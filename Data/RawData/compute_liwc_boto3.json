[{"repo": "boto3", "type": "elite", "title": "", "number of text": 931, "text": "  We only do that particular bit of logging on resources, not clients, so even if we did add a log sort feature it wouldn't be very broad. However, you can do your own logging using the event system. This is better because you can do whatever you want, and it can apply to every call made in both resources and clients. Here's an example:\r\n\r\n```python\r\nimport json\r\nimport logging\r\n\r\nimport boto3\r\n\r\nLOG = logging.getLogger(__name__)\r\n\r\n\r\ndef log_sorted_args(params, **kwargs):\r\n    log_message = 'SORTED PARAMS: %s' % json.dumps(params, sort_keys=True)\r\n    LOG.debug(log_message)\r\n\r\n\r\nboto3.set_stream_logger('')\r\nsession = boto3.Session()\r\nsession.events.register('provide-client-params.*.*', log_sorted_args)\r\n\r\ns3 = session.client('s3')\r\ns3.list_objects_v2(Bucket='my-bucket', Delimiter='/')\r\n\r\n\r\n# You can also add it to the default session\r\nif boto3.DEFAULT_SESSION is None:\r\n    boto3.setup_default_session()\r\nsession = boto3.DEFAULT_SESSION\r\nsession.events.register('provide-client-params.*.*', log_sorted_args)\r\n\r\ns3 = boto3.client('s3')\r\ns3.list_objects_v2(Bucket='my-bucket', Delimiter='/')\r\n\r\n\r\n# Or you can add it to individual clients / resources\r\nclient = boto3.client('s3')\r\nclient.meta.events.register('provide-client-params.*.*', log_sorted_args)\r\nresource = boto3.resource('s3')\r\nresource.meta.client.meta.events.register(\r\n    'provide-client-params.*.*', log_sorted_args)\r\n```\r\n\r\nWhenever you make a call you would see something like this:\r\n\r\n```\r\n2017-10-26 09:50:56,236 __main__ [DEBUG] SORTED PARAMS: {\"Bucket\": \"my-bucket\", \"Delimiter\": \"/\"}\r\n```\r\n\r\nWould that work for you? Excellent! If you have any other questions or issues, let us know!  I'm not sure what the problem is here. I would recommend [contacting support](https://console.aws.amazon.com/support/home#/) or otherwise asking on StackOverflow where somebody else may have run across the same issue as you.  Nice catch! I'll forward this along to the doc team.  I would defer to the part of the docs that says you can't change the subnets for an NLB. The `AllocationId` showing up is an artifact of the `SubnetMappings` being a shared structure which is also used in [`create_load_balancer`](http://boto3.readthedocs.io/en/latest/reference/services/elbv2.html#ElasticLoadBalancingv2.Client.create_load_balancer). I'll forward this on to the doc team to see if they can make this more clear. Thanks for the feedback!  `request_spot_instances` unfortunately doesn't provide a way for you to auto-terminate instances. Spot instances are only terminated in two cases:\r\n\r\n1. The current spot price exceeds your bid\r\n2. You terminate them yourself\r\n\r\nFor other api specific questions, I would recommend asking on StackOverflow (with the `boto3` tag) so you can take advantage of community knowledge.  That's the logging for the http connection pool, not the logging for the threads. You can increase/decrease the size of that pool using `max_pool_connections` ([docs](http://botocore.readthedocs.io/en/latest/reference/config.html)). The other threads will still be doing things like scheduling and io so having those out of sync isn't necessarily bad.  If you run `which pip` and `which python` do they point to the same python installation? What is the output of:\r\n\r\n`python -c \"import os; print(os.path.realpath('/usr/local/bin/python3'))\"`\r\n\r\nIt looks like you're on OSX. If you're using homebrew's python that should look like `/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/` whereas the python in your traceback seems to be located somewhere around `/Users/noahbragg/Library/Python/3.6/`. So that looks like the path to a system level python, not brew python. The traceback seems to match the system python path. The python your `pip3` is pointing at *could* be a different python, but it doesn't seem likely.\r\n\r\nYou say you're new to python. Are you familiar with virtualenv? If not there's a short guide [here](https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments). That should help you out with isolating environments. Closing issue due to inactivity.  `aws_session_token` is not a boolean. Aside from that I'm unable to reproduce the first issue, it likely has something to do with your python version. Closing due to inactivity. If you're still having problems, feel free to open a new issue and we'll get back to you!  For service usage questions, you should ask on StackOverflow or ask AWS Support. Unfortunately I don't know the answer to your question off the top of my head.  This is likely an issue with your lambda function code. I used the following and was unable to reproduce:\r\n\r\n```python\r\ndef lambda_handler(*args, **kwargs):\r\n    return {'data': 10}\r\n```\r\n\r\nFor specific help with your function code, I would recommend asking on StackOverflow with the lambda and boto3 tags.\r\n\r\nIf you discover any issues with boto3, feel free to open another issue.  Unfortunately I don't know the answer to this off the top of my head. I would recommend asking on StackOverflow (with the boto3 tag), or one of the other [community support channels](https://github.com/boto/boto3#getting-help).  This looks like an issue on the service side of things, I'll forward it on to them. Thanks for reporting!  You will still need the main client to have permission to copy the objects in the source account. The source client is used for listing / describing the source objects. @lokureddy [Here](http://docs.aws.amazon.com/AmazonS3/latest/dev/example-walkthroughs-managing-access-example2.html)'s an example of granting cross account permissions. The client you call `copy` with needs to have `GetObject` permissions at least for the objects in question. To be clear, your code is perfectly fine. You can also use a single client if you would prefer, though you would need to give it permission to call `HeadObject` as well:\r\n\r\n```python\r\nsess = boto3.session.Session('account2')\r\ns3 = sess.client('s3')\r\ncopy_source = {'Bucket': 'source-bucket', 'Key': 'source-key'}\r\ns3.copy(copy_source, 'dest-bucket', 'key')\r\n```  @massenz That's interesting. So you encountered that error and then continued waiting? It looks like that's a designated terminal state, and on my own machine it does terminate there.  So I think you linked the documentation for the `describe_addresses` method. According to the `describe_instances` [documentation](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.describe_instances), I think if you use the `ip-address` filter you can query instances based on public IP's. Let us know if that helps.  That would make sense. Also thanks for the PR to fix it: https://github.com/boto/boto3/pull/1300. We will take a look at that.\r\n\r\nOne thing that I worry about is if this is the case for the managed uploader, there is also the same problem for the lower level `put_object` and `create_multipart_upload` methods. I think we need to do more digging into this to see what the correct approach may be.  Yes. My guess is that you need to upgrade `botocore` though in order to be able to use it as my guess is that you are using an old version of it. Let us know if that works. Closing issue due to inactivity.  Yeah so increasing the number of retries will not help your situation if you are reaching a limit in the number of API's you are trying to import. There is nothing much we can do from the boto3 side as all of this logic is done server side. To request that the limit gets increased server side, I would recommend opening up a conversation on API Gateway's [developer forum](https://forums.aws.amazon.com/forum.jspa?forumID=199) or contact support to see if they can help you get the additional resources as stated in the error message you get back.  What version of `boto3` or `botocore` are you using? You may need to update your version for both. Looking at the boto3 [documentation](https://boto3.readthedocs.io/en/latest/reference/services/mturk.html#MTurk.Client.send_test_event_notification), it looks possible to send test notifications through SNS. Could you possibly show how you are making your mturk client call and what error you are getting back (if any)? Ahh yeah the `stable` version of the docs do not get rebuilt as often as the `latest` so that might explain why it is missing. But I am glad it is now working for you.  Would not be opposed to adding support for custom headers. Could you elaborate on why you need to set the `Content-MD5` for a GET request? Typically you would not need to set that a header for GET's and this can be seen in the documentation you linked where the `StringToSign` in the example had no Content-MD5 included (i.e. it was just an empty string).  This appears to be an issue with the mturk service and not boto3.\r\nYou might want to try opening a [support ticket](https://console.aws.amazon.com/support/home#/) to see if the service team can provide any assistance.  I'm okay with leaving this open for a bit for visibility. I think I would prefer to track it in the issue you linked. If someone runs into an issue related to this, it will be linked in both GitHub issues. Given we prefer to keep issues open in this repository if they are actionable in boto3, I'm closing this issue.  It's failing boto's client side validation. Seems like there was some changes around this service fairly recently which leads me to believe that you might be using a version of botocore/boto3 that is too old and doesn't know about this. Is your boto3 up to date?  You appear to be correct:\r\nhttps://github.com/boto/boto3/blob/dffeb393a795204f375b951d791c768be6b1cb8c/boto3/dynamodb/table.py#L138-L140\r\nDoesn't set or allow customization to set `ReturnConsumedCapacity`. \r\n\r\nConsidering the `put_item` call will only sometimes call `batch_write_item` how would see a feature like this working?  If the service isn't returning them in the response there isn't much we can do at the boto level.\r\nCould you post debug logs of the `describe_replication_groups` call by adding `boto3.set_stream_logger('')`?  Can you get us debug logs of this behavior? @giovadifiore A couple questions:\r\nDoes a minimal boto program pick up on the proxy configuration from the env?\r\nSomething simple like:\r\n```\r\nimport boto3\r\ns3 = boto3.client('s3')\r\ns3.list_buckets()\r\n```\r\nAre you importing requests or urllib3 yourself before using boto? Would it be possible to get a minimal code sample that reproduces the issue? It seems that there might be a potential collision importing requests and boto3 as we vendor requests and urllib3. Fairly recently requests dropped their vendored version of urllib3, and it seems that you're using that version. This will likely take some digging to figure out.\r\n\r\n@giovadifiore \r\nWhen you use boto3 in a script by itself (like the one above) does it use your proxy? Closing due to inactivity.  I'm not sure what wiki page you mean? Do you mean the documentation? Thats not a wiki its generated from the models. So botocore will raise a ClientError which you can always catch for any sort of issue you can then check the code. There is also a newer style of error catching that you can do using the errorfactory which will create an error class based on the codes returned. This was added [here](https://github.com/boto/botocore/pull/1113). This is not currently documented, we will need to update our documentation generator to add this to the docs. I will mark this as a documentation feature request.  This documentation is from the SNS team, not specific to boto3 and not something that we maintain. So I'm going to close this since we have no ability to change this, but I will pass your feedback along to the SNS team.  We use models we get from EC2 so for this to be exposed they would need to include it in their model. So this would be a feature request for the EC2 team which you can do by opening a [support ticket](https://console.aws.amazon.com/support/home#/)  Marking as a feature request.  Could we get debug logs to see what the response looks like coming over the wire?  This is currently a feature request in both the cli and botocore. I think it makes most sense in botocore since that would work for both, could you go thumbs up that feature request https://github.com/boto/botocore/issues/1255 so we can track the interest in this feature more easily? \r\n\r\nI'm going to close this one as a duplicate.  The connection messages come from the requests library.\r\nYou can change the logging level like so:\r\n```\r\nboto3.set_stream_logger('botocore.vendored.requests', logging.ERROR)\r\n```\r\n\r\nIn general you can change the logging level of any namespace using the above function.\r\nHere are the docs for [set_stream_logger](http://boto3.readthedocs.io/en/latest/reference/core/boto3.html#boto3.set_stream_logger).  Both boto3 and the CLI use the same library to make AWS API calls (botocore) and I don't think this is possible in the CLI.\r\n\r\nThe service teams typically manage their release cadence of when SDKs support new features.  I would suggest asking on the [RDS forums](https://forums.aws.amazon.com/forum.jspa?forumID=60).  Someone there should be able to give you a more definitive answer.  I think this would be useful.  Maybe it should be extracted out into a separate library so people that just want to make requests to their API gateway endpoint don't have to pull in all of boto3 (the code for signing requests would be much smaller than all of boto3/botocore).\r\n\r\nThoughts?  Marking this as a feature request.  I've confirmed this issue. Unfortunately, this seems to be the expected behaviour and I'm not sure that we can change this as it would be backwards incompatible.\r\nhttps://github.com/boto/boto3/blob/ece6bf3afbc1d67763ce1f95ad6249fd331c96b1/boto3/resources/factory.py#L519-L526\r\nAny resource action that is not a load will clear the cached data away, and a subsequent call to an attribute on a resource will require a load. This definitely does complicate thread safety as you mention as even actions that do not mutate a resource will cause the client side resource object to mutate, even if to the same data as before. This doesn't seem to be documented so at the very minimum this will have to be noted in the docs. \r\n\r\nThis may be something that we can allow customers to opt out of if you would like to pose this as a feature request. @cybojanek You're definitely correct the race condition is on the resource, the bucket. The model of concurrency is irrelevant. You're also correct that you can't trust the `obj` after the `obj.get()` as the cached data is cleared and another head is issued upon next attribute access (in which time the object may have changed).   We just expose the raw API as a Python library. Something like this would require an API update from the service team. You should try opening a ticket with [AWS Support](https://console.aws.amazon.com/support/home#/) to get in touch with the service team and request this update.  I think the waiter does wait until the state is `available` but the data in your `newimage` resource is stale. A few questions:\r\nHow does `instance[0].wait_until_running()` prove that the behavior is different? The behavior should be the same whether you access the waiter through a boto3 resource or a botocore client. In both cases the related resource will not refresh. \r\n\r\nI would be interested in seeing a minimal example that fails if you have the time to provide one. In my testing I haven't been able to find any behavior that surprised me. My previous statement was only half correct, my apologies. While it is true that the waiter accessed via a boto3 resource will not refresh the resource, it does clear the cached data. This means that the next attempt to access an attribute on the resource will force it to be hydrated again. Thus the difference in behavior here ultimately comes down to accessing the waiter via a `boto3.Resource` or directly from `botocore`. Adding the waiter you're using to the resource definition may be one route to make the behavior consistent. As a workaround for now you could manually refresh your resource after the waiter has ended.\r\n\r\nWe need to add the `image_available` waiter to the image resource. ```\r\nnewimage.load()\r\n```\r\nWill force the resource to refresh its cached values. Closing this due to inactivity. Feel free to re-open it if you still need help.  You can try using the `pip download` command to get a collection of .whl files for all of boto3 and its dependencies.  You can then extract those files in the same CWD as your app code.\r\n\r\nHowever, there's a lot of edge cases that's missed in that scenario, especially around binary whls.\r\n\r\nAnd as mentioned in this issue, while docker may not always be appropriate, it is a common way that people solve this issue so if that's feasible you can do that (and docker is installed by default on Amazon Linux on EC2).\r\n\r\nI'm going to go ahead and close out this issue.   As mentioned in our [README](https://github.com/boto/boto3/blob/develop/README.rst#getting-help), questions like these are best suited for stackoverflow and you're likely to get a more knowledgeable answer, especially about non boto3-related questions.  That error is actually coming back from the ec2 service meaning it's not something we can control in boto3.\r\nI would try opening a ticket with AWS support to see if the ec2 service team can help you out:\r\nhttps://console.aws.amazon.com/support/home#/ \r\nMy guess is they'll be able to update the documentation for this but not much else. Once they update their documentation upstream, we'll get that in boto3 documentation as well.  Not sure why this would fail, but a `SyntaxError` is surely not related to boto3. For your sanity, I validated that your sample code is syntactically correct for both `2.7` and `3.6`.  The issue is in `\"/var/task/concurrent/futures/_base.py\"` which I'm going to assume is some kind of issue with the image being used to run the lambda function. That is, the environment is misconfigured.  I think you should be able to do this by setting the `endpoint_url` when creating a client to your domain. You'll also need to add a config for `S3` by passing `config=Config(s3={'addressing_style': 'path'})`\r\n\r\n```\r\nimport boto3\r\nfrom botocore.client import Config\r\n\r\ns3 = boto3.client('s3', endpoint_url='https://yoururl.com', config=Config(s3={'addressing_style': 'path'}))\r\nurl = s3.generate_presigned_url(ClientMethod='get_object', Params={'Bucket':'bucket', 'Key':'key'})\r\n``` Good catch on the HTTP(S) thing. I'm glad you got something working for your use case!  Here's a couple of ways to do this:\r\nPreferably you would use [shared configuration](http://boto3.readthedocs.io/en/latest/guide/configuration.html#shared-credentials-file) which will automatically load the credentials based on the `default` profile or the specified profile name passed to the `Session` or `Client`. This includes [assuming a role](http://boto3.readthedocs.io/en/latest/guide/configuration.html#assume-role-provider) and will handle what your function does automatically. Something like:\r\n```\r\n# In ~/.aws/credentials:\r\n[development]\r\naws_access_key_id=foo\r\naws_access_key_id=bar\r\n\r\n# In ~/.aws/config\r\n[profile crossaccount]\r\nrole_arn=arn:aws:iam:...\r\nsource_profile=development\r\n```\r\nThen just pass `profile_name=crossaccount` to your `Client` or `Session` and boto will sort out assuming a role for you.\r\n\r\nOr update your assume role code to apply the credentials to a [session](http://boto3.readthedocs.io/en/latest/reference/core/session.html) and then use that session to create clients. Though hard coding your credentials in your source code is definitely not recommended.  Awesome. I'm glad you got it working for your use case.\r\nJust curious, is there any reason you chose not to use the shared credential configuration?  Thanks for bringing this to our attention.  This sounds like a service related question. Your best bet is probably going to be stack overflow or the likes. You can see links to community help resources [here](https://github.com/boto/boto3#getting-help). I don't believe the EC2 service has an API for copying security groups to another region. You'll have to combine describes and creates to 'copy' them. Boto is just a thin wrapper around the service APIs exposing them as more idiomatic python. This would be a feature request for the EC2 service team and not Boto. We avoid implementing higher level logic on top of the service APIs because it causes feature disparity between the SDKs. If the service team implements the feature then all AWS SDKs will get the feature.  I've forwarded your feedback to the MTurk team. Thanks for the report.  I've forwarded your feedback to the MTurk team. Thanks for the report.  What behavior are you expecting from this?  The `Body` parameter takes a byte string or a file-like object. It seems that you're passing the file path as the body which is likely uploading that string as the contents, thus the md5 is of the file path not the actual file contents.  I can definitely agree that this is confusing. I know that we definitely add things to shared docs on occasion but I'm not sure if we ever remove anything. I'll see what we can do to fix this up. Thanks for the report!  Unfortunately we don't have the bandwidth to address these kinds of issues at the moment. Your best bet is going to be getting help from one of the community resource or the AWS support forums. Links to those can be found [here](https://github.com/boto/boto3/#getting-help). If you find that this is truly a bug in the SDK feel free to re-open this issue or open another issue with more detail on the exact bug.  The guide is a little confusing, but what it's saying is that if you structure your buckets using that formatting then listing all items for a certain date is difficult. You will need to ask for *every* prefix in the `[0-f][0-f][0-f][0-f]` range. The `Prefix` filter does not understand range syntax.  Marking this as a feature request. Thanks for your input!  Thanks for bringing this to our attention. I can confirm that the links are broken. I'll reach out to the doc team to get this issue fixed.  Rebased against develop and merged via https://github.com/boto/boto3/commit/7b187d456a7b8529504902e5c21050c9a4612a62  On macOS 10.12.5 with Python 3.5.2 I wasn't able to reproduce this with the given code.\r\n\r\nThis is what I tried:\r\n```python \r\nimport boto3\r\nfrom multiprocessing import Process\r\n\r\ndef test(count, attributes=['ALL'], region='eu-west-1'):\r\n    session = boto3.session.Session()\r\n    reko = session.client('rekognition', region)\r\n    print(reko)\r\n\r\nfor count in range(5):\r\n    p = Process(target=test, args=(count,))\r\n    p.start()\r\n```\r\n\r\nAre you sure boto3 is causing the issue? The multiprocessing library actually doesn't use threads but spawns sub-processes. This is different from threads in that the sub-processes have their own memory space and thus sharing variables between them is more complicated than when using threads. Seeing as this is crashing due to a segfault I'm inclined to think there's an error somewhere in your multiprocessing code that's unrelated to boto3. Let me know if I can provide anymore assistance!  I don't see any reason that you shouldn't be able to use multiprocessing. That decision is really up to you though. Without more details or a minimal sample that crashes there's not much we can do to help fix the segfault. Are you sharing any variables between the processes at all? After some discussion, it seems that others have had issues on Python 3.5 using multiprocessing. Would it be possible to try Python 3.6? Hm, that's unfortunate. I'm not sure there's anything we can do here as this seems to be a bug in python 3.5. You could try updating to python 3.5.4 to see if that fixes anything. Let me know if you have any other questions.  I think the [AutoScaling](http://boto3.readthedocs.io/en/latest/reference/services/autoscaling.html) service is what you're looking for. Let me know if you have any other questions! @Weilor Did the `ApplicationAutoScaling` service work out for you? Good to hear!  This is not possible for us to handle automatically as it's impossible to accurately detect url encoding. I'm not really sure if that's what you're asking for though. We don't control the s3 event api or the lambda handlers so there's really not anything we can do here. I would try asking the s3 or lambda team on [AWS support](https://console.aws.amazon.com/support/home#/).\r\n Closing this out here as there's no action item for us. Let me know if you have any other questions.  Marking as a feature request.  It might be challenging to figure out when we should be masking the response body. And ideally we'd only be masking the things are private instead of the entire response body.  Seems reasonable to me.  Marking as a feature request.  Yep. All you need to do is the following:\r\n```python\r\n>>> import boto3\r\n>>> from botocore import UNSIGNED\r\n>>> from botocore.config import Config\r\n>>> s3 = boto3.client('s3', config=Config(signature_version=UNSIGNED))\r\n```\r\n\r\nAnd from there any request made from the client will not be signed. Let us know if you have anymore questions.  For the actual example, the content in the example is sourced from this [JSON model](https://github.com/boto/botocore/blob/develop/botocore/data/lambda/2015-03-31/examples-1.json#L430-L463). While it is possible to change the value there, it is better to get it changed in the upstream source that the change does not get clobbered if we pull in more Lambda examples upstream.\r\n\r\nIf you have submitted a ticket to support, that is probably the best way to make sure it gets updated upstream. Once it does get fixed upstream, we will pull in the update which will fix the boto3 docs. Let us know if you have anymore questions.  I would recommend upgrading your version of `botocore`. Boto3 draws most of its client functionality from `botocore`. So `botocore` may need to be upgraded to pick up this functionality in `boto3`.\r\n\r\nWith regards to AWS Lambda, the case may be that Lambda has not upgraded their version of `botocore` as well. To be able to use this client method, you may have to include a more up to date version of botocore and boto3 in your deployment package to AWS Lambda.\r\n\r\nLet us know if that helps.  I would recommend using the waiter interfaces instead of using your own solution. So you have a couple of waiter options available to you. If you want to wait for the CloudFormation stack to be created or updated, I would recommend using the [StackCreateComplete](https://boto3.readthedocs.io/en/latest/reference/services/cloudformation.html#CloudFormation.Waiter.StackCreateComplete) or [StackUpdateComplete](https://boto3.readthedocs.io/en/latest/reference/services/cloudformation.html#CloudFormation.Waiter.StackUpdateComplete) waiters. \r\n\r\nIf you are concerned with actually being able to start using the instance (i.e. it is in the ok state), you can use the [InstanceStatusOk](https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Waiter.InstanceStatusOk) waiter to wait for the instances to reach an ok state.\r\n\r\nThis is hopefully better than having to maintain your own custom solution. Let us know if that helps.  Hey sorry this took so long to get to, I labelled it and forgot to respond.\r\nI'm actually not sure why that field is no longer present.\r\nI have verified that field still exists and it's possible for Boto3 to support it.\r\nI'll reach out to the S3 service team to see what we can do to get that field updated and supported in Boto3.  Seeing as we can't do much here and nobody else has reported anything I'm going to close this.  You can use the [ResourceGroupsTaggingAPI](http://boto3.readthedocs.io/en/latest/reference/services/resourcegroupstaggingapi.html) api to query directly for any resources with certain tags, which will include ALBs and Target Groups.  You can use sqs long polling to accomplish what you described:\r\nhttp://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html\r\n\r\nhttp://boto3.readthedocs.io/en/latest/guide/sqs-example-long-polling.html\r\n  I am not very familiar with ECS but it looks like from the docs that [list_tasks](http://boto3.readthedocs.io/en/latest/reference/services/ecs.html#ECS.Client.list_tasks) and [list_services](http://boto3.readthedocs.io/en/latest/reference/services/ecs.html#ECS.Client.list_services) take a cluster argument. I would assume when you click a cluster in the console it is making calls to those APIs to fetch the related information for that cluster and displaying the output. \r\n\r\nThis kind of service related question is better suited for either stack overflow or the [service forum itself](https://forums.aws.amazon.com/forum.jspa?forumID=187). We maintain boto3 but we don't necessarily have knowledge of all the APIs themselves as there are quite a few of them. `list_services` does not have service/task name arguments. `list_tasks` has a serviceName argument but it appears to be an optional.  That is a fairly recent addition to rekognition so I would suggest upgrading to the most recent version using `pip install -U boto3`.  boto3 1.0.0 does not have resources. Install the most up to date version with \r\n`pip install -U boto3`  Which firehose API call is this and what exactly is trimmed? Sorry I don't quite follow what is being trimmed and why, I assume this was all just dumped to stderr?  On the current version of botocore this should throw a `MalformedPolicyDocumentException` which you can catch like so:\r\n\r\n```python\r\nimport boto3\r\nimport botocore\r\nimport json\r\nclient = boto3.client('iam')\r\npolicy_document = {\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"s3:Put*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:s3:region:account:mybucket\"\r\n            ]\r\n        }]\r\n}\r\ntry:\r\n    client.create_policy(PolicyName=\"my_policy\",\r\n                         PolicyDocument=json.dumps(policy_document))\r\n\r\nexcept client.exceptions.MalformedPolicyDocumentException as e:\r\n    print(e)\r\n\r\n```\r\nThis inherits from `ClientException` so you should be able to catch that as well.\r\n\r\nCan you upgrade and see if that fixes it? Glad that worked for you!  What version of botocore is this using? I get a `ClientError` when I run your code on the most recent version. Awesome!  It is not possible as s3cmd is a 3rd party tool. Adding another layer to our config loading process that provides the same information would introduce a lot more complexity so it's not something we are looking to do at the moment.  You need to make sure that bucket's CORS config is set to accept the `content-type` header.\r\n\r\nWhen you make the `PUT` request ajax makes a preflight `OPTIONS` request to see if the request it is about to make is allowed. S3 will check the preflight headers against that buckets cors config object to ensure everything is allowed. Since by default the `Content-Type` header is not in the list of allowed headers the preflight request will fail and ajax will not make the PUT request.\r\n\r\nHere is a cors config document that works for me with your script:\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<CORSConfiguration xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">\r\n<CORSRule>\r\n    <AllowedOrigin>*</AllowedOrigin>\r\n    <AllowedMethod>GET</AllowedMethod>\r\n    <AllowedMethod>PUT</AllowedMethod>\r\n    <MaxAgeSeconds>3000</MaxAgeSeconds>\r\n    <ExposeHeader>GET</ExposeHeader>\r\n    <ExposeHeader>PUT</ExposeHeader>\r\n    <AllowedHeader>Authorization</AllowedHeader>\r\n    <AllowedHeader>Content-Type</AllowedHeader>\r\n</CORSRule>\r\n</CORSConfiguration>\r\n```\r\nAll I did was add that last `<AllowedHeader>Content-Type</AllowedHeader>` line to the default one.\r\n\r\nThat config worked for the following two scripts to presign the url and upload the image:\r\n\r\nGenerate the presigned url:\r\n```python\r\nimport boto3\r\nimport botocore\r\n\r\n\r\ns3_con = boto3.client('s3')\r\nurl=s3_con.generate_presigned_url('put_object',\r\n                                  Params={'Bucket': 'bucket_name',\r\n                                          'Key':'img.jpg',\r\n                                          'ContentType': 'image/jpg'\r\n                                  },\r\n                                  ExpiresIn=600)\r\nprint(url)\r\n\r\n```\r\n\r\nAjax call to upload:\r\n```javascript\r\n\r\npresigned_url = \"...\";\r\n\r\nfunction sendFile(e) {\r\n    e.preventDefault();\r\n\r\n    // get the reference to the actual file in the input\r\n    var theFormFile = $('#theFile').get()[0].files[0];\r\n\r\n    $.ajax({\r\n      type: 'PUT',\r\n      url:presigned_url, \r\n      contentType: 'image/jpg',\r\n      processData: false,\r\n      data: theFormFile\r\n    }).success(function(file,response) {\r\n      console.log(\"file=>\",file);\r\n      console.log(\"response=>\",response);\r\n\r\n      alert('File uploaded');\r\n    }).error(function() {\r\n      alert('File NOT uploaded');\r\n      console.log( arguments);\r\n    });\r\n  }\r\n```  Duplicate of https://github.com/boto/botocore/issues/1248  I don't really know what you are doing since that line you provided is not valid python code. I don't know what `salt-run` means. Is this on a command line? How/where are you running this line? @mcarlton00 Did you mean this?\r\n```\r\nStatus: \"Enabled\"\r\n```\r\n\r\n@bhanukumar22 Were you able to resolve this issue or does an empty prefix and capital `Enabled` status work for you as well? @bhanukumar22 Awesome! Glad to hear that.  Why do you say it is inconsistent? They are different, one is in the user defined metadata which is always prefixed with `x-amz-meta-` so it doesn't collide with any other names. The other is for setting the content type.\r\n\r\nOur `extra_args` parameters map to headers outlined here:\r\nhttp://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\r\n\r\nMetadata holds no special meaning and is simply to store your own meta data. The others have defined meanings in the API defined in that link above.  Hmmm thats super weird `s3api delete-object` would work and `s3.delete_object` wouldn't. They use the exact same logic in botocore under the hood to perform that API call.  Body must be a `bytes` or a `file` type as per the [documentation](http://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Bucket.put_object). Py2 just happens to not know the difference before a string and bytes, which means it kind of \"works\" as long as your bytes all happen to fall in utf-8.  Raw binary will only work in python3, you appear to be using python 2 so you must wrap your binary data in the special `boto3.dynamodb.types.Binary` type detailed [here](http://boto3.readthedocs.io/en/latest/reference/customizations/dynamodb.html#ref-valid-dynamodb-types).\r\n\r\nBelow is a working code segment for both py2 and py3:\r\n\r\n```python\r\nimport boto3\r\nimport uuid\r\nfrom Crypto.Cipher import AES\r\nfrom  boto3.dynamodb.types import Binary\r\n\r\nboto3.set_stream_logger('')\r\n\r\ntable = 'test-table'\r\nmessage = 'this is super seecrit'\r\nsalt = 'this is the salt'\r\niv = 'this is the iv23'\r\n\r\nobj = AES.new(salt, AES.MODE_CFB, iv)\r\ncrypto_text = obj.encrypt(message)\r\nprint(crypto_text, type(crypto_text))\r\n\r\n\r\nitem = {\r\n    'uuid': str(uuid.uuid4()),\r\n    'cryptotext': Binary(crypto_text)\r\n}\r\n\r\ndynamodb = boto3.resource('dynamodb', region_name='us-east-1')\r\ntable = dynamodb.Table(table)\r\ntable.put_item(Item=item)\r\n\r\n```\r\n\r\nHope that helps!  Typically we would like to see a new unit test that will exercise the problem, which should pass with the PR and fail without it. Can you add a test like that? Yep!  @thomasmortensson Thanks for the PR (#1109), lets move the discussion over there so it's all in one place.  This is a question for [stack overflow](https://stackoverflow.com/questions/tagged/boto3), we do not have the bandwidth here to answer usage questions here.  You can modify your timeout using a [config](https://botocore.readthedocs.io/en/stable/reference/config.html) object and passing in whatever timeout values make sense for your particular lambda function's timeout (for example like you said a few seconds longer than the lambda function's to account for overhead.)\r\n\r\nThe retries you are seeing are not synced with your lambda function's timeout so it is getting re invoked. Does that meet your use case or do you still want this feature request? I will mark this as a feature request since I think its pretty justified based on the lambda use case.  request  Yes that is correct IDs and Names are different.  This would be a feature request for EC2 as we do not design the APIs. You can raise this with EC2 on their forums: https://forums.aws.amazon.com/forum.jspa?forumID=30 \r\n  What would be a better error in this case?  This is a question about service usage, which is a for [stack overflow](http://stackoverflow.com/questions/tagged/boto3).  Thanks for reporting this! As you may have suspected we do not maintain this particular piece of documentation as it is shared between all the SDKs and the service itself. I have raised this documentation issue with IAM, thanks again!  I believe this is a duplicate of #443, so I'm going to close this issue in favor of that one and encourage you to go thumbs up that issue.  This error is originating from the network, somewhere in the network path something is resetting the TCP connection and causing that error. Since this only occurs on your server, it's likely something amiss with the network that the server itself is connected to.  Hi there!\r\n\r\nYou're looking at the documentation for the IAM client object, but you're using the IAM Resource API. The resource API is a higher level API over the clients, and you can see the documentation for that located at https://boto3.readthedocs.io/en/latest/reference/services/iam.html#IAM.ServiceResource.create_user.  Other than the change to using ``sys.argv``, this looks good to me. The simplification was largely that it allows you to pass additional things besides paths to the script now as well. Thanks!  This looks good to me as well, going to go ahead and merge this in, thanks!  I made the call myself and looked at the debug logs:\r\n```\r\n2017-03-31 13:57:58,517 botocore.endpoint [DEBUG] Making request for OperationModel(name=DetectLabels) (verify_ssl=True) with params: {'body': '{\"Image\": {\"S3Object\": {\"Bucket\": \"x.x.x\", \"Name\": \"1.jpg\"}}}', 'url': u'https://rekognition.us-west-2.amazonaws.com/', 'headers': {'User-Agent': 'Boto3/1.3.1 Python/2.7.10 Darwin/15.6.0 Botocore/1.5.0', 'Content-Type': u'application/x-amz-json-1.1', 'X-Amz-Target': u'RekognitionService.DetectLabels'}, 'context': {'client_region': 'us-west-2', 'has_streaming_input': False, 'client_config': <botocore.config.Config object at 0x10a385d50>}, 'query_string': '', 'url_path': '/', 'method': u'POST'}\r\n```\r\nAnd the request boto3 is sending looks correct. So It looks like it may be an issue with the service. It is probably worth it to ping on that thread you linked as it seems that Rekognition team has been active on it.  Yep! The recommended way would be to use the event system. Here is documentation on how you can leverage this: https://boto3.readthedocs.io/en/latest/guide/events.html#creating-resource-class. Hope this helps.  What version of boto3 are you using? This looks similar to a threading issue that we got with celery: https://github.com/boto/boto3/issues/814. The correspondence is pretty long and should have a lot of the background information. As a possible workaround, try setting the ``use_threads`` option to ``False``. Here are some upgrading notes about it: https://boto3.readthedocs.io/en/latest/guide/upgrading.html#id1.\r\n\r\nLet us know if that helps.  @abuccts Could you include debug logs from the error you are seeing? You can do this by adding the line ``boto3.set_stream_logger('')`` to the line before you make the client method call.  Yeah it looks like we will just need to re-sync our documentation from upstream to correct this as it looks like it has been updated in the API documentation.  @skylazart What version of ``s3transfer`` are you using? I have a feeling you will need to upgrade that 0.10.0 as it is listed in the [setup.py](https://github.com/boto/boto3/blob/develop/setup.py#L19)  I replied back on the Stack Overflow post. Let's keep the conversation there as we are trying to limit open GitHub issues to bugs and feature requests as shown in the boto3 [README](https://github.com/boto/boto3/blob/develop/README.rst).  So with S3's API if the source key does not exist, it will error out as you commented. It will not create a key on your behalf if the the source key does not exist. If you want it to not error out, you will have to check if the source key exists and copy it if it does exist. Unfortunately not. There is a open feature request where this would fall under: https://github.com/boto/boto3/issues/358. As of now, you would have to list through all of the objects in the source bucket and copy them over to the specified destination prefix. Yep. No problem. I'm going to go a head and close the issue. If you have any more comments/question, feel free to reopen the issue.  Can you give me a little more context on what you are doing (such as a code snippet), what is the expectation, and what is actually getting returned?  @sumgan\r\n\r\n@kapilt is correct that it needs to be a list of dictionaries.\r\n\r\n You are going to have to download those json files and dump them into the client call and that should work assuming that the JSON file is correct.\r\n\r\nAs mentioned in our [README](https://github.com/boto/boto3/blob/develop/README.rst#getting-help), I would recommend moving any more usage questions to Stack Overflow. We are trying to reserve open issues to bugs and feature requests.  Yeah in general if you know the region of the bucket, you set that region when you instantiate the client to ensure you do not hit redirect errors and minimize the amount of calls being made. Boto3 does a best effort in trying to redirect you to the correct location, but it may not happen due to whatever region the bucket is located or the name of the bucket.\r\n\r\nAssuming you are not using signature version 4 for your signing method, one thing that you can try is setting your ``signature_version`` to ``s3v4`` when you create your [client config](https://github.com/boto/botocore/blob/develop/botocore/config.py#L20). It has a lot of logic related to redirecting sigv4 signed requests that should help you out. The one caveat is that if you set your region incorrectly, you may initially be making extra API request to locate the correct region of your bucket. So in the end, it is best to set the region correctly in the first place.  Closing due to inactivity  You're right that they're not available in any of the SDKs at the moment. Unfortunately I cannot comment on when SDK support will be released. In the meantime, be aware that they could potentially make breaking changes to their api at any time.  The error you're getting in your first example is related to the type, which should be a string not an int. Unfortunately I don't know the answer to your question. To ask questions about service usage, you'll be better served opening a support ticket or asking on StackOverflow (with boto3 tagged). You can see some of our other resources [here](https://github.com/boto/boto3#getting-help).  That definitely seems very useful, we'll look into adding these.  Ah, I think they're documenting how you would do it in the CLI, which is strange. So in the CLI you would use that to reference a file on your local disk. `boto3` and the other sdks don't have that behavior, however. I'll let the service team know about this documentation issue and ask for clarification.  Looking through your script, it makes sense that you would be seeing that. What is happening is that for this part of the code:\r\n```python\r\nfor instanceId in instanceList:\r\n    instance = ec2.Instance(instanceId)\r\n    count = 0\r\n    maxTries = 3\r\n    sleepTimeOut = 3\r\n    while count < maxTries:\r\n        if not instance.meta.data:\r\n            result = int(maxTries - count)\r\n            print(\"INFO: boto3 known bug trying again in \" +\r\n                  str(sleepTimeOut) + \" seconds for \" +\r\n                  str(result) + \" more time(s)\")\r\n            count += 1\r\n            time.sleep(sleepTimeOut)\r\n```\r\nYou are creating a brand new, unloaded Instance object on ``instance = ec2.Instance(instanceId)``. So if you access ``meta.data`` on the instance, the value will be ``None`` because there has been no API call made to load that data.\r\n\r\nIf you want to actually have the data available through ``meta.data`` I would recommend calling ``load()`` on the instance object or re-use the instances collected through the filtered collection as those are loaded as well. Typically the data get loaded if you access an attribute on the Instance such as ``tags`` that requires loading. The ``data`` attribute is a more lower-level concept if you are interested in the pure response that backs the resource and has no automatic loading concept on access.\r\n\r\nLet me know if that makes sense or if this helps.  @hongchaowang did you try exactly what @orenmaor mentioned? That should work as it is similar to what I suggested in this issue: https://github.com/boto/boto3/issues/951 where you do not need to provide a presigned url for that method since the value gets auto-populated. If you provide ``PreSignedUrl`` at all, ``boto3`` will ignore the ``SourceRegion`` parameter and use the unmodified ``PresignedUrl`` that you provided.  @ramkumar-hgst \r\n\r\nSo the instructions you followed were for developmental purposes. If you are planning to do that, you should be using the latest version of ``pip``. It looks like your version of ``pip`` cannot handle the notation being used specifically for python 2.6.\r\n\r\nIf it is not for developmental purposes and just for tracking master, I would just recommend running ``pip install -e .``. You do not necessarily need all of the dependency in the ``requirements.txt`` as most of them are for testing off of the develop branch of the project.\r\n\r\nLet us know if that helps and if you have any more questions.  @janga1997 \r\nI am not quite sure why. Maybe try setting the region to ``'local'`` and not use the ``'us-west-2'`` along with not using the ``endpoint_url``? The ``'local'`` region for DynamoDB is a first-class construct in the SDK and has [configurations](https://github.com/boto/botocore/blob/develop/botocore/data/endpoints.json#L473) specifically for it. So try doing something like:\r\n```python\r\ndynamodb = boto3.resource('dynamodb', region_name='local')\r\n```  I do not think it is possible through the API. It has to be programmatically generated using API calls and some upfront knowledge from the looks of it. Here are links to examples of how it gets generated in``chalice``:\r\n\r\n* https://github.com/awslabs/chalice/blob/master/chalice/cli/__init__.py#L288-L302\r\n* https://github.com/awslabs/chalice/blob/master/chalice/awsclient.py#L124-L140\r\n\r\nIt is probably worth requesting this feature be exposed through API Gateway's API on the [AWS Developer Forums](https://forums.aws.amazon.com/forum.jspa?forumID=199). Let us know if you have any more questions.  I am not entirely sure why you are getting that specific error. The error coming back is from the service and it does not help that the error is not too helpful. I would recommend asking on the [AWS Developer Forums](https://forums.aws.amazon.com/forum.jspa?forumID=87) to see why those parameters cause an invalid request from the service. It also may be worth asking on [Stack Overflow](http://stackoverflow.com/questions/tagged/amazon-route53). Alright. I have not tried any of these out, but here are some examples that I have found that may help:\r\n\r\n* An issue I answered a year ago with the same unspecific error: https://github.com/boto/boto3/issues/612. It looks like you have what they were missing, but looks like you are missing the ``ResourceRecords`` key.\r\n* The AWS CLI has some good examples of the syntax for various use cases: http://docs.aws.amazon.com/cli/latest/reference/route53/change-resource-record-sets.html.\r\n\r\nLet us know if that helps.  @opteemister \r\n\r\nSo for the first part, you will not actually get a ``NextToken`` if you do not use ``MaxItems`` in the ``PaginationConfig``\r\n\r\nFor the second part, the ``StartingToken`` you provided will not work. The tokens used by ``NextToken`` and ``StartingToken`` in ``boto3`` are generated from the identified parameters in the API that are used as tokens during pagination. So passing in ``'{\"fieldname\": {\"S\": \"value\"}}'`` will not work because ``boto3`` will not be able to interpret it correctly.\r\n\r\nLet us know if that makes sense and if you have any more questions.  It looks like you need to upgrade your version of ``botocore``. Boto3 clients just proxy to botocore clients. Let us know if that helps. Awesome. Glad it works for you. Closing issue.  So the documentation describes all of the possible return items that can be in the response. Whether the key is actually returned in that dictionary is entirely dependent on if the service returns it back or not in its response. My guess is the service is not populating the field in its response and therefore ``boto3`` is missing it from the response dictionary, as ``boto3`` never autopopulates response fields. Let us know if that helps.  So the ``preSignedUrl`` parameter gets autopopulated for you. So it may be worth adding some documentation on this. The boto3 client call should be roughly the same as the CLI as they both share the same logic. So something like this:\r\n```python\r\nimport boto3\r\n\r\nc = boto3.client('rds', 'us-east-1')\r\n\r\nc.copy_db_snapshot(\r\n    SourceDBSnapshotIdentifier='arn:aws:rds:us-west-2:<Account>:snapshot:rds:dbname-2017-01-12-11-40',\r\n    TargetDBSnapshotIdentifier='my-test',\r\n    SourceRegion='us-west-2',\r\n    KmsKeyId='mykeyid'\r\n)\r\n```\r\n\r\nLet us know if that helps. @mohankodali What version of ``botocore`` do you have installed? You may need to upgrade to use ``SourceRegion`` parameter. Yeah I think that version of botocore will not have the parameter available. We released that feature about a month ago and that version: 1.4.81 is about two months old. So if you want to get it working in lambda, you will probably have to deploy with your function the latest version of botocore.  What specifically are you trying to use with ``jmespath`` and timestamps? Could you provide a sample JMESPath expression you are trying to apply?  Closing due to inactivity. I agree this looks like it is coming from the service. I would recommend getting in touch with the service team on the AWS Developer Forums.  Closing due to inactivity  `s3v4-query` is for use in presigning, it is not intended to be used as the signing method for a client / resource. If you wish to use signature version 4, signature version string to use is `s3v4`.  When using SSE-C you need to provide your key with `SSECustomerKey`. Closing due to inactivity.  What botocore / boto3 versions are you using? Also what region are you connecting to? I see this operation has been around (unchanged) for quite a while, so it could be that something changed service side. The built in version of boto3? Or are you bundling in your own copy?  For uploading an object, you should use [`generate_presigned_post`](http://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Client.generate_presigned_post). There are several parameters that cannot be embedded within the url, and those are returned to you by that method. Maybe that's not the correct way to use `files` (the requests docs isn't super clear on this point). See below for a working sample.\r\n\r\n```python\r\nimport boto3\r\nimport requests\r\n\r\n\r\ns3 = boto3.client('s3')\r\nparts = s3.generate_presigned_post(Bucket='foo', Key='bar')\r\nresponse = requests.post(parts['url'], data=parts['fields'],\r\n                         files={'file': open('some_filename.txt', 'rb')})\r\n```  Yes, we bring in all timestamps as python datetime objects. If you want to json serialize a dict that contains datetime objects, you'll need to extend the serializer (see examples [here](http://stackoverflow.com/questions/11875770/how-to-overcome-datetime-datetime-not-json-serializable-in-python)). Closing due to inactivity  I think you need to update botocore (`pip install --upgrade botocore`). The first error is local validation that indicates your local copy is out of date. The second is a server side error that's saying the param is missing.  That's the documentation for boto2. The documentation for boto3 is [here](http://boto3.readthedocs.io/en/latest/reference/services/s3.html#bucket). Haha, no worries. It's an easy enough mistake to make.  Thanks for reporting! I've opened the issue in s3transfer which provides the functionality for upload_fileobj. Closing out here.  Based on [these docs](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/ts-elb-http-errors.html#ts-elb-error-metrics-Backend_5XX) it looks like your instances are throwing those errors for some reason. For further service assistance I would recommend asking on the service forum. I found a [similar question](https://forums.aws.amazon.com/message.jspa?messageID=560719) there that may help you out.  We do support python 3.6, though I imagine you're requesting us to officially document support. We'll have that in as soon as we have a clean run of tests from Travis.  Closing due to inactivity  You need to update your botocore version `pip install --upgrade botocore`  Most of the logs live in `botocore`, so if you want those as well you'll need to enable that logger as well: `boto3.set_stream_logger('botocore')` Well somebody took all the best food names after all  I think I see the issue. Creating clients / resources is not thread safe. We [recommend](http://boto3.readthedocs.io/en/latest/guide/resources.html#multithreading) creating a `Session` object for each thread where you will be creating clients / resources.  This is definitely something we'd like to have, but I can't comment on when it might be available.  Closing due to inactivity  If you only have ResponseMetadata in your response it probably means you got an empty response from the server. Try setting more debug logging with `boto.set_stream_logger('')` and see what response body has. Mine is empty since I have no SDB resources.\r\n\r\nAs to why it has an empty response, I have no idea. You can ask questions directly related to the service on their forum https://forums.aws.amazon.com/forum.jspa?forumID=38  Glad you got a working solution.  Closing due to inactivity  Wow, now that's interesting. I'll look into adding that restriction. Thanks for the heads up! Where exactly are you logging to? Is it being redirected somewhere? I'm trying to get an idea of what a reasonable limit would be, but I'm struggling to find information about actual limits. While we look into this, I have a workaround for you. You can change the logger format for boto3 when you setup the logger: http://boto3.readthedocs.io/en/latest/reference/core/boto3.html#boto3.set_stream_logger  Hmm, I'm not sure what the issue here is. I would recommend asking on the [service forums](https://forums.aws.amazon.com/forum.jspa?forumID=199), they should be able to help you better.\n  That does seems strange. I would recommend asking about that issue on the [service forums](https://forums.aws.amazon.com/forum.jspa?forumID=86), they should have a better idea of what might be wrong. \n  This is a duplicate of boto/botocore#767.\n  Invalid xml isn't something we can retry safely. What version of botocore are you using? Are there any unicode characters in your key names? Closing due to inactivity  boto3 and the cli use the exact same code base (botocore) to handle this. The destination region is implied by the region you send the request to. We should probably hide that parameter from the docs since we don't expect it to be set.\n @Raiju1 no, that just means that when copying to a region you need to use a client configured for that region.\n  I would advise against calling a lambda function from within a lambda function synchronously like that. It results in you effectively being double-billed.\n\nIn this case it looks like that other lambda function is taking so long that it's causing the initial function to time out. You will need to either increase your timeout, invoke the other lambda asynchronously, or optimize the other lambda function.\n  Given that you already have boto3 imported in that script, can you just use boto3 to do the upload?\n  Sorry for unacceptable delay on this issue. You are correct, the issue is a socket timeout on invocations that take longer than 60 seconds. The reason multiple connections are made is that a socket timeout is, generally, a retryable error. You aren't the first customer to have this issue, we really need to append this to the documentation for invoke.  I'm not sure what your use case is but pip is the canonical python package installer. If you aren't going to use that or have internet access I'm not sure how to help.\n You're correct - simplejson is only required for python 2.6. If you're concerned about security, you should absolutely not be using that version of python as it has been EOL for over three years now.\r\n\r\nUnfortunately your only option right now is to either use an up-to-date version of python or to install the package via pip. Closing due to inactivity  Thanks for the PR! Could you please squash your commits?\n Thanks!\n  Since this is a service behavior, the [service forums](https://forums.aws.amazon.com/forum.jspa?forumID=30) are a more appropriate place for this issue.  The reason is that an ARN is a globally unique identifier, whereas a name is only unique within the scope of an account. Still, I can see where that would be convenient if you have no need to access resources outside of your account. The best place to ask for such feature requests is on the [service forums](https://forums.aws.amazon.com/forum.jspa?forumID=187).\r\n\r\nSorry for the unacceptable delay on responding to this issue.  What do you mean it's implicitly lower cased? Are you saying that the value of `resource.identifier` is changed?\n Closing due to inactivity.\n  Looks like they use a slightly different http status code for that exception, which is why we didn't catch it automatically. I'll add that to our retry definition.\n After a closer look I noticed that it is in fact already in our retry strategy - what version of botocore are you using? Looks like we added it January 7th. If your botocore version is up to date, that means that the request failed even with exponential backoff.\n I'll have to discuss with the broader teams to see how we want to configure the retry strategy for these operations.\n  As @dalegaspi mentioned, you will need to paginate. You can also use the built in [paginator](http://boto3.readthedocs.io/en/latest/reference/services/iam.html#IAM.Paginator.ListUsers) to handle the details for you.\n  This appears to be a service side bug, I would recommend reporting it on the [service forum](https://forums.aws.amazon.com/forum.jspa?forumID=187).\n  We will make sure the documentation gets updated.\n  We can't guarantee that the url will have a valid region in it.  You can always pass the url via endpoint_url, but we can't be sure some string in your url doesn't look like a region, for example I could name a SQS queue us-west-1 and be in region us-west-2. Not sure if we could do it correctly.\n  Change \n`part = s3.upload_part(Bucket=bucketName, Key=self.key, PartNumber=part_number, UploadId=self._uploadId, Body=data)`\nto \n`part = s3.upload_part(Bucket=bucketName, Key=self.key, PartNumber=part_number, UploadId=self._uploadId, Body=data.read())`\n\nNeed to do more investigation as to why that is required with filechunkio. Hopefully that is enough to get you unblocked for now.\n  You're specifying an api version which does not have `Scope` available, you will need to use at least `2016-09-15`.\n  You will need to 'copy' into its current location and add the relevant parameters in the copy operation. If you have more questions about this, I recommend asking on the [service forums](https://forums.aws.amazon.com/forum.jspa?forumID=24), they should be able to better help you use the s3 api.\n  You added your tag to the volume, not the snapshot. Your screenshot shows the snapshot. I'm fairly certain that tags aren't copied over when you create a snapshot.\n boto2 would [do that](https://github.com/boto/boto/blob/develop/boto/ec2/connection.py#L2502), however doing so is an opinionated decision that could not be opted out of. That additional request costs you both money and time and prevents you from adding other tags in the request to make the most out of it. For those reasons (and several others) we avoid making requests on your behalf when you haven't explicitly initiated them.\n  If you want to remove an instance from your load balancer,  you can deregister it. If you're talking about actually making the instance itself unhealthy, then the answer is no. You will need to do that yourself. You may be able to get more help on the [service forum](https://forums.aws.amazon.com/forum.jspa?forumID=30). You could also check out chaos monkey to see if that's what your looking for.\n If you deregister through the api, elb will wait until in-flight requests have completed before terminating it. You can configure a timeout on it so that it will terminate it after a certain amount of time regardless.\n You can find more information [here](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html), though the operations you use will be different if you're using elbv2.\n  Based on that response metadata it seems the request succeeded, so there's nothing we can do on our side. You might bring this up on the [service forum](https://forums.aws.amazon.com/forum.jspa?forumID=30) to see why the request is returning a 200 response.\n  Yes and no. We don't upload it to different keys (and I don't think that's the direction we want to take this feature), but you can still download parts.\n\nIf you want to download only a part of the file, you can use `Range` when you perform the `get_object` request or other download. This follows the http [range header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35) semantics, so to get the first 500 bytes you would use `0-500`.\n\nYou can also use `PartNumber`, so downloading part 1 would download the first part that was uploaded. Part size is determined by the configuration you pass in, but will be auto-adjusted if your part size is invalid. In this way it's not quite as reliable since you can't be sure how big each part is, but it could be faster and easier to understand.\n Yes. You can download parts of an object, as few bytes as you want, when you retrieve it. You cannot have multiple objects under a single key.\n I understand that. It is unfortunately not possible to have one key represent multiple objects. Nor can `upload_fileobj` split a file into separate objects. If you want to break a fileobj into multiple objects you will need to split it up yourself and perform multiple uploads as necessary.\n Glad to help! Sorry I wasn't super clear initially.\n  There's no real way to know when that operation is complete, so we wouldn't be able to write a waiter for it. We can't rely on the queue being empty to signal it's done because another process could have created a new message in the meantime. Further, the queue has no attribute that says it's undergoing a purge, so there is no done state for us to end on. Without some way of knowing the operation is complete, there's nothing we can do.\n\nSince you control the whole environment, you could potentially guarantee that nothing is writing to the queue. You could then assume the operation is done once the queue's `ApproximateNumberOfMessages` is 0, but even then you're relying on an approximation.\n\nI would recommend asking for some way to know when the purge is completed (or at least a way to know when one is happening) on the [service forum](https://forums.aws.amazon.com/forum.jspa?forumID=12). With that we could write a waiter.\n  There is no equivalent parameter, and I would be -1 on adding a parameter that changes the meaning of another parameter. To achieve the same effect you can subtract `time.time()` from the value.\n  There are two ways to access services in boto3, via the low-level client or the higher level resource (which only available for a few services). In your first example you're using the resource, which will return classes where relevant. [Here](http://boto3.readthedocs.io/en/latest/reference/services/cloudformation.html#CloudFormation.ServiceResource.create_stack) is the documentation for the service resource's `create_stack` method, which returns a `Stack` resource.\n  In this case you're being throttled because you're sending requests rapid-fire one after another. For a more robust waiting solution, you should use a [waiter](http://boto3.readthedocs.io/en/latest/reference/services/rds.html#RDS.Waiter.DBInstanceAvailable):\n\n``` python\ndef get_endpoint_status(instance_name):\n        conn = boto3.client('rds')\n        return conn.describe_db_instances(DBInstanceIdentifier=instance_name)['DBInstances'][0]['DBInstanceStatus']\n\ndef get_endpoint(brand_name=BRAND_NAME):\n        instance_name = \"rde-db-rds-{}\".format(brand_name)\n        current_status = None\n        conn = boto3.client('rds')\n        # This will return once the instance is available\n        conn.get_waiter('db_instance_available').wait(DBInstanceIdentifier=instance_name)\n        response = conn.describe_db_instances(DBInstanceIdentifier=instance_name)\n        return response['DBInstances'][0]['Endpoint']['Address']\n```\n  What values do you have for `vol_id` and `snap_desc`?\n Closing due to inactivity  I think that general feature request is still covered by the other issue (though it could use a better title). For your case, however, there may be some confusion: cloudwatch does not return responses in json. It uses `query`, which is xml-based, so you would still need to go through the deserialization step.\n  Closing due to inactivity.\n  I only had one comment, which I went ahead and addressed. I'll leave this open for another reviewer, or your response to the change.  Closing due to inactivity.\n  Closing due to inactivity.\n  I think I would rather have hashing functions implemented. This just ignores the problem.   That would certainly be useful, even if we only link. Thanks for the ask!  Much like in the linked issue, you will need to use the relevant paginator to iterate through all of your resources, or otherwise manually paginate. If you would like to see additional api parameters, I would recommend asking for them on the [service forum](https://forums.aws.amazon.com/forum.jspa?forumID=30).\n  None of S3's operations have a dry run option. To test without making service requests, you can use the [botocore stubber](http://botocore.readthedocs.io/en/latest/reference/stubber.html).\n  The session itself isn't thread safe, you'll need to create a new one for each thread:\n\n``` python\nimport threading\nfrom boto3.session import Session\n\n\nclass Worker(threading.Thread):\n    ...\n    def run(self):\n        s = Session()\n        s3 = s.resource('s3')\n```\n  It's generally placed in the response metadata:\n\n``` python\nimport boto3\n\nr = boto3.client('s3').list_buckets()\nrid = r['ResponseMetadata']['HTTPHeaders']['x-amz-request-id']\n```\n  @themanifold Could you give a specific code snippet of what you are doing? Specifically I would like to see what method you are using to download the files (i.e. `download_file()` or `get()`). Also could you possibly send us the debug logs to help diagnose?\n\nWithout too much information, I would guess it has to be with hitting retries due to throttling or connection issues if you are maxing out your downstream bandwidth.\n\nHowever, there is not too much we can do to help other than guess the cause without debug logs and code snippets.\n Thanks for the deep dive here! I'm taking a look into right now to see what may be going on. \n Ah, I see what is happening. All that info you provided helped a bunch.\n\nSo this is what is happening. So in the switch to 1.4.0 we swapped out the s3 managed transfer implementation for a more powerful, unified implementation in pulling in `s3transfer`. When the `download_file` is created we create a brand new `S3Transfer` object each [time](https://github.com/boto/boto3/blob/develop/boto3/s3/inject.py#L122). When we create a new `S3Transfer` object we actually create a `s3transfer.manager.TransferManager` under the hood and we create a new one every time. The `TransferManager` [registers new handlers to deal with an issue with progress callbacks for uploads](https://github.com/boto/s3transfer/blob/develop/s3transfer/manager.py#L471-L479), but the issue is we are creating a new `TransferManager` every time and as a result we register those two every time as well.\n\nI think what needs to happen the following needs to happen:\n1) In the `shutdown()` method for `TransferManager`, unregister those two events.\n2) Call `shutdown()` in the client methods to make sure they events get cleaned up.\n\nAs to workarounds for right now, you can use `S3Transfer` directly. So you should be able to do something like this:\n\n``` py\nimport boto3\nfrom boto3.s3.transfer import S3Transfer\nimport random\nimport os\n\ns3_client = boto3.resource('s3')\ns3_transfer = S3Transfer(s3_client.meta.client)\n\nwhile True:\n    random_num = str(random.randint(1,9999))\n    s3_transfer.download_file(\n        bucket='testbucket', key=random_num, filename='/tmp/'+random_num)\n    os.remove('/tmp/'+random_num)\n```\n\nLet us know if that helps. In the meantime, we will look into fixing this.\n  What version of `botocore` are you using? My guess is that the version that you have installed is trailing the latest version which is 1.4.56. The documentation always shows the latest. So if  that is the case all you need to do is upgrade: `pip install boto3 --upgrade`. Let us know if this helps.\n  Looks like an issue in our resource model. Notice the defintion:\nhttps://github.com/boto/boto3/blob/develop/boto3/data/sqs/2012-11-05/resources-1.json#L225\n\nIt uses an upper case Q for QueueUrl when it should be lowercase q as seen in the [docs](https://boto3.readthedocs.io/en/latest/reference/services/sqs.html#SQS.Client.list_dead_letter_source_queues).\n\nI will send up a fix for it.\n  @nhumrich Could you provided a code snippet and possibly debug logs of what you are doing in boto3? You can get debug logs by adding `boto3.set_stream_logger('botocore')` to the line right before you make the client call. That will help debug the issue.\n  Strange. We will try out you code and see if we can reproduce it. If you can provide debug logs that would be awesome and help expedite this. One thing that I could possibly see it being is a concurrency issue when logging (that is if celery enables logging). We have a PR to fix that: https://github.com/boto/s3transfer/pull/57. Maybe that will help, but we either need debug logs or need to try it out ourselves.\n  @jppacheco What value are you passing for `newSubnetGroup` in your code snippet? According to the [docs](https://boto3.readthedocs.io/en/latest/reference/services/rds.html#RDS.Client.modify_db_instance), it should be a string. Not sure if that is the issue. If that does not help resolve the issue could you please provide debug logs by adding `boto3.set_stream_logger('botocore')` to the line right before making the client call?\n  Yeah this is the same as this request: https://github.com/boto/boto3/issues/125. I think it would be nice if we did something to handle this or autopopulate location constraint for the user. I am going to close this as a duplicate, but let's keep the conversation going in the linked issue. \n  For the first part, this looks to be a behavior of EC2. The behavior being if you call `DescribeNetworkInterfaces` without an id, you will not get `AllocationId` and `AssociationId`. There is not much we can do in the SDK about that. You will probably need to ask on the [AWS Developer Forums](https://forums.aws.amazon.com/forum.jspa?forumID=30) to see if they can update the service behavior.\n\nAs to the `association` being `None` when there is no association data, this is a server side behavior as well so it would be good to ask about that as well.\n\nLet us know if you have anymore questions.\n  Seems reasonable. Marking as a feature request.\n  @Ananas- Is that all of the code needed to reproduce this? The reason you are running into this is that you are providing a url-encoded timestamp in somewhere: `Thu,%2031%20Dec%202099%2020:00:00%20GMT` based on the traceback, but you are not doing any timestamp manipulation in the code snippet that you provided.\n  In general, if the service does not return a key in its response, we will not include it (by autopopulating or something) in the dictionary returned back. As to the documentation, in general, there is no guarantee that any of the keys will be returned by the service. The documentation just documents all of the possible keys that could be returned in the response so there is no guarantee on a key always existing in the response.\n\nFor the `DbInstancePort` equaling 0 this is a behavior coming from RDS, I am unable to give an exact answer as to why this is the case. For this question, it would be worth asking the [AWS Developer Forums](https://forums.aws.amazon.com/forum.jspa?forumID=60) as they should be more knowledgeable.\n\nLet us know if you have anymore questions.\n  :ship:\n  Are you getting all of the 3GB back when you do the while loop read? I am a little confused by the statement: \"I suspect the API faced the end of the file, however, it occurs in the middle of reading the file.\" Does that mean you are half way into downloading the file (at like 1.5GB out of 3GB) when the read returns less than requested? Or do you mean something else?\n  Seems reasonable to me. It would not be hard to add. All that would need to be done is add a line similar to this: https://github.com/boto/boto3/blob/develop/boto3/session.py#L448-L452 but for volumes and add a functional test. Feel free to send a PR, otherwise we will eventually get around to adding it.\n  Thanks! I can see where this is misleading as most of the config variables match up with client initialization parameters. Change looks good to me. Merging.\n  Makes sense. Since storage_class is backed by an enumerated value, we should be able to add all of the different values. With the example syntax for client and resource calls that return a dictionary, we specify the enum values. Take the response syntax for [list_objects](https://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Client.list_objects) for example. We just need to put these enum values in the parameter description.\n  @jvirtanen \nThanks for the PR! So the way we handle changelog generation is a little different than modifying the actual changelog. We actually regenerate the changelog from changes found in the `.changes` directory each time we do a release. So if you only make the changes directly to `CHANGELOG.rst` they will be erased in the next release. The changes need to be added in the JSON as well. It looks like you will need to update `1.4.0.json`, `1.1.2.json`, `1.1.0.json`, and `0.0.21.json` as well.\n Cool the changes look good.\n\nSo I think when we originally added the `scripts/gen-changelog` in the PR that added `scripts/new-change`, but decided to remove it. I forget why we removed it. It may have been due to the fact that if we needed to update the script, it would need to be updated in three different repositories. So instead it is kept as a part of a script that automates our release for each of the packages that we maintain. But that script we have not published externally. I think it would be worth to publish this script but I think we would want to consolidate it to a single repository or figure out how to share it across all of our repositories.\n\nOtherwise merging.\n  So S3 at times may abort the connection for whatever reason when streaming the payload up to s3. If this happens, you need to have retry logic that retries the upload if that happens.\n\nIs there any reason why you are not using the `upload_file()` methods: https://boto3.readthedocs.io/en/latest/guide/s3.html#uploads to upload the file? These are completely managed for you in terms of handling retries, when to do multipart uploads, and is multithreaded as well.\n  Thanks! Merging.\n  Please read the [documentation](https://boto3.readthedocs.io/en/latest/reference/services/ses.html#SES.Client.send_raw_email). To send the email, you need to call it as something like this:\n\n``` py\nses.send_raw_email(\n    RawMessage={\n         'Data': msg.as_string(),\n    },\n    Source=msg['From'],\n    Destinations=to_emails\n)\n```\n\nwhere `RawMessage` is a dictionary with the key `Data` and the value being the email content. Let us know how that works out.\n Thanks for catching the syntax error. I updated my comment to fixed it. It seems strange that the attachments do not get included. When you call `ms.as_string()` does it include the attachments if you print it out?\n  @andrewalexander \n\nI ran the script that you provided and I am seeing that as well. I am not entirely sure why this is happening. Here is the relevant part in the debug logs:\n\n```\n2016-08-31 15:50:51,416 botocore.hooks [DEBUG] Event before-parameter-build.ec2.AuthorizeSecurityGroupEgress: calling handler <bound method ParameterAlias.alias_parameter_in_call of <botocore.handlers.ParameterAlias object at 0x10a3f4510>>\n2016-08-31 15:50:51,418 botocore.endpoint [DEBUG] Making request for OperationModel(name=AuthorizeSecurityGroupEgress) (verify_ssl=True) with params: {'body': {u'FromPort': 443, u'CidrIp': '10.42.0.0/16', u'ToPort': 443, 'Version': u'2016-04-01', 'Action': u'AuthorizeSecurityGroupEgress', u'IpProtocol': 'tcp', u'GroupId': 'sg-f2d68596'}, 'url': u'https://ec2.us-west-1.amazonaws.com/', 'headers': {'User-Agent': 'Boto3/1.4.0 Python/2.7.10 Darwin/15.6.0 Botocore/1.4.46'}, 'context': {'client_region': 'us-west-1', 'has_streaming_input': False, 'client_config': <botocore.config.Config object at 0x10b13b1d0>}, 'query_string': '', 'url_path': '/', 'method': u'POST'}\n```\n\nand it looks like the correct serialization is happening. So I do not think it is an issue with boto3.\n\nI have a feeling that is just the behavior server-side. It would probably be best to ask on the [EC2 Forums](https://forums.aws.amazon.com/forum.jspa?forumID=30) as to why that is the behavior. \n\nFrom my experience, using the parameters that EC2 has flagged as not recommended have tended to be inconsistent as whether it works sometimes depends on how old of an account you have (i.e. classic link by default or not). The fact that the parameter still exists is for backwards compatibility reasons with older users. So I would really recommend following EC2's recommendation on which parameters to use as they are much less likely to be inconsistent if at all.\n  Yep. You just need to set it using the `ExtraArgs` param. Here is an example in the docs: https://boto3.readthedocs.io/en/latest/guide/s3.html#uploads but it is for metadata instead. `ContentEncoding` should be very similar. All of the allowed `ExtraArgs` are listed [here](https://boto3.readthedocs.io/en/latest/reference/customizations/s3.html#boto3.s3.transfer.S3Transfer.ALLOWED_UPLOAD_ARGS)\n\nIf you have any more questions lets keep the conversation going on gitter: https://gitter.im/boto/boto3?source=explore\n  This seems like a bug to me, but need to do more researching. In short, it seems if `MaxItems` is specified and if a marker is not returned from the service API response, it will not populate the `NextToken`, but it should because the paginator stopped in the middle of the only page given back. Furthermore if after you call `paginate()` you can call [build_full_result](https://github.com/boto/botocore/blob/develop/botocore/paginate.py#L288) and that will get you a `NextToken`. So I wonder if it is just an issue with the `__iter__`\n  @muhammad-ammar \nSo one thing to note is that the [copy()](https://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Bucket.copy) is already multithreaded as noted in the docs. How large are the files you are transferring typically?\n\nI have a feeling what is happening is that the threads may be starving themselves in the sense that you have 20 threads making `copy()` calls but for each `copy()`, it alone can make 10 concurrent requests if the files are relatively large (in terms of MB). So in a worst case scenario you can have 200 threads making requests at the same time and that point you maybe throttling yourself a lot. One thing that you may want to do if that is the case is configure the managed copy to use less threads by passing a [TransferConfig](https://boto3.readthedocs.io/en/latest/reference/customizations/s3.html#boto3.s3.transfer.TransferConfig) object to the `copy()` method.\n\nLet me know if that helps.\n Interesting. That should not be the problem then. We will do some researching, try to reproduce this, and get back to you on what we find.\n\nThe one thing that does not make sense to me yet is if only `CopyObject` calls are being made and assuming request latency is the bottleneck in the transfer process, why is it 3x worse in the boto3 version than the boto version. That should not be the case. At worst, it should be some small overhead.\n If you are doing research as well, one thing that I would probably try (assuming I could reproduce it) is try to use the `client.copy_object()` or `object.copy_from()` methods. Those are the low level methods and do not have any managed components to them. This will at least determine if it is an issue with the high level transfer methods.\n @muhammad-ammar so are you seeing `copy_object()` on the client being much faster than the `copy_from` of the `Bucket` or `Object` resource? I wonder if the issue is that there is some extra loading of the resource that is happening. What does the client version of the code look like? \n Thanks for looking into this. We will try this out as well to see if we get a difference as well. One way to look at what may be going on is to use `boto3.set_stream_logger('')` to see all of the debug logs and see where the slowness may be coming from. You can also filter it by package so  I would suggest also replacing the empty string with `'botocore'` and `'boto3'` to get more filtered debug logs.\n  Can you provided a code snippet of what you did? My guess is that you are instantiating a `Message` object directly with `ReceiptHandle`, but it is impossible to get all of the more specific data like `message_attributes` about the message from just the `ReceiptHandle` because there is no API for that in SQS. You may have to find a different way of storing and retrieving the data from messages than instantiating the `Message` directly and accessing a property.\n Makes sense. Good to hear you got something working. Closing issue.\n  I can confirm the issue. It only affect seekable nonmultipart uploads. You should be able to upload from a seeked location. The referenced PR should fix your issue as I can confirm it now works for me with that PR.\n So boto3 uses s3transfer under the hood; it's essentially a simplified version of the functionality exposed in s3transfer. So to pick up the fix, you need to use the PR branch that has the fix for s3transfer.\n Good to hear. Once the PR gets merged, it will be included in a subsequent release of s3transfer and therefore fixed in boto3. My guess is that this will happen sometime next week, hopefully the early part of the week.\n  Can you give an example workflow of how you would use this? A code snippet of what your ideal workflow would be awesome.\n  Closing issue. Let's track this in the issue that @jamesls linked.\n  This is something that would need to be exposed upstream in the service in order for us to pick the functionality up. I would suggest sending a feature request to the forums: https://forums.aws.amazon.com/forum.jspa?forumID=76 for this.\n  Is there a reason you are not trying to instantiate it directly?\n\n``` py\niam.Role('myrolename')\n```\n\nRole names are unique so there should be no reason to need to have to use the collections interface to find your role if you already know the name.\n  To the filtering comment, are you referring to something like these pages from botocore:\nhttps://botocore.readthedocs.io/en/latest/topics/paginators.html#filtering-results\nhttps://botocore.readthedocs.io/en/latest/topics/paginators.html#filtering-results-with-jmespath\n  I would recommend asking this question on the elastic beanstalk forums: https://forums.aws.amazon.com/forum.jspa?forumID=86. They will be much more knowledgeable of how to set this up appropriately through their API.\n  :ship:\n  I have the same question as @Varriount because we do not support asyncio as shown in this open issue: https://github.com/boto/botocore/issues/458\n  Yep calling `put_bucket_notification_configuration` will overwrite any existing event notifications. If you want to get an update that does not overrite the existing events, you need to call `get_bucket_notification_configuration`, update the list of event notifications, and send that to `put_bucket_notification_configuration`. This is a pretty common workflow.\n\nIf you have any more questions, lets move the conversation to gitter: https://gitter.im/boto/boto3. Closing issue.\n  But the Python type is still a string right? Being able to document which values are JSON strings is something we would like to add, but we do not have enough metadata in our models to be able to consistently document these.\n Right. Here is the location in the code where this happens: https://github.com/boto/botocore/blob/develop/botocore/handlers.py#L751. We will look to get the documentation updated to reflect the type to be a loaded json.\n  It looks like you need to update your version of botocore (the underlying library of boto3) which has support for it: https://botocore.readthedocs.io/en/latest/reference/services/ecs.html#ECS.Client.register_task_definition\n\nYou should be able to run:\n\n```\n$ pip install boto3 --upgrade\n```\n\nto pick up the feature.\n\nLet us know if that helps.\n  I would recommend asking this as a feature request in the AWS Developer Forums for CodeDeploy: https://forums.aws.amazon.com/forum.jspa?forumID=179. There is not really a way we would be able to expose it client side. It would have to be exposed server side.\n  Based on the [documentation](https://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Client.delete_object), the delete marker is only used if your bucket is versioned.\n\nIn general, if you do not get an error propagated from the client call, then the request was successful; there is no need to check the response for `delete_object` to see if it was successful.\n\nLet us know if you have any more questions.\n  I do not think that we would want to remove debug logs. They come in handy if there are any issues users run into and we are not able to reproduce. Could you exclude these log by adding a [filter](https://docs.python.org/3/library/logging.html#filter-objects) excluding anything related to `s3transfer`?\n Do you currently see logs for `botocore` as well? I feel that `botocore` has more debug logs than `s3transfer` and it is used for every boto3 call.\n\nIn general, boto3 tends to not have too much logs because it is just a wrapper over other libraries that do most of the heavy lifting such as `botocore` and `s3transfer`, which require much more debug logging to help understand what may be happening.\n Interesting. How are you enabling debug logging then in your application? Are you using `boto3.set_stream_logger()` or something else? If you use `boto3.set_stream_logger()` you will only get debug logs from boto3 and none of the underlying libraries.\n So how are you enabling logging in your application then?\n Ahh I see what is happening. We need to add a null handler default in `s3transfer`. I sent a PR to fix this in the `s3transfer` library.\n  I do not think it is possible to use presigned url's with STS. Presigned url's are really dependent on if the service allows for them such as S3. So I would recommend just calling the client method for now. Is there any particular reason you are trying to use a presigned url for this?\n Ahh I know what is going wrong now. It is because you are probably sending a GET with the presigned url instead of a POST. If I use your code and curl, I get it working correctly:\n\n```\n$ curl --request POST \"https://sts.amazonaws.com/?Action=GetCallerIdentity&Version=2011-06-15&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Expires=3600&X-Amz-Credential=xxxxxxxxxxx%2F20160808%2Fus-east-1%2Fsts%2Faws4_request&X-Amz-SignedHeaders=host&X-Amz-Date=20160808T211723Z&X-Amz-Signature=edb67c57dbefc7fa9869afba981b9cccf2c390c52329a2e605e9ea2be6261345\"\n<GetCallerIdentityResponse xmlns=\"https://sts.amazonaws.com/doc/2011-06-15/\">\n  <GetCallerIdentityResult>\n    <Arn>arn:aws:iam::xxxxxxxxx:user/kyleknap</Arn>\n    <UserId>xxxxxxxxx</UserId>\n    <Account>xxxxxxxxxx</Account>\n  </GetCallerIdentityResult>\n  <ResponseMetadata>\n    <RequestId>893906ac-5dad-11e6-be54-ad1250e80f0d</RequestId>\n  </ResponseMetadata>\n</GetCallerIdentityResponse>\n```\n\nDoes that help you?\n\nWith presigned url's there is not too much documentation out there other than with s3. So sometimes it requires a little bit of experimentation (i.e. switching from POST to GET) to get it to work. In the past, I have found it pretty service specific on if and too what extent they support presigned url's.\n  I think that this is the method you need to call: https://boto3.readthedocs.io/en/latest/reference/services/autoscaling.html#AutoScaling.Client.put_scheduled_update_group_action to create a scheduled action. Let us know if that helps.\n  I am unsure if even if we fix that runtime error that presigned urls will work for kinesis. Presigning is dependent on if the service allows for it. But I can confirm the runtime error and traceback you are seeing.\n We may want to remove it from the documentation. How were you trying to use the generated presigned url? A example with redacted auth would be great.\n  Looks good to me! :ship:\n\nHere is the relevant part in the service model proving that it should be populated: https://github.com/boto/botocore/blob/develop/botocore/data/cloudformation/2010-05-15/service-2.json#L925-L927\n\ncc @jamesls @JordonPhillips for additional review\n  It can be confusing to customers when they see unreleased features in the\ndocumentation. ReadTheDocs allows users to switch to viewing the stable\nversion, but latest is the default. This includes a link to the stable\nversion in the readme for discoverability and alters hard-coded links to\nrefer to the stable version.\n\ncc @jamesls @kyleknap\n  There are no more PR's needed in porting `s3transfer` into boto3 so I decided to go ahead and send the PR merging the branch into develop. There are going to be a good amount of issues that are going to be fixed with this PR, but I am going to close them out one by one once this gets into a boto3 release.\n\ncc @jamesls @JordonPhillips \n So I did some final performance testing for sanity sake. I found with these changes boto3 is about the same in terms of speed, memory, CPU usage for single uploads and downloads when compared to the CLI. Comparing to the current boto3 develop branch, the performance for uploads is roughly the same but with these changes boto3 is much faster for downloads thanks to the configuration updates, which was expected.\n\nLet me know if you have any questions.\n Dang that's a lot of commits\n\n```\n___________________________________________________________________\n||     *                            *                    ((   *  ||\n||        *                 *                *            ~      ||\n||                ___.                          *          *     ||\n||       *    ___.\\__|.__.           *                           ||\n||            \\__|. .| \\_|.                                      ||\n||            . X|___|___| .                         *           ||\n||          .__/_||____ ||__.            *                /\\     ||\n||  *     .  |/|____ |_\\|_ |/ _                          /  \\    ||\n||        \\ _/ |_X__\\|_  |\\||~,~{                       /    \\   ||\n||         \\/\\ |/|    |_ |/:|`X'{                   _ _/      \\__||\n||          \\ \\/ |___ |_\\|_.|~~~                   /    . .. . ..||\n||         _|X/\\ |___\\|_ :| |_.                  - .......... . .||\n||         | __\\_:____ |  ||o-|            ___/........ . . .. ..||\n||         |/_-|-_|__ \\|_ |/--|       ____/  . . .. . . .. ... . ||\n|| ........:| -|- o-o\\_:_\\|o-/:....../...........................||\n|| ._._._._._\\=\\====o==o==o=/:.._._._._._._._._._._._._._._._._._||\n|| _._._._._._\\_\\ ._._._._.:._._._._._._._._._._._._._.P_._._._._||\n|| ._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._||\n||---------------------------------------------------------------||\n```\n  Could you add a changelog entry for this? You can do that by running scripts/new-change\n  Making changes as discussed in this merged PR: https://github.com/boto/boto3/pull/736\n\nChanges include:\n- Moving upgrading notes to the docs\n- Updating some of the wording\n- Mentioning the upgrade notes in the changelog\n\ncc @jamesls @JordonPhillips \n @jamesls I added the upgrading notes to the migration section.\n  This proves to significantly improve speed where the download bandwidth speed\nis high. The value appears to be a sweet spot with the other default\nconfiguration values as the io queue is no longer the bottleneck under these\nsorts of environments.\n\nThis is pretty much a supplement to: https://github.com/boto/s3transfer/pull/36\n\ncc @jamesls @JordonPhillips \n  Add upgrading notes in preparation of merging in the recent s3 changes. Seemed like a general place for having these would be useful for the future. The idea/structure was taken from the Ruby SDK's upgrading guide: https://github.com/aws/aws-sdk-ruby/blob/master/UPGRADING.md which seems to work well for them.\n\nI also added a missing changelog entry that I noticed that I forgot to include for `io_chunksize`.\n\ncc @jamesls @JordonPhillips \n \u26f5\n I will send a PR to add this as that is a good point.\n  Could I please see a sample of the request you're sending as well as a debug log? You can enable debug logging with `boto3.set_stream_logger('botocore')`.\n @Pedroyev You might ask about the console issue in the [service forums](https://forums.aws.amazon.com/forum.jspa?forumID=52), hopefully they can get it fixed.\n  I think it would be worth having a conversation with your IT department about that. I imagine they want SSL.\n\nYou can disable SSL with the `use_ssl` parameter ([docs](http://boto3.readthedocs.io/en/latest/reference/core/session.html#boto3.session.Session.client)).\n Closing due to inactivity\n  My understanding is that testpypi is intended to be used by package authors to test deployment to pypi before _actually_ deploying to pypi. Thus, since it isn't intended to be consumed by end-users I don't see a reason to keep it updated. Either way, we don't actually own the package - it seems to be owned by a user called gene1wood\n  It seems like this has something to do with url encoding since all those params go into the url or into headers. Spaces should get translated as `%20` though, so that's a bit strange. Could you post a debug log so I can get a better idea of whats going on under the hood (as I am unable to reproduce)? You can enable debug logging with `boto3.set_stream_logger('botocore')`.\n  I see no reason why not. \n\u26f5\n So I ended up having to revert this since it breaks some of our automation. If it breaks us, it probably breaks some of our customers.\n\nMay I ask why you aren't installing from pip normally?\n That's under development, as in development of boto3. We could make that clearer though.\n  This is very important for environments that have very fast bandwidth and slow disk writes because if the io chunksize is too small it starts to become the bottleneck when downloading files as there is only one thread processing these io writes.\n\nSo the main reason that I want to expose this is because of this issue: https://github.com/boto/boto3/issues/691\n\nI was doing testing on an EC2 instance with relatively high bandwidth (i.e. hits this scenario) and I found that with the default settings of `s3transfer` integrated into boto3, boto3 is as fast as the version of boto3 not integrated with s3transfer but is roughly 50% slower than the CLI when dealing with relatively large files (e.g. size > 100MB). Changing the `io_chunksize` value to 1 MB which is the size that the CLI uses results in the same speed as the CLI, which is great.\n\nYou may wonder why not set the default to 1MB but that is not ideal because:\n\n1) Optimizes for the scenario of very fast bandwidth, which is not necessarily ideal for slower bandwidth or is memory sensitive.\n2) It destroys the grainularity of the progress callbacks.\n\nSo for these reasons, I am suggesting that we expose this configuration option for users to optimize for their environment instead, and hopefully gives some documentation on how you should look into tweaking your configurations.\n\nLet me know what you think.\n\ncc @jamesls @JordonPhillips \n \u26f5\n Yeah I will do some testing and see if there is anything immediate we can do. One thing that I am afraid of is that whatever number I come up with will be optimized to the EC2 instance type I am working with. But if I get a lot better result with say < .5 MB chunksize, I think I would be in favor of changing it.\n @jamesls @JordonPhillips \n\nSo from testing, I found that for my instance type performance degradation is still visible around 128 KB but disappears at 256 KB.  What are your thoughts on bumping this default to 256 KB or 128 KB? I think I would be fine with upping it to 256KB. If users are using the progress callbacks, they are probably doing it for larger files so that they can get progress and so in the end I do not see 256KB being too large of a grainularity for progress.\n Also it is worth to note that with the bump of io chunksize, the memory usage increases but not by a lot (~10-20 MB depending on the size of the download).\n  This adds transfer methods for both uploading from and downloading to file-like objects.\n\ncc @kyleknap @jamesls\n Implementation looks good. I have probably three main, but generally small comments:\n\n1) We should raise errors for users if they provide the wrong file type. I do not think we want to accidentally sign up for supporting filenames provided to the `*_fileobj()` because currently it can. I think we should add validations in both the `upload_fileobj()` and `download_fileobj()`. Honestly, I think the long issue thread: https://github.com/boto/s3transfer/issues/27 is quite relevant here and I would be all for taking your `readable()` functionality and adding a `writeable()` functionality and adding it here in boto3, because we have distinct methods for fileobjs and filenames and would make a lot of sense. Let me know what you think? Similarly, we should update `S3Transfer.*_filename()` to have this validation as well. We can add this in a separate PR as well if it requires a bit of logic, which I would be fine with.\n\n2) Let's document how to do the common case of `open()` and be very explicit in the docstrings that modes **must** be bytes.\n\n3) Had some small comments about assertions in the tests.\n @jamesls Yeah I am not too tied to trying to determine if an IOError would be raised. I think I was just pointing out it would be better to have the logic from this PR: https://github.com/boto/s3transfer/pull/28 in boto3.\n\nThe main benefit that I can see with doing this is you can give a more specific error message possibly and error out sooner as for downloads since you really cannot tell that a file is not writeable until you download part of it and try to write it to the file. But otherwise, there is not really any huge benefits.\n Updated. I haven't done the validation bits though, I'm -0 on it.\n @JordonPhillips  Can we just at least check for str objects for `*_file` and has `read()`/`write()` for `upload_fileobj()` and `download_fileobj()` respectively?  It seems weird to me that this will work and not sure we want to support?:\n\n``` py\nclient.upload_fileobj('myfilename', 'bucket', 'key')\n```\n\nor \n\n``` py\nwith open('myfile', 'rb') as f:\n    client.upload_file(f, 'bucket', 'key')\n```\n\nWe can always remove the validation if asked for, but with validating it, we get more flexibility in case we want to add extra logic specific to filenames and fileobjs. What do you think?\n\nOtherwise, the other updates you made look good.\n Updated\n Oh we should also do a similar validation for `upload_file` and `download_file` in the `S3Transfer` class to make sure it is a string type so you cannot pass in a file-like object. But after that, I think it should be good to merge.\n I was about to say that should be part of another PR, but it's tiny. When I squash I'll leave that as its own commit.\n Thanks! Looks good. :ship:\n  I agree that's a bit misleading. I also notice we misspell condition in several places... Thanks for pointing it out!\n  This seems like an eventual consistency issue. I would recommend asking about it on the [service forums](https://forums.aws.amazon.com/forum.jspa?forumID=30) to get better advice on how to handle it. \n Closing due to inactivity.\n  For a service api question like this, you should ask on the [service forums](https://forums.aws.amazon.com/forum.jspa?forumID=186). I'm not sure, but I think the VPC was blocking connections to S3. You should be able to configure it to do otherwise.\n Closing due to inactivity.\n  This bug was reported on the CLI repo as well. Let's keep tracking it over there: https://github.com/aws/aws-cli/issues/2030\n  Is 'sis' a custom service definition you've created? I'm not seeing any service that goes by that in our repos.\n\nMore to the point, it does seem like an issue with our expectations. I'll look into it.\n  Is that the end of the error? It looks like it should be printing out the invalid XML response, so it would be good to get a look at that to see what the issue might be. Or is it that EC2 isn't returning a response body at all?\n Closing due to inactivity.\n  We're in the middle of doing some refactoring on the s3 transfer code, I'll make sure this gets tested for. Thanks for reporting!\n This should be fixed in version 1.4.0 of boto3, I have ran into this error multiple times while testing with large downloads in the integration into boto3 and it exited out quickly every time. Resolving issue.\n  Interesting, based on our model, the ValidUntil and ValidFrom parameters are modeled as [datetimes](https://github.com/boto/botocore/blob/develop/botocore/data/ec2/2016-04-01/service-2.json#L15431-L15439) (i.e. the DateTime shape translates to timestamps whichs translates to python datetimes). Can you share a snippet of code using a client or resource that works and does not work? \n  This should be available if you use the latest version of botocore: https://github.com/boto/botocore/blob/develop/CHANGELOG.rst#1437. Not sure why the documentation does include boto3/botocore. Let us know if that works for you.\n  Usually if we do not document something, we do not really want users try to use those features, but in this case, I think I would be fine with documenting the waiter configs, assuming we want to make the claim that the interface is public and will not break or a better option would be exposing the configuration options as a parameter to `get_waiter()`. Marking as feature request nonetheless.\n  Looks like it can be done: http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html. Feel free to contribute a waiter, but otherwise we will look into adding one.\n  Do you have debug logs of when this is happening? There is a good chance that these are already getting retried via our retry configuration: https://github.com/boto/botocore/blob/develop/botocore/data/_retry.json#L45 which in case will raise a `ClientError` if retries are exceeded where you can inspect the error code on it via its `response` property. Here is a sample issue that does it: https://github.com/boto/boto3/issues/597\n  Hmm looks like your connections are being aborted. This looks similar to these issues: \n\nhttps://github.com/aws/aws-cli/issues/1928.\nhttps://github.com/boto/botocore/issues/816\n\nDo any of the suggestions made in any of these issues help?\n  I decided to send this PR to a separate `port-s3transfer` branch so we can make all the progress we want and then merge all of the related changes in all at once, without worrying that some changes get staggered between releases as ideally all the changes will be a part of a minor version bump.\n\nFor this specific PR, I ripped out all of the underlying logic in `S3Transfer` and replaced it with the `s3transfer.TransferManager` class.\n\nIn porting it over, the main `S3Transfer` interface should be completely backwards compatible (i.e. there should not be any runtime breaking errors and core functionality remains in-tact for that class and classes that are used to instantiate that class). However, there may be some backwards incompatibilities in some the gray areas that we did not consider the \"public\" interface and were just helper classes and functions used by `S3Transfer`.\n\nLet me list out some of these gray areas:\n\n**Added a back compat layer**\n- Able to modify a property on `TransferConfig` after it is instantiated to affect behavior in `S3Transfer`, even if the property was an alias like `max_io_queue`. (I could see people modifying this in-place for specific transfers without having to create a new S3Transfer)\n- Raise `boto3.exceptions.RetriesExceeded` exception for exceeded retries on downloads. (It will preserve any retry logic users may have)\n- Raise `boto3.exceptions.S3UploadFailedError` for `botocore.exceptions.ClientError` on uploads. (It will preserve any error logic here as we raised `S3UploadFailedError` for failures in upload parts)\n\n**Did not add back compat layer**\n- Removed all classes that were internal to S3Transfer and are now used in `s3transfer`.  The larger internal-ones consisted of:\n  - `ReadFileChunk`\n  - `MultipartUploader`\n  - `MultipartDownloader`\n- Leaving only these classes that can still be imported:\n  - `OSUtils`\n  - `TransferConfig`\n  - `S3Transfer`\n- If you implemented your own `OSUtils` interface there may be instances where because of assumptions made on where a method is called may result on customized functionality not being used. Specifically, `open_file_chunk_reader()` is no longer called to open a filename and it now only accepts a list of callbacks instead of a single callback. That method is actually no longer invoked in `s3transfer`.\n- For `ALLOWED_DOWNLOAD_ARGS` and `ALLOWED_UPLOAD_ARGS` on `S3Transfer` if you add or remove arguments **after** instantiation, it will not get picked up in the instantaited `TransferManager`.\n\nI think that is most of them. Let me know if you find anymore or if you think we should switch any of them.\n\nI am also going to do some testing so stay tuned for number. I just wanted to get the diff out for people to look at as there are quite a few decisions being made.\n\nThere are also a few more things that I want to address, but that will come in later pull requests:\n- Be more explicit on what is a public interface in the docs\n- Decide if we want to allow users to provide file-like objects to `upload_file` and `download_file` or provide whole new methods and be strict with input validation in terms of allowable file types.\n\ncc @jamesls @JordonPhillips \n @jamesls I updated the initializer to make the transfer manager part of it instead of the class method. Should be good to look at again.\n  Looks like we need to make a retry state for non-existence in the [waiter definition](https://github.com/boto/botocore/blob/develop/botocore/data/ec2/2016-04-01/waiters-2.json#L514). Feel free to contribute a patch to the waiter. Otherwise, we will get this updated.\n  Please refer to this discussion as to why we do not allow underscores: https://github.com/boto/botocore/pull/960\n\nLet us know if that make sense to you.\n Closing due to inactivity\n  Where exactly does the exception get thrown? It seems strange to me that it would throw an error saying that group does not exist when you are just creating one.\n Is the security group being deleted? Could you please post debug logs of a failed attempt so I can see what's going on under the hood? You can do this by calling `boto3.set_stream_logger('botocore')`\n  How did you install boto3? I was not able to reproduce it. My debug logs even show it get properly decoded when I ran your first code snippet:\n\n```\n2016-07-12 14:05:09,006 boto3.resources.factory [DEBUG] Loading s3:ObjectSummary\n2016-07-12 14:05:09,007 boto3.resources.model [DEBUG] Renaming ObjectSummary attribute key\n2016-07-12 14:05:09,008 boto3.resources.action [INFO] Calling s3:delete_object with {u'Bucket': 'my_bucket_foo', u'Key': u'something with spaces'}\n```\n  Yes, there are a few ways. You can set the following environment variable: `PYTHONWARNINGS=\"ignore:Unverified HTTPS request\"`\n\nOr you can suppress it in our vendored version of requests:\n\n``` python\nimport botocore.vendored.requests.packages.urllib3 as urllib3\nurllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n```\n\nThe latter is potentially error prone if you're using linux provided versions of botocore, as some distributions remove our vendored libraries and replace the references with references to the distribution libraries.\n Glad it worked out!\n  Nice catch! \n\u26f5\n  The name on the resource is slightly different from the name on the client. The documentation refers to `ReceiveMessage`, which is the service API name for the function. I don't think there's anything that can be done to change that since there is no service API called `ReceiveMessages`.\n  The ELB module in ansible appears to use [`boto`](https://github.com/boto/boto), not [`boto3`](https://github.com/boto/boto3). If the function is returning properly, you might ask on the [service forums](https://forums.aws.amazon.com/forum.jspa?forumID=30) with the specific parameters and response. Otherwise if boto seems to be at fault, please raise an issue on it's repo.\n  Yup, @quiver is right: your botocore seems to be out of date.\n  Looks fine to me. May I ask what the motivation for this change was?\n Seems reasonable\n\u26f5\n Before I merge this, could you please generate a changelog entry using `scripts/new-change`?\n Awesome, thanks!\n  ```\n___________________________________________________________________\n||     *                            *                    ((   *  ||\n||        *                 *                *            ~      ||\n||                ___.                          *          *     ||\n||       *    ___.\\__|.__.           *                           ||\n||            \\__|. .| \\_|.                                      ||\n||            . X|___|___| .                         *           ||\n||          .__/_||____ ||__.            *                /\\     ||\n||  *     .  |/|____ |_\\|_ |/ _                          /  \\    ||\n||        \\ _/ |_X__\\|_  |\\||~,~{                       /    \\   ||\n||         \\/\\ |/|    |_ |/:|`X'{                   _ _/      \\__||\n||          \\ \\/ |___ |_\\|_.|~~~                   /    . .. . ..||\n||         _|X/\\ |___\\|_ :| |_.                  - .......... . .||\n||         | __\\_:____ |  ||o-|            ___/........ . . .. ..||\n||         |/_-|-_|__ \\|_ |/--|       ____/  . . .. . . .. ... . ||\n|| ........:| -|- o-o\\_:_\\|o-/:....../...........................||\n|| ._._._._._\\=\\====o==o==o=/:.._._._._._._._._._._._._._._._._._||\n|| _._._._._._\\_\\ ._._._._.:._._._._._._._._._._._._._.P_._._._._||\n|| ._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._||\n||---------------------------------------------------------------||\n```\n  @ramjothikumar Would you mind sharing your solution in case anybody else has the same issue?\n  With the release of 1.4.0 of boto3, you now have the option to both `io_chunksize` and `max_io_queue` so for the environment where the network speed is much faster than the io speed you can configure it in a way to make io stop being the bottleneck: https://boto3.readthedocs.io/en/latest/reference/customizations/s3.html#boto3.s3.transfer.TransferConfig\n\nIt is important to note that with the current configuration, the defaults should be suitable. Now the `io_chunksize` is 256KB, which seems to be a good default value as I have found in my testing and testing from others,  @gisjedi. For me with the current default configurations, boto3 achieves the same speed for downloads as the CLI for large downloads on larger instances.\n\nClosing out issue as the defaults should now be resulting in better performance and the necessary configuration parameters related to io are now exposed to tweak to make the download faster if the results from using the defaults are still not as desired.\n  That flag would inject an additional step into your provided list of steps. You can see the source [here](https://github.com/boto/boto/blob/develop/boto/emr/connection.py#L549). For boto3, we avoid customizations that would better be implemented service side. If you would like to see the service API have this feature, I recommend asking on [their forum](https://forums.aws.amazon.com/forum.jspa?forumID=52). For now, you can use the same behavior by adding a step that looks something like this:\n\n``` python\nregion = 'us-west-2'\njar = 's3://{region_name}.elasticmapreduce/libs/script-runner/script-runner.jar'\nargs = 's3://{region_name}.elasticmapreduce/libs/state-pusher/0.1/fetch'\ndebugging_step = {\n    'Name': 'Setup Hadoop Debugging',\n    'ActionOnFailure': 'TERMINATE_JOB_FLOW',\n    'HadoopJarStep': {\n        'Jar': jar.format(region_name=region),\n        'Args': [args.format(region_name=region)]\n    }\n}\n```\n  Could you please post a debug log so I can get a better idea of what's happening under the hood?\n  Could you please post a debug log so I can get a better idea of what's happening under the hood?\n  We have no particular customizations for SQS that override the base functionality of our default endpoint resolver chain. This would be a useful customization to have, but I'm worried that it might break customers relying on our current behavior.\n Is there any breaking behavior if you use the AWS url vs the queue url?\n Closing due to inactivity\n  It's okay to reuse, with one caveat: clients and resources aren't guaranteed to be thread safe. So you should have one for each thread.\n  The attributes on a resource like that aren't hydrated until you try to access them, at which point we'll do a describe call under the hood and populate everything. From the docs [here](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#route) you can see that the `Route` object has all the attributes you're missing.\n Ah, I see. This is one of several resources that can only be returned from another call. I think we should update our documentation to not add constructor docs for resource like this which have no load methods. It makes things very confusing. So to get that route, you'll need to grab it from the RouteTable\n Are you certain that your route table is attached to any of those things? They won't be returned if not.\n Closing due to inactivity\n  The simplest solution would be to simply run your callback function after you call `upload_part`. There are no callbacks for individual requests.\n  I agree that this is something that should be added, but I'm not seeing any previous version that did. What version are you using that has it?\n  This further avoids merge conflicts by not having a default\nname for a given service change type.\n\ncc @kyleknap @jamesls\n  I'm unable to reproduce the error. The stackoverflow post you linked is using `SecurityGroups` not `SecurityGroupIds`, which is your actual code using? I also notice that you seem to have an extra 's' in your security group id, which could be the issue if this is copied code.\n  Closing due to inactivity\n  Yeah I would recommend reaching out to the forums in this case. They should be able to help you with the proper API calls needed to get what you need as I am not too familiar with that use case.\n  Readthedocs is changing their project domains over to .io for\nsome security concerns. This replaces all occurences of\n`readthedocs.org` with `readthedocs.io`.\n\ncc @kyleknap @jamesls\n Whoops, didn't see that! Sorry!\n  You can increase the read timeout by providing it in the [config](http://botocore.readthedocs.io/en/latest/reference/config.html). The default value is 60 seconds. Ex:\n\n``` python\nimport boto3\nfrom botocore.config import Config\n\nec2 = boto3.client('ec2', config=Config(read_timeout=120))\n```\n\nIt would also probably be useful to request that EC2 add pagination to this operation. You can do this on [their service forum](https://forums.aws.amazon.com/forum.jspa?forumID=30).\n\nLet me know if that works.\n Closing due to inactivity\n  \u26f5\n  botocore has released with support for this and related commands\n  You need to select a specific instance type, the default (`m1.small`) is not valid for that ami.\n You pass that in with the `InstanceType` parameter ([docs](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.ServiceResource.create_instances)).\n  `ClientError`s are what the service sends back, so you should let the service team know on [their forum](https://forums.aws.amazon.com/forum.jspa?forumID=72) that their error message is not very helpful. I'm gonna close out this issue, but feel free to update when you get a response!\n  You can assume a role for up to an hour. For convenience, you can specify a role to assume in your profile. [This](http://docs.aws.amazon.com/cli/latest/topic/config-vars.html#using-aws-iam-roles) gives good examples.\n  `SourceGroupName` refers to the security group's name, not it's id. You will also need to specify `SourceSecurityGroupOwnerId`. [docs](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.SecurityGroup.authorize_ingress)\n Glad it worked out!\n  Are we going to be putting these into all the docs?\n \u26f5\n  You can query the state reason from [`instance.describe_attribute`](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Instance.describe_attribute).\n Generally we try not to hide when a user needs to make additional requests. If you would like for `describe_instances` to return that information, you should make that request on the [`ec2 forum`](https://forums.aws.amazon.com/forum.jspa?forumID=30). Then we (and all other sdks) can pick that up transparently.\n  \u26f5 \n  \u26f5 \n  This cleans up all the current PEP8 issues.\n\nI know unused imports can be false positives, so here's all the unused imports:\n- boto3/docs/attr.py:13:1: F401 'py_type_name' imported but unused\n- boto3/dynamodb/conditions.py:14:1: F401 'functools' imported but unused\n- boto3/resources/response.py:17:1: F401 'ResourceLoadException' imported but unused\n\nAll of these looked safe to remove, so I did.\n\ncc @kyleknap @jamesls\n  This is an issue with the documentation, we shouldn't be showing pagination parameters since the collections will paginate through all options. What `MaxKeys` does is set the number of responses to each individual `list_objects` request we make, but we will exhaust them all. To get a specific number, you can use `.limit`.\n\nFor the following example, say we have a bucket with the following objects:\n\n```\nfoo\nbar\nbaz\n```\n\n``` python\nimport boto3\n\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('foo')\n\nlen(list(bucket.objects.all()))\n# 3\n\nlen(list(bucket.objects.filter(Prefix='ba')))\n# 2\n\nlen(list(bucket.objects.filter(Prefix='ba').limit(1)))\n# 1\n\nlen(list(bucket.objects.limit(2)))\n# 2\n```\n  Sounds like there may be a bug on the service side if they aren't taking that url. You should ask about that on the [service forums](https://forums.aws.amazon.com/forum.jspa?forumID=86), they should be able to help out.\n  Looks like we're not setting a loader on the `None` data. For now you can work around this by calling `.load` on the resource and all the missing information should populate.\n  The resource api will populate the location constraint for you, but in the low level client you need to specify that yourself.\n Yeah, `us-east-1` is a special case where you don't need to specify the constraint (for backwards compatibility concerns). You can ask in [their forums](https://forums.aws.amazon.com/forum.jspa?forumID=24) about that since it's not something boto3 can control. The [s3 docs](http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUT.html#RESTBucketPUT-requests-request-elements) show all the valid values.\n  Either way is fine, just use whichever method you feel is more readable. As far as messages not deleting, you will need to call `get_notifications` a second time to delete any particular message. I ran the same code (slightly modified) and messages deleted just fine.\n\n``` python\nimport boto3\n\n\ndef get_notifications():\n    sqs = boto3.client('sqs')\n    url = 'https://sqs.us-west-2.amazonaws.com/foo/bar'\n    MESSAGE_KEY = 'Messages'\n    while True:\n        response = sqs.receive_message(QueueUrl=url)\n\n        if MESSAGE_KEY not in response:\n            continue\n\n        message = response[MESSAGE_KEY][0]\n        yield message['Body']\n\n        sqs.delete_message(\n            QueueUrl=url, ReceiptHandle=message['ReceiptHandle'])\n\n\nfor message in get_notifications():\n    print(message)\n```\n  Thanks for reporting! I'll look into it tomorrow (when my terminated instance is ready)\n  \u26f5 \n  \u26f5 \n  @hdn8 You will need to provide content disposition as part of your signed request. You could also be having issue with unicode characters, which we don't support in headers for sigv4.  :shipit:\n  :shipit:\n  I think this is an interesting idea.\n\nWhat about the case where the hash/range key are the same but the other keys are different?  We won't detect that case and you'll still get the same error message:\n\n```\n    with table.batch_writer(auto_dedup=True) as batch:\n        for i in range(50):\n            batch.put_item(\n                Item={\n                    'PRIMARY_KEY': 'same_key',\n                    'changing': i,\n                }\n            )\n```\n\nHowever, if we then only guarantee uniqueness based on a provided hash/range key, we could be silently ignoring items that have the same hash/range key but different values for the other keys.\n\nWhat are your thoughts on that?\n Ah good idea.  I think that would work.\n\nAny concerns @kyleknap @JordonPhillips?\n  cc @kyleknap @JordonPhillips \n  cc @kyleknap @JordonPhillips gg\n  :shipit:\n  In general, we rely on the various services to return error codes to us that we can surface to the user.\n\nIn S3, there are certain cases where no error code is returned.  In the example above we're performing a `HEAD` request, which never has a response body.  In that case, there's no error code we can return.  When that occurs, the best option we have is to just use the status code as the error code we surface to users.\n\nWe'll get the docs updated to clarify this.\n  Same as CLI version with default repo changed to boto3.\n\ncc @kyleknap @JordonPhillips \n  Looks good to me.\n  Looks like the dynamodb reference docs also have an issue:\nhttp://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Query.html\n\n![image](https://cloud.githubusercontent.com/assets/368057/14185272/06d10340-f72e-11e5-9a89-cbf00dd9d16a.png)\n\nOur docs where we pull this from (https://github.com/boto/botocore/blob/develop/botocore/data/dynamodb/2012-08-10/service-2.json#L1421) have: `<p><code>sortKeyName</code> <i><![CDATA[&#x3C;]]></i> <code>:sortkeyval</code>`\n\nThanks for letting us know.  I'll follow up and see what we can do.\n  :shipit:  \n\nFor reference, I believe this was from http://stackoverflow.com/questions/36287720/boto3-get-credentials-dynamically correct?\n  :shipit:\n  :shipit:\n  In the case where no items are processed and we received\nall the items back as unprocessed key, the next put_item\nrequest will have flush_amount + 1, which will trigger\nan error.\n\nTo fix this, the input_buffer is always sliced to\nflush_amount before the batch_write_item() call.\n\nFixes #483.\n\ncc @kyleknap @JordonPhillips \n  :shipit:\n  :shipit:\n  Follow up from previous pull request.\n\ncc @kyleknap \n  One thing to keep in mind is that boto3 lazily loads data/objects it needs, so the first time you create a request it will create the necessary connection and other objects it needs to actually make a request.\n\nSo the expected behavior should be that you'll see an increase on the _first_ API request, which is expected because it's lazily loading the necessary objects.  But subsequent requests should _not_ see any memory increases.\n\nHere's an example of what I'm seeing.\n\nFirst, I can create the same data as you if I only make a single API call:\n\n```\nimport boto3\n\nclient = boto3.client('s3')\n\n@profile\ndef foo():\n    r = client.get_object(Bucket='mybucket', Key='key')\n    contents = r['Body'].read()\n    return contents\nfoo()\n```\n\ngives:\n\n```\nLine #    Mem usage    Increment   Line Contents\n================================================\n     5   22.371 MiB    0.000 MiB   @profile\n     6                             def foo():\n     7   24.578 MiB    2.207 MiB       r = client.get_object(Bucket='bucket', Key='key')\n     8   24.586 MiB    0.008 MiB       contents = r['Body'].read()\n     9   24.586 MiB    0.000 MiB       return contents\n```\n\nHowever, if I make an API call and then run the command again, I see the expected results:\n\n```\nimport boto3\n\nclient = boto3.client('s3')\n\n@profile\ndef foo():\n    r = client.get_object(Bucket='bucket', Key=key')\n    contents = r['Body'].read()\n    return contents\n\nclient.get_object(\n    Bucket='bucket',\n    Key='key')['Body'].read()\n\n\nfor i in xrange(100):\n    foo()\n```\n\ngives:\n\n```\nLine #    Mem usage    Increment   Line Contents\n================================================\n     5   24.934 MiB    0.000 MiB   @profile\n     6                             def foo():\n     7   25.379 MiB    0.445 MiB       r = client.get_object(Bucket='bucket', Key='key')\n     8   25.379 MiB    0.000 MiB       contents = r['Body'].read()\n     9   25.379 MiB    0.000 MiB       return contents\n```\n\nEven bumping up the number of iterations to 1000 shows roughly the same amount:\n\n```\nLine #    Mem usage    Increment   Line Contents\n================================================\n     5   27.148 MiB    0.000 MiB   @profile\n     6                             def foo():\n     7   27.617 MiB    0.469 MiB       r = client.get_object(Bucket='bucket', Key='key')\n     8   27.617 MiB    0.000 MiB       contents = r['Body'].read()\n     9   27.617 MiB    0.000 MiB       return contents\n```\n\nCan you show the output you get using the second script that makes an API call first?  I want to make sure we're seeing the same behavior.\n Sounds good.  Let us know if you see any other issues.\n  I played around with several outlines and this worked best for me.  The outline is:\n\n```\n- Credentials\n   - discuss various credential providers and how you configure them\n- Configuration\n   - all env vars we support\n   - all config vars we support\n```\n\nThe main downside is that there's some overlap between credentials\nand configuration, but users are typically trying to configure credentials\nor they want to see a list of everything that you can configure, so I\nthink it seems reasonable to break it up with the above format.  Open to\nother suggestions though.\n\nThere's still a couple missing pieces but I'd like to get\nthis initial change in format agreed on first.  Follow up pull requests are:\n- docs on the s3 configuration options\n- docs for assuming roles\n\nCloses #427.\n\ncc @kyleknap @JordonPhillips \n  Can you clarify if you're using boto or boto3?\n\n`get_contents_to_file` is from boto (https://github.com/boto/boto), but this repo is for boto3.\n\nIf you are using boto, I'd recommend giving boto3 a try.  Boto3 implements this content length check via the botocore library (https://github.com/boto/botocore/blob/develop/botocore/response.py#L95-L103) so this case should be handled for you automatically in boto3.\n  Confirmed, looks like a regression from https://github.com/boto/botocore/pull/769.  We'll get this fixed.\n This has been released in botocore.  You just need to update the version of botocore to the latest version to pick up this fix.\n  This handles 3 cases:\n- They've provided an invalid service_name\n- They've provided a service name that has a client but no resource\n- They've provided a valid service name but an invalid API version\n\nAs an example, this script:\n\n``` python\nimport boto3\nprint \"\\ncase1: boto3.resource('bad-resource-name')  # Bad name with no client:\\n\"\ntry:\n    r = boto3.resource('bad-resource-name')\nexcept Exception as e:\n    print str(e)\n\nprint \"\\ncase2: boto3.resource('firehose')    #  No resource but has client:\\n\"\ntry:\n    r = boto3.resource('firehose')\nexcept Exception as e:\n    print str(e)\n\nprint \"\\ncase3: boto3.resource('ec2', api_version='bad-version')  # Has resource/client but bad API version.\\n\"\ntry:\n    r = boto3.resource('ec2', api_version='bad-version')\nexcept Exception as e:\n    print str(e)\n\n```\n\nproduces this output:\n\n```\n$ python t.py\n\ncase1: boto3.resource('bad-resource-name')  # Bad name with no client:\n\nThe 'bad-resource-name' resource does not exist.\nThe available resources are:\n   - cloudformation\n   - cloudwatch\n   - dynamodb\n   - ec2\n   - glacier\n   - iam\n   - opsworks\n   - s3\n   - sns\n   - sqs\n\n\ncase2: boto3.resource('firehose')    #  No resource but has client:\n\nThe 'firehose' resource does not exist.\nThe available resources are:\n   - cloudformation\n   - cloudwatch\n   - dynamodb\n   - ec2\n   - glacier\n   - iam\n   - opsworks\n   - s3\n   - sns\n   - sqs\n\nConsider using a boto3.client('firehose') instead of a resource for 'firehose'\n\ncase3: boto3.resource('ec2', api_version='bad-version')  # Has resource/client but bad API version.\n\nThe 'ec2' resource does not an API version of: bad-version\nValid API versions are: 2014-10-01, 2015-03-01, 2015-04-15, 2015-10-01\n```\n\nFixes #506 \n\ncc @kyleknap @JordonPhillips \n @kyleknap Ready for another look.\n  I'm not able to repro.  The URL encoding that happens as part of the serialization process should not affect the ListObjects result.  Do you have a code sample you can share?  Here's what I tried:\n\n```\n# Bucket contents:\n$ aws s3 ls bucket/repro/C-us-west-2:1e3ee2dd-4537-4aa2-95d4-fadfd6828388/\n2016-03-11 12:47:44          0 g\n2016-03-11 12:47:44          0 h\n2016-03-11 12:47:44          0 i\n```\n\nBoto3 code:\n\n``` python\nimport boto3\n\ns3 = boto3.client('s3')\npager = s3.get_paginator('list_objects')\nbucket = 'bucket'\nr = pager.paginate(\n    Bucket=bucket,\n    Prefix='repro/C-us-west-2:1e3ee2dd-4537-4aa2-95d4-fadfd6828388/').search('Contents[].Key')\nfor key in r:\n    print key\n```\n\nPrint these results:\n\n```\n$ python repro.py\nrepro/C-us-west-2:1e3ee2dd-4537-4aa2-95d4-fadfd6828388/g\nrepro/C-us-west-2:1e3ee2dd-4537-4aa2-95d4-fadfd6828388/h\nrepro/C-us-west-2:1e3ee2dd-4537-4aa2-95d4-fadfd6828388/i\n```\n  :shipit:\n  :shipit:\n  :shipit:\n  :shipit:\n  :shipit:\n  @kyleknap should we close this out for the time being?\n  :shipit:\n  When I run the `create_build` method, I get the storage location in the `StorageLocation` element. I can also see the parameter come over the wire when I set `boto3.set_stream_logger('botocore')`. Could you show me what the response that the server is sending boto3? You can run something like this to figure it out:\n\n``` py\ngamelift_client = boto3.client('gamelift',\n                          aws_access_key_id=AWS_ACCESS_KEY,\n                          aws_secret_access_key=AWS_SECRET_KEY,\n                          region_name=GAMELIFT_REGION)\nboto3.set_stream_logger('botocore')\ncreate_build_result = gamelift_client.create_build(Name='some-build-name',Version='1')\n```\n  This issue should now be fixed with the release of boto3 1.4.0, I would recommend upgrading to that. We even have tests in place in the underlying library: s3transfer. To ensure that quick exits happen:\nhttps://github.com/boto/s3transfer/blob/develop/tests/integration/test_upload.py#L52\n\nTesting locally, I am no longer able to see this. Resolving issue.\n  With the release of boto3 1.4.0, we have added support for nonseekable streams for uploads: https://boto3.readthedocs.io/en/latest/guide/s3.html#uploads. Please use one of the `upload_fileobj()` methods to do so. I do not think the `put()` method will ever support nonseekable files as the ability to seek is needed for this lower level method to calculate md5's and sha256 checksums. Plus the `upload_fileobj()` method is multithreaded and manages multipart uploads for you automatically so that is much more convenient than the `put()` method.\n\nResolving issue.\n  Just want to follow up here, it looks like there's nothing in the debug logs that suggest any errors are occurring.  It also looks like the debug logs are incomplete.  Afterwards the last line you have above, it should show the response body which will contain an XML response.  We'd need to see that XML document to understand if the server is returning the data and boto3 is not parsing it properly or if the service is not returning the data at all.\n  Looks good. Just had a comment on the test where we should try to use the stubber instead of mock for clients.\n Thanks! :ship:\n  Also noticed we have not been updating the `CHANGELOG` so I updated that as\nwell. This specifically ensures you pick up this merged functionality: https://github.com/boto/botocore/pull/779\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n  This was addressed server side. I confirmed by running the sample code again, which results in a successful call. The service doc page you linked now also has examples using that value. I'm closing this out, but feel free to re-open if the issue pops up again.\n  :ship:\n  :ship:\n  I believe I see the issue.  Working on a fix.\n The `ProvisionedThroughputExceededException` is being retried (https://github.com/boto/botocore/blob/develop/botocore/data/_retry.json#L78-L94).  What might be happening is that all the 10 retry attempts are being exhausted at which point we'll propagate the `ProvisionedThroughputExceededException` exception.\n\nI think we may need to allow the user to override the max number of retry attempts so users can set it to a higher number as needed.\n  cc @jamesls @mtdowling @rayluo @JordonPhillips \n  Looks good. :ship:\n  :ship:\n  The environment variable is \"false\" if it is a PR. However that equates to\ntrue as it is interpreted as a string\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n  cc @jamesls @mtdowling @rayluo @JordonPhillips \n  I think you need to remove the `MesageStructure='json'` part. This is only needed if you want differing messages being published based on the protocol according to the MessageStructure description. Let me know if that helps.\n Closing. Please reopen or comment if you have any more questions.\n  Yeah that is unfortunate. It looks like that this an oversight when modeling the API. I think we could fix this by making `Filters` an alias for `Filter`, and be able to accept both to maintain backwards compatibility.\n Looking over more of the EC2 model there are a couple more places that I found it in: `describe_hosts` and `describe_flow_logs` \n There seems to be a reoccurring theme where we need to alias arguments for consistency/naming collision reasons. Closing this issue in favor of the general issue: boto/botocore#772. Let's track progress there.\n  This is an error coming the service. So it should affect both boto3 and the CLI. Here is an example of this from the CLI:\n\n```\n$ aws ecs create-service --service-name ecs-simple-service --task-definition sleep360 --desired-count 10 --role myrole --cluster arn:aws:ecs:us-east-1:938912457125:cluster/default\n\nA client error (InvalidParameterException) occurred when calling the CreateService operation: A role was passed, but no load balancers were present.\n```\n\nAppears to be the same error that you are getting with boto3, which makes sense in terms of consistency. Based on the documentation, it appears that the only reason you would use a role is for granting permissions to your load balancers. Is there are particular use case for adding a role when there is no load balancers to grant permission to?\n Makes sense. We will try to get the upstream source updated to get the boto3 docs updated.\n  Fixes https://github.com/boto/boto3/issues/420\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n  That is annoying that we cannot fix this. I wish the `tags` property was a reference to a collection of tags. Otherwise, fix looks appropriate. I did have a suggestion on how we add it though that I think would be good to explore.\n Looks good. :ship: I like that the docstring idea worked out. It will be a lot easier to add custom methods that need to be added for compatibility reasons and can be represented in resource model terms.\n\nI do want @jamesls opinion on adding extra arguments to the `creating-resource-class` event. I  could see people using them so I am fine with them.\n Looks good. Just had those two comments to help cleanup the interface/speed.\n Thanks! :ship: once test pass.\n  Interesting the CLI and boto3 use roughly the same credential provider. So that should work. Could you do the following things to help debug this:\n1) Run `configure list` in the CLI to see what credentials it is using:\n\n```\n$ aws configure list\n      Name                    Value             Type    Location\n      ----                    -----             ----    --------\n   profile                <not set>             None    None\naccess_key     ******************** shared-credentials-file    \nsecret_key     ******************** shared-credentials-file    \n    region                us-east-1      config-file    ~/.aws/config\n```\n\n2) What version of `botocore` and `boto3` are you using?\n Cool. Glad to hear it is now working.\n  Thanks! Merging.\n  This is a bug. `from` is a reserved word in python. We will have have to rename the argument to avoid this naming collision.\n True, that is a valid workaround, but we will still look into making an alias for the `from` argument.\n There seems to be a reoccurring theme where we need to alias arguments for consistency/naming collision reasons. Closing this issue in favor of the general issue: https://github.com/boto/botocore/issues/772. Let's track progress there.\n  Was receiving questions on it and it was not completely obvious on how to do it with `cryptography`.\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n Cool. Updated that.\n  I am able to reproduce this. Note you can only reproduce this with python3. More research needs to be done to see if it is an issue with our underlying http library or it is something with our implementation. I have found a few related python bugs, but not sure if those fit the bill especially on Python3.5 I am still seeing them:\nhttp://bugs.python.org/issue16900\nhttp://bugs.python.org/issue12133\n  You do not see this problem with the CLI because it will automatically do pagination for you if it is available. In `boto3` through its client interface, you will have to use [paginators](https://boto3.readthedocs.org/en/latest/reference/services/autoscaling.html#AutoScaling.Paginator.DescribeAutoScalingGroups). Here is a snippet on how to do this:\n\n``` py\nIn [1]: import boto3\n\nIn [2]: client = boto3.client('autoscaling')\n\nIn [3]: paginator = client.get_paginator('describe_auto_scaling_groups')\n\nIn [4]: for page in paginator.paginate():\n   ...:     print(page)\n   ...:     \n{u'AutoScalingGroups': [], 'ResponseMetadata': {'HTTPStatusCode': 200, 'RequestId': '7f916f40-c455-11e5-b61b-c534c89980ac'}}\n```\n\nThen here is how the CLI collects all of the groups into one list:\n\n``` py\nIn [5]: print(paginator.paginate().build_full_result())\n{u'AutoScalingGroups': []}\n```\n\nLet me know if you have any more questions or comments\n Closing. Please reopen if you have anymore questions\n  The ability to upload files from file-like objects is now supported in boto3 1.4.0, I would recommend reading: https://boto3.readthedocs.io/en/latest/guide/s3.html#uploads and using one of the `upload_fileobj()` methods to upload file-like objects.\n\nI also noticed that there were discussions of implementing OSUtils so it would be good to take a look at the upgrading notes: https://boto3.readthedocs.io/en/latest/guide/upgrading.html before upgrading as functionality may have changed based on assumptions made in custom implementations of OSUtils.\n\nOtherwise, resolving issue as the functionality is now available.\n @Sidhesh-telsiz \n\nIt does do chunking. [Here](https://github.com/boto/s3transfer/blob/develop/s3transfer/manager.py#L99) is the underlying parameter that controls the max number of chunks to ensure you do not run out memory. Essentially what the library does is read from the input stream one chunk (~8MB) at a time and waits to read any more chunks to be delegated to worker threads that do the upload part if the current in memory chunks being uploaded is at its maximum.\n @Sidhesh-telsiz \nSo for the example in the docs, it is just showing how to use `upload_fileobj()` with a file-like object created from using `open()`. It is not a requirement that the file-like object was created with `open()`, and I think that is what is causing your error as the file does not exist on disk. `upload_fileobj()` should work with any file-like object that has a `read()` and produces binary so you do not necessarily need to use `open()` or the `with` context manager.\n  Refactored the `ServiceDocumenter` to subclass from botocore's `ServiceDocumenter`\nto share some reused logic.\n\nHere is how it looks. It is exactly the same as botocore's shared examples:\n![screen shot 2015-12-31 at 9 48 08 am](https://cloud.githubusercontent.com/assets/4605355/12066857/b7d92712-afa3-11e5-84fb-19e977aefee8.png)\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n  :ship:\n  cc @jamesls @mtdowling @rayluo @JordonPhillips \n  Fixes https://github.com/boto/boto3/issues/380\n\nIt adds a `start_restore()` on `Object` and `ObjectSummary` resources. Note that the method is not called `restore()` because the `Object` resource already has a `restore` attribute.\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n @jamesls I would be fine with doc8 being added as a check in Travis.\n  Thanks Mitch! If you add in a quick test for this addition, it will be good to merge.\n  Makes sense. Marking as feature request.\n  I think it is the same cause as this issue: https://github.com/boto/botocore/issues/738. Let me know if strapping `mock` down to 1.0.1: https://github.com/boto/boto3/blob/develop/requirements.txt#L4 fixes it.\n  Makes sense. It is unfortunate that the parameter for the cloudsearch domain API shadows python's `return` keyword. We will look into adding something to the documentation to clear this up.\n  With the release of boto3 1.4.0, we introduced a managed `copy()` method that handles the copying of multipart and nonmultipart objects: https://boto3.readthedocs.io/en/latest/guide/s3.html#copies. Each of these methods make use of `CopySource` being a dictionary consisting of a bucket, key, and optional version id. Using this dictionary, we will create the proper `CopySource` key for you so you do not worry how to format or url encode the string anymore. Therefore, resolving the issue.\n  Looks good. Had some small comments. Another comment that I have is make sure you update the `setup.py` to include the examples under `package_data` so they get included in installation:\nhttps://github.com/boto/boto3/blob/develop/setup.py#L43\n\nIt would be sort of simiiar to what we do for the CLI:\nhttps://github.com/aws/aws-cli/blob/develop/setup.py#L31\n LGTM :ship:\n  Fixes https://github.com/boto/boto3/issues/394\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n  Makes sense. We will have to make sure we do not break anything by laxing this, but seems reasonable. Marking as feature request.\n  It was not consistent with what is in the setup.py and setup.cfg.\n\nNoticed this inconsistency when reviewing: https://github.com/boto/boto3/pull/398.\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n  Thanks!\n  Alright here is roughly what I would do to update the metadata for an object that is in s3 that requires a multipart upload. (Note that for sizes larger than 5GB there will need to be multiple `UploadPart` and `copy_from` needed with the `CopySourceRange` paramter to be able to generalize it more for copies greater than 5GB):\n\n``` py\nimport boto3\n\ns3 = boto3.resource('s3')\nmy_object = s3.Object('mybucketfoo', 'bar')\n\nmetadata = {'foo': 'bar'}\nprint('Initiating multipart upload')\nmultipart_upload = my_object.initiate_multipart_upload(Metadata=metadata)\npart_copy = multipart_upload.Part(1)\nprint('Beginning to copy')\nresponse = part_copy.copy_from(CopySource='mybucketfoo/bar')\npart_etag = response['CopyPartResult']['ETag']\nprint('Completing the upload')\nupdated_object = multipart_upload.complete(\n    MultipartUpload={'Parts': [{'ETag': part_etag,'PartNumber': 1}]})\nprint(updated_object.metadata)\n```\n\nLet me know if this helps or if you have anymore questions.\n I do not think there is anyway to get around the copy time from making the request. The best option you have is to make the part copies multithreaded to reduce time for the lambda function.\n\nThe good news is with the release of boto3 1.4.0, we have released a new managed `copy()` method that will do multipart copies autmatically and do it in parallel: https://boto3.readthedocs.io/en/latest/guide/s3.html#copies. So you should see a speed up in using this as you no longer will just have to loop through these. So I would recommend using that method especially for multipart copies.\n\nResolving issue, as multipart copy sample is no longer needed with the managed `copy()` method.\n  Noted. We have an issue tracking this: https://github.com/boto/boto3/issues/174. We do not have immediate plans to support it, but let's use the issue I linked as the canonical source for tracking the feature.\n  Looks good. Had the same comment as James. :ship: \n Thanks!\n  Hmm. I'm seeing an issue as well, but not the same error as you are getting. I am getting instead:\n`AttributeError: 'ec2.instancesCollection' object has no attribute 'iterator'` when I try to chain.  Looks like a regression though. If you install version 1.2.1, you should not see the problem anymore.\n This is just a note for myself:\n\nThe code breaks on double chaining because in the `CollectionFactory` class we assume that we always proxy through the `CollectionManager` class, but in double chaining we actually store a runtime-generated resource class based from `CollectionResource` that is used to instantiate the collection, but those collections are using the methods that were attached to the `CollectionManager` class that we generated at run-time, which even though they have a different interface, they differ in implentation (i.e. no `iterator()` method existing).\n\nThis should not be hard to fix.\n  First of all, I would recommend not creating the `ObjectSummary` resource directly from the `ServiceResource`, instead use the `Object` resource as it provides more functionality than `ObjectSummary`. `ObjectSummary` is just an artifact of the fact that the `ListObjects` operation returns less information about an individual object than `HeadObject`.\n\nHowever, your initial issue raises an interesting issue, where from the service resource you can instantiate any resource but you may not load them if they do not have a `load()` method defined. If the subresources have actions though, you do not have to load them, you can just call its action and everything will be fine. So I think for this case though, we are going to have to add a load method to the `ObjectSummary` resource even though these resources are really only instantiated on `ListObjects` operations.\n  That error is being thrown from DynamoDB. So for query, you always have to provide some expression to query with. `KeyConditionExpression` is what boto3 uses and `KeyCondition` is a legacy parameter and is maintained for backward compatibility. But in the end, you have to provided either of them.\n\nI could not find any interface for sorting without specifying some query. Would it be possible to create a query that would return all of the items in your table and that way it sorts all of your items as well?\n The docs cannot mark either of them as a required in the docs because if a parameter is marked as required it will be a hard fail if the parameter is not even part of the request (it does not matter what other parameters were provided). So for example:\n- If `KeyCondition` is marked as required, then users would not be able to just only provide `KeyConditionExpression` (which is recommend) because `KeyCondition` is not in the request.\n- If `KeyConditionExpression` was marked as required, that would break users previously using only `KeyCondition` because they now have to provide `KeyConditionExpression` instead.\n- Then you cannot mark both as required because that would cause conflicting queries or be redundant.\n\nYeah so if you have a partition key and a sort key, you would have to provide the partition key in the query as that is required when querying. You can also provide a sort key as well though to narrow down the results returned back, and this has more comparisons available to it than the partition key's equality comparison. Here is more specifics in the docs about what you must provide for queries: http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#QueryAndScan.Query.\n\nTo get this working, I think you will need to rely on querying over each category as the partition key can only rely on the `eq()` comparison. Let us know if you have anymore questions.\n Yep no problem. Glad to help.\n  Interesting I think it has to do how sphinx is interpreting the carriage return. I will see what I can do to fix\nthis.\n  Yes you need to do this by with `CopyObject` API operation. I think the best option would be to add some sample code in the documentation on how to this. I am not sure if adding a convenience method because getting an exact copy of an object but with just changed metadata would require multiple calls (which the user may not be aware of). It would be best to just completely document the process so users are aware of all calls are making and be able to pick what calls they may or may not want. Thoughts?\n With the release of boto3 1.4.0, we have support for managed copies, making easier to replace metadata no matter the size of the object. In the user guide, there is an example of how to replace the metadata: https://boto3.readthedocs.io/en/latest/guide/s3.html#copies.\n\nResolving issue.\n  Yeah we have gotten this feedback before for instances: https://github.com/boto/boto3/issues/264. It is unfortunate result of ec2 responding with no \"Tags\" key in the response and as a result this gets translated to `None` in boto3. If ec2 returned the \"Tags\" key but with an empty list than it will work as you expect. So we will have to look at customizing this.\n\nI am going to close this issue in favor of the issue that I linked as they both require the same customization. Let's follow the progress there.\n  That's interesting because the CLI and boto3 are using the exact same code path from botocore. Could you provide a debug log from your script? (`boto3.set_stream_logger('botocore')`)\n  Thanks for reporting, we'll look into adding it\n  Yeah so this is a little tricky. So for the `objects` collection on the bucket resource, it will return [ObjectSummary](https://boto3.readthedocs.org/en/latest/reference/services/s3.html#objectsummary) resources which do not have the restore property. There is a difference between ObjectSummary and Object resources because ObjectSummaries are loaded from different s3 operations. ObjectSummary is loaded from a ListObjects which has less information than the HeadObject operation which is used to load the Object resource. To get the `restore` attribute value you would need to do something like this as the HeadObject operation is the only api method that can get this information:\n\n``` py\nimport boto3\n\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('glacier_test')\nfor obj_sum in bucket.objects.all():\n    obj = s3.Object(obj_sum.bucket_name, obj_sum.key)\n    storage_class = obj.storage_class\n    restore = obj.restore\n```\n\nFurthermore, the `restore` attribute just provides information on the status of a glacier restoration. It does not actually restore the object. To initiate the restoration process you need to access the client's [restore_object](https://boto3.readthedocs.org/en/latest/reference/services/s3.html#S3.Client.restore_object) method. So something like this should work:\n\n``` py\nimport boto3\n\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('glacier_test')\nfor obj_sum in bucket.objects.all():\n    resp = bucket.meta.client.restore_object(\n        Bucket=obj_sum.bucket_name,\n        Key=obj_sum.key,\n        RestoreRequest={'Days': 1}\n    )\n```\n\nOnce you actual send the restore request, you will notice that the `restore` attribute will no longer be `None`:\n\n``` py\n\nimport boto3\n\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('glacier_test')\nfor obj_sum in bucket.objects.all():\n    obj = s3.Object(obj_sum.bucket_name, obj_sum.key)\n    storage_class = obj.storage_class\n    restore = obj.restore\n    print(obj.key, obj.storage_class, obj.restore)\n\nOutput:\ntest.txt GLACIER ongoing-request=\"true\"\ntestfile GLACIER ongoing-request=\"true\"\n```\n\nTo know when the object is ready to download the value will be `ongoing-request=\"true\"`. So you will need to `reload()` the object to see if it is ready to download.\n\nAs a note to myself, based on my walkthrough, it seems that it would be good if we added the following to boto3:\n1) Documentation on how to restore glacier objects\n2) Waiters to pull for when a glacier object is ready to be downloaded\n3) Possibly add the `restore()` method to the Object resource so we do not have to drop down to the\n    client to restore the object.\n\n@dduleep Let me know what you think of these suggestions.\n Yeah I think that documentation would be good for this. Not sure if `force()` method is the way to go here. I much rather have waiter exposed for this (on the resource as well) as it would be more explicit of what is going on.\n So I did some researching on the waiter implementation for waiting until a s3 object is restored, and I came to the conclusion that adding a waiter implementation is not the best approach. It would requires pulling of state for roughly 3 to 5 hours to see if a restoration is complete. In addition, for each pull of state a `HeadObject` request would be needed and in-between each call would require practically a sleeping for tens of minutes. This makes the implementation pretty inefficient in terms of time and cost.\n\nThe better implementation would be to expose a SNS notfication event for glacier restorations. There is already a concept in s3 via bucket notifications: http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html. We will talk with S3 to see if they could expose such a feature.\n\nOtherwise, I think my PR addresses the other points that I listed.\n  Yeah I have feeling it is exactly what @rayluo linked where you are either setting a custom ca bundle or you are using a version of certify (which is not a dependency of boto3) that has a broken certificate validation when communicating with s3 endpoints. There is a thread that explains this more in the CLI repository: https://github.com/aws/aws-cli/issues/1499. Let us know.\n `certifi` is not a dependency, but if it is installed in the same python environment as boto3 or the CLI, our underlying http library `requests` \\ `urllib3` will use `certifi` if it notices it is available. My guess the reason you did not see it on the CLI is that you have it installed in a different environment than boto3 whether its a different virtualenv or through a bundled-installer. If you install the CLI in the same environment as boto3, my guess is that you will see the same issues.\n\nGlad to here that you got this working. Closing issue.\n    If you don't mind being a bit indirect, you can get some of this information from Cloudwatch, as they introduced some [storage metrics](https://aws.amazon.com/blogs/aws/amazon-s3-update-delete-notifications-better-filters-bucket-metrics/) a few months ago. The catch is that it doesn't appear to support glacier, or at least you cannot specify glacier explicitly. I'll show you an example of what the current state of affairs looks like at any rate:\n\n``` python\nimport boto3\nfrom datetime import datetime, timedelta\n\n\nbucket_name = 'BUCKET-NAME'\ncloudwatch = boto3.client('cloudwatch')\nresponse = cloudwatch.get_metric_statistics(\n    Namespace=\"AWS/S3\",\n    MetricName=\"BucketSizeBytes\",\n    Dimensions=[\n        {\n            \"Name\": \"BucketName\",\n            \"Value\": bucket_name\n        },\n        {\n            \"Name\": \"StorageType\",\n            \"Value\": \"StandardStorage\"\n        }\n    ],\n    StartTime=datetime.now() - timedelta(days=1),\n    EndTime=datetime.now(),\n    Period=86400,\n    Statistics=['Average']\n)\n\nbucket_size_bytes = response['Datapoints'][-1]['Average']\nprint(bucket_size_bytes)\n```\n  Fixes https://github.com/boto/boto3/issues/351\n\nI would also be fine with bringing back the requirement2.txt file that we used to have instead of directly writing `futures` into the tox.ini file. I picked this because we really do not use tox to often in our testing and seemed kind of awkward to have a requirements2.txt lying around that was only used for tox.\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips  \n Maybe I do not use tox to often. Let me see if I can get it to work.\n Yeah I really hope we can run the ci scripts in tox. It would be much more consistent\n Yeah I got it working using our ci scripts. Simplifies it a lot. Be pushing it up soon once all of the tests pass.\n @jamesls @mtdowling I updated the `tox.ini` file to use the ci scripts\n yep, seem good :ship: \n Yeah I do not think there was a way to run the install script in `deps`. It seems to depend on installing with `pip`, which the script uses but cannot be directly used on the scripts.\n  So boto3 does not have official support for Eucalyptus. Some operations may work because Eucalyptus has similar APIs to AWS, but nothing is guaranteed.\n\nUnfortunately, I am not super familiar with the Eucalyptus API. So I am not exactly sure how the Eucalyptus cli command converts to a boto3 call. Would it be possible to get a log of what that Euclayptus cli is sending over the wire? I may be able to convert it to a boto3 call.\n  Yeah we can get this updated.\n  There have been a fair amount of questions about using API Gateway in boto3 and other SDKs and tools as well, and most of the questions could have been answered from better documentation. This issue is to track suggestions to on how to improve the API Gateway documentation. Please provide spots in the documentation that you may have found unclear and any suggestions you may have.\n One suggestion was improve documentation for `integrationHttpMethod`: https://github.com/boto/boto3/issues/340#issuecomment-154451653\n  Thanks. We will take a look at it. May take some time to go through it, as multipart copies can get tricky. But I multipart/multithreaded copies would be a good addition to boto3 as the AWS CLI has that functionality as well.\n With the release of 1.4.0 of boto3, we decided to go with a different approach where the implementation of the managed copy exists in the `s3transfer` package that is now shared with the CLI and boto3. Closing out PR, as managed copies are now implemented: https://boto3.readthedocs.io/en/latest/guide/s3.html#copies.\n\nThanks again for the contribution!\n  Very neat. We will take a look at it.\n Just want to give an update here. With the release of version 1.4.0, we added support for managed copies. Here is the user guide for how to use the managed copy methods:\nhttps://boto3.readthedocs.io/en/latest/guide/s3.html#copies. So I would recommend trying that out.\n\nResolving issue.\n  I am not able to reproduce:\n\n``` py\nIn [5]: default_vpc_instance = ec2_resource.Vpc('vpc-myid)\n\nIn [6]: new_security_group = default_vpc_instance.create_security_group(\n              Description='foo', GroupName='mysecurity'\n```\n\nWhat version of boto3 and botocore are you using? Also could I get debug logs for that call you are making? You can do so be setting `boto3.set_stream_logger('botocore')` right before you make the call.\n  So doing an in memory stream of the zip file is not possible. The closest I got was having this logic, but the stream we get from s3 is not seekable so you cannot feed that into the ZipFile object:\n\n``` py\n    try:\n        response = s3.get_object(Bucket=bucket, Key=key)\n        s3_object = response['Body']\n        zippedfile = zip(s3_object)\n        namelist = zippedfile.namelist()\n        for filename in namelist:\n            with zippedfile.open(filename) as f:\n                s3.put_object(Bucket=dump_bucket, Key=filename, Body=f)\n\n    except Exception as e:\n        print(e)\n        print('Error getting object {} from bucket {}. Make sure they exist and your bucket is in the same region as this function.'.format(key, bucket))\n        raise e\n```\n\nAfter looking at your code, to lessen memory consumption you could avoid reading it all in memory by not calling the `data = zfile.read(filename)`. You could possibly instead have logic such as:\n\n``` py\n        namelist = zippedfile.namelist()\n        for filename in namelist:\n            with zippedfile.open(filename) as f:\n                s3.put_object(Bucket=dump_bucket, Key=filename, Body=f)\n```\n\nNote that this will improve memory consumption but it may take longer to upload because this is a single threaded upload.\n\nAnother thing that I am curious on is if you are downloading 15GB of data, would you run out of disk space in lambda? I was looking at the Lambda documentation and it seemed to indicate that you only have 500 MB of disk. That is why in my initial attempt I tried to avoid using `download_file` because that saves it all to disk (assuming the files we are downloading are greater than 500MB). Let me know if any of these suggestions help.\n  Thanks! Merging.\n  Thanks for the PR. Looks like the tests related to documentation are failing. Not exactly sure why after taking a quick look.\n\nWe have done preliminary testing with 3.5 and it seems most functionality is fine, but we will have to make sure we get all of these tests and integration tests to pass as well. Also, I think botocore will need to have official python 3.5 support as well because most of the functionality of boto3 lives in botocore.\n  There is no functionality for max bandwidth. In terms automatic throttling, it means that it will do exponential backoff retry logic if request start failing due to throttling related issues (i.e. read timeouts).\n\nThe best option you have as of now is setting the `max_concurrency` on `TransferConfig` object: https://boto3.readthedocs.org/en/latest/reference/customizations/s3.html#boto3.s3.transfer.TransferConfig. This will ensure that only a set amount of requests are being made at a time. Let me know if this helps. Otherwise, I can mark it as a feature to be able to specify a max bandwidth rate. We have the same request in the AWS CLI.\n  Yeah that's strange. This is an error response coming from the S3. Most services though do not throw an error though if the list is empty, they just return an empty list. We may have to add a customization here based on S3's behavior, but we still need to do more research on what the right approach will be.\n Yeah I tried out the other SDKs that use resources like the ruby sdk and they have the same issue as boto so we will need to figure what the story will be:\n\n``` rb\n2.2.3 :001 > require 'aws-sdk'\n => true \n2.2.3 :003 > s3 = Aws::S3::Resource.new(region:'us-east-1')\n => #<Aws::S3::Resource> \n2.2.3 :005 > bucket = s3.bucket('mybucketfoo')\n => #<Aws::S3::Bucket name=\"mybucketfoo\"> \n2.2.3 :006 > tagging = bucket.tagging()\n => #<Aws::S3::BucketTagging bucket_name=\"mybucketfoo\"> \n2.2.3 :007 > tagging.tag_set\nAws::S3::Errors::NoSuchTagSet: The TagSet does not exist\n```\n\nI think returning an empty list should be the behavior.\n  So for lambda I believe that you need to specify the type as `AWS`. When I run a `get_integration` on an API that I have, it looks as so:\n\n``` py\nIn [1]: import boto3\n\nIn [2]: c = boto3.client('apigateway')\n\nIn [3]: c.get_integration(restApiId='mvbkclx8xd', resourceId='hq6h8p', httpMethod='GET')\nOut[3]: \n{'ResponseMetadata': {'HTTPStatusCode': 200,\n  'RequestId': 'e29d161c-8253-11e5-acb9-574206fbd54e'},\n 'cacheKeyParameters': [],\n 'cacheNamespace': 'hq6h8p',\n 'credentials': 'arn:aws:iam::934212987125:user/kyleknap',\n 'httpMethod': 'GET',\n 'type': 'AWS',\n 'uri': 'arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:934212987125:function:CreateThumbnail500'}\n```\n\nTo reverse this and make a `put_integration` call all I would have to do is run:\n\n``` py\nIn [4]: c.put_integration(restApiId='mvbkclx8xd', resourceId='hq6h8p', httpMethod='GET', integrationHttpMethod='GET', uri='arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:934212987125:function:CreateThumbnail500', type='AWS', credentials='arn:aws:iam::934212987125:user/kyleknap')\nOut[4]: \n{'ResponseMetadata': {'HTTPStatusCode': 201,\n  'RequestId': '69679d11-8254-11e5-8771-71ff826f91a9'},\n 'cacheNamespace': 'hq6h8p',\n 'credentials': 'arn:aws:iam::934212987125:user/kyleknap',\n 'httpMethod': 'GET',\n 'type': 'AWS',\n 'uri': 'arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:934212987125:function:CreateThumbnail500'}\n```\n\nLet me know if you have any more questions.\n Cool. Glad you got it working. I opened up another issue to track improvements to documentation:https://github.com/boto/boto3/issues/350 and linked your comment because I ran into the same issue when I first tried using apigateway. Closing this issue as you were able to get lambda support to work with apigateway.\n  Interesting. Is it possible we could get a debug log of this? It would be nice to see if the `'RequestID'` is completely missing or just misplaced on the error response. To get debug logs, all you would have to do is add `boto3.set_stream_logger('botocore')` to right before you make the ec2 call.\n Alright we will need to investigate it then. Are you just using a `DescribeInstances` operation or the `instances` collection on the service resource?\n Thanks. Out of curiosity do you have a lot of instances to iterate over in the collection? I wonder if that is why the `RequestId` is missing.\n Thanks! We will look into this then.\n Thanks! This should be enough for us to implement a fix.\n  So `boto3` does not require the global config to set proxies. All you need to do is set the general `https_proxy` environment variable and `requests`/`urllib3` should use the value stored in that environment variable. So something like:\n\n```\nexport https_proxy=https://username:password@hostname:port\n```\n\nLet me know if this helps.\n  No, you're not missing anything. To do multipart s3-s3 transfers you have to perform 5+ API calls to make sure the copy is identical, which is more than we're comfortable abstracting away in boto3 right now.\n You can still do this, there is just no wrapper around it.\n  With your snippet I get another error entirely: `An error occurred (InvalidParameterValue) when calling the AuthorizeSecurityGroupIngress operation: Invalid value 'Must specify both from and to ports with TCP/UDP.' for portRange.`\n\nI suspect that we may be hitting the same issue, however, which is that you need to specify `FromPort`.\n\n``` python\nec2 = boto3.resource('ec2')\nsecurity_group = ec2.create_security_group(\n    GroupName='tmp_testing_group', Description='test')\nfor port in [22, 80, 443, 843]:\n    security_group.authorize_ingress(\n        IpPermissions=[\n            {\n                'IpProtocol': 'tcp',\n                'FromPort': port,\n                'ToPort': port\n            }\n        ]\n    )\nsecurity_group.delete()\n```\n\nLet me know if that works for you.\n @teran-mckinney That would be up to the service team, but I expect that they would not do that at this point as it  would be a breaking change. Glad everything worked out!\n  Unfortunately this is not possible with boto3's model, as you suggested. I am not intimately familiar with how Lambda optimizes requests, but you could ask in the [developer forums](https://forums.aws.amazon.com/forum.jspa?forumID=186&start=0) for tips in that direction. I also found [this blog post](https://aws.amazon.com/blogs/compute/container-reuse-in-lambda/) that indicates that initialization code can sometimes be re-used. My (non-expert) impression is that if you create your service clients / resources outside the scope of a function, the can be re-used in some situations.\n\nOne thing you can do to save startup time in boto3 is to ignore the service resources and just use the client. There is a little bit of extra initialization that needs to be done on a resource on top of the underlying client it creates. Additionally, a resource will marshall responses into objects rather than passing through the raw response. The client is a bit more difficult to use in terms of programmer effort, and in some cases (such as handling paginated responses) it can be considerably more difficult. You can look at our code and the CLI code to see how we do things, but that in itself can be difficult due to our dynamic model.\n\nAside from that, I can't think of anything beyond the KISS principle. Using the client forces you to be very explicit about what operations you call, so make sure you aren't calling anything you can get for free or cheaper somewhere else. You can get most of the information about an Object in S3, for instance, without having to download the contents.\n\nLet me know if you have any more questions.\n @muikrad Can you share an example snippet of what you're lambda functions are doing?  I'd like to see what your'e trying to do with boto3.  Maybe we can speed things up.\n  We do not support anything but Amazon Web Services, so interop with things like `fakes3` is left up to them entirely. That being said, it looks like in your test case you aren't unregistering the `fix_s3_host` event.\n @kengruven We need to update our docs.  We recently added support for this, so make sure you're using the latest botocore version.  You can set these in your `~/.aws/config` file to get equivalent behavior for `OrdinaryCallingFormat`:\n\n```\n[default]\ns3=\n    addressing_style = path\n```\n\nThe indentation in front of `addressing_style` is relevant.  For reference, subdomain would be:\n\n```\n[default]\ns3=\n    addressing_style = virtual\n```\n\nUntil we get the docs updated, here's the relevant docstring from botocore: https://github.com/boto/botocore/blob/develop/botocore/client.py#L627\n\nLet us know if `addressing_style=path` doesn't work with the fakes3.\n  This feature was not migrated to `boto3`, but still exists in legacy `boto` if you absolutely need it. After a quick look, it doesn't look like it did all that much anyway, just pulling down the public ip from the instance and guessing what user you need to use. If `paramiko` itself is giving you trouble, I don't think `cmdshell` will help since it is effectively just `paramiko` anyway.\n  botocore / boto3 are a bit tricky to use with executable bundlers because we generate functions on the fly from service definition files. See [this issue](https://github.com/boto/boto3/issues/308) for more details.\n  The `StreamingBody` is a file-like object that just needs to be read. Bytes aren't directly returned, because we need to pull it all off the socket first (and this could potentially be huge). In this way we allow for the data to be downloaded piecemeal in whatever size chunks you wish.\n\nI do agree that the docs should reflect this.\n You can achieve the same without having to use the content length, just using `.read` will read the whole body.\n  Using the botocore `Config` class is currently the only way to set the signature version in code.\n\n``` python\nimport boto3\nfrom botocore.client import Config\n\nclient = boto3.client('s3', config=Config(signature_version='s3v4'))\n```\n\nSetting it in the config file would look like this:\n\n```\n[default]\noutput = json\nregion = us-east-1\ns3 =\n    signature_version = s3v4\n```\n\nThere is a larger issue that this isn't well documented, which should be addressed.\n  We already support this as of Monday. The feature is part of botocore, so boto3 did not get a version bump.\n  This could be very useful, marking as a feature request\n Dupe of: https://github.com/boto/boto3/issues/263\n  Based on the [documentation](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcPeeringConnection.html) for the service API, that appears to be correct behavior. I imagine it would never return the cidr block until the request is accepted.\n  I will take a look at it this week. We definitely need a configuration functionality like this in the resource interface. I think accepting the `Config` object is the way we should go. Another idea that we were considering was the ability to pass in a client to the resource. \n Those were good points. Seems like there are a lot of edge cases in being able to pass in a client. I think sticking with the config is the right direction for now.\n  Thanks for reporting. I confirmed that it only receives one message at a time. We'll take a look.\n I've been investigating this issue, and it seems to be SQS's specified behavior. You are not guaranteed to receive 10 messages if there are 10 or more messages (especially with a small number of messages). All that long polling (enabled by setting `WaitTimeSeconds`) guarantees is that all the machines will be searched, and that it won't return empty until the time is up. When you have a large number of messages in the queue you are much more likely to receive 10 messages in a call.\n\nLet me know if you have any more questions.\n That is still a small number of messages. You can be more or less guaranteed to have 10 messages every time if you have several thousand messages in the queue. Here's a little script to put 5000 messages in the queue:\n\n``` python\nimport boto3\n\n\nsqs_url = QUEUE_URL\nsqs = boto3.resource('sqs')\nqueue = sqs.Queue(sqs_url)\n\n\nfor i in range(500):\n    messages = []\n    for j in range(10):\n        n = str(i * 10 + j)\n        messages.append({\n            \"Id\": n,\n            \"MessageBody\": \"Message %s\" % n\n        })\n    queue.send_messages(Entries=messages)\n```\n\nAfter running that, I got 10 messages just about every time. You still won't get 10 if most of the messages are 'in flight'.\n You are never really guaranteed to get back 10 messages, but you can more or less count on it when you have a thousand or more messages that aren't in flight. If you want to read all of the messages on a small queue, you'll have to perform several requests.\n  Thanks for reporting, we'll look into it\n  The type for that parameter is a string, and so when it says it can take a comma-delimited list it means that it wants a comma delimited string. Let me know if that works for you.\n  Thanks for reporting, we'll look into the issue\n I see you've answered your own question in [this StackOverflow post](http://stackoverflow.com/questions/33307754/spark-submit-emr-step-failing-when-submitted-using-boto3-client), so I'm closing this issue.\n  Thanks for reporting, we'll look into it\n  +1 on feature request from user who contacted me\n  This is because we haven't written resources for all the services yet.  We plan on adding more resources over time.\n  Compare our docs (http://boto3.readthedocs.org/en/latest/reference/services/dynamodb.html#DynamoDB.Client.create_table):\n\n![image](https://cloud.githubusercontent.com/assets/368057/10589850/73d5928c-7662-11e5-91c2-fd41b1c14f52.png)\n\nTo the API reference docs (http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_CreateTable.html):\n\n![image](https://cloud.githubusercontent.com/assets/368057/10589915/d6d3a216-7662-11e5-9274-f30d53e372b2.png)\n\nThe \"Projection\" list elements of KEYS_ONLY, INCLUDE, and ALL are not being rendered properly.    Note how KEYS_ONLY is in the description but not rendered as a sublist, and INCLUDE and ALL look like they're part of the same list as \"Projection\" but they're actually sub elements.\n The service API docs were actually from the GSI param, but LSI has the same issue:\n\n![image](https://cloud.githubusercontent.com/assets/368057/10590029/68cdc1ec-7663-11e5-8c08-63dd9b06bc07.png)\n  :+1: :ship: \n :shipit:\n  Do we need all the pagination tokens for services that we don't currently have resource models for (such as kinesis)?\n\nAlso what if we slightly change the test logic to only check if an operation looks like it's paginated if it doesn't have a pagination config.  So:\n- for each operation for a collection\n- check if we have a page config.  If we do, then move on.\n- If we don't have a pagination config, _then_ check if it looks pageable.  If it does then we can error out.\n\nThat would lower the maintenance burden because we can assume that anything with a pagination config, is in fact paginated so we don't need to be able to independently detect if it's looks paginated based on its input/output members.\n I'm still struggling to see how maintaining this list is worth the effort.  We're trying to be able to correctly flag whether or not any operation can be paginated despite the fact that:\n- We don't currently have a resource model for the service (e.g kinesis).\n- We don't even have a timeline of when a resource model would be added\n- Even when we do add a resource model for a service, we don't even know if it a particular operation would even be associated with a collection.\n\nSo we have a lot of maintenance overhead without even knowing if it will pay off in the future.\n\nI don't think boto3's smoke tests for collections is the place to have up-to-date logic for determining if any possible AWS operation should be paginated.  I think this logic should exist, but that this should be pushed upstream of boto3.\n\nI see these tests as a final sanity check that there's nothing obvious we're missing with the collections and paginations.\n :ship: \n  Boto3 is much more explicit with regions, and except for a few cases, will typically require you to provide a region.  We want customers to be aware of what region they are using.  It is also conceivable that even though OpsWorks is only in a single region currently, they could eventually be available in multiple regions.\n  Looks like our docs (which are the same used for the API reference docs http://docs.aws.amazon.com/amazonglacier/latest/dev/api-job-output-get.html) are confusing here.  You don't need to provide the 'Range: ' part, only the `bytes=...` part.  So the call should look like:\n\n```\ninventory_chunk = job.get_output(range=\"bytes=0-1048575\")\n```\n\nI'll follow up and get those docs updated.\n  Thanks!\n  Yes, we are open to a PR.  Be sure to check out our [contributing guide](https://github.com/boto/boto3/blob/develop/CONTRIBUTING.rst) and include testcases with your PR.\n  Updates EC2 model to the latest\n gotcha\n    Thanks for your suggestion. We will look into this.\n  I thought the \"If the response includes a nextToken , then there is more data to search\" behavior is correctly documented [here](http://boto3.readthedocs.org/en/latest/reference/services/logs.html#CloudWatchLogs.Client.filter_log_events). Are you talking about some different document? Can you share the url to it?\n I can understand your point. That nextToken behavior is kinda a generic behavior across all similar attributes in other api calls. The good news is, normally you don't have to deal with it by yourself. There is a [paginator for filter_log_events](http://boto3.readthedocs.org/en/latest/reference/services/logs.html#CloudWatchLogs.Paginator.FilterLogEvents) to do it for you.\n Oh, to answer your 2nd question. The documentation of that nextToken is defined [here](https://github.com/boto/botocore/blob/develop/botocore/data/logs/2014-03-28/service-2.json#L1353). BUT the thing is that such file is NOT manually maintained. It is generated from upstream definition.\n  I observe similar error in my integration test, but it happens so rarely that it does not really bothers. After all, in practice buckets are normally persistent.\n\nIt also seems that such occasional symptom is hard to completely eliminated, due to [S3's Eventually Consistent](http://docs.aws.amazon.com/AmazonS3/latest/dev/Introduction.html#ConsistencyModel) design.\n\nHope that helps.\n  Can you elaborate a little bit what you are trying to accomplish?  And which documentation are you referring to?\n\nJust FYI.  This is the [boto3 documentation for EC2](http://boto3.readthedocs.org/en/latest/reference/services/ec2.html). AND you can find some [examples here](http://boto3.readthedocs.org/en/latest/guide/migrationec2.html).\n  It is true that we are currently using futures 2.2.0.  We are open to upgrade it to newer version.  Some investigation on latest futures 3.0.3 (a major version bump) and throughout tests are needed before the upgrade.\n Diff of 2.2.0 to 3.0.3:\n\nhttps://github.com/agronholm/pythonfutures/compare/2.2.0...3.0.3\n\n## Changelog from 2.2.0 to 3.0.3\n\n# 3.0.3\n- Fixed AttributeErrors on exit on Python 2.x\n\n# 3.0.2\n- Made multiprocessing optional again on implementations other than just Jython\n\n# 3.0.1\n- Made Executor.map() non-greedy\n\n# 3.0.0\n- Dropped Python 2.5 and 3.1 support\n- Removed the deprecated \"futures\" top level package\n- Applied patch for issue 11777 (Executor.map does not submit futures until\n                               iter.next() is called)\n- Applied patch for issue 15015 (accessing an non-existing attribute)\n- Applied patch for issue 16284 (memory leak)\n- Applied patch for issue 20367 (behavior of concurrent.futures.as_completed()\n                               for duplicate arguments)\n\nThis should be an ok change to pull.  If all our tests pass I'll update this.\n  Looks like you are talking about the [Glacier service get_job_output() operation](http://boto3.readthedocs.org/en/latest/reference/services/glacier.html#Glacier.Client.get_job_output).\n\nThat body is, as you said, a stream. So the [normal read() behavior](https://docs.python.org/2/library/stdtypes.html?highlight=file.read#file.read) in any other standard file-like object still applies here. Typically you will want to provide a buffer size, and loop until you read all the data.\n  Thanks for your suggestion. We will look into this.\n  Thanks for bringing this up. The workaround in your SO thread is creative and very educational.  I also want to remind you that, your patch works as long as you only use the botocore part of the feature in boto3. Once you want to use boto3 features i.e. resources, you will also need to do similar things for the boto3/data/... data files.\n\nOn the other hand, if all you need is distributing YOUR project which is built on top of boto3, you can always specify the extra data path from your code, instead of hacking into botocore which would become somewhat difficult to stay updated with upstream.\n\n```\nfrom boto3.session import Session\nsession = boto3.session.Session()\nsession._loader.search_paths.append('/path/to/your/data/directory')  # Hack it this way\ns3 = session.client('s3')\n```\n Boto3 won't be able to add those imports statements back.  The reason for this is because those inject() calls are specifically done to avoid importing modules until they're needed to speed up start up time.  Adding them back would undo their original purpose.  What you'll need to do is update your setup.py script to include a few additional things.  You can add a `py2exe` section where you can call out specific modules that py2exe missed.  You'll need to add the appropriate boto3 imports there.  Here's an example of where we do something similar for the AWS CLI: https://github.com/aws/aws-cli/blob/develop/setup.py#L60-L66\n\nLet us know if you are running into any more issues.\n @TheNilesh boto3 doesn't provide separate imports because there is no static python code to import, it is all generated on the fly so you only load what you use. I don't know anything about py2exe so @jamesls will have to take that one\n  Thanks for your understanding. Again, typically only the create-subresource methods are available in service and parent resource, and you will need to first create a sub resource before you can access its own methods. We don't have resource coverage for everything at this moment, though. So sometimes you have to use the lower-level client interface. We do look forward to increase the resource coverage gradually. I have marked your other 2 issues as feature-request. Thanks again!\n  This PR is a quick patch to work with boto/botocore#645\n\nAll the commits here are duplicated in pending PR boto/boto3#239\n Well, forget the 3rd commit. `assert_in` is not supported in python 2.6. I will take it away in next PR.\n  Alright the commit history is much better now. No longer blocked for this one.\n  This sounds like it had a lot of similarities with this concurrency issue related to concurrent.futures.wait: https://github.com/boto/s3transfer/pull/38. The old implementation of managed s3 transfer relied on a concurrent.futures waiter implementation so that may have been causing the issue. Please try version 1.4.0 of boto3. It should not have this issue. Closing issue for now.\n  @kyleknap you should be able to merge https://github.com/boto/boto3/pull/239 and rebase these PRs correct?  I believe you should be unblocked now.\n  Thanks for your praise and your interest for Amazon services.\n\nAmazon MWS is not currently supported in Boto 3.  I am not able to comment on future plan on this. However, since Boto and Boto 3 can work in the same project side by side, so you can definitely use Boto for Amazon MWS. Hope that helps!\n  Interesting. I did not use Riak CS before. All I can say at this moment is, Boto3 does automatically change endpoint to \"your_bucket_name.s3.amazonaws.com\" when it sees fit. This is done by botocore/utils.py:fix_s3_host(), registered to event 'before-sign.s3'.\n\nYou may, however, force to unregister that handler from that event.\n\n```\nimport boto3\nfrom botocore.utils import fix_s3_host\n\nresource = boto3.resource('s3')\nresource.meta.client.meta.events.unregister('before-sign.s3', fix_s3_host)\n\n# for bucket in resource.buckets.all():\n#     print(bucket.name)\n\nbucket = resource.Bucket('rayluo')\n# print(bucket)\n\nboto3.set_stream_logger('botocore')\nfor o in bucket.objects.all():\n    print(o)\n    break\nprint('done')\n```\n\nBear in mind that, you may or may not still run into other issues. YMMV.\n  Thanks @JordonPhillips.  I also run your code snippet, it works for me.\n  That is it.\n  The [s3 client's put_object(Body=a_file_like_object, Bucket=..., Key=...) method in lower level botocore](http://botocore.readthedocs.org/en/latest/reference/services/s3.html#S3.Client.put_object) does support streaming.\n Yes it does.\n\nAlthough not (yet?) mentioned in [Botocore's S3.Client.put_object() 's document](http://botocore.readthedocs.org/en/latest/reference/services/s3.html#S3.Client.put_object), the Botocore S3.Client.put_object() does accept a file-like object. There is even a [test case](https://github.com/boto/botocore/blob/develop/tests/integration/test_s3.py#L868) to ensure that. You won't find the streaming implementation in the code base here, because it is actually [supported by the underlying library, requests](http://docs.python-requests.org/en/latest/user/advanced/#streaming-uploads).\n\nBoth Boto 3's Object.put() and Bucket.put_object() are calling Botocore's put_object(), so they support streaming as well. It is mentioned [here](http://boto3.readthedocs.org/en/latest/guide/migrations3.html#storing-data).\n\nThe higher level [S3Transfer in Boto3 provides more handy features](http://boto3.readthedocs.org/en/latest/reference/customizations/s3.html#module-boto3.s3.transfer). Its upload_file() accepts a filename, and it will automatically split the big file into multiple chunks with default size as 8MB and default concurrency of 10, and each chunk is streaming through the aforementioned low level APIs.\n Yes, you are right.\n Just a heads up.  Those aforementioned high level upload_file() and download_file() methods are now injected into boto3's S3 client, Bucket and Object.  It is easier to use now.  Check out the usage documentation [here](http://boto3.readthedocs.org/en/latest/reference/customizations/s3.html#module-boto3.s3.inject).\n  We will look into that. Thanks.\n  Marking this as feature request.\n  Thanks for the catch! The [document for glacier client's complete_multipart_upload()](http://boto3.readthedocs.org/en/latest/reference/services/glacier.html#Glacier.Client.complete_multipart_upload) is incorrect in this case. You will have to provide the checksum explicitly. The good news is there is already a (undocumented?) helper for you.\n\n```\nfrom botocore.utils import calculate_tree_hash\n\nclient.complete_multipart_upload(\n    checksum=calculate_tree_hash(open('your_file.txt')),\n    vaultName=vault_name, uploadId=upload_id, archiveSize=str(fsize))\n```\n\nBy the way, same error also applies to the [documentation for the MultipartUpload resource's complete() method](http://boto3.readthedocs.org/en/latest/reference/services/glacier.html#Glacier.MultipartUpload.complete).\n\n```\nmultipart_upload = glacier.MultipartUpload(account_id, VAULT_NAME, upload_id)\n...\nmultipart_upload.complete(\n    checksum=calculate_tree_hash(open('file.txt')),\n    archiveSize=str(file_size))\n```\n\nPS: As a side product, I came up with a test case for test_glacier.py. I will commit it later.\n  Sorry for the confusion, the documentation is trying to demonstrate the position when the NextToken appears.  But it will not always be present.  It will be there only when there are more results to be returned in next function call.\n  So yes, you will need to get the ARN right to make it work. Otherwise, we will run into some corner cases. It turns out an incorrect region name will trigger a 403 error, and [an incorrect account number will trigger a 500 error](https://github.com/aws/aws-sdk-java/issues/46). In both cases, the response contains no \"Error\" key, hence the error trace.\n\nWe may provide [an easier way to obtain a correct ARN](https://forums.aws.amazon.com/thread.jspa?messageID=397452) in the future, and/or [modify the error handling logic to tolerate a missing \"Error\" field in the error response](https://github.com/boto/botocore/pull/610/files). I am marking this as an enhancement for future reference.\n\nPS: My test script\n\n```\nimport boto3\n\n\nregion_name = 'us-west-2'  # Incorrect region will result in a 403 error\naccount_number = 1  # 12-digit obtained from AWS Web Console. 0 or 1 results in a 500 error\nDBInstanceIdentifier = 'mydbinstance'\n\narn = 'arn:aws:rds:%s:%s:db:%s' % (\n    region_name, account_number, DBInstanceIdentifier)\nrds = boto3.client('rds')\nboto3.set_stream_logger('botocore')\nr2 = rds.list_tags_for_resource(ResourceName=arn)\n```\n I believe this issue has been fixed and can be closed.\n  Thanks @oflo-styra. We are interested in providing resource coverage for more services.  I am unable to comment on the timeframe for CodeDeploy resource support. We do accept pull requests if you'd like to contribute. At this moment, there is no documentation for this, but it happened before that people can work it out by looking at existing resources as example.\n  Thanks! We will review it.\n  LGTM\n  Can you also describe which version of botocore you are using?\n\nI have tested this on boto3 1.1.3 and botocore 1.2.0, on both Python 2.7 & Python 3.4. It works for me.\n\n```\n$ python\nPython 3.4.3 (v3.4.3:9b73f1c3e601, Feb 23 2015, 02:52:03) \n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import boto3\n>>> s3 = boto3.resource('s3')\n>>> bucket = s3.Bucket('testing.dotsinbucket')\n>>> bucket.create(CreateBucketConfiguration={'LocationConstraint':'us-west-2'})\n{u'Location': 'http://testing.dotsinbucket.s3.amazonaws.com/', 'ResponseMetadata': {'HTTPStatusCode': 200, 'HostId': 'k/CO+kCkqVgs1wh4mUIZaiieUTqj7atJlCQOW8DSNCFBOYD77mnOZ+qtn7jAzSLH0VEz/FZLAzY=', 'RequestId': 'B0FACB4733E06E1B'}}\n>>> bucket.delete()\n{'ResponseMetadata': {'HTTPStatusCode': 204, 'HostId': 'vhEd4MG4NmmJUXNo3PKDnDfNfipqr8NAx2xYBMSRsV1RZlzAGdEng4Ae9Hv5HVNgFvtVE4xeN5M=', 'RequestId': '5CA02136156241B1'}}\n```\n OK this seems to be one of the tricky things of S3.  When creating a bucket in a specific region, you'd better create your S3 resource with SAME region beforehand.  Otherwise, although the bucket creation would still succeed, some other operations (such as delete) will not be able to redirect to the correct region, when you are using a DNS-incompatible bucket name. The correct pattern looks like this.\n\n```\nimport boto3\n\n\nregion = 'us-east-1'  # or 'us-west-2' or 'eu-west-1' or etc.\ns3 = boto3.resource('s3', region_name=region)\nbucket = s3.Bucket('testing.dotsinbucket')  # See the footnote below\n\n# See http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\nif region == 'us-east-1':\n    bucket.create()\nelse:\n    bucket.create(CreateBucketConfiguration={'LocationConstraint':region})\n\n# Another tip: You can enable log for debug\nboto3.set_stream_logger('botocore')\n\nbucket.delete()\n\n# By the way, you may not reuse a bucket name which was occupied in different\n# region recently. So you may need to adjust bucket names slightly in this test.\n```\n @mwedgwood-rmn Yes I agree it may not seem obvious that the resource needs to be created with correct region in the first place (and the default region in your ~/.aws/config may not be the one you want in run time, so you need to take care). But technically it is not a bug. The API correctly returns an error message mentioning \"endpoint\", which is determined by \"region\".\n\nThere are room for improvement. The long term goal will be to find a way to automatically redirect the request to correct region whenever possible, the short term goal is to see if we can provide a better error message. I'll mark this one as enhancement to keep track.\n\nMeanwhile, the pattern in my previous code snippet should provide a feasible workaround for you. Hope that helps.\n @kapilt You'll just need to specify the `region` that matches the region of the bucket.  If you aren't sure of the region you can use:\n\n```\nregion_name = s3.get_bucket_location(Bucket='mybucket)['LocationConstraint']\nregion_name = boto3.client('s3', region_name=region_name)\n```\n\nWe are looking into way to make this more automatic, but for now you'll need to ensure that the region_name of the client matches the region in which the S3 bucket is located.\n  Unit test, function test, integration test and CHANGELOG are also updated.\n The latest feedback has been incorporated.  That CI error is caused by another issue not relevant to this PR.\n It is relevant to this PR in botocore. https://github.com/boto/botocore/pull/645\n OK we ~~are making progress~~ have removed the roadblock in pr #271\n  :shipit:  Looks good.  I agree we should probably talk more about what methods to expose in boto3's session, so we can do that independently of this PR.\n  That is because most of the service documents do not physically exist in this repo in the form of rst files. They are generated by the [doc module](https://github.com/boto/boto3/tree/develop/boto3/docs) based on service model definitions. In this sense, that ReadTheDocs menu is somewhat misleading. We may need to check if we can adjust that menu to avoid confusion.\n\nMeanwhile, do you have a specific need to change the IAM document? If it is about the doc content, we will need to relay it to the upstream service team and/or doc team. If it is about the doc format, you may be able to change it through the aforementioned doc module, and send out a PR.\n\nFeel free to comment on this thread. We will see what we can do.\n  @kpfleming No, as of right now policy documents as input parameters expect and only accept strings. You probably copied in some extra bits from the console formatting.\n\nI have pull requests up to fix the documentation to refer to policy documents as dicts instead of strings and to accept dicts as policy document inputs. Sorry for the delay.\n  Closing inactive issue.\n  For that second point, the fancy way is to provide aliases for backwards compatibility, AND also mention they are deprecated in the release note, and then a couple versions later we will get rid of them.\n\nThat being said, in this case the previous behavior can be considered as a bug, and a bug is always fixed without \"backward compatibility\".\n  Confirmed the symptom. Will need to profile it to find the bottleneck.\n  Can you provide a code snippet to reproduce the issue? Such as:\n\n```\nimport boto3\nboto3.set_stream_logger('botocore')  # This line enables log on console\niam = boto3.client('iam',region_name=\"us-east-1\")\ncloudwatch = boto3.client('cloudwatch',region_name=\"us-east-1\")\nblah_blah()  # Your other codes go in here\n```\n\nIdeally you can also try to use the CLI to reproduce the issue. Just add a `--debug` option at the end of your command line, then you will have a good debug output for investigation.\n  It works fine for me as well using @kyleknap 's snippet. I'm going to go ahead and close the issue since it has been over a month. Please re-open if that snippet does not work for you.\n  As of now, boto2 is hand-coded to use an HTTP POST and form-encoding to send out request, boto3 uses HTTP GET which has an inherent size limit.\n\nBoto3 can also send out HTTP POST but only in json-encoding, which was not supported by the CloudSearchDomain.\n\nWe will mark this issue as a known bug for now, and also keep track with this issue. We will update this issue when situation changes.\n @adepue In general, you are always welcome to help. For this specific case, we tend to and are still trying to address it in a way that every AWS SDK (7 in total) can automatically pick up the new fix. Before that happens, you can have a workaround in your python code like this:\n\n```\ndef post_it(request, operation_name, **kwargs):\n    if request.method == 'GET':  # You can also add one more condition size > THRESHOLD\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded'\n        request.method = 'POST'\n        request.url, request.data = request.url.split('?')\n\nclient = boto3.client('cloudsearchdomain', endpoint_url='http://search-your-domain.com')\nclient.meta.events.register('request-created.cloudsearchdomain.Search', post_it)  # The magic\nclient.search(query='a long long long long ... (8192 bytes) ... query string')  # It works!\n```\n  I'm also not able to reproduce. Could you please attach debug logs so I can dig deeper? To enable the logs, put the following command before any other boto code:\n\n``` python\nboto3.set_stream_logger('botocore')\n```\n\nThanks\n @SamCyanide I think we've all been there. I'm sorry we couldn't help out more, hopefully this issue will help you get an update in a more timely manner.\n  The finalized usage is documented at the top of [this PR](https://github.com/boto/botocore/pull/634)\n  The logic before assumed that the JMESPath expression would not have an integer between square brackets. Thus some parameters were documented in a resource action when they were not supposed to be as the resource already provided their values.\n\nFixes https://github.com/boto/boto3/issues/187\n\nHere is what it looks like now:\n![screen shot 2015-07-30 at 2 57 10 pm](https://cloud.githubusercontent.com/assets/4605355/8996234/566c852e-36cb-11e5-9a8c-c4ebf12115a3.png)\n\nHere is what it looks like after the fix:\n![screen shot 2015-07-30 at 2 57 02 pm](https://cloud.githubusercontent.com/assets/4605355/8996244/60d5e028-36cb-11e5-9d76-d1f42df2dd00.png)\n\nNote that `report_status()` is for the `EC2.Instance` object which should not require an `Instances` parameter to be included.\n\ncc @jamesls @mtdowling @rayluo \n @jamesls I updated the logic to use JMESPath. Should be good to look at.\n  I think it may be because the waiter does not actually update the instance object. If you run `reload()` method after you call `wait_unitl_running()`, does the `state` actually become running?\n  Fixes https://github.com/boto/boto3/issues/178\n\nCan confirm it works as well:\n\n``` py\nIn [1]: import boto3\n\nIn [2]: accountId = '-'\n\nIn [3]: glacier = boto3.resource('glacier')\n\nIn [4]: account = glacier.Account(accountId)\n\nIn [5]: vault_iterator = account.vaults.all()\n\nIn [6]: print(list(vault_iterator))\n[glacier.Vault(account_id='-', name='foo')]\n```\n\ncc @jamesls @mtdowling @rayluo \n  I think the documentation is off here. I believe that a list of instance types is the correct return type here.\n  I am having trouble envisioning this. Could you layout some pseudocode of how this function would look?\n  Whatever is returned in the response by the service is what is provided in the dictionary returned by a client call. So in your case, S3 is not including the `EmailAddress` etc. in the response because the ACL does not have those elements. Boto3 follows suit with the response from the service in that it will only include elements provided in the response. We will not auto-fill missing response elements to an empty string or `None`.\n\nHope this helps. Let me know if you have any more questions.\n I believe it is there for legacy reasons. Setting bucket ACL's using email addresses seems somewhat discouraged by s3: http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#specifying-grantee, which would explain why it is not included their sample response. I am not sure if I feel comfortable hiding the documentation as it seems that a user can get an EmailAddress element in the response under some conditions since setting ACL using the email address is still supported by S3.\n  :+1:\n The finalized usage is documented at the top of [this PR](https://github.com/boto/botocore/pull/634)\n  I am not able to reproduce this:\n\n``` py\nIn [1]: from boto3.session import Session\n\nIn [2]: session = Session(region_name='us-west-2')\n\nIn [3]: client = session.resource('iam')\n\nIn [4]: user = client.User('foo')\n\nIn [5]: user.create()\nOut[5]: iam.User(name='foo')\n```\n\nHowever based on your debug logs, I see what your issue is. You are trying to connect to http://iam.amazonaws.com/. However, IAM endpoint can only being connected through https: http://docs.aws.amazon.com/general/latest/gr/rande.html#iam_region\n\nAre you setting an `endpoint_url` somewhere in your code to force the endpoint to use http?\n  Yep @garnaat is correct. The `describe_regions` call only applies for EC2.\n\nBeing able to list regions for a specific service is something we want to add support for. Thus, reopening the issue and labeling it as a feature request.\n\nIn the meantime, I usually use this bit of documentation: http://docs.aws.amazon.com/general/latest/gr/rande.html to figure out if a service is available in a specific region.\n  This looks like an error in our documentation logic . Technically you could specify `InstanceIds` in `reboot()` method to reboot multiple instances as that method is mapped to the client's `reboot_instances()` method: http://boto3.readthedocs.org/en/latest/reference/services/ec2.html#EC2.Client.reboot_instances. However, this is not how you should be using the `Instance.reboot()` method as it automatically handles the passing of `InstanceIds` parameter to the underlying client method.\n  Also to go on top of what @jamesls said you can avoid the SSLErrors by trying to shorten the amount of results EC2 sends at a time by setting the `PageSize` parameter to a smaller size in the `PaginationConfig` parameter. By making a smaller page size, you shorten the time it takes for EC2 to respond because you are decreasing the amount of results EC2 needs to respond with for each request.\n  I am unable to reproduce this. Here is what I am trying:\n\n``` py\nimport boto3\nfrom boto3.s3.transfer import S3Transfer\nfrom botocore.client import Config\n\nclient = boto3.client('s3', config=Config(signature_version='s3v4'))\ntransfer = S3Transfer(client)\nextra_args = {'ServerSideEncryption': 'aws:kms'}\ntransfer.upload_file(\n    'test.py', 'mybucketfoo', 'test.py', extra_args=extra_args)\n```\n\nIt would be great to get some extra debugging information on this. Could you add this line right before you call `transfer.upload_file()` method: `boto3.set_stream_logger('botocore')` so I can see what the debug logs look like.\n  +1 on removing. I am surprised an error is not thrown in the first place.\n Also this looks like an issue with botocore:\n\n``` python\n>>> import botocore.session\n>>> session = botocore.session.get_session()\n>>> session.create_client('S3')\n<botocore.client.S3 object at 0x10368e2b0>\n```\n :+1: \n  This is caused by the same reason as in this issue: https://github.com/boto/boto3/issues/148\n\nIt was fixed by this merged PR: https://github.com/boto/boto3/pull/154\n\nThis fix will be in the next release of boto3. Or you can just pull down the HEAD of the develop branch.\n\nClosing issue as a duplicate. Let me know if you have anymore questions or issues persist after pulling in the fix.\n  The create tag method cannot be expressed via the resource model because you need to map a set of tags to multiple resources possibly and return a list of each tag for each resource. In order to preserve backward compatibility a new custom method needed to be added to the service resource.\n\nFixes: https://github.com/boto/boto3/issues/137\n\ncc @jamesls @mtdowling \n The docs are fine. The way that the doc system works is that it checks if a method name matches an action name in the resource model. If it does match, it will autogenerate docs for that method and in this case, the custom `create_tags` method matches what is in the resource model so its docs get autogenerated.\n @jamesls @mtdowling\n\nI updated the event name for the service resource to make it more usable. Also the class name for the service resource was updated along with the `create_tags` method. Let me know what you think.\n @jamesls\nI guess that I can switch the test out of that category. I want to keep that test though because I want to ensure that the custom method gets applied to the service resource. There are no tests for that.\n\nI am leaning toward against adding an integration test for this because in order to reproduce the bug I need to spin up more than one ec2 resources, apply tags, check the tags are there, and then clean them up. It seems that this would be testing the service more than the actual functionality of the customization which is already covered by the unit test. In the end, we just need to make sure the customization overrides the default method.\n\nThis also raises the question what is the criteria for what goes into the functional test suit? The functional test that was added for all intents and purposes was checking that the resource had the appropriate method, which is what a bunch of the tests in the functional test suite do. The only caveat was that patching was needed to determine if the resource had the appropriate method.\n\nIs the criteria that to be in the functional test suite that no mock's or patches are used (unless you are mocking out the make_request call) and is testing the end to end functionality of the feature?\n\nThoughts? \n In the meantime, I made the change to switch the functional test to a unit test.\n Sounds good. Thanks for the clarification. Merging.\n  :ship:\n  @SamCyanide \n\nThe vpc id is never used in the underlying [client method](http://boto3.readthedocs.org/en/latest/reference/services/ec2.html#EC2.Client.authorize_security_group_ingress). So I have a feeling it has to do with the parameters that you are sending to the `authorize_ingress` method. Can you provide debug logs of the request you made? You can do so by adding `boto3.set_stream_logger('boto3')` before you make the method call.\n\nAlso as a check, you can make sure the security group is associated to the expected vpc by calling `securitygroup.vpc`. Let me know how that works as well.\n  I am not sure about this change. If we added a new feature in botocore 1.0.1 that is needed in boto3 1.0.1 wouldn't it break if botocore 1.0.0 was installed?\n\nI thought the plan was to bump the lower limit every time to the most recent botocore version but limit the higher limit to the minor version? So it would be `botocore>=1.0.1,<1.1.0`\n Yeah that's fine then if we are following semver. We will need to be a bit more wary of when we need to do minor version bumps. We cannot just keeping bumping the patch version like we have been doing for the CLI lately.\n\nFor example, botocore will thus require a minor version bump when this PR gets merged https://github.com/boto/botocore/pull/592 as boto3 will break when this PR gets merged https://github.com/boto/boto3/pull/154 and we do not update the boto3 dependency of botocore.\n\nIt looks like nothing new was added between botocore 1.0.0 and 1.0.1 so the dependency change this PR does is fine.\n\nThoughts?\n  This especially affects ec2 operations where the identifier is injected into the `Filters` param. So if the `Filters` param was specified in the `filter()` method, the identifier part in the `Filters` param would get clobbered.\n\nFixes: https://github.com/boto/boto3/issues/148\n\nNote the tests will not pass till this PR is merged: https://github.com/boto/botocore/pull/592\n\ncc @jamesls @mtdowling \n  In this PR, I did the following:\n- Created a tutorial directory to add new tutorials.\n- Moved the SQS tutorial to the newly created  directory and updated links in that tutorial.\n- Made a DynamoDB tutorial. I wrote the tutorial such that you could literally copy and paste each codeblock one after the other in order and successfully get through the entire tutorial.\n\nLet me know if you think.\n\ncc @jamesls @mtdowling \n @jamesls \n\nSounds good about adding output for the tutorial. \n\nAs to removing the tutorial directory, one of the main reasons that I added it there as I think that it would have been weird to see `DynamoDB Guide` in the top layer of the scroll bar along with the rest of the guides:\n![screen shot 2015-06-25 at 3 45 50 pm](https://cloud.githubusercontent.com/assets/4605355/8367267/622997fc-1b51-11e5-8a9f-47340bcab296.png)\n\nI think I am going to reorganize the listing of guides into a top level `User Guide` directory and then mix the DynamoDB specific guide into that directory with some of the other guides.\n @jamesls \n\nI updated the code based on feedback. Here are the changes:\n- I grouped the guides into a single section called \"User Guides\" and categorized the guides.\n- I removed the tutorial section and moved the SQS and DynamoDB topics to a \"Service Feature Guides\" category in the \"User Guide\" section. I was hesitant in adding the SQS guide back to the featured \"tutorial\" because I found it awkward that it was the featured tutorial for boto3 when the prose of the entire document is about how to use SQS. It fits much better under a \"Service Feature Guides\". We will just need to refrain from adding tutorials for services that do not have customizations.\n- Added a code snippet about how you can add a bunch of items in using the batch writer. However, that code snippet required a warning to increase write throughput if the code block was attempted to be run because the guide starts with a write throughput of 5.\n- Add output to code blocks where applicable.\n\nLet me know what you think.\n Also I updated the global toc sidebar to list sections deeper than a depth of 2.\n @jamesls \n\nIf I am going to move it back to where it was, I'm going to make some edits for now to make it clear that the SQS tutorial is not the flagship tutorial for boto3 because that is how it looks like right now and I find it really awkward. I will make it clear that is a sample tutorial on how you can use boto3 with an AWS service (not the entire tutorial for boto3).\n @jamesls \nI updated the PR. Let me know what you think.\n  :ship:\n  When we say you have to manually add the cloudwatch alarm is that through the console or though boto3? The only operation that I could find that attaches a CloudWatch alarm to an Auto Scaling policy is this: http://boto3.readthedocs.org/en/latest/reference/services/cloudwatch.html#CloudWatch.Client.put_metric_alarm.\n\nI would ask the [AWS Developer Forums](https://forums.aws.amazon.com/forum.jspa?forumID=30) about if a feature exists or to request this feature because Auto Scaling would have to expose this through their API first before Boto3 could expose it if the feature does not exist.\n  Thanks for the feedback.\n\nFor your first point, it will not help to add the source to the github repository because most of the docs are code generated and this generation is ran when the docs get built on readthedocs. If you want to make a contribution to the documentation it will have to be to the code that generates the docs: https://github.com/boto/boto3/tree/develop/boto3/docs. \n\nFor your second point, I agree that the pages can get quite large. The reason we chose this was that you could search on a single page for what you are looking for as long as you are looking in the correct service as opposed to having to click links to a bunch of different pages. What is your feeling about either of those two options? I feel that one way we can make the docs more navigable is by including class names in the scroll bar on the left. What are your thoughts about that? Would that help?\n\nAny other suggestions you have would be awesome.\n  Addresses: https://github.com/boto/boto3/issues/146\n\nI made it so that the title use the module name instead of the full names. Here is how it will look:\n\nHere is the sidebar:\n![screen shot 2015-06-24 at 1 10 16 pm](https://cloud.githubusercontent.com/assets/4605355/8340411/277c2b6c-1a73-11e5-851a-06b6c48fcd35.png)\n\nHere is the actual service page:\n![screen shot 2015-06-24 at 1 10 26 pm](https://cloud.githubusercontent.com/assets/4605355/8340450/5f595e1a-1a73-11e5-8b84-07cf24dd710a.png)\n\nAnd the descriptions still use the full name:\n![screen shot 2015-06-24 at 1 10 37 pm](https://cloud.githubusercontent.com/assets/4605355/8340452/6fec3d60-1a73-11e5-923c-02843a430c47.png)\n\nI will make a similar PR to botocore to update those.\n\ncc @jamesls @mtdowling\n  That seems strange. I tried it and I can account for all of my subnets with the `filter()` and `all()` method. If some of the subnets are missing, it must have been omitted by the availability zone filter you used for the `filter()` method.\n\nCould you identify the availability zone of the missing subnets?\n I can confirm the issue. What is happening is that the use of `Filter` in the `filter()` method clobbers another filter that was injected into the parameter for the VPC Id, thus you were just getting all of the subnets for the particular availability zone instead of the all of the subnets for a particular availability zone and VPC Id.\n\nThe PR that is referenced in the issue fixes the issue. \n This should be fixed now that both PR's are merged. Closing issue. Please reopen if the issue persists.\n  @JohnDzialo \n\nI think you linked to the wrong method: http://boto3.readthedocs.org/en/latest/reference/services/autoscaling.html#AutoScaling.Client.describe_auto_scaling_groups\n\nThe reason the `Status` was not included in the response dictionary was that Auto Scaling server did not include it in its response. Also if you scroll down past the `Request Syntax` section in the `Response Structure` section, it states the following for `Status`: \n\n\"The current state of the group when DeleteAutoScalingGroup is in progress.\"\n\nSo my guess is Auto Scaling will only include `Status` if you are deleting the group.\n\nAfter looking at the API docs, I was not seeing an element that will always give the state of the autoscaling group (and not have to be deleting). To determine if the autoscaling group is up and running, I would probably check the `HealthStatus` of the instances in the autoscaling group.\n\nLet me know if you have any more questions.\n  Thanks for the feedback. We like the suggestion. I made a PR for boto3: https://github.com/boto/boto3/pull/149\n\nLet me know what you think.\n  :ship:\n  This is needed for the service references to be displayed in the html.\n\ncc @jamesls @mtdowling\n  :ship:\n  This pull request ports the botocore documentation functionality to boto3.\n\nThis pull request will fail until this PR gets merged: https://github.com/boto/botocore/pull/582\n\nI have yet to add unit tests for the additional functionality I added. Unit test being create a fake resource model and then making sure everything is documented as expected (pretty much like the botocore tests).\n\nI did add functional tests though. The functional test include:\n- smoke tests to make sure all services have the appropriate sections\n- tests for the s3 customizations\n- tests for the dynamodb customizations\n\nThe state of the boto3 tests (which includes the functional test and the botocore unit doc test) is at the same or even higher the level of testing boto3 had before for docs.\n\nI am going to continue to work on adding unit test to this PR. I will either add commits for unit tests to this PR or it will come in a subsequent PR depending on how progress goes on this PR.\n\ncc @jamesls @mtdowling\n  I can confirm the issue. It looks like we are not handling the case where multiple resources can be returned by an action.\n  Interesting. This should get fixed soon. We have been working on revamping our docs for boto3.\n\nIn the meantime, I would refer to the botocore docs for now to get an understanding of how to use the command: http://botocore.readthedocs.org/en/latest/reference/services/ec2.html#ec2.Client.run_instances. I know that the method names do not match up but the `create_instances` command is running botocore's `ec2.Client.run_instances` command behind the scenes and the interface is nearly identical.\n\nWe are in the process of porting that doc style over to boto3. So if you have any comments or suggestions on the format of the botocore docs that would be great.\n  Related to this PR: https://github.com/boto/botocore/pull/566\n\ncc @jamesls @mtdowling\n It will fail till the referenced pr passes.\n  What is the way you expect it to look? Can you give sample output from running the two snippets of code?\n @amatthies is on the right track here. The reason that it is not included in the list of objects returned is that the values that you are expecting when you use the delimiter are prefixes (e.g. `Europe/`, `North America`) and prefixes do not map into the object resource interface. If you want to know the prefixes of the objects in a bucket you will have to use `list_objects`. However, I would suggest to use the pagination interface for this because this will allow you to iterate through all objects in the bucket without having to provide pagination tokens:\n\n``` python\nimport boto3\nclient = boto3.client('s3')\npaginator = client.get_paginator('list_objects')\nfor result in paginator.paginate(Bucket='edsu-test-bucket', Delimiter='/'):\n    for prefix in result.get('CommonPrefixes'):\n        print(prefix.get('Prefix'))\n```\n\nAs to your question as how to use anonymous clients for resources try the following. You will have to hook into the event system to disable signing:\n\n``` python\nimport boto3\n\nfrom botocore.handlers import disable_signing\n\nresource = boto3.resource('s3')\n\nresource.meta.client.meta.events.register(\n    'choose-signer.s3.*', disable_signing)\n```\n\nI realize that this not documented anywhere. Documenting the event system and things you can do with it is on our list of thing that we want to do.\n\nBased on the conversation, I see the following action items:\n\n1) Improve documentation to use client when you are trying to get prefixes.\n2) Document the event system and things you can do with the event system\n3) Possibly adding a way to disable signing upon instantiation of the resource.\n\nLet me know what you all think or if there is anything else that should be added to this list.\n  Looks good to me. I had a comment though about a line that looks like should have been deleted. :ship:\n  Verified it as well. By using python 2.6, pip 1.4.1, and installing the sdist with pip.\n\ncc @jamesls @mtdowling\n  @mtdowling @jamesls \n  Looks good. :ship:\n  Looks good. I just had a few comments. :ship:\n Thanks. :ship:\n  @kouk \n\nCan you check to see if you are running into this issue still? I just tried it and the installation worked fine. The latest version (0.0.21)  of boto3 should have had its wheel made using 0.24.0 version of wheel.\n  LGTM :ship:\n  Thanks for asking. We actually do have documentation for them but for some reason all of our resources and collections API docs have disappeared.  We will fix this soon. It is probably an issue with our document generation.\n @geekpete \nI think it should be fixed. It is showing up for me. Maybe the old page is cached in your browser?\n\nEDIT:\nI actually do not see the EC2 resource documentation. This still needs to get fixed\n  Unfortunately, there is nothing from the SDK side to ensure that `list_objects` returns the `ContentType` in the response becasue S3 does not expose it in its API. You would have to do a `head_object` on every object individually.\n\nIf boto3 was to expose it, S3 would have to expose it in its API first. I would suggest going to the [AWS Developer Forums](https://forums.aws.amazon.com/forum.jspa?forumID=24) to request such a feature to be exposed in their API.\n\nLet me know if you have anymore questions.\n  Shoot. Good catch. :ship:\n  This updates the collections API to botocore's pagination api change: https://github.com/boto/botocore/pull/547\n\nThis also introduces a breaking change where  I removed some parameters to make the collections api less confusing by having only one canonical way of limiting the number of results (`limit()` method) and sizes of pages (`page_size()` method). Also this ensures consistency of casing of arguments passed to collections method).\n\nNote that for the `filter()` method, the `limit` and `page_size` arguments were just undocumented to signify we do not officially support those parameters. Let me know what you think about this. I also considered throwing an error if those parameters were ran into in the `filter()` since `filter()` takes in only kwargs.\n\ncc @jamesls @mtdowling\n  Looks good. Code is pretty clean. I had a couple comments. Otherwise, :ship:\n  I tested this locally by changing my local botocore version to a beta release and than installed boto3. It successfully installed the latest alpha release of botocore instead of use the existing beta release version that was installed.\n\ncc @jamesls \n  The letter `u` means that the string is represented as unicode, and python represents unicode by adding a u to the beginning of the string. I really like these references to read more about python and unicode:\nhttps://docs.python.org/2/howto/unicode.html\nhttps://docs.python.org/3/howto/unicode.html\n\nThe content is similar but just pertains to what version of python you are using. Let me know if you have anymore questions.\n  Unfortunately, there is nothing equivalent to `resource.available_resources`. I think that this would be helpful. Marking as feature request.\n\nOne way you could go about figuring the available resources for now is using the `inspect` module to figure out the resources members and then look for any member that begins with a capitol letter. Those are usually the resources.\n  @autrilla \n\nThank you for the feedback. We truly appreciate any feedback we can get on the project.\n\nIt is true that the Boto3 and the CLI share similar methods. This is because both of these projects are separate higher level layers to a lower level library that we maintain: [botocore](https://github.com/boto/botocore). Botocore is lower level in the sense that it methods are a near direct mapping to the various AWS API's . There are very few customizations added to these methods, as they are added in the higher level libraries/tools such as Boto3 and the CLI.\n\nI do have one question. Have you had a chance to look at the resource interface of boto3?\n\nSo boto3 has two different interfaces to interact with AWS's APIs. There is the client interface that you mentioned. The client interface is pretty much the same interface used by botocore, where the methods are nearly direct mappings to the APIs. The main purpose of this interface is to allow users to make more fine-tuned requests to the APIs (i.e. you know exactly what parameters you want to a send in a request and you just want a dictionary back representing what was in the response).\n\nThe other interface, which sounds like the one you want is, the [resource interface](https://boto3.readthedocs.org/en/latest/guide/resources.html). The purpose of this interface is to make interaction more pythonic and object oriented when working with AWS. When you use resources, you are working with auto-generated classes that live onto of the client interface.\n\nTo hit some of the points you mentioned, the resource classes have getters (they are labeled as identifiers and attributes) that will actually make the underlying call for you to retrieve the necessary data.  Resources also can create and return other resources to use from a method call, instead of just a dictionary. So for example an s3 [Object](https://boto3.readthedocs.org/en/latest/reference/services/s3.html#object) resource object has the method [initiate_multipart_upload](https://boto3.readthedocs.org/en/latest/reference/services/s3.html#s3.Object.initiate_multipart_upload) that will return to you a s3 [MultipartUpload](https://boto3.readthedocs.org/en/latest/reference/services/s3.html#s3.MultipartUpload) resource object to work with a multipart upload. Then on top of these resources we have customizations that are built on top of AWS APIs that requires stringing together possiblly multiple API calls. For example, we recently added an `upload_file` and `download_file` method (note that this is only available from the client for now): https://boto3.readthedocs.org/en/latest/reference/customizations/s3.html\n\nPlease let us know if you have any follow up questions/comments/feedback/feature requests.  We love getting feedback on how to improve this project.\n Closing issue. Please reopen if you have any more questions or comments.\n  This is needed because of the recent model directory and loader updates.\n  @vlcinsky \n\nYeah that is one feature that we have identified as necessary for boto3. We actually do have it implemented. It is implemented in botocore, which is a low level library that boto3 uses. It is just not merged into the develop branch yet: https://github.com/boto/botocore/tree/clients-only\n\nIf you want to to try it out, I would pull down that branch. To make the call, you can do something like this:\n\n```\nimport botocore.session\n\nsession = botocore.session.get_session()\nclient = session.create_client('s3')\n\n presigned_url = client.generate_presigned_url(\n    'get_object', Params={'Bucket': self.bucket_name, 'Key': self.key})\n```\n\nLet me know if you have any questions. This feature will be available in boto3 once that branch gets merged into the develop branch of botocore.\n Noted. We will look into this. Will mark this as a feature request.\n  This depends on https://github.com/boto/botocore/pull/530 and will fail until its merged (well actually until clients-only is merged into develop).\n\nI don't expect this to get merged for a bit, but the code can at least be reviewed.\nAlso added some integration test for this.\n\ncc @kyleknap\n Code looks good. The only general design question was whether we should accept client config for resources as well? It may change some of the logic for the extra_user_agent part in resources. If we decide to add client config for resources later, :ship:\n  Just some housekeeping to move functional tests (tests that aren't unit tests but don't make API calls) over to the functional/ directory.\n\nThis builds on https://github.com/boto/boto3/pull/107, which introduced tests/functional so it will include the diff of that PR until it's merged.\n\ncc @kyleknap\n  Allows you to hook into the class creation of a resource.  Basically creating-client-class of botocore, but for resources.\n\nI started adding functional tests (will likely add something that moves out the pre-existing functional tests over in this directory) that shows an example of this: https://github.com/boto/boto3/compare/boto:develop...jamesls:resource-ext?expand=1#diff-42a63ce0e2acdc06478bbda36a076e9aR32\n\ncc @kyleknap\n  Looks great, I didn't have a chance to get into the implementation, but as far as the API goes I think it looks good.  Couple suggestions:\n- I'd rename the classes to just the standard casings, i.e `Equals`, not `EQ`.\n- I'd avoid the one letter class names, maybe `Attr(...)` instead of `A(...)`.  Same thing for `K`.\n- Rather than having a boolean for is_key_condition in the builder, what if there was just a separate `KeyConditionBuilder` that had the same interface as the existing builder, but overrode only the parts it needs (`_build_expression_component`).\n\nOtherwise, awesome API.\n @jamesls I updated the code based on feedback. Let me know what you think before I merge it.\n  This is just a copy of the 2014 API version\n\ncc @kyleknap\n  This rips out all the temporary hack code that boto3\nwas using to load resources.\n\nThis PR also moves the resources into the standard structure\nadopted by the other AWS SDKs.\n\nI cleaned up part of the tests, but I think there's huge room\nfor improvement.  For the time being I ripped out all the uber\npatching in the tests, which hopefully simplifies the test logic.\nMany of those tests are no longer relevant as that logic has been\nmoved into the botocore loader interface.\n\nNote this requires boto/botocore#527, and will fail until that\nPR is merged.\n\ncc @kyleknap\n  I updated this PR to plumb in all of the conditional expression stuff. Note that the only new commit is the last one. The rest of the commits come from the conditional expression builder PR.\n @jamesls \nI believe I addressed all of the feedback you had. Let me know what you think.\n @jamesls \n\nI made the change. Works fine. I did think it was a little weird that if you instantiate the class directly (i.e. without using `type`) you get errors but since users should not be directly using it, I am fine with that.\n  Confirmed, thanks for reporting.\n  cc @kyleknap\n  For easier integration with non travis systems.\n\nNote that this builds on https://github.com/boto/boto3/pull/99, but pulls out all that logic into separate scripts.\n\nThat way integrating with our CI systems besides travis don't require code duplication.  They just need to call `scripts/ci/install` to setup the env, then `scripts/ci/run-tests` to run the tests.  And when we need to make logic changes to how we install packages or run tests we can just make them in a single place.\n\ncc @kyleknap\n  This PR cleans up the way we package boto3 and the way we test packaging.  To summarize:\n- Add conditional dependencies in a way that works with wheels.  By having a conditional dependency within the setup.py logic, the wheel file will differ depending on whether `bdist_wheel` is run on python2 or python3.\n- Remove unused dependencies in our tox/travis files.  This just slows down the CI time without any benefit.\n- Test against our installed wheel.  Rather than relying on the CWD being able to import boto3, we now generate a .whl file, install it, and test against the installed wheel file.  This will catch a number of issues we've run into in the past where the setup.py was incorrect or missing key pieces.\n- Relax contraints on jmespath.  Similar to what was done for botocore.\n\nThis should give us more confidence in the release assets we generate.\n\nNote: I will be sending another PR shortly that pulls much of the CI logic into separate scripts, so that we can interoperate with non-travis CI systems.  I just wanted to get this update to our CI logic reviewed before doing that.\n\ncc @kyleknap\n  Interesting, this is definitely not ideal, especially for regions like `eu-central-1` where Sigv4 is required for S3.  We might be able to defer wrapping the IO object until after the signature is calculated.\n\nThough this does bring up another interesting point regarding retries.  We'll automatically retry any uploads that fail part way through.  Part of this will include rewinding the stream and attempting to re upload the file, which will screw up any progress callback calculations.\n\nI'm starting to think we need more than a simple callback interface.  At the very least the callback interface needs something to indicate that the IO reader has been reset.\n I like it. :ship:\n\n One question: If you hit something like a  read timeout, will the object still have call back enabled (and run into the sigv4 issue again when retried since we resign the request)? I would be wary of this, but it is not super important because we have trouble taking into account those types of retries when calculating the correct total bytes sent over the wire right?\n Yeah sounds good.\n  Interesting.  The setup.py for the latest tagged release definitely has that conditional logic in there: https://github.com/boto/boto3/blob/0.0.15/setup.py#L36\n\nLet me check the release assets, see if the .whl or .tar.gz doesn't match the tagged version.\n Version 0.0.16 is out that fixes this issue.  From what I can tell, the uploaded .tar.gz and .whl files for 0.0.15 were not uploaded properly.\n\nWe'll be adding some automation to prevent this type of thing from happening again.  Thanks for reporting.\n  Also added some basic somke tests to verify we can load the model.\n\ncc @kyleknap\n  Overall looks good, I just had a couple of questions/suggestions.\n :shipit:  Looks good.\n  :shipit:\n  cc @kyleknap\n  - Don't fall back to distutils, we are using setuptools\n  specific functionality so this wouldn't work.\n- Update authorship\n- Use find_packages() so we don't have to keep updating this\n  as we add packages\n\nVerified I could install the sdist.\n  These are occasionally failing because the bucket name\nalready exists.\n\ncc @kyleknap @danielgtaylor\n  Updating docs based on changes from boto/botocore#515\n\nI also removed `BOTO_DATA_PATH` for now.  We can document it once we implement a supported directory structure for AWS models.\n cc @kyleknap @danielgtaylor\n  :shipit: Thanks!\n  @TropicMike thanks for the feedback.  One of the things that might affect the timings is where the test is the geographic location where you are running the tests, especially if you're closer to one region vs. the other.  If you're running this from your laptop, there may also be variances in your ISP's bandwidth that could alter results.\n\nSo if I could summarize what you're seeing:  Even though the absolute times have a wide variance, it appears that uploading via the [console](https://console.aws.amazon.com/s3/home) is consistently faster that boto3 for both large and small files.  Is the accurate?\n\nI'm going to try to repro these results and see what I find.\n Yeah, I'm seeing similar variances.  Also given the console timings will have more variances due to the way it's being timed, I think these numbers seem reasonable.  The upload process should primarily be an IO bound process, so the timings should be in the same ballpark.\n\nFWIW, if you're interested in less variable results, I'd recommend testing on an EC2 instance in the same region as your S3 bucket.  Let me know if there's any other questions.\n  This adds an upload/download file to clients.\n\nThe one deviation I made from the way we do this in botocore is to add lazy handlers that only import the module once they're actually invoked.\n\nIn this scenario, this means we only import `boto3.s3` when we create an S3 client.\n\ncc @kyleknap @danielgtaylor\n I agree it'd be nice to get this added to clients, but I'm not sure we quite have the extensibility capabilities built into our doc gen system yet.  That will likely need to be another pull request to get the doc generator updated.\n @danielgtaylor Take another look, pushed a commit that validates you aren't shadowing a client attribute.\n  This is a planned feature to boto3 that's currently under code review: https://github.com/boto/boto3/pull/80\n #80 has now been merged.  You can now use:\n\n```\ns3 = boto3.client('s3', 'us-west-2')\ns3.upload_file('/foo/filename', 'mybucket', 'mykey')\n```\n\nIt does a little more than boto's `set_contents_from_filename` though.  It will automatically switch over to parallel multipart uploads if the file size is over a size threshold.\n\nThere's also a corresponding download_file method as well.\n\nFeel free to try it out and give us any feedback you might have.\n  @tianx2 I'd double check that the bucket actually is in us-east-1.  I'm not seeing that issue when I try your sample code. For example, I created a bucket with dots in us-west-2.  Running your sample code works for me:\n\n```\n>>> import boto3\n>>> s3 = boto3.resource('s3', region_name='us-west-2')\n>>> bucket = s3.Bucket('jamesls.bucket.with.dots')\n>>> bucket.Tagging().tag_set\n[{u'Value': 'TestValue', u'Key': 'TestTag'}]\n```\n\nHowever if I use the _wrong_ region (say us-east-1 in this example), then I get your error:\n\n```\n>>> s3 = boto3.resource('s3', region_name='us-east-1')\n>>> bucket = s3.Bucket('jamesls.bucket.with.dots')\n>>> bucket.Tagging().tag_set\nTraceback (most recent call last):\n...\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (PermanentRedirect) when calling the GetBucketTagging operation: The bucket you are attempting to access must be addressed using the specified endpoint. Please send all future requests to this endpoint.\n```\n\nYou can confirm where your bucket is located via:\n\n```\n>>> boto3.client('s3').get_bucket_location(Bucket='jamesls.bucket.with.dots')['LocationConstraint']\n'us-west-2'\n```\n  This PR adds support for an intelligent upload_file/download_file method for boto3.\n\nThe module docstring provides some general information and an overview of how to use the module.\n\nI'd like to get some initial feedback on this.  There's unit/integ tests added (there's a few integration tests I've haven't fleshed out yet), and the code is fully functional, but I will be pushing some changes in a bit.\n\nThere are two changes I plan on making:\n- I'm going to be changing the logic for the _download_range function.  The single lock writer on the file unnecessarily slows down the parallel downloads.  I'm likely going to port some version of the what the AWS CLI does to improve this.\n- The callback interface may need to change.  It requires a lot of information that's not technically necessary and could be provided.  It also doesn't handle retries.  In order to do this, I might need to change the interface from a simple callback to an actual class that has a few required methods.\n\nAlso, the socket timeouts and bandwidth throttling are not implemented.  Those are stretch features I might end up deferring for now.\n\nThere will also be another pull request that integrates this with the s3 client and s3 resource objects.\n\ncc @kyleknap @danielgtaylor\n @kyleknap \n1.  I'll take a look and get that updated\n2.  Not opposed to adding that for get_object.  However for uploads, we should be doing it the recommended way by setting the ContentMD5 header.  This might require changes in botocore.\n3.  That is already possible by creating your composite object that has a list of callbacks that it internally will invoke when its called.  I do think that it might be useful to actually provide the user with built in progress callbacks so that they don't have to copy/paste code from the docs.\n @kyleknap @danielgtaylor I believe all the feedback has been incorporated so far except for the partition of the extra_args param which I'm still working on.\n\nI've also pushed a change for the improved IO writer for ranged gets.  It's basically the CLI's IOWriter thread approach but using futures.  Download performance is _much_ better.  Take a look and let me know what you think.  It's a little confusing now as there's two tiers of executors, but hopefully it's not too bad.\n Remaining work:\n- [x] ContentMD5 (punting to the botocore level, so this will be a separate PR)\n- [x] Abort upload on error\n- [x] Delete downloaded object on error\n- [x] Propogate uploadpart/createmultipartupload params\n- [x] Download to a temporary file and then rename.\n- [x] Ensure good error messages on failures\n\ncc @kyleknap @danielgtaylor anything else I'm missing?\n @danielgtaylor because not all the parameters make sense and we're not allowing them all.  How would you suggest we leverage the model in that scenario?\n @kyleknap @danielgtaylor Everything in the checklist above should now be addressed.\n\nI unfortunately had to change a decent chunk of code to handle the error cases for ranged get downloads properly.  Let me know if there's any feedback.\n  I'm not able to repro this issue.  Can you give the exact code you're using?  Here's exactly what I tried:\n\n```\nIn [1]: import boto3\n\nIn [2]: sqs = boto3.resource('sqs')\n\nIn [3]: q = sqs.get_queue_by_name(QueueName='<queuename>')\n\nIn [5]: def print_messages(q):\n   ...:     for message in q.receive_messages(MaxNumberOfMessages=10):\n   ...:         print(\"Messages: \" + message.message_id + \": \" + message.body)\n   ...:\n\nIn [6]: print_messages(q)\nMessages: 10b24e42-7642-40e0-967c-f6093a826459: dGVzdCBtZXNzYWdlIDIyNzM2\nMessages: fcc7517c-15b8-454a-ac9e-c537e1ba2382: dGVzdCBtZXNzYWdlIDQyNzYz\nMessages: d9bbd06e-cb3d-420e-b9e5-e275d2f604c5: dGVzdCBtZXNzYWdlIDQyNzY1\nMessages: 05d8e466-f125-4918-b9cc-0759a93d6553: dGVzdCBtZXNzYWdlIDQyNzYw\nMessages: 7becbb30-6bb2-4fa5-963b-4b0b230c619e: dGVzdCBtZXNzYWdlIDQyNzc2\nMessages: 7cd3cdcf-c176-49de-895b-0fa948cb575c: dGVzdCBtZXNzYWdlIDQyNzg1\nMessages: b8515736-1559-4986-82f4-440026840772: dGVzdCBtZXNzYWdlIDEzNTgw\nMessages: 181ead5f-2587-4189-a9dc-7282d1a3cde4: dGVzdCBtZXNzYWdlIDQyNzkx\nMessages: f16c99ef-a389-443d-8ffc-1b364e60f5b1: dGVzdCBtZXNzYWdlIDQyODAz\nMessages: 0de21a00-d959-46e6-927b-3b5e2505342d: dGVzdCBtZXNzYWdlIDQyODEw\n\nIn [7]: print_messages(q)\nMessages: 3724450e-d1b7-4a32-9d3e-94ac6cb66af9: dGVzdCBtZXNzYWdlIDQzMjAx\nMessages: 36513f79-f9d7-4dd4-a4af-00c1f7e54ab9: dGVzdCBtZXNzYWdlIDQzMjk3\nMessages: 25fe747f-08a2-4bb2-b5d2-e370463d8e58: dGVzdCBtZXNzYWdlIDIyODcx\nMessages: e1388937-da30-460d-832b-f861c7f6722b: dGVzdCBtZXNzYWdlIDEzNzA4\nMessages: 8d6597d6-6f4a-429a-81d5-e5d0268c9cc6: dGVzdCBtZXNzYWdlIDQzMjQz\nMessages: f86ee99b-ec4e-4ec2-9f31-6b8aa18f5cb8: dGVzdCBtZXNzYWdlIDQzMjIz\nMessages: 8687896d-4fb4-45ec-af79-f8a8ab959f7f: dGVzdCBtZXNzYWdlIDEzNzEx\nMessages: 57f0a1b0-1a5e-4c19-8a50-c357fb56ec0a: dGVzdCBtZXNzYWdlIDQzMjQ2\nMessages: 6645d9c3-93a7-423a-a66a-d8a2dacc69a3: dGVzdCBtZXNzYWdlIDQzMjQ3\nMessages: 8650a5d0-1f1c-4342-ad82-592181f7c642: dGVzdCBtZXNzYWdlIDQzMjU5\n\nIn [8]: print_messages(q)\nMessages: 8c9408ce-ed39-42e4-8f52-8b1900092482: dGVzdCBtZXNzYWdlIDQzNTAy\nMessages: 48baa532-0b40-451a-8609-aa8afc1ad3f4: dGVzdCBtZXNzYWdlIDIyOTQ0\nMessages: 9d3840d0-8fd0-4a7e-876f-6c3061a0663d: dGVzdCBtZXNzYWdlIDIyOTQ1\nMessages: d78dbd53-a3f8-4a55-984c-a48278f1bb35: dGVzdCBtZXNzYWdlIDQzNTE5\nMessages: 2c4e7d57-6b51-4653-b1c3-8d3e67d22cb0: dGVzdCBtZXNzYWdlIDQzNTA0\nMessages: 72dce558-80b8-47cf-ab27-3eecf25ebf43: dGVzdCBtZXNzYWdlIDQzNDc5\nMessages: ba1d91c3-5e6c-4971-b679-41e9cd43b996: dGVzdCBtZXNzYWdlIDEzNzg2\nMessages: 9ccb3e60-2d5e-4c01-87b2-565af7899a79: dGVzdCBtZXNzYWdlIDQzNDk0\nMessages: 22809b91-0576-4c7e-a5ab-7ffa3b843a56: dGVzdCBtZXNzYWdlIDIyOTUx\nMessages: 4815ba17-4e56-490b-ad4d-e7fcc630a123: dGVzdCBtZXNzYWdlIDEzODAy\n```\n  Looks like we're waiting on the linked botocore PR to get merged so we can get a clean run through travis-ci.\n\nAlso, can you please update the .coveragerc file to stop omitting coverage reports from this?  Since we're moving forward with this approach we should have this as part of our coverage report.\n I might be misunderstanding @kyleknap feedback, but it doesn't seem like his feedback was addressed.  It wasn't about using constants so we don't accidently typo what a `{` char looks like, it was having a separate layer that was responsible for what the specific RST syntax looked like so this doc module is all about the logic of _how_ the documentation should be generated (without having to worry about the specific syntax).\n\nIn which case I'm strongly in favor of this approach.\n\nThe CLI mostly uses this approach and it's worked well.\n\nAt the very least we should adopt this style for the new code you've added.  We can try and go back and update the existing code.\n I think for me it comes down to the fact that while we initially thought this code was temporary, it's stuck around far longer than we thought and we keep adding to it.  At this point, I think we need to just do the due diligence and add the proper abstractions/tests code and pay off the technical debt.\n\nEven if (when) we do end up refactoring all this, if we have separate and decoupled parts, we should be able to reuse and pull out all the RST generation code since it won't be dependent on any boto3 specific parts.  This would mean that any work that goes into cleaning this code up won't be lost.\n\nWe're also planning on hopefully using as much as we can for the botocore autogen'd reference docs, and potentially may even pull some of this code down into botocore.\n  cc @kyleknap @danielgtaylor\n  :shipit:  Looks good, some small suggestions but otherwise looks good.\n  Not sure what's going on there. Could you try the following to see if it works?\n\n``` python\nimport boto3\nimport json\nfrom botocore.exceptions import ClientError\nfrom pprint import pprint\n\n\niam = boto3.resource('iam')\ncognito = boto3.client('cognito-identity', 'us-east-1')\n\npolicy_document = json.dumps({\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n         \"Federated\": \"cognito-identity.amazonaws.com\"\n      },\n      \"Action\": [\"sts:AssumeRole\"]\n    }]\n})\nrole = iam.create_role(RoleName='SomeRoleName',\n                       AssumeRolePolicyDocument=policy_document)\npool = cognito.create_identity_pool(IdentityPoolName='SomeIdentityPool',\n                                    AllowUnauthenticatedIdentities=True)\n\ntry:\n    cognito.set_identity_pool_roles(IdentityPoolId=pool['IdentityPoolId'],\n                                    Roles={'authenticated': role.arn})\nexcept ClientError as e:\n    print(e)\nfinally:\n    roles = cognito.get_identity_pool_roles(IdentityPoolId=pool['IdentityPoolId'])\n    pprint(roles)\n    cognito.delete_identity_pool(IdentityPoolId=pool['IdentityPoolId'])\n    role.delete()\n```\n\nIf not, please set the debug stream by putting the following line after the imports:\n\n``` python\nboto3.set_stream_logger('botocore')\n```\n This issue is being closed due to inactivity\n  This change makes it possible to create a session using a profile name, which\nwas previously only possible via an environment variable. It allows you to\ncreate clients and resources from any number of sessions using any number of\nprofiles.\n\nGiven that we have the following `~/.aws/credentials`:\n\n``` ini\n[default]\naws_access_key_id = DEFAULT\naws_secret_access_key = SECRET1\n\n[dev]\naws_access_key_id = DEV\naws_secret_access_key = SECRET2\n\n[prod]\naws_access_key_id = PROD\naws_secret_access_key = SECRET3\n```\n\nYou can do the following:\n\n``` python\nimport boto3.session\n\ndev = boto3.session.Session(profile_name='dev')\nprod = boto3.session.Session(profile_name='prod')\n\nfor session in [dev, prod]:\n    print('Profile: ' + session.profile)\n    s3 = session.resource('s3')\n    for bucket in s3.buckets.all():\n        print(bucket.name)\n    print('')\n```\n\nIt is also possible to setup the default session with a profile:\n\n``` python\nimport boto3\n\nboto3.setup_default_session(profile_name='dev')\n\ns3 = boto3.resource('s3')\n```\n\nAnd of course you can still use the environment variable:\n\n``` bash\n$ BOTO_DEFAULT_PROFILE=dev ipython\n>>> import boto3\n>>> s3dev = boto3.resource('s3')\n```\n\nOnce a session is created, the profile is immutable. The `profile_name`\nproperty is provided for convenience and just surfaces the underlying\nBotocore session's profile property.\n\nWhy not provide a profile name to the `client` and `resource` methods?\nCurrently there is no easy way to clone a session, and the behavior of\ncreating a new blank session (from one which may have customizations)\nleads to possibly unintended side-effects like clients without the\nproper event handlers registered. This would be an additive change\nshould we want to revisit in the future. At this point, the change\nin this commit provides a way for Boto 3 users to use multiple profiles\nwithout resorting to creating their own Botocore sessions.\n\nI'm definitely open to suggestions and counter-arguments.\n\ncc @jamesls @kyleknap \n This is one possible implementation of #21.\n Merged in 8da893b183f12f4c0b6bc43c9963abb46111b3b6\n  Previously, certain tests were running (and failing) three times. This fixes\nthings with a proper base class so tests are only ever executed a single time.\n\ncc @jamesls @kyleknap \n  This change moves and formalizes the name collision logic from the factory\nto the resource model. The following has changed:\n- Documentation now better matches the factory output.\n- Collision renaming order is formalized in one place\n  - Order: reserved names (meta), load action, identifiers, actions,\n    subresources, references, collections, and then attributes.\n- Renaming resource model attributes/methods now happens at model loading\n  time rather than class creation time.\n\nThe way this works is by creating a mapping of (type, name) tuples to\nthe renamed value, if it exists. Typically this mapping will be very\nsparse and it's fast to create / access. In practice we currently only\nhave one or two names that collide across all the resource models.\n\nTests have been updated, some of which needed to define proper Botocore\nshapes as the code now looks more closely at those at model load time.\n\ncc @kyleknap @jamesls \n @jamesls @kyleknap please have another look. I've added more tests and fixed a couple of issues. Coverage is the same, but now we are explicitly testing the order of renaming and using the `DenormalizedStructureBuilder` from Botocore.\n @kyleknap please take another look. I've added waiters to the renaming logic, removed the `resource_waiter_name` attribute as the name is now representative of the resource waiter name, and have cleaned up the factory a bit because the `xform_name` operations now happen in the model instead. Docs are also up to date.\n\nAt this point the model does two things: it loads the JSON data _and_ surfaces it in a Python-friendly way (snake-cased names, and handles renaming so there are no duplicates). Both the factory and docs are a bit simpler now (though I didn't mess much with docs because that will get its own overhaul shortly).\n  @monkeysecurity thanks for the feature request. The resource JSON is written by hand, so it has yet to be updated (pull requests welcome!). The client does support the new features:\n\nhttp://boto3.readthedocs.org/en/latest/reference/services/iam.html#iam.Client.attach_group_policy\n\nAs a workaround for now you can do something like this:\n\n``` python\nimport boto3\n\niam = boto3.resource('iam')\n\n# Do stuff with the resources\n# ...\n\n# Now, drop down to the client\nclient = iam.meta.client\nresponse = client.attach_group_policy(GroupName='...', PolicyArn='...')\n```\n @monkeysecurity unfortunately we do not yet have a spec document. At this point you'd have to just look at all the examples we already ship and try to learn from them. I'm strongly in favor of a central repository for these files along with good documentation to help contributors learn the format.\n  @a2hill, this looks like a bug in Botocore's error handling. Thanks for reporting!\n  @tgal take a look at the answer in https://github.com/boto/boto3/issues/50#issuecomment-72079954 that shows how you do this with clients. For resources, you need to create the same structure and do something like:\n\n``` python\nmpu.complete(MultipartUpload=part_info)\n```\n\nWe are working on some documentation updates that will describe the input parameter structure as well as the output response structure to make this easier.\n @tgal I've gone ahead and added an [integration test](https://github.com/boto/boto3/commit/aaab03ed94ae5948b91005a730353b335a77c692) as part of #62 that should help.\n  @tgal thanks for reporting this. That error is not helpful at all, and if we could change it to be a bit more descriptive I think you would have had a much easier time figuring out the issue.\n\nFWIW, part of the reason for this is because we don't ship a list of valid endpoints for each service with the SDK anymore, and instead rely on [endpoint heuristics](https://github.com/boto/botocore/blob/develop/botocore/data/aws/_endpoints.json) to guess how to connect to an endpoint. The advantage of this is that you don't need to update your SDK when a service launches in a new region (assuming it is covered by an existing rule).\n @tgal, the updated error message is now released in Boto 3 - 0.0.9.\n  This change is for the issue described in #59 and updates the model based on\nthe output of the proposed change in awslabs/aws-model-validators#2. The\nfollowing now works properly:\n\n``` python\nimport boto3\n\nobj = boto3.resource('s3').Bucket('foo').Object('bar')\nmpu = obj.initiate_multipart_upload()\npart = mpu.MultipartUploadPart(1)\nprint(part.object_key)\n# => 'foo'\n```\n\ncc @jamesls @kyleknap \n @kyleknap there is a test added here:\n\nhttps://github.com/awslabs/aws-model-validators/pull/2/files#diff-e4bf191bb600a1c7130f57d133bf1e5e\n\nPart of the advantage of adding it to the validator is that each SDK doesn't need to duplicate the effort. Do you think we should still add some extra test for this in Boto3?\n  This fixes #57 by hydrating resources from a collection with a JMESPath\nquery that is at `collection.resource.path` instead of `collection.path`\nin the resource model.\n\n``` python\nimport boto3\n\nfor o in boto3.resource('s3').Bucket('boto3').objects.all():\n    # `o.meta.data` is set now, so the following succeeds.\n    print(o.size)\n```\n\ncc @jamesls @kyleknap \n  This change brings back behavior that was removed in Boto 3 - 0.0.7\nand allows things like the following to work again:\n\n``` python\nimport boto3\n\ns3 = boto3.resource('s3')\nobj = s3.Object('bucket-name', 'key')\n```\n\nThis is **required** to gain direct access to some resources that are not exposed as subresources nor references (think something like `sqs.Message`, which you can now only get from `sqs.Queue('url').receive_messages() => [Message(...)]` Without the change in this pull request there is **no way** to instantiate a message instance yourself).\n\ncc @jamesls @kyleknap \n  This looks like an issue with the order of items here:\n\n``` json\n...\n\"Part\": {\n  \"resource\": {\n    \"type\": \"MultipartUploadPart\",\n    \"identifiers\": [\n      { \"target\": \"BucketName\", \"source\": \"identifier\", \"name\": \"BucketName\" },\n      { \"target\": \"MultipartUploadId\", \"source\": \"identifier\", \"name\": \"Id\" },       <--- whoops\n      { \"target\": \"ObjectKey\", \"source\": \"identifier\", \"name\": \"ObjectKey\" },        <---\n      { \"target\": \"PartNumber\", \"source\": \"input\" }\n    ]\n  }\n}\n...\n```\n\nhttps://github.com/boto/boto3/blob/develop/boto3/data/resources/s3-2006-03-01.resources.json#L701-L702\n @tgal I have opened up a pull request against our new model validator so hopefully we can catch these sort of issues earlier next time:\n\nhttps://github.com/awslabs/aws-model-validators/pull/2\n This is now released in [0.0.8](https://github.com/boto/boto3/releases/tag/0.0.8).\n  @augustz this appears to be a bug. I've come up with a workaround that you can use for the time being, and we will fix this in Botocore:\n\n``` python\nimport boto3\nfrom io import BytesIO\n\nb = s3.resource('s3').Bucket('my-bucket')\nb.put_object(Key='test', Body=BytesIO(b'\\xe2'))\n```\n\nThis tricks Botocore into thinking it is an open binary file, which it knows how to handle.\n This appears to be the same issue as boto/botocore#306.\n This appears to have been fixed with the requests library update in Botocore. @augustz can you confirm that this is no longer an issue with Boto3 version 0.0.8?\n I can no longer reproduce this issue after the latest release, so I'm going to close it. Please reopen if you are able to still reproduce it.\n  I've confirmed that this is a bug that's been present for a while but only surfaced from the new resource model changes. I'm working on a pull request to fix this at the moment!\n This is now released in [0.0.8](https://github.com/boto/boto3/releases/tag/0.0.8).\n  @amattie sorry, the switch to the new resource JSON format (which is shared among AWS SDKs) includes a change in the organization of subresources. I will try to call out the change better in the changelog, and make sure the examples in the documentation are up to date. Here is the one and only way to get an S3 object now:\n\n``` python\nimport boto3\n\ns3 = boto3.resource('s3')\nobj = s3.Bucket('my-bucket').Object('my-key')\n```\n @amattie I've added some clarification to the changelog and release notes about this. I have a question for you before I update the docs - do you prefer one style over the other?\n I've created a pull request #60 to address this. We will be exposing the previous behavior again after some though on the subject. Version 0.0.8, when released, should address this issue.\n This is now released in [0.0.8](https://github.com/boto/boto3/releases/tag/0.0.8).\n  @msabramo, this is great, thank you! :+1:\n  @owenrumney this is a limitation of the generated documentation at the moment. There are two things I would like to add soon:\n1. Describe parameter structure for complex types (lists, structures, maps, etc).\n2. Describe response structure for clients and for low-level responses from resource actions.\n\nAs an example, the input documentation of [`emr.add_job_flow_steps`](http://boto3.readthedocs.org/en/latest/reference/services/emr.html#emr.Client.add_job_flow_steps) could look something like this:\n\n---\n\n<dl>\n<dt>JobFlowId (<code>string</code>) \u2013 <i>Required</i></dt>\n<dd>A string that uniquely identifies the job flow. This identifier is returned by RunJobFlow and can also be obtained from ListClusters </dd>\n<dt>Steps (<code>list</code>) \u2013 <i>Required</i></dt>\n<dd>\n<p>A list of StepConfig to be executed by the job flow.</p>\n<p>StepConfig structure:</p>\n<pre><code>{\n  \"Name\": \"string\",\n  \"HadoopJarStep\": {\n    \"Args\": ['string'],\n    \"Jar\": \"string\",\n    \"MainClass\": \"string\",\n    \"Properties\": [\n      {'Key': 'string', 'Value': 'string'}\n    ]\n  },\n  \"ActionOnFailure\": \"string\"\n}\n</code></pre>\n</dd>\n</dl>\n\n---\n\nSomething along those lines above, but it's still not clear which fields are optional. Any ideas you have would be appreciated.\n\nSorry, I hit Cmd+Enter too soon and it posted with only half an example before!\n It's also worth mentioning that there are two other, albeit slightly more painful, methods of determining this data. The easiest is to just look at the service documentation itself, e.g:\n\nhttp://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_AddJobFlowSteps.html\n\nYou can see that it links \"Steps.member.N\" to a [StepConfig](http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_StepConfig.html) description. It's not perfect, but our parameters match up and it takes away some of the guesswork.\n\nThe other method is to use the JSON models. For example, here is the definition of [StepConfig](https://github.com/boto/botocore/blob/develop/botocore/data/aws/emr/2009-03-31.normal.json#L2074-L2095) and [HadoopStepConfig](https://github.com/boto/botocore/blob/develop/botocore/data/aws/emr/2009-03-31.normal.json#L978-L999). Unfortunately this requires understanding the JSON service description format, but it's what I used to build the example above so it is possible.\n\nAnyway my ultimate goal is to get the Boto 3 documentation updated so that all of the request and response structures are easy to understand.\n  @jvilhuber this has been added in an update to Botocore. I am updating our Botocore dependency and doing a release soon that will include the call. As a workaround, you can `pip install -U botocore` to get the latest models until I do the release.\n @jvilhuber whoops, sorry you also need to update jmespath: `pip install -U jmespath`. The `@` symbol used to represent the root element is only supported as of version 0.6.1. Sorry about that!\n @jvilhuber this has now been released as part of [Boto 3 - 0.0.7](https://pypi.python.org/pypi/boto3/). Please give it a try!\n  This change refactors the way that references are created to reuse the\nexisting response handling code for loading resources. As a side effect,\nthis supports plural references.\n\nThis is mainly future-proofing and removing some code duplication.\n\ncc @jamesls @kyleknap \n @kyleknap the latest push includes the JMESPath data member fixes we discussed yesterday and updated tests. Please have another look!\n  This updates to the latest resource model format, which includes the following\nchanges:\n1. `belongsTo` references are now named `has`\n2. `subResources` is replaced by two-way `has` references\n3. Identifier and parameter definitions are refactored:\n   - `source` is now one of `name`, `path` or `value`\n   - `sourceType` is now `source`\n   - A new source of `input` is added for user-supplied input\n\nOur interface remains the same, but the underlying JSON files have changed\nand our factory code and documentation are somewhat simplified. The code\nthat handles identifiers/parameters is a bit more complex due to having\nto check several keys in the dictionary based on the source.\n\nThe model still exposes subresources and references as separate concepts.\nDue to circular references, resource instances now lazy-load the subresource\nclass when needed.\n\nTests and documentation have been updated to reflect these changes.\n\nNote: Before merging, this requires a JMESPath update to support `@` as a root selector, which is the format used in the models now.\n\ncc: @jamesls @kyleknap \n @jamesls @kyleknap code is updated. Let me know if you have other questions, otherwise I'll merge it in.\n Code coverage drop is likely due to removed lines. All new lines are covered, but the few uncovered lines in e.g. `boto3/__init__.py` are still uncovered and now carry more weight.\n  @owenrumney this is really not obvious from the documentation, so it took me a few tries to get right. Multipart uploads require information about each part when you try to complete the upload. This is how you can accomplish it:\n\n``` python\nimport boto3\n\nbucket = 'my-bucket'\nkey = 'mp-test.txt'\n\ns3 = boto3.client('s3')\n\n# Initiate the multipart upload and send the part(s)\nmpu = s3.create_multipart_upload(Bucket=bucket, Key=key)\npart1 = s3.upload_part(Bucket=bucket, Key=key, PartNumber=1,\n                       UploadId=mpu['UploadId'], Body='Hello, world!')\n\n# Next, we need to gather information about each part to complete\n# the upload. Needed are the part number and ETag.\npart_info = {\n    'Parts': [\n        {\n            'PartNumber': 1,\n            'ETag': part['ETag']\n        }\n    ]\n}\n\n# Now the upload works!\ns3.complete_multipart_upload(Bucket=bucket, Key=key, UploadId=mpu['UploadId'],\n                             MultipartUpload=part_info)\n```\n\nI'll see what can be done about updating the documentation upstream. Let me know if you have any other questions!\n\nAlso, you can enable low-level logging at any time with this:\n\n``` python\nboto3.set_stream_logger(name='botocore')\n```\n  @amattie could you turn on debug output? Try this:\n\n``` python\nimport boto3\n\n# Turn on high-level logging:\nboto3.set_stream_logger(name='boto3')\n# Turn on low-level and wire logging:\nboto3.set_stream_logger(name='botocore')\n\n# Do the requests\ns3 = boto3.resource('s3')\ns3.Bucket('foo').Object('bar').put(Body=b'test')\n```\n\nThis should show some information about how the signature is being calculated and why you might be seeing the error response. Please remember to scrub any personal information before you paste the log output (your AWS secret key is never logged, but S3 bucket/object names and such might be important to hide).\n @amattie were you able to gather any more information about this issue?\n @amattie I have not gotten any responses in a few weeks and [Boto 3 - 0.0.7](https://pypi.python.org/pypi/boto3/) went out today which included a bunch of bug fixes, so I'm going to go ahead and close this issue. Please do reopen it if the issue is still a problem and you can give me more information to help debug the issue.\n  This looks like an outdated or incorrect model in Botocore. I'm leaving this open so we can track when the fix will be available in a Boto 3 release, but let's continue discussions on the Botocore ticket.\n This has been added to Botocore and will be included in the next Boto 3 release.\n @kingb understood. I'm trying to get #52 merged in, update our Botocore dependency and then get ready to do a release soon.\n @kingb this is now released with [Boto 3 - 0.0.7](https://pypi.python.org/pypi/boto3/).\n  This changes the behavior of the meta object in a **backward-incompatible**\nway. It goes from being a dict to an instance of a `ResourceMeta` class.\nExample:\n\n``` python\nimport boto3\n\ns3 = boto3.resource('s3')\n\n# The old way\ns3.meta['service_name']\ns3.meta['client']\n\n# The new way\ns3.meta.service_name\ns3.meta.client\n```\n\ncc @jamesls, @kyleknap \n  LGTM :ship:-it!\n  LGTM :ship:-it!\n  Since Botocore is now used to load data for Boto 3 there is no more need\nin the existing codebase for the `six` module. This commit removes it and\nremoves the `boto3.compat` module. We can re-add it in the future if it\nis needed.\n\nThis would be pulled instead of #41.\n\ncc @jamesls, @kyleknap, @bosr\n  @bosr thanks for the pull request! I've looked into this a bit more, and it turns out I'm not even using `six` anymore since moving to using Botocore for data loading in 4b0a2f56e06773ae566d949acb033525b4cc0296. I think that I'm just going to remove the dependency on `six` completely, and if we need it in the future we can expose it via the version that ships with Botocore.\n  @spgta first I would double check and make sure the same credentials are being used, and also make sure you are using the latest release of Boto 3 as it included some fixes for KMS parameter serialization. Next, you can enable a debug wire-log via this:\n\n``` python\nimport boto3\nboto3.set_stream_logger(name='botocore')\n# Now, call your functions\n```\n\nThe output will tell you more about what is being sent in the requests and how they might differ. If you post any of it here, be sure to sanitize it and remove any personal information.\n  Confirmed that this is an issue. I'm looking into the problem today.\n This is a bug in Botocore. The low-level client interface does not fire the event that is expected to override the signatures, so the handler never gets invoked. I'm working on some changes that will address this issue.\n @owenrumney there isn't a simple workaround like that available yet with the low-level client interface, however you could force it by updating the JSON model, e.g. by setting `'s3'` to `'s3v4'` here:\n\nhttps://github.com/boto/botocore/blob/develop/botocore/data/aws/s3/2006-03-01.normal.json#L9\n\nThis should be fixed soon but is requiring some major refactoring and rewriting of Botocore components. I'll update this (and a couple other issues) when Botocore is good to go and Boto 3 has a release out with those fixes included.\n This has now been merged into Botocore and is pending release!\n @schakraborty-bit9, @broamski, @owenrumney the fix for this has been released as part of [Boto 3 - 0.0.7](https://pypi.python.org/pypi/boto3/).\n  At the moment there is no such functionality in Boto 3, however future hand-written customizations could provide something similar.\n  This pull request modifies the guide and generated reference documentation\nto make it more obvious that operation parameters need to be passed as\nkeyword arguments rather than positional arguments. It does the following:\n- Update the guide to explicitly call out that keyword arguments\n  must be used instead of positional arguments.\n- Update reference documentation for operations to:\n  - List all arguments as keyword arguments (i.e. `MyArg=None`)\n  - Show an example with all required arguments\n  - Specify whether a parameter is optional or required after its type\n\nThis should help prevent issues like #35.\n#### Before:\n\n![screen shot 2014-12-03 at 3 52 48 pm](https://cloud.githubusercontent.com/assets/106826/5292004/14bc68b4-7b10-11e4-861a-f370de3205e2.png)\n#### After:\n\n![screen shot 2014-12-03 at 4 50 08 pm](https://cloud.githubusercontent.com/assets/106826/5292005/1a69fd8a-7b10-11e4-94f3-ffd46bd87e81.png)\n#### This also benefits resources:\n\n![screen shot 2014-12-03 at 5 03 00 pm](https://cloud.githubusercontent.com/assets/106826/5292006/1c25587c-7b10-11e4-8f62-cfc2de1dcd11.png)\n\ncc @jamesls, @kyleknap \n  This adds integration tests that exercise previously untested functionality,\nspecifically this adds the following to the existing describe calls:\n- Create and delete remote resources\n- Call actions to put and get data from remote resources\n- Handle low-level responses from a service\n- Exercise low-level waiters (to be replaced with high-level waiters)\n- Access data attributes of pre-loaded resources with no `load` method\n\nThe last item would have prevented #33. This PR is related to #34,\nwhich fixed the underlying issue that this test would have caught.\n\nThe full integration test suite now takes around 20-30 seconds on\nmy machine.\n\ncc @jamesls, @kyleknap \n  @owenrumney when passing parameters to clients they must be passed as keyword arguments. For example:\n\n``` python\nimport boto3\nkms = boto3.client('kms')\nresponse = kms.generate_data_key(KeyId='my_data_key_alias')\n```\n\nSee http://boto3.readthedocs.org/en/latest/reference/services/kms.html#kms.Client.generate_data_key\n\nSince this was unclear, do you have an idea of where/how it makes sense to update the documentation to make this more obvious?\n @owenrumney please take a look at #37 and let me know if you have any feedback. Thanks!\n  This change adds support for the latest version of the JSON description files\nfor resources. The following has changed:\n1. An action's `.path` has been moved into `.resource.path` if a resource\n   is present. If it is present, then a path outside of the resource is\n   no longer valid. This fixes #33.\n2. Sub-resources previously defined with either `hasOne` or `hasMany` are now\n   defined with a single `belongsTo` key. The internal Boto 3 representation,\n   however, remains the same and is accessed via `resource.references`.\n\nAs a result of the format changes, I had to update the internal resource\nmodel, adjust the search path behavior for actions and update various tests\nthat made assumptions about the older format.\n\nI also discovered that we were using a mix of old and new files for different\nservices, so this change includes updates to EC2 and Glacier so that all\nresources are using the new format. With this change, we no longer support\nthe older format.\n\ncc @jamesls, @kyleknap \n  Confirmed. I'm looking into what is happening here with the `.meta['data']` member not being set up correctly when autoloading resources from a response.\n @zen4ever this regression is due to a change in the underlying resource description JSON format. It was not caught by existing tests because:\n1. The tests assumed the older version of the format.\n2. The new format only moved a `path` value in certain conditions, in other conditions it is still valid as-is. This is why most things continue to just work.\n3. The collection-related integration tests only use identifiers, not resource data members.\n\nI am working on a fix locally and will put up a pull request shortly.\n  This change implements batch actions on collections:\n\n``` python\ns3.Bucket('boto3').objects.delete()\n```\n\nIt does the following:\n- Create a `CollectionFactory` class to generate subclasses of\n  `CollectionManager` and `ResourceCollection`.\n- Update the `ResourceFactory` to use the new `CollectionFactory`.\n- Add a public `pages()` method to collections. This returns entire\n  pages of resource instances and it used by `__iter__` as well.\n- Add batch actions as methods via the new `CollectionFactory`.\n- Add a `BatchAction` subclass of `Action` which does the following:\n  1. Get a page of results from the collection's operation\n  2. Build parameters for the batch action operation\n  3. Call the batch action operation\n  4. Repeat until no more pages\n- Makes some previously public members private on `Action` as these\n  should never have been public.\n- Update documentation to include collection classes.\n- Fix a couple minor documentation issues.\n- Add tests to cover the new functionality.\n\ncc @jamesls, @kyleknap \n @kyleknap I've rebased onto the latest develop and added a test to ensure `page_size` is adhered to when calling `.pages()`.\n  @bilalaslam this appears to be a bug in Botocore where the `CiphertextBlob` should automatically be base64-encoded. For example, this appears to work for me:\n\n``` python\nimport base64\n\nkms.decrypt(CiphertextBlob=base64.b64encode(result['CiphertextBlob']).decode('utf-8'))\n```\n\nYou can use that as a workaround for now, but once we make the underlying fix you'll need to remove the manual base64-encoding.\n @spgta does the workaround work for you? This should get fixed in Botocore soon.\n @spgta, @jstnblau, @bilalaslam this should be fixed upstream with boto/botocore#397, which was just merged. It'll go out with the next release.\n Released in version 0.0.5\n  @jvilhuber, this is currently not possible and appears to be a bug. The current plan is to make a customization to fix this in Botocore and then the call should just work without any changes on your part.\n This has now been merged into Botocore and is pending release!\n @jvilhuber the fix is released in [Boto 3 - 0.0.7](https://pypi.python.org/pypi/boto3/).\n  LGTM :ship:-it!\n  @Tenzer this is a great question. I don't have an answer yet, but wanted to let you know that I'm looking into the issue.\n The problem is that it is [implemented as a customization in the AWS CLI](https://github.com/aws/aws-cli/blob/develop/awscli/customizations/route53resourceid.py) rather than in Botocore, which means it isn't available to Boto 3 at the moment.\n\nWe are going to move that customization into Botocore in the near future so that both the AWS CLI and Boto 3 can make use of it, and then your model should just work. As a workaround today that will let you continue testing your model, you could do something like this:\n\n``` python\nimport botocore.session\nimport boto3\n\n# First, setup the Botocore session and customization.\n# The method below is copied from the AWS CLI.\nsession = botocore.session.get_session()\nsession.register('process-cli-arg.route53.*',\n                 _check_for_resource_id)\n\n\ndef _check_for_resource_id(param, value, **kwargs):\n    if param.name in ['ResourceId', 'DelegationSetId']:\n        orig_value = value\n        value = value.split('/')[-1]\n        return value\n\n# Then, tell Boto 3 to use it\nboto3.setup_default_session(botocore_session=session)\n\n# Now you can create your resource\nroute53 = boto3.resource('route53')\n```\n The fix has been merged upstream with boto/botocore#398 and will go out in the next release.\n Released in 0.0.5\n  This adds definitions to the internal resource model to handle batch actions\nand waiters, both of which are recent additions to the resource JSON format.\nThis change is a prerequisite to adding support for these features in the\nresource class factory. Tests are added for the new model features.\n\ncc @jamesls, @kyleknap\n  This helps to fix some confusion seen in #24 where it wasn't obvious\nhow to create an ELB client.\n\nNew output looks similar to this:\n#### class opsworks.Client\n\nA low-level client representing AWS OpsWorks:\n\n``` python\nimport boto3\n\nopsworks = boto3.client('opsworks')\n```\n\nThe same is done for all clients, service resources, and resource objects. For example, it shows you how to construct an S3 Object as well using its identifiers.\n\ncc @jamesls, @kyleknap \n  This attempts to get the first page of results from every collection\nexposed through a service (e.g. S3 buckets, EC2 instances, etc).\nSQS dead letter queues are skipped because they require a parameter,\nand we skip an EC2 collection that takes ~30 seconds because it's\na huge response.\n\ncc @jamesls, @kyleknap \n  @monkeysecurity ELB does not yet have a resource description, so only a low-level client is available:\n\n``` python\nelb = boto3.client('elb')\n```\n\nHere you can see the latest [available resources](https://github.com/boto/boto3/tree/develop/boto3/data/resources), which will grow over time.\n @monkeysecurity glad to hear you are excited! Does #26 help to make this more clear?\n  Updates to the latest Botocore and JMESPath, taking into account the backward-\nincompatible waiter change.\n\ncc @jamesls, @kyleknap\n  This sets a custom user agent string if the underlying Botocore session hasn't\nhad its user agent string customized.\n\ncc @jamesls, @kyleknap \n @jamesls, @kyleknap I've updated this pull request with the following:\n1. Move `import boto3` to the top of the file\n2. Make the tests more explicit\n3. Add a test to ensure a customized user-agent is left alone\n\nMind taking another look?\n  @zen4ever unfortunately this isn't exposed in this way yet, but I do think it's something we should add. Here are a couple of workarounds that work right now:\n1. Set the `BOTO_DEFAULT_PROFILE` environment variable to the name of the profile. [Docs for env vars](http://boto3.readthedocs.org/en/latest/guide/configuration.html#environment-variables)\n2. Use your own Botocore session:\n\n``` python\nimport botocore.session\nimport boto3\n\n# Set your profile name on a low-level Botocore session\nsession = botocore.session.get_session()\nsession.profile = 'my-profile-name'\n\n# Tell Boto 3 to use that session by default\nboto3.setup_default_session(botocore_session=session)\n\n# Now create a resource\nec2 = boto3.resource('ec2')\n```\n\nPiping a profile name in through the `client` and `resource` calls will require some changes on the Botocore side, so I'll investigate how best to approach this. Thanks for the feedback, and sorry I overlooked this use case! :+1:\n @zen4ever it's now possible to set a profile name without dropping down to Botocore sessions. Please take a look at the docs in #69 and let me know if you have any other questions!\n  Thanks! :+1:\n  This adds proper reverse JMESPath support so that we can now build all\nparameters properly. The following did not work before, but does now\nbecause we can build up the filters array structure:\n\n``` python\nec2 = boto3.resource('ec2')\n\ninstances = ec2.instances.filter(\n    Filters=[{'Name': 'instance-type', 'Values': ['m1.small']}])\n\nfor instance in instances:\n    print(instance.id)\n```\n\nTests are added to cover the various cases of `dict` and `list`\ncombinations.\n\ncc @jamesls, @kyleknap \n  This adds documentation for references, e.g. an EC2 instance has a `vpc`\nand a `subnet` reference. This also documents reverse references discovered\nthrough the `subResources` association, such as an S3 object having a `bucket`\nreference. Previously these were not documented.\n\nNote: this does **not** take in to account #17, but will be modified to do so\nin the future. Right now only one reference is affected: `VpcPeeringConnection.vpc`\nhas been renamed to `VpcPeeringConnection.vpc_reference` but this is not\nreflected in the docs yet. It's on my short-list to fix but requires larger changes\nto the codebase.\n\ncc @jamesls, @kyleknap\n  This is a workaround to fix a couple of existing issues and hopefully\nmitigate future problems with the resource JSON descriptions. It is\nonly a partial fix and does not update docs, but currently only\ntwo issues exist:\n1. `ec2.RouteTable.associations` is defined both as an attribute via its\n   shape and via a `hasMany` collection. The collection is renamed to\n   `associations_collection`.\n2. `ec2.VpcPeeringConnection.vpc` is defined both as an attribute via its\n   shape and via a `hasOne` reference. The reference is renamed to\n   `vpc_reference`.\n\nTests have been updated to take this renaming into account, and\na warning is logged each time we rename something, so we can use that\nin the future for auditing the resource JSON files.\n\nThe issues above were found by a new test, which just instantiates each\nresource to ensure it's possible. Apparently Botocore does not support\nGlacier yet, so I skip that one.\n\ncc @jamesls, @kyleknap \n Oh, and in the very near future I want to move this logic into the model. For now this fixes it and let's us consider a release.\n @kyleknap part of the complication of moving this to the model is that the model has no information about the shape of the resource (except the shape name). For example, if the low-level shape defines a member called `vpc` instead of `vpc_id` and then the resource model contains the `vpc` reference, you need **all** of that information to determine that there was a collision. We'll need to think about how to implement this in a sane way.\n  Also sets the region via `~/.aws/config` instead of environment\nvariables in the quick start guide.\n\ncc @jamesls, @kyleknap \n  This helps with debugging potential model issues until we have a good\nway of linting the models for such issues. Specifically, this adds\nthe category (e.g. identifier, attribute, action, collection, etc)\nand the affected resource name.\n\nBefore:\n\n```\nValueError: Identifier `user` would clobber existing resource attribute\n```\n\nAfter\n\n```\nValueError: reference `user` would clobber existing VirtualMfaDevice resource attribute\n```\n\ncc @jamesls, @kyleknap \n Right, the tests just check the exception type right now, so I'll add that.\n  cc @jamesls, @kyleknap \n  This change implements a documentation generator that is capable of\ndocumenting both low-level clients and high-level resource objects based\non their JSON description formats. The output is RST, which is in turn\nused by Sphinx to generate HTML/PDF/etc on ReadTheDocs.\n\nThis implementation is expected to change. It's quick and dirty in a few\nplaces, including instantiating dummy clients to introspect some data.\nThis **only** affects the Sphinx documentation. It is not used to generate\ndocs for the interactive shell.\n\nThere are no tests, but I expect them to be added in the future.\n\ncc @jamesls, @kyleknap\n Coverage is good now: https://coveralls.io/builds/1438663\n  This pull request adds all of the options available through Botocore's\nclient constructor for making Boto 3 clients and resources, including\ncredentials, region, SSL, and other settings.\n\n``` python\nsqs = boto3.resource('sqs', region_name='us-west-2')\n\ns3 = boto3.resource('s3', aws_access_key_id='YOUR_KEY',\n                    aws_secret_access_key='YOUR_SECRET')\n```\n\nIt also removes the default of `'us-east-1'` and requires you to set\na region. The docs have been updated (slightly) and the tests have\nbeen updated to reflect this. I plan to flesh out the configuration\ndocumentation in the future.\n\ncc @jamesls, @kyleknap\n  This pull request adds two related features. First, it adds resource instance\nequality by comparing the classes and identifiers of two resources. If they\nshare the same class (e.g. `s3.Bucket`) and the same identifiers (e.g.\n`name`) then they are considered equal.\n\n``` python\n>>> b1 = s3.Bucket('boto3')\n>>> b2 = s3.Bucket('boto3')\n>>> b1 == b2\nTrue\n```\n\nRelated to equality, this also implements reloading of attributes\nafter an action has been performed. Imagine the following scenario:\n\n``` python\n>>> o = s3.Object('boto3', 'test.txt')\n>>> o.put(Body='hello')\n>>> print(o.last_modified)\ndatetime(2014, 10, 31, 0, 0, 0)\n\n>>> o.put(Body='hello, world')\n\n>>> print(o.last_modified)\ndatetime(2014, 10, 31, 0, 0, 20)\n\n>>> o2 = s3.Object('boto3', 'test.txt')\n>>> o == o2\nTrue\n>>> o.last_modified == o2.last_modified\nTrue\n```\n\nUpdated documentation and tests to reflect these changes.\n\ncc @jamesls, @kyleknap. Definitely open to suggestions on this one, but I think this is the most intuitive approach for people coming to use the SDK.\n  This pull request changes Boto 3 to use the Botocore data loader for loading\nresource JSON description files instead of the custom loading logic that was\nin place. As a result, a couple of things have changed:\n- Removed all JSON loading code from Boto 3\n- Removed `ResourceFactory.create_class` in favor of `load_from_definition`\n- Added Boto 3 resource data path to Botocore's loader\n- Added functionality to get the latest resource version\n- Implemented `Session.get_available_resources`\n- Updated and removed some tests\n- Updated docs\n\nUnfortunately, Botocore requires a very specific folder structure, and at the\nmoment Boto 3 is not using it. Because of this I wrote custom logic to find\nresource JSON files and find the latest version, some of which should be\nmigrated into Botocore in the near future.\n\ncc @jamesls, @kyleknap \n @jamesls @kyleknap please take another look. I've simplified some of the code, simplified a couple of tests and have added another test to cover choosing the latest version.\n\nI'm not planning on creating a custom Loader subclass since we'll be moving this logic and I don't feel like it's worth a lot of effort at this point.\n  This pull request adds support for resources to reference their parents,\nfor example:\n\n``` python\nobj = s3.Object('boto3', 'sun.jpg')\nprint(obj.bucket.name)\n```\n\nThis works by using the `subResources` feature of the resource JSON\ndescription format. Since `Object` is listed as a child of `Bucket`\nin the bucket's sub-resources, and we know the identifier mapping\nfrom and object's `bucket_name` to a bucket's `name`, we can create\nthe reverse reference just like if an explicit `hasOne` was defined\nin the JSON.\n\nAdditionally this fixes the SQS resource JSON to no longer explicitly\nlist the Message hasOne Queue relation, since the Queue has a Message\nin its sub-resources.\n\nAdds a test for the resource model as well as modifies the references\ntest to ensure both normal and reverse references become attributes\non the instantiated resource.\n\n**Note**: this is not very efficient, but caching should fix that in the near\nfuture. I'm open to suggestions to make it better.\n\ncc: @jamesls, @kyleknap \n It turns out that `hasattr` will access the attribute (in this case a property) instead of just seeing whether it exists on the object. That tries to instantiate the group resource and the definition just need some slight tweaks to enable that. As-is it throws an exception and `hasattr` returns `False`. I've added it, changed the tests back to `hasattr` and all should work now.\n  This change exposes `hasOne` and `hasSome` references on resources, such as\nan EC2 `instance.subnet` or `instance.vpc`. Both the subnet and VPC are\nresource instances that are created from data available on the instance. In\nthis case via the `subnet_id` and `vpc_id` data members. Allows code\nlike the following:\n\n``` python\nimport boto3\n\nec2 = boto3.resource('ec2')\nfor instance in ec2.instances.all():\n    print(instance.vpc.tags)\n```\n\nUpdates the resource data model, updates and adds tests.\n\ncc @jamesls, @kyleknap\n  This change adds an abstraction over the raw JSON resource descriptions,\nsimilar to how Botocore has a `ServiceModel` which abstracts its JSON\nservice descriptions. Advantages of this approach:\n- Pythonic interface (e.g. `model.actions[0].request.operation`)\n- Encapsulation of minor JSON changes (e.g. field name change)\n\nAll of the factory code is updated to use it and documentation code\nwill use it in the future. Tests have been updated accordingly\nand the model has its own tests as well.\n\ncc: @jamesls, @kyleknap\n  This fixes the currently broken installation of running `python setup.py\ninstall` by updating the requirements to use Botocore 0.65.0 and making\nsure the resource descriptions are included in the release tarball.\n\ncc @kyleknap, thanks for pointing this out.\n  This makes printing resources much more useful by including the class\nname, any resources identifiers, and the region:\n\n``` python\n>>> import boto3\n>>> s3 = boto3.resource('s3')\n\n# Before\n>>> s3.Object('boto3', 'sun.jpg')\n<boto3.resources.factory.s3.Object at 0x1098bf080>\n\n# After\n>>> s3.Object('boto3', 'sun.jpg')\ns3.Object(bucket_name='boto3', key='sun.jpg') in us-east-1\n```\n\nThis gets even more interesting when mixed with collections,\ne.g. `list(s3.buckets.all())` is now actually useful since you\ncan easily see the bucket names.\n\ncc: @jamesls, @kyleknap \n  This change implements support for resource collections that mimic Django's\nquery set API so that things like this are possible:\n\n```\n>>> s3 = boto3.resource('s3')\n>>> for bucket in s3.buckets.all():\n...     for obj in bucket.objects.limit(100):\n...         print(bucket.name, obj.key)\n```\n\nImplements the following for collections:\n- Non-iterable collection manager (e.g. `s3.buckets`)\n- Iterable `ResourceCollection` base class (e.g. `s3.buckets.all()`)\n- Chainable resource collection API (via clones)\n- Filtering via `.filter(Arg1=1, Arg2=2)`\n- Control item count via `.filter(limit=20)` or `.limit(20)`\n- Control page size via `.filter(page_size=100)` or `.page_size(100)`\n- Indexing and slicing (e.g. `s3.buckets.all()[2:5]`)\n- Exposing `all`, `filter`, `limit`, and `page_size` on the manager\n- Updated documentation\n\nAlso adds tests for all the relevant features. Note that batch actions\nare _not_ included in this change.\n\ncc @jamesls, @kyleknap, @garnaat \n @jamesls the `parent` does need to be passed for building parameters for service operation calls. For example, look at the following definition's _identifiers_ section:\n\n``` json\n    \"Bucket\": {\n      \"hasMany\": {\n        \"Objects\": {\n          \"request\": {\n            \"operation\": \"ListObjects\",\n            \"params\": [\n              { \"target\":\"Bucket\", \"sourceType\":\"identifier\", \"source\":\"Name\" }\n            ]\n          },\n          \"resource\": {\n            \"type\": \"Object\",\n            \"identifiers\": [\n              { \"target\":\"BucketName\", \"sourceType\":\"identifier\", \"source\":\"Name\" },\n              { \"target\":\"Key\", \"sourceType\":\"responsePath\", \"source\":\"Contents[].Key\" }\n            ]\n          }\n        },\n```\n\nIn this case, the resource collection must have access to the parent resource to which it is attached, because it needs to find the `Name` identifier (in this case, `bucket.name`). If it were a data member instead of an identifier then it would incur a remote request to load the resource. If we passed these in when creating the collection instance it would mean making that request _before_ creating the collection, which doesn't seem like the correct behavior to me. I'm definitely open to ideas but I didn't see an easy solution to that problem while writing the code.\n Thanks for all the feedback guys. I appreciate the hard work to make this a good API for our customers.\n  This fixes the following bug:\n\n```\n>>> s3 = boto3.resource('s3')\n>>> obj1 = s3.Object('my-bucket', 'my-key')\n>>> obj2 = s3.Object('my-bucket', 'my-key')\n>>> obj1.load()\n>>> print(obj2.meta['data'])\n{ ... }\n```\n\nThe data from `obj1` was shared with `obj2` which prevented making\nmultiple unique instances of resources. This fixes the issue by\nmaking each resource operate on a copy of the data, created at\ninstantiation time. Adds a test to ensure this works as expected.\n\ncc @jamesls, @kyleknap \n  This change fixes the resource data loading logic to use the identifiers\nfor determining plurality, and implements a function to build empty\nresponses given a service model and search path. The following now\nwork correctly:\n\n``` python\n>>> sqs = boto3.resource('sqs')\n>>> queue = sqs.get_queue_by_name(QueueName='test')\n>>> print(queue.url)\n'http://...'\n>>> print(queue.attributes)\n{...}\n```\n\nAssuming you have zero messages in the queue, this now works as well:\n\n``` python\n>>> messages = queue.receive_messages()\n>>> print(isinstanc(messages, list))\nTrue\n```\n\nThis means that code using the SDK can assume that `receive_messages`\nwill **always** return a list. Empty response handling tests have\nmoved into their own class; all other related tests have been updated.\n\ncc @jamesls, @kyleknap \n", "text_all_count": 39333, "text_word_token": ["We", "only", "do", "that", "particular", "bit", "of", "logging", "on", "resources", "not", "clients", "so", "even", "if", "we", "did", "add", "a", "log", "sort", "feature", "it", "wouldn", "t", "be", "very", "broad", "NUMBER", "However", "you", "can", "do", "your", "own", "logging", "use", "the", "event", "system", "NUMBER", "This", "be", "better", "because", "you", "can", "do", "whatever", "you", "want", "and", "it", "can", "apply", "to", "every", "call", "made", "in", "both", "resources", "and", "clients", "NUMBER", "Here", "s", "an", "example", "python", "import", "json", "import", "logging", "import", "boto", "NUMBER", "LOG", "logging", "NUMBER", "getLogger", "__name__", "def", "log_sorted_args", "params", "kwargs", "log_message", "SORTED", "PARAMS", "s", "json", "NUMBER", "dumps", "params", "sort_keys", "True", "LOG", "NUMBER", "debug", "log_message", "boto", "NUMBER", "set_stream_logger", "session", "boto", "NUMBER", "Session", "session", "NUMBER", "events", "NUMBER", "register", "provide", "client", "params", "NUMBER", "NUMBER", "log_sorted_args", "s", "NUMBER", "session", "NUMBER", "client", "s", "NUMBER", "s", "NUMBER", "list_objects_v", "NUMBER", "Bucket", "my", "bucket", "Delimiter", "You", "can", "also", "add", "it", "to", "the", "default", "session", "if", "boto", "NUMBER", "DEFAULT_SESSION", "be", "None", "boto", "NUMBER", "setup_default_session", "session", "boto", "NUMBER", "DEFAULT_SESSION", "session", "NUMBER", "events", "NUMBER", "register", "provide", "client", "params", "NUMBER", "NUMBER", "log_sorted_args", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "s", "NUMBER", "list_objects_v", "NUMBER", "Bucket", "my", "bucket", "Delimiter", "Or", "you", "can", "add", "it", "to", "individual", "clients", "resources", "client", "boto", "NUMBER", "client", "s", "NUMBER", "client", "NUMBER", "meta", "NUMBER", "events", "NUMBER", "register", "provide", "client", "params", "NUMBER", "NUMBER", "log_sorted_args", "resource", "boto", "NUMBER", "resource", "s", "NUMBER", "resource", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "meta", "NUMBER", "events", "NUMBER", "register", "provide", "client", "params", "NUMBER", "NUMBER", "log_sorted_args", "Whenever", "you", "make", "a", "call", "you", "would", "see", "something", "like", "this", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "__main__", "DEBUG", "SORTED", "PARAMS", "Bucket", "my", "bucket", "Delimiter", "Would", "that", "work", "for", "you", "Excellent", "If", "you", "have", "any", "other", "question", "or", "issue", "let", "us", "know", "I", "m", "not", "sure", "what", "the", "problem", "be", "here", "NUMBER", "I", "would", "recommend", "contacting", "support", "LINK", "or", "otherwise", "ask", "on", "StackOverflow", "where", "somebody", "else", "may", "have", "run", "across", "the", "same", "issue", "as", "you", "NUMBER", "Nice", "catch", "I", "ll", "forward", "this", "along", "to", "the", "doc", "team", "NUMBER", "I", "would", "defer", "to", "the", "part", "of", "the", "docs", "that", "says", "you", "can", "t", "change", "the", "subnets", "for", "an", "NLB", "NUMBER", "The", "AllocationId", "showing", "up", "be", "an", "artifact", "of", "the", "SubnetMappings", "be", "a", "shared", "structure", "which", "be", "also", "use", "in", "create_load_balancer", "LINK", "ElasticLoadBalancingv", "NUMBER", "Client", "NUMBER", "create_load_balancer", "NUMBER", "I", "ll", "forward", "this", "on", "to", "the", "doc", "team", "to", "see", "if", "they", "can", "make", "this", "more", "clear", "NUMBER", "Thanks", "for", "the", "feedback", "request_spot_instances", "unfortunately", "doesn", "t", "provide", "a", "way", "for", "you", "to", "auto", "terminate", "instances", "NUMBER", "Spot", "instances", "be", "only", "terminated", "in", "two", "cases", "NUMBER", "The", "current", "spot", "price", "exceeds", "your", "bid", "NUMBER", "You", "terminate", "them", "yourself", "For", "other", "api", "specific", "question", "I", "would", "recommend", "ask", "on", "StackOverflow", "with", "the", "boto", "NUMBER", "tag", "so", "you", "can", "take", "advantage", "of", "community", "knowledge", "NUMBER", "That", "s", "the", "logging", "for", "the", "http", "connection", "pool", "not", "the", "logging", "for", "the", "threads", "NUMBER", "You", "can", "increase", "decrease", "the", "size", "of", "that", "pool", "use", "max_pool_connections", "docs", "LINK", "NUMBER", "The", "other", "threads", "will", "still", "be", "doing", "things", "like", "scheduling", "and", "io", "so", "having", "those", "out", "of", "sync", "isn", "t", "necessarily", "bad", "NUMBER", "If", "you", "run", "which", "pip", "and", "which", "python", "do", "they", "point", "to", "the", "same", "python", "installation", "What", "be", "the", "output", "of", "python", "c", "import", "os", "print", "os", "NUMBER", "path", "NUMBER", "realpath", "usr", "local", "bin", "python", "NUMBER", "It", "looks", "like", "you", "re", "on", "OSX", "NUMBER", "If", "you", "re", "use", "homebrew", "s", "python", "that", "should", "look", "like", "usr", "local", "Cellar", "python", "NUMBER", "NUMBER", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "whereas", "the", "python", "in", "your", "traceback", "seems", "to", "be", "located", "somewhere", "around", "Users", "noahbragg", "Library", "Python", "NUMBER", "NUMBER", "So", "that", "looks", "like", "the", "path", "to", "a", "system", "level", "python", "not", "brew", "python", "NUMBER", "The", "traceback", "seems", "to", "match", "the", "system", "python", "path", "NUMBER", "The", "python", "your", "pip", "NUMBER", "be", "point", "at", "could", "be", "a", "different", "python", "but", "it", "doesn", "t", "seem", "likely", "NUMBER", "You", "say", "you", "re", "new", "to", "python", "NUMBER", "Are", "you", "familiar", "with", "virtualenv", "If", "not", "there", "s", "a", "short", "guide", "here", "LINK", "package", "creating", "virtual", "environments", "NUMBER", "That", "should", "help", "you", "out", "with", "isolating", "environments", "NUMBER", "Closing", "issue", "due", "to", "inactivity", "NUMBER", "aws_session_token", "be", "not", "a", "boolean", "NUMBER", "Aside", "from", "that", "I", "m", "unable", "to", "reproduce", "the", "first", "issue", "it", "likely", "has", "something", "to", "do", "with", "your", "python", "version", "NUMBER", "Closing", "due", "to", "inactivity", "NUMBER", "If", "you", "re", "still", "having", "problem", "feel", "free", "to", "open", "a", "new", "issue", "and", "we", "ll", "get", "back", "to", "you", "For", "service", "usage", "question", "you", "should", "ask", "on", "StackOverflow", "or", "ask", "AWS", "Support", "NUMBER", "Unfortunately", "I", "don", "t", "know", "the", "answer", "to", "your", "question", "off", "the", "top", "of", "my", "head", "NUMBER", "This", "be", "likely", "an", "issue", "with", "your", "lambda", "function", "code", "NUMBER", "I", "use", "the", "following", "and", "was", "unable", "to", "reproduce", "python", "def", "lambda_handler", "args", "kwargs", "return", "data", "NUMBER", "For", "specific", "help", "with", "your", "function", "code", "I", "would", "recommend", "ask", "on", "StackOverflow", "with", "the", "lambda", "and", "boto", "NUMBER", "tags", "NUMBER", "If", "you", "discover", "any", "issue", "with", "boto", "NUMBER", "feel", "free", "to", "open", "another", "issue", "NUMBER", "Unfortunately", "I", "don", "t", "know", "the", "answer", "to", "this", "off", "the", "top", "of", "my", "head", "NUMBER", "I", "would", "recommend", "ask", "on", "StackOverflow", "with", "the", "boto", "NUMBER", "tag", "or", "one", "of", "the", "other", "community", "support", "channels", "LINK", "get", "help", "NUMBER", "This", "looks", "like", "an", "issue", "on", "the", "service", "side", "of", "things", "I", "ll", "forward", "it", "on", "to", "them", "NUMBER", "Thanks", "for", "report", "You", "will", "still", "need", "the", "main", "client", "to", "have", "permission", "to", "copy", "the", "objects", "in", "the", "source", "account", "NUMBER", "The", "source", "client", "be", "use", "for", "listing", "describing", "the", "source", "objects", "NUMBER", "lokureddy", "Here", "LINK", "walkthroughs", "managing", "access", "example", "NUMBER", "html", "s", "an", "example", "of", "granting", "cross", "account", "permissions", "NUMBER", "The", "client", "you", "call", "copy", "with", "needs", "to", "have", "GetObject", "permissions", "at", "least", "for", "the", "objects", "in", "question", "NUMBER", "To", "be", "clear", "your", "code", "be", "perfectly", "fine", "NUMBER", "You", "can", "also", "use", "a", "single", "client", "if", "you", "would", "prefer", "though", "you", "would", "need", "to", "give", "it", "permission", "to", "call", "HeadObject", "as", "well", "python", "sess", "boto", "NUMBER", "session", "NUMBER", "Session", "account", "NUMBER", "s", "NUMBER", "sess", "NUMBER", "client", "s", "NUMBER", "copy_source", "Bucket", "source", "bucket", "Key", "source", "key", "s", "NUMBER", "copy", "copy_source", "dest", "bucket", "key", "massenz", "That", "s", "interesting", "NUMBER", "So", "you", "encountered", "that", "error", "and", "then", "continued", "waiting", "It", "looks", "like", "that", "s", "a", "designated", "terminal", "state", "and", "on", "my", "own", "machine", "it", "do", "terminate", "there", "NUMBER", "So", "I", "think", "you", "linked", "the", "documentation", "for", "the", "describe_addresses", "method", "NUMBER", "According", "to", "the", "describe_instances", "documentation", "LINK", "EC", "NUMBER", "Client", "NUMBER", "describe_instances", "I", "think", "if", "you", "use", "the", "ip", "address", "filter", "you", "can", "query", "instances", "based", "on", "public", "IP", "s", "NUMBER", "Let", "us", "know", "if", "that", "helps", "NUMBER", "That", "would", "make", "sense", "NUMBER", "Also", "thanks", "for", "the", "PR", "to", "fix", "it", "LINK", "We", "will", "take", "a", "look", "at", "that", "NUMBER", "One", "thing", "that", "I", "worry", "about", "be", "if", "this", "be", "the", "case", "for", "the", "managed", "uploader", "there", "be", "also", "the", "same", "problem", "for", "the", "lower", "level", "put_object", "and", "create_multipart_upload", "methods", "NUMBER", "I", "think", "we", "need", "to", "do", "more", "digging", "into", "this", "to", "see", "what", "the", "correct", "approach", "may", "be", "NUMBER", "Yes", "NUMBER", "My", "guess", "be", "that", "you", "need", "to", "upgrade", "botocore", "though", "in", "order", "to", "be", "able", "to", "use", "it", "as", "my", "guess", "be", "that", "you", "be", "use", "an", "old", "version", "of", "it", "NUMBER", "Let", "us", "know", "if", "that", "works", "NUMBER", "Closing", "issue", "due", "to", "inactivity", "NUMBER", "Yeah", "so", "increasing", "the", "number", "of", "retries", "will", "not", "help", "your", "situation", "if", "you", "be", "reaching", "a", "limit", "in", "the", "number", "of", "API", "s", "you", "be", "trying", "to", "import", "NUMBER", "There", "be", "nothing", "much", "we", "can", "do", "from", "the", "boto", "NUMBER", "side", "as", "all", "of", "this", "logic", "be", "do", "server", "side", "NUMBER", "To", "request", "that", "the", "limit", "gets", "increase", "server", "side", "I", "would", "recommend", "open", "up", "a", "conversation", "on", "API", "Gateway", "s", "developer", "forum", "LINK", "NUMBER", "or", "contact", "support", "to", "see", "if", "they", "can", "help", "you", "get", "the", "additional", "resources", "as", "stated", "in", "the", "error", "message", "you", "get", "back", "NUMBER", "What", "version", "of", "boto", "NUMBER", "or", "botocore", "be", "you", "use", "You", "may", "need", "to", "update", "your", "version", "for", "both", "NUMBER", "Looking", "at", "the", "boto", "NUMBER", "documentation", "LINK", "MTurk", "NUMBER", "Client", "NUMBER", "send_test_event_notification", "it", "looks", "possible", "to", "send", "test", "notifications", "through", "SNS", "NUMBER", "Could", "you", "possibly", "show", "how", "you", "be", "make", "your", "mturk", "client", "call", "and", "what", "error", "you", "be", "get", "back", "if", "any", "Ahh", "yeah", "the", "stable", "version", "of", "the", "docs", "do", "not", "get", "rebuilt", "as", "often", "as", "the", "latest", "so", "that", "might", "explain", "why", "it", "be", "miss", "NUMBER", "But", "I", "be", "glad", "it", "be", "now", "work", "for", "you", "NUMBER", "Would", "not", "be", "oppose", "to", "add", "support", "for", "custom", "headers", "NUMBER", "Could", "you", "elaborate", "on", "why", "you", "need", "to", "set", "the", "Content", "MD", "NUMBER", "for", "a", "GET", "request", "Typically", "you", "would", "not", "need", "to", "set", "that", "a", "header", "for", "GET", "s", "and", "this", "can", "be", "seen", "in", "the", "documentation", "you", "linked", "where", "the", "StringToSign", "in", "the", "example", "had", "no", "Content", "MD", "NUMBER", "include", "i", "NUMBER", "e", "NUMBER", "it", "was", "just", "an", "empty", "string", "NUMBER", "This", "appears", "to", "be", "an", "issue", "with", "the", "mturk", "service", "and", "not", "boto", "NUMBER", "You", "might", "want", "to", "try", "open", "a", "support", "ticket", "LINK", "to", "see", "if", "the", "service", "team", "can", "provide", "any", "assistance", "NUMBER", "I", "m", "okay", "with", "leaving", "this", "open", "for", "a", "bit", "for", "visibility", "NUMBER", "I", "think", "I", "would", "prefer", "to", "track", "it", "in", "the", "issue", "you", "linked", "NUMBER", "If", "someone", "runs", "into", "an", "issue", "relate", "to", "this", "it", "will", "be", "linked", "in", "both", "GitHub", "issue", "NUMBER", "Given", "we", "prefer", "to", "keep", "issue", "open", "in", "this", "repository", "if", "they", "be", "actionable", "in", "boto", "NUMBER", "I", "m", "closing", "this", "issue", "NUMBER", "It", "s", "fail", "boto", "s", "client", "side", "validation", "NUMBER", "Seems", "like", "there", "was", "some", "change", "around", "this", "service", "fairly", "recently", "which", "leads", "me", "to", "believe", "that", "you", "might", "be", "use", "a", "version", "of", "botocore", "boto", "NUMBER", "that", "be", "too", "old", "and", "doesn", "t", "know", "about", "this", "NUMBER", "Is", "your", "boto", "NUMBER", "up", "to", "date", "You", "appear", "to", "be", "correct", "LINK", "L", "NUMBER", "L", "NUMBER", "Doesn", "t", "set", "or", "allow", "customization", "to", "set", "ReturnConsumedCapacity", "NUMBER", "Considering", "the", "put_item", "call", "will", "only", "sometimes", "call", "batch_write_item", "how", "would", "see", "a", "feature", "like", "this", "work", "If", "the", "service", "isn", "t", "returning", "them", "in", "the", "response", "there", "isn", "t", "much", "we", "can", "do", "at", "the", "boto", "level", "NUMBER", "Could", "you", "post", "debug", "logs", "of", "the", "describe_replication_groups", "call", "by", "add", "boto", "NUMBER", "set_stream_logger", "Can", "you", "get", "us", "debug", "logs", "of", "this", "behavior", "giovadifiore", "A", "couple", "question", "Does", "a", "minimal", "boto", "program", "pick", "up", "on", "the", "proxy", "configuration", "from", "the", "env", "Something", "simple", "like", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "s", "NUMBER", "list_buckets", "Are", "you", "importing", "request", "or", "urllib", "NUMBER", "yourself", "before", "use", "boto", "Would", "it", "be", "possible", "to", "get", "a", "minimal", "code", "sample", "that", "reproduces", "the", "issue", "It", "seems", "that", "there", "might", "be", "a", "potential", "collision", "importing", "request", "and", "boto", "NUMBER", "as", "we", "vendor", "request", "and", "urllib", "NUMBER", "Fairly", "recently", "request", "drop", "their", "vendored", "version", "of", "urllib", "NUMBER", "and", "it", "seems", "that", "you", "re", "use", "that", "version", "NUMBER", "This", "will", "likely", "take", "some", "digging", "to", "figure", "out", "NUMBER", "giovadifiore", "When", "you", "use", "boto", "NUMBER", "in", "a", "script", "by", "itself", "like", "the", "one", "above", "do", "it", "use", "your", "proxy", "Closing", "due", "to", "inactivity", "NUMBER", "I", "m", "not", "sure", "what", "wiki", "page", "you", "mean", "Do", "you", "mean", "the", "documentation", "Thats", "not", "a", "wiki", "its", "generate", "from", "the", "models", "NUMBER", "So", "botocore", "will", "raise", "a", "ClientError", "which", "you", "can", "always", "catch", "for", "any", "sort", "of", "issue", "you", "can", "then", "check", "the", "code", "NUMBER", "There", "be", "also", "a", "newer", "style", "of", "error", "catching", "that", "you", "can", "do", "use", "the", "errorfactory", "which", "will", "create", "an", "error", "class", "based", "on", "the", "code", "returned", "NUMBER", "This", "was", "add", "here", "LINK", "NUMBER", "This", "be", "not", "currently", "documented", "we", "will", "need", "to", "update", "our", "documentation", "generator", "to", "add", "this", "to", "the", "docs", "NUMBER", "I", "will", "mark", "this", "as", "a", "documentation", "feature", "request", "NUMBER", "This", "documentation", "be", "from", "the", "SNS", "team", "not", "specific", "to", "boto", "NUMBER", "and", "not", "something", "that", "we", "maintain", "NUMBER", "So", "I", "m", "going", "to", "close", "this", "since", "we", "have", "no", "ability", "to", "change", "this", "but", "I", "will", "pass", "your", "feedback", "along", "to", "the", "SNS", "team", "NUMBER", "We", "use", "models", "we", "get", "from", "EC", "NUMBER", "so", "for", "this", "to", "be", "expose", "they", "would", "need", "to", "include", "it", "in", "their", "model", "NUMBER", "So", "this", "would", "be", "a", "feature", "request", "for", "the", "EC", "NUMBER", "team", "which", "you", "can", "do", "by", "open", "a", "support", "ticket", "LINK", "Marking", "as", "a", "feature", "request", "NUMBER", "Could", "we", "get", "debug", "logs", "to", "see", "what", "the", "response", "looks", "like", "come", "over", "the", "wire", "This", "be", "currently", "a", "feature", "request", "in", "both", "the", "cli", "and", "botocore", "NUMBER", "I", "think", "it", "makes", "most", "sense", "in", "botocore", "since", "that", "would", "work", "for", "both", "could", "you", "go", "thumbs", "up", "that", "feature", "request", "LINK", "so", "we", "can", "track", "the", "interest", "in", "this", "feature", "more", "easily", "I", "m", "going", "to", "close", "this", "one", "as", "a", "duplicate", "NUMBER", "The", "connection", "message", "come", "from", "the", "request", "library", "NUMBER", "You", "can", "change", "the", "logging", "level", "like", "so", "boto", "NUMBER", "set_stream_logger", "botocore", "NUMBER", "vendored", "NUMBER", "request", "logging", "NUMBER", "ERROR", "In", "general", "you", "can", "change", "the", "logging", "level", "of", "any", "namespace", "use", "the", "above", "function", "NUMBER", "Here", "be", "the", "docs", "for", "set_stream_logger", "LINK", "boto", "NUMBER", "set_stream_logger", "NUMBER", "Both", "boto", "NUMBER", "and", "the", "CLI", "use", "the", "same", "library", "to", "make", "AWS", "API", "calls", "botocore", "and", "I", "don", "t", "think", "this", "be", "possible", "in", "the", "CLI", "NUMBER", "The", "service", "teams", "typically", "manage", "their", "release", "cadence", "of", "when", "SDKs", "support", "new", "features", "NUMBER", "I", "would", "suggest", "ask", "on", "the", "RDS", "forums", "LINK", "NUMBER", "NUMBER", "Someone", "there", "should", "be", "able", "to", "give", "you", "a", "more", "definitive", "answer", "NUMBER", "I", "think", "this", "would", "be", "useful", "NUMBER", "Maybe", "it", "should", "be", "extracted", "out", "into", "a", "separate", "library", "so", "people", "that", "just", "want", "to", "make", "request", "to", "their", "API", "gateway", "endpoint", "don", "t", "have", "to", "pull", "in", "all", "of", "boto", "NUMBER", "the", "code", "for", "signing", "request", "would", "be", "much", "smaller", "than", "all", "of", "boto", "NUMBER", "botocore", "NUMBER", "Thoughts", "Marking", "this", "as", "a", "feature", "request", "NUMBER", "I", "ve", "confirmed", "this", "issue", "NUMBER", "Unfortunately", "this", "seems", "to", "be", "the", "expected", "behaviour", "and", "I", "m", "not", "sure", "that", "we", "can", "change", "this", "as", "it", "would", "be", "backwards", "incompatible", "NUMBER", "LINK", "L", "NUMBER", "L", "NUMBER", "Any", "resource", "action", "that", "be", "not", "a", "load", "will", "clear", "the", "cached", "data", "away", "and", "a", "subsequent", "call", "to", "an", "attribute", "on", "a", "resource", "will", "require", "a", "load", "NUMBER", "This", "definitely", "do", "complicate", "thread", "safety", "as", "you", "mention", "as", "even", "actions", "that", "do", "not", "mutate", "a", "resource", "will", "cause", "the", "client", "side", "resource", "object", "to", "mutate", "even", "if", "to", "the", "same", "data", "as", "before", "NUMBER", "This", "doesn", "t", "seem", "to", "be", "documented", "so", "at", "the", "very", "minimum", "this", "will", "have", "to", "be", "noted", "in", "the", "docs", "NUMBER", "This", "may", "be", "something", "that", "we", "can", "allow", "customers", "to", "opt", "out", "of", "if", "you", "would", "like", "to", "pose", "this", "as", "a", "feature", "request", "NUMBER", "cybojanek", "You", "re", "definitely", "correct", "the", "race", "condition", "be", "on", "the", "resource", "the", "bucket", "NUMBER", "The", "model", "of", "concurrency", "be", "irrelevant", "NUMBER", "You", "re", "also", "correct", "that", "you", "can", "t", "trust", "the", "obj", "after", "the", "obj", "NUMBER", "get", "as", "the", "cached", "data", "be", "cleared", "and", "another", "head", "be", "issue", "upon", "next", "attribute", "access", "in", "which", "time", "the", "object", "may", "have", "change", "NUMBER", "We", "just", "expose", "the", "raw", "API", "as", "a", "Python", "library", "NUMBER", "Something", "like", "this", "would", "require", "an", "API", "update", "from", "the", "service", "team", "NUMBER", "You", "should", "try", "open", "a", "ticket", "with", "AWS", "Support", "LINK", "to", "get", "in", "touch", "with", "the", "service", "team", "and", "request", "this", "update", "NUMBER", "I", "think", "the", "waiter", "do", "wait", "until", "the", "state", "be", "available", "but", "the", "data", "in", "your", "newimage", "resource", "be", "stale", "NUMBER", "A", "few", "question", "How", "do", "instance", "NUMBER", "NUMBER", "wait_until_running", "prove", "that", "the", "behavior", "be", "different", "The", "behavior", "should", "be", "the", "same", "whether", "you", "access", "the", "waiter", "through", "a", "boto", "NUMBER", "resource", "or", "a", "botocore", "client", "NUMBER", "In", "both", "cases", "the", "relate", "resource", "will", "not", "refresh", "NUMBER", "I", "would", "be", "interested", "in", "seeing", "a", "minimal", "example", "that", "fail", "if", "you", "have", "the", "time", "to", "provide", "one", "NUMBER", "In", "my", "test", "I", "haven", "t", "be", "able", "to", "find", "any", "behavior", "that", "surprised", "me", "NUMBER", "My", "previous", "statement", "was", "only", "half", "correct", "my", "apologies", "NUMBER", "While", "it", "be", "true", "that", "the", "waiter", "accessed", "via", "a", "boto", "NUMBER", "resource", "will", "not", "refresh", "the", "resource", "it", "do", "clear", "the", "cached", "data", "NUMBER", "This", "means", "that", "the", "next", "attempt", "to", "access", "an", "attribute", "on", "the", "resource", "will", "force", "it", "to", "be", "hydrated", "again", "NUMBER", "Thus", "the", "difference", "in", "behavior", "here", "ultimately", "comes", "down", "to", "accessing", "the", "waiter", "via", "a", "boto", "NUMBER", "Resource", "or", "directly", "from", "botocore", "NUMBER", "Adding", "the", "waiter", "you", "re", "use", "to", "the", "resource", "definition", "may", "be", "one", "route", "to", "make", "the", "behavior", "consistent", "NUMBER", "As", "a", "workaround", "for", "now", "you", "could", "manually", "refresh", "your", "resource", "after", "the", "waiter", "has", "ended", "NUMBER", "We", "need", "to", "add", "the", "image_available", "waiter", "to", "the", "image", "resource", "NUMBER", "newimage", "NUMBER", "load", "Will", "force", "the", "resource", "to", "refresh", "its", "cached", "values", "NUMBER", "Closing", "this", "due", "to", "inactivity", "NUMBER", "Feel", "free", "to", "re", "open", "it", "if", "you", "still", "need", "help", "NUMBER", "You", "can", "try", "use", "the", "pip", "download", "command", "to", "get", "a", "collection", "of", "NUMBER", "whl", "file", "for", "all", "of", "boto", "NUMBER", "and", "its", "dependencies", "NUMBER", "You", "can", "then", "extract", "those", "file", "in", "the", "same", "CWD", "as", "your", "app", "code", "NUMBER", "However", "there", "s", "a", "lot", "of", "edge", "cases", "that", "s", "miss", "in", "that", "scenario", "especially", "around", "binary", "whls", "NUMBER", "And", "as", "mention", "in", "this", "issue", "while", "docker", "may", "not", "always", "be", "appropriate", "it", "be", "a", "common", "way", "that", "people", "solve", "this", "issue", "so", "if", "that", "s", "feasible", "you", "can", "do", "that", "and", "docker", "be", "install", "by", "default", "on", "Amazon", "Linux", "on", "EC", "NUMBER", "NUMBER", "I", "m", "going", "to", "go", "ahead", "and", "close", "out", "this", "issue", "NUMBER", "As", "mention", "in", "our", "README", "LINK", "get", "help", "question", "like", "these", "be", "best", "suited", "for", "stackoverflow", "and", "you", "re", "likely", "to", "get", "a", "more", "knowledgeable", "answer", "especially", "about", "non", "boto", "NUMBER", "relate", "question", "NUMBER", "That", "error", "be", "actually", "come", "back", "from", "the", "ec", "NUMBER", "service", "meaning", "it", "s", "not", "something", "we", "can", "control", "in", "boto", "NUMBER", "I", "would", "try", "open", "a", "ticket", "with", "AWS", "support", "to", "see", "if", "the", "ec", "NUMBER", "service", "team", "can", "help", "you", "out", "LINK", "My", "guess", "be", "they", "ll", "be", "able", "to", "update", "the", "documentation", "for", "this", "but", "not", "much", "else", "NUMBER", "Once", "they", "update", "their", "documentation", "upstream", "we", "ll", "get", "that", "in", "boto", "NUMBER", "documentation", "as", "well", "NUMBER", "Not", "sure", "why", "this", "would", "fail", "but", "a", "SyntaxError", "be", "surely", "not", "relate", "to", "boto", "NUMBER", "For", "your", "sanity", "I", "validated", "that", "your", "sample", "code", "be", "syntactically", "correct", "for", "both", "NUMBER", "and", "NUMBER", "NUMBER", "The", "issue", "be", "in", "var", "task", "concurrent", "futures", "_base", "NUMBER", "py", "which", "I", "m", "going", "to", "assume", "be", "some", "kind", "of", "issue", "with", "the", "image", "be", "use", "to", "run", "the", "lambda", "function", "NUMBER", "That", "be", "the", "environment", "be", "misconfigured", "NUMBER", "I", "think", "you", "should", "be", "able", "to", "do", "this", "by", "setting", "the", "endpoint_url", "when", "creating", "a", "client", "to", "your", "domain", "NUMBER", "You", "ll", "also", "need", "to", "add", "a", "config", "for", "S", "NUMBER", "by", "passing", "config", "Config", "s", "NUMBER", "addressing_style", "path", "import", "boto", "NUMBER", "from", "botocore", "NUMBER", "client", "import", "Config", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "endpoint_url", "LINK", "config", "Config", "s", "NUMBER", "addressing_style", "path", "url", "s", "NUMBER", "generate_presigned_url", "ClientMethod", "get_object", "Params", "Bucket", "bucket", "Key", "key", "Good", "catch", "on", "the", "HTTP", "S", "thing", "NUMBER", "I", "m", "glad", "you", "get", "something", "work", "for", "your", "use", "case", "Here", "s", "a", "couple", "of", "ways", "to", "do", "this", "Preferably", "you", "would", "use", "shared", "configuration", "LINK", "shared", "credentials", "file", "which", "will", "automatically", "load", "the", "credentials", "based", "on", "the", "default", "profile", "or", "the", "specified", "profile", "name", "pass", "to", "the", "Session", "or", "Client", "NUMBER", "This", "include", "assuming", "a", "role", "LINK", "assume", "role", "provider", "and", "will", "handle", "what", "your", "function", "do", "automatically", "NUMBER", "Something", "like", "In", "NUMBER", "aws", "credentials", "development", "aws_access_key_id", "foo", "aws_access_key_id", "bar", "In", "NUMBER", "aws", "config", "profile", "crossaccount", "role_arn", "arn", "aws", "iam", "NUMBER", "source_profile", "development", "Then", "just", "pass", "profile_name", "crossaccount", "to", "your", "Client", "or", "Session", "and", "boto", "will", "sort", "out", "assuming", "a", "role", "for", "you", "NUMBER", "Or", "update", "your", "assume", "role", "code", "to", "apply", "the", "credentials", "to", "a", "session", "LINK", "and", "then", "use", "that", "session", "to", "create", "clients", "NUMBER", "Though", "hard", "code", "your", "credentials", "in", "your", "source", "code", "be", "definitely", "not", "recommended", "NUMBER", "Awesome", "NUMBER", "I", "m", "glad", "you", "get", "it", "work", "for", "your", "use", "case", "NUMBER", "Just", "curious", "be", "there", "any", "reason", "you", "chose", "not", "to", "use", "the", "shared", "credential", "configuration", "Thanks", "for", "bringing", "this", "to", "our", "attention", "NUMBER", "This", "sounds", "like", "a", "service", "relate", "question", "NUMBER", "Your", "best", "bet", "be", "probably", "going", "to", "be", "stack", "overflow", "or", "the", "likes", "NUMBER", "You", "can", "see", "links", "to", "community", "help", "resources", "here", "LINK", "get", "help", "NUMBER", "I", "don", "t", "believe", "the", "EC", "NUMBER", "service", "has", "an", "API", "for", "copying", "security", "group", "to", "another", "region", "NUMBER", "You", "ll", "have", "to", "combine", "describes", "and", "creates", "to", "copy", "them", "NUMBER", "Boto", "be", "just", "a", "thin", "wrapper", "around", "the", "service", "APIs", "exposing", "them", "as", "more", "idiomatic", "python", "NUMBER", "This", "would", "be", "a", "feature", "request", "for", "the", "EC", "NUMBER", "service", "team", "and", "not", "Boto", "NUMBER", "We", "avoid", "implement", "higher", "level", "logic", "on", "top", "of", "the", "service", "APIs", "because", "it", "causes", "feature", "disparity", "between", "the", "SDKs", "NUMBER", "If", "the", "service", "team", "implement", "the", "feature", "then", "all", "AWS", "SDKs", "will", "get", "the", "feature", "NUMBER", "I", "ve", "forwarded", "your", "feedback", "to", "the", "MTurk", "team", "NUMBER", "Thanks", "for", "the", "report", "NUMBER", "I", "ve", "forwarded", "your", "feedback", "to", "the", "MTurk", "team", "NUMBER", "Thanks", "for", "the", "report", "NUMBER", "What", "behavior", "be", "you", "expecting", "from", "this", "The", "Body", "parameter", "takes", "a", "byte", "string", "or", "a", "file", "like", "object", "NUMBER", "It", "seems", "that", "you", "re", "passing", "the", "file", "path", "as", "the", "body", "which", "be", "likely", "uploading", "that", "string", "as", "the", "contents", "thus", "the", "md", "NUMBER", "be", "of", "the", "file", "path", "not", "the", "actual", "file", "contents", "NUMBER", "I", "can", "definitely", "agree", "that", "this", "be", "confusing", "NUMBER", "I", "know", "that", "we", "definitely", "add", "things", "to", "shared", "docs", "on", "occasion", "but", "I", "m", "not", "sure", "if", "we", "ever", "remove", "anything", "NUMBER", "I", "ll", "see", "what", "we", "can", "do", "to", "fix", "this", "up", "NUMBER", "Thanks", "for", "the", "report", "Unfortunately", "we", "don", "t", "have", "the", "bandwidth", "to", "address", "these", "kinds", "of", "issue", "at", "the", "moment", "NUMBER", "Your", "best", "bet", "be", "going", "to", "be", "get", "help", "from", "one", "of", "the", "community", "resource", "or", "the", "AWS", "support", "forums", "NUMBER", "Links", "to", "those", "can", "be", "find", "here", "LINK", "get", "help", "NUMBER", "If", "you", "find", "that", "this", "be", "truly", "a", "bug", "in", "the", "SDK", "feel", "free", "to", "re", "open", "this", "issue", "or", "open", "another", "issue", "with", "more", "detail", "on", "the", "exact", "bug", "NUMBER", "The", "guide", "be", "a", "little", "confusing", "but", "what", "it", "s", "saying", "be", "that", "if", "you", "structure", "your", "buckets", "use", "that", "format", "then", "listing", "all", "items", "for", "a", "certain", "date", "be", "difficult", "NUMBER", "You", "will", "need", "to", "ask", "for", "every", "prefix", "in", "the", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "range", "NUMBER", "The", "Prefix", "filter", "do", "not", "understand", "range", "syntax", "NUMBER", "Marking", "this", "as", "a", "feature", "request", "NUMBER", "Thanks", "for", "your", "input", "Thanks", "for", "bringing", "this", "to", "our", "attention", "NUMBER", "I", "can", "confirm", "that", "the", "links", "be", "broken", "NUMBER", "I", "ll", "reach", "out", "to", "the", "doc", "team", "to", "get", "this", "issue", "fix", "NUMBER", "Rebased", "against", "develop", "and", "merge", "via", "LINK", "On", "macOS", "NUMBER", "with", "Python", "NUMBER", "I", "wasn", "t", "able", "to", "reproduce", "this", "with", "the", "given", "code", "NUMBER", "This", "be", "what", "I", "tried", "python", "import", "boto", "NUMBER", "from", "multiprocessing", "import", "Process", "def", "test", "count", "attributes", "ALL", "region", "eu", "west", "NUMBER", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "reko", "session", "NUMBER", "client", "rekognition", "region", "print", "reko", "for", "count", "in", "range", "NUMBER", "p", "Process", "target", "test", "args", "count", "p", "NUMBER", "art", "Are", "you", "sure", "boto", "NUMBER", "be", "cause", "the", "issue", "The", "multiprocessing", "library", "actually", "doesn", "t", "use", "threads", "but", "spawns", "sub", "processes", "NUMBER", "This", "be", "different", "from", "threads", "in", "that", "the", "sub", "processes", "have", "their", "own", "memory", "space", "and", "thus", "sharing", "variables", "between", "them", "be", "more", "complicated", "than", "when", "use", "threads", "NUMBER", "Seeing", "as", "this", "be", "crash", "due", "to", "a", "segfault", "I", "m", "inclined", "to", "think", "there", "s", "an", "error", "somewhere", "in", "your", "multiprocessing", "code", "that", "s", "unrelated", "to", "boto", "NUMBER", "Let", "me", "know", "if", "I", "can", "provide", "anymore", "assistance", "I", "don", "t", "see", "any", "reason", "that", "you", "shouldn", "t", "be", "able", "to", "use", "multiprocessing", "NUMBER", "That", "decision", "be", "really", "up", "to", "you", "though", "NUMBER", "Without", "more", "details", "or", "a", "minimal", "sample", "that", "crashes", "there", "s", "not", "much", "we", "can", "do", "to", "help", "fix", "the", "segfault", "NUMBER", "Are", "you", "sharing", "any", "variables", "between", "the", "processes", "at", "all", "After", "some", "discussion", "it", "seems", "that", "others", "have", "had", "issue", "on", "Python", "NUMBER", "use", "multiprocessing", "NUMBER", "Would", "it", "be", "possible", "to", "try", "Python", "NUMBER", "Hm", "that", "s", "unfortunate", "NUMBER", "I", "m", "not", "sure", "there", "s", "anything", "we", "can", "do", "here", "as", "this", "seems", "to", "be", "a", "bug", "in", "python", "NUMBER", "You", "could", "try", "update", "to", "python", "NUMBER", "to", "see", "if", "that", "fix", "anything", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "other", "question", "NUMBER", "I", "think", "the", "AutoScaling", "LINK", "service", "be", "what", "you", "re", "looking", "for", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "other", "question", "Weilor", "Did", "the", "ApplicationAutoScaling", "service", "work", "out", "for", "you", "Good", "to", "hear", "This", "be", "not", "possible", "for", "us", "to", "handle", "automatically", "as", "it", "s", "impossible", "to", "accurately", "detect", "url", "encoding", "NUMBER", "I", "m", "not", "really", "sure", "if", "that", "s", "what", "you", "re", "ask", "for", "though", "NUMBER", "We", "don", "t", "control", "the", "s", "NUMBER", "event", "api", "or", "the", "lambda", "handlers", "so", "there", "s", "really", "not", "anything", "we", "can", "do", "here", "NUMBER", "I", "would", "try", "ask", "the", "s", "NUMBER", "or", "lambda", "team", "on", "AWS", "support", "LINK", "NUMBER", "Closing", "this", "out", "here", "as", "there", "s", "no", "action", "item", "for", "us", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "other", "question", "NUMBER", "Marking", "as", "a", "feature", "request", "NUMBER", "It", "might", "be", "challenging", "to", "figure", "out", "when", "we", "should", "be", "masking", "the", "response", "body", "NUMBER", "And", "ideally", "we", "d", "only", "be", "masking", "the", "things", "be", "private", "instead", "of", "the", "entire", "response", "body", "NUMBER", "Seems", "reasonable", "to", "me", "NUMBER", "Marking", "as", "a", "feature", "request", "NUMBER", "Yep", "NUMBER", "All", "you", "need", "to", "do", "be", "the", "following", "python", "import", "boto", "NUMBER", "from", "botocore", "import", "UNSIGNED", "from", "botocore", "NUMBER", "config", "import", "Config", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "config", "Config", "signature_version", "UNSIGNED", "And", "from", "there", "any", "request", "made", "from", "the", "client", "will", "not", "be", "sign", "NUMBER", "Let", "us", "know", "if", "you", "have", "anymore", "question", "NUMBER", "For", "the", "actual", "example", "the", "content", "in", "the", "example", "be", "sourced", "from", "this", "JSON", "model", "LINK", "NUMBER", "NUMBER", "examples", "NUMBER", "json", "L", "NUMBER", "L", "NUMBER", "NUMBER", "While", "it", "be", "possible", "to", "change", "the", "value", "there", "it", "be", "better", "to", "get", "it", "change", "in", "the", "upstream", "source", "that", "the", "change", "do", "not", "get", "clobbered", "if", "we", "pull", "in", "more", "Lambda", "examples", "upstream", "NUMBER", "If", "you", "have", "submitted", "a", "ticket", "to", "support", "that", "be", "probably", "the", "best", "way", "to", "make", "sure", "it", "gets", "update", "upstream", "NUMBER", "Once", "it", "do", "get", "fix", "upstream", "we", "will", "pull", "in", "the", "update", "which", "will", "fix", "the", "boto", "NUMBER", "docs", "NUMBER", "Let", "us", "know", "if", "you", "have", "anymore", "question", "NUMBER", "I", "would", "recommend", "upgrading", "your", "version", "of", "botocore", "NUMBER", "Boto", "NUMBER", "draws", "most", "of", "its", "client", "functionality", "from", "botocore", "NUMBER", "So", "botocore", "may", "need", "to", "be", "upgrade", "to", "pick", "up", "this", "functionality", "in", "boto", "NUMBER", "NUMBER", "With", "regards", "to", "AWS", "Lambda", "the", "case", "may", "be", "that", "Lambda", "has", "not", "upgrade", "their", "version", "of", "botocore", "as", "well", "NUMBER", "To", "be", "able", "to", "use", "this", "client", "method", "you", "may", "have", "to", "include", "a", "more", "up", "to", "date", "version", "of", "botocore", "and", "boto", "NUMBER", "in", "your", "deployment", "package", "to", "AWS", "Lambda", "NUMBER", "Let", "us", "know", "if", "that", "helps", "NUMBER", "I", "would", "recommend", "use", "the", "waiter", "interfaces", "instead", "of", "use", "your", "own", "solution", "NUMBER", "So", "you", "have", "a", "couple", "of", "waiter", "options", "available", "to", "you", "NUMBER", "If", "you", "want", "to", "wait", "for", "the", "CloudFormation", "stack", "to", "be", "created", "or", "update", "I", "would", "recommend", "use", "the", "StackCreateComplete", "LINK", "CloudFormation", "NUMBER", "Waiter", "NUMBER", "StackCreateComplete", "or", "StackUpdateComplete", "LINK", "CloudFormation", "NUMBER", "Waiter", "NUMBER", "StackUpdateComplete", "waiters", "NUMBER", "If", "you", "be", "concerned", "with", "actually", "be", "able", "to", "start", "use", "the", "instance", "i", "NUMBER", "e", "NUMBER", "it", "be", "in", "the", "ok", "state", "you", "can", "use", "the", "InstanceStatusOk", "LINK", "EC", "NUMBER", "Waiter", "NUMBER", "InstanceStatusOk", "waiter", "to", "wait", "for", "the", "instances", "to", "reach", "an", "ok", "state", "NUMBER", "This", "be", "hopefully", "better", "than", "having", "to", "maintain", "your", "own", "custom", "solution", "NUMBER", "Let", "us", "know", "if", "that", "helps", "NUMBER", "Hey", "sorry", "this", "took", "so", "long", "to", "get", "to", "I", "labelled", "it", "and", "forgot", "to", "respond", "NUMBER", "I", "m", "actually", "not", "sure", "why", "that", "field", "be", "no", "longer", "present", "NUMBER", "I", "have", "verify", "that", "field", "still", "exists", "and", "it", "s", "possible", "for", "Boto", "NUMBER", "to", "support", "it", "NUMBER", "I", "ll", "reach", "out", "to", "the", "S", "NUMBER", "service", "team", "to", "see", "what", "we", "can", "do", "to", "get", "that", "field", "update", "and", "support", "in", "Boto", "NUMBER", "Seeing", "as", "we", "can", "t", "do", "much", "here", "and", "nobody", "else", "has", "report", "anything", "I", "m", "going", "to", "close", "this", "NUMBER", "You", "can", "use", "the", "ResourceGroupsTaggingAPI", "LINK", "api", "to", "query", "directly", "for", "any", "resources", "with", "certain", "tags", "which", "will", "include", "ALBs", "and", "Target", "Groups", "NUMBER", "You", "can", "use", "sqs", "long", "polling", "to", "accomplish", "what", "you", "describe", "LINK", "long", "polling", "NUMBER", "html", "LINK", "example", "long", "polling", "NUMBER", "html", "I", "be", "not", "very", "familiar", "with", "ECS", "but", "it", "looks", "like", "from", "the", "docs", "that", "list_tasks", "LINK", "ECS", "NUMBER", "Client", "NUMBER", "list_tasks", "and", "list_services", "LINK", "ECS", "NUMBER", "Client", "NUMBER", "list_services", "take", "a", "cluster", "argument", "NUMBER", "I", "would", "assume", "when", "you", "click", "a", "cluster", "in", "the", "console", "it", "be", "make", "calls", "to", "those", "APIs", "to", "fetch", "the", "relate", "information", "for", "that", "cluster", "and", "display", "the", "output", "NUMBER", "This", "kind", "of", "service", "relate", "question", "be", "better", "suited", "for", "either", "stack", "overflow", "or", "the", "service", "forum", "itself", "LINK", "NUMBER", "NUMBER", "We", "maintain", "boto", "NUMBER", "but", "we", "don", "t", "necessarily", "have", "knowledge", "of", "all", "the", "APIs", "themselves", "as", "there", "be", "quite", "a", "few", "of", "them", "NUMBER", "list_services", "do", "not", "have", "service", "task", "name", "argument", "NUMBER", "list_tasks", "has", "a", "serviceName", "argument", "but", "it", "appears", "to", "be", "an", "optional", "NUMBER", "That", "be", "a", "fairly", "recent", "addition", "to", "rekognition", "so", "I", "would", "suggest", "upgrading", "to", "the", "most", "recent", "version", "use", "pip", "install", "U", "boto", "NUMBER", "NUMBER", "boto", "NUMBER", "NUMBER", "do", "not", "have", "resources", "NUMBER", "Install", "the", "most", "up", "to", "date", "version", "with", "pip", "install", "U", "boto", "NUMBER", "Which", "firehose", "API", "call", "be", "this", "and", "what", "exactly", "be", "trimmed", "Sorry", "I", "don", "t", "quite", "follow", "what", "be", "be", "trimmed", "and", "why", "I", "assume", "this", "was", "all", "just", "dumped", "to", "stderr", "On", "the", "current", "version", "of", "botocore", "this", "should", "throw", "a", "MalformedPolicyDocumentException", "which", "you", "can", "catch", "like", "so", "python", "import", "boto", "NUMBER", "import", "botocore", "import", "json", "client", "boto", "NUMBER", "client", "iam", "policy_document", "Version", "NUMBER", "NUMBER", "NUMBER", "Statement", "Effect", "Allow", "Action", "s", "NUMBER", "Put", "Resource", "arn", "aws", "s", "NUMBER", "region", "account", "mybucket", "try", "client", "NUMBER", "create_policy", "PolicyName", "my_policy", "PolicyDocument", "json", "NUMBER", "dumps", "policy_document", "except", "client", "NUMBER", "exception", "NUMBER", "MalformedPolicyDocumentException", "as", "e", "print", "e", "This", "inherits", "from", "ClientException", "so", "you", "should", "be", "able", "to", "catch", "that", "as", "well", "NUMBER", "Can", "you", "upgrade", "and", "see", "if", "that", "fix", "it", "Glad", "that", "worked", "for", "you", "What", "version", "of", "botocore", "be", "this", "use", "I", "get", "a", "ClientError", "when", "I", "run", "your", "code", "on", "the", "most", "recent", "version", "NUMBER", "Awesome", "It", "be", "not", "possible", "as", "s", "NUMBER", "cmd", "be", "a", "NUMBER", "party", "tool", "NUMBER", "Adding", "another", "layer", "to", "our", "config", "loading", "process", "that", "provides", "the", "same", "information", "would", "introduce", "a", "lot", "more", "complexity", "so", "it", "s", "not", "something", "we", "be", "looking", "to", "do", "at", "the", "moment", "NUMBER", "You", "need", "to", "make", "sure", "that", "bucket", "s", "CORS", "config", "be", "set", "to", "accept", "the", "content", "type", "header", "NUMBER", "When", "you", "make", "the", "PUT", "request", "ajax", "makes", "a", "preflight", "OPTIONS", "request", "to", "see", "if", "the", "request", "it", "be", "about", "to", "make", "be", "allow", "NUMBER", "S", "NUMBER", "will", "check", "the", "preflight", "headers", "against", "that", "buckets", "cors", "config", "object", "to", "ensure", "everything", "be", "allow", "NUMBER", "Since", "by", "default", "the", "Content", "Type", "header", "be", "not", "in", "the", "list", "of", "allow", "headers", "the", "preflight", "request", "will", "fail", "and", "ajax", "will", "not", "make", "the", "PUT", "request", "NUMBER", "Here", "be", "a", "cors", "config", "document", "that", "works", "for", "me", "with", "your", "script", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "GET", "TAG", "TAG", "PUT", "TAG", "TAG", "NUMBER", "TAG", "TAG", "GET", "TAG", "TAG", "PUT", "TAG", "TAG", "Authorization", "TAG", "TAG", "Content", "Type", "TAG", "TAG", "TAG", "All", "I", "did", "was", "add", "that", "last", "TAG", "Content", "Type", "TAG", "line", "to", "the", "default", "one", "NUMBER", "That", "config", "worked", "for", "the", "following", "two", "scripts", "to", "presign", "the", "url", "and", "upload", "the", "image", "Generate", "the", "presigned", "url", "python", "import", "boto", "NUMBER", "import", "botocore", "s", "NUMBER", "_con", "boto", "NUMBER", "client", "s", "NUMBER", "url", "s", "NUMBER", "_con", "NUMBER", "generate_presigned_url", "put_object", "Params", "Bucket", "bucket_name", "Key", "img", "NUMBER", "jpg", "ContentType", "image", "jpg", "ExpiresIn", "NUMBER", "print", "url", "Ajax", "call", "to", "upload", "javascript", "presigned_url", "NUMBER", "function", "sendFile", "e", "e", "NUMBER", "preventDefault", "get", "the", "reference", "to", "the", "actual", "file", "in", "the", "input", "var", "theFormFile", "theFile", "NUMBER", "get", "NUMBER", "NUMBER", "file", "NUMBER", "NUMBER", "ajax", "type", "PUT", "url", "presigned_url", "contentType", "image", "jpg", "processData", "false", "data", "theFormFile", "NUMBER", "success", "function", "file", "response", "console", "NUMBER", "log", "file", "file", "console", "NUMBER", "log", "response", "response", "alert", "File", "uploaded", "NUMBER", "error", "function", "alert", "File", "NOT", "uploaded", "console", "NUMBER", "log", "argument", "Duplicate", "of", "LINK", "I", "don", "t", "really", "know", "what", "you", "be", "doing", "since", "that", "line", "you", "provide", "be", "not", "valid", "python", "code", "NUMBER", "I", "don", "t", "know", "what", "salt", "run", "means", "NUMBER", "Is", "this", "on", "a", "command", "line", "How", "where", "be", "you", "run", "this", "line", "mcarlton", "NUMBER", "Did", "you", "mean", "this", "Status", "Enabled", "bhanukumar", "NUMBER", "Were", "you", "able", "to", "resolve", "this", "issue", "or", "do", "an", "empty", "prefix", "and", "capital", "Enabled", "status", "work", "for", "you", "as", "well", "bhanukumar", "NUMBER", "Awesome", "Glad", "to", "hear", "that", "NUMBER", "Why", "do", "you", "say", "it", "be", "inconsistent", "They", "be", "different", "one", "be", "in", "the", "user", "defined", "metadata", "which", "be", "always", "prefixed", "with", "x", "amz", "meta", "so", "it", "doesn", "t", "collide", "with", "any", "other", "names", "NUMBER", "The", "other", "be", "for", "setting", "the", "content", "type", "NUMBER", "Our", "extra_args", "parameters", "map", "to", "headers", "outlined", "here", "LINK", "Metadata", "holds", "no", "special", "meaning", "and", "be", "simply", "to", "store", "your", "own", "meta", "data", "NUMBER", "The", "others", "have", "defined", "meanings", "in", "the", "API", "defined", "in", "that", "link", "above", "NUMBER", "Hmmm", "thats", "super", "weird", "s", "NUMBER", "api", "delete", "object", "would", "work", "and", "s", "NUMBER", "delete_object", "wouldn", "t", "NUMBER", "They", "use", "the", "exact", "same", "logic", "in", "botocore", "under", "the", "hood", "to", "perform", "that", "API", "call", "NUMBER", "Body", "must", "be", "a", "bytes", "or", "a", "file", "type", "as", "per", "the", "documentation", "LINK", "S", "NUMBER", "Bucket", "NUMBER", "put_object", "NUMBER", "Py", "NUMBER", "just", "happens", "to", "not", "know", "the", "difference", "before", "a", "string", "and", "bytes", "which", "means", "it", "kind", "of", "works", "as", "long", "as", "your", "bytes", "all", "happen", "to", "fall", "in", "utf", "NUMBER", "Raw", "binary", "will", "only", "work", "in", "python", "NUMBER", "you", "appear", "to", "be", "use", "python", "NUMBER", "so", "you", "must", "wrap", "your", "binary", "data", "in", "the", "special", "boto", "NUMBER", "dynamodb", "NUMBER", "types", "NUMBER", "Binary", "type", "detailed", "here", "LINK", "ref", "valid", "dynamodb", "types", "NUMBER", "Below", "be", "a", "work", "code", "segment", "for", "both", "py", "NUMBER", "and", "py", "NUMBER", "python", "import", "boto", "NUMBER", "import", "uuid", "from", "Crypto", "NUMBER", "Cipher", "import", "AES", "from", "boto", "NUMBER", "dynamodb", "NUMBER", "types", "import", "Binary", "boto", "NUMBER", "set_stream_logger", "table", "test", "table", "message", "this", "be", "super", "seecrit", "salt", "this", "be", "the", "salt", "iv", "this", "be", "the", "iv", "NUMBER", "obj", "AES", "NUMBER", "new", "salt", "AES", "NUMBER", "MODE_CFB", "iv", "crypto_text", "obj", "NUMBER", "encrypt", "message", "print", "crypto_text", "type", "crypto_text", "item", "uuid", "str", "uuid", "NUMBER", "uuid", "NUMBER", "cryptotext", "Binary", "crypto_text", "dynamodb", "boto", "NUMBER", "resource", "dynamodb", "region_name", "us", "east", "NUMBER", "table", "dynamodb", "NUMBER", "Table", "table", "table", "NUMBER", "put_item", "Item", "item", "Hope", "that", "helps", "Typically", "we", "would", "like", "to", "see", "a", "new", "unit", "test", "that", "will", "exercise", "the", "problem", "which", "should", "pass", "with", "the", "PR", "and", "fail", "without", "it", "NUMBER", "Can", "you", "add", "a", "test", "like", "that", "Yep", "thomasmortensson", "Thanks", "for", "the", "PR", "NUMBER", "lets", "move", "the", "discussion", "over", "there", "so", "it", "s", "all", "in", "one", "place", "NUMBER", "This", "be", "a", "question", "for", "stack", "overflow", "LINK", "we", "do", "not", "have", "the", "bandwidth", "here", "to", "answer", "usage", "question", "here", "NUMBER", "You", "can", "modify", "your", "timeout", "use", "a", "config", "LINK", "object", "and", "passing", "in", "whatever", "timeout", "values", "make", "sense", "for", "your", "particular", "lambda", "function", "s", "timeout", "for", "example", "like", "you", "said", "a", "few", "seconds", "longer", "than", "the", "lambda", "function", "s", "to", "account", "for", "overhead", "NUMBER", "The", "retries", "you", "be", "seeing", "be", "not", "synced", "with", "your", "lambda", "function", "s", "timeout", "so", "it", "be", "get", "re", "invoked", "NUMBER", "Does", "that", "meet", "your", "use", "case", "or", "do", "you", "still", "want", "this", "feature", "request", "I", "will", "mark", "this", "as", "a", "feature", "request", "since", "I", "think", "its", "pretty", "justified", "based", "on", "the", "lambda", "use", "case", "NUMBER", "request", "Yes", "that", "be", "correct", "IDs", "and", "Names", "be", "different", "NUMBER", "This", "would", "be", "a", "feature", "request", "for", "EC", "NUMBER", "as", "we", "do", "not", "design", "the", "APIs", "NUMBER", "You", "can", "raise", "this", "with", "EC", "NUMBER", "on", "their", "forums", "LINK", "NUMBER", "What", "would", "be", "a", "better", "error", "in", "this", "case", "This", "be", "a", "question", "about", "service", "usage", "which", "be", "a", "for", "stack", "overflow", "LINK", "NUMBER", "Thanks", "for", "report", "this", "As", "you", "may", "have", "suspected", "we", "do", "not", "maintain", "this", "particular", "piece", "of", "documentation", "as", "it", "be", "shared", "between", "all", "the", "SDKs", "and", "the", "service", "itself", "NUMBER", "I", "have", "raise", "this", "documentation", "issue", "with", "IAM", "thanks", "again", "I", "believe", "this", "be", "a", "duplicate", "of", "NUMBER", "so", "I", "m", "going", "to", "close", "this", "issue", "in", "favor", "of", "that", "one", "and", "encourage", "you", "to", "go", "thumbs", "up", "that", "issue", "NUMBER", "This", "error", "be", "originating", "from", "the", "network", "somewhere", "in", "the", "network", "path", "something", "be", "resetting", "the", "TCP", "connection", "and", "cause", "that", "error", "NUMBER", "Since", "this", "only", "occur", "on", "your", "server", "it", "s", "likely", "something", "amiss", "with", "the", "network", "that", "the", "server", "itself", "be", "connected", "to", "NUMBER", "Hi", "there", "You", "re", "looking", "at", "the", "documentation", "for", "the", "IAM", "client", "object", "but", "you", "re", "use", "the", "IAM", "Resource", "API", "NUMBER", "The", "resource", "API", "be", "a", "higher", "level", "API", "over", "the", "clients", "and", "you", "can", "see", "the", "documentation", "for", "that", "located", "at", "LINK", "IAM", "NUMBER", "ServiceResource", "NUMBER", "create_user", "NUMBER", "Other", "than", "the", "change", "to", "use", "sys", "NUMBER", "argv", "this", "looks", "good", "to", "me", "NUMBER", "The", "simplification", "was", "largely", "that", "it", "allows", "you", "to", "pass", "additional", "things", "besides", "paths", "to", "the", "script", "now", "as", "well", "NUMBER", "Thanks", "This", "looks", "good", "to", "me", "as", "well", "going", "to", "go", "ahead", "and", "merge", "this", "in", "thanks", "I", "made", "the", "call", "myself", "and", "looked", "at", "the", "debug", "logs", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "OperationModel", "name", "DetectLabels", "verify_ssl", "True", "with", "params", "body", "Image", "S", "NUMBER", "Object", "Bucket", "x", "NUMBER", "x", "NUMBER", "x", "Name", "NUMBER", "jpg", "url", "u", "LINK", "west", "NUMBER", "amazonaws", "NUMBER", "com", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Darwin", "NUMBER", "Botocore", "NUMBER", "Content", "Type", "u", "application", "x", "amz", "json", "NUMBER", "X", "Amz", "Target", "u", "RekognitionService", "NUMBER", "DetectLabels", "context", "client_region", "us", "west", "NUMBER", "has_streaming_input", "False", "client_config", "TAG", "query_string", "url_path", "method", "u", "POST", "And", "the", "request", "boto", "NUMBER", "be", "sending", "looks", "correct", "NUMBER", "So", "It", "looks", "like", "it", "may", "be", "an", "issue", "with", "the", "service", "NUMBER", "It", "be", "probably", "worth", "it", "to", "ping", "on", "that", "thread", "you", "linked", "as", "it", "seems", "that", "Rekognition", "team", "has", "be", "active", "on", "it", "NUMBER", "Yep", "The", "recommended", "way", "would", "be", "to", "use", "the", "event", "system", "NUMBER", "Here", "be", "documentation", "on", "how", "you", "can", "leverage", "this", "LINK", "creating", "resource", "class", "NUMBER", "Hope", "this", "helps", "NUMBER", "What", "version", "of", "boto", "NUMBER", "be", "you", "use", "This", "looks", "similar", "to", "a", "threading", "issue", "that", "we", "get", "with", "celery", "LINK", "The", "correspondence", "be", "pretty", "long", "and", "should", "have", "a", "lot", "of", "the", "background", "information", "NUMBER", "As", "a", "possible", "workaround", "try", "setting", "the", "use_threads", "option", "to", "False", "NUMBER", "Here", "be", "some", "upgrading", "note", "about", "it", "LINK", "id", "NUMBER", "Let", "us", "know", "if", "that", "helps", "NUMBER", "abuccts", "Could", "you", "include", "debug", "logs", "from", "the", "error", "you", "be", "seeing", "You", "can", "do", "this", "by", "add", "the", "line", "boto", "NUMBER", "set_stream_logger", "to", "the", "line", "before", "you", "make", "the", "client", "method", "call", "NUMBER", "Yeah", "it", "looks", "like", "we", "will", "just", "need", "to", "re", "sync", "our", "documentation", "from", "upstream", "to", "correct", "this", "as", "it", "looks", "like", "it", "has", "be", "update", "in", "the", "API", "documentation", "NUMBER", "skylazart", "What", "version", "of", "s", "NUMBER", "transfer", "be", "you", "use", "I", "have", "a", "feeling", "you", "will", "need", "to", "upgrade", "that", "NUMBER", "as", "it", "be", "listed", "in", "the", "setup", "NUMBER", "py", "LINK", "L", "NUMBER", "I", "replied", "back", "on", "the", "Stack", "Overflow", "post", "NUMBER", "Let", "s", "keep", "the", "conversation", "there", "as", "we", "be", "trying", "to", "limit", "open", "GitHub", "issue", "to", "bug", "and", "feature", "request", "as", "shown", "in", "the", "boto", "NUMBER", "README", "LINK", "NUMBER", "So", "with", "S", "NUMBER", "s", "API", "if", "the", "source", "key", "do", "not", "exist", "it", "will", "error", "out", "as", "you", "commented", "NUMBER", "It", "will", "not", "create", "a", "key", "on", "your", "behalf", "if", "the", "the", "source", "key", "do", "not", "exist", "NUMBER", "If", "you", "want", "it", "to", "not", "error", "out", "you", "will", "have", "to", "check", "if", "the", "source", "key", "exists", "and", "copy", "it", "if", "it", "do", "exist", "NUMBER", "Unfortunately", "not", "NUMBER", "There", "be", "a", "open", "feature", "request", "where", "this", "would", "fall", "under", "LINK", "As", "of", "now", "you", "would", "have", "to", "list", "through", "all", "of", "the", "objects", "in", "the", "source", "bucket", "and", "copy", "them", "over", "to", "the", "specified", "destination", "prefix", "NUMBER", "Yep", "NUMBER", "No", "problem", "NUMBER", "I", "m", "going", "to", "go", "a", "head", "and", "close", "the", "issue", "NUMBER", "If", "you", "have", "any", "more", "comments", "question", "feel", "free", "to", "reopen", "the", "issue", "NUMBER", "Can", "you", "give", "me", "a", "little", "more", "context", "on", "what", "you", "be", "doing", "such", "as", "a", "code", "snippet", "what", "be", "the", "expectation", "and", "what", "be", "actually", "get", "returned", "sumgan", "kapilt", "be", "correct", "that", "it", "needs", "to", "be", "a", "list", "of", "dictionaries", "NUMBER", "You", "be", "going", "to", "have", "to", "download", "those", "json", "file", "and", "dump", "them", "into", "the", "client", "call", "and", "that", "should", "work", "assuming", "that", "the", "JSON", "file", "be", "correct", "NUMBER", "As", "mention", "in", "our", "README", "LINK", "get", "help", "I", "would", "recommend", "moving", "any", "more", "usage", "question", "to", "Stack", "Overflow", "NUMBER", "We", "be", "trying", "to", "reserve", "open", "issue", "to", "bug", "and", "feature", "request", "NUMBER", "Yeah", "in", "general", "if", "you", "know", "the", "region", "of", "the", "bucket", "you", "set", "that", "region", "when", "you", "instantiate", "the", "client", "to", "ensure", "you", "do", "not", "hit", "redirect", "error", "and", "minimize", "the", "amount", "of", "calls", "be", "made", "NUMBER", "Boto", "NUMBER", "do", "a", "best", "effort", "in", "trying", "to", "redirect", "you", "to", "the", "correct", "location", "but", "it", "may", "not", "happen", "due", "to", "whatever", "region", "the", "bucket", "be", "located", "or", "the", "name", "of", "the", "bucket", "NUMBER", "Assuming", "you", "be", "not", "use", "signature", "version", "NUMBER", "for", "your", "signing", "method", "one", "thing", "that", "you", "can", "try", "be", "setting", "your", "signature_version", "to", "s", "NUMBER", "v", "NUMBER", "when", "you", "create", "your", "client", "config", "LINK", "L", "NUMBER", "NUMBER", "It", "has", "a", "lot", "of", "logic", "relate", "to", "redirecting", "sigv", "NUMBER", "sign", "request", "that", "should", "help", "you", "out", "NUMBER", "The", "one", "caveat", "be", "that", "if", "you", "set", "your", "region", "incorrectly", "you", "may", "initially", "be", "make", "extra", "API", "request", "to", "locate", "the", "correct", "region", "of", "your", "bucket", "NUMBER", "So", "in", "the", "end", "it", "be", "best", "to", "set", "the", "region", "correctly", "in", "the", "first", "place", "NUMBER", "Closing", "due", "to", "inactivity", "You", "re", "right", "that", "they", "re", "not", "available", "in", "any", "of", "the", "SDKs", "at", "the", "moment", "NUMBER", "Unfortunately", "I", "cannot", "comment", "on", "when", "SDK", "support", "will", "be", "release", "NUMBER", "In", "the", "meantime", "be", "aware", "that", "they", "could", "potentially", "make", "breaking", "change", "to", "their", "api", "at", "any", "time", "NUMBER", "The", "error", "you", "re", "get", "in", "your", "first", "example", "be", "relate", "to", "the", "type", "which", "should", "be", "a", "string", "not", "an", "int", "NUMBER", "Unfortunately", "I", "don", "t", "know", "the", "answer", "to", "your", "question", "NUMBER", "To", "ask", "question", "about", "service", "usage", "you", "ll", "be", "better", "served", "open", "a", "support", "ticket", "or", "ask", "on", "StackOverflow", "with", "boto", "NUMBER", "tag", "NUMBER", "You", "can", "see", "some", "of", "our", "other", "resources", "here", "LINK", "get", "help", "NUMBER", "That", "definitely", "seems", "very", "useful", "we", "ll", "look", "into", "add", "these", "NUMBER", "Ah", "I", "think", "they", "re", "documenting", "how", "you", "would", "do", "it", "in", "the", "CLI", "which", "be", "strange", "NUMBER", "So", "in", "the", "CLI", "you", "would", "use", "that", "to", "reference", "a", "file", "on", "your", "local", "disk", "NUMBER", "boto", "NUMBER", "and", "the", "other", "sdks", "don", "t", "have", "that", "behavior", "however", "NUMBER", "I", "ll", "let", "the", "service", "team", "know", "about", "this", "documentation", "issue", "and", "ask", "for", "clarification", "NUMBER", "Looking", "through", "your", "script", "it", "makes", "sense", "that", "you", "would", "be", "seeing", "that", "NUMBER", "What", "be", "happening", "be", "that", "for", "this", "part", "of", "the", "code", "python", "for", "instanceId", "in", "instanceList", "instance", "ec", "NUMBER", "Instance", "instanceId", "count", "NUMBER", "maxTries", "NUMBER", "sleepTimeOut", "NUMBER", "while", "count", "TAG", "snapshot", "rds", "dbname", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "TargetDBSnapshotIdentifier", "my", "test", "SourceRegion", "us", "west", "NUMBER", "KmsKeyId", "mykeyid", "Let", "us", "know", "if", "that", "helps", "NUMBER", "mohankodali", "What", "version", "of", "botocore", "do", "you", "have", "install", "You", "may", "need", "to", "upgrade", "to", "use", "SourceRegion", "parameter", "NUMBER", "Yeah", "I", "think", "that", "version", "of", "botocore", "will", "not", "have", "the", "parameter", "available", "NUMBER", "We", "release", "that", "feature", "about", "a", "month", "ago", "and", "that", "version", "NUMBER", "be", "about", "two", "months", "old", "NUMBER", "So", "if", "you", "want", "to", "get", "it", "work", "in", "lambda", "you", "will", "probably", "have", "to", "deploy", "with", "your", "function", "the", "latest", "version", "of", "botocore", "NUMBER", "What", "specifically", "be", "you", "trying", "to", "use", "with", "jmespath", "and", "timestamps", "Could", "you", "provide", "a", "sample", "JMESPath", "expression", "you", "be", "trying", "to", "apply", "Closing", "due", "to", "inactivity", "NUMBER", "I", "agree", "this", "looks", "like", "it", "be", "come", "from", "the", "service", "NUMBER", "I", "would", "recommend", "get", "in", "touch", "with", "the", "service", "team", "on", "the", "AWS", "Developer", "Forums", "NUMBER", "Closing", "due", "to", "inactivity", "s", "NUMBER", "v", "NUMBER", "query", "be", "for", "use", "in", "presigning", "it", "be", "not", "intended", "to", "be", "use", "as", "the", "signing", "method", "for", "a", "client", "resource", "NUMBER", "If", "you", "wish", "to", "use", "signature", "version", "NUMBER", "signature", "version", "string", "to", "use", "be", "s", "NUMBER", "v", "NUMBER", "NUMBER", "When", "use", "SSE", "C", "you", "need", "to", "provide", "your", "key", "with", "SSECustomerKey", "NUMBER", "Closing", "due", "to", "inactivity", "NUMBER", "What", "botocore", "boto", "NUMBER", "version", "be", "you", "use", "Also", "what", "region", "be", "you", "connecting", "to", "I", "see", "this", "operation", "has", "be", "around", "unchanged", "for", "quite", "a", "while", "so", "it", "could", "be", "that", "something", "change", "service", "side", "NUMBER", "The", "build", "in", "version", "of", "boto", "NUMBER", "Or", "be", "you", "bundling", "in", "your", "own", "copy", "For", "uploading", "an", "object", "you", "should", "use", "generate_presigned_post", "LINK", "S", "NUMBER", "Client", "NUMBER", "generate_presigned_post", "NUMBER", "There", "be", "several", "parameters", "that", "cannot", "be", "embedded", "within", "the", "url", "and", "those", "be", "returned", "to", "you", "by", "that", "method", "NUMBER", "Maybe", "that", "s", "not", "the", "correct", "way", "to", "use", "file", "the", "request", "docs", "isn", "t", "super", "clear", "on", "this", "point", "NUMBER", "See", "below", "for", "a", "work", "sample", "NUMBER", "python", "import", "boto", "NUMBER", "import", "request", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "parts", "s", "NUMBER", "generate_presigned_post", "Bucket", "foo", "Key", "bar", "response", "request", "NUMBER", "post", "parts", "url", "data", "parts", "field", "file", "file", "open", "some_filename", "NUMBER", "txt", "rb", "Yes", "we", "bring", "in", "all", "timestamps", "as", "python", "datetime", "objects", "NUMBER", "If", "you", "want", "to", "json", "serialize", "a", "dict", "that", "contains", "datetime", "objects", "you", "ll", "need", "to", "extend", "the", "serializer", "see", "examples", "here", "LINK", "to", "overcome", "datetime", "datetime", "not", "json", "serializable", "in", "python", "NUMBER", "Closing", "due", "to", "inactivity", "I", "think", "you", "need", "to", "update", "botocore", "pip", "install", "upgrade", "botocore", "NUMBER", "The", "first", "error", "be", "local", "validation", "that", "indicates", "your", "local", "copy", "be", "out", "of", "date", "NUMBER", "The", "second", "be", "a", "server", "side", "error", "that", "s", "saying", "the", "param", "be", "miss", "NUMBER", "That", "s", "the", "documentation", "for", "boto", "NUMBER", "The", "documentation", "for", "boto", "NUMBER", "be", "here", "LINK", "bucket", "NUMBER", "Haha", "no", "worries", "NUMBER", "It", "s", "an", "easy", "enough", "mistake", "to", "make", "NUMBER", "Thanks", "for", "report", "I", "ve", "opened", "the", "issue", "in", "s", "NUMBER", "transfer", "which", "provides", "the", "functionality", "for", "upload_fileobj", "NUMBER", "Closing", "out", "here", "NUMBER", "Based", "on", "these", "docs", "LINK", "elb", "http", "error", "NUMBER", "html", "ts", "elb", "error", "metrics", "Backend_", "NUMBER", "XX", "it", "looks", "like", "your", "instances", "be", "throw", "those", "error", "for", "some", "reason", "NUMBER", "For", "further", "service", "assistance", "I", "would", "recommend", "ask", "on", "the", "service", "forum", "NUMBER", "I", "find", "a", "similar", "question", "LINK", "NUMBER", "there", "that", "may", "help", "you", "out", "NUMBER", "We", "do", "support", "python", "NUMBER", "though", "I", "imagine", "you", "re", "request", "us", "to", "officially", "document", "support", "NUMBER", "We", "ll", "have", "that", "in", "as", "soon", "as", "we", "have", "a", "clean", "run", "of", "test", "from", "Travis", "NUMBER", "Closing", "due", "to", "inactivity", "You", "need", "to", "update", "your", "botocore", "version", "pip", "install", "upgrade", "botocore", "Most", "of", "the", "logs", "live", "in", "botocore", "so", "if", "you", "want", "those", "as", "well", "you", "ll", "need", "to", "enable", "that", "logger", "as", "well", "boto", "NUMBER", "set_stream_logger", "botocore", "Well", "somebody", "took", "all", "the", "best", "food", "names", "after", "all", "I", "think", "I", "see", "the", "issue", "NUMBER", "Creating", "clients", "resources", "be", "not", "thread", "safe", "NUMBER", "We", "recommend", "LINK", "multithreading", "creating", "a", "Session", "object", "for", "each", "thread", "where", "you", "will", "be", "creating", "clients", "resources", "NUMBER", "This", "be", "definitely", "something", "we", "d", "like", "to", "have", "but", "I", "can", "t", "comment", "on", "when", "it", "might", "be", "available", "NUMBER", "Closing", "due", "to", "inactivity", "If", "you", "only", "have", "ResponseMetadata", "in", "your", "response", "it", "probably", "means", "you", "get", "an", "empty", "response", "from", "the", "server", "NUMBER", "Try", "setting", "more", "debug", "logging", "with", "boto", "NUMBER", "set_stream_logger", "and", "see", "what", "response", "body", "has", "NUMBER", "Mine", "be", "empty", "since", "I", "have", "no", "SDB", "resources", "NUMBER", "As", "to", "why", "it", "has", "an", "empty", "response", "I", "have", "no", "idea", "NUMBER", "You", "can", "ask", "question", "directly", "relate", "to", "the", "service", "on", "their", "forum", "LINK", "NUMBER", "Glad", "you", "get", "a", "work", "solution", "NUMBER", "Closing", "due", "to", "inactivity", "Wow", "now", "that", "s", "interesting", "NUMBER", "I", "ll", "look", "into", "add", "that", "restriction", "NUMBER", "Thanks", "for", "the", "heads", "up", "Where", "exactly", "be", "you", "logging", "to", "Is", "it", "be", "redirected", "somewhere", "I", "m", "trying", "to", "get", "an", "idea", "of", "what", "a", "reasonable", "limit", "would", "be", "but", "I", "m", "struggling", "to", "find", "information", "about", "actual", "limits", "NUMBER", "While", "we", "look", "into", "this", "I", "have", "a", "workaround", "for", "you", "NUMBER", "You", "can", "change", "the", "logger", "format", "for", "boto", "NUMBER", "when", "you", "setup", "the", "logger", "LINK", "boto", "NUMBER", "set_stream_logger", "Hmm", "I", "m", "not", "sure", "what", "the", "issue", "here", "be", "NUMBER", "I", "would", "recommend", "ask", "on", "the", "service", "forums", "LINK", "NUMBER", "they", "should", "be", "able", "to", "help", "you", "better", "NUMBER", "That", "do", "seems", "strange", "NUMBER", "I", "would", "recommend", "ask", "about", "that", "issue", "on", "the", "service", "forums", "LINK", "NUMBER", "they", "should", "have", "a", "better", "idea", "of", "what", "might", "be", "wrong", "NUMBER", "This", "be", "a", "duplicate", "of", "boto", "botocore", "NUMBER", "Invalid", "xml", "isn", "t", "something", "we", "can", "retry", "safely", "NUMBER", "What", "version", "of", "botocore", "be", "you", "use", "Are", "there", "any", "unicode", "characters", "in", "your", "key", "names", "Closing", "due", "to", "inactivity", "boto", "NUMBER", "and", "the", "cli", "use", "the", "exact", "same", "code", "base", "botocore", "to", "handle", "this", "NUMBER", "The", "destination", "region", "be", "implied", "by", "the", "region", "you", "send", "the", "request", "to", "NUMBER", "We", "should", "probably", "hide", "that", "parameter", "from", "the", "docs", "since", "we", "don", "t", "expect", "it", "to", "be", "set", "NUMBER", "Raiju", "NUMBER", "no", "that", "just", "means", "that", "when", "copying", "to", "a", "region", "you", "need", "to", "use", "a", "client", "configured", "for", "that", "region", "NUMBER", "I", "would", "advise", "against", "calling", "a", "lambda", "function", "from", "within", "a", "lambda", "function", "synchronously", "like", "that", "NUMBER", "It", "results", "in", "you", "effectively", "be", "double", "billed", "NUMBER", "In", "this", "case", "it", "looks", "like", "that", "other", "lambda", "function", "be", "taking", "so", "long", "that", "it", "s", "cause", "the", "initial", "function", "to", "time", "out", "NUMBER", "You", "will", "need", "to", "either", "increase", "your", "timeout", "invoke", "the", "other", "lambda", "asynchronously", "or", "optimize", "the", "other", "lambda", "function", "NUMBER", "Given", "that", "you", "already", "have", "boto", "NUMBER", "imported", "in", "that", "script", "can", "you", "just", "use", "boto", "NUMBER", "to", "do", "the", "upload", "Sorry", "for", "unacceptable", "delay", "on", "this", "issue", "NUMBER", "You", "be", "correct", "the", "issue", "be", "a", "socket", "timeout", "on", "invocations", "that", "take", "longer", "than", "NUMBER", "seconds", "NUMBER", "The", "reason", "multiple", "connections", "be", "made", "be", "that", "a", "socket", "timeout", "be", "generally", "a", "retryable", "error", "NUMBER", "You", "aren", "t", "the", "first", "customer", "to", "have", "this", "issue", "we", "really", "need", "to", "append", "this", "to", "the", "documentation", "for", "invoke", "NUMBER", "I", "m", "not", "sure", "what", "your", "use", "case", "be", "but", "pip", "be", "the", "canonical", "python", "package", "installer", "NUMBER", "If", "you", "aren", "t", "going", "to", "use", "that", "or", "have", "internet", "access", "I", "m", "not", "sure", "how", "to", "help", "NUMBER", "You", "re", "correct", "simplejson", "be", "only", "required", "for", "python", "NUMBER", "If", "you", "re", "concerned", "about", "security", "you", "should", "absolutely", "not", "be", "use", "that", "version", "of", "python", "as", "it", "has", "be", "EOL", "for", "over", "three", "years", "now", "NUMBER", "Unfortunately", "your", "only", "option", "right", "now", "be", "to", "either", "use", "an", "up", "to", "date", "version", "of", "python", "or", "to", "install", "the", "package", "via", "pip", "NUMBER", "Closing", "due", "to", "inactivity", "Thanks", "for", "the", "PR", "Could", "you", "please", "squash", "your", "commit", "Thanks", "Since", "this", "be", "a", "service", "behavior", "the", "service", "forums", "LINK", "NUMBER", "be", "a", "more", "appropriate", "place", "for", "this", "issue", "NUMBER", "The", "reason", "be", "that", "an", "ARN", "be", "a", "globally", "unique", "identifier", "whereas", "a", "name", "be", "only", "unique", "within", "the", "scope", "of", "an", "account", "NUMBER", "Still", "I", "can", "see", "where", "that", "would", "be", "convenient", "if", "you", "have", "no", "need", "to", "access", "resources", "outside", "of", "your", "account", "NUMBER", "The", "best", "place", "to", "ask", "for", "such", "feature", "request", "be", "on", "the", "service", "forums", "LINK", "NUMBER", "NUMBER", "Sorry", "for", "the", "unacceptable", "delay", "on", "responding", "to", "this", "issue", "NUMBER", "What", "do", "you", "mean", "it", "s", "implicitly", "lower", "cased", "Are", "you", "saying", "that", "the", "value", "of", "resource", "NUMBER", "identifier", "be", "change", "Closing", "due", "to", "inactivity", "NUMBER", "Looks", "like", "they", "use", "a", "slightly", "different", "http", "status", "code", "for", "that", "exception", "which", "be", "why", "we", "didn", "t", "catch", "it", "automatically", "NUMBER", "I", "ll", "add", "that", "to", "our", "retry", "definition", "NUMBER", "After", "a", "closer", "look", "I", "notice", "that", "it", "be", "in", "fact", "already", "in", "our", "retry", "strategy", "what", "version", "of", "botocore", "be", "you", "use", "Looks", "like", "we", "add", "it", "January", "NUMBER", "NUMBER", "If", "your", "botocore", "version", "be", "up", "to", "date", "that", "means", "that", "the", "request", "fail", "even", "with", "exponential", "backoff", "NUMBER", "I", "ll", "have", "to", "discuss", "with", "the", "broader", "teams", "to", "see", "how", "we", "want", "to", "configure", "the", "retry", "strategy", "for", "these", "operations", "NUMBER", "As", "dalegaspi", "mention", "you", "will", "need", "to", "paginate", "NUMBER", "You", "can", "also", "use", "the", "build", "in", "paginator", "LINK", "IAM", "NUMBER", "Paginator", "NUMBER", "ListUsers", "to", "handle", "the", "details", "for", "you", "NUMBER", "This", "appears", "to", "be", "a", "service", "side", "bug", "I", "would", "recommend", "report", "it", "on", "the", "service", "forum", "LINK", "NUMBER", "NUMBER", "We", "will", "make", "sure", "the", "documentation", "gets", "update", "NUMBER", "We", "can", "t", "guarantee", "that", "the", "url", "will", "have", "a", "valid", "region", "in", "it", "NUMBER", "You", "can", "always", "pass", "the", "url", "via", "endpoint_url", "but", "we", "can", "t", "be", "sure", "some", "string", "in", "your", "url", "doesn", "t", "look", "like", "a", "region", "for", "example", "I", "could", "name", "a", "SQS", "queue", "us", "west", "NUMBER", "and", "be", "in", "region", "us", "west", "NUMBER", "Not", "sure", "if", "we", "could", "do", "it", "correctly", "NUMBER", "Change", "part", "s", "NUMBER", "upload_part", "Bucket", "bucketName", "Key", "self", "NUMBER", "key", "PartNumber", "part_number", "UploadId", "self", "NUMBER", "_uploadId", "Body", "data", "to", "part", "s", "NUMBER", "upload_part", "Bucket", "bucketName", "Key", "self", "NUMBER", "key", "PartNumber", "part_number", "UploadId", "self", "NUMBER", "_uploadId", "Body", "data", "NUMBER", "read", "Need", "to", "do", "more", "investigation", "as", "to", "why", "that", "be", "required", "with", "filechunkio", "NUMBER", "Hopefully", "that", "be", "enough", "to", "get", "you", "unblocked", "for", "now", "NUMBER", "You", "re", "specify", "an", "api", "version", "which", "do", "not", "have", "Scope", "available", "you", "will", "need", "to", "use", "at", "least", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "You", "will", "need", "to", "copy", "into", "its", "current", "location", "and", "add", "the", "relevant", "parameters", "in", "the", "copy", "operation", "NUMBER", "If", "you", "have", "more", "question", "about", "this", "I", "recommend", "ask", "on", "the", "service", "forums", "LINK", "NUMBER", "they", "should", "be", "able", "to", "better", "help", "you", "use", "the", "s", "NUMBER", "api", "NUMBER", "You", "add", "your", "tag", "to", "the", "volume", "not", "the", "snapshot", "NUMBER", "Your", "screenshot", "shows", "the", "snapshot", "NUMBER", "I", "m", "fairly", "certain", "that", "tags", "aren", "t", "copied", "over", "when", "you", "create", "a", "snapshot", "NUMBER", "boto", "NUMBER", "would", "do", "that", "LINK", "L", "NUMBER", "however", "doing", "so", "be", "an", "opinionated", "decision", "that", "could", "not", "be", "opted", "out", "of", "NUMBER", "That", "additional", "request", "costs", "you", "both", "money", "and", "time", "and", "prevents", "you", "from", "add", "other", "tags", "in", "the", "request", "to", "make", "the", "most", "out", "of", "it", "NUMBER", "For", "those", "reasons", "and", "several", "others", "we", "avoid", "make", "request", "on", "your", "behalf", "when", "you", "haven", "t", "explicitly", "initiated", "them", "NUMBER", "If", "you", "want", "to", "remove", "an", "instance", "from", "your", "load", "balancer", "you", "can", "deregister", "it", "NUMBER", "If", "you", "re", "talking", "about", "actually", "make", "the", "instance", "itself", "unhealthy", "then", "the", "answer", "be", "no", "NUMBER", "You", "will", "need", "to", "do", "that", "yourself", "NUMBER", "You", "may", "be", "able", "to", "get", "more", "help", "on", "the", "service", "forum", "LINK", "NUMBER", "NUMBER", "You", "could", "also", "check", "out", "chaos", "monkey", "to", "see", "if", "that", "s", "what", "your", "looking", "for", "NUMBER", "If", "you", "deregister", "through", "the", "api", "elb", "will", "wait", "until", "in", "flight", "request", "have", "completed", "before", "terminating", "it", "NUMBER", "You", "can", "configure", "a", "timeout", "on", "it", "so", "that", "it", "will", "terminate", "it", "after", "a", "certain", "amount", "of", "time", "regardless", "NUMBER", "You", "can", "find", "more", "information", "here", "LINK", "deregister", "register", "instances", "NUMBER", "html", "though", "the", "operations", "you", "use", "will", "be", "different", "if", "you", "re", "use", "elbv", "NUMBER", "Based", "on", "that", "response", "metadata", "it", "seems", "the", "request", "succeeded", "so", "there", "s", "nothing", "we", "can", "do", "on", "our", "side", "NUMBER", "You", "might", "bring", "this", "up", "on", "the", "service", "forum", "LINK", "NUMBER", "to", "see", "why", "the", "request", "be", "returning", "a", "NUMBER", "response", "NUMBER", "Yes", "and", "no", "NUMBER", "We", "don", "t", "upload", "it", "to", "different", "keys", "and", "I", "don", "t", "think", "that", "s", "the", "direction", "we", "want", "to", "take", "this", "feature", "but", "you", "can", "still", "download", "parts", "NUMBER", "If", "you", "want", "to", "download", "only", "a", "part", "of", "the", "file", "you", "can", "use", "Range", "when", "you", "perform", "the", "get_object", "request", "or", "other", "download", "NUMBER", "This", "follows", "the", "http", "range", "header", "LINK", "sec", "NUMBER", "html", "sec", "NUMBER", "semantics", "so", "to", "get", "the", "first", "NUMBER", "bytes", "you", "would", "use", "NUMBER", "NUMBER", "NUMBER", "You", "can", "also", "use", "PartNumber", "so", "downloading", "part", "NUMBER", "would", "download", "the", "first", "part", "that", "was", "uploaded", "NUMBER", "Part", "size", "be", "determined", "by", "the", "configuration", "you", "pass", "in", "but", "will", "be", "auto", "adjusted", "if", "your", "part", "size", "be", "invalid", "NUMBER", "In", "this", "way", "it", "s", "not", "quite", "as", "reliable", "since", "you", "can", "t", "be", "sure", "how", "big", "each", "part", "be", "but", "it", "could", "be", "faster", "and", "easier", "to", "understand", "NUMBER", "Yes", "NUMBER", "You", "can", "download", "parts", "of", "an", "object", "as", "few", "bytes", "as", "you", "want", "when", "you", "retrieve", "it", "NUMBER", "You", "cannot", "have", "multiple", "objects", "under", "a", "single", "key", "NUMBER", "I", "understand", "that", "NUMBER", "It", "be", "unfortunately", "not", "possible", "to", "have", "one", "key", "represent", "multiple", "objects", "NUMBER", "Nor", "can", "upload_fileobj", "split", "a", "file", "into", "separate", "objects", "NUMBER", "If", "you", "want", "to", "break", "a", "fileobj", "into", "multiple", "objects", "you", "will", "need", "to", "split", "it", "up", "yourself", "and", "perform", "multiple", "uploads", "as", "necessary", "NUMBER", "Glad", "to", "help", "Sorry", "I", "wasn", "t", "super", "clear", "initially", "NUMBER", "There", "s", "no", "real", "way", "to", "know", "when", "that", "operation", "be", "complete", "so", "we", "wouldn", "t", "be", "able", "to", "write", "a", "waiter", "for", "it", "NUMBER", "We", "can", "t", "rely", "on", "the", "queue", "be", "empty", "to", "signal", "it", "s", "do", "because", "another", "process", "could", "have", "created", "a", "new", "message", "in", "the", "meantime", "NUMBER", "Further", "the", "queue", "has", "no", "attribute", "that", "says", "it", "s", "undergoing", "a", "purge", "so", "there", "be", "no", "do", "state", "for", "us", "to", "end", "on", "NUMBER", "Without", "some", "way", "of", "knowing", "the", "operation", "be", "complete", "there", "s", "nothing", "we", "can", "do", "NUMBER", "Since", "you", "control", "the", "whole", "environment", "you", "could", "potentially", "guarantee", "that", "nothing", "be", "write", "to", "the", "queue", "NUMBER", "You", "could", "then", "assume", "the", "operation", "be", "do", "once", "the", "queue", "s", "ApproximateNumberOfMessages", "be", "NUMBER", "but", "even", "then", "you", "re", "relying", "on", "an", "approximation", "NUMBER", "I", "would", "recommend", "ask", "for", "some", "way", "to", "know", "when", "the", "purge", "be", "completed", "or", "at", "least", "a", "way", "to", "know", "when", "one", "be", "happening", "on", "the", "service", "forum", "LINK", "NUMBER", "NUMBER", "With", "that", "we", "could", "write", "a", "waiter", "NUMBER", "There", "be", "no", "equivalent", "parameter", "and", "I", "would", "be", "NUMBER", "on", "add", "a", "parameter", "that", "change", "the", "meaning", "of", "another", "parameter", "NUMBER", "To", "achieve", "the", "same", "effect", "you", "can", "subtract", "time", "NUMBER", "time", "from", "the", "value", "NUMBER", "There", "be", "two", "ways", "to", "access", "services", "in", "boto", "NUMBER", "via", "the", "low", "level", "client", "or", "the", "higher", "level", "resource", "which", "only", "available", "for", "a", "few", "services", "NUMBER", "In", "your", "first", "example", "you", "re", "use", "the", "resource", "which", "will", "return", "classes", "where", "relevant", "NUMBER", "Here", "LINK", "CloudFormation", "NUMBER", "ServiceResource", "NUMBER", "create_stack", "be", "the", "documentation", "for", "the", "service", "resource", "s", "create_stack", "method", "which", "returns", "a", "Stack", "resource", "NUMBER", "In", "this", "case", "you", "re", "be", "throttled", "because", "you", "re", "sending", "request", "rapid", "fire", "one", "after", "another", "NUMBER", "For", "a", "more", "robust", "waiting", "solution", "you", "should", "use", "a", "waiter", "LINK", "RDS", "NUMBER", "Waiter", "NUMBER", "DBInstanceAvailable", "python", "def", "get_endpoint_status", "instance_name", "conn", "boto", "NUMBER", "client", "rds", "return", "conn", "NUMBER", "describe_db_instances", "DBInstanceIdentifier", "instance_name", "DBInstances", "NUMBER", "DBInstanceStatus", "def", "get_endpoint", "brand_name", "BRAND_NAME", "instance_name", "rde", "db", "rds", "NUMBER", "format", "brand_name", "current_status", "None", "conn", "boto", "NUMBER", "client", "rds", "This", "will", "return", "once", "the", "instance", "be", "available", "conn", "NUMBER", "get_waiter", "db_instance_available", "NUMBER", "wait", "DBInstanceIdentifier", "instance_name", "response", "conn", "NUMBER", "describe_db_instances", "DBInstanceIdentifier", "instance_name", "return", "response", "DBInstances", "NUMBER", "Endpoint", "Address", "What", "values", "do", "you", "have", "for", "vol_id", "and", "snap_desc", "Closing", "due", "to", "inactivity", "I", "think", "that", "general", "feature", "request", "be", "still", "covered", "by", "the", "other", "issue", "though", "it", "could", "use", "a", "better", "title", "NUMBER", "For", "your", "case", "however", "there", "may", "be", "some", "confusion", "cloudwatch", "do", "not", "return", "responses", "in", "json", "NUMBER", "It", "uses", "query", "which", "be", "xml", "based", "so", "you", "would", "still", "need", "to", "go", "through", "the", "deserialization", "step", "NUMBER", "Closing", "due", "to", "inactivity", "NUMBER", "I", "only", "had", "one", "comment", "which", "I", "went", "ahead", "and", "address", "NUMBER", "I", "ll", "leave", "this", "open", "for", "another", "reviewer", "or", "your", "response", "to", "the", "change", "NUMBER", "Closing", "due", "to", "inactivity", "NUMBER", "Closing", "due", "to", "inactivity", "NUMBER", "I", "think", "I", "would", "rather", "have", "hashing", "function", "implement", "NUMBER", "This", "just", "ignores", "the", "problem", "NUMBER", "That", "would", "certainly", "be", "useful", "even", "if", "we", "only", "link", "NUMBER", "Thanks", "for", "the", "ask", "Much", "like", "in", "the", "linked", "issue", "you", "will", "need", "to", "use", "the", "relevant", "paginator", "to", "iterate", "through", "all", "of", "your", "resources", "or", "otherwise", "manually", "paginate", "NUMBER", "If", "you", "would", "like", "to", "see", "additional", "api", "parameters", "I", "would", "recommend", "ask", "for", "them", "on", "the", "service", "forum", "LINK", "NUMBER", "NUMBER", "None", "of", "S", "NUMBER", "s", "operations", "have", "a", "dry", "run", "option", "NUMBER", "To", "test", "without", "make", "service", "request", "you", "can", "use", "the", "botocore", "stubber", "LINK", "NUMBER", "The", "session", "itself", "isn", "t", "thread", "safe", "you", "ll", "need", "to", "create", "a", "new", "one", "for", "each", "thread", "python", "import", "threading", "from", "boto", "NUMBER", "session", "import", "Session", "class", "Worker", "threading", "NUMBER", "Thread", "NUMBER", "def", "run", "self", "s", "Session", "s", "NUMBER", "s", "NUMBER", "resource", "s", "NUMBER", "It", "s", "generally", "placed", "in", "the", "response", "metadata", "python", "import", "boto", "NUMBER", "r", "boto", "NUMBER", "client", "s", "NUMBER", "NUMBER", "list_buckets", "rid", "r", "ResponseMetadata", "HTTPHeaders", "x", "amz", "request", "id", "themanifold", "Could", "you", "give", "a", "specific", "code", "snippet", "of", "what", "you", "be", "doing", "Specifically", "I", "would", "like", "to", "see", "what", "method", "you", "be", "use", "to", "download", "the", "file", "i", "NUMBER", "e", "NUMBER", "download_file", "or", "get", "NUMBER", "Also", "could", "you", "possibly", "send", "us", "the", "debug", "logs", "to", "help", "diagnose", "Without", "too", "much", "information", "I", "would", "guess", "it", "has", "to", "be", "with", "hitting", "retries", "due", "to", "throttling", "or", "connection", "issue", "if", "you", "be", "maxing", "out", "your", "downstream", "bandwidth", "NUMBER", "However", "there", "be", "not", "too", "much", "we", "can", "do", "to", "help", "other", "than", "guess", "the", "cause", "without", "debug", "logs", "and", "code", "snippets", "NUMBER", "Thanks", "for", "the", "deep", "dive", "here", "I", "m", "taking", "a", "look", "into", "right", "now", "to", "see", "what", "may", "be", "going", "on", "NUMBER", "Ah", "I", "see", "what", "be", "happening", "NUMBER", "All", "that", "info", "you", "provide", "helped", "a", "bunch", "NUMBER", "So", "this", "be", "what", "be", "happening", "NUMBER", "So", "in", "the", "switch", "to", "NUMBER", "we", "swapped", "out", "the", "s", "NUMBER", "managed", "transfer", "implementation", "for", "a", "more", "powerful", "unified", "implementation", "in", "pulling", "in", "s", "NUMBER", "transfer", "NUMBER", "When", "the", "download_file", "be", "created", "we", "create", "a", "brand", "new", "S", "NUMBER", "Transfer", "object", "each", "time", "LINK", "L", "NUMBER", "NUMBER", "When", "we", "create", "a", "new", "S", "NUMBER", "Transfer", "object", "we", "actually", "create", "a", "s", "NUMBER", "transfer", "NUMBER", "manager", "NUMBER", "TransferManager", "under", "the", "hood", "and", "we", "create", "a", "new", "one", "every", "time", "NUMBER", "The", "TransferManager", "registers", "new", "handlers", "to", "deal", "with", "an", "issue", "with", "progress", "callbacks", "for", "uploads", "LINK", "L", "NUMBER", "L", "NUMBER", "but", "the", "issue", "be", "we", "be", "creating", "a", "new", "TransferManager", "every", "time", "and", "as", "a", "result", "we", "register", "those", "two", "every", "time", "as", "well", "NUMBER", "I", "think", "what", "needs", "to", "happen", "the", "following", "needs", "to", "happen", "NUMBER", "In", "the", "shutdown", "method", "for", "TransferManager", "unregister", "those", "two", "events", "NUMBER", "NUMBER", "Call", "shutdown", "in", "the", "client", "methods", "to", "make", "sure", "they", "events", "get", "cleaned", "up", "NUMBER", "As", "to", "workarounds", "for", "right", "now", "you", "can", "use", "S", "NUMBER", "Transfer", "directly", "NUMBER", "So", "you", "should", "be", "able", "to", "do", "something", "like", "this", "py", "import", "boto", "NUMBER", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "S", "NUMBER", "Transfer", "import", "random", "import", "os", "s", "NUMBER", "_client", "boto", "NUMBER", "resource", "s", "NUMBER", "s", "NUMBER", "_transfer", "S", "NUMBER", "Transfer", "s", "NUMBER", "_client", "NUMBER", "meta", "NUMBER", "client", "while", "True", "random_num", "str", "random", "NUMBER", "randint", "NUMBER", "NUMBER", "s", "NUMBER", "_transfer", "NUMBER", "download_file", "bucket", "testbucket", "key", "random_num", "filename", "tmp", "random_num", "os", "NUMBER", "remove", "tmp", "random_num", "Let", "us", "know", "if", "that", "helps", "NUMBER", "In", "the", "meantime", "we", "will", "look", "into", "fix", "this", "NUMBER", "What", "version", "of", "botocore", "be", "you", "use", "My", "guess", "be", "that", "the", "version", "that", "you", "have", "install", "be", "trail", "the", "latest", "version", "which", "be", "NUMBER", "The", "documentation", "always", "shows", "the", "latest", "NUMBER", "So", "if", "that", "be", "the", "case", "all", "you", "need", "to", "do", "be", "upgrade", "pip", "install", "boto", "NUMBER", "upgrade", "NUMBER", "Let", "us", "know", "if", "this", "helps", "NUMBER", "Looks", "like", "an", "issue", "in", "our", "resource", "model", "NUMBER", "Notice", "the", "defintion", "LINK", "NUMBER", "NUMBER", "resources", "NUMBER", "json", "L", "NUMBER", "It", "uses", "an", "upper", "case", "Q", "for", "QueueUrl", "when", "it", "should", "be", "lowercase", "q", "as", "seen", "in", "the", "docs", "LINK", "SQS", "NUMBER", "Client", "NUMBER", "list_dead_letter_source_queues", "NUMBER", "I", "will", "send", "up", "a", "fix", "for", "it", "NUMBER", "nhumrich", "Could", "you", "provide", "a", "code", "snippet", "and", "possibly", "debug", "logs", "of", "what", "you", "be", "doing", "in", "boto", "NUMBER", "You", "can", "get", "debug", "logs", "by", "add", "boto", "NUMBER", "set_stream_logger", "botocore", "to", "the", "line", "right", "before", "you", "make", "the", "client", "call", "NUMBER", "That", "will", "help", "debug", "the", "issue", "NUMBER", "Strange", "NUMBER", "We", "will", "try", "out", "you", "code", "and", "see", "if", "we", "can", "reproduce", "it", "NUMBER", "If", "you", "can", "provide", "debug", "logs", "that", "would", "be", "awesome", "and", "help", "expedite", "this", "NUMBER", "One", "thing", "that", "I", "could", "possibly", "see", "it", "be", "be", "a", "concurrency", "issue", "when", "logging", "that", "be", "if", "celery", "enable", "logging", "NUMBER", "We", "have", "a", "PR", "to", "fix", "that", "LINK", "Maybe", "that", "will", "help", "but", "we", "either", "need", "debug", "logs", "or", "need", "to", "try", "it", "out", "ourselves", "NUMBER", "jppacheco", "What", "value", "be", "you", "passing", "for", "newSubnetGroup", "in", "your", "code", "snippet", "According", "to", "the", "docs", "LINK", "RDS", "NUMBER", "Client", "NUMBER", "modify_db_instance", "it", "should", "be", "a", "string", "NUMBER", "Not", "sure", "if", "that", "be", "the", "issue", "NUMBER", "If", "that", "do", "not", "help", "resolve", "the", "issue", "could", "you", "please", "provide", "debug", "logs", "by", "add", "boto", "NUMBER", "set_stream_logger", "botocore", "to", "the", "line", "right", "before", "make", "the", "client", "call", "Yeah", "this", "be", "the", "same", "as", "this", "request", "LINK", "I", "think", "it", "would", "be", "nice", "if", "we", "did", "something", "to", "handle", "this", "or", "autopopulate", "location", "constraint", "for", "the", "user", "NUMBER", "I", "be", "going", "to", "close", "this", "as", "a", "duplicate", "but", "let", "s", "keep", "the", "conversation", "going", "in", "the", "linked", "issue", "NUMBER", "For", "the", "first", "part", "this", "looks", "to", "be", "a", "behavior", "of", "EC", "NUMBER", "The", "behavior", "be", "if", "you", "call", "DescribeNetworkInterfaces", "without", "an", "id", "you", "will", "not", "get", "AllocationId", "and", "AssociationId", "NUMBER", "There", "be", "not", "much", "we", "can", "do", "in", "the", "SDK", "about", "that", "NUMBER", "You", "will", "probably", "need", "to", "ask", "on", "the", "AWS", "Developer", "Forums", "LINK", "NUMBER", "to", "see", "if", "they", "can", "update", "the", "service", "behavior", "NUMBER", "As", "to", "the", "association", "be", "None", "when", "there", "be", "no", "association", "data", "this", "be", "a", "server", "side", "behavior", "as", "well", "so", "it", "would", "be", "good", "to", "ask", "about", "that", "as", "well", "NUMBER", "Let", "us", "know", "if", "you", "have", "anymore", "question", "NUMBER", "Seems", "reasonable", "NUMBER", "Marking", "as", "a", "feature", "request", "NUMBER", "Ananas", "Is", "that", "all", "of", "the", "code", "needed", "to", "reproduce", "this", "The", "reason", "you", "be", "run", "into", "this", "be", "that", "you", "be", "provide", "a", "url", "encoded", "timestamp", "in", "somewhere", "Thu", "NUMBER", "NUMBER", "Dec", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "based", "on", "the", "traceback", "but", "you", "be", "not", "doing", "any", "timestamp", "manipulation", "in", "the", "code", "snippet", "that", "you", "provide", "NUMBER", "In", "general", "if", "the", "service", "do", "not", "return", "a", "key", "in", "its", "response", "we", "will", "not", "include", "it", "by", "autopopulating", "or", "something", "in", "the", "dictionary", "returned", "back", "NUMBER", "As", "to", "the", "documentation", "in", "general", "there", "be", "no", "guarantee", "that", "any", "of", "the", "keys", "will", "be", "returned", "by", "the", "service", "NUMBER", "The", "documentation", "just", "documents", "all", "of", "the", "possible", "keys", "that", "could", "be", "returned", "in", "the", "response", "so", "there", "be", "no", "guarantee", "on", "a", "key", "always", "exist", "in", "the", "response", "NUMBER", "For", "the", "DbInstancePort", "equaling", "NUMBER", "this", "be", "a", "behavior", "come", "from", "RDS", "I", "be", "unable", "to", "give", "an", "exact", "answer", "as", "to", "why", "this", "be", "the", "case", "NUMBER", "For", "this", "question", "it", "would", "be", "worth", "ask", "the", "AWS", "Developer", "Forums", "LINK", "NUMBER", "as", "they", "should", "be", "more", "knowledgeable", "NUMBER", "Let", "us", "know", "if", "you", "have", "anymore", "question", "NUMBER", "ship", "Are", "you", "get", "all", "of", "the", "NUMBER", "GB", "back", "when", "you", "do", "the", "while", "loop", "read", "I", "be", "a", "little", "confused", "by", "the", "statement", "I", "suspect", "the", "API", "faced", "the", "end", "of", "the", "file", "however", "it", "occur", "in", "the", "middle", "of", "reading", "the", "file", "NUMBER", "Does", "that", "mean", "you", "be", "half", "way", "into", "downloading", "the", "file", "at", "like", "NUMBER", "GB", "out", "of", "NUMBER", "GB", "when", "the", "read", "returns", "less", "than", "request", "Or", "do", "you", "mean", "something", "else", "Seems", "reasonable", "to", "me", "NUMBER", "It", "would", "not", "be", "hard", "to", "add", "NUMBER", "All", "that", "would", "need", "to", "be", "do", "be", "add", "a", "line", "similar", "to", "this", "LINK", "L", "NUMBER", "L", "NUMBER", "but", "for", "volumes", "and", "add", "a", "functional", "test", "NUMBER", "Feel", "free", "to", "send", "a", "PR", "otherwise", "we", "will", "eventually", "get", "around", "to", "add", "it", "NUMBER", "Thanks", "I", "can", "see", "where", "this", "be", "misleading", "as", "most", "of", "the", "config", "variables", "match", "up", "with", "client", "initialization", "parameters", "NUMBER", "Change", "looks", "good", "to", "me", "NUMBER", "Merging", "NUMBER", "Makes", "sense", "NUMBER", "Since", "storage_class", "be", "backed", "by", "an", "enumerated", "value", "we", "should", "be", "able", "to", "add", "all", "of", "the", "different", "values", "NUMBER", "With", "the", "example", "syntax", "for", "client", "and", "resource", "calls", "that", "return", "a", "dictionary", "we", "specify", "the", "enum", "values", "NUMBER", "Take", "the", "response", "syntax", "for", "list_objects", "LINK", "S", "NUMBER", "Client", "NUMBER", "list_objects", "for", "example", "NUMBER", "We", "just", "need", "to", "put", "these", "enum", "values", "in", "the", "parameter", "description", "NUMBER", "jvirtanen", "Thanks", "for", "the", "PR", "So", "the", "way", "we", "handle", "changelog", "generation", "be", "a", "little", "different", "than", "modifying", "the", "actual", "changelog", "NUMBER", "We", "actually", "regenerate", "the", "changelog", "from", "change", "find", "in", "the", "NUMBER", "change", "directory", "each", "time", "we", "do", "a", "release", "NUMBER", "So", "if", "you", "only", "make", "the", "change", "directly", "to", "CHANGELOG", "NUMBER", "rst", "they", "will", "be", "erased", "in", "the", "next", "release", "NUMBER", "The", "change", "need", "to", "be", "add", "in", "the", "JSON", "as", "well", "NUMBER", "It", "looks", "like", "you", "will", "need", "to", "update", "NUMBER", "json", "NUMBER", "json", "NUMBER", "json", "and", "NUMBER", "json", "as", "well", "NUMBER", "Cool", "the", "change", "look", "good", "NUMBER", "So", "I", "think", "when", "we", "originally", "add", "the", "scripts", "gen", "changelog", "in", "the", "PR", "that", "add", "scripts", "new", "change", "but", "decided", "to", "remove", "it", "NUMBER", "I", "forget", "why", "we", "remove", "it", "NUMBER", "It", "may", "have", "be", "due", "to", "the", "fact", "that", "if", "we", "needed", "to", "update", "the", "script", "it", "would", "need", "to", "be", "update", "in", "three", "different", "repositories", "NUMBER", "So", "instead", "it", "be", "keep", "as", "a", "part", "of", "a", "script", "that", "automates", "our", "release", "for", "each", "of", "the", "package", "that", "we", "maintain", "NUMBER", "But", "that", "script", "we", "have", "not", "publish", "externally", "NUMBER", "I", "think", "it", "would", "be", "worth", "to", "publish", "this", "script", "but", "I", "think", "we", "would", "want", "to", "consolidate", "it", "to", "a", "single", "repository", "or", "figure", "out", "how", "to", "share", "it", "across", "all", "of", "our", "repositories", "NUMBER", "Otherwise", "merge", "NUMBER", "So", "S", "NUMBER", "at", "times", "may", "abort", "the", "connection", "for", "whatever", "reason", "when", "streaming", "the", "payload", "up", "to", "s", "NUMBER", "If", "this", "happens", "you", "need", "to", "have", "retry", "logic", "that", "retries", "the", "upload", "if", "that", "happens", "NUMBER", "Is", "there", "any", "reason", "why", "you", "be", "not", "use", "the", "upload_file", "methods", "LINK", "uploads", "to", "upload", "the", "file", "These", "be", "completely", "managed", "for", "you", "in", "terms", "of", "handle", "retries", "when", "to", "do", "multipart", "uploads", "and", "be", "multithreaded", "as", "well", "NUMBER", "Thanks", "Merging", "NUMBER", "Please", "read", "the", "documentation", "LINK", "SES", "NUMBER", "Client", "NUMBER", "send_raw_email", "NUMBER", "To", "send", "the", "email", "you", "need", "to", "call", "it", "as", "something", "like", "this", "py", "ses", "NUMBER", "send_raw_email", "RawMessage", "Data", "msg", "NUMBER", "as_string", "Source", "msg", "From", "Destinations", "to_emails", "where", "RawMessage", "be", "a", "dictionary", "with", "the", "key", "Data", "and", "the", "value", "be", "the", "email", "content", "NUMBER", "Let", "us", "know", "how", "that", "works", "out", "NUMBER", "Thanks", "for", "catching", "the", "syntax", "error", "NUMBER", "I", "update", "my", "comment", "to", "fix", "it", "NUMBER", "It", "seems", "strange", "that", "the", "attachments", "do", "not", "get", "include", "NUMBER", "When", "you", "call", "ms", "NUMBER", "as_string", "do", "it", "include", "the", "attachments", "if", "you", "print", "it", "out", "andrewalexander", "I", "run", "the", "script", "that", "you", "provide", "and", "I", "be", "seeing", "that", "as", "well", "NUMBER", "I", "be", "not", "entirely", "sure", "why", "this", "be", "happening", "NUMBER", "Here", "be", "the", "relevant", "part", "in", "the", "debug", "logs", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "ec", "NUMBER", "AuthorizeSecurityGroupEgress", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "OperationModel", "name", "AuthorizeSecurityGroupEgress", "verify_ssl", "True", "with", "params", "body", "u", "FromPort", "NUMBER", "u", "CidrIp", "NUMBER", "NUMBER", "u", "ToPort", "NUMBER", "Version", "u", "NUMBER", "NUMBER", "NUMBER", "Action", "u", "AuthorizeSecurityGroupEgress", "u", "IpProtocol", "tcp", "u", "GroupId", "sg", "f", "NUMBER", "d", "NUMBER", "url", "u", "LINK", "west", "NUMBER", "amazonaws", "NUMBER", "com", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Darwin", "NUMBER", "Botocore", "NUMBER", "context", "client_region", "us", "west", "NUMBER", "has_streaming_input", "False", "client_config", "TAG", "query_string", "url_path", "method", "u", "POST", "and", "it", "looks", "like", "the", "correct", "serialization", "be", "happening", "NUMBER", "So", "I", "do", "not", "think", "it", "be", "an", "issue", "with", "boto", "NUMBER", "I", "have", "a", "feeling", "that", "be", "just", "the", "behavior", "server", "side", "NUMBER", "It", "would", "probably", "be", "best", "to", "ask", "on", "the", "EC", "NUMBER", "Forums", "LINK", "NUMBER", "as", "to", "why", "that", "be", "the", "behavior", "NUMBER", "From", "my", "experience", "use", "the", "parameters", "that", "EC", "NUMBER", "has", "flagged", "as", "not", "recommended", "have", "tended", "to", "be", "inconsistent", "as", "whether", "it", "works", "sometimes", "depends", "on", "how", "old", "of", "an", "account", "you", "have", "i", "NUMBER", "e", "NUMBER", "classic", "link", "by", "default", "or", "not", "NUMBER", "The", "fact", "that", "the", "parameter", "still", "exists", "be", "for", "backwards", "compatibility", "reasons", "with", "older", "users", "NUMBER", "So", "I", "would", "really", "recommend", "following", "EC", "NUMBER", "s", "recommendation", "on", "which", "parameters", "to", "use", "as", "they", "be", "much", "less", "likely", "to", "be", "inconsistent", "if", "at", "all", "NUMBER", "Yep", "NUMBER", "You", "just", "need", "to", "set", "it", "use", "the", "ExtraArgs", "param", "NUMBER", "Here", "be", "an", "example", "in", "the", "docs", "LINK", "uploads", "but", "it", "be", "for", "metadata", "instead", "NUMBER", "ContentEncoding", "should", "be", "very", "similar", "NUMBER", "All", "of", "the", "allow", "ExtraArgs", "be", "listed", "here", "LINK", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "S", "NUMBER", "Transfer", "NUMBER", "ALLOWED_UPLOAD_ARGS", "If", "you", "have", "any", "more", "question", "lets", "keep", "the", "conversation", "going", "on", "gitter", "LINK", "explore", "This", "seems", "like", "a", "bug", "to", "me", "but", "need", "to", "do", "more", "researching", "NUMBER", "In", "short", "it", "seems", "if", "MaxItems", "be", "specified", "and", "if", "a", "marker", "be", "not", "returned", "from", "the", "service", "API", "response", "it", "will", "not", "populate", "the", "NextToken", "but", "it", "should", "because", "the", "paginator", "stopped", "in", "the", "middle", "of", "the", "only", "page", "given", "back", "NUMBER", "Furthermore", "if", "after", "you", "call", "paginate", "you", "can", "call", "build_full_result", "LINK", "L", "NUMBER", "and", "that", "will", "get", "you", "a", "NextToken", "NUMBER", "So", "I", "wonder", "if", "it", "be", "just", "an", "issue", "with", "the", "__iter__", "muhammad", "ammar", "So", "one", "thing", "to", "note", "be", "that", "the", "copy", "LINK", "S", "NUMBER", "Bucket", "NUMBER", "copy", "be", "already", "multithreaded", "as", "noted", "in", "the", "docs", "NUMBER", "How", "large", "be", "the", "file", "you", "be", "transferring", "typically", "I", "have", "a", "feeling", "what", "be", "happening", "be", "that", "the", "threads", "may", "be", "starving", "themselves", "in", "the", "sense", "that", "you", "have", "NUMBER", "threads", "make", "copy", "calls", "but", "for", "each", "copy", "it", "alone", "can", "make", "NUMBER", "concurrent", "request", "if", "the", "file", "be", "relatively", "large", "in", "terms", "of", "MB", "NUMBER", "So", "in", "a", "worst", "case", "scenario", "you", "can", "have", "NUMBER", "threads", "make", "request", "at", "the", "same", "time", "and", "that", "point", "you", "maybe", "throttling", "yourself", "a", "lot", "NUMBER", "One", "thing", "that", "you", "may", "want", "to", "do", "if", "that", "be", "the", "case", "be", "configure", "the", "managed", "copy", "to", "use", "less", "threads", "by", "passing", "a", "TransferConfig", "LINK", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "TransferConfig", "object", "to", "the", "copy", "method", "NUMBER", "Let", "me", "know", "if", "that", "helps", "NUMBER", "Interesting", "NUMBER", "That", "should", "not", "be", "the", "problem", "then", "NUMBER", "We", "will", "do", "some", "researching", "try", "to", "reproduce", "this", "and", "get", "back", "to", "you", "on", "what", "we", "find", "NUMBER", "The", "one", "thing", "that", "do", "not", "make", "sense", "to", "me", "yet", "be", "if", "only", "CopyObject", "calls", "be", "be", "made", "and", "assuming", "request", "latency", "be", "the", "bottleneck", "in", "the", "transfer", "process", "why", "be", "it", "NUMBER", "x", "worse", "in", "the", "boto", "NUMBER", "version", "than", "the", "boto", "version", "NUMBER", "That", "should", "not", "be", "the", "case", "NUMBER", "At", "worst", "it", "should", "be", "some", "small", "overhead", "NUMBER", "If", "you", "be", "doing", "research", "as", "well", "one", "thing", "that", "I", "would", "probably", "try", "assuming", "I", "could", "reproduce", "it", "be", "try", "to", "use", "the", "client", "NUMBER", "copy_object", "or", "object", "NUMBER", "copy_from", "methods", "NUMBER", "Those", "be", "the", "low", "level", "methods", "and", "do", "not", "have", "any", "managed", "components", "to", "them", "NUMBER", "This", "will", "at", "least", "determine", "if", "it", "be", "an", "issue", "with", "the", "high", "level", "transfer", "methods", "NUMBER", "muhammad", "ammar", "so", "be", "you", "seeing", "copy_object", "on", "the", "client", "be", "much", "faster", "than", "the", "copy_from", "of", "the", "Bucket", "or", "Object", "resource", "I", "wonder", "if", "the", "issue", "be", "that", "there", "be", "some", "extra", "loading", "of", "the", "resource", "that", "be", "happening", "NUMBER", "What", "do", "the", "client", "version", "of", "the", "code", "look", "like", "Thanks", "for", "looking", "into", "this", "NUMBER", "We", "will", "try", "this", "out", "as", "well", "to", "see", "if", "we", "get", "a", "difference", "as", "well", "NUMBER", "One", "way", "to", "look", "at", "what", "may", "be", "going", "on", "be", "to", "use", "boto", "NUMBER", "set_stream_logger", "to", "see", "all", "of", "the", "debug", "logs", "and", "see", "where", "the", "slowness", "may", "be", "come", "from", "NUMBER", "You", "can", "also", "filter", "it", "by", "package", "so", "I", "would", "suggest", "also", "replacing", "the", "empty", "string", "with", "botocore", "and", "boto", "NUMBER", "to", "get", "more", "filtered", "debug", "logs", "NUMBER", "Can", "you", "provide", "a", "code", "snippet", "of", "what", "you", "did", "My", "guess", "be", "that", "you", "be", "instantiating", "a", "Message", "object", "directly", "with", "ReceiptHandle", "but", "it", "be", "impossible", "to", "get", "all", "of", "the", "more", "specific", "data", "like", "message_attributes", "about", "the", "message", "from", "just", "the", "ReceiptHandle", "because", "there", "be", "no", "API", "for", "that", "in", "SQS", "NUMBER", "You", "may", "have", "to", "find", "a", "different", "way", "of", "storing", "and", "retrieving", "the", "data", "from", "message", "than", "instantiating", "the", "Message", "directly", "and", "accessing", "a", "property", "NUMBER", "Makes", "sense", "NUMBER", "Good", "to", "hear", "you", "get", "something", "work", "NUMBER", "Closing", "issue", "NUMBER", "I", "can", "confirm", "the", "issue", "NUMBER", "It", "only", "affect", "seekable", "nonmultipart", "uploads", "NUMBER", "You", "should", "be", "able", "to", "upload", "from", "a", "seeked", "location", "NUMBER", "The", "referenced", "PR", "should", "fix", "your", "issue", "as", "I", "can", "confirm", "it", "now", "works", "for", "me", "with", "that", "PR", "NUMBER", "So", "boto", "NUMBER", "uses", "s", "NUMBER", "transfer", "under", "the", "hood", "it", "s", "essentially", "a", "simplified", "version", "of", "the", "functionality", "expose", "in", "s", "NUMBER", "transfer", "NUMBER", "So", "to", "pick", "up", "the", "fix", "you", "need", "to", "use", "the", "PR", "branch", "that", "has", "the", "fix", "for", "s", "NUMBER", "transfer", "NUMBER", "Good", "to", "hear", "NUMBER", "Once", "the", "PR", "gets", "merge", "it", "will", "be", "include", "in", "a", "subsequent", "release", "of", "s", "NUMBER", "transfer", "and", "therefore", "fix", "in", "boto", "NUMBER", "My", "guess", "be", "that", "this", "will", "happen", "sometime", "next", "week", "hopefully", "the", "early", "part", "of", "the", "week", "NUMBER", "Can", "you", "give", "an", "example", "workflow", "of", "how", "you", "would", "use", "this", "A", "code", "snippet", "of", "what", "your", "ideal", "workflow", "would", "be", "awesome", "NUMBER", "Closing", "issue", "NUMBER", "Let", "s", "track", "this", "in", "the", "issue", "that", "jamesls", "linked", "NUMBER", "This", "be", "something", "that", "would", "need", "to", "be", "expose", "upstream", "in", "the", "service", "in", "order", "for", "us", "to", "pick", "the", "functionality", "up", "NUMBER", "I", "would", "suggest", "sending", "a", "feature", "request", "to", "the", "forums", "LINK", "NUMBER", "for", "this", "NUMBER", "Is", "there", "a", "reason", "you", "be", "not", "trying", "to", "instantiate", "it", "directly", "py", "iam", "NUMBER", "Role", "myrolename", "Role", "names", "be", "unique", "so", "there", "should", "be", "no", "reason", "to", "need", "to", "have", "to", "use", "the", "collections", "interface", "to", "find", "your", "role", "if", "you", "already", "know", "the", "name", "NUMBER", "To", "the", "filtering", "comment", "be", "you", "referring", "to", "something", "like", "these", "pages", "from", "botocore", "LINK", "filtering", "results", "LINK", "filtering", "results", "with", "jmespath", "I", "would", "recommend", "ask", "this", "question", "on", "the", "elastic", "beanstalk", "forums", "LINK", "NUMBER", "They", "will", "be", "much", "more", "knowledgeable", "of", "how", "to", "set", "this", "up", "appropriately", "through", "their", "API", "NUMBER", "ship", "I", "have", "the", "same", "question", "as", "Varriount", "because", "we", "do", "not", "support", "asyncio", "as", "shown", "in", "this", "open", "issue", "LINK", "Yep", "calling", "put_bucket_notification_configuration", "will", "overwrite", "any", "exist", "event", "notifications", "NUMBER", "If", "you", "want", "to", "get", "an", "update", "that", "do", "not", "overrite", "the", "exist", "events", "you", "need", "to", "call", "get_bucket_notification_configuration", "update", "the", "list", "of", "event", "notifications", "and", "send", "that", "to", "put_bucket_notification_configuration", "NUMBER", "This", "be", "a", "pretty", "common", "workflow", "NUMBER", "If", "you", "have", "any", "more", "question", "lets", "move", "the", "conversation", "to", "gitter", "LINK", "Closing", "issue", "NUMBER", "But", "the", "Python", "type", "be", "still", "a", "string", "right", "Being", "able", "to", "document", "which", "values", "be", "JSON", "strings", "be", "something", "we", "would", "like", "to", "add", "but", "we", "do", "not", "have", "enough", "metadata", "in", "our", "models", "to", "be", "able", "to", "consistently", "document", "these", "NUMBER", "Right", "NUMBER", "Here", "be", "the", "location", "in", "the", "code", "where", "this", "happens", "LINK", "L", "NUMBER", "We", "will", "look", "to", "get", "the", "documentation", "update", "to", "reflect", "the", "type", "to", "be", "a", "loaded", "json", "NUMBER", "It", "looks", "like", "you", "need", "to", "update", "your", "version", "of", "botocore", "the", "underlying", "library", "of", "boto", "NUMBER", "which", "has", "support", "for", "it", "LINK", "ECS", "NUMBER", "Client", "NUMBER", "register_task_definition", "You", "should", "be", "able", "to", "run", "pip", "install", "boto", "NUMBER", "upgrade", "to", "pick", "up", "the", "feature", "NUMBER", "Let", "us", "know", "if", "that", "helps", "NUMBER", "I", "would", "recommend", "ask", "this", "as", "a", "feature", "request", "in", "the", "AWS", "Developer", "Forums", "for", "CodeDeploy", "LINK", "NUMBER", "There", "be", "not", "really", "a", "way", "we", "would", "be", "able", "to", "expose", "it", "client", "side", "NUMBER", "It", "would", "have", "to", "be", "expose", "server", "side", "NUMBER", "Based", "on", "the", "documentation", "LINK", "S", "NUMBER", "Client", "NUMBER", "delete_object", "the", "delete", "marker", "be", "only", "use", "if", "your", "bucket", "be", "version", "NUMBER", "In", "general", "if", "you", "do", "not", "get", "an", "error", "propagated", "from", "the", "client", "call", "then", "the", "request", "was", "successful", "there", "be", "no", "need", "to", "check", "the", "response", "for", "delete_object", "to", "see", "if", "it", "was", "successful", "NUMBER", "Let", "us", "know", "if", "you", "have", "any", "more", "question", "NUMBER", "I", "do", "not", "think", "that", "we", "would", "want", "to", "remove", "debug", "logs", "NUMBER", "They", "come", "in", "handy", "if", "there", "be", "any", "issue", "users", "run", "into", "and", "we", "be", "not", "able", "to", "reproduce", "NUMBER", "Could", "you", "exclude", "these", "log", "by", "add", "a", "filter", "LINK", "filter", "objects", "excluding", "anything", "relate", "to", "s", "NUMBER", "transfer", "Do", "you", "currently", "see", "logs", "for", "botocore", "as", "well", "I", "feel", "that", "botocore", "has", "more", "debug", "logs", "than", "s", "NUMBER", "transfer", "and", "it", "be", "use", "for", "every", "boto", "NUMBER", "call", "NUMBER", "In", "general", "boto", "NUMBER", "tends", "to", "not", "have", "too", "much", "logs", "because", "it", "be", "just", "a", "wrapper", "over", "other", "libraries", "that", "do", "most", "of", "the", "heavy", "lifting", "such", "as", "botocore", "and", "s", "NUMBER", "transfer", "which", "require", "much", "more", "debug", "logging", "to", "help", "understand", "what", "may", "be", "happening", "NUMBER", "Interesting", "NUMBER", "How", "be", "you", "enabling", "debug", "logging", "then", "in", "your", "application", "Are", "you", "use", "boto", "NUMBER", "set_stream_logger", "or", "something", "else", "If", "you", "use", "boto", "NUMBER", "set_stream_logger", "you", "will", "only", "get", "debug", "logs", "from", "boto", "NUMBER", "and", "none", "of", "the", "underlying", "libraries", "NUMBER", "So", "how", "be", "you", "enabling", "logging", "in", "your", "application", "then", "Ahh", "I", "see", "what", "be", "happening", "NUMBER", "We", "need", "to", "add", "a", "null", "handler", "default", "in", "s", "NUMBER", "transfer", "NUMBER", "I", "sent", "a", "PR", "to", "fix", "this", "in", "the", "s", "NUMBER", "transfer", "library", "NUMBER", "I", "do", "not", "think", "it", "be", "possible", "to", "use", "presigned", "url", "s", "with", "STS", "NUMBER", "Presigned", "url", "s", "be", "really", "dependent", "on", "if", "the", "service", "allows", "for", "them", "such", "as", "S", "NUMBER", "So", "I", "would", "recommend", "just", "calling", "the", "client", "method", "for", "now", "NUMBER", "Is", "there", "any", "particular", "reason", "you", "be", "trying", "to", "use", "a", "presigned", "url", "for", "this", "Ahh", "I", "know", "what", "be", "going", "wrong", "now", "NUMBER", "It", "be", "because", "you", "be", "probably", "sending", "a", "GET", "with", "the", "presigned", "url", "instead", "of", "a", "POST", "NUMBER", "If", "I", "use", "your", "code", "and", "curl", "I", "get", "it", "work", "correctly", "curl", "request", "POST", "LINK", "GetCallerIdentity", "Version", "NUMBER", "NUMBER", "NUMBER", "X", "Amz", "Algorithm", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "X", "Amz", "Expires", "NUMBER", "X", "Amz", "Credential", "xxxxxxxxxxx", "NUMBER", "F", "NUMBER", "NUMBER", "Fus", "east", "NUMBER", "NUMBER", "Fsts", "NUMBER", "Faws", "NUMBER", "_request", "X", "Amz", "SignedHeaders", "host", "X", "Amz", "Date", "NUMBER", "T", "NUMBER", "Z", "X", "Amz", "Signature", "edb", "NUMBER", "c", "NUMBER", "dbefc", "NUMBER", "fa", "NUMBER", "afba", "NUMBER", "b", "NUMBER", "cccf", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "be", "NUMBER", "TAG", "TAG", "TAG", "arn", "aws", "iam", "xxxxxxxxx", "user", "kyleknap", "TAG", "TAG", "xxxxxxxxx", "TAG", "TAG", "xxxxxxxxxx", "TAG", "TAG", "TAG", "TAG", "NUMBER", "ac", "NUMBER", "dad", "NUMBER", "e", "NUMBER", "be", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "TAG", "TAG", "TAG", "Does", "that", "help", "you", "With", "presigned", "url", "s", "there", "be", "not", "too", "much", "documentation", "out", "there", "other", "than", "with", "s", "NUMBER", "So", "sometimes", "it", "requires", "a", "little", "bit", "of", "experimentation", "i", "NUMBER", "e", "NUMBER", "switching", "from", "POST", "to", "GET", "to", "get", "it", "to", "work", "NUMBER", "In", "the", "past", "I", "have", "find", "it", "pretty", "service", "specific", "on", "if", "and", "too", "what", "extent", "they", "support", "presigned", "url", "s", "NUMBER", "I", "think", "that", "this", "be", "the", "method", "you", "need", "to", "call", "LINK", "AutoScaling", "NUMBER", "Client", "NUMBER", "put_scheduled_update_group_action", "to", "create", "a", "scheduled", "action", "NUMBER", "Let", "us", "know", "if", "that", "helps", "NUMBER", "I", "be", "unsure", "if", "even", "if", "we", "fix", "that", "runtime", "error", "that", "presigned", "urls", "will", "work", "for", "kinesis", "NUMBER", "Presigning", "be", "dependent", "on", "if", "the", "service", "allows", "for", "it", "NUMBER", "But", "I", "can", "confirm", "the", "runtime", "error", "and", "traceback", "you", "be", "seeing", "NUMBER", "We", "may", "want", "to", "remove", "it", "from", "the", "documentation", "NUMBER", "How", "were", "you", "trying", "to", "use", "the", "generate", "presigned", "url", "A", "example", "with", "redacted", "auth", "would", "be", "great", "NUMBER", "Looks", "good", "to", "me", "ship", "Here", "be", "the", "relevant", "part", "in", "the", "service", "model", "proving", "that", "it", "should", "be", "populated", "LINK", "NUMBER", "NUMBER", "service", "NUMBER", "json", "L", "NUMBER", "L", "NUMBER", "cc", "jamesls", "JordonPhillips", "for", "additional", "review", "It", "can", "be", "confusing", "to", "customers", "when", "they", "see", "unreleased", "features", "in", "the", "documentation", "NUMBER", "ReadTheDocs", "allows", "users", "to", "switch", "to", "viewing", "the", "stable", "version", "but", "latest", "be", "the", "default", "NUMBER", "This", "include", "a", "link", "to", "the", "stable", "version", "in", "the", "readme", "for", "discoverability", "and", "alters", "hard", "code", "links", "to", "refer", "to", "the", "stable", "version", "NUMBER", "cc", "jamesls", "kyleknap", "There", "be", "no", "more", "PR", "s", "needed", "in", "porting", "s", "NUMBER", "transfer", "into", "boto", "NUMBER", "so", "I", "decided", "to", "go", "ahead", "and", "send", "the", "PR", "merge", "the", "branch", "into", "develop", "NUMBER", "There", "be", "going", "to", "be", "a", "good", "amount", "of", "issue", "that", "be", "going", "to", "be", "fix", "with", "this", "PR", "but", "I", "be", "going", "to", "close", "them", "out", "one", "by", "one", "once", "this", "gets", "into", "a", "boto", "NUMBER", "release", "NUMBER", "cc", "jamesls", "JordonPhillips", "So", "I", "did", "some", "final", "performance", "test", "for", "sanity", "sake", "NUMBER", "I", "find", "with", "these", "change", "boto", "NUMBER", "be", "about", "the", "same", "in", "terms", "of", "speed", "memory", "CPU", "usage", "for", "single", "uploads", "and", "downloads", "when", "compared", "to", "the", "CLI", "NUMBER", "Comparing", "to", "the", "current", "boto", "NUMBER", "develop", "branch", "the", "performance", "for", "uploads", "be", "roughly", "the", "same", "but", "with", "these", "change", "boto", "NUMBER", "be", "much", "faster", "for", "downloads", "thanks", "to", "the", "configuration", "update", "which", "was", "expected", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "question", "NUMBER", "Dang", "that", "s", "a", "lot", "of", "commit", "___________________________________________________________________", "___", "NUMBER", "___", "NUMBER", "__", "NUMBER", "__", "NUMBER", "__", "NUMBER", "NUMBER", "_", "NUMBER", "NUMBER", "X", "___", "___", "NUMBER", "NUMBER", "__", "_", "____", "__", "NUMBER", "NUMBER", "____", "_", "_", "_", "_", "_X__", "_", "_", "X", "_", "_", "__", "___", "_", "_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_", "X", "___", "_", "_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "__", "_", "____", "o", "___", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_", "_", "__", "_", "____", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "o", "o", "_", "_", "o", "NUMBER", "NUMBER", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "o", "o", "oould", "you", "add", "a", "changelog", "entry", "for", "this", "You", "can", "do", "that", "by", "run", "scripts", "new", "change", "Making", "change", "as", "discussed", "in", "this", "merge", "PR", "LINK", "Changes", "include", "Moving", "upgrading", "note", "to", "the", "docs", "Updating", "some", "of", "the", "word", "Mentioning", "the", "upgrade", "note", "in", "the", "changelog", "cc", "jamesls", "JordonPhillips", "jamesls", "I", "add", "the", "upgrading", "note", "to", "the", "migration", "section", "NUMBER", "This", "proves", "to", "significantly", "improve", "speed", "where", "the", "download", "bandwidth", "speed", "be", "high", "NUMBER", "The", "value", "appears", "to", "be", "a", "sweet", "spot", "with", "the", "other", "default", "configuration", "values", "as", "the", "io", "queue", "be", "no", "longer", "the", "bottleneck", "under", "these", "sorts", "of", "environments", "NUMBER", "This", "be", "pretty", "much", "a", "supplement", "to", "LINK", "cc", "jamesls", "JordonPhillips", "Add", "upgrading", "note", "in", "preparation", "of", "merge", "in", "the", "recent", "s", "NUMBER", "change", "NUMBER", "Seemed", "like", "a", "general", "place", "for", "having", "these", "would", "be", "useful", "for", "the", "future", "NUMBER", "The", "idea", "structure", "was", "taken", "from", "the", "Ruby", "SDK", "s", "upgrading", "guide", "LINK", "sdk", "ruby", "blob", "master", "UPGRADING", "NUMBER", "md", "which", "seems", "to", "work", "well", "for", "them", "NUMBER", "I", "also", "add", "a", "miss", "changelog", "entry", "that", "I", "notice", "that", "I", "forgot", "to", "include", "for", "io_chunksize", "NUMBER", "cc", "jamesls", "JordonPhillips", "I", "will", "send", "a", "PR", "to", "add", "this", "as", "that", "be", "a", "good", "point", "NUMBER", "Could", "I", "please", "see", "a", "sample", "of", "the", "request", "you", "re", "sending", "as", "well", "as", "a", "debug", "log", "You", "can", "enable", "debug", "logging", "with", "boto", "NUMBER", "set_stream_logger", "botocore", "NUMBER", "Pedroyev", "You", "might", "ask", "about", "the", "console", "issue", "in", "the", "service", "forums", "LINK", "NUMBER", "hopefully", "they", "can", "get", "it", "fix", "NUMBER", "I", "think", "it", "would", "be", "worth", "having", "a", "conversation", "with", "your", "IT", "department", "about", "that", "NUMBER", "I", "imagine", "they", "want", "SSL", "NUMBER", "You", "can", "disable", "SSL", "with", "the", "use_ssl", "parameter", "docs", "LINK", "boto", "NUMBER", "session", "NUMBER", "Session", "NUMBER", "client", "NUMBER", "Closing", "due", "to", "inactivity", "My", "understanding", "be", "that", "testpypi", "be", "intended", "to", "be", "use", "by", "package", "authors", "to", "test", "deployment", "to", "pypi", "before", "_actually_", "deploying", "to", "pypi", "NUMBER", "Thus", "since", "it", "isn", "t", "intended", "to", "be", "consumed", "by", "end", "users", "I", "don", "t", "see", "a", "reason", "to", "keep", "it", "update", "NUMBER", "Either", "way", "we", "don", "t", "actually", "own", "the", "package", "it", "seems", "to", "be", "owned", "by", "a", "user", "call", "gene", "NUMBER", "wood", "It", "seems", "like", "this", "has", "something", "to", "do", "with", "url", "encoding", "since", "all", "those", "params", "go", "into", "the", "url", "or", "into", "headers", "NUMBER", "Spaces", "should", "get", "translated", "as", "NUMBER", "though", "so", "that", "s", "a", "bit", "strange", "NUMBER", "Could", "you", "post", "a", "debug", "log", "so", "I", "can", "get", "a", "better", "idea", "of", "whats", "going", "on", "under", "the", "hood", "as", "I", "be", "unable", "to", "reproduce", "You", "can", "enable", "debug", "logging", "with", "boto", "NUMBER", "set_stream_logger", "botocore", "NUMBER", "I", "see", "no", "reason", "why", "not", "NUMBER", "So", "I", "ended", "up", "having", "to", "revert", "this", "since", "it", "breaks", "some", "of", "our", "automation", "NUMBER", "If", "it", "breaks", "us", "it", "probably", "breaks", "some", "of", "our", "customers", "NUMBER", "May", "I", "ask", "why", "you", "aren", "t", "installing", "from", "pip", "normally", "That", "s", "under", "development", "as", "in", "development", "of", "boto", "NUMBER", "We", "could", "make", "that", "clearer", "though", "NUMBER", "This", "be", "very", "important", "for", "environments", "that", "have", "very", "fast", "bandwidth", "and", "slow", "disk", "writes", "because", "if", "the", "io", "chunksize", "be", "too", "small", "it", "starts", "to", "become", "the", "bottleneck", "when", "downloading", "file", "as", "there", "be", "only", "one", "thread", "processing", "these", "io", "writes", "NUMBER", "So", "the", "main", "reason", "that", "I", "want", "to", "expose", "this", "be", "because", "of", "this", "issue", "LINK", "I", "was", "doing", "test", "on", "an", "EC", "NUMBER", "instance", "with", "relatively", "high", "bandwidth", "i", "NUMBER", "e", "NUMBER", "hits", "this", "scenario", "and", "I", "find", "that", "with", "the", "default", "settings", "of", "s", "NUMBER", "transfer", "integrated", "into", "boto", "NUMBER", "boto", "NUMBER", "be", "as", "fast", "as", "the", "version", "of", "boto", "NUMBER", "not", "integrated", "with", "s", "NUMBER", "transfer", "but", "be", "roughly", "NUMBER", "slower", "than", "the", "CLI", "when", "dealing", "with", "relatively", "large", "file", "e", "NUMBER", "g", "NUMBER", "size", "NUMBER", "MB", "NUMBER", "Changing", "the", "io_chunksize", "value", "to", "NUMBER", "MB", "which", "be", "the", "size", "that", "the", "CLI", "uses", "results", "in", "the", "same", "speed", "as", "the", "CLI", "which", "be", "great", "NUMBER", "You", "may", "wonder", "why", "not", "set", "the", "default", "to", "NUMBER", "MB", "but", "that", "be", "not", "ideal", "because", "NUMBER", "Optimizes", "for", "the", "scenario", "of", "very", "fast", "bandwidth", "which", "be", "not", "necessarily", "ideal", "for", "slower", "bandwidth", "or", "be", "memory", "sensitive", "NUMBER", "NUMBER", "It", "destroys", "the", "grainularity", "of", "the", "progress", "callbacks", "NUMBER", "So", "for", "these", "reasons", "I", "be", "suggesting", "that", "we", "expose", "this", "configuration", "option", "for", "users", "to", "optimize", "for", "their", "environment", "instead", "and", "hopefully", "gives", "some", "documentation", "on", "how", "you", "should", "look", "into", "tweaking", "your", "configurations", "NUMBER", "Let", "me", "know", "what", "you", "think", "NUMBER", "cc", "jamesls", "JordonPhillips", "Yeah", "I", "will", "do", "some", "test", "and", "see", "if", "there", "be", "anything", "immediate", "we", "can", "do", "NUMBER", "One", "thing", "that", "I", "be", "afraid", "of", "be", "that", "whatever", "number", "I", "come", "up", "with", "will", "be", "optimized", "to", "the", "EC", "NUMBER", "instance", "type", "I", "be", "work", "with", "NUMBER", "But", "if", "I", "get", "a", "lot", "better", "result", "with", "say", "TAG", "TAG", "sortKeyName", "TAG", "TAG", "TAG", "TAG", "TAG", "sortkeyval", "TAG", "Thanks", "for", "letting", "us", "know", "NUMBER", "I", "ll", "follow", "up", "and", "see", "what", "we", "can", "do", "NUMBER", "shipit", "For", "reference", "I", "believe", "this", "was", "from", "LINK", "get", "credentials", "dynamically", "correct", "shipit", "shipit", "In", "the", "case", "where", "no", "items", "be", "processed", "and", "we", "received", "all", "the", "items", "back", "as", "unprocessed", "key", "the", "next", "put_item", "request", "will", "have", "flush_amount", "NUMBER", "which", "will", "trigger", "an", "error", "NUMBER", "To", "fix", "this", "the", "input_buffer", "be", "always", "sliced", "to", "flush_amount", "before", "the", "batch_write_item", "call", "NUMBER", "Fixes", "NUMBER", "cc", "kyleknap", "JordonPhillips", "shipit", "shipit", "Follow", "up", "from", "previous", "pull", "request", "NUMBER", "cc", "kyleknap", "One", "thing", "to", "keep", "in", "mind", "be", "that", "boto", "NUMBER", "lazily", "loads", "data", "objects", "it", "needs", "so", "the", "first", "time", "you", "create", "a", "request", "it", "will", "create", "the", "necessary", "connection", "and", "other", "objects", "it", "needs", "to", "actually", "make", "a", "request", "NUMBER", "So", "the", "expected", "behavior", "should", "be", "that", "you", "ll", "see", "an", "increase", "on", "the", "_first_", "API", "request", "which", "be", "expected", "because", "it", "s", "lazily", "loading", "the", "necessary", "objects", "NUMBER", "But", "subsequent", "request", "should", "_not_", "see", "any", "memory", "increases", "NUMBER", "Here", "s", "an", "example", "of", "what", "I", "m", "seeing", "NUMBER", "First", "I", "can", "create", "the", "same", "data", "as", "you", "if", "I", "only", "make", "a", "single", "API", "call", "import", "boto", "NUMBER", "client", "boto", "NUMBER", "client", "s", "NUMBER", "profile", "def", "foo", "r", "client", "NUMBER", "get_object", "Bucket", "mybucket", "Key", "key", "contents", "r", "Body", "NUMBER", "read", "return", "contents", "foo", "gives", "Line", "Mem", "usage", "Increment", "Line", "Contents", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "profile", "NUMBER", "def", "foo", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "r", "client", "NUMBER", "get_object", "Bucket", "bucket", "Key", "key", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "contents", "r", "Body", "NUMBER", "read", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "return", "contents", "However", "if", "I", "make", "an", "API", "call", "and", "then", "run", "the", "command", "again", "I", "see", "the", "expected", "results", "import", "boto", "NUMBER", "client", "boto", "NUMBER", "client", "s", "NUMBER", "profile", "def", "foo", "r", "client", "NUMBER", "get_object", "Bucket", "bucket", "Key", "key", "contents", "r", "Body", "NUMBER", "read", "return", "contents", "client", "NUMBER", "get_object", "Bucket", "bucket", "Key", "key", "Body", "NUMBER", "read", "for", "i", "in", "xrange", "NUMBER", "foo", "gives", "Line", "Mem", "usage", "Increment", "Line", "Contents", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "profile", "NUMBER", "def", "foo", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "r", "client", "NUMBER", "get_object", "Bucket", "bucket", "Key", "key", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "contents", "r", "Body", "NUMBER", "read", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "return", "contents", "Even", "bumping", "up", "the", "number", "of", "iterations", "to", "NUMBER", "shows", "roughly", "the", "same", "amount", "Line", "Mem", "usage", "Increment", "Line", "Contents", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "profile", "NUMBER", "def", "foo", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "r", "client", "NUMBER", "get_object", "Bucket", "bucket", "Key", "key", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "contents", "r", "Body", "NUMBER", "read", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "return", "contents", "Can", "you", "show", "the", "output", "you", "get", "use", "the", "second", "script", "that", "makes", "an", "API", "call", "first", "I", "want", "to", "make", "sure", "we", "re", "seeing", "the", "same", "behavior", "NUMBER", "Sounds", "good", "NUMBER", "Let", "us", "know", "if", "you", "see", "any", "other", "issue", "NUMBER", "I", "played", "around", "with", "several", "outlines", "and", "this", "worked", "best", "for", "me", "NUMBER", "The", "outline", "be", "Credentials", "discuss", "various", "credential", "providers", "and", "how", "you", "configure", "them", "Configuration", "all", "env", "vars", "we", "support", "all", "config", "vars", "we", "support", "The", "main", "downside", "be", "that", "there", "s", "some", "overlap", "between", "credentials", "and", "configuration", "but", "users", "be", "typically", "trying", "to", "configure", "credentials", "or", "they", "want", "to", "see", "a", "list", "of", "everything", "that", "you", "can", "configure", "so", "I", "think", "it", "seems", "reasonable", "to", "break", "it", "up", "with", "the", "above", "format", "NUMBER", "Open", "to", "other", "suggestions", "though", "NUMBER", "There", "s", "still", "a", "couple", "miss", "pieces", "but", "I", "d", "like", "to", "get", "this", "initial", "change", "in", "format", "agreed", "on", "first", "NUMBER", "Follow", "up", "pull", "request", "be", "docs", "on", "the", "s", "NUMBER", "configuration", "options", "docs", "for", "assuming", "roles", "Closes", "NUMBER", "cc", "kyleknap", "JordonPhillips", "Can", "you", "clarify", "if", "you", "re", "use", "boto", "or", "boto", "NUMBER", "get_contents_to_file", "be", "from", "boto", "LINK", "but", "this", "repo", "be", "for", "boto", "NUMBER", "If", "you", "be", "use", "boto", "I", "d", "recommend", "giving", "boto", "NUMBER", "a", "try", "NUMBER", "Boto", "NUMBER", "implement", "this", "content", "length", "check", "via", "the", "botocore", "library", "LINK", "L", "NUMBER", "L", "NUMBER", "so", "this", "case", "should", "be", "handle", "for", "you", "automatically", "in", "boto", "NUMBER", "Confirmed", "looks", "like", "a", "regression", "from", "LINK", "We", "ll", "get", "this", "fix", "NUMBER", "This", "has", "be", "release", "in", "botocore", "NUMBER", "You", "just", "need", "to", "update", "the", "version", "of", "botocore", "to", "the", "latest", "version", "to", "pick", "up", "this", "fix", "NUMBER", "This", "handles", "NUMBER", "cases", "They", "ve", "provide", "an", "invalid", "service_name", "They", "ve", "provide", "a", "service", "name", "that", "has", "a", "client", "but", "no", "resource", "They", "ve", "provide", "a", "valid", "service", "name", "but", "an", "invalid", "API", "version", "As", "an", "example", "this", "script", "python", "import", "boto", "NUMBER", "print", "ncase", "NUMBER", "boto", "NUMBER", "resource", "bad", "resource", "name", "Bad", "name", "with", "no", "client", "n", "try", "r", "boto", "NUMBER", "resource", "bad", "resource", "name", "except", "Exception", "as", "e", "print", "str", "e", "print", "ncase", "NUMBER", "boto", "NUMBER", "resource", "firehose", "No", "resource", "but", "has", "client", "n", "try", "r", "boto", "NUMBER", "resource", "firehose", "except", "Exception", "as", "e", "print", "str", "e", "print", "ncase", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "api_version", "bad", "version", "Has", "resource", "client", "but", "bad", "API", "version", "NUMBER", "n", "try", "r", "boto", "NUMBER", "resource", "ec", "NUMBER", "api_version", "bad", "version", "except", "Exception", "as", "e", "print", "str", "e", "produces", "this", "output", "python", "t", "NUMBER", "py", "case", "NUMBER", "boto", "NUMBER", "resource", "bad", "resource", "name", "Bad", "name", "with", "no", "client", "The", "bad", "resource", "name", "resource", "do", "not", "exist", "NUMBER", "The", "available", "resources", "be", "cloudformation", "cloudwatch", "dynamodb", "ec", "NUMBER", "glacier", "iam", "opsworks", "s", "NUMBER", "sns", "sqs", "case", "NUMBER", "boto", "NUMBER", "resource", "firehose", "No", "resource", "but", "has", "client", "The", "firehose", "resource", "do", "not", "exist", "NUMBER", "The", "available", "resources", "be", "cloudformation", "cloudwatch", "dynamodb", "ec", "NUMBER", "glacier", "iam", "opsworks", "s", "NUMBER", "sns", "sqs", "Consider", "use", "a", "boto", "NUMBER", "client", "firehose", "instead", "of", "a", "resource", "for", "firehose", "case", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "api_version", "bad", "version", "Has", "resource", "client", "but", "bad", "API", "version", "NUMBER", "The", "ec", "NUMBER", "resource", "do", "not", "an", "API", "version", "of", "bad", "version", "Valid", "API", "version", "be", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Fixes", "NUMBER", "cc", "kyleknap", "JordonPhillips", "kyleknap", "Ready", "for", "another", "look", "NUMBER", "I", "m", "not", "able", "to", "repro", "NUMBER", "The", "URL", "encoding", "that", "happens", "as", "part", "of", "the", "serialization", "process", "should", "not", "affect", "the", "ListObjects", "result", "NUMBER", "Do", "you", "have", "a", "code", "sample", "you", "can", "share", "Here", "s", "what", "I", "tried", "Bucket", "contents", "aws", "s", "NUMBER", "ls", "bucket", "repro", "C", "us", "west", "NUMBER", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "dd", "NUMBER", "NUMBER", "aa", "NUMBER", "NUMBER", "d", "NUMBER", "fadfd", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "g", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "h", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "i", "Boto", "NUMBER", "code", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "pager", "s", "NUMBER", "get_paginator", "list_objects", "bucket", "bucket", "r", "pager", "NUMBER", "paginate", "Bucket", "bucket", "Prefix", "repro", "C", "us", "west", "NUMBER", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "dd", "NUMBER", "NUMBER", "aa", "NUMBER", "NUMBER", "d", "NUMBER", "fadfd", "NUMBER", "NUMBER", "search", "Contents", "NUMBER", "Key", "for", "key", "in", "r", "print", "key", "Print", "these", "results", "python", "repro", "NUMBER", "py", "repro", "C", "us", "west", "NUMBER", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "dd", "NUMBER", "NUMBER", "aa", "NUMBER", "NUMBER", "d", "NUMBER", "fadfd", "NUMBER", "g", "repro", "C", "us", "west", "NUMBER", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "dd", "NUMBER", "NUMBER", "aa", "NUMBER", "NUMBER", "d", "NUMBER", "fadfd", "NUMBER", "h", "repro", "C", "us", "west", "NUMBER", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "dd", "NUMBER", "NUMBER", "aa", "NUMBER", "NUMBER", "d", "NUMBER", "fadfd", "NUMBER", "i", "shipit", "shipit", "shipit", "shipit", "shipit", "kyleknap", "should", "we", "close", "this", "out", "for", "the", "time", "be", "shipit", "When", "I", "run", "the", "create_build", "method", "I", "get", "the", "storage", "location", "in", "the", "StorageLocation", "element", "NUMBER", "I", "can", "also", "see", "the", "parameter", "come", "over", "the", "wire", "when", "I", "set", "boto", "NUMBER", "set_stream_logger", "botocore", "NUMBER", "Could", "you", "show", "me", "what", "the", "response", "that", "the", "server", "be", "sending", "boto", "NUMBER", "You", "can", "run", "something", "like", "this", "to", "figure", "it", "out", "py", "gamelift_client", "boto", "NUMBER", "client", "gamelift", "aws_access_key_id", "AWS_ACCESS_KEY", "aws_secret_access_key", "AWS_SECRET_KEY", "region_name", "GAMELIFT_REGION", "boto", "NUMBER", "set_stream_logger", "botocore", "create_build_result", "gamelift_client", "NUMBER", "create_build", "Name", "some", "build", "name", "Version", "NUMBER", "This", "issue", "should", "now", "be", "fix", "with", "the", "release", "of", "boto", "NUMBER", "NUMBER", "I", "would", "recommend", "upgrading", "to", "that", "NUMBER", "We", "even", "have", "test", "in", "place", "in", "the", "underlying", "library", "s", "NUMBER", "transfer", "NUMBER", "To", "ensure", "that", "quick", "exits", "happen", "LINK", "_upload", "NUMBER", "py", "L", "NUMBER", "Testing", "locally", "I", "be", "no", "longer", "able", "to", "see", "this", "NUMBER", "Resolving", "issue", "NUMBER", "With", "the", "release", "of", "boto", "NUMBER", "NUMBER", "we", "have", "add", "support", "for", "nonseekable", "streams", "for", "uploads", "LINK", "uploads", "NUMBER", "Please", "use", "one", "of", "the", "upload_fileobj", "methods", "to", "do", "so", "NUMBER", "I", "do", "not", "think", "the", "put", "method", "will", "ever", "support", "nonseekable", "file", "as", "the", "ability", "to", "seek", "be", "needed", "for", "this", "lower", "level", "method", "to", "calculate", "md", "NUMBER", "s", "and", "sha", "NUMBER", "checksums", "NUMBER", "Plus", "the", "upload_fileobj", "method", "be", "multithreaded", "and", "manages", "multipart", "uploads", "for", "you", "automatically", "so", "that", "be", "much", "more", "convenient", "than", "the", "put", "method", "NUMBER", "Resolving", "issue", "NUMBER", "Just", "want", "to", "follow", "up", "here", "it", "looks", "like", "there", "s", "nothing", "in", "the", "debug", "logs", "that", "suggest", "any", "error", "be", "occurring", "NUMBER", "It", "also", "looks", "like", "the", "debug", "logs", "be", "incomplete", "NUMBER", "Afterwards", "the", "last", "line", "you", "have", "above", "it", "should", "show", "the", "response", "body", "which", "will", "contain", "an", "XML", "response", "NUMBER", "We", "d", "need", "to", "see", "that", "XML", "document", "to", "understand", "if", "the", "server", "be", "returning", "the", "data", "and", "boto", "NUMBER", "be", "not", "parsing", "it", "properly", "or", "if", "the", "service", "be", "not", "returning", "the", "data", "at", "all", "NUMBER", "Looks", "good", "NUMBER", "Just", "had", "a", "comment", "on", "the", "test", "where", "we", "should", "try", "to", "use", "the", "stubber", "instead", "of", "mock", "for", "clients", "NUMBER", "Thanks", "ship", "Also", "notice", "we", "have", "not", "be", "update", "the", "CHANGELOG", "so", "I", "update", "that", "as", "well", "NUMBER", "This", "specifically", "ensures", "you", "pick", "up", "this", "merge", "functionality", "LINK", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "This", "was", "address", "server", "side", "NUMBER", "I", "confirmed", "by", "run", "the", "sample", "code", "again", "which", "results", "in", "a", "successful", "call", "NUMBER", "The", "service", "doc", "page", "you", "linked", "now", "also", "has", "examples", "use", "that", "value", "NUMBER", "I", "m", "closing", "this", "out", "but", "feel", "free", "to", "re", "open", "if", "the", "issue", "pops", "up", "again", "NUMBER", "ship", "ship", "I", "believe", "I", "see", "the", "issue", "NUMBER", "Working", "on", "a", "fix", "NUMBER", "The", "ProvisionedThroughputExceededException", "be", "be", "retried", "LINK", "_retry", "NUMBER", "json", "L", "NUMBER", "L", "NUMBER", "NUMBER", "What", "might", "be", "happening", "be", "that", "all", "the", "NUMBER", "retry", "attempts", "be", "be", "exhausted", "at", "which", "point", "we", "ll", "propagate", "the", "ProvisionedThroughputExceededException", "exception", "NUMBER", "I", "think", "we", "may", "need", "to", "allow", "the", "user", "to", "override", "the", "max", "number", "of", "retry", "attempts", "so", "users", "can", "set", "it", "to", "a", "higher", "number", "as", "needed", "NUMBER", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "Looks", "good", "NUMBER", "ship", "ship", "The", "environment", "variable", "be", "false", "if", "it", "be", "a", "PR", "NUMBER", "However", "that", "equates", "to", "true", "as", "it", "be", "interpreted", "as", "a", "string", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "I", "think", "you", "need", "to", "remove", "the", "MesageStructure", "json", "part", "NUMBER", "This", "be", "only", "needed", "if", "you", "want", "differing", "message", "be", "publish", "based", "on", "the", "protocol", "according", "to", "the", "MessageStructure", "description", "NUMBER", "Let", "me", "know", "if", "that", "helps", "NUMBER", "Closing", "NUMBER", "Please", "reopen", "or", "comment", "if", "you", "have", "any", "more", "question", "NUMBER", "Yeah", "that", "be", "unfortunate", "NUMBER", "It", "looks", "like", "that", "this", "an", "oversight", "when", "modeling", "the", "API", "NUMBER", "I", "think", "we", "could", "fix", "this", "by", "make", "Filters", "an", "alias", "for", "Filter", "and", "be", "able", "to", "accept", "both", "to", "maintain", "backwards", "compatibility", "NUMBER", "Looking", "over", "more", "of", "the", "EC", "NUMBER", "model", "there", "be", "a", "couple", "more", "places", "that", "I", "find", "it", "in", "describe_hosts", "and", "describe_flow_logs", "There", "seems", "to", "be", "a", "reoccurring", "theme", "where", "we", "need", "to", "alias", "argument", "for", "consistency", "naming", "collision", "reasons", "NUMBER", "Closing", "this", "issue", "in", "favor", "of", "the", "general", "issue", "boto", "botocore", "NUMBER", "Let", "s", "track", "progress", "there", "NUMBER", "This", "be", "an", "error", "come", "the", "service", "NUMBER", "So", "it", "should", "affect", "both", "boto", "NUMBER", "and", "the", "CLI", "NUMBER", "Here", "be", "an", "example", "of", "this", "from", "the", "CLI", "aws", "ecs", "create", "service", "service", "name", "ecs", "simple", "service", "task", "definition", "sleep", "NUMBER", "desired", "count", "NUMBER", "role", "myrole", "cluster", "arn", "aws", "ecs", "us", "east", "NUMBER", "NUMBER", "cluster", "default", "A", "client", "error", "InvalidParameterException", "occur", "when", "calling", "the", "CreateService", "operation", "A", "role", "was", "pass", "but", "no", "load", "balancers", "were", "present", "NUMBER", "Appears", "to", "be", "the", "same", "error", "that", "you", "be", "get", "with", "boto", "NUMBER", "which", "makes", "sense", "in", "terms", "of", "consistency", "NUMBER", "Based", "on", "the", "documentation", "it", "appears", "that", "the", "only", "reason", "you", "would", "use", "a", "role", "be", "for", "granting", "permissions", "to", "your", "load", "balancers", "NUMBER", "Is", "there", "be", "particular", "use", "case", "for", "add", "a", "role", "when", "there", "be", "no", "load", "balancers", "to", "grant", "permission", "to", "Makes", "sense", "NUMBER", "We", "will", "try", "to", "get", "the", "upstream", "source", "update", "to", "get", "the", "boto", "NUMBER", "docs", "update", "NUMBER", "Fixes", "LINK", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "That", "be", "annoying", "that", "we", "cannot", "fix", "this", "NUMBER", "I", "wish", "the", "tags", "property", "was", "a", "reference", "to", "a", "collection", "of", "tags", "NUMBER", "Otherwise", "fix", "looks", "appropriate", "NUMBER", "I", "did", "have", "a", "suggestion", "on", "how", "we", "add", "it", "though", "that", "I", "think", "would", "be", "good", "to", "explore", "NUMBER", "Looks", "good", "NUMBER", "ship", "I", "like", "that", "the", "docstring", "idea", "worked", "out", "NUMBER", "It", "will", "be", "a", "lot", "easier", "to", "add", "custom", "methods", "that", "need", "to", "be", "add", "for", "compatibility", "reasons", "and", "can", "be", "represented", "in", "resource", "model", "terms", "NUMBER", "I", "do", "want", "jamesls", "opinion", "on", "add", "extra", "argument", "to", "the", "creating", "resource", "class", "event", "NUMBER", "I", "could", "see", "people", "use", "them", "so", "I", "be", "fine", "with", "them", "NUMBER", "Looks", "good", "NUMBER", "Just", "had", "those", "two", "comments", "to", "help", "cleanup", "the", "interface", "speed", "NUMBER", "Thanks", "ship", "once", "test", "pass", "NUMBER", "Interesting", "the", "CLI", "and", "boto", "NUMBER", "use", "roughly", "the", "same", "credential", "provider", "NUMBER", "So", "that", "should", "work", "NUMBER", "Could", "you", "do", "the", "following", "things", "to", "help", "debug", "this", "NUMBER", "Run", "configure", "list", "in", "the", "CLI", "to", "see", "what", "credentials", "it", "be", "use", "aws", "configure", "list", "Name", "Value", "Type", "Location", "profile", "TAG", "None", "None", "access_key", "shared", "credentials", "file", "secret_key", "shared", "credentials", "file", "region", "us", "east", "NUMBER", "config", "file", "NUMBER", "aws", "config", "NUMBER", "What", "version", "of", "botocore", "and", "boto", "NUMBER", "be", "you", "use", "Cool", "NUMBER", "Glad", "to", "hear", "it", "be", "now", "work", "NUMBER", "Thanks", "Merging", "NUMBER", "This", "be", "a", "bug", "NUMBER", "from", "be", "a", "reserved", "word", "in", "python", "NUMBER", "We", "will", "have", "have", "to", "rename", "the", "argument", "to", "avoid", "this", "naming", "collision", "NUMBER", "True", "that", "be", "a", "valid", "workaround", "but", "we", "will", "still", "look", "into", "make", "an", "alias", "for", "the", "from", "argument", "NUMBER", "There", "seems", "to", "be", "a", "reoccurring", "theme", "where", "we", "need", "to", "alias", "argument", "for", "consistency", "naming", "collision", "reasons", "NUMBER", "Closing", "this", "issue", "in", "favor", "of", "the", "general", "issue", "LINK", "Let", "s", "track", "progress", "there", "NUMBER", "Was", "receiving", "question", "on", "it", "and", "it", "was", "not", "completely", "obvious", "on", "how", "to", "do", "it", "with", "cryptography", "NUMBER", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "Cool", "NUMBER", "Updated", "that", "NUMBER", "I", "be", "able", "to", "reproduce", "this", "NUMBER", "Note", "you", "can", "only", "reproduce", "this", "with", "python", "NUMBER", "More", "research", "needs", "to", "be", "do", "to", "see", "if", "it", "be", "an", "issue", "with", "our", "underlying", "http", "library", "or", "it", "be", "something", "with", "our", "implementation", "NUMBER", "I", "have", "find", "a", "few", "relate", "python", "bug", "but", "not", "sure", "if", "those", "fit", "the", "bill", "especially", "on", "Python", "NUMBER", "I", "be", "still", "seeing", "them", "LINK", "LINK", "You", "do", "not", "see", "this", "problem", "with", "the", "CLI", "because", "it", "will", "automatically", "do", "pagination", "for", "you", "if", "it", "be", "available", "NUMBER", "In", "boto", "NUMBER", "through", "its", "client", "interface", "you", "will", "have", "to", "use", "paginators", "LINK", "AutoScaling", "NUMBER", "Paginator", "NUMBER", "DescribeAutoScalingGroups", "NUMBER", "Here", "be", "a", "snippet", "on", "how", "to", "do", "this", "py", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "client", "boto", "NUMBER", "client", "autoscaling", "In", "NUMBER", "paginator", "client", "NUMBER", "get_paginator", "describe_auto_scaling_groups", "In", "NUMBER", "for", "page", "in", "paginator", "NUMBER", "paginate", "NUMBER", "print", "page", "NUMBER", "u", "AutoScalingGroups", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "c", "NUMBER", "c", "NUMBER", "ac", "Then", "here", "be", "how", "the", "CLI", "collects", "all", "of", "the", "group", "into", "one", "list", "py", "In", "NUMBER", "print", "paginator", "NUMBER", "paginate", "NUMBER", "build_full_result", "u", "AutoScalingGroups", "Let", "me", "know", "if", "you", "have", "any", "more", "question", "or", "comments", "Closing", "NUMBER", "Please", "reopen", "if", "you", "have", "anymore", "question", "The", "ability", "to", "upload", "file", "from", "file", "like", "objects", "be", "now", "support", "in", "boto", "NUMBER", "NUMBER", "I", "would", "recommend", "reading", "LINK", "uploads", "and", "use", "one", "of", "the", "upload_fileobj", "methods", "to", "upload", "file", "like", "objects", "NUMBER", "I", "also", "notice", "that", "there", "were", "discussions", "of", "implement", "OSUtils", "so", "it", "would", "be", "good", "to", "take", "a", "look", "at", "the", "upgrading", "note", "LINK", "before", "upgrading", "as", "functionality", "may", "have", "change", "based", "on", "assumptions", "made", "in", "custom", "implementations", "of", "OSUtils", "NUMBER", "Otherwise", "resolving", "issue", "as", "the", "functionality", "be", "now", "available", "NUMBER", "Sidhesh", "telsiz", "It", "do", "do", "chunking", "NUMBER", "Here", "LINK", "L", "NUMBER", "be", "the", "underlying", "parameter", "that", "controls", "the", "max", "number", "of", "chunks", "to", "ensure", "you", "do", "not", "run", "out", "memory", "NUMBER", "Essentially", "what", "the", "library", "do", "be", "read", "from", "the", "input", "stream", "one", "chunk", "NUMBER", "MB", "at", "a", "time", "and", "waits", "to", "read", "any", "more", "chunks", "to", "be", "delegated", "to", "worker", "threads", "that", "do", "the", "upload", "part", "if", "the", "current", "in", "memory", "chunks", "be", "uploaded", "be", "at", "its", "maximum", "NUMBER", "Sidhesh", "telsiz", "So", "for", "the", "example", "in", "the", "docs", "it", "be", "just", "showing", "how", "to", "use", "upload_fileobj", "with", "a", "file", "like", "object", "created", "from", "use", "open", "NUMBER", "It", "be", "not", "a", "requirement", "that", "the", "file", "like", "object", "was", "created", "with", "open", "and", "I", "think", "that", "be", "what", "be", "cause", "your", "error", "as", "the", "file", "do", "not", "exist", "on", "disk", "NUMBER", "upload_fileobj", "should", "work", "with", "any", "file", "like", "object", "that", "has", "a", "read", "and", "produces", "binary", "so", "you", "do", "not", "necessarily", "need", "to", "use", "open", "or", "the", "with", "context", "manager", "NUMBER", "Refactored", "the", "ServiceDocumenter", "to", "subclass", "from", "botocore", "s", "ServiceDocumenter", "to", "share", "some", "reused", "logic", "NUMBER", "Here", "be", "how", "it", "looks", "NUMBER", "It", "be", "exactly", "the", "same", "as", "botocore", "s", "shared", "examples", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "be", "LINK", "afa", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "aefee", "NUMBER", "png", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "ship", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "Fixes", "LINK", "It", "add", "a", "start_restore", "on", "Object", "and", "ObjectSummary", "resources", "NUMBER", "Note", "that", "the", "method", "be", "not", "call", "restore", "because", "the", "Object", "resource", "already", "has", "a", "restore", "attribute", "NUMBER", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "jamesls", "I", "would", "be", "fine", "with", "doc", "NUMBER", "be", "add", "as", "a", "check", "in", "Travis", "NUMBER", "Thanks", "Mitch", "If", "you", "add", "in", "a", "quick", "test", "for", "this", "addition", "it", "will", "be", "good", "to", "merge", "NUMBER", "Makes", "sense", "NUMBER", "Marking", "as", "feature", "request", "NUMBER", "I", "think", "it", "be", "the", "same", "cause", "as", "this", "issue", "LINK", "Let", "me", "know", "if", "strapping", "mock", "down", "to", "NUMBER", "LINK", "L", "NUMBER", "fix", "it", "NUMBER", "Makes", "sense", "NUMBER", "It", "be", "unfortunate", "that", "the", "parameter", "for", "the", "cloudsearch", "domain", "API", "shadows", "python", "s", "return", "keyword", "NUMBER", "We", "will", "look", "into", "add", "something", "to", "the", "documentation", "to", "clear", "this", "up", "NUMBER", "With", "the", "release", "of", "boto", "NUMBER", "NUMBER", "we", "introduce", "a", "managed", "copy", "method", "that", "handles", "the", "copying", "of", "multipart", "and", "nonmultipart", "objects", "LINK", "copies", "NUMBER", "Each", "of", "these", "methods", "make", "use", "of", "CopySource", "be", "a", "dictionary", "consisting", "of", "a", "bucket", "key", "and", "optional", "version", "id", "NUMBER", "Using", "this", "dictionary", "we", "will", "create", "the", "proper", "CopySource", "key", "for", "you", "so", "you", "do", "not", "worry", "how", "to", "format", "or", "url", "encode", "the", "string", "anymore", "NUMBER", "Therefore", "resolving", "the", "issue", "NUMBER", "Looks", "good", "NUMBER", "Had", "some", "small", "comments", "NUMBER", "Another", "comment", "that", "I", "have", "be", "make", "sure", "you", "update", "the", "setup", "NUMBER", "py", "to", "include", "the", "examples", "under", "package_data", "so", "they", "get", "include", "in", "installation", "LINK", "L", "NUMBER", "It", "would", "be", "sort", "of", "simiiar", "to", "what", "we", "do", "for", "the", "CLI", "LINK", "cli", "blob", "develop", "setup", "NUMBER", "py", "L", "NUMBER", "LGTM", "ship", "Fixes", "LINK", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "Makes", "sense", "NUMBER", "We", "will", "have", "to", "make", "sure", "we", "do", "not", "break", "anything", "by", "laxing", "this", "but", "seems", "reasonable", "NUMBER", "Marking", "as", "feature", "request", "NUMBER", "It", "was", "not", "consistent", "with", "what", "be", "in", "the", "setup", "NUMBER", "py", "and", "setup", "NUMBER", "cfg", "NUMBER", "Noticed", "this", "inconsistency", "when", "reviewing", "LINK", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "Thanks", "Alright", "here", "be", "roughly", "what", "I", "would", "do", "to", "update", "the", "metadata", "for", "an", "object", "that", "be", "in", "s", "NUMBER", "that", "requires", "a", "multipart", "upload", "NUMBER", "Note", "that", "for", "sizes", "larger", "than", "NUMBER", "GB", "there", "will", "need", "to", "be", "multiple", "UploadPart", "and", "copy_from", "needed", "with", "the", "CopySourceRange", "paramter", "to", "be", "able", "to", "generalize", "it", "more", "for", "copies", "greater", "than", "NUMBER", "GB", "py", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "my_object", "s", "NUMBER", "Object", "mybucketfoo", "bar", "metadata", "foo", "bar", "print", "Initiating", "multipart", "upload", "multipart_upload", "my_object", "NUMBER", "initiate_multipart_upload", "Metadata", "metadata", "part_copy", "multipart_upload", "NUMBER", "Part", "NUMBER", "print", "Beginning", "to", "copy", "response", "part_copy", "NUMBER", "copy_from", "CopySource", "mybucketfoo", "bar", "part_etag", "response", "CopyPartResult", "ETag", "print", "Completing", "the", "upload", "updated_object", "multipart_upload", "NUMBER", "complete", "MultipartUpload", "Parts", "ETag", "part_etag", "PartNumber", "NUMBER", "print", "updated_object", "NUMBER", "metadata", "Let", "me", "know", "if", "this", "helps", "or", "if", "you", "have", "anymore", "question", "NUMBER", "I", "do", "not", "think", "there", "be", "anyway", "to", "get", "around", "the", "copy", "time", "from", "make", "the", "request", "NUMBER", "The", "best", "option", "you", "have", "be", "to", "make", "the", "part", "copies", "multithreaded", "to", "reduce", "time", "for", "the", "lambda", "function", "NUMBER", "The", "good", "news", "be", "with", "the", "release", "of", "boto", "NUMBER", "NUMBER", "we", "have", "release", "a", "new", "managed", "copy", "method", "that", "will", "do", "multipart", "copies", "autmatically", "and", "do", "it", "in", "parallel", "LINK", "copies", "NUMBER", "So", "you", "should", "see", "a", "speed", "up", "in", "use", "this", "as", "you", "no", "longer", "will", "just", "have", "to", "loop", "through", "these", "NUMBER", "So", "I", "would", "recommend", "use", "that", "method", "especially", "for", "multipart", "copies", "NUMBER", "Resolving", "issue", "as", "multipart", "copy", "sample", "be", "no", "longer", "needed", "with", "the", "managed", "copy", "method", "NUMBER", "Noted", "NUMBER", "We", "have", "an", "issue", "track", "this", "LINK", "We", "do", "not", "have", "immediate", "plan", "to", "support", "it", "but", "let", "s", "use", "the", "issue", "I", "linked", "as", "the", "canonical", "source", "for", "track", "the", "feature", "NUMBER", "Looks", "good", "NUMBER", "Had", "the", "same", "comment", "as", "James", "NUMBER", "ship", "Thanks", "Hmm", "NUMBER", "I", "m", "seeing", "an", "issue", "as", "well", "but", "not", "the", "same", "error", "as", "you", "be", "get", "NUMBER", "I", "be", "get", "instead", "AttributeError", "ec", "NUMBER", "instancesCollection", "object", "has", "no", "attribute", "iterator", "when", "I", "try", "to", "chain", "NUMBER", "Looks", "like", "a", "regression", "though", "NUMBER", "If", "you", "install", "version", "NUMBER", "you", "should", "not", "see", "the", "problem", "anymore", "NUMBER", "This", "be", "just", "a", "note", "for", "myself", "The", "code", "breaks", "on", "double", "chaining", "because", "in", "the", "CollectionFactory", "class", "we", "assume", "that", "we", "always", "proxy", "through", "the", "CollectionManager", "class", "but", "in", "double", "chaining", "we", "actually", "store", "a", "runtime", "generate", "resource", "class", "based", "from", "CollectionResource", "that", "be", "use", "to", "instantiate", "the", "collection", "but", "those", "collections", "be", "use", "the", "methods", "that", "were", "attached", "to", "the", "CollectionManager", "class", "that", "we", "generate", "at", "run", "time", "which", "even", "though", "they", "have", "a", "different", "interface", "they", "differ", "in", "implentation", "i", "NUMBER", "e", "NUMBER", "no", "iterator", "method", "exist", "NUMBER", "This", "should", "not", "be", "hard", "to", "fix", "NUMBER", "First", "of", "all", "I", "would", "recommend", "not", "creating", "the", "ObjectSummary", "resource", "directly", "from", "the", "ServiceResource", "instead", "use", "the", "Object", "resource", "as", "it", "provides", "more", "functionality", "than", "ObjectSummary", "NUMBER", "ObjectSummary", "be", "just", "an", "artifact", "of", "the", "fact", "that", "the", "ListObjects", "operation", "returns", "less", "information", "about", "an", "individual", "object", "than", "HeadObject", "NUMBER", "However", "your", "initial", "issue", "raises", "an", "interesting", "issue", "where", "from", "the", "service", "resource", "you", "can", "instantiate", "any", "resource", "but", "you", "may", "not", "load", "them", "if", "they", "do", "not", "have", "a", "load", "method", "defined", "NUMBER", "If", "the", "subresources", "have", "actions", "though", "you", "do", "not", "have", "to", "load", "them", "you", "can", "just", "call", "its", "action", "and", "everything", "will", "be", "fine", "NUMBER", "So", "I", "think", "for", "this", "case", "though", "we", "be", "going", "to", "have", "to", "add", "a", "load", "method", "to", "the", "ObjectSummary", "resource", "even", "though", "these", "resources", "be", "really", "only", "instantiated", "on", "ListObjects", "operations", "NUMBER", "That", "error", "be", "be", "throw", "from", "DynamoDB", "NUMBER", "So", "for", "query", "you", "always", "have", "to", "provide", "some", "expression", "to", "query", "with", "NUMBER", "KeyConditionExpression", "be", "what", "boto", "NUMBER", "uses", "and", "KeyCondition", "be", "a", "legacy", "parameter", "and", "be", "maintained", "for", "backward", "compatibility", "NUMBER", "But", "in", "the", "end", "you", "have", "to", "provide", "either", "of", "them", "NUMBER", "I", "could", "not", "find", "any", "interface", "for", "sorting", "without", "specify", "some", "query", "NUMBER", "Would", "it", "be", "possible", "to", "create", "a", "query", "that", "would", "return", "all", "of", "the", "items", "in", "your", "table", "and", "that", "way", "it", "sorts", "all", "of", "your", "items", "as", "well", "The", "docs", "cannot", "mark", "either", "of", "them", "as", "a", "required", "in", "the", "docs", "because", "if", "a", "parameter", "be", "marked", "as", "required", "it", "will", "be", "a", "hard", "fail", "if", "the", "parameter", "be", "not", "even", "part", "of", "the", "request", "it", "do", "not", "matter", "what", "other", "parameters", "were", "provide", "NUMBER", "So", "for", "example", "If", "KeyCondition", "be", "marked", "as", "required", "then", "users", "would", "not", "be", "able", "to", "just", "only", "provide", "KeyConditionExpression", "which", "be", "recommend", "because", "KeyCondition", "be", "not", "in", "the", "request", "NUMBER", "If", "KeyConditionExpression", "was", "marked", "as", "required", "that", "would", "break", "users", "previously", "use", "only", "KeyCondition", "because", "they", "now", "have", "to", "provide", "KeyConditionExpression", "instead", "NUMBER", "Then", "you", "cannot", "mark", "both", "as", "required", "because", "that", "would", "cause", "conflicting", "queries", "or", "be", "redundant", "NUMBER", "Yeah", "so", "if", "you", "have", "a", "partition", "key", "and", "a", "sort", "key", "you", "would", "have", "to", "provide", "the", "partition", "key", "in", "the", "query", "as", "that", "be", "required", "when", "querying", "NUMBER", "You", "can", "also", "provide", "a", "sort", "key", "as", "well", "though", "to", "narrow", "down", "the", "results", "returned", "back", "and", "this", "has", "more", "comparisons", "available", "to", "it", "than", "the", "partition", "key", "s", "equality", "comparison", "NUMBER", "Here", "be", "more", "specifics", "in", "the", "docs", "about", "what", "you", "must", "provide", "for", "queries", "LINK", "QueryAndScan", "NUMBER", "Query", "NUMBER", "To", "get", "this", "work", "I", "think", "you", "will", "need", "to", "rely", "on", "querying", "over", "each", "category", "as", "the", "partition", "key", "can", "only", "rely", "on", "the", "eq", "comparison", "NUMBER", "Let", "us", "know", "if", "you", "have", "anymore", "question", "NUMBER", "Yep", "no", "problem", "NUMBER", "Glad", "to", "help", "NUMBER", "Interesting", "I", "think", "it", "has", "to", "do", "how", "sphinx", "be", "interpreting", "the", "carriage", "return", "NUMBER", "I", "will", "see", "what", "I", "can", "do", "to", "fix", "this", "NUMBER", "Yes", "you", "need", "to", "do", "this", "by", "with", "CopyObject", "API", "operation", "NUMBER", "I", "think", "the", "best", "option", "would", "be", "to", "add", "some", "sample", "code", "in", "the", "documentation", "on", "how", "to", "this", "NUMBER", "I", "be", "not", "sure", "if", "add", "a", "convenience", "method", "because", "get", "an", "exact", "copy", "of", "an", "object", "but", "with", "just", "change", "metadata", "would", "require", "multiple", "calls", "which", "the", "user", "may", "not", "be", "aware", "of", "NUMBER", "It", "would", "be", "best", "to", "just", "completely", "document", "the", "process", "so", "users", "be", "aware", "of", "all", "calls", "be", "make", "and", "be", "able", "to", "pick", "what", "calls", "they", "may", "or", "may", "not", "want", "NUMBER", "Thoughts", "With", "the", "release", "of", "boto", "NUMBER", "NUMBER", "we", "have", "support", "for", "managed", "copies", "make", "easier", "to", "replace", "metadata", "no", "matter", "the", "size", "of", "the", "object", "NUMBER", "In", "the", "user", "guide", "there", "be", "an", "example", "of", "how", "to", "replace", "the", "metadata", "LINK", "copies", "NUMBER", "Resolving", "issue", "NUMBER", "Yeah", "we", "have", "gotten", "this", "feedback", "before", "for", "instances", "LINK", "It", "be", "unfortunate", "result", "of", "ec", "NUMBER", "responding", "with", "no", "Tags", "key", "in", "the", "response", "and", "as", "a", "result", "this", "gets", "translated", "to", "None", "in", "boto", "NUMBER", "If", "ec", "NUMBER", "returned", "the", "Tags", "key", "but", "with", "an", "empty", "list", "than", "it", "will", "work", "as", "you", "expect", "NUMBER", "So", "we", "will", "have", "to", "look", "at", "customizing", "this", "NUMBER", "I", "be", "going", "to", "close", "this", "issue", "in", "favor", "of", "the", "issue", "that", "I", "linked", "as", "they", "both", "require", "the", "same", "customization", "NUMBER", "Let", "s", "follow", "the", "progress", "there", "NUMBER", "That", "s", "interesting", "because", "the", "CLI", "and", "boto", "NUMBER", "be", "use", "the", "exact", "same", "code", "path", "from", "botocore", "NUMBER", "Could", "you", "provide", "a", "debug", "log", "from", "your", "script", "boto", "NUMBER", "set_stream_logger", "botocore", "Thanks", "for", "report", "we", "ll", "look", "into", "add", "it", "Yeah", "so", "this", "be", "a", "little", "tricky", "NUMBER", "So", "for", "the", "objects", "collection", "on", "the", "bucket", "resource", "it", "will", "return", "ObjectSummary", "LINK", "objectsummary", "resources", "which", "do", "not", "have", "the", "restore", "property", "NUMBER", "There", "be", "a", "difference", "between", "ObjectSummary", "and", "Object", "resources", "because", "ObjectSummaries", "be", "loaded", "from", "different", "s", "NUMBER", "operations", "NUMBER", "ObjectSummary", "be", "loaded", "from", "a", "ListObjects", "which", "has", "less", "information", "than", "the", "HeadObject", "operation", "which", "be", "use", "to", "load", "the", "Object", "resource", "NUMBER", "To", "get", "the", "restore", "attribute", "value", "you", "would", "need", "to", "do", "something", "like", "this", "as", "the", "HeadObject", "operation", "be", "the", "only", "api", "method", "that", "can", "get", "this", "information", "py", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "glacier_test", "for", "obj_sum", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "obj", "s", "NUMBER", "Object", "obj_sum", "NUMBER", "bucket_name", "obj_sum", "NUMBER", "key", "storage_class", "obj", "NUMBER", "orage_class", "restore", "obj", "NUMBER", "restore", "Furthermore", "the", "restore", "attribute", "just", "provides", "information", "on", "the", "status", "of", "a", "glacier", "restoration", "NUMBER", "It", "do", "not", "actually", "restore", "the", "object", "NUMBER", "To", "initiate", "the", "restoration", "process", "you", "need", "to", "access", "the", "client", "s", "restore_object", "LINK", "S", "NUMBER", "Client", "NUMBER", "restore_object", "method", "NUMBER", "So", "something", "like", "this", "should", "work", "py", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "glacier_test", "for", "obj_sum", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "resp", "bucket", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "restore_object", "Bucket", "obj_sum", "NUMBER", "bucket_name", "Key", "obj_sum", "NUMBER", "key", "RestoreRequest", "Days", "NUMBER", "Once", "you", "actual", "send", "the", "restore", "request", "you", "will", "notice", "that", "the", "restore", "attribute", "will", "no", "longer", "be", "None", "py", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "glacier_test", "for", "obj_sum", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "obj", "s", "NUMBER", "Object", "obj_sum", "NUMBER", "bucket_name", "obj_sum", "NUMBER", "key", "storage_class", "obj", "NUMBER", "orage_class", "restore", "obj", "NUMBER", "restore", "print", "obj", "NUMBER", "key", "obj", "NUMBER", "orage_class", "obj", "NUMBER", "restore", "Output", "test", "NUMBER", "txt", "GLACIER", "ongoing", "request", "true", "testfile", "GLACIER", "ongoing", "request", "true", "To", "know", "when", "the", "object", "be", "ready", "to", "download", "the", "value", "will", "be", "ongoing", "request", "true", "NUMBER", "So", "you", "will", "need", "to", "reload", "the", "object", "to", "see", "if", "it", "be", "ready", "to", "download", "NUMBER", "As", "a", "note", "to", "myself", "based", "on", "my", "walkthrough", "it", "seems", "that", "it", "would", "be", "good", "if", "we", "add", "the", "following", "to", "boto", "NUMBER", "NUMBER", "Documentation", "on", "how", "to", "restore", "glacier", "objects", "NUMBER", "Waiters", "to", "pull", "for", "when", "a", "glacier", "object", "be", "ready", "to", "be", "downloaded", "NUMBER", "Possibly", "add", "the", "restore", "method", "to", "the", "Object", "resource", "so", "we", "do", "not", "have", "to", "drop", "down", "to", "the", "client", "to", "restore", "the", "object", "NUMBER", "dduleep", "Let", "me", "know", "what", "you", "think", "of", "these", "suggestions", "NUMBER", "Yeah", "I", "think", "that", "documentation", "would", "be", "good", "for", "this", "NUMBER", "Not", "sure", "if", "force", "method", "be", "the", "way", "to", "go", "here", "NUMBER", "I", "much", "rather", "have", "waiter", "expose", "for", "this", "on", "the", "resource", "as", "well", "as", "it", "would", "be", "more", "explicit", "of", "what", "be", "going", "on", "NUMBER", "So", "I", "did", "some", "researching", "on", "the", "waiter", "implementation", "for", "waiting", "until", "a", "s", "NUMBER", "object", "be", "restored", "and", "I", "came", "to", "the", "conclusion", "that", "add", "a", "waiter", "implementation", "be", "not", "the", "best", "approach", "NUMBER", "It", "would", "requires", "pulling", "of", "state", "for", "roughly", "NUMBER", "to", "NUMBER", "hours", "to", "see", "if", "a", "restoration", "be", "complete", "NUMBER", "In", "addition", "for", "each", "pull", "of", "state", "a", "HeadObject", "request", "would", "be", "needed", "and", "in", "between", "each", "call", "would", "require", "practically", "a", "sleeping", "for", "tens", "of", "minutes", "NUMBER", "This", "makes", "the", "implementation", "pretty", "inefficient", "in", "terms", "of", "time", "and", "cost", "NUMBER", "The", "better", "implementation", "would", "be", "to", "expose", "a", "SNS", "notfication", "event", "for", "glacier", "restorations", "NUMBER", "There", "be", "already", "a", "concept", "in", "s", "NUMBER", "via", "bucket", "notifications", "LINK", "We", "will", "talk", "with", "S", "NUMBER", "to", "see", "if", "they", "could", "expose", "such", "a", "feature", "NUMBER", "Otherwise", "I", "think", "my", "PR", "address", "the", "other", "points", "that", "I", "listed", "NUMBER", "Yeah", "I", "have", "feeling", "it", "be", "exactly", "what", "rayluo", "linked", "where", "you", "be", "either", "setting", "a", "custom", "ca", "bundle", "or", "you", "be", "use", "a", "version", "of", "certify", "which", "be", "not", "a", "dependency", "of", "boto", "NUMBER", "that", "has", "a", "broken", "certificate", "validation", "when", "communicating", "with", "s", "NUMBER", "endpoints", "NUMBER", "There", "be", "a", "thread", "that", "explains", "this", "more", "in", "the", "CLI", "repository", "LINK", "cli", "issue", "NUMBER", "Let", "us", "know", "NUMBER", "certifi", "be", "not", "a", "dependency", "but", "if", "it", "be", "install", "in", "the", "same", "python", "environment", "as", "boto", "NUMBER", "or", "the", "CLI", "our", "underlying", "http", "library", "request", "urllib", "NUMBER", "will", "use", "certifi", "if", "it", "notices", "it", "be", "available", "NUMBER", "My", "guess", "the", "reason", "you", "did", "not", "see", "it", "on", "the", "CLI", "be", "that", "you", "have", "it", "install", "in", "a", "different", "environment", "than", "boto", "NUMBER", "whether", "its", "a", "different", "virtualenv", "or", "through", "a", "bundled", "installer", "NUMBER", "If", "you", "install", "the", "CLI", "in", "the", "same", "environment", "as", "boto", "NUMBER", "my", "guess", "be", "that", "you", "will", "see", "the", "same", "issue", "NUMBER", "Glad", "to", "here", "that", "you", "get", "this", "work", "NUMBER", "Closing", "issue", "NUMBER", "If", "you", "don", "t", "mind", "be", "a", "bit", "indirect", "you", "can", "get", "some", "of", "this", "information", "from", "Cloudwatch", "as", "they", "introduce", "some", "storage", "metrics", "LINK", "s", "NUMBER", "update", "delete", "notifications", "better", "filters", "bucket", "metrics", "a", "few", "months", "ago", "NUMBER", "The", "catch", "be", "that", "it", "doesn", "t", "appear", "to", "support", "glacier", "or", "at", "least", "you", "cannot", "specify", "glacier", "explicitly", "NUMBER", "I", "ll", "show", "you", "an", "example", "of", "what", "the", "current", "state", "of", "affairs", "looks", "like", "at", "any", "rate", "python", "import", "boto", "NUMBER", "from", "datetime", "import", "datetime", "timedelta", "bucket_name", "BUCKET", "NAME", "cloudwatch", "boto", "NUMBER", "client", "cloudwatch", "response", "cloudwatch", "NUMBER", "get_metric_statistics", "Namespace", "AWS", "S", "NUMBER", "MetricName", "BucketSizeBytes", "Dimensions", "Name", "BucketName", "Value", "bucket_name", "Name", "StorageType", "Value", "StandardStorage", "StartTime", "datetime", "NUMBER", "now", "timedelta", "days", "NUMBER", "EndTime", "datetime", "NUMBER", "now", "Period", "NUMBER", "Statistics", "Average", "bucket_size_bytes", "response", "Datapoints", "NUMBER", "Average", "print", "bucket_size_bytes", "Fixes", "LINK", "I", "would", "also", "be", "fine", "with", "bringing", "back", "the", "requirement", "NUMBER", "txt", "file", "that", "we", "use", "to", "have", "instead", "of", "directly", "write", "futures", "into", "the", "tox", "NUMBER", "ini", "file", "NUMBER", "I", "pick", "this", "because", "we", "really", "do", "not", "use", "tox", "to", "often", "in", "our", "test", "and", "seem", "kind", "of", "awkward", "to", "have", "a", "requirements", "NUMBER", "txt", "lying", "around", "that", "was", "only", "use", "for", "tox", "NUMBER", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "Maybe", "I", "do", "not", "use", "tox", "to", "often", "NUMBER", "Let", "me", "see", "if", "I", "can", "get", "it", "to", "work", "NUMBER", "Yeah", "I", "really", "hope", "we", "can", "run", "the", "ci", "scripts", "in", "tox", "NUMBER", "It", "would", "be", "much", "more", "consistent", "Yeah", "I", "get", "it", "work", "use", "our", "ci", "scripts", "NUMBER", "Simplifies", "it", "a", "lot", "NUMBER", "Be", "push", "it", "up", "soon", "once", "all", "of", "the", "test", "pass", "NUMBER", "jamesls", "mtdowling", "I", "update", "the", "tox", "NUMBER", "ini", "file", "to", "use", "the", "ci", "scripts", "yep", "seem", "good", "ship", "Yeah", "I", "do", "not", "think", "there", "was", "a", "way", "to", "run", "the", "install", "script", "in", "deps", "NUMBER", "It", "seems", "to", "depend", "on", "installing", "with", "pip", "which", "the", "script", "uses", "but", "cannot", "be", "directly", "use", "on", "the", "scripts", "NUMBER", "So", "boto", "NUMBER", "do", "not", "have", "official", "support", "for", "Eucalyptus", "NUMBER", "Some", "operations", "may", "work", "because", "Eucalyptus", "has", "similar", "APIs", "to", "AWS", "but", "nothing", "be", "guaranteed", "NUMBER", "Unfortunately", "I", "be", "not", "super", "familiar", "with", "the", "Eucalyptus", "API", "NUMBER", "So", "I", "be", "not", "exactly", "sure", "how", "the", "Eucalyptus", "cli", "command", "converts", "to", "a", "boto", "NUMBER", "call", "NUMBER", "Would", "it", "be", "possible", "to", "get", "a", "log", "of", "what", "that", "Euclayptus", "cli", "be", "sending", "over", "the", "wire", "I", "may", "be", "able", "to", "convert", "it", "to", "a", "boto", "NUMBER", "call", "NUMBER", "Yeah", "we", "can", "get", "this", "update", "NUMBER", "There", "have", "be", "a", "fair", "amount", "of", "question", "about", "use", "API", "Gateway", "in", "boto", "NUMBER", "and", "other", "SDKs", "and", "tool", "as", "well", "and", "most", "of", "the", "question", "could", "have", "be", "answered", "from", "better", "documentation", "NUMBER", "This", "issue", "be", "to", "track", "suggestions", "to", "on", "how", "to", "improve", "the", "API", "Gateway", "documentation", "NUMBER", "Please", "provide", "spots", "in", "the", "documentation", "that", "you", "may", "have", "find", "unclear", "and", "any", "suggestions", "you", "may", "have", "NUMBER", "One", "suggestion", "was", "improve", "documentation", "for", "integrationHttpMethod", "LINK", "issuecomment", "NUMBER", "Thanks", "NUMBER", "We", "will", "take", "a", "look", "at", "it", "NUMBER", "May", "take", "some", "time", "to", "go", "through", "it", "as", "multipart", "copies", "can", "get", "tricky", "NUMBER", "But", "I", "multipart", "multithreaded", "copies", "would", "be", "a", "good", "addition", "to", "boto", "NUMBER", "as", "the", "AWS", "CLI", "has", "that", "functionality", "as", "well", "NUMBER", "With", "the", "release", "of", "NUMBER", "of", "boto", "NUMBER", "we", "decided", "to", "go", "with", "a", "different", "approach", "where", "the", "implementation", "of", "the", "managed", "copy", "exists", "in", "the", "s", "NUMBER", "transfer", "package", "that", "be", "now", "shared", "with", "the", "CLI", "and", "boto", "NUMBER", "Closing", "out", "PR", "as", "managed", "copies", "be", "now", "implement", "LINK", "copies", "NUMBER", "Thanks", "again", "for", "the", "contribution", "Very", "neat", "NUMBER", "We", "will", "take", "a", "look", "at", "it", "NUMBER", "Just", "want", "to", "give", "an", "update", "here", "NUMBER", "With", "the", "release", "of", "version", "NUMBER", "we", "add", "support", "for", "managed", "copies", "NUMBER", "Here", "be", "the", "user", "guide", "for", "how", "to", "use", "the", "managed", "copy", "methods", "LINK", "copies", "NUMBER", "So", "I", "would", "recommend", "trying", "that", "out", "NUMBER", "Resolving", "issue", "NUMBER", "I", "be", "not", "able", "to", "reproduce", "py", "In", "NUMBER", "default_vpc_instance", "ec", "NUMBER", "_resource", "NUMBER", "Vpc", "vpc", "myid", "In", "NUMBER", "new_security_group", "default_vpc_instance", "NUMBER", "create_security_group", "Description", "foo", "GroupName", "mysecurity", "What", "version", "of", "boto", "NUMBER", "and", "botocore", "be", "you", "use", "Also", "could", "I", "get", "debug", "logs", "for", "that", "call", "you", "be", "make", "You", "can", "do", "so", "be", "setting", "boto", "NUMBER", "set_stream_logger", "botocore", "right", "before", "you", "make", "the", "call", "NUMBER", "So", "doing", "an", "in", "memory", "stream", "of", "the", "zip", "file", "be", "not", "possible", "NUMBER", "The", "closest", "I", "get", "was", "having", "this", "logic", "but", "the", "stream", "we", "get", "from", "s", "NUMBER", "be", "not", "seekable", "so", "you", "cannot", "feed", "that", "into", "the", "ZipFile", "object", "py", "try", "response", "s", "NUMBER", "get_object", "Bucket", "bucket", "Key", "key", "s", "NUMBER", "_object", "response", "Body", "zippedfile", "zip", "s", "NUMBER", "_object", "namelist", "zippedfile", "NUMBER", "namelist", "for", "filename", "in", "namelist", "with", "zippedfile", "NUMBER", "open", "filename", "as", "f", "s", "NUMBER", "put_object", "Bucket", "dump_bucket", "Key", "filename", "Body", "f", "except", "Exception", "as", "e", "print", "e", "print", "Error", "get", "object", "from", "bucket", "NUMBER", "Make", "sure", "they", "exist", "and", "your", "bucket", "be", "in", "the", "same", "region", "as", "this", "function", "NUMBER", "NUMBER", "format", "key", "bucket", "raise", "e", "After", "looking", "at", "your", "code", "to", "lessen", "memory", "consumption", "you", "could", "avoid", "reading", "it", "all", "in", "memory", "by", "not", "calling", "the", "data", "zfile", "NUMBER", "read", "filename", "NUMBER", "You", "could", "possibly", "instead", "have", "logic", "such", "as", "py", "namelist", "zippedfile", "NUMBER", "namelist", "for", "filename", "in", "namelist", "with", "zippedfile", "NUMBER", "open", "filename", "as", "f", "s", "NUMBER", "put_object", "Bucket", "dump_bucket", "Key", "filename", "Body", "f", "Note", "that", "this", "will", "improve", "memory", "consumption", "but", "it", "may", "take", "longer", "to", "upload", "because", "this", "be", "a", "single", "threaded", "upload", "NUMBER", "Another", "thing", "that", "I", "be", "curious", "on", "be", "if", "you", "be", "downloading", "NUMBER", "GB", "of", "data", "would", "you", "run", "out", "of", "disk", "space", "in", "lambda", "I", "was", "looking", "at", "the", "Lambda", "documentation", "and", "it", "seem", "to", "indicate", "that", "you", "only", "have", "NUMBER", "MB", "of", "disk", "NUMBER", "That", "be", "why", "in", "my", "initial", "attempt", "I", "tried", "to", "avoid", "use", "download_file", "because", "that", "saves", "it", "all", "to", "disk", "assuming", "the", "file", "we", "be", "downloading", "be", "greater", "than", "NUMBER", "MB", "NUMBER", "Let", "me", "know", "if", "any", "of", "these", "suggestions", "help", "NUMBER", "Thanks", "Merging", "NUMBER", "Thanks", "for", "the", "PR", "NUMBER", "Looks", "like", "the", "test", "relate", "to", "documentation", "be", "fail", "NUMBER", "Not", "exactly", "sure", "why", "after", "taking", "a", "quick", "look", "NUMBER", "We", "have", "do", "preliminary", "test", "with", "NUMBER", "and", "it", "seems", "most", "functionality", "be", "fine", "but", "we", "will", "have", "to", "make", "sure", "we", "get", "all", "of", "these", "test", "and", "integration", "test", "to", "pass", "as", "well", "NUMBER", "Also", "I", "think", "botocore", "will", "need", "to", "have", "official", "python", "NUMBER", "support", "as", "well", "because", "most", "of", "the", "functionality", "of", "boto", "NUMBER", "lives", "in", "botocore", "NUMBER", "There", "be", "no", "functionality", "for", "max", "bandwidth", "NUMBER", "In", "terms", "automatic", "throttling", "it", "means", "that", "it", "will", "do", "exponential", "backoff", "retry", "logic", "if", "request", "start", "fail", "due", "to", "throttling", "relate", "issue", "i", "NUMBER", "e", "NUMBER", "read", "timeouts", "NUMBER", "The", "best", "option", "you", "have", "as", "of", "now", "be", "setting", "the", "max_concurrency", "on", "TransferConfig", "object", "LINK", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "TransferConfig", "NUMBER", "This", "will", "ensure", "that", "only", "a", "set", "amount", "of", "request", "be", "be", "made", "at", "a", "time", "NUMBER", "Let", "me", "know", "if", "this", "helps", "NUMBER", "Otherwise", "I", "can", "mark", "it", "as", "a", "feature", "to", "be", "able", "to", "specify", "a", "max", "bandwidth", "rate", "NUMBER", "We", "have", "the", "same", "request", "in", "the", "AWS", "CLI", "NUMBER", "Yeah", "that", "s", "strange", "NUMBER", "This", "be", "an", "error", "response", "come", "from", "the", "S", "NUMBER", "Most", "services", "though", "do", "not", "throw", "an", "error", "though", "if", "the", "list", "be", "empty", "they", "just", "return", "an", "empty", "list", "NUMBER", "We", "may", "have", "to", "add", "a", "customization", "here", "based", "on", "S", "NUMBER", "s", "behavior", "but", "we", "still", "need", "to", "do", "more", "research", "on", "what", "the", "right", "approach", "will", "be", "NUMBER", "Yeah", "I", "tried", "out", "the", "other", "SDKs", "that", "use", "resources", "like", "the", "ruby", "sdk", "and", "they", "have", "the", "same", "issue", "as", "boto", "so", "we", "will", "need", "to", "figure", "what", "the", "story", "will", "be", "rb", "NUMBER", "NUMBER", "require", "aws", "sdk", "true", "NUMBER", "NUMBER", "s", "NUMBER", "Aws", "S", "NUMBER", "Resource", "NUMBER", "new", "region", "us", "east", "NUMBER", "TAG", "NUMBER", "NUMBER", "bucket", "s", "NUMBER", "bucket", "mybucketfoo", "TAG", "NUMBER", "NUMBER", "tagging", "bucket", "NUMBER", "tagging", "TAG", "NUMBER", "NUMBER", "tagging", "NUMBER", "tag_set", "Aws", "S", "NUMBER", "Errors", "NoSuchTagSet", "The", "TagSet", "do", "not", "exist", "I", "think", "returning", "an", "empty", "list", "should", "be", "the", "behavior", "NUMBER", "So", "for", "lambda", "I", "believe", "that", "you", "need", "to", "specify", "the", "type", "as", "AWS", "NUMBER", "When", "I", "run", "a", "get_integration", "on", "an", "API", "that", "I", "have", "it", "looks", "as", "so", "py", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "c", "boto", "NUMBER", "client", "apigateway", "In", "NUMBER", "c", "NUMBER", "get_integration", "restApiId", "mvbkclx", "NUMBER", "xd", "resourceId", "hq", "NUMBER", "h", "NUMBER", "p", "httpMethod", "GET", "Out", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "acb", "NUMBER", "NUMBER", "fbd", "NUMBER", "e", "cacheKeyParameters", "cacheNamespace", "hq", "NUMBER", "h", "NUMBER", "p", "credentials", "arn", "aws", "iam", "NUMBER", "user", "kyleknap", "httpMethod", "GET", "type", "AWS", "uri", "arn", "aws", "apigateway", "us", "east", "NUMBER", "lambda", "path", "NUMBER", "NUMBER", "NUMBER", "function", "arn", "aws", "lambda", "us", "east", "NUMBER", "NUMBER", "function", "CreateThumbnail", "NUMBER", "To", "reverse", "this", "and", "make", "a", "put_integration", "call", "all", "I", "would", "have", "to", "do", "be", "run", "py", "In", "NUMBER", "c", "NUMBER", "put_integration", "restApiId", "mvbkclx", "NUMBER", "xd", "resourceId", "hq", "NUMBER", "h", "NUMBER", "p", "httpMethod", "GET", "integrationHttpMethod", "GET", "uri", "arn", "aws", "apigateway", "us", "east", "NUMBER", "lambda", "path", "NUMBER", "NUMBER", "NUMBER", "function", "arn", "aws", "lambda", "us", "east", "NUMBER", "NUMBER", "function", "CreateThumbnail", "NUMBER", "type", "AWS", "credentials", "arn", "aws", "iam", "NUMBER", "user", "kyleknap", "Out", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "ff", "NUMBER", "f", "NUMBER", "a", "NUMBER", "cacheNamespace", "hq", "NUMBER", "h", "NUMBER", "p", "credentials", "arn", "aws", "iam", "NUMBER", "user", "kyleknap", "httpMethod", "GET", "type", "AWS", "uri", "arn", "aws", "apigateway", "us", "east", "NUMBER", "lambda", "path", "NUMBER", "NUMBER", "NUMBER", "function", "arn", "aws", "lambda", "us", "east", "NUMBER", "NUMBER", "function", "CreateThumbnail", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "more", "question", "NUMBER", "Cool", "NUMBER", "Glad", "you", "get", "it", "work", "NUMBER", "I", "opened", "up", "another", "issue", "to", "track", "improvement", "to", "documentation", "LINK", "and", "linked", "your", "comment", "because", "I", "run", "into", "the", "same", "issue", "when", "I", "first", "tried", "use", "apigateway", "NUMBER", "Closing", "this", "issue", "as", "you", "were", "able", "to", "get", "lambda", "support", "to", "work", "with", "apigateway", "NUMBER", "Interesting", "NUMBER", "Is", "it", "possible", "we", "could", "get", "a", "debug", "log", "of", "this", "It", "would", "be", "nice", "to", "see", "if", "the", "RequestID", "be", "completely", "miss", "or", "just", "misplaced", "on", "the", "error", "response", "NUMBER", "To", "get", "debug", "logs", "all", "you", "would", "have", "to", "do", "be", "add", "boto", "NUMBER", "set_stream_logger", "botocore", "to", "right", "before", "you", "make", "the", "ec", "NUMBER", "call", "NUMBER", "Alright", "we", "will", "need", "to", "investigate", "it", "then", "NUMBER", "Are", "you", "just", "use", "a", "DescribeInstances", "operation", "or", "the", "instances", "collection", "on", "the", "service", "resource", "Thanks", "NUMBER", "Out", "of", "curiosity", "do", "you", "have", "a", "lot", "of", "instances", "to", "iterate", "over", "in", "the", "collection", "I", "wonder", "if", "that", "be", "why", "the", "RequestId", "be", "miss", "NUMBER", "Thanks", "We", "will", "look", "into", "this", "then", "NUMBER", "Thanks", "This", "should", "be", "enough", "for", "us", "to", "implement", "a", "fix", "NUMBER", "So", "boto", "NUMBER", "do", "not", "require", "the", "global", "config", "to", "set", "proxies", "NUMBER", "All", "you", "need", "to", "do", "be", "set", "the", "general", "https_proxy", "environment", "variable", "and", "request", "urllib", "NUMBER", "should", "use", "the", "value", "stored", "in", "that", "environment", "variable", "NUMBER", "So", "something", "like", "export", "https_proxy", "LINK", "hostname", "port", "Let", "me", "know", "if", "this", "helps", "NUMBER", "No", "you", "re", "not", "miss", "anything", "NUMBER", "To", "do", "multipart", "s", "NUMBER", "s", "NUMBER", "transfers", "you", "have", "to", "perform", "NUMBER", "API", "calls", "to", "make", "sure", "the", "copy", "be", "identical", "which", "be", "more", "than", "we", "re", "comfortable", "abstracting", "away", "in", "boto", "NUMBER", "right", "now", "NUMBER", "You", "can", "still", "do", "this", "there", "be", "just", "no", "wrapper", "around", "it", "NUMBER", "With", "your", "snippet", "I", "get", "another", "error", "entirely", "An", "error", "occur", "InvalidParameterValue", "when", "calling", "the", "AuthorizeSecurityGroupIngress", "operation", "Invalid", "value", "Must", "specify", "both", "from", "and", "to", "ports", "with", "TCP", "UDP", "NUMBER", "for", "portRange", "NUMBER", "I", "suspect", "that", "we", "may", "be", "hitting", "the", "same", "issue", "however", "which", "be", "that", "you", "need", "to", "specify", "FromPort", "NUMBER", "python", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "security_group", "ec", "NUMBER", "create_security_group", "GroupName", "tmp_testing_group", "Description", "test", "for", "port", "in", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "security_group", "NUMBER", "authorize_ingress", "IpPermissions", "IpProtocol", "tcp", "FromPort", "port", "ToPort", "port", "security_group", "NUMBER", "delete", "Let", "me", "know", "if", "that", "works", "for", "you", "NUMBER", "teran", "mckinney", "That", "would", "be", "up", "to", "the", "service", "team", "but", "I", "expect", "that", "they", "would", "not", "do", "that", "at", "this", "point", "as", "it", "would", "be", "a", "breaking", "change", "NUMBER", "Glad", "everything", "worked", "out", "Unfortunately", "this", "be", "not", "possible", "with", "boto", "NUMBER", "s", "model", "as", "you", "suggested", "NUMBER", "I", "be", "not", "intimately", "familiar", "with", "how", "Lambda", "optimizes", "request", "but", "you", "could", "ask", "in", "the", "developer", "forums", "LINK", "NUMBER", "start", "NUMBER", "for", "tips", "in", "that", "direction", "NUMBER", "I", "also", "find", "this", "blog", "post", "LINK", "reuse", "in", "lambda", "that", "indicates", "that", "initialization", "code", "can", "sometimes", "be", "re", "use", "NUMBER", "My", "non", "expert", "impression", "be", "that", "if", "you", "create", "your", "service", "clients", "resources", "outside", "the", "scope", "of", "a", "function", "the", "can", "be", "re", "use", "in", "some", "situations", "NUMBER", "One", "thing", "you", "can", "do", "to", "save", "startup", "time", "in", "boto", "NUMBER", "be", "to", "ignore", "the", "service", "resources", "and", "just", "use", "the", "client", "NUMBER", "There", "be", "a", "little", "bit", "of", "extra", "initialization", "that", "needs", "to", "be", "do", "on", "a", "resource", "on", "top", "of", "the", "underlying", "client", "it", "creates", "NUMBER", "Additionally", "a", "resource", "will", "marshall", "responses", "into", "objects", "rather", "than", "passing", "through", "the", "raw", "response", "NUMBER", "The", "client", "be", "a", "bit", "more", "difficult", "to", "use", "in", "terms", "of", "programmer", "effort", "and", "in", "some", "cases", "such", "as", "handle", "paginated", "responses", "it", "can", "be", "considerably", "more", "difficult", "NUMBER", "You", "can", "look", "at", "our", "code", "and", "the", "CLI", "code", "to", "see", "how", "we", "do", "things", "but", "that", "in", "itself", "can", "be", "difficult", "due", "to", "our", "dynamic", "model", "NUMBER", "Aside", "from", "that", "I", "can", "t", "think", "of", "anything", "beyond", "the", "KISS", "principle", "NUMBER", "Using", "the", "client", "forces", "you", "to", "be", "very", "explicit", "about", "what", "operations", "you", "call", "so", "make", "sure", "you", "aren", "t", "calling", "anything", "you", "can", "get", "for", "free", "or", "cheaper", "somewhere", "else", "NUMBER", "You", "can", "get", "most", "of", "the", "information", "about", "an", "Object", "in", "S", "NUMBER", "for", "instance", "without", "having", "to", "download", "the", "contents", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "more", "question", "NUMBER", "muikrad", "Can", "you", "share", "an", "example", "snippet", "of", "what", "you", "re", "lambda", "function", "be", "doing", "I", "d", "like", "to", "see", "what", "your", "e", "trying", "to", "do", "with", "boto", "NUMBER", "Maybe", "we", "can", "speed", "things", "up", "NUMBER", "We", "do", "not", "support", "anything", "but", "Amazon", "Web", "Services", "so", "interop", "with", "things", "like", "fakes", "NUMBER", "be", "left", "up", "to", "them", "entirely", "NUMBER", "That", "be", "said", "it", "looks", "like", "in", "your", "test", "case", "you", "aren", "t", "unregistering", "the", "fix_s", "NUMBER", "_host", "event", "NUMBER", "kengruven", "We", "need", "to", "update", "our", "docs", "NUMBER", "We", "recently", "add", "support", "for", "this", "so", "make", "sure", "you", "re", "use", "the", "latest", "botocore", "version", "NUMBER", "You", "can", "set", "these", "in", "your", "NUMBER", "aws", "config", "file", "to", "get", "equivalent", "behavior", "for", "OrdinaryCallingFormat", "default", "s", "NUMBER", "addressing_style", "path", "The", "indentation", "in", "front", "of", "addressing_style", "be", "relevant", "NUMBER", "For", "reference", "subdomain", "would", "be", "default", "s", "NUMBER", "addressing_style", "virtual", "Until", "we", "get", "the", "docs", "update", "here", "s", "the", "relevant", "docstring", "from", "botocore", "LINK", "L", "NUMBER", "Let", "us", "know", "if", "addressing_style", "path", "doesn", "t", "work", "with", "the", "fakes", "NUMBER", "This", "feature", "was", "not", "migrated", "to", "boto", "NUMBER", "but", "still", "exists", "in", "legacy", "boto", "if", "you", "absolutely", "need", "it", "NUMBER", "After", "a", "quick", "look", "it", "doesn", "t", "look", "like", "it", "did", "all", "that", "much", "anyway", "just", "pulling", "down", "the", "public", "ip", "from", "the", "instance", "and", "guessing", "what", "user", "you", "need", "to", "use", "NUMBER", "If", "paramiko", "itself", "be", "giving", "you", "trouble", "I", "don", "t", "think", "cmdshell", "will", "help", "since", "it", "be", "effectively", "just", "paramiko", "anyway", "NUMBER", "botocore", "boto", "NUMBER", "be", "a", "bit", "tricky", "to", "use", "with", "executable", "bundlers", "because", "we", "generate", "function", "on", "the", "fly", "from", "service", "definition", "file", "NUMBER", "See", "this", "issue", "LINK", "for", "more", "details", "NUMBER", "The", "StreamingBody", "be", "a", "file", "like", "object", "that", "just", "needs", "to", "be", "read", "NUMBER", "Bytes", "aren", "t", "directly", "returned", "because", "we", "need", "to", "pull", "it", "all", "off", "the", "socket", "first", "and", "this", "could", "potentially", "be", "huge", "NUMBER", "In", "this", "way", "we", "allow", "for", "the", "data", "to", "be", "downloaded", "piecemeal", "in", "whatever", "size", "chunks", "you", "wish", "NUMBER", "I", "do", "agree", "that", "the", "docs", "should", "reflect", "this", "NUMBER", "You", "can", "achieve", "the", "same", "without", "having", "to", "use", "the", "content", "length", "just", "use", "NUMBER", "read", "will", "read", "the", "whole", "body", "NUMBER", "Using", "the", "botocore", "Config", "class", "be", "currently", "the", "only", "way", "to", "set", "the", "signature", "version", "in", "code", "NUMBER", "python", "import", "boto", "NUMBER", "from", "botocore", "NUMBER", "client", "import", "Config", "client", "boto", "NUMBER", "client", "s", "NUMBER", "config", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "Setting", "it", "in", "the", "config", "file", "would", "look", "like", "this", "default", "output", "json", "region", "us", "east", "NUMBER", "s", "NUMBER", "signature_version", "s", "NUMBER", "v", "NUMBER", "There", "be", "a", "larger", "issue", "that", "this", "isn", "t", "well", "documented", "which", "should", "be", "address", "NUMBER", "We", "already", "support", "this", "as", "of", "Monday", "NUMBER", "The", "feature", "be", "part", "of", "botocore", "so", "boto", "NUMBER", "did", "not", "get", "a", "version", "bump", "NUMBER", "This", "could", "be", "very", "useful", "marking", "as", "a", "feature", "request", "Dupe", "of", "LINK", "Based", "on", "the", "documentation", "LINK", "_CreateVpcPeeringConnection", "NUMBER", "html", "for", "the", "service", "API", "that", "appears", "to", "be", "correct", "behavior", "NUMBER", "I", "imagine", "it", "would", "never", "return", "the", "cidr", "block", "until", "the", "request", "be", "accepted", "NUMBER", "I", "will", "take", "a", "look", "at", "it", "this", "week", "NUMBER", "We", "definitely", "need", "a", "configuration", "functionality", "like", "this", "in", "the", "resource", "interface", "NUMBER", "I", "think", "accepting", "the", "Config", "object", "be", "the", "way", "we", "should", "go", "NUMBER", "Another", "idea", "that", "we", "were", "considering", "was", "the", "ability", "to", "pass", "in", "a", "client", "to", "the", "resource", "NUMBER", "Those", "were", "good", "points", "NUMBER", "Seems", "like", "there", "be", "a", "lot", "of", "edge", "cases", "in", "be", "able", "to", "pass", "in", "a", "client", "NUMBER", "I", "think", "sticking", "with", "the", "config", "be", "the", "right", "direction", "for", "now", "NUMBER", "Thanks", "for", "report", "NUMBER", "I", "confirmed", "that", "it", "only", "receives", "one", "message", "at", "a", "time", "NUMBER", "We", "ll", "take", "a", "look", "NUMBER", "I", "ve", "be", "investigating", "this", "issue", "and", "it", "seems", "to", "be", "SQS", "s", "specified", "behavior", "NUMBER", "You", "be", "not", "guaranteed", "to", "receive", "NUMBER", "message", "if", "there", "be", "NUMBER", "or", "more", "message", "especially", "with", "a", "small", "number", "of", "message", "NUMBER", "All", "that", "long", "polling", "enable", "by", "setting", "WaitTimeSeconds", "guarantees", "be", "that", "all", "the", "machines", "will", "be", "search", "and", "that", "it", "won", "t", "return", "empty", "until", "the", "time", "be", "up", "NUMBER", "When", "you", "have", "a", "large", "number", "of", "message", "in", "the", "queue", "you", "be", "much", "more", "likely", "to", "receive", "NUMBER", "message", "in", "a", "call", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "more", "question", "NUMBER", "That", "be", "still", "a", "small", "number", "of", "message", "NUMBER", "You", "can", "be", "more", "or", "less", "guaranteed", "to", "have", "NUMBER", "message", "every", "time", "if", "you", "have", "several", "thousand", "message", "in", "the", "queue", "NUMBER", "Here", "s", "a", "little", "script", "to", "put", "NUMBER", "message", "in", "the", "queue", "python", "import", "boto", "NUMBER", "sqs_url", "QUEUE_URL", "sqs", "boto", "NUMBER", "resource", "sqs", "queue", "sqs", "NUMBER", "Queue", "sqs_url", "for", "i", "in", "range", "NUMBER", "message", "for", "j", "in", "range", "NUMBER", "n", "str", "i", "NUMBER", "j", "message", "NUMBER", "append", "Id", "n", "MessageBody", "Message", "s", "n", "queue", "NUMBER", "send_messages", "Entries", "message", "After", "run", "that", "I", "get", "NUMBER", "message", "just", "about", "every", "time", "NUMBER", "You", "still", "won", "t", "get", "NUMBER", "if", "most", "of", "the", "message", "be", "in", "flight", "NUMBER", "You", "be", "never", "really", "guaranteed", "to", "get", "back", "NUMBER", "message", "but", "you", "can", "more", "or", "less", "count", "on", "it", "when", "you", "have", "a", "thousand", "or", "more", "message", "that", "aren", "t", "in", "flight", "NUMBER", "If", "you", "want", "to", "read", "all", "of", "the", "message", "on", "a", "small", "queue", "you", "ll", "have", "to", "perform", "several", "request", "NUMBER", "Thanks", "for", "report", "we", "ll", "look", "into", "it", "The", "type", "for", "that", "parameter", "be", "a", "string", "and", "so", "when", "it", "says", "it", "can", "take", "a", "comma", "delimited", "list", "it", "means", "that", "it", "wants", "a", "comma", "delimited", "string", "NUMBER", "Let", "me", "know", "if", "that", "works", "for", "you", "NUMBER", "Thanks", "for", "report", "we", "ll", "look", "into", "the", "issue", "I", "see", "you", "ve", "answered", "your", "own", "question", "in", "this", "StackOverflow", "post", "LINK", "submit", "emr", "step", "fail", "when", "submitted", "use", "boto", "NUMBER", "client", "so", "I", "m", "closing", "this", "issue", "NUMBER", "Thanks", "for", "report", "we", "ll", "look", "into", "it", "NUMBER", "on", "feature", "request", "from", "user", "who", "contacted", "me", "This", "be", "because", "we", "haven", "t", "write", "resources", "for", "all", "the", "services", "yet", "NUMBER", "We", "plan", "on", "add", "more", "resources", "over", "time", "NUMBER", "Compare", "our", "docs", "LINK", "DynamoDB", "NUMBER", "Client", "NUMBER", "create_table", "image", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "png", "To", "the", "API", "reference", "docs", "LINK", "_CreateTable", "NUMBER", "html", "image", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "png", "The", "Projection", "list", "elements", "of", "KEYS_ONLY", "INCLUDE", "and", "ALL", "be", "not", "be", "rendered", "properly", "NUMBER", "Note", "how", "KEYS_ONLY", "be", "in", "the", "description", "but", "not", "rendered", "as", "a", "sublist", "and", "INCLUDE", "and", "ALL", "look", "like", "they", "re", "part", "of", "the", "same", "list", "as", "Projection", "but", "they", "re", "actually", "sub", "elements", "NUMBER", "The", "service", "API", "docs", "were", "actually", "from", "the", "GSI", "param", "but", "LSI", "has", "the", "same", "issue", "image", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "dd", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "png", "NUMBER", "ship", "shipit", "Do", "we", "need", "all", "the", "pagination", "tokens", "for", "services", "that", "we", "don", "t", "currently", "have", "resource", "models", "for", "such", "as", "kinesis", "Also", "what", "if", "we", "slightly", "change", "the", "test", "logic", "to", "only", "check", "if", "an", "operation", "looks", "like", "it", "s", "paginated", "if", "it", "doesn", "t", "have", "a", "pagination", "config", "NUMBER", "So", "for", "each", "operation", "for", "a", "collection", "check", "if", "we", "have", "a", "page", "config", "NUMBER", "If", "we", "do", "then", "move", "on", "NUMBER", "If", "we", "don", "t", "have", "a", "pagination", "config", "_then_", "check", "if", "it", "looks", "pageable", "NUMBER", "If", "it", "do", "then", "we", "can", "error", "out", "NUMBER", "That", "would", "lower", "the", "maintenance", "burden", "because", "we", "can", "assume", "that", "anything", "with", "a", "pagination", "config", "be", "in", "fact", "paginated", "so", "we", "don", "t", "need", "to", "be", "able", "to", "independently", "detect", "if", "it", "s", "looks", "paginated", "based", "on", "its", "input", "output", "members", "NUMBER", "I", "m", "still", "struggling", "to", "see", "how", "maintaining", "this", "list", "be", "worth", "the", "effort", "NUMBER", "We", "re", "trying", "to", "be", "able", "to", "correctly", "flag", "whether", "or", "not", "any", "operation", "can", "be", "paginated", "despite", "the", "fact", "that", "We", "don", "t", "currently", "have", "a", "resource", "model", "for", "the", "service", "e", "NUMBER", "g", "kinesis", "NUMBER", "We", "don", "t", "even", "have", "a", "timeline", "of", "when", "a", "resource", "model", "would", "be", "add", "Even", "when", "we", "do", "add", "a", "resource", "model", "for", "a", "service", "we", "don", "t", "even", "know", "if", "it", "a", "particular", "operation", "would", "even", "be", "associated", "with", "a", "collection", "NUMBER", "So", "we", "have", "a", "lot", "of", "maintenance", "overhead", "without", "even", "knowing", "if", "it", "will", "pay", "off", "in", "the", "future", "NUMBER", "I", "don", "t", "think", "boto", "NUMBER", "s", "smoke", "test", "for", "collections", "be", "the", "place", "to", "have", "up", "to", "date", "logic", "for", "determining", "if", "any", "possible", "AWS", "operation", "should", "be", "paginated", "NUMBER", "I", "think", "this", "logic", "should", "exist", "but", "that", "this", "should", "be", "push", "upstream", "of", "boto", "NUMBER", "I", "see", "these", "test", "as", "a", "final", "sanity", "check", "that", "there", "s", "nothing", "obvious", "we", "re", "miss", "with", "the", "collections", "and", "paginations", "NUMBER", "ship", "Boto", "NUMBER", "be", "much", "more", "explicit", "with", "regions", "and", "except", "for", "a", "few", "cases", "will", "typically", "require", "you", "to", "provide", "a", "region", "NUMBER", "We", "want", "customers", "to", "be", "aware", "of", "what", "region", "they", "be", "use", "NUMBER", "It", "be", "also", "conceivable", "that", "even", "though", "OpsWorks", "be", "only", "in", "a", "single", "region", "currently", "they", "could", "eventually", "be", "available", "in", "multiple", "regions", "NUMBER", "Looks", "like", "our", "docs", "which", "be", "the", "same", "use", "for", "the", "API", "reference", "docs", "LINK", "job", "output", "get", "NUMBER", "html", "be", "confusing", "here", "NUMBER", "You", "don", "t", "need", "to", "provide", "the", "Range", "part", "only", "the", "bytes", "NUMBER", "part", "NUMBER", "So", "the", "call", "should", "look", "like", "inventory_chunk", "job", "NUMBER", "get_output", "range", "bytes", "NUMBER", "NUMBER", "I", "ll", "follow", "up", "and", "get", "those", "docs", "update", "NUMBER", "Thanks", "Yes", "we", "be", "open", "to", "a", "PR", "NUMBER", "Be", "sure", "to", "check", "out", "our", "contribute", "guide", "LINK", "and", "include", "testcases", "with", "your", "PR", "NUMBER", "Updates", "EC", "NUMBER", "model", "to", "the", "latest", "gotcha", "Thanks", "for", "your", "suggestion", "NUMBER", "We", "will", "look", "into", "this", "NUMBER", "I", "thought", "the", "If", "the", "response", "include", "a", "nextToken", "then", "there", "be", "more", "data", "to", "search", "behavior", "be", "correctly", "documented", "here", "LINK", "CloudWatchLogs", "NUMBER", "Client", "NUMBER", "filter_log_events", "NUMBER", "Are", "you", "talking", "about", "some", "different", "document", "Can", "you", "share", "the", "url", "to", "it", "I", "can", "understand", "your", "point", "NUMBER", "That", "nextToken", "behavior", "be", "kinda", "a", "generic", "behavior", "across", "all", "similar", "attributes", "in", "other", "api", "calls", "NUMBER", "The", "good", "news", "be", "normally", "you", "don", "t", "have", "to", "deal", "with", "it", "by", "yourself", "NUMBER", "There", "be", "a", "paginator", "for", "filter_log_events", "LINK", "CloudWatchLogs", "NUMBER", "Paginator", "NUMBER", "FilterLogEvents", "to", "do", "it", "for", "you", "NUMBER", "Oh", "to", "answer", "your", "NUMBER", "question", "NUMBER", "The", "documentation", "of", "that", "nextToken", "be", "defined", "here", "LINK", "NUMBER", "NUMBER", "service", "NUMBER", "json", "L", "NUMBER", "NUMBER", "BUT", "the", "thing", "be", "that", "such", "file", "be", "NOT", "manually", "maintained", "NUMBER", "It", "be", "generate", "from", "upstream", "definition", "NUMBER", "I", "observe", "similar", "error", "in", "my", "integration", "test", "but", "it", "happens", "so", "rarely", "that", "it", "do", "not", "really", "bothers", "NUMBER", "After", "all", "in", "practice", "buckets", "be", "normally", "persistent", "NUMBER", "It", "also", "seems", "that", "such", "occasional", "symptom", "be", "hard", "to", "completely", "eliminated", "due", "to", "S", "NUMBER", "s", "Eventually", "Consistent", "LINK", "ConsistencyModel", "design", "NUMBER", "Hope", "that", "helps", "NUMBER", "Can", "you", "elaborate", "a", "little", "bit", "what", "you", "be", "trying", "to", "accomplish", "And", "which", "documentation", "be", "you", "referring", "to", "Just", "FYI", "NUMBER", "This", "be", "the", "boto", "NUMBER", "documentation", "for", "EC", "NUMBER", "LINK", "NUMBER", "AND", "you", "can", "find", "some", "examples", "here", "LINK", "NUMBER", "It", "be", "true", "that", "we", "be", "currently", "use", "futures", "NUMBER", "We", "be", "open", "to", "upgrade", "it", "to", "newer", "version", "NUMBER", "Some", "investigation", "on", "latest", "futures", "NUMBER", "a", "major", "version", "bump", "and", "throughout", "test", "be", "needed", "before", "the", "upgrade", "NUMBER", "Diff", "of", "NUMBER", "to", "NUMBER", "LINK", "Changelog", "from", "NUMBER", "to", "NUMBER", "NUMBER", "Fixed", "AttributeErrors", "on", "exit", "on", "Python", "NUMBER", "x", "NUMBER", "Made", "multiprocessing", "optional", "again", "on", "implementations", "other", "than", "just", "Jython", "NUMBER", "Made", "Executor", "NUMBER", "map", "non", "greedy", "NUMBER", "Dropped", "Python", "NUMBER", "and", "NUMBER", "support", "Removed", "the", "deprecate", "futures", "top", "level", "package", "Applied", "patch", "for", "issue", "NUMBER", "Executor", "NUMBER", "map", "do", "not", "submit", "futures", "until", "iter", "NUMBER", "next", "be", "call", "Applied", "patch", "for", "issue", "NUMBER", "accessing", "an", "non", "exist", "attribute", "Applied", "patch", "for", "issue", "NUMBER", "memory", "leak", "Applied", "patch", "for", "issue", "NUMBER", "behavior", "of", "concurrent", "NUMBER", "futures", "NUMBER", "as_completed", "for", "duplicate", "argument", "This", "should", "be", "an", "ok", "change", "to", "pull", "NUMBER", "If", "all", "our", "test", "pass", "I", "ll", "update", "this", "NUMBER", "Looks", "like", "you", "be", "talking", "about", "the", "Glacier", "service", "get_job_output", "operation", "LINK", "Glacier", "NUMBER", "Client", "NUMBER", "get_job_output", "NUMBER", "That", "body", "be", "as", "you", "said", "a", "stream", "NUMBER", "So", "the", "normal", "read", "behavior", "LINK", "file", "NUMBER", "read", "file", "NUMBER", "read", "in", "any", "other", "standard", "file", "like", "object", "still", "applies", "here", "NUMBER", "Typically", "you", "will", "want", "to", "provide", "a", "buffer", "size", "and", "loop", "until", "you", "read", "all", "the", "data", "NUMBER", "Thanks", "for", "your", "suggestion", "NUMBER", "We", "will", "look", "into", "this", "NUMBER", "Thanks", "for", "bringing", "this", "up", "NUMBER", "The", "workaround", "in", "your", "SO", "thread", "be", "creative", "and", "very", "educational", "NUMBER", "I", "also", "want", "to", "remind", "you", "that", "your", "patch", "works", "as", "long", "as", "you", "only", "use", "the", "botocore", "part", "of", "the", "feature", "in", "boto", "NUMBER", "Once", "you", "want", "to", "use", "boto", "NUMBER", "features", "i", "NUMBER", "e", "NUMBER", "resources", "you", "will", "also", "need", "to", "do", "similar", "things", "for", "the", "boto", "NUMBER", "data", "NUMBER", "data", "file", "NUMBER", "On", "the", "other", "hand", "if", "all", "you", "need", "be", "distributing", "YOUR", "project", "which", "be", "build", "on", "top", "of", "boto", "NUMBER", "you", "can", "always", "specify", "the", "extra", "data", "path", "from", "your", "code", "instead", "of", "hacking", "into", "botocore", "which", "would", "become", "somewhat", "difficult", "to", "stay", "update", "with", "upstream", "NUMBER", "from", "boto", "NUMBER", "session", "import", "Session", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "session", "NUMBER", "_loader", "NUMBER", "search_paths", "NUMBER", "append", "path", "to", "your", "data", "directory", "Hack", "it", "this", "way", "s", "NUMBER", "session", "NUMBER", "client", "s", "NUMBER", "Boto", "NUMBER", "won", "t", "be", "able", "to", "add", "those", "imports", "statements", "back", "NUMBER", "The", "reason", "for", "this", "be", "because", "those", "inject", "calls", "be", "specifically", "do", "to", "avoid", "importing", "modules", "until", "they", "re", "needed", "to", "speed", "up", "start", "up", "time", "NUMBER", "Adding", "them", "back", "would", "undo", "their", "original", "purpose", "NUMBER", "What", "you", "ll", "need", "to", "do", "be", "update", "your", "setup", "NUMBER", "py", "script", "to", "include", "a", "few", "additional", "things", "NUMBER", "You", "can", "add", "a", "py", "NUMBER", "exe", "section", "where", "you", "can", "call", "out", "specific", "modules", "that", "py", "NUMBER", "exe", "miss", "NUMBER", "You", "ll", "need", "to", "add", "the", "appropriate", "boto", "NUMBER", "imports", "there", "NUMBER", "Here", "s", "an", "example", "of", "where", "we", "do", "something", "similar", "for", "the", "AWS", "CLI", "LINK", "cli", "blob", "develop", "setup", "NUMBER", "py", "L", "NUMBER", "L", "NUMBER", "Let", "us", "know", "if", "you", "be", "run", "into", "any", "more", "issue", "NUMBER", "TheNilesh", "boto", "NUMBER", "doesn", "t", "provide", "separate", "imports", "because", "there", "be", "no", "static", "python", "code", "to", "import", "it", "be", "all", "generate", "on", "the", "fly", "so", "you", "only", "load", "what", "you", "use", "NUMBER", "I", "don", "t", "know", "anything", "about", "py", "NUMBER", "exe", "so", "jamesls", "will", "have", "to", "take", "that", "one", "Thanks", "for", "your", "understanding", "NUMBER", "Again", "typically", "only", "the", "create", "subresource", "methods", "be", "available", "in", "service", "and", "parent", "resource", "and", "you", "will", "need", "to", "first", "create", "a", "sub", "resource", "before", "you", "can", "access", "its", "own", "methods", "NUMBER", "We", "don", "t", "have", "resource", "coverage", "for", "everything", "at", "this", "moment", "though", "NUMBER", "So", "sometimes", "you", "have", "to", "use", "the", "lower", "level", "client", "interface", "NUMBER", "We", "do", "look", "forward", "to", "increase", "the", "resource", "coverage", "gradually", "NUMBER", "I", "have", "marked", "your", "other", "NUMBER", "issue", "as", "feature", "request", "NUMBER", "Thanks", "again", "This", "PR", "be", "a", "quick", "patch", "to", "work", "with", "boto", "botocore", "NUMBER", "All", "the", "commit", "here", "be", "duplicate", "in", "pending", "PR", "boto", "boto", "NUMBER", "NUMBER", "Well", "forget", "the", "NUMBER", "commit", "NUMBER", "assert_in", "be", "not", "support", "in", "python", "NUMBER", "I", "will", "take", "it", "away", "in", "next", "PR", "NUMBER", "Alright", "the", "commit", "history", "be", "much", "better", "now", "NUMBER", "No", "longer", "blocked", "for", "this", "one", "NUMBER", "This", "sounds", "like", "it", "had", "a", "lot", "of", "similarities", "with", "this", "concurrency", "issue", "relate", "to", "concurrent", "NUMBER", "futures", "NUMBER", "wait", "LINK", "The", "old", "implementation", "of", "managed", "s", "NUMBER", "transfer", "relied", "on", "a", "concurrent", "NUMBER", "futures", "waiter", "implementation", "so", "that", "may", "have", "be", "cause", "the", "issue", "NUMBER", "Please", "try", "version", "NUMBER", "of", "boto", "NUMBER", "It", "should", "not", "have", "this", "issue", "NUMBER", "Closing", "issue", "for", "now", "NUMBER", "kyleknap", "you", "should", "be", "able", "to", "merge", "LINK", "and", "rebase", "these", "PRs", "correct", "I", "believe", "you", "should", "be", "unblocked", "now", "NUMBER", "Thanks", "for", "your", "praise", "and", "your", "interest", "for", "Amazon", "services", "NUMBER", "Amazon", "MWS", "be", "not", "currently", "support", "in", "Boto", "NUMBER", "I", "be", "not", "able", "to", "comment", "on", "future", "plan", "on", "this", "NUMBER", "However", "since", "Boto", "and", "Boto", "NUMBER", "can", "work", "in", "the", "same", "project", "side", "by", "side", "so", "you", "can", "definitely", "use", "Boto", "for", "Amazon", "MWS", "NUMBER", "Hope", "that", "helps", "Interesting", "NUMBER", "I", "did", "not", "use", "Riak", "CS", "before", "NUMBER", "All", "I", "can", "say", "at", "this", "moment", "be", "Boto", "NUMBER", "do", "automatically", "change", "endpoint", "to", "your_bucket_name", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "when", "it", "sees", "fit", "NUMBER", "This", "be", "do", "by", "botocore", "utils", "NUMBER", "py", "fix_s", "NUMBER", "_host", "registered", "to", "event", "before", "sign", "NUMBER", "s", "NUMBER", "NUMBER", "You", "may", "however", "force", "to", "unregister", "that", "handler", "from", "that", "event", "NUMBER", "import", "boto", "NUMBER", "from", "botocore", "NUMBER", "utils", "import", "fix_s", "NUMBER", "_host", "resource", "boto", "NUMBER", "resource", "s", "NUMBER", "resource", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "meta", "NUMBER", "events", "NUMBER", "unregister", "before", "sign", "NUMBER", "s", "NUMBER", "fix_s", "NUMBER", "_host", "for", "bucket", "in", "resource", "NUMBER", "buckets", "NUMBER", "all", "print", "bucket", "NUMBER", "name", "bucket", "resource", "NUMBER", "Bucket", "rayluo", "print", "bucket", "boto", "NUMBER", "set_stream_logger", "botocore", "for", "o", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "print", "o", "break", "print", "do", "Bear", "in", "mind", "that", "you", "may", "or", "may", "not", "still", "run", "into", "other", "issue", "NUMBER", "YMMV", "NUMBER", "Thanks", "JordonPhillips", "NUMBER", "I", "also", "run", "your", "code", "snippet", "it", "works", "for", "me", "NUMBER", "That", "be", "it", "NUMBER", "The", "s", "NUMBER", "client", "s", "put_object", "Body", "a_file_like_object", "Bucket", "NUMBER", "Key", "NUMBER", "method", "in", "lower", "level", "botocore", "LINK", "S", "NUMBER", "Client", "NUMBER", "put_object", "do", "support", "streaming", "NUMBER", "Yes", "it", "do", "NUMBER", "Although", "not", "yet", "mention", "in", "Botocore", "s", "S", "NUMBER", "Client", "NUMBER", "put_object", "s", "document", "LINK", "S", "NUMBER", "Client", "NUMBER", "put_object", "the", "Botocore", "S", "NUMBER", "Client", "NUMBER", "put_object", "do", "accept", "a", "file", "like", "object", "NUMBER", "There", "be", "even", "a", "test", "case", "LINK", "_s", "NUMBER", "py", "L", "NUMBER", "to", "ensure", "that", "NUMBER", "You", "won", "t", "find", "the", "streaming", "implementation", "in", "the", "code", "base", "here", "because", "it", "be", "actually", "support", "by", "the", "underlying", "library", "request", "LINK", "request", "NUMBER", "org", "en", "latest", "user", "advance", "streaming", "uploads", "NUMBER", "Both", "Boto", "NUMBER", "s", "Object", "NUMBER", "put", "and", "Bucket", "NUMBER", "put_object", "be", "calling", "Botocore", "s", "put_object", "so", "they", "support", "streaming", "as", "well", "NUMBER", "It", "be", "mention", "here", "LINK", "storing", "data", "NUMBER", "The", "higher", "level", "S", "NUMBER", "Transfer", "in", "Boto", "NUMBER", "provides", "more", "handy", "features", "LINK", "module", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "Its", "upload_file", "accepts", "a", "filename", "and", "it", "will", "automatically", "split", "the", "big", "file", "into", "multiple", "chunks", "with", "default", "size", "as", "NUMBER", "MB", "and", "default", "concurrency", "of", "NUMBER", "and", "each", "chunk", "be", "streaming", "through", "the", "aforementioned", "low", "level", "APIs", "NUMBER", "Yes", "you", "be", "right", "NUMBER", "Just", "a", "heads", "up", "NUMBER", "Those", "aforementioned", "high", "level", "upload_file", "and", "download_file", "methods", "be", "now", "injected", "into", "boto", "NUMBER", "s", "S", "NUMBER", "client", "Bucket", "and", "Object", "NUMBER", "It", "be", "easier", "to", "use", "now", "NUMBER", "Check", "out", "the", "usage", "documentation", "here", "LINK", "module", "boto", "NUMBER", "s", "NUMBER", "inject", "NUMBER", "We", "will", "look", "into", "that", "NUMBER", "Thanks", "NUMBER", "Marking", "this", "as", "feature", "request", "NUMBER", "Thanks", "for", "the", "catch", "The", "document", "for", "glacier", "client", "s", "complete_multipart_upload", "LINK", "Glacier", "NUMBER", "Client", "NUMBER", "complete_multipart_upload", "be", "incorrect", "in", "this", "case", "NUMBER", "You", "will", "have", "to", "provide", "the", "checksum", "explicitly", "NUMBER", "The", "good", "news", "be", "there", "be", "already", "a", "undocumented", "helper", "for", "you", "NUMBER", "from", "botocore", "NUMBER", "utils", "import", "calculate_tree_hash", "client", "NUMBER", "complete_multipart_upload", "checksum", "calculate_tree_hash", "open", "your_file", "NUMBER", "txt", "vaultName", "vault_name", "uploadId", "upload_id", "archiveSize", "str", "fsize", "By", "the", "way", "same", "error", "also", "applies", "to", "the", "documentation", "for", "the", "MultipartUpload", "resource", "s", "complete", "method", "LINK", "Glacier", "NUMBER", "MultipartUpload", "NUMBER", "complete", "NUMBER", "multipart_upload", "glacier", "NUMBER", "MultipartUpload", "account_id", "VAULT_NAME", "upload_id", "NUMBER", "multipart_upload", "NUMBER", "complete", "checksum", "calculate_tree_hash", "open", "file", "NUMBER", "txt", "archiveSize", "str", "file_size", "PS", "As", "a", "side", "product", "I", "came", "up", "with", "a", "test", "case", "for", "test_glacier", "NUMBER", "py", "NUMBER", "I", "will", "commit", "it", "later", "NUMBER", "Sorry", "for", "the", "confusion", "the", "documentation", "be", "trying", "to", "demonstrate", "the", "position", "when", "the", "NextToken", "appears", "NUMBER", "But", "it", "will", "not", "always", "be", "present", "NUMBER", "It", "will", "be", "there", "only", "when", "there", "be", "more", "results", "to", "be", "returned", "in", "next", "function", "call", "NUMBER", "So", "yes", "you", "will", "need", "to", "get", "the", "ARN", "right", "to", "make", "it", "work", "NUMBER", "Otherwise", "we", "will", "run", "into", "some", "corner", "cases", "NUMBER", "It", "turns", "out", "an", "incorrect", "region", "name", "will", "trigger", "a", "NUMBER", "error", "and", "an", "incorrect", "account", "number", "will", "trigger", "a", "NUMBER", "error", "LINK", "sdk", "java", "issue", "NUMBER", "NUMBER", "In", "both", "cases", "the", "response", "contains", "no", "Error", "key", "hence", "the", "error", "trace", "NUMBER", "We", "may", "provide", "an", "easier", "way", "to", "obtain", "a", "correct", "ARN", "LINK", "NUMBER", "in", "the", "future", "and", "or", "modify", "the", "error", "handle", "logic", "to", "tolerate", "a", "miss", "Error", "field", "in", "the", "error", "response", "LINK", "NUMBER", "I", "be", "marking", "this", "as", "an", "enhancement", "for", "future", "reference", "NUMBER", "PS", "My", "test", "script", "import", "boto", "NUMBER", "region_name", "us", "west", "NUMBER", "Incorrect", "region", "will", "result", "in", "a", "NUMBER", "error", "account_number", "NUMBER", "NUMBER", "digit", "obtained", "from", "AWS", "Web", "Console", "NUMBER", "NUMBER", "or", "NUMBER", "results", "in", "a", "NUMBER", "error", "DBInstanceIdentifier", "mydbinstance", "arn", "arn", "aws", "rds", "s", "s", "db", "s", "region_name", "account_number", "DBInstanceIdentifier", "rds", "boto", "NUMBER", "client", "rds", "boto", "NUMBER", "set_stream_logger", "botocore", "r", "NUMBER", "rds", "NUMBER", "list_tags_for_resource", "ResourceName", "arn", "I", "believe", "this", "issue", "has", "be", "fix", "and", "can", "be", "close", "NUMBER", "Thanks", "oflo", "styra", "NUMBER", "We", "be", "interested", "in", "provide", "resource", "coverage", "for", "more", "services", "NUMBER", "I", "be", "unable", "to", "comment", "on", "the", "timeframe", "for", "CodeDeploy", "resource", "support", "NUMBER", "We", "do", "accept", "pull", "request", "if", "you", "d", "like", "to", "contribute", "NUMBER", "At", "this", "moment", "there", "be", "no", "documentation", "for", "this", "but", "it", "happened", "before", "that", "people", "can", "work", "it", "out", "by", "looking", "at", "exist", "resources", "as", "example", "NUMBER", "Thanks", "We", "will", "review", "it", "NUMBER", "LGTM", "Can", "you", "also", "describe", "which", "version", "of", "botocore", "you", "be", "use", "I", "have", "test", "this", "on", "boto", "NUMBER", "NUMBER", "and", "botocore", "NUMBER", "on", "both", "Python", "NUMBER", "Python", "NUMBER", "It", "works", "for", "me", "NUMBER", "python", "Python", "NUMBER", "v", "NUMBER", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GCC", "NUMBER", "Apple", "Inc", "NUMBER", "build", "NUMBER", "dot", "NUMBER", "on", "darwin", "Type", "help", "copyright", "credits", "or", "license", "for", "more", "information", "NUMBER", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "test", "NUMBER", "dotsinbucket", "bucket", "NUMBER", "create", "CreateBucketConfiguration", "LocationConstraint", "us", "west", "NUMBER", "u", "Location", "LINK", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "HostId", "k", "CO", "kCkqVgs", "NUMBER", "wh", "NUMBER", "mUIZaiieUTqj", "NUMBER", "atJlCQOW", "NUMBER", "DSNCFBOYD", "NUMBER", "mnOZ", "qtn", "NUMBER", "jAzSLH", "NUMBER", "VEz", "FZLAzY", "RequestId", "B", "NUMBER", "FACB", "NUMBER", "E", "NUMBER", "E", "NUMBER", "B", "bucket", "NUMBER", "delete", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "HostId", "vhEd", "NUMBER", "MG", "NUMBER", "NmmJUXNo", "NUMBER", "PKDnDfNfipqr", "NUMBER", "NAx", "NUMBER", "xYBMSRsV", "NUMBER", "RZlzAGdEng", "NUMBER", "Ae", "NUMBER", "Hv", "NUMBER", "HVNgFvtVE", "NUMBER", "xeN", "NUMBER", "M", "RequestId", "NUMBER", "CA", "NUMBER", "B", "NUMBER", "OK", "this", "seems", "to", "be", "one", "of", "the", "tricky", "things", "of", "S", "NUMBER", "When", "creating", "a", "bucket", "in", "a", "specific", "region", "you", "d", "better", "create", "your", "S", "NUMBER", "resource", "with", "SAME", "region", "beforehand", "NUMBER", "Otherwise", "although", "the", "bucket", "creation", "would", "still", "succeed", "some", "other", "operations", "such", "as", "delete", "will", "not", "be", "able", "to", "redirect", "to", "the", "correct", "region", "when", "you", "be", "use", "a", "DNS", "incompatible", "bucket", "name", "NUMBER", "The", "correct", "pattern", "looks", "like", "this", "NUMBER", "import", "boto", "NUMBER", "region", "us", "east", "NUMBER", "or", "us", "west", "NUMBER", "or", "eu", "west", "NUMBER", "or", "etc", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "region_name", "region", "bucket", "s", "NUMBER", "Bucket", "test", "NUMBER", "dotsinbucket", "See", "the", "footnote", "below", "See", "LINK", "s", "NUMBER", "_region", "if", "region", "us", "east", "NUMBER", "bucket", "NUMBER", "create", "else", "bucket", "NUMBER", "create", "CreateBucketConfiguration", "LocationConstraint", "region", "Another", "tip", "You", "can", "enable", "log", "for", "debug", "boto", "NUMBER", "set_stream_logger", "botocore", "bucket", "NUMBER", "delete", "By", "the", "way", "you", "may", "not", "reuse", "a", "bucket", "name", "which", "was", "occupied", "in", "different", "region", "recently", "NUMBER", "So", "you", "may", "need", "to", "adjust", "bucket", "names", "slightly", "in", "this", "test", "NUMBER", "mwedgwood", "rmn", "Yes", "I", "agree", "it", "may", "not", "seem", "obvious", "that", "the", "resource", "needs", "to", "be", "created", "with", "correct", "region", "in", "the", "first", "place", "and", "the", "default", "region", "in", "your", "NUMBER", "aws", "config", "may", "not", "be", "the", "one", "you", "want", "in", "run", "time", "so", "you", "need", "to", "take", "care", "NUMBER", "But", "technically", "it", "be", "not", "a", "bug", "NUMBER", "The", "API", "correctly", "returns", "an", "error", "message", "mentioning", "endpoint", "which", "be", "determined", "by", "region", "NUMBER", "There", "be", "room", "for", "improvement", "NUMBER", "The", "long", "term", "goal", "will", "be", "to", "find", "a", "way", "to", "automatically", "redirect", "the", "request", "to", "correct", "region", "whenever", "possible", "the", "short", "term", "goal", "be", "to", "see", "if", "we", "can", "provide", "a", "better", "error", "message", "NUMBER", "I", "ll", "mark", "this", "one", "as", "enhancement", "to", "keep", "track", "NUMBER", "Meanwhile", "the", "pattern", "in", "my", "previous", "code", "snippet", "should", "provide", "a", "feasible", "workaround", "for", "you", "NUMBER", "Hope", "that", "helps", "NUMBER", "kapilt", "You", "ll", "just", "need", "to", "specify", "the", "region", "that", "matches", "the", "region", "of", "the", "bucket", "NUMBER", "If", "you", "aren", "t", "sure", "of", "the", "region", "you", "can", "use", "region_name", "s", "NUMBER", "get_bucket_location", "Bucket", "mybucket", "LocationConstraint", "region_name", "boto", "NUMBER", "client", "s", "NUMBER", "region_name", "region_name", "We", "be", "looking", "into", "way", "to", "make", "this", "more", "automatic", "but", "for", "now", "you", "ll", "need", "to", "ensure", "that", "the", "region_name", "of", "the", "client", "matches", "the", "region", "in", "which", "the", "S", "NUMBER", "bucket", "be", "located", "NUMBER", "Unit", "test", "function", "test", "integration", "test", "and", "CHANGELOG", "be", "also", "update", "NUMBER", "The", "latest", "feedback", "has", "be", "incorporated", "NUMBER", "That", "CI", "error", "be", "cause", "by", "another", "issue", "not", "relevant", "to", "this", "PR", "NUMBER", "It", "be", "relevant", "to", "this", "PR", "in", "botocore", "NUMBER", "LINK", "OK", "we", "be", "make", "progress", "have", "remove", "the", "roadblock", "in", "pr", "NUMBER", "shipit", "Looks", "good", "NUMBER", "I", "agree", "we", "should", "probably", "talk", "more", "about", "what", "methods", "to", "expose", "in", "boto", "NUMBER", "s", "session", "so", "we", "can", "do", "that", "independently", "of", "this", "PR", "NUMBER", "That", "be", "because", "most", "of", "the", "service", "documents", "do", "not", "physically", "exist", "in", "this", "repo", "in", "the", "form", "of", "rst", "file", "NUMBER", "They", "be", "generate", "by", "the", "doc", "module", "LINK", "based", "on", "service", "model", "definitions", "NUMBER", "In", "this", "sense", "that", "ReadTheDocs", "menu", "be", "somewhat", "misleading", "NUMBER", "We", "may", "need", "to", "check", "if", "we", "can", "adjust", "that", "menu", "to", "avoid", "confusion", "NUMBER", "Meanwhile", "do", "you", "have", "a", "specific", "need", "to", "change", "the", "IAM", "document", "If", "it", "be", "about", "the", "doc", "content", "we", "will", "need", "to", "relay", "it", "to", "the", "upstream", "service", "team", "and", "or", "doc", "team", "NUMBER", "If", "it", "be", "about", "the", "doc", "format", "you", "may", "be", "able", "to", "change", "it", "through", "the", "aforementioned", "doc", "module", "and", "send", "out", "a", "PR", "NUMBER", "Feel", "free", "to", "comment", "on", "this", "thread", "NUMBER", "We", "will", "see", "what", "we", "can", "do", "NUMBER", "kpfleming", "No", "as", "of", "right", "now", "policy", "documents", "as", "input", "parameters", "expect", "and", "only", "accept", "strings", "NUMBER", "You", "probably", "copied", "in", "some", "extra", "bits", "from", "the", "console", "format", "NUMBER", "I", "have", "pull", "request", "up", "to", "fix", "the", "documentation", "to", "refer", "to", "policy", "documents", "as", "dicts", "instead", "of", "strings", "and", "to", "accept", "dicts", "as", "policy", "document", "inputs", "NUMBER", "Sorry", "for", "the", "delay", "NUMBER", "Closing", "inactive", "issue", "NUMBER", "For", "that", "second", "point", "the", "fancy", "way", "be", "to", "provide", "aliases", "for", "backwards", "compatibility", "AND", "also", "mention", "they", "be", "deprecate", "in", "the", "release", "note", "and", "then", "a", "couple", "version", "later", "we", "will", "get", "rid", "of", "them", "NUMBER", "That", "be", "said", "in", "this", "case", "the", "previous", "behavior", "can", "be", "considered", "as", "a", "bug", "and", "a", "bug", "be", "always", "fix", "without", "backward", "compatibility", "NUMBER", "Confirmed", "the", "symptom", "NUMBER", "Will", "need", "to", "profile", "it", "to", "find", "the", "bottleneck", "NUMBER", "Can", "you", "provide", "a", "code", "snippet", "to", "reproduce", "the", "issue", "Such", "as", "import", "boto", "NUMBER", "boto", "NUMBER", "set_stream_logger", "botocore", "This", "line", "enable", "log", "on", "console", "iam", "boto", "NUMBER", "client", "iam", "region_name", "us", "east", "NUMBER", "cloudwatch", "boto", "NUMBER", "client", "cloudwatch", "region_name", "us", "east", "NUMBER", "blah_blah", "Your", "other", "code", "go", "in", "here", "Ideally", "you", "can", "also", "try", "to", "use", "the", "CLI", "to", "reproduce", "the", "issue", "NUMBER", "Just", "add", "a", "debug", "option", "at", "the", "end", "of", "your", "command", "line", "then", "you", "will", "have", "a", "good", "debug", "output", "for", "investigation", "NUMBER", "It", "works", "fine", "for", "me", "as", "well", "use", "kyleknap", "s", "snippet", "NUMBER", "I", "m", "going", "to", "go", "ahead", "and", "close", "the", "issue", "since", "it", "has", "be", "over", "a", "month", "NUMBER", "Please", "re", "open", "if", "that", "snippet", "do", "not", "work", "for", "you", "NUMBER", "As", "of", "now", "boto", "NUMBER", "be", "hand", "code", "to", "use", "an", "HTTP", "POST", "and", "form", "encoding", "to", "send", "out", "request", "boto", "NUMBER", "uses", "HTTP", "GET", "which", "has", "an", "inherent", "size", "limit", "NUMBER", "Boto", "NUMBER", "can", "also", "send", "out", "HTTP", "POST", "but", "only", "in", "json", "encoding", "which", "was", "not", "support", "by", "the", "CloudSearchDomain", "NUMBER", "We", "will", "mark", "this", "issue", "as", "a", "know", "bug", "for", "now", "and", "also", "keep", "track", "with", "this", "issue", "NUMBER", "We", "will", "update", "this", "issue", "when", "situation", "change", "NUMBER", "adepue", "In", "general", "you", "be", "always", "welcome", "to", "help", "NUMBER", "For", "this", "specific", "case", "we", "tend", "to", "and", "be", "still", "trying", "to", "address", "it", "in", "a", "way", "that", "every", "AWS", "SDK", "NUMBER", "in", "total", "can", "automatically", "pick", "up", "the", "new", "fix", "NUMBER", "Before", "that", "happens", "you", "can", "have", "a", "workaround", "in", "your", "python", "code", "like", "this", "def", "post_it", "request", "operation_name", "kwargs", "if", "request", "NUMBER", "method", "GET", "You", "can", "also", "add", "one", "more", "condition", "size", "THRESHOLD", "request", "NUMBER", "headers", "Content", "Type", "application", "x", "www", "form", "urlencoded", "request", "NUMBER", "method", "POST", "request", "NUMBER", "url", "request", "NUMBER", "data", "request", "NUMBER", "url", "NUMBER", "split", "client", "boto", "NUMBER", "client", "cloudsearchdomain", "endpoint_url", "LINK", "your", "domain", "NUMBER", "com", "client", "NUMBER", "meta", "NUMBER", "events", "NUMBER", "register", "request", "created", "NUMBER", "cloudsearchdomain", "NUMBER", "Search", "post_it", "The", "magic", "client", "NUMBER", "search", "query", "a", "long", "long", "long", "long", "NUMBER", "NUMBER", "bytes", "NUMBER", "query", "string", "It", "works", "I", "m", "also", "not", "able", "to", "reproduce", "NUMBER", "Could", "you", "please", "attach", "debug", "logs", "so", "I", "can", "dig", "deeper", "To", "enable", "the", "logs", "put", "the", "following", "command", "before", "any", "other", "boto", "code", "python", "boto", "NUMBER", "set_stream_logger", "botocore", "Thanks", "SamCyanide", "I", "think", "we", "ve", "all", "be", "there", "NUMBER", "I", "m", "sorry", "we", "couldn", "t", "help", "out", "more", "hopefully", "this", "issue", "will", "help", "you", "get", "an", "update", "in", "a", "more", "timely", "manner", "NUMBER", "The", "finalized", "usage", "be", "documented", "at", "the", "top", "of", "this", "PR", "LINK", "The", "logic", "before", "assumed", "that", "the", "JMESPath", "expression", "would", "not", "have", "an", "integer", "between", "square", "brackets", "NUMBER", "Thus", "some", "parameters", "were", "documented", "in", "a", "resource", "action", "when", "they", "were", "not", "supposed", "to", "be", "as", "the", "resource", "already", "provide", "their", "values", "NUMBER", "Fixes", "LINK", "Here", "be", "what", "it", "looks", "like", "now", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "pm", "LINK", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "c", "c", "NUMBER", "ebf", "NUMBER", "a", "NUMBER", "png", "Here", "be", "what", "it", "looks", "like", "after", "the", "fix", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "pm", "LINK", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "df", "NUMBER", "dd", "NUMBER", "png", "Note", "that", "report_status", "be", "for", "the", "EC", "NUMBER", "Instance", "object", "which", "should", "not", "require", "an", "Instances", "parameter", "to", "be", "include", "NUMBER", "cc", "jamesls", "mtdowling", "rayluo", "jamesls", "I", "update", "the", "logic", "to", "use", "JMESPath", "NUMBER", "Should", "be", "good", "to", "look", "at", "NUMBER", "I", "think", "it", "may", "be", "because", "the", "waiter", "do", "not", "actually", "update", "the", "instance", "object", "NUMBER", "If", "you", "run", "reload", "method", "after", "you", "call", "wait_unitl_running", "do", "the", "state", "actually", "become", "run", "Fixes", "LINK", "Can", "confirm", "it", "works", "as", "well", "py", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "accountId", "In", "NUMBER", "glacier", "boto", "NUMBER", "resource", "glacier", "In", "NUMBER", "account", "glacier", "NUMBER", "Account", "accountId", "In", "NUMBER", "vault_iterator", "account", "NUMBER", "vaults", "NUMBER", "all", "In", "NUMBER", "print", "list", "vault_iterator", "glacier", "NUMBER", "Vault", "account_id", "name", "foo", "cc", "jamesls", "mtdowling", "rayluo", "I", "think", "the", "documentation", "be", "off", "here", "NUMBER", "I", "believe", "that", "a", "list", "of", "instance", "types", "be", "the", "correct", "return", "type", "here", "NUMBER", "I", "be", "having", "trouble", "envisioning", "this", "NUMBER", "Could", "you", "layout", "some", "pseudocode", "of", "how", "this", "function", "would", "look", "Whatever", "be", "returned", "in", "the", "response", "by", "the", "service", "be", "what", "be", "provide", "in", "the", "dictionary", "returned", "by", "a", "client", "call", "NUMBER", "So", "in", "your", "case", "S", "NUMBER", "be", "not", "including", "the", "EmailAddress", "etc", "NUMBER", "in", "the", "response", "because", "the", "ACL", "do", "not", "have", "those", "elements", "NUMBER", "Boto", "NUMBER", "follows", "suit", "with", "the", "response", "from", "the", "service", "in", "that", "it", "will", "only", "include", "elements", "provide", "in", "the", "response", "NUMBER", "We", "will", "not", "auto", "fill", "miss", "response", "elements", "to", "an", "empty", "string", "or", "None", "NUMBER", "Hope", "this", "helps", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "more", "question", "NUMBER", "I", "believe", "it", "be", "there", "for", "legacy", "reasons", "NUMBER", "Setting", "bucket", "ACL", "s", "use", "email", "address", "seems", "somewhat", "discouraged", "by", "s", "NUMBER", "LINK", "overview", "NUMBER", "html", "specify", "grantee", "which", "would", "explain", "why", "it", "be", "not", "include", "their", "sample", "response", "NUMBER", "I", "be", "not", "sure", "if", "I", "feel", "comfortable", "hiding", "the", "documentation", "as", "it", "seems", "that", "a", "user", "can", "get", "an", "EmailAddress", "element", "in", "the", "response", "under", "some", "conditions", "since", "setting", "ACL", "use", "the", "email", "address", "be", "still", "support", "by", "S", "NUMBER", "NUMBER", "The", "finalized", "usage", "be", "documented", "at", "the", "top", "of", "this", "PR", "LINK", "I", "be", "not", "able", "to", "reproduce", "this", "py", "In", "NUMBER", "from", "boto", "NUMBER", "session", "import", "Session", "In", "NUMBER", "session", "Session", "region_name", "us", "west", "NUMBER", "In", "NUMBER", "client", "session", "NUMBER", "resource", "iam", "In", "NUMBER", "user", "client", "NUMBER", "User", "foo", "In", "NUMBER", "user", "NUMBER", "create", "Out", "NUMBER", "iam", "NUMBER", "User", "name", "foo", "However", "based", "on", "your", "debug", "logs", "I", "see", "what", "your", "issue", "be", "NUMBER", "You", "be", "trying", "to", "connect", "to", "LINK", "However", "IAM", "endpoint", "can", "only", "be", "connected", "through", "https", "LINK", "iam_region", "Are", "you", "setting", "an", "endpoint_url", "somewhere", "in", "your", "code", "to", "force", "the", "endpoint", "to", "use", "http", "Yep", "garnaat", "be", "correct", "NUMBER", "The", "describe_regions", "call", "only", "applies", "for", "EC", "NUMBER", "Being", "able", "to", "list", "regions", "for", "a", "specific", "service", "be", "something", "we", "want", "to", "add", "support", "for", "NUMBER", "Thus", "reopening", "the", "issue", "and", "labeling", "it", "as", "a", "feature", "request", "NUMBER", "In", "the", "meantime", "I", "usually", "use", "this", "bit", "of", "documentation", "LINK", "to", "figure", "out", "if", "a", "service", "be", "available", "in", "a", "specific", "region", "NUMBER", "This", "looks", "like", "an", "error", "in", "our", "documentation", "logic", "NUMBER", "Technically", "you", "could", "specify", "InstanceIds", "in", "reboot", "method", "to", "reboot", "multiple", "instances", "as", "that", "method", "be", "mapped", "to", "the", "client", "s", "reboot_instances", "method", "LINK", "EC", "NUMBER", "Client", "NUMBER", "reboot_instances", "NUMBER", "However", "this", "be", "not", "how", "you", "should", "be", "use", "the", "Instance", "NUMBER", "reboot", "method", "as", "it", "automatically", "handles", "the", "passing", "of", "InstanceIds", "parameter", "to", "the", "underlying", "client", "method", "NUMBER", "Also", "to", "go", "on", "top", "of", "what", "jamesls", "said", "you", "can", "avoid", "the", "SSLErrors", "by", "trying", "to", "shorten", "the", "amount", "of", "results", "EC", "NUMBER", "sends", "at", "a", "time", "by", "setting", "the", "PageSize", "parameter", "to", "a", "smaller", "size", "in", "the", "PaginationConfig", "parameter", "NUMBER", "By", "make", "a", "smaller", "page", "size", "you", "shorten", "the", "time", "it", "takes", "for", "EC", "NUMBER", "to", "respond", "because", "you", "be", "decreasing", "the", "amount", "of", "results", "EC", "NUMBER", "needs", "to", "respond", "with", "for", "each", "request", "NUMBER", "I", "be", "unable", "to", "reproduce", "this", "NUMBER", "Here", "be", "what", "I", "be", "trying", "py", "import", "boto", "NUMBER", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "S", "NUMBER", "Transfer", "from", "botocore", "NUMBER", "client", "import", "Config", "client", "boto", "NUMBER", "client", "s", "NUMBER", "config", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "transfer", "S", "NUMBER", "Transfer", "client", "extra_args", "ServerSideEncryption", "aws", "kms", "transfer", "NUMBER", "upload_file", "test", "NUMBER", "py", "mybucketfoo", "test", "NUMBER", "py", "extra_args", "extra_args", "It", "would", "be", "great", "to", "get", "some", "extra", "debugging", "information", "on", "this", "NUMBER", "Could", "you", "add", "this", "line", "right", "before", "you", "call", "transfer", "NUMBER", "upload_file", "method", "boto", "NUMBER", "set_stream_logger", "botocore", "so", "I", "can", "see", "what", "the", "debug", "logs", "look", "like", "NUMBER", "NUMBER", "on", "remove", "NUMBER", "I", "be", "surprised", "an", "error", "be", "not", "throw", "in", "the", "first", "place", "NUMBER", "Also", "this", "looks", "like", "an", "issue", "with", "botocore", "python", "import", "botocore", "NUMBER", "session", "session", "botocore", "NUMBER", "session", "NUMBER", "get_session", "session", "NUMBER", "create_client", "S", "NUMBER", "TAG", "NUMBER", "This", "be", "cause", "by", "the", "same", "reason", "as", "in", "this", "issue", "LINK", "It", "was", "fix", "by", "this", "merge", "PR", "LINK", "This", "fix", "will", "be", "in", "the", "next", "release", "of", "boto", "NUMBER", "Or", "you", "can", "just", "pull", "down", "the", "HEAD", "of", "the", "develop", "branch", "NUMBER", "Closing", "issue", "as", "a", "duplicate", "NUMBER", "Let", "me", "know", "if", "you", "have", "anymore", "question", "or", "issue", "persist", "after", "pulling", "in", "the", "fix", "NUMBER", "The", "create", "tag", "method", "cannot", "be", "expressed", "via", "the", "resource", "model", "because", "you", "need", "to", "map", "a", "set", "of", "tags", "to", "multiple", "resources", "possibly", "and", "return", "a", "list", "of", "each", "tag", "for", "each", "resource", "NUMBER", "In", "order", "to", "preserve", "backward", "compatibility", "a", "new", "custom", "method", "needed", "to", "be", "add", "to", "the", "service", "resource", "NUMBER", "Fixes", "LINK", "cc", "jamesls", "mtdowling", "The", "docs", "be", "fine", "NUMBER", "The", "way", "that", "the", "doc", "system", "works", "be", "that", "it", "checks", "if", "a", "method", "name", "matches", "an", "action", "name", "in", "the", "resource", "model", "NUMBER", "If", "it", "do", "match", "it", "will", "autogenerate", "docs", "for", "that", "method", "and", "in", "this", "case", "the", "custom", "create_tags", "method", "matches", "what", "be", "in", "the", "resource", "model", "so", "its", "docs", "get", "autogenerated", "NUMBER", "jamesls", "mtdowling", "I", "update", "the", "event", "name", "for", "the", "service", "resource", "to", "make", "it", "more", "usable", "NUMBER", "Also", "the", "class", "name", "for", "the", "service", "resource", "was", "update", "along", "with", "the", "create_tags", "method", "NUMBER", "Let", "me", "know", "what", "you", "think", "NUMBER", "jamesls", "I", "guess", "that", "I", "can", "switch", "the", "test", "out", "of", "that", "category", "NUMBER", "I", "want", "to", "keep", "that", "test", "though", "because", "I", "want", "to", "ensure", "that", "the", "custom", "method", "gets", "applied", "to", "the", "service", "resource", "NUMBER", "There", "be", "no", "test", "for", "that", "NUMBER", "I", "be", "leaning", "toward", "against", "add", "an", "integration", "test", "for", "this", "because", "in", "order", "to", "reproduce", "the", "bug", "I", "need", "to", "spin", "up", "more", "than", "one", "ec", "NUMBER", "resources", "apply", "tags", "check", "the", "tags", "be", "there", "and", "then", "clean", "them", "up", "NUMBER", "It", "seems", "that", "this", "would", "be", "test", "the", "service", "more", "than", "the", "actual", "functionality", "of", "the", "customization", "which", "be", "already", "covered", "by", "the", "unit", "test", "NUMBER", "In", "the", "end", "we", "just", "need", "to", "make", "sure", "the", "customization", "overrides", "the", "default", "method", "NUMBER", "This", "also", "raises", "the", "question", "what", "be", "the", "criteria", "for", "what", "goes", "into", "the", "functional", "test", "suit", "The", "functional", "test", "that", "was", "add", "for", "all", "intents", "and", "purposes", "was", "checking", "that", "the", "resource", "had", "the", "appropriate", "method", "which", "be", "what", "a", "bunch", "of", "the", "test", "in", "the", "functional", "test", "suite", "do", "NUMBER", "The", "only", "caveat", "was", "that", "patching", "was", "needed", "to", "determine", "if", "the", "resource", "had", "the", "appropriate", "method", "NUMBER", "Is", "the", "criteria", "that", "to", "be", "in", "the", "functional", "test", "suite", "that", "no", "mock", "s", "or", "patches", "be", "use", "unless", "you", "be", "mocking", "out", "the", "make_request", "call", "and", "be", "test", "the", "end", "to", "end", "functionality", "of", "the", "feature", "Thoughts", "In", "the", "meantime", "I", "made", "the", "change", "to", "switch", "the", "functional", "test", "to", "a", "unit", "test", "NUMBER", "Sounds", "good", "NUMBER", "Thanks", "for", "the", "clarification", "NUMBER", "Merging", "NUMBER", "ship", "SamCyanide", "The", "vpc", "id", "be", "never", "use", "in", "the", "underlying", "client", "method", "LINK", "EC", "NUMBER", "Client", "NUMBER", "authorize_security_group_ingress", "NUMBER", "So", "I", "have", "a", "feeling", "it", "has", "to", "do", "with", "the", "parameters", "that", "you", "be", "sending", "to", "the", "authorize_ingress", "method", "NUMBER", "Can", "you", "provide", "debug", "logs", "of", "the", "request", "you", "made", "You", "can", "do", "so", "by", "add", "boto", "NUMBER", "set_stream_logger", "boto", "NUMBER", "before", "you", "make", "the", "method", "call", "NUMBER", "Also", "as", "a", "check", "you", "can", "make", "sure", "the", "security", "group", "be", "associated", "to", "the", "expected", "vpc", "by", "calling", "securitygroup", "NUMBER", "vpc", "NUMBER", "Let", "me", "know", "how", "that", "works", "as", "well", "NUMBER", "I", "be", "not", "sure", "about", "this", "change", "NUMBER", "If", "we", "add", "a", "new", "feature", "in", "botocore", "NUMBER", "that", "be", "needed", "in", "boto", "NUMBER", "NUMBER", "wouldn", "t", "it", "break", "if", "botocore", "NUMBER", "was", "install", "I", "thought", "the", "plan", "was", "to", "bump", "the", "lower", "limit", "every", "time", "to", "the", "most", "recent", "botocore", "version", "but", "limit", "the", "higher", "limit", "to", "the", "minor", "version", "So", "it", "would", "be", "botocore", "NUMBER", "TAG", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "region_name", "us", "west", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "jamesls", "NUMBER", "bucket", "NUMBER", "with", "NUMBER", "dots", "bucket", "NUMBER", "Tagging", "NUMBER", "tag_set", "u", "Value", "TestValue", "u", "Key", "TestTag", "However", "if", "I", "use", "the", "_wrong_", "region", "say", "us", "east", "NUMBER", "in", "this", "example", "then", "I", "get", "your", "error", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "region_name", "us", "east", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "jamesls", "NUMBER", "bucket", "NUMBER", "with", "NUMBER", "dots", "bucket", "NUMBER", "Tagging", "NUMBER", "tag_set", "Traceback", "most", "recent", "call", "last", "NUMBER", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "PermanentRedirect", "when", "calling", "the", "GetBucketTagging", "operation", "The", "bucket", "you", "be", "attempting", "to", "access", "must", "be", "address", "use", "the", "specified", "endpoint", "NUMBER", "Please", "send", "all", "future", "request", "to", "this", "endpoint", "NUMBER", "You", "can", "confirm", "where", "your", "bucket", "be", "located", "via", "boto", "NUMBER", "client", "s", "NUMBER", "NUMBER", "get_bucket_location", "Bucket", "jamesls", "NUMBER", "bucket", "NUMBER", "with", "NUMBER", "dots", "LocationConstraint", "us", "west", "NUMBER", "This", "PR", "add", "support", "for", "an", "intelligent", "upload_file", "download_file", "method", "for", "boto", "NUMBER", "The", "module", "docstring", "provides", "some", "general", "information", "and", "an", "overview", "of", "how", "to", "use", "the", "module", "NUMBER", "I", "d", "like", "to", "get", "some", "initial", "feedback", "on", "this", "NUMBER", "There", "s", "unit", "integ", "test", "add", "there", "s", "a", "few", "integration", "test", "I", "ve", "haven", "t", "fleshed", "out", "yet", "and", "the", "code", "be", "fully", "functional", "but", "I", "will", "be", "push", "some", "change", "in", "a", "bit", "NUMBER", "There", "be", "two", "change", "I", "plan", "on", "make", "I", "m", "going", "to", "be", "change", "the", "logic", "for", "the", "_download_range", "function", "NUMBER", "The", "single", "lock", "writer", "on", "the", "file", "unnecessarily", "slows", "down", "the", "parallel", "downloads", "NUMBER", "I", "m", "likely", "going", "to", "port", "some", "version", "of", "the", "what", "the", "AWS", "CLI", "do", "to", "improve", "this", "NUMBER", "The", "callback", "interface", "may", "need", "to", "change", "NUMBER", "It", "requires", "a", "lot", "of", "information", "that", "s", "not", "technically", "necessary", "and", "could", "be", "provide", "NUMBER", "It", "also", "doesn", "t", "handle", "retries", "NUMBER", "In", "order", "to", "do", "this", "I", "might", "need", "to", "change", "the", "interface", "from", "a", "simple", "callback", "to", "an", "actual", "class", "that", "has", "a", "few", "required", "methods", "NUMBER", "Also", "the", "socket", "timeouts", "and", "bandwidth", "throttling", "be", "not", "implement", "NUMBER", "Those", "be", "stretch", "features", "I", "might", "end", "up", "deferring", "for", "now", "NUMBER", "There", "will", "also", "be", "another", "pull", "request", "that", "integrates", "this", "with", "the", "s", "NUMBER", "client", "and", "s", "NUMBER", "resource", "objects", "NUMBER", "cc", "kyleknap", "danielgtaylor", "kyleknap", "NUMBER", "I", "ll", "take", "a", "look", "and", "get", "that", "update", "NUMBER", "Not", "oppose", "to", "add", "that", "for", "get_object", "NUMBER", "However", "for", "uploads", "we", "should", "be", "doing", "it", "the", "recommended", "way", "by", "setting", "the", "ContentMD", "NUMBER", "header", "NUMBER", "This", "might", "require", "change", "in", "botocore", "NUMBER", "NUMBER", "That", "be", "already", "possible", "by", "creating", "your", "composite", "object", "that", "has", "a", "list", "of", "callbacks", "that", "it", "internally", "will", "invoke", "when", "its", "call", "NUMBER", "I", "do", "think", "that", "it", "might", "be", "useful", "to", "actually", "provide", "the", "user", "with", "build", "in", "progress", "callbacks", "so", "that", "they", "don", "t", "have", "to", "copy", "paste", "code", "from", "the", "docs", "NUMBER", "kyleknap", "danielgtaylor", "I", "believe", "all", "the", "feedback", "has", "be", "incorporated", "so", "far", "except", "for", "the", "partition", "of", "the", "extra_args", "param", "which", "I", "m", "still", "work", "on", "NUMBER", "I", "ve", "also", "push", "a", "change", "for", "the", "improved", "IO", "writer", "for", "ranged", "gets", "NUMBER", "It", "s", "basically", "the", "CLI", "s", "IOWriter", "thread", "approach", "but", "use", "futures", "NUMBER", "Download", "performance", "be", "_much_", "better", "NUMBER", "Take", "a", "look", "and", "let", "me", "know", "what", "you", "think", "NUMBER", "It", "s", "a", "little", "confusing", "now", "as", "there", "s", "two", "tiers", "of", "executors", "but", "hopefully", "it", "s", "not", "too", "bad", "NUMBER", "Remaining", "work", "x", "ContentMD", "NUMBER", "punting", "to", "the", "botocore", "level", "so", "this", "will", "be", "a", "separate", "PR", "x", "Abort", "upload", "on", "error", "x", "Delete", "downloaded", "object", "on", "error", "x", "Propogate", "uploadpart", "createmultipartupload", "params", "x", "Download", "to", "a", "temporary", "file", "and", "then", "rename", "NUMBER", "x", "Ensure", "good", "error", "message", "on", "failures", "cc", "kyleknap", "danielgtaylor", "anything", "else", "I", "m", "miss", "danielgtaylor", "because", "not", "all", "the", "parameters", "make", "sense", "and", "we", "re", "not", "allowing", "them", "all", "NUMBER", "How", "would", "you", "suggest", "we", "leverage", "the", "model", "in", "that", "scenario", "kyleknap", "danielgtaylor", "Everything", "in", "the", "checklist", "above", "should", "now", "be", "address", "NUMBER", "I", "unfortunately", "had", "to", "change", "a", "decent", "chunk", "of", "code", "to", "handle", "the", "error", "cases", "for", "ranged", "get", "downloads", "properly", "NUMBER", "Let", "me", "know", "if", "there", "s", "any", "feedback", "NUMBER", "I", "m", "not", "able", "to", "repro", "this", "issue", "NUMBER", "Can", "you", "give", "the", "exact", "code", "you", "re", "use", "Here", "s", "exactly", "what", "I", "tried", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "sqs", "boto", "NUMBER", "resource", "sqs", "In", "NUMBER", "q", "sqs", "NUMBER", "get_queue_by_name", "QueueName", "TAG", "In", "NUMBER", "def", "print_messages", "q", "NUMBER", "for", "message", "in", "q", "NUMBER", "receive_messages", "MaxNumberOfMessages", "NUMBER", "NUMBER", "print", "Messages", "message", "NUMBER", "message_id", "message", "NUMBER", "body", "NUMBER", "In", "NUMBER", "print_messages", "q", "Messages", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "f", "NUMBER", "a", "NUMBER", "dGVzdCBtZXNzYWdlIDIyNzM", "NUMBER", "Messages", "fcc", "NUMBER", "c", "NUMBER", "b", "NUMBER", "NUMBER", "a", "ac", "NUMBER", "e", "c", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "dGVzdCBtZXNzYWdlIDQyNzYz", "Messages", "d", "NUMBER", "bbd", "NUMBER", "e", "cb", "NUMBER", "d", "NUMBER", "e", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "c", "NUMBER", "dGVzdCBtZXNzYWdlIDQyNzY", "NUMBER", "Messages", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "a", "NUMBER", "d", "NUMBER", "dGVzdCBtZXNzYWdlIDQyNzYw", "Messages", "NUMBER", "becbb", "NUMBER", "NUMBER", "bb", "NUMBER", "NUMBER", "fa", "NUMBER", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "dGVzdCBtZXNzYWdlIDQyNzc", "NUMBER", "Messages", "NUMBER", "cd", "NUMBER", "cdcf", "c", "NUMBER", "NUMBER", "de", "NUMBER", "b", "NUMBER", "fa", "NUMBER", "cb", "NUMBER", "c", "dGVzdCBtZXNzYWdlIDQyNzg", "NUMBER", "Messages", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "dGVzdCBtZXNzYWdlIDEzNTgw", "Messages", "NUMBER", "ead", "NUMBER", "f", "NUMBER", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "a", "NUMBER", "cde", "NUMBER", "dGVzdCBtZXNzYWdlIDQyNzkx", "Messages", "f", "NUMBER", "c", "NUMBER", "ef", "a", "NUMBER", "NUMBER", "d", "NUMBER", "ffc", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dGVzdCBtZXNzYWdlIDQyODAz", "Messages", "NUMBER", "de", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "dGVzdCBtZXNzYWdlIDQyODEw", "In", "NUMBER", "print_messages", "q", "Messages", "NUMBER", "e", "d", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "cb", "NUMBER", "af", "NUMBER", "dGVzdCBtZXNzYWdlIDQzMjAx", "Messages", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "NUMBER", "dd", "NUMBER", "a", "NUMBER", "af", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "dGVzdCBtZXNzYWdlIDQzMjk", "NUMBER", "Messages", "NUMBER", "fe", "NUMBER", "f", "NUMBER", "a", "NUMBER", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "dGVzdCBtZXNzYWdlIDIyODcx", "Messages", "e", "NUMBER", "da", "NUMBER", "NUMBER", "d", "NUMBER", "b", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "dGVzdCBtZXNzYWdlIDEzNzA", "NUMBER", "Messages", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "dGVzdCBtZXNzYWdlIDQzMjQz", "Messages", "f", "NUMBER", "ee", "NUMBER", "b", "ec", "NUMBER", "e", "NUMBER", "ec", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "dGVzdCBtZXNzYWdlIDQzMjIz", "Messages", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "NUMBER", "ec", "af", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "f", "dGVzdCBtZXNzYWdlIDEzNzEx", "Messages", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "ec", "NUMBER", "a", "dGVzdCBtZXNzYWdlIDQzMjQ", "NUMBER", "Messages", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "a", "a", "NUMBER", "a", "d", "NUMBER", "a", "NUMBER", "dacc", "NUMBER", "a", "NUMBER", "dGVzdCBtZXNzYWdlIDQzMjQ", "NUMBER", "Messages", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "dGVzdCBtZXNzYWdlIDQzMjU", "NUMBER", "In", "NUMBER", "print_messages", "q", "Messages", "NUMBER", "c", "NUMBER", "ce", "ed", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "b", "NUMBER", "dGVzdCBtZXNzYWdlIDQzNTAy", "Messages", "NUMBER", "baa", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "afc", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "dGVzdCBtZXNzYWdlIDIyOTQ", "NUMBER", "Messages", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "fd", "NUMBER", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "d", "dGVzdCBtZXNzYWdlIDIyOTQ", "NUMBER", "Messages", "d", "NUMBER", "dbd", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "c", "a", "NUMBER", "f", "NUMBER", "bb", "NUMBER", "dGVzdCBtZXNzYWdlIDQzNTE", "NUMBER", "Messages", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "dGVzdCBtZXNzYWdlIDQzNTA", "NUMBER", "Messages", "NUMBER", "dce", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "cf", "ab", "NUMBER", "NUMBER", "eecf", "NUMBER", "ebf", "NUMBER", "dGVzdCBtZXNzYWdlIDQzNDc", "NUMBER", "Messages", "ba", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "cd", "NUMBER", "b", "NUMBER", "dGVzdCBtZXNzYWdlIDEzNzg", "NUMBER", "Messages", "NUMBER", "ccb", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "af", "NUMBER", "a", "NUMBER", "dGVzdCBtZXNzYWdlIDQzNDk", "NUMBER", "Messages", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "e", "a", "NUMBER", "ab", "NUMBER", "ffa", "NUMBER", "b", "NUMBER", "a", "NUMBER", "dGVzdCBtZXNzYWdlIDIyOTUx", "Messages", "NUMBER", "ba", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "ad", "NUMBER", "d", "e", "NUMBER", "fcc", "NUMBER", "a", "NUMBER", "dGVzdCBtZXNzYWdlIDEzODAy", "Looks", "like", "we", "re", "waiting", "on", "the", "linked", "botocore", "PR", "to", "get", "merge", "so", "we", "can", "get", "a", "clean", "run", "through", "travis", "ci", "NUMBER", "Also", "can", "you", "please", "update", "the", "NUMBER", "coveragerc", "file", "to", "stop", "omitting", "coverage", "report", "from", "this", "Since", "we", "re", "moving", "forward", "with", "this", "approach", "we", "should", "have", "this", "as", "part", "of", "our", "coverage", "report", "NUMBER", "I", "might", "be", "misunderstanding", "kyleknap", "feedback", "but", "it", "doesn", "t", "seem", "like", "his", "feedback", "was", "address", "NUMBER", "It", "wasn", "t", "about", "use", "constants", "so", "we", "don", "t", "accidently", "typo", "what", "a", "char", "looks", "like", "it", "was", "having", "a", "separate", "layer", "that", "was", "responsible", "for", "what", "the", "specific", "RST", "syntax", "looked", "like", "so", "this", "doc", "module", "be", "all", "about", "the", "logic", "of", "_how_", "the", "documentation", "should", "be", "generate", "without", "having", "to", "worry", "about", "the", "specific", "syntax", "NUMBER", "In", "which", "case", "I", "m", "strongly", "in", "favor", "of", "this", "approach", "NUMBER", "The", "CLI", "mostly", "uses", "this", "approach", "and", "it", "s", "worked", "well", "NUMBER", "At", "the", "very", "least", "we", "should", "adopt", "this", "style", "for", "the", "new", "code", "you", "ve", "add", "NUMBER", "We", "can", "try", "and", "go", "back", "and", "update", "the", "exist", "code", "NUMBER", "I", "think", "for", "me", "it", "comes", "down", "to", "the", "fact", "that", "while", "we", "initially", "thought", "this", "code", "was", "temporary", "it", "s", "stuck", "around", "far", "longer", "than", "we", "thought", "and", "we", "keep", "add", "to", "it", "NUMBER", "At", "this", "point", "I", "think", "we", "need", "to", "just", "do", "the", "due", "diligence", "and", "add", "the", "proper", "abstractions", "test", "code", "and", "pay", "off", "the", "technical", "debt", "NUMBER", "Even", "if", "when", "we", "do", "end", "up", "refactoring", "all", "this", "if", "we", "have", "separate", "and", "decoupled", "parts", "we", "should", "be", "able", "to", "reuse", "and", "pull", "out", "all", "the", "RST", "generation", "code", "since", "it", "won", "t", "be", "dependent", "on", "any", "boto", "NUMBER", "specific", "parts", "NUMBER", "This", "would", "mean", "that", "any", "work", "that", "goes", "into", "cleaning", "this", "code", "up", "won", "t", "be", "lost", "NUMBER", "We", "re", "also", "planning", "on", "hopefully", "use", "as", "much", "as", "we", "can", "for", "the", "botocore", "autogen", "d", "reference", "docs", "and", "potentially", "may", "even", "pull", "some", "of", "this", "code", "down", "into", "botocore", "NUMBER", "cc", "kyleknap", "danielgtaylor", "shipit", "Looks", "good", "some", "small", "suggestions", "but", "otherwise", "looks", "good", "NUMBER", "Not", "sure", "what", "s", "going", "on", "there", "NUMBER", "Could", "you", "try", "the", "following", "to", "see", "if", "it", "works", "python", "import", "boto", "NUMBER", "import", "json", "from", "botocore", "NUMBER", "exception", "import", "ClientError", "from", "pprint", "import", "pprint", "iam", "boto", "NUMBER", "resource", "iam", "cognito", "boto", "NUMBER", "client", "cognito", "identity", "us", "east", "NUMBER", "policy_document", "json", "NUMBER", "dumps", "Version", "NUMBER", "NUMBER", "NUMBER", "Statement", "Effect", "Allow", "Principal", "Federated", "cognito", "identity", "NUMBER", "amazonaws", "NUMBER", "com", "Action", "sts", "AssumeRole", "role", "iam", "NUMBER", "create_role", "RoleName", "SomeRoleName", "AssumeRolePolicyDocument", "policy_document", "pool", "cognito", "NUMBER", "create_identity_pool", "IdentityPoolName", "SomeIdentityPool", "AllowUnauthenticatedIdentities", "True", "try", "cognito", "NUMBER", "set_identity_pool_roles", "IdentityPoolId", "pool", "IdentityPoolId", "Roles", "authenticated", "role", "NUMBER", "arn", "except", "ClientError", "as", "e", "print", "e", "finally", "roles", "cognito", "NUMBER", "get_identity_pool_roles", "IdentityPoolId", "pool", "IdentityPoolId", "pprint", "roles", "cognito", "NUMBER", "delete_identity_pool", "IdentityPoolId", "pool", "IdentityPoolId", "role", "NUMBER", "delete", "If", "not", "please", "set", "the", "debug", "stream", "by", "putting", "the", "following", "line", "after", "the", "imports", "python", "boto", "NUMBER", "set_stream_logger", "botocore", "This", "issue", "be", "be", "close", "due", "to", "inactivity", "This", "change", "makes", "it", "possible", "to", "create", "a", "session", "use", "a", "profile", "name", "which", "was", "previously", "only", "possible", "via", "an", "environment", "variable", "NUMBER", "It", "allows", "you", "to", "create", "clients", "and", "resources", "from", "any", "number", "of", "sessions", "use", "any", "number", "of", "profiles", "NUMBER", "Given", "that", "we", "have", "the", "following", "NUMBER", "aws", "credentials", "ini", "default", "aws_access_key_id", "DEFAULT", "aws_secret_access_key", "SECRET", "NUMBER", "dev", "aws_access_key_id", "DEV", "aws_secret_access_key", "SECRET", "NUMBER", "prod", "aws_access_key_id", "PROD", "aws_secret_access_key", "SECRET", "NUMBER", "You", "can", "do", "the", "following", "python", "import", "boto", "NUMBER", "session", "dev", "boto", "NUMBER", "session", "NUMBER", "Session", "profile_name", "dev", "prod", "boto", "NUMBER", "session", "NUMBER", "Session", "profile_name", "prod", "for", "session", "in", "dev", "prod", "print", "Profile", "session", "NUMBER", "profile", "s", "NUMBER", "session", "NUMBER", "resource", "s", "NUMBER", "for", "bucket", "in", "s", "NUMBER", "buckets", "NUMBER", "all", "print", "bucket", "NUMBER", "name", "print", "It", "be", "also", "possible", "to", "setup", "the", "default", "session", "with", "a", "profile", "python", "import", "boto", "NUMBER", "boto", "NUMBER", "setup_default_session", "profile_name", "dev", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "And", "of", "course", "you", "can", "still", "use", "the", "environment", "variable", "bash", "BOTO_DEFAULT_PROFILE", "dev", "ipython", "import", "boto", "NUMBER", "s", "NUMBER", "dev", "boto", "NUMBER", "resource", "s", "NUMBER", "Once", "a", "session", "be", "created", "the", "profile", "be", "immutable", "NUMBER", "The", "profile_name", "property", "be", "provide", "for", "convenience", "and", "just", "surfaces", "the", "underlying", "Botocore", "session", "s", "profile", "property", "NUMBER", "Why", "not", "provide", "a", "profile", "name", "to", "the", "client", "and", "resource", "methods", "Currently", "there", "be", "no", "easy", "way", "to", "clone", "a", "session", "and", "the", "behavior", "of", "creating", "a", "new", "blank", "session", "from", "one", "which", "may", "have", "customizations", "leads", "to", "possibly", "unintended", "side", "effect", "like", "clients", "without", "the", "proper", "event", "handlers", "registered", "NUMBER", "This", "would", "be", "an", "additive", "change", "should", "we", "want", "to", "revisit", "in", "the", "future", "NUMBER", "At", "this", "point", "the", "change", "in", "this", "commit", "provides", "a", "way", "for", "Boto", "NUMBER", "users", "to", "use", "multiple", "profiles", "without", "resorting", "to", "creating", "their", "own", "Botocore", "sessions", "NUMBER", "I", "m", "definitely", "open", "to", "suggestions", "and", "counter", "argument", "NUMBER", "cc", "jamesls", "kyleknap", "This", "be", "one", "possible", "implementation", "of", "NUMBER", "Merged", "in", "NUMBER", "da", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "abb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "Previously", "certain", "test", "were", "run", "and", "fail", "three", "times", "NUMBER", "This", "fix", "things", "with", "a", "proper", "base", "class", "so", "test", "be", "only", "ever", "executed", "a", "single", "time", "NUMBER", "cc", "jamesls", "kyleknap", "This", "change", "moves", "and", "formalizes", "the", "name", "collision", "logic", "from", "the", "factory", "to", "the", "resource", "model", "NUMBER", "The", "following", "has", "change", "Documentation", "now", "better", "matches", "the", "factory", "output", "NUMBER", "Collision", "renaming", "order", "be", "formalized", "in", "one", "place", "Order", "reserved", "names", "meta", "load", "action", "identifiers", "actions", "subresources", "references", "collections", "and", "then", "attributes", "NUMBER", "Renaming", "resource", "model", "attributes", "methods", "now", "happens", "at", "model", "loading", "time", "rather", "than", "class", "creation", "time", "NUMBER", "The", "way", "this", "works", "be", "by", "creating", "a", "mapping", "of", "type", "name", "tuples", "to", "the", "renamed", "value", "if", "it", "exists", "NUMBER", "Typically", "this", "mapping", "will", "be", "very", "sparse", "and", "it", "s", "fast", "to", "create", "access", "NUMBER", "In", "practice", "we", "currently", "only", "have", "one", "or", "two", "names", "that", "collide", "across", "all", "the", "resource", "models", "NUMBER", "Tests", "have", "be", "update", "some", "of", "which", "needed", "to", "define", "proper", "Botocore", "shapes", "as", "the", "code", "now", "looks", "more", "closely", "at", "those", "at", "model", "load", "time", "NUMBER", "cc", "kyleknap", "jamesls", "jamesls", "kyleknap", "please", "have", "another", "look", "NUMBER", "I", "ve", "add", "more", "test", "and", "fix", "a", "couple", "of", "issue", "NUMBER", "Coverage", "be", "the", "same", "but", "now", "we", "be", "explicitly", "test", "the", "order", "of", "renaming", "and", "use", "the", "DenormalizedStructureBuilder", "from", "Botocore", "NUMBER", "kyleknap", "please", "take", "another", "look", "NUMBER", "I", "ve", "add", "waiters", "to", "the", "renaming", "logic", "remove", "the", "resource_waiter_name", "attribute", "as", "the", "name", "be", "now", "representative", "of", "the", "resource", "waiter", "name", "and", "have", "cleaned", "up", "the", "factory", "a", "bit", "because", "the", "xform_name", "operations", "now", "happen", "in", "the", "model", "instead", "NUMBER", "Docs", "be", "also", "up", "to", "date", "NUMBER", "At", "this", "point", "the", "model", "do", "two", "things", "it", "loads", "the", "JSON", "data", "_and_", "surfaces", "it", "in", "a", "Python", "friendly", "way", "snake", "cased", "names", "and", "handles", "renaming", "so", "there", "be", "no", "duplicates", "NUMBER", "Both", "the", "factory", "and", "docs", "be", "a", "bit", "simpler", "now", "though", "I", "didn", "t", "mess", "much", "with", "docs", "because", "that", "will", "get", "its", "own", "overhaul", "shortly", "NUMBER", "monkeysecurity", "thanks", "for", "the", "feature", "request", "NUMBER", "The", "resource", "JSON", "be", "write", "by", "hand", "so", "it", "has", "yet", "to", "be", "update", "pull", "request", "welcome", "NUMBER", "The", "client", "do", "support", "the", "new", "features", "LINK", "iam", "NUMBER", "Client", "NUMBER", "attach_group_policy", "As", "a", "workaround", "for", "now", "you", "can", "do", "something", "like", "this", "python", "import", "boto", "NUMBER", "iam", "boto", "NUMBER", "resource", "iam", "Do", "stuff", "with", "the", "resources", "NUMBER", "Now", "drop", "down", "to", "the", "client", "client", "iam", "NUMBER", "meta", "NUMBER", "client", "response", "client", "NUMBER", "attach_group_policy", "GroupName", "NUMBER", "PolicyArn", "NUMBER", "monkeysecurity", "unfortunately", "we", "do", "not", "yet", "have", "a", "spec", "document", "NUMBER", "At", "this", "point", "you", "d", "have", "to", "just", "look", "at", "all", "the", "examples", "we", "already", "ship", "and", "try", "to", "learn", "from", "them", "NUMBER", "I", "m", "strongly", "in", "favor", "of", "a", "central", "repository", "for", "these", "file", "along", "with", "good", "documentation", "to", "help", "contributors", "learn", "the", "format", "NUMBER", "a", "NUMBER", "hill", "this", "looks", "like", "a", "bug", "in", "Botocore", "s", "error", "handle", "NUMBER", "Thanks", "for", "report", "tgal", "take", "a", "look", "at", "the", "answer", "in", "LINK", "issuecomment", "NUMBER", "that", "shows", "how", "you", "do", "this", "with", "clients", "NUMBER", "For", "resources", "you", "need", "to", "create", "the", "same", "structure", "and", "do", "something", "like", "python", "mpu", "NUMBER", "complete", "MultipartUpload", "part_info", "We", "be", "work", "on", "some", "documentation", "update", "that", "will", "describe", "the", "input", "parameter", "structure", "as", "well", "as", "the", "output", "response", "structure", "to", "make", "this", "easier", "NUMBER", "tgal", "I", "ve", "gone", "ahead", "and", "add", "an", "integration", "test", "LINK", "as", "part", "of", "NUMBER", "that", "should", "help", "NUMBER", "tgal", "thanks", "for", "report", "this", "NUMBER", "That", "error", "be", "not", "helpful", "at", "all", "and", "if", "we", "could", "change", "it", "to", "be", "a", "bit", "more", "descriptive", "I", "think", "you", "would", "have", "had", "a", "much", "easier", "time", "figuring", "out", "the", "issue", "NUMBER", "FWIW", "part", "of", "the", "reason", "for", "this", "be", "because", "we", "don", "t", "ship", "a", "list", "of", "valid", "endpoints", "for", "each", "service", "with", "the", "SDK", "anymore", "and", "instead", "rely", "on", "endpoint", "heuristics", "LINK", "_endpoints", "NUMBER", "json", "to", "guess", "how", "to", "connect", "to", "an", "endpoint", "NUMBER", "The", "advantage", "of", "this", "be", "that", "you", "don", "t", "need", "to", "update", "your", "SDK", "when", "a", "service", "launches", "in", "a", "new", "region", "assuming", "it", "be", "covered", "by", "an", "exist", "rule", "NUMBER", "tgal", "the", "update", "error", "message", "be", "now", "release", "in", "Boto", "NUMBER", "NUMBER", "This", "change", "be", "for", "the", "issue", "describe", "in", "NUMBER", "and", "update", "the", "model", "based", "on", "the", "output", "of", "the", "propose", "change", "in", "awslabs", "aws", "model", "validators", "NUMBER", "The", "following", "now", "works", "properly", "python", "import", "boto", "NUMBER", "obj", "boto", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "Bucket", "foo", "NUMBER", "Object", "bar", "mpu", "obj", "NUMBER", "initiate_multipart_upload", "part", "mpu", "NUMBER", "MultipartUploadPart", "NUMBER", "print", "part", "NUMBER", "object_key", "foo", "cc", "jamesls", "kyleknap", "kyleknap", "there", "be", "a", "test", "add", "here", "LINK", "model", "validators", "pull", "NUMBER", "file", "diff", "e", "NUMBER", "bf", "NUMBER", "bb", "NUMBER", "a", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "e", "NUMBER", "e", "Part", "of", "the", "advantage", "of", "add", "it", "to", "the", "validator", "be", "that", "each", "SDK", "doesn", "t", "need", "to", "duplicate", "the", "effort", "NUMBER", "Do", "you", "think", "we", "should", "still", "add", "some", "extra", "test", "for", "this", "in", "Boto", "NUMBER", "This", "fix", "NUMBER", "by", "hydrating", "resources", "from", "a", "collection", "with", "a", "JMESPath", "query", "that", "be", "at", "collection", "NUMBER", "resource", "NUMBER", "path", "instead", "of", "collection", "NUMBER", "path", "in", "the", "resource", "model", "NUMBER", "python", "import", "boto", "NUMBER", "for", "o", "in", "boto", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "Bucket", "boto", "NUMBER", "NUMBER", "objects", "NUMBER", "all", "o", "NUMBER", "meta", "NUMBER", "data", "be", "set", "now", "so", "the", "following", "succeeds", "NUMBER", "print", "o", "NUMBER", "size", "cc", "jamesls", "kyleknap", "This", "change", "brings", "back", "behavior", "that", "was", "remove", "in", "Boto", "NUMBER", "NUMBER", "and", "allows", "things", "like", "the", "following", "to", "work", "again", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "obj", "s", "NUMBER", "Object", "bucket", "name", "key", "This", "be", "required", "to", "gain", "direct", "access", "to", "some", "resources", "that", "be", "not", "expose", "as", "subresources", "nor", "references", "think", "something", "like", "sqs", "NUMBER", "Message", "which", "you", "can", "now", "only", "get", "from", "sqs", "NUMBER", "Queue", "url", "NUMBER", "receive_messages", "Message", "NUMBER", "Without", "the", "change", "in", "this", "pull", "request", "there", "be", "no", "way", "to", "instantiate", "a", "message", "instance", "yourself", "NUMBER", "cc", "jamesls", "kyleknap", "This", "looks", "like", "an", "issue", "with", "the", "order", "of", "items", "here", "json", "NUMBER", "Part", "resource", "type", "MultipartUploadPart", "identifiers", "target", "BucketName", "source", "identifier", "name", "BucketName", "target", "MultipartUploadId", "source", "identifier", "name", "Id", "TAG", "TAG", "JobFlowId", "TAG", "string", "TAG", "TAG", "Required", "TAG", "TAG", "TAG", "A", "string", "that", "uniquely", "identifies", "the", "job", "flow", "NUMBER", "This", "identifier", "be", "returned", "by", "RunJobFlow", "and", "can", "also", "be", "obtained", "from", "ListClusters", "TAG", "TAG", "Steps", "TAG", "list", "TAG", "TAG", "Required", "TAG", "TAG", "TAG", "TAG", "A", "list", "of", "StepConfig", "to", "be", "executed", "by", "the", "job", "flow", "NUMBER", "TAG", "TAG", "StepConfig", "structure", "TAG", "TAG", "TAG", "Name", "string", "HadoopJarStep", "Args", "string", "Jar", "string", "MainClass", "string", "Properties", "Key", "string", "Value", "string", "ActionOnFailure", "string", "TAG", "TAG", "TAG", "TAG", "Something", "along", "those", "lines", "above", "but", "it", "s", "still", "not", "clear", "which", "field", "be", "optional", "NUMBER", "Any", "ideas", "you", "have", "would", "be", "appreciated", "NUMBER", "Sorry", "I", "hit", "Cmd", "Enter", "too", "soon", "and", "it", "posted", "with", "only", "half", "an", "example", "before", "It", "s", "also", "worth", "mentioning", "that", "there", "be", "two", "other", "albeit", "slightly", "more", "painful", "methods", "of", "determining", "this", "data", "NUMBER", "The", "easiest", "be", "to", "just", "look", "at", "the", "service", "documentation", "itself", "e", "NUMBER", "g", "LINK", "_AddJobFlowSteps", "NUMBER", "html", "You", "can", "see", "that", "it", "links", "Steps", "NUMBER", "member", "NUMBER", "N", "to", "a", "StepConfig", "LINK", "_StepConfig", "NUMBER", "html", "description", "NUMBER", "It", "s", "not", "perfect", "but", "our", "parameters", "match", "up", "and", "it", "takes", "away", "some", "of", "the", "guesswork", "NUMBER", "The", "other", "method", "be", "to", "use", "the", "JSON", "models", "NUMBER", "For", "example", "here", "be", "the", "definition", "of", "StepConfig", "LINK", "NUMBER", "NUMBER", "normal", "NUMBER", "json", "L", "NUMBER", "L", "NUMBER", "and", "HadoopStepConfig", "LINK", "NUMBER", "NUMBER", "normal", "NUMBER", "json", "L", "NUMBER", "L", "NUMBER", "NUMBER", "Unfortunately", "this", "requires", "understanding", "the", "JSON", "service", "description", "format", "but", "it", "s", "what", "I", "use", "to", "build", "the", "example", "above", "so", "it", "be", "possible", "NUMBER", "Anyway", "my", "ultimate", "goal", "be", "to", "get", "the", "Boto", "NUMBER", "documentation", "update", "so", "that", "all", "of", "the", "request", "and", "response", "structures", "be", "easy", "to", "understand", "NUMBER", "jvilhuber", "this", "has", "be", "add", "in", "an", "update", "to", "Botocore", "NUMBER", "I", "be", "update", "our", "Botocore", "dependency", "and", "doing", "a", "release", "soon", "that", "will", "include", "the", "call", "NUMBER", "As", "a", "workaround", "you", "can", "pip", "install", "U", "botocore", "to", "get", "the", "latest", "models", "until", "I", "do", "the", "release", "NUMBER", "jvilhuber", "whoops", "sorry", "you", "also", "need", "to", "update", "jmespath", "pip", "install", "U", "jmespath", "NUMBER", "The", "symbol", "use", "to", "represent", "the", "root", "element", "be", "only", "support", "as", "of", "version", "NUMBER", "Sorry", "about", "that", "jvilhuber", "this", "has", "now", "be", "release", "as", "part", "of", "Boto", "NUMBER", "NUMBER", "LINK", "NUMBER", "Please", "give", "it", "a", "try", "This", "change", "refactors", "the", "way", "that", "references", "be", "created", "to", "reuse", "the", "exist", "response", "handle", "code", "for", "loading", "resources", "NUMBER", "As", "a", "side", "effect", "this", "support", "plural", "references", "NUMBER", "This", "be", "mainly", "future", "proofing", "and", "remove", "some", "code", "duplication", "NUMBER", "cc", "jamesls", "kyleknap", "kyleknap", "the", "latest", "push", "include", "the", "JMESPath", "data", "member", "fix", "we", "discussed", "yesterday", "and", "update", "test", "NUMBER", "Please", "have", "another", "look", "This", "update", "to", "the", "latest", "resource", "model", "format", "which", "include", "the", "following", "change", "NUMBER", "belongsTo", "references", "be", "now", "named", "has", "NUMBER", "subResources", "be", "replaced", "by", "two", "way", "has", "references", "NUMBER", "Identifier", "and", "parameter", "definitions", "be", "refactored", "source", "be", "now", "one", "of", "name", "path", "or", "value", "sourceType", "be", "now", "source", "A", "new", "source", "of", "input", "be", "add", "for", "user", "supplied", "input", "Our", "interface", "remains", "the", "same", "but", "the", "underlying", "JSON", "file", "have", "change", "and", "our", "factory", "code", "and", "documentation", "be", "somewhat", "simplified", "NUMBER", "The", "code", "that", "handles", "identifiers", "parameters", "be", "a", "bit", "more", "complex", "due", "to", "having", "to", "check", "several", "keys", "in", "the", "dictionary", "based", "on", "the", "source", "NUMBER", "The", "model", "still", "exposes", "subresources", "and", "references", "as", "separate", "concepts", "NUMBER", "Due", "to", "circular", "references", "resource", "instances", "now", "lazy", "load", "the", "subresource", "class", "when", "needed", "NUMBER", "Tests", "and", "documentation", "have", "be", "update", "to", "reflect", "these", "change", "NUMBER", "Note", "Before", "merge", "this", "requires", "a", "JMESPath", "update", "to", "support", "as", "a", "root", "selector", "which", "be", "the", "format", "use", "in", "the", "models", "now", "NUMBER", "cc", "jamesls", "kyleknap", "jamesls", "kyleknap", "code", "be", "update", "NUMBER", "Let", "me", "know", "if", "you", "have", "other", "question", "otherwise", "I", "ll", "merge", "it", "in", "NUMBER", "Code", "coverage", "drop", "be", "likely", "due", "to", "remove", "lines", "NUMBER", "All", "new", "lines", "be", "covered", "but", "the", "few", "uncovered", "lines", "in", "e", "NUMBER", "g", "NUMBER", "boto", "NUMBER", "__init__", "NUMBER", "py", "be", "still", "uncovered", "and", "now", "carry", "more", "weight", "NUMBER", "owenrumney", "this", "be", "really", "not", "obvious", "from", "the", "documentation", "so", "it", "took", "me", "a", "few", "try", "to", "get", "right", "NUMBER", "Multipart", "uploads", "require", "information", "about", "each", "part", "when", "you", "try", "to", "complete", "the", "upload", "NUMBER", "This", "be", "how", "you", "can", "accomplish", "it", "python", "import", "boto", "NUMBER", "bucket", "my", "bucket", "key", "mp", "test", "NUMBER", "txt", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "Initiate", "the", "multipart", "upload", "and", "send", "the", "part", "s", "mpu", "s", "NUMBER", "create_multipart_upload", "Bucket", "bucket", "Key", "key", "part", "NUMBER", "s", "NUMBER", "upload_part", "Bucket", "bucket", "Key", "key", "PartNumber", "NUMBER", "UploadId", "mpu", "UploadId", "Body", "Hello", "world", "Next", "we", "need", "to", "gather", "information", "about", "each", "part", "to", "complete", "the", "upload", "NUMBER", "Needed", "be", "the", "part", "number", "and", "ETag", "NUMBER", "part_info", "Parts", "PartNumber", "NUMBER", "ETag", "part", "ETag", "Now", "the", "upload", "works", "s", "NUMBER", "complete_multipart_upload", "Bucket", "bucket", "Key", "key", "UploadId", "mpu", "UploadId", "MultipartUpload", "part_info", "I", "ll", "see", "what", "can", "be", "do", "about", "update", "the", "documentation", "upstream", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "other", "question", "Also", "you", "can", "enable", "low", "level", "logging", "at", "any", "time", "with", "this", "python", "boto", "NUMBER", "set_stream_logger", "name", "botocore", "amattie", "could", "you", "turn", "on", "debug", "output", "Try", "this", "python", "import", "boto", "NUMBER", "Turn", "on", "high", "level", "logging", "boto", "NUMBER", "set_stream_logger", "name", "boto", "NUMBER", "Turn", "on", "low", "level", "and", "wire", "logging", "boto", "NUMBER", "set_stream_logger", "name", "botocore", "Do", "the", "request", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "s", "NUMBER", "Bucket", "foo", "NUMBER", "Object", "bar", "NUMBER", "put", "Body", "b", "test", "This", "should", "show", "some", "information", "about", "how", "the", "signature", "be", "be", "calculated", "and", "why", "you", "might", "be", "seeing", "the", "error", "response", "NUMBER", "Please", "remember", "to", "scrub", "any", "personal", "information", "before", "you", "paste", "the", "log", "output", "your", "AWS", "secret", "key", "be", "never", "logged", "but", "S", "NUMBER", "bucket", "object", "names", "and", "such", "might", "be", "important", "to", "hide", "NUMBER", "amattie", "were", "you", "able", "to", "gather", "any", "more", "information", "about", "this", "issue", "amattie", "I", "have", "not", "gotten", "any", "responses", "in", "a", "few", "weeks", "and", "Boto", "NUMBER", "NUMBER", "LINK", "went", "out", "today", "which", "include", "a", "bunch", "of", "bug", "fix", "so", "I", "m", "going", "to", "go", "ahead", "and", "close", "this", "issue", "NUMBER", "Please", "do", "reopen", "it", "if", "the", "issue", "be", "still", "a", "problem", "and", "you", "can", "give", "me", "more", "information", "to", "help", "debug", "the", "issue", "NUMBER", "This", "looks", "like", "an", "outdate", "or", "incorrect", "model", "in", "Botocore", "NUMBER", "I", "m", "leaving", "this", "open", "so", "we", "can", "track", "when", "the", "fix", "will", "be", "available", "in", "a", "Boto", "NUMBER", "release", "but", "let", "s", "continue", "discussions", "on", "the", "Botocore", "ticket", "NUMBER", "This", "has", "be", "add", "to", "Botocore", "and", "will", "be", "include", "in", "the", "next", "Boto", "NUMBER", "release", "NUMBER", "kingb", "understood", "NUMBER", "I", "m", "trying", "to", "get", "NUMBER", "merge", "in", "update", "our", "Botocore", "dependency", "and", "then", "get", "ready", "to", "do", "a", "release", "soon", "NUMBER", "kingb", "this", "be", "now", "release", "with", "Boto", "NUMBER", "NUMBER", "LINK", "NUMBER", "This", "change", "the", "behavior", "of", "the", "meta", "object", "in", "a", "backward", "incompatible", "way", "NUMBER", "It", "goes", "from", "be", "a", "dict", "to", "an", "instance", "of", "a", "ResourceMeta", "class", "NUMBER", "Example", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "The", "old", "way", "s", "NUMBER", "meta", "service_name", "s", "NUMBER", "meta", "client", "The", "new", "way", "s", "NUMBER", "meta", "NUMBER", "service_name", "s", "NUMBER", "meta", "NUMBER", "client", "cc", "jamesls", "kyleknap", "LGTM", "ship", "it", "LGTM", "ship", "it", "Since", "Botocore", "be", "now", "use", "to", "load", "data", "for", "Boto", "NUMBER", "there", "be", "no", "more", "need", "in", "the", "exist", "codebase", "for", "the", "six", "module", "NUMBER", "This", "commit", "remove", "it", "and", "remove", "the", "boto", "NUMBER", "compat", "module", "NUMBER", "We", "can", "re", "add", "it", "in", "the", "future", "if", "it", "be", "needed", "NUMBER", "This", "would", "be", "pull", "instead", "of", "NUMBER", "cc", "jamesls", "kyleknap", "bosr", "bosr", "thanks", "for", "the", "pull", "request", "I", "ve", "looked", "into", "this", "a", "bit", "more", "and", "it", "turns", "out", "I", "m", "not", "even", "use", "six", "anymore", "since", "moving", "to", "use", "Botocore", "for", "data", "loading", "in", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "d", "NUMBER", "acb", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "I", "think", "that", "I", "m", "just", "going", "to", "remove", "the", "dependency", "on", "six", "completely", "and", "if", "we", "need", "it", "in", "the", "future", "we", "can", "expose", "it", "via", "the", "version", "that", "ships", "with", "Botocore", "NUMBER", "spgta", "first", "I", "would", "double", "check", "and", "make", "sure", "the", "same", "credentials", "be", "be", "use", "and", "also", "make", "sure", "you", "be", "use", "the", "latest", "release", "of", "Boto", "NUMBER", "as", "it", "include", "some", "fix", "for", "KMS", "parameter", "serialization", "NUMBER", "Next", "you", "can", "enable", "a", "debug", "wire", "log", "via", "this", "python", "import", "boto", "NUMBER", "boto", "NUMBER", "set_stream_logger", "name", "botocore", "Now", "call", "your", "function", "The", "output", "will", "tell", "you", "more", "about", "what", "be", "be", "sent", "in", "the", "request", "and", "how", "they", "might", "differ", "NUMBER", "If", "you", "post", "any", "of", "it", "here", "be", "sure", "to", "sanitize", "it", "and", "remove", "any", "personal", "information", "NUMBER", "Confirmed", "that", "this", "be", "an", "issue", "NUMBER", "I", "m", "looking", "into", "the", "problem", "today", "NUMBER", "This", "be", "a", "bug", "in", "Botocore", "NUMBER", "The", "low", "level", "client", "interface", "do", "not", "fire", "the", "event", "that", "be", "expected", "to", "override", "the", "signatures", "so", "the", "handler", "never", "gets", "invoked", "NUMBER", "I", "m", "work", "on", "some", "change", "that", "will", "address", "this", "issue", "NUMBER", "owenrumney", "there", "isn", "t", "a", "simple", "workaround", "like", "that", "available", "yet", "with", "the", "low", "level", "client", "interface", "however", "you", "could", "force", "it", "by", "update", "the", "JSON", "model", "e", "NUMBER", "g", "NUMBER", "by", "setting", "s", "NUMBER", "to", "s", "NUMBER", "v", "NUMBER", "here", "LINK", "NUMBER", "NUMBER", "normal", "NUMBER", "json", "L", "NUMBER", "This", "should", "be", "fix", "soon", "but", "be", "requiring", "some", "major", "refactoring", "and", "rewriting", "of", "Botocore", "components", "NUMBER", "I", "ll", "update", "this", "and", "a", "couple", "other", "issue", "when", "Botocore", "be", "good", "to", "go", "and", "Boto", "NUMBER", "has", "a", "release", "out", "with", "those", "fix", "include", "NUMBER", "This", "has", "now", "be", "merge", "into", "Botocore", "and", "be", "pending", "release", "schakraborty", "bit", "NUMBER", "broamski", "owenrumney", "the", "fix", "for", "this", "has", "be", "release", "as", "part", "of", "Boto", "NUMBER", "NUMBER", "LINK", "NUMBER", "At", "the", "moment", "there", "be", "no", "such", "functionality", "in", "Boto", "NUMBER", "however", "future", "hand", "write", "customizations", "could", "provide", "something", "similar", "NUMBER", "This", "pull", "request", "modifies", "the", "guide", "and", "generate", "reference", "documentation", "to", "make", "it", "more", "obvious", "that", "operation", "parameters", "need", "to", "be", "pass", "as", "keyword", "argument", "rather", "than", "positional", "argument", "NUMBER", "It", "do", "the", "following", "Update", "the", "guide", "to", "explicitly", "call", "out", "that", "keyword", "argument", "must", "be", "use", "instead", "of", "positional", "argument", "NUMBER", "Update", "reference", "documentation", "for", "operations", "to", "List", "all", "argument", "as", "keyword", "argument", "i", "NUMBER", "e", "NUMBER", "MyArg", "None", "Show", "an", "example", "with", "all", "required", "argument", "Specify", "whether", "a", "parameter", "be", "optional", "or", "required", "after", "its", "type", "This", "should", "help", "prevent", "issue", "like", "NUMBER", "Before", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "pm", "LINK", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "f", "NUMBER", "de", "NUMBER", "e", "NUMBER", "png", "After", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "pm", "LINK", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "ffd", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "png", "This", "also", "benefits", "resources", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "pm", "LINK", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "cfc", "NUMBER", "de", "NUMBER", "dcd", "NUMBER", "png", "cc", "jamesls", "kyleknap", "This", "add", "integration", "test", "that", "exercise", "previously", "untested", "functionality", "specifically", "this", "add", "the", "following", "to", "the", "exist", "describe", "calls", "Create", "and", "delete", "remote", "resources", "Call", "actions", "to", "put", "and", "get", "data", "from", "remote", "resources", "Handle", "low", "level", "responses", "from", "a", "service", "Exercise", "low", "level", "waiters", "to", "be", "replaced", "with", "high", "level", "waiters", "Access", "data", "attributes", "of", "pre", "loaded", "resources", "with", "no", "load", "method", "The", "last", "item", "would", "have", "prevented", "NUMBER", "This", "PR", "be", "relate", "to", "NUMBER", "which", "fix", "the", "underlying", "issue", "that", "this", "test", "would", "have", "caught", "NUMBER", "The", "full", "integration", "test", "suite", "now", "takes", "around", "NUMBER", "NUMBER", "seconds", "on", "my", "machine", "NUMBER", "cc", "jamesls", "kyleknap", "owenrumney", "when", "passing", "parameters", "to", "clients", "they", "must", "be", "pass", "as", "keyword", "argument", "NUMBER", "For", "example", "python", "import", "boto", "NUMBER", "kms", "boto", "NUMBER", "client", "kms", "response", "kms", "NUMBER", "generate_data_key", "KeyId", "my_data_key_alias", "See", "LINK", "kms", "NUMBER", "Client", "NUMBER", "generate_data_key", "Since", "this", "was", "unclear", "do", "you", "have", "an", "idea", "of", "where", "how", "it", "makes", "sense", "to", "update", "the", "documentation", "to", "make", "this", "more", "obvious", "owenrumney", "please", "take", "a", "look", "at", "NUMBER", "and", "let", "me", "know", "if", "you", "have", "any", "feedback", "NUMBER", "Thanks", "This", "change", "add", "support", "for", "the", "latest", "version", "of", "the", "JSON", "description", "file", "for", "resources", "NUMBER", "The", "following", "has", "change", "NUMBER", "An", "action", "s", "NUMBER", "path", "has", "be", "moved", "into", "NUMBER", "resource", "NUMBER", "path", "if", "a", "resource", "be", "present", "NUMBER", "If", "it", "be", "present", "then", "a", "path", "outside", "of", "the", "resource", "be", "no", "longer", "valid", "NUMBER", "This", "fix", "NUMBER", "NUMBER", "Sub", "resources", "previously", "defined", "with", "either", "hasOne", "or", "hasMany", "be", "now", "defined", "with", "a", "single", "belongsTo", "key", "NUMBER", "The", "internal", "Boto", "NUMBER", "representation", "however", "remains", "the", "same", "and", "be", "accessed", "via", "resource", "NUMBER", "references", "NUMBER", "As", "a", "result", "of", "the", "format", "change", "I", "had", "to", "update", "the", "internal", "resource", "model", "adjust", "the", "search", "path", "behavior", "for", "actions", "and", "update", "various", "test", "that", "made", "assumptions", "about", "the", "older", "format", "NUMBER", "I", "also", "discover", "that", "we", "were", "use", "a", "mix", "of", "old", "and", "new", "file", "for", "different", "services", "so", "this", "change", "include", "update", "to", "EC", "NUMBER", "and", "Glacier", "so", "that", "all", "resources", "be", "use", "the", "new", "format", "NUMBER", "With", "this", "change", "we", "no", "longer", "support", "the", "older", "format", "NUMBER", "cc", "jamesls", "kyleknap", "Confirmed", "NUMBER", "I", "m", "looking", "into", "what", "be", "happening", "here", "with", "the", "NUMBER", "meta", "data", "member", "not", "be", "set", "up", "correctly", "when", "autoloading", "resources", "from", "a", "response", "NUMBER", "zen", "NUMBER", "ever", "this", "regression", "be", "due", "to", "a", "change", "in", "the", "underlying", "resource", "description", "JSON", "format", "NUMBER", "It", "was", "not", "caught", "by", "exist", "test", "because", "NUMBER", "The", "test", "assumed", "the", "older", "version", "of", "the", "format", "NUMBER", "NUMBER", "The", "new", "format", "only", "moved", "a", "path", "value", "in", "certain", "conditions", "in", "other", "conditions", "it", "be", "still", "valid", "as", "be", "NUMBER", "This", "be", "why", "most", "things", "continue", "to", "just", "work", "NUMBER", "NUMBER", "The", "collection", "relate", "integration", "test", "only", "use", "identifiers", "not", "resource", "data", "members", "NUMBER", "I", "be", "work", "on", "a", "fix", "locally", "and", "will", "put", "up", "a", "pull", "request", "shortly", "NUMBER", "This", "change", "implement", "batch", "actions", "on", "collections", "python", "s", "NUMBER", "Bucket", "boto", "NUMBER", "NUMBER", "objects", "NUMBER", "delete", "It", "do", "the", "following", "Create", "a", "CollectionFactory", "class", "to", "generate", "subclasses", "of", "CollectionManager", "and", "ResourceCollection", "NUMBER", "Update", "the", "ResourceFactory", "to", "use", "the", "new", "CollectionFactory", "NUMBER", "Add", "a", "public", "pages", "method", "to", "collections", "NUMBER", "This", "returns", "entire", "pages", "of", "resource", "instances", "and", "it", "use", "by", "__iter__", "as", "well", "NUMBER", "Add", "batch", "actions", "as", "methods", "via", "the", "new", "CollectionFactory", "NUMBER", "Add", "a", "BatchAction", "subclass", "of", "Action", "which", "do", "the", "following", "NUMBER", "Get", "a", "page", "of", "results", "from", "the", "collection", "s", "operation", "NUMBER", "Build", "parameters", "for", "the", "batch", "action", "operation", "NUMBER", "Call", "the", "batch", "action", "operation", "NUMBER", "Repeat", "until", "no", "more", "pages", "Makes", "some", "previously", "public", "members", "private", "on", "Action", "as", "these", "should", "never", "have", "be", "public", "NUMBER", "Update", "documentation", "to", "include", "collection", "classes", "NUMBER", "Fix", "a", "couple", "minor", "documentation", "issue", "NUMBER", "Add", "test", "to", "cover", "the", "new", "functionality", "NUMBER", "cc", "jamesls", "kyleknap", "kyleknap", "I", "ve", "rebased", "onto", "the", "latest", "develop", "and", "add", "a", "test", "to", "ensure", "page_size", "be", "adhered", "to", "when", "calling", "NUMBER", "pages", "NUMBER", "bilalaslam", "this", "appears", "to", "be", "a", "bug", "in", "Botocore", "where", "the", "CiphertextBlob", "should", "automatically", "be", "base", "NUMBER", "encoded", "NUMBER", "For", "example", "this", "appears", "to", "work", "for", "me", "python", "import", "base", "NUMBER", "kms", "NUMBER", "decrypt", "CiphertextBlob", "base", "NUMBER", "b", "NUMBER", "encode", "result", "CiphertextBlob", "NUMBER", "decode", "utf", "NUMBER", "You", "can", "use", "that", "as", "a", "workaround", "for", "now", "but", "once", "we", "make", "the", "underlying", "fix", "you", "ll", "need", "to", "remove", "the", "manual", "base", "NUMBER", "encoding", "NUMBER", "spgta", "do", "the", "workaround", "work", "for", "you", "This", "should", "get", "fix", "in", "Botocore", "soon", "NUMBER", "spgta", "jstnblau", "bilalaslam", "this", "should", "be", "fix", "upstream", "with", "boto", "botocore", "NUMBER", "which", "was", "just", "merge", "NUMBER", "It", "ll", "go", "out", "with", "the", "next", "release", "NUMBER", "Released", "in", "version", "NUMBER", "jvilhuber", "this", "be", "currently", "not", "possible", "and", "appears", "to", "be", "a", "bug", "NUMBER", "The", "current", "plan", "be", "to", "make", "a", "customization", "to", "fix", "this", "in", "Botocore", "and", "then", "the", "call", "should", "just", "work", "without", "any", "change", "on", "your", "part", "NUMBER", "This", "has", "now", "be", "merge", "into", "Botocore", "and", "be", "pending", "release", "jvilhuber", "the", "fix", "be", "release", "in", "Boto", "NUMBER", "NUMBER", "LINK", "NUMBER", "LGTM", "ship", "it", "Tenzer", "this", "be", "a", "great", "question", "NUMBER", "I", "don", "t", "have", "an", "answer", "yet", "but", "wanted", "to", "let", "you", "know", "that", "I", "m", "looking", "into", "the", "issue", "NUMBER", "The", "problem", "be", "that", "it", "be", "implement", "as", "a", "customization", "in", "the", "AWS", "CLI", "LINK", "cli", "blob", "develop", "awscli", "customizations", "route", "NUMBER", "resourceid", "NUMBER", "py", "rather", "than", "in", "Botocore", "which", "means", "it", "isn", "t", "available", "to", "Boto", "NUMBER", "at", "the", "moment", "NUMBER", "We", "be", "going", "to", "move", "that", "customization", "into", "Botocore", "in", "the", "near", "future", "so", "that", "both", "the", "AWS", "CLI", "and", "Boto", "NUMBER", "can", "make", "use", "of", "it", "and", "then", "your", "model", "should", "just", "work", "NUMBER", "As", "a", "workaround", "today", "that", "will", "let", "you", "continue", "test", "your", "model", "you", "could", "do", "something", "like", "this", "python", "import", "botocore", "NUMBER", "session", "import", "boto", "NUMBER", "First", "setup", "the", "Botocore", "session", "and", "customization", "NUMBER", "The", "method", "below", "be", "copied", "from", "the", "AWS", "CLI", "NUMBER", "session", "botocore", "NUMBER", "session", "NUMBER", "get_session", "session", "NUMBER", "register", "process", "cli", "arg", "NUMBER", "route", "NUMBER", "_check_for_resource_id", "def", "_check_for_resource_id", "param", "value", "kwargs", "if", "param", "NUMBER", "name", "in", "ResourceId", "DelegationSetId", "orig_value", "value", "value", "value", "NUMBER", "split", "NUMBER", "return", "value", "Then", "tell", "Boto", "NUMBER", "to", "use", "it", "boto", "NUMBER", "setup_default_session", "botocore_session", "session", "Now", "you", "can", "create", "your", "resource", "route", "NUMBER", "boto", "NUMBER", "resource", "route", "NUMBER", "The", "fix", "has", "be", "merge", "upstream", "with", "boto", "botocore", "NUMBER", "and", "will", "go", "out", "in", "the", "next", "release", "NUMBER", "Released", "in", "NUMBER", "This", "add", "definitions", "to", "the", "internal", "resource", "model", "to", "handle", "batch", "actions", "and", "waiters", "both", "of", "which", "be", "recent", "additions", "to", "the", "resource", "JSON", "format", "NUMBER", "This", "change", "be", "a", "prerequisite", "to", "add", "support", "for", "these", "features", "in", "the", "resource", "class", "factory", "NUMBER", "Tests", "be", "add", "for", "the", "new", "model", "features", "NUMBER", "cc", "jamesls", "kyleknap", "This", "helps", "to", "fix", "some", "confusion", "seen", "in", "NUMBER", "where", "it", "wasn", "t", "obvious", "how", "to", "create", "an", "ELB", "client", "NUMBER", "New", "output", "looks", "similar", "to", "this", "class", "opsworks", "NUMBER", "Client", "A", "low", "level", "client", "representing", "AWS", "OpsWorks", "python", "import", "boto", "NUMBER", "opsworks", "boto", "NUMBER", "client", "opsworks", "The", "same", "be", "do", "for", "all", "clients", "service", "resources", "and", "resource", "objects", "NUMBER", "For", "example", "it", "shows", "you", "how", "to", "construct", "an", "S", "NUMBER", "Object", "as", "well", "use", "its", "identifiers", "NUMBER", "cc", "jamesls", "kyleknap", "This", "attempts", "to", "get", "the", "first", "page", "of", "results", "from", "every", "collection", "expose", "through", "a", "service", "e", "NUMBER", "g", "NUMBER", "S", "NUMBER", "buckets", "EC", "NUMBER", "instances", "etc", "NUMBER", "SQS", "dead", "letter", "queues", "be", "skipped", "because", "they", "require", "a", "parameter", "and", "we", "skip", "an", "EC", "NUMBER", "collection", "that", "takes", "NUMBER", "seconds", "because", "it", "s", "a", "huge", "response", "NUMBER", "cc", "jamesls", "kyleknap", "monkeysecurity", "ELB", "do", "not", "yet", "have", "a", "resource", "description", "so", "only", "a", "low", "level", "client", "be", "available", "python", "elb", "boto", "NUMBER", "client", "elb", "Here", "you", "can", "see", "the", "latest", "available", "resources", "LINK", "which", "will", "grow", "over", "time", "NUMBER", "monkeysecurity", "glad", "to", "hear", "you", "be", "excited", "Does", "NUMBER", "help", "to", "make", "this", "more", "clear", "Updates", "to", "the", "latest", "Botocore", "and", "JMESPath", "taking", "into", "account", "the", "backward", "incompatible", "waiter", "change", "NUMBER", "cc", "jamesls", "kyleknap", "This", "sets", "a", "custom", "user", "agent", "string", "if", "the", "underlying", "Botocore", "session", "hasn", "t", "had", "its", "user", "agent", "string", "customized", "NUMBER", "cc", "jamesls", "kyleknap", "jamesls", "kyleknap", "I", "ve", "update", "this", "pull", "request", "with", "the", "following", "NUMBER", "Move", "import", "boto", "NUMBER", "to", "the", "top", "of", "the", "file", "NUMBER", "Make", "the", "test", "more", "explicit", "NUMBER", "Add", "a", "test", "to", "ensure", "a", "customized", "user", "agent", "be", "left", "alone", "Mind", "taking", "another", "look", "zen", "NUMBER", "ever", "unfortunately", "this", "isn", "t", "expose", "in", "this", "way", "yet", "but", "I", "do", "think", "it", "s", "something", "we", "should", "add", "NUMBER", "Here", "be", "a", "couple", "of", "workarounds", "that", "work", "right", "now", "NUMBER", "Set", "the", "BOTO_DEFAULT_PROFILE", "environment", "variable", "to", "the", "name", "of", "the", "profile", "NUMBER", "Docs", "for", "env", "vars", "LINK", "environment", "variables", "NUMBER", "Use", "your", "own", "Botocore", "session", "python", "import", "botocore", "NUMBER", "session", "import", "boto", "NUMBER", "Set", "your", "profile", "name", "on", "a", "low", "level", "Botocore", "session", "session", "botocore", "NUMBER", "session", "NUMBER", "get_session", "session", "NUMBER", "profile", "my", "profile", "name", "Tell", "Boto", "NUMBER", "to", "use", "that", "session", "by", "default", "boto", "NUMBER", "setup_default_session", "botocore_session", "session", "Now", "create", "a", "resource", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "Piping", "a", "profile", "name", "in", "through", "the", "client", "and", "resource", "calls", "will", "require", "some", "change", "on", "the", "Botocore", "side", "so", "I", "ll", "investigate", "how", "best", "to", "approach", "this", "NUMBER", "Thanks", "for", "the", "feedback", "and", "sorry", "I", "overlooked", "this", "use", "case", "NUMBER", "zen", "NUMBER", "ever", "it", "s", "now", "possible", "to", "set", "a", "profile", "name", "without", "dropping", "down", "to", "Botocore", "sessions", "NUMBER", "Please", "take", "a", "look", "at", "the", "docs", "in", "NUMBER", "and", "let", "me", "know", "if", "you", "have", "any", "other", "question", "Thanks", "NUMBER", "This", "add", "proper", "reverse", "JMESPath", "support", "so", "that", "we", "can", "now", "build", "all", "parameters", "properly", "NUMBER", "The", "following", "did", "not", "work", "before", "but", "do", "now", "because", "we", "can", "build", "up", "the", "filters", "array", "structure", "python", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "instances", "ec", "NUMBER", "instances", "NUMBER", "filter", "Filters", "Name", "instance", "type", "Values", "m", "NUMBER", "small", "for", "instance", "in", "instances", "print", "instance", "NUMBER", "id", "Tests", "be", "add", "to", "cover", "the", "various", "cases", "of", "dict", "and", "list", "combinations", "NUMBER", "cc", "jamesls", "kyleknap", "This", "add", "documentation", "for", "references", "e", "NUMBER", "g", "NUMBER", "an", "EC", "NUMBER", "instance", "has", "a", "vpc", "and", "a", "subnet", "reference", "NUMBER", "This", "also", "documents", "reverse", "references", "discover", "through", "the", "subResources", "association", "such", "as", "an", "S", "NUMBER", "object", "having", "a", "bucket", "reference", "NUMBER", "Previously", "these", "were", "not", "documented", "NUMBER", "Note", "this", "do", "not", "take", "in", "to", "account", "NUMBER", "but", "will", "be", "modify", "to", "do", "so", "in", "the", "future", "NUMBER", "Right", "now", "only", "one", "reference", "be", "affected", "VpcPeeringConnection", "NUMBER", "vpc", "has", "be", "renamed", "to", "VpcPeeringConnection", "NUMBER", "vpc_reference", "but", "this", "be", "not", "reflected", "in", "the", "docs", "yet", "NUMBER", "It", "s", "on", "my", "short", "list", "to", "fix", "but", "requires", "larger", "change", "to", "the", "codebase", "NUMBER", "cc", "jamesls", "kyleknap", "This", "be", "a", "workaround", "to", "fix", "a", "couple", "of", "exist", "issue", "and", "hopefully", "mitigate", "future", "problem", "with", "the", "resource", "JSON", "descriptions", "NUMBER", "It", "be", "only", "a", "partial", "fix", "and", "do", "not", "update", "docs", "but", "currently", "only", "two", "issue", "exist", "NUMBER", "ec", "NUMBER", "RouteTable", "NUMBER", "associations", "be", "defined", "both", "as", "an", "attribute", "via", "its", "shape", "and", "via", "a", "hasMany", "collection", "NUMBER", "The", "collection", "be", "renamed", "to", "associations_collection", "NUMBER", "NUMBER", "ec", "NUMBER", "VpcPeeringConnection", "NUMBER", "vpc", "be", "defined", "both", "as", "an", "attribute", "via", "its", "shape", "and", "via", "a", "hasOne", "reference", "NUMBER", "The", "reference", "be", "renamed", "to", "vpc_reference", "NUMBER", "Tests", "have", "be", "update", "to", "take", "this", "renaming", "into", "account", "and", "a", "warning", "be", "logged", "each", "time", "we", "rename", "something", "so", "we", "can", "use", "that", "in", "the", "future", "for", "auditing", "the", "resource", "JSON", "file", "NUMBER", "The", "issue", "above", "were", "find", "by", "a", "new", "test", "which", "just", "instantiates", "each", "resource", "to", "ensure", "it", "s", "possible", "NUMBER", "Apparently", "Botocore", "do", "not", "support", "Glacier", "yet", "so", "I", "skip", "that", "one", "NUMBER", "cc", "jamesls", "kyleknap", "Oh", "and", "in", "the", "very", "near", "future", "I", "want", "to", "move", "this", "logic", "into", "the", "model", "NUMBER", "For", "now", "this", "fix", "it", "and", "let", "s", "us", "consider", "a", "release", "NUMBER", "kyleknap", "part", "of", "the", "complication", "of", "moving", "this", "to", "the", "model", "be", "that", "the", "model", "has", "no", "information", "about", "the", "shape", "of", "the", "resource", "except", "the", "shape", "name", "NUMBER", "For", "example", "if", "the", "low", "level", "shape", "defines", "a", "member", "call", "vpc", "instead", "of", "vpc_id", "and", "then", "the", "resource", "model", "contains", "the", "vpc", "reference", "you", "need", "all", "of", "that", "information", "to", "determine", "that", "there", "was", "a", "collision", "NUMBER", "We", "ll", "need", "to", "think", "about", "how", "to", "implement", "this", "in", "a", "sane", "way", "NUMBER", "Also", "sets", "the", "region", "via", "NUMBER", "aws", "config", "instead", "of", "environment", "variables", "in", "the", "quick", "start", "guide", "NUMBER", "cc", "jamesls", "kyleknap", "This", "helps", "with", "debugging", "potential", "model", "issue", "until", "we", "have", "a", "good", "way", "of", "linting", "the", "models", "for", "such", "issue", "NUMBER", "Specifically", "this", "add", "the", "category", "e", "NUMBER", "g", "NUMBER", "identifier", "attribute", "action", "collection", "etc", "and", "the", "affected", "resource", "name", "NUMBER", "Before", "ValueError", "Identifier", "user", "would", "clobber", "exist", "resource", "attribute", "After", "ValueError", "reference", "user", "would", "clobber", "exist", "VirtualMfaDevice", "resource", "attribute", "cc", "jamesls", "kyleknap", "Right", "the", "test", "just", "check", "the", "exception", "type", "right", "now", "so", "I", "ll", "add", "that", "NUMBER", "cc", "jamesls", "kyleknap", "This", "change", "implement", "a", "documentation", "generator", "that", "be", "capable", "of", "documenting", "both", "low", "level", "clients", "and", "high", "level", "resource", "objects", "based", "on", "their", "JSON", "description", "formats", "NUMBER", "The", "output", "be", "RST", "which", "be", "in", "turn", "use", "by", "Sphinx", "to", "generate", "HTML", "PDF", "etc", "on", "ReadTheDocs", "NUMBER", "This", "implementation", "be", "expected", "to", "change", "NUMBER", "It", "s", "quick", "and", "dirty", "in", "a", "few", "places", "including", "instantiating", "dummy", "clients", "to", "introspect", "some", "data", "NUMBER", "This", "only", "affects", "the", "Sphinx", "documentation", "NUMBER", "It", "be", "not", "use", "to", "generate", "docs", "for", "the", "interactive", "shell", "NUMBER", "There", "be", "no", "test", "but", "I", "expect", "them", "to", "be", "add", "in", "the", "future", "NUMBER", "cc", "jamesls", "kyleknap", "Coverage", "be", "good", "now", "LINK", "This", "pull", "request", "add", "all", "of", "the", "options", "available", "through", "Botocore", "s", "client", "constructor", "for", "make", "Boto", "NUMBER", "clients", "and", "resources", "including", "credentials", "region", "SSL", "and", "other", "settings", "NUMBER", "python", "sqs", "boto", "NUMBER", "resource", "sqs", "region_name", "us", "west", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "aws_access_key_id", "YOUR_KEY", "aws_secret_access_key", "YOUR_SECRET", "It", "also", "remove", "the", "default", "of", "us", "east", "NUMBER", "and", "requires", "you", "to", "set", "a", "region", "NUMBER", "The", "docs", "have", "be", "update", "slightly", "and", "the", "test", "have", "be", "update", "to", "reflect", "this", "NUMBER", "I", "plan", "to", "flesh", "out", "the", "configuration", "documentation", "in", "the", "future", "NUMBER", "cc", "jamesls", "kyleknap", "This", "pull", "request", "add", "two", "relate", "features", "NUMBER", "First", "it", "add", "resource", "instance", "equality", "by", "comparing", "the", "classes", "and", "identifiers", "of", "two", "resources", "NUMBER", "If", "they", "share", "the", "same", "class", "e", "NUMBER", "g", "NUMBER", "s", "NUMBER", "Bucket", "and", "the", "same", "identifiers", "e", "NUMBER", "g", "NUMBER", "name", "then", "they", "be", "considered", "equal", "NUMBER", "python", "b", "NUMBER", "s", "NUMBER", "Bucket", "boto", "NUMBER", "b", "NUMBER", "s", "NUMBER", "Bucket", "boto", "NUMBER", "b", "NUMBER", "b", "NUMBER", "True", "Related", "to", "equality", "this", "also", "implement", "reloading", "of", "attributes", "after", "an", "action", "has", "be", "performed", "NUMBER", "Imagine", "the", "following", "scenario", "python", "o", "s", "NUMBER", "Object", "boto", "NUMBER", "test", "NUMBER", "txt", "o", "NUMBER", "put", "Body", "hello", "print", "o", "NUMBER", "last_modified", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "o", "NUMBER", "put", "Body", "hello", "world", "print", "o", "NUMBER", "last_modified", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "o", "NUMBER", "s", "NUMBER", "Object", "boto", "NUMBER", "test", "NUMBER", "txt", "o", "o", "NUMBER", "True", "o", "NUMBER", "last_modified", "o", "NUMBER", "last_modified", "True", "Updated", "documentation", "and", "test", "to", "reflect", "these", "change", "NUMBER", "cc", "jamesls", "kyleknap", "NUMBER", "Definitely", "open", "to", "suggestions", "on", "this", "one", "but", "I", "think", "this", "be", "the", "most", "intuitive", "approach", "for", "people", "come", "to", "use", "the", "SDK", "NUMBER", "This", "pull", "request", "change", "Boto", "NUMBER", "to", "use", "the", "Botocore", "data", "loader", "for", "loading", "resource", "JSON", "description", "file", "instead", "of", "the", "custom", "loading", "logic", "that", "was", "in", "place", "NUMBER", "As", "a", "result", "a", "couple", "of", "things", "have", "change", "Removed", "all", "JSON", "loading", "code", "from", "Boto", "NUMBER", "Removed", "ResourceFactory", "NUMBER", "create_class", "in", "favor", "of", "load_from_definition", "Added", "Boto", "NUMBER", "resource", "data", "path", "to", "Botocore", "s", "loader", "Added", "functionality", "to", "get", "the", "latest", "resource", "version", "Implemented", "Session", "NUMBER", "get_available_resources", "Updated", "and", "remove", "some", "test", "Updated", "docs", "Unfortunately", "Botocore", "requires", "a", "very", "specific", "folder", "structure", "and", "at", "the", "moment", "Boto", "NUMBER", "be", "not", "use", "it", "NUMBER", "Because", "of", "this", "I", "write", "custom", "logic", "to", "find", "resource", "JSON", "file", "and", "find", "the", "latest", "version", "some", "of", "which", "should", "be", "migrated", "into", "Botocore", "in", "the", "near", "future", "NUMBER", "cc", "jamesls", "kyleknap", "jamesls", "kyleknap", "please", "take", "another", "look", "NUMBER", "I", "ve", "simplified", "some", "of", "the", "code", "simplified", "a", "couple", "of", "test", "and", "have", "add", "another", "test", "to", "cover", "choosing", "the", "latest", "version", "NUMBER", "I", "m", "not", "planning", "on", "creating", "a", "custom", "Loader", "subclass", "since", "we", "ll", "be", "moving", "this", "logic", "and", "I", "don", "t", "feel", "like", "it", "s", "worth", "a", "lot", "of", "effort", "at", "this", "point", "NUMBER", "This", "pull", "request", "add", "support", "for", "resources", "to", "reference", "their", "parents", "for", "example", "python", "obj", "s", "NUMBER", "Object", "boto", "NUMBER", "sun", "NUMBER", "jpg", "print", "obj", "NUMBER", "bucket", "NUMBER", "name", "This", "works", "by", "use", "the", "subResources", "feature", "of", "the", "resource", "JSON", "description", "format", "NUMBER", "Since", "Object", "be", "listed", "as", "a", "child", "of", "Bucket", "in", "the", "bucket", "s", "sub", "resources", "and", "we", "know", "the", "identifier", "mapping", "from", "and", "object", "s", "bucket_name", "to", "a", "bucket", "s", "name", "we", "can", "create", "the", "reverse", "reference", "just", "like", "if", "an", "explicit", "hasOne", "was", "defined", "in", "the", "JSON", "NUMBER", "Additionally", "this", "fix", "the", "SQS", "resource", "JSON", "to", "no", "longer", "explicitly", "list", "the", "Message", "hasOne", "Queue", "relation", "since", "the", "Queue", "has", "a", "Message", "in", "its", "sub", "resources", "NUMBER", "Adds", "a", "test", "for", "the", "resource", "model", "as", "well", "as", "modifies", "the", "references", "test", "to", "ensure", "both", "normal", "and", "reverse", "references", "become", "attributes", "on", "the", "instantiated", "resource", "NUMBER", "Note", "this", "be", "not", "very", "efficient", "but", "caching", "should", "fix", "that", "in", "the", "near", "future", "NUMBER", "I", "m", "open", "to", "suggestions", "to", "make", "it", "better", "NUMBER", "cc", "jamesls", "kyleknap", "It", "turns", "out", "that", "hasattr", "will", "access", "the", "attribute", "in", "this", "case", "a", "property", "instead", "of", "just", "seeing", "whether", "it", "exists", "on", "the", "object", "NUMBER", "That", "try", "to", "instantiate", "the", "group", "resource", "and", "the", "definition", "just", "need", "some", "slight", "tweak", "to", "enable", "that", "NUMBER", "As", "be", "it", "throw", "an", "exception", "and", "hasattr", "returns", "False", "NUMBER", "I", "ve", "add", "it", "change", "the", "test", "back", "to", "hasattr", "and", "all", "should", "work", "now", "NUMBER", "This", "change", "exposes", "hasOne", "and", "hasSome", "references", "on", "resources", "such", "as", "an", "EC", "NUMBER", "instance", "NUMBER", "subnet", "or", "instance", "NUMBER", "vpc", "NUMBER", "Both", "the", "subnet", "and", "VPC", "be", "resource", "instances", "that", "be", "created", "from", "data", "available", "on", "the", "instance", "NUMBER", "In", "this", "case", "via", "the", "subnet_id", "and", "vpc_id", "data", "members", "NUMBER", "Allows", "code", "like", "the", "following", "python", "import", "boto", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "for", "instance", "in", "ec", "NUMBER", "instances", "NUMBER", "all", "print", "instance", "NUMBER", "vpc", "NUMBER", "tags", "Updates", "the", "resource", "data", "model", "update", "and", "add", "test", "NUMBER", "cc", "jamesls", "kyleknap", "This", "change", "add", "an", "abstraction", "over", "the", "raw", "JSON", "resource", "descriptions", "similar", "to", "how", "Botocore", "has", "a", "ServiceModel", "which", "abstracts", "its", "JSON", "service", "descriptions", "NUMBER", "Advantages", "of", "this", "approach", "Pythonic", "interface", "e", "NUMBER", "g", "NUMBER", "model", "NUMBER", "actions", "NUMBER", "NUMBER", "request", "NUMBER", "operation", "Encapsulation", "of", "minor", "JSON", "change", "e", "NUMBER", "g", "NUMBER", "field", "name", "change", "All", "of", "the", "factory", "code", "be", "update", "to", "use", "it", "and", "documentation", "code", "will", "use", "it", "in", "the", "future", "NUMBER", "Tests", "have", "be", "update", "accordingly", "and", "the", "model", "has", "its", "own", "test", "as", "well", "NUMBER", "cc", "jamesls", "kyleknap", "This", "fix", "the", "currently", "broken", "installation", "of", "run", "python", "setup", "NUMBER", "py", "install", "by", "update", "the", "requirements", "to", "use", "Botocore", "NUMBER", "and", "make", "sure", "the", "resource", "descriptions", "be", "include", "in", "the", "release", "tarball", "NUMBER", "cc", "kyleknap", "thanks", "for", "point", "this", "out", "NUMBER", "This", "makes", "printing", "resources", "much", "more", "useful", "by", "including", "the", "class", "name", "any", "resources", "identifiers", "and", "the", "region", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "Before", "s", "NUMBER", "Object", "boto", "NUMBER", "sun", "NUMBER", "jpg", "TAG", "After", "s", "NUMBER", "Object", "boto", "NUMBER", "sun", "NUMBER", "jpg", "s", "NUMBER", "Object", "bucket_name", "boto", "NUMBER", "key", "sun", "NUMBER", "jpg", "in", "us", "east", "NUMBER", "This", "gets", "even", "more", "interesting", "when", "mix", "with", "collections", "e", "NUMBER", "g", "NUMBER", "list", "s", "NUMBER", "buckets", "NUMBER", "all", "be", "now", "actually", "useful", "since", "you", "can", "easily", "see", "the", "bucket", "names", "NUMBER", "cc", "jamesls", "kyleknap", "This", "change", "implement", "support", "for", "resource", "collections", "that", "mimic", "Django", "s", "query", "set", "API", "so", "that", "things", "like", "this", "be", "possible", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "for", "bucket", "in", "s", "NUMBER", "buckets", "NUMBER", "all", "NUMBER", "for", "obj", "in", "bucket", "NUMBER", "objects", "NUMBER", "limit", "NUMBER", "NUMBER", "print", "bucket", "NUMBER", "name", "obj", "NUMBER", "key", "Implements", "the", "following", "for", "collections", "Non", "iterable", "collection", "manager", "e", "NUMBER", "g", "NUMBER", "s", "NUMBER", "buckets", "Iterable", "ResourceCollection", "base", "class", "e", "NUMBER", "g", "NUMBER", "s", "NUMBER", "buckets", "NUMBER", "all", "Chainable", "resource", "collection", "API", "via", "clones", "Filtering", "via", "NUMBER", "filter", "Arg", "NUMBER", "NUMBER", "Arg", "NUMBER", "NUMBER", "Control", "item", "count", "via", "NUMBER", "filter", "limit", "NUMBER", "or", "NUMBER", "limit", "NUMBER", "Control", "page", "size", "via", "NUMBER", "filter", "page_size", "NUMBER", "or", "NUMBER", "page_size", "NUMBER", "Indexing", "and", "slicing", "e", "NUMBER", "g", "NUMBER", "s", "NUMBER", "buckets", "NUMBER", "all", "NUMBER", "NUMBER", "Exposing", "all", "filter", "limit", "and", "page_size", "on", "the", "manager", "Updated", "documentation", "Also", "add", "test", "for", "all", "the", "relevant", "features", "NUMBER", "Note", "that", "batch", "actions", "be", "_not_", "include", "in", "this", "change", "NUMBER", "cc", "jamesls", "kyleknap", "garnaat", "jamesls", "the", "parent", "do", "need", "to", "be", "pass", "for", "build", "parameters", "for", "service", "operation", "calls", "NUMBER", "For", "example", "look", "at", "the", "following", "definition", "s", "_identifiers_", "section", "json", "Bucket", "hasMany", "Objects", "request", "operation", "ListObjects", "params", "target", "Bucket", "sourceType", "identifier", "source", "Name", "resource", "type", "Object", "identifiers", "target", "BucketName", "sourceType", "identifier", "source", "Name", "target", "Key", "sourceType", "responsePath", "source", "Contents", "NUMBER", "Key", "In", "this", "case", "the", "resource", "collection", "must", "have", "access", "to", "the", "parent", "resource", "to", "which", "it", "be", "attached", "because", "it", "needs", "to", "find", "the", "Name", "identifier", "in", "this", "case", "bucket", "NUMBER", "name", "NUMBER", "If", "it", "were", "a", "data", "member", "instead", "of", "an", "identifier", "then", "it", "would", "incur", "a", "remote", "request", "to", "load", "the", "resource", "NUMBER", "If", "we", "pass", "these", "in", "when", "creating", "the", "collection", "instance", "it", "would", "mean", "make", "that", "request", "_before_", "creating", "the", "collection", "which", "doesn", "t", "seem", "like", "the", "correct", "behavior", "to", "me", "NUMBER", "I", "m", "definitely", "open", "to", "ideas", "but", "I", "didn", "t", "see", "an", "easy", "solution", "to", "that", "problem", "while", "write", "the", "code", "NUMBER", "Thanks", "for", "all", "the", "feedback", "guys", "NUMBER", "I", "appreciate", "the", "hard", "work", "to", "make", "this", "a", "good", "API", "for", "our", "customers", "NUMBER", "This", "fix", "the", "following", "bug", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "obj", "NUMBER", "s", "NUMBER", "Object", "my", "bucket", "my", "key", "obj", "NUMBER", "s", "NUMBER", "Object", "my", "bucket", "my", "key", "obj", "NUMBER", "load", "print", "obj", "NUMBER", "meta", "data", "NUMBER", "The", "data", "from", "obj", "NUMBER", "was", "shared", "with", "obj", "NUMBER", "which", "prevented", "make", "multiple", "unique", "instances", "of", "resources", "NUMBER", "This", "fix", "the", "issue", "by", "make", "each", "resource", "operate", "on", "a", "copy", "of", "the", "data", "created", "at", "instantiation", "time", "NUMBER", "Adds", "a", "test", "to", "ensure", "this", "works", "as", "expected", "NUMBER", "cc", "jamesls", "kyleknap", "This", "change", "fix", "the", "resource", "data", "loading", "logic", "to", "use", "the", "identifiers", "for", "determining", "plurality", "and", "implement", "a", "function", "to", "build", "empty", "responses", "given", "a", "service", "model", "and", "search", "path", "NUMBER", "The", "following", "now", "work", "correctly", "python", "sqs", "boto", "NUMBER", "resource", "sqs", "queue", "sqs", "NUMBER", "get_queue_by_name", "QueueName", "test", "print", "queue", "NUMBER", "url", "LINK", "print", "queue", "NUMBER", "attributes", "NUMBER", "Assuming", "you", "have", "zero", "message", "in", "the", "queue", "this", "now", "works", "as", "well", "python", "message", "queue", "NUMBER", "receive_messages", "print", "isinstanc", "message", "list", "True", "This", "means", "that", "code", "use", "the", "SDK", "can", "assume", "that", "receive_messages", "will", "always", "return", "a", "list", "NUMBER", "Empty", "response", "handle", "test", "have", "moved", "into", "their", "own", "class", "all", "other", "relate", "test", "have", "be", "update", "NUMBER", "cc", "jamesls", "kyleknap"], "text_count": [0, 20503, 5094, 2568, 960, 469, 1813, 1, 127, 2519, 3040, 5097, 3443, 1717, 1947, 1036, 0, 0, 0, 0, 6448, 1706, 1199, 734, 1119, 1050, 0, 0, 0, 0, 10553, 6721, 3974, 119, 2392, 674, 0, 0, 0, 0, 13860, 41, 4985, 4629, 3994, 0, 0, 0, 0, 0, 3490, 1702, 2134, 993, 1423, 685, 1341, 0, 0, 0, 9519, 769, 7659, 523, 0, 0, 0, 0, 0, 0, 8387, 990, 5942, 2288, 1054, 0, 0, 0, 0, 0, 12608, 5821, 1055, 5125, 776, 443, 0, 0, 0, 0, 648, 4563, 547, 0, 0, 0, 0, 0, 0, 0, 10375, 2121, 6065, 2456, 0, 0, 0, 0, 0, 0, 21142, 42914, 585, 1933, 477, 1207, 0, 0, 0, 0, 53206, 182, 39863, 364, 9813, 11674]}, {"repo": "boto3", "type": "nonelite", "title": "", "number of text": 1980, "text": "  I spend a lot of time looking at log messages from boto3.resources.action that include a complete dynamodb request, represented as JSON, like this:\r\n```\r\nboto3.resources.action [DEBUG] Calling dynamodb:update_item with {'ExpressionAttributeNames': {'#status': 'status'}, 'UpdateExpression': 'set #status = :status', 'TableName': 'things', 'Key': {'uuid': 'da1a6ba8-bec5-4eb6-b2ce-27b7d5c69459', 'thing_id': }, 'ExpressionAttributeValues': {':status': 'FLAKY'}}\r\n```\r\nIn fact, my logs have zillions of lines like these.  I've noticed that the ordering of the items in the request can vary; i.e, in addition to the line above, I might also see a line like\r\n```\r\nboto3.resources.action [DEBUG] Calling dynamodb:update_item with {'ExpressionAttributeValues': {':mo_status': 'BADNEWS', }, 'UpdateExpression': 'SET #status = :mo_status', 'Key': {'uuid': '22a9a4a4-cae3-4783-ab4a-b71f79e162fe'}, 'ConditionExpression': 'attribute_exists(uuid)', 'ExpressionAttributeNames': {'#status': 'status'}, 'TableName': 'wassup'}\r\n```\r\nObviously I've made up most of that data for this example, but one thing that I did not make up, and which is my point, is that in the first line, `ExpressionAttributeNames` comes before `ExpressionAttributeValues`, whereas in the second line, the order is reversed.  \r\n> I am guessing that this comes from the hash randomization that was added in python 3.3 (my code uses python 3.4)\r\n\r\nWhat I'd like is some way to tell boto to alphabetize those keys when logging, so that the log lines look more similar than they do now; I expect this will make it easier for me to spot anomalies when quickly scanning a huge log file by eye.\r\n\r\nI confess that I haven't thought about how I'd want the UI feature for this to look.  I'd guess you wouldn't want to enable this all the time, since it would add overhead that most people don't need. Ahh, I didn't know about events; having merely glanced at what you wrote, though, it definitely looks like I could use that.  Thanks!  The boto3 api returns a successful request for the AMI creation of a paravirtualized instance.  However, when you describe the images, the AMI status is failed and the Virtualization Type is set to **hvm** instead of **paravirtual**.\r\n\r\nCreate an image of a paravirtualized instance using boto3.client('ec2').create_image() or boto3.resource('ec2').Instance().create_image().\r\n\r\nThe following screenshot shows some details of the failed AMI.\r\n\r\n![boto3_failed_paravirt_image](https://user-images.githubusercontent.com/23559242/31991305-04e27df8-b9aa-11e7-8042-1e5b0001e654.png)\r\n I have done further investigation and it seems that I have another paravirtualized instance running on m3.medium that I can successfully create an AMI with using boto3.  It is with the t1.micro instance that the boto3 create_image API encounters an Server.InternalError and sets the wrong Virtualization Type.\r\n\r\nThe problem might be related instead to the internal systems of AWS.  Creating an image of the t1.micro instance is successful when using the AWS Web Console.  https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html\r\n\r\n`Listeners per load balancer: 50`\r\n\r\nhttps://boto3.readthedocs.io/en/latest/reference/services/elbv2.html#ElasticLoadBalancingv2.Client.create_listener\r\n\r\n`You can create up to 10 listeners per load balancer.`  `self.elb_svc.set_subnets(LoadBalancerArn=nlb[\"LoadBalancerArn\"], SubnetMappings=subnet_mapping)`\r\n\r\n> Parameter validation failed:\r\n> Missing required parameter in input: \"Subnets\"\r\n\r\n`self.elb_svc.set_subnets(LoadBalancerArn=nlb[\"LoadBalancerArn\"], Subnets=self.subnets, SubnetMappings=subnet_mapping)`\r\n\r\n> An error occurred (ValidationError) when calling the SetSubnets operation: You can specify either subnets or subnet mappings, not both\r\n\r\nDocumentation [is confused as well](https://boto3.readthedocs.io/en/latest/reference/services/elbv2.html#ElasticLoadBalancingv2.Client.set_subnets):\r\n\r\n```\r\nNote that you can't change the subnets for a Network Load Balancer.\r\n```\r\nBut\r\n```\r\nSubnets (list) --\r\n[REQUIRED]\r\n\r\nThe IDs of the subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.\r\n\r\n(string) --\r\nSubnetMappings (list) --\r\nThe IDs of the subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.\r\n\r\nThe load balancer is allocated one static IP address per subnet. You cannot specify your own Elastic IP addresses.\r\n\r\n(dict) --\r\nInformation about a subnet mapping.\r\n\r\nSubnetId (string) --\r\nThe ID of the subnet.\r\n\r\nAllocationId (string) --\r\n[Network Load Balancers] The allocation ID of the Elastic IP address.\r\n```  \r\nI'm using boto3 to deploy spot instances. My request is expired after period of time (as I defined). When the request expires I like the machine to be terminated.\r\nI'm creating my spot instances using this request:\r\n\r\n```\r\nclient = boto3.client('ec2', region_name=regions[idx][:-1])    \r\nclient.request_spot_instances(\r\n                        DryRun=False,\r\n                        SpotPrice=price_bids,\r\n                        InstanceCount=number_of_instances_to_deploy,\r\n                        LaunchSpecification=\r\n                        {\r\n                            'ImageId': amis_id[idx],\r\n                            'KeyName': 'MyKey',\r\n                            'SecurityGroups': ['SG'],\r\n                            'InstanceType': machine_type,\r\n                            'Placement':\r\n                                {\r\n                                    'AvailabilityZone': regions[idx],\r\n                                },\r\n                        },\r\n                        ValidUntil=new_date,\r\n                )\r\n```\r\n\r\nIs there a parameter that I can pass that will terminate my machines when the request expires?\r\n  Here is literally what I'm executing:\r\n```\r\n\r\ntransfer_cfg = TransferConfig(multipart_threshold = chunkthreshold,\r\n                                 multipart_chunksize = chunksize, max_concurrency = maxthreads)\r\n\r\n# sf here is syncfile and self.ept.key is the key name\r\nbucket.upload_fileobj(sf, self.ept.key, Callback = cback, Config = transfer_cfg)\r\n\r\n```\r\n\r\nDEBUG output (some are my statements interspersed in):\r\n\r\n017-10-20 10:50:15,390 INFO: Uploading 4294959104 bytes of 'c' at byte offset 0 to bucket 'alex' with key 'c'...\r\n2017-10-20 10:50:15,390 INFO: Multipart info: threshold (104857600 bytes) chunksize (134217728 bytes) max_concurrency (12 threads)...\r\n2017-10-20 10:50:16,702 INFO: Starting new HTTP connection (2): node\r\n2017-10-20 10:50:17,362 INFO: Starting new HTTP connection (3): node\r\n2017-10-20 10:50:18,025 INFO: Starting new HTTP connection (4): node\r\n2017-10-20 10:50:18,691 INFO: Starting new HTTP connection (5): node\r\n2017-10-20 10:50:19,330 INFO: Starting new HTTP connection (6): node\r\n2017-10-20 10:50:19,993 INFO: Starting new HTTP connection (7): node\r\n2017-10-20 10:50:20,657 INFO: Starting new HTTP connection (8): node\r\n2017-10-20 10:50:21,320 INFO: Starting new HTTP connection (9): node\r\n2017-10-20 10:50:21,981 INFO: Starting new HTTP connection (10): node\r\n\r\nEDIT: I edited out the hostname in the above ('node' = a Dell ECS server)\r\n\r\nBut boto3 seems to never want to spawn more than 10 threads even though I set max_concurrency to 12 (or 20). I have tried uploading file sizes of 1GB, 5GB, 10GB, and always see 10 multipart worker threads. What am I doing wrong? Mea culpa then. I just assumed the 10 connections were part of the thread pooling logic. That was presumptuous on my part. Sorry 'bout that. I guess my logging is good enough then.  Hello,\r\n\r\nI am pretty new with python. I am using python3 which I thought boto3 was compatible with. I am getting this error...\r\n\r\n````\r\nTraceback (most recent call last):\r\n  File \"application.py\", line 2, in <module>\r\n    import boto3\r\n  File \"/Users/noahbragg/Library/Python/3.6/lib/python/site-packages/boto3/__init__.py\", line 16, in <module>\r\n    from boto3.session import Session\r\n  File \"/Users/noahbragg/Library/Python/3.6/lib/python/site-packages/boto3/session.py\", line 17, in <module>\r\n    import botocore.session\r\n  File \"/Users/noahbragg/Library/Python/3.6/lib/python/site-packages/botocore/session.py\", line 26, in <module>\r\n    import botocore.credentials\r\n  File \"/Users/noahbragg/Library/Python/3.6/lib/python/site-packages/botocore/credentials.py\", line 22, in <module>\r\n    from dateutil.parser import parse\r\nModuleNotFoundError: No module named 'dateutil'\r\n````\r\n\r\nWhen I try to run the python application.\r\n\r\nI am using pip3 and pip3 freeze shows that I do have boto3 installed...\r\n```\r\nboto3==1.4.7\r\nbotocore==1.7.31\r\ncertifi==2017.7.27.1\r\nchardet==3.0.4\r\nclick==6.7\r\ndocutils==0.14\r\nFlask==0.12.2\r\nFlask-Session==0.3.1\r\nidna==2.6\r\nitsdangerous==0.24\r\nJinja2==2.9.6\r\njmespath==0.9.3\r\nMarkupSafe==1.0\r\npython-dateutil==2.6.1\r\nrequests==2.18.4\r\ns3transfer==0.1.11\r\nsix==1.11.0\r\nstripe==1.62.1\r\nurllib3==1.22\r\nWerkzeug==0.12.2\r\n```\r\n\r\nI import boto3 into my python file like normal.\r\nI'm wondering if this is an issue because I am using python3 or because i am using the latest of boto3. Any help would be appreciated! Thanks! Boto3 is most definitely Python 3 compatible. It looks to me like this error comes from not importing dateutil, and doesn't have to do with boto3. If you're still not sure, you can paste some code here, that would be helpful. @michellemurrain thanks for the reply.\r\n```python\r\nfrom flask import Flask, request, session, jsonify\r\nimport boto3\r\nimport stripe\r\nimport smtplib\r\nfrom email.mime.text import MIMEText\r\nfrom validate_email import validate_email\r\n```\r\n\r\nThose are my imports. the application runs fine when i remove the boto3 import but i get the error when i add it.\r\n\r\nI tried installing `python-dateutil` as this link suggests\r\nhttps://stackoverflow.com/questions/20853474/importerror-no-module-named-dateutil-parser\r\nand it said it was already installed \r\n\r\nI don't have to import dateutil as well do I? It looks like boto3 requires dateutil, correct? OK, so looking at your error more closely, it seems that the error actually has to do with botocore, not boto3. And botocore does require dateutil. \r\n\r\nBut theoretically, if you installed boto3 using pip, it should have installed all of the dependencies for you, including dateutil.\r\n\r\nBut you might get around this by just trying pip install dateutil, and see if that works. I did it for pip3 and python3.\r\n\r\nFor pip3 it points to `/usr/local/bin/pip3`\r\nand python3 points to `/usr/local/bin/python3` when doing `pip3 install dateutil` I get `Could not find a version that satisfies the requirement dateutil (from versions: )No matching distribution found for dateutil`\r\n\r\nI think the library is called python-dateutil and thats why that error is coming up but when I install python-dateutil it says it is already installed I am on OSX\r\nThe output was `/Library/Frameworks/Python.framework/Versions/3.6/bin/python3.6`\r\n\r\nI thought I was using homebrew's python. Is there any other way to check?\r\n\r\n Yeah, pip3 seems to be pointing to the right python because the other libraries I have included have been working so far. I'm not sure why else it wouldn't be working.\r\n\r\nThanks for the guide. I have used virtualenv a little bit for AWS. I will look more into it. Thanks.  The following code :\r\n\r\n```\r\nclient = boto3.client(\r\n    's3',\r\n    aws_access_key_id='AKIA...',\r\n    aws_secret_access_key='',\r\n    aws_session_token=True\r\n        )\r\nclient.put_object(\r\n    Bucket='bucket',\r\n    Key='filename',\r\n    Body=open(tmp_file_name, 'r'),\r\n    Metadata={'a':'b'}\r\n)\r\n```\r\nCrashes with :\r\n\r\n`Metadata={'a':'b'} TypeError: Unicode-objects must be encoded before hashing\r\n`\r\nOn the other hand, using a Resource :\r\n\r\n```\r\ns3 = boto3.resource(\r\n    's3',\r\n    aws_access_key_id='AKIA...',\r\n    aws_secret_access_key='m/twhd6ow8aRuf+gjQcL8gu+bS5Y3tAVjcTe1+ai',\r\n    aws_session_token=True\r\n)\r\nmy_bucket = s3.Bucket('input_bucket')\r\nupfile = my_bucket.Object('filename');\r\nmeta = {'a':'b'}\r\nupfile.upload_file(\r\n    tmp_file_name,\r\n    ExtraArgs={\"Metadata\":meta}\r\n)\r\n```\r\ncrashes with `ExtraArgs={\"Metadata\":meta} : AttributeError: 'bool' object has no attribute 'split'`\r\nsame with : \r\n`s3.Object('input_bucket', 'filename').put(Body='hello world', Metadata={'foo': 'bar'})\r\n`\r\n\r\nI'm pretty sure I'm not doing things wrong (could be though), but is there a chance that could come from your end?\r\n  I'm calling `get_metric_statistics` to retrieve the CPUUtilization of multiple EC2 instances that I have based on the instance id, but the results are tied together and I can't differentiate between them? Is there a way to  have the instance id be returned in the payload with each datapoint? \r\n\r\nI'm doing this to optimize the program that retrieves the metrics and do them in a batch approach, rather than one by one.\r\n\r\nThis is the call I'm making\r\n\r\n```\r\ndata = cloudwatch.get_metric_statistics(Namespace=\"AWS/EC2\",\r\n                                                               MetricName=\"CPUUtilization\",\r\n                                                               Period=60,\r\n                                                               StartTime=start_time,\r\n                                                               EndTime=end_time,\r\n                                                              Statistics=[\"Average\"],\r\n                                                              Dimensions=[{'Name': 'InstanceId', 'Value': u'i-yyyy'}, {'Name': 'InstanceId', 'Value': u'i-xxxx'}])\r\n``` Thanks, I'll move my question there.  Give a lambda that returns a JSON with ints and running:\r\n\r\n```\r\nresp = lambda_client.invoke(..)\r\njson_text=resp['Payload'].read()\r\n```\r\n\r\njson_text store the ints as floats. i.e \"10\" turns to \"10.0\"\r\nThis is especially problematic it one wants to store the data in dynamodb which does not support storing floats.  My application was happily creating presigned urls for cloudfront.\r\n\r\nI changed it so that the files in S3 are now sse:kms encrypted\r\n\r\nDespite much searching I cannot find the incantation to create a signed url for cloudfront for accessing these sse:kms files.\r\n\r\nCan anyone point me in the right direction?  Any documentation anywhere saying how to do this?\r\n\r\nthanks  Python version: 3.6.2\r\nBoto3 version: 1.4.7\r\n\r\nThe docs say:\r\n> Source (string) --\r\n> The parameter types to return.\r\n> Default: All parameter types returned\r\n> Valid Values: user | system | engine-default\r\n\r\nBut if you run the following:\r\n```python\r\ngroup_info = client.describe_db_parameters(\r\n        DBParameterGroupName=\"a_group_with_user_params_set\",\r\n)\r\nprint(group_info)\r\n```\r\n\r\nThe user set params are not returned.\r\n\r\nThe following code returns those parameters (only):\r\n```python\r\ngroup_info = client.describe_db_parameters(\r\n        DBParameterGroupName=\"a_group_with_user_params_set\",\r\n        Source=\"user\"\r\n)\r\nprint(group_info)\r\n```  ```python\r\nself.source_session = boto3.session.Session ( profile_name='account1' )\r\nself.source_conn = self.source_session.resource('s3')\r\nself.src_conn = self.source_session.client('s3')\r\nself.dest_session = boto3.session.Session ( profile_name='account2' )\r\nself.dest_conn = self.dest_session.client ( 's3' )\r\n\r\nk = self.source_conn.Object(srcBucketName, key_name)\r\nprint 'copy: ' + k.key\r\ncopy_source = { 'Bucket': srcBucketName , 'Key': k.key }\r\nself.dest_conn.copy ( copy_source, dstBucketName , k.key, SourceClient = self.src_con)\r\n```\r\n\r\nError -\r\nClientError: An error occurred (AccessDenied) when calling the CopyObject operation: Access Denied\r\n\r\n Can you provide example  of copy command to use two main clients ? Thanks .. got it .. s3_copy only work if both buckets can access with single key . I modified my script to download and copy instead of copy from bucket to bucket .  I am using the `Waiter` interface to wait on a cluster deletion and, even specifying explicitly the `Delay` to be reasonably low (without hammering the API) I have noticed that the waiter waits a long time, even after the stack is deleted (relatively quickly).\r\n\r\nHere is a snippet of the code:\r\n```\r\n# in __init__()\r\n        self._client = boto3.client('cloudformation')\r\n# ...\r\n    def delete(self, retries=3):\r\n        self._client.delete_stack(StackName=self.name)\r\n        waiter = self._client.get_waiter('stack_delete_complete')\r\n        while retries > 0:\r\n            try:\r\n                # Checks every 15 seconds, for at most 5 minutes (60 / 15 * 5 = 20 attempts)\r\n                waiter.wait(StackName=self.name,\r\n                            WaiterConfig={\r\n                                'Delay': 15,\r\n                                'MaxAttemps': 20\r\n                            })\r\n            except:\r\n                retries -= 1\r\n                if retries == 0:\r\n                    return False\r\n        return True\r\n```\r\nI would expect at most to wait 15 seconds after the stack disappears in the CFn console; however, it takes sometimes a few minutes for this to return.\r\n\r\nLooking at the code the `sleep()` is actually invoked with the `Delay` value, so it's not obvious at first sight what might go wrong - maybe the `state` of the waiter is not updated as regularly?\r\n\r\n These are the states that it waits for before returning: https://github.com/boto/botocore/blob/develop/botocore/data/cloudformation/2010-05-15/waiters-2.json#L75-L86\r\n\r\nThe best way to verify what's going on is to enable debug logs and see what the service is returning.  You can do this by setting `boto3.set_stream_logger('')` at the top of your code snippet.  Let me know if you have any more questions. Thanks for the pointer to enable debug logs - it seems pretty clear, by parsing those that the waiter misses the state transition and then the Stack does not exist:\r\n```\r\n2017-10-18 13:36:33 [ DEBUG] parsers:205 -- Response body:\r\nb'<ErrorResponse xmlns=\"http://cloudformation.amazonaws.com/doc/2010-05-15/\">\\n  <Error>\\n    <Type>Sender</Type>\\n    <Code>ValidationError</Code>\\n    <Message>Stack with id sentinel-redis-test does not exist</Message>\\n  </Error>\\n  <RequestId>07ac7d75-b444-11e7-98fc-7521313856ba</RequestId>\\n</ErrorResponse>\\n'\r\n```\r\nHowever, the Waiter keeps retrying the call and, in fact, it even triggers API throttling.\r\n\r\nIMO - the fix is pretty simple, it should check for that error response as an \"expected\" alternative to the state transition.\r\n\r\nI'm happy to craft a PR for that, if appropriate: would you like me to do so?\r\n\r\nThanks! yes, that one in my comment was just a snippet from the logs, there were literally hundreds of calls with the same error, but none triggered the waiter to return.\r\n\r\nI suspect (but haven't looked at the code recently) that the termination is triggered by an exception, but it does not parse maybe the response for an `ERROR` clause?  Hello, \r\n\r\nAccording to the documentation present [here](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.describe_addresses). There should be a filter, \"public-ip\" which filters instances with ip addresses. But it doesn't work for me. I installed the latest boto3 from pip (not using git head). Here's a snippet: \r\n\r\n```\r\nec2 = boto3.client('ec2')\r\nresult = ec2.describe_instances(Filters=[{'Name': 'public-ip', 'Values': [ip]}])\r\n```\r\n\r\nI get the following error.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"script.py\", line 40, in <module>\r\n    result = ec2.describe_instances(Filters=[{'Name': 'public-ip', 'Values': [ip]}])\r\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 312, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 601, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (InvalidParameterValue) when calling the DescribeInstances operation: The filter 'public-ip' is invalid\r\n``` Thanks. It was my bad. 'network-interface.addresses.association.public-ip' is the filter name for public-ip.  when using boto3 version 1.4.5 on Ubuntu 16, If I try to upload a file with user supplied metadata that is non-conformant,  I get an error message back that indicates a different problem:\r\n\r\n> S3UploadFailedError: Failed to upload X.zip to X/Xzip: An error occurred (SignatureDoesNotMatch) when calling the CreateMultipartUpload operation: The request signature we calculated does not match the signature you provided. Check your key and signing method.\r\n\r\nTo reproduce this:\r\n```\r\nimport boto3\r\ns3_bucket = 'bucket_name'\r\ns3_key = 'key_name'\r\nfilename = 'file_to_upload'\r\ns3_client = boto3.resource('s3')\r\nbucket = s3_client.Bucket(s3_bucket)\r\nobj = bucket.Object(s3_key)\r\nmetadata = {\r\n    'key1': 'Value1',\r\n    'KEY1': 'Value1', }\r\nobj.upload_file(filename, ExtraArgs={\r\n                            \"Metadata\": metadata, })\r\n```\r\n\r\nSince S3 metadata keys are all lowercase, the above metadata results in only one key on the S3 side.  That is why the signatures don't match.  It would be clearer if maybe after the error is returned, boto3 checks the metadata it used for case collisions and reports this to the user as well.\r\n  When calling [create_configuration_set_tracking_options](http://boto3.readthedocs.io/en/latest/reference/services/ses.html#SES.Client.create_configuration_set_tracking_options) in 1.4.7, I get the following error:\r\n\r\n'SES' object has no attribute 'create_configuration_set_tracking_options'\r\n\r\nAs I'm able to call similar methods on the client - such as `create_configuration_set_event_destination` - I can only think this means the function hasn't yet been added. Is this definitely available under 1.4.7 (in line with the docs)?\r\n\r\n Thanks Kyle. I'm getting the error in AWS Lambda, presumably that's running the latest version of core? Do you have any guidance on how to check that? Lambda typically lags a few versions behind the latest.  I'd recommend including boto3/botocore in your deployment package to ensure you don't run into these issues.\r\n\r\nWe'll take a look at improving our docs to make it more clear which version of botocore is required.  I'm hitting an AWS limitation where I believe it only allows you to import a swagger file if it has 2 or less APIs.  \r\n\r\nThe following is what I see:\r\n```\r\nbotocore.errorfactory.LimitExceededException: An error occurred (LimitExceededException) when calling the ImportRestApi operation (reached max retries: 4): Maximum number of Resources for this API has been reached.  Please contact AWS if you need additional Resources.\r\n```\r\n\r\nIf I tweak the swagger to only have 2 APIs, works.\r\n\r\nI saw other posts saying people can try adjusting the ```_retry.json```, but I don't think that will work since this is a single call with multiple API in the swagger to import.\r\n\r\nThis is probably a feature request, but was hoping there might be an alternative to make it work.\r\n\r\nThanks!\r\n  According to the recent AWS API documentation it is possible to send notifications to SNS channel (here: http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_NotificationReceptorAPI_SNSTransportArticle.html).\r\nBut mturk client in Boto3 allows only to send test notifications either via e-mail or to SQS. Can something be done in order to correct this? well, in Stable version of docs only SQS/Email is available as an option.  anyway you were right - upgrading to 1.4.7 helps. Thanks!  Python: 2.7.5\r\nBoto: 2.48.0\r\nBoto3: 1.4.7\r\nBotocore: 1.7.19\r\n\r\n_[Query String Request Authentication Alternative](http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html#RESTAuthenticationQueryStringAuth)_ specifies the format of the StringToSign that might be followed to create a signature of the pre-signed url. Namely,\r\n```\r\nSignature = URL-Encode( Base64( HMAC-SHA1( YourSecretAccessKeyID, UTF-8-Encoding-Of( StringToSign ) ) ) );\r\n\r\nStringToSign = HTTP-VERB + \"\\n\" +\r\n    Content-MD5 + \"\\n\" +\r\n    Content-Type + \"\\n\" +\r\n    Expires + \"\\n\" +\r\n    CanonicalizedAmzHeaders +\r\n    CanonicalizedResource;    \r\n```\r\n\r\nThe use case is to be able to provide a custom header like _Content-MD5_ to participate in signature construction.\r\n\r\nThis is perfectly fine with the boto library \r\n``` python\r\nimport boto \r\n\r\n## [s3]\r\n## use-sigv4 = True\r\nboto.config.load_from_path('.boto')\r\n\r\nconn = boto.connect_s3(profile_name = \"_profile_name_\", host = \"s3.amazonaws.com\")\r\n\r\npresigned_url = conn.generate_url(\r\n\texpires_in=3600,\r\n\tmethod='GET',\r\n\tbucket='_bucket_name_',\r\n\tkey='_key_',\r\n\theaders={'Content-MD5': 'c3993a7637ae5d90e70106050ef6926f'}\r\n)\r\n```\r\n\r\nSeems like this same feature cannot be achieved with boto3.\r\n\r\nCan this be confirmed and what is the reason behind degrading this feature from the new version of the library? May it be expected to return in the future versions? I would rather we do keep separate flavors of the issue described here. I specifically stressed out the possibility to have the signature be customized in terms of adding additional components that participate in the process. \r\n\r\nContent-MD5 being described as \"meaningless\" in the GET requests does not disallow it to be present. After all, empty value still gives you a hash albeit deterministic.\r\n\r\nThe use case described just brings up some additional custom contract to the process. If say Alice and Bob decide to include the custom header in the process of signing url requests, than Charlie being not a part of that contract will have an additional step to be able to get a pre-signed url working for him.\r\n\r\nThere are lots of scenarios that might be exampled here, without stressing out a specific header.\r\n\r\nIn the meantime, other SDKs like AWS Java SDK and a \"hand-coded\" boto library does support that feature without violating any strict contract from the AWS Signing Interface.  When I use Email as transport everything works perfectly. As soon as I choose SQS it fails, even if the queue itself works properly.\r\nThe code below rises the following error:\r\n```\r\n  File \"/Users/chapkovski/mynewotree/lib/python3.5/site-packages/botocore/client.py\", line 310, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/Users/chapkovski/mynewotree/lib/python3.5/site-packages/botocore/client.py\", line 599, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (InternalFailure) when calling the SendTestEventNotification operation (reached max retries: 4): \r\n```\r\n\r\n**and here is the code:** \r\n```\r\nendpoint_url = 'https://mturk-requester-sandbox.us-east-1.amazonaws.com'\r\nclient = boto3.client('mturk',\r\n                      endpoint_url=endpoint_url\r\n                      )\r\nsqs = boto3.resource('sqs')\r\nqueue = sqs.get_queue_by_name(QueueName='whatever2')\r\nresponse = client.send_test_event_notification(\r\n    Notification={\r\n        'Destination': queue.url,\r\n        'Transport': 'SQS',\r\n        'Version': '2006-05-05',\r\n        'EventTypes': [\r\n            'Ping', 'AssignmentReturned'\r\n        ]\r\n    },\r\n    TestEventType='AssignmentReturned'\r\n)\r\n\r\n```  Hello boto3 community,\r\n\r\nEvery now and then we'll have one of our microservices, running in **ECS** /w a **TaskARNRole**, fail to refresh credentials. When it hits this problem, it continues to experience it over and over. Stopping the container and having ECS start up another one fixes the issue for a while. However, eventually it will hit that state.\r\n\r\nWe decided to turn on some debug logs for boto3 and found the following:\r\n```\r\nSeptember 27th 2017, 12:28:42.132 | 2017-09-27 19:28:42,132 botocore.credentials [DEBUG] Retrieved credentials will expire at: 2017-09-27 19:03:38+00:00\r\n```\r\n\r\n![screen shot 2017-09-27 at 1 50 39 pm](https://user-images.githubusercontent.com/4636740/30937303-369fa65c-a38b-11e7-84c1-bf8a7f07528c.png)\r\n\r\nIt appears boto3 is returning us IAM creds that have expired ~25 minutes ago. We're seeing this pretty consistently. Checking on the server, (`Amazon Linux AMI 2017.03`), the date is accurate. The server is running ntpd, so we would expect time to stay sync'd. SSH'ing into the container and running `date` on there shows an accurate and synchronized timestamp as well.\r\n\r\nSo, what gives? Why is boto3 returning us credentials from the past?\r\n\r\n# Environment Details\r\n```\r\n# pip show boto3\r\nName: boto3\r\nVersion: 1.4.7\r\nSummary: The AWS SDK for Python\r\nHome-page: https://github.com/boto/boto3\r\nAuthor: Amazon Web Services\r\nAuthor-email: UNKNOWN\r\nLicense: Apache License 2.0\r\nLocation: /usr/local/lib/python3.6/site-packages\r\nRequires: s3transfer, botocore, jmespath\r\n\r\n\r\n$ docker info\r\nServer Version: 17.03.2-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 4ab9917febca54791c5f071a9d1f404867857fcc\r\nrunc version: 54296cf40ad8143b62dbcaa1d90e520a2136ddfe\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.43-17.39.amzn1.x86_64\r\nOperating System: Amazon Linux AMI 2017.03\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 7.798 GiB\r\nName: ip-10-7-8-159\r\nID: SM4X:REE3:E54K:EURA:TSVA:FTBC:4CE2:BUQ6:BSJF:LDVL:UDNQ:2P5C\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\n\r\n```\r\n\r\nThanks. Just a thought, but since we are using ECS and TaskARNRoles, could the problem be related to this issue: https://github.com/aws/amazon-ecs-agent/issues/985 ? Yup. Just verified, this only happens when the service is running on a container instance that has a disconnected agent. I can close this issue, but this problem should be visible enough for everyone to see.  I'm not sure whether this is a bug, a problem with the docs, or something I'm doing wrong, but I'm stuck and need guidance.\r\n\r\nThe code below corresponds to what's in the documentation [here](http://boto3.readthedocs.io/en/latest/reference/services/application-autoscaling.html#ApplicationAutoScaling.Client.put_scaling_policy):\r\n\r\n```\r\ndef auto_scale_dynamodb(**kwargs):\r\n    client = boto3.client('application-autoscaling')\r\n    policy = kwargs['table_name'] + '-auto-scaling'\r\n    resource = 'table/' + kwargs['table_name']\r\n\r\n    response = client.put_scaling_policy(\r\n        PolicyName=policy,\r\n        ServiceNamespace='dynamodb',\r\n        ResourceId=resource,\r\n        ScalableDimension='dynamodb:table:ReadCapacityUnits',\r\n        PolicyType='TargetTrackingScaling',\r\n        TargetTrackingScalingPolicyConfiguration={\r\n            'TargetValue' : 30000,\r\n            'PredefinedMetricSpecification' : {\r\n                'PredefinedMetricType' : 'DynamoDBReadCapacityUtilization'\r\n            },\r\n            'ScaleOutCooldown' : 30,\r\n            'ScaleInCooldown' : 30\r\n        }\r\n    )\r\n    return\r\n```\r\n\r\nBut it throws this error: \r\n\"Unknown parameter in input: \"TargetTrackingScalingPolicyConfiguration\", must be one of: PolicyName, ServiceNamespace, ResourceId, ScalableDimension, PolicyType, StepScalingPolicyConfiguration\"\r\n\r\nThe [API docs](http://docs.aws.amazon.com/ApplicationAutoScaling/latest/APIReference/API_PutScalingPolicy.html) seem to agree with the boto3 docs, so I'm not sure what's up.\r\n\r\nI've googled around, and found nothing. Suggestions? FYI, according to docs (both Boto3 and API), Dynamodb doesn't have StepScalingPolicyConfiguration. Here's a quote: \"For DynamoDB, only TargetTrackingScaling is supported. For any other service, only StepScaling is supported.\" Shouldn't `TargetValue` be between 0 and 1 (ratio consumed/provisioned capacity)? Edit: checked, and should be for instance `40.0` when you set it to `40%`. That was it. Thanks!!  Unless I'm reading the docs and source wrong -- dynamo itself allows [the BatchWriteItem call](http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchWriteItem.html#API_BatchWriteItem_RequestSyntax) to take a `ReturnConsumedCapacity` keyword -- but `BatchWriter.put_item` doesn't allow that (or any other) keyword.  Is there any way to find the consumed capacity of a batch_write? The only thing I can think of is:\r\n- have the `BatchWriter` constructor take that optional keyword\r\n- have the `BatchWriter` constructor  initialize an attribute that will accumulate the returned capacities\r\n- have the `_flush` call update that attribute\r\n- have a new method on the `BatchWriter` object that returns the values that accumulated in that attribute\r\n\r\nExample:\r\nhttps://github.com/offby1/boto3/commit/19853748e6384d07eeb1f8ce5610c1ca9410fa1d  In particular, http://boto3.readthedocs.io/en/latest/reference/services/elasticache.html#ElastiCache.Client.describe_replication_groups doesn't return any clusters that aren't currently listed `available`.\r\n\r\nThis means I can't actually check and see if a cluster is being created, being deleted, or in any state other than `available`. Which makes automation around Elasticache with boto3 rather difficult. A more explicit example:\r\n```\r\n    self.client.delete_replication_group(ReplicationGroupId=cache_name)\r\n  File \"/usr/lib/python3.6/site-packages/botocore/client.py\", line 312, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/botocore/client.py\", line 601, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.errorfactory.InvalidReplicationGroupStateFault: An error occurred (InvalidReplicationGroupState) when calling the DeleteReplicationGroup operation: Replication group testrole2 has status deleting which is not valid for deletion.\r\n```\r\n\r\nBut how would I know when a `describe_replication_groups` call returns nothing? Closing due to inactivity.  Context: boto3 (1.4.7) and botocore (1.7.9) installed through pip on a EC2 instance behind corporate proxies. The instance doesn't have direct access to the Internet. Environment variables (i.e., http_proxy, https_proxy, etc.) are properly configured.\r\n\r\nIssue: when calling boto3.client('sts').assume_role_with_saml, a POST request against the sts.amazonaws.com endpoint is done. This request ignores the proxies defined at environment level. If a proxy configuration is explicitly defined via the botocore.config.Config variable, the request is correctly proxied and works fine.\r\n You find it attached. The STS call is done at the end of the SAML exchange and the execution is stuck on the last log entry.\r\n\r\n[botocore_sts_proxy_issue_log.zip](https://github.com/boto/boto3/files/1302115/botocore_sts_proxy_issue_log.zip)\r\n This does appear to be a bug, although what I've noticed something odd in your debug log:\r\n\r\n```\r\nINFO:urllib3.connectionpool:Starting new HTTPS connection (1): **** stripped ****\r\n...\r\nINFO:botocore.vendored.requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): sts.amazonaws.com\r\n```\r\n\r\nIt appears that something is causing boto to pull from the unvendored and then the vendored library like that, but I suspect it might be at the core of this issue. The sample code to reproduce the issue is the one described in this post to implement federated API access:\r\n\r\nhttps://aws.amazon.com/it/blogs/security/how-to-implement-federated-api-and-cli-access-using-saml-2-0-and-ad-fs/\r\n\r\nThe only difference is the boto version, that in my code was upgraded to boto3.\r\n@dstufft I suspect that the unvendored call of urllib3 comes from the requests module.  @joguSD Since I'm in a federated login context, I've tested this simple script:\r\n\r\n```python\r\nimport boto3\r\nsession = boto3.session.Session(profile_name='***')\r\ns3 = session.client('s3')\r\ns3.list_buckets()\r\n```\r\n\r\nWhere the profile's credentials have been previously created in ~/.aws/credentials through a SAML exchange. It works fine and uses the environment proxy. The issue seems related somehow with the requests import after importing boto3. I'm having trouble reproducing this. Importing both requests and boto3 together will still allow me to make requests through both that go through my proxy. \r\n\r\n@giovadifiore  How are you verifying that the traffic isn't using your proxy? Attached there is the script that reproduces the issue.\r\n\r\nAt lines 5, 223-224 I've commented the workaround implemented for setting the proxy directly to the STS's client.\r\n\r\nAt line 40 you must configure the URL of an ADFS IdP.\r\n\r\n[saml-proxy-issue.zip](https://github.com/boto/boto3/files/1356231/saml-proxy-issue.zip)\r\n\r\n I've played around with this some more and unfortunately I can't reproduce it. `boto3` will always pick up on my proxy set via an environment variable, furthermore picking up on proxies from the environment comes from `urllib`, so I'm not sure if anything `boto3` specific is causing an issue here. Perhaps there's something strange with the environment setup you're running the code in. The last thing I can ask for is maybe TCP logs of the traffic when you run the script to ensure it's not attempting to use the proxy. I'm not sure if you'd be willing to provide those though.  The problem I have with the boto3 documentation can be found here: https://stackoverflow.com/questions/46174385/properly-catch-boto3-errors\r\n\r\nAm I doing this right? Or what is best practice when dealing with boto3 exceptions? Can this be added to the wiki? Yes, I am talking about the errorfactory documentation. Thanks I had the same question, until I realized that all service exceptions are tucked nicely in `.exceptions` of the resource/client. \r\n\r\nFor example, if using `iam` service:\r\n```\r\niam = boto3.client('iam')\r\n\r\ntry:\r\n    response = iam.create_role(\r\n        Path='/',\r\n        RoleName='Elastic_Transcoder_Viewly_Role',\r\n        AssumeRolePolicyDocument=trust_policy,\r\n        Description='Default Role'\r\n    )\r\nexcept iam.exceptions.EntityAlreadyExistsException:\r\n    pass\r\n``` I use this in the linked SO article. My issue is, that I can't find an overview of what exceptions exist. Having the exceptions in `.exceptions` of the resource/client is also not ideal when e.g. writing tests as you usually don't have the resource object available there.  I spent a lot of time due to misinformation on the wiki page dealing with the sns clients publish API. \r\n[the boto3 SNS documentation of the publish() function][1] is pretty confusing:\r\n\r\n> If you want to send the same message to **all transport protocols**, include the text of the message as a String value.\r\n\r\nWrong, GCM, a transport protocol that nearly all android devices use, does not work this way! Maybe this should be mentioned.\r\n\r\n> If you want to send different messages for each transport protocol, set the value of the MessageStructure parameter to json **and use a JSON object for the Message parameter**.\r\n\r\nNo, you can't use a JSON object for the Message parameter. The parameter still needs to be a string object. But it needs to contain parsable JSON. This should be reworded.\r\n\r\n> the value of the Message parameter must:\r\n\r\n> * be a syntactically valid JSON object; and\r\n\r\n> * contain at least a top-level JSON key of \"default\" with a value that is a string.\r\n\r\nNeither point is true.\r\n\r\nAlso, the fact that you need another `json.dumps()` within the JSON object is mentioned nowhere. A simple example like the one above would have helped wonders in that documentation.\r\n\r\n\r\nCould this be improved?\r\n\r\n\r\n  [1]: http://boto3.readthedocs.io/en/latest/reference/services/sns.html#SNS.Client.publish Thanks for passing the feedback along.  The management console now has a nice handy 'Description' for security groups. This is actually great for companies maintaining a very explicit whitelist and tracking them. \r\n\r\nIt appear this got released on the management console, but the documentation doesn't include new references to the field in Boto, suggesting it hasn't been included yet. \r\n\r\nScreenshot example of field in the management console: \r\n![descriptionexample](https://user-images.githubusercontent.com/18436531/30368683-d8bd6910-9869-11e7-909e-ed6fc799e4e1.PNG)\r\n  \r\nIn testing, had found a client error ``ClientError`` as follows:\r\n\r\n````An error occurred (ValidationException) when calling the BatchWriteItem operation: One or more parameter values were invalid: An AttributeValue may not contain an empty string````\r\n\r\nHowever, if I immediately put the same item via the regular put_item method, it worked fine. I used the code straight out of the docs, as follows:\r\n\r\n## Code\r\n```python\r\n    with ACCOUNTS_TABLE.batch_writer() as batch:\r\n        for item in items:\r\n            try:\r\n                batch.put_item(Item=item)\r\n            except ClientError as e:\r\n                print e.message\r\n                print item\r\n                ACCOUNTS_TABLE.put_item(Item=item)\r\n                print \"successfully posted via regular put_item\"\r\n```\r\n\r\n## Output\r\n```None\r\nAn error occurred (ValidationException) when calling the BatchWriteItem operation: One or more parameter values were invalid: An AttributeValue may not contain an empty string\r\n{'acc_short_name': 'name', 'account_id': '000000000000', 'secrets': {'external_id_1': 'randomstring', 'external_id_2': 'randomstring'}, 'canonical_user_id': 'randomstring', 'environments': ['[null]', 'hub'], 'available_volumes_prune': True, 'regions': ['us-west-2'], 'client': 'client name', 'listed': True, 'acc_description': None}\r\nsuccessfully posted via regular put_item\r\n```\r\n\r\nAfter turning on debug logging on botocore, it turned out that in the background it was batching up all of the items, and even though the error came up with this specific item, it was actually a totally different item that in the batch that was causing the problem. \r\n\r\n## Suggestion\r\n\r\nClientError should have a two new attributes: \r\n\r\n* api_call (or something like that) - details of what API and what method in the API was being invoked\r\n* params - a dictionary of the kwargs sent to the API\r\n  Checking to see if an account that I know has and entitlement to centos through the api returns no dictionary key 'Entitlements':\r\n\r\nBrief Code:\r\n\r\n```\r\nclient = session.client('marketplace-entitlement', verify=False)\r\nentitlements = client.get_entitlements(ProductCode='aw0evgkw8e5c1q413zgy5pjce')\r\npp.pprint(entitlements)\r\n```\r\nOutput:\r\n```\r\n{ 'ResponseMetadata': { 'HTTPHeaders': { 'cache-control': 'proxy-revalidate',\r\n                                         'connection': 'Keep-Alive',\r\n                                         'content-length': '2',\r\n                                         'content-type': 'application/x-amz-json-1.1',\r\n                                         'date': 'Tue, 12 Sep 2017 20:17:57 GMT',\r\n                                         'proxy-connection': 'Keep-Alive',\r\n                                         'x-amzn-requestid': '77935574-97f7-11e7-bd70-8bed5da0a1f8'},\r\n                        'HTTPStatusCode': 200,\r\n                        'RequestId': '77935574-97f7-11e7-bd70-8bed5da0a1f8',\r\n                        'RetryAttempts': 0}}\r\n``` Versions of boto3 and botocore\r\n\r\nboto3 (1.4.7)\r\nbotocore (1.7.9)\r\n Closing due to inactivity. Please reopen if you are able to provide debug logs.  **Problem**: Most modern web browsers, curl (`curl --compressed \"http://...\"`), wget (`wget -S --header=\"accept-encoding: gzip\" wordpress.com \"http://...\"`), and other tools will accept gzip-encoded web data and transparently decompress it before it is used or written out. boto3 has no built-in functionality to do this.\r\n\r\n**Proposed solution**: It would be helpful if boto3's `download_file()` could transparently decompress any object stored with `Content-Encoding: gzip` metadata. This would obviate the need for downstream tools to navigate decompression with streams, etc.\r\n\r\nIf not the default, perhaps an option could be passed to`ExtraArgs` to enable transparent gzip decompression. Having an option would be similar to a capable browser informing a server to send gzip via a header of `Accept-Encoding: gzip`.  Since S3 cannot set the encoding based on the `Accept-Encoding` header sent, it would be helpful if boto3 could better handle common `Content-Encoding` types. The `gzip` type seems like a reasonable place to start, but perhaps `download_file()` could accept an encoding handler as a kwarg to address various other content types. \r\n\r\nAlong with transparent decompression during download, it would be helpful to also specify an encoding handler for `upload_file()` that would act prior to upload and set the `ExtraArg` `ContentEncoding` accordingly.  I am using logging python package to log my errors messages\r\n\r\n> import logging\r\nlogging.basicConfig(filename='messages.log', level=logging.INFO)\r\nlogging.info('some message')\r\n\r\nit is writing my custom log messages to messages.log file working fine,\r\n\r\nwhen I started using boto3 SNS library \r\nwhen I publish messages to SNS, again \r\n\r\n> 08/30/2017 11:07:05 AM Starting new HTTPS connection (1): sns.us-west-2.amazonaws.com\r\n\r\nabove extra line was writing to messages.log file automatically \r\n\r\nI think by default logging package adding info messages to messages.log file correct me if I am wrong.\r\n\r\nIs it really info messages are coming from boto3 SNS package ?? if yes,  how to disable this info & warning messages that are coming from boto3 SNS package ???\r\n\r\nThanks  Looking at all documentation I couldn't find if boto3 supports creating Aurora postgresql-compatible DB instance - if not do we have any plan for that and could we have any other option to create such postgres compatible (like aws cli)? \r\n\r\nSorry if it's not appropriate for questions here. Thanks.  All,\r\n\r\nCan we create a boto3 convenience function that can sign HTTP requests meant for deployed API gateway-hosted customer endpoints protected by IAM?  This function would create a Sigv4 signature for the request and enable it to be sent as described in the documentation for IAM action 'execute-api:Invoke':\r\n\r\nhttp://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-iam-policy-examples-for-api-execution.html  Hello, SRP is not an easy thing to implement - would it be possible to have functionality similar to the 'CognitoUser.authenticateUser' ported to Boto3 so that users do not need to use 'initiate_auth' to handle the common scenario of 'username / password' authentication?\r\n\r\n[aws/amazon-cognito-identity-js/CognitoUser.js](https://github.com/aws/amazon-cognito-identity-js/blob/master/src/CognitoUser.js)\r\n\r\nThe Warrant package makes this capability available to users but may be incompatible for some customers due to GPLv3 licensing: https://github.com/capless/warrant\r\n\r\nCan I please request that an 'authenticate_user' or similar function be incorporated into the cognito-idp client? I would like to see an implementation as well, but Warrant is Apache 2.0 licensed, not GPLv3. I don't know your particular project or legal needs, jpbarto, but I don't believe Apache 2.0 is infectious. It might be worth looking at the license again. Mrunion, you are correct. Looking at the commit log it seems Warrant adopted Apache on 30 August, so no longer GPLv3. \r\n\r\nIn the interests of simplicity and parity with the JS SDK I think the convenience function still makes sense but happy to yield to the wider community on this one.\r\n I agree that a convenience function would be the way to go.   Doing a get with VersionId and then subsequent field access results in incorrect fields, since a load (HEAD request) is issued without the version id. The following is an excerpt from my test:\r\n\r\n```python\r\n\r\ndef test_versioning(self):\r\n        filename = random_file_path()\r\n        payload_a = \"hello world\"\r\n        payload_b = \"hello again\"\r\n\r\n        versioning = self.cloud_resource.BucketVersioning(self.BUCKET.name)\r\n        versioning.put(VersioningConfiguration={'Status': 'Enabled'})\r\n\r\n        obj_a = self.cloud_bucket.Object(filename)\r\n        obj_a.put(Body=payload_a)\r\n        etag_a = obj_a.e_tag\r\n        assert_that(obj_a.get(VersionId=obj_a.version_id)[\"Body\"].read(), equal_to(payload_a))\r\n        assert_that(obj_a.e_tag, equal_to(etag_a))\r\n\r\n        obj_b = self.cloud_bucket.Object(filename)\r\n        obj_b.put(Body=payload_b)\r\n\r\n        etag_b = obj_b.e_tag\r\n        assert_that(obj_b.get(VersionId=obj_b.version_id)[\"Body\"].read(), equal_to(payload_b))\r\n        assert_that(obj_b.e_tag, equal_to(etag_b))\r\n\r\n        assert_that(obj_a.get(VersionId=obj_a.version_id)[\"Body\"].read(), equal_to(payload_a))\r\n        # Test fails at the next assert, because reading e_tag triggers a load() without VersionId\r\n        assert_that(obj_a.e_tag, equal_to(etag_a))\r\n```\r\n\r\nIn general - isn't this a race condition? Why can't the fields be filled in during the GET request - why is another HEAD request issued?\r\n\r\n- Python 2.7.13\r\n- boto3 (1.4.6)\r\n- botocore (1.6.8)\r\n @joguSD I don't mean a thread safety race condition, I mean a bucket race condition. Assume that I have versioning disabled, and I do a get on an object, while someone else at the same time does a put. Because of the subsequent load, the fields that I read are going to be for the next object. In general this is fine if I were to explicitly do another get - I know I might get something else, but I don't know that accessing a field after a get means a reload gets triggered in the background:\r\n\r\n```python\r\nobj = bucket.Object(\"hello.txt\")\r\nresp = obj.get()\r\ndo_something()\r\n# Someone updates hello.txt in another program\r\n# This next line will issue a load() and read the e_tag of the new file,\r\n# and not the one i did get() on. This is completely hidden by the library,\r\n# and instead it looks like I should only ever trust resp[\"ETag\"]\r\nprint(obj.e_tag)\r\n```  In the console (and credential reports), I can see the age of a password. It appears you are calculating this by using the lastModified timestamp of a LoginProfile object. If I inspect the calls in the console, I can trace down to a timestamp in this data element which corresponds to the value in the column.\r\n\r\nWhen I use boto3 in the following way:\r\n```\r\nimport boto3\r\niam = boto3.client('iam')\r\niam.get_login_profile(UserName='some_user')\r\n```\r\n\r\nThe response looks like this:\r\n```\r\n{u'LoginProfile': {u'CreateDate': datetime.datetime(XXXX, XX, XX, 19, 29, 36, tzinfo=tzlocal()),\r\n  u'PasswordResetRequired': False,\r\n  u'UserName': 'XXXXXXXXX'},\r\n 'ResponseMetadata': {'HTTPHeaders': {'content-length': '455',\r\n   'content-type': 'text/xml',\r\n   'date': 'Mon, 28 Aug 2017 15:45:31 GMT',\r\n   'x-amzn-requestid': 'ec4e1851-8c07-11e7-9ee3-8176427efed0'},\r\n  'HTTPStatusCode': 200,\r\n  'RequestId': 'ec4e1851-8c07-11e7-9ee3-8176427efed0',\r\n  'RetryAttempts': 0}}\r\n```\r\n\r\nYou will not that LastModified is not here, so I cannot programmatically determine the age of someone's password.\r\n\r\nI'd like to do this because we have a password expiration policy and I'd like to let the user know 2 weeks before that their AWS password is expiring soon. FWIW, it's not in the Java either:\r\nhttp://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/index.html\r\n\r\nOr the raw API:\r\nhttp://docs.aws.amazon.com/IAM/latest/APIReference/API_LoginProfile.html\r\n\r\nBut it *should* be (or at least some mechanism for determining the age of the password).  ec2.Waiter.ImageAvailable doesn't wait till image state is \"available\"\r\n```\r\nfor image in images['Images']:\r\n    print(\"building image for %s\" % image['Name'])\r\n    instance = buildinstance(SharedServicesCreds, image)\r\n    instance[0].wait_until_running()\r\n    pp.pprint(instance[0].launch_time)\r\n    newimage = instance[0].create_image(Name=image['Name'])\r\n    pp.pprint(newimage.state)\r\n    # wait_until_exits only checks that the image exists not that it is in state available\r\n    newimage.wait_until_exists()\r\n    waiter = sharedservicesec2client.get_waiter('image_available')\r\n    waiter.wait(ImageIds=[ newimage.image_id ])\r\n    pp.pprint(newimage.state)\r\n```\r\n\r\nbuilding image for MY-RHEL7-INSTANCE\r\ndatetime.datetime(2017, 8, 18, 17, 24, 43, tzinfo=tzutc())\r\n'pending'\r\n'pending'\r\n Yes that is exactly what I found after some experimenting... however this does not match the behavior of other waiters.  The waiters for ec2.instance work just fine.  Perhaps the issue is what is being returned by ec2.instance.create_image? I am writing this from my phone so I may not be exact in my detail so please forgive me ahead of time.  \r\n\r\nSo I read @jogusd comment about my data being stale again.  The data in newimage is indeed stale. This is also an issue as it does not match the same behavior as ec2.instance which is updated as can be seen in the instance[0].wait_until_running()\r\n\r\nAlso the waiter immediately returns and the state of the image is still pending. I know this because the next line in the code that is not shown is instance[0].terminate() and that causes the image to fail because the instance is no longer available. \r\n\r\nI had to write a while loop that does an ec2.describe_instances() with a filter on ImageId that checks the state until it reaches \"available\".  Essentially I am doing what I expect the waiter to do.\r\n\r\nWould you like me to write some code to prove that the waiter is not working?  > As a workaround for now you could manually refresh your resource after the waiter has ended.\r\n\r\nSilly question but how would I manually refresh the resource?  Simple code example would help  :)  I have a folder that contains some python scripts that use boto3. I'm going to put this folder on an EC2 instance and run the scripts on it. However, the EC2 instance doesn't have boto3 installed. So I'm thinking I can install boto3 on my local desktop, and then put everything that running boto3 requires into the same folder as those python scripts, so I can directly run them on the EC2 instance without installing boto3. Is there any way to do it?  Maybe you can use git clone the whole project in your own folder and then import boto3.client or boto3.resource from [boto3](https://github.com/boto/boto3/blob/develop/boto3/__init__.py).\r\nBut why not you use docker? \"Build once and run everywhere\" is exactly what docker is used for. And more, boto3 depends on some other third party package too, even you could git clone boto3, would you git clone all dependencies?  So just use docker, it is cooler. Docker is not the answer for everything.  Related idea: use an image which supports the Anaconda distribution,\r\nthen conda install boto3. The installation is easy and reliable.\r\n\r\nIt seems the *real* issue is not a matter of single directory,\r\nbut an \"import boto3\" which is operational.  **Use Case:**  \r\nI want to return all instances matching a given key/value pair of tags.  Since that number may be large in our staging or production environment, I want to use paginators and iterate over the values returned from the API.\r\n\r\nI am attempting to use the paginator built into the EC2 client ([EC2.Paginator.DescribeInstances](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Paginator.DescribeInstances)), but I am getting an error code that looks like the combination of filtering by tags and paginating is not supported.  \r\n\r\n[Sample Code](https://gist.github.com/Joseph-R/ae7199c25833704c56ceee354b1f4a4c)\r\n\r\n**Stack Trace:**\r\n```\r\nML-C02TP0JSG8WL:aws_scripts jreid$ python3 paginator_test.py\r\nTraceback (most recent call last):\r\n  File \"paginator_test.py\", line 32, in <module>\r\n    for instance in response_iterator:\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/botocore/paginate.py\", line 249, in __iter__\r\n    response = self._make_request(current_kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/botocore/paginate.py\", line 326, in _make_request\r\n    return self._method(**current_kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/botocore/client.py\", line 310, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/botocore/client.py\", line 599, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (InvalidParameterCombination) when calling the DescribeInstances operation: The parameter 'nextToken' cannot be used with tag filters in the parameter 'filterSet'. Remove either the tag filters from 'filterSet' or the 'nextToken' parameter and try again.\r\n```\r\n\r\nEither my approach/code is incorrect, this is an error, or it's undocumented behavior.  Either way, I figured it was worth a ticket.  \r\n\r\nI'd also appreciate any guidance on how best to address my use case with the restrictions in place, please. As a workaround (though admittedly undesirable) you can filter on the client side.  _Original issue was created on https://github.com/awslabs/aws-sam-local/issues/59_\r\n\r\n_Apologies in advance if this is not the right place to open this issue, I don't have an extensive experience with aws-sam-local or Python, so I may be missing something really stupid._\r\n\r\nI am building a Python logic to run on AWS Lambda and chose [aws-sam-local](https://github.com/awslabs/aws-sam-local) as framework.\r\n\r\nI came up with a [simple Python test file](https://gist.github.com/maoo/2175a1c4b75a80c7271943591afb4920#file-test-py) which works fine when executed with python2.7:\r\n```\r\npip install boto3 -t .\r\npython -c 'from test import test1; test1(None,None)'\r\n```\r\n\r\nHowever, when trying to use `python3.6` as `Runtime` (as originally mentioned in [template.yaml](https://gist.github.com/maoo/2175a1c4b75a80c7271943591afb4920#file-template-yaml-L10)), I get a `SyntaxError: invalid syntax` on line `client = boto3.client('s3')`; the full history is on https://gist.github.com/maoo/2175a1c4b75a80c7271943591afb4920#file-error-log\r\n\r\nSteps to reproduce the issue:\r\n1. install npm\r\n2. `npm install -g aws-sam-local`\r\n3. Download `test.py` and `template.yaml` locally, same folder\r\n4. `echo '{}' | sam local invoke Test`\r\n\r\nSwitching the `Runtime` to `python2.7` fixes the issue; anyone else having the same problem? Any idea what the cause could be?\r\n\r\nTIA  This issue explains precisely how to do it for JavaScript, but how to do it in Python/boto3?\r\n\r\nhttps://github.com/aws/aws-sdk-js/issues/891\r\n\r\nI can't find any documentation that explains how to do what the JavaScript SDK does.\r\n\r\nthanks Thanks for this answer which is correct, but in the end I had to go for a solution implementing CloudFront private content because you can only do HTTP if you get signed URLs for S3, not hTTPS.  I have written a python script to check the health of my ELBs.\r\n\r\nI am running the script from a VM.\r\n\r\nI need to log in and assume a role before I can check the state of the ELBs.\r\n\r\nWhen I was running this program on my machine, I would assume a role in the shell and then run my program in that shell. I need to do the same process on my VM but am encountering difficulty.\r\n\r\nMy code for logging in and assuming a role is here:\r\n\r\n```\r\ndef assume_role(cls, env):\r\n\r\n        client = boto3.client (\r\n        'sts',\r\n        aws_access_key_id='XXX',\r\n        aws_secret_access_key='xxx'\r\n        )\r\n\r\n        account = ELB.account_handler(env)\r\n\r\n        assumed_role_object = client.assume_role(\r\n            RoleArn = \"arn:aws:iam::{}:role/SmokeTester\".format(account),\r\n            RoleSessionName=\"SmokeTester\"\r\n        )\r\n\r\n        credentials = assumed_role_object['Credentials']\r\n\r\n        s3_resource = boto3.resource(\r\n        'cloudformation',\r\n        aws_access_key_id = credentials['AccessKeyId'],\r\n        aws_secret_access_key = credentials['SecretAccessKey'],\r\n        aws_session_token = credentials['SessionToken']\r\n        )\r\n```\r\n\r\nThe part of my code that calls the load balancers looks like this:\r\n\r\n```\r\nclient=boto3.client('elb')\r\n\r\nELB.ELBList = ELB.ELBList or client.describe_load_balancers()['LoadBalancerDescriptions']\r\n```\r\n\r\nEssentially I need to know how to export the logged in status to the environment, or how to call the ELB client with the sts credentials I have. If that doesn't make sense then it's because I'm a bit stumped as to how to solve it! Thanks for your help, I'll implement this now and let you know how I get on. My code now looks like this:\r\n\r\n```\r\ndef assume_role(self, env):\r\n\r\n        smoker_keys = helpers.import_from(<file_location>)\r\n\r\n        sesh = boto3.session.Session(\r\n            aws_access_key_id=smoker_keys['aws_access_key_id'],\r\n            aws_secret_access_key=smoker_keys['aws_secret_access_key']\r\n        )\r\n\r\n        sts_client = sesh.client('sts')\r\n\r\n        account = self.account_number(env)\r\n\r\n        assumed_role_object = sts_client.assume_role(\r\n            RoleArn = \"arn:aws:iam::{}:role/SmokeTester\".format(account),\r\n            RoleSessionName=\"SmokeTester\"\r\n        )\r\n\r\n        credentials = assumed_role_object['Credentials']\r\n\r\n        elb_client = boto3.client(\r\n            'elb',\r\n            aws_access_key_id = credentials['AccessKeyId'],\r\n            aws_secret_access_key = credentials['SecretAccessKey'],\r\n            aws_session_token = credentials['SessionToken']\r\n        )\r\n        return elb_client\r\n```\r\n\r\nIt returns a logged in ELB client that I then use to check the health of the instances running on the ELBs.  Boto3 documentation shows following example for scan method:\r\n\r\n>response = client.scan(\r\n    ExpressionAttributeNames={\r\n        '**AT**': 'AlbumTitle',\r\n        '**ST**': 'SongTitle',\r\n    },\r\n    ExpressionAttributeValues={\r\n        ':a': {\r\n            'S': 'No One You Know',\r\n        },\r\n    },\r\n    FilterExpression='Artist = :a',\r\n    ProjectionExpression='**#ST**, **#AT**',\r\n    TableName='Music',\r\n)\r\nprint(response)\r\n\r\nIn ExpressionAttributeNames, AT & ST should be #AT, #ST otherwise it's going to throw an error.\r\n[http://boto3.readthedocs.io/en/stable/reference/services/dynamodb.html#DynamoDB.Client.scan](url)  The question is in the title: how to do this? Didn't find any method. I ask if Boto has such API method, I don't ask the advice. > You'll have to combine describes and creates to 'copy' them.\r\n\r\nAlready [combined](https://github.com/Suncatcher/aws_sg_migrate/blob/master/aws_sg_migrate.py). But I assume this requirement is rather common and you should consider this in future versions of Boto API.  The boto3 docs for MTurk send_bonus do not mark the `Reason` param as `[REQUIRED]`: http://boto3.readthedocs.io/en/latest/reference/services/mturk.html#MTurk.Client.send_bonus\r\n\r\nBut, if I omit this param, I get:\r\n\r\n> Value null at 'reason' failed to satisfy constraint:\r\n> Member must not be null.\"\r\n> \r\n\r\nAWS docs say Reason is required: http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_SendBonusOperation.html\r\n\r\nUsing boto3==1.4.4.\r\n  The boto3 docs for reject_assignment say that the `RequesterFeedback` param is optional:\r\n\r\n> You can include an optional feedback message with the rejection\r\n\r\nAnd while the `AssignmentId` param is marked `[REQUIRED]`, `RequesterFeedback` is not.\r\n\r\nBut, if I omit `RequesterFeedback`, I get:\r\n\r\n> An error occurred (ValidationException) when calling the RejectAssignment operation:\r\n> 1 validation error detected: Value null at 'requesterFeedback'\r\n> failed to satisfy constraint: Member must not be null\r\n> \r\n\r\nAWS docs say RequesterFeedback is required (but the prose seems to contradict the table):\r\nhttp://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_RejectAssignmentOperation.html  When creating a CloudFormation stack that fails due to a resource already existing and rollback is enabled, the StackCreateComplete waiter throws an exception that it encountered a terminal failure state.\r\n\r\n```python\r\n    boto3.set_stream_logger('boto3', level=boto3.logging.DEBUG)\r\n    boto3.set_stream_logger('botocore', level=boto3.logging.DEBUG)\r\n    boto3.set_stream_logger('boto3.resources', level=boto3.logging.DEBUG)\r\n\r\n    cf = boto3.client('cloudformation')\r\n    print(\"Creating stack...\")\r\n    cf.create_stack(StackName=STACKNAME, TemplateBody=TEMPLATE)\r\n    print(\"Waiting for stack creation to complete...\")\r\n    cf.get_waiter('stack_create_complete').wait(StackName=STACKNAME)\r\n```\r\n\r\nLogging output:\r\n```\r\n2017-08-10 09:48:45,051 botocore.credentials [DEBUG] Looking for credentials via: env\r\n2017-08-10 09:48:45,051 botocore.credentials [INFO] Found credentials in environment variables.\r\n2017-08-10 09:48:45,052 botocore.loaders [DEBUG] Loading JSON file: /usr/local/lib/python2.7/dist-packages/botocore/data/endpoints.json\r\n2017-08-10 09:48:45,069 botocore.loaders [DEBUG] Loading JSON file: /usr/local/lib/python2.7/dist-packages/botocore/data/cloudformation/2010-05-15/service-2.json\r\n2017-08-10 09:48:45,080 botocore.loaders [DEBUG] Loading JSON file: /usr/local/lib/python2.7/dist-packages/botocore/data/_retry.json\r\n2017-08-10 09:48:45,081 botocore.client [DEBUG] Registering retry handlers for service: cloudformation\r\n2017-08-10 09:48:45,082 botocore.hooks [DEBUG] Event creating-client-class.cloudformation: calling handler <function add_generate_presigned_url at 0x7ff8793a57d0>\r\n2017-08-10 09:48:45,083 botocore.args [DEBUG] The s3 config key is not a dictionary type, ignoring its value of: None\r\n2017-08-10 09:48:45,084 botocore.endpoint [DEBUG] Setting cloudformation timeout as (60, 60)\r\nCreating stack...\r\n2017-08-10 09:48:45,085 botocore.hooks [DEBUG] Event before-parameter-build.cloudformation.CreateStack: calling handler <function generate_idempotent_uuid at 0x7ff879351e60>\r\n2017-08-10 09:48:45,086 botocore.endpoint [DEBUG] Making request for OperationModel(name=CreateStack) (verify_ssl=True) with params: [redacted]\r\n2017-08-10 09:48:45,087 botocore.hooks [DEBUG] Event request-created.cloudformation.CreateStack: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7ff878eeb390>>\r\n2017-08-10 09:48:45,087 botocore.hooks [DEBUG] Event choose-signer.cloudformation.CreateStack: calling handler <function set_operation_specific_signer at 0x7ff879351d70>\r\n2017-08-10 09:48:45,088 botocore.auth [DEBUG] Calculating signature using v4 auth.\r\n2017-08-10 09:48:45,088 botocore.auth [DEBUG] CanonicalRequest:[redacted]\r\n2017-08-10 09:48:45,090 botocore.auth [DEBUG] Signature:[redacted]\r\n2017-08-10 09:48:45,094 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [POST]>\r\n2017-08-10 09:48:45,095 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTPS connection (1): cloudformation.us-west-2.amazonaws.com\r\n2017-08-10 09:48:45,455 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"POST / HTTP/1.1\" 200 380\r\n2017-08-10 09:48:45,455 botocore.parsers [DEBUG] Response headers: {'x-amzn-requestid': '[redacted]', 'date': 'Thu, 10 Aug 2017 16:48:45 GMT', 'content-length': '380', 'content-type': 'text/xml'}\r\n2017-08-10 09:48:45,456 botocore.parsers [DEBUG] Response body:\r\n<CreateStackResponse xmlns=\"http://cloudformation.amazonaws.com/doc/2010-05-15/\">\r\n  <CreateStackResult>\r\n    <StackId>[redacted]</StackId>\r\n  </CreateStackResult>\r\n  <ResponseMetadata>\r\n    <RequestId>[redacted]</RequestId>\r\n  </ResponseMetadata>\r\n</CreateStackResponse>\r\n\r\n2017-08-10 09:48:45,457 botocore.hooks [DEBUG] Event needs-retry.cloudformation.CreateStack: calling handler <botocore.retryhandler.RetryHandler object at 0x7ff878f64cd0>\r\n2017-08-10 09:48:45,457 botocore.retryhandler [DEBUG] No retry needed.\r\nWaiting for stack creation to complete...\r\n2017-08-10 09:48:45,465 botocore.loaders [DEBUG] Loading JSON file: /usr/local/lib/python2.7/dist-packages/botocore/data/cloudformation/2010-05-15/waiters-2.json\r\n2017-08-10 09:48:45,466 botocore.hooks [DEBUG] Event before-parameter-build.cloudformation.DescribeStacks: calling handler <function generate_idempotent_uuid at 0x7ff879351e60>\r\n2017-08-10 09:48:45,466 botocore.endpoint [DEBUG] Making request for OperationModel(name=DescribeStacks) (verify_ssl=True) with params: {'body': {'Action': u'DescribeStacks', 'StackName': '[redacted]', 'Version': u'2010-05-15'}, 'url': u'https://cloudformation.us-west-2.amazonaws.com/', 'headers': {'User-Agent': 'Boto3/1.4.5 Python/2.7.6 Linux/4.4.0-43-Microsoft Botocore/1.5.94'}, 'context': {'auth_type': None, 'client_region': 'us-west-2', 'has_streaming_input': False, 'client_config': <botocore.config.Config object at 0x7ff878eeb410>}, 'query_string': '', 'url_path': '/', 'method': u'POST'}\r\n2017-08-10 09:48:45,466 botocore.hooks [DEBUG] Event request-created.cloudformation.DescribeStacks: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7ff878eeb390>>\r\n2017-08-10 09:48:45,466 botocore.hooks [DEBUG] Event choose-signer.cloudformation.DescribeStacks: calling handler <function set_operation_specific_signer at 0x7ff879351d70>\r\n2017-08-10 09:48:45,467 botocore.auth [DEBUG] Calculating signature using v4 auth.\r\n2017-08-10 09:48:45,467 botocore.auth [DEBUG] CanonicalRequest:[redacted]\r\n2017-08-10 09:48:45,468 botocore.auth [DEBUG] StringToSign:[redacted]\r\n2017-08-10 09:48:45,533 botocore.parsers [DEBUG] Response body:\r\n<DescribeStacksResponse xmlns=\"http://cloudformation.amazonaws.com/doc/2010-05-15/\">\r\n  <DescribeStacksResult>\r\n    <Stacks>\r\n      <member>\r\n        <CreationTime>2017-08-10T16:48:45.324Z</CreationTime>\r\n        <NotificationARNs/>\r\n        <StackId>[redacted]</StackId>\r\n        <StackName>[redacted]</StackName>\r\n        <StackStatus>CREATE_IN_PROGRESS</StackStatus>\r\n        <DisableRollback>false</DisableRollback>\r\n        <Tags/>\r\n        <StackStatusReason>User Initiated</StackStatusReason>\r\n      </member>\r\n    </Stacks>\r\n  </DescribeStacksResult>\r\n  <ResponseMetadata>\r\n    <RequestId>[redacted]</RequestId>\r\n  </ResponseMetadata>\r\n</DescribeStacksResponse>\r\n\r\n2017-08-10 09:48:45,535 botocore.hooks [DEBUG] Event needs-retry.cloudformation.DescribeStacks: calling handler <botocore.retryhandler.RetryHandler object at 0x7ff878f64cd0>\r\n2017-08-10 09:48:45,535 botocore.retryhandler [DEBUG] No retry needed.\r\n2017-08-10 09:49:15,536 botocore.hooks [DEBUG] Event before-parameter-build.cloudformation.DescribeStacks: calling handler <function generate_idempotent_uuid at 0x7ff879351e60>\r\n2017-08-10 09:49:15,536 botocore.endpoint [DEBUG] Making request for OperationModel(name=DescribeStacks) (verify_ssl=True) with params: [redacted]\r\n2017-08-10 09:49:15,537 botocore.hooks [DEBUG] Event request-created.cloudformation.DescribeStacks: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7ff878eeb390>>\r\n2017-08-10 09:49:15,537 botocore.hooks [DEBUG] Event choose-signer.cloudformation.DescribeStacks: calling handler <function set_operation_specific_signer at 0x7ff879351d70>\r\n2017-08-10 09:49:15,537 botocore.auth [DEBUG] Calculating signature using v4 auth.\r\n2017-08-10 09:49:15,537 botocore.auth [DEBUG] CanonicalRequest:[redacted]\r\n2017-08-10 09:49:15,539 botocore.auth [DEBUG] StringToSign:[redacted]\r\n2017-08-10 09:49:15,539 botocore.auth [DEBUG] Signature:[redacted]\r\n2017-08-10 09:49:15,540 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [POST]>\r\n2017-08-10 09:49:15,540 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Resetting dropped connection: cloudformation.us-west-2.amazonaws.com\r\n2017-08-10 09:49:15,721 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"POST / HTTP/1.1\" 200 704\r\n2017-08-10 09:49:15,721 botocore.parsers [DEBUG] Response headers: {'x-amzn-requestid': [redacted]', 'date': 'Thu, 10 Aug 2017 16:49:15 GMT', 'content-length': '704', 'content-type': 'text/xml'}\r\n2017-08-10 09:49:15,721 botocore.parsers [DEBUG] Response body:\r\n<DescribeStacksResponse xmlns=\"http://cloudformation.amazonaws.com/doc/2010-05-15/\">\r\n  <DescribeStacksResult>\r\n    <Stacks>\r\n      <member>\r\n        <CreationTime>2017-08-10T16:48:45.324Z</CreationTime>\r\n        <NotificationARNs/>\r\n        <StackId>[redacted]</StackId>\r\n        <StackName>[redacted]</StackName>\r\n        <StackStatus>ROLLBACK_COMPLETE</StackStatus>\r\n        <DisableRollback>false</DisableRollback>\r\n        <Tags/>\r\n      </member>\r\n    </Stacks>\r\n  </DescribeStacksResult>\r\n  <ResponseMetadata>\r\n    <RequestId>[redacted]</RequestId>\r\n  </ResponseMetadata>\r\n</DescribeStacksResponse>\r\n\r\n2017-08-10 09:49:15,723 botocore.hooks [DEBUG] Event needs-retry.cloudformation.DescribeStacks: calling handler <botocore.retryhandler.RetryHandler object at 0x7ff878f64cd0>\r\n2017-08-10 09:49:15,723 botocore.retryhandler [DEBUG] No retry needed.\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 23, in <module>\r\n    main()\r\n  File \"test.py\", line 19, in main\r\n    cf.get_waiter('stack_create_complete').wait(StackName=STACKNAME)\r\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/waiter.py\", line 53, in wait\r\n    Waiter.wait(self, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/waiter.py\", line 321, in wait\r\n    last_response=response,\r\nbotocore.exceptions.WaiterError: Waiter StackCreateComplete failed: Waiter encountered a terminal failure state\r\n``` After looking through the source it appears that this is working as intended.  My apologies.  I was under the impression that this exception was for unexpected failures instead of ones specific to StackCreateComplete.\r\n\r\nInstead I will frame this as a feature request:\r\n\r\nI would like to be able to retrieve error information from the WaiterError class, similar to ClientError's API.  In my example, there was a CREATE_FAILED event on the stack resource that resulted from my CreateStack call (which subsequently resulted in a rollback) that would be desirable to access after using the waiter.  At present, the user has to list the stack events after the wait and obtain the error from there. Being able to track the exact reasons for failure states may be tricky. Marking as a feature request.  As I understand it, the etag for files <5GB should be the md5 checksum of the file.  I've been trying to verify the integrity of the file that I upload.\r\n\r\n```\r\nINFO [2017-08-10 11:56:11,580] s3_archive.py:77 - file md5: \"6f5902ac237024bdd0c176cb93063dc4\"\r\nINFO [2017-08-10 11:56:12,051] s3_archive.py:104 - s3 md5: \"8c3069f889268407669a62bbf03f8d54\"\r\n```\r\n\r\nConsole output for MD5:\r\n```\r\n/testS3 md5sum testfile\r\n6f5902ac237024bdd0c176cb93063dc4  testfile\r\n```\r\n\r\nwhen uploading through the AWS console the etag matches my md5:\r\n![image](https://user-images.githubusercontent.com/4924582/29182288-ee848848-7dc3-11e7-85f8-599469ebea48.png)\r\n\r\n\r\nMy code.\r\n```\r\n#!/usr/bin/env python\r\n\r\nfrom __future__ import print_function\r\n\r\nimport argparse\r\nimport logging\r\nimport time\r\nimport os\r\nimport boto3\r\nimport botocore\r\nimport hashlib\r\n\r\n\r\ndef get_md5(file_path, chunk_size=8 * 1024 * 1024):\r\n    md5s = []\r\n\r\n    with open(file_path, 'rb') as fp:\r\n        while True:\r\n            data = fp.read(chunk_size)\r\n            if not data:\r\n                break\r\n            md5s.append(hashlib.md5(data))\r\n\r\n    if len(md5s) == 1:\r\n        return '\"{}\"'.format(md5s[0].hexdigest())\r\n\r\n    digests = b''.join(m.digest() for m in md5s)\r\n    digests_md5 = hashlib.md5(digests)\r\n    return '\"{}-{}\"'.format(digests_md5.hexdigest(), len(md5s))\r\n\r\n\r\ndef main():\r\n    parser = argparse.ArgumentParser(\r\n        description='S3 Archiver - reads a directory and uploads all files to s3, then deletes')\r\n    parser.add_argument('--dir', help='path to check, this will recurse!', required=True)\r\n    parser.add_argument('--age', help='age of files for archival, currently in hours, defaults to 24 hours',\r\n                        type=int, default=24, required=False)\r\n    parser.add_argument('--bucket', help='S3 bucket name to copy content to', required=True)\r\n    parser.add_argument('--dry-run', dest='dry_run',\r\n                        help='use this flag to see what files will be archived without performing the actions',\r\n                        action='store_true', default=False, required=False)\r\n    parser.add_argument('--delete', help='delete files', action='store_true', default=False, required=False)\r\n    parser.add_argument('--log-level', dest='log_level', action='store',\r\n                        choices=['DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL'], default='INFO',\r\n                        help='level of diagnostic information to write to STDERR, defaults to INFO')\r\n    args = parser.parse_args()\r\n\r\n    directory = args.dir\r\n    age = int(args.age) * 3600\r\n    bucket_name = args.bucket\r\n    dry_run = args.dry_run\r\n    delete_flag = args.delete\r\n    logging.basicConfig(level=getattr(logging, args.log_level),\r\n                        format='%(levelname)s [%(asctime)s] %(pathname)s:%(lineno)d - %(message)s')\r\n    logger = logging.getLogger()\r\n    older_than = (time.time()) - age\r\n\r\n    s3 = boto3.resource('s3')\r\n    bucket = s3.Bucket(bucket_name)\r\n\r\n    if dry_run:\r\n        logger.info('DRY RUN SELECTED - no uploads or deletes will occur')\r\n\r\n    if not delete_flag:\r\n        logger.info('delete_flag set to False, no deletes will occur')\r\n\r\n    # get all files older than our specified hours period\r\n    files_to_upload = []\r\n    files_to_delete = []\r\n    for root, dir_names, filenames in os.walk(directory):\r\n        for filename in filenames:\r\n            full_path = os.path.join(root, filename)\r\n            if os.stat(full_path).st_mtime < older_than:\r\n                # remove the leading / for the key, when using s3 the leading / gives us a blank dir name\r\n                key = full_path[1:]\r\n                md5 = get_md5(full_path)\r\n                logger.info('file md5: {0}'.format(md5))\r\n                try:\r\n                    bucket.Object(key).load()\r\n                except botocore.exceptions.ClientError as e:\r\n                    if e.response['Error']['Code'] == \"404\":\r\n                        files_to_upload.append(full_path)\r\n                        logger.info('adding file: {0}'.format(full_path))\r\n                    else:\r\n                        logger.error('error on checking for file exists in s3 for file: {0}'.format(full_path))\r\n                        logger.error('exists exception: {0}'.format(e))\r\n                else:\r\n                    logger.info('file exists, not uploading adding to delete: {0}'.format(full_path))\r\n                    files_to_delete.append(full_path)\r\n\r\n    for upload in files_to_upload:\r\n        try:\r\n            # see above... regarding leading /\r\n            key = upload[1:]\r\n            logger.info('uploading: {0}'.format(upload))\r\n            if not dry_run:\r\n                bucket.Object(key).put(Body=upload)\r\n        except botocore.exceptions.ClientError as e:\r\n            logger.error('error on file upload to s3 for file: {0}'.format(full_path))\r\n            logger.error('upload exception: {0}'.format(e))\r\n        else:\r\n            files_to_delete.append(upload)\r\n            s3md5 = bucket.Object(key).e_tag\r\n            logger.info('s3 md5: {0}'.format(s3md5))\r\n\r\n    for delete in files_to_delete:\r\n        if delete_flag:\r\n            logger.info('deleting file: {0}'.format(delete))\r\n            if not dry_run:\r\n                os.remove(delete)\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nwhat am i missing here? Thanks, I swear I did try the other upload methods yesterday and got the same result, anyway.  The documentation describing the DynamoDB put_item methods includes a warning stating that:\r\n\r\n> This topic provides general information about the PutItem API.\r\n>\r\n> For information on how to call the PutItem API using the AWS SDK in specific languages, see the following\r\n> [links to SDK docs for each language]\r\n\r\nThis is confusing to the reader, as it is effectively saying \"these docs aren't what you are looking for: go over here instead\", and then the link takes them back to exactly where they started.\r\n\r\nI assume this warning is only meant to be displayed in the API guide, and not in any of the SDK docs?\r\n\r\nhttps://boto3.readthedocs.io/en/latest/reference/services/dynamodb.html#DynamoDB.Client.put_item  I have scenario where I have user store account, master account (consolidated billing) under the organization. I am trying to create new accounts under organization\r\nFor this I have to assume admin role in master account, create new account and then assume role in new account to do further things. \r\n\r\nAbove gives\r\n`botocore.exceptions.ClientError: An error occurred (AccessDenied) when calling the AssumeRole operation: Not authorized to perform sts:AssumeRole`\r\n\r\nHere is example snippet:\r\nhttps://gist.github.com/shrikant0013/a7eaf556268458a46764cec07e0c8004\r\n\r\nInteresting thing is very similar flow works in case of other calls like organizations.describe_account\r\nHere is example snippet:\r\nhttps://gist.github.com/shrikant0013/3232d9f59407626839e46169d9ef4a86\r\n\r\nIs this related Session caching? Why doesn't it work in create but works in describe?  I have an S3 bucket with object keys following Example 1 in this [guide](http://docs.aws.amazon.com/AmazonS3/latest/dev/request-rate-perf-considerations.html):\r\n\r\n```\r\nexamplebucket/232a-2013-26-05-15-00-00/cust1234234/photo1.jpg\r\nexamplebucket/7b54-2013-26-05-15-00-00/cust3857422/photo2.jpg\r\nexamplebucket/2e4f-2013-26-05-15-00-01/cust1248473/photo4.jpg\r\nexamplebucket/9810-2013-26-05-15-00-01/cust1248473/photo5.jpg\r\n```\r\n\r\nIs there a way to list all objects using range filters as suggested in the guide? I've tried this, but get no returned objects:\r\n\r\n```python\r\nimport boto3\r\ns3 = boto3.resource('s3')\r\nmy_bucket = s3.Bucket('bucketname')\r\nfor obj in my_bucket.objects.filter(Prefix='[0-f][0-f][0-f][0-f]-2013-26-05-15-00-01/'):\r\n    print(obj)\r\n```\r\n\r\n  Hi,\r\n\r\nIf you go to \r\nhttps://boto3.readthedocs.io/en/latest/reference/services/athena.html#Athena.Client.get_waiter\r\nlooks like that feature is not implemented.\r\n\r\nI have a lambda function which executes Athena queries. I use a function called `start_query_execution()` in boto3 and I need to write a loop to check if the execution is finished or not, so I think it will be awesome if we have waiter feature implemented in Athena. \r\n\r\nThanks Any updates on this?  On this page:\r\n\r\nhttp://boto3.readthedocs.io/en/latest/reference/services/mturk.html\r\n\r\nIt seems all the links that say \"See also: AWS API Documentation\" are broken. They all redirect to https://aws.amazon.com/documentation/ (AWS docs home page).\r\n\r\nExample broken links:\r\n\r\nhttps://docs.aws.amazon.com/goto/WebAPI/mturk-requester-2017-01-17/ListWorkersWithQualificationType\r\n\r\nhttps://docs.aws.amazon.com/goto/WebAPI/mturk-requester-2017-01-17/NotifyWorkers\r\n  Log about called API on `DEBUG` level, but not `INFO`.\r\nLogging such things for every operation, which can be hundreds per second, as `INFO` is a noisy trash in the logs and even an unnecessary information.\r\n\r\nSee also boto/botocore#1257  Hello,\r\n\r\nI am trying to use a boto3 client in my python project. It works fine without multithreading\r\nWhen calling the function with multithreading, the process crashes at:\r\nrekognition = session.client(\"rekognition\", region)\r\n\r\nfrom multiprocessing import Process\r\nin main:\r\n...\r\np = Process(target=test, args= (count,))\r\np.start()\r\n...\r\n\r\ndef test(count, attributes=['ALL'], region=\"eu-west-1\"):\r\n        session = boto3.session.Session()\r\n        rekognition = session.client(\"rekognition\", region)\r\n\r\nMacOS Error Log:\r\nProcess:               Python [3008]\r\nPath:                  /Library/Frameworks/Python.framework/Versions/3.5/Resources/Python.app/Contents/MacOS/Python\r\nIdentifier:            Python\r\nVersion:               3.5.3 (3.5.3)\r\nCode Type:             X86-64 (Native)\r\nParent Process:        Python [3001]\r\nResponsible:           Python [3008]\r\nUser ID:               501\r\n\r\nDate/Time:             2017-08-03 14:01:43.767 +0200\r\nOS Version:            Mac OS X 10.12.6 (16G29)\r\nReport Version:        12\r\nAnonymous UUID:        0095D921-F0C1-F8D6-BDE6-2E3ECC7CC7DB\r\n\r\n\r\nTime Awake Since Boot: 3600 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\r\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000110\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nTermination Signal:    Segmentation fault: 11\r\nTermination Reason:    Namespace SIGNAL, Code 0xb\r\nTerminating Process:   exc handler [0]\r\n\r\nVM Regions Near 0x110:\r\n--> \r\n    __TEXT                 0000000100000000-0000000100001000 [    4K] r-x/rwx SM=COW  /Library/Frameworks/Python.framework/Versions/3.5/Resources/Python.app/Contents/MacOS/Python\r\n\r\nApplication Specific Information:\r\n*** multi-threaded process forked ***\r\ncrashed on child side of fork pre-exec\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   libdispatch.dylib             \t0x00007fff96f76041 _dispatch_root_queue_push_override + 204\r\n1   libdispatch.dylib             \t0x00007fff96f64dd1 _dispatch_mach_msg_send + 657\r\n2   libdispatch.dylib             \t0x00007fff96f65b55 _dispatch_mach_send_drain + 280\r\n3   libdispatch.dylib             \t0x00007fff96f7c2a9 _dispatch_mach_send_push_and_trydrain + 487\r\n4   libdispatch.dylib             \t0x00007fff96f79804 _dispatch_mach_send_msg + 282\r\n5   libdispatch.dylib             \t0x00007fff96f798c3 dispatch_mach_send_with_result + 50\r\n6   libxpc.dylib                  \t0x00007fff971e7256 _xpc_connection_enqueue + 104\r\n7   libxpc.dylib                  \t0x00007fff971e6c9b xpc_connection_send_message_with_reply + 152\r\n8   com.apple.CoreFoundation      \t0x00007fff81945ac5 __80-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:]_block_invoke_2 + 133\r\n9   com.apple.CoreFoundation      \t0x00007fff81975494 -[_CFXPreferences withConnectionForRole:performBlock:] + 36\r\n10  com.apple.CoreFoundation      \t0x00007fff819459f7 __80-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:]_block_invoke + 199\r\n11  com.apple.CoreFoundation      \t0x00007fff81945842 -[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:] + 226\r\n12  com.apple.CoreFoundation      \t0x00007fff817c9770 -[CFPrefsSearchListSource alreadylocked_copyDictionary] + 336\r\n13  com.apple.CoreFoundation      \t0x00007fff817c944c -[CFPrefsSearchListSource alreadylocked_copyValueForKey:] + 60\r\n14  com.apple.CoreFoundation      \t0x00007fff818f8065 -[CFPrefsSource copyValueForKey:] + 53\r\n15  com.apple.CoreFoundation      \t0x00007fff81973ab0 __76-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]_block_invoke + 32\r\n16  com.apple.CoreFoundation      \t0x00007fff81946c12 __108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke + 290\r\n17  com.apple.CoreFoundation      \t0x00007fff81946a89 -[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:] + 345\r\n18  com.apple.CoreFoundation      \t0x00007fff81973a16 -[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] + 310\r\n19  com.apple.SystemConfiguration \t0x00007fff881ce73d SCDynamicStoreCopyProxiesWithOptions + 164\r\n20  _scproxy.cpython-35m-darwin.so\t0x00000001099fda63 get_proxy_settings + 35\r\n21  org.python.python             \t0x00000001000f28e8 PyEval_EvalFrameEx + 35320\r\n22  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n23  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n24  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n25  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n26  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n27  org.python.python             \t0x00000001000f3e90 _PyEval_EvalCodeWithName + 2400\r\n28  org.python.python             \t0x00000001000f33ef PyEval_EvalFrameEx + 38143\r\n29  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n30  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n31  org.python.python             \t0x00000001000f3e90 _PyEval_EvalCodeWithName + 2400\r\n32  org.python.python             \t0x00000001000f33ef PyEval_EvalFrameEx + 38143\r\n33  org.python.python             \t0x00000001000f3e90 _PyEval_EvalCodeWithName + 2400\r\n34  org.python.python             \t0x00000001000f33ef PyEval_EvalFrameEx + 38143\r\n35  org.python.python             \t0x00000001000f3e90 _PyEval_EvalCodeWithName + 2400\r\n36  org.python.python             \t0x00000001000f33ef PyEval_EvalFrameEx + 38143\r\n37  org.python.python             \t0x00000001000f3e90 _PyEval_EvalCodeWithName + 2400\r\n38  org.python.python             \t0x00000001000f3f97 PyEval_EvalCodeEx + 71\r\n39  org.python.python             \t0x000000010004077a function_call + 186\r\n40  org.python.python             \t0x000000010000d8d3 PyObject_Call + 99\r\n41  org.python.python             \t0x00000001000ec813 PyEval_EvalFrameEx + 10531\r\n42  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n43  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n44  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n45  org.python.python             \t0x00000001000f3e90 _PyEval_EvalCodeWithName + 2400\r\n46  org.python.python             \t0x00000001000f3f97 PyEval_EvalCodeEx + 71\r\n47  org.python.python             \t0x000000010004077a function_call + 186\r\n48  org.python.python             \t0x000000010000d8d3 PyObject_Call + 99\r\n49  org.python.python             \t0x00000001000289cc method_call + 140\r\n50  org.python.python             \t0x000000010000d8d3 PyObject_Call + 99\r\n51  org.python.python             \t0x00000001000834c1 slot_tp_init + 81\r\n52  org.python.python             \t0x0000000100079f44 type_call + 212\r\n53  org.python.python             \t0x000000010000d8d3 PyObject_Call + 99\r\n54  org.python.python             \t0x00000001000edb65 PyEval_EvalFrameEx + 15477\r\n55  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n56  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n57  org.python.python             \t0x00000001000f34fc PyEval_EvalFrameEx + 38412\r\n58  org.python.python             \t0x00000001000f3e90 _PyEval_EvalCodeWithName + 2400\r\n59  org.python.python             \t0x00000001000f3ff1 PyEval_EvalCode + 81\r\n60  org.python.python             \t0x000000010012215e PyRun_FileExFlags + 206\r\n61  org.python.python             \t0x00000001001223ff PyRun_SimpleFileExFlags + 447\r\n62  org.python.python             \t0x000000010013b1d8 Py_Main + 3512\r\n63  org.python.python             \t0x0000000100000e32 0x100000000 + 3634\r\n64  org.python.python             \t0x0000000100000c84 0x100000000 + 3204\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x000000010ac01e40  rbx: 0x0000000000000480  rcx: 0x0000000000000100  rdx: 0x0000000000001000\r\n  rdi: 0x00007fff9fe791c0  rsi: 0x000000010a43f510  rbp: 0x00007fff5bffb4a0  rsp: 0x00007fff5bffb480\r\n   r8: 0x00000000a40008ff   r9: 0x000000010a43f56c  r10: 0x0000000100000000  r11: 0x0000000c00000000\r\n  r12: 0x00007fff9fe78e40  r13: 0x0000000010000003  r14: 0x00007fff9fe791c0  r15: 0x000000010a43f510\r\n  rip: 0x00007fff96f76041  rfl: 0x0000000000010206  cr2: 0x0000000000000110\r\n  \r\nLogical CPU:     5\r\nError Code:      0x00000006\r\nTrap Number:     14\r\n\r\n\r\nBinary Images:\r\n       0x100000000 -        0x100000ff7 +org.python.python (3.5.3 - 3.5.3) <0CBF5DD5-80D6-6F39-5B3D-BE16CC541C78> /Library/Frameworks/Python.framework/Versions/3.5/Resources/Python.app/Contents/MacOS/Python\r\n       0x100003000 -        0x100216ff7 +org.python.python (3.5.3, [c] 2001-2017 Python Software Foundation. - 3.5.3) <E51177F3-C491-7877-5818-85E1EF0E3D1E> /Library/Frameworks/Python.framework/Versions/3.5/Python\r\n       0x1003ea000 -        0x1003effef +math.cpython-35m-darwin.so (???) <5AC216BA-3732-8BBF-9BFF-5F1F84838A07> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/math.cpython-35m-darwin.so\r\n       0x1003f7000 -        0x1003f8fff +_heapq.cpython-35m-darwin.so (???) <3805F1DD-CEE4-6FCC-BA4A-1008E4FD1C02> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_heapq.cpython-35m-darwin.so\r\n       0x1003fd000 -        0x1003fdfff +grp.cpython-35m-darwin.so (???) <6F145293-2A9E-AA6D-2C6E-C9AFA0C4E6D2> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/grp.cpython-35m-darwin.so\r\n       0x101adf000 -        0x101aecfff +_datetime.cpython-35m-darwin.so (???) <7A8D0F82-7ABA-155F-82B5-E28E71C08D3D> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_datetime.cpython-35m-darwin.so\r\n       0x101af7000 -        0x101afbfff +zlib.cpython-35m-darwin.so (???) <F3DA3D0C-A207-6C1E-D74D-5E496FDFBD69> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/zlib.cpython-35m-darwin.so\r\n       0x101da2000 -        0x101f34fff +multiarray.cpython-35m-darwin.so (???) <1190E2E4-E07A-3C19-B4C5-81956742A663> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/numpy/core/multiarray.cpython-35m-darwin.so\r\n       0x101ff4000 -        0x101ff5fff +_bz2.cpython-35m-darwin.so (???) <89798E3B-B298-B0E7-C540-6581C22D7855> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_bz2.cpython-35m-darwin.so\r\n       0x101ff9000 -        0x101ffbfff +_hashlib.cpython-35m-darwin.so (???) <A194177C-41EE-7CBE-61D9-7A7D5BFA0867> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_hashlib.cpython-35m-darwin.so\r\n       0x103800000 -        0x106ab1fcf +cv2.cpython-35m-darwin.so (0) <987180A3-3303-3CC5-9571-9AB4567F09BA> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/cv2/cv2.cpython-35m-darwin.so\r\n       0x10744d000 -        0x107536ff7 +umath.cpython-35m-darwin.so (???) <E699D784-1E51-3375-94AA-6DEFC2F1BC3D> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/numpy/core/umath.cpython-35m-darwin.so\r\n       0x1075f5000 -        0x1075f6ff7 +_random.cpython-35m-darwin.so (???) <EE260851-EE4B-EDF5-ED0C-C6516B0CFD5E> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_random.cpython-35m-darwin.so\r\n       0x1075f9000 -        0x1075faff7 +lapack_lite.cpython-35m-darwin.so (???) <2DBC9C20-B3FE-3460-9C55-C0FCEC186187> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/numpy/linalg/lapack_lite.cpython-35m-darwin.so\r\n       0x1077a1000 -        0x1077b6fff +_ctypes.cpython-35m-darwin.so (???) <0E5BA040-E02F-258A-F736-0BDEABD9BB8A> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_ctypes.cpython-35m-darwin.so\r\n       0x1077c7000 -        0x1077ccfff +_struct.cpython-35m-darwin.so (???) <BEB0EA88-9FD2-B91B-1179-288B4F4A497C> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_struct.cpython-35m-darwin.so\r\n       0x1077d4000 -        0x1077e6fff +_pickle.cpython-35m-darwin.so (???) <EBCB0931-0C1D-257D-E1E9-9C091B6D4D27> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_pickle.cpython-35m-darwin.so\r\n       0x1077f3000 -        0x1077fcff7 +fftpack_lite.cpython-35m-darwin.so (???) <0960632F-DA3F-3E52-95E5-8BFECBAB1C94> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/numpy/fft/fftpack_lite.cpython-35m-darwin.so\r\n       0x108a40000 -        0x108a6dfef +_lzma.cpython-35m-darwin.so (???) <7D90A616-0411-0A3B-C3AE-9AC128F459EE> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_lzma.cpython-35m-darwin.so\r\n       0x108af7000 -        0x108b0ffff +_umath_linalg.cpython-35m-darwin.so (???) <607BD937-9E24-3E47-A285-768EEFD61A95> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/numpy/linalg/_umath_linalg.cpython-35m-darwin.so\r\n       0x108c5e000 -        0x108d0dff7 +mtrand.cpython-35m-darwin.so (???) <ADF87BF1-E71B-3C25-AD7F-BE7357E7FC2B> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/numpy/random/mtrand.cpython-35m-darwin.so\r\n       0x108e7e000 -        0x108ec6ff7 +_decimal.cpython-35m-darwin.so (???) <23499295-DC6F-10A0-03F2-582C57075BE1> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_decimal.cpython-35m-darwin.so\r\n       0x108f23000 -        0x108f24ff7 +_posixsubprocess.cpython-35m-darwin.so (???) <B185317A-931E-C7E7-7A6F-4057225B33F4> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_posixsubprocess.cpython-35m-darwin.so\r\n       0x108f28000 -        0x108f2bfff +select.cpython-35m-darwin.so (???) <7D614C09-54B2-B722-F87B-3D7A155BC1AE> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/select.cpython-35m-darwin.so\r\n       0x108fb1000 -        0x108fb1fff +_opcode.cpython-35m-darwin.so (???) <9AD57045-9FCB-F501-666C-ED2309CDD33D> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_opcode.cpython-35m-darwin.so\r\n       0x108ff4000 -        0x108ff7fff +binascii.cpython-35m-darwin.so (???) <23176E2E-5B33-9A17-4C7B-78DDFB6916F6> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/binascii.cpython-35m-darwin.so\r\n       0x108ffb000 -        0x108ffbfff +_bisect.cpython-35m-darwin.so (???) <ED4F5CE9-8926-1F4E-65EA-6145AFBF6AE1> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_bisect.cpython-35m-darwin.so\r\n       0x109800000 -        0x10980aff7 +_socket.cpython-35m-darwin.so (???) <ABA065F2-EAB4-0843-6EBF-72B5E1A7CD64> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_socket.cpython-35m-darwin.so\r\n       0x109856000 -        0x109863ff7 +_ssl.cpython-35m-darwin.so (???) <94A8AB08-FA67-EE9C-6145-5532BFC40E8F> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_ssl.cpython-35m-darwin.so\r\n       0x1099f2000 -        0x1099f8fff +_json.cpython-35m-darwin.so (???) <CC189DA1-AAD4-DD9C-FED2-F3E1BD593AC1> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_json.cpython-35m-darwin.so\r\n       0x1099fd000 -        0x1099fdff7 +_scproxy.cpython-35m-darwin.so (???) <D748A07C-91A8-6025-2DF4-2F28248663BB> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_scproxy.cpython-35m-darwin.so\r\n       0x109bc0000 -        0x109bc9ff7 +_elementtree.cpython-35m-darwin.so (???) <74840180-0783-D474-2CC6-DC737911D00C> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/_elementtree.cpython-35m-darwin.so\r\n       0x109bd2000 -        0x109c07fff +pyexpat.cpython-35m-darwin.so (???) <281F6BFA-8814-30AC-70EB-E0A98FE5EC2B> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/pyexpat.cpython-35m-darwin.so\r\n       0x109c19000 -        0x109c1afff +termios.cpython-35m-darwin.so (???) <8A634F5D-94F2-6E0C-5C01-CB57FFFFC70B> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/termios.cpython-35m-darwin.so\r\n       0x109fe0000 -        0x109fe1ff7 +cprocessors.cpython-35m-darwin.so (???) <F72BEDDD-CAEE-36BB-A634-AA672612D5F6> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/cprocessors.cpython-35m-darwin.so\r\n       0x109fe5000 -        0x109fe5fff +cutils.cpython-35m-darwin.so (???) <CA4F2CB7-A9E3-320E-8E89-26FE9DC146B4> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/cutils.cpython-35m-darwin.so\r\n       0x109fe8000 -        0x109fe9ff7 +cresultproxy.cpython-35m-darwin.so (???) <5A37AA4A-C505-3AF5-9568-362E3A336736> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/sqlalchemy/cresultproxy.cpython-35m-darwin.so\r\n       0x109fed000 -        0x109ff4fff +array.cpython-35m-darwin.so (???) <C349684C-D7A1-CF74-316C-0A9EF54B045B> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/array.cpython-35m-darwin.so\r\n       0x10a900000 -        0x10a9b7fff +unicodedata.cpython-35m-darwin.so (???) <26739E32-86E2-96AA-ED69-96D894449EF3> /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/lib-dynload/unicodedata.cpython-35m-darwin.so\r\n       0x10abf0000 -        0x10abf2fff  com.apple.AppleIntelKBLGraphicsVAME (10.25.17 - 10.2.5) <4A6B67BA-1E0F-3CF5-B4B2-B04D987F68D5> /System/Library/Extensions/AppleIntelKBLGraphicsVAME.bundle/Contents/MacOS/AppleIntelKBLGraphicsVAME\r\n       0x10d4b9000 -        0x10d831ff7  com.apple.audio.codecs.Components (7.0 - 7.0) <6550F01F-BDB0-389B-8148-DC1B52B41E8D> /System/Library/Components/AudioCodecs.component/Contents/MacOS/AudioCodecs\r\n       0x10da62000 -        0x10dae1fff  com.apple. AMDRadeonVADriver (1.51.8 - 1.5.1) <A40AF57E-A0DB-312A-A804-ADD158B448D3> /System/Library/Extensions/AMDRadeonVADriver.bundle/Contents/MacOS/AMDRadeonVADriver\r\n       0x10db94000 -        0x10de04ff7  com.apple.AppleIntelKBLGraphicsVADriver (10.25.17 - 10.2.5) <E9F9812D-E9C2-3B2C-AE9A-D65D62121034> /System/Library/Extensions/AppleIntelKBLGraphicsVADriver.bundle/Contents/MacOS/AppleIntelKBLGraphicsVADriver\r\n       0x11091e000 -        0x1109e4ffb  com.apple.AMDRadeonX4000GLDriver (1.51.8 - 1.5.1) <C418181A-A35B-3731-885E-ED060F6D7FD3> /System/Library/Extensions/AMDRadeonX4000GLDriver.bundle/Contents/MacOS/AMDRadeonX4000GLDriver\r\n       0x110e85000 -        0x110eaffff  GLRendererFloat (14.0.16) <6B57F70A-EFAC-3DB2-B9BA-E55D05D44DB5> /System/Library/Frameworks/OpenGL.framework/Resources/GLRendererFloat.bundle/GLRendererFloat\r\n       0x111800000 -        0x112254ff7  com.apple.driver.AppleIntelKBLGraphicsGLDriver (10.25.17 - 10.2.5) <7DC5C5B9-91FC-3CD3-8B83-62E1141843B2> /System/Library/Extensions/AppleIntelKBLGraphicsGLDriver.bundle/Contents/MacOS/AppleIntelKBLGraphicsGLDriver\r\n       0x112c8d000 -        0x1131cbff3  ATIRadeonX4000SCLib.dylib (1.51.8.1) <3442701F-DD75-3713-BB62-52C2157D628B> /System/Library/Extensions/AMDRadeonX4000GLDriver.bundle/Contents/MacOS/ATIRadeonX4000SCLib.dylib\r\n    0x7fff689b5000 -     0x7fff689f2dc7  dyld (433.5) <322C06B7-8878-311D-888C-C8FD2CA96FF3> /usr/lib/dyld\r\n    0x7fff7dfbb000 -     0x7fff7e17cfff  com.apple.avfoundation (2.0 - 1187.36) <2F390EAD-07BB-3788-9E73-13104C2E04CD> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation\r\n    0x7fff7e17d000 -     0x7fff7e21fff7  com.apple.audio.AVFAudio (1.0 - ???) <7997D588-B542-3EBB-B822-D719C1114BB4> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Frameworks/AVFAudio.framework/Versions/A/AVFAudio\r\n    0x7fff7e2ea000 -     0x7fff7e2eafff  com.apple.Accelerate (1.11 - Accelerate 1.11) <916E360F-323C-3AE1-AB3D-D1F3B284AEE9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff7e303000 -     0x7fff7e81cfeb  com.apple.vImage (8.1 - ???) <B58A7937-BEE2-38FE-87F4-5D5F40D31DC9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff7e81d000 -     0x7fff7e98eff3  libBLAS.dylib (1185.50.4) <4087FFE0-627E-3623-96B4-F0A9A1991E09> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff7e98f000 -     0x7fff7e9a3ffb  libBNNS.dylib (15) <254698C7-7D36-3FFF-864E-ADEEEE543076> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff7e9a4000 -     0x7fff7ed9afef  libLAPACK.dylib (1185.50.4) <C35FFB2F-A0E6-3903-8A3C-113A74BCBCA2> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff7ed9b000 -     0x7fff7edb1fff  libLinearAlgebra.dylib (1185.50.4) <345CAACF-7263-36EF-B69B-793EA8B390AF> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff7edb2000 -     0x7fff7edb8fff  libQuadrature.dylib (3) <EF56C8E6-DE22-3C69-B543-A8648F335FDD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff7edb9000 -     0x7fff7edcdff7  libSparseBLAS.dylib (1185.50.4) <67BA432E-FB59-3C78-A8BE-ED4274CBC359> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff7edce000 -     0x7fff7ef55fe7  libvDSP.dylib (600.60.1) <4155F45B-41CD-3782-AE8F-7AE740FD83C3> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff7ef56000 -     0x7fff7f008fff  libvMisc.dylib (600.60.1) <E18365D7-DCC4-3304-A8D1-395E656D7B99> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff7f009000 -     0x7fff7f009fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <7C5733E7-0568-3E7D-AF61-160F19FED544> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff7f2c8000 -     0x7fff800a1ff3  com.apple.AppKit (6.9 - 1504.83.101) <AE51ACB3-D501-3F91-B369-3D3711F24D0A> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\r\n    0x7fff800b3000 -     0x7fff800b3fff  com.apple.ApplicationServices (48 - 48) <DA687F9A-7B2D-342B-8796-16E45344F853> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff800b4000 -     0x7fff80122ff7  com.apple.ApplicationServices.ATS (377 - 422.2) <A31D17BE-F747-39FB-9A84-5F2F8891204C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff801bc000 -     0x7fff802ebff7  libFontParser.dylib (194.12) <73C3946D-EF92-3AC1-89C3-0E75B2A85325> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fff802ec000 -     0x7fff80336fff  libFontRegistry.dylib (196.4) <EA96AE47-3369-3DEA-BB82-98348ADBD85B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff80433000 -     0x7fff804ddff7  com.apple.ColorSync (4.12.0 - 502.2) <ACA4001E-A0E3-33F6-9CD6-EEC2AA15E322> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff804de000 -     0x7fff8052ffff  com.apple.HIServices (1.22 - 593) <045870A9-1D92-3FEF-8722-671E99A35E71> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff80530000 -     0x7fff8053fff3  com.apple.LangAnalysis (1.7.0 - 1.7.0) <2CBE7F61-2056-3F96-99A1-0D527796AFA6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff80540000 -     0x7fff8058dfff  com.apple.print.framework.PrintCore (12 - 491) <5027FD58-F0EE-33E4-8577-934CA06CD2AF> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff8058e000 -     0x7fff805c9fff  com.apple.QD (3.12 - 313) <B339C41D-8CDF-3342-8414-F9717DCCADD4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff805ca000 -     0x7fff805d5fff  com.apple.speech.synthesis.framework (6.6.2 - 6.6.2) <7853EFF4-62B9-394E-B7B8-41A645656820> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff805d6000 -     0x7fff807e2ff7  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <01518CAB-7DAD-3F09-83F8-B9FE0ABE998F> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff807e3000 -     0x7fff807e3fff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <B92868F8-2F15-32C0-A5BE-4ABA546B8BE1> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\r\n    0x7fff8094c000 -     0x7fff80d26fff  com.apple.CFNetwork (811.5.4 - 811.5.4) <46B1227B-F38C-3F8E-B0B5-5D9861ABF36B> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff80d40000 -     0x7fff80d40fff  com.apple.Carbon (154 - 157) <69F403C7-F0CB-34E6-89B0-235CF4978C17> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\r\n    0x7fff80d41000 -     0x7fff80d44fff  com.apple.CommonPanels (1.2.6 - 98) <BF04BB22-D54C-309E-9F5C-897D969CAF70> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\r\n    0x7fff80d45000 -     0x7fff8104efff  com.apple.HIToolbox (2.1.1 - 857.8) <5367366E-747E-32CF-8E76-93CD8E7424C7> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\r\n    0x7fff8104f000 -     0x7fff81052ff7  com.apple.help (1.3.5 - 49) <B1A930E3-5907-3677-BACD-858EF68B172D> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\r\n    0x7fff81053000 -     0x7fff81058fff  com.apple.ImageCapture (9.0 - 9.0) <341252B4-E082-361A-B756-6A330259C741> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\r\n    0x7fff81059000 -     0x7fff810f0ff3  com.apple.ink.framework (10.9 - 219) <1BD40B45-FD33-3177-A935-565EE5FC79D7> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\r\n    0x7fff810f1000 -     0x7fff8110bfff  com.apple.openscripting (1.7 - 172) <31CFBB35-24BD-3E12-9B6B-1FA842FB605B> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\r\n    0x7fff8110c000 -     0x7fff8110dff3  com.apple.print.framework.Print (12 - 267) <E2F82F1F-DC27-3EF0-9F75-B354F701450A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\r\n    0x7fff8110e000 -     0x7fff81110ff7  com.apple.securityhi (9.0 - 55006) <DBD65629-535D-3669-8218-7F074D61638C> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\r\n    0x7fff81111000 -     0x7fff81117ff7  com.apple.speech.recognition.framework (6.0.1 - 6.0.1) <082895DC-3AC7-3DEF-ADCA-5B018C19C9D3> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\r\n    0x7fff811f8000 -     0x7fff811f8fff  com.apple.Cocoa (6.11 - 22) <85EDFBE1-75F0-369E-8CA8-C6A639B98FA6> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa\r\n    0x7fff81342000 -     0x7fff813cffff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <78767F88-91D4-31CE-AAC6-1F9407F479BB> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff813d0000 -     0x7fff813e3fff  com.apple.CoreBluetooth (1.0 - 1) <BCB78777-76F0-3CC1-8443-9E61AEF7EF63> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth\r\n    0x7fff813e4000 -     0x7fff816dffff  com.apple.CoreData (120 - 754.2) <4C9CAB2C-60D4-3694-A0A0-5B04B14BD14E> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff816e0000 -     0x7fff8178dff7  com.apple.CoreDisplay (1.0 - 1) <53D1EAFE-23A4-398D-BF52-E4299E670DB6> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff8178e000 -     0x7fff81c27ff7  com.apple.CoreFoundation (6.9 - 1349.8) <09ED473E-5DE8-307F-B55C-16F6419236D5> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff81c28000 -     0x7fff822aafff  com.apple.CoreGraphics (2.0 - 1070.22) <FAB476BB-B5CD-3936-8AFC-41229DBDF0E8> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff822ab000 -     0x7fff824eeffb  com.apple.CoreImage (12.4.0 - 451.4.9) <BE4303C9-C9D9-361D-AC94-DBE40EB6700E> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff82555000 -     0x7fff82606fff  com.apple.CoreMedia (1.0 - 1907.59.1.6) <570690D8-A956-3629-9E46-4F8BDDB8A82C> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia\r\n    0x7fff82607000 -     0x7fff82652ff7  com.apple.CoreMediaIO (805.0 - 4932) <03F2B863-BF99-36DF-9A14-1DB534A289F3> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO\r\n    0x7fff82653000 -     0x7fff82653fff  com.apple.CoreServices (775.19 - 775.19) <7255917D-EFBB-3BE2-A8FD-DAD631BC0949> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff82654000 -     0x7fff826a5fff  com.apple.AE (712.5 - 712.5) <61F2AE2C-E04E-3FDF-9E88-201325136C83> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff826a6000 -     0x7fff82981ff7  com.apple.CoreServices.CarbonCore (1159.6 - 1159.6) <08AC074C-965B-3EDF-8E45-0707C8DE9EAD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff82982000 -     0x7fff829b5fff  com.apple.DictionaryServices (1.2 - 274) <D23866E2-F7C8-3984-A9D4-96552CCDE573> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff829b6000 -     0x7fff829beff3  com.apple.CoreServices.FSEvents (1230.50.1 - 1230.50.1) <2AD1B0E5-7214-37C4-8D11-A27C9CAC0F74> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff829bf000 -     0x7fff82b2bff7  com.apple.LaunchServices (775.19 - 775.19) <B75A0C49-E376-358C-81EE-6EFB0F605801> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff82b2c000 -     0x7fff82bdcffb  com.apple.Metadata (10.7.0 - 1075.40) <B2FFCC10-5A9E-396B-B495-3D6C867669EE> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff82bdd000 -     0x7fff82c3cfff  com.apple.CoreServices.OSServices (775.19 - 775.19) <4140569A-1848-3765-A52B-BB61C35CF88F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff82c3d000 -     0x7fff82cadfff  com.apple.SearchKit (1.4.0 - 1.4.0) <7A6DDA2B-03F1-3137-BA9E-1CC211973E26> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff82cae000 -     0x7fff82cf3ff7  com.apple.coreservices.SharedFileList (38 - 38) <DA096678-93AB-3291-BDE2-482F1D544589> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff82d7c000 -     0x7fff82ec9ffb  com.apple.CoreText (352.0 - 544.15) <BF0EE575-BB7E-3BF9-9029-232B4ADC24E4> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff82eca000 -     0x7fff82effff3  com.apple.CoreVideo (1.8 - 235.3) <AC11D5FB-C77B-34F5-B942-F698E84C229F> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff82f00000 -     0x7fff82f71ffb  com.apple.framework.CoreWLAN (11.0 - 1200.31) <E47C0568-E37B-3052-9E77-F0F371DCDE7F> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN\r\n    0x7fff8306f000 -     0x7fff83074fff  com.apple.DiskArbitration (2.7 - 2.7) <70F56042-EF04-3BAF-9E04-90F423FB2BCC> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff83206000 -     0x7fff835acfff  com.apple.Foundation (6.9 - 1349.91) <A37CB4EC-0730-3DD6-9358-60491BF40EF2> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff835d8000 -     0x7fff83609ff7  com.apple.GSS (4.0 - 2.0) <6FADED0B-0425-3567-A75A-040C5A4638EB> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff836c9000 -     0x7fff8376cfff  com.apple.Bluetooth (5.0.5 - 5.0.5f1) <913B97A6-9E18-3F15-992D-D522AA22EDE9> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth\r\n    0x7fff8376d000 -     0x7fff83803ff7  com.apple.framework.IOKit (2.0.2 - 1324.60.3) <7CE4C98B-107C-3AAA-B49A-F2ACFCBBF526> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff83804000 -     0x7fff8380affb  com.apple.IOSurface (159.9 - 159.9) <08F1A246-1367-32EC-B3CE-724379409729> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff8385d000 -     0x7fff839bdfef  com.apple.ImageIO.framework (3.3.0 - 1599.12) <E54ADBF0-6001-3DEB-AEB0-3F857A781E06> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff839be000 -     0x7fff839c2fff  libGIF.dylib (1599.12) <A0836C44-9566-32A3-ACCF-82A5BAF2E521> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff839c3000 -     0x7fff83ab3ff7  libJP2.dylib (1599.12) <0DB4F152-B36D-365C-97B1-34F1C114982B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff83ab4000 -     0x7fff83ad7ffb  libJPEG.dylib (1599.12) <2F66BA16-D569-35AD-A4BB-7A1909F1BF11> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff83ad8000 -     0x7fff83affff7  libPng.dylib (1599.12) <A068239E-7DB3-33AD-BEA9-499D8DEF771B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff83b00000 -     0x7fff83b02ff3  libRadiance.dylib (1599.12) <D26D6FC9-1175-38AB-ACAA-0CA073FD3978> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff83b03000 -     0x7fff83b51ffb  libTIFF.dylib (1599.12) <5D161E6A-D279-37A0-9F5F-A71A4C13BB09> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff848ba000 -     0x7fff848d3ff7  com.apple.Kerberos (3.0 - 1) <B9D242EB-E325-3A21-9812-C77CBBFB0D51> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff84b5d000 -     0x7fff84b63fff  com.apple.MediaAccessibility (1.0 - 97.1.1) <0BD82735-6644-37CE-B13D-8E7CC59A1752> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility\r\n    0x7fff84b79000 -     0x7fff850b2ff7  com.apple.MediaToolbox (1.0 - 1907.59.1.6) <FA068C6F-0506-35C3-A637-C4AFF82411DB> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox\r\n    0x7fff850b3000 -     0x7fff8510efff  com.apple.Metal (87.18 - 87.18) <E3618B54-C728-34CA-9E8A-9BD33A295D31> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff859f7000 -     0x7fff859fffff  com.apple.NetFS (6.0 - 4.0) <14A24D00-5673-330A-959D-87F72040DEFF> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff85bd6000 -     0x7fff85bdeff7  libcldcpuengine.dylib (2.8.5) <81563526-886E-37E4-BF85-4A6D75F93C65> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib\r\n    0x7fff85bdf000 -     0x7fff85c2dff3  com.apple.opencl (2.8.6 - 2.8.6) <E78463D3-73B6-3002-BD71-9CC1D6722968> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff85c2e000 -     0x7fff85c47ffb  com.apple.CFOpenDirectory (10.12 - 194) <A64E9A01-3F6E-36EA-9C10-88C564A68C9D> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff85c48000 -     0x7fff85c53ff7  com.apple.OpenDirectory (10.12 - 194) <4298FFD0-B1A7-3064-AF5B-708B3FA38671> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff85c54000 -     0x7fff85c56fff  libCVMSPluginSupport.dylib (14.0.16) <9E12EB67-6630-39A0-AB93-77405F5EC2A7> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff85c57000 -     0x7fff85c5aff7  libCoreFSCache.dylib (156.3) <687C4CC3-6537-344B-8BE1-5234C8CB2864> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff85c5b000 -     0x7fff85c5ffff  libCoreVMClient.dylib (156.3) <E7AEFCBE-B6BF-3C7C-9A4E-E78CB04DB794> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff85c60000 -     0x7fff85c69ff7  libGFXShared.dylib (14.0.16) <D10C7A01-8A11-3A42-A9FA-C411AE453B27> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff85c6a000 -     0x7fff85c75fff  libGL.dylib (14.0.16) <0801F3B9-A525-32BB-9BC0-478947CE21D9> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff85c76000 -     0x7fff85cb2ff7  libGLImage.dylib (14.0.16) <FE39C57B-056C-3CBF-B653-A8F2005631C1> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff85cb3000 -     0x7fff85e29ff3  libGLProgrammability.dylib (14.0.16) <A95F26AD-D496-3581-A310-5131F61CFB4A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLProgrammability.dylib\r\n    0x7fff85e2a000 -     0x7fff85e6bff7  libGLU.dylib (14.0.16) <B285EAD6-B3AA-3753-BB85-75864BD6E76C> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff867d3000 -     0x7fff867e1fff  com.apple.opengl (14.0.16 - 14.0.16) <167C9883-A79E-3B7F-AFED-8CD6683B291D> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff87333000 -     0x7fff87533fff  com.apple.QuartzCore (1.11 - 453.39.4) <A45AFBC4-87D4-3533-A0AC-1D6629C77984> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff87a9a000 -     0x7fff87d9cff7  com.apple.security (7.0 - 57740.60.18) <005E8C96-40B6-35E3-B58B-888A5F5957C2> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff87d9d000 -     0x7fff87e12fff  com.apple.securityfoundation (6.0 - 55132.50.7) <15C53957-A9DE-31AE-A192-949244F47CD7> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff87e3d000 -     0x7fff87e40ff3  com.apple.xpc.ServiceManagement (1.0 - 1) <BE0F9708-0B55-3E78-A15E-C287B8ED13BA> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff881c7000 -     0x7fff88236ff7  com.apple.SystemConfiguration (1.14 - 1.14) <3FFD3930-B307-3E31-9FA6-12221EB0F969> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff88237000 -     0x7fff885e5fff  com.apple.VideoToolbox (1.0 - 1907.59.1.6) <EB2577A4-DCDF-3FD1-B5FA-42A55653A74D> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox\r\n    0x7fff8aa8d000 -     0x7fff8aaa8ff3  com.apple.AppContainer (4.0 - 307.50.21) <C2E6BA3D-81FF-39C3-B4BF-DBB9A17DE078> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer\r\n    0x7fff8aaa9000 -     0x7fff8aab6ff3  com.apple.AppSandbox (4.0 - 307.50.21) <BF9FA426-8C11-358B-9E1F-A3901E3F2B14> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox\r\n    0x7fff8aab7000 -     0x7fff8aad9ffb  com.apple.framework.Apple80211 (12.0 - 1200.47) <C3033EEE-771A-3664-BBDD-BE1F6D075FC7> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211\r\n    0x7fff8aada000 -     0x7fff8aae9feb  com.apple.AppleFSCompression (88.50.3 - 1.0) <478E8BFF-8BA2-375E-BE02-BA27F115C15A> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\r\n    0x7fff8aaea000 -     0x7fff8abb2fff  com.apple.AppleGVAFramework (10.1.17 - 10.1.17) <7C71BAAA-F9D6-39B7-91A6-CF2B315D7E96> /System/Library/PrivateFrameworks/AppleGVA.framework/Versions/A/AppleGVA\r\n    0x7fff8abd7000 -     0x7fff8ac6297f  com.apple.AppleJPEG (1.0 - 1) <B9E9570D-04A4-34E4-B756-D200043B25B8> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff8ac9f000 -     0x7fff8acf1fff  com.apple.AppleVAFramework (5.0.36 - 5.0.36) <7352078D-C230-397C-81A5-57A48CF218C0> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA\r\n    0x7fff8b095000 -     0x7fff8b113ff7  com.apple.backup.framework (1.8.5 - 1.8.5) <CC679891-E8F5-3166-8EB6-AEA06954A52D> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup\r\n    0x7fff8bd9e000 -     0x7fff8bdc5ff3  com.apple.ChunkingLibrary (173 - 173) <FC2165F9-FC93-39C0-8323-C2F43A5E00A3> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary\r\n    0x7fff8c6ea000 -     0x7fff8c6f3ffb  com.apple.CommonAuth (4.0 - 2.0) <216950CB-269F-3476-BA17-D6363AC49FBC> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff8c878000 -     0x7fff8cc57ff7  com.apple.CoreAUC (226.0.0 - 226.0.0) <FBF6C5BC-5937-3957-B6BA-E101DF9B0DF6> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC\r\n    0x7fff8cc58000 -     0x7fff8cc88fff  com.apple.CoreAVCHD (5.9.0 - 5900.4.1) <3F6857D1-AE7C-3593-B064-930F5BB7269E> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD\r\n    0x7fff8ce3c000 -     0x7fff8ce4cfff  com.apple.CoreEmoji (1.0 - 40.3.3) <E9A28301-2D79-3A97-A046-028258A6ABE5> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff8d187000 -     0x7fff8d1b7ff3  com.apple.CoreServicesInternal (276.2 - 276.2) <05EB7D45-DD4C-3A0F-AC63-A0C2A68E6481> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal\r\n    0x7fff8d448000 -     0x7fff8d4d7ff7  com.apple.CoreSymbolication (62046) <7839CD8E-011D-3567-88DE-3D472C661136> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\r\n    0x7fff8d4d8000 -     0x7fff8d617fe7  com.apple.coreui (2.1 - 431.3) <2E8FEC10-FC5B-3782-92DA-A85C24B7BF7C> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\r\n    0x7fff8d618000 -     0x7fff8d6e8ff3  com.apple.CoreUtils (5.1 - 510.31) <E68BB8ED-8874-36EC-A7C5-1017C0E727CB> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils\r\n    0x7fff8d738000 -     0x7fff8d79dff3  com.apple.framework.CoreWiFi (12.0 - 1200.31) <DF0972EF-F817-3FD3-8C00-2D57B8738D8C> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi\r\n    0x7fff8d79e000 -     0x7fff8d7acff7  com.apple.CrashReporterSupport (10.12 - 827) <802A9B81-E349-348B-90AB-10E40B654250> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\r\n    0x7fff8d81e000 -     0x7fff8d828ffb  com.apple.framework.DFRFoundation (1.0 - 104.25) <7CFF896C-EF22-3941-BB3D-F3615CE4C908> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation\r\n    0x7fff8d829000 -     0x7fff8d82dff3  com.apple.DSExternalDisplay (3.1 - 380) <4B5E3FF0-E8C3-38CC-BF72-418C928956AB> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff8d863000 -     0x7fff8d8d8ffb  com.apple.datadetectorscore (7.0 - 539.1) <74595F6C-8283-3C73-9F56-C6FA957F8B94> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore\r\n    0x7fff8d914000 -     0x7fff8d953fff  com.apple.DebugSymbols (137 - 137) <58A70B66-2628-3CFE-B103-2200D95FC5F7> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\r\n    0x7fff8d954000 -     0x7fff8da65fff  com.apple.desktopservices (1.11.5 - 1.11.5) <46A9D4F3-1EF8-373C-98A4-AD48D285E484> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\r\n    0x7fff8dd4d000 -     0x7fff8e17eff7  com.apple.vision.FaceCore (3.3.2 - 3.3.2) <9391D5A3-738C-3136-9D07-518CB43DBADA> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff8f4d5000 -     0x7fff8f4d5fff  libmetal_timestamp.dylib (600.0.49.9) <E5EED927-1671-3390-BCBB-D76201D63C73> /System/Library/PrivateFrameworks/GPUCompiler.framework/libmetal_timestamp.dylib\r\n    0x7fff8f4e2000 -     0x7fff8f4edff3  libGPUSupportMercury.dylib (14.0.16) <7EE3DA75-2F9D-3C6D-AECD-F73EA47BE81B> /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupportMercury.dylib\r\n    0x7fff8f7a6000 -     0x7fff8f7c2fff  com.apple.GenerationalStorage (2.0 - 267.1) <3DE1C580-D089-362D-8582-8DE68A3C5F13> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage\r\n    0x7fff8fed3000 -     0x7fff8ff49ff3  com.apple.Heimdal (4.0 - 2.0) <8F9C9041-66D5-36C9-8A4C-1658035C311D> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff90564000 -     0x7fff9056bffb  com.apple.IOAccelerator (311.14 - 311.14) <278124AF-02DC-3785-9FA9-14EDB8E5FD56> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff9056d000 -     0x7fff90581ff7  com.apple.IOPresentment (1.0 - 29.10) <30DF04EE-10E2-353F-845F-A97B87DF3207> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff90582000 -     0x7fff905a4fff  com.apple.IconServices (74.4 - 74.4) <218DDD05-35F4-3833-B98D-471ED0EBC031> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices\r\n    0x7fff90640000 -     0x7fff90650ff3  com.apple.IntlPreferences (2.0 - 216) <77C9C2E7-EF9F-34BB-A5E3-B8BEA4226B5F> /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences\r\n    0x7fff9068b000 -     0x7fff90842fff  com.apple.LanguageModeling (1.0 - 123.2.5) <A8CA965F-0399-310D-91C3-B93DDDE9A442> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff90eb2000 -     0x7fff90eb5fff  com.apple.Mangrove (1.0 - 1) <98814966-FD65-302B-B47E-00928DC34E5C> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove\r\n    0x7fff91163000 -     0x7fff911dcff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <C323FC94-FFA5-3EE6-B2AC-7E61EA92F304> /System/Library/PrivateFrameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff91357000 -     0x7fff9137fff7  com.apple.MultitouchSupport.framework (368.16 - 368.16) <9E602B4A-22CD-3CF3-B284-78D5123C9AE8> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff91431000 -     0x7fff9143cfff  com.apple.NetAuth (6.2 - 6.2) <97F487D6-8089-31A8-B68C-6C1EAC6ED1B5> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff91d14000 -     0x7fff91d55ff3  com.apple.PerformanceAnalysis (1.148.3 - 148.3) <4E468BC7-F863-3674-909D-417231EB8C28> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\r\n    0x7fff9243d000 -     0x7fff92457fff  com.apple.ProtocolBuffer (1 - 249.1) <A1F1B0F3-078F-378F-A9A9-0DEEA70E816A> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer\r\n    0x7fff92470000 -     0x7fff92493ff3  com.apple.RemoteViewServices (2.0 - 124) <6B967FDA-6591-302C-BA0A-76C4856E584E> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices\r\n    0x7fff9315d000 -     0x7fff93160fff  com.apple.SecCodeWrapper (4.0 - 307.50.21) <F8E957B2-D3F0-3B73-B38C-AE8868F00939> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper\r\n    0x7fff931ef000 -     0x7fff9327cfff  com.apple.Sharing (696.2.67 - 696.2.67) <F681EE28-153F-3216-97A6-6F5E4148AB2E> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing\r\n    0x7fff9329d000 -     0x7fff93503feb  com.apple.SkyLight (1.600.0 - 170.3) <38AC05EF-3A9E-3E3E-9849-04E0223DF7B9> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff936e2000 -     0x7fff936eeff7  com.apple.SpeechRecognitionCore (3.3.2 - 3.3.2) <684BD1EA-8268-331C-A5A9-080EB375C658> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore\r\n    0x7fff93dda000 -     0x7fff93e4efdf  com.apple.Symbolication (62048.1) <1A30ED19-7532-3F46-9DD3-9879A973D0CF> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication\r\n    0x7fff9428d000 -     0x7fff94293ff7  com.apple.TCC (1.0 - 1) <911B534B-4AC7-34E4-935E-E42ECD008CBC> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff9431f000 -     0x7fff943e5ff7  com.apple.TextureIO (2.8 - 2.8) <3D61E533-4156-3B21-B7ED-CB823E680DFC> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO\r\n    0x7fff94459000 -     0x7fff9445afff  com.apple.TrustEvaluationAgent (2.0 - 28.50.1) <EBE65DD5-1732-3747-8C6C-7BECEBF089A4> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\r\n    0x7fff9445b000 -     0x7fff945ebff3  com.apple.UIFoundation (1.0 - 490.7) <2A3063FE-1790-3510-8A0E-AEC581D42B7E> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation\r\n    0x7fff955c5000 -     0x7fff955cbfff  com.apple.XPCService (2.0 - 1) <4B28B225-2105-33F4-9ED0-F04288FF4FB1> /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService\r\n    0x7fff9569c000 -     0x7fff9569effb  com.apple.loginsupport (1.0 - 1) <F3140B97-12C3-35A7-9D3D-43DA2D13C113> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff956f3000 -     0x7fff9570eff7  libCRFSuite.dylib (34) <F78B7F5F-0B4F-35C6-AA2F-84EE9CB22137> /usr/lib/libCRFSuite.dylib\r\n    0x7fff9570f000 -     0x7fff9571afff  libChineseTokenizer.dylib (21) <0886E908-A825-36AF-B94B-2361FD8BC2A1> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff957ac000 -     0x7fff957adff3  libDiagnosticMessagesClient.dylib (102) <84A04D24-0E60-3810-A8C0-90A65E2DF61A> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff957ae000 -     0x7fff959c1fff  libFosl_dynamic.dylib (16.39) <E22A4243-D148-3C74-BA15-2D906A3D1F9E> /usr/lib/libFosl_dynamic.dylib\r\n    0x7fff959dd000 -     0x7fff959e4fff  libMatch.1.dylib (27) <70D4BD2A-9383-37F2-B0D6-9B592D236601> /usr/lib/libMatch.1.dylib\r\n    0x7fff959e5000 -     0x7fff959e5fff  libOpenScriptingUtil.dylib (172) <90743888-C1E8-34E3-924E-1A754B2B63B9> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fff959e6000 -     0x7fff959eaffb  libScreenReader.dylib (477.40.6) <CBE6420C-EF60-3ACD-A0B6-7CBE936BA3B8> /usr/lib/libScreenReader.dylib\r\n    0x7fff959eb000 -     0x7fff959ecffb  libSystem.B.dylib (1238.60.2) <F18AC1E7-C6F1-34B1-8069-BE571B3231D4> /usr/lib/libSystem.B.dylib\r\n    0x7fff95a58000 -     0x7fff95a83ff3  libarchive.2.dylib (41.70.1) <A3FA7D6E-3D68-3524-8B48-EB2ECA44B13B> /usr/lib/libarchive.2.dylib\r\n    0x7fff95a84000 -     0x7fff95b00fc7  libate.dylib (1.12.13) <D0767875-D02E-3377-84D8-5F174C27BEA9> /usr/lib/libate.dylib\r\n    0x7fff95b04000 -     0x7fff95b04ff3  libauto.dylib (187) <34388D0B-C539-3C1B-9408-2BC152162E43> /usr/lib/libauto.dylib\r\n    0x7fff95b05000 -     0x7fff95b15ff3  libbsm.0.dylib (34) <20084796-B04D-3B35-A003-EA11459557A9> /usr/lib/libbsm.0.dylib\r\n    0x7fff95b16000 -     0x7fff95b24ff7  libbz2.1.0.dylib (38) <ADFA329A-DCE7-356D-8F09-A3168DFC6610> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff95b25000 -     0x7fff95b7bff7  libc++.1.dylib (307.5) <0B43BB5D-E6EB-3464-8DE9-B41AC8ED9D1C> /usr/lib/libc++.1.dylib\r\n    0x7fff95b7c000 -     0x7fff95ba5ff7  libc++abi.dylib (307.4) <BC271AD3-831B-362A-9DA7-E8C51F285FE4> /usr/lib/libc++abi.dylib\r\n    0x7fff95ba6000 -     0x7fff95bb6ffb  libcmph.dylib (6) <2B5D405E-2D0B-3320-ABD6-622934C86ABE> /usr/lib/libcmph.dylib\r\n    0x7fff95bb7000 -     0x7fff95bcdfcf  libcompression.dylib (39) <F2726F95-F54E-3B21-BCB5-F7151DEFDC2F> /usr/lib/libcompression.dylib\r\n    0x7fff95bce000 -     0x7fff95bceff7  libcoretls.dylib (121.50.4) <64B1001E-10F6-3542-A3B2-C4B49F51817F> /usr/lib/libcoretls.dylib\r\n    0x7fff95bcf000 -     0x7fff95bd0ff3  libcoretls_cfhelpers.dylib (121.50.4) <1A10303E-5EB0-3C7C-9165-021FCDFD934D> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff95c8a000 -     0x7fff95d6fff7  libcrypto.0.9.8.dylib (64.50.6) <D34E16A7-990A-37A9-933A-DFAA46554EAA> /usr/lib/libcrypto.0.9.8.dylib\r\n    0x7fff95f0d000 -     0x7fff95f60ff7  libcups.2.dylib (450) <9950BFCB-7882-33C9-9ECF-CE66773C5657> /usr/lib/libcups.2.dylib\r\n    0x7fff95fb4000 -     0x7fff95fbbff3  libdscsym.dylib (148.3) <EF99B991-18D9-3A73-BE88-4DC55F036DEF> /usr/lib/libdscsym.dylib\r\n    0x7fff95fdd000 -     0x7fff95fddfff  libenergytrace.dylib (15) <A1B040A2-7977-3097-9ADF-34FF181EB970> /usr/lib/libenergytrace.dylib\r\n    0x7fff95fed000 -     0x7fff95ff2ff7  libheimdal-asn1.dylib (498.50.8) <A40E3196-235E-34CE-AD9A-8D1AFC5DE004> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff95ff3000 -     0x7fff960e5ff7  libiconv.2.dylib (50) <42125B35-81D7-3FC4-9475-A26DBE10884D> /usr/lib/libiconv.2.dylib\r\n    0x7fff960e6000 -     0x7fff9630bffb  libicucore.A.dylib (57166.0.1) <CCD2ED24-3071-383B-925D-8D763BB12A6F> /usr/lib/libicucore.A.dylib\r\n    0x7fff96311000 -     0x7fff96312fff  liblangid.dylib (126) <2085E7A7-9A34-3735-87F4-F174EF8EABF0> /usr/lib/liblangid.dylib\r\n    0x7fff96313000 -     0x7fff9632cffb  liblzma.5.dylib (10) <44BD0279-99DD-36B5-8A6E-C11432E2098D> /usr/lib/liblzma.5.dylib\r\n    0x7fff9632d000 -     0x7fff96343ff7  libmarisa.dylib (5) <9030D214-5D0F-30CB-AC03-902C63909362> /usr/lib/libmarisa.dylib\r\n    0x7fff96344000 -     0x7fff965ecff7  libmecabra.dylib (744.8) <D429FCC9-42A4-38B3-8784-44024BC859EF> /usr/lib/libmecabra.dylib\r\n    0x7fff9661f000 -     0x7fff96699ff3  libnetwork.dylib (856.60.1) <191E99F5-4723-3180-8013-02AF2F9AE4B8> /usr/lib/libnetwork.dylib\r\n    0x7fff9669a000 -     0x7fff96a6c047  libobjc.A.dylib (709.1) <70614861-0340-32E2-85ED-FE65759CDFFA> /usr/lib/libobjc.A.dylib\r\n    0x7fff96a6f000 -     0x7fff96a73fff  libpam.2.dylib (21.30.1) <71EB0D88-DE84-3C8D-A2C5-58AA282BC5BC> /usr/lib/libpam.2.dylib\r\n    0x7fff96a74000 -     0x7fff96aa5fff  libpcap.A.dylib (67.60.1) <F6BC6ED6-AEE4-3520-B248-0C342636E2B0> /usr/lib/libpcap.A.dylib\r\n    0x7fff96ac2000 -     0x7fff96adeffb  libresolv.9.dylib (64) <A244AE4C-00B0-396C-98FF-97FE4DB3DA30> /usr/lib/libresolv.9.dylib\r\n    0x7fff96adf000 -     0x7fff96b18fff  libsandbox.1.dylib (592.70.1) <9C428C49-9D9A-3F9F-9573-BF5202D1F933> /usr/lib/libsandbox.1.dylib\r\n    0x7fff96b2c000 -     0x7fff96b2dff3  libspindump.dylib (231.3) <C7CEEB64-06F4-3ACA-AAC1-30ECA909501A> /usr/lib/libspindump.dylib\r\n    0x7fff96b2e000 -     0x7fff96c7cff7  libsqlite3.dylib (254.8) <1ECF7DF7-7A07-3B4B-A63B-F4EFF6BC7ACF> /usr/lib/libsqlite3.dylib\r\n    0x7fff96c9f000 -     0x7fff96cd7ff3  libssl.0.9.8.dylib (64.50.6) <9A9C9D9A-7948-3412-ABE4-01FCC4A72CD2> /usr/lib/libssl.0.9.8.dylib\r\n    0x7fff96d71000 -     0x7fff96d7efff  libxar.1.dylib (357) <69547C64-E811-326F-BBED-490C6361BDCB> /usr/lib/libxar.1.dylib\r\n    0x7fff96d7f000 -     0x7fff96e6efff  libxml2.2.dylib (30.17) <D4C3E467-37C6-34DE-8A1B-E7BFC29985E9> /usr/lib/libxml2.2.dylib\r\n    0x7fff96e6f000 -     0x7fff96e98fff  libxslt.1.dylib (15.9) <00735AD5-B62D-3E83-86AC-5533E4E2B102> /usr/lib/libxslt.1.dylib\r\n    0x7fff96e99000 -     0x7fff96eaaff3  libz.1.dylib (67) <46E3FFA2-4328-327A-8D34-A03E20BFFB8E> /usr/lib/libz.1.dylib\r\n    0x7fff96eb9000 -     0x7fff96ebdff7  libcache.dylib (79) <093A4DAB-8385-3D47-A350-E20CB7CCF7BF> /usr/lib/system/libcache.dylib\r\n    0x7fff96ebe000 -     0x7fff96ec8fff  libcommonCrypto.dylib (60092.50.5) <8A64D1B0-C70E-385C-92F0-E669079FDA90> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff96ec9000 -     0x7fff96ed0fff  libcompiler_rt.dylib (62) <55D47421-772A-32AB-B529-1A46C2F43B4D> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff96ed1000 -     0x7fff96ed9fff  libcopyfile.dylib (138) <819BEA3C-DF11-3E3D-A1A1-5A51C5BF1961> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff96eda000 -     0x7fff96f5dfdf  libcorecrypto.dylib (442.50.19) <65D7165E-2E71-335D-A2D6-33F78E2DF0C1> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff96f5e000 -     0x7fff96f8ffff  libdispatch.dylib (703.50.37) <6582BAD6-ED27-3B30-B620-90B1C5A4AE3C> /usr/lib/system/libdispatch.dylib\r\n    0x7fff96f90000 -     0x7fff96f95ffb  libdyld.dylib (433.5) <9B2AC56D-107C-3541-A127-9094A751F2C9> /usr/lib/system/libdyld.dylib\r\n    0x7fff96f96000 -     0x7fff96f96ffb  libkeymgr.dylib (28) <7AA011A9-DC21-3488-BF73-3B5B14D1FDD6> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff96f97000 -     0x7fff96fa3fff  libkxld.dylib (3789.70.16) <BD02EF3F-6E09-3A64-AB21-553D5B1D2859> /usr/lib/system/libkxld.dylib\r\n    0x7fff96fa4000 -     0x7fff96fa4fff  liblaunch.dylib (972.70.1) <B856ABD2-896E-3DE0-B2C8-146A6AF8E2A7> /usr/lib/system/liblaunch.dylib\r\n    0x7fff96fa5000 -     0x7fff96faaff3  libmacho.dylib (898) <17D5D855-F6C3-3B04-B680-E9BF02EF8AED> /usr/lib/system/libmacho.dylib\r\n    0x7fff96fab000 -     0x7fff96fadff3  libquarantine.dylib (85.50.1) <12448CC2-378E-35F3-BE33-9DC395A5B970> /usr/lib/system/libquarantine.dylib\r\n    0x7fff96fae000 -     0x7fff96fafffb  libremovefile.dylib (45) <38D4CB9C-10CD-30D3-8B7B-A515EC75FE85> /usr/lib/system/libremovefile.dylib\r\n    0x7fff96fb0000 -     0x7fff96fc8ff7  libsystem_asl.dylib (349.50.5) <096E4228-3B7C-30A6-8B13-EC909A64499A> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff96fc9000 -     0x7fff96fc9ff7  libsystem_blocks.dylib (67) <10DC5404-73AB-35B3-A277-A8AFECB476EB> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff96fca000 -     0x7fff97057fef  libsystem_c.dylib (1158.50.2) <E5AE5244-7D0C-36AC-8BB6-C7AE7EA52A4B> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff97058000 -     0x7fff9705bffb  libsystem_configuration.dylib (888.60.2) <BECC01A2-CA8D-31E6-BCDF-D452965FA976> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff9705c000 -     0x7fff9705ffff  libsystem_coreservices.dylib (41.4) <7D26DE79-B424-3450-85E1-F7FAB32714AB> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff97060000 -     0x7fff97078fff  libsystem_coretls.dylib (121.50.4) <EC6FCF07-DCFB-3A03-9CC9-6DD3709974C6> /usr/lib/system/libsystem_coretls.dylib\r\n    0x7fff97079000 -     0x7fff9707ffff  libsystem_dnssd.dylib (765.50.9) <CC960215-0B1B-3822-A13A-3DDE96FA796F> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff97080000 -     0x7fff970a9ff7  libsystem_info.dylib (503.50.4) <611DB84C-BF70-3F92-8702-B9F28A900920> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff970aa000 -     0x7fff970ccff7  libsystem_kernel.dylib (3789.70.16) <34B1F16C-BC9C-3C5F-9045-0CAE91CB5914> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff970cd000 -     0x7fff97114fe7  libsystem_m.dylib (3121.6) <86D499B5-BBDC-3D3B-8A4E-97AE8E6672A4> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff97115000 -     0x7fff97133ff7  libsystem_malloc.dylib (116.50.8) <A3D15F17-99A6-3367-8C7E-4280E8619C95> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff97134000 -     0x7fff9718dffb  libsystem_network.dylib (856.60.1) <369D0221-56CA-3C3E-9EDE-94B41CAE77B7> /usr/lib/system/libsystem_network.dylib\r\n    0x7fff9718e000 -     0x7fff97197ff3  libsystem_networkextension.dylib (563.60.2) <B021F2B3-8A75-3633-ABB0-FC012B8E9B0C> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff97198000 -     0x7fff971a1ff3  libsystem_notify.dylib (165.20.1) <B8160190-A069-3B3A-BDF6-2AA408221FAE> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff971a2000 -     0x7fff971aafe7  libsystem_platform.dylib (126.50.8) <897462FD-B318-321B-A554-E61982630F7E> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff971ab000 -     0x7fff971b5ff7  libsystem_pthread.dylib (218.60.3) <B8FB5E20-3295-39E2-B5EB-B464D1D4B104> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff971b6000 -     0x7fff971b9ff7  libsystem_sandbox.dylib (592.70.1) <4B92EC49-ACD0-36AE-B07A-A2B8152EAF9D> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff971ba000 -     0x7fff971bbff3  libsystem_secinit.dylib (24.50.4) <F78B847B-3565-3E4B-98A6-F7AD40392E2D> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff971bc000 -     0x7fff971c3ffb  libsystem_symptoms.dylib (532.50.47) <3390E07C-C1CE-348F-ADBD-2C5440B45EAA> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff971c4000 -     0x7fff971d7ff7  libsystem_trace.dylib (518.70.1) <AC63A7FE-50D9-3A30-96E6-F6B7FF16E465> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff971d8000 -     0x7fff971ddffb  libunwind.dylib (35.3) <3D50D8A8-C460-334D-A519-2DA841102C6B> /usr/lib/system/libunwind.dylib\r\n    0x7fff971de000 -     0x7fff97207ff7  libxpc.dylib (972.70.1) <BF896DF0-D8E9-31A8-A4B3-01120BFEEE52> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 169171\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n Hi,\r\nThanks for the quick response\r\nwith debugging I found out that the crash is between the session and the reko variable declaration.\r\nThat's why I thought I will ask \r\nShould I use something different than multiprocessing to make the api calls parallel?\r\n Only when starting the process the count variable, nothing more\r\nIs there a way to share the code example private? Hi\r\nI had used python 3.6 before and it was working there. But I am using opencv on a mac to get the images from a video file and that is not available for 3.6 at the moment.\r\nThe same code is working in windows using python 3.6, but on the mac I have to use 3.5 because of the opencv. There it is not working Closing due to inactivity  Thanks for your time.\r\nNow I create a ecs services with boto3.ecs.create_service and I think if this service can be auto scaled like what I could do in aws panel would be very convenient.\r\nWhat method should I use?Thanks. @joguSD \r\nThank you.\r\nI will read the doc and figure it out. @joguSD I am sorry, but if I didn't get it wrong, AutoScaling service scales EC2 instance amount. It add or shutdown some EC2. But what I'm looking for is scaling ECS service, which is docker container. Could AutoScaling service operate ECS service? Any idea about this will be appreciated. Thank you. I think maybe I found what I need.\r\n[ApplicationAutoScaling](http://boto3.readthedocs.io/en/latest/reference/services/application-autoscaling.html)\r\nI should register ECS service as a scalable target then set a scaling policy with application auto scaling service. @joguSD Yes, it worked and this issue can be closed.Thank you!  Context: Lambda function triggered on \"put\" events, trying to download the reported object.\r\n\r\nThe value for the 'key' reported in the Lambda event can not always be passed directly back in as the value for 'key' in an S3 API function. Rather, you must perform an encoding incantation that is only revealed in the generated blueprint code for Python S3 events:\r\n```python\r\ndef lambda_handler(event, context):\r\n    #print(\"Received event: \" + json.dumps(event, indent=2))\r\n\r\n    # Get the object from the event and show its content type\r\n    bucket = event['Records'][0]['s3']['bucket']['name']\r\n    key = urllib.unquote_plus(event['Records'][0]['s3']['object']['key'].encode('utf8'))\r\n    ...\r\n```\r\n*(This can occur when the uploaded keys contain spaces, which S3 encodes with '+' when generating the event. But the boto3 s3 calls expect a string with the actual spaces.)*\r\n\r\nOne could reasonably argue that this is an API design issue, but I've grown soft and expect my API wrappers to hide those implementation details from me. Ahh, given that boto3 is installed by default for python lambda functions, I thought boto3 was providing the shim that mapped the \"raw lambda\" parameters into the '``event``' and '``context``' objects.\r\n\r\nYou're right -- if that isn't boto3, you can't do anything. :( At least this might serve as a something that turns up in a search engine for the next person.  Hi. Longtime listener, first time caller:\r\n\r\nWe discovered this issue while working with a Python 2.7 lambda with log level set to debug using the standing logging package. The raw HTTP body of calls to SSM GetParameter() get dumped to the log file, exposing the decrypted value.\r\n\r\nThe log line looks like:\r\n\r\n```\r\n[DEBUG]\t2017-07-18T06:25:32.302Z\tResponse body:\r\n{\r\n    \"Parameter\": {\r\n        \"Name\": \"some.secure.value\",\r\n        \"Type\": \"SecureString\",\r\n        \"Value\": \"The unencrypted contents\"\r\n    }\r\n}\r\n```\r\n\r\nI know that debug logging is not a good idea in production use cases, but given the limited ability to debug Lambdas in particular and the sensitive nature of these encrypted values, it is worth masking the response body.\r\n\r\nHappy to help look into it further when I have the opportunity. I'm not super familiar with the internals. Related: https://github.com/boto/botocore/issues/1211\r\n\r\nWell, it's for a different API, but it's along the same vein.  I spend a lot of time looking at my service's logs, and seeing messages like this:\r\n\r\n    2017-07-26T07:33:00.182089Z PID:(18030) boto3.resources.action [INFO] Calling dynamodb:query with {'Limit': 200, 'KeyConditionExpression': <boto3.dynamodb.conditions.Equals object at 0x7ffe0a29fa20>, 'TableName':  ...\r\n\r\nIt'd be really nice to see something meaningful in that log message, like `Key(\"foo\").eq(\"bar\")` -- i.e., the name of the key, and the value, instead of `<boto3.dynamodb.conditions.Equals object at 0x7ffe0a29fa20>`, which tells me almost nothing.  I haven't found a way to do this from \"outside\" of boto, so perhaps you could add this as a feature.  We have a S3 bucket that is public and requires no authentication, yet we cannot access it via boto3 unless there are credentials configured in one of these modes: http://boto3.readthedocs.io/en/latest/guide/configuration.html#configuring-credentials\r\n\r\nThe only one that actually doesn't require an aws account, would be the IAM role configuration, but we don't control the instance. Is there an equivalent boto3.client() call that would work like 'aws s3 cp s3://<bucket>/<key> --no-sign-request' ? This works, thanks! My only other comment would be to update the documentation, in the Configuration/Credentials section to mention this.  As found by @fxp0, on  https://boto3.readthedocs.io/en/latest/reference/services/lambda.html#Lambda.Client.publish_version , the ARN returned in `FunctionArn` actually contains the version number at the end (+ `:1`) but it's missing in the example. I don't know where to correct this, the docs are autogenerated from the upstream service description. I've submitted a support ticket too. Ok cool, thanks for clarifying. Hope support will respond to me soon.  Using version 1.4.4\r\n\r\nSo the docs say this: \r\nhttp://boto3.readthedocs.io/en/latest/reference/services/ssm.html#SSM.Client.get_parameter\r\n\r\nBut I don't see this method. \r\n\r\nI ran some code to print out all methods of the client: \r\n\r\n```\r\nself.client = boto3.client('ssm', region_name=self.region)\r\nprint([method for method in dir(self.client) if callable(getattr(self.client, method))])\r\n```\r\n\r\nand got this: \r\n\r\n(truncated)\r\n```\r\n~ ~ \r\n, 'get_maintenance_window_execution', 'get_maintenance_window_execution_task', \r\n'get_paginator', 'get_parameter_history', 'get_parameters', 'get_patch_baseline', \r\n~ ~ \r\n```\r\n\r\nno `get_parameter` in there...   only the plural.   Was this removed but not removed from the docs?  I'm seeing the same issue when trying to call get_parameter from within AWS Lambda:\r\n\r\nclient = boto3.client('ssm')\r\nparam = client.get_parameter(Name='test', WithDecryption=False)\r\n\r\nthrows\r\n\r\nAttributeError: 'SSM' object has no attribute 'get_parameter' Closing due to inactivity. Please let us know if you continue seeing issues related to this after upgrading I'm getting this same error:\r\n\r\n```python\r\n>>> import boto3\r\n>>> session = boto3.session.Session(profile_name='dev')\r\n>>> client = session.client('ssm')\r\n>>> client.get_parameter(Name='PARAMETER_NAME')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/botocore/client.py\", line 509, in __getattr__\r\n    self.__class__.__name__, item)\r\nAttributeError: 'SSM' object has no attribute 'get_parameter'\r\n```\r\n\r\nusing `python 2.7.13`, `boto3 1.4.6`,  and `botocore 1.6.8`  I am now using my script(Python) to send requests checking the instance status after creating the stack using AWS cloudformation. It's a polling way to **describe_instance_status** every 10 seconds until a successful state is reached.\r\n\r\n``` python\r\ndef wait_ec2_complate(client, instance_id):\r\n    \"\"\"\r\n    this method is to make client keep sending request until ec2 instance building complate or fail\r\n    :param client:\r\n    :param instance_name:\r\n    :return:\r\n    \"\"\"\r\n    while True:\r\n        time.sleep(10)\r\n        rsp = client.describe_instance_status(\r\n            InstanceIds=[str(instance_id)],\r\n            IncludeAllInstances=True\r\n        )\r\n        # double check 2/2 status\r\n        instance_status = rsp['InstanceStatuses'][0]['InstanceStatus']['Status']\r\n        system_status = rsp['InstanceStatuses'][0]['SystemStatus']['Status']\r\n\r\n        if str(instance_status) == 'ok' and str(system_status) == 'ok':\r\n            status = True\r\n            break\r\n        if str(instance_status) == 'impaired' or str(instance_status) == 'insufficient-data' or \\\r\n                        str(instance_status) == 'not-applicable' or str(system_status) == 'failed' or \\\r\n                        str(system_status) == 'insufficient-data':\r\n            status = False\r\n            print 'Instance status is ' + str(instance_status)\r\n            print 'System status is ' + str(system_status)\r\n            break\r\n        if time >= POLL_TIMES:\r\n            break\r\n    return status\r\n```\r\n\r\nBut it seems not a good solution. I try using ```cfn-signal``` to check the instances' status, only to find out that when received signal the cloudformation stack is successfully created, but the EC2 instance is still being checked(System check and Instance check).\r\n\r\nThen, I added ```WaitCondition``` in my template to get callback signal from ```cfn-signal```. \r\n\r\nSadly, when the cloudformation stack successfully created, I switched to the EC2 instances manager to check instance's status. **But it was still in the initializing progress**. That's exactly what I worry about. The ```WaitCondition``` told me that the instance was ready to use, but the EC2 instances manager showed that the instance was still being checked. \r\n\r\nHow do I know the instance is ready when using AWS cloudformatoin to start EC2 instance.\r\n @kyleknap Actually I have considered about using [InstanceStatusOk](https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Waiter.InstanceStatusOk)  to make sure the instance is ready. Will it be too often if I use both [InstanceStatusOk](https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Waiter.InstanceStatusOk) and [ StackCreateComplete](https://boto3.readthedocs.io/en/latest/reference/services/cloudformation.html#CloudFormation.Waiter.StackCreateComplete) to check status?\r\n\r\nI doubt that AWS will take some actions on frequently api calling.\r\n\r\nThat's why I would like to choose Cloudformation ```WaitCondition``` or ```CreationPolicy``` to avoid this.  Hi there:\r\n\r\nWe're migrating an application from boto2 to boto3 and one of the sticking points is managing CORS rules.\r\n\r\nWe use boto2 with a pattern like this with buckets that we have access to, but do not necessarily belong to us:\r\n\r\n```\r\n    rule_id = 'example'\r\n\r\n    try:\r\n        cors = bucket.get_cors()\r\n    except boto.exception.S3ResponseError:\r\n        cors = boto.s3.cors.CORSConfiguration()\r\n\r\n    found = False\r\n    for rule in cors:\r\n        if rule.id == html5_rule_id:\r\n            found = True\r\n\r\n    if not found:\r\n        cors.add_rule(['GET', 'POST'],      # methods\r\n                      origins,              # origins\r\n                      id=example,     # unique id\r\n                      allowed_header=['*'], # allowed headers\r\n                      max_age_seconds=3000, # max age seconds\r\n                     )\r\n        bucket.set_cors(cors)\r\n```\r\n\r\nThis allows us to easily and safely create a new rule, even if there are other CORS rules on the bucket that were created by someone else that we don't want to touch.\r\n\r\nLooking at the rules returned by Bucket().Cors().cors_rules in boto3, the rule ID is not included in the returned parameters.  Similarly, setting a rule id doesn't seem to be possible via Cors().put().\r\n\r\nAccording to the AWS API documentation, ID is still a valid element for CORS API requests.\r\n\r\nIs there some other way to get at the ID of a CORS rule using boto3? Thanks!  Hello, \r\n\r\nI'm not sure that this is the boto3 issue, but any help with this would be much appreciated. I have a script, which creates DDB tables and writes some data to them. From time to time, I'm getting tables with provisioned throughput (both for read and writes) which is not what I requested. It happens randomly and I cannot reliably reproduce the issue. Autoscaling is disabled. Do you have any ideas why it happens?\r\n\r\nThanks much! I would recommend contacting support. To help with your case you should keep a table alive that has invalid values. Also, if you can record the request ID from the create call that will help them as well. You can get that by turning on debug logging like so: `boto3.set_stream_logger('botocore')` and searching for `x-amzn-request-id`. Thank you, Jordon. Unfortunately, I killed the tables (otherwise I would have to pay for extremely hight throughput which was created), but I did contact the support. Hopefully, they will be able to sort it out. \r\n\r\nDid anyone else observe a similar glitch?  From boto3 elbv2 docs https://boto3.readthedocs.io/en/latest/reference/services/elbv2.html I couldn't find any way to filter ALB or target group by tag. It makes tags quite useless in ALB or target group. Is it a missing feature or technically it's not supported by AWS? \r\n\r\nNote: I see from EC2 Console or AWS CLI I couldn't search ALB or target group by tags either. So if it's a technical limitation, just close this. Thanks.  I want to do something like\r\n```\r\nwhile True:\r\n    wait_until_sqs_data_is_available() # sqs non-empty\r\n    pull_data_from_sqs_and_use_it()\r\n```\r\n\r\nMy question is, how should I make the function `wait_until_sqs_data_is_available()`?\r\nIs something like\r\n\r\n```\r\nwhile sqs_is_empty():\r\n    sleep(300)\r\n```\r\n\r\nthe best way to do this? I just want to make sure I am not doing something bad/inefficient and avoid re-inventing the wheel \r\n\r\nThank you! Ok thank you for your help, I will look into it!  So in the console, I can click on a cluster name and see the tasks and services and instances running on it.\r\n\r\nI'm trying to start with nothing and get to the tasks and services running on a cluster.\r\n\r\nSo far I've tried describe_clusters() and I have a list of clusters.\r\n\r\nBut I can't call describe_services() or describe_tasks() without knowing the ahead of time the name(s) of the services or tasks I want details on.\r\n\r\nHow do I, once I have the name of the cluster, get the tasks and services information using boto3? Yes it's true that those functions you mention take cluster name as an argument, but in each case, the service or task name are also *required*, which defeats my purpose.  \ud83d\ude2c   I tried to use the API recognize_celebrities using the following Python code:\r\n```\r\nclient = boto3.client('rekognition')\r\nresponse = client.recognize_celebrities(\r\n    Image={\r\n        'S3Object': {\r\n            'Bucket': srcBucket,\r\n            'Name': srcKey,\r\n                }\r\n            }\r\n        )\r\n```\r\nand got the following error: `'Rekognition' object has no attribute 'recognize_celebrities'`. I have been using all the other Rekognition APIs using boto3 and they work fine but this does not. Any reasons why?  That worked. Thanks!  hi, I did 'pip install boto3==1.0.0' and when I ran s3=boto3.resource('s3') I got the error \"AttributeError: 'module' object has no attribute 'resource'\",did I do anything wrong or is there a bug?   We recently got this error message:\r\n\r\ncom.amazonaws.firehose.v20150804.Record@a0693bc6, com.amazonaws.firehose.v20150804.Record@34c0bab4, com.amazonaws.firehose.v20150804.Record@c37029b1, com.amazonaws.firehose.v20150804.Record@d8b0341c, com.amazonaws.firehose.v20150804.Record@2d673dbc, com.amazonaws.firehose.v20150804.Record@fa9b0703, com.amazonaws.firehose.v20150804.Record@68ce379a, com.amazonaws.firehose.v20150804.Record@34d61c37, com.amazonaws.firehose.v20150804.Record@3a7083fe, com.amazonaws.firehose.v20150804.Record@2a6f6162, com.amazonaws.firehose.v20150804.Record@c9ed0b90, com.amazonaws.firehose.v20150804.Record@29f531b8, com.amazonaws.firehose.v20150804.Record@a16a3a50, com.amazonaws.firehose.v20150804.Record@823f8dbf, com.amazonaws.firehose.v20150804.Record@a0f7c5e2, com.amazonaws.firehose.v20150804.Record@c0dfe6dc, com.amazonaws.firehose.v20150804.Record@f1f034d6, com.amazonaws.firehose.v20150804.Record@c7ea65b0, com.amazonaws.firehose.v20150804.Record@f2e95b16, com.amazonaws.firehose.v20150804.Record@8a71b7ab, com.amazonaws.firehose.v20150804.Record@ba0c2aae, com.amazonaws.firehose.v20150804.Record@b5055d05, com.amazonaws.firehose.v20150804.Record@f57f218e, com.amazonaws.firehose.v20150804.Record@4118c86f, com.amazonaws.firehose.v20150804.Record@c7648dfc, com.amazonaws.firehose.v20150804.Record@8a9d55f3, com.amazonaws.firehose.v20150804.Record@b4f7199, com.amazonaws.firehose.v20150804.Record@9dcb035, com.amazonaws.firehose.v20150804.Record@d1afd3b0, com.amazonaws.firehose.v20150804.Record@2a2589d7, com.amazonaws.firehose.v20150804.Record@c85fe563, com.amazonaws.firehose.v20150804.Record@7868be99, com.amazonaws.firehose.v20150804.Record@b6fe157, com.amazonaws.firehose.v20150804.Record@5fa97195, com.amazonaws.firehose.v20150804.Record@5e74fd10, com.amazonaws.firehose.v20150804.Record@614748c1, com.amazonaws.firehose.v20150804.Record@fae318ac, com.amazonaws.firehose.v20150804.Record@c400bec8, com.amazonaws.firehose.v20150804.Record@93a006e6, com.amazonaws.firehose.v20150804.Record@4a613b52, com.amazonaws.firehose.v20150804.Record@8a13360f, com.amazonaws.firehose.v20150804.Record@bd4c332d, com.amazonaws.firehose.v20150804.Record@38a69f00, com.amazonaws.firehose.v20150804.Record@be7b93f4, com.amazonaws.firehose.v20150804.Record@b05ab596, com.amazonaws.firehose.v20150804.Record@b4d5574, com.amazonaws.firehose.v20150804.Record@db0b36bd, com.amazonaws.firehose.v20150804.Record@be80a7b2, com.amazonaws.firehose.v20150804.Record@9dea0a04, com.amazonaws.firehose.v20150804.Record@2d882dfc, com.amazonaws.firehose.v20150804.Record@3c9b7b20, com.amazonaws.firehose.v20150804.Record@1302c099, com.amazonaws.firehose.v20150804.Record@65ea0451, com.amazonaws.firehose.v20150804.Record@bce7d3ec, com.amazonaws.firehose.v20150804.Record@958c2031, com.amazonaws.firehose.v20150804.Record@7f2e06e3, com.amazonaws.firehose.v20150804.Record@4a977506, com.amazonaws.firehose.v20150804.Record@d9748074, com.amazonaws.firehose.v20150804.Record@652e64bb, com.amazonaws.firehose.v20150804.Record@76d9cd93, com.amazonaws.firehose.v20150804.Record@42d235f2, com.amazonaws.firehose.v20150804.Record@1218c632, com.amazonaws.firehose.v20150804.Record@b4d279b1, com.amazonaws.firehose.v20150804.Record@5b34f491, com.amazonaws.firehose.v20150804.Record@b69aaefa, com.amazonaws.firehose.v20150804.Record@354327eb, com.amazonaws.firehose.v20150804.Record@17ca42ef, com.amazonaws.firehose.v20150804.Record@92f6c6da, com.amazonaws.firehose.v20150804.Record@af55b4f7, com.amazonaws.firehose.v20150804.Record@664e17fa, com.amazonaws.firehose.v20150804.Record@f8c42795, com.amazonaws.firehose.v20150804.Record@17519736, com.amazonaws.firehose.v20150804.Record@ca4c5529, com.amazonaws.firehose.v20150804.Record@73136f7c, com.amazonaws.firehose.v20150804.Record@ccd1b388, com.amazonaws.firehose.v20150804.Record@a584601, com.amazonaws.firehose.v20150804.Record@eba3c994, com.amazonaws.firehose.v20150804.Record@4f0bf20a, com.amazonaws.firehose.v20150804.Record@20215100, com.amazonaws.firehose.v20150804.Record@df74a923, com.amazonaws.firehose.v20150804.Record@4abc3b66, com.amazonaws.firehose.v20150804.Record@18e360cb, com.amazonaws.firehose.v20150804.Record@7028caba, com.amazonaws.firehose.v20150804.Record@f76abaab, com.amazonaws.firehose.v20150804.Record@f9ca8f87, com.amazonaws.firehose.v20150804.Record@c500b8b0, com.amazonaws.firehose.v20150804.Record@76ee9638, com.amazonaws.firehose.v20150804.Record@3fe3c6bf, com.amazonaws.firehose.v20150804.Record@a31229b1, com.amazonaws.firehose.v20150804.Record@63325cdf, com.amazonaws.firehose.v20150804.Record@30f4861e, com.amazonaws.firehose.v20150804.Record@c4c5e239, com.amazonaws.firehose.v20150804.Record@6a9dff97, com.amazonaws.firehose.v20150804.Record@654af825, com.amazonaws.firehose.v20150804.Record@5eb69c75, com.amazonaws.firehose.v20150804.Record@69452cf8, com.amazonaws.firehose.v20150804.Record@f42f6e8c, com.amazonaws.firehose.v20150804.Record@1bb47067, com.amazonaws.firehose.v20150804.Record@20714884, com.amazonaws.firehose.v20150804.Record@3a705b55, com.amazonaws.firehose.v20150804.Record@f4d0a86e, com.amazonaws.firehose.v20150804.Record@35f114c, com.amazonaws.firehose.v20150804.Record@3d7b9bf2, com.amazonaws.firehose.v20150804.Record@ff98b335, com.amazonaws.firehose.v20150804.Record@353be2df]' at 'records' failed to satisfy constraint: Member must have length less than or equal to 500 \r\n\r\nHowever - since the message is too long - the most important part of it - which is the last raw, was trimmed\r\n\r\nPlease modify the error message so the important part will be first\r\ne.g.\r\nfailed to satisfy constraint: Member must have length less than or equal to 500 \r\n +1 :) @stealthycoin Hmmm, I see @Odelya opened this on boto3, but the error handling code is actually part of botocore, should we reopen on it (with more details) or do you want me to add details here? @stealthycoin ping There is nothing we can do to change the output of an API. If you want to make a feature request to a service the best way to do that is [open a support ticket](https://console.aws.amazon.com/support/home#/).  python3, boto3\r\n\r\nimport boto3\r\nimport json\r\nclient = boto3.client('iam')\r\npolicy_document = {\r\n            \"Version\": \"2012-10-17\",\r\n            \"Statement\": [\r\n            {\r\n                \"Effect\": \"Allow\",\r\n                \"Action\": [\r\n                    \"s3:Put*\"\r\n                ],\r\n                \"Resource\": [\r\n                    \"arn:aws:s3:region:account:mybucket\"\r\n                ]\r\n            }]\r\n}\r\nclient.create_policy(PolicyName=\"my_policy\",\r\n                                  PolicyDocument=json.dumps(policy_document))\r\n\r\nWhile this results in the below log, and the documentation clearly states the right format of an S3 arn, I would expect a ClientError to be raised.\r\n\r\nResponse body:\r\nb'<ErrorResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\\n  <Error>\\n    <Type>Sender</Type>\\n    <Code>MalformedPolicyDocument</Code>\\n    <Message>Resource arn:aws:s3:us-west-2:847560344714:functest-tenant1/training/* can not contain region information.</Message>\\n  </Error>\\n  <RequestId>c5729a37-5a68-11e7-8204-5b90bfb7c502</RequestId>\\n</ErrorResponse>\\n' botocore 1.5.75 does the job. Thanks!\r\nShould have tested this before filing an issue...  Python3, Boto3.\r\nSample-code:\r\n\r\nimport boto3\r\n\r\niam = boto3.resource('iam')\r\ngroup = iam.Group('mygroup')\r\ngroup.create(Path='mypath')\r\n\r\nproblem:\r\nThe code will fail since the provided path does not begin and end with '/'.\r\nWhile the debug log shows the below, I would have expected a ClientError exception.\r\n \r\nResponse body:\r\nb'<ErrorResponse xmlns=\"https://iam.amazonaws.com/doc/2010-05-08/\">\\n  <Error>\\n    <Type>Sender</Type>\\n    <Code>ValidationError</Code>\\n    <Message>The specified value for path is invalid. It must begin and end with / and contain only alphanumeric characters and/or / characters.</Message>\\n  </Error>\\n  <RequestId>a6a076c4-5a65-11e7-aff1-17e3918722bc</RequestId>\\n</ErrorResponse>\\n' Upgraded botocore from 1.5.70 to 1.5.75, and the problem is resolved.\r\nThanks very much for the prompt reply.  Is it possible to read my configs (atleast S3 configs) from a s3cfg file ?\r\nMy usecase is to currently only use S3. This would make a lot of things simpler for me as I'd be able to use the same config for both s3cmd, boto3, etc.  ```python\r\ns3_con = boto3.client(\r\n    's3',aws_access_key_id='xxxxx', aws_secret_access_key='xxxxx',\r\n    config=Config(signature_version='s3v4'), region_name=AWS_SETUP['S3']['region']\r\n)\r\nurl = s3_con.generate_presigned_url(\r\n    'put_object', Params={\r\n        'Bucket':AWS_SETUP['S3']['bucket_name'], \r\n        'Key':key,'ContentType':'image/jpg'\r\n    },\r\n    ExpiresIn=AWS_SETUP['S3']['expiresInsecs'],\r\n    HttpMethod='PUT'\r\n)\r\nprint(url)\r\n```\r\n    \r\nAbove code is my python code which generating signed url but when I am trying to upload image using signed url I am getting error message from AWS\r\n`SignatureDoesNotMatch`\r\nIf I will remove ContentType from above code, I am able to upload image but content type is set as `application/x-www-form-urlencoded; charset=UTF-8`.\r\n\r\nI have to set content type as image/jpg or image/png because while accessing, I have to send it to the third party application who needs content type to be set properly.\r\n\r\nI am very new to AWS section integration. How are you trying to upload the image? Could you show a sample code snippet or command you ran to get the `SignatureDoesNotMatch`? ```html\r\n<html>\r\n<head>\r\n<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n<script type=\"text/javascript\">\r\n// Remember to include jQuery somewhere.\r\n\r\n// Remember to include jQuery somewhere.\r\n$(document).ready(function(){\r\n\r\n\tprisigned_url=[REDACTED];\r\n\t$(function() {\r\n\r\n\t  $('#theForm').on('submit', sendFile);\r\n\t});\r\n\r\n\tfunction sendFile(e) {\r\n\t    e.preventDefault();\r\n\r\n\t    // get the reference to the actual file in the input\r\n\t    var theFormFile = $('#theFile').get()[0].files[0];\r\n\r\n\t    $.ajax({\r\n\t      type: 'PUT',\r\n\t      url:prisigned_url, //server will send presigned url to upload image expires in 3600\r\n\t      // Content type must much with the parameter you signed your URL with\r\n\t      //contentType: 'binary/octet-stream',\r\n\t      // this flag is important, if not set, it will try to send data as a form\r\n\t      //ContentType: 'image/jpg',\r\n\t      processData: false,\r\n\t      // the actual file is sent raw\r\n\t      data: theFormFile\r\n\t    })\r\n\t    .success(function(file,response) {\r\n\t    \tconsole.log(\"file=>\",file);\r\n\t    \tconsole.log(\"response=>\",response);\r\n\r\n\t      alert('File uploaded');\r\n\t    })\r\n\t    \r\n\t    .error(function() {\r\n\t      alert('File NOT uploaded');\r\n\t      console.log( arguments);\r\n\t    });\r\n\r\n\t    return false;\r\n  \r\n\t  }\r\n});\r\n</script>\r\n</head>\r\n<body>\r\n<form id=\"theForm\" method=\"POST\" enctype=\"multipart/form-data\" >\r\n    <input id=\"theFile\" name=\"file\" type=\"file\"/> \r\n    <button id=\"theButton\" type=\"submit\">send 1</button>\r\n</form>\r\n</body>\r\n</html>\r\n``` above code is my javascript ajax call and html. where I am using preassigned URL.  Thank you I will try and come back to you.\n\nOn Tue, Jun 27, 2017 at 4:19 AM, John Carlyle <notifications@github.com>\nwrote:\n\n> You need to make sure that bucket's CORS config is set to accept the\n> content-type header.\n>\n> When you make the PUT request ajax makes a preflight OPTIONS request to\n> see if the request it is about to make is allowed. S3 will check the\n> preflight headers against that buckets cors config object to ensure\n> everything is allowed. Since by default the Content-Type header is not in\n> the list of allowed headers the preflight request will fail and ajax will\n> not make the PUT request.\n>\n> Here is a cors config document that works for me with your script:\n>\n> <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n> <CORSConfiguration xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">\n> <CORSRule>\n>     <AllowedOrigin>*</AllowedOrigin>\n>     <AllowedMethod>GET</AllowedMethod>\n>     <AllowedMethod>PUT</AllowedMethod>\n>     <MaxAgeSeconds>3000</MaxAgeSeconds>\n>     <ExposeHeader>GET</ExposeHeader>\n>     <ExposeHeader>PUT</ExposeHeader>\n>     <AllowedHeader>Authorization</AllowedHeader>\n>     <AllowedHeader>Content-Type</AllowedHeader>\n> </CORSRule>\n> </CORSConfiguration>\n>\n> All I did was add that last <AllowedHeader>Content-Type</AllowedHeader>\n> line to the default one.\n>\n> That config worked for the following two scripts to presign the url and\n> upload the image:\n>\n> Generate the presigned url:\n>\n> import boto3import botocore\n>\n>\n> s3_con = boto3.client('s3')\n> url=s3_con.generate_presigned_url('put_object',\n>                                   Params={'Bucket': 'bucket_name',\n>                                           'Key':'img.jpg',\n>                                           'ContentType': 'image/jpg'\n>                                   },\n>                                   ExpiresIn=600)print(url)\n>\n> Ajax call to upload:\n>\n> presigned_url = \"...\";\n> function sendFile(e) {\n>     e.preventDefault();\n>\n>     // get the reference to the actual file in the input\n>     var theFormFile = $('#theFile').get()[0].files[0];\n>\n>     $.ajax({\n>       type: 'PUT',\n>       url:presigned_url,\n>       contentType: 'image/jpg',\n>       processData: false,\n>       data: theFormFile\n>     }).success(function(file,response) {\n>       console.log(\"file=>\",file);\n>       console.log(\"response=>\",response);\n>\n>       alert('File uploaded');\n>     }).error(function() {\n>       alert('File NOT uploaded');\n>       console.log( arguments);\n>     });\n>   }\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/boto/boto3/issues/1149#issuecomment-311203582>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AHJF5i98evU6cezR5zg1zvS0dkscAVbfks5sIDWBgaJpZM4OCm3A>\n> .\n>\n Hi,\nStill I am getting same error.\n\nI have setup following things\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<CORSConfiguration xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">\n<CORSRule>\n    <AllowedOrigin>*</AllowedOrigin>\n    <AllowedMethod>GET</AllowedMethod>\n    <AllowedMethod>PUT</AllowedMethod>\n    <MaxAgeSeconds>3000</MaxAgeSeconds>\n    <ExposeHeader>GET</ExposeHeader>\n    <ExposeHeader>PUT</ExposeHeader>\n    <AllowedHeader>Authorization</AllowedHeader>\n    <AllowedHeader>Content-Type</AllowedHeader>\n</CORSRule>\n</CORSConfiguration>\n\nPolicy\n\n{\n    \"Version\": \"2012-10-17\",\n    \"Id\": \"Policy1497602910515\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1497602844610\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": \"arn:aws:s3:::piruby-image-test/*\"\n        },\n        {\n            \"Sid\": \"Stmt1497602909333\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"AWS\": \"arn:aws:iam::826580139798:user/shashank\"\n            },\n            \"Action\": [\n                \"s3:DeleteObject\",\n                \"s3:GetObject\",\n                \"s3:PutObject\",\n                \"s3:PutObjectAcl\",\n                \"s3:PutObjectTagging\"\n            ],\n            \"Resource\": \"arn:aws:s3:::piruby-image-test/*\"\n        }\n    ]\n}\n\ns3_con =\nboto3.client('s3',aws_access_key_id='xxxxx',aws_secret_access_key='xxxxxx',config=Config(signature_version='s3v4'),region_name='xxxx')\n\nurl=s3_con.generate_presigned_url('put_object',\nParams={'Bucket':'bucket_name',\n'Key':key,'ContentType':'image/jpg'},ExpiresIn=3600, HttpMethod='PUT')\n\n\n\n<html>\n<head>\n<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\n<script type=\"text/javascript\">\n// Remember to include jQuery somewhere.\n\n// Remember to include jQuery somewhere.\n$(document).ready(function(){\n\n    prisigned_url=\"\nhttps://s3.ap-south-1.amazonaws.com/piruby-image-test/ashish.g%40pacewisdom.com/20170630114210.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJZ5CFUPGRTXVSYWA%2F20170630%2Fap-south-1%2Fs3%2Faws4_request&X-Amz-Date=20170630T114210Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=content-type%3Bhost&X-Amz-Signature=b385584eafdb4472d9f06ea0a5daf1902b06b4fbd05c7cb0e48e03b9b07ba518\n\";\n    $(function() {\n\n      $('#theForm').on('submit', sendFile);\n    });\n\n    function sendFile(e) {\n        e.preventDefault();\n\n        // get the reference to the actual file in the input\n        var theFormFile = $('#theFile').get()[0].files[0];\n\n        $.ajax({\n          type: 'PUT',\n          url:prisigned_url, //server will send presigned url to upload\nimage expires in 3600\n          // Content type must much with the parameter you signed your URL\nwith\n          //x-amz-meta-contentType: 'binary/octet-stream',\n          // this flag is important, if not set, it will try to send data\nas a form\n         // x-amz-meta-ContentType: 'image/jpeg',\n          processData: false,\n          // the actual file is sent raw\n          data: theFormFile\n        })\n        .success(function(file,response) {\n            console.log(\"file=>\",file);\n            console.log(\"response=>\",response);\n\n          alert('File uploaded');\n        })\n\n        .error(function() {\n          alert('File NOT uploaded');\n          console.log( arguments);\n        });\n\n        return false;\n\n      }\n});\n</script>\n</head>\n<body>\n<form id=\"theForm\" method=\"POST\" enctype=\"multipart/form-data\" >\n    <input id=\"theFile\" name=\"file\" type=\"file\"/>\n    <button id=\"theButton\" type=\"submit\">send 1</button>\n</form>\n</body>\n</html>\n\n\nPlease let me know the issue with my code.\n\nOn Wed, Jun 28, 2017 at 1:10 PM, Ashish Gupta <ashish.2007g@gmail.com>\nwrote:\n\n> Thank you I will try and come back to you.\n>\n> On Tue, Jun 27, 2017 at 4:19 AM, John Carlyle <notifications@github.com>\n> wrote:\n>\n>> You need to make sure that bucket's CORS config is set to accept the\n>> content-type header.\n>>\n>> When you make the PUT request ajax makes a preflight OPTIONS request to\n>> see if the request it is about to make is allowed. S3 will check the\n>> preflight headers against that buckets cors config object to ensure\n>> everything is allowed. Since by default the Content-Type header is not\n>> in the list of allowed headers the preflight request will fail and ajax\n>> will not make the PUT request.\n>>\n>> Here is a cors config document that works for me with your script:\n>>\n>> <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n>> <CORSConfiguration xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">\n>> <CORSRule>\n>>     <AllowedOrigin>*</AllowedOrigin>\n>>     <AllowedMethod>GET</AllowedMethod>\n>>     <AllowedMethod>PUT</AllowedMethod>\n>>     <MaxAgeSeconds>3000</MaxAgeSeconds>\n>>     <ExposeHeader>GET</ExposeHeader>\n>>     <ExposeHeader>PUT</ExposeHeader>\n>>     <AllowedHeader>Authorization</AllowedHeader>\n>>     <AllowedHeader>Content-Type</AllowedHeader>\n>> </CORSRule>\n>> </CORSConfiguration>\n>>\n>> All I did was add that last <AllowedHeader>Content-Type</AllowedHeader>\n>> line to the default one.\n>>\n>> That config worked for the following two scripts to presign the url and\n>> upload the image:\n>>\n>> Generate the presigned url:\n>>\n>> import boto3import botocore\n>>\n>>\n>> s3_con = boto3.client('s3')\n>> url=s3_con.generate_presigned_url('put_object',\n>>                                   Params={'Bucket': 'bucket_name',\n>>                                           'Key':'img.jpg',\n>>                                           'ContentType': 'image/jpg'\n>>                                   },\n>>                                   ExpiresIn=600)print(url)\n>>\n>> Ajax call to upload:\n>>\n>> presigned_url = \"...\";\n>> function sendFile(e) {\n>>     e.preventDefault();\n>>\n>>     // get the reference to the actual file in the input\n>>     var theFormFile = $('#theFile').get()[0].files[0];\n>>\n>>     $.ajax({\n>>       type: 'PUT',\n>>       url:presigned_url,\n>>       contentType: 'image/jpg',\n>>       processData: false,\n>>       data: theFormFile\n>>     }).success(function(file,response) {\n>>       console.log(\"file=>\",file);\n>>       console.log(\"response=>\",response);\n>>\n>>       alert('File uploaded');\n>>     }).error(function() {\n>>       alert('File NOT uploaded');\n>>       console.log( arguments);\n>>     });\n>>   }\n>>\n>> \u2014\n>> You are receiving this because you authored the thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/boto/boto3/issues/1149#issuecomment-311203582>, or mute\n>> the thread\n>> <https://github.com/notifications/unsubscribe-auth/AHJF5i98evU6cezR5zg1zvS0dkscAVbfks5sIDWBgaJpZM4OCm3A>\n>> .\n>>\n>\n>\n I don't know what the particular issue with your code is. I would suggest you open a question on stackoverflow about it. We don't have the bandwidth here to deal with questions.  I have a function that looks something like this:\r\n\r\n```python\r\ndef break_up(zip, bucket):\r\n    session = boto3.session.Session()\r\n    client = session.client('s3')\r\n\r\n    # open the zip file object and iterate over its files\r\n    for filename, fileobj, filesize in unpack(zip):\r\n        try:\r\n            existing_object = client.head_object(\r\n                Bucket=bucket,\r\n                Key=filename,\r\n            )\r\n            if existing_object['ContentLength'] == filesize:\r\n                # Already have this in S3, no need to upload again\r\n                continue\r\n            update = True\r\n            new = False\r\n        except ClientError as ex:\r\n            if exception.response['Error']['Code'] == '404':\r\n               update = False\r\n               new = True\r\n       \r\n         # Now upload, the file into S3\r\n         client.put_object(\r\n             Bucket=bucket,\r\n             Key=filename,\r\n             Body=fileobj,\r\n        )\r\n        # ... do some logging based on 'update' and 'new'\r\n```\r\n(Note! I didn't copy-n-paste my real code. Tried to \"dumb\" it down to the bare essentials for the sake of this issue)\r\n\r\nSo, as you can see, it opens a .zip file, for each file within it does a `HeadObject` followed by a `PutObject` (if the file needs to be uploaded again). \r\n\r\n**The code works.** For a .zip file with about 40 files, the whole thing finishes in a couple of seconds. \r\n\r\nHowever, I get this logging output:\r\n\r\n```\r\nworker_1         | [2017-06-14 15:07:04,876: INFO/PoolWorker-1] Starting new HTTPS connection (2): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:05,688: INFO/PoolWorker-1] Starting new HTTPS connection (3): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:06,454: INFO/PoolWorker-1] Starting new HTTPS connection (4): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:07,111: INFO/PoolWorker-1] Starting new HTTPS connection (5): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:08,043: INFO/PoolWorker-1] Starting new HTTPS connection (6): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:08,563: INFO/PoolWorker-1] Starting new HTTPS connection (7): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:09,123: INFO/PoolWorker-1] Starting new HTTPS connection (8): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:09,948: INFO/PoolWorker-1] Starting new HTTPS connection (9): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:10,781: INFO/PoolWorker-1] Starting new HTTPS connection (10): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:11,484: INFO/PoolWorker-1] Starting new HTTPS connection (11): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:12,494: INFO/PoolWorker-1] Starting new HTTPS connection (12): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:13,636: INFO/PoolWorker-1] Starting new HTTPS connection (13): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:14,439: INFO/PoolWorker-1] Starting new HTTPS connection (14): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:15,227: INFO/PoolWorker-1] Starting new HTTPS connection (15): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:16,034: INFO/PoolWorker-1] Starting new HTTPS connection (16): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:16,644: INFO/PoolWorker-1] Starting new HTTPS connection (17): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:17,588: INFO/PoolWorker-1] Starting new HTTPS connection (18): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:18,793: INFO/PoolWorker-1] Starting new HTTPS connection (19): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:19,359: INFO/PoolWorker-1] Starting new HTTPS connection (20): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:20,076: INFO/PoolWorker-1] Starting new HTTPS connection (21): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:20,668: INFO/PoolWorker-1] Starting new HTTPS connection (22): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:21,230: INFO/PoolWorker-1] Starting new HTTPS connection (23): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:21,886: INFO/PoolWorker-1] Starting new HTTPS connection (24): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:22,790: INFO/PoolWorker-1] Starting new HTTPS connection (25): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:23,483: INFO/PoolWorker-1] Starting new HTTPS connection (26): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:25,057: INFO/PoolWorker-1] Starting new HTTPS connection (27): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:26,409: INFO/PoolWorker-1] Starting new HTTPS connection (28): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:27,264: INFO/PoolWorker-1] Starting new HTTPS connection (29): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:28,056: INFO/PoolWorker-1] Starting new HTTPS connection (30): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:28,688: INFO/PoolWorker-1] Starting new HTTPS connection (31): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:29,293: INFO/PoolWorker-1] Starting new HTTPS connection (32): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:31,310: INFO/PoolWorker-1] Starting new HTTPS connection (33): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:31,791: INFO/PoolWorker-1] Starting new HTTPS connection (34): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:33,230: INFO/PoolWorker-1] Starting new HTTPS connection (35): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:34,240: INFO/PoolWorker-1] Starting new HTTPS connection (36): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:34,993: INFO/PoolWorker-1] Starting new HTTPS connection (37): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:35,450: INFO/PoolWorker-1] Starting new HTTPS connection (38): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:36,274: INFO/PoolWorker-1] Starting new HTTPS connection (39): symbols-public-dev.s3.amazonaws.com\r\nworker_1         | [2017-06-14 15:07:37,697: INFO/PoolWorker-1] Starting new HTTPS connection (40): symbols-public-dev.s3.amazonaws.com\r\n```\r\n\r\n(Sorry for the formatting. It comes from my Celery task worker)\r\n\r\nThe point is, even though I reuse the same session (all within under 60 seconds) it seems to make a new connection each time. \r\n\r\nEither this is user error or a bug in that it's unable to re-use an established HTTP connection.\r\n\r\nboto3==1.4.4\r\nbotocore==1.5.66 \r\ns3transfer==0.1.10 Not able to repro this.  We rely on requests/urllib3 to do the connection pooling for us.  Given the short duration in your logs, the only think I can think of for why it's creating a new connection would be if these requests happen in separate threads.  If I try this script below I only get a single connection:\r\n\r\n\r\n```\r\n# file: /tmp/test.py\r\nimport boto3\r\nimport boto3.session\r\nboto3.set_stream_logger('')\r\n\r\n\r\nsession = boto3.session.Session()\r\ns3 = session.client('s3')\r\ns3.put_object(Bucket='bucketname-here', Key='asdfasdf', Body=b'asdfadf')\r\ns3.put_object(Bucket='bucketname-here', Key='asdfasdf', Body=b'asdfadf')\r\ns3.put_object(Bucket='bucketname-here', Key='asdfasdf', Body=b'asdfadf')\r\ns3.put_object(Bucket='bucketname-here', Key='asdfasdf', Body=b'asdfadf')\r\ns3.put_object(Bucket='bucketname-here', Key='asdfasdf', Body=b'asdfadf')\r\ns3.put_object(Bucket='bucketname-here', Key='asdfasdf', Body=b'asdfadf')\r\n\r\n```\r\n\r\nI get:\r\n\r\n```\r\n$ python /tmp/test.py 2>&1 | grep connectionpool\r\n2017-06-14 16:23:35,127 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTPS connection (1): bucketname-here.s3.amazonaws.com\r\n2017-06-14 16:23:35,231 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /asdfasdf HTTP/1.1\" 200 0\r\n2017-06-14 16:23:35,268 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /asdfasdf HTTP/1.1\" 200 0\r\n2017-06-14 16:23:35,308 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /asdfasdf HTTP/1.1\" 200 0\r\n2017-06-14 16:23:35,340 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /asdfasdf HTTP/1.1\" 200 0\r\n2017-06-14 16:23:35,376 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /asdfasdf HTTP/1.1\" 200 0\r\n2017-06-14 16:23:35,409 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /asdfasdf HTTP/1.1\" 200 0\r\n```\r\n\r\nIf you try my script (replacing with your own bucket name) do you get similar output? Hmm... I can't reproduce it myself either.\r\n```python\r\nfrom botocore.exceptions import ClientError\r\nimport boto3\r\nimport boto3.session\r\nboto3.set_stream_logger('')\r\n\r\n\r\nsession = boto3.session.Session()\r\ns3 = session.client('s3')\r\nB = 'symbols-public-dev'\r\nK = 'test_boto3_issue_1128.txt'\r\nfor i in range(10):\r\n    try:\r\n        s3.head_object(\r\n            Bucket=B,\r\n            Key=K,\r\n        )\r\n        print(\"EXISTED ALREADY\")\r\n    except ClientError as exc:\r\n        if exc.response['Error']['Code'] == '404':\r\n            print(\"DID NOT EXIST\")\r\n        else:\r\n            raise\r\n    s3.put_object(Bucket=B, Key=K, Body=b'asdfasdf')\r\n```\r\nand the output\r\n```\r\nroot@847ffb8e91bd:/app# python boto3_issue_1128_2.py 2>&1 | grep connectionpool\r\n2017-06-16 15:50:36,058 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTPS connection (1): symbols-public-dev.s3.amazonaws.com\r\n2017-06-16 15:50:36,485 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:36,625 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:36,698 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:36,912 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:36,983 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:37,123 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:37,194 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:37,341 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:37,415 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:37,556 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:37,629 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:37,771 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:37,844 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:37,985 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:39,242 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:39,394 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:39,465 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:39,606 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:39,676 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n2017-06-16 15:50:39,844 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /test_boto3_issue_1128.txt HTTP/1.1\" 200 0\r\n```\r\n\r\nI need to dig deeper to see what of the environment that's causing the recreation of a connection.  A ha! I figured it out. At least how to reproduce it. \r\nConsider this change:\r\n```python\r\nfrom botocore.exceptions import ClientError\r\nimport boto3\r\nimport boto3.session\r\nboto3.set_stream_logger('')\r\n\r\n\r\nsession = boto3.session.Session()\r\ns3 = session.client('s3')\r\nB = 'symbols-public-dev'\r\nK_base = 'test_boto3_issue_1128_{}.txt'\r\nimport random\r\nfor i in range(10):\r\n    K = K_base.format(random.random())\r\n    try:\r\n        s3.head_object(\r\n            Bucket=B,\r\n            Key=K,\r\n        )\r\n        print(\"EXISTED ALREADY\")\r\n    except ClientError as exc:\r\n        if exc.response['Error']['Code'] == '404':\r\n            print(\"DID NOT EXIST\")\r\n        else:\r\n            raise\r\n    s3.put_object(Bucket=B, Key=K, Body=b'asdfasdf')\r\n```\r\n\r\nNow, the filename (aka. key name) is always different so every time it checks if the file is there, it concludes that it needs to do the `s3.put_object`. \r\n\r\nIf you do that you get `Starting new HTTPS connection` for every iteration in the loop.\r\n\r\nI suspect that because the there's an exception frame, it resets the connection. \r\n\r\nDo you know a different way to ask if the file exists without having to rely on `try:except ClientError:`? For the record, my code above is a bit nuts because it does the `s3.pub_object` independent of the business logic lines above. In my real app I only do the `put_object` if the file *did not exist*. Sure enough, if you do this logic instead, it works!\r\n```python\r\nfor i in range(10):\r\n    K = K_base.format(random.random())\r\n\r\n    response = s3.list_objects(\r\n        Bucket=B,\r\n        Prefix=K,\r\n    )\r\n    existing_keys = [x['Key'] for x in response['Contents']]\r\n    if K in existing_keys:\r\n        print(\"EXISTED ALREADY\")\r\n    else:\r\n        print(\"DID NOT EXIST\")\r\n    s3.put_object(Bucket=B, Key=K, Body=b'asdfasdf')\r\n```\r\n\r\nSo the bug here is that raising an exception does reset any connections. \r\n\r\nNow, I wonder, if it's ANY exception or just `botocore.exceptions.ClientError`.\r\n I injected an error...\r\n```python\r\ntry:\r\n    1/0\r\nexcept Exception:\r\n    pass\r\n```\r\nin the loop and it didn't reset the connection.  For the record, the problem with starting a new connection only happens if you do a `put_object` after the *exception has happened*. Possibly related to https://github.com/boto/botocore/issues/1248? @peterbe @joguSD it is the same issue as https://github.com/boto/botocore/issues/1248.\r\n\r\n@peterbe the reason you see new connections after an error is because S3 responses on error sets the Transfer-Encoding to chunked, which triggers this bug in urllib3: https://github.com/shazow/urllib3/issues/1234.\r\n\r\nYou can turn on logging/wire logs and see the problem first hand:\r\n```\r\nsend: 'HEAD /<bucket>/<existing key> HTTP/1.1\\r\\nHost: s3.amazonaws.com\\r\\nAccept-Encoding: identity\\r\\nX-Amz-Content-SHA256: <HASH>\\r\\nAuthorization: AWS4-HMAC-SHA256 Credential=<AWS ACCESS KEY ID>/20170722/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=<Signature>\\r\\nX-Amz-Date: 20170722T175805Z\\r\\nUser-Agent: Boto3/1.4.4 Python/2.7.11+ Linux/4.11.0-1-amd64 Botocore/1.5.86\\r\\n\\r\\n'\r\nreply: 'HTTP/1.1 200 OK\\r\\n'\r\nheader: x-amz-id-2: DqWO9cXvRMm73NyS2FzftvtxaG3vzCEfwxLsujOj7gvnsxVe/ITcUoKlQrcpnwgu3cSPRkP5lQI=\r\nheader: x-amz-request-id: F30D7265A62AB402\r\nheader: Date: Sat, 22 Jul 2017 17:58:06 GMT\r\nheader: Last-Modified: Sat, 22 Jul 2017 17:58:06 GMT\r\nheader: ETag: \"d41d8cd98f00b204e9800998ecf8427e\"\r\nheader: Accept-Ranges: bytes\r\nheader: Content-Type: binary/octet-stream\r\nheader: Content-Length: 0\r\nheader: Server: AmazonS3\r\n\r\nsend: 'HEAD /<bucket>/<non existing key> HTTP/1.1\\r\\nHost: s3.amazonaws.com\\r\\nAccept-Encoding: identity\\r\\nX-Amz-Content-SHA256: <HASH>\\r\\nAuthorization: AWS4-HMAC-SHA256 Credential=<AWS ACCESS KEY ID>/20170722/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=<Signature>\\r\\nX-Amz-Date: 20170722T175959Z\\r\\nUser-Agent: Boto3/1.4.4 Python/2.7.11+ Linux/4.11.0-1-amd64 Botocore/1.5.86\\r\\n\\r\\n'\r\nreply: 'HTTP/1.1 404 Not Found\\r\\n'\r\nheader: x-amz-request-id: 6EEF16DFB4CE8782\r\nheader: x-amz-id-2: yPx8Sq+Par0pQ3SfBT2FTH3XrukfcOlRpVNzM8+Yy3KEioRtaRWoAz0heZNaq+mCuurNmo6x5sY=\r\nheader: Content-Type: application/xml\r\nheader: Transfer-Encoding: chunked\r\nheader: Date: Sat, 22 Jul 2017 17:59:59 GMT\r\nheader: Server: AmazonS3\r\n```\r\n\r\nIn the first case, the key exists and there is no \"Transfer-Encoding\" header. In the second case, the key does not exist, the \"Transfer-Encoding: chunked\" header is set and the connection is not released (the last part I omitted).\r\n\r\nOne of these bugs should be set as the dup of the other.  Hi,\r\n\r\nI have created s3 bucket using saltstack.\r\nIm getting error when trying to set expiration policy, please let me know if im missing something. \r\nIm trying the below command\r\n\r\nsalt-run salt.cmd boto_s3_bucket.put_lifecycle_configuration <bucket-name> '[{\"Expiration\": {\"Days\": 1},\"Status\": \"enabled\",\"Prefix\": \"prefixstring\"}]' region=us-east-1 key=<key> keyid=<key-id> -l debug\r\n\r\nError I'm getting:\r\n An error occurred (MalformedXML) when calling the PutBucketLifecycleConfiguration operation: The XML you provided was not well-formed or did not validate against our published schema\r\n\r\nQuick help would be appreciated. Can you show me a python code snippet?  I thought maybe this was using the bucket resource but there is no `put_lifecycle_configuration` on a bucket object, so I'm not exactly sure what method you're trying to call.  Here's the docs for `put_bucket_lifecycle_configuration` that might help: http://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Client.put_bucket_lifecycle_configuration Sorry, my bad. Forgot to add the resource on which I was trying to execute. Original command was like this:\r\nsalt-run salt.cmd boto_s3_bucket.put_lifecycle_configuration tests3bucket '[{\"Expiration\": {\"Days\": 1},\"Status\": \"enabled\",\"Prefix\": \"prefixstring\"}]' region=us-east-1 key= keyid= -l debug Any update for the above? The issue I found in my case is that boto3 doesn't require a prefix, but the api does. If I set am empty Prefix with Prefix: '', it worked for me.\r\n\r\n```\r\nresponse = client.put_bucket_lifecycle_configuration(\r\n    Bucket='foobar123-log',\r\n    LifecycleConfiguration={\r\n        'Rules': [\r\n            {\r\n                'Expiration': {\r\n                    'Days': 91,\r\n                },\r\n                'ID': '90-days-to-glacier',\r\n                'Prefix': '',\r\n                'Status': 'Enabled',\r\n                'Transitions': [\r\n                    {\r\n                        'Days': 90,\r\n                        'StorageClass': 'GLACIER'\r\n                    },\r\n                ],\r\n                'NoncurrentVersionTransitions': [\r\n                    {\r\n                        'NoncurrentDays': 90,\r\n                        'StorageClass': 'GLACIER'\r\n                    },\r\n                ],\r\n                'NoncurrentVersionExpiration': {\r\n                    'NoncurrentDays': 91\r\n                }\r\n            },\r\n        ]\r\n    }\r\n)\r\n``` Same error still:\r\nAn error occurred (MalformedXML) when calling the PutBucketLifecycleConfiguration operation: The XML you provided was not well-formed or did not validate against our published schema\r\n\r\nI think, there is issue with the input provided from me. Could someone please help me identifying the issue\r\n\r\nsalt-run salt.cmd boto_s3_bucket.put_lifecycle_configuration s3buckettest '[{\"Expiration\":{\"Days\": 1},\"Status\":\"enabled\",\"Prefix\":\"\"}]' region=us-east-1 key=  keyid=  -l debug I am another salt user. The salt-run command is part of Saltstack, a configuration management tool. I was running into this error message in the same context as @bhanukumar22 . Yes, I'm running this in a command line. Saltstack supports boto3 modules. Just to chime in: I'm seeing this as well, but I'm trying to run it from a state instead.  The relevant code block:\r\n```\r\ntest-s3:\r\n  boto_s3_bucket.present:\r\n    - name: test-s3\r\n    - Bucket: test-s3.saltstack.example\r\n    - LifecycleConfiguration:\r\n      - Expiration:\r\n          Days: 7\r\n        ID: \"expire storage\"\r\n        Status: \"enabled\"\r\n    - profile: {{ profile }}\r\n```\r\nand the response when running:\r\n```\r\n[ERROR   ] Failed to create bucket: An error occurred (MalformedXML) when calling the PutBucketLifecycleConfiguration operation: The XML you provided was not well-formed or did not validate against our published schema.\r\nlocal:\r\n----------\r\n          ID: test-s3\r\n    Function: boto_s3_bucket.present\r\n      Result: False\r\n     Comment: Failed to create bucket: An error occurred (MalformedXML) when calling the PutBucketLifecycleConfiguration operation: The XML you provided was not well-formed or did not validate against our published schema.\r\n     Started: 15:08:06.275110\r\n    Duration: 746.378 ms\r\n     Changes:\r\n```\r\nEdit: Including a link to the saltstack documentation about the topic: https://docs.saltstack.com/en/latest/ref/states/all/salt.states.boto_s3_bucket.html#salt.states.boto_s3_bucket.present @bhanukumar22 I have the solution.\r\n\r\nThe \"Status\" argument MUST be capitalized.\r\n\r\nie: `\"Status\": \"enabled\"` will fail, but `\"Status\": \"Enabled\"` will succeed I just tried with the same state file which you used. Still getting same error\r\n\r\ntest-s3:\r\n  boto_s3_bucket.present:\r\n    - name: test-s3\r\n    - Bucket: bhanu59\r\n    - LifecycleConfiguration:\r\n      - Expiration:\r\n          Days: 7\r\n        ID: \"expire storage\"\r\n        Status: \"Enabled\"\r\n    - region: us..\r\n    - key: ....\r\n    - keyid: ....\r\n\r\n\r\nGot below error\r\n--------------------\r\nmaster:\r\n----------\r\n          ID: test-s3\r\n    Function: boto_s3_bucket.present\r\n      Result: False\r\n     Comment: Failed to update bucket: An error occurred (MalformedXML) when calling the PutBucketLifecycleConfiguration operation: The XML you provided was not well-formed or did not validate against our published schema.\r\n     Started: 06:00:02.964894\r\n    Duration: 2992.747 ms\r\n     Changes:\r\n I would guess that your botocore model is out of date try updating botocore `pip install -U botocore`. I don't really have any particular knowledge of how salt works, but I assume it is picking up whatever version of botocore you have installed on your system. @bhanukumar22 sorry, this thread got caught up in an email filter and I just found it again.  This is the salt state that I have functioning properly.  I had to include both an empty prefix and the capitalized \"Enabled\"\r\n\r\n```\r\ntest-s3:\r\n  boto_s3_bucket.present:\r\n    - name: test-s3\r\n    - Bucket: test-s3.saltstack.example\r\n    - LifecycleConfiguration:\r\n      - Expiration:\r\n          Days: 7\r\n        ID: \"expire storage\"\r\n        Prefix: \"\"\r\n        Status: \"Enabled\"\r\n    - profile: {{ profile }}\r\n```\r\n\r\nedit: Thanks @joguSD for the correction.  Fingers were working faster than the brain Finally worked.\r\nI corrected the below things:\r\nPrefix: \"\"\r\nStatus: \"Enabled\"\r\n\r\nThanks a lot @mcarlton00 for your suggestion, I was able to fix my long pending issue.\r\n  http://boto3.readthedocs.io/en/latest/_modules/boto3/s3/transfer.html says:\r\n\r\nSetting metadata by documentation:\r\ntransfer.upload_file('/tmp/myfile', 'bucket', 'key',\r\n                 extra_args={'Metadata': {'a': 'b', 'c': 'd'}})\r\n\r\nIf I upload a file, e.g. index.html with the following command:\r\n\r\n```\r\nfrom boto3.s3.transfer import S3Transfer\r\nawsclient = boto3.client('s3', 'eu-west-1')\r\ntransfer = S3Transfer(awsclient)\r\n\r\ntransfer.upload_file(\"index.html\",OUTBUCKET,\"index.html\",extra_args={'Metadata': {'Content-Type': 'text/html'}})\r\n```\r\n\r\nIt sets up the S3 object metadata to:\r\n**x-amz-meta-content-type: text/html**\r\n\r\nInstead of the expected:\r\n**Content-Type: text/html**\r\n\r\nThe main problem e.g.:  uploading the index.html file with boto3 to an S3 bucket with static website hosting option, results the WEB browsers downloads it instead opens.\r\n Meanwhile I found in the same document:\r\n\r\nSetting content type:\r\n\r\ntransfer.upload_file('/tmp/myfile.json', 'bucket', 'key',\r\n                 extra_args={'ContentType': \"text/html\"})\r\n\r\nsolves the problem, but it remains inconsistent:\r\n\r\nSetting up with Metadata: {'Metadata': {'Content-Type' ...} and with {ContentType: '...'}  should be equal because of a both method should edit the same key/value on an object.  @stealthycoin is right - calling the API with an invalid key shows that `Metadata` is a different key from `ContentType` in the API:\r\n\r\n```\r\nValueError: Invalid extra_args key 'metadata', must be one of: ACL, CacheControl, \r\nContentDisposition, ContentEncoding, ContentLanguage, ContentType, Expires, \r\nGrantFullControl, GrantRead, GrantReadACP, GrantWriteACP, Metadata, RequestPayer, \r\nServerSideEncryption, StorageClass, SSECustomerAlgorithm, SSECustomerKey, \r\nSSECustomerKeyMD5, SSEKMSKeyId, WebsiteRedirectLocation\r\n``` Thanks, you are correct. However I mean, if you go to the AWS Console, to S3: https://console.aws.amazon.com/s3/home , pick a file from a bucket, go to \"Metadata\" drop-down, you will see only 1 place when you can set Key / Value pairs for metadata. Here you can set e.g.: Key:Content-Type,  Value:  video/mp4 and other metadata. No separated field to set \"x-amz-meta-\", so if you set here the MIME ContenType metadata like above, it will be correct, in contrast of, it is separated in API. It is a bit confusing.  I am getting **botocore.exceptions.ClientError: An error occurred (AccessDenied) when calling the DeleteObject operation: Access Denied** error on s3.delete_object(Bucket=bucket, Key=source_file).\r\n\r\nthis can be due to existing [issue](https://github.com/aws/aws-cli/issues/2494#issuecomment-302834045) on _**aws/aws-cli**_ \r\n\r\nNote: Permission for this operation is properly set and I can delete this object using \r\naws s3api delete-object --bucket {bucket_name} --key {object_path_for_file}.\r\n\r\n  I receive the following Type error when submitting to S3, this previously worked fine in python 2.7, just not in 3.\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/foo/config/plugins/python/helpers/pydev/pydevd.py\", line 1596, in <module>\r\n    globals = debugger.run(setup['file'], None, None, is_module)\r\n  File \"/home/foo/config/plugins/python/helpers/pydev/pydevd.py\", line 974, in run\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"/home/foo/config/plugins/python/helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"/home/foo/bar/foobar.py\", line 97, in <module>\r\n    s3.Bucket('foo').put_object(Key=fooName, Body=fooFile, ContentType='text/html')\r\n  File \"/home/foo/.local/lib/python3.5/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/home/foo/.local/lib/python3.5/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/home/foo/.local/lib/python3.5/site-packages/botocore/client.py\", line 253, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/home/foo/.local/lib/python3.5/site-packages/botocore/client.py\", line 538, in _make_api_call\r\n    request_signer=self._request_signer, context=request_context)\r\n  File \"/home/foo/.local/lib/python3.5/site-packages/botocore/hooks.py\", line 242, in emit_until_response\r\n    responses = self._emit(event_name, kwargs, stop_on_response=True)\r\n  File \"/home/foo/.local/lib/python3.5/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/home/foo/.local/lib/python3.5/site-packages/botocore/handlers.py\", line 201, in conditionally_calculate_md5\r\n    calculate_md5(params, **kwargs)\r\n  File \"/home/foo/.local/lib/python3.5/site-packages/botocore/handlers.py\", line 179, in calculate_md5\r\n    binary_md5 = _calculate_md5_from_file(body)\r\n  File \"/home/foo/.local/lib/python3.5/site-packages/botocore/handlers.py\", line 193, in _calculate_md5_from_file\r\n    md5.update(chunk)\r\nTypeError: Unicode-objects must be encoded before hashing  I've been working to use AES encryption to store data in dynamodb, but I'm running into an error, and it seems like it might be a bug, but I'm not sure - it could be me.\r\n\r\nThis is a super-simple test script that fails:\r\n```python\r\nimport boto3\r\nfrom Crypto.Cipher import AES\r\n\r\nboto3.set_stream_logger('')\r\n\r\ntable = 'test_crypt_table'\r\nmessage = 'this is super seecrit'\r\nsalt = 'this is the salt'\r\niv = 'this is the iv23'\r\n\r\nobj = AES.new(\r\n        salt, AES.MODE_CFB, iv)\r\ncrypto_text = obj.encrypt(message)\r\n\r\nitem = {\r\n    'tenant_id' : 'test_tenant',\r\n    'Whatsit' : 'foobarbaz',\r\n    'cryptotext' : { 'B' : crypto_text}\r\n}\r\n\r\ndynamodb = boto3.resource('dynamodb', region_name='us-east-1')\r\ntable = dynamodb.Table(table)\r\ntable.put_item(Item=item)\r\n```\r\n\r\nThe error is: UnicodeDecodeError: 'utf8' codec can't decode byte 0x94 in position 0: invalid start byte\r\n\r\nThe odd thing is that I get the same exact error if I use \"S\" rather than \"B\".\r\n\r\nBelow is my debug log:\r\n\r\n2017-05-31 16:46:38,888 botocore.loaders [DEBUG] Loading JSON file: /home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/boto3/data/dynamodb/2012-08-10/resources-1.json\r\n2017-05-31 16:46:38,918 botocore.credentials [DEBUG] Looking for credentials via: env\r\n2017-05-31 16:46:38,918 botocore.credentials [DEBUG] Looking for credentials via: assume-role\r\n2017-05-31 16:46:38,919 botocore.credentials [DEBUG] Looking for credentials via: shared-credentials-file\r\n2017-05-31 16:46:38,920 botocore.credentials [INFO] Found credentials in shared credentials file: ~/.aws/credentials\r\n2017-05-31 16:46:38,921 botocore.loaders [DEBUG] Loading JSON file: /home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/botocore/data/endpoints.json\r\n2017-05-31 16:46:38,990 botocore.loaders [DEBUG] Loading JSON file: /home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/botocore/data/dynamodb/2012-08-10/service-2.json\r\n2017-05-31 16:46:39,003 botocore.loaders [DEBUG] Loading JSON file: /home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/botocore/data/_retry.json\r\n2017-05-31 16:46:39,004 botocore.client [DEBUG] Registering retry handlers for service: dynamodb\r\n2017-05-31 16:46:39,006 botocore.hooks [DEBUG] Event creating-client-class.dynamodb: calling handler <function add_generate_presigned_url at 0x7f50b2b9d668>\r\n2017-05-31 16:46:39,007 botocore.args [DEBUG] The s3 config key is not a dictionary type, ignoring its value of: None\r\n2017-05-31 16:46:39,009 botocore.endpoint [DEBUG] Setting dynamodb timeout as (60, 60)\r\n2017-05-31 16:46:39,013 boto3.resources.factory [DEBUG] Loading dynamodb:dynamodb\r\n2017-05-31 16:46:39,014 botocore.hooks [DEBUG] Event creating-resource-class.dynamodb.ServiceResource: calling handler <function _handler at 0x7f50b2ad78c0>\r\n2017-05-31 16:46:39,024 boto3.resources.factory [DEBUG] Loading dynamodb:Table\r\n2017-05-31 16:46:39,028 botocore.hooks [DEBUG] Event creating-resource-class.dynamodb.Table: calling handler <function _handler at 0x7f50b2ad7938>\r\n2017-05-31 16:46:39,031 botocore.hooks [DEBUG] Event creating-resource-class.dynamodb.Table: calling handler <function _handler at 0x7f50b2ad78c0>\r\n2017-05-31 16:46:39,032 boto3.resources.action [INFO] Calling dynamodb:put_item with {'Item': {'tenant_id': 'test_tenant', 'cryptotext': {'B': '\\x94^\\x9d\\xc2\\x9e4\\xbb\\xdb\\x13\\xe2\\x82\\xd7a\\x98\\xc4*\\x12\\xdc)\\x9d*'}, 'Whatsit': 'foobarbaz'}, u'TableName': 'test_crypt_table'}\r\n2017-05-31 16:46:39,033 botocore.hooks [DEBUG] Event provide-client-params.dynamodb.PutItem: calling handler <function copy_dynamodb_params at 0x7f50b268aa28>\r\n2017-05-31 16:46:39,033 botocore.hooks [DEBUG] Event before-parameter-build.dynamodb.PutItem: calling handler <bound method TransformationInjector.inject_condition_expressions of <boto3.dynamodb.transform.TransformationInjector object at 0x7f50b268b9d0>>\r\n2017-05-31 16:46:39,034 botocore.hooks [DEBUG] Event before-parameter-build.dynamodb.PutItem: calling handler <bound method TransformationInjector.inject_attribute_value_input of <boto3.dynamodb.transform.TransformationInjector object at 0x7f50b268b9d0>>\r\n2017-05-31 16:46:39,035 botocore.hooks [DEBUG] Event before-parameter-build.dynamodb.PutItem: calling handler <function generate_idempotent_uuid at 0x7f50b2b50b90>\r\nTraceback (most recent call last):\r\n  File \"dynocrpyt.py\", line 26, in <module>\r\n    table.put_item(Item=item)\r\n  File \"/home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/botocore/client.py\", line 253, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/botocore/client.py\", line 531, in _make_api_call\r\n    api_params, operation_model, context=request_context)\r\n  File \"/home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/botocore/client.py\", line 586, in _convert_to_request_dict\r\n    api_params, operation_model)\r\n  File \"/home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/botocore/validate.py\", line 293, in serialize_to_request\r\n    operation_model)\r\n  File \"/home/pearlbear/virtenvs/z8_env/local/lib/python2.7/site-packages/botocore/serialize.py\", line 308, in serialize_to_request\r\n    serialized['body'] = json.dumps(body).encode(self.DEFAULT_ENCODING)\r\n  File \"/usr/lib/python2.7/json/__init__.py\", line 243, in dumps\r\n    return _default_encoder.encode(obj)\r\n  File \"/usr/lib/python2.7/json/encoder.py\", line 207, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/usr/lib/python2.7/json/encoder.py\", line 270, in iterencode\r\n    return _iterencode(o, 0)\r\nUnicodeDecodeError: 'utf8' codec can't decode byte 0x94 in position 0: invalid start byte\r\n\r\n\r\n Totally fabulous, thanks! Except... in trying to retrieve that item, I'm running into a weird error - is there something different I need to do on the query end?\r\n\r\nI'm just using:\r\n\r\n```\r\nfield = 'tenant_id'\r\nvalue = 'foobarbaz'\r\nresponse = table.query(KeyConditionExpression=Key(field).eq(value))\r\n```\r\n\r\nAnd I get this rather odd error:\r\n\r\nTypeError: object.__new__(thread.lock) is not safe, use thread.lock.__new__()\r\n\r\nLet me know if you need debug log. Nevermind. My problem. I'll close this.  Potential fix for Issue #1108 \r\n\r\nLooks like MaxKeys is ignored by the object iterator.\r\n\r\nexample code to trigger bug:\r\n\r\n```python\r\nimport boto3\r\n\r\nsession = boto3.session.Session()\r\nresource = session.resource('s3', aws_access_key_id=S3_ACCESS_KEY, aws_secret_access_key=S3_SECRET_KEY, endpoint_url=S3_HOST)\r\nbucket = resource.Bucket(S3_BUCKET)\r\nobjects = bucket.objects.filter(MaxKeys=10)\r\n\r\nfor obj in objects:\r\n    print obj.key\r\n``` I've never seen your testing framework before but I'll have a stab at it. Guessing I'd add a test to tests/unit/resources/test_collections as a  test_filter type test?   I'm using boto3 and trying to limit the number of objects being returned in a list operation.\r\n\r\nbotocore-1.4.89\r\nboto3-1.4.3\r\n\r\nIt looks to me like the kwarg MaxKeys is ignored in favor of the kwarg limit. \r\n\r\nIssue seems to be line +80 in resources/collection.py (in __iter__)\r\n`limit = self._params.get('limit', None)`\r\n\r\n\r\nThis works if I change to:\r\n`limit = self._params.get('MaxKeys', None)`\r\n\r\nUnsure of side effects on rest of code but I've make a pull request.\r\n\r\nExample code to trigger bug:\r\n\r\n```\r\nimport boto3\r\n\r\nsession = boto3.session.Session()\r\nresource = session.resource('s3', aws_access_key_id=S3_ACCESS_KEY, aws_secret_access_key=S3_SECRET_KEY, endpoint_url=S3_HOST)\r\nbucket = resource.Bucket(S3_BUCKET)\r\nobjects = bucket.objects.filter(MaxKeys=10)\r\n\r\nfor obj in objects:\r\n    print obj.key\r\n``` Seems to be passing UT's. @kyleknap   Hi ,\r\n\r\n I Need Some Clarification Regarding server side Encryption . I have Bucket Which contents are Encrypted Using Server-Side Encryption with Amazon S3-Managed Keys (SSE-S3). Now I want to download the Content via API i got Error The Key Does not Exist? If I want to send the Content Name as Encrypted or What? How will i Know the  Key value of the Encrypt Logic? Can any one Help Me ASAP? \r\nFYI, \r\nServer side encryption are  defined by S3 Browser.  # tldr\r\n\r\nWhen calling `client.invoke` for lambda functions, I want to disable automatic retries upon timeout.\r\n\r\n# Steps to reproduce:\r\n\r\n    import boto3\r\n    import json\r\n    client = boto3.client('lambda')\r\n    response = client.invoke(\r\n        InvocationType='RequestResponse',\r\n        FunctionName='my_lambda',\r\n        LogType='Tail',\r\n        Payload=json.dumps({})\r\n    )\r\n\r\nWhere `my_lambda` is configured to timeout after 100 seconds, but the code itself requires more time than that.\r\n\r\n# Desired behaviour\r\n\r\nFor my particular case, I want `client.invoke` to return in no more than 100 seconds. If the function requires more than that, `client.invoke` should raise a `botocore.vendored.requests.exceptions.ReadTimeout` exception after 100 seconds (or maybe 101 seconds if you factor in overhead).\r\n\r\n# Observed Behaviour\r\n\r\n`client.invoke` raises the exception `botocore.vendored.requests.exceptions.ReadTimeout` after 626 seconds. The CloudWatch logs show that the lambda function was invoked 8 times, even though `client.invoke` was only called once.\r\n\r\n(Yes, I know that (8-1) * 100 > 626. I'm confused by that too)\r\n\r\n# Justification\r\n\r\nFor this particular case, I know with certainty that if the lambda timed out the first time, it will time out the next 5 times also. So there's no point retrying. I understand that *normally* automatic retries may be handy. So I propose that an option is added to `client.invoke`, which allows you to disable automatic retries. I just tried doing that:\r\n\r\n    botocore.config.Config('read_timeout',timeout+5)\r\n    botocore.config.Config('connection_timeout',timeout+5)\r\n    ...\r\n    client = boto3.client('lambda')\r\n    ...\r\n\r\nWhere `timeout` is the number of seconds I configured my lambda to timeout after. (Configured through cloudformation, confirmed manually through web console). For now, I've set the contents of my lambda to be\r\n\r\n    while 1:\r\n        time.sleep(10)\r\n\r\n\r\nI still observe the same behavior.\r\n\r\nLooking at the timestamps in cloudformation, the time between retries is approximately 60 seconds. this is my workaround about this issue\r\n\r\n```\r\nconfig = botocore.config.Config(connect_timeout=300, read_timeout=300)\r\nclient = boto3.client('lambda', region_name='us-east-1', config=config)\r\n....\r\n....\r\n# set retry config for lambda = 0\r\nclient.meta.events._unique_id_handlers['retry-config-lambda']['handler']._checker.__dict__['_max_attempts'] = 0\r\n....\r\n....\r\nresponse = client.invoke(\r\n                    FunctionName='',\r\n                    InvocationType='',\r\n                    LogType='',\r\n                    Payload=''\r\n                )\r\n```\r\n I can confirm that the workaround by @tnpxu works for me. The workaround by @tnpxu worked for me too.  I had trouble with S3.Client.generate_presigned_post() when using the same underlying dict for the acl in Conditions and Fields kwargs.  I wanted only an acl condition, so I had used the same dict for both kwargs. \r\n\r\nThe call returns an Invalid set of fields: {} that will throw an error:  `Invalid Policy: Invalid Simple-Condition: Simple-Conditions must have exactly one property specified.`\r\n\r\nHere is an example that triggers the unwanted side-effect:\r\n```python\r\nacl = {'acl': 'authenticated-read'}\r\nresp = s3.generate_presigned_post(\r\n                    Bucket=BUCKET,\r\n                    Key=key,\r\n                    Conditions=[acl],\r\n                    Fields=acl\r\n                    )\r\n```\r\n\r\nCorrected by simply using different dict objects:\r\n```python\r\nacl = {'acl': 'authenticated-read'}\r\nfields = {'acl': 'authenticated-read'}\r\nresp = s3.generate_presigned_post(\r\n                    Bucket=BUCKET,\r\n                    Key=key,\r\n                    Conditions=[acl],\r\n                    Fields=fields\r\n                    )\r\n```\r\n\r\nCould a note/warning about this side-effect be added to the [docs](http://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Client.generate_presigned_post)\r\nOr even better this side-effect be prevented in the function itself?\r\n\r\nThanks!  Hi,\r\n\r\nI've noticed an inconsistency regarding the filtering of Security Groups on a Vpc resource. Basically\r\nfiltering by `GroupName` does not find the Security Group because it's using the *wrong* VPC. Filtering by `GroupIds` does the right thing. Also, returning all the Security Groups does return the expected `ec2.SecurityGroup` resource as well\r\n\r\n```\r\n(Pdb) type(resource)\r\n<class 'boto3.resources.factory.ec2.Vpc'>\r\n(Pdb) resource.id\r\n'vpc-796fbe1b'\r\n(Pdb) security_group\r\n'my_security_group'\r\n# Notice the VPC id in the following error is different to the VPC id we're actually using\r\n(Pdb) [i for i in resource.security_groups.filter(GroupNames=[security_group])]\r\n*** botocore.exceptions.ClientError: An error occurred (InvalidGroup.NotFound) when calling the DescribeSecurityGroups operation: The security group 'my_security_group' does not exist in default VPC 'vpc-c07b91a3'\r\n(Pdb) security_group_id = 'sg-978802f3'\r\n(Pdb) found_security_group = [i for i in resource.security_groups.filter(GroupIds=[security_group_id])][0]\r\n(Pdb) found_security_group.group_name\r\n'my_security_group'\r\n\r\n```\r\n\r\nboto3                     *1.4.4*                 \r\nbotocore                *1.5.39*\r\npython                   *3.5.3*\r\n\r\n Ah, so I think this is because (apparently) Security Group Names are only for EC2 instances, and Security Group Ids are what is used for VPCs.\r\n  `ec2.Client.describe_instances` (http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.describe_instances) allow to provide a list of InstanceIds.\r\n\r\nLikewise, it would be a good idea to provide the same possibility to other methods, e.g. `ec2.Client.wait_until_*` ones. Actually those waiter commands are implemented on our side. The resource waiters are only designed to wait until that resource is available. The client waiters do support supplying multiple ids ([example](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Waiter.InstanceRunning)).  Please refer to this question asked here about [unknownapiversionerror error](http://stackoverflow.com/questions/43992712/aws-sdk-boto3-boto3-exceptions-unknownapiversionerror/44002441#44002441)\r\n\r\nAlthough the user make an obvious mistake, but it is rather strange that boto3.session.resource return API version error for error such as \"DataNotFoundError\" \r\n \r\n```python\r\n        except DataNotFoundError:\r\n            # This is because we've provided an invalid API version.\r\n            available_api_versions = self._loader.list_api_versions(\r\n                service_name, 'resources-1')\r\n            raise UnknownAPIVersionError(\r\n                service_name, api_version, ', '.join(available_api_versions))\r\n```  I'm trying to copy all the objects from one bucket to another bucket with in the same region. I'm not getting either error or output. Please help in this regards. Below is the code I'm using to achieve this:\r\n```python\r\nimport boto3\r\ndef lambda_handler(event, context):\r\n        s3 = boto3.client('s3')\r\n        resource = boto3.resource('s3')\r\n        for s3_key in Bucket.objects.all(Bucket=self.bucket_name):\r\n            copy_source = {\r\n                'Bucket': '<source bucket>',\r\n                'Key': s3_key['Key']\r\n            }\r\n            print(s3_key['Key'])\r\n            s3.meta.client.copy(copy_source, ',dest bucket.', s3_key['Key'])\r\n```  Hello,\r\n\r\nFirstly, I would like to say sorry if this is the incorrect way to submit a potential documentation problem. I went through your [readthedoc page](http://boto3.readthedocs.io/) but couldn't find any contact information.\r\n\r\nIn your document for [IAM.list_users method](http://boto3.readthedocs.io/en/latest/reference/services/iam.html#IAM.Client.list_users), you stated:\r\n\r\n> `PasswordLastUsed` (datetime) --\r\n\r\n> The date and time, in ISO 8601 date-time format , when the user's password was last used to sign in to an AWS website. For a list of AWS websites that capture a user's last sign-in time, see the Credential Reports topic in the Using IAM guide. If a password is used more than once in a five-minute span, only the first use is returned in this field. This field is null (not present) when:\r\n> * The user does not have a password\r\n> * The password exists but has never been used (at least not since IAM started tracking this information on October 20th, 2014 there is no sign-in data associated with the user\r\n\r\n> This value is returned only in the GetUser and ListUsers actions.\r\n\r\nIMHO, this means `user does not have a password` -> `no PasswordLastUsed` and thus it implies: `has PasswordLastUsed` -> `user has a password`.\r\n\r\nUnfortunately, this overlooked an edge case.\r\n\r\nWhen user had a password and used it to log in to AWS, the data of PasswordLastUsed will be set. However, if later on we delete password for this user, `list_users` and `get_user` still displays the info of `PasswordLastUsed`.\r\n\r\nThus, I think the information might be misleading.\r\n\r\nDuring development of one of our tools, we actually based our work on the assumption that if a user has `PasswordLastUsed` field, he/she should have a password and it was wrong due to the edge case described above.\r\n\r\nI think we can improve this by clarify about such case, and advise developers on using `get_login_profile` to confirm whether a user has an IAM password or not (which is what we settled to use in our project).\r\n\r\nBest regards\r\n  For long running processes (greater than 1 hour) the expired token is problematic. Right now the turnaround is to programmatically take this fallback into account and implement a refresh within your code. Is there a way around this? Is there some other method that internally takes into account for refreshing the token without the programming explicitly writing code to do so?  I have an application which makes file uploading to s3. The app works from local machine but doesn't work from my server. On the server boto3 raises:\r\n\r\n```\r\n[2017-04-27 17:39:53,595: DEBUG/PoolWorker-1] Rewinding stream: <_io.BytesIO object at 0x7f33c3d31a40>\r\n[2017-04-27 17:39:53,595: DEBUG/PoolWorker-1] Event request-created.s3.UploadPart: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7f33c6c2c1d0>>\r\n[2017-04-27 17:39:53,595: DEBUG/PoolWorker-1] Event choose-signer.s3.UploadPart: calling handler <function set_operation_specific_signer at 0x7f33c6e6f620>\r\n[2017-04-27 17:39:53,596: DEBUG/PoolWorker-1] Calculating signature using hmacv1 auth.\r\n[2017-04-27 17:39:53,596: DEBUG/PoolWorker-1] HTTP request method: PUT\r\n[2017-04-27 17:39:53,596: DEBUG/PoolWorker-1] StringToSign:\r\nPUT\r\neR0MufFLtcWDshaxhn8IUQ==\r\n\r\nThu, 27 Apr 2017 17:39:53 GMT\r\n/file-upload-test/Fedora-Workstation-netinst-x86_64-25-1.3.iso?partNumber=2&uploadId=PDI6OPSGWC4R6NBHX1QAWF72EF41TH0Z1XSJ6UYYGUETVYCZOESQFCFW8ZMXGOLI\r\n[2017-04-27 17:39:53,596: DEBUG/PoolWorker-1] Sending http request: <PreparedRequest [PUT]>\r\n[2017-04-27 17:39:53,596: INFO/PoolWorker-1] Starting new HTTP connection (4): objectstorage.esclor86.eecloud.nsn-rdnet.net\r\n[2017-04-27 17:39:53,599: DEBUG/PoolWorker-1] Waiting for 100 Continue response.\r\n[2017-04-27 17:39:53,738: INFO/MainProcess] Received task: tasks.upload_chunk[f99a70a5-a57a-46fa-9b76-3fdaa4fce4cb]  \r\n[2017-04-27 17:39:54,600: DEBUG/PoolWorker-1] No response seen from server, continuing to send the response body.\r\n10.154.117.101 - - [27/Apr/2017 17:39:55] \"GET /upload_progress?flowIdentifier=486539264-Fedora-Workstation-netinst-x86_64-25-13iso HTTP/1.1\" 200 -\r\n[2017-04-27 17:39:55,644: DEBUG/PoolWorker-1] ConnectionError received when sending HTTP request.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 349, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1107, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/awsrequest.py\", line 130, in _send_request\r\n    self, method, url, body, headers, *args, **kwargs)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1152, in _send_request\r\n    self.endheaders(body)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1103, in endheaders\r\n    self._send_output(message_body)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/awsrequest.py\", line 182, in _send_output\r\n    self.send(message_body)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/awsrequest.py\", line 242, in send\r\n    return HTTPConnection.send(self, str)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 905, in send\r\n    self.sock.sendall(datablock)\r\nConnectionResetError: [Errno 104] Connection reset by peer\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/vendored/requests/adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 597, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/vendored/requests/packages/urllib3/util/retry.py\", line 245, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/vendored/requests/packages/urllib3/packages/six.py\", line 309, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 349, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1107, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/awsrequest.py\", line 130, in _send_request\r\n    self, method, url, body, headers, *args, **kwargs)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1152, in _send_request\r\n    self.endheaders(body)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1103, in endheaders\r\n    self._send_output(message_body)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/awsrequest.py\", line 182, in _send_output\r\n    self.send(message_body)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/awsrequest.py\", line 242, in send\r\n    return HTTPConnection.send(self, str)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 905, in send\r\n    self.sock.sendall(datablock)\r\nbotocore.vendored.requests.packages.urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/endpoint.py\", line 204, in _get_response\r\n    proxies=self.proxies, timeout=self.timeout)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/vendored/requests/sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/vendored/requests/adapters.py\", line 415, in send\r\n    raise ConnectionError(err, request=request)\r\nbotocore.vendored.requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))\r\n```\r\n\r\nVersion of boto3: 1.4.4\r\nVersion of botocore: 1.5.44\r\nVersion of python: 3.5.3\r\n\r\nCreating multipart upload works on both machines, only upload_part doesn't work.\r\nThe interesting fragment of code:\r\n```\r\ndef upload_part(s3, key, part_number, bucket, body, upload_id):\r\n    i = 0\r\n    while True:\r\n        try:\r\n            print(\"Sleeping\")\r\n            time.sleep(2 ** i * randint(0, 16))\r\n            r = s3.upload_part(Key=key, PartNumber=part_number, Bucket=bucket, UploadId=upload_id, Body=body)\r\n            break\r\n        except ReadTimeout as e:\r\n            i += 1\r\n            if i > 10:\r\n                raise e\r\n        except botocore.vendored.requests.exceptions.ConnectionError as e:\r\n            i += 1\r\n            if i > 10:\r\n                raise e\r\n        except BaseException as e:\r\n            print(repr(e))\r\n            raise e\r\n    print(\"Uploaded part %d\" % part_number)\r\n    return len(body), r[\"ETag\"]\r\n```\r\n\r\nThe function 'upload_part' is called by celery task, but I've decreased concurrency to 1.   This behavior is inconsistent with both\r\n\r\nhttps://boto3.readthedocs.io/en/latest/reference/services/iam.html#IAM.Client.create_user\r\n\r\nand\r\n\r\nhttps://boto3.readthedocs.io/en/latest/reference/services/iam.html#IAM.Client.delete_user\r\n\r\n```\r\n[ jstoner@ch-nb-3030:~/repos/iam-sync ] HEAD\r\n7s \ud83d\udc4d  $> ipython\r\nPython 2.7.13 (default, Apr  4 2017, 08:47:57)\r\nType \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\nIPython 5.3.0 -- An enhanced Interactive Python.\r\n?         -> Introduction and overview of IPython's features.\r\n%quickref -> Quick reference.\r\nhelp      -> Python's own help system.\r\nobject?   -> Details about 'object', use 'object??' for extra details.\r\n\r\nIn [1]: import boto3\r\n\r\nIn [2]: iam_client = boto3.resource('iam')\r\n   ...:\r\n\r\nIn [3]: iam_client.create_user(UserName='test_user')\r\nOut[3]: iam.User(name='test_user')\r\n\r\nIn [4]: u = Out[3]\r\n\r\nIn [5]: iam_client.delete_user(UserName='test_user')\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-5-f9fd0aa182ae> in <module>()\r\n----> 1 iam_client.delete_user(UserName='test_user')\r\n\r\nAttributeError: 'iam.ServiceResource' object has no attribute 'delete_user'\r\n\r\nIn [6]: dir(u)\r\nOut[6]:\r\n[u'AccessKey',\r\n u'LoginProfile',\r\n...\r\n u'delete',\r\n....\r\n u'user_name']\r\n\r\nIn [7]: u.delete()\r\nOut[7]:\r\n{'ResponseMetadata': {'HTTPHeaders': {'content-length': '200',\r\n   'content-type': 'text/xml',\r\n   'date': 'Tue, 25 Apr 2017 18:11:26 GMT',\r\n   'x-amzn-requestid': '98d430f0-29e2-11e7-8037-5979da81fce5'},\r\n  'HTTPStatusCode': 200,\r\n  'RequestId': '98d430f0-29e2-11e7-8037-5979da81fce5',\r\n  'RetryAttempts': 0}}\r\n\r\nIn [8]:\r\n```\r\n\r\nSo, instead of returning a dict, create_user returns an iam.User object, and there is no iam_client.delete_user() method. There is a User.delete() method. \r\n\r\nIs the doc out of date? I am using boto3 1.4.4 and botocore 1.5.43. I also installed moto, whose docs refer to boto3 when moto depends on boto (not boto3). So maybe I am in a bad state?  Currently tox will always run all tests, which contradicts the README. I don't know if OptionParser is really any more complicated than reading sys.argv, and you get some help text for free to boot, but I don't have strong opinions either way. The bigger simplification was ditching the shell=True kwarg, which means we don't have to worry about arg quoting. Good point. For some reason I was thinking OptionParser() passed through unknown flags as posargs, but that's not the behavior now that I check. Thanks for the review.  This will cause it to no longer raise an exception if the bucket can't be found via ListBuckets (#1063). This means that the creation_date attribute will return None in some cases, but the Bucket resource is straight up unusable in those cases right now. Should I update the `creation_date` attribute description in botocore to note this? Changes looks reasonable, just had a small suggestion to scope down the error we're catching. This is a breaking change that should have involved more communication to users. It certainly shouldn't have been part of a patch release.  Hi!\r\nThis request return right result:\r\n```python\r\nresponse = client.detect_labels( Image={ \"S3Object\":{\"Bucket\":\"x\", \"Name\": \"1.jpg\"} } )\r\n```\r\nBut if i have in Bucket name some \".\":\r\n```python\r\nresponse = client.detect_labels( Image={ \"S3Object\":{\"Bucket\":\"x.x.x\", \"Name\": \"1.jpg\"} } )\r\n```\r\nrequiest return \"An error occurred (InvalidS3ObjectException) when calling the DetectLabels operation: Unable to get image metadata from S3.  Check object key, region and/or access permissions.\"\r\n\r\nhttps://forums.aws.amazon.com/thread.jspa?threadID=243999 - same problem. @kyleknap thank you for answer!\r\n\r\nBut i have Bucket with \".\" in name, when i try to send S3Object with this name - i have this error. I read link below, and try to create test Bucket without \".\", and it work. And yes, i have latest one boto3 for python. Update it by \"pip\". So i think this is same problem. It looks like boto3 is sending the right data to the service, so there's no bug for us to fix here. I would recommend making use of one of our [community resources](https://github.com/boto/boto3#getting-help) for further guidance.  Hi.\r\n\r\nI'd like to add some methods to `ec2.Vpc` class and others so that I do not need to write any adapters / wrappers. Is there any possibility to do that ? Thx. I find creating classes with inheritance, confusing and monkey patching.  We create a WebService using Falcon Python Framework and Gunicorn,\r\nthe API create XML and PDF, but when we try to upload the files via Boto3 for AWS S3 the thread don't show any error.\r\n\r\nThe strange thing is that if we manually run this command on shell:\r\n\r\n  `  /root/merci_api/venv/bin/python2.7 /root/merci_api/venv/bin/gunicorn -b localhost:5000 main:app\r\n`\r\nAll works fine and the output is:\r\n```\r\n\r\n    [DEBUG] - Thread-2   : \"POST /TimbreCFDI33/TimbreCFDI.asmx HTTP/1.1\" 200 4759\r\n    [DEBUG] - Thread-2   : HTTP Response from https://invoiceone.mx/TimbreCFDI33/TimbreCFDI.asmx (status: 200):\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><soap:Body><ObtenerCFDIPruebaResponse xmlns=\"http://tempuri.org/\"><ObtenerCFDIPruebaResult><Xml>&lt;cfdi:Comprobante xmlns:cfdi=\"http://www.sat.gob.mx/cfd/3\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sat.gob.mx/cfd/3 http://www.sat.gob.mx/sitio_internet/cfd/3/cfdv33.xsd\" Version=\"3.3\" Fecha=\"2017-03-28T19:24:36\" MetodoPago=\"PUE\" SubTotal=\"1391.6\" Moneda=\"MXN\" Total=\"1614.26\" TipoDeComprobante=\"I\" LugarExpedicion=\"64000\"&gt;&lt;cfdi:Emisor Rfc=\"AAA010101AAA\" Nombre=\"REALHOST SA DE CV\" RegimenFiscal=\"601\" /&gt;&lt;cfdi:Receptor Rfc=\"XAXX010101000\" Nombre=\"PUBLICO EN GENERAL\" UsoCFDI=\"G01\" /&gt;&lt;cfdi:Conceptos&gt;&lt;cfdi:Concepto ClaveProdServ=\"01010101\" ClaveUnidad=\"F52\" NoIdentificacion=\"00001\" Cantidad=\"1\" Unidad=\"TONELADA\" Descripcion=\"Servicio de catering para 4 personas, 3 tiempos, apoyo para cierre de contrato anual\" ValorUnitario=\"1391.6\" Importe=\"1391.6\"&gt;&lt;/cfdi:Concepto&gt;&lt;/cfdi:Conceptos&gt;&lt;cfdi:Impuestos TotalImpuestosRetenidos=\"0.00\" TotalImpuestosTrasladados=\"222.66\"&gt;&lt;cfdi:Traslados&gt;&lt;cfdi:Traslado Impuesto=\"002\" TipoFactor=\"Tasa\" TasaOCuota=\"0.160000\" Importe=\"222.66\" /&gt;&lt;/cfdi:Traslados&gt;&lt;/cfdi:Impuestos&gt;&lt;cfdi:Complemento&gt;&lt;tfd:TimbreFiscalDigital xmlns:tfd=\"http://www.sat.gob.mx/TimbreFiscalDigital\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sat.gob.mx/TimbreFiscalDigital http://www.sat.gob.mx/sitio_internet/cfd/TimbreFiscalDigital/TimbreFiscalDigital11.xsd\" Version=\"1.1\" UUID=\"377de862-125f-4d5f-87dd-b59d585219c7\" FechaTimbrado=\"2017-03-28T13:03:20\" RfcProvCertif=\"AAA010101AAA\" SelloCFD=\"eeesTSR4qqnBCveoKVSfPljCMYvv4LwyuRuJOULVShCtdAG8rn3+1hlQqun2qNBitPHWJ5vraGCavB+LfP5l3PPSzaSgOjV8jUEOePTwGntsKLsN5nUOLV28zuyNSic9PADkMSgaMHqvx7qTlF/VASY0HyXqpDPD0VFn9uRiiKA=\" NoCertificadoSAT=\"20001000000100005761\" SelloSAT=\"qCzYGDEYlxMOzdsbyXHU2USIRkX4Zkyrh7bfxqS64QFnww7EIrjYwVfEzIjkLPFR2hYyds+sSrojKoEjT18oYKLW3Avth8qIOyXrYWfXeoQ0rGURxz8kiuSLZYKqKjrUllHo+EnINCAjaF2mQzWkj1x0QyBHFAS49ZuVhzUtitQ=\" /&gt;&lt;/cfdi:Complemento&gt;&lt;/cfdi:Comprobante&gt;</Xml><XmlAcuse /></ObtenerCFDIPruebaResult></ObtenerCFDIPruebaResponse></soap:Body></soap:Envelope>\r\n    Conectado al servicio\r\n    Imprimiendo comprobante\r\n    Comienza S3\r\n    [DEBUG] - Thread-2   : Looking for credentials via: env\r\n    [DEBUG] - Thread-2   : Looking for credentials via: assume-role\r\n    [DEBUG] - Thread-2   : Looking for credentials via: shared-credentials-file\r\n    [INFO] - Thread-2   : Found credentials in shared credentials file: ~/.aws/credentials\r\n    [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/endpoints.json\r\n    [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/s3/2006-03-01/service-2.json\r\n    [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/_retry.json\r\n    [DEBUG] - Thread-2   : Registering retry handlers for service: s3\r\n    [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x7ff54e06e5f0>\r\n    [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function _handler at 0x7ff54b2c79b0>\r\n    [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x7ff54e068cf8>\r\n    [DEBUG] - Thread-2   : The s3 config key is not a dictionary type, ignoring its value of: None\r\n    [DEBUG] - Thread-2   : Setting s3 timeout as (60, 60)\r\n    [DEBUG] - Thread-2   : Defaulting to S3 virtual host style addressing with path style addressing fallback.\r\n    [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/boto3/data/s3/2006-03-01/resources-1.json\r\n    [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/endpoints.json\r\n    [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/s3/2006-03-01/service-2.json\r\n    [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/_retry.json\r\n    [DEBUG] - Thread-2   : Registering retry handlers for service: s3\r\n    [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x7ff54e06e5f0>\r\n    [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function _handler at 0x7ff54b2c72a8>\r\n    [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x7ff54e068cf8>\r\n    [DEBUG] - Thread-2   : The s3 config key is not a dictionary type, ignoring its value of: None\r\n    [DEBUG] - Thread-2   : Setting s3 timeout as (60, 60)\r\n    [DEBUG] - Thread-2   : Defaulting to S3 virtual host style addressing with path style addressing fallback.\r\n    [DEBUG] - Thread-2   : Loading s3:s3\r\n    creando PDF\r\n    [DEBUG] - Thread-2   : Loading s3:Object\r\n    [DEBUG] - Thread-2   : Event creating-resource-class.s3.Object: calling handler <function _handler at 0x7ff54b2c7668>\r\n    [INFO] - Thread-2   : Calling s3:put_object with {'Body': '<cfdi:Comprobante xmlns:cfdi=\"http://www.sat.gob.mx/cfd/3\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sat.gob.mx/cfd/3 http://www.sat.gob.mx/sitio_internet/cfd/3/cfdv33.xsd\" Version=\"3.3\" Fecha=\"2017-03-28T19:24:36\" Sello=\"eeesTSR4qqnBCveoKVSfPljCMYvv4LwyuRuJOULVShCtdAG8rn3+1hlQqun2qNBitPHWJ5vraGCavB+LfP5l3PPSzaSgOjV8jUEOePTwGntsKLsN5nUOLV28zuyNSic9PADkMSgaMHqvx7qTlF/VASY0HyXqpDPD0VFn9uRiiKA=\" NoCertificado=\"20001000000200001428\" Certificado=\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVZVENDQTBtZ0F3SUJBZ0lVTWpBd01ERXdNREF3TURBeU1EQXdNREUwTWpnd0RRWUpLb1pJaHZjTkFRRUYKQlFBd2dnRmNNUm93R0FZRFZRUUREQkZCTGtNdUlESWdaR1VnY0hKMVpXSmhjekV2TUMwR0ExVUVDZ3dtVTJWeQpkbWxqYVc4Z1pHVWdRV1J0YVc1cGMzUnlZV05wdzdOdUlGUnlhV0oxZEdGeWFXRXhPREEyQmdOVkJBc01MMEZrCmJXbHVhWE4wY21GamFjT3piaUJrWlNCVFpXZDFjbWxrWVdRZ1pHVWdiR0VnU1c1bWIzSnRZV05wdzdOdU1Ta3cKSndZSktvWklodmNOQVFrQkZocGhjMmx6Ym1WMFFIQnlkV1ZpWVhNdWMyRjBMbWR2WWk1dGVERW1NQ1FHQTFVRQpDUXdkUVhZdUlFaHBaR0ZzWjI4Z056Y3NJRU52YkM0Z1IzVmxjbkpsY204eERqQU1CZ05WQkJFTUJUQTJNekF3Ck1Rc3dDUVlEVlFRR0V3Sk5XREVaTUJjR0ExVUVDQXdRUkdsemRISnBkRzhnUm1Wa1pYSmhiREVTTUJBR0ExVUUKQnd3SlEyOTViMkZqdzZGdU1UUXdNZ1lKS29aSWh2Y05BUWtDRENWU1pYTndiMjV6WVdKc1pUb2dRWEpoWTJWcwphU0JIWVc1a1lYSmhJRUpoZFhScGMzUmhNQjRYRFRFek1EVXdOekUyTURFeU9Wb1hEVEUzTURVd056RTJNREV5Ck9Wb3dnZHN4S1RBbkJnTlZCQU1USUVGRFEwVk5JRk5GVWxaSlEwbFBVeUJGVFZCU1JWTkJVa2xCVEVWVElGTkQKTVNrd0p3WURWUVFwRXlCQlEwTkZUU0JUUlZKV1NVTkpUMU1nUlUxUVVrVlRRVkpKUVV4RlV5QlRRekVwTUNjRwpBMVVFQ2hNZ1FVTkRSVTBnVTBWU1ZrbERTVTlUSUVWTlVGSkZVMEZTU1VGTVJWTWdVME14SlRBakJnTlZCQzBUCkhFRkJRVEF4TURFd01VRkJRU0F2SUVoRlIxUTNOakV3TURNMFV6SXhIakFjQmdOVkJBVVRGU0F2SUVoRlIxUTMKTmpFd01ETk5SRVpPVTFJd09ERVJNQThHQTFVRUN4TUljSEp2WkhWamRHOHdnWjh3RFFZSktvWklodmNOQVFFQgpCUUFEZ1kwQU1JR0pBb0dCQUtTL2JlVVZ5NkUzYU9EYU51TGQyUzNQWGFRcmUwdEd4bVlUZVV4YTU1eDJ0Lzc5CjE5dHRnT3BLRjZoUEY1S3ZsWWg0enRxUXFQNHlFVitIakg3eXkvMmQvK2U3dCtKNjFqVHJiZExxVDNXRDArczUKZkNMNkpPckY0aHF5Ly9FR2RmdllmdGRHUk5yWkgrZEFqV1dtbDJTL2hyTjlhVXhyYVM1cXFPMWI3YnRsQWdNQgpBQUdqSFRBYk1Bd0dBMVVkRXdFQi93UUNNQUF3Q3dZRFZSMFBCQVFEQWdiQU1BMEdDU3FHU0liM0RRRUJCUVVBCkE0SUJBUUFDUFhBV1pYMkR1S2laVnYzNVJTMVdGS2dUMnViVU85QytieWZaYXBWNlp6WU5PaUE0S21wa3FIVS8KYmtaSHFLalIrUjU5aG9ZaFZkbitDbFVJbGlaZjJDaEhoOHMwYTB2QlJOSjNJSGZBMWFrV2R6b2NZWkxYanozbQowRXIzMUJZK3VTM3FXVXRQc09OR1ZEeVpMNklVQkJVbEZvZWNRaFA5QU8zOWVyOHpJYmVVMmIwTU1CSnhDdDR2CmJES0Z2VDlpM1YwUHVvbytrbW1rZjE1RDJyQkdSK2RyZDhIOFlnOFRER0ZLZjJ6S21Sc2dUN25JZW91NldwZlkKcDU3MFdJdkxKUVkrZnNNcDMzNEQwNVVwNXlrWVNBeFVHYTMwUmRVekE0cnhONWhUK1c5d2hXVkdEODhURDMzTgp3NTV1TlJVY1JPM1pVVkhtZFdSRytHamhsZnNECi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\" MetodoPago=\"PUE\" SubTotal=\"1391.6\" Moneda=\"MXN\" Total=\"1614.26\" TipoDeComprobante=\"I\" LugarExpedicion=\"64000\"><cfdi:Emisor Rfc=\"AAA010101AAA\" Nombre=\"REALHOST SA DE CV\" RegimenFiscal=\"601\" /><cfdi:Receptor Rfc=\"XAXX010101000\" Nombre=\"PUBLICO EN GENERAL\" UsoCFDI=\"G01\" /><cfdi:Conceptos><cfdi:Concepto ClaveProdServ=\"01010101\" ClaveUnidad=\"F52\" NoIdentificacion=\"00001\" Cantidad=\"1\" Unidad=\"TONELADA\" Descripcion=\"Servicio de catering para 4 personas, 3 tiempos, apoyo para cierre de contrato anual\" ValorUnitario=\"1391.6\" Importe=\"1391.6\"></cfdi:Concepto></cfdi:Conceptos><cfdi:Impuestos TotalImpuestosRetenidos=\"0.00\" TotalImpuestosTrasladados=\"222.66\"><cfdi:Traslados><cfdi:Traslado Impuesto=\"002\" TipoFactor=\"Tasa\" TasaOCuota=\"0.160000\" Importe=\"222.66\" /></cfdi:Traslados></cfdi:Impuestos><cfdi:Complemento><tfd:TimbreFiscalDigital xmlns:tfd=\"http://www.sat.gob.mx/TimbreFiscalDigital\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sat.gob.mx/TimbreFiscalDigital http://www.sat.gob.mx/sitio_internet/cfd/TimbreFiscalDigital/TimbreFiscalDigital11.xsd\" Version=\"1.1\" UUID=\"377de862-125f-4d5f-87dd-b59d585219c7\" FechaTimbrado=\"2017-03-28T13:03:20\" RfcProvCertif=\"AAA010101AAA\" SelloCFD=\"eeesTSR4qqnBCveoKVSfPljCMYvv4LwyuRuJOULVShCtdAG8rn3+1hlQqun2qNBitPHWJ5vraGCavB+LfP5l3PPSzaSgOjV8jUEOePTwGntsKLsN5nUOLV28zuyNSic9PADkMSgaMHqvx7qTlF/VASY0HyXqpDPD0VFn9uRiiKA=\" NoCertificadoSAT=\"20001000000100005761\" SelloSAT=\"qCzYGDEYlxMOzdsbyXHU2USIRkX4Zkyrh7bfxqS64QFnww7EIrjYwVfEzIjkLPFR2hYyds+sSrojKoEjT18oYKLW3Avth8qIOyXrYWfXeoQ0rGURxz8kiuSLZYKqKjrUllHo+EnINCAjaF2mQzWkj1x0QyBHFAS49ZuVhzUtitQ=\" /></cfdi:Complemento></cfdi:Comprobante>', u'Bucket': 'mercicfditest', u'Key': u'e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.xml', 'ACL': 'public-read'}\r\n    [DEBUG] - Thread-2   : Event before-parameter-build.s3.PutObject: calling handler <function validate_ascii_metadata at 0x7ff54e0259b0>\r\n    [DEBUG] - Thread-2   : Event before-parameter-build.s3.PutObject: calling handler <function sse_md5 at 0x7ff54e020ed8>\r\n    [DEBUG] - Thread-2   : Event before-parameter-build.s3.PutObject: calling handler <function convert_body_to_file_like_object at 0x7ff54e026050>\r\n    [DEBUG] - Thread-2   : Event before-parameter-build.s3.PutObject: calling handler <function validate_bucket_name at 0x7ff54e020e60>\r\n    [DEBUG] - Thread-2   : Event before-parameter-build.s3.PutObject: calling handler <bound method S3RegionRedirector.redirect_from_cache of <botocore.utils.S3RegionRedirector object at 0x7ff54a58c510>>\r\n    [DEBUG] - Thread-2   : Event before-parameter-build.s3.PutObject: calling handler <function generate_idempotent_uuid at 0x7ff54e020b18>\r\n    [DEBUG] - Thread-2   : Event before-call.s3.PutObject: calling handler <function conditionally_calculate_md5 at 0x7ff54e020de8>\r\n    [DEBUG] - Thread-2   : Event before-call.s3.PutObject: calling handler <function add_expect_header at 0x7ff54e025320>\r\n    [DEBUG] - Thread-2   : Adding expect 100 continue header to request.\r\n    [DEBUG] - Thread-2   : Event before-call.s3.PutObject: calling handler <bound method S3RegionRedirector.set_request_url of <botocore.utils.S3RegionRedirector object at 0x7ff54a58c510>>\r\n    [DEBUG] - Thread-2   : Making request for OperationModel(name=PutObject) (verify_ssl=True) with params: {'body': <StringIO.StringIO instance at 0x7ff54a5815a8>, 'url': u'https://s3.amazonaws.com/mercicfditest/e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.xml', 'headers': {'Content-MD5': u'18QMFVJMlfH0cWZsUxmKXw==', 'Expect': '100-continue', u'x-amz-acl': 'public-read', 'User-Agent': 'Boto3/1.4.4 Python/2.7.12 Linux/4.4.0-59-generic Botocore/1.5.30 Resource'}, 'context': {'client_region': 'us-east-1', 'signing': {'bucket': 'mercicfditest'}, 'has_streaming_input': True, 'client_config': <botocore.config.Config object at 0x7ff54a5fef90>}, 'query_string': {}, 'url_path': u'/mercicfditest/e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.xml', 'method': u'PUT'}\r\n    [DEBUG] - Thread-2   : Event request-created.s3.PutObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7ff54a5fef10>>\r\n    [DEBUG] - Thread-2   : Event before-sign.s3.PutObject: calling handler <function fix_s3_host at 0x7ff54e188758>\r\n    [DEBUG] - Thread-2   : Checking for DNS compatible bucket for: https://s3.amazonaws.com/mercicfditest/e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.xml\r\n    [DEBUG] - Thread-2   : URI updated to: https://mercicfditest.s3.amazonaws.com/e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.xml\r\n    [DEBUG] - Thread-2   : Calculating signature using hmacv1 auth.\r\n    [DEBUG] - Thread-2   : HTTP request method: PUT\r\n    [DEBUG] - Thread-2   : StringToSign:\r\n    PUT\r\n    18QMFVJMlfH0cWZsUxmKXw==\r\n    \r\n    Tue, 28 Mar 2017 19:24:37 GMT\r\n    x-amz-acl:public-read\r\n    /mercicfditest/e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.xml\r\n    [DEBUG] - Thread-2   : Sending http request: <PreparedRequest [PUT]>\r\n    [INFO] - Thread-2   : Starting new HTTPS connection (1): mercicfditest.s3.amazonaws.com\r\n    [DEBUG] - Thread-2   : Waiting for 100 Continue response.\r\n    [DEBUG] - Thread-2   : 100 Continue response seen, now sending request body.\r\n    [DEBUG] - Thread-2   : \"PUT /e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.xml HTTP/1.1\" 200 0\r\n    [DEBUG] - Thread-2   : Response headers: {'content-length': '0', 'x-amz-id-2': '5hFF5pbWJSeTLseOPCp2DBo5N6nQJ5FGlTKo8f0mVRkr42+kNiutD3v2HaykzwF4aIyvD+N8Xgs=', 'server': 'AmazonS3', 'x-amz-request-id': '8E421C62B8DF6D13', 'etag': '\"d7c40c15524c95f1f471666c53198a5f\"', 'date': 'Tue, 28 Mar 2017 19:24:38 GMT'}\r\n    [DEBUG] - Thread-2   : Response body:\r\n    [DEBUG] - Thread-2   : Event needs-retry.s3.PutObject: calling handler <botocore.retryhandler.RetryHandler object at 0x7ff54a629890>\r\n    [DEBUG] - Thread-2   : No retry needed.\r\n    [DEBUG] - Thread-2   : Event needs-retry.s3.PutObject: calling handler <bound method S3RegionRedirector.redirect_from_error of <botocore.utils.S3RegionRedirector object at 0x7ff54a58c510>>\r\n    [DEBUG] - Thread-2   : Response: {u'ETag': '\"d7c40c15524c95f1f471666c53198a5f\"', 'ResponseMetadata': {'HTTPStatusCode': 200, 'RetryAttempts': 0, 'HostId': '5hFF5pbWJSeTLseOPCp2DBo5N6nQJ5FGlTKo8f0mVRkr42+kNiutD3v2HaykzwF4aIyvD+N8Xgs=', 'RequestId': '8E421C62B8DF6D13', 'HTTPHeaders': {'content-length': '0', 'x-amz-id-2': '5hFF5pbWJSeTLseOPCp2DBo5N6nQJ5FGlTKo8f0mVRkr42+kNiutD3v2HaykzwF4aIyvD+N8Xgs=', 'server': 'AmazonS3', 'x-amz-request-id': '8E421C62B8DF6D13', 'etag': '\"d7c40c15524c95f1f471666c53198a5f\"', 'date': 'Tue, 28 Mar 2017 19:24:38 GMT'}}}\r\n    [DEBUG] - Thread-2   : Acquiring 0\r\n    [DEBUG] - Thread-3   : UploadSubmissionTask(transfer_id=0, {'transfer_future': <s3transfer.futures.TransferFuture object at 0x7ff54a52a090>}) about to wait for the following futures []\r\n    [DEBUG] - Thread-3   : UploadSubmissionTask(transfer_id=0, {'transfer_future': <s3transfer.futures.TransferFuture object at 0x7ff54a52a090>}) done waiting for dependent futures\r\n    [DEBUG] - Thread-3   : Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': <s3transfer.futures.TransferFuture object at 0x7ff54a52a090>}) with kwargs {'osutil': <s3transfer.utils.OSUtils object at 0x7ff54a50d310>, 'client': <botocore.client.S3 object at 0x7ff54b0a0210>, 'config': <boto3.s3.transfer.TransferConfig object at 0x7ff5590c6b10>, 'transfer_future': <s3transfer.futures.TransferFuture object at 0x7ff54a52a090>, 'request_executor': <s3transfer.futures.BoundedExecutor object at 0x7ff54a50d5d0>}\r\n    [DEBUG] - Thread-3   : Submitting task PutObjectTask(transfer_id=0, {'extra_args': {}, 'bucket': 'mercicfditest', 'key': u'e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf'}) to executor <s3transfer.futures.BoundedExecutor object at 0x7ff54a50d5d0> for transfer request: 0.\r\n    [DEBUG] - Thread-3   : Acquiring 0\r\n    [DEBUG] - Thread-3   : Releasing acquire 0/None\r\n    [DEBUG] - Thread-4   : PutObjectTask(transfer_id=0, {'extra_args': {}, 'bucket': 'mercicfditest', 'key': u'e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf'}) about to wait for the following futures []\r\n    [DEBUG] - Thread-4   : PutObjectTask(transfer_id=0, {'extra_args': {}, 'bucket': 'mercicfditest', 'key': u'e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf'}) done waiting for dependent futures\r\n    [DEBUG] - Thread-4   : Executing task PutObjectTask(transfer_id=0, {'extra_args': {}, 'bucket': 'mercicfditest', 'key': u'e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf'}) with kwargs {'extra_args': {}, 'client': <botocore.client.S3 object at 0x7ff54b0a0210>, 'bucket': 'mercicfditest', 'key': u'e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf', 'fileobj': <s3transfer.utils.ReadFileChunk object at 0x7ff54a52a3d0>}\r\n    [DEBUG] - Thread-4   : Event before-parameter-build.s3.PutObject: calling handler <function validate_ascii_metadata at 0x7ff54e0259b0>\r\n    [DEBUG] - Thread-4   : Event before-parameter-build.s3.PutObject: calling handler <function sse_md5 at 0x7ff54e020ed8>\r\n    [DEBUG] - Thread-4   : Event before-parameter-build.s3.PutObject: calling handler <function convert_body_to_file_like_object at 0x7ff54e026050>\r\n    [DEBUG] - Thread-4   : Event before-parameter-build.s3.PutObject: calling handler <function validate_bucket_name at 0x7ff54e020e60>\r\n    [DEBUG] - Thread-4   : Event before-parameter-build.s3.PutObject: calling handler <bound method S3RegionRedirector.redirect_from_cache of <botocore.utils.S3RegionRedirector object at 0x7ff54b019a90>>\r\n    [DEBUG] - Thread-4   : Event before-parameter-build.s3.PutObject: calling handler <function generate_idempotent_uuid at 0x7ff54e020b18>\r\n    [DEBUG] - Thread-4   : Event before-call.s3.PutObject: calling handler <function conditionally_calculate_md5 at 0x7ff54e020de8>\r\n    [DEBUG] - Thread-4   : Event before-call.s3.PutObject: calling handler <function add_expect_header at 0x7ff54e025320>\r\n    [DEBUG] - Thread-4   : Adding expect 100 continue header to request.\r\n    [DEBUG] - Thread-4   : Event before-call.s3.PutObject: calling handler <bound method S3RegionRedirector.set_request_url of <botocore.utils.S3RegionRedirector object at 0x7ff54b019a90>>\r\n    [DEBUG] - Thread-4   : Making request for OperationModel(name=PutObject) (verify_ssl=True) with params: {'body': <s3transfer.utils.ReadFileChunk object at 0x7ff54a52a3d0>, 'url': u'https://s3.amazonaws.com/mercicfditest/e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf', 'headers': {'Content-MD5': u'L2aDUlipbt+2b/c0W/HeRg==', 'Expect': '100-continue', 'User-Agent': 'Boto3/1.4.4 Python/2.7.12 Linux/4.4.0-59-generic Botocore/1.5.30'}, 'context': {'client_region': 'us-east-1', 'signing': {'bucket': 'mercicfditest'}, 'has_streaming_input': True, 'client_config': <botocore.config.Config object at 0x7ff54b0196d0>}, 'query_string': {}, 'url_path': u'/mercicfditest/e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf', 'method': u'PUT'}\r\n    [DEBUG] - Thread-4   : Event request-created.s3.PutObject: calling handler <function disable_upload_callbacks at 0x7ff54b0596e0>\r\n    [DEBUG] - Thread-4   : Event request-created.s3.PutObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7ff54b019650>>\r\n    [DEBUG] - Thread-4   : Event before-sign.s3.PutObject: calling handler <function fix_s3_host at 0x7ff54e188758>\r\n    [DEBUG] - Thread-4   : Checking for DNS compatible bucket for: https://s3.amazonaws.com/mercicfditest/e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf\r\n    [DEBUG] - Thread-4   : URI updated to: https://mercicfditest.s3.amazonaws.com/e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf\r\n    [DEBUG] - Thread-4   : Calculating signature using hmacv1 auth.\r\n    [DEBUG] - Thread-4   : HTTP request method: PUT\r\n    [DEBUG] - Thread-4   : StringToSign:\r\n    PUT\r\n    L2aDUlipbt+2b/c0W/HeRg==\r\n    \r\n    Tue, 28 Mar 2017 19:24:37 GMT\r\n    /mercicfditest/e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf\r\n    [DEBUG] - Thread-4   : Event request-created.s3.PutObject: calling handler <function enable_upload_callbacks at 0x7ff54b059758>\r\n    [DEBUG] - Thread-4   : Sending http request: <PreparedRequest [PUT]>\r\n    [INFO] - Thread-4   : Starting new HTTPS connection (1): mercicfditest.s3.amazonaws.com\r\n    [DEBUG] - Thread-4   : Waiting for 100 Continue response.\r\n    [DEBUG] - Thread-4   : 100 Continue response seen, now sending request body.\r\n    [DEBUG] - Thread-4   : \"PUT /e4a61613ae0b6d76856c9daac0bce622/377de862-125f-4d5f-87dd-b59d585219c7.pdf HTTP/1.1\" 200 0\r\n    [DEBUG] - Thread-4   : Response headers: {'content-length': '0', 'x-amz-id-2': 'AQ8anEKML/AeylAMWFy8n3zw/NpUvz0V3Yi1a0xIAgqlOIZOJJwDWVz39nPEg10I6yjrWYUkBao=', 'server': 'AmazonS3', 'x-amz-request-id': '731A71C6EABE2F0E', 'etag': '\"2f66835258a96edfb66ff7345bf1de46\"', 'date': 'Tue, 28 Mar 2017 19:24:38 GMT'}\r\n    [DEBUG] - Thread-4   : Response body:\r\n    \r\n    [DEBUG] - Thread-4   : Event needs-retry.s3.PutObject: calling handler <botocore.retryhandler.RetryHandler object at 0x7ff54ad78a50>\r\n    [DEBUG] - Thread-4   : No retry needed.\r\n    [DEBUG] - Thread-4   : Event needs-retry.s3.PutObject: calling handler <bound method S3RegionRedirector.redirect_from_error of <botocore.utils.S3RegionRedirector object at 0x7ff54b019a90>>\r\n    [DEBUG] - Thread-4   : Releasing acquire 0/None\r\n    Carga exitosa\r\n    CFDI Creado\r\n    Iniciando proceso de envio\r\n    Proceso CFDI Procesado correctamente\r\n```\r\n\r\nThe code upload on S3 and sends and email.\r\n\r\nThe issue is that we want to run this command always on system we create the file:\r\n\r\n`    /etc/systemd/system/merci_service.service\r\n`\r\nThe config is:\r\n\r\n   ```\r\n [Unit]\r\n    Description=Merci Api application\r\n    After=network.target\r\n    \r\n    [Service]\r\n    User=root\r\n    Group=root\r\n    PIDFile=/tmp/gunicorn.pid\r\n    Environment=\"PATH=/root/merci_api/venv/bin\"\r\n    WorkingDirectory=/root/merci_api\r\n    ExecStart=/root/merci_api/venv/bin/python2.7 /root/merci_api/venv/bin/gunicorn -b localhost:5000 main:app\r\n    ExecReload=/bin/kill -s HUP $MAINPID\r\n    ExecStop=/bin/kill -s TERM $MAINPID\r\n    \r\n    [Install]\r\n    WantedBy=multi-user.target\r\n```\r\n\r\nWe run the script:\r\n\r\n      ```\r\n  \u25cf merci_service.service - Merci Api application\r\n       Loaded: loaded (/etc/systemd/system/merci_service.service; enabled; vendor preset: enabled)\r\n       Active: active (running) since Tue 2017-03-28 19:36:59 UTC; 10min ago\r\n     Main PID: 23516 (python2.7)\r\n        Tasks: 2\r\n       Memory: 72.7M\r\n          CPU: 914ms\r\n       CGroup: /system.slice/merci_service.service\r\n               \u251c\u250023516 /root/merci_api/venv/bin/python2.7 /root/merci_api/venv/bin/gunicorn -b localhost:5000 main:app\r\n               \u2514\u250023522 /root/merci_api/venv/bin/python2.7 /root/merci_api/venv/bin/gunicorn -b localhost:5000 main:app\r\n```\r\n\r\nBut when we create the request the output is:\r\n```\r\n\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Looking for credentials via: env\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Looking for credentials via: assume-role\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Looking for credentials via: shared-credentials-file\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [INFO] - Thread-2   : Found credentials in shared credentials file: ~/.aws/credentials\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/endpoints.json\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/s3/2006-03-01/service-2.json\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/_retry.json\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Registering retry handlers for service: s3\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x7efc9a2735f0>\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function _handler at 0x7efc974cd9b0>\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x7efc9a26ecf8>\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : The s3 config key is not a dictionary type, ignoring its value of: None\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Setting s3 timeout as (60, 60)\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Defaulting to S3 virtual host style addressing with path style addressing fallback.\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/boto3/data/s3/2006-03-01/resources-1.json\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/endpoints.json\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/s3/2006-03-01/service-2.json\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Loading JSON file: /root/merci_api/venv/local/lib/python2.7/site-packages/botocore/data/_retry.json\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Registering retry handlers for service: s3\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x7efc9a2735f0>\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function _handler at 0x7efc974cd2a8>\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x7efc9a26ecf8>\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : The s3 config key is not a dictionary type, ignoring its value of: None\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Setting s3 timeout as (60, 60)\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Defaulting to S3 virtual host style addressing with path style addressing fallback.\r\n    Mar 28 19:39:19 ip-10-0-2-149 python2.7[23516]: [DEBUG] - Thread-2   : Loading s3:s3\r\n```\r\nThe code run on venv.\r\nWhy on system service fails and in console works fine?\r\nAny advice?\r\n\r\nRegards I think is an issue for that, the thread doesn't work properly on Gunicorn running on venv, so i installed boto for python 2.7 and all works fine, another thing is when we put the credentials the venv doesn't recognize the folder because is in root.\r\nWhatever with Boto works better.\r\nThanks #  I'm using `boto3` for MTurk API. When I tried to create HITs or QulificationTypes, with the same code and same data, sometimes works fine but sometimes throws this error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"request.py\", line 233, in createHIT\r\n    LifetimeInSeconds = 60*60*24*7,\r\n  File \"\\path_to_python\\Python35\\lib\\site-packages\\botocore\\client.py\", line 253, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"\\path_to_python\\Python35\\lib\\site-packages\\botocore\\client.py\", line 543, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (505) when calling the CreateHITWithHITType operation: HTTP Version Not Supported\r\n```\r\nEnvironment: `python 3.5 in windows 10`\r\n\r\nI wonder is there anything wrong with the code or AMT server? The following are the debug logs. I hid information which may be sensitive. The same code also works fine sometimes without any change.\r\n\r\n```sh\r\n$ python CreateHitSample.py\r\n2017-03-28 11:24:49,856 botocore.hooks [DEBUG] Event before-parameter-build.mturk-requester.CreateHIT: calling handler <function generate_idempotent_uuid at 0x000001D4EE6BD6A8>\r\n2017-03-28 11:24:49,856 botocore.endpoint [DEBUG] Making request for OperationModel(name=CreateHIT) (verify_ssl=True) with params: {'body': b'{\"LifetimeInSeconds\": 30, \"Question\": \"<HTMLQuestion xmlns=\\\\\"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2011-11-11/HTMLQuestion.xsd\\\\\">\\\\n  <HTMLContent><![CDATA[<!DOCTYPE html>\\\\n  <head><title>HIT | Judge the Relevance between Images and Phrases</title><meta http-equiv=\\\\\"Content-Type\\\\\" content=\\\\\"text/html; charset=UTF-8\\\\\"><meta content=\\\\\"width=device-width,initial-scale=1\\\\\" name=\\\\\"viewport\\\\\"><script type=\\\\\"text/javascript\\\\\" src=\\\\\"https://s3.amazonaws.com/mturk-public/externalHIT_v1.js\\\\\"></script><link crossorigin=\\\\\"anonymous\\\\\" href=\\\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\\\" integrity=\\\\\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\\\\\" rel=\\\\\"stylesheet\\\\\"></head>\\\\n<body style=\\\\\"font-size:16px\\\\\">\\\\n\\\\n\\\\t<form name=\\\\\"mturk_form\\\\\" method=\\\\\"post\\\\\" id=\\\\\"mturk_form\\\\\" action=\\\\\"https://workersandbox.mturk.com/mturk/externalSubmit\\\\\"><input type=\\\\\"hidden\\\\\" value=\\\\\"\\\\\" name=\\\\\"assignmentId\\\\\" id=\\\\\"assignmentId\\\\\">\\\\n\\\\n\\\\t<section class=\\\\\"container\\\\\" id=\\\\\"Categorization\\\\\"><div class=\\\\\"row\\\\\"><div class=\\\\\"col-xs-12 col-md-12\\\\\"><div class=\\\\\"panel panel-primary\\\\\"><a class=\\\\\"panel-heading\\\\\" href=\\\\\"javascript:void(0);\\\\\" id=\\\\\"collapseTrigger\\\\\" style=\\\\\"color:#fff;display:block;text-decoration: none;\\\\\"><strong>Instructions </strong><span class=\\\\\"collapse-text\\\\\"></span></a><div class=\\\\\"panel-body\\\\\" id=\\\\\"instructionBody\\\\\"><b>Please open the following link and read the README carefully before you take this test:<br><a target=\\\\\"_blank\\\\\" href=\\\\\"http://vid-gpu9.pc.cs.cmu.edu:8080/historydataset/label/readme.html\\\\\">README Link</a></b></div></div></div></div></section><p class=\\\\\"text-center\\\\\"><input type=\\\\\"submit\\\\\" class=\\\\\"btn btn-danger\\\\\" id=\\\\\"submitButton\\\\\" value=\\\\\"Submit\\\\\"></p></form>\\\\n\\\\n<script src=\\\\\"https://code.jquery.com/jquery-3.1.0.min.js\\\\\" integrity=\\\\\"sha256-cCueBR6CsyA4/9szpPfrX3s49M9vUU5BgtiJj06wt/s=\\\\\" crossorigin=\\\\\"anonymous\\\\\"></script><script src=\\\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\\\" integrity=\\\\\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\\\\\" crossorigin=\\\\\"anonymous\\\\\"></script>\\\\n<script>\\\\n    $(document).ready(function() {\\\\n      var content = $(\\\\\"#instructionBody\\\\\");\\\\n      var trigger = $(\\\\\"#collapseTrigger\\\\\");\\\\n\\\\t  $(\\\\\".collapse-text\\\\\").text(\\\\\"(Click to collapse)\\\\\");\\\\n      trigger.click(function(){\\\\n        content.toggle();\\\\n        var isVisible = content.is(\\\\\":visible\\\\\");\\\\n        if(isVisible){\\\\n          $(\\\\\".collapse-text\\\\\").text(\\\\\"(Click to collapse)\\\\\");\\\\n        }else{\\\\n          $(\\\\\".collapse-text\\\\\").text(\\\\\"(Click to expand)\\\\\");\\\\n        }\\\\n      });\\\\n\\\\t  \\\\n\\\\t  var d = [{\\'eid\\': \\'768\\',\\\\n  \\'img\\': \\'768_11_2\\',\\\\n  \\'phrase\\': [\\'World War II\\',\\\\n   \\'Soviet Union forces\\',\\\\n   \\'Vienna , Polish and Soviet forces\\',\\\\n   \\'liberate Gda\\\\u8245sk\\'],\\\\n  \\'sentence\\': \\'World War II : Soviet Union forces invade Austria and take Vienna , Polish and Soviet forces liberate Gda\\\\u8245sk .\\'},\\\\n {\\'eid\\': \\'768\\',\\\\n  \\'img\\': \\'2723_4_14\\',\\\\n  \\'phrase\\': [\\'World War II\\',\\\\n   \\'Soviet Union forces\\',\\\\n   \\'Vienna , Polish and Soviet forces\\',\\\\n   \\'liberate Gda\\\\u8245sk\\'],\\\\n  \\'sentence\\': \\'World War II : Soviet Union forces invade Austria and take Vienna , Polish and Soviet forces liberate Gda\\\\u8245sk .\\'},\\\\n {\\'eid\\': \\'768\\',\\\\n  \\'img\\': \\'768_13_10\\',\\\\n  \\'phrase\\': [\\'World War II\\',\\\\n   \\'Soviet Union forces\\',\\\\n   \\'Vienna , Polish and Soviet forces\\',\\\\n   \\'liberate Gda\\\\u8245sk\\'],\\\\n  \\'sentence\\': \\'World War II : Soviet Union forces invade Austria and take Vienna , Polish and Soviet forces liberate Gda\\\\u8245sk .\\'},\\\\n {\\'eid\\': \\'768\\',\\\\n  \\'img\\': \\'768_14_6\\',\\\\n  \\'phrase\\': [\\'World War II\\',\\\\n   \\'Soviet Union forces\\',\\\\n   \\'Vienna , Polish and Soviet forces\\',\\\\n   \\'liberate Gda\\\\u8245sk\\'],\\\\n  \\'sentence\\': \\'World War II : Soviet Union forces invade Austria and take Vienna , Polish and Soviet forces liberate Gda\\\\u8245sk .\\'},\\\\n {\\'eid\\': \\'768\\',\\\\n  \\'img\\': \\'768_14_0\\',\\\\n  \\'phrase\\': [\\'World War II\\',\\\\n   \\'Soviet Union forces\\',\\\\n   \\'Vienna , Polish and Soviet forces\\',\\\\n   \\'liberate Gda\\\\u8245sk\\'],\\\\n  \\'sentence\\': \\'World War II : Soviet Union forces invade Austria and take Vienna , Polish and Soviet forces liberate Gda\\\\u8245sk .\\'},\\\\n {\\'eid\\': \\'768\\',\\\\n  \\'img\\': \\'768_10_18\\',\\\\n  \\'phrase\\': [\\'World War II\\',\\\\n   \\'Soviet Union forces\\',\\\\n   \\'Vienna , Polish and Soviet forces\\',\\\\n   \\'liberate Gda\\\\u8245sk\\'],\\\\n  \\'sentence\\': \\'World War II : Soviet Union forces invade Austria and take Vienna , Polish and Soviet forces liberate Gda\\\\u8245sk .\\'},\\\\n {\\'eid\\': \\'768\\',\\\\n  \\'img\\': \\'768_13_9\\',\\\\n  \\'phrase\\': [\\'World War II\\',\\\\n   \\'Soviet Union forces\\',\\\\n   \\'Vienna , Polish and Soviet forces\\',\\\\n   \\'liberate Gda\\\\u8245sk\\'],\\\\n  \\'sentence\\': \\'World War II : Soviet Union forces invade Austria and take Vienna , Polish and Soviet forces liberate Gda\\\\u8245sk .\\'},\\\\n {\\'eid\\': \\'668\\',\\\\n  \\'img\\': \\'668_22_3\\',\\\\n  \\'phrase\\': [\\'World War II\\',\\\\n   \\'Axis Powers\\',\\\\n   \\'Adolf Hitler\\',\\\\n   \\'Benito Mussolini\\',\\\\n   \\'the Brenner Pass\\',\\\\n   \\'the Alps\\',\\\\n   \\'an alliance\\'],\\\\n  \\'sentence\\': \\'World War II : Axis Powers - Adolf Hitler and Benito Mussolini meet at the Brenner Pass in the Alps and agree to form an alliance against France and the United Kingdom.\\'},\\\\n {\\'eid\\': \\'668\\',\\\\n  \\'img\\': \\'668_17_18\\',\\\\n  \\'phrase\\': [\\'World War II\\',\\\\n   \\'Axis Powers\\',\\\\n   \\'Adolf Hitler\\',\\\\n   \\'Benito Mussolini\\',\\\\n   \\'the Brenner Pass\\',\\\\n   \\'the Alps\\',\\\\n   \\'an alliance\\'],\\\\n  \\'sentence\\': \\'World War II : Axis Powers - Adolf Hitler and Benito Mussolini meet at the Brenner Pass in the Alps and agree to form an alliance against France and the United Kingdom.\\'},\\\\n {\\'eid\\': \\'668\\',\\\\n  \\'img\\': \\'668_16_11\\',\\\\n  \\'phrase\\': [\\'World War II\\',\\\\n   \\'Axis Powers\\',\\\\n   \\'Adolf Hitler\\',\\\\n   \\'Benito Mussolini\\',\\\\n   \\'the Brenner Pass\\',\\\\n   \\'the Alps\\',\\\\n   \\'an alliance\\'],\\\\n  \\'sentence\\': \\'World War II : Axis Powers - Adolf Hitler and Benito Mussolini meet at the Brenner Pass in the Alps and agree to form an alliance against France and the United Kingdom.\\'}];\\\\n\\\\t  \\\\n\\\\t  $.each(d, function(i, field) {\\\\n\\\\t\\\\t$row = $(\\'<div class=\\\\\"row\\\\\"></div>\\');\\\\n\\\\t\\\\t$row.append(\\'<div class=\\\\\"col-xs-12 col-sm-12\\\\\">\\' + field[\\\\\"sentence\\\\\"] + \\'</div>\\');\\\\n\\\\t\\\\t$row.append(\\'<div class=\\\\\"col-xs-12 col-sm-4\\\\\"><div class=\\\\\"content\\\\\"><img alt=\\\\\"\\' + field[\\\\\"img\\\\\"] + \\'.jpg\\\\\" class=\\\\\"img-responsive center-block\\\\\" src=\\\\\"http://222.29.193.172:8006/lmHistoryTMMData/img/imgs/\\' + field[\\\\\"img\\\\\"] + \\'.jpg\\\\\"></div></div>\\');\\\\n\\\\t\\\\t$select = $(\\'<div class=\\\\\"col-xs-12 col-sm-8 fields\\\\\"></div>\\');\\\\n\\\\t\\\\t\\\\n\\\\t\\\\t$table = $(\\'<table class=\\\\\"table table-striped table-bordered\\\\\"></table>\\');\\\\n\\\\t\\\\t$thead = $(\\'<thead><tr><th rowspan=2>phrase</th><th colspan=3 class=\\\\\"text-center\\\\\">concrete noun phrase</th><th colspan=2 class=\\\\\"text-center\\\\\">abstract phrase</th></tr><tr><th>strongly relevant</th><th>somewhat relevant</th><th>irrelevant</th><th>relevant</th><th>irrelevant</th></tr></thead>\\');\\\\n\\\\t\\\\t$tbody = $(\\'<tbody></tbody>\\');\\\\n\\\\t\\\\t$.each(field[\\\\\"phrase\\\\\"], function(j, eachp) {\\\\n\\\\t\\\\t  $tr = $(\\'<tr></tr>\\');\\\\n\\\\t\\\\t  $tr.append(\\'<td>\\' + eachp + \\'</td>\\');\\\\n\\\\t\\\\t  for (var r = 1; r <= 5; r ++) {\\\\n\\\\t\\\\t\\\\t$tr.append(\\'<td><input name=\\\\\"\\' + field[\\\\\"img\\\\\"] + \\'-\\' + j + \\'\\\\\" type=\\\\\"radio\\\\\" value=\\\\\"\\' + r + \\'\\\\\" required></td>\\');\\\\n\\\\t\\\\t  }\\\\n\\\\t\\\\t  $tbody.append($tr);\\\\n\\\\t\\\\t});\\\\n\\\\t\\\\t$table.append($thead);\\\\n\\\\t\\\\t$table.append($tbody);\\\\n\\\\t\\\\t\\\\n\\\\t\\\\t$select.append($table);\\\\n\\\\t\\\\t\\\\n\\\\t\\\\t$row.append($select);\\\\n\\\\t\\\\t$(\\'#Categorization\\').append($row);\\\\n\\\\t\\\\t$(\\'#Categorization\\').append(\\'<br><br>\\');\\\\n\\\\t  });\\\\n    });\\\\n  </script><script language=\\\\\"Javascript\\\\\">turkSetAssignmentID();</script></body></html>]]>\\\\n  </HTMLContent>\\\\n  <FrameHeight>1200</FrameHeight>\\\\n</HTMLQuestion>\\\\n\", \"Title\": \"Judge the Relevance between Images and Phrases\", \"Keywords\": \"binary classification, relevance, historical event\", \"Reward\": \"0.30\", \"AssignmentDurationInSeconds\": 600, \"Description\": \"you are helping to decide if images and phrases are relevant under a certain historical event\", \"MaxAssignments\": 3}', 'method': 'POST', 'url_path': '/', 'context': {'has_streaming_input': False, 'client_config': <botocore.config.Config object at 0x000001D4EF02C748>, 'client_region': 'us-east-1'}, 'query_string': '', 'url': 'https://mturk-requester-sandbox.us-east-1.amazonaws.com/', 'headers': {'User-Agent': 'Boto3/1.4.4 Python/3.5.2 Windows/10 Botocore/1.5.26', 'Content-Type': 'application/x-amz-json-1.1', 'X-Amz-Target': 'MTurkRequesterServiceV20170117.CreateHIT'}}\r\n2017-03-28 11:24:49,856 botocore.hooks [DEBUG] Event request-created.mturk-requester.CreateHIT: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001D4EF02C588>>\r\n2017-03-28 11:24:49,856 botocore.auth [DEBUG] Calculating signature using v4 auth.\r\n2017-03-28 11:24:49,856 botocore.auth [DEBUG] CanonicalRequest:\r\nPOST\r\n/\r\n\r\ncontent-type:application/x-amz-json-1.1\r\nhost:mturk-requester-sandbox.us-east-1.amazonaws.com\r\nx-amz-date:20170328T032449Z\r\nx-amz-target:MTurkRequesterServiceV20170117.CreateHIT\r\n\r\ncontent-type;host;x-amz-date;x-amz-target\r\n## signature\r\n2017-03-28 11:24:49,856 botocore.auth [DEBUG] StringToSign:\r\nAWS4-HMAC-SHA256\r\n20170328T032449Z\r\n20170328/us-east-1/mturk-requester/aws4_request\r\n## signature\r\n2017-03-28 11:24:49,856 botocore.auth [DEBUG] Signature:\r\n## signature\r\n2017-03-28 11:24:49,872 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [POST]>\r\n2017-03-28 11:24:50,385 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"POST / HTTP/1.1\" 505 None\r\n2017-03-28 11:24:50,400 botocore.parsers [DEBUG] Response headers: {'date': 'Tue, 28 Mar 2017 03:24:20 GMT', 'connection': 'close'}\r\n2017-03-28 11:24:50,400 botocore.parsers [DEBUG] Response body:\r\nb''\r\n2017-03-28 11:24:50,400 botocore.parsers [DEBUG] Received a non protocol specific error response from the service, unable to populate error code and message.\r\n2017-03-28 11:24:50,400 botocore.hooks [DEBUG] Event needs-retry.mturk-requester.CreateHIT: calling handler <botocore.retryhandler.RetryHandler object at 0x000001D4EF01B5C0>\r\n2017-03-28 11:24:50,400 botocore.retryhandler [DEBUG] No retry needed.\r\nTraceback (most recent call last):\r\n  File \"CreateHitSample.py\", line 37, in <module>\r\n    Question = questionSample,\r\n  File \"\\path_to_python\\Python35\\lib\\site-packages\\botocore\\client.py\", line 253, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"\\path_to_python\\Python35\\lib\\site-packages\\botocore\\client.py\", line 543, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (505) when calling the CreateHIT operation: HTTP Version Not Supported\r\n``` This is happening a lot with me as well. We've developed an api for mturk to create, post, and retrieve HITs to Amazon Mechanical Turk. Just now, I ran my django server, and tried to post some HITs. It posted some of them, then failed. I tried the exact same command, instant failure. I tried the exact same command, and this time all the HITs were posted. I raise the same exception.\r\n\r\n @abuccts @michaelromero \r\nCan you confirm if this is still an issue? I was in contact with the MTurk team and it sounds like the issue should be fixed now. Closing due to inactivity @kyleknap No longer an issue, and hasn't been for a long time.  The API documentation for the [AWS Batch submit-job action](http://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html#Batch-SubmitJob-request-dependsOn) describes the option `dependsOn` as:\r\n> A list of job IDs on which this job depends. A job can depend upon a maximum of 100 jobs.\r\n\r\nThe Boto3 documentation for the same [submit-job action](http://boto3.readthedocs.io/en/latest/reference/services/batch.html#Batch.Client.submit_job) describes the option as:\r\n> A list of job names or IDs on which this job depends. A job can depend upon a maximum of 100 jobs.\r\n\r\nNow I am wondering if it is really possible to provide a list of job names? Does the API really support that or are only IDs possible? It appears the \"or names\" bit is just wrong, the data structure requires job ids from my reading of the docs both in boto3 (down a bit further) and in the original REST documentation. This seems to have been synced, closing out.  I've just installed boto3 from pip (OSX El captain):\r\n\r\n```pip install boto3 --user```\r\n\r\nThe following version have been installed:\r\n\r\n```\r\n$ pip freeze | grep boto\r\nboto3==1.4.4\r\nbotocore==1.4.49\r\n```\r\n\r\nWhile trying this simple example, I am getting the following stack trace:\r\n\r\n```\r\nIn [26]: import boto3\r\n\r\nIn [27]: client = boto3.client('s3')\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-27-72c6788a933a> in <module>()\r\n----> 1 client = boto3.client('s3')\r\n\r\n/Users/fsantos/Library/Python/2.7/lib/python/site-packages/boto3/__init__.pyc in client(*args, **kwargs)\r\n     81     See :py:meth:`boto3.session.Session.client`.\r\n     82     \"\"\"\r\n---> 83     return _get_default_session().client(*args, **kwargs)\r\n     84 \r\n     85 \r\n\r\n/Users/fsantos/Library/Python/2.7/lib/python/site-packages/boto3/session.pyc in client(self, service_name, region_name, api_version, use_ssl, verify, endpoint_url, aws_access_key_id, aws_secret_access_key, aws_session_token, config)\r\n    261             aws_access_key_id=aws_access_key_id,\r\n    262             aws_secret_access_key=aws_secret_access_key,\r\n--> 263             aws_session_token=aws_session_token, config=config)\r\n    264 \r\n    265     def resource(self, service_name, region_name=None, api_version=None,\r\n\r\n/Library/Python/2.7/site-packages/botocore/session.pyc in create_client(self, service_name, region_name, api_version, use_ssl, verify, endpoint_url, aws_access_key_id, aws_secret_access_key, aws_session_token, config)\r\n    822             is_secure=use_ssl, endpoint_url=endpoint_url, verify=verify,\r\n    823             credentials=credentials, scoped_config=self.get_scoped_config(),\r\n--> 824             client_config=config, api_version=api_version)\r\n    825         return client\r\n    826 \r\n\r\n/Library/Python/2.7/site-packages/botocore/client.pyc in create_client(self, service_name, region_name, is_secure, endpoint_url, verify, credentials, scoped_config, api_version, client_config)\r\n     60                       client_config=None):\r\n     61         service_model = self._load_service_model(service_name, api_version)\r\n---> 62         cls = self._create_client_class(service_name, service_model)\r\n     63         endpoint_bridge = ClientEndpointBridge(\r\n     64             self._endpoint_resolver, scoped_config, client_config,\r\n\r\n/Library/Python/2.7/site-packages/botocore/client.pyc in _create_client_class(self, service_name, service_model)\r\n     82         self._event_emitter.emit('creating-client-class.%s' % service_name,\r\n     83                                  class_attributes=class_attributes,\r\n---> 84                                  base_classes=bases)\r\n     85         class_name = get_service_module_name(service_model)\r\n     86         cls = type(str(class_name), tuple(bases), class_attributes)\r\n\r\n/Library/Python/2.7/site-packages/botocore/hooks.pyc in emit(self, event_name, **kwargs)\r\n    225                  handlers.\r\n    226         \"\"\"\r\n--> 227         return self._emit(event_name, kwargs)\r\n    228 \r\n    229     def emit_until_response(self, event_name, **kwargs):\r\n\r\n/Library/Python/2.7/site-packages/botocore/hooks.pyc in _emit(self, event_name, kwargs, stop_on_response)\r\n    208         for handler in handlers_to_call:\r\n    209             logger.debug('Event %s: calling handler %s', event_name, handler)\r\n--> 210             response = handler(**kwargs)\r\n    211             responses.append((handler, response))\r\n    212             if stop_on_response and response is not None:\r\n\r\n/Users/fsantos/Library/Python/2.7/lib/python/site-packages/boto3/utils.pyc in _handler(**kwargs)\r\n     59     def _handler(**kwargs):\r\n     60         module, function_name = full_name.rsplit('.', 1)\r\n---> 61         module = import_module(module)\r\n     62         kwargs.update(parent_kwargs)\r\n     63         return getattr(module, function_name)(**kwargs)\r\n\r\n/Users/fsantos/Library/Python/2.7/lib/python/site-packages/boto3/utils.pyc in import_module(name)\r\n     50 \r\n     51     \"\"\"\r\n---> 52     __import__(name)\r\n     53     return sys.modules[name]\r\n     54 \r\n\r\n/Users/fsantos/Library/Python/2.7/lib/python/site-packages/boto3/s3/inject.py in <module>()\r\n     13 from botocore.exceptions import ClientError\r\n     14 \r\n---> 15 from boto3.s3.transfer import create_transfer_manager\r\n     16 from boto3.s3.transfer import TransferConfig, S3Transfer\r\n     17 from boto3.s3.transfer import ProgressCallbackInvoker\r\n\r\n/Users/fsantos/Library/Python/2.7/lib/python/site-packages/boto3/s3/transfer.py in <module>()\r\n    129 from s3transfer.manager import TransferConfig as S3TransferConfig\r\n    130 from s3transfer.manager import TransferManager\r\n--> 131 from s3transfer.futures import NonThreadedExecutor\r\n    132 from s3transfer.subscribers import BaseSubscriber\r\n    133 from s3transfer.utils import OSUtils\r\n\r\nImportError: cannot import name NonThreadedExecutor\r\n``` Version:\r\n```\r\npip freeze | grep s3transfer\r\ns3transfer==0.1.2\r\n```\r\n\r\nSituation resolved after upgrading to 0.1.10:\r\nThanks Resolved after upgrading the package s3transfer from 0.1.2 to 0.1.10.\r\nThanks  I see that `message.message_id` is different from `body['MessageId']`? What is the difference between the two?\r\n\r\n\r\n    sqs = boto3.resource('sqs', region_name=region, aws_access_key_id=aws_access_key_id, aws_secret_access_key=aws_secret_access_key)\r\n    queue_obj = sqs.Queue(queue_url)\r\n    messages = queue_obj.receive_messages(\r\n                AttributeNames=['All'],\r\n                MessageAttributeNames=['All'],\r\n                VisibilityTimeout=15,\r\n                WaitTimeSeconds=20,\r\n                MaxNumberOfMessages=5\r\n    )\r\n    for message in messages:\r\n        body = json.loads(message.body)\r\n        print(str(message.message_id) == str(body['MessageId'])) # This prints False all the time\r\n        \r\n         Posted here for the same: http://stackoverflow.com/questions/42404714/boto3-sqs-message-id-vs-messageid Thanks. I would like know which Id is going to be unique in a queue? I would like to store messages by id as key  I am writing a script utilizing Boto3 client library. I am trying to copy an object from one bucket, and place it into another bucket (which may, or may not contain the object key, but to my understand, if the key did not exist it would create it). Below is my code, the branchName and variables being instantiated do exist as strings.\r\n\r\n```\r\ncopyFromLocation = 'CloudFormationPushBucket/' + branchName\r\ncopyToLocation = 'DeploymentObjects/' + branchName\r\n\r\ns3.copy_object(\r\n        Bucket='gitlab-testing-tyroz-2',\r\n        CopySource={\r\n                    'Bucket': 'gitlab-testing-tyroz',\r\n                    'Key': copyFromLocation\r\n                },\r\n        Key=copyToLocation\r\n        )\r\n```\r\nThis code returns the error:\r\n\r\nAn error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist.: NoSuchKey\r\nTraceback (most recent call last):\r\nFile \"/var/task/lambda_function.py\", line 39, in lambda_handler\r\nKey=copyToLocation\r\nFile \"/var/runtime/botocore/client.py\", line 253, in _api_call\r\nreturn self._make_api_call(operation_name, kwargs)\r\nFile \"/var/runtime/botocore/client.py\", line 543, in _make_api_call\r\nraise error_class(parsed_response, operation_name)\r\nNoSuchKey: An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist.\r\n\r\nI have attempted to call the CopySource dict, as a string. As well as the Key location as a hardcoded string (rather than the above method as a variable). All attempts have returned the same error.\r\n\r\n*The above code is calling a key which currently exists in the gitlab-testing-tyroz-2 bucket.\r\n*When changed to something which does not exist, the same error is given. Ok, thank you. So there is no way to copy an entire S3 \"folder\" with multiple objects into a new branch using Boto3? Thank you for your quick and accurate response. Appreciate it!  The demo shows age: between 18 to 23 years but I do not see this in response that I get from boto3 This seems to be working in botocore.\r\n\r\nhttps://github.com/boto/botocore/blob/develop/.changes/1.5.9.json I saw this issue too, you have to make sure to pass \"Attributes\" as 'ALL' as shown below:\r\n\r\n**rekognition.detect_faces(Image={\"Bytes\": imagebytes},Attributes=['ALL'])**\r\n\r\nI was initially just calling it like this:\r\n\r\n**rekognition.detect_faces(Image={\"Bytes\": imagebytes})** - which didn't result in any errors but didn't return any of the attributes either.  I spent hours researching this, so I hope this helps someone else.\r\n Glad you were able to find a solution! For further api usage help I would recommend making use of one of our [community resources](https://github.com/boto/boto3#getting-help).  Can i pass cloudformation parameter file as input to Parameters ? \r\nCan i pass any conf file as reference to Parameters ?\r\nWhat is the valid format \r\nInvalid type for parameter Parameters, value: https://s3-us-west-2.amazonaws.com/test/params_airflow.json, type: <type 'str'>, valid types: <type 'list'>, <type 'tuple'>\r\n this is a bad request for help. please show your code to invoke.. or better read the docs first http://boto3.readthedocs.io/en/latest/reference/services/cloudformation.html#CloudFormation.Client.create_stack ..  There are hundreds of examples of using create_stack if you google.  Here is my code, Can i pass JSON formated parameter file as input to Parameters ? I do not see any example of this kind on google ? will this work or Do i have specify each parameter in the parameters section of create stack, what if i have 20 parameters to specify , that would not be a good way to pass parameters \r\n\r\nSTACK_NAME = 'efs-emrtemp'\r\ntemp_url = 'https://s3-us-west-2.amazonaws.com/xxx/efs-EMR-Up2.json'\r\nparams = 'https://s3-us-west-2.amazonaws.com/xxx/params_airflow.json' \r\nCFT = boto3.client('cloudformation', region_name = REGION)\r\n\r\ndef stack_func(stack = STACK_NAME, url= temp_url, pram = params):\r\n\tprint 'Creating stack'\r\n\tstack = CFT.create_stack(\r\n\tStackName = stack,\r\n        TemplateURL = url,\r\n\t**Parameters = pram,** parameters here isn't supposed to be a url to s3, but per the linked docs, a list of dictionaries.  Best practice for manipulating an S3 bucket is to connect to the endpoint that corresponds to its location constraint.\r\n\r\nI *thought* `boto3`'s S3 resource might do this automatically, but it appears to just use whatever region_name you have in your config.\r\n\r\nDoes `boto3` have some other mechanism for dealing gracefully with the 307s you get from connecting to the wrong endpoint, as in https://github.com/boto/boto/issues/621? Or is this something I should continue to work around? Okay, cool.\r\n\r\nI'm a bit confused that fetching the location constraint isn't part of the Resource/Bucket interface (unless I missed it).\r\n\r\nHere's the approach I'm currently using in [mrjob](https://github.com/Yelp/mrjob) to get Buckets with the right endpoint:\r\n\r\n```python\r\n    def get_bucket(self, bucket_name):\r\n        \"\"\"Get the bucket, connecting through the appropriate endpoint.\"\"\"\r\n        client = self.make_s3_client()\r\n\r\n        try:\r\n            region_name = _get_bucket_region(client, bucket_name)\r\n        except botocore.exceptions.ClientError as ex:\r\n            # it's possible to have access to a bucket but not access\r\n            # to its location metadata. This happens on the 'elasticmapreduce'\r\n            # bucket, for example (see #1170)\r\n            if _client_error_status(ex) != 403:\r\n                raise\r\n            log.warning('Could not infer endpoint for bucket %s; '\r\n                        'assuming defaults', bucket_name)\r\n            region_name = None\r\n\r\n        resource = self.make_s3_resource(region_name)\r\n        return resource.Bucket(bucket_name)\r\n```\r\n\r\n(This is in `mrjob/fs/s3.py`; not posting a direct link to the code because it hasn't been merged yet.)\r\n\r\nThis feels pretty roundabout; is there a more straightforward way I could accomplish this?\r\n If you update to the latest botocore and use sigv4 then you will be able to take advantage of auto redirection.  When attempting to get a cost estimate for an autoscaling group using a the fairly new r4.8xlarge instance type the  EstimateTemplateCost throws the following error.\r\n\r\nCRITICAL  Creating stack meetup-prod-services-cluster-asg-core failed. Error: An error occurred (ValidationError) when calling the EstimateTemplateCost operation: r4.8xlarge is an invalid InstanceType value. Valid values are [c1.medium, c1.xlarge, c3.2xlarge, c3.4xlarge, c3.8xlarge, c3.large, c3.xlarge, c4.2xlarge, c4.4xlarge, c4.8xlarge, c4.large, c4.xlarge, cc1.4xlarge, cc2.8xlarge, cg1.4xlarge, cr1.8xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge, d2.xlarge, g2.2xlarge, g2.8xlarge, hi1.4xlarge, hs1.8xlarge, i2.2xlarge, i2.4xlarge, i2.8xlarge, i2.xlarge, m1.large, m1.medium, m1.small, m1.xlarge, m2.2xlarge, m2.4xlarge, m2.xlarge, m3.2xlarge, m3.large, m3.medium, m3.xlarge, m4.10xlarge, m4.2xlarge, m4.4xlarge, m4.large, m4.xlarge, r3.2xlarge, r3.4xlarge, r3.8xlarge, r3.large, r3.xlarge, t1.micro, t2.large, t2.medium, t2.micro, t2.small] What region was this call made to? Is it a region that supports `r4.8xlarge`?  As of Jan 2017 the AWS Lex service is still in Preview, and hence I assume that's why it's not currently included as a Service from the Boto3 SDK.\r\n\r\nIn order to use Lex with Boto3, I created my own JSON service descriptor here:\r\n\r\n\"AWS Python SDK - Boto3 - Lex Service Descriptor JSON\"\r\nhttps://gist.github.com/davelaser/0c8b3dddffccfa2263d7b0f1bb1c2335\r\n\r\nThis should be added to your project directory like so:\r\n\r\n- /botocore/data/ (dir)\r\n-- lex/ (new dir)\r\n--- 2016-11-30/ (new dir)\r\n---- service-2.json (new file, Gist file contents above)\r\n\r\nI hope this helps someone else :)  Hello,\r\n\r\nI have googled around a lot and have been unable to find an example of how to create an security group rule that allows ingress to self the same as the default group that is created in a new VPC. Does anyone know of a code example?\r\n\r\nThanks,\r\n\r\nAndrew I tried the IpPermissions approach:\r\n\r\n```\r\n>>> security_group.owner_id\r\n'555466226936'\r\n>>> security_group.group_id\r\n'sg-e19b8589'\r\n>>> security_group.vpc_id\r\n'vpc-43d8022b'\r\n\r\n>>> perms=[\r\n...         {\r\n...             'IpProtocol': -1,\r\n...             'UserIdGroupPairs': [\r\n...                 {\r\n...                     'UserId': '555466226936',\r\n...                     'GroupId': 'sg-e19b8589',\r\n...                     'VpcId': 'vpc-43d8022b',\r\n... \r\n...                 }\r\n...             ]\r\n...         },\r\n...     ]\r\n>>> \r\n>>> security_group.authorize_ingress(IpPermissions=perms)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/local/lib/python3.5/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/local/lib/python3.5/site-packages/botocore/client.py\", line 513, in _make_api_call\r\n    api_params, operation_model, context=request_context)\r\n  File \"/usr/local/lib/python3.5/site-packages/botocore/client.py\", line 566, in _convert_to_request_dict\r\n    api_params, operation_model)\r\n  File \"/usr/local/lib/python3.5/site-packages/botocore/validate.py\", line 270, in serialize_to_request\r\n    raise ParamValidationError(report=report.generate_report())\r\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\r\nInvalid type for parameter IpPermissions[0].IpProtocol, value: -1, type: <class 'int'>, valid types: <class 'str'>\r\n``` And It cant seem to see beyond the default VPC...\r\n``` \r\n>>> security_group.owner_id\r\n'555466226936'\r\n>>> security_group.group_id\r\n'sg-e19b8589'\r\n>>> security_group.vpc_id\r\n'vpc-43d8022b'\r\n\r\n>>> security_group.authorize_ingress(SourceSecurityGroupName=\"wat\", SourceSecurityGroupOwnerId=\"vpc-43d8022b\", IpProtocol=\"tcp\", FromPort=222, ToPort=222)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/local/lib/python3.5/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/local/lib/python3.5/site-packages/botocore/client.py\", line 537, in _make_api_call\r\n    raise ClientError(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (InvalidGroup.NotFound) when calling the AuthorizeSecurityGroupIngress operation: The security group 'wat' does not exist in default VPC 'vpc-cfede3a6'\r\n>>> security_group.authorize_ingress(SourceSecurityGroupName=\"wat\", SourceSecurityGroupOwnerId=\"555466226936\", IpProtocol=\"tcp\", FromPort=222, ToPort=222)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/local/lib/python3.5/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/local/lib/python3.5/site-packages/botocore/client.py\", line 537, in _make_api_call\r\n    raise ClientError(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (InvalidGroup.NotFound) when calling the AuthorizeSecurityGroupIngress operation: The security group 'wat' does not exist in default VPC 'vpc-cfede3a6'\r\n```  Currently I poll, but would much prefer waiters for the following:\r\n\r\n- At least one EC2 instance available in ECS cluster. I can wait for the an EC2 instance running, but there's additional time until it's available in the cluster.\r\n- Service has reach steady state. I can wait for services_stable, but it's not really ready until I see 'reached a steady state' in the service's events.\r\n  Hello there,\r\n\r\nI started using boto3 to make use of Amazon's Data Migration Service, but I believe I have found a bug in `create_replication_task`.  Both the [boto3 documentation](http://boto3.readthedocs.io/en/latest/reference/services/dms.html?highlight=dms#DatabaseMigrationService.Client.create_replication_task) and the [AWS DMS documentation](http://docs.aws.amazon.com/dms/latest/APIReference/API_CreateReplicationTask.html) mention that the `TableMappings` parameter should be a URL in the `file://` schema pointing at a local file - after trying this, seeing it doesn't work (AWS responds with an invalid JSON error), and doing some extra sleuthing, I discovered that the way to get the API call to work is to provide the table mappings as a JSON blob directly to `TableMappings`.  Would it be difficult to get `create_replication_task` to work consistently with the AWS documentation?  If not, perhaps I can make the change and submit it as a PR.\r\n\r\nThanks for taking the time to create and maintain boto3! This seems to be the same issue: https://github.com/boto/botocore/issues/1121 Ahhh that makes sense - thanks for clarifying!  I have this script I have written. in the interpreter it works 1 out of 10 times. \r\n\r\nI am trying to look for instances with tags that have the Key Environment and value devbox as well as see if it has a tag key named Owner and if so return the instance ID and owner value in a list of dictionairs.\r\n\r\n```\r\n\"\"\"For auditing DitC boxes.\r\n\r\nThis should list all ditc boxes by their creator\r\n\"\"\"\r\nimport sys\r\nimport boto3\r\nimport time\r\n\r\naws_key = 'XXXXXXXXXXXXXX'\r\naws_secret = 'XXXXXXXXXXXXXXXXXXXXXXXXXX'\r\n\r\nec2 = boto3.resource('ec2', aws_access_key_id=aws_key,\r\n                     aws_secret_access_key=aws_secret\r\n                     )\r\n\r\ninstances = ec2.instances.filter(\r\n    Filters=[{'Name': 'instance-state-name', 'Values': ['running']}])\r\n\r\ninstanceList = []\r\nfor res in instances:\r\n    instanceList.append(res.id)\r\n\r\n\r\ndevboxes = []\r\nfor instanceId in instanceList:\r\n    instance = ec2.Instance(instanceId)\r\n    count = 0\r\n    maxTries = 3\r\n    sleepTimeOut = 3\r\n    while count < maxTries:\r\n        if not instance.meta.data:\r\n            result = int(maxTries - count)\r\n            print(\"INFO: boto3 known bug trying again in \" +\r\n                  str(sleepTimeOut) + \" seconds for \" +\r\n                  str(result) + \" more time(s)\")\r\n            count += 1\r\n            time.sleep(sleepTimeOut)\r\n    if count == maxTries:\r\n        print(\"ERROR: Boto3 looks nice but is buggy as F__K\")\r\n        sys.exit(1)\r\n    if \"Tags\" not in instance.meta.data.keys():\r\n        continue\r\n    metaValues = instance.meta.data['Tags']\r\n    isEnv = False\r\n    for tagSets in metaValues:\r\n        for tags in tagSets:\r\n            if (tags['Key'] == 'Environment') and (tags['Value'] == 'devbox'):\r\n                isEnv = True\r\n                break\r\n        if not isEnv:\r\n            continue\r\n        elif isEnv:\r\n            for tags in tagSets:\r\n                if tags['Key'] == 'Owner':\r\n                    owner = tags['Key'] == 'Owner'\r\n                else:\r\n                    owner = \"Unknown\"\r\n                devboxes.append({'Owner': owner,\r\n                                'Instance': instance.meta.data['InstanceId']}\r\n                                )\r\n\r\nfor box in devboxes:\r\n    for k, v in box:\r\n        print(\"Owner: \" + k + \", Instance: \" + v + \"\\n \")\r\n```\r\n\r\ncurrently i am seeing this error a lot:\r\n```\r\n File \"<input>\", line 5, in <module>\r\n    i.meta.data['Tags']\r\nTypeError: 'NoneType' object is not subscriptable\r\n```\r\n\r\nAll my instances have these tags so this is disconcerting. You can also achieve the same thing with one API call.\r\n```python\r\nimport boto3\r\n\r\n\r\ndef get_id(instance):\r\n    return instance[\"InstanceId\"]\r\n\r\n\r\ndef get_owner(instance):\r\n    for tag in instance[\"Tags\"]:\r\n        if tag[\"Key\"] == 'Owner':\r\n            return tag[\"Value\"]\r\n    return \"Unknown\"\r\n\r\n\r\ndef get_str(instance):\r\n    return \"Owner: %s, Instance: %s\" % (get_owner(instance), get_id(instance))\r\n\r\n\r\ndef main():\r\n    ec2 = boto3.client('ec2')\r\n    response = ec2.describe_instances(Filters=[\r\n        {\r\n            'Name': 'tag:Environment',\r\n            'Values': ['devbox']\r\n        }\r\n    ])\r\n    for reservation in response[\"Reservations\"]:\r\n        for instance in reservation[\"Instances\"]:\r\n            print(get_str(instance))\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n\r\n```  a presigned url is required when copy an encrypted RDS snapshot cross regions.\r\nThe parameters could be found here:\r\nhttp://docs.aws.amazon.com//AmazonRDS/latest/APIReference/API_CopyDBSnapshot.html\r\n\r\nThe DestinationRegion is not supported in \"copy_db_snapshot\" client method for generate_presigned_url. \r\n\r\nThe generated URL also doesn't work for copy_db_snapshot method. We got a 400 status.\r\n\r\nThe code I use is something like:\r\nrds = boto3.client('rds', target_region)\r\nurl=rds.generate_presigned_url('copy_db_snapshot',Params={ 'TargetDBSnapshotIdentifier' : 'test', 'KmsKeyId': 'my key', 'SourceDBSnapshotIdentifier': 'test'})\r\n\r\nresponse = rds.copy_db_snapshot(\r\n        SourceDBSnapshotIdentifier='test',\r\n        TargetDBSnapshotIdentifier='test',\r\n        KmsKeyId='my key',\r\n        PreSignedUrl=url)\r\n\r\nWe got 400 error even not specifying the presignedurl.\r\nTrace:\r\nFile \"/home/ec2-user/judi-prod-dirt/test/local/lib/python3.4/dist-packages/botocore/client.py\", line 253, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/home/ec2-user/judi-prod-dirt/test/local/lib/python3.4/dist-packages/botocore/client.py\", line 544, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (InvalidParameterValue) when calling the CopyDBSnapshot operation: PreSignedUrl could not be authenticated.\r\n\r\nThe aws CLI works on the same machine. Ran into the same issue, can you try this:\r\n```\r\nresponse = rds.copy_db_snapshot(\r\n  SourceDBSnapshotIdentifier=test,\r\n  TargetDBSnapshotIdentifier=test,\r\n  KmsKeyId='my key',\r\n  SourceRegion=SOURCE_REGION)\r\n``` I tried both with \"Source Region\" and without \"Source Region\", but still no luck.\r\ngot same error message: PreSignedUrl could not be authenticated @kyleknap I removed `presignedURL `and added `SourceRegion`, but I still got the same 400 error code.\r\nThen I figured that the stacktrace is complaining about my `Tags`. The method works fine if I remove my `Tags`.\r\n\r\nI don't think my `Tags` is wrong though since it worked fine before I encrypted my db snapshots.\r\n`Tags=[{'Key': 'xxx', 'Value': 'yyy'}, {'Key': 'aaa', 'Value': 'bbb'}, {'Key': 'qqq', 'Value': 'www'}])`\r\n\r\nAny idea? Just for my sanity - is this method in the documentation anywhere?  I've been fighting with boto's copy_db_snapshot for about a week only to discover that the PreSignedUrl isn't even necessary. You are correct , the presigned URL isnt necessary. SourceURL does the trick @hongchaowang Could you provide some debug logs that demonstrate the issue? It's odd that it would be working on the cli since both that and boto3 share the same common core to do all the heavy lifting. Closing due to inactivity. Please reopen the issue if you are able to provide debug logs.  We were trying to setup a boto3 environment from the master branch (https://github.com/boto/boto3/tree/master). We are following the instructions mentioned in the README.rst file:\r\n\r\n$ git clone https://github.com/boto/boto3.git\r\n$ cd boto3\r\n$ virtualenv venv\r\n...\r\n$ . venv/bin/activate\r\n$ pip install -r requirements.txt\r\n$ pip install -e .\r\n\r\nBut we observe that on executing - pip install -r requirement.txt - the setup fails with the following exception:\r\n---\r\nValueError: (\"Expected ',' or end-of-list in\", \"unittest2==0.5.1; python_version == '2.6'\", 'at', \"; python_version == '2.6'\")\r\n---\r\n\r\nComplete trace:\r\n---\r\n(venv)c02q1197g8wn:boto3 ramkumar$ pip install -r requirements.txt\r\nException:\r\nTraceback (most recent call last):\r\n  File \"/Users/ramkumar/new_boto3/boto3/venv/lib/python2.7/site-packages/pip/basecommand.py\", line 122, in main\r\n    status = self.run(options, args)\r\n  File \"/Users/ramkumar/new_boto3/boto3/venv/lib/python2.7/site-packages/pip/commands/install.py\", line 262, in run\r\n    for req in parse_requirements(filename, finder=finder, options=options, session=session):\r\n  File \"/Users/ramkumar/new_boto3/boto3/venv/lib/python2.7/site-packages/pip/req.py\", line 1631, in parse_requirements\r\n    req = InstallRequirement.from_line(line, comes_from, prereleases=getattr(options, \"pre\", None))\r\n  File \"/Users/ramkumar/new_boto3/boto3/venv/lib/python2.7/site-packages/pip/req.py\", line 172, in from_line\r\n    return cls(req, comes_from, url=url, prereleases=prereleases)\r\n  File \"/Users/ramkumar/new_boto3/boto3/venv/lib/python2.7/site-packages/pip/req.py\", line 70, in __init__\r\n    req = pkg_resources.Requirement.parse(req)\r\n  File \"/Users/ramkumar/new_boto3/boto3/venv/lib/python2.7/site-packages/pip/_vendor/pkg_resources.py\", line 2667, in parse\r\n    reqs = list(parse_requirements(s))\r\n  File \"/Users/ramkumar/new_boto3/boto3/venv/lib/python2.7/site-packages/pip/_vendor/pkg_resources.py\", line 2605, in parse_requirements\r\n    line, p, specs = scan_list(VERSION,LINE_END,line,p,(1,2),\"version spec\")\r\n  File \"/Users/ramkumar/new_boto3/boto3/venv/lib/python2.7/site-packages/pip/_vendor/pkg_resources.py\", line 2583, in scan_list\r\n    \"Expected ',' or end-of-list in\",line,\"at\",line[p:]\r\nValueError: (\"Expected ',' or end-of-list in\", \"unittest2==0.5.1; python_version == '2.6'\", 'at', \"; python_version == '2.6'\")\r\n\r\nStoring debug log for failure in /Users/ramkumar/.pip/pip.log\r\n---\r\n Thanks for your response. The issue is fixed now.   @jamesls @danielgtaylor @kyleknap @JordonPhillips \r\nThis is my sample code from the aws website.\r\n```\r\nfrom __future__ import print_function # Python 2/3 compatibility\r\nimport boto3\r\n\r\ndynamodb = boto3.resource('dynamodb', region_name='us-west-2',endpoint_url='http://localhost:8000')\r\n\r\n\r\ntable = dynamodb.create_table(\r\n    TableName='Movies',\r\n    KeySchema=[\r\n        {\r\n            'AttributeName': 'year',\r\n            'KeyType': 'HASH'  #Partition key\r\n        },\r\n        {\r\n            'AttributeName': 'title',\r\n            'KeyType': 'RANGE'  #Sort key\r\n        }\r\n    ],\r\n    AttributeDefinitions=[\r\n        {\r\n            'AttributeName': 'year',\r\n            'AttributeType': 'N'\r\n        },\r\n        {\r\n            'AttributeName': 'title',\r\n            'AttributeType': 'S'\r\n        },\r\n\r\n    ],\r\n    ProvisionedThroughput={\r\n        'ReadCapacityUnits': 10,\r\n        'WriteCapacityUnits': 10\r\n    }\r\n)\r\n\r\nprint(\"Table status:\", table.table_status)\r\n```\r\nI've started DynamoDB with the following command\r\n```\r\njava -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb\r\n```\r\nand it shows the output \r\n```\r\nInitializing DynamoDB Local with the following configuration:\r\nPort:\t8000\r\nInMemory:\tfalse\r\nDbPath:\tnull\r\nSharedDb:\ttrue\r\nshouldDelayTransientStatuses:\tfalse\r\nCorsParams:\t*\r\n```\r\n\r\nBut it repeatedly shows the following 503 error \r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 32, in <module>\r\n    'WriteCapacityUnits': 10\r\n  File \"/home/janga/anaconda2/lib/python2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/home/janga/anaconda2/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/home/janga/.local/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/home/janga/.local/lib/python2.7/site-packages/botocore/client.py\", line 537, in _make_api_call\r\n    raise ClientError(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (503) when calling the CreateTable operation (reached max retries: 9): <HTML><TITLE>503 Service Unavailable</TITLE>\r\n<H1>503 Service Unavailable</H1>\r\nFailed to connect to server <B>localhost</B></HTML>\r\n```\r\nWould really appreciate help on this problem. What am i missing? \r\nI use internet in my university behind a proxy server? Could that be the issue? @kyleknap Turns out the issue was indeed  myproxy settings. I set a exception in my environment file for `localhost`, and it turned out fine. Thanks for the help anyway.  What is the recommended way to get the URL for an API Gateway deployment? Is there an API call I missed in the docs?\r\n\r\nPage http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-call-api.html does describe how the URL is generated.\r\n\r\nThanks I'm getting this error message at AWS forums ...\r\nhttps://aws.amazon.com/premiumsupport/knowledge-center/error-forum-post/ Thank you. I posted https://forums.aws.amazon.com/thread.jspa?threadID=247394 Could this be exposed in ```boto3``` (before it is available with the AWS API)? Thanks I'm suprised the api gateway console UX doesn't allow you to copy and paste the complete url somehow .  I am trying to use boto3 to create a new DNS record, however I seem to be getting back a pretty ambiguous error back. I have played around with some of the parameters from:\r\n\r\n[url]https://boto3.readthedocs.io/en/develop/reference/services/route53.html#Route53.Client.change_resource_record_sets[/url]\r\n\r\nI have searched for examples of this but have not been able to find any.\r\n\r\n```\r\n    [12/01/2017 09:57:12] [INFO]: get_zone_data found zone [{u'ResourceRecordSetCount': 11, u'CallerReference': \r\n    '6A78SD-88E9-11F7-B1C6-A8S7DAS8D7',\r\n     u'Config': {u'PrivateZone': False}, u'Id': '/hostedzone/ASD678ASD78', u'Name': 'test.mydomain.com.'}]\r\n    Traceback (most recent call last):\r\n      File \"example.py\", line 6, in <module>\r\n        dns.add(name='hurried.me')\r\n      File \"scale/scale/net/dns.py\", line 99, in add\r\nclient.change_resource_record_sets(**params)\r\n      File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n        return self._make_api_call(operation_name, kwargs)\r\n      File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 537, in _make_api_call\r\n        raise ClientError(parsed_response, operation_name)\r\n    botocore.exceptions.ClientError: An error occurred (InvalidInput) when calling the ChangeResourceRecordSets operation: Invalid request\r\n```\r\n\r\nMy code:\r\n```\r\n    def add(self, name=None,\r\n            type='A',\r\n            location='172.32.0.1',\r\n            weight=10,\r\n            ttl=10,\r\n            private=False,\r\n            ):\r\n\r\n    zone = self.get_zone_data(name, private)\r\n                        #'Weight': weight,\r\n\r\n    params = {\r\n        'HostedZoneId': 'C0P6YPA54A',\r\n        'ChangeBatch': {\r\n            'Changes': [{\r\n                'Action': 'CREATE',\r\n                    'ResourceRecordSet': {\r\n                        'Name': 'test.mydomain.com',\r\n                        'Type': 'A',\r\n                        'TTL': 300,\r\n                    }\r\n                },]\r\n        }\r\n    }\r\n\r\n    client = self.session.client('route53')\r\n    client.change_resource_record_sets(**params)\r\n``` I've posted to stackoverflow but not had a response, the ticket is over a week old unfortunately. For some reason I am unable to post to the developers forum despite having a login. Are there any examples of creating an A record out in the wild using boto3 that I could try? Cheers, that seems to have got it \ud83d\udc4d   Hello.\r\nI'm using the latest boto3 library\r\n boto3-1.4.3 botocore-1.4.93\r\n\r\nAnd I have a some problem with dynamoDB and pagination.\r\n1. In the [documentation|http://boto3.readthedocs.io/en/latest/reference/services/dynamodb.html#DynamoDB.Paginator.Scan] there is an example of response that paginate method responds. But it is not the same as I receive when I call this method.\r\nHere is what I get:\r\n`{u'Count': 2, u'Items': [...], u'LastEvaluatedKey': {u'fieldname': {u'S': u'uuid'}}, u'ScannedCount': 2, 'ResponseMetadata': {'RetryAttempts': 0, 'HTTPStatusCode': 200, 'RequestId': 'I7IGFTA5CJVIQ4N42I1VCQECUBVV4KQNSO5AEMVJF66Q9ASUAAJG', 'HTTPHeaders': {'x-amzn-requestid': 'I7IGFTA5CJVIQ4N42I1VCQECUBVV4KQNSO5AEMVJF66Q9ASUAAJG', 'content-length': '1021', 'server': 'Server', 'connection': 'keep-alive', 'x-amz-crc32': '3131922731', 'date': 'Sat, 14 Jan 2017 03:43:08 GMT', 'content-type': 'application/x-amz-json-1.0'}}}`\r\nThere is no at least \"NextToken\" field which I'm going to use for resuming the scan if it is failed.\r\n\r\n2. When I'm trying to use paginate method with \"StartingToken\" parameters - it is not possible to use it. Because it fails with type check error:\r\nCode:\r\n`page_iterator = paginator.paginate(TableName=args.table, PaginationConfig={\r\n    'MaxItems': args.limit,\r\n    'PageSize': args.batch_limit,\r\n    'StartingToken': '{\"fieldname\": {\"S\": \"value\"}}'\r\n})`\r\n- In that case it fails with error:\r\n`Traceback (most recent call last):\r\n  File \"./dynamodb-table-scan-and-import-to-lambda.py\", line 88, in <module>\r\n    for response in page_iterator:\r\n  File \"/Library/Python/2.7/site-packages/botocore/paginate.py\", line 102, in __iter__\r\n    response = self._make_request(current_kwargs)\r\n  File \"/Library/Python/2.7/site-packages/botocore/paginate.py\", line 174, in _make_request\r\n    return self._method(**current_kwargs)\r\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 513, in _make_api_call\r\n    api_params, operation_model, context=request_context)\r\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 566, in _convert_to_request_dict\r\n    api_params, operation_model)\r\n  File \"/Library/Python/2.7/site-packages/botocore/validate.py\", line 270, in serialize_to_request\r\n    raise ParamValidationError(report=report.generate_report())\r\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\r\nInvalid type for parameter ExclusiveStartKey, value: {u'assetId': {u'S': u'9bt0cmqcoro9uad2'}}, type: <type 'str'>, valid types: <type 'dict'>`\r\nBut in documentation this parameter should be a string.\r\n- in case when I convert that value to dict, I have the next error:\r\n`Traceback (most recent call last):\r\n  File \"./dynamodb-table-scan-and-import-to-lambda.py\", line 88, in <module>\r\n    for response in page_iterator:\r\n  File \"/Library/Python/2.7/site-packages/botocore/paginate.py\", line 100, in __iter__\r\n    self._inject_starting_params(current_kwargs)\r\n  File \"/Library/Python/2.7/site-packages/botocore/paginate.py\", line 194, in _inject_starting_params\r\n    next_token = self._parse_starting_token()[0]\r\n  File \"/Library/Python/2.7/site-packages/botocore/paginate.py\", line 348, in _parse_starting_token\r\n    next_token, index = self._parse_starting_token_deprecated()\r\n  File \"/Library/Python/2.7/site-packages/botocore/paginate.py\", line 361, in _parse_starting_token_deprecated\r\n    parts = self._starting_token.split('___')\r\nAttributeError: 'dict' object has no attribute 'split'`\r\nIt looks like in this part it needs string.\r\n\r\nCould you please check what is wrong there, maybe I'm doing something wrong (but I'm following the documentation).\r\nThank you. That is make sense.\r\nI misunderstood the NextToken's value.\r\n\r\n Thank you.  I may be misreading something, but the documentation seems to have methods that don't actually exist in the client for cloudformation.\r\n\r\nIn http://boto3.readthedocs.io/en/latest/reference/services/cloudformation.html#CloudFormation.Client.list_exports there are methods such as list_exports and list_imports described, but when I look in the client they are nowhere to be found.\r\n\r\nVersion\r\n```\r\n$pip show boto3\r\nName: boto3\r\nVersion: 1.4.3\r\nSummary: The AWS SDK for Python\r\nHome-page: https://github.com/boto/boto3\r\nAuthor: Amazon Web Services\r\nAuthor-email: UNKNOWN\r\nLicense: Apache License 2.0\r\nLocation: /usr/local/lib/python2.7/site-packages\r\nRequires: botocore, s3transfer, jmespath\r\n```\r\n\r\nExample Python Call\r\n```\r\n>>> import boto3\r\n>>> client = boto3.client('cloudformation')\r\n>>> response = client.list_exports()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'CloudFormation' object has no attribute 'list_exports'\r\n>>> dir(client)\r\n['_PY_TO_OP_NAME', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_cache', '_client_config', '_convert_to_request_dict', '_endpoint', '_force_path_style_s3_addressing', '_force_virtual_style_s3_addressing', '_get_waiter_config', '_loader', '_make_api_call', '_register_handlers', '_register_s3_specific_handlers', '_request_signer', '_response_parser', '_serializer', '_service_model', 'can_paginate', u'cancel_update_stack', u'continue_update_rollback', u'create_change_set', u'create_stack', u'delete_change_set', u'delete_stack', u'describe_account_limits', u'describe_change_set', u'describe_stack_events', u'describe_stack_resource', u'describe_stack_resources', u'describe_stacks', u'estimate_template_cost', u'execute_change_set', 'generate_presigned_url', 'get_paginator', u'get_stack_policy', u'get_template', u'get_template_summary', 'get_waiter', u'list_change_sets', u'list_stack_resources', u'list_stacks', 'meta', u'set_stack_policy', u'signal_resource', u'update_stack', u'validate_template', 'waiter_names']\r\n``` I tested with boto3 1.4.3 and had no problem:\r\n\r\n```\r\n>>> import boto3\r\n>>> boto3.__version__\r\n'1.4.3'\r\n>>> client = boto3.client('cloudformation')\r\n>>> client.list_exports()\r\n{u'Exports': [], 'ResponseMetadata': {'RetryAttempts': 0, ...\r\n```\r\n\r\nOne possibility is that the pip's Python and the shell's Python are different, so the Python shell's boto3 is not up-to-date.\r\n\r\nIf you run\r\n```\r\n>>> import boto3\r\n>>> boto3.__version__\r\n```\r\nwhat does it return? Guessing from  the output of `dir(client)`, your boto3 is missing following methods:\r\n- list_imports\r\n- list_exports I think it was botocore.  I uninstalled boto3 and botocore, then reinstalled them and the methods are there now.  Thanks for the help!  According to the documentation `SnapshotCreateTime` is returned in the response body for both `create_db_snapshot` and `describe_db_snapshots` however this is not the case. A similar key `InstanceCreateTime` can be used in its place so this may just be a documentation issue.\r\n\r\nExample Code that fails due to Key error:\r\n\r\n```python\r\nimport boto3\r\n\r\nclient = boto3.client('rds')\r\nsnapshots = client.describe_db_snapshots(DBInstanceIdentifier='example-db-instance',\r\n                                         SnapshotType='manual',\r\n                                         MaxRecords=50)['DBSnapshots']\r\nfor item in snapshots:\r\n    print(item['SnapshotCreateTime'])\r\n```\r\n\r\n Thanks for the response, that ended up being the issue. If the snapshot status is not available it will not be present.  Copying encrypted RDS snapshots between different regions requires additional parameters in the PreSignedUrl. However, the boto3 implementation of generate_presigned_url for the RDS client does not support all of them, including **DestinationRegion**.\r\n\r\n```\r\nPreSignedUrl1=destination_client.generate_presigned_url('copy_db_snapshot', Params={'KmsKeyId':'mykeyid','SourceDBSnapshotIdentifier':'arn:aws:rds:us-west-2:<Account>:snapshot:rds:dbname-2017-01-12-11-40','TargetDBSnapshotIdentifier':'my-test','DestinationRegion':'us-east-1'}, ExpiresIn=1000)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/signers.py\", line 504, in generate_presigned_url\r\n    params, operation_model)\r\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/validate.py\", line 270, in serialize_to_request\r\n    raise ParamValidationError(report=report.generate_report())\r\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\r\nUnknown parameter in input: \"DestinationRegion\", must be one of: SourceDBSnapshotIdentifier, TargetDBSnapshotIdentifier, KmsKeyId, Tags, CopyTags, PreSignedUrl, SourceRegion\r\n```\r\n\r\nThis is the AWS CLI tools copy command:\r\n\r\n```aws --region us-east-1 rds copy-db-snapshot --source-db-snapshot-identifier 'arn:aws:rds:us-west-2:<Account>:snapshot:rds:dbname-2017-01-12-11-40' --target-db-snapshot-identifier 'my-test' --source-region us-west-2 --kms-key-id 'mykeyid'```\r\n\r\n\r\nBoto3 documentation includes this requirement as shown in [http://boto3.readthedocs.io/en/latest/reference/services/rds.html#RDS.Client.copy_db_snapshot].\r\n\r\nRunning:\r\n\r\nPython 2.7.12 (default, Nov 19 2016, 06:48:10)\r\n[GCC 5.4.0 20160609] on linux2\r\n\r\nboto3 (1.4.3)\r\nbotocore (1.4.93)\r\n\r\n I am also facing the same error.\r\n\r\n\"errorType\": \"ParamValidationError\",\r\n  \"errorMessage\": \"Parameter validation failed:\\nUnknown parameter in input: \\\"SourceRegion\\\", must be one of: SourceDBSnapshotIdentifier, TargetDBSnapshotIdentifier, KmsKeyId, Tags, CopyTags\" Botocore version 1.4.81\r\nI tried the simple call from lambda @kyleknap That worked. Thank you.  Upgrade from boto3 1.4.2 and botocore 1.4.83 to 1.4.4 and 1.5.86 worked for me as well. I was getting the same error earlier.\r\n\r\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\r\nUnknown parameter in input: \"SourceRegion\", must be one of: SourceDBSnapshotIdentifier, TargetDBSnapshotIdentifier, KmsKeyId, Tags, CopyTags\r\n\r\nThanks! Hi,\r\n\r\nThis issue was related to DestinationRegion parameter but @mohankodali and @kmart1234  verified that SourceRegion works. \r\nDestinationRegion still does not work with generate_presigned_url method.\r\n\r\n```\r\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\r\nUnknown parameter in input: \"DestinationRegion\", must be one of: DBInstanceIdentifier, SourceDBInstanceIdentifier, DBInstanceClass, AvailabilityZone, Port, AutoMinorVersionUpgrade, Iops, OptionGroupName, PubliclyAccessible, Tags, DBSubnetGroupName, StorageType, CopyTagsToSnapshot, MonitoringInterval, MonitoringRoleArn, KmsKeyId, PreSignedUrl, EnableIAMDatabaseAuthentication, SourceRegion\r\n``` \r\n\r\nboto3 (1.4.7)\r\nbotocore (1.7.10)\r\n\r\nThis is needed to set up read replicas in different regions.\r\n[link](http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstanceReadReplica.html)\r\n\r\nThanks!  Currently all the boto3 documentation show date element as datetime() object.e.g.  \r\n```\r\n{\r\n    'Contents': [\r\n        {\r\n            'Key': 'string',\r\n            'LastModified': datetime(2015, 1, 1),\r\n            'ETag': 'string',\r\n  .....\r\n}\r\n```\r\nThere is little documentation mentioned how to deal with the datetime object when using jmespath query.  Some mistake can be solved by common-sense or good documentation. \r\n\r\nAs shown here. \r\nThis user use a formatted datetime string\r\n[get specific date using jmes ](https://stackoverflow.com/questions/40233322/aws-rds-how-to-get-latest-snapshot-with-boto3-and-jmespath)\r\n\r\nThis user wrongly use single quote , which the datetime() object should be encase in backquote.\r\n[search can't compare datetime](http://stackoverflow.com/questions/41584793/aws-boto3-page-iterator-search-cant-compare-datetime-datetime-to-str) @commutecat  ,  i ma using the backquotes . still not working . \r\n```\r\nfiltered_iterator = page_iterator.search(\"Contents[?LastModified>=`datetime.datetime(2017, 7, 5, 13, 41, 27, tzinfo=tzutc())`].Key\")\r\n```\r\nWhat will be the solution for it .please let me know . thanks   I've added a cname of\r\n\r\n    cname = \"*.stg.mydomain.co.\"\r\n\r\nWithin the UI, it shows the cname exactly as above however, when I retrieve the same name, it returns the following json.\r\n\r\n    {\r\n        u'AliasTarget': {\r\n            u'HostedZoneId': 'Z332...',\r\n            u'EvaluateTargetHealth': False,\r\n            u'DNSName': 'itgets.mydomain.co.'\r\n        },\r\n        u'Type': 'CNAME',\r\n        u'Name': '\\\\052.stg.mydomain.co.'\r\n    }\r\n\r\nThe cname with the asterisk does work as expected but I'm unsure why the json displayed from boto converts the asterisk to hexadecimal. Is this an issue or an artifact or is it coming directly form AWS ?\r\n\r\nThank you, try setting `boto3.set_stream_logger('')` before the call that results in this so we can see what is coming directly from the service. Im getting the following. It looks like amazon is returning `\\052` instead of `*`\r\n\r\n```\r\n<ResourceRecordSet>\r\n    <Name>\\052.stg.mydomain.co.</Name>\r\n    <Type>CNAME</Type>\r\n    <AliasTarget>\r\n        <HostedZoneId>Z332...</HostedZoneId>\r\n        <DNSName>itgets.mydomain.co.</DNSName>\r\n        <EvaluateTargetHealth>false</EvaluateTargetHealth>\r\n    </AliasTarget>\r\n</ResourceRecordSet>\r\n```\r\n @stealthycoin do you think this is coming incorrectly from amazon or if there should be a change in this library?\r\n\r\nThanks! Yes that is coming straight from the service. Which command exactly are you using to get this response?  ```python\r\n>>> response = client.list_resource_record_sets(HostedZoneId=zone_id, StartRecordType='CNAME')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 537, in _make_api_call\r\n    raise ClientError(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (InvalidInput) when calling the ListResourceRecordSets operation:\r\n```\r\n\r\nWhen I take out flag ```StartRecordType='CNAME'``` all is well.  However that is much to verbose for my needs. You are specifying a StartRecordType without specifying a StartRecordName, see the [documentation](https://boto3.readthedocs.io/en/latest/reference/services/route53.html#Route53.Client.list_resource_record_sets) for more details.\r\n  When using the `s3v4-query` signature method, all object uploads fail with `BadDigest` errors:\r\n\r\n```\r\n>>> s3=boto3.resource('s3', config=botocore.config.Config(signature_version='s3v4-query'))\r\n>>> s3.Bucket(bucket_name).upload_fileobj(Key=object_name, Fileobj=StringIO(data))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/tburke/.virtualenvs/Python27/lib/python2.7/site-packages/boto3/s3/inject.py\", line 469, in bucket_upload_fileobj\r\n    Callback=Callback, Config=Config)\r\n  File \"/Users/tburke/.virtualenvs/Python27/lib/python2.7/site-packages/boto3/s3/inject.py\", line 427, in upload_fileobj\r\n    return future.result()\r\n  File \"/Users/tburke/.virtualenvs/Python27/lib/python2.7/site-packages/s3transfer/futures.py\", line 73, in result\r\n    return self._coordinator.result()\r\n  File \"/Users/tburke/.virtualenvs/Python27/lib/python2.7/site-packages/s3transfer/futures.py\", line 233, in result\r\n    raise self._exception\r\nbotocore.exceptions.ClientError: An error occurred (BadDigest) when calling the PutObject operation (reached max retries: 4): The Content-MD5 you specified did not match what we received.\r\n>>> client=boto3.client('s3', config=botocore.config.Config(signature_version='s3v4-query'))\r\n>>> client.put_object(Bucket=bucket_name, Key=object_name, Body=data)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/tburke/.virtualenvs/Python27/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/Users/tburke/.virtualenvs/Python27/lib/python2.7/site-packages/botocore/client.py\", line 537, in _make_api_call\r\n    raise ClientError(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (BadDigest) when calling the PutObject operation (reached max retries: 4): The Content-MD5 you specified did not match what we received.\r\n```\r\n\r\nWhile the same operation with other signature methods succeeds:\r\n\r\n```\r\n>>> for signature_version in ('s3', 's3-query', 's3v4'):\r\n...     s3=boto3.resource('s3', config=botocore.config.Config(signature_version=signature_version))\r\n...     s3.Bucket(bucket_name).upload_fileobj(Key=object_name, Fileobj=StringIO(data))\r\n...\r\n>>> for signature_version in ('s3', 's3-query', 's3v4'):\r\n...     s3=boto3.client('s3', config=botocore.config.Config(signature_version=signature_version))\r\n...     s3.put_object(Bucket=bucket_name, Key=object_name, Body=data)\r\n...\r\n{u'ETag': '\"60b725f10c9c85c70d97880dfe8191b3\"',\r\n 'ResponseMetadata': {'HTTPHeaders': {'content-length': '0',\r\n                                      'date': 'Thu, 05 Jan 2017 01:58:40 GMT',\r\n                                      'etag': '\"60b725f10c9c85c70d97880dfe8191b3\"',\r\n                                      'server': 'AmazonS3',\r\n                                      'x-amz-id-2': 'WGKplA2h3pR6cRMq1nz1SZwcv8FffRE3Z/+MndM+zhK1SYD3LeAuR0iBwEso4Z3jVtmqtFxG3fw=',\r\n                                      'x-amz-request-id': '35C24B2C7029752F'},\r\n                      'HTTPStatusCode': 200,\r\n                      'HostId': 'WGKplA2h3pR6cRMq1nz1SZwcv8FffRE3Z/+MndM+zhK1SYD3LeAuR0iBwEso4Z3jVtmqtFxG3fw=',\r\n                      'RequestId': '35C24B2C7029752F',\r\n                      'RetryAttempts': 0}}\r\n{u'ETag': '\"60b725f10c9c85c70d97880dfe8191b3\"',\r\n 'ResponseMetadata': {'HTTPHeaders': {'content-length': '0',\r\n                                      'date': 'Thu, 05 Jan 2017 01:58:40 GMT',\r\n                                      'etag': '\"60b725f10c9c85c70d97880dfe8191b3\"',\r\n                                      'server': 'AmazonS3',\r\n                                      'x-amz-id-2': 'Xg+wK2dRwfN5+tURHx1FNoxyUzZO98tqDVYuZWGA89Db+BZs72na8lKOkkArmwwg2//G7Ezrl58=',\r\n                                      'x-amz-request-id': 'C9A0DF97ACBF5F21'},\r\n                      'HTTPStatusCode': 200,\r\n                      'HostId': 'Xg+wK2dRwfN5+tURHx1FNoxyUzZO98tqDVYuZWGA89Db+BZs72na8lKOkkArmwwg2//G7Ezrl58=',\r\n                      'RequestId': 'C9A0DF97ACBF5F21',\r\n                      'RetryAttempts': 0}}\r\n{u'ETag': '\"60b725f10c9c85c70d97880dfe8191b3\"',\r\n 'ResponseMetadata': {'HTTPHeaders': {'content-length': '0',\r\n                                      'date': 'Thu, 05 Jan 2017 01:58:41 GMT',\r\n                                      'etag': '\"60b725f10c9c85c70d97880dfe8191b3\"',\r\n                                      'server': 'AmazonS3',\r\n                                      'x-amz-id-2': 'Z3krU1xPLbOuatUsGSo0nS2WOH5DF2uZ+mWcRJjy/1F1sDvleQekONSmPY2ojCV2W9NGZZvHEA0=',\r\n                                      'x-amz-request-id': 'E12C8B00C3660E50'},\r\n                      'HTTPStatusCode': 200,\r\n                      'HostId': 'Z3krU1xPLbOuatUsGSo0nS2WOH5DF2uZ+mWcRJjy/1F1sDvleQekONSmPY2ojCV2W9NGZZvHEA0=',\r\n                      'RequestId': 'E12C8B00C3660E50',\r\n                      'RetryAttempts': 0}}\r\n```\r\n\r\n`tcpdump` seems to indicate that we're sending the correct Content-MD5, but a Content-Length of zero?  Using Python Python 2.7.10\r\n\r\n```\r\n>>> boto3.__version__\r\n'1.4.2'\r\n```\r\n\r\n```python\r\nfor src_k in list(src_buck.objects.filter(Prefix=self.s3_src_key_dir)):\r\n    copy_src = { \r\n        'Bucket': self.src_bucket,\r\n        'Key'   : src_k.key,\r\n        'SSECustomerAlgorithm' : 'AES256',\r\n    } \r\n    dest_k = dest_prefix + \"/\" + copy_src['Key']\r\n    print(\"Copying from bucket {0} key {1} to bucket {2} key {3}\".format(\r\n        copy_src['Bucket'], copy_src['Key'], self.dest_bucket, dest_k))\r\n    dest_buck.copy(copy_src, dest_k)\r\n```\r\n```\r\nFile \"test.py\", line 92, in copy\r\n    dest_buck.copy(copy_src, dest_k)\r\n  File \"/.../lib/python2.7/site-packages/boto3/s3/inject.py\", line 318, in bucket_copy\r\n    Callback=Callback, SourceClient=SourceClient, Config=Config)\r\n  File \"/.../lib/python2.7/site-packages/boto3/s3/inject.py\", line 266, in copy\r\n    return future.result()\r\n  File \"/.../lib/python2.7/site-packages/s3transfer/futures.py\", line 71, in result\r\n    return self._coordinator.result()\r\n  File \"/.../lib/python2.7/site-packages/s3transfer/futures.py\", line 231, in result\r\n    raise self._exception\r\nbotocore.exceptions.ClientError: An error occurred (400) when calling the HeadObject operation: Bad Request\r\n```  when calling create_vpn_connection_route(\r\n            VpnConnectionId=myID,\r\n            DestinationCidrBlock=remote_net\r\n        )\r\nthere is a mismatch between the validation and the API.\r\nIf I set it to **D**estinationCidrBlock, then I get:\r\nClientError: An error occurred (MissingParameter) when calling the CreateVpnConnectionRoute operation: The request must contain the parameter **d**estinationCidrBlock\r\n\r\nIf I set it to **d**estinationCidrBlock, then I get:\r\nParamValidationError: Parameter validation failed:\r\nUnknown parameter in input: \"destinationCidrBlock\", must be one of: VpnConnectionId, **D**estinationCidrBlock\r\n\r\nSeems to be a bug between validation and API.\r\n\r\nfrustrating as there is not workaround...can you please fix it? Using Lambda in eu-central-1  The pre-signed url is not working with md5 hash.\r\nNormally when put\r\n```python\r\nparams = {'Bucket': bucket_name, 'Key': key}\r\nurl = s3_client.generate_presigned_url('put_object',\r\n                                               Params=params,\r\n                                               ExpiresIn=3600)\r\n```\r\nit works. \r\n\r\nBut when put any other put_object parameter like ```ACL``` ```md5``` etc it throws\r\n```python\r\nparams = {'Bucket': bucket_name, 'Key': key, \r\n                  'ACL': 'public-read', 'ContentMD5': '1cx12....'}\r\nurl = s3_client.generate_presigned_url('put_object',\r\n                                               Params=params,\r\n                                               ExpiresIn=3600)\r\n```\r\n\r\n```\r\nError><Code>SignatureDoesNotMatch</Code><Message>\r\nThe request signature we calculated does not match the \r\nsignature you provided. Check your key and signing method\r\n```\r\n\r\nIf trying put header like ```Content-MD5``` in put request it throws ```Headers not signed```.\r\nMy S3 client is like\r\n```python\r\ns3 = boto3.client('s3',\r\n                      region_name=app.config['AWS_REGION'],\r\n                      aws_access_key_id=app.config['AWS_ACCESS_KEY_ID'],\r\n                      config=Config(signature_version='s3v4'),\r\n                      aws_secret_access_key=app.config['AWS_SECRET_ACCESS_KEY']\r\n                      )\r\n```\r\nI am using ```boto3==1.4.1``` Hi thanks for your reply. Today i was trying with ```generate_presigned_post```\r\n```python\r\ns3_client = boto3.client('s3',\r\n                      region_name=app.config['AWS_REGION'],\r\n                      aws_access_key_id=app.config['AWS_ACCESS_KEY_ID'],\r\n                      config=Config(signature_version='s3v4'),\r\n                      aws_secret_access_key=app.config['AWS_SECRET_ACCESS_KEY']\r\n                      )\r\np = s3_client.generate_presigned_post(Bucket=bucket_name,\r\n                                              Key=key,\r\n                                              Fields={\r\n                                                'acl': 'public-read'\r\n                                                }\r\n                                          )\r\n\r\nurl = p['url']\r\ndata = p['fields']\r\nfiles = {'path': \"YOYO\"}\r\nresponse = requests.post(url, json=data, data=open(file))\r\n```\r\nI am getting 412 response\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Error>\r\n<Code>PreconditionFailed</Code>\r\n<Message>At least one of the pre-conditions you specified did not hold</Message>\r\n<Condition>Bucket POST must be of the enclosure-type multipart/form-data</Condition>\r\n<RequestId>E5D751C1E8E3A187</RequestId>\r\n<HostId>LWL4KO3n7Xotvef4x+1bvAk6XeHWa0sSMWluHkUP1zyNPBbFyzFnCIWANmSshuYnlkbDL+AXir4=</HostId>\r\n</Error>\r\n```\r\n\r\nWhen i was doing, what is written in boto3 doc\r\n```python\r\np = s3_client.generate_presigned_post(Bucket=bucket_name,\r\n                                              Key=key,\r\n                                              Fields={\r\n                                                'acl': 'public-read'\r\n                                                }\r\n                                          )\r\nurl = p['url']\r\ndata = p['fields']\r\nfiles = {local_path: \"YOYO\"}\r\nresponse = requests.post(url, data=data, files=files)\r\n```\r\nI am getting 400\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Error>\r\n<Code>InvalidArgument</Code>\r\n<Message>POST requires exactly one file upload per request.</Message>\r\n<ArgumentName>file</ArgumentName>\r\n<ArgumentValue>0</ArgumentValue>\r\n<RequestId>4122DAA6E127CC6E</RequestId>\r\n<HostId>SRRp+j+298weagOqsfIEAzMpVoNKKh4u5tPJmf5DAa9WeDak3bs8Ne+Nq1NMX8hkOyLENFxrSVU=</HostId>\r\n</Error>\r\n```\r\n @JordonPhillips thanks a lot, it is working. I am posting the working example for future reference.\r\n\r\n```python\r\nimport boto3\r\nimport requests\r\n\r\nparts = s3_client.generate_presigned_post(Bucket=bucket_name,\r\n                                              Key=key,\r\n                                              Fields={\r\n                                                'acl': 'public-read',\r\n                                                'Content-MD5': str(md5),\r\n                                                'Content-Type': 'binary/octet-stream'\r\n                                                },\r\n                                              Conditions=[\r\n                                                  {\"acl\": \"public-read\"},\r\n                                                  [\"starts-with\", \"$Content-Type\", \"\"],\r\n                                                  [\"starts-with\", \"$Content-MD5\", \"\"]\r\n                                              ]\r\n                                          )\r\n\r\nurl = parts['url']\r\ndata = parts['fields']\r\nfiles = {'file': open(local_path, 'rb')} # the key supposed to be file may be\r\nresponse = requests.post(url, data=data, files=files)\r\n\r\n```\r\nClosing the issue  when running describe_vpn_connections the VgwTelemtry returns non-serializable code rather than the timestamp.\r\n\r\nu'LastStatusChange': **datetime.datetime(2016, 8, 19, 16, 16, 3, tzinfo=tzlocal())**,  When attempting to send a message to a FIFO queue, \r\n```\r\nsqs = boto3.resource('sqs')\r\nqueue = sqs.get_queue_by_name(QueueName='testQueue.fifo')\r\nqueue.send_message(MessageBody='{{\"job\":\"a_job\",\"data\":{\"some\":\"variable\"}}', MessageGroupId='586474de88e03')\r\n```\r\nThe following error is thrown:\r\n> botocore.exceptions.ParamValidationError: Parameter validation failed:\r\n> Unknown parameter in input: \"MessageGroupId\", must be one of: QueueUrl, MessageBody, DelaySeconds, MessageAttributes\r\n\r\nThe `MessageGroupId` is required by AWS and the boto docs indicate that it should be allowed: http://boto3.readthedocs.io/en/latest/reference/services/sqs.html?highlight=sqs#SQS.Queue.send_message\r\n\r\n\r\nSending the message without the parameter generates a different error:\r\n`queue.send_message(MessageBody='{{\"job\":\"a_job\",\"data\":{\"some\":\"variable\"}}')`\r\n> botocore.exceptions.ClientError: An error occurred (MissingParameter) when calling the SendMessage operation: The request must contain the parameter MessageGroupId.\r\n\r\n Yes, that was the problem, thank you.\r\nI was running the latest version of boto3 (1.4.3) but botocore was running 1.4.37. Once I upgraded to 1.4.92, the message succeeded  Hi @JordonPhillips ,\r\n\r\nI am seeing this same error when omitting MessageGroupID parameter. Currently running boto3 1.4.4 and botocore 1.5.39\r\n\r\n`sqs = boto3.resource('sqs')\r\nqueue = sqs.get_queue_by_name(QueueName='TimTest.fifo')\r\nmessage_content = str({\r\n\t'email': 'me@email.com',\r\n})\r\nresponse = queue.send_message(MessageBody=message_content)`\r\n\r\nError:\r\n<i>Traceback (most recent call last):\r\n  File \"sqs.py\", line 11, in <module>\r\n    response = queue.send_message(MessageBody=message_content)\r\n  File \"/Library/Python/2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/Library/Python/2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 253, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 544, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (MissingParameter) when calling the SendMessage operation: The request must contain the parameter MessageGroupId.</i>\r\n\r\nThank you for your time. @heytimj you need to send the `MessageGroupId`  ```\r\nimport boto3\r\nfrom botocore.client import Config\r\n\r\ns3 = boto3.resource('s3', config=Config(signature_version='s3v4'))\r\nfileExists = s3.Bucket(\"bucket-name\").get_key(\"key-path\")\r\n```\r\n\r\nErrors with\r\n\r\n`AttributeError: 's3.Bucket' object has no attribute 'get_key'`\r\n\r\nBut it's documented here:\r\n\r\nhttp://boto.cloudhackers.com/en/latest/ref/s3.html#boto.s3.bucket.Bucket.get_key I'm an idiot, I saw all the 3s in the URL and assumed incorrectly. Apologies. For anyone looking for a solution in boto3 as it was removed this worked for me\r\n\r\n```\r\ns3Client = boto3.client(\"s3\", region_name=\"eu-west-2\")\r\n\r\ntry:\r\n    s3Client.head_object(Bucket=\"bucket-name\", Key=\"key-name\")\r\nexcept:\r\n   # Doesn't exist\r\n```\r\n\r\nNot ideal using exceptions in this way but there doesn't appear to be an alternative without a more expensive list all objects approach.  Hello,\r\n\r\n`upload_fileobj` has an undocumented behavior that I think it's a bug.  It closes the file after uploading the file ! :(\r\n\r\nTo reproduce this behavior:\r\n```\r\nimport boto3\r\nimport cStringIO\r\n\r\nf = cStringIO.StringIO(\"hello\")\r\nprint f.getvalue()\r\nprint f.getvalue() # Second call works!\r\n\r\nsession = boto3.Session()\r\ns3 = session.resource('s3')\r\nobj = s3.Object(bucket_name, key)\r\n\r\nobj.upload_fileobj(f)\r\n\r\nprint f.getvalue() # Raises an exception\r\n\r\n```\r\n          start_time = now + datetime.timedelta(seconds = -60 * 60 - 60 * 10 * 6 * 10)\r\n        end_time = now + datetime.timedelta(seconds = -60 * 60 )\r\n\r\n        print start_time\r\n        print end_time\r\n\r\n        self.connect()\r\n        response = self.conn.get_metric_statistics(\r\n                        Namespace='AWS/ApplicationELB',\r\n                        MetricName='HTTPCode_Target_2XX_Count',\r\n                        Dimensions=[\r\n                            {\r\n                                'Name': 'LoadBalancer',\r\n                                'Value': 'elb01'\r\n                            },\r\n                        ],\r\n                        StartTime=start_time,\r\n                        EndTime=end_time,\r\n                        Period=60,\r\n                        Statistics=[\r\n                            'Sum',\r\n                        ],\r\n                        Unit='Count'\r\n        )\r\n\r\n        print response\r\n\r\n\r\n{u'Datapoints': [], 'ResponseMetadata': {'HTTPStatusCode': 200, 'RequestId': '720e4f95-c9b6-11e6-9f58-1769cb4f4bdf'}, u'Label': 'HTTPCode_Backend_5XX'}\r\n\r\n\r\nMany times the return value is empty\r\n  Python 3.6 got released, and some distro (like Fedora) are swithcing to it.  I'm having an issue retrieving temporary credentials via SAML/STS with the boto3 sts client when I have the AWS_DEFAULT_PROFILE environment variable set on my system, before I've created a profile (or logged in). \r\n\r\n```\r\n    conn = boto3.client('sts')\r\n  File \"/usr/local/lib/python2.7/site-packages/boto3/__init__.py\", line 83, in client\r\n    return _get_default_session().client(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/boto3/__init__.py\", line 72, in _get_default_session\r\n    setup_default_session()\r\n  File \"/usr/local/lib/python2.7/site-packages/boto3/__init__.py\", line 34, in setup_default_session\r\n    DEFAULT_SESSION = Session(**kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/boto3/session.py\", line 80, in __init__\r\n    self._setup_loader()\r\n  File \"/usr/local/lib/python2.7/site-packages/boto3/session.py\", line 120, in _setup_loader\r\n    self._loader = self._session.get_component('data_loader')\r\n  File \"/usr/local/lib/python2.7/site-packages/botocore/session.py\", line 691, in get_component\r\n    return self._components.get_component(name)\r\n  File \"/usr/local/lib/python2.7/site-packages/botocore/session.py\", line 885, in get_component\r\n    self._components[name] = factory()\r\n  File \"/usr/local/lib/python2.7/site-packages/botocore/session.py\", line 179, in <lambda>\r\n    lambda:  create_loader(self.get_config_variable('data_path')))\r\n  File \"/usr/local/lib/python2.7/site-packages/botocore/session.py\", line 259, in get_config_variable\r\n    elif self._found_in_config_file(methods, var_config):\r\n  File \"/usr/local/lib/python2.7/site-packages/botocore/session.py\", line 280, in _found_in_config_file\r\n    return var_config[0] in self.get_scoped_config()\r\n  File \"/usr/local/lib/python2.7/site-packages/botocore/session.py\", line 352, in get_scoped_config\r\n    raise ProfileNotFound(profile=profile_name)\r\nbotocore.exceptions.ProfileNotFound: The config profile (test) could not be found\r\n```\r\n\r\nAt the time I'm creating the client I may have no credentials created and I have already specified the AWS_DEFAULT_PROFILE environment variable. I feel like this is an issue because using the client in the way that I'm using it, I'm not doing anything where a user would expect to be using a specific profile, or even a profile at all.  If I understand correctly, you have a profile configured (`AWS_DEFAULT_PROFILE=test`) but there's no actual profile created in either `~/.aws/config` and `~/.aws/credentials`.\r\n\r\nIf so, this is the expected behavior.  If you specify a profile that does not exist, we let the user know, as they may have misconfigured/misspelled their profile name.\r\n\r\nThe profile just has to be defined, but can be empty.  So your workflow could go something like:\r\n\r\n```\r\necho '[profile test]' > ~/.aws/config\r\nexport AWS_DEFAULT_PROFILE=test\r\n(your script)\r\n```\r\n\r\nThough keep in mind that you'll still get an error eventually if boto3 needs to make an API call that requires signing the request (which will fail because we couldn't find credentials).\r\n\r\nWould that work for you?  Perhaps I'm missing something here but my current IAM Role has a policy for EC2 which is basically allow all for testing.  Using the resource syntax it works for S3 and iam, but when I try doing the same for EC2 I get the following error:\r\n\r\n## S3:\r\n```\r\n>>> s3 = boto3.resource('s3')\r\n>>> \r\n```\r\n\r\n## IAM:\r\n```\r\n>>> iam = boto3.resource('iam')\r\n>>>\r\n```\r\n\r\n## EC2:\r\n```\r\n>>> ec2 = boto3.resource('ec2')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/boto3/__init__.py\", line 92, in resource\r\n    return _get_default_session().resource(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/boto3/session.py\", line 389, in resource\r\n    aws_session_token=aws_session_token, config=config)\r\n  File \"/usr/local/lib/python2.7/site-packages/boto3/session.py\", line 263, in client\r\n    aws_session_token=aws_session_token, config=config)\r\n  File \"/usr/lib/python2.7/dist-packages/botocore/session.py\", line 824, in create_client\r\n    client_config=config, api_version=api_version)\r\n  File \"/usr/lib/python2.7/dist-packages/botocore/client.py\", line 62, in create_client\r\n    service_model = self._load_service_model(service_name, api_version)\r\n  File \"/usr/lib/python2.7/dist-packages/botocore/client.py\", line 92, in _load_service_model\r\n    api_version=api_version)\r\n  File \"/usr/lib/python2.7/dist-packages/botocore/loaders.py\", line 123, in _wrapper\r\n    data = func(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/botocore/loaders.py\", line 358, in load_service_model\r\n    return self.load_data(full_path)\r\n  File \"/usr/lib/python2.7/dist-packages/botocore/loaders.py\", line 123, in _wrapper\r\n    data = func(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/botocore/loaders.py\", line 382, in load_data\r\n    raise DataNotFoundError(data_path=name)\r\nbotocore.exceptions.DataNotFoundError: Unable to load data for: ec2/2016-11-15/service-2\r\n```\r\n Ah thanks.  I had missed that in my bootstrap.  Hi,\r\n\r\nI need help with the boto3 logger, because I am unable to see any logs on stdout when setting \"boto3.set_stream_logger(name='boto3')\" in my script. However if I use the following boto3.set_stream_logger('botocore', level='DEBUG') for botocore I can see the Debug Logs which shows the HTTPS Streams etc.\r\n\r\nI also want to see debug logs for boto3, but I am not sure how to use boto3.set_stream_logger. I am initiating the boto3 Session client by calling the following:\r\n\r\n```python\r\ndef boto_clients(profile):\r\n    if not profile:\r\n        profile = 'default'\r\n    session = boto3.Session(profile_name=profile)\r\n    s3 = session.client('s3')\r\n    cfn = session.client('cloudformation')\r\n    ec2 = session.client('ec2')\r\n    return s3, cfn, ec2\r\n```\r\nand then call the following for example\r\n\r\n```python\r\n    response = cfn.describe_stacks(\r\n        StackName=<StackName>\r\n    )\r\n```\r\n\r\nHow can I get detailed logging for the above? Please let me know if you require more information and I am more than happy to provide it.\r\n\r\nThanks in advance.  I think you have the best git hub name @c2xbrhdj6u4qs15  Thanks for your response Jordon, however I already set ```boto3.set_stream_logger('botocore', level='DEBUG') ``` which I mentioned in my initial statement. I am wondering how to get detailed logging for any boto3 resource, like Cloud Formation create_stack, describe_stack etc. I've seen comments of somebody to use ```boto3.set_stream_logger(name='boto3')```, but I am unable to see any logs.\r\n\r\nThanks in advance. Hey, are you still having issues with this?\r\nYou could try `boto3.set_stream_logger('')` which will enable both `botocore` and `boto3` debug logs. Thanks, issue has been resolved.  This is a bit weird and I cannot rule out that I am doing something stupid.\r\n\r\nwith Apache spark 2.0.0 on Hortonworks Data Platform 2.5 (HDP 2.5) I am seeing that parrallelised tasks of jobs running through yarn are not able to locate credentials. I am very sure that the user I am using (centos) has the credentials stored in the right place (~/.aws) I have tested this very thoroughly with vanilla python boto3 and the awscli.\r\n\r\nI have a couple of boto calls. one before parallelism which works.\r\n\r\n`for object in my_bucket.objects.filter(Prefix='1971-01'):`\r\n\r\nand this one is supposed to run in parallel downloading the object. It seems that this is failing.\r\n\r\n`s3obj = boto3.resource('s3').Object(bucket_name='time-waits-for-no-man', key=s3Key)`\r\n\r\nThe job fails with\r\n\r\n`NoCredentialsError: Unable to locate credentials`. \r\n\r\n```\r\nStacktrace:\r\nJob aborted due to stage failure: Task 0 in stage 0.0 failed 4 times, most recent failure: Lost task 0.3 in stage 0.0 (TID 3, hadoop002.dbszod.aws.db.de): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0048/container_1480271222291_0048_01_000020/pyspark.zip/pyspark/worker.py\", line 172, in main\r\n    process()\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0048/container_1480271222291_0048_01_000020/pyspark.zip/pyspark/worker.py\", line 167, in process\r\n    serializer.dump_stream(func(split_index, iterator), outfile)\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0048/container_1480271222291_0048_01_000020/pyspark.zip/pyspark/serializers.py\", line 263, in dump_stream\r\n    vs = list(itertools.islice(iterator, batch))\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/rdd.py\", line 1306, in takeUpToNumLeft\r\n  File \"/home/centos/fun-functions/spark-parrallel-read-from-s3/tick.py\", line 38, in distributedJsonRead\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 526, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 141, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 166, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 150, in create_request\r\n    operation_name=operation_model.name)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 147, in sign\r\n    auth.add_auth(request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/auth.py\", line 678, in add_auth\r\n    raise NoCredentialsError\r\nNoCredentialsError: Unable to locate credentials\r\n\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.read(PythonRDD.scala:193)\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.<init>(PythonRDD.scala:234)\r\n\tat org.apache.spark.api.python.PythonRunner.compute(PythonRDD.scala:152)\r\n\tat org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:63)\r\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319)\r\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:283)\r\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70)\r\n\tat org.apache.spark.scheduler.Task.run(Task.scala:85)\r\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\nDriver stacktrace:\r\nstacktrace:Job aborted due to stage failure: Task 0 in stage 0.0 failed 4 times, most recent failure: Lost task 0.3 in stage 0.0 (TID 3, hadoop002.dbszod.aws.db.de): org.apache.spark.api.python.PythonException: Traceback (most recent call last):  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0048/container_1480271222291_0048_01_000020/pyspark.zip/pyspark/worker.py\", line 172, in main    process()  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0048/container_1480271222291_0048_01_000020/pyspark.zip/pyspark/worker.py\", line 167, in process    serializer.dump_stream(func(split_index, iterator), outfile)  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0048/container_1480271222291_0048_01_000020/pyspark.zip/pyspark/serializers.py\", line 263, in dump_stream    vs = list(itertools.islice(iterator, batch))  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/rdd.py\", line 1306, in takeUpToNumLeft  File \"/home/centos/fun-functions/spark-parrallel-read-from-s3/tick.py\", line 38, in distributedJsonRead  File \"/usr/lib/python2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action    response = action(self, *args, **kwargs)  File \"/usr/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__    response = getattr(parent.meta.client, operation_name)(**params)  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call    return self._make_api_call(operation_name, kwargs)  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 526, in _make_api_call    operation_model, request_dict)  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 141, in make_request    return self._send_request(request_dict, operation_model)  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 166, in _send_request    request = self.create_request(request_dict, operation_model)  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 150, in create_request    operation_name=operation_model.name)  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 227, in emit    return self._emit(event_name, kwargs)  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 210, in _emit    response = handler(**kwargs)  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 90, in handler    return self.sign(operation_name, request)  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 147, in sign    auth.add_auth(request)  File \"/usr/lib/python2.7/site-packages/botocore/auth.py\", line 678, in add_auth    raise NoCredentialsErrorNoCredentialsError: Unable to locate credentialsat org.apache.spark.api.python.PythonRunner$$anon$1.read(PythonRDD.scala:193)at org.apache.spark.api.python.PythonRunner$$anon$1.<init>(PythonRDD.scala:234)at org.apache.spark.api.python.PythonRunner.compute(PythonRDD.scala:152)at org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:63)at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319)at org.apache.spark.rdd.RDD.iterator(RDD.scala:283)at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70)at org.apache.spark.scheduler.Task.run(Task.scala:85)at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)at java.lang.Thread.run(Thread.java:745)Driver stacktrace:\r\n```\r\n\r\nI am not sure it is relevent but the last thing I can see from the botocore debug output is:\r\n\r\n```\r\n2016-11-30 22:36:47,955 botocore.hooks [DEBUG] Event needs-retry.s3.ListObjects: calling handler <botocore.retryhandler.RetryHandler object at 0x20f7310>\r\n2016-11-30 22:36:47,955 botocore.retryhandler [DEBUG] No retry needed.\r\n2016-11-30 22:36:47,955 botocore.hooks [DEBUG] Event needs-retry.s3.ListObjects: calling handler <bound method S3RegionRedirector.redirect_from_error of <botocore.utils.S3RegionRedirector object at 0x223a6d0>>\r\n2016-11-30 22:36:47,955 botocore.hooks [DEBUG] Event after-call.s3.ListObjects: calling handler <function decode_list_object at 0x16c3b90>\r\n2016-11-30 22:36:47,956 botocore.hooks [DEBUG] Event creating-resource-class.s3.ObjectSummary: calling handler <function _handler at 0x1bd7488>\r\n```\r\n\r\n\r\n    \r\nThe full code ( please excuse the mess)\r\n```\r\nimport boto3\r\nimport ujson\r\nimport arrow\r\nimport sys\r\nimport os\r\nfrom pyspark.sql import SQLContext\r\nfrom pyspark import SparkContext\r\n\r\nboto3.set_stream_logger('botocore', level='DEBUG')\r\nsc = SparkContext()\r\n\r\nversion = sys.version\r\nlog4jLogger = sc._jvm.org.apache.log4j\r\nLOGGER = log4jLogger.LogManager.getLogger(__name__)\r\nLOGGER.info(\"pyspark script logger initialized\")\r\nLOGGER.info(\"Python Version: \" + version)\r\n\r\ns3_list = []\r\ns3 = boto3.resource('s3')\r\nmy_bucket = s3.Bucket('time-waits-for-no-man')\r\nfor object in my_bucket.objects.filter(Prefix='1971-01'):\r\n    s3_list.append(object.key)\r\n\r\ndef add_timestamp(dict):\r\n    dict['timestamp'] = arrow.get(\r\n                        int(dict['year']),\r\n                        int(dict['month']),\r\n                        int(dict['day']),\r\n                        int(dict['hour']),\r\n                        int(dict['minute']),\r\n                        int(dict['second'])\r\n                        ).timestamp\r\n    return dict\r\n\r\ndef distributedJsonRead(s3Key):\r\n    s3obj = boto3.resource('s3').Object(bucket_name='time-waits-for-no-man', key=s3Key)\r\n    contents = s3obj.get()['Body'].read().decode()\r\n    meow = contents.splitlines()\r\n    result_wo_timestamp = map(ujson.loads, meow)\r\n    result_wi_timestamp = map(add_timestamp, result_wo_timestamp)\r\n    return result_wi_timestamp\r\n\r\nsqlContext = SQLContext(sc)\r\njob = sc.parallelize(s3_list)\r\nfoo = job.flatMap(distributedJsonRead)\r\ndf = foo.toDF()\r\n#df.show()\r\nblah = df.count()\r\nprint(blah)\r\ndf.printSchema()\r\n\r\n#df.write.parquet('dates_by_seconds', mode=\"overwrite\", partitionBy=[\"second\"])\r\nsc.stop()\r\nexit()\r\n```\r\n\r\n[centos@hadoop003 ~]$ cat .aws/config \r\n```\r\n[default]\r\nregion = eu-central-1\r\n\r\n[Boto]\r\n\r\nproxy = webproxy.foo.de\r\nproxy_port = 8080\r\n```\r\n\r\n[centos@hadoop003 ~]$ cat .aws/credentials \r\n```\r\n[default]\r\naws_access_key_id = XXXXXXXXXXXXXXXXXX\r\naws_secret_access_key = XxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx\r\n```\r\n\r\n Full output\r\n\r\n```\r\n[centos@hadoop001 ~]$ spark-submit --master=\"yarn-client\" --executor-memory 1G --num-executors 20 fun-functions/spark-parrallel-read-from-s3/tick.py \r\nWarning: Master yarn-client is deprecated since 2.0. Please use master \"yarn\" with specified deploy mode instead.\r\n16/11/30 23:03:57 INFO SparkContext: Running Spark version 2.0.0.2.5.0.0-1245\r\n16/11/30 23:03:57 INFO SecurityManager: Changing view acls to: centos\r\n16/11/30 23:03:57 INFO SecurityManager: Changing modify acls to: centos\r\n16/11/30 23:03:57 INFO SecurityManager: Changing view acls groups to: \r\n16/11/30 23:03:57 INFO SecurityManager: Changing modify acls groups to: \r\n16/11/30 23:03:57 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(centos); groups with view permissions: Set(); users  with modify permissions: Set(centos); groups with modify permissions: Set()\r\n16/11/30 23:03:57 INFO Utils: Successfully started service 'sparkDriver' on port 33482.\r\n16/11/30 23:03:57 INFO SparkEnv: Registering MapOutputTracker\r\n16/11/30 23:03:57 INFO SparkEnv: Registering BlockManagerMaster\r\n16/11/30 23:03:57 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-7d1fd6ff-8327-44e9-934d-0d565c1e8bfa\r\n16/11/30 23:03:57 INFO MemoryStore: MemoryStore started with capacity 366.3 MB\r\n16/11/30 23:03:58 INFO SparkEnv: Registering OutputCommitCoordinator\r\n16/11/30 23:03:58 INFO log: Logging initialized @2129ms\r\n16/11/30 23:03:58 INFO Server: jetty-9.2.z-SNAPSHOT\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@3bca1cc0{/jobs,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@948c112{/jobs/json,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@61f2f4f6{/jobs/job,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@39499c00{/jobs/job/json,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@520ebbf5{/stages,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@1d01b0f7{/stages/json,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@6b22b2e5{/stages/stage,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@1e7e9a1d{/stages/stage/json,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@39085b34{/stages/pool,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@291ec2ea{/stages/pool/json,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@5755e8b6{/storage,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@3d112e33{/storage/json,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@463b035e{/storage/rdd,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@19ed80e1{/storage/rdd/json,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@6185cb32{/environment,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@55511187{/environment/json,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@4b6ed980{/executors,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@3ef1a284{/executors/json,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@71623233{/executors/threadDump,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@2ce2d8b1{/executors/threadDump/json,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@11fdb674{/static,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@222bd34d{/,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@42388e91{/api,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@78a5e137{/stages/stage/kill,null,AVAILABLE}\r\n16/11/30 23:03:58 INFO ServerConnector: Started ServerConnector@237d61c{HTTP/1.1}{0.0.0.0:4040}\r\n16/11/30 23:03:58 INFO Server: Started @2259ms\r\n16/11/30 23:03:58 INFO Utils: Successfully started service 'SparkUI' on port 4040.\r\n16/11/30 23:03:58 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://10.43.191.178:4040\r\n16/11/30 23:03:59 INFO RMProxy: Connecting to ResourceManager at hadoop002.dbszod.aws.db.de/10.43.191.160:8050\r\n16/11/30 23:03:59 INFO Client: Requesting a new application from cluster with 4 NodeManagers\r\n16/11/30 23:03:59 INFO Client: Verifying our application has not requested more than the maximum memory capability of the cluster (12288 MB per container)\r\n16/11/30 23:03:59 INFO Client: Will allocate AM container, with 896 MB memory including 384 MB overhead\r\n16/11/30 23:03:59 INFO Client: Setting up container launch context for our AM\r\n16/11/30 23:03:59 INFO Client: Setting up the launch environment for our AM container\r\n16/11/30 23:03:59 INFO Client: Preparing resources for our AM container\r\n16/11/30 23:03:59 INFO Client: Use hdfs cache file as spark.yarn.archive for HDP, hdfsCacheFile:hdfs:///hdp/apps/2.5.0.0-1245/spark2/spark2-hdp-yarn-archive.tar.gz\r\n16/11/30 23:03:59 INFO Client: Source and destination file systems are the same. Not copying hdfs:/hdp/apps/2.5.0.0-1245/spark2/spark2-hdp-yarn-archive.tar.gz\r\n16/11/30 23:03:59 INFO Client: Uploading resource file:/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip -> hdfs://hadoop001.dbszod.aws.db.de:8020/user/centos/.sparkStaging/application_1480271222291_0049/pyspark.zip\r\n16/11/30 23:03:59 INFO Client: Uploading resource file:/usr/hdp/2.5.0.0-1245/spark2/python/lib/py4j-0.10.1-src.zip -> hdfs://hadoop001.dbszod.aws.db.de:8020/user/centos/.sparkStaging/application_1480271222291_0049/py4j-0.10.1-src.zip\r\n16/11/30 23:03:59 INFO Client: Uploading resource file:/tmp/spark-bfa7840d-dae8-4e16-8902-f3b257c410cd/__spark_conf__2000631962692114874.zip -> hdfs://hadoop001.dbszod.aws.db.de:8020/user/centos/.sparkStaging/application_1480271222291_0049/__spark_conf__.zip\r\n16/11/30 23:04:00 INFO SecurityManager: Changing view acls to: centos\r\n16/11/30 23:04:00 INFO SecurityManager: Changing modify acls to: centos\r\n16/11/30 23:04:00 INFO SecurityManager: Changing view acls groups to: \r\n16/11/30 23:04:00 INFO SecurityManager: Changing modify acls groups to: \r\n16/11/30 23:04:00 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(centos); groups with view permissions: Set(); users  with modify permissions: Set(centos); groups with modify permissions: Set()\r\n16/11/30 23:04:00 INFO Client: Submitting application application_1480271222291_0049 to ResourceManager\r\n16/11/30 23:04:00 INFO YarnClientImpl: Submitted application application_1480271222291_0049\r\n16/11/30 23:04:00 INFO SchedulerExtensionServices: Starting Yarn extension services with app application_1480271222291_0049 and attemptId None\r\n16/11/30 23:04:01 INFO Client: Application report for application_1480271222291_0049 (state: ACCEPTED)\r\n16/11/30 23:04:01 INFO Client: \r\n\t client token: N/A\r\n\t diagnostics: AM container is launched, waiting for AM container to Register with RM\r\n\t ApplicationMaster host: N/A\r\n\t ApplicationMaster RPC port: -1\r\n\t queue: default\r\n\t start time: 1480547038808\r\n\t final status: UNDEFINED\r\n\t tracking URL: http://hadoop002.dbszod.aws.db.de:8088/proxy/application_1480271222291_0049/\r\n\t user: centos\r\n16/11/30 23:04:02 INFO Client: Application report for application_1480271222291_0049 (state: ACCEPTED)\r\n16/11/30 23:04:02 INFO YarnSchedulerBackend$YarnSchedulerEndpoint: ApplicationMaster registered as NettyRpcEndpointRef(null)\r\n16/11/30 23:04:02 INFO YarnClientSchedulerBackend: Add WebUI Filter. org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter, Map(PROXY_HOSTS -> hadoop002.dbszod.aws.db.de, PROXY_URI_BASES -> http://hadoop002.dbszod.aws.db.de:8088/proxy/application_1480271222291_0049), /proxy/application_1480271222291_0049\r\n16/11/30 23:04:02 INFO JettyUtils: Adding filter: org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter\r\n16/11/30 23:04:03 INFO Client: Application report for application_1480271222291_0049 (state: RUNNING)\r\n16/11/30 23:04:03 INFO Client: \r\n\t client token: N/A\r\n\t diagnostics: N/A\r\n\t ApplicationMaster host: 10.43.191.161\r\n\t ApplicationMaster RPC port: 0\r\n\t queue: default\r\n\t start time: 1480547038808\r\n\t final status: UNDEFINED\r\n\t tracking URL: http://hadoop002.dbszod.aws.db.de:8088/proxy/application_1480271222291_0049/\r\n\t user: centos\r\n16/11/30 23:04:03 INFO YarnClientSchedulerBackend: Application application_1480271222291_0049 has started running.\r\n16/11/30 23:04:03 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 43203.\r\n16/11/30 23:04:03 INFO NettyBlockTransferService: Server created on 10.43.191.178:43203\r\n16/11/30 23:04:03 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 10.43.191.178, 43203)\r\n16/11/30 23:04:03 INFO BlockManagerMasterEndpoint: Registering block manager 10.43.191.178:43203 with 366.3 MB RAM, BlockManagerId(driver, 10.43.191.178, 43203)\r\n16/11/30 23:04:03 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 10.43.191.178, 43203)\r\n16/11/30 23:04:03 INFO ContextHandler: Started o.s.j.s.ServletContextHandler@ad23cf5{/metrics/json,null,AVAILABLE}\r\n16/11/30 23:04:03 INFO EventLoggingListener: Logging events to hdfs:///spark2-history/application_1480271222291_0049\r\n16/11/30 23:04:06 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.160:34318) with ID 3\r\n16/11/30 23:04:06 INFO BlockManagerMasterEndpoint: Registering block manager hadoop002.dbszod.aws.db.de:39300 with 366.3 MB RAM, BlockManagerId(3, hadoop002.dbszod.aws.db.de, 39300)\r\n16/11/30 23:04:06 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.143:39832) with ID 1\r\n16/11/30 23:04:06 INFO BlockManagerMasterEndpoint: Registering block manager hadoop004.dbszod.aws.db.de:41873 with 366.3 MB RAM, BlockManagerId(1, hadoop004.dbszod.aws.db.de, 41873)\r\n16/11/30 23:04:07 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.178:37346) with ID 2\r\n16/11/30 23:04:07 INFO BlockManagerMasterEndpoint: Registering block manager hadoop001.dbszod.aws.db.de:42634 with 366.3 MB RAM, BlockManagerId(2, hadoop001.dbszod.aws.db.de, 42634)\r\n16/11/30 23:04:07 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.161:37606) with ID 4\r\n16/11/30 23:04:07 INFO BlockManagerMasterEndpoint: Registering block manager hadoop003.dbszod.aws.db.de:35840 with 366.3 MB RAM, BlockManagerId(4, hadoop003.dbszod.aws.db.de, 35840)\r\n16/11/30 23:04:08 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.143:39836) with ID 5\r\n16/11/30 23:04:08 INFO BlockManagerMasterEndpoint: Registering block manager hadoop004.dbszod.aws.db.de:43446 with 366.3 MB RAM, BlockManagerId(5, hadoop004.dbszod.aws.db.de, 43446)\r\n16/11/30 23:04:08 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.178:37350) with ID 6\r\n16/11/30 23:04:08 INFO BlockManagerMasterEndpoint: Registering block manager hadoop001.dbszod.aws.db.de:41339 with 366.3 MB RAM, BlockManagerId(6, hadoop001.dbszod.aws.db.de, 41339)\r\n16/11/30 23:04:09 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.143:39840) with ID 9\r\n16/11/30 23:04:09 INFO BlockManagerMasterEndpoint: Registering block manager hadoop004.dbszod.aws.db.de:41620 with 366.3 MB RAM, BlockManagerId(9, hadoop004.dbszod.aws.db.de, 41620)\r\n16/11/30 23:04:09 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.178:37354) with ID 10\r\n16/11/30 23:04:09 INFO BlockManagerMasterEndpoint: Registering block manager hadoop001.dbszod.aws.db.de:39154 with 366.3 MB RAM, BlockManagerId(10, hadoop001.dbszod.aws.db.de, 39154)\r\n16/11/30 23:04:09 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.160:34326) with ID 7\r\n16/11/30 23:04:09 INFO BlockManagerMasterEndpoint: Registering block manager hadoop002.dbszod.aws.db.de:39835 with 366.3 MB RAM, BlockManagerId(7, hadoop002.dbszod.aws.db.de, 39835)\r\n16/11/30 23:04:09 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.160:34328) with ID 11\r\n16/11/30 23:04:09 INFO BlockManagerMasterEndpoint: Registering block manager hadoop002.dbszod.aws.db.de:41191 with 366.3 MB RAM, BlockManagerId(11, hadoop002.dbszod.aws.db.de, 41191)\r\n16/11/30 23:04:10 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.161:37630) with ID 12\r\n16/11/30 23:04:10 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.161:37618) with ID 8\r\n16/11/30 23:04:10 INFO BlockManagerMasterEndpoint: Registering block manager hadoop003.dbszod.aws.db.de:34682 with 366.3 MB RAM, BlockManagerId(12, hadoop003.dbszod.aws.db.de, 34682)\r\n16/11/30 23:04:10 INFO BlockManagerMasterEndpoint: Registering block manager hadoop003.dbszod.aws.db.de:46832 with 366.3 MB RAM, BlockManagerId(8, hadoop003.dbszod.aws.db.de, 46832)\r\n16/11/30 23:04:12 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.160:34334) with ID 19\r\n16/11/30 23:04:12 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.143:39844) with ID 17\r\n16/11/30 23:04:12 INFO BlockManagerMasterEndpoint: Registering block manager hadoop002.dbszod.aws.db.de:45599 with 366.3 MB RAM, BlockManagerId(19, hadoop002.dbszod.aws.db.de, 45599)\r\n16/11/30 23:04:12 INFO BlockManagerMasterEndpoint: Registering block manager hadoop004.dbszod.aws.db.de:46309 with 366.3 MB RAM, BlockManagerId(17, hadoop004.dbszod.aws.db.de, 46309)\r\n16/11/30 23:04:12 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.178:37362) with ID 14\r\n16/11/30 23:04:12 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.178:37364) with ID 18\r\n16/11/30 23:04:12 INFO BlockManagerMasterEndpoint: Registering block manager hadoop001.dbszod.aws.db.de:34318 with 366.3 MB RAM, BlockManagerId(14, hadoop001.dbszod.aws.db.de, 34318)\r\n16/11/30 23:04:12 INFO YarnClientSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.8\r\n16/11/30 23:04:12 INFO BlockManagerMasterEndpoint: Registering block manager hadoop001.dbszod.aws.db.de:42807 with 366.3 MB RAM, BlockManagerId(18, hadoop001.dbszod.aws.db.de, 42807)\r\n16/11/30 23:04:12 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.143:39848) with ID 13\r\n16/11/30 23:04:12 INFO __main__: pyspark script logger initialized\r\n16/11/30 23:04:12 INFO __main__: Python Version: 2.7.5 (default, Nov  6 2016, 00:28:07) \r\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-11)]\r\n2016-11-30 23:04:12,799 botocore.loaders [DEBUG] Loading JSON file: /usr/lib/python2.7/site-packages/boto3/data/s3/2006-03-01/resources-1.json\r\n2016-11-30 23:04:12,811 botocore.credentials [DEBUG] Looking for credentials via: env\r\n2016-11-30 23:04:12,811 botocore.credentials [DEBUG] Looking for credentials via: assume-role\r\n2016-11-30 23:04:12,812 botocore.credentials [DEBUG] Looking for credentials via: shared-credentials-file\r\n2016-11-30 23:04:12,812 botocore.credentials [INFO] Found credentials in shared credentials file: ~/.aws/credentials\r\n2016-11-30 23:04:12,812 botocore.loaders [DEBUG] Loading JSON file: /usr/lib/python2.7/site-packages/botocore/data/endpoints.json\r\n2016-11-30 23:04:12,825 botocore.loaders [DEBUG] Loading JSON file: /usr/lib/python2.7/site-packages/botocore/data/s3/2006-03-01/service-2.json\r\n16/11/30 23:04:12 INFO BlockManagerMasterEndpoint: Registering block manager hadoop004.dbszod.aws.db.de:37388 with 366.3 MB RAM, BlockManagerId(13, hadoop004.dbszod.aws.db.de, 37388)\r\n2016-11-30 23:04:12,853 botocore.loaders [DEBUG] Loading JSON file: /usr/lib/python2.7/site-packages/botocore/data/_retry.json\r\n2016-11-30 23:04:12,855 botocore.client [DEBUG] Registering retry handlers for service: s3\r\n2016-11-30 23:04:12,858 botocore.hooks [DEBUG] Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x111dc08>\r\n2016-11-30 23:04:12,858 botocore.hooks [DEBUG] Event creating-client-class.s3: calling handler <function _handler at 0x1682758>\r\n2016-11-30 23:04:12,866 botocore.hooks [DEBUG] Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x111d398>\r\n2016-11-30 23:04:12,867 botocore.args [DEBUG] The s3 config key is not a dictionary type, ignoring its value of: None\r\n2016-11-30 23:04:12,869 botocore.endpoint [DEBUG] Setting s3 timeout as (60, 60)\r\n2016-11-30 23:04:12,869 botocore.client [DEBUG] Defaulting to S3 virtual host style addressing with path style addressing fallback.\r\n2016-11-30 23:04:12,873 botocore.hooks [DEBUG] Event creating-resource-class.s3.Bucket: calling handler <function _handler at 0x16829b0>\r\n2016-11-30 23:04:12,874 botocore.loaders [DEBUG] Loading JSON file: /usr/lib/python2.7/site-packages/botocore/data/s3/2006-03-01/paginators-1.json\r\n2016-11-30 23:04:12,875 botocore.hooks [DEBUG] Event before-parameter-build.s3.ListObjects: calling handler <function set_list_objects_encoding_type_url at 0x1160b18>\r\n2016-11-30 23:04:12,875 botocore.hooks [DEBUG] Event before-parameter-build.s3.ListObjects: calling handler <function validate_bucket_name at 0x115cc08>\r\n2016-11-30 23:04:12,876 botocore.hooks [DEBUG] Event before-parameter-build.s3.ListObjects: calling handler <bound method S3RegionRedirector.redirect_from_cache of <botocore.utils.S3RegionRedirector object at 0x1cd86d0>>\r\n2016-11-30 23:04:12,876 botocore.hooks [DEBUG] Event before-call.s3.ListObjects: calling handler <function add_expect_header at 0x11600c8>\r\n2016-11-30 23:04:12,876 botocore.hooks [DEBUG] Event before-call.s3.ListObjects: calling handler <bound method S3RegionRedirector.set_request_url of <botocore.utils.S3RegionRedirector object at 0x1cd86d0>>\r\n2016-11-30 23:04:12,876 botocore.endpoint [DEBUG] Making request for OperationModel(name=ListObjects) (verify_ssl=True) with params: {'body': '', 'url': u'https://s3.eu-central-1.amazonaws.com/time-waits-for-no-man?prefix=1971-01&encoding-type=url', 'headers': {'User-Agent': 'Boto3/1.4.1 Python/2.7.5 Linux/3.10.0-514.el7.x86_64 Botocore/1.4.80 Resource'}, 'context': {'encoding_type_auto_set': True, 'client_region': 'eu-central-1', 'signing': {'bucket': 'time-waits-for-no-man'}, 'has_streaming_input': False, 'client_config': <botocore.config.Config object at 0x1cd8290>}, 'query_string': {u'prefix': '1971-01', u'encoding-type': 'url'}, 'url_path': u'/time-waits-for-no-man', 'method': u'GET'}\r\n2016-11-30 23:04:12,877 botocore.hooks [DEBUG] Event request-created.s3.ListObjects: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x1cd8250>>\r\n2016-11-30 23:04:12,877 botocore.hooks [DEBUG] Event before-sign.s3.ListObjects: calling handler <function fix_s3_host at 0xf4fb90>\r\n2016-11-30 23:04:12,877 botocore.auth [DEBUG] Calculating signature using v4 auth.\r\n2016-11-30 23:04:12,878 botocore.auth [DEBUG] CanonicalRequest:\r\nGET\r\n/time-waits-for-no-man\r\nencoding-type=url&prefix=1971-01\r\nhost:s3.eu-central-1.amazonaws.com\r\nx-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\r\nx-amz-date:20161130T230412Z\r\n\r\nhost;x-amz-content-sha256;x-amz-date\r\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\r\n2016-11-30 23:04:12,878 botocore.auth [DEBUG] StringToSign:\r\nAWS4-HMAC-SHA256\r\n20161130T230412Z\r\n20161130/eu-central-1/s3/aws4_request\r\nb0193aee0874f86d54c11f07cf6c5ae65140882983229c9a2d95161cd98d6135\r\n2016-11-30 23:04:12,878 botocore.auth [DEBUG] Signature:\r\n6513b177cff9a21e05bff424d6a6525fcd7b13bfc6f69dce1ae7f77ea9d2c217\r\n2016-11-30 23:04:12,879 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [GET]>\r\n2016-11-30 23:04:12,879 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTPS connection (1): s3.eu-central-1.amazonaws.com\r\n16/11/30 23:04:12 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.160:34338) with ID 15\r\n2016-11-30 23:04:12,915 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"GET /time-waits-for-no-man?prefix=1971-01&encoding-type=url HTTP/1.1\" 301 None\r\n2016-11-30 23:04:12,915 botocore.parsers [DEBUG] Response headers: {'date': 'Wed, 30 Nov 2016 23:04:07 GMT', 'x-amz-id-2': 'sAmyVIcDzpEItWhcPrA+G7IhpzahlR1ivaRxkkTVNRnrvSmbhLVvw9+0DwFzevFe2fFYTRRXby4=', 'server': 'AmazonS3', 'transfer-encoding': 'chunked', 'x-amz-request-id': '6DE6CF34A6D99E3C', 'x-amz-bucket-region': 'eu-west-1', 'content-type': 'application/xml'}\r\n2016-11-30 23:04:12,916 botocore.parsers [DEBUG] Response body:\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Error><Code>PermanentRedirect</Code><Message>The bucket you are attempting to access must be addressed using the specified endpoint. Please send all future requests to this endpoint.</Message><Bucket>time-waits-for-no-man</Bucket><Endpoint>time-waits-for-no-man.s3-eu-west-1.amazonaws.com</Endpoint><RequestId>6DE6CF34A6D99E3C</RequestId><HostId>sAmyVIcDzpEItWhcPrA+G7IhpzahlR1ivaRxkkTVNRnrvSmbhLVvw9+0DwFzevFe2fFYTRRXby4=</HostId></Error>\r\n2016-11-30 23:04:12,916 botocore.hooks [DEBUG] Event needs-retry.s3.ListObjects: calling handler <botocore.retryhandler.RetryHandler object at 0x1b95310>\r\n2016-11-30 23:04:12,916 botocore.retryhandler [DEBUG] No retry needed.\r\n2016-11-30 23:04:12,916 botocore.hooks [DEBUG] Event needs-retry.s3.ListObjects: calling handler <bound method S3RegionRedirector.redirect_from_error of <botocore.utils.S3RegionRedirector object at 0x1cd86d0>>\r\n2016-11-30 23:04:12,916 botocore.utils [DEBUG] S3 client configured for region eu-central-1 but the bucket time-waits-for-no-man is in region eu-west-1; Please configure the proper region to avoid multiple unnecessary redirects and signing attempts.\r\n2016-11-30 23:04:12,916 botocore.utils [DEBUG] Updating URI from https://s3.eu-central-1.amazonaws.com/time-waits-for-no-man?prefix=1971-01&encoding-type=url to https://s3-eu-west-1.amazonaws.com/time-waits-for-no-man?prefix=1971-01&encoding-type=url\r\n2016-11-30 23:04:12,916 botocore.endpoint [DEBUG] Response received to retry, sleeping for 0 seconds\r\n2016-11-30 23:04:12,917 botocore.hooks [DEBUG] Event request-created.s3.ListObjects: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x1cd8250>>\r\n2016-11-30 23:04:12,917 botocore.hooks [DEBUG] Event before-sign.s3.ListObjects: calling handler <function fix_s3_host at 0xf4fb90>\r\n2016-11-30 23:04:12,917 botocore.auth [DEBUG] Calculating signature using v4 auth.\r\n2016-11-30 23:04:12,917 botocore.auth [DEBUG] CanonicalRequest:\r\nGET\r\n/time-waits-for-no-man\r\nencoding-type=url&prefix=1971-01\r\nhost:s3-eu-west-1.amazonaws.com\r\nx-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\r\nx-amz-date:20161130T230412Z\r\n\r\nhost;x-amz-content-sha256;x-amz-date\r\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\r\n2016-11-30 23:04:12,917 botocore.auth [DEBUG] StringToSign:\r\nAWS4-HMAC-SHA256\r\n20161130T230412Z\r\n20161130/eu-west-1/s3/aws4_request\r\nf93a29a6e152f5c930c3e0e00a0cea707a6582451f9b378f0eaa380c4fe36a82\r\n2016-11-30 23:04:12,917 botocore.auth [DEBUG] Signature:\r\n0f7bf03ebf112f7c7fa3c1107216dabd5c4b32a15ab55454d4cf160561802644\r\n2016-11-30 23:04:12,918 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [GET]>\r\n2016-11-30 23:04:12,918 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTPS connection (1): s3-eu-west-1.amazonaws.com\r\n16/11/30 23:04:12 INFO BlockManagerMasterEndpoint: Registering block manager hadoop002.dbszod.aws.db.de:44987 with 366.3 MB RAM, BlockManagerId(15, hadoop002.dbszod.aws.db.de, 44987)\r\n16/11/30 23:04:13 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.161:37636) with ID 20\r\n16/11/30 23:04:13 INFO BlockManagerMasterEndpoint: Registering block manager hadoop003.dbszod.aws.db.de:43950 with 366.3 MB RAM, BlockManagerId(20, hadoop003.dbszod.aws.db.de, 43950)\r\n2016-11-30 23:04:13,224 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"GET /time-waits-for-no-man?prefix=1971-01&encoding-type=url HTTP/1.1\" 200 None\r\n2016-11-30 23:04:13,225 botocore.parsers [DEBUG] Response headers: {'x-amz-bucket-region': 'eu-west-1', 'x-amz-id-2': 'hCJa551Z3JcalQks9xglnmOpFFuFr9sCcMiqVtkDm6xudLhbV3nPLN9K0n3MPRHYMOe9BK9fXz4=', 'server': 'AmazonS3', 'transfer-encoding': 'chunked', 'x-amz-request-id': 'A1F2405AEE42B2FE', 'date': 'Wed, 30 Nov 2016 23:04:08 GMT', 'content-type': 'application/xml'}\r\n2016-11-30 23:04:13,225 botocore.parsers [DEBUG] Response body:\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\"><Name>time-waits-for-no-man</Name><Prefix>1971-01</Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated><Contents><Key>1971-01-01</Key><LastModified>2016-10-01T14:59:03.000Z</LastModified><ETag>&quot;78d55265f86ba8ad7bc134b26adf96fe-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-02</Key><LastModified>2016-10-01T14:59:03.000Z</LastModified><ETag>&quot;cd85ab695011303df90f5d496b44cd32-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-03</Key><LastModified>2016-10-01T14:59:03.000Z</LastModified><ETag>&quot;821c1ddfb951caef8a65bee3272c0254-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-04</Key><LastModified>2016-10-01T14:59:04.000Z</LastModified><ETag>&quot;131ee1840b2c50fcfb4c0bcf8fd1e312-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-05</Key><LastModified>2016-10-01T14:59:04.000Z</LastModified><ETag>&quot;17eb81d0990ab7da32102b6fe9c1149c-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-06</Key><LastModified>2016-10-01T15:00:03.000Z</LastModified><ETag>&quot;e2288e5e8f4c64763259f9dad5b909c9-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-07</Key><LastModified>2016-10-01T15:00:03.000Z</LastModified><ETag>&quot;2ef9aca034210ec40b8e3955da82ffe8-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-08</Key><LastModified>2016-10-01T15:00:03.000Z</LastModified><ETag>&quot;c6bb7195c10e5dec17f023885b70b2fd-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-09</Key><LastModified>2016-10-01T15:00:03.000Z</LastModified><ETag>&quot;f769e0f3e35903ca24bce24cbd469acf-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-10</Key><LastModified>2016-10-01T15:00:03.000Z</LastModified><ETag>&quot;ad5943dad6fddf8a085f82328e2b60a0-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-11</Key><LastModified>2016-10-01T15:00:04.000Z</LastModified><ETag>&quot;1519a1dfba997a26475dbf372630afd0-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-12</Key><LastModified>2016-10-01T15:00:04.000Z</LastModified><ETag>&quot;ce8b9e46ac349d65071309df9af59326-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-13</Key><LastModified>2016-10-01T15:00:04.000Z</LastModified><ETag>&quot;1f59bab2d0446c8440d4a4cbc4cb08d3-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-14</Key><LastModified>2016-10-01T15:00:04.000Z</LastModified><ETag>&quot;6d8787b79f1f7656f88fe7bf791403e9-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-15</Key><LastModified>2016-10-01T15:00:04.000Z</LastModified><ETag>&quot;5fea9014bad00285355b8f85fe47c442-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-16</Key><LastModified>2016-10-01T15:00:04.000Z</LastModified><ETag>&quot;62c393b72a896450e699f57cc233e340-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-17</Key><LastModified>2016-10-01T15:01:02.000Z</LastModified><ETag>&quot;111b906722d17ff86cf26beb351cb270-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-18</Key><LastModified>2016-10-01T15:01:02.000Z</LastModified><ETag>&quot;2c7e978966b5760cda5f8ab3dab2a53e-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-19</Key><LastModified>2016-10-01T15:01:02.000Z</LastModified><ETag>&quot;985f8c9cd5eace8b64ac99c0b7af0925-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-20</Key><LastModified>2016-10-01T15:01:02.000Z</LastModified><ETag>&quot;d5e05b8279123f0905940746426fab16-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-21</Key><LastModified>2016-10-01T15:01:02.000Z</LastModified><ETag>&quot;88798987f35f8944b09cea81f89fc88a-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-22</Key><LastModified>2016-10-01T15:01:03.000Z</LastModified><ETag>&quot;038e8e79d2cbf698064e64c835de61d8-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-23</Key><LastModified>2016-10-01T15:01:03.000Z</LastModified><ETag>&quot;f520e225143bce9aa710bf312fb97f9e-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-24</Key><LastModified>2016-10-01T15:01:03.000Z</LastModified><ETag>&quot;0e35498f45844b648f5a6f204c200e6c-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-25</Key><LastModified>2016-10-01T15:01:03.000Z</LastModified><ETag>&quot;63356daac1cc4b235b6f44718fe86de3-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-26</Key><LastModified>2016-10-01T15:01:03.000Z</LastModified><ETag>&quot;ea86be9e776167efa432f27bcbc6e67f-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-27</Key><LastModified>2016-10-01T15:01:03.000Z</LastModified><ETag>&quot;736f8e23a1580545b414019355f58560-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-28</Key><LastModified>2016-10-01T15:02:02.000Z</LastModified><ETag>&quot;03b80b2da64c15dacc8f955cfedb81de-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-29</Key><LastModified>2016-10-01T15:02:02.000Z</LastModified><ETag>&quot;7a84c18765258ab00a4db12f85f0b2f2-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-30</Key><LastModified>2016-10-01T15:02:02.000Z</LastModified><ETag>&quot;000708ddd745f2cb8fd84e5279804f3b-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>1971-01-31</Key><LastModified>2016-10-01T15:02:02.000Z</LastModified><ETag>&quot;39a4bcdfe0a50651bd080d5f6cf02556-2&quot;</ETag><Size>9763200</Size><Owner><ID>5342c023f89d3d7188e53ae40251431f3f8377b3f9008c012b9bc3651e6235cb</ID><DisplayName>andrew.holway</DisplayName></Owner><StorageClass>STANDARD</StorageClass></Contents></ListBucketResult>\r\n2016-11-30 23:04:13,234 botocore.hooks [DEBUG] Event needs-retry.s3.ListObjects: calling handler <botocore.retryhandler.RetryHandler object at 0x1b95310>\r\n2016-11-30 23:04:13,234 botocore.retryhandler [DEBUG] No retry needed.\r\n2016-11-30 23:04:13,235 botocore.hooks [DEBUG] Event needs-retry.s3.ListObjects: calling handler <bound method S3RegionRedirector.redirect_from_error of <botocore.utils.S3RegionRedirector object at 0x1cd86d0>>\r\n2016-11-30 23:04:13,235 botocore.hooks [DEBUG] Event after-call.s3.ListObjects: calling handler <function decode_list_object at 0x1160b90>\r\n2016-11-30 23:04:13,236 botocore.hooks [DEBUG] Event creating-resource-class.s3.ObjectSummary: calling handler <function _handler at 0x1682488>\r\n16/11/30 23:04:13 INFO YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (10.43.191.161:37640) with ID 16\r\n16/11/30 23:04:13 INFO BlockManagerMasterEndpoint: Registering block manager hadoop003.dbszod.aws.db.de:38293 with 366.3 MB RAM, BlockManagerId(16, hadoop003.dbszod.aws.db.de, 38293)\r\n16/11/30 23:04:13 INFO SparkContext: Starting job: runJob at PythonRDD.scala:441\r\n16/11/30 23:04:13 INFO DAGScheduler: Got job 0 (runJob at PythonRDD.scala:441) with 1 output partitions\r\n16/11/30 23:04:13 INFO DAGScheduler: Final stage: ResultStage 0 (runJob at PythonRDD.scala:441)\r\n16/11/30 23:04:13 INFO DAGScheduler: Parents of final stage: List()\r\n16/11/30 23:04:13 INFO DAGScheduler: Missing parents: List()\r\n16/11/30 23:04:13 INFO DAGScheduler: Submitting ResultStage 0 (PythonRDD[1] at RDD at PythonRDD.scala:48), which has no missing parents\r\n16/11/30 23:04:13 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 5.6 KB, free 366.3 MB)\r\n16/11/30 23:04:13 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 3.7 KB, free 366.3 MB)\r\n16/11/30 23:04:13 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on 10.43.191.178:43203 (size: 3.7 KB, free: 366.3 MB)\r\n16/11/30 23:04:13 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:1012\r\n16/11/30 23:04:13 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 0 (PythonRDD[1] at RDD at PythonRDD.scala:48)\r\n16/11/30 23:04:13 INFO YarnScheduler: Adding task set 0.0 with 1 tasks\r\n16/11/30 23:04:13 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0, hadoop002.dbszod.aws.db.de, partition 0, PROCESS_LOCAL, 5263 bytes)\r\n16/11/30 23:04:13 INFO YarnSchedulerBackend$YarnDriverEndpoint: Launching task 0 on executor id: 11 hostname: hadoop002.dbszod.aws.db.de.\r\n16/11/30 23:04:13 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on hadoop002.dbszod.aws.db.de:41191 (size: 3.7 KB, free: 366.3 MB)\r\n16/11/30 23:04:14 WARN TaskSetManager: Lost task 0.0 in stage 0.0 (TID 0, hadoop002.dbszod.aws.db.de): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000012/pyspark.zip/pyspark/worker.py\", line 172, in main\r\n    process()\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000012/pyspark.zip/pyspark/worker.py\", line 167, in process\r\n    serializer.dump_stream(func(split_index, iterator), outfile)\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000012/pyspark.zip/pyspark/serializers.py\", line 263, in dump_stream\r\n    vs = list(itertools.islice(iterator, batch))\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/rdd.py\", line 1306, in takeUpToNumLeft\r\n  File \"/home/centos/fun-functions/spark-parrallel-read-from-s3/tick.py\", line 38, in distributedJsonRead\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 526, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 141, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 166, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 150, in create_request\r\n    operation_name=operation_model.name)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 147, in sign\r\n    auth.add_auth(request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/auth.py\", line 678, in add_auth\r\n    raise NoCredentialsError\r\nNoCredentialsError: Unable to locate credentials\r\n\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.read(PythonRDD.scala:193)\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.<init>(PythonRDD.scala:234)\r\n\tat org.apache.spark.api.python.PythonRunner.compute(PythonRDD.scala:152)\r\n\tat org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:63)\r\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319)\r\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:283)\r\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70)\r\n\tat org.apache.spark.scheduler.Task.run(Task.scala:85)\r\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n16/11/30 23:04:14 INFO TaskSetManager: Starting task 0.1 in stage 0.0 (TID 1, hadoop001.dbszod.aws.db.de, partition 0, PROCESS_LOCAL, 5263 bytes)\r\n16/11/30 23:04:14 INFO YarnSchedulerBackend$YarnDriverEndpoint: Launching task 1 on executor id: 2 hostname: hadoop001.dbszod.aws.db.de.\r\n16/11/30 23:04:14 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on hadoop001.dbszod.aws.db.de:42634 (size: 3.7 KB, free: 366.3 MB)\r\n16/11/30 23:04:15 WARN TaskSetManager: Lost task 0.1 in stage 0.0 (TID 1, hadoop001.dbszod.aws.db.de): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000003/pyspark.zip/pyspark/worker.py\", line 172, in main\r\n    process()\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000003/pyspark.zip/pyspark/worker.py\", line 167, in process\r\n    serializer.dump_stream(func(split_index, iterator), outfile)\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000003/pyspark.zip/pyspark/serializers.py\", line 263, in dump_stream\r\n    vs = list(itertools.islice(iterator, batch))\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/rdd.py\", line 1306, in takeUpToNumLeft\r\n  File \"/home/centos/fun-functions/spark-parrallel-read-from-s3/tick.py\", line 38, in distributedJsonRead\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 526, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 141, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 166, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 150, in create_request\r\n    operation_name=operation_model.name)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 147, in sign\r\n    auth.add_auth(request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/auth.py\", line 678, in add_auth\r\n    raise NoCredentialsError\r\nNoCredentialsError: Unable to locate credentials\r\n\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.read(PythonRDD.scala:193)\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.<init>(PythonRDD.scala:234)\r\n\tat org.apache.spark.api.python.PythonRunner.compute(PythonRDD.scala:152)\r\n\tat org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:63)\r\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319)\r\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:283)\r\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70)\r\n\tat org.apache.spark.scheduler.Task.run(Task.scala:85)\r\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n16/11/30 23:04:15 INFO TaskSetManager: Starting task 0.2 in stage 0.0 (TID 2, hadoop001.dbszod.aws.db.de, partition 0, PROCESS_LOCAL, 5263 bytes)\r\n16/11/30 23:04:15 INFO YarnSchedulerBackend$YarnDriverEndpoint: Launching task 2 on executor id: 18 hostname: hadoop001.dbszod.aws.db.de.\r\n16/11/30 23:04:15 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on hadoop001.dbszod.aws.db.de:42807 (size: 3.7 KB, free: 366.3 MB)\r\n16/11/30 23:04:16 WARN TaskSetManager: Lost task 0.2 in stage 0.0 (TID 2, hadoop001.dbszod.aws.db.de): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/worker.py\", line 172, in main\r\n    process()\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/worker.py\", line 167, in process\r\n    serializer.dump_stream(func(split_index, iterator), outfile)\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/serializers.py\", line 263, in dump_stream\r\n    vs = list(itertools.islice(iterator, batch))\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/rdd.py\", line 1306, in takeUpToNumLeft\r\n  File \"/home/centos/fun-functions/spark-parrallel-read-from-s3/tick.py\", line 38, in distributedJsonRead\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 526, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 141, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 166, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 150, in create_request\r\n    operation_name=operation_model.name)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 147, in sign\r\n    auth.add_auth(request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/auth.py\", line 678, in add_auth\r\n    raise NoCredentialsError\r\nNoCredentialsError: Unable to locate credentials\r\n\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.read(PythonRDD.scala:193)\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.<init>(PythonRDD.scala:234)\r\n\tat org.apache.spark.api.python.PythonRunner.compute(PythonRDD.scala:152)\r\n\tat org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:63)\r\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319)\r\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:283)\r\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70)\r\n\tat org.apache.spark.scheduler.Task.run(Task.scala:85)\r\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n16/11/30 23:04:16 INFO TaskSetManager: Starting task 0.3 in stage 0.0 (TID 3, hadoop001.dbszod.aws.db.de, partition 0, PROCESS_LOCAL, 5263 bytes)\r\n16/11/30 23:04:16 INFO YarnSchedulerBackend$YarnDriverEndpoint: Launching task 3 on executor id: 18 hostname: hadoop001.dbszod.aws.db.de.\r\n16/11/30 23:04:16 INFO TaskSetManager: Lost task 0.3 in stage 0.0 (TID 3) on executor hadoop001.dbszod.aws.db.de: org.apache.spark.api.python.PythonException (Traceback (most recent call last):\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/worker.py\", line 172, in main\r\n    process()\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/worker.py\", line 167, in process\r\n    serializer.dump_stream(func(split_index, iterator), outfile)\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/serializers.py\", line 263, in dump_stream\r\n    vs = list(itertools.islice(iterator, batch))\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/rdd.py\", line 1306, in takeUpToNumLeft\r\n  File \"/home/centos/fun-functions/spark-parrallel-read-from-s3/tick.py\", line 38, in distributedJsonRead\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 526, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 141, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 166, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 150, in create_request\r\n    operation_name=operation_model.name)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 147, in sign\r\n    auth.add_auth(request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/auth.py\", line 678, in add_auth\r\n    raise NoCredentialsError\r\nNoCredentialsError: Unable to locate credentials\r\n) [duplicate 1]\r\n16/11/30 23:04:16 ERROR TaskSetManager: Task 0 in stage 0.0 failed 4 times; aborting job\r\n16/11/30 23:04:16 INFO YarnScheduler: Removed TaskSet 0.0, whose tasks have all completed, from pool \r\n16/11/30 23:04:16 INFO YarnScheduler: Cancelling stage 0\r\n16/11/30 23:04:16 INFO DAGScheduler: ResultStage 0 (runJob at PythonRDD.scala:441) failed in 2.779 s\r\n16/11/30 23:04:16 INFO DAGScheduler: Job 0 failed: runJob at PythonRDD.scala:441, took 3.000237 s\r\nTraceback (most recent call last):\r\n  File \"/home/centos/fun-functions/spark-parrallel-read-from-s3/tick.py\", line 47, in <module>\r\n    df = foo.toDF()\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/sql/session.py\", line 57, in toDF\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/sql/session.py\", line 520, in createDataFrame\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/sql/session.py\", line 360, in _createFromRDD\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/sql/session.py\", line 331, in _inferSchema\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/rdd.py\", line 1328, in first\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/rdd.py\", line 1310, in take\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/context.py\", line 941, in runJob\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/py4j-0.10.1-src.zip/py4j/java_gateway.py\", line 933, in __call__\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/sql/utils.py\", line 63, in deco\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/py4j-0.10.1-src.zip/py4j/protocol.py\", line 312, in get_return_value\r\npy4j.protocol.Py4JJavaError: An error occurred while calling z:org.apache.spark.api.python.PythonRDD.runJob.\r\n: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 4 times, most recent failure: Lost task 0.3 in stage 0.0 (TID 3, hadoop001.dbszod.aws.db.de): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/worker.py\", line 172, in main\r\n    process()\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/worker.py\", line 167, in process\r\n    serializer.dump_stream(func(split_index, iterator), outfile)\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/serializers.py\", line 263, in dump_stream\r\n    vs = list(itertools.islice(iterator, batch))\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/rdd.py\", line 1306, in takeUpToNumLeft\r\n  File \"/home/centos/fun-functions/spark-parrallel-read-from-s3/tick.py\", line 38, in distributedJsonRead\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 526, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 141, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 166, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 150, in create_request\r\n    operation_name=operation_model.name)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 147, in sign\r\n    auth.add_auth(request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/auth.py\", line 678, in add_auth\r\n    raise NoCredentialsError\r\nNoCredentialsError: Unable to locate credentials\r\n\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.read(PythonRDD.scala:193)\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.<init>(PythonRDD.scala:234)\r\n\tat org.apache.spark.api.python.PythonRunner.compute(PythonRDD.scala:152)\r\n\tat org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:63)\r\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319)\r\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:283)\r\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70)\r\n\tat org.apache.spark.scheduler.Task.run(Task.scala:85)\r\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\nDriver stacktrace:\r\n\tat org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1450)\r\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1438)\r\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1437)\r\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\r\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\r\n\tat org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1437)\r\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:811)\r\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:811)\r\n\tat scala.Option.foreach(Option.scala:257)\r\n\tat org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:811)\r\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1659)\r\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1618)\r\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1607)\r\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\r\n\tat org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:632)\r\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:1871)\r\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:1884)\r\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:1897)\r\n\tat org.apache.spark.api.python.PythonRDD$.runJob(PythonRDD.scala:441)\r\n\tat org.apache.spark.api.python.PythonRDD.runJob(PythonRDD.scala)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:237)\r\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\r\n\tat py4j.Gateway.invoke(Gateway.java:280)\r\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:128)\r\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\r\n\tat py4j.GatewayConnection.run(GatewayConnection.java:211)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: org.apache.spark.api.python.PythonException: Traceback (most recent call last):\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/worker.py\", line 172, in main\r\n    process()\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/worker.py\", line 167, in process\r\n    serializer.dump_stream(func(split_index, iterator), outfile)\r\n  File \"/hadoop/yarn/local/usercache/centos/appcache/application_1480271222291_0049/container_1480271222291_0049_01_000019/pyspark.zip/pyspark/serializers.py\", line 263, in dump_stream\r\n    vs = list(itertools.islice(iterator, batch))\r\n  File \"/usr/hdp/2.5.0.0-1245/spark2/python/lib/pyspark.zip/pyspark/rdd.py\", line 1306, in takeUpToNumLeft\r\n  File \"/home/centos/fun-functions/spark-parrallel-read-from-s3/tick.py\", line 38, in distributedJsonRead\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 526, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 141, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 166, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/endpoint.py\", line 150, in create_request\r\n    operation_name=operation_model.name)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/signers.py\", line 147, in sign\r\n    auth.add_auth(request)\r\n  File \"/usr/lib/python2.7/site-packages/botocore/auth.py\", line 678, in add_auth\r\n    raise NoCredentialsError\r\nNoCredentialsError: Unable to locate credentials\r\n\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.read(PythonRDD.scala:193)\r\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.<init>(PythonRDD.scala:234)\r\n\tat org.apache.spark.api.python.PythonRunner.compute(PythonRDD.scala:152)\r\n\tat org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:63)\r\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319)\r\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:283)\r\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70)\r\n\tat org.apache.spark.scheduler.Task.run(Task.scala:85)\r\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\t... 1 more\r\n\r\n16/11/30 23:04:16 INFO SparkContext: Invoking stop() from shutdown hook\r\n16/11/30 23:04:16 INFO ServerConnector: Stopped ServerConnector@237d61c{HTTP/1.1}{0.0.0.0:4040}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@78a5e137{/stages/stage/kill,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@42388e91{/api,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@222bd34d{/,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@11fdb674{/static,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@2ce2d8b1{/executors/threadDump/json,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@71623233{/executors/threadDump,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@3ef1a284{/executors/json,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@4b6ed980{/executors,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@55511187{/environment/json,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@6185cb32{/environment,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@19ed80e1{/storage/rdd/json,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@463b035e{/storage/rdd,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@3d112e33{/storage/json,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@5755e8b6{/storage,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@291ec2ea{/stages/pool/json,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@39085b34{/stages/pool,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@1e7e9a1d{/stages/stage/json,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@6b22b2e5{/stages/stage,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@1d01b0f7{/stages/json,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@520ebbf5{/stages,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@39499c00{/jobs/job/json,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@61f2f4f6{/jobs/job,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@948c112{/jobs/json,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO ContextHandler: Stopped o.s.j.s.ServletContextHandler@3bca1cc0{/jobs,null,UNAVAILABLE}\r\n16/11/30 23:04:16 INFO SparkUI: Stopped Spark web UI at http://10.43.191.178:4040\r\n16/11/30 23:04:16 INFO YarnClientSchedulerBackend: Interrupting monitor thread\r\n16/11/30 23:04:16 INFO YarnClientSchedulerBackend: Shutting down all executors\r\n16/11/30 23:04:16 INFO YarnSchedulerBackend$YarnDriverEndpoint: Asking each executor to shut down\r\n16/11/30 23:04:16 INFO SchedulerExtensionServices: Stopping SchedulerExtensionServices\r\n(serviceOption=None,\r\n services=List(),\r\n started=false)\r\n16/11/30 23:04:16 INFO YarnClientSchedulerBackend: Stopped\r\n16/11/30 23:04:16 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!\r\n16/11/30 23:04:16 INFO MemoryStore: MemoryStore cleared\r\n16/11/30 23:04:16 INFO BlockManager: BlockManager stopped\r\n16/11/30 23:04:16 INFO BlockManagerMaster: BlockManagerMaster stopped\r\n16/11/30 23:04:16 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!\r\n16/11/30 23:04:16 INFO SparkContext: Successfully stopped SparkContext\r\n16/11/30 23:04:16 INFO ShutdownHookManager: Shutdown hook called\r\n16/11/30 23:04:16 INFO ShutdownHookManager: Deleting directory /tmp/spark-bfa7840d-dae8-4e16-8902-f3b257c410cd/pyspark-4956dec2-33f4-49ab-b9e1-34453522ab4c\r\n16/11/30 23:04:16 INFO ShutdownHookManager: Deleting directory /tmp/spark-bfa7840d-dae8-4e16-8902-f3b257c410cd\r\n\r\n``` @JordonPhillips Its rather messy but I am initiating a new instance of the class:\r\n\r\nbefore parallel:\r\n```\r\ns3 = boto3.resource('s3')\r\nmy_bucket = s3.Bucket('time-waits-for-no-man')\r\nfor object in my_bucket.objects.filter(Prefix='1971-01'):\r\n    s3_list.append(object.key)\r\n```\r\nin my parralleized function:\r\n\r\n```\r\ndef distributedJsonRead(s3Key):\r\n    s3obj = boto3.resource('s3').Object(bucket_name='time-waits-for-no-man', key=s3Key)\r\n    contents = s3obj.get()['Body'].read().decode()\r\n```\r\n\r\nCheers,\r\n\r\nAndrew\r\n I had the same issue and I 've tried \"session\" as well and it doesn't work.\r\nMy code is like\r\n```\r\nimport boto3\r\n\r\nsession = boto3.session.Session()\r\nclient = session.client('s3', region_name='ap-southeast-2')\r\n```\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/minddriven/workspace/ww/data-one-one/spark_jobs/parallel_cp/./parallel_cp.py\", line 11, in <module>\r\n    client = session.client('s3', region_name='ap-southeast-2')\r\n  File \"/Users/minddriven/workspace/ww/data-one-one/spark_jobs/parallel_cp/deps.zip/boto3/session.py\", line 263, in client\r\n  File \"/Users/minddriven/workspace/ww/data-one-one/spark_jobs/parallel_cp/deps.zip/botocore/session.py\", line 826, in create_client\r\n  File \"/Users/minddriven/workspace/ww/data-one-one/spark_jobs/parallel_cp/deps.zip/botocore/session.py\", line 701, in get_component\r\n  File \"/Users/minddriven/workspace/ww/data-one-one/spark_jobs/parallel_cp/deps.zip/botocore/session.py\", line 897, in get_component\r\n  File \"/Users/minddriven/workspace/ww/data-one-one/spark_jobs/parallel_cp/deps.zip/botocore/session.py\", line 186, in create_default_resolver\r\n  File \"/Users/minddriven/workspace/ww/data-one-one/spark_jobs/parallel_cp/deps.zip/botocore/loaders.py\", line 132, in _wrapper\r\n  File \"/Users/minddriven/workspace/ww/data-one-one/spark_jobs/parallel_cp/deps.zip/botocore/loaders.py\", line 424, in load_data\r\nbotocore.exceptions.DataNotFoundError: Unable to load data for: endpoints @ttangww your issue appears to be something else, in your case it is unable to find the data files that should be bundled with botocore. I'm closing out this issue, but feel free to open another if this persists.  Just wondering whether this is on the roadmap, or whether you would accept a pull request if someone wanted to write a resource-based frontend to RDS that behaves similarly to the one for EC2.\r\n\r\n(I ask because I have a bunch of- separate- code for reviewing metadata of EC2 and RDS instances, and an RDS resource type would mean I could just use the EC2 resource code for most of it.)  Function get_queue_url() in SQS (http://boto3.readthedocs.io/en/latest/reference/services/sqs.html#SQS.Client.get_queue_url) is not working correctly. As an example, when I request the URL for my SQS Queue 'MyQueue',\r\n\r\nthis function returns: 'https://us-east-2.queue.amazonaws.com/123456789012/MyQueue'\r\nbut the correct one is: 'https://sqs.us-east-2.amazonaws.com/123456789012/MyQueue'\r\n\r\nThe value returned by the boto3 function is missing the 'sqs' at the beginning of the URL.\r\n\r\nI created AWS Support ticket #1958660791 for this too. The CLI/boto still support python 2.6 which has a bug in its SSL handling that will cause a cert validation error if we try to use the url that starts with 'sqs'. So until we can drop support for 2.6 we are stuck using the legacy urls for SQS, the url still should work fine though.\r\n\r\nIf you want more information about the bug: http://bugs.python.org/issue13034  Hi! I've got some code that does:\r\n\r\n```\r\ndef _domains():\r\n          _db = boto.client('sdb')\r\n          domains = []\r\n          response = _db.list_domains()\r\n          while 'NextToken' in response:\r\n              domains.extend(response['DomainNames'])\r\n              response = _db.list_domains(NextToken=response['NextToken'])\r\n          domains.extend(response['DomainNames'])\r\n          return domains\r\n```\r\n\r\n...but after getting `KeyError: 'DomainNames'` I printed out `response` and was surprised to find it was:\r\n```\r\n{'ResponseMetadata': {\r\n    'RetryAttempts': 0, \r\n    'HTTPStatusCode': 200, \r\n    'BoxUsage': '0.0000071759', \r\n    'RequestId': '4b262d7a-c389-3fbb-b3ea-d6f193579d4c', \r\n    'HTTPHeaders': {'transfer-encoding': 'chunked', \r\n         'vary': 'Accept-Encoding',\r\n         'server': 'Amazon SimpleDB', \r\n         'connection': 'keep-alive',\r\n         'date': 'Mon, 21 Nov 2016 21:25:32 GMT',\r\n         'content-type': 'text/xml'}\r\n}}\r\n```\r\n...any idea why that might be? The [docs](https://boto3.readthedocs.io/en/latest/reference/services/sdb.html#SimpleDB.Client.list_domains) don't say anything about a response like that.\r\n Honestly, I rewrote it to use DynamoDB, which had no such unwelcome surprises.  https://aws.amazon.com/blogs/compute/introducing-simplified-serverless-application-deplyoment-and-management/\r\n\r\n> \"This seems like a long process, especially if you have multiple Lambda functions (you would have to go through steps 1 to 3 for each function). Luckily, the new \u2018Package\u2019 and \u2018Deploy\u2019 commands from CloudFormation take care of all five steps for you!\"\r\n\r\nI don't see these methods in CloudFormation boto3 methods The commands you are referencing were written as customizations for the cli specifically because it has special usage cases the SDKs don't. If you would like to see this added as a command to the service itself you can request that directly from the service team: https://forums.aws.amazon.com/forum.jspa?forumID=92  I used to run my flask service under python2.7, but I upgraded to python3 and now I get this new error that was never seen under python 2.7\r\n\r\nLine 149 https://github.com/boto/boto3/blob/develop/boto3/resources/action.py\r\nlogger.info('Calling %s:%s with %r',\r\n    service_name, operation_name, params)\r\n\r\nThe original exception looks to happen when (rarely) a dynamodb put_item write fails:\r\nBlockingIOError: [Errno 11] write could not complete without blocking\r\nThese types of errors coincide when I write a large amount of data for a key in my database.\r\n\r\nI think this is then caught on line 149 of action.py and the logger.info() formatting is goofing up (i.e. the only time I see \"--- Logging error ---\" is when I have formatting of the parameters to logger.info() wrong.\r\n\r\nI see this bug in 2 places of the action.py code.  Line 80/81 & 149/150 (and it would probably also happen at lines 196/197)\r\n\r\nPartial stack Nov 23, 2016:\r\n==================\r\n--- Logging error ---\r\nTraceback (most recent call last):\r\nFile \\\"/opt/services/myflask-service/python_install_dir/lib/python3.5/logging/__init__.py\\\", line 982, in emit\\n\"\r\n    stream.write(msg)\\\r\nOSError: [Errno 90] Message too long\r\nCall stack:\r\n. . .\r\n  File \"/opt/services/myflask-service/python_install_dir/lib/python3.5/site-packages/boto3/resources/action.py\\\", line 81, in __call__\r\n    operation_name, params)\r\nUnable to print the message and arguments - possible formatting error.\r\nUse the traceback above to help find the error.\r\n\r\n\r\nFull stack Nov 16, 2016:\r\n==================\r\n{\"msg\":\"Traceback (most recent call last):\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.670765Z\"}\r\n{\"msg\":\"--- Logging error ---\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.670490Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/python_install_dir/lib/python3.5/logging/__init__.py\\\", line 983, in emit\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.671094Z\"}\r\n{\"msg\":\"    stream.write(self.terminator)\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.675451Z\"}\r\n{\"msg\":\"BlockingIOError: [Errno 11] write could not complete without blocking\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.675739Z\"}\r\n{\"msg\":\"Call stack:\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.676119Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask-service/lib/python3.5/site-packages/flask/app.py\\\", line 1836, in __call__\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.676425Z\"}\r\n{\"msg\":\"    return self.wsgi_app(environ, start_response)\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.678074Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask-service/lib/python3.5/site-packages/flask/app.py\\\", line 1817, in wsgi_app\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.678337Z\"}\r\n{\"msg\":\"    response = self.full_dispatch_request()\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.678590Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask-service/lib/python3.5/site-packages/flask/app.py\\\", line 1475, in full_dispatch_request\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.678847Z\"}\r\n{\"msg\":\"    rv = self.dispatch_request()\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.679112Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask-service/lib/python3.5/site-packages/flask/app.py\\\", line 1461, in dispatch_request\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.679381Z\"}\r\n{\"msg\":\"    return self.view_functions[rule.endpoint](**req.view_args)\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.679647Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask-service/lib/python3.5/site-packages/flask_transmute/flask/method_wrapper.py\\\", line 29, in wrapper_func\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.679893Z\"}\r\n{\"msg\":\"    result = tf.raw_func(*args, **kwargs)\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.680138Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask_service/routes/event_loop.py\\\", line 14, in get_manage_queues\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.680400Z\"}\r\n{\"msg\":\"    app.data.queue_mgr.process_queues()\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.680654Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask_service/lib/queue_manager.py\\\", line 1024, in process_queues\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.680927Z\"}\r\n{\"msg\":\"    queue_size_reduced = self.schedule_to_aws()\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.681200Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask_service/lib/queue_manager.py\\\", line 1139, in schedule_to_aws\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.681452Z\"}\r\n{\"msg\":\"    if not self.db_queue.delete_queue_item(top_item):\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.681721Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask_service/lib/db_manager.py\\\", line 969, in delete_queue_item\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.681970Z\"}\r\n{\"msg\":\"    return self.write_queue(queue_dic, attempts=attempts)\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.682241Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask_service/lib/db_manager.py\\\", line 887, in write_queue\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.682494Z\"}\r\n{\"msg\":\"    return self.write_item(SINGLE_RECORD_STR, data_val, attempts=attempts)\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.682737Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask_service/lib/db_manager.py\\\", line 409, in write_item\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.682974Z\"}\r\n{\"msg\":\"    self._dbtype_str+key_val, data_val, attempts=attempts)\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.683226Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask_service/lib/db_manager.py\\\", line 135, in write_item\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.683476Z\"}\r\n{\"msg\":\"    response = self._table.put_item(Item={self._key_hash_name: key_val, self._data_name: data_val})\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.683751Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask-service/lib/python3.5/site-packages/boto3/resources/factory.py\\\", line 520, in do_action\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.684000Z\"}\r\n{\"msg\":\"    response = action(self, *args, **kwargs)\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.684248Z\"}\r\n{\"msg\":\"  File \\\"/opt/services/myflask-service/myflask-service/lib/python3.5/site-packages/boto3/resources/action.py\\\", line 81, in __call__\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.684532Z\"}\r\n{\"msg\":\"    operation_name, params)\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.684803Z\"}\r\n{\"msg\":\"Message: 'Calling %s:%s with %r'\\n\",\"app\":\"error-a.myflask-service\",\"env\":\"monitor\",\"fmt\":\"ae1\",\"hst\":\"host-001\",\"tsi\":\"2016-11-16T23:01:47.685116Z\"} I figured out a work-around.  The original boto3 develop/boto3/resources/action.py \"logging to much\" issue still exists.\r\nI cap the message portion to 16,000 bytes and then boto3 no longer logs something too long.\r\n\r\nExample of solution:\r\n---------------------\r\n```\r\nout_hdlr = logging.StreamHandler(sys.stdout)\r\n# Cap message size so boto3 doesn't throw a secondary \"OSError: [Errno 90] Message too long\"\r\n# stack (which is originally triggered by a large dynamodb write that fails).\r\nformatter  = logging.Formatter(fmt='%(asctime)s - %(name)s - %(levelname)s - %(message).16000s')\r\nout_hdlr.setFormatter(formatter)\r\nlogger = logging.getLogger()\r\nlogger.addHandler(out_hdlr)\r\n``` I too am having trouble 100% characterizing this problem.  When I try a manual setup (in python3 command line interpreter) and try logging.info() of 10 million character message it doesn't have a problem.\r\nNow there are a few differences with my manual try and the error case in boto3:\r\n1. Not running inside Flask.\r\n2. Not running with our logging redirector that writes to a queue.\r\n\r\nOur uwsgi service redirects to our own logging service that writes to RabbitMQ.\r\nWe sometimes saw the \"BlockingIOError: [Errno 11] write could not complete without blocking\" message, so I suspect our logging redirector caps at 16K and sends back an error and then we get \"OSError: [Errno 90] Message too long\" coming back to the boto3-python process.\r\n\r\nOverall other customers might not encounter this problem because they probably log differently.\r\nMaybe the best that could be done is to have those 3 locations inside action.py to have some reasonable (but large) capping of the log message - because other customers may run into this in the future.\r\n\r\nINFO:\r\n-----------\r\nOur code runs inside of Flask uwsgi (fronted by apache).\r\nWe use our own JSONLoggingFormatter object for formatting our log mesages, but it just does a json.dumps:\r\n```\r\nclass JSONLoggingFormatter(logging.Formatter):\r\n    MAP_PYTHON_LEVEL_TO_LVL = {logging.CRITICAL: 'FATAL', logging.ERROR: 'ERROR',\r\n        logging.WARNING: 'WARN', logging.INFO: 'INFO', logging.DEBUG: 'DEBUG'}\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        logging.Formatter.__init__(self, *args, **kwargs)\r\n        self._fqdn = socket.getfqdn()\r\n\r\n    def format(self, record):\r\n        fields = {}\r\n        fields.update({\r\n            'hst': self._fqdn,\r\n            'lvl': self.MAP_PYTHON_LEVEL_TO_LVL.get(record.levelno),\r\n            # Use the base logging.Formatter in order to format any exceptions properly.\r\n            'msg': logging.Formatter.format(self, record),\r\n            'pid': record.process,\r\n            'tid': record.thread,\r\n            # Python does not include the ISO8601 Z suffix when formatting a naive datetime\r\n            # so explicitly include it.\r\n            'tsi': datetime.datetime.utcfromtimestamp(record.created).isoformat() + 'Z'\r\n        })\r\n        return json.dumps(fields, separators=(',', ':'))\r\n\r\nout_hdlr = logging.StreamHandler(sys.stdout)\r\nout_hdlr.setFormatter(JSONLoggingFormatter())\r\nout_hdlr.setLevel(logging.INFO)\r\nlogger = logging.getLogger()\r\nlogger.addHandler(out_hdlr)\r\nlogger.setLevel(logging.INFO)\r\n```\r\n\r\nSomehow when certain exceptions are thrown (like failing to write large key/val to DynamoDB) then with this logger setup, then the boto3/blob/develop/boto3/resources/action.py ends up logging something too large.\r\nLine 149 logger.info('Calling %s:%s with %r', service_name, operation_name, params)  Hi.\r\n\r\nI am trying to set up stage setting for specific method in my gateway using boto3 client. I am using boto3 version 1.4.0.\r\n\r\nHere is my try code:\r\n```\r\n    client = boto3.client('apigateway')\r\n\r\n    # ... some code ...\r\n        response = client.create_deployment(\r\n            restApiId=api[\"id\"],\r\n            stageName=stage_name,\r\n            description=\"[%s] deployment v%s\" % (stage_name, project_version)\r\n        )\r\n\r\n        response = client.update_stage(\r\n            restApiId=api[\"id\"],\r\n            stageName=stage_name,\r\n            patchOperations=[\r\n                {\r\n                    'op': 'replace',\r\n                    'path': '/*/*/logging/loglevel',\r\n                    'value': config.get('logging.Level')\r\n                },\r\n                {\r\n                    'op': 'replace',\r\n                    'path': '/*/*/logging/dataTrace',\r\n                    'value': config.get('logging.LogFullData')\r\n                },\r\n                {\r\n                    'op': 'replace',\r\n                    'path': '/*/*/metrics/enabled',\r\n                    'value': config.get('logging.EnableMetrics')\r\n                },\r\n            {\r\n                'op': 'replace',\r\n                'path': '/*/*/throttling/burstLimit',\r\n                'value': '1500',\r\n            },\r\n            {\r\n                'op': 'replace',\r\n                'path': '/*/*/throttling/rateLimit',\r\n                'value': '500',\r\n            },\r\n            {\r\n                'op': 'replace',\r\n                'path': '/image/POST/throttling/rateLimit',\r\n                'value': '600',\r\n            }\r\n            ]\r\n        )\r\n    # ... some code ...\r\n```\r\nI am getting correct response with all values I have set but...\r\n...this statement has no effect for /image/POST/throttling/rateLimit. Values are still inherited from root stage config. Moreover when I try to manually set up this value by AWS console this doesn't work also. But I found some info in AWS doc that this dont work by console.\r\n\r\nMy throttling limits does not exceed account limits. I mean that I can set up throttling level and other settings (in console go to API Gateway -> your API -> stage -> your deployed stage (eg: DEV). And here you have root level settings. Here all is fine. But when you go deeper to specific setting of any method: expand your deployed stage (eg: DEV) -> chose some method of your API -> check \"override method settings\" and you try to override it then this dont works from boto client :/ You cannot configure your stage at method level, only on root level :( I'm not sure if this is boto3 bug or AWS itself.  According to the docs on the delete_application_version function for elasticbeanstalk ([link]( \r\nhttps://boto3.readthedocs.io/en/latest/reference/services/elasticbeanstalk.html#ElasticBeanstalk.Clientdelete_application_version))  it says you shouldn't be able to delete an application version that is associated with a running environment, this is not actually the case.... I was able to delete versions associated with running environments multiple times, with both DeleteResourceBundle set to `True` and `False`.\r\n\r\nPython: 3.5.1+\r\nboto3: 1.4.1\r\nbotocore: 1.4.65\r\n  It will be great if we could actually read the s3 file streamed line by line and supporting the python file iterator protocol  I have a function that iterate over objects in a S3 bucket using bucket's filter method:\r\n`{object.key : (object.size, object.last_modified) for object in bucket.objects.filter(Prefix=prefix)}`\r\n\r\nbut from time o time I receive this error:\r\n\r\n>   /usr/local/lib/python3.4/dist-packages/boto3/resources/collection.py:83 ........... __iter__ >> for page in self.pages():\r\n  /usr/local/lib/python3.4/dist-packages/boto3/resources/collection.py:166 ............. pages >> for page in pages:\r\n  /usr/local/lib/python3.4/dist-packages/botocore/paginate.py:102 ................... __iter__ >> response = self._make_request(current_kwargs)\r\n  /usr/local/lib/python3.4/dist-packages/botocore/paginate.py:174 .............. _make_request >> return self._method(**current_kwargs)\r\n  /usr/local/lib/python3.4/dist-packages/botocore/client.py:251 .................... _api_call >> return self._make_api_call(operation_name, kwargs)\r\n  /usr/local/lib/python3.4/dist-packages/botocore/client.py:526 ............... _make_api_call >> operation_model, request_dict)\r\n  /usr/local/lib/python3.4/dist-packages/botocore/endpoint.py:141 ............... make_request >> return self._send_request(request_dict, operation_model)\r\n  /usr/local/lib/python3.4/dist-packages/botocore/endpoint.py:168 .............. _send_request >> request, operation_model, attempts)\r\n  /usr/local/lib/python3.4/dist-packages/botocore/endpoint.py:233 .............. _get_response >> response_dict, operation_model.output_shape)\r\n  /usr/local/lib/python3.4/dist-packages/botocore/parsers.py:211 ....................... parse >> parsed = self._do_parse(response, shape)\r\n  /usr/local/lib/python3.4/dist-packages/botocore/parsers.py:605 ................... _do_parse >> self._parse_payload(response, shape, member_shapes, final_parsed)\r\n  /usr/local/lib/python3.4/dist-packages/botocore/parsers.py:638 .............. _parse_payload >> original_parsed = self._initial_body_parse(response['body'])\r\n  /usr/local/lib/python3.4/dist-packages/botocore/parsers.py:713 ......... _initial_body_parse >> return self._parse_xml_string_to_dom(xml_string)\r\n  /usr/local/lib/python3.4/dist-packages/botocore/parsers.py:389 .... _parse_xml_string_to_dom >> \"invalid XML received:\\n%s\" % (e, xml_string))\r\nbotocore.parsers.ResponseParserError: Unable to parse response (unclosed token: line 1, column 0), invalid XML received:\r\nb'<'\r\n\r\nany reason why I receive this error? and can't boto be able to catch this and retry before failing? Getting the same error here, using bota3 1.4.0.  When I attempt to call copy_snapshot using the DestinationRegion parameter, it is ignored in favour of the region that the Lambda is run from. \r\n\r\nFor example, I wanted to copy a snapshot from us-east-1 to us-west-2, so I made this call similar to the one in the boto3 docs:\r\n\r\n```\r\nresponse = ec2.copy_snapshot(\r\n    SourceSnapshotId='snapshotId',\r\n    DestinationRegion='us-west-2',\r\n    SourceRegion='us-east-1',\r\n    Description = \"TEST\"\r\n)\r\n\r\n```\r\n\r\nThe response that I receive looks correct, however instead of the copy going to us-west-2, it winds up in the region from which I call the Lambda which is generally us-east-1. \r\n\r\nWhen I make the call using the AWS CLI, I get the same result as I expect (copy goes to us-west-2), so I feel like this is an issue on boto's end. @JordonPhillips If this is the case, does that mean that I'm limited to copying snapshots to regions that support Lambda if I want to use a Lambda function to do so and am out of luck for regions that do not (us-west-1 for example), or is there a way to get around this?\n @JordonPhillips Alright, I get what you're saying, thanks a lot for the help!\n I was going to point out the inconsistency in the [boto3 documentation](https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.copy_snapshot) (DestinationRegion is described in the Parameters section, but not used in the Request Syntax section)... but now that I read this...\r\n\r\nIf I read correctly, you're saying the ec2 client.copy_snapshot does not use the DestinationRegion at all, because it uses the \"current\" region (from the client's session) as the destination. And, indeed, it **requires** the SourceRegion argument (feels like we could call this a \"pull\" model).\r\n\r\nIf I'm writing a script to run, for instance, on my machine, I can establish a session with the source region, [look among the snapshots](https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Paginator.DescribeSnapshots) to find one I wish to copy (grab its id), then establish a separate/new session with the destination region, and use the ec2 client copy_snapshot to perform the copy.\r\nFeels a bit clunky, but ...hmm.. ok..\r\n\r\nBut if I am a Lambda?\r\nIf I'm a Lambda running _in the source region_, then it's easy to look at the snapshots available to find the one I want to copy, but then I have to make a separate session with the destination region, and use that client's copy_snapshot method. Right?\r\n\r\n'Cause if my Lambda was running _in the destination region_ (in which case the client on which I call copy_snapshot can use the implicit current region), I don't think I have a way to get the list of available snapshots from the source region ([no filter in DescribeSnapshots talks about regions](https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Paginator.DescribeSnapshots))... except by opening a separate session with the source region and using a client from that session ...\r\n\r\nIt does feel clunky, doesn't it?\r\n  Hello,\r\n\r\nApologies if this is not the right place to file this issues. But please let me try to explain my situation.\r\n\r\nI have an API Gateway that can successfully call a lambda function. This lambda function base on a certain condition should invoke another lambda function. The code is very simple:\r\n\r\n``` python\r\nimport boto3, json, logging\r\nlogger = logging.getLogger()\r\nlogger.setLevel(logging.INFO)\r\n\r\nclient = boto3.client('lambda')\r\n\r\ndef lambda_handler(event, context):\r\n    raw_event = event.get('body')\r\n    if raw_event.get('event') == \"voicecall_final\":\r\n        # trigger the next lambda function\r\n        res = client.invoke(\r\n            FunctionName='aggregate',\r\n            InvocationType='RequestResponse',\r\n            Payload=json.dumps({'engagement_id': raw_event.get('engagement_id')})\r\n        )\r\n```\r\n\r\nHowever I can't seem to reach other function, the other function is just printing the payload for now. I cannot even get the `res` variable. Here are the logs:\r\n```\r\nSTART RequestId: 21583ec8-a737-11e6-8d5b-a76626b2b591 Version: $LATEST\r\n[INFO]\t2016-11-10T11:16:30.994Z\t21583ec8-a737-11e6-8d5b-a76626b2b591\tStarting new HTTPS connection (1): lambda.us-west-2.amazonaws.com\r\nEND RequestId: 21583ec8-a737-11e6-8d5b-a76626b2b591\r\nREPORT RequestId: 21583ec8-a737-11e6-8d5b-a76626b2b591\tDuration: 3002.54 ms\tBilled Duration: 3000 ms \tMemory Size: 128 MB\tMax Memory Used: 22 MB\t\r\n2016-11-10T11:16:33.977Z 21583ec8-a737-11e6-8d5b-a76626b2b591 Task timed out after 3.00 seconds\r\n```\r\n\r\nThis is running under a VPC and I set the security group to accept all inbound and outbound connection. I use `arn:aws:iam::aws:policy/AWSLambdaFullAccess` manage role for both of them.\r\n\r\nAm I missing something here? @JordonPhillips hmm, I'm only triggering the other lambda function if a certain condition is met, I'm not sure if that means double billed.\n\nOn the other hand, we are trying to print on the second function, I'm not sure what can I still optimized there. Indeed, I should call the other function asynchronously.\n\nHowever, this seems to be some user permission issue that I can't debug, I tried to do it in my personal root account and everything seems perfectly fine.\n\nThanks for responding though. Closing this now.\n I am having similar issue, I am unable to invoke lambda function asynchronously. Is there something I am missing. @jgardezi as it turns out, my problem was I was running it on a public subnet, and lambda doesn't have an elastic ip to use internet gateway. So switching to private subnet with a nat solves my problem. I hope that helps you or have more clue about your problem. I am running Lambda as Kinesis consumer and invoking function in itself.\r\n\r\n```\r\ncalled_function = context.invoked_function_arn\r\n\r\nlambda_client = boto3.client('lambda', region_name='my-region')\r\n        lambda_client.invoke(\r\n            FunctionName=called_function,\r\n            InvocationType='Event',\r\n            Payload=bytes(json.dumps(event_to_send))\r\n        )\r\n``` \r\n\r\n  I am trying to use boto's multipart upload API in my application. But it is failing with \r\n\r\n> The request signature we calculated does not match the signature you\r\n>  provided. Check your key and signing method\r\n\r\nHere are the error details \r\n\r\n```\r\n    import boto\r\n    \r\n    import boto3\r\n    \r\n    s3_conn = boto.s3.connect_to_region('eu-central-1', aws_access_key_id=******, aws_secret_access_key=*****)\r\n    \r\n    buckt = s3_conn.get_bucket('phoenix-4-147757042135')\r\n    \r\n    mpuid = buckt.initiate_multipart_upload('4/5137/data_6000C298-a994-efe2-7e3b-efb3fd5a6c76/FULL/amar')\r\n    \r\n    mpuid.copy_part_from_key('phoenix-4-147757042135', '4/5137/data_6000C298-a994-efe2-7e3b-efb3fd5a6c76/FULL/10000000', 1, 0, 1)\r\n    \r\n    \r\n    Traceback (most recent call last):\r\n      File \"<stdin>\", line 1, in <module>\r\n      File \"/usr/lib/python2.6/site-packages/boto-2.39.0-py2.6.egg/boto/s3/multipart.py\", line 306, in copy_part_from_key\r\n        query_args=query_args)\r\n      File \"/usr/lib/python2.6/site-packages/boto-2.39.0-py2.6.egg/boto/s3/bucket.py\", line 889, in copy_key\r\n        response.reason, body)\r\n    boto.exception.S3ResponseError: S3ResponseError: 403 Forbidden\r\n    <Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your key and signing method.</Message><AWSAccessKeyId>ASIAIZZPTQJ3AWY3WG2Q</AWSAccessKeyId><StringToSign>AWS4-HMAC-SHA256\r\n    20161110T051801Z\r\n    20161110/eu-central-1/s3/aws4_request\r\n    bb44a9b3366ce1702d2850188d998eab092746bea906b50481ffe814137efde9</StringToSign><SignatureProvided>2d8b63e0c6f29d602e34ab426bf5704fcaaf6ae15c19550f047931a1da351211</SignatureProvided><StringToSignBytes>41 57 53 34 2d 48 4d 41 43 2d 53 48 41 32 35 36 0a 32 30 31 36 31 31 31 30 54 30 35 31 38 30 31 5a 0a 32 30 31 36 31 31 31 30 2f 65 75 2d 63 65 6e 74 72 61 6c 2d 31 2f 73 33 2f 61 77 73 34 5f 72 65 71 75 65 73 74 0a 62 62 34 34 61 39 62 33 33 36 36 63 65 31 37 30 32 64 32 38 35 30 31 38 38 64 39 39 38 65 61 62 30 39 32 37 34 36 62 65 61 39 30 36 62 35 30 34 38 31 66 66 65 38 31 34 31 33 37 65 66 64 65 39</StringToSignBytes><CanonicalRequest>PUT\r\n    /4/5137/data_6000C298-a994-efe2-7e3b-efb3fd5a6c76/FULL/amar\r\n    partNumber=1&amp;uploadId=PMd350jeac8vLRuC7qf9CEBckNBqXGWdaEL32a.bCw3Zet.K1IInwYmDEEnkU98.xHSnlucJLeis49yMg2M.NoyOdwAVU8VMYcve6Sv5ExJ8Yh9pc7UJrxli5O2p6PqxH83.I_pcIGttaybTT0ul2nwc79DOUSIpKO8TlMosfNI-\r\n    host:phoenix-4-147757042135.s3.eu-central-1.amazonaws.com\r\n    user-agent:Boto/2.39.0 Python/2.6.6 Linux/2.6.32-431.20.3.el6.x86_64\r\n    x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\r\n    x-amz-copy-source:phoenix-4-147757042135/4/5137/data_6000C298-a994-efe2-7e3b-efb3fd5a6c76/FULL/10000000\r\n    x-amz-copy-source-range:bytes=0-1\r\n    x-amz-date:20161110T051801Z\r\n    x-amz-security-token:FQoDYXdzEFYaDOR7x87//+eMX2hqwyK9A6+FKe1SX8gN2bpcbRJPuJxLZC+zP62TnzqoXA1lPvdKhjWpJI0v0UZ46Y+IcvbflIQXq438R8kC5QHJZHLx/fsDC7lPYLuDPA3d43V+cc28cn44pjD34DQpy0RKGMc7GJljZR+ijOb3m8e6bxv4c4kN83Kv+Gs7UBBa5EoGeg4NHN3neNN8g2u68Ad0uouPDV1Wvuiijbfp6ZIaT4LZFbq3mE11ZXiBjQDSDTDcLpO+ek3VCck6bpzquT/jDc8Jzrm6/rS8Giqs/xWLiATa4VqxVXzvbQ2Pu4Tv0kfCU7uc6DWMrBMhejj97s/HKLU0b12mcQ65T+FcieYALPfM4qPf27ZZVsjXWkCzkrMu8qOAblqpVCG15A2snZn0Ke6T7JF6ONGKkr1jSQ3Tv93C5/j6HuQOIcsuRKDLkBLgffOAyIzDzY2xBQvBIABTk0ENcLkgYzNLKsWLFuI3Pry24qcXVCSzXruyEE2neqZp8ohAvVh0WPZOtxmPOTbGgqRn2xEgb3yODAyz7+KOemRvfyGgxBGmvvSnuLrr24vY/6Inm49Q736eT7d5xmzflbLG6cdtBejyKmgttcOpuiEo9f2PwQU=\r\n    \r\n    host;user-agent;x-amz-content-sha256;x-amz-copy-source;x-amz-copy-source-range;x-amz-date;x-amz-security-token\r\n    e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855</CanonicalRequest><CanonicalRequestBytes>50 55 54 0a 2f 34 2f 35 31 33 37 2f 64 61 74 61 5f 36 30 30 30 43 32 39 38 2d 61 39 39 34 2d 65 66 65 32 2d 37 65 33 62 2d 65 66 62 33 66 64 35 61 36 63 37 36 2f 46 55 4c 4c 2f 61 6d 61 72 0a 70 61 72 74 4e 75 6d 62 65 72 3d 31 26 75 70 6c 6f 61 64 49 64 3d 50 4d 64 33 35 30 6a 65 61 63 38 76 4c 52 75 43 37 71 66 39 43 45 42 63 6b 4e 42 71 58 47 57 64 61 45 4c 33 32 61 2e 62 43 77 33 5a 65 74 2e 4b 31 49 49 6e 77 59 6d 44 45 45 6e 6b 55 39 38 2e 78 48 53 6e 6c 75 63 4a 4c 65 69 73 34 39 79 4d 67 32 4d 2e 4e 6f 79 4f 64 77 41 56 55 38 56 4d 59 63 76 65 36 53 76 35 45 78 4a 38 59 68 39 70 63 37 55 4a 72 78 6c 69 35 4f 32 70 36 50 71 78 48 38 33 2e 49 5f 70 63 49 47 74 74 61 79 62 54 54 30 75 6c 32 6e 77 63 37 39 44 4f 55 53 49 70 4b 4f 38 54 6c 4d 6f 73 66 4e 49 2d 0a 68 6f 73 74 3a 70 68 6f 65 6e 69 78 2d 34 2d 31 34 37 37 35 37 30 34 32 31 33 35 2e 73 33 2e 65 75 2d 63 65 6e 74 72 61 6c 2d 31 2e 61 6d 61 7a 6f 6e 61 77 73 2e 63 6f 6d 0a 75 73 65 72 2d 61 67 65 6e 74 3a 42 6f 74 6f 2f 32 2e 33 39 2e 30 20 50 79 74 68 6f 6e 2f 32 2e 36 2e 36 20 4c 69 6e 75 78 2f 32 2e 36 2e 33 32 2d 34 33 31 2e 32 30 2e 33 2e 65 6c 36 2e 78 38 36 5f 36 34 0a 78 2d 61 6d 7a 2d 63 6f 6e 74 65 6e 74 2d 73 68 61 32 35 36 3a 65 33 62 30 63 34 34 32 39 38 66 63 31 63 31 34 39 61 66 62 66 34 63 38 39 39 36 66 62 39 32 34 32 37 61 65 34 31 65 34 36 34 39 62 39 33 34 63 61 34 39 35 39 39 31 62 37 38 35 32 62 38 35 35 0a 78 2d 61 6d 7a 2d 63 6f 70 79 2d 73 6f 75 72 63 65 3a 70 68 6f 65 6e 69 78 2d 34 2d 31 34 37 37 35 37 30 34 32 31 33 35 2f 34 2f 35 31 33 37 2f 64 61 74 61 5f 36 30 30 30 43 32 39 38 2d 61 39 39 34 2d 65 66 65 32 2d 37 65 33 62 2d 65 66 62 33 66 64 35 61 36 63 37 36 2f 46 55 4c 4c 2f 31 30 30 30 30 30 30 30 0a 78 2d 61 6d 7a 2d 63 6f 70 79 2d 73 6f 75 72 63 65 2d 72 61 6e 67 65 3a 62 79 74 65 73 3d 30 2d 31 0a 78 2d 61 6d 7a 2d 64 61 74 65 3a 32 30 31 36 31 31 31 30 54 30 35 31 38 30 31 5a 0a 78 2d 61 6d 7a 2d 73 65 63 75 72 69 74 79 2d 74 6f 6b 65 6e 3a 46 51 6f 44 59 58 64 7a 45 46 59 61 44 4f 52 37 78 38 37 2f 2f 2b 65 4d 58 32 68 71 77 79 4b 39 41 36 2b 46 4b 65 31 53 58 38 67 4e 32 62 70 63 62 52 4a 50 75 4a 78 4c 5a 43 2b 7a 50 36 32 54 6e 7a 71 6f 58 41 31 6c 50 76 64 4b 68 6a 57 70 4a 49 30 76 30 55 5a 34 36 59 2b 49 63 76 62 66 6c 49 51 58 71 34 33 38 52 38 6b 43 35 51 48 4a 5a 48 4c 78 2f 66 73 44 43 37 6c 50 59 4c 75 44 50 41 33 64 34 33 56 2b 63 63 32 38 63 6e 34 34 70 6a 44 33 34 44 51 70 79 30 52 4b 47 4d 63 37 47 4a 6c 6a 5a 52 2b 69 6a 4f 62 33 6d 38 65 36 62 78 76 34 63 34 6b 4e 38 33 4b 76 2b 47 73 37 55 42 42 61 35 45 6f 47 65 67 34 4e 48 4e 33 6e 65 4e 4e 38 67 32 75 36 38 41 64 30 75 6f 75 50 44 56 31 57 76 75 69 69 6a 62 66 70 36 5a 49 61 54 34 4c 5a 46 62 71 33 6d 45 31 31 5a 58 69 42 6a 51 44 53 44 54 44 63 4c 70 4f 2b 65 6b 33 56 43 63 6b 36 62 70 7a 71 75 54 2f 6a 44 63 38 4a 7a 72 6d 36 2f 72 53 38 47 69 71 73 2f 78 57 4c 69 41 54 61 34 56 71 78 56 58 7a 76 62 51 32 50 75 34 54 76 30 6b 66 43 55 37 75 63 36 44 57 4d 72 42 4d 68 65 6a 6a 39 37 73 2f 48 4b 4c 55 30 62 31 32 6d 63 51 36 35 54 2b 46 63 69 65 59 41 4c 50 66 4d 34 71 50 66 32 37 5a 5a 56 73 6a 58 57 6b 43 7a 6b 72 4d 75 38 71 4f 41 62 6c 71 70 56 43 47 31 35 41 32 73 6e 5a 6e 30 4b 65 36 54 37 4a 46 36 4f 4e 47 4b 6b 72 31 6a 53 51 33 54 76 39 33 43 35 2f 6a 36 48 75 51 4f 49 63 73 75 52 4b 44 4c 6b 42 4c 67 66 66 4f 41 79 49 7a 44 7a 59 32 78 42 51 76 42 49 41 42 54 6b 30 45 4e 63 4c 6b 67 59 7a 4e 4c 4b 73 57 4c 46 75 49 33 50 72 79 32 34 71 63 58 56 43 53 7a 58 72 75 79 45 45 32 6e 65 71 5a 70 38 6f 68 41 76 56 68 30 57 50 5a 4f 74 78 6d 50 4f 54 62 47 67 71 52 6e 32 78 45 67 62 33 79 4f 44 41 79 7a 37 2b 4b 4f 65 6d 52 76 66 79 47 67 78 42 47 6d 76 76 53 6e 75 4c 72 72 32 34 76 59 2f 36 49 6e 6d 34 39 51 37 33 36 65 54 37 64 35 78 6d 7a 66 6c 62 4c 47 36 63 64 74 42 65 6a 79 4b 6d 67 74 74 63 4f 70 75 69 45 6f 39 66 32 50 77 51 55 3d 0a 0a 68 6f 73 74 3b 75 73 65 72 2d 61 67 65 6e 74 3b 78 2d 61 6d 7a 2d 63 6f 6e 74 65 6e 74 2d 73 68 61 32 35 36 3b 78 2d 61 6d 7a 2d 63 6f 70 79 2d 73 6f 75 72 63 65 3b 78 2d 61 6d 7a 2d 63 6f 70 79 2d 73 6f 75 72 63 65 2d 72 61 6e 67 65 3b 78 2d 61 6d 7a 2d 64 61 74 65 3b 78 2d 61 6d 7a 2d 73 65 63 75 72 69 74 79 2d 74 6f 6b 65 6e 0a 65 33 62 30 63 34 34 32 39 38 66 63 31 63 31 34 39 61 66 62 66 34 63 38 39 39 36 66 62 39 32 34 32 37 61 65 34 31 65 34 36 34 39 62 39 33 34 63 61 34 39 35 39 39 31 62 37 38 35 32 62 38 35 35</CanonicalRequestBytes><RequestId>3EDF2BFB155307CF</RequestId><HostId>q5lLYag9EJC/liFWejbNHWgFPZUDMLG3bBP5xM2+u87HlsO4alkoEu5r7xIcOih+YPcGFeCVJ20=</HostId></Error>\r\n``` @stealthycoin Thanks For reply but if I use boto3 then I am getting error as \n\n```\n[2016-11-11 20:51:39,380] [ERROR] CloudDRAgent: Failed multipart operation for [4/5137/data_6000C29f-b19f-0737-1e86-ed07cbb3cf8a/FULL/]\n[2016-11-11 20:51:39,381] [ERROR] Error <type 'exceptions.TypeError'>:cannot concatenate 'str' and 'NoneType' objects. Traceback -Traceback (most recent call last):\n  File \"/root/client/trunk/src/agents/clouddragent/cloudDrAgent.py\", line 1294, in _full_clouddr_multipart_upload\n    self._multipart_upload(vmdk_name)\n  File \"/root/client/trunk/src/agents/clouddragent/cloudDrAgent.py\", line 1373, in _multipart_upload\n    self.customer_awslib.merge_chunks_using_multipart_upload(target_key_name, source_key_path)\n  File \"/root/client/trunk/src/roboClientLib/boto/awsDRLib.py\", line 994, in merge_chunks_using_multipart_upload\n    self.merge_chunks_using_multipart_upload_boto3(self.source_bucket, target_key_name, s3_key_path, scheduler_queue, total_chunks, callback, refresh_s3_conn)\n  File \"/root/client/trunk/src/roboClientLib/boto/awsDRLib.py\", line 2301, in merge_chunks_using_multipart_upload_boto3\n    mult_upld = s3client.create_multipart_upload(Bucket=bucket_name, Key=target_key_name)\n  File \"/usr/lib/python2.6/site-packages/botocore/client.py\", line 301, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/lib/python2.6/site-packages/botocore/client.py\", line 375, in _make_api_call\n    operation_model, request_dict)\n  File \"/usr/lib/python2.6/site-packages/botocore/endpoint.py\", line 111, in make_request\n    return self._send_request(request_dict, operation_model)\n  File \"/usr/lib/python2.6/site-packages/botocore/endpoint.py\", line 136, in _send_request\n    request = self.create_request(request_dict, operation_model)\n  File \"/usr/lib/python2.6/site-packages/botocore/endpoint.py\", line 120, in create_request\n    operation_name=operation_model.name)\n  File \"/usr/lib/python2.6/site-packages/botocore/hooks.py\", line 226, in emit\n    return self._emit(event_name, kwargs)\n  File \"/usr/lib/python2.6/site-packages/botocore/hooks.py\", line 209, in _emit\n    response = handler(**kwargs)\n  File \"/usr/lib/python2.6/site-packages/botocore/client.py\", line 429, in _sign_request\n    self._request_signer.sign(operation_name, request)\n  File \"/usr/lib/python2.6/site-packages/botocore/signers.py\", line 110, in sign\n    signer.add_auth(request=request)\n  File \"/usr/lib/python2.6/site-packages/botocore/auth.py\", line 320, in add_auth\n    signature = self.signature(string_to_sign, request)\n  File \"/usr/lib/python2.6/site-packages/botocore/auth.py\", line 300, in signature\n    k_date = self._sign(('AWS4' + key).encode('utf-8'),\nTypeError: cannot concatenate 'str' and 'NoneType' objects\n```\n\nHere is the code snip\n\n```\nimport boto\nimport boto3\nimport boto3.session\nbucket = 'phoenix-4-147757042135'\nkey = '4/5137/data_6000C298-a994-efe2-7e3b-efb3fd5a6c76/FULL/amar'\nsession = boto3.session.Session(region_name='eu-central-1')\ns3client = session.client('s3', config= boto3.session.Config(signature_version='s3v4'))\n\nmpu = s3client.create_multipart_upload(Bucket=bucket, Key=key)\n\npart1 = s3client.upload_part_copy(Bucket='phoenix-4-147757042135', CopySource='phoenix-4-147757042135/4/5137/data_6000C298-a994-efe2-7e3b-efb3fd5a6c76/FULL/10000000', Key='4/5137/data_6000C298-a994-efe2-7e3b-efb3fd5a6c76/FULL/amar', PartNumber=1, UploadId=mpu['UploadId'])\n\npart2 = s3client.upload_part_copy(Bucket='phoenix-4-147757042135', CopySource='phoenix-4-147757042135/4/5137/data_6000C298-a994-efe2-7e3b-efb3fd5a6c76/FULL/10000001', Key='4/5137/data_6000C298-a994-efe2-7e3b-efb3fd5a6c76/FULL/amar', PartNumber=2, UploadId=mpu['UploadId'])\n\npart_info = {\n    'Parts': [\n        {\n            'PartNumber': 1,\n            'ETag': part1['CopyPartResult']['ETag']\n        },\n        {\n            'PartNumber': 2,\n            'ETag': part2['CopyPartResult']['ETag']\n        }\n    ]\n}\ns3client.complete_multipart_upload(Bucket=bucket, Key=key, UploadId=mpu['UploadId'], MultipartUpload=part_info) \n```\n\nOne more point when I run this trough my application then only I am getting this error.  If I run this code using python interpreter then its works fine.\n\nAny suggestion ??\n  I'm running boto3 inside of a lambda function. The aim is to call other lambda functions in true microservice fashion. For the most part this is easily achievable with:\r\n\r\n```py\r\nimport boto3, json, logging\r\nlogger = logging.getLogger()\r\nlogger.setLevel(logging.INFO)\r\n\r\npayload = {'key' : 'value'}\r\nclient = boto3.client('lambda')\r\n\r\nlogger.info('Requesting: service-version-function')\r\nclient.invoke(\r\n  FunctionName='service-version-function'), \r\n  InvocationType='RequestResponse',\r\n  Payload=json.dumps(payload).encode()\r\n)\r\n```\r\n\r\nThis is fine so long as the function doesn't take more than ~1min. Otherwise I see this happening in the CloudWatch logs:\r\n\r\n```\r\n[INFO]\t2016-11-09T20:06:36.458Z\t04161ce1-a6b8-11e6-b75d-291f3500e326\tRequesting: service-version-functions\r\n[INFO]\t2016-11-09T20:07:36.730Z\t04161ce1-a6b8-11e6-b75d-291f3500e326\tStarting new HTTPS connection (2): lambda.us-east-1.amazonaws.com\r\n[INFO]\t2016-11-09T20:08:38.595Z\t04161ce1-a6b8-11e6-b75d-291f3500e326\tStarting new HTTPS connection (3): lambda.us-east-1.amazonaws.com\r\n[INFO]\t2016-11-09T20:09:40.228Z\t04161ce1-a6b8-11e6-b75d-291f3500e326\tStarting new HTTPS connection (4): lambda.us-east-1.amazonaws.com\r\n```\r\n\r\nThe logs on the invoked functions confirm that they are called 4 times, and would appear to continue to do so had the lambda not reached it's timeout.\r\n\r\nWhat causes the ~1min re-request?\r\n After some digging I've learned `botocore.config` defaults to 60 second connection timeouts see [docs](https://botocore.readthedocs.io/en/stable/reference/config.html). Providing a custom config allows me to resolve the issues I'm having, however it doesn't explain why it attempts to re-establish the connection. Why doesn't it just timeout and end?\n I had this same problem using the CLI. If the lambda function has a timeout higher than 60 seconds and it runs longer than this time then this will cause a timeout and repeated invocations. \r\n\r\nI opened an issue aws/aws-cli#2657 in the aws-cli repo about this. When using the CLI it is possible to solve it by passing \"--cli-read-timeout\" as an argument. There are a couple of options to automatically get the lambda timeout instead of adding an hardcoded number by adding an alias to the CLI.\r\n\r\nI see that in Boto3 the timeout can be changed in the config so it should be possible to write a helper that gets the lambda timeout value and changes the configuration before invoking the function.\r\n Yesterday I spend few hours understanding this. +1 to improve the doc. What is also unexpected to me is that there is a retry logic built in. I usually expect a command to timeout and to throw an exception not to start retrying.   RHEL 6.8 ships with python-json 2.9 something.\r\n\r\nBut boto3 needs simplejson 3.3.0.\r\n\r\nHow does one resolve this issue? Assume the customer does not have Internet access for the install so pip is out of the question. We've built a simplejson 3.3.0 module using setuptools and that does indeed work, provided python-json is not installed (but I can't remove it since it is being used by another RHEL service).\r\n\r\nSuggestions? Nov 08 2016 02:22:24 - CRITICAL: Fatal Error occurred: Error: Test Transaction Errors:   file\n/usr/lib64/python2.6/site-packages/simplejson/**init**.py from install of simplejson-3.3.0-1.x86_64 conflicts with file\nfrom package python-simplejson-2.0.9-3.1.el6.x86_64\n file /usr/lib64/python2.6/site-packages/simplejson/tests/**init**.py from install of simplejson-3.3.0-1.x86_64\nconflicts with file from package python-simplejson-2.0.9-3.1.el6.x86_64\n file /usr/lib64/python2.6/site-packages/simplejson/**init**.pyc from install of simplejson-3.3.0-1.x86_64 conflicts\nwith file from package python-simplejson-2.0.9-3.1.el6.x86_64\n file /usr/lib64/python2.6/site-packages/simplejson/tests/**init**.pyc from install of simplejson-3.3.0-1.x86_64\nconflicts with file from package python-simplejson-2.0.9-3.1.el6.x86_64\n file /usr/lib64/python2.6/site-packages/simplejson/**init**.pyo from install of simplejson-3.3.0-1.x86_64 conflicts\nwith file from package python-simplejson-2.0.9-3.1.el6.x86_64\n file /usr/lib64/python2.6/site-packages/simplejson/tests/**init**.pyo from install of simplejson-3.3.0-1.x86_64\nconflicts with file from package python-simplejson-2.0.9-3.1.el6.x86_64\n file /usr/lib64/python2.6/site-packages/simplejson/tests/test_unicode.py from install of simplejson-3.3.0-1.x86_64\nconflicts with file from package python-simplejson-2.0.9-3.1.el6.x86_64\n file /usr/lib64/python2.6/site-packages/simplejson/tests/test_unicode.pyc from install of simplejson-3.3.0-1.x86_64\nconflicts with file from package python-simplejson-2.0.9-3.1.el6.x86_64\n file /usr/lib64/python2.6/site-packages/simplejson/tests/test_unicode.pyo from install of simplejson-3.3.0-1.x86_64\n\nHow does one get boto3 installed on RHEL without using pip?\n But the FACT is RHEL ships with existing python packages of certain versions outside of pip.\n\nTrying to install python packages via pip but maintaining support via RHEL RPMs is really a recipe for disaster.\n\nWhat I really don't understand is why isn't boto3 and friends ported to RHEL/CentOS as an official package with Amazon as the maintainer?\n\nThis is true for tons of Python written software.\n I see that python2-boto3 for CentOS/RHEL7 is in epel. But simplejson doesn't seem like a dependency. Is simplejson an artifact of python 2.6 being the default on CentOS/RHEL 6.x releases? I only say that because a quick 'yum install -y python2-boto3' doesn't seem to pull in python-simplejson on a test system we have in the lab with RHEL7 on it.\n  s/Pleas/Please\r\nAlso - reword the sentence slightly. Done, PTAL!\n  Boto version: boto3 (1.4.1), botocore (1.4.70)\r\nPython: 2.7.10\r\n\r\nIt seems that the [issue with > 10 tags in the filters](https://github.com/boto/boto/issues/3637) that we previously observed working with Boto 2 isn't inherent to Boto 2, as we have since replicated the issue with Boto 3 as well:\r\n\r\nIn case we use more than 10 tag/value pairs in the call to `describe_instances` from [`client.describe_instances`](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.describe_instances) we get an empty set instead of the list of instances. Below is an example:\r\n\r\n\t>>> from aws_common3 import get_ec2_instances\r\n\t>>> args = dotdict()\r\n\t>>> args.tags = \"Availability:test-schedule Backup: CostCentre: CreatedBy: Division: Environment:Prod ManagedBy: Name:test-snapshots-2vols Owner: Tag10:\"\r\n\t>>> tags = [ { t.split(\":\")[0] : t.split(\":\")[1] } for t in args.tags.split(\" \") ]\r\n\t>>> tags\r\n\t[{'Availability': 'test-schedule'}, {'Backup': ''}, {'CostCentre': ''}, {'CreatedBy': ''}, {'Division': ''}, {'Environment': 'Prod'}, {'ManagedBy': ''}, {'Name': 'test-snapshots-2vols'}, {'Owner': ''}, {'Tag10': ''}]\r\n\t>>> filters = [ { \"Name\": \"tag:\"+t.keys()[0], \"Values\": [ t.values()[0] ] } for t in tags ]\r\n\t>>> filters\r\n\t[{'Values': ['test-schedule'], 'Name': 'tag:Availability'}, {'Values': [''], 'Name': 'tag:Backup'}, {'Values': [''], 'Name': 'tag:CostCentre'}, {'Values': [''], 'Name': 'tag:CreatedBy'}, {'Values': [''], 'Name': 'tag:Division'}, {'Values': ['Prod'], 'Name': 'tag:Environment'}, {'Values': [''], 'Name': 'tag:ManagedBy'}, {'Values': ['test-snapshots-2vols'], 'Name': 'tag:Name'}, {'Values': [''], 'Name': 'tag:Owner'}, {'Values': [''], 'Name': 'tag:Tag10'}]\r\n\t>>> instances = get_ec2_instances(filters=filters, region='ap-southeast-2', profile='myawsaccount')\r\n\t>>> len(instances)\r\n\t1\r\n\t>>> instances[0]['InstanceId']\r\n\t'i-01a9d25e73544287b'\r\n\r\nSo for 10 tags we get the instance in the response list. Now adding one more existing tag (`Tag11`) to the filter:\r\n\r\n\t>>> args.tags = \"Availability:test-schedule Backup: CostCentre: CreatedBy: Division: Environment:Prod ManagedBy: Name:test-snapshots-2vols Owner: Tag10: Tag11:\"\r\n\t>>> tags = [ { t.split(\":\")[0] : t.split(\":\")[1] } for t in args.tags.split(\" \") ]\r\n\t>>> filters = [ { \"Name\": \"tag:\"+t.keys()[0], \"Values\": [ t.values()[0] ] } for t in tags ]\r\n\t>>> instances = get_ec2_instances(filters=filters, region='ap-southeast-2', profile='myawsaccount')\r\n\t>>> len(instances)\r\n\t0\r\n\r\nAs you can see, in case there are 11 tags we get an empty list of instances. Now if remove a different tag (`Tag10`) from the filter, keeping the `Tag11` at the same time to get back to 10 tags in total:\r\n\r\n\t>>> args.tags = \"Availability:test-schedule Backup: CostCentre: CreatedBy: Division: Environment:Prod ManagedBy: Name:test-snapshots-2vols Owner: Tag11:\"\r\n\t>>> tags = [ { t.split(\":\")[0] : t.split(\":\")[1] } for t in args.tags.split(\" \") ]\r\n\t>>> filters = [ { \"Name\": \"tag:\"+t.keys()[0], \"Values\": [ t.values()[0] ] } for t in tags ]\r\n\t>>> instances = get_ec2_instances(filters=filters, region='ap-southeast-2', profile='myawsaccount')\r\n\t>>> len(instances)\r\n\t1\r\n\t>>> instances[0]['InstanceId']\r\n\t'i-01a9d25e73544287b'\r\n\r\nBelow is the reference to the `get_ec2_instances` and the dependent functions that are used in the example:\r\n\r\n\t@aws_list_result\r\n\t@call_aws_api\r\n\tdef get_ec2_instances(filters=None, region=None, role_arn=None, profile=None):\r\n\t    \"\"\"\r\n\t    Wrapper function to get a list of instances, optionally filtering them\r\n\t    \"\"\"\r\n\t    ec2_conn = get_aws_client('ec2', region, role_arn, profile)\r\n\t    res = ec2_conn.describe_instances(Filters=filters)\r\n\t    instances = [i for r in res['Reservations'] for i in r['Instances'] ]\r\n\t    return instances\r\n\r\n\tdef get_aws_client(name=None, region=None, role_arn=None, profile=None):\r\n\t    \"\"\" Obtain an AWS client connection: direct or by assuming a role\r\n\t    \"\"\"\r\n\t    session=get_aws_access(region, role_arn, profile)\r\n\t    return session.client(name)\r\n\r\n\tdef get_aws_access(region=None, role_arn=None, profile=None):\r\n\t    \"\"\" Obtain an Autoscale connection: direct or by assuming a role\r\n\t    \"\"\"\r\n\t    aws_access = {}\r\n\t    if region is None:\r\n\t        # FIXME: still need to use boto.utils as this functionality\r\n\t        # is lacking in Boto 3, see https://github.com/boto/boto3/issues/313\r\n\t        instance_metadata = boto.utils.get_instance_identity()\r\n\t        region = instance_metadata['document']['region']\r\n\t    if role_arn is None:\r\n\t        aws_access['key']=None\r\n\t        aws_access['secret']=None\r\n\t        aws_access['token']=None\r\n\t    else:\r\n\t        sts_client = boto3.client('sts')\r\n\t        role_obj = sts_client.assume_role(\r\n\t            RoleArn=role_arn,\r\n\t            RoleSessionName=\"AssumeRoleSession\"\r\n\t            )\r\n\t        aws_access['key']=role_obj.credentials['AccessKeyId']\r\n\t        aws_access['secret']=role_obj.credentials['SecretAccessKey']\r\n\t        aws_access['token']=role_obj.credentials['SessionToken']\r\n\t    aws_access['profile'] = profile\r\n\t    aws_access['region']=region\r\n\t    session = boto3.session.Session(region_name=aws_access['region'],\r\n\t            aws_access_key_id=aws_access['key'],\r\n\t            aws_secret_access_key=aws_access['secret'],\r\n\t            aws_session_token=aws_access['token'],\r\n\t            profile_name=aws_access['profile'])\r\n\t    return session\r\n\r\n\tclass dotdict(dict):\r\n\t    \"\"\"dot.notation access to dictionary attributes\r\n\t    >>> dotdict({ \"key1\": \"value1\", \"key2\": \"value2\" }).key1\r\n\t    'value1'\r\n\t    >>> dotdict({ \"key1\": { \"key2\": \"value2\"} }).key1\r\n\t    {'key2': 'value2'}\r\n\t    >>> dotdict({ \"key1\": { \"key2\": \"value2\"} }).key1.key2\r\n\t    Traceback (most recent call last):\r\n\t      File \"<stdin>\", line 1, in <module>\r\n\t    AttributeError: 'dict' object has no attribute 'key2'\r\n\t    \"\"\"\r\n\t    def __getattr__(self, attr):\r\n\t        return self.get(attr)\r\n\t    __setattr__= dict.__setitem__\r\n\t    __delattr__= dict.__delitem__ @jordonphillips I have already raised the issue to AWS support through one of the AWS business accounts I have association with - over a month ago. The message I get from the AWS support every week that I poke them is: \"we have contacted our Boto service team and they are investigating the issue. We cannot tell you more since we have no visibility into our service teams\".\r\nYou closing the issue tells me that Boto team are not only not interested in fixing this bug, but even do not want to acknowledge it.  can we modify (or have an overloaded version) of [ECS.create_service()](http://boto3.readthedocs.io/en/latest/reference/services/ecs.html#ECS.Client.create_service) that takes a targetGroup _NAME_ rather than an _ARN_? yeah makes sense. i'm just being lazy about having to write 2 additional lines of code to get the Target Group Arn \ud83d\ude0a  python 3.5, and boto3==1.3.1\r\n\r\nwhen calling:\r\n```\r\nrds.restore_db_cluster_to_point_in_time(SourceDBClusterIdentifier=resource.conn_id,\r\n                                                       DBClusterIdentifier=resource.identifier,\r\n                                                       RestoreToTime=point_in_time,\r\n                                                       VpcSecurityGroupIds=[security_group],\r\n                                                       DBSubnetGroupName=subnet)\r\n```\r\n`DBClusterIdentifier` is implicitly lower cased. This leads to a very unfortunate bug that is propagated in:\r\n```rds.describe_db_clusters(DBClusterIdentifier=resource.identifier)``` and `DBClusterIdentifier` is implictly lower cased again, returning \"valid\" results. \r\n\r\nFinally, where teh bug bites:\r\n``` \r\nrds.create_db_instance(DBInstanceIdentifier=reader_instance,\r\n                                          DBInstanceClass='db.r3.8xlarge',\r\n                                          Engine='aurora',\r\n                                          DBSubnetGroupName=subnet,\r\n                                          DBClusterIdentifier=resource.identifier)\r\nClientError: An error occurred (DBClusterNotFoundFault) when calling the CreateDBInstance operation: DB Cluster not found\r\n```\r\n\r\nUsing the exact same value in the previous 2 function calls fails here because `DBClusterIdentifier` is _not_ implicitly lower cased at this point.   Let's say I have several APIs created by accident (in this case because I was testing things).  I would like to delete them automatically.  \r\n\r\nWhen I do that I'll find that I get a timeout  / TooManyRequestsException\r\n\r\nIn the attached ZIP file please find a simple script demo and the log of what happens when runing it.\r\n\r\nI would normally expect this script to delete multiple APIs without problem and generally I'd expect boto3, as a high level interface, should hide the details of the rate limiting which the API does underneath.  \r\n\r\nPossibly this botocore issue [Add possibility of modifying retry_config #891](https://github.com/boto/botocore/pull/891) would be helpful.  \r\n\r\n[aws-TooManyRequestsException-broken-demo.zip](https://github.com/boto/boto3/files/571228/aws-TooManyRequestsException-broken-demo.zip)\r\n Generally, this also seems to apply to lots of other API calls.  I don't have simple examples to demo them yet though.  \n @JordonPhillips I generated the bug on the latest version pulled from pip \n\n```\n$ pip freeze | grep boto\nboto==2.43.0\nboto3==1.4.1\nbotocore==1.4.67\n```\n\nDon't know if you have access to the internal cases;  if you can see case ID [redacted] then you will see that the advice from AWS support is that the reason for the problem is not that there are different exception codes.  It's that there are different rate limits on AkPI Gateway.  \n\nIn particlular CreateRestApi, ImportRestApi, and DeleteRestApi are rate limited to 2 calls per minute.  \n\nAs far as I can see from the exception (included in the log in the attached zip file) it _has_ retried but it ran out of retries so that would match with what support is saying.\n\n DeleteRestApi operation (reached max retries: 4): Too Many Requests\n\nI'm guessing that this is because API Gateway has very low request per second limits.  See the bottom of this document they linked to:\n\nhttp://docs.aws.amazon.com/apigateway/latest/developerguide/limits.html\n\nI have created a proposed fix for this in https://github.com/boto/botocore/pull/1071\n @JordonPhillips thanks;  waiting with baited breath.  \n\nFrom my side I think there are always going to be situations where e.g. you want to do more than one of any operation, so as a very minimum the longest retry should be longer than the longest you would have to wait after having done one operation.  Ideally double that.\n\nEven if you can't provide a fix soon, exposing a table of information about the rate limits would probably be helpfu.  \n @JordonPhillips what was the result of your discussion.  I've seen that failure to handle timeouts correctly is a problem for a large number of Amazon customers and is causing various problems with tools based on boto3 and in many discussion groups related to AWS configuration management.  I'd be willing to put in a bit more work on this but not if you aren't interested in accepting it.    i tried to list users having mfa enabled or disabled and it can list only first 100 users.and we have 300+ users on account. any help?\r\n\r\nimport boto\r\nfrom boto import iam\r\nconn=iam.connect_to_region('us-east-1')\r\nconnection=iam.IAMConnection()\r\n\r\niamProfiles=connection.get_all_users();\r\n\r\nfor user in iamProfiles.users:\r\n\r\n    mfaDevices = connection.get_all_mfa_devices(user.user_name) that's by design; for boto calls that list entities, it caps the max returned items to a certain number (for `IAM.list_users()` it's 100).  if you have more than 100, you will have to _paginate_.  for the initial call, the returned entity will have a `Marker` field...you will use that as parameter for the next call to get the next 100, then use the `Marker` field for that call for the next, etc.  \n\nMore information [here](http://boto3.readthedocs.io/en/latest/reference/services/iam.html?highlight=IAM#IAM.Client.list_users)\n  When attempting to list all the tasks by passing in the ECS cluster, the service name, and the container instance, boto3 throws an error reporting that \r\n``` \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.6/site-packages/botocore/client.py\", line 251, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/local/lib/python2.6/site-packages/botocore/client.py\", line 537, in _make_api_call\r\n    raise ClientError(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (InvalidParameterException) when calling the ListTasks operation: cannot specify serviceName with other arguments\r\n```\r\n\r\nTo recreate this, log into an EC2 instance that belongs to an ECS cluster, install boto3 with python 2.6 and make the call. This used to work until recently.  https://stackoverflow.com/questions/40325703/aws-python-sdk-boto3-client-route53domains-get-domain-suggestions-clienterror\n Sounds good, thanks! Quick question for you:\n\nIs just linking to the stackoverflow article OK? Or should I add all the necessary information on github? (for future reference)\n  I have a queue URL for an SQS queue, I'd like to be able to post messages to it without having to specify a region, to make my application simpler to configure. Since the region is contained in the queue URL why not let users construct the resource without having to specify the region first?\n\n```\n    sqs = boto3.resource('sqs')\n  File \"/home/streamer/venv/lib/python2.7/site-packages/boto3/__init__.py\", line 92, in resource\n    return _get_default_session().resource(*args, **kwargs)\n  File \"/home/streamer/venv/lib/python2.7/site-packages/boto3/session.py\", line 389, in resource\n    aws_session_token=aws_session_token, config=config)\n  File \"/home/streamer/venv/lib/python2.7/site-packages/boto3/session.py\", line 263, in client\n    aws_session_token=aws_session_token, config=config)\n  File \"/home/streamer/venv/lib/python2.7/site-packages/botocore/session.py\", line 824, in create_client\n    client_config=config, api_version=api_version)\n  File \"/home/streamer/venv/lib/python2.7/site-packages/botocore/client.py\", line 68, in create_client\n    verify, credentials, scoped_config, client_config, endpoint_bridge)\n  File \"/home/streamer/venv/lib/python2.7/site-packages/botocore/client.py\", line 130, in _get_client_args\n    verify, credentials, scoped_config, client_config, endpoint_bridge)\n  File \"/home/streamer/venv/lib/python2.7/site-packages/botocore/args.py\", line 45, in get_client_args\n    endpoint_url, is_secure, scoped_config)\n  File \"/home/streamer/venv/lib/python2.7/site-packages/botocore/args.py\", line 103, in compute_client_args\n    service_name, region_name, endpoint_url, is_secure)\n  File \"/home/streamer/venv/lib/python2.7/site-packages/botocore/client.py\", line 203, in resolve\n    service_name, region_name)\n  File \"/home/streamer/venv/lib/python2.7/site-packages/botocore/regions.py\", line 122, in construct_endpoint\n    partition, service_name, region_name)\n  File \"/home/streamer/venv/lib/python2.7/site-packages/botocore/regions.py\", line 135, in _endpoint_for_partition\n    raise NoRegionError()\nbotocore.exceptions.NoRegionError: You must specify a region.\n```\n I'm doing this. Is it wrong?\n\n```\n        region = re.search(r'arn:aws:sns:([\\w-]+):', arn).group(1)\n        sns = boto3.resource('sns', region_name=region)\n\n        region = re.search(r'sqs\\.([\\w-]+)\\.amazonaws\\.com', url).group(1)\n        sqs = boto3.resource('sqs', region_name=region)\n```\n  ```\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\n    self.run()\n  File \"/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 754, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"/Users/my.name/projects/filler-1.5.0/lib/paho/mqtt/client.py\", line 2282, in _thread_main\n    self.loop_forever()\n  File \"/Users/my.name/projects/filler-1.5.0/lib/paho/mqtt/client.py\", line 1260, in loop_forever\n    rc = self.loop(timeout, max_packets)\n  File \"/Users/my.name/projects/filler-1.5.0/lib/paho/mqtt/client.py\", line 811, in loop\n    rc = self.loop_read(max_packets)\n  File \"/Users/my.name/projects/filler-1.5.0/lib/paho/mqtt/client.py\", line 1073, in loop_read\n    rc = self._packet_read()\n  File \"/Users/my.name/projects/filler-1.5.0/lib/paho/mqtt/client.py\", line 1467, in _packet_read\n    rc = self._packet_handle()\n  File \"/Users/my.name/projects/filler-1.5.0/lib/paho/mqtt/client.py\", line 1935, in _packet_handle\n    return self._handle_publish()\n  File \"/Users/my.name/projects/filler-1.5.0/lib/paho/mqtt/client.py\", line 2110, in _handle_publish\n    self._handle_on_message(message)\n  File \"/Users/my.name/projects/filler-1.5.0/lib/paho/mqtt/client.py\", line 2266, in _handle_on_message\n    self.on_message(self, self._userdata, message)\n  File \"/Users/my.name/projects/filler-1.5.0/repo/filler/mqtt/handler.py\", line 88, in _on_message\n    callback(message.topic, str(message.payload))\n  File \"/Users/my.name/projects/filler-1.5.0/repo/filler/dataprocessor/iotrequest/multipart_file_upload.py\", line 182, in get_response\n    self.multipartupload(self._fileLocation, self._fileName, self._bucketName, self._credentials)\n  File \"/Users/my.name/projects/filler-1.5.0/repo/filler/dataprocessor/iotrequest/multipart_file_upload.py\", line 117, in multipart upload\n    part = s3.upload_part(Bucket=bucketName, Key=self.key, PartNumber=part_number, UploadId=self._uploadId, Body=data)\n  File \"/Users/my.name/projects/filler-1.5.0/lib/botocore/client.py\", line 251, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/Users/my.name/projects/filler-1.5.0/lib/botocore/client.py\", line 537, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nClientError: An error occurred (RequestTimeout) when calling the UploadPart operation (reached max retries: 4): Your socket connection to the server was not read from or written to within the timeout period. Idle connectionswill be closed.\n```\n\nHere is my code:\n\n```\n            s3 = boto3.client('s3', aws_access_key_id=self.accessKey, aws_secret_access_key=self.secretKey, aws_session_token=self.sessionToken)\n\n            #TODO needs to be configurable\n            chunksize = 20971520\n            chunkcount = int( math.ceil( int(self._fileSize) / chunksize ) )\n\n            parts = []\n            etags = {}\n\n            for i in range( chunkcount + 1 ):\n                part_number = i+1\n                offset = chunksize * i\n                bytes = min( chunksize, int(self._fileSize) - offset )\n                with FileChunkIO(fileLocation + fileName, 'r', offset=offset, bytes=bytes ) as data:\n                    part = s3.upload_part(Bucket=bucketName, Key=self.key, PartNumber=part_number, UploadId=self._uploadId, Body=data)\n                    part_info = {'PartNumber':part_number, 'ETag':part['ETag']}\n                    etags[str(part_number)] = part['ETag']\n                    parts.append(part_info) \n\n            s3.complete_multipart_upload(Bucket=bucketName, Key=self.key, UploadId=self._uploadId, MultipartUpload={'Parts':parts})\n```\n\nI believe that this issue has popped up several times in other AWS SDK's related to uploading large files to S3. I have tried performing this action through a proxy to see if my network reliability was bad. No luck. I have tried changing the chunk size, no luck. I have tried changing the file size. No luck. \n\nAny thoughts? \n  ec2.meta.client.modify_reserved_instances()\n\nI'm getting the error below:\n\nbotocore.exceptions.ParamValidationError: Parameter validation failed: Unknown parameter in TargetConfigurations[0]: \"Scope\", must be one of: AvailabilityZone, Platform, InstanceCount, InstanceType\n\nThis is my function:\n\n``` python\ndef modify_reserved_instance(self, region, iid, icount, itype):\n    ec2 = boto3.resource('ec2', region_name=region[:-1], api_version='2016-04-01')\n\n    response = ec2.meta.client.modify_reserved_instances(\n        ClientToken='string',\n        ReservedInstancesIds=[\n            iid,\n        ],\n        TargetConfigurations=[{\n            'AvailabilityZone': region,\n            'Platform': 'Linux/UNIX (Amazon VPC)',\n            'InstanceCount': icount,\n            'InstanceType': itype,\n            'Scope': 'Availability Zone'\n        }]\n    )\n    print (response)\n    return response\n```\n\nI have tried the Scope as 'AvailabilityZone' and 'Availability Zone'\n\n-Updated botocore \nsudo pip install botocore --upgrade\n\nawscli (1.11.9)\nboto (2.43.0)\nboto3 (1.4.1)\nbotocore (1.4.67)\ns3transfer (0.1.9)\nsetuptools (28.6.1)\n\n-Installed boto3/botocore from github https://github.com/boto/boto3\n\nAny Ideas?\n Thank you\n  Hi,\n\nI'm trying to update some already existing S3 files to enable Server Side Encryption. I've searched for code in boto3 docs and I was not able to find.\nPlease let me know if there is any way to do that.\n- Thanks.\n Thanks, I found the answer.\n  Hi all, \n\nI have an issue regarding the process of creating a snapshot for a certain EBS volume class by using boto3. \nIt seems that, even though i declare a `Name` tag explicitly, that tag doesn't get saved. I eventually end up with a blank name tag on the Snapshot declaration:\n![screen shot 2016-10-27 at 4 55 29 pm](https://cloud.githubusercontent.com/assets/6887991/19785114/32587722-9c66-11e6-8d40-fb2e78ad7174.png)\n\nThis is how my code essentially looks like:\nI have a volume object:\n\n``` python\ntype(volume)\n<class 'boto3.resources.factory.ec2.Volume'>\n```\n\nThe rest:\n\n``` python\ntags = [{'Key': 'Name', 'Value': 'some-name'}]\n    volume.create_tags(Tags=tags)\n    volume.create_snapshot(\n        VolumeId=volume.id,\n        Description=description\n    )\n```\n\nAm i missing something here, or is this a bug? Please help\n @JordonPhillips thanks for the response! As far as i could tell when compared to the previous versions of boto, this is a change, no? In the old versions, I would do a `volume.create_snapshot(description)` and the volume name tag would be copied as the name of the snapshot, no? \n I think this is a bug and should be addressed. @JordonPhillips is there a valid reason to believe so, comparing to previous boto versions?\n I see your point. Thank you @JordonPhillips . I will close this then, appreciate the help!\n  Is there any way to make an instance attached to an ELB unhealthy purposefully using boto3 ?\n\nI tried few methods and non of them working so far.\n\nThanks for any help !!\n @JordonPhillips Thanks for your reply.\nJust had one more doubt.\nSuppose there are 10 instances are registered in ELB.\nIf i remove an instance from an ELB, what will happen ?\nI mean, what will happen to requests actively served by that instance\n  Perhaps this is intended behavior but if I call KeyPair.delete() on a non-existent KeyPair I get no indication I've done something so silly. No None, False, or Exception:\n\n``` ShellSession\nIn [20]: import boto3\n\nIn [21]: kp = boto3.resource('ec2').KeyPair('kjdfkjdfkdsjfskdfd')\n\nIn [22]: kp.delete()\nOut[22]: \n{'ResponseMetadata': {'HTTPHeaders': {'content-type': 'text/xml;charset=UTF-8',\n   'date': 'Tue, 25 Oct 2016 18:09:17 GMT',\n   'server': 'AmazonEC2',\n   'transfer-encoding': 'chunked',\n   'vary': 'Accept-Encoding'},\n  'HTTPStatusCode': 200,\n  'RequestId': '765248a2-d5b7-413a-b53d-7abb6f50ef32',\n  'RetryAttempts': 0}}\n\nIn [23]: \n```\n\n``` ShellSession\n\u279c  ~ python --version && pip list | grep boto3\nPython 2.7.11\nboto3 (1.4.0)\n```\n  When using upload_fileobj the resulting file in s3 is stored as a single file.\nIf the file is huge sometime it would be desirable to store the file in multiple small files.\n\nCan this be achieved by passing some arguments in config below ?\nupload_fileobj(Fileobj, ExtraArgs=None, Callback=None, Config=None)\n @JordonPhillips \nAm referring to upload_fileobj api.\nI want to upload a huge file into same key (aka aws bucket) but into multiple files so that individual files will be smaller to read. \n @kyleknap \nAny comments as to how upload_fileobj should be used in this case ?\n @JordonPhillips \nI want to upload the streamed file using upload_fileobj into multiple files not download.\n @JordonPhillips \nThanks a lot.\nThat helps.\n  Hi,\n\nWhy Sqs don't have waiters ? I am especially thinking about purging and deleting that can't take some amount of time (up to 60 sec).\n  Boto 2.x S3 module allowed for generate_url with expires_in_absolute.\n\nI cannot find the same param in Boto3:\nhttp://botocore.readthedocs.io/en/latest/reference/services/s3.html#S3.Client.generate_presigned_url\n\nAny way to easily adapt the code to have the same behaviour?\n\nThanks!\n I see. Using boto2 we can set the due date to an specific point in time, that means that the url, including the signature, will not change unless we change the due date. Trying to do the same substracting time.time() looks tricky.\n Here is an example of calculating that time yourself:\r\n\r\n```python\r\nfrom datetime import datetime\r\n\r\nabsolute_date = datetime(2018, 9, 9, 11, 23)\r\nexpires_in = int(absolute_date.timestamp() - datetime.now().timestamp())\r\n```  create_stack() function return an object other than a dict indicated in the documentation.\n[create_stack(**kwargs)](http://boto3.readthedocs.io/en/latest/reference/services/cloudformation.html#CloudFormation.Client.create_stack)\n\n``` python\nimport boto3\nwith open('cf/network.json') as f:\n    template = f.read()\nclient_cf = boto3.resource('cloudformation')\nresponse = client_cf.create_stack(StackName = 'foo',TemplateBody = template)\nprint(response)\nprint(type(response))\n```\n\n```\ncloudformation.Stack(name='foo')\n<class 'boto3.resources.factory.cloudformation.Stack'>\n```\n\nTo meet the consistency of other client utilities, the behaiver should be like what the doc says. Which reponse usually is a dict with a ResponseMetadata and the actual content.\n A similar example:\n\n``` python\nclient = boto3.client('ec2')\nresponse = client.create_vpc(DryRun=False, CidrBlock=VPC[0], InstanceTenancy='default')\nprint(type(response),response)\nvpc = ec2.Vpc(response['Vpc']['VpcId'])\nprint(type(vpc),vpc)\n```\n\n```\n<class 'dict'>\n{'Vpc': {HIDDEN},\n  'ResponseMetadata': {\n     'HTTPStatusCode': 200, 'HTTPHeaders': {'vary': 'Accept-Encoding', 'content-type': 'text/xml;charset=UTF-8', 'server': 'AmazonEC2', 'transfer-encoding': 'chunked', 'date': 'Mon, 24 Oct 2016 02:48:25 GMT'}, 'RetryAttempts': 0, 'RequestId': 'ccccccc-foo-bar-foo-foobar'\n    }\n}\n\n<class 'boto3.resources.factory.ec2.Vpc'> \nec2.Vpc(id='vpc-f785e29e')\n```\n  When trying to get RDS EndPoint using the following functions:\n\n```\ndef get_endpoint_status(instance_name):\n        conn = boto3.client('rds')\n        return conn.describe_db_instances(DBInstanceIdentifier=instance_name)['DBInstances'][0]['DBInstanceStatus']\n\ndef get_endpoint(brand_name=BRAND_NAME):\n        instance_name = \"rde-db-rds-{}\".format(brand_name)\n        current_status = None\n        time.sleep(120)\n        while True:\n                current_status = get_endpoint_status(instance_name=instance_name)\n                if current_status == 'available':\n                        break\n        time.sleep(60)\n        conn = boto3.client('rds')\n        response = conn.describe_db_instances(DBInstanceIdentifier=instance_name)\n        return response['DBInstances'][0]['Endpoint']['Address']\n\n\n```\n\nI'm getting following error:\n`botocore.exceptions.ClientError: An error occurred (Throttling) when calling the DescribeDBInstances operation (reached max retries: 4): Rate exceeded`\n\nIs there any way I can increase the max retries limits?\n @JordonPhillips I am getting max retries on DescribeCacheClusters when paginating. Is there support for waiters in the paginate class? \n\nI can probably figure out a workaround but I'd like to do things nicely. \n  My call:\n\n`snap_results = ec2client.create_snapshot(VolumeId=vol_id, Description=snap_desc)\n`\n\nCauses this error to be thrown:\n\n`Error calling create_snapshot on vol-nnnnnnn- datetime.datetime(2016, 10, 18, 18, 24, 26, tzinfo=tzlocal()) is not JSON serializable`\n\nConsidering that I am not doing anything with a datetime, I suspect the error is in boto somewhere.\n\nPlease advise...\n Sorry, I didn't see your comment until now.\n\nThe vol_id is the volume id of the volume to snapshot. I am looping through all volumes creating snapshots for each one. \n\nsnap_desc is a string formatted like this:\n\n`vol_id + \"_\" + instance_id + \"_\" + instance_name`\n\nIn this case, it looks like the snapshot is being created and an error is being thrown.\n\nHere's a debug log:\n\n> [INFO] 2016-11-10T01:18:59.850Z a23ef26d-a6e3-11e6-9def-af42db75ff17 Creating snapshot [\n> vol-cf4ea253_i-b546c7a3_FalconElasticsearch5]\n> 2016-11-10 01:18:59,850 root [INFO] Creating snapshot [vol-cf4ea253_i-b546c7a3_FalconElasticsearch5]\n> [DEBUG] 2016-11-10T01:18:59.850Z a23ef26d-a6e3-11e6-9def-af42db75ff17 Event before-parameter-build.ec2.CreateSnapshot: calling handler <bound method ParameterAlias.alias_parameter_in_call of <botocore.handlers.ParameterAlias object at 0x7f562fcb7450>>\n> 2016-11-10 01:18:59,850 botocore.hooks [DEBUG] Event before-parameter-build.ec2.CreateSnapshot: calling handler <bound method ParameterAlias.alias_parameter_in_call of <botocore.handlers.ParameterAlias object at 0x7f562fcb7450>>\n> [DEBUG] 2016-11-10T01:18:59.851Z a23ef26d-a6e3-11e6-9def-af42db75ff17 Making request for OperationModel(name=CreateSnapshot) (verify_ssl=True) with params: {'body': {'Action': u'CreateSnapshot', 'Version': u'2016-04-01', 'VolumeId': u'vol-cf4ea253', 'Description': u'vol-cf4ea253_i-b546c7a3_FalconElasticsearch5'}, 'url': u'https://ec2.us-east-1.amazonaws.com/', 'headers': {'User-Agent': 'Boto3/1.4.0 Python/2.7.12 Linux/4.4.23-31.54.amzn1.x86_64 Botocore/1.4.55'}, 'context': {'client_region': 'us-east-1', 'has_streaming_input': False, 'client_config': <botocore.config.Config object at 0x7f562ec83450>}, 'query_string': '', 'url_path': '/', 'method': u'POST'}\n> 2016-11-10 01:18:59,851 botocore.endpoint [DEBUG] Making request for OperationModel(name=CreateSnapshot) (verify_ssl=True) with params: {'body': {'Action': u'CreateSnapshot', 'Version': u'2016-04-01', 'VolumeId': u'vol-cf4ea253', 'Description': u'vol-cf4ea253_i-b546c7a3_FalconElasticsearch5'}, 'url': u'https://ec2.us-east-1.amazonaws.com/', 'headers': {'User-Agent': 'Boto3/1.4.0 Python/2.7.12 Linux/4.4.23-31.54.amzn1.x86_64 Botocore/1.4.55'}, 'context': {'client_region': 'us-east-1', 'has_streaming_input': False, 'client_config': <botocore.config.Config object at 0x7f562ec83450>}, 'query_string': '', 'url_path': '/', 'method': u'POST'}\n> [DEBUG] 2016-11-10T01:18:59.851Z a23ef26d-a6e3-11e6-9def-af42db75ff17 Event request-created.ec2.CreateSnapshot: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7f562ec83410>>\n> 2016-11-10 01:18:59,851 botocore.hooks [DEBUG] Event request-created.ec2.CreateSnapshot: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7f562ec83410>>\n> [DEBUG] 2016-11-10T01:18:59.851Z a23ef26d-a6e3-11e6-9def-af42db75ff17 Calculating signature using v4 auth.\n> 2016-11-10 01:18:59,851 botocore.auth [DEBUG] Calculating signature using v4 auth.\n> [DEBUG] 2016-11-10T01:18:59.851Z a23ef26d-a6e3-11e6-9def-af42db75ff17 CanonicalRequest:\n> POST\n> /\n> \n> host:ec2.us-east-1.amazonaws.com\n> x-amz-date:20161110T011859Z\n> x-amz-security-token:(omitted)\n> \n> host;x-amz-date;x-amz-security-token\n> f730e0579ef73461de8b5f5085eb5822b25f156b5889d9db170046951f786796\n> 2016-11-10 01:18:59,851 botocore.auth [DEBUG] CanonicalRequest:\n> POST\n> /\n> \n> host:ec2.us-east-1.amazonaws.com\n> x-amz-date:20161110T011859Z\n> x-amz-security-token:(omitted)\n> \n> host;x-amz-date;x-amz-security-token\n> (omitted)\n> [DEBUG] 2016-11-10T01:18:59.851Z a23ef26d-3232-11e6-9def-af42db75ff17 StringToSign:\n> AWS4-HMAC-SHA256\n> 20161110T011859Z\n> 20161110/us-east-1/ec2/aws4_request\n> (omitted)\n> 2016-11-10 01:18:59,851 botocore.auth [DEBUG] StringToSign:\n> AWS4-HMAC-SHA256\n> 20161110T011859Z\n> 20161110/us-east-1/ec2/aws4_request\n> 0934f97ff8801d50b64a3b61d9438f13e69ecbaa23ce122159780cbef8cd452d\n> [DEBUG] 2016-11-10T01:18:59.852Z a23ef26d-a6e3-11e6-9def-af42db75ff17 Signature:\n> (omitted)\n> 2016-11-10 01:18:59,852 botocore.auth [DEBUG] Signature:\n> (omitted)\n> [DEBUG] 2016-11-10T01:18:59.852Z a23ef26d-a6e3-11e6-9ddef-af42db75ff17 Sending http request: <PreparedRequest [POST]>\n> 2016-11-10 01:18:59,852 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [POST]>\n> [INFO] 2016-11-10T01:18:59.852Z a23ef26d-a6e3-11e6-9def-af42db75ff17 Starting new HTTPS connection (1): ec2.us-east-1.amazonaws.com\n> 2016-11-10 01:18:59,852 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTPS connection (1): ec2.us-east-1.amazonaws.com\n> [DEBUG] 2016-11-10T01:19:00.110Z a23ef26d-a6e3-11e633-9def-af42db75ff17 \"POST / HTTP/1.1\" 200 None\n> 2016-11-10 01:19:00,110 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"POST / HTTP/1.1\" 200 None\n> [DEBUG] 2016-11-10T01:19:00.111Z a23ef2346d-a6e3-11e6-9def-af42db75ff17 Response headers: {'transfer-encoding': 'chunked', 'vary': 'Accept-Encoding', 'server': 'AmazonEC2', 'content-type': 'text/xml;charset=UTF-8', 'date': 'Thu, 10 Nov 2016 01:18:59 GMT'}\n> [DEBUG] 2016-11-10T01:19:00.111Z a23ef3426d-a6e3-11e6-9def-af42db75ff17 Response body:\n> <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n> <CreateSnapshotResponse xmlns=\"http://ec2.amazonaws.com/doc/2016-04-01/\">\n> <requestId>84a63515-7b75-4c0b-9127-d5c90f883cc5</requestId>\n> <snapshotId>snap-08fb8c87</snapshotId>\n> <volumeId>vol-cf4ea253</volumeId>\n> <status>pending</status>\n> <startTime>2016-11-10T01:18:59.000Z</startTime>\n> <progress/>\n> <ownerId>015499401968</ownerId>\n> <volumeSize>10</volumeSize>\n> <encrypted>false</encrypted>\n> <description>vol-cf4ea253_i-b546c7a3_FalconElasticsearch5</description>\n> </CreateSnapshotResponse>\n> [DEBUG] 2016-11-10T01:19:00.112Z a23ef26d-a6e3-11e6-9def-af42db75ff17 Event needs-retry.ec2.CreateSnapshot: calling handler <botocore.retryhandler.RetryHandler object at 0x7f562e3f75d0>\n> [DEBUG] 2016-11-10T01:19:00.112Z a23ef26d-a6e3-11e6-9def-af42db75ff17 No retry needed.\n> [INFO] 2016-11-10T01:19:00.112Z a23ef26d-a6e3-11e6-9def-af42db75ff17 Error calling create_snapshot on vol-cf4ea253 - datetime.datetime(2016, 11, 10, 1, 18, 59, tzinfo=tzlocal()) is not JSON serializable\n Here's code that reproduces the issue:\n\n```\nimport sys\nimport os\nimport boto3\nimport json\nimport lib\nimport logging\n\nlog = logging.getLogger()\nlog.setLevel(logging.DEBUG)\n\ndef test():\n    log = logging.getLogger()\n    region = \"us-east-1\"\n    session = boto3.session.Session(region_name=region, profile_name=\"ecomdev\")\n    client = session.client('ec2')\n\n    try:\n        vol_id = \"vol-cf4ea253\"\n        snap_desc = vol_id + \"_\" + \"i-b546c7a3\"\n        snap_desc = snap_desc + \"_\" + \"FalconElasticsearch5\"\n        log.info(\"Creating snapshot [%s]\" % snap_desc)\n        snap_results = client.create_snapshot(\n            VolumeId=vol_id, Description=snap_desc)\n        log.info(\"snap_results %s \" % json.dumps(snap_results))\n    except Exception as ex:\n        log.info(\"Error calling create_snapshot on %s - %s\" % (vol_id, str(ex)))\n        pass\n```\n After more experimenting, I realized that the log.info call is throwing the exception and not the create_snapshot call.\n\nWhy would json.dumps fail to deserialize the results from create_snapshot?\n\nHere's the json:\n\n`{'StartTime': datetime.datetime(2016, 11, 10, 21, 20, 12, tzinfo=tzutc()), 'OwnerId': '015499401968', 'ResponseMetadata': {'HTTPHeaders': {'content-type': 'text/xml;charset=UTF-8', 'date': 'Thu, 10 Nov 2016 21:20:11 GMT', 'transfer-encoding': 'chunked', 'server': 'AmazonEC2', 'vary': 'Accept-Encoding'}, 'RequestId': '0940697a-a566-4293-a14d-07a72c63289f', 'HTTPStatusCode': 200}, 'Encrypted': False, 'SnapshotId': 'snap-f13eb244', 'Description': 'vol-cf4ea253_i-b546c7a3_FalconElasticsearch5', 'State': 'pending', 'VolumeSize': 10, 'Progress': '', 'VolumeId': 'vol-cf4ea253'}`\n Snap results has a `datetime` object in it. The `json.dumps` needs to have a custom function provided to help it encode objects with the `datetime.datetime` type.\r\n\r\nSomething like this should work:\r\n```\r\ndef encode_json(element):\r\n    if isinstance(element, datetime.datetime):\r\n        return element.isoformat()\r\n    return element\r\nprint(json.dumps(data, default=encode_json))\r\n```\r\n  Similar to #641 , but my use case requires bypassing deserialization of incoming JSON data.\n\nI download CloudWatch metrics from AWS and write it as JSON into a (gzipped) file, to be used later. This means however, that under current implementation I have to deserialize incoming JSON data, just to serialize them to JSON again, which comes with significant overhead.\n  The following code throws \"boto3.exceptions.ResourceLoadException: ec2.RouteTableAssociation has no load method\":\n\n```\nimport boto3\nrta = boto3.resource(\"ec2\").RouteTableAssociation(\"id\")\nprint  rta.subnet_id\n```\n\nAccessing \"id\" or \"route_table_association_id\" is OK, but any other attribute throws this exception on the 3rd line. I used a valid route table association id for my environment in testing.\n\nI'm using boto3 version 1.4.1 on OS X 10.11.6 with Python 2.7.10.\nbotocore is version 1.4.62, but I don't directly make reference to it.\n\nIs there a workaround or another way of getting to the subnet and route table of a route table association?\n One way to get to these attributes is through the RouteTable's  [association collection](https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.RouteTable.associations). So something like this:\n\n``` python\nimport boto3\nrt = boto3.resource(\"ec2\").RouteTable(\"id\")\nfor rta in rt.associations.all():\n    print(rta.subnet_id)\n```\n\nLet us know if that helps.\n   PR updated to use `isinstance`, as you suggested. Thanks for the review!  Hi,\n\nI am attempting to use describe_load_balancer_policies to figure out the active load balancer policy on an ELB. When I use the AWS-CLI command:\n`aws elb describe-load-balancer-policies --load-balancer-name TESTELB --policy-name <policy_name> --query \"PolicyDescriptions[0].{ReferenceSecurityPolicy:PolicyAttributeDescriptions[0].AttributeValue}\" \"--output\" table`\n\nI get the proper policy.\n\nWhen using boto3, the equivalent should roughly be:\n\n```\n             for listener in elb['ListenerDescriptions']:\n                for elb_pol_attrib in \\\n                        self.elb.describe_load_balancer_policies(LoadBalancerName=elb_name,\n                                                                 PolicyNames=listener['PolicyNames'])['PolicyDescriptions']:\n                    for pol_desc in elb_pol_attrib['PolicyAttributeDescriptions']:\n                        # go through pairs of dicts for key: \"name\" value: \"value\" style pairs\n                        if 'Reference-Security-Policy' in pol_desc['AttributeName']:\n                            ref_policy = pol_desc['AttributeValue'] \n```\n\nHowever when using boto3, it returns a list of every policy that has ever been applied to the load balancer, and I do not see any indication of which one is active.\n I think your JMESPath expression in the CLI example is slightly different than how you are iterating through the dictionaries in the Python example. In the JMESPath query with the CLI you are not checking for `Reference-Security-Policy' in pol_desc['AttributeName']` rather you are creating a new dictionary where `ReferenceSecurityPolicy` is the key. So I think you will need to remove that if check or figure out why that if check is not catching the value you are looking for.\n\nOne thing that may help if you are trying to replicate what is happening in the CLI to a python script is try using the Python library for [JMESPath](https://pypi.python.org/pypi/jmespath). You should be  able to take the query from the CLI example and use it directly on the response.\n\nLet us know if that helps or if you have anymore questions.\n This is totally still an issue. Jmespath or not. There is no indicator to the active policy. The ReferencePolicy refers to any policy that has **ever** been set. So you'll get the current and the previous trying to query that way.\r\n\r\nAny advice would be greatly appreciated.  ``` python\n  bucket = s3.Bucket(bucket_name)\n  obj = bucket.Object(key)\n  # is there a way to add metadata before uploading the file?\n  obj.upload_file(filename)\n  tmp = obj.load()\n  print type(obj)\n  obj.metadata['Date'] = _metadata\n  obj.load()\n```\n\nI cannot see where this Metadata is being set as when I see on S3 GUI as well as when I use the api bit return an empty Metadata var\n In general calling `load()` will only update the `S3.Object` object and will never update the actual remote object. To update the metadata with `upload_file` try adding `Metadata` with the `ExtraArgs` parameter as shown in an example under this section: https://boto3.readthedocs.io/en/latest/guide/s3.html#uploads.\n\nLet us know if you have anymore questions. \n  I've been working through looking at adopting Python 3, and I've been utilizing the -3 flag to help idenitfy issues with Python 3.\n\nHere's a quick write up I did last week:\n\nhttps://gist.github.com/rowillia/c0feed97c1863b2d8e5a3ed73712df65\n\nThe -3 flagged a few issues in boto3 worth fixing, namely around eq shadowing hash in PY3.\n\nFixing these issues will help make the -3 flag less noisey for folks running boto3 in production.\n @JordonPhillips Are these classes guaranteed to be Immutable?  https://github.com/rowillia/boto3/blob/716fac092b4c88105e435be6417aba6665755c6e/boto3/resources/base.py#L48-L53 looks like it might change state.\r\n\r\nThis is the safer of the two options.  These classes are already unhashable in Python 3, this enforces that same unhashability in Python 2.  http://boto3.readthedocs.io/en/latest/reference/services/s3.html?highlight=s3#S3.Client.upload_file\n\nThis should list or at least link to the information in here:\n\nhttp://boto3.readthedocs.io/en/latest/reference/customizations/s3.html\n  The maximum number of records returned on a describe_auto_scaling_groups is hardcoded to 100. This means that if you have 101 ASG's in the same account boto3 will ignore the 101st. \n\nI found this problem using ansible and have traced it back to the describe_auto_scaling_groups call. So I am afraid I cannot provide many examples of how one would recreate this apart from creating 101 ASGs and trying to describe them all - then count the number returned.\n\nA nice way to keep within this limit would be with the addition of filtering by tags.\n Looks to be the same #452 but did not know if i could reopen.\n  I'm writing unit tests for an AWS Lambda copy function, but I don't have a dry run option. Am I missing something?\nhttp://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Client.copy_object\n Stubber seems like it will work for me. Thanks for the suggestion. I was under the impression that Boto was trying to replicate the CLI options. Most of the aws cli commands have a dryrun flag that can be set.\nhttp://docs.aws.amazon.com/cli/latest/reference/s3/cp.html\n  I wanna uploading lots of files to s3 service every time.\nI made 10 workers to upload files using thread.\nBut a message, \"Resetting dropped connection\", is shown repeatedly.\nI guess s3 connection is newly opened per one time.\nHow can I set connection to keep alive?\n\n```\nimport threading\nimport boto3\n\ns3 = boto3.resource('s3')\n\nclass Worker(threading.Thread):\n    ...\n    def run(self):\n        s3.Object(bucket, key).put(Body=body)\n```\n I suggest that you move the `boto3.resource('s3')` into the thread. I believe the general advice is to have one resource per thread as they're not thread-safe.\n I moved `boto3.resource('s3')` into each thread, but the same message is shown.\n I created new `session` in each thread.\nBut `Resetting dropped connection` message still is shown.\nI guess S3 doesn't support Keep-Alive or I quickly send request to server repeatedly.  \n\nThank you for your help.\n  Is there a simple way for one to retrieve the x-amzn-RequestId for a given query.\n  Hello,\n\nI'm trying to diagnose the problem of a script which downloads files from S3 slowing down over time, then recovering on restart of the script. See this graph: \n![graph](https://cloud.githubusercontent.com/assets/5174034/18790471/cc86ae5c-81a6-11e6-8777-9699e3167255.png)\n\nWhat seems to happen is that this message gets displayed once for the first time round the loop, then, twice the second time round, and third the third time round, etc...:\n\n`{\"log\":\"2016-09-23 12:25:15,280  DEBUG hooks.py: 209 botocore.hooks _emit                Event request-created.s3.HeadObject: calling handler \\u003cfunction enable_upload_callbacks at 0x7f7629df46e0\\u003e\\r\\n\",\"stream\":\"stdout\",\"time\":\"2016-09-23T12:25:15.28076678Z\"}\n`\n\nand then \n\n`{\"log\":\"2016-09-23 12:25:15,413  DEBUG hooks.py: 209 botocore.hooks _emit                Event request-created.s3.GetObject: calling handler \\u003cfunction disable_upload_callbacks at 0x7f7629df4668\\u003e\\r\\n\",\"stream\":\"stdout\",\"time\":\"2016-09-23T12:25:15.413132508Z\"}`\n\nThere are some detailed DEBUG logs that should show what is happening here: \n[log.txt](https://github.com/boto/boto3/files/490939/log.txt)\n\n...but in summary, what I basically do in my script is this:\n- create an aws s3 client\n- in a loop:\n  - connect to a bucket using the s3 client\n  - download a file from a bucket using the bucket object\n\nAny help with this would be greatly appreciated. If you need more information, please request it.\n\nEDIT: Copied wrong log message as example.\n @kyleknap  I will give you a code snippet on Monday, but I'm using `download_file()`. The debug logs are mentioned in the original ticket [log.txt](https://github.com/boto/boto3/files/490936/log.txt)\n @kyleknap OK, here's some sample code that basically exhibits the slow down. I basically left this code running over the weekend on my dev machine and saw _no_ slow down, but am experiencing the slow down on a Docker container. Both instances are connected to the same internet facing proxy. I've had time to think about this over the weekend, and I think what you're saying is right: \n\nIf the bandwidth is being maxed out and boto3 puts retries back in the same pool as new connections, we'll see a gradual slow down as the percentage of retries versus new connections increases.\n\nAs I've said before, the logs are in the original ticket.\n\n``` python\n## DL from S3 in a loop having previously uploaded 10000 random 500K samples.\n\nimport boto3\nimport random\nimport os\n\ns3_client = boto3.resource('s3')\n\nwhile True:\n    bkt = s3_client.Bucket('testbucket')\n    random_num = str(random.randint(1,9999))\n    bkt.download_file(Key=random_num, Filename='/tmp/'+random_num)\n    os.remove('/tmp/'+random_num)\n```\n @kyleknap I've successfully run a memory profiler (called dowser. http://e-mats.org/2013/01/debugging-pythons-memory-usage-with-dowser/) within the Docker container and connected into it via the built-in webserver. I can confirm that there are two lists that are ever growing:\n\nexamples of which are:\n\n`list of len 3254: [<function enable_upload_callbacks at 0x7f5ab4cf7b90>, <function enable_upload_cal...`\n\nand \n\n`list of len 3254: [<function disable_upload_callbacks at 0x7f5ab4cf7b18>, <function disable_upload_c...`\n\nfor the first list, we have an evergrowing number of references to the same dictionary called something like:\n\n`<function enable_upload_callbacks at 0x7f5ab4cf7b90>`\n\nThe _parent_ of the ever growing list is:\n\n`botocore.hooks.NodeList (via its 'last' attribute)\nNodeList(first=[<function disable_upload_callbacks at 0x7f5ab4cf7b18>, <function disable_upload_call...`\n\nand its parent is:\n\n`dict (via its 'values' key)\ndict of len 3: {'chunk': u's3', 'values': NodeList(first=[<function disable_upload_callbacks at 0x7f...`\n\nand its parent is:\n\n`dict (via its u's3' key)\ndict of len 3: {u's3': {'chunk': u's3', 'values': NodeList(first=[<function disable_upload_callbacks...`\n\netc.\n\nPlease let me know if you need any more information.\n\nJust to re-iterate, I do not seem to see this memory leak running in just on bare metal on my development box (at least not on the same order of magnitude, I'm going to let it run for a while longer before reporting back). It seems that the callbacks are being tidied up on bare metal for some reason.\n\nEDIT: Made the description more accurate.\n Latest news on this:\n\n**This has nothing to do with Docker**\n\n**My development box was running 1.3.1, and the docker container had version 1.4.0**\n\n**The bug does not appear in 1.3.1, but in 1.4.0**\n\nI will run the script in my IDE's debugger to pin down what is happening and report back.\n In `botocore/hooks.py`. the `HierarchicalEmitter` class has a method called `register_section` which seems to be used continually append new function handlers called `disable_upload_callbacks` to an list called `self._lookup_cache`. This does seem to be cleared at times, but there's another dict called `self._unique_id_handlers` that is full of handlers called `disable_upload_callbacks`. These handlers all have unique_ids, but they all point to the same actual piece of memory. I've run the code in multiple loops and watched the length of these two dictionaries. I see that the `self._lookup_cache` is continually being wiped out, but the `self._unique_id_handlers` dictionary is being continually appended to.\n\nI can see that the `self._unique_id_handlers` dictionary isn't being generated properly, and so isn't being cleaned up properly, but since I'm not familiar with this code, I'm going to need a bit of help.\n\nI'll keep on posting my debugging attempts, but someone feel free to join in (pinging @kyleknap )\n\nUPDATE: I suspect that the `deregister` method needs to be called at some point, but I never see it being called.\n Thanks for getting back to me (and the explanation!).\n\nI can confirm that the work around stops any memory leakage. I'm not going to be using in my production code (I've downgraded to 1.3.1 instead), but will wait for the bug fix. I don't know what your release cadence is, but I'll keep watching this space.\n Is the situation the same for upload_file aswell?\n @tsavola I do not see the same type of resource leakage when I modify my script to do uploads instead.\n @themanifold Okay, thanks!\n I just merged the linked PR that should fix this. It will be available for `boto3` through the next release of `s3transfer`.\n @kyleknap Thanks! Do you know when s3transfer will next be released?\n Fixed about 9 hours ago in version 0.1.7 of the s3transfer library. Thanks!\n Yep. No problem. Glad to hear that it is working for you!\n  'SSM' object has no attribute 'delete_activation'\n\n dir(ssmclient)\n['_PY_TO_OP_NAME', '__class__', '**delattr**', '**dict**', '**doc**', '**format**', '**getattribute**', '**hash**', '**init**', '**module**', '**new**', '**reduce**', '**reduce_ex**', '**repr**', '**setattr**', '**sizeof**', '**str**', '**subclasshook**', '**weakref**', '_cache', '_client_config', '_convert_to_request_dict', '_endpoint', '_force_path_style_s3_addressing', '_force_virtual_style_s3_addressing', '_get_waiter_config', '_loader', '_make_api_call', '_register_handlers', '_register_s3_specific_handlers', '_request_signer', '_response_parser', '_serializer', '_service_model', 'can_paginate', u'cancel_command', u'create_association', u'create_association_batch', u'create_document', u'delete_association', u'delete_document', u'describe_association', u'describe_document', u'describe_document_permission', u'describe_instance_information', 'generate_presigned_url', u'get_document', 'get_paginator', 'get_waiter', u'list_associations', u'list_command_invocations', u'list_commands', u'list_documents', 'meta', u'modify_document_permission', u'send_command', u'update_association_status', 'waiter_names']\n\nboto3 ssm client is missing attributes such as create_activation, delete_activation as mentioned in http://boto3.readthedocs.io/en/latest/reference/services/ssm.html#id1\n It is already the latest version.\n\npip install boto3 --upgrade\nRequirement already up-to-date: boto3 in /home/centos/django/chipmunk/darkshadow/lib/python2.7/site-packages\nRequirement already up-to-date: botocore<1.5.0,>=1.4.1 in /home/centos/django/chipmunk/darkshadow/lib/python2.7/site-packages (from boto3)\nRequirement already up-to-date: jmespath<1.0.0,>=0.7.1 in /home/centos/django/chipmunk/darkshadow/lib/python2.7/site-packages (from boto3)\nRequirement already up-to-date: s3transfer<0.2.0,>=0.1.0 in /home/centos/django/chipmunk/darkshadow/lib/python2.7/site-packages (from boto3)\nRequirement already up-to-date: python-dateutil<3.0.0,>=2.1 in /home/centos/django/chipmunk/darkshadow/lib/python2.7/site-packages (from botocore<1.5.0,>=1.4.1->boto3)\nRequirement already up-to-date: docutils>=0.10 in /home/centos/django/chipmunk/darkshadow/lib/python2.7/site-packages (from botocore<1.5.0,>=1.4.1->boto3)\nRequirement already up-to-date: futures<4.0.0,>=2.2.0; python_version == \"2.6\" or python_version == \"2.7\" in /home/centos/django/chipmunk/darkshadow/lib/python2.7/site-packages (from s3transfer<0.2.0,>=0.1.0->boto3)\nRequirement already up-to-date: six>=1.5 in /home/centos/django/chipmunk/darkshadow/lib/python2.7/site-packages (from python-dateutil<3.0.0,>=2.1->botocore<1.5.0,>=1.4.1->boto3)\n I had the same issue, but had to update botocore to get it to work. I would have thought that updating boto3 would have forced an update to botocore as well, but it doesn't look that way.  I'm on 1.4.0:\n\n```\n>>> import boto3\n>>> url = 'https://queue.amazonaws.com/--redacted--'\n>>> len(boto3.client('sqs', 'us-east-1').list_dead_letter_source_queues(QueueUrl=url)['queueUrls'])\n1\n>>> len(list(boto3.resource('sqs', 'us-east-1').Queue(url).dead_letter_source_queues.all()))\n0\n```\n\nFor some reason, I cannot list the dead letter queues using the resource; the client works fine though. I digged a bit and saw that the paginator received the queueUrls correctly in the response, but returns an empty collection. I noticed the searchpath was None; should it be pointing to queueUrls?\n  See issue https://github.com/boto/boto/issues/2748\n\nI mainly wanted to point out this is an issue on boto3 as well. And 2 years later, its still an issue. Would love to see it get some attention.\n My apologies, looks like this is a service issue. I will try to file a report through aws support.\n\n```\n2016-09-20 11:24:41,262 botocore.endpoint [DEBUG] Making request for OperationModel(name=DownloadDBLogFilePortion) (verify_ssl=True) with params: {'url': 'https://rds.us-west-2.amazonaws.com/', 'headers': {'User-Agent': 'Boto3/1.3.1 Python/3.5.2 Linux/4.7.4-1-ARCH Botocore/1.4.28'}, 'body': {'Marker': '23:1616654438', 'LogFileName': 'error/postgresql.log.20XX-XX-XX', 'DBInstanceIdentifier': 'xxxxxxxx', 'Version': '2014-10-31', 'Action': 'DownloadDBLogFilePortion'}, 'method': 'POST', 'query_string': '', 'url_path': '/'}\n2016-09-20 11:24:41,263 botocore.hooks [DEBUG] Event request-created.rds.DownloadDBLogFilePortion: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7f7b187fc9e8>>\n2016-09-20 11:24:41,264 botocore.auth [DEBUG] Calculating signature using v4 auth.\n2016-09-20 11:24:41,264 botocore.auth [DEBUG] CanonicalRequest:\nPOST\n/\n\nhost:rds.us-west-2.amazonaws.com\nx-amz-date:20160920T172441Z\n\nhost;x-amz-date\nb7716f0a8e88b753322e469cc37c02a4a8432f7299b13ca48c7025c4c97e602a\n2016-09-20 11:24:41,264 botocore.auth [DEBUG] StringToSign:\nAWS4-HMAC-SHA256\n20160920T172441Z\n20160920/us-west-2/rds/aws4_request\n7e49f60c869b8e8536eeaafa011a817952XXXXXX\n2016-09-20 11:24:41,265 botocore.auth [DEBUG] Signature:\na72XX2379b9b610e03e0f3XXX7726d3e93e37a5421f057bcfXXX\n2016-09-20 11:24:41,266 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [POST]>\n2016-09-20 11:24:41,436 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"POST / HTTP/1.1\" 400 326\n2016-09-20 11:24:41,439 botocore.parsers [DEBUG] Response headers: {'date': 'Tue, 20 Sep 2016 17:26:07 GMT', 'content-length': '326', 'content-type': 'text/xml', 'x-amzn-requestid': '50ab3a79-7f57-11e6-a037-1f2bca0894b4', 'connection': 'close'}\n2016-09-20 11:24:41,439 botocore.parsers [DEBUG] Response body:\nb'<ErrorResponse xmlns=\"http://rds.amazonaws.com/doc/2014-10-31/\">\\n  <Error>\\n    <Type>Sender</Type>\\n    <Code>InvalidParameterValue</Code>\\n    <Message>This file contains binary data and should be downloaded instead of viewed.</Message>\\n  </Error>\\n  <RequestId>50ab3a79-7f57-11e6-a037-1f2bca0894b4</RequestId>\\n</ErrorResponse>\\n'\n2016-09-20 11:24:41,440 botocore.hooks [DEBUG] Event needs-retry.rds.DownloadDBLogFilePortion: calling handler <botocore.retryhandler.RetryHandler object at 0x7f7b187ea860>\n2016-09-20 11:24:41,440 botocore.retryhandler [DEBUG] No retry needed.\n```\n  I've been using lots of boto3 calls in my Flask app for some time, but the switch to the latest boto3 v1.4.0 has broken my Celery workers. Something that may be unique about my app is that I use S3 to download a secure environment variables file before launching my app or workers. It appears that the new boto3 works with my app, but hangs when launching the Celery worker.\n\nI would temporarily downgrade my boto3 to avoid the problem, but its been a long time since the last release, and I need the elbv2 support that only comes in 1.4.0.\n\nI've created a tiny version of my worker (worker2.py) to demonstrate the problem. I've verified that using the previous version boto3 1.3.1 results in the worker launching properly. I see all prints and the Celery worker banner output.\n\nIf I install boto3 1.4.0, then the second print() statement \"Download complete\" is never reached.  Also note that I tried following the new doc example with boto3.resource and using s3.meta.client, but that fails as well.\n\n``` python\n#\n# Stub Celery worker to demonstrate bug in Boto3 1.4.0. Works fine with previous version Boto3 1.3.1.\n# Test with: celery worker -A worker2.celery\n#\nfrom flask import Flask\nfrom celery import Celery\nimport boto3\nimport tempfile\n\ncelery = Celery(__name__, broker='amqp://guest:guest@localhost:5672//')\n\napp = Flask(__name__)\n\ns3 = boto3.client('s3', region_name='us-west-1')\nenv_file = 'APPNAME.APPSTAGE.env'\nwith tempfile.NamedTemporaryFile() as s3_file:\n    print(\"Downloading file...\")\n    response = s3.download_file('APPBUCKET', env_file, s3_file.name)\n    print(\"Download complete!\")\n```\n\nYou can test it by running the following at the command line:\n\n```\ncelery worker -A worker2.celery\n```\n\nAlso note that just running the code downloads the file just fine with 1.4.0:\n\n```\npython worker2.py\n```\n Here's debug log output up to where it hangs.\n\n```\n$ celery worker -A worker2.celery -b 'amqp://guest:guest@localhost:5672//'\n\nDEBUG:botocore.credentials:Skipping environment variable credential check because profile name was explicitly set.\nDEBUG:botocore.credentials:Looking for credentials via: env\nINFO:botocore.credentials:Found credentials in environment variables.\nDEBUG:botocore.loaders:Loading JSON file: .virtualenv/lib/python2.7/site-packages/botocore/data/endpoints.json\nDEBUG:botocore.loaders:Loading JSON file: .virtualenv/lib/python2.7/site-packages/botocore/data/s3/2006-03-01/service-2.json\nDEBUG:botocore.loaders:Loading JSON file: .virtualenv/lib/python2.7/site-packages/botocore/data/_retry.json\nDEBUG:botocore.client:Registering retry handlers for service: s3\nDEBUG:botocore.hooks:Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x10eff4500>\nDEBUG:botocore.hooks:Event creating-client-class.s3: calling handler <function _handler at 0x10f06fb18>\nDEBUG:botocore.hooks:Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x10efeec08>\nDEBUG:botocore.args:The s3 config key is not a dictionary type, ignoring its value of: None\nDEBUG:botocore.endpoint:Setting s3 timeout as (60, 60)\n\nDownloading file...\n\nDEBUG:s3transfer.utils:Acquiring 0\nDEBUG:s3transfer.tasks:DownloadSubmissionTask({'transfer_future': <s3transfer.futures.TransferFuture object at 0x10f80c790>}) about to wait for the following futures []\nDEBUG:s3transfer.tasks:DownloadSubmissionTask({'transfer_future': <s3transfer.futures.TransferFuture object at 0x10f80c790>}) done waiting for dependent futures\nDEBUG:s3transfer.tasks:Executing task DownloadSubmissionTask({'transfer_future': <s3transfer.futures.TransferFuture object at 0x10f80c790>}) with kwargs {'io_executor': <s3transfer.futures.BoundedExecutor object at 0x10f80c410>, 'request_executor': <s3transfer.futures.BoundedExecutor object at 0x10f7d2fd0>, 'osutil': <s3transfer.utils.OSUtils object at 0x10f7d2c10>, 'client': <botocore.client.S3 object at 0x10f7d26d0>, 'transfer_future': <s3transfer.futures.TransferFuture object at 0x10f80c790>, 'config': <boto3.s3.transfer.TransferConfig object at 0x10f7d2a90>}\nDEBUG:botocore.hooks:Event before-parameter-build.s3.HeadObject: calling handler <function sse_md5 at 0x10f021578>\nDEBUG:botocore.hooks:Event before-parameter-build.s3.HeadObject: calling handler <function validate_bucket_name at 0x10f021500>\nDEBUG:botocore.hooks:Event before-parameter-build.s3.HeadObject: calling handler <bound method S3RegionRedirector.redirect_from_cache of <botocore.utils.S3RegionRedirector object at 0x10f7d2cd0>>\nDEBUG:botocore.hooks:Event before-call.s3.HeadObject: calling handler <function add_expect_header at 0x10f021938>\nDEBUG:botocore.hooks:Event before-call.s3.HeadObject: calling handler <bound method S3RegionRedirector.set_request_url of <botocore.utils.S3RegionRedirector object at 0x10f7d2cd0>>\nDEBUG:botocore.endpoint:Making request for OperationModel(name=HeadObject) (verify_ssl=True) with params: {'body': '', 'url': u'https://s3-us-west-1.amazonaws.com/APPBUCKET/APPNAME.APPSTAGE.env', 'headers': {'User-Agent': 'Boto3/1.4.0 Python/2.7.10 Darwin/15.6.0 Botocore/1.4.55'}, 'context': {'client_region': 'us-west-1', 'signing': {'bucket': 'APPBUCKET'}, 'has_streaming_input': False, 'client_config': <botocore.config.Config object at 0x10f7d2890>}, 'query_string': {}, 'url_path': u'/APPBUCKET/APPNAME.APPSTAGE.env', 'method': u'HEAD'}\nDEBUG:botocore.hooks:Event request-created.s3.HeadObject: calling handler <function disable_upload_callbacks at 0x10f49d9b0>\nDEBUG:botocore.hooks:Event request-created.s3.HeadObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x10f7d2810>>\nDEBUG:botocore.hooks:Event before-sign.s3.HeadObject: calling handler <function fix_s3_host at 0x10ef11230>\nDEBUG:botocore.utils:Checking for DNS compatible bucket for: https://s3-us-west-1.amazonaws.com/APPBUCKET/APPNAME.APPSTAGE.env\nDEBUG:botocore.utils:Not changing URI, bucket is not DNS compatible: APPBUCKET\nDEBUG:botocore.auth:Calculating signature using hmacv1 auth.\nDEBUG:botocore.auth:HTTP request method: HEAD\nDEBUG:botocore.auth:StringToSign:\nHEAD\n\n\nTue, 20 Sep 2016 04:19:42 GMT\n/APPBUCKET/APPNAME.APPSTAGE.env\nDEBUG:botocore.hooks:Event request-created.s3.HeadObject: calling handler <function enable_upload_callbacks at 0x10f49da28>\n```\n And in case it helps, here's the debug log output after I hit ctl+c:\n\n```\nDEBUG:s3transfer.futures:TransferCoordinator cancel() called\nDEBUG:botocore.endpoint:Sending http request: <PreparedRequest [HEAD]>\nINFO:botocore.vendored.requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): s3-us-west-1.amazonaws.com\nDEBUG:botocore.vendored.requests.packages.urllib3.connectionpool:\"HEAD /APPBUCKET/APPNAME.APPSTAGE.env HTTP/1.1\" 200 0\nDEBUG:botocore.parsers:Response headers: {'content-length': '475', 'x-amz-id-2': 'xxxxxxxxxxxx', 'accept-ranges': 'bytes', 'server': 'AmazonS3', 'last-modified': 'Tue, 20 Sep 2016 00:23:47 GMT', 'x-amz-request-id': 'xxxxxxxxxxxx', 'etag': '\"xxxxxxxxxxxx\"', 'date': 'Tue, 20 Sep 2016 04:27:09 GMT', 'x-amz-version-id': 'xxxxxxxxxxxx', 'x-amz-server-side-encryption': 'AES256', 'content-type': 'application/octet-stream'}\nDEBUG:botocore.parsers:Response body:\n\nDEBUG:botocore.hooks:Event needs-retry.s3.HeadObject: calling handler <botocore.retryhandler.RetryHandler object at 0x10f2d6ed0>\nDEBUG:botocore.retryhandler:No retry needed.\nDEBUG:botocore.hooks:Event needs-retry.s3.HeadObject: calling handler <bound method S3RegionRedirector.redirect_from_error of <botocore.utils.S3RegionRedirector object at 0x10f7d2cd0>>\nDEBUG:s3transfer.futures:Submitting task GetObjectTask({'extra_args': {}, 'bucket': 'APPBUCKET', 'key': 'APPNAME.APPSTAGE.env'}) to executor <s3transfer.futures.BoundedExecutor object at 0x10f7d2fd0> for transfer request: 0.\nDEBUG:s3transfer.utils:Acquiring 0\nDEBUG:s3transfer.tasks:GetObjectTask({'extra_args': {}, 'bucket': 'APPBUCKET', 'key': 'APPNAME.APPSTAGE.env'}) about to wait for the following futures []\nDEBUG:s3transfer.tasks:GetObjectTask({'extra_args': {}, 'bucket': 'APPBUCKET', 'key': 'APPNAME.APPSTAGE.env'}) done waiting for dependent futures\nDEBUG:s3transfer.utils:Releasing acquire 0/None\nDEBUG:s3transfer.futures:Submitting task IORenameFileTask({'final_filename': '/var/folders/kd/xxxxxx'}) to executor <s3transfer.futures.BoundedExecutor object at 0x10f80c410> for transfer request: 0.\nDEBUG:s3transfer.utils:Acquiring 0\nDEBUG:s3transfer.tasks:IORenameFileTask({'final_filename': '/var/folders/kd/xxxxxx'}) about to wait for the following futures []\nDEBUG:s3transfer.tasks:IORenameFileTask({'final_filename': '/var/folders/kd/xxxxxx'}) done waiting for dependent futures\nDEBUG:s3transfer.utils:Releasing acquire 0/None\nDEBUG:s3transfer.utils:Releasing acquire 0/None\n```\n And here are the key pip packages:\n\n```\namqp==1.4.9\nboto3==1.4.0\nbotocore==1.4.54\ncelery==3.1.23\nFlask==0.11.1\nkombu==3.0.35\ns3transfer==0.1.4\n```\n Any luck reproducing this?\n Also, it fails the same way if I use S3Transfer instead of the client when calling download_file()\n I am able to reproduce it. I am looking into why it may be happening.\n Yeah this is really interesting. So I have a script that outputs all of the thread traces where they currently are deadlocked and this is what I am seeing:\n\n```\nDownloading file...\n\n# ThreadID: 123145311866880\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/lib/python2.7/threading.py\", line 783, in __bootstrap\n  self.__bootstrap_inner()\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n  self.run()\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/lib/python2.7/threading.py\", line 763, in run\n  self.__target(*self.__args, **self.__kwargs)\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/envs/boto3-2.7.10/lib/python2.7/site-packages/concurrent/futures/thread.py\", line 67, in _worker\n  work_item.run()\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/envs/boto3-2.7.10/lib/python2.7/site-packages/concurrent/futures/thread.py\", line 55, in run\n  result = self.fn(*self.args, **self.kwargs)\nFile: \"/Users/kyleknap/GitHub/s3transfer/s3transfer/tasks.py\", line 126, in __call__\n  return self._execute_main(kwargs)\nFile: \"/Users/kyleknap/GitHub/s3transfer/s3transfer/tasks.py\", line 150, in _execute_main\n  return_value = self._main(**kwargs)\nFile: \"/Users/kyleknap/GitHub/s3transfer/s3transfer/tasks.py\", line 255, in _main\n  self._submit(transfer_future=transfer_future, **kwargs)\nFile: \"/Users/kyleknap/GitHub/s3transfer/s3transfer/download.py\", line 343, in _submit\n  **transfer_future.meta.call_args.extra_args\nFile: \"/Users/kyleknap/GitHub/botocore/botocore/client.py\", line 159, in _api_call\n  return self._make_api_call(operation_name, kwargs)\nFile: \"/Users/kyleknap/GitHub/botocore/botocore/client.py\", line 483, in _make_api_call\n  operation_model, request_dict)\nFile: \"/Users/kyleknap/GitHub/botocore/botocore/endpoint.py\", line 141, in make_request\n  return self._send_request(request_dict, operation_model)\nFile: \"/Users/kyleknap/GitHub/botocore/botocore/endpoint.py\", line 166, in _send_request\n  request = self.create_request(request_dict, operation_model)\nFile: \"/Users/kyleknap/GitHub/botocore/botocore/endpoint.py\", line 151, in create_request\n  prepared_request = self.prepare_request(request)\nFile: \"/Users/kyleknap/GitHub/botocore/botocore/endpoint.py\", line 162, in prepare_request\n  return request.prepare()\nFile: \"/Users/kyleknap/GitHub/botocore/botocore/awsrequest.py\", line 366, in prepare\n  p.prepare_url(self.url, self.params)\nFile: \"/Users/kyleknap/GitHub/botocore/botocore/vendored/requests/models.py\", line 369, in prepare_url\n  host = host.encode('idna').decode('utf-8')\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/envs/boto3-2.7.10/lib/python2.7/encodings/__init__.py\", line 100, in search_function\n  level=0)\n\n\n# ThreadID: 140735181049856\nFile: \"/Users/kyleknap/.pyenv/versions/boto3-2.7.10/bin/celery\", line 11, in <module>\n  sys.exit(main())\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/envs/boto3-2.7.10/lib/python2.7/site-packages/celery/__main__.py\", line 30, in main\n  main()\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/envs/boto3-2.7.10/lib/python2.7/site-packages/celery/bin/celery.py\", line 81, in main\n  cmd.execute_from_commandline(argv)\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/envs/boto3-2.7.10/lib/python2.7/site-packages/celery/bin/celery.py\", line 793, in execute_from_commandline\n  super(CeleryCommand, self).execute_from_commandline(argv)))\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/envs/boto3-2.7.10/lib/python2.7/site-packages/celery/bin/base.py\", line 309, in execute_from_commandline\n  argv = self.setup_app_from_commandline(argv)\nFile: \"/Users/kyleknap/.pyenv/versions/2.7.10/envs/boto3-2.7.10/lib/python2.7/site-packages/celery/bin/base.py\", line 469, in setup_app_from_commandline\n```\n\nBased on the output, it looks like it is deadlocking in the imports. Here: https://github.com/python/cpython/blob/2.7/Lib/encodings/__init__.py#L99 and here: https://github.com/celery/celery/blob/master/celery/bin/base.py#L425\n\nI am not quite sure why this causing a deadlock as I do not know too much about the internals of celery, but I figured I can pass this on. I will keep looking into this and see if there is any existing issues about this, but will keep you updated.\n I've opened an issue in Celery to track this. Maybe they are willing to research in parallel.\n\nhttps://github.com/celery/celery/issues/3494\n Are you doing this at module level?  The example does, but just want to verify this is also the cause at the source of the issue.\n\nIf so, note that you should never start a thread at \"compile time\" in Python, as it will deadlock.\n The same may be the case with acquiring a mutex, I believe.\n Sorry if I don't understand fully, but is @ask talking about my code? If so, I'm not sure what other method I should be following when coding my Celery worker. I've followed the Celery docs carefully and this has been working fine for me until the latest boto3 release a short while ago. The example I provided is the smallest example worker I could code that I think should work (and does on all older versions of boto3). If you can suggest another approach for worker2.py that functions as a worker and does not exhibit the problem. If you're not asking about my code, I'll let @kyleknap on the boto3 team respond.\n Yes, I'm talking about your example that performs a network request, as a side effect of importing the module.\n\nI don't know what `response` is used for here, but side effects in the module body is a bad practice\nin general.\n\nYou could perform the request lazily, so it only happens as needed:\n\n``` py\n env_file = 'APPNAME.APPSTAGE.env'\n\n_response = None\n\ndef _get_response():\n    global _response\n    if _response is None:\n        s3 = boto3.client('s3', region_name='us-west-1')\n       with tempfile.NamedTemporaryFile() as s3_file:\n           print(\"Downloading file...\")\n           _response = s3.download_file('APPBUCKET', env_file, s3_file.name)\n           print(\"Download complete!\")\n    return _response\n```\n Even instantiating things like API and networking clients, can cause problems if doing so while a module is being imported.  It can create mutexes and threads, or open sockets and files (fork safety).\n\nSee for example:\nhttps://docs.python.org/2/library/threading.html#importing-in-threaded-code\n btw, what's the env_file used for?  Is it used to configure the celery workers?\n My real worker initializes just like my main app using a config file (env_file) via S3. It needs to load these settings before handling any API requests (main app) or async task requests (worker app). The main app and workers share many classes and functions in response to API methods.\n So if I understand correctly, I'm very limited in what I can do initialization-wise in my Celery worker app? And if I have potentially direct/indirect threaded function calls (side effects), I must lazy-load them. This should be made much clearer in the docs.\n\nI assume in the context of my task functions I have no such restrictions, right?\n Again, I may still be missing the issue fully, but I've tried another version as worker3.py that is closer to how I do this in my real app:\n\n``` python\n#\n# Stub Celery worker to demonstrate bug in Boto3 1.4.0. Works fine with previous version Boto3 1.3.1.\n# Test with: celery worker -A worker2.celery\n#\nfrom flask import Flask\nfrom celery import Celery\nimport boto3\nimport tempfile\nimport logging\nfrom app3 import load_app\n\nlogging.basicConfig(level=logging.DEBUG)\ncelery = Celery(__name__, broker='amqp://guest:guest@localhost:5672//')\n\napp = Flask(__name__)\nload_app()\nprint(\"Worker started\")\n```\n\nWith the S3 code now in a function inside another module app3.py:\n\n``` python\ndef load_app():\n    s3 = boto3.client('s3', region_name='us-west-1')\n    env_file = 'FILE.env'\n    with tempfile.NamedTemporaryFile() as s3_file:\n        print(\"Downloading file...\")\n        response = s3.download_file('BUCKET', env_file, s3_file.name)\n        print(\"Download complete!\")\n```\n\nNote that this deadlocks as well. If this is as you expect, then I should probably assume there is no way to structure the initialization code that would be thread-safe as a worker?\n I'm saddened if the boto developers have decided to start using threads in their client code: Starting threads as a side effect of initializing a client is a horrible practice.   It's a huge mistake, that will only lead to pain and misery.\n\nYou've moved it into a function, but you still call that function in the module body:\n\n``` py\napp = Flask(__name__)\nload_app()  # <-- here\n```\n\nIf you want to configure Celery using the downloaded file, you could do something like:\n\n``` py\nclass Celery(celery.Celery):\n\n    def _get_config(self):\n        self._config_source = load_app()   # << Load configuration lazily\n        return super(Celery, self)._get_config()\n```\n To be fair, it's not the boto3.client() initialization code creating the problem, it's the s3.download_file() that is either now using threads, or changed somehow and brought out a deadlock in my worker.\n\nIt would be nice if there was a thread-safe way to call download_file() in boto3 @kyleknap. My config load is actually in my create_app() call, so I'll have to work things a bit to figure out how to defer the download.\n\nThanks for the tip on Celery._get_config()\n @ask, the change is that `download_file()` (which is a method to download an object from S3) is now multithreaded. The client creation/initialization that happens when creating a client via `boto3.client()` does not use threads.\n\nMore nuanced is that in previous versions of boto3, we had a conditional in boto3 that was roughly:\n\n```\ndef download_file(self, ...): # downloads a file from S3\n    file_size = get_file_size_from_s3()\n    if file_size < 8MB:\n        download_in_this_thread_in_one_api_call()\n    else:\n        use a concurrent.futures.ThreadPoolExecutor() and download the file chunks in parallel\n```\n\nThis meant that in previous versions of boto3, if you stayed under 8MB, downloading a file would never spin up threads.  However, above 8MB and it seems like you'd still run into this problem in olde versions of boto3.\n\nIn the latest version of boto3, downloading a file from S3 via the `download_file()` method will always use threads.\n\nWe're still investigating if there's anything we can do on our end to improve this.\n\nHope that gives more context into what's going on.\n FYI, my config file is 500 bytes from a secure bucket. Not sure the threading helps me ;-)\n Ok, it's much better that the threading happens in an explicit action call, but still: threading in Python is risky, especially when you combine threads and `fork`, which is not recommended.\n\nI think optimally this should be something you explicitly enable, but at least there should be an option to disable it :/\n Maybe disable threads if I set max_concurrency=1 like this?\n\n``` python\nfrom boto3.s3.transfer import TransferConfig\nconfig = TransferConfig(max_concurrency=1)\n```\n\nor maybe introduce a new value max_concurrency=0 or something similar?\n @dmulter I do not think that setting it to one will help because the main transfer process will not happen in the main thread. The only way to get this to work is by having all of the transfer logic in the main thread. I am currently looking at a way to set this in boto3.\n\nIn the meantime, I would recommend trying to lazily call the `download_file` as suggested before or even look to use `client.get_object()` directly to download the object as the object you are downloading is very small and does not really need the managed transfer methods.\n I figured it wouldn't work, but my comment was more in terms of how you might expose the capability if/when it's available. The lazy load will be really difficult, for now I'm just keeping my boto3 version at 1.3.1. I'll look into using get_object(), thanks for the tip!\n Yeah makes sense. I was leaning toward a new configuration option that is explicit that no threads are involved. We will try to get this functionality exposed soon to unblock you from upgrading.\n I'm officially running boto3 1.4.1 after switching to s3.get_object(). I still think a safe download_file() would help a lot, but I'm good now.\n +1 on making a flag to remove Threading, it seems like a big architectural decision to be imposed on the user. Personally as soon as i call ANY of the boto3 multi-threading methods my app hangs forever. While i could be doing something wrong to cause this, it would be nice for a library not to penalize me in that way. #FreeTheThread\n @dmulter \n\nSo I just added an interface to disable threading all together in the referenced PR's. If you want to try it out, you can pull down the branches from these PR's:\n- https://github.com/boto/s3transfer/pull/70\n- https://github.com/boto/boto3/pull/859\n\nUsing the code you provided, I no longer get the hangs in the download. It would be great if you can try them out yourself as well to make sure you do not see hanging as well.\n  Greetings,\n\nWhile attempting to use Boto3 to modify an existing RDS instance's subnet group, I come across the following error:\n\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\nUnknown parameter in input: \"DBSubnetGroupName\"\n\nMy code is as follows:\nfrom boto3.session import Session\n\nsession = Session(region_name='us-east-1')\nrds_client = session.client('rds')\nrds_client.modify_db_instance(\n    DBInstanceIdentifier=rds_id,\n    DBSubnetGroupName=newSubnetGroup,\n    ApplyImmediately=True\n)\n\nVersions:\nBoto3      1.4.0\nBotocore 1.4.55\nPython     3.5.1\n\nMy initial guess is that the parameter \"DBSubnetGroupName\" is missing from the list of valid parameters for the function modify_db_instance, but I'm not familiar enough with the code to help validate this theory.\n\nThank you for your time!\n The actual value I'm passing is a string, the `newSubnetGroup` variable is just for example purposes.\n\nThe full output I get from attempting the command (with the `set_stream_logger('botocore')` line added) is as follows:\n\n`Traceback (most recent call last):\n  File \"<input>\", line 5, in <module>\n  File \"C:\\Program Files (x86)\\Python35-32\\lib\\site-packages\\botocore\\client.py\", line 236, in _api_call\n    service_name=service_name, region_name=region_name,\n  File \"C:\\Program Files (x86)\\Python35-32\\lib\\site-packages\\botocore\\client.py\", line 476, in _make_api_call\n    model=operation_model, params=request_dict,\n  File \"C:\\Program Files (x86)\\Python35-32\\lib\\site-packages\\botocore\\client.py\", line 529, in _convert_to_request_dict\n    def get_paginator(self, operation_name):\n  File \"C:\\Program Files (x86)\\Python35-32\\lib\\site-packages\\botocore\\validate.py\", line 269, in serialize_to_request\n    if report.has_errors():\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\nUnknown parameter in input: \"DBSubnetGroupName\", must be one of: DBInstanceIdentifier, AllocatedStorage, DBInstanceClass, DBSecurityGroups, VpcSecurityGroupIds, ApplyImmediately, MasterUserPassword, DBParameterGroupName, BackupRetentionPeriod, PreferredBackupWindow, PreferredMaintenanceWindow, MultiAZ, EngineVersion, AllowMajorVersionUpgrade, AutoMinorVersionUpgrade, Iops, OptionGroupName, NewDBInstanceIdentifier, StorageType, TdeCredentialArn, TdeCredentialPassword, CACertificateIdentifier, Domain, CopyTagsToSnapshot, MonitoringInterval, DBPortNumber, PubliclyAccessible, MonitoringRoleArn, DomainIAMRoleName, PromotionTier`\n Please delete this item.\n\nAfter reviewing this issue once I tried this in a fresh state, I do not seem to be getting it any longer. However, I do need to point out that there is a new issue:\n\n`Traceback (most recent call last):\n  File \"<input>\", line 5, in <module>\n  File \"C:\\Program Files (x86)\\Python35-32\\lib\\site-packages\\botocore\\client.py\", line 159, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"C:\\Program Files (x86)\\Python35-32\\lib\\site-packages\\botocore\\client.py\", line 494, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (InvalidVPCNetworkStateFault) when calling the ModifyDBInstance operation: You cannot move DB instance jc61yi2u8h9fo2 to subnet group dev-awsvpc-us-east-1-rdspublicsubnetgroup-n9zfyt9dkhqg. The specified DB subnet group and DB instance are in the same VPC. Choose a DB subnet group in different VPC than the specified DB instance and try again.`\n\nEven using the RDS API directly, it seems that updating the subnet group to another one in the same VPC will not work, so it does not seem like an issue inside Boto3 or Botocore. I've sent a ticket to Amazon to let them know that this is not functioning as they specify in their documentation:\n\n\"You can use this parameter to move your DB instance to a different VPC, **or to a different subnet group in the same VPC**.\"\nhttp://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_ModifyDBInstance.html\n\nThank you very much for your time!\n Hope everything works out!  This code fails\n\n``` python\nresponse = client.create_bucket(ACL=\"private\", Bucket=s3_bucket_name, CreateBucketConfiguration={ \"LocationConstraint\": \"us-east-1\"})\n```\n\nWith this error:\n\n```\nbotocore.exceptions.ClientError: An error occurred (InvalidLocationConstraint) when calling the CreateBucket operation: The specified location-constraint is not valid\n```\n\nThis probably has to do with this \"bug/quirk\":\n\n> The location constraint for S3 US East region is an empty string according to the following documentation. You should always leave it blank when referring to S3 US Standard region.\n> \n> http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETlocation.html\n\nBut IMO the library should handle this quirk and allow \"us-east-1\" as the location string.\n\n**EDIT**: Actually empty string also doesn't work, you have to omit the `LocationConstraint` parameter entirely.\n  Sample code, assume we have the EC2.Instance:\n\nfor dev in instance.network_interfaces:\n     print (dev.association_attribute)\n\nprints:\n\n{u'PublicIp': 'IP_ADDRESS', u'PublicDnsName': 'ec2-XX-XX-XX-XX.us-west-2.compute.amazonaws.com', u'IpOwnerId': 'XXXXXXXX'}\n\nIt's missing AllocationId and AssociationId in the attribute data.\n A workaround:\n\nfor dev in instance.network_interfaces:\n     print ec2_client.describe_network_interfaces(NetworkInterfacesIds=[dev.id])\n\nThis does print AllocationId and AssocationId for the interface\n Also noted is dev.association is None when there is association data.\n Closing due to inactivity\n No further questions, I have workaround implemented.\n  For some reason, the [`get_template`](http://boto3.readthedocs.io/en/latest/reference/services/cloudformation.html#CloudFormation.Client.get_template) call in CloudFormation is only available on the client, rather than on a `Stack` resource. I'd expect there to be a property of the stack that lets you view the (ideally already deserialized from JSON) template for a given stack.\n\nCan you add `.template` attribute to `Stack`?\n  code\n\n```\nfor obj_sum in bucket.objects.all():\n        if obj_sum.storage_class == 'GLACIER':\n            obj = s3.Object(obj_sum.bucket_name, obj_sum.key)\n                if not obj.restore:\n                    print('Submitting restoration request: %s' % obj.key)\n                    obj.restore_object(RestoreRequest={\"Days\": 7})\n```\n\nstacktrace:\n\n```\nTraceback (most recent call last):\n  File \"/Users/user/app/app-api/restore_s3.py\", line 21, in <module>\n    temp_restore()\n  File \"/Users/user/app/app-api/restore_s3.py\", line 11, in temp_restore\n    if not obj.restore:\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/boto3/resources/factory.py\", line 339, in property_loader\n    self.load()\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/boto3/resources/factory.py\", line 505, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/boto3/resources/action.py\", line 83, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/client.py\", line 159, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/client.py\", line 483, in _make_api_call\n    operation_model, request_dict)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/endpoint.py\", line 141, in make_request\n    return self._send_request(request_dict, operation_model)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/endpoint.py\", line 168, in _send_request\n    request, operation_model, attempts)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/endpoint.py\", line 233, in _get_response\n    response_dict, operation_model.output_shape)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/parsers.py\", line 211, in parse\n    parsed = self._do_parse(response, shape)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/parsers.py\", line 602, in _do_parse\n    member_shapes, final_parsed)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/parsers.py\", line 658, in _parse_non_payload_attrs\n    member_shape, headers[header_name])\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/parsers.py\", line 258, in _parse_shape\n    return handler(shape, node)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/parsers.py\", line 149, in _get_text_content\n    return func(self, shape, text)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/parsers.py\", line 412, in _handle_timestamp\n    return self._timestamp_parser(text)\n  File \"/Users/user/app/venv2/lib/python2.7/site-packages/botocore/utils.py\", line 336, in parse_timestamp\n    raise ValueError('Invalid timestamp \"%s\": %s' % (value, e))\nValueError: Invalid timestamp \"Thu,%2031%20Dec%202099%2020:00:00%20GMT\": Unknown string format\n```\n\ntested on:\npython 2.7 and 3.5\npython-dateutil==2.5.3 and python-dateutil==2.4.2\nboto==2.39.0 and latest\nboto3 1.4.0\n Yes, I'm just run that code in shell\n pip freeze\n`amqp==1.4.9\nanyjson==0.3.3\nBabel==2.2.0\nbilliard==3.3.0.22\nboto==2.39.0\nboto3==1.4.0\nbotocore==1.4.58\ncelery==3.1.20\nclick==6.6\ncoverage==4.0.3\ndefusedxml==0.4.1\nDjango==1.9.4\ndjango-admin-smoke-tests==0.2.1\ndjango-airbrake==1.2.0\ndjango-appconf==1.0.2\ndjango-authtools==1.4.0\ndjango-bootstrap3==7.0.1\ndjango-braces==1.9.0\ndjango-celery==3.1.17\ndjango-celery-transactions==0.3.6\ndjango-cleanup==0.4.2\ndjango-compressor==2.0\ndjango-debug-toolbar==1.4\ndjango-nose==1.4.3\ndjango-oauth-toolkit==0.10.0\ndjango-paintstore==0.2\ndjango-phonenumber-field==1.1.0\ndjango-positions==0.5.3\ndjango-push-notifications==1.4.1\ndjango-rest-framework-social-oauth2==1.0.4\ndjango-stdimage==2.3.2\ndjango-storages==1.4\ndjango-widget-tweaks==1.4.1\ndjangorestframework==3.3.2\ndjrill==2.0\ndocutils==0.12\nFlask==0.11.1\ngooglemaps==2.4.4\ngunicorn==19.4.5\nhttplib2==0.9.2\nitsdangerous==0.24\nJinja2==2.8\njmespath==0.9.0\nkombu==3.0.33\nMarkdown==2.6.7\nMarkupSafe==0.23\nnose==1.3.7\noauth2==1.9.0.post1\noauthlib==2.0.0\nphonenumberslite==7.2.8\nPillow==3.1.0\nprogressbar2==3.6.0\npsycopg2==2.6.1\nPyJWT==1.4.2\npython-dateutil==2.5.3\npython-google-places==1.1.0\npython-social-auth==0.2.21\npython3-openid==3.0.10\npytz==2015.7\nrcssmin==1.0.6\nredis==2.10.5\nrequests==2.9.1\nrequests-oauthlib==0.7.0\nrjsmin==1.0.12\ns3transfer==0.1.5\nself==0.0.2\nsix==1.10.0\nsqlparse==0.1.19\nWerkzeug==0.11.11\n`\n **Problem** \r\n\r\nAny un-parseable `Expires` header will mean you cannot retrieve the object with `boto3`.\r\n\r\n**Proposed Solution**\r\n\r\nIn `botocore.parsers.ResponseParser`, `_handle_timestamp` should return `None` or, just the original text if it cannot be converted to datetime. (Possibly wrapped in custom type, ie, `Unparseable(data)`)\r\n\r\nOr, the spec for \"GetObjectResponse\" should note a default value if \"Expires\" fails to parse.\r\n\r\n**Details**\r\n\r\n@kyleknap Here's a reproduction from an internal issue we had with migrating from boto to boto3.\r\n\r\nFor some versions of `boto`, it would urlencode any `unicode` types passed in`headers`, resulting in objects that cannot be retrieved by `boto3`.\r\n\r\nIt's not present in `2.45.0`, but I can confirm it is present in `boto==2.38.0`\r\n\r\n\r\n```py\r\nimport boto, six, datetime, os\r\nfrom boto.s3.key import Key\r\n\r\nbucket_name = 'my-bucket-to-test'\r\nkey_name = os.urandom(8).encode('hex')\r\ndata = os.urandom(16)\r\nhdr_expires = u'Tue, 24 Jan 2017 07:52:32 GMT' # this being a unicode string causes the issue\r\n\r\nconn = boto.connect_s3()\r\nbucket = conn.get_bucket(bucket_name, validate=False)\r\nkey = bucket.new_key(key_name)\r\nkey.set_contents_from_file(\r\n    six.BytesIO(data),\r\n    headers={'Expires': hdr_expires})\r\n\r\n# Wont expose the Expires header without subclass\r\nclass Key2(Key):\r\n    def __init__(self, bucket=None, name=None):\r\n        super(Key2, self).__init__(bucket=bucket, name=name)\r\n        self._expires_header = {}\r\n    def handle_addl_headers(self, headers):\r\n        for k, v in headers:\r\n            if k == 'expires':\r\n                self._expires_header = v\r\n\r\nout = six.BytesIO()\r\nfetched = Key2(bucket, key_name)\r\nfetched.get_contents_to_file(out)\r\nprint 'Boto2 Expires: %r' % fetched._expires_header\r\n\r\n```\r\n\r\nwith `boto==2.38.0` this prints\r\n```\r\nBoto2 Expires: 'Tue,%2024%20Jan%202017%2007:52:32%20GMT'\r\n```\r\n\r\nwith `boto==2.45.0` this prints\r\n```\r\nBoto2 Expires: 'Tue, 24 Jan 2017 07:52:32 GMT'\r\n```\r\n\r\nThe result - objects affected by that bug cannot be read by `boto3`. I have the same issue, I have images saved in S3, got the following stack traces when calling `image.width`.\r\n\r\n`Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/utils.py\", line 352, in parse_timestamp\r\n    return dateutil.parser.parse(value, tzinfos={'GMT': tzutc()})\r\n  File \"/usr/lib/python3/dist-packages/dateutil/parser.py\", line 1008, in parse\r\n    return DEFAULTPARSER.parse(timestr, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/dateutil/parser.py\", line 395, in parse\r\n    raise ValueError(\"Unknown string format\")\r\nValueError: Unknown string format\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/core/files/images.py\", line 17, in _get_width\r\n    return self._get_image_dimensions()[0]\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/core/files/images.py\", line 27, in _get_image_dimensions\r\n    self.open()\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/db/models/fields/files.py\", line 81, in open\r\n    self.file.open(mode)\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/db/models/fields/files.py\", line 51, in _get_file\r\n    self._file = self.storage.open(self.name, 'rb')\r\n  File \"/usr/local/lib/python3.5/dist-packages/django/core/files/storage.py\", line 37, in open\r\n    return self._open(name, mode)\r\n  File \"/usr/local/lib/python3.5/dist-packages/storages/backends/s3boto3.py\", line 424, in _open\r\n    f = self.file_class(name, mode, self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/storages/backends/s3boto3.py\", line 98, in __init__\r\n    self.obj.load()\r\n  File \"/usr/local/lib/python3.5/dist-packages/boto3/resources/factory.py\", line 505, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(**params)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/client.py\", line 253, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/client.py\", line 531, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/endpoint.py\", line 141, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/endpoint.py\", line 168, in _send_request\r\n    request, operation_model, attempts)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/endpoint.py\", line 233, in _get_response\r\n    response_dict, operation_model.output_shape)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/parsers.py\", line 212, in parse\r\n    parsed = self._do_parse(response, shape)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/parsers.py\", line 613, in _do_parse\r\n    member_shapes, final_parsed)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/parsers.py\", line 669, in _parse_non_payload_attrs\r\n    member_shape, headers[header_name])\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/parsers.py\", line 261, in _parse_shape\r\n    return handler(shape, node)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/parsers.py\", line 150, in _get_text_content\r\n    return func(self, shape, text)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/parsers.py\", line 415, in _handle_timestamp\r\n    return self._timestamp_parser(text)\r\n  File \"/usr/local/lib/python3.5/dist-packages/botocore/utils.py\", line 354, in parse_timestamp\r\n    raise ValueError('Invalid timestamp \"%s\": %s' % (value, e))\r\nValueError: Invalid timestamp \"Mon,%2006%20Mar%202017\": Unknown string format` I get with local DynamoDB and python 3 \r\n  if isinstance(value, (int, float)):\r\n        # Possibly an epoch time.\r\n        return datetime.datetime.fromtimestamp(value, tzlocal())\r\n\r\nhere invalid timestamp\r\nvalue = 1506000184.758\r\ntzlocal() is None\r\n....\r\n    def _naive_is_dst(self, dt):\r\n        timestamp = _datetime_to_timestamp(dt)\r\n        return time.localtime(timestamp + time.timezone).tm_isdst\r\ntimestamp=0,0\r\ntime.timezone = -7200\r\n See this is probably my problem https://github.com/dateutil/dateutil/issues/197  Hello!\n\nWe're creating RDS instances using `boto3==1.4.0.` Our code looks like:\n\n``` python\nclient = boto3.client('rds', region_name='us-west-2')\n\nresponse = client.create_db_instance(\n    ...\n    VpcSecurityGroupIds=['sg-groupid'],\n    PubliclyAccessible=True,\n    Port=3306,\n    ...\n)\n```\n\nBased on documentation we expect key 'Endpoint' to be in the `response['DBInstance']`, but there is no such key:\n\n``` python\nprint(response['DBInstance'].keys())\n>>>dict_keys(['CACertificateIdentifier', 'Engine', 'MonitoringInterval', 'StorageEncrypted', 'DBName', 'AutoMinorVersionUpgrade', 'PreferredMaintenanceWindow', 'DBInstanceClass', 'MasterUsername', 'DbiResourceId', 'DBSecurityGroups', 'PubliclyAccessible', 'DbInstancePort', 'OptionGroupMemberships', 'PendingModifiedValues', 'DBInstanceArn', 'CopyTagsToSnapshot', 'LicenseModel', 'EngineVersion', 'DBInstanceStatus', 'DBSubnetGroup', 'PreferredBackupWindow', 'StorageType', 'DBInstanceIdentifier', 'BackupRetentionPeriod', 'VpcSecurityGroups', 'AllocatedStorage', 'DBParameterGroups', 'MultiAZ', 'DomainMemberships', 'ReadReplicaDBInstanceIdentifiers', 'AvailabilityZone'])\n```\n\nAlso, it's not clear why we receive DbInstancePort as 0 (zero) (our instance is not a part of any cluster):\n\n``` python\nprint(response['DBInstance']['DbInstancePort'])\n>>>0\n```\n\n**Update:** Ok, I figured out that even in AWS UI I don't see `WriterEndpoint` field set if db instance's status is `creating`. Should the `Endpoint` key be in the  `create_db_instance`  response if that data doesn't exist?\n Closing due to inactivity\n  A recent s3transfer update included automatically adjusting part\nsizes that were invalid, so functional tests needed to be updated\nto use valid chunk sizes.\n\ncc @kyleknap @jamesls\n  Hi.\n\nI'm trying to read the S3 object by using the [read API](http://boto3.readthedocs.io/en/latest/reference/services/s3.html?highlight=streamingbody#S3.Object.get) with the following codes\n\n```\ns3object = s3_resource.Object(bucket, filename)\ns3data    = s3object.get()['Body']\nwhile True:\n    data = s3data.read(\"specify the size to read\")\n    if not data:\n         break\n```\n\nHowever, if I try to read the data from the huge size object (:= 3GB). The read API sometimes returns the size of the data less than the specified size. I suspect the API faced the end of the file, however, it occurs in the middle of reading the file.\n\nCan you check this issue?\n-S.\n\n**P.S. I used the Python 2.7.x, and the boto3 library.**\n Closing due to inactivity\n  In boto there was `volume.add_tag()` and `volume.remove_tag()`.\n\nIn boto3 there is `volume.create_tags()` but no corresponding `volume.delete_tags()`.\n\nThe client has [delete_tags()](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.delete_tags) but I think the method should exist for the resource instance object too.\n\nDiscussion?\n\n_P.S. This is the same as #381, but for volumes instead of instances._ \n @kyleknap Is there currently anyway to delete a tag from a volume any other way with boto3?\r\n\r\nnvm, I totally missed the client interface: http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.delete_tags  Specifying that during inline client creation, \"region_name\" needs to be used in place of \"region\".\nEg:\nlambda_client = boto3.client('lambda', aws_access_key_id=aws_access_key, aws_secret_access_key=aws_secret_key, region_name='us-east-1')\n Awesome thanks! Yeah, thought I'd use some Bias For Action here :D\n  **Request:** Add S3 Object.storage_class possible values to documentation ([relevant boto3 docs](http://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Object.storage_class))\n**Reason:** Guessing possible values and meaning is not fun and prone to errors.\n\n**Context:**\n\n``` python\nimport boto3\n\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('glacier_test')\nfor obj_sum in bucket.objects.all():\n    obj = s3.Object(obj_sum.bucket_name, obj_sum.key)\n    storage_class = obj.storage_class\n    restore = obj.restore\n    print(obj.key, obj.storage_class, obj.restore)\n```\n\nIn the example above, obj.storage_class seems to return None or 'GLACIER', but I don't see anywhere in the documentation about the possible values?\n\nI assume `obj.storage_class is None` means 'On normal S3 storage, not transitioned to glacier'? \n   Ah, good point. I'll make the needed changes over there.\n @kyleknap Alright, now the JSON files are updated as well. I noticed that `scripts/new-change` refers to `scripts/gen-changelog`, which doesn't seem to be present in the repository. Is it perhaps in some other repository?\n Yeah, makes sense.\n  I have a script that uploads large files to an s3 bucket and initiates multi-part upload for binary files that are larger than 3 GB. For most files, the process runs seamlessly.  However, some simply fail.  Here are the logs for one such fail:\nTraceback (most recent call last):\n  File \"s3upload.py\", line 123, in <module>\n    main()\n  File \"s3upload.py\", line 108, in main\n    s3multi_part_upload(bucketname, file_with_path, file_directory)\n  File \"s3upload.py\", line 61, in s3multi_part_upload\n    UploadId=multipart_upload['UploadId'], Body=data)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 278, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 561, in _make_api_call\n    operation_model, request_dict)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/endpoint.py\", line 117, in make_request\n    return self._send_request(request_dict, operation_model)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/endpoint.py\", line 146, in _send_request\n    success_response, exception):\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/endpoint.py\", line 219, in _needs_retry\n    caught_exception=caught_exception, request_dict=request_dict)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/hooks.py\", line 227, in emit\n    return self._emit(event_name, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/hooks.py\", line 210, in _emit\n    response = handler(**kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/retryhandler.py\", line 183, in __call__\n    if self._checker(attempts, response, caught_exception):\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/retryhandler.py\", line 251, in __call__\n    caught_exception)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/retryhandler.py\", line 274, in _should_retry\n    return self._checker(attempt_number, response, caught_exception)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/retryhandler.py\", line 314, in __call__\n    caught_exception)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/retryhandler.py\", line 223, in **call**\n    attempt_number, caught_exception)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/retryhandler.py\", line 356, in _check_caught_exception\n    raise caught_exception\nbotocore.vendored.requests.exceptions.ConnectionError: ('Connection aborted.', error(104, 'Connection reset by peer'))\n\nThis did not fail right away and actually took over an hour to return the error. I have other files that are not multi-part size which simply halt in the middle of uploading with no error or reason given. When I try to upload these files from the interface manually it also does not work and returns an error, but no reason for the error. Please advise as I do not see this to be an issue on my end as many other similar files are able to be uploaded seamlessly. Thank you.\n $ pip freeze | grep boto3\nboto3==1.4.0\n botocore==1.4.43\n Closing due to inactivity\n    I am using AWS lambda to send email with attachements through SES. here is my code:\n\n```\nimport boto3\nfrom email.mime.text import MIMEText\nfrom email.mime.application import MIMEApplication\nfrom email.mime.multipart import MIMEMultipart\n\nses = boto3.client('ses')\ns3_client = boto3.client('s3')\n\nto_emails = [\"xxx\", \"xxx\"]\n\nCOMMASPACE = ', '\n\ndef lambda_handler(event, context):\n    # create raw email\n    msg = MIMEMultipart()\n    msg['Subject'] = 'Email subject'\n    msg['From'] = 'xxx'\n    msg['To'] = COMMASPACE.join(to_emails)  ## joined the array of email strings\n    # edit: didn't end up using this ^\n\n    part = MIMEText('Attached is an important CSV')\n    msg.attach(part)\n\n    file_name = s3_client.download_file('x_file', 'x.jpg', '/tmp/x.jpg')\n\n    if file_name:\n        part = MIMEApplication(open(file_name, \"rb\").read())\n        part.add_header('Content-Disposition', 'attachment', filename=file_name)\n        msg.attach(part)\n\n    ses.send_raw_email(RawMessage=msg.as_string(), Source=msg['From'], Destinations=to_emails)\n```\n\n**found this error:**\n\n```\nParameter validation failed:\nInvalid type for parameter RawMessage, value: Content-Type: multipart/mixed; boundary=\"===============1951926695068149774==\"\nMIME-Version: 1.0\nSubject: Email subject\nFrom: xxx\nTo: xxx, xxx\n\n--===============1951926695068149774==\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\n\nAttached is an important CSV\n--===============1951926695068149774==--\n, type: <type 'str'>, valid types: <type 'dict'>: ParamValidationError\nTraceback (most recent call last):\n  File \"/var/task/lambda_function.py\", line 33, in lambda_handler\n    ses.send_raw_email(RawMessage=msg.as_string(), Source=msg['From'], Destinations=to_emails)\n  File \"/var/runtime/botocore/client.py\", line 278, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/var/runtime/botocore/client.py\", line 548, in _make_api_call\n    api_params, operation_model, context=request_context)\n  File \"/var/runtime/botocore/client.py\", line 601, in _convert_to_request_dict\n    api_params, operation_model)\n  File \"/var/runtime/botocore/validate.py\", line 270, in serialize_to_request\n    raise ParamValidationError(report=report.generate_report())\nParamValidationError: Parameter validation failed:\nInvalid type for parameter RawMessage, value: Content-Type: multipart/mixed; boundary=\"===============1951926695068149774==\"\nMIME-Version: 1.0\nSubject: Email subject\nFrom: xxx\nTo:xxx, xxx\n\n--===============1951926695068149774==\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\n\nAttached is an important CSV\n--===============1951926695068149774==--\n, type: <type 'str'>, valid types: <type 'dict'>\n```\n this error came when I put your upper code:\nSyntax error in module 'lambda_function': invalid syntax (lambda_function.py, line 36)\n After checking found this code works:\n\n```\nses.send_raw_email(\n    RawMessage={\n         'Data': msg.as_string(),\n    },\n    Source=msg['From'],\n    Destinations=to_emails\n)\n```\n\nOutput is not much as I expected. email send but no any attachment file\n Closing due to inactivity\n  When performing an `AuthorizeSecurityGroupIngress` call, I am able to specify `CidrIp` as a parameter as per the [docs](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.authorize_security_group_ingress). However, when you change that call to `AuthorizeSecurityGroupEgress` with the same parameters, it fails, even though the docs for that call also state that you can use `CidrIp` as a parameter. \n\nIn reading the warnings/notes, it seems that this may have something to do with EC2-Classic vs. EC2-VPC, but if that's the case, then why does the Authorize Ingress call succeed? \n\nI wrote a quick [script](https://gist.github.com/andrewalexander/64c4f4aa2b4194b1049e3f29e0d901e6) to demonstrate the behavior. This is the output:\n\n```\n$ python sg-egress.py\nSuccessful ingress: {'ResponseMetadata': {'HTTPStatusCode': 200, 'RequestId': 'UUID'}}\nUnsuccessful Egress: An error occurred (UnknownParameter) when calling the AuthorizeSecurityGroupEgress operation: The parameter CidrIp is not recognized\nSuccessful Egress: {'ResponseMetadata': {'HTTPStatusCode': 200, 'RequestId': 'UUID'}}\n```\n\nI understand that using the `IpPermissions` dict is recommended anyway, but this was more to address the inconsistencies between the two seemingly identical API calls. \n I'll take a look at this, thanks for reporting it\n andrew, what version of boto3 are you using?\n ```\n$ pip freeze | grep boto3\nboto3==1.4.0\n```\n And what version of botocore?\n `botocore==1.4.49`\n Closing due to inactivity\n  Hello!\n\nSuppose I have an Object:\n\n```\nobj = boto3.resource('s3').Bucket('bucket_name').Object('object_key')\n```\n\nI want to replace `obj.put(Body=..., **kwargs)` functionality with `obj.upload_file(`) due to auto multiparts upload on file > 5gb (not sure about size, let's say _on large files_). \nHow can I migrate my code in that case? \nWhere I can set, for example,  `ContentEncoding`? Can I just pass it to `ExtraArgs` like:\n\n```\nupload_file(..., ExtraArgs={ContentEncoding: 'blabla'})\n```\n  If there is 20 items and we want to list 5 items per page,  the paginator PaginationConfig seems using PageSize to control pagination. \n\nFollowing works, \"**Marker**\" is return when there is more data to be returned, and \"**IsTruncated**\" also return True.\n\n```\nimport sys\nimport boto3\niam = boto3.client(\"iam\")\nmarker = None\nwhile True:\n    paginator = iam.get_paginator('list_users')\n    response_iterator = paginator.paginate(\n        PaginationConfig={\n            'PageSize': 5,\n            'StartingToken': marker})\n    for page in response_iterator:\n        print(\"Next Page : {} \".format(page['IsTruncated']))\n        u = page['Users']\n        for user in u:\n            print(user['UserName'])\n    try:\n        marker = page['Marker']\n        print(marker)\n    except KeyError:\n        sys.exit()\n```\n\nHowever, if PaginationConfig use Maxitem, e.g. \n\n```\n response_iterator = paginator.paginate(\n        PaginationConfig={\n            'MaxItems': 5,\n            'StartingToken': marker})\n```\n\nThe list just show 5 items and stop,  no **Markers** returns(and isTruncated return as false) as mentioned in the documentation. \n I am not sure if that is related but I believe it is, at least somehow.\r\nI am currently using pagination to retrieve snapshots and I set MaxItems to 1000 as well as Page to 1000 << seems not to make a whole lot of sense but I am just trying around and it really doesn't matter if Page is 100 or 10 either, same behavior then.\r\nSo far so good, my approach here is to call the same script again if a nextToken is found in the result and with that call I will also fill the 'nextToken' into PaginationConfig (nextToken comes with the args).\r\nDoing that (I checked the token passes along correctly) the next call does work on the same snapshots again, then I get a new nextToken (its different then the one before) and another call will be made, again the same snapshots are coming along.\r\n\r\nAny idea what I do wrong here ? (maybe its not supposed to work like that with the marker ... if I more or less leave the context of the current script it may lose the context somehow?)\r\n\r\nbtw. by using 'StartingToken' in the PaginationConfig I am getting a boto error, this key seems to be unknown, replacing it with 'NextToken' let it work without an error ... maybe thats related, not sure It is also weird how pagination only works for already predefined methods, so some methods like `Lambda.list_versions_by_function` can return 'Marker' but cannot be paginated :( But i guess this has to do with the API itself not returning the function on the paginators list https://github.com/boto/botocore/blob/develop/botocore/client.py#L658 Being nailed by this too Not sure if it is the same issue but this:\r\n\r\n`        result = paginator.paginate(Bucket=bucket, Prefix=parent_folder, Delimiter='/', PaginationConfig={'MaxItems': 10})`\r\n\r\nReturns alot more than 10 items.\r\n @crowdwave my guess is that using the paginator will always return ALL of the resources your are trying to list, and maxitems will literally return 10 pages at a time. So if you had a for loop and you iterate thru the \"result\" (which you know ahead of time has 100 items) it will loop 10 times.  I have written a Python3 script which is using `boto` to copy data from one S3 bucket to another bucket. Now i have updated that script to use `boto3`. The issue is that S3 bucket to bucket copy is very slow as compared to the code written using `boto`.  \n\nI have tested the code on my local system as well as on an `EC2` instance but results are same. \n\nBelow are both the scripts. Script written with `boto` is taking around `26 minutes` to copy 2GB of data from one S3 bucket to another. Script written with `boto3` is taking around `1 hour and 20 minutes` to copy 2GB of data from one S3 bucket to another. Both the buckets are in same region.\n\nCan anyone please help me to understand the reason of slowness with `boto3`.\n### Code using boto3\n\n``` Python\nfrom queue import Queue\nfrom threading import Thread\n\n############ boto 2.x\nimport boto\nfrom boto.s3.key import Key\nfrom boto.s3.connection import S3Connection\n\n############ boto 3\nimport boto3\nimport boto3.session\nimport botocore\n\n\nclass CopyWorker(Thread):\n\n    def __init__(self, queue, src_bucket_name, dst_bucket_name):\n        self._queue = queue\n        self._src_bucket_name = src_bucket_name\n        self._dst_bucket_name = dst_bucket_name\n        session = boto3.session.Session()\n        s3 = session.resource('s3')\n        self._src_bucket, self._dst_bucket = s3.Bucket(self._src_bucket_name), s3.Bucket(self._dst_bucket_name)\n        super(CopyWorker, self).__init__()\n\n    def run(self):\n        while True:\n            key = self._queue.get()\n            self._dst_bucket.copy(\n                CopySource={\n                    'Bucket': self._src_bucket_name,\n                    'Key': key.key\n                },\n                Key=key.key,\n            )\n            self._queue.task_done()\n\n\nclass S3(object):\n\n    @staticmethod\n    def s3_resource():\n        return boto3.resource('s3')\n\n    @classmethod\n    def copy_files(cls, src_bucket_name, dst_bucket_name, threads=20):\n        src_bucket = cls.bucket(src_bucket_name)\n        dst_bucket = cls.bucket(dst_bucket_name)\n        copy_queue = Queue(maxsize=1000)\n\n        for thread in range(threads):\n            worker = CopyWorker(copy_queue, src_bucket_name, dst_bucket_name)\n            worker.daemon = True\n            worker.start()\n\n        for keys in cls.bucket_keys(src_bucket):\n            for key in keys:\n                copy_queue.put(key)\n\n        copy_queue.join()\n\n   @classmethod\n   def bucket_keys(cls, bucket):\n        keys = []\n        for key in bucket.objects.all():\n            keys.append(key)\n\n            if len(keys) == 1000:\n                yield keys\n                keys = []\n        else:\n            yield keys\n\n    @classmethod\n    def bucket(cls, bucket_name):\n        s3 = cls.s3_resource()\n        bucket = s3.Bucket(bucket_name)\n        try:\n            s3.meta.client.head_bucket(Bucket=bucket.name)\n        except botocore.exceptions.ClientError as e:\n            # If a client error is thrown, then check that it was a 404 error.\n            # If it was a 404 error, then the bucket does not exist.\n            error_code = int(e.response['Error']['Code'])\n            if error_code == 404:\n                raise ValueError('{} bucket doesn\\'t exist'.format(bucket_name))\n\n        return bucket\n```\n\n``` Python\nS3.copy_files('bucket-prod', 'bucket-bkp')\n```\n\n---\n### Code using boto\n\n``` Python\nclass CopyWorker(Thread):\n\n    def __init__(self, queue, src_bucket_name, dst_bucket_name):\n        self._queue = queue\n        self._src_bucket_name = src_bucket_name\n        self._dst_bucket_name = dst_bucket_name\n        self._src_bucket, self._dst_bucket = self.__s3()\n        super(CopyWorker, self).__init__()\n\n    def __s3(self):\n        conn = S3Connection()\n        src_bucket = conn.get_bucket(self._src_bucket_name)\n        dst_bucket = conn.get_bucket(self._dst_bucket_name)\n        return src_bucket, dst_bucket\n\n    def run(self):\n        while True:\n            key = self._queue.get()\n            self._dst_bucket.copy_key(key.key, self._src_bucket_name, key.key)\n            self._queue.task_done()\n\n\nclass S3(object):\n\n    @staticmethod\n    def _connect():\n        return S3Connection()\n\n    def copy_files(self, src_bucket_name, dst_bucket_name, threads=20):\n        s3 = self._connect()\n        src_bucket = self._bucket(s3, src_bucket_name)\n        dst_bucket = self._bucket(s3, dst_bucket_name)\n        copy_queue = Queue(maxsize=1000)\n\n        for thread in range(threads):\n            worker = CopyWorker(copy_queue, src_bucket_name, dst_bucket_name)\n            worker.daemon = True\n            worker.start()\n\n        for keys in self._keys(src_bucket):\n            for key in keys:\n                copy_queue.put(key)\n\n        copy_queue.join()\n\n    @staticmethod\n    def _bucket(connection, bucket_name):\n        bucket = connection.lookup(bucket_name)\n        if bucket is None:\n            raise ValueError('Incorrect Bucket Name >> {}'.format(bucket_name))\n\n        return bucket\n\n    @staticmethod\n    def _keys(bucket):\n        keys = []\n        for key in bucket:\n            keys.append(key)\n\n            if len(keys) == 1000:\n                yield keys\n                keys = []\n\n        if keys:\n            yield keys\n```\n\n``` Python\nS3().copy_files('bucket-prod', 'bucket-bkp')\n```\n @kyleknap Thanks for tip. I will check it today and update you.\n @kyleknap There are `70616` files i am copying from one bucket to another and only two files are of size `1.6 MB`. All the other files are less then `300KB`. According to [TransferConfig](https://boto3.readthedocs.io/en/latest/reference/customizations/s3.html#boto3.s3.transfer.TransferConfig) `multipart_threshold` is `8MB` which means multiple threads will be created only when a file of size `8MB` is encountered which in my case will never happen.\n Thanks @kyleknap. I will also further look into it to get some hint about what 's happening.\n @kyleknap I think i have already tried `object.copy_from()` but i will check them both again. Thanks\n @kyleknap Looks like `client.copy_object()` gives huge performance improvement. By using it i was able to copy same amount of data in just `22 minutes`. I found little time for testing and only checked it once. I will further check it and update you.\n @kyleknap `client.copy_object()` improves the performance and issue is resolved now . But i am wondering that why performance is bad for higher-level resource objects?\n ``` Python\nself.s3.meta.client.copy_object(\n                    CopySource={\n                        'Bucket': self._src_bucket_name,\n                        'Key': key.key\n                    },\n                    Bucket=self._dst_bucket_name,\n                    Key=key.key\n                )\n```\n\n@kyleknap This is what i have changed in `class CopyWorker`. And after this change bucket to bucket copy is improved and now the average time to copy same amount of data is less then the time taken by old code. \n Thanks Kyle,  I will definitely try this.\n\nOn Thu, Sep 8, 2016, 10:24 PM Kyle Knapp notifications@github.com wrote:\n\n> Thanks for looking into this. We will try this out as well to see if we\n> get a difference as well. One way to look at what may be going on is to use\n> boto3.set_stream_logger('') to see all of the debug logs and see where\n> the slowness may be coming from. You can also filter it by package so I\n> would suggest also replacing the empty string with 'botocore' and 'boto3'\n> to get more filtered debug logs.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/boto/boto3/issues/787#issuecomment-245673248, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AGdFNMCqpUCMnrc14X0IIg5A561uvqb7ks5qoETjgaJpZM4JtdMw\n> .\n  I save and reload messages in my application, and when I access the `message_attributes` of the thawed instance, I get the error:\n\n```\nTraceback (most recent call last):\n  File \"C:\\Users\\James\\.virtualenvs\\deckboom-demo\\lib\\site-packages\\spyne-2.12.11-py3.5.egg\\spyne\\application.py\", line 151, in process_request\n    ctx.out_object = self.call_wrapper(ctx)\n  File \"C:\\Users\\James\\.virtualenvs\\deckboom-demo\\lib\\site-packages\\spyne-2.12.11-py3.5.egg\\spyne\\application.py\", line 235, in call_wrapper\n    retval = ctx.descriptor.service_class.call_wrapper(ctx)\n  File \"C:\\Users\\James\\.virtualenvs\\deckboom-demo\\lib\\site-packages\\spyne-2.12.11-py3.5.egg\\spyne\\service.py\", line 207, in call_wrapper\n    return ctx.function(*args)\n  File \"c:\\users\\james\\code\\deckboom-demo\\django-deckboom\\deckboom\\rpc.py\", line 167, in receiveResponseXML\n    replyQueue = message.message_attributes\\\n  File \"C:\\Users\\James\\.virtualenvs\\deckboom-demo\\lib\\site-packages\\boto3-1.4.0-py3.5.egg\\boto3\\resources\\factory.py\", line 343, in property_loader\n    self.__class__.__name__))\nboto3.exceptions.ResourceLoadException: sqs.Message has no load method\n```\n That's exactly what I was doing, because I needed to process the message in a separate context from where I retrieved the message. (No, I couldn't do anything about it.)\n\nWhat I ended up doing was saving the message attributes next to the receipt handle. It seems to be working.\n\nFor reference, [this](https://bitbucket.org/nge-aca/django-deckboom/src/30f49818047a1780cee1b4f9f78ba04afdc65022/deckboom/rpc.py?fileviewer=file-view-default#rpc.py-150) is what I _was_ doing. I've since redone it a bit.\n  CentOS 6.8, boto3-1.4.0\n\n```\nwith open('/path/to/file', 'rb') as f:\n    f.seek(3, os.SEEK_CUR)\n    s3.Bucket('bucket_name').upload_fileobj(f, 'key')\n\n```\n\nThis fails with \"**len**() should return >= 0\"\n\nWhy does the fileobj have to be set to the beginning of the file to upload? Perhaps I am doing this wrong but basically what I want to do is upload a chunk within a local file to a bucket. Can this not be done without an extra copy?\n I am confused, that PR is for s3transfer. What about boto3?\n\nI don't see anything in the commit log for a fix within boto3. Also, I pulled the latest, rebuilt my RPM, installed it, and I still have the issue.\n I feel dumb. It works. Thanks Kyle.\n\nThis is a major bug in the boto3 API. Do you know when the next scheduled release of boto3, s3transfer et al. is?\n  Currently all Cloudformation Stack objects require the name of a stack when making API calls. This prevents use of the Stack object in situations where one is dealing with deleted stacks (which can only be managed via stack ID). I propose changing the current Cloudformation APIs to use stack-IDs rather than stack names.\n\n(As an aside, is there any documentation that details how the JSON data describing the API works? It would help when trying to create patches). \n Well, in the past I have written a tool that attempts to delete retained resources (don't ask) from deleted stacks. I had to use the low-level API for that tool, as I needed to retrieve a list of all resources associated with a deleted stack, which only has a stack ID.\n\nI snippet of the easier workflow would be something like this:\n\n``` python\n# Assumming python 3\nimport boto3\ncloudformation = boto3.resource('cloudformation')\nStack = cloudformation.Stack\n\nstack_id = input('Stack ID?')\ndeleted_stack = Stack(id=stack_id)\nfor summary in deleted_stack.resource_summaries.all():\n    if summary.resource_type == 'AWS::EC2::Instance':\n        # Delete instance\n    ...\n```\n  ```\nec2 = boto3.resource('ec2')\ninstances = ec2.instances.all() \n\nfor instance in instances:\n    for volume in instance.volumes.all():\n         for snapshot in volume.snapshots.all():\n```\n\nThe fifth line is throwing the error \"botocore.exceptions.ClientError: an Error occurred (RequestLimitExceeded) when calling the DescribeSnapshots operation: Request limit exceeded.\"\n1. Does boto3 implement exponential backoff? Is boto3 configurable for number of retries?\n2. If not, what's proper way to handle this error? Is the exponential backoff the answer? Is there a sample on how to do it? I'm guessing its been done many times before so I rather not start from scratch.\n3. What's the suggested way to test for rate limit errors? Running the code in my account causes no problems since I only have a few instances/volumes/snapshots.   This error occurs when this code is run in another account (that I don't have access to) that has 1000s of instances, volumes, snapshots.\n4. Is there a more efficient way to write the above code? The script is iterating through all instances to find any volumes that hasn't had a snapshot in 24 hours.\n 1. Yes, boto3 implements exponential backoff.  This request should be retried as shown [here](https://github.com/boto/botocore/blob/develop/botocore/data/_retry.json#L114-L127).  In that file there's a `__defaults__` section, which shows we retry 5 times.  If you're seeing these errors it's because you're exceeding the 5 attempts we make.  You can also see more info by adding `boto3.set_stream_logger('')` at the top of your file.\n2. Should be handled, but we don't have a way to increase the number of attempts.  There is a feature request tracking this work.\n3.  Ideally boto3 should be handling this for you.  For some reason the level of throttling being applied is exceeding our default values.  Once we support configurable retries, you should be able to just increase the retry attempts and not have to worry about this.\n4.  I'd ask on the [EC2 forums](https://forums.aws.amazon.com/forum.jspa?forumID=30) just for sure, but for as I can tell the best you can do is: 1) describe_volumes paginated call to get all of your volumes 2) for each volume make a describe-snapshots call with a filter of `volume-id` and `start-time`.  So if N is your total volumes you'd have N + (N / 1000) as the number of API calls needed.  But again, I'd ask on the EC2 forums.\n Found the issue: https://github.com/boto/botocore/issues/882\n\nI believe we can move the discussion over to that issue.  Essentially what you'll need is the ability to increase the number of retries in the case where our default number of exponential backoff attempts is insufficient.\n One quick question, as the changes are done to botocore will the retry logic be present in boto 2.45?  [Instance.iam_instance_profile](https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Instance.iam_instance_profile) reports the profile ARN and ID, but not the name.\n\nThis is strange since you can create new instances and associate an IAM profile with them by name, and if you want to lookup an IAM profile directly you can actually _only_ [do it by name](https://boto3.readthedocs.io/en/latest/reference/services/iam.html#IAM.Role). (Related: #768)\n\nCan we have `Instance.iam_instance_profile` include the profile name in the set of attributes?\n Posted upstream here: https://forums.aws.amazon.com/thread.jspa?threadID=237207\n  I appears that you can only filter IAM roles by path prefix.\n\n``` python\niam = boto3.resource('iam')\niam.roles.filter(PathPrefix=...)\n```\n\nCan we add support for filtering by IAM role name or ID? Or is that an upstream limitation?\n Yes, I would rather instantiate it directly, as you suggested. However, #769 is precisely what keeps me from doing that! \ud83d\ude04\n\nTo elaborate on my use case: I am querying an existing instance for its IAM profile, and then using that information to create a new instance with the same IAM profile.\n\nI suppose I could use the IAM profile ARN, which is returned when you query the instance, and which you can use in `create_instances()`.\n As @kyleknap mentioned in #769 this is dependent on service support. Those filters are based on what the service provides us. Since you opened an issue with them, I'm closing out here.  This method receives a parameter with a list of Launch Configuration names to describe. Is there a way to use wildcards to search things like 'myproyect*' or something like that? So you could search for Launch Configurations and paginate.\n\nUpdate: I see that you could omit the LaunchConfigurationNames parameter to get all the Launch Configurations, to later on filter it manually. Probably that could be added to the Paginator documentation?\n I'll take a look at it. Thank you for the suggestion\n  **I need to create Elastic Beanstalk Environment from boto3.**\nFor which I guess the API sequence should be \n1. **_create_application()_** : from this API we get the Application Name\n2. _**create_environment(****kwargs)**_: Here i am passing below json as kwargs to api\n\n{\n    \"ApplicationName\": \"APP-NAME\", \n    \"EnvironmentName\": \"ABC-Nodejs\", \n    \"CNAMEPrefix\": \"ABC-Neptune\", \n    \"SolutionStackName\": \"64bit Amazon Linux 2016.03 v2.1.1 running Node.js\"\n}\nQuestions: \n1. How to mention that the Environment EC2 should be attached to which VPC and subnet\n2. In which Subnet its ELB should be created\n\nAny sample code will be helpful\nPlease Note: I have one public and one private subnet, we can control the creation of EC2 and ELB creation through subnet IDs\n  cc @kyleknap @jamesls\n  Is there a limiting factor with boto requests when running async requests in multiple threads?  We don't believe our issue is AWS rate limiting because we have not seen any AWS rate limiting/throttling messages in our logs.\n What do you mean by 'async' requests (or rather, what modules are you using to make the requests asynchronous)?\n Curtis pointed me to this request. By async requests, we simply mean we are making boto request calls in roughly thirty threads running in the same process. We see marked performance degradation in the time it takes boto to respond to each individual request as the number of threads running increases. \n I would add that we have ruled out CPU, Network, memory or any other system related cause. \n Some questions:\n- Do you know if the cause is specific to boto3? Does similar code using only the [requests](http://docs.python-requests.org/en/master/) module have the same problem?\n- Could other modules (logging, etc) be causing the problem?\n- Have you profiled the application to determine which specific calls are taking the longest?\n- Have you factored in the Global Interpreter Lock? Threads in python aren't (usually) truly concurrent.\n - The application does not make use of the requests module directly, but it could quite possible be the bottleneck. Is there a way to configure boto3 to log timings from the internal calls to requests?\n- We have not looked into the logging module because we really don't do that much, but perhaps with a combination of logging from different threads and GIL it could be impacting performance. We will try turning off logging.\n- We have profiled it to the level of a set of calls to retrieve information across regions. Some of these blocks take longer simply because they are making more calls to aws, but all see roughly the same level of degradation.\n- GIL does actually run I/O concurrently, but in thinking over your other suggestions it seems we are collecting our metrics around more than the I/O. We will go back and investigate some more.\n @aebie Using the built-in profile/cprofile modules should give you a function-level view of profiling data, which should be sufficient to at least track down where things are taking longest.\n Based on your responses it seems like you're running up against the actual useful number of threads. You'll need to play around with your thread count to find the ideal number. If you find any other issues feel free to reopen or open another issue.  I read up the document in amazon. they say it will overwrite the existing s3 event notifications. it is not what I want. I want to one more event notification to the set of existing notifications. I am able to do it from console but using put_bucket_notification_configuration() or put() methods don't get me what I want.\n\nWhat am I missing?\n By monitoring the AWS console request I found that amazon is using an API called PutAllBucketNotification to do this from console. I couldn't find any trace of documentation regarding this API.\n\nhttps://s3-console.console.aws.amazon.com/s3/cws/s3/PutAllBucketNotification\n  The current documentation for Cloudformation states that the following is the response syntax for the get_template function provided by the cloudformation service:\n\n``` python\n{\n    'TemplateBody': 'string'\n}\n```\n\nWhile the current API does include a 'TemplateBody' key, the value associated with that key isn't a string; rather, the value is a JSON object that represents the template.\n @kyleknap No, the python type is a dictionary, not a string.\n\nPerhaps the below code will demonstrate this more clearly:\n\n``` python\nimport boto3\nfrom pprint import pprint\n\ntry:\n    get_input = raw_input\nexcept:\n    get_input = input\n\nstack_name = get_input('Stack name?')\n\nclient = boto3.client('cloudformation', 'us-east-1')\ntemplate = client.get_template(StackName=stack_name)['TemplateBody']\n\nprint('Resource names:')\npprint([name for name in template['Resources'].keys()])\n```\n\nThe value in 'TemplateBody' key is not a string, but rather a python data structure representing the template.\n  I've noticed that the role does not come back when you call methods like `describe_task_definition` and `register_task_definition`.\n\nRight now you get an exception when you try to update a task with this property:\n\n``` sh\nTraceback (most recent call last):\n  File \"./scripts/deploy.py\", line 92, in <module>\n    deploy_code(config)\n  File \"./scripts/deploy.py\", line 70, in deploy_code\n    containerDefinitions=task_def['containerDefinitions'])\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 278, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 548, in _make_api_call\n    api_params, operation_model, context=request_context)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 601, in _convert_to_request_dict\n    api_params, operation_model)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/validate.py\", line 270, in serialize_to_request\n    raise ParamValidationError(report=report.generate_report())\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\nUnknown parameter in input: \"taskRoleArn\", must be one of: family, containerDefinitions, volumes\n```\n\nCan we add it in? \n\nHere are the valid parameters for reference: http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_TaskDefinition.html\n\nI see on the go sdk they had to add it also: https://github.com/aws/aws-sdk-go/issues/754\n Yeah that fixed it. Very odd I swear I JUST installed boto3 lol.\n\nAnyways thanks for the response!\n  It would be very very handy to be able to tell CodeDeploy to deploy a github short hash, or branch or tag name. Then I could say \"deploy master\" without having to look up the full sha each time I deploy.\n  The documentation on boto3 claims that delete_object will return:\n\n{\n    'DeleteMarker': True|False,\n    'VersionId': 'string',\n    'RequestCharged': 'requester'\n}\n\nI planned to use the DeleteMarker as a verification that the delete was executed.\n\nCurrently it returns:\n\n{'ResponseMetadata': {'HTTPHeaders': {'date': 'Tue, 09 Aug 2016 17:18:09 GMT',\n                                      'server': 'AmazonS3',\n                                      'x-amz-id-2': '****_/**_****_',\n                                      'x-amz-request-id': '**_***_'},\n                      'HTTPStatusCode': 204,\n                      'HostId': '**_***_/**_*******_',\n                      'RequestId': '**_*******'}}\n\nThis is after doing a successful delete on s3.\n It seems that the response is always the same, whenever the object exists or not in the S3 bucket.\nIs there any way to really differentiate a successful and unsuccessful delete request? \n Hey, I realize this is a very old and very dead ticket, but I'd like to raise this one again. I'm trying to delete objects and confirm deletion via the boto response, but the response does _not_ line up with the documentation at all.\r\n\r\nWhat I expected:\r\n```\r\n{\r\n    'DeleteMarker': True|False,\r\n    'VersionId': 'string',\r\n    'RequestCharged': 'requester'\r\n}\r\n```\r\n\r\nWhat I got:\r\n```\r\n{'ResponseMetadata': {'RetryAttempts': 0, 'HTTPHeaders': {'date': 'Fri, 10 Mar 2017 20:28:16 GMT', 'x-amz-id-2': '***,\r\n'server': 'AmazonS3',\r\n'x-amz-request-id': '***'},\r\n'HTTPStatusCode': 204, \r\n'HostId': '***',\r\n'RequestId': '***'}\r\n}\r\n``` +1 in the same situation. always get a 204 with same data  I just updated my boto3 and it installed a new s3transfer package (0.1.1). Problem is that now I get a load of DEBUG messages for every S3 download my app performs.\n\n```\nDEBUG:s3transfer.utils: Acquiring 0\nDEBUG:s3transfer.tasks: DownloadSubmissionTask({'transfer_future': <s3transfer.futures.TransferFuture object at 0x10ae6a350>}) about to wait for the following futures []\nDEBUG:s3transfer.tasks: DownloadSubmissionTask({'transfer_future': <s3transfer.futures.TransferFuture object at 0x10ae6a350>}) done waiting for dependent futures\nDEBUG:s3transfer.tasks: Executing task DownloadSubmissionTask({'transfer_future': <s3transfer.futures.TransferFuture object at 0x10ae6a350>}) with kwargs {'io_executor': <s3transfer.futures.BoundedExecutor object at 0x10ae34f90>, 'request_executor': <s3transfer.futures.BoundedExecutor object at 0x10ae34b90>, 'osutil': <s3transfer.utils.OSUtils object at 0x10ae34950>, 'client': <botocore.client.S3 object at 0x10ae343d0>, 'transfer_future': <s3transfer.futures.TransferFuture object at 0x10ae6a350>, 'config': <boto3.s3.transfer.TransferConfig object at 0x10ae34910>}\nDEBUG:s3transfer.futures: Submitting task GetObjectTask({'extra_args': {}, 'bucket': 'BUCKET', 'key': 'FILE'}) to executor <s3transfer.futures.BoundedExecutor object at 0x10ae34b90> for transfer request: 0.\nDEBUG:s3transfer.utils: Acquiring 0\nDEBUG:s3transfer.tasks: GetObjectTask({'extra_args': {}, 'bucket': 'BUCKET', 'key': 'FILE'}) about to wait for the following futures []\nDEBUG:s3transfer.tasks: GetObjectTask({'extra_args': {}, 'bucket': 'BUCKET', 'key': 'FILE'}) done waiting for dependent futures\nDEBUG:s3transfer.tasks: Executing task GetObjectTask({'extra_args': {}, 'bucket': 'BUCKET', 'key': 'FILE'}) with kwargs {'fileobj': <open file '/var/folders/kd/yx5n34z97kz10x25_5z9sq9m9qvmpm/T/tmpgrD02f.6A5DbD3C', mode 'wb' at 0x109865a50>, 'bucket': 'BUCKET', 'download_output_manager': <s3transfer.download.DownloadFilenameOutputManager object at 0x10ae90890>, 'extra_args': {}, 'callbacks': [], 'client': <botocore.client.S3 object at 0x10ae343d0>, 'key': 'FILE', 'io_chunksize': 262144, 'max_attempts': 5}\nDEBUG:s3transfer.futures: Submitting task JoinFuturesTask({}) to executor <s3transfer.futures.BoundedExecutor object at 0x10ae34b90> for transfer request: 0.\nDEBUG:s3transfer.utils: Acquiring 0\nDEBUG:s3transfer.tasks: JoinFuturesTask({}) about to wait for the following futures [<Future at 0x10aeb9390 state=running>]\nDEBUG:s3transfer.utils: Releasing acquire 0/None\nDEBUG:s3transfer.tasks: JoinFuturesTask({}) about to wait for <Future at 0x10aeb9390 state=running>\nDEBUG:s3transfer.futures: Submitting task IOWriteTask({'offset': 0}) to executor <s3transfer.futures.BoundedExecutor object at 0x10ae34f90> for transfer request: 0.\nDEBUG:s3transfer.utils: Acquiring 0\nDEBUG:s3transfer.tasks: IOWriteTask({'offset': 0}) about to wait for the following futures []\nDEBUG:s3transfer.tasks: IOWriteTask({'offset': 0}) done waiting for dependent futures\nDEBUG:s3transfer.tasks: Executing task IOWriteTask({'offset': 0}) with kwargs {'fileobj': <open file '/var/folders/kd/yx5n34z97kz10x25_5z9sq9m9qvmpm/T/tmpgrD02f.6A5DbD3C', mode 'wb' at 0x109865a50>, 'offset': 0}\nDEBUG:s3transfer.utils: Releasing acquire 0/None\nDEBUG:s3transfer.tasks: JoinFuturesTask({}) done waiting for dependent futures\nDEBUG:s3transfer.utils: Releasing acquire 0/None\nDEBUG:s3transfer.tasks: Executing task JoinFuturesTask({}) with kwargs {'futures_to_wait_on': [None]}\nDEBUG:s3transfer.futures: Submitting task IORenameFileTask({'final_filename': '/var/folders/kd/yx5n34z97kz10x25_5z9sq9m9qvmpm/T/tmpgrD02f'}) to executor <s3transfer.futures.BoundedExecutor object at 0x10ae34f90> for transfer request: 0.\nDEBUG:s3transfer.utils: Acquiring 0\nDEBUG:s3transfer.utils: Releasing acquire 0/None\nDEBUG:s3transfer.tasks: IORenameFileTask({'final_filename': '/var/folders/kd/yx5n34z97kz10x25_5z9sq9m9qvmpm/T/tmpgrD02f'}) about to wait for the following futures []\nDEBUG:s3transfer.tasks: IORenameFileTask({'final_filename': '/var/folders/kd/yx5n34z97kz10x25_5z9sq9m9qvmpm/T/tmpgrD02f'}) done waiting for dependent futures\nDEBUG:s3transfer.tasks: Executing task IORenameFileTask({'final_filename': '/var/folders/kd/yx5n34z97kz10x25_5z9sq9m9qvmpm/T/tmpgrD02f'}) with kwargs {'osutil': <s3transfer.utils.OSUtils object at 0x10ae34950>, 'final_filename': '/var/folders/kd/yx5n34z97kz10x25_5z9sq9m9qvmpm/T/tmpgrD02f', 'fileobj': <open file '/var/folders/kd/yx5n34z97kz10x25_5z9sq9m9qvmpm/T/tmpgrD02f.6A5DbD3C', mode 'wb' at 0x109865a50>}\nDEBUG:s3transfer.utils: Releasing acquire 0/None\n```\n I could exclude them, but I use a ton of boto3 calls and have never seen these kind of debug messages coming from any other portion of the library.\n I don't get any botocore debug messages\n i'm not explicitly calling any logging method on boto3. All I typically do is call `boto3.client(...)` for services.\n During app create:\n`logging.config.dictConfig(json.load(open('config/logging.json')))\n`\n\nwith logging.json:\n\n```\n{\n    \"version\": 1,\n    \"formatters\": {\n        \"simple\": {\n            \"format\": \"%(levelname)s:%(name)s: %(message)s\"\n        },\n        \"line\": {\n            \"format\": \"%(asctime)s - %(name)s - %(levelname)s - %(message)s\"\n        },\n        \"json\": {\n            \"format\": \"{\\\"loggerName\\\":\\\"%(name)s\\\", \\\"asciTime\\\":\\\"%(asctime)s\\\", \\\"pathName\\\":\\\"%(pathname)s\\\", \\\"logRecordCreationTime\\\":\\\"%(created)f\\\", \\\"functionName\\\":\\\"%(funcName)s\\\", \\\"levelNo\\\":\\\"%(levelno)s\\\", \\\"lineNo\\\":\\\"%(lineno)d\\\", \\\"time\\\":\\\"%(msecs)d\\\", \\\"levelName\\\":\\\"%(levelname)s\\\", \\\"message\\\":\\\"%(message)s\\\"}\"\n        }\n    },\n    \"handlers\": {\n        \"console\": {\n            \"class\": \"logging.StreamHandler\",\n            \"level\": \"DEBUG\",\n            \"formatter\": \"simple\",\n            \"stream\": \"ext://sys.stdout\"\n        },\n        \"syslog\": {\n            \"class\": \"logging.handlers.SysLogHandler\",\n            \"level\": \"INFO\",\n            \"formatter\": \"json\"\n        }\n    },\n    \"loggers\": {\n        \"standard\": {\n            \"level\": \"INFO\",\n            \"handlers\": [\n                \"syslog\"\n            ],\n            \"propagate\": 1\n        }\n    },\n    \"root\": {\n        \"level\": \"DEBUG\",\n        \"handlers\": [\n            \"console\"\n        ]\n    }\n}\n```\n  I'm using temporary IAM credentials below:\n\n``` python\nimport boto3\nsts = boto3.client('sts')\nsts.generate_presigned_url(ClientMethod='get_caller_identity',Params={})\n```\n\nAnd when I make the request, it responds:\n\n```\n<ErrorResponse xmlns=\"https://sts.amazonaws.com/doc/2011-06-15/\">\n  <Error>\n    <Type>Sender</Type>\n    <Code>SignatureDoesNotMatch</Code>\n    <Message>The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.\n\nThe Canonical String for this request should have been\n'GET\n/\nAction=GetCallerIdentity&amp;Version=2011-06-15&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=<REDACTED>%2Fus-east-1%2Fsts%2Faws4_request&amp;X-Amz-Date=20160806T155459Z&amp;X-Amz-Expires=100&amp;X-Amz-Security-Token=<REDACTED>&amp;X-Amz-SignedHeaders=host\nhost:sts.amazonaws.com\n\nhost\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'\n\nThe String-to-Sign should have been\n'AWS4-HMAC-SHA256\n20160806T155459Z\n20160806/us-east-1/sts/aws4_request\n5e532c23d9acaaf195fc5292ad8321f70ea77a2cc62e47cb0473c1cebdb54e2f'\n</Message>\n  </Error>\n  <RequestId>f1dfd149-5bee-11e6-90ab-4b1e521fd574</RequestId>\n</ErrorResponse>\n\n```\n\nNot sure if I'm doing something wrong, but given that the method takes no parameters, I'm not sure how much room for error there is.\n Oh, my understanding was that anything using the AWS signature scheme on a GET request was eligible for presigned URLs, because that's basically all an AWS request was behind the scenes. Is that wrong? \n\nBut looking more carefully, it appears that GetCallerIdentity expects to be called with POST, so perhaps that's what's wrong?\n\nAt the same time, the server's response suggests that it _is_ actually possible to call it properly (it's basically telling me what to do to appease it, right?), but that whatever boto3 is doing isn't quite right?\n Oh, perfect, thanks!\n  Hi,\n\nI'm currently looking at creating an Ansible module to manage Autoscaling Scheduled actions. However looking at the boto reference it seems like the functionality to create scheduled actions is lacking (providing only describe & delete). Is there a reason this hasn't been implemented? I would like to add it in and submit a PR but wanted to check there wasn't a reason why it wasn't there or isn't already in progress (I checked but didn't find anything). Let me know thoughts :)\n +1\n Hi Dan-Kitchen \n\nFeel free to use my scheduled actions module. It works but is not quite finished\n\nhttps://github.com/mmochan/ansible-aws-ec2-asg-scheduled-actions\n @mmochan \r\n\r\nHey. \r\n\r\nThanks for this.\r\n\r\nAre you planning on completing work on this and merging upstream to Ansible? Just dropping it in as is doesn't seem to work for me. Willing to put in the yards here but don't want to if you have a version further along or were planning to work on it shortly. @conatus \r\n\r\nHi Alex,\r\n\r\nSadly I've not had the time to progress this one, so if you have the time then yes please go ahead..\r\n  When trying to generate a presigned URL for a firehose `put_record` operation, the following exception is thrown:\n\n```\nTraceback (most recent call last):\n  File \"foo.py\", line 17, in <module>\n    'Data': b'FOOBARBAZQUX'\n  File \"[...]/boto3/venv/lib/python3.4/site-packages/botocore/signers.py\", line 517, in generate_presigned_url\n    operation_name=operation_name)\n  File \"[...]/boto3/venv/lib/python3.4/site-packages/botocore/signers.py\", line 253, in generate_presigned_url\n    'presign-url', expires_in)\n  File \"[...]/boto3/venv/lib/python3.4/site-packages/botocore/signers.py\", line 147, in sign\n    auth.add_auth(request)\n  File \"[...]/boto3/venv/lib/python3.4/site-packages/botocore/auth.py\", line 319, in add_auth\n    self._modify_request_before_signing(request)\n  File \"[...]/boto3/venv/lib/python3.4/site-packages/botocore/auth.py\", line 459, in _modify_request_before_signing\n    query_dict.update(request.data)\nTypeError: cannot convert dictionary update sequence element #0 to a sequence\n```\n\nThe following code demonstrates the issue:\n\n```\nimport boto3\n\nkinesis = boto3.client(\n    'firehose',\n    region_name='us-east-1',\n    aws_access_key_id ='KEY',\n    aws_secret_access_key='SECRET'\n)\n\nkinesis.generate_presigned_url(\n    'put_record',\n    Params={\n        'DeliveryStreamName':'STREAM',\n        'Record': {\n            'Data': b'FOOBARBAZQUX'\n        }\n    }\n)\n```\n\nIt appears as if the request body is being converted to a bytestring via `serialize_to_request` (https://github.com/boto/botocore/blob/develop/botocore/serialize.py#L307). However, when the presigning happens later, the request body is assumed to be a dictionary  `request_signer.generate_presigned_url` (https://github.com/boto/botocore/blob/develop/botocore/auth.py#L459)\n @kyleknap I sort of suspected that might be the case. I fiddled with some internals to try to work around this issue, and the presigned url I got back didn't work.\n\nWould this be a documentation issue then? (http://boto3.readthedocs.io/en/latest/reference/services/kinesis.html#Kinesis.Client.generate_presigned_url)\n Don't have that handy here, will need to get back to you.\n **Found a similiar issue with s3v4-query signer:**\n\nThe issue could be reproduced with the following script:\n\n```\nimport os\nimport logging\n\nfrom boto3.session import Session\nimport botocore.client\n\n\nif __name__ == '__main__':\n    logging.getLogger('boto3').setLevel(logging.NOTSET)\n    boto3.set_stream_logger(name='botocore')\n\n    signature_version = os.environ.get(\"BOTO_SIGNATURE_VERSION\", \"s3-query\")\n    s = Session(\n        aws_access_key_id=\"user\",\n        aws_secret_access_key=\"password\",\n    )\n    config = botocore.client.Config(signature_version=signature_version,\n                                    region_name=\"us-east-1\")\n    s3 = s.resource(\"s3\", endpoint_url=\"http://s3.amazonaws.com\", config=config)\n    delete_params = {\n        \"Objects\": [\n                {\n                    'Key': \"key\"\n                }\n        ],\n        \"Quiet\": True\n    }\n    url = s3.meta.client.generate_presigned_url(\n        ClientMethod=\"delete_objects\",\n        Params={'Bucket': \"bucket\",\n                'Delete': delete_params}\n    )\n\n\n    print url\n```\n\nWith no environment variable set, it could generate the right output:\n\n```\nhttp://s3.amazonaws.com/bucket?delete&AWSAccessKeyId=user&Expires=1472732994&Signature=lG9sIEj%2FLVwZ1qJcpMFjARt%2FVEw%3D\n```\n\nwhen `BOTO_SIGNATURE_VERSION` is set to `s3v4`/`s3v4-query`, calling generate_presigned_url will cause the following error:\n\n```\nTraceback (most recent call last):\n  File \"test_boto3_presigned.py\", line 33, in <module>\n    'Delete': delete_params}\n  File \"/Users/richardding/Workspace/tmp/venv/lib/python2.7/site-packages/botocore/signers.py\", line 517, in generate_presigned_url\n    operation_name=operation_name)\n  File \"/Users/richardding/Workspace/tmp/venv/lib/python2.7/site-packages/botocore/signers.py\", line 253, in generate_presigned_url\n    'presign-url', expires_in)\n  File \"/Users/richardding/Workspace/tmp/venv/lib/python2.7/site-packages/botocore/signers.py\", line 147, in sign\n    auth.add_auth(request)\n  File \"/Users/richardding/Workspace/tmp/venv/lib/python2.7/site-packages/botocore/auth.py\", line 319, in add_auth\n    self._modify_request_before_signing(request)\n  File \"/Users/richardding/Workspace/tmp/venv/lib/python2.7/site-packages/botocore/auth.py\", line 459, in _modify_request_before_signing\n    query_dict.update(request.data)\nValueError: dictionary update sequence element #0 has length 1; 2 is required\n```\n\nEnvironment Information:\n\n```\nboto3 version: 1.4.0\npython version: Python 2.7.10\nvirtualenv version: 15.0.3\n```\n  The the cloudformations hasMany collection includes Stacks.\nThis is populated by the describe stacks call, but unlike other\nresources of this type (i.e. ec2 instances) it does not populate the individual\nstack resources with the results of this call.\nThe missing path attribute has been added to fix this.\n am I likely to get a response to this pull request?\n :shipit:\n  :shipit:\n  :shipit:\n  Implements https://github.com/boto/boto3/issues/704\nExposes Session.available_profiles from botocore to session in boto3\nalso my linter wanted to cleanup the test_session.py file in addition to adding my test there.\n :shipit:\n Done\n Ping?\n Merged, thanks for the pull request.\n  :shipit:\n  :shipit:\n  I know this has been merged, but I would prefer to add this to our sphinx documentation.  I think this is something users should be able to view from readthedocs.\n    I tried to execute the following code behind corporate firewall it didnt work\n\n```\nimport boto3\n\nendpoint = 'arn:aws:sns:us-north-2:10970:data'\nclient = boto3.setup_default_session(region_name='us-north-2', aws_access_key_id=ACCESS_KEY, aws_secret_access_key=SECRET_KEY)\nsns = boto3.resource('sns')\n\nclient = boto3.client('sns', aws_access_key_id=ACCESS_KEY, aws_secret_access_key=SECRET_KEY, is_secure=False)\nplatform_endpoint = sns.PlatformEndpoint(endpoint)\n\nplatform_endpoint.publish(Message='hi') \n```\n\nhow do I disable SSL check \n  We are running continuous integration builds from develop branch against testpypi and master branch against pypi. \n\nThe latest version on pypi is 1.3.1\nThe latest version on testpypi is 1.2.2\n\nPlease publish 1.3.1 to testpypi \n @JordonPhillips thanks for your answer. Actually we've changed our build to install external dependencies like boto3 from pypi. So there is no need to publish it to testpypi. \n  I'm writing a lambda handler that takes event notifications from a remote S3 bucket and copies a newly uploaded object into \"local\" bucket.\n\nHere is the important code:\n\n```\n    bucket = event['Records'][0]['s3']['bucket']['name']\n    key = event['Records'][0]['s3']['object']['key']\n\n    try:\n        s3.Object(bucket + '-clone', key).copy_from(CopySource=bucket + '/' + key)\n```\n\nWhen I upload a file to execute the code I get the following error in Cloudwatch:\n\n```\nAn error occurred (AccessDenied) when calling the CopyObject operation: \nAccess Denied: ClientError Traceback (most recent call last): \nFile \"/var/task/lambda_function.py\", line 15, in lambda_handler raise e ClientError: \nAn error occurred (AccessDenied) when calling the CopyObject operation: Access Denied\n```\n\nIt seems that a space gets translated to a + somewhere along the way. I added the following\n`key = key.replace(\"+\", \" \")` to my code, and now it copies properly without error.\n Closing due to inactivity.\n I am also having the same problem.  A key with a space in it fails to get retrieved. \r\n\r\nfor record in event['Records']:\r\n   bucket = record['s3']['bucket']['name']\r\n   key = record['s3']['object']['key']\r\n   file_name_pattern = re.match( r'(.*?([^/]+)/?)$', key)\r\n   file_name = file_name_pattern.group(2)\r\n   download_path = '/tmp/{}{}'.format(uuid.uuid4(), file_name)\r\n   s3_client.download_file(bucket, key, download_path)  \r\n    \r\nMy work around is to set key like\r\nkey = urllib.unquote_plus(event['Records'][0]['s3']['object']['key'].encode(\"utf8\"))\r\n   \r\nI added the stream loggger and here is my output\r\n\r\n2016-12-21 17:48:48,423 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTPS connection (1): my-photos.s3.amazonaws.com\r\n[INFO]\t2016-12-21T17:48:48.423Z\tb97124d2-c7a5-11e6-b626-712e694e52b4\tStarting new HTTPS connection (1): my-photos.s3.amazonaws.com\r\n2016-12-21 17:48:48,630 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"HEAD /9d781651-f5b9-445c-b238-721e0e581297Hannah%2BTrot.JPG HTTP/1.1\" 404 0\r\n[DEBUG]\t2016-12-21T17:48:48.630Z\tb97124d2-c7a5-11e6-b626-712e694e52b4\t\"HEAD /9d781651-f5b9-445c-b238-721e0e581297Hannah%2BTrot.JPG HTTP/1.1\" 404 0\r\n2016-12-21 17:48:48,630 botocore.parsers [DEBUG] Response headers: {'x-amz-id-2': 'rp4ws0BtuN07AbdxRcN4JOM3BNg/kHFOixWhgPQL0PmUnNN7em3AP1I2n+PUHvl9j3ncpEeyPg4=', 'server': 'AmazonS3', 'transfer-encoding': 'chunked', 'x-amz-request-id': '24BB44067C63C2EE', 'date': 'Wed, 21 Dec 2016 17:48:47 GMT', 'content-type': 'application/xml'}\r\n[DEBUG]\t2016-12-21T17:48:48.630Z\tb97124d2-c7a5-11e6-b626-712e694e52b4\tResponse headers: {'x-amz-id-2': 'rp4ws0BtuN07AbdxRcN4JOM3BNg/kHFOixWhgPQL0PmUnNN7em3AP1I2n+PUHvl9j3ncpEeyPg4=', 'server': 'AmazonS3', 'transfer-encoding': 'chunked', 'x-amz-request-id': '24BB44067C63C2EE', 'date': 'Wed, 21 Dec 2016 17:48:47 GMT', 'content-type': 'application/xml'}\r\n[DEBUG]\t2016-12-21T17:48:48.630Z\tb97124d2-c7a5-11e6-b626-712e694e52b4\tResponse body:\r\n\r\n[DEBUG]\t2016-12-21T17:48:48.631Z\tb97124d2-c7a5-11e6-b626-712e694e52b4\tEvent needs-retry.s3.HeadObject: calling handler <botocore.retryhandler.RetryHandler object at 0x7f09428fa690>\r\n[DEBUG]\t2016-12-21T17:48:48.631Z\tb97124d2-c7a5-11e6-b626-712e694e52b4\tNo retry needed.\r\n[DEBUG]\t2016-12-21T17:48:48.631Z\tb97124d2-c7a5-11e6-b626-712e694e52b4\tEvent needs-retry.s3.HeadObject: calling handler <bound method S3RegionRedirector.redirect_from_error of <botocore.utils.S3RegionRedirector object at 0x7f09426b4ad0>>\r\n2016-12-21 17:48:48,630 botocore.parsers [DEBUG] Response body:\r\n\r\n2016-12-21 17:48:48,631 botocore.hooks [DEBUG] Event needs-retry.s3.HeadObject: calling handler <botocore.retryhandler.RetryHandler object at 0x7f09428fa690>\r\n2016-12-21 17:48:48,631 botocore.retryhandler [DEBUG] No retry needed.\r\n2016-12-21 17:48:48,631 botocore.hooks [DEBUG] Event needs-retry.s3.HeadObject: calling handler <bound method S3RegionRedirector.redirect_from_error of <botocore.utils.S3RegionRedirector object at 0x7f09426b4ad0>>\r\nAn error occurred (404) when calling the HeadObject operation: Not Found: ClientError\r\nTraceback (most recent call last):\r\nFile \"/var/task/createThumbnail.py\", line 47, in handler\r\ns3_client.download_file(bucket, key, download_path)\r\nFile \"/var/runtime/boto3/s3/inject.py\", line 125, in download_file\r\nextra_args=ExtraArgs, callback=Callback)\r\nFile \"/var/runtime/boto3/s3/transfer.py\", line 269, in download_file\r\nfuture.result()\r\nFile \"/var/runtime/s3transfer/futures.py\", line 71, in result\r\nreturn self._coordinator.result()\r\nFile \"/var/runtime/s3transfer/futures.py\", line 231, in result\r\nraise self._exception\r\nClientError: An error occurred (404) when calling the HeadObject operation: Not Found\r\n\r\nEND RequestId: b97124d2-c7a5-11e6-b626-712e694e52b4\r\n\r\n  Behind some corporate firewalls it is not possible to use the git protocol to clone git repositories. So https has been added as alternative protocol to clone git repositories.\n I could install from pip, but I wanted to install it the way as described in https://github.com/boto/boto3 under the \"Getting Started\" section. There, the command \n\n> pip install -r requirements.txt\n\nfailed, because our corporate firewall blocked git://github.com/boto/botocore.git@develop#egg=botocore. That was the reason why I created the PR.\n  :shipit:  Seems reasonable to me.\n\nIt might be worth investigating in the future if raising the IO chunk to something >64KB but less than 1MB could still provide a reasonable balance of callback granularity and suitable for a majority of cases.\n  Change seems pretty straightforward, looks good to me.  Don't have anything to add beyond @kyleknap's comments.\n\nRegarding (1) from above, @kyleknap, what's the advantage of raising an error if the file is not readable vs. propagating the `IOError: File not open for reading`?  Seems valuable to just let the std IOError type propagate back to the user right?\n  The docstring of 'between' function in 'boto3/dynamodb/conditions.py' at line 118 is misleading.\nThe description of 'low_value' and 'high_value' parameters are incorrect according to AWS docs: http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Condition.html\n\"BETWEEN : Greater than or **equal** to the first value, and less than or **equal** to the second value.\"\n  Currently setting up a new user permission works:\n`ec2.modify_snapshot_attribute(SnapshotId = 'snap-xxxx',Attribute='createVolumePermission',OperationType='add', UserIds=['yyyy')]`\n\nbut the remove method doesn't:\n\n`ec2.modify_snapshot_attribute(SnapshotId = 'snap-xxxx',Attribute='createVolumePermission',OperationType='remove', UserIds=['yyyy')]`\n\nAfter running this command the permission stays for userId = yyy\n  Hi everyone,\nIt is nice to see this SDK for Python, but I have a problem for two days.\n\nMy goal is to access to my S3 on AWS Lambda.\nFirst I open a role with S3 getObject policy and open the Lambda function with this role. And my code is just a simple test like that:\n\n```\nimport boto3\n\ndef worker_handler(event, context):\n    # TODO implement\n    s3 = boto3.resource('s3')\n    for bucket in s3.buckets.all():\n        print(bucket.name)\n```\n\nThe result I get is always timeout:\n\n```\n\"errorMessage\": \"2016-07-19T20:43:41.636Z 6b2b5e16-4df1-11e6-9253-f7c8fed8b832 Task timed out after 10.00 seconds\"\n```\n\nI can run the same code on my own machine with AWS CLI and got the following correct result:\n\n```\nelasticbeanstalk-us-west-2-045059219738\ns3-bucket-with-key\ns3-bucket-with-script\ntest-s3-bucket-chienyu\n```\n\nIs there any other setting I need to do on Lambda?\nThanks for any help in advanced!\n I think the problem here is because I didn't select `No VPC`.\nOnce I selected `No VPC` and it can work normally.\nBut I am still confused about why we don't need VPC in Lambda. \n  I was using the boto3.client('s3').list_objects_v2() method to list all the objects in the bucket. The \"FetchOwner\" parameter is set to \"True\" (boolean true) in the call. The response still does not contain the Owner's info. Further investigation shows that the BOTO3 API sends the \"fetch-owner\" request parameter value set to \"True\" instead of \"true\", and hence no Owner information is returned. Please see the code and debug log below:\n\n```\ndef list_objects_v2():\n    response = client.list_objects_v2(\n        Bucket='vivbucket',\n        MaxKeys=1,\n        FetchOwner=True\n    )\n    print response\n```\n\n**Debug Log:**\n_Request_-\n_DEBUG:botocore.endpoint:Sending http request: <PreparedRequest [GET]>\nINFO:botocore.vendored.requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): vivbucket.s3.amazonaws.com\nDEBUG:botocore.vendored.requests.packages.urllib3.connectionpool:\"GET /?list-type=2&max-keys=1&**fetch-owner=True** HTTP/1.1\" 200 None_\n\n_Response-\n_DEBUG:botocore.parsers:Response body:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\"><Name>vivbucket</Name><Prefix></Prefix><NextContinuationToken>1+2zjQQyp/0QW/xa0dxN7qqrSwt268AWyYfxzdgsqD/8=</NextContinuationToken><KeyCount>1</KeyCount><MaxKeys>1</MaxKeys><IsTruncated>true</IsTruncated><Contents><Key>abcdef/1</Key><LastModified>2016-07-11T19:06:34.000Z</LastModified><ETag>&quot;c81e728d9d4c2f636f067f89cc14862c&quot;</ETag><Size>1</Size><StorageClass>STANDARD</StorageClass></Contents></ListBucketResult>_\n @JordonPhillips  This might interest you.\n Thanks Jordon :)\n  My code:\n\n```\nimport boto3\nsqs = boto3.resource('sis')\n\n```\n\nI'm using the latest botocore version (1.4.37)\n\nI suspect this might be related to a new feature in ECS (IAM roles for tasks): https://aws.amazon.com/about-aws/whats-new/2016/07/amazon-ec2-container-service-now-supports-iam-roles-for-tasks/\n\nStacktrace:\n\n```\nTraceback (most recent call last):\n  File \"./worker.py\", line 32, in <module>\n    sqs = boto3.resource('sis')\n  File \"/usr/local/lib/python3.5/site-packages/boto3/__init__.py\", line 87, in resource\n    return _get_default_session().resource(*args, **kwargs)\n  File \"/usr/local/lib/python3.5/site-packages/boto3/session.py\", line 371, in resource\n    aws_session_token=aws_session_token, config=config)\n  File \"/usr/local/lib/python3.5/site-packages/boto3/session.py\", line 250, in client\n    aws_session_token=aws_session_token, config=config)\n  File \"/usr/local/lib/python3.5/site-packages/botocore/session.py\", line 809, in create_client\n    credentials = self.get_credentials()\n  File \"/usr/local/lib/python3.5/site-packages/botocore/session.py\", line 443, in get_credentials\n    'credential_provider').load_credentials()\n  File \"/usr/local/lib/python3.5/site-packages/botocore/credentials.py\", line 1072, in load_credentials\n    creds = provider.load()\n  File \"/usr/local/lib/python3.5/site-packages/botocore/credentials.py\", line 952, in load\n    return self._retrieve_or_fail(self._environ[self.ENV_VAR])\n  File \"/usr/local/lib/python3.5/site-packages/botocore/credentials.py\", line 956, in _retrieve_or_fail\n    creds = fetcher()\n  File \"/usr/local/lib/python3.5/site-packages/botocore/credentials.py\", line 969, in fetch_creds\n    response = self._fetcher.retrieve_uri(relative_uri)\n  File \"/usr/local/lib/python3.5/site-packages/botocore/utils.py\", line 967, in retrieve_uri\n    return self._get_response(full_url, headers, self.TIMEOUT_SECONDS)\n  File \"/usr/local/lib/python3.5/site-packages/botocore/utils.py\", line 985, in _get_response\n    return json.loads(response.content)\n  File \"/usr/local/lib/python3.5/json/__init__.py\", line 312, in loads\n    s.__class__.__name__))\nTypeError: the JSON object must be str, not 'bytes'\n\n```\n I was able to workaround the problem by modifying line 958 in /usr/local/lib/python3.5/site-packages/botocore/utils.py\nfrom:\n\n`return json.loads(response.content)`\nto:\n`return json.loads(response.content.decode(\"utf-8\"))`\n\nor \n\n`return json.loads(response.text)`\n\nCreated a pull request:\nhttps://github.com/boto/botocore/pull/980\n Sorry for the confusion, in my original code it was sqs \n\nThank you!\n Fixed via https://github.com/boto/botocore/pull/982\n  This is relatively rare (so hard to replicate), but when calling `wait_until_running()` on a new instance, sometimes `boto3` raises a `ResponseParserError`. I'm assuming this is a bug and not a feature? Full traceback below (`create_ec2_instance` is our function):\n\n```\nin create_ec2_instance\n    instance.wait_until_running()\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/factory.py\", line 348, in do_waiter\n    waiter(self, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/action.py\", line 201, in __call__\n    response = waiter.wait(**params)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/waiter.py\", line 53, in wait\n    Waiter.wait(self, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/waiter.py\", line 289, in wait\n    response = self._operation_method(**kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/waiter.py\", line 84, in __call__\n    return self._client_method(**kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 228, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 481, in _make_api_call\n    operation_model, request_dict)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/endpoint.py\", line 117, in make_request\n    return self._send_request(request_dict, operation_model)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/endpoint.py\", line 144, in _send_request\n    request, operation_model, attempts)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/endpoint.py\", line 203, in _get_response\n    parser.parse(response_dict, operation_model.output_shape)),\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/parsers.py\", line 206, in parse\n    parsed = self._do_error_parse(response, shape)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/parsers.py\", line 466, in _do_error_parse\n    original = super(EC2QueryParser, self)._do_error_parse(response, shape)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/parsers.py\", line 403, in _do_error_parse\n    root = self._parse_xml_string_to_dom(xml_contents)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/parsers.py\", line 355, in _parse_xml_string_to_dom\n    \"invalid XML received:\\n%s\" % (e, xml_string))\nResponseParserError: Unable to parse response (no element found: line 1, column 0), invalid XML received:\n```\n This is indeed the end of the traceback. I cannot replicate this (not easily, anyway) so I can't be sure, but it really looks like the response body was empty. \n  TLDR: When downloading a file on Amazon EC2 instance using boto3 from S3, download_file function blocks endlessly when disk space is exhausted. The only way to interrupt is to externally kill / interrupt the process.\n\nI've been able to reliably reproduce the issue using the following steps:\n1. Vanilla Amazon AMI (ami-6869aa05) on m4.xlarge. Virtualenv with boto3 1.3.1, botocore 1.4.37, futures 3.0.5, etc.\n2. 1GiB object in S3.\n3. Fill root volume to within 15MiB of 100% with dd: 'dd if=/dev/zero of=filler.txt bs=1M count=...'\n4. In Python, call download_file to save S3 object to root volume.\n5. Following IO Queue shutdown log message, all parts exit, but python process never terminates.\n\nI used pudb to trace what was happening and it appeared that the process was failing to exit following the call to _process_future_results in S3/transfer.py.\n\nAttached is the complete source code, package versions, and console debug output from the code run to reproduce this issue.\n\n[TerminalSavedOuput-20160718.txt](https://github.com/boto/boto3/files/369484/TerminalSavedOuput-20160718.txt)\n seeing something similar on 1.4.4\r\n\r\n\r\n`site-packages/boto3-1.4.4-py2.7.egg/boto3/s3/transfer.py\", line 299, in download_file\r\n    future.result()\r\n  File \"build/bdist.linux-x86_64/egg/s3transfer/futures.py\", line 73, in result\r\n  File \"build/bdist.linux-x86_64/egg/s3transfer/futures.py\", line 233, in result\r\nIOError: [Errno 28] No space left on device\r\n`  Passing a DateTime as the `ValidFrom` or `ValidUntil` argument to ec2 client `request_spot_instances()` works fine. However, passing a similar DateTime object to `request_spot_fleet()` results in an invalid parameter value from EC2: `botocore.exceptions.ClientError: An error occurred (InvalidSpotFleetRequestConfig) when calling the RequestSpotFleet operation: Parameter: SpotFleetRequestConfig.ValidFrom is invalid.`\n\nThe problem appears to be that `request_spot_fleet()` sends the parameter as a string in `YYYY-MM-DDTHH:MM:SS.xxxxxxZ` format (debug-level logging on a call to `request_spot_fleet()` where ValidFrom and ValidUntil are DateTimes shows the request as including `u'SpotFleetRequestConfig.ValidFrom': '2016-07-29T19:32:29.648833Z', u'SpotFleetRequestConfig.ValidUntil': '2016-07-29T19:32:30.648833Z'`).\n\nIf I change the call to have arguments of `ValidFrom=valid_from.strftime('%Y-%m-%dT%H:%M:%SZ'), ValidUntil=valid_to.strftime('%Y-%m-%dT%H:%M:%SZ')` it then works correctly.\n\nI don't know if this is an issue with boto3 or on the AWS side, but it appears that there needs to be some additional manipulation of the timestamp string sent to AWS.\n @kyleknap Sure...\n\nproof of concept code (note this is running in us-west-2):\n\n``` python\n#!/usr/bin/env python\n\nimport boto3\nfrom botocore.exceptions import ClientError\nfrom pprint import pformat\nfrom datetime import datetime, timedelta\nfrom tzlocal import get_localzone\nfrom pytz import utc\nimport uuid\n\ntarget_capacity = 4\nrole = 'arn:aws:iam::860309399526:role/spotfleet'\ni_type = 'm3.medium'\naz = 'us-west-2b'\nbid_price = 0.0173\n\nconn = boto3.client('ec2')\n\nnow_utc = datetime.now(get_localzone()).astimezone(utc)\nvalid_from = now_utc + timedelta(days=14)\nvalid_to = valid_from + timedelta(seconds=1)\n\n# kwargs\nargs = {\n    'SpotFleetRequestConfig': {\n        'SpotPrice': '%s' % bid_price,\n        'ClientToken': str(uuid.uuid4()),\n        'TargetCapacity': target_capacity,\n        'ValidFrom': valid_from,\n        'ValidUntil': valid_to,\n        'TerminateInstancesWithExpiration': True,\n        'ExcessCapacityTerminationPolicy': 'default',\n        'AllocationStrategy': 'lowestPrice',\n        'IamFleetRole': role,\n        'LaunchSpecifications': [\n            {\n                'ImageId': 'ami-d2c924b2',  # Centos 7 HVM, us-west-2\n                'InstanceType': i_type,\n                'Placement': {\n                    'AvailabilityZone': az\n                }\n            }\n        ]\n    }\n}\n\n\nprint(\"#### RequestSpotFleet with DateTime\\n\")\ntry:\n    print(\"Calling request_spot_fleet() with kwargs: %s\" % pformat(args))\n    res = conn.request_spot_fleet(**args)\n    print('Result: %s', pformat(res))\nexcept ClientError as ex:\n    print(ex)\n\n\nprint(\"\\n### RequestSpotFleet with strftime\\n\")\nargs['SpotFleetRequestConfig']['ValidFrom'] = args[\n    'SpotFleetRequestConfig']['ValidFrom'].strftime('%Y-%m-%dT%H:%M:%SZ')\nargs['SpotFleetRequestConfig']['ValidUntil'] = args[\n    'SpotFleetRequestConfig']['ValidUntil'].strftime('%Y-%m-%dT%H:%M:%SZ')\n\ntry:\n    print(\"Calling request_spot_fleet() with kwargs: %s\" % pformat(args))\n    res = conn.request_spot_fleet(**args)\n    print('Result: %s' % pformat(res))\nexcept ClientError as ex:\n    print(ex)\n```\n\nOutput:\n\n```\n$ python ~/tmp/spot_test.py \n#### RequestSpotFleet with DateTime\n\nCalling request_spot_fleet() with kwargs: {'SpotFleetRequestConfig': {'AllocationStrategy': 'lowestPrice',\n                            'ClientToken': '164d3980-3953-4af5-82a2-feab6455e506',\n                            'ExcessCapacityTerminationPolicy': 'default',\n                            'IamFleetRole': 'arn:aws:iam::860309399526:role/spotfleet',\n                            'LaunchSpecifications': [{'ImageId': 'ami-d2c924b2',\n                                                      'InstanceType': 'm3.medium',\n                                                      'Placement': {'AvailabilityZone': 'us-west-2b'}}],\n                            'SpotPrice': '0.0173',\n                            'TargetCapacity': 4,\n                            'TerminateInstancesWithExpiration': True,\n                            'ValidFrom': datetime.datetime(2016, 7, 30, 1, 48, 16, 484001, tzinfo=<UTC>),\n                            'ValidUntil': datetime.datetime(2016, 7, 30, 1, 48, 17, 484001, tzinfo=<UTC>)}}\nAn error occurred (InvalidSpotFleetRequestConfig) when calling the RequestSpotFleet operation: Parameter: SpotFleetRequestConfig.ValidFrom is invalid.\n\n### RequestSpotFleet with strftime\n\nCalling request_spot_fleet() with kwargs: {'SpotFleetRequestConfig': {'AllocationStrategy': 'lowestPrice',\n                            'ClientToken': '164d3980-3953-4af5-82a2-feab6455e506',\n                            'ExcessCapacityTerminationPolicy': 'default',\n                            'IamFleetRole': 'arn:aws:iam::860309399526:role/spotfleet',\n                            'LaunchSpecifications': [{'ImageId': 'ami-d2c924b2',\n                                                      'InstanceType': 'm3.medium',\n                                                      'Placement': {'AvailabilityZone': 'us-west-2b'}}],\n                            'SpotPrice': '0.0173',\n                            'TargetCapacity': 4,\n                            'TerminateInstancesWithExpiration': True,\n                            'ValidFrom': '2016-07-30T01:48:16Z',\n                            'ValidUntil': '2016-07-30T01:48:17Z'}}\nResult: {'ResponseMetadata': {'HTTPHeaders': {'content-type': 'text/xml;charset=UTF-8',\n                                      'date': 'Sat, 16 Jul 2016 01:48:16 GMT',\n                                      'server': 'AmazonEC2',\n                                      'transfer-encoding': 'chunked',\n                                      'vary': 'Accept-Encoding'},\n                      'HTTPStatusCode': 200,\n                      'RequestId': 'a4845e0a-7ff9-4443-994e-70b392d7071f'},\n u'SpotFleetRequestId': 'sfr-3fe219cd-ddab-4202-883d-3e0441f2e738'}\n```\n Ran into the same issue.  you need to strip off the microseconds from your valid_until time.\n\n```\nnow_utc = datetime.datetime.utcnow()\nnow_utc = now_utc.replace(microsecond=0)\nvalid_until = now_utc + datetime.timedelta(hours=1)\n```\n It looks like @patrickpierson may have solved the issue. If you still need help I would recommend making use of our [community resources](https://github.com/boto/boto3#getting-help) for help with api usage.  Hi, \n\nECS has just implemented support for [IAM roles for tasks](http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html), almost every [SDK supports it](http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html#task-iam-roles-minimum-sdk). Is it in your roadmap ? \n\nThanks.\n Yeah, it works as expected, I'd suggest updating documentation http://boto3.readthedocs.io/en/latest/reference/services/ecs.html#ECS.Client.register_task_definition\n\nThanks. \n I'm not finding this working. I have a proper ECS task role setup, but my containers do not run properly unless I set AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables.\n Make sure you're using the latest version of botocore.  If you're still having issues, could you open a new issue and provide a debug log?\n Yes, I just saw I was one version behind. It worked once I updated.\n\nThanks!\n  Currently the boto3 documentation fails to mention the config attribute of waiter objects. This is frustrating for newcomers, as the only way to customize the retry count and delay time for waiters is through these configuration objects. \n What is the way to deal with timeouts? I have a script in boto3 that creates a snapshot, waits for it to complete and then deletes the volume. It just timed out with a 15GB drive. Now I have to manually delete the volume and other cleanup. Surely there is a better way. Is this config documented somewhere? I'm having issues with this also, I'm trying to extend delays/maxAttempts when making modifications to an RDS instance and experiencing timeouts, would be great if changes to config were exposed/documented.  Hi,\nIn the waiters list, I don't see a waiter for internet_gateway.\nThere are there for customer gateway and nat gateway.\nEC2.Waiter.CustomerGatewayAvailable & EC2.Waiter.NatGatewayAvailable.\n  Hi, \n\nThe [documentation for Firehose](http://boto3.readthedocs.io/en/latest/reference/services/firehose.html#Firehose.Client.put_record) states:\n\n```\nIf the PutRecord operation throws a ServiceUnavailableException , back off and retry. If the exception persists, it is possible that the throughput limits have been exceeded for the delivery stream.\n```\n\nNeither `boto3` nor `botocore` seem to actually have a `ServiceUnavailableException` to catch though! The `PutRecords` call can return an error code `ServiceUnavailable`, but since `PutRecords` can't return error codes I am at a loss as to how I can deal with exceeded throughput limits.\n\nCan anyone help?\n\nCheers,\nCraig\n In that case I don't have to actually do anything, boto3 already handles the exponential back off for me. Great!\n\nThanks @kyleknap \n  When uploading to S3 using a standard HTTP proxy, tshark shows me something similar to: \n\n<source> -> <proxy> HTTP 638 PUT http://s3-eu-west-xxxxxx.jpg HTTP/1.1 \n<proxy> -> <source> HTTP 115 HTTP/1.1 100 Continue \n<proxy> -> <source> HTTP 600 HTTP/1.1 200 OK\n\nAnd all works fine\n\nWhen I do the same thing via an http proxy using NTLMS proxy, I get: \n\n<source> -> <proxy>  HTTP 727 PUT http://s3-eu-west-xxxxxx.jpg HTTP/1.1 , NTLMSSP_NEGOTIATE\n<proxy> -> <source> HTTP 1052 HTTP/1.1 407 Proxy Authorization Required , NTLMSSP_CHALLENGE (text/html)\n<source> -> <proxy>  HTTP 907 PUT http://s3-eu-west-xxxxxx.jpg HTTP/1.1 , NTLMSSP_AUTH, User: <username>\n<proxy> -> <source> HTTP 128 HTTP/1.1 100 Continue \n<proxy> -> <source> HTTP 509 HTTP/1.1 200 OK \n\nOn the face of it, from that trace, all looks good - however in this second case, although the upload appears to succeed, boto3 returns:\n\nbotocore.exceptions.ConnectionClosedError: Connection was closed before we received a valid response from endpoint URL\n\nAny ideas as to why this is...? \n Not sure, how are you configuring boto3 to use a proxy?  Via the `HTTP_PROXY` env var?\n\nThis error happens we we receive a BadStatusLine in the response.\n\nI'd suggest adding `boto3.set_stream_logger('')` to the top of your code.  We should be logging the stack trace that's generating that exception in the debug logs.  That might give more insight into what's going on.\n Yes - I set the http_proxy using:\nos.environ['http_proxy']=\"....\"\n\nThe trace seems to show the 100 response is not making it back to the calling function ...but in tshark I can see that response is apparently arriving at the machine at least...(see previous post)\n\n```\n2016-07-09 21:46:40,990 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [PUT]>\n2016-07-09 21:46:40,991 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTP connection (3): 127.0.0.1\n2016-07-09 21:46:40,992 botocore.awsrequest [DEBUG] Waiting for 100 Continue response.\n2016-07-09 21:46:41,993 botocore.awsrequest [DEBUG] No response seen from server, continuing to send the response body.\n2016-07-09 21:46:42,204 botocore.endpoint [DEBUG] ConnectionError received when sending HTTP request.\nTraceback (most recent call last):\n  File \"/usr/lib/python2.6/site-packages/botocore-1.4.36-py2.6.egg/botocore/endpoint.py\", line 174, in _get_response\n    proxies=self.proxies, timeout=self.timeout)\n  File \"/usr/lib/python2.6/site-packages/botocore-1.4.36-py2.6.egg/botocore/vendored/requests/sessions.py\", line 573, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/lib/python2.6/site-packages/botocore-1.4.36-py2.6.egg/botocore/vendored/requests/adapters.py\", line 415, in send\n    raise ConnectionError(err, request=request)\nConnectionError: ('Connection aborted.', BadStatusLine('',))\n2016-07-09 21:46:42,205 botocore.hooks [DEBUG] Event needs-retry.s3.PutObject: calling handler <botocore.retryhandler.RetryHandler object at 0x1432ad0>\n2016-07-09 21:46:42,205 botocore.retryhandler [DEBUG] retry needed, retryable exception caught: Connection was closed before we received a valid response from endpoint URL: \"http://s3-eu-west-1.amazonaws.com/xxxx.jpg\".\n```\n Interestingly (or maybe not...) attempts to do the same as the above using s3cmd (and the same proxies) work fine in both cases\n\nHTTP 708 PUT http://s3-eu-west-xxxxxx.jpg HTTP/1.1 , NTLMSSP_NEGOTIATE\nHTTP 1052 HTTP/1.1 407 Proxy Authorization Required , NTLMSSP_CHALLENGE (text/html)\nHTTP 888 PUT http://s3-eu-west-xxxxxx.jpg HTTP/1.1 , NTLMSSP_AUTH, User: \nHTTP/1.1 200 OK \n\nThe only difference is there is no HTTP Continue...\n Hi - thanks for the suggestion. I have taken a look, and it doesn't seem so\n- it looks like the issue is that boto3 and the aws-cli code sets the\n  request: continue header when talking to the amazon servers.\n  For some reason that continue response, though received, never seems to\n  make its way to the client\n\nHow possible would it be to specify that the request:continue header is not\nset...?\n\nOn Thu, Jul 14, 2016 at 1:04 AM, Kyle Knapp notifications@github.com\nwrote:\n\n> Hmm looks like your connections are being aborted. This looks similar to\n> these issues:\n> \n> aws/aws-cli#1928 https://github.com/aws/aws-cli/issues/1928.\n> boto/botocore#816 https://github.com/boto/botocore/issues/816\n> \n> Do any of the suggestions made in any of these issues help?\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/boto/boto3/issues/709#issuecomment-232521709, or mute\n> the thread\n> https://github.com/notifications/unsubscribe/AAJYc_weysqVU8-8dJVJ-hrhlGGBFz8yks5qVX0OgaJpZM4JH5k5\n> .\n  Overall looks like a good approach.  Had a few questions but otherwise looks good.\n :shipit:  Looks good.  I like this approach better.\n  Hi,\nI have following code where subnet is created and a waiter is called on it immediately.\nWaiter fails saying 'The subnet ID 'subnet-fbfed8d1' does not exist'.\nAlso the error returns immediately, it does not wait for 15 secs and 40 failed checks.\nThis happens very often in N. Virginia.\n\nWhy is the waiter unable to find the subnet just created ?\n\ntry:\nsubnet = vpc.create_subnet(CidrBlock=cidr_block, AvailabilityZone=avail_zone)\nprint ...         <---------------------------------------------------------------- Line 650\n subnet_waiter = ec2_client.get_waiter('subnet_available')\nsubnet_waiter.wait(SubnetIds=[subnet.id])\n.\n.\n.\nexcept Exception, e:\n print ...          <---------------------------------------------------------------- Line 662\n\n14:05:05,722 INFO 650 : ec2.Subnet(id='subnet-fbfed8d1')\n14:05:05,931 WARNING 662 :  Exception: Waiter SubnetAvailable failed: The subnet ID 'subnet-fbfed8d1' does not exist\n  Hello,\n\nWhen I call the function boto3.resource(...), if the \"endpoint_url\" parameter value contains an underscore, I got the following error : \nValueError: Invalid endpoint\n\nI have to use this underscore because I use boto3 in a Gitlab-CI project and Gitlab-CI generates host names with underscores... why is the underscore forbidden here ?\n\nThanks a lot!\n Code example : \n\n``` python\nimport boto3\n\nresource = boto3.resource(\n    service_name='s3',\n    aws_access_key_id='my_access_key',\n    aws_secret_access_key='my_secret_key',\n    endpoint_url='http://my_url_with_underscores'\n)\n```\n\nTraceback : \n\n```\nTraceback (most recent call last):\n  File \"<stdin>\", line 5, in <module>\n  File \"/tmp/virtual_env27/local/lib/python2.7/site-packages/boto3/__init__.py\", line 87, in resource\n    return _get_default_session().resource(*args, **kwargs)\n  File \"/tmp/virtual_env27/local/lib/python2.7/site-packages/boto3/session.py\", line 371, in resource\n    aws_session_token=aws_session_token, config=config)\n  File \"/tmp/virtual_env27/local/lib/python2.7/site-packages/boto3/session.py\", line 250, in client\n    aws_session_token=aws_session_token, config=config)\n  File \"/tmp/virtual_env27/local/lib/python2.7/site-packages/botocore/session.py\", line 818, in create_client\n    client_config=config, api_version=api_version)\n  File \"/tmp/virtual_env27/local/lib/python2.7/site-packages/botocore/client.py\", line 69, in create_client\n    verify, credentials, scoped_config, client_config, endpoint_bridge)\n  File \"/tmp/virtual_env27/local/lib/python2.7/site-packages/botocore/client.py\", line 238, in _get_client_args\n    timeout=(new_config.connect_timeout, new_config.read_timeout))\n  File \"/tmp/virtual_env27/local/lib/python2.7/site-packages/botocore/endpoint.py\", line 240, in create_endpoint\n    raise ValueError(\"Invalid endpoint: %s\" % endpoint_url)\nValueError: Invalid endpoint: http://my_url_with_underscores\n\n```\n Everybody using Docker-Compose is going to run into this. You are the only HTTP client out there that refuses those URLs. Please don't do insane, unusual sanity checks that no one else does, don't provide any additional safety and breaks actual code.  Exception throws\nAn error occurred (InvalidGroup.NotFound) when calling the DescribeSecurityGroups operation: The security group 'sg-xxxxxxxx' does not exist\n\nPython code I have:\n...\n\n```\n try:\n        resource_ec2 = boto3.resource(self._ec2, region_name=self._region_name)\n        resource_sg = resource_ec2.create_security_group(GroupName=self._group_name, Description=self._desc, VpcId=self._vpc)\n        self._sg_id = resource_sg.group_id\n        self._sg_name = resource_sg.group_name\n\n    except ClientError, e:\n        self.existing_logger.error(\"AWS_CREATE_SECURITY_GROUP | %s\" % str(e)) ...\n```\n resource_ec2.create_security_group is the place where the exception happens, as I said that I actually can find the security group from AWS console, I am not sure in which situation the function will throw a strange exception like that, but I don't have the exception all the time when I did the testing, what I did is I called the program multiple times, and sometimes I can get the experience of that\n  https://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.ObjectSummary.delete\n\nDoes not work because I believe the key in object summary objects are URL encoded.\n\nFor example:\n\n```\nbucket = s3.Bucket(<bucket_name>)\nfor obj_sum in bucket.objects.all():\n     obj_sum.delete()\nbucket.delete()\n```\n\nThis doesn't work. However this does:\n\n```\n\nfrom urllib import unquote_plus \n\nbucket = s3.Bucket(<bucket_name>)\nfor obj_sum in bucket.objects.all():\n      obj = s3.Object(bucket_name = <bucket_name>, key = unquote_plus(obj_sum.key))\n      obj.delete()\nbucket.delete()\n\n```\n\nSample debug output also points to url encoding as the issue:\n\n2016-06-30 15:32:07,392 INFO: Calling paginated s3:list_objects with {u'Bucket': u'alex'}\n2016-06-30 15:32:07,418 INFO: Calling s3:delete_object with {u'Bucket': u'alex', u'Key': 'test%2Fanothertest'}\n^^^^^^^^^^^^^^^^^^\n\nI'm using botocore-1.4.30-1 and boto3-1.3.1-1 on Centos 6.8, python 2.6 (yeah, yeah, don't ask).\n On Tue, Jul 12, 2016 at 5:06 PM, Kyle Knapp notifications@github.com\nwrote:\n\n> How did you install boto3? I was not able to reproduce it. My debug logs\n> even show it get properly decoded when I ran your first code snippet:\n> \n> 2016-07-12 14:05:09,006 boto3.resources.factory [DEBUG] Loading s3:ObjectSummary\n> 2016-07-12 14:05:09,007 boto3.resources.model [DEBUG] Renaming ObjectSummary attribute key\n> 2016-07-12 14:05:09,008 boto3.resources.action [INFO] Calling s3:delete_object with {u'Bucket': 'my_bucket_foo', u'Key': u'something with spaces'}\n> \n> Hmmm....perhaps this might be an issue with my target. Let me double check.\n> I for the life of me can't remember if I tested this with our internal S3\n> node or AWS S3 proper.\n\nApologies if it's the former.\n\n-aps\n  I have a setup where, knowing the security implications, I have to set \"verify=False\" for SSL uploads. \n\nThat works, but results in regular warnings of: \n\"InsecureRequestWarning: Unverified HTTPS request is being made\"\n\nIs there any way to suppress these...?\n Thanks\nThe second one was what I tried earlier today - but I made a mistake when\ndoing so, so it failed. Your example worked perfectly.\n\nSetting the environment variable had no effect - I think because I am\nrunning python 2.6 and 2.7 appears to be required to use this variable\n\nos.environ['PYTHONWARNINGS']=\"ignore:Unverified HTTPS request\"\n\nThanks for the advice either way\n\nOn Wed, Jun 29, 2016 at 6:59 PM, Jordon Phillips notifications@github.com\nwrote:\n\n> Yes, there are a few ways. You can set the following environment variable: PYTHONWARNINGS=\"ignore:Unverified\n> HTTPS request\"\n> \n> Or you can suppress it in our vendored version of requests:\n> \n> import botocore.vendored.requests.packages.urllib3 as urllib3\n> urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n> \n> The latter is potentially error prone if you're using linux provided\n> versions of botocore, as some distributions remove our vendored libraries\n> and replace the references with references to the distribution libraries.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/boto/boto3/issues/699#issuecomment-229437123, or mute\n> the thread\n> https://github.com/notifications/unsubscribe/AAJYc3b1zPz8hVV4_-P6dLRUiWcKGSD_ks5qQrJsgaJpZM4JA788\n> .\n  correcting the spelling of the word available.\n  Documentation for SQS uses receive_message, should be receive_messages\n  Sometimes elb.configure_health_check does not update the elb health check port and is ignored when an elb already exists and the ping_port has changed. Seems to always work when the elb already exists, however sometimes when the health exist and the port has changed, the health check is not updated.\n\nHit this issue when using the elb module in ansible\nhttps://github.com/ansible/ansible-modules-core/issues/4053\n  ``` python\n>>> client = boto3.client('s3')\n>>> client.list_objects_v2()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'S3' object has no attribute 'list_objects_v2'\n>>>\n>>> pp.pprint(client.list_objects_v2(Bucket='modesto-swatch-vzw-splitter', Prefix='Breitling-Unguidable', StartAfter='PRR'))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'S3' object has no attribute 'list_objects_v2'\n>>>>>> boto3.__version__\n'1.3.1'\n>>>\n```\n @AkhterAli \n`boto3` is built on top of `botocore` library. What is the version of botocore?\n\n`list_objects_v2` is added on 2016-05-06 with this commit https://github.com/boto/botocore/commit/fa0a846b27b795089d7bd665fd1b661892d8e761#diff-17ba5e28cee979d68fbd7632bf1aaea2 .\n\nI think your botocore library is not up-to-date.\nI can call `list_objects_v2` with botocore 1.4.31 & boto3 1.3.1 combo:\n\n```\n>>> import botocore\n>>> botocore.__version__\n'1.4.31'\n```\n @quiver @JordonPhillips \n\nWhile you're right it just doesn't to be out of date by much.  I will give updating a try and see what I get.\n\n``` python\nPython 2.6.6 (r266:84292, May 22 2015, 08:34:51)\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-15)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import boto3\n>>> import botocore\n>>> botocore.__version__\n'1.4.3'\n>>> client = boto3.client('s3')\n>>> client.list_objects_v2()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'S3' object has no attribute 'list_objects_v2'\n>>>\n```\n And that was it, minor updates did the trick.\n\n``` python\n>>> import boto3\n>>> import botocore\n>>> botocore.__version__\n'1.4.34'\n>>> client = boto3.client('s3')\n>>> client.list_objects_v2()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.6/site-packages/botocore/client.py\", line 278, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/lib/python2.6/site-packages/botocore/client.py\", line 548, in _make_api_call\n    api_params, operation_model, context=request_context)\n  File \"/usr/lib/python2.6/site-packages/botocore/client.py\", line 601, in _convert_to_request_dict\n    api_params, operation_model)\n  File \"/usr/lib/python2.6/site-packages/botocore/validate.py\", line 270, in serialize_to_request\n    raise ParamValidationError(report=report.generate_report())\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\nMissing required parameter in input: \"Bucket\"\n>>>\n```\n\nThanks guys.\n  This PR adds two small improvements to `Session.__repr__`.\n1. Use the proper argument name to set the session region, e.g. `region_name`.\n2. Use the class name so subclasses get a proper repr string.\n I started to test boto3 as part of a plan to migrate from boto and during my initial tests I had to setup an Session for `sa-east-1`. While using the Python shell was pretty straightforward to print the Session instance repr and figure out the proper arguments to set the session region, it didn't work [1] since the incorrect argument name, so I decided to fix it and open this PR. This is a pretty small change but it may save a couple of minutes from other developers starting with boto3.\n\nThe reason behind the change from the fixed `Session` string to the `self.__class__.__name__` is just a good practice and since I was messing with the `__repr__` I decided to include this too.\n\n[1]\n\n```\nIn [1]: import boto3\n\nIn [2]: boto3.Session()\nOut[2]: Session(region='us-east-1')\n\nIn [3]: boto3.Session(region='sa-east-1')\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-3-c85caa4f6d32> in <module>()\n----> 1 boto3.Session(region='sa-east-1')\n\nTypeError: __init__() got an unexpected keyword argument 'region'\n```\n Done, I also did a rebase with the latest upstream updates. \n  This was just a copy of the resource model from the previous latest version of the ec2 API. Test should pass again.\n\ncc @jamesls @JordonPhillips \n  I am trying to capture the total cost of a Reserved Instance. Through boto3, i am able to get the Recurring Price of an instance, but not the Upfront or the Partial Upfront paid. How can i get that.\n\n`\n\n> > > import boto3\n> > > c = boto3.client('ec2', region_name='us-east-1')\n> > > rsv = c.describe_reserved_instances().get('ReservedInstances')\n> > > for r in rsv:\n> > > ...    if r['State'] == 'active':\n> > > ...        print r\n> > > ...        break\n> > > ... \n> > > {u'ReservedInstancesId': '99-dummy-id-29', u'OfferingType': 'Partial Upfront', u'AvailabilityZone': 'us-east-1e', u'End': datetime.datetime(2016, 8, 12, 20, 51, 13, tzinfo=tzutc()), u'ProductDescription': 'Linux/UNIX (Amazon VPC)', u'UsagePrice': 0.0, u'RecurringCharges': [{u'Amount': 0.0247, u'Frequency': 'Hourly'}], u'Start': datetime.datetime(2015, 8, 14, 5, 0, tzinfo=tzutc()), u'State': 'active', u'FixedPrice': 0.0, u'CurrencyCode': 'USD', u'Duration': 31536000, u'InstanceTenancy': 'default', u'InstanceType': 'c3.large', u'InstanceCount': 4}`\n Figured this out.\n Sure. So the reserved instances with OfferingType as Upfront did not seem to have a FixedPrice. And i assumed that none of them did, which is not the case. Some of the ones that have PartialUpfront, do have the FixedPrice cost and all i had to do to get full cost was.\n\nr['RecurringCharges'][0]['Amount'] + r['FixedPrice']/(r['Duration']/3600)\n  I noticed recently that for a large download, the [awscli](https://github.com/aws/aws-cli) (`aws s3 cp s3://...`) was faster than using `boto3.s3.transfer.MultipartDownloader`.\n\nAfter running a few tests of downloading an 8GB file, it looks like maybe the size of the I/O buffer [here](https://github.com/boto/boto3/blob/2d371d60b6b08b39fabbd60f1c2f2d1277c81de0/boto3/s3/transfer.py#L524) may have something to do with it.  I don't understand why, but making that buffer size larger (e.g., 256KB or 1024KB instead of the current 16KB) seems to improve download speeds consistently for me.\n\nPerhaps that buffer size should be increased, or maybe just made configurable?  I don't understand the pros and cons other than that making it larger seems to help for my use case.\n\nTimes for downloading an 8GB file from S3 to a g2.2xlarge instance (I just changed the number in the line of code mentioned above):\n- 100 seconds with 1024KB buffer\n- 106 seconds with 256KB buffer\n- 118 seconds with 16KB buffer (current boto3 code)\n- 256 seconds with 4KB buffer\n\nCode for testing:\n\n```\nimport time\nimport boto3\nimport logging\nfrom concurrent.futures import ProcessPoolExecutor\n\nt0 = time.time()\n\nlogging.basicConfig(level='DEBUG')\nlogging.getLogger('botocore').setLevel('INFO')\nclient = boto3.client('s3')\n\nconfig = boto3.s3.transfer.TransferConfig(\n    multipart_threshold=64 * 1024 * 1024,\n    max_concurrency=10,\n    num_download_attempts=10,\n    multipart_chunksize=16 * 1024 * 1024,\n    max_io_queue=10000\n)\n\nconfig = boto3.s3.transfer.TransferConfig()\ntransfer = boto3.s3.transfer.MultipartDownloader(client, config, boto3.s3.transfer.OSUtils())\ntransfer.download_file('bucket-name', 'path/to/big/file/foo.npy', 'foo2.npy', 8000000000, {})\nprint(\"TIME: {} SECONDS\".format(time.time() - t0))\n```\n\nI previously mentioned this [here](https://github.com/boto/boto3/issues/409#issuecomment-224071473).\n In the benchmarks above, I downloaded the file to an EBS volume, which is perhaps less than ideal since that depends on the network connection to, if I understand correctly.  However, I've seen similar differences in performance between boto3 and awscli on local storage on a d2.8xlarge instance.  IIRC, the difference was even more pronounced in that case, perhaps because of the 10 gbps networking of the d2.8xlarge.\n This is definitely something you may see if the configurations are not appropriate for the manager. I would really recommend read this thread and comment in a similar implementation as to why this is the case: https://github.com/boto/s3transfer/pull/13#issuecomment-224678255. Based on that discussion, we may need to update the defaults in boto3.\n\nIf you are able to follow along, I would recommend setting a multipart_chunksize such that the following is True if you do not want to mess with the source code:\n\n```\nmultipart_chunksize * max_concurrency < 16 kB (the default io chunksize) * max_io\n```\n\nWhen you bumped the io chunksize to 1024KB does that make the performance more comparable to the CLI? That is the io chunksize it uses.\n Ah, I forgot to mention how long awscli takes above.  awscli takes about 90 seconds on the same machine for the same file, so it's still a bit faster than with boto3 when I changed the io chunksize to 1024KB, but not too much.\n\nI'll try fiddling around with the multipart_chunksize and/or max_io next...\n Another data point: it took 113 seconds to download the 8GB file with the following settings, where I just bumped up the IO queue size to be way larger than necessary to satisfy the inequality above.\n- max_concurrency=10\n- max_io_queue=1000000000\n- multipart_chunksize=16MB\n- io chunksize=16KB (boto3 default)\n I also just tried the following settings, which are the same as the ones I used for the tests at the top of this thread except with a smaller `multipart_chunksize`, and it took 118 seconds.\n- max_concurrency=10\n- max_io_queue=10000\n- multipart_chunksize=1MB\n- io chunksize=16KB (boto3 default)\n I'm encountering an identical problem. I was experiencing nearly 3 times the performance using the AWS CLI as opposed to boto. AWS CLI (aws-cli/1.10.33 botocore/1.4.23) is using the out of the box defaults. I'm using boto3 1.3.1 and using all default settings for my TransferConfig. I played with max_io_queue settings as @mheilman did with little effect - for a 5GiB file I'm downloading it in roughly 44 seconds.\n\nTested as follows:\n- aws-cli - default settings: **15s**\n- boto3 - default `TransferConfig`: **44s**\n- boto3 - default `TransferConfig` and boto3 source file s3/transfer.py `buffer_size` variable set to 1024 \\* 256: **16s**\n\nI tried all the settings suggested above focusing on `max_io_queue`. Even setting this up to the 10s of millions made no appreciable difference... maybe a second or two. Changing the buffer_size in the boto3 source seemed to be the only configuration that actually made the results consistent with the AWS CLI. I tried buffer sizes from 16KiB all the way up to 64MiB, but settled on 256KiB as performance deteriorated on both sides of that value.\n\nAll my testing was done on a m4.10xl instance running Amazon AMI. \n > I was experiencing nearly 3 times the performance using the AWS CLI as opposed to boto.\n\n@gisjedi, thanks for adding your observations.  It's good to know I'm not the only one seeing this.  While the differences I've posted above were smaller, I've also seen a similar 3x speed difference between boto3 and awscli on an d2.8xlarge instance with 10 gbps networking (the g2.2xlarge instance I used for the tests above has maybe 1 gbps).\n fwiw, I tried commenting out the lines that queue up IO chunks [here](https://github.com/boto/boto3/blob/2d371d60b6b08b39fabbd60f1c2f2d1277c81de0/boto3/s3/transfer.py#L528-L529) (and put a `pass` there), and downloading the 8GB file took about the same amount of time as awscli (86 seconds).\n Hmm it sounds like the theory that the slowness has to do with the io queue is correct.\n Also relevant: https://github.com/boto/boto3/pull/737\n  It does not appear that there is a way to specify the `--enable-debugging` flag when using the`emr` client and `run_job_flow`. \n\nIn `boto` this was a parameter for the `boto.emr.connection.run_jobflow` method, however there does not appear to be a similar parameter for `run_job_flow` in the `boto3` `emr` client.\n Hey, thank you for the reply! \nSorry I should have been more clear in my question. I have been able to setup the `Hadoop Debugging` by adding an extra step as you described. However, just adding this step does not enable the web UI for debugging the job in the aws emr console, as outlined here http://docs.aws.amazon.com/ElasticMapReduce/latest/ManagementGuide/emr-plan-debugging.html#emr-plan-debugging-logs-archive-debug. \n\nThank you for the help!\n\nExample of the web UI:\n![image](https://cloud.githubusercontent.com/assets/425691/16353980/4fd7c6c4-3a3a-11e6-8703-c20da079c683.png)\n The remaining questions on this are more suitable to the service forum (linked above), so I'm closing out this issue.\n  It appears for any given Cloudwatch Alarm Resource object, the metric attribute may not necessarily be correct: \n\n```\n>>> h = [alarm for alarm in cloudwatch.alarms.all()]\n>>> h[0].dimensions\n[{u'Name': 'AutoScalingGroupName', u'Value': 'awseb-e-4umv27f2q7-stack-AWSEBAutoScalingGroup-BQ80FZGN40EH'}]\n>>> h[0].metric.dimensions\n[{u'Name': 'InstanceId', u'Value': 'i-9a844b62'}]\n```\n\nFurther, Alarm.metric can possibly change between reads:\n\n```\n>>> h[2].dimensions\n[{u'Name': 'AutoScalingGroupName', u'Value': 'awseb-e-amw5zy2d4k-stack-AWSEBAutoScalingGroup-KM87EK7PV5NP'}]\n>>> h[2].metric.dimensions\n[{u'Name': 'InstanceId', u'Value': 'i-9a844b62'}]\n>>> h[2].metric.name\n'NetworkOut'\n>>> h[2].metric.load()\n>>> h[2].metric.dimensions\n[{u'Name': 'InstanceId', u'Value': 'i-b9875241'}]\n... time passes ...\n>>> h[2].metric.dimensions\nh[{u'Name': 'InstanceId', u'Value': 'i-9a844b62'}]\n```\n Closing due to inactivity.  Please post debug logs and we'll reopen and take another look.\n Yep, sorry I didn't get back quickly:\n\n```\n>>> h = [alarm for alarm in cw.alarms.all()]\n2016-07-18 15:36:23,300 boto3.resources.collection [INFO] Calling paginated cloudwatch:describe_alarms with {}\n2016-07-18 15:36:23,413 boto3.resources.factory [DEBUG] Loading cloudwatch:Alarm\n>>> h[0].dimensions\n[{u'Name': 'Hostname', u'Value': 'hostname-1.us-east-1.ec2'}]\n>>> h[0].metric.dimensions\n2016-07-18 15:36:31,103 boto3.resources.factory [DEBUG] Loading cloudwatch:Metric\n2016-07-18 15:36:31,103 boto3.resources.model [DEBUG] Renaming Metric attribute namespace\n2016-07-18 15:36:31,104 boto3.resources.action [INFO] Calling cloudwatch:list_metrics with {u'Namespace': 'example', u'MetricName': 'HttpResponseTime'}\n2016-07-18 15:36:31,247 boto3.resources.action [DEBUG] Response: {u'Metrics': [{u'Namespace': 'example', u'Dimensions': [{u'Name': 'Hostname', u'Value': 'hostname-2.us-east-1.ec2'}], u'MetricName': 'HttpResponseTime'}, {u'Namespace': 'example', u'Dimensions': [{u'Name': 'Hostname', u'Value': 'hostname-3.us-central1-f.gce'}], u'MetricName': 'HttpResponseTime'}, {u'Namespace': 'example', u'Dimensions': [{u'Name': 'Hostname', u'Value': 'hostname-1.us-east-1.ec2'}], u'MetricName': 'HttpResponseTime'}, {u'Namespace': 'example', u'Dimensions': [{u'Name': 'Hostname', u'Value': 'hostname-4.us-central1-b.gce'}], u'MetricName': 'HttpResponseTime'}], 'ResponseMetadata': {'HTTPStatusCode': 200, 'RequestId': '12dbc9be-4d38-11e6-a727-9b771ccb8d89'}}\n[{u'Name': 'Hostname', u'Value': 'hostname-2.us-east-1.ec2'}]\n```\n  It appears when a metric has alarms attached, you cannot retrieve them from the metric resource object itself. In fact, I have a few alarms attached to some metrics, and yet none of the metrics indicate any alarm is attached at all:\n\n```\n>>> [alarm for alarm in cloudwatch.alarms.all()]\n[cloudwatch.Alarm(name='awseb-e-4umv27f2q7-stack-AWSEBCloudwatchAlarmHigh-408I8SR24L7A'), cloudwatch.Alarm(name='awseb-e-4umv27f2q7-stack-AWSEBCloudwatchAlarmLow-83NC6PGIP8U6'), cloudwatch.Alarm(name='awseb-e-amw5zy2d4k-stack-AWSEBCloudwatchAlarmHigh-IDOOGQH9DPWB'), cloudwatch.Alarm(name='awseb-e-amw5zy2d4k-stack-AWSEBCloudwatchAlarmLow-J821DJZXWCGN'), cloudwatch.Alarm(name='[host1]::HttpTooSlowOrUnavailable'), cloudwatch.Alarm(name='[host2]::HttpTooSlowOrUnavailable')]\n>>> [backalarm for metric in cloudwatch.metrics.all() for backalarm in metric.alarms.all()]\n[]\n```\n\nsys.version is 2.7.10 (default, Oct 23 2015, 18:05:06) [GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)]\n\nboto3.**version** is 1.3.1 .\n Closing due to in activity.  Please post debug logs and we'll reopen and take another look.\n  As discussed with aws-sdk-php, current behavior is different and \"wrong\": https://github.com/aws/aws-sdk-php/issues/1009\n Are you saying that when you explicitly provide an `endpoint_url` that we're using your endpoint_url?\n\nIf so, that is the intended behavior and I don't think we can change that.  In general, an explicitly provided `endpoint_url` when creating clients should take precedence.\n\nUnless this is causing a specific issue, I don't think this is something we plan on changing.\n  My program connects to S3 like this.\n\n```\ns3 = boto3.resource('s3', \n    Conf.AWS_REGION, \n    aws_access_key_id=Conf.AWS_KEY,\n    aws_secret_access_key=Conf.AWS_SECRET)\nbucket = s3.Bucket(Conf.S3_BUCKET)\n```\n\nShould I make new connections every time I access S3 or is it okay to save it in global scope to reuse it later?\n @JordonPhillips Thanks!!\n  According to the [aws template](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html), a AWS::EC2::Route object should have the following properties:\n\n```\n{\n  \"Type\" : \"AWS::EC2::Route\",\n  \"Properties\" : {\n    \"DestinationCidrBlock\" : String,\n    \"GatewayId\" : String,\n    \"InstanceId\" : String,\n    \"NatGatewayId\" : String,\n    \"NetworkInterfaceId\" : String,\n    \"RouteTableId\" : String,\n    \"VpcPeeringConnectionId\" : String\n  }\n}\n```\n\nHowever, when I loop through the properties on a route object\n\n```\nimport boto3\n\nec2 = boto3.resource('ec2')\nroute = ec2.Route('route_table_id','destination_cidr_block')\n\n for attr in dir(route):\n       if hasattr( route, attr ):\n           print( \"obj.%s = %s\" % (attr, getattr(route, attr)))\n```\n\nit will return ...\n\n```\nobj.RouteTable = <bound method ec2.Route.RouteTable of ec2.Route(route_table_id='rtb-01b1b065', destination_cidr_block='192.168.0.0/16')>\nobj.__class__ = <class 'boto3.resources.factory.ec2.Route'>\nobj.__delattr__ = <method-wrapper '__delattr__' of ec2.Route object at 0x104127ed0>\nobj.__dict__ = {'meta': ResourceMeta('ec2', identifiers=[u'route_table_id', u'destination_cidr_block']), '_route_table_id': 'rtb-01b1b065', '_destination_cidr_block': '192.168.0.0/16'}\nobj.__doc__ = None\nobj.__eq__ = <bound method ec2.Route.__eq__ of ec2.Route(route_table_id='rtb-01b1b065', destination_cidr_block='192.168.0.0/16')>\nobj.__format__ = <built-in method __format__ of ec2.Route object at 0x104127ed0>\nobj.__getattribute__ = <method-wrapper '__getattribute__' of ec2.Route object at 0x104127ed0>\nobj.__hash__ = <method-wrapper '__hash__' of ec2.Route object at 0x104127ed0>\nobj.__init__ = <bound method ec2.Route.__init__ of ec2.Route(route_table_id='rtb-01b1b065', destination_cidr_block='192.168.0.0/16')>\nobj.__module__ = boto3.resources.factory\nobj.__new__ = <built-in method __new__ of type object at 0x1028ee280>\nobj.__reduce__ = <built-in method __reduce__ of ec2.Route object at 0x104127ed0>\nobj.__reduce_ex__ = <built-in method __reduce_ex__ of ec2.Route object at 0x104127ed0>\nobj.__repr__ = <bound method ec2.Route.__repr__ of ec2.Route(route_table_id='rtb-01b1b065', destination_cidr_block='192.168.0.0/16')>\nobj.__setattr__ = <method-wrapper '__setattr__' of ec2.Route object at 0x104127ed0>\nobj.__sizeof__ = <built-in method __sizeof__ of ec2.Route object at 0x104127ed0>\nobj.__str__ = <method-wrapper '__str__' of ec2.Route object at 0x104127ed0>\nobj.__subclasshook__ = <built-in method __subclasshook__ of type object at 0x7f9e6ba6fb50>\nobj.__weakref__ = None\nobj._destination_cidr_block = 192.168.0.0/16\nobj._route_table_id = rtb-01b1b065\nobj.delete = <bound method ec2.Route.delete of ec2.Route(route_table_id='rtb-01b1b065', destination_cidr_block='192.168.0.0/16')>\nobj.destination_cidr_block = 192.168.0.0/16\nobj.get_available_subresources = <bound method ec2.Route.get_available_subresources of ec2.Route(route_table_id='rtb-01b1b065', destination_cidr_block='192.168.0.0/16')>\nobj.meta = ResourceMeta('ec2', identifiers=[u'route_table_id', u'destination_cidr_block'])\nobj.replace = <bound method ec2.Route.replace of ec2.Route(route_table_id='rtb-01b1b065', destination_cidr_block='192.168.0.0/16')>\nobj.route_table_id = rtb-01b1b065\n```\n\nThe route object returned from the ec2.Route('route_table_id','destination_cidr_block') call seems to be missing the following attributes:\n- GatewayId\n- InstanceId \n- NatGatewayId \n- NetworkInterfaceId \n- VpcPeeringConnectionId \n I don't think it is hydrating.. Perhaps I am calling the attributes wrong, but I have been able to pull attributes from the EC2::Instance, Subnet, Security Group, NetworkACL, and EIP in this way.\n\nIn order to illustrate the problem I am having, I attempt to access the gateway_id attribute and I get the  following stack trace. Which I think is essentially saying the attribute is not on the object.\n\n```\nroute.gateway_id\n\nTraceback (most recent call last):\n  File \"/Users/aidanmelen/.p2/pool/plugins/org.python.pydev_5.0.0.201605051159/pysrc/_pydevd_bundle/pydevd_exec.py\", line 3, in Exec\n    exec exp in global_vars, local_vars\n  File \"<console>\", line 1, in <module>\n  File \"/Users/aidanmelen/Sampleminded/infrastructure/environments/2.7_python/lib/python2.7/site-packages/boto3/resources/factory.py\", line 343, in property_loader\n    '{0} has no load method'.format(self.__class__.__name__))\nResourceLoadException: ec2.Route has no load method\n```\n\nHow do I need to call the `route` object differently to extract the gateway_id attribute described in the [documentation](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#route)?\n I appreciate your help, but I'm still running into inconsistencies with the documentation and code. For example, the [docs](http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.RouteTable.routes_attribute) say that I can get GatewayId, InstanceId, NatGatewayId, NetworkInterfaceId, and VpcPeeringConnectionId from the Route Table's < routes_attribute >.\n\n```\nimport boto3\n\nec2 = boto3.resource('ec2')\nroute_table = ec2.RouteTable('id')\n```\n\n```\n>>> route_table.routes_attribute\n[{u'GatewayId': 'local', u'DestinationCidrBlock': '192.168.0.0/16', u'State': 'active', u'Origin': 'CreateRouteTable'}]\n```\n\nroutes_attribute only returns the GatewayId. Still missing InstanceId, NatGatewayId, NetworkInterfaceId, and VpcPeeringConnectionId.\n  Hi guys, \nHow can I achieve monitoring of the upload process when I am using s3.upload_part. You have implemented that functionality with upload_file (with callback), but it takes existing file. I am using django and I don't have actual file. Just InMemoryUploadedFile instance and I have to use create_multipart_upload for it.\nThanks #\n  Hi,\n\nThe lastest documentation would suggest there is no COPY function now for AMIs in boto3:\n\nhttp://boto3.readthedocs.io/en/latest/reference/services/ec2.html#image\n\nWhile older versions had it, it would seem this has now been removed? How is possible to now copy AMIs between regions using boto?\n\nThanks,\n\nChris\n Use copy_image method, changing ec2_connect object to destination region.\ncopy_ec2_connect = boto3.client('ec2', aws_access_key_id=xxx, aws_secret_access_key=xxx, region_name=us-west-1)\n\nec2_connect = boto3.client('ec2', aws_access_key_id=xxx, aws_secret_access_key=xxx, region_name=us-west-2)\n\ncopy_ec2_connect.copy_image(SourceRegion='us-west-2', SourceImageId=image_list[counter], Name=ImageName[counter])\n @Aamir010 very helpful, thank you. @JordonPhillips I was looking in the old docs and it appears to exist, but I think I was previously using an abstraction layer for boto ec2 that included a method on image to copy.\n Is this feature in development??? If so, what is its status?\n  :ship:\n  Your [documentation](https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.ServiceResource.create_instances) describes the **SecurityGroupIds** kwarg as \"One or more security group IDs.\" This is apparently distinct from the **SecurityGroups** kwarg, which is described as \"One or more security group names.\"\n\nHowever, when I attempt to create an EC2 instance, specifying a security group:\n\n``` python\n    ec2 = boto3.resource('ec2')\n\n    ec2.create_instances(\n        ImageId='ami-EXAMPLE',\n        MinCount=1,\n        MaxCount=5,\n        SecurityGroupIds=[\n            'ssg-EXAMPLE',\n        ],\n    )\n```\n\nI get the following error: \n\n``` sh\n    botocore.exceptions.ClientError: An error occurred (InvalidParameterValue) when calling the RunInstances operation: \n    Value () for parameter groupId is invalid. The value cannot be empty\n```\n\nBut if I instead pass a security group name in the SecurityGroupIds list:\n\n``` python\n    ec2 = boto3.resource('ec2')\n\n    ec2.create_instances(\n        ImageId='ami-EXAMPLE',\n        MinCount=1,\n        MaxCount=5,\n        SecurityGroupIds=[\n            'default',\n        ],\n    )\n```\n\nIt works. \n\nSeems I was [not the first](http://stackoverflow.com/questions/35721557/boto3-spot-instance-creation) to notice this issue.\n Oh duh. The extra s at the beginning of `'ssg-f61ce690'` was indeed the issue. Sorry for the trouble.\n  In the docs, under the S3 service object, there is the BucketLifecycle object.  That object has a \"put\" method.  The docs says:\n\n\"Deprecated, see the PutBucketLifecycleConfiguration operation.\"\n\nI cannot find a reference to PutBucketLifecycleConfiguration anywhere else in the documentation.  Even a grep of the code or a search on Github doesn't find a reference.\n It is [here](https://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Client.put_bucket_lifecycle_configuration). The reason that it is camel case as opposed to snake cased is because typically AWS operation names are camel cased so sometimes in the doc text, which we share with other SDKs will have operation names as camel cased. Thus, we usually we try to avoid having operation API names in the docs, but in this case I do not think we can avoid it.\n This confused me, too. Docs refer to something that isn't found when i search the docs.  Hi,\nSorry to intrude into your time ...\nboto3 is very powerful API and works very well for my organization.\nhowever, i incorporated parallel ssh python3 and boto3 to get matrics to CW.\nI am able to put_metric_data on certain intervals to CW but this data points do not plot to anything meaningful.\ni am not sure why these points are constantly staying in same range or are completely off in graph.\n\nExample would be that i have scale setup as sample count 100, sum 30 and mon 1 and max 100 for custom cpu meric.\nmy points are 7,8, 49 and then 100 for ten times as I peg CPU with while loop.\nthis goes for a while (10 minutes)\namazon cpu metric does graph this period correctly ...\nBut my graph is more horizontal line with visible points.\nIs there a good example of boto3 with put_metric_data that woudl actually graph correctly this scenario.\n\nAny help appreciated ...\n Could you provide a code snippet of what you are trying to do? As to being able to complete your scenario, I am not too familiar how to handle that specific use case with the CloudWatch API. I would recommend asking the [forums](https://forums.aws.amazon.com/forum.jspa?forumID=138). They should be much more knowledgeable about how to handle your use case.\n Hi thanks for response...\nI thought that no one will respond... I will try forums...\nProblem is this is full blow app that I wrote...\nI will give you a sample of the CPU monitor of linux instance ...\nBottom like this will not run as it depends on the parallelSSH, and boto3 libraries.\n\nMy point is this:\nEven if I am collecting over one ssh session stats every second or two and I am getting right results back, in essence if cpu is 80% bussy i report 100% as I am adding both sys and user cycles. when I plot this to CW I am getting a one point on the graph...\n\nNow if this goes for a while the labels are not correctly setup and line is relatively flat instead of going higher and higher ...\n\nIt is hard to explain, but I am looking for really any example or plotting stuff correctly ...\n\nfrom bCore import Boto3Wrapper\nfrom bCoreCMD import Boto3CMDWrapper\nimport re, datetime, time\nimport logging\nimport Config as cf\n\nlogger = logging.getLogger('cwtest.Cpu')\n\nclass Cpu(Boto3Wrapper, Boto3CMDWrapper):\n    \"\"\"\n    Demo class\n    \"\"\"\n\n```\ndef __init__(self, thisApp, instance, aws):\n    self.aws = aws\n    self.thisApp = thisApp\n    self.cnt = int(self.aws.loopCnt)\n    self.collectLoop = int(self.aws.collectLoop)\n    ##init core classes\n    Boto3Wrapper.__init__(self, instance, aws.resource, aws.target, aws.nameSpace)\n    Boto3CMDWrapper.__init__(self, thisApp, aws)\n    if self.aws.sendMetrics.lower() == 'false':\n        print(\"Only a DryRun, no stats will be published to AWS...\")\n\ndef __str__(self):\n    return Boto3Wrapper.__str__(self), Boto3CMDWrapper.__str__(self)\n\n\n\ndef run(self, pKey, filters):\n    ##     for CPU stats we need to capture twice\n    listCpuRawGenerator = list()\n    genDict = dict()\n    ##get all running EC2 instances in the cloud\n    instances = self.resource.instances.filter(Filters=[filters])\n    for instance in instances:\n        if instance.id in self.aws.instanceIDs:\n            logger.info(\"Found instance ID: {} of type {}\".format(instance.id, instance.instance_type))\n            ## one time ssh tunnel\n            self.clientRun(pKey)\n            while self.cnt <= self.collectLoop:\n                ##instance_id = metadata\n                ##region = metadata['placement']['availability-zone'][0:-1]\n                ## For the CPU cycles algorithm is dfferent\n                cpuRawGenerator = self.collectCpuUsageRemotely()\n                for host in cpuRawGenerator:\n                    genDict['start'] = cpuRawGenerator[host]\n                ##sleep one second\n                time.sleep(1)\n                ## Get stats again\n                cpuRawGenerator = self.collectCpuUsageRemotely()\n                for host in cpuRawGenerator:\n                    genDict['stop'] = cpuRawGenerator[host]\n                genDict['host'] = host\n                listCpuRawGenerator.append(genDict)\n                if cf.d: logger.info(listCpuRawGenerator)\n                cpuUsage = self.cpuParseCloudLike(listCpuRawGenerator)\n                metricDataCollection = self.getStats(cpuUsage)\n                logger.info(metricDataCollection)\n                for host, metaData in metricDataCollection.items():\n                    logger.info(\"CW POST for host {}  metricName {}\".format(host, type(self).__name__))\n                    ##print(host, metaData)\n                    if self.aws.sendMetrics.lower() != 'false':\n                        self.send_multi_metrics(metaData)\n                time.sleep(int(self.aws.sleepLoop))\n                self.cnt += 1\n\ndef collectCpuUsageRemotely(self):\n    ##first to do remote collection of metadata on Ec2 instance\n    ## we need parallel-ssh\n\n    ##connect to instance using private pem key\n    return self.runCmds(type(self).__name__)\n\ndef getCPUDict(self, cpuStat):\n    cpuDict = dict()\n    for cpuLine in cpuStat:\n        if '' in cpuLine: cpuLine.remove('')  # remove empty elements\n        ##print(cpuLine)\n        cpuLine = [cpuLine[0]] + [float(i) for i in cpuLine[1:]]  # type casting\n        cpuId, user, nice, system, idle, iowait, irq, softrig, steal, guest, guestNice = cpuLine\n        ##print(cpuId, user, nice, system, idle, iowait, irq, softrig, steal, guest, guestNice)\n\n        idle = idle + iowait\n        consumed = user + nice + system + irq + softrig + steal\n\n        pressure = idle + consumed\n        ##print(idle, consumed, pressure)\n\n        # update dictionionary\n        cpuDict.update({cpuId: {'pressure': pressure, 'idle': idle}})\n\n    return cpuDict\n\ndef parseRawCPU(self, output):\n    start = output['start']['stdout']\n    stop = output['stop']['stdout']\n    host = output['host']\n    if cf.d: logger.info(\"\\nOutput from host: {} {} {}\".format(host, start, stop))\n    cpuUsageStart = [line.split(' ') for content in start for line in content.split('\\n') if\n                     line.startswith('cpu0')]\n    cpuUsageStop = [line.split(' ') for content in stop for line in content.split('\\n') if\n                     line.startswith('cpu0')]\n    ##print(cpuUsageStart, cpuUsageStop)\n    # compute for every cpu\n\n    cpuStart = self.getCPUDict(cpuUsageStart)\n    cpuStop = self.getCPUDict(cpuUsageStop)\n\n    return (cpuStart, cpuStop, host)\n\n\ndef cpuParseCloudLike(self, outputList):\n    fullCpuContainer = dict()\n    cpuInfo = dict()\n    pattern = re.compile(self.thisApp.RES.cpuRE)\n    for output in outputList:\n        start, stop, host = self.parseRawCPU(output)\n        ##print(\"Start {}  Stop: {} host {}\".format(start, stop, host))\n        for cpu, messurment in start.items():\n            ##print(cpu, messurment)\n            total = stop[cpu]['pressure']\n            stepTotal = start[cpu]['pressure']\n            idle = stop[cpu]['idle']\n            stepIdle = start[cpu]['idle']\n            cpuPercentage = ((total - stepTotal) - (idle - stepIdle)) / (total - stepTotal) * 100\n            print(cpuPercentage)\n            cpuInfo.update({cpu: cpuPercentage})\n            fullCpuContainer[host] = cpuInfo\n    return fullCpuContainer\n\ndef getStats(self, cpuUsage):\n\n    fullMetricData = dict()\n    # for host, memUsage in cpuUsage.items():\n    #     logger.info(\"{} = {}\".format(host, memUsage))\n    #     mem_free = memUsage['MemFree'] + memUsage['Buffers'] + memUsage['Cached']\n    #     logger.info(\"Free Memory : {}\".format(mem_free))\n    #     mem_used = memUsage['MemTotal'] - mem_free\n    #     logger.info(\"Memory used: {}\".format(mem_used))\n    #\n    #     if memUsage['SwapTotal'] != 0:\n    #         swap_used = memUsage['SwapTotal'] - memUsage['SwapFree'] - memUsage['SwapCached']\n    #         swap_percent = swap_used / memUsage['SwapTotal'] * 100\n    #     else:\n    #         swap_percent = 0\n    if cf.d:  logger.info(cpuUsage)\n    metricMeta = dict()\n    metricData = list()\n    metricDataContainer = dict()\n\n    metricDataContainer['MetricName'] = 'CpuUsage'\n    ##dimesions\n    dims = list()\n    ## dimensions data container dict\n    for host, matrix in cpuUsage.items():\n        if cf.d: logger.info(\"For {} cpu stats are {}\".format(host, matrix))\n        for cpu, stat in matrix.items():\n            dims.append({'Name': cpu, 'Value': str(stat)})\n            if cf.d: logger.info(\"Dimensions: {} {} {}\".format(*dims))\n\n        metricDataContainer['Dimensions'] = dims\n\n        metricDataContainer['Timestamp'] = datetime.datetime.now()\n\n        ##metricDataContainer['Value'] = 100\n\n        metricDataContainer['StatisticValues'] = {\n             'SampleCount': 100.0,\n             'Sum': 30.0,\n             'Minimum': 1.0,\n             'Maximum': 100.0\n        }\n\n        metricDataContainer['Unit'] = 'Percent'\n\n        ##metricMeta['Namespace'] = 'string'\n        metricData.append(metricDataContainer)\n        ##metricMeta['MetricData'] = metricMeta\n\n\n        ##dimensions = {\"InstanceId\": instance_id}\n\n        fullMetricData[host] = metricData\n    return fullMetricData\n```\n  Dupe of #659\n #659 also adds HTTPS where it isn't yet\n  Facing a lambda timeout issue using EC2 client describe_images(**kwargs). There are ~10000 AMI's owned by account. Is there a workaround since there is no equivalent `MaxResults` as available in the describe_snapshots method?\n Hey, revisiting this:  @JordonPhillips so in describe_snapshots() you can use the MaxResults and NextToken rubrics to chunk the output to avoid this timeout issue.  I believe this is what you mean by \"pagination.\"  Are you saying that to get that functionality in describe_images(), we have to ask the EC2 team via the link you provided?  Thanks!  @jonathanwcrane While you still may not be able to get the full results in the 5 minutes, you would at least be able to process some of them. At that point you should consider other solutions that don't have timeouts, like ECS. @JordonPhillips Had raised the issue with AWS. They mentioned that it was a fringe case. \r\n\r\n@jonathanwcrane Have they updated the API to include pagination? I had used the timeout coupled with loops and sqs queues to deregister and then delete. The queue was used since the de-registration process is not instantaneous. \r\n  As per their email \u2018Changes to project subdomains\u2019:\n\n> Starting today, Read the Docs will start hosting projects from subdomains on the domain readthedocs.io, instead of on readthedocs.org. This change addresses some security concerns around site cookies while hosting user generated data on the same domain as our dashboard.\n\nTest Plan: Manually visited all the links I\u2019ve modified.\n  Currently boto3 rds client has a method modify_db_snapshot_attribute but not a corresponding method for cluster snapshot attributes.  Could one please be added?\n Yep, we can get that updated.  Thanks for letting us know.\n I think this API endpoint (http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_ModifyDBClusterSnapshotAttribute.html)\nis missing in the JSON blueprint for RDS, as suggested here (https://github.com/aws/aws-sdk-go/issues/694).\nCould updating to the latest JSON blueprint for RDS solve this issue?\n  Hi guys,\nHere's the create_instance.py file i used to create EC2 Instance.\n\n``` python\n#!/usr/bin/python\nimport boto3\nec2 = boto3.resource('ec2')\nec2.create_instances(ImageId='ami-fe5b6790', MinCount=1, MaxCount=1)\n```\n\nbut when i was executing it, i got this error:\n\n```\nTraceback (most recent call last):\n  File \"create_instance.py\", line 4, in <module>\n    ec2.create_instances(ImageId='ami-fe5b6790', MinCount=1, MaxCount=1)\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/factory.py\", line 518, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/action.py\", line 83, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 258, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 548, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (InvalidParameterCombination) when calling the RunInstances operation: Non-Windows instances with a virtualization type of 'hvm' are currently not supported for this instance type.\n```\n\nI noticed that type \"hvm\" are currently not supported, so what should i do?\n Thank your for the answer.\nSo what would the script be if i select t2.micro?\n So the script would be like this, right?\n#!/usr/bin/python\nimport boto3\nec2 = boto3.resource('ec2')\nec2.create_instances(ImageId='ami-fe5b6790', MinCount=1, MaxCount=1, InstanceType=t2.micro)\n You'd need to quote the value, but otherwise yes:\n\n```\nec2.create_instances(ImageId='ami-fe5b6790', MinCount=1, MaxCount=1, InstanceType='t2.micro')`\n```\n\nLet us know if you have any more questions.\n Hi @jamesls \nI tried that code but it didn't work.\nHere's the error:\nTraceback (most recent call last):\n  File \"create_instance.py\", line 4, in <module>\n    ec2.create_instances(ImageId='ami-fe5b6790', MinCount=1, MaxCount=1, InstanceType='t2.micro')\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/factory.py\", line 518, in do_action\n    response = action(self, _args, *_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/action.py\", line 83, in **call**\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 258, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 548, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (VPCResourceNotSpecified) when calling the RunInstances operation: The specified instance type can only be used in a VPC. A subnet ID or network interface ID is required to carry out the request.\n For certain instance types (such as the one you've specified), you'll need to launch the instance in a VPC.  You can do this by specifying the SubnetId parameter to `run_instances`.  You're other option is to select another instance type.\n\nYou can get a list of your available subnets using `ec2.describe_subnets()`.\n I'm a little confused here. So i just want to test creating new instance (any type is OK), could you tell me what is the complete command to do that, please?\n @thinhduckhoi  : You should google or go to site like serverfault.com for all these usage question, there is abundance of example around the corner. Use AWS console wizard if don't intend to read through the whole bunch of AWS EC2 background knowledge. \n\nIf you intend to use boto3 for some automation task, it is just a start, you really need to read lots of info about VPC, VPC limitation, setting tag, etc.  Otherwise, use AWS console wizard for quick start.\n Hi @commutecat : I read tutorial on boto3 document here and followed it but not work. Could it be the content on that site is deprecated?\nhttps://boto3.readthedocs.io/en/latest/guide/migrationec2.html#launching-new-instances\n @thinhduckhoi   : Yes, that part of documentation actually outdated. \nAfter AWS enforce the use of VPC, you NEED VPC.  \n\nIn fact, the minimum requirement to launched a EC2 instance into VPC(e.g. your final script) , is first create a VPC.  Just use AWS web console create a basic VPC.  Then launch your create_instance() that will use all default VPC value filled up the rest. \n  When a session is started with eu-central-1:\n\n```\nself.aws_session = boto3.session.Session(\n            aws_access_key_id=payload['aws_access_key_id'],\n            aws_secret_access_key=payload['aws_secret_access_key'],\n            region_name=self.region_name\n)\nself.sns = self.aws_session.client('sns')\n```\n\nand we call self.sns.publish with a TopicArn in us-east-1, it gives the following error:\n\n`botocore.exceptions.ClientError: An error occurred (InvalidParameter) when calling the Publish operation: Invalid parameter: TopicArn`\n\nThis is not self-explanatory. I couldn't realize I was using a Topic in a wrong region.\n  My application and Kinesis is not in the same account. So I have to assume a role to get the records from  kinesis. But the credentials will be expired in a short time. How to avoid it? \n I followed `[This](http://docs.aws.amazon.com/cli/latest/topic/config-vars.html#using-aws-iam-roles)` document. I can assume the role by command `aws sts assume-role --role-arn arn:aws:iam::0123456789012:role/list-role --role-session-name kk`. But after add the following, there is an error like  `A client error (InvalidClientTokenId) occurred when calling the AssumeRole operation: The security token included in the request is invalid.`\n\n`export AWS_DEFAULT_PROFILE=crossaccount`\n\n~/.aws/config\n\n```\n[default]\nregion = ap-southeast-2\n\n[profile crossaccount]\nrole_arn=arn:aws:iam::106193103636:role/listing-matching-receiver-role-Role-R96FLA5ID4XJ\nsource_profile=development\n```\n\n~/.aws/credentials\n\n```\n[development]\naws_access_key_id=foo\naws_secret_access_key=bar\n```\n This typically is a config issue (don't have permission to assume the role), or you may have invalid credentials with the development profile.  I noticed you didn't specify which profile you were using in the sample CLI command you had.  Ensure that that same CLI command works with \"--profile development\".\n\nIf that still doesn't work, please post a debug log and I'll reopen and take another look.  But typically it's one of the two issues listed above that fixes the issue.\n  I am trying to add a rule to SGa to allow SGb as in in bound ingress.\n\n`sga.authorize_ingress(IpProtocol='-1', SourceSecurityGroupName=sgb)`\n\nwhere sgb is the ID of the security group.\n\n`Unknown error: An error occurred (InvalidParameterValue) when calling the AuthorizeSecurityGroupIngress operation: Invalid value 'sg-f2cd2894' for groupName. You may not reference Amazon VPC security groups by name. Please use the corresponding id for this operation.`\n\nAWS documentation shows the options are:\n\n```\n authorize-security-group-ingress\n[--dry-run | --no-dry-run]\n[--group-name <value>]\n[--group-id <value>]\n[--ip-permissions <value>]\n[--protocol <value>]\n[--port <value>]\n[--cidr <value>]\n[--source-group <value>]\n[--group-owner <value>]\n[--cli-input-json <value>]\n[--generate-cli-skeleton]\n```\n\nI've tried\n\n`sga.authorize_ingress(IpProtocol='-1', source-group=sgb)`\n\nHow do I set the source as a Security Group?\n Thanks @JordonPhillips \n\nGot it.\n\nI tried specifying the name at one point and also the ID. Either way I got \n\n`You may not reference Amazon VPC security groups by name.` error message.\n\nI ended up getting it working with this command:\n\n`sg.authorize_ingress(GroupId = sg.id, IpPermissions = [ {'IpProtocol': '-1', 'UserIdGroupPairs': [{ 'GroupId': sg_a }]}])`\n\nSo many brackets :)\n  cc @kyleknap @JordonPhillips @petermoon\n Yes\n :ship:\n  `create_instances()` accepts a parameter for instance-initiated shutdown behavior, so it seems odd that when you `describe_instances()` you can't query that attribute directly from the `Instance`.\n\nDoes it make sense to expose `instanceInitiatedShutdownBehavior` as an attribute of `EC2.Instance`?\n @JordonPhillips - Yes, I am aware of that method. However, from my understanding, that is a separate call to AWS to get this attribute.\n\nWhat I am asking is, once a user has called `describe_instances()` for example and has an `Instance` already in hand, shouldn't they be able to query attributes like this directly from the object? As opposed to making a separate call back out to AWS?\n\nIt seems odd that `EC2.Instance` has most but not all of the properties describing the instance it represents.\n Okie doke, makes sense.\n  Closes #637.\n\n@kyleknap @JordonPhillips \n  Docs for: https://github.com/boto/botocore/pull/905\n\ncc @kyleknap @JordonPhillips \n :ship:\n It would also be good to update this in the CLI when the botocore one gets merged.\n  Looks fine. :ship: upon answering the one question that I had about a variable renaming.\n  `MaxKeys` parameter seems to be ignored by `Bucket.objects.filter` method\n\nCode:\n\n``` python\nsession = boto3.Session(profile_name=aws_profile, region_name=aws_region)\ns3 = session.resource(\"s3\")\nbucket = s3.Bucket(bucket_name)\nit = bucket.objects.filter(MaxKeys=10)\nn = 0\nfor item in it:\n    if n == 15:\n        print(\"TOO MANY!!!\")\n        break\n    print(item)\n    n += 1\nprint(n)\n```\n\nDesired effect: print 10 items, then print 10\nActual effect: print 15 items, print TOO MANY, print 15\n\nparameters to reproduce:\npython version 2.7.11\nboto3 version 1.1.3\nplatform Linux 4.1.3 AMD64\n This makes sense, but as you said the documentation is not correct. Also the keyword `MaxKeys` in this usage is not consistent with `MaxKeys` used in other contexts, where it does limit the number of results. In any case, thanks for clarifying this.\n @boompig Why is this closed if the documentation hasn't been fixed yet?  When I call  http://boto3.readthedocs.io/en/latest/reference/services/sqs.html#SQS.Client.get_queue_url,\nI received URL such as  https://queue.amazonaws.com/85512341234123/reindex.  But in AWS console I can view URL https://sqs.us-east-1.amazonaws.com/85512341234123/reindex.  \n I fixed this with sending \"endpoint_url\": \"https://sqs.us-east-1.amazonaws.com\"   when create SQSClient instance. But I'm not sure this is the right way.\n I think either version of the queue URL should work.  Both hostnames resolve to the same DNS records.  Were you having a problem with the `queue.amazonaws.com` version of the URL?\n I don't know what is it but  with queue.amazonaws.com do not work AWS ElasticBeanstalk Worker Environment\n  Hi,\nI create network interface, assign them tags. They show up on aws.\nThese interfaces are then used in create_instances in NetworkInterfaces list.\n\nLater I get these same interfaces using instance.network_interfaces.\nI noticed that tag_set is not set in these network interface objects.\nIs this by design or its a bug ?\n  When trying to create a new bucket it fails with the error as below. The same operation succeeds when using the resource.create_bucket() API.\n\nWhy is it that in the first case I need to specify a LocationConstraint, while in the 2nd case it works without that.\n1. Failed case:\n\n```\n    s3client = boto3.client('s3)\n    s3client.create_bucket(Bucket=\"test_bucket10\")\n    Traceback (most recent call last):\n      File \"<input>\", line 1, in <module>\n        s3client.create_bucket(Bucket=\"test_bucket10\")\n      File \"/Users/behzad_dastur/pyenvironments/awsenv/lib/python2.7/site- \n    packages/botocore/client.py\", line 252, in _api_call\n        return self._make_api_call(operation_name, kwargs)\n      File \"/Users/behzad_dastur/pyenvironments/awsenv/lib/python2.7/site-\n    packages/botocore/client.py\", line 542, in _make_api_call\n        raise ClientError(parsed_response, operation_name)\n    ClientError: An error occurred (IllegalLocationConstraintException) when calling the CreateBucket \n    operation: The unspecified location constraint is incompatible for the region specific endpo\n    int this request was sent to.\n```\n1. Pass case.\n\n```\n    s3client2 = boto3.resource('s3')\n    s3client2.create_bucket(Bucket=\"global-s3-cpe-bucket12\")\n   s3.Bucket(name='global-s3-cpe-bucket12')\n```\n So the only reason I filed the bug was because, when I try to use the low level client to create a bucket, and explicitly specify the location constraint. I cannot create buckets in us-east-1, which would be the default location if None is specified.\n\n```\ns3client.create_bucket(Bucket='symcpe-testbucket121', CreateBucketConfiguration= \n{'LocationConstraint':'us-east-1'})\nTraceback (most recent call last):\n  File \"<input>\", line 1, in <module>\ns3client.create_bucket(Bucket='symcpe-testbucket121', CreateBucketConfiguration=\n{'LocationConstraint':'us-east-1'})\n  File \"/Users/behzad_dastur/pyenvironments/awsenv/lib/python2.7/site-\npackages/botocore/client.py\", line 252, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/Users/behzad_dastur/pyenvironments/awsenv/lib/python2.7/site -\npackages/botocore/client.py\", line 542, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nClientError: An error occurred (InvalidLocationConstraint) when calling the CreateBucket operation:   \nThe specified location-constraint is not valid I do not see the us-east-1\n\n\nCreateBucketConfiguration={ 'LocationConstraint': 'EU'|'eu-west-1'|'us-west-1'|'us-west-2'|'ap-\nsoutheast-1'|'ap-southeast-2'|'ap-northeast-1'|'sa-east-1'|'cn-north-1'|'eu-central-1'     },     \n```\n There is also a special case regarding `.`s in the desired bucket name. I've put more information on https://github.com/aws/aws-cli/issues/589 -- should I open up a new issue?\r\n\r\nAlso overlaps with #781 maybe  I apologize if this isn't the proper place to post a question vs. an issue with boto3. I am setting up an ETL workflow based on sns/sqs message notifications. For polling to receive sqs notifications, I initially created a loop as follows:\n\n``` python\n    def get_notifications(self):\n        while True:\n            response = self.sqs_client.receive_message(QueueUrl=self.url)\n\n            if self.MESSAGE_KEY not in response:\n                continue\n\n            message = response[self.MESSAGE_KEY][0]\n\n            yield message['Body']\n\n            self.sqs_client.delete_message(QueueUrl=self.url,\n                                           ReceiptHandle=message['ReceiptHandle'])\n```\n\nIn my initial tests, it seems like the messages are not being deleted from the queue with this loop. I was hoping to halt execution until the message had been processed. I see the documentation uses \"queue.receive_messages\" instead. Would you recommend this over the client's receive message? What is the best mechanism to poll for a particular message?\n awesome thanks.\n  When you call the DescribeInstances AWS API call and give it a list of instances, if that instance was terminated some time ago, AWS in some cases may not return a InvalidInstanceID.NotFound; instead, it will return a valid response but with an empty reservations list. When this happens, boto3 does the object mapping as expected, but accessing any attribute on an ec2 instance in this state results in:\n\n```\n  File \"/Library/Python/2.7/site-packages/boto3/resources/factory.py\", line 345, in property_loader\n    return self.meta.data.get(name)\nAttributeError: 'NoneType' object has no attribute 'get'\n```\n\nThis can be reproduced by executing the following on an instance ID that once existed, but has been terminated for a day or so:\n\n```\nimport boto3\nbad_iid = \"i-1234567\"\nec2 = boto3.Session().resource(\"ec2\")\ninstance = ec2.Instance(bad_iid)\nprint i.launch_time\n```\n\nI see 2 ways of fixing this problem:\n1. Catching the fact that reservations are empty and issuing spontaneous InvalidInstanceID.NotFound ourselves.\n2. Expose the reservation ID as part of the Instance object so that callers can check the reservation for themselves before attempting to access other Instance attributes.\n\nI would much prefer solution #1 as empty reservations and InvalidInstanceID.NotFound are really the same thing, and I can't think of any possible scenario where a developer would ever need to distinguish between the 2 not found scenarios (and if they needed that detail they should probably be calling describe_instances directly and examining the contents of the dict.)\n Any update on this? I ran into the same issue using the Ruby SDK and found it quite confusing. I thought I would test out the behaviour on boto3 as I'm much more familiar with it and noticed it has the same issue. I'm also in favour of option 1.  I noticed there are also a number of similar issues with the ec2.Image/describeImage response - #925, #774, #560   Lessen some confusion on load and reload resource documentation.\n\ncc @jamesls @JordonPhillips \n  We do not have any logic on throttling or controlling max bandwidth.\n\ncc @jamesls @JordonPhillips \n  S3  uses \"ContentType\" header for signature calculation, but client's method has not parameter \"ContentType\".\r\n Are you seeing request failures? You can set the response content type with the `ResponseContentType` parameter ([docs](http://boto3.readthedocs.org/en/latest/reference/services/s3.html#S3.Client.get_object)).\n If I get S3 object by generating url and add \"Content-Type\" to headers I get \"SignatureDoesNotMatch\" error. \nIf i use ResponseContentType parameter,  url has parameter response-content-type in self. I tried to  append headers manually (create request_dict, add headers, call get_presigned_url method of requestsigner), but url is invalid. \nNow I use old boto generate_url and it work correct. Please do not close this issue I think it is  important bug. If you need quick response, contact with me immediately.\n `u\"https://test-bucket.s3.amazonaws.com/key/path?Signature=nxK%2BwZ69tQ7NHb0genrCgwW66Yg%3D&Expires=1389139200&AWSAccessKeyId=\"` - old boto generated; `u'https://test-bucket.s3.amazonaws.com//key/path?response-content-type=application%2Fjson&AWSAccessKeyId=&Expires=1389139200&Signature=GcSTuhqKQAaoEfzaFnHMDCyNBVw%3D'` -with \"ResponseContentType\";`u'https://key.s3.amazonaws.com/path?AWSAccessKeyId=&content-type=application%2Fjson&Expires=1389139200&Signature=MfFpVaUNCK32CAbUNhd4vjHRmtI%3D'`\\- when I try to create request_dict and add headers manually.  I removed  AWSAccessKeyId,  it isn't error\n My code with RequestSigner:\n\n```\nbucket_name = \"test-bucket\"\nkey=\"/key/path\"\nrequest_dict= {'query_string': {}, 'headers': {\"Content-Type\":content_type}, 'url_path': u'/{bucket}/{key}'.format(\n                    bucket=bucket_name, key=key\n                ), 'body': '', 'method': u'GET'}\n            prepare_request_dict(request_dict, endpoint_url=\"https://s3.amazonaws.com\")\n            presigned_url=client.instance._request_signer.generate_presigned_url(request_dict, expires_in=URL_EXPIRATION_TIME)`\n```\n\nResult: `u'https://test-bucket.s3.amazonaws.com//key/path?AWSAccessKeyId=&content-type=application%2Fjson&Expires=1389139200&Signature=XIYG0hDsdZMUrHDN6rwmR4Z2P%2BI%3D'`\n So you're generating the pre-signed URL, and then when you use that URL you're adding Content-Type?\n I tried to generate url with content-type header. \n`conn=boto.connect_s3()\n            presigned_url = conn.generate_url(\n                expires_in=URL_EXPIRATION_TIME,\n                method='GET',\n                bucket=bucket_name,\n                key=key,\n                headers={'Content-Type': content_type},\n            )``\nIt's \u00a0old code\n If I redirect 302 to S3 presigned url with boto3, request has content-type header. And  I have error. \n\n`\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Error>\n    <Code>SignatureDoesNotMatch</Code>\n    <Message>The request signature we calculated does not match the signature you provided. Check your key and signing method.</Message>\n    <AWSAccessKeyId>{removed}</AWSAccessKeyId>\n    <StringToSign>GET\n\napplication/vnd.api+json\n1462287921\n{removed}/2cfdb961-0d74-4047-9340-ce3af40cc3bf/2016-04-26-14-57.json</StringToSign>\n    <SignatureProvided>pYQyUnK1KfsV3fcdFU7M57YaVBs=</SignatureProvided>\n    <StringToSignBytes>47 45 54 0a 0a 61 70 70 6c 69 63 61 74 69 6f 6e 2f 76 6e 64 2e 61 70 69 2b 6a 73 6f 6e 0a 31 34 36 32 32 38 37 39 32 31 0a 2f 63 6f 6c 6c 65 63 74 72 69 75 6d 64 65 76 2d 61 74 74 61 63 68 6d 65 6e 74 73 2d 74 65 73 74 2f 61 70 69 36 5f 72 65 73 70 6f 6e 73 65 73 2f 32 63 66 64 62 39 36 31 2d 30 64 37 34 2d 34 30 34 37 2d 39 33 34 30 2d 63 65 33 61 66 34 30 63 63 33 62 66 2f 32 30 31 36 2d 30 34 2d 32 36 2d 31 34 2d 35 37 2e 6a 73 6f 6e</StringToSignBytes>\n    <RequestId>95A13282ED0B5C9E</RequestId>\n    <HostId>/0qANbC1yFu6wrlg8G2xETyhwGPsimHUMa6BiMxbPQs6cYYqyT3VuY0tYB/nPm2NcSnLQhRBzac=</HostId>\n</Error>\n`\n S3 service calculate signature with headers, boto3 ignore/do not support headers when it generate presigned url\n Is there any reason you're sending ContentType? Requests that do not have a body (GET) do not need to have ContentType set. boto3 will sign all headers except for `accept` and `user-agent`.\n If I redirect request to S3 (like as 302,301) from API gateway, I cant remove this header from request. And client (browser or other) send headers to redirect url. I don't know any reason why S3 calculate signature with headers  when it check signature of request but I think it is correct for S3.  And AWS SDK should provide this feature for request's signing.\n Well the issue is that we do sign the header, and we shouldn't be doing that, regardless of the reason why it's there. I'll have a PR up to address this shortly.\n Thanks for raising the issue!\n If I understand correctly, you have added `Content-Type` to your ignore list headers. But you and so do not use it, and S3 his checks. In this case S3 Service should not use this headers, not you \n Sure, I can be do not send  'Content-Type' header for request, but API Gateway required this header for request's integration.  What can  I do if  I send POST or another request to another server with `Content-Type` header   and redirect it to S3?\n Any update on this?  I set the ContentDisposition to 'attachment; filename: ..' so it can be used as a download but then I get the SignatureMismatch error.  \n What about ContentType header? Is there a bug when the ContentType parameter is included? In the code below, the first block make a signed URL that S3 accepts. But when I specify a ContentType, S3 rejects the PUT with 403. Does anyone know if there is an issue here?\r\n\r\n`                return S3Utils.s3_client.generate_presigned_url(method, Params={\r\n                    'Bucket': config.s3_bucket_name,\r\n                    'Key': key\r\n                }, ExpiresIn=config.s3_expire_seconds, HttpMethod='PUT')\r\n`\r\n\r\n`                return S3Utils.s3_client.generate_presigned_url(method, Params={\r\n                    'Bucket': config.s3_bucket_name,\r\n                    'Key': key,\r\n                    'ContentType': content_type\r\n                }, ExpiresIn=config.s3_expire_seconds, HttpMethod='PUT')\r\n` @escanzano You should use boto (old AWS SDK) generate_url to fix it. I think this is AWS S3  bug and it won't be fixed in boto3 code. `           conn = boto.connect_s3()\r\n            presigned_url = conn.generate_url(\r\n                expires_in=url_expiration_time,\r\n                method='GET',\r\n                bucket=self.bucket_name,\r\n                key=key,\r\n                headers={'Content-Type': content_type},\r\n            )` Can we please have the ability to add headers to pre-signed urls in boto3 just as is demonstrated above in the old boto methods? \r\n\r\nI have a situation where I'm using a request to API gateway to run a Lambda function which generates a data file. This file is then uploaded to s3 since it is too large to return directly via the gateway. I generate a signed url and return a 302 redirect with this url as the location. \r\n\r\nIt works fine in boto3 as long as the customer doesn't call the api endpoint with a Content-Type header but if they do that header causes the presigned url to be invalid as it is passed along with the redirect. This is very much a real world situation where a Content-Type header would be passed to a pre-signed s3 'get' request url (even though it isn't needed it is there from the original API request).  All files should have a newline before EOF, this changes the new-change\nscript to add them and backfills them into all existing change files.\n\ncc @kyleknap @jamesls\n  Python 3 does not have `string.letters` due to the ambiguous nature of\nthe word 'letters' when locales are taken into consideration. To get the\nsame effect, you can use `string.ascii_letters`, which is available on\nall versions we support.\n\ncc @kyleknap @jamesls\n  # Motivation\n\nFor scenarios like parsing some values from several sources like server log, user upload data which might contain value duplication, and write them to dynamoDB as unique values.\n\nYou want to bypass no duplication limitation of single batch write request within `boto3` rather than adding another layer to deal with value duplication.\n\nThe no duplication error looks like\n`botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the BatchWriteItem operation: Provided list of item keys contains duplicates`.\n# Solution\n\nTo de-duplicate request by specifying `auto_dedup=True`\nIt will just write out a single request since all requests are the same in below example.\n\n``` python\n    with table.batch_writer(auto_dedup=True) as batch:\n        for _ in range(50):\n            batch.put_item(\n                Item={\n                    'account_type': 'anonymous',\n                    'username': 'user',\n                    'first_name': 'unknown',\n                    'last_name': 'unknown'\n                }\n            )\n```\n @jamesls ,\nThanks for the nice catch :)\nMy thoughts as below but not yet implemented completely,\n\n**drop request item in buffer if its primary key(or composite) values are the same as newly added one.**\n\ninterface might look like\n\n``` python\nwith table.batch_writer(overwrite_by_pkeys=['primary_key', 'sort_key']) as batch:\n    batch.put_item(\n        Item={\n            'primary_key': 'p1',\n            'sort_key': 's1',\n            'other': '111',\n        }\n    )\n    batch.put_item(\n        Item={\n            'primary_key': 'p1',\n            'sort_key': 's1',\n            'other': '222',\n        }\n    )\n    batch.delete_item(\n        Key={\n            'primary_key': 'p1',\n            'sort_key': 's2'\n        }\n    )\n    batch.put_item(\n        Item={\n            'primary_key': 'p1',\n            'sort_key': 's2',\n            'other': '444',\n        }\n    )\n```\n\nrequest items after dedup:\n\n``` python\nbatch.put_item(\n    Item={\n        'primary_key': 'p1',\n        'sort_key': 's1',\n        'other': '222',\n    }\n)\nbatch.put_item(\n    Item={\n        'primary_key': 'p1',\n        'sort_key': 's2',\n        'other': '444',\n    }\n)\n```\n\nthe reason behind is:\n1. treat batch write as stream of individual puts/deletes, new operations on the same primary key item always overwrite old ones.\n2. so if we drop older request with the same primary key in buffer but keep the latest one, it is acting like eventually consistent with streams of individual puts/deletes without actual operations on old requests. \n\nThen it almost meet user's expectation if they want the same behavior of streams of individual puts/deletes. Thanks for your further advise :)\n No concerns. Looks good. :ship: One more thing that would be nice is could you run the `boto3/scripts/new-change` script to add a changelog entry for this?\n > No concerns. Looks good. :ship: One more thing that would be nice is could you run the boto3/scripts/new-change script to add a changelog entry for this?\n\n@kyleknap done !\n @jamesls , @kyleknap , @JordonPhillips ,\nThanks for reviewing, please kindly let me know if anything further should be done :)\n Thanks! Sorry about not noticing the update before. Merging.\n  :ship:\n  :ship:\n  Fixes #596 \n\ncc @kyleknap @jamesls\n  The documentation [makes explicit references to a ProvisionedThroughputExceededException](http://boto3.readthedocs.org/en/latest/reference/services/kinesis.html#Kinesis.Client.put_record): \n\n> If a PutRecord request cannot be processed because of insufficient provisioned throughput on the shard involved in the request, PutRecord throws ProvisionedThroughputExceededException .\n\nThe link is broken, and there's no information on how to catch this exception. Furthermore, grepping the source code for `boto3` and `botocore` only turns up documentation references to ProvisionedThroughputExceededException, no actual implementations of it, so I'm unsure what to import to try and catch/handle this exception.\n I'm seeing references to a ClientError? For example, in the code snippet here: http://boto3.readthedocs.org/en/latest/guide/migrations3.html?highlight=clienterror#accessing-a-bucket. \n\n``` python\nimport botocore\nbucket = s3.Bucket('mybucket')\nexists = True\ntry:\n    s3.meta.client.head_bucket(Bucket='mybucket')\nexcept botocore.exceptions.ClientError as e:\n    # If a client error is thrown, then check that it was a 404 error.\n    # If it was a 404 error, then the bucket does not exist.\n    error_code = int(e.response['Error']['Code'])\n    if error_code == 404:\n        exists = False\n```\n\nIf I could reliably reproduce this, I could just print out the properties of a ClientError and figure out how to check it for a ProvisionedThroughputExceededException, but it's not really trivial to reproduce this error.\n Now I'm utterly confused, because in the previous linked example, Code is 404, but [here, it's a named exception](http://botocore.readthedocs.org/en/latest/client_upgrades.html#error-handling).\n\n``` python\nfrom botocore.exceptions import ClientError\n\nec2 = session.get_client('ec2', 'us-west-2')\ntry:\n    parsed = ec2.describe_instances(InstanceIds=['i-badid'])\nexcept ClientError as e:\n    logger.error(\"Received error: %s\", e, exc_info=True)\n    # Only worry about a specific service error code\n    if e.response['Error']['Code'] == 'InvalidInstanceID.NotFound':\n        raise\n```\n I am also having this concern in the Kinesis client. +1\n > If I could reliably reproduce this, I could just print out the properties of a ClientError and figure out how to check it for a ProvisionedThroughputExceededException, but it's not really trivial to reproduce this error.\r\n\r\nI was able to reproduce this by flooding a table with capacity=1 with write requests and capturing the error object. For future reference, here are what I think are likely the interesting bits:\r\n\r\n```python\r\nimport pprint\r\nimport random\r\n\r\nimport boto3\r\n\r\ndynamodb = boto3.resource('dynamodb')\r\ntable = dynamodb.Table('test__alex')\r\nwhile True:\r\n    try:\r\n        table.put_item(Item={'ID': str(random.randint(1, 100000)), 'name': open('/usr/share/dict/words').read(2048)})\r\n    except Exception as e:\r\n        f = e\r\n        break\r\n\r\nerror = f\r\nfor attr in dir(f):\r\n    if attr.startswith('_'):\r\n        continue\r\n    print(attr)\r\n    pprint.pprint(getattr(f, attr))\r\n    print()\r\n```\r\n\r\n```\r\nMSG_TEMPLATE\r\n('An error occurred ({error_code}) when calling the {operation_name} '\r\n 'operation{retry_info}: {error_message}')\r\n\r\nargs\r\n('An error occurred (ProvisionedThroughputExceededException) when calling the '\r\n 'PutItem operation (reached max retries: 9): The level of configured '\r\n 'provisioned throughput for the table was exceeded. Consider increasing your '\r\n 'provisioning level with the UpdateTable API.',)\r\n\r\noperation_name\r\n'PutItem'\r\n\r\nresponse\r\n{'Error': {'Code': 'ProvisionedThroughputExceededException',\r\n           'Message': 'The level of configured provisioned throughput for the '\r\n                      'table was exceeded. Consider increasing your '\r\n                      'provisioning level with the UpdateTable API.'},\r\n 'ResponseMetadata': {'HTTPHeaders': {'connection': 'keep-alive',\r\n                                      'content-length': '241',\r\n                                      'content-type': 'application/x-amz-json-1.0',\r\n                                      'date': 'Tue, 22 Aug 2017 10:04:59 GMT',\r\n                                      'server': 'Server',\r\n                                      'x-amz-crc32': '1545824508',\r\n                                      'x-amzn-requestid': 'CDRKT1L3H717RM1CL61P5J1L63VV4KQNSO5AEMVJF66Q9ASUAAJG'},\r\n                      'HTTPStatusCode': 400,\r\n                      'MaxAttemptsReached': True,\r\n                      'RequestId': 'CDRKT1L3H717RM1CL61P5J1L63VV4KQNSO5AEMVJF66Q9ASUAAJG',\r\n                      'RetryAttempts': 9}}\r\n\r\nwith_traceback\r\n<built-in method with_traceback of ProvisionedThroughputExceededException object at 0x10f72b588>\r\n``` And so you have something to catch:\r\n\r\n```python\r\n>>> from botocore.exceptions import ClientError\r\n>>> isinstance(error, ClientError)\r\nTrue\r\n```  :ship:\n  Let logging show the real amount of sent items. Small, but quite useful detail to log during testing stages. \n Thanks :smile: \n  I think there's some formatting issue with the documentation which leads to odd/mistaken information when describing the comparison operators available in condition expressions for DynamoDB.\n\nFor instance: [readthedocs\\Services\\DynamoDB\\Client\\Query](https://boto3.readthedocs.org/en/latest/reference/services/dynamodb.html#DynamoDB.Client.query), and specifically in Request Syntax > Parameters > KeyConditionExpression you can see\n\n> Valid comparisons for the sort key condition are as follows:\n> sortKeyName = :sortkeyval - true if the sort key value is equal to :sortkeyval .\n> sortKeyName *\\* :sortkeyval - true if the sort key value is less than :sortkeyval .\n> sortKeyName = :sortkeyval - true if the sort key value is less than or equal to :sortkeyval .\n> sortKeyName *\\* :sortkeyval - true if the sort key value is greater than :sortkeyval .\n> [...]\n\nI presume the operators in this list are meant to match the listing given by the [AWS DynamoDB DevGuide on Query And Scan](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#QueryAndScan.Query), so I suspect some sort of replacement/escaping gone awry somewhere in the pipeline.\n\n_(btw, I did inspect the page source, so these don't seem to be browser-induced char-replacements due to a missing font or anything of that nature)_\n  We expose this in botocore, but not boto3.\n\ncc @kyleknap @jamesls \n :ship:\n @jamesls That was the original thing that spurred this change on, though I don't think that a user should necessarily use their boto credentials for Redshift.\n  Fixes https://github.com/boto/boto3/issues/393\n\nThe only discrepancy is that HeadObject does return an `Owner`, but ListObjects does so the `owner` attribute cannot be populated from the `load()`. I do not think there is anyway around this unfortunately because in order to get it perfectly correct, it would require a `ListObjects` for a single object which is not cost efficient.\n\ncc @jamesls @JordonPhillips \n  Fixes https://github.com/boto/boto3/issues/485\n\nPretty much took botocore's guide and switched it with boto3 terminology/syntax.\n\ncc @jamesls @JordonPhillips \n :boat: \n  Looks good. :ship:\n  Resolves [this StackOverflow issue](http://stackoverflow.com/questions/36128824/boto3-s3-object-object-has-no-attribute-md5).\n\nCloses #557 \n\ncc @jamesls @kyleknap \n  We currently have the ability to inspect what resources are available to a session, but not what subresources are available to a resource. This adds a method to do that on each resource class.\n\nResolves #113\n\nThis wasn't super high priority, but it was a very simple change.\n\n![screen shot 2016-03-18 at 4 06 16 pm](https://cloud.githubusercontent.com/assets/2643092/13894283/5f8d6ac4-ed23-11e5-8f4f-c9411dd5e1ad.png)\n\ncc @jamesls @kyleknap \n  Cool :ship:\n  Repeated calls to the following method display an ever-increasing memory footprint:\n\n``` python\nCLIENT = boto3.client('s3')\n\ndef get_contents(path):\n    s3_object = CLIENT.get_object(Bucket='my_existing_bucket', Key='my_existing_key')\n    if s3_object:\n        s3_stream = s3_object.get('Body', '')\n        return s3_stream.read()\n    return ''\n```\n\nUsing the `memory_profiler` library, it's clear the culprit is the `get_object` call (line 3):\n\n```\nLine #    Mem usage    Increment   Line Contents\n================================================\n    1     50.5 MiB      0.0 MiB   @profile\n    2                             def get_contents(path):\n    3     51.4 MiB      0.9 MiB       s3_object = CLIENT.get_object(Bucket='my_existing_bucket', Key='my_existing_key')\n    4     51.4 MiB      0.0 MiB       if s3_object:\n    5     51.4 MiB      0.0 MiB           s3_stream = s3_object.get('Body', '')\n    6     51.4 MiB      0.0 MiB           return s3_stream.read()\n    7                                 return ''\n```\n\nValues on line 3 ranging from 0.0 MiB to nearly 2.0 MiB per call are observed, even when requesting the same key multiple times.\n## Information\n- Python version: 3.4.3 (OS X Yosemite and Ubuntu 14.04 environments)\n- boto3 version: 1.1.4\n  - botocore version: 1.2.11\n @gaulrobe could you take a look at this when you get in? I'm happy to jump on board when I'm in as well! Thanks for the response @jamesls.\n @jamesls, thanks for the quick follow-up! \n\nI've run several more tests this morning and am not seeing memory jumps on subsequent calls to the API. Not sure what we were seeing yesterday...\n\nFeel free to close this out for now, we will run more tests and make another issue if we notice anything else wonky.\n\nThanks again!\n @gaulrobe @jamesls I have confirmed that we're not seeing the subsequent increases we were seeing yesterday. I'm thoroughly confused but tentatively happy.\n  Looks good just had comments about a couple of options that you may have missed.\n All of the stuff that I commented about can be added in a subsequent PR. :ship:\n  We recently encountered a rare error condition in S3 where the download of a larger file (2+ Mb) would hang unexpectedly. Somewhere in the network layer the connection would time out with only a portion of the file transmitted. When this happened `get_contents_to_file` would write as much data as was received and then exit with apparent success, leaving the user with truncated files and no indication that an error had occurred. \n\nWe have followed up fairly extensively with S3 business support and although neither we nor they have been able to pin down exactly what's causing the hang, they recommend checking at the end of the download to make sure that the amount of data received matches with what `Content-Length` says it should be. Here's what Amazon support actually said:\n\n> In general, with issues like these, the S3 service team would usually recommend implementing a form of error checking (like you already have with comparing Etags) of somehow comparing the downloaded object's properties with what you're expecting. A simple alternative example of this would be to just compare the retrieved Content-Length of the object to the length of the downloaded object to see if they match. In a perfect world, it would be ideal that intermittent errors like these didn't occur ever, but just the nature of having data traverse a distributed system like S3 entails having to be able to appropriately handle unexpected responses. \n\nWe're currently implementing the check outside of boto; eventually we'll get a pull request together to make it happen inside `get_contents_to_file` and raise an appropriate exception, but in the meantime we felt it was important to get the info out there in case someone else runs into the same problem or someone wants to take a stab at fixing it. \n Hi James,\n\nYes, we are in fact using boto, not boto3. I had been under the impression that we'd reproduced the issue with both boto and boto3; just checked with our testing folks and it turns out that we did not reproduce with boto3. Call it an internal miscommunication on our end. My apologies. Will close this issue (and we'll look into switching over to boto3 as well). Thank you!\n  When calling \n\n`boto3.client(\"cloudsearchdomain\", endpoint_url = \"http://xxx.xxx.xxx\")`\n\nhad following error with **Boto3-1.2.6** and **botocore-1.4.0**\n\n```\nTraceback (most recent call last):\n  File \"app.py\", line 81, in dataCS\n    size = size)\n  File \"/usr/local/lib/python3.4/site-packages/botocore/client.py\", line 228, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python3.4/site-packages/botocore/client.py\", line 486, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (SignatureDoesNotMatch) when calling the Search\noperation: Credential should be scoped to correct service: 'cloudsearch'. \n```\n\nUninstalled boto3 and reinstalled with previous version **Boto3-1.2.5** and **botocore-1.3.30**, everything is perfect with older version.\n guys when is this fix going to be in tokyo lambda, its failing today.\n Lambda has some version of Boto there by default. Is there any workaround to force the broken version to pass the right signature name by default? There's no way to force AWS to upgrade their Boto version.\n Nevermind - the solution to this for now, if any other Lambda users stumble across is, is just to package your own version of boto3 from a virtualenv into your Lambda function zip package. That's probably good long run advice anyway so you don't find yourself in this type of situation again.\n I am doing monkey patch right now to those two functions that are affected. FYI today the same bug has spread to us-east-1 , Virginia. funny that Tokyo got hit first\n  I really like the error messaging for this now. Just had a question about subclassing errors and whether we should improve the error message for api versions in the client.\n Thanks. :ship:\n :boat: \n  I am using Amazon cognito so my users can save files directly into an S3 bucket.\n\nAs a result, the files are saved with an S3 key that looks like this:\n\nus-east-1:1e3ee2dd-4537-4aa2-95d4-fadfd6828388/blah/myfile.txt\n\nThis bit: \"us-east-1:1e3ee2dd-4537-4aa2-95d4-fadfd6828388\" is the users Cognito ID and is created by Amazon and is thus out of my control.\n\nMy goal is to process all the files that belong to that user.\n\nSo the best way to do that is use a paginator with a prefix set to \"us-east-1:1e3ee2dd-4537-4aa2-95d4-fadfd6828388\"\n\nBUT boto3 appears to be url encoding the prefix and thus no results are returned by the paginator.  This is because the colon character has been percent encoded and somewhere else in boto3 that means that some equality test is failing.\n\nCould you please turn off the url encoding of the prefix on paginators?\n\nthanks\n Closing due to inactivity. Let us know if you get a code sample to help us reproduce this.\n  Fixes https://github.com/boto/boto3/issues/283 in process\n\ncc @jamesls @JordonPhillips \n :boat: \n  Fixes https://github.com/boto/boto3/issues/188\n\ncc @jamesls @JordonPhillips \n Updated the test. Merging.\n  Fixes https://github.com/boto/boto3/issues/156\n\ncc @jamesls @JordonPhillips \n  Fixes https://github.com/boto/boto3/issues/134\nWas not completely obvious for a common use case.\n\ncc @jamesls @JordonPhillips \n :boat: \n  I noticed some broken links in the docs, and while I was updating I decided to reference the new way of setting the addressing style as well.\n\ncc @jamesls @kyleknap \n :ship:\n  cc @jamesls @JordonPhillips \n Looks like we are missing a paginator. I will go ahead and add it.\n Added missing paginator in this PR: https://github.com/boto/botocore/pull/818\n Looks like the resource model uses waiters. We will need to scrub the waiters from this resource model (which will cause us to differ from the ruby sdk) or revamp our design of waiters.\n Sure discussion and action is taking longer than expected.\n  Fixes https://github.com/boto/boto3/issues/514\n\ncc @jamesls @JordonPhillips \n  In the boto3 client for the GameLift service, the `create_build` call returns partial upload information.  If I run this code:\n\n```\ngamelift_client = boto3.client('gamelift',\n                          aws_access_key_id=AWS_ACCESS_KEY,\n                          aws_secret_access_key=AWS_SECRET_KEY,\n                          region_name=GAMELIFT_REGION)\ncreate_build_result = gamelift_client.create_build(Name='some-build-name',Version='1')\n```\n\nI get this result:\n\n```\n{\n    'ResponseMetadata' : {\n        'HTTPStatusCode' : 200,\n        'RequestId' : '<redacted>'\n    },\n    u 'Build' : {\n        u 'Status' : u 'INITIALIZED',\n        u 'Name' : u '<redacted>',\n        u 'BuildId' : u '<redacted>',\n        u 'CreationTime' : datetime.datetime(2016, 2, 29, 11, 21, 33, 706000, tzinfo = tzlocal()),\n        u 'SizeOnDisk' : 0,\n        u 'Version' : u '1'\n    },\n    u 'UploadCredentials' : {\n        u 'SecretAccessKey' : u '<redacted>',\n        u 'SessionToken' : u '<redacted>',\n        u 'AccessKeyId' : u '<redacted>'\n    }\n}\n```\n\nSo GameLift returns me the UploadCredentials I need to initiate an upload, but not the actual S3 StorageLocation for me to make the upload.  This seems to conflict with the published API docs for the CreateBuild operation:  https://docs.aws.amazon.com/gamelift/latest/apireference/API_CreateBuild.html\n\nThen I call this code after creating a build:\n\n```\nbuild_id = create_build_result['Build']['BuildId']\nrequest_creds_response = gamelift_client.request_upload_credentials(BuildId=build_id)\n```\n\nAnd I get this result:\n\n```\n{\n    u 'StorageLocation' : {\n        u 'Bucket' : u 'prod-gamescale-builds-us-west-2',\n        u 'Key' : u '<redacted>'\n    },\n    'ResponseMetadata' : {\n        'HTTPStatusCode' : 200,\n        'RequestId' : '<redacted>'\n    },\n    u 'UploadCredentials' : {\n        u 'SecretAccessKey' : u '<redacted>',\n        u 'SessionToken' : u '<redacted>',\n        u 'AccessKeyId' : u '<redacted>'\n    }\n}\n```\n\nThis call successfully returns both the UploadCredentials and the StorageLocation.\n\nSo, my question is, why does `create_build` only return the UploadCredentials and not the StorageLocation?  It seems to me it should either return both of those values or neither of those values.  The way it is now isn't broken per se, but it is really confusing.\n\nAs a side note, the AccessKeyId and SecretAccessKey returned by `create_build` and `request_upload_credentials` are different too, so it seems like GameLift might be unnecessarily generating credentials twice.\n It turns out I had stale or corrupt GameLift model cached inside my $HOME/.aws/gamelift directory.  Deleting that directory and re-running the script seems to have fixed the issue.\n  Seems like there are so many different ways of uploading a file to S3 (non-pythonic, tsk tsk).\n\nI have yet to find a combination that allows for both KeyboardInterrupts AND progress bars.\n\ns3.Bucket(bucket_name).put_object(Key=dest_path, Body=data) allows KeyboardInterrupt to work, but has no callback function.\n\nThis has the callback, but KeyboardInterrupt doesn't work.\n\ns3.meta.client.upload_file(\n    source_path, bucket_name, dest_path,\n     Callback=progress.update\n)\n\nSo - what's the preferred way of having a callback function and allowing KI to work?\n This also holds for\n\n```\n        from boto3.s3.transfer import S3Transfer\n        transfer = S3Transfer(boto3.client('s3'))\n        transfer.upload_file(source_path, bucket_name, dest_path,\n                             callback=progress.update)\n```\n\nReally annoying. Worked fine with boto2.\n I am able to reproduce this with this snippet:\n\n``` py\nimport threading\n\nimport boto3\nfrom boto3.s3.transfer import S3Transfer\n\nsource_path = 'testfile'\nbucket_name = 'mybucketfoo'\ndest_path = 'blah'\n\n\nclass ProgressPercentage(object):\n    def __init__(self, filename):\n        self._filename = filename\n        self._size = float(os.path.getsize(filename))\n        self._seen_so_far = 0\n        self._lock = threading.Lock()\n    def __call__(self, bytes_amount):\n        # To simplify we'll assume this is hooked up\n        # to a single filename.\n        with self._lock:\n            self._seen_so_far += bytes_amount\n            percentage = (self._seen_so_far / self._size) * 100\n            sys.stdout.write(\n                \"\\r%s  %s / %s  (%.2f%%)\" % (self._filename, self._seen_so_far,\n                                             self._size, percentage))\n            sys.stdout.flush()\n\ntransfer = S3Transfer(boto3.client('s3'))\ntransfer.upload_file(source_path, bucket_name, dest_path,\n                     callback=ProgressPercentage(source_path))\n```\n\nI takes me at least a few Cntrl-C's to cancel it with or without callbacks. How long does it take for your program to exit on a successful Cntrl-C? Also is your progress callbacks similar to mine?\n I am never able to exit on C-C. They stack up, and the program exits AFTER the transfer completes. Which is even more annoying. I am using the 'tqdm' package for progress.\n Thanks. We will look to fixing this.\n Any updates on this?\n Still waiting for a fix on this.\n  The documentation for storing data to S3 with boto3 at http://boto3.readthedocs.org/en/latest/guide/migrations3.html#storing-data says:\n\nStoring data from a file, stream, or string is easy:\n# Boto 3\n\ns3.Object('mybucket', 'hello.txt').put(Body=open('/tmp/hello.txt', 'rb'))\n\nSo I tried using a stream, rather than a file as in the example:\n\ns3 = boto3.resource('s3')\nwith contextlib.closing(requests.get(url, stream=True)) as r:\n    s3.Object(bucket, key).put(Body=r.raw)\n\nIt does not actually work because the library attempts to seek on the stream, which it obviously can't:\n\nTraceback (most recent call last):\n  File \"boto3_put.py\", line 12, in <module>\n    s3.meta.client.put_object(Bucket=bucket, Key=key, Body=r.raw)\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 301, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/lib/python2.7/site-packages/botocore/client.py\", line 381, in _make_api_call\n    request_signer=self._request_signer, context=request_context)\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 241, in emit_until_response\n    responses = self._emit(event_name, kwargs, stop_on_response=True)\n  File \"/usr/lib/python2.7/site-packages/botocore/hooks.py\", line 209, in _emit\n    response = handler(*_kwargs)\n  File \"/usr/lib/python2.7/site-packages/botocore/handlers.py\", line 153, in conditionally_calculate_md5\n    calculate_md5(params, *_kwargs)\n  File \"/usr/lib/python2.7/site-packages/botocore/handlers.py\", line 130, in calculate_md5\n    binary_md5 = _calculate_md5_from_file(body)\n  File \"/usr/lib/python2.7/site-packages/botocore/handlers.py\", line 145, in _calculate_md5_from_file\n    fileobj.seek(start_position)\nio.UnsupportedOperation: seek\n So we do not have the ability to stream from unseekable streams. I am not sure if handling unseekablee streams in PutObject would be something we would want to support. This would be much better to have support for seekable and nonseekable files in the `upload_file` method on the transfer manager: https://github.com/boto/boto3/issues/432.\n\nOne action item we can do though is clean up the error message. Ideally we bubble it up past all of the handlers and would be similar to this logic: https://github.com/boto/botocore/blob/c6996f5bba74895845bca412314f996d94000ad0/botocore/awsrequest.py#L409\n I'm all for clearer error messages, but in this case it was the documentation which stated\n\n\"Storing data from a file, stream, or string is easy\"\n\nIt would be nice as a user if the API accepted a stream, so that I can stream large files from remote servers directly into S3. But if it's necessary to have the entire file in hand before upload to S3, that's workable as well as longer as it's clear that's what's expected.\n I'd second this ticket.\nIn fact, I had written the exact same code as @dadkins , starting from the same doc-based assumption. Having the ability to pipe streams directly into s3 would be really nice, given that we already have the ability to give file handlers as the `Body` argument.\n Just sample code (tested)\n\n```\nwith subprocess.Popen( \"mysqldump -u\"+ dbuser +\" -p\" + dbpass + \" --add-drop-table \" + db + \"|bzip2\", stdout=subprocess.PIPE, shell=True).stdout as dataStream:\n    s3.upload_fileobj(dataStream, config.get('amazon', 'bucket'), \"mysql_\"+db+'_'+date+\".bz2\" )\n```\n\nMay be someone can improve it.\n @kyleknap .. Thanks for clarifying things. But if I use `upload_fileobj()` to upload a stream, do I loose the ability to use server-side encryption ? Any way around this ? Thanks!\n  Hi,\n\nI want to receive the actual NumberOfLaunchConfigurations and the documentacion I found this:\n describe_account_limits()\n\n```\nDescribes the current Auto Scaling resource limits for your AWS account.\n\nFor information about requesting an increase in these limits, see AWS Service Limits in the Amazon Web Services General Reference .\n\nRequest Syntax\n\nresponse = client.describe_account_limits()\n\nReturn type\n    dict\nReturns\n    Response Syntax\n\n    {\n        'MaxNumberOfAutoScalingGroups': 123,\n        'MaxNumberOfLaunchConfigurations': 123,\n        'NumberOfAutoScalingGroups': 123,\n        'NumberOfLaunchConfigurations': 123\n    }\n```\n\nBut when I only received MaxNumberOfAutoScalingGroups and MaxNumberOfLaunchConfigurations.\nMy code:\n1 import boto3\n  2\n  3 conection_lc = boto3.session.Session(region_name = \"eu-west-1\")\n  5 client_launch_configuration = conection_lc.client(\"autoscaling\",\n  6                                                   region_name = \"eu-west-1\")\n  7 response = client_launch_configuration.describe_account_limits()\n  8 print response\nResult:\n{u'MaxNumberOfLaunchConfigurations': 100, 'ResponseMetadata': {'HTTPStatusCode': 200, 'RequestId': '1afc16cb-dacc-11e5-b1cd-cf09bda20fae'}, u'MaxNumberOfAutoScalingGroups': 20}\n\nthanks\n Not sure about this.  When I try this API call, I get all 4 values back.  The next thing to see is if the service is just not returning that data.  In that case, there's not really anything boto3 can do about it since the service isn't returning us that data.  Can you run this code and show us the raw XML response that comes back?\n\n```\nimport boto3\nboto3.set_stream_logger('')\nclient_launch_configuration = conection_lc.client(\"autoscaling\", 'eu-west-1')\nclient_launch_configuration.describe_account_limits()\n```\n I received this:\n\n```\n<ErrorResponse xmlns=\"http://autoscaling.amazonaws.com/doc/2011-01-01/\">\n  <Error>\n    <Type>Sender</Type>\n    <Code>Throttling</Code>\n    <Message>Rate exceeded</Message>\n```\n That error message suggests you're getting throttled.  Boto3 will automatically retry this.\n\nIn this case boto3 should have raised an exception if it wasn't able to be retried.  Could you post the entire debug log contents?  \n yes:\n2016-02-25 20:09:38,787 botocore.credentials [DEBUG] Looking for credentials via: shared-credentials-file\n2016-02-25 20:09:38,788 botocore.credentials [INFO] Found credentials in shared credentials file: ~/.aws/credentials\n2016-02-25 20:09:38,862 botocore.client [DEBUG] Registering retry handlers for service: autoscaling\n2016-02-25 20:09:38,864 botocore.hooks [DEBUG] Event creating-client-class.autoscaling: calling handler <function add_generate_presigned_url at 0x10dd39b18>\n2016-02-25 20:09:39,092 botocore.endpoint [DEBUG] Setting autoscaling timeout as (60, 60)\n2016-02-25 20:09:39,092 botocore.endpoint [DEBUG] Making request for <botocore.model.OperationModel object at 0x10df94b50> (verify_ssl=True) with params: {'body': {'Action': u'DescribeAccountLimits', 'Version': u'2011-01-01'}, 'url': u'https://autoscaling.eu-west-1.amazonaws.com/', 'headers': {'User-Agent': 'Boto3/1.2.1 Python/2.7.10 Darwin/15.3.0 Botocore/1.3.5'}, 'query_string': '', 'url_path': '/', 'method': u'POST'}\n2016-02-25 20:09:39,092 botocore.hooks [DEBUG] Event request-created.autoscaling.DescribeAccountLimits: calling handler <bound method AutoScaling._sign_request of <botocore.client.AutoScaling object at 0x10dfe5410>>\n2016-02-25 20:09:39,093 botocore.auth [DEBUG] Calculating signature using v4 auth.\n2016-02-25 20:09:39,093 botocore.auth [DEBUG] CanonicalRequest:\nPOST\n/\n\nhost:autoscaling.eu-west-1.amazonaws.com\nuser-agent:Boto3/1.2.1 Python/2.7.10 Darwin/15.3.0 Botocore/1.3.5\nx-amz-date:20160225T190939Z\n\nhost;user-agent;x-amz-date\n5b0ecfa48cb918c780cc5e36b65b3f2724bfcba9fe2d0097e86430f063400139\n2016-02-25 20:09:39,093 botocore.auth [DEBUG] StringToSign:\nAWS4-HMAC-SHA256\n20160225T190939Z\n20160225/eu-west-1/autoscaling/aws4_request\n85cd2acd2ab8d18bc985889564c50715e1c86fbc1258e1547d40091f8fa2f0fb\n2016-02-25 20:09:39,093 botocore.auth [DEBUG] Signature:\nd94aee24c6175a4efc5fef861343101dac3fa0af5f54bc37c0cfb5d75afa91ef\n2016-02-25 20:09:39,107 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [POST]>\n2016-02-25 20:09:39,108 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTPS connection (1): autoscaling.eu-west-1.amazonaws.com\n2016-02-25 20:09:39,958 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"POST / HTTP/1.1\" 200 567\n2016-02-25 20:09:39,959 botocore.parsers [DEBUG] Response headers: {'x-amzn-requestid': '52259ab1-dbf3-11e5-b6d7-950543440ae1', 'date': 'Thu, 25 Feb 2016 19:09:40 GMT', 'content-length': '567', 'content-type': 'text/xml'}\n2016-02-25 20:09:39,959 botocore.parsers [DEBUG] Response body:\n<DescribeAccountLimitsResponse xmlns=\"http://autoscaling.amazonaws.com/doc/2011-01-01/\">\n  <DescribeAccountLimitsResult>\n    <NumberOfLaunchConfigurations>57</NumberOfLaunchConfigurations>\n    <MaxNumberOfLaunchConfigurations>100</MaxNumberOfLaunchConfigurations>\n    <NumberOfAutoScalingGroups>11</NumberOfAutoScalingGroups>\n    <MaxNumberOfAutoScalingGroups>20</MaxNumberOfAutoScalingGroups>\n  </DescribeAccountLimitsResult>\n  <ResponseMetadata>\n    <RequestId>52259ab1-dbf3-11e5-b6d7-950543440ae1</RequestId>\n  </ResponseMetadata>\n</DescribeAccountLimitsResponse>\n\n2016-02-25 20:09:39,960 botocore.hooks [DEBUG] Event needs-retry.autoscaling.DescribeAccountLimits: calling handler <botocore.retryhandler.RetryHandler object at 0x10df94410>\n2016-02-25 20:09:39,960 botocore.retryhandler [DEBUG] No retry needed.\n2016-02-25 20:09:39,960 botocore.endpoint [DEBUG] Making request for <botocore.model.OperationModel object at 0x10df94e50> (verify_ssl=True) with params: {'body': {'Action': u'DescribeLaunchConfigurations', 'Version': u'2011-01-01'}, 'url': u'https://autoscaling.eu-west-1.amazonaws.com/', 'headers': {'User-Agent': 'Boto3/1.2.1 Python/2.7.10 Darwin/15.3.0 Botocore/1.3.5'}, 'query_string': '', 'url_path': '/', 'method': u'POST'}\n2016-02-25 20:09:39,961 botocore.hooks [DEBUG] Event request-created.autoscaling.DescribeLaunchConfigurations: calling handler <bound method AutoScaling._sign_request of <botocore.client.AutoScaling object at 0x10dfe5410>>\n2016-02-25 20:09:39,962 botocore.auth [DEBUG] Calculating signature using v4 auth.\n2016-02-25 20:09:39,962 botocore.auth [DEBUG] CanonicalRequest:\nPOST\n/\n\nhost:autoscaling.eu-west-1.amazonaws.com\nuser-agent:Boto3/1.2.1 Python/2.7.10 Darwin/15.3.0 Botocore/1.3.5\nx-amz-date:20160225T190939Z\n\nhost;user-agent;x-amz-date\ne858e902d9287f6cedec21fa27ca23bda00820e3ffa25f3eac1929c4a84f423d\n2016-02-25 20:09:39,962 botocore.auth [DEBUG] StringToSign:\nAWS4-HMAC-SHA256\n20160225T190939Z\n20160225/eu-west-1/autoscaling/aws4_request\n9c63c400c1b856113bc579c9a0a08961c6644628599e9efd363fd9e8eff57197\n2016-02-25 20:09:39,962 botocore.auth [DEBUG] Signature:\n2f5da6262df7ce4f320b0e9c8b6a9cc0486af8b7e338f04a67516f2b021470cb\n2016-02-25 20:09:39,963 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [POST]>\n2016-02-25 20:09:40,188 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"POST / HTTP/1.1\" 200 86390\n2016-02-25 20:09:40,343 botocore.parsers [DEBUG] Response headers: {'x-amzn-requestid': '5233cb0b-dbf3-11e5-91bb-3b1cd709987e', 'date': 'Thu, 25 Feb 2016 19:09:40 GMT', 'content-length': '86390', 'content-type': 'text/xml'}\n Hi, \n\nProblem resolved, I have updated the boto version and XML.\nNow works fine.\n Closed issue. Great to hear that is now working.\n  This was causing the transfer download feature failure when downloading big file from a RequestPayer=requester bucket.\n :shipit:\n  :boat: \n :shipit:\n  Hello,\nI think the documentation about [create_hosted_zone](http://boto3.readthedocs.org/en/latest/reference/services/route53.html#Route53.Client.create_hosted_zone) is wrong, because if I set the attribute `'PrivateZone'`, the request is failing, and according to [AWS API](http://docs.aws.amazon.com/Route53/latest/APIReference/API-create-hosted-zone-private.html) you don't need it.\n## Steps to reproduce\n\nwith `'PrivateZone': True`\n\n``` python\nimport boto3\nsession = boto3.session.Session(profile_name='default')\nroute53 = session.client('route53')\n\nroute53.create_hosted_zone(\n    Name='my-domain',\n    VPC={\n        'VPCRegion': 'my-region',\n        'VPCId': 'my-vpc'\n    },\n    CallerReference='random_string',\n    HostedZoneConfig={\n        'Comment': 'string',\n        'PrivateZone': True\n    }\n)\n```\n\nresponse\n\n``` python\nClientError: An error occurred (InvalidInput) when calling the CreateHostedZone operation:\nInvalid XML; cvc-complex-type.2.4.d: Invalid content was found starting with element 'PrivateZone'. \nNo child element is expected at this point.\n```\n\nwithout 'PrivateZone'\n\n``` python\nroute53.create_hosted_zone(\n    Name='my-domain',\n    VPC={\n        'VPCRegion': 'my-region',\n        'VPCId': 'my-vpc'\n    },\n    CallerReference='random_string',\n    HostedZoneConfig={\n        'Comment': 'string'\n    }\n)\n```\n\nresponse\n\n``` python\n{u'ChangeInfo': {u'Id': '/change/C4PDIAYEQ7D1W',\n  u'Status': 'PENDING',\n  u'SubmittedAt': datetime.datetime(2016, 2, 16, 13, 53, 43, 968000, tzinfo=tzutc())},\n u'HostedZone': {u'CallerReference': 'random_string',\n  u'Config': {u'Comment': 'string', u'PrivateZone': True},\n  u'Id': '[...]'}}\n```\n\nThe same works for a public domain as well\n\n``` python\nroute53.create_hosted_zone(\n    Name='my-domain',\n    CallerReference='random_string1',\n    HostedZoneConfig={\n        'Comment': 'string'\n    }\n)\n```\n\nresponse\n\n``` python\n{u'ChangeInfo': {u'Id': '/change/C3KAEFU2HILHG9',\n  u'Status': 'PENDING',\n  u'SubmittedAt': datetime.datetime(2016, 2, 16, 13, 56, 9, 541000, tzinfo=tzutc())},\n u'DelegationSet': {u'NameServers': ['ns-193.awsdns-24.com',\n   'ns-746.awsdns-29.net',\n   'ns-1158.awsdns-16.org',\n   'ns-2020.awsdns-60.co.uk']},\n u'HostedZone': {u'CallerReference': 'random_string1',\n  u'Config': {u'Comment': 'string', u'PrivateZone': False},\n  u'Id': '[...]'}}\n```\n\nwhile is failing setting `'PrivateZone': False`.\n## Info\n\nBoto version `1.2.3`\nPython version `Python 2.7.11`\n This is definitely a big issue, I'll make sure we follow up with the service team to see what's going on here if our XML looks good. Thanks for reporting, and double thanks for having such great detail! :clap: \n    Need to get the build times down first.\n\nhttps://docs.readthedocs.org/en/latest/yaml-config.html\n :boat: \n  I'm using the following logic to pull content from a list and insert it into DynamoDB\n\n```\ndynamodb = boto3.resource(\"dynamodb\")\nkeys_table = dynamodb.Table(\"my-dynamodb-table\")\n\nwith keys_table.batch_writer() as batch:\n        for key in objects[tmp_id]:\n            batch.put_item(Item={\n                    \"cluster\": cluster,\n                    \"tmp_id\": tmp_id,\n                    \"manifest\": manifest_key,\n                    \"key\": key,\n                    \"timestamp\": timestamp\n            })\n```\n\nIt appears to periodically append more than the 25 item limit to the batch and thus fails with the following error:\n\n```\n  File \"/Library/Python/2.7/site-packages/boto3/dynamodb/table.py\", line 121, in __exit__\n    self._flush()\n  File \"/Library/Python/2.7/site-packages/boto3/dynamodb/table.py\", line 102, in _flush\n    RequestItems={self._table_name: self._items_buffer})\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 310, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 383, in _make_api_call\n    api_params, operation_model, context=request_context)\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 425, in _convert_to_request_dict\n    api_params, operation_model)\n  File \"/Library/Python/2.7/site-packages/botocore/validate.py\", line 273, in serialize_to_request\n    raise ParamValidationError(report=report.generate_report())\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\nInvalid length for parameter RequestItems.my-dynamodb-table, value: 26, valid range: 1-25\n```\n\nPackage version:\n\n```\nPython 2.7.10\nboto3==1.2.2\nbotocore==1.3.12\n```\n I've upgraded to the latest version:\n\n```\nboto3==1.2.4\nbotocore==1.3.28\n```\n\nAnd I'm still seeing the following errors:\n\n```\nTraceback (most recent call last):\n  File \"recreateManifests.py\", line 119, in <module>\n    main()\n  File \"recreateManifests.py\", line 103, in main\n    generateManifest(cluster, gameId)\n  File \"recreateManifests.py\", line 47, in generateManifest\n    pass\n  File \"/Library/Python/2.7/site-packages/boto3/dynamodb/table.py\", line 121, in __exit__\n    self._flush()\n  File \"/Library/Python/2.7/site-packages/boto3/dynamodb/table.py\", line 102, in _flush\n    RequestItems={self._table_name: self._items_buffer})\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 301, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 398, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (ValidationException) when calling the BatchWriteItem operation: 1 validation error detected: Value '{my-dynamodb-table=[com.amazonaws.dynamodb.v20120810.WriteRequest@caad9cb8, com.amazonaws.dynamodb.v20120810.WriteRequest@61e6406e, com.amazonaws.dynamodb.v20120810.WriteRequest@956712cf, com.amazonaws.dynamodb.v20120810.WriteRequest@6a4e6b2c, com.amazonaws.dynamodb.v20120810.WriteRequest@38281ca, com.amazonaws.dynamodb.v20120810.WriteRequest@e54b13b8, com.amazonaws.dynamodb.v20120810.WriteRequest@3ab3e4fa, com.amazonaws.dynamodb.v20120810.WriteRequest@5613be8c, com.amazonaws.dynamodb.v20120810.WriteRequest@88ba82f0, com.amazonaws.dynamodb.v20120810.WriteRequest@6027e6c6, com.amazonaws.dynamodb.v20120810.WriteRequest@92c736b0, com.amazonaws.dynamodb.v20120810.WriteRequest@409cc0a8, com.amazonaws.dynamodb.v20120810.WriteRequest@11446ab, com.amazonaws.dynamodb.v20120810.WriteRequest@5ea5c50a, com.amazonaws.dynamodb.v20120810.WriteRequest@f7f40f90, com.amazonaws.dynamodb.v20120810.WriteRequest@d7f05656, com.amazonaws.dynamodb.v20120810.WriteRequest@2e97b025, com.amazonaws.dynamodb.v20120810.WriteRequest@4a6c5caa, com.amazonaws.dynamodb.v20120810.WriteRequest@7cf4ac5d, com.amazonaws.dynamodb.v20120810.WriteRequest@c3c33e61, com.amazonaws.dynamodb.v20120810.WriteRequest@191f8f13, com.amazonaws.dynamodb.v20120810.WriteRequest@84b3ad6, com.amazonaws.dynamodb.v20120810.WriteRequest@f98fa632, com.amazonaws.dynamodb.v20120810.WriteRequest@a3266b3a, com.amazonaws.dynamodb.v20120810.WriteRequest@3bda38b, com.amazonaws.dynamodb.v20120810.WriteRequest@bb0327eb, com.amazonaws.dynamodb.v20120810.WriteRequest@e2367e92, com.amazonaws.dynamodb.v20120810.WriteRequest@997fb396, com.amazonaws.dynamodb.v20120810.WriteRequest@2ffe803b, com.amazonaws.dynamodb.v20120810.WriteRequest@b1d3791, com.amazonaws.dynamodb.v20120810.WriteRequest@6ba46ad3, com.amazonaws.dynamodb.v20120810.WriteRequest@d2004cd3, com.amazonaws.dynamodb.v20120810.WriteRequest@a48308aa, com.amazonaws.dynamodb.v20120810.WriteRequest@5f38c976, com.amazonaws.dynamodb.v20120810.WriteRequest@b4c4adb5, com.amazonaws.dynamodb.v20120810.WriteRequest@f7b627cf, com.amazonaws.dynamodb.v20120810.WriteRequest@8fb1f4e6, com.amazonaws.dynamodb.v20120810.WriteRequest@e66b8dd6, com.amazonaws.dynamodb.v20120810.WriteRequest@51cb5b06, com.amazonaws.dynamodb.v20120810.WriteRequest@a7271c9e, com.amazonaws.dynamodb.v20120810.WriteRequest@36ea63f1, com.amazonaws.dynamodb.v20120810.WriteRequest@c53592cc, com.amazonaws.dynamodb.v20120810.WriteRequest@dfb3fef8, com.amazonaws.dynamodb.v20120810.WriteRequest@1cc789ac, com.amazonaws.dynamodb.v20120810.WriteRequest@5176a361, com.amazonaws.dynamodb.v20120810.WriteRequest@e1f3e634, com.amazonaws.dynamodb.v20120810.WriteRequest@eecdfac2, com.amazonaws.dynamodb.v20120810.WriteRequest@3e0c3b05, com.amazonaws.dynamodb.v20120810.WriteRequest@bda16038, com.amazonaws.dynamodb.v20120810.WriteRequest@75957bb0, com.amazonaws.dynamodb.v20120810.WriteRequest@b0a01bde, com.amazonaws.dynamodb.v20120810.WriteRequest@4ce07193, com.amazonaws.dynamodb.v20120810.WriteRequest@545aef1e, com.amazonaws.dynamodb.v20120810.WriteRequest@dd80befd, com.amazonaws.dynamodb.v20120810.WriteRequest@329b99c1, com.amazonaws.dynamodb.v20120810.WriteRequest@780a9950, com.amazonaws.dynamodb.v20120810.WriteRequest@de1817ae, com.amazonaws.dynamodb.v20120810.WriteRequest@a28fc592, com.amazonaws.dynamodb.v20120810.WriteRequest@baede6, com.amazonaws.dynamodb.v20120810.WriteRequest@46e27b32, com.amazonaws.dynamodb.v20120810.WriteRequest@80241ac1, com.amazonaws.dynamodb.v20120810.WriteRequest@2bf904cb, com.amazonaws.dynamodb.v20120810.WriteRequest@b6c5bf38, com.amazonaws.dynamodb.v20120810.WriteRequest@f1499ce6, com.amazonaws.dynamodb.v20120810.WriteRequest@5753b553, com.amazonaws.dynamodb.v20120810.WriteRequest@512a9368, com.amazonaws.dynamodb.v20120810.WriteRequest@4115d89e, com.amazonaws.dynamodb.v20120810.WriteRequest@f3e13134, com.amazonaws.dynamodb.v20120810.WriteRequest@50776ec8, com.amazonaws.dynamodb.v20120810.WriteRequest@41d202e, com.amazonaws.dynamodb.v20120810.WriteRequest@583d9132, com.amazonaws.dynamodb.v20120810.WriteRequest@7a2eb5a1, com.amazonaws.dynamodb.v20120810.WriteRequest@137da8bb, com.amazonaws.dynamodb.v20120810.WriteRequest@e7040a26, com.amazonaws.dynamodb.v20120810.WriteRequest@4bd068ef, com.amazonaws.dynamodb.v20120810.WriteRequest@bf96f14f, com.amazonaws.dynamodb.v20120810.WriteRequest@57e51a3d, com.amazonaws.dynamodb.v20120810.WriteRequest@3ee19d15, com.amazonaws.dynamodb.v20120810.WriteRequest@9ea416bd, com.amazonaws.dynamodb.v20120810.WriteRequest@46ad556c, com.amazonaws.dynamodb.v20120810.WriteRequest@a6735644, com.amazonaws.dynamodb.v20120810.WriteRequest@c9707595, com.amazonaws.dynamodb.v20120810.WriteRequest@fbf398db, com.amazonaws.dynamodb.v20120810.WriteRequest@3faa6017, com.amazonaws.dynamodb.v20120810.WriteRequest@a6634f68, com.amazonaws.dynamodb.v20120810.WriteRequest@79624e50, com.amazonaws.dynamodb.v20120810.WriteRequest@84821619, com.amazonaws.dynamodb.v20120810.WriteRequest@2d2e84d1, com.amazonaws.dynamodb.v20120810.WriteRequest@9350a7d7, com.amazonaws.dynamodb.v20120810.WriteRequest@3f6321dd, com.amazonaws.dynamodb.v20120810.WriteRequest@9ea8a76c, com.amazonaws.dynamodb.v20120810.WriteRequest@958d00fc, com.amazonaws.dynamodb.v20120810.WriteRequest@826ec192, com.amazonaws.dynamodb.v20120810.WriteRequest@3eadbdea, com.amazonaws.dynamodb.v20120810.WriteRequest@93b81725, com.amazonaws.dynamodb.v20120810.WriteRequest@1c5da0f0, com.amazonaws.dynamodb.v20120810.WriteRequest@72462bc0, com.amazonaws.dynamodb.v20120810.WriteRequest@bd234df5, com.amazonaws.dynamodb.v20120810.WriteRequest@e39af82a, com.amazonaws.dynamodb.v20120810.WriteRequest@ca83fa6c]}' at 'requestItems' failed to satisfy constraint: Map value must satisfy constraint: [Member must have length less than or equal to 25, Member must have length greater than or equal to 1]\n```\n Thanks for the report! We'll take a look.\n I don't know if that might be included in the fix but I faced this issue when working a heavily loaded environment. In addition sending more than 25 operations in the batch I also noticed that at some point DynamoDB was refusing the batch with `ProvisionedThroughputExceededException`. \n\nWhile this might be the responsibility of the caller during `put_item` it might be tricky for the call to deal with the errors during the final flush which is performed in `__exit__`\n\nDoes it makes sense to catch the `ClientError` with the error code `ProvisionedThroughputExceededException` and consider it as _no element has been flushed_?\n  :shipit:\n  If any errors happen while processing IO (including\nerrors opening the destination file), we should shutdown\nthe IO queue.\n\nAs part of this change I added an integration test.  This also\ndemonstrated an issue with python3 retrying socket.errors because\nthey're now aliased to OSErrors.  I updated the compat module\nto give us the appropriate \"something went wrong on the socket\"\nexception based on python version.\n\nFixes #367.\n\ncc @kyleknap @mtdowling @rayluo @JordonPhillips \n Nice! I wonder if 2to3 does this conversion? Either way: :boat: \n  cc @kyleknap @mtdowling @rayluo @JordonPhillips \n  :ship:\n  :boat: \n  Hey, I'm trying to send a JSON message to a SNS topic that several SQS queues subscribe to. However,  it keeps failing to parse my simple JSON message, and reverts to the default value:\n\n```\n    mess = {'default': 'default', 'this': 'that'}\n    jmess = json.JSONEncoder().encode(mess)\n\n    response = self.boto_client.publish(\n        TopicArn=self.TopicArn,\n        MessageStructure='json',\n        Message=jmess\n    )\n```\n\nI have also tried with json.dumps() to no avail. It is not throwing an exception, but simply adding a tag to the message _jsonparsefailure. I am using version 1.2.3. This seems very trivial, I keep thinking I must be making a mistake, but I've tried about every JSON format I know, and I keep getting the same result. Any help would be great, Thanks\n  https://boto3.readthedocs.org/en/latest/reference/services/ec2.html#EC2.Client.describe_nat_gateways\n\nMost other functions use \"Filters\", while this function seems to use \"Filter\".\n  Attempting to run ECS.client.create_service() without a load balancer.  Per the documentation, loadBalancers parameter is not required:\nhttps://boto3.readthedocs.org/en/latest/reference/services/ecs.html#ECS.Client.create_service\n\nWhen executed via boto3, I'm seeing the following error:\n\n```\n(Error code 400)\n  File \"/usr/local/lib/python3.5/site-packages/botocore/client.py\", line 310, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python3.5/site-packages/botocore/client.py\", line 407, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\n  botocore.exceptions.ClientError: An error occurred (InvalidParameterException) when calling the CreateService operation: A role was passed, but no load balancers were present.\n```\n\nThe aws_cli tool does not require the loadBalancers parameter.\n Removing `role` fixes the issue.  It appears that there is some confusion on whether adding a `role` param means that `loadBalancers` param is required:\n\nhttps://boto3.readthedocs.org/en/latest/reference/services/ecs.html#ECS.Client.create_service\nrole:...\"This parameter is only required if you are using a load balancer with your service.\"\n\nAs stated before, `role` can be used with the aws_cli tool without requiring `loadBalancers`.\n Looking at my history, I stand corrected, my **working** cli line did not have role included:\n_aws ecs create-service --cluster default --service-name clouddb --task-definition clouddb:1 --desired-count 1_  \n\nI would say that the requirement left room for interpretation:\nhttps://boto3.readthedocs.org/en/latest/reference/services/ecs.html#ECS.Client.create_service\n**Role:**_...\"This parameter is only required if you are using a load balancer with your service.\"_\n\nPer the above line, the role parameter is required if using a load balancer; but lacks explicit information that role will be rejected if no load balancer param exist.  The requirement for the loadBalancers parameter also lacks any information that the role param is required if using a load balancer.  Over-all, these are just recommendations for the documentation.\n\nUse Case: Hind-sight, I don't like my use case, but I was going to use AWS to save the role info, that will be used at a later date when adding an ELB.  I now understand that it's a requirement to add the role param when adding the load balancers param.\n Have exactly the same issue with a Terraform template:  \r\n \r\n**resource \"aws_ecs_service\" \"sample\" {  \r\n  name            = \"sample-service-${var.env_name}\"  \r\n  cluster         = \"${aws_ecs_cluster.sample_cluster.id}\"  \r\n  task_definition = \"${aws_ecs_task_definition.sample3_task.arn}\"  \r\n  desired_count   = 2  \r\n  iam_role        = \"${aws_iam_role.sample_ecs_role.name}\"**\r\n\r\nRemoving **iam_role** fixes this, if you don't want to associate ELB/ALB with containers.   I got the exact same issue in similar terraform template, but we do need iam role to be set. \r\n\r\nThe problem has been reported at https://github.com/hashicorp/terraform/issues/12130\r\n\r\n### UPDATES:\r\n\r\nThe iam role should be assigned in resource `aws_ecs_task_definition` with argument `task_role_arn`. So if no load balancer is required, no need set `iam_role` in resource `aws_ecs_service`\r\n\r\n  :boat: \n  The Tag resource was incorrectly modeled such that it is not a collection on an Instance. As a result, there is no way to batch delete tags from an Instance resource. This adds that functionality in, in a way that won't break on future EC2 resource changes.\n\nIn the long term there are plans to codify SDK specific customizations while maintaining a canonically correct resource model, but that will sometime in the future as part of a different story.\n\nFixes #381\n\ncc @kyleknap @jamesls @mtdowling @rayluo \n Amazing.\n Code wise, the actual delete_tags method added looks good.  I would like to see a functional test added (possibly with the new stubbing stuff?).  So pending:\n- adding tests\n- working with @kyleknap to work out how to best handle documentation for this\n\nthis gets a :shipit: from me.\n Changes: Added lots of tests, changed the docs to be lazy-loaded (thus removing the extra event), moved custom methods into the Action section as they should be, fixed some old tests\n Abstracted out a `CustomModeledAction` which allows me to pass in an emitter when registering the event, and makes it easier for such things to be added in the future.\n Updates:\nAdded the ability to inject kwargs into a lazy call  so that it can be used. \nGet the resource name from the event name, and remove it from the event.\n  Following the Quickstart in the docs and am unable to authenticate using my ~/.aws/credentials files (aws cli commands work OK):\n\n``` python\n>>> import boto3\n>>> \n>>> for bucket in boto3.resource('s3').buckets.all():\n...     print(bucket.name)\n... \nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Python/2.7/site-packages/boto3/resources/collection.py\", line 83, in __iter__\n    for page in self.pages():\n  File \"/Library/Python/2.7/site-packages/boto3/resources/collection.py\", line 161, in pages\n    pages = [getattr(client, self._py_operation_name)(**params)]\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 310, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/Library/Python/2.7/site-packages/botocore/client.py\", line 396, in _make_api_call\n    operation_model, request_dict)\n  File \"/Library/Python/2.7/site-packages/botocore/endpoint.py\", line 111, in make_request\n    return self._send_request(request_dict, operation_model)\n  File \"/Library/Python/2.7/site-packages/botocore/endpoint.py\", line 136, in _send_request\n    request = self.create_request(request_dict, operation_model)\n  File \"/Library/Python/2.7/site-packages/botocore/endpoint.py\", line 120, in create_request\n    operation_name=operation_model.name)\n  File \"/Library/Python/2.7/site-packages/botocore/hooks.py\", line 226, in emit\n    return self._emit(event_name, kwargs)\n  File \"/Library/Python/2.7/site-packages/botocore/hooks.py\", line 209, in _emit\n    response = handler(**kwargs)\n  File \"/Library/Python/2.7/site-packages/botocore/signers.py\", line 84, in handler\n    return self.sign(operation_name, request)\n  File \"/Library/Python/2.7/site-packages/botocore/signers.py\", line 119, in sign\n    signer.add_auth(request=request)\n  File \"/Library/Python/2.7/site-packages/botocore/auth.py\", line 621, in add_auth\n    raise NoCredentialsError\nbotocore.exceptions.NoCredentialsError: Unable to locate credentials\n```\n @kyleknap - Here is the output from configure list:\n\n```\n$ aws configure list\n      Name                    Value             Type    Location\n      ----                    -----             ----    --------\n   profile                <not set>             None    None\naccess_key                <not set>             None    None\nsecret_key                <not set>             None    None\n    region                us-east-1      config-file    ~/.aws/config\n```\n\nThis belies the configuration files that `aws configure` wrote in the ~/.aws folder it created, which include a named profile and its access/secret keys.  Apparently I have a botched aws config?\n\nAs far as I know, I'm using boto3 (OS X El Capitan).  I had boto installed then uninstalled it and installed boto3, so presumably pip did the right thing:\n\n```\nsudo pip uninstall boto\nsudo pip install boto3\nsudo pip install boto3 --ignore-installed six\n```\n OK, I re-ran `aws configure` and copy/pasted the values from the files that were in ~/.aws (config, credentials), and now I've got: \n\n```\n$ aws configure list\n      Name                    Value             Type    Location\n      ----                    -----             ----    --------\n   profile                <not set>             None    None\naccess_key     ****************EQPQ shared-credentials-file    \nsecret_key     ****************J7U6 shared-credentials-file    \n    region                us-east-1      config-file    ~/.aws/config\n```\n\nRetrying the boto3 quickstart gives me a list of buckets.  Thanks!  Case closed.\n I have a similar issue, but I'm able to print bucket names from a python/django shell.  Running 'aws configure list' looks good when I do it, but my code fails when trying to use methods like 'generate_presigned_url' in my views.  Any suggestions?\n I have a similar issue too. The default \"profile\" for boto to use is an IAM profile.\n\nNow I need to add an additional (non-default) profile. However boto3/botocore only pickup the `~.aws/credentials` if both a `default` and `other_profile` are defined. \n\nHow do I not specify a `default` profile, and have an IAM profile be default, while also specifying other `other_profile...` in the `credentials` file?\n I have the same situation on `boto3` with my `[default]` profile in the config and credentials file being a IAM user.\nAWS CLI works fine, but the `boto3` py API in python 2.7.3 (`boto3-1.4.1-py2.py3-none-any.whl`) does not and seems to not read the config and credentials which is stored at the default locations.\n Scratch my previous comment. I was working in a stale terminal from which I installed AWS in.\nNew terminal, and all is good.\n I am having similar issue. my aws configure list command shows everything correct but on aws ec2 instance on the very first line python script boto3.client('cloudformation') failes with No Region Error.\r\nTurn out when running the pythin with sudo user gives this but with sudo works fines Could be an issue with adminuser vice default.\n\nMy credentials file has two sections:\n\n[adminuser]\n\n...\n\n[default]\n\n...\n\n________________________________\nFrom: rest17 <notifications@github.com>\nSent: Sunday, March 19, 2017 5:59:17 AM\nTo: boto/boto3\nCc: Subscribed\nSubject: Re: [boto/boto3] Boto does not recognize ~.aws/credentials (#458)\n\n\nI am having similar issue. my aws configure list command shows everything correct but on aws ec2 instance on the very first line python script boto3.client('cloudformation') failes with No Region Error.\nTurn out when running the pythin with sudo user gives this but with sudo works fines\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub<https://github.com/boto/boto3/issues/458#issuecomment-287596605>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ACKXSwC33qsY6RCJ7LviFgS6DuRBrMVFks5rnMQ1gaJpZM4HMqUf>.\n weird in my case, \r\n\r\nHad\r\n\r\n```python\r\nboto3.setup_default_session(profile_name=\"aws-federated\")                                        \r\nboto3.setup_default_session(region_name='us-west-2')  \r\n```\r\n\r\nhad to remove region part and it works\r\n```python\r\nboto3.setup_default_session(profile_name=\"aws-federated\")                                        \r\n##boto3.setup_default_session(region_name='us-west-2')  \r\n```\r\n    Using Boto3, 1.2.3, while using the api client.create_export_task giving a syntax error\n\nclient = boto3.client('logs')\n\nresponse = client.create_export_task(logGroupName=loggroupname, to=1453788879000, destination=s3_bucket_name, from=1453788879000)\n                                                 ^\nSyntaxError: invalid syntax\nSyntax error point to \"from\". Not sure what I am missing\n\nThanks\n Thanks.\n\nAs a workaround, this works \n\n  args_config = {}\n  args_config[\"logGroupName\"] = \"loggroupname\"\n  args_config[\"from\"] = 1453788879000\n  args_config[\"to\"] = 1453831534000\n  args_config[\"destination\"] = \"s3_bucket_name\"\n  args_config[\"destinationPrefix\"] = \"loggroupname\"\n\n  response = client.create_export_task(**args_config)\n  One comment, but otherwise, :ship: \n :shipit: \n  For some reason I'm getting a ResourceWarning about a unclosed socket, even when I'm specifically closing the socket myself. See testcase below:\n\n``` sh\npython3 -munittest discover\n```\n\n``` python3\nimport sys\nimport boto3\nimport unittest\n\nBUCKET = ''\nKEY = ''\n\n\ndef give_it_to_me():\n    client = boto3.client('s3')\n    obj = client.get_object(Bucket=BUCKET, Key=KEY)\n    try:\n        yield from iter(lambda: obj['Body'].read(1024), b'')\n    finally:\n        print('Im closing it!', file=sys.stderr, flush=True)\n        obj['Body'].close()\n\n\nclass TestSomeShit(unittest.TestCase):\n    def test_it(self):\n        res = give_it_to_me()\n        for chunk in res:\n            pass\n        print('Done', file=sys.stderr, flush=True)\n```\n\nFill in any `BUCKET` and `KEY` to see the problem. Attaching my output below:\n\n``` text\nIm closing it!\ntest.py:22: ResourceWarning: unclosed <ssl.SSLSocket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('...', 55498), raddr=('...', 443)>\n  for chunk in res:\nDone\n.\n----------------------------------------------------------------------\nRan 1 test in 0.696s\n\nOK\n```\n Should probably mention that I'm running python 3.5 as well, 3.5.1 to be specific.\n I'm seeing this as well. Enabling `ResourceWarning` yields a lot of complaints related to unclosed sockets. Also running Python 3.5.1.\n I have also run into this since upgrading to python 3.5. From what I can tell it's something to with connection pooling [0]. I have found a way to \"fix\" the warnings, although I'm not sure it's the correct way to do so: in botocore/awsrequest.py, explicitly set the `Connection: close` header in the `AWSRequest` class:\n\n``` #!diff\n--- awsrequest.py.old   2016-04-05 15:18:56.931892889 -0600\n+++ awsrequest.py   2016-04-05 14:56:17.422863960 -0600\n@@ -340,6 +340,7 @@ class AWSRequest(models.RequestEncodingM\n             del kwargs['auth_path']\n         models.Request.__init__(self, *args, **kwargs)\n         headers = HTTPHeaders()\n+        headers['Connection'] = 'close'\n         if self.headers is not None:\n             for key, value in self.headers.items():\n                 headers[key] = value\n```\n\n[0] https://github.com/kennethreitz/requests/issues/2963#issuecomment-169631513\n I am also experiencing issues with python 3.5. Had to go back to 2.7. \n\nMake sure to use the following command to install AWS cli:\n\n`pip install awscli --ignore-installed six`\n Pinging this thread: is there a solution merged somewhere, please? +1, also on python 3.5 -- any update? +1, seeing on python 3.6 +1, seeing on python 3.6.1 +1 Still an issue. The fix given by @Naddiseo works. +1, seeing on python 3.6.1 python 3.6.1 I'm testing cognito. +1 boto3=1.4.4, python=3.6.1 +1\r\n```\r\nboto3==1.4.4\r\nbotocore==1.5.38\r\nPython 3.5.2\r\n``` For future readers... I did a little research, and also clicked the link in the above discussion given by @Naddiseo and according to someone working on Requests lib:\r\n\r\n> [You don't have to. The warning is just that: a warning. No error occurs when you see it, and it is not an indication of the program doing the wrong thing. It's entirely expected behaviour, and this is working as designed. However, if you're concerned about them, you may call close.](https://github.com/requests/requests/issues/3912)\r\n\r\nand\r\n\r\n> [The reason the resource warnings are back is because we're much better about not returning partially complete connections to the connection pool. The lack of warnings in 2.5.4 was actually symptomatic of a problem: weirdly, the warnings are an indication that everything is working as intended.](https://github.com/requests/requests/issues/2963#issuecomment-169631513)\r\n\r\nSo looks like not an issue. Why is it coming up though? It looks like Python is supposed to suppress such warnings by default. Seems like somewhere around 3.2 (?) they changed the behavior of `unittest` to override the default behavior on warnings. You can suppress the warnings following [this SO](https://stackoverflow.com/questions/26563711/disabling-python-3-2-resourcewarning). This makes it clear why, if you google around for this issue, it seems to occur a lot in the context of \"I did a unit test and now this!\".\r\n\r\n\r\n(* edit, added credit where credit is due) > You don't have to. The warning is just that: a warning. No error occurs when you see it, and it is not an indication of the program doing the wrong thing. It's entirely expected behaviour, and this is working as designed. However, if you're concerned about them, you may call close.\r\n\r\nI find this advice contrary to Python's typical approach to resource handling. Python encourages deterministic resource handling. For example, the stdlib produces warnings when files are mismanaged in a non-deterministic way to help guide developers. Developers _should_ take action on the warnings produced by stdlib. See the following Python bug where core developers discuss warnings during destructors:\r\n\r\nhttps://bugs.python.org/issue28867\r\n\r\nAdditionally, Python [docs](https://docs.python.org/3/reference/datamodel.html#object.__del__) warn against relying on `__del__` for resource management:\r\n\r\n>  It is not guaranteed that `__del__()` methods are called for objects that still exist when the interpreter exits.\r\n\r\nAnd, exceptions occurring during `__del__` are ignored and can't be handled:\r\n\r\n> Due to the precarious circumstances under which __del__() methods are invoked, exceptions that occur during their execution are ignored, and a warning is printed to sys.stderr instead.\r\n\r\nI run all my tests and environments with warnings enabled to help catch _real_ bugs and upgrade paths. If this warning really should be ignored as suggested here, then maybe it shouldn't be logged. As it is now, people are taking this advice of not calling close and this results in lots of (ignorable?) noise in my output. Another work around based upon https://github.com/boto/botocore/pull/1231 is using the event system:\r\n\r\n```python\r\ndef http_closer(http_response, **kwargs):\r\n    if http_response:\r\n        http_response.close()\r\n\r\ns3 = boto3.resource('s3', aws_access_key_id=\"XXX\", aws_secret_access_key=\"YYY\")\r\nevents = s3.meta.client.meta.events\r\n# For HeadBucket for example, 'after-call.s3.*' could also work\r\nevents.register(\"after-call.s3.HeadBucket\", http_closer)\r\n\r\ntry:\r\n    s3.meta.client.head_bucket(Bucket=\"mybucket\")\r\nexcept botocore.exceptions.ClientError as e:\r\n    print(\"Could not find bucket\", e)\r\n\r\n\r\n```  for example I have 150 asgs\n\nwhen I run client.describe_auto_scaling_groups without any options \nit will only return 100 asgs back. \n\nso I have to run a loop with MaxRecords=100 and if there a  NextToken filed then run it again with that token \nI don't see this problem with AWS cli\n Hello, \r\n\r\nI have a similar problem but I am using the paginator. I am using the paginator to go download files from a large s3 and for some reason it prints out all the keys if I only do that, but it cuts off if I try to download. Any idea?  There seems to be nothing to prevent S3Transfer to upload any object that supports read, seek, tell and size, so I would like to suggest an abstraction that receives a file object.\ne.g. the existing code would defer to new one that is more generic\n\n``` python\ndef upload_file(self, filename, bucket, key,\n                    callback=None, extra_args=None):\n    self.upload_file_object(open(filename, 'r'), bucket, key,\n                    callback=callback, extra_args=extra_args)\n```\n I agree that it would be good to support file-like objects, though it wouldn't be as simple as a single function alias. We'll look into adding it to our backlog, thanks for reporting!\n It's not too difficult, I think. I'm working on a pull request for this:\nhttps://github.com/boto/boto3/compare/develop...grischa:s3-upload-file-objects?expand=1\nIt's not done, just posting, to let you know that I'm working on it.\n\nI cannot see a way for both file-like-object abstractions and OSUtil abstractions to share much code, unfortunately. Is there an important reason for OSUtil, or did someone just think Python doesn't provide enough OS agnosticism?\nIn particular the fact that `OSUtil.open_file_chunk_reader` is abstracted makes things difficult.\n We should also add support for nonseekable streams. As brought up in this issue: https://github.com/boto/boto3/issues/518\n @grischa Why would you seek to 0? Shouldn't I be able to pass a file-like object that I have already seeked to the point that I want to start from? That seems like more expected default behavior when I look at models like the read method of file-like objects.\n Good point, @wt.\nHowever, I haven't been able to do any further work on this. Using boto2 instead was the easier option for my purposes for now.\nIf I were to start again, I would not even calculate the file size though, just do multipart by default when no size is given and increase chunk size gradually, as total file size and number of chunks increases. I got the idea from a suggestion on StackOverflow and it makes it possible to write a stream-based file-like-object to S3. If the file object had been sought to some non-zero point already, it would just use that, I guess.\n +1 for me on this feature, it's annoying have to write stream to disk when ideally I'd like to pass it straight thru to S3\n btw can also be achieved by replacing the OSUtils class like so:\n\n``` python\nclass ChainedFileOSUtils(object):\n    def get_file_size(self, chained_file):\n        assert isinstance(chained_file, ChainedFile)\n        return chained_file.getsize()\n\n    def open_file_chunk_reader(self, chained_file, start_byte, chunk_size, callback):\n        assert isinstance(chained_file, ChainedFile)\n\n        # we need a cloned chained_file for each chunked reader as each will change the underlying offsets independently\n        file_size = self.get_file_size(chained_file)\n        return boto3.s3.transfer.ReadFileChunk(chained_file.clone(), start_byte, chunk_size, file_size, callback, True)\n\n    def open(self, filename, mode):\n        assert False\n\nclient = boto3.client('s3', region_name=region_name, **connectOpts)\nconfig = TransferConfig(multipart_chunksize=chunkSize)\ntransfer = boto3.s3.transfer.S3Transfer(client=client, config=config, osutil=ChainedFileOSUtils())\ntransfer.upload_file(chained_file, bucket, key)\n```\n @thehesiod thanks for that example - I was able to use that along with GzipFile and BytesIO to put together a nice pipeline that streams files from a legacy service and compresses and uploads them to S3 without having to write to disk. Even got it all running within Lambda.\n @brandond there was a slight issue in my example, I've already updated it.  In open_file_chunk_reader you need to clone the file object \"chained_file\" since each copy will modify the underlying offsets independently.  For other readers replace \"chained_file\" with a io.RawIOBase subclass.\n @thehesiod thanks, I'll use that. The files I've been handling so far are all under the 8MB default chunk size, so I haven't run into any issues with multiple concurrent reads to the buffer.\n I have a query. \n\nSuppose client is uploading a huge file to a file server.\nNow on file server if I try to use the file object from http request and simultaneously upload it to s3 without writing it to disk, will at any point I run out of memory ? Because everything will be in memory.\n\nIf I write the file to disk in chunks as its being uploaded and then upload the file to s3 by reading it in chunks or directly use s3cmd (which does that internally) i will not hit above issue.\n\nWhich is the ideal approach for my use case ?\n @Sidhesh-telsiz That entirely depends on how much memory you have available and how you are buffering the file. My approach was to stream the response body into an BytesIO buffer, and then pass this into S3Transfer using a derivative of ChainedFileOSUtils to process the buffer. This is pretty memory-intensive though, as you end up with at least two copies of the entire body in memory - the original copy, plus one more for each instance of ReadFileChunk.\n\nA less memory-intensive but more complicated approach might be to write yourself a HTTP IO wrapper that used byte serving (RFC 7233 Range Requests) to read the individual chunks on-demand. You still have to buffer entire chunks though, as various bits of the code expect to be able to seek around within the handle.\n @kyleknap does the implementation take into consideration memory concern I mentioned above ?\nIs there any kind of chunking done ?\n Thanks @kyleknap \nWill take a look at the pointer and use it.\n Hi Kyle,\nDocumentation for this api says the following:-\n\n# Upload a file-like object to bucket-name at key-name\n\n**with open(\"tmp.txt\", \"rb\") as f**:\n    s3.upload_fileobj(f, \"bucket-name\", \"key-name\")\n\nHowever if the file is not located on the disk then using **with** throws an exception.\nError: [Errno 2] No such file or directory:\n\nIn my case I upload a file from local m/c to server and\nwhile the file is in memory I start using s3.upload_fileobj.\n\nIf I directly use the file object which I get from request.FILES.items() dictionary it works fine.\nFile object for me is of type InMemoryUploadedFile.\n\nI think **with** expects the file to be locally available and would throw exception otherwise.\nIs my understanding correct.\n @kyleknap \nThanks for the clarification. Its working without using 'with'.\nWill continue to use that.\n @kyleknap \nDoes this api also takes care of matching the md5 of the file being transferred once the file is transferred just to make sure the file was not altered during the transfer and is valid.\n  :boat: \n  Pulls in #407 and adds tests.\n\ncc @kyleknap @rayluo @mtdowling @JordonPhillips \n  :shipit:\n  :boat: \n :ship: after adding the blank line in the documentation (otherwise doc parser will generate an error).\n :shipit: btw it might be worth adding something like doc8 to our travis CI runs.  I've started using that in some of my projects and it's been working well so far.\n  \u2026d with the region.  Fixes #406\n I'll add a test and update the PR.\n Tests added in https://github.com/boto/boto3/pull/414.  Tracking progress there.\n  If I create a session like this:\n\n```\n>>> import boto3\n>>> session = boto3.Session(profile_name='foo', region_name='us-west-2')\n```\n\nthe `session` object has a `profile_name` attribute:\n\n```\n>>> session.profile_name\n'us-west-2'\n>>>\n```\n\nBut there is no public attribute to find the `region_name` associated with the session.  Both `profile_name` and `region_name` are stored in the config so it seems like there should be a property for `region_name` just like the one for `profile_name`.\n Fixed via https://github.com/boto/boto3/pull/407 and #414\n  While packaging boto3 I came across this test failure and was wondering if it's an actual failure or something I've overlooked:\n\n```\nn======================================================================\nERROR: test_resource_lazy_loads_properties (tests.unit.resources.test_factory.TestResourceFactory)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/site-packages/mock/mock.py\", line 1305, in patched\n    return func(*args, **keywargs)\n  File \"/var/tmp/portage/dev-python/boto3-1.2.2/work/boto3-1.2.2/tests/unit/resources/test_factory.py\", line 414, in test_resource_lazy_loads_properties\n    action.assert_called_once()\n  File \"/usr/lib64/python2.7/site-packages/mock/mock.py\", line 721, in __getattr__\n    raise AttributeError(name)\nAttributeError: assert_called_once\n-------------------- >> begin captured logging << --------------------\nboto3.resources.factory: DEBUG: Loading test:test\nboto3.resources.model: DEBUG: Renaming test attribute url\n--------------------- >> end captured logging << ---------------------\n\n----------------------------------------------------------------------\nRan 753 tests in 300.569s\n\nFAILED (SKIP=1, errors=1)\n```\n Yep, pinned the version and that cleared it up.  Can we transform this into a request for the new version to be used and the pin removed?\n This was fixed as a side effect of https://github.com/boto/boto3/pull/344, so boto3 should be good to work with the latest version of mock.  I'll send a PR shortly that pulls in the latest version of mock, but for now boto3 tests work with either version so you should be good to go.\n\nI'm also working on the related boto/botocore#738 issue now.\n Reopening, this is actually not entirely fixed.  There's another failing test, this time using an erroneous `assert_has_call_with`: https://github.com/boto/boto3/blob/develop/tests/unit/docs/test_service.py#L123\n\nI'll send a PR that fixes that as well as bumps the mock dependency before closing this issue out.\n  Hi all, \n\n`CloudSearchDomain.Client`'s `search()` method takes a keyword argument named `return`, which can cause an unexpected `SyntaxError`. Unpacking a dict of keyword arguments is a perfectly fine workaround, but it would be nice if it were documented [here](https://boto3.readthedocs.org/en/latest/reference/services/cloudsearchdomain.html#CloudSearchDomain.Client.search). (The \"Request Syntax\" section of that documentation also shows an example that throws a `SyntaxError`). Here's a quick console example: \n\n``` python\nIn [2]: from search_service import cloudsearch_domain\n\nIn [3]: cloudsearch_domain\nOut[3]: <botocore.client.CloudSearchDomain at 0x7fbe04726588>\n\nIn [4]: cloudsearch_domain.search(query='my great query')\nOut[4]:\n{'ResponseMetadata': {'HTTPStatusCode': 200},\n 'hits': {'found': 0, 'hit': [], 'start': 0},\n 'status': {'rid': 'tunPuJkqtgkKjJEj', 'timems': 42}}\n\nIn [5]: cloudsearch_domain.search(query='my great query', return='_score')\n  File \"<ipython-input-5-3e9f4f094be9>\", line 1\n    cloudsearch_domain.search(query='my great query', return='_score')\n                                                           ^\nSyntaxError: invalid syntax\n\n\nIn [6]: cloudsearch_domain.search(**{'query': 'my great query', 'return': '_score'})\nOut[6]:\n{'ResponseMetadata': {'HTTPStatusCode': 200},\n 'hits': {'found': 0, 'hit': [], 'start': 0},\n 'status': {'rid': '/qnRuJkquAkKjJEj', 'timems': 1}}\n```\n Just going through open issues. I think that the better solution would be to add an alias for it as described in: https://github.com/boto/botocore/issues/772 especially since this is not the only operation where we have ran into this problem. Closing this issue in favor of linked issue.\n  I have versioned bucket and need to copy set of object versions into another (non versioned) bucket.\n\nThere are some `SomeResource.copy_from` and `Client.copy_object` methods. \n\nHowever, I was unable to find how to specify source object version_id. The only place, where I have found `CopySourceVersionId` was response, but no place to put it into request.\n\n**Is there any way to copy object version into another bucket without downloading it?**\n\nWith boto it was possible (but I my source bucket is having dots in names and this is not working with old `boto` any more.\n I have found the solution.\n\nSearching for similar problems I have found issue boto/botocore#509 I have found undocumented method to specify version id in `botocore`.\n\nTesting it on `boto3` I have found, it works there.\n\nTo name specific object version as SourceObject, one has to use following pattern: `\"/{bucket}/{key}?versionId={id}\"`.\n\nNow I am able to copy from specific version using boto3.\n\nI still consider this an issue, as current version of documentation does not explain it well (it omits the version and does not explain the need to use the leading slash).\n\nExisting specification for [Object.copy_from](https://boto3.readthedocs.org/en/latest/reference/services/s3.html?#S3.Object.copy_from) reads for the `SourceCopy` parameter:\n\n> CopySource (string) -- [REQUIRED] The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded.\n\nI would propose to modify the text to clarify:\n- pattern for the `CopySource` (either `\"/{bucket}/{key}\"` or `\"/{bucket}/{key}?versionId={id}\"`\n- explain the url-encoded requirement - it is not clear, if it requires whole string to be url-encoded, or only the `versionId` or somehow differently. In my case, I did not url-encode anything.\n Thanks very much for finding the solution and sharing it! We will definitely take a look into this and see how we can improve the documentation.\n @rayluo Looking forward to that.\nYesterday I was trying to make copy of an object, having strange characters in the path (`bucket-name/test/&?:/feed.txt`) and did not succeed. It is either due to my misunderstanding or there is a bug.\n\nIf your updated doc explains this, it would be great. Otherwise we shall create separate issue for this particular corner case.\n  This PR adds the ability to inject examples into service documentation at doc build-time. Each service can have a file stored under `boto3/examples/<service-name>.rst`. If found, the contents of this file will be injected into each service's documentation output at the bottom in an \"Examples\" section.\n\n@kyleknap \n Could I get a screenshot of what this looks like?\n ![image](https://cloud.githubusercontent.com/assets/190930/11757779/13f920b4-a019-11e5-9f8a-ce27ce192953.png)\n Feedback incorporated. I just need to add a local TOC to the examples file.\n I've added a built-in local table of contents to the injected examples section. This relies on placing example titles as `^` subsections. Here's a screenshot.\n\n![image](https://cloud.githubusercontent.com/assets/190930/11789813/567cea5c-a24d-11e5-9811-be1086649e2c.png)\n :ship:\n :boat: \n  :boat: \n The latest change looks good to me. :+1:\n  There's a common pattern in python where you want to provide all parameters as a value or None, and expect that the receiving end treats \"None\" as a non-value.\n\nThe pattern simplifies and shortens code. Unfortunately it doesn't seem possible to do so with boto3:\n\n```\nec2 = boto3.resource('ec2', args.region)\nvolume = ec2.create_volume(\n    Size=int(args.size),\n    SnapshotId=args.snapshot_id or None,\n    AvailabilityZone=instance.placement['AvailabilityZone'],\n    VolumeType=args.volume_type,\n    Iops=args.iops or None,\n    Encrypted=bool(args.encrypted),\n    KmsKeyId=args.encrypted or None)\n```\n\n```\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\nInvalid type for parameter Iops, value: None, type: <type 'NoneType'>, valid types: <type 'int'>, <type 'long'>\nInvalid type for parameter KmsKeyId, value: None, type: <type 'NoneType'>, valid types: <type 'basestring'>\nInvalid type for parameter SnapshotId, value: None, type: <type 'NoneType'>, valid types: <type 'basestring'>\n```\n\nInstead, one has to carefully build a dict with the arguments using one `if` per argument:\n\n```\nopt = {}\nif args.iops:\n    opt['Iops'] = args.iops\nif args.kms_key_id:\n    opt['KmsKeyId'] = args.kms_key_id\n# ...\n```\n I think this is a dup of #331, which was rejected by @rayluo.\n (For the record, I am in favor of the change proposed here. I think it makes working with optional parameters easier, and matches the pattern used in other libraries, including the original boto.)\n Wanted to chime in here and indicate my support of this change as well.\n\nI'm in the process of porting some saltstack states to boto3 and this issue is definitely a huge pain. Would not be a big deal if you only cared about a few of the possible parameters, but adds quite a bit of code to deal with support for None on the optionals.\n\nWould make more sense to me to force the corner cases mentioned by @rayluo in #331 to jump through some hoops rather than every common use case.\n  :ship:\n  The 1.2.2 wheel on PyPI is a bit busted because of a discrepancy between the futures requirement spec in setup.py and setup.cfg. See https://bitbucket.org/pypa/wheel/src/90957a3a0a0dd1cb00343938c4f5721d9e3d81a1/CHANGES.txt?at=default&fileviewer=file-view-default#CHANGES.txt-152:\n\n> requires-dist from setup.cfg overwrites any requirements from setup.py\n> Care must be taken that the requirements are the same in both cases,\n> or just always install from wheel.\n Temporary fix for my problem at https://github.com/mapbox/mapbox-cli-py/issues/22 is `--no-binary boto3`.\n  Is there a mechanism for updating the metadata on objects larger than 5GB without really doing the copy like the copy_object() trick mentioned in issue #389? I've tried using the S3 Client object create_multipart_upload(), but upload_part() blocks and really does the copy. I'm trying to see if the S3 Resource object has the same behavior, but I get this error:\n\nmp = s3resource.MultipartUpload(bucket,'foo.bam','id')\npart1 = mp.Part('1')\npart1.copy_from(CopySource=source,CopySourceRange=\"bytes=0-9\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/factory.py\", line 455, in do_action\n    response = action(self, _args, *_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/action.py\", line 79, in **call**\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 310, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 382, in _make_api_call\n    api_params, operation_model)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 423, in _convert_to_request_dict\n    api_params, operation_model)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/validate.py\", line 273, in serialize_to_request\n    raise ParamValidationError(report=report.generate_report())\nbotocore.exceptions.ParamValidationError: Parameter validation failed:\nInvalid type for parameter PartNumber, value: 1, type: <type 'str'>, valid types: <type 'int'>, <type 'long'>\n\nIt seems like Part(part_number) should take an integer instead of a string and there is a casting issue later on or I'm making a silly mistake. Either way, any advice would be appreciated. Would using the CopySourceIfNoneMatch parameter allow me to skip the copy and complete the upload?\n This does help. This is exactly what I am trying to do. The catch is if the file is over 5GB, it seems I get an error on \n\n```\nresponse = part_copy.copy_from(CopySource='mybucketfoo/bar')\n```\n\nand have to do a loop over this instead\n\n```\nresponse = part_copy.copy_from(CopySource='mybucketfoo/bar', CopySourceRange='bytes=0-5368709119')\n```\n\nBut, I can make this work to complete the operation. What I'm curious about is if an option like CopySourceIfNoneMatch can be used so S3 will skip the copy. So far every permutation I've tried just raises an error. The idea is I want to incorporate this into a Lambda function, so I'm trying to get around the variable copy time. Are there any flags I can set to get around the lag of actually copying the data?\n  In botot 2.38.0, the mturk module's API version is out-of-date:\n`APIVersion = '2012-03-25'`\nAnd there are some functions missing, like [`GetBonusPayments`](http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_GetBonusPaymentsOperation.html).\n\nIt would be great if boto3 will still have a mturk module, with some new functions added. Thanks for the great work!\n  Also refactor 2 existing callback test cases in order to group them together\n :boat: after `hasattr` goes away\n Changed.\n  I'm following this guide: http://boto3.readthedocs.org/en/latest/guide/collections.html#chainability\n\nIt appears that a Collection cannot be filtered like a CollectionManager, even though it has a `filter` method. \n\n```\n>>> evpc.vpc.instances\nec2.Vpc.instancesCollectionManager(ec2.Vpc(id='vpc-xxxxxx57'), ec2.Instance)\n\n>>> evpc.vpc.instances.filter()\nec2.Vpc.instancesCollection(ec2.Vpc(id='vpc-xxxxxx57'), ec2.Instance)\n\n>>> evpc.vpc.instances.filter().filter(Filter=name_tag_filter('*web*'))\nTraceback (most recent call last):\n  File \"<input>\", line 1, in <module>\n  File \"/Users/rballestrini/env/lib/python2.7/site-packages/boto3/resources/collection.py\", line 462, in filter\n    return CollectionManager.filter(self, **kwargs)\nTypeError: unbound method filter() must be called with CollectionManager instance as first argument (got ec2.Vpc.\ninstancesCollection instance instead)\n```\n  This bug appears in 1.2.2 version.\n\n> pip freeze | grep boto3\n> boto3==1.2.2\n> \n> python\n> \n> > > import boto3\n> > > s3 = boto3.resource('s3')\n> > > object_summary = s3.ObjectSummary('bucket_name','key')\n> > > object_summary.size\n> > > Traceback (most recent call last):\n> > > File \"\", line 1, in \n> > > File \"/usr/local/lib/python2.7/site-packages/boto3/resources/factory.py\", line 212, in property_loader\n> > > '{0} has no load method'.format(self.class.name))\n> > > boto3.exceptions.ResourceLoadException: s3.ObjectSummary has no load method\n The same as this one: https://github.com/boto/boto3/issues/57\n  When I try to do an empty query:\n\n```\ndynamodb = boto3.resource(\"dynamodb\", endpoint_url=\"http://localhost:7000\")\ntable = dynamodb.Table(table_name)\nresponse = table.query(\n    )\n```\n\nI get an error stating that the KeyConditionExpression parameter needs to be passed:\n\n```\nbotocore.exceptions.ClientError: An error occurred (ValidationException) when calling the Query operation: Either the KeyConditions or KeyConditionExpression parameter must be specified in the request.\n```\n\nHowever in the <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Query.html\">Amazon Docs</a> it says the KeyConditionExpression is not a required parameter.\n\nI'm trying to query my entire table for all the rows and running a scan is not feasible in my scenario since I need the response to be automatically sorted. Any suggestions?\n According to the docs it says neither are required parameters so I'm not sure as to why it's making me provide one of them.\n\nMy table is based on a Partition Key which contains the item's category, and then a Sort Key containing the item's unique ID. I attempted to make a query with `KeyConditionExpression=Key('id').ge(0)` which should theoretically return all the items back since they all have ID's greater than 0, however then I get a Key Schema error. It seems like KeyConditionExpression only works for the Partition Key?\n Wow I don't think any amount rereading it would have allowed me to interpret it like that, so many thanks for the explanation.\n\nAs for the comparison rules, that I definitely overlooked! Now I see the fine print:\n`You must specify the partition key name and value as an equality condition.`\n\nWhich explains why I couldn't just do `KeyConditionExpression=Key('category').between('a', 'z')` as it throws a ValidationException.\n  Hi,\n\nI noticed a formatting issue here:\n\n\"https://boto3.readthedocs.org/en/latest/reference/customizations/s3.html#ref-s3transfer-usage\"\n\nThe progress percentage example needs some attention.  Also, how many indents for `sys.stdout.flush()` in that example?\n\nThanks,\n\nDave P.\n  Hi,\n\nIs there a method for modifying the metadata of an S3 object?\nThis is clearly possible, as it's functionality that the AWS Console exposes, and Boto 2 has the tantalisingly named  \"set_remote_metadata\" method, but I can't find anything in the Boto3 docs.\n\nTa\n\nMatt\n Apparently the way to do this is to use copy_object(), using the same value for source and destination.\n\nSince this isn't exactly obvious,  maybe a convenience method for metadata update would be possible?\n Can someone please show how to do this? I'm struggling to find any docs on copy operations.\n\nThis is as far as I've got in trying to update the metadata on an object:\n\n``` python\nimport boto3                                \n\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('something.something.com')\nobject = list(bucket.objects.iterator())[0]\nobject.meta.data.update({'Content-Type': 'application/pdf'})\nobject.copy_from(CopySource='something.something.com/' + object.key)\n```\n\nThis results in:\n\n```\nClientError: An error occurred (InvalidRequest) when calling the CopyObject operation: This copy request is illegal because it is trying to copy an object to itself without changing the object's metadata, storage class, website redirect location or encryption attributes.\n```\n\n@mj-harvey, I don't see `copy_object` anywhere in the source. Any tips?\n This worked for me:\n\n``` python\nimport boto3\nclient = boto3.client('s3')\nbucket = \"bucket_name\"\nkey = \"file_key\"\nk = client.head_object(Bucket = bucket, Key = key)\nm = k[\"Metadata\"]\nm[\"new_metadata\"] = \"value\"\nclient.copy_object(Bucket = bucket, Key = key, CopySource = bucket + '/' + key, Metadata = m, MetadataDirective='REPLACE')\n```\n I think it's very important to point out in the docs that MetadataDirective='REPLACE' must be specified for the ContentType argument to be considered when you want to copy an object while changing its Content-Type header,\nThanks\n Hi there,\n\nI was having trouble with these permissions and I thought I would give a concrete solution example of uploading a file with `boto3` (version 1.4.0), and the associated metadata:\n\n```\nimport boto3 # 1.4\nimport botocore\n\ns3 = boto3.resource('s3')\n\ns3.meta.client.upload_file('file.txt', 'my_bucket', 's3-file.txt',\\\n        ExtraArgs={\n            \"Metadata\": {\n                \"mode\": \"33204\",\n                \"uid\": \"1000\",\n                \"gid\": \"1000\",\n                },\n            },)\n```\n\nHope this helps!\n\n(See also https://github.com/s3fs-fuse/s3fs-fuse/issues/333 for changing the metadata with `s3fs`)\n Does the metadata update do a copy of the object even if we do a copy of the same object? It seems that when I update the metadata of a large file it takes more time The documentation seems to indicate it is possible to update the metadata on a key http://boto3.readthedocs.io/en/latest/guide/migrations3.html#key-metadata but doing this removes the object content I'm affected by the same problem @maelp said. Once we try to update the metadata it gets removed. :( @timduly4  I think this worked for me but I'm not sure how to access the custom metadata after I've added it. Do you have that info? @polinabee it looks like using the `get_object()` method from the `S3.Client` class returns a dictionary containing the Metdata:\r\n\r\nhttp://boto3.readthedocs.io/en/latest/reference/services/s3.html#S3.Client.get_object @timduly4 thanks, i ended up finding it. \r\n` object = s3.Object('bucket-name','filepath')`\r\n   `print object.metadata['customtag']`  Hey there, so more growing pains from switching from boto.\n\nWhen iterating over a bunch of AMIs, I have some logic in there that does this:\n\n``` python\n    name = ''\n    tags = {}\n    #so it turns out that if a resource has no tags, it's not even an empty list, but the tags property is \"None\"\n    #Which means if you do this, you get a TypeError: 'NoneType' object is not iterable\n    for tag in ami.tags:\n        if tag['Key'] == 'Name':\n            name = tag['Value']\n        tags[tag['Key']] = tag['Value']\n\n```\n\nBecause I can't just reference tags like a dict like I can in boto (but that's a different story).\n\nBut if the AMI has no tags, I get\n\n```\nTypeError: 'NoneType' object is not iterable\n```\n\nSo in boto3, please _at least_ return an empty list for <someresource>.tags, rather than making me surround this logic in _yet another layer_ of conditional logic that checks to see if there even are any tags.\n Thanks, will follow in #264.\n  When I run this command, my instance runs for a second and then immediately shuts down:\n\n```\nclient.request_spot_instances(\n                SpotPrice= '0.65',\n                InstanceCount=1,\n                Type='one-time',\n                LaunchSpecification={\n                    'ImageId': CustomAMI,\n                    'InstanceType': 'm4.10xlarge',\n                    'SecurityGroupIds': [SecurityGroup],\n                    'IamInstanceProfile': {\n                        'Arn': Arn\n                    },\n                    'KeyName': Keyname,\n                    'SubnetId': CustomSubnet,\n                    'BlockDeviceMappings': [{\n                        'DeviceName': '/dev/sda1',\n                        'Ebs':{\n                            'VolumeSize': 100\n                        }\n                    }]\n                }\n            )\n```\n\nHowever when I run this cli command, it works and the instance starts with no issues:\n\n```\naws ec2 request-spot-instances --spot-price \"0.65\" --instance-count 1 --type \"one-time\" --launch-specification '{\"ImageId\":CustomAMI,\"KeyName\":Keyname,\"InstanceType\":\"m4.10xlarge\",\"SubnetId\":SubnetId,\"IamInstanceProfile\": {\"Arn\": Arn}, \"SecurityGroupIds\":[\"sg-e02fed84\"],\"BlockDeviceMappings\":[{\"DeviceName\": \"/dev/sda1\",\"Ebs\":{\"VolumeSize\":100}}]}'\n```\n\nThis behavior only exists when requesting an m4.10xlarge with a custom AMI.  When spinning up a micro instance with ubuntu everything works fine\n Turns out it was an issue with my custom ami id.  Apologies\n  So in boto there was instance.add_tag() and instance.remove_tag().\n\nIn boto3 there is instance.create_tags() but no corresponding delete_tag()s.\n\nthe client resource has delete_tags but the method should exist for the instance object.  \n\nDiscussion?\n Thanks, looking forward to it.\n you delete tag in boto3 by setting a tag with a value of None\n I'm not able to set the Value key to None. I'm getting a type error. Any other way to remove a tag?\n @mlapida You just omit Value\n Could you guys give a quick code example?\n Fantastic!  Can you please link to documentation to show how it works now?\n Here's the [doc section](http://boto3.readthedocs.org/en/latest/reference/services/ec2.html#EC2.Instance.delete_tags).\n\n``` python\nimport boto3\n\nec2 = boto3.client('ec2')\ninstance = ec2.Instance('id')\n\n# Delete the tag 'foo' if it has value 'bar'\ninstance.delete_tags(Tags=[{\"Key\": \"foo\", \"Value\": \"bar\"}])\n\n# Delete the tag 'baz' if it exists\ninstance.delete_tags(Tags=[{\"Key\": \"baz\"}])\n\n# Delete all tags\ninstance.delete_tags()\n```\n Awesome.  You guys are :interrobang::heavy_division_sign::curly_loop::zap: good.\n This is dandy, but some other resources are missing `delete_tags()`, too. `RouteTable` would be one of them. Should I open a separate issue for it?\r\nping @JordonPhillips   I create bucket policy for after 1 day data move s3 to Glacier. \nin my bucket has more than 100K objects.\nHow can i restore Glacier object to S3? and what is most efficient way to download all object in given folder(directly glacier or move glacier data to s3 then download).\n\nIn the S3 Restoring Objects document only give Java and .NET example (http://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html). Is there is method in boto3 please explain how to restore S3 object. \n\n```\n        buckt_ob = self.s3.Bucket('mybucket')\n        for obj in buckt_ob.objects.filter(Prefix = 'folder'):\n            storage_class = obj.storage_class\n            restore = obj.restore\n\n```\n\nThis code what i try but there is no such obj.restore\n\nafter restore complete how can i get notification like all folder is available for download\n Thanks for your complete description with example.\nIn your above 3 suggestion are good  enough for restore object.\nin mean time please add some example to documentation\n\nif there is method like s3.object.download.force().\nthat method will do \n1) if object in s3 then object directly download\n2) if object in glacier then restore object(keep in s3 until file complete the download) and download\n\nthat kind of method hide all low level client call and that will easy to use and understand\n\nbut i don't have clear idea is possible or not with current boto3 \n Hai kyleknap,\r\n\r\nI am creating a PHP based web application using Amazon's S3 and glacier services.Now I want to give my site users a feature that they can choose any file and make it archive (means move file from S3 to Glacier) and unarchive (means move file from Glacier to S3). Can you provide an exple demonstrating this actions or any api's for doing this\r\nThanks in advance..  Had this automation working for a quite a bit on a Ubuntu LTS 14.04 using boto3 (as well as some boto).  However starting today( havn't provisioned any environments in a week or so), am getting this now:\n\n```\nCreating environment...\nTraceback (most recent call last):\n  File \"cli.py\", line 455, in <module>\n    SUCCESS, MSG = main()\n  File \"cli.py\", line 449, in main\n    return create_environment(cli_args)\n  File \"cli.py\", line 427, in create_environment\n    async=cli_args['async']\n  File \"/opt/provisioning/provision/environment.py\", line 83, in provision_via_cloudformation\n    path_to_template\n  File \"/opt/provisioning/provision/environment.py\", line 53, in upload_to_s3\n    **{'env': self.env, 'node': self.node}\n  File \"/opt/provisioning/provision/s3.py\", line 31, in upload_all_bytes\n    resp = s3_object.put(Body=file_as_bytes, ACL=acl)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/boto3/resources/factory.py\", line 455, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/boto3/resources/action.py\", line 79, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/client.py\", line 310, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/client.py\", line 384, in _make_api_call\n    operation_model, request_dict)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/endpoint.py\", line 111, in make_request\n    return self._send_request(request_dict, operation_model)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/endpoint.py\", line 140, in _send_request\n    success_response, exception):\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/endpoint.py\", line 213, in _needs_retry\n    caught_exception=caught_exception)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/hooks.py\", line 226, in emit\n    return self._emit(event_name, kwargs)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/hooks.py\", line 209, in _emit\n    response = handler(**kwargs)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/retryhandler.py\", line 183, in __call__\n    if self._checker(attempts, response, caught_exception):\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/retryhandler.py\", line 250, in __call__\n    caught_exception)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/retryhandler.py\", line 273, in _should_retry\n    return self._checker(attempt_number, response, caught_exception)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/retryhandler.py\", line 313, in __call__\n    caught_exception)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/retryhandler.py\", line 222, in __call__\n    return self._check_caught_exception(attempt_number, caught_exception)\n  File \"/usr/local/lib/python2.7.10/lib/python2.7/site-packages/botocore/retryhandler.py\", line 355, in _check_caught_exception\n    raise caught_exception\nbotocore.vendored.requests.exceptions.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:590)\n```\n\nThanks\n It looks like you're hitting an S3 endpoint, and you're request is probably being retried. Which S3 endpoint are you hitting? What version of botocore are you using?\n\nJust for the process of elimination to find root cause, have you tried using a more up to date CA bundle? You can use a custom CA bundle by specifying the path to a CA bundle in the `AWS_CA_BUNDLE` environment variable.\n I am getting this too on my machine, boto 2 works and aws cli, but boto3 gives \n\n```\nbotocore.vendored.requests.exceptions.SSLError: [Errno 1] _ssl.c:510: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\n```\n\nwith boto\n\n```\nimport boto\ns3 = boto.connect_s3()\nprint [b.name for b in s3.get_all_buckets()]\n```\n\nwith boto3\n\n```\nimport boto3\ns3 = boto3.resource('s3')\nfor b in s3.buckets.all():\n    print b.name\n```\n\nI have updated the CA certs as well with\n\n```\nsudo update-ca-certificates \n```\n in boto3 endpoint url\n\n```\nboto3.Session().client('s3').bcc.meta.endpoint_url\n>>> u'https://s3-eu-west-1.amazonaws.com'\n```\n\nhumm is this about using non us region?\n....\nnope it brakes with us-east-1 too\n Just a quick thought. Would it be the same issue as this one (https://github.com/aws/aws-cli/issues/1545#issuecomment-148209743)?\n Brill guys It was certify OpenSSL issue, It was odd that the CLI worked when boto3 did not.\n\nAlso How is it that a package which is not a dependency of boto3 can break boto3? I guess certify should depend against the installed version of openssl if it breakes on old versions, but that is not an issue you guys can deal with.\n\nYou can either downgrade certify or upgrade openssl to fix this\n\nhttp://community.linuxmint.com/tutorial/view/1906\n  Can we get either a function/integ test added that verifies batch resource actions serialize to the expected requests?  Either:\n- Given a sample resource model with a batch action defined, verify the appropriate params for the corresponding client calls\n- Pick an existing batch action in a resource model and verify the call actually works.\n\nI'm mainly interested in having tests cover these cases if some of the internals get refactored.\n :shipit:  Looks good.\n  In my bucket has big data (more than 1TB), some of data store in Glacier\nI want to create data summary static. So I need to get Bucket storage size in S3 only, Glacier only, s3 + glacier, directory size\n\ni try to use http://boto3.readthedocs.org/en/latest/reference/services/s3.html#S3.Client.list_objects\nwith bellow code but that method list only 1000 keys maximally \n\n```\n    allObj = client.list_objects(Bucket='mybucket' )\n    listk = allObj['Contents']\n```\n\nso please suggest better method/service for calculate size of all object\n And if you still want the direct way, you should be able to penetrate the 1000 keys maximum limit by using Boto3's [collection feature](http://boto3.readthedocs.org/en/latest/reference/services/s3.html#S3.Bucket.objects), which automatically does the pagination for you.\n\nAll these information should be enough to close this issue now.\n  Not a fan of having the future dep called out twice.  Can we just fix our tox.ini to install/run the tests the same way we do for travis CI?\n It caught my attention because I remember we were actually looking to upgrade future due to https://github.com/boto/boto3/issues/278\n You could also look at https://github.com/boto/botocore/pull/701 for tox unification ideas.\n :shipit:  I would still prefer if it were possible to use `deps` or some other tox functionality to not have to run the install script everytime (even if it is a 5 second noop), but if it's not possible, let's go with this.\n  Hi,\n   I am using Boto3 to interact with a Eucalyptus cloud.  Is there a way to do the equivalent of:\n\neuca-run-instances --addressing private ....\n\nfrom a Boto script?  Basically I want no public IPs assigned when i spin up an ec2 instance, but this is a Eucalyptus cloud, non VPC.\n\nThanks\n Ok thanks. So far everything else has worked with no errors. I'll see if I can figure out what the euca tools are doing.\n\n> On Nov 6, 2015, at 6:29 PM, Kyle Knapp notifications@github.com wrote:\n> \n> So boto3 does not have official support for Eucalyptus. Some operations may work because Eucalyptus has similar APIs to AWS, but nothing is guaranteed.\n> \n> Unfortunately, I am not super familiar with the Eucalyptus API. So I am not exactly sure how the Eucalyptus cli command converts to a boto3 call. Would it be possible to get a log of what that Euclayptus cli is sending over the wire? I may be able to convert it to a boto3 call.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n Hello, I'm interested in this as well. Here's some debug output from the euca-run-instances command:\n\n```\n2015-11-06 22:08:21,546 DEBUG   EC2 request method: POST\n2015-11-06 22:08:21,546 DEBUG   EC2 request url: xxx\n2015-11-06 22:08:21,547 DEBUG   EC2 request header: Content-Length: 208\n2015-11-06 22:08:21,547 DEBUG   EC2 request header: Content-Type: application/x-www-form-urlencoded\n2015-11-06 22:08:21,547 DEBUG   EC2 request header: User-Agent: euca2ools/3.2.1 (CPython 2.7.9; Linux 3.16.0-4-amd64; x86_64)requestbuilder/0.3.5 requests/2.7.0\n2015-11-06 22:08:21,547 DEBUG   EC2 request header: X-Amz-Date: 20151107T030821Z\n2015-11-06 22:08:21,547 DEBUG   EC2 request data:   Action: RunInstances\n2015-11-06 22:08:21,547 DEBUG   EC2 request data:   AddressingType: private\n2015-11-06 22:08:21,547 DEBUG   EC2 request data:   ImageId: emi-xxx\n2015-11-06 22:08:21,547 DEBUG   EC2 request data:   InstanceType: m1.small\n2015-11-06 22:08:21,547 DEBUG   EC2 request data:   MaxCount: 1\n2015-11-06 22:08:21,547 DEBUG   EC2 request data:   MinCount: 1\n2015-11-06 22:08:21,548 DEBUG   EC2 request data: Placement.AvailabilityZone: myaz\n2015-11-06 22:08:21,548 DEBUG   EC2 request data:   SecurityGroup.1: test\n2015-11-06 22:08:21,548 DEBUG   EC2 request data:   Version: 2014-06-15\n```\n\nLooks like the eucalyptus specific parameter is \"AddressingType: private\".  I'd be happy to provide any more debugging info. \n\nThanks in advance for checking this out. \n Thanks Andrew, yeah thats what we see.\n I don't think there's anything we can do on our end.  Comparing the API docs for ec2's RunInstances  (http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html), I can see that `AddressingType` is not one of the parameters.  The way you'd do this with EC2 would be to provide a `NetworkInterfaces` argument that had `AssociatePublicIpAddress` set to `False`.\n\nI'd see if Eucalyptus supports this.\n  Trying to run `tox` on a clean checkout fails due to `futures` not being required in `requirements.txt`. As far as I can tell, this was broken by c5d62b567536b5b41a3a225c6ab0eaf800c2d93c, but the CI isn't catching it because the CI runs tests differently (i.e., doesn't use tox).\n\n```\n$ tox\npy26 create: /home/jon/dev/pkgs/python-boto3/src/boto3/.tox/py26\nERROR: InterpreterNotFound: python2.6\npy27 installed: -e git://github.com/boto/botocore.git@a908e35f8ddc77a9aaa0e02e8d37226ccdcc29eb#egg=botocore-develop,docutils==0.12,-e git://github.com/boto/jmespath.git@31ec38d5b2a24352a22f083429d77574f81360e0#egg=jmespath-develop,mock==1.0.1,nose==1.3.3,python-dateutil==2.4.2,six==1.10.0,wheel==0.24.0\npy27 runtests: PYTHONHASHSEED='1871902561'\npy27 runtests: commands[0] | nosetests tests/unit\n....................................................................................................................................................................S........................................................................................................................................EE.........................E...\n======================================================================\nERROR: Failure: ImportError (No module named concurrent)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/.tox/py27/lib/python2.7/site-packages/nose/loader.py\", line 414, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/.tox/py27/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/.tox/py27/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/tests/unit/s3/test_inject.py\", line 18, in <module>\n    from boto3.s3 import inject\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/boto3/s3/inject.py\", line 13, in <module>\n    from boto3.s3.transfer import S3Transfer\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/boto3/s3/transfer.py\", line 135, in <module>\n    from concurrent import futures\nImportError: No module named concurrent\n\n======================================================================\nERROR: Failure: ImportError (No module named concurrent)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/.tox/py27/lib/python2.7/site-packages/nose/loader.py\", line 414, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/.tox/py27/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/.tox/py27/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/tests/unit/s3/test_transfer.py\", line 22, in <module>\n    from concurrent import futures\nImportError: No module named concurrent\n\n======================================================================\nERROR: test_import_module (tests.unit.test_utils.TestUtils)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/tests/unit/test_utils.py\", line 35, in test_import_module\n    module = utils.import_module('boto3.s3.transfer')\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/boto3/utils.py\", line 22, in import_module\n    __import__(name)\n  File \"/home/jon/dev/pkgs/python-boto3/src/boto3/boto3/s3/transfer.py\", line 135, in <module>\n    from concurrent import futures\nImportError: No module named concurrent\n\n----------------------------------------------------------------------\nRan 332 tests in 57.114s\n\nFAILED (SKIP=1, errors=3)\nERROR: InvocationError: '/home/jon/dev/pkgs/python-boto3/src/boto3/.tox/py27/bin/nosetests tests/unit'\n```\n  Closing out since the docs have been changed significantly since then. If we have something specific we want to do we can open another issue.  Like the `upload_file()` and `download_file()` methods provided by S3Transfer, this provides `copy_file()` methods for copying from one S3 object to another. This handles parallel multipart uploads like `upload_file()` for fast copies of large files.\n#348\n Thanks for taking a look. It's basically a copy/paste of MultipartUploader using `upload_part_copy` instead of `upload_part`. I tested it on our scratch bucket vs awscli and it seems to be doing the right thing.\n Any updates here? It's been 8 months.\n +1, it would be very nice to have high level S3 PUT COPY and multipart PUT COPY support.\n  The S3 transfer module provides convenient methods to upload and download files, but it doesn't provide a way to copy files between buckets. That would be really helpful as it has all the nice multipart and multithreaded support to make the copies fast.\n PR ready in #349. I believe this provides all the parts necessary for a `copy_file()` method analogous to `upload_file()`.\n  Im trying to create a new security group, using this code ... \n\n```\ndefault_vpc_instance = ec2_resource.Vpc(default_vpc_id)\nnew_security_group = default_vpc_instance.create_security_group(\n    Description=rule_set[rule]['description'],\n    GroupName=rule)\n```\n\nbased on the documentation example ...\n\n```\nsecurity_group = vpc.create_security_group(\n    DryRun=True|False,\n    GroupName='string',\n    Description='string',\n)\n```\n\nlocated here ... \nhttps://boto3.readthedocs.org/en/latest/reference/services/ec2.html?highlight=region#EC2.Vpc.create_security_group\n\nUpon execution I get a client error suggesting that the request needs a parameter of 'GroupDescription' ...\n\n```\nTraceback (most recent call last):\n  File \"configure.py\", line 63, in <module>\n    new_security_group = default_vpc_instance.create_security_group(Description=rule_set[rule]['description'], GroupName=rule)\n  File \"/usr/local/lib/python2.7/site-packages/boto3/resources/factory.py\", line 394, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/boto3/resources/action.py\", line 77, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 310, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 395, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (MissingParameter) when calling the CreateSecurityGroup operation: The request must contain the parameter GroupDescription\n```\n\nAttempts to use 'GroupDescription' in place of 'Description' result in another error ...\n\n```\nMissing required parameter in input: \"Description\"\nUnknown parameter in input: \"GroupDescription\", must be one of: DryRun, GroupName, Description, VpcId\n```\n\nAny help would be most appreciated.\n Closing inactive issue.\n I ran into this and the fix for me was changing from single quotes to double quotes FYI\n  There was a previous issue that briefly discussed this, but was resolved.  am trying to unzip and transfer files between two S3 buckets using lambda. The issue is that these are bulk loaded files and are rather large, some can get up to 15GB. Right now I have to write everything into memory and so the function will fail, has there been any additions for streaming that could help fix this? The other idea I had was having the ability to attach a temporary EBS volume or along those lines to work as a temporary fix, but unclear if this is possible. \n\n```\nimport json\nimport urllib\nimport boto3\nfrom boto3.s3.transfer import S3Transfer\nfrom zipfile import ZipFile as zip\n\n\nprint('Loading function')\n\ns3 = boto3.client('s3')\ntransfer = S3Transfer(s3)\ndump_bucket = ''\n\ndef lambda_handler(event, context):\n    print(\"Received event: \" + json.dumps(event, indent=2))\n\n    # Get the object from the event and show its content type\n    bucket = event['Records'][0]['s3']['bucket']['name']\n    key = urllib.unquote_plus(event['Records'][0]['s3']['object']['key']).decode('utf8')\n    try:\n        response = s3.get_object(Bucket=bucket, Key=key)\n\n        s3.download_file(bucket, key, '/tmp/file.zip')\n        zippedfile = zip('/tmp/file.zip')\n        namelist = zippedfile.namelist()\n\n        for filename in namelist:\n            data = zfile.read(filename)\n            f = open('/tmp/' + str(filename), 'wb')\n            f.write(data)\n            f.close()\n\n        transfer.upload_file('/tmp/' + str(filename), dump_bucket, namelist[0])\n    except Exception as e:\n        print(e)\n        print('Error getting object {} from bucket {}. Make sure they exist and your bucket is in the same region as this function.'.format(key, bucket))\n        raise e\n```\n Yeah I ended up just using a temporary ec2 instead of all through lambda as there was no way to get around the disk space or memory issues.\n  In [this commit](https://github.com/boto/boto3/commit/872f68b057d2f79df1cca38ce908b8c5bd65fdcb), the definition of `|Coverage|` was removed, but the reference remained in `README.rst`.\n   I see, I'll try to get 3.5 support for botocore first.\n Now that the py35 issues in botocore have [been fixed](https://github.com/boto/botocore/pull/742), I reran the travis build for the PR and everything looks good. I'm going to go ahead and merge this now.\n  According to the comments in boto3/s3/transfer.py it is possible for S3 transfers to be throttled based on user-configurable max bandwidth setting:\n\nhttps://github.com/boto/boto3/blob/develop/boto3/s3/transfer.py#L21\n\nI've been browsing this repo as well as the botocore repo for the last 20 minutes or so but can't find any further reference to any throttling behaviour nor a configuration option for max bandwidth.\n\nDoes this functionality exist or was it a planned feature that hasn't been implemented yet? If its the latter, when is this functionality due to be completed? I'm currently doing long-term uploads to S3 and am looking for something to limit the bandwidth use in order to prevent network saturation.\n @kyleknap We should probably remove that snippet from the docstrings though.  The intent was to implement it in the initial version, but given that it didn't make the first cut of this feature, we should probably remove it until we support this so other users don't get confused.\n Thanks for the response.\n\nUnfortunately I don't think passing values for `max_concurrency` will help, at least not for my use case. Essentially I want to be able to upload large backups into S3 over the course of 8 or so hours without it saturating the network link and causing issues for other services. Reducing `max_concurrency` I feel will have very little if any effect on the total amount of bandwidth used. That being said, I haven't had an opportunity to do a test yet.\n\nIt would be great if this could be considered for a feature addition on either the AWS S3 CLI or even just this particular library. Thus far I haven't been able to find a practical solution that will allow me to control bandwidth usage, at least not on Windows platforms.\n This is the same as aws/aws-cli#1090 Sorry to necropost but i feel if someone else had the same issue they wouldn't be resolving their issue with using trickle after seeing this post. Trickle and large s3 files will cause the trickle to crash using boto3 with 10 concurrent(default settings) uploads, changing the concurrent uploads will resolve the issue.   I have a bucket without any tags which results in the error when trying to list them.\n\n```\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 310, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 395, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nClientError: An error occurred (NoSuchTagSet) when calling the GetBucketTagging operation: The TagSet does not exist\n```\n\nI'd expect it to return just an empty tag set like most other methods do.\n Yep, I've googled up [this](https://github.com/aws/aws-sdk-core-ruby/issues/21#issuecomment-29497188) in ruby sdk, which raised my eyebrows. On one hand 404 is a deviant, but sort of makes sense (when out of context), but in boto it's definitely an outsider. \n :+1: to that.\n +1  Just hit this issue myself.  will try / catch for now\n After research, it seems there is not much can be done here to change the behavior.\n1. The [underlying S3 GetBucketTagging operation](http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETtagging.html#RESTBucketGETtagging-responses) purposely defines the \"NoSuchTagSet\" scenario as a \"Special Error\". Right now, all AWS SDKs just follow this behavior.\n2. Depending on the perception, an empty list in this scenario is arguably a more intuitive behavior (more on this later). But even if that is the case, the proper place to address that is S3 GetBucketTagging to return an empty list in first place, and every SDK will naturally follow. We'd rather NOT do some customization in SDK to revert a behavior already (intentionally?) chosen by upstream service. Otherwise, should some day in future this operation return all THREE possible return values as a non-empty list, an empty list, and an explicit NoSuchTagSet error, our SDK won't be able to differentiate between the last two. \n3. Interestingly, at the time of this writing, it turns out empty list is NOT even a proper value that can be accepted by put_bucket_tagging(), so it will be weird that if you could get an invalid value back from a get_bucket_tagging(), which you can not roundtrip back to put_bucket_tagging().\n4. If you really want to dive deep, the truth is, from the API's perspective, S3's TagSet has never been designed as a list, unlike other tags (such as tags in EC2). The web console may make you think otherwise, but let's take a closer look into the underlying API. Its [delete operation](http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketDELETEtagging.html) (see also our [Boto 3 doc](http://boto3.readthedocs.org/en/latest/reference/services/s3.html#S3.BucketTagging.delete) or [botocore doc](http://botocore.readthedocs.org/en/latest/reference/services/s3.html#S3.Client.delete_bucket_tagging)) provides no semantics to delete one tag among the tag set. You can only delete the entire tag set. Similarly, the put_bucket_tagging operation will overwrite all current tags, rather than append some into them. Which means, the real thing being Get/Put/Delete is actually a singular, not a collection. It is just that this singular, named `TagSet`, contains something happens to be a list, but `TagSet` itself is not a list. So you either have a TagSet or you don't. There is no such thing as empty list here.\n\nIn short, just use try / except to catch that error.\n Can we clarify whether we are taking about clients or resources?  The original traceback didn't suggest resources, but @kyleknap's comments are using resources.\n\nI agree that we shouldn't change the low level client API, but I still think at a high level, we should try to improve what we have in the resource model, especially if it's something we can model with some changes to the resource spec.\n\nI definitely understand the customer request to succinctly  get a set of tags, modify them, and update the bucket with the new tags.  I'm in favor of making that easier to do at the resource level.\n So to document the off-line conversation.\n- This is not a bug. And we are not going to change the low level client API behavior.\n- It is still possible to do something in the higher level, probably something similar to waiters. This is considered as a feature request.\n  Hi,\n\nI'd really like to set up a Lambda integration with the API Gateway. I looked at the JS on the API Gateway Console and noticed that there is a \"lambda\" integration type but when I use this in boto3 I get the following error:\n\n```\nbotocore.exceptions.ClientError: An error occurred (ValidationException) when calling the PutIntegration operation: 1 validation error detected: Value 'lambda' at 'putIntegrationInput.type' failed to satisfy constraint: Member must satisfy enum value set: [HTTP, MOCK, AWS]\n```\n\nDo you have any plans to support Lambdas?\n\nThanks,\nRobert\n That worked, thanks. It took me a day or so to work out what the uri should be though. Also, `integrationHttpMethod` is undocumented in the boto documentation.\n @rainierwolfcastle can you mention the format of uri that worked for you? I have been able to add the integration but lambda function is not getting bound to it.\n  When retrieving ec2 instances, we will occasionally get the following error from boto3:\n\n```\n  File \"/usr/local/lib/python2.7/site-packages/boto3/resources/collection.py\", line 82, in __iter__\n    for page in self.pages():\n  File \"/usr/local/lib/python2.7/site-packages/boto3/resources/collection.py\", line 165, in pages\n    for page in pages:\n  File \"/usr/local/lib/python2.7/site-packages/botocore/paginate.py\", line 83, in __iter__\n    response = self._make_request(current_kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/paginate.py\", line 155, in _make_request\n    return self._method(**current_kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 301, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 375, in _make_api_call\n    operation_model, request_dict)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/endpoint.py\", line 111, in make_request\n    return self._send_request(request_dict, operation_model)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/endpoint.py\", line 138, in _send_request\n    request, operation_model, attempts)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/endpoint.py\", line 193, in _get_response\n    operation_model.output_shape)),\n  File \"/usr/local/lib/python2.7/site-packages/botocore/parsers.py\", line 206, in parse\n    parsed = self._do_error_parse(response, shape)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/parsers.py\", line 459, in _do_error_parse\n    'RequestId': original.pop('RequestID')\nKeyError: 'RequestID'\n```\n\nIt appears some error happened on Amazon's side and there's no RequestID in the returned request. I have no reproducer since this happens intermittently. It might be worth having a default value of `None` if the RequestID doesn't exist in the response though.\n Unfortunately it happened in an alert and it's not easily reproducible since it likely requires AWS to fail. We have also modified the alert since we didn't need to use the AWS API.\n It was using the `instances` collection on the service resource.\n I think there are about 3 instances to iterate over, so we don't have a lot of instances to iterate over.\n I have also stumbled upon this recently and got a bit of extra info (I caught it through sentry):\n\n```\nFile \"task/aws_utils.py\", line 397, in describe_instances\n    Filters=filters, NextToken=next_token)\n  File \"botocore/client.py\", line 228, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"botocore/client.py\", line 475, in _make_api_call\n    operation_model, request_dict)\n  File \"botocore/endpoint.py\", line 117, in make_request\n    return self._send_request(request_dict, operation_model)\n  File \"botocore/endpoint.py\", line 144, in _send_request\n    request, operation_model, attempts)\n  File \"botocore/endpoint.py\", line 203, in _get_response\n    parser.parse(response_dict, operation_model.output_shape)),\n  File \"botocore/parsers.py\", line 206, in parse\n    parsed = self._do_error_parse(response, shape)\n  File \"botocore/parsers.py\", line 468, in _do_error_parse\n    'RequestId': original.pop('RequestID')\n```\n\n(sorry about the parsing for the following...)\n\n```\noriginal 'body' 'b' 'Http/1.1 Service Unavailable'\nresponse    'body' '<html><body><b>Http/1.1 Service Unavailable</b></body> </html>'\n'headers' {'content-length': '62', 'connection': 'close', 'pragma': 'no-cache', 'cache-control': 'no-cache,no-store'}\n'status_code' 503\n```\n  The old boto library had arguments `proxy`, `proxy_port`, `proxy_user` and `proxy_pass` to allow connections to the API endpoints to go through a proxy. \n\nWhat is the `boto3` equivalent way of programmatically setting the proxy parameters (i.e., not using the configuration file)? \n I have same issue. I cant event set proxy with global conf file placed in /etc/boto.cfg . \n I think this is a poor replacement. I might want to override what's in the environment variable without changing it and causing side effects on other libraries or portions of a larger program. \n\nAlso, this environment variable is a very *nix-centric standard, which IMHO is poor form for a portable library such as boto3.\n\nI would strongly suggest that a way for this to be specified explicitly is available when a boto3 connection is opened.\n I would agree with the above comment. I think it would be better if the proxies could be set via the config file, and better still, via the interface outlined in https://github.com/boto/boto3/pull/325\n Marking as a feature request.\n We also require this functionality. We need a clean way of indicating that boto uses the proxy while other services on the same machine do not. Effectively it boils down to \"local\" services don't require a proxy but \"internet\" services do.\n\nWe're actually going to port our greenfield boto3 code back to boto2 now.\n Has there been any progress on this? We require this for our organisation too.\n This is just another ping to find out what is going on with this feature...\n Same thing here. We need this functionality and currently we're backporting boto3 code to boto2 because of this. Please implement this feature.\n Same request but for making use of boto3 running on AWS Lambda in a VPC to connect via a corporate proxy. Need to be able to set a proxy in the code as setting the environment variables has to be done before you instantiate the AWS clients. This means I can't pass them as parameters and they have to be hardcoded.\n I have the same issue from an internal network, would love to see proper support for proxies!\n any update?\n any movement on this issue? Seems silly that we'd lose this functionality, it's kind of a pain when running boto3 bundled into something like apache. so it's not really running with the standard environment, we have to utilize apache libs to pass in environment variables. \n So would adding this as an option to the Config object proposed [here](https://github.com/boto/boto3/issues/338#issuecomment-156949930) be sufficient?  Something like:\n\n```\nec2 = boto3.client('ec2', config=Config(proxy='http...'))\n```\n @jamesls A better solution than current, but still preferred would be having the prior boto functionality of being able to specify it via a configuration file, especially in terms of credentials storage. \n Ok, so to capture both ideas, you could ideally do either:\n\n```\nec2 = boto3.client('ec2', config=Config(proxy='http....'))\n```\n\nOr you could do:\n\n```\n$ cat ~/.aws/config\n[default]\nproxy=http://...\n\n$ python\n>>> import boto3\n>>> boto3.client('ec2') # Would use the proxy settings.\n```\n May I ask if this is on the roadmap?\nThe lack of this feature stops us from migrating to boto3 from boto2 in the [smart_open](https://github.com/RaRe-Technologies/smart_open) package.\n This is important for our use case also. Specifically, setting the http proxy interferes with pip installs from our pip index.  Hi, please have a look at the following solution. \r\n\r\nhttps://aws.amazon.com/blogs/security/how-to-add-dns-filtering-to-your-nat-instance-with-squid/\r\n\r\nApparently this would free us from the need of setting the HTTP proxy in every instance of the private subnet. What do you think? This article describes one particular way of implementing a transparent proxy. However, some of us have to write Python programs using boto that run on environments we don't control and where using an explicit proxy is a requirement.\r\n\r\nIf you do control your network environment and can use a transparent proxy as a workaround for the lack of explicit proxy control in boto3, then by all means do so. But IMHO the need to allow this configuration in boto3 still remains as important as ever. Why is a regression marked as a feature anyway? So you guys broke functionality and now consider fixing it, or reverting actually, a feature request? Y'all need Jesus.  Submitted a PR (https://github.com/boto/botocore/pull/1228) in botocore to plumb the proxies option from Config to the Endpoint. Happy to iterate on it if this is desirable and if there is some feedback on the patch. Hmmm, export no_proxy=\"*.someservice.amazonaws.com\" Closing since @timuralp 's PR was merged. Feel free to open another issue if you have additional problems.  Does boto3 supports s3->s3 multipart upload/copy? Documentation does not say anything about it. I found one here that it is not supported. Correct me if i am missing some thing??\nhttp://boto3.readthedocs.org/en/latest/reference/customizations/s3.html#module-boto3.s3.transfer\nhttp://boto3.readthedocs.org/en/latest/_modules/boto3/s3/transfer.html\n @JordonPhillips : Thanks for your reply, it clears my doubt. I would go with existing boto library which does have this support.\n I'd like to drag this one back out.  I really need to use boto3 to do an s3->s3 multipart transfer.  I do not want to use the old boto.  Can you gave me a quick rundown on what the 5 API calls entail and what operations could be strung together to accomplish this?  Hi,\n\nThis is my traceback:\n\n```\nTraceback (most recent call last):\n  File \"./mp_make_env.py\", line 50, in <module>\n    'ToPort': port\n  File \"/Users/teran/repos/public/boto3/boto3/resources/factory.py\", line 394, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/Users/teran/repos/public/boto3/boto3/resources/action.py\", line 77, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/Users/teran/repos/public/boto3/venv/src/botocore/botocore/client.py\", line 310, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/Users/teran/repos/public/boto3/venv/src/botocore/botocore/client.py\", line 395, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (InvalidPermission.Malformed) when calling the AuthorizeSecurityGroupIngress operation: TCP/UDP port (-1) out of range\n```\n\nCode snippet is the following:\n\n```\nfor port in [22, 80, 443, 843]:\n    security_group.authorize_ingress(\n        IpPermissions=[\n            {\n                'IpProtocol': 'tcp',\n                'ToPort': port\n            }\n        ]\n    )\n```\n\nI'm using boto3 in a venv at cf7d1652746597ba4b9a82c1df9fce81503ade8a. Do you know if I'm doing something wrong or if this is a bug?\n\nThank you!\n Thank you!\n\nI just realized my confusion...\n\nFromPort is the beginning of the port range. ToPort is the end of the port range. This is exceptionally confusing as I as thinking it was source/destination port. Could it eventually be renamed to PortRangeStart and PortRangeEnd, or something similar?\n\n--Teran\n  I am using boto3 in the context of AWS Lambda, which bills us for each slice of 100ms elapsed processing a script.\n\nThe biggest share of my processing time is spent initializing boto3 runtime clients and resources. For instance, by batching 3 items, I noticed that the first item took 7 seconds to complete, then it took less than 1 second to complete the rest of the items. This makes individual requests very costly. Occasionally, AWS seems to re-use the runtime context for different requests when items are coming in fast enough. On these occasions, I also noticed a total runtime of less than 500ms average even though the handler function received a single item.\n\nEven though AWS Lambda provides the boto3 package, I wouldn't mind packaging a homebrewed, \"static\" version of the package with my code if that can save me a few seconds. But I'm not sure where to start, or if this is even possible given boto3's dynamic model.\n Make sure you are creating your session once in the module itself and using it globally along with any clients or resources.  As long as your Lambda function is getting called regularly, this code won't have to be re-run.  I have found that as long as the Lambda container is hot the performance is quite good.\n Also, bumping up the memory also improves your CPU performance.  I use the max of 1536 for everything.\n Thanks for the insights, I'll definitely switch for clients instead of resources and see if this improves the processing time... next week! :)\n\n## \n\n@garnaat I wonder if the tradeoff of paying more per 100ms slice really worth it, considering that I can get sub-500ms passes if everything is hot. As you said, when the lambda is being called in shortly after a previous run, I can get these sub-500ms passes.\n\n@JordonPhillips isn't there anything along the lines of Pickle that could improve performance? I have coded a dynamic REST client on top of our generic API definitions in python, and I can either generate them in memory at runtime, or output static files that can be reimported later on. The latter lets me use the APIs without a definition handy (and also feeds a package), while the former is useful when we're actually working on that API definition. With some effort, don't you think boto3 could also output a static and importable version of what it can generate at runtime?\n\n@jamesls for starters, I enclose most imports and long initializations into little memoized functions. Importing at the module level is not a good idea in Lambda context if the import is not used in all code paths. For that reason, I always import just-in-time, within the function's scope, and the memoized approach results in instant subsquent imports from any scope:\n\n```\n@memoize\ndef botoclient(service, region_name):\n    return _import_boto3().client(service, region_name=region_name)\n@memoize\ndef botoresource(service, region_name):\n    return _import_boto3().resource(service, region_name=region_name)\n@memoize\ndef _import_boto3():\n    import boto3\n    return boto3\n```\n\nMy main handler handles a DynamoDB stream and dispatches the work to other Lambda functions. Entering that 'if' is a 3000ms deal because of the boto3 stuff. If there are no inserts, the function terminates within 60ms.\n\n```\ndef handle_dynamodb(event, context):\n    streams = event['Records']\n    inserts = []\n    for s in streams:\n        if s['eventName'] == 'INSERT':\n            inserts.append(s)\n    if inserts:\n        from perf import botoclient\n        botoclient('lambda', streams[0]['awsRegion']).invoke(\n            FunctionName='that-other-lambda',\n            InvocationType='Event',\n            Payload=json.dumps({\"Records\": inserts}))\n```\n\nThe other lambda being called is the one that takes 7 seconds to complete at worst. It takes an EC2 ID and must identify where it belongs in OpsWorks, then it must update the DynamoDB record with the newly fetched information. The OpsWorks API relies on OpsWorks IDs but the EC2 tags only contain names, so it's a bit far stretched and requires enumerating stacks and describing instances in stacks (then enumerating them again...). It uses 2 resources (EC2.Instance and DynamoDB.Table) and one client (OpsWorks). Using extended logging, I was able to see that API calls and data processing was insanely quick (usually below 600ms seconds total) while creating the resources (before the API calls) used more than 5 seconds.\n\nHere's the gist of it:\n\n```\ndef identify_ec2(instance_id):\n    logger.info(\"Launching identification process for %s\", instance_id)\n    from perf import botoresource\n    instance = botoresource('ec2', 'us-east-1').Instance(instance_id)\n    instance.load()  # this calls describe_instance and caches the data\n    tags = _tags_to_dict(instance.tags)\n\n    # global info that should be available on all EC2 instances\n    identification = [\n        ('ec2', True),\n        ('environment', tags.get('my:environment', None)),\n        ('instance_type', instance.instance_type),\n        ('instance_name', tags.get('Name', '')),\n        ('launch_time', str(instance.launch_time)),\n        ('private_ip', instance.private_ip_address)\n    ]\n\n    if 'opsworks:instance' in tags:\n        identification.append(('opsworks', True))\n        # layer name needs a bit of processing since the shortname is in the key\n        # multi-layer instances are not supported\n        for layer_key in tags.keys():\n            if layer_key.startswith('opsworks:layer:'):\n                break\n        else:\n            logger.error(\"Unable to detect layer name for instance %s\", instance_id)\n\n        stack_name = tags['opsworks:stack']\n        identification += (\n            ('ow_name', tags['opsworks:instance']),\n            ('layer_short_name', layer_key[15:]),\n            ('layer_name', tags[layer_key]),\n            ('stack_name', stack_name)\n        )\n\n        # identify the owner stack/layer ID\n        from perf import botoclient\n        ow_client = botoclient('opsworks', 'us-east-1')  # opsworks is region-agnostic\n        stacks = ow_client.describe_stacks()['Stacks']  # list of dicts\n        if not stacks:\n            logging.error(\"No stack to process.\")\n\n        for stack in stacks:\n            if stack['Name'] == stack_name:\n                break\n        else:\n            logger.error(\"Unable to detect stack for instance %s\", instance_id)\n            return {}\n\n        # identify the instance within the stack\n        instances = ow_client.describe_instances(StackId=stack['StackId'])['Instances']\n        for instance in instances:\n            if instance.get('Ec2InstanceId', '') == instance_id:\n                identification += (\n                    ('stack_id', instance['StackId']),\n                    ('layer_id', instance['LayerIds'][0]),\n                    ('ow_instance_id', instance['InstanceId']))\n                break\n        else:\n            logger.error(\"Unable to locate instance within opsworks: %s\", instance_id)\n\n    # there was no need for these info so we just keep a flag\n    if 'elasticbeanstalk:environment-id' in tags:\n        identification.append(('elasticbeanstalk', True))\n    if 'aws:cloudformation:logical-id' in tags:\n        identification.append(('cloudformation', True))\n\n    logger.info(\"Identification complete.\")\n    return identification\n```\n @muikrad I think your trick to not import until you need it doesn't help as much as it would on your system since Lambda optimizes the import stage more aggressively. In general moving re-used initialization to the module level can speed things up since Lambda can keep those warm. At the moment, I don't know that there's anything else I can recommend for your snippet. Sorry for taking so long to get back to you :(\n No problem @JordonPhillips. That snippet actually went to hell since ;) I also agree with you on the jit-import thing;  the time lost importing at the module level is not significant when compared to the time lost with API calls in general.\n  I can't find any reference to S3 \"calling format\" in boto3.  At first I thought it was just a documentation oversight, but I can't find anything like that in the source code, either (though the source code is completely different from boto2, so maybe I just don't know what to look for).\n\nIs this feature gone?  Without `OrdinaryCallingFormat`, is it now impossible to use this with [fake-s3](https://github.com/jubos/fake-s3)?\n\nI found [this page](http://pokerwoles.com/____________overviewi_m_trying_to_overwrite_certain_variables_in_boto3_using_configuration_file/question_detail/32618216/overwrite_s3_endpoint_using_boto3_configuration_file) which suggests this will help:\n\n```\nfrom botocore.utils import fix_s3_host\nresource.meta.client.meta.events.unregister('before-sign.s3', fix_s3_host)\n```\n\nbut it doesn't seem to make a difference.\n\nHere's the simplified test case I'm working with:\n\n```\nimport boto3\nfrom StringIO import StringIO\nsession = boto3.session.Session(aws_access_key_id='1',\n                                aws_secret_access_key='2',\n                                region_name='3')\ns3 = session.resource('s3', endpoint_url='http://localhost:5353', use_ssl=False)\nbucket = s3.Bucket('my-local-bucket')\n\nobj = bucket.Object(key='my-test-key')\nobj.put(StringIO(\"abc\"))\n\nobj = bucket.Object(key='my-test-key')\nobj.get()['Body'].read()  # returns the empty string\n```\n\nThe documentation doesn't say, but empirically, it seems the keys passed to Session can't be None, but they can be any string.\n @jamesls Thanks for the tip!\n\nI added that config file, but it doesn't seem to make any difference in my test case.  I tried changing the value from `path` to `xyz` and got an error, so I've confirmed it's reading that file.\n\nI'm still getting the empty string back from the `.read()` call in my test.  Also, if I have a network connected, it takes around 15-20 seconds for either `put()` or `get()` to return, so it seems to be trying to hit some actual S3 servers, and timing out.  From looking at botocore/client.py, it looks like `addressing_style=path` causes `fix_s3_host` to be unregistered automatically, which is good.\n\nIt looks like I've got some more investigation to do here, but at least I found where \"calling format\" went.  Thanks!\n It might help to turn on debug logging to see what endpoints it's trying to connect to.  At the top of your script you can add:\n\n```\nimport boto3\nboto3.set_stream_logger(name='')\n```\n\nAnd it will print out debug logs to stderr.\n OK, I did that, and tried running my program (which uploads a file, and then downloads it) while not connected to the network at all.  All the logs point to localhost:5353, and nothing mentions AWS or any other external server.  So far so good.\n\nIn FakeS3, it's creating a file with all my metadata fields, which is a good start.  It has size 0, though, both in the metadata record and the content record itself.\n\nAfter some investigation, I got uploading to FakeS3 to work.  The trick was [here](https://boto3.readthedocs.org/en/latest/guide/migrations3.html#key-metadata).  The documentation makes it look (to me) like you can call `key.put(Metadata={...})` to set metadata on a key, but in fact this replaces everything associated with the key with just that metadata dict.  In other words, if you do `.put(Body=...)`, and then `.put(Metadata={...})`, the second one \"wins\" and wipes out the first one.  Perhaps I was being too literal with the documentation, but it was not at all clear to me that `.put(Body=..., Metadata=...)` is what's required here.\n\nAnyway, thanks for the debugging tips!\n It seems that `generate_presigned_url()` (mentioned in #110) calls `fix_s3_host()`, and since it doesn't go through the events system, it's not possible to unregister that.  That might be boto/botocore#601, or related to it.\n\nFrom reading the source, I found a workaround: just claim that my FakeS3 is in region \"us-gov-west-1\"!  It's one of two RESTRICTED_REGIONS whose hosts are never \"fixed\" by that method.\n Apart from setting this in the config file, is there a way of programmatically setting it? Will I have to wait for https://github.com/boto/boto3/pull/325 to be approved?\n @themanifold: I haven't found a way to set Boto3 config without a config file, no.  (I would agree that it's pretty weird to require a user dotfile for this.  I wonder what the motivation for that was.  That's the wrong scope for these settings.)\n\nBut the `resource.meta.client.meta.events.unregister('before-sign.s3', fix_s3_host)` line does work, and that's all that the old calling format really accomplished, anyway.  Between that and using the fake \"us-gov-west-1\" region (to avoid `fix_s3_host` in other places), I'm able to use a non-AWS S3-like server just fine.\n\nIt's a lot more complicated and less well documented than Boto2, but it works.\n @themanifold Yes, once #325 is merged this is how you'll set this when you create a resource.  I'll take a look at this PR.\n #325 is merged, closing out issue.  Also @kengruven that latest issue you're running into is the same as boto/botocore#601.  Let's track that issue over there.\n  There are various web pages that recommend using boto.manage.cmdshell, but it's not here, and it's not mentioned in the migration guide. I'm having some trouble getting paramiko to do what I need, so I wonder if there is an alternative.\n Closing inactive conversation.\n  Uploading to dynamodb from scripts run in terminal/cmd prompt . But after bundling into .app or .exe using pyinstaller the following errors appear for both python v2 and v3 on OSX and Windows\n# python v2.7; OSX 10.10.5\n\n  File \"/Users/cuddergambino/Code/NVDrones/DynamoDB/python/NVConnectApp/NVServer.py\", line 18, in createDynamoSession\n    dynamodb = session.resource('dynamodb', endpoint_url=\"https://dynamodb.us-west-1.amazonaws.com\")\n  File \"/usr/local/lib/python2.7/site-packages/boto3/session.py\", line 264, in resource\n    service_name, 'resources-1')\n  File \"/usr/local/lib/python2.7/site-packages/botocore/loaders.py\", line 119, in _wrapper\n    data = func(self, _args, *_kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/loaders.py\", line 284, in determine_latest_version\n    return max(self.list_api_versions(service_name, type_name))\n  File \"/usr/local/lib/python2.7/site-packages/botocore/loaders.py\", line 119, in _wrapper\n    data = func(self, _args, *_kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/loaders.py\", line 313, in list_api_versions\n    raise DataNotFoundError(data_path=service_name)\nDataNotFoundError: Unable to load data for: dynamodb\n# python v3.4; Windows 7\n\n  File \"C:\\Users\\cuddergambino\\Documents\\workspace\\NVConnectApp\\NVServer.py\", li\nne 18, in createDynamoSession\n    dynamodb = session.resource('dynamodb', endpoint_url=\"https://dynamodb.us-we\nst-1.amazonaws.com\")\n  File \"C:\\Python34\\lib\\site-packages\\boto3\\session.py\", line 264, in resource\n    service_name, 'resources-1')\n  File \"C:\\Python34\\lib\\site-packages\\botocore\\loaders.py\", line 119, in _wrappe\nr\n    data = func(self, _args, *_kwargs)\n  File \"C:\\Python34\\lib\\site-packages\\botocore\\loaders.py\", line 280, in determi\nne_latest_version\n    return max(self.list_api_versions(service_name, type_name))\n  File \"C:\\Python34\\lib\\site-packages\\botocore\\loaders.py\", line 119, in _wrappe\nr\n    data = func(self, _args, *_kwargs)\n  File \"C:\\Python34\\lib\\site-packages\\botocore\\loaders.py\", line 309, in list_ap\ni_versions\n    raise DataNotFoundError(data_path=service_name)\nbotocore.exceptions.DataNotFoundError: Unable to load data for: dynamodb\n  The [documentation] claims that the returned `Body` parameter is a `bytes` object.  I am instead getting a `botocore.response.StreamingBody` response.  I can find no documentation for this object.\n hth,\n\nresult = s3.get_object(Bucket=BUCKET, Key=KEY)\nreturn result['Body'].read(result['ContentLength'])\n  how do you set s3 v4 signature when your using boto3 as a library? dropping into config a) doesn't seem to work and b) is suboptimal for library usage configuration. Is there a way to set it in code?\n  I'd love to see support for the new EC2 Run command:\n\nhttps://aws.amazon.com/blogs/aws/new-ec2-run-command-remote-instance-management-at-scale/\n Here's the commit that Jordon is referring to boto/botocore@d166c09\n  A feature like the ruby sdk (v2) AssumeRoleCredentials method would be very useful.\n\nhttp://docs.aws.amazon.com/sdkforruby/api/Aws/AssumeRoleCredentials.html\n\nIn short, a way to provide boto3 with the ARN of an IAM role to assume, and it will handle generating the credentials, and refreshing them when they expire.\n  I'm sending a peering connection request with `create_vpc_peering_connection` and want to know the accepter vpc cidr, but the response doesn't contain accepter cidr. As I write this I'm realising that this might be a security-related issue and cidr is not there on purpose. If that's the case, please consider updating the docs, this also concerns `describe_peering_connections` \u2013 it also doesn't return accepter cidr while connection is in initiating/pending state.\n This is between two different accounts. Yes, once the request gets accepted the cidr also becomes available.\n After some investigation, it seems this is a service documentation issue. I'll let the service team know so they can clarify their docs.\n  This pull request adds a config argument to the `boto3.resource()`/`boto3.session.resource()` function. This allows passing in a custom config to programatically set a signature version, an s3 addressing style, or any other argument from the botocore client config.\n\nIt was done this way over passing a client argument in (as suggested in #168) because it prevents the user from passing in a client of the wrong service type, as illustrated in this hypothetical set of calls.\n\n```\nclient = boto3.client('sqs', config=Config())\nresource = boto3.resource('ec2', client=client)\n```\n\n(You could make it so that resource ignores the `service_name` argument passed into it if `client` is specified, but that's really confusing since `service_name` is a required argument of `boto3.resource()`.)\n\nThe only other non-straightforward thing in this pull request that would be nice to have feedback on is the `copy.deepcopy` performed if the config has not passed in `user_agent_extra`. This was done so that the incoming argument is not modified, but another possible semantic is that we use `user_agent_extra` untouched if a config is passed in, not attempting to override with a default value. Any preference, or okay as is?\n Ping?\n Note that the description of this pull request above did explicitly discuss a problem with passing a client to the resource. May not block that idea, but it definitely points out how error prone it could be.\n I agree, :+1: to preferring configs over clients, @mbarrien makes a good case for this. \n :shipit:  Code looks good to me.  Thanks for the pull request!\n Updated per comment. You're okay with the deepcopy being used here?\n @mbarrien I think that's fine.  Thanks for the pull request.\n  Hi Guys,\nI can see two messages in my SQS queue in AWS web console.\nBut method receive_messages in sqs.Queue only return one message each time.\nI am a little confused about this.\n\nHere is my python code below:\n\n```\nsqs = boto3.resource('sqs', region_name=\"cn-north-1\", aws_access_key_id=access_id, aws_secret_access_key=access_secret)\nqueue = sqs.Queue(sqs_url)\nmessages = queue.receive_messages(MaxNumberOfMessages=10,WaitTimeSeconds=10)\nfor message in messages:\n    print message\n```\n @JordonPhillips  Yes, a distributed message queue cannot guarantee that 10 messages will be received each time even there are more than 10 messages. But no matter how many messages(I tested less than 10 messages, sorry), I always received one message each time.\n\nI will test more and will be report if something wrong. Thanks.\n\n----------- UPDATE ----------\nWhen more than 10 messages in SQS queue. It will receive a bunch of messages one time using receive_messages, but less than ten.\n\n```\n$ python query_sqs.py \nMessage: The IT Crowd.MP4 - a3128e53-6969-4e3c-b6aa-4e054031fdc4 - ObjectCreated:Put\nMessage: developing_modules.rst - 0e635aa9-acb0-48ad-b692-792afb9d1759 - ObjectCreated:Put\nMessage: developing_api.rst - 02481451-37d8-485b-9b26-14251757664c - ObjectCreated:Put\nMessage: intro_configuration.rst - c80d7f57-da6d-4d7f-98de-8df8b642f2cc - ObjectCreated:Put\n\n$ python query_sqs.py\nMessage: intro_adhoc.rst - a613d28f-eb49-4c95-a98c-465ba698b1fc - ObjectCreated:Put\nMessage: intro_windows.rst - e67ceeee-b2c3-4669-b06c-753a19f800ff - ObjectCreated:Put\n```\n Hi Jordon,\n\nIs this still expected behaviour, to only be guaranteed to receive 10 messages at a time when there are a several thousand messages in the queue? I have a queue with around 50 messages, would you say there is any other way of reading all the messages? Any other method or service I can use for small queues as such? \n\nThanks in advance!\n I'm seeing the same original issue; setting MaxNumberOfMessages 10 seems to come back always with 1 message\n I take it, this is still an \"issue\" (not w/ the lib, more w/ SQS). \n\n### Context\n\nI have a tiny queue (we'll only ever have ~8 messages in the queue at a time) that I'd like to expose over a Slack \"slash\" command. For example, typing `/queue`, would hit an API Gateway that would call a Lambda that would pull and display all messages in the queue (in order).\n\n### Temp Solution\n\nI have some code that hacks around SQS's limitations (based on the feedback in this thread):\n\n``` python\ndef lambda_handler(event, context):\n    \"\"\"\n    Get messages from an SQS message queue and return them to the caller.\n    \"\"\"\n    sqs = boto3.resource('sqs')\n    queue = sqs.get_queue_by_name(QueueName='test-messages')\n\n    messages = set()\n    for i in range(0, 6):\n        msg_list = queue.receive_messages(VisibilityTimeout=1, MaxNumberOfMessages=10, WaitTimeSeconds=5)\n        for msg in msg_list:\n\n            messages.add(msg.body)\n\n    return list(messages)\n```\n\n### Question\n\nWhile this obviously isn't an optimal approach, it does work. That said, I was wondering if was possible to order these messages by the timestamp w/ which they were submitted to the queue?\n\n### Potential Approach\n\nSet the timestamp as an attr on the message during message creation and order on that attr once I get my set....\n Don't count on the order of receiving the messages - put a timestamp in the message.\r\n\r\n[Update]\r\nI take it back - SQS does support FIFO - more here: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html \r\n\r\nThere are only two hard problems in distributed systems: \r\n\r\n2 . Exactly-once delivery \r\n1 . Guaranteed order of messages \r\n2 . Exactly-once delivery...\r\n\r\n  In the AWS console, the Description column does not end up with what I list as a description, instead I get something like:\n\nCreated by AWS-VMImport service for import-snap-fhc6by6q\n\n```\n response = client.import_snapshot(Description=desc,\n                                   DiskContainer={\n                                       'Description':desc,\n                                       'Format':'RAW',\n                                       'UserBucket': {\n                                           'S3Bucket': bucket,\n                                           'S3Key': \"sdks/{}.{}.img\".format(product, version)\n                                           }\n                                       }\n                                   )\n```\n It looks like the SDK is performing as expected here, and the issue is on the service side. If you're still experiencing this issue, I would recommend asking about it on their [forums](https://forums.aws.amazon.com/forum.jspa?forumID=30).\n  In documentation, it mentions when creating/updating auto scaling groups, we can pass a a list of subnets for the VPCZoneIdentifier key (http://boto3.readthedocs.org/en/latest/reference/services/autoscaling.html#AutoScaling.Client.update_auto_scaling_group)\n\nIn reality, it only accepts a single string:\n\nresponse = asg_client.update_auto_scaling_group(\n   ....:                AutoScalingGroupName=asg_name,\n   ....:                LaunchConfigurationName=new_launch_configuration_name,\n   ....:                VPCZoneIdentifier=['subnet-XXXXX','subnet-XXXXXX'],\n   ....:                )\nParamValidationError: Parameter validation failed:\nInvalid type for parameter VPCZoneIdentifier, value: ['subnet-XXXXXX', 'subnet-XXXX'], type: <type 'list'>, valid types: <type 'basestring'>\n  I'm trying to execute spark-submit using boto3 client for EMR. After executing the code below, EMR step submitted and after few seconds failed. The actual command line from step logs is working if executed manually on EMR master.\n\nController log shows hardly readable garbage, looking like several processes writing there concurrently.\n\nTried command-runner.jar and EMR versions 4.0.0 and 4.1.0\n\nThe code fragment:\n\n``` python\nclass ProblemExample:\n    def run(self):\n        session = boto3.Session(profile_name='emr-profile')\n        client = session.client('emr')\n        response = client.add_job_flow_steps(\n        JobFlowId=cluster_id,\n        Steps=[\n            {\n                'Name': 'string',\n                'ActionOnFailure': 'CONTINUE',\n                'HadoopJarStep': {\n                    'Jar': 's3n://elasticmapreduce/libs/script-runner/script-runner.jar',\n                    'Args': [\n                        '/usr/bin/spark-submit',\n                        '--verbose',\n                        '--class',\n                        'my.spark.job',\n                        '--jars', '<dependencies>',\n                        '<my spark job>.jar'\n                    ]\n                }\n            },\n        ]\n    )\n```\n Yep, sorry for disturbing.\n  According to the docs, the [`Glacier.MultipartUpload`](http://boto3.readthedocs.org/en/stable/reference/services/glacier.html#Glacier.MultipartUpload.multipart_upload_id) resource should have a number of attributes, for example [`multipart_upload_id`](http://boto3.readthedocs.org/en/stable/reference/services/glacier.html#Glacier.MultipartUpload.multipart_upload_id), but\n\n```\nsession = boto3.session.Session()\nglacier = session.resource('glacier')\nvault = glacier.Vault('-', vault_name)\nmultipart_upload = vault.initiate_multipart_upload(\n    archiveDescription=archive_desc,\n    partSize=str(part_size),\n    )\nprint(multipart_upload.multipart_upload_id)\n```\n\nfails with\n\n```\nboto3.exceptions.ResourceLoadException: glacier.MultipartUpload has no load method. \n```\n\n(Actions and identifiers of the `MultipartUpload` resource work as expected.) Tested with \n\n```\nboto3==1.1.4\nbotocore==1.2.11\n```\n Sorry about the radio silence on our end. It looks like the `multipart_upload_id` isn't getting saturated, but `id` is. So for now, you can use `multipart_upload.id`.\n I see... Sorry but I am a little bit confused by this [Identifiers & Attributes](http://boto3.readthedocs.org/en/stable/guide/resources.html#identifiers-attributes-intro) thing.\n\nIs it safe to assume that the [`id` identifier](http://boto3.readthedocs.org/en/stable/reference/services/glacier.html#Glacier.MultipartUpload.id) is the same thing as the [`multipart_upload_id` attribute](http://boto3.readthedocs.org/en/stable/reference/services/glacier.html#Glacier.MultipartUpload.multipart_upload_id)? \n\nIf identifier and attribute point to the very same thing, why is there both an Id and an Attribute? [_Entia non sunt multiplicanda praeter necessitatem_](https://en.wikipedia.org/wiki/Occam%27s_razor)\n @miccoli Yes, they are the same thing. We recently fixed the bug at the heart of the issue, and so now `multipart_upload_id` and `id` alias the same value. The reason both are there is because for resources we try to make the identifiers simpler, but we don't want to remove response attributes from the request.\n  I'd like to script a blue-green deployment between two auto scaling groups. \n\nHaving a waiter that would tell me when instances in the new group have finished launching would help a lot.\n Thanks, I'll mark this as a feature request. In the meantime, I think you'd need to describe the autoscaling group and poll the instances in the group until they are marked as `InService`.\n +1 (I need this feature in my project)\n\n[aws/aws-sdk-ruby](https://github.com/aws/aws-sdk-ruby) has already implemented this but has some bugs aws/aws-sdk-ruby#1109 .\nOnce it's fixed, just copy the waiter JSON to botocore and it should work fine :smiley: \n @quiver I will pull the waiters from the ruby sdk once they get fixed.\n @kyleknap thx.\n +1 definitely need this for https://github.com/revmischa/udo\n Any update on this? This would be great for a project we're doing at the company I work at also. Right now I just have a 30 minute celery job that checks to see if anything has been done ...  My workaround is to check every 30 seconds if the ASG still exists:\r\n`response = client.describe_auto_scaling_groups(...)`\r\n`while response['AutoScalingGroups']:`\r\n`         time.sleep(30)` That type of a solution wouldn't be ideal when your AWS account is getting close to its API limits.  Loops and whiles on response codes is a solution but its a bit dirty and could be nicer.  Today I'm polling, but would much prefer waiters for the following:\r\n\r\n- ASG deleted\r\n- At least one EC2 instance has started in a new ASG\r\n +1 (I need this feature ) Just a thought for everybody 'polling' -- could always just monitor SQS for messages from the ASGs in the meanwhile.  I was looking for waiters for Attach and Detach ELB in ASG. Searched the boto3 docs but did not see any waiter name there.\r\n\r\nDoes any one implemented it or any suggestion in this regards.\r\n\r\nhttp://boto3.readthedocs.io/en/latest/reference/services/autoscaling.html#AutoScaling.Client.get_waiter  when i use ses to send email i got this error \ni don't know whether this is caused by this problem\n\n```\n    :return: Subclass of :py:class:`~boto3.resources.base.ServiceResource`\n    \"\"\"\n    if api_version is None:\n        api_version = self._loader.determine_latest_version(\n            service_name, 'resources-1')\n    resource_model = self._loader.load_service_model(\n        service_name, 'resources-1', api_version)\n```\n\nwe can't find resources-1.json in boto/data/ses or any other directory maybe it's a bug or just my mistake \nany ideas?\n Can you provide the version number of boto3 you're using, a full stack trace of the error, and the code that created the error?\n thks it is my bad we should use boto3.client('ses') instead of  boto3.resource('ses')  cause the problem \nwhy some services like s3 sqs can use resource , other service must use client?\n  So the main issue here is that we are [disabling newlines in list elements](https://github.com/boto/botocore/blob/develop/botocore/docs/bcdoc/style.py#L250). It seems this is intended to prevent the inevitable `<p>` from creating a newline, but it has the side effect of completely disabling nested lists.\n  Collection resources for the Policy resource were getting preloaded due to the existance of a path. These resources need to be fully loaded through their load method not the ListEntitiesForPolicy method because it returns a partial subset of the resource's attributes.\n\nFixes https://github.com/boto/boto3/issues/273\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n  This test makes sure that all collections that use an operation that looks paginatable has a paginator for that operation. If you do not have a paginator, you will end up with a response iterator that does not contain all of the possible resources.\n\nHelps address: https://github.com/boto/boto3/issues/269\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n Sure we will be able to shorten the list. But I am not sure if the burden (with respect to the future) will be lessened. It seems to be the same amount of burden for both strategies if we want to be accurate.\n\nUsing your suggestion, if we add a new paginator config that uses a new pagination parameter name, we will not need to add it to the list. However, if an operation comes along that we do not have a pagination config for and has the same pagination parameter, we will completely miss adding a paginator for the collection because it would not look as paginator as we did not add it to the list of pagination names.\n\nFor what I have now, the issue is the same. If we add the pagination config and do not add the new parameter name, any new operations that do not have paginators and use this new parameter name will be missed as well.\n\nUltimately, I do not think there is any way getting around maintaining a long list if we want to stay current with possible paginator naming conventions.\n\nSo I am not opposed to either approach, but I rather keep the list as is and make it a best effort to update the list.\n Alright, I see where the disjoint is. You are referring to this specifically being the test for boto3. I am fine with this being labeled as just a sanity check then because I do have tooling upstream  to help catch missing paginators. It is similiar to this logic but is more aggressive in identifying paginators. I guess I was arguing more about the logic that pertains to that. We just need to make sure we audit paginators on a regular basis and make sure we add them where needed.\n\nPR is updated.\n :shipit: Looks good.\n  The following worked in boto:\n\n```\nimport boto\now = boto.connect_opsworks()\n```\n\nSimilar methods fail in boto3 because of region selection:\n\n```\nimport boto3\now = boto3.resource('opsworks')  <-- raises NoRegionError\now = boto3.client('opsworks')    <-- raises NoRegionError\n```\n\nThe AWS OpsWorks UI does not allow region selection and defaults to us-east-1 just like boto. I believe boto3 should follow the guide here ;)\n I agree with your reasoning for services such as EC2 which creates resources in the region you are connected to. But OpsWorks is a different beast, no?\n\n`AWS OpsWorks supports only one endpoint, opsworks.us-east-1.amazonaws.com (HTTPS), so you must connect to that endpoint. You can then use the API to direct AWS OpsWorks to create stacks in any AWS Region.`\n\nUnlike EC2, OpsWorks lets you create stacks in any region, all the time. The only difference it would make is the latency of the calls, depending on where you are on the globe; there's no reason to be explicit in this case.\n I know this doesn't directly resolve your concern of having a default region but I thought I would share this anyways. In this blog post I describe how to setup the boto3 (botocore) session and set a default region.  http://russell.ballestrini.net/setting-region-programmatically-in-boto3/\n\nI've also started building out a class to manage boto3 client/resource objects in my botoform project: https://github.com/russellballestrini/botoform/blob/master/botoform/util.py#L3-L43\n Thanks for all the interest and discussion. I concur with @jamesls that in Boto3 you will (at least conceptually) have to specify a region. And it is easy, just use the region_name parameter.\n\n```\now = boto3.resource('opsworks', region_name='us-east-1')\now = boto3.client('opsworks', region_name='us-east-1')\n```\n\nAnd the reason is:\n1. \"even though OpsWorks is only in a single region currently, they could eventually be available in multiple regions.\" (quoted from @jamesls )\n2. Boto 3's API and its behavior has to be consistent across all AWS services. Region is still needed here, it is just that it happens you can only provide one value (for now).\n While OpsWorks currently has a single region, we don't know in the future if they'll ever add more. In fact, their endpoint contains a region name in it, which implies that it is either regionalized or at some point will be regionalized. Based on how most services at AWS have evolved, it is likely they will at some point regionalize. We have decided to heavily reduce the number of \"default\" regions for services to avoid this type of issue. It's a matter of future-proofing the SDK and helping customers make the right decision about which endpoint to call.\n While requiring a region is fine for this call, the docs for the boto3 opsworks client make no reference to supplying a region. Reference http://boto3.readthedocs.org/en/latest/reference/services/opsworks.html#client which has an example client creation with no region being specified. That's a bit confusing to new users...or at least was to this one. :smile:\n @mtdowling, I don't think this bug (or any other UX bug) should have been closed without customer consensus.  Your point about future endpoints is well taken, but there are services such as OpsWorks and Trusted Advisor which have never seen regionalization.  \n\nMoreover, users have to update aws-cli and Boto from time to time anyway to keep up with new services; and I think it's well understood that ensuring your client is up-to-date is a necessary troubleshooting step.\n Whenever there is only a single region available, if people are forced to punch it in, people will be tempted to hardcode it in... Is that better than having boto3 take a 'guess' at which one to use, if it makes no functional difference for that specific service?\n\nI totally agree with mandatory region selection when it makes a functional difference (EC2 is a good example). But when accessing a service that aggregates all regions such as opsworks, geolocalization should be used to determine the optimal endpoint to connect to. If you think about multiple teams in different regions working with the same scripts, the pieces kinda fit. You want each team to use the endpoint that's closer to them without them wiring special code and configuration files to support it.\n Am having strange issue. My instances are in ap-southeast-1 and opswork is in us-east-1. \n\nI can't get `create_deployment` method work .\n\nhttps://github.com/boto/boto3/issues/821\n\nAny help would be great here.\n  I have a larger inventory I need to download and keep getting timeouts or connection broken due to the size.  I tried breaking the download into smaller chunks using the range parameter, but it doesn't appear to affect the content length:\n\n``` python\n>>> inventory = job.get_output()\n>>> body = inventory['body']\n>>> body.__dict__\n{'_amount_read': 0, '_content_length': '230290333', '_raw_stream': <botocore.vendored.requests.packages.urllib3.response.HTTPResponse object at 0x2263dd0>}\n\n>>> inventory_chunk = job.get_output(range=\"Range: bytes=0-1048575\")\n>>> body_chunk = inventory_chunk['body']\n>>> body_chunk.__dict__\n{'_amount_read': 0, '_content_length': '230290333', '_raw_stream': <botocore.vendored.requests.packages.urllib3.response.HTTPResponse object at 0x2160790>}\n\n>>> inventory_chunk = job.get_output(range=\"Range: bytes=1024-2048\")\n>>> body_chunk = inventory_chunk['body']\n>>> body_chunk.__dict__\n{'_amount_read': 0, '_content_length': '230290333', '_raw_stream': <botocore.vendored.requests.packages.urllib3.response.HTTPResponse object at 0x2263f10>}\n>>> body_text = body_chunk.read()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.6/site-packages/botocore/response.py\", line 70, in read\n    chunk = self._raw_stream.read(amt)\n  File \"/usr/lib/python2.6/site-packages/botocore/vendored/requests/packages/urllib3/response.py\", line 271, in read\n    raise ProtocolError('Connection broken: %r' % e, e)\nbotocore.vendored.requests.packages.urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(3558772 bytes read, 226731561 more expected)', IncompleteRead(3558772 bytes read, 226731561 more expected))\n```\n Thank you, I'm kind of embarrassed I didn't just try that :(   I verified this works for me.   Thank you.\n    In boto there was a `trim_snapshot` method available on the EC2 connection object that assisted in managing EBS snapshot retention.  This doesn't appear to have made it into boto3.  Is this an intentional feature deprecation or is there a replacement planned?\n I believe we did not intentionally drop it. It is just that the trim_snapshot() is not a [native feature supported by the EC2 service api](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/OperationList-query.html), so by default it won't be available in Boto 3 or Botocore. We may consider add it as a customization which would ideally be available in both Boto 3 and CLI. I will mark it as a feature request here for now. But I am not able to comment on the timeframe, or even whether it would eventually be planned.\n\nMeanwhile, your options are:\n- Use boto side by side with Boto 3 to obtain that feature.\n- Somehow migrate [that functionality](https://github.com/boto/boto/blob/develop/boto/ec2/connection.py#L2559) into your code. It seems quite straightforward.\n I can move the code into my application but I'm sure other people will miss this method in boto3.  Is the project open to a PR from me for this or are customizations beyond the EC2 API not allowed at this time?\n  Model change looks fine. However, I think you should add it to version 2015-10-01 of the ec2 model because that is the latest.\n Thanks :ship:\n  A side note, there is a test failure in this PR, which is probably not caused by this commit. After address that, a rebase would be enough to trigger a new check and clean that out.\n  ```\nfor vpc in ec2.vpcs.all():\n    for route_table in vpc.route_tables.all():\n        print(route_table)\n        print(route_table.meta.client.create_route)\n        print(route_table.create_route)\n        print(route_table.meta.client.delete_route)\n        print(route_table.delete_route)\n```\n\n```\n<bound method EC2.create_route of <botocore.client.EC2 object at 0x7f7a723afdd8>>\n<bound method ec2.RouteTable.create_route of ec2.RouteTable(id='rtb-513cb835')>\n<bound method EC2.delete_route of <botocore.client.EC2 object at 0x7f7a723afdd8>>\nTraceback (most recent call last):\n  File \"./scripts/foo\", line 193, in <module>\n    print(route_table.delete_route)\nAttributeError: 'ec2.RouteTable' object has no attribute 'delete_route'\n```\n @kislyuk \nAgreed there should be some parity. I think `route_table.delete_route` is a reasonable interface. Feel free to submit a PR to our resource model for EC2 to add this. We can add it as well. If you have any other questions feel free to ask.\n I'm running into the same issue. \n\n```\n---> 29                 x = ec2_client.delete_route(RouteTableId=route_table.id,DestinationCidrBlock=route['DestinationCidrBlock'])\n     30                 print x\n     31 \nAttributeError: 'ec2.ServiceResource' object has no attribute 'delete_route'\n```\n ditto - quite annoying as I have to shell call the CLI to delete routes :(\n  So it turns out that once you're gone through all the events in the filter_log_events using nextToken, that the nextToken element in the response dict is simply not there, as opposed to set to a value that resolves to false.\n\nTherefore, a loop that looks like this:\n\n``` python\nres = cwl_client.filter_log_events(\n        logGroupName=lgn,\n        filterPattern=fp, interleaved=il)\nwhile res['nextToken']:\n    loops += 1\n    #if not loops % 20:\n    print(\"We are on loop\",loops)\n    #print(\"nextToken is\",nt)\n    res = cwl_client.filter_log_events(\n        logGroupName=lgn,\n        filterPattern=fp, nextToken = nt,interleaved=il)\n```\n\nwill exit with a keyError exception.\n\nInstead you have to:\n\n``` python\nnt = res['nextToken']\nwhile nt:\n    loops += 1\n    #if not loops % 20:\n    print(\"We are on loop\",loops)\n    #print(\"nextToken is\",nt)\n    res = cwl_client.filter_log_events(\n        logGroupName=lgn,\n        filterPattern=fp, nextToken = nt,interleaved=il)\n    if 'nextToken' in res:\n        nt = res['nextToken']\n    else:\n        nt = None\n```\n\nI expect this is a documentation issue, though perhaps the logic can be improved.\n\nIn any case, I can't find in the repo anywhere that this documentation is generated so I can submit a PR.  Where is it?\n Ah it's right there.  I missed it.  I think it would be worth adding some verbiage in the \"Response Structure\" part, for example:\n\nnextToken (string) --\n\nA pagination token obtained from a FilterLogEvents response to continue paginating the FilterLogEvents results.  _This key is omitted from the response when there are no further results for continued pagination._\n There is also the secondary question of, where is this content in the repo?\n Ah got it.  Automated documentation using the upstream definition.  Sounds familiar....  Thanks!\n  I am running into several problems when creating/deleting buckets in S3 using boto3.\n\nI have caught one of these problems involving the deletion of a bucket. The output is from py.test and clearly shows that the assert's value changed from false to true after the waiter had a chance to return.\n\n```\n    def delete(self):\n        \"\"\" Deletes the bucket \"\"\"\n        try:\n            self.bucket.load()\n            self.bucket.delete()\n        except:\n            pass\n        # sleep(1)\n        self._bucket = s3.Bucket(self.name)\n        self.bucket.wait_until_not_exists()\n>       assert not self.exists\nE       AssertionError: (assertion failed, but when it was re-run for printing intermediate values, it did not fail.  Suggestions: compute assert expression before the assert or use --assert=plain)\n```\n\n`self.bucket` is a s3.Bucket().\n\nHere's the `exists` code:\n\n```\n    @property\n    def exists(self):\n        try:\n            s3.meta.client.head_bucket(Bucket=self.name)\n            return True\n        except ClientError as e:\n            # If a client error is thrown, then check that it was a 404 error.\n            # If it was a 404 error, then the bucket does not exist.\n            error_code = int(e.response['Error']['Code'])\n            if error_code == 404:\n                return False\n```\n\nI also have the issue on creation. The following code have many extra measures to workaround the bug and i still get failures from time to time!!\n\n```\n    def create(self):\n        \"\"\" Creates the bucket \"\"\"\n        try:\n            if self.region == AWS_REGIONS['N.Virginia']:\n                s3.create_bucket(Bucket=self.name)\n            else:\n                s3.create_bucket(\n                    Bucket=self.name,\n                    CreateBucketConfiguration={'LocationConstraint': self.region})\n        except ClientError as ex:\n            if 'BucketAlreadyOwnedByYou' not in str(ex):\n                raise\n        sleep(1)\n        wait.until(lambda: self.exists)\n        self._bucket = s3.Bucket(self.name)\n        self.bucket.wait_until_exists()\n```\n\nThe `wait.until` call is a method that takes a lambda and returns when its value is positive.\n\nThe issue I encounter the most often is that after going through the `create` method, subsequent calls (such as `put_replication` and the likes) fail with a message indicating the bucket doesn't exist... and that, is very frustrating ;)\n\nI have encountered the issue even with \"sleep(2)\" in both the create and delete methods.\n Not so occasional on my end though :( It's easily in the 10% range.\n\nI will implement retry strategies for those occasions. Thanks for the input!\n  The documentation is confusing and raises more questions than it answers.\n\nI want to import a volume using Boto but I really cannot piece together the syntax required to do this using Boto 3.\n\nCould you _please please_ provide a full complete working example with nothing at all left out.\n\nthanks!\n Could you please provide a full working example for this:\n\nhttp://boto3.readthedocs.org/en/latest/reference/services/ec2.html?highlight=import%20volume#EC2.Client.import_volume\n\nQuestions:\nWhat is ImportManifestUrl exactly and how do I provide it?\nWhere exactly do I specify the volume to be uploaded?\n\nI'm really in the dark here.  It would be great to get a complete working example with nothing left out.\n\nthanks\n This old issue #202 can give you some hint.\n I would suggest using `import_image` or `import_snapshot` for your use case. It is the latest version for this type of functionality. Would that work for you? The hard part about the import_instance and import_volume is that is not documented well so trying to do it without something like the EC2 CLI can be difficult. I think the documentation should be updated though to at least to point to the recommended operations.\n At the moment for me personally http://boto3.readthedocs.org/en/latest/reference/services/ec2.html?highlight=import%20volume#EC2.Client.import_volume is not usable because there is no example of it working. If the authors of boto3 are able to make it work then it would be most helpful to see a complete example of it working.  Currently its effectively broken because there's not enough information in the documentation to make it work.\n  Executing `pip install boto3` downgrades `futures` to `2.2.0`.\n  When you use get_output() for an inventory, you get a 'body' that is a stream of some kind.\nWould be great if you could add a sample on how to access that. Aside from that its been straightforward using boto3!\n Yeah lets add this to the documentation as a new type the shows up for all parameter description and syntax examples. To at least suggest it is a file-like object that can be read from. Just saying it is bytes is not good enough here.\n That would be great, thank you !\n I think this now properly documented. It is now documented as a StreamingBody which you can read from. Closing issue.\n  http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySubnetAttribute.html\n\nI'm creating VPCs/subnets from scratch, and they default to having MapPublicIpOnLaunch off. I want to turn it on. It would be nice to be able to say:\n\n```\nsubnet.map_public_ip_on_launch = True\n```\n\ninstead of\n\n```\nsubnet.meta.client.modify_subnet_attribute(SubnetId=subnet.id, MapPublicIpOnLaunch={\"Value\": True})\n```\n Yeah this something we can add as well to the resource interface. I would envision it as a `subnet.modify_attribute` method. Like your other suggestion, feel free to send a PR for this one and ask us any other questions you may have. Otherwise, we will look into adding it. Should be fairly straight forward to add.\n was any PR/ work done in this area or still on the backlog?\n  As per this [SO thread](http://stackoverflow.com/questions/32764536/after-python-to-exe-conversion-botocore-exceptions-datanotfounderror). boto3 fails to create environment compatible with exe created with py2exe. Issue is with `session.get_data('_endpoints')`\n @rayleo, The hack you showed does well without hacking into library. But not solves the issue completely. \nWe need to do something more to make it run:\nFixing dynamically loaded library boto3.s3.inject \n      - import boto3.s3.inject into main module\n      - comment out '**import**(name)' from boto3\\utils.py\n      - re compile utils.py\nI guess, its not possible to apply external hack in this case. Library should fix this issue.\n py2exe is still missing module named s3.inject.\nMy setup.py:\n\n```\nsetup(\n        options = {\n            'py2exe': {\n                'optimize': 0,\n                'skip_archive': True,\n                'dll_excludes': ['crypt32.dll'],\n                'packages': ['docutils', 'urllib', 'httplib', 'HTMLParser', 'awscli', 'ConfigParser', 'xml.etree', 'pipes'],\n                }\n            },\n        console=['s3_uploader.py'],\n    )\n```\n\npy2exe builds exe without any errors. after I run  `s3_uploader.exe`\n`No module named s3.inject`\n\n**EXE runs without any issue, if I explicitly import boto3.s3.inject, either by setup options, or in main module**\n @jamesls being curious, why dont boto3 provides separate imports for each aws service, so that programmer will import only those sub-modules, which he needs.\n\nAnd one more doubt, can I embed data directory inside my EXE? Same for `cacert.pem`\n I encounter a similar issue while packaging my boto3 script to EXE with **pyinstaller**.\nDoes anybody have idea to package boto3 into EXE with **pyinstaller**?\n @yellowcards Take a look at [this answer](http://stackoverflow.com/a/32797946/4417818) which is about py2exe.\n How can I remove myself from this list?\u00a0\u00a0 Thx\n\n```\n  From: niLesh Akhade <notifications@github.com>\n```\n\n To: boto/boto3 boto3@noreply.github.com \n Sent: Wednesday, October 21, 2015 3:50 AM\n Subject: Re: [boto3] boto3 does not play nice with py2exe (#275)\n\nClosed #275.\u2014\nReply to this email directly or view it on GitHub.  \n  ```\n>>> import boto3\n>>> boto3.ec2\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: module 'boto3' has no attribute 'ec2'\n>>> boto3.resource('ec2').create_key_pair\n<bound method ResourceFactory._create_action.<locals>.do_action of ec2.ServiceResource()>\n>>> boto3.resource('ec2').delete_key_pair\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'ec2.ServiceResource' object has no attribute 'delete_key_pair'\n>>> boto3.resource('ec2').meta.client.delete_key_pair\n<bound method ClientCreator._create_api_method.<locals>._api_call of <botocore.client.EC2 object at 0x104721b00>>\n```\n So usually with the service resource, we typically only add operation that result in producing a new resource. Especially since ec2 has a lot of operations, this helps in discoverability of resources and functionality. To achieve the functionality that you are looking for using only the resource interface. You would have to first create the resource object and call its delete method. So something like this:\n\n``` py\nIn [1]: import boto3\n\nIn [2]: ec2 = boto3.resource('ec2')\n\nIn [3]: keypair = ec2.KeyPair('mykeypair')  # Note that no data is loaded here. Just a python object is created\n\nIn [4]: keypair.delete\nOut[9]: <bound method ec2.KeyPair.delete of ec2.KeyPair(name='mykeypair')>\n```\n\nLet me know if you have any further questions or comments.\n Thanks for the explanation. I would challenge the statement that \"this helps in discoverability of resources and functionality\". Generally I want to deal in resources, not clients. Resources give me the ability to write concise and elegant code without manually constructing inputs.\n\nBecause not all methods are available via resources, though, I'm forced to jump down to the client in arbitrary places where I happen to need to use a method that doesn't create a resource. IMO it's reasonable for resources to bind all methods that the API provides for them.\n To complete my thought, IMO discoverability is hurt, not helped, by the fact that these methods are not bound, since I'm seeing an incomplete list of methods if I'm just looking at the resource.\n Also, to meet you halfway, I do appreciate your example and the fact that I can construct an `ec2.KeyPair` and use its bound method. But that doesn't work when there is no resource representation for what I want to do (e.g. there is no SubnetAttribute for https://github.com/boto/boto3/issues/276 and no Route for https://github.com/boto/boto3/issues/283).\n @kislyuk \nThe other suggestions you had look good to me (they follow the general theme/pattern of resources). They just need to be added to the ec2 json resource model. You are welcome to send a PR to add them. Otherwise, we will look into adding them.\n\nIn general, if a resource is missing an operation that seems like it would belong on it, it is best to get it added to the resource as opposed to adding it to the service resource because the service resource at that point is just a super client (has all of the client methods with some extra subresources and collections and hurts discoverabilty especially when you have a large API like EC2 does).\n\nClosing out this issue and lets track the other features in the issues that you opened up.\n  :ship:\n  This is the final pull request in the series of pull requests that I have been making to add dynamically generated docstrings to clients and resources. I would recommend looking at this pull request last because it includes two previous pull requests, and thus makes it quite large.\n\nIn addition, I did a fair amount of refactoring of the resource factory code. With the waiter docstrings, I needed access to a waiter model and that really just added on to the really large signatures used throughout the factories. So I decided to shorten the signatures and make the arguments much more explicit to improve readability by reducing ambiguity. I shortened the signatures by introducing the concept of a `ServiceContext` where it is just a namedtuple of important information related to the service and adding many of the arguments to this new class. I did this because there was this pattern of where there were some objects that were needed for few spots in the code (and only for reading purposes), but due to the nature of how resources dangle off all other resources it needed to be passed to a dangling class so that it can be passed to other classes that may be generated from it. Thus this allows us to update the code such that if the factory needs any more information, we can add it to this context, instead of having to update the signatures and all of the spots the method is called.\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n Test pass, but the rebasing job was messy here. I would prefer to wait until the collections docstrings are merged. So I can clean this up a bit more.\n :shipit:\n  My infrastructure is using a lot of S3 interactions.\nPreviously in boto it randomly stucked  once per long week or two weeks on s3 upload forever without any kind of timeout or response (basically either on connection creation or upload file).\n\nAfter migration to boto3 problem disappeared for some period of time, but still appeared.\nAfter I updated botocore one week ago exception finally appeared on one of the boxes:\n\"Unable to parse response (syntax error: line 1, column 0), invalid XML received.\"\n\nAnything I can do with that? Is it time for Amazon ticket?\n I'd like to try to repro this.  It would be helpful if I can try to set up an environment as close to yours:\n- How many files are you uploading?\n- What's the average size of the objects being uploaded?\n- Linux?\n File size is pretty different from day to day, may be from 20KB to 2GB each file.\nupload_file is being executed only on single file with full absolute path (okay).\nAverage size of file is usually 1-10MB.\nOperating system is CentOS 6/7 (both boxes had a problem).\n\nI wasn't able to reproduce it with boto debug mode and infinite spam of connection creation for several days. Its possible that only upload_file with multipart upload might be part of problem.\n\nIn general it feels like amazon s3 goes downtime for one second, and then its back. But since timeout was never catched even by any kind of HTTP socket timeout configuration (boto config, python http socket config in-code), or implementation of signal based wrapper (unfortunately even that wasn't working properly, because its running in subprocess).\n We are seeing this as well. It happens on small or large upload requests, perhaps every few hundred requests. We have added an application level retry as a workaround.\n\n(The code snippet below enables KMS, which we also use.)\n\n```\ntransfer = boto3.s3.transfer.S3Transfer(s3_client)\nnum_retries = 2\nwhile True:\n    try:\n        transfer.upload_file(path, bucket, key,\n                             extra_args={'ServerSideEncryption': 'aws:kms'})\n        break\n    except boto3.exceptions.S3UploadFailedError as e:\n        if num_retries == 0:\n            raise\n        print('Retrying failed S3 upload.', e, file=sys.stderr)\n        num_retries -= 1\n```\n Actually this issue stopped happening to me awhile ago. I may assume boto3/botocore got patched or amazon s3 became better. In general I just decreased amount of interactions with s3 to avoid possible issues.\n  So this is dependent on a bunch of pending PR's. So I would recommend looking at the botocore docstring PR's first and the action/identifier/attr/references/subresources boto3 docstring PR before looking at this one. Just wanted to put this PR out there.\n\nThis PR adds docstrings to collection methods: `all`, `filter`, `page_size`, `limit` and added a docstring to the collection dangled off of a resource (i.e. `s3.buckets`)\n\ncc @jamesls @mtdowling @rayluo @JordonPhillips \n @jamesls Rebased. Good to look at now.\n  Hi, I am very new with boto/boto3. First of all, thank you for all developers contributing efforts to support this great library.\n\nOne thing I found is Amazon MWS has been supported from boto, but couldn't find one from boto3. Do you guys have any plan to support the services?\n I would also like to inquire about plans for MWS support in boto3.\n Hi, I am also interested for having the support of MWS into boto3. :+1: \n @rayluo if there's interest from the boto3 maintainers I would be happy to work on Amazon MWS support in boto3.  Just want to make sure it's a direction you want to go before starting any work. @tomhogans Please contact @kyleknap for comments. It would be nice to have MWS support in boto3! One more vote + Agreed! +1 +1 +1 +1  Boto3 client connects to a RIAK CS Server (not s3.amazonaws.com).\nI can browse the buckets but I can not see the contained objects inside.\nIt seems that the defined \"endpoint_url\" only works until the bucket level.\nI see in CNTLM that bucket.objects.all() fails because it connects to bucket.s3.amazonaws.com, not using the specified endpoint_url...\n\nHere is the code I use:\n\nimport boto3\nresource = session.resource('s3', \n                        endpoint_url = 'https://riakcs....',\n                        aws_access_key_id='xxx...', \n                        aws_secret_access_key='yyy...')\n# list all buckets (OK)\n\nfor bucket in resource.buckets.all():\n        print(bucket.name)\n# see a bucket (OK)\n\nbucket = resource.Bucket('mybucket')\nbucket\n# list objects of a bucket (NOK)\n\nfor o in bucket.objects.all():\n    print (o)\n Hi Rayluo,\n\nthanks a lot for the very quick and perfect answer! \nSorry for not replying earlier.\nIndeed, It works :-)\n @rayluo I can also confirm your workaround indeed works, but isn't it merged into master as a fix? or is it bureaucratic reaons since this project is backed by Amazon and Amazon doesn't want to support non-Amazon services?\n\nhttps://github.com/boto/boto#services  Boto2 still has good support of many non-Amazon services, maybe boto3 never want to support those?\n if a user intentionally put `endpoint_url` why does Boto3 automatically change ... ? is that definitely a bug deserve a fix ?\n Yeah its arguably a bug, but we would need to make sure in changing this we do not break anybody relying on this behavior. In the meantime, I would recommend using `addressing_style` in the `s3` option of `Config` to properly use the endpoint url.\n\n``` py\nimport boto3\nfrom boto3.session import Config\n\nimport boto3\ns3 = boto3.client(\n    's3', endpoint_url='https://foo.com',\n    config=Config(s3={'addressing_style': 'virtual'})\n)\n\ns3.list_objects(Bucket='mybucket')\n```\n\nThat will use the virtual style of addressing. If you need the path style of addressing, just specify `\"path\"` instead.\n as I suggested a fix in https://github.com/boto/botocore/commit/4c043070a9c7af7e057e6da43ece9641113fa9c8#commitcomment-16853663 could somebody make a simple fix in `fix_s3_host` to remove that hard coded `s3.amazonaws.com` ?\n Possibly. We would have to investigate. There may be other things we have to consider such as if the endpoint does not resolve to `s3.amazonaws.com` but one of the regional s3 endpoints because that would result in requests to s3 not being redirected appropriately if the incorrect region is provided.\n\nAlso, feel free to contribute as well.\n I can verify if I remove that hard coded `, 's3.amazon.com'` parameter in that fix_s3_host then it works well with virtual_host_style bucket-name in hostname part,\nhttps://github.com/boto/botocore/blob/develop/botocore/utils.py#L649\n\ndo you want me to make such a PR to botocore with only one line change, like:\n\n``` python\n #    def fix_s3_host(request, signature_version, region_name, **kwargs):\n    \"\"\"\n    This handler looks at S3 requests just before they are signed.\n    If there is a bucket name on the path (true for everything except\n    ListAllBuckets) it checks to see if that bucket name conforms to\n    the DNS naming conventions.  If it does, it alters the request to\n    use ``virtual hosting`` style addressing rather than ``path-style``\n    addressing.  This allows us to avoid 301 redirects for all\n    bucket names that can be CNAME'd.\n    \"\"\"\n\n     try:\n         switch_to_virtual_host_style(\n-            request, signature_version, 's3.amazonaws.com')\n+            request, signature_version)\n     except InvalidDNSNameError as e:\n         bucket_name = e.kwargs['bucket_name']\n         logger.debug('Not changing URI, bucket is not DNS compatible: %s',\n                      bucket_name)\n```\n Why was this closed?\r\n\r\nThis would be really nice if it was merged...\r\nEncountering a similar problem when trying to use minio (s3 compatible service) with scrapy.  http://boto3.readthedocs.org/en/latest/guide/migrations3.html\n\nas per the above documentation i got error\n\nhere is my code\n\nimport  boto3\n\nbucket = s3.Bucket('my-bucket')\nfor x in bucket.objects.all():\n    if x.key == \"assets/js/dev.js\":\n        x.put(Metadata={'Expires': 'Sun, 29 Mar 2020 00:00:00 GMT'})\n        print(x.metadata['Expires'])\n        x.put(ACL='public-read')\n\nerror\nAttributeError: 's3.ObjectSummary' object has no attribute 'metadata'\n [`bucket.objects.all()`](http://boto3.readthedocs.org/en/latest/reference/services/s3.html#S3.Bucket.objects) returns a collection of [`s3.ObjectSummary`](http://boto3.readthedocs.org/en/latest/reference/services/s3.html#objectsummary) which has the full [`s3.Object`](http://boto3.readthedocs.org/en/latest/reference/services/s3.html#object) as a sub-resource. The issue in this case is that the `s3.ObjectSummary` does not have the `metadata` attribute. You can access the `s3.Object` sub-resource by calling `.Object()` on your `s3.ObjectSummary`. An updated version of your code might look like the following:\n\n``` python\nimport boto3\nimport datetime\n\nKEY = 'YOUR-KEY'\nBUCKET = 'YOUR-BUCKET'\n\ns3 = boto3.resource('s3')\nbucket = s3.Bucket(BUCKET)\nexpire_time = datetime.datetime.now() + datetime.timedelta(days=5)\n\nfor summary in bucket.objects.all():\n    if summary.key == KEY:\n        target_object = summary.Object()\n        target_object.put(Expires=expire_time)\n        print(target_object.expires)\n```\n\nCould you try that out and let me know if you're still having problems?\n\nAdditionally, if you know the name and bucket of the object before hand, it is simpler to access it with `s3.Object(BUCKET, KEY)` or `bucket.Object(KEY)`.\n Closing for now. Please reopen if you have any more information as we have not been able to reproduce.\n @JordonPhillips \n\n\"Could you try that out and let me know if you're still having problems?\"\nResulting file size is 0\n\nIf I run the following code, all the files have 0 filesize.\n\n<pre>\ns3 = boto3.resource('s3')\ncckey = 'cache-control'\ncache_time = one_month\nfor obj in bucket.objects.all():\n       if  obj.size == 0: # continue on directories\n            continue\n      object = obj.Object()\n      object.put(Metadata={cckey :  ('max-age=%d, public' % (cache_time)) })\n</pre>\n @JordonPhillips +1\n @ediston Were you able to figure this out?  I'm noticing the same 0 file size issue.\r\n\r\nWhen I try to open one of my files in a separate tab the tab opens then immediately closes.  After which point, chrome downloads the file.  When I try to open the downloaded file it is empty.\r\n\r\nIt is not clear why setting cache-control causes this behavior. @nueverest \r\n\r\nThis must help: http://www.dhimanvivek.com/boto/s3-add-metadata-cache-control-header-to-key\r\n  :shipit:\n  Hey,\n\nSorry for treating this as a mailing list, I didn't see any other method for contact, so I went ahead and opened an issue.\n\nI'm trying to use boto3 to upload files uploaded to PyPI to S3. The majority of these files will be < 60MB but a handful of them will be larger (up to a few hundred MB in size). I'm trying to figure out what the right interface to use to do this is. Right now, in PyPI we have a streaming upload from the client along with the expected MD5 hash of the entire file once it's been uploaded. I'm wondering if I can do something like:\n\n``` python\n\nimport hashlib\n\nclass HashingFileWrapper:\n\n    def __init__(self, wrapped, md5_hash):\n        self.wrapped = wrapped\n        self.md5_hash = md5_hash\n        self.hash_ctx = hashlib.md5()\n\n    def read(self, *args, **kwargs):\n        chunk = self.read(*args, **kwargs)\n        self.hash_ctx.update(chunk)\n        if not chunk:\n            if self.hash_ctx.hexdigest() != self.md5_hash:\n                raise ValueError(\"Hash Does Not Match\")\n\n\nmy_s3_object.put(\n    Body=HashingFileWrapper(file_like_object, md5_hash),\n    ContentLength=file_size,\n    ContentMD5=md5_hash,\n)\n```\n\nWill that stream it up to S3 without buffering the whole file in memory? If not, is my only option to buffer the data to a temporary file and then use the `my_s3_object.upload_file()` interface?\n Does it? It was documented as taking bytes so I wasn't sure if it was going to read the entire file object into memory and then upload it, or upload it streaming without loading the whole thing into memory. I'd normally just look at the code, but the auto generated nature of these libs makes that hard to do. Do I need to use the low level interface to get streaming, or does using the put method on a boto3 `Object` work too?\n It looks like `S3Transfer` only supports uploading a file that is currently on disk since you have to pass it a filename, is that accurate?\n Cool, thanks!\n So afaik put_object does not work with a non-seekable stream... which makes me sad.\n Sad, but true. Seekable input stream is needed when a chunk of uploading to S3 fails and Boto needs to rewind and retry.\n Hi rayluo ,\nCan we send actual data buffer as parameters instead of filename to upload_file () in boto3 ? \n\nWith put_object(), I am suffering with high memory footprint. Is there something cleanup call which I am missing after put_object() call ?    \n @amarpatil5060 make sure to `close` the File-like object after the upload has finished, otherwise it's memory buffer will remain Hi guys,\r\nI'm trying to do something like this:\r\n\r\n1. Download an S3 file into a `BytesIO` stream\r\n2. Pipe that stream through a `subprocess.Popen` shell command and its result back into another `BytesIO` stream\r\n3. Use that output stream to feed an upload to S3\r\n4. Return *only* after the upload was successful\r\n\r\nSo it's non-seekable, it happens in parallel and might need to wait for input to come in, and I don't know the size of the data.\r\n\r\nI'm trying to do this with the two `S3.Client.*load_fileobj()` methods, but not sure how to block until the upload is complete. Any ideas?\r\n\r\nThe accompanying Stack Overflow question is here: http://stackoverflow.com/questions/42382693/boto3-wait-for-s3-streaming-upload-to-complete\r\n\r\nThanks!\r\nMax I was just digging into the source code and realized that the `*load_fileobj()` all block until the transfer is completed! See e.g. [here](https://github.com/boto/boto3/blob/2d1d6301a3059ac65840ff4a39b540e6f9349dcc/boto3/s3/inject.py#L566).\r\n\r\nIn my case, I actually want more control over that. There's no point in streaming the whole thing through so many pipes if I block right after the first stream comes in. That would just mean everything got stored in memory and the next element of the pipeline has to wait.\r\n\r\nI will probably copy and modify the functions so the future is returned to the caller, and they are free to resolve it any time they want. That should work in combination with my streams. But it would be great of boto3 to support this via a parameter, e.g. if the user passes `block=False`, instead of the result, the promise is returned.  Definitely would love to have resource waiter for volumes. Much prefer something like this:\n\n```\nresp = v.attach_to_instance(\n  InstanceId=instance_id,\n  Device=dev,\n)\nv.wait_until_in_use()\n```\n\nto \n\n```\nclient = boto3.client('ec2', region_name=\"us-west-1\")\nwaiter = client.get_waiter('volume_in_use')\nwaiter.wait( VolumeIds=[v.id] )\n```\n\nIf I can find an example of this type of integration of EC2.Waiter into a resource, I'll try to pattern a PR on that.\n  I need a simple way to watch the status of a network interface detaching and becoming available.\n  After I call a function \n`client.complete_multipart_upload(vaultName=vault_name, uploadId=upload_id, archiveSize=str(fsize))`\nI get an error:\n\n```\nTraceback (most recent call last):\n  File \"./awstools.py\", line 92, in <module>\n    response = client.complete_multipart_upload(vaultName=vault_name, uploadId=upload_id, archiveSize=str(fsize))\n  File \"/home/user/work/python/aws-tools/env/lib/python3.5/site-packages/botocore/client.py\", line 269, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/home/user/work/python/aws-tools/env/lib/python3.5/site-packages/botocore/client.py\", line 323, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (MissingParameterValueException) when calling the CompleteMultipartUpload operation: Required parameter missing: x-amz-sha256-tree-hash\n```\n\nBut the documentation says:\n`\nchecksum (string) -- The SHA256 tree hash of the entire archive. ...\nPlease note that this parameter is automatically populated if it is not provided. Including this parameter is not required.\n`\nFunction description: http://boto3.readthedocs.org/en/latest/reference/services/glacier.html#Glacier.Client.complete_multipart_upload\n Thank you for you message. I didn't know about `botocore.utils.calculate_tree_hash`\n  Documentation states:\n\n`\n{\n    'StackSummaries': [\n        {\n            'StackId': 'string',\n            'StackName': 'string',\n            'TemplateDescription': 'string',\n            'CreationTime': datetime(2015, 1, 1),\n            'LastUpdatedTime': datetime(2015, 1, 1),\n            'DeletionTime': datetime(2015, 1, 1),\n            'StackStatus': 'CREATE_IN_PROGRESS'|'CREATE_FAILED'|'CREATE_COMPLETE'|'ROLLBACK_IN_PROGRESS'|'ROLLBACK_FAILED'|'ROLLBACK_COMPLETE'|'DELETE_IN_PROGRESS'|'DELETE_FAILED'|'DELETE_COMPLETE'|'UPDATE_IN_PROGRESS'|'UPDATE_COMPLETE_CLEANUP_IN_PROGRESS'|'UPDATE_COMPLETE'|'UPDATE_ROLLBACK_IN_PROGRESS'|'UPDATE_ROLLBACK_FAILED'|'UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS'|'UPDATE_ROLLBACK_COMPLETE',\n            'StackStatusReason': 'string'\n        },\n    ],\n    'NextToken': 'string'\n}\n`\n\nBut , there is no NextToken returned in the response.\n\nI expect that sometimes NextToken will be empty , '', or even None (?) but with no dict element, we see KeyError sometimes, and sometimes not.\n\nDocumentation suggests that NextToken should always be present, but sometimes empty.\n  The error response does not contain the key `Message`, here is the rough outline:\n\n``` !python\n>>> import pdb\n>>> import boto3\n>>> boto3.__version__\n'1.1.3'\n>>> rds = boto3.client('rds')\n>>> r2 = rds.list_tags_for_resource(ResourceName='arn:aws:rds:az:acc:db:name')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 276, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 341, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/exceptions.py\", line 300, in __init__\n    error_message=error_response['Error']['Message'],\nKeyError: 'Message'\n>>> try:\n...   r2 = rds.list_tags_for_resource(ResourceName='arn:aws:rds:az:acc:db:name')\n... except:\n...   pdb.post_mortem()\n... \n> /usr/local/lib/python2.7/dist-packages/botocore/exceptions.py(300)__init__()\n-> error_message=error_response['Error']['Message'],\n(Pdb) p error_response\n{'ResponseMetadata': {'HTTPStatusCode': 403, 'RequestId': 'id'}, 'Error': {'Code': 'AccessDenied', 'Type': 'Sender'}}\n```\n\nThe IAM user is with the `arn:aws:iam::aws:policy/AdministratorAccess` enabled, I don't think it is a authorization problem, probably I typed a wrong `arn`.\n\nUpdate: I found my error, instead of typing `arn:aws:rds:<region>` I typed `arn:aws:rds:<availability_zone>`.\n  I have noticed that there is no resouces-1.json model for CodeDeploy in the latest version of boto3. Any plans to build one soon? Is there any (detailed hopefully) documentation about how one might go about building the model?\n  This is a fix for #195. When attempting to detect lists, the path for the method was being examined instead of the path for the resource.\n The PR looks good. I had one comment that will help fix some other issues with not displaying in the docs that a list of resource is returned.\n I updated the branch to address the extra edge cases. I abstracted out the collection detection logic into a hidden method, though I am unsure if that should be in `method.py` or `utils.py`. I left it in `method.py`, as that seemed best to me. I also updated the collections test case to properly verify collections are returned.\n Looks better. Had a couple of comments. Also I would not worry too much about the coveralls check not running. Looks like coveralls is down. \n Looks good. :ship:. I do not know what is up with coveralls, but tests pass so it should be good to merge.\n  Before you could switch out the identifiers on a resource, which can have unintended affects if you switch the identifier and then make subsequent calls with the resource. Now identifiers are read-only, much like how attributes are read-only:\n\n``` py\nIn [1]: import boto3\n\nIn [2]: s3 = boto3.resource('s3')\n\nIn [3]: bucket = s3.Bucket('mybucketfoo')\n\nIn [4]: bucket.name = 'foo'\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-4-5d85c15550cd> in <module>()\n----> 1 bucket.name = 'foo'\n\nAttributeError: can't set attribute\n\n```\n\ncc @jamesls @mtdowling @rayluo \n Just had a question about a failure case, otherwise looks good.\n :shipit:\n  When I try to create and use an S3 bucket with \".\" in the name, all subsequent requests to that bucket raise an exception. A simple example:\n\n```\nPython 3.4.3 (default, Jul 13 2015, 12:18:23)\n[GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.53)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import boto3\n>>> s3=boto3.resource(\"s3\")\n>>>\n>>> bucket = s3.Bucket('logforwardertestbucket')\n>>> bucket.create(CreateBucketConfiguration={'LocationConstraint':'us-west-2'})\n{'Location': 'http://logforwardertestbucket.s3.amazonaws.com/', 'ResponseMetadata': {'RequestId': '0942BF2E1332AA83', 'HostId': 'Ofw7UeAwdWJaNEym7O0NM9r4Lf6017GJsTiaMy0SaNE8z6gYwiiLjxV1Y5KAkBz4', 'HTTPStatusCode': 200}}\n>>> bucket.delete()\n{'ResponseMetadata': {'RequestId': '52B9BA742B803D06', 'HostId': 'wZY2ExKV4YhJGqsAU4CMO1674cmDyJRHPNwvXvjNWeYThrySwq/vFRGyMHxyu/ZCxuaB7A9gDMo=', 'HTTPStatusCode': 204}}\n>>>\n>>> bucket = s3.Bucket('testing.dotsinbucket')\n>>> bucket.create(CreateBucketConfiguration={'LocationConstraint':'us-west-2'})\n{'Location': 'http://testing.dotsinbucket.s3.amazonaws.com/', 'ResponseMetadata': {'RequestId': '3CF8FAC0FBA47F1C', 'HostId': 'sZahEm+AVWHOd1YTQotg2GBCFQhUENaOMl4YeUSLX3ZzBx7H53pTU7z6RJdEfBvx', 'HTTPStatusCode': 200}}\n>>> bucket.delete()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.4/site-packages/boto3/resources/factory.py\", line 344, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.4/site-packages/boto3/resources/action.py\", line 77, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python3.4/site-packages/botocore/client.py\", line 276, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python3.4/site-packages/botocore/client.py\", line 341, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (PermanentRedirect) when calling the DeleteBucket operation: The bucket you are attempting to access must be addressed using the specified endpoint. Please send all future requests to this endpoint.\n```\n\nThe above was done on boto3 version 1.1.3.\n I get the same error. Tested with Python 3.4.3, (botocore 1.1.2, and boto3 1.1.0), and (botocore 1.2.0 and boto3 1.1.3).\n\n_However_, setting up the client with `s3 = boto3.resource('s3', region='us-west-2')` allows the `delete()` call to succeed.\n @rayluo I'm on botocore 1.2.0 and boto3 1.1.3, python 3.4.3 (as shown above). I just reproduced the behavior again with this stack to verify that nothing had changed since I posted the issue.\n Thanks, Ray. It's not clear to me why this is an issue for the user to work around. Perhaps the bug isn't that we get a traceback from the delete(), it's that the API is asymmetric/inconsistent. Is this documented somewhere? If it's not something that can be fixed in the SDK, should we file a ticket with AWS?\n Is there a way to operate a buckets '.' in the name with the client, i get the error code perm redirect with a different endpoint, but the endpoint isn't valid ie. on response redirect i try reconstructing a new session/client targetted towards the redirect endpoint ala\n\n```\n            s = Session()\n            c = s.client(\n                's3', region_name=\"us-east-1\",\n                endpoint_url=\"https://%s\" % e.response['Error']['Endpoint'])\n```\n\nbut invoking a method on the client here returns a separate error\n\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/client.py\", line 269, in _api_call\nreturn self._make_api_call(operation_name, kwargs)\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/client.py\", line 312, in _make_api_call\noperation_model, request_dict)\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/endpoint.py\", line 110, in make_request\nreturn self._send_request(request_dict, operation_model)\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/endpoint.py\", line 139, in _send_request\nsuccess_response, exception):\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/endpoint.py\", line 203, in _needs_retry\ncaught_exception=caught_exception)\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/hooks.py\", line 226, in emit\nreturn self._emit(event_name, kwargs)\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/hooks.py\", line 209, in _emit\nresponse = handler(**kwargs)\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/retryhandler.py\", line 183, in __call__\nif self._checker(attempts, response, caught_exception):\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/retryhandler.py\", line 250, in __call__\ncaught_exception)\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/retryhandler.py\", line 273, in _should_retry\nreturn self._checker(attempt_number, response, caught_exception)\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/retryhandler.py\", line 313, in __call__\ncaught_exception)\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/retryhandler.py\", line 222, in **call**\nreturn self._check_caught_exception(attempt_number, caught_exception)\nFile \"/home/kapil/s3check/lib/python2.7/site-packages/botocore/retryhandler.py\", line 355, in _check_caught_exception\nraise caught_exception\nbotocore.vendored.requests.exceptions.SSLError: hostname 'transaction.receipts.s3.amazonaws.com' doesn't match either of '*.s3.amazonaws.com', 's3.amazonaws.com'       \n This suggestion seems to throw an error.\n\n<pre>\nimport boto3\ns3 = session.resource('s3')\nregion_name = s3.get_bucket_location(Bucket=myBucketName)['LocationConstraint']\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-76-37de24c41b4b> in <module>()\n      1 import boto3\n      2 s3 = session.resource('s3')\n----> 3 region_name = s3.get_bucket_location(Bucket=myBucketName)['LocationConstraint']\nAttributeError: 's3.ServiceResource' object has no attribute 'get_bucket_location'\n</pre>\n I got the same error. \n\nAny news?\n\ntks\n  :shipit:  Looks good!\n It looks good to me. Had a little nit picky comment about the docstrings. I felt that it would be good to build up to help the exposure of these methods as they will show up in the html along with its docstrings in the list of available actions for the Bucket and Key. Otherwise, :ship: \n What is the issue related to the CI error?\n We generally don't merge things unless the travis builds pass.  Wouldn't rebasing against develop get the builds passing?\n\nOnce you're able to get travis passing feel free to merge.\n @jamesls \nRebasing will not help. The tests in boto3 need to get updated because it relies on output for documentation that was changed in botocore. I address it in this PR: https://github.com/boto/boto3/pull/239. But in the meantime, we should get a PR in soon that updates the test if it is going to take a while to review the resource docstring PR. The updates are minor. I think @rayluo is working on one.\n Looks good to merge. I would not worry about the coveralls check not running.\n :shipit:\n  This adds lazy loaded docstrings to resource actions and sub-resources. Note that I still have yet to add docstrings identifiers, attributes, collections, and resource waiters. I just figured that splitting the work up a bit would be easier to review. There are a lot of moving parts so I figured to break it up to make it easier to follow and track feedback updates. Here are some examples of what you can do now:\n\n``` py\nimport boto3\n\nec2 = boto3.resource('ec2')\ninstance = ec2.Instance('Id')\n\n# Sub-resource\nhelp(ec2.Instance)\n# Load action\nhelp(instance.load)\n# Action         \nhelp(instance.start)\n```\n\nNote that the tests won't pass till this PR gets merged: https://github.com/boto/botocore/pull/642\n\ncc @jamesls @mtdowling @rayluo \n The most recent updates add docstrings to identifiers, attributes, and references. Note that tests still won't pass until all of the botocore docstring PRs are merged. \n Cool. Since all of the botocore docstrings have been merged, this should be good to get reviewed. No longer relying on any outstanding PRs.\n Looks good, just had a few comments.\n @jamesls I updated based on feedback. I did have a comment on exposing more methods on the boto3 session. I feel we should talk more about if the methods that we would need to expose to prevent accessing the `_session` attribute of a boto3 session is worth adding or if it is something we would want to expose. A fair amount of the methods that I do use on the botocore session are in the grey area in terms of what is deemed internal and what is external.\n  While I was on this page:  https://boto3.readthedocs.org/en/latest/reference/services/iam.html#paginators\n\nI expanded the menu in the lower left hand corner and clicked \"On GitHub: edit\" and got the GH 404 page.\n\nThe same thing happens when I clicked the \"view\" link.\n\nThe respective URLs are\nhttps://github.com/boto/boto3/edit/develop/docs/source/reference/services/iam.rst\n\nand\n\nhttps://github.com/boto/boto3/blob/develop/docs/source/reference/services/iam.rst\n So the change I was thinking about is to fix all the instances where the\narticle \"a\" to \"an\" is used before a module component that also starts with\n\"a.\"\n\nFor example, change\n\nReturns\n\nA AccountPasswordPolicy resourca\n\nto\nReturns\n\nAn AccountPasswordPolicy resource\n\nOn Mon, Aug 31, 2015 at 4:37 PM, Ray Luo notifications@github.com wrote:\n\n> That is because most of the service documents do not physically exist in\n> this repo in the form of rst files. They are generated by the doc module\n> https://github.com/boto/boto3/tree/develop/boto3/docs based on service\n> model definitions. In this sense, that ReadTheDocs menu is somewhat\n> misleading. We may need to check if we can adjust that menu to avoid\n> confusion.\n> \n> Meanwhile, do you have a specific need to change the IAM document? If it\n> is about the doc content, we will need to relay it to the upstream service\n> team and/or doc team. If it is about the doc format, you may be able to\n> change it through the aforementioned doc module, and send out a PR.\n> \n> Feel free to comment on this thread. We will see what we can do.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/boto/boto3/issues/232#issuecomment-136492160.\n So that change falls under the doc format option. We would have to update how we generate the documentation. More specifically, that change needs to happen in this [line](https://github.com/boto/boto3/blob/develop/boto3/docs/method.py#L46) of the doc generator. Feel free to submit a pull request to fix it.\n Done.  Please see https://github.com/boto/boto3/pull/236.\n  Here's one example of the error:\n\nhttp://boto3.readthedocs.org/en/latest/reference/services/iam.html#IAM.RolePolicy.policy_document\n\nThe documentation says a string is returned. Actually, a dict is returned. It's okay to have a dict created from the json, I guess. However, I also cannot use that dict directly with the following API:\n\nhttp://boto3.readthedocs.org/en/latest/reference/services/iam.html#IAM.RolePolicy.put\n\nI have to wrap the dict with json.dumps() to get it to be the string that the put() method wants for the PolicyDocument arg.\n\nThis is confusing, and it would be nice if I could just pass the dict or if the return of the policy_document attribute were actually a string.\n Making sure that the attribute is a JSON string would difficult to do because that is represented as a dictionary in IAM's API, and it also would be a breaking change if we did change it to a string.\n\nAs to the documentation, it is incorrectly labeled a string. We will look into updating it. \n Is there any way to get at that string so that I can pass it to the IAM.RolePolicy.puIs method without having to re-encode it in json?\n\nThis automatic parsing is kinda terrible for any use case that can treat the string as a opaque value.\n\nMaybe it would make more sense to turn the policy_document into an object that has methods for getting the string or the dict depending on whats appropriate?\n I just ran into this as well, after fighting with PutGroupPolicy complaining about syntax errors; I know the string I'm passing is a valid policy document, because I copied it directly from the IAM policy in the AWS console. Is it also possible that the PolicyDocument parameter to PutGroupPolicy expects a dict, and not a string?\n Well, since I commented here I've successfully run my Python script dozens of times, and it put inline policies into groups without any trouble; it supplies the policy to the create_policy() function on the Group as a 'dict'. Presumably this gets automatically converted to a string somewhere in the process.\r\n  When I do something like:\n\n```\nclient = boto3.client(\"sqs\", \"us-west-1\")\nresponse = client.get_queue_url(QueueName=\"queue_name\")\nprint response[\"QueueUrl\"]\n```\n\nthe URL i get is of the form: `https://us-west-1.queue.amazonaws.com/<account_id>/<queue_name>`.\n\nBut according to the docs here: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/ImportantIdentifiers.html, the queue url should be of the form:\n`http://sqs.us-east-1.amazonaws.com/123456789012/queue2`.\n\nThis makes things very confusing... was the queue url format recently changed?\n No I do not think the queue url format changed. The difference is that the one in the example you linked is a queue in the `us-east-1` region and the one you are getting is located in the `us-west-1` region, which has a different queue url format than `us-east-1` queues.\n\nLet me know if you have any more questions.\n  - Fixed typo in DynamoDB exception class name.\n- Fixed tests.\n- Provided alias for backward compatibility.\n We should definitely get this fixed.  Only question is whether it's worth aliasing the typo'd exception for backwards compatibility.  I could go either way on that second point.\n\n@kyleknap - thoughts?\n Ok, guys, I added alias.\nBut IMHO this is not such case when there's a need to provide aliases.\nThis is bug, not sort of deprecated thing.\n :shipit: Looks good to me.\n @jamesls \nThe error is there for validation purposes. It tells you that the condition you tried to use cannot be used. I am having trouble imagining someone trying to catch this exception specifically because you really cannot do anything with the error or have logic that relies on that error being thrown because you have to physically fix your condition statement in order to even be able to make a successful call.\n\nHowever, I suppose if you are building an application on top of the dynamodb library, and you wanted to modify the message sent back for these validations to the user that would break the application. As much as I really do not like that spelling mistake in there it is the right thing to alias it for backwards compatibility and deprecate it (since it is a bug/mistake) as @rayluo mentioned, and which I noticed @pankshok you already made.\n\nThanks for the catch. Merging.\n  When calling generate_presigned_url on a s3 resource, the resulting calls are 3x as slow as the boto2 equivalent... \n\n``` python\nIn [1]: import timeit\nIn [7]: setup = '''\n   ...: import boto3\n   ...: from boto.s3.connection import S3Connection\n   ...: b3_conn = boto3.client('s3')\n   ...: b2_conn = S3Connection(None, None)\n   ...: '''\nIn [13]: print min(timeit.Timer('b2_conn.generate_url(3600, \"GET\", bucket=\"foo-bucket\", key=\"foo-key\", query_auth=True)', setup=setup).repeat(7, 10000))\n1.95865702629\nIn [14]: print min(timeit.Timer('b3_conn.generate_presigned_url(\"get_object\", Params={\"Bucket\": \"foo-bucket\", \"Key\": \"foo-key\"}, ExpiresIn=3600, HttpMethod=\"GET\")', setup=setup).repeat(7, 10000))\n5.69024801254\n```\n\nThis was run on c3.xlarge instances in us-west-2.\n @adepue Quick question, is your use case that you're generating a large number of these presigned URLs all at once?  From the output above, generating a presigned URL in boto3 looks like it takes 5.69024801254 /10000 or about 0.57 milliseconds which comes out to a rate of 1757 presigned urls per second vs. boto2's 5105 presigned urls a second.  We'll look at improving the speed in boto3, but it would be helpful to understand how you're currently using the presigner.\n I was generating 12 to 16 of these per page render for links to thumbnail images stored in s3. Under load, with 32 web server processes running on a machine, this generated significant load increase.\n Any news on this? boto3 generate_presigned_url is quite slow to generate bulk urls.\n any news on this issue ?\r\n  I am using the boto3 api to with IAM and Cloudwatch. I am collecting data with IAM and then pushing it to a custom metric using the cloudwatch client but am receiving the error: raise ClientError(parsed_response, operation_name). However, this error only happens once (the first time) I run this script everyday. I believe it may be a configuration or authentication error but I have been unable to get to the root of the cause.\n\nMy configurations:\n\nSetup for IAM \niam = boto3.client('iam',region_name=\"us-east-1\")\n\naws_access_key_id = Keys.aws_access_key_id\naws_secret_access_key = Keys.aws_secret_access_key\n\nSetup for Cloudwatch\ncloudwatch = boto3.client('cloudwatch',region_name=\"us-east-1\")\n\naws_access_key_id = Keys.aws_access_key_id\naws_secret_access_key = Keys.aws_secret_access_key\n My code is in 3 parts, 2 parts are simple processing data from github and IAM API calls and the third is the put request to cloudwatch (custom metric):\n\n## Part 1\n\n Setup for IAM Credential Report GET Request\niam = boto3.client('iam',region_name=\"us-east-1\")\n\naws_access_key_id = Keys.aws_access_key_id\naws_secret_access_key = Keys.aws_secret_access_key\n\niam.generate_credential_report()\nreport = iam.get_credential_report()\niamData = report['Content']\n... more data processing ....\n\nvalue1 = ...\n\n## Part 2\n\nurl = \"example.com\"\nparams = keys.params\n\nrequest = requests.get(url, headers = params)\nvalue 2 = .....\n\n## Part 3 (putting value 1 and 2 into Cloudwatch)\n\nvalue1 = IAMfile.value1\nvalue2 = githubfile.value2\n\n--- I'm assuming my error lies here in configuration---\ncloudwatch = boto3.client('cloudwatch',region_name=\"us-east-1\")\n\naws_access_key_id = Keys.aws_access_key_id\naws_secret_access_key = Keys.aws_secret_access_key\n-------------------------------end---------------------------------\n\nPUTresponse = cloudwatch.put_metric_data(\n    Namespace = \"Multi Factor Authentication\",\n    MetricData = [\n    {\n        'MetricName': 'AWS',\n        'Timestamp': currentTime,\n        'Value': value1\n        }]\n    )\n\nGithub \nPUTresponse = cloudwatch.put_metric_data(\n    Namespace = \"Multi Factor Authentication\",\n    MetricData = [\n    {\n        'MetricName': 'Github',\n        'Timestamp': currentTime,\n        'Value': value2\n        }]\n    )\n\nPlease let me know if something is unclear or if the snippets are too vague.\n I believe I have fixed the issue. In my script I am generating and getting the IAM credential report through boto3. However, the report generation requires a couple of seconds before it can be retrieved, while in my script, it attempted to \"get\" the report in quick succession. I have put a 5 second delay between the two commands and the error ceased to reproduce. I will conduct further testing to verify.\n @Neil511 \nAny update on this? Are you still seeing issues?\n No, I discovered that it was caused as a result of the generate request. Before you can get the credential report, the report must be generated and in some occurrences, the generate request had a delay which meant that the get request failed. I added a time delay between the two requests and it solved the issue.\n  Hi,\nwhen using boto3 to get s3 metrics i get empty metrics,\nI get the metrics via list_metrics(), I can see them on CloudWatch AWS Web Console, I've tried different time spans (from 1minute to 1 Day) - Always return empty.\n\nChanged the units, the Statistics. bah.\n\n```\ncw = boto3.client('cloudwatch')\ncw.get_metric_statistics(Namespace='AWS/S3',MetricName='BucketSizeBytes', StartTime=datetime.utcnow() - timedelta(days=1), EndTime=datetime.utcnow(), Period=86400, Statistics=['Sum'],Unit='Bytes',Dimensions=[{'Name':'BucketName', 'Value':'backup-bucket'}])\n```\n\nOUTPUT:\n\n```\n{u'Datapoints': [],\n u'Label': 'BucketSizeBytes',\n 'ResponseMetadata': {'HTTPStatusCode': 200,\n  'RequestId': 'a5c04a0e-4579-11e5-ab73-add86b87b8d9'}}\n```\n So here is what I did to get it to work:\n\n``` py\nfrom datetime import timedelta\nfrom datetime import datetime\n\ncw = boto3.client('cloudwatch')\nbucket = 'mybucketfoo'\n\nresponse = cw.get_metric_statistics(\n    Namespace='AWS/S3',MetricName='BucketSizeBytes',\n    StartTime=datetime.utcnow() - timedelta(days=2) ,\n    EndTime=datetime.utcnow(), Period=86400,\n    Statistics=['Average'], Unit='Bytes',\n    Dimensions=[\n        {'Name': 'BucketName', 'Value': bucket},\n        {u'Name': 'StorageType', u'Value': 'StandardStorage'}\n    ])\n\n\nprint(response)\n```\n\nThe important points are that you need to take from this is: the second `StorageType` dimension and the start date needs to be more than one day from the current time. I could not find too much documentation in the CloudWatch docs about it. However based on the console, you need that `StorageType` as well to correctly view the data points. Also, the data point, for me, is delivered daily at 12 AM so my guess the range of a day you specified was too small. However, I was not able to find the official minimum span that you must specify.\n\nLet me know if you have any more questions.\n I have tried that, but it doesn't work. Not for a day, not for a month.\nI'm not sure what else can go wrong\n @DjxDeaf \n\nDid you use the same code snippet as I did? If you did, more researching may be needed to determine why. Another thing you may need to watch out for is that the region for which you are making the cloudwatch client matches up with the region your s3 bucket is located in. If they do not match, that will cause the data points not too show up as well.\n This worked for me:\n\n```\nimport boto3\nfrom datetime import timedelta\nfrom datetime import datetime\n\nregion = 'us-east-1'\ncwWindow = 60\n\nclient = boto3.client('cloudwatch',region_name=region)\nresponse = client.get_metric_statistics(\n    Namespace='AWS/DynamoDB',\n    MetricName='ConsumedWriteCapacityUnits',\n    Dimensions=[\n        {\n            'Name': 'TableName',\n            'Value': 'my-table-name'\n        },\n    ],\n    StartTime=datetime.utcnow() - timedelta(minutes=cwWindow ),\n    EndTime=datetime.utcnow(),\n    Period=300,\n    Statistics=['Average'],\n    Unit='Count'\n)\n```\n hi folks,\nThe script was initially working for me, but has stopped working now and no matter what I try, I get an empty Datapoints list. Is there a limit per day? Any other ideas for what could be wrong?\n Ah! Got it to work by trying bigger time window. I had a timespan of 1 day which was working but it stopped and I had to increase it to 2 days.\n  boto2 uses a POST style for the search endpoint for CloudSearch to accommodate large query strings.\n\nboto3 should either auto flip to POST for large query strings, allow you to specify, or always use POST for search as well.\n\nhttps://github.com/boto/boto/blob/develop/boto/cloudsearchdomain/layer1.py#L426\n @rayluo do you accept help on this?  I am happy to help code whatever and open a PR if that is helpful.  It seems like we would need to make a serializer in botocore that supports form-encoding.\n\nAs of now this is blocking our usage of boto3 for cloudsearch, so I am happy to help donate time to fix this if you wanted to discuss how it should work\n @rayluo thanks!  That workaround works great for now.\n  All operations that require the \"DomainName\" kwarg do not work, besides `create_domain`.\n\nAny that do not require these return blank responses.\n`csc = boto3.client('cloudsearch)`\nExample:\n\n``` python\npprint(csc.list_domain_names())\n{'DomainNames': {'cloudsearchdomain1': '2011-02-01'},\n 'ResponseMetadata': {'HTTPStatusCode': 200,\n                      'RequestId': '983bdce5-3a07-11e5-b28e-bdb6cd8bee0c'}}\n```\n\n``` python\npprint(csc.describe_index_fields(DomainName='cloudsearchdomain1'))\n---------------------------------------------------------------------------\nClientError                               Traceback (most recent call last)\n<ipython-input-16-01168a1f4334> in <module>()\n----> 1 pprint(csc.describe_index_fields(DomainName='cloudsearchdomain1'))\n\n/usr/local/lib/python3.4/dist-packages/botocore/client.py in _api_call(self, *args, **kwargs)\n    267                     \"%s() only accepts keyword arguments.\" % py_operation_name)\n    268             # The \"self\" in this scope is referring to the BaseClient.\n--> 269             return self._make_api_call(operation_name, kwargs)\n    270 \n    271         _api_call.__name__ = str(py_operation_name)\n\n/usr/local/lib/python3.4/dist-packages/botocore/client.py in _make_api_call(self, operation_name, api_params)\n    321 \n    322         if http.status_code >= 300:\n--> 323             raise ClientError(parsed_response, operation_name)\n    324         else:\n    325             return parsed_response\n\nClientError: An error occurred (ResourceNotFound) when calling the DescribeIndexFields operation: Domain not found: cloudsearchdomain1\n```\n\n``` python\npprint(csc.describe_expressions(DomainName='cloudsearchdomain1'))\n---------------------------------------------------------------------------\nClientError                               Traceback (most recent call last)\n<ipython-input-24-4f571ab0e52d> in <module>()\n----> 1 pprint(csc.describe_expressions(DomainName='cloudsearchdomain1'))\n\n/usr/local/lib/python3.4/dist-packages/botocore/client.py in _api_call(self, *args, **kwargs)\n    267                     \"%s() only accepts keyword arguments.\" % py_operation_name)\n    268             # The \"self\" in this scope is referring to the BaseClient.\n--> 269             return self._make_api_call(operation_name, kwargs)\n    270 \n    271         _api_call.__name__ = str(py_operation_name)\n\n/usr/local/lib/python3.4/dist-packages/botocore/client.py in _make_api_call(self, operation_name, api_params)\n    321 \n    322         if http.status_code >= 300:\n--> 323             raise ClientError(parsed_response, operation_name)\n    324         else:\n    325             return parsed_response\n\nClientError: An error occurred (ResourceNotFound) when calling the DescribeExpressions operation: Domain not found: cloudsearchdomain1\n```\n\n``` python\npprint(csc.describe_domains(DomainNames=['cloudsearchdomain1']))\n{'DomainStatusList': [],\n 'ResponseMetadata': {'HTTPStatusCode': 200,\n                      'RequestId': '0661307e-3a08-11e5-a69f-5d5e2552c255'}}\n```\n\nThe domain exists in the console, and works just fine no matter what I do to it. What's going on? (I tried this with multiple domains, the name 'cloudsearchdomain1' is nonexistent, and used just as a placeholder, I have many more domains).\n I'm not able to repro.  Are you sure that your client is using the same region in which you've created your domains?  I did notice that if I specify a different region, I'll get an empty response:\n\n```\nIn [15]: c = boto3.client('cloudsearch', 'us-west-2')\n\nIn [16]: c.list_domain_names()\nOut[16]:\n{u'DomainNames': {'testdomain': '2013-01-01'},\n 'ResponseMetadata': {'HTTPStatusCode': 200,\n  'RequestId': 'id'}}\n\nc.describe_index_fields(DomainName='testdomain')['IndexFields']\nOut[18]:\n[{u'Options': {u'IndexFieldName': 'actors',\n   u'IndexFieldType': 'text-array',\n   u'TextArrayOptions': {u'AnalysisScheme': '_en_default_',\n    u'HighlightEnabled': True,\n    u'ReturnEnabled': True}},\n   ...\n\nIn [19]: us_east_1 = boto3.client('cloudsearch', 'us-east-1')\nIn [20]: us_east_1.list_domain_names()\nOut[20]:\n{u'DomainNames': {'testdomain': '2013-01-01'},\n 'ResponseMetadata': {'HTTPStatusCode': 200,\n  'RequestId': 'id'}}\n\n# Shows up in list_domain_names(), but we aren't able to describe the domain's index fields because it's in us-west-2.\nIn [21]: us_east_1.describe_index_fields(DomainName='testdomain')\nOut[21]:\n{u'IndexFields': [],\n 'ResponseMetadata': {'HTTPStatusCode': 200,\n  'RequestId': 'id1'}}\n```\n Nope, this does not work either.\n\nThe domain in question - `cloudsearchdomain1` - is in 'us-east-1' (at least according to the AWS console) and I tried the following:\nIn:\n\n``` python\ncsc = boto3.client('cloudsearch', 'us-east-1')\n```\n\nIn:\n\n``` python\npprint(csc.list_domain_names())\n```\n\nOutput:\n\n```\n{'DomainNames': {'cloudsearchdomain1': '2011-02-01'},\n 'ResponseMetadata': {'HTTPStatusCode': 200,\n                      'RequestId': '6c356097-44f2-11e5-9ac1-352c9572c8dc'}}\n```\n\nIn:\n\n``` python\npprint(csc.describe_index_fields(DomainName='cloudsearchdomain1'))\n```\n\nOutput:\n\n```\n---------------------------------------------------------------------------\nClientError                               Traceback (most recent call last)\n<ipython-input-9-624f59aa01cc> in <module>()\n----> 1 pprint(csc.describe_index_fields(DomainName='cloudsearchdomain1')\n      2 )\n\n/usr/local/lib/python3.4/dist-packages/botocore/client.py in _api_call(self, *args, **kwargs)\n    267                     \"%s() only accepts keyword arguments.\" % py_operation_name)\n    268             # The \"self\" in this scope is referring to the BaseClient.\n--> 269             return self._make_api_call(operation_name, kwargs)\n    270 \n    271         _api_call.__name__ = str(py_operation_name)\n\n/usr/local/lib/python3.4/dist-packages/botocore/client.py in _make_api_call(self, operation_name, api_params)\n    321 \n    322         if http.status_code >= 300:\n--> 323             raise ClientError(parsed_response, operation_name)\n    324         else:\n    325             return parsed_response\n\nClientError: An error occurred (ResourceNotFound) when calling the DescribeIndexFields operation: Domain not found: cloudsearchdomain1\n```\n\nAnd running `pprint(csc.describe_index_fields(DomainName='cloudsearchdomain1'))['IndexFields']` gives the same output.\n Ping. I actually have a feeling that it may be due to the fact that your cloudsearch is the old version of cloudsearch `'2011-02-01'` because after looking at the docs: http://docs.aws.amazon.com/cloudsearch/latest/developerguide/migrating.html there is a lot of functionality changes. We are currently calling 2013-01-01 operations and based on the docs it seems that the 2011-02-01 API is needed to interact with 2011-02-01 domains. You can probably check by registering a handler to use the old version (note that I cannot confirm this because I am unable to create domains of that version. It is a legacy thing):\n\n``` py\nimport boto3\n\nclient = boto3.client('cloudsearch', 'us-east-1')\ndef switch_api_version(request, **kwargs):\n    request.data['Version'] = '2011-02-01'\n\nclient.meta.events.register('before-sign.cloudsearch', switch_api_version)\nclient.describe_index_fields(DomainName='cloudsearchdomain1')\n```\n\nHow feasible is it to move off of the old cloudsearch version? It may be difficult to get a model for the old version of cloudsearch especially since it was major versioned bumped before the creation of boto3, but we can look into it.\n I think I ended up determining that the issue was indeed caused by the fact that we were using the old version.\n\nI do not enjoy using older systems (because of lack of support like this!) but at my company we have many pieces of outdated infrastructure which doesn't get updated and ends up causing trouble. I'm not in a position to change this at the moment, so I have to just deal with it. \n\nI think I ended up using some scraping method, not positive though.\n Makes sense. Were you using the old `boto.cloudsearch` module (which uses 2011-02-01 before the `cloudsearch2` package was created to use 2013-01-01 API) before? In the meantime, we can look to see if we can get a model of the old API version into botocore if you still need it?\n So I actually was able to find an old model of this cloudsearch version (thanks javascript SDK) opened a PR to support it. To use it on the client, all you have to do is specify `api_version='2011-02-01'` when creating the `cloudsearch` client.\n  Documentation for SWF.Client.poll_for_decision_task says:\n\n> Workers should set their client side socket timeout to at least 70 seconds (10 seconds higher than the maximum time service may hold the poll request).\n\nBut how do I do that?\n`socket.setdefaulttimeout(70)` has no effect.\n\nWhen polling, I do sometimes get timeout errors as\n\n```\nbotocore.vendored.requests.packages.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='swf.eu-west-1.amazonaws.com', port=443): Read timed out. (read timeout=60)\n\nDEBUG botocore.retryhandler - Retry needed, action of: 6.221778283110354\nDEBUG botocore.endpoint - Response received to retry, sleeping for 6.221778283110354 seconds\n```\n\nI also don't know how to avoid the retries, so my polling workers are sleeping for longer and longer - and I'm forced to continue using boto2.\n Thanks for pointing this out.  There's no config option for this currently.  Marking this as a feature request.\n After raising the problem above some time ago, I found a temporary workaround (until properly fixed) by editing botocore/endpoint.py and changing \n\nDEFAULT_TIMEOUT = 70\n\nnot ideal, but got me back on track...\n  :shipit: Looks good.\n  The EC2.Waiter says everything is ok but it's fibbing, the instance is not in-fact running but still pending. I'm not sure if this is because an instance object probably shouldn't be calling wait_until_running on itself or an actual race with describe_instances maybe.\n\n```\nprint ('Waiting until instance is running')\n                instance.wait_until_running(\n                    Filters=[\n                        {\n                            'Name': 'instance-id',\n                            'Values': [instance.instance_id],\n                        }\n                    ]\n                )\n\nprint (instance.state)\n{'Name': 'pending', 'Code': 0}\n```\n\nShould be running.\n Yeah a `reload()` after `wait_until_running()` works with the caveat that if you are using a list of instances from `create_instances()` and summarily iterate over the instances it doesn't work. I have to actually instantiate an Instance for it to work, otherwise it still shows as pending, pretty weird let me play with it a bit more.\n Closing for now.  Please let us know if you have any other feedback.\n  :shipit:\n  Using boto3 i'm launching an image like so:\n\n```\nself.ec2_resource = boto3.resource('ec2')\nresponse = self.ec2_resource.create_instances(\n                DryRun=False,\n                ImageId=image,\n                MinCount=1,\n                MaxCount=1,\n                InstanceType='m3.medium')\n```\n\nAccording to the docs that i'm [reading here](http://boto3.readthedocs.org/en/latest/reference/services/ec2.html#EC2.ServiceResource.create_instances)\n\nresponse should be an instance resource, Return Type ec2.Instance but i'm getting back a list. Should be returns a list of instance types.\n  Would make it easier to compose a job flow for specific use cases.\n\nInstead of giving a list of parameters, each input would be specified through a function (e.g. job_flow.add_step(), job_flow.add_boostrap_action()) then job_flow.start(). Right now, I'm doing this for each parameter, and its painful.\n Closing issue due to inactivity. Please reopen if there is an update.\n  The response structure documented at \nhttp://boto3.readthedocs.org/en/latest/reference/services/s3.html#S3.Client.get_bucket_acl\nsays that the Grantee dictionary should contain the following attributes:\nDisplayName, EmailAddress, ID, Type, and URI.\n\nWhen testing, grantees only consist of a URI (e.g. http://acs.amazonaws.com/groups/s3/LogDelivery) or pair of DisplayName and ID. \n Thanks, I expected the URI/ID/EmailAddress to only be there if it applies, but I though that \"Type\" would always be present.\n\nThe S3 AP reference at http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETacl.html does not mention a Type at all actually, so that makes sense that it does not exist. Maybe it could be removed from the documented structure then?\n\nThanks !\n Cool, thanks for the prompt reply !\n  From https://github.com/boto/boto3/issues/185\n  I am using boto3 to manage users in my AWS account.\nThe call to create a new user works on my local machine (as part of unittesting) but not on production server.\nThis is how I initialize the session:\n   self.session = Session(aws_access_key_id='',\n                               aws_secret_access_key='',\n                               region_name='us-west-2')\n\nand this is the user creation:\n   client = self.session.resource('iam')\n            user = client.User(username)\n            user = user.create()\n\nlog:\nStarting new HTTPS connection (1): iam.amazonaws.com\nEvent needs-retry.iam.CreateUser: calling handler <botocore.retryhandler.RetryHandler object at 0xfa2e0850>\nretry needed, retryable exception caught: ('Connection aborted.', error('An error occured while connecting to the server: Unable to connect to server at URL: http://iam.amazonaws.com/',))\nConnectionError: ('Connection aborted.', error('An error occured while connecting to the server: Unable to connect to server at URL: http://iam.amazonaws.com/',))\n I am not setting the endpoint manually.\nBut in the error message I can see it's trying to post to http and not https. Thats the whole issue, can't understand what.\nLocally it's working fine. On GAE it's doing all the trouble. \nDid you try to reproduce on GAE or locally ?\n Hi @idanya.  We don't have any GAE accounts to test on.  Your code should definitely not be hitting an HTTP endpoint if you're not manually configuring an endpoint (I've confirmed this is the case).  The issue might be a GAE specific setting that's forcing HTTP, especially given it works locally for you and us.  I think the GAE support team would be able to better assist you.\n\nClosing out issue as it doesn't appear to be an issue with boto3.\n @idanya Did you ever get this to work? We've got the same problem trying to access Route 53 on GAE using boto3.\n Ran into this too and seems boto3 uses some low level TCP connect calls that GEA blocks. \nIn my case when I tried this:\n\n```\nses = boto3.client('ses', region_name=AWS_REGION, aws_access_key_id=AWS_KEY, aws_secret_access_key=AWS_SECRET)\nr = ses.send_email(Source=orig, Destination={'ToAddresses': dest_list }, Message=msg)\n```\n\nIt failed with a similar error.\n\nFinally got it to work like this:\n\n```\npar = { 'Source': orig, 'Destination': {'ToAddresses': dest_list }, 'Message': msg }\nr = aws_execute(ses, 'send_email', par) # SES.Client.send_email\n```\n\nusing the following helper function:\n\n```\nAWS_API_DEADLINE = 5                            # deadline for AWS calls (seconds)\nAWS_SIGURL_EXP = 100                            # expiry of generate_presigned_url() URLs (seconds)\n\ndef aws_execute(client, method, par):\n    # Perform an AWS method call by wrapping it in urlfetch.fetch()\n    # Direct boto3.client.method() calls times out as GAE blocks it\n    url = client.generate_presigned_url(method, Params=par, ExpiresIn=AWS_SIGURL_EXP, HttpMethod=\"GET\")\n    hdrs = {\"Accept\": \"application/json\", }                     # request JSON results in body.\n    result = urlfetch.fetch(url, deadline=AWS_API_DEADLINE, headers=hdrs)\n    if result.status_code // 100 != 2:                          # no 2xx from AWS?\n        logging.info(\"AWS %s FAIL: %s\", method, str(result))\n        raise RuntimeError(\"AWS %s call failed with %d\" % (method, result.status_code))\n    if result.content:\n        return json.loads(result.content)\n    return {}\n```\n Do we have a proper solution for this either from GAE or Boto3 ?  In `boto` there was a call to get a list of regions available to a given service. i.e. `boto.cloudformation.regions()`.  I don't see any sort of equivalent call in `boto3`. Am I missing something or is this related to https://github.com/boto/botocore/issues/339?\n What I usually do for this is use a client (`ec2c = boto3.client('ec2')`)and run `describe_availability_zones` like so:\n\n``` python\navailZones = []\nfor zone in ec2c.describe_availability_zones()['AvailabilityZones']:\n    if zone['State'] == 'available':\n        availZones.append(zone['ZoneName'])\n```\n @SamCyanide thanks. That seems straightforward enough. It would be nice to have something similar provided.\n\nI'll close this since since I can make that work.\n That only works for EC2 because the service itself provides a request to return all availability zones.  That doesn't help you if you want to find all regions for another service, e.g. CloudFormation or Lambda.\n This is important for monitoring purposes in a company which is growing fast and might use a new region after a few months. If this feature is implemented, it will help reduce the manual work involved in updating  the region list often.\n :+1: \n\nWe need this Feature also for our account configuration scripts.\n I have written a blog post on this. Someone might find it useful..\nhttps://inquisitiveindianspeaks.wordpress.com/2015/11/03/get-all-aws-regions-using-aws-cli-on-python/\n @shyampsunder2003 you don't need a subprocess...\n\n``` python\nimport boto3\nfrom pprint import pprint\nec2c = boto3.client('ec2')\npprint(ec2c.describe_regions())\n```\n\nreturns\n\n```\n{'Regions': [{'Endpoint': 'ec2.eu-west-1.amazonaws.com',\n              'RegionName': 'eu-west-1'},\n             {'Endpoint': 'ec2.ap-southeast-1.amazonaws.com',\n              'RegionName': 'ap-southeast-1'},\n             {'Endpoint': 'ec2.ap-southeast-2.amazonaws.com',\n              'RegionName': 'ap-southeast-2'},\n             {'Endpoint': 'ec2.eu-central-1.amazonaws.com',\n              'RegionName': 'eu-central-1'},\n             {'Endpoint': 'ec2.ap-northeast-2.amazonaws.com',\n              'RegionName': 'ap-northeast-2'},\n             {'Endpoint': 'ec2.ap-northeast-1.amazonaws.com',\n              'RegionName': 'ap-northeast-1'},\n             {'Endpoint': 'ec2.us-east-1.amazonaws.com',\n              'RegionName': 'us-east-1'},\n             {'Endpoint': 'ec2.sa-east-1.amazonaws.com',\n              'RegionName': 'sa-east-1'},\n             {'Endpoint': 'ec2.us-west-1.amazonaws.com',\n              'RegionName': 'us-west-1'},\n             {'Endpoint': 'ec2.us-west-2.amazonaws.com',\n              'RegionName': 'us-west-2'}],\n 'ResponseMetadata': {'HTTPStatusCode': 200,\n                      'RequestId': '123456789-1234-1234-1234-123456789'}}\n\n```\n\nBut this is only for EC2, not for all other services\n I create me a [helper](https://github.com/zalando-stups/sevenseconds/blob/master/sevenseconds/helper/regioninfo.py) for this Issue.\n `import boto3`\r\n`boto3.session.Session().get_available_regions('ec2')`  hello.\n\nI have a question about boto3.\nthe Instance class is being initialized with a single instance id.\ninstance = ec2.Instance('id')\nso why in this class there are methods that affect other instances with other id's?\nlike reboot() for example which gets the InstanceIds=[\n        'string',\n    ]\nattribute.\nam I missing something?\n\nthanks!\n  Hi, sometimes, I will get the following error but most time, the program execute successfully, what does the error exactly mean and how can I get rid of this error? Thanks.\nTraceback (most recent call last):\n  File \"refresh_price_history.py\", line 65, in <module>\n    main()\n  File \"refresh_price_history.py\", line 43, in main\n    file_to_db.update_from_last_timestamp(conn, aws_key_id, aws_secret_key)\n  File \"/home/ec2-user/CC/file_to_db.py\", line 79, in update_from_last_timestamp\n    unrecorded_prices = spot_price_pagination.get_history(ec2, start_time, end_time, p)\n  File \"/home/ec2-user/CC/spot_price_pagination.py\", line 50, in get_history\n    for page in paginator.paginate(StartTime=start_time, EndTime=end_time, ProductDescriptions=products):\n  File \"/usr/local/lib/python2.7/site-packages/botocore/paginate.py\", line 83, in **iter**\n    response = self._make_request(current_kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/paginate.py\", line 155, in _make_request\n    return self._method(**current_kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 258, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/client.py\", line 304, in _make_api_call\n    operation_model, request_dict)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/endpoint.py\", line 110, in make_request\n    return self._send_request(request_dict, operation_model)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/endpoint.py\", line 139, in _send_request\n    success_response, exception):\n  File \"/usr/local/lib/python2.7/site-packages/botocore/endpoint.py\", line 203, in _needs_retry\n    caught_exception=caught_exception)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/hooks.py\", line 226, in emit\n    return self._emit(event_name, kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/hooks.py\", line 209, in _emit\n    response = handler(**kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/retryhandler.py\", line 183, in __call__\n    if self._checker(attempts, response, caught_exception):\n  File \"/usr/local/lib/python2.7/site-packages/botocore/retryhandler.py\", line 250, in __call__\n    caught_exception)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/retryhandler.py\", line 265, in _should_retry\n    return self._checker(attempt_number, response, caught_exception)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/retryhandler.py\", line 313, in __call__\n    caught_exception)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/retryhandler.py\", line 222, in **call**\n    return self._check_caught_exception(attempt_number, caught_exception)\n  File \"/usr/local/lib/python2.7/site-packages/botocore/retryhandler.py\", line 355, in _check_caught_exception\n    raise caught_exception\nssl.SSLError: ('The read operation timed out',)\n Can you provide more information? Such as: what aws service is involved, how often this happens, is there a pattern, does the error persist for a while so that you can use aws-cli to connect to that service and reproduce the same issue?\n\nIf a symptom can be reproduced, it would be much easier to debug and fix it.\n I used ec2 client and paginator to retrieve data for spot price history and met this error twice in the last half month.  It did not persist for a long time, when I requested later, there was no SSLError showing again. I was using this in a EC2 instance, was it possible that the network connection was weak among the instance or the request was timed out sometimes?\n Personally I would say the rare connection error between client and remote server is not uncommon in SOA. While the underlying sdk may (or may not) provide finer granularity of error handling in future, after all it is the upper layer caller to take control about how to react to those errors, either retry or ignore. So, you may consider using a try ... except ... clause to wrap your code and see if it helps in your case.\n Yes, I already used the \"try except\" to retry the command. I am just curious about how this error happened. Anyway, thanks for your help.\n @oysnow This error can happen sometimes if the server takes a little longer to send a response that we allow time for, or if it takes a little longer for the service's response to make it's way back to the caller (i.e network issues as you suggested).\n\nFor example, we establish a connection to EC2 and send a request for spot price history.  We then try to `.read()` a response from EC2.  Meanwhile EC2 is working on generating the response to send back to us but hasn't sent anything yet.  I believe our default timeout is 60 seconds.  If after 60 seconds EC2 still hasn't sent us a response we time out and propagate the exception back to the caller.\n\nI think a good addition for us is to add config options for setting the `.read()` timeout on connections so that users that run into situations like this can increase this timeout.\n\nThe other option is that we could retry this, but given this is because the service hasn't responded quickly enough, retrying has potential to make this problem worse.\n\nLet me know if you have any other questions.  I've filed https://github.com/boto/boto3/issues/192 to track the read timeout configuration option.\n  I'm unable to upload file using aws:kms which requires signature version v4. Is this a known issue?\nI'm using boto3 1.1.0.\n\nsession = boto3.session.Session(profile_name=profile_name, region_name=region)\n self.s3client = session.client('s3', config=Config(signature_version='s3v4'))\ntransfer = S3Transfer(self.s3client)\nextra_args={'ServerSideEncryption': 'aws:kms'}\n transfer.upload_file(file_path, s3bucket, s3_file_name, extra_args=extra_args ,callback=uploader_config.progress_callback)\n\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 323, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (SignatureDoesNotMatch) when calling the PutObject operation: The request signature we calculated does not match the signature you provided. Check your key and signing method.\n Thanks for the response. Following is the log file contents. Note that the same access id works with SSE-S3. So I don't think there is a problem with access id.\n\n2015-07-29 04:30:17,553 botocore.hooks [DEBUG] Event before-parameter-build.s3.PutObject: calling handler <function sse_md5 at 0x7fcc9c9a45f0>\n2015-07-29 04:30:17,555 botocore.hooks [DEBUG] Event before-call.s3.PutObject: calling handler <function conditionally_calculate_md5 at 0x7fcc9c9a4578>\n2015-07-29 04:30:17,555 botocore.hooks [DEBUG] Event before-call.s3.PutObject: calling handler <function add_expect_header at 0x7fcc9c9a48c0>\n2015-07-29 04:30:17,555 botocore.handlers [DEBUG] Adding expect 100 continue header to request.\n2015-07-29 04:30:17,555 botocore.endpoint [DEBUG] Making request for <botocore.model.OperationModel object at 0x7fcc9c486c10> (verify_ssl=True) with params: {'body': <boto3.s3.transfer.ReadFileChunk object at 0x7fcc9c486b90>, 'url': u'XXXX', 'headers': {u'x-amz-meta-XXXX': 'True', u'x-amz-meta-XXX': '1.0.0', 'Content-MD5': u'sodN83rFnoX8u+ozGDHwrw==', 'User-Agent': 'Boto3/1.1.0 Python/2.7.8 Linux/3.16.0-39-generic Botocore/1.1.2', 'Expect': '100-continue', u'x-amz-server-side-encryption': 'aws:kms'}, 'query_string': {}, 'url_path': u'/XXXX', 'method': u'PUT'}\n2015-07-29 04:30:17,555 botocore.hooks [DEBUG] Event request-created.s3.PutObject: calling handler <function disable_upload_callbacks at 0x7fcc9c943938>\n2015-07-29 04:30:17,555 botocore.hooks [DEBUG] Event request-created.s3.PutObject: calling handler <bound method S3._sign_request of <botocore.client.S3 object at 0x7fcc9c463290>>\n2015-07-29 04:30:17,555 botocore.hooks [DEBUG] Event before-sign.s3.PutObject: calling handler <function fix_s3_host at 0x7fcc9cb510c8>\n2015-07-29 04:30:17,556 botocore.auth [DEBUG] Calculating signature using v4 auth.\n2015-07-29 04:30:17,556 botocore.auth [DEBUG] CanonicalRequest:\nPUT\nXXXX\n\ncontent-md5:sodN83rFnoX8u+ozGDHwrw==\nexpect:100-continue\nhost:s3.amazonaws.com\nuser-agent:Boto3/1.1.0 Python/2.7.8 Linux/3.16.0-39-generic Botocore/1.1.2\nx-amz-content-sha256:468bb3e61f1deb3c96cffd9e872a4bc4cfd1002f497446f7681cf41161528174\nx-amz-date:20150729T113017Z\nx-amz-meta-XXXX:True\nx-amz-meta-XXXX:1.0.0\nx-amz-server-side-encryption:aws:kms\n\ncontent-md5;expect;host;user-agent;x-amz-content-sha256;x-amz-date;x-amz-meta-XXXX;x-amz-meta-XXXX;x-amz-server-side-encryption\n468bb3e61f1deb3c96cffd9e872a4bc4cfd1002f497446f7681cf41161528174\n2015-07-29 04:30:17,556 botocore.auth [DEBUG] StringToSign:\nAWS4-HMAC-SHA256\n20150729T113017Z\n20150729/us-east-1/s3/aws4_request\n8de78f55818c577a8bc92e74510ba15e9d91d75b84fa67163bbe739a80c9a74f\n2015-07-29 04:30:17,556 botocore.auth [DEBUG] Signature:\nee76f94d64482c8e16a72df03dcdc424c2fd2df1756241d428b3eb1e80190e7d\n2015-07-29 04:30:17,557 botocore.hooks [DEBUG] Event request-created.s3.PutObject: calling handler <function enable_upload_callbacks at 0x7fcc9c943c80>\n2015-07-29 04:30:17,561 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [PUT]>\n2015-07-29 04:30:17,562 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTPS connection (1): s3.amazonaws.com\n2015-07-29 04:30:17,889 botocore.awsrequest [DEBUG] Waiting for 100 Continue response.\n2015-07-29 04:30:17,975 botocore.awsrequest [DEBUG] Received a non 100 Continue response from the server, NOT sending request body.\n2015-07-29 04:30:17,975 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT XXXX HTTP/1.1\" 403 None\n2015-07-29 04:30:17,977 botocore.parsers [DEBUG] Response headers: {'x-amz-id-2': 'jJhgk2TrU3Xr3YeKEjZN7vUW95K37Zb9rslp9otDxpuFf/aInnkEpZ3axCyFlCGHZbgqdleboBM=', 'server': 'AmazonS3', 'transfer-encoding': 'chunked', 'connection': 'close', 'x-amz-request-id': '49776CA6685E7E77', 'date': 'Wed, 29 Jul 2015 11:30:27 GMT', 'content-type': 'application/xml'}\n2015-07-29 04:30:17,977 botocore.parsers [DEBUG] Response body:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your key and signing method.</Message><AWSAccessKeyId>XXXXX</AWSAccessKeyId><StringToSign>AWS4-HMAC-SHA256\n20150729T113017Z\n20150729/us-east-1/s3/aws4_request\n126e3202a783519784f2bef897716fcfbbd7f7749a36e0c76b71772364cf6423</StringToSign><SignatureProvided>ee76f94d64482c8e16a72df03dcdc424c2fd2df1756241d428b3eb1e80190e7d</SignatureProvided><StringToSignBytes>41 57 53 34 2d 48 4d 41 43 2d 53 48 41 32 35 36 0a 32 30 31 35 30 37 32 39 54 31 31 33 30 31 37 5a 0a 32 30 31 35 30 37 32 39 2f 75 73 2d 65 61 73 74 2d 31 2f 73 33 2f 61 77 73 34 5f 72 65 71 75 65 73 74 0a 31 32 36 65 33 32 30 32 61 37 38 33 35 31 39 37 38 34 66 32 62 65 66 38 39 37 37 31 36 66 63 66 62 62 64 37 66 37 37 34 39 61 33 36 65 30 63 37 36 62 37 31 37 37 32 33 36 34 63 66 36 34 32 33</StringToSignBytes><CanonicalRequest>PUT\n/xxxx/xxxx/test1\n\ncontent-md5:sodN83rFnoX8u+ozGDHwrw==\nexpect:100-continue\nhost:s3.amazonaws.com\nuser-agent:Boto3/1.1.0 Python/2.7.8 Linux/3.16.0-39-generic Botocore/1.1.2\nx-amz-content-sha256:468bb3e61f1deb3c96cffd9e872a4bc4cfd1002f497446f7681cf41161528174\nx-amz-date:20150729T113017Z\nx-amz-meta-XXXX:True\nx-amz-meta-XXXX:1.0.0\nx-amz-server-side-encryption:aws:kms\n\ncontent-md5;expect;host;user-agent;x-amz-content-sha256;x-amz-date;x-amz-meta-XXXX;x-amz-meta-XXXX;x-amz-server-side-encryption\n468bb3e61f1deb3c96cffd9e872a4bc4cfd1002f497446f7681cf41161528174</CanonicalRequest><CanonicalRequestBytes>50 55 54 0a 2f 62 6c 75 65 2d 64 65 76 2f 6c 70 69 63 68 61 69 61 68 2f 74 65 73 74 31 0a 0a 63 6f 6e 74 65 6e 74 2d 6d 64 35 3a 73 6f 64 4e 38 33 72 46 6e 6f 58 38 75 2b 6f 7a 47 44 48 77 72 77 3d 3d 0a 65 78 70 65 63 74 3a 31 30 30 2d 63 6f 6e 74 69 6e 75 65 0a 68 6f 73 74 3a 73 33 2e 61 6d 61 7a 6f 6e 61 77 73 2e 63 6f 6d 0a 75 73 65 72 2d 61 67 65 6e 74 3a 42 6f 74 6f 33 2f 31 2e 31 2e 30 20 50 79 74 68 6f 6e 2f 32 2e 37 2e 38 20 4c 69 6e 75 78 2f 33 2e 31 36 2e 30 2d 33 39 2d 67 65 6e 65 72 69 63 20 42 6f 74 6f 63 6f 72 65 2f 31 2e 31 2e 32 0a 78 2d 61 6d 7a 2d 63 6f 6e 74 65 6e 74 2d 73 68 61 32 35 36 3a 34 36 38 62 62 33 65 36 31 66 31 64 65 62 33 63 39 36 63 66 66 64 39 65 38 37 32 61 34 62 63 34 63 66 64 31 30 30 32 66 34 39 37 34 34 36 66 37 36 38 31 63 66 34 31 31 36 31 35 32 38 31 37 34 0a 78 2d 61 6d 7a 2d 64 61 74 65 3a 32 30 31 35 30 37 32 39 54 31 31 33 30 31 37 5a 0a 78 2d 61 6d 7a 2d 6d 65 74 61 2d 62 6c 75 65 5f 62 72 5f 63 6f 6d 70 72 65 73 73 65 64 3a 54 72 75 65 0a 78 2d 61 6d 7a 2d 6d 65 74 61 2d 62 6c 75 65 5f 62 72 5f 75 70 6c 6f 61 64 5f 76 65 72 73 69 6f 6e 3a 31 2e 30 2e 30 0a 78 2d 61 6d 7a 2d 73 65 72 76 65 72 2d 73 69 64 65 2d 65 6e 63 72 79 70 74 69 6f 6e 3a 61 77 73 3a 6b 6d 73 0a 0a 63 6f 6e 74 65 6e 74 2d 6d 64 35 3b 65 78 70 65 63 74 3b 68 6f 73 74 3b 75 73 65 72 2d 61 67 65 6e 74 3b 78 2d 61 6d 7a 2d 63 6f 6e 74 65 6e 74 2d 73 68 61 32 35 36 3b 78 2d 61 6d 7a 2d 64 61 74 65 3b 78 2d 61 6d 7a 2d 6d 65 74 61 2d 62 6c 75 65 5f 62 72 5f 63 6f 6d 70 72 65 73 73 65 64 3b 78 2d 61 6d 7a 2d 6d 65 74 61 2d 62 6c 75 65 5f 62 72 5f 75 70 6c 6f 61 64 5f 76 65 72 73 69 6f 6e 3b 78 2d 61 6d 7a 2d 73 65 72 76 65 72 2d 73 69 64 65 2d 65 6e 63 72 79 70 74 69 6f 6e 0a 34 36 38 62 62 33 65 36 31 66 31 64 65 62 33 63 39 36 63 66 66 64 39 65 38 37 32 61 34 62 63 34 63 66 64 31 30 30 32 66 34 39 37 34 34 36 66 37 36 38 31 63 66 34 31 31 36 31 35 32 38 31 37 34</CanonicalRequestBytes><RequestId>49776CA6685E7E77</RequestId><HostId>jJhgk2TrU3Xr3YeKEjZN7vUW95K37Zb9rslp9otDxpuFf/aInnkEpZ3axCyFlCGHZbgqdleboBM=</HostId></Error>\n2015-07-29 04:30:17,978 botocore.hooks [DEBUG] Event needs-retry.s3.PutObject: calling handler <botocore.retryhandler.RetryHandler object at 0x7fcc9c5058d0>\n2015-07-29 04:30:17,978 botocore.retryhandler [DEBUG] No retry needed.\nE\nClientError: An error occurred (SignatureDoesNotMatch) when calling the PutObject operation: The request signature we calculated does not match the signature you provided. Check your key and signing method.\n Any updates on this? Any pointers to how to debug this problem?\n Not yet. We are still investigating. Really the only difference I saw was that you had some metadata, but when I specified metadata it still worked. If I could get a minimal amount of steps so that I could reproduce it that would be awesome, like how I did in my previous comment.\n Ok, here is the output following exact repro steps that you had. If you can give me any pointers, I can also set breakpoint and help debug in botocore.\n\nimport boto3\nfrom boto3.s3.transfer import S3Transfer\nfrom botocore.client import Config\n\nclient = boto3.client('s3', config=Config(signature_version='s3v4'))\ntransfer = S3Transfer(client)\nextra_args = {'ServerSideEncryption': 'aws:kms'}\nboto3.set_stream_logger('botocore')\ntransfer.upload_file(\n    'test.py', 'xxxx', 'test.py', extra_args=extra_args)\n\n2015-08-09 09:16:33,445 botocore.hooks [DEBUG] Event before-parameter-build.s3.PutObject: calling handler <function sse_md5 at 0x7f248e613050>\n2015-08-09 09:16:33,446 botocore.hooks [DEBUG] Event before-call.s3.PutObject: calling handler <function conditionally_calculate_md5 at 0x7f248e612f50>\n2015-08-09 09:16:33,446 botocore.hooks [DEBUG] Event before-call.s3.PutObject: calling handler <function add_expect_header at 0x7f248e613320>\n2015-08-09 09:16:33,446 botocore.handlers [DEBUG] Adding expect 100 continue header to request.\n2015-08-09 09:16:33,447 botocore.endpoint [DEBUG] Making request for <botocore.model.OperationModel object at 0x7f248e11d8d0> (verify_ssl=True) with params: {'body': <boto3.s3.transfer.ReadFileChunk object at 0x7f248e11d890>, 'url': u'https://s3.amazonaws.com/XXXX/test.py', 'headers': {'Content-MD5': u'8O9wgeFTmsAO9bdhtPsBsw==', u'x-amz-server-side-encryption': 'aws:kms', 'Expect': '100-continue', 'User-Agent': 'Boto3/1.1.0 Python/2.7.8 Linux/3.16.0-39-generic Botocore/1.1.2'}, 'query_string': {}, 'url_path': u'/XXXX/test.py', 'method': u'PUT'}\n2015-08-09 09:16:33,447 botocore.hooks [DEBUG] Event request-created.s3.PutObject: calling handler <function disable_upload_callbacks at 0x7f248e5a4140>\n2015-08-09 09:16:33,447 botocore.hooks [DEBUG] Event request-created.s3.PutObject: calling handler <bound method S3._sign_request of <botocore.client.S3 object at 0x7f248e11d150>>\n2015-08-09 09:16:33,447 botocore.hooks [DEBUG] Event before-sign.s3.PutObject: calling handler <function fix_s3_host at 0x7f248e741aa0>\n2015-08-09 09:16:33,447 botocore.auth [DEBUG] Calculating signature using v4 auth.\n2015-08-09 09:16:33,447 botocore.auth [DEBUG] CanonicalRequest:\nPUT\n/XXXX/test.py\n\ncontent-md5:8O9wgeFTmsAO9bdhtPsBsw==\nexpect:100-continue\nhost:s3.amazonaws.com\nuser-agent:Boto3/1.1.0 Python/2.7.8 Linux/3.16.0-39-generic Botocore/1.1.2\nx-amz-content-sha256:1894a19c85ba153acbf743ac4e43fc004c891604b26f8c69e1e83ea2afc7c48f\nx-amz-date:20150809T161633Z\nx-amz-server-side-encryption:aws:kms\n\ncontent-md5;expect;host;user-agent;x-amz-content-sha256;x-amz-date;x-amz-server-side-encryption\n1894a19c85ba153acbf743ac4e43fc004c891604b26f8c69e1e83ea2afc7c48f\n2015-08-09 09:16:33,448 botocore.auth [DEBUG] StringToSign:\nAWS4-HMAC-SHA256\n20150809T161633Z\n20150809/us-east-1/s3/aws4_request\n058e2ee7a218f423ba8fc95c83fbb51041f0799f500a7ad85c4f61150c5c564f\n2015-08-09 09:16:33,448 botocore.auth [DEBUG] Signature:\n9f48d185dbf4df1d9661432d04fd03b43dd12a7bc4fa11409c8806ec9c89278d\n2015-08-09 09:16:33,448 botocore.hooks [DEBUG] Event request-created.s3.PutObject: calling handler <function enable_upload_callbacks at 0x7f248e5a41b8>\n2015-08-09 09:16:33,452 botocore.endpoint [DEBUG] Sending http request: <PreparedRequest [PUT]>\n2015-08-09 09:16:33,453 botocore.vendored.requests.packages.urllib3.connectionpool [INFO] Starting new HTTPS connection (1): s3.amazonaws.com\n2015-08-09 09:16:33,759 botocore.awsrequest [DEBUG] Waiting for 100 Continue response.\n2015-08-09 09:16:33,857 botocore.awsrequest [DEBUG] Received a non 100 Continue response from the server, NOT sending request body.\n2015-08-09 09:16:33,857 botocore.vendored.requests.packages.urllib3.connectionpool [DEBUG] \"PUT /XXXX/test.py HTTP/1.1\" 403 None\n2015-08-09 09:16:33,859 botocore.parsers [DEBUG] Response headers: {'x-amz-id-2': 'SagV4viT6FLp09RTuwfBi59y1xmehDIK5DY9+LoUxDI17xgsqIWBFd+JztHeBjGb', 'server': 'AmazonS3', 'transfer-encoding': 'chunked', 'connection': 'close', 'x-amz-request-id': 'A990F7ABC11FB880', 'date': 'Sun, 09 Aug 2015 16:16:33 GMT', 'content-type': 'application/xml'}\n2015-08-09 09:16:33,859 botocore.parsers [DEBUG] Response body:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your key and signing method.</Message><AWSAccessKeyId>XXXX</AWSAccessKeyId><StringToSign>AWS4-HMAC-SHA256\n20150809T161633Z\n20150809/us-east-1/s3/aws4_request\na2788e1fc219207d032f3ecbbb3341d64f09d0bf06c6484e9d5e2a0554adeb06</StringToSign><SignatureProvided>9f48d185dbf4df1d9661432d04fd03b43dd12a7bc4fa11409c8806ec9c89278d</SignatureProvided><StringToSignBytes>41 57 53 34 2d 48 4d 41 43 2d 53 48 41 32 35 36 0a 32 30 31 35 30 38 30 39 54 31 36 31 36 33 33 5a 0a 32 30 31 35 30 38 30 39 2f 75 73 2d 65 61 73 74 2d 31 2f 73 33 2f 61 77 73 34 5f 72 65 71 75 65 73 74 0a 61 32 37 38 38 65 31 66 63 32 31 39 32 30 37 64 30 33 32 66 33 65 63 62 62 62 33 33 34 31 64 36 34 66 30 39 64 30 62 66 30 36 63 36 34 38 34 65 39 64 35 65 32 61 30 35 35 34 61 64 65 62 30 36</StringToSignBytes><CanonicalRequest>PUT\n/XXXX/test.py\n\ncontent-md5:8O9wgeFTmsAO9bdhtPsBsw==\nexpect:100-continue\nhost:s3.amazonaws.com\nuser-agent:Boto3/1.1.0 Python/2.7.8 Linux/3.16.0-39-generic Botocore/1.1.2\nx-amz-content-sha256:1894a19c85ba153acbf743ac4e43fc004c891604b26f8c69e1e83ea2afc7c48f\nx-amz-date:20150809T161633Z\nx-amz-server-side-encryption:aws:kms\n\ncontent-md5;expect;host;user-agent;x-amz-content-sha256;x-amz-date;x-amz-server-side-encryption\n1894a19c85ba153acbf743ac4e43fc004c891604b26f8c69e1e83ea2afc7c48f</CanonicalRequest><CanonicalRequestBytes>50 55 54 0a 2f 62 6c 75 65 2d 64 65 76 2f 6c 70 69 63 68 61 69 61 68 2f 74 65 73 74 2e 70 79 0a 0a 63 6f 6e 74 65 6e 74 2d 6d 64 35 3a 38 4f 39 77 67 65 46 54 6d 73 41 4f 39 62 64 68 74 50 73 42 73 77 3d 3d 0a 65 78 70 65 63 74 3a 31 30 30 2d 63 6f 6e 74 69 6e 75 65 0a 68 6f 73 74 3a 73 33 2e 61 6d 61 7a 6f 6e 61 77 73 2e 63 6f 6d 0a 75 73 65 72 2d 61 67 65 6e 74 3a 42 6f 74 6f 33 2f 31 2e 31 2e 30 20 50 79 74 68 6f 6e 2f 32 2e 37 2e 38 20 4c 69 6e 75 78 2f 33 2e 31 36 2e 30 2d 33 39 2d 67 65 6e 65 72 69 63 20 42 6f 74 6f 63 6f 72 65 2f 31 2e 31 2e 32 0a 78 2d 61 6d 7a 2d 63 6f 6e 74 65 6e 74 2d 73 68 61 32 35 36 3a 31 38 39 34 61 31 39 63 38 35 62 61 31 35 33 61 63 62 66 37 34 33 61 63 34 65 34 33 66 63 30 30 34 63 38 39 31 36 30 34 62 32 36 66 38 63 36 39 65 31 65 38 33 65 61 32 61 66 63 37 63 34 38 66 0a 78 2d 61 6d 7a 2d 64 61 74 65 3a 32 30 31 35 30 38 30 39 54 31 36 31 36 33 33 5a 0a 78 2d 61 6d 7a 2d 73 65 72 76 65 72 2d 73 69 64 65 2d 65 6e 63 72 79 70 74 69 6f 6e 3a 61 77 73 3a 6b 6d 73 0a 0a 63 6f 6e 74 65 6e 74 2d 6d 64 35 3b 65 78 70 65 63 74 3b 68 6f 73 74 3b 75 73 65 72 2d 61 67 65 6e 74 3b 78 2d 61 6d 7a 2d 63 6f 6e 74 65 6e 74 2d 73 68 61 32 35 36 3b 78 2d 61 6d 7a 2d 64 61 74 65 3b 78 2d 61 6d 7a 2d 73 65 72 76 65 72 2d 73 69 64 65 2d 65 6e 63 72 79 70 74 69 6f 6e 0a 31 38 39 34 61 31 39 63 38 35 62 61 31 35 33 61 63 62 66 37 34 33 61 63 34 65 34 33 66 63 30 30 34 63 38 39 31 36 30 34 62 32 36 66 38 63 36 39 65 31 65 38 33 65 61 32 61 66 63 37 63 34 38 66</CanonicalRequestBytes><RequestId>A990F7ABC11FB880</RequestId><HostId>SagV4viT6FLp09RTuwfBi59y1xmehDIK5DY9+LoUxDI17xgsqIWBFd+JztHeBjGb</HostId></Error>\n2015-08-09 09:16:33,859 botocore.hooks [DEBUG] Event needs-retry.s3.PutObject: calling handler <botocore.retryhandler.RetryHandler object at 0x7f248e158790>\n2015-08-09 09:16:33,860 botocore.retryhandler [DEBUG] No retry needed.\nTraceback (most recent call last):\n  File \"./botobug.py\", line 11, in <module>\n    'test.py', XXXX', 'test.py', extra_args=extra_args)\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/s3/transfer.py\", line 623, in upload_file\n    self._put_object(filename, bucket, key, callback, extra_args)\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/s3/transfer.py\", line 633, in _put_object\n    **extra_args)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 269, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 323, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (SignatureDoesNotMatch) when calling the PutObject operation: The request signature we calculated does not match the signature you provided. Check your key and signing method.\n Hi Kyle,\nI have added the log to github following the exact repro steps you had. If you can give me any pointers on which botocore code to look at, I could also help debug from my side.\nThanks,\nLakshmi.\n\n> On Aug 7, 2015, at 4:22 PM, Kyle Knapp notifications@github.com wrote:\n> \n> Not yet. We are still investigating. Really the only difference I saw was that you had some metadata, but when I specified metadata it still worked. If I could get a minimal amount of steps so that I could reproduce it that would be awesome, like how I did in my previous comment.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n From your debug logs, the canonicalization we calculate matches exactly what S3's error message says the canonicalization should be.  The only thing else that would be causing this error is because we actually aren't signing the string properly which either means:\n- There's a bug in how we compute hmacs\n- You have invalid credentials.\n\nWe can quickly rule out option two by trying a few things.  Can you ensure that the following calls work for you:\n\n```\n# Non sigv4 call to s3.\nboto3.client('s3').list_buckets()\n# Sigv4 call to other service besides s3.\nboto3.client('iam').list_users()\n```\n\nIf both of those calls work for you then it suggests something's wrong in how we calculate hmacs that we'll need to dig into.\n Both of the calls succeed. So, I don't think it is a problem with credentials.\nAlso, kms encryption works with Java SDK. Its only with the boto3 , I get the error. I think it must be a hmac related issue , like you point out. \nIs there anything I can do to identify the problem code?\n In looking at the debugs more in depth, it looks like the canonical request in your debug log matches up, but the string to sign (which is built from the canonical request) doesn't match what the service expects:\n\n```\nEXPECTED:\n\nAWS4-HMAC-SHA256\n20150809T161633Z\n20150809/us-east-1/s3/aws4_request\na2788e1fc219207d032f3ecbbb3341d64f09d0bf06c6484e9d5e2a0554adeb06\n\n\nACTUAL:\n\nAWS4-HMAC-SHA256\n20150809T161633Z\n20150809/us-east-1/s3/aws4_request\n058e2ee7a218f423ba8fc95c83fbb51041f0799f500a7ad85c4f61150c5c564f\n\n```\n\nThe code for the string to sign is [here](https://github.com/boto/botocore/blob/develop/botocore/auth.py#L286-L296).  I'm guessing this is where the issue is.  This seems to also fit the error pattern.  It's not affected by other services and not affected by S3 without signature version 4.  So it's something specific to how we're computing the string to sign for this request.  We'll keep digging and let you know what we find.\n Another update, the specific line that's different is the sha256 of the canonical request, which comes from this line here: https://github.com/boto/botocore/blob/develop/botocore/auth.py#L295.  If I take the canonical request from your debug logs and compute the sha256 exactly as that linked line of code does, I get `a2788e1fc219207d032f3ecbbb3341d64f09d0bf06c6484e9d5e2a0554adeb06`, which is the same value that S3 expects.\n\nI'm not sure why your actual SHA256 checksum has a value of `058e2ee7a218f423ba8fc95c83fbb51041f0799f500a7ad85c4f61150c5c564f` instead.  It would be great if you could verify these checksums on your end as well to double check you're seeing the same behavior I'm seeing.\n ok, I'll take a look at that on my side and respond back.\n I set a breakpoint in string_to_sign, and noticed that I got \nb57194b0664de7824cd28281a2b70379722f1c5808fd1fe1a415b506dde493ee which is different from what I got before. I upgraded boto3 to  1.1.1 and my botocore is now 1.1.8 which was part of the canonical request. The original canonical request had boto3 1.1.0 and botocore 1.1.2. That may be the reason for getting a different string to sign. I still get the signature mismatch error. After string to sign, the code computes the signature. Could there be a problem with that code?\n Would you happen to have non-ascii characters in any part of your request (e.g custom metadata)?\n\nThe line that computes the checksum is literally `sts.append(sha256(canonical_request.encode('utf-8')).hexdigest())`, so the only thing that looks like it could cause problems is _possibly_ the encoding to utf-8.\n\nAnd just to confirm, does this issue happen if you don't enable KMS server side encryption (that is, if you don't provide `extra_args={'ServerSideEncryption': 'aws:kms'}`)?.  Would still like to reproduce the issue on my end to also help troubleshoot.\n I get the error without extra_args. Here is the repro I tried\nclient = boto3.client('s3', config=Config(signature_version='s3v4'))\ntransfer = S3Transfer(client)\n#extra_args = {'ServerSideEncryption': 'aws:kms'}\nboto3.set_stream_logger('botocore')\ntransfer.upload_file(\n    'test.py', 'xxxx', 'test.py')\n\nI'm taking a look at my request carefully for any non ascii characters. \nThe same bucket and same access, secret keys work with the kms in java sdk. So may be the user agent value in canonical request that is different between the both has non ascii character. I can't casually find any. \n ok, I figured the problem. Thank you for the pointer with the non ascii character.\nIt was a '/' used in the bucket .I have a bucket and a folder underneath. In my repro steps above --\nxxxx = bucket/folder\n/ gets converted to %2F in the url.\nUploading directly to bucket without the folder works. Now my question is how to upload file to the folder underneath the bucket. In java code I could use bucket/folder for bucket. \nAlso in Boto3, for SSE-S3 it uploads correctly when xxxx=bucket/folder. \n I think that the bug is in botocore serialize.py\ndef serialize_to_request(self, parameters, operation_model):\nShould this function or the one calling it split the bucket and key parameters by '/' before doing a utf-8 ?\n Oh that makes total sense now.  The key argument should actually contain the path not the bucket, that is: `upload_file(Bucket=\"mybucket\", Key=\"path/to/my/key.txt\"`, ...).\n\nI think we can improve a few things, specifically we can validate the Bucket name parameter before making the actual API call.  From their docs: http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html, chars such as `/` aren't allowed and if we had validation in place, it would have been straightforward to fix based on the error message.\n\nLeaving this open until we can get better validation in place.\n\nThanks for digging into this!\n Actually java sdk allows / in bucket , so does upload_file when you use AES256 or no encryption. \nCould we make it in parity with the other code and allow / in bucket?\nBucket name itself in S3 doesnot contain the '/' but the other code just understands everything after '/' to be part of the key and works seamlessly.\n The [S3 docs](http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html) document what a valid bucket name is, and I think it makes sense to validate the rules they've specified:\n\n> The rules for bucket names in the US Standard region allow bucket names to be as long as 255 characters, and bucket names can contain any combination of uppercase letters, lowercase letters, numbers, periods (.), hyphens (-), and underscores (_).\n\nThe fact that it works now for some specific cases is a bug.\n  Boto3's attempt to graciously handle differences in capitalization in resource names results in inconsistent behavior with respect to emitters. If the expected capitalization is called, emitters are called, but if the wrong capitalization is provided, the API still accepts it but doesn't call the emitters.\n\nFor the below example, notice that the `load()` method is attached to the bucket via event emitters at https://github.com/boto/boto3/blob/1.1.0/boto3/session.py#L284\n\nNotice the difference in capitalization between \"s3\" and \"S3\" in the 2nd and 3rd lines.\n\n```\n>>> import boto3\n>>> boto3.resource('s3', region_name='us-east-1').Bucket('foobar').load()\n>>> boto3.resource('S3', region_name='us-east-1').Bucket('foobar').load()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'S3.Bucket' object has no attribute 'load'\n```\n\nThis happens because in the latter case, the event `creating-resource-class.S3.Bucket` is emitted, not the lowercased `creating-resource-class.s3.Bucket` as was registered in session.py\n\nEither the capitalized \"S3\" should be disallowed, or the emitters should still be called when the capitalized \"S3\" passed in (by normalizing the capitalization somewhere).\n Pretty sure this is just a bug.  All of our docs show creating clients/resources using their lowercased name.  I think we should just remove the ability to make this case insensitive and keep it simple.  I don't really see a benefit of supporting things like `boto3.resource('eC2')`.\n\nThoughts?\n\ncc @kyleknap @mtdowling\n @kyleknap Filed https://github.com/boto/botocore/issues/611.  Let's track this over there.\n  Not sure if this is a defect.\n\nFilter on a vpc.instances causes instances from all VPCs to be returned\n\n```\n>>> len(list(evpc.instances.all()))\n8\n>>> len(list(evpc.instances.filter(Filters=[{'Name':'tag:Name', 'Values':['*vpn*']}])))\n17\n>>> len(list(evpc.instances.all().filter(Filters=[{'Name':'tag:Name', 'Values':['*vpn*']}])))\n17\n```\n\nI expected only 1 vpn box in the related VPC to be returned, I got back 17 vpn boxes, one from each VPC in the AWS account.\n\nIn this case evpc is an object of `class ec2.Vpc(boto3.resources.base.ServiceResource)`\n  LGTM\n Will the doc system just automatically work with this customization because it's we're replacing an existing method on a resource?\n\nAssuming the docs are good, and the unneeded if check for the event is removed, :shipit:\n The event rename looks good.  I would prefer we don't have the functional test or switch it to an integration test.  Otherwise looks good.\n I think the changes look good for now.  We can look at improvements in the future.\n\nAs for functional tests, I think of them as tests that operate at the API used by the customer (and on a technical level don't call out to AWS).  The whole idea is to exercise end to end functionality and catch problems such as events not hooked up properly, wrong assumptions about file system access, customizations we make that don't actually work with real world JSON models we use, etc.  The more that gets mocked/patched out, the less useful functional tests become for me.\n\nYou mentioned that are similar functional tests, but I think the differences between them are what make the difference for me.  For example, other functional tests only care that `upload_file` was added to a client.  They don't _which_ upload_file method or _how_ it was added, just that by the time you get a client, `upload_file` exists.\nThis gives us flexibility to alter the implementation as long as we make sure `upload_file` gets added.  I get that it's not as simple in this test because we're replacing, not adding a method, so you have to check that it was replaced with a _specific_ method via `assertIs`.  That's why I feel here that an integ test would have been better.\n\nFWIW, you could just create a resource that's cheap to create, like `CreateVPC`.\n\nBut either way, I think it's something we can look at later if this becomes an issue.\n  This significantly reduces rendering time of the docs.\n\nAddresses #150\nSee https://github.com/boto/botocore/pull/595\n\n@kyleknap \n  When using ec2.SecurityGroup while 'ec2' is a boto resource, because the security group is created with the 'VpcId' parameter it cannot have an authorize_ingress operation performed on it as it throws \"InvalidGroup.NotFound' due to the fact that it is looking for the security group within the default vpc rather than the created one specified during the initial creation of the security group.\n\nFull error text:\n\n``` python\nTraceback (most recent call last):\n  File \"/home/sam/PycharmProjects/CoreSuite/SetUpVpc.py\", line 120, in <module>\n    inboundruleconfig()\n  File \"/home/sam/PycharmProjects/CoreSuite/SetUpVpc.py\", line 113, in inboundruleconfig\n    securitygroup.authorize_ingress(GroupName=groupnamein, IpProtocol=protocol, FromPort=int(fromport), ToPort=int(toport),CidrIp=cidrip)\n  File \"/usr/local/lib/python3.4/dist-packages/boto3/resources/factory.py\", line 343, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.4/dist-packages/boto3/resources/action.py\", line 77, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python3.4/dist-packages/botocore/client.py\", line 269, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python3.4/dist-packages/botocore/client.py\", line 323, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (InvalidGroup.NotFound) when calling the AuthorizeSecurityGroupIngress operation: The security group 'NewSG' does not exist in default VPC 'vpc-3d4b1358' \n```\n\nThe 'default vpc' is not the same as the vpc which 'NewSG' is in, as 'NewSG' is in vpc-3ed0d85b .\n\nIn my code I create the security group via the ec2 client (ec2c), and specify the vpc like so:\n\n``` python\nsecuritygroupid = ec2c.create_security_group(GroupName=groupnamein,Description=descriptionin,VpcId=vpcid)['GroupId']\n```\n\nThen, I define 'securitygroup' as a resource (ec2r):\n\n``` python\nsecuritygroup = ec2r.SecurityGroup(securitygroupid)\n```\n\nAnd the issue occurs here, when attempting to authorize_ingress:\n\n``` python\nsecuritygroup.authorize_ingress(GroupName=groupnamein, IpProtocol=protocol, FromPort=int(fromport), ToPort=int(toport),CidrIp=cidrip)\n```\n The security group is associated with the non-default (created) VPC, confirmed by securitygroup.vpc and the EC2 GUI. \nHere's the trace:\n\n``` python\nBegin security group configuration...\n\nEnter a name for new security group (this will serve as the Name tag and Group name): DebugSG\n\nEnter the description for the new security group: FOr debugging.\n2015-06-30 14:17:46,617 boto3.resources.factory [DEBUG] Loading ec2:SecurityGroup\n2015-06-30 14:17:46,631 boto3.resources.action [INFO] Calling ec2:create_tags with {'Resources': ['sg-5890603f'], 'Tags': [{'Value': 'DebugSG', 'Key': 'Name'}]}\n2015-06-30 14:17:46,949 boto3.resources.action [DEBUG] Response: {'ResponseMetadata': {'HTTPStatusCode': 200, 'RequestId': '077bbf1e-abbb-4fe2-8d4d-6253d5d93e7b'}}\n2015-06-30 14:17:46,952 boto3.resources.factory [DEBUG] Loading ec2:Tag\n2015-06-30 14:17:46,957 boto3.resources.model [DEBUG] Renaming Tag attribute resource_id\n2015-06-30 14:17:46,958 boto3.resources.model [DEBUG] Renaming Tag attribute key\n2015-06-30 14:17:46,958 boto3.resources.model [DEBUG] Renaming Tag attribute value\n\nSecurity group <sg-5890603f> (DebugSG) created\n\nBegin configuration of inbound rules for security group <sg-5890603f>\n\nEnter the protocol (TCP, UDP, ICMP or -1 for all): tcp\nEnter starting port: 1521\nEnter ending port (can be same as starting): 1521\nEnter source IP (where request comes from) in CIDR form (e.x: 72.122.141.0/32): 74.94.171.213/32\n2015-06-30 14:18:13,867 boto3.resources.action [INFO] Calling ec2:authorize_security_group_ingress with {'GroupName': 'DebugSG', 'GroupId': 'sg-5890603f', 'CidrIp': '74.94.171.213/32', 'FromPort': 1521, 'IpProtocol': 'tcp', 'ToPort': 1521}\nTraceback (most recent call last):\n  File \"/usr/share/pycharm/helpers/pydev/pydevd.py\", line 2357, in <module>\n    globals = debugger.run(setup['file'], None, None, is_module)\n  File \"/usr/share/pycharm/helpers/pydev/pydevd.py\", line 1777, in run\n    pydev_imports.execfile(file, globals, locals)  # execute the script\n  File \"/usr/share/pycharm/helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc) \n  File \"/home/sam/PycharmProjects/CoreSuite/SetUpVpc.py\", line 122, in <module>\n    inboundruleconfig()\n  File \"/home/sam/PycharmProjects/CoreSuite/SetUpVpc.py\", line 115, in inboundruleconfig\n    securitygroup.authorize_ingress(GroupName=groupnamein, IpProtocol=protocol, FromPort=int(fromport), ToPort=int(toport),CidrIp=cidrip)\n  File \"/usr/local/lib/python3.4/dist-packages/boto3/resources/factory.py\", line 343, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.4/dist-packages/boto3/resources/action.py\", line 77, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python3.4/dist-packages/botocore/client.py\", line 269, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python3.4/dist-packages/botocore/client.py\", line 323, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (InvalidGroup.NotFound) when calling the AuthorizeSecurityGroupIngress operation: The security group 'DebugSG' does not exist in default VPC 'vpc-3d4b1358'\nTraceback (most recent call last):\n\nProcess finished with exit code 1\n```\n\nHere's my code for that section, I'm aware that the recursive function is unnecessary :stuck_out_tongue: I'm planning on optimizing with a better while loop when I'm done with this...\n\n``` python\nprint('\\nBegin security group configuration...\\n')\ngroupnamein = input('Enter a name for new security group (this will serve as the Name tag and Group name): ')\ndescriptionin = input('\\nEnter the description for the new security group: ')\n\nboto3.set_stream_logger('boto3')\n\nsecuritygroupid = ec2c.create_security_group(GroupName=groupnamein,Description=descriptionin,VpcId=vpcid)['GroupId']\n\nsecuritygroup = ec2r.SecurityGroup(securitygroupid)\n\nsecuritygroup.create_tags(Resources=[securitygroupid],Tags=[{'Key': 'Name', 'Value': groupnamein}])\nprint('\\nSecurity group <' + securitygroupid + '> (' + groupnamein + ') created\\n')\n#Need multiple inbound rules with changing ports and such\nprint('Begin configuration of inbound rules for security group <' + securitygroupid + '>\\n')\ndef inboundruleconfig():\n    #no way I'm making it support over 50 protocols individually, just TCP UDP ICMP or -1 for now\n    #can configure ip based perms if needed later (SourceSecurityGroupOwnerId/SourceSecurityGroupName)\n    protocol = input('Enter the protocol (TCP, UDP, ICMP or -1 for all): ')\n    fromport = input('Enter starting port: ')\n    toport = input('Enter ending port (can be same as starting): ')\n    cidrip = input('Enter source IP (where request comes from) in CIDR form (e.x: 72.122.141.0/32): ')\n    securitygroup.authorize_ingress(GroupName=groupnamein, IpProtocol=protocol, FromPort=int(fromport), ToPort=int(toport),CidrIp=cidrip)\n    rule = '''-------------------------------------------------------------------------\n| Protocol: {ip} | From Port: {fp} | To Port: {tp} | Source: {cidr} |\n------------------------------------------------------------------------\\n'''\n    print(rule.format(ip=protocol,fp=fromport,tp=toport,cidr=cidrip))\ncont = 'y'\nwhile not cont.startswith('N') and not cont.startswith('n'):\n    inboundruleconfig()\n    cont = input('Create another rule? (y/n): ')\n```\n\nI even tried creating the security group and referencing the ID in the response later like so:\n\n``` python\ncreatesg = ec2c.create_security_group(GroupName=groupnamein,Description=descriptionin,VpcId=vpcid)\n\nsecuritygroupid = createsg['GroupId']\n```\n\n(As I suspected, this changed nothing :disappointed: )\n\n``` python\nBegin security group configuration...\n\nEnter a name for new security group (this will serve as the Name tag and Group name): SecurityGroupDude\n\nEnter the description for the new security group: YeahDude\n2015-06-30 14:37:00,154 boto3.resources.factory [DEBUG] Loading ec2:SecurityGroup\n2015-06-30 14:37:00,159 boto3.resources.action [INFO] Calling ec2:create_tags with {'Resources': ['sg-c09767a7'], 'Tags': [{'Key': 'Name', 'Value': 'SecurityGroupDude'}]}\n\nSecurity group <sg-c09767a7> (SecurityGroupDude) created\n\nBegin configuration of inbound rules for security group <sg-c09767a7>\n\nEnter the protocol (TCP, UDP, ICMP or -1 for all): 2015-06-30 14:37:00,441 boto3.resources.action [DEBUG] Response: {'ResponseMetadata': {'RequestId': '9f79bf1b-6e7e-49b2-9faa-844099de3ff9', 'HTTPStatusCode': 200}}\n2015-06-30 14:37:00,441 boto3.resources.factory [DEBUG] Loading ec2:Tag\n2015-06-30 14:37:00,442 boto3.resources.model [DEBUG] Renaming Tag attribute resource_id\n2015-06-30 14:37:00,442 boto3.resources.model [DEBUG] Renaming Tag attribute key\n2015-06-30 14:37:00,442 boto3.resources.model [DEBUG] Renaming Tag attribute value\nTCP\nEnter starting port: 1521\nEnter ending port (can be same as starting): 1521\nEnter source IP (where request comes from) in CIDR form (e.x: 72.122.141.0/32): 74.94.171.213/32\n2015-06-30 14:37:42,051 boto3.resources.action [INFO] Calling ec2:authorize_security_group_ingress with {'GroupId': 'sg-c09767a7', 'CidrIp': '74.94.171.213/32', 'IpProtocol': 'TCP', 'FromPort': 1521, 'ToPort': 1521, 'GroupName': 'SecurityGroupDude'}\nTraceback (most recent call last):\n  File \"/home/sam/PycharmProjects/CoreSuite/SetUpVpc.py\", line 124, in <module>\n    inboundruleconfig()\n  File \"/home/sam/PycharmProjects/CoreSuite/SetUpVpc.py\", line 117, in inboundruleconfig\n    securitygroup.authorize_ingress(GroupName=groupnamein, IpProtocol=protocol, FromPort=int(fromport), ToPort=int(toport),CidrIp=cidrip)\n  File \"/usr/local/lib/python3.4/dist-packages/boto3/resources/factory.py\", line 343, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.4/dist-packages/boto3/resources/action.py\", line 77, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python3.4/dist-packages/botocore/client.py\", line 269, in _api_call\n    return self._make_api_call(operation_name, kwargs)\n  File \"/usr/local/lib/python3.4/dist-packages/botocore/client.py\", line 323, in _make_api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (InvalidGroup.NotFound) when calling the AuthorizeSecurityGroupIngress operation: The security group 'SecurityGroupDude' does not exist in default VPC 'vpc-3d4b1358'\n\nProcess finished with exit code 1\n\n```\n Okay, so the ec2 **CLIENT** has a 'GroupId' that you can pass to it which will make it work, however the **RESOURCE** is unable to have this parameter, therefore making it so you cannot use a group outside of the default VPC using the resource method.\n\n``` python\nec2c.authorize_security_group_ingress(GroupName=groupnamein, GroupId=securitygroupid, IpProtocol=protocol, FromPort=int(fromport), ToPort=int(toport),CidrIp=cidrip)\n```\n\nWhere `ec2c` is a `boto3.client('ec2')`\n @SamCyanide I came here looking for a solution to the same problem. Turns out in a VPC [you must use](https://forums.aws.amazon.com/thread.jspa?threadID=158709) GroupId / SecurityGroupId and not GroupName / SecurityGroupName. \n\n@kyleknap I'd submit a docs PR if I could find the source.\n I believe I'm running into this issue here, and I'm not sure how to proceed.\n\nI have a security group in a non-default VPC, and I want to authorize ingress from the security group to itself, so I do this:\n\n``` python\ncluster_group.authorize_ingress(SourceSecurityGroupName=cluster_group.group_name)\n```\n\nThis works if `cluster_group` is a security group in my default VPC, but in a non-default VPC this yields the following error:\n\n```\nbotocore.exceptions.ClientError: An error occurred (InvalidGroup.NotFound) when calling the \nAuthorizeSecurityGroupIngress operation: The security group 'flintrock-nick' does not exist in \ndefault VPC 'vpc-xxxxxxxx'\n```\n\nSo like @SamCyanide I'm puzzled by the fact that EC2 is looking for the security group in my default VPC when I created it in a non-default VPC.\n\n@kyleknap - Given a security group in a non-default VPC, how are we supposed to reference source security groups in `authorize_ingress()`, assuming they are in the same VPC?\n\nTaking my example, how am I supposed to authorize ingress from a security group to itself if that security group is in a non-default VPC?\n Related issue: https://github.com/boto/boto3/issues/189\n I believe I've found the issue: I was not explicitly specifying the VPC when I filtered the list of security groups against my account. You can have 2 security groups with the same name if they are in different VPCs, so I was referring to different security groups by the same name, which confused me.\n\nPlease disregard my earlier comments. :sweat_smile: \n  cc @kyleknap @mtdowling\n I may be misremembering the discussion.\n\nI thought the plan was to follow semver, in which new features warrant a minor version bump.\n\nBotocore patch versions would be bug fixes/service updates.\n :+1: \n Yeah that sounds fine.\n  :shipit:  Looks good once the botocore PR gets merged.\n  I would suggest _not_ creating a tutorial directory.  This is a lesson learned from boto, where these service specific tutorials never get fleshed out.\n\nInstead I would recommend creating a dynamodb guide that goes under the pre-existing guide/ directory.  We would only have service guides for things that have high level abstractions.\n\nI think eventually we'll make the existing tutorial more generic and less SQS specific, but I would not advise per-service tutorials.\n\nAnd finally, we should also somehow show the expected output of each call.  We can filter out things like request ids, etc, but I think it's important for the user to see the expected output so they have some indication if they're getting the same results the tutorial gets when they call the various methods.\n\nContent wise, I think it looks good.\n +1 to everything except moving the tutorial over to `guide/sqs.rst`.  While I agree with you that the tutorial should get updated, SQS has no high level abstractions so doesn't need a page in the user guide.  I'd rather keep the tutorial in its original location and have one of us update it to be less SQS specific in the near future.\n\nWhat do you think?\n :shipit:  Looks good.\n  Related to https://github.com/boto/botocore/pull/591\n\n@kyleknap \n  Thanks for all the hard work on boto3, guys!\n\nI suggest to add the ability to add an alert to your scaling policy during put_scaling_metric.  \n\nI have been implementing a scheme for automating auto-scaling groups, launch configurations, and scaling policies using boto3.\n\nIn the put_scaling_policy method I don't see an option to apply an existing alert to a auto_scaling_group.\n\nDuring our automation I would want to create a launch configuration, cloudwatch alarm, auto_scaling_group then apply the alarm to the auto_scaling_group in the scaling policy.\n\nOtherwise everytime I add a new scaling policy to my auto_scaling_group I have to manually add the cloudwatch alarm.  Is there a different call to add alert to the scaling policy that I am missing?\n  I think there are two improvements to be made to the documentation:\n- Correctly link the documentation source - the [EC2 reference](https://boto3.readthedocs.org/en/latest/reference/services/ec2.html) links to an unexistent page: https://github.com/boto/boto3/blob/develop/docs/source/reference/services/ec2.rst. It makes it difficult to contribute back\n- The EC2 page size is quite big and difficult to navigate through - 4MB:\n\n![image](https://cloud.githubusercontent.com/assets/119276/8356472/ea51e074-1b2b-11e5-9115-b90cacd722a6.png)\n Not to butt in too intrusively, but I think that on services that can be used as a resource & client should be separated into subsections. (Like ec2) because the references are much different, but can accomplish many of the same tasks. \n\nAlso, although ctrl+f works pretty well to find what you want, a lot of time there are a lot of instances of a word you may be looking for. If you know exactly what you want (e.x. start_instance) there won't be a whole bunch of entries (around 10-20 usually), but if you aren't exactly sure what the keyword is, you'll have to sift through dozens of entries related to one word (such as create_tags).\n Hi @kyleknap, thanks for the response!\n\n1) I didn't quite understand what you meant. If I were to help fix a typo or an incorrect statement in the docs text, how would I begin? The broken link I've mentioned is actually present on the page itself:\n\n![image](https://cloud.githubusercontent.com/assets/119276/8362205/ea0cb89c-1b4d-11e5-86bc-fddbccde1411.png)\n\n2) It can be tricky having everything in a single page which is very large, when navigating through EC2's page it became quite cumbersome to go through different levels on the page (`EC2 -> Instance -> Attributes and Actions`). Moreover, the page is **959864** pixels high, even resizing the window hangs. I think we need to find a balance between navigability and pagesize: breadcrumbs and treelike navigation like you've mentioned are good alternatives.\n\nAnother alternative would be to give the option to the reader to choose between reading the full thing on a single page, or break it down in different levels, much like sobre online versions of books do (full book, chapter, sections, subsections).\n\nAnother nice addition would be some \"live breadcrumbs\" that show how deep you are while scrolling down the page. I'd go beyond and say that we could also use some better styling on the tables, code snippets and etc.\n\nRegardless of the path chosen, I'd urge the maintainers to review the page's weight - it takes almost 30 seconds on my machine for the page to fully load and I be able to navigate through links, there's definitely something wrong going on:\n\n![image](https://cloud.githubusercontent.com/assets/119276/8362455/44d68234-1b4f-11e5-973f-b05baf97bba8.png)\n @arturhoo\nIf your browser is hanging, something is wrong with your system. I tried re-sizing the window and loading the page on an old 80gb hard drive in my 2004 laptop, and an SSD and neither had any delays to speak of.\n\nWhat are your system specs? I understand that it should be able to run on older systems, but even on my 2004 laptop it loads the entire page in about 5 seconds.\n @SamCyanide the page hangs on Chrome Beta 44 very badly and on Firefox 38 things are a little bit better. I'm on a Macbook Pro, SSD, 16GB ram and i7 so I don't think that it the issue.\n The load times are better thanks to #159, the other two standing issues that were mentioned on this thread:\n- Improve navigability\n- Correctly link each page to its source code\n Glad to hear that helped.\n\n> Improve navigability\n\nI am hoping to add more depth to the left-nav and make it a tree based navigation that can be expanded and collapsed.\n\n> Correctly link each page to its source code\n\nAll of the pages that are actually backed by .rst files in the repo appear to link correctly. The only pages that do not link correctly are the pages we generate at doc build time (e.g., service docs). I'm not sure there's anything we can do here to have rtd hide the source links.\n I like the idea of tree-based navigation, looking forward to test that out. Regarding the services pages, I think it would be nice to let the end users know how they can contribute to those pages - due to the boto3-botocore split I still don't know where the source to the EC2 docs is - is a must, regardless if is linked on every page page by rtd or through a dedicated page explaining how the build process works and how to contribute.\n http://boto3.readthedocs.org/en/latest/reference/services/elasticbeanstalk.html#ElasticBeanstalk.Client.check_dns_availability\n\nAnother issue, under this section, in \"CNAME\" it states the meaning of responses twice, and in the first section is states that both \"true\" and \"true\" mean the domain are available and not available. \n\nSmall typo at http://boto3.readthedocs.org/en/latest/reference/services/route53.html#Route53.Client.associate_vpc_with_hosted_zone\n\nWhere it says \"associate with AN hosted zone\", should be \"associate with a hosted zone\".\n I am going to close this issue. I think main issues have been resolved here. Let's track any specific service documentation updates in separate issues to avoid too many conversation threads.\n  I like it\n :+1: \n :shipit:\n  ```\nec2 = boto3.resource(\"ec2\")\nfor vpc in ec2.vpcs.all():\n    for subnet in vpc.subnets.all():\n        print(vpc, \"all:\", subnet)\n    for az in ec2.meta.client.describe_availability_zones()[\"AvailabilityZones\"]:\n        for subnet in vpc.subnets.filter(Filters=[{\"Name\": \"availabilityZone\", \"Values\": [az[\"ZoneName\"]]}]):\n            print(vpc, \"filter:\", subnet)\n```\n\nIt appears vpc.subnets.filter(...) admits subnets from other VPCs, while all() does not. This is confusing.\n ```\nec2 = boto3.resource(\"ec2\")\nfor vpc in ec2.vpcs.all():\n    for subnet in vpc.subnets.all():\n        print(vpc, \"all:\", subnet)\n    for az in ec2.meta.client.describe_availability_zones()[\"AvailabilityZones\"]:\n        for subnet in vpc.subnets.filter(Filters=[{\"Name\": \"availabilityZone\", \"Values\": [az[\"ZoneName\"]]}]):\n            print(vpc, az[\"ZoneName\"], \"filter:\", subnet)\n```\n\n```\nec2.Vpc(id='vpc-71979a15') us-east-1c filter: ec2.Subnet(id='subnet-65b8557e')\nec2.Vpc(id='vpc-f0979a96') us-east-1c filter: ec2.Subnet(id='subnet-65b8557e')\nec2.Vpc(id='vpc-b86defde') all: ec2.Subnet(id='subnet-65b8557e')\nec2.Vpc(id='vpc-b86defde') us-east-1c filter: ec2.Subnet(id='subnet-65b8557e')\nec2.Vpc(id='vpc-fb979a9d') us-east-1c filter: ec2.Subnet(id='subnet-65b8557e')\nec2.Vpc(id='vpc-d9979abd') us-east-1c filter: ec2.Subnet(id='subnet-65b8557e')\n```\n\n(IDs changed)\n\nWhat I see is a particular subnet showing up in the all() listing for _all_ VPCs in a region, not just for the one that it really belongs to. I believe the other VPCs are empty.\n  Hi Guys,\n\nThe describe_auto_scaling_groups function is returning a dictionary very different from the one described in the docs.  \n\nI am trying to get the status of an auto_scaling_group after launch and the returned dictionary is not returning the status key as documented here...\n\nhttp://boto3.readthedocs.org/en/latest/reference/services/autoscaling.html#AutoScaling.Client.describe_auto_scaling_instances\n\nThe dictionary I am returning is...\n{\n    u'AutoScalingGroups': [\n        {\n            u'AutoScalingGroupARN': 'arn: aws: autoscaling: us-east-1: 462322024086: autoScalingGroup: 37e299b7-c8c7-4b1e-a4c8-b00a7a46352d: autoScalingGroupName/deploy-docker-blueprint',\n            u'HealthCheckGracePeriod': 1200,\n            u'SuspendedProcesses': [\n\n```\n        ],\n        u'DesiredCapacity': 2,\n        u'Tags': [\n            {\n                u'ResourceType': 'auto-scaling-group',\n                u'ResourceId': 'deploy-docker-blueprint',\n                u'PropagateAtLaunch': True,\n                u'Value': 'deploy',\n                u'Key': 'Environment'\n            },\n            {\n                u'ResourceType': 'auto-scaling-group',\n                u'ResourceId': 'deploy-docker-blueprint',\n                u'PropagateAtLaunch': False,\n                u'Value': 'deploy-docker-blueprint',\n                u'Key': 'Name'\n            },\n            {\n                u'ResourceType': 'auto-scaling-group',\n                u'ResourceId': 'deploy-docker-blueprint',\n                u'PropagateAtLaunch': True,\n                u'Value': 'docker',\n                u'Key': 'Puppet_role'\n            },\n            {\n                u'ResourceType': 'auto-scaling-group',\n                u'ResourceId': 'deploy-docker-blueprint',\n                u'PropagateAtLaunch': True,\n                u'Value': 'John.Dzialo',\n                u'Key': 'Requester'\n            },\n            {\n                u'ResourceType': 'auto-scaling-group',\n                u'ResourceId': 'deploy-docker-blueprint',\n                u'PropagateAtLaunch': True,\n                u'Value': 'blueprint',\n                u'Key': 'Xively_service'\n            }\n        ],\n        u'EnabledMetrics': [\n\n        ],\n        u'LoadBalancerNames': [\n            'deploy-autoscale-test'\n        ],\n        u'AutoScalingGroupName': 'deploy-docker-blueprint',\n        u'DefaultCooldown': 300,\n        u'MinSize': 2,\n        u'Instances': [\n            {\n                u'InstanceId': 'i-d801cd0b',\n                u'AvailabilityZone': 'us-east-1c',\n                u'HealthStatus': 'Unhealthy',\n                u'LifecycleState': 'Terminating',\n                u'LaunchConfigurationName': 'deploy-docker-blueprint'\n            },\n            {\n                u'InstanceId': 'i-f0456a59',\n                u'AvailabilityZone': 'us-east-1b',\n                u'HealthStatus': 'Healthy',\n                u'LifecycleState': 'InService',\n                u'LaunchConfigurationName': 'deploy-docker-blueprint'\n            },\n            {\n                u'InstanceId': 'i-bb25e968',\n                u'AvailabilityZone': 'us-east-1c',\n                u'HealthStatus': 'Healthy',\n                u'LifecycleState': 'Pending',\n                u'LaunchConfigurationName': 'deploy-docker-blueprint'\n            }\n        ],\n        u'MaxSize': 4,\n        u'VPCZoneIdentifier': 'subnet-8fa61dd6,\n        subnet-c5eb71b2,\n        subnet-5693337d',\n        u'TerminationPolicies': [\n            'Default'\n        ],\n        u'LaunchConfigurationName': 'deploy-docker-blueprint',\n        u'CreatedTime': datetime.datetime(2015,\n        6,\n        23,\n        20,\n        45,\n        30,\n        565000,\n        tzinfo=tzutc()),\n        u'AvailabilityZones': [\n            'us-east-1c',\n            'us-east-1b',\n            'us-east-1d'\n        ],\n        u'HealthCheckType': 'ELB'\n    }\n],\n'ResponseMetadata': {\n    'HTTPStatusCode': 200,\n    'RequestId': 'd0acb9f1-1a73-11e5-a06b-b72d37f16e36'\n}\n```\n\n}\n\nNo Status in the dictionary.\n Secondary question...\n\nIf no Status key is in the dictionary what is the best way to verify that a auto scaling group is up and running?\n Ah.  I see now.  I did not read carefully.\n\nOK so checking the HealthStatus of the instances seems sufficient.  I will try that.\n  The service names would be much easier to navigate if they did not start with \"Amazon\" and \"AWS\". Most of the names would fit on one line and be easier to read. A screenshot of the documentation:\n\n![image](https://cloud.githubusercontent.com/assets/192336/8322854/165ebbf8-19f9-11e5-9434-0ced3071fa01.png)\n\nWe know these are Amazon products :wink: \n\nI'd be happy to make the change if given the go-ahead. I noticed these strings are pulled in from botocore. Would it be best to provide a method there to get the shorter names, or just modify them in the boto3 docs?\n Looks awesome. Thank you!\n Excellent, closing issue.\n  cc @kyleknap @mtdowling\n  :shipit:\n  Updates with the latest botocore changes and the\nremoval of the profile setter.\n\nThis will also require one change in botocore.\n\ncc @kyleknap @mtdowling\n Should be good to look at.  Looks like a prior botocore changed broke boto3, so I've included that fix in this PR as well.\n  :shipit:  Let's figure out what's going on with the tests but otherwise looks good.\n  When passing multiple tags to the `create_tags` method, I get the following backtrace:\n\n```\n  File \"boto/ec2.py\", line 160, in create\n    'Customer': instance['customer']\n  File \"/usr/home/imil/aws/awscli/lib/python2.7/site-packages/boto3/resources/fa\nctory.py\", line 340, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/usr/home/imil/aws/awscli/lib/python2.7/site-packages/boto3/resources/ac\ntion.py\", line 81, in __call__\n    return self._response_handler(parent, params, response)\n  File \"/usr/home/imil/aws/awscli/lib/python2.7/site-packages/boto3/resources/re\nsponse.py\", line 240, in __call__\n    parent, identifiers, response_item))\n  File \"/usr/home/imil/aws/awscli/lib/python2.7/site-packages/boto3/resources/re\nsponse.py\", line 284, in handle_response_item\n    value = value.pop(0)\nIndexError: pop from empty list\n```\n\nWhen creating a loop where I create the tags one after the other, everything is going smoothly.\n\nFor the record, the taglist has this form:\n\n```\n[{\n    'Key': 'Name',\n    'Value': 'myinstance'\n},{\n    'Key': 'Customer',\n    'Value': 'mycustomer'\n}]\n```\n\nI use boto3 0.0.21\n Can you share a code snippet that shows the issue?  Here's what I tried, which is working for me:\n\n```\nIn [1]: import boto3\n\nIn [2]: c = boto3.client('ec2', 'us-west-2')\n\nIn [3]: c.create_tags(Resources=['i-id'], Tags=[{'Key': 'foo', 'Value': 'bar'}, {'Key': 'foo2', 'Value': 'bar2'}])\nOut[3]:\n{'ResponseMetadata': {'HTTPStatusCode': 200,\n  'RequestId': 'requestid'}}\n```\n Of course:\n\n```\n    def mktags(self, taglst):\n        '''Makes a Filter-friendly tag list\n\n        :param dict taglst: A dict of key / value pairs\n\n        :return: Filter-friendly tag list\n        :rtype: dict\n        '''\n        tags = []\n        for t in taglst:\n            tags.append({'Key': t, 'Value': taglst[t]})\n        return tags\n```\n\nthen the main call:\n\n```\n                        tags = {\n                            'Name': '{0}_{1}'.format(\n                                dname, instance['name']\n                            ),\n                            'Customer': instance['customer']\n                        }\n                        ec2.resource.create_tags(\n                            Resources = [dev['Ebs']['VolumeId']],\n                            Tags = mktags(tags)\n                        )\n```\n\nThis code works with a single `{'Key': 'foo', 'Value': 'bar'}` item\n\n**Update**\n\nWhen using `ec2.`**client**`.create_tags`, I have the intended behavior, this bug concerns the `resource` way of doing things.\n Fixed via https://github.com/boto/boto3/pull/160\n  Hi,\n\nboto3 documentation says:\n\n```\n# Boto 2.x\nec2_connection.run_instances('<ami-image-id>')\n\n# Boto 3\nec2.create_instances(ImageId='<ami-image-id>', MinCount=1, MaxCount=5)\n```\n\nBut as a matter of fact, there's very little if none documentation on `create_instance` usage, I merely discovered how to pass more parameters using completion in `ipython`. On the contrary, the `run_instances` method is fully described. This is true for all `boto3` vs `boto2` paragraphs in the _Migrating from Boto 2.x_ section.\nAre we supposed to use the documented methods or to discover parameters from the \"new\" methods?\n\nThanks\n Thanks a lot for your answer @kyleknap \nI suspected the methods were actually the same, thats how I dealt with parameters so far.\nI'll stick to new methods as much as I can then.\n Nice, the documentation is now mentioning `create_instance`!\nPlease note there's an error regarding the `UserData` parameter, it says:\n\n```\nUserData (string) \u2013\n\nOptional -\n\nThe Base64-encoded MIME user data for the instances.\n```\n\nBut this is not true, a plain-text string must be passed as boto3 does the `base64` conversion itself. Been bit by that one :)\n Thanks.  Our docs now say that this value will be base 64 encoded for you, but I've also added a tracking issue to be more explicit about the fact that you don't have to base64 encode this value: https://github.com/boto/botocore/issues/585\n  :shipit:\n  Apologies for what sounds like a very basic question. In [this example](http://docs.aws.amazon.com/AmazonS3/latest/dev/ListingKeysHierarchy.html) from the s3 docs is there a way to list the continents? I was hoping this might work, but it doesn't seem to:\n\n``` python\nimport boto3\n\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('edsu-test-bucket')\n\nfor o in bucket.objects.filter(Delimiter='/'):\n    print(o.key)\n```\n\nHowever, the equivalent code using boto2 does seem to work the way I expect:\n\n``` python\nimport boto\n\ns3 = boto.connect_s3()\nbucket = s3.get_bucket('edsu-test-bucket')\n\nfor o in bucket.list(delimiter='/'):\n    print(o.name)\n```\n @kyleknap: the boto2 sample will list only the top-level \u201cdirectories\u201d using the unique portion before the delimiter \u2013 i.e. given files like `North America/United States/California` and `South America/Brazil/Bahia` it would return `North America` and `South America`.\n Thanks for taking a look @acdha & @kyleknap. Yes, if you assume the above snippets are `a.py` and `b.py` the output should look like this:\n\n```\n% ./a.py\n\n% ./b.py\nEurope/\nNorth America/\n```\n\nI made `s3://edsu-test-bucket` public if you want to give it a try. This is what it looks like from aws-cli, but you can see for yourself since it is public.\n\n```\n% aws s3 ls s3://edsu-test-bucket\n                           PRE Europe/\n                           PRE North America/\n\n% aws s3 ls --recursive s3://edsu-test-bucket\n2015-06-18 14:41:31          0 Europe/France/Acquitaine/Bordeaux\n2015-06-18 14:41:31          0 North America/Canada/Quebec/Montreal\n2015-06-18 14:41:31          0 North America/USA/Washington/Bellevue\n2015-06-18 14:41:31          0 North America/USA/Washington/Seattle\n```\n @edsu I ran into this as well. The \"directories\" to list aren't really objects (but substrings of object keys), so I do not expect them to show up in an objects collection. As a quick workaround, I list them via `client.list_objects`.\n\nFor non-public buckets (or buckets that you can explicitly access):\n\n``` python\nimport boto3\n\ns3 = boto3.resource('s3')\nbucket = s3.Bucket('edsu-test-bucket')\nresult = bucket.meta.client.list_objects(Bucket=bucket.name,\n                                         Delimiter='/')\nfor o in result.get('CommonPrefixes'):\n    print(o.get('Prefix'))\n```\n\nWould print:\n\n`Europe/`\n`North America/`\n\nThis doesn't support anonymous calls, though. When I run this, I get an `AccessDenied` error. \n\nFor anonymous calls I haven't found a way to use a s3 resource at all (so far). But I can call `list_objects` on a low-level client: \n\n``` python\nimport boto3\nimport botocore\n\nclient = boto3.client('s3',  # region_name='us-east-1',\n                      config=botocore.client.Config(signature_version=botocore.UNSIGNED))\nresult = client.list_objects(Bucket='edsu-test-bucket',\n                             Prefix='North America/',\n                             Delimiter='/'\n                             )\nfor o in result.get('CommonPrefixes'):\n    print(o.get('Prefix'))                   \n```\n\nNot very beautiful, but it prints what I wanted\n\n`North America/Canada/`\n`North America/USA/`\n @amatthies You raise a really good point \u2013 while the low-level interface is the same, this is definitely a different class of response. Maybe it's as simple as documenting `list_objects` as the best way to do this?\n @kyleknap Great, thanks. `client.get_paginator('list_objects')` answers this question.\nLooking forward to some hints on the event system.\n  Fixes #98.\n\nThis works by registering two handlers to disable/re-enable\ncallbacks during the request-created event handling.  So\nfor signature version 4, you now have::\n\n```\n* request-created:\n     - disable_callbacks() (via register_first())\n     - client._sign_request()  (via register())\n     - enable_callbacks()  (via register_last())\n```\n\nAdded an integration test for this because the crux of this\nworking is because of the coordination of the event system\nwith the disabling/enabling of callbacks.\n\nThis will require a corresponding fix in botocore as well. (https://github.com/boto/botocore/pull/560)\n\ncc @kyleknap @mtdowling\n  :shipit:\n  :ship: \n  This fixes https://github.com/boto/boto3/issues/123.\n\nThe issue was that due to a bug in botocore (which is addressed in https://github.com/boto/botocore/pull/554), we were pulling in the latest API version in botocore.  However, in boto3's doc generator, when it looked for the corresponding resource model associated with the API version, it didn't find it so we'd skip the EC2 resource documentation.  This PR adds that missing API version.\n\ncc @kyleknap @mtdowling\n Not ready for review, I need to address a few failing tests first.  I'll update when this is ready.\n Tests fixed, ready to be looked at.\n  Would like some feedback on whether we want this change.  This is proposed from https://github.com/boto/boto3/issues/102.\n\nIt does solve the problem that you will no longer get a confusing error when accessing `bucket.creation_date`, but we have to make a ListBuckets requests to get this information.\n\ncc @kyleknap @mtdowling @trevorrowe\n Test fixed.  Should be ready to look at now.\n Feedback incorporated.\n  Currently, the wheel package that is installed for boto3 version 1.9 contains this line in it's METADATA:\n\n```\nRequires-Dist: futures (==2.2.0); extra == ':python_version==\"2.6\" or python_version==\"2.7\"'\n```\n\nThe latest version of pip (7.0.3) on Windows ignores this line and the futures dependency is not installed (see https://github.com/longaccess/bigstash-python/issues/23). \n\nWhen I added the same `extras_require` line as boto3 to my own package's `setup.py` and run `bdist_wheel` I get this slightly different line (with `wheel==0.24.0`):\n\n```\nRequires-Dist: futures (==2.0.0); python_version==\"2.6\" or python_version==\"2.7\"\n```\n\nIn this case, installing the wheel properly installs `futures`. \n This could be related to https://github.com/boto/boto3/issues/96\n Interesting, do you know if this issue is specific to windows, pip 7.0.3, or the combination of both?\n It can't be specific to Windows since our user reported the problem for MacOSX (it wasn't clear in the report, sorry). I'll try some other pip versions and let you know.\n Similar (or same) problem here: https://github.com/pypa/pip/issues/2870. Perhaps this is a pip bug.\n Yeah, I'm definitely seeing this on pip7 and pip6.\n\nWhat's interesting is that our travis jobs (which we create a wheel and install from the whl file) use pip 6.0.7 (https://travis-ci.org/boto/boto3/jobs/65917853) and are passing.\n\nLooking into what the difference is and what we can do about this.\n Ah, I think I see the issue.  The released version of boto3 was generated with `wheel==0.22.0` and the support for the conditional dependencies was not added until `wheel==0.24.0` (https://pypi.python.org/pypi/wheel#id1)\n\nWe'll just need to rebuild the wheel on the latest version of the wheel package and we should be good to go.\n\nThanks for reporting.\n Yes, it seems to work now! thanks.\n  Needed to be updated when we updated loaders to use\nuse new directory structure.\n\ncc @kyleknap \n  It seems as though the documentation only covers details of the low level client for each aws service, not the high level resources/collections in detail.\n\nWhere would I find all the available actions for specific resources, like ec2 vs s3?\n Should be fixed now via https://github.com/boto/boto3/pull/126. Any service that also contains high level resources is now documented: http://boto3.readthedocs.org/en/latest/reference/services/s3.html\n For EC2, I still only see client and waiter, no resources:\nhttp://boto3.readthedocs.org/en/latest/reference/services/ec2.html\n\nSQS does seem to have it documented though:\nhttp://boto3.readthedocs.org/en/latest/reference/services/sqs.html\n\nI only see two example services in the Resources section, S3 and SQS and these appear to have their resources documentation complete.\n\nCan we get a list automatically generated in the Resources overview of the services that have high level resources?\n Ok, taking a look.\n Looks good now, thanks for fixing it.\n\nGood idea with the smoke test too!\n\nCheers.\n  Would it be at all possible to make the s3 client's `list_objects` method return the `ContentType` for each object? The `get_object` and `head_object` methods both do this. \n\nI suspect wanting to know an object's type would be a fairly common requirement when performing a list operation.\n\nIs there even a way to get the content type, in bulk, with the current boto 3 s3 api? Obviously doing a head request on each object individually is not practical.\n  This would actually leak 2 tables because we'd create\na table in setupClass, and then create another one in\ntearDownClass because we called setupClass again.\n\ncc @kyleknap @mtdowling\n [![Coverage Status](https://coveralls.io/builds/2712079/badge)](https://coveralls.io/builds/2712079)\n\nCoverage remained the same at 97.66% when pulling **fab5e89a808a3b35b39eb0a248a1569a197a7cc5 on jamesls:leaking-ddb-tables** into **4ea53234839b0c4d3bf66b9fbd65c66ecba501af on boto:develop**.\n  [![Coverage Status](https://coveralls.io/builds/2711913/badge)](https://coveralls.io/builds/2711913)\n\nCoverage remained the same at 97.67% when pulling **fca6e8d2202668cb7586e04d181d10d891af9593 on kyleknap:rename-paginate** into **95c377b50dd09d9ce8f7b7e0359ed196a8f80ffe on boto:develop**.\n :shipit:\n  This is similar to what boto2 does in terms of\nthe interface with a few internal details changed:\n- Keep a single buffer of puts and deletes.  This simplifies\n  the logic of when to send requests.  It also sends the\n  requests in the order they were called.  In boto2, puts\n  were always sent before deletes().  This shouldn't affect\n  the semantics though because you can't put/delete the same\n  object in a batch request.\n- Immediately handle unprocessed items in the next batch.  boto2\n  would keep these and flush them only at **exit**.  This meant\n  you could have unbounded growth of unprocessed items.\n\nPerf is about the same as boto2.\n\ncc @kyleknap @mtdowling\n [![Coverage Status](https://coveralls.io/builds/2703034/badge)](https://coveralls.io/builds/2703034)\n\nCoverage decreased (-0.0%) to 97.66% when pulling **7f518e746ee15cb59b95e7b3f2b45dd0b02161eb on jamesls:ddb-batch-write** into **95c377b50dd09d9ce8f7b7e0359ed196a8f80ffe on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2711995/badge)](https://coveralls.io/builds/2711995)\n\nCoverage decreased (-0.01%) to 97.66% when pulling **6535a936e976806f8012a449141046aa1c876cc9 on jamesls:ddb-batch-write** into **95c377b50dd09d9ce8f7b7e0359ed196a8f80ffe on boto:develop**.\n  :shipit:\n [![Coverage Status](https://coveralls.io/builds/2700228/badge)](https://coveralls.io/builds/2700228)\n\nCoverage remained the same at 97.67% when pulling **9aec297dafc8686bf9588b698ea83b5e5a352295 on kyleknap:develop** into **d95e630791855c334d1193ba1bd4aaae28495a93 on boto:develop**.\n  Hi, for the response data that I am recieving the letter \"u\" appears between key & value pairs in my dictionary (the returned data). Is this just a failure of an escape character or is it something else?\n\nMy code:\n\n``` python\nimport boto3\n\nec2 = boto3.resource('ec2')\ninstances = []\n\n\nfor status in ec2.meta.client.describe_instance_status()['InstanceStatuses']:\n    instances.append(status['InstanceId'])\n\ndef filterInstances(instances):\n    filtertemplate = [{'Name': 'resource-id','Values': instances}]\n    return filtertemplate\n\nfor instance in instances:\n    tags = ec2.meta.client.describe_tags(Filters=filterInstances(instances))\n\nprint(tags)\n```\n\nHere's my response data:\n\n```\n{'ResponseMetadata': {'HTTPStatusCode': 200, 'RequestId': 'c41f8fca-0ec8-473b-86a3-37dc9b189763'}, u'Tags': [{u'ResourceType': 'instance', u'ResourceId': 'i-xxxxxxxx', u'Value': 'xx', u'Key': 'Category'}, {u'ResourceType': 'instance', u'ResourceId': 'i-xxxxxxxx', u'Value': 'QA', u'Key': 'xxxxxxx'}]}\n```\n Ah, that actually makes a lot of sense. Thanks, that's all - sorry for the 'unrelated' issue haha.\n  I can easily find the available service resources give a session:\n\n```\n>>> import boto3.session\n>>> session = boto3.session.Session(profile_name='prod')\n>>> session.available_resources\n['cloudformation',\n 'dynamodb',\n 'ec2',\n 'glacier',\n 'iam',\n 'opsworks',\n 's3',\n 'sns',\n 'sqs']\n```\n\nBut is there a way to find the available resources for a given service resource?  I.E. is there some way to get the equivalent of:\n\n```\n>>> ec2 = session.resource('ec2')\n>>> ec2.available_resources\n```\n\nI've been going through the code for a while and can't really figure out an easy way to do this.\n Thanks.  I can also find what I'm looking for by accessing the `_loader` private attribute of the client and then loading the service model but, of course, I shouldn't be mucking around with those private attributes.\n  While I do understand the desire to provide methods very similar (if not analogous) to the AWS CLI, I really feel like working with boto3 does not really improve on the AWS CLI. From my point of view, boto3 should not only be a wrapper, but also an adapter to make the CLI something desirable to work with from python. For instance, instead of creating an S3 client with `boto3.client('s3')`, hide this and use a `S3Client` class. Instead of managing multi-part upload with the upload id directly, it would be more 'pythonic' to have a `MultiPartUpload` class, and have the corresponding methods take or return an instance of this class. What is the point of having the `Client` do operations such as get_bucket_policy(Bucket='string')? Wouldn't it be much better (and intuitive) to have a getter for bucket_policy on the Bucket class? Also, having helper methods would help a lot. Something like `Bucket.upload_file(file, path)`, or along those lines. The point isn't precisely the examples I have pointed out here, the point is the library is hard to work with, it is essentially the same as the CLI. Please note I do not mean any disrespect and this is just, at least from my point of view, constructive criticism.\n I love boto3, but I agree with @autrilla.\n\n+1\n Awesome writeup @kyleknap.  I learned a thing or two.\n So something I was disappointed with recently.\n\n$ python\n    >>> x = boto3.resource('s3')\n    >>> x\n    s3.ServiceResource\n    >>> import s3\n    ImportError: ...\n    >>> type(x)\n    boto3.resources.factory.s3.ServiceResource\n    >>> isinstance(s3, boto3.resources.factory.s3.ServiceResource)\n    AttributeError:  'module' object has no attribute 's3'\n\nEvery python API should be able to answer these questions:  \n\"What exactly is this object I'm using?\"\n\"Where can I find the exact code for this object?\"\n\"How can I perform some basic operations on this object?\"\n @autrilla Completely agree with you!\n+1\n > type(x)\r\n> boto3.resources.factory.s3.ServiceResource\r\n> isinstance(s3, boto3.resources.factory.s3.ServiceResource)\r\n> AttributeError: 'module' object has no attribute 's3'\r\n\r\nI'm having this exact problem, isinstance is essentially unusable.  I'm not sure how I can accurately identify which type of object I'm working with.\r\n\r\nIs there any way to import the classes created by the factory so they can be identified with isinstance()?  [![Coverage Status](https://coveralls.io/builds/2513584/badge)](https://coveralls.io/builds/2513584)\n\nCoverage remained the same at 97.22% when pulling **2aebfa9f962383c5e1b1c5f836f7f793db0164fe on kyleknap:develop** into **fec3bf95b9a9bf8b3af37353aeee2baf03848c87 on boto:develop**.\n  With boto library (not boto3), there is method `generate_url` which generates temporary url for given object.\nThis method is availabe on connection, bucket and key objects.\n\n``` python\nimport boto\ncon = boto.connect_s3()\ntmpurl_c = con.generate_url(...)\nbucket = con.get_bucket(\"mybucket\")\ntmpurl_b = bucket.generate_url(...)\nkey = bucket.get_object(\"key/name.txt\")\ntmpurl_k = key.generate_url(...)\n```\n\nI was unable to find corresponding method in boto3. Is there such a method? Or is it planned?\n\nI am aware, that actually creating the temporary url is not a call to AWS web service (so I do not expect it to be found in AWS serices model), but for practical use it is very important.\n\nFortunatelly, today we may se `boto` to do this work, but if `boto3` is supposed to be complete replacement to today `boto`, ability to generate temporary url seems to be important.\n @kyleknap Perfect, as it is on roadmap (and it looks like getting close), it make me feel safer.\n\nAnyway, I did try to use existing solution (using botocore branch clients-only) and see, that the expiration can be currently specified only in relative value - how many seconds from now it shall require.\n\nIt would be very convenient, if it would also allow specifying absolute time. I will add this request to botocore.\n A couple of questions:\n\nOne: is there anyway to generate plain HTTP URL? Thie following command will always create an expiring https get_object URL, even if object is set to `public-read`:\n\n``` py\nclient.generate_presigned_url('get_object', Params = {'Bucket': 'www.mybucket.com', 'Key': 'hello.txt'}, ExpiresIn = 0)\n'https://s3.amazonaws.com/www.mybucket.com/hello.txt?Signature=BLAHBLAHBLAH%3D&AWSAccessKeyId=MYKEY&Expires=1435013699'\n```\n\nTwo: Is this kind of thing not best practice? Other S3 clients I've used (which I assume used the previous AWS API) seem to just generate the HTTP URL without any problem...and now that I've tried using the API through boto3...this feature seems _extremely_ buried (I read the docs and source code for about an hour until stumbling upon this issue)., to the point where it seems like spitting out a HTTP URL from a S3 object is not recommended practice?\n @dannguyen do not forget, that having `public-read` might not be always a constant feature of an object.\n\nIn past I was a bit surprised, when I have realized, that the temporary url can be generated even without having connectivity to related object.\n\nTo me the lesson are: when talking about temporary url:\n- it is temporary url and it shall have an expiration regardless of current or future ACL configuration\n- it is client's decision (which can be done without even looking to the object, could be about object which even does not exist at the moment...) how is such url created\n- generating the url without touching relevant object is fine, in fact it allows nice efficiency (no network communication).\n For S3 pre-signed URLs, I found this: https://boto3.readthedocs.org/en/latest/reference/services/s3.html#S3.Client.generate_presigned_url, and for CF pre-signed URLs, I found: https://boto3.readthedocs.org/en/latest/reference/services/cloudfront.html#CloudFront.Client.generate_presigned_url. When will they become available in a stable release of boto3?\n Both of those methods are available in the latest version of boto3.  Let us know if there's any other questions.\n Hi there,\n\nI've read the docs but I'm struggling to understand how to actually generate a pre-signed url to allow temporary access to download contents from a s3 bucket. \n\nAny help? Thanks\n Mjello,\n\nI'm in the same boat as @niallatbynder ; I can't seem to figure out how generate a signed url.\n\n`CloudFront.Client.generate_presigned_url()` takes a `ClientMethod` argument, but fails to describe what this `ClientMethod` can be. From my trails I get the impression, that `ClientMethod` should be a method on `CloudFront.Client`, is that correctly understood? In that case, I can't find any methods on `CloudFront.Client` that fetches a file from a bucket, hence no methods to generate a signed url for.\n\nAn example of how to use this would be greatly appreciated.\n\nThanks in advance.\n Faerloev,\n\nThe ClientMethod param is not clearly described, but it just means a Client method like the \"get_object\" (http://boto3.readthedocs.org/en/latest/reference/services/s3.html?highlight=s3%20url#client). Here's my example:\n\n``` python\n        client = boto3.client('s3')\n        bucket_name = 'api_reports'\n\n        resp = client.put_object(\n                                Bucket= bucket_name, \n                                Key= filename, \n                                Body= file,\n                                Expires= datetime.utcnow() + timedelta(days=7), )\n        print(resp)\n        url = client.generate_presigned_url(\n                                            'get_object', \n                                            Params = { \n                                                      'Bucket': bucket_name, \n                                                      'Key': filename, }, \n                                            ExpiresIn = 86400, )\n        print(url)\n```\n @radhomero, thanks for pointing it out. I look through the methods listed under \"These are the available methods:\" under [Client section](http://boto3.readthedocs.org/en/latest/reference/services/s3.html?highlight=s3%20url#client), and I wonder what is the difference between `download_file` and `get_object`, and similarly, `upload_file` and `put_object`?\n @cilia See http://boto3.readthedocs.org/en/latest/reference/customizations/s3.html for the differences. Upload and Download_file are abstractions in high level to actually download or upload files from local folders.\n @radhomero My apologies for not being more specific. I'm talking about the `CloudFront` client. Not the `S3` client.\n\nAs far I can tell, the `CloudFront` client is missing methods for downloading data (eg. `get_object`).\n\nFor now, I have overcome this by writing my own signing method based on an old Stackoverflow answer.\n @faerloev  how did you generate_presigned_url for cloudfront, has the missing get_object been fixed?\n\nThanks\n @radhomero Thank you :beers: \n @cx44yale My sincere apologies for not responding sooner.\n\nI hope you managed to sign your urls, but if not (and for the sake of others ending up here) here's a hint:\n\nI based my solution on the accepted answer from this [question on Stackoverflow](http://stackoverflow.com/questions/2573919/creating-signed-urls-for-amazon-cloudfront) which pretty much works out of the box. I exchanged M2Crypto for [rsa](https://pypi.python.org/pypi/rsa) to get a pure Python implmentation.\n @radhomero +1, exactly what I needed. I think this should be documented in the boto3.S3 documentation\n  [![Coverage Status](https://coveralls.io/builds/2621932/badge)](https://coveralls.io/builds/2621932)\n\nCoverage increased (+0.0%) to 97.22% when pulling **2f541c9eccd641c8f3f4d9c0a2414eb0f90d8b29 on jamesls:resource-user-agent** into **fec3bf95b9a9bf8b3af37353aeee2baf03848c87 on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2621932/badge)](https://coveralls.io/builds/2621932)\n\nCoverage increased (+0.0%) to 97.22% when pulling **2f541c9eccd641c8f3f4d9c0a2414eb0f90d8b29 on jamesls:resource-user-agent** into **fec3bf95b9a9bf8b3af37353aeee2baf03848c87 on boto:develop**.\n  [![Coverage Status](https://coveralls.io/builds/2452509/badge)](https://coveralls.io/builds/2452509)\n\nCoverage increased (+0.01%) to 97.22% when pulling **0f58edde64384032253099adbcafa93a7efde857 on jamesls:move-functional-tests** into **b97e4beded13cee0da1eb6202302e13df42746a3 on boto:develop**.\n :ship:\n  It looks good to me. That is all I need to start hooking in the dynamodb customizations. Had a small comment. I was going to make a comment about adding more of the tests over to functional directory, but it looks like you beat me to it. :ship:\n [![Coverage Status](https://coveralls.io/builds/2452358/badge)](https://coveralls.io/builds/2452358)\n\nCoverage increased (+0.01%) to 97.22% when pulling **0d8e2412686f02321ce6a10b52e254c3dfbc9bcd on jamesls:resource-ext** into **b97e4beded13cee0da1eb6202302e13df42746a3 on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2452518/badge)](https://coveralls.io/builds/2452518)\n\nCoverage increased (+0.01%) to 97.22% when pulling **a3ff6131d9dc180543ab401b5cebe3ac93ae3216 on jamesls:resource-ext** into **b97e4beded13cee0da1eb6202302e13df42746a3 on boto:develop**.\n  This is an easy way to build conditional expressions for operations like query, scan, etc. It helps build both the conditional expression string and any placeholders that may be required for the attribute name or value. This can be applied whenever the dynamodb shape is `ConditionExpression` or any other similar shapes like `KeyExpression`\n\nTo get a sense of all of the different options I would first checkout the TestConditionExpressionBuilder to see what the end output of using the builder with the various attribute and attribute methods is.\n\ncc @jamesls \n [![Coverage Status](https://coveralls.io/builds/2450918/badge)](https://coveralls.io/builds/2450918)\n\nCoverage increased (+0.3%) to 97.51% when pulling **9d6c22223ebc2e4db2b960e522af372617092e7c on kyleknap:dynamodb-filters** into **b97e4beded13cee0da1eb6202302e13df42746a3 on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2452365/badge)](https://coveralls.io/builds/2452365)\n\nCoverage increased (+0.31%) to 97.52% when pulling **b9d5d70dcea40b9bf15f54a5743a33ee8bdd57c8 on kyleknap:dynamodb-filters** into **b97e4beded13cee0da1eb6202302e13df42746a3 on boto:develop**.\n I updated the code based on comments.\n\nEdit: I actually removed the commit that adds a KeyConditionBuilder class. The reason I did this is that the logic needs to live in the same object when applying the transformation. The `Query` operation can do both a `KeyConditionExpression` and a `ConditionExpression`. However, they share the same variable dictionary for attribute names and values. If there were two separate builders, they can clobber each other's variables when the request is being formed because each does not have knowledge of the variables the other builder is building. Therefore it is most safe to use only one builder.\n [![Coverage Status](https://coveralls.io/builds/2461737/badge)](https://coveralls.io/builds/2461737)\n\nCoverage increased (+0.3%) to 97.52% when pulling **561baaccb6091f22c9f6c0d85d45cfd31f6bb305 on kyleknap:dynamodb-filters** into **fec3bf95b9a9bf8b3af37353aeee2baf03848c87 on boto:develop**.\n :shipit: Looks good, just had some small comments and suggestions.\n [![Coverage Status](https://coveralls.io/builds/2621235/badge)](https://coveralls.io/builds/2621235)\n\nCoverage increased (+0.31%) to 97.53% when pulling **946ae4ea88dfbf1e1396abcba0e52a02ea2ac5f6 on kyleknap:dynamodb-filters** into **fec3bf95b9a9bf8b3af37353aeee2baf03848c87 on boto:develop**.\n :shipit: Looks good.\n  :ship:\n [![Coverage Status](https://coveralls.io/builds/2442278/badge)](https://coveralls.io/builds/2442278)\n\nCoverage remained the same at 97.21% when pulling **03b02250b9ab1492ace626470197933310fb915c on jamesls:add-ec2-2015** into **f1de422705b0554836307eff35f1d2919197aeab on boto:develop**.\n  Nice. Good to see those tests updated. :ship:\n  Added handlers on both the intput and output of clients and resources to\nautomatically use TypeSerializer and TypeDeserializer.\n\ncc @jamesls \n [![Coverage Status](https://coveralls.io/builds/2397330/badge)](https://coveralls.io/builds/2397330)\n\nCoverage increased (+0.08%) to 97.33% when pulling **25b2e6622470c4a290bd40f16fc5b501bdfa8cd1 on kyleknap:apply-db-shapes** into **545fa5120137bbdc3d4e493012c97d6ad35df9af on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2469277/badge)](https://coveralls.io/builds/2469277)\n\nCoverage increased (+0.42%) to 97.64% when pulling **6307175a67075ad9d18bd281c0394e441a84b861 on kyleknap:apply-db-shapes** into **fec3bf95b9a9bf8b3af37353aeee2baf03848c87 on boto:develop**.\n Overall it looks good and I like the general approach. I just had some comments about the tests and possibly pulling out some of the inner function classes out to the module level to avoid having to create them every time the handlers are invoked.\n [![Coverage Status](https://coveralls.io/builds/2648631/badge)](https://coveralls.io/builds/2648631)\n\nCoverage increased (+0.14%) to 97.67% when pulling **cef8f0873ced53a2a43bcdc77461383c5d698563 on kyleknap:apply-db-shapes** into **09f493e156c18393c78efe39a3e5f0238686f56b on boto:develop**.\n Thanks!  Just had a small alternate suggestion for that dynamodb high level class that might be a little cleaner.\n [![Coverage Status](https://coveralls.io/builds/2663240/badge)](https://coveralls.io/builds/2663240)\n\nCoverage increased (+0.14%) to 97.67% when pulling **4df31e4004c4e6abfefd382d8068f7b1ef94dd2a on kyleknap:apply-db-shapes** into **09f493e156c18393c78efe39a3e5f0238686f56b on boto:develop**.\n :shipit:  Looks good.\n  Attempting to load the bucket's creation_date results in a ResourceLoadException.\n\n``` python\n>>> import sys\n>>> sys.version\n'2.7.6 (default, Sep  9 2014, 15:04:36) \\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.39)]'\n>>> import boto3\n>>> s3 = boto3.resource('s3')\n>>> b = s3.Bucket('mybucket')\n>>> b.name\n'mybucket'\n>>> b.creation_date\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.7/site-packages/boto3/resources/factory.py\", line 202, in property_loader\n    '{0} has no load method'.format(self.__class__.__name__))\nboto3.exceptions.ResourceLoadException: s3.Bucket has no load method\n```\n\n``` sh\n$ pip show boto3\n\n---\nName: boto3\nVersion: 0.0.15\n```\n Following up on this issue:\n\nThe underlying issue here is that there is no API to directly get a single bucket's creation_date.  The best we can do is approximate this by doing a ListBuckets call (which gives a list of all your buckets and their creation dates) and finding the appropriate bucket.\n Fixed via #128\n  :ship:\n  [![Coverage Status](https://coveralls.io/builds/2383053/badge)](https://coveralls.io/builds/2383053)\n\nCoverage remained the same at 96.93% when pulling **761e8ad5ae002616d5e4340d15d9db4a465b37e2 on jamesls:extract-ci-scripts** into **cf2c2452eb0d8de58babf7e1db01a0f7e1e0a22c on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2383053/badge)](https://coveralls.io/builds/2383053)\n\nCoverage remained the same at 96.93% when pulling **761e8ad5ae002616d5e4340d15d9db4a465b37e2 on jamesls:extract-ci-scripts** into **cf2c2452eb0d8de58babf7e1db01a0f7e1e0a22c on boto:develop**.\n LGTM :ship:\n  [![Coverage Status](https://coveralls.io/builds/2382283/badge)](https://coveralls.io/builds/2382283)\n\nCoverage remained the same at 96.93% when pulling **fa9379c19a09c7ed75e4282bfeb9f85cd49f5463 on jamesls:wheels-deps** into **cf2c2452eb0d8de58babf7e1db01a0f7e1e0a22c on boto:develop**.\n Looks good. Just had a couple questions before giving you a ship.\n Looks good given the upcoming PR. :ship:\n  As per the [examples in the docs](https://boto3.readthedocs.org/en/latest/reference/customizations/s3.html#usage), passing a callback to `S3Transfer.upload_file` displays the upload progress. However because `botocore.auth.SigV4Auth.payload` consumes the request body this actually happens twice, once for calculating the SHA256 of the body and one more when sending the body. This is somewhat cumbersome to workaround, I did it by adding these lines to the `Progress.__call__` example:\n\n```\n            if bytes_amount > 0 and self._seen_so_far == self._size:\n                # assume we are now only starting the actual transfer\n                self._seen_so_far = 0\n```\n\nIt would be nice if somehow this could be done a bit better, seems however that botocore has no support for progress reporting and I don't see an obvious way to do it correctly (apart from the present solution).\n Here's an idea for a proposed fix.\n\nWhile the ideal fix would be to hook into the _sending_ side of the upload (the actual socket used by the HTTPConnection) the next best thing we have is to hook into the `read()`s of the file like object we're uploading.  To fix this issue, we need to hook into this process as late as possible such that any other handler/signer that reads the body before sending doesn't affect progress.  One possibility is:\n- Add an `enable_callback()`, `disable_callback()` method to the file like object, which indicates whether or not the callback is invoked when `read()`'ing from the file.\n- When we wrap the file like object for uploads, we disable callbacks.\n- We register a handler for `request-created` via `register_last`, which checks if the object has an `enable_callback` method, and if it does, it will enable callbacks.\n\nThis gets around our two problems:\n1. By checking for `enable_callback` when we ensure that the client not using the high level interface will not trigger undesired behavior.  This is how we can scope it to a \"per request\" basis because only requests created by the high level interface will have file like bodies with an `enable_callback` method.\n2. By using `register_last`, we ensure we enable callbacks after request signing, which happens in `request-created` via `register()`, and can avoid the double callbacks.\n\n@kyleknap @mtdowling thoughts?\n @kyleknap So what we can do is register two handlers:\n- register_first:  calls `fileobj.disable_callback()`\n- register_last: calls `fileobj.enable_callback()`\n\nThat should handle the retry case.\n\nAlthough, as mentioned in an earlier comment, I think we'll need a separate change to handle the retry case.  I think will require an update to the required interface for callbacks.  Something like:\n\n```\nclass ProgressCalllback:\n  def reset(self):\n      pass\n  def __call__(self, ...): pass\n\n```\n\nThis that would be addressed in a separate PR.\n  When running on Python 2.7, boto3.s3.transfer.S3Transfer has a dependency on \"futures\" package (a back port of Python 3.x concurrent.future) which is not installed by default with a \"pip install boto3\" \n  [![Coverage Status](https://coveralls.io/builds/2366403/badge)](https://coveralls.io/builds/2366403)\n\nCoverage remained the same at 96.93% when pulling **293d38004cb58db9bcc186f20059a011da6a87bf on jamesls:add-ddb-resource** into **be0fa2a64f53f782a4dddb0d3da0065d31a42832 on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2366403/badge)](https://coveralls.io/builds/2366403)\n\nCoverage remained the same at 96.93% when pulling **293d38004cb58db9bcc186f20059a011da6a87bf on jamesls:add-ddb-resource** into **be0fa2a64f53f782a4dddb0d3da0065d31a42832 on boto:develop**.\n :ship:\n  This PR adds type serialization/deserialization for dynamodb. It works much like the `Dynamizer` class in boto. This interface is built specifically for botocore. So, stuff like base64 encoding/decoding binary is handed off to botocore.\n\ncc @jamesls \n [![Coverage Status](https://coveralls.io/builds/2364790/badge)](https://coveralls.io/builds/2364790)\n\nCoverage increased (+0.31%) to 97.25% when pulling **86a314449150f0b0dffd84a65a925af750ebc91f on kyleknap:dynamodb-types** into **be0fa2a64f53f782a4dddb0d3da0065d31a42832 on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2382701/badge)](https://coveralls.io/builds/2382701)\n\nCoverage increased (+0.32%) to 97.25% when pulling **525cca44af518366c4b0b5793128a696efab5dff on kyleknap:dynamodb-types** into **cf2c2452eb0d8de58babf7e1db01a0f7e1e0a22c on boto:develop**.\n @jamesls \nI updated the code based on your feedback\n  By adding this requirement, we do not worry about having to do a release of boto3 everytime we do a release of botocore. This should be fine given we do not expect botocore breaking boto3 in the near future.\n\ncc @jamesls \n [![Coverage Status](https://coveralls.io/builds/2356930/badge)](https://coveralls.io/builds/2356930)\n\nCoverage remained the same at 96.93% when pulling **9a7c25ff9eeb5657d5e3259f5e18048d5d4c6084 on kyleknap:requirements** into **8aff1c623216c9a06c917927b4f59085833b848c on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2356930/badge)](https://coveralls.io/builds/2356930)\n\nCoverage remained the same at 96.93% when pulling **9a7c25ff9eeb5657d5e3259f5e18048d5d4c6084 on kyleknap:requirements** into **8aff1c623216c9a06c917927b4f59085833b848c on boto:develop**.\n  :ship:\n [![Coverage Status](https://coveralls.io/builds/2355945/badge)](https://coveralls.io/builds/2355945)\n\nCoverage decreased (-0.21%) to 96.72% when pulling **7230afa4e5a5153c943d51767b99125f0fb16406 on jamesls:jmespath-deps** into **e8a1cc1c9931ff1b3e7a81ce836dad789510cb65 on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2355945/badge)](https://coveralls.io/builds/2355945)\n\nCoverage remained the same at 96.93% when pulling **7230afa4e5a5153c943d51767b99125f0fb16406 on jamesls:jmespath-deps** into **e8a1cc1c9931ff1b3e7a81ce836dad789510cb65 on boto:develop**.\n  [![Coverage Status](https://coveralls.io/builds/2347528/badge)](https://coveralls.io/builds/2347528)\n\nCoverage decreased (-0.21%) to 96.72% when pulling **1a4767cecca6617f117b512223e282d0b3b69c3b on jamesls:setup-py** into **4f2b472f3a5f7f8eb6426177918e7893c5c68a61 on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2347528/badge)](https://coveralls.io/builds/2347528)\n\nCoverage remained the same at 96.93% when pulling **1a4767cecca6617f117b512223e282d0b3b69c3b on jamesls:setup-py** into **4f2b472f3a5f7f8eb6426177918e7893c5c68a61 on boto:develop**.\n :ship:\n  LGTM. :ship:\n [![Coverage Status](https://coveralls.io/builds/2346691/badge)](https://coveralls.io/builds/2346691)\n\nCoverage remained the same at 96.93% when pulling **45e891afe586258ccb6ed4c1bd796f7a041e7a8c on jamesls:more-random** into **3dbea3fb6903ce7704c3711d6532a7c51d4d6f02 on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2346691/badge)](https://coveralls.io/builds/2346691)\n\nCoverage remained the same at 96.93% when pulling **45e891afe586258ccb6ed4c1bd796f7a041e7a8c on jamesls:more-random** into **3dbea3fb6903ce7704c3711d6532a7c51d4d6f02 on boto:develop**.\n  [![Coverage Status](https://coveralls.io/builds/2345761/badge)](https://coveralls.io/builds/2345761)\n\nChanges Unknown when pulling **d87a1024fdd711878bbf0ba052f8ed3f89175b78 on jamesls:envvar-updates** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2345761/badge)](https://coveralls.io/builds/2345761)\n\nChanges Unknown when pulling **d87a1024fdd711878bbf0ba052f8ed3f89175b78 on jamesls:envvar-updates** into *\\* on boto:develop**.\n LGTM :ship:-it!\n :ship:\n  Adds some info about how to use resources in multithreaded applications.\n\ncc @kyleknap @jamesls \n [![Coverage Status](https://coveralls.io/builds/2338985/badge)](https://coveralls.io/builds/2338985)\n\nChanges Unknown when pulling **bf07b4619542443cfb162be31b81f0adef111239 on threading-doc** into *\\* on develop**.\n [![Coverage Status](https://coveralls.io/builds/2338985/badge)](https://coveralls.io/builds/2338985)\n\nChanges Unknown when pulling **bf07b4619542443cfb162be31b81f0adef111239 on threading-doc** into *\\* on develop**.\n [![Coverage Status](https://coveralls.io/builds/2338985/badge)](https://coveralls.io/builds/2338985)\n\nChanges Unknown when pulling **bf07b4619542443cfb162be31b81f0adef111239 on threading-doc** into *\\* on develop**.\n Looks good. It would be nice to have an explanation on why resources are not thread safe so users know exactly why it is suggested that each thread should use its own resource, just in case the user does want to share a resource across threads and would have to add locks where appropriate. Also, it would be nice to mention that clients are thread safe.\n [![Coverage Status](https://coveralls.io/builds/2345746/badge)](https://coveralls.io/builds/2345746)\n\nChanges Unknown when pulling **ead0509835eeb5335e56fb05084343f6f45ee41a on threading-doc** into *\\* on develop**.\n  Hi all,\n\nI'm very new to boto and AWS in general (semi-new to Python but loving it!), and I'm trying to use boto3 (because I need Python 2.7 support for S3/Glacier) and am stuck.  I read in another thread that it was OK to ask questions here, so I hope that's still true.\n\nI am trying to make a simple online 'data dump' for archival purposes.  As such, I need to put tar file, list tar files, and retrieve tar files as the core functionality.\n\nI have been able to upload a tar, but cannot seem to get the list function to work.  I haven't gotten to the 'get' function yet as a result.  Here's what I have:\n\n---\n\n``` python\nimport boto3\nimport os\n\nos.environ[\"aws_access_key_id\"] = 'xxxxxxxxxxxxxxx'\nos.environ[\"aws_secret_access_key\"] = 'yyyyyyyyyyyyy'\n\ns3 = boto3.resource('s3')\ns3c = boto3.client('s3')\n\nobj = boto3.resource('s3').Object('archive', '66784D57-3E8B-4A4F-9654-22262445F9FA.tar')\nobj.put(Body=open('C:\\Users\\TropicMike\\PycharmProjects\\glacier\\66784D57-3E8B-4A4F-9654-22262445F9FA.tar', 'rb'))\n\nresponse = s3c.list_objects(Bucket='archive')\nfor i in response:\n    print i\n```\n\n---\n\nWhen I do the list_objects, I just get this output:\n\n---\n\n<pre>\nMaxKeys\nPrefix\nName\nResponseMetadata\nMarker\nIsTruncated\nContents\n</pre>\n\n---\n\nCan someone smack me with the clue-by-four and help me see the what I'm doing wrong? I just want to be able to get the list of tars/other files stored in the bucket, along with maybe their size/date info.\n\nThanks!\n @TropicMike, you can see the expected output structure of the `list_objects` method here:\n\nhttp://boto3.readthedocs.org/en/latest/reference/services/s3.html#s3.Client.list_objects\n\nThe correct code would look like this:\n\n``` python\nresponse = s3c.list_objects(Bucket='archive')\nfor i in response['Contents']:\n    print i['Key']\n```\n\nHowever, it is much easier to just stick with the higher-level API and use resources:\n\n```\nbucket = s3.Bucket('archive')\nfor i in bucket.objects.all():\n    print i.key\n```\n\nThe doc link above has a lot more information and examples. Please let me know if you have other questions!\n Awesome - thank you Daniel!\n I shouldn't have closed that so quickly ;)  Is this guy correct in his assessment of saving an object?\n\nhttp://stackoverflow.com/questions/29378763/how-to-save-s3-object-to-a-file-using-boto3\n\nThanks!\n @TropicMike there is a customization that went in recently to help with this, but it's currently only exposed at the client (low-level):\n\n``` python\ns3c = s3.meta.client\ns3c.download_file('BucketName', 'RemoteFilename', 'LocalFilename')\ns3c.upload_file('LocalFilename', 'BucketName', 'RemoteFilename')\n\n# Example:\ns3c.download_file('MyBucket', 'hello.txt', 'hello.txt')\n```\n\nYou can see the full documentation and available features in the [boto3/s3/transfer.py](https://github.com/boto/boto3/blob/develop/boto3/s3/transfer.py) file. The client's `upload_file` and `download_file` are just a convenience layer so you don't have to make your own `S3Transfer` class from the client.\n\nEdit: That documentation is also rendered out here:\n\nhttp://boto3.readthedocs.org/en/latest/reference/customizations/s3.html\n Thanks again!  I'll give those a shot today.\n I'm seeing some performance issues.  When I upload two test files via the web UI (s3 dashboard) from my computer, they complete way faster than when I upload via Python/boto3.\n\n![image](https://cloud.githubusercontent.com/assets/11947947/7162113/c6bd6f50-e360-11e4-8cfb-a047ff84a6c6.png)\n\nIs the Python/boto3 solution expected to be that much slower?  Here's my code:\n\n``` python\nfiles = [\n    'C:\\Users\\mike\\PycharmProjects\\glacier\\66784D57-3E8B-4A4F-9654-22262445F9FA.tar',\n    'C:\\Users\\mike\\PycharmProjects\\glacier\\SDMT.tar'\n]\n\ns3r = boto3.resource('s3')\ns3c = s3r.meta.client\n\nfor path in files:\n    file = os.path.basename(path)\n    print \"*** uploading \" + file\n    start = time.time()\n    s3c.upload_file(path, 'archive', file)\n    end = time.time()\n    print 'time elapsed: ' + str(end - start)\n```\n Interesting... Further testing with the US normal yields much better results for the large file vs. the small, but I wonder why the python vs. web upload in the Oregon datacenter is so varying.\n\n![image](https://cloud.githubusercontent.com/assets/11947947/7164172/8f296934-e36c-11e4-9383-33be04642049.png)\n Hmm... maybe this is my own inexperience with the variability of S3... I just re-ran my test to the Oregon DC and the large file completed in 86 seconds.  Perhaps that level of variance is par for the course?\n Yep, your summarization is correct.  Both the python and web uploads were done from the same desktop hardwired computer, from Florida (yeah, I know OR is about as far away as you can get - I was just testing different options ;)  )\n\nFor the web uploads, I went into the bucket in the S3 interface and dragged a file in.  I started a stopwatch on my phone the second I clicked \"start upload\" and stopped it when it turned green and said complete, so there is some human-factor slop in those numbers.  \n\nThe nice thing, though, is that the boto speeds are not as drastically different/slower than that one test indicated -- recent runs have been giving me 86 and 70 seconds each for the large file, so _much_ better. \n\nHere is the table with the additional python/boto tests:\n\n![image](https://cloud.githubusercontent.com/assets/11947947/7165687/184f9878-e377-11e4-86d2-da22ad8de260.png)\n  [![Coverage Status](https://coveralls.io/builds/2285102/badge)](https://coveralls.io/builds/2285102)\n\nCoverage increased (+0.03%) to 98.46% when pulling **5be2169a959fe17143d8ffaa75b0205bdcc507fc on jamesls:inject-s3-methods** into **c71ab04c6600bd0b751c0d24c46e9f29f61d931d on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2285102/badge)](https://coveralls.io/builds/2285102)\n\nCoverage increased (+0.03%) to 98.46% when pulling **5be2169a959fe17143d8ffaa75b0205bdcc507fc on jamesls:inject-s3-methods** into **c71ab04c6600bd0b751c0d24c46e9f29f61d931d on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2285102/badge)](https://coveralls.io/builds/2285102)\n\nCoverage increased (+0.03%) to 98.46% when pulling **5be2169a959fe17143d8ffaa75b0205bdcc507fc on jamesls:inject-s3-methods** into **c71ab04c6600bd0b751c0d24c46e9f29f61d931d on boto:develop**.\n Aside from the one comment about collisions this looks good.\n Also, how are we going to handle documenting these new methods? I'd ideally like to see them in the reference documentation for both clients and resources.\n [![Coverage Status](https://coveralls.io/builds/2285447/badge)](https://coveralls.io/builds/2285447)\n\nCoverage increased (+0.04%) to 98.47% when pulling **a548b657e91c7c2e483dba0d843a81ab4711bde1 on jamesls:inject-s3-methods** into **c71ab04c6600bd0b751c0d24c46e9f29f61d931d on boto:develop**.\n LGTM :ship:-it!\n  Sorry if this isn't the right place to ask this question.  I can't find a boto3 mailing list.\n\nHow do I stream content into S3 from a file using boto3 without reading the whole file's contents into memory?  I'm looking for the equivalent of set_contents_from_filename in boto.\n\nThanks,\n\nRuss\n @russellneufeld a possible workaround for now that doesn't support multipart is below. I believe this will read the file in chunks as it sends the data:\n\n``` python\nimport boto3\n\nobj = boto3.resource('s3').Object('bucket-name', 'object-name')\nobj.put(Body=open('/path/to/filename', 'rb'))\n```\n Thanks! I'll give it a try. \n\nRuss\n\n> On Apr 3, 2015, at 5:54 PM, Daniel G. Taylor notifications@github.com wrote:\n> \n> @russellneufeld a possible workaround for now that doesn't support multipart is below. I believe this will read the file in chunks as it sends the data:\n> \n> import boto3\n> \n> obj = boto3.resource('s3').Object('bucket-name', 'object-name')\n> obj.put(Body=open('/path/to/filename', 'rb'))\n> \u2014\n> Reply to this email directly or view it on GitHub.\n By the way, is there a better forum for me to ask these types of questions?\n @russellneufeld this is probably the best place to report issues and ask questions for now. Please do let us know your thoughts on Boto 3 and any shortcomings (like `set_contents_from_filename` functionality) because this helps us to understand what our customers need.\n FWIW - I tried what @danielgtaylor suggested and it worked.  In my particular case I actually had a file object already, so the upload_file api taking a filename would not work.  Hopefully @danielgtaylor's way will continue to work, or there will be an api which will also take a file object.\n\n(More details - in my case I have a django UploadedFile object, which either wraps a stream or a temporary file on disk.  UploadedFile subclasses the python file object, but there's no way to access it by filename.)\n @russellneufeld both ways will continue to work :+1:\n  This appears to be similar to a reported issue in `boto` (https://github.com/boto/boto/issues/2836)\n\nI get the following exception:\n\n```\nbotocore.exceptions.ClientError: An error occurred (PermanentRedirect) when calling the GetBucketTagging operation: The bucket you are attempting to access must be addressed using the specified endpoint. Please send all future requests to this endpoint.\n```\n @tianx2 it looks like you probably need to pass the region name when creating your client or resource:\n\n``` python\n>>> import boto3\n>>> s3 = boto3.resource('s3', region_name='us-west-2')\n>>> bucket = s3.create_bucket(Bucket='boto3.region',\n                              CreateBucketConfiguration={'LocationConstraint': 'us-west-2'})\n>>> bucket.Object('hello.txt').put(Body='hello')\n...\n>>> bucket.Object('hello.txt').last_modified\ndatetime.datetime(2015, 4, 2, 20, 55, 17, tzinfo=tzutc())\n```\n\nYou can also determine the bucket location programmatically:\n\n``` python\n>>> s3.meta.client.get_bucket_location(Bucket='boto3.region')\n{'LocationConstraint': 'us-west-2',\n 'ResponseMetadata': {'RequestId': 'abc123',\n  'HostId': '12345',\n  'HTTPStatusCode': 200}}\n```\n\nThis is a limitation of the way that S3 works, but with the above code you can work around it to support any bucket in any region.\n\nPlease let me know if you have any other questions.\n So my use case was that i was trying to grab the tags for the bucket. Here is some sample code:\n\n``` python\nimport boto3\n\ntry:\n    s3 = boto3.resource(\"s3\", region_name=\"us-east-1\")\n    name = \"my.bucket.random\"\n    dotted_bucket = s3.Bucket(name)\n    print dotted_bucket.Tagging().tag_set\nexcept Exception as e:\n    print e.message\n```\n\nEvent with your suggestion, I still get the error.\nSteps:\n1) Create a bucket with dots (\".\") in the name.\n2) Replace `name = \"my.bucket.random\"` in sample code with the created bucket name\n3) Run sample code.\n\nResult:\n\n``` text\nAn error occurred (PermanentRedirect) when calling the GetBucketTagging operation: The bucket you are attempting to access must be addressed using the specified endpoint. Please send all future requests to this endpoint.\n```\n\nI did a test on Python 2.7.8 as well. I get the error there too, so I don't think it's related to the SSL issue.\n i tag the s3 bucket now i want to write a a program using boto3 to fetch the details of the tagging bucket  can anyone help me in dat \n  [![Coverage Status](https://coveralls.io/builds/2237654/badge)](https://coveralls.io/builds/2237654)\n\nChanges Unknown when pulling **8a5b252d052b4e4c1dfd31c4b8529b045dc80470 on jamesls:s3-high-level** into *\\* on boto:develop**.\n The general design looks good. I had a couple comments on some edge cases such as:\n- the mapping of `extra_args` to `UploadObject` and `CreateMultipartUpload`\n- whether we want to do MD5 checks and retries. Was there a specific reason that we do not do it for the ones that we are able to (like non-multipart transfers)?\n- I did not make a comment about this but what is your thought about being able to register multiple call backs. Do you see any uses for it? If you allow for multiple call backs you could enable a setting that produces a progress bar for the user instead of having the user copy and use sample code in the doc strings.\n [![Coverage Status](https://coveralls.io/builds/2246047/badge)](https://coveralls.io/builds/2246047)\n\nChanges Unknown when pulling **3d1da301bc4a06236b61b7513bd81b9da19eebda on jamesls:s3-high-level** into *\\* on boto:develop**.\n Overall I think this looks good, just had a few comments!\n [![Coverage Status](https://coveralls.io/builds/2246379/badge)](https://coveralls.io/builds/2246379)\n\nChanges Unknown when pulling **d1d55c704f5e6ab85b3b7379e8c09c50f7314974 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246379/badge)](https://coveralls.io/builds/2246379)\n\nChanges Unknown when pulling **d1d55c704f5e6ab85b3b7379e8c09c50f7314974 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246379/badge)](https://coveralls.io/builds/2246379)\n\nChanges Unknown when pulling **d1d55c704f5e6ab85b3b7379e8c09c50f7314974 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246499/badge)](https://coveralls.io/builds/2246499)\n\nChanges Unknown when pulling **1087d178a3d9b8c70e2738694a91902570952ae8 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246499/badge)](https://coveralls.io/builds/2246499)\n\nChanges Unknown when pulling **1087d178a3d9b8c70e2738694a91902570952ae8 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246509/badge)](https://coveralls.io/builds/2246509)\n\nChanges Unknown when pulling **1087d178a3d9b8c70e2738694a91902570952ae8 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246509/badge)](https://coveralls.io/builds/2246509)\n\nChanges Unknown when pulling **1087d178a3d9b8c70e2738694a91902570952ae8 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246509/badge)](https://coveralls.io/builds/2246509)\n\nChanges Unknown when pulling **1087d178a3d9b8c70e2738694a91902570952ae8 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246570/badge)](https://coveralls.io/builds/2246570)\n\nChanges Unknown when pulling **a34aaf6446d48ed99121e5a3a3baeb7aa9a9d4db on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246570/badge)](https://coveralls.io/builds/2246570)\n\nChanges Unknown when pulling **a34aaf6446d48ed99121e5a3a3baeb7aa9a9d4db on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246570/badge)](https://coveralls.io/builds/2246570)\n\nChanges Unknown when pulling **a34aaf6446d48ed99121e5a3a3baeb7aa9a9d4db on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246570/badge)](https://coveralls.io/builds/2246570)\n\nChanges Unknown when pulling **a34aaf6446d48ed99121e5a3a3baeb7aa9a9d4db on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2246585/badge)](https://coveralls.io/builds/2246585)\n\nChanges Unknown when pulling **ae55b43b4d94a35cdd889fb59e8e2127f82c6e1e on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2247989/badge)](https://coveralls.io/builds/2247989)\n\nChanges Unknown when pulling **a03aeddd3287210106413b4a4907fe53b3016072 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2252097/badge)](https://coveralls.io/builds/2252097)\n\nChanges Unknown when pulling **36dfe4e592ca6b1d73712ecd02e5755436fbc247 on jamesls:s3-high-level** into *\\* on boto:develop**.\n It is looking good. Had a couple comments. I am going to wait on the ship it till the final touches are added (like propagating kwargs to UploadPart and MD5 checking non-range downloads).\n I think the latest changes look good overall, but I'm curious why we are hard-coding the allowed parameters instead of just fetching that info from the Botocore model. Seems like it may become a maintenance issue over time and we can get the same functionality and good errors by using the model instead.\n [![Coverage Status](https://coveralls.io/builds/2261638/badge)](https://coveralls.io/builds/2261638)\n\nChanges Unknown when pulling **e5160c5a3a74ce7311084c04bbce4b4ffcd2ed8d on jamesls:s3-high-level** into *\\* on boto:develop**.\n @jamesls ah, I see. I thought they were an exhaustive list. Just ignore my comment, then :smile:\n The recent stuff with the upload error handling looks good.\n [![Coverage Status](https://coveralls.io/builds/2276761/badge)](https://coveralls.io/builds/2276761)\n\nChanges Unknown when pulling **92fdca95ab80f39fffcb8112da9960ff37c9c509 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2276761/badge)](https://coveralls.io/builds/2276761)\n\nChanges Unknown when pulling **92fdca95ab80f39fffcb8112da9960ff37c9c509 on jamesls:s3-high-level** into *\\* on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2277068/badge)](https://coveralls.io/builds/2277068)\n\nCoverage decreased (-0.19%) to 98.51% when pulling **68ef4ea4759afe6340aeac433c317b24100c286e on jamesls:s3-high-level** into **ee401867a114bac56fb124adb3324b2316302d28 on boto:develop**.\n @jamesls just had the one small question above, otherwise it LGTM.\n Thanks! Looks good. :ship:\n  I have a queue with 3 messages, for testing, test1, test2 and test3. I create a method print_messages() with contents \n\n```\nfor message in queue.receive_messages(MaxNumberOfMessages=10): \n    print(\"Messages: \" + message.message_id + \": \" + message.body). \n```\n\nRunning `print_messages()` then yields output like:\n\n```\n>>> print_messages()\nMessage 0554838d-9fe9-467a-8b05-bc6f6d3d54cd: test1\n\nMessage 0554838d-9fe9-467a-8b05-bc6f6d3d54cd: test1\n\nMessage 0554838d-9fe9-467a-8b05-bc6f6d3d54cd: test1\n\n>>> print_messages()\nMessage 2e1f4bd0-1638-4a9a-b20d-02788ee04723: test3\n\nMessage 2e1f4bd0-1638-4a9a-b20d-02788ee04723: test3\n\nMessage 2e1f4bd0-1638-4a9a-b20d-02788ee04723: test3\n\n>>> print_messages()\nMessage 2d4145c8-1317-41fa-bb56-77d1f9ea5ee6: test2\n\nMessage 2d4145c8-1317-41fa-bb56-77d1f9ea5ee6: test2\n\nMessage 2d4145c8-1317-41fa-bb56-77d1f9ea5ee6: test2\n\n>>> print_messages()\nMessage 0554838d-9fe9-467a-8b05-bc6f6d3d54cd: test1\n\nMessage 0554838d-9fe9-467a-8b05-bc6f6d3d54cd: test1\n\nMessage 0554838d-9fe9-467a-8b05-bc6f6d3d54cd: test1\n\n>>> print_messages()\nMessage 2d4145c8-1317-41fa-bb56-77d1f9ea5ee6: test2\n\nMessage 2d4145c8-1317-41fa-bb56-77d1f9ea5ee6: test2\n\nMessage 2d4145c8-1317-41fa-bb56-77d1f9ea5ee6: test2\n\n>>> print_messages()\nMessage 2e1f4bd0-1638-4a9a-b20d-02788ee04723: test3\n\nMessage 2e1f4bd0-1638-4a9a-b20d-02788ee04723: test3\n\nMessage 2e1f4bd0-1638-4a9a-b20d-02788ee04723: test3\n\n>>> print_messages()\nMessage 2e1f4bd0-1638-4a9a-b20d-02788ee04723: test3\n\nMessage 2e1f4bd0-1638-4a9a-b20d-02788ee04723: test3\n\nMessage 2e1f4bd0-1638-4a9a-b20d-02788ee04723: test3\n```\n @jamesls of course. https://github.com/autrilla/FAVEGASync/blob/master/favegasync.py. The parts that interest you are lines 38, 55 and the collect_messages() function. This is not the code I originally provided in this issue, but I have the issue with this other code too. The only difference I see with your code is that I created the queue with Queue(url)\n SQS doesn't guarantee at most one delivery, not sure if that is related to this issue as this seems to be occurring to frequently.\n Just following up on this issue.  I believe you're correct, it's likely just the fact that SQS provides \"at least once\" delivery.\n  This change modifies the documentation to include structure examples for\nboth nested input parameters and nested service response values. Responses\nare included for both clients and any resource action which returns a low-\nlevel response. This is part of the work for #54.\n\nThis does **not** yet include documentation for each of the nested values\nexcept for a basic Python type. I'm hoping to get some feedback on\nthis before including the full member documentation.\n\nAdditionally, this includes some basic tests for the new functionality\nin the `docs.py` module. It also includes a minor naming change for\nPEP8 (more of these are coming soon).\n\nExample output:\n\n![screen shot 2015-03-26 at 10 57 55 am](https://cloud.githubusercontent.com/assets/106826/6853526/ef09f87e-d3a8-11e4-9410-77a184feb5ab.png)\n\ncc @jamesls @kyleknap \n [![Coverage Status](https://coveralls.io/builds/2201493/badge)](https://coveralls.io/builds/2201493)\n\nCoverage remained the same at 98.7% when pulling **8b076526b113590e9dd3f22eb392b5c41c567a94 on doc-structure** into **c290e5610c88a831504344d6b8f7bf5be72ef1b9 on develop**.\n I am glad that you added tests so we can start building those up. I feel that we need them now as we are document some of the more complex structures.\n\nOne thing that I would like seen done is if you add \"bcdoc\"-esque helper methods in. I feel like if I was making edits to the doc code I could easily forget a newline character or a closing bracket. If we had some helper methods to help clean it up that would be great. Even if it was like methods like `start_structure()`, `end_structure()`, `start_list()`, `end_list()` that made starting and ending brackets that would be great. Looking at the code, other methods that come off of the top of my head would be a `structure_element(key, value)` that returns the `'key': 'value'` pattern in the documentation. I will let you know if I think of any more possible helper methods.\n\nLet me know what you think.\n @kyleknap please take another look. Note that the test failure is because this depends on boto/botocore#502.\n\nI've cleaned up the code quite a bit, added some constants/string templates to lower the chances of human error and along with that Botocore change am now testing a more complete example of the output that should catch your concerns. Any other feedback?\n Thanks. Looks good. :ship:\n @jamesls \nThe specific examples that I pointed out were addressed. But in general I agree with you, I feel the more abstraction there is the better when it comes to docs. For better abstraction, I could see additional helper methods like `document_list()`, `document_list_element()`, `document_structure_element()` added.\n\nFor me, I guess the level of abstraction should be based on if we are planning to reuse this code elsewhere and how long we plan on using it. I was under the impression this code is going to be relatively temporary.\n\nIf we are planning to reuse this code elsewhere, it would be useful to have a public documentation api that we could rely on such that if we refactor the internals of a public documentation method we can expect a similar output.\n [![Coverage Status](https://coveralls.io/builds/2261210/badge)](https://coveralls.io/builds/2261210)\n\nCoverage remained the same at 98.7% when pulling **9cea13bbb7389a50c7197714680ab76eb6f73a91 on doc-structure** into **ee401867a114bac56fb124adb3324b2316302d28 on develop**.\n @jamesls @kyleknap please have another look. I've update the code to use helper functions, have added a dummy service and test a bunch of the output from the doc generator. The coverage is now near to where it was before (around 96%). Still lower but it's a good set of basic tests that we can grow over time.\n\nI am not testing batch actions and a couple other minor things, so we'll want to add tests for that in the future. What do you guys think?\n [![Coverage Status](https://coveralls.io/builds/2277121/badge)](https://coveralls.io/builds/2277121)\n\nCoverage decreased (-2.08%) to 96.62% when pulling **66b15523616c4c4b203a75c4ad99d945c704a39b on doc-structure** into **ee401867a114bac56fb124adb3324b2316302d28 on develop**.\n Definitely looks better. It would still be nice to get coverage back to where it was, but It is a good start to build up our documentation methods and tests. :ship: We should look into adding tests for the missing lines and possibly more abstractions to the documentation methods in the near future.\n  [![Coverage Status](https://coveralls.io/builds/2195393/badge)](https://coveralls.io/builds/2195393)\n\nCoverage decreased (-0.39%) to 98.31% when pulling **55d324fb434e3d26e65269cdac3304a62650c0b2 on jamesls:update-readme** into **c290e5610c88a831504344d6b8f7bf5be72ef1b9 on boto:develop**.\n [![Coverage Status](https://coveralls.io/builds/2195393/badge)](https://coveralls.io/builds/2195393)\n\nCoverage remained the same at 98.7% when pulling **55d324fb434e3d26e65269cdac3304a62650c0b2 on jamesls:update-readme** into **c290e5610c88a831504344d6b8f7bf5be72ef1b9 on boto:develop**.\n LGTM :ship:-it!\n  This change allows references with a JMESPath query set on the reference\nresource path attribute to be loaded with data at instantiation time if\nthat data is present in the parent (via `meta.data`). If the data has\nnot yet been loaded and the parent is loadable, then a `load` operation\nis incurred.\n\nBefore:\n\n``` python\n>>> ni = ec2.NetworkInterface('abc123')\n>>> ni.association.public_ip\nResourceLoadException: ec2.NetworkInterfaceAssociation has no load method\n```\n\nAfter:\n\n``` python\n>>> ni = ec2.NetworkInterface('abc123')\n>>> ni.association.public_ip\n'127.0.0.1'\n```\n\nAdded a test to ensure this works as expected.\n\n@kyleknap @jamesls please have a look.\n [![Coverage Status](https://coveralls.io/builds/2191968/badge)](https://coveralls.io/builds/2191968)\n\nCoverage increased (+0.01%) to 98.7% when pulling **7dfd42f915c6bc06a068a7bee4111e22b055b119 on ref-load** into **ebc0f95261025aa02c474ec8ffa3e0a0604cb3c6 on develop**.\n @jamesls mind taking another look? Thanks! :+1:\n  Not sure this is the right place to ask, but I'm also not sure WHERE to ask this. I'm now getting:\n\nbotocore.exceptions.ClientError: An error occurred (NotAuthorizedException) when calling the SetIdentityPoolRoles operation: Access to Role 'SomeRoleName' is forbidden.\n\nI created the role just a few lines previous in the python script using\n\n```\n iam = session.client('iam');\n iam.create_role(..)\n```\n\nand now trying to call\n\n```\ncognito = session.client('cognito-identity', region_name='us-east-1')\ncognito.set_identity_pool_roles(..)\n```\n\nAm I doing something wrong? Seems the same credentials that created the role should be able to reference it.\n\nAny ideas?\n @jvilhuber your calling code looks good from the perspective of Boto. Have you read through the Cognito Sync developer guide? Maybe take a look here and make sure your role has the correct policy set up:\n\nhttp://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-auth.html#iam-roles\n @jvilhuber any update on this? Have you gotten it working?\n Sorry, haven't had a chance yet. I believe the user I'm using has full\naccess (during development), but I will double check.\n\nJan\nOn Mar 24, 2015 4:25 PM, \"Daniel G. Taylor\" notifications@github.com\nwrote:\n\n> @jvilhuber https://github.com/jvilhuber any update on this? Have you\n> gotten it working?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/boto/boto3/issues/73#issuecomment-85718563.\n Sorry for the delay. Just got back to this code today, and it's still not working. The user in questions has AdministratorAccess `{\"Version\": \"2012-10-17\",  \"Statement\": [{\"Effect\": \"Allow\",\"Action\": \"*\",\"Resource\": \"*\"}]}`. \n\nI tried this both with boto3 and the aws cli (which uses the same botocore under the covers, I think). Both fail with the same error. I can send you output from the aws cli --debug, if you like. Or I can paste it here if appropriate.\n One thought: I'm passing in the roles via RoleName, instead of an ARN. Perhaps the API wants an ARN?\n Yes, that was it. The documentation could be better ;)\n Sigh. That being said, when I go to the AWS console and inspect the new identity pool I just created and set roles in, it still shows as having no roles for auth and unauth set. I can select them from the drop down and save, but for some reason the api doesn't REALLY set them.\n  I think this seems reasonable.  Looks good to me, :shipit:\n Looks good :ship:\n [![Coverage Status](https://coveralls.io/builds/2013047/badge)](https://coveralls.io/builds/2013047)\n\nChanges Unknown when pulling **2a10ea6cb9183e60cde0ba9d3e34fa962f8fe811 on session-profile** into *\\* on develop**.\n For everybody coming from Google: it is now called `AWS_PROFILE`.\n\n```\n$ AWS_PROFILE=dev ipython\n>>> import boto3\n>>> s3dev = boto3.resource('s3')\n```\n kudos go to @haihappen\n  :shipit:\n  [![Coverage Status](https://coveralls.io/builds/1980487/badge)](https://coveralls.io/builds/1980487)\n\nChanges Unknown when pulling **1e054040934f62ec1eefb05fb4171fa738cbfffe on model-collision** into *\\* on develop**.\n As someone who hasn't looked at this code in a while, I'm probably missing something, but where are the tests for this feature?  Given your description, particularly the second point:\n\n> Order: reserved names (meta), load action, identifiers, actions, subresources, references, collections, and then attributes.\n\nI was looking for a test of exactly like this.  A resource that had one or more of those, and we verify they get renamed as X, Y, Z.\n\n`ResourceModel` has two new methods added, but I don't see any explicit tests for this.\n Looks good. The only thing I did not see was the collision handling for waiters. I talked to you about adding it, even though the chance of collisions for waiter_actions is very small especially since `wait_until_` prepends all waiter actions, just to be safe and consistent with the rest of the features in boto3. Once you add it, :ship:.\n Thanks! :ship:\n :shipit:\n  I could be incorrect, but I believe iam-2010-05-08.resources.json needs to be regenerated to have the new methods for interacting with Managed Policies.\n\nhttps://github.com/boto/boto/issues/2956\n\nAre there instructions for generating these JSON files?\n\nhttps://github.com/boto/boto3/blob/master/boto3/data/resources/iam-2010-05-08.resources.json\n\nThe version from AWS has remained the same: (API Version 2010-05-08)\n\nhttp://docs.aws.amazon.com/IAM/latest/APIReference/API_Operations.html\n Is there documentation on how you create these JSON files by hand?\n\nIt's not immediately obvious to me what the correct format is and what the different values actually represent.\n @monkeysecurity these resources are now in the latest release! Thanks for all the help.\n  I was attempting to test some failure logic by calling an S3 Object's put method with no network connection. Since the response isn't really documented I was expecting an empty response, however instead I received this stack trace:\n\n```\n  File \"Documents/development/amazon-aws/aws/uploader.py\", line 63, in upload_file\n    response = upload_file.put(Body=file_handle)\n  File \"Documents/development/virtualenvs/potree-converter3/lib/python3.4/site-packages/boto3/resources/factory.py\", line 379, in do_action\n    response = action(self, *args, **kwargs)\n  File \"Documents/development/virtualenvs/potree-converter3/lib/python3.4/site-packages/boto3/resources/action.py\", line 77, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"Documents/development/virtualenvs/potree-converter3/lib/python3.4/site-packages/botocore/client.py\", line 292, in _api_call\n    operation_model, request_dict)\nTypeError: 'NoneType' object is not iterable\n```\n\nHere's the code that caused it (again, with no network connection):\n\n```\n#create the object to put\nupload_file = self.bucket.Object(key)\n\n#upload the file object\nresponse = upload_file.put(Body=file_handle)\n```\n @a2hill this has been fixed in the latest release with a new error message that is more clear:\n\n```\nEndpointConnectionError: Could not connect to the endpoint URL: \"https://s3-us-west-2.amazonaws.com/\"\n```\n  Hi! I'm not sure how to do this, could you clarify? (boto3 0.0.7)\n\n```\n>>> import boto3\n>>> s3 = boto3.resource('s3')\n>>> bucket = s3.Bucket('ubitricity-backup')\n>>> o = bucket.Object('test')\n>>> mpu = o.initiate_multipart_upload()\n>>> part = mpu.MultipartUploadPart(1)\n>>> part.upload('datadatadata')\n{u'ETag': '\"d41d8cd98f00b204e9800998ecf8427e\"', 'ResponseMetadata': {'HTTPStatusCode': 200, 'HostId': 'leCanviHIAh0lS9UursVkiMiyzksNVMAn+jYgyClzp5us8mpCjwB06WEeifjy7LX', 'RequestId': '6C5B491C7D0E7060'}}\n>>> mpu.complete()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/factory.py\", line 379, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/action.py\", line 77, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 299, in _api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part\n```\n\nI understand the MultipartUploadPart is not being added to the MultipartUpload object. But how is it done? I was looking for a method like mpu.add_part() but there is none.\n\nThank you!\n Would certainly be nice if the test contained more than one part.\n yes, please update for multiple parts. \n  boto3 0.0.7\n\n```\n>>> import boto3\n>>> r53 = boto3.client('route53domains')\n>>> r53.list_domains()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/aws/lib/lib/python2.7/site-packages/botocore/client.py\", line 238, in _api_call\n    operation_model, request_dict)\nTypeError: 'NoneType' object is not iterable\n```\n Never mind, it works when I set region to \"us-east-1\" (my default is \"eu-central-1\")\n  [![Coverage Status](https://coveralls.io/builds/1895334/badge)](https://coveralls.io/builds/1895334)\n\nCoverage remained the same at 98.58% when pulling **08df735c0a5fa6f8a851e96a622e696b4d5d20bc on s3-ident-fix** into **f04f5e3febf8af244ec0c6cc462cf2b63be84352 on develop**.\n Would there be any way to add a test for this? Maybe an integration test? I would suggest just creating a multipart upload, uploading a part, and then listing the parts for the assertion. You do not need to do a full multipart upload as that requires more than 5 MB data transferred.\n I would say an integration for multipart upload in boto3 would be nice. Its a fairly used operation and it would not take too much time (when running the test) to instantiate a multipart upload, upload a single small (under <  5MB) part, and then complete the multipart upload. And that should succeed because there is only one part involved in the multipart upload.\n [![Coverage Status](https://coveralls.io/builds/1902147/badge)](https://coveralls.io/builds/1902147)\n\nCoverage remained the same at 98.61% when pulling **aaab03ed94ae5948b91005a730353b335a77c692 on s3-ident-fix** into **28ae6a8cef989a2087eb82ef1f20e51f8a503d38 on develop**.\n [![Coverage Status](https://coveralls.io/builds/1902578/badge)](https://coveralls.io/builds/1902578)\n\nCoverage remained the same at 98.61% when pulling **df4d95b1d6c28248cf31e5a72ead54f6dc56f02b on s3-ident-fix** into **28ae6a8cef989a2087eb82ef1f20e51f8a503d38 on develop**.\n Thanks for adding the integration test. :ship:\n :shipit:\n  [![Coverage Status](https://coveralls.io/builds/1896225/badge)](https://coveralls.io/builds/1896225)\n\nChanges Unknown when pulling **f4a2e72eec4947567a415216e69f6040270f6fc6 on collection-path-fix** into *\\* on develop**.\n LGTM :ship:\n  Looks good. :ship: Thanks for fixing the comments I made earlier\n [![Coverage Status](https://coveralls.io/builds/1896196/badge)](https://coveralls.io/builds/1896196)\n\nChanges Unknown when pulling **e2d370669b8554ea0ea1c87c69759cde93e22992 on service-subresources** into *\\* on develop**.\n Thanks! :ship:\n  Hello! I'm not sure whether it's me who's making a mistake here or not (boto3 0.0.7):\n\n```\n>>> import boto3\n>>> s3 = boto3.resource('s3')\n>>> bucket = s3.Bucket('ubitricity-backup')\n>>> o = bucket.Object('test')\n>>> mpu = o.initiate_multipart_upload()\n>>> mpu\ns3.MultipartUpload(bucket_name='ubitricity-backup', object_key='test', id='WYDgB2hJrtoTHxWLVL.yz98bTrL.UCuQAk.iIpNeIm6pIl.CZoZ2Uk7mJmKDokQejymCurdjKBj4IQpJF2VAJmEjvjHfepJyWSGU1P7QVdiaDIvJSX_OK5w0omLPVOcu')\n>>> part = mpu.MultipartUploadPart(1)\n>>> part\ns3.MultipartUploadPart(bucket_name='ubitricity-backup', object_key='WYDgB2hJrtoTHxWLVL.yz98bTrL.UCuQAk.iIpNeIm6pIl.CZoZ2Uk7mJmKDokQejymCurdjKBj4IQpJF2VAJmEjvjHfepJyWSGU1P7QVdiaDIvJSX_OK5w0omLPVOcu', multipart_upload_id='test', part_number=1)\n>>> part.upload(Body = 'test')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/factory.py\", line 379, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/boto3/resources/action.py\", line 77, in __call__\n    response = getattr(parent.meta.client, operation_name)(**params)\n  File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 299, in _api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified upload does not exist. The upload ID may be invalid, or the upload may have been aborted or completed.\n```\n\nIn the MultipartUploadPart object the values for object_key and multipart_upload_id seem inverted.\n\nDo I use this function in a wrong way?\n  I'm just getting going on boto3, but stumbling on an issue. The following comes back with a SignatureDoesNotMatch exception: \n\n``` python\nimport boto3\naws_session = boto3.Session(aws_access_key_id=AWS_ACCESS_KEY,\n                            aws_secret_access_key=AWS_SECRET_KEY,\n                            region_name='us-west-1')\ns3 = aws_session.resource('s3')\nb = s3.Bucket(BUCKET)\n\nbad = b'\\xe2'\ngood = \"this works\"\nb.put_object(Key='test', Body=bad)\n```\n\nbotocore.exceptions.ClientError: An error occurred (SignatureDoesNotMatch) when calling the PutObject operation\n\nAm I missing something obvious? \n  I'm using boto3-0.0.7. I'm expecting this code to output the sizes of the keys in the bucket:\n\n```\ns3 = boto3.resource('s3')\nbucket = s3.Bucket(BUCKET)\nfor o in bucket.objects.all():\n  print o.size\n```\n\ninstead I get this error:\n\n```\nTraceback (most recent call last):\n  File \"./bug_report\", line 10, in <module>\n    print o.size\n  File \"/home/glacier/lib/lib/python2.7/site-packages/boto3/resources/factory.py\", line 257, in property_loader\n    '{0} has no load method'.format(self.__class__.__name__))\nboto3.exceptions.ResourceLoadException: s3.ObjectSummary has no load method\n```\n\nI'm using a bucket in the eu-central-1 region.\n does o.content_length work better for you? I couldn't figure out the s3.ObjectSummary example in the documentation. \n Unfortunately not:\n\n```\nAttributeError: 's3.ObjectSummary' object has no attribute 'content_length'\n```\n This bug appears in 1.1.2 version.\n> pip freeze | grep boto3\nboto3==1.1.2\n\n> python\n\n>>> import boto3\n>>> s3 = boto3.resource('s3')\n>>> object_summary = s3.ObjectSummary('bucket_name','key')\n>>> object_summary.size\nTraceback (most recent call last):\nFile \"\", line 1, in \nFile \"/usr/local/lib/python2.7/site-packages/boto3/resources/factory.py\", line 212, in property_loader\n'{0} has no load method'.format(self.class.name))\nboto3.exceptions.ResourceLoadException: s3.ObjectSummary has no load method\n @danielgtaylor I am still getting the same problem here for boto3 version 1.2.2 \n\nboto3.exceptions.ResourceLoadException: s3.ObjectSummary has no load method\n any updates on this?\n I'm using 1.4.4 and still getting this error\r\n\r\nAttributeError: 's3.ObjectSummary' object has no attribute 'content_length'\r\n\r\nHas it been fixed?  \r\n\r\nIf it hasn't, now worries, I'll use something else. Still acting odd for me too.  I just upgraded to boto3 0.0.7, and now I'm getting an error when trying to call s3.Object().\n\n``` python\ns3 = boto3.resource('s3')\nobj = s3.Object('my-bucket', 'my-key')\n```\n\nThat throws an AttributeError: \"AttributeError: 's3' object has no attribute 'Object'\"\n\nIf I go back to 0.0.6 or 0.0.5, I have no problems accessing s3.Object.\n\nWas there a breaking change here? I didn't see anything in the release notes or changes in the docs.\n  Preview at https://github.com/msabramo/boto3/blob/patch-1/README.rst\n [![Coverage Status](https://coveralls.io/builds/1873525/badge)](https://coveralls.io/builds/1873525)\n\nChanges Unknown when pulling **8e51170223d1e82a66c250380c58f3b4e0c0e129 on msabramo:patch-1** into *\\* on boto:develop**.\n  Where do I find the additional information not covered in boto3 read the docs?\n\nI'm using EMR and need to use add_job_flow_steps but I don't know what the structure of steps list needs to be. I know how to do it using aws cli.\n\nIs there an additional resource I should be looking at which has this information about parameter structure requirements when using boto3?\n Thanks @danielgtaylor \n\nI saw your comment with an example but then it just disappeared - not sure what happened there\n @danielgtaylor Excellent - thanks as always for quick response\n @owenrumney the structure descriptions for parameters and return values have now been merged. Please have a look at the docs and let me know what you think!\n @danielgtaylor had a look, much clearer, thanks for updating me that it was there.\n  Recently I noticed that when I go view my cognito pools in the console, I'm prompted to set the roles. Previously they were set (or so I thought) via the iam call to set them up, but apparently I was mistaken, or things have changed.\n\nI noticed there's a new API: http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_SetIdentityPoolRoles.html\n\nThis API appears to not be supported by boto3 yet. Can you please add it?\nRegard,\njan\n Hm. Perhaps the call is there, but not documented on readthedocs.org yet? I'm getting an error now I'll have to figure out:\n\nbotocore.exceptions.ClientError: An error occurred (NotAuthorizedException) when calling the SetIdentityPoolRoles operation: Access to Role 'ZZZZZ' is forbidden.\n Things just keep getting weirder. I upgraded my install (pip install -U boto3) and now I get:\nAttributeError: 'cognito-identity' object has no attribute 'set_identity_pool_roles'\n When I upgrade botocore, I get\njmespath.exceptions.ParseError: Invalid token.: Parse error at column 0 near token \"@\" (CURRENT) for expression:\n\"@\"\n ^\n Not sure this is the right place to ask, but I'm also not sure WHERE to ask this. I'm now getting:\n\nbotocore.exceptions.ClientError: An error occurred (NotAuthorizedException) when calling the SetIdentityPoolRoles operation: Access to Role 'SomeRoleName' is forbidden.\n\nI created the role just a few lines previous in the python script using iam = session.client('iam'); iam.create_role(..), and now trying to call 'cognito.cognito.set_identity_pool_roles(..)' where cognito = session.client('cognito-identity', region_name='us-east-1')\n\nAm I doing something wrong? Seems the same credentials that created the role should be able to reference it.\n\nAny ideas?\n  [![Coverage Status](https://coveralls.io/builds/1871803/badge)](https://coveralls.io/builds/1871803)\n\nCoverage increased (+0.01%) to 98.59% when pulling **d175554d4748aeec2f064f8cdc82b203d552c6cc on plural-refs** into **d2c8090f90905223005a5865d7512e309e0545ff on develop**.\n Looks good. :ship:\n  [![Coverage Status](https://coveralls.io/builds/1830786/badge)](https://coveralls.io/builds/1830786)\n\nCoverage decreased (-0.04%) to 98.58% when pulling **6b6cf763fa008dbca4f816368b1d95f6921c850f on resource-model-update** into **59136a470643ce26f56ac2e9d2a6bc9853311461 on develop**.\n It looks good to me. :ship: Most of my comments were minor: questions and comments on style and tests.\n Overall looks good.  Just had a couple questions.\n [![Coverage Status](https://coveralls.io/builds/1850769/badge)](https://coveralls.io/builds/1850769)\n\nCoverage decreased (-0.05%) to 98.57% when pulling **3d96f71f2ac1c5b72d54b8e6a030f9a542666f2a on resource-model-update** into **59136a470643ce26f56ac2e9d2a6bc9853311461 on develop**.\n Any ideas on the coverage drop?\n  I'm having trouble with completing a multipart upload\n\ngiven the following test code\n\n```\nmp = s.create_multipart_upload(Bucket='datalake.primary', Key='test1')\nuid = mp['UploadId']\np1 =s.upload_part(Bucket='datalake.primary', Key='test1', PartNumber=1, UploadId=uid, Body='part_0')\ns.complete_multipart_upload(Bucket='datalake.primary', Key='test1', UploadId=uid, MultipartUpload=???)\n```\n\nI don't know what I'm supposed to be setting MultipartUpload to and can't work it out in the docs. I see it needs to be a dict but not sure what it should contain.\n\nWithout it, I get the error `ClientError: An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part`\n @danielgtaylor thanks, thats much better. I'd seen from the API docs this was the general form but wasn't completely clear. If the documentation could just detail the structure of dict that would probably have been enough.\n What is the ETag? the dict, part, is not defined in this example.\n ETag is part of the response of method s3.upload_part(). See the response structure in the doc: https://boto3.readthedocs.org/en/latest/reference/services/s3.html#S3.Client.upload_part\n\nI guess the typo in the example is confusing you. `part` should be renamed to `part1`:\n\n```\npart_info = {\n    'Parts': [\n        {\n            'PartNumber': 1,\n            'ETag': part1['ETag']\n        }\n    ]\n}\n```\n  I get a SignatureDoesNotMatch error when trying to put an object without specifying the content type. After turning on logging and looking at the raw Message prop in the response, I saw that S3 was expecting the client to sign \"PUT\\napplication/x-www-form-urlencoded\\n...\", but botocore was signing \"PUT\\n\\n...\". Once I specified any content type, the client was able to sign the string correctly put the object.\n\nUsing boto 0.0.5 w/ botocore 0.78.0.\n Sorry I was irresponsible in not responding to this. I'm running into issues trying to run this through 0.0.7 as reported in another issue, but it appears this problem does exist in at least 0.0.6 still. This is from the boto3 log output in that version:\n\n```\n2015-02-05 16:30:36,056 DEBUG:botocore.auth StringToSign:\nPUT\nXlMJyebV3YFc2xs3nf01cg==\n\nFri, 06 Feb 2015 00:30:36 GMT\n/my-bucket/my-key\n```\n\nIf / when I get 0.0.7 working, I'll report back again either way.\n  This is related to boto/botocore#431 which contains more background information. \n\nAccording to http://docs.aws.amazon.com/AWSImportExport/latest/DG/WebCommands.html and http://docs.aws.amazon.com/AWSImportExport/latest/DG/WebGenerateShippingLabel.html the GenerateShippingLabel API call is missing. It is also missing in botocore as mentioned above. It is also missing from AWS CLI v1.6.10. \n\nimportexport.generate_shipping_label is missing:\n\n``` python\n    In [76]: importexport = boto3.client('importexport')\n\n    In [77]: importexport.\n    importexport.can_paginate   importexport.get_status\n    importexport.cancel_job     importexport.get_waiter\n    importexport.clone_client   importexport.list_jobs\n    importexport.create_job     importexport.update_job\n    importexport.get_paginator  importexport.waiter_names\n```\n @danielgtaylor, thanks for the update. I look forward to this being resolved.\n Just to be clear, this is a show stopper. I product is broken until this is fixed.\n @danielgtaylor... Thank you for this. You rock! Keep up the great work.\n  [![Coverage Status](https://coveralls.io/builds/1638513/badge)](https://coveralls.io/builds/1638513)\n\nCoverage increased (+0.02%) when pulling **9f3f4ec63e1b2e1824d2bfc8b45f8734cba4d32f on meta-object** into **bc866bbdd6bcc527744bd37e1e8e6fa4993f56ba on develop**.\n Looks good, just some small questions on the ResourceMeta class itself.\n [![Coverage Status](https://coveralls.io/builds/1638866/badge)](https://coveralls.io/builds/1638866)\n\nCoverage decreased (-0.1%) when pulling **c48ecc8916283f1f24a98143baeb30ac3f083f76 on meta-object** into **bc866bbdd6bcc527744bd37e1e8e6fa4993f56ba on develop**.\n :shipit:\n [![Coverage Status](https://coveralls.io/builds/1639060/badge)](https://coveralls.io/builds/1639060)\n\nCoverage increased (+0.04%) when pulling **e31eba1dd4025262b276f698cb13632f096935a7 on meta-object** into **bc866bbdd6bcc527744bd37e1e8e6fa4993f56ba on develop**.\n  I added a section to the overview of both clients and resources about how to use waiters for each of them.\n\ncc @danielgtaylor @jamesls \n [![Coverage Status](https://coveralls.io/builds/1627744/badge)](https://coveralls.io/builds/1627744)\n\nCoverage remained the same when pulling **8f8aa3792316b3bb0f6d9b8dcca7739c4e2a8358 on kyleknap:waiter-top-level-docs** into **279d058513670fdacd26935e1f07753a47af0445 on boto:develop**.\n  So for this PR, I expose waiter actions for resources. For each waiter action, the name was prepended with `wait_until_`. So for the EC2 Instance resource definition, it has waiter resource definitions: \"Running\", \"Stopped\", and \"Terminated\": https://github.com/boto/boto3/blob/develop/boto3/data/resources/ec2-2014-10-01.resources.json#L694\n\nThis gets translated to the methods: `wait_until_running()`, `wait_until_stopped()`, and `wait_until_terminated()` for the Instance resource.  These methods will then make a `wait()` call to the client's waiter method to actually perform the wait.\n\ncc @danielgtaylor @jamesls \n [![Coverage Status](https://coveralls.io/builds/1621711/badge)](https://coveralls.io/builds/1621711)\n\nCoverage increased (+0.06%) when pulling **8124dde6e0d2285890a101d5e34c983807fdbefd on kyleknap:waiters** into **8b10f29803703efc8227fcd4cc031c95f1076d55 on boto:develop**.\n  [![Coverage Status](https://coveralls.io/builds/1599260/badge)](https://coveralls.io/builds/1599260)\n\nCoverage remained the same when pulling **9995761cdcdee53599578972dd8233ec97df6acb on remove-six** into **2190b6bf61b227c22163f8e65cc41c5161065f42 on develop**.\n :ship:\n  because awscli requires six 1.8.0 and boto3 works fine with it.\n [![Coverage Status](https://coveralls.io/builds/1597735/badge)](https://coveralls.io/builds/1597735)\n\nCoverage remained the same when pulling **6a744996647b7bebfbe9794e864e1957894d71be on bosr:six_dependency** into **2190b6bf61b227c22163f8e65cc41c5161065f42 on boto:develop**.\n Perfect. Thanks !\n\nRomain\n\n> On 11 Dec 2014, at 22:42, Daniel G. Taylor notifications@github.com wrote:\n> \n> @bosr thanks for the pull request! I've looked into this a bit more, and it turns out I'm not even using six anymore since moving to using Botocore for data loading in 4b0a2f5. I think that I'm just going to remove the dependency on six completely, and if we need it in the future we can expose it via the version that ships with Botocore.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n  Hi,\n\nI am trying to encrypt on one instance and decrypt on another, however, it fails to decrypt on the second instance. I am using the following two functions:\n\n```\n    def encryptFile(self):\n            with open(self.file2enc,\"rb\") as input_file:\n                    encoded_file = base64.b64encode(input_file.read())\n\n            #check if we are not trying to encrypt larger than 4kb\n            if sys.getsizeof(encoded_file) > 4096:\n                    print \"File %s too large to encrypt\" % (file2enc)\n                    sys.exit(1)\n            #encryption\n            self.kms = boto3.client(\"kms\")\n            e = self.kms.encrypt(KeyId=self.keyid,Plaintext=encoded_file)\n            self.objectBody = base64.b64encode(e['CiphertextBlob']).decode(\"utf-8\")\n\n\n    def decryptFile(self,enc_string):\n            enc_string=self.encrypted_content\n            self.kms = boto3.client(\"kms\")\n\n            print enc_string\n            #decrypt\n            decrypted_file = self.kms.decrypt(CiphertextBlob=enc_string)\n            return decrypted_file['Plaintext']\n```\n\nIf I run those on instance 1 it works correctly, however, if I encrypt on instance 1 and decrypt on instance 2 I get:\n\n> > > kms=boto3.client(\"kms\")\n> > > kms.decrypt(CiphertextBlob='CiDLU0Ooom2Wauq+kF0F9cMkyN/tO50IzD4aTn0RUeynBhKJAQEBAgB4y1NDqKJtlmrqvpBdBfXDJMjf7TudCMw+Gk59EVHspwYAAABgMF4GCSqGSIb3DQEHBqBRME8CAQAwSgYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAzVBeU8nmuhfVzUoUUCARCAHRma/bCWarfMFZJNqkfmcN8AVTacxPCiu44lNi80')\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > >   File \"/usr/local/lib/python2.7/dist-packages/botocore/client.py\", line 249, in _api_call\n> > >     raise ClientError(parsed_response, operation_name)\n> > > botocore.exceptions.ClientError: An error occurred (InvalidCiphertextException) when calling the Decrypt operation: None\n\nBoth instances use the same IAM role. Is this a bug or I am missing the obvious ?\n\nThanks!\n Thanks @danielgtaylor! Working perfectly now. I found a bug on my end with base64 encoding.\n  I'm using the code (see below) to upload and encrypt a file in s3 using a valid keyAlias (based on the new KMS features)\n\nIt fails with the error: 'Requests specifying Server Side Encryption with AWS KMS managed keys require AWS Signature Version 4.'\n\nI have specified '[s3] use-sigv4 = True' in my ~/.aws/config file. \n\nI can get this functionality to work via the Java SDK. \n\ns3 = boto3.resource('s3')\ndata = open(fileName, 'rb')\ns3.Bucket(bucketName).put_object(Key=keyName, Body=data, ServerSideEncryption='aws:kms', SSEKMSKeyId='keyAlias')\n I am experiencing this issue as well. After looking into this a bit, it looks like botocore.handlers.signature_overrides might be a no op?\n Thank you for the update.\n is there a work around to this problem - I believe with the java SDK you can explicitly set endpoint and region to get it working. Anything with boto3?\n Great. Thanks for the update!\n Thanks for all of your work, @danielgtaylor!\n  I've been looking at the Java SDK for client side encryption up to AWS using KMS keys and have used KMSEncryptionMaterialsProvider to do so as per this blog http://java.awsblog.com/post/Tx19OLB7M3D6DS8/S3-Encryption-with-AWS-Key-Management-Service\n\nIs there an equivalent for boto3 to client side encrypt or is it a case of generating a key, encrypting with that key then pushing up to S3?\n\nThanks,\nOwen\n Hi, \nI've been facing somehow the same issue, and I found a lib that provides compatibility with the Ruby SDK:\nhttps://github.com/boldfield/s3-encryption \n\nI've not been able to test thoroughly but I believe it could help. I'm on a project that requires client side encryption but is unfortunately built around the original boto. I'll subscribe this issue and if I come to use boto3 for this purpose I'd be glad to help.\n Seems like this should be pretty doable.  Started working on it for client side with AWS KMS, but ran into some issues with decrypting the envelope key. Will update once it is working.  Here is current code snippet:\n\nimport base64\nfrom Crypto.Cipher import AES\n\nencrypted = bucket.get_key(object_key)\nmetadata = encrypted.metadata\nenvelope_key = base64.b64decode(metadata['x-amz-key-v2'])\nenvelope_iv = base64.b64decode(metadata['x-amz-iv'])\n\nencryption_key = kms.decrypt(CiphertextBlob=envelope_key)\n Got it working with KMS CMK key. Works with client side sdk for ruby and java. Used the following link as a starting point:\nhttp://stackoverflow.com/questions/29784535/how-to-decrypt-aws-ruby-client-side-encryption-in-python\n\nSame code as previous comment for decrypting envelope key with one tweak:\n\n``` python\nimport base64\nimport json\nfrom Crypto.Cipher import AES\n\nencrypted = bucket.get_key(object_key)\nmetadata = encrypted.metadata\nenvelope_key = base64.b64decode(metadata['x-amz-key-v2'])\nenvelope_iv = base64.b64decode(metadata['x-amz-iv'])\nencrypt_ctx = json.loads(metadata['x-amz-matdesc'])\n\nencryption_key = kms.decrypt(CiphertextBlob=envelope_key,EncryptionContext=encrypt_ctx)\n```\n I'm trying to do the kms.decrypt thing and failing. @ty-dev does the above work for you?\n\nhttp://stackoverflow.com/questions/34957677/invalidciphertextexception-when-calling-kms-decrypt-with-s3-metadata\n Hey Tedder,\n\nHere is the code I got working to decrypt Java KMS client side uploads. Its hacky but was enough to prove out the solution. I did the encryption side for both python and dotnet as well if needed.\n\n```\nfrom __future__ import print_function\nimport boto\nimport boto3\nimport tempfile\nimport base64\nimport json\nimport Crypto\nfrom Crypto.Cipher import AES\nfrom Crypto import Random\nimport os, random, struct\n\n# decrypt_file method from: http://eli.thegreenplace.net/2010/06/25/aes-encryption-of-files-in-python-with-pycrypto\ndef decrypt_file(key, in_filename, iv, original_size, out_filename=None, chunksize=16*1024):\n\n    if not out_filename:\n        out_filename = 'tempfile.png'\n\n    with open(in_filename, 'rb') as infile:\n\n        decryptor = AES.new(key, AES.MODE_CBC, iv)\n\n        with open(out_filename, 'wb') as outfile:\n            while True:\n                chunk = infile.read(chunksize)\n                if len(chunk) == 0:\n                    break\n                outfile.write(decryptor.decrypt(chunk))\n\n            outfile.truncate(original_size)\n\nREGION = '***'\nBUCKET = '***'\ns3_key = '***.png'\nfilename = '***.png'\n\ns3 = boto3.client('s3')\nkms = boto3.client('kms')\n\n# download encrypted object from S3\nencrypted = s3.get_object(Bucket=BUCKET,Key=s3_key)\n\n\n# get object metadata from encrypted object and decode base64 strings\nmetadata = encrypted['Metadata']\nenvelope_key = base64.b64decode(metadata['x-amz-key-v2'])\nenvelope_iv = base64.b64decode(metadata['x-amz-iv'])\nencrypt_ctx = json.loads(metadata['x-amz-matdesc'])\noriginal_size = metadata['x-amz-unencrypted-content-length']\n\n# use AWS KMS to decrtyp envelop key (envelop key is used to encrypt object data)\nenvelope_key_decrypt = kms.decrypt(CiphertextBlob=envelope_key,EncryptionContext=encrypt_ctx)\nprint(envelope_key_decrypt)\n\n# download encrypted object directly to file (could also just write existing encrypted object to file)\ns3.download_file(BUCKET, s3_key, filename)\n\n# decrypt file\ndecrypt_file(envelope_key_decrypt['Plaintext'],filename,envelope_iv, int(original_size))\n```\n Brilliant. I just rewrote my code slightly and have it working. The main issue was the EncryptionContext- both what it needed to be, and that it needed to be json.parsed. It also means s3-encryption is unnecessary.\n\nIf you use `download_file` in your script, I'd suggest changing `get_object` to `head_object` since it isn't necessary.\n Okay, I just reversed it- this code does a \"put\". It's my proof-of-concept code, so it needs some refactoring and such. I verified it works by pulling an object through the Java SDK, but please let me know if you test it independently.\n\nhttps://github.com/tedder/s3-client-side-encryption/blob/master/put.py\n Fixed an edge case with padding in my put.py, so make sure to update if you happen to have grabbed my older version.\n\nI'd love to inject this into s3 similar to how s3transfer works but I need someone more fluent in boto3.\n Checking in on this issue. I haven't seen traffic on it for a while. Does it make sense to revive it? If I put together a PR that provides both AES-CBC and AES-GCM client side encryption, would there be appetite to adding it to the library?  [![Coverage Status](https://coveralls.io/builds/1563671/badge)](https://coveralls.io/builds/1563671)\n\nCoverage remained the same when pulling **7a215153f345f0317e0e0a13b84d563ee4735899 on docs-kwargs** into **d18affc3ec32c4bb6eb607f1e3148ffcf0ab1df1 on develop**.\n @danielgtaylor This makes it much clearer that first arg is keyword.\n Looks good. :ship:\n  [![Coverage Status](https://coveralls.io/builds/1562699/badge)](https://coveralls.io/builds/1562699)\n\nCoverage remained the same when pulling **02ec815b58d1fe10bdb2bdae19f1f3398422a7d2 on integ** into **d18affc3ec32c4bb6eb607f1e3148ffcf0ab1df1 on develop**.\n Looks good. Just had that comment about explicit setting the region. :ship:\n [![Coverage Status](https://coveralls.io/builds/1570252/badge)](https://coveralls.io/builds/1570252)\n\nCoverage remained the same when pulling **17e81d942d64d4ab4ca5a536b100dd1aef04de99 on integ** into **d18affc3ec32c4bb6eb607f1e3148ffcf0ab1df1 on develop**.\n  When I try to call generate_data_key on a KMS client with the following code I get and error saying I've provided too many parameters to `_api_call()`\n\n```\nimport boto3\nkms = boto3.client('kms')\ndatakey = kms.generate_data_key('my_data_key_alias')\n```\n\nThe same error occurs when trying other calls such as \n`kms.get_key_policy('my_data_key_alias, \"default\")`\n @danielgtaylor I was using that documentation and I took it to mean that all arguments other than the `KeyId` needed to be named. So generally the documentation was clear - just that first parameter that I missed.\n  [![Coverage Status](https://coveralls.io/builds/1556903/badge)](https://coveralls.io/builds/1556903)\n\nCoverage increased (+0.0%) when pulling **5dd70e55718582b0265153faabf448006d34ab2a on model-version-update** into **ab3b9513a87c55bf908d6c603f1ce21df1ff4fc2 on develop**.\n Looks good. :ship: As a future PR, we should have integration tests that catch these type of regressions where we actually create resources for specific services like s3 and sqs and performs some actions using these resources.\n  ```\nimport boto3\n\nqueue_url = \"\"\n\nsqs = boto3.resource('sqs')\nqueue = sqs.Queue(queue_url)\nmessages = queue.receive_messages()\nmsg = messages[0]\nprint(msg.body)\n```\n\nIt gives:\n\n```\n File \"****\", line 31, in perform_action\n    print(msg.body)\n  File \"****lib/python2.7/site-packages/boto3/resources/factory.py\", line 262, in property_loader\n    '{0} has no load method'.format(self.__class__.__name__))\nResourceLoadException: sqs.Message has no load method\n```\n\nIt worked in 0.0.1\n  [![Coverage Status](https://coveralls.io/builds/1533341/badge)](https://coveralls.io/builds/1533341)\n\nCoverage decreased (-0.0%) when pulling **cfa443437b6012d341518a25a321bf79847fc796 on batch-actions** into **ab3b9513a87c55bf908d6c603f1ce21df1ff4fc2 on develop**.\n Looks good. :ship: You may want to add a test that does a Collection.page_size().pages() to ensure that you never run into issues for that case. I would picture a test similar to the test you did for limit()\n [![Coverage Status](https://coveralls.io/builds/1580671/badge)](https://coveralls.io/builds/1580671)\n\nCoverage decreased (-0.0%) when pulling **30463ab5ab93b2c906721b9b0b217d9a6e944d12 on batch-actions** into **8ea77b9993ff21db5bb7a37f05094356f6fff970 on develop**.\n Thanks!  :ship:\n  `kms#decrypt` throws this error every time:\n\n```\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xf2 in position 2: invalid continuation byte\n```\n\nRepro steps:\n\n```\nimport boto3\nkms = boto3.client('kms')\nresult = kms.encrypt(KeyId='some_key_id_redacted',Plaintext='my name is bob')\nkms.decrypt(CiphertextBlob=result['CiphertextBlob'])\n```\n\nMay be related to [this issue](https://github.com/aws/aws-cli/issues/1001)\n I can confirm the bug on my end too.\n The workaround worked for me, but I had to base64 encode the Plaintext as well. \n\n``` python\nencrypted=kms.encrypt(KeyId='', Plaintext='Test')\ndecrypted=kms.decrypt(CiphertextBlob=base64.b64encode(encrypted['CiphertextBlob']).decode('utf-8'))\nbase64.b64encode(decrypted['Plaintext']).decode('utf-8')\n```\n @danielgtaylor \n\nThis works for me:\nencrypt:\n\n```\n    kms = boto3.client(\"kms\")   \n    e = kms.encrypt(KeyId=self.keyid,EncryptionContext={\"\"},Plaintext=encoded_file)\n    self.objectBody = base64.b64encode(e['CiphertextBlob']).decode(\"utf-8\")\n```\n\ndecrypt:\n\n  kms = boto3.client(\"kms\")\n  decrypted_file = kms.decrypt(CiphertextBlob=enc_string,EncryptionContext=\"\")\n  I can't seem to figure out how to make a cognito-identity.get_id(...) call. This call does not require an access-key or secret. Is there a way to do this? Or is this out of scope for boto3?\n  Updated `requirements.txt` to use the head of the develop branches for packages like botocore. This will help us better monitor if changes in botocore break boto3 and ensures that we do not have to update this file with every release of botocore.\n\ncc @danielgtaylor @jamesls \n [![Coverage Status](https://coveralls.io/builds/1522029/badge)](https://coveralls.io/builds/1522029)\n\nCoverage remained the same when pulling **45218bdbf9361148a244cb94ddfb66afa9a8a7e7 on kyleknap:update-req** into **65c797349e404a1a5f398463eca084caf29ce525 on boto:develop**.\n :shipit: +1 to this.  This is what the AWS CLI does to ensure that we're aware of any issues from the develop branch of botocore potentially breaking the AWS CLI changes.\n  In order to contribute to the project, get a better understanding of how Boto3 and Botocore is interconnected and get a better understanding of how this code generation works, I have attempted to add a resource definition for Route 53.\n\nI do however hit a problem when I list the hosted zones and then try to do something with them. My current JSON file for Route 53 can be found [here](https://gist.github.com/Tenzer/9b9a5a2152a0ff0bc963), and an example of the problem can be seen here:\n\n```\n>>> import boto3\n>>> route53 = boto3.resource('route53')\n>>> zones = list(route53.hosted_zones.all())\n>>> zones\n[route53.HostedZone(id='/hostedzone/Z3HVO9WA3FVVP1')]\n>>> zones[0].id\n'/hostedzone/Z3HVO9WA3FVVP1'\n>>> zones[0].delete()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/jeppe/.pyenv/versions/boto/lib/python3.4/site-packages/boto3/resources/factory.py\", line 377, in do_action\n    response = action(self, *args, **kwargs)\n  File \"/Users/jeppe/.pyenv/versions/boto/lib/python3.4/site-packages/boto3/resources/action.py\", line 78, in __call__\n    response = getattr(parent.meta['client'], operation_name)(**params)\n  File \"/Users/jeppe/.pyenv/versions/boto/lib/python3.4/site-packages/botocore/client.py\", line 246, in _api_call\n    raise ClientError(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (400) when calling the DeleteHostedZone operation: Bad Request\n```\n\nAs the output shows, the ID I get back for the zone in the listing is `/hostedzone/Z3HVO9WA3FVVP1` but the API for [deleting a hosted zone](http://docs.aws.amazon.com/Route53/latest/APIReference/API_DeleteHostedZone.html) expects to be called with an ID such as `Z3HVO9WA3FVVP1`. I don't see a way in the resource files for the other products of how this string manipulation can be done, so I wonder if that might not be a topic that has been addressed yet?\n\nIt would of course have been easier if the Route 53 API actually returned the ID in the same format as it expects to get it back in, but that might not be easy to get Amazon to change that or add the bare ID to a new field in the output.\n Yeah, that is an annoying aspect of the Route53 API.  The AWSCLI has a customization that allows the user to pass in either the full ID returned in the listing or just the ID itself.\n\nI definitely think this is an ugly detail that should be hidden by the boto3 library.\n We should be able to move that AWS CLI customization down into the botocore layer so both AWS CLI and boto3 will have this customization.\n Thanks for the responses, and thanks for the workaround. Would you like me to create an issue on the Botocore project for this, as I couldn't see any obvious place to add such a customization like AWSCLI has?\n It looks like the issue have not been fully solved yet, or at least not for any function using these IDs.\nI went into the same kind of problems by using the function `change_tags_for_resource()` for example which require the ResourceId and resulted in the same issue. The same workaround of the split could be used, but wouldn't it be better to have both IDs forms handled in every function requiring it?\n  [![Coverage Status](https://coveralls.io/builds/1521234/badge)](https://coveralls.io/builds/1521234)\n\nCoverage increased (+0.04%) when pulling **496008ba20f59b2ae7335da3951b699b5b082527 on model-update** into **65c797349e404a1a5f398463eca084caf29ce525 on develop**.\n This looks good. I had a comment about the `ItemWithParameters` being a little vague for me. It was more of the Item part of the name that was vague to me. Otherwise, :ship:.\n [![Coverage Status](https://coveralls.io/builds/1533214/badge)](https://coveralls.io/builds/1533214)\n\nCoverage increased (+0.04%) when pulling **91ef116783dc66ce22211acfe2e3548145261e66 on model-update** into **65c797349e404a1a5f398463eca084caf29ce525 on develop**.\n  [![Coverage Status](https://coveralls.io/builds/1504596/badge)](https://coveralls.io/builds/1504596)\n\nCoverage remained the same when pulling **0d22b6f6a2502960685a6fe1a7adfa4cd64b270a on doc-example** into **86679f0aa97cf736e41b508b6b99e379b1df31f3 on develop**.\n LGTM. :ship:\n  [![Coverage Status](https://coveralls.io/builds/1504476/badge)](https://coveralls.io/builds/1504476)\n\nCoverage increased (+0.01%) when pulling **599ab56f8b3f04fba97ab74aa0130903e7528b05 on integ** into **86679f0aa97cf736e41b508b6b99e379b1df31f3 on develop**.\n That looks good. :ship: The one thing that may be sort of annoying is that the region map will have to be updated occasionally if the service for that resource is not supported in us-west-2 when we add the resource model.\n\nSame can be said for the blacklisting of certain collection methods when we add/update more resource models. Except for this, we will have to manually run and pinpoint which collection methods are slow.\n\nDespite these comments, I am not sure of a good way around them given we want these integration tests to run fairly quickly.\n  https://boto3.readthedocs.org/en/latest/reference/services/elb.html\n\nI don't see elb mentioned anywhere in the repo.\n\nThis fails:\n\n```\nelb = boto3.resource('elb')\n```\n\nAre ELB's not supported yet?  How were those docs built?  Clicking \"Edit on Github\" from the readthedocs page brings you to a 404.\n Thanks @danielgtaylor - I'm excited for this project.\n  [![Coverage Status](https://coveralls.io/builds/1494030/badge)](https://coveralls.io/builds/1494030)\n\nChanges Unknown when pulling **a12542fcb87b9a389dba1a39cb2d73e01575f6b6 on deps** into *\\* on develop**.\n Looks good. :ship:\n :shipit:\n  [![Coverage Status](https://coveralls.io/builds/1487534/badge)](https://coveralls.io/builds/1487534)\n\nCoverage increased (+0.02%) when pulling **be7db601e56b867786bb18bfa2570f8544a93254 on useragent** into **1a572e774aaf9c94ac3608d4d7854462f0fde334 on develop**.\n Looks good. :ship:\n [![Coverage Status](https://coveralls.io/builds/1491977/badge)](https://coveralls.io/builds/1491977)\n\nCoverage increased (+0.02%) when pulling **96c9167437dba26d833b78ad9ca631153b26fe7c on useragent** into **1a572e774aaf9c94ac3608d4d7854462f0fde334 on develop**.\n :shipit:\n  Is there a simple way to use a non-default profile by specifying it's name?\nLike on boto there is\n\n```\nboto.connect_ec2(profile_name=\"dev-profile\")\n```\n\nI see that I can construct a session with credentials and region, but I don't see an ability to just refer to the profile's name\n Nice. Botocore session seems like a good workaround for now. :-)\n Great, thanks :+1: \n How do you get a list of available profiles?\n @revmischa You can look at your config file at ~/.aws/config or its corresponding ~/.aws/credentials That's a terrible answer @revmischa This is what I was able to come up with. Should print out all available boto profiles.\r\n```\r\n#!/usr/bin/env python\r\n\r\nimport boto3\r\n\r\nsession = boto3.Session()\r\nprint session.available_profiles\r\n```  This does not affect the implementation codes :ramen: \n [![Coverage Status](https://coveralls.io/builds/1473092/badge)](https://coveralls.io/builds/1473092)\n\nChanges Unknown when pulling **6133fbf35e7038b96cc87d76dd423c828373fc33 on nishigori:doc-typos** into *\\* on boto:develop**.\n  [![Coverage Status](https://coveralls.io/builds/1459671/badge)](https://coveralls.io/builds/1459671)\n\nCoverage increased (+0.23%) when pulling **3df00fda9764a53a78ef57ad35437edf3505f1a4 on reverse-jmespath** into **334aa9de5a96390e0893125f211c252d746c3ed2 on develop**.\n LGTM :ship:\n [![Coverage Status](https://coveralls.io/builds/1460082/badge)](https://coveralls.io/builds/1460082)\n\nCoverage increased (+0.24%) when pulling **9ad82216a92167e6d798c4473726a5db9f67f2f2 on reverse-jmespath** into **334aa9de5a96390e0893125f211c252d746c3ed2 on develop**.\n  [![Coverage Status](https://coveralls.io/builds/1454852/badge)](https://coveralls.io/builds/1454852)\n\nCoverage remained the same when pulling **a4a04bee969070baf22f7640dbae55cf7b9f5dc0 on docs-refs** into **8e3639f32b66c436343830503ceaedeec99b2359 on develop**.\n I built the docs locally as well. Looks good. :ship:\n  [![Coverage Status](https://coveralls.io/builds/1454717/badge)](https://coveralls.io/builds/1454717)\n\nCoverage increased (+0.01%) when pulling **490b4ed8274d1a47ee16b71999e7aed63d92f4df on collisions** into **8e3639f32b66c436343830503ceaedeec99b2359 on develop**.\n Yeah looks good. :ship: I agree this logic should live in the model as well.\n Oh ok, makes sense. \n  [![Coverage Status](https://coveralls.io/builds/1447440/badge)](https://coveralls.io/builds/1447440)\n\nCoverage remained the same when pulling **7514a64a7711ab66ce127abaa2e19ac7dcc51d3b on config-docs** into **8e3639f32b66c436343830503ceaedeec99b2359 on develop**.\n Looks good. I just had a couple comments that could help make the tutorial a little more clear. :ship:\n Thanks, it is much clearer.\n [![Coverage Status](https://coveralls.io/builds/1454934/badge)](https://coveralls.io/builds/1454934)\n\nCoverage remained the same when pulling **e17b2c78ade92ff030911f2bd2471a024b731702 on config-docs** into **8e3639f32b66c436343830503ceaedeec99b2359 on develop**.\n  [![Coverage Status](https://coveralls.io/builds/1444368/badge)](https://coveralls.io/builds/1444368)\n\nCoverage remained the same when pulling **235bccc662c2b8d47afacd594ad531d20a55d50f on error-info** into **acda5db050c52d74ac769e15c31a8581069b7ab9 on develop**.\n :shipit:  Might be good to add a test that verifies the category/resource name are in the error message.\n [![Coverage Status](https://coveralls.io/builds/1444523/badge)](https://coveralls.io/builds/1444523)\n\nCoverage remained the same when pulling **3e0fcc7dc272cc23b8fdda1dbd3b53ef251caf30 on error-info** into **acda5db050c52d74ac769e15c31a8581069b7ab9 on develop**.\n :shipit:\n  [![Coverage Status](https://coveralls.io/builds/1444883/badge)](https://coveralls.io/builds/1444883)\n\nCoverage remained the same when pulling **ae1aa67740fc97898343d337ec37ecefae95872b on docs-fix** into **acda5db050c52d74ac769e15c31a8581069b7ab9 on develop**.\n  I think overall this looks good.  I looked mostly at the docs as opposed to the code (but I did look over it quickly).  Good jobs on the docs.\n [![Coverage Status](https://coveralls.io/builds/1438642/badge)](https://coveralls.io/builds/1438642)\n\nCoverage decreased (-20.19%) when pulling **d3db52e74317e00c367723a5550805417ef262b3 on docs** into **02c5e89fcb627150b38df2e3ab7f03dba61a297c on develop**.\n Looks good. :ship: \n  [![Coverage Status](https://coveralls.io/builds/1412819/badge)](https://coveralls.io/builds/1412819)\n\nCoverage increased (+0.2%) when pulling **759cfb790fb5ec2023b11ba0f2020827ac76b0e1 on region-config** into **ce12e693084fc8aac185b3fdeef457eb52f5c323 on develop**.\n Looks good. Just had a comment about splitting up a couple of the tests. :ship:\n I agree with kyle, I much prefer to have small isolated tests that more or less verify a single feature.  I'd prefer to have them split as well.  Other than that looks good.\n [![Coverage Status](https://coveralls.io/builds/1428520/badge)](https://coveralls.io/builds/1428520)\n\nCoverage increased (+0.18%) when pulling **30a681d31b50e1965d3fec542ad89b5c64ff722a on region-config** into **4b510042f68f77bd4935ac45585d115376d40951 on develop**.\n  [![Coverage Status](https://coveralls.io/builds/1412575/badge)](https://coveralls.io/builds/1412575)\n\nCoverage increased (+0.05%) when pulling **0bf93011f96a291c9ed0870892c9671b17ff963d on equality** into **f0c07a858001ff38a1992d62bad589667ee49cd3 on develop**.\n Looks good. Just had a small question. :ship:\n Looks good, just some minor feedback.\n [![Coverage Status](https://coveralls.io/builds/1428343/badge)](https://coveralls.io/builds/1428343)\n\nCoverage increased (+0.15%) when pulling **63f25f8788dddf23d2c616bd264805a4126bd98e on equality** into **f0c07a858001ff38a1992d62bad589667ee49cd3 on develop**.\n  It looks good. I like the general refactoring of removing the loading from the resource factory. My main comments were about the test and string manipulation. One general comment is that it looks like you are performing multiple string manipulation operation in one line (i.e. indexing, splitting, joining). Those are not easy to follow in general. If you could split it up and make comments for each string operation that would be great.\n\nThat will make it easier to follow when we port the resource loaders over to botocore.\n I think looks fine, I'd suggest possibly extracting out the loader logic out of session into it's own object (possibly even a subclass of Loader).  This would make the migration over to botocore's loaders painless once the needed behavior is moved to botocore.  It would also cut down the need for 3 patches and 2 mocks per test. But that being said, it's not terribly hard to update the session code as is once botocore has the required loading logic.\n\nAlso, I didn't see any tests for verifying find_latest_version.  It would be good to verify that if there's a service with more than one API version that we are in fact picking the latest version.\n [![Coverage Status](https://coveralls.io/builds/1428705/badge)](https://coveralls.io/builds/1428705)\n\nCoverage increased (+0.56%) when pulling **d176ff869fbea67be8c6eb37253d8c9e44c21c06 on loader** into **e9d22eff450f82192d7487eb643216ae1a014189 on develop**.\n Looks good. :ship:\n :shipit: Looks good.\n  [![Coverage Status](https://coveralls.io/builds/1396799/badge)](https://coveralls.io/builds/1396799)\n\nCoverage increased (+0.1%) when pulling **b712ba6fe9c1fc84a59cd9e1e189c87cd7b1a148 on references** into **f0c07a858001ff38a1992d62bad589667ee49cd3 on develop**.\n Looks good. :ship: Just had one question.\n Looks good.  I also share your concern that iterating through each resource to check for subresources is not particularly efficient (even for the initial first pass for large models like ec2), but I agree that we can optimize this later.\n\nLet's just get that test issue resolved and call this good.\n [![Coverage Status](https://coveralls.io/builds/1427306/badge)](https://coveralls.io/builds/1427306)\n\nCoverage increased (+0.1%) when pulling **2a598e968b05ebc6628d7f8cfea1c2f1b2af0823 on references** into **f0c07a858001ff38a1992d62bad589667ee49cd3 on develop**.\n  [![Coverage Status](https://coveralls.io/builds/1376337/badge)](https://coveralls.io/builds/1376337)\n\nCoverage increased (+0.15%) when pulling **7137792aefebbc4bab41daa82e4294fd01d8b032 on references** into **9e6bc37d2fb8acd8ee0d779f72276ca268f3e867 on develop**.\n Cool. Looks good. Just had a styling comment. :ship: \n :shipit: Looks good.\n [![Coverage Status](https://coveralls.io/builds/1396224/badge)](https://coveralls.io/builds/1396224)\n\nCoverage increased (+0.15%) when pulling **90505d2680efc0502976ecd61db9674cefccdc58 on references** into **9e6bc37d2fb8acd8ee0d779f72276ca268f3e867 on develop**.\n  [![Coverage Status](https://coveralls.io/builds/1371886/badge)](https://coveralls.io/builds/1371886)\n\nCoverage increased (+0.58%) when pulling **8c03ed0eb01ad56480e2039821644eabf4a9c187 on model** into **e47ef425ec8c32538c36c7b6ea417f2327050ba4 on develop**.\n :shipit: Looks good!\n  [![Coverage Status](https://coveralls.io/builds/1335448/badge)](https://coveralls.io/builds/1335448)\n\nCoverage remained the same when pulling **a76d583b9a9090d658796b12e42d1b15301d716d on install-fix** into **9ec51d91f9bce6bead6aac19cb714417214ef003 on develop**.\n :shipit:\n  [![Coverage Status](https://coveralls.io/builds/1330669/badge)](https://coveralls.io/builds/1330669)\n\nCoverage increased (+0.34%) when pulling **c9c8744f3f80095687ca9a2e64b49b958040d3b7 on repr** into **9ec51d91f9bce6bead6aac19cb714417214ef003 on develop**.\n  [![Coverage Status](https://coveralls.io/builds/1329790/badge)](https://coveralls.io/builds/1329790)\n\nCoverage increased (+0.97%) when pulling **1ccfa2e2b76bc97ec83822dbb4e8fa7948fa3b3a on collections** into **9ec51d91f9bce6bead6aac19cb714417214ef003 on develop**.\n Looks good. Main comments include the one question I had on indexing/slicing and the`limit()` and `page_size()` seeming a bit ambiguous comment.\n [![Coverage Status](https://coveralls.io/builds/1335494/badge)](https://coveralls.io/builds/1335494)\n\nCoverage increased (+0.97%) when pulling **b481322ec375dcf50b30891219c7f53912a3911c on collections** into **9ec51d91f9bce6bead6aac19cb714417214ef003 on develop**.\n API wise, I think it looks good, with the exception of a couple questions I had about all() vs. filter() and the slicing.\n\nDesign wise, one of the things that I'm finding hard to follow (in general) is the fact that parents are passed around various objects, which now include collections.  Frequently, the parent actually isn't needed, it's just that the parent has access to some other object that's _actually_ the thing the resource collection needs.  I would find it easier to read if the dependencies are more explicit (i.e a resource collection requires a client, pass one to me in my `__init__`, I require the service_name, pass that to me in my `__init__`, etc.).\n [![Coverage Status](https://coveralls.io/builds/1346570/badge)](https://coveralls.io/builds/1346570)\n\nCoverage increased (+1.26%) when pulling **e25d87017d42b3de919b79686bac897245ea11e7 on collections** into **9ec51d91f9bce6bead6aac19cb714417214ef003 on develop**.\n It looks good :ship:. The test look much better as well. As to the naming convention of the `page_size()` and `limit()` methods, I am fine with keeping the names as is. Really cannot think of a better name. The only other solution I could think of is to get rid of them for now. However, they are useful if you do not know that you can pass the `limit` and `page_size` to `all()` and `filter()`, so I would be hesitant to vote to remove them.\n Looks good :shipit:.\n\nAPI wise, the only thing that looks a little weird is the fact that `filter` will mix snake cased and camel cased args, for example:\n\n```\nfor instance in ec2.instances.filter(InstanceIds=[...], page_size=10, PossiblyOtherFilter=...):\n  print(instance.instance_type)\n```\n\nEspecially given that I believe these three things all do the same thing:\n\n```\ninstances.all(page_size=10, limit=1000).filter(InstanceIds=[...])\ninstances.filter(InstancesIds=[...], page_size=10, limit=1000)\ninstances.filter(InstanceIds=[..]).page_size(10).limit(1000)\n```\n  [![Coverage Status](https://coveralls.io/builds/1299041/badge)](https://coveralls.io/builds/1299041)\n\nCoverage increased (+0.02%) when pulling **060654c396e64a972002dd4e05ef3725a4b7721d on unique-meta** into **e07c2033bf83cee9d28c1febc07fdeb3996d3f5d on develop**.\n :shipit:\n LGTM :ship:\n  Look good. I just had the same questions/comments on the types as James.\n [![Coverage Status](https://coveralls.io/builds/1299936/badge)](https://coveralls.io/builds/1299936)\n\nCoverage increased (+0.48%) when pulling **825b32a466501c1eb11003e7bd50d65512cfbe7d on load-fix** into **e07c2033bf83cee9d28c1febc07fdeb3996d3f5d on develop**.\n LGTM :ship:\n", "text_all_count": 185825, "text_word_token": ["I", "spend", "a", "lot", "of", "time", "looking", "at", "log", "message", "from", "boto", "NUMBER", "resources", "NUMBER", "action", "that", "include", "a", "complete", "dynamodb", "request", "represented", "as", "JSON", "like", "this", "boto", "NUMBER", "resources", "NUMBER", "action", "DEBUG", "Calling", "dynamodb", "update_item", "with", "ExpressionAttributeNames", "status", "status", "UpdateExpression", "set", "status", "status", "TableName", "things", "Key", "uuid", "da", "NUMBER", "a", "NUMBER", "ba", "NUMBER", "bec", "NUMBER", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "thing_id", "ExpressionAttributeValues", "status", "FLAKY", "In", "fact", "my", "logs", "have", "zillions", "of", "lines", "like", "these", "NUMBER", "I", "ve", "notice", "that", "the", "ordering", "of", "the", "items", "in", "the", "request", "can", "vary", "i", "NUMBER", "e", "in", "addition", "to", "the", "line", "above", "I", "might", "also", "see", "a", "line", "like", "boto", "NUMBER", "resources", "NUMBER", "action", "DEBUG", "Calling", "dynamodb", "update_item", "with", "ExpressionAttributeValues", "mo_status", "BADNEWS", "UpdateExpression", "SET", "status", "mo_status", "Key", "uuid", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "cae", "NUMBER", "NUMBER", "ab", "NUMBER", "a", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fe", "ConditionExpression", "attribute_exists", "uuid", "ExpressionAttributeNames", "status", "status", "TableName", "wassup", "Obviously", "I", "ve", "made", "up", "most", "of", "that", "data", "for", "this", "example", "but", "one", "thing", "that", "I", "did", "not", "make", "up", "and", "which", "be", "my", "point", "be", "that", "in", "the", "first", "line", "ExpressionAttributeNames", "comes", "before", "ExpressionAttributeValues", "whereas", "in", "the", "second", "line", "the", "order", "be", "reversed", "NUMBER", "I", "be", "guessing", "that", "this", "comes", "from", "the", "hash", "randomization", "that", "was", "add", "in", "python", "NUMBER", "my", "code", "uses", "python", "NUMBER", "What", "I", "d", "like", "be", "some", "way", "to", "tell", "boto", "to", "alphabetize", "those", "keys", "when", "logging", "so", "that", "the", "log", "lines", "look", "more", "similar", "than", "they", "do", "now", "I", "expect", "this", "will", "make", "it", "easier", "for", "me", "to", "spot", "anomalies", "when", "quickly", "scanning", "a", "huge", "log", "file", "by", "eye", "NUMBER", "I", "confess", "that", "I", "haven", "t", "thought", "about", "how", "I", "d", "want", "the", "UI", "feature", "for", "this", "to", "look", "NUMBER", "I", "d", "guess", "you", "wouldn", "t", "want", "to", "enable", "this", "all", "the", "time", "since", "it", "would", "add", "overhead", "that", "most", "people", "don", "t", "need", "NUMBER", "Ahh", "I", "didn", "t", "know", "about", "events", "having", "merely", "glanced", "at", "what", "you", "write", "though", "it", "definitely", "looks", "like", "I", "could", "use", "that", "NUMBER", "Thanks", "The", "boto", "NUMBER", "api", "returns", "a", "successful", "request", "for", "the", "AMI", "creation", "of", "a", "paravirtualized", "instance", "NUMBER", "However", "when", "you", "describe", "the", "images", "the", "AMI", "status", "be", "fail", "and", "the", "Virtualization", "Type", "be", "set", "to", "hvm", "instead", "of", "paravirtual", "NUMBER", "Create", "an", "image", "of", "a", "paravirtualized", "instance", "use", "boto", "NUMBER", "client", "ec", "NUMBER", "NUMBER", "create_image", "or", "boto", "NUMBER", "resource", "ec", "NUMBER", "NUMBER", "Instance", "NUMBER", "create_image", "NUMBER", "The", "following", "screenshot", "shows", "some", "details", "of", "the", "fail", "AMI", "NUMBER", "boto", "NUMBER", "_failed_paravirt_image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "df", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "png", "I", "have", "do", "further", "investigation", "and", "it", "seems", "that", "I", "have", "another", "paravirtualized", "instance", "run", "on", "m", "NUMBER", "medium", "that", "I", "can", "successfully", "create", "an", "AMI", "with", "use", "boto", "NUMBER", "It", "be", "with", "the", "t", "NUMBER", "micro", "instance", "that", "the", "boto", "NUMBER", "create_image", "API", "encounters", "an", "Server", "NUMBER", "InternalError", "and", "sets", "the", "wrong", "Virtualization", "Type", "NUMBER", "The", "problem", "might", "be", "relate", "instead", "to", "the", "internal", "systems", "of", "AWS", "NUMBER", "Creating", "an", "image", "of", "the", "t", "NUMBER", "micro", "instance", "be", "successful", "when", "use", "the", "AWS", "Web", "Console", "NUMBER", "LINK", "balancer", "limits", "NUMBER", "html", "Listeners", "per", "load", "balancer", "NUMBER", "LINK", "ElasticLoadBalancingv", "NUMBER", "Client", "NUMBER", "create_listener", "You", "can", "create", "up", "to", "NUMBER", "listeners", "per", "load", "balancer", "NUMBER", "self", "NUMBER", "elb_svc", "NUMBER", "set_subnets", "LoadBalancerArn", "nlb", "LoadBalancerArn", "SubnetMappings", "subnet_mapping", "Parameter", "validation", "fail", "Missing", "required", "parameter", "in", "input", "Subnets", "self", "NUMBER", "elb_svc", "NUMBER", "set_subnets", "LoadBalancerArn", "nlb", "LoadBalancerArn", "Subnets", "self", "NUMBER", "subnets", "SubnetMappings", "subnet_mapping", "An", "error", "occur", "ValidationError", "when", "calling", "the", "SetSubnets", "operation", "You", "can", "specify", "either", "subnets", "or", "subnet", "mappings", "not", "both", "Documentation", "be", "confused", "as", "well", "LINK", "ElasticLoadBalancingv", "NUMBER", "Client", "NUMBER", "set_subnets", "Note", "that", "you", "can", "t", "change", "the", "subnets", "for", "a", "Network", "Load", "Balancer", "NUMBER", "But", "Subnets", "list", "REQUIRED", "The", "IDs", "of", "the", "subnets", "NUMBER", "You", "must", "specify", "subnets", "from", "at", "least", "two", "Availability", "Zones", "NUMBER", "You", "can", "specify", "only", "one", "subnet", "per", "Availability", "Zone", "NUMBER", "You", "must", "specify", "either", "subnets", "or", "subnet", "mappings", "NUMBER", "string", "SubnetMappings", "list", "The", "IDs", "of", "the", "subnets", "NUMBER", "You", "must", "specify", "subnets", "from", "at", "least", "two", "Availability", "Zones", "NUMBER", "You", "can", "specify", "only", "one", "subnet", "per", "Availability", "Zone", "NUMBER", "You", "must", "specify", "either", "subnets", "or", "subnet", "mappings", "NUMBER", "The", "load", "balancer", "be", "allocated", "one", "static", "IP", "address", "per", "subnet", "NUMBER", "You", "cannot", "specify", "your", "own", "Elastic", "IP", "address", "NUMBER", "dict", "Information", "about", "a", "subnet", "mapping", "NUMBER", "SubnetId", "string", "The", "ID", "of", "the", "subnet", "NUMBER", "AllocationId", "string", "Network", "Load", "Balancers", "The", "allocation", "ID", "of", "the", "Elastic", "IP", "address", "NUMBER", "I", "m", "use", "boto", "NUMBER", "to", "deploy", "spot", "instances", "NUMBER", "My", "request", "be", "expired", "after", "period", "of", "time", "as", "I", "defined", "NUMBER", "When", "the", "request", "expires", "I", "like", "the", "machine", "to", "be", "terminated", "NUMBER", "I", "m", "creating", "my", "spot", "instances", "use", "this", "request", "client", "boto", "NUMBER", "client", "ec", "NUMBER", "region_name", "regions", "idx", "NUMBER", "client", "NUMBER", "request_spot_instances", "DryRun", "False", "SpotPrice", "price_bids", "InstanceCount", "number_of_instances_to_deploy", "LaunchSpecification", "ImageId", "amis_id", "idx", "KeyName", "MyKey", "SecurityGroups", "SG", "InstanceType", "machine_type", "Placement", "AvailabilityZone", "regions", "idx", "ValidUntil", "new_date", "Is", "there", "a", "parameter", "that", "I", "can", "pass", "that", "will", "terminate", "my", "machines", "when", "the", "request", "expires", "Here", "be", "literally", "what", "I", "m", "executing", "transfer_cfg", "TransferConfig", "multipart_threshold", "chunkthreshold", "multipart_chunksize", "chunksize", "max_concurrency", "maxthreads", "sf", "here", "be", "syncfile", "and", "self", "NUMBER", "ept", "NUMBER", "key", "be", "the", "key", "name", "bucket", "NUMBER", "upload_fileobj", "sf", "self", "NUMBER", "ept", "NUMBER", "key", "Callback", "cback", "Config", "transfer_cfg", "DEBUG", "output", "some", "be", "my", "statements", "interspersed", "in", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Uploading", "NUMBER", "bytes", "of", "c", "at", "byte", "offset", "NUMBER", "to", "bucket", "alex", "with", "key", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Multipart", "info", "threshold", "NUMBER", "bytes", "chunksize", "NUMBER", "bytes", "max_concurrency", "NUMBER", "threads", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "new", "HTTP", "connection", "NUMBER", "node", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "new", "HTTP", "connection", "NUMBER", "node", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "new", "HTTP", "connection", "NUMBER", "node", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "new", "HTTP", "connection", "NUMBER", "node", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "new", "HTTP", "connection", "NUMBER", "node", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "new", "HTTP", "connection", "NUMBER", "node", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "new", "HTTP", "connection", "NUMBER", "node", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "new", "HTTP", "connection", "NUMBER", "node", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "new", "HTTP", "connection", "NUMBER", "node", "EDIT", "I", "edit", "out", "the", "hostname", "in", "the", "above", "node", "a", "Dell", "ECS", "server", "But", "boto", "NUMBER", "seems", "to", "never", "want", "to", "spawn", "more", "than", "NUMBER", "threads", "even", "though", "I", "set", "max_concurrency", "to", "NUMBER", "or", "NUMBER", "NUMBER", "I", "have", "tried", "uploading", "file", "sizes", "of", "NUMBER", "GB", "NUMBER", "GB", "NUMBER", "GB", "and", "always", "see", "NUMBER", "multipart", "worker", "threads", "NUMBER", "What", "be", "I", "doing", "wrong", "Mea", "culpa", "then", "NUMBER", "I", "just", "assumed", "the", "NUMBER", "connections", "were", "part", "of", "the", "thread", "pooling", "logic", "NUMBER", "That", "was", "presumptuous", "on", "my", "part", "NUMBER", "Sorry", "bout", "that", "NUMBER", "I", "guess", "my", "logging", "be", "good", "enough", "then", "NUMBER", "Hello", "I", "be", "pretty", "new", "with", "python", "NUMBER", "I", "be", "use", "python", "NUMBER", "which", "I", "thought", "boto", "NUMBER", "was", "compatible", "with", "NUMBER", "I", "be", "get", "this", "error", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "application", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "import", "boto", "NUMBER", "File", "Users", "noahbragg", "Library", "Python", "NUMBER", "lib", "python", "site", "package", "boto", "NUMBER", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "boto", "NUMBER", "session", "import", "Session", "File", "Users", "noahbragg", "Library", "Python", "NUMBER", "lib", "python", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "import", "botocore", "NUMBER", "session", "File", "Users", "noahbragg", "Library", "Python", "NUMBER", "lib", "python", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "import", "botocore", "NUMBER", "credentials", "File", "Users", "noahbragg", "Library", "Python", "NUMBER", "lib", "python", "site", "package", "botocore", "credentials", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "dateutil", "NUMBER", "parser", "import", "parse", "ModuleNotFoundError", "No", "module", "named", "dateutil", "When", "I", "try", "to", "run", "the", "python", "application", "NUMBER", "I", "be", "use", "pip", "NUMBER", "and", "pip", "NUMBER", "freeze", "shows", "that", "I", "do", "have", "boto", "NUMBER", "install", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "certifi", "NUMBER", "chardet", "NUMBER", "click", "NUMBER", "docutils", "NUMBER", "Flask", "NUMBER", "Flask", "Session", "NUMBER", "idna", "NUMBER", "itsdangerous", "NUMBER", "Jinja", "NUMBER", "NUMBER", "jmespath", "NUMBER", "MarkupSafe", "NUMBER", "python", "dateutil", "NUMBER", "request", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "six", "NUMBER", "stripe", "NUMBER", "urllib", "NUMBER", "NUMBER", "Werkzeug", "NUMBER", "I", "import", "boto", "NUMBER", "into", "my", "python", "file", "like", "normal", "NUMBER", "I", "m", "wondering", "if", "this", "be", "an", "issue", "because", "I", "be", "use", "python", "NUMBER", "or", "because", "i", "be", "use", "the", "latest", "of", "boto", "NUMBER", "Any", "help", "would", "be", "appreciated", "Thanks", "Boto", "NUMBER", "be", "most", "definitely", "Python", "NUMBER", "compatible", "NUMBER", "It", "looks", "to", "me", "like", "this", "error", "comes", "from", "not", "importing", "dateutil", "and", "doesn", "t", "have", "to", "do", "with", "boto", "NUMBER", "If", "you", "re", "still", "not", "sure", "you", "can", "paste", "some", "code", "here", "that", "would", "be", "helpful", "NUMBER", "michellemurrain", "thanks", "for", "the", "reply", "NUMBER", "python", "from", "flask", "import", "Flask", "request", "session", "jsonify", "import", "boto", "NUMBER", "import", "stripe", "import", "smtplib", "from", "email", "NUMBER", "mime", "NUMBER", "text", "import", "MIMEText", "from", "validate_email", "import", "validate_email", "Those", "be", "my", "imports", "NUMBER", "the", "application", "runs", "fine", "when", "i", "remove", "the", "boto", "NUMBER", "import", "but", "i", "get", "the", "error", "when", "i", "add", "it", "NUMBER", "I", "tried", "installing", "python", "dateutil", "as", "this", "link", "suggests", "LINK", "no", "module", "named", "dateutil", "parser", "and", "it", "said", "it", "was", "already", "install", "I", "don", "t", "have", "to", "import", "dateutil", "as", "well", "do", "I", "It", "looks", "like", "boto", "NUMBER", "requires", "dateutil", "correct", "OK", "so", "looking", "at", "your", "error", "more", "closely", "it", "seems", "that", "the", "error", "actually", "has", "to", "do", "with", "botocore", "not", "boto", "NUMBER", "And", "botocore", "do", "require", "dateutil", "NUMBER", "But", "theoretically", "if", "you", "install", "boto", "NUMBER", "use", "pip", "it", "should", "have", "install", "all", "of", "the", "dependencies", "for", "you", "including", "dateutil", "NUMBER", "But", "you", "might", "get", "around", "this", "by", "just", "trying", "pip", "install", "dateutil", "and", "see", "if", "that", "works", "NUMBER", "I", "did", "it", "for", "pip", "NUMBER", "and", "python", "NUMBER", "For", "pip", "NUMBER", "it", "points", "to", "usr", "local", "bin", "pip", "NUMBER", "and", "python", "NUMBER", "points", "to", "usr", "local", "bin", "python", "NUMBER", "when", "doing", "pip", "NUMBER", "install", "dateutil", "I", "get", "Could", "not", "find", "a", "version", "that", "satisfies", "the", "requirement", "dateutil", "from", "version", "No", "matching", "distribution", "find", "for", "dateutil", "I", "think", "the", "library", "be", "call", "python", "dateutil", "and", "thats", "why", "that", "error", "be", "come", "up", "but", "when", "I", "install", "python", "dateutil", "it", "says", "it", "be", "already", "install", "I", "be", "on", "OSX", "The", "output", "was", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "bin", "python", "NUMBER", "I", "thought", "I", "was", "use", "homebrew", "s", "python", "NUMBER", "Is", "there", "any", "other", "way", "to", "check", "Yeah", "pip", "NUMBER", "seems", "to", "be", "point", "to", "the", "right", "python", "because", "the", "other", "libraries", "I", "have", "include", "have", "be", "work", "so", "far", "NUMBER", "I", "m", "not", "sure", "why", "else", "it", "wouldn", "t", "be", "work", "NUMBER", "Thanks", "for", "the", "guide", "NUMBER", "I", "have", "use", "virtualenv", "a", "little", "bit", "for", "AWS", "NUMBER", "I", "will", "look", "more", "into", "it", "NUMBER", "Thanks", "NUMBER", "The", "following", "code", "client", "boto", "NUMBER", "client", "s", "NUMBER", "aws_access_key_id", "AKIA", "NUMBER", "aws_secret_access_key", "aws_session_token", "True", "client", "NUMBER", "put_object", "Bucket", "bucket", "Key", "filename", "Body", "open", "tmp_file_name", "r", "Metadata", "a", "b", "Crashes", "with", "Metadata", "a", "b", "TypeError", "Unicode", "objects", "must", "be", "encoded", "before", "hashing", "On", "the", "other", "hand", "use", "a", "Resource", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "aws_access_key_id", "AKIA", "NUMBER", "aws_secret_access_key", "m", "twhd", "NUMBER", "ow", "NUMBER", "aRuf", "gjQcL", "NUMBER", "gu", "bS", "NUMBER", "Y", "NUMBER", "tAVjcTe", "NUMBER", "ai", "aws_session_token", "True", "my_bucket", "s", "NUMBER", "Bucket", "input_bucket", "upfile", "my_bucket", "NUMBER", "Object", "filename", "meta", "a", "b", "upfile", "NUMBER", "upload_file", "tmp_file_name", "ExtraArgs", "Metadata", "meta", "crashes", "with", "ExtraArgs", "Metadata", "meta", "AttributeError", "bool", "object", "has", "no", "attribute", "split", "same", "with", "s", "NUMBER", "Object", "input_bucket", "filename", "NUMBER", "put", "Body", "hello", "world", "Metadata", "foo", "bar", "I", "m", "pretty", "sure", "I", "m", "not", "doing", "things", "wrong", "could", "be", "though", "but", "be", "there", "a", "chance", "that", "could", "come", "from", "your", "end", "I", "m", "calling", "get_metric_statistics", "to", "retrieve", "the", "CPUUtilization", "of", "multiple", "EC", "NUMBER", "instances", "that", "I", "have", "based", "on", "the", "instance", "id", "but", "the", "results", "be", "tied", "together", "and", "I", "can", "t", "differentiate", "between", "them", "Is", "there", "a", "way", "to", "have", "the", "instance", "id", "be", "returned", "in", "the", "payload", "with", "each", "datapoint", "I", "m", "doing", "this", "to", "optimize", "the", "program", "that", "retrieves", "the", "metrics", "and", "do", "them", "in", "a", "batch", "approach", "rather", "than", "one", "by", "one", "NUMBER", "This", "be", "the", "call", "I", "m", "make", "data", "cloudwatch", "NUMBER", "get_metric_statistics", "Namespace", "AWS", "EC", "NUMBER", "MetricName", "CPUUtilization", "Period", "NUMBER", "StartTime", "start_time", "EndTime", "end_time", "Statistics", "Average", "Dimensions", "Name", "InstanceId", "Value", "u", "i", "yyyy", "Name", "InstanceId", "Value", "u", "i", "xxxx", "Thanks", "I", "ll", "move", "my", "question", "there", "NUMBER", "Give", "a", "lambda", "that", "returns", "a", "JSON", "with", "ints", "and", "run", "resp", "lambda_client", "NUMBER", "invoke", "NUMBER", "json_text", "resp", "Payload", "NUMBER", "read", "json_text", "store", "the", "ints", "as", "floats", "NUMBER", "i", "NUMBER", "e", "NUMBER", "turns", "to", "NUMBER", "This", "be", "especially", "problematic", "it", "one", "wants", "to", "store", "the", "data", "in", "dynamodb", "which", "do", "not", "support", "storing", "floats", "NUMBER", "My", "application", "was", "happily", "creating", "presigned", "urls", "for", "cloudfront", "NUMBER", "I", "change", "it", "so", "that", "the", "file", "in", "S", "NUMBER", "be", "now", "sse", "kms", "encrypted", "Despite", "much", "searching", "I", "cannot", "find", "the", "incantation", "to", "create", "a", "sign", "url", "for", "cloudfront", "for", "accessing", "these", "sse", "kms", "file", "NUMBER", "Can", "anyone", "point", "me", "in", "the", "right", "direction", "Any", "documentation", "anywhere", "saying", "how", "to", "do", "this", "thanks", "Python", "version", "NUMBER", "Boto", "NUMBER", "version", "NUMBER", "The", "docs", "say", "Source", "string", "The", "parameter", "types", "to", "return", "NUMBER", "Default", "All", "parameter", "types", "returned", "Valid", "Values", "user", "system", "engine", "default", "But", "if", "you", "run", "the", "following", "python", "group_info", "client", "NUMBER", "describe_db_parameters", "DBParameterGroupName", "a_group_with_user_params_set", "print", "group_info", "The", "user", "set", "params", "be", "not", "returned", "NUMBER", "The", "following", "code", "returns", "those", "parameters", "only", "python", "group_info", "client", "NUMBER", "describe_db_parameters", "DBParameterGroupName", "a_group_with_user_params_set", "Source", "user", "print", "group_info", "python", "self", "NUMBER", "source_session", "boto", "NUMBER", "session", "NUMBER", "Session", "profile_name", "account", "NUMBER", "self", "NUMBER", "source_conn", "self", "NUMBER", "source_session", "NUMBER", "resource", "s", "NUMBER", "self", "NUMBER", "src_conn", "self", "NUMBER", "source_session", "NUMBER", "client", "s", "NUMBER", "self", "NUMBER", "dest_session", "boto", "NUMBER", "session", "NUMBER", "Session", "profile_name", "account", "NUMBER", "self", "NUMBER", "dest_conn", "self", "NUMBER", "dest_session", "NUMBER", "client", "s", "NUMBER", "k", "self", "NUMBER", "source_conn", "NUMBER", "Object", "srcBucketName", "key_name", "print", "copy", "k", "NUMBER", "key", "copy_source", "Bucket", "srcBucketName", "Key", "k", "NUMBER", "key", "self", "NUMBER", "dest_conn", "NUMBER", "copy", "copy_source", "dstBucketName", "k", "NUMBER", "key", "SourceClient", "self", "NUMBER", "src_con", "Error", "ClientError", "An", "error", "occur", "AccessDenied", "when", "calling", "the", "CopyObject", "operation", "Access", "Denied", "Can", "you", "provide", "example", "of", "copy", "command", "to", "use", "two", "main", "clients", "Thanks", "NUMBER", "get", "it", "NUMBER", "s", "NUMBER", "_copy", "only", "work", "if", "both", "buckets", "can", "access", "with", "single", "key", "NUMBER", "I", "modify", "my", "script", "to", "download", "and", "copy", "instead", "of", "copy", "from", "bucket", "to", "bucket", "NUMBER", "I", "be", "use", "the", "Waiter", "interface", "to", "wait", "on", "a", "cluster", "deletion", "and", "even", "specify", "explicitly", "the", "Delay", "to", "be", "reasonably", "low", "without", "hammering", "the", "API", "I", "have", "notice", "that", "the", "waiter", "waits", "a", "long", "time", "even", "after", "the", "stack", "be", "delete", "relatively", "quickly", "NUMBER", "Here", "be", "a", "snippet", "of", "the", "code", "in", "__init__", "self", "NUMBER", "_client", "boto", "NUMBER", "client", "cloudformation", "NUMBER", "def", "delete", "self", "retries", "NUMBER", "self", "NUMBER", "_client", "NUMBER", "delete_stack", "StackName", "self", "NUMBER", "name", "waiter", "self", "NUMBER", "_client", "NUMBER", "get_waiter", "stack_delete_complete", "while", "retries", "NUMBER", "try", "Checks", "every", "NUMBER", "seconds", "for", "at", "most", "NUMBER", "minutes", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "attempts", "waiter", "NUMBER", "wait", "StackName", "self", "NUMBER", "name", "WaiterConfig", "Delay", "NUMBER", "MaxAttemps", "NUMBER", "except", "retries", "NUMBER", "if", "retries", "NUMBER", "return", "False", "return", "True", "I", "would", "expect", "at", "most", "to", "wait", "NUMBER", "seconds", "after", "the", "stack", "disappears", "in", "the", "CFn", "console", "however", "it", "takes", "sometimes", "a", "few", "minutes", "for", "this", "to", "return", "NUMBER", "Looking", "at", "the", "code", "the", "sleep", "be", "actually", "invoked", "with", "the", "Delay", "value", "so", "it", "s", "not", "obvious", "at", "first", "sight", "what", "might", "go", "wrong", "maybe", "the", "state", "of", "the", "waiter", "be", "not", "update", "as", "regularly", "These", "be", "the", "state", "that", "it", "waits", "for", "before", "returning", "LINK", "NUMBER", "NUMBER", "waiters", "NUMBER", "json", "L", "NUMBER", "L", "NUMBER", "The", "best", "way", "to", "verify", "what", "s", "going", "on", "be", "to", "enable", "debug", "logs", "and", "see", "what", "the", "service", "be", "returning", "NUMBER", "You", "can", "do", "this", "by", "setting", "boto", "NUMBER", "set_stream_logger", "at", "the", "top", "of", "your", "code", "snippet", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "more", "question", "NUMBER", "Thanks", "for", "the", "pointer", "to", "enable", "debug", "logs", "it", "seems", "pretty", "clear", "by", "parsing", "those", "that", "the", "waiter", "misses", "the", "state", "transition", "and", "then", "the", "Stack", "do", "not", "exist", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "parsers", "NUMBER", "Response", "body", "b", "TAG", "n", "TAG", "n", "TAG", "Sender", "TAG", "n", "TAG", "ValidationError", "TAG", "n", "TAG", "Stack", "with", "id", "sentinel", "redis", "test", "do", "not", "exist", "TAG", "n", "TAG", "n", "TAG", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "fc", "NUMBER", "ba", "TAG", "n", "TAG", "n", "However", "the", "Waiter", "keep", "retrying", "the", "call", "and", "in", "fact", "it", "even", "triggers", "API", "throttling", "NUMBER", "IMO", "the", "fix", "be", "pretty", "simple", "it", "should", "check", "for", "that", "error", "response", "as", "an", "expected", "alternative", "to", "the", "state", "transition", "NUMBER", "I", "m", "happy", "to", "craft", "a", "PR", "for", "that", "if", "appropriate", "would", "you", "like", "me", "to", "do", "so", "Thanks", "yes", "that", "one", "in", "my", "comment", "was", "just", "a", "snippet", "from", "the", "logs", "there", "were", "literally", "hundreds", "of", "calls", "with", "the", "same", "error", "but", "none", "triggered", "the", "waiter", "to", "return", "NUMBER", "I", "suspect", "but", "haven", "t", "looked", "at", "the", "code", "recently", "that", "the", "termination", "be", "triggered", "by", "an", "exception", "but", "it", "do", "not", "parse", "maybe", "the", "response", "for", "an", "ERROR", "clause", "Hello", "According", "to", "the", "documentation", "present", "here", "LINK", "EC", "NUMBER", "Client", "NUMBER", "describe_addresses", "NUMBER", "There", "should", "be", "a", "filter", "public", "ip", "which", "filters", "instances", "with", "ip", "address", "NUMBER", "But", "it", "doesn", "t", "work", "for", "me", "NUMBER", "I", "install", "the", "latest", "boto", "NUMBER", "from", "pip", "not", "use", "git", "head", "NUMBER", "Here", "s", "a", "snippet", "ec", "NUMBER", "boto", "NUMBER", "client", "ec", "NUMBER", "result", "ec", "NUMBER", "describe_instances", "Filters", "Name", "public", "ip", "Values", "ip", "I", "get", "the", "following", "error", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "script", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "result", "ec", "NUMBER", "describe_instances", "Filters", "Name", "public", "ip", "Values", "ip", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "error_class", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidParameterValue", "when", "calling", "the", "DescribeInstances", "operation", "The", "filter", "public", "ip", "be", "invalid", "Thanks", "NUMBER", "It", "was", "my", "bad", "NUMBER", "network", "interface", "NUMBER", "address", "NUMBER", "association", "NUMBER", "public", "ip", "be", "the", "filter", "name", "for", "public", "ip", "NUMBER", "when", "use", "boto", "NUMBER", "version", "NUMBER", "on", "Ubuntu", "NUMBER", "If", "I", "try", "to", "upload", "a", "file", "with", "user", "supplied", "metadata", "that", "be", "non", "conformant", "I", "get", "an", "error", "message", "back", "that", "indicates", "a", "different", "problem", "S", "NUMBER", "UploadFailedError", "Failed", "to", "upload", "X", "NUMBER", "zip", "to", "X", "Xzip", "An", "error", "occur", "SignatureDoesNotMatch", "when", "calling", "the", "CreateMultipartUpload", "operation", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "key", "and", "signing", "method", "NUMBER", "To", "reproduce", "this", "import", "boto", "NUMBER", "s", "NUMBER", "_bucket", "bucket_name", "s", "NUMBER", "_key", "key_name", "filename", "file_to_upload", "s", "NUMBER", "_client", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "_client", "NUMBER", "Bucket", "s", "NUMBER", "_bucket", "obj", "bucket", "NUMBER", "Object", "s", "NUMBER", "_key", "metadata", "key", "NUMBER", "Value", "NUMBER", "KEY", "NUMBER", "Value", "NUMBER", "obj", "NUMBER", "upload_file", "filename", "ExtraArgs", "Metadata", "metadata", "Since", "S", "NUMBER", "metadata", "keys", "be", "all", "lowercase", "the", "above", "metadata", "results", "in", "only", "one", "key", "on", "the", "S", "NUMBER", "side", "NUMBER", "That", "be", "why", "the", "signatures", "don", "t", "match", "NUMBER", "It", "would", "be", "clearer", "if", "maybe", "after", "the", "error", "be", "returned", "boto", "NUMBER", "checks", "the", "metadata", "it", "use", "for", "case", "collisions", "and", "report", "this", "to", "the", "user", "as", "well", "NUMBER", "When", "calling", "create_configuration_set_tracking_options", "LINK", "SES", "NUMBER", "Client", "NUMBER", "create_configuration_set_tracking_options", "in", "NUMBER", "I", "get", "the", "following", "error", "SES", "object", "has", "no", "attribute", "create_configuration_set_tracking_options", "As", "I", "m", "able", "to", "call", "similar", "methods", "on", "the", "client", "such", "as", "create_configuration_set_event_destination", "I", "can", "only", "think", "this", "means", "the", "function", "hasn", "t", "yet", "be", "add", "NUMBER", "Is", "this", "definitely", "available", "under", "NUMBER", "in", "line", "with", "the", "docs", "Thanks", "Kyle", "NUMBER", "I", "m", "get", "the", "error", "in", "AWS", "Lambda", "presumably", "that", "s", "run", "the", "latest", "version", "of", "core", "Do", "you", "have", "any", "guidance", "on", "how", "to", "check", "that", "Lambda", "typically", "lags", "a", "few", "version", "behind", "the", "latest", "NUMBER", "I", "d", "recommend", "including", "boto", "NUMBER", "botocore", "in", "your", "deployment", "package", "to", "ensure", "you", "don", "t", "run", "into", "these", "issue", "NUMBER", "We", "ll", "take", "a", "look", "at", "improving", "our", "docs", "to", "make", "it", "more", "clear", "which", "version", "of", "botocore", "be", "required", "NUMBER", "I", "m", "hitting", "an", "AWS", "limitation", "where", "I", "believe", "it", "only", "allows", "you", "to", "import", "a", "swagger", "file", "if", "it", "has", "NUMBER", "or", "less", "APIs", "NUMBER", "The", "following", "be", "what", "I", "see", "botocore", "NUMBER", "errorfactory", "NUMBER", "LimitExceededException", "An", "error", "occur", "LimitExceededException", "when", "calling", "the", "ImportRestApi", "operation", "reached", "max", "retries", "NUMBER", "Maximum", "number", "of", "Resources", "for", "this", "API", "has", "be", "reached", "NUMBER", "Please", "contact", "AWS", "if", "you", "need", "additional", "Resources", "NUMBER", "If", "I", "tweak", "the", "swagger", "to", "only", "have", "NUMBER", "APIs", "works", "NUMBER", "I", "saw", "other", "posts", "saying", "people", "can", "try", "adjusting", "the", "_retry", "NUMBER", "json", "but", "I", "don", "t", "think", "that", "will", "work", "since", "this", "be", "a", "single", "call", "with", "multiple", "API", "in", "the", "swagger", "to", "import", "NUMBER", "This", "be", "probably", "a", "feature", "request", "but", "was", "hoping", "there", "might", "be", "an", "alternative", "to", "make", "it", "work", "NUMBER", "Thanks", "According", "to", "the", "recent", "AWS", "API", "documentation", "it", "be", "possible", "to", "send", "notifications", "to", "SNS", "channel", "here", "LINK", "_NotificationReceptorAPI_SNSTransportArticle", "NUMBER", "html", "NUMBER", "But", "mturk", "client", "in", "Boto", "NUMBER", "allows", "only", "to", "send", "test", "notifications", "either", "via", "e", "mail", "or", "to", "SQS", "NUMBER", "Can", "something", "be", "do", "in", "order", "to", "correct", "this", "well", "in", "Stable", "version", "of", "docs", "only", "SQS", "Email", "be", "available", "as", "an", "option", "NUMBER", "anyway", "you", "were", "right", "upgrading", "to", "NUMBER", "helps", "NUMBER", "Thanks", "Python", "NUMBER", "Boto", "NUMBER", "Boto", "NUMBER", "NUMBER", "Botocore", "NUMBER", "_", "Query", "String", "Request", "Authentication", "Alternative", "LINK", "RESTAuthenticationQueryStringAuth", "_", "specifies", "the", "format", "of", "the", "StringToSign", "that", "might", "be", "followed", "to", "create", "a", "signature", "of", "the", "pre", "sign", "url", "NUMBER", "Namely", "Signature", "URL", "Encode", "Base", "NUMBER", "HMAC", "SHA", "NUMBER", "YourSecretAccessKeyID", "UTF", "NUMBER", "Encoding", "Of", "StringToSign", "StringToSign", "HTTP", "VERB", "n", "Content", "MD", "NUMBER", "n", "Content", "Type", "n", "Expires", "n", "CanonicalizedAmzHeaders", "CanonicalizedResource", "The", "use", "case", "be", "to", "be", "able", "to", "provide", "a", "custom", "header", "like", "_Content", "MD", "NUMBER", "_", "to", "participate", "in", "signature", "construction", "NUMBER", "This", "be", "perfectly", "fine", "with", "the", "boto", "library", "python", "import", "boto", "s", "NUMBER", "use", "sigv", "NUMBER", "True", "boto", "NUMBER", "config", "NUMBER", "load_from_path", "NUMBER", "boto", "conn", "boto", "NUMBER", "connect_s", "NUMBER", "profile_name", "_profile_name_", "host", "s", "NUMBER", "amazonaws", "NUMBER", "com", "presigned_url", "conn", "NUMBER", "generate_url", "expires_in", "NUMBER", "method", "GET", "bucket", "_bucket_name_", "key", "_key_", "headers", "Content", "MD", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "f", "Seems", "like", "this", "same", "feature", "cannot", "be", "achieved", "with", "boto", "NUMBER", "Can", "this", "be", "confirmed", "and", "what", "be", "the", "reason", "behind", "degrading", "this", "feature", "from", "the", "new", "version", "of", "the", "library", "May", "it", "be", "expected", "to", "return", "in", "the", "future", "version", "I", "would", "rather", "we", "do", "keep", "separate", "flavors", "of", "the", "issue", "describe", "here", "NUMBER", "I", "specifically", "stressed", "out", "the", "possibility", "to", "have", "the", "signature", "be", "customized", "in", "terms", "of", "add", "additional", "components", "that", "participate", "in", "the", "process", "NUMBER", "Content", "MD", "NUMBER", "be", "describe", "as", "meaningless", "in", "the", "GET", "request", "do", "not", "disallow", "it", "to", "be", "present", "NUMBER", "After", "all", "empty", "value", "still", "gives", "you", "a", "hash", "albeit", "deterministic", "NUMBER", "The", "use", "case", "describe", "just", "brings", "up", "some", "additional", "custom", "contract", "to", "the", "process", "NUMBER", "If", "say", "Alice", "and", "Bob", "decide", "to", "include", "the", "custom", "header", "in", "the", "process", "of", "signing", "url", "request", "than", "Charlie", "be", "not", "a", "part", "of", "that", "contract", "will", "have", "an", "additional", "step", "to", "be", "able", "to", "get", "a", "pre", "sign", "url", "work", "for", "him", "NUMBER", "There", "be", "lots", "of", "scenarios", "that", "might", "be", "exampled", "here", "without", "stressing", "out", "a", "specific", "header", "NUMBER", "In", "the", "meantime", "other", "SDKs", "like", "AWS", "Java", "SDK", "and", "a", "hand", "code", "boto", "library", "do", "support", "that", "feature", "without", "violating", "any", "strict", "contract", "from", "the", "AWS", "Signing", "Interface", "NUMBER", "When", "I", "use", "Email", "as", "transport", "everything", "works", "perfectly", "NUMBER", "As", "soon", "as", "I", "choose", "SQS", "it", "fail", "even", "if", "the", "queue", "itself", "works", "properly", "NUMBER", "The", "code", "below", "rises", "the", "following", "error", "File", "Users", "chapkovski", "mynewotree", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Users", "chapkovski", "mynewotree", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "error_class", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InternalFailure", "when", "calling", "the", "SendTestEventNotification", "operation", "reached", "max", "retries", "NUMBER", "and", "here", "be", "the", "code", "endpoint_url", "LINK", "requester", "sandbox", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "client", "boto", "NUMBER", "client", "mturk", "endpoint_url", "endpoint_url", "sqs", "boto", "NUMBER", "resource", "sqs", "queue", "sqs", "NUMBER", "get_queue_by_name", "QueueName", "whatever", "NUMBER", "response", "client", "NUMBER", "send_test_event_notification", "Notification", "Destination", "queue", "NUMBER", "url", "Transport", "SQS", "Version", "NUMBER", "NUMBER", "NUMBER", "EventTypes", "Ping", "AssignmentReturned", "TestEventType", "AssignmentReturned", "Hello", "boto", "NUMBER", "community", "Every", "now", "and", "then", "we", "ll", "have", "one", "of", "our", "microservices", "run", "in", "ECS", "w", "a", "TaskARNRole", "fail", "to", "refresh", "credentials", "NUMBER", "When", "it", "hits", "this", "problem", "it", "continues", "to", "experience", "it", "over", "and", "over", "NUMBER", "Stopping", "the", "container", "and", "having", "ECS", "start", "up", "another", "one", "fix", "the", "issue", "for", "a", "while", "NUMBER", "However", "eventually", "it", "will", "hit", "that", "state", "NUMBER", "We", "decided", "to", "turn", "on", "some", "debug", "logs", "for", "boto", "NUMBER", "and", "find", "the", "following", "September", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "DEBUG", "Retrieved", "credentials", "will", "expire", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "pm", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fa", "NUMBER", "c", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "png", "It", "appears", "boto", "NUMBER", "be", "returning", "us", "IAM", "creds", "that", "have", "expired", "NUMBER", "minutes", "ago", "NUMBER", "We", "re", "seeing", "this", "pretty", "consistently", "NUMBER", "Checking", "on", "the", "server", "Amazon", "Linux", "AMI", "NUMBER", "the", "date", "be", "accurate", "NUMBER", "The", "server", "be", "run", "ntpd", "so", "we", "would", "expect", "time", "to", "stay", "sync", "d", "NUMBER", "SSH", "ing", "into", "the", "container", "and", "run", "date", "on", "there", "shows", "an", "accurate", "and", "synchronized", "timestamp", "as", "well", "NUMBER", "So", "what", "gives", "Why", "be", "boto", "NUMBER", "returning", "us", "credentials", "from", "the", "past", "Environment", "Details", "pip", "show", "boto", "NUMBER", "Name", "boto", "NUMBER", "Version", "NUMBER", "Summary", "The", "AWS", "SDK", "for", "Python", "Home", "page", "LINK", "Author", "Amazon", "Web", "Services", "Author", "email", "UNKNOWN", "License", "Apache", "License", "NUMBER", "Location", "usr", "local", "lib", "python", "NUMBER", "site", "package", "Requires", "s", "NUMBER", "transfer", "botocore", "jmespath", "docker", "info", "Server", "Version", "NUMBER", "ce", "Storage", "Driver", "overlay", "NUMBER", "Backing", "Filesystem", "extfs", "Supports", "d_type", "true", "Native", "Overlay", "Diff", "true", "Logging", "Driver", "json", "file", "Cgroup", "Driver", "cgroupfs", "Plugins", "Volume", "local", "Network", "bridge", "host", "macvlan", "null", "overlay", "Swarm", "inactive", "Runtimes", "runc", "Default", "Runtime", "runc", "Init", "Binary", "docker", "init", "containerd", "version", "NUMBER", "ab", "NUMBER", "febca", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "fcc", "runc", "version", "NUMBER", "cf", "NUMBER", "ad", "NUMBER", "b", "NUMBER", "dbcaa", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ddfe", "init", "version", "NUMBER", "e", "NUMBER", "fa", "Security", "Options", "seccomp", "Profile", "default", "Kernel", "Version", "NUMBER", "NUMBER", "amzn", "NUMBER", "x", "NUMBER", "_", "NUMBER", "Operating", "System", "Amazon", "Linux", "AMI", "NUMBER", "OSType", "linux", "Architecture", "x", "NUMBER", "_", "NUMBER", "CPUs", "NUMBER", "Total", "Memory", "NUMBER", "GiB", "Name", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ID", "SM", "NUMBER", "X", "REE", "NUMBER", "E", "NUMBER", "K", "EURA", "TSVA", "FTBC", "NUMBER", "CE", "NUMBER", "BUQ", "NUMBER", "BSJF", "LDVL", "UDNQ", "NUMBER", "P", "NUMBER", "C", "Docker", "Root", "Dir", "var", "lib", "docker", "Debug", "Mode", "client", "false", "Debug", "Mode", "server", "false", "Registry", "LINK", "Experimental", "false", "Insecure", "Registries", "NUMBER", "NUMBER", "Live", "Restore", "Enabled", "false", "Thanks", "NUMBER", "Just", "a", "thought", "but", "since", "we", "be", "use", "ECS", "and", "TaskARNRoles", "could", "the", "problem", "be", "relate", "to", "this", "issue", "LINK", "ecs", "agent", "issue", "NUMBER", "Yup", "NUMBER", "Just", "verify", "this", "only", "happens", "when", "the", "service", "be", "run", "on", "a", "container", "instance", "that", "has", "a", "disconnected", "agent", "NUMBER", "I", "can", "close", "this", "issue", "but", "this", "problem", "should", "be", "visible", "enough", "for", "everyone", "to", "see", "NUMBER", "I", "m", "not", "sure", "whether", "this", "be", "a", "bug", "a", "problem", "with", "the", "docs", "or", "something", "I", "m", "doing", "wrong", "but", "I", "m", "stuck", "and", "need", "guidance", "NUMBER", "The", "code", "below", "corresponds", "to", "what", "s", "in", "the", "documentation", "here", "LINK", "autoscaling", "NUMBER", "html", "ApplicationAutoScaling", "NUMBER", "Client", "NUMBER", "put_scaling_policy", "def", "auto_scale_dynamodb", "kwargs", "client", "boto", "NUMBER", "client", "application", "autoscaling", "policy", "kwargs", "table_name", "auto", "scaling", "resource", "table", "kwargs", "table_name", "response", "client", "NUMBER", "put_scaling_policy", "PolicyName", "policy", "ServiceNamespace", "dynamodb", "ResourceId", "resource", "ScalableDimension", "dynamodb", "table", "ReadCapacityUnits", "PolicyType", "TargetTrackingScaling", "TargetTrackingScalingPolicyConfiguration", "TargetValue", "NUMBER", "PredefinedMetricSpecification", "PredefinedMetricType", "DynamoDBReadCapacityUtilization", "ScaleOutCooldown", "NUMBER", "ScaleInCooldown", "NUMBER", "return", "But", "it", "throw", "this", "error", "Unknown", "parameter", "in", "input", "TargetTrackingScalingPolicyConfiguration", "must", "be", "one", "of", "PolicyName", "ServiceNamespace", "ResourceId", "ScalableDimension", "PolicyType", "StepScalingPolicyConfiguration", "The", "API", "docs", "LINK", "_PutScalingPolicy", "NUMBER", "html", "seem", "to", "agree", "with", "the", "boto", "NUMBER", "docs", "so", "I", "m", "not", "sure", "what", "s", "up", "NUMBER", "I", "ve", "googled", "around", "and", "find", "nothing", "NUMBER", "Suggestions", "FYI", "according", "to", "docs", "both", "Boto", "NUMBER", "and", "API", "Dynamodb", "doesn", "t", "have", "StepScalingPolicyConfiguration", "NUMBER", "Here", "s", "a", "quote", "For", "DynamoDB", "only", "TargetTrackingScaling", "be", "support", "NUMBER", "For", "any", "other", "service", "only", "StepScaling", "be", "support", "NUMBER", "Shouldn", "t", "TargetValue", "be", "between", "NUMBER", "and", "NUMBER", "ratio", "consumed", "provisioned", "capacity", "Edit", "checked", "and", "should", "be", "for", "instance", "NUMBER", "when", "you", "set", "it", "to", "NUMBER", "NUMBER", "That", "was", "it", "NUMBER", "Thanks", "Unless", "I", "m", "reading", "the", "docs", "and", "source", "wrong", "dynamo", "itself", "allows", "the", "BatchWriteItem", "call", "LINK", "_BatchWriteItem", "NUMBER", "html", "API_BatchWriteItem_RequestSyntax", "to", "take", "a", "ReturnConsumedCapacity", "keyword", "but", "BatchWriter", "NUMBER", "put_item", "doesn", "t", "allow", "that", "or", "any", "other", "keyword", "NUMBER", "Is", "there", "any", "way", "to", "find", "the", "consumed", "capacity", "of", "a", "batch_write", "The", "only", "thing", "I", "can", "think", "of", "be", "have", "the", "BatchWriter", "constructor", "take", "that", "optional", "keyword", "have", "the", "BatchWriter", "constructor", "initialize", "an", "attribute", "that", "will", "accumulate", "the", "returned", "capacities", "have", "the", "_flush", "call", "update", "that", "attribute", "have", "a", "new", "method", "on", "the", "BatchWriter", "object", "that", "returns", "the", "values", "that", "accumulated", "in", "that", "attribute", "Example", "LINK", "In", "particular", "LINK", "ElastiCache", "NUMBER", "Client", "NUMBER", "describe_replication_groups", "doesn", "t", "return", "any", "clusters", "that", "aren", "t", "currently", "listed", "available", "NUMBER", "This", "means", "I", "can", "t", "actually", "check", "and", "see", "if", "a", "cluster", "be", "be", "created", "be", "delete", "or", "in", "any", "state", "other", "than", "available", "NUMBER", "Which", "makes", "automation", "around", "Elasticache", "with", "boto", "NUMBER", "rather", "difficult", "NUMBER", "A", "more", "explicit", "example", "self", "NUMBER", "client", "NUMBER", "delete_replication_group", "ReplicationGroupId", "cache_name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "error_class", "parsed_response", "operation_name", "botocore", "NUMBER", "errorfactory", "NUMBER", "InvalidReplicationGroupStateFault", "An", "error", "occur", "InvalidReplicationGroupState", "when", "calling", "the", "DeleteReplicationGroup", "operation", "Replication", "group", "testrole", "NUMBER", "has", "status", "deleting", "which", "be", "not", "valid", "for", "deletion", "NUMBER", "But", "how", "would", "I", "know", "when", "a", "describe_replication_groups", "call", "returns", "nothing", "Closing", "due", "to", "inactivity", "NUMBER", "Context", "boto", "NUMBER", "NUMBER", "and", "botocore", "NUMBER", "install", "through", "pip", "on", "a", "EC", "NUMBER", "instance", "behind", "corporate", "proxies", "NUMBER", "The", "instance", "doesn", "t", "have", "direct", "access", "to", "the", "Internet", "NUMBER", "Environment", "variables", "i", "NUMBER", "e", "NUMBER", "http_proxy", "https_proxy", "etc", "NUMBER", "be", "properly", "configured", "NUMBER", "Issue", "when", "calling", "boto", "NUMBER", "client", "sts", "NUMBER", "assume_role_with_saml", "a", "POST", "request", "against", "the", "sts", "NUMBER", "amazonaws", "NUMBER", "com", "endpoint", "be", "do", "NUMBER", "This", "request", "ignores", "the", "proxies", "defined", "at", "environment", "level", "NUMBER", "If", "a", "proxy", "configuration", "be", "explicitly", "defined", "via", "the", "botocore", "NUMBER", "config", "NUMBER", "Config", "variable", "the", "request", "be", "correctly", "proxied", "and", "works", "fine", "NUMBER", "You", "find", "it", "attached", "NUMBER", "The", "STS", "call", "be", "do", "at", "the", "end", "of", "the", "SAML", "exchange", "and", "the", "execution", "be", "stuck", "on", "the", "last", "log", "entry", "NUMBER", "botocore_sts_proxy_issue_log", "NUMBER", "zip", "LINK", "_sts_proxy_issue_log", "NUMBER", "zip", "This", "do", "appear", "to", "be", "a", "bug", "although", "what", "I", "ve", "notice", "something", "odd", "in", "your", "debug", "log", "INFO", "urllib", "NUMBER", "connectionpool", "Starting", "new", "HTTPS", "connection", "NUMBER", "stripped", "NUMBER", "INFO", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "Starting", "new", "HTTPS", "connection", "NUMBER", "sts", "NUMBER", "amazonaws", "NUMBER", "com", "It", "appears", "that", "something", "be", "cause", "boto", "to", "pull", "from", "the", "unvendored", "and", "then", "the", "vendored", "library", "like", "that", "but", "I", "suspect", "it", "might", "be", "at", "the", "core", "of", "this", "issue", "NUMBER", "The", "sample", "code", "to", "reproduce", "the", "issue", "be", "the", "one", "describe", "in", "this", "post", "to", "implement", "federated", "API", "access", "LINK", "to", "implement", "federated", "api", "and", "cli", "access", "use", "saml", "NUMBER", "NUMBER", "and", "ad", "fs", "The", "only", "difference", "be", "the", "boto", "version", "that", "in", "my", "code", "was", "upgrade", "to", "boto", "NUMBER", "dstufft", "I", "suspect", "that", "the", "unvendored", "call", "of", "urllib", "NUMBER", "comes", "from", "the", "request", "module", "NUMBER", "joguSD", "Since", "I", "m", "in", "a", "federated", "login", "context", "I", "ve", "test", "this", "simple", "script", "python", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "profile_name", "s", "NUMBER", "session", "NUMBER", "client", "s", "NUMBER", "s", "NUMBER", "list_buckets", "Where", "the", "profile", "s", "credentials", "have", "be", "previously", "created", "in", "NUMBER", "aws", "credentials", "through", "a", "SAML", "exchange", "NUMBER", "It", "works", "fine", "and", "uses", "the", "environment", "proxy", "NUMBER", "The", "issue", "seems", "relate", "somehow", "with", "the", "request", "import", "after", "importing", "boto", "NUMBER", "I", "m", "having", "trouble", "reproducing", "this", "NUMBER", "Importing", "both", "request", "and", "boto", "NUMBER", "together", "will", "still", "allow", "me", "to", "make", "request", "through", "both", "that", "go", "through", "my", "proxy", "NUMBER", "giovadifiore", "How", "be", "you", "verifying", "that", "the", "traffic", "isn", "t", "use", "your", "proxy", "Attached", "there", "be", "the", "script", "that", "reproduces", "the", "issue", "NUMBER", "At", "lines", "NUMBER", "NUMBER", "NUMBER", "I", "ve", "commented", "the", "workaround", "implement", "for", "setting", "the", "proxy", "directly", "to", "the", "STS", "s", "client", "NUMBER", "At", "line", "NUMBER", "you", "must", "configure", "the", "URL", "of", "an", "ADFS", "IdP", "NUMBER", "saml", "proxy", "issue", "NUMBER", "zip", "LINK", "proxy", "issue", "NUMBER", "zip", "I", "ve", "played", "around", "with", "this", "some", "more", "and", "unfortunately", "I", "can", "t", "reproduce", "it", "NUMBER", "boto", "NUMBER", "will", "always", "pick", "up", "on", "my", "proxy", "set", "via", "an", "environment", "variable", "furthermore", "picking", "up", "on", "proxies", "from", "the", "environment", "comes", "from", "urllib", "so", "I", "m", "not", "sure", "if", "anything", "boto", "NUMBER", "specific", "be", "cause", "an", "issue", "here", "NUMBER", "Perhaps", "there", "s", "something", "strange", "with", "the", "environment", "setup", "you", "re", "run", "the", "code", "in", "NUMBER", "The", "last", "thing", "I", "can", "ask", "for", "be", "maybe", "TCP", "logs", "of", "the", "traffic", "when", "you", "run", "the", "script", "to", "ensure", "it", "s", "not", "attempting", "to", "use", "the", "proxy", "NUMBER", "I", "m", "not", "sure", "if", "you", "d", "be", "willing", "to", "provide", "those", "though", "NUMBER", "The", "problem", "I", "have", "with", "the", "boto", "NUMBER", "documentation", "can", "be", "find", "here", "LINK", "catch", "boto", "NUMBER", "error", "Am", "I", "doing", "this", "right", "Or", "what", "be", "best", "practice", "when", "dealing", "with", "boto", "NUMBER", "exception", "Can", "this", "be", "add", "to", "the", "wiki", "Yes", "I", "be", "talking", "about", "the", "errorfactory", "documentation", "NUMBER", "Thanks", "I", "had", "the", "same", "question", "until", "I", "realized", "that", "all", "service", "exception", "be", "tucked", "nicely", "in", "NUMBER", "exception", "of", "the", "resource", "client", "NUMBER", "For", "example", "if", "use", "iam", "service", "iam", "boto", "NUMBER", "client", "iam", "try", "response", "iam", "NUMBER", "create_role", "Path", "RoleName", "Elastic_Transcoder_Viewly_Role", "AssumeRolePolicyDocument", "trust_policy", "Description", "Default", "Role", "except", "iam", "NUMBER", "exception", "NUMBER", "EntityAlreadyExistsException", "pass", "I", "use", "this", "in", "the", "linked", "SO", "article", "NUMBER", "My", "issue", "be", "that", "I", "can", "t", "find", "an", "overview", "of", "what", "exception", "exist", "NUMBER", "Having", "the", "exception", "in", "NUMBER", "exception", "of", "the", "resource", "client", "be", "also", "not", "ideal", "when", "e", "NUMBER", "g", "NUMBER", "write", "test", "as", "you", "usually", "don", "t", "have", "the", "resource", "object", "available", "there", "NUMBER", "I", "spent", "a", "lot", "of", "time", "due", "to", "misinformation", "on", "the", "wiki", "page", "dealing", "with", "the", "sns", "clients", "publish", "API", "NUMBER", "the", "boto", "NUMBER", "SNS", "documentation", "of", "the", "publish", "function", "NUMBER", "be", "pretty", "confusing", "If", "you", "want", "to", "send", "the", "same", "message", "to", "all", "transport", "protocols", "include", "the", "text", "of", "the", "message", "as", "a", "String", "value", "NUMBER", "Wrong", "GCM", "a", "transport", "protocol", "that", "nearly", "all", "android", "devices", "use", "do", "not", "work", "this", "way", "Maybe", "this", "should", "be", "mention", "NUMBER", "If", "you", "want", "to", "send", "different", "message", "for", "each", "transport", "protocol", "set", "the", "value", "of", "the", "MessageStructure", "parameter", "to", "json", "and", "use", "a", "JSON", "object", "for", "the", "Message", "parameter", "NUMBER", "No", "you", "can", "t", "use", "a", "JSON", "object", "for", "the", "Message", "parameter", "NUMBER", "The", "parameter", "still", "needs", "to", "be", "a", "string", "object", "NUMBER", "But", "it", "needs", "to", "contain", "parsable", "JSON", "NUMBER", "This", "should", "be", "reworded", "NUMBER", "the", "value", "of", "the", "Message", "parameter", "must", "be", "a", "syntactically", "valid", "JSON", "object", "and", "contain", "at", "least", "a", "top", "level", "JSON", "key", "of", "default", "with", "a", "value", "that", "be", "a", "string", "NUMBER", "Neither", "point", "be", "true", "NUMBER", "Also", "the", "fact", "that", "you", "need", "another", "json", "NUMBER", "dumps", "within", "the", "JSON", "object", "be", "mention", "nowhere", "NUMBER", "A", "simple", "example", "like", "the", "one", "above", "would", "have", "helped", "wonders", "in", "that", "documentation", "NUMBER", "Could", "this", "be", "improved", "NUMBER", "LINK", "SNS", "NUMBER", "Client", "NUMBER", "publish", "Thanks", "for", "passing", "the", "feedback", "along", "NUMBER", "The", "management", "console", "now", "has", "a", "nice", "handy", "Description", "for", "security", "group", "NUMBER", "This", "be", "actually", "great", "for", "companies", "maintaining", "a", "very", "explicit", "whitelist", "and", "track", "them", "NUMBER", "It", "appear", "this", "get", "release", "on", "the", "management", "console", "but", "the", "documentation", "doesn", "t", "include", "new", "references", "to", "the", "field", "in", "Boto", "suggesting", "it", "hasn", "t", "be", "include", "yet", "NUMBER", "Screenshot", "example", "of", "field", "in", "the", "management", "console", "descriptionexample", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "bd", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "ed", "NUMBER", "fc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "PNG", "In", "test", "had", "find", "a", "client", "error", "ClientError", "as", "follows", "An", "error", "occur", "ValidationException", "when", "calling", "the", "BatchWriteItem", "operation", "One", "or", "more", "parameter", "values", "were", "invalid", "An", "AttributeValue", "may", "not", "contain", "an", "empty", "string", "However", "if", "I", "immediately", "put", "the", "same", "item", "via", "the", "regular", "put_item", "method", "it", "worked", "fine", "NUMBER", "I", "use", "the", "code", "straight", "out", "of", "the", "docs", "as", "follows", "Code", "python", "with", "ACCOUNTS_TABLE", "NUMBER", "batch_writer", "as", "batch", "for", "item", "in", "items", "try", "batch", "NUMBER", "put_item", "Item", "item", "except", "ClientError", "as", "e", "print", "e", "NUMBER", "message", "print", "item", "ACCOUNTS_TABLE", "NUMBER", "put_item", "Item", "item", "print", "successfully", "posted", "via", "regular", "put_item", "Output", "None", "An", "error", "occur", "ValidationException", "when", "calling", "the", "BatchWriteItem", "operation", "One", "or", "more", "parameter", "values", "were", "invalid", "An", "AttributeValue", "may", "not", "contain", "an", "empty", "string", "acc_short_name", "name", "account_id", "NUMBER", "secrets", "external_id_", "NUMBER", "randomstring", "external_id_", "NUMBER", "randomstring", "canonical_user_id", "randomstring", "environments", "null", "hub", "available_volumes_prune", "True", "regions", "us", "west", "NUMBER", "client", "client", "name", "listed", "True", "acc_description", "None", "successfully", "posted", "via", "regular", "put_item", "After", "turning", "on", "debug", "logging", "on", "botocore", "it", "turned", "out", "that", "in", "the", "background", "it", "was", "batching", "up", "all", "of", "the", "items", "and", "even", "though", "the", "error", "came", "up", "with", "this", "specific", "item", "it", "was", "actually", "a", "totally", "different", "item", "that", "in", "the", "batch", "that", "was", "cause", "the", "problem", "NUMBER", "Suggestion", "ClientError", "should", "have", "a", "two", "new", "attributes", "api_call", "or", "something", "like", "that", "details", "of", "what", "API", "and", "what", "method", "in", "the", "API", "was", "be", "invoked", "params", "a", "dictionary", "of", "the", "kwargs", "sent", "to", "the", "API", "Checking", "to", "see", "if", "an", "account", "that", "I", "know", "has", "and", "entitlement", "to", "centos", "through", "the", "api", "returns", "no", "dictionary", "key", "Entitlements", "Brief", "Code", "client", "session", "NUMBER", "client", "marketplace", "entitlement", "verify", "False", "entitlements", "client", "NUMBER", "get_entitlements", "ProductCode", "aw", "NUMBER", "evgkw", "NUMBER", "e", "NUMBER", "c", "NUMBER", "q", "NUMBER", "zgy", "NUMBER", "pjce", "pp", "NUMBER", "pprint", "entitlements", "Output", "ResponseMetadata", "HTTPHeaders", "cache", "control", "proxy", "revalidate", "connection", "Keep", "Alive", "content", "length", "NUMBER", "content", "type", "application", "x", "amz", "json", "NUMBER", "date", "Tue", "NUMBER", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "proxy", "connection", "Keep", "Alive", "x", "amzn", "requestid", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "NUMBER", "bed", "NUMBER", "da", "NUMBER", "a", "NUMBER", "f", "NUMBER", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "NUMBER", "bed", "NUMBER", "da", "NUMBER", "a", "NUMBER", "f", "NUMBER", "RetryAttempts", "NUMBER", "Versions", "of", "boto", "NUMBER", "and", "botocore", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "Closing", "due", "to", "inactivity", "NUMBER", "Please", "reopen", "if", "you", "be", "able", "to", "provide", "debug", "logs", "NUMBER", "Problem", "Most", "modern", "web", "browsers", "curl", "curl", "compressed", "LINK", "wget", "wget", "S", "header", "accept", "encoding", "gzip", "wordpress", "NUMBER", "com", "LINK", "and", "other", "tool", "will", "accept", "gzip", "encoded", "web", "data", "and", "transparently", "decompress", "it", "before", "it", "be", "use", "or", "write", "out", "NUMBER", "boto", "NUMBER", "has", "no", "build", "in", "functionality", "to", "do", "this", "NUMBER", "Proposed", "solution", "It", "would", "be", "helpful", "if", "boto", "NUMBER", "s", "download_file", "could", "transparently", "decompress", "any", "object", "stored", "with", "Content", "Encoding", "gzip", "metadata", "NUMBER", "This", "would", "obviate", "the", "need", "for", "downstream", "tool", "to", "navigate", "decompression", "with", "streams", "etc", "NUMBER", "If", "not", "the", "default", "perhaps", "an", "option", "could", "be", "pass", "to", "ExtraArgs", "to", "enable", "transparent", "gzip", "decompression", "NUMBER", "Having", "an", "option", "would", "be", "similar", "to", "a", "capable", "browser", "informing", "a", "server", "to", "send", "gzip", "via", "a", "header", "of", "Accept", "Encoding", "gzip", "NUMBER", "Since", "S", "NUMBER", "cannot", "set", "the", "encoding", "based", "on", "the", "Accept", "Encoding", "header", "sent", "it", "would", "be", "helpful", "if", "boto", "NUMBER", "could", "better", "handle", "common", "Content", "Encoding", "types", "NUMBER", "The", "gzip", "type", "seems", "like", "a", "reasonable", "place", "to", "start", "but", "perhaps", "download_file", "could", "accept", "an", "encoding", "handler", "as", "a", "kwarg", "to", "address", "various", "other", "content", "types", "NUMBER", "Along", "with", "transparent", "decompression", "during", "download", "it", "would", "be", "helpful", "to", "also", "specify", "an", "encoding", "handler", "for", "upload_file", "that", "would", "act", "prior", "to", "upload", "and", "set", "the", "ExtraArg", "ContentEncoding", "accordingly", "NUMBER", "I", "be", "use", "logging", "python", "package", "to", "log", "my", "error", "message", "import", "logging", "logging", "NUMBER", "basicConfig", "filename", "message", "NUMBER", "log", "level", "logging", "NUMBER", "INFO", "logging", "NUMBER", "info", "some", "message", "it", "be", "write", "my", "custom", "log", "message", "to", "message", "NUMBER", "log", "file", "work", "fine", "when", "I", "start", "use", "boto", "NUMBER", "SNS", "library", "when", "I", "publish", "message", "to", "SNS", "again", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "Starting", "new", "HTTPS", "connection", "NUMBER", "sns", "NUMBER", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "above", "extra", "line", "was", "write", "to", "message", "NUMBER", "log", "file", "automatically", "I", "think", "by", "default", "logging", "package", "add", "info", "message", "to", "message", "NUMBER", "log", "file", "correct", "me", "if", "I", "be", "wrong", "NUMBER", "Is", "it", "really", "info", "message", "be", "come", "from", "boto", "NUMBER", "SNS", "package", "if", "yes", "how", "to", "disable", "this", "info", "warning", "message", "that", "be", "come", "from", "boto", "NUMBER", "SNS", "package", "Thanks", "Looking", "at", "all", "documentation", "I", "couldn", "t", "find", "if", "boto", "NUMBER", "support", "creating", "Aurora", "postgresql", "compatible", "DB", "instance", "if", "not", "do", "we", "have", "any", "plan", "for", "that", "and", "could", "we", "have", "any", "other", "option", "to", "create", "such", "postgres", "compatible", "like", "aws", "cli", "Sorry", "if", "it", "s", "not", "appropriate", "for", "question", "here", "NUMBER", "Thanks", "NUMBER", "All", "Can", "we", "create", "a", "boto", "NUMBER", "convenience", "function", "that", "can", "sign", "HTTP", "request", "meant", "for", "deployed", "API", "gateway", "hosted", "customer", "endpoints", "protected", "by", "IAM", "This", "function", "would", "create", "a", "Sigv", "NUMBER", "signature", "for", "the", "request", "and", "enable", "it", "to", "be", "sent", "as", "describe", "in", "the", "documentation", "for", "IAM", "action", "execute", "api", "Invoke", "LINK", "gateway", "iam", "policy", "examples", "for", "api", "execution", "NUMBER", "html", "Hello", "SRP", "be", "not", "an", "easy", "thing", "to", "implement", "would", "it", "be", "possible", "to", "have", "functionality", "similar", "to", "the", "CognitoUser", "NUMBER", "authenticateUser", "ported", "to", "Boto", "NUMBER", "so", "that", "users", "do", "not", "need", "to", "use", "initiate_auth", "to", "handle", "the", "common", "scenario", "of", "username", "password", "authentication", "aws", "amazon", "cognito", "identity", "js", "CognitoUser", "NUMBER", "js", "LINK", "cognito", "identity", "js", "blob", "master", "src", "CognitoUser", "NUMBER", "js", "The", "Warrant", "package", "makes", "this", "capability", "available", "to", "users", "but", "may", "be", "incompatible", "for", "some", "customers", "due", "to", "GPLv", "NUMBER", "licensing", "LINK", "Can", "I", "please", "request", "that", "an", "authenticate_user", "or", "similar", "function", "be", "incorporated", "into", "the", "cognito", "idp", "client", "I", "would", "like", "to", "see", "an", "implementation", "as", "well", "but", "Warrant", "be", "Apache", "NUMBER", "licensed", "not", "GPLv", "NUMBER", "I", "don", "t", "know", "your", "particular", "project", "or", "legal", "needs", "jpbarto", "but", "I", "don", "t", "believe", "Apache", "NUMBER", "be", "infectious", "NUMBER", "It", "might", "be", "worth", "looking", "at", "the", "license", "again", "NUMBER", "Mrunion", "you", "be", "correct", "NUMBER", "Looking", "at", "the", "commit", "log", "it", "seems", "Warrant", "adopted", "Apache", "on", "NUMBER", "August", "so", "no", "longer", "GPLv", "NUMBER", "In", "the", "interests", "of", "simplicity", "and", "parity", "with", "the", "JS", "SDK", "I", "think", "the", "convenience", "function", "still", "makes", "sense", "but", "happy", "to", "yield", "to", "the", "wider", "community", "on", "this", "one", "NUMBER", "I", "agree", "that", "a", "convenience", "function", "would", "be", "the", "way", "to", "go", "NUMBER", "Doing", "a", "get", "with", "VersionId", "and", "then", "subsequent", "field", "access", "results", "in", "incorrect", "field", "since", "a", "load", "HEAD", "request", "be", "issue", "without", "the", "version", "id", "NUMBER", "The", "following", "be", "an", "excerpt", "from", "my", "test", "python", "def", "test_versioning", "self", "filename", "random_file_path", "payload_a", "hello", "world", "payload_b", "hello", "again", "version", "self", "NUMBER", "cloud_resource", "NUMBER", "BucketVersioning", "self", "NUMBER", "BUCKET", "NUMBER", "name", "version", "NUMBER", "put", "VersioningConfiguration", "Status", "Enabled", "obj_a", "self", "NUMBER", "cloud_bucket", "NUMBER", "Object", "filename", "obj_a", "NUMBER", "put", "Body", "payload_a", "etag_a", "obj_a", "NUMBER", "e_tag", "assert_that", "obj_a", "NUMBER", "get", "VersionId", "obj_a", "NUMBER", "version_id", "Body", "NUMBER", "read", "equal_to", "payload_a", "assert_that", "obj_a", "NUMBER", "e_tag", "equal_to", "etag_a", "obj_b", "self", "NUMBER", "cloud_bucket", "NUMBER", "Object", "filename", "obj_b", "NUMBER", "put", "Body", "payload_b", "etag_b", "obj_b", "NUMBER", "e_tag", "assert_that", "obj_b", "NUMBER", "get", "VersionId", "obj_b", "NUMBER", "version_id", "Body", "NUMBER", "read", "equal_to", "payload_b", "assert_that", "obj_b", "NUMBER", "e_tag", "equal_to", "etag_b", "assert_that", "obj_a", "NUMBER", "get", "VersionId", "obj_a", "NUMBER", "version_id", "Body", "NUMBER", "read", "equal_to", "payload_a", "Test", "fail", "at", "the", "next", "assert", "because", "reading", "e_tag", "triggers", "a", "load", "without", "VersionId", "assert_that", "obj_a", "NUMBER", "e_tag", "equal_to", "etag_a", "In", "general", "isn", "t", "this", "a", "race", "condition", "Why", "can", "t", "the", "field", "be", "filled", "in", "during", "the", "GET", "request", "why", "be", "another", "HEAD", "request", "issue", "Python", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "joguSD", "I", "don", "t", "mean", "a", "thread", "safety", "race", "condition", "I", "mean", "a", "bucket", "race", "condition", "NUMBER", "Assume", "that", "I", "have", "version", "disabled", "and", "I", "do", "a", "get", "on", "an", "object", "while", "someone", "else", "at", "the", "same", "time", "do", "a", "put", "NUMBER", "Because", "of", "the", "subsequent", "load", "the", "field", "that", "I", "read", "be", "going", "to", "be", "for", "the", "next", "object", "NUMBER", "In", "general", "this", "be", "fine", "if", "I", "were", "to", "explicitly", "do", "another", "get", "I", "know", "I", "might", "get", "something", "else", "but", "I", "don", "t", "know", "that", "accessing", "a", "field", "after", "a", "get", "means", "a", "reload", "gets", "triggered", "in", "the", "background", "python", "obj", "bucket", "NUMBER", "Object", "hello", "NUMBER", "txt", "resp", "obj", "NUMBER", "get", "do_something", "Someone", "update", "hello", "NUMBER", "txt", "in", "another", "program", "This", "next", "line", "will", "issue", "a", "load", "and", "read", "the", "e_tag", "of", "the", "new", "file", "and", "not", "the", "one", "i", "did", "get", "on", "NUMBER", "This", "be", "completely", "hidden", "by", "the", "library", "and", "instead", "it", "looks", "like", "I", "should", "only", "ever", "trust", "resp", "ETag", "print", "obj", "NUMBER", "e_tag", "In", "the", "console", "and", "credential", "report", "I", "can", "see", "the", "age", "of", "a", "password", "NUMBER", "It", "appears", "you", "be", "calculating", "this", "by", "use", "the", "lastModified", "timestamp", "of", "a", "LoginProfile", "object", "NUMBER", "If", "I", "inspect", "the", "calls", "in", "the", "console", "I", "can", "trace", "down", "to", "a", "timestamp", "in", "this", "data", "element", "which", "corresponds", "to", "the", "value", "in", "the", "column", "NUMBER", "When", "I", "use", "boto", "NUMBER", "in", "the", "following", "way", "import", "boto", "NUMBER", "iam", "boto", "NUMBER", "client", "iam", "iam", "NUMBER", "get_login_profile", "UserName", "some_user", "The", "response", "looks", "like", "this", "u", "LoginProfile", "u", "CreateDate", "datetime", "NUMBER", "datetime", "XXXX", "XX", "XX", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzlocal", "u", "PasswordResetRequired", "False", "u", "UserName", "XXXXXXXXX", "ResponseMetadata", "HTTPHeaders", "content", "length", "NUMBER", "content", "type", "text", "xml", "date", "Mon", "NUMBER", "Aug", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "x", "amzn", "requestid", "ec", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ee", "NUMBER", "NUMBER", "efed", "NUMBER", "HTTPStatusCode", "NUMBER", "RequestId", "ec", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ee", "NUMBER", "NUMBER", "efed", "NUMBER", "RetryAttempts", "NUMBER", "You", "will", "not", "that", "LastModified", "be", "not", "here", "so", "I", "cannot", "programmatically", "determine", "the", "age", "of", "someone", "s", "password", "NUMBER", "I", "d", "like", "to", "do", "this", "because", "we", "have", "a", "password", "expiration", "policy", "and", "I", "d", "like", "to", "let", "the", "user", "know", "NUMBER", "weeks", "before", "that", "their", "AWS", "password", "be", "expiring", "soon", "NUMBER", "FWIW", "it", "s", "not", "in", "the", "Java", "either", "LINK", "Or", "the", "raw", "API", "LINK", "_LoginProfile", "NUMBER", "html", "But", "it", "should", "be", "or", "at", "least", "some", "mechanism", "for", "determining", "the", "age", "of", "the", "password", "NUMBER", "ec", "NUMBER", "Waiter", "NUMBER", "ImageAvailable", "doesn", "t", "wait", "till", "image", "state", "be", "available", "for", "image", "in", "images", "Images", "print", "build", "image", "for", "s", "image", "Name", "instance", "buildinstance", "SharedServicesCreds", "image", "instance", "NUMBER", "NUMBER", "wait_until_running", "pp", "NUMBER", "pprint", "instance", "NUMBER", "NUMBER", "launch_time", "newimage", "instance", "NUMBER", "NUMBER", "create_image", "Name", "image", "Name", "pp", "NUMBER", "pprint", "newimage", "NUMBER", "ate", "wait_until_exits", "only", "checks", "that", "the", "image", "exists", "not", "that", "it", "be", "in", "state", "available", "newimage", "NUMBER", "wait_until_exists", "waiter", "sharedservicesec", "NUMBER", "client", "NUMBER", "get_waiter", "image_available", "waiter", "NUMBER", "wait", "ImageIds", "newimage", "NUMBER", "image_id", "pp", "NUMBER", "pprint", "newimage", "NUMBER", "ate", "build", "image", "for", "MY", "RHEL", "NUMBER", "INSTANCE", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzutc", "pending", "pending", "Yes", "that", "be", "exactly", "what", "I", "find", "after", "some", "experimenting", "NUMBER", "however", "this", "do", "not", "match", "the", "behavior", "of", "other", "waiters", "NUMBER", "The", "waiters", "for", "ec", "NUMBER", "instance", "work", "just", "fine", "NUMBER", "Perhaps", "the", "issue", "be", "what", "be", "be", "returned", "by", "ec", "NUMBER", "instance", "NUMBER", "create_image", "I", "be", "write", "this", "from", "my", "phone", "so", "I", "may", "not", "be", "exact", "in", "my", "detail", "so", "please", "forgive", "me", "ahead", "of", "time", "NUMBER", "So", "I", "read", "jogusd", "comment", "about", "my", "data", "be", "stale", "again", "NUMBER", "The", "data", "in", "newimage", "be", "indeed", "stale", "NUMBER", "This", "be", "also", "an", "issue", "as", "it", "do", "not", "match", "the", "same", "behavior", "as", "ec", "NUMBER", "instance", "which", "be", "update", "as", "can", "be", "seen", "in", "the", "instance", "NUMBER", "NUMBER", "wait_until_running", "Also", "the", "waiter", "immediately", "returns", "and", "the", "state", "of", "the", "image", "be", "still", "pending", "NUMBER", "I", "know", "this", "because", "the", "next", "line", "in", "the", "code", "that", "be", "not", "shown", "be", "instance", "NUMBER", "NUMBER", "terminate", "and", "that", "causes", "the", "image", "to", "fail", "because", "the", "instance", "be", "no", "longer", "available", "NUMBER", "I", "had", "to", "write", "a", "while", "loop", "that", "do", "an", "ec", "NUMBER", "describe_instances", "with", "a", "filter", "on", "ImageId", "that", "checks", "the", "state", "until", "it", "reaches", "available", "NUMBER", "Essentially", "I", "be", "doing", "what", "I", "expect", "the", "waiter", "to", "do", "NUMBER", "Would", "you", "like", "me", "to", "write", "some", "code", "to", "prove", "that", "the", "waiter", "be", "not", "work", "As", "a", "workaround", "for", "now", "you", "could", "manually", "refresh", "your", "resource", "after", "the", "waiter", "has", "ended", "NUMBER", "Silly", "question", "but", "how", "would", "I", "manually", "refresh", "the", "resource", "Simple", "code", "example", "would", "help", "I", "have", "a", "folder", "that", "contains", "some", "python", "scripts", "that", "use", "boto", "NUMBER", "I", "m", "going", "to", "put", "this", "folder", "on", "an", "EC", "NUMBER", "instance", "and", "run", "the", "scripts", "on", "it", "NUMBER", "However", "the", "EC", "NUMBER", "instance", "doesn", "t", "have", "boto", "NUMBER", "install", "NUMBER", "So", "I", "m", "thinking", "I", "can", "install", "boto", "NUMBER", "on", "my", "local", "desktop", "and", "then", "put", "everything", "that", "run", "boto", "NUMBER", "requires", "into", "the", "same", "folder", "as", "those", "python", "scripts", "so", "I", "can", "directly", "run", "them", "on", "the", "EC", "NUMBER", "instance", "without", "installing", "boto", "NUMBER", "Is", "there", "any", "way", "to", "do", "it", "Maybe", "you", "can", "use", "git", "clone", "the", "whole", "project", "in", "your", "own", "folder", "and", "then", "import", "boto", "NUMBER", "client", "or", "boto", "NUMBER", "resource", "from", "boto", "NUMBER", "LINK", "__init__", "NUMBER", "py", "NUMBER", "But", "why", "not", "you", "use", "docker", "Build", "once", "and", "run", "everywhere", "be", "exactly", "what", "docker", "be", "use", "for", "NUMBER", "And", "more", "boto", "NUMBER", "depends", "on", "some", "other", "third", "party", "package", "too", "even", "you", "could", "git", "clone", "boto", "NUMBER", "would", "you", "git", "clone", "all", "dependencies", "So", "just", "use", "docker", "it", "be", "cooler", "NUMBER", "Docker", "be", "not", "the", "answer", "for", "everything", "NUMBER", "Related", "idea", "use", "an", "image", "which", "support", "the", "Anaconda", "distribution", "then", "conda", "install", "boto", "NUMBER", "The", "installation", "be", "easy", "and", "reliable", "NUMBER", "It", "seems", "the", "real", "issue", "be", "not", "a", "matter", "of", "single", "directory", "but", "an", "import", "boto", "NUMBER", "which", "be", "operational", "NUMBER", "Use", "Case", "I", "want", "to", "return", "all", "instances", "matching", "a", "given", "key", "value", "pair", "of", "tags", "NUMBER", "Since", "that", "number", "may", "be", "large", "in", "our", "staging", "or", "production", "environment", "I", "want", "to", "use", "paginators", "and", "iterate", "over", "the", "values", "returned", "from", "the", "API", "NUMBER", "I", "be", "attempting", "to", "use", "the", "paginator", "build", "into", "the", "EC", "NUMBER", "client", "EC", "NUMBER", "Paginator", "NUMBER", "DescribeInstances", "LINK", "EC", "NUMBER", "Paginator", "NUMBER", "DescribeInstances", "but", "I", "be", "get", "an", "error", "code", "that", "looks", "like", "the", "combination", "of", "filtering", "by", "tags", "and", "paginating", "be", "not", "support", "NUMBER", "Sample", "Code", "LINK", "R", "ae", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ceee", "NUMBER", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "Stack", "Trace", "ML", "C", "NUMBER", "TP", "NUMBER", "JSG", "NUMBER", "WL", "aws_scripts", "jreid", "python", "NUMBER", "paginator_test", "NUMBER", "py", "Traceback", "most", "recent", "call", "last", "File", "paginator_test", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "for", "instance", "in", "response_iterator", "File", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "__iter__", "response", "self", "NUMBER", "_make_request", "current_kwargs", "File", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "_make_request", "return", "self", "NUMBER", "_method", "current_kwargs", "File", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "error_class", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidParameterCombination", "when", "calling", "the", "DescribeInstances", "operation", "The", "parameter", "nextToken", "cannot", "be", "use", "with", "tag", "filters", "in", "the", "parameter", "filterSet", "NUMBER", "Remove", "either", "the", "tag", "filters", "from", "filterSet", "or", "the", "nextToken", "parameter", "and", "try", "again", "NUMBER", "Either", "my", "approach", "code", "be", "incorrect", "this", "be", "an", "error", "or", "it", "s", "undocumented", "behavior", "NUMBER", "Either", "way", "I", "figured", "it", "was", "worth", "a", "ticket", "NUMBER", "I", "d", "also", "appreciate", "any", "guidance", "on", "how", "best", "to", "address", "my", "use", "case", "with", "the", "restrictions", "in", "place", "please", "NUMBER", "As", "a", "workaround", "though", "admittedly", "undesirable", "you", "can", "filter", "on", "the", "client", "side", "NUMBER", "_Original", "issue", "was", "created", "on", "LINK", "sam", "local", "issue", "NUMBER", "_", "_Apologies", "in", "advance", "if", "this", "be", "not", "the", "right", "place", "to", "open", "this", "issue", "I", "don", "t", "have", "an", "extensive", "experience", "with", "aws", "sam", "local", "or", "Python", "so", "I", "may", "be", "miss", "something", "really", "stupid", "NUMBER", "_", "I", "be", "build", "a", "Python", "logic", "to", "run", "on", "AWS", "Lambda", "and", "chose", "aws", "sam", "local", "LINK", "sam", "local", "as", "framework", "NUMBER", "I", "came", "up", "with", "a", "simple", "Python", "test", "file", "LINK", "file", "test", "py", "which", "works", "fine", "when", "executed", "with", "python", "NUMBER", "pip", "install", "boto", "NUMBER", "t", "NUMBER", "python", "c", "from", "test", "import", "test", "NUMBER", "test", "NUMBER", "None", "None", "However", "when", "trying", "to", "use", "python", "NUMBER", "as", "Runtime", "as", "originally", "mention", "in", "template", "NUMBER", "yaml", "LINK", "file", "template", "yaml", "L", "NUMBER", "I", "get", "a", "SyntaxError", "invalid", "syntax", "on", "line", "client", "boto", "NUMBER", "client", "s", "NUMBER", "the", "full", "history", "be", "on", "LINK", "file", "error", "log", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "install", "npm", "NUMBER", "npm", "install", "g", "aws", "sam", "local", "NUMBER", "Download", "test", "NUMBER", "py", "and", "template", "NUMBER", "yaml", "locally", "same", "folder", "NUMBER", "echo", "sam", "local", "invoke", "Test", "Switching", "the", "Runtime", "to", "python", "NUMBER", "fix", "the", "issue", "anyone", "else", "having", "the", "same", "problem", "Any", "idea", "what", "the", "cause", "could", "be", "TIA", "This", "issue", "explains", "precisely", "how", "to", "do", "it", "for", "JavaScript", "but", "how", "to", "do", "it", "in", "Python", "boto", "NUMBER", "LINK", "sdk", "js", "issue", "NUMBER", "I", "can", "t", "find", "any", "documentation", "that", "explains", "how", "to", "do", "what", "the", "JavaScript", "SDK", "do", "NUMBER", "thanks", "Thanks", "for", "this", "answer", "which", "be", "correct", "but", "in", "the", "end", "I", "had", "to", "go", "for", "a", "solution", "implement", "CloudFront", "private", "content", "because", "you", "can", "only", "do", "HTTP", "if", "you", "get", "sign", "URLs", "for", "S", "NUMBER", "not", "hTTPS", "NUMBER", "I", "have", "write", "a", "python", "script", "to", "check", "the", "health", "of", "my", "ELBs", "NUMBER", "I", "be", "run", "the", "script", "from", "a", "VM", "NUMBER", "I", "need", "to", "log", "in", "and", "assume", "a", "role", "before", "I", "can", "check", "the", "state", "of", "the", "ELBs", "NUMBER", "When", "I", "was", "run", "this", "program", "on", "my", "machine", "I", "would", "assume", "a", "role", "in", "the", "shell", "and", "then", "run", "my", "program", "in", "that", "shell", "NUMBER", "I", "need", "to", "do", "the", "same", "process", "on", "my", "VM", "but", "be", "encountering", "difficulty", "NUMBER", "My", "code", "for", "logging", "in", "and", "assuming", "a", "role", "be", "here", "def", "assume_role", "cls", "env", "client", "boto", "NUMBER", "client", "sts", "aws_access_key_id", "XXX", "aws_secret_access_key", "xxx", "account", "ELB", "NUMBER", "account_handler", "env", "assumed_role_object", "client", "NUMBER", "assume_role", "RoleArn", "arn", "aws", "iam", "role", "SmokeTester", "NUMBER", "format", "account", "RoleSessionName", "SmokeTester", "credentials", "assumed_role_object", "Credentials", "s", "NUMBER", "_resource", "boto", "NUMBER", "resource", "cloudformation", "aws_access_key_id", "credentials", "AccessKeyId", "aws_secret_access_key", "credentials", "SecretAccessKey", "aws_session_token", "credentials", "SessionToken", "The", "part", "of", "my", "code", "that", "calls", "the", "load", "balancers", "looks", "like", "this", "client", "boto", "NUMBER", "client", "elb", "ELB", "NUMBER", "ELBList", "ELB", "NUMBER", "ELBList", "or", "client", "NUMBER", "describe_load_balancers", "LoadBalancerDescriptions", "Essentially", "I", "need", "to", "know", "how", "to", "export", "the", "logged", "in", "status", "to", "the", "environment", "or", "how", "to", "call", "the", "ELB", "client", "with", "the", "sts", "credentials", "I", "have", "NUMBER", "If", "that", "doesn", "t", "make", "sense", "then", "it", "s", "because", "I", "m", "a", "bit", "stumped", "as", "to", "how", "to", "solve", "it", "Thanks", "for", "your", "help", "I", "ll", "implement", "this", "now", "and", "let", "you", "know", "how", "I", "get", "on", "NUMBER", "My", "code", "now", "looks", "like", "this", "def", "assume_role", "self", "env", "smoker_keys", "helpers", "NUMBER", "import_from", "TAG", "sesh", "boto", "NUMBER", "session", "NUMBER", "Session", "aws_access_key_id", "smoker_keys", "aws_access_key_id", "aws_secret_access_key", "smoker_keys", "aws_secret_access_key", "sts_client", "sesh", "NUMBER", "client", "sts", "account", "self", "NUMBER", "account_number", "env", "assumed_role_object", "sts_client", "NUMBER", "assume_role", "RoleArn", "arn", "aws", "iam", "role", "SmokeTester", "NUMBER", "format", "account", "RoleSessionName", "SmokeTester", "credentials", "assumed_role_object", "Credentials", "elb_client", "boto", "NUMBER", "client", "elb", "aws_access_key_id", "credentials", "AccessKeyId", "aws_secret_access_key", "credentials", "SecretAccessKey", "aws_session_token", "credentials", "SessionToken", "return", "elb_client", "It", "returns", "a", "logged", "in", "ELB", "client", "that", "I", "then", "use", "to", "check", "the", "health", "of", "the", "instances", "run", "on", "the", "ELBs", "NUMBER", "Boto", "NUMBER", "documentation", "shows", "following", "example", "for", "scan", "method", "response", "client", "NUMBER", "scan", "ExpressionAttributeNames", "AT", "AlbumTitle", "ST", "SongTitle", "ExpressionAttributeValues", "a", "S", "No", "One", "You", "Know", "FilterExpression", "Artist", "a", "ProjectionExpression", "ST", "AT", "TableName", "Music", "print", "response", "In", "ExpressionAttributeNames", "AT", "ST", "should", "be", "AT", "ST", "otherwise", "it", "s", "going", "to", "throw", "an", "error", "NUMBER", "LINK", "DynamoDB", "NUMBER", "Client", "NUMBER", "scan", "url", "The", "question", "be", "in", "the", "title", "how", "to", "do", "this", "Didn", "t", "find", "any", "method", "NUMBER", "I", "ask", "if", "Boto", "has", "such", "API", "method", "I", "don", "t", "ask", "the", "advice", "NUMBER", "You", "ll", "have", "to", "combine", "describes", "and", "creates", "to", "copy", "them", "NUMBER", "Already", "combined", "LINK", "_sg_migrate", "blob", "master", "aws_sg_migrate", "NUMBER", "py", "NUMBER", "But", "I", "assume", "this", "requirement", "be", "rather", "common", "and", "you", "should", "consider", "this", "in", "future", "version", "of", "Boto", "API", "NUMBER", "The", "boto", "NUMBER", "docs", "for", "MTurk", "send_bonus", "do", "not", "mark", "the", "Reason", "param", "as", "REQUIRED", "LINK", "MTurk", "NUMBER", "Client", "NUMBER", "send_bonus", "But", "if", "I", "omit", "this", "param", "I", "get", "Value", "null", "at", "reason", "fail", "to", "satisfy", "constraint", "Member", "must", "not", "be", "null", "NUMBER", "AWS", "docs", "say", "Reason", "be", "required", "LINK", "_SendBonusOperation", "NUMBER", "html", "Using", "boto", "NUMBER", "NUMBER", "The", "boto", "NUMBER", "docs", "for", "reject_assignment", "say", "that", "the", "RequesterFeedback", "param", "be", "optional", "You", "can", "include", "an", "optional", "feedback", "message", "with", "the", "rejection", "And", "while", "the", "AssignmentId", "param", "be", "marked", "REQUIRED", "RequesterFeedback", "be", "not", "NUMBER", "But", "if", "I", "omit", "RequesterFeedback", "I", "get", "An", "error", "occur", "ValidationException", "when", "calling", "the", "RejectAssignment", "operation", "NUMBER", "validation", "error", "detected", "Value", "null", "at", "requesterFeedback", "fail", "to", "satisfy", "constraint", "Member", "must", "not", "be", "null", "AWS", "docs", "say", "RequesterFeedback", "be", "required", "but", "the", "prose", "seems", "to", "contradict", "the", "table", "LINK", "_RejectAssignmentOperation", "NUMBER", "html", "When", "creating", "a", "CloudFormation", "stack", "that", "fail", "due", "to", "a", "resource", "already", "exist", "and", "rollback", "be", "enable", "the", "StackCreateComplete", "waiter", "throw", "an", "exception", "that", "it", "encountered", "a", "terminal", "failure", "state", "NUMBER", "python", "boto", "NUMBER", "set_stream_logger", "boto", "NUMBER", "level", "boto", "NUMBER", "logging", "NUMBER", "DEBUG", "boto", "NUMBER", "set_stream_logger", "botocore", "level", "boto", "NUMBER", "logging", "NUMBER", "DEBUG", "boto", "NUMBER", "set_stream_logger", "boto", "NUMBER", "resources", "level", "boto", "NUMBER", "logging", "NUMBER", "DEBUG", "cf", "boto", "NUMBER", "client", "cloudformation", "print", "Creating", "stack", "NUMBER", "cf", "NUMBER", "create_stack", "StackName", "STACKNAME", "TemplateBody", "TEMPLATE", "print", "Waiting", "for", "stack", "creation", "to", "complete", "NUMBER", "cf", "NUMBER", "get_waiter", "stack_create_complete", "NUMBER", "wait", "StackName", "STACKNAME", "Logging", "output", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "DEBUG", "Looking", "for", "credentials", "via", "env", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "INFO", "Found", "credentials", "in", "environment", "variables", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "data", "endpoints", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "data", "cloudformation", "NUMBER", "NUMBER", "NUMBER", "service", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "data", "_retry", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "client", "DEBUG", "Registering", "retry", "handlers", "for", "service", "cloudformation", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "client", "class", "NUMBER", "cloudformation", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "args", "DEBUG", "The", "s", "NUMBER", "config", "key", "be", "not", "a", "dictionary", "type", "ignoring", "its", "value", "of", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Setting", "cloudformation", "timeout", "as", "NUMBER", "NUMBER", "Creating", "stack", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "cloudformation", "NUMBER", "CreateStack", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "OperationModel", "name", "CreateStack", "verify_ssl", "True", "with", "params", "redacted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "cloudformation", "NUMBER", "CreateStack", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "choose", "signer", "NUMBER", "cloudformation", "NUMBER", "CreateStack", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "redacted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "redacted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTPS", "connection", "NUMBER", "cloudformation", "NUMBER", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "POST", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "x", "amzn", "requestid", "redacted", "date", "Thu", "NUMBER", "Aug", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "length", "NUMBER", "content", "type", "text", "xml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "TAG", "TAG", "TAG", "redacted", "TAG", "TAG", "TAG", "TAG", "redacted", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "cloudformation", "NUMBER", "CreateStack", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "Waiting", "for", "stack", "creation", "to", "complete", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "data", "cloudformation", "NUMBER", "NUMBER", "NUMBER", "waiters", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "cloudformation", "NUMBER", "DescribeStacks", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "OperationModel", "name", "DescribeStacks", "verify_ssl", "True", "with", "params", "body", "Action", "u", "DescribeStacks", "StackName", "redacted", "Version", "u", "NUMBER", "NUMBER", "NUMBER", "url", "u", "LINK", "west", "NUMBER", "amazonaws", "NUMBER", "com", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "Microsoft", "Botocore", "NUMBER", "context", "auth_type", "None", "client_region", "us", "west", "NUMBER", "has_streaming_input", "False", "client_config", "TAG", "query_string", "url_path", "method", "u", "POST", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "cloudformation", "NUMBER", "DescribeStacks", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "choose", "signer", "NUMBER", "cloudformation", "NUMBER", "DescribeStacks", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "redacted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "redacted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "TAG", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "TAG", "redacted", "TAG", "TAG", "redacted", "TAG", "TAG", "CREATE_IN_PROGRESS", "TAG", "TAG", "false", "TAG", "TAG", "TAG", "User", "Initiated", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "redacted", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "cloudformation", "NUMBER", "DescribeStacks", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "cloudformation", "NUMBER", "DescribeStacks", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "OperationModel", "name", "DescribeStacks", "verify_ssl", "True", "with", "params", "redacted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "cloudformation", "NUMBER", "DescribeStacks", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "choose", "signer", "NUMBER", "cloudformation", "NUMBER", "DescribeStacks", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "redacted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "redacted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "redacted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Resetting", "drop", "connection", "cloudformation", "NUMBER", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "POST", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "x", "amzn", "requestid", "redacted", "date", "Thu", "NUMBER", "Aug", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "length", "NUMBER", "content", "type", "text", "xml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "TAG", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "TAG", "redacted", "TAG", "TAG", "redacted", "TAG", "TAG", "ROLLBACK_COMPLETE", "TAG", "TAG", "false", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "redacted", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "cloudformation", "NUMBER", "DescribeStacks", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "test", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "main", "File", "test", "NUMBER", "py", "line", "NUMBER", "in", "main", "cf", "NUMBER", "get_waiter", "stack_create_complete", "NUMBER", "wait", "StackName", "STACKNAME", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "waiter", "NUMBER", "py", "line", "NUMBER", "in", "wait", "Waiter", "NUMBER", "wait", "self", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "waiter", "NUMBER", "py", "line", "NUMBER", "in", "wait", "last_response", "response", "botocore", "NUMBER", "exception", "NUMBER", "WaiterError", "Waiter", "StackCreateComplete", "fail", "Waiter", "encountered", "a", "terminal", "failure", "state", "After", "looking", "through", "the", "source", "it", "appears", "that", "this", "be", "work", "as", "intended", "NUMBER", "My", "apologies", "NUMBER", "I", "was", "under", "the", "impression", "that", "this", "exception", "was", "for", "unexpect", "failures", "instead", "of", "ones", "specific", "to", "StackCreateComplete", "NUMBER", "Instead", "I", "will", "frame", "this", "as", "a", "feature", "request", "I", "would", "like", "to", "be", "able", "to", "retrieve", "error", "information", "from", "the", "WaiterError", "class", "similar", "to", "ClientError", "s", "API", "NUMBER", "In", "my", "example", "there", "was", "a", "CREATE_FAILED", "event", "on", "the", "stack", "resource", "that", "resulted", "from", "my", "CreateStack", "call", "which", "subsequently", "resulted", "in", "a", "rollback", "that", "would", "be", "desirable", "to", "access", "after", "use", "the", "waiter", "NUMBER", "At", "present", "the", "user", "has", "to", "list", "the", "stack", "events", "after", "the", "wait", "and", "obtain", "the", "error", "from", "there", "NUMBER", "Being", "able", "to", "track", "the", "exact", "reasons", "for", "failure", "state", "may", "be", "tricky", "NUMBER", "Marking", "as", "a", "feature", "request", "NUMBER", "As", "I", "understand", "it", "the", "etag", "for", "file", "TAG", "This", "topic", "provides", "general", "information", "about", "the", "PutItem", "API", "NUMBER", "For", "information", "on", "how", "to", "call", "the", "PutItem", "API", "use", "the", "AWS", "SDK", "in", "specific", "languages", "see", "the", "following", "links", "to", "SDK", "docs", "for", "each", "language", "This", "be", "confusing", "to", "the", "reader", "as", "it", "be", "effectively", "saying", "these", "docs", "aren", "t", "what", "you", "be", "looking", "for", "go", "over", "here", "instead", "and", "then", "the", "link", "takes", "them", "back", "to", "exactly", "where", "they", "start", "NUMBER", "I", "assume", "this", "warning", "be", "only", "meant", "to", "be", "display", "in", "the", "API", "guide", "and", "not", "in", "any", "of", "the", "SDK", "docs", "LINK", "DynamoDB", "NUMBER", "Client", "NUMBER", "put_item", "I", "have", "scenario", "where", "I", "have", "user", "store", "account", "master", "account", "consolidated", "billing", "under", "the", "organization", "NUMBER", "I", "be", "trying", "to", "create", "new", "accounts", "under", "organization", "For", "this", "I", "have", "to", "assume", "admin", "role", "in", "master", "account", "create", "new", "account", "and", "then", "assume", "role", "in", "new", "account", "to", "do", "further", "things", "NUMBER", "Above", "gives", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "AccessDenied", "when", "calling", "the", "AssumeRole", "operation", "Not", "authorized", "to", "perform", "sts", "AssumeRole", "Here", "be", "example", "snippet", "LINK", "Interesting", "thing", "be", "very", "similar", "flow", "works", "in", "case", "of", "other", "calls", "like", "organizations", "NUMBER", "describe_account", "Here", "be", "example", "snippet", "LINK", "Is", "this", "relate", "Session", "caching", "Why", "doesn", "t", "it", "work", "in", "create", "but", "works", "in", "describe", "I", "have", "an", "S", "NUMBER", "bucket", "with", "object", "keys", "following", "Example", "NUMBER", "in", "this", "guide", "LINK", "rate", "perf", "considerations", "NUMBER", "html", "examplebucket", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cust", "NUMBER", "photo", "NUMBER", "jpg", "examplebucket", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cust", "NUMBER", "photo", "NUMBER", "jpg", "examplebucket", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cust", "NUMBER", "photo", "NUMBER", "jpg", "examplebucket", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cust", "NUMBER", "photo", "NUMBER", "jpg", "Is", "there", "a", "way", "to", "list", "all", "objects", "use", "range", "filters", "as", "suggested", "in", "the", "guide", "I", "ve", "tried", "this", "but", "get", "no", "returned", "objects", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "my_bucket", "s", "NUMBER", "Bucket", "bucketname", "for", "obj", "in", "my_bucket", "NUMBER", "objects", "NUMBER", "filter", "Prefix", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "print", "obj", "Hi", "If", "you", "go", "to", "LINK", "Athena", "NUMBER", "Client", "NUMBER", "get_waiter", "looks", "like", "that", "feature", "be", "not", "implement", "NUMBER", "I", "have", "a", "lambda", "function", "which", "executes", "Athena", "queries", "NUMBER", "I", "use", "a", "function", "call", "start_query_execution", "in", "boto", "NUMBER", "and", "I", "need", "to", "write", "a", "loop", "to", "check", "if", "the", "execution", "be", "finished", "or", "not", "so", "I", "think", "it", "will", "be", "awesome", "if", "we", "have", "waiter", "feature", "implement", "in", "Athena", "NUMBER", "Thanks", "Any", "update", "on", "this", "On", "this", "page", "LINK", "It", "seems", "all", "the", "links", "that", "say", "See", "also", "AWS", "API", "Documentation", "be", "broken", "NUMBER", "They", "all", "redirect", "to", "LINK", "AWS", "docs", "home", "page", "NUMBER", "Example", "broken", "links", "LINK", "requester", "NUMBER", "NUMBER", "NUMBER", "ListWorkersWithQualificationType", "LINK", "requester", "NUMBER", "NUMBER", "NUMBER", "NotifyWorkers", "Log", "about", "call", "API", "on", "DEBUG", "level", "but", "not", "INFO", "NUMBER", "Logging", "such", "things", "for", "every", "operation", "which", "can", "be", "hundreds", "per", "second", "as", "INFO", "be", "a", "noisy", "trash", "in", "the", "logs", "and", "even", "an", "unnecessary", "information", "NUMBER", "See", "also", "boto", "botocore", "NUMBER", "Hello", "I", "be", "trying", "to", "use", "a", "boto", "NUMBER", "client", "in", "my", "python", "project", "NUMBER", "It", "works", "fine", "without", "multithreading", "When", "calling", "the", "function", "with", "multithreading", "the", "process", "crashes", "at", "rekognition", "session", "NUMBER", "client", "rekognition", "region", "from", "multiprocessing", "import", "Process", "in", "main", "NUMBER", "p", "Process", "target", "test", "args", "count", "p", "NUMBER", "art", "NUMBER", "def", "test", "count", "attributes", "ALL", "region", "eu", "west", "NUMBER", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "rekognition", "session", "NUMBER", "client", "rekognition", "region", "MacOS", "Error", "Log", "Process", "Python", "NUMBER", "Path", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "Resources", "Python", "NUMBER", "app", "Contents", "MacOS", "Python", "Identifier", "Python", "Version", "NUMBER", "NUMBER", "Code", "Type", "X", "NUMBER", "NUMBER", "Native", "Parent", "Process", "Python", "NUMBER", "Responsible", "Python", "NUMBER", "User", "ID", "NUMBER", "Date", "Time", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "OS", "Version", "Mac", "OS", "X", "NUMBER", "NUMBER", "G", "NUMBER", "Report", "Version", "NUMBER", "Anonymous", "UUID", "NUMBER", "D", "NUMBER", "F", "NUMBER", "C", "NUMBER", "F", "NUMBER", "D", "NUMBER", "BDE", "NUMBER", "NUMBER", "E", "NUMBER", "ECC", "NUMBER", "CC", "NUMBER", "DB", "Time", "Awake", "Since", "Boot", "NUMBER", "seconds", "System", "Integrity", "Protection", "enable", "Crashed", "Thread", "NUMBER", "Dispatch", "queue", "com", "NUMBER", "apple", "NUMBER", "main", "thread", "Exception", "Type", "EXC_BAD_ACCESS", "SIGSEGV", "Exception", "Codes", "KERN_INVALID_ADDRESS", "at", "NUMBER", "x", "NUMBER", "Exception", "Note", "EXC_CORPSE_NOTIFY", "Termination", "Signal", "Segmentation", "fault", "NUMBER", "Termination", "Reason", "Namespace", "SIGNAL", "Code", "NUMBER", "xb", "Terminating", "Process", "exc", "handler", "NUMBER", "VM", "Regions", "Near", "NUMBER", "x", "NUMBER", "__TEXT", "NUMBER", "NUMBER", "NUMBER", "K", "r", "x", "rwx", "SM", "COW", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "Resources", "Python", "NUMBER", "app", "Contents", "MacOS", "Python", "Application", "Specific", "Information", "multi", "threaded", "process", "forked", "crashed", "on", "child", "side", "of", "fork", "pre", "exec", "Thread", "NUMBER", "Crashed", "Dispatch", "queue", "com", "NUMBER", "apple", "NUMBER", "main", "thread", "NUMBER", "libdispatch", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "_dispatch_root_queue_push_override", "NUMBER", "NUMBER", "libdispatch", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "dd", "NUMBER", "_dispatch_mach_msg_send", "NUMBER", "NUMBER", "libdispatch", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "b", "NUMBER", "_dispatch_mach_send_drain", "NUMBER", "NUMBER", "libdispatch", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "_dispatch_mach_send_push_and_trydrain", "NUMBER", "NUMBER", "libdispatch", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "_dispatch_mach_send_msg", "NUMBER", "NUMBER", "libdispatch", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "c", "NUMBER", "dispatch_mach_send_with_result", "NUMBER", "NUMBER", "libxpc", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "_xpc_connection_enqueue", "NUMBER", "NUMBER", "libxpc", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "xpc_connection_send_message_with_reply", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ac", "NUMBER", "__", "NUMBER", "CFPrefsSearchListSource", "alreadylocked_generationCountFromListOfSources", "count", "_block_invoke_", "NUMBER", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "_CFXPreferences", "withConnectionForRole", "performBlock", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "__", "NUMBER", "CFPrefsSearchListSource", "alreadylocked_generationCountFromListOfSources", "count", "_block_invoke", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "CFPrefsSearchListSource", "alreadylocked_generationCountFromListOfSources", "count", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "CFPrefsSearchListSource", "alreadylocked_copyDictionary", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "c", "CFPrefsSearchListSource", "alreadylocked_copyValueForKey", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "CFPrefsSource", "copyValueForKey", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ab", "NUMBER", "__", "NUMBER", "_CFXPreferences", "copyAppValueForKey", "identifier", "container", "configurationURL", "_block_invoke", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "__", "NUMBER", "_CFXPreferences", "SearchListAdditions", "withSearchListForIdentifier", "container", "cloudConfigurationURL", "perform", "_block_invoke", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "_CFXPreferences", "SearchListAdditions", "withSearchListForIdentifier", "container", "cloudConfigurationURL", "perform", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "_CFXPreferences", "copyAppValueForKey", "identifier", "container", "configurationURL", "NUMBER", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "SystemConfiguration", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ce", "NUMBER", "d", "SCDynamicStoreCopyProxiesWithOptions", "NUMBER", "NUMBER", "_scproxy", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "fda", "NUMBER", "get_proxy_settings", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "_PyEval_EvalCodeWithName", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "ef", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "_PyEval_EvalCodeWithName", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "ef", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "_PyEval_EvalCodeWithName", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "ef", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "_PyEval_EvalCodeWithName", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "ef", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "_PyEval_EvalCodeWithName", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "f", "NUMBER", "PyEval_EvalCodeEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "a", "function_call", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "d", "NUMBER", "d", "NUMBER", "PyObject_Call", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "ec", "NUMBER", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "_PyEval_EvalCodeWithName", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "f", "NUMBER", "PyEval_EvalCodeEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "a", "function_call", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "d", "NUMBER", "d", "NUMBER", "PyObject_Call", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "cc", "method_call", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "d", "NUMBER", "d", "NUMBER", "PyObject_Call", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "c", "NUMBER", "slot_tp_init", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "type_call", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "d", "NUMBER", "d", "NUMBER", "PyObject_Call", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "edb", "NUMBER", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fc", "PyEval_EvalFrameEx", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "_PyEval_EvalCodeWithName", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "PyEval_EvalCode", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "e", "PyRun_FileExFlags", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "ff", "PyRun_SimpleFileExFlags", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "b", "NUMBER", "d", "NUMBER", "Py_Main", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "x", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "Thread", "NUMBER", "crashed", "with", "X", "NUMBER", "Thread", "State", "NUMBER", "bit", "rax", "NUMBER", "x", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "rbx", "NUMBER", "x", "NUMBER", "rcx", "NUMBER", "x", "NUMBER", "rdx", "NUMBER", "x", "NUMBER", "rdi", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "rsi", "NUMBER", "x", "NUMBER", "a", "NUMBER", "f", "NUMBER", "rbp", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bffb", "NUMBER", "a", "NUMBER", "rsp", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bffb", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "ff", "r", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "r", "NUMBER", "NUMBER", "x", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fe", "NUMBER", "e", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "f", "NUMBER", "rip", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "rfl", "NUMBER", "x", "NUMBER", "cr", "NUMBER", "NUMBER", "x", "NUMBER", "Logical", "CPU", "NUMBER", "Error", "Code", "NUMBER", "x", "NUMBER", "Trap", "Number", "NUMBER", "Binary", "Images", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "NUMBER", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "Resources", "Python", "NUMBER", "app", "Contents", "MacOS", "Python", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "org", "NUMBER", "python", "NUMBER", "python", "NUMBER", "c", "NUMBER", "NUMBER", "Python", "Software", "Foundation", "NUMBER", "NUMBER", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "Python", "NUMBER", "x", "NUMBER", "ea", "NUMBER", "NUMBER", "x", "NUMBER", "effef", "math", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "math", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fff", "_heapq", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_heapq", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "fd", "NUMBER", "NUMBER", "x", "NUMBER", "fdfff", "grp", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "grp", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "adf", "NUMBER", "NUMBER", "x", "NUMBER", "aecfff", "_datetime", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_datetime", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "af", "NUMBER", "NUMBER", "x", "NUMBER", "afbfff", "zlib", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "zlib", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "da", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fff", "multiarray", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "numpy", "core", "multiarray", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "fff", "_bz", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_bz", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "NUMBER", "x", "NUMBER", "ffbfff", "_hashlib", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_hashlib", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "ab", "NUMBER", "fcf", "cv", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "cv", "NUMBER", "cv", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "umath", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "numpy", "core", "umath", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "_random", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_random", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "faff", "NUMBER", "lapack_lite", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "numpy", "linalg", "lapack_lite", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "b", "NUMBER", "fff", "_ctypes", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_ctypes", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ccfff", "_struct", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_struct", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "e", "NUMBER", "fff", "_pickle", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_pickle", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fcff", "NUMBER", "fftpack_lite", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "numpy", "fft", "fftpack_lite", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "dfef", "_lzma", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_lzma", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "af", "NUMBER", "NUMBER", "x", "NUMBER", "b", "NUMBER", "ffff", "_umath_linalg", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "numpy", "linalg", "_umath_linalg", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "d", "NUMBER", "dff", "NUMBER", "mtrand", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "numpy", "random", "mtrand", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "ec", "NUMBER", "ff", "NUMBER", "_decimal", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_decimal", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "_posixsubprocess", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_posixsubprocess", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "bfff", "select", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "select", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "fff", "_opcode", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_opcode", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "fff", "binascii", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "binascii", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "ffb", "NUMBER", "NUMBER", "x", "NUMBER", "ffbfff", "_bisect", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_bisect", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "aff", "NUMBER", "_socket", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_socket", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "_ssl", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_ssl", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fff", "_json", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_json", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "fd", "NUMBER", "NUMBER", "x", "NUMBER", "fdff", "NUMBER", "_scproxy", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_scproxy", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "bc", "NUMBER", "NUMBER", "x", "NUMBER", "bc", "NUMBER", "ff", "NUMBER", "_elementtree", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "_elementtree", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "bd", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "fff", "pyexpat", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "pyexpat", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "afff", "termios", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "termios", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "fe", "NUMBER", "NUMBER", "x", "NUMBER", "fe", "NUMBER", "ff", "NUMBER", "cprocessors", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "sqlalchemy", "cprocessors", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "fe", "NUMBER", "NUMBER", "x", "NUMBER", "fe", "NUMBER", "fff", "cutils", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "sqlalchemy", "cutils", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "fe", "NUMBER", "NUMBER", "x", "NUMBER", "fe", "NUMBER", "ff", "NUMBER", "cresultproxy", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "sqlalchemy", "cresultproxy", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "fed", "NUMBER", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "fff", "array", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "array", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "b", "NUMBER", "fff", "unicodedata", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "TAG", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "lib", "dynload", "unicodedata", "NUMBER", "cpython", "NUMBER", "m", "darwin", "NUMBER", "so", "NUMBER", "x", "NUMBER", "abf", "NUMBER", "NUMBER", "x", "NUMBER", "abf", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "AppleIntelKBLGraphicsVAME", "NUMBER", "NUMBER", "TAG", "System", "Library", "Extensions", "AppleIntelKBLGraphicsVAME", "NUMBER", "bundle", "Contents", "MacOS", "AppleIntelKBLGraphicsVAME", "NUMBER", "x", "NUMBER", "d", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "audio", "NUMBER", "codecs", "NUMBER", "Components", "NUMBER", "NUMBER", "TAG", "System", "Library", "Components", "AudioCodecs", "NUMBER", "component", "Contents", "MacOS", "AudioCodecs", "NUMBER", "x", "NUMBER", "da", "NUMBER", "NUMBER", "x", "NUMBER", "dae", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "AMDRadeonVADriver", "NUMBER", "NUMBER", "TAG", "System", "Library", "Extensions", "AMDRadeonVADriver", "NUMBER", "bundle", "Contents", "MacOS", "AMDRadeonVADriver", "NUMBER", "x", "NUMBER", "db", "NUMBER", "NUMBER", "x", "NUMBER", "de", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "AppleIntelKBLGraphicsVADriver", "NUMBER", "NUMBER", "TAG", "System", "Library", "Extensions", "AppleIntelKBLGraphicsVADriver", "NUMBER", "bundle", "Contents", "MacOS", "AppleIntelKBLGraphicsVADriver", "NUMBER", "x", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "e", "NUMBER", "ffb", "com", "NUMBER", "apple", "NUMBER", "AMDRadeonX", "NUMBER", "GLDriver", "NUMBER", "NUMBER", "TAG", "System", "Library", "Extensions", "AMDRadeonX", "NUMBER", "GLDriver", "NUMBER", "bundle", "Contents", "MacOS", "AMDRadeonX", "NUMBER", "GLDriver", "NUMBER", "x", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "eaffff", "GLRendererFloat", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenGL", "NUMBER", "framework", "Resources", "GLRendererFloat", "NUMBER", "bundle", "GLRendererFloat", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "driver", "NUMBER", "AppleIntelKBLGraphicsGLDriver", "NUMBER", "NUMBER", "TAG", "System", "Library", "Extensions", "AppleIntelKBLGraphicsGLDriver", "NUMBER", "bundle", "Contents", "MacOS", "AppleIntelKBLGraphicsGLDriver", "NUMBER", "x", "NUMBER", "c", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "cbff", "NUMBER", "ATIRadeonX", "NUMBER", "SCLib", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Extensions", "AMDRadeonX", "NUMBER", "GLDriver", "NUMBER", "bundle", "Contents", "MacOS", "ATIRadeonX", "NUMBER", "SCLib", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "dyld", "NUMBER", "TAG", "usr", "lib", "dyld", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "dfbb", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "cfff", "com", "NUMBER", "apple", "NUMBER", "avfoundation", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "AVFoundation", "NUMBER", "framework", "Versions", "A", "AVFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "fff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "audio", "NUMBER", "AVFAudio", "NUMBER", "TAG", "System", "Library", "Frameworks", "AVFoundation", "NUMBER", "framework", "Versions", "A", "Frameworks", "AVFAudio", "NUMBER", "framework", "Versions", "A", "AVFAudio", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "eafff", "com", "NUMBER", "apple", "NUMBER", "Accelerate", "NUMBER", "Accelerate", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Accelerate", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "cfeb", "com", "NUMBER", "apple", "NUMBER", "vImage", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Frameworks", "vImage", "NUMBER", "framework", "Versions", "A", "vImage", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "eff", "NUMBER", "libBLAS", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Frameworks", "vecLib", "NUMBER", "framework", "Versions", "A", "libBLAS", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ffb", "libBNNS", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Frameworks", "vecLib", "NUMBER", "framework", "Versions", "A", "libBNNS", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ed", "NUMBER", "afef", "libLAPACK", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Frameworks", "vecLib", "NUMBER", "framework", "Versions", "A", "libLAPACK", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ed", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "edb", "NUMBER", "fff", "libLinearAlgebra", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Frameworks", "vecLib", "NUMBER", "framework", "Versions", "A", "libLinearAlgebra", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "edb", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "edb", "NUMBER", "fff", "libQuadrature", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Frameworks", "vecLib", "NUMBER", "framework", "Versions", "A", "libQuadrature", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "edb", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "edcdff", "NUMBER", "libSparseBLAS", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Frameworks", "vecLib", "NUMBER", "framework", "Versions", "A", "libSparseBLAS", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "edce", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ef", "NUMBER", "fe", "NUMBER", "libvDSP", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Frameworks", "vecLib", "NUMBER", "framework", "Versions", "A", "libvDSP", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ef", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "fff", "libvMisc", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Frameworks", "vecLib", "NUMBER", "framework", "Versions", "A", "libvMisc", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "Accelerate", "NUMBER", "vecLib", "NUMBER", "vecLib", "NUMBER", "TAG", "System", "Library", "Frameworks", "Accelerate", "NUMBER", "framework", "Versions", "A", "Frameworks", "vecLib", "NUMBER", "framework", "Versions", "A", "vecLib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "AppKit", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "AppKit", "NUMBER", "framework", "Versions", "C", "AppKit", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "ApplicationServices", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "ApplicationServices", "NUMBER", "framework", "Versions", "A", "ApplicationServices", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "ApplicationServices", "NUMBER", "ATS", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "ApplicationServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "ATS", "NUMBER", "framework", "Versions", "A", "ATS", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bc", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ebff", "NUMBER", "libFontParser", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "ApplicationServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "ATS", "NUMBER", "framework", "Versions", "A", "Resources", "libFontParser", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ec", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "libFontRegistry", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "ApplicationServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "ATS", "NUMBER", "framework", "Versions", "A", "Resources", "libFontRegistry", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ddff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "ColorSync", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "ApplicationServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "ColorSync", "NUMBER", "framework", "Versions", "A", "ColorSync", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "de", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ffff", "com", "NUMBER", "apple", "NUMBER", "HIServices", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "ApplicationServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "HIServices", "NUMBER", "framework", "Versions", "A", "HIServices", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "LangAnalysis", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "ApplicationServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "LangAnalysis", "NUMBER", "framework", "Versions", "A", "LangAnalysis", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "dfff", "com", "NUMBER", "apple", "NUMBER", "print", "NUMBER", "framework", "NUMBER", "PrintCore", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "ApplicationServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "PrintCore", "NUMBER", "framework", "Versions", "A", "PrintCore", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "QD", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "ApplicationServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "QD", "NUMBER", "framework", "Versions", "A", "QD", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ca", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "speech", "NUMBER", "synthesis", "NUMBER", "framework", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "ApplicationServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "SpeechSynthesis", "NUMBER", "framework", "Versions", "A", "SpeechSynthesis", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "audio", "NUMBER", "toolbox", "NUMBER", "AudioToolbox", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "AudioToolbox", "NUMBER", "framework", "Versions", "A", "AudioToolbox", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "audio", "NUMBER", "units", "NUMBER", "AudioUnit", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "AudioUnit", "NUMBER", "framework", "Versions", "A", "AudioUnit", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "CFNetwork", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CFNetwork", "NUMBER", "framework", "Versions", "A", "CFNetwork", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "Carbon", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Carbon", "NUMBER", "framework", "Versions", "A", "Carbon", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "CommonPanels", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Carbon", "NUMBER", "framework", "Versions", "A", "Frameworks", "CommonPanels", "NUMBER", "framework", "Versions", "A", "CommonPanels", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "efff", "com", "NUMBER", "apple", "NUMBER", "HIToolbox", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Carbon", "NUMBER", "framework", "Versions", "A", "Frameworks", "HIToolbox", "NUMBER", "framework", "Versions", "A", "HIToolbox", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "help", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Carbon", "NUMBER", "framework", "Versions", "A", "Frameworks", "Help", "NUMBER", "framework", "Versions", "A", "Help", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "ImageCapture", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Carbon", "NUMBER", "framework", "Versions", "A", "Frameworks", "ImageCapture", "NUMBER", "framework", "Versions", "A", "ImageCapture", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "ink", "NUMBER", "framework", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Carbon", "NUMBER", "framework", "Versions", "A", "Frameworks", "Ink", "NUMBER", "framework", "Versions", "A", "Ink", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bfff", "com", "NUMBER", "apple", "NUMBER", "openscripting", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Carbon", "NUMBER", "framework", "Versions", "A", "Frameworks", "OpenScripting", "NUMBER", "framework", "Versions", "A", "OpenScripting", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "dff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "print", "NUMBER", "framework", "NUMBER", "Print", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Carbon", "NUMBER", "framework", "Versions", "A", "Frameworks", "Print", "NUMBER", "framework", "Versions", "A", "Print", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "securityhi", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Carbon", "NUMBER", "framework", "Versions", "A", "Frameworks", "SecurityHI", "NUMBER", "framework", "Versions", "A", "SecurityHI", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "speech", "NUMBER", "recognition", "NUMBER", "framework", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Carbon", "NUMBER", "framework", "Versions", "A", "Frameworks", "SpeechRecognition", "NUMBER", "framework", "Versions", "A", "SpeechRecognition", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "Cocoa", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Cocoa", "NUMBER", "framework", "Versions", "A", "Cocoa", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cffff", "com", "NUMBER", "apple", "NUMBER", "audio", "NUMBER", "CoreAudio", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreAudio", "NUMBER", "framework", "Versions", "A", "CoreAudio", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "CoreBluetooth", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreBluetooth", "NUMBER", "framework", "Versions", "A", "CoreBluetooth", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "dffff", "com", "NUMBER", "apple", "NUMBER", "CoreData", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreData", "NUMBER", "framework", "Versions", "A", "CoreData", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "dff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreDisplay", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreDisplay", "NUMBER", "framework", "Versions", "A", "CoreDisplay", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreFoundation", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreFoundation", "NUMBER", "framework", "Versions", "A", "CoreFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aafff", "com", "NUMBER", "apple", "NUMBER", "CoreGraphics", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreGraphics", "NUMBER", "framework", "Versions", "A", "CoreGraphics", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ab", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eeffb", "com", "NUMBER", "apple", "NUMBER", "CoreImage", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreImage", "NUMBER", "framework", "Versions", "A", "CoreImage", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "CoreMedia", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreMedia", "NUMBER", "framework", "Versions", "A", "CoreMedia", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreMediaIO", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreMediaIO", "NUMBER", "framework", "Versions", "A", "CoreMediaIO", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "CoreServices", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreServices", "NUMBER", "framework", "Versions", "A", "CoreServices", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "AE", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "AE", "NUMBER", "framework", "Versions", "A", "AE", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreServices", "NUMBER", "CarbonCore", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "CarbonCore", "NUMBER", "framework", "Versions", "A", "CarbonCore", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "DictionaryServices", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "DictionaryServices", "NUMBER", "framework", "Versions", "A", "DictionaryServices", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "beff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreServices", "NUMBER", "FSEvents", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "FSEvents", "NUMBER", "framework", "Versions", "A", "FSEvents", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bf", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "bff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "LaunchServices", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "LaunchServices", "NUMBER", "framework", "Versions", "A", "LaunchServices", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bdcffb", "com", "NUMBER", "apple", "NUMBER", "Metadata", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "Metadata", "NUMBER", "framework", "Versions", "A", "Metadata", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bdd", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "cfff", "com", "NUMBER", "apple", "NUMBER", "CoreServices", "NUMBER", "OSServices", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "OSServices", "NUMBER", "framework", "Versions", "A", "OSServices", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cadfff", "com", "NUMBER", "apple", "NUMBER", "SearchKit", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "SearchKit", "NUMBER", "framework", "Versions", "A", "SearchKit", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cae", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cf", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "coreservices", "NUMBER", "SharedFileList", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreServices", "NUMBER", "framework", "Versions", "A", "Frameworks", "SharedFileList", "NUMBER", "framework", "Versions", "A", "SharedFileList", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ec", "NUMBER", "ffb", "com", "NUMBER", "apple", "NUMBER", "CoreText", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreText", "NUMBER", "framework", "Versions", "A", "CoreText", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eca", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "effff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreVideo", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreVideo", "NUMBER", "framework", "Versions", "A", "CoreVideo", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "ffb", "com", "NUMBER", "apple", "NUMBER", "framework", "NUMBER", "CoreWLAN", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "CoreWLAN", "NUMBER", "framework", "Versions", "A", "CoreWLAN", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "DiskArbitration", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "DiskArbitration", "NUMBER", "framework", "Versions", "A", "DiskArbitration", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "acfff", "com", "NUMBER", "apple", "NUMBER", "Foundation", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Foundation", "NUMBER", "framework", "Versions", "C", "Foundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "GSS", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "GSS", "NUMBER", "framework", "Versions", "A", "GSS", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cfff", "com", "NUMBER", "apple", "NUMBER", "Bluetooth", "NUMBER", "NUMBER", "f", "NUMBER", "TAG", "System", "Library", "Frameworks", "IOBluetooth", "NUMBER", "framework", "Versions", "A", "IOBluetooth", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "framework", "NUMBER", "IOKit", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "IOKit", "NUMBER", "framework", "Versions", "A", "IOKit", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "affb", "com", "NUMBER", "apple", "NUMBER", "IOSurface", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "IOSurface", "NUMBER", "framework", "Versions", "A", "IOSurface", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bdfef", "com", "NUMBER", "apple", "NUMBER", "ImageIO", "NUMBER", "framework", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "ImageIO", "NUMBER", "framework", "Versions", "A", "ImageIO", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "be", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "fff", "libGIF", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "ImageIO", "NUMBER", "framework", "Versions", "A", "Resources", "libGIF", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ab", "NUMBER", "ff", "NUMBER", "libJP", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "ImageIO", "NUMBER", "framework", "Versions", "A", "Resources", "libJP", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ab", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ad", "NUMBER", "ffb", "libJPEG", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "ImageIO", "NUMBER", "framework", "Versions", "A", "Resources", "libJPEG", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ad", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "affff", "NUMBER", "libPng", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "ImageIO", "NUMBER", "framework", "Versions", "A", "Resources", "libPng", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "libRadiance", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "ImageIO", "NUMBER", "framework", "Versions", "A", "Resources", "libRadiance", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "ffb", "libTIFF", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "ImageIO", "NUMBER", "framework", "Versions", "A", "Resources", "libTIFF", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ba", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "Kerberos", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Kerberos", "NUMBER", "framework", "Versions", "A", "Kerberos", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "MediaAccessibility", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "MediaAccessibility", "NUMBER", "framework", "Versions", "A", "MediaAccessibility", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "MediaToolbox", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "MediaToolbox", "NUMBER", "framework", "Versions", "A", "MediaToolbox", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "efff", "com", "NUMBER", "apple", "NUMBER", "Metal", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Metal", "NUMBER", "framework", "Versions", "A", "Metal", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fffff", "com", "NUMBER", "apple", "NUMBER", "NetFS", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "NetFS", "NUMBER", "framework", "Versions", "A", "NetFS", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bd", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bdeff", "NUMBER", "libcldcpuengine", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenCL", "NUMBER", "framework", "Versions", "A", "Libraries", "libcldcpuengine", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bdf", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "dff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "opencl", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenCL", "NUMBER", "framework", "Versions", "A", "OpenCL", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "ffb", "com", "NUMBER", "apple", "NUMBER", "CFOpenDirectory", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenDirectory", "NUMBER", "framework", "Versions", "A", "Frameworks", "CFOpenDirectory", "NUMBER", "framework", "Versions", "A", "CFOpenDirectory", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "OpenDirectory", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenDirectory", "NUMBER", "framework", "Versions", "A", "OpenDirectory", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "fff", "libCVMSPluginSupport", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenGL", "NUMBER", "framework", "Versions", "A", "Libraries", "libCVMSPluginSupport", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "aff", "NUMBER", "libCoreFSCache", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenGL", "NUMBER", "framework", "Versions", "A", "Libraries", "libCoreFSCache", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "ffff", "libCoreVMClient", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenGL", "NUMBER", "framework", "Versions", "A", "Libraries", "libCoreVMClient", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "ff", "NUMBER", "libGFXShared", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenGL", "NUMBER", "framework", "Versions", "A", "Libraries", "libGFXShared", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "fff", "libGL", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenGL", "NUMBER", "framework", "Versions", "A", "Libraries", "libGL", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cb", "NUMBER", "ff", "NUMBER", "libGLImage", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenGL", "NUMBER", "framework", "Versions", "A", "Libraries", "libGLImage", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cb", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "libGLProgrammability", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenGL", "NUMBER", "framework", "Versions", "A", "Libraries", "libGLProgrammability", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "bff", "NUMBER", "libGLU", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenGL", "NUMBER", "framework", "Versions", "A", "Libraries", "libGLU", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "opengl", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "OpenGL", "NUMBER", "framework", "Versions", "A", "OpenGL", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "QuartzCore", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "QuartzCore", "NUMBER", "framework", "Versions", "A", "QuartzCore", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "cff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "security", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "Security", "NUMBER", "framework", "Versions", "A", "Security", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "securityfoundation", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "SecurityFoundation", "NUMBER", "framework", "Versions", "A", "SecurityFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "xpc", "NUMBER", "ServiceManagement", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "ServiceManagement", "NUMBER", "framework", "Versions", "A", "ServiceManagement", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "SystemConfiguration", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "SystemConfiguration", "NUMBER", "framework", "Versions", "A", "SystemConfiguration", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "VideoToolbox", "NUMBER", "NUMBER", "TAG", "System", "Library", "Frameworks", "VideoToolbox", "NUMBER", "framework", "Versions", "A", "VideoToolbox", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aaa", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "AppContainer", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "AppContainer", "NUMBER", "framework", "Versions", "A", "AppContainer", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aaa", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aab", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "AppSandbox", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "AppSandbox", "NUMBER", "framework", "Versions", "A", "AppSandbox", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aab", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aad", "NUMBER", "ffb", "com", "NUMBER", "apple", "NUMBER", "framework", "NUMBER", "Apple", "NUMBER", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "Apple", "NUMBER", "framework", "Versions", "A", "Apple", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aada", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aae", "NUMBER", "feb", "com", "NUMBER", "apple", "NUMBER", "AppleFSCompression", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "AppleFSCompression", "NUMBER", "framework", "Versions", "A", "AppleFSCompression", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aaea", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "abb", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "AppleGVAFramework", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "AppleGVA", "NUMBER", "framework", "Versions", "A", "AppleGVA", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "abd", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ac", "NUMBER", "f", "com", "NUMBER", "apple", "NUMBER", "AppleJPEG", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "AppleJPEG", "NUMBER", "framework", "Versions", "A", "AppleJPEG", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ac", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "acf", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "AppleVAFramework", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "AppleVA", "NUMBER", "framework", "Versions", "A", "AppleVA", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "backup", "NUMBER", "framework", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "Backup", "NUMBER", "framework", "Versions", "A", "Backup", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bdc", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "ChunkingLibrary", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "ChunkingLibrary", "NUMBER", "framework", "Versions", "A", "ChunkingLibrary", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ffb", "com", "NUMBER", "apple", "NUMBER", "CommonAuth", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "CommonAuth", "NUMBER", "framework", "Versions", "A", "CommonAuth", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cc", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreAUC", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "CoreAUC", "NUMBER", "framework", "Versions", "A", "CoreAUC", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cc", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cc", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "CoreAVCHD", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "CoreAVCHD", "NUMBER", "framework", "Versions", "A", "CoreAVCHD", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ce", "NUMBER", "cfff", "com", "NUMBER", "apple", "NUMBER", "CoreEmoji", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "CoreEmoji", "NUMBER", "framework", "Versions", "A", "CoreEmoji", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreServicesInternal", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "CoreServicesInternal", "NUMBER", "framework", "Versions", "A", "CoreServicesInternal", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreSymbolication", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "CoreSymbolication", "NUMBER", "framework", "Versions", "A", "CoreSymbolication", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "coreui", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "CoreUI", "NUMBER", "framework", "Versions", "A", "CoreUI", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CoreUtils", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "CoreUtils", "NUMBER", "framework", "Versions", "A", "CoreUtils", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "dff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "framework", "NUMBER", "CoreWiFi", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "CoreWiFi", "NUMBER", "framework", "Versions", "A", "CoreWiFi", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "acff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "CrashReporterSupport", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "CrashReporterSupport", "NUMBER", "framework", "Versions", "A", "CrashReporterSupport", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "ffb", "com", "NUMBER", "apple", "NUMBER", "framework", "NUMBER", "DFRFoundation", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "DFRFoundation", "NUMBER", "framework", "Versions", "A", "DFRFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "dff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "DSExternalDisplay", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "DSExternalDisplay", "NUMBER", "framework", "Versions", "A", "DSExternalDisplay", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ffb", "com", "NUMBER", "apple", "NUMBER", "datadetectorscore", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "DataDetectorsCore", "NUMBER", "framework", "Versions", "A", "DataDetectorsCore", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "DebugSymbols", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "DebugSymbols", "NUMBER", "framework", "Versions", "A", "DebugSymbols", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "da", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "desktopservices", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "DesktopServicesPriv", "NUMBER", "framework", "Versions", "A", "DesktopServicesPriv", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "eff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "vision", "NUMBER", "FaceCore", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "FaceCore", "NUMBER", "framework", "Versions", "A", "FaceCore", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "d", "NUMBER", "fff", "libmetal_timestamp", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "GPUCompiler", "NUMBER", "framework", "libmetal_timestamp", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "edff", "NUMBER", "libGPUSupportMercury", "NUMBER", "dylib", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "GPUSupport", "NUMBER", "framework", "Versions", "A", "Libraries", "libGPUSupportMercury", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "GenerationalStorage", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "GenerationalStorage", "NUMBER", "framework", "Versions", "A", "GenerationalStorage", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fed", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "Heimdal", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "Heimdal", "NUMBER", "framework", "Versions", "A", "Heimdal", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bffb", "com", "NUMBER", "apple", "NUMBER", "IOAccelerator", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "IOAccelerator", "NUMBER", "framework", "Versions", "A", "IOAccelerator", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "IOPresentment", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "IOPresentment", "NUMBER", "framework", "Versions", "A", "IOPresentment", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "IconServices", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "IconServices", "NUMBER", "framework", "Versions", "A", "IconServices", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "IntlPreferences", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "IntlPreferences", "NUMBER", "framework", "Versions", "A", "IntlPreferences", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "LanguageModeling", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "LanguageModeling", "NUMBER", "framework", "Versions", "A", "LanguageModeling", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eb", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eb", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "Mangrove", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "Mangrove", "NUMBER", "framework", "Versions", "A", "Mangrove", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "dcff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "MetalPerformanceShaders", "NUMBER", "MetalPerformanceShaders", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "MetalPerformanceShaders", "NUMBER", "framework", "Versions", "A", "MetalPerformanceShaders", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "MultitouchSupport", "NUMBER", "framework", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "MultitouchSupport", "NUMBER", "framework", "Versions", "A", "MultitouchSupport", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cfff", "com", "NUMBER", "apple", "NUMBER", "NetAuth", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "NetAuth", "NUMBER", "framework", "Versions", "A", "NetAuth", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "PerformanceAnalysis", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "PerformanceAnalysis", "NUMBER", "framework", "Versions", "A", "PerformanceAnalysis", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "ProtocolBuffer", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "ProtocolBuffer", "NUMBER", "framework", "Versions", "A", "ProtocolBuffer", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "RemoteViewServices", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "RemoteViewServices", "NUMBER", "framework", "Versions", "A", "RemoteViewServices", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "com", "NUMBER", "apple", "NUMBER", "SecCodeWrapper", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "SecCodeWrapper", "NUMBER", "framework", "Versions", "A", "SecCodeWrapper", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ef", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cfff", "com", "NUMBER", "apple", "NUMBER", "Sharing", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "Sharing", "NUMBER", "framework", "Versions", "A", "Sharing", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "feb", "com", "NUMBER", "apple", "NUMBER", "SkyLight", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "SkyLight", "NUMBER", "framework", "Versions", "A", "SkyLight", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eeff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "SpeechRecognitionCore", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "SpeechRecognitionCore", "NUMBER", "framework", "Versions", "A", "SpeechRecognitionCore", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "dda", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "efdf", "com", "NUMBER", "apple", "NUMBER", "Symbolication", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "Symbolication", "NUMBER", "framework", "Versions", "A", "Symbolication", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "TCC", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "TCC", "NUMBER", "framework", "Versions", "A", "TCC", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "TextureIO", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "TextureIO", "NUMBER", "framework", "Versions", "A", "TextureIO", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "afff", "com", "NUMBER", "apple", "NUMBER", "TrustEvaluationAgent", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "TrustEvaluationAgent", "NUMBER", "framework", "Versions", "A", "TrustEvaluationAgent", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ebff", "NUMBER", "com", "NUMBER", "apple", "NUMBER", "UIFoundation", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "UIFoundation", "NUMBER", "framework", "Versions", "A", "UIFoundation", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cbfff", "com", "NUMBER", "apple", "NUMBER", "XPCService", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "XPCService", "NUMBER", "framework", "Versions", "A", "XPCService", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "effb", "com", "NUMBER", "apple", "NUMBER", "loginsupport", "NUMBER", "NUMBER", "TAG", "System", "Library", "PrivateFrameworks", "login", "NUMBER", "framework", "Versions", "A", "Frameworks", "loginsupport", "NUMBER", "framework", "Versions", "A", "loginsupport", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eff", "NUMBER", "libCRFSuite", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libCRFSuite", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "afff", "libChineseTokenizer", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libChineseTokenizer", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ac", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "adff", "NUMBER", "libDiagnosticMessagesClient", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libDiagnosticMessagesClient", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ae", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "fff", "libFosl_dynamic", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libFosl_dynamic", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "dd", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "fff", "libMatch", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libMatch", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "fff", "libOpenScriptingUtil", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libOpenScriptingUtil", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eaffb", "libScreenReader", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libScreenReader", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eb", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ecffb", "libSystem", "NUMBER", "B", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libSystem", "NUMBER", "B", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "libarchive", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libarchive", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "fc", "NUMBER", "libate", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libate", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "libauto", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libauto", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "libbsm", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libbsm", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "libbz", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libbz", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "bff", "NUMBER", "libc", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libc", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ba", "NUMBER", "ff", "NUMBER", "libc", "abi", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libc", "abi", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ba", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bb", "NUMBER", "ffb", "libcmph", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libcmph", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bb", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bcdfcf", "libcompression", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libcompression", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bce", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bceff", "NUMBER", "libcoretls", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libcoretls", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bcf", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bd", "NUMBER", "ff", "NUMBER", "libcoretls_cfhelpers", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libcoretls_cfhelpers", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "fff", "NUMBER", "libcrypto", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libcrypto", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "libcups", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libcups", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fb", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fbbff", "NUMBER", "libdscsym", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libdscsym", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fdd", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fddfff", "libenergytrace", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libenergytrace", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fed", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "ff", "NUMBER", "libheimdal", "asn", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libheimdal", "asn", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "libiconv", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libiconv", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bffb", "libicucore", "NUMBER", "A", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libicucore", "NUMBER", "A", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "liblangid", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "liblangid", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cffb", "liblzma", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "liblzma", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "libmarisa", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libmarisa", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ecff", "NUMBER", "libmecabra", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libmecabra", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "libnetwork", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libnetwork", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "c", "NUMBER", "libobjc", "NUMBER", "A", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libobjc", "NUMBER", "A", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "fff", "libpam", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libpam", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aa", "NUMBER", "fff", "libpcap", "NUMBER", "A", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libpcap", "NUMBER", "A", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ac", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "adeffb", "libresolv", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libresolv", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "adf", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "fff", "libsandbox", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libsandbox", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "dff", "NUMBER", "libspindump", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libspindump", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "cff", "NUMBER", "libsqlite", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libsqlite", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cd", "NUMBER", "ff", "NUMBER", "libssl", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libssl", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "efff", "libxar", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libxar", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "efff", "libxml", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libxml", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "fff", "libxslt", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libxslt", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eaaff", "NUMBER", "libz", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "libz", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eb", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ebdff", "NUMBER", "libcache", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libcache", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ebe", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ec", "NUMBER", "fff", "libcommonCrypto", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libcommonCrypto", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ec", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ed", "NUMBER", "fff", "libcompiler_rt", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libcompiler_rt", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ed", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ed", "NUMBER", "fff", "libcopyfile", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libcopyfile", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "eda", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "dfdf", "libcorecrypto", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libcorecrypto", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "ffff", "libdispatch", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libdispatch", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "ffb", "libdyld", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libdyld", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "ffb", "libkeymgr", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libkeymgr", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fa", "NUMBER", "fff", "libkxld", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libkxld", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fa", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fa", "NUMBER", "fff", "liblaunch", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "liblaunch", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fa", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "faaff", "NUMBER", "libmacho", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libmacho", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fab", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fadff", "NUMBER", "libquarantine", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libquarantine", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fae", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fafffb", "libremovefile", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libremovefile", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fb", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fc", "NUMBER", "ff", "NUMBER", "libsystem_asl", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_asl", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fc", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fc", "NUMBER", "ff", "NUMBER", "libsystem_blocks", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_blocks", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fca", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fef", "libsystem_c", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_c", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bffb", "libsystem_configuration", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_configuration", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ffff", "libsystem_coreservices", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_coreservices", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fff", "libsystem_coretls", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_coretls", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ffff", "libsystem_dnssd", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_dnssd", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "libsystem_info", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_info", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aa", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ccff", "NUMBER", "libsystem_kernel", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_kernel", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "cd", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "fe", "NUMBER", "libsystem_m", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_m", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "libsystem_malloc", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_malloc", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "dffb", "libsystem_network", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_network", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "libsystem_networkextension", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_networkextension", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "libsystem_notify", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_notify", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "aafe", "NUMBER", "libsystem_platform", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_platform", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ab", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "libsystem_pthread", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_pthread", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "libsystem_sandbox", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_sandbox", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ba", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bbff", "NUMBER", "libsystem_secinit", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_secinit", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "bc", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "ffb", "libsystem_symptoms", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_symptoms", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "libsystem_trace", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libsystem_trace", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ddffb", "libunwind", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libunwind", "NUMBER", "dylib", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "de", "NUMBER", "NUMBER", "x", "NUMBER", "fff", "NUMBER", "ff", "NUMBER", "libxpc", "NUMBER", "dylib", "NUMBER", "TAG", "usr", "lib", "system", "libxpc", "NUMBER", "dylib", "External", "Modification", "Summary", "Calls", "made", "by", "other", "processes", "targeting", "this", "process", "task_for_pid", "NUMBER", "thread_create", "NUMBER", "thread_set_state", "NUMBER", "Calls", "made", "by", "this", "process", "task_for_pid", "NUMBER", "thread_create", "NUMBER", "thread_set_state", "NUMBER", "Calls", "made", "by", "all", "processes", "on", "this", "machine", "task_for_pid", "NUMBER", "thread_create", "NUMBER", "thread_set_state", "NUMBER", "Hi", "Thanks", "for", "the", "quick", "response", "with", "debugging", "I", "find", "out", "that", "the", "crash", "be", "between", "the", "session", "and", "the", "reko", "variable", "declaration", "NUMBER", "That", "s", "why", "I", "thought", "I", "will", "ask", "Should", "I", "use", "something", "different", "than", "multiprocessing", "to", "make", "the", "api", "calls", "parallel", "Only", "when", "starting", "the", "process", "the", "count", "variable", "nothing", "more", "Is", "there", "a", "way", "to", "share", "the", "code", "example", "private", "Hi", "I", "had", "use", "python", "NUMBER", "before", "and", "it", "was", "work", "there", "NUMBER", "But", "I", "be", "use", "opencv", "on", "a", "mac", "to", "get", "the", "images", "from", "a", "video", "file", "and", "that", "be", "not", "available", "for", "NUMBER", "at", "the", "moment", "NUMBER", "The", "same", "code", "be", "work", "in", "windows", "use", "python", "NUMBER", "but", "on", "the", "mac", "I", "have", "to", "use", "NUMBER", "because", "of", "the", "opencv", "NUMBER", "There", "it", "be", "not", "work", "Closing", "due", "to", "inactivity", "Thanks", "for", "your", "time", "NUMBER", "Now", "I", "create", "a", "ecs", "services", "with", "boto", "NUMBER", "ecs", "NUMBER", "create_service", "and", "I", "think", "if", "this", "service", "can", "be", "auto", "scaled", "like", "what", "I", "could", "do", "in", "aws", "panel", "would", "be", "very", "convenient", "NUMBER", "What", "method", "should", "I", "use", "Thanks", "NUMBER", "joguSD", "Thank", "you", "NUMBER", "I", "will", "read", "the", "doc", "and", "figure", "it", "out", "NUMBER", "joguSD", "I", "be", "sorry", "but", "if", "I", "didn", "t", "get", "it", "wrong", "AutoScaling", "service", "scales", "EC", "NUMBER", "instance", "amount", "NUMBER", "It", "add", "or", "shutdown", "some", "EC", "NUMBER", "But", "what", "I", "m", "looking", "for", "be", "scaling", "ECS", "service", "which", "be", "docker", "container", "NUMBER", "Could", "AutoScaling", "service", "operate", "ECS", "service", "Any", "idea", "about", "this", "will", "be", "appreciated", "NUMBER", "Thank", "you", "NUMBER", "I", "think", "maybe", "I", "find", "what", "I", "need", "NUMBER", "ApplicationAutoScaling", "LINK", "autoscaling", "NUMBER", "html", "I", "should", "register", "ECS", "service", "as", "a", "scalable", "target", "then", "set", "a", "scaling", "policy", "with", "application", "auto", "scaling", "service", "NUMBER", "joguSD", "Yes", "it", "worked", "and", "this", "issue", "can", "be", "close", "NUMBER", "Thank", "you", "Context", "Lambda", "function", "triggered", "on", "put", "events", "trying", "to", "download", "the", "report", "object", "NUMBER", "The", "value", "for", "the", "key", "report", "in", "the", "Lambda", "event", "can", "not", "always", "be", "pass", "directly", "back", "in", "as", "the", "value", "for", "key", "in", "an", "S", "NUMBER", "API", "function", "NUMBER", "Rather", "you", "must", "perform", "an", "encoding", "incantation", "that", "be", "only", "revealed", "in", "the", "generate", "blueprint", "code", "for", "Python", "S", "NUMBER", "events", "python", "def", "lambda_handler", "event", "context", "print", "Received", "event", "json", "NUMBER", "dumps", "event", "indent", "NUMBER", "Get", "the", "object", "from", "the", "event", "and", "show", "its", "content", "type", "bucket", "event", "Records", "NUMBER", "s", "NUMBER", "bucket", "name", "key", "urllib", "NUMBER", "unquote_plus", "event", "Records", "NUMBER", "s", "NUMBER", "object", "key", "NUMBER", "encode", "utf", "NUMBER", "NUMBER", "This", "can", "occur", "when", "the", "uploaded", "keys", "contain", "spaces", "which", "S", "NUMBER", "encodes", "with", "when", "generating", "the", "event", "NUMBER", "But", "the", "boto", "NUMBER", "s", "NUMBER", "calls", "expect", "a", "string", "with", "the", "actual", "spaces", "NUMBER", "One", "could", "reasonably", "argue", "that", "this", "be", "an", "API", "design", "issue", "but", "I", "ve", "grown", "soft", "and", "expect", "my", "API", "wrappers", "to", "hide", "those", "implementation", "details", "from", "me", "NUMBER", "Ahh", "given", "that", "boto", "NUMBER", "be", "install", "by", "default", "for", "python", "lambda", "function", "I", "thought", "boto", "NUMBER", "was", "provide", "the", "shim", "that", "mapped", "the", "raw", "lambda", "parameters", "into", "the", "event", "and", "context", "objects", "NUMBER", "You", "re", "right", "if", "that", "isn", "t", "boto", "NUMBER", "you", "can", "t", "do", "anything", "NUMBER", "At", "least", "this", "might", "serve", "as", "a", "something", "that", "turns", "up", "in", "a", "search", "engine", "for", "the", "next", "person", "NUMBER", "Hi", "NUMBER", "Longtime", "listener", "first", "time", "caller", "We", "discover", "this", "issue", "while", "work", "with", "a", "Python", "NUMBER", "lambda", "with", "log", "level", "set", "to", "debug", "use", "the", "standing", "logging", "package", "NUMBER", "The", "raw", "HTTP", "body", "of", "calls", "to", "SSM", "GetParameter", "get", "dumped", "to", "the", "log", "file", "exposing", "the", "decrypted", "value", "NUMBER", "The", "log", "line", "looks", "like", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "Response", "body", "Parameter", "Name", "some", "NUMBER", "secure", "NUMBER", "value", "Type", "SecureString", "Value", "The", "unencrypted", "contents", "I", "know", "that", "debug", "logging", "be", "not", "a", "good", "idea", "in", "production", "use", "cases", "but", "given", "the", "limited", "ability", "to", "debug", "Lambdas", "in", "particular", "and", "the", "sensitive", "nature", "of", "these", "encrypted", "values", "it", "be", "worth", "masking", "the", "response", "body", "NUMBER", "Happy", "to", "help", "look", "into", "it", "further", "when", "I", "have", "the", "opportunity", "NUMBER", "I", "m", "not", "super", "familiar", "with", "the", "internals", "NUMBER", "Related", "LINK", "Well", "it", "s", "for", "a", "different", "API", "but", "it", "s", "along", "the", "same", "vein", "NUMBER", "I", "spend", "a", "lot", "of", "time", "looking", "at", "my", "service", "s", "logs", "and", "seeing", "message", "like", "this", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "PID", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "INFO", "Calling", "dynamodb", "query", "with", "Limit", "NUMBER", "KeyConditionExpression", "TAG", "TableName", "NUMBER", "It", "d", "be", "really", "nice", "to", "see", "something", "meaningful", "in", "that", "log", "message", "like", "Key", "foo", "NUMBER", "eq", "bar", "i", "NUMBER", "e", "NUMBER", "the", "name", "of", "the", "key", "and", "the", "value", "instead", "of", "TAG", "which", "tells", "me", "almost", "nothing", "NUMBER", "I", "haven", "t", "find", "a", "way", "to", "do", "this", "from", "outside", "of", "boto", "so", "perhaps", "you", "could", "add", "this", "as", "a", "feature", "NUMBER", "We", "have", "a", "S", "NUMBER", "bucket", "that", "be", "public", "and", "requires", "no", "authentication", "yet", "we", "cannot", "access", "it", "via", "boto", "NUMBER", "unless", "there", "be", "credentials", "configured", "in", "one", "of", "these", "modes", "LINK", "configuring", "credentials", "The", "only", "one", "that", "actually", "doesn", "t", "require", "an", "aws", "account", "would", "be", "the", "IAM", "role", "configuration", "but", "we", "don", "t", "control", "the", "instance", "NUMBER", "Is", "there", "an", "equivalent", "boto", "NUMBER", "client", "call", "that", "would", "work", "like", "aws", "s", "NUMBER", "cp", "s", "NUMBER", "TAG", "TAG", "no", "sign", "request", "This", "works", "thanks", "My", "only", "other", "comment", "would", "be", "to", "update", "the", "documentation", "in", "the", "Configuration", "Credentials", "section", "to", "mention", "this", "NUMBER", "As", "find", "by", "fxp", "NUMBER", "on", "LINK", "Lambda", "NUMBER", "Client", "NUMBER", "publish_version", "the", "ARN", "returned", "in", "FunctionArn", "actually", "contains", "the", "version", "number", "at", "the", "end", "NUMBER", "but", "it", "s", "miss", "in", "the", "example", "NUMBER", "I", "don", "t", "know", "where", "to", "correct", "this", "the", "docs", "be", "autogenerated", "from", "the", "upstream", "service", "description", "NUMBER", "I", "ve", "submitted", "a", "support", "ticket", "too", "NUMBER", "Ok", "cool", "thanks", "for", "clarifying", "NUMBER", "Hope", "support", "will", "respond", "to", "me", "soon", "NUMBER", "Using", "version", "NUMBER", "So", "the", "docs", "say", "this", "LINK", "SSM", "NUMBER", "Client", "NUMBER", "get_parameter", "But", "I", "don", "t", "see", "this", "method", "NUMBER", "I", "run", "some", "code", "to", "print", "out", "all", "methods", "of", "the", "client", "self", "NUMBER", "client", "boto", "NUMBER", "client", "ssm", "region_name", "self", "NUMBER", "region", "print", "method", "for", "method", "in", "dir", "self", "NUMBER", "client", "if", "callable", "getattr", "self", "NUMBER", "client", "method", "and", "get", "this", "truncated", "get_maintenance_window_execution", "get_maintenance_window_execution_task", "get_paginator", "get_parameter_history", "get_parameters", "get_patch_baseline", "no", "get_parameter", "in", "there", "NUMBER", "only", "the", "plural", "NUMBER", "Was", "this", "remove", "but", "not", "remove", "from", "the", "docs", "I", "m", "seeing", "the", "same", "issue", "when", "trying", "to", "call", "get_parameter", "from", "within", "AWS", "Lambda", "client", "boto", "NUMBER", "client", "ssm", "param", "client", "NUMBER", "get_parameter", "Name", "test", "WithDecryption", "False", "throw", "AttributeError", "SSM", "object", "has", "no", "attribute", "get_parameter", "Closing", "due", "to", "inactivity", "NUMBER", "Please", "let", "us", "know", "if", "you", "continue", "seeing", "issue", "relate", "to", "this", "after", "upgrading", "I", "m", "get", "this", "same", "error", "python", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "profile_name", "dev", "client", "session", "NUMBER", "client", "ssm", "client", "NUMBER", "get_parameter", "Name", "PARAMETER_NAME", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "__getattr__", "self", "NUMBER", "__class__", "NUMBER", "__name__", "item", "AttributeError", "SSM", "object", "has", "no", "attribute", "get_parameter", "use", "python", "NUMBER", "boto", "NUMBER", "NUMBER", "and", "botocore", "NUMBER", "I", "be", "now", "use", "my", "script", "Python", "to", "send", "request", "checking", "the", "instance", "status", "after", "creating", "the", "stack", "use", "AWS", "cloudformation", "NUMBER", "It", "s", "a", "polling", "way", "to", "describe_instance_status", "every", "NUMBER", "seconds", "until", "a", "successful", "state", "be", "reached", "NUMBER", "python", "def", "wait_ec", "NUMBER", "_complate", "client", "instance_id", "this", "method", "be", "to", "make", "client", "keep", "sending", "request", "until", "ec", "NUMBER", "instance", "build", "complate", "or", "fail", "param", "client", "param", "instance_name", "return", "while", "True", "time", "NUMBER", "sleep", "NUMBER", "rsp", "client", "NUMBER", "describe_instance_status", "InstanceIds", "str", "instance_id", "IncludeAllInstances", "True", "double", "check", "NUMBER", "NUMBER", "status", "instance_status", "rsp", "InstanceStatuses", "NUMBER", "InstanceStatus", "Status", "system_status", "rsp", "InstanceStatuses", "NUMBER", "SystemStatus", "Status", "if", "str", "instance_status", "ok", "and", "str", "system_status", "ok", "status", "True", "break", "if", "str", "instance_status", "impaired", "or", "str", "instance_status", "insufficient", "data", "or", "str", "instance_status", "not", "applicable", "or", "str", "system_status", "fail", "or", "str", "system_status", "insufficient", "data", "status", "False", "print", "Instance", "status", "be", "str", "instance_status", "print", "System", "status", "be", "str", "system_status", "break", "if", "time", "POLL_TIMES", "break", "return", "status", "But", "it", "seems", "not", "a", "good", "solution", "NUMBER", "I", "try", "use", "cfn", "signal", "to", "check", "the", "instances", "status", "only", "to", "find", "out", "that", "when", "received", "signal", "the", "cloudformation", "stack", "be", "successfully", "created", "but", "the", "EC", "NUMBER", "instance", "be", "still", "be", "checked", "System", "check", "and", "Instance", "check", "NUMBER", "Then", "I", "add", "WaitCondition", "in", "my", "template", "to", "get", "callback", "signal", "from", "cfn", "signal", "NUMBER", "Sadly", "when", "the", "cloudformation", "stack", "successfully", "created", "I", "switched", "to", "the", "EC", "NUMBER", "instances", "manager", "to", "check", "instance", "s", "status", "NUMBER", "But", "it", "was", "still", "in", "the", "initializing", "progress", "NUMBER", "That", "s", "exactly", "what", "I", "worry", "about", "NUMBER", "The", "WaitCondition", "told", "me", "that", "the", "instance", "was", "ready", "to", "use", "but", "the", "EC", "NUMBER", "instances", "manager", "showed", "that", "the", "instance", "was", "still", "be", "checked", "NUMBER", "How", "do", "I", "know", "the", "instance", "be", "ready", "when", "use", "AWS", "cloudformatoin", "to", "start", "EC", "NUMBER", "instance", "NUMBER", "kyleknap", "Actually", "I", "have", "considered", "about", "use", "InstanceStatusOk", "LINK", "EC", "NUMBER", "Waiter", "NUMBER", "InstanceStatusOk", "to", "make", "sure", "the", "instance", "be", "ready", "NUMBER", "Will", "it", "be", "too", "often", "if", "I", "use", "both", "InstanceStatusOk", "LINK", "EC", "NUMBER", "Waiter", "NUMBER", "InstanceStatusOk", "and", "StackCreateComplete", "LINK", "CloudFormation", "NUMBER", "Waiter", "NUMBER", "StackCreateComplete", "to", "check", "status", "I", "doubt", "that", "AWS", "will", "take", "some", "actions", "on", "frequently", "api", "calling", "NUMBER", "That", "s", "why", "I", "would", "like", "to", "choose", "Cloudformation", "WaitCondition", "or", "CreationPolicy", "to", "avoid", "this", "NUMBER", "Hi", "there", "We", "re", "migrating", "an", "application", "from", "boto", "NUMBER", "to", "boto", "NUMBER", "and", "one", "of", "the", "sticking", "points", "be", "managing", "CORS", "rules", "NUMBER", "We", "use", "boto", "NUMBER", "with", "a", "pattern", "like", "this", "with", "buckets", "that", "we", "have", "access", "to", "but", "do", "not", "necessarily", "belong", "to", "us", "rule_id", "example", "try", "cors", "bucket", "NUMBER", "get_cors", "except", "boto", "NUMBER", "exception", "NUMBER", "S", "NUMBER", "ResponseError", "cors", "boto", "NUMBER", "s", "NUMBER", "cors", "NUMBER", "CORSConfiguration", "find", "False", "for", "rule", "in", "cors", "if", "rule", "NUMBER", "id", "html", "NUMBER", "_rule_id", "find", "True", "if", "not", "find", "cors", "NUMBER", "add_rule", "GET", "POST", "methods", "origins", "origins", "id", "example", "unique", "id", "allowed_header", "allow", "headers", "max_age_seconds", "NUMBER", "max", "age", "seconds", "bucket", "NUMBER", "set_cors", "cors", "This", "allows", "us", "to", "easily", "and", "safely", "create", "a", "new", "rule", "even", "if", "there", "be", "other", "CORS", "rules", "on", "the", "bucket", "that", "were", "created", "by", "someone", "else", "that", "we", "don", "t", "want", "to", "touch", "NUMBER", "Looking", "at", "the", "rules", "returned", "by", "Bucket", "NUMBER", "Cors", "NUMBER", "cors_rules", "in", "boto", "NUMBER", "the", "rule", "ID", "be", "not", "include", "in", "the", "returned", "parameters", "NUMBER", "Similarly", "setting", "a", "rule", "id", "doesn", "t", "seem", "to", "be", "possible", "via", "Cors", "NUMBER", "put", "NUMBER", "According", "to", "the", "AWS", "API", "documentation", "ID", "be", "still", "a", "valid", "element", "for", "CORS", "API", "request", "NUMBER", "Is", "there", "some", "other", "way", "to", "get", "at", "the", "ID", "of", "a", "CORS", "rule", "use", "boto", "NUMBER", "Thanks", "Hello", "I", "m", "not", "sure", "that", "this", "be", "the", "boto", "NUMBER", "issue", "but", "any", "help", "with", "this", "would", "be", "much", "appreciated", "NUMBER", "I", "have", "a", "script", "which", "creates", "DDB", "tables", "and", "writes", "some", "data", "to", "them", "NUMBER", "From", "time", "to", "time", "I", "m", "get", "tables", "with", "provisioned", "throughput", "both", "for", "read", "and", "writes", "which", "be", "not", "what", "I", "request", "NUMBER", "It", "happens", "randomly", "and", "I", "cannot", "reliably", "reproduce", "the", "issue", "NUMBER", "Autoscaling", "be", "disabled", "NUMBER", "Do", "you", "have", "any", "ideas", "why", "it", "happens", "Thanks", "much", "I", "would", "recommend", "contacting", "support", "NUMBER", "To", "help", "with", "your", "case", "you", "should", "keep", "a", "table", "alive", "that", "has", "invalid", "values", "NUMBER", "Also", "if", "you", "can", "record", "the", "request", "ID", "from", "the", "create", "call", "that", "will", "help", "them", "as", "well", "NUMBER", "You", "can", "get", "that", "by", "turning", "on", "debug", "logging", "like", "so", "boto", "NUMBER", "set_stream_logger", "botocore", "and", "searching", "for", "x", "amzn", "request", "id", "NUMBER", "Thank", "you", "Jordon", "NUMBER", "Unfortunately", "I", "killed", "the", "tables", "otherwise", "I", "would", "have", "to", "pay", "for", "extremely", "hight", "throughput", "which", "was", "created", "but", "I", "did", "contact", "the", "support", "NUMBER", "Hopefully", "they", "will", "be", "able", "to", "sort", "it", "out", "NUMBER", "Did", "anyone", "else", "observe", "a", "similar", "glitch", "From", "boto", "NUMBER", "elbv", "NUMBER", "docs", "LINK", "I", "couldn", "t", "find", "any", "way", "to", "filter", "ALB", "or", "target", "group", "by", "tag", "NUMBER", "It", "makes", "tags", "quite", "useless", "in", "ALB", "or", "target", "group", "NUMBER", "Is", "it", "a", "miss", "feature", "or", "technically", "it", "s", "not", "support", "by", "AWS", "Note", "I", "see", "from", "EC", "NUMBER", "Console", "or", "AWS", "CLI", "I", "couldn", "t", "search", "ALB", "or", "target", "group", "by", "tags", "either", "NUMBER", "So", "if", "it", "s", "a", "technical", "limitation", "just", "close", "this", "NUMBER", "Thanks", "NUMBER", "I", "want", "to", "do", "something", "like", "while", "True", "wait_until_sqs_data_is_available", "sqs", "non", "empty", "pull_data_from_sqs_and_use_it", "My", "question", "be", "how", "should", "I", "make", "the", "function", "wait_until_sqs_data_is_available", "Is", "something", "like", "while", "sqs_is_empty", "sleep", "NUMBER", "the", "best", "way", "to", "do", "this", "I", "just", "want", "to", "make", "sure", "I", "be", "not", "doing", "something", "bad", "inefficient", "and", "avoid", "re", "inventing", "the", "wheel", "Thank", "you", "Ok", "thank", "you", "for", "your", "help", "I", "will", "look", "into", "it", "So", "in", "the", "console", "I", "can", "click", "on", "a", "cluster", "name", "and", "see", "the", "tasks", "and", "services", "and", "instances", "run", "on", "it", "NUMBER", "I", "m", "trying", "to", "start", "with", "nothing", "and", "get", "to", "the", "tasks", "and", "services", "run", "on", "a", "cluster", "NUMBER", "So", "far", "I", "ve", "tried", "describe_clusters", "and", "I", "have", "a", "list", "of", "clusters", "NUMBER", "But", "I", "can", "t", "call", "describe_services", "or", "describe_tasks", "without", "knowing", "the", "ahead", "of", "time", "the", "name", "s", "of", "the", "services", "or", "tasks", "I", "want", "details", "on", "NUMBER", "How", "do", "I", "once", "I", "have", "the", "name", "of", "the", "cluster", "get", "the", "tasks", "and", "services", "information", "use", "boto", "NUMBER", "Yes", "it", "s", "true", "that", "those", "function", "you", "mention", "take", "cluster", "name", "as", "an", "argument", "but", "in", "each", "case", "the", "service", "or", "task", "name", "be", "also", "required", "which", "defeats", "my", "purpose", "NUMBER", "I", "tried", "to", "use", "the", "API", "recognize_celebrities", "use", "the", "following", "Python", "code", "client", "boto", "NUMBER", "client", "rekognition", "response", "client", "NUMBER", "recognize_celebrities", "Image", "S", "NUMBER", "Object", "Bucket", "srcBucket", "Name", "srcKey", "and", "get", "the", "following", "error", "Rekognition", "object", "has", "no", "attribute", "recognize_celebrities", "NUMBER", "I", "have", "be", "use", "all", "the", "other", "Rekognition", "APIs", "use", "boto", "NUMBER", "and", "they", "work", "fine", "but", "this", "do", "not", "NUMBER", "Any", "reasons", "why", "That", "worked", "NUMBER", "Thanks", "hi", "I", "did", "pip", "install", "boto", "NUMBER", "NUMBER", "and", "when", "I", "run", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "I", "get", "the", "error", "AttributeError", "module", "object", "has", "no", "attribute", "resource", "did", "I", "do", "anything", "wrong", "or", "be", "there", "a", "bug", "We", "recently", "get", "this", "error", "message", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "a", "NUMBER", "bc", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "c", "NUMBER", "bab", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "c", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "d", "NUMBER", "b", "NUMBER", "c", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "d", "NUMBER", "dbc", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "fa", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "ce", "NUMBER", "a", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "d", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "fe", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "c", "NUMBER", "ed", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "f", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "f", "NUMBER", "dbf", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "c", "NUMBER", "dfe", "NUMBER", "dc", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "c", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ab", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "ba", "NUMBER", "c", "NUMBER", "aae", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "b", "NUMBER", "d", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "f", "NUMBER", "f", "NUMBER", "e", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "c", "NUMBER", "f", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "c", "NUMBER", "dfc", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "b", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "dcb", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "d", "NUMBER", "afd", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "d", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "c", "NUMBER", "fe", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "be", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "b", "NUMBER", "fe", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "fa", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "fae", "NUMBER", "ac", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "c", "NUMBER", "bec", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "e", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "f", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "bd", "NUMBER", "c", "NUMBER", "d", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "be", "NUMBER", "b", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "b", "NUMBER", "ab", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "b", "NUMBER", "d", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "db", "NUMBER", "b", "NUMBER", "bd", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "be", "NUMBER", "a", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "dea", "NUMBER", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "d", "NUMBER", "dfc", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "ea", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "bce", "NUMBER", "d", "NUMBER", "ec", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "d", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "e", "NUMBER", "bb", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "d", "NUMBER", "cd", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "d", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "b", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "b", "NUMBER", "aaefa", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "eb", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "ca", "NUMBER", "ef", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "f", "NUMBER", "c", "NUMBER", "da", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "af", "NUMBER", "b", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "e", "NUMBER", "fa", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "f", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "ca", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "f", "NUMBER", "c", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "ccd", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "eba", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "a", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "df", "NUMBER", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "abc", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "e", "NUMBER", "cb", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "caba", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "f", "NUMBER", "abaab", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "f", "NUMBER", "ca", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "ee", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "bf", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "a", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "cdf", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "f", "NUMBER", "e", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "dff", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "af", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "eb", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "cf", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "bb", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "a", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "f", "NUMBER", "c", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "d", "NUMBER", "b", "NUMBER", "bf", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "ff", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "firehose", "NUMBER", "v", "NUMBER", "Record", "NUMBER", "be", "NUMBER", "df", "at", "records", "fail", "to", "satisfy", "constraint", "Member", "must", "have", "length", "less", "than", "or", "equal", "to", "NUMBER", "However", "since", "the", "message", "be", "too", "long", "the", "most", "important", "part", "of", "it", "which", "be", "the", "last", "raw", "was", "trimmed", "Please", "modify", "the", "error", "message", "so", "the", "important", "part", "will", "be", "first", "e", "NUMBER", "g", "NUMBER", "fail", "to", "satisfy", "constraint", "Member", "must", "have", "length", "less", "than", "or", "equal", "to", "NUMBER", "NUMBER", "stealthycoin", "Hmmm", "I", "see", "Odelya", "opened", "this", "on", "boto", "NUMBER", "but", "the", "error", "handle", "code", "be", "actually", "part", "of", "botocore", "should", "we", "reopen", "on", "it", "with", "more", "details", "or", "do", "you", "want", "me", "to", "add", "details", "here", "stealthycoin", "ping", "There", "be", "nothing", "we", "can", "do", "to", "change", "the", "output", "of", "an", "API", "NUMBER", "If", "you", "want", "to", "make", "a", "feature", "request", "to", "a", "service", "the", "best", "way", "to", "do", "that", "be", "open", "a", "support", "ticket", "LINK", "NUMBER", "python", "NUMBER", "boto", "NUMBER", "import", "boto", "NUMBER", "import", "json", "client", "boto", "NUMBER", "client", "iam", "policy_document", "Version", "NUMBER", "NUMBER", "NUMBER", "Statement", "Effect", "Allow", "Action", "s", "NUMBER", "Put", "Resource", "arn", "aws", "s", "NUMBER", "region", "account", "mybucket", "client", "NUMBER", "create_policy", "PolicyName", "my_policy", "PolicyDocument", "json", "NUMBER", "dumps", "policy_document", "While", "this", "results", "in", "the", "below", "log", "and", "the", "documentation", "clearly", "state", "the", "right", "format", "of", "an", "S", "NUMBER", "arn", "I", "would", "expect", "a", "ClientError", "to", "be", "raise", "NUMBER", "Response", "body", "b", "TAG", "n", "TAG", "n", "TAG", "Sender", "TAG", "n", "TAG", "MalformedPolicyDocument", "TAG", "n", "TAG", "Resource", "arn", "aws", "s", "NUMBER", "us", "west", "NUMBER", "NUMBER", "functest", "tenant", "NUMBER", "training", "can", "not", "contain", "region", "information", "NUMBER", "TAG", "n", "TAG", "n", "TAG", "c", "NUMBER", "a", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "bfb", "NUMBER", "c", "NUMBER", "TAG", "n", "TAG", "n", "botocore", "NUMBER", "do", "the", "job", "NUMBER", "Thanks", "Should", "have", "test", "this", "before", "file", "an", "issue", "NUMBER", "Python", "NUMBER", "Boto", "NUMBER", "Sample", "code", "import", "boto", "NUMBER", "iam", "boto", "NUMBER", "resource", "iam", "group", "iam", "NUMBER", "Group", "mygroup", "group", "NUMBER", "create", "Path", "mypath", "problem", "The", "code", "will", "fail", "since", "the", "provide", "path", "do", "not", "begin", "and", "end", "with", "NUMBER", "While", "the", "debug", "log", "shows", "the", "below", "I", "would", "have", "expected", "a", "ClientError", "exception", "NUMBER", "Response", "body", "b", "TAG", "n", "TAG", "n", "TAG", "Sender", "TAG", "n", "TAG", "ValidationError", "TAG", "n", "TAG", "The", "specified", "value", "for", "path", "be", "invalid", "NUMBER", "It", "must", "begin", "and", "end", "with", "and", "contain", "only", "alphanumeric", "characters", "and", "or", "characters", "NUMBER", "TAG", "n", "TAG", "n", "TAG", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "aff", "NUMBER", "NUMBER", "e", "NUMBER", "bc", "TAG", "n", "TAG", "n", "Upgraded", "botocore", "from", "NUMBER", "to", "NUMBER", "and", "the", "problem", "be", "resolve", "NUMBER", "Thanks", "very", "much", "for", "the", "prompt", "reply", "NUMBER", "Is", "it", "possible", "to", "read", "my", "configs", "atleast", "S", "NUMBER", "configs", "from", "a", "s", "NUMBER", "cfg", "file", "My", "usecase", "be", "to", "currently", "only", "use", "S", "NUMBER", "This", "would", "make", "a", "lot", "of", "things", "simpler", "for", "me", "as", "I", "d", "be", "able", "to", "use", "the", "same", "config", "for", "both", "s", "NUMBER", "cmd", "boto", "NUMBER", "etc", "NUMBER", "python", "s", "NUMBER", "_con", "boto", "NUMBER", "client", "s", "NUMBER", "aws_access_key_id", "xxxxx", "aws_secret_access_key", "xxxxx", "config", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "region_name", "AWS_SETUP", "S", "NUMBER", "region", "url", "s", "NUMBER", "_con", "NUMBER", "generate_presigned_url", "put_object", "Params", "Bucket", "AWS_SETUP", "S", "NUMBER", "bucket_name", "Key", "key", "ContentType", "image", "jpg", "ExpiresIn", "AWS_SETUP", "S", "NUMBER", "expiresInsecs", "HttpMethod", "PUT", "print", "url", "Above", "code", "be", "my", "python", "code", "which", "generating", "sign", "url", "but", "when", "I", "be", "trying", "to", "upload", "image", "use", "sign", "url", "I", "be", "get", "error", "message", "from", "AWS", "SignatureDoesNotMatch", "If", "I", "will", "remove", "ContentType", "from", "above", "code", "I", "be", "able", "to", "upload", "image", "but", "content", "type", "be", "set", "as", "application", "x", "www", "form", "urlencoded", "charset", "UTF", "NUMBER", "NUMBER", "I", "have", "to", "set", "content", "type", "as", "image", "jpg", "or", "image", "png", "because", "while", "accessing", "I", "have", "to", "send", "it", "to", "the", "third", "party", "application", "who", "needs", "content", "type", "to", "be", "set", "properly", "NUMBER", "I", "be", "very", "new", "to", "AWS", "section", "integration", "NUMBER", "How", "be", "you", "trying", "to", "upload", "the", "image", "Could", "you", "show", "a", "sample", "code", "snippet", "or", "command", "you", "run", "to", "get", "the", "SignatureDoesNotMatch", "html", "TAG", "TAG", "TAG", "TAG", "TAG", "Remember", "to", "include", "jQuery", "somewhere", "NUMBER", "Remember", "to", "include", "jQuery", "somewhere", "NUMBER", "document", "NUMBER", "ready", "function", "prisigned_url", "REDACTED", "function", "theForm", "NUMBER", "on", "submit", "sendFile", "function", "sendFile", "e", "e", "NUMBER", "preventDefault", "get", "the", "reference", "to", "the", "actual", "file", "in", "the", "input", "var", "theFormFile", "theFile", "NUMBER", "get", "NUMBER", "NUMBER", "file", "NUMBER", "NUMBER", "ajax", "type", "PUT", "url", "prisigned_url", "server", "will", "send", "presigned", "url", "to", "upload", "image", "expires", "in", "NUMBER", "Content", "type", "must", "much", "with", "the", "parameter", "you", "sign", "your", "URL", "with", "contentType", "binary", "octet", "stream", "this", "flag", "be", "important", "if", "not", "set", "it", "will", "try", "to", "send", "data", "as", "a", "form", "ContentType", "image", "jpg", "processData", "false", "the", "actual", "file", "be", "sent", "raw", "data", "theFormFile", "NUMBER", "success", "function", "file", "response", "console", "NUMBER", "log", "file", "file", "console", "NUMBER", "log", "response", "response", "alert", "File", "uploaded", "NUMBER", "error", "function", "alert", "File", "NOT", "uploaded", "console", "NUMBER", "log", "argument", "return", "false", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "send", "NUMBER", "TAG", "TAG", "TAG", "TAG", "above", "code", "be", "my", "javascript", "ajax", "call", "and", "html", "NUMBER", "where", "I", "be", "use", "preassigned", "URL", "NUMBER", "Thank", "you", "I", "will", "try", "and", "come", "back", "to", "you", "NUMBER", "On", "Tue", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "John", "Carlyle", "TAG", "write", "You", "need", "to", "make", "sure", "that", "bucket", "s", "CORS", "config", "be", "set", "to", "accept", "the", "content", "type", "header", "NUMBER", "When", "you", "make", "the", "PUT", "request", "ajax", "makes", "a", "preflight", "OPTIONS", "request", "to", "see", "if", "the", "request", "it", "be", "about", "to", "make", "be", "allow", "NUMBER", "S", "NUMBER", "will", "check", "the", "preflight", "headers", "against", "that", "buckets", "cors", "config", "object", "to", "ensure", "everything", "be", "allow", "NUMBER", "Since", "by", "default", "the", "Content", "Type", "header", "be", "not", "in", "the", "list", "of", "allow", "headers", "the", "preflight", "request", "will", "fail", "and", "ajax", "will", "not", "make", "the", "PUT", "request", "NUMBER", "Here", "be", "a", "cors", "config", "document", "that", "works", "for", "me", "with", "your", "script", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "GET", "TAG", "TAG", "PUT", "TAG", "TAG", "NUMBER", "TAG", "TAG", "GET", "TAG", "TAG", "PUT", "TAG", "TAG", "Authorization", "TAG", "TAG", "Content", "Type", "TAG", "TAG", "TAG", "All", "I", "did", "was", "add", "that", "last", "TAG", "Content", "Type", "TAG", "line", "to", "the", "default", "one", "NUMBER", "That", "config", "worked", "for", "the", "following", "two", "scripts", "to", "presign", "the", "url", "and", "upload", "the", "image", "Generate", "the", "presigned", "url", "import", "boto", "NUMBER", "import", "botocore", "s", "NUMBER", "_con", "boto", "NUMBER", "client", "s", "NUMBER", "url", "s", "NUMBER", "_con", "NUMBER", "generate_presigned_url", "put_object", "Params", "Bucket", "bucket_name", "Key", "img", "NUMBER", "jpg", "ContentType", "image", "jpg", "ExpiresIn", "NUMBER", "print", "url", "Ajax", "call", "to", "upload", "presigned_url", "NUMBER", "function", "sendFile", "e", "e", "NUMBER", "preventDefault", "get", "the", "reference", "to", "the", "actual", "file", "in", "the", "input", "var", "theFormFile", "theFile", "NUMBER", "get", "NUMBER", "NUMBER", "file", "NUMBER", "NUMBER", "ajax", "type", "PUT", "url", "presigned_url", "contentType", "image", "jpg", "processData", "false", "data", "theFormFile", "NUMBER", "success", "function", "file", "response", "console", "NUMBER", "log", "file", "file", "console", "NUMBER", "log", "response", "response", "alert", "File", "uploaded", "NUMBER", "error", "function", "alert", "File", "NOT", "uploaded", "console", "NUMBER", "log", "argument", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Hi", "Still", "I", "be", "get", "same", "error", "NUMBER", "I", "have", "setup", "following", "things", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "GET", "TAG", "TAG", "PUT", "TAG", "TAG", "NUMBER", "TAG", "TAG", "GET", "TAG", "TAG", "PUT", "TAG", "TAG", "Authorization", "TAG", "TAG", "Content", "Type", "TAG", "TAG", "TAG", "Policy", "Version", "NUMBER", "NUMBER", "NUMBER", "Id", "Policy", "NUMBER", "Statement", "Sid", "Stmt", "NUMBER", "Effect", "Allow", "Principal", "Action", "s", "NUMBER", "GetObject", "Resource", "arn", "aws", "s", "NUMBER", "piruby", "image", "test", "Sid", "Stmt", "NUMBER", "Effect", "Allow", "Principal", "AWS", "arn", "aws", "iam", "NUMBER", "user", "shashank", "Action", "s", "NUMBER", "DeleteObject", "s", "NUMBER", "GetObject", "s", "NUMBER", "PutObject", "s", "NUMBER", "PutObjectAcl", "s", "NUMBER", "PutObjectTagging", "Resource", "arn", "aws", "s", "NUMBER", "piruby", "image", "test", "s", "NUMBER", "_con", "boto", "NUMBER", "client", "s", "NUMBER", "aws_access_key_id", "xxxxx", "aws_secret_access_key", "xxxxxx", "config", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "region_name", "xxxx", "url", "s", "NUMBER", "_con", "NUMBER", "generate_presigned_url", "put_object", "Params", "Bucket", "bucket_name", "Key", "key", "ContentType", "image", "jpg", "ExpiresIn", "NUMBER", "HttpMethod", "PUT", "TAG", "TAG", "TAG", "TAG", "TAG", "Remember", "to", "include", "jQuery", "somewhere", "NUMBER", "Remember", "to", "include", "jQuery", "somewhere", "NUMBER", "document", "NUMBER", "ready", "function", "prisigned_url", "LINK", "south", "NUMBER", "amazonaws", "NUMBER", "com", "piruby", "image", "test", "ashish", "NUMBER", "g", "NUMBER", "pacewisdom", "NUMBER", "com", "NUMBER", "jpg", "X", "Amz", "Algorithm", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "X", "Amz", "Credential", "AKIAJZ", "NUMBER", "CFUPGRTXVSYWA", "NUMBER", "F", "NUMBER", "NUMBER", "Fap", "south", "NUMBER", "NUMBER", "Fs", "NUMBER", "NUMBER", "Faws", "NUMBER", "_request", "X", "Amz", "Date", "NUMBER", "T", "NUMBER", "Z", "X", "Amz", "Expires", "NUMBER", "X", "Amz", "SignedHeaders", "content", "type", "NUMBER", "Bhost", "X", "Amz", "Signature", "b", "NUMBER", "eafdb", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "daf", "NUMBER", "b", "NUMBER", "b", "NUMBER", "fbd", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "function", "theForm", "NUMBER", "on", "submit", "sendFile", "function", "sendFile", "e", "e", "NUMBER", "preventDefault", "get", "the", "reference", "to", "the", "actual", "file", "in", "the", "input", "var", "theFormFile", "theFile", "NUMBER", "get", "NUMBER", "NUMBER", "file", "NUMBER", "NUMBER", "ajax", "type", "PUT", "url", "prisigned_url", "server", "will", "send", "presigned", "url", "to", "upload", "image", "expires", "in", "NUMBER", "Content", "type", "must", "much", "with", "the", "parameter", "you", "sign", "your", "URL", "with", "x", "amz", "meta", "contentType", "binary", "octet", "stream", "this", "flag", "be", "important", "if", "not", "set", "it", "will", "try", "to", "send", "data", "as", "a", "form", "x", "amz", "meta", "ContentType", "image", "jpeg", "processData", "false", "the", "actual", "file", "be", "sent", "raw", "data", "theFormFile", "NUMBER", "success", "function", "file", "response", "console", "NUMBER", "log", "file", "file", "console", "NUMBER", "log", "response", "response", "alert", "File", "uploaded", "NUMBER", "error", "function", "alert", "File", "NOT", "uploaded", "console", "NUMBER", "log", "argument", "return", "false", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "send", "NUMBER", "TAG", "TAG", "TAG", "TAG", "Please", "let", "me", "know", "the", "issue", "with", "my", "code", "NUMBER", "On", "Wed", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Ashish", "Gupta", "TAG", "write", "Thank", "you", "I", "will", "try", "and", "come", "back", "to", "you", "NUMBER", "On", "Tue", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "John", "Carlyle", "TAG", "write", "You", "need", "to", "make", "sure", "that", "bucket", "s", "CORS", "config", "be", "set", "to", "accept", "the", "content", "type", "header", "NUMBER", "When", "you", "make", "the", "PUT", "request", "ajax", "makes", "a", "preflight", "OPTIONS", "request", "to", "see", "if", "the", "request", "it", "be", "about", "to", "make", "be", "allow", "NUMBER", "S", "NUMBER", "will", "check", "the", "preflight", "headers", "against", "that", "buckets", "cors", "config", "object", "to", "ensure", "everything", "be", "allow", "NUMBER", "Since", "by", "default", "the", "Content", "Type", "header", "be", "not", "in", "the", "list", "of", "allow", "headers", "the", "preflight", "request", "will", "fail", "and", "ajax", "will", "not", "make", "the", "PUT", "request", "NUMBER", "Here", "be", "a", "cors", "config", "document", "that", "works", "for", "me", "with", "your", "script", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "GET", "TAG", "TAG", "PUT", "TAG", "TAG", "NUMBER", "TAG", "TAG", "GET", "TAG", "TAG", "PUT", "TAG", "TAG", "Authorization", "TAG", "TAG", "Content", "Type", "TAG", "TAG", "TAG", "All", "I", "did", "was", "add", "that", "last", "TAG", "Content", "Type", "TAG", "line", "to", "the", "default", "one", "NUMBER", "That", "config", "worked", "for", "the", "following", "two", "scripts", "to", "presign", "the", "url", "and", "upload", "the", "image", "Generate", "the", "presigned", "url", "import", "boto", "NUMBER", "import", "botocore", "s", "NUMBER", "_con", "boto", "NUMBER", "client", "s", "NUMBER", "url", "s", "NUMBER", "_con", "NUMBER", "generate_presigned_url", "put_object", "Params", "Bucket", "bucket_name", "Key", "img", "NUMBER", "jpg", "ContentType", "image", "jpg", "ExpiresIn", "NUMBER", "print", "url", "Ajax", "call", "to", "upload", "presigned_url", "NUMBER", "function", "sendFile", "e", "e", "NUMBER", "preventDefault", "get", "the", "reference", "to", "the", "actual", "file", "in", "the", "input", "var", "theFormFile", "theFile", "NUMBER", "get", "NUMBER", "NUMBER", "file", "NUMBER", "NUMBER", "ajax", "type", "PUT", "url", "presigned_url", "contentType", "image", "jpg", "processData", "false", "data", "theFormFile", "NUMBER", "success", "function", "file", "response", "console", "NUMBER", "log", "file", "file", "console", "NUMBER", "log", "response", "response", "alert", "File", "uploaded", "NUMBER", "error", "function", "alert", "File", "NOT", "uploaded", "console", "NUMBER", "log", "argument", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "don", "t", "know", "what", "the", "particular", "issue", "with", "your", "code", "be", "NUMBER", "I", "would", "suggest", "you", "open", "a", "question", "on", "stackoverflow", "about", "it", "NUMBER", "We", "don", "t", "have", "the", "bandwidth", "here", "to", "deal", "with", "question", "NUMBER", "I", "have", "a", "function", "that", "looks", "something", "like", "this", "python", "def", "break_up", "zip", "bucket", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "client", "session", "NUMBER", "client", "s", "NUMBER", "open", "the", "zip", "file", "object", "and", "iterate", "over", "its", "file", "for", "filename", "fileobj", "filesize", "in", "unpack", "zip", "try", "existing_object", "client", "NUMBER", "head_object", "Bucket", "bucket", "Key", "filename", "if", "existing_object", "ContentLength", "filesize", "Already", "have", "this", "in", "S", "NUMBER", "no", "need", "to", "upload", "again", "continue", "update", "True", "new", "False", "except", "ClientError", "as", "ex", "if", "exception", "NUMBER", "response", "Error", "Code", "NUMBER", "update", "False", "new", "True", "Now", "upload", "the", "file", "into", "S", "NUMBER", "client", "NUMBER", "put_object", "Bucket", "bucket", "Key", "filename", "Body", "fileobj", "NUMBER", "do", "some", "logging", "based", "on", "update", "and", "new", "Note", "I", "didn", "t", "copy", "n", "paste", "my", "real", "code", "NUMBER", "Tried", "to", "dumb", "it", "down", "to", "the", "bare", "essentials", "for", "the", "sake", "of", "this", "issue", "So", "as", "you", "can", "see", "it", "opens", "a", "NUMBER", "zip", "file", "for", "each", "file", "within", "it", "do", "a", "HeadObject", "followed", "by", "a", "PutObject", "if", "the", "file", "needs", "to", "be", "uploaded", "again", "NUMBER", "The", "code", "works", "NUMBER", "For", "a", "NUMBER", "zip", "file", "with", "about", "NUMBER", "file", "the", "whole", "thing", "finishes", "in", "a", "couple", "of", "seconds", "NUMBER", "However", "I", "get", "this", "logging", "output", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "worker_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "Sorry", "for", "the", "format", "NUMBER", "It", "comes", "from", "my", "Celery", "task", "worker", "The", "point", "be", "even", "though", "I", "reuse", "the", "same", "session", "all", "within", "under", "NUMBER", "seconds", "it", "seems", "to", "make", "a", "new", "connection", "each", "time", "NUMBER", "Either", "this", "be", "user", "error", "or", "a", "bug", "in", "that", "it", "s", "unable", "to", "re", "use", "an", "established", "HTTP", "connection", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "Not", "able", "to", "repro", "this", "NUMBER", "We", "rely", "on", "request", "urllib", "NUMBER", "to", "do", "the", "connection", "pooling", "for", "us", "NUMBER", "Given", "the", "short", "duration", "in", "your", "logs", "the", "only", "think", "I", "can", "think", "of", "for", "why", "it", "s", "creating", "a", "new", "connection", "would", "be", "if", "these", "request", "happen", "in", "separate", "threads", "NUMBER", "If", "I", "try", "this", "script", "below", "I", "only", "get", "a", "single", "connection", "file", "tmp", "test", "NUMBER", "py", "import", "boto", "NUMBER", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "set_stream_logger", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "s", "NUMBER", "session", "NUMBER", "client", "s", "NUMBER", "s", "NUMBER", "put_object", "Bucket", "bucketname", "here", "Key", "asdfasdf", "Body", "b", "asdfadf", "s", "NUMBER", "put_object", "Bucket", "bucketname", "here", "Key", "asdfasdf", "Body", "b", "asdfadf", "s", "NUMBER", "put_object", "Bucket", "bucketname", "here", "Key", "asdfasdf", "Body", "b", "asdfadf", "s", "NUMBER", "put_object", "Bucket", "bucketname", "here", "Key", "asdfasdf", "Body", "b", "asdfadf", "s", "NUMBER", "put_object", "Bucket", "bucketname", "here", "Key", "asdfasdf", "Body", "b", "asdfadf", "s", "NUMBER", "put_object", "Bucket", "bucketname", "here", "Key", "asdfasdf", "Body", "b", "asdfadf", "I", "get", "python", "tmp", "test", "NUMBER", "py", "NUMBER", "NUMBER", "grep", "connectionpool", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTPS", "connection", "NUMBER", "bucketname", "here", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "asdfasdf", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "asdfasdf", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "asdfasdf", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "asdfasdf", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "asdfasdf", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "asdfasdf", "HTTP", "NUMBER", "NUMBER", "NUMBER", "If", "you", "try", "my", "script", "replacing", "with", "your", "own", "bucket", "name", "do", "you", "get", "similar", "output", "Hmm", "NUMBER", "I", "can", "t", "reproduce", "it", "myself", "either", "NUMBER", "python", "from", "botocore", "NUMBER", "exception", "import", "ClientError", "import", "boto", "NUMBER", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "set_stream_logger", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "s", "NUMBER", "session", "NUMBER", "client", "s", "NUMBER", "B", "symbols", "public", "dev", "K", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "for", "i", "in", "range", "NUMBER", "try", "s", "NUMBER", "head_object", "Bucket", "B", "Key", "K", "print", "EXISTED", "ALREADY", "except", "ClientError", "as", "exc", "if", "exc", "NUMBER", "response", "Error", "Code", "NUMBER", "print", "DID", "NOT", "EXIST", "else", "raise", "s", "NUMBER", "put_object", "Bucket", "B", "Key", "K", "Body", "b", "asdfasdf", "and", "the", "output", "root", "NUMBER", "ffb", "NUMBER", "e", "NUMBER", "bd", "app", "python", "boto", "NUMBER", "_issue_", "NUMBER", "_", "NUMBER", "py", "NUMBER", "NUMBER", "grep", "connectionpool", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTPS", "connection", "NUMBER", "symbols", "public", "dev", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "test_boto", "NUMBER", "_issue_", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "I", "need", "to", "dig", "deeper", "to", "see", "what", "of", "the", "environment", "that", "s", "cause", "the", "recreation", "of", "a", "connection", "NUMBER", "A", "ha", "I", "figured", "it", "out", "NUMBER", "At", "least", "how", "to", "reproduce", "it", "NUMBER", "Consider", "this", "change", "python", "from", "botocore", "NUMBER", "exception", "import", "ClientError", "import", "boto", "NUMBER", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "set_stream_logger", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "s", "NUMBER", "session", "NUMBER", "client", "s", "NUMBER", "B", "symbols", "public", "dev", "K_base", "test_boto", "NUMBER", "_issue_", "NUMBER", "_", "NUMBER", "txt", "import", "random", "for", "i", "in", "range", "NUMBER", "K", "K_base", "NUMBER", "format", "random", "NUMBER", "random", "try", "s", "NUMBER", "head_object", "Bucket", "B", "Key", "K", "print", "EXISTED", "ALREADY", "except", "ClientError", "as", "exc", "if", "exc", "NUMBER", "response", "Error", "Code", "NUMBER", "print", "DID", "NOT", "EXIST", "else", "raise", "s", "NUMBER", "put_object", "Bucket", "B", "Key", "K", "Body", "b", "asdfasdf", "Now", "the", "filename", "aka", "NUMBER", "key", "name", "be", "always", "different", "so", "every", "time", "it", "checks", "if", "the", "file", "be", "there", "it", "concludes", "that", "it", "needs", "to", "do", "the", "s", "NUMBER", "put_object", "NUMBER", "If", "you", "do", "that", "you", "get", "Starting", "new", "HTTPS", "connection", "for", "every", "iteration", "in", "the", "loop", "NUMBER", "I", "suspect", "that", "because", "the", "there", "s", "an", "exception", "frame", "it", "resets", "the", "connection", "NUMBER", "Do", "you", "know", "a", "different", "way", "to", "ask", "if", "the", "file", "exists", "without", "having", "to", "rely", "on", "try", "except", "ClientError", "For", "the", "record", "my", "code", "above", "be", "a", "bit", "nuts", "because", "it", "do", "the", "s", "NUMBER", "pub_object", "independent", "of", "the", "business", "logic", "lines", "above", "NUMBER", "In", "my", "real", "app", "I", "only", "do", "the", "put_object", "if", "the", "file", "did", "not", "exist", "NUMBER", "Sure", "enough", "if", "you", "do", "this", "logic", "instead", "it", "works", "python", "for", "i", "in", "range", "NUMBER", "K", "K_base", "NUMBER", "format", "random", "NUMBER", "random", "response", "s", "NUMBER", "list_objects", "Bucket", "B", "Prefix", "K", "existing_keys", "x", "Key", "for", "x", "in", "response", "Contents", "if", "K", "in", "existing_keys", "print", "EXISTED", "ALREADY", "else", "print", "DID", "NOT", "EXIST", "s", "NUMBER", "put_object", "Bucket", "B", "Key", "K", "Body", "b", "asdfasdf", "So", "the", "bug", "here", "be", "that", "raising", "an", "exception", "do", "reset", "any", "connections", "NUMBER", "Now", "I", "wonder", "if", "it", "s", "ANY", "exception", "or", "just", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "NUMBER", "I", "injected", "an", "error", "NUMBER", "python", "try", "NUMBER", "NUMBER", "except", "Exception", "pass", "in", "the", "loop", "and", "it", "didn", "t", "reset", "the", "connection", "NUMBER", "For", "the", "record", "the", "problem", "with", "starting", "a", "new", "connection", "only", "happens", "if", "you", "do", "a", "put_object", "after", "the", "exception", "has", "happened", "NUMBER", "Possibly", "relate", "to", "LINK", "peterbe", "joguSD", "it", "be", "the", "same", "issue", "as", "LINK", "peterbe", "the", "reason", "you", "see", "new", "connections", "after", "an", "error", "be", "because", "S", "NUMBER", "responses", "on", "error", "sets", "the", "Transfer", "Encoding", "to", "chunked", "which", "triggers", "this", "bug", "in", "urllib", "NUMBER", "LINK", "You", "can", "turn", "on", "logging", "wire", "logs", "and", "see", "the", "problem", "first", "hand", "send", "HEAD", "TAG", "TAG", "HTTP", "NUMBER", "r", "nHost", "s", "NUMBER", "amazonaws", "NUMBER", "com", "r", "nAccept", "Encoding", "identity", "r", "nX", "Amz", "Content", "SHA", "NUMBER", "TAG", "r", "nAuthorization", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "Credential", "TAG", "NUMBER", "us", "east", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "SignedHeaders", "host", "x", "amz", "content", "sha", "NUMBER", "x", "amz", "date", "Signature", "TAG", "r", "nX", "Amz", "Date", "NUMBER", "T", "NUMBER", "Z", "r", "nUser", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "amd", "NUMBER", "Botocore", "NUMBER", "r", "n", "r", "n", "reply", "HTTP", "NUMBER", "NUMBER", "OK", "r", "n", "header", "x", "amz", "id", "NUMBER", "DqWO", "NUMBER", "cXvRMm", "NUMBER", "NyS", "NUMBER", "FzftvtxaG", "NUMBER", "vzCEfwxLsujOj", "NUMBER", "gvnsxVe", "ITcUoKlQrcpnwgu", "NUMBER", "cSPRkP", "NUMBER", "lQI", "header", "x", "amz", "request", "id", "F", "NUMBER", "D", "NUMBER", "A", "NUMBER", "AB", "NUMBER", "header", "Date", "Sat", "NUMBER", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "header", "Last", "Modified", "Sat", "NUMBER", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "header", "ETag", "d", "NUMBER", "d", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ecf", "NUMBER", "e", "header", "Accept", "Ranges", "bytes", "header", "Content", "Type", "binary", "octet", "stream", "header", "Content", "Length", "NUMBER", "header", "Server", "AmazonS", "NUMBER", "send", "HEAD", "TAG", "TAG", "HTTP", "NUMBER", "r", "nHost", "s", "NUMBER", "amazonaws", "NUMBER", "com", "r", "nAccept", "Encoding", "identity", "r", "nX", "Amz", "Content", "SHA", "NUMBER", "TAG", "r", "nAuthorization", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "Credential", "TAG", "NUMBER", "us", "east", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "SignedHeaders", "host", "x", "amz", "content", "sha", "NUMBER", "x", "amz", "date", "Signature", "TAG", "r", "nX", "Amz", "Date", "NUMBER", "T", "NUMBER", "Z", "r", "nUser", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "amd", "NUMBER", "Botocore", "NUMBER", "r", "n", "r", "n", "reply", "HTTP", "NUMBER", "NUMBER", "Not", "Found", "r", "n", "header", "x", "amz", "request", "id", "NUMBER", "EEF", "NUMBER", "DFB", "NUMBER", "CE", "NUMBER", "header", "x", "amz", "id", "NUMBER", "yPx", "NUMBER", "Sq", "Par", "NUMBER", "pQ", "NUMBER", "SfBT", "NUMBER", "FTH", "NUMBER", "XrukfcOlRpVNzM", "NUMBER", "Yy", "NUMBER", "KEioRtaRWoAz", "NUMBER", "heZNaq", "mCuurNmo", "NUMBER", "x", "NUMBER", "sY", "header", "Content", "Type", "application", "xml", "header", "Transfer", "Encoding", "chunked", "header", "Date", "Sat", "NUMBER", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "header", "Server", "AmazonS", "NUMBER", "In", "the", "first", "case", "the", "key", "exists", "and", "there", "be", "no", "Transfer", "Encoding", "header", "NUMBER", "In", "the", "second", "case", "the", "key", "do", "not", "exist", "the", "Transfer", "Encoding", "chunked", "header", "be", "set", "and", "the", "connection", "be", "not", "release", "the", "last", "part", "I", "omitted", "NUMBER", "One", "of", "these", "bug", "should", "be", "set", "as", "the", "dup", "of", "the", "other", "NUMBER", "Hi", "I", "have", "created", "s", "NUMBER", "bucket", "use", "saltstack", "NUMBER", "Im", "get", "error", "when", "trying", "to", "set", "expiration", "policy", "please", "let", "me", "know", "if", "im", "miss", "something", "NUMBER", "Im", "trying", "the", "below", "command", "salt", "run", "salt", "NUMBER", "cmd", "boto_s", "NUMBER", "_bucket", "NUMBER", "put_lifecycle_configuration", "TAG", "Expiration", "Days", "NUMBER", "Status", "enable", "Prefix", "prefixstring", "region", "us", "east", "NUMBER", "key", "TAG", "keyid", "TAG", "l", "debug", "Error", "I", "m", "get", "An", "error", "occur", "MalformedXML", "when", "calling", "the", "PutBucketLifecycleConfiguration", "operation", "The", "XML", "you", "provide", "was", "not", "well", "formed", "or", "did", "not", "validate", "against", "our", "publish", "schema", "Quick", "help", "would", "be", "appreciated", "NUMBER", "Can", "you", "show", "me", "a", "python", "code", "snippet", "I", "thought", "maybe", "this", "was", "use", "the", "bucket", "resource", "but", "there", "be", "no", "put_lifecycle_configuration", "on", "a", "bucket", "object", "so", "I", "m", "not", "exactly", "sure", "what", "method", "you", "re", "trying", "to", "call", "NUMBER", "Here", "s", "the", "docs", "for", "put_bucket_lifecycle_configuration", "that", "might", "help", "LINK", "S", "NUMBER", "Client", "NUMBER", "put_bucket_lifecycle_configuration", "Sorry", "my", "bad", "NUMBER", "Forgot", "to", "add", "the", "resource", "on", "which", "I", "was", "trying", "to", "execute", "NUMBER", "Original", "command", "was", "like", "this", "salt", "run", "salt", "NUMBER", "cmd", "boto_s", "NUMBER", "_bucket", "NUMBER", "put_lifecycle_configuration", "test", "NUMBER", "bucket", "Expiration", "Days", "NUMBER", "Status", "enable", "Prefix", "prefixstring", "region", "us", "east", "NUMBER", "key", "keyid", "l", "debug", "Any", "update", "for", "the", "above", "The", "issue", "I", "find", "in", "my", "case", "be", "that", "boto", "NUMBER", "doesn", "t", "require", "a", "prefix", "but", "the", "api", "do", "NUMBER", "If", "I", "set", "be", "empty", "Prefix", "with", "Prefix", "it", "worked", "for", "me", "NUMBER", "response", "client", "NUMBER", "put_bucket_lifecycle_configuration", "Bucket", "foobar", "NUMBER", "log", "LifecycleConfiguration", "Rules", "Expiration", "Days", "NUMBER", "ID", "NUMBER", "days", "to", "glacier", "Prefix", "Status", "Enabled", "Transitions", "Days", "NUMBER", "StorageClass", "GLACIER", "NoncurrentVersionTransitions", "NoncurrentDays", "NUMBER", "StorageClass", "GLACIER", "NoncurrentVersionExpiration", "NoncurrentDays", "NUMBER", "Same", "error", "still", "An", "error", "occur", "MalformedXML", "when", "calling", "the", "PutBucketLifecycleConfiguration", "operation", "The", "XML", "you", "provide", "was", "not", "well", "formed", "or", "did", "not", "validate", "against", "our", "publish", "schema", "I", "think", "there", "be", "issue", "with", "the", "input", "provide", "from", "me", "NUMBER", "Could", "someone", "please", "help", "me", "identifying", "the", "issue", "salt", "run", "salt", "NUMBER", "cmd", "boto_s", "NUMBER", "_bucket", "NUMBER", "put_lifecycle_configuration", "s", "NUMBER", "buckettest", "Expiration", "Days", "NUMBER", "Status", "enable", "Prefix", "region", "us", "east", "NUMBER", "key", "keyid", "l", "debug", "I", "be", "another", "salt", "user", "NUMBER", "The", "salt", "run", "command", "be", "part", "of", "Saltstack", "a", "configuration", "management", "tool", "NUMBER", "I", "was", "run", "into", "this", "error", "message", "in", "the", "same", "context", "as", "bhanukumar", "NUMBER", "NUMBER", "Yes", "I", "m", "run", "this", "in", "a", "command", "line", "NUMBER", "Saltstack", "support", "boto", "NUMBER", "modules", "NUMBER", "Just", "to", "chime", "in", "I", "m", "seeing", "this", "as", "well", "but", "I", "m", "trying", "to", "run", "it", "from", "a", "state", "instead", "NUMBER", "The", "relevant", "code", "block", "test", "s", "NUMBER", "boto_s", "NUMBER", "_bucket", "NUMBER", "present", "name", "test", "s", "NUMBER", "Bucket", "test", "s", "NUMBER", "saltstack", "NUMBER", "example", "LifecycleConfiguration", "Expiration", "Days", "NUMBER", "ID", "expire", "storage", "Status", "enable", "profile", "profile", "and", "the", "response", "when", "run", "ERROR", "Failed", "to", "create", "bucket", "An", "error", "occur", "MalformedXML", "when", "calling", "the", "PutBucketLifecycleConfiguration", "operation", "The", "XML", "you", "provide", "was", "not", "well", "formed", "or", "did", "not", "validate", "against", "our", "publish", "schema", "NUMBER", "local", "ID", "test", "s", "NUMBER", "Function", "boto_s", "NUMBER", "_bucket", "NUMBER", "present", "Result", "False", "Comment", "Failed", "to", "create", "bucket", "An", "error", "occur", "MalformedXML", "when", "calling", "the", "PutBucketLifecycleConfiguration", "operation", "The", "XML", "you", "provide", "was", "not", "well", "formed", "or", "did", "not", "validate", "against", "our", "publish", "schema", "NUMBER", "Started", "NUMBER", "NUMBER", "NUMBER", "Duration", "NUMBER", "ms", "Changes", "Edit", "Including", "a", "link", "to", "the", "saltstack", "documentation", "about", "the", "topic", "LINK", "_s", "NUMBER", "_bucket", "NUMBER", "html", "salt", "NUMBER", "ates", "NUMBER", "boto_s", "NUMBER", "_bucket", "NUMBER", "present", "bhanukumar", "NUMBER", "I", "have", "the", "solution", "NUMBER", "The", "Status", "argument", "MUST", "be", "capitalized", "NUMBER", "ie", "Status", "enable", "will", "fail", "but", "Status", "Enabled", "will", "succeed", "I", "just", "tried", "with", "the", "same", "state", "file", "which", "you", "use", "NUMBER", "Still", "get", "same", "error", "test", "s", "NUMBER", "boto_s", "NUMBER", "_bucket", "NUMBER", "present", "name", "test", "s", "NUMBER", "Bucket", "bhanu", "NUMBER", "LifecycleConfiguration", "Expiration", "Days", "NUMBER", "ID", "expire", "storage", "Status", "Enabled", "region", "us", "NUMBER", "key", "NUMBER", "keyid", "NUMBER", "Got", "below", "error", "master", "ID", "test", "s", "NUMBER", "Function", "boto_s", "NUMBER", "_bucket", "NUMBER", "present", "Result", "False", "Comment", "Failed", "to", "update", "bucket", "An", "error", "occur", "MalformedXML", "when", "calling", "the", "PutBucketLifecycleConfiguration", "operation", "The", "XML", "you", "provide", "was", "not", "well", "formed", "or", "did", "not", "validate", "against", "our", "publish", "schema", "NUMBER", "Started", "NUMBER", "NUMBER", "NUMBER", "Duration", "NUMBER", "ms", "Changes", "I", "would", "guess", "that", "your", "botocore", "model", "be", "out", "of", "date", "try", "update", "botocore", "pip", "install", "U", "botocore", "NUMBER", "I", "don", "t", "really", "have", "any", "particular", "knowledge", "of", "how", "salt", "works", "but", "I", "assume", "it", "be", "picking", "up", "whatever", "version", "of", "botocore", "you", "have", "install", "on", "your", "system", "NUMBER", "bhanukumar", "NUMBER", "sorry", "this", "thread", "get", "caught", "up", "in", "an", "email", "filter", "and", "I", "just", "find", "it", "again", "NUMBER", "This", "be", "the", "salt", "state", "that", "I", "have", "function", "properly", "NUMBER", "I", "had", "to", "include", "both", "an", "empty", "prefix", "and", "the", "capitalized", "Enabled", "test", "s", "NUMBER", "boto_s", "NUMBER", "_bucket", "NUMBER", "present", "name", "test", "s", "NUMBER", "Bucket", "test", "s", "NUMBER", "saltstack", "NUMBER", "example", "LifecycleConfiguration", "Expiration", "Days", "NUMBER", "ID", "expire", "storage", "Prefix", "Status", "Enabled", "profile", "profile", "edit", "Thanks", "joguSD", "for", "the", "correction", "NUMBER", "Fingers", "were", "work", "faster", "than", "the", "brain", "Finally", "worked", "NUMBER", "I", "correct", "the", "below", "things", "Prefix", "Status", "Enabled", "Thanks", "a", "lot", "mcarlton", "NUMBER", "for", "your", "suggestion", "I", "was", "able", "to", "fix", "my", "long", "pending", "issue", "NUMBER", "LINK", "_modules", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "html", "says", "Setting", "metadata", "by", "documentation", "transfer", "NUMBER", "upload_file", "tmp", "myfile", "bucket", "key", "extra_args", "Metadata", "a", "b", "c", "d", "If", "I", "upload", "a", "file", "e", "NUMBER", "g", "NUMBER", "index", "NUMBER", "html", "with", "the", "following", "command", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "S", "NUMBER", "Transfer", "awsclient", "boto", "NUMBER", "client", "s", "NUMBER", "eu", "west", "NUMBER", "transfer", "S", "NUMBER", "Transfer", "awsclient", "transfer", "NUMBER", "upload_file", "index", "NUMBER", "html", "OUTBUCKET", "index", "NUMBER", "html", "extra_args", "Metadata", "Content", "Type", "text", "html", "It", "sets", "up", "the", "S", "NUMBER", "object", "metadata", "to", "x", "amz", "meta", "content", "type", "text", "html", "Instead", "of", "the", "expected", "Content", "Type", "text", "html", "The", "main", "problem", "e", "NUMBER", "g", "NUMBER", "uploading", "the", "index", "NUMBER", "html", "file", "with", "boto", "NUMBER", "to", "an", "S", "NUMBER", "bucket", "with", "static", "website", "hosting", "option", "results", "the", "WEB", "browsers", "downloads", "it", "instead", "opens", "NUMBER", "Meanwhile", "I", "find", "in", "the", "same", "document", "Setting", "content", "type", "transfer", "NUMBER", "upload_file", "tmp", "myfile", "NUMBER", "json", "bucket", "key", "extra_args", "ContentType", "text", "html", "solves", "the", "problem", "but", "it", "remains", "inconsistent", "Setting", "up", "with", "Metadata", "Metadata", "Content", "Type", "NUMBER", "and", "with", "ContentType", "NUMBER", "should", "be", "equal", "because", "of", "a", "both", "method", "should", "edit", "the", "same", "key", "value", "on", "an", "object", "NUMBER", "stealthycoin", "be", "right", "calling", "the", "API", "with", "an", "invalid", "key", "shows", "that", "Metadata", "be", "a", "different", "key", "from", "ContentType", "in", "the", "API", "ValueError", "Invalid", "extra_args", "key", "metadata", "must", "be", "one", "of", "ACL", "CacheControl", "ContentDisposition", "ContentEncoding", "ContentLanguage", "ContentType", "Expires", "GrantFullControl", "GrantRead", "GrantReadACP", "GrantWriteACP", "Metadata", "RequestPayer", "ServerSideEncryption", "StorageClass", "SSECustomerAlgorithm", "SSECustomerKey", "SSECustomerKeyMD", "NUMBER", "SSEKMSKeyId", "WebsiteRedirectLocation", "Thanks", "you", "be", "correct", "NUMBER", "However", "I", "mean", "if", "you", "go", "to", "the", "AWS", "Console", "to", "S", "NUMBER", "LINK", "pick", "a", "file", "from", "a", "bucket", "go", "to", "Metadata", "drop", "down", "you", "will", "see", "only", "NUMBER", "place", "when", "you", "can", "set", "Key", "Value", "pairs", "for", "metadata", "NUMBER", "Here", "you", "can", "set", "e", "NUMBER", "g", "NUMBER", "Key", "Content", "Type", "Value", "video", "mp", "NUMBER", "and", "other", "metadata", "NUMBER", "No", "separated", "field", "to", "set", "x", "amz", "meta", "so", "if", "you", "set", "here", "the", "MIME", "ContenType", "metadata", "like", "above", "it", "will", "be", "correct", "in", "contrast", "of", "it", "be", "separated", "in", "API", "NUMBER", "It", "be", "a", "bit", "confusing", "NUMBER", "I", "be", "get", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "AccessDenied", "when", "calling", "the", "DeleteObject", "operation", "Access", "Denied", "error", "on", "s", "NUMBER", "delete_object", "Bucket", "bucket", "Key", "source_file", "NUMBER", "this", "can", "be", "due", "to", "exist", "issue", "LINK", "cli", "issue", "NUMBER", "issuecomment", "NUMBER", "on", "_", "aws", "aws", "cli", "_", "Note", "Permission", "for", "this", "operation", "be", "properly", "set", "and", "I", "can", "delete", "this", "object", "use", "aws", "s", "NUMBER", "api", "delete", "object", "bucket", "bucket_name", "key", "object_path_for_file", "NUMBER", "I", "receive", "the", "following", "Type", "error", "when", "submit", "to", "S", "NUMBER", "this", "previously", "worked", "fine", "in", "python", "NUMBER", "just", "not", "in", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "home", "foo", "config", "plugins", "python", "helpers", "pydev", "pydevd", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "globals", "debugger", "NUMBER", "run", "setup", "file", "None", "None", "is_module", "File", "home", "foo", "config", "plugins", "python", "helpers", "pydev", "pydevd", "NUMBER", "py", "line", "NUMBER", "in", "run", "pydev_imports", "NUMBER", "execfile", "file", "globals", "locals", "execute", "the", "script", "File", "home", "foo", "config", "plugins", "python", "helpers", "pydev", "_pydev_imps", "_pydev_execfile", "NUMBER", "py", "line", "NUMBER", "in", "execfile", "exec", "compile", "contents", "n", "file", "exec", "glob", "loc", "File", "home", "foo", "bar", "foobar", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "s", "NUMBER", "Bucket", "foo", "NUMBER", "put_object", "Key", "fooName", "Body", "fooFile", "ContentType", "text", "html", "File", "home", "foo", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "home", "foo", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "home", "foo", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "home", "foo", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "request_signer", "self", "NUMBER", "_request_signer", "context", "request_context", "File", "home", "foo", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit_until_response", "responses", "self", "NUMBER", "_emit", "event_name", "kwargs", "stop_on_response", "True", "File", "home", "foo", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "home", "foo", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "handlers", "NUMBER", "py", "line", "NUMBER", "in", "conditionally_calculate_md", "NUMBER", "calculate_md", "NUMBER", "params", "kwargs", "File", "home", "foo", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "handlers", "NUMBER", "py", "line", "NUMBER", "in", "calculate_md", "NUMBER", "binary_md", "NUMBER", "_calculate_md", "NUMBER", "_from_file", "body", "File", "home", "foo", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "handlers", "NUMBER", "py", "line", "NUMBER", "in", "_calculate_md", "NUMBER", "_from_file", "md", "NUMBER", "update", "chunk", "TypeError", "Unicode", "objects", "must", "be", "encoded", "before", "hashing", "I", "ve", "be", "work", "to", "use", "AES", "encryption", "to", "store", "data", "in", "dynamodb", "but", "I", "m", "run", "into", "an", "error", "and", "it", "seems", "like", "it", "might", "be", "a", "bug", "but", "I", "m", "not", "sure", "it", "could", "be", "me", "NUMBER", "This", "be", "a", "super", "simple", "test", "script", "that", "fail", "python", "import", "boto", "NUMBER", "from", "Crypto", "NUMBER", "Cipher", "import", "AES", "boto", "NUMBER", "set_stream_logger", "table", "test_crypt_table", "message", "this", "be", "super", "seecrit", "salt", "this", "be", "the", "salt", "iv", "this", "be", "the", "iv", "NUMBER", "obj", "AES", "NUMBER", "new", "salt", "AES", "NUMBER", "MODE_CFB", "iv", "crypto_text", "obj", "NUMBER", "encrypt", "message", "item", "tenant_id", "test_tenant", "Whatsit", "foobarbaz", "cryptotext", "B", "crypto_text", "dynamodb", "boto", "NUMBER", "resource", "dynamodb", "region_name", "us", "east", "NUMBER", "table", "dynamodb", "NUMBER", "Table", "table", "table", "NUMBER", "put_item", "Item", "item", "The", "error", "be", "UnicodeDecodeError", "utf", "NUMBER", "codec", "can", "t", "decode", "byte", "NUMBER", "x", "NUMBER", "in", "position", "NUMBER", "invalid", "start", "byte", "The", "odd", "thing", "be", "that", "I", "get", "the", "same", "exact", "error", "if", "I", "use", "S", "rather", "than", "B", "NUMBER", "Below", "be", "my", "debug", "log", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "data", "dynamodb", "NUMBER", "NUMBER", "NUMBER", "resources", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "DEBUG", "Looking", "for", "credentials", "via", "env", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "DEBUG", "Looking", "for", "credentials", "via", "assume", "role", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "DEBUG", "Looking", "for", "credentials", "via", "shared", "credentials", "file", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "INFO", "Found", "credentials", "in", "shared", "credentials", "file", "NUMBER", "aws", "credentials", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "endpoints", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "dynamodb", "NUMBER", "NUMBER", "NUMBER", "service", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "_retry", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "client", "DEBUG", "Registering", "retry", "handlers", "for", "service", "dynamodb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "client", "class", "NUMBER", "dynamodb", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "args", "DEBUG", "The", "s", "NUMBER", "config", "key", "be", "not", "a", "dictionary", "type", "ignoring", "its", "value", "of", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Setting", "dynamodb", "timeout", "as", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "DEBUG", "Loading", "dynamodb", "dynamodb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "resource", "class", "NUMBER", "dynamodb", "NUMBER", "ServiceResource", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "DEBUG", "Loading", "dynamodb", "Table", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "resource", "class", "NUMBER", "dynamodb", "NUMBER", "Table", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "resource", "class", "NUMBER", "dynamodb", "NUMBER", "Table", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "INFO", "Calling", "dynamodb", "put_item", "with", "Item", "tenant_id", "test_tenant", "cryptotext", "B", "x", "NUMBER", "x", "NUMBER", "d", "xc", "NUMBER", "x", "NUMBER", "e", "NUMBER", "xbb", "xdb", "x", "NUMBER", "xe", "NUMBER", "x", "NUMBER", "xd", "NUMBER", "a", "x", "NUMBER", "xc", "NUMBER", "x", "NUMBER", "xdc", "x", "NUMBER", "d", "Whatsit", "foobarbaz", "u", "TableName", "test_crypt_table", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "provide", "client", "params", "NUMBER", "dynamodb", "NUMBER", "PutItem", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "dynamodb", "NUMBER", "PutItem", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "dynamodb", "NUMBER", "PutItem", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "dynamodb", "NUMBER", "PutItem", "calling", "handler", "TAG", "Traceback", "most", "recent", "call", "last", "File", "dynocrpyt", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "table", "NUMBER", "put_item", "Item", "item", "File", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "api_params", "operation_model", "context", "request_context", "File", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_convert_to_request_dict", "api_params", "operation_model", "File", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "validate", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "operation_model", "File", "home", "pearlbear", "virtenvs", "z", "NUMBER", "_env", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "serialize", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "serialized", "body", "json", "NUMBER", "dumps", "body", "NUMBER", "encode", "self", "NUMBER", "DEFAULT_ENCODING", "File", "usr", "lib", "python", "NUMBER", "json", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "dumps", "return", "_default_encoder", "NUMBER", "encode", "obj", "File", "usr", "lib", "python", "NUMBER", "json", "encoder", "NUMBER", "py", "line", "NUMBER", "in", "encode", "chunks", "self", "NUMBER", "iterencode", "o", "_one_shot", "True", "File", "usr", "lib", "python", "NUMBER", "json", "encoder", "NUMBER", "py", "line", "NUMBER", "in", "iterencode", "return", "_iterencode", "o", "NUMBER", "UnicodeDecodeError", "utf", "NUMBER", "codec", "can", "t", "decode", "byte", "NUMBER", "x", "NUMBER", "in", "position", "NUMBER", "invalid", "start", "byte", "Totally", "fabulous", "thanks", "Except", "NUMBER", "in", "trying", "to", "retrieve", "that", "item", "I", "m", "run", "into", "a", "weird", "error", "be", "there", "something", "different", "I", "need", "to", "do", "on", "the", "query", "end", "I", "m", "just", "use", "field", "tenant_id", "value", "foobarbaz", "response", "table", "NUMBER", "query", "KeyConditionExpression", "Key", "field", "NUMBER", "eq", "value", "And", "I", "get", "this", "rather", "odd", "error", "TypeError", "object", "NUMBER", "__new__", "thread", "NUMBER", "lock", "be", "not", "safe", "use", "thread", "NUMBER", "lock", "NUMBER", "__new__", "Let", "me", "know", "if", "you", "need", "debug", "log", "NUMBER", "Nevermind", "NUMBER", "My", "problem", "NUMBER", "I", "ll", "close", "this", "NUMBER", "Potential", "fix", "for", "Issue", "NUMBER", "Looks", "like", "MaxKeys", "be", "ignored", "by", "the", "object", "iterator", "NUMBER", "example", "code", "to", "trigger", "bug", "python", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "resource", "session", "NUMBER", "resource", "s", "NUMBER", "aws_access_key_id", "S", "NUMBER", "_ACCESS_KEY", "aws_secret_access_key", "S", "NUMBER", "_SECRET_KEY", "endpoint_url", "S", "NUMBER", "_HOST", "bucket", "resource", "NUMBER", "Bucket", "S", "NUMBER", "_BUCKET", "objects", "bucket", "NUMBER", "objects", "NUMBER", "filter", "MaxKeys", "NUMBER", "for", "obj", "in", "objects", "print", "obj", "NUMBER", "key", "I", "ve", "never", "seen", "your", "test", "framework", "before", "but", "I", "ll", "have", "a", "stab", "at", "it", "NUMBER", "Guessing", "I", "d", "add", "a", "test", "to", "test", "unit", "resources", "test_collections", "as", "a", "test_filter", "type", "test", "I", "m", "use", "boto", "NUMBER", "and", "trying", "to", "limit", "the", "number", "of", "objects", "be", "returned", "in", "a", "list", "operation", "NUMBER", "botocore", "NUMBER", "boto", "NUMBER", "NUMBER", "It", "looks", "to", "me", "like", "the", "kwarg", "MaxKeys", "be", "ignored", "in", "favor", "of", "the", "kwarg", "limit", "NUMBER", "Issue", "seems", "to", "be", "line", "NUMBER", "in", "resources", "collection", "NUMBER", "py", "in", "__iter__", "limit", "self", "NUMBER", "_params", "NUMBER", "get", "limit", "None", "This", "works", "if", "I", "change", "to", "limit", "self", "NUMBER", "_params", "NUMBER", "get", "MaxKeys", "None", "Unsure", "of", "side", "effect", "on", "rest", "of", "code", "but", "I", "ve", "make", "a", "pull", "request", "NUMBER", "Example", "code", "to", "trigger", "bug", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "resource", "session", "NUMBER", "resource", "s", "NUMBER", "aws_access_key_id", "S", "NUMBER", "_ACCESS_KEY", "aws_secret_access_key", "S", "NUMBER", "_SECRET_KEY", "endpoint_url", "S", "NUMBER", "_HOST", "bucket", "resource", "NUMBER", "Bucket", "S", "NUMBER", "_BUCKET", "objects", "bucket", "NUMBER", "objects", "NUMBER", "filter", "MaxKeys", "NUMBER", "for", "obj", "in", "objects", "print", "obj", "NUMBER", "key", "Seems", "to", "be", "passing", "UT", "s", "NUMBER", "kyleknap", "Hi", "I", "Need", "Some", "Clarification", "Regarding", "server", "side", "Encryption", "NUMBER", "I", "have", "Bucket", "Which", "contents", "be", "Encrypted", "Using", "Server", "Side", "Encryption", "with", "Amazon", "S", "NUMBER", "Managed", "Keys", "SSE", "S", "NUMBER", "NUMBER", "Now", "I", "want", "to", "download", "the", "Content", "via", "API", "i", "get", "Error", "The", "Key", "Does", "not", "Exist", "If", "I", "want", "to", "send", "the", "Content", "Name", "as", "Encrypted", "or", "What", "How", "will", "i", "Know", "the", "Key", "value", "of", "the", "Encrypt", "Logic", "Can", "any", "one", "Help", "Me", "ASAP", "FYI", "Server", "side", "encryption", "be", "defined", "by", "S", "NUMBER", "Browser", "NUMBER", "tldr", "When", "calling", "client", "NUMBER", "invoke", "for", "lambda", "function", "I", "want", "to", "disable", "automatic", "retries", "upon", "timeout", "NUMBER", "Steps", "to", "reproduce", "import", "boto", "NUMBER", "import", "json", "client", "boto", "NUMBER", "client", "lambda", "response", "client", "NUMBER", "invoke", "InvocationType", "RequestResponse", "FunctionName", "my_lambda", "LogType", "Tail", "Payload", "json", "NUMBER", "dumps", "Where", "my_lambda", "be", "configured", "to", "timeout", "after", "NUMBER", "seconds", "but", "the", "code", "itself", "requires", "more", "time", "than", "that", "NUMBER", "Desired", "behaviour", "For", "my", "particular", "case", "I", "want", "client", "NUMBER", "invoke", "to", "return", "in", "no", "more", "than", "NUMBER", "seconds", "NUMBER", "If", "the", "function", "requires", "more", "than", "that", "client", "NUMBER", "invoke", "should", "raise", "a", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "exception", "NUMBER", "ReadTimeout", "exception", "after", "NUMBER", "seconds", "or", "maybe", "NUMBER", "seconds", "if", "you", "factor", "in", "overhead", "NUMBER", "Observed", "Behaviour", "client", "NUMBER", "invoke", "raises", "the", "exception", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "exception", "NUMBER", "ReadTimeout", "after", "NUMBER", "seconds", "NUMBER", "The", "CloudWatch", "logs", "show", "that", "the", "lambda", "function", "was", "invoked", "NUMBER", "times", "even", "though", "client", "NUMBER", "invoke", "was", "only", "call", "once", "NUMBER", "Yes", "I", "know", "that", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "m", "confused", "by", "that", "too", "Justification", "For", "this", "particular", "case", "I", "know", "with", "certainty", "that", "if", "the", "lambda", "timed", "out", "the", "first", "time", "it", "will", "time", "out", "the", "next", "NUMBER", "times", "also", "NUMBER", "So", "there", "s", "no", "point", "retrying", "NUMBER", "I", "understand", "that", "normally", "automatic", "retries", "may", "be", "handy", "NUMBER", "So", "I", "propose", "that", "an", "option", "be", "add", "to", "client", "NUMBER", "invoke", "which", "allows", "you", "to", "disable", "automatic", "retries", "NUMBER", "I", "just", "tried", "doing", "that", "botocore", "NUMBER", "config", "NUMBER", "Config", "read_timeout", "timeout", "NUMBER", "botocore", "NUMBER", "config", "NUMBER", "Config", "connection_timeout", "timeout", "NUMBER", "NUMBER", "client", "boto", "NUMBER", "client", "lambda", "NUMBER", "Where", "timeout", "be", "the", "number", "of", "seconds", "I", "configured", "my", "lambda", "to", "timeout", "after", "NUMBER", "Configured", "through", "cloudformation", "confirmed", "manually", "through", "web", "console", "NUMBER", "For", "now", "I", "ve", "set", "the", "contents", "of", "my", "lambda", "to", "be", "while", "NUMBER", "time", "NUMBER", "sleep", "NUMBER", "I", "still", "observe", "the", "same", "behavior", "NUMBER", "Looking", "at", "the", "timestamps", "in", "cloudformation", "the", "time", "between", "retries", "be", "approximately", "NUMBER", "seconds", "NUMBER", "this", "be", "my", "workaround", "about", "this", "issue", "config", "botocore", "NUMBER", "config", "NUMBER", "Config", "connect_timeout", "NUMBER", "read_timeout", "NUMBER", "client", "boto", "NUMBER", "client", "lambda", "region_name", "us", "east", "NUMBER", "config", "config", "NUMBER", "NUMBER", "set", "retry", "config", "for", "lambda", "NUMBER", "client", "NUMBER", "meta", "NUMBER", "events", "NUMBER", "_unique_id_handlers", "retry", "config", "lambda", "handler", "NUMBER", "_checker", "NUMBER", "__dict__", "_max_attempts", "NUMBER", "NUMBER", "NUMBER", "response", "client", "NUMBER", "invoke", "FunctionName", "InvocationType", "LogType", "Payload", "I", "can", "confirm", "that", "the", "workaround", "by", "tnpxu", "works", "for", "me", "NUMBER", "The", "workaround", "by", "tnpxu", "worked", "for", "me", "too", "NUMBER", "I", "had", "trouble", "with", "S", "NUMBER", "Client", "NUMBER", "generate_presigned_post", "when", "use", "the", "same", "underlying", "dict", "for", "the", "acl", "in", "Conditions", "and", "Fields", "kwargs", "NUMBER", "I", "wanted", "only", "an", "acl", "condition", "so", "I", "had", "use", "the", "same", "dict", "for", "both", "kwargs", "NUMBER", "The", "call", "returns", "an", "Invalid", "set", "of", "field", "that", "will", "throw", "an", "error", "Invalid", "Policy", "Invalid", "Simple", "Condition", "Simple", "Conditions", "must", "have", "exactly", "one", "property", "specified", "NUMBER", "Here", "be", "an", "example", "that", "triggers", "the", "unwanted", "side", "effect", "python", "acl", "acl", "authenticated", "read", "resp", "s", "NUMBER", "generate_presigned_post", "Bucket", "BUCKET", "Key", "key", "Conditions", "acl", "Fields", "acl", "Corrected", "by", "simply", "use", "different", "dict", "objects", "python", "acl", "acl", "authenticated", "read", "field", "acl", "authenticated", "read", "resp", "s", "NUMBER", "generate_presigned_post", "Bucket", "BUCKET", "Key", "key", "Conditions", "acl", "Fields", "field", "Could", "a", "note", "warning", "about", "this", "side", "effect", "be", "add", "to", "the", "docs", "LINK", "S", "NUMBER", "Client", "NUMBER", "generate_presigned_post", "Or", "even", "better", "this", "side", "effect", "be", "prevented", "in", "the", "function", "itself", "Thanks", "Hi", "I", "ve", "notice", "an", "inconsistency", "regard", "the", "filtering", "of", "Security", "Groups", "on", "a", "Vpc", "resource", "NUMBER", "Basically", "filtering", "by", "GroupName", "do", "not", "find", "the", "Security", "Group", "because", "it", "s", "use", "the", "wrong", "VPC", "NUMBER", "Filtering", "by", "GroupIds", "do", "the", "right", "thing", "NUMBER", "Also", "returning", "all", "the", "Security", "Groups", "do", "return", "the", "expected", "ec", "NUMBER", "SecurityGroup", "resource", "as", "well", "Pdb", "type", "resource", "TAG", "Pdb", "resource", "NUMBER", "id", "vpc", "NUMBER", "fbe", "NUMBER", "b", "Pdb", "security_group", "my_security_group", "Notice", "the", "VPC", "id", "in", "the", "following", "error", "be", "different", "to", "the", "VPC", "id", "we", "re", "actually", "use", "Pdb", "i", "for", "i", "in", "resource", "NUMBER", "security_groups", "NUMBER", "filter", "GroupNames", "security_group", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidGroup", "NUMBER", "NotFound", "when", "calling", "the", "DescribeSecurityGroups", "operation", "The", "security", "group", "my_security_group", "do", "not", "exist", "in", "default", "VPC", "vpc", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "Pdb", "security_group_id", "sg", "NUMBER", "f", "NUMBER", "Pdb", "found_security_group", "i", "for", "i", "in", "resource", "NUMBER", "security_groups", "NUMBER", "filter", "GroupIds", "security_group_id", "NUMBER", "Pdb", "found_security_group", "NUMBER", "group_name", "my_security_group", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "python", "NUMBER", "Ah", "so", "I", "think", "this", "be", "because", "apparently", "Security", "Group", "Names", "be", "only", "for", "EC", "NUMBER", "instances", "and", "Security", "Group", "Ids", "be", "what", "be", "use", "for", "VPCs", "NUMBER", "ec", "NUMBER", "Client", "NUMBER", "describe_instances", "LINK", "EC", "NUMBER", "Client", "NUMBER", "describe_instances", "allow", "to", "provide", "a", "list", "of", "InstanceIds", "NUMBER", "Likewise", "it", "would", "be", "a", "good", "idea", "to", "provide", "the", "same", "possibility", "to", "other", "methods", "e", "NUMBER", "g", "NUMBER", "ec", "NUMBER", "Client", "NUMBER", "wait_until_", "ones", "NUMBER", "Actually", "those", "waiter", "commands", "be", "implement", "on", "our", "side", "NUMBER", "The", "resource", "waiters", "be", "only", "designed", "to", "wait", "until", "that", "resource", "be", "available", "NUMBER", "The", "client", "waiters", "do", "support", "supplying", "multiple", "ids", "example", "LINK", "EC", "NUMBER", "Waiter", "NUMBER", "InstanceRunning", "NUMBER", "Please", "refer", "to", "this", "question", "asked", "here", "about", "unknownapiversionerror", "error", "LINK", "sdk", "boto", "NUMBER", "boto", "NUMBER", "exception", "unknownapiversionerror", "NUMBER", "NUMBER", "Although", "the", "user", "make", "an", "obvious", "mistake", "but", "it", "be", "rather", "strange", "that", "boto", "NUMBER", "session", "NUMBER", "resource", "return", "API", "version", "error", "for", "error", "such", "as", "DataNotFoundError", "python", "except", "DataNotFoundError", "This", "be", "because", "we", "ve", "provide", "an", "invalid", "API", "version", "NUMBER", "available_api_versions", "self", "NUMBER", "_loader", "NUMBER", "list_api_versions", "service_name", "resources", "NUMBER", "raise", "UnknownAPIVersionError", "service_name", "api_version", "NUMBER", "join", "available_api_versions", "I", "m", "trying", "to", "copy", "all", "the", "objects", "from", "one", "bucket", "to", "another", "bucket", "with", "in", "the", "same", "region", "NUMBER", "I", "m", "not", "get", "either", "error", "or", "output", "NUMBER", "Please", "help", "in", "this", "regards", "NUMBER", "Below", "be", "the", "code", "I", "m", "use", "to", "achieve", "this", "python", "import", "boto", "NUMBER", "def", "lambda_handler", "event", "context", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "resource", "boto", "NUMBER", "resource", "s", "NUMBER", "for", "s", "NUMBER", "_key", "in", "Bucket", "NUMBER", "objects", "NUMBER", "all", "Bucket", "self", "NUMBER", "bucket_name", "copy_source", "Bucket", "TAG", "Key", "s", "NUMBER", "_key", "Key", "print", "s", "NUMBER", "_key", "Key", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "copy", "copy_source", "dest", "bucket", "NUMBER", "s", "NUMBER", "_key", "Key", "Hello", "Firstly", "I", "would", "like", "to", "say", "sorry", "if", "this", "be", "the", "incorrect", "way", "to", "submit", "a", "potential", "documentation", "problem", "NUMBER", "I", "went", "through", "your", "readthedoc", "page", "LINK", "but", "couldn", "t", "find", "any", "contact", "information", "NUMBER", "In", "your", "document", "for", "IAM", "NUMBER", "list_users", "method", "LINK", "IAM", "NUMBER", "Client", "NUMBER", "list_users", "you", "stated", "PasswordLastUsed", "datetime", "The", "date", "and", "time", "in", "ISO", "NUMBER", "date", "time", "format", "when", "the", "user", "s", "password", "was", "last", "use", "to", "sign", "in", "to", "an", "AWS", "website", "NUMBER", "For", "a", "list", "of", "AWS", "websites", "that", "capture", "a", "user", "s", "last", "sign", "in", "time", "see", "the", "Credential", "Reports", "topic", "in", "the", "Using", "IAM", "guide", "NUMBER", "If", "a", "password", "be", "use", "more", "than", "once", "in", "a", "five", "minute", "span", "only", "the", "first", "use", "be", "returned", "in", "this", "field", "NUMBER", "This", "field", "be", "null", "not", "present", "when", "The", "user", "do", "not", "have", "a", "password", "The", "password", "exists", "but", "has", "never", "be", "use", "at", "least", "not", "since", "IAM", "start", "track", "this", "information", "on", "October", "NUMBER", "NUMBER", "there", "be", "no", "sign", "in", "data", "associated", "with", "the", "user", "This", "value", "be", "returned", "only", "in", "the", "GetUser", "and", "ListUsers", "actions", "NUMBER", "IMHO", "this", "means", "user", "do", "not", "have", "a", "password", "no", "PasswordLastUsed", "and", "thus", "it", "implies", "has", "PasswordLastUsed", "user", "has", "a", "password", "NUMBER", "Unfortunately", "this", "overlooked", "an", "edge", "case", "NUMBER", "When", "user", "had", "a", "password", "and", "use", "it", "to", "log", "in", "to", "AWS", "the", "data", "of", "PasswordLastUsed", "will", "be", "set", "NUMBER", "However", "if", "later", "on", "we", "delete", "password", "for", "this", "user", "list_users", "and", "get_user", "still", "displays", "the", "info", "of", "PasswordLastUsed", "NUMBER", "Thus", "I", "think", "the", "information", "might", "be", "misleading", "NUMBER", "During", "development", "of", "one", "of", "our", "tool", "we", "actually", "based", "our", "work", "on", "the", "assumption", "that", "if", "a", "user", "has", "PasswordLastUsed", "field", "he", "she", "should", "have", "a", "password", "and", "it", "was", "wrong", "due", "to", "the", "edge", "case", "describe", "above", "NUMBER", "I", "think", "we", "can", "improve", "this", "by", "clarify", "about", "such", "case", "and", "advise", "developers", "on", "use", "get_login_profile", "to", "confirm", "whether", "a", "user", "has", "an", "IAM", "password", "or", "not", "which", "be", "what", "we", "settled", "to", "use", "in", "our", "project", "NUMBER", "Best", "regards", "For", "long", "run", "processes", "greater", "than", "NUMBER", "hour", "the", "expired", "token", "be", "problematic", "NUMBER", "Right", "now", "the", "turnaround", "be", "to", "programmatically", "take", "this", "fallback", "into", "account", "and", "implement", "a", "refresh", "within", "your", "code", "NUMBER", "Is", "there", "a", "way", "around", "this", "Is", "there", "some", "other", "method", "that", "internally", "takes", "into", "account", "for", "refreshing", "the", "token", "without", "the", "programming", "explicitly", "write", "code", "to", "do", "so", "I", "have", "an", "application", "which", "makes", "file", "uploading", "to", "s", "NUMBER", "The", "app", "works", "from", "local", "machine", "but", "doesn", "t", "work", "from", "my", "server", "NUMBER", "On", "the", "server", "boto", "NUMBER", "raises", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "PoolWorker", "NUMBER", "Rewinding", "stream", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "PoolWorker", "NUMBER", "Event", "request", "created", "NUMBER", "s", "NUMBER", "UploadPart", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "PoolWorker", "NUMBER", "Event", "choose", "signer", "NUMBER", "s", "NUMBER", "UploadPart", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "PoolWorker", "NUMBER", "Calculating", "signature", "use", "hmacv", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "PoolWorker", "NUMBER", "HTTP", "request", "method", "PUT", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "PoolWorker", "NUMBER", "StringToSign", "PUT", "eR", "NUMBER", "MufFLtcWDshaxhn", "NUMBER", "IUQ", "Thu", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "file", "upload", "test", "Fedora", "Workstation", "netinst", "x", "NUMBER", "_", "NUMBER", "NUMBER", "NUMBER", "iso", "partNumber", "NUMBER", "uploadId", "PDI", "NUMBER", "OPSGWC", "NUMBER", "R", "NUMBER", "NBHX", "NUMBER", "QAWF", "NUMBER", "EF", "NUMBER", "TH", "NUMBER", "Z", "NUMBER", "XSJ", "NUMBER", "UYYGUETVYCZOESQFCFW", "NUMBER", "ZMXGOLI", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "PoolWorker", "NUMBER", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "PoolWorker", "NUMBER", "Starting", "new", "HTTP", "connection", "NUMBER", "objectstorage", "NUMBER", "esclor", "NUMBER", "eecloud", "NUMBER", "nsn", "rdnet", "NUMBER", "net", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "PoolWorker", "NUMBER", "Waiting", "for", "NUMBER", "Continue", "response", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "MainProcess", "Received", "task", "tasks", "NUMBER", "upload_chunk", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "NUMBER", "fdaa", "NUMBER", "fce", "NUMBER", "cb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "PoolWorker", "NUMBER", "No", "response", "seen", "from", "server", "continuing", "to", "send", "the", "response", "body", "NUMBER", "NUMBER", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GET", "upload_progress", "flowIdentifier", "NUMBER", "Fedora", "Workstation", "netinst", "x", "NUMBER", "_", "NUMBER", "NUMBER", "NUMBER", "iso", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "PoolWorker", "NUMBER", "ConnectionError", "received", "when", "sending", "HTTP", "request", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "vendored", "request", "package", "urllib", "NUMBER", "connectionpool", "NUMBER", "py", "line", "NUMBER", "in", "urlopen", "body", "body", "headers", "headers", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "vendored", "request", "package", "urllib", "NUMBER", "connectionpool", "NUMBER", "py", "line", "NUMBER", "in", "_make_request", "conn", "NUMBER", "request", "method", "url", "httplib_request_kw", "File", "usr", "lib", "python", "NUMBER", "http", "client", "NUMBER", "py", "line", "NUMBER", "in", "request", "self", "NUMBER", "_send_request", "method", "url", "body", "headers", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "awsrequest", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "self", "method", "url", "body", "headers", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "http", "client", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "self", "NUMBER", "endheaders", "body", "File", "usr", "lib", "python", "NUMBER", "http", "client", "NUMBER", "py", "line", "NUMBER", "in", "endheaders", "self", "NUMBER", "_send_output", "message_body", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "awsrequest", "NUMBER", "py", "line", "NUMBER", "in", "_send_output", "self", "NUMBER", "send", "message_body", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "awsrequest", "NUMBER", "py", "line", "NUMBER", "in", "send", "return", "HTTPConnection", "NUMBER", "send", "self", "str", "File", "usr", "lib", "python", "NUMBER", "http", "client", "NUMBER", "py", "line", "NUMBER", "in", "send", "self", "NUMBER", "sock", "NUMBER", "sendall", "datablock", "ConnectionResetError", "Errno", "NUMBER", "Connection", "reset", "by", "peer", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "vendored", "request", "adapters", "NUMBER", "py", "line", "NUMBER", "in", "send", "timeout", "timeout", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "vendored", "request", "package", "urllib", "NUMBER", "connectionpool", "NUMBER", "py", "line", "NUMBER", "in", "urlopen", "_stacktrace", "sys", "NUMBER", "exc_info", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "vendored", "request", "package", "urllib", "NUMBER", "util", "retry", "NUMBER", "py", "line", "NUMBER", "in", "increment", "raise", "six", "NUMBER", "reraise", "type", "error", "error", "_stacktrace", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "vendored", "request", "package", "urllib", "NUMBER", "package", "six", "NUMBER", "py", "line", "NUMBER", "in", "reraise", "raise", "value", "NUMBER", "with_traceback", "tb", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "vendored", "request", "package", "urllib", "NUMBER", "connectionpool", "NUMBER", "py", "line", "NUMBER", "in", "urlopen", "body", "body", "headers", "headers", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "vendored", "request", "package", "urllib", "NUMBER", "connectionpool", "NUMBER", "py", "line", "NUMBER", "in", "_make_request", "conn", "NUMBER", "request", "method", "url", "httplib_request_kw", "File", "usr", "lib", "python", "NUMBER", "http", "client", "NUMBER", "py", "line", "NUMBER", "in", "request", "self", "NUMBER", "_send_request", "method", "url", "body", "headers", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "awsrequest", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "self", "method", "url", "body", "headers", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "http", "client", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "self", "NUMBER", "endheaders", "body", "File", "usr", "lib", "python", "NUMBER", "http", "client", "NUMBER", "py", "line", "NUMBER", "in", "endheaders", "self", "NUMBER", "_send_output", "message_body", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "awsrequest", "NUMBER", "py", "line", "NUMBER", "in", "_send_output", "self", "NUMBER", "send", "message_body", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "awsrequest", "NUMBER", "py", "line", "NUMBER", "in", "send", "return", "HTTPConnection", "NUMBER", "send", "self", "str", "File", "usr", "lib", "python", "NUMBER", "http", "client", "NUMBER", "py", "line", "NUMBER", "in", "send", "self", "NUMBER", "sock", "NUMBER", "sendall", "datablock", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "exception", "NUMBER", "ProtocolError", "Connection", "abort", "NUMBER", "ConnectionResetError", "NUMBER", "Connection", "reset", "by", "peer", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_get_response", "proxies", "self", "NUMBER", "proxies", "timeout", "self", "NUMBER", "timeout", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "vendored", "request", "sessions", "NUMBER", "py", "line", "NUMBER", "in", "send", "r", "adapter", "NUMBER", "send", "request", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "vendored", "request", "adapters", "NUMBER", "py", "line", "NUMBER", "in", "send", "raise", "ConnectionError", "err", "request", "request", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "exception", "NUMBER", "ConnectionError", "Connection", "abort", "NUMBER", "ConnectionResetError", "NUMBER", "Connection", "reset", "by", "peer", "Version", "of", "boto", "NUMBER", "NUMBER", "Version", "of", "botocore", "NUMBER", "Version", "of", "python", "NUMBER", "Creating", "multipart", "upload", "works", "on", "both", "machines", "only", "upload_part", "doesn", "t", "work", "NUMBER", "The", "interesting", "fragment", "of", "code", "def", "upload_part", "s", "NUMBER", "key", "part_number", "bucket", "body", "upload_id", "i", "NUMBER", "while", "True", "try", "print", "Sleeping", "time", "NUMBER", "sleep", "NUMBER", "i", "randint", "NUMBER", "NUMBER", "r", "s", "NUMBER", "upload_part", "Key", "key", "PartNumber", "part_number", "Bucket", "bucket", "UploadId", "upload_id", "Body", "body", "break", "except", "ReadTimeout", "as", "e", "i", "NUMBER", "if", "i", "NUMBER", "raise", "e", "except", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "exception", "NUMBER", "ConnectionError", "as", "e", "i", "NUMBER", "if", "i", "NUMBER", "raise", "e", "except", "BaseException", "as", "e", "print", "repr", "e", "raise", "e", "print", "Uploaded", "part", "d", "part_number", "return", "len", "body", "r", "ETag", "The", "function", "upload_part", "be", "call", "by", "celery", "task", "but", "I", "ve", "decreased", "concurrency", "to", "NUMBER", "This", "behavior", "be", "inconsistent", "with", "both", "LINK", "IAM", "NUMBER", "Client", "NUMBER", "create_user", "and", "LINK", "IAM", "NUMBER", "Client", "NUMBER", "delete_user", "jstoner", "ch", "nb", "NUMBER", "repos", "iam", "sync", "HEAD", "NUMBER", "s", "ipython", "Python", "NUMBER", "default", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Type", "copyright", "credits", "or", "license", "for", "more", "information", "NUMBER", "IPython", "NUMBER", "An", "enhanced", "Interactive", "Python", "NUMBER", "Introduction", "and", "overview", "of", "IPython", "s", "features", "NUMBER", "quickref", "Quick", "reference", "NUMBER", "help", "Python", "s", "own", "help", "system", "NUMBER", "object", "Details", "about", "object", "use", "object", "for", "extra", "details", "NUMBER", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "iam_client", "boto", "NUMBER", "resource", "iam", "NUMBER", "In", "NUMBER", "iam_client", "NUMBER", "create_user", "UserName", "test_user", "Out", "NUMBER", "iam", "NUMBER", "User", "name", "test_user", "In", "NUMBER", "u", "Out", "NUMBER", "In", "NUMBER", "iam_client", "NUMBER", "delete_user", "UserName", "test_user", "AttributeError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "iam_client", "NUMBER", "delete_user", "UserName", "test_user", "AttributeError", "iam", "NUMBER", "ServiceResource", "object", "has", "no", "attribute", "delete_user", "In", "NUMBER", "dir", "u", "Out", "NUMBER", "u", "AccessKey", "u", "LoginProfile", "NUMBER", "u", "delete", "NUMBER", "u", "user_name", "In", "NUMBER", "u", "NUMBER", "delete", "Out", "NUMBER", "ResponseMetadata", "HTTPHeaders", "content", "length", "NUMBER", "content", "type", "text", "xml", "date", "Tue", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "x", "amzn", "requestid", "NUMBER", "d", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "da", "NUMBER", "fce", "NUMBER", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "d", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "da", "NUMBER", "fce", "NUMBER", "RetryAttempts", "NUMBER", "In", "NUMBER", "So", "instead", "of", "returning", "a", "dict", "create_user", "returns", "an", "iam", "NUMBER", "User", "object", "and", "there", "be", "no", "iam_client", "NUMBER", "delete_user", "method", "NUMBER", "There", "be", "a", "User", "NUMBER", "delete", "method", "NUMBER", "Is", "the", "doc", "out", "of", "date", "I", "be", "use", "boto", "NUMBER", "NUMBER", "and", "botocore", "NUMBER", "I", "also", "install", "moto", "whose", "docs", "refer", "to", "boto", "NUMBER", "when", "moto", "depends", "on", "boto", "not", "boto", "NUMBER", "NUMBER", "So", "maybe", "I", "be", "in", "a", "bad", "state", "Currently", "tox", "will", "always", "run", "all", "test", "which", "contradicts", "the", "README", "NUMBER", "I", "don", "t", "know", "if", "OptionParser", "be", "really", "any", "more", "complicated", "than", "reading", "sys", "NUMBER", "argv", "and", "you", "get", "some", "help", "text", "for", "free", "to", "boot", "but", "I", "don", "t", "have", "strong", "opinions", "either", "way", "NUMBER", "The", "bigger", "simplification", "was", "ditching", "the", "shell", "True", "kwarg", "which", "means", "we", "don", "t", "have", "to", "worry", "about", "arg", "quoting", "NUMBER", "Good", "point", "NUMBER", "For", "some", "reason", "I", "was", "thinking", "OptionParser", "pass", "through", "unknown", "flags", "as", "posargs", "but", "that", "s", "not", "the", "behavior", "now", "that", "I", "check", "NUMBER", "Thanks", "for", "the", "review", "NUMBER", "This", "will", "cause", "it", "to", "no", "longer", "raise", "an", "exception", "if", "the", "bucket", "can", "t", "be", "find", "via", "ListBuckets", "NUMBER", "NUMBER", "This", "means", "that", "the", "creation_date", "attribute", "will", "return", "None", "in", "some", "cases", "but", "the", "Bucket", "resource", "be", "straight", "up", "unusable", "in", "those", "cases", "right", "now", "NUMBER", "Should", "I", "update", "the", "creation_date", "attribute", "description", "in", "botocore", "to", "note", "this", "Changes", "looks", "reasonable", "just", "had", "a", "small", "suggestion", "to", "scope", "down", "the", "error", "we", "re", "catching", "NUMBER", "This", "be", "a", "breaking", "change", "that", "should", "have", "involved", "more", "communication", "to", "users", "NUMBER", "It", "certainly", "shouldn", "t", "have", "be", "part", "of", "a", "patch", "release", "NUMBER", "Hi", "This", "request", "return", "right", "result", "python", "response", "client", "NUMBER", "detect_labels", "Image", "S", "NUMBER", "Object", "Bucket", "x", "Name", "NUMBER", "jpg", "But", "if", "i", "have", "in", "Bucket", "name", "some", "NUMBER", "python", "response", "client", "NUMBER", "detect_labels", "Image", "S", "NUMBER", "Object", "Bucket", "x", "NUMBER", "x", "NUMBER", "x", "Name", "NUMBER", "jpg", "requiest", "return", "An", "error", "occur", "InvalidS", "NUMBER", "ObjectException", "when", "calling", "the", "DetectLabels", "operation", "Unable", "to", "get", "image", "metadata", "from", "S", "NUMBER", "Check", "object", "key", "region", "and", "or", "access", "permissions", "NUMBER", "LINK", "NUMBER", "same", "problem", "NUMBER", "kyleknap", "thank", "you", "for", "answer", "But", "i", "have", "Bucket", "with", "NUMBER", "in", "name", "when", "i", "try", "to", "send", "S", "NUMBER", "Object", "with", "this", "name", "i", "have", "this", "error", "NUMBER", "I", "read", "link", "below", "and", "try", "to", "create", "test", "Bucket", "without", "NUMBER", "and", "it", "work", "NUMBER", "And", "yes", "i", "have", "latest", "one", "boto", "NUMBER", "for", "python", "NUMBER", "Update", "it", "by", "pip", "NUMBER", "So", "i", "think", "this", "be", "same", "problem", "NUMBER", "It", "looks", "like", "boto", "NUMBER", "be", "sending", "the", "right", "data", "to", "the", "service", "so", "there", "s", "no", "bug", "for", "us", "to", "fix", "here", "NUMBER", "I", "would", "recommend", "make", "use", "of", "one", "of", "our", "community", "resources", "LINK", "get", "help", "for", "further", "guidance", "NUMBER", "Hi", "NUMBER", "I", "d", "like", "to", "add", "some", "methods", "to", "ec", "NUMBER", "Vpc", "class", "and", "others", "so", "that", "I", "do", "not", "need", "to", "write", "any", "adapters", "wrappers", "NUMBER", "Is", "there", "any", "possibility", "to", "do", "that", "Thx", "NUMBER", "I", "find", "creating", "classes", "with", "inheritance", "confusing", "and", "monkey", "patching", "NUMBER", "We", "create", "a", "WebService", "use", "Falcon", "Python", "Framework", "and", "Gunicorn", "the", "API", "create", "XML", "and", "PDF", "but", "when", "we", "try", "to", "upload", "the", "file", "via", "Boto", "NUMBER", "for", "AWS", "S", "NUMBER", "the", "thread", "don", "t", "show", "any", "error", "NUMBER", "The", "strange", "thing", "be", "that", "if", "we", "manually", "run", "this", "command", "on", "shell", "root", "merci_api", "venv", "bin", "python", "NUMBER", "root", "merci_api", "venv", "bin", "gunicorn", "b", "localhost", "NUMBER", "main", "app", "All", "works", "fine", "and", "the", "output", "be", "DEBUG", "Thread", "NUMBER", "POST", "TimbreCFDI", "NUMBER", "TimbreCFDI", "NUMBER", "asmx", "HTTP", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "HTTP", "Response", "from", "LINK", "status", "NUMBER", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "lt", "cfdi", "Comprobante", "xmlns", "cfdi", "LINK", "xmlns", "xsi", "LINK", "instance", "xsi", "schemaLocation", "LINK", "LINK", "_internet", "cfd", "NUMBER", "cfdv", "NUMBER", "xsd", "Version", "NUMBER", "Fecha", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "MetodoPago", "PUE", "SubTotal", "NUMBER", "Moneda", "MXN", "Total", "NUMBER", "TipoDeComprobante", "I", "LugarExpedicion", "NUMBER", "gt", "lt", "cfdi", "Emisor", "Rfc", "AAA", "NUMBER", "AAA", "Nombre", "REALHOST", "SA", "DE", "CV", "RegimenFiscal", "NUMBER", "gt", "lt", "cfdi", "Receptor", "Rfc", "XAXX", "NUMBER", "Nombre", "PUBLICO", "EN", "GENERAL", "UsoCFDI", "G", "NUMBER", "gt", "lt", "cfdi", "Conceptos", "gt", "lt", "cfdi", "Concepto", "ClaveProdServ", "NUMBER", "ClaveUnidad", "F", "NUMBER", "NoIdentificacion", "NUMBER", "Cantidad", "NUMBER", "Unidad", "TONELADA", "Descripcion", "Servicio", "de", "catering", "para", "NUMBER", "personas", "NUMBER", "tiempos", "apoyo", "para", "cierre", "de", "contrato", "anual", "ValorUnitario", "NUMBER", "Importe", "NUMBER", "gt", "lt", "cfdi", "Concepto", "gt", "lt", "cfdi", "Conceptos", "gt", "lt", "cfdi", "Impuestos", "TotalImpuestosRetenidos", "NUMBER", "TotalImpuestosTrasladados", "NUMBER", "gt", "lt", "cfdi", "Traslados", "gt", "lt", "cfdi", "Traslado", "Impuesto", "NUMBER", "TipoFactor", "Tasa", "TasaOCuota", "NUMBER", "Importe", "NUMBER", "gt", "lt", "cfdi", "Traslados", "gt", "lt", "cfdi", "Impuestos", "gt", "lt", "cfdi", "Complemento", "gt", "lt", "tfd", "TimbreFiscalDigital", "xmlns", "tfd", "LINK", "xmlns", "xsi", "LINK", "instance", "xsi", "schemaLocation", "LINK", "LINK", "_internet", "cfd", "TimbreFiscalDigital", "TimbreFiscalDigital", "NUMBER", "xsd", "Version", "NUMBER", "UUID", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "FechaTimbrado", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "RfcProvCertif", "AAA", "NUMBER", "AAA", "SelloCFD", "eeesTSR", "NUMBER", "qqnBCveoKVSfPljCMYvv", "NUMBER", "LwyuRuJOULVShCtdAG", "NUMBER", "rn", "NUMBER", "NUMBER", "hlQqun", "NUMBER", "qNBitPHWJ", "NUMBER", "vraGCavB", "LfP", "NUMBER", "l", "NUMBER", "PPSzaSgOjV", "NUMBER", "jUEOePTwGntsKLsN", "NUMBER", "nUOLV", "NUMBER", "zuyNSic", "NUMBER", "PADkMSgaMHqvx", "NUMBER", "qTlF", "VASY", "NUMBER", "HyXqpDPD", "NUMBER", "VFn", "NUMBER", "uRiiKA", "NoCertificadoSAT", "NUMBER", "SelloSAT", "qCzYGDEYlxMOzdsbyXHU", "NUMBER", "USIRkX", "NUMBER", "Zkyrh", "NUMBER", "bfxqS", "NUMBER", "QFnww", "NUMBER", "EIrjYwVfEzIjkLPFR", "NUMBER", "hYyds", "sSrojKoEjT", "NUMBER", "oYKLW", "NUMBER", "Avth", "NUMBER", "qIOyXrYWfXeoQ", "NUMBER", "rGURxz", "NUMBER", "kiuSLZYKqKjrUllHo", "EnINCAjaF", "NUMBER", "mQzWkj", "NUMBER", "x", "NUMBER", "QyBHFAS", "NUMBER", "ZuVhzUtitQ", "gt", "lt", "cfdi", "Complemento", "gt", "lt", "cfdi", "Comprobante", "gt", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "Conectado", "al", "servicio", "Imprimiendo", "comprobante", "Comienza", "S", "NUMBER", "DEBUG", "Thread", "NUMBER", "Looking", "for", "credentials", "via", "env", "DEBUG", "Thread", "NUMBER", "Looking", "for", "credentials", "via", "assume", "role", "DEBUG", "Thread", "NUMBER", "Looking", "for", "credentials", "via", "shared", "credentials", "file", "INFO", "Thread", "NUMBER", "Found", "credentials", "in", "shared", "credentials", "file", "NUMBER", "aws", "credentials", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "endpoints", "NUMBER", "json", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "service", "NUMBER", "json", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "_retry", "NUMBER", "json", "DEBUG", "Thread", "NUMBER", "Registering", "retry", "handlers", "for", "service", "s", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "The", "s", "NUMBER", "config", "key", "be", "not", "a", "dictionary", "type", "ignoring", "its", "value", "of", "None", "DEBUG", "Thread", "NUMBER", "Setting", "s", "NUMBER", "timeout", "as", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Defaulting", "to", "S", "NUMBER", "virtual", "host", "style", "addressing", "with", "path", "style", "addressing", "fallback", "NUMBER", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "data", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "resources", "NUMBER", "json", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "endpoints", "NUMBER", "json", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "service", "NUMBER", "json", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "_retry", "NUMBER", "json", "DEBUG", "Thread", "NUMBER", "Registering", "retry", "handlers", "for", "service", "s", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "The", "s", "NUMBER", "config", "key", "be", "not", "a", "dictionary", "type", "ignoring", "its", "value", "of", "None", "DEBUG", "Thread", "NUMBER", "Setting", "s", "NUMBER", "timeout", "as", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Defaulting", "to", "S", "NUMBER", "virtual", "host", "style", "addressing", "with", "path", "style", "addressing", "fallback", "NUMBER", "DEBUG", "Thread", "NUMBER", "Loading", "s", "NUMBER", "s", "NUMBER", "creando", "PDF", "DEBUG", "Thread", "NUMBER", "Loading", "s", "NUMBER", "Object", "DEBUG", "Thread", "NUMBER", "Event", "creating", "resource", "class", "NUMBER", "s", "NUMBER", "Object", "calling", "handler", "TAG", "INFO", "Thread", "NUMBER", "Calling", "s", "NUMBER", "put_object", "with", "Body", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "u", "Bucket", "mercicfditest", "u", "Key", "u", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "xml", "ACL", "public", "read", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "call", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "call", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Adding", "expect", "NUMBER", "continue", "header", "to", "request", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "before", "call", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Making", "request", "for", "OperationModel", "name", "PutObject", "verify_ssl", "True", "with", "params", "body", "TAG", "url", "u", "LINK", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "xml", "headers", "Content", "MD", "NUMBER", "u", "NUMBER", "QMFVJMlfH", "NUMBER", "cWZsUxmKXw", "Expect", "NUMBER", "continue", "u", "x", "amz", "acl", "public", "read", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "generic", "Botocore", "NUMBER", "Resource", "context", "client_region", "us", "east", "NUMBER", "signing", "bucket", "mercicfditest", "has_streaming_input", "True", "client_config", "TAG", "query_string", "url_path", "u", "mercicfditest", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "xml", "method", "u", "PUT", "DEBUG", "Thread", "NUMBER", "Event", "request", "created", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "sign", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Checking", "for", "DNS", "compatible", "bucket", "for", "LINK", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "xml", "DEBUG", "Thread", "NUMBER", "URI", "update", "to", "LINK", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "xml", "DEBUG", "Thread", "NUMBER", "Calculating", "signature", "use", "hmacv", "NUMBER", "auth", "NUMBER", "DEBUG", "Thread", "NUMBER", "HTTP", "request", "method", "PUT", "DEBUG", "Thread", "NUMBER", "StringToSign", "PUT", "NUMBER", "QMFVJMlfH", "NUMBER", "cWZsUxmKXw", "Tue", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "x", "amz", "acl", "public", "read", "mercicfditest", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "xml", "DEBUG", "Thread", "NUMBER", "Sending", "http", "request", "TAG", "INFO", "Thread", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "mercicfditest", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "DEBUG", "Thread", "NUMBER", "Waiting", "for", "NUMBER", "Continue", "response", "NUMBER", "DEBUG", "Thread", "NUMBER", "NUMBER", "Continue", "response", "seen", "now", "sending", "request", "body", "NUMBER", "DEBUG", "Thread", "NUMBER", "PUT", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "xml", "HTTP", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Response", "headers", "content", "length", "NUMBER", "x", "amz", "id", "NUMBER", "NUMBER", "hFF", "NUMBER", "pbWJSeTLseOPCp", "NUMBER", "DBo", "NUMBER", "N", "NUMBER", "nQJ", "NUMBER", "FGlTKo", "NUMBER", "f", "NUMBER", "mVRkr", "NUMBER", "kNiutD", "NUMBER", "v", "NUMBER", "HaykzwF", "NUMBER", "aIyvD", "N", "NUMBER", "Xgs", "server", "AmazonS", "NUMBER", "x", "amz", "request", "id", "NUMBER", "E", "NUMBER", "C", "NUMBER", "B", "NUMBER", "DF", "NUMBER", "D", "NUMBER", "etag", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "date", "Tue", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "DEBUG", "Thread", "NUMBER", "Response", "body", "DEBUG", "Thread", "NUMBER", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "No", "retry", "needed", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Response", "u", "ETag", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RetryAttempts", "NUMBER", "HostId", "NUMBER", "hFF", "NUMBER", "pbWJSeTLseOPCp", "NUMBER", "DBo", "NUMBER", "N", "NUMBER", "nQJ", "NUMBER", "FGlTKo", "NUMBER", "f", "NUMBER", "mVRkr", "NUMBER", "kNiutD", "NUMBER", "v", "NUMBER", "HaykzwF", "NUMBER", "aIyvD", "N", "NUMBER", "Xgs", "RequestId", "NUMBER", "E", "NUMBER", "C", "NUMBER", "B", "NUMBER", "DF", "NUMBER", "D", "NUMBER", "HTTPHeaders", "content", "length", "NUMBER", "x", "amz", "id", "NUMBER", "NUMBER", "hFF", "NUMBER", "pbWJSeTLseOPCp", "NUMBER", "DBo", "NUMBER", "N", "NUMBER", "nQJ", "NUMBER", "FGlTKo", "NUMBER", "f", "NUMBER", "mVRkr", "NUMBER", "kNiutD", "NUMBER", "v", "NUMBER", "HaykzwF", "NUMBER", "aIyvD", "N", "NUMBER", "Xgs", "server", "AmazonS", "NUMBER", "x", "amz", "request", "id", "NUMBER", "E", "NUMBER", "C", "NUMBER", "B", "NUMBER", "DF", "NUMBER", "D", "NUMBER", "etag", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "date", "Tue", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "DEBUG", "Thread", "NUMBER", "Acquiring", "NUMBER", "DEBUG", "Thread", "NUMBER", "UploadSubmissionTask", "transfer_id", "NUMBER", "transfer_future", "TAG", "about", "to", "wait", "for", "the", "following", "futures", "DEBUG", "Thread", "NUMBER", "UploadSubmissionTask", "transfer_id", "NUMBER", "transfer_future", "TAG", "do", "waiting", "for", "dependent", "futures", "DEBUG", "Thread", "NUMBER", "Executing", "task", "UploadSubmissionTask", "transfer_id", "NUMBER", "transfer_future", "TAG", "with", "kwargs", "osutil", "TAG", "client", "TAG", "config", "TAG", "transfer_future", "TAG", "request_executor", "TAG", "DEBUG", "Thread", "NUMBER", "Submitting", "task", "PutObjectTask", "transfer_id", "NUMBER", "extra_args", "bucket", "mercicfditest", "key", "u", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "to", "executor", "TAG", "for", "transfer", "request", "NUMBER", "DEBUG", "Thread", "NUMBER", "Acquiring", "NUMBER", "DEBUG", "Thread", "NUMBER", "Releasing", "acquire", "NUMBER", "None", "DEBUG", "Thread", "NUMBER", "PutObjectTask", "transfer_id", "NUMBER", "extra_args", "bucket", "mercicfditest", "key", "u", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "about", "to", "wait", "for", "the", "following", "futures", "DEBUG", "Thread", "NUMBER", "PutObjectTask", "transfer_id", "NUMBER", "extra_args", "bucket", "mercicfditest", "key", "u", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "do", "waiting", "for", "dependent", "futures", "DEBUG", "Thread", "NUMBER", "Executing", "task", "PutObjectTask", "transfer_id", "NUMBER", "extra_args", "bucket", "mercicfditest", "key", "u", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "with", "kwargs", "extra_args", "client", "TAG", "bucket", "mercicfditest", "key", "u", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "fileobj", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "call", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "call", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Adding", "expect", "NUMBER", "continue", "header", "to", "request", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "before", "call", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Making", "request", "for", "OperationModel", "name", "PutObject", "verify_ssl", "True", "with", "params", "body", "TAG", "url", "u", "LINK", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "headers", "Content", "MD", "NUMBER", "u", "L", "NUMBER", "aDUlipbt", "NUMBER", "b", "c", "NUMBER", "W", "HeRg", "Expect", "NUMBER", "continue", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "generic", "Botocore", "NUMBER", "context", "client_region", "us", "east", "NUMBER", "signing", "bucket", "mercicfditest", "has_streaming_input", "True", "client_config", "TAG", "query_string", "url_path", "u", "mercicfditest", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "method", "u", "PUT", "DEBUG", "Thread", "NUMBER", "Event", "request", "created", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "request", "created", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Event", "before", "sign", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Checking", "for", "DNS", "compatible", "bucket", "for", "LINK", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "DEBUG", "Thread", "NUMBER", "URI", "update", "to", "LINK", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "DEBUG", "Thread", "NUMBER", "Calculating", "signature", "use", "hmacv", "NUMBER", "auth", "NUMBER", "DEBUG", "Thread", "NUMBER", "HTTP", "request", "method", "PUT", "DEBUG", "Thread", "NUMBER", "StringToSign", "PUT", "L", "NUMBER", "aDUlipbt", "NUMBER", "b", "c", "NUMBER", "W", "HeRg", "Tue", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "mercicfditest", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "DEBUG", "Thread", "NUMBER", "Event", "request", "created", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Sending", "http", "request", "TAG", "INFO", "Thread", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "mercicfditest", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "DEBUG", "Thread", "NUMBER", "Waiting", "for", "NUMBER", "Continue", "response", "NUMBER", "DEBUG", "Thread", "NUMBER", "NUMBER", "Continue", "response", "seen", "now", "sending", "request", "body", "NUMBER", "DEBUG", "Thread", "NUMBER", "PUT", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "daac", "NUMBER", "bce", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dd", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "pdf", "HTTP", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Response", "headers", "content", "length", "NUMBER", "x", "amz", "id", "NUMBER", "AQ", "NUMBER", "anEKML", "AeylAMWFy", "NUMBER", "n", "NUMBER", "zw", "NpUvz", "NUMBER", "V", "NUMBER", "Yi", "NUMBER", "a", "NUMBER", "xIAgqlOIZOJJwDWVz", "NUMBER", "nPEg", "NUMBER", "I", "NUMBER", "yjrWYUkBao", "server", "AmazonS", "NUMBER", "x", "amz", "request", "id", "NUMBER", "A", "NUMBER", "C", "NUMBER", "EABE", "NUMBER", "F", "NUMBER", "E", "etag", "NUMBER", "f", "NUMBER", "a", "NUMBER", "edfb", "NUMBER", "ff", "NUMBER", "bf", "NUMBER", "de", "NUMBER", "date", "Tue", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "DEBUG", "Thread", "NUMBER", "Response", "body", "DEBUG", "Thread", "NUMBER", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "No", "retry", "needed", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "DEBUG", "Thread", "NUMBER", "Releasing", "acquire", "NUMBER", "None", "Carga", "exitosa", "CFDI", "Creado", "Iniciando", "proceso", "de", "envio", "Proceso", "CFDI", "Procesado", "correctamente", "The", "code", "upload", "on", "S", "NUMBER", "and", "sends", "and", "email", "NUMBER", "The", "issue", "be", "that", "we", "want", "to", "run", "this", "command", "always", "on", "system", "we", "create", "the", "file", "etc", "systemd", "system", "merci_service", "NUMBER", "service", "The", "config", "be", "Unit", "Description", "Merci", "Api", "application", "After", "network", "NUMBER", "target", "Service", "User", "root", "Group", "root", "PIDFile", "tmp", "gunicorn", "NUMBER", "pid", "Environment", "PATH", "root", "merci_api", "venv", "bin", "WorkingDirectory", "root", "merci_api", "ExecStart", "root", "merci_api", "venv", "bin", "python", "NUMBER", "root", "merci_api", "venv", "bin", "gunicorn", "b", "localhost", "NUMBER", "main", "app", "ExecReload", "bin", "kill", "s", "HUP", "MAINPID", "ExecStop", "bin", "kill", "s", "TERM", "MAINPID", "Install", "WantedBy", "multi", "user", "NUMBER", "target", "We", "run", "the", "script", "merci_service", "NUMBER", "service", "Merci", "Api", "application", "Loaded", "loaded", "etc", "systemd", "system", "merci_service", "NUMBER", "service", "enable", "vendor", "preset", "enable", "Active", "active", "run", "since", "Tue", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "min", "ago", "Main", "PID", "NUMBER", "python", "NUMBER", "Tasks", "NUMBER", "Memory", "NUMBER", "M", "CPU", "NUMBER", "ms", "CGroup", "system", "NUMBER", "slice", "merci_service", "NUMBER", "service", "NUMBER", "root", "merci_api", "venv", "bin", "python", "NUMBER", "root", "merci_api", "venv", "bin", "gunicorn", "b", "localhost", "NUMBER", "main", "app", "NUMBER", "root", "merci_api", "venv", "bin", "python", "NUMBER", "root", "merci_api", "venv", "bin", "gunicorn", "b", "localhost", "NUMBER", "main", "app", "But", "when", "we", "create", "the", "request", "the", "output", "be", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Looking", "for", "credentials", "via", "env", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Looking", "for", "credentials", "via", "assume", "role", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Looking", "for", "credentials", "via", "shared", "credentials", "file", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "INFO", "Thread", "NUMBER", "Found", "credentials", "in", "shared", "credentials", "file", "NUMBER", "aws", "credentials", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "endpoints", "NUMBER", "json", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "service", "NUMBER", "json", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "_retry", "NUMBER", "json", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Registering", "retry", "handlers", "for", "service", "s", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "The", "s", "NUMBER", "config", "key", "be", "not", "a", "dictionary", "type", "ignoring", "its", "value", "of", "None", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Setting", "s", "NUMBER", "timeout", "as", "NUMBER", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Defaulting", "to", "S", "NUMBER", "virtual", "host", "style", "addressing", "with", "path", "style", "addressing", "fallback", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "data", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "resources", "NUMBER", "json", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "endpoints", "NUMBER", "json", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "service", "NUMBER", "json", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Loading", "JSON", "file", "root", "merci_api", "venv", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "_retry", "NUMBER", "json", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Registering", "retry", "handlers", "for", "service", "s", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "The", "s", "NUMBER", "config", "key", "be", "not", "a", "dictionary", "type", "ignoring", "its", "value", "of", "None", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Setting", "s", "NUMBER", "timeout", "as", "NUMBER", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Defaulting", "to", "S", "NUMBER", "virtual", "host", "style", "addressing", "with", "path", "style", "addressing", "fallback", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "DEBUG", "Thread", "NUMBER", "Loading", "s", "NUMBER", "s", "NUMBER", "The", "code", "run", "on", "venv", "NUMBER", "Why", "on", "system", "service", "fail", "and", "in", "console", "works", "fine", "Any", "advice", "Regards", "I", "think", "be", "an", "issue", "for", "that", "the", "thread", "doesn", "t", "work", "properly", "on", "Gunicorn", "run", "on", "venv", "so", "i", "install", "boto", "for", "python", "NUMBER", "and", "all", "works", "fine", "another", "thing", "be", "when", "we", "put", "the", "credentials", "the", "venv", "doesn", "t", "recognize", "the", "folder", "because", "be", "in", "root", "NUMBER", "Whatever", "with", "Boto", "works", "better", "NUMBER", "Thanks", "I", "m", "use", "boto", "NUMBER", "for", "MTurk", "API", "NUMBER", "When", "I", "tried", "to", "create", "HITs", "or", "QulificationTypes", "with", "the", "same", "code", "and", "same", "data", "sometimes", "works", "fine", "but", "sometimes", "throw", "this", "error", "Traceback", "most", "recent", "call", "last", "File", "request", "NUMBER", "py", "line", "NUMBER", "in", "createHIT", "LifetimeInSeconds", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "File", "path_to_python", "Python", "NUMBER", "lib", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "path_to_python", "Python", "NUMBER", "lib", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "error_class", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "NUMBER", "when", "calling", "the", "CreateHITWithHITType", "operation", "HTTP", "Version", "Not", "Supported", "Environment", "python", "NUMBER", "in", "windows", "NUMBER", "I", "wonder", "be", "there", "anything", "wrong", "with", "the", "code", "or", "AMT", "server", "The", "following", "be", "the", "debug", "logs", "NUMBER", "I", "hid", "information", "which", "may", "be", "sensitive", "NUMBER", "The", "same", "code", "also", "works", "fine", "sometimes", "without", "any", "change", "NUMBER", "sh", "python", "CreateHitSample", "NUMBER", "py", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "mturk", "requester", "NUMBER", "CreateHIT", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "OperationModel", "name", "CreateHIT", "verify_ssl", "True", "with", "params", "body", "b", "LifetimeInSeconds", "NUMBER", "Question", "TAG", "n", "TAG", "TAG", "n", "TAG", "TAG", "HIT", "Judge", "the", "Relevance", "between", "Images", "and", "Phrases", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "n", "TAG", "n", "n", "t", "TAG", "TAG", "n", "n", "t", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "Instructions", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "Please", "open", "the", "following", "link", "and", "read", "the", "README", "carefully", "before", "you", "take", "this", "test", "TAG", "TAG", "README", "Link", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "n", "n", "TAG", "TAG", "TAG", "TAG", "n", "TAG", "n", "document", "NUMBER", "ready", "function", "n", "var", "content", "instructionBody", "n", "var", "trigger", "collapseTrigger", "n", "t", "NUMBER", "collapse", "text", "NUMBER", "text", "Click", "to", "collapse", "n", "trigger", "NUMBER", "click", "function", "n", "content", "NUMBER", "toggle", "n", "var", "isVisible", "content", "NUMBER", "be", "visible", "n", "if", "isVisible", "n", "NUMBER", "collapse", "text", "NUMBER", "text", "Click", "to", "collapse", "n", "else", "n", "NUMBER", "collapse", "text", "NUMBER", "text", "Click", "to", "expand", "n", "n", "n", "t", "n", "t", "var", "d", "eid", "NUMBER", "n", "img", "NUMBER", "_", "NUMBER", "_", "NUMBER", "n", "phrase", "World", "War", "II", "n", "Soviet", "Union", "forces", "n", "Vienna", "Polish", "and", "Soviet", "forces", "n", "liberate", "Gda", "u", "NUMBER", "sk", "n", "sentence", "World", "War", "II", "Soviet", "Union", "forces", "invade", "Austria", "and", "take", "Vienna", "Polish", "and", "Soviet", "forces", "liberate", "Gda", "u", "NUMBER", "sk", "NUMBER", "n", "eid", "NUMBER", "n", "img", "NUMBER", "_", "NUMBER", "_", "NUMBER", "n", "phrase", "World", "War", "II", "n", "Soviet", "Union", "forces", "n", "Vienna", "Polish", "and", "Soviet", "forces", "n", "liberate", "Gda", "u", "NUMBER", "sk", "n", "sentence", "World", "War", "II", "Soviet", "Union", "forces", "invade", "Austria", "and", "take", "Vienna", "Polish", "and", "Soviet", "forces", "liberate", "Gda", "u", "NUMBER", "sk", "NUMBER", "n", "eid", "NUMBER", "n", "img", "NUMBER", "_", "NUMBER", "_", "NUMBER", "n", "phrase", "World", "War", "II", "n", "Soviet", "Union", "forces", "n", "Vienna", "Polish", "and", "Soviet", "forces", "n", "liberate", "Gda", "u", "NUMBER", "sk", "n", "sentence", "World", "War", "II", "Soviet", "Union", "forces", "invade", "Austria", "and", "take", "Vienna", "Polish", "and", "Soviet", "forces", "liberate", "Gda", "u", "NUMBER", "sk", "NUMBER", "n", "eid", "NUMBER", "n", "img", "NUMBER", "_", "NUMBER", "_", "NUMBER", "n", "phrase", "World", "War", "II", "n", "Soviet", "Union", "forces", "n", "Vienna", "Polish", "and", "Soviet", "forces", "n", "liberate", "Gda", "u", "NUMBER", "sk", "n", "sentence", "World", "War", "II", "Soviet", "Union", "forces", "invade", "Austria", "and", "take", "Vienna", "Polish", "and", "Soviet", "forces", "liberate", "Gda", "u", "NUMBER", "sk", "NUMBER", "n", "eid", "NUMBER", "n", "img", "NUMBER", "_", "NUMBER", "_", "NUMBER", "n", "phrase", "World", "War", "II", "n", "Soviet", "Union", "forces", "n", "Vienna", "Polish", "and", "Soviet", "forces", "n", "liberate", "Gda", "u", "NUMBER", "sk", "n", "sentence", "World", "War", "II", "Soviet", "Union", "forces", "invade", "Austria", "and", "take", "Vienna", "Polish", "and", "Soviet", "forces", "liberate", "Gda", "u", "NUMBER", "sk", "NUMBER", "n", "eid", "NUMBER", "n", "img", "NUMBER", "_", "NUMBER", "_", "NUMBER", "n", "phrase", "World", "War", "II", "n", "Soviet", "Union", "forces", "n", "Vienna", "Polish", "and", "Soviet", "forces", "n", "liberate", "Gda", "u", "NUMBER", "sk", "n", "sentence", "World", "War", "II", "Soviet", "Union", "forces", "invade", "Austria", "and", "take", "Vienna", "Polish", "and", "Soviet", "forces", "liberate", "Gda", "u", "NUMBER", "sk", "NUMBER", "n", "eid", "NUMBER", "n", "img", "NUMBER", "_", "NUMBER", "_", "NUMBER", "n", "phrase", "World", "War", "II", "n", "Soviet", "Union", "forces", "n", "Vienna", "Polish", "and", "Soviet", "forces", "n", "liberate", "Gda", "u", "NUMBER", "sk", "n", "sentence", "World", "War", "II", "Soviet", "Union", "forces", "invade", "Austria", "and", "take", "Vienna", "Polish", "and", "Soviet", "forces", "liberate", "Gda", "u", "NUMBER", "sk", "NUMBER", "n", "eid", "NUMBER", "n", "img", "NUMBER", "_", "NUMBER", "_", "NUMBER", "n", "phrase", "World", "War", "II", "n", "Axis", "Powers", "n", "Adolf", "Hitler", "n", "Benito", "Mussolini", "n", "the", "Brenner", "Pass", "n", "the", "Alps", "n", "an", "alliance", "n", "sentence", "World", "War", "II", "Axis", "Powers", "Adolf", "Hitler", "and", "Benito", "Mussolini", "meet", "at", "the", "Brenner", "Pass", "in", "the", "Alps", "and", "agree", "to", "form", "an", "alliance", "against", "France", "and", "the", "United", "Kingdom", "NUMBER", "n", "eid", "NUMBER", "n", "img", "NUMBER", "_", "NUMBER", "_", "NUMBER", "n", "phrase", "World", "War", "II", "n", "Axis", "Powers", "n", "Adolf", "Hitler", "n", "Benito", "Mussolini", "n", "the", "Brenner", "Pass", "n", "the", "Alps", "n", "an", "alliance", "n", "sentence", "World", "War", "II", "Axis", "Powers", "Adolf", "Hitler", "and", "Benito", "Mussolini", "meet", "at", "the", "Brenner", "Pass", "in", "the", "Alps", "and", "agree", "to", "form", "an", "alliance", "against", "France", "and", "the", "United", "Kingdom", "NUMBER", "n", "eid", "NUMBER", "n", "img", "NUMBER", "_", "NUMBER", "_", "NUMBER", "n", "phrase", "World", "War", "II", "n", "Axis", "Powers", "n", "Adolf", "Hitler", "n", "Benito", "Mussolini", "n", "the", "Brenner", "Pass", "n", "the", "Alps", "n", "an", "alliance", "n", "sentence", "World", "War", "II", "Axis", "Powers", "Adolf", "Hitler", "and", "Benito", "Mussolini", "meet", "at", "the", "Brenner", "Pass", "in", "the", "Alps", "and", "agree", "to", "form", "an", "alliance", "against", "France", "and", "the", "United", "Kingdom", "NUMBER", "n", "t", "n", "t", "NUMBER", "each", "d", "function", "i", "field", "n", "t", "t", "row", "TAG", "TAG", "n", "t", "t", "row", "NUMBER", "append", "TAG", "field", "sentence", "TAG", "n", "t", "t", "row", "NUMBER", "append", "TAG", "TAG", "TAG", "TAG", "TAG", "n", "t", "t", "select", "TAG", "TAG", "n", "t", "t", "n", "t", "t", "table", "TAG", "TAG", "n", "t", "t", "thead", "TAG", "TAG", "TAG", "phrase", "TAG", "TAG", "concrete", "noun", "phrase", "TAG", "TAG", "abstract", "phrase", "TAG", "TAG", "TAG", "TAG", "strongly", "relevant", "TAG", "TAG", "somewhat", "relevant", "TAG", "TAG", "irrelevant", "TAG", "TAG", "relevant", "TAG", "TAG", "irrelevant", "TAG", "TAG", "TAG", "n", "t", "t", "tbody", "TAG", "TAG", "n", "t", "t", "NUMBER", "each", "field", "phrase", "function", "j", "eachp", "n", "t", "t", "tr", "TAG", "TAG", "n", "t", "t", "tr", "NUMBER", "append", "TAG", "eachp", "TAG", "n", "t", "t", "for", "var", "r", "NUMBER", "r", "TAG", "TAG", "TAG", "n", "t", "t", "n", "t", "t", "tbody", "NUMBER", "append", "tr", "n", "t", "t", "n", "t", "t", "table", "NUMBER", "append", "thead", "n", "t", "t", "table", "NUMBER", "append", "tbody", "n", "t", "t", "n", "t", "t", "select", "NUMBER", "append", "table", "n", "t", "t", "n", "t", "t", "row", "NUMBER", "append", "select", "n", "t", "t", "Categorization", "NUMBER", "append", "row", "n", "t", "t", "Categorization", "NUMBER", "append", "TAG", "TAG", "n", "t", "n", "n", "TAG", "TAG", "turkSetAssignmentID", "TAG", "TAG", "TAG", "n", "TAG", "n", "TAG", "NUMBER", "TAG", "n", "TAG", "n", "Title", "Judge", "the", "Relevance", "between", "Images", "and", "Phrases", "Keywords", "binary", "classification", "relevance", "historical", "event", "Reward", "NUMBER", "AssignmentDurationInSeconds", "NUMBER", "Description", "you", "be", "helping", "to", "decide", "if", "images", "and", "phrases", "be", "relevant", "under", "a", "certain", "historical", "event", "MaxAssignments", "NUMBER", "method", "POST", "url_path", "context", "has_streaming_input", "False", "client_config", "TAG", "client_region", "us", "east", "NUMBER", "query_string", "url", "LINK", "requester", "sandbox", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Windows", "NUMBER", "Botocore", "NUMBER", "Content", "Type", "application", "x", "amz", "json", "NUMBER", "X", "Amz", "Target", "MTurkRequesterServiceV", "NUMBER", "CreateHIT", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "mturk", "requester", "NUMBER", "CreateHIT", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "POST", "content", "type", "application", "x", "amz", "json", "NUMBER", "host", "mturk", "requester", "sandbox", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "x", "amz", "target", "MTurkRequesterServiceV", "NUMBER", "CreateHIT", "content", "type", "host", "x", "amz", "date", "x", "amz", "target", "signature", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "east", "NUMBER", "mturk", "requester", "aws", "NUMBER", "_request", "signature", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "signature", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "POST", "HTTP", "NUMBER", "NUMBER", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "date", "Tue", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "connection", "close", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Received", "a", "non", "protocol", "specific", "error", "response", "from", "the", "service", "unable", "to", "populate", "error", "code", "and", "message", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "mturk", "requester", "NUMBER", "CreateHIT", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "CreateHitSample", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "Question", "questionSample", "File", "path_to_python", "Python", "NUMBER", "lib", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "path_to_python", "Python", "NUMBER", "lib", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "error_class", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "NUMBER", "when", "calling", "the", "CreateHIT", "operation", "HTTP", "Version", "Not", "Supported", "This", "be", "happening", "a", "lot", "with", "me", "as", "well", "NUMBER", "We", "ve", "developed", "an", "api", "for", "mturk", "to", "create", "post", "and", "retrieve", "HITs", "to", "Amazon", "Mechanical", "Turk", "NUMBER", "Just", "now", "I", "run", "my", "django", "server", "and", "tried", "to", "post", "some", "HITs", "NUMBER", "It", "posted", "some", "of", "them", "then", "fail", "NUMBER", "I", "tried", "the", "exact", "same", "command", "instant", "failure", "NUMBER", "I", "tried", "the", "exact", "same", "command", "and", "this", "time", "all", "the", "HITs", "were", "posted", "NUMBER", "I", "raise", "the", "same", "exception", "NUMBER", "abuccts", "michaelromero", "Can", "you", "confirm", "if", "this", "be", "still", "an", "issue", "I", "was", "in", "contact", "with", "the", "MTurk", "team", "and", "it", "sounds", "like", "the", "issue", "should", "be", "fix", "now", "NUMBER", "Closing", "due", "to", "inactivity", "kyleknap", "No", "longer", "an", "issue", "and", "hasn", "t", "be", "for", "a", "long", "time", "NUMBER", "The", "API", "documentation", "for", "the", "AWS", "Batch", "submit", "job", "action", "LINK", "_SubmitJob", "NUMBER", "html", "Batch", "SubmitJob", "request", "dependsOn", "describes", "the", "option", "dependsOn", "as", "A", "list", "of", "job", "IDs", "on", "which", "this", "job", "depends", "NUMBER", "A", "job", "can", "depend", "upon", "a", "maximum", "of", "NUMBER", "jobs", "NUMBER", "The", "Boto", "NUMBER", "documentation", "for", "the", "same", "submit", "job", "action", "LINK", "Batch", "NUMBER", "Client", "NUMBER", "submit_job", "describes", "the", "option", "as", "A", "list", "of", "job", "names", "or", "IDs", "on", "which", "this", "job", "depends", "NUMBER", "A", "job", "can", "depend", "upon", "a", "maximum", "of", "NUMBER", "jobs", "NUMBER", "Now", "I", "be", "wondering", "if", "it", "be", "really", "possible", "to", "provide", "a", "list", "of", "job", "names", "Does", "the", "API", "really", "support", "that", "or", "be", "only", "IDs", "possible", "It", "appears", "the", "or", "names", "bit", "be", "just", "wrong", "the", "data", "structure", "requires", "job", "ids", "from", "my", "reading", "of", "the", "docs", "both", "in", "boto", "NUMBER", "down", "a", "bit", "further", "and", "in", "the", "original", "REST", "documentation", "NUMBER", "This", "seems", "to", "have", "be", "synced", "closing", "out", "NUMBER", "I", "ve", "just", "install", "boto", "NUMBER", "from", "pip", "OSX", "El", "captain", "pip", "install", "boto", "NUMBER", "user", "The", "following", "version", "have", "be", "install", "pip", "freeze", "grep", "boto", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "While", "trying", "this", "simple", "example", "I", "be", "get", "the", "following", "stack", "trace", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "client", "boto", "NUMBER", "client", "s", "NUMBER", "ImportError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "client", "boto", "NUMBER", "client", "s", "NUMBER", "Users", "fsantos", "Library", "Python", "NUMBER", "lib", "python", "site", "package", "boto", "NUMBER", "__init__", "NUMBER", "pyc", "in", "client", "args", "kwargs", "NUMBER", "See", "py", "meth", "boto", "NUMBER", "session", "NUMBER", "Session", "NUMBER", "client", "NUMBER", "NUMBER", "NUMBER", "return", "_get_default_session", "NUMBER", "client", "args", "kwargs", "NUMBER", "NUMBER", "Users", "fsantos", "Library", "Python", "NUMBER", "lib", "python", "site", "package", "boto", "NUMBER", "session", "NUMBER", "pyc", "in", "client", "self", "service_name", "region_name", "api_version", "use_ssl", "verify", "endpoint_url", "aws_access_key_id", "aws_secret_access_key", "aws_session_token", "config", "NUMBER", "aws_access_key_id", "aws_access_key_id", "NUMBER", "aws_secret_access_key", "aws_secret_access_key", "NUMBER", "aws_session_token", "aws_session_token", "config", "config", "NUMBER", "NUMBER", "def", "resource", "self", "service_name", "region_name", "None", "api_version", "None", "Library", "Python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "pyc", "in", "create_client", "self", "service_name", "region_name", "api_version", "use_ssl", "verify", "endpoint_url", "aws_access_key_id", "aws_secret_access_key", "aws_session_token", "config", "NUMBER", "is_secure", "use_ssl", "endpoint_url", "endpoint_url", "verify", "verify", "NUMBER", "credentials", "credentials", "scoped_config", "self", "NUMBER", "get_scoped_config", "NUMBER", "client_config", "config", "api_version", "api_version", "NUMBER", "return", "client", "NUMBER", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "pyc", "in", "create_client", "self", "service_name", "region_name", "is_secure", "endpoint_url", "verify", "credentials", "scoped_config", "api_version", "client_config", "NUMBER", "client_config", "None", "NUMBER", "service_model", "self", "NUMBER", "_load_service_model", "service_name", "api_version", "NUMBER", "cls", "self", "NUMBER", "_create_client_class", "service_name", "service_model", "NUMBER", "endpoint_bridge", "ClientEndpointBridge", "NUMBER", "self", "NUMBER", "_endpoint_resolver", "scoped_config", "client_config", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "pyc", "in", "_create_client_class", "self", "service_name", "service_model", "NUMBER", "self", "NUMBER", "_event_emitter", "NUMBER", "emit", "creating", "client", "class", "NUMBER", "s", "service_name", "NUMBER", "class_attributes", "class_attributes", "NUMBER", "base_classes", "bases", "NUMBER", "class_name", "get_service_module_name", "service_model", "NUMBER", "cls", "type", "str", "class_name", "tuple", "bases", "class_attributes", "Library", "Python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "pyc", "in", "emit", "self", "event_name", "kwargs", "NUMBER", "handlers", "NUMBER", "NUMBER", "NUMBER", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "NUMBER", "NUMBER", "def", "emit_until_response", "self", "event_name", "kwargs", "Library", "Python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "pyc", "in", "_emit", "self", "event_name", "kwargs", "stop_on_response", "NUMBER", "for", "handler", "in", "handlers_to_call", "NUMBER", "logger", "NUMBER", "debug", "Event", "s", "calling", "handler", "s", "event_name", "handler", "NUMBER", "response", "handler", "kwargs", "NUMBER", "responses", "NUMBER", "append", "handler", "response", "NUMBER", "if", "stop_on_response", "and", "response", "be", "not", "None", "Users", "fsantos", "Library", "Python", "NUMBER", "lib", "python", "site", "package", "boto", "NUMBER", "utils", "NUMBER", "pyc", "in", "_handler", "kwargs", "NUMBER", "def", "_handler", "kwargs", "NUMBER", "module", "function_name", "full_name", "NUMBER", "rsplit", "NUMBER", "NUMBER", "NUMBER", "module", "import_module", "module", "NUMBER", "kwargs", "NUMBER", "update", "parent_kwargs", "NUMBER", "return", "getattr", "module", "function_name", "kwargs", "Users", "fsantos", "Library", "Python", "NUMBER", "lib", "python", "site", "package", "boto", "NUMBER", "utils", "NUMBER", "pyc", "in", "import_module", "name", "NUMBER", "NUMBER", "NUMBER", "__import__", "name", "NUMBER", "return", "sys", "NUMBER", "modules", "name", "NUMBER", "Users", "fsantos", "Library", "Python", "NUMBER", "lib", "python", "site", "package", "boto", "NUMBER", "s", "NUMBER", "inject", "NUMBER", "py", "in", "TAG", "NUMBER", "from", "botocore", "NUMBER", "exception", "import", "ClientError", "NUMBER", "NUMBER", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "create_transfer_manager", "NUMBER", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "TransferConfig", "S", "NUMBER", "Transfer", "NUMBER", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "ProgressCallbackInvoker", "Users", "fsantos", "Library", "Python", "NUMBER", "lib", "python", "site", "package", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "py", "in", "TAG", "NUMBER", "from", "s", "NUMBER", "transfer", "NUMBER", "manager", "import", "TransferConfig", "as", "S", "NUMBER", "TransferConfig", "NUMBER", "from", "s", "NUMBER", "transfer", "NUMBER", "manager", "import", "TransferManager", "NUMBER", "from", "s", "NUMBER", "transfer", "NUMBER", "futures", "import", "NonThreadedExecutor", "NUMBER", "from", "s", "NUMBER", "transfer", "NUMBER", "subscribers", "import", "BaseSubscriber", "NUMBER", "from", "s", "NUMBER", "transfer", "NUMBER", "utils", "import", "OSUtils", "ImportError", "cannot", "import", "name", "NonThreadedExecutor", "Version", "pip", "freeze", "grep", "s", "NUMBER", "transfer", "s", "NUMBER", "transfer", "NUMBER", "Situation", "resolve", "after", "upgrading", "to", "NUMBER", "Thanks", "Resolved", "after", "upgrading", "the", "package", "s", "NUMBER", "transfer", "from", "NUMBER", "to", "NUMBER", "Thanks", "I", "see", "that", "message", "NUMBER", "message_id", "be", "different", "from", "body", "MessageId", "What", "be", "the", "difference", "between", "the", "two", "sqs", "boto", "NUMBER", "resource", "sqs", "region_name", "region", "aws_access_key_id", "aws_access_key_id", "aws_secret_access_key", "aws_secret_access_key", "queue_obj", "sqs", "NUMBER", "Queue", "queue_url", "message", "queue_obj", "NUMBER", "receive_messages", "AttributeNames", "All", "MessageAttributeNames", "All", "VisibilityTimeout", "NUMBER", "WaitTimeSeconds", "NUMBER", "MaxNumberOfMessages", "NUMBER", "for", "message", "in", "message", "body", "json", "NUMBER", "loads", "message", "NUMBER", "body", "print", "str", "message", "NUMBER", "message_id", "str", "body", "MessageId", "This", "prints", "False", "all", "the", "time", "Posted", "here", "for", "the", "same", "LINK", "sqs", "message", "id", "vs", "messageid", "Thanks", "NUMBER", "I", "would", "like", "know", "which", "Id", "be", "going", "to", "be", "unique", "in", "a", "queue", "I", "would", "like", "to", "store", "message", "by", "id", "as", "key", "I", "be", "write", "a", "script", "utilizing", "Boto", "NUMBER", "client", "library", "NUMBER", "I", "be", "trying", "to", "copy", "an", "object", "from", "one", "bucket", "and", "place", "it", "into", "another", "bucket", "which", "may", "or", "may", "not", "contain", "the", "object", "key", "but", "to", "my", "understand", "if", "the", "key", "did", "not", "exist", "it", "would", "create", "it", "NUMBER", "Below", "be", "my", "code", "the", "branchName", "and", "variables", "be", "instantiated", "do", "exist", "as", "strings", "NUMBER", "copyFromLocation", "CloudFormationPushBucket", "branchName", "copyToLocation", "DeploymentObjects", "branchName", "s", "NUMBER", "copy_object", "Bucket", "gitlab", "test", "tyroz", "NUMBER", "CopySource", "Bucket", "gitlab", "test", "tyroz", "Key", "copyFromLocation", "Key", "copyToLocation", "This", "code", "returns", "the", "error", "An", "error", "occur", "NoSuchKey", "when", "calling", "the", "CopyObject", "operation", "The", "specified", "key", "do", "not", "exist", "NUMBER", "NoSuchKey", "Traceback", "most", "recent", "call", "last", "File", "var", "task", "lambda_function", "NUMBER", "py", "line", "NUMBER", "in", "lambda_handler", "Key", "copyToLocation", "File", "var", "runtime", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "var", "runtime", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "error_class", "parsed_response", "operation_name", "NoSuchKey", "An", "error", "occur", "NoSuchKey", "when", "calling", "the", "CopyObject", "operation", "The", "specified", "key", "do", "not", "exist", "NUMBER", "I", "have", "attempted", "to", "call", "the", "CopySource", "dict", "as", "a", "string", "NUMBER", "As", "well", "as", "the", "Key", "location", "as", "a", "hardcoded", "string", "rather", "than", "the", "above", "method", "as", "a", "variable", "NUMBER", "All", "attempts", "have", "returned", "the", "same", "error", "NUMBER", "The", "above", "code", "be", "calling", "a", "key", "which", "currently", "exists", "in", "the", "gitlab", "test", "tyroz", "NUMBER", "bucket", "NUMBER", "When", "change", "to", "something", "which", "do", "not", "exist", "the", "same", "error", "be", "given", "NUMBER", "Ok", "thank", "you", "NUMBER", "So", "there", "be", "no", "way", "to", "copy", "an", "entire", "S", "NUMBER", "folder", "with", "multiple", "objects", "into", "a", "new", "branch", "use", "Boto", "NUMBER", "Thank", "you", "for", "your", "quick", "and", "accurate", "response", "NUMBER", "Appreciate", "it", "The", "demo", "shows", "age", "between", "NUMBER", "to", "NUMBER", "years", "but", "I", "do", "not", "see", "this", "in", "response", "that", "I", "get", "from", "boto", "NUMBER", "This", "seems", "to", "be", "work", "in", "botocore", "NUMBER", "LINK", "I", "saw", "this", "issue", "too", "you", "have", "to", "make", "sure", "to", "pass", "Attributes", "as", "ALL", "as", "shown", "below", "rekognition", "NUMBER", "detect_faces", "Image", "Bytes", "imagebytes", "Attributes", "ALL", "I", "was", "initially", "just", "calling", "it", "like", "this", "rekognition", "NUMBER", "detect_faces", "Image", "Bytes", "imagebytes", "which", "didn", "t", "result", "in", "any", "error", "but", "didn", "t", "return", "any", "of", "the", "attributes", "either", "NUMBER", "I", "spent", "hours", "researching", "this", "so", "I", "hope", "this", "helps", "someone", "else", "NUMBER", "Glad", "you", "were", "able", "to", "find", "a", "solution", "For", "further", "api", "usage", "help", "I", "would", "recommend", "make", "use", "of", "one", "of", "our", "community", "resources", "LINK", "get", "help", "NUMBER", "Can", "i", "pass", "cloudformation", "parameter", "file", "as", "input", "to", "Parameters", "Can", "i", "pass", "any", "conf", "file", "as", "reference", "to", "Parameters", "What", "be", "the", "valid", "format", "Invalid", "type", "for", "parameter", "Parameters", "value", "LINK", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "test", "params_airflow", "NUMBER", "json", "type", "TAG", "valid", "types", "TAG", "TAG", "this", "be", "a", "bad", "request", "for", "help", "NUMBER", "please", "show", "your", "code", "to", "invoke", "NUMBER", "or", "better", "read", "the", "docs", "first", "LINK", "CloudFormation", "NUMBER", "Client", "NUMBER", "create_stack", "NUMBER", "There", "be", "hundreds", "of", "examples", "of", "use", "create_stack", "if", "you", "google", "NUMBER", "Here", "be", "my", "code", "Can", "i", "pass", "JSON", "formated", "parameter", "file", "as", "input", "to", "Parameters", "I", "do", "not", "see", "any", "example", "of", "this", "kind", "on", "google", "will", "this", "work", "or", "Do", "i", "have", "specify", "each", "parameter", "in", "the", "parameters", "section", "of", "create", "stack", "what", "if", "i", "have", "NUMBER", "parameters", "to", "specify", "that", "would", "not", "be", "a", "good", "way", "to", "pass", "parameters", "STACK_NAME", "efs", "emrtemp", "temp_url", "LINK", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "xxx", "efs", "EMR", "Up", "NUMBER", "json", "params", "LINK", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "xxx", "params_airflow", "NUMBER", "json", "CFT", "boto", "NUMBER", "client", "cloudformation", "region_name", "REGION", "def", "stack_func", "stack", "STACK_NAME", "url", "temp_url", "pram", "params", "print", "Creating", "stack", "stack", "CFT", "NUMBER", "create_stack", "StackName", "stack", "TemplateURL", "url", "Parameters", "pram", "parameters", "here", "isn", "t", "supposed", "to", "be", "a", "url", "to", "s", "NUMBER", "but", "per", "the", "linked", "docs", "a", "list", "of", "dictionaries", "NUMBER", "Best", "practice", "for", "manipulating", "an", "S", "NUMBER", "bucket", "be", "to", "connect", "to", "the", "endpoint", "that", "corresponds", "to", "its", "location", "constraint", "NUMBER", "I", "thought", "boto", "NUMBER", "s", "S", "NUMBER", "resource", "might", "do", "this", "automatically", "but", "it", "appears", "to", "just", "use", "whatever", "region_name", "you", "have", "in", "your", "config", "NUMBER", "Does", "boto", "NUMBER", "have", "some", "other", "mechanism", "for", "dealing", "gracefully", "with", "the", "NUMBER", "s", "you", "get", "from", "connecting", "to", "the", "wrong", "endpoint", "as", "in", "LINK", "Or", "be", "this", "something", "I", "should", "continue", "to", "work", "around", "Okay", "cool", "NUMBER", "I", "m", "a", "bit", "confused", "that", "fetching", "the", "location", "constraint", "isn", "t", "part", "of", "the", "Resource", "Bucket", "interface", "unless", "I", "miss", "it", "NUMBER", "Here", "s", "the", "approach", "I", "m", "currently", "use", "in", "mrjob", "LINK", "to", "get", "Buckets", "with", "the", "right", "endpoint", "python", "def", "get_bucket", "self", "bucket_name", "Get", "the", "bucket", "connecting", "through", "the", "appropriate", "endpoint", "NUMBER", "client", "self", "NUMBER", "make_s", "NUMBER", "_client", "try", "region_name", "_get_bucket_region", "client", "bucket_name", "except", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "as", "ex", "it", "s", "possible", "to", "have", "access", "to", "a", "bucket", "but", "not", "access", "to", "its", "location", "metadata", "NUMBER", "This", "happens", "on", "the", "elasticmapreduce", "bucket", "for", "example", "see", "NUMBER", "if", "_client_error_status", "ex", "NUMBER", "raise", "log", "NUMBER", "warning", "Could", "not", "infer", "endpoint", "for", "bucket", "s", "assuming", "defaults", "bucket_name", "region_name", "None", "resource", "self", "NUMBER", "make_s", "NUMBER", "_resource", "region_name", "return", "resource", "NUMBER", "Bucket", "bucket_name", "This", "be", "in", "mrjob", "fs", "s", "NUMBER", "py", "not", "posting", "a", "direct", "link", "to", "the", "code", "because", "it", "hasn", "t", "be", "merge", "yet", "NUMBER", "This", "feels", "pretty", "roundabout", "be", "there", "a", "more", "straightforward", "way", "I", "could", "accomplish", "this", "If", "you", "update", "to", "the", "latest", "botocore", "and", "use", "sigv", "NUMBER", "then", "you", "will", "be", "able", "to", "take", "advantage", "of", "auto", "redirection", "NUMBER", "When", "attempting", "to", "get", "a", "cost", "estimate", "for", "an", "autoscaling", "group", "use", "a", "the", "fairly", "new", "r", "NUMBER", "xlarge", "instance", "type", "the", "EstimateTemplateCost", "throw", "the", "following", "error", "NUMBER", "CRITICAL", "Creating", "stack", "meetup", "prod", "services", "cluster", "asg", "core", "fail", "NUMBER", "Error", "An", "error", "occur", "ValidationError", "when", "calling", "the", "EstimateTemplateCost", "operation", "r", "NUMBER", "xlarge", "be", "an", "invalid", "InstanceType", "value", "NUMBER", "Valid", "values", "be", "c", "NUMBER", "medium", "c", "NUMBER", "xlarge", "c", "NUMBER", "xlarge", "c", "NUMBER", "xlarge", "c", "NUMBER", "xlarge", "c", "NUMBER", "large", "c", "NUMBER", "xlarge", "c", "NUMBER", "xlarge", "c", "NUMBER", "xlarge", "c", "NUMBER", "xlarge", "c", "NUMBER", "large", "c", "NUMBER", "xlarge", "cc", "NUMBER", "xlarge", "cc", "NUMBER", "xlarge", "cg", "NUMBER", "xlarge", "cr", "NUMBER", "xlarge", "d", "NUMBER", "xlarge", "d", "NUMBER", "xlarge", "d", "NUMBER", "xlarge", "d", "NUMBER", "xlarge", "g", "NUMBER", "xlarge", "g", "NUMBER", "xlarge", "hi", "NUMBER", "xlarge", "hs", "NUMBER", "xlarge", "i", "NUMBER", "xlarge", "i", "NUMBER", "xlarge", "i", "NUMBER", "xlarge", "i", "NUMBER", "xlarge", "m", "NUMBER", "large", "m", "NUMBER", "medium", "m", "NUMBER", "small", "m", "NUMBER", "xlarge", "m", "NUMBER", "xlarge", "m", "NUMBER", "xlarge", "m", "NUMBER", "xlarge", "m", "NUMBER", "xlarge", "m", "NUMBER", "large", "m", "NUMBER", "medium", "m", "NUMBER", "xlarge", "m", "NUMBER", "xlarge", "m", "NUMBER", "xlarge", "m", "NUMBER", "xlarge", "m", "NUMBER", "large", "m", "NUMBER", "xlarge", "r", "NUMBER", "xlarge", "r", "NUMBER", "xlarge", "r", "NUMBER", "xlarge", "r", "NUMBER", "large", "r", "NUMBER", "xlarge", "t", "NUMBER", "micro", "t", "NUMBER", "large", "t", "NUMBER", "medium", "t", "NUMBER", "micro", "t", "NUMBER", "small", "What", "region", "was", "this", "call", "made", "to", "Is", "it", "a", "region", "that", "support", "r", "NUMBER", "xlarge", "As", "of", "Jan", "NUMBER", "the", "AWS", "Lex", "service", "be", "still", "in", "Preview", "and", "hence", "I", "assume", "that", "s", "why", "it", "s", "not", "currently", "include", "as", "a", "Service", "from", "the", "Boto", "NUMBER", "SDK", "NUMBER", "In", "order", "to", "use", "Lex", "with", "Boto", "NUMBER", "I", "created", "my", "own", "JSON", "service", "descriptor", "here", "AWS", "Python", "SDK", "Boto", "NUMBER", "Lex", "Service", "Descriptor", "JSON", "LINK", "This", "should", "be", "add", "to", "your", "project", "directory", "like", "so", "botocore", "data", "dir", "lex", "new", "dir", "NUMBER", "NUMBER", "NUMBER", "new", "dir", "service", "NUMBER", "json", "new", "file", "Gist", "file", "contents", "above", "I", "hope", "this", "helps", "someone", "else", "Hello", "I", "have", "googled", "around", "a", "lot", "and", "have", "be", "unable", "to", "find", "an", "example", "of", "how", "to", "create", "an", "security", "group", "rule", "that", "allows", "ingress", "to", "self", "the", "same", "as", "the", "default", "group", "that", "be", "created", "in", "a", "new", "VPC", "NUMBER", "Does", "anyone", "know", "of", "a", "code", "example", "Thanks", "Andrew", "I", "tried", "the", "IpPermissions", "approach", "security_group", "NUMBER", "owner_id", "NUMBER", "security_group", "NUMBER", "group_id", "sg", "e", "NUMBER", "b", "NUMBER", "security_group", "NUMBER", "vpc_id", "vpc", "NUMBER", "d", "NUMBER", "b", "perms", "NUMBER", "NUMBER", "IpProtocol", "NUMBER", "NUMBER", "UserIdGroupPairs", "NUMBER", "NUMBER", "UserId", "NUMBER", "NUMBER", "GroupId", "sg", "e", "NUMBER", "b", "NUMBER", "NUMBER", "VpcId", "vpc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "security_group", "NUMBER", "authorize_ingress", "IpPermissions", "perms", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "api_params", "operation_model", "context", "request_context", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_convert_to_request_dict", "api_params", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "validate", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "raise", "ParamValidationError", "report", "report", "NUMBER", "generate_report", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Invalid", "type", "for", "parameter", "IpPermissions", "NUMBER", "NUMBER", "IpProtocol", "value", "NUMBER", "type", "TAG", "valid", "types", "TAG", "And", "It", "cant", "seem", "to", "see", "beyond", "the", "default", "VPC", "NUMBER", "security_group", "NUMBER", "owner_id", "NUMBER", "security_group", "NUMBER", "group_id", "sg", "e", "NUMBER", "b", "NUMBER", "security_group", "NUMBER", "vpc_id", "vpc", "NUMBER", "d", "NUMBER", "b", "security_group", "NUMBER", "authorize_ingress", "SourceSecurityGroupName", "wat", "SourceSecurityGroupOwnerId", "vpc", "NUMBER", "d", "NUMBER", "b", "IpProtocol", "tcp", "FromPort", "NUMBER", "ToPort", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidGroup", "NUMBER", "NotFound", "when", "calling", "the", "AuthorizeSecurityGroupIngress", "operation", "The", "security", "group", "wat", "do", "not", "exist", "in", "default", "VPC", "vpc", "cfede", "NUMBER", "a", "NUMBER", "security_group", "NUMBER", "authorize_ingress", "SourceSecurityGroupName", "wat", "SourceSecurityGroupOwnerId", "NUMBER", "IpProtocol", "tcp", "FromPort", "NUMBER", "ToPort", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidGroup", "NUMBER", "NotFound", "when", "calling", "the", "AuthorizeSecurityGroupIngress", "operation", "The", "security", "group", "wat", "do", "not", "exist", "in", "default", "VPC", "vpc", "cfede", "NUMBER", "a", "NUMBER", "Currently", "I", "poll", "but", "would", "much", "prefer", "waiters", "for", "the", "following", "At", "least", "one", "EC", "NUMBER", "instance", "available", "in", "ECS", "cluster", "NUMBER", "I", "can", "wait", "for", "the", "an", "EC", "NUMBER", "instance", "run", "but", "there", "s", "additional", "time", "until", "it", "s", "available", "in", "the", "cluster", "NUMBER", "Service", "has", "reach", "steady", "state", "NUMBER", "I", "can", "wait", "for", "services_stable", "but", "it", "s", "not", "really", "ready", "until", "I", "see", "reached", "a", "steady", "state", "in", "the", "service", "s", "events", "NUMBER", "Hello", "there", "I", "start", "use", "boto", "NUMBER", "to", "make", "use", "of", "Amazon", "s", "Data", "Migration", "Service", "but", "I", "believe", "I", "have", "find", "a", "bug", "in", "create_replication_task", "NUMBER", "Both", "the", "boto", "NUMBER", "documentation", "LINK", "dms", "DatabaseMigrationService", "NUMBER", "Client", "NUMBER", "create_replication_task", "and", "the", "AWS", "DMS", "documentation", "LINK", "_CreateReplicationTask", "NUMBER", "html", "mention", "that", "the", "TableMappings", "parameter", "should", "be", "a", "URL", "in", "the", "file", "schema", "point", "at", "a", "local", "file", "after", "trying", "this", "seeing", "it", "doesn", "t", "work", "AWS", "responds", "with", "an", "invalid", "JSON", "error", "and", "doing", "some", "extra", "sleuthing", "I", "discover", "that", "the", "way", "to", "get", "the", "API", "call", "to", "work", "be", "to", "provide", "the", "table", "mappings", "as", "a", "JSON", "blob", "directly", "to", "TableMappings", "NUMBER", "Would", "it", "be", "difficult", "to", "get", "create_replication_task", "to", "work", "consistently", "with", "the", "AWS", "documentation", "If", "not", "perhaps", "I", "can", "make", "the", "change", "and", "submit", "it", "as", "a", "PR", "NUMBER", "Thanks", "for", "taking", "the", "time", "to", "create", "and", "maintain", "boto", "NUMBER", "This", "seems", "to", "be", "the", "same", "issue", "LINK", "Ahhh", "that", "makes", "sense", "thanks", "for", "clarifying", "I", "have", "this", "script", "I", "have", "write", "NUMBER", "in", "the", "interpreter", "it", "works", "NUMBER", "out", "of", "NUMBER", "times", "NUMBER", "I", "be", "trying", "to", "look", "for", "instances", "with", "tags", "that", "have", "the", "Key", "Environment", "and", "value", "devbox", "as", "well", "as", "see", "if", "it", "has", "a", "tag", "key", "named", "Owner", "and", "if", "so", "return", "the", "instance", "ID", "and", "owner", "value", "in", "a", "list", "of", "dictionairs", "NUMBER", "For", "auditing", "DitC", "boxes", "NUMBER", "This", "should", "list", "all", "ditc", "boxes", "by", "their", "creator", "import", "sys", "import", "boto", "NUMBER", "import", "time", "aws_key", "XXXXXXXXXXXXXX", "aws_secret", "XXXXXXXXXXXXXXXXXXXXXXXXXX", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "aws_access_key_id", "aws_key", "aws_secret_access_key", "aws_secret", "instances", "ec", "NUMBER", "instances", "NUMBER", "filter", "Filters", "Name", "instance", "state", "name", "Values", "run", "instanceList", "for", "res", "in", "instances", "instanceList", "NUMBER", "append", "res", "NUMBER", "id", "devboxes", "for", "instanceId", "in", "instanceList", "instance", "ec", "NUMBER", "Instance", "instanceId", "count", "NUMBER", "maxTries", "NUMBER", "sleepTimeOut", "NUMBER", "while", "count", "TAG", "line", "NUMBER", "in", "TAG", "i", "NUMBER", "meta", "NUMBER", "data", "Tags", "TypeError", "NoneType", "object", "be", "not", "subscriptable", "All", "my", "instances", "have", "these", "tags", "so", "this", "be", "disconcerting", "NUMBER", "You", "can", "also", "achieve", "the", "same", "thing", "with", "one", "API", "call", "NUMBER", "python", "import", "boto", "NUMBER", "def", "get_id", "instance", "return", "instance", "InstanceId", "def", "get_owner", "instance", "for", "tag", "in", "instance", "Tags", "if", "tag", "Key", "Owner", "return", "tag", "Value", "return", "Unknown", "def", "get_str", "instance", "return", "Owner", "s", "Instance", "s", "get_owner", "instance", "get_id", "instance", "def", "main", "ec", "NUMBER", "boto", "NUMBER", "client", "ec", "NUMBER", "response", "ec", "NUMBER", "describe_instances", "Filters", "Name", "tag", "Environment", "Values", "devbox", "for", "reservation", "in", "response", "Reservations", "for", "instance", "in", "reservation", "Instances", "print", "get_str", "instance", "if", "__name__", "__main__", "main", "a", "presigned", "url", "be", "required", "when", "copy", "an", "encrypted", "RDS", "snapshot", "cross", "regions", "NUMBER", "The", "parameters", "could", "be", "find", "here", "LINK", "_CopyDBSnapshot", "NUMBER", "html", "The", "DestinationRegion", "be", "not", "support", "in", "copy_db_snapshot", "client", "method", "for", "generate_presigned_url", "NUMBER", "The", "generate", "URL", "also", "doesn", "t", "work", "for", "copy_db_snapshot", "method", "NUMBER", "We", "get", "a", "NUMBER", "status", "NUMBER", "The", "code", "I", "use", "be", "something", "like", "rds", "boto", "NUMBER", "client", "rds", "target_region", "url", "rds", "NUMBER", "generate_presigned_url", "copy_db_snapshot", "Params", "TargetDBSnapshotIdentifier", "test", "KmsKeyId", "my", "key", "SourceDBSnapshotIdentifier", "test", "response", "rds", "NUMBER", "copy_db_snapshot", "SourceDBSnapshotIdentifier", "test", "TargetDBSnapshotIdentifier", "test", "KmsKeyId", "my", "key", "PreSignedUrl", "url", "We", "get", "NUMBER", "error", "even", "not", "specify", "the", "presignedurl", "NUMBER", "Trace", "File", "home", "ec", "NUMBER", "user", "judi", "prod", "dirt", "test", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "home", "ec", "NUMBER", "user", "judi", "prod", "dirt", "test", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "error_class", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidParameterValue", "when", "calling", "the", "CopyDBSnapshot", "operation", "PreSignedUrl", "could", "not", "be", "authenticated", "NUMBER", "The", "aws", "CLI", "works", "on", "the", "same", "machine", "NUMBER", "Ran", "into", "the", "same", "issue", "can", "you", "try", "this", "response", "rds", "NUMBER", "copy_db_snapshot", "SourceDBSnapshotIdentifier", "test", "TargetDBSnapshotIdentifier", "test", "KmsKeyId", "my", "key", "SourceRegion", "SOURCE_REGION", "I", "tried", "both", "with", "Source", "Region", "and", "without", "Source", "Region", "but", "still", "no", "luck", "NUMBER", "get", "same", "error", "message", "PreSignedUrl", "could", "not", "be", "authenticated", "kyleknap", "I", "remove", "presignedURL", "and", "add", "SourceRegion", "but", "I", "still", "get", "the", "same", "NUMBER", "error", "code", "NUMBER", "Then", "I", "figured", "that", "the", "stacktrace", "be", "complaining", "about", "my", "Tags", "NUMBER", "The", "method", "works", "fine", "if", "I", "remove", "my", "Tags", "NUMBER", "I", "don", "t", "think", "my", "Tags", "be", "wrong", "though", "since", "it", "worked", "fine", "before", "I", "encrypted", "my", "db", "snapshot", "NUMBER", "Tags", "Key", "xxx", "Value", "yyy", "Key", "aaa", "Value", "bbb", "Key", "qqq", "Value", "www", "Any", "idea", "Just", "for", "my", "sanity", "be", "this", "method", "in", "the", "documentation", "anywhere", "I", "ve", "be", "fighting", "with", "boto", "s", "copy_db_snapshot", "for", "about", "a", "week", "only", "to", "discover", "that", "the", "PreSignedUrl", "isn", "t", "even", "necessary", "NUMBER", "You", "be", "correct", "the", "presigned", "URL", "isnt", "necessary", "NUMBER", "SourceURL", "do", "the", "trick", "hongchaowang", "Could", "you", "provide", "some", "debug", "logs", "that", "demonstrate", "the", "issue", "It", "s", "odd", "that", "it", "would", "be", "work", "on", "the", "cli", "since", "both", "that", "and", "boto", "NUMBER", "share", "the", "same", "common", "core", "to", "do", "all", "the", "heavy", "lifting", "NUMBER", "Closing", "due", "to", "inactivity", "NUMBER", "Please", "reopen", "the", "issue", "if", "you", "be", "able", "to", "provide", "debug", "logs", "NUMBER", "We", "were", "trying", "to", "setup", "a", "boto", "NUMBER", "environment", "from", "the", "master", "branch", "LINK", "NUMBER", "We", "be", "following", "the", "instructions", "mention", "in", "the", "README", "NUMBER", "rst", "file", "git", "clone", "LINK", "cd", "boto", "NUMBER", "virtualenv", "venv", "NUMBER", "NUMBER", "venv", "bin", "activate", "pip", "install", "r", "requirements", "NUMBER", "txt", "pip", "install", "e", "NUMBER", "But", "we", "observe", "that", "on", "executing", "pip", "install", "r", "requirement", "NUMBER", "txt", "the", "setup", "fail", "with", "the", "following", "exception", "ValueError", "Expected", "or", "end", "of", "list", "in", "unittest", "NUMBER", "NUMBER", "python_version", "NUMBER", "at", "python_version", "NUMBER", "Complete", "trace", "venv", "c", "NUMBER", "q", "NUMBER", "g", "NUMBER", "wn", "boto", "NUMBER", "ramkumar", "pip", "install", "r", "requirements", "NUMBER", "txt", "Exception", "Traceback", "most", "recent", "call", "last", "File", "Users", "ramkumar", "new_boto", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "pip", "basecommand", "NUMBER", "py", "line", "NUMBER", "in", "main", "status", "self", "NUMBER", "run", "options", "args", "File", "Users", "ramkumar", "new_boto", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "pip", "commands", "install", "NUMBER", "py", "line", "NUMBER", "in", "run", "for", "req", "in", "parse_requirements", "filename", "finder", "finder", "options", "options", "session", "session", "File", "Users", "ramkumar", "new_boto", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "pip", "req", "NUMBER", "py", "line", "NUMBER", "in", "parse_requirements", "req", "InstallRequirement", "NUMBER", "from_line", "line", "comes_from", "prereleases", "getattr", "options", "pre", "None", "File", "Users", "ramkumar", "new_boto", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "pip", "req", "NUMBER", "py", "line", "NUMBER", "in", "from_line", "return", "cls", "req", "comes_from", "url", "url", "prereleases", "prereleases", "File", "Users", "ramkumar", "new_boto", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "pip", "req", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "req", "pkg_resources", "NUMBER", "Requirement", "NUMBER", "parse", "req", "File", "Users", "ramkumar", "new_boto", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "pip", "_vendor", "pkg_resources", "NUMBER", "py", "line", "NUMBER", "in", "parse", "reqs", "list", "parse_requirements", "s", "File", "Users", "ramkumar", "new_boto", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "pip", "_vendor", "pkg_resources", "NUMBER", "py", "line", "NUMBER", "in", "parse_requirements", "line", "p", "specs", "scan_list", "VERSION", "LINE_END", "line", "p", "NUMBER", "NUMBER", "version", "spec", "File", "Users", "ramkumar", "new_boto", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "pip", "_vendor", "pkg_resources", "NUMBER", "py", "line", "NUMBER", "in", "scan_list", "Expected", "or", "end", "of", "list", "in", "line", "at", "line", "p", "ValueError", "Expected", "or", "end", "of", "list", "in", "unittest", "NUMBER", "NUMBER", "python_version", "NUMBER", "at", "python_version", "NUMBER", "Storing", "debug", "log", "for", "failure", "in", "Users", "ramkumar", "NUMBER", "pip", "pip", "NUMBER", "log", "Thanks", "for", "your", "response", "NUMBER", "The", "issue", "be", "fix", "now", "NUMBER", "jamesls", "danielgtaylor", "kyleknap", "JordonPhillips", "This", "be", "my", "sample", "code", "from", "the", "aws", "website", "NUMBER", "from", "__future__", "import", "print_function", "Python", "NUMBER", "NUMBER", "compatibility", "import", "boto", "NUMBER", "dynamodb", "boto", "NUMBER", "resource", "dynamodb", "region_name", "us", "west", "NUMBER", "endpoint_url", "LINK", "table", "dynamodb", "NUMBER", "create_table", "TableName", "Movies", "KeySchema", "AttributeName", "year", "KeyType", "HASH", "Partition", "key", "AttributeName", "title", "KeyType", "RANGE", "Sort", "key", "AttributeDefinitions", "AttributeName", "year", "AttributeType", "N", "AttributeName", "title", "AttributeType", "S", "ProvisionedThroughput", "ReadCapacityUnits", "NUMBER", "WriteCapacityUnits", "NUMBER", "print", "Table", "status", "table", "NUMBER", "table_status", "I", "ve", "start", "DynamoDB", "with", "the", "following", "command", "java", "Djava", "NUMBER", "library", "NUMBER", "path", "NUMBER", "DynamoDBLocal_lib", "jar", "DynamoDBLocal", "NUMBER", "jar", "sharedDb", "and", "it", "shows", "the", "output", "Initializing", "DynamoDB", "Local", "with", "the", "following", "configuration", "Port", "NUMBER", "InMemory", "false", "DbPath", "null", "SharedDb", "true", "shouldDelayTransientStatuses", "false", "CorsParams", "But", "it", "repeatedly", "shows", "the", "following", "NUMBER", "error", "Traceback", "most", "recent", "call", "last", "File", "test", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "WriteCapacityUnits", "NUMBER", "File", "home", "janga", "anaconda", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "home", "janga", "anaconda", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "home", "janga", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "home", "janga", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "NUMBER", "when", "calling", "the", "CreateTable", "operation", "reached", "max", "retries", "NUMBER", "TAG", "TAG", "NUMBER", "Service", "Unavailable", "TAG", "TAG", "NUMBER", "Service", "Unavailable", "TAG", "Failed", "to", "connect", "to", "server", "TAG", "localhost", "TAG", "TAG", "Would", "really", "appreciate", "help", "on", "this", "problem", "NUMBER", "What", "be", "i", "miss", "I", "use", "internet", "in", "my", "university", "behind", "a", "proxy", "server", "Could", "that", "be", "the", "issue", "kyleknap", "Turns", "out", "the", "issue", "was", "indeed", "myproxy", "settings", "NUMBER", "I", "set", "a", "exception", "in", "my", "environment", "file", "for", "localhost", "and", "it", "turned", "out", "fine", "NUMBER", "Thanks", "for", "the", "help", "anyway", "NUMBER", "What", "be", "the", "recommended", "way", "to", "get", "the", "URL", "for", "an", "API", "Gateway", "deployment", "Is", "there", "an", "API", "call", "I", "miss", "in", "the", "docs", "Page", "LINK", "to", "call", "api", "NUMBER", "html", "do", "describe", "how", "the", "URL", "be", "generate", "NUMBER", "Thanks", "I", "m", "get", "this", "error", "message", "at", "AWS", "forums", "NUMBER", "LINK", "center", "error", "forum", "post", "Thank", "you", "NUMBER", "I", "posted", "LINK", "NUMBER", "Could", "this", "be", "expose", "in", "boto", "NUMBER", "before", "it", "be", "available", "with", "the", "AWS", "API", "Thanks", "I", "m", "suprised", "the", "api", "gateway", "console", "UX", "doesn", "t", "allow", "you", "to", "copy", "and", "paste", "the", "complete", "url", "somehow", "NUMBER", "I", "be", "trying", "to", "use", "boto", "NUMBER", "to", "create", "a", "new", "DNS", "record", "however", "I", "seem", "to", "be", "get", "back", "a", "pretty", "ambiguous", "error", "back", "NUMBER", "I", "have", "played", "around", "with", "some", "of", "the", "parameters", "from", "url", "LINK", "Route", "NUMBER", "Client", "NUMBER", "change_resource_record_sets", "url", "I", "have", "search", "for", "examples", "of", "this", "but", "have", "not", "be", "able", "to", "find", "any", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "get_zone_data", "find", "zone", "u", "ResourceRecordSetCount", "NUMBER", "u", "CallerReference", "NUMBER", "A", "NUMBER", "SD", "NUMBER", "E", "NUMBER", "NUMBER", "F", "NUMBER", "B", "NUMBER", "C", "NUMBER", "A", "NUMBER", "S", "NUMBER", "DAS", "NUMBER", "D", "NUMBER", "u", "Config", "u", "PrivateZone", "False", "u", "Id", "hostedzone", "ASD", "NUMBER", "ASD", "NUMBER", "u", "Name", "test", "NUMBER", "mydomain", "NUMBER", "com", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "example", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "dns", "NUMBER", "add", "name", "hurried", "NUMBER", "me", "File", "scale", "scale", "net", "dns", "NUMBER", "py", "line", "NUMBER", "in", "add", "client", "NUMBER", "change_resource_record_sets", "params", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidInput", "when", "calling", "the", "ChangeResourceRecordSets", "operation", "Invalid", "request", "My", "code", "def", "add", "self", "name", "None", "type", "A", "location", "NUMBER", "weight", "NUMBER", "ttl", "NUMBER", "private", "False", "zone", "self", "NUMBER", "get_zone_data", "name", "private", "Weight", "weight", "params", "HostedZoneId", "C", "NUMBER", "P", "NUMBER", "YPA", "NUMBER", "A", "ChangeBatch", "Changes", "Action", "CREATE", "ResourceRecordSet", "Name", "test", "NUMBER", "mydomain", "NUMBER", "com", "Type", "A", "TTL", "NUMBER", "client", "self", "NUMBER", "session", "NUMBER", "client", "route", "NUMBER", "client", "NUMBER", "change_resource_record_sets", "params", "I", "ve", "posted", "to", "stackoverflow", "but", "not", "had", "a", "response", "the", "ticket", "be", "over", "a", "week", "old", "unfortunately", "NUMBER", "For", "some", "reason", "I", "be", "unable", "to", "post", "to", "the", "developers", "forum", "despite", "having", "a", "login", "NUMBER", "Are", "there", "any", "examples", "of", "creating", "an", "A", "record", "out", "in", "the", "wild", "use", "boto", "NUMBER", "that", "I", "could", "try", "Cheers", "that", "seems", "to", "have", "get", "it", "Hello", "NUMBER", "I", "m", "use", "the", "latest", "boto", "NUMBER", "library", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "And", "I", "have", "a", "some", "problem", "with", "dynamoDB", "and", "pagination", "NUMBER", "NUMBER", "In", "the", "documentation", "LINK", "DynamoDB", "NUMBER", "Paginator", "NUMBER", "Scan", "there", "be", "an", "example", "of", "response", "that", "paginate", "method", "responds", "NUMBER", "But", "it", "be", "not", "the", "same", "as", "I", "receive", "when", "I", "call", "this", "method", "NUMBER", "Here", "be", "what", "I", "get", "u", "Count", "NUMBER", "u", "Items", "NUMBER", "u", "LastEvaluatedKey", "u", "fieldname", "u", "S", "u", "uuid", "u", "ScannedCount", "NUMBER", "ResponseMetadata", "RetryAttempts", "NUMBER", "HTTPStatusCode", "NUMBER", "RequestId", "I", "NUMBER", "IGFTA", "NUMBER", "CJVIQ", "NUMBER", "N", "NUMBER", "I", "NUMBER", "VCQECUBVV", "NUMBER", "KQNSO", "NUMBER", "AEMVJF", "NUMBER", "Q", "NUMBER", "ASUAAJG", "HTTPHeaders", "x", "amzn", "requestid", "I", "NUMBER", "IGFTA", "NUMBER", "CJVIQ", "NUMBER", "N", "NUMBER", "I", "NUMBER", "VCQECUBVV", "NUMBER", "KQNSO", "NUMBER", "AEMVJF", "NUMBER", "Q", "NUMBER", "ASUAAJG", "content", "length", "NUMBER", "server", "Server", "connection", "keep", "alive", "x", "amz", "crc", "NUMBER", "NUMBER", "date", "Sat", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "type", "application", "x", "amz", "json", "NUMBER", "There", "be", "no", "at", "least", "NextToken", "field", "which", "I", "m", "going", "to", "use", "for", "resuming", "the", "scan", "if", "it", "be", "fail", "NUMBER", "NUMBER", "When", "I", "m", "trying", "to", "use", "paginate", "method", "with", "StartingToken", "parameters", "it", "be", "not", "possible", "to", "use", "it", "NUMBER", "Because", "it", "fail", "with", "type", "check", "error", "Code", "page_iterator", "paginator", "NUMBER", "paginate", "TableName", "args", "NUMBER", "table", "PaginationConfig", "MaxItems", "args", "NUMBER", "limit", "PageSize", "args", "NUMBER", "batch_limit", "StartingToken", "fieldname", "S", "value", "In", "that", "case", "it", "fail", "with", "error", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "dynamodb", "table", "scan", "and", "import", "to", "lambda", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "for", "response", "in", "page_iterator", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "__iter__", "response", "self", "NUMBER", "_make_request", "current_kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "_make_request", "return", "self", "NUMBER", "_method", "current_kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "api_params", "operation_model", "context", "request_context", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_convert_to_request_dict", "api_params", "operation_model", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "validate", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "raise", "ParamValidationError", "report", "report", "NUMBER", "generate_report", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Invalid", "type", "for", "parameter", "ExclusiveStartKey", "value", "u", "assetId", "u", "S", "u", "NUMBER", "bt", "NUMBER", "cmqcoro", "NUMBER", "uad", "NUMBER", "type", "TAG", "valid", "types", "TAG", "But", "in", "documentation", "this", "parameter", "should", "be", "a", "string", "NUMBER", "in", "case", "when", "I", "convert", "that", "value", "to", "dict", "I", "have", "the", "next", "error", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "dynamodb", "table", "scan", "and", "import", "to", "lambda", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "for", "response", "in", "page_iterator", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "__iter__", "self", "NUMBER", "_inject_starting_params", "current_kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "_inject_starting_params", "next_token", "self", "NUMBER", "_parse_starting_token", "NUMBER", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "_parse_starting_token", "next_token", "index", "self", "NUMBER", "_parse_starting_token_deprecated", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "_parse_starting_token_deprecated", "parts", "self", "NUMBER", "_starting_token", "NUMBER", "split", "___", "AttributeError", "dict", "object", "has", "no", "attribute", "split", "It", "looks", "like", "in", "this", "part", "it", "needs", "string", "NUMBER", "Could", "you", "please", "check", "what", "be", "wrong", "there", "maybe", "I", "m", "doing", "something", "wrong", "but", "I", "m", "following", "the", "documentation", "NUMBER", "Thank", "you", "NUMBER", "That", "be", "make", "sense", "NUMBER", "I", "misunderstood", "the", "NextToken", "s", "value", "NUMBER", "Thank", "you", "NUMBER", "I", "may", "be", "misreading", "something", "but", "the", "documentation", "seems", "to", "have", "methods", "that", "don", "t", "actually", "exist", "in", "the", "client", "for", "cloudformation", "NUMBER", "In", "LINK", "CloudFormation", "NUMBER", "Client", "NUMBER", "list_exports", "there", "be", "methods", "such", "as", "list_exports", "and", "list_imports", "describe", "but", "when", "I", "look", "in", "the", "client", "they", "be", "nowhere", "to", "be", "find", "NUMBER", "Version", "pip", "show", "boto", "NUMBER", "Name", "boto", "NUMBER", "Version", "NUMBER", "Summary", "The", "AWS", "SDK", "for", "Python", "Home", "page", "LINK", "Author", "Amazon", "Web", "Services", "Author", "email", "UNKNOWN", "License", "Apache", "License", "NUMBER", "Location", "usr", "local", "lib", "python", "NUMBER", "site", "package", "Requires", "botocore", "s", "NUMBER", "transfer", "jmespath", "Example", "Python", "Call", "import", "boto", "NUMBER", "client", "boto", "NUMBER", "client", "cloudformation", "response", "client", "NUMBER", "list_exports", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "AttributeError", "CloudFormation", "object", "has", "no", "attribute", "list_exports", "dir", "client", "_PY_TO_OP_NAME", "__class__", "__delattr__", "__dict__", "__doc__", "__format__", "__getattribute__", "__hash__", "__init__", "__module__", "__new__", "__reduce__", "__reduce_ex__", "__repr__", "__setattr__", "__sizeof__", "__str__", "__subclasshook__", "__weakref__", "_cache", "_client_config", "_convert_to_request_dict", "_endpoint", "_force_path_style_s", "NUMBER", "_addressing", "_force_virtual_style_s", "NUMBER", "_addressing", "_get_waiter_config", "_loader", "_make_api_call", "_register_handlers", "_register_s", "NUMBER", "_specific_handlers", "_request_signer", "_response_parser", "_serializer", "_service_model", "can_paginate", "u", "cancel_update_stack", "u", "continue_update_rollback", "u", "create_change_set", "u", "create_stack", "u", "delete_change_set", "u", "delete_stack", "u", "describe_account_limits", "u", "describe_change_set", "u", "describe_stack_events", "u", "describe_stack_resource", "u", "describe_stack_resources", "u", "describe_stacks", "u", "estimate_template_cost", "u", "execute_change_set", "generate_presigned_url", "get_paginator", "u", "get_stack_policy", "u", "get_template", "u", "get_template_summary", "get_waiter", "u", "list_change_sets", "u", "list_stack_resources", "u", "list_stacks", "meta", "u", "set_stack_policy", "u", "signal_resource", "u", "update_stack", "u", "validate_template", "waiter_names", "I", "test", "with", "boto", "NUMBER", "NUMBER", "and", "had", "no", "problem", "import", "boto", "NUMBER", "boto", "NUMBER", "__version__", "NUMBER", "client", "boto", "NUMBER", "client", "cloudformation", "client", "NUMBER", "list_exports", "u", "Exports", "ResponseMetadata", "RetryAttempts", "NUMBER", "NUMBER", "One", "possibility", "be", "that", "the", "pip", "s", "Python", "and", "the", "shell", "s", "Python", "be", "different", "so", "the", "Python", "shell", "s", "boto", "NUMBER", "be", "not", "up", "to", "date", "NUMBER", "If", "you", "run", "import", "boto", "NUMBER", "boto", "NUMBER", "__version__", "what", "do", "it", "return", "Guessing", "from", "the", "output", "of", "dir", "client", "your", "boto", "NUMBER", "be", "miss", "following", "methods", "list_imports", "list_exports", "I", "think", "it", "was", "botocore", "NUMBER", "I", "uninstalled", "boto", "NUMBER", "and", "botocore", "then", "reinstalled", "them", "and", "the", "methods", "be", "there", "now", "NUMBER", "Thanks", "for", "the", "help", "According", "to", "the", "documentation", "SnapshotCreateTime", "be", "returned", "in", "the", "response", "body", "for", "both", "create_db_snapshot", "and", "describe_db_snapshots", "however", "this", "be", "not", "the", "case", "NUMBER", "A", "similar", "key", "InstanceCreateTime", "can", "be", "use", "in", "its", "place", "so", "this", "may", "just", "be", "a", "documentation", "issue", "NUMBER", "Example", "Code", "that", "fail", "due", "to", "Key", "error", "python", "import", "boto", "NUMBER", "client", "boto", "NUMBER", "client", "rds", "snapshot", "client", "NUMBER", "describe_db_snapshots", "DBInstanceIdentifier", "example", "db", "instance", "SnapshotType", "manual", "MaxRecords", "NUMBER", "DBSnapshots", "for", "item", "in", "snapshot", "print", "item", "SnapshotCreateTime", "Thanks", "for", "the", "response", "that", "ended", "up", "be", "the", "issue", "NUMBER", "If", "the", "snapshot", "status", "be", "not", "available", "it", "will", "not", "be", "present", "NUMBER", "Copying", "encrypted", "RDS", "snapshot", "between", "different", "regions", "requires", "additional", "parameters", "in", "the", "PreSignedUrl", "NUMBER", "However", "the", "boto", "NUMBER", "implementation", "of", "generate_presigned_url", "for", "the", "RDS", "client", "do", "not", "support", "all", "of", "them", "including", "DestinationRegion", "NUMBER", "PreSignedUrl", "NUMBER", "destination_client", "NUMBER", "generate_presigned_url", "copy_db_snapshot", "Params", "KmsKeyId", "mykeyid", "SourceDBSnapshotIdentifier", "arn", "aws", "rds", "us", "west", "NUMBER", "TAG", "snapshot", "rds", "dbname", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "TargetDBSnapshotIdentifier", "my", "test", "DestinationRegion", "us", "east", "NUMBER", "ExpiresIn", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "generate_presigned_url", "params", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "validate", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "raise", "ParamValidationError", "report", "report", "NUMBER", "generate_report", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Unknown", "parameter", "in", "input", "DestinationRegion", "must", "be", "one", "of", "SourceDBSnapshotIdentifier", "TargetDBSnapshotIdentifier", "KmsKeyId", "Tags", "CopyTags", "PreSignedUrl", "SourceRegion", "This", "be", "the", "AWS", "CLI", "tool", "copy", "command", "aws", "region", "us", "east", "NUMBER", "rds", "copy", "db", "snapshot", "source", "db", "snapshot", "identifier", "arn", "aws", "rds", "us", "west", "NUMBER", "TAG", "snapshot", "rds", "dbname", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "target", "db", "snapshot", "identifier", "my", "test", "source", "region", "us", "west", "NUMBER", "kms", "key", "id", "mykeyid", "Boto", "NUMBER", "documentation", "include", "this", "requirement", "as", "shown", "in", "LINK", "RDS", "NUMBER", "Client", "NUMBER", "copy_db_snapshot", "NUMBER", "Running", "Python", "NUMBER", "default", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GCC", "NUMBER", "NUMBER", "on", "linux", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "I", "be", "also", "facing", "the", "same", "error", "NUMBER", "errorType", "ParamValidationError", "errorMessage", "Parameter", "validation", "fail", "nUnknown", "parameter", "in", "input", "SourceRegion", "must", "be", "one", "of", "SourceDBSnapshotIdentifier", "TargetDBSnapshotIdentifier", "KmsKeyId", "Tags", "CopyTags", "Botocore", "version", "NUMBER", "I", "tried", "the", "simple", "call", "from", "lambda", "kyleknap", "That", "worked", "NUMBER", "Thank", "you", "NUMBER", "Upgrade", "from", "boto", "NUMBER", "NUMBER", "and", "botocore", "NUMBER", "to", "NUMBER", "and", "NUMBER", "worked", "for", "me", "as", "well", "NUMBER", "I", "was", "get", "the", "same", "error", "earlier", "NUMBER", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Unknown", "parameter", "in", "input", "SourceRegion", "must", "be", "one", "of", "SourceDBSnapshotIdentifier", "TargetDBSnapshotIdentifier", "KmsKeyId", "Tags", "CopyTags", "Thanks", "Hi", "This", "issue", "was", "relate", "to", "DestinationRegion", "parameter", "but", "mohankodali", "and", "kmart", "NUMBER", "verify", "that", "SourceRegion", "works", "NUMBER", "DestinationRegion", "still", "do", "not", "work", "with", "generate_presigned_url", "method", "NUMBER", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Unknown", "parameter", "in", "input", "DestinationRegion", "must", "be", "one", "of", "DBInstanceIdentifier", "SourceDBInstanceIdentifier", "DBInstanceClass", "AvailabilityZone", "Port", "AutoMinorVersionUpgrade", "Iops", "OptionGroupName", "PubliclyAccessible", "Tags", "DBSubnetGroupName", "StorageType", "CopyTagsToSnapshot", "MonitoringInterval", "MonitoringRoleArn", "KmsKeyId", "PreSignedUrl", "EnableIAMDatabaseAuthentication", "SourceRegion", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "This", "be", "needed", "to", "set", "up", "read", "replicas", "in", "different", "regions", "NUMBER", "link", "LINK", "_CreateDBInstanceReadReplica", "NUMBER", "html", "Thanks", "Currently", "all", "the", "boto", "NUMBER", "documentation", "show", "date", "element", "as", "datetime", "object", "NUMBER", "e", "NUMBER", "g", "NUMBER", "Contents", "Key", "string", "LastModified", "datetime", "NUMBER", "NUMBER", "NUMBER", "ETag", "string", "NUMBER", "There", "be", "little", "documentation", "mention", "how", "to", "deal", "with", "the", "datetime", "object", "when", "use", "jmespath", "query", "NUMBER", "Some", "mistake", "can", "be", "solve", "by", "common", "sense", "or", "good", "documentation", "NUMBER", "As", "shown", "here", "NUMBER", "This", "user", "use", "a", "formatted", "datetime", "string", "get", "specific", "date", "use", "jmes", "LINK", "rds", "how", "to", "get", "latest", "snapshot", "with", "boto", "NUMBER", "and", "jmespath", "This", "user", "wrongly", "use", "single", "quote", "which", "the", "datetime", "object", "should", "be", "encase", "in", "backquote", "NUMBER", "search", "can", "t", "compare", "datetime", "LINK", "boto", "NUMBER", "page", "iterator", "search", "cant", "compare", "datetime", "datetime", "to", "str", "commutecat", "i", "ma", "use", "the", "backquotes", "NUMBER", "still", "not", "work", "NUMBER", "filtered_iterator", "page_iterator", "NUMBER", "search", "Contents", "LastModified", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzutc", "NUMBER", "Key", "What", "will", "be", "the", "solution", "for", "it", "NUMBER", "please", "let", "me", "know", "NUMBER", "thanks", "I", "ve", "add", "a", "cname", "of", "cname", "NUMBER", "g", "NUMBER", "mydomain", "NUMBER", "co", "NUMBER", "Within", "the", "UI", "it", "shows", "the", "cname", "exactly", "as", "above", "however", "when", "I", "retrieve", "the", "same", "name", "it", "returns", "the", "following", "json", "NUMBER", "u", "AliasTarget", "u", "HostedZoneId", "Z", "NUMBER", "u", "EvaluateTargetHealth", "False", "u", "DNSName", "itgets", "NUMBER", "mydomain", "NUMBER", "co", "NUMBER", "u", "Type", "CNAME", "u", "Name", "NUMBER", "g", "NUMBER", "mydomain", "NUMBER", "co", "NUMBER", "The", "cname", "with", "the", "asterisk", "do", "work", "as", "expected", "but", "I", "m", "unsure", "why", "the", "json", "display", "from", "boto", "converts", "the", "asterisk", "to", "hexadecimal", "NUMBER", "Is", "this", "an", "issue", "or", "an", "artifact", "or", "be", "it", "come", "directly", "form", "AWS", "Thank", "you", "try", "setting", "boto", "NUMBER", "set_stream_logger", "before", "the", "call", "that", "results", "in", "this", "so", "we", "can", "see", "what", "be", "come", "directly", "from", "the", "service", "NUMBER", "Im", "get", "the", "following", "NUMBER", "It", "looks", "like", "amazon", "be", "returning", "NUMBER", "instead", "of", "TAG", "TAG", "NUMBER", "g", "NUMBER", "mydomain", "NUMBER", "co", "NUMBER", "TAG", "TAG", "CNAME", "TAG", "TAG", "TAG", "Z", "NUMBER", "TAG", "TAG", "itgets", "NUMBER", "mydomain", "NUMBER", "co", "NUMBER", "TAG", "TAG", "false", "TAG", "TAG", "TAG", "stealthycoin", "do", "you", "think", "this", "be", "come", "incorrectly", "from", "amazon", "or", "if", "there", "should", "be", "a", "change", "in", "this", "library", "Thanks", "Yes", "that", "be", "come", "straight", "from", "the", "service", "NUMBER", "Which", "command", "exactly", "be", "you", "use", "to", "get", "this", "response", "python", "response", "client", "NUMBER", "list_resource_record_sets", "HostedZoneId", "zone_id", "StartRecordType", "CNAME", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidInput", "when", "calling", "the", "ListResourceRecordSets", "operation", "When", "I", "take", "out", "flag", "StartRecordType", "CNAME", "all", "be", "well", "NUMBER", "However", "that", "be", "much", "to", "verbose", "for", "my", "needs", "NUMBER", "You", "be", "specify", "a", "StartRecordType", "without", "specify", "a", "StartRecordName", "see", "the", "documentation", "LINK", "Route", "NUMBER", "Client", "NUMBER", "list_resource_record_sets", "for", "more", "details", "NUMBER", "When", "use", "the", "s", "NUMBER", "v", "NUMBER", "query", "signature", "method", "all", "object", "uploads", "fail", "with", "BadDigest", "error", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "config", "botocore", "NUMBER", "config", "NUMBER", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "query", "s", "NUMBER", "Bucket", "bucket_name", "NUMBER", "upload_fileobj", "Key", "object_name", "Fileobj", "StringIO", "data", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "Users", "tburke", "NUMBER", "virtualenvs", "Python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "s", "NUMBER", "inject", "NUMBER", "py", "line", "NUMBER", "in", "bucket_upload_fileobj", "Callback", "Callback", "Config", "Config", "File", "Users", "tburke", "NUMBER", "virtualenvs", "Python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "s", "NUMBER", "inject", "NUMBER", "py", "line", "NUMBER", "in", "upload_fileobj", "return", "future", "NUMBER", "result", "File", "Users", "tburke", "NUMBER", "virtualenvs", "Python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "s", "NUMBER", "transfer", "futures", "NUMBER", "py", "line", "NUMBER", "in", "result", "return", "self", "NUMBER", "_coordinator", "NUMBER", "result", "File", "Users", "tburke", "NUMBER", "virtualenvs", "Python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "s", "NUMBER", "transfer", "futures", "NUMBER", "py", "line", "NUMBER", "in", "result", "raise", "self", "NUMBER", "_exception", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "BadDigest", "when", "calling", "the", "PutObject", "operation", "reached", "max", "retries", "NUMBER", "The", "Content", "MD", "NUMBER", "you", "specified", "did", "not", "match", "what", "we", "received", "NUMBER", "client", "boto", "NUMBER", "client", "s", "NUMBER", "config", "botocore", "NUMBER", "config", "NUMBER", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "query", "client", "NUMBER", "put_object", "Bucket", "bucket_name", "Key", "object_name", "Body", "data", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "Users", "tburke", "NUMBER", "virtualenvs", "Python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Users", "tburke", "NUMBER", "virtualenvs", "Python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "BadDigest", "when", "calling", "the", "PutObject", "operation", "reached", "max", "retries", "NUMBER", "The", "Content", "MD", "NUMBER", "you", "specified", "did", "not", "match", "what", "we", "received", "NUMBER", "While", "the", "same", "operation", "with", "other", "signature", "methods", "succeeds", "for", "signature_version", "in", "s", "NUMBER", "s", "NUMBER", "query", "s", "NUMBER", "v", "NUMBER", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "config", "botocore", "NUMBER", "config", "NUMBER", "Config", "signature_version", "signature_version", "NUMBER", "s", "NUMBER", "Bucket", "bucket_name", "NUMBER", "upload_fileobj", "Key", "object_name", "Fileobj", "StringIO", "data", "NUMBER", "for", "signature_version", "in", "s", "NUMBER", "s", "NUMBER", "query", "s", "NUMBER", "v", "NUMBER", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "config", "botocore", "NUMBER", "config", "NUMBER", "Config", "signature_version", "signature_version", "NUMBER", "s", "NUMBER", "put_object", "Bucket", "bucket_name", "Key", "object_name", "Body", "data", "NUMBER", "u", "ETag", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "d", "NUMBER", "dfe", "NUMBER", "b", "NUMBER", "ResponseMetadata", "HTTPHeaders", "content", "length", "NUMBER", "date", "Thu", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "etag", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "d", "NUMBER", "dfe", "NUMBER", "b", "NUMBER", "server", "AmazonS", "NUMBER", "x", "amz", "id", "NUMBER", "WGKplA", "NUMBER", "h", "NUMBER", "pR", "NUMBER", "cRMq", "NUMBER", "nz", "NUMBER", "SZwcv", "NUMBER", "FffRE", "NUMBER", "Z", "MndM", "zhK", "NUMBER", "SYD", "NUMBER", "LeAuR", "NUMBER", "iBwEso", "NUMBER", "Z", "NUMBER", "jVtmqtFxG", "NUMBER", "fw", "x", "amz", "request", "id", "NUMBER", "C", "NUMBER", "B", "NUMBER", "C", "NUMBER", "F", "HTTPStatusCode", "NUMBER", "HostId", "WGKplA", "NUMBER", "h", "NUMBER", "pR", "NUMBER", "cRMq", "NUMBER", "nz", "NUMBER", "SZwcv", "NUMBER", "FffRE", "NUMBER", "Z", "MndM", "zhK", "NUMBER", "SYD", "NUMBER", "LeAuR", "NUMBER", "iBwEso", "NUMBER", "Z", "NUMBER", "jVtmqtFxG", "NUMBER", "fw", "RequestId", "NUMBER", "C", "NUMBER", "B", "NUMBER", "C", "NUMBER", "F", "RetryAttempts", "NUMBER", "u", "ETag", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "d", "NUMBER", "dfe", "NUMBER", "b", "NUMBER", "ResponseMetadata", "HTTPHeaders", "content", "length", "NUMBER", "date", "Thu", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "etag", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "d", "NUMBER", "dfe", "NUMBER", "b", "NUMBER", "server", "AmazonS", "NUMBER", "x", "amz", "id", "NUMBER", "Xg", "wK", "NUMBER", "dRwfN", "NUMBER", "tURHx", "NUMBER", "FNoxyUzZO", "NUMBER", "tqDVYuZWGA", "NUMBER", "Db", "BZs", "NUMBER", "na", "NUMBER", "lKOkkArmwwg", "NUMBER", "G", "NUMBER", "Ezrl", "NUMBER", "x", "amz", "request", "id", "C", "NUMBER", "A", "NUMBER", "DF", "NUMBER", "ACBF", "NUMBER", "F", "NUMBER", "HTTPStatusCode", "NUMBER", "HostId", "Xg", "wK", "NUMBER", "dRwfN", "NUMBER", "tURHx", "NUMBER", "FNoxyUzZO", "NUMBER", "tqDVYuZWGA", "NUMBER", "Db", "BZs", "NUMBER", "na", "NUMBER", "lKOkkArmwwg", "NUMBER", "G", "NUMBER", "Ezrl", "NUMBER", "RequestId", "C", "NUMBER", "A", "NUMBER", "DF", "NUMBER", "ACBF", "NUMBER", "F", "NUMBER", "RetryAttempts", "NUMBER", "u", "ETag", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "d", "NUMBER", "dfe", "NUMBER", "b", "NUMBER", "ResponseMetadata", "HTTPHeaders", "content", "length", "NUMBER", "date", "Thu", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "etag", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "d", "NUMBER", "dfe", "NUMBER", "b", "NUMBER", "server", "AmazonS", "NUMBER", "x", "amz", "id", "NUMBER", "Z", "NUMBER", "krU", "NUMBER", "xPLbOuatUsGSo", "NUMBER", "nS", "NUMBER", "WOH", "NUMBER", "DF", "NUMBER", "uZ", "mWcRJjy", "NUMBER", "F", "NUMBER", "sDvleQekONSmPY", "NUMBER", "ojCV", "NUMBER", "W", "NUMBER", "NGZZvHEA", "NUMBER", "x", "amz", "request", "id", "E", "NUMBER", "C", "NUMBER", "B", "NUMBER", "C", "NUMBER", "E", "NUMBER", "HTTPStatusCode", "NUMBER", "HostId", "Z", "NUMBER", "krU", "NUMBER", "xPLbOuatUsGSo", "NUMBER", "nS", "NUMBER", "WOH", "NUMBER", "DF", "NUMBER", "uZ", "mWcRJjy", "NUMBER", "F", "NUMBER", "sDvleQekONSmPY", "NUMBER", "ojCV", "NUMBER", "W", "NUMBER", "NGZZvHEA", "NUMBER", "RequestId", "E", "NUMBER", "C", "NUMBER", "B", "NUMBER", "C", "NUMBER", "E", "NUMBER", "RetryAttempts", "NUMBER", "tcpdump", "seems", "to", "indicate", "that", "we", "re", "sending", "the", "correct", "Content", "MD", "NUMBER", "but", "a", "Content", "Length", "of", "zero", "Using", "Python", "Python", "NUMBER", "boto", "NUMBER", "__version__", "NUMBER", "python", "for", "src_k", "in", "list", "src_buck", "NUMBER", "objects", "NUMBER", "filter", "Prefix", "self", "NUMBER", "s", "NUMBER", "_src_key_dir", "copy_src", "Bucket", "self", "NUMBER", "src_bucket", "Key", "src_k", "NUMBER", "key", "SSECustomerAlgorithm", "AES", "NUMBER", "dest_k", "dest_prefix", "copy_src", "Key", "print", "Copying", "from", "bucket", "NUMBER", "key", "NUMBER", "to", "bucket", "NUMBER", "key", "NUMBER", "NUMBER", "format", "copy_src", "Bucket", "copy_src", "Key", "self", "NUMBER", "dest_bucket", "dest_k", "dest_buck", "NUMBER", "copy", "copy_src", "dest_k", "File", "test", "NUMBER", "py", "line", "NUMBER", "in", "copy", "dest_buck", "NUMBER", "copy", "copy_src", "dest_k", "File", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "s", "NUMBER", "inject", "NUMBER", "py", "line", "NUMBER", "in", "bucket_copy", "Callback", "Callback", "SourceClient", "SourceClient", "Config", "Config", "File", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "s", "NUMBER", "inject", "NUMBER", "py", "line", "NUMBER", "in", "copy", "return", "future", "NUMBER", "result", "File", "NUMBER", "lib", "python", "NUMBER", "site", "package", "s", "NUMBER", "transfer", "futures", "NUMBER", "py", "line", "NUMBER", "in", "result", "return", "self", "NUMBER", "_coordinator", "NUMBER", "result", "File", "NUMBER", "lib", "python", "NUMBER", "site", "package", "s", "NUMBER", "transfer", "futures", "NUMBER", "py", "line", "NUMBER", "in", "result", "raise", "self", "NUMBER", "_exception", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "NUMBER", "when", "calling", "the", "HeadObject", "operation", "Bad", "Request", "when", "calling", "create_vpn_connection_route", "VpnConnectionId", "myID", "DestinationCidrBlock", "remote_net", "there", "be", "a", "mismatch", "between", "the", "validation", "and", "the", "API", "NUMBER", "If", "I", "set", "it", "to", "D", "estinationCidrBlock", "then", "I", "get", "ClientError", "An", "error", "occur", "MissingParameter", "when", "calling", "the", "CreateVpnConnectionRoute", "operation", "The", "request", "must", "contain", "the", "parameter", "d", "estinationCidrBlock", "If", "I", "set", "it", "to", "d", "estinationCidrBlock", "then", "I", "get", "ParamValidationError", "Parameter", "validation", "fail", "Unknown", "parameter", "in", "input", "destinationCidrBlock", "must", "be", "one", "of", "VpnConnectionId", "D", "estinationCidrBlock", "Seems", "to", "be", "a", "bug", "between", "validation", "and", "API", "NUMBER", "frustrating", "as", "there", "be", "not", "workaround", "NUMBER", "can", "you", "please", "fix", "it", "Using", "Lambda", "in", "eu", "central", "NUMBER", "The", "pre", "sign", "url", "be", "not", "work", "with", "md", "NUMBER", "hash", "NUMBER", "Normally", "when", "put", "python", "params", "Bucket", "bucket_name", "Key", "key", "url", "s", "NUMBER", "_client", "NUMBER", "generate_presigned_url", "put_object", "Params", "params", "ExpiresIn", "NUMBER", "it", "works", "NUMBER", "But", "when", "put", "any", "other", "put_object", "parameter", "like", "ACL", "md", "NUMBER", "etc", "it", "throw", "python", "params", "Bucket", "bucket_name", "Key", "key", "ACL", "public", "read", "ContentMD", "NUMBER", "NUMBER", "cx", "NUMBER", "url", "s", "NUMBER", "_client", "NUMBER", "generate_presigned_url", "put_object", "Params", "params", "ExpiresIn", "NUMBER", "Error", "TAG", "SignatureDoesNotMatch", "TAG", "TAG", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "key", "and", "signing", "method", "If", "trying", "put", "header", "like", "Content", "MD", "NUMBER", "in", "put", "request", "it", "throw", "Headers", "not", "sign", "NUMBER", "My", "S", "NUMBER", "client", "be", "like", "python", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "region_name", "app", "NUMBER", "config", "AWS_REGION", "aws_access_key_id", "app", "NUMBER", "config", "AWS_ACCESS_KEY_ID", "config", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "aws_secret_access_key", "app", "NUMBER", "config", "AWS_SECRET_ACCESS_KEY", "I", "be", "use", "boto", "NUMBER", "NUMBER", "Hi", "thanks", "for", "your", "reply", "NUMBER", "Today", "i", "was", "trying", "with", "generate_presigned_post", "python", "s", "NUMBER", "_client", "boto", "NUMBER", "client", "s", "NUMBER", "region_name", "app", "NUMBER", "config", "AWS_REGION", "aws_access_key_id", "app", "NUMBER", "config", "AWS_ACCESS_KEY_ID", "config", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "aws_secret_access_key", "app", "NUMBER", "config", "AWS_SECRET_ACCESS_KEY", "p", "s", "NUMBER", "_client", "NUMBER", "generate_presigned_post", "Bucket", "bucket_name", "Key", "key", "Fields", "acl", "public", "read", "url", "p", "url", "data", "p", "field", "file", "path", "YOYO", "response", "request", "NUMBER", "post", "url", "json", "data", "data", "open", "file", "I", "be", "get", "NUMBER", "response", "xml", "TAG", "TAG", "TAG", "PreconditionFailed", "TAG", "TAG", "At", "least", "one", "of", "the", "pre", "conditions", "you", "specified", "did", "not", "hold", "TAG", "TAG", "Bucket", "POST", "must", "be", "of", "the", "enclosure", "type", "multipart", "form", "data", "TAG", "TAG", "E", "NUMBER", "D", "NUMBER", "C", "NUMBER", "E", "NUMBER", "E", "NUMBER", "A", "NUMBER", "TAG", "TAG", "LWL", "NUMBER", "KO", "NUMBER", "n", "NUMBER", "Xotvef", "NUMBER", "x", "NUMBER", "bvAk", "NUMBER", "XeHWa", "NUMBER", "sSMWluHkUP", "NUMBER", "zyNPBbFyzFnCIWANmSshuYnlkbDL", "AXir", "NUMBER", "TAG", "TAG", "When", "i", "was", "doing", "what", "be", "write", "in", "boto", "NUMBER", "doc", "python", "p", "s", "NUMBER", "_client", "NUMBER", "generate_presigned_post", "Bucket", "bucket_name", "Key", "key", "Fields", "acl", "public", "read", "url", "p", "url", "data", "p", "field", "file", "local_path", "YOYO", "response", "request", "NUMBER", "post", "url", "data", "data", "file", "file", "I", "be", "get", "NUMBER", "xml", "TAG", "TAG", "TAG", "InvalidArgument", "TAG", "TAG", "POST", "requires", "exactly", "one", "file", "upload", "per", "request", "NUMBER", "TAG", "TAG", "file", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "DAA", "NUMBER", "E", "NUMBER", "CC", "NUMBER", "E", "TAG", "TAG", "SRRp", "j", "NUMBER", "weagOqsfIEAzMpVoNKKh", "NUMBER", "u", "NUMBER", "tPJmf", "NUMBER", "DAa", "NUMBER", "WeDak", "NUMBER", "bs", "NUMBER", "Ne", "Nq", "NUMBER", "NMX", "NUMBER", "hkOyLENFxrSVU", "TAG", "TAG", "JordonPhillips", "thanks", "a", "lot", "it", "be", "work", "NUMBER", "I", "be", "posting", "the", "work", "example", "for", "future", "reference", "NUMBER", "python", "import", "boto", "NUMBER", "import", "request", "parts", "s", "NUMBER", "_client", "NUMBER", "generate_presigned_post", "Bucket", "bucket_name", "Key", "key", "Fields", "acl", "public", "read", "Content", "MD", "NUMBER", "str", "md", "NUMBER", "Content", "Type", "binary", "octet", "stream", "Conditions", "acl", "public", "read", "starts", "with", "Content", "Type", "starts", "with", "Content", "MD", "NUMBER", "url", "parts", "url", "data", "parts", "field", "file", "file", "open", "local_path", "rb", "the", "key", "supposed", "to", "be", "file", "may", "be", "response", "request", "NUMBER", "post", "url", "data", "data", "file", "file", "Closing", "the", "issue", "when", "run", "describe_vpn_connections", "the", "VgwTelemtry", "returns", "non", "serializable", "code", "rather", "than", "the", "timestamp", "NUMBER", "u", "LastStatusChange", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzlocal", "When", "attempting", "to", "send", "a", "message", "to", "a", "FIFO", "queue", "sqs", "boto", "NUMBER", "resource", "sqs", "queue", "sqs", "NUMBER", "get_queue_by_name", "QueueName", "testQueue", "NUMBER", "fifo", "queue", "NUMBER", "send_message", "MessageBody", "job", "a_job", "data", "some", "variable", "MessageGroupId", "NUMBER", "de", "NUMBER", "e", "NUMBER", "The", "following", "error", "be", "throw", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Unknown", "parameter", "in", "input", "MessageGroupId", "must", "be", "one", "of", "QueueUrl", "MessageBody", "DelaySeconds", "MessageAttributes", "The", "MessageGroupId", "be", "required", "by", "AWS", "and", "the", "boto", "docs", "indicate", "that", "it", "should", "be", "allow", "LINK", "sqs", "SQS", "NUMBER", "Queue", "NUMBER", "send_message", "Sending", "the", "message", "without", "the", "parameter", "generates", "a", "different", "error", "queue", "NUMBER", "send_message", "MessageBody", "job", "a_job", "data", "some", "variable", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "MissingParameter", "when", "calling", "the", "SendMessage", "operation", "The", "request", "must", "contain", "the", "parameter", "MessageGroupId", "NUMBER", "Yes", "that", "was", "the", "problem", "thank", "you", "NUMBER", "I", "was", "run", "the", "latest", "version", "of", "boto", "NUMBER", "NUMBER", "but", "botocore", "was", "run", "NUMBER", "Once", "I", "upgrade", "to", "NUMBER", "the", "message", "succeeded", "Hi", "JordonPhillips", "I", "be", "seeing", "this", "same", "error", "when", "omitting", "MessageGroupID", "parameter", "NUMBER", "Currently", "run", "boto", "NUMBER", "NUMBER", "and", "botocore", "NUMBER", "sqs", "boto", "NUMBER", "resource", "sqs", "queue", "sqs", "NUMBER", "get_queue_by_name", "QueueName", "TimTest", "NUMBER", "fifo", "message_content", "str", "email", "me", "email", "NUMBER", "com", "response", "queue", "NUMBER", "send_message", "MessageBody", "message_content", "Error", "TAG", "Traceback", "most", "recent", "call", "last", "File", "sqs", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "response", "queue", "NUMBER", "send_message", "MessageBody", "message_content", "File", "Library", "Python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "error_class", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "MissingParameter", "when", "calling", "the", "SendMessage", "operation", "The", "request", "must", "contain", "the", "parameter", "MessageGroupId", "NUMBER", "TAG", "Thank", "you", "for", "your", "time", "NUMBER", "heytimj", "you", "need", "to", "send", "the", "MessageGroupId", "import", "boto", "NUMBER", "from", "botocore", "NUMBER", "client", "import", "Config", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "config", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "fileExists", "s", "NUMBER", "Bucket", "bucket", "name", "NUMBER", "get_key", "key", "path", "Errors", "with", "AttributeError", "s", "NUMBER", "Bucket", "object", "has", "no", "attribute", "get_key", "But", "it", "s", "documented", "here", "LINK", "boto", "NUMBER", "s", "NUMBER", "bucket", "NUMBER", "Bucket", "NUMBER", "get_key", "I", "m", "an", "idiot", "I", "saw", "all", "the", "NUMBER", "s", "in", "the", "URL", "and", "assumed", "incorrectly", "NUMBER", "Apologies", "NUMBER", "For", "anyone", "looking", "for", "a", "solution", "in", "boto", "NUMBER", "as", "it", "was", "remove", "this", "worked", "for", "me", "s", "NUMBER", "Client", "boto", "NUMBER", "client", "s", "NUMBER", "region_name", "eu", "west", "NUMBER", "try", "s", "NUMBER", "Client", "NUMBER", "head_object", "Bucket", "bucket", "name", "Key", "key", "name", "except", "Doesn", "t", "exist", "Not", "ideal", "use", "exception", "in", "this", "way", "but", "there", "doesn", "t", "appear", "to", "be", "an", "alternative", "without", "a", "more", "expensive", "list", "all", "objects", "approach", "NUMBER", "Hello", "upload_fileobj", "has", "an", "undocumented", "behavior", "that", "I", "think", "it", "s", "a", "bug", "NUMBER", "It", "close", "the", "file", "after", "uploading", "the", "file", "To", "reproduce", "this", "behavior", "import", "boto", "NUMBER", "import", "cStringIO", "f", "cStringIO", "NUMBER", "StringIO", "hello", "print", "f", "NUMBER", "getvalue", "print", "f", "NUMBER", "getvalue", "Second", "call", "works", "session", "boto", "NUMBER", "Session", "s", "NUMBER", "session", "NUMBER", "resource", "s", "NUMBER", "obj", "s", "NUMBER", "Object", "bucket_name", "key", "obj", "NUMBER", "upload_fileobj", "f", "print", "f", "NUMBER", "getvalue", "Raises", "an", "exception", "start_time", "now", "datetime", "NUMBER", "timedelta", "seconds", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "end_time", "now", "datetime", "NUMBER", "timedelta", "seconds", "NUMBER", "NUMBER", "print", "start_time", "print", "end_time", "self", "NUMBER", "connect", "response", "self", "NUMBER", "conn", "NUMBER", "get_metric_statistics", "Namespace", "AWS", "ApplicationELB", "MetricName", "HTTPCode_Target_", "NUMBER", "XX_Count", "Dimensions", "Name", "LoadBalancer", "Value", "elb", "NUMBER", "StartTime", "start_time", "EndTime", "end_time", "Period", "NUMBER", "Statistics", "Sum", "Unit", "Count", "print", "response", "u", "Datapoints", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "cb", "NUMBER", "f", "NUMBER", "bdf", "u", "Label", "HTTPCode_Backend_", "NUMBER", "XX", "Many", "times", "the", "return", "value", "be", "empty", "Python", "NUMBER", "get", "release", "and", "some", "distro", "like", "Fedora", "be", "swithcing", "to", "it", "NUMBER", "I", "m", "having", "an", "issue", "retrieving", "temporary", "credentials", "via", "SAML", "STS", "with", "the", "boto", "NUMBER", "sts", "client", "when", "I", "have", "the", "AWS_DEFAULT_PROFILE", "environment", "variable", "set", "on", "my", "system", "before", "I", "ve", "created", "a", "profile", "or", "logged", "in", "NUMBER", "conn", "boto", "NUMBER", "client", "sts", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "client", "return", "_get_default_session", "NUMBER", "client", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "_get_default_session", "setup_default_session", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "setup_default_session", "DEFAULT_SESSION", "Session", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "_setup_loader", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "_setup_loader", "self", "NUMBER", "_loader", "self", "NUMBER", "_session", "NUMBER", "get_component", "data_loader", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "get_component", "return", "self", "NUMBER", "_components", "NUMBER", "get_component", "name", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "get_component", "self", "NUMBER", "_components", "name", "factory", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "lambda", "create_loader", "self", "NUMBER", "get_config_variable", "data_path", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "get_config_variable", "elif", "self", "NUMBER", "_found_in_config_file", "methods", "var_config", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "_found_in_config_file", "return", "var_config", "NUMBER", "in", "self", "NUMBER", "get_scoped_config", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "get_scoped_config", "raise", "ProfileNotFound", "profile", "profile_name", "botocore", "NUMBER", "exception", "NUMBER", "ProfileNotFound", "The", "config", "profile", "test", "could", "not", "be", "find", "At", "the", "time", "I", "m", "creating", "the", "client", "I", "may", "have", "no", "credentials", "created", "and", "I", "have", "already", "specified", "the", "AWS_DEFAULT_PROFILE", "environment", "variable", "NUMBER", "I", "feel", "like", "this", "be", "an", "issue", "because", "use", "the", "client", "in", "the", "way", "that", "I", "m", "use", "it", "I", "m", "not", "doing", "anything", "where", "a", "user", "would", "expect", "to", "be", "use", "a", "specific", "profile", "or", "even", "a", "profile", "at", "all", "NUMBER", "If", "I", "understand", "correctly", "you", "have", "a", "profile", "configured", "AWS_DEFAULT_PROFILE", "test", "but", "there", "s", "no", "actual", "profile", "created", "in", "either", "NUMBER", "aws", "config", "and", "NUMBER", "aws", "credentials", "NUMBER", "If", "so", "this", "be", "the", "expected", "behavior", "NUMBER", "If", "you", "specify", "a", "profile", "that", "do", "not", "exist", "we", "let", "the", "user", "know", "as", "they", "may", "have", "misconfigured", "misspelled", "their", "profile", "name", "NUMBER", "The", "profile", "just", "has", "to", "be", "defined", "but", "can", "be", "empty", "NUMBER", "So", "your", "workflow", "could", "go", "something", "like", "echo", "profile", "test", "NUMBER", "aws", "config", "export", "AWS_DEFAULT_PROFILE", "test", "your", "script", "Though", "keep", "in", "mind", "that", "you", "ll", "still", "get", "an", "error", "eventually", "if", "boto", "NUMBER", "needs", "to", "make", "an", "API", "call", "that", "requires", "signing", "the", "request", "which", "will", "fail", "because", "we", "couldn", "t", "find", "credentials", "NUMBER", "Would", "that", "work", "for", "you", "Perhaps", "I", "m", "miss", "something", "here", "but", "my", "current", "IAM", "Role", "has", "a", "policy", "for", "EC", "NUMBER", "which", "be", "basically", "allow", "all", "for", "test", "NUMBER", "Using", "the", "resource", "syntax", "it", "works", "for", "S", "NUMBER", "and", "iam", "but", "when", "I", "try", "doing", "the", "same", "for", "EC", "NUMBER", "I", "get", "the", "following", "error", "S", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "IAM", "iam", "boto", "NUMBER", "resource", "iam", "EC", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "resource", "return", "_get_default_session", "NUMBER", "resource", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "resource", "aws_session_token", "aws_session_token", "config", "config", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "client", "aws_session_token", "aws_session_token", "config", "config", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "create_client", "client_config", "config", "api_version", "api_version", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "create_client", "service_model", "self", "NUMBER", "_load_service_model", "service_name", "api_version", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_load_service_model", "api_version", "api_version", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "_wrapper", "data", "func", "self", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "load_service_model", "return", "self", "NUMBER", "load_data", "full_path", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "_wrapper", "data", "func", "self", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "load_data", "raise", "DataNotFoundError", "data_path", "name", "botocore", "NUMBER", "exception", "NUMBER", "DataNotFoundError", "Unable", "to", "load", "data", "for", "ec", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "service", "NUMBER", "Ah", "thanks", "NUMBER", "I", "had", "miss", "that", "in", "my", "bootstrap", "NUMBER", "Hi", "I", "need", "help", "with", "the", "boto", "NUMBER", "logger", "because", "I", "be", "unable", "to", "see", "any", "logs", "on", "stdout", "when", "setting", "boto", "NUMBER", "set_stream_logger", "name", "boto", "NUMBER", "in", "my", "script", "NUMBER", "However", "if", "I", "use", "the", "following", "boto", "NUMBER", "set_stream_logger", "botocore", "level", "DEBUG", "for", "botocore", "I", "can", "see", "the", "Debug", "Logs", "which", "shows", "the", "HTTPS", "Streams", "etc", "NUMBER", "I", "also", "want", "to", "see", "debug", "logs", "for", "boto", "NUMBER", "but", "I", "be", "not", "sure", "how", "to", "use", "boto", "NUMBER", "set_stream_logger", "NUMBER", "I", "be", "initiating", "the", "boto", "NUMBER", "Session", "client", "by", "calling", "the", "following", "python", "def", "boto_clients", "profile", "if", "not", "profile", "profile", "default", "session", "boto", "NUMBER", "Session", "profile_name", "profile", "s", "NUMBER", "session", "NUMBER", "client", "s", "NUMBER", "cfn", "session", "NUMBER", "client", "cloudformation", "ec", "NUMBER", "session", "NUMBER", "client", "ec", "NUMBER", "return", "s", "NUMBER", "cfn", "ec", "NUMBER", "and", "then", "call", "the", "following", "for", "example", "python", "response", "cfn", "NUMBER", "describe_stacks", "StackName", "TAG", "How", "can", "I", "get", "detailed", "logging", "for", "the", "above", "Please", "let", "me", "know", "if", "you", "require", "more", "information", "and", "I", "be", "more", "than", "happy", "to", "provide", "it", "NUMBER", "Thanks", "in", "advance", "NUMBER", "I", "think", "you", "have", "the", "best", "git", "hub", "name", "c", "NUMBER", "xbrhdj", "NUMBER", "u", "NUMBER", "qs", "NUMBER", "Thanks", "for", "your", "response", "Jordon", "however", "I", "already", "set", "boto", "NUMBER", "set_stream_logger", "botocore", "level", "DEBUG", "which", "I", "mention", "in", "my", "initial", "statement", "NUMBER", "I", "be", "wondering", "how", "to", "get", "detailed", "logging", "for", "any", "boto", "NUMBER", "resource", "like", "Cloud", "Formation", "create_stack", "describe_stack", "etc", "NUMBER", "I", "ve", "seen", "comments", "of", "somebody", "to", "use", "boto", "NUMBER", "set_stream_logger", "name", "boto", "NUMBER", "but", "I", "be", "unable", "to", "see", "any", "logs", "NUMBER", "Thanks", "in", "advance", "NUMBER", "Hey", "be", "you", "still", "having", "issue", "with", "this", "You", "could", "try", "boto", "NUMBER", "set_stream_logger", "which", "will", "enable", "both", "botocore", "and", "boto", "NUMBER", "debug", "logs", "NUMBER", "Thanks", "issue", "has", "be", "resolve", "NUMBER", "This", "be", "a", "bit", "weird", "and", "I", "cannot", "rule", "out", "that", "I", "be", "doing", "something", "stupid", "NUMBER", "with", "Apache", "spark", "NUMBER", "on", "Hortonworks", "Data", "Platform", "NUMBER", "HDP", "NUMBER", "I", "be", "seeing", "that", "parrallelised", "tasks", "of", "jobs", "run", "through", "yarn", "be", "not", "able", "to", "locate", "credentials", "NUMBER", "I", "be", "very", "sure", "that", "the", "user", "I", "be", "use", "centos", "has", "the", "credentials", "stored", "in", "the", "right", "place", "NUMBER", "aws", "I", "have", "test", "this", "very", "thoroughly", "with", "vanilla", "python", "boto", "NUMBER", "and", "the", "awscli", "NUMBER", "I", "have", "a", "couple", "of", "boto", "calls", "NUMBER", "one", "before", "parallelism", "which", "works", "NUMBER", "for", "object", "in", "my_bucket", "NUMBER", "objects", "NUMBER", "filter", "Prefix", "NUMBER", "NUMBER", "and", "this", "one", "be", "supposed", "to", "run", "in", "parallel", "downloading", "the", "object", "NUMBER", "It", "seems", "that", "this", "be", "fail", "NUMBER", "s", "NUMBER", "obj", "boto", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "Object", "bucket_name", "time", "waits", "for", "no", "man", "key", "s", "NUMBER", "Key", "The", "job", "fail", "with", "NoCredentialsError", "Unable", "to", "locate", "credentials", "NUMBER", "Stacktrace", "Job", "abort", "due", "to", "stage", "failure", "Task", "NUMBER", "in", "stage", "NUMBER", "fail", "NUMBER", "times", "most", "recent", "failure", "Lost", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonException", "Traceback", "most", "recent", "call", "last", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "main", "process", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "process", "serializer", "NUMBER", "dump_stream", "func", "split_index", "iterator", "outfile", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "serializers", "NUMBER", "py", "line", "NUMBER", "in", "dump_stream", "vs", "list", "itertools", "NUMBER", "islice", "iterator", "batch", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "rdd", "NUMBER", "py", "line", "NUMBER", "in", "takeUpToNumLeft", "File", "home", "centos", "fun", "function", "spark", "parrallel", "read", "from", "s", "NUMBER", "tick", "NUMBER", "py", "line", "NUMBER", "in", "distributedJsonRead", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "operation_name", "operation_model", "NUMBER", "name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "handler", "return", "self", "NUMBER", "sign", "operation_name", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "auth", "NUMBER", "add_auth", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "raise", "NoCredentialsError", "NoCredentialsError", "Unable", "to", "locate", "credentials", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "read", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "TAG", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRDD", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "computeOrReadCheckpoint", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "iterator", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "ResultTask", "NUMBER", "runTask", "ResultTask", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "Task", "NUMBER", "run", "Task", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "executor", "NUMBER", "Executor", "TaskRunner", "NUMBER", "run", "Executor", "NUMBER", "scala", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "NUMBER", "runWorker", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "Worker", "NUMBER", "run", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "lang", "NUMBER", "Thread", "NUMBER", "run", "Thread", "NUMBER", "java", "NUMBER", "Driver", "stacktrace", "stacktrace", "Job", "abort", "due", "to", "stage", "failure", "Task", "NUMBER", "in", "stage", "NUMBER", "fail", "NUMBER", "times", "most", "recent", "failure", "Lost", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonException", "Traceback", "most", "recent", "call", "last", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "main", "process", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "process", "serializer", "NUMBER", "dump_stream", "func", "split_index", "iterator", "outfile", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "serializers", "NUMBER", "py", "line", "NUMBER", "in", "dump_stream", "vs", "list", "itertools", "NUMBER", "islice", "iterator", "batch", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "rdd", "NUMBER", "py", "line", "NUMBER", "in", "takeUpToNumLeft", "File", "home", "centos", "fun", "function", "spark", "parrallel", "read", "from", "s", "NUMBER", "tick", "NUMBER", "py", "line", "NUMBER", "in", "distributedJsonRead", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "operation_name", "operation_model", "NUMBER", "name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "handler", "return", "self", "NUMBER", "sign", "operation_name", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "auth", "NUMBER", "add_auth", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "raise", "NoCredentialsErrorNoCredentialsError", "Unable", "to", "locate", "credentialsat", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "read", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "TAG", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRDD", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "computeOrReadCheckpoint", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "iterator", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "ResultTask", "NUMBER", "runTask", "ResultTask", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "Task", "NUMBER", "run", "Task", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "executor", "NUMBER", "Executor", "TaskRunner", "NUMBER", "run", "Executor", "NUMBER", "scala", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "NUMBER", "runWorker", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "Worker", "NUMBER", "run", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "lang", "NUMBER", "Thread", "NUMBER", "run", "Thread", "NUMBER", "java", "NUMBER", "Driver", "stacktrace", "I", "be", "not", "sure", "it", "be", "relevent", "but", "the", "last", "thing", "I", "can", "see", "from", "the", "botocore", "debug", "output", "be", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "after", "call", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "resource", "class", "NUMBER", "s", "NUMBER", "ObjectSummary", "calling", "handler", "TAG", "The", "full", "code", "please", "excuse", "the", "mess", "import", "boto", "NUMBER", "import", "ujson", "import", "arrow", "import", "sys", "import", "os", "from", "pyspark", "NUMBER", "sql", "import", "SQLContext", "from", "pyspark", "import", "SparkContext", "boto", "NUMBER", "set_stream_logger", "botocore", "level", "DEBUG", "sc", "SparkContext", "version", "sys", "NUMBER", "version", "log", "NUMBER", "jLogger", "sc", "NUMBER", "_jvm", "NUMBER", "org", "NUMBER", "apache", "NUMBER", "log", "NUMBER", "j", "LOGGER", "log", "NUMBER", "jLogger", "NUMBER", "LogManager", "NUMBER", "getLogger", "__name__", "LOGGER", "NUMBER", "info", "pyspark", "script", "logger", "initialized", "LOGGER", "NUMBER", "info", "Python", "Version", "version", "s", "NUMBER", "_list", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "my_bucket", "s", "NUMBER", "Bucket", "time", "waits", "for", "no", "man", "for", "object", "in", "my_bucket", "NUMBER", "objects", "NUMBER", "filter", "Prefix", "NUMBER", "NUMBER", "s", "NUMBER", "_list", "NUMBER", "append", "object", "NUMBER", "key", "def", "add_timestamp", "dict", "dict", "timestamp", "arrow", "NUMBER", "get", "int", "dict", "year", "int", "dict", "month", "int", "dict", "day", "int", "dict", "hour", "int", "dict", "minute", "int", "dict", "second", "NUMBER", "timestamp", "return", "dict", "def", "distributedJsonRead", "s", "NUMBER", "Key", "s", "NUMBER", "obj", "boto", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "Object", "bucket_name", "time", "waits", "for", "no", "man", "key", "s", "NUMBER", "Key", "contents", "s", "NUMBER", "obj", "NUMBER", "get", "Body", "NUMBER", "read", "NUMBER", "decode", "meow", "contents", "NUMBER", "splitlines", "result_wo_timestamp", "map", "ujson", "NUMBER", "loads", "meow", "result_wi_timestamp", "map", "add_timestamp", "result_wo_timestamp", "return", "result_wi_timestamp", "sqlContext", "SQLContext", "sc", "job", "sc", "NUMBER", "parallelize", "s", "NUMBER", "_list", "foo", "job", "NUMBER", "flatMap", "distributedJsonRead", "df", "foo", "NUMBER", "toDF", "df", "NUMBER", "show", "blah", "df", "NUMBER", "count", "print", "blah", "df", "NUMBER", "printSchema", "df", "NUMBER", "write", "NUMBER", "parquet", "dates_by_seconds", "mode", "overwrite", "partitionBy", "second", "sc", "NUMBER", "op", "exit", "centos", "hadoop", "NUMBER", "cat", "NUMBER", "aws", "config", "default", "region", "eu", "central", "NUMBER", "Boto", "proxy", "webproxy", "NUMBER", "foo", "NUMBER", "de", "proxy_port", "NUMBER", "centos", "hadoop", "NUMBER", "cat", "NUMBER", "aws", "credentials", "default", "aws_access_key_id", "XXXXXXXXXXXXXXXXXX", "aws_secret_access_key", "XxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx", "Full", "output", "centos", "hadoop", "NUMBER", "spark", "submit", "master", "yarn", "client", "executor", "memory", "NUMBER", "G", "num", "executors", "NUMBER", "fun", "function", "spark", "parrallel", "read", "from", "s", "NUMBER", "tick", "NUMBER", "py", "Warning", "Master", "yarn", "client", "be", "deprecate", "since", "NUMBER", "Please", "use", "master", "yarn", "with", "specified", "deploy", "mode", "instead", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SparkContext", "Running", "Spark", "version", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SecurityManager", "Changing", "view", "acls", "to", "centos", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SecurityManager", "Changing", "modify", "acls", "to", "centos", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SecurityManager", "Changing", "view", "acls", "group", "to", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SecurityManager", "Changing", "modify", "acls", "group", "to", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SecurityManager", "SecurityManager", "authentication", "disabled", "ui", "acls", "disabled", "users", "with", "view", "permissions", "Set", "centos", "group", "with", "view", "permissions", "Set", "users", "with", "modify", "permissions", "Set", "centos", "group", "with", "modify", "permissions", "Set", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Utils", "Successfully", "start", "service", "sparkDriver", "on", "port", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SparkEnv", "Registering", "MapOutputTracker", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SparkEnv", "Registering", "BlockManagerMaster", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "DiskBlockManager", "Created", "local", "directory", "at", "tmp", "blockmgr", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "ff", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "bfa", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "MemoryStore", "MemoryStore", "start", "with", "capacity", "NUMBER", "MB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SparkEnv", "Registering", "OutputCommitCoordinator", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "log", "Logging", "initialized", "NUMBER", "ms", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Server", "jetty", "NUMBER", "z", "SNAPSHOT", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "bca", "NUMBER", "cc", "NUMBER", "jobs", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "c", "NUMBER", "jobs", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "jobs", "job", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "c", "NUMBER", "jobs", "job", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "ebbf", "NUMBER", "stages", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "stages", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "stages", "stage", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "stages", "stage", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "b", "NUMBER", "stages", "pool", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "ec", "NUMBER", "ea", "stages", "pool", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "e", "NUMBER", "b", "NUMBER", "storage", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "d", "NUMBER", "e", "NUMBER", "storage", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "b", "NUMBER", "e", "storage", "rdd", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "storage", "rdd", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "cb", "NUMBER", "environment", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "environment", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "b", "NUMBER", "ed", "NUMBER", "executors", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "ef", "NUMBER", "a", "NUMBER", "executors", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "executors", "threadDump", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "ce", "NUMBER", "d", "NUMBER", "b", "NUMBER", "executors", "threadDump", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "fdb", "NUMBER", "static", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "bd", "NUMBER", "d", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "e", "NUMBER", "api", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "a", "NUMBER", "e", "NUMBER", "stages", "stage", "kill", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ServerConnector", "Started", "ServerConnector", "NUMBER", "d", "NUMBER", "c", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Server", "Started", "NUMBER", "ms", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Utils", "Successfully", "start", "service", "SparkUI", "on", "port", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SparkUI", "Bound", "SparkUI", "to", "NUMBER", "and", "start", "at", "LINK", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "RMProxy", "Connecting", "to", "ResourceManager", "at", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Requesting", "a", "new", "application", "from", "cluster", "with", "NUMBER", "NodeManagers", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Verifying", "our", "application", "has", "not", "request", "more", "than", "the", "maximum", "memory", "capability", "of", "the", "cluster", "NUMBER", "MB", "per", "container", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Will", "allocate", "AM", "container", "with", "NUMBER", "MB", "memory", "including", "NUMBER", "MB", "overhead", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Setting", "up", "container", "launch", "context", "for", "our", "AM", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Setting", "up", "the", "launch", "environment", "for", "our", "AM", "container", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Preparing", "resources", "for", "our", "AM", "container", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Use", "hdfs", "cache", "file", "as", "spark", "NUMBER", "yarn", "NUMBER", "archive", "for", "HDP", "hdfsCacheFile", "hdfs", "hdp", "apps", "NUMBER", "NUMBER", "spark", "NUMBER", "spark", "NUMBER", "hdp", "yarn", "archive", "NUMBER", "tar", "NUMBER", "gz", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Source", "and", "destination", "file", "systems", "be", "the", "same", "NUMBER", "Not", "copying", "hdfs", "hdp", "apps", "NUMBER", "NUMBER", "spark", "NUMBER", "spark", "NUMBER", "hdp", "yarn", "archive", "NUMBER", "tar", "NUMBER", "gz", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Uploading", "resource", "file", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "hdfs", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "user", "centos", "NUMBER", "sparkStaging", "application_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Uploading", "resource", "file", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "py", "NUMBER", "j", "NUMBER", "src", "NUMBER", "zip", "hdfs", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "user", "centos", "NUMBER", "sparkStaging", "application_", "NUMBER", "_", "NUMBER", "py", "NUMBER", "j", "NUMBER", "src", "NUMBER", "zip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Uploading", "resource", "file", "tmp", "spark", "bfa", "NUMBER", "d", "dae", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "cd", "__spark_conf__", "NUMBER", "zip", "hdfs", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "user", "centos", "NUMBER", "sparkStaging", "application_", "NUMBER", "_", "NUMBER", "__spark_conf__", "NUMBER", "zip", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SecurityManager", "Changing", "view", "acls", "to", "centos", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SecurityManager", "Changing", "modify", "acls", "to", "centos", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SecurityManager", "Changing", "view", "acls", "group", "to", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SecurityManager", "Changing", "modify", "acls", "group", "to", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SecurityManager", "SecurityManager", "authentication", "disabled", "ui", "acls", "disabled", "users", "with", "view", "permissions", "Set", "centos", "group", "with", "view", "permissions", "Set", "users", "with", "modify", "permissions", "Set", "centos", "group", "with", "modify", "permissions", "Set", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Submitting", "application", "application_", "NUMBER", "_", "NUMBER", "to", "ResourceManager", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnClientImpl", "Submitted", "application", "application_", "NUMBER", "_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SchedulerExtensionServices", "Starting", "Yarn", "extension", "services", "with", "app", "application_", "NUMBER", "_", "NUMBER", "and", "attemptId", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Application", "report", "for", "application_", "NUMBER", "_", "NUMBER", "state", "ACCEPTED", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "client", "token", "N", "A", "diagnostics", "AM", "container", "be", "launched", "waiting", "for", "AM", "container", "to", "Register", "with", "RM", "ApplicationMaster", "host", "N", "A", "ApplicationMaster", "RPC", "port", "NUMBER", "queue", "default", "start", "time", "NUMBER", "final", "status", "UNDEFINED", "track", "URL", "LINK", "_", "NUMBER", "_", "NUMBER", "user", "centos", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Application", "report", "for", "application_", "NUMBER", "_", "NUMBER", "state", "ACCEPTED", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnSchedulerEndpoint", "ApplicationMaster", "registered", "as", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnClientSchedulerBackend", "Add", "WebUI", "Filter", "NUMBER", "org", "NUMBER", "apache", "NUMBER", "hadoop", "NUMBER", "yarn", "NUMBER", "server", "NUMBER", "webproxy", "NUMBER", "amfilter", "NUMBER", "AmIpFilter", "Map", "PROXY_HOSTS", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "PROXY_URI_BASES", "LINK", "_", "NUMBER", "_", "NUMBER", "proxy", "application_", "NUMBER", "_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "JettyUtils", "Adding", "filter", "org", "NUMBER", "apache", "NUMBER", "hadoop", "NUMBER", "yarn", "NUMBER", "server", "NUMBER", "webproxy", "NUMBER", "amfilter", "NUMBER", "AmIpFilter", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "Application", "report", "for", "application_", "NUMBER", "_", "NUMBER", "state", "RUNNING", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Client", "client", "token", "N", "A", "diagnostics", "N", "A", "ApplicationMaster", "host", "NUMBER", "ApplicationMaster", "RPC", "port", "NUMBER", "queue", "default", "start", "time", "NUMBER", "final", "status", "UNDEFINED", "track", "URL", "LINK", "_", "NUMBER", "_", "NUMBER", "user", "centos", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnClientSchedulerBackend", "Application", "application_", "NUMBER", "_", "NUMBER", "has", "start", "run", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Utils", "Successfully", "start", "service", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "network", "NUMBER", "netty", "NUMBER", "NettyBlockTransferService", "on", "port", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "NettyBlockTransferService", "Server", "created", "on", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMaster", "Registering", "BlockManager", "BlockManagerId", "driver", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "NUMBER", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "driver", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMaster", "Registered", "BlockManager", "BlockManagerId", "driver", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Started", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "ad", "NUMBER", "cf", "NUMBER", "metrics", "json", "null", "AVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "EventLoggingListener", "Logging", "events", "to", "hdfs", "spark", "NUMBER", "history", "application_", "NUMBER", "_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnClientSchedulerBackend", "SchedulerBackend", "be", "ready", "for", "scheduling", "beginning", "after", "reached", "minRegisteredResourcesRatio", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "__main__", "pyspark", "script", "logger", "initialized", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "__main__", "Python", "Version", "NUMBER", "default", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GCC", "NUMBER", "NUMBER", "Red", "Hat", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "data", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "resources", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "DEBUG", "Looking", "for", "credentials", "via", "env", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "DEBUG", "Looking", "for", "credentials", "via", "assume", "role", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "DEBUG", "Looking", "for", "credentials", "via", "shared", "credentials", "file", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "INFO", "Found", "credentials", "in", "shared", "credentials", "file", "NUMBER", "aws", "credentials", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "endpoints", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "service", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "_retry", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "client", "DEBUG", "Registering", "retry", "handlers", "for", "service", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "args", "DEBUG", "The", "s", "NUMBER", "config", "key", "be", "not", "a", "dictionary", "type", "ignoring", "its", "value", "of", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Setting", "s", "NUMBER", "timeout", "as", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "client", "DEBUG", "Defaulting", "to", "S", "NUMBER", "virtual", "host", "style", "addressing", "with", "path", "style", "addressing", "fallback", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "resource", "class", "NUMBER", "s", "NUMBER", "Bucket", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "loaders", "DEBUG", "Loading", "JSON", "file", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "paginators", "NUMBER", "json", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "call", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "call", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "OperationModel", "name", "ListObjects", "verify_ssl", "True", "with", "params", "body", "url", "u", "LINK", "central", "NUMBER", "amazonaws", "NUMBER", "com", "time", "waits", "for", "no", "man", "prefix", "NUMBER", "NUMBER", "encoding", "type", "url", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "el", "NUMBER", "x", "NUMBER", "_", "NUMBER", "Botocore", "NUMBER", "Resource", "context", "encoding_type_auto_set", "True", "client_region", "eu", "central", "NUMBER", "signing", "bucket", "time", "waits", "for", "no", "man", "has_streaming_input", "False", "client_config", "TAG", "query_string", "u", "prefix", "NUMBER", "NUMBER", "u", "encoding", "type", "url", "url_path", "u", "time", "waits", "for", "no", "man", "method", "u", "GET", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "sign", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "GET", "time", "waits", "for", "no", "man", "encoding", "type", "url", "prefix", "NUMBER", "NUMBER", "host", "s", "NUMBER", "eu", "central", "NUMBER", "amazonaws", "NUMBER", "com", "x", "amz", "content", "sha", "NUMBER", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "afbf", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "b", "NUMBER", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "host", "x", "amz", "content", "sha", "NUMBER", "x", "amz", "date", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "afbf", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "eu", "central", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "b", "NUMBER", "aee", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "c", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "NUMBER", "b", "NUMBER", "cff", "NUMBER", "a", "NUMBER", "e", "NUMBER", "bff", "NUMBER", "d", "NUMBER", "a", "NUMBER", "fcd", "NUMBER", "b", "NUMBER", "bfc", "NUMBER", "f", "NUMBER", "dce", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTPS", "connection", "NUMBER", "s", "NUMBER", "eu", "central", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "GET", "time", "waits", "for", "no", "man", "prefix", "NUMBER", "NUMBER", "encoding", "type", "url", "HTTP", "NUMBER", "NUMBER", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "date", "Wed", "NUMBER", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "x", "amz", "id", "NUMBER", "sAmyVIcDzpEItWhcPrA", "G", "NUMBER", "IhpzahlR", "NUMBER", "ivaRxkkTVNRnrvSmbhLVvw", "NUMBER", "NUMBER", "DwFzevFe", "NUMBER", "fFYTRRXby", "NUMBER", "server", "AmazonS", "NUMBER", "transfer", "encoding", "chunked", "x", "amz", "request", "id", "NUMBER", "DE", "NUMBER", "CF", "NUMBER", "A", "NUMBER", "D", "NUMBER", "E", "NUMBER", "C", "x", "amz", "bucket", "region", "eu", "west", "NUMBER", "content", "type", "application", "xml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "TAG", "TAG", "TAG", "PermanentRedirect", "TAG", "TAG", "The", "bucket", "you", "be", "attempting", "to", "access", "must", "be", "address", "use", "the", "specified", "endpoint", "NUMBER", "Please", "send", "all", "future", "request", "to", "this", "endpoint", "NUMBER", "TAG", "TAG", "time", "waits", "for", "no", "man", "TAG", "TAG", "time", "waits", "for", "no", "man", "NUMBER", "s", "NUMBER", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "TAG", "TAG", "NUMBER", "DE", "NUMBER", "CF", "NUMBER", "A", "NUMBER", "D", "NUMBER", "E", "NUMBER", "C", "TAG", "TAG", "sAmyVIcDzpEItWhcPrA", "G", "NUMBER", "IhpzahlR", "NUMBER", "ivaRxkkTVNRnrvSmbhLVvw", "NUMBER", "NUMBER", "DwFzevFe", "NUMBER", "fFYTRRXby", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "utils", "DEBUG", "S", "NUMBER", "client", "configured", "for", "region", "eu", "central", "NUMBER", "but", "the", "bucket", "time", "waits", "for", "no", "man", "be", "in", "region", "eu", "west", "NUMBER", "Please", "configure", "the", "proper", "region", "to", "avoid", "multiple", "unnecessary", "redirects", "and", "signing", "attempts", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "utils", "DEBUG", "Updating", "URI", "from", "LINK", "central", "NUMBER", "amazonaws", "NUMBER", "com", "time", "waits", "for", "no", "man", "prefix", "NUMBER", "NUMBER", "encoding", "type", "url", "to", "LINK", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "time", "waits", "for", "no", "man", "prefix", "NUMBER", "NUMBER", "encoding", "type", "url", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Response", "received", "to", "retry", "sleeping", "for", "NUMBER", "seconds", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "sign", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "GET", "time", "waits", "for", "no", "man", "encoding", "type", "url", "prefix", "NUMBER", "NUMBER", "host", "s", "NUMBER", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "x", "amz", "content", "sha", "NUMBER", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "afbf", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "b", "NUMBER", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "host", "x", "amz", "content", "sha", "NUMBER", "x", "amz", "date", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "afbf", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "eu", "west", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "cea", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "eaa", "NUMBER", "c", "NUMBER", "fe", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "ebf", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "c", "NUMBER", "dabd", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTPS", "connection", "NUMBER", "s", "NUMBER", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "GET", "time", "waits", "for", "no", "man", "prefix", "NUMBER", "NUMBER", "encoding", "type", "url", "HTTP", "NUMBER", "NUMBER", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "x", "amz", "bucket", "region", "eu", "west", "NUMBER", "x", "amz", "id", "NUMBER", "hCJa", "NUMBER", "Z", "NUMBER", "JcalQks", "NUMBER", "xglnmOpFFuFr", "NUMBER", "sCcMiqVtkDm", "NUMBER", "xudLhbV", "NUMBER", "nPLN", "NUMBER", "K", "NUMBER", "n", "NUMBER", "MPRHYMOe", "NUMBER", "BK", "NUMBER", "fXz", "NUMBER", "server", "AmazonS", "NUMBER", "transfer", "encoding", "chunked", "x", "amz", "request", "id", "A", "NUMBER", "F", "NUMBER", "AEE", "NUMBER", "B", "NUMBER", "FE", "date", "Wed", "NUMBER", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "type", "application", "xml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "TAG", "TAG", "TAG", "time", "waits", "for", "no", "man", "TAG", "TAG", "NUMBER", "NUMBER", "TAG", "TAG", "TAG", "TAG", "NUMBER", "TAG", "TAG", "url", "TAG", "TAG", "false", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "ad", "NUMBER", "bc", "NUMBER", "b", "NUMBER", "adf", "NUMBER", "fe", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "cd", "NUMBER", "ab", "NUMBER", "df", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "cd", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "c", "NUMBER", "ddfb", "NUMBER", "caef", "NUMBER", "a", "NUMBER", "bee", "NUMBER", "c", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "ee", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fcfb", "NUMBER", "c", "NUMBER", "bcf", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "da", "NUMBER", "b", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "c", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "dad", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "ef", "NUMBER", "aca", "NUMBER", "ec", "NUMBER", "b", "NUMBER", "e", "NUMBER", "da", "NUMBER", "ffe", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "c", "NUMBER", "bb", "NUMBER", "c", "NUMBER", "e", "NUMBER", "dec", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "fd", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "bce", "NUMBER", "cbd", "NUMBER", "acf", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "ad", "NUMBER", "dad", "NUMBER", "fddf", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "a", "NUMBER", "dfba", "NUMBER", "a", "NUMBER", "dbf", "NUMBER", "afd", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "ce", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "df", "NUMBER", "af", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "f", "NUMBER", "bab", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "cbc", "NUMBER", "cb", "NUMBER", "d", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "fe", "NUMBER", "bf", "NUMBER", "e", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "fea", "NUMBER", "bad", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "e", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "cf", "NUMBER", "beb", "NUMBER", "cb", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "cda", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "dab", "NUMBER", "a", "NUMBER", "e", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "f", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "eace", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "c", "NUMBER", "b", "NUMBER", "af", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fab", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "cea", "NUMBER", "f", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cbf", "NUMBER", "e", "NUMBER", "c", "NUMBER", "de", "NUMBER", "d", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "f", "NUMBER", "e", "NUMBER", "bce", "NUMBER", "aa", "NUMBER", "bf", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "daac", "NUMBER", "cc", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fe", "NUMBER", "de", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "ea", "NUMBER", "be", "NUMBER", "e", "NUMBER", "efa", "NUMBER", "f", "NUMBER", "bcbc", "NUMBER", "e", "NUMBER", "f", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "b", "NUMBER", "b", "NUMBER", "da", "NUMBER", "c", "NUMBER", "dacc", "NUMBER", "f", "NUMBER", "cfedb", "NUMBER", "de", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "db", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "ddd", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "NUMBER", "a", "NUMBER", "bcdfe", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "NUMBER", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "cb", "TAG", "TAG", "andrew", "NUMBER", "holway", "TAG", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "after", "call", "NUMBER", "s", "NUMBER", "ListObjects", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "resource", "class", "NUMBER", "s", "NUMBER", "ObjectSummary", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Registered", "executor", "NettyRpcEndpointRef", "null", "NUMBER", "NUMBER", "with", "ID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMasterEndpoint", "Registering", "block", "manager", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "with", "NUMBER", "MB", "RAM", "BlockManagerId", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SparkContext", "Starting", "job", "runJob", "at", "PythonRDD", "NUMBER", "scala", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "DAGScheduler", "Got", "job", "NUMBER", "runJob", "at", "PythonRDD", "NUMBER", "scala", "NUMBER", "with", "NUMBER", "output", "partitions", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "DAGScheduler", "Final", "stage", "ResultStage", "NUMBER", "runJob", "at", "PythonRDD", "NUMBER", "scala", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "DAGScheduler", "Parents", "of", "final", "stage", "List", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "DAGScheduler", "Missing", "parents", "List", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "DAGScheduler", "Submitting", "ResultStage", "NUMBER", "PythonRDD", "NUMBER", "at", "RDD", "at", "PythonRDD", "NUMBER", "scala", "NUMBER", "which", "has", "no", "miss", "parents", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "MemoryStore", "Block", "broadcast_", "NUMBER", "stored", "as", "values", "in", "memory", "estimated", "size", "NUMBER", "KB", "free", "NUMBER", "MB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "MemoryStore", "Block", "broadcast_", "NUMBER", "_piece", "NUMBER", "stored", "as", "bytes", "in", "memory", "estimated", "size", "NUMBER", "KB", "free", "NUMBER", "MB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerInfo", "Added", "broadcast_", "NUMBER", "_piece", "NUMBER", "in", "memory", "on", "NUMBER", "NUMBER", "size", "NUMBER", "KB", "free", "NUMBER", "MB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SparkContext", "Created", "broadcast", "NUMBER", "from", "broadcast", "at", "DAGScheduler", "NUMBER", "scala", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "DAGScheduler", "Submitting", "NUMBER", "miss", "tasks", "from", "ResultStage", "NUMBER", "PythonRDD", "NUMBER", "at", "RDD", "at", "PythonRDD", "NUMBER", "scala", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnScheduler", "Adding", "task", "set", "NUMBER", "with", "NUMBER", "tasks", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "TaskSetManager", "Starting", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "partition", "NUMBER", "PROCESS_LOCAL", "NUMBER", "bytes", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Launching", "task", "NUMBER", "on", "executor", "id", "NUMBER", "hostname", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerInfo", "Added", "broadcast_", "NUMBER", "_piece", "NUMBER", "in", "memory", "on", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "size", "NUMBER", "KB", "free", "NUMBER", "MB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "WARN", "TaskSetManager", "Lost", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonException", "Traceback", "most", "recent", "call", "last", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "main", "process", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "process", "serializer", "NUMBER", "dump_stream", "func", "split_index", "iterator", "outfile", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "serializers", "NUMBER", "py", "line", "NUMBER", "in", "dump_stream", "vs", "list", "itertools", "NUMBER", "islice", "iterator", "batch", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "rdd", "NUMBER", "py", "line", "NUMBER", "in", "takeUpToNumLeft", "File", "home", "centos", "fun", "function", "spark", "parrallel", "read", "from", "s", "NUMBER", "tick", "NUMBER", "py", "line", "NUMBER", "in", "distributedJsonRead", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "operation_name", "operation_model", "NUMBER", "name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "handler", "return", "self", "NUMBER", "sign", "operation_name", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "auth", "NUMBER", "add_auth", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "raise", "NoCredentialsError", "NoCredentialsError", "Unable", "to", "locate", "credentials", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "read", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "TAG", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRDD", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "computeOrReadCheckpoint", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "iterator", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "ResultTask", "NUMBER", "runTask", "ResultTask", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "Task", "NUMBER", "run", "Task", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "executor", "NUMBER", "Executor", "TaskRunner", "NUMBER", "run", "Executor", "NUMBER", "scala", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "NUMBER", "runWorker", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "Worker", "NUMBER", "run", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "lang", "NUMBER", "Thread", "NUMBER", "run", "Thread", "NUMBER", "java", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "TaskSetManager", "Starting", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "partition", "NUMBER", "PROCESS_LOCAL", "NUMBER", "bytes", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Launching", "task", "NUMBER", "on", "executor", "id", "NUMBER", "hostname", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerInfo", "Added", "broadcast_", "NUMBER", "_piece", "NUMBER", "in", "memory", "on", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "size", "NUMBER", "KB", "free", "NUMBER", "MB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "WARN", "TaskSetManager", "Lost", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonException", "Traceback", "most", "recent", "call", "last", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "main", "process", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "process", "serializer", "NUMBER", "dump_stream", "func", "split_index", "iterator", "outfile", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "serializers", "NUMBER", "py", "line", "NUMBER", "in", "dump_stream", "vs", "list", "itertools", "NUMBER", "islice", "iterator", "batch", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "rdd", "NUMBER", "py", "line", "NUMBER", "in", "takeUpToNumLeft", "File", "home", "centos", "fun", "function", "spark", "parrallel", "read", "from", "s", "NUMBER", "tick", "NUMBER", "py", "line", "NUMBER", "in", "distributedJsonRead", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "operation_name", "operation_model", "NUMBER", "name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "handler", "return", "self", "NUMBER", "sign", "operation_name", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "auth", "NUMBER", "add_auth", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "raise", "NoCredentialsError", "NoCredentialsError", "Unable", "to", "locate", "credentials", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "read", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "TAG", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRDD", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "computeOrReadCheckpoint", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "iterator", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "ResultTask", "NUMBER", "runTask", "ResultTask", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "Task", "NUMBER", "run", "Task", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "executor", "NUMBER", "Executor", "TaskRunner", "NUMBER", "run", "Executor", "NUMBER", "scala", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "NUMBER", "runWorker", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "Worker", "NUMBER", "run", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "lang", "NUMBER", "Thread", "NUMBER", "run", "Thread", "NUMBER", "java", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "TaskSetManager", "Starting", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "partition", "NUMBER", "PROCESS_LOCAL", "NUMBER", "bytes", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Launching", "task", "NUMBER", "on", "executor", "id", "NUMBER", "hostname", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerInfo", "Added", "broadcast_", "NUMBER", "_piece", "NUMBER", "in", "memory", "on", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "size", "NUMBER", "KB", "free", "NUMBER", "MB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "WARN", "TaskSetManager", "Lost", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonException", "Traceback", "most", "recent", "call", "last", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "main", "process", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "process", "serializer", "NUMBER", "dump_stream", "func", "split_index", "iterator", "outfile", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "serializers", "NUMBER", "py", "line", "NUMBER", "in", "dump_stream", "vs", "list", "itertools", "NUMBER", "islice", "iterator", "batch", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "rdd", "NUMBER", "py", "line", "NUMBER", "in", "takeUpToNumLeft", "File", "home", "centos", "fun", "function", "spark", "parrallel", "read", "from", "s", "NUMBER", "tick", "NUMBER", "py", "line", "NUMBER", "in", "distributedJsonRead", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "operation_name", "operation_model", "NUMBER", "name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "handler", "return", "self", "NUMBER", "sign", "operation_name", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "auth", "NUMBER", "add_auth", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "raise", "NoCredentialsError", "NoCredentialsError", "Unable", "to", "locate", "credentials", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "read", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "TAG", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRDD", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "computeOrReadCheckpoint", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "iterator", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "ResultTask", "NUMBER", "runTask", "ResultTask", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "Task", "NUMBER", "run", "Task", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "executor", "NUMBER", "Executor", "TaskRunner", "NUMBER", "run", "Executor", "NUMBER", "scala", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "NUMBER", "runWorker", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "Worker", "NUMBER", "run", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "lang", "NUMBER", "Thread", "NUMBER", "run", "Thread", "NUMBER", "java", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "TaskSetManager", "Starting", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "partition", "NUMBER", "PROCESS_LOCAL", "NUMBER", "bytes", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Launching", "task", "NUMBER", "on", "executor", "id", "NUMBER", "hostname", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "TaskSetManager", "Lost", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "on", "executor", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonException", "Traceback", "most", "recent", "call", "last", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "main", "process", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "process", "serializer", "NUMBER", "dump_stream", "func", "split_index", "iterator", "outfile", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "serializers", "NUMBER", "py", "line", "NUMBER", "in", "dump_stream", "vs", "list", "itertools", "NUMBER", "islice", "iterator", "batch", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "rdd", "NUMBER", "py", "line", "NUMBER", "in", "takeUpToNumLeft", "File", "home", "centos", "fun", "function", "spark", "parrallel", "read", "from", "s", "NUMBER", "tick", "NUMBER", "py", "line", "NUMBER", "in", "distributedJsonRead", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "operation_name", "operation_model", "NUMBER", "name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "handler", "return", "self", "NUMBER", "sign", "operation_name", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "auth", "NUMBER", "add_auth", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "raise", "NoCredentialsError", "NoCredentialsError", "Unable", "to", "locate", "credentials", "duplicate", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ERROR", "TaskSetManager", "Task", "NUMBER", "in", "stage", "NUMBER", "fail", "NUMBER", "times", "aborting", "job", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnScheduler", "Removed", "TaskSet", "NUMBER", "whose", "tasks", "have", "all", "completed", "from", "pool", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnScheduler", "Cancelling", "stage", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "DAGScheduler", "ResultStage", "NUMBER", "runJob", "at", "PythonRDD", "NUMBER", "scala", "NUMBER", "fail", "in", "NUMBER", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "DAGScheduler", "Job", "NUMBER", "fail", "runJob", "at", "PythonRDD", "NUMBER", "scala", "NUMBER", "took", "NUMBER", "s", "Traceback", "most", "recent", "call", "last", "File", "home", "centos", "fun", "function", "spark", "parrallel", "read", "from", "s", "NUMBER", "tick", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "df", "foo", "NUMBER", "toDF", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "sql", "session", "NUMBER", "py", "line", "NUMBER", "in", "toDF", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "sql", "session", "NUMBER", "py", "line", "NUMBER", "in", "createDataFrame", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "sql", "session", "NUMBER", "py", "line", "NUMBER", "in", "_createFromRDD", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "sql", "session", "NUMBER", "py", "line", "NUMBER", "in", "_inferSchema", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "rdd", "NUMBER", "py", "line", "NUMBER", "in", "first", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "rdd", "NUMBER", "py", "line", "NUMBER", "in", "take", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "context", "NUMBER", "py", "line", "NUMBER", "in", "runJob", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "py", "NUMBER", "j", "NUMBER", "src", "NUMBER", "zip", "py", "NUMBER", "j", "java_gateway", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "sql", "utils", "NUMBER", "py", "line", "NUMBER", "in", "deco", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "py", "NUMBER", "j", "NUMBER", "src", "NUMBER", "zip", "py", "NUMBER", "j", "protocol", "NUMBER", "py", "line", "NUMBER", "in", "get_return_value", "py", "NUMBER", "j", "NUMBER", "protocol", "NUMBER", "Py", "NUMBER", "JJavaError", "An", "error", "occur", "while", "calling", "z", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRDD", "NUMBER", "runJob", "NUMBER", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "SparkException", "Job", "abort", "due", "to", "stage", "failure", "Task", "NUMBER", "in", "stage", "NUMBER", "fail", "NUMBER", "times", "most", "recent", "failure", "Lost", "task", "NUMBER", "in", "stage", "NUMBER", "TID", "NUMBER", "hadoop", "NUMBER", "dbszod", "NUMBER", "aws", "NUMBER", "db", "NUMBER", "de", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonException", "Traceback", "most", "recent", "call", "last", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "main", "process", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "process", "serializer", "NUMBER", "dump_stream", "func", "split_index", "iterator", "outfile", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "serializers", "NUMBER", "py", "line", "NUMBER", "in", "dump_stream", "vs", "list", "itertools", "NUMBER", "islice", "iterator", "batch", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "rdd", "NUMBER", "py", "line", "NUMBER", "in", "takeUpToNumLeft", "File", "home", "centos", "fun", "function", "spark", "parrallel", "read", "from", "s", "NUMBER", "tick", "NUMBER", "py", "line", "NUMBER", "in", "distributedJsonRead", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "operation_name", "operation_model", "NUMBER", "name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "handler", "return", "self", "NUMBER", "sign", "operation_name", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "auth", "NUMBER", "add_auth", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "raise", "NoCredentialsError", "NoCredentialsError", "Unable", "to", "locate", "credentials", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "read", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "TAG", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRDD", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "computeOrReadCheckpoint", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "iterator", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "ResultTask", "NUMBER", "runTask", "ResultTask", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "Task", "NUMBER", "run", "Task", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "executor", "NUMBER", "Executor", "TaskRunner", "NUMBER", "run", "Executor", "NUMBER", "scala", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "NUMBER", "runWorker", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "Worker", "NUMBER", "run", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "lang", "NUMBER", "Thread", "NUMBER", "run", "Thread", "NUMBER", "java", "NUMBER", "Driver", "stacktrace", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGScheduler", "NUMBER", "org", "apache", "spark", "scheduler", "DAGScheduler", "failJobAndIndependentStages", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGScheduler", "anonfun", "abortStage", "NUMBER", "apply", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGScheduler", "anonfun", "abortStage", "NUMBER", "apply", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "scala", "NUMBER", "collection", "NUMBER", "mutable", "NUMBER", "ResizableArray", "class", "NUMBER", "foreach", "ResizableArray", "NUMBER", "scala", "NUMBER", "at", "scala", "NUMBER", "collection", "NUMBER", "mutable", "NUMBER", "ArrayBuffer", "NUMBER", "foreach", "ArrayBuffer", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGScheduler", "NUMBER", "abortStage", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGScheduler", "anonfun", "handleTaskSetFailed", "NUMBER", "apply", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGScheduler", "anonfun", "handleTaskSetFailed", "NUMBER", "apply", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "scala", "NUMBER", "Option", "NUMBER", "foreach", "Option", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGScheduler", "NUMBER", "handleTaskSetFailed", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGSchedulerEventProcessLoop", "NUMBER", "doOnReceive", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGSchedulerEventProcessLoop", "NUMBER", "onReceive", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGSchedulerEventProcessLoop", "NUMBER", "onReceive", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "util", "NUMBER", "EventLoop", "anon", "NUMBER", "run", "EventLoop", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "DAGScheduler", "NUMBER", "runJob", "DAGScheduler", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "SparkContext", "NUMBER", "runJob", "SparkContext", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "SparkContext", "NUMBER", "runJob", "SparkContext", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "SparkContext", "NUMBER", "runJob", "SparkContext", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRDD", "NUMBER", "runJob", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRDD", "NUMBER", "runJob", "PythonRDD", "NUMBER", "scala", "at", "sun", "NUMBER", "reflect", "NUMBER", "NativeMethodAccessorImpl", "NUMBER", "invoke", "NUMBER", "Native", "Method", "at", "sun", "NUMBER", "reflect", "NUMBER", "NativeMethodAccessorImpl", "NUMBER", "invoke", "NativeMethodAccessorImpl", "NUMBER", "java", "NUMBER", "at", "sun", "NUMBER", "reflect", "NUMBER", "DelegatingMethodAccessorImpl", "NUMBER", "invoke", "DelegatingMethodAccessorImpl", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "lang", "NUMBER", "reflect", "NUMBER", "Method", "NUMBER", "invoke", "Method", "NUMBER", "java", "NUMBER", "at", "py", "NUMBER", "j", "NUMBER", "reflection", "NUMBER", "MethodInvoker", "NUMBER", "invoke", "MethodInvoker", "NUMBER", "java", "NUMBER", "at", "py", "NUMBER", "j", "NUMBER", "reflection", "NUMBER", "ReflectionEngine", "NUMBER", "invoke", "ReflectionEngine", "NUMBER", "java", "NUMBER", "at", "py", "NUMBER", "j", "NUMBER", "Gateway", "NUMBER", "invoke", "Gateway", "NUMBER", "java", "NUMBER", "at", "py", "NUMBER", "j", "NUMBER", "commands", "NUMBER", "AbstractCommand", "NUMBER", "invokeMethod", "AbstractCommand", "NUMBER", "java", "NUMBER", "at", "py", "NUMBER", "j", "NUMBER", "commands", "NUMBER", "CallCommand", "NUMBER", "execute", "CallCommand", "NUMBER", "java", "NUMBER", "at", "py", "NUMBER", "j", "NUMBER", "GatewayConnection", "NUMBER", "run", "GatewayConnection", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "lang", "NUMBER", "Thread", "NUMBER", "run", "Thread", "NUMBER", "java", "NUMBER", "Caused", "by", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonException", "Traceback", "most", "recent", "call", "last", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "main", "process", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "worker", "NUMBER", "py", "line", "NUMBER", "in", "process", "serializer", "NUMBER", "dump_stream", "func", "split_index", "iterator", "outfile", "File", "hadoop", "yarn", "local", "usercache", "centos", "appcache", "application_", "NUMBER", "_", "NUMBER", "container_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "pyspark", "NUMBER", "zip", "pyspark", "serializers", "NUMBER", "py", "line", "NUMBER", "in", "dump_stream", "vs", "list", "itertools", "NUMBER", "islice", "iterator", "batch", "File", "usr", "hdp", "NUMBER", "NUMBER", "spark", "NUMBER", "python", "lib", "pyspark", "NUMBER", "zip", "pyspark", "rdd", "NUMBER", "py", "line", "NUMBER", "in", "takeUpToNumLeft", "File", "home", "centos", "fun", "function", "spark", "parrallel", "read", "from", "s", "NUMBER", "tick", "NUMBER", "py", "line", "NUMBER", "in", "distributedJsonRead", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "operation_name", "operation_model", "NUMBER", "name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "handler", "return", "self", "NUMBER", "sign", "operation_name", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "auth", "NUMBER", "add_auth", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "raise", "NoCredentialsError", "NoCredentialsError", "Unable", "to", "locate", "credentials", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "read", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "anon", "NUMBER", "TAG", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRunner", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "api", "NUMBER", "python", "NUMBER", "PythonRDD", "NUMBER", "compute", "PythonRDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "computeOrReadCheckpoint", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "d", "NUMBER", "RDD", "NUMBER", "iterator", "RDD", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "ResultTask", "NUMBER", "runTask", "ResultTask", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "scheduler", "NUMBER", "Task", "NUMBER", "run", "Task", "NUMBER", "scala", "NUMBER", "at", "org", "NUMBER", "apache", "NUMBER", "spark", "NUMBER", "executor", "NUMBER", "Executor", "TaskRunner", "NUMBER", "run", "Executor", "NUMBER", "scala", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "NUMBER", "runWorker", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "Worker", "NUMBER", "run", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "NUMBER", "NUMBER", "more", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SparkContext", "Invoking", "stop", "from", "shutdown", "hook", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ServerConnector", "Stopped", "ServerConnector", "NUMBER", "d", "NUMBER", "c", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "a", "NUMBER", "e", "NUMBER", "stages", "stage", "kill", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "e", "NUMBER", "api", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "bd", "NUMBER", "d", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "fdb", "NUMBER", "static", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "ce", "NUMBER", "d", "NUMBER", "b", "NUMBER", "executors", "threadDump", "json", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "executors", "threadDump", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "ef", "NUMBER", "a", "NUMBER", "executors", "json", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "b", "NUMBER", "ed", "NUMBER", "executors", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "environment", "json", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "cb", "NUMBER", "environment", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "storage", "rdd", "json", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "b", "NUMBER", "e", "storage", "rdd", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "d", "NUMBER", "e", "NUMBER", "storage", "json", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "e", "NUMBER", "b", "NUMBER", "storage", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "ec", "NUMBER", "ea", "stages", "pool", "json", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "b", "NUMBER", "stages", "pool", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "stages", "stage", "json", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "stages", "stage", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "stages", "json", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "ebbf", "NUMBER", "stages", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "c", "NUMBER", "jobs", "job", "json", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "jobs", "job", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "c", "NUMBER", "jobs", "json", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ContextHandler", "Stopped", "o", "NUMBER", "s", "NUMBER", "j", "NUMBER", "s", "NUMBER", "ServletContextHandler", "NUMBER", "bca", "NUMBER", "cc", "NUMBER", "jobs", "null", "UNAVAILABLE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SparkUI", "Stopped", "Spark", "web", "UI", "at", "LINK", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnClientSchedulerBackend", "Interrupting", "monitor", "thread", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnClientSchedulerBackend", "Shutting", "down", "all", "executors", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnSchedulerBackend", "YarnDriverEndpoint", "Asking", "each", "executor", "to", "shut", "down", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SchedulerExtensionServices", "Stopping", "SchedulerExtensionServices", "serviceOption", "None", "services", "List", "start", "false", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "YarnClientSchedulerBackend", "Stopped", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "MapOutputTrackerMasterEndpoint", "MapOutputTrackerMasterEndpoint", "stopped", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "MemoryStore", "MemoryStore", "cleared", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManager", "BlockManager", "stopped", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "BlockManagerMaster", "BlockManagerMaster", "stopped", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "OutputCommitCoordinator", "OutputCommitCoordinatorEndpoint", "OutputCommitCoordinator", "stopped", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "SparkContext", "Successfully", "stopped", "SparkContext", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ShutdownHookManager", "Shutdown", "hook", "call", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ShutdownHookManager", "Deleting", "directory", "tmp", "spark", "bfa", "NUMBER", "d", "dae", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "cd", "pyspark", "NUMBER", "dec", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "ab", "b", "NUMBER", "e", "NUMBER", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "ShutdownHookManager", "Deleting", "directory", "tmp", "spark", "bfa", "NUMBER", "d", "dae", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "cd", "JordonPhillips", "Its", "rather", "messy", "but", "I", "be", "initiating", "a", "new", "instance", "of", "the", "class", "before", "parallel", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "my_bucket", "s", "NUMBER", "Bucket", "time", "waits", "for", "no", "man", "for", "object", "in", "my_bucket", "NUMBER", "objects", "NUMBER", "filter", "Prefix", "NUMBER", "NUMBER", "s", "NUMBER", "_list", "NUMBER", "append", "object", "NUMBER", "key", "in", "my", "parralleized", "function", "def", "distributedJsonRead", "s", "NUMBER", "Key", "s", "NUMBER", "obj", "boto", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "Object", "bucket_name", "time", "waits", "for", "no", "man", "key", "s", "NUMBER", "Key", "contents", "s", "NUMBER", "obj", "NUMBER", "get", "Body", "NUMBER", "read", "NUMBER", "decode", "Cheers", "Andrew", "I", "had", "the", "same", "issue", "and", "I", "ve", "tried", "session", "as", "well", "and", "it", "doesn", "t", "work", "NUMBER", "My", "code", "be", "like", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "client", "session", "NUMBER", "client", "s", "NUMBER", "region_name", "ap", "southeast", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "Users", "minddriven", "workspace", "ww", "data", "one", "one", "spark_jobs", "parallel_cp", "NUMBER", "parallel_cp", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "client", "session", "NUMBER", "client", "s", "NUMBER", "region_name", "ap", "southeast", "NUMBER", "File", "Users", "minddriven", "workspace", "ww", "data", "one", "one", "spark_jobs", "parallel_cp", "deps", "NUMBER", "zip", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "client", "File", "Users", "minddriven", "workspace", "ww", "data", "one", "one", "spark_jobs", "parallel_cp", "deps", "NUMBER", "zip", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "create_client", "File", "Users", "minddriven", "workspace", "ww", "data", "one", "one", "spark_jobs", "parallel_cp", "deps", "NUMBER", "zip", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "get_component", "File", "Users", "minddriven", "workspace", "ww", "data", "one", "one", "spark_jobs", "parallel_cp", "deps", "NUMBER", "zip", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "get_component", "File", "Users", "minddriven", "workspace", "ww", "data", "one", "one", "spark_jobs", "parallel_cp", "deps", "NUMBER", "zip", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "create_default_resolver", "File", "Users", "minddriven", "workspace", "ww", "data", "one", "one", "spark_jobs", "parallel_cp", "deps", "NUMBER", "zip", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "_wrapper", "File", "Users", "minddriven", "workspace", "ww", "data", "one", "one", "spark_jobs", "parallel_cp", "deps", "NUMBER", "zip", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "load_data", "botocore", "NUMBER", "exception", "NUMBER", "DataNotFoundError", "Unable", "to", "load", "data", "for", "endpoints", "ttangww", "your", "issue", "appears", "to", "be", "something", "else", "in", "your", "case", "it", "be", "unable", "to", "find", "the", "data", "file", "that", "should", "be", "bundled", "with", "botocore", "NUMBER", "I", "m", "closing", "out", "this", "issue", "but", "feel", "free", "to", "open", "another", "if", "this", "persists", "NUMBER", "Just", "wondering", "whether", "this", "be", "on", "the", "roadmap", "or", "whether", "you", "would", "accept", "a", "pull", "request", "if", "someone", "wanted", "to", "write", "a", "resource", "based", "frontend", "to", "RDS", "that", "behaves", "similarly", "to", "the", "one", "for", "EC", "NUMBER", "I", "ask", "because", "I", "have", "a", "bunch", "of", "separate", "code", "for", "reviewing", "metadata", "of", "EC", "NUMBER", "and", "RDS", "instances", "and", "an", "RDS", "resource", "type", "would", "mean", "I", "could", "just", "use", "the", "EC", "NUMBER", "resource", "code", "for", "most", "of", "it", "NUMBER", "Function", "get_queue_url", "in", "SQS", "LINK", "SQS", "NUMBER", "Client", "NUMBER", "get_queue_url", "be", "not", "work", "correctly", "NUMBER", "As", "an", "example", "when", "I", "request", "the", "URL", "for", "my", "SQS", "Queue", "MyQueue", "this", "function", "returns", "LINK", "east", "NUMBER", "queue", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "MyQueue", "but", "the", "correct", "one", "be", "LINK", "east", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "MyQueue", "The", "value", "returned", "by", "the", "boto", "NUMBER", "function", "be", "miss", "the", "sqs", "at", "the", "beginning", "of", "the", "URL", "NUMBER", "I", "created", "AWS", "Support", "ticket", "NUMBER", "for", "this", "too", "NUMBER", "The", "CLI", "boto", "still", "support", "python", "NUMBER", "which", "has", "a", "bug", "in", "its", "SSL", "handle", "that", "will", "cause", "a", "cert", "validation", "error", "if", "we", "try", "to", "use", "the", "url", "that", "starts", "with", "sqs", "NUMBER", "So", "until", "we", "can", "drop", "support", "for", "NUMBER", "we", "be", "stuck", "use", "the", "legacy", "urls", "for", "SQS", "the", "url", "still", "should", "work", "fine", "though", "NUMBER", "If", "you", "want", "more", "information", "about", "the", "bug", "LINK", "Hi", "I", "ve", "get", "some", "code", "that", "do", "def", "_domains", "_db", "boto", "NUMBER", "client", "sdb", "domains", "response", "_db", "NUMBER", "list_domains", "while", "NextToken", "in", "response", "domains", "NUMBER", "extend", "response", "DomainNames", "response", "_db", "NUMBER", "list_domains", "NextToken", "response", "NextToken", "domains", "NUMBER", "extend", "response", "DomainNames", "return", "domains", "NUMBER", "but", "after", "get", "KeyError", "DomainNames", "I", "printed", "out", "response", "and", "was", "surprised", "to", "find", "it", "was", "ResponseMetadata", "RetryAttempts", "NUMBER", "HTTPStatusCode", "NUMBER", "BoxUsage", "NUMBER", "RequestId", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "c", "NUMBER", "NUMBER", "fbb", "b", "NUMBER", "ea", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "HTTPHeaders", "transfer", "encoding", "chunked", "vary", "Accept", "Encoding", "server", "Amazon", "SimpleDB", "connection", "keep", "alive", "date", "Mon", "NUMBER", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "type", "text", "xml", "NUMBER", "any", "idea", "why", "that", "might", "be", "The", "docs", "LINK", "SimpleDB", "NUMBER", "Client", "NUMBER", "list_domains", "don", "t", "say", "anything", "about", "a", "response", "like", "that", "NUMBER", "Honestly", "I", "rewrote", "it", "to", "use", "DynamoDB", "which", "had", "no", "such", "unwelcome", "surprises", "NUMBER", "LINK", "simplified", "serverless", "application", "deplyoment", "and", "management", "This", "seems", "like", "a", "long", "process", "especially", "if", "you", "have", "multiple", "Lambda", "function", "you", "would", "have", "to", "go", "through", "steps", "NUMBER", "to", "NUMBER", "for", "each", "function", "NUMBER", "Luckily", "the", "new", "Package", "and", "Deploy", "commands", "from", "CloudFormation", "take", "care", "of", "all", "five", "steps", "for", "you", "I", "don", "t", "see", "these", "methods", "in", "CloudFormation", "boto", "NUMBER", "methods", "The", "commands", "you", "be", "referencing", "were", "write", "as", "customizations", "for", "the", "cli", "specifically", "because", "it", "has", "special", "usage", "cases", "the", "SDKs", "don", "t", "NUMBER", "If", "you", "would", "like", "to", "see", "this", "add", "as", "a", "command", "to", "the", "service", "itself", "you", "can", "request", "that", "directly", "from", "the", "service", "team", "LINK", "NUMBER", "I", "use", "to", "run", "my", "flask", "service", "under", "python", "NUMBER", "but", "I", "upgrade", "to", "python", "NUMBER", "and", "now", "I", "get", "this", "new", "error", "that", "was", "never", "seen", "under", "python", "NUMBER", "Line", "NUMBER", "LINK", "logger", "NUMBER", "info", "Calling", "s", "s", "with", "r", "service_name", "operation_name", "params", "The", "original", "exception", "looks", "to", "happen", "when", "rarely", "a", "dynamodb", "put_item", "write", "fail", "BlockingIOError", "Errno", "NUMBER", "write", "could", "not", "complete", "without", "blocking", "These", "types", "of", "error", "coincide", "when", "I", "write", "a", "large", "amount", "of", "data", "for", "a", "key", "in", "my", "database", "NUMBER", "I", "think", "this", "be", "then", "caught", "on", "line", "NUMBER", "of", "action", "NUMBER", "py", "and", "the", "logger", "NUMBER", "info", "format", "be", "goofing", "up", "i", "NUMBER", "e", "NUMBER", "the", "only", "time", "I", "see", "Logging", "error", "be", "when", "I", "have", "format", "of", "the", "parameters", "to", "logger", "NUMBER", "info", "wrong", "NUMBER", "I", "see", "this", "bug", "in", "NUMBER", "places", "of", "the", "action", "NUMBER", "py", "code", "NUMBER", "Line", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "and", "it", "would", "probably", "also", "happen", "at", "lines", "NUMBER", "NUMBER", "Partial", "stack", "Nov", "NUMBER", "NUMBER", "Logging", "error", "Traceback", "most", "recent", "call", "last", "File", "opt", "services", "myflask", "service", "python_install_dir", "lib", "python", "NUMBER", "logging", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "emit", "n", "stream", "NUMBER", "write", "msg", "OSError", "Errno", "NUMBER", "Message", "too", "long", "Call", "stack", "NUMBER", "NUMBER", "NUMBER", "File", "opt", "services", "myflask", "service", "python_install_dir", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "operation_name", "params", "Unable", "to", "print", "the", "message", "and", "argument", "possible", "format", "error", "NUMBER", "Use", "the", "traceback", "above", "to", "help", "find", "the", "error", "NUMBER", "Full", "stack", "Nov", "NUMBER", "NUMBER", "msg", "Traceback", "most", "recent", "call", "last", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "Logging", "error", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "python_install_dir", "lib", "python", "NUMBER", "logging", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "emit", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "stream", "NUMBER", "write", "self", "NUMBER", "terminator", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "BlockingIOError", "Errno", "NUMBER", "write", "could", "not", "complete", "without", "blocking", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "Call", "stack", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask", "service", "lib", "python", "NUMBER", "site", "package", "flask", "app", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "return", "self", "NUMBER", "wsgi_app", "environ", "start_response", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask", "service", "lib", "python", "NUMBER", "site", "package", "flask", "app", "NUMBER", "py", "line", "NUMBER", "in", "wsgi_app", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "response", "self", "NUMBER", "full_dispatch_request", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask", "service", "lib", "python", "NUMBER", "site", "package", "flask", "app", "NUMBER", "py", "line", "NUMBER", "in", "full_dispatch_request", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "rv", "self", "NUMBER", "dispatch_request", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask", "service", "lib", "python", "NUMBER", "site", "package", "flask", "app", "NUMBER", "py", "line", "NUMBER", "in", "dispatch_request", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "return", "self", "NUMBER", "view_functions", "rule", "NUMBER", "endpoint", "req", "NUMBER", "view_args", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask", "service", "lib", "python", "NUMBER", "site", "package", "flask_transmute", "flask", "method_wrapper", "NUMBER", "py", "line", "NUMBER", "in", "wrapper_func", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "result", "tf", "NUMBER", "raw_func", "args", "kwargs", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask_service", "routes", "event_loop", "NUMBER", "py", "line", "NUMBER", "in", "get_manage_queues", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "app", "NUMBER", "data", "NUMBER", "queue_mgr", "NUMBER", "process_queues", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask_service", "lib", "queue_manager", "NUMBER", "py", "line", "NUMBER", "in", "process_queues", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "queue_size_reduced", "self", "NUMBER", "schedule_to_aws", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask_service", "lib", "queue_manager", "NUMBER", "py", "line", "NUMBER", "in", "schedule_to_aws", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "if", "not", "self", "NUMBER", "db_queue", "NUMBER", "delete_queue_item", "top_item", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask_service", "lib", "db_manager", "NUMBER", "py", "line", "NUMBER", "in", "delete_queue_item", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "return", "self", "NUMBER", "write_queue", "queue_dic", "attempts", "attempts", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask_service", "lib", "db_manager", "NUMBER", "py", "line", "NUMBER", "in", "write_queue", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "return", "self", "NUMBER", "write_item", "SINGLE_RECORD_STR", "data_val", "attempts", "attempts", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask_service", "lib", "db_manager", "NUMBER", "py", "line", "NUMBER", "in", "write_item", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "self", "NUMBER", "_dbtype_str", "key_val", "data_val", "attempts", "attempts", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask_service", "lib", "db_manager", "NUMBER", "py", "line", "NUMBER", "in", "write_item", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "response", "self", "NUMBER", "_table", "NUMBER", "put_item", "Item", "self", "NUMBER", "_key_hash_name", "key_val", "self", "NUMBER", "_data_name", "data_val", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask", "service", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "response", "action", "self", "args", "kwargs", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "File", "opt", "services", "myflask", "service", "myflask", "service", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "operation_name", "params", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "Message", "Calling", "s", "s", "with", "r", "n", "app", "error", "a", "NUMBER", "myflask", "service", "env", "monitor", "fmt", "ae", "NUMBER", "hst", "host", "NUMBER", "tsi", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "I", "figured", "out", "a", "work", "around", "NUMBER", "The", "original", "boto", "NUMBER", "develop", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "logging", "to", "much", "issue", "still", "exists", "NUMBER", "I", "cap", "the", "message", "portion", "to", "NUMBER", "NUMBER", "bytes", "and", "then", "boto", "NUMBER", "no", "longer", "logs", "something", "too", "long", "NUMBER", "Example", "of", "solution", "out_hdlr", "logging", "NUMBER", "StreamHandler", "sys", "NUMBER", "dout", "Cap", "message", "size", "so", "boto", "NUMBER", "doesn", "t", "throw", "a", "secondary", "OSError", "Errno", "NUMBER", "Message", "too", "long", "stack", "which", "be", "originally", "triggered", "by", "a", "large", "dynamodb", "write", "that", "fail", "NUMBER", "formatter", "logging", "NUMBER", "Formatter", "fmt", "asctime", "s", "name", "s", "levelname", "s", "message", "NUMBER", "s", "out_hdlr", "NUMBER", "setFormatter", "formatter", "logger", "logging", "NUMBER", "getLogger", "logger", "NUMBER", "addHandler", "out_hdlr", "I", "too", "be", "having", "trouble", "NUMBER", "characterizing", "this", "problem", "NUMBER", "When", "I", "try", "a", "manual", "setup", "in", "python", "NUMBER", "command", "line", "interpreter", "and", "try", "logging", "NUMBER", "info", "of", "NUMBER", "million", "character", "message", "it", "doesn", "t", "have", "a", "problem", "NUMBER", "Now", "there", "be", "a", "few", "differences", "with", "my", "manual", "try", "and", "the", "error", "case", "in", "boto", "NUMBER", "NUMBER", "Not", "run", "inside", "Flask", "NUMBER", "NUMBER", "Not", "run", "with", "our", "logging", "redirector", "that", "writes", "to", "a", "queue", "NUMBER", "Our", "uwsgi", "service", "redirects", "to", "our", "own", "logging", "service", "that", "writes", "to", "RabbitMQ", "NUMBER", "We", "sometimes", "saw", "the", "BlockingIOError", "Errno", "NUMBER", "write", "could", "not", "complete", "without", "blocking", "message", "so", "I", "suspect", "our", "logging", "redirector", "caps", "at", "NUMBER", "K", "and", "sends", "back", "an", "error", "and", "then", "we", "get", "OSError", "Errno", "NUMBER", "Message", "too", "long", "come", "back", "to", "the", "boto", "NUMBER", "python", "process", "NUMBER", "Overall", "other", "customers", "might", "not", "encounter", "this", "problem", "because", "they", "probably", "log", "differently", "NUMBER", "Maybe", "the", "best", "that", "could", "be", "do", "be", "to", "have", "those", "NUMBER", "locations", "inside", "action", "NUMBER", "py", "to", "have", "some", "reasonable", "but", "large", "capping", "of", "the", "log", "message", "because", "other", "customers", "may", "run", "into", "this", "in", "the", "future", "NUMBER", "INFO", "Our", "code", "runs", "inside", "of", "Flask", "uwsgi", "fronted", "by", "apache", "NUMBER", "We", "use", "our", "own", "JSONLoggingFormatter", "object", "for", "format", "our", "log", "mesages", "but", "it", "just", "do", "a", "json", "NUMBER", "dumps", "class", "JSONLoggingFormatter", "logging", "NUMBER", "Formatter", "MAP_PYTHON_LEVEL_TO_LVL", "logging", "NUMBER", "CRITICAL", "FATAL", "logging", "NUMBER", "ERROR", "ERROR", "logging", "NUMBER", "WARNING", "WARN", "logging", "NUMBER", "INFO", "INFO", "logging", "NUMBER", "DEBUG", "DEBUG", "def", "__init__", "self", "args", "kwargs", "logging", "NUMBER", "Formatter", "NUMBER", "__init__", "self", "args", "kwargs", "self", "NUMBER", "_fqdn", "socket", "NUMBER", "getfqdn", "def", "format", "self", "record", "field", "field", "NUMBER", "update", "hst", "self", "NUMBER", "_fqdn", "lvl", "self", "NUMBER", "MAP_PYTHON_LEVEL_TO_LVL", "NUMBER", "get", "record", "NUMBER", "levelno", "Use", "the", "base", "logging", "NUMBER", "Formatter", "in", "order", "to", "format", "any", "exception", "properly", "NUMBER", "msg", "logging", "NUMBER", "Formatter", "NUMBER", "format", "self", "record", "pid", "record", "NUMBER", "process", "tid", "record", "NUMBER", "read", "Python", "do", "not", "include", "the", "ISO", "NUMBER", "Z", "suffix", "when", "format", "a", "naive", "datetime", "so", "explicitly", "include", "it", "NUMBER", "tsi", "datetime", "NUMBER", "datetime", "NUMBER", "utcfromtimestamp", "record", "NUMBER", "created", "NUMBER", "isoformat", "Z", "return", "json", "NUMBER", "dumps", "field", "separators", "out_hdlr", "logging", "NUMBER", "StreamHandler", "sys", "NUMBER", "dout", "out_hdlr", "NUMBER", "setFormatter", "JSONLoggingFormatter", "out_hdlr", "NUMBER", "setLevel", "logging", "NUMBER", "INFO", "logger", "logging", "NUMBER", "getLogger", "logger", "NUMBER", "addHandler", "out_hdlr", "logger", "NUMBER", "setLevel", "logging", "NUMBER", "INFO", "Somehow", "when", "certain", "exception", "be", "throw", "like", "fail", "to", "write", "large", "key", "val", "to", "DynamoDB", "then", "with", "this", "logger", "setup", "then", "the", "boto", "NUMBER", "blob", "develop", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "ends", "up", "logging", "something", "too", "large", "NUMBER", "Line", "NUMBER", "logger", "NUMBER", "info", "Calling", "s", "s", "with", "r", "service_name", "operation_name", "params", "Hi", "NUMBER", "I", "be", "trying", "to", "set", "up", "stage", "setting", "for", "specific", "method", "in", "my", "gateway", "use", "boto", "NUMBER", "client", "NUMBER", "I", "be", "use", "boto", "NUMBER", "version", "NUMBER", "Here", "be", "my", "try", "code", "client", "boto", "NUMBER", "client", "apigateway", "NUMBER", "some", "code", "NUMBER", "response", "client", "NUMBER", "create_deployment", "restApiId", "api", "id", "stageName", "stage_name", "description", "s", "deployment", "v", "s", "stage_name", "project_version", "response", "client", "NUMBER", "update_stage", "restApiId", "api", "id", "stageName", "stage_name", "patchOperations", "op", "replace", "path", "logging", "loglevel", "value", "config", "NUMBER", "get", "logging", "NUMBER", "Level", "op", "replace", "path", "logging", "dataTrace", "value", "config", "NUMBER", "get", "logging", "NUMBER", "LogFullData", "op", "replace", "path", "metrics", "enable", "value", "config", "NUMBER", "get", "logging", "NUMBER", "EnableMetrics", "op", "replace", "path", "throttling", "burstLimit", "value", "NUMBER", "op", "replace", "path", "throttling", "rateLimit", "value", "NUMBER", "op", "replace", "path", "image", "POST", "throttling", "rateLimit", "value", "NUMBER", "NUMBER", "some", "code", "NUMBER", "I", "be", "get", "correct", "response", "with", "all", "values", "I", "have", "set", "but", "NUMBER", "NUMBER", "be", "statement", "has", "no", "effect", "for", "image", "POST", "throttling", "rateLimit", "NUMBER", "Values", "be", "still", "inherited", "from", "root", "stage", "config", "NUMBER", "Moreover", "when", "I", "try", "to", "manually", "set", "up", "this", "value", "by", "AWS", "console", "this", "doesn", "t", "work", "also", "NUMBER", "But", "I", "find", "some", "info", "in", "AWS", "doc", "that", "this", "dont", "work", "by", "console", "NUMBER", "My", "throttling", "limits", "do", "not", "exceed", "account", "limits", "NUMBER", "I", "mean", "that", "I", "can", "set", "up", "throttling", "level", "and", "other", "settings", "in", "console", "go", "to", "API", "Gateway", "your", "API", "stage", "your", "deployed", "stage", "eg", "DEV", "NUMBER", "And", "here", "you", "have", "root", "level", "settings", "NUMBER", "Here", "all", "be", "fine", "NUMBER", "But", "when", "you", "go", "deeper", "to", "specific", "setting", "of", "any", "method", "expand", "your", "deployed", "stage", "eg", "DEV", "chose", "some", "method", "of", "your", "API", "check", "override", "method", "settings", "and", "you", "try", "to", "override", "it", "then", "this", "dont", "works", "from", "boto", "client", "You", "cannot", "configure", "your", "stage", "at", "method", "level", "only", "on", "root", "level", "I", "m", "not", "sure", "if", "this", "be", "boto", "NUMBER", "bug", "or", "AWS", "itself", "NUMBER", "According", "to", "the", "docs", "on", "the", "delete_application_version", "function", "for", "elasticbeanstalk", "link", "LINK", "ElasticBeanstalk", "NUMBER", "Clientdelete_application_version", "it", "says", "you", "shouldn", "t", "be", "able", "to", "delete", "an", "application", "version", "that", "be", "associated", "with", "a", "run", "environment", "this", "be", "not", "actually", "the", "case", "NUMBER", "I", "was", "able", "to", "delete", "version", "associated", "with", "run", "environments", "multiple", "times", "with", "both", "DeleteResourceBundle", "set", "to", "True", "and", "False", "NUMBER", "Python", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "It", "will", "be", "great", "if", "we", "could", "actually", "read", "the", "s", "NUMBER", "file", "streamed", "line", "by", "line", "and", "support", "the", "python", "file", "iterator", "protocol", "I", "have", "a", "function", "that", "iterate", "over", "objects", "in", "a", "S", "NUMBER", "bucket", "use", "bucket", "s", "filter", "method", "object", "NUMBER", "key", "object", "NUMBER", "size", "object", "NUMBER", "last_modified", "for", "object", "in", "bucket", "NUMBER", "objects", "NUMBER", "filter", "Prefix", "prefix", "but", "from", "time", "o", "time", "I", "receive", "this", "error", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "collection", "NUMBER", "py", "NUMBER", "NUMBER", "__iter__", "for", "page", "in", "self", "NUMBER", "pages", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "collection", "NUMBER", "py", "NUMBER", "NUMBER", "pages", "for", "page", "in", "pages", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "paginate", "NUMBER", "py", "NUMBER", "NUMBER", "__iter__", "response", "self", "NUMBER", "_make_request", "current_kwargs", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "paginate", "NUMBER", "py", "NUMBER", "NUMBER", "_make_request", "return", "self", "NUMBER", "_method", "current_kwargs", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "NUMBER", "NUMBER", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "NUMBER", "NUMBER", "_make_api_call", "operation_model", "request_dict", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "NUMBER", "NUMBER", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "NUMBER", "NUMBER", "_send_request", "request", "operation_model", "attempts", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "NUMBER", "NUMBER", "_get_response", "response_dict", "operation_model", "NUMBER", "output_shape", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "NUMBER", "NUMBER", "parse", "parsed", "self", "NUMBER", "_do_parse", "response", "shape", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "NUMBER", "NUMBER", "_do_parse", "self", "NUMBER", "_parse_payload", "response", "shape", "member_shapes", "final_parsed", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "NUMBER", "NUMBER", "_parse_payload", "original_parsed", "self", "NUMBER", "_initial_body_parse", "response", "body", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "NUMBER", "NUMBER", "_initial_body_parse", "return", "self", "NUMBER", "_parse_xml_string_to_dom", "xml_string", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "NUMBER", "NUMBER", "_parse_xml_string_to_dom", "invalid", "XML", "received", "n", "s", "e", "xml_string", "botocore", "NUMBER", "parsers", "NUMBER", "ResponseParserError", "Unable", "to", "parse", "response", "unclosed", "token", "line", "NUMBER", "column", "NUMBER", "invalid", "XML", "received", "b", "TAG", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "key", "and", "signing", "method", "Here", "be", "the", "error", "details", "import", "boto", "import", "boto", "NUMBER", "s", "NUMBER", "_conn", "boto", "NUMBER", "s", "NUMBER", "connect_to_region", "eu", "central", "NUMBER", "aws_access_key_id", "aws_secret_access_key", "buckt", "s", "NUMBER", "_conn", "NUMBER", "get_bucket", "phoenix", "NUMBER", "NUMBER", "mpuid", "buckt", "NUMBER", "initiate_multipart_upload", "NUMBER", "NUMBER", "data_", "NUMBER", "C", "NUMBER", "a", "NUMBER", "efe", "NUMBER", "NUMBER", "e", "NUMBER", "b", "efb", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "FULL", "amar", "mpuid", "NUMBER", "copy_part_from_key", "phoenix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "data_", "NUMBER", "C", "NUMBER", "a", "NUMBER", "efe", "NUMBER", "NUMBER", "e", "NUMBER", "b", "efb", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "FULL", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "py", "NUMBER", "egg", "boto", "s", "NUMBER", "multipart", "NUMBER", "py", "line", "NUMBER", "in", "copy_part_from_key", "query_args", "query_args", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "py", "NUMBER", "egg", "boto", "s", "NUMBER", "bucket", "NUMBER", "py", "line", "NUMBER", "in", "copy_key", "response", "NUMBER", "reason", "body", "boto", "NUMBER", "exception", "NUMBER", "S", "NUMBER", "ResponseError", "S", "NUMBER", "ResponseError", "NUMBER", "Forbidden", "TAG", "TAG", "SignatureDoesNotMatch", "TAG", "TAG", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "key", "and", "signing", "method", "NUMBER", "TAG", "TAG", "ASIAIZZPTQJ", "NUMBER", "AWY", "NUMBER", "WG", "NUMBER", "Q", "TAG", "TAG", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "eu", "central", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "bb", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "d", "NUMBER", "d", "NUMBER", "eab", "NUMBER", "bea", "NUMBER", "b", "NUMBER", "ffe", "NUMBER", "efde", "NUMBER", "TAG", "TAG", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "bf", "NUMBER", "fcaaf", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "da", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "adata_", "NUMBER", "C", "NUMBER", "a", "NUMBER", "efe", "NUMBER", "NUMBER", "e", "NUMBER", "b", "efb", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "FULL", "amar", "partNumber", "NUMBER", "amp", "uploadId", "PMd", "NUMBER", "jeac", "NUMBER", "vLRuC", "NUMBER", "qf", "NUMBER", "CEBckNBqXGWdaEL", "NUMBER", "a", "NUMBER", "bCw", "NUMBER", "Zet", "NUMBER", "K", "NUMBER", "IInwYmDEEnkU", "NUMBER", "xHSnlucJLeis", "NUMBER", "yMg", "NUMBER", "M", "NUMBER", "NoyOdwAVU", "NUMBER", "VMYcve", "NUMBER", "Sv", "NUMBER", "ExJ", "NUMBER", "Yh", "NUMBER", "pc", "NUMBER", "UJrxli", "NUMBER", "O", "NUMBER", "p", "NUMBER", "PqxH", "NUMBER", "I_pcIGttaybTT", "NUMBER", "ul", "NUMBER", "nwc", "NUMBER", "DOUSIpKO", "NUMBER", "TlMosfNI", "host", "phoenix", "NUMBER", "NUMBER", "s", "NUMBER", "eu", "central", "NUMBER", "amazonaws", "NUMBER", "com", "user", "agent", "Boto", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "el", "NUMBER", "x", "NUMBER", "_", "NUMBER", "x", "amz", "content", "sha", "NUMBER", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "afbf", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "b", "NUMBER", "x", "amz", "copy", "source", "phoenix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "data_", "NUMBER", "C", "NUMBER", "a", "NUMBER", "efe", "NUMBER", "NUMBER", "e", "NUMBER", "b", "efb", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "FULL", "NUMBER", "x", "amz", "copy", "source", "range", "bytes", "NUMBER", "NUMBER", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "x", "amz", "security", "token", "FQoDYXdzEFYaDOR", "NUMBER", "x", "NUMBER", "eMX", "NUMBER", "hqwyK", "NUMBER", "A", "NUMBER", "FKe", "NUMBER", "SX", "NUMBER", "gN", "NUMBER", "bpcbRJPuJxLZC", "zP", "NUMBER", "TnzqoXA", "NUMBER", "lPvdKhjWpJI", "NUMBER", "v", "NUMBER", "UZ", "NUMBER", "Y", "IcvbflIQXq", "NUMBER", "R", "NUMBER", "kC", "NUMBER", "QHJZHLx", "fsDC", "NUMBER", "lPYLuDPA", "NUMBER", "d", "NUMBER", "V", "cc", "NUMBER", "cn", "NUMBER", "pjD", "NUMBER", "DQpy", "NUMBER", "RKGMc", "NUMBER", "GJljZR", "ijOb", "NUMBER", "m", "NUMBER", "e", "NUMBER", "bxv", "NUMBER", "c", "NUMBER", "kN", "NUMBER", "Kv", "Gs", "NUMBER", "UBBa", "NUMBER", "EoGeg", "NUMBER", "NHN", "NUMBER", "neNN", "NUMBER", "g", "NUMBER", "u", "NUMBER", "Ad", "NUMBER", "uouPDV", "NUMBER", "Wvuiijbfp", "NUMBER", "ZIaT", "NUMBER", "LZFbq", "NUMBER", "mE", "NUMBER", "ZXiBjQDSDTDcLpO", "ek", "NUMBER", "VCck", "NUMBER", "bpzquT", "jDc", "NUMBER", "Jzrm", "NUMBER", "rS", "NUMBER", "Giqs", "xWLiATa", "NUMBER", "VqxVXzvbQ", "NUMBER", "Pu", "NUMBER", "Tv", "NUMBER", "kfCU", "NUMBER", "uc", "NUMBER", "DWMrBMhejj", "NUMBER", "s", "HKLU", "NUMBER", "b", "NUMBER", "mcQ", "NUMBER", "T", "FcieYALPfM", "NUMBER", "qPf", "NUMBER", "ZZVsjXWkCzkrMu", "NUMBER", "qOAblqpVCG", "NUMBER", "A", "NUMBER", "snZn", "NUMBER", "Ke", "NUMBER", "T", "NUMBER", "JF", "NUMBER", "ONGKkr", "NUMBER", "jSQ", "NUMBER", "Tv", "NUMBER", "C", "NUMBER", "j", "NUMBER", "HuQOIcsuRKDLkBLgffOAyIzDzY", "NUMBER", "xBQvBIABTk", "NUMBER", "ENcLkgYzNLKsWLFuI", "NUMBER", "Pry", "NUMBER", "qcXVCSzXruyEE", "NUMBER", "neqZp", "NUMBER", "ohAvVh", "NUMBER", "WPZOtxmPOTbGgqRn", "NUMBER", "xEgb", "NUMBER", "yODAyz", "NUMBER", "KOemRvfyGgxBGmvvSnuLrr", "NUMBER", "vY", "NUMBER", "Inm", "NUMBER", "Q", "NUMBER", "eT", "NUMBER", "d", "NUMBER", "xmzflbLG", "NUMBER", "cdtBejyKmgttcOpuiEo", "NUMBER", "f", "NUMBER", "PwQU", "host", "user", "agent", "x", "amz", "content", "sha", "NUMBER", "x", "amz", "copy", "source", "x", "amz", "copy", "source", "range", "x", "amz", "date", "x", "amz", "security", "token", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "afbf", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "b", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "b", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "aq", "NUMBER", "lLYag", "NUMBER", "EJC", "liFWejbNHWgFPZUDMLG", "NUMBER", "bBP", "NUMBER", "xM", "NUMBER", "u", "NUMBER", "HlsO", "NUMBER", "alkoEu", "NUMBER", "r", "NUMBER", "xIcOih", "YPcGFeCVJ", "NUMBER", "TAG", "TAG", "stealthycoin", "Thanks", "For", "reply", "but", "if", "I", "use", "boto", "NUMBER", "then", "I", "be", "get", "error", "as", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ERROR", "CloudDRAgent", "Failed", "multipart", "operation", "for", "NUMBER", "NUMBER", "data_", "NUMBER", "C", "NUMBER", "f", "b", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "cbb", "NUMBER", "cf", "NUMBER", "a", "FULL", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Error", "TAG", "cannot", "concatenate", "str", "and", "NoneType", "objects", "NUMBER", "Traceback", "Traceback", "most", "recent", "call", "last", "File", "root", "client", "trunk", "src", "agents", "clouddragent", "cloudDrAgent", "NUMBER", "py", "line", "NUMBER", "in", "_full_clouddr_multipart_upload", "self", "NUMBER", "_multipart_upload", "vmdk_name", "File", "root", "client", "trunk", "src", "agents", "clouddragent", "cloudDrAgent", "NUMBER", "py", "line", "NUMBER", "in", "_multipart_upload", "self", "NUMBER", "customer_awslib", "NUMBER", "merge_chunks_using_multipart_upload", "target_key_name", "source_key_path", "File", "root", "client", "trunk", "src", "roboClientLib", "boto", "awsDRLib", "NUMBER", "py", "line", "NUMBER", "in", "merge_chunks_using_multipart_upload", "self", "NUMBER", "merge_chunks_using_multipart_upload_boto", "NUMBER", "self", "NUMBER", "source_bucket", "target_key_name", "s", "NUMBER", "_key_path", "scheduler_queue", "total_chunks", "callback", "refresh_s", "NUMBER", "_conn", "File", "root", "client", "trunk", "src", "roboClientLib", "boto", "awsDRLib", "NUMBER", "py", "line", "NUMBER", "in", "merge_chunks_using_multipart_upload_boto", "NUMBER", "mult_upld", "s", "NUMBER", "client", "NUMBER", "create_multipart_upload", "Bucket", "bucket_name", "Key", "target_key_name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "operation_name", "operation_model", "NUMBER", "name", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_sign_request", "self", "NUMBER", "_request_signer", "NUMBER", "sign", "operation_name", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "signer", "NUMBER", "add_auth", "request", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "signature", "self", "NUMBER", "signature", "string_to_sign", "request", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "signature", "k_date", "self", "NUMBER", "_sign", "AWS", "NUMBER", "key", "NUMBER", "encode", "utf", "NUMBER", "TypeError", "cannot", "concatenate", "str", "and", "NoneType", "objects", "Here", "be", "the", "code", "snip", "import", "boto", "import", "boto", "NUMBER", "import", "boto", "NUMBER", "session", "bucket", "phoenix", "NUMBER", "NUMBER", "key", "NUMBER", "NUMBER", "data_", "NUMBER", "C", "NUMBER", "a", "NUMBER", "efe", "NUMBER", "NUMBER", "e", "NUMBER", "b", "efb", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "FULL", "amar", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "region_name", "eu", "central", "NUMBER", "s", "NUMBER", "client", "session", "NUMBER", "client", "s", "NUMBER", "config", "boto", "NUMBER", "session", "NUMBER", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "mpu", "s", "NUMBER", "client", "NUMBER", "create_multipart_upload", "Bucket", "bucket", "Key", "key", "part", "NUMBER", "s", "NUMBER", "client", "NUMBER", "upload_part_copy", "Bucket", "phoenix", "NUMBER", "NUMBER", "CopySource", "phoenix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "data_", "NUMBER", "C", "NUMBER", "a", "NUMBER", "efe", "NUMBER", "NUMBER", "e", "NUMBER", "b", "efb", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "FULL", "NUMBER", "Key", "NUMBER", "NUMBER", "data_", "NUMBER", "C", "NUMBER", "a", "NUMBER", "efe", "NUMBER", "NUMBER", "e", "NUMBER", "b", "efb", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "FULL", "amar", "PartNumber", "NUMBER", "UploadId", "mpu", "UploadId", "part", "NUMBER", "s", "NUMBER", "client", "NUMBER", "upload_part_copy", "Bucket", "phoenix", "NUMBER", "NUMBER", "CopySource", "phoenix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "data_", "NUMBER", "C", "NUMBER", "a", "NUMBER", "efe", "NUMBER", "NUMBER", "e", "NUMBER", "b", "efb", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "FULL", "NUMBER", "Key", "NUMBER", "NUMBER", "data_", "NUMBER", "C", "NUMBER", "a", "NUMBER", "efe", "NUMBER", "NUMBER", "e", "NUMBER", "b", "efb", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "FULL", "amar", "PartNumber", "NUMBER", "UploadId", "mpu", "UploadId", "part_info", "Parts", "PartNumber", "NUMBER", "ETag", "part", "NUMBER", "CopyPartResult", "ETag", "PartNumber", "NUMBER", "ETag", "part", "NUMBER", "CopyPartResult", "ETag", "s", "NUMBER", "client", "NUMBER", "complete_multipart_upload", "Bucket", "bucket", "Key", "key", "UploadId", "mpu", "UploadId", "MultipartUpload", "part_info", "One", "more", "point", "when", "I", "run", "this", "trough", "my", "application", "then", "only", "I", "be", "get", "this", "error", "NUMBER", "If", "I", "run", "this", "code", "use", "python", "interpreter", "then", "its", "works", "fine", "NUMBER", "Any", "suggestion", "I", "m", "run", "boto", "NUMBER", "inside", "of", "a", "lambda", "function", "NUMBER", "The", "aim", "be", "to", "call", "other", "lambda", "function", "in", "true", "microservice", "fashion", "NUMBER", "For", "the", "most", "part", "this", "be", "easily", "achievable", "with", "py", "import", "boto", "NUMBER", "json", "logging", "logger", "logging", "NUMBER", "getLogger", "logger", "NUMBER", "setLevel", "logging", "NUMBER", "INFO", "payload", "key", "value", "client", "boto", "NUMBER", "client", "lambda", "logger", "NUMBER", "info", "Requesting", "service", "version", "function", "client", "NUMBER", "invoke", "FunctionName", "service", "version", "function", "InvocationType", "RequestResponse", "Payload", "json", "NUMBER", "dumps", "payload", "NUMBER", "encode", "This", "be", "fine", "so", "long", "as", "the", "function", "doesn", "t", "take", "more", "than", "NUMBER", "min", "NUMBER", "Otherwise", "I", "see", "this", "happening", "in", "the", "CloudWatch", "logs", "INFO", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "Requesting", "service", "version", "function", "INFO", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "lambda", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "INFO", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "lambda", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "INFO", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "lambda", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "The", "logs", "on", "the", "invoked", "function", "confirm", "that", "they", "be", "call", "NUMBER", "times", "and", "would", "appear", "to", "continue", "to", "do", "so", "had", "the", "lambda", "not", "reached", "it", "s", "timeout", "NUMBER", "What", "causes", "the", "NUMBER", "min", "re", "request", "After", "some", "digging", "I", "ve", "learned", "botocore", "NUMBER", "config", "defaults", "to", "NUMBER", "second", "connection", "timeouts", "see", "docs", "LINK", "NUMBER", "Providing", "a", "custom", "config", "allows", "me", "to", "resolve", "the", "issue", "I", "m", "having", "however", "it", "doesn", "t", "explain", "why", "it", "attempts", "to", "re", "establish", "the", "connection", "NUMBER", "Why", "doesn", "t", "it", "just", "timeout", "and", "end", "I", "had", "this", "same", "problem", "use", "the", "CLI", "NUMBER", "If", "the", "lambda", "function", "has", "a", "timeout", "higher", "than", "NUMBER", "seconds", "and", "it", "runs", "longer", "than", "this", "time", "then", "this", "will", "cause", "a", "timeout", "and", "repeated", "invocations", "NUMBER", "I", "opened", "an", "issue", "aws", "aws", "cli", "NUMBER", "in", "the", "aws", "cli", "repo", "about", "this", "NUMBER", "When", "use", "the", "CLI", "it", "be", "possible", "to", "solve", "it", "by", "passing", "cli", "read", "timeout", "as", "an", "argument", "NUMBER", "There", "be", "a", "couple", "of", "options", "to", "automatically", "get", "the", "lambda", "timeout", "instead", "of", "add", "an", "hardcoded", "number", "by", "add", "an", "alias", "to", "the", "CLI", "NUMBER", "I", "see", "that", "in", "Boto", "NUMBER", "the", "timeout", "can", "be", "change", "in", "the", "config", "so", "it", "should", "be", "possible", "to", "write", "a", "helper", "that", "gets", "the", "lambda", "timeout", "value", "and", "change", "the", "configuration", "before", "invoking", "the", "function", "NUMBER", "Yesterday", "I", "spend", "few", "hours", "understanding", "this", "NUMBER", "NUMBER", "to", "improve", "the", "doc", "NUMBER", "What", "be", "also", "unexpect", "to", "me", "be", "that", "there", "be", "a", "retry", "logic", "build", "in", "NUMBER", "I", "usually", "expect", "a", "command", "to", "timeout", "and", "to", "throw", "an", "exception", "not", "to", "start", "retrying", "NUMBER", "RHEL", "NUMBER", "ships", "with", "python", "json", "NUMBER", "something", "NUMBER", "But", "boto", "NUMBER", "needs", "simplejson", "NUMBER", "How", "do", "one", "resolve", "this", "issue", "Assume", "the", "customer", "do", "not", "have", "Internet", "access", "for", "the", "install", "so", "pip", "be", "out", "of", "the", "question", "NUMBER", "We", "ve", "build", "a", "simplejson", "NUMBER", "module", "use", "setuptools", "and", "that", "do", "indeed", "work", "provide", "python", "json", "be", "not", "install", "but", "I", "can", "t", "remove", "it", "since", "it", "be", "be", "use", "by", "another", "RHEL", "service", "NUMBER", "Suggestions", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "CRITICAL", "Fatal", "Error", "occur", "Error", "Test", "Transaction", "Errors", "file", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "simplejson", "init", "NUMBER", "py", "from", "install", "of", "simplejson", "NUMBER", "NUMBER", "x", "NUMBER", "_", "NUMBER", "conflict", "with", "file", "from", "package", "python", "simplejson", "NUMBER", "NUMBER", "el", "NUMBER", "x", "NUMBER", "_", "NUMBER", "file", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "simplejson", "test", "init", "NUMBER", "py", "from", "install", "of", "simplejson", "NUMBER", "NUMBER", "x", "NUMBER", "_", "NUMBER", "conflict", "with", "file", "from", "package", "python", "simplejson", "NUMBER", "NUMBER", "el", "NUMBER", "x", "NUMBER", "_", "NUMBER", "file", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "simplejson", "init", "NUMBER", "pyc", "from", "install", "of", "simplejson", "NUMBER", "NUMBER", "x", "NUMBER", "_", "NUMBER", "conflict", "with", "file", "from", "package", "python", "simplejson", "NUMBER", "NUMBER", "el", "NUMBER", "x", "NUMBER", "_", "NUMBER", "file", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "simplejson", "test", "init", "NUMBER", "pyc", "from", "install", "of", "simplejson", "NUMBER", "NUMBER", "x", "NUMBER", "_", "NUMBER", "conflict", "with", "file", "from", "package", "python", "simplejson", "NUMBER", "NUMBER", "el", "NUMBER", "x", "NUMBER", "_", "NUMBER", "file", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "simplejson", "init", "NUMBER", "pyo", "from", "install", "of", "simplejson", "NUMBER", "NUMBER", "x", "NUMBER", "_", "NUMBER", "conflict", "with", "file", "from", "package", "python", "simplejson", "NUMBER", "NUMBER", "el", "NUMBER", "x", "NUMBER", "_", "NUMBER", "file", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "simplejson", "test", "init", "NUMBER", "pyo", "from", "install", "of", "simplejson", "NUMBER", "NUMBER", "x", "NUMBER", "_", "NUMBER", "conflict", "with", "file", "from", "package", "python", "simplejson", "NUMBER", "NUMBER", "el", "NUMBER", "x", "NUMBER", "_", "NUMBER", "file", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "simplejson", "test", "test_unicode", "NUMBER", "py", "from", "install", "of", "simplejson", "NUMBER", "NUMBER", "x", "NUMBER", "_", "NUMBER", "conflict", "with", "file", "from", "package", "python", "simplejson", "NUMBER", "NUMBER", "el", "NUMBER", "x", "NUMBER", "_", "NUMBER", "file", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "simplejson", "test", "test_unicode", "NUMBER", "pyc", "from", "install", "of", "simplejson", "NUMBER", "NUMBER", "x", "NUMBER", "_", "NUMBER", "conflict", "with", "file", "from", "package", "python", "simplejson", "NUMBER", "NUMBER", "el", "NUMBER", "x", "NUMBER", "_", "NUMBER", "file", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "simplejson", "test", "test_unicode", "NUMBER", "pyo", "from", "install", "of", "simplejson", "NUMBER", "NUMBER", "x", "NUMBER", "_", "NUMBER", "How", "do", "one", "get", "boto", "NUMBER", "install", "on", "RHEL", "without", "use", "pip", "But", "the", "FACT", "be", "RHEL", "ships", "with", "exist", "python", "package", "of", "certain", "version", "outside", "of", "pip", "NUMBER", "Trying", "to", "install", "python", "package", "via", "pip", "but", "maintaining", "support", "via", "RHEL", "RPMs", "be", "really", "a", "recipe", "for", "disaster", "NUMBER", "What", "I", "really", "don", "t", "understand", "be", "why", "isn", "t", "boto", "NUMBER", "and", "friends", "ported", "to", "RHEL", "CentOS", "as", "an", "official", "package", "with", "Amazon", "as", "the", "maintainer", "This", "be", "true", "for", "tons", "of", "Python", "write", "software", "NUMBER", "I", "see", "that", "python", "NUMBER", "boto", "NUMBER", "for", "CentOS", "RHEL", "NUMBER", "be", "in", "epel", "NUMBER", "But", "simplejson", "doesn", "t", "seem", "like", "a", "dependency", "NUMBER", "Is", "simplejson", "an", "artifact", "of", "python", "NUMBER", "be", "the", "default", "on", "CentOS", "RHEL", "NUMBER", "x", "release", "I", "only", "say", "that", "because", "a", "quick", "yum", "install", "y", "python", "NUMBER", "boto", "NUMBER", "doesn", "t", "seem", "to", "pull", "in", "python", "simplejson", "on", "a", "test", "system", "we", "have", "in", "the", "lab", "with", "RHEL", "NUMBER", "on", "it", "NUMBER", "s", "Pleas", "Please", "Also", "reword", "the", "sentence", "slightly", "NUMBER", "Done", "PTAL", "Boto", "version", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "Python", "NUMBER", "It", "seems", "that", "the", "issue", "with", "NUMBER", "tags", "in", "the", "filters", "LINK", "that", "we", "previously", "observed", "work", "with", "Boto", "NUMBER", "isn", "t", "inherent", "to", "Boto", "NUMBER", "as", "we", "have", "since", "replicated", "the", "issue", "with", "Boto", "NUMBER", "as", "well", "In", "case", "we", "use", "more", "than", "NUMBER", "tag", "value", "pairs", "in", "the", "call", "to", "describe_instances", "from", "client", "NUMBER", "describe_instances", "LINK", "EC", "NUMBER", "Client", "NUMBER", "describe_instances", "we", "get", "an", "empty", "set", "instead", "of", "the", "list", "of", "instances", "NUMBER", "Below", "be", "an", "example", "from", "aws_common", "NUMBER", "import", "get_ec", "NUMBER", "_instances", "args", "dotdict", "args", "NUMBER", "tags", "Availability", "test", "schedule", "Backup", "CostCentre", "CreatedBy", "Division", "Environment", "Prod", "ManagedBy", "Name", "test", "snapshot", "NUMBER", "vols", "Owner", "Tag", "NUMBER", "tags", "t", "NUMBER", "split", "NUMBER", "t", "NUMBER", "split", "NUMBER", "for", "t", "in", "args", "NUMBER", "tags", "NUMBER", "split", "tags", "Availability", "test", "schedule", "Backup", "CostCentre", "CreatedBy", "Division", "Environment", "Prod", "ManagedBy", "Name", "test", "snapshot", "NUMBER", "vols", "Owner", "Tag", "NUMBER", "filters", "Name", "tag", "t", "NUMBER", "keys", "NUMBER", "Values", "t", "NUMBER", "values", "NUMBER", "for", "t", "in", "tags", "filters", "Values", "test", "schedule", "Name", "tag", "Availability", "Values", "Name", "tag", "Backup", "Values", "Name", "tag", "CostCentre", "Values", "Name", "tag", "CreatedBy", "Values", "Name", "tag", "Division", "Values", "Prod", "Name", "tag", "Environment", "Values", "Name", "tag", "ManagedBy", "Values", "test", "snapshot", "NUMBER", "vols", "Name", "tag", "Name", "Values", "Name", "tag", "Owner", "Values", "Name", "tag", "Tag", "NUMBER", "instances", "get_ec", "NUMBER", "_instances", "filters", "filters", "region", "ap", "southeast", "NUMBER", "profile", "myawsaccount", "len", "instances", "NUMBER", "instances", "NUMBER", "InstanceId", "i", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "So", "for", "NUMBER", "tags", "we", "get", "the", "instance", "in", "the", "response", "list", "NUMBER", "Now", "add", "one", "more", "exist", "tag", "Tag", "NUMBER", "to", "the", "filter", "args", "NUMBER", "tags", "Availability", "test", "schedule", "Backup", "CostCentre", "CreatedBy", "Division", "Environment", "Prod", "ManagedBy", "Name", "test", "snapshot", "NUMBER", "vols", "Owner", "Tag", "NUMBER", "Tag", "NUMBER", "tags", "t", "NUMBER", "split", "NUMBER", "t", "NUMBER", "split", "NUMBER", "for", "t", "in", "args", "NUMBER", "tags", "NUMBER", "split", "filters", "Name", "tag", "t", "NUMBER", "keys", "NUMBER", "Values", "t", "NUMBER", "values", "NUMBER", "for", "t", "in", "tags", "instances", "get_ec", "NUMBER", "_instances", "filters", "filters", "region", "ap", "southeast", "NUMBER", "profile", "myawsaccount", "len", "instances", "NUMBER", "As", "you", "can", "see", "in", "case", "there", "be", "NUMBER", "tags", "we", "get", "an", "empty", "list", "of", "instances", "NUMBER", "Now", "if", "remove", "a", "different", "tag", "Tag", "NUMBER", "from", "the", "filter", "keep", "the", "Tag", "NUMBER", "at", "the", "same", "time", "to", "get", "back", "to", "NUMBER", "tags", "in", "total", "args", "NUMBER", "tags", "Availability", "test", "schedule", "Backup", "CostCentre", "CreatedBy", "Division", "Environment", "Prod", "ManagedBy", "Name", "test", "snapshot", "NUMBER", "vols", "Owner", "Tag", "NUMBER", "tags", "t", "NUMBER", "split", "NUMBER", "t", "NUMBER", "split", "NUMBER", "for", "t", "in", "args", "NUMBER", "tags", "NUMBER", "split", "filters", "Name", "tag", "t", "NUMBER", "keys", "NUMBER", "Values", "t", "NUMBER", "values", "NUMBER", "for", "t", "in", "tags", "instances", "get_ec", "NUMBER", "_instances", "filters", "filters", "region", "ap", "southeast", "NUMBER", "profile", "myawsaccount", "len", "instances", "NUMBER", "instances", "NUMBER", "InstanceId", "i", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "Below", "be", "the", "reference", "to", "the", "get_ec", "NUMBER", "_instances", "and", "the", "dependent", "function", "that", "be", "use", "in", "the", "example", "aws_list_result", "call_aws_api", "def", "get_ec", "NUMBER", "_instances", "filters", "None", "region", "None", "role_arn", "None", "profile", "None", "Wrapper", "function", "to", "get", "a", "list", "of", "instances", "optionally", "filtering", "them", "ec", "NUMBER", "_conn", "get_aws_client", "ec", "NUMBER", "region", "role_arn", "profile", "res", "ec", "NUMBER", "_conn", "NUMBER", "describe_instances", "Filters", "filters", "instances", "i", "for", "r", "in", "res", "Reservations", "for", "i", "in", "r", "Instances", "return", "instances", "def", "get_aws_client", "name", "None", "region", "None", "role_arn", "None", "profile", "None", "Obtain", "an", "AWS", "client", "connection", "direct", "or", "by", "assuming", "a", "role", "session", "get_aws_access", "region", "role_arn", "profile", "return", "session", "NUMBER", "client", "name", "def", "get_aws_access", "region", "None", "role_arn", "None", "profile", "None", "Obtain", "an", "Autoscale", "connection", "direct", "or", "by", "assuming", "a", "role", "aws_access", "if", "region", "be", "None", "FIXME", "still", "need", "to", "use", "boto", "NUMBER", "utils", "as", "this", "functionality", "be", "lacking", "in", "Boto", "NUMBER", "see", "LINK", "instance_metadata", "boto", "NUMBER", "utils", "NUMBER", "get_instance_identity", "region", "instance_metadata", "document", "region", "if", "role_arn", "be", "None", "aws_access", "key", "None", "aws_access", "secret", "None", "aws_access", "token", "None", "else", "sts_client", "boto", "NUMBER", "client", "sts", "role_obj", "sts_client", "NUMBER", "assume_role", "RoleArn", "role_arn", "RoleSessionName", "AssumeRoleSession", "aws_access", "key", "role_obj", "NUMBER", "credentials", "AccessKeyId", "aws_access", "secret", "role_obj", "NUMBER", "credentials", "SecretAccessKey", "aws_access", "token", "role_obj", "NUMBER", "credentials", "SessionToken", "aws_access", "profile", "profile", "aws_access", "region", "region", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "region_name", "aws_access", "region", "aws_access_key_id", "aws_access", "key", "aws_secret_access_key", "aws_access", "secret", "aws_session_token", "aws_access", "token", "profile_name", "aws_access", "profile", "return", "session", "class", "dotdict", "dict", "dot", "NUMBER", "notation", "access", "to", "dictionary", "attributes", "dotdict", "key", "NUMBER", "value", "NUMBER", "key", "NUMBER", "value", "NUMBER", "NUMBER", "key", "NUMBER", "value", "NUMBER", "dotdict", "key", "NUMBER", "key", "NUMBER", "value", "NUMBER", "NUMBER", "key", "NUMBER", "key", "NUMBER", "value", "NUMBER", "dotdict", "key", "NUMBER", "key", "NUMBER", "value", "NUMBER", "NUMBER", "key", "NUMBER", "key", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "AttributeError", "dict", "object", "has", "no", "attribute", "key", "NUMBER", "def", "__getattr__", "self", "attr", "return", "self", "NUMBER", "get", "attr", "__setattr__", "dict", "NUMBER", "__setitem__", "__delattr__", "dict", "NUMBER", "__delitem__", "jordonphillips", "I", "have", "already", "raise", "the", "issue", "to", "AWS", "support", "through", "one", "of", "the", "AWS", "business", "accounts", "I", "have", "association", "with", "over", "a", "month", "ago", "NUMBER", "The", "message", "I", "get", "from", "the", "AWS", "support", "every", "week", "that", "I", "poke", "them", "be", "we", "have", "contacted", "our", "Boto", "service", "team", "and", "they", "be", "investigating", "the", "issue", "NUMBER", "We", "cannot", "tell", "you", "more", "since", "we", "have", "no", "visibility", "into", "our", "service", "teams", "NUMBER", "You", "closing", "the", "issue", "tells", "me", "that", "Boto", "team", "be", "not", "only", "not", "interested", "in", "fix", "this", "bug", "but", "even", "do", "not", "want", "to", "acknowledge", "it", "NUMBER", "can", "we", "modify", "or", "have", "an", "overloaded", "version", "of", "ECS", "NUMBER", "create_service", "LINK", "ECS", "NUMBER", "Client", "NUMBER", "create_service", "that", "takes", "a", "targetGroup", "_NAME_", "rather", "than", "an", "_ARN_", "yeah", "makes", "sense", "NUMBER", "i", "m", "just", "be", "lazy", "about", "having", "to", "write", "NUMBER", "additional", "lines", "of", "code", "to", "get", "the", "Target", "Group", "Arn", "python", "NUMBER", "and", "boto", "NUMBER", "NUMBER", "when", "calling", "rds", "NUMBER", "restore_db_cluster_to_point_in_time", "SourceDBClusterIdentifier", "resource", "NUMBER", "conn_id", "DBClusterIdentifier", "resource", "NUMBER", "identifier", "RestoreToTime", "point_in_time", "VpcSecurityGroupIds", "security_group", "DBSubnetGroupName", "subnet", "DBClusterIdentifier", "be", "implicitly", "lower", "cased", "NUMBER", "This", "leads", "to", "a", "very", "unfortunate", "bug", "that", "be", "propagated", "in", "rds", "NUMBER", "describe_db_clusters", "DBClusterIdentifier", "resource", "NUMBER", "identifier", "and", "DBClusterIdentifier", "be", "implictly", "lower", "cased", "again", "returning", "valid", "results", "NUMBER", "Finally", "where", "teh", "bug", "bites", "rds", "NUMBER", "create_db_instance", "DBInstanceIdentifier", "reader_instance", "DBInstanceClass", "db", "NUMBER", "r", "NUMBER", "xlarge", "Engine", "aurora", "DBSubnetGroupName", "subnet", "DBClusterIdentifier", "resource", "NUMBER", "identifier", "ClientError", "An", "error", "occur", "DBClusterNotFoundFault", "when", "calling", "the", "CreateDBInstance", "operation", "DB", "Cluster", "not", "find", "Using", "the", "exact", "same", "value", "in", "the", "previous", "NUMBER", "function", "calls", "fail", "here", "because", "DBClusterIdentifier", "be", "_not_", "implicitly", "lower", "cased", "at", "this", "point", "NUMBER", "Let", "s", "say", "I", "have", "several", "APIs", "created", "by", "accident", "in", "this", "case", "because", "I", "was", "test", "things", "NUMBER", "I", "would", "like", "to", "delete", "them", "automatically", "NUMBER", "When", "I", "do", "that", "I", "ll", "find", "that", "I", "get", "a", "timeout", "TooManyRequestsException", "In", "the", "attached", "ZIP", "file", "please", "find", "a", "simple", "script", "demo", "and", "the", "log", "of", "what", "happens", "when", "runing", "it", "NUMBER", "I", "would", "normally", "expect", "this", "script", "to", "delete", "multiple", "APIs", "without", "problem", "and", "generally", "I", "d", "expect", "boto", "NUMBER", "as", "a", "high", "level", "interface", "should", "hide", "the", "details", "of", "the", "rate", "limiting", "which", "the", "API", "do", "underneath", "NUMBER", "Possibly", "this", "botocore", "issue", "Add", "possibility", "of", "modifying", "retry_config", "NUMBER", "LINK", "would", "be", "helpful", "NUMBER", "aws", "TooManyRequestsException", "broken", "demo", "NUMBER", "zip", "LINK", "TooManyRequestsException", "broken", "demo", "NUMBER", "zip", "Generally", "this", "also", "seems", "to", "apply", "to", "lots", "of", "other", "API", "calls", "NUMBER", "I", "don", "t", "have", "simple", "examples", "to", "demo", "them", "yet", "though", "NUMBER", "JordonPhillips", "I", "generate", "the", "bug", "on", "the", "latest", "version", "pull", "from", "pip", "pip", "freeze", "grep", "boto", "boto", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "Don", "t", "know", "if", "you", "have", "access", "to", "the", "internal", "cases", "if", "you", "can", "see", "case", "ID", "redacted", "then", "you", "will", "see", "that", "the", "advice", "from", "AWS", "support", "be", "that", "the", "reason", "for", "the", "problem", "be", "not", "that", "there", "be", "different", "exception", "code", "NUMBER", "It", "s", "that", "there", "be", "different", "rate", "limits", "on", "AkPI", "Gateway", "NUMBER", "In", "particlular", "CreateRestApi", "ImportRestApi", "and", "DeleteRestApi", "be", "rate", "limited", "to", "NUMBER", "calls", "per", "minute", "NUMBER", "As", "far", "as", "I", "can", "see", "from", "the", "exception", "include", "in", "the", "log", "in", "the", "attached", "zip", "file", "it", "_has_", "retried", "but", "it", "run", "out", "of", "retries", "so", "that", "would", "match", "with", "what", "support", "be", "saying", "NUMBER", "DeleteRestApi", "operation", "reached", "max", "retries", "NUMBER", "Too", "Many", "Requests", "I", "m", "guessing", "that", "this", "be", "because", "API", "Gateway", "has", "very", "low", "request", "per", "second", "limits", "NUMBER", "See", "the", "bottom", "of", "this", "document", "they", "linked", "to", "LINK", "I", "have", "created", "a", "propose", "fix", "for", "this", "in", "LINK", "JordonPhillips", "thanks", "waiting", "with", "baited", "breath", "NUMBER", "From", "my", "side", "I", "think", "there", "be", "always", "going", "to", "be", "situations", "where", "e", "NUMBER", "g", "NUMBER", "you", "want", "to", "do", "more", "than", "one", "of", "any", "operation", "so", "as", "a", "very", "minimum", "the", "longest", "retry", "should", "be", "longer", "than", "the", "longest", "you", "would", "have", "to", "wait", "after", "having", "do", "one", "operation", "NUMBER", "Ideally", "double", "that", "NUMBER", "Even", "if", "you", "can", "t", "provide", "a", "fix", "soon", "exposing", "a", "table", "of", "information", "about", "the", "rate", "limits", "would", "probably", "be", "helpfu", "NUMBER", "JordonPhillips", "what", "was", "the", "result", "of", "your", "discussion", "NUMBER", "I", "ve", "seen", "that", "failure", "to", "handle", "timeouts", "correctly", "be", "a", "problem", "for", "a", "large", "number", "of", "Amazon", "customers", "and", "be", "cause", "various", "problem", "with", "tool", "based", "on", "boto", "NUMBER", "and", "in", "many", "discussion", "group", "relate", "to", "AWS", "configuration", "management", "NUMBER", "I", "d", "be", "willing", "to", "put", "in", "a", "bit", "more", "work", "on", "this", "but", "not", "if", "you", "aren", "t", "interested", "in", "accepting", "it", "NUMBER", "i", "tried", "to", "list", "users", "having", "mfa", "enable", "or", "disabled", "and", "it", "can", "list", "only", "first", "NUMBER", "users", "NUMBER", "and", "we", "have", "NUMBER", "users", "on", "account", "NUMBER", "any", "help", "import", "boto", "from", "boto", "import", "iam", "conn", "iam", "NUMBER", "connect_to_region", "us", "east", "NUMBER", "connection", "iam", "NUMBER", "IAMConnection", "iamProfiles", "connection", "NUMBER", "get_all_users", "for", "user", "in", "iamProfiles", "NUMBER", "users", "mfaDevices", "connection", "NUMBER", "get_all_mfa_devices", "user", "NUMBER", "user_name", "that", "s", "by", "design", "for", "boto", "calls", "that", "list", "entities", "it", "caps", "the", "max", "returned", "items", "to", "a", "certain", "number", "for", "IAM", "NUMBER", "list_users", "it", "s", "NUMBER", "NUMBER", "if", "you", "have", "more", "than", "NUMBER", "you", "will", "have", "to", "_paginate_", "NUMBER", "for", "the", "initial", "call", "the", "returned", "entity", "will", "have", "a", "Marker", "field", "NUMBER", "you", "will", "use", "that", "as", "parameter", "for", "the", "next", "call", "to", "get", "the", "next", "NUMBER", "then", "use", "the", "Marker", "field", "for", "that", "call", "for", "the", "next", "etc", "NUMBER", "More", "information", "here", "LINK", "IAM", "IAM", "NUMBER", "Client", "NUMBER", "list_users", "When", "attempting", "to", "list", "all", "the", "tasks", "by", "passing", "in", "the", "ECS", "cluster", "the", "service", "name", "and", "the", "container", "instance", "boto", "NUMBER", "throw", "an", "error", "report", "that", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidParameterException", "when", "calling", "the", "ListTasks", "operation", "cannot", "specify", "serviceName", "with", "other", "argument", "To", "recreate", "this", "log", "into", "an", "EC", "NUMBER", "instance", "that", "belongs", "to", "an", "ECS", "cluster", "install", "boto", "NUMBER", "with", "python", "NUMBER", "and", "make", "the", "call", "NUMBER", "This", "use", "to", "work", "until", "recently", "NUMBER", "LINK", "python", "sdk", "boto", "NUMBER", "client", "route", "NUMBER", "domains", "get", "domain", "suggestions", "clienterror", "Sounds", "good", "thanks", "Quick", "question", "for", "you", "Is", "just", "link", "to", "the", "stackoverflow", "article", "OK", "Or", "should", "I", "add", "all", "the", "necessary", "information", "on", "github", "for", "future", "reference", "I", "have", "a", "queue", "URL", "for", "an", "SQS", "queue", "I", "d", "like", "to", "be", "able", "to", "post", "message", "to", "it", "without", "having", "to", "specify", "a", "region", "to", "make", "my", "application", "simpler", "to", "configure", "NUMBER", "Since", "the", "region", "be", "contained", "in", "the", "queue", "URL", "why", "not", "let", "users", "construct", "the", "resource", "without", "having", "to", "specify", "the", "region", "first", "sqs", "boto", "NUMBER", "resource", "sqs", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "resource", "return", "_get_default_session", "NUMBER", "resource", "args", "kwargs", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "resource", "aws_session_token", "aws_session_token", "config", "config", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "client", "aws_session_token", "aws_session_token", "config", "config", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "create_client", "client_config", "config", "api_version", "api_version", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "create_client", "verify", "credentials", "scoped_config", "client_config", "endpoint_bridge", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_get_client_args", "verify", "credentials", "scoped_config", "client_config", "endpoint_bridge", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "args", "NUMBER", "py", "line", "NUMBER", "in", "get_client_args", "endpoint_url", "is_secure", "scoped_config", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "args", "NUMBER", "py", "line", "NUMBER", "in", "compute_client_args", "service_name", "region_name", "endpoint_url", "is_secure", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "resolve", "service_name", "region_name", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "regions", "NUMBER", "py", "line", "NUMBER", "in", "construct_endpoint", "partition", "service_name", "region_name", "File", "home", "streamer", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "regions", "NUMBER", "py", "line", "NUMBER", "in", "_endpoint_for_partition", "raise", "NoRegionError", "botocore", "NUMBER", "exception", "NUMBER", "NoRegionError", "You", "must", "specify", "a", "region", "NUMBER", "I", "m", "doing", "this", "NUMBER", "Is", "it", "wrong", "region", "re", "NUMBER", "search", "r", "arn", "aws", "sns", "w", "arn", "NUMBER", "group", "NUMBER", "sns", "boto", "NUMBER", "resource", "sns", "region_name", "region", "region", "re", "NUMBER", "search", "r", "sqs", "NUMBER", "w", "NUMBER", "amazonaws", "NUMBER", "com", "url", "NUMBER", "group", "NUMBER", "sqs", "boto", "NUMBER", "resource", "sqs", "region_name", "region", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "Cellar", "python", "NUMBER", "_", "NUMBER", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "threading", "NUMBER", "py", "line", "NUMBER", "in", "__bootstrap_inner", "self", "NUMBER", "run", "File", "usr", "local", "Cellar", "python", "NUMBER", "_", "NUMBER", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "threading", "NUMBER", "py", "line", "NUMBER", "in", "run", "self", "NUMBER", "__target", "self", "NUMBER", "__args", "self", "NUMBER", "__kwargs", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "lib", "paho", "mqtt", "client", "NUMBER", "py", "line", "NUMBER", "in", "_thread_main", "self", "NUMBER", "loop_forever", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "lib", "paho", "mqtt", "client", "NUMBER", "py", "line", "NUMBER", "in", "loop_forever", "rc", "self", "NUMBER", "loop", "timeout", "max_packets", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "lib", "paho", "mqtt", "client", "NUMBER", "py", "line", "NUMBER", "in", "loop", "rc", "self", "NUMBER", "loop_read", "max_packets", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "lib", "paho", "mqtt", "client", "NUMBER", "py", "line", "NUMBER", "in", "loop_read", "rc", "self", "NUMBER", "_packet_read", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "lib", "paho", "mqtt", "client", "NUMBER", "py", "line", "NUMBER", "in", "_packet_read", "rc", "self", "NUMBER", "_packet_handle", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "lib", "paho", "mqtt", "client", "NUMBER", "py", "line", "NUMBER", "in", "_packet_handle", "return", "self", "NUMBER", "_handle_publish", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "lib", "paho", "mqtt", "client", "NUMBER", "py", "line", "NUMBER", "in", "_handle_publish", "self", "NUMBER", "_handle_on_message", "message", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "lib", "paho", "mqtt", "client", "NUMBER", "py", "line", "NUMBER", "in", "_handle_on_message", "self", "NUMBER", "on_message", "self", "self", "NUMBER", "_userdata", "message", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "repo", "filler", "mqtt", "handler", "NUMBER", "py", "line", "NUMBER", "in", "_on_message", "callback", "message", "NUMBER", "topic", "str", "message", "NUMBER", "payload", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "repo", "filler", "dataprocessor", "iotrequest", "multipart_file_upload", "NUMBER", "py", "line", "NUMBER", "in", "get_response", "self", "NUMBER", "multipartupload", "self", "NUMBER", "_fileLocation", "self", "NUMBER", "_fileName", "self", "NUMBER", "_bucketName", "self", "NUMBER", "_credentials", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "repo", "filler", "dataprocessor", "iotrequest", "multipart_file_upload", "NUMBER", "py", "line", "NUMBER", "in", "multipart", "upload", "part", "s", "NUMBER", "upload_part", "Bucket", "bucketName", "Key", "self", "NUMBER", "key", "PartNumber", "part_number", "UploadId", "self", "NUMBER", "_uploadId", "Body", "data", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "lib", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Users", "my", "NUMBER", "name", "projects", "filler", "NUMBER", "lib", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "ClientError", "An", "error", "occur", "RequestTimeout", "when", "calling", "the", "UploadPart", "operation", "reached", "max", "retries", "NUMBER", "Your", "socket", "connection", "to", "the", "server", "was", "not", "read", "from", "or", "write", "to", "within", "the", "timeout", "period", "NUMBER", "Idle", "connectionswill", "be", "close", "NUMBER", "Here", "be", "my", "code", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "aws_access_key_id", "self", "NUMBER", "accessKey", "aws_secret_access_key", "self", "NUMBER", "secretKey", "aws_session_token", "self", "NUMBER", "sessionToken", "TODO", "needs", "to", "be", "configurable", "chunksize", "NUMBER", "chunkcount", "int", "math", "NUMBER", "ceil", "int", "self", "NUMBER", "_fileSize", "chunksize", "parts", "etags", "for", "i", "in", "range", "chunkcount", "NUMBER", "part_number", "i", "NUMBER", "offset", "chunksize", "i", "bytes", "min", "chunksize", "int", "self", "NUMBER", "_fileSize", "offset", "with", "FileChunkIO", "fileLocation", "fileName", "r", "offset", "offset", "bytes", "bytes", "as", "data", "part", "s", "NUMBER", "upload_part", "Bucket", "bucketName", "Key", "self", "NUMBER", "key", "PartNumber", "part_number", "UploadId", "self", "NUMBER", "_uploadId", "Body", "data", "part_info", "PartNumber", "part_number", "ETag", "part", "ETag", "etags", "str", "part_number", "part", "ETag", "parts", "NUMBER", "append", "part_info", "s", "NUMBER", "complete_multipart_upload", "Bucket", "bucketName", "Key", "self", "NUMBER", "key", "UploadId", "self", "NUMBER", "_uploadId", "MultipartUpload", "Parts", "parts", "I", "believe", "that", "this", "issue", "has", "popped", "up", "several", "times", "in", "other", "AWS", "SDK", "s", "relate", "to", "uploading", "large", "file", "to", "S", "NUMBER", "I", "have", "tried", "performing", "this", "action", "through", "a", "proxy", "to", "see", "if", "my", "network", "reliability", "was", "bad", "NUMBER", "No", "luck", "NUMBER", "I", "have", "tried", "change", "the", "chunk", "size", "no", "luck", "NUMBER", "I", "have", "tried", "change", "the", "file", "size", "NUMBER", "No", "luck", "NUMBER", "Any", "thoughts", "ec", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "modify_reserved_instances", "I", "m", "get", "the", "error", "below", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Unknown", "parameter", "in", "TargetConfigurations", "NUMBER", "Scope", "must", "be", "one", "of", "AvailabilityZone", "Platform", "InstanceCount", "InstanceType", "This", "be", "my", "function", "python", "def", "modify_reserved_instance", "self", "region", "iid", "icount", "itype", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "region_name", "region", "NUMBER", "api_version", "NUMBER", "NUMBER", "NUMBER", "response", "ec", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "modify_reserved_instances", "ClientToken", "string", "ReservedInstancesIds", "iid", "TargetConfigurations", "AvailabilityZone", "region", "Platform", "Linux", "UNIX", "Amazon", "VPC", "InstanceCount", "icount", "InstanceType", "itype", "Scope", "Availability", "Zone", "print", "response", "return", "response", "I", "have", "tried", "the", "Scope", "as", "AvailabilityZone", "and", "Availability", "Zone", "Updated", "botocore", "sudo", "pip", "install", "botocore", "upgrade", "awscli", "NUMBER", "boto", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "setuptools", "NUMBER", "Installed", "boto", "NUMBER", "botocore", "from", "github", "LINK", "Any", "Ideas", "Thank", "you", "Hi", "I", "m", "trying", "to", "update", "some", "already", "exist", "S", "NUMBER", "file", "to", "enable", "Server", "Side", "Encryption", "NUMBER", "I", "ve", "search", "for", "code", "in", "boto", "NUMBER", "docs", "and", "I", "was", "not", "able", "to", "find", "NUMBER", "Please", "let", "me", "know", "if", "there", "be", "any", "way", "to", "do", "that", "NUMBER", "Thanks", "NUMBER", "Thanks", "I", "find", "the", "answer", "NUMBER", "Hi", "all", "I", "have", "an", "issue", "regard", "the", "process", "of", "creating", "a", "snapshot", "for", "a", "certain", "EBS", "volume", "class", "by", "use", "boto", "NUMBER", "It", "seems", "that", "even", "though", "i", "declare", "a", "Name", "tag", "explicitly", "that", "tag", "doesn", "t", "get", "saved", "NUMBER", "I", "eventually", "end", "up", "with", "a", "blank", "name", "tag", "on", "the", "Snapshot", "declaration", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "pm", "LINK", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "png", "This", "be", "how", "my", "code", "essentially", "looks", "like", "I", "have", "a", "volume", "object", "python", "type", "volume", "TAG", "The", "rest", "python", "tags", "Key", "Name", "Value", "some", "name", "volume", "NUMBER", "create_tags", "Tags", "tags", "volume", "NUMBER", "create_snapshot", "VolumeId", "volume", "NUMBER", "id", "Description", "description", "Am", "i", "miss", "something", "here", "or", "be", "this", "a", "bug", "Please", "help", "JordonPhillips", "thanks", "for", "the", "response", "As", "far", "as", "i", "could", "tell", "when", "compared", "to", "the", "previous", "version", "of", "boto", "this", "be", "a", "change", "no", "In", "the", "old", "version", "I", "would", "do", "a", "volume", "NUMBER", "create_snapshot", "description", "and", "the", "volume", "name", "tag", "would", "be", "copied", "as", "the", "name", "of", "the", "snapshot", "no", "I", "think", "this", "be", "a", "bug", "and", "should", "be", "address", "NUMBER", "JordonPhillips", "be", "there", "a", "valid", "reason", "to", "believe", "so", "comparing", "to", "previous", "boto", "version", "I", "see", "your", "point", "NUMBER", "Thank", "you", "JordonPhillips", "NUMBER", "I", "will", "close", "this", "then", "appreciate", "the", "help", "Is", "there", "any", "way", "to", "make", "an", "instance", "attached", "to", "an", "ELB", "unhealthy", "purposefully", "use", "boto", "NUMBER", "I", "tried", "few", "methods", "and", "non", "of", "them", "work", "so", "far", "NUMBER", "Thanks", "for", "any", "help", "JordonPhillips", "Thanks", "for", "your", "reply", "NUMBER", "Just", "had", "one", "more", "doubt", "NUMBER", "Suppose", "there", "be", "NUMBER", "instances", "be", "registered", "in", "ELB", "NUMBER", "If", "i", "remove", "an", "instance", "from", "an", "ELB", "what", "will", "happen", "I", "mean", "what", "will", "happen", "to", "request", "actively", "served", "by", "that", "instance", "Perhaps", "this", "be", "intended", "behavior", "but", "if", "I", "call", "KeyPair", "NUMBER", "delete", "on", "a", "non", "existent", "KeyPair", "I", "get", "no", "indication", "I", "ve", "do", "something", "so", "silly", "NUMBER", "No", "None", "False", "or", "Exception", "ShellSession", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "kp", "boto", "NUMBER", "resource", "ec", "NUMBER", "NUMBER", "KeyPair", "kjdfkjdfkdsjfskdfd", "In", "NUMBER", "kp", "NUMBER", "delete", "Out", "NUMBER", "ResponseMetadata", "HTTPHeaders", "content", "type", "text", "xml", "charset", "UTF", "NUMBER", "date", "Tue", "NUMBER", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "server", "AmazonEC", "NUMBER", "transfer", "encoding", "chunked", "vary", "Accept", "Encoding", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "abb", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "RetryAttempts", "NUMBER", "In", "NUMBER", "ShellSession", "python", "version", "pip", "list", "grep", "boto", "NUMBER", "Python", "NUMBER", "boto", "NUMBER", "NUMBER", "When", "use", "upload_fileobj", "the", "resulting", "file", "in", "s", "NUMBER", "be", "stored", "as", "a", "single", "file", "NUMBER", "If", "the", "file", "be", "huge", "sometime", "it", "would", "be", "desirable", "to", "store", "the", "file", "in", "multiple", "small", "file", "NUMBER", "Can", "this", "be", "achieved", "by", "passing", "some", "argument", "in", "config", "below", "upload_fileobj", "Fileobj", "ExtraArgs", "None", "Callback", "None", "Config", "None", "JordonPhillips", "Am", "referring", "to", "upload_fileobj", "api", "NUMBER", "I", "want", "to", "upload", "a", "huge", "file", "into", "same", "key", "aka", "aws", "bucket", "but", "into", "multiple", "file", "so", "that", "individual", "file", "will", "be", "smaller", "to", "read", "NUMBER", "kyleknap", "Any", "comments", "as", "to", "how", "upload_fileobj", "should", "be", "use", "in", "this", "case", "JordonPhillips", "I", "want", "to", "upload", "the", "streamed", "file", "use", "upload_fileobj", "into", "multiple", "file", "not", "download", "NUMBER", "JordonPhillips", "Thanks", "a", "lot", "NUMBER", "That", "helps", "NUMBER", "Hi", "Why", "Sqs", "don", "t", "have", "waiters", "I", "be", "especially", "thinking", "about", "purging", "and", "deleting", "that", "can", "t", "take", "some", "amount", "of", "time", "up", "to", "NUMBER", "sec", "NUMBER", "Boto", "NUMBER", "x", "S", "NUMBER", "module", "allow", "for", "generate_url", "with", "expires_in_absolute", "NUMBER", "I", "cannot", "find", "the", "same", "param", "in", "Boto", "NUMBER", "LINK", "S", "NUMBER", "Client", "NUMBER", "generate_presigned_url", "Any", "way", "to", "easily", "adapt", "the", "code", "to", "have", "the", "same", "behaviour", "Thanks", "I", "see", "NUMBER", "Using", "boto", "NUMBER", "we", "can", "set", "the", "due", "date", "to", "an", "specific", "point", "in", "time", "that", "means", "that", "the", "url", "including", "the", "signature", "will", "not", "change", "unless", "we", "change", "the", "due", "date", "NUMBER", "Trying", "to", "do", "the", "same", "substracting", "time", "NUMBER", "time", "looks", "tricky", "NUMBER", "Here", "be", "an", "example", "of", "calculating", "that", "time", "yourself", "python", "from", "datetime", "import", "datetime", "absolute_date", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "expires_in", "int", "absolute_date", "NUMBER", "timestamp", "datetime", "NUMBER", "now", "NUMBER", "timestamp", "create_stack", "function", "return", "an", "object", "other", "than", "a", "dict", "indicated", "in", "the", "documentation", "NUMBER", "create_stack", "kwargs", "LINK", "CloudFormation", "NUMBER", "Client", "NUMBER", "create_stack", "python", "import", "boto", "NUMBER", "with", "open", "cf", "network", "NUMBER", "json", "as", "f", "template", "f", "NUMBER", "read", "client_cf", "boto", "NUMBER", "resource", "cloudformation", "response", "client_cf", "NUMBER", "create_stack", "StackName", "foo", "TemplateBody", "template", "print", "response", "print", "type", "response", "cloudformation", "NUMBER", "Stack", "name", "foo", "TAG", "To", "meet", "the", "consistency", "of", "other", "client", "utilities", "the", "behaiver", "should", "be", "like", "what", "the", "doc", "says", "NUMBER", "Which", "reponse", "usually", "be", "a", "dict", "with", "a", "ResponseMetadata", "and", "the", "actual", "content", "NUMBER", "A", "similar", "example", "python", "client", "boto", "NUMBER", "client", "ec", "NUMBER", "response", "client", "NUMBER", "create_vpc", "DryRun", "False", "CidrBlock", "VPC", "NUMBER", "InstanceTenancy", "default", "print", "type", "response", "response", "vpc", "ec", "NUMBER", "Vpc", "response", "Vpc", "VpcId", "print", "type", "vpc", "vpc", "TAG", "Vpc", "HIDDEN", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "HTTPHeaders", "vary", "Accept", "Encoding", "content", "type", "text", "xml", "charset", "UTF", "NUMBER", "server", "AmazonEC", "NUMBER", "transfer", "encoding", "chunked", "date", "Mon", "NUMBER", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "RetryAttempts", "NUMBER", "RequestId", "ccccccc", "foo", "bar", "foo", "foobar", "TAG", "ec", "NUMBER", "Vpc", "id", "vpc", "f", "NUMBER", "e", "NUMBER", "e", "When", "trying", "to", "get", "RDS", "EndPoint", "use", "the", "following", "function", "def", "get_endpoint_status", "instance_name", "conn", "boto", "NUMBER", "client", "rds", "return", "conn", "NUMBER", "describe_db_instances", "DBInstanceIdentifier", "instance_name", "DBInstances", "NUMBER", "DBInstanceStatus", "def", "get_endpoint", "brand_name", "BRAND_NAME", "instance_name", "rde", "db", "rds", "NUMBER", "format", "brand_name", "current_status", "None", "time", "NUMBER", "sleep", "NUMBER", "while", "True", "current_status", "get_endpoint_status", "instance_name", "instance_name", "if", "current_status", "available", "break", "time", "NUMBER", "sleep", "NUMBER", "conn", "boto", "NUMBER", "client", "rds", "response", "conn", "NUMBER", "describe_db_instances", "DBInstanceIdentifier", "instance_name", "return", "response", "DBInstances", "NUMBER", "Endpoint", "Address", "I", "m", "get", "following", "error", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "Throttling", "when", "calling", "the", "DescribeDBInstances", "operation", "reached", "max", "retries", "NUMBER", "Rate", "exceeded", "Is", "there", "any", "way", "I", "can", "increase", "the", "max", "retries", "limits", "JordonPhillips", "I", "be", "get", "max", "retries", "on", "DescribeCacheClusters", "when", "paginating", "NUMBER", "Is", "there", "support", "for", "waiters", "in", "the", "paginate", "class", "I", "can", "probably", "figure", "out", "a", "workaround", "but", "I", "d", "like", "to", "do", "things", "nicely", "NUMBER", "My", "call", "snap_results", "ec", "NUMBER", "client", "NUMBER", "create_snapshot", "VolumeId", "vol_id", "Description", "snap_desc", "Causes", "this", "error", "to", "be", "throw", "Error", "calling", "create_snapshot", "on", "vol", "nnnnnnn", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzlocal", "be", "not", "JSON", "serializable", "Considering", "that", "I", "be", "not", "doing", "anything", "with", "a", "datetime", "I", "suspect", "the", "error", "be", "in", "boto", "somewhere", "NUMBER", "Please", "advise", "NUMBER", "Sorry", "I", "didn", "t", "see", "your", "comment", "until", "now", "NUMBER", "The", "vol_id", "be", "the", "volume", "id", "of", "the", "volume", "to", "snapshot", "NUMBER", "I", "be", "looping", "through", "all", "volumes", "creating", "snapshot", "for", "each", "one", "NUMBER", "snap_desc", "be", "a", "string", "formatted", "like", "this", "vol_id", "_", "instance_id", "_", "instance_name", "In", "this", "case", "it", "looks", "like", "the", "snapshot", "be", "be", "created", "and", "an", "error", "be", "be", "throw", "NUMBER", "Here", "s", "a", "debug", "log", "INFO", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Creating", "snapshot", "vol", "cf", "NUMBER", "ea", "NUMBER", "_i", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "_FalconElasticsearch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "root", "INFO", "Creating", "snapshot", "vol", "cf", "NUMBER", "ea", "NUMBER", "_i", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "_FalconElasticsearch", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Event", "before", "parameter", "build", "NUMBER", "ec", "NUMBER", "CreateSnapshot", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "ec", "NUMBER", "CreateSnapshot", "calling", "handler", "TAG", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Making", "request", "for", "OperationModel", "name", "CreateSnapshot", "verify_ssl", "True", "with", "params", "body", "Action", "u", "CreateSnapshot", "Version", "u", "NUMBER", "NUMBER", "NUMBER", "VolumeId", "u", "vol", "cf", "NUMBER", "ea", "NUMBER", "Description", "u", "vol", "cf", "NUMBER", "ea", "NUMBER", "_i", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "_FalconElasticsearch", "NUMBER", "url", "u", "LINK", "east", "NUMBER", "amazonaws", "NUMBER", "com", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "amzn", "NUMBER", "x", "NUMBER", "_", "NUMBER", "Botocore", "NUMBER", "context", "client_region", "us", "east", "NUMBER", "has_streaming_input", "False", "client_config", "TAG", "query_string", "url_path", "method", "u", "POST", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "OperationModel", "name", "CreateSnapshot", "verify_ssl", "True", "with", "params", "body", "Action", "u", "CreateSnapshot", "Version", "u", "NUMBER", "NUMBER", "NUMBER", "VolumeId", "u", "vol", "cf", "NUMBER", "ea", "NUMBER", "Description", "u", "vol", "cf", "NUMBER", "ea", "NUMBER", "_i", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "_FalconElasticsearch", "NUMBER", "url", "u", "LINK", "east", "NUMBER", "amazonaws", "NUMBER", "com", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "amzn", "NUMBER", "x", "NUMBER", "_", "NUMBER", "Botocore", "NUMBER", "context", "client_region", "us", "east", "NUMBER", "has_streaming_input", "False", "client_config", "TAG", "query_string", "url_path", "method", "u", "POST", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Event", "request", "created", "NUMBER", "ec", "NUMBER", "CreateSnapshot", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "ec", "NUMBER", "CreateSnapshot", "calling", "handler", "TAG", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "CanonicalRequest", "POST", "host", "ec", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "x", "amz", "security", "token", "omitted", "host", "x", "amz", "date", "x", "amz", "security", "token", "f", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "de", "NUMBER", "b", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "db", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "POST", "host", "ec", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "x", "amz", "security", "token", "omitted", "host", "x", "amz", "date", "x", "amz", "security", "token", "omitted", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "StringToSign", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "east", "NUMBER", "ec", "NUMBER", "aws", "NUMBER", "_request", "omitted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "east", "NUMBER", "ec", "NUMBER", "aws", "NUMBER", "_request", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ecbaa", "NUMBER", "ce", "NUMBER", "cbef", "NUMBER", "cd", "NUMBER", "d", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Signature", "omitted", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "omitted", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ddef", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "INFO", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "ec", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTPS", "connection", "NUMBER", "ec", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "POST", "HTTP", "NUMBER", "NUMBER", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "POST", "HTTP", "NUMBER", "NUMBER", "None", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Response", "headers", "transfer", "encoding", "chunked", "vary", "Accept", "Encoding", "server", "AmazonEC", "NUMBER", "content", "type", "text", "xml", "charset", "UTF", "NUMBER", "date", "Thu", "NUMBER", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Response", "body", "TAG", "TAG", "TAG", "NUMBER", "a", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "TAG", "TAG", "snap", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "TAG", "TAG", "vol", "cf", "NUMBER", "ea", "NUMBER", "TAG", "TAG", "pending", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "false", "TAG", "TAG", "vol", "cf", "NUMBER", "ea", "NUMBER", "_i", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "_FalconElasticsearch", "NUMBER", "TAG", "TAG", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Event", "needs", "retry", "NUMBER", "ec", "NUMBER", "CreateSnapshot", "calling", "handler", "TAG", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "No", "retry", "needed", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "a", "NUMBER", "ef", "NUMBER", "d", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "def", "af", "NUMBER", "db", "NUMBER", "ff", "NUMBER", "Error", "calling", "create_snapshot", "on", "vol", "cf", "NUMBER", "ea", "NUMBER", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzlocal", "be", "not", "JSON", "serializable", "Here", "s", "code", "that", "reproduces", "the", "issue", "import", "sys", "import", "os", "import", "boto", "NUMBER", "import", "json", "import", "lib", "import", "logging", "log", "logging", "NUMBER", "getLogger", "log", "NUMBER", "setLevel", "logging", "NUMBER", "DEBUG", "def", "test", "log", "logging", "NUMBER", "getLogger", "region", "us", "east", "NUMBER", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "region_name", "region", "profile_name", "ecomdev", "client", "session", "NUMBER", "client", "ec", "NUMBER", "try", "vol_id", "vol", "cf", "NUMBER", "ea", "NUMBER", "snap_desc", "vol_id", "_", "i", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "snap_desc", "snap_desc", "_", "FalconElasticsearch", "NUMBER", "log", "NUMBER", "info", "Creating", "snapshot", "s", "snap_desc", "snap_results", "client", "NUMBER", "create_snapshot", "VolumeId", "vol_id", "Description", "snap_desc", "log", "NUMBER", "info", "snap_results", "s", "json", "NUMBER", "dumps", "snap_results", "except", "Exception", "as", "ex", "log", "NUMBER", "info", "Error", "calling", "create_snapshot", "on", "s", "s", "vol_id", "str", "ex", "pass", "After", "more", "experimenting", "I", "realized", "that", "the", "log", "NUMBER", "info", "call", "be", "throw", "the", "exception", "and", "not", "the", "create_snapshot", "call", "NUMBER", "Why", "would", "json", "NUMBER", "dumps", "fail", "to", "deserialize", "the", "results", "from", "create_snapshot", "Here", "s", "the", "json", "StartTime", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzutc", "OwnerId", "NUMBER", "ResponseMetadata", "HTTPHeaders", "content", "type", "text", "xml", "charset", "UTF", "NUMBER", "date", "Thu", "NUMBER", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "transfer", "encoding", "chunked", "server", "AmazonEC", "NUMBER", "vary", "Accept", "Encoding", "RequestId", "NUMBER", "a", "a", "NUMBER", "NUMBER", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "f", "HTTPStatusCode", "NUMBER", "Encrypted", "False", "SnapshotId", "snap", "f", "NUMBER", "eb", "NUMBER", "Description", "vol", "cf", "NUMBER", "ea", "NUMBER", "_i", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "_FalconElasticsearch", "NUMBER", "State", "pending", "VolumeSize", "NUMBER", "Progress", "VolumeId", "vol", "cf", "NUMBER", "ea", "NUMBER", "Snap", "results", "has", "a", "datetime", "object", "in", "it", "NUMBER", "The", "json", "NUMBER", "dumps", "needs", "to", "have", "a", "custom", "function", "provide", "to", "help", "it", "encode", "objects", "with", "the", "datetime", "NUMBER", "datetime", "type", "NUMBER", "Something", "like", "this", "should", "work", "def", "encode_json", "element", "if", "isinstance", "element", "datetime", "NUMBER", "datetime", "return", "element", "NUMBER", "isoformat", "return", "element", "print", "json", "NUMBER", "dumps", "data", "default", "encode_json", "Similar", "to", "NUMBER", "but", "my", "use", "case", "requires", "bypassing", "deserialization", "of", "incoming", "JSON", "data", "NUMBER", "I", "download", "CloudWatch", "metrics", "from", "AWS", "and", "write", "it", "as", "JSON", "into", "a", "gzipped", "file", "to", "be", "use", "later", "NUMBER", "This", "means", "however", "that", "under", "current", "implementation", "I", "have", "to", "deserialize", "incoming", "JSON", "data", "just", "to", "serialize", "them", "to", "JSON", "again", "which", "comes", "with", "significant", "overhead", "NUMBER", "The", "following", "code", "throw", "boto", "NUMBER", "exception", "NUMBER", "ResourceLoadException", "ec", "NUMBER", "RouteTableAssociation", "has", "no", "load", "method", "import", "boto", "NUMBER", "rta", "boto", "NUMBER", "resource", "ec", "NUMBER", "NUMBER", "RouteTableAssociation", "id", "print", "rta", "NUMBER", "subnet_id", "Accessing", "id", "or", "route_table_association_id", "be", "OK", "but", "any", "other", "attribute", "throw", "this", "exception", "on", "the", "NUMBER", "line", "NUMBER", "I", "use", "a", "valid", "route", "table", "association", "id", "for", "my", "environment", "in", "test", "NUMBER", "I", "m", "use", "boto", "NUMBER", "version", "NUMBER", "on", "OS", "X", "NUMBER", "with", "Python", "NUMBER", "botocore", "be", "version", "NUMBER", "but", "I", "don", "t", "directly", "make", "reference", "to", "it", "NUMBER", "Is", "there", "a", "workaround", "or", "another", "way", "of", "get", "to", "the", "subnet", "and", "route", "table", "of", "a", "route", "table", "association", "One", "way", "to", "get", "to", "these", "attributes", "be", "through", "the", "RouteTable", "s", "association", "collection", "LINK", "EC", "NUMBER", "RouteTable", "NUMBER", "associations", "NUMBER", "So", "something", "like", "this", "python", "import", "boto", "NUMBER", "rt", "boto", "NUMBER", "resource", "ec", "NUMBER", "NUMBER", "RouteTable", "id", "for", "rta", "in", "rt", "NUMBER", "associations", "NUMBER", "all", "print", "rta", "NUMBER", "subnet_id", "Let", "us", "know", "if", "that", "helps", "NUMBER", "PR", "update", "to", "use", "isinstance", "as", "you", "suggested", "NUMBER", "Thanks", "for", "the", "review", "Hi", "I", "be", "attempting", "to", "use", "describe_load_balancer_policies", "to", "figure", "out", "the", "active", "load", "balancer", "policy", "on", "an", "ELB", "NUMBER", "When", "I", "use", "the", "AWS", "CLI", "command", "aws", "elb", "describe", "load", "balancer", "policies", "load", "balancer", "name", "TESTELB", "policy", "name", "TAG", "query", "PolicyDescriptions", "NUMBER", "NUMBER", "ReferenceSecurityPolicy", "PolicyAttributeDescriptions", "NUMBER", "NUMBER", "AttributeValue", "output", "table", "I", "get", "the", "proper", "policy", "NUMBER", "When", "use", "boto", "NUMBER", "the", "equivalent", "should", "roughly", "be", "for", "listener", "in", "elb", "ListenerDescriptions", "for", "elb_pol_attrib", "in", "self", "NUMBER", "elb", "NUMBER", "describe_load_balancer_policies", "LoadBalancerName", "elb_name", "PolicyNames", "listener", "PolicyNames", "PolicyDescriptions", "for", "pol_desc", "in", "elb_pol_attrib", "PolicyAttributeDescriptions", "go", "through", "pairs", "of", "dicts", "for", "key", "name", "value", "value", "style", "pairs", "if", "Reference", "Security", "Policy", "in", "pol_desc", "AttributeName", "ref_policy", "pol_desc", "AttributeValue", "However", "when", "use", "boto", "NUMBER", "it", "returns", "a", "list", "of", "every", "policy", "that", "has", "ever", "be", "applied", "to", "the", "load", "balancer", "and", "I", "do", "not", "see", "any", "indication", "of", "which", "one", "be", "active", "NUMBER", "I", "think", "your", "JMESPath", "expression", "in", "the", "CLI", "example", "be", "slightly", "different", "than", "how", "you", "be", "iterating", "through", "the", "dictionaries", "in", "the", "Python", "example", "NUMBER", "In", "the", "JMESPath", "query", "with", "the", "CLI", "you", "be", "not", "checking", "for", "Reference", "Security", "Policy", "in", "pol_desc", "AttributeName", "rather", "you", "be", "creating", "a", "new", "dictionary", "where", "ReferenceSecurityPolicy", "be", "the", "key", "NUMBER", "So", "I", "think", "you", "will", "need", "to", "remove", "that", "if", "check", "or", "figure", "out", "why", "that", "if", "check", "be", "not", "catching", "the", "value", "you", "be", "looking", "for", "NUMBER", "One", "thing", "that", "may", "help", "if", "you", "be", "trying", "to", "replicate", "what", "be", "happening", "in", "the", "CLI", "to", "a", "python", "script", "be", "try", "use", "the", "Python", "library", "for", "JMESPath", "LINK", "NUMBER", "You", "should", "be", "able", "to", "take", "the", "query", "from", "the", "CLI", "example", "and", "use", "it", "directly", "on", "the", "response", "NUMBER", "Let", "us", "know", "if", "that", "helps", "or", "if", "you", "have", "anymore", "question", "NUMBER", "This", "be", "totally", "still", "an", "issue", "NUMBER", "Jmespath", "or", "not", "NUMBER", "There", "be", "no", "indicator", "to", "the", "active", "policy", "NUMBER", "The", "ReferencePolicy", "refers", "to", "any", "policy", "that", "has", "ever", "be", "set", "NUMBER", "So", "you", "ll", "get", "the", "current", "and", "the", "previous", "trying", "to", "query", "that", "way", "NUMBER", "Any", "advice", "would", "be", "greatly", "appreciated", "NUMBER", "python", "bucket", "s", "NUMBER", "Bucket", "bucket_name", "obj", "bucket", "NUMBER", "Object", "key", "be", "there", "a", "way", "to", "add", "metadata", "before", "uploading", "the", "file", "obj", "NUMBER", "upload_file", "filename", "tmp", "obj", "NUMBER", "load", "print", "type", "obj", "obj", "NUMBER", "metadata", "Date", "_metadata", "obj", "NUMBER", "load", "I", "cannot", "see", "where", "this", "Metadata", "be", "be", "set", "as", "when", "I", "see", "on", "S", "NUMBER", "GUI", "as", "well", "as", "when", "I", "use", "the", "api", "bit", "return", "an", "empty", "Metadata", "var", "In", "general", "calling", "load", "will", "only", "update", "the", "S", "NUMBER", "Object", "object", "and", "will", "never", "update", "the", "actual", "remote", "object", "NUMBER", "To", "update", "the", "metadata", "with", "upload_file", "try", "add", "Metadata", "with", "the", "ExtraArgs", "parameter", "as", "shown", "in", "an", "example", "under", "this", "section", "LINK", "uploads", "NUMBER", "Let", "us", "know", "if", "you", "have", "anymore", "question", "NUMBER", "I", "ve", "be", "work", "through", "looking", "at", "adopting", "Python", "NUMBER", "and", "I", "ve", "be", "utilizing", "the", "NUMBER", "flag", "to", "help", "idenitfy", "issue", "with", "Python", "NUMBER", "Here", "s", "a", "quick", "write", "up", "I", "did", "last", "week", "LINK", "The", "NUMBER", "flagged", "a", "few", "issue", "in", "boto", "NUMBER", "worth", "fix", "namely", "around", "eq", "shadowing", "hash", "in", "PY", "NUMBER", "Fixing", "these", "issue", "will", "help", "make", "the", "NUMBER", "flag", "less", "noisey", "for", "folks", "run", "boto", "NUMBER", "in", "production", "NUMBER", "JordonPhillips", "Are", "these", "classes", "guaranteed", "to", "be", "Immutable", "LINK", "L", "NUMBER", "L", "NUMBER", "looks", "like", "it", "might", "change", "state", "NUMBER", "This", "be", "the", "safer", "of", "the", "two", "options", "NUMBER", "These", "classes", "be", "already", "unhashable", "in", "Python", "NUMBER", "this", "enforces", "that", "same", "unhashability", "in", "Python", "NUMBER", "LINK", "s", "NUMBER", "S", "NUMBER", "Client", "NUMBER", "upload_file", "This", "should", "list", "or", "at", "least", "link", "to", "the", "information", "in", "here", "LINK", "The", "maximum", "number", "of", "records", "returned", "on", "a", "describe_auto_scaling_groups", "be", "hardcoded", "to", "NUMBER", "This", "means", "that", "if", "you", "have", "NUMBER", "ASG", "s", "in", "the", "same", "account", "boto", "NUMBER", "will", "ignore", "the", "NUMBER", "NUMBER", "I", "find", "this", "problem", "use", "ansible", "and", "have", "traced", "it", "back", "to", "the", "describe_auto_scaling_groups", "call", "NUMBER", "So", "I", "be", "afraid", "I", "cannot", "provide", "many", "examples", "of", "how", "one", "would", "recreate", "this", "apart", "from", "creating", "NUMBER", "ASGs", "and", "trying", "to", "describe", "them", "all", "then", "count", "the", "number", "returned", "NUMBER", "A", "nice", "way", "to", "keep", "within", "this", "limit", "would", "be", "with", "the", "addition", "of", "filtering", "by", "tags", "NUMBER", "Looks", "to", "be", "the", "same", "NUMBER", "but", "did", "not", "know", "if", "i", "could", "reopen", "NUMBER", "I", "m", "write", "unit", "test", "for", "an", "AWS", "Lambda", "copy", "function", "but", "I", "don", "t", "have", "a", "dry", "run", "option", "NUMBER", "Am", "I", "miss", "something", "LINK", "S", "NUMBER", "Client", "NUMBER", "copy_object", "Stubber", "seems", "like", "it", "will", "work", "for", "me", "NUMBER", "Thanks", "for", "the", "suggestion", "NUMBER", "I", "was", "under", "the", "impression", "that", "Boto", "was", "trying", "to", "replicate", "the", "CLI", "options", "NUMBER", "Most", "of", "the", "aws", "cli", "commands", "have", "a", "dryrun", "flag", "that", "can", "be", "set", "NUMBER", "LINK", "I", "wanna", "uploading", "lots", "of", "file", "to", "s", "NUMBER", "service", "every", "time", "NUMBER", "I", "made", "NUMBER", "workers", "to", "upload", "file", "use", "thread", "NUMBER", "But", "a", "message", "Resetting", "drop", "connection", "be", "shown", "repeatedly", "NUMBER", "I", "guess", "s", "NUMBER", "connection", "be", "newly", "opened", "per", "one", "time", "NUMBER", "How", "can", "I", "set", "connection", "to", "keep", "alive", "import", "threading", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "class", "Worker", "threading", "NUMBER", "Thread", "NUMBER", "def", "run", "self", "s", "NUMBER", "Object", "bucket", "key", "NUMBER", "put", "Body", "body", "I", "suggest", "that", "you", "move", "the", "boto", "NUMBER", "resource", "s", "NUMBER", "into", "the", "thread", "NUMBER", "I", "believe", "the", "general", "advice", "be", "to", "have", "one", "resource", "per", "thread", "as", "they", "re", "not", "thread", "safe", "NUMBER", "I", "moved", "boto", "NUMBER", "resource", "s", "NUMBER", "into", "each", "thread", "but", "the", "same", "message", "be", "shown", "NUMBER", "I", "created", "new", "session", "in", "each", "thread", "NUMBER", "But", "Resetting", "drop", "connection", "message", "still", "be", "shown", "NUMBER", "I", "guess", "S", "NUMBER", "doesn", "t", "support", "Keep", "Alive", "or", "I", "quickly", "send", "request", "to", "server", "repeatedly", "NUMBER", "Thank", "you", "for", "your", "help", "NUMBER", "Is", "there", "a", "simple", "way", "for", "one", "to", "retrieve", "the", "x", "amzn", "RequestId", "for", "a", "given", "query", "NUMBER", "Hello", "I", "m", "trying", "to", "diagnose", "the", "problem", "of", "a", "script", "which", "downloads", "file", "from", "S", "NUMBER", "slowing", "down", "over", "time", "then", "recovering", "on", "restart", "of", "the", "script", "NUMBER", "See", "this", "graph", "graph", "LINK", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "png", "What", "seems", "to", "happen", "be", "that", "this", "message", "gets", "display", "once", "for", "the", "first", "time", "round", "the", "loop", "then", "twice", "the", "second", "time", "round", "and", "third", "the", "third", "time", "round", "etc", "NUMBER", "log", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "hooks", "NUMBER", "py", "NUMBER", "botocore", "NUMBER", "hooks", "_emit", "Event", "request", "created", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "u", "NUMBER", "cfunction", "enable_upload_callbacks", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "df", "NUMBER", "e", "NUMBER", "u", "NUMBER", "e", "r", "n", "stream", "stdout", "time", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "and", "then", "log", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "hooks", "NUMBER", "py", "NUMBER", "botocore", "NUMBER", "hooks", "_emit", "Event", "request", "created", "NUMBER", "s", "NUMBER", "GetObject", "calling", "handler", "u", "NUMBER", "cfunction", "disable_upload_callbacks", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "df", "NUMBER", "u", "NUMBER", "e", "r", "n", "stream", "stdout", "time", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "There", "be", "some", "detailed", "DEBUG", "logs", "that", "should", "show", "what", "be", "happening", "here", "log", "NUMBER", "txt", "LINK", "NUMBER", "but", "in", "summary", "what", "I", "basically", "do", "in", "my", "script", "be", "this", "create", "an", "aws", "s", "NUMBER", "client", "in", "a", "loop", "connect", "to", "a", "bucket", "use", "the", "s", "NUMBER", "client", "download", "a", "file", "from", "a", "bucket", "use", "the", "bucket", "object", "Any", "help", "with", "this", "would", "be", "greatly", "appreciated", "NUMBER", "If", "you", "need", "more", "information", "please", "request", "it", "NUMBER", "EDIT", "Copied", "wrong", "log", "message", "as", "example", "NUMBER", "kyleknap", "I", "will", "give", "you", "a", "code", "snippet", "on", "Monday", "but", "I", "m", "use", "download_file", "NUMBER", "The", "debug", "logs", "be", "mention", "in", "the", "original", "ticket", "log", "NUMBER", "txt", "LINK", "kyleknap", "OK", "here", "s", "some", "sample", "code", "that", "basically", "exhibits", "the", "slow", "down", "NUMBER", "I", "basically", "left", "this", "code", "run", "over", "the", "weekend", "on", "my", "dev", "machine", "and", "saw", "_no_", "slow", "down", "but", "be", "experience", "the", "slow", "down", "on", "a", "Docker", "container", "NUMBER", "Both", "instances", "be", "connected", "to", "the", "same", "internet", "facing", "proxy", "NUMBER", "I", "ve", "had", "time", "to", "think", "about", "this", "over", "the", "weekend", "and", "I", "think", "what", "you", "re", "saying", "be", "right", "If", "the", "bandwidth", "be", "be", "maxed", "out", "and", "boto", "NUMBER", "puts", "retries", "back", "in", "the", "same", "pool", "as", "new", "connections", "we", "ll", "see", "a", "gradual", "slow", "down", "as", "the", "percentage", "of", "retries", "versus", "new", "connections", "increases", "NUMBER", "As", "I", "ve", "said", "before", "the", "logs", "be", "in", "the", "original", "ticket", "NUMBER", "python", "DL", "from", "S", "NUMBER", "in", "a", "loop", "having", "previously", "uploaded", "NUMBER", "random", "NUMBER", "K", "samples", "NUMBER", "import", "boto", "NUMBER", "import", "random", "import", "os", "s", "NUMBER", "_client", "boto", "NUMBER", "resource", "s", "NUMBER", "while", "True", "bkt", "s", "NUMBER", "_client", "NUMBER", "Bucket", "testbucket", "random_num", "str", "random", "NUMBER", "randint", "NUMBER", "NUMBER", "bkt", "NUMBER", "download_file", "Key", "random_num", "Filename", "tmp", "random_num", "os", "NUMBER", "remove", "tmp", "random_num", "kyleknap", "I", "ve", "successfully", "run", "a", "memory", "profiler", "call", "dowser", "NUMBER", "LINK", "mats", "NUMBER", "org", "NUMBER", "NUMBER", "debugging", "pythons", "memory", "usage", "with", "dowser", "within", "the", "Docker", "container", "and", "connected", "into", "it", "via", "the", "build", "in", "webserver", "NUMBER", "I", "can", "confirm", "that", "there", "be", "two", "lists", "that", "be", "ever", "growing", "examples", "of", "which", "be", "list", "of", "len", "NUMBER", "TAG", "TAG", "TAG", "The", "_parent_", "of", "the", "ever", "growing", "list", "be", "botocore", "NUMBER", "hooks", "NUMBER", "NodeList", "via", "its", "last", "attribute", "NodeList", "first", "TAG", "TAG", "NUMBER", "in", "home", "centos", "django", "chipmunk", "darkshadow", "lib", "python", "NUMBER", "site", "package", "from", "boto", "NUMBER", "Requirement", "already", "up", "to", "date", "jmespath", "TAG", "NUMBER", "in", "home", "centos", "django", "chipmunk", "darkshadow", "lib", "python", "NUMBER", "site", "package", "from", "boto", "NUMBER", "Requirement", "already", "up", "to", "date", "s", "NUMBER", "transfer", "TAG", "NUMBER", "in", "home", "centos", "django", "chipmunk", "darkshadow", "lib", "python", "NUMBER", "site", "package", "from", "boto", "NUMBER", "Requirement", "already", "up", "to", "date", "python", "dateutil", "TAG", "NUMBER", "in", "home", "centos", "django", "chipmunk", "darkshadow", "lib", "python", "NUMBER", "site", "package", "from", "botocore", "TAG", "NUMBER", "boto", "NUMBER", "Requirement", "already", "up", "to", "date", "docutils", "NUMBER", "in", "home", "centos", "django", "chipmunk", "darkshadow", "lib", "python", "NUMBER", "site", "package", "from", "botocore", "TAG", "NUMBER", "boto", "NUMBER", "Requirement", "already", "up", "to", "date", "futures", "TAG", "NUMBER", "python_version", "NUMBER", "or", "python_version", "NUMBER", "in", "home", "centos", "django", "chipmunk", "darkshadow", "lib", "python", "NUMBER", "site", "package", "from", "s", "NUMBER", "transfer", "TAG", "NUMBER", "boto", "NUMBER", "Requirement", "already", "up", "to", "date", "six", "NUMBER", "in", "home", "centos", "django", "chipmunk", "darkshadow", "lib", "python", "NUMBER", "site", "package", "from", "python", "dateutil", "TAG", "NUMBER", "botocore", "TAG", "NUMBER", "boto", "NUMBER", "I", "had", "the", "same", "issue", "but", "had", "to", "update", "botocore", "to", "get", "it", "to", "work", "NUMBER", "I", "would", "have", "thought", "that", "update", "boto", "NUMBER", "would", "have", "forced", "an", "update", "to", "botocore", "as", "well", "but", "it", "doesn", "t", "look", "that", "way", "NUMBER", "I", "m", "on", "NUMBER", "import", "boto", "NUMBER", "url", "LINK", "redacted", "len", "boto", "NUMBER", "client", "sqs", "us", "east", "NUMBER", "NUMBER", "list_dead_letter_source_queues", "QueueUrl", "url", "queueUrls", "NUMBER", "len", "list", "boto", "NUMBER", "resource", "sqs", "us", "east", "NUMBER", "NUMBER", "Queue", "url", "NUMBER", "dead_letter_source_queues", "NUMBER", "all", "NUMBER", "For", "some", "reason", "I", "cannot", "list", "the", "dead", "letter", "queues", "use", "the", "resource", "the", "client", "works", "fine", "though", "NUMBER", "I", "digged", "a", "bit", "and", "saw", "that", "the", "paginator", "received", "the", "queueUrls", "correctly", "in", "the", "response", "but", "returns", "an", "empty", "collection", "NUMBER", "I", "notice", "the", "searchpath", "was", "None", "should", "it", "be", "point", "to", "queueUrls", "See", "issue", "LINK", "I", "mainly", "wanted", "to", "point", "out", "this", "be", "an", "issue", "on", "boto", "NUMBER", "as", "well", "NUMBER", "And", "NUMBER", "years", "later", "its", "still", "an", "issue", "NUMBER", "Would", "love", "to", "see", "it", "get", "some", "attention", "NUMBER", "My", "apologies", "looks", "like", "this", "be", "a", "service", "issue", "NUMBER", "I", "will", "try", "to", "file", "a", "report", "through", "aws", "support", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "OperationModel", "name", "DownloadDBLogFilePortion", "verify_ssl", "True", "with", "params", "url", "LINK", "west", "NUMBER", "amazonaws", "NUMBER", "com", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "ARCH", "Botocore", "NUMBER", "body", "Marker", "NUMBER", "NUMBER", "LogFileName", "error", "postgresql", "NUMBER", "log", "NUMBER", "XX", "XX", "XX", "DBInstanceIdentifier", "xxxxxxxx", "Version", "NUMBER", "NUMBER", "NUMBER", "Action", "DownloadDBLogFilePortion", "method", "POST", "query_string", "url_path", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "s", "NUMBER", "DownloadDBLogFilePortion", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "POST", "host", "rds", "NUMBER", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "host", "x", "amz", "date", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "west", "NUMBER", "rds", "aws", "NUMBER", "_request", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "eeaafa", "NUMBER", "a", "NUMBER", "XXXXXX", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "a", "NUMBER", "XX", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "XXX", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "bcfXXX", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "POST", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "date", "Tue", "NUMBER", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "length", "NUMBER", "content", "type", "text", "xml", "x", "amzn", "requestid", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "bca", "NUMBER", "b", "NUMBER", "connection", "close", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "b", "TAG", "n", "TAG", "n", "TAG", "Sender", "TAG", "n", "TAG", "InvalidParameterValue", "TAG", "n", "TAG", "This", "file", "contains", "binary", "data", "and", "should", "be", "downloaded", "instead", "of", "viewed", "NUMBER", "TAG", "n", "TAG", "n", "TAG", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "bca", "NUMBER", "b", "NUMBER", "TAG", "n", "TAG", "n", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "DownloadDBLogFilePortion", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "I", "ve", "be", "use", "lots", "of", "boto", "NUMBER", "calls", "in", "my", "Flask", "app", "for", "some", "time", "but", "the", "switch", "to", "the", "latest", "boto", "NUMBER", "v", "NUMBER", "has", "broken", "my", "Celery", "workers", "NUMBER", "Something", "that", "may", "be", "unique", "about", "my", "app", "be", "that", "I", "use", "S", "NUMBER", "to", "download", "a", "secure", "environment", "variables", "file", "before", "launching", "my", "app", "or", "workers", "NUMBER", "It", "appears", "that", "the", "new", "boto", "NUMBER", "works", "with", "my", "app", "but", "hangs", "when", "launching", "the", "Celery", "worker", "NUMBER", "I", "would", "temporarily", "downgrade", "my", "boto", "NUMBER", "to", "avoid", "the", "problem", "but", "its", "be", "a", "long", "time", "since", "the", "last", "release", "and", "I", "need", "the", "elbv", "NUMBER", "support", "that", "only", "comes", "in", "NUMBER", "I", "ve", "created", "a", "tiny", "version", "of", "my", "worker", "worker", "NUMBER", "py", "to", "demonstrate", "the", "problem", "NUMBER", "I", "ve", "verify", "that", "use", "the", "previous", "version", "boto", "NUMBER", "NUMBER", "results", "in", "the", "worker", "launching", "properly", "NUMBER", "I", "see", "all", "prints", "and", "the", "Celery", "worker", "banner", "output", "NUMBER", "If", "I", "install", "boto", "NUMBER", "NUMBER", "then", "the", "second", "print", "statement", "Download", "complete", "be", "never", "reached", "NUMBER", "Also", "note", "that", "I", "tried", "following", "the", "new", "doc", "example", "with", "boto", "NUMBER", "resource", "and", "use", "s", "NUMBER", "meta", "NUMBER", "client", "but", "that", "fail", "as", "well", "NUMBER", "python", "Stub", "Celery", "worker", "to", "demonstrate", "bug", "in", "Boto", "NUMBER", "NUMBER", "Works", "fine", "with", "previous", "version", "Boto", "NUMBER", "NUMBER", "Test", "with", "celery", "worker", "A", "worker", "NUMBER", "celery", "from", "flask", "import", "Flask", "from", "celery", "import", "Celery", "import", "boto", "NUMBER", "import", "tempfile", "celery", "Celery", "__name__", "broker", "amqp", "guest", "guest", "localhost", "NUMBER", "app", "Flask", "__name__", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "region_name", "us", "west", "NUMBER", "env_file", "APPNAME", "NUMBER", "APPSTAGE", "NUMBER", "env", "with", "tempfile", "NUMBER", "NamedTemporaryFile", "as", "s", "NUMBER", "_file", "print", "Downloading", "file", "NUMBER", "response", "s", "NUMBER", "download_file", "APPBUCKET", "env_file", "s", "NUMBER", "_file", "NUMBER", "name", "print", "Download", "complete", "You", "can", "test", "it", "by", "run", "the", "following", "at", "the", "command", "line", "celery", "worker", "A", "worker", "NUMBER", "celery", "Also", "note", "that", "just", "run", "the", "code", "downloads", "the", "file", "just", "fine", "with", "NUMBER", "python", "worker", "NUMBER", "py", "Here", "s", "debug", "log", "output", "up", "to", "where", "it", "hangs", "NUMBER", "celery", "worker", "A", "worker", "NUMBER", "celery", "b", "amqp", "guest", "guest", "localhost", "NUMBER", "DEBUG", "botocore", "NUMBER", "credentials", "Skipping", "environment", "variable", "credential", "check", "because", "profile", "name", "was", "explicitly", "set", "NUMBER", "DEBUG", "botocore", "NUMBER", "credentials", "Looking", "for", "credentials", "via", "env", "INFO", "botocore", "NUMBER", "credentials", "Found", "credentials", "in", "environment", "variables", "NUMBER", "DEBUG", "botocore", "NUMBER", "loaders", "Loading", "JSON", "file", "NUMBER", "virtualenv", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "endpoints", "NUMBER", "json", "DEBUG", "botocore", "NUMBER", "loaders", "Loading", "JSON", "file", "NUMBER", "virtualenv", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "service", "NUMBER", "json", "DEBUG", "botocore", "NUMBER", "loaders", "Loading", "JSON", "file", "NUMBER", "virtualenv", "lib", "python", "NUMBER", "site", "package", "botocore", "data", "_retry", "NUMBER", "json", "DEBUG", "botocore", "NUMBER", "client", "Registering", "retry", "handlers", "for", "service", "s", "NUMBER", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "creating", "client", "class", "NUMBER", "s", "NUMBER", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "args", "The", "s", "NUMBER", "config", "key", "be", "not", "a", "dictionary", "type", "ignoring", "its", "value", "of", "None", "DEBUG", "botocore", "NUMBER", "endpoint", "Setting", "s", "NUMBER", "timeout", "as", "NUMBER", "NUMBER", "Downloading", "file", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Acquiring", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "DownloadSubmissionTask", "transfer_future", "TAG", "about", "to", "wait", "for", "the", "following", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "DownloadSubmissionTask", "transfer_future", "TAG", "do", "waiting", "for", "dependent", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "Executing", "task", "DownloadSubmissionTask", "transfer_future", "TAG", "with", "kwargs", "io_executor", "TAG", "request_executor", "TAG", "osutil", "TAG", "client", "TAG", "transfer_future", "TAG", "config", "TAG", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "before", "call", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "before", "call", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "endpoint", "Making", "request", "for", "OperationModel", "name", "HeadObject", "verify_ssl", "True", "with", "params", "body", "url", "u", "LINK", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "APPBUCKET", "APPNAME", "NUMBER", "APPSTAGE", "NUMBER", "env", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Darwin", "NUMBER", "Botocore", "NUMBER", "context", "client_region", "us", "west", "NUMBER", "signing", "bucket", "APPBUCKET", "has_streaming_input", "False", "client_config", "TAG", "query_string", "url_path", "u", "APPBUCKET", "APPNAME", "NUMBER", "APPSTAGE", "NUMBER", "env", "method", "u", "HEAD", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "request", "created", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "request", "created", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "before", "sign", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "utils", "Checking", "for", "DNS", "compatible", "bucket", "for", "LINK", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "APPBUCKET", "APPNAME", "NUMBER", "APPSTAGE", "NUMBER", "env", "DEBUG", "botocore", "NUMBER", "utils", "Not", "change", "URI", "bucket", "be", "not", "DNS", "compatible", "APPBUCKET", "DEBUG", "botocore", "NUMBER", "auth", "Calculating", "signature", "use", "hmacv", "NUMBER", "auth", "NUMBER", "DEBUG", "botocore", "NUMBER", "auth", "HTTP", "request", "method", "HEAD", "DEBUG", "botocore", "NUMBER", "auth", "StringToSign", "HEAD", "Tue", "NUMBER", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "APPBUCKET", "APPNAME", "NUMBER", "APPSTAGE", "NUMBER", "env", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "request", "created", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "And", "in", "case", "it", "helps", "here", "s", "the", "debug", "log", "output", "after", "I", "hit", "ctl", "c", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "futures", "TransferCoordinator", "cancel", "call", "DEBUG", "botocore", "NUMBER", "endpoint", "Sending", "http", "request", "TAG", "INFO", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "Starting", "new", "HTTPS", "connection", "NUMBER", "s", "NUMBER", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "DEBUG", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "HEAD", "APPBUCKET", "APPNAME", "NUMBER", "APPSTAGE", "NUMBER", "env", "HTTP", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "botocore", "NUMBER", "parsers", "Response", "headers", "content", "length", "NUMBER", "x", "amz", "id", "NUMBER", "xxxxxxxxxxxx", "accept", "ranges", "bytes", "server", "AmazonS", "NUMBER", "last", "modify", "Tue", "NUMBER", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "x", "amz", "request", "id", "xxxxxxxxxxxx", "etag", "xxxxxxxxxxxx", "date", "Tue", "NUMBER", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "x", "amz", "version", "id", "xxxxxxxxxxxx", "x", "amz", "server", "side", "encryption", "AES", "NUMBER", "content", "type", "application", "octet", "stream", "DEBUG", "botocore", "NUMBER", "parsers", "Response", "body", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "botocore", "NUMBER", "retryhandler", "No", "retry", "needed", "NUMBER", "DEBUG", "botocore", "NUMBER", "hooks", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "futures", "Submitting", "task", "GetObjectTask", "extra_args", "bucket", "APPBUCKET", "key", "APPNAME", "NUMBER", "APPSTAGE", "NUMBER", "env", "to", "executor", "TAG", "for", "transfer", "request", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Acquiring", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "GetObjectTask", "extra_args", "bucket", "APPBUCKET", "key", "APPNAME", "NUMBER", "APPSTAGE", "NUMBER", "env", "about", "to", "wait", "for", "the", "following", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "GetObjectTask", "extra_args", "bucket", "APPBUCKET", "key", "APPNAME", "NUMBER", "APPSTAGE", "NUMBER", "env", "do", "waiting", "for", "dependent", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Releasing", "acquire", "NUMBER", "None", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "futures", "Submitting", "task", "IORenameFileTask", "final_filename", "var", "folders", "kd", "xxxxxx", "to", "executor", "TAG", "for", "transfer", "request", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Acquiring", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "IORenameFileTask", "final_filename", "var", "folders", "kd", "xxxxxx", "about", "to", "wait", "for", "the", "following", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "IORenameFileTask", "final_filename", "var", "folders", "kd", "xxxxxx", "do", "waiting", "for", "dependent", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Releasing", "acquire", "NUMBER", "None", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Releasing", "acquire", "NUMBER", "None", "And", "here", "be", "the", "key", "pip", "package", "amqp", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "celery", "NUMBER", "Flask", "NUMBER", "kombu", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "Any", "luck", "reproducing", "this", "Also", "it", "fail", "the", "same", "way", "if", "I", "use", "S", "NUMBER", "Transfer", "instead", "of", "the", "client", "when", "calling", "download_file", "I", "be", "able", "to", "reproduce", "it", "NUMBER", "I", "be", "looking", "into", "why", "it", "may", "be", "happening", "NUMBER", "Yeah", "this", "be", "really", "interesting", "NUMBER", "So", "I", "have", "a", "script", "that", "outputs", "all", "of", "the", "thread", "traces", "where", "they", "currently", "be", "deadlocked", "and", "this", "be", "what", "I", "be", "seeing", "Downloading", "file", "NUMBER", "ThreadID", "NUMBER", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "lib", "python", "NUMBER", "threading", "NUMBER", "py", "line", "NUMBER", "in", "__bootstrap", "self", "NUMBER", "__bootstrap_inner", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "lib", "python", "NUMBER", "threading", "NUMBER", "py", "line", "NUMBER", "in", "__bootstrap_inner", "self", "NUMBER", "run", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "lib", "python", "NUMBER", "threading", "NUMBER", "py", "line", "NUMBER", "in", "run", "self", "NUMBER", "__target", "self", "NUMBER", "__args", "self", "NUMBER", "__kwargs", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "envs", "boto", "NUMBER", "NUMBER", "lib", "python", "NUMBER", "site", "package", "concurrent", "futures", "thread", "NUMBER", "py", "line", "NUMBER", "in", "_worker", "work_item", "NUMBER", "run", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "envs", "boto", "NUMBER", "NUMBER", "lib", "python", "NUMBER", "site", "package", "concurrent", "futures", "thread", "NUMBER", "py", "line", "NUMBER", "in", "run", "result", "self", "NUMBER", "fn", "self", "NUMBER", "args", "self", "NUMBER", "kwargs", "File", "Users", "kyleknap", "GitHub", "s", "NUMBER", "transfer", "s", "NUMBER", "transfer", "tasks", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "return", "self", "NUMBER", "_execute_main", "kwargs", "File", "Users", "kyleknap", "GitHub", "s", "NUMBER", "transfer", "s", "NUMBER", "transfer", "tasks", "NUMBER", "py", "line", "NUMBER", "in", "_execute_main", "return_value", "self", "NUMBER", "_main", "kwargs", "File", "Users", "kyleknap", "GitHub", "s", "NUMBER", "transfer", "s", "NUMBER", "transfer", "tasks", "NUMBER", "py", "line", "NUMBER", "in", "_main", "self", "NUMBER", "_submit", "transfer_future", "transfer_future", "kwargs", "File", "Users", "kyleknap", "GitHub", "s", "NUMBER", "transfer", "s", "NUMBER", "transfer", "download", "NUMBER", "py", "line", "NUMBER", "in", "_submit", "transfer_future", "NUMBER", "meta", "NUMBER", "call_args", "NUMBER", "extra_args", "File", "Users", "kyleknap", "GitHub", "botocore", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Users", "kyleknap", "GitHub", "botocore", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "Users", "kyleknap", "GitHub", "botocore", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "Users", "kyleknap", "GitHub", "botocore", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "Users", "kyleknap", "GitHub", "botocore", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "prepared_request", "self", "NUMBER", "prepare_request", "request", "File", "Users", "kyleknap", "GitHub", "botocore", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "prepare_request", "return", "request", "NUMBER", "prepare", "File", "Users", "kyleknap", "GitHub", "botocore", "botocore", "awsrequest", "NUMBER", "py", "line", "NUMBER", "in", "prepare", "p", "NUMBER", "prepare_url", "self", "NUMBER", "url", "self", "NUMBER", "params", "File", "Users", "kyleknap", "GitHub", "botocore", "botocore", "vendored", "request", "models", "NUMBER", "py", "line", "NUMBER", "in", "prepare_url", "host", "host", "NUMBER", "encode", "idna", "NUMBER", "decode", "utf", "NUMBER", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "envs", "boto", "NUMBER", "NUMBER", "lib", "python", "NUMBER", "encodings", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "search_function", "level", "NUMBER", "ThreadID", "NUMBER", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "boto", "NUMBER", "NUMBER", "bin", "celery", "line", "NUMBER", "in", "TAG", "sys", "NUMBER", "exit", "main", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "envs", "boto", "NUMBER", "NUMBER", "lib", "python", "NUMBER", "site", "package", "celery", "__main__", "NUMBER", "py", "line", "NUMBER", "in", "main", "main", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "envs", "boto", "NUMBER", "NUMBER", "lib", "python", "NUMBER", "site", "package", "celery", "bin", "celery", "NUMBER", "py", "line", "NUMBER", "in", "main", "cmd", "NUMBER", "execute_from_commandline", "argv", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "envs", "boto", "NUMBER", "NUMBER", "lib", "python", "NUMBER", "site", "package", "celery", "bin", "celery", "NUMBER", "py", "line", "NUMBER", "in", "execute_from_commandline", "super", "CeleryCommand", "self", "NUMBER", "execute_from_commandline", "argv", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "envs", "boto", "NUMBER", "NUMBER", "lib", "python", "NUMBER", "site", "package", "celery", "bin", "base", "NUMBER", "py", "line", "NUMBER", "in", "execute_from_commandline", "argv", "self", "NUMBER", "setup_app_from_commandline", "argv", "File", "Users", "kyleknap", "NUMBER", "pyenv", "version", "NUMBER", "envs", "boto", "NUMBER", "NUMBER", "lib", "python", "NUMBER", "site", "package", "celery", "bin", "base", "NUMBER", "py", "line", "NUMBER", "in", "setup_app_from_commandline", "Based", "on", "the", "output", "it", "looks", "like", "it", "be", "deadlocking", "in", "the", "imports", "NUMBER", "Here", "LINK", "__init__", "NUMBER", "py", "L", "NUMBER", "and", "here", "LINK", "L", "NUMBER", "I", "be", "not", "quite", "sure", "why", "this", "cause", "a", "deadlock", "as", "I", "do", "not", "know", "too", "much", "about", "the", "internals", "of", "celery", "but", "I", "figured", "I", "can", "pass", "this", "on", "NUMBER", "I", "will", "keep", "looking", "into", "this", "and", "see", "if", "there", "be", "any", "exist", "issue", "about", "this", "but", "will", "keep", "you", "update", "NUMBER", "I", "ve", "opened", "an", "issue", "in", "Celery", "to", "track", "this", "NUMBER", "Maybe", "they", "be", "willing", "to", "research", "in", "parallel", "NUMBER", "LINK", "Are", "you", "doing", "this", "at", "module", "level", "The", "example", "do", "but", "just", "want", "to", "verify", "this", "be", "also", "the", "cause", "at", "the", "source", "of", "the", "issue", "NUMBER", "If", "so", "note", "that", "you", "should", "never", "start", "a", "thread", "at", "compile", "time", "in", "Python", "as", "it", "will", "deadlock", "NUMBER", "The", "same", "may", "be", "the", "case", "with", "acquiring", "a", "mutex", "I", "believe", "NUMBER", "Sorry", "if", "I", "don", "t", "understand", "fully", "but", "be", "ask", "talking", "about", "my", "code", "If", "so", "I", "m", "not", "sure", "what", "other", "method", "I", "should", "be", "following", "when", "code", "my", "Celery", "worker", "NUMBER", "I", "ve", "followed", "the", "Celery", "docs", "carefully", "and", "this", "has", "be", "work", "fine", "for", "me", "until", "the", "latest", "boto", "NUMBER", "release", "a", "short", "while", "ago", "NUMBER", "The", "example", "I", "provide", "be", "the", "smallest", "example", "worker", "I", "could", "code", "that", "I", "think", "should", "work", "and", "do", "on", "all", "older", "version", "of", "boto", "NUMBER", "NUMBER", "If", "you", "can", "suggest", "another", "approach", "for", "worker", "NUMBER", "py", "that", "function", "as", "a", "worker", "and", "do", "not", "exhibit", "the", "problem", "NUMBER", "If", "you", "re", "not", "ask", "about", "my", "code", "I", "ll", "let", "kyleknap", "on", "the", "boto", "NUMBER", "team", "respond", "NUMBER", "Yes", "I", "m", "talking", "about", "your", "example", "that", "performs", "a", "network", "request", "as", "a", "side", "effect", "of", "importing", "the", "module", "NUMBER", "I", "don", "t", "know", "what", "response", "be", "use", "for", "here", "but", "side", "effect", "in", "the", "module", "body", "be", "a", "bad", "practice", "in", "general", "NUMBER", "You", "could", "perform", "the", "request", "lazily", "so", "it", "only", "happens", "as", "needed", "py", "env_file", "APPNAME", "NUMBER", "APPSTAGE", "NUMBER", "env", "_response", "None", "def", "_get_response", "global", "_response", "if", "_response", "be", "None", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "region_name", "us", "west", "NUMBER", "with", "tempfile", "NUMBER", "NamedTemporaryFile", "as", "s", "NUMBER", "_file", "print", "Downloading", "file", "NUMBER", "_response", "s", "NUMBER", "download_file", "APPBUCKET", "env_file", "s", "NUMBER", "_file", "NUMBER", "name", "print", "Download", "complete", "return", "_response", "Even", "instantiating", "things", "like", "API", "and", "networking", "clients", "can", "cause", "problem", "if", "doing", "so", "while", "a", "module", "be", "be", "imported", "NUMBER", "It", "can", "create", "mutexes", "and", "threads", "or", "open", "sockets", "and", "file", "fork", "safety", "NUMBER", "See", "for", "example", "LINK", "importing", "in", "threaded", "code", "btw", "what", "s", "the", "env_file", "use", "for", "Is", "it", "use", "to", "configure", "the", "celery", "workers", "My", "real", "worker", "initializes", "just", "like", "my", "main", "app", "use", "a", "config", "file", "env_file", "via", "S", "NUMBER", "It", "needs", "to", "load", "these", "settings", "before", "handle", "any", "API", "request", "main", "app", "or", "async", "task", "request", "worker", "app", "NUMBER", "The", "main", "app", "and", "workers", "share", "many", "classes", "and", "function", "in", "response", "to", "API", "methods", "NUMBER", "So", "if", "I", "understand", "correctly", "I", "m", "very", "limited", "in", "what", "I", "can", "do", "initialization", "wise", "in", "my", "Celery", "worker", "app", "And", "if", "I", "have", "potentially", "direct", "indirect", "threaded", "function", "calls", "side", "effect", "I", "must", "lazy", "load", "them", "NUMBER", "This", "should", "be", "made", "much", "clearer", "in", "the", "docs", "NUMBER", "I", "assume", "in", "the", "context", "of", "my", "task", "function", "I", "have", "no", "such", "restrictions", "right", "Again", "I", "may", "still", "be", "miss", "the", "issue", "fully", "but", "I", "ve", "tried", "another", "version", "as", "worker", "NUMBER", "py", "that", "be", "closer", "to", "how", "I", "do", "this", "in", "my", "real", "app", "python", "Stub", "Celery", "worker", "to", "demonstrate", "bug", "in", "Boto", "NUMBER", "NUMBER", "Works", "fine", "with", "previous", "version", "Boto", "NUMBER", "NUMBER", "Test", "with", "celery", "worker", "A", "worker", "NUMBER", "celery", "from", "flask", "import", "Flask", "from", "celery", "import", "Celery", "import", "boto", "NUMBER", "import", "tempfile", "import", "logging", "from", "app", "NUMBER", "import", "load_app", "logging", "NUMBER", "basicConfig", "level", "logging", "NUMBER", "DEBUG", "celery", "Celery", "__name__", "broker", "amqp", "guest", "guest", "localhost", "NUMBER", "app", "Flask", "__name__", "load_app", "print", "Worker", "start", "With", "the", "S", "NUMBER", "code", "now", "in", "a", "function", "inside", "another", "module", "app", "NUMBER", "py", "python", "def", "load_app", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "region_name", "us", "west", "NUMBER", "env_file", "FILE", "NUMBER", "env", "with", "tempfile", "NUMBER", "NamedTemporaryFile", "as", "s", "NUMBER", "_file", "print", "Downloading", "file", "NUMBER", "response", "s", "NUMBER", "download_file", "BUCKET", "env_file", "s", "NUMBER", "_file", "NUMBER", "name", "print", "Download", "complete", "Note", "that", "this", "deadlocks", "as", "well", "NUMBER", "If", "this", "be", "as", "you", "expect", "then", "I", "should", "probably", "assume", "there", "be", "no", "way", "to", "structure", "the", "initialization", "code", "that", "would", "be", "thread", "safe", "as", "a", "worker", "I", "m", "saddened", "if", "the", "boto", "developers", "have", "decided", "to", "start", "use", "threads", "in", "their", "client", "code", "Starting", "threads", "as", "a", "side", "effect", "of", "initializing", "a", "client", "be", "a", "horrible", "practice", "NUMBER", "It", "s", "a", "huge", "mistake", "that", "will", "only", "lead", "to", "pain", "and", "misery", "NUMBER", "You", "ve", "moved", "it", "into", "a", "function", "but", "you", "still", "call", "that", "function", "in", "the", "module", "body", "py", "app", "Flask", "__name__", "load_app", "TAG", "line", "NUMBER", "in", "TAG", "File", "C", "Program", "Files", "x", "NUMBER", "Python", "NUMBER", "NUMBER", "lib", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "service_name", "service_name", "region_name", "region_name", "File", "C", "Program", "Files", "x", "NUMBER", "Python", "NUMBER", "NUMBER", "lib", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "model", "operation_model", "params", "request_dict", "File", "C", "Program", "Files", "x", "NUMBER", "Python", "NUMBER", "NUMBER", "lib", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_convert_to_request_dict", "def", "get_paginator", "self", "operation_name", "File", "C", "Program", "Files", "x", "NUMBER", "Python", "NUMBER", "NUMBER", "lib", "site", "package", "botocore", "validate", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "if", "report", "NUMBER", "has_errors", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Unknown", "parameter", "in", "input", "DBSubnetGroupName", "must", "be", "one", "of", "DBInstanceIdentifier", "AllocatedStorage", "DBInstanceClass", "DBSecurityGroups", "VpcSecurityGroupIds", "ApplyImmediately", "MasterUserPassword", "DBParameterGroupName", "BackupRetentionPeriod", "PreferredBackupWindow", "PreferredMaintenanceWindow", "MultiAZ", "EngineVersion", "AllowMajorVersionUpgrade", "AutoMinorVersionUpgrade", "Iops", "OptionGroupName", "NewDBInstanceIdentifier", "StorageType", "TdeCredentialArn", "TdeCredentialPassword", "CACertificateIdentifier", "Domain", "CopyTagsToSnapshot", "MonitoringInterval", "DBPortNumber", "PubliclyAccessible", "MonitoringRoleArn", "DomainIAMRoleName", "PromotionTier", "Please", "delete", "this", "item", "NUMBER", "After", "reviewing", "this", "issue", "once", "I", "tried", "this", "in", "a", "fresh", "state", "I", "do", "not", "seem", "to", "be", "get", "it", "any", "longer", "NUMBER", "However", "I", "do", "need", "to", "point", "out", "that", "there", "be", "a", "new", "issue", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "C", "Program", "Files", "x", "NUMBER", "Python", "NUMBER", "NUMBER", "lib", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "C", "Program", "Files", "x", "NUMBER", "Python", "NUMBER", "NUMBER", "lib", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidVPCNetworkStateFault", "when", "calling", "the", "ModifyDBInstance", "operation", "You", "cannot", "move", "DB", "instance", "jc", "NUMBER", "yi", "NUMBER", "u", "NUMBER", "h", "NUMBER", "fo", "NUMBER", "to", "subnet", "group", "dev", "awsvpc", "us", "east", "NUMBER", "rdspublicsubnetgroup", "n", "NUMBER", "zfyt", "NUMBER", "dkhqg", "NUMBER", "The", "specified", "DB", "subnet", "group", "and", "DB", "instance", "be", "in", "the", "same", "VPC", "NUMBER", "Choose", "a", "DB", "subnet", "group", "in", "different", "VPC", "than", "the", "specified", "DB", "instance", "and", "try", "again", "NUMBER", "Even", "use", "the", "RDS", "API", "directly", "it", "seems", "that", "update", "the", "subnet", "group", "to", "another", "one", "in", "the", "same", "VPC", "will", "not", "work", "so", "it", "do", "not", "seem", "like", "an", "issue", "inside", "Boto", "NUMBER", "or", "Botocore", "NUMBER", "I", "ve", "sent", "a", "ticket", "to", "Amazon", "to", "let", "them", "know", "that", "this", "be", "not", "function", "as", "they", "specify", "in", "their", "documentation", "You", "can", "use", "this", "parameter", "to", "move", "your", "DB", "instance", "to", "a", "different", "VPC", "or", "to", "a", "different", "subnet", "group", "in", "the", "same", "VPC", "NUMBER", "LINK", "_ModifyDBInstance", "NUMBER", "html", "Thank", "you", "very", "much", "for", "your", "time", "Hope", "everything", "works", "out", "This", "code", "fail", "python", "response", "client", "NUMBER", "create_bucket", "ACL", "private", "Bucket", "s", "NUMBER", "_bucket_name", "CreateBucketConfiguration", "LocationConstraint", "us", "east", "NUMBER", "With", "this", "error", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidLocationConstraint", "when", "calling", "the", "CreateBucket", "operation", "The", "specified", "location", "constraint", "be", "not", "valid", "This", "probably", "has", "to", "do", "with", "this", "bug", "quirk", "The", "location", "constraint", "for", "S", "NUMBER", "US", "East", "region", "be", "an", "empty", "string", "according", "to", "the", "following", "documentation", "NUMBER", "You", "should", "always", "leave", "it", "blank", "when", "referring", "to", "S", "NUMBER", "US", "Standard", "region", "NUMBER", "LINK", "But", "IMO", "the", "library", "should", "handle", "this", "quirk", "and", "allow", "us", "east", "NUMBER", "as", "the", "location", "string", "NUMBER", "EDIT", "Actually", "empty", "string", "also", "doesn", "t", "work", "you", "have", "to", "omit", "the", "LocationConstraint", "parameter", "entirely", "NUMBER", "Sample", "code", "assume", "we", "have", "the", "EC", "NUMBER", "Instance", "for", "dev", "in", "instance", "NUMBER", "network_interfaces", "print", "dev", "NUMBER", "association_attribute", "prints", "u", "PublicIp", "IP_ADDRESS", "u", "PublicDnsName", "ec", "NUMBER", "XX", "XX", "XX", "XX", "NUMBER", "us", "west", "NUMBER", "compute", "NUMBER", "amazonaws", "NUMBER", "com", "u", "IpOwnerId", "XXXXXXXX", "It", "s", "miss", "AllocationId", "and", "AssociationId", "in", "the", "attribute", "data", "NUMBER", "A", "workaround", "for", "dev", "in", "instance", "NUMBER", "network_interfaces", "print", "ec", "NUMBER", "_client", "NUMBER", "describe_network_interfaces", "NetworkInterfacesIds", "dev", "NUMBER", "id", "This", "do", "print", "AllocationId", "and", "AssocationId", "for", "the", "interface", "Also", "noted", "be", "dev", "NUMBER", "association", "be", "None", "when", "there", "be", "association", "data", "NUMBER", "Closing", "due", "to", "inactivity", "No", "further", "question", "I", "have", "workaround", "implement", "NUMBER", "For", "some", "reason", "the", "get_template", "LINK", "CloudFormation", "NUMBER", "Client", "NUMBER", "get_template", "call", "in", "CloudFormation", "be", "only", "available", "on", "the", "client", "rather", "than", "on", "a", "Stack", "resource", "NUMBER", "I", "d", "expect", "there", "to", "be", "a", "property", "of", "the", "stack", "that", "lets", "you", "view", "the", "ideally", "already", "deserialized", "from", "JSON", "template", "for", "a", "given", "stack", "NUMBER", "Can", "you", "add", "NUMBER", "template", "attribute", "to", "Stack", "code", "for", "obj_sum", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "if", "obj_sum", "NUMBER", "orage_class", "GLACIER", "obj", "s", "NUMBER", "Object", "obj_sum", "NUMBER", "bucket_name", "obj_sum", "NUMBER", "key", "if", "not", "obj", "NUMBER", "restore", "print", "Submitting", "restoration", "request", "s", "obj", "NUMBER", "key", "obj", "NUMBER", "restore_object", "RestoreRequest", "Days", "NUMBER", "stacktrace", "Traceback", "most", "recent", "call", "last", "File", "Users", "user", "app", "app", "api", "restore_s", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "temp_restore", "File", "Users", "user", "app", "app", "api", "restore_s", "NUMBER", "py", "line", "NUMBER", "in", "temp_restore", "if", "not", "obj", "NUMBER", "restore", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "property_loader", "self", "NUMBER", "load", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "operation_model", "attempts", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_get_response", "response_dict", "operation_model", "NUMBER", "output_shape", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "parse", "parsed", "self", "NUMBER", "_do_parse", "response", "shape", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_do_parse", "member_shapes", "final_parsed", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_parse_non_payload_attrs", "member_shape", "headers", "header_name", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_parse_shape", "return", "handler", "shape", "node", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_get_text_content", "return", "func", "self", "shape", "text", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_handle_timestamp", "return", "self", "NUMBER", "_timestamp_parser", "text", "File", "Users", "user", "app", "venv", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "utils", "NUMBER", "py", "line", "NUMBER", "in", "parse_timestamp", "raise", "ValueError", "Invalid", "timestamp", "s", "s", "value", "e", "ValueError", "Invalid", "timestamp", "Thu", "NUMBER", "NUMBER", "Dec", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Unknown", "string", "format", "test", "on", "python", "NUMBER", "and", "NUMBER", "python", "dateutil", "NUMBER", "and", "python", "dateutil", "NUMBER", "boto", "NUMBER", "and", "latest", "boto", "NUMBER", "NUMBER", "Yes", "I", "m", "just", "run", "that", "code", "in", "shell", "pip", "freeze", "amqp", "NUMBER", "anyjson", "NUMBER", "Babel", "NUMBER", "billiard", "NUMBER", "boto", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "celery", "NUMBER", "click", "NUMBER", "coverage", "NUMBER", "defusedxml", "NUMBER", "Django", "NUMBER", "django", "admin", "smoke", "test", "NUMBER", "django", "airbrake", "NUMBER", "django", "appconf", "NUMBER", "django", "authtools", "NUMBER", "django", "bootstrap", "NUMBER", "NUMBER", "django", "braces", "NUMBER", "django", "celery", "NUMBER", "django", "celery", "transactions", "NUMBER", "django", "cleanup", "NUMBER", "django", "compressor", "NUMBER", "django", "debug", "toolbar", "NUMBER", "django", "nose", "NUMBER", "django", "oauth", "toolkit", "NUMBER", "django", "paintstore", "NUMBER", "django", "phonenumber", "field", "NUMBER", "django", "positions", "NUMBER", "django", "push", "notifications", "NUMBER", "django", "rest", "framework", "social", "oauth", "NUMBER", "NUMBER", "django", "stdimage", "NUMBER", "django", "storages", "NUMBER", "django", "widget", "tweak", "NUMBER", "djangorestframework", "NUMBER", "djrill", "NUMBER", "docutils", "NUMBER", "Flask", "NUMBER", "googlemaps", "NUMBER", "gunicorn", "NUMBER", "httplib", "NUMBER", "NUMBER", "itsdangerous", "NUMBER", "Jinja", "NUMBER", "NUMBER", "jmespath", "NUMBER", "kombu", "NUMBER", "Markdown", "NUMBER", "MarkupSafe", "NUMBER", "nose", "NUMBER", "oauth", "NUMBER", "NUMBER", "post", "NUMBER", "oauthlib", "NUMBER", "phonenumberslite", "NUMBER", "Pillow", "NUMBER", "progressbar", "NUMBER", "NUMBER", "psycopg", "NUMBER", "NUMBER", "PyJWT", "NUMBER", "python", "dateutil", "NUMBER", "python", "google", "places", "NUMBER", "python", "social", "auth", "NUMBER", "python", "NUMBER", "openid", "NUMBER", "pytz", "NUMBER", "rcssmin", "NUMBER", "redis", "NUMBER", "request", "NUMBER", "request", "oauthlib", "NUMBER", "rjsmin", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "self", "NUMBER", "six", "NUMBER", "sqlparse", "NUMBER", "Werkzeug", "NUMBER", "Problem", "Any", "un", "parseable", "Expires", "header", "will", "mean", "you", "cannot", "retrieve", "the", "object", "with", "boto", "NUMBER", "NUMBER", "Proposed", "Solution", "In", "botocore", "NUMBER", "parsers", "NUMBER", "ResponseParser", "_handle_timestamp", "should", "return", "None", "or", "just", "the", "original", "text", "if", "it", "cannot", "be", "converted", "to", "datetime", "NUMBER", "Possibly", "wrapped", "in", "custom", "type", "ie", "Unparseable", "data", "Or", "the", "spec", "for", "GetObjectResponse", "should", "note", "a", "default", "value", "if", "Expires", "fail", "to", "parse", "NUMBER", "Details", "kyleknap", "Here", "s", "a", "reproduction", "from", "an", "internal", "issue", "we", "had", "with", "migrating", "from", "boto", "to", "boto", "NUMBER", "For", "some", "version", "of", "boto", "it", "would", "urlencode", "any", "unicode", "types", "pass", "in", "headers", "resulting", "in", "objects", "that", "cannot", "be", "retrieved", "by", "boto", "NUMBER", "NUMBER", "It", "s", "not", "present", "in", "NUMBER", "but", "I", "can", "confirm", "it", "be", "present", "in", "boto", "NUMBER", "py", "import", "boto", "six", "datetime", "os", "from", "boto", "NUMBER", "s", "NUMBER", "key", "import", "Key", "bucket_name", "my", "bucket", "to", "test", "key_name", "os", "NUMBER", "urandom", "NUMBER", "NUMBER", "encode", "hex", "data", "os", "NUMBER", "urandom", "NUMBER", "hdr_expires", "u", "Tue", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "this", "be", "a", "unicode", "string", "causes", "the", "issue", "conn", "boto", "NUMBER", "connect_s", "NUMBER", "bucket", "conn", "NUMBER", "get_bucket", "bucket_name", "validate", "False", "key", "bucket", "NUMBER", "new_key", "key_name", "key", "NUMBER", "set_contents_from_file", "six", "NUMBER", "BytesIO", "data", "headers", "Expires", "hdr_expires", "Wont", "expose", "the", "Expires", "header", "without", "subclass", "class", "Key", "NUMBER", "Key", "def", "__init__", "self", "bucket", "None", "name", "None", "super", "Key", "NUMBER", "self", "NUMBER", "__init__", "bucket", "bucket", "name", "name", "self", "NUMBER", "_expires_header", "def", "handle_addl_headers", "self", "headers", "for", "k", "v", "in", "headers", "if", "k", "expires", "self", "NUMBER", "_expires_header", "v", "out", "six", "NUMBER", "BytesIO", "fetched", "Key", "NUMBER", "bucket", "key_name", "fetched", "NUMBER", "get_contents_to_file", "out", "print", "Boto", "NUMBER", "Expires", "r", "fetched", "NUMBER", "_expires_header", "with", "boto", "NUMBER", "this", "prints", "Boto", "NUMBER", "Expires", "Tue", "NUMBER", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "with", "boto", "NUMBER", "this", "prints", "Boto", "NUMBER", "Expires", "Tue", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "The", "result", "objects", "affected", "by", "that", "bug", "cannot", "be", "read", "by", "boto", "NUMBER", "NUMBER", "I", "have", "the", "same", "issue", "I", "have", "images", "saved", "in", "S", "NUMBER", "get", "the", "following", "stack", "traces", "when", "calling", "image", "NUMBER", "width", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "utils", "NUMBER", "py", "line", "NUMBER", "in", "parse_timestamp", "return", "dateutil", "NUMBER", "parser", "NUMBER", "parse", "value", "tzinfos", "GMT", "tzutc", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "dateutil", "parser", "NUMBER", "py", "line", "NUMBER", "in", "parse", "return", "DEFAULTPARSER", "NUMBER", "parse", "timestr", "kwargs", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "dateutil", "parser", "NUMBER", "py", "line", "NUMBER", "in", "parse", "raise", "ValueError", "Unknown", "string", "format", "ValueError", "Unknown", "string", "format", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "django", "core", "file", "images", "NUMBER", "py", "line", "NUMBER", "in", "_get_width", "return", "self", "NUMBER", "_get_image_dimensions", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "django", "core", "file", "images", "NUMBER", "py", "line", "NUMBER", "in", "_get_image_dimensions", "self", "NUMBER", "open", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "django", "db", "models", "field", "file", "NUMBER", "py", "line", "NUMBER", "in", "open", "self", "NUMBER", "file", "NUMBER", "open", "mode", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "django", "db", "models", "field", "file", "NUMBER", "py", "line", "NUMBER", "in", "_get_file", "self", "NUMBER", "_file", "self", "NUMBER", "orage", "NUMBER", "open", "self", "NUMBER", "name", "rb", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "django", "core", "file", "storage", "NUMBER", "py", "line", "NUMBER", "in", "open", "return", "self", "NUMBER", "_open", "name", "mode", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "storages", "backends", "s", "NUMBER", "boto", "NUMBER", "py", "line", "NUMBER", "in", "_open", "f", "self", "NUMBER", "file_class", "name", "mode", "self", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "storages", "backends", "s", "NUMBER", "boto", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "obj", "NUMBER", "load", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "operation_model", "attempts", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_get_response", "response_dict", "operation_model", "NUMBER", "output_shape", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "parse", "parsed", "self", "NUMBER", "_do_parse", "response", "shape", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_do_parse", "member_shapes", "final_parsed", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_parse_non_payload_attrs", "member_shape", "headers", "header_name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_parse_shape", "return", "handler", "shape", "node", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_get_text_content", "return", "func", "self", "shape", "text", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_handle_timestamp", "return", "self", "NUMBER", "_timestamp_parser", "text", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "utils", "NUMBER", "py", "line", "NUMBER", "in", "parse_timestamp", "raise", "ValueError", "Invalid", "timestamp", "s", "s", "value", "e", "ValueError", "Invalid", "timestamp", "Mon", "NUMBER", "NUMBER", "Mar", "NUMBER", "Unknown", "string", "format", "I", "get", "with", "local", "DynamoDB", "and", "python", "NUMBER", "if", "isinstance", "value", "int", "float", "Possibly", "an", "epoch", "time", "NUMBER", "return", "datetime", "NUMBER", "datetime", "NUMBER", "fromtimestamp", "value", "tzlocal", "here", "invalid", "timestamp", "value", "NUMBER", "tzlocal", "be", "None", "NUMBER", "def", "_naive_is_dst", "self", "dt", "timestamp", "_datetime_to_timestamp", "dt", "return", "time", "NUMBER", "localtime", "timestamp", "time", "NUMBER", "timezone", "NUMBER", "tm_isdst", "timestamp", "NUMBER", "NUMBER", "time", "NUMBER", "timezone", "NUMBER", "See", "this", "be", "probably", "my", "problem", "LINK", "Hello", "We", "re", "creating", "RDS", "instances", "use", "boto", "NUMBER", "NUMBER", "Our", "code", "looks", "like", "python", "client", "boto", "NUMBER", "client", "rds", "region_name", "us", "west", "NUMBER", "response", "client", "NUMBER", "create_db_instance", "NUMBER", "VpcSecurityGroupIds", "sg", "groupid", "PubliclyAccessible", "True", "Port", "NUMBER", "NUMBER", "Based", "on", "documentation", "we", "expect", "key", "Endpoint", "to", "be", "in", "the", "response", "DBInstance", "but", "there", "be", "no", "such", "key", "python", "print", "response", "DBInstance", "NUMBER", "keys", "dict_keys", "CACertificateIdentifier", "Engine", "MonitoringInterval", "StorageEncrypted", "DBName", "AutoMinorVersionUpgrade", "PreferredMaintenanceWindow", "DBInstanceClass", "MasterUsername", "DbiResourceId", "DBSecurityGroups", "PubliclyAccessible", "DbInstancePort", "OptionGroupMemberships", "PendingModifiedValues", "DBInstanceArn", "CopyTagsToSnapshot", "LicenseModel", "EngineVersion", "DBInstanceStatus", "DBSubnetGroup", "PreferredBackupWindow", "StorageType", "DBInstanceIdentifier", "BackupRetentionPeriod", "VpcSecurityGroups", "AllocatedStorage", "DBParameterGroups", "MultiAZ", "DomainMemberships", "ReadReplicaDBInstanceIdentifiers", "AvailabilityZone", "Also", "it", "s", "not", "clear", "why", "we", "receive", "DbInstancePort", "as", "NUMBER", "zero", "our", "instance", "be", "not", "a", "part", "of", "any", "cluster", "python", "print", "response", "DBInstance", "DbInstancePort", "NUMBER", "Update", "Ok", "I", "figured", "out", "that", "even", "in", "AWS", "UI", "I", "don", "t", "see", "WriterEndpoint", "field", "set", "if", "db", "instance", "s", "status", "be", "creating", "NUMBER", "Should", "the", "Endpoint", "key", "be", "in", "the", "create_db_instance", "response", "if", "that", "data", "doesn", "t", "exist", "Closing", "due", "to", "inactivity", "A", "recent", "s", "NUMBER", "transfer", "update", "include", "automatically", "adjusting", "part", "sizes", "that", "were", "invalid", "so", "functional", "test", "needed", "to", "be", "update", "to", "use", "valid", "chunk", "sizes", "NUMBER", "cc", "kyleknap", "jamesls", "Hi", "NUMBER", "I", "m", "trying", "to", "read", "the", "S", "NUMBER", "object", "by", "use", "the", "read", "API", "LINK", "streamingbody", "S", "NUMBER", "Object", "NUMBER", "get", "with", "the", "following", "code", "s", "NUMBER", "object", "s", "NUMBER", "_resource", "NUMBER", "Object", "bucket", "filename", "s", "NUMBER", "data", "s", "NUMBER", "object", "NUMBER", "get", "Body", "while", "True", "data", "s", "NUMBER", "data", "NUMBER", "read", "specify", "the", "size", "to", "read", "if", "not", "data", "break", "However", "if", "I", "try", "to", "read", "the", "data", "from", "the", "huge", "size", "object", "NUMBER", "GB", "NUMBER", "The", "read", "API", "sometimes", "returns", "the", "size", "of", "the", "data", "less", "than", "the", "specified", "size", "NUMBER", "I", "suspect", "the", "API", "faced", "the", "end", "of", "the", "file", "however", "it", "occur", "in", "the", "middle", "of", "reading", "the", "file", "NUMBER", "Can", "you", "check", "this", "issue", "S", "NUMBER", "P", "NUMBER", "S", "NUMBER", "I", "use", "the", "Python", "NUMBER", "x", "and", "the", "boto", "NUMBER", "library", "NUMBER", "Closing", "due", "to", "inactivity", "In", "boto", "there", "was", "volume", "NUMBER", "add_tag", "and", "volume", "NUMBER", "remove_tag", "NUMBER", "In", "boto", "NUMBER", "there", "be", "volume", "NUMBER", "create_tags", "but", "no", "corresponding", "volume", "NUMBER", "delete_tags", "NUMBER", "The", "client", "has", "delete_tags", "LINK", "EC", "NUMBER", "Client", "NUMBER", "delete_tags", "but", "I", "think", "the", "method", "should", "exist", "for", "the", "resource", "instance", "object", "too", "NUMBER", "Discussion", "_P", "NUMBER", "S", "NUMBER", "This", "be", "the", "same", "as", "NUMBER", "but", "for", "volumes", "instead", "of", "instances", "NUMBER", "_", "kyleknap", "Is", "there", "currently", "anyway", "to", "delete", "a", "tag", "from", "a", "volume", "any", "other", "way", "with", "boto", "NUMBER", "nvm", "I", "totally", "miss", "the", "client", "interface", "LINK", "EC", "NUMBER", "Client", "NUMBER", "delete_tags", "Specifying", "that", "during", "inline", "client", "creation", "region_name", "needs", "to", "be", "use", "in", "place", "of", "region", "NUMBER", "Eg", "lambda_client", "boto", "NUMBER", "client", "lambda", "aws_access_key_id", "aws_access_key", "aws_secret_access_key", "aws_secret_key", "region_name", "us", "east", "NUMBER", "Awesome", "thanks", "Yeah", "thought", "I", "d", "use", "some", "Bias", "For", "Action", "here", "D", "Request", "Add", "S", "NUMBER", "Object", "NUMBER", "orage_class", "possible", "values", "to", "documentation", "relevant", "boto", "NUMBER", "docs", "LINK", "S", "NUMBER", "Object", "NUMBER", "orage_class", "Reason", "Guessing", "possible", "values", "and", "meaning", "be", "not", "fun", "and", "prone", "to", "error", "NUMBER", "Context", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "glacier_test", "for", "obj_sum", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "obj", "s", "NUMBER", "Object", "obj_sum", "NUMBER", "bucket_name", "obj_sum", "NUMBER", "key", "storage_class", "obj", "NUMBER", "orage_class", "restore", "obj", "NUMBER", "restore", "print", "obj", "NUMBER", "key", "obj", "NUMBER", "orage_class", "obj", "NUMBER", "restore", "In", "the", "example", "above", "obj", "NUMBER", "orage_class", "seems", "to", "return", "None", "or", "GLACIER", "but", "I", "don", "t", "see", "anywhere", "in", "the", "documentation", "about", "the", "possible", "values", "I", "assume", "obj", "NUMBER", "orage_class", "be", "None", "means", "On", "normal", "S", "NUMBER", "storage", "not", "transitioned", "to", "glacier", "Ah", "good", "point", "NUMBER", "I", "ll", "make", "the", "needed", "change", "over", "there", "NUMBER", "kyleknap", "Alright", "now", "the", "JSON", "file", "be", "update", "as", "well", "NUMBER", "I", "notice", "that", "scripts", "new", "change", "refers", "to", "scripts", "gen", "changelog", "which", "doesn", "t", "seem", "to", "be", "present", "in", "the", "repository", "NUMBER", "Is", "it", "perhaps", "in", "some", "other", "repository", "Yeah", "makes", "sense", "NUMBER", "I", "have", "a", "script", "that", "uploads", "large", "file", "to", "an", "s", "NUMBER", "bucket", "and", "initiates", "multi", "part", "upload", "for", "binary", "file", "that", "be", "larger", "than", "NUMBER", "GB", "NUMBER", "For", "most", "file", "the", "process", "runs", "seamlessly", "NUMBER", "However", "some", "simply", "fail", "NUMBER", "Here", "be", "the", "logs", "for", "one", "such", "fail", "Traceback", "most", "recent", "call", "last", "File", "s", "NUMBER", "upload", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "main", "File", "s", "NUMBER", "upload", "NUMBER", "py", "line", "NUMBER", "in", "main", "s", "NUMBER", "multi_part_upload", "bucketname", "file_with_path", "file_directory", "File", "s", "NUMBER", "upload", "NUMBER", "py", "line", "NUMBER", "in", "s", "NUMBER", "multi_part_upload", "UploadId", "multipart_upload", "UploadId", "Body", "data", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "success_response", "exception", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_needs_retry", "caught_exception", "caught_exception", "request_dict", "request_dict", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "if", "self", "NUMBER", "_checker", "attempts", "response", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "_should_retry", "return", "self", "NUMBER", "_checker", "attempt_number", "response", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "call", "attempt_number", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "_check_caught_exception", "raise", "caught_exception", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "exception", "NUMBER", "ConnectionError", "Connection", "abort", "NUMBER", "error", "NUMBER", "Connection", "reset", "by", "peer", "This", "did", "not", "fail", "right", "away", "and", "actually", "took", "over", "an", "hour", "to", "return", "the", "error", "NUMBER", "I", "have", "other", "file", "that", "be", "not", "multi", "part", "size", "which", "simply", "halt", "in", "the", "middle", "of", "uploading", "with", "no", "error", "or", "reason", "given", "NUMBER", "When", "I", "try", "to", "upload", "these", "file", "from", "the", "interface", "manually", "it", "also", "do", "not", "work", "and", "returns", "an", "error", "but", "no", "reason", "for", "the", "error", "NUMBER", "Please", "advise", "as", "I", "do", "not", "see", "this", "to", "be", "an", "issue", "on", "my", "end", "as", "many", "other", "similar", "file", "be", "able", "to", "be", "uploaded", "seamlessly", "NUMBER", "Thank", "you", "NUMBER", "pip", "freeze", "grep", "boto", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "Closing", "due", "to", "inactivity", "I", "be", "use", "AWS", "lambda", "to", "send", "email", "with", "attachements", "through", "SES", "NUMBER", "here", "be", "my", "code", "import", "boto", "NUMBER", "from", "email", "NUMBER", "mime", "NUMBER", "text", "import", "MIMEText", "from", "email", "NUMBER", "mime", "NUMBER", "application", "import", "MIMEApplication", "from", "email", "NUMBER", "mime", "NUMBER", "multipart", "import", "MIMEMultipart", "ses", "boto", "NUMBER", "client", "ses", "s", "NUMBER", "_client", "boto", "NUMBER", "client", "s", "NUMBER", "to_emails", "xxx", "xxx", "COMMASPACE", "def", "lambda_handler", "event", "context", "create", "raw", "email", "msg", "MIMEMultipart", "msg", "Subject", "Email", "subject", "msg", "From", "xxx", "msg", "To", "COMMASPACE", "NUMBER", "join", "to_emails", "joined", "the", "array", "of", "email", "strings", "edit", "didn", "t", "end", "up", "use", "this", "part", "MIMEText", "Attached", "be", "an", "important", "CSV", "msg", "NUMBER", "attach", "part", "file_name", "s", "NUMBER", "_client", "NUMBER", "download_file", "x_file", "x", "NUMBER", "jpg", "tmp", "x", "NUMBER", "jpg", "if", "file_name", "part", "MIMEApplication", "open", "file_name", "rb", "NUMBER", "read", "part", "NUMBER", "add_header", "Content", "Disposition", "attachment", "filename", "file_name", "msg", "NUMBER", "attach", "part", "ses", "NUMBER", "send_raw_email", "RawMessage", "msg", "NUMBER", "as_string", "Source", "msg", "From", "Destinations", "to_emails", "find", "this", "error", "Parameter", "validation", "fail", "Invalid", "type", "for", "parameter", "RawMessage", "value", "Content", "Type", "multipart", "mix", "boundary", "NUMBER", "MIME", "Version", "NUMBER", "Subject", "Email", "subject", "From", "xxx", "To", "xxx", "xxx", "NUMBER", "Content", "Type", "text", "plain", "charset", "us", "ascii", "MIME", "Version", "NUMBER", "Content", "Transfer", "Encoding", "NUMBER", "bit", "Attached", "be", "an", "important", "CSV", "NUMBER", "type", "TAG", "valid", "types", "TAG", "ParamValidationError", "Traceback", "most", "recent", "call", "last", "File", "var", "task", "lambda_function", "NUMBER", "py", "line", "NUMBER", "in", "lambda_handler", "ses", "NUMBER", "send_raw_email", "RawMessage", "msg", "NUMBER", "as_string", "Source", "msg", "From", "Destinations", "to_emails", "File", "var", "runtime", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "var", "runtime", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "api_params", "operation_model", "context", "request_context", "File", "var", "runtime", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_convert_to_request_dict", "api_params", "operation_model", "File", "var", "runtime", "botocore", "validate", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "raise", "ParamValidationError", "report", "report", "NUMBER", "generate_report", "ParamValidationError", "Parameter", "validation", "fail", "Invalid", "type", "for", "parameter", "RawMessage", "value", "Content", "Type", "multipart", "mix", "boundary", "NUMBER", "MIME", "Version", "NUMBER", "Subject", "Email", "subject", "From", "xxx", "To", "xxx", "xxx", "NUMBER", "Content", "Type", "text", "plain", "charset", "us", "ascii", "MIME", "Version", "NUMBER", "Content", "Transfer", "Encoding", "NUMBER", "bit", "Attached", "be", "an", "important", "CSV", "NUMBER", "type", "TAG", "valid", "types", "TAG", "this", "error", "came", "when", "I", "put", "your", "upper", "code", "Syntax", "error", "in", "module", "lambda_function", "invalid", "syntax", "lambda_function", "NUMBER", "py", "line", "NUMBER", "After", "checking", "find", "this", "code", "works", "ses", "NUMBER", "send_raw_email", "RawMessage", "Data", "msg", "NUMBER", "as_string", "Source", "msg", "From", "Destinations", "to_emails", "Output", "be", "not", "much", "as", "I", "expected", "NUMBER", "email", "send", "but", "no", "any", "attachment", "file", "Closing", "due", "to", "inactivity", "When", "performing", "an", "AuthorizeSecurityGroupIngress", "call", "I", "be", "able", "to", "specify", "CidrIp", "as", "a", "parameter", "as", "per", "the", "docs", "LINK", "EC", "NUMBER", "Client", "NUMBER", "authorize_security_group_ingress", "NUMBER", "However", "when", "you", "change", "that", "call", "to", "AuthorizeSecurityGroupEgress", "with", "the", "same", "parameters", "it", "fail", "even", "though", "the", "docs", "for", "that", "call", "also", "state", "that", "you", "can", "use", "CidrIp", "as", "a", "parameter", "NUMBER", "In", "reading", "the", "warnings", "note", "it", "seems", "that", "this", "may", "have", "something", "to", "do", "with", "EC", "NUMBER", "Classic", "vs", "NUMBER", "EC", "NUMBER", "VPC", "but", "if", "that", "s", "the", "case", "then", "why", "do", "the", "Authorize", "Ingress", "call", "succeed", "I", "write", "a", "quick", "script", "LINK", "to", "demonstrate", "the", "behavior", "NUMBER", "This", "be", "the", "output", "python", "sg", "egress", "NUMBER", "py", "Successful", "ingress", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "UUID", "Unsuccessful", "Egress", "An", "error", "occur", "UnknownParameter", "when", "calling", "the", "AuthorizeSecurityGroupEgress", "operation", "The", "parameter", "CidrIp", "be", "not", "recognized", "Successful", "Egress", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "UUID", "I", "understand", "that", "use", "the", "IpPermissions", "dict", "be", "recommended", "anyway", "but", "this", "was", "more", "to", "address", "the", "inconsistencies", "between", "the", "two", "seemingly", "identical", "API", "calls", "NUMBER", "I", "ll", "take", "a", "look", "at", "this", "thanks", "for", "report", "it", "andrew", "what", "version", "of", "boto", "NUMBER", "be", "you", "use", "pip", "freeze", "grep", "boto", "NUMBER", "boto", "NUMBER", "NUMBER", "And", "what", "version", "of", "botocore", "botocore", "NUMBER", "Closing", "due", "to", "inactivity", "Hello", "Suppose", "I", "have", "an", "Object", "obj", "boto", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "Bucket", "bucket_name", "NUMBER", "Object", "object_key", "I", "want", "to", "replace", "obj", "NUMBER", "put", "Body", "NUMBER", "kwargs", "functionality", "with", "obj", "NUMBER", "upload_file", "due", "to", "auto", "multiparts", "upload", "on", "file", "NUMBER", "gb", "not", "sure", "about", "size", "let", "s", "say", "_on", "large", "files_", "NUMBER", "How", "can", "I", "migrate", "my", "code", "in", "that", "case", "Where", "I", "can", "set", "for", "example", "ContentEncoding", "Can", "I", "just", "pass", "it", "to", "ExtraArgs", "like", "upload_file", "NUMBER", "ExtraArgs", "ContentEncoding", "blabla", "If", "there", "be", "NUMBER", "items", "and", "we", "want", "to", "list", "NUMBER", "items", "per", "page", "the", "paginator", "PaginationConfig", "seems", "use", "PageSize", "to", "control", "pagination", "NUMBER", "Following", "works", "Marker", "be", "return", "when", "there", "be", "more", "data", "to", "be", "returned", "and", "IsTruncated", "also", "return", "True", "NUMBER", "import", "sys", "import", "boto", "NUMBER", "iam", "boto", "NUMBER", "client", "iam", "marker", "None", "while", "True", "paginator", "iam", "NUMBER", "get_paginator", "list_users", "response_iterator", "paginator", "NUMBER", "paginate", "PaginationConfig", "PageSize", "NUMBER", "StartingToken", "marker", "for", "page", "in", "response_iterator", "print", "Next", "Page", "NUMBER", "format", "page", "IsTruncated", "u", "page", "Users", "for", "user", "in", "u", "print", "user", "UserName", "try", "marker", "page", "Marker", "print", "marker", "except", "KeyError", "sys", "NUMBER", "exit", "However", "if", "PaginationConfig", "use", "Maxitem", "e", "NUMBER", "g", "NUMBER", "response_iterator", "paginator", "NUMBER", "paginate", "PaginationConfig", "MaxItems", "NUMBER", "StartingToken", "marker", "The", "list", "just", "show", "NUMBER", "items", "and", "stop", "no", "Markers", "returns", "and", "isTruncated", "return", "as", "false", "as", "mention", "in", "the", "documentation", "NUMBER", "I", "be", "not", "sure", "if", "that", "be", "relate", "but", "I", "believe", "it", "be", "at", "least", "somehow", "NUMBER", "I", "be", "currently", "use", "pagination", "to", "retrieve", "snapshot", "and", "I", "set", "MaxItems", "to", "NUMBER", "as", "well", "as", "Page", "to", "NUMBER", "TAG", "NUMBER", "format", "bucket_name", "return", "bucket", "staticmethod", "def", "_keys", "bucket", "keys", "for", "key", "in", "bucket", "keys", "NUMBER", "append", "key", "if", "len", "keys", "NUMBER", "yield", "keys", "keys", "if", "keys", "yield", "keys", "Python", "S", "NUMBER", "NUMBER", "copy_files", "bucket", "prod", "bucket", "bkp", "kyleknap", "Thanks", "for", "tip", "NUMBER", "I", "will", "check", "it", "today", "and", "update", "you", "NUMBER", "kyleknap", "There", "be", "NUMBER", "file", "i", "be", "copying", "from", "one", "bucket", "to", "another", "and", "only", "two", "file", "be", "of", "size", "NUMBER", "MB", "NUMBER", "All", "the", "other", "file", "be", "less", "then", "NUMBER", "KB", "NUMBER", "According", "to", "TransferConfig", "LINK", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "TransferConfig", "multipart_threshold", "be", "NUMBER", "MB", "which", "means", "multiple", "threads", "will", "be", "created", "only", "when", "a", "file", "of", "size", "NUMBER", "MB", "be", "encountered", "which", "in", "my", "case", "will", "never", "happen", "NUMBER", "Thanks", "kyleknap", "NUMBER", "I", "will", "also", "further", "look", "into", "it", "to", "get", "some", "hint", "about", "what", "s", "happening", "NUMBER", "kyleknap", "I", "think", "i", "have", "already", "tried", "object", "NUMBER", "copy_from", "but", "i", "will", "check", "them", "both", "again", "NUMBER", "Thanks", "kyleknap", "Looks", "like", "client", "NUMBER", "copy_object", "gives", "huge", "performance", "improvement", "NUMBER", "By", "use", "it", "i", "was", "able", "to", "copy", "same", "amount", "of", "data", "in", "just", "NUMBER", "minutes", "NUMBER", "I", "find", "little", "time", "for", "test", "and", "only", "checked", "it", "once", "NUMBER", "I", "will", "further", "check", "it", "and", "update", "you", "NUMBER", "kyleknap", "client", "NUMBER", "copy_object", "improves", "the", "performance", "and", "issue", "be", "resolve", "now", "NUMBER", "But", "i", "be", "wondering", "that", "why", "performance", "be", "bad", "for", "higher", "level", "resource", "objects", "Python", "self", "NUMBER", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "copy_object", "CopySource", "Bucket", "self", "NUMBER", "_src_bucket_name", "Key", "key", "NUMBER", "key", "Bucket", "self", "NUMBER", "_dst_bucket_name", "Key", "key", "NUMBER", "key", "kyleknap", "This", "be", "what", "i", "have", "change", "in", "class", "CopyWorker", "NUMBER", "And", "after", "this", "change", "bucket", "to", "bucket", "copy", "be", "improved", "and", "now", "the", "average", "time", "to", "copy", "same", "amount", "of", "data", "be", "less", "then", "the", "time", "taken", "by", "old", "code", "NUMBER", "Thanks", "Kyle", "I", "will", "definitely", "try", "this", "NUMBER", "On", "Thu", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Kyle", "Knapp", "notifications", "github", "NUMBER", "com", "write", "Thanks", "for", "looking", "into", "this", "NUMBER", "We", "will", "try", "this", "out", "as", "well", "to", "see", "if", "we", "get", "a", "difference", "as", "well", "NUMBER", "One", "way", "to", "look", "at", "what", "may", "be", "going", "on", "be", "to", "use", "boto", "NUMBER", "set_stream_logger", "to", "see", "all", "of", "the", "debug", "logs", "and", "see", "where", "the", "slowness", "may", "be", "come", "from", "NUMBER", "You", "can", "also", "filter", "it", "by", "package", "so", "I", "would", "suggest", "also", "replacing", "the", "empty", "string", "with", "botocore", "and", "boto", "NUMBER", "to", "get", "more", "filtered", "debug", "logs", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "LINK", "auth", "AGdFNMCqpUCMnrc", "NUMBER", "X", "NUMBER", "IIg", "NUMBER", "A", "NUMBER", "uvqb", "NUMBER", "ks", "NUMBER", "qoETjgaJpZM", "NUMBER", "JtdMw", "NUMBER", "I", "save", "and", "reload", "message", "in", "my", "application", "and", "when", "I", "access", "the", "message_attributes", "of", "the", "thawed", "instance", "I", "get", "the", "error", "Traceback", "most", "recent", "call", "last", "File", "C", "Users", "James", "NUMBER", "virtualenvs", "deckboom", "demo", "lib", "site", "package", "spyne", "NUMBER", "py", "NUMBER", "egg", "spyne", "application", "NUMBER", "py", "line", "NUMBER", "in", "process_request", "ctx", "NUMBER", "out_object", "self", "NUMBER", "call_wrapper", "ctx", "File", "C", "Users", "James", "NUMBER", "virtualenvs", "deckboom", "demo", "lib", "site", "package", "spyne", "NUMBER", "py", "NUMBER", "egg", "spyne", "application", "NUMBER", "py", "line", "NUMBER", "in", "call_wrapper", "retval", "ctx", "NUMBER", "descriptor", "NUMBER", "service_class", "NUMBER", "call_wrapper", "ctx", "File", "C", "Users", "James", "NUMBER", "virtualenvs", "deckboom", "demo", "lib", "site", "package", "spyne", "NUMBER", "py", "NUMBER", "egg", "spyne", "service", "NUMBER", "py", "line", "NUMBER", "in", "call_wrapper", "return", "ctx", "NUMBER", "function", "args", "File", "c", "users", "james", "code", "deckboom", "demo", "django", "deckboom", "deckboom", "rpc", "NUMBER", "py", "line", "NUMBER", "in", "receiveResponseXML", "replyQueue", "message", "NUMBER", "message_attributes", "File", "C", "Users", "James", "NUMBER", "virtualenvs", "deckboom", "demo", "lib", "site", "package", "boto", "NUMBER", "NUMBER", "py", "NUMBER", "egg", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "property_loader", "self", "NUMBER", "__class__", "NUMBER", "__name__", "boto", "NUMBER", "exception", "NUMBER", "ResourceLoadException", "sqs", "NUMBER", "Message", "has", "no", "load", "method", "That", "s", "exactly", "what", "I", "was", "doing", "because", "I", "needed", "to", "process", "the", "message", "in", "a", "separate", "context", "from", "where", "I", "retrieved", "the", "message", "NUMBER", "No", "I", "couldn", "t", "do", "anything", "about", "it", "NUMBER", "What", "I", "ended", "up", "doing", "was", "saving", "the", "message", "attributes", "next", "to", "the", "receipt", "handle", "NUMBER", "It", "seems", "to", "be", "work", "NUMBER", "For", "reference", "this", "LINK", "aca", "django", "deckboom", "src", "NUMBER", "f", "NUMBER", "a", "NUMBER", "cee", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "afdc", "NUMBER", "deckboom", "rpc", "NUMBER", "py", "fileviewer", "file", "view", "default", "rpc", "NUMBER", "py", "NUMBER", "be", "what", "I", "_was_", "doing", "NUMBER", "I", "ve", "since", "redone", "it", "a", "bit", "NUMBER", "CentOS", "NUMBER", "boto", "NUMBER", "NUMBER", "with", "open", "path", "to", "file", "rb", "as", "f", "f", "NUMBER", "seek", "NUMBER", "os", "NUMBER", "SEEK_CUR", "s", "NUMBER", "Bucket", "bucket_name", "NUMBER", "upload_fileobj", "f", "key", "This", "fail", "with", "len", "should", "return", "NUMBER", "Why", "do", "the", "fileobj", "have", "to", "be", "set", "to", "the", "beginning", "of", "the", "file", "to", "upload", "Perhaps", "I", "be", "doing", "this", "wrong", "but", "basically", "what", "I", "want", "to", "do", "be", "upload", "a", "chunk", "within", "a", "local", "file", "to", "a", "bucket", "NUMBER", "Can", "this", "not", "be", "do", "without", "an", "extra", "copy", "I", "be", "confused", "that", "PR", "be", "for", "s", "NUMBER", "transfer", "NUMBER", "What", "about", "boto", "NUMBER", "I", "don", "t", "see", "anything", "in", "the", "commit", "log", "for", "a", "fix", "within", "boto", "NUMBER", "Also", "I", "pull", "the", "latest", "rebuilt", "my", "RPM", "install", "it", "and", "I", "still", "have", "the", "issue", "NUMBER", "I", "feel", "dumb", "NUMBER", "It", "works", "NUMBER", "Thanks", "Kyle", "NUMBER", "This", "be", "a", "major", "bug", "in", "the", "boto", "NUMBER", "API", "NUMBER", "Do", "you", "know", "when", "the", "next", "scheduled", "release", "of", "boto", "NUMBER", "s", "NUMBER", "transfer", "et", "al", "NUMBER", "be", "Currently", "all", "Cloudformation", "Stack", "objects", "require", "the", "name", "of", "a", "stack", "when", "make", "API", "calls", "NUMBER", "This", "prevents", "use", "of", "the", "Stack", "object", "in", "situations", "where", "one", "be", "dealing", "with", "delete", "stacks", "which", "can", "only", "be", "managed", "via", "stack", "ID", "NUMBER", "I", "propose", "change", "the", "current", "Cloudformation", "APIs", "to", "use", "stack", "IDs", "rather", "than", "stack", "names", "NUMBER", "As", "an", "aside", "be", "there", "any", "documentation", "that", "details", "how", "the", "JSON", "data", "describing", "the", "API", "works", "It", "would", "help", "when", "trying", "to", "create", "patches", "NUMBER", "Well", "in", "the", "past", "I", "have", "write", "a", "tool", "that", "attempts", "to", "delete", "retained", "resources", "don", "t", "ask", "from", "delete", "stacks", "NUMBER", "I", "had", "to", "use", "the", "low", "level", "API", "for", "that", "tool", "as", "I", "needed", "to", "retrieve", "a", "list", "of", "all", "resources", "associated", "with", "a", "delete", "stack", "which", "only", "has", "a", "stack", "ID", "NUMBER", "I", "snippet", "of", "the", "easier", "workflow", "would", "be", "something", "like", "this", "python", "Assumming", "python", "NUMBER", "import", "boto", "NUMBER", "cloudformation", "boto", "NUMBER", "resource", "cloudformation", "Stack", "cloudformation", "NUMBER", "Stack", "stack_id", "input", "Stack", "ID", "deleted_stack", "Stack", "id", "stack_id", "for", "summary", "in", "deleted_stack", "NUMBER", "resource_summaries", "NUMBER", "all", "if", "summary", "NUMBER", "resource_type", "AWS", "EC", "NUMBER", "Instance", "Delete", "instance", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "instances", "ec", "NUMBER", "instances", "NUMBER", "all", "for", "instance", "in", "instances", "for", "volume", "in", "instance", "NUMBER", "volumes", "NUMBER", "all", "for", "snapshot", "in", "volume", "NUMBER", "snapshot", "NUMBER", "all", "The", "fifth", "line", "be", "throw", "the", "error", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "an", "Error", "occur", "RequestLimitExceeded", "when", "calling", "the", "DescribeSnapshots", "operation", "Request", "limit", "exceeded", "NUMBER", "NUMBER", "Does", "boto", "NUMBER", "implement", "exponential", "backoff", "Is", "boto", "NUMBER", "configurable", "for", "number", "of", "retries", "NUMBER", "If", "not", "what", "s", "proper", "way", "to", "handle", "this", "error", "Is", "the", "exponential", "backoff", "the", "answer", "Is", "there", "a", "sample", "on", "how", "to", "do", "it", "I", "m", "guessing", "its", "be", "do", "many", "times", "before", "so", "I", "rather", "not", "start", "from", "scratch", "NUMBER", "NUMBER", "What", "s", "the", "suggested", "way", "to", "test", "for", "rate", "limit", "error", "Running", "the", "code", "in", "my", "account", "causes", "no", "problem", "since", "I", "only", "have", "a", "few", "instances", "volumes", "snapshot", "NUMBER", "This", "error", "occur", "when", "this", "code", "be", "run", "in", "another", "account", "that", "I", "don", "t", "have", "access", "to", "that", "has", "NUMBER", "s", "of", "instances", "volumes", "snapshot", "NUMBER", "NUMBER", "Is", "there", "a", "more", "efficient", "way", "to", "write", "the", "above", "code", "The", "script", "be", "iterating", "through", "all", "instances", "to", "find", "any", "volumes", "that", "hasn", "t", "had", "a", "snapshot", "in", "NUMBER", "hours", "NUMBER", "NUMBER", "Yes", "boto", "NUMBER", "implement", "exponential", "backoff", "NUMBER", "This", "request", "should", "be", "retried", "as", "shown", "here", "LINK", "_retry", "NUMBER", "json", "L", "NUMBER", "L", "NUMBER", "NUMBER", "In", "that", "file", "there", "s", "a", "__defaults__", "section", "which", "shows", "we", "retry", "NUMBER", "times", "NUMBER", "If", "you", "re", "seeing", "these", "error", "it", "s", "because", "you", "re", "exceeding", "the", "NUMBER", "attempts", "we", "make", "NUMBER", "You", "can", "also", "see", "more", "info", "by", "add", "boto", "NUMBER", "set_stream_logger", "at", "the", "top", "of", "your", "file", "NUMBER", "NUMBER", "Should", "be", "handle", "but", "we", "don", "t", "have", "a", "way", "to", "increase", "the", "number", "of", "attempts", "NUMBER", "There", "be", "a", "feature", "request", "track", "this", "work", "NUMBER", "NUMBER", "Ideally", "boto", "NUMBER", "should", "be", "handle", "this", "for", "you", "NUMBER", "For", "some", "reason", "the", "level", "of", "throttling", "be", "applied", "be", "exceeding", "our", "default", "values", "NUMBER", "Once", "we", "support", "configurable", "retries", "you", "should", "be", "able", "to", "just", "increase", "the", "retry", "attempts", "and", "not", "have", "to", "worry", "about", "this", "NUMBER", "NUMBER", "I", "d", "ask", "on", "the", "EC", "NUMBER", "forums", "LINK", "NUMBER", "just", "for", "sure", "but", "for", "as", "I", "can", "tell", "the", "best", "you", "can", "do", "be", "NUMBER", "describe_volumes", "paginated", "call", "to", "get", "all", "of", "your", "volumes", "NUMBER", "for", "each", "volume", "make", "a", "describe", "snapshot", "call", "with", "a", "filter", "of", "volume", "id", "and", "start", "time", "NUMBER", "So", "if", "N", "be", "your", "total", "volumes", "you", "d", "have", "N", "N", "NUMBER", "as", "the", "number", "of", "API", "calls", "needed", "NUMBER", "But", "again", "I", "d", "ask", "on", "the", "EC", "NUMBER", "forums", "NUMBER", "Found", "the", "issue", "LINK", "I", "believe", "we", "can", "move", "the", "discussion", "over", "to", "that", "issue", "NUMBER", "Essentially", "what", "you", "ll", "need", "be", "the", "ability", "to", "increase", "the", "number", "of", "retries", "in", "the", "case", "where", "our", "default", "number", "of", "exponential", "backoff", "attempts", "be", "insufficient", "NUMBER", "One", "quick", "question", "as", "the", "change", "be", "do", "to", "botocore", "will", "the", "retry", "logic", "be", "present", "in", "boto", "NUMBER", "Instance", "NUMBER", "iam_instance_profile", "LINK", "EC", "NUMBER", "Instance", "NUMBER", "iam_instance_profile", "report", "the", "profile", "ARN", "and", "ID", "but", "not", "the", "name", "NUMBER", "This", "be", "strange", "since", "you", "can", "create", "new", "instances", "and", "associate", "an", "IAM", "profile", "with", "them", "by", "name", "and", "if", "you", "want", "to", "lookup", "an", "IAM", "profile", "directly", "you", "can", "actually", "_only_", "do", "it", "by", "name", "LINK", "IAM", "NUMBER", "Role", "NUMBER", "Related", "NUMBER", "Can", "we", "have", "Instance", "NUMBER", "iam_instance_profile", "include", "the", "profile", "name", "in", "the", "set", "of", "attributes", "Posted", "upstream", "here", "LINK", "NUMBER", "I", "appears", "that", "you", "can", "only", "filter", "IAM", "roles", "by", "path", "prefix", "NUMBER", "python", "iam", "boto", "NUMBER", "resource", "iam", "iam", "NUMBER", "roles", "NUMBER", "filter", "PathPrefix", "NUMBER", "Can", "we", "add", "support", "for", "filtering", "by", "IAM", "role", "name", "or", "ID", "Or", "be", "that", "an", "upstream", "limitation", "Yes", "I", "would", "rather", "instantiate", "it", "directly", "as", "you", "suggested", "NUMBER", "However", "NUMBER", "be", "precisely", "what", "keep", "me", "from", "doing", "that", "To", "elaborate", "on", "my", "use", "case", "I", "be", "querying", "an", "exist", "instance", "for", "its", "IAM", "profile", "and", "then", "use", "that", "information", "to", "create", "a", "new", "instance", "with", "the", "same", "IAM", "profile", "NUMBER", "I", "suppose", "I", "could", "use", "the", "IAM", "profile", "ARN", "which", "be", "returned", "when", "you", "query", "the", "instance", "and", "which", "you", "can", "use", "in", "create_instances", "NUMBER", "As", "kyleknap", "mention", "in", "NUMBER", "this", "be", "dependent", "on", "service", "support", "NUMBER", "Those", "filters", "be", "based", "on", "what", "the", "service", "provides", "us", "NUMBER", "Since", "you", "opened", "an", "issue", "with", "them", "I", "m", "closing", "out", "here", "NUMBER", "This", "method", "receives", "a", "parameter", "with", "a", "list", "of", "Launch", "Configuration", "names", "to", "describe", "NUMBER", "Is", "there", "a", "way", "to", "use", "wildcards", "to", "search", "things", "like", "myproyect", "or", "something", "like", "that", "So", "you", "could", "search", "for", "Launch", "Configurations", "and", "paginate", "NUMBER", "Update", "I", "see", "that", "you", "could", "omit", "the", "LaunchConfigurationNames", "parameter", "to", "get", "all", "the", "Launch", "Configurations", "to", "later", "on", "filter", "it", "manually", "NUMBER", "Probably", "that", "could", "be", "add", "to", "the", "Paginator", "documentation", "I", "ll", "take", "a", "look", "at", "it", "NUMBER", "Thank", "you", "for", "the", "suggestion", "I", "need", "to", "create", "Elastic", "Beanstalk", "Environment", "from", "boto", "NUMBER", "For", "which", "I", "guess", "the", "API", "sequence", "should", "be", "NUMBER", "_create_application", "_", "from", "this", "API", "we", "get", "the", "Application", "Name", "NUMBER", "_", "create_environment", "kwargs", "_", "Here", "i", "be", "passing", "below", "json", "as", "kwargs", "to", "api", "ApplicationName", "APP", "NAME", "EnvironmentName", "ABC", "Nodejs", "CNAMEPrefix", "ABC", "Neptune", "SolutionStackName", "NUMBER", "bit", "Amazon", "Linux", "NUMBER", "v", "NUMBER", "run", "Node", "NUMBER", "js", "Questions", "NUMBER", "How", "to", "mention", "that", "the", "Environment", "EC", "NUMBER", "should", "be", "attached", "to", "which", "VPC", "and", "subnet", "NUMBER", "In", "which", "Subnet", "its", "ELB", "should", "be", "created", "Any", "sample", "code", "will", "be", "helpful", "Please", "Note", "I", "have", "one", "public", "and", "one", "private", "subnet", "we", "can", "control", "the", "creation", "of", "EC", "NUMBER", "and", "ELB", "creation", "through", "subnet", "IDs", "cc", "kyleknap", "jamesls", "Is", "there", "a", "limiting", "factor", "with", "boto", "request", "when", "run", "async", "request", "in", "multiple", "threads", "We", "don", "t", "believe", "our", "issue", "be", "AWS", "rate", "limiting", "because", "we", "have", "not", "seen", "any", "AWS", "rate", "limiting", "throttling", "message", "in", "our", "logs", "NUMBER", "What", "do", "you", "mean", "by", "async", "request", "or", "rather", "what", "modules", "be", "you", "use", "to", "make", "the", "request", "asynchronous", "Curtis", "point", "me", "to", "this", "request", "NUMBER", "By", "async", "request", "we", "simply", "mean", "we", "be", "make", "boto", "request", "calls", "in", "roughly", "thirty", "threads", "run", "in", "the", "same", "process", "NUMBER", "We", "see", "marked", "performance", "degradation", "in", "the", "time", "it", "takes", "boto", "to", "respond", "to", "each", "individual", "request", "as", "the", "number", "of", "threads", "run", "increases", "NUMBER", "I", "would", "add", "that", "we", "have", "ruled", "out", "CPU", "Network", "memory", "or", "any", "other", "system", "relate", "cause", "NUMBER", "Some", "question", "Do", "you", "know", "if", "the", "cause", "be", "specific", "to", "boto", "NUMBER", "Does", "similar", "code", "use", "only", "the", "request", "LINK", "request", "NUMBER", "org", "en", "master", "module", "have", "the", "same", "problem", "Could", "other", "modules", "logging", "etc", "be", "cause", "the", "problem", "Have", "you", "profiled", "the", "application", "to", "determine", "which", "specific", "calls", "be", "taking", "the", "longest", "Have", "you", "factored", "in", "the", "Global", "Interpreter", "Lock", "Threads", "in", "python", "aren", "t", "usually", "truly", "concurrent", "NUMBER", "The", "application", "do", "not", "make", "use", "of", "the", "request", "module", "directly", "but", "it", "could", "quite", "possible", "be", "the", "bottleneck", "NUMBER", "Is", "there", "a", "way", "to", "configure", "boto", "NUMBER", "to", "log", "timings", "from", "the", "internal", "calls", "to", "request", "We", "have", "not", "looked", "into", "the", "logging", "module", "because", "we", "really", "don", "t", "do", "that", "much", "but", "perhaps", "with", "a", "combination", "of", "logging", "from", "different", "threads", "and", "GIL", "it", "could", "be", "impacting", "performance", "NUMBER", "We", "will", "try", "turning", "off", "logging", "NUMBER", "We", "have", "profiled", "it", "to", "the", "level", "of", "a", "set", "of", "calls", "to", "retrieve", "information", "across", "regions", "NUMBER", "Some", "of", "these", "blocks", "take", "longer", "simply", "because", "they", "be", "make", "more", "calls", "to", "aws", "but", "all", "see", "roughly", "the", "same", "level", "of", "degradation", "NUMBER", "GIL", "do", "actually", "run", "I", "O", "concurrently", "but", "in", "thinking", "over", "your", "other", "suggestions", "it", "seems", "we", "be", "collecting", "our", "metrics", "around", "more", "than", "the", "I", "O", "NUMBER", "We", "will", "go", "back", "and", "investigate", "some", "more", "NUMBER", "aebie", "Using", "the", "build", "in", "profile", "cprofile", "modules", "should", "give", "you", "a", "function", "level", "view", "of", "profiling", "data", "which", "should", "be", "sufficient", "to", "at", "least", "track", "down", "where", "things", "be", "taking", "longest", "NUMBER", "Based", "on", "your", "responses", "it", "seems", "like", "you", "re", "run", "up", "against", "the", "actual", "useful", "number", "of", "threads", "NUMBER", "You", "ll", "need", "to", "play", "around", "with", "your", "thread", "count", "to", "find", "the", "ideal", "number", "NUMBER", "If", "you", "find", "any", "other", "issue", "feel", "free", "to", "reopen", "or", "open", "another", "issue", "NUMBER", "I", "read", "up", "the", "document", "in", "amazon", "NUMBER", "they", "say", "it", "will", "overwrite", "the", "exist", "s", "NUMBER", "event", "notifications", "NUMBER", "it", "be", "not", "what", "I", "want", "NUMBER", "I", "want", "to", "one", "more", "event", "notification", "to", "the", "set", "of", "exist", "notifications", "NUMBER", "I", "be", "able", "to", "do", "it", "from", "console", "but", "use", "put_bucket_notification_configuration", "or", "put", "methods", "don", "t", "get", "me", "what", "I", "want", "NUMBER", "What", "be", "I", "miss", "By", "monitoring", "the", "AWS", "console", "request", "I", "find", "that", "amazon", "be", "use", "an", "API", "call", "PutAllBucketNotification", "to", "do", "this", "from", "console", "NUMBER", "I", "couldn", "t", "find", "any", "trace", "of", "documentation", "regard", "this", "API", "NUMBER", "LINK", "console", "NUMBER", "console", "NUMBER", "aws", "NUMBER", "amazon", "NUMBER", "com", "s", "NUMBER", "cws", "s", "NUMBER", "PutAllBucketNotification", "The", "current", "documentation", "for", "Cloudformation", "state", "that", "the", "following", "be", "the", "response", "syntax", "for", "the", "get_template", "function", "provide", "by", "the", "cloudformation", "service", "python", "TemplateBody", "string", "While", "the", "current", "API", "do", "include", "a", "TemplateBody", "key", "the", "value", "associated", "with", "that", "key", "isn", "t", "a", "string", "rather", "the", "value", "be", "a", "JSON", "object", "that", "represents", "the", "template", "NUMBER", "kyleknap", "No", "the", "python", "type", "be", "a", "dictionary", "not", "a", "string", "NUMBER", "Perhaps", "the", "below", "code", "will", "demonstrate", "this", "more", "clearly", "python", "import", "boto", "NUMBER", "from", "pprint", "import", "pprint", "try", "get_input", "raw_input", "except", "get_input", "input", "stack_name", "get_input", "Stack", "name", "client", "boto", "NUMBER", "client", "cloudformation", "us", "east", "NUMBER", "template", "client", "NUMBER", "get_template", "StackName", "stack_name", "TemplateBody", "print", "Resource", "names", "pprint", "name", "for", "name", "in", "template", "Resources", "NUMBER", "keys", "The", "value", "in", "TemplateBody", "key", "be", "not", "a", "string", "but", "rather", "a", "python", "data", "structure", "representing", "the", "template", "NUMBER", "I", "ve", "notice", "that", "the", "role", "do", "not", "come", "back", "when", "you", "call", "methods", "like", "describe_task_definition", "and", "register_task_definition", "NUMBER", "Right", "now", "you", "get", "an", "exception", "when", "you", "try", "to", "update", "a", "task", "with", "this", "property", "sh", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "scripts", "deploy", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "deploy_code", "config", "File", "NUMBER", "scripts", "deploy", "NUMBER", "py", "line", "NUMBER", "in", "deploy_code", "containerDefinitions", "task_def", "containerDefinitions", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "api_params", "operation_model", "context", "request_context", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_convert_to_request_dict", "api_params", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "validate", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "raise", "ParamValidationError", "report", "report", "NUMBER", "generate_report", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Unknown", "parameter", "in", "input", "taskRoleArn", "must", "be", "one", "of", "family", "containerDefinitions", "volumes", "Can", "we", "add", "it", "in", "Here", "be", "the", "valid", "parameters", "for", "reference", "LINK", "_TaskDefinition", "NUMBER", "html", "I", "see", "on", "the", "go", "sdk", "they", "had", "to", "add", "it", "also", "LINK", "sdk", "go", "issue", "NUMBER", "Yeah", "that", "fix", "it", "NUMBER", "Very", "odd", "I", "swear", "I", "JUST", "install", "boto", "NUMBER", "lol", "NUMBER", "Anyways", "thanks", "for", "the", "response", "It", "would", "be", "very", "very", "handy", "to", "be", "able", "to", "tell", "CodeDeploy", "to", "deploy", "a", "github", "short", "hash", "or", "branch", "or", "tag", "name", "NUMBER", "Then", "I", "could", "say", "deploy", "master", "without", "having", "to", "look", "up", "the", "full", "sha", "each", "time", "I", "deploy", "NUMBER", "The", "documentation", "on", "boto", "NUMBER", "claims", "that", "delete_object", "will", "return", "DeleteMarker", "True", "False", "VersionId", "string", "RequestCharged", "requester", "I", "planned", "to", "use", "the", "DeleteMarker", "as", "a", "verification", "that", "the", "delete", "was", "executed", "NUMBER", "Currently", "it", "returns", "ResponseMetadata", "HTTPHeaders", "date", "Tue", "NUMBER", "Aug", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "server", "AmazonS", "NUMBER", "x", "amz", "id", "NUMBER", "_", "_", "_", "x", "amz", "request", "id", "_", "_", "HTTPStatusCode", "NUMBER", "HostId", "_", "_", "_", "_", "RequestId", "_", "This", "be", "after", "doing", "a", "successful", "delete", "on", "s", "NUMBER", "It", "seems", "that", "the", "response", "be", "always", "the", "same", "whenever", "the", "object", "exists", "or", "not", "in", "the", "S", "NUMBER", "bucket", "NUMBER", "Is", "there", "any", "way", "to", "really", "differentiate", "a", "successful", "and", "unsuccessful", "delete", "request", "Hey", "I", "realize", "this", "be", "a", "very", "old", "and", "very", "dead", "ticket", "but", "I", "d", "like", "to", "raise", "this", "one", "again", "NUMBER", "I", "m", "trying", "to", "delete", "objects", "and", "confirm", "deletion", "via", "the", "boto", "response", "but", "the", "response", "do", "_not_", "line", "up", "with", "the", "documentation", "at", "all", "NUMBER", "What", "I", "expected", "DeleteMarker", "True", "False", "VersionId", "string", "RequestCharged", "requester", "What", "I", "get", "ResponseMetadata", "RetryAttempts", "NUMBER", "HTTPHeaders", "date", "Fri", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "x", "amz", "id", "NUMBER", "server", "AmazonS", "NUMBER", "x", "amz", "request", "id", "HTTPStatusCode", "NUMBER", "HostId", "RequestId", "NUMBER", "in", "the", "same", "situation", "NUMBER", "always", "get", "a", "NUMBER", "with", "same", "data", "I", "just", "update", "my", "boto", "NUMBER", "and", "it", "install", "a", "new", "s", "NUMBER", "transfer", "package", "NUMBER", "NUMBER", "Problem", "be", "that", "now", "I", "get", "a", "load", "of", "DEBUG", "message", "for", "every", "S", "NUMBER", "download", "my", "app", "performs", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Acquiring", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "DownloadSubmissionTask", "transfer_future", "TAG", "about", "to", "wait", "for", "the", "following", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "DownloadSubmissionTask", "transfer_future", "TAG", "do", "waiting", "for", "dependent", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "Executing", "task", "DownloadSubmissionTask", "transfer_future", "TAG", "with", "kwargs", "io_executor", "TAG", "request_executor", "TAG", "osutil", "TAG", "client", "TAG", "transfer_future", "TAG", "config", "TAG", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "futures", "Submitting", "task", "GetObjectTask", "extra_args", "bucket", "BUCKET", "key", "FILE", "to", "executor", "TAG", "for", "transfer", "request", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Acquiring", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "GetObjectTask", "extra_args", "bucket", "BUCKET", "key", "FILE", "about", "to", "wait", "for", "the", "following", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "GetObjectTask", "extra_args", "bucket", "BUCKET", "key", "FILE", "do", "waiting", "for", "dependent", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "Executing", "task", "GetObjectTask", "extra_args", "bucket", "BUCKET", "key", "FILE", "with", "kwargs", "fileobj", "TAG", "bucket", "BUCKET", "download_output_manager", "TAG", "extra_args", "callbacks", "client", "TAG", "key", "FILE", "io_chunksize", "NUMBER", "max_attempts", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "futures", "Submitting", "task", "JoinFuturesTask", "to", "executor", "TAG", "for", "transfer", "request", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Acquiring", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "JoinFuturesTask", "about", "to", "wait", "for", "the", "following", "futures", "TAG", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Releasing", "acquire", "NUMBER", "None", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "JoinFuturesTask", "about", "to", "wait", "for", "TAG", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "futures", "Submitting", "task", "IOWriteTask", "offset", "NUMBER", "to", "executor", "TAG", "for", "transfer", "request", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Acquiring", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "IOWriteTask", "offset", "NUMBER", "about", "to", "wait", "for", "the", "following", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "IOWriteTask", "offset", "NUMBER", "do", "waiting", "for", "dependent", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "Executing", "task", "IOWriteTask", "offset", "NUMBER", "with", "kwargs", "fileobj", "TAG", "offset", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Releasing", "acquire", "NUMBER", "None", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "JoinFuturesTask", "do", "waiting", "for", "dependent", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Releasing", "acquire", "NUMBER", "None", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "Executing", "task", "JoinFuturesTask", "with", "kwargs", "futures_to_wait_on", "None", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "futures", "Submitting", "task", "IORenameFileTask", "final_filename", "var", "folders", "kd", "yx", "NUMBER", "n", "NUMBER", "z", "NUMBER", "kz", "NUMBER", "x", "NUMBER", "_", "NUMBER", "z", "NUMBER", "sq", "NUMBER", "m", "NUMBER", "qvmpm", "T", "tmpgrD", "NUMBER", "f", "to", "executor", "TAG", "for", "transfer", "request", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Acquiring", "NUMBER", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Releasing", "acquire", "NUMBER", "None", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "IORenameFileTask", "final_filename", "var", "folders", "kd", "yx", "NUMBER", "n", "NUMBER", "z", "NUMBER", "kz", "NUMBER", "x", "NUMBER", "_", "NUMBER", "z", "NUMBER", "sq", "NUMBER", "m", "NUMBER", "qvmpm", "T", "tmpgrD", "NUMBER", "f", "about", "to", "wait", "for", "the", "following", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "IORenameFileTask", "final_filename", "var", "folders", "kd", "yx", "NUMBER", "n", "NUMBER", "z", "NUMBER", "kz", "NUMBER", "x", "NUMBER", "_", "NUMBER", "z", "NUMBER", "sq", "NUMBER", "m", "NUMBER", "qvmpm", "T", "tmpgrD", "NUMBER", "f", "do", "waiting", "for", "dependent", "futures", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "tasks", "Executing", "task", "IORenameFileTask", "final_filename", "var", "folders", "kd", "yx", "NUMBER", "n", "NUMBER", "z", "NUMBER", "kz", "NUMBER", "x", "NUMBER", "_", "NUMBER", "z", "NUMBER", "sq", "NUMBER", "m", "NUMBER", "qvmpm", "T", "tmpgrD", "NUMBER", "f", "with", "kwargs", "osutil", "TAG", "final_filename", "var", "folders", "kd", "yx", "NUMBER", "n", "NUMBER", "z", "NUMBER", "kz", "NUMBER", "x", "NUMBER", "_", "NUMBER", "z", "NUMBER", "sq", "NUMBER", "m", "NUMBER", "qvmpm", "T", "tmpgrD", "NUMBER", "f", "fileobj", "TAG", "DEBUG", "s", "NUMBER", "transfer", "NUMBER", "utils", "Releasing", "acquire", "NUMBER", "None", "I", "could", "exclude", "them", "but", "I", "use", "a", "ton", "of", "boto", "NUMBER", "calls", "and", "have", "never", "seen", "these", "kind", "of", "debug", "message", "come", "from", "any", "other", "portion", "of", "the", "library", "NUMBER", "I", "don", "t", "get", "any", "botocore", "debug", "message", "i", "m", "not", "explicitly", "calling", "any", "logging", "method", "on", "boto", "NUMBER", "All", "I", "typically", "do", "be", "call", "boto", "NUMBER", "client", "NUMBER", "for", "services", "NUMBER", "During", "app", "create", "logging", "NUMBER", "config", "NUMBER", "dictConfig", "json", "NUMBER", "load", "open", "config", "logging", "NUMBER", "json", "with", "logging", "NUMBER", "json", "version", "NUMBER", "formatters", "simple", "format", "levelname", "s", "name", "s", "message", "s", "line", "format", "asctime", "s", "name", "s", "levelname", "s", "message", "s", "json", "format", "loggerName", "name", "s", "asciTime", "asctime", "s", "pathName", "pathname", "s", "logRecordCreationTime", "created", "f", "functionName", "funcName", "s", "levelNo", "levelno", "s", "lineNo", "lineno", "d", "time", "msecs", "d", "levelName", "levelname", "s", "message", "message", "s", "handlers", "console", "class", "logging", "NUMBER", "StreamHandler", "level", "DEBUG", "formatter", "simple", "stream", "ext", "sys", "NUMBER", "dout", "syslog", "class", "logging", "NUMBER", "handlers", "NUMBER", "SysLogHandler", "level", "INFO", "formatter", "json", "loggers", "standard", "level", "INFO", "handlers", "syslog", "propagate", "NUMBER", "root", "level", "DEBUG", "handlers", "console", "I", "m", "use", "temporary", "IAM", "credentials", "below", "python", "import", "boto", "NUMBER", "sts", "boto", "NUMBER", "client", "sts", "sts", "NUMBER", "generate_presigned_url", "ClientMethod", "get_caller_identity", "Params", "And", "when", "I", "make", "the", "request", "it", "responds", "TAG", "TAG", "TAG", "Sender", "TAG", "TAG", "SignatureDoesNotMatch", "TAG", "TAG", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "AWS", "Secret", "Access", "Key", "and", "signing", "method", "NUMBER", "Consult", "the", "service", "documentation", "for", "details", "NUMBER", "The", "Canonical", "String", "for", "this", "request", "should", "have", "be", "GET", "Action", "GetCallerIdentity", "amp", "Version", "NUMBER", "NUMBER", "NUMBER", "amp", "X", "Amz", "Algorithm", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "amp", "X", "Amz", "Credential", "TAG", "NUMBER", "Fus", "east", "NUMBER", "NUMBER", "Fsts", "NUMBER", "Faws", "NUMBER", "_request", "amp", "X", "Amz", "Date", "NUMBER", "T", "NUMBER", "Z", "amp", "X", "Amz", "Expires", "NUMBER", "amp", "X", "Amz", "Security", "Token", "TAG", "amp", "X", "Amz", "SignedHeaders", "host", "host", "sts", "NUMBER", "amazonaws", "NUMBER", "com", "host", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "afbf", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "b", "NUMBER", "The", "String", "to", "Sign", "should", "have", "be", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "east", "NUMBER", "sts", "aws", "NUMBER", "_request", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "acaaf", "NUMBER", "fc", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "c", "NUMBER", "cebdb", "NUMBER", "e", "NUMBER", "f", "TAG", "TAG", "TAG", "f", "NUMBER", "dfd", "NUMBER", "NUMBER", "bee", "NUMBER", "e", "NUMBER", "NUMBER", "ab", "NUMBER", "b", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "TAG", "TAG", "Not", "sure", "if", "I", "m", "doing", "something", "wrong", "but", "given", "that", "the", "method", "takes", "no", "parameters", "I", "m", "not", "sure", "how", "much", "room", "for", "error", "there", "be", "NUMBER", "Oh", "my", "understanding", "was", "that", "anything", "use", "the", "AWS", "signature", "scheme", "on", "a", "GET", "request", "was", "eligible", "for", "presigned", "URLs", "because", "that", "s", "basically", "all", "an", "AWS", "request", "was", "behind", "the", "scenes", "NUMBER", "Is", "that", "wrong", "But", "looking", "more", "carefully", "it", "appears", "that", "GetCallerIdentity", "expects", "to", "be", "call", "with", "POST", "so", "perhaps", "that", "s", "what", "s", "wrong", "At", "the", "same", "time", "the", "server", "s", "response", "suggests", "that", "it", "_is_", "actually", "possible", "to", "call", "it", "properly", "it", "s", "basically", "telling", "me", "what", "to", "do", "to", "appease", "it", "right", "but", "that", "whatever", "boto", "NUMBER", "be", "doing", "isn", "t", "quite", "right", "Oh", "perfect", "thanks", "Hi", "I", "m", "currently", "looking", "at", "creating", "an", "Ansible", "module", "to", "manage", "Autoscaling", "Scheduled", "actions", "NUMBER", "However", "looking", "at", "the", "boto", "reference", "it", "seems", "like", "the", "functionality", "to", "create", "scheduled", "actions", "be", "lacking", "provide", "only", "describe", "delete", "NUMBER", "Is", "there", "a", "reason", "this", "hasn", "t", "be", "implement", "I", "would", "like", "to", "add", "it", "in", "and", "submit", "a", "PR", "but", "wanted", "to", "check", "there", "wasn", "t", "a", "reason", "why", "it", "wasn", "t", "there", "or", "isn", "t", "already", "in", "progress", "I", "checked", "but", "didn", "t", "find", "anything", "NUMBER", "Let", "me", "know", "thoughts", "NUMBER", "Hi", "Dan", "Kitchen", "Feel", "free", "to", "use", "my", "scheduled", "actions", "module", "NUMBER", "It", "works", "but", "be", "not", "quite", "finished", "LINK", "aws", "ec", "NUMBER", "asg", "scheduled", "actions", "mmochan", "Hey", "NUMBER", "Thanks", "for", "this", "NUMBER", "Are", "you", "planning", "on", "completing", "work", "on", "this", "and", "merge", "upstream", "to", "Ansible", "Just", "dropping", "it", "in", "as", "be", "doesn", "t", "seem", "to", "work", "for", "me", "NUMBER", "Willing", "to", "put", "in", "the", "yards", "here", "but", "don", "t", "want", "to", "if", "you", "have", "a", "version", "further", "along", "or", "were", "planning", "to", "work", "on", "it", "shortly", "NUMBER", "conatus", "Hi", "Alex", "Sadly", "I", "ve", "not", "had", "the", "time", "to", "progress", "this", "one", "so", "if", "you", "have", "the", "time", "then", "yes", "please", "go", "ahead", "NUMBER", "When", "trying", "to", "generate", "a", "presigned", "URL", "for", "a", "firehose", "put_record", "operation", "the", "following", "exception", "be", "throw", "Traceback", "most", "recent", "call", "last", "File", "foo", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "Data", "b", "FOOBARBAZQUX", "File", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "generate_presigned_url", "operation_name", "operation_name", "File", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "generate_presigned_url", "presign", "url", "expires_in", "File", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "auth", "NUMBER", "add_auth", "request", "File", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "self", "NUMBER", "_modify_request_before_signing", "request", "File", "NUMBER", "boto", "NUMBER", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "_modify_request_before_signing", "query_dict", "NUMBER", "update", "request", "NUMBER", "data", "TypeError", "cannot", "convert", "dictionary", "update", "sequence", "element", "NUMBER", "to", "a", "sequence", "The", "following", "code", "demonstrates", "the", "issue", "import", "boto", "NUMBER", "kinesis", "boto", "NUMBER", "client", "firehose", "region_name", "us", "east", "NUMBER", "aws_access_key_id", "KEY", "aws_secret_access_key", "SECRET", "kinesis", "NUMBER", "generate_presigned_url", "put_record", "Params", "DeliveryStreamName", "STREAM", "Record", "Data", "b", "FOOBARBAZQUX", "It", "appears", "as", "if", "the", "request", "body", "be", "be", "converted", "to", "a", "bytestring", "via", "serialize_to_request", "LINK", "L", "NUMBER", "NUMBER", "However", "when", "the", "presigning", "happens", "later", "the", "request", "body", "be", "assumed", "to", "be", "a", "dictionary", "request_signer", "NUMBER", "generate_presigned_url", "LINK", "L", "NUMBER", "kyleknap", "I", "sort", "of", "suspected", "that", "might", "be", "the", "case", "NUMBER", "I", "fiddled", "with", "some", "internals", "to", "try", "to", "work", "around", "this", "issue", "and", "the", "presigned", "url", "I", "get", "back", "didn", "t", "work", "NUMBER", "Would", "this", "be", "a", "documentation", "issue", "then", "LINK", "Kinesis", "NUMBER", "Client", "NUMBER", "generate_presigned_url", "Don", "t", "have", "that", "handy", "here", "will", "need", "to", "get", "back", "to", "you", "NUMBER", "Found", "a", "similiar", "issue", "with", "s", "NUMBER", "v", "NUMBER", "query", "signer", "The", "issue", "could", "be", "reproduced", "with", "the", "following", "script", "import", "os", "import", "logging", "from", "boto", "NUMBER", "session", "import", "Session", "import", "botocore", "NUMBER", "client", "if", "__name__", "__main__", "logging", "NUMBER", "getLogger", "boto", "NUMBER", "NUMBER", "setLevel", "logging", "NUMBER", "NOTSET", "boto", "NUMBER", "set_stream_logger", "name", "botocore", "signature_version", "os", "NUMBER", "environ", "NUMBER", "get", "BOTO_SIGNATURE_VERSION", "s", "NUMBER", "query", "s", "Session", "aws_access_key_id", "user", "aws_secret_access_key", "password", "config", "botocore", "NUMBER", "client", "NUMBER", "Config", "signature_version", "signature_version", "region_name", "us", "east", "NUMBER", "s", "NUMBER", "s", "NUMBER", "resource", "s", "NUMBER", "endpoint_url", "LINK", "config", "config", "delete_params", "Objects", "Key", "key", "Quiet", "True", "url", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "generate_presigned_url", "ClientMethod", "delete_objects", "Params", "Bucket", "bucket", "Delete", "delete_params", "print", "url", "With", "no", "environment", "variable", "set", "it", "could", "generate", "the", "right", "output", "LINK", "user", "Expires", "NUMBER", "Signature", "lG", "NUMBER", "sIEj", "NUMBER", "FLVwZ", "NUMBER", "qJcpMFjARt", "NUMBER", "FVEw", "NUMBER", "D", "when", "BOTO_SIGNATURE_VERSION", "be", "set", "to", "s", "NUMBER", "v", "NUMBER", "s", "NUMBER", "v", "NUMBER", "query", "calling", "generate_presigned_url", "will", "cause", "the", "following", "error", "Traceback", "most", "recent", "call", "last", "File", "test_boto", "NUMBER", "_presigned", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "Delete", "delete_params", "File", "Users", "richardding", "Workspace", "tmp", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "generate_presigned_url", "operation_name", "operation_name", "File", "Users", "richardding", "Workspace", "tmp", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "generate_presigned_url", "presign", "url", "expires_in", "File", "Users", "richardding", "Workspace", "tmp", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "auth", "NUMBER", "add_auth", "request", "File", "Users", "richardding", "Workspace", "tmp", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "self", "NUMBER", "_modify_request_before_signing", "request", "File", "Users", "richardding", "Workspace", "tmp", "venv", "lib", "python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "_modify_request_before_signing", "query_dict", "NUMBER", "update", "request", "NUMBER", "data", "ValueError", "dictionary", "update", "sequence", "element", "NUMBER", "has", "length", "NUMBER", "NUMBER", "be", "required", "Environment", "Information", "boto", "NUMBER", "version", "NUMBER", "python", "version", "Python", "NUMBER", "virtualenv", "version", "NUMBER", "The", "the", "cloudformations", "hasMany", "collection", "include", "Stacks", "NUMBER", "This", "be", "populated", "by", "the", "describe", "stacks", "call", "but", "unlike", "other", "resources", "of", "this", "type", "i", "NUMBER", "e", "NUMBER", "ec", "NUMBER", "instances", "it", "do", "not", "populate", "the", "individual", "stack", "resources", "with", "the", "results", "of", "this", "call", "NUMBER", "The", "miss", "path", "attribute", "has", "be", "add", "to", "fix", "this", "NUMBER", "be", "I", "likely", "to", "get", "a", "response", "to", "this", "pull", "request", "shipit", "shipit", "shipit", "Implements", "LINK", "Exposes", "Session", "NUMBER", "available_profiles", "from", "botocore", "to", "session", "in", "boto", "NUMBER", "also", "my", "linter", "wanted", "to", "cleanup", "the", "test_session", "NUMBER", "py", "file", "in", "addition", "to", "add", "my", "test", "there", "NUMBER", "shipit", "Done", "Ping", "Merged", "thanks", "for", "the", "pull", "request", "NUMBER", "shipit", "shipit", "I", "know", "this", "has", "be", "merge", "but", "I", "would", "prefer", "to", "add", "this", "to", "our", "sphinx", "documentation", "NUMBER", "I", "think", "this", "be", "something", "users", "should", "be", "able", "to", "view", "from", "readthedocs", "NUMBER", "I", "tried", "to", "execute", "the", "following", "code", "behind", "corporate", "firewall", "it", "didnt", "work", "import", "boto", "NUMBER", "endpoint", "arn", "aws", "sns", "us", "north", "NUMBER", "NUMBER", "data", "client", "boto", "NUMBER", "setup_default_session", "region_name", "us", "north", "NUMBER", "aws_access_key_id", "ACCESS_KEY", "aws_secret_access_key", "SECRET_KEY", "sns", "boto", "NUMBER", "resource", "sns", "client", "boto", "NUMBER", "client", "sns", "aws_access_key_id", "ACCESS_KEY", "aws_secret_access_key", "SECRET_KEY", "is_secure", "False", "platform_endpoint", "sns", "NUMBER", "PlatformEndpoint", "endpoint", "platform_endpoint", "NUMBER", "publish", "Message", "hi", "how", "do", "I", "disable", "SSL", "check", "We", "be", "run", "continuous", "integration", "build", "from", "develop", "branch", "against", "testpypi", "and", "master", "branch", "against", "pypi", "NUMBER", "The", "latest", "version", "on", "pypi", "be", "NUMBER", "The", "latest", "version", "on", "testpypi", "be", "NUMBER", "Please", "publish", "NUMBER", "to", "testpypi", "JordonPhillips", "thanks", "for", "your", "answer", "NUMBER", "Actually", "we", "ve", "change", "our", "build", "to", "install", "external", "dependencies", "like", "boto", "NUMBER", "from", "pypi", "NUMBER", "So", "there", "be", "no", "need", "to", "publish", "it", "to", "testpypi", "NUMBER", "I", "m", "write", "a", "lambda", "handler", "that", "takes", "event", "notifications", "from", "a", "remote", "S", "NUMBER", "bucket", "and", "copies", "a", "newly", "uploaded", "object", "into", "local", "bucket", "NUMBER", "Here", "be", "the", "important", "code", "bucket", "event", "Records", "NUMBER", "s", "NUMBER", "bucket", "name", "key", "event", "Records", "NUMBER", "s", "NUMBER", "object", "key", "try", "s", "NUMBER", "Object", "bucket", "clone", "key", "NUMBER", "copy_from", "CopySource", "bucket", "key", "When", "I", "upload", "a", "file", "to", "execute", "the", "code", "I", "get", "the", "following", "error", "in", "Cloudwatch", "An", "error", "occur", "AccessDenied", "when", "calling", "the", "CopyObject", "operation", "Access", "Denied", "ClientError", "Traceback", "most", "recent", "call", "last", "File", "var", "task", "lambda_function", "NUMBER", "py", "line", "NUMBER", "in", "lambda_handler", "raise", "e", "ClientError", "An", "error", "occur", "AccessDenied", "when", "calling", "the", "CopyObject", "operation", "Access", "Denied", "It", "seems", "that", "a", "space", "gets", "translated", "to", "a", "somewhere", "along", "the", "way", "NUMBER", "I", "add", "the", "following", "key", "key", "NUMBER", "replace", "to", "my", "code", "and", "now", "it", "copies", "properly", "without", "error", "NUMBER", "Closing", "due", "to", "inactivity", "NUMBER", "I", "be", "also", "having", "the", "same", "problem", "NUMBER", "A", "key", "with", "a", "space", "in", "it", "fail", "to", "get", "retrieved", "NUMBER", "for", "record", "in", "event", "Records", "bucket", "record", "s", "NUMBER", "bucket", "name", "key", "record", "s", "NUMBER", "object", "key", "file_name_pattern", "re", "NUMBER", "match", "r", "NUMBER", "key", "file_name", "file_name_pattern", "NUMBER", "group", "NUMBER", "download_path", "tmp", "NUMBER", "format", "uuid", "NUMBER", "uuid", "NUMBER", "file_name", "s", "NUMBER", "_client", "NUMBER", "download_file", "bucket", "key", "download_path", "My", "work", "around", "be", "to", "set", "key", "like", "key", "urllib", "NUMBER", "unquote_plus", "event", "Records", "NUMBER", "s", "NUMBER", "object", "key", "NUMBER", "encode", "utf", "NUMBER", "I", "add", "the", "stream", "loggger", "and", "here", "be", "my", "output", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTPS", "connection", "NUMBER", "my", "photos", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "INFO", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "Starting", "new", "HTTPS", "connection", "NUMBER", "my", "photos", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "HEAD", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "c", "b", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "Hannah", "NUMBER", "BTrot", "NUMBER", "JPG", "HTTP", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "HEAD", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "c", "b", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "Hannah", "NUMBER", "BTrot", "NUMBER", "JPG", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "x", "amz", "id", "NUMBER", "rp", "NUMBER", "ws", "NUMBER", "BtuN", "NUMBER", "AbdxRcN", "NUMBER", "JOM", "NUMBER", "BNg", "kHFOixWhgPQL", "NUMBER", "PmUnNN", "NUMBER", "em", "NUMBER", "AP", "NUMBER", "I", "NUMBER", "n", "PUHvl", "NUMBER", "j", "NUMBER", "ncpEeyPg", "NUMBER", "server", "AmazonS", "NUMBER", "transfer", "encoding", "chunked", "x", "amz", "request", "id", "NUMBER", "BB", "NUMBER", "C", "NUMBER", "C", "NUMBER", "EE", "date", "Wed", "NUMBER", "Dec", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "type", "application", "xml", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "Response", "headers", "x", "amz", "id", "NUMBER", "rp", "NUMBER", "ws", "NUMBER", "BtuN", "NUMBER", "AbdxRcN", "NUMBER", "JOM", "NUMBER", "BNg", "kHFOixWhgPQL", "NUMBER", "PmUnNN", "NUMBER", "em", "NUMBER", "AP", "NUMBER", "I", "NUMBER", "n", "PUHvl", "NUMBER", "j", "NUMBER", "ncpEeyPg", "NUMBER", "server", "AmazonS", "NUMBER", "transfer", "encoding", "chunked", "x", "amz", "request", "id", "NUMBER", "BB", "NUMBER", "C", "NUMBER", "C", "NUMBER", "EE", "date", "Wed", "NUMBER", "Dec", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "type", "application", "xml", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "Response", "body", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "No", "retry", "needed", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "HeadObject", "calling", "handler", "TAG", "An", "error", "occur", "NUMBER", "when", "calling", "the", "HeadObject", "operation", "Not", "Found", "ClientError", "Traceback", "most", "recent", "call", "last", "File", "var", "task", "createThumbnail", "NUMBER", "py", "line", "NUMBER", "in", "handler", "s", "NUMBER", "_client", "NUMBER", "download_file", "bucket", "key", "download_path", "File", "var", "runtime", "boto", "NUMBER", "s", "NUMBER", "inject", "NUMBER", "py", "line", "NUMBER", "in", "download_file", "extra_args", "ExtraArgs", "callback", "Callback", "File", "var", "runtime", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "py", "line", "NUMBER", "in", "download_file", "future", "NUMBER", "result", "File", "var", "runtime", "s", "NUMBER", "transfer", "futures", "NUMBER", "py", "line", "NUMBER", "in", "result", "return", "self", "NUMBER", "_coordinator", "NUMBER", "result", "File", "var", "runtime", "s", "NUMBER", "transfer", "futures", "NUMBER", "py", "line", "NUMBER", "in", "result", "raise", "self", "NUMBER", "_exception", "ClientError", "An", "error", "occur", "NUMBER", "when", "calling", "the", "HeadObject", "operation", "Not", "Found", "END", "RequestId", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "Behind", "some", "corporate", "firewalls", "it", "be", "not", "possible", "to", "use", "the", "git", "protocol", "to", "clone", "git", "repositories", "NUMBER", "So", "https", "has", "be", "add", "as", "alternative", "protocol", "to", "clone", "git", "repositories", "NUMBER", "I", "could", "install", "from", "pip", "but", "I", "wanted", "to", "install", "it", "the", "way", "as", "describe", "in", "LINK", "under", "the", "Getting", "Started", "section", "NUMBER", "There", "the", "command", "pip", "install", "r", "requirements", "NUMBER", "txt", "fail", "because", "our", "corporate", "firewall", "blocked", "git", "github", "NUMBER", "com", "boto", "botocore", "NUMBER", "git", "develop", "egg", "botocore", "NUMBER", "That", "was", "the", "reason", "why", "I", "created", "the", "PR", "NUMBER", "shipit", "Seems", "reasonable", "to", "me", "NUMBER", "It", "might", "be", "worth", "investigating", "in", "the", "future", "if", "raising", "the", "IO", "chunk", "to", "something", "NUMBER", "KB", "but", "less", "than", "NUMBER", "MB", "could", "still", "provide", "a", "reasonable", "balance", "of", "callback", "granularity", "and", "suitable", "for", "a", "majority", "of", "cases", "NUMBER", "Change", "seems", "pretty", "straightforward", "looks", "good", "to", "me", "NUMBER", "Don", "t", "have", "anything", "to", "add", "beyond", "kyleknap", "s", "comments", "NUMBER", "Regarding", "NUMBER", "from", "above", "kyleknap", "what", "s", "the", "advantage", "of", "raising", "an", "error", "if", "the", "file", "be", "not", "readable", "vs", "NUMBER", "propagating", "the", "IOError", "File", "not", "open", "for", "reading", "Seems", "valuable", "to", "just", "let", "the", "std", "IOError", "type", "propagate", "back", "to", "the", "user", "right", "The", "docstring", "of", "between", "function", "in", "boto", "NUMBER", "dynamodb", "conditions", "NUMBER", "py", "at", "line", "NUMBER", "be", "misleading", "NUMBER", "The", "description", "of", "low_value", "and", "high_value", "parameters", "be", "incorrect", "according", "to", "AWS", "docs", "LINK", "_Condition", "NUMBER", "html", "BETWEEN", "Greater", "than", "or", "equal", "to", "the", "first", "value", "and", "less", "than", "or", "equal", "to", "the", "second", "value", "NUMBER", "Currently", "setting", "up", "a", "new", "user", "permission", "works", "ec", "NUMBER", "modify_snapshot_attribute", "SnapshotId", "snap", "xxxx", "Attribute", "createVolumePermission", "OperationType", "add", "UserIds", "yyyy", "but", "the", "remove", "method", "doesn", "t", "ec", "NUMBER", "modify_snapshot_attribute", "SnapshotId", "snap", "xxxx", "Attribute", "createVolumePermission", "OperationType", "remove", "UserIds", "yyyy", "After", "run", "this", "command", "the", "permission", "stays", "for", "userId", "yyy", "Hi", "everyone", "It", "be", "nice", "to", "see", "this", "SDK", "for", "Python", "but", "I", "have", "a", "problem", "for", "two", "days", "NUMBER", "My", "goal", "be", "to", "access", "to", "my", "S", "NUMBER", "on", "AWS", "Lambda", "NUMBER", "First", "I", "open", "a", "role", "with", "S", "NUMBER", "getObject", "policy", "and", "open", "the", "Lambda", "function", "with", "this", "role", "NUMBER", "And", "my", "code", "be", "just", "a", "simple", "test", "like", "that", "import", "boto", "NUMBER", "def", "worker_handler", "event", "context", "TODO", "implement", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "for", "bucket", "in", "s", "NUMBER", "buckets", "NUMBER", "all", "print", "bucket", "NUMBER", "name", "The", "result", "I", "get", "be", "always", "timeout", "errorMessage", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "df", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fed", "NUMBER", "b", "NUMBER", "Task", "timed", "out", "after", "NUMBER", "seconds", "I", "can", "run", "the", "same", "code", "on", "my", "own", "machine", "with", "AWS", "CLI", "and", "get", "the", "following", "correct", "result", "elasticbeanstalk", "us", "west", "NUMBER", "NUMBER", "s", "NUMBER", "bucket", "with", "key", "s", "NUMBER", "bucket", "with", "script", "test", "s", "NUMBER", "bucket", "chienyu", "Is", "there", "any", "other", "setting", "I", "need", "to", "do", "on", "Lambda", "Thanks", "for", "any", "help", "in", "advance", "I", "think", "the", "problem", "here", "be", "because", "I", "didn", "t", "select", "No", "VPC", "NUMBER", "Once", "I", "selected", "No", "VPC", "and", "it", "can", "work", "normally", "NUMBER", "But", "I", "be", "still", "confused", "about", "why", "we", "don", "t", "need", "VPC", "in", "Lambda", "NUMBER", "I", "was", "use", "the", "boto", "NUMBER", "client", "s", "NUMBER", "NUMBER", "list_objects_v", "NUMBER", "method", "to", "list", "all", "the", "objects", "in", "the", "bucket", "NUMBER", "The", "FetchOwner", "parameter", "be", "set", "to", "True", "boolean", "true", "in", "the", "call", "NUMBER", "The", "response", "still", "do", "not", "contain", "the", "Owner", "s", "info", "NUMBER", "Further", "investigation", "shows", "that", "the", "BOTO", "NUMBER", "API", "sends", "the", "fetch", "owner", "request", "parameter", "value", "set", "to", "True", "instead", "of", "true", "and", "hence", "no", "Owner", "information", "be", "returned", "NUMBER", "Please", "see", "the", "code", "and", "debug", "log", "below", "def", "list_objects_v", "NUMBER", "response", "client", "NUMBER", "list_objects_v", "NUMBER", "Bucket", "vivbucket", "MaxKeys", "NUMBER", "FetchOwner", "True", "print", "response", "Debug", "Log", "_Request_", "_DEBUG", "botocore", "NUMBER", "endpoint", "Sending", "http", "request", "TAG", "INFO", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "Starting", "new", "HTTPS", "connection", "NUMBER", "vivbucket", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "DEBUG", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "GET", "list", "type", "NUMBER", "max", "keys", "NUMBER", "fetch", "owner", "True", "HTTP", "NUMBER", "NUMBER", "None_", "_Response", "_DEBUG", "botocore", "NUMBER", "parsers", "Response", "body", "TAG", "TAG", "TAG", "vivbucket", "TAG", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "zjQQyp", "NUMBER", "QW", "xa", "NUMBER", "dxN", "NUMBER", "qqrSwt", "NUMBER", "AWyYfxzdgsqD", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "true", "TAG", "TAG", "TAG", "abcdef", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "TAG", "TAG", "quot", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "c", "quot", "TAG", "TAG", "NUMBER", "TAG", "TAG", "STANDARD", "TAG", "TAG", "TAG", "_", "JordonPhillips", "This", "might", "interest", "you", "NUMBER", "Thanks", "Jordon", "My", "code", "import", "boto", "NUMBER", "sqs", "boto", "NUMBER", "resource", "sis", "I", "m", "use", "the", "latest", "botocore", "version", "NUMBER", "I", "suspect", "this", "might", "be", "relate", "to", "a", "new", "feature", "in", "ECS", "IAM", "roles", "for", "tasks", "LINK", "aws", "whats", "new", "NUMBER", "NUMBER", "amazon", "ec", "NUMBER", "container", "service", "now", "support", "iam", "roles", "for", "tasks", "Stacktrace", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "worker", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "sqs", "boto", "NUMBER", "resource", "sis", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "resource", "return", "_get_default_session", "NUMBER", "resource", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "resource", "aws_session_token", "aws_session_token", "config", "config", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "client", "aws_session_token", "aws_session_token", "config", "config", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "create_client", "credentials", "self", "NUMBER", "get_credentials", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "get_credentials", "credential_provider", "NUMBER", "load_credentials", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "credentials", "NUMBER", "py", "line", "NUMBER", "in", "load_credentials", "creds", "provider", "NUMBER", "load", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "credentials", "NUMBER", "py", "line", "NUMBER", "in", "load", "return", "self", "NUMBER", "_retrieve_or_fail", "self", "NUMBER", "_environ", "self", "NUMBER", "ENV_VAR", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "credentials", "NUMBER", "py", "line", "NUMBER", "in", "_retrieve_or_fail", "creds", "fetcher", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "credentials", "NUMBER", "py", "line", "NUMBER", "in", "fetch_creds", "response", "self", "NUMBER", "_fetcher", "NUMBER", "retrieve_uri", "relative_uri", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "utils", "NUMBER", "py", "line", "NUMBER", "in", "retrieve_uri", "return", "self", "NUMBER", "_get_response", "full_url", "headers", "self", "NUMBER", "TIMEOUT_SECONDS", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "utils", "NUMBER", "py", "line", "NUMBER", "in", "_get_response", "return", "json", "NUMBER", "loads", "response", "NUMBER", "content", "File", "usr", "local", "lib", "python", "NUMBER", "json", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "loads", "s", "NUMBER", "__class__", "NUMBER", "__name__", "TypeError", "the", "JSON", "object", "must", "be", "str", "not", "bytes", "I", "was", "able", "to", "workaround", "the", "problem", "by", "modifying", "line", "NUMBER", "in", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "utils", "NUMBER", "py", "from", "return", "json", "NUMBER", "loads", "response", "NUMBER", "content", "to", "return", "json", "NUMBER", "loads", "response", "NUMBER", "content", "NUMBER", "decode", "utf", "NUMBER", "or", "return", "json", "NUMBER", "loads", "response", "NUMBER", "text", "Created", "a", "pull", "request", "LINK", "Sorry", "for", "the", "confusion", "in", "my", "original", "code", "it", "was", "sqs", "Thank", "you", "Fixed", "via", "LINK", "This", "be", "relatively", "rare", "so", "hard", "to", "replicate", "but", "when", "calling", "wait_until_running", "on", "a", "new", "instance", "sometimes", "boto", "NUMBER", "raises", "a", "ResponseParserError", "NUMBER", "I", "m", "assuming", "this", "be", "a", "bug", "and", "not", "a", "feature", "Full", "traceback", "below", "create_ec", "NUMBER", "_instance", "be", "our", "function", "in", "create_ec", "NUMBER", "_instance", "instance", "NUMBER", "wait_until_running", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_waiter", "waiter", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "waiter", "NUMBER", "wait", "params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "waiter", "NUMBER", "py", "line", "NUMBER", "in", "wait", "Waiter", "NUMBER", "wait", "self", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "waiter", "NUMBER", "py", "line", "NUMBER", "in", "wait", "response", "self", "NUMBER", "_operation_method", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "waiter", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "return", "self", "NUMBER", "_client_method", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "operation_model", "attempts", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_get_response", "parser", "NUMBER", "parse", "response_dict", "operation_model", "NUMBER", "output_shape", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "parse", "parsed", "self", "NUMBER", "_do_error_parse", "response", "shape", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_do_error_parse", "original", "super", "EC", "NUMBER", "QueryParser", "self", "NUMBER", "_do_error_parse", "response", "shape", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_do_error_parse", "root", "self", "NUMBER", "_parse_xml_string_to_dom", "xml_contents", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_parse_xml_string_to_dom", "invalid", "XML", "received", "n", "s", "e", "xml_string", "ResponseParserError", "Unable", "to", "parse", "response", "no", "element", "find", "line", "NUMBER", "column", "NUMBER", "invalid", "XML", "received", "This", "be", "indeed", "the", "end", "of", "the", "traceback", "NUMBER", "I", "cannot", "replicate", "this", "not", "easily", "anyway", "so", "I", "can", "t", "be", "sure", "but", "it", "really", "looks", "like", "the", "response", "body", "was", "empty", "NUMBER", "TLDR", "When", "downloading", "a", "file", "on", "Amazon", "EC", "NUMBER", "instance", "use", "boto", "NUMBER", "from", "S", "NUMBER", "download_file", "function", "blocks", "endlessly", "when", "disk", "space", "be", "exhausted", "NUMBER", "The", "only", "way", "to", "interrupt", "be", "to", "externally", "kill", "interrupt", "the", "process", "NUMBER", "I", "ve", "be", "able", "to", "reliably", "reproduce", "the", "issue", "use", "the", "following", "steps", "NUMBER", "Vanilla", "Amazon", "AMI", "ami", "NUMBER", "aa", "NUMBER", "on", "m", "NUMBER", "xlarge", "NUMBER", "Virtualenv", "with", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "futures", "NUMBER", "etc", "NUMBER", "NUMBER", "NUMBER", "GiB", "object", "in", "S", "NUMBER", "NUMBER", "Fill", "root", "volume", "to", "within", "NUMBER", "MiB", "of", "NUMBER", "with", "dd", "dd", "if", "dev", "zero", "of", "filler", "NUMBER", "txt", "bs", "NUMBER", "M", "count", "NUMBER", "NUMBER", "In", "Python", "call", "download_file", "to", "save", "S", "NUMBER", "object", "to", "root", "volume", "NUMBER", "NUMBER", "Following", "IO", "Queue", "shutdown", "log", "message", "all", "parts", "exit", "but", "python", "process", "never", "terminates", "NUMBER", "I", "use", "pudb", "to", "trace", "what", "was", "happening", "and", "it", "appeared", "that", "the", "process", "was", "fail", "to", "exit", "following", "the", "call", "to", "_process_future_results", "in", "S", "NUMBER", "transfer", "NUMBER", "py", "NUMBER", "Attached", "be", "the", "complete", "source", "code", "package", "version", "and", "console", "debug", "output", "from", "the", "code", "run", "to", "reproduce", "this", "issue", "NUMBER", "TerminalSavedOuput", "NUMBER", "txt", "LINK", "NUMBER", "txt", "seeing", "something", "similar", "on", "NUMBER", "site", "package", "boto", "NUMBER", "NUMBER", "py", "NUMBER", "egg", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "py", "line", "NUMBER", "in", "download_file", "future", "NUMBER", "result", "File", "build", "bdist", "NUMBER", "linux", "x", "NUMBER", "_", "NUMBER", "egg", "s", "NUMBER", "transfer", "futures", "NUMBER", "py", "line", "NUMBER", "in", "result", "File", "build", "bdist", "NUMBER", "linux", "x", "NUMBER", "_", "NUMBER", "egg", "s", "NUMBER", "transfer", "futures", "NUMBER", "py", "line", "NUMBER", "in", "result", "IOError", "Errno", "NUMBER", "No", "space", "left", "on", "device", "Passing", "a", "DateTime", "as", "the", "ValidFrom", "or", "ValidUntil", "argument", "to", "ec", "NUMBER", "client", "request_spot_instances", "works", "fine", "NUMBER", "However", "passing", "a", "similar", "DateTime", "object", "to", "request_spot_fleet", "results", "in", "an", "invalid", "parameter", "value", "from", "EC", "NUMBER", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidSpotFleetRequestConfig", "when", "calling", "the", "RequestSpotFleet", "operation", "Parameter", "SpotFleetRequestConfig", "NUMBER", "ValidFrom", "be", "invalid", "NUMBER", "The", "problem", "appears", "to", "be", "that", "request_spot_fleet", "sends", "the", "parameter", "as", "a", "string", "in", "YYYY", "MM", "DDTHH", "MM", "SS", "NUMBER", "xxxxxxZ", "format", "debug", "level", "logging", "on", "a", "call", "to", "request_spot_fleet", "where", "ValidFrom", "and", "ValidUntil", "be", "DateTimes", "shows", "the", "request", "as", "including", "u", "SpotFleetRequestConfig", "NUMBER", "ValidFrom", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "u", "SpotFleetRequestConfig", "NUMBER", "ValidUntil", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "NUMBER", "If", "I", "change", "the", "call", "to", "have", "argument", "of", "ValidFrom", "valid_from", "NUMBER", "rftime", "Y", "m", "dT", "H", "M", "SZ", "ValidUntil", "valid_to", "NUMBER", "rftime", "Y", "m", "dT", "H", "M", "SZ", "it", "then", "works", "correctly", "NUMBER", "I", "don", "t", "know", "if", "this", "be", "an", "issue", "with", "boto", "NUMBER", "or", "on", "the", "AWS", "side", "but", "it", "appears", "that", "there", "needs", "to", "be", "some", "additional", "manipulation", "of", "the", "timestamp", "string", "sent", "to", "AWS", "NUMBER", "kyleknap", "Sure", "NUMBER", "proof", "of", "concept", "code", "note", "this", "be", "run", "in", "us", "west", "NUMBER", "python", "usr", "bin", "env", "python", "import", "boto", "NUMBER", "from", "botocore", "NUMBER", "exception", "import", "ClientError", "from", "pprint", "import", "pformat", "from", "datetime", "import", "datetime", "timedelta", "from", "tzlocal", "import", "get_localzone", "from", "pytz", "import", "utc", "import", "uuid", "target_capacity", "NUMBER", "role", "arn", "aws", "iam", "NUMBER", "role", "spotfleet", "i_type", "m", "NUMBER", "medium", "az", "us", "west", "NUMBER", "b", "bid_price", "NUMBER", "conn", "boto", "NUMBER", "client", "ec", "NUMBER", "now_utc", "datetime", "NUMBER", "now", "get_localzone", "NUMBER", "astimezone", "utc", "valid_from", "now_utc", "timedelta", "days", "NUMBER", "valid_to", "valid_from", "timedelta", "seconds", "NUMBER", "kwargs", "args", "SpotFleetRequestConfig", "SpotPrice", "s", "bid_price", "ClientToken", "str", "uuid", "NUMBER", "uuid", "NUMBER", "TargetCapacity", "target_capacity", "ValidFrom", "valid_from", "ValidUntil", "valid_to", "TerminateInstancesWithExpiration", "True", "ExcessCapacityTerminationPolicy", "default", "AllocationStrategy", "lowestPrice", "IamFleetRole", "role", "LaunchSpecifications", "ImageId", "ami", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "Centos", "NUMBER", "HVM", "us", "west", "NUMBER", "InstanceType", "i_type", "Placement", "AvailabilityZone", "az", "print", "RequestSpotFleet", "with", "DateTime", "n", "try", "print", "Calling", "request_spot_fleet", "with", "kwargs", "s", "pformat", "args", "res", "conn", "NUMBER", "request_spot_fleet", "args", "print", "Result", "s", "pformat", "res", "except", "ClientError", "as", "ex", "print", "ex", "print", "n", "RequestSpotFleet", "with", "strftime", "n", "args", "SpotFleetRequestConfig", "ValidFrom", "args", "SpotFleetRequestConfig", "ValidFrom", "NUMBER", "rftime", "Y", "m", "dT", "H", "M", "SZ", "args", "SpotFleetRequestConfig", "ValidUntil", "args", "SpotFleetRequestConfig", "ValidUntil", "NUMBER", "rftime", "Y", "m", "dT", "H", "M", "SZ", "try", "print", "Calling", "request_spot_fleet", "with", "kwargs", "s", "pformat", "args", "res", "conn", "NUMBER", "request_spot_fleet", "args", "print", "Result", "s", "pformat", "res", "except", "ClientError", "as", "ex", "print", "ex", "Output", "python", "tmp", "spot_test", "NUMBER", "py", "RequestSpotFleet", "with", "DateTime", "Calling", "request_spot_fleet", "with", "kwargs", "SpotFleetRequestConfig", "AllocationStrategy", "lowestPrice", "ClientToken", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "af", "NUMBER", "NUMBER", "a", "NUMBER", "feab", "NUMBER", "e", "NUMBER", "ExcessCapacityTerminationPolicy", "default", "IamFleetRole", "arn", "aws", "iam", "NUMBER", "role", "spotfleet", "LaunchSpecifications", "ImageId", "ami", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "InstanceType", "m", "NUMBER", "medium", "Placement", "AvailabilityZone", "us", "west", "NUMBER", "b", "SpotPrice", "NUMBER", "TargetCapacity", "NUMBER", "TerminateInstancesWithExpiration", "True", "ValidFrom", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "TAG", "ValidUntil", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "TAG", "An", "error", "occur", "InvalidSpotFleetRequestConfig", "when", "calling", "the", "RequestSpotFleet", "operation", "Parameter", "SpotFleetRequestConfig", "NUMBER", "ValidFrom", "be", "invalid", "NUMBER", "RequestSpotFleet", "with", "strftime", "Calling", "request_spot_fleet", "with", "kwargs", "SpotFleetRequestConfig", "AllocationStrategy", "lowestPrice", "ClientToken", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "af", "NUMBER", "NUMBER", "a", "NUMBER", "feab", "NUMBER", "e", "NUMBER", "ExcessCapacityTerminationPolicy", "default", "IamFleetRole", "arn", "aws", "iam", "NUMBER", "role", "spotfleet", "LaunchSpecifications", "ImageId", "ami", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "InstanceType", "m", "NUMBER", "medium", "Placement", "AvailabilityZone", "us", "west", "NUMBER", "b", "SpotPrice", "NUMBER", "TargetCapacity", "NUMBER", "TerminateInstancesWithExpiration", "True", "ValidFrom", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "ValidUntil", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "Result", "ResponseMetadata", "HTTPHeaders", "content", "type", "text", "xml", "charset", "UTF", "NUMBER", "date", "Sat", "NUMBER", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "server", "AmazonEC", "NUMBER", "transfer", "encoding", "chunked", "vary", "Accept", "Encoding", "HTTPStatusCode", "NUMBER", "RequestId", "a", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "u", "SpotFleetRequestId", "sfr", "NUMBER", "fe", "NUMBER", "cd", "ddab", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "Ran", "into", "the", "same", "issue", "NUMBER", "you", "need", "to", "strip", "off", "the", "microseconds", "from", "your", "valid_until", "time", "NUMBER", "now_utc", "datetime", "NUMBER", "datetime", "NUMBER", "utcnow", "now_utc", "now_utc", "NUMBER", "replace", "microsecond", "NUMBER", "valid_until", "now_utc", "datetime", "NUMBER", "timedelta", "hours", "NUMBER", "It", "looks", "like", "patrickpierson", "may", "have", "solve", "the", "issue", "NUMBER", "If", "you", "still", "need", "help", "I", "would", "recommend", "make", "use", "of", "our", "community", "resources", "LINK", "get", "help", "for", "help", "with", "api", "usage", "NUMBER", "Hi", "ECS", "has", "just", "implement", "support", "for", "IAM", "roles", "for", "tasks", "LINK", "iam", "roles", "NUMBER", "html", "almost", "every", "SDK", "support", "it", "LINK", "iam", "roles", "NUMBER", "html", "task", "iam", "roles", "minimum", "sdk", "NUMBER", "Is", "it", "in", "your", "roadmap", "Thanks", "NUMBER", "Yeah", "it", "works", "as", "expected", "I", "d", "suggest", "update", "documentation", "LINK", "ECS", "NUMBER", "Client", "NUMBER", "register_task_definition", "Thanks", "NUMBER", "I", "m", "not", "finding", "this", "work", "NUMBER", "I", "have", "a", "proper", "ECS", "task", "role", "setup", "but", "my", "container", "do", "not", "run", "properly", "unless", "I", "set", "AWS_ACCESS_KEY_ID", "and", "AWS_SECRET_ACCESS_KEY", "environment", "variables", "NUMBER", "Make", "sure", "you", "re", "use", "the", "latest", "version", "of", "botocore", "NUMBER", "If", "you", "re", "still", "having", "issue", "could", "you", "open", "a", "new", "issue", "and", "provide", "a", "debug", "log", "Yes", "I", "just", "saw", "I", "was", "one", "version", "behind", "NUMBER", "It", "worked", "once", "I", "update", "NUMBER", "Thanks", "Currently", "the", "boto", "NUMBER", "documentation", "fail", "to", "mention", "the", "config", "attribute", "of", "waiter", "objects", "NUMBER", "This", "be", "frustrating", "for", "newcomers", "as", "the", "only", "way", "to", "customize", "the", "retry", "count", "and", "delay", "time", "for", "waiters", "be", "through", "these", "configuration", "objects", "NUMBER", "What", "be", "the", "way", "to", "deal", "with", "timeouts", "I", "have", "a", "script", "in", "boto", "NUMBER", "that", "creates", "a", "snapshot", "waits", "for", "it", "to", "complete", "and", "then", "deletes", "the", "volume", "NUMBER", "It", "just", "timed", "out", "with", "a", "NUMBER", "GB", "drive", "NUMBER", "Now", "I", "have", "to", "manually", "delete", "the", "volume", "and", "other", "cleanup", "NUMBER", "Surely", "there", "be", "a", "better", "way", "NUMBER", "Is", "this", "config", "documented", "somewhere", "I", "m", "having", "issue", "with", "this", "also", "I", "m", "trying", "to", "extend", "delays", "maxAttempts", "when", "make", "modifications", "to", "an", "RDS", "instance", "and", "experience", "timeouts", "would", "be", "great", "if", "change", "to", "config", "were", "expose", "documented", "NUMBER", "Hi", "In", "the", "waiters", "list", "I", "don", "t", "see", "a", "waiter", "for", "internet_gateway", "NUMBER", "There", "be", "there", "for", "customer", "gateway", "and", "nat", "gateway", "NUMBER", "EC", "NUMBER", "Waiter", "NUMBER", "CustomerGatewayAvailable", "EC", "NUMBER", "Waiter", "NUMBER", "NatGatewayAvailable", "NUMBER", "Hi", "The", "documentation", "for", "Firehose", "LINK", "Firehose", "NUMBER", "Client", "NUMBER", "put_record", "state", "If", "the", "PutRecord", "operation", "throw", "a", "ServiceUnavailableException", "back", "off", "and", "retry", "NUMBER", "If", "the", "exception", "persists", "it", "be", "possible", "that", "the", "throughput", "limits", "have", "be", "exceeded", "for", "the", "delivery", "stream", "NUMBER", "Neither", "boto", "NUMBER", "nor", "botocore", "seem", "to", "actually", "have", "a", "ServiceUnavailableException", "to", "catch", "though", "The", "PutRecords", "call", "can", "return", "an", "error", "code", "ServiceUnavailable", "but", "since", "PutRecords", "can", "t", "return", "error", "code", "I", "be", "at", "a", "loss", "as", "to", "how", "I", "can", "deal", "with", "exceeded", "throughput", "limits", "NUMBER", "Can", "anyone", "help", "Cheers", "Craig", "In", "that", "case", "I", "don", "t", "have", "to", "actually", "do", "anything", "boto", "NUMBER", "already", "handles", "the", "exponential", "back", "off", "for", "me", "NUMBER", "Great", "Thanks", "kyleknap", "When", "uploading", "to", "S", "NUMBER", "use", "a", "standard", "HTTP", "proxy", "tshark", "shows", "me", "something", "similar", "to", "TAG", "TAG", "HTTP", "NUMBER", "PUT", "LINK", "eu", "west", "xxxxxx", "NUMBER", "jpg", "HTTP", "NUMBER", "TAG", "TAG", "HTTP", "NUMBER", "HTTP", "NUMBER", "NUMBER", "Continue", "TAG", "TAG", "HTTP", "NUMBER", "HTTP", "NUMBER", "NUMBER", "OK", "And", "all", "works", "fine", "When", "I", "do", "the", "same", "thing", "via", "an", "http", "proxy", "use", "NTLMS", "proxy", "I", "get", "TAG", "TAG", "HTTP", "NUMBER", "PUT", "LINK", "eu", "west", "xxxxxx", "NUMBER", "jpg", "HTTP", "NUMBER", "NTLMSSP_NEGOTIATE", "TAG", "TAG", "HTTP", "NUMBER", "HTTP", "NUMBER", "NUMBER", "Proxy", "Authorization", "Required", "NTLMSSP_CHALLENGE", "text", "html", "TAG", "TAG", "HTTP", "NUMBER", "PUT", "LINK", "eu", "west", "xxxxxx", "NUMBER", "jpg", "HTTP", "NUMBER", "NTLMSSP_AUTH", "User", "TAG", "TAG", "TAG", "HTTP", "NUMBER", "HTTP", "NUMBER", "NUMBER", "Continue", "TAG", "TAG", "HTTP", "NUMBER", "HTTP", "NUMBER", "NUMBER", "OK", "On", "the", "face", "of", "it", "from", "that", "trace", "all", "looks", "good", "however", "in", "this", "second", "case", "although", "the", "upload", "appears", "to", "succeed", "boto", "NUMBER", "returns", "botocore", "NUMBER", "exception", "NUMBER", "ConnectionClosedError", "Connection", "was", "close", "before", "we", "received", "a", "valid", "response", "from", "endpoint", "URL", "Any", "ideas", "as", "to", "why", "this", "be", "NUMBER", "Not", "sure", "how", "be", "you", "configuring", "boto", "NUMBER", "to", "use", "a", "proxy", "Via", "the", "HTTP_PROXY", "env", "var", "This", "error", "happens", "we", "we", "receive", "a", "BadStatusLine", "in", "the", "response", "NUMBER", "I", "d", "suggest", "add", "boto", "NUMBER", "set_stream_logger", "to", "the", "top", "of", "your", "code", "NUMBER", "We", "should", "be", "logging", "the", "stack", "trace", "that", "s", "generating", "that", "exception", "in", "the", "debug", "logs", "NUMBER", "That", "might", "give", "more", "insight", "into", "what", "s", "going", "on", "NUMBER", "Yes", "I", "set", "the", "http_proxy", "use", "os", "NUMBER", "environ", "http_proxy", "NUMBER", "The", "trace", "seems", "to", "show", "the", "NUMBER", "response", "be", "not", "make", "it", "back", "to", "the", "calling", "function", "NUMBER", "but", "in", "tshark", "I", "can", "see", "that", "response", "be", "apparently", "arriving", "at", "the", "machine", "at", "least", "NUMBER", "see", "previous", "post", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTP", "connection", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "awsrequest", "DEBUG", "Waiting", "for", "NUMBER", "Continue", "response", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "awsrequest", "DEBUG", "No", "response", "seen", "from", "server", "continuing", "to", "send", "the", "response", "body", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "ConnectionError", "received", "when", "sending", "HTTP", "request", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "NUMBER", "py", "NUMBER", "egg", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_get_response", "proxies", "self", "NUMBER", "proxies", "timeout", "self", "NUMBER", "timeout", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "NUMBER", "py", "NUMBER", "egg", "botocore", "vendored", "request", "sessions", "NUMBER", "py", "line", "NUMBER", "in", "send", "r", "adapter", "NUMBER", "send", "request", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "NUMBER", "py", "NUMBER", "egg", "botocore", "vendored", "request", "adapters", "NUMBER", "py", "line", "NUMBER", "in", "send", "raise", "ConnectionError", "err", "request", "request", "ConnectionError", "Connection", "abort", "NUMBER", "BadStatusLine", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "retry", "needed", "retryable", "exception", "caught", "Connection", "was", "close", "before", "we", "received", "a", "valid", "response", "from", "endpoint", "URL", "LINK", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "xxxx", "NUMBER", "jpg", "NUMBER", "Interestingly", "or", "maybe", "not", "NUMBER", "attempts", "to", "do", "the", "same", "as", "the", "above", "use", "s", "NUMBER", "cmd", "and", "the", "same", "proxies", "work", "fine", "in", "both", "cases", "HTTP", "NUMBER", "PUT", "LINK", "eu", "west", "xxxxxx", "NUMBER", "jpg", "HTTP", "NUMBER", "NTLMSSP_NEGOTIATE", "HTTP", "NUMBER", "HTTP", "NUMBER", "NUMBER", "Proxy", "Authorization", "Required", "NTLMSSP_CHALLENGE", "text", "html", "HTTP", "NUMBER", "PUT", "LINK", "eu", "west", "xxxxxx", "NUMBER", "jpg", "HTTP", "NUMBER", "NTLMSSP_AUTH", "User", "HTTP", "NUMBER", "NUMBER", "OK", "The", "only", "difference", "be", "there", "be", "no", "HTTP", "Continue", "NUMBER", "Hi", "thanks", "for", "the", "suggestion", "NUMBER", "I", "have", "taken", "a", "look", "and", "it", "doesn", "t", "seem", "so", "it", "looks", "like", "the", "issue", "be", "that", "boto", "NUMBER", "and", "the", "aws", "cli", "code", "sets", "the", "request", "continue", "header", "when", "talking", "to", "the", "amazon", "servers", "NUMBER", "For", "some", "reason", "that", "continue", "response", "though", "received", "never", "seems", "to", "make", "its", "way", "to", "the", "client", "How", "possible", "would", "it", "be", "to", "specify", "that", "the", "request", "continue", "header", "be", "not", "set", "NUMBER", "On", "Thu", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Kyle", "Knapp", "notifications", "github", "NUMBER", "com", "write", "Hmm", "looks", "like", "your", "connections", "be", "be", "abort", "NUMBER", "This", "looks", "similar", "to", "these", "issue", "aws", "aws", "cli", "NUMBER", "LINK", "cli", "issue", "NUMBER", "boto", "botocore", "NUMBER", "LINK", "Do", "any", "of", "the", "suggestions", "made", "in", "any", "of", "these", "issue", "help", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "LINK", "_weysqVU", "NUMBER", "NUMBER", "dJVJ", "hrhlGGBFz", "NUMBER", "yks", "NUMBER", "qVX", "NUMBER", "OgaJpZM", "NUMBER", "JH", "NUMBER", "k", "NUMBER", "NUMBER", "Overall", "looks", "like", "a", "good", "approach", "NUMBER", "Had", "a", "few", "question", "but", "otherwise", "looks", "good", "NUMBER", "shipit", "Looks", "good", "NUMBER", "I", "like", "this", "approach", "better", "NUMBER", "Hi", "I", "have", "following", "code", "where", "subnet", "be", "created", "and", "a", "waiter", "be", "call", "on", "it", "immediately", "NUMBER", "Waiter", "fail", "saying", "The", "subnet", "ID", "subnet", "fbfed", "NUMBER", "d", "NUMBER", "do", "not", "exist", "NUMBER", "Also", "the", "error", "returns", "immediately", "it", "do", "not", "wait", "for", "NUMBER", "secs", "and", "NUMBER", "fail", "checks", "NUMBER", "This", "happens", "very", "often", "in", "N", "NUMBER", "Virginia", "NUMBER", "Why", "be", "the", "waiter", "unable", "to", "find", "the", "subnet", "just", "created", "try", "subnet", "vpc", "NUMBER", "create_subnet", "CidrBlock", "cidr_block", "AvailabilityZone", "avail_zone", "print", "NUMBER", "TAG", "line", "NUMBER", "in", "TAG", "File", "tmp", "virtual_env", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "resource", "return", "_get_default_session", "NUMBER", "resource", "args", "kwargs", "File", "tmp", "virtual_env", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "resource", "aws_session_token", "aws_session_token", "config", "config", "File", "tmp", "virtual_env", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "client", "aws_session_token", "aws_session_token", "config", "config", "File", "tmp", "virtual_env", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "session", "NUMBER", "py", "line", "NUMBER", "in", "create_client", "client_config", "config", "api_version", "api_version", "File", "tmp", "virtual_env", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "create_client", "verify", "credentials", "scoped_config", "client_config", "endpoint_bridge", "File", "tmp", "virtual_env", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_get_client_args", "timeout", "new_config", "NUMBER", "connect_timeout", "new_config", "NUMBER", "read_timeout", "File", "tmp", "virtual_env", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_endpoint", "raise", "ValueError", "Invalid", "endpoint", "s", "endpoint_url", "ValueError", "Invalid", "endpoint", "LINK", "_url_with_underscores", "Everybody", "use", "Docker", "Compose", "be", "going", "to", "run", "into", "this", "NUMBER", "You", "be", "the", "only", "HTTP", "client", "out", "there", "that", "refuses", "those", "URLs", "NUMBER", "Please", "don", "t", "do", "insane", "unusual", "sanity", "checks", "that", "no", "one", "else", "do", "don", "t", "provide", "any", "additional", "safety", "and", "breaks", "actual", "code", "NUMBER", "Exception", "throw", "An", "error", "occur", "InvalidGroup", "NUMBER", "NotFound", "when", "calling", "the", "DescribeSecurityGroups", "operation", "The", "security", "group", "sg", "xxxxxxxx", "do", "not", "exist", "Python", "code", "I", "have", "NUMBER", "try", "resource_ec", "NUMBER", "boto", "NUMBER", "resource", "self", "NUMBER", "_ec", "NUMBER", "region_name", "self", "NUMBER", "_region_name", "resource_sg", "resource_ec", "NUMBER", "create_security_group", "GroupName", "self", "NUMBER", "_group_name", "Description", "self", "NUMBER", "_desc", "VpcId", "self", "NUMBER", "_vpc", "self", "NUMBER", "_sg_id", "resource_sg", "NUMBER", "group_id", "self", "NUMBER", "_sg_name", "resource_sg", "NUMBER", "group_name", "except", "ClientError", "e", "self", "NUMBER", "existing_logger", "NUMBER", "error", "AWS_CREATE_SECURITY_GROUP", "s", "str", "e", "NUMBER", "resource_ec", "NUMBER", "create_security_group", "be", "the", "place", "where", "the", "exception", "happens", "as", "I", "said", "that", "I", "actually", "can", "find", "the", "security", "group", "from", "AWS", "console", "I", "be", "not", "sure", "in", "which", "situation", "the", "function", "will", "throw", "a", "strange", "exception", "like", "that", "but", "I", "don", "t", "have", "the", "exception", "all", "the", "time", "when", "I", "did", "the", "test", "what", "I", "did", "be", "I", "call", "the", "program", "multiple", "times", "and", "sometimes", "I", "can", "get", "the", "experience", "of", "that", "LINK", "S", "NUMBER", "ObjectSummary", "NUMBER", "delete", "Does", "not", "work", "because", "I", "believe", "the", "key", "in", "object", "summary", "objects", "be", "URL", "encoded", "NUMBER", "For", "example", "bucket", "s", "NUMBER", "Bucket", "TAG", "for", "obj_sum", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "obj_sum", "NUMBER", "delete", "bucket", "NUMBER", "delete", "This", "doesn", "t", "work", "NUMBER", "However", "this", "do", "from", "urllib", "import", "unquote_plus", "bucket", "s", "NUMBER", "Bucket", "TAG", "for", "obj_sum", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "obj", "s", "NUMBER", "Object", "bucket_name", "TAG", "key", "unquote_plus", "obj_sum", "NUMBER", "key", "obj", "NUMBER", "delete", "bucket", "NUMBER", "delete", "Sample", "debug", "output", "also", "points", "to", "url", "encoding", "as", "the", "issue", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Calling", "paginated", "s", "NUMBER", "list_objects", "with", "u", "Bucket", "u", "alex", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Calling", "s", "NUMBER", "delete_object", "with", "u", "Bucket", "u", "alex", "u", "Key", "test", "NUMBER", "Fanothertest", "I", "m", "use", "botocore", "NUMBER", "NUMBER", "and", "boto", "NUMBER", "NUMBER", "NUMBER", "on", "Centos", "NUMBER", "python", "NUMBER", "yeah", "yeah", "don", "t", "ask", "NUMBER", "On", "Tue", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Kyle", "Knapp", "notifications", "github", "NUMBER", "com", "write", "How", "did", "you", "install", "boto", "NUMBER", "I", "was", "not", "able", "to", "reproduce", "it", "NUMBER", "My", "debug", "logs", "even", "show", "it", "get", "properly", "decoded", "when", "I", "run", "your", "first", "code", "snippet", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "DEBUG", "Loading", "s", "NUMBER", "ObjectSummary", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "model", "DEBUG", "Renaming", "ObjectSummary", "attribute", "key", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "INFO", "Calling", "s", "NUMBER", "delete_object", "with", "u", "Bucket", "my_bucket_foo", "u", "Key", "u", "something", "with", "spaces", "Hmmm", "NUMBER", "perhaps", "this", "might", "be", "an", "issue", "with", "my", "target", "NUMBER", "Let", "me", "double", "check", "NUMBER", "I", "for", "the", "life", "of", "me", "can", "t", "remember", "if", "I", "test", "this", "with", "our", "internal", "S", "NUMBER", "node", "or", "AWS", "S", "NUMBER", "proper", "NUMBER", "Apologies", "if", "it", "s", "the", "former", "NUMBER", "aps", "I", "have", "a", "setup", "where", "knowing", "the", "security", "implications", "I", "have", "to", "set", "verify", "False", "for", "SSL", "uploads", "NUMBER", "That", "works", "but", "results", "in", "regular", "warnings", "of", "InsecureRequestWarning", "Unverified", "HTTPS", "request", "be", "be", "made", "Is", "there", "any", "way", "to", "suppress", "these", "NUMBER", "Thanks", "The", "second", "one", "was", "what", "I", "tried", "earlier", "today", "but", "I", "made", "a", "mistake", "when", "doing", "so", "so", "it", "fail", "NUMBER", "Your", "example", "worked", "perfectly", "NUMBER", "Setting", "the", "environment", "variable", "had", "no", "effect", "I", "think", "because", "I", "be", "run", "python", "NUMBER", "and", "NUMBER", "appears", "to", "be", "required", "to", "use", "this", "variable", "os", "NUMBER", "environ", "PYTHONWARNINGS", "ignore", "Unverified", "HTTPS", "request", "Thanks", "for", "the", "advice", "either", "way", "On", "Wed", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Jordon", "Phillips", "notifications", "github", "NUMBER", "com", "write", "Yes", "there", "be", "a", "few", "ways", "NUMBER", "You", "can", "set", "the", "following", "environment", "variable", "PYTHONWARNINGS", "ignore", "Unverified", "HTTPS", "request", "Or", "you", "can", "suppress", "it", "in", "our", "vendored", "version", "of", "request", "import", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "as", "urllib", "NUMBER", "urllib", "NUMBER", "disable_warnings", "urllib", "NUMBER", "exception", "NUMBER", "InsecureRequestWarning", "The", "latter", "be", "potentially", "error", "prone", "if", "you", "re", "use", "linux", "provide", "version", "of", "botocore", "as", "some", "distributions", "remove", "our", "vendored", "libraries", "and", "replace", "the", "references", "with", "references", "to", "the", "distribution", "libraries", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "LINK", "_", "P", "NUMBER", "dLRUiWcKGSD_ks", "NUMBER", "qQrJsgaJpZM", "NUMBER", "JA", "NUMBER", "NUMBER", "correcting", "the", "spelling", "of", "the", "word", "available", "NUMBER", "Documentation", "for", "SQS", "uses", "receive_message", "should", "be", "receive_messages", "Sometimes", "elb", "NUMBER", "configure_health_check", "do", "not", "update", "the", "elb", "health", "check", "port", "and", "be", "ignored", "when", "an", "elb", "already", "exists", "and", "the", "ping_port", "has", "change", "NUMBER", "Seems", "to", "always", "work", "when", "the", "elb", "already", "exists", "however", "sometimes", "when", "the", "health", "exist", "and", "the", "port", "has", "change", "the", "health", "check", "be", "not", "update", "NUMBER", "Hit", "this", "issue", "when", "use", "the", "elb", "module", "in", "ansible", "LINK", "modules", "core", "issue", "NUMBER", "python", "client", "boto", "NUMBER", "client", "s", "NUMBER", "client", "NUMBER", "list_objects_v", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "AttributeError", "S", "NUMBER", "object", "has", "no", "attribute", "list_objects_v", "NUMBER", "pp", "NUMBER", "pprint", "client", "NUMBER", "list_objects_v", "NUMBER", "Bucket", "modesto", "swatch", "vzw", "splitter", "Prefix", "Breitling", "Unguidable", "StartAfter", "PRR", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "AttributeError", "S", "NUMBER", "object", "has", "no", "attribute", "list_objects_v", "NUMBER", "boto", "NUMBER", "__version__", "NUMBER", "AkhterAli", "boto", "NUMBER", "be", "build", "on", "top", "of", "botocore", "library", "NUMBER", "What", "be", "the", "version", "of", "botocore", "list_objects_v", "NUMBER", "be", "add", "on", "NUMBER", "NUMBER", "NUMBER", "with", "this", "commit", "LINK", "diff", "NUMBER", "ba", "NUMBER", "e", "NUMBER", "cee", "NUMBER", "d", "NUMBER", "fbd", "NUMBER", "bf", "NUMBER", "aaea", "NUMBER", "NUMBER", "I", "think", "your", "botocore", "library", "be", "not", "up", "to", "date", "NUMBER", "I", "can", "call", "list_objects_v", "NUMBER", "with", "botocore", "NUMBER", "boto", "NUMBER", "NUMBER", "combo", "import", "botocore", "botocore", "NUMBER", "__version__", "NUMBER", "quiver", "JordonPhillips", "While", "you", "re", "right", "it", "just", "doesn", "t", "to", "be", "out", "of", "date", "by", "much", "NUMBER", "I", "will", "give", "update", "a", "try", "and", "see", "what", "I", "get", "NUMBER", "python", "Python", "NUMBER", "r", "NUMBER", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GCC", "NUMBER", "NUMBER", "Red", "Hat", "NUMBER", "NUMBER", "on", "linux", "NUMBER", "Type", "help", "copyright", "credits", "or", "license", "for", "more", "information", "NUMBER", "import", "boto", "NUMBER", "import", "botocore", "botocore", "NUMBER", "__version__", "NUMBER", "client", "boto", "NUMBER", "client", "s", "NUMBER", "client", "NUMBER", "list_objects_v", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "AttributeError", "S", "NUMBER", "object", "has", "no", "attribute", "list_objects_v", "NUMBER", "And", "that", "was", "it", "minor", "update", "did", "the", "trick", "NUMBER", "python", "import", "boto", "NUMBER", "import", "botocore", "botocore", "NUMBER", "__version__", "NUMBER", "client", "boto", "NUMBER", "client", "s", "NUMBER", "client", "NUMBER", "list_objects_v", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "api_params", "operation_model", "context", "request_context", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_convert_to_request_dict", "api_params", "operation_model", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "validate", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "raise", "ParamValidationError", "report", "report", "NUMBER", "generate_report", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Missing", "required", "parameter", "in", "input", "Bucket", "Thanks", "guys", "NUMBER", "This", "PR", "add", "two", "small", "improvement", "to", "Session", "NUMBER", "__repr__", "NUMBER", "NUMBER", "Use", "the", "proper", "argument", "name", "to", "set", "the", "session", "region", "e", "NUMBER", "g", "NUMBER", "region_name", "NUMBER", "NUMBER", "Use", "the", "class", "name", "so", "subclasses", "get", "a", "proper", "repr", "string", "NUMBER", "I", "start", "to", "test", "boto", "NUMBER", "as", "part", "of", "a", "plan", "to", "migrate", "from", "boto", "and", "during", "my", "initial", "test", "I", "had", "to", "setup", "an", "Session", "for", "sa", "east", "NUMBER", "NUMBER", "While", "use", "the", "Python", "shell", "was", "pretty", "straightforward", "to", "print", "the", "Session", "instance", "repr", "and", "figure", "out", "the", "proper", "argument", "to", "set", "the", "session", "region", "it", "didn", "t", "work", "NUMBER", "since", "the", "incorrect", "argument", "name", "so", "I", "decided", "to", "fix", "it", "and", "open", "this", "PR", "NUMBER", "This", "be", "a", "pretty", "small", "change", "but", "it", "may", "save", "a", "couple", "of", "minutes", "from", "other", "developers", "starting", "with", "boto", "NUMBER", "The", "reason", "behind", "the", "change", "from", "the", "fix", "Session", "string", "to", "the", "self", "NUMBER", "__class__", "NUMBER", "__name__", "be", "just", "a", "good", "practice", "and", "since", "I", "was", "messing", "with", "the", "__repr__", "I", "decided", "to", "include", "this", "too", "NUMBER", "NUMBER", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "boto", "NUMBER", "Session", "Out", "NUMBER", "Session", "region", "us", "east", "NUMBER", "In", "NUMBER", "boto", "NUMBER", "Session", "region", "sa", "east", "NUMBER", "TypeError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "boto", "NUMBER", "Session", "region", "sa", "east", "NUMBER", "TypeError", "__init__", "get", "an", "unexpect", "keyword", "argument", "region", "Done", "I", "also", "did", "a", "rebase", "with", "the", "latest", "upstream", "update", "NUMBER", "This", "was", "just", "a", "copy", "of", "the", "resource", "model", "from", "the", "previous", "latest", "version", "of", "the", "ec", "NUMBER", "API", "NUMBER", "Test", "should", "pass", "again", "NUMBER", "cc", "jamesls", "JordonPhillips", "I", "be", "trying", "to", "capture", "the", "total", "cost", "of", "a", "Reserved", "Instance", "NUMBER", "Through", "boto", "NUMBER", "i", "be", "able", "to", "get", "the", "Recurring", "Price", "of", "an", "instance", "but", "not", "the", "Upfront", "or", "the", "Partial", "Upfront", "paid", "NUMBER", "How", "can", "i", "get", "that", "NUMBER", "import", "boto", "NUMBER", "c", "boto", "NUMBER", "client", "ec", "NUMBER", "region_name", "us", "east", "NUMBER", "rsv", "c", "NUMBER", "describe_reserved_instances", "NUMBER", "get", "ReservedInstances", "for", "r", "in", "rsv", "NUMBER", "if", "r", "State", "active", "NUMBER", "print", "r", "NUMBER", "break", "NUMBER", "u", "ReservedInstancesId", "NUMBER", "dummy", "id", "NUMBER", "u", "OfferingType", "Partial", "Upfront", "u", "AvailabilityZone", "us", "east", "NUMBER", "e", "u", "End", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzutc", "u", "ProductDescription", "Linux", "UNIX", "Amazon", "VPC", "u", "UsagePrice", "NUMBER", "u", "RecurringCharges", "u", "Amount", "NUMBER", "u", "Frequency", "Hourly", "u", "Start", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzutc", "u", "State", "active", "u", "FixedPrice", "NUMBER", "u", "CurrencyCode", "USD", "u", "Duration", "NUMBER", "u", "InstanceTenancy", "default", "u", "InstanceType", "c", "NUMBER", "large", "u", "InstanceCount", "NUMBER", "Figured", "this", "out", "NUMBER", "Sure", "NUMBER", "So", "the", "reserved", "instances", "with", "OfferingType", "as", "Upfront", "did", "not", "seem", "to", "have", "a", "FixedPrice", "NUMBER", "And", "i", "assumed", "that", "none", "of", "them", "did", "which", "be", "not", "the", "case", "NUMBER", "Some", "of", "the", "ones", "that", "have", "PartialUpfront", "do", "have", "the", "FixedPrice", "cost", "and", "all", "i", "had", "to", "do", "to", "get", "full", "cost", "was", "NUMBER", "r", "RecurringCharges", "NUMBER", "Amount", "r", "FixedPrice", "r", "Duration", "NUMBER", "I", "notice", "recently", "that", "for", "a", "large", "download", "the", "awscli", "LINK", "cli", "aws", "s", "NUMBER", "cp", "s", "NUMBER", "NUMBER", "was", "faster", "than", "use", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "MultipartDownloader", "NUMBER", "After", "run", "a", "few", "test", "of", "downloading", "an", "NUMBER", "GB", "file", "it", "looks", "like", "maybe", "the", "size", "of", "the", "I", "O", "buffer", "here", "LINK", "L", "NUMBER", "may", "have", "something", "to", "do", "with", "it", "NUMBER", "I", "don", "t", "understand", "why", "but", "make", "that", "buffer", "size", "larger", "e", "NUMBER", "g", "NUMBER", "NUMBER", "KB", "or", "NUMBER", "KB", "instead", "of", "the", "current", "NUMBER", "KB", "seems", "to", "improve", "download", "speeds", "consistently", "for", "me", "NUMBER", "Perhaps", "that", "buffer", "size", "should", "be", "increase", "or", "maybe", "just", "made", "configurable", "I", "don", "t", "understand", "the", "pros", "and", "cons", "other", "than", "that", "make", "it", "larger", "seems", "to", "help", "for", "my", "use", "case", "NUMBER", "Times", "for", "downloading", "an", "NUMBER", "GB", "file", "from", "S", "NUMBER", "to", "a", "g", "NUMBER", "xlarge", "instance", "I", "just", "change", "the", "number", "in", "the", "line", "of", "code", "mention", "above", "NUMBER", "seconds", "with", "NUMBER", "KB", "buffer", "NUMBER", "seconds", "with", "NUMBER", "KB", "buffer", "NUMBER", "seconds", "with", "NUMBER", "KB", "buffer", "current", "boto", "NUMBER", "code", "NUMBER", "seconds", "with", "NUMBER", "KB", "buffer", "Code", "for", "test", "import", "time", "import", "boto", "NUMBER", "import", "logging", "from", "concurrent", "NUMBER", "futures", "import", "ProcessPoolExecutor", "t", "NUMBER", "time", "NUMBER", "time", "logging", "NUMBER", "basicConfig", "level", "DEBUG", "logging", "NUMBER", "getLogger", "botocore", "NUMBER", "setLevel", "INFO", "client", "boto", "NUMBER", "client", "s", "NUMBER", "config", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "TransferConfig", "multipart_threshold", "NUMBER", "NUMBER", "NUMBER", "max_concurrency", "NUMBER", "num_download_attempts", "NUMBER", "multipart_chunksize", "NUMBER", "NUMBER", "NUMBER", "max_io_queue", "NUMBER", "config", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "TransferConfig", "transfer", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "MultipartDownloader", "client", "config", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "OSUtils", "transfer", "NUMBER", "download_file", "bucket", "name", "path", "to", "big", "file", "foo", "NUMBER", "npy", "foo", "NUMBER", "npy", "NUMBER", "print", "TIME", "SECONDS", "NUMBER", "format", "time", "NUMBER", "time", "t", "NUMBER", "I", "previously", "mention", "this", "here", "LINK", "issuecomment", "NUMBER", "NUMBER", "In", "the", "benchmarks", "above", "I", "downloaded", "the", "file", "to", "an", "EBS", "volume", "which", "be", "perhaps", "less", "than", "ideal", "since", "that", "depends", "on", "the", "network", "connection", "to", "if", "I", "understand", "correctly", "NUMBER", "However", "I", "ve", "seen", "similar", "differences", "in", "performance", "between", "boto", "NUMBER", "and", "awscli", "on", "local", "storage", "on", "a", "d", "NUMBER", "xlarge", "instance", "NUMBER", "IIRC", "the", "difference", "was", "even", "more", "pronounced", "in", "that", "case", "perhaps", "because", "of", "the", "NUMBER", "gbps", "networking", "of", "the", "d", "NUMBER", "xlarge", "NUMBER", "This", "be", "definitely", "something", "you", "may", "see", "if", "the", "configurations", "be", "not", "appropriate", "for", "the", "manager", "NUMBER", "I", "would", "really", "recommend", "read", "this", "thread", "and", "comment", "in", "a", "similar", "implementation", "as", "to", "why", "this", "be", "the", "case", "LINK", "issuecomment", "NUMBER", "Based", "on", "that", "discussion", "we", "may", "need", "to", "update", "the", "defaults", "in", "boto", "NUMBER", "If", "you", "be", "able", "to", "follow", "along", "I", "would", "recommend", "setting", "a", "multipart_chunksize", "such", "that", "the", "following", "be", "True", "if", "you", "do", "not", "want", "to", "mess", "with", "the", "source", "code", "multipart_chunksize", "max_concurrency", "TAG", "I", "was", "experience", "nearly", "NUMBER", "times", "the", "performance", "use", "the", "AWS", "CLI", "as", "oppose", "to", "boto", "NUMBER", "gisjedi", "thanks", "for", "add", "your", "observations", "NUMBER", "It", "s", "good", "to", "know", "I", "m", "not", "the", "only", "one", "seeing", "this", "NUMBER", "While", "the", "differences", "I", "ve", "posted", "above", "were", "smaller", "I", "ve", "also", "seen", "a", "similar", "NUMBER", "x", "speed", "difference", "between", "boto", "NUMBER", "and", "awscli", "on", "an", "d", "NUMBER", "xlarge", "instance", "with", "NUMBER", "gbps", "networking", "the", "g", "NUMBER", "xlarge", "instance", "I", "use", "for", "the", "test", "above", "has", "maybe", "NUMBER", "gbps", "NUMBER", "fwiw", "I", "tried", "commenting", "out", "the", "lines", "that", "queue", "up", "IO", "chunks", "here", "LINK", "L", "NUMBER", "L", "NUMBER", "and", "put", "a", "pass", "there", "and", "downloading", "the", "NUMBER", "GB", "file", "took", "about", "the", "same", "amount", "of", "time", "as", "awscli", "NUMBER", "seconds", "NUMBER", "Hmm", "it", "sounds", "like", "the", "theory", "that", "the", "slowness", "has", "to", "do", "with", "the", "io", "queue", "be", "correct", "NUMBER", "Also", "relevant", "LINK", "It", "do", "not", "appear", "that", "there", "be", "a", "way", "to", "specify", "the", "enable", "debugging", "flag", "when", "use", "the", "emr", "client", "and", "run_job_flow", "NUMBER", "In", "boto", "this", "was", "a", "parameter", "for", "the", "boto", "NUMBER", "emr", "NUMBER", "connection", "NUMBER", "run_jobflow", "method", "however", "there", "do", "not", "appear", "to", "be", "a", "similar", "parameter", "for", "run_job_flow", "in", "the", "boto", "NUMBER", "emr", "client", "NUMBER", "Hey", "thank", "you", "for", "the", "reply", "Sorry", "I", "should", "have", "be", "more", "clear", "in", "my", "question", "NUMBER", "I", "have", "be", "able", "to", "setup", "the", "Hadoop", "Debugging", "by", "add", "an", "extra", "step", "as", "you", "describe", "NUMBER", "However", "just", "add", "this", "step", "do", "not", "enable", "the", "web", "UI", "for", "debugging", "the", "job", "in", "the", "aws", "emr", "console", "as", "outlined", "here", "LINK", "plan", "debugging", "NUMBER", "html", "emr", "plan", "debugging", "logs", "archive", "debug", "NUMBER", "Thank", "you", "for", "the", "help", "Example", "of", "the", "web", "UI", "image", "LINK", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "da", "NUMBER", "c", "NUMBER", "png", "The", "remaining", "question", "on", "this", "be", "more", "suitable", "to", "the", "service", "forum", "linked", "above", "so", "I", "m", "closing", "out", "this", "issue", "NUMBER", "It", "appears", "for", "any", "given", "Cloudwatch", "Alarm", "Resource", "object", "the", "metric", "attribute", "may", "not", "necessarily", "be", "correct", "h", "alarm", "for", "alarm", "in", "cloudwatch", "NUMBER", "alarms", "NUMBER", "all", "h", "NUMBER", "NUMBER", "dimensions", "u", "Name", "AutoScalingGroupName", "u", "Value", "awseb", "e", "NUMBER", "umv", "NUMBER", "f", "NUMBER", "q", "NUMBER", "stack", "AWSEBAutoScalingGroup", "BQ", "NUMBER", "FZGN", "NUMBER", "EH", "h", "NUMBER", "NUMBER", "metric", "NUMBER", "dimensions", "u", "Name", "InstanceId", "u", "Value", "i", "NUMBER", "a", "NUMBER", "b", "NUMBER", "Further", "Alarm", "NUMBER", "metric", "can", "possibly", "change", "between", "reads", "h", "NUMBER", "NUMBER", "dimensions", "u", "Name", "AutoScalingGroupName", "u", "Value", "awseb", "e", "amw", "NUMBER", "zy", "NUMBER", "d", "NUMBER", "k", "stack", "AWSEBAutoScalingGroup", "KM", "NUMBER", "EK", "NUMBER", "PV", "NUMBER", "NP", "h", "NUMBER", "NUMBER", "metric", "NUMBER", "dimensions", "u", "Name", "InstanceId", "u", "Value", "i", "NUMBER", "a", "NUMBER", "b", "NUMBER", "h", "NUMBER", "NUMBER", "metric", "NUMBER", "name", "NetworkOut", "h", "NUMBER", "NUMBER", "metric", "NUMBER", "load", "h", "NUMBER", "NUMBER", "metric", "NUMBER", "dimensions", "u", "Name", "InstanceId", "u", "Value", "i", "b", "NUMBER", "NUMBER", "time", "pass", "NUMBER", "h", "NUMBER", "NUMBER", "metric", "NUMBER", "dimensions", "h", "u", "Name", "InstanceId", "u", "Value", "i", "NUMBER", "a", "NUMBER", "b", "NUMBER", "Closing", "due", "to", "inactivity", "NUMBER", "Please", "post", "debug", "logs", "and", "we", "ll", "reopen", "and", "take", "another", "look", "NUMBER", "Yep", "sorry", "I", "didn", "t", "get", "back", "quickly", "h", "alarm", "for", "alarm", "in", "cw", "NUMBER", "alarms", "NUMBER", "all", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "collection", "INFO", "Calling", "paginated", "cloudwatch", "describe_alarms", "with", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "DEBUG", "Loading", "cloudwatch", "Alarm", "h", "NUMBER", "NUMBER", "dimensions", "u", "Name", "Hostname", "u", "Value", "hostname", "NUMBER", "us", "east", "NUMBER", "ec", "NUMBER", "h", "NUMBER", "NUMBER", "metric", "NUMBER", "dimensions", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "DEBUG", "Loading", "cloudwatch", "Metric", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "model", "DEBUG", "Renaming", "Metric", "attribute", "namespace", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "INFO", "Calling", "cloudwatch", "list_metrics", "with", "u", "Namespace", "example", "u", "MetricName", "HttpResponseTime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "DEBUG", "Response", "u", "Metrics", "u", "Namespace", "example", "u", "Dimensions", "u", "Name", "Hostname", "u", "Value", "hostname", "NUMBER", "us", "east", "NUMBER", "ec", "NUMBER", "u", "MetricName", "HttpResponseTime", "u", "Namespace", "example", "u", "Dimensions", "u", "Name", "Hostname", "u", "Value", "hostname", "NUMBER", "us", "central", "NUMBER", "f", "NUMBER", "gce", "u", "MetricName", "HttpResponseTime", "u", "Namespace", "example", "u", "Dimensions", "u", "Name", "Hostname", "u", "Value", "hostname", "NUMBER", "us", "east", "NUMBER", "ec", "NUMBER", "u", "MetricName", "HttpResponseTime", "u", "Namespace", "example", "u", "Dimensions", "u", "Name", "Hostname", "u", "Value", "hostname", "NUMBER", "us", "central", "NUMBER", "b", "NUMBER", "gce", "u", "MetricName", "HttpResponseTime", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "dbc", "NUMBER", "be", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "b", "NUMBER", "ccb", "NUMBER", "d", "NUMBER", "u", "Name", "Hostname", "u", "Value", "hostname", "NUMBER", "us", "east", "NUMBER", "ec", "NUMBER", "It", "appears", "when", "a", "metric", "has", "alarms", "attached", "you", "cannot", "retrieve", "them", "from", "the", "metric", "resource", "object", "itself", "NUMBER", "In", "fact", "I", "have", "a", "few", "alarms", "attached", "to", "some", "metrics", "and", "yet", "none", "of", "the", "metrics", "indicate", "any", "alarm", "be", "attached", "at", "all", "alarm", "for", "alarm", "in", "cloudwatch", "NUMBER", "alarms", "NUMBER", "all", "cloudwatch", "NUMBER", "Alarm", "name", "awseb", "e", "NUMBER", "umv", "NUMBER", "f", "NUMBER", "q", "NUMBER", "stack", "AWSEBCloudwatchAlarmHigh", "NUMBER", "I", "NUMBER", "SR", "NUMBER", "L", "NUMBER", "A", "cloudwatch", "NUMBER", "Alarm", "name", "awseb", "e", "NUMBER", "umv", "NUMBER", "f", "NUMBER", "q", "NUMBER", "stack", "AWSEBCloudwatchAlarmLow", "NUMBER", "NC", "NUMBER", "PGIP", "NUMBER", "U", "NUMBER", "cloudwatch", "NUMBER", "Alarm", "name", "awseb", "e", "amw", "NUMBER", "zy", "NUMBER", "d", "NUMBER", "k", "stack", "AWSEBCloudwatchAlarmHigh", "IDOOGQH", "NUMBER", "DPWB", "cloudwatch", "NUMBER", "Alarm", "name", "awseb", "e", "amw", "NUMBER", "zy", "NUMBER", "d", "NUMBER", "k", "stack", "AWSEBCloudwatchAlarmLow", "J", "NUMBER", "DJZXWCGN", "cloudwatch", "NUMBER", "Alarm", "name", "host", "NUMBER", "HttpTooSlowOrUnavailable", "cloudwatch", "NUMBER", "Alarm", "name", "host", "NUMBER", "HttpTooSlowOrUnavailable", "backalarm", "for", "metric", "in", "cloudwatch", "NUMBER", "metrics", "NUMBER", "all", "for", "backalarm", "in", "metric", "NUMBER", "alarms", "NUMBER", "all", "sys", "NUMBER", "version", "be", "NUMBER", "default", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GCC", "NUMBER", "Compatible", "Apple", "LLVM", "NUMBER", "clang", "NUMBER", "boto", "NUMBER", "version", "be", "NUMBER", "NUMBER", "Closing", "due", "to", "in", "activity", "NUMBER", "Please", "post", "debug", "logs", "and", "we", "ll", "reopen", "and", "take", "another", "look", "NUMBER", "As", "discussed", "with", "aws", "sdk", "php", "current", "behavior", "be", "different", "and", "wrong", "LINK", "sdk", "php", "issue", "NUMBER", "Are", "you", "saying", "that", "when", "you", "explicitly", "provide", "an", "endpoint_url", "that", "we", "re", "use", "your", "endpoint_url", "If", "so", "that", "be", "the", "intended", "behavior", "and", "I", "don", "t", "think", "we", "can", "change", "that", "NUMBER", "In", "general", "an", "explicitly", "provide", "endpoint_url", "when", "creating", "clients", "should", "take", "precedence", "NUMBER", "Unless", "this", "be", "cause", "a", "specific", "issue", "I", "don", "t", "think", "this", "be", "something", "we", "plan", "on", "change", "NUMBER", "My", "program", "connects", "to", "S", "NUMBER", "like", "this", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "Conf", "NUMBER", "AWS_REGION", "aws_access_key_id", "Conf", "NUMBER", "AWS_KEY", "aws_secret_access_key", "Conf", "NUMBER", "AWS_SECRET", "bucket", "s", "NUMBER", "Bucket", "Conf", "NUMBER", "S", "NUMBER", "_BUCKET", "Should", "I", "make", "new", "connections", "every", "time", "I", "access", "S", "NUMBER", "or", "be", "it", "okay", "to", "save", "it", "in", "global", "scope", "to", "reuse", "it", "later", "JordonPhillips", "Thanks", "According", "to", "the", "aws", "template", "LINK", "resource", "ec", "NUMBER", "route", "NUMBER", "html", "a", "AWS", "EC", "NUMBER", "Route", "object", "should", "have", "the", "following", "properties", "Type", "AWS", "EC", "NUMBER", "Route", "Properties", "DestinationCidrBlock", "String", "GatewayId", "String", "InstanceId", "String", "NatGatewayId", "String", "NetworkInterfaceId", "String", "RouteTableId", "String", "VpcPeeringConnectionId", "String", "However", "when", "I", "loop", "through", "the", "properties", "on", "a", "route", "object", "import", "boto", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "route", "ec", "NUMBER", "Route", "route_table_id", "destination_cidr_block", "for", "attr", "in", "dir", "route", "if", "hasattr", "route", "attr", "print", "obj", "NUMBER", "s", "s", "attr", "getattr", "route", "attr", "it", "will", "return", "NUMBER", "obj", "NUMBER", "RouteTable", "TAG", "obj", "NUMBER", "__class__", "TAG", "obj", "NUMBER", "__delattr__", "TAG", "obj", "NUMBER", "__dict__", "meta", "ResourceMeta", "ec", "NUMBER", "identifiers", "u", "route_table_id", "u", "destination_cidr_block", "_route_table_id", "rtb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "_destination_cidr_block", "NUMBER", "NUMBER", "obj", "NUMBER", "__doc__", "None", "obj", "NUMBER", "__eq__", "TAG", "obj", "NUMBER", "__format__", "TAG", "obj", "NUMBER", "__getattribute__", "TAG", "obj", "NUMBER", "__hash__", "TAG", "obj", "NUMBER", "__init__", "TAG", "obj", "NUMBER", "__module__", "boto", "NUMBER", "resources", "NUMBER", "factory", "obj", "NUMBER", "__new__", "TAG", "obj", "NUMBER", "__reduce__", "TAG", "obj", "NUMBER", "__reduce_ex__", "TAG", "obj", "NUMBER", "__repr__", "TAG", "obj", "NUMBER", "__setattr__", "TAG", "obj", "NUMBER", "__sizeof__", "TAG", "obj", "NUMBER", "__str__", "TAG", "obj", "NUMBER", "__subclasshook__", "TAG", "obj", "NUMBER", "__weakref__", "None", "obj", "NUMBER", "_destination_cidr_block", "NUMBER", "NUMBER", "obj", "NUMBER", "_route_table_id", "rtb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "obj", "NUMBER", "delete", "TAG", "obj", "NUMBER", "destination_cidr_block", "NUMBER", "NUMBER", "obj", "NUMBER", "get_available_subresources", "TAG", "obj", "NUMBER", "meta", "ResourceMeta", "ec", "NUMBER", "identifiers", "u", "route_table_id", "u", "destination_cidr_block", "obj", "NUMBER", "replace", "TAG", "obj", "NUMBER", "route_table_id", "rtb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "The", "route", "object", "returned", "from", "the", "ec", "NUMBER", "Route", "route_table_id", "destination_cidr_block", "call", "seems", "to", "be", "miss", "the", "following", "attributes", "GatewayId", "InstanceId", "NatGatewayId", "NetworkInterfaceId", "VpcPeeringConnectionId", "I", "don", "t", "think", "it", "be", "hydrating", "NUMBER", "Perhaps", "I", "be", "calling", "the", "attributes", "wrong", "but", "I", "have", "be", "able", "to", "pull", "attributes", "from", "the", "EC", "NUMBER", "Instance", "Subnet", "Security", "Group", "NetworkACL", "and", "EIP", "in", "this", "way", "NUMBER", "In", "order", "to", "illustrate", "the", "problem", "I", "be", "having", "I", "attempt", "to", "access", "the", "gateway_id", "attribute", "and", "I", "get", "the", "following", "stack", "trace", "NUMBER", "Which", "I", "think", "be", "essentially", "saying", "the", "attribute", "be", "not", "on", "the", "object", "NUMBER", "route", "NUMBER", "gateway_id", "Traceback", "most", "recent", "call", "last", "File", "Users", "aidanmelen", "NUMBER", "p", "NUMBER", "pool", "plugins", "org", "NUMBER", "python", "NUMBER", "pydev_", "NUMBER", "pysrc", "_pydevd_bundle", "pydevd_exec", "NUMBER", "py", "line", "NUMBER", "in", "Exec", "exec", "exp", "in", "global_vars", "local_vars", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "Users", "aidanmelen", "Sampleminded", "infrastructure", "environments", "NUMBER", "_python", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "property_loader", "NUMBER", "has", "no", "load", "method", "NUMBER", "format", "self", "NUMBER", "__class__", "NUMBER", "__name__", "ResourceLoadException", "ec", "NUMBER", "Route", "has", "no", "load", "method", "How", "do", "I", "need", "to", "call", "the", "route", "object", "differently", "to", "extract", "the", "gateway_id", "attribute", "describe", "in", "the", "documentation", "LINK", "route", "I", "appreciate", "your", "help", "but", "I", "m", "still", "run", "into", "inconsistencies", "with", "the", "documentation", "and", "code", "NUMBER", "For", "example", "the", "docs", "LINK", "EC", "NUMBER", "RouteTable", "NUMBER", "routes_attribute", "say", "that", "I", "can", "get", "GatewayId", "InstanceId", "NatGatewayId", "NetworkInterfaceId", "and", "VpcPeeringConnectionId", "from", "the", "Route", "Table", "s", "TAG", "NUMBER", "import", "boto", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "route_table", "ec", "NUMBER", "RouteTable", "id", "route_table", "NUMBER", "routes_attribute", "u", "GatewayId", "local", "u", "DestinationCidrBlock", "NUMBER", "NUMBER", "u", "State", "active", "u", "Origin", "CreateRouteTable", "routes_attribute", "only", "returns", "the", "GatewayId", "NUMBER", "Still", "miss", "InstanceId", "NatGatewayId", "NetworkInterfaceId", "and", "VpcPeeringConnectionId", "NUMBER", "Hi", "guys", "How", "can", "I", "achieve", "monitoring", "of", "the", "upload", "process", "when", "I", "be", "use", "s", "NUMBER", "upload_part", "NUMBER", "You", "have", "implement", "that", "functionality", "with", "upload_file", "with", "callback", "but", "it", "takes", "exist", "file", "NUMBER", "I", "be", "use", "django", "and", "I", "don", "t", "have", "actual", "file", "NUMBER", "Just", "InMemoryUploadedFile", "instance", "and", "I", "have", "to", "use", "create_multipart_upload", "for", "it", "NUMBER", "Thanks", "Hi", "The", "lastest", "documentation", "would", "suggest", "there", "be", "no", "COPY", "function", "now", "for", "AMIs", "in", "boto", "NUMBER", "LINK", "image", "While", "older", "version", "had", "it", "it", "would", "seem", "this", "has", "now", "be", "remove", "How", "be", "possible", "to", "now", "copy", "AMIs", "between", "regions", "use", "boto", "Thanks", "Chris", "Use", "copy_image", "method", "change", "ec", "NUMBER", "_connect", "object", "to", "destination", "region", "NUMBER", "copy_ec", "NUMBER", "_connect", "boto", "NUMBER", "client", "ec", "NUMBER", "aws_access_key_id", "xxx", "aws_secret_access_key", "xxx", "region_name", "us", "west", "NUMBER", "ec", "NUMBER", "_connect", "boto", "NUMBER", "client", "ec", "NUMBER", "aws_access_key_id", "xxx", "aws_secret_access_key", "xxx", "region_name", "us", "west", "NUMBER", "copy_ec", "NUMBER", "_connect", "NUMBER", "copy_image", "SourceRegion", "us", "west", "NUMBER", "SourceImageId", "image_list", "counter", "Name", "ImageName", "counter", "Aamir", "NUMBER", "very", "helpful", "thank", "you", "NUMBER", "JordonPhillips", "I", "was", "looking", "in", "the", "old", "docs", "and", "it", "appears", "to", "exist", "but", "I", "think", "I", "was", "previously", "use", "an", "abstraction", "layer", "for", "boto", "ec", "NUMBER", "that", "include", "a", "method", "on", "image", "to", "copy", "NUMBER", "Is", "this", "feature", "in", "development", "If", "so", "what", "be", "its", "status", "ship", "Your", "documentation", "LINK", "EC", "NUMBER", "ServiceResource", "NUMBER", "create_instances", "describes", "the", "SecurityGroupIds", "kwarg", "as", "One", "or", "more", "security", "group", "IDs", "NUMBER", "This", "be", "apparently", "distinct", "from", "the", "SecurityGroups", "kwarg", "which", "be", "describe", "as", "One", "or", "more", "security", "group", "names", "NUMBER", "However", "when", "I", "attempt", "to", "create", "an", "EC", "NUMBER", "instance", "specify", "a", "security", "group", "python", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "ec", "NUMBER", "create_instances", "ImageId", "ami", "EXAMPLE", "MinCount", "NUMBER", "MaxCount", "NUMBER", "SecurityGroupIds", "ssg", "EXAMPLE", "I", "get", "the", "following", "error", "sh", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidParameterValue", "when", "calling", "the", "RunInstances", "operation", "Value", "for", "parameter", "groupId", "be", "invalid", "NUMBER", "The", "value", "cannot", "be", "empty", "But", "if", "I", "instead", "pass", "a", "security", "group", "name", "in", "the", "SecurityGroupIds", "list", "python", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "ec", "NUMBER", "create_instances", "ImageId", "ami", "EXAMPLE", "MinCount", "NUMBER", "MaxCount", "NUMBER", "SecurityGroupIds", "default", "It", "works", "NUMBER", "Seems", "I", "was", "not", "the", "first", "LINK", "spot", "instance", "creation", "to", "notice", "this", "issue", "NUMBER", "Oh", "duh", "NUMBER", "The", "extra", "s", "at", "the", "beginning", "of", "ssg", "f", "NUMBER", "ce", "NUMBER", "was", "indeed", "the", "issue", "NUMBER", "Sorry", "for", "the", "trouble", "NUMBER", "In", "the", "docs", "under", "the", "S", "NUMBER", "service", "object", "there", "be", "the", "BucketLifecycle", "object", "NUMBER", "That", "object", "has", "a", "put", "method", "NUMBER", "The", "docs", "says", "Deprecated", "see", "the", "PutBucketLifecycleConfiguration", "operation", "NUMBER", "I", "cannot", "find", "a", "reference", "to", "PutBucketLifecycleConfiguration", "anywhere", "else", "in", "the", "documentation", "NUMBER", "Even", "a", "grep", "of", "the", "code", "or", "a", "search", "on", "Github", "doesn", "t", "find", "a", "reference", "NUMBER", "It", "be", "here", "LINK", "S", "NUMBER", "Client", "NUMBER", "put_bucket_lifecycle_configuration", "NUMBER", "The", "reason", "that", "it", "be", "camel", "case", "as", "oppose", "to", "snake", "cased", "be", "because", "typically", "AWS", "operation", "names", "be", "camel", "cased", "so", "sometimes", "in", "the", "doc", "text", "which", "we", "share", "with", "other", "SDKs", "will", "have", "operation", "names", "as", "camel", "cased", "NUMBER", "Thus", "we", "usually", "we", "try", "to", "avoid", "having", "operation", "API", "names", "in", "the", "docs", "but", "in", "this", "case", "I", "do", "not", "think", "we", "can", "avoid", "it", "NUMBER", "This", "confused", "me", "too", "NUMBER", "Docs", "refer", "to", "something", "that", "isn", "t", "find", "when", "i", "search", "the", "docs", "NUMBER", "Hi", "Sorry", "to", "intrude", "into", "your", "time", "NUMBER", "boto", "NUMBER", "be", "very", "powerful", "API", "and", "works", "very", "well", "for", "my", "organization", "NUMBER", "however", "i", "incorporated", "parallel", "ssh", "python", "NUMBER", "and", "boto", "NUMBER", "to", "get", "matrics", "to", "CW", "NUMBER", "I", "be", "able", "to", "put_metric_data", "on", "certain", "intervals", "to", "CW", "but", "this", "data", "points", "do", "not", "plot", "to", "anything", "meaningful", "NUMBER", "i", "be", "not", "sure", "why", "these", "points", "be", "constantly", "staying", "in", "same", "range", "or", "be", "completely", "off", "in", "graph", "NUMBER", "Example", "would", "be", "that", "i", "have", "scale", "setup", "as", "sample", "count", "NUMBER", "sum", "NUMBER", "and", "mon", "NUMBER", "and", "max", "NUMBER", "for", "custom", "cpu", "meric", "NUMBER", "my", "points", "be", "NUMBER", "NUMBER", "NUMBER", "and", "then", "NUMBER", "for", "ten", "times", "as", "I", "peg", "CPU", "with", "while", "loop", "NUMBER", "this", "goes", "for", "a", "while", "NUMBER", "minutes", "amazon", "cpu", "metric", "do", "graph", "this", "period", "correctly", "NUMBER", "But", "my", "graph", "be", "more", "horizontal", "line", "with", "visible", "points", "NUMBER", "Is", "there", "a", "good", "example", "of", "boto", "NUMBER", "with", "put_metric_data", "that", "woudl", "actually", "graph", "correctly", "this", "scenario", "NUMBER", "Any", "help", "appreciated", "NUMBER", "Could", "you", "provide", "a", "code", "snippet", "of", "what", "you", "be", "trying", "to", "do", "As", "to", "be", "able", "to", "complete", "your", "scenario", "I", "be", "not", "too", "familiar", "how", "to", "handle", "that", "specific", "use", "case", "with", "the", "CloudWatch", "API", "NUMBER", "I", "would", "recommend", "ask", "the", "forums", "LINK", "NUMBER", "NUMBER", "They", "should", "be", "much", "more", "knowledgeable", "about", "how", "to", "handle", "your", "use", "case", "NUMBER", "Hi", "thanks", "for", "response", "NUMBER", "I", "thought", "that", "no", "one", "will", "respond", "NUMBER", "I", "will", "try", "forums", "NUMBER", "Problem", "be", "this", "be", "full", "blow", "app", "that", "I", "write", "NUMBER", "I", "will", "give", "you", "a", "sample", "of", "the", "CPU", "monitor", "of", "linux", "instance", "NUMBER", "Bottom", "like", "this", "will", "not", "run", "as", "it", "depends", "on", "the", "parallelSSH", "and", "boto", "NUMBER", "libraries", "NUMBER", "My", "point", "be", "this", "Even", "if", "I", "be", "collecting", "over", "one", "ssh", "session", "stats", "every", "second", "or", "two", "and", "I", "be", "get", "right", "results", "back", "in", "essence", "if", "cpu", "be", "NUMBER", "bussy", "i", "report", "NUMBER", "as", "I", "be", "add", "both", "sys", "and", "user", "cycles", "NUMBER", "when", "I", "plot", "this", "to", "CW", "I", "be", "get", "a", "one", "point", "on", "the", "graph", "NUMBER", "Now", "if", "this", "goes", "for", "a", "while", "the", "labels", "be", "not", "correctly", "setup", "and", "line", "be", "relatively", "flat", "instead", "of", "going", "higher", "and", "higher", "NUMBER", "It", "be", "hard", "to", "explain", "but", "I", "be", "looking", "for", "really", "any", "example", "or", "plotting", "stuff", "correctly", "NUMBER", "from", "bCore", "import", "Boto", "NUMBER", "Wrapper", "from", "bCoreCMD", "import", "Boto", "NUMBER", "CMDWrapper", "import", "re", "datetime", "time", "import", "logging", "import", "Config", "as", "cf", "logger", "logging", "NUMBER", "getLogger", "cwtest", "NUMBER", "Cpu", "class", "Cpu", "Boto", "NUMBER", "Wrapper", "Boto", "NUMBER", "CMDWrapper", "Demo", "class", "def", "__init__", "self", "thisApp", "instance", "aws", "self", "NUMBER", "aws", "aws", "self", "NUMBER", "isApp", "thisApp", "self", "NUMBER", "cnt", "int", "self", "NUMBER", "aws", "NUMBER", "loopCnt", "self", "NUMBER", "collectLoop", "int", "self", "NUMBER", "aws", "NUMBER", "collectLoop", "init", "core", "classes", "Boto", "NUMBER", "Wrapper", "NUMBER", "__init__", "self", "instance", "aws", "NUMBER", "resource", "aws", "NUMBER", "target", "aws", "NUMBER", "nameSpace", "Boto", "NUMBER", "CMDWrapper", "NUMBER", "__init__", "self", "thisApp", "aws", "if", "self", "NUMBER", "aws", "NUMBER", "sendMetrics", "NUMBER", "lower", "false", "print", "Only", "a", "DryRun", "no", "stats", "will", "be", "publish", "to", "AWS", "NUMBER", "def", "__str__", "self", "return", "Boto", "NUMBER", "Wrapper", "NUMBER", "__str__", "self", "Boto", "NUMBER", "CMDWrapper", "NUMBER", "__str__", "self", "def", "run", "self", "pKey", "filters", "for", "CPU", "stats", "we", "need", "to", "capture", "twice", "listCpuRawGenerator", "list", "genDict", "dict", "get", "all", "run", "EC", "NUMBER", "instances", "in", "the", "cloud", "instances", "self", "NUMBER", "resource", "NUMBER", "instances", "NUMBER", "filter", "Filters", "filters", "for", "instance", "in", "instances", "if", "instance", "NUMBER", "id", "in", "self", "NUMBER", "aws", "NUMBER", "instanceIDs", "logger", "NUMBER", "info", "Found", "instance", "ID", "of", "type", "NUMBER", "format", "instance", "NUMBER", "id", "instance", "NUMBER", "instance_type", "one", "time", "ssh", "tunnel", "self", "NUMBER", "clientRun", "pKey", "while", "self", "NUMBER", "cnt", "TAG", "Starting", "today", "Read", "the", "Docs", "will", "start", "hosting", "projects", "from", "subdomains", "on", "the", "domain", "readthedocs", "NUMBER", "io", "instead", "of", "on", "readthedocs", "NUMBER", "org", "NUMBER", "This", "change", "address", "some", "security", "concerns", "around", "site", "cookies", "while", "hosting", "user", "generate", "data", "on", "the", "same", "domain", "as", "our", "dashboard", "NUMBER", "Test", "Plan", "Manually", "visited", "all", "the", "links", "I", "ve", "modify", "NUMBER", "Currently", "boto", "NUMBER", "rds", "client", "has", "a", "method", "modify_db_snapshot_attribute", "but", "not", "a", "corresponding", "method", "for", "cluster", "snapshot", "attributes", "NUMBER", "Could", "one", "please", "be", "add", "Yep", "we", "can", "get", "that", "update", "NUMBER", "Thanks", "for", "letting", "us", "know", "NUMBER", "I", "think", "this", "API", "endpoint", "LINK", "_ModifyDBClusterSnapshotAttribute", "NUMBER", "html", "be", "miss", "in", "the", "JSON", "blueprint", "for", "RDS", "as", "suggested", "here", "LINK", "sdk", "go", "issue", "NUMBER", "NUMBER", "Could", "update", "to", "the", "latest", "JSON", "blueprint", "for", "RDS", "solve", "this", "issue", "Hi", "guys", "Here", "s", "the", "create_instance", "NUMBER", "py", "file", "i", "use", "to", "create", "EC", "NUMBER", "Instance", "NUMBER", "python", "usr", "bin", "python", "import", "boto", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "ec", "NUMBER", "create_instances", "ImageId", "ami", "fe", "NUMBER", "b", "NUMBER", "MinCount", "NUMBER", "MaxCount", "NUMBER", "but", "when", "i", "was", "executing", "it", "i", "get", "this", "error", "Traceback", "most", "recent", "call", "last", "File", "create_instance", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "ec", "NUMBER", "create_instances", "ImageId", "ami", "fe", "NUMBER", "b", "NUMBER", "MinCount", "NUMBER", "MaxCount", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidParameterCombination", "when", "calling", "the", "RunInstances", "operation", "Non", "Windows", "instances", "with", "a", "virtualization", "type", "of", "hvm", "be", "currently", "not", "support", "for", "this", "instance", "type", "NUMBER", "I", "notice", "that", "type", "hvm", "be", "currently", "not", "support", "so", "what", "should", "i", "do", "Thank", "your", "for", "the", "answer", "NUMBER", "So", "what", "would", "the", "script", "be", "if", "i", "select", "t", "NUMBER", "micro", "So", "the", "script", "would", "be", "like", "this", "right", "usr", "bin", "python", "import", "boto", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "ec", "NUMBER", "create_instances", "ImageId", "ami", "fe", "NUMBER", "b", "NUMBER", "MinCount", "NUMBER", "MaxCount", "NUMBER", "InstanceType", "t", "NUMBER", "micro", "You", "d", "need", "to", "quote", "the", "value", "but", "otherwise", "yes", "ec", "NUMBER", "create_instances", "ImageId", "ami", "fe", "NUMBER", "b", "NUMBER", "MinCount", "NUMBER", "MaxCount", "NUMBER", "InstanceType", "t", "NUMBER", "micro", "Let", "us", "know", "if", "you", "have", "any", "more", "question", "NUMBER", "Hi", "jamesls", "I", "tried", "that", "code", "but", "it", "didn", "t", "work", "NUMBER", "Here", "s", "the", "error", "Traceback", "most", "recent", "call", "last", "File", "create_instance", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "ec", "NUMBER", "create_instances", "ImageId", "ami", "fe", "NUMBER", "b", "NUMBER", "MinCount", "NUMBER", "MaxCount", "NUMBER", "InstanceType", "t", "NUMBER", "micro", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "_args", "_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "call", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "VPCResourceNotSpecified", "when", "calling", "the", "RunInstances", "operation", "The", "specified", "instance", "type", "can", "only", "be", "use", "in", "a", "VPC", "NUMBER", "A", "subnet", "ID", "or", "network", "interface", "ID", "be", "required", "to", "carry", "out", "the", "request", "NUMBER", "For", "certain", "instance", "types", "such", "as", "the", "one", "you", "ve", "specified", "you", "ll", "need", "to", "launch", "the", "instance", "in", "a", "VPC", "NUMBER", "You", "can", "do", "this", "by", "specify", "the", "SubnetId", "parameter", "to", "run_instances", "NUMBER", "You", "re", "other", "option", "be", "to", "select", "another", "instance", "type", "NUMBER", "You", "can", "get", "a", "list", "of", "your", "available", "subnets", "use", "ec", "NUMBER", "describe_subnets", "NUMBER", "I", "m", "a", "little", "confused", "here", "NUMBER", "So", "i", "just", "want", "to", "test", "creating", "new", "instance", "any", "type", "be", "OK", "could", "you", "tell", "me", "what", "be", "the", "complete", "command", "to", "do", "that", "please", "thinhduckhoi", "You", "should", "google", "or", "go", "to", "site", "like", "serverfault", "NUMBER", "com", "for", "all", "these", "usage", "question", "there", "be", "abundance", "of", "example", "around", "the", "corner", "NUMBER", "Use", "AWS", "console", "wizard", "if", "don", "t", "intend", "to", "read", "through", "the", "whole", "bunch", "of", "AWS", "EC", "NUMBER", "background", "knowledge", "NUMBER", "If", "you", "intend", "to", "use", "boto", "NUMBER", "for", "some", "automation", "task", "it", "be", "just", "a", "start", "you", "really", "need", "to", "read", "lots", "of", "info", "about", "VPC", "VPC", "limitation", "setting", "tag", "etc", "NUMBER", "Otherwise", "use", "AWS", "console", "wizard", "for", "quick", "start", "NUMBER", "Hi", "commutecat", "I", "read", "tutorial", "on", "boto", "NUMBER", "document", "here", "and", "followed", "it", "but", "not", "work", "NUMBER", "Could", "it", "be", "the", "content", "on", "that", "site", "be", "deprecate", "LINK", "launching", "new", "instances", "thinhduckhoi", "Yes", "that", "part", "of", "documentation", "actually", "outdate", "NUMBER", "After", "AWS", "enforce", "the", "use", "of", "VPC", "you", "NEED", "VPC", "NUMBER", "In", "fact", "the", "minimum", "requirement", "to", "launched", "a", "EC", "NUMBER", "instance", "into", "VPC", "e", "NUMBER", "g", "NUMBER", "your", "final", "script", "be", "first", "create", "a", "VPC", "NUMBER", "Just", "use", "AWS", "web", "console", "create", "a", "basic", "VPC", "NUMBER", "Then", "launch", "your", "create_instance", "that", "will", "use", "all", "default", "VPC", "value", "filled", "up", "the", "rest", "NUMBER", "When", "a", "session", "be", "start", "with", "eu", "central", "NUMBER", "self", "NUMBER", "aws_session", "boto", "NUMBER", "session", "NUMBER", "Session", "aws_access_key_id", "payload", "aws_access_key_id", "aws_secret_access_key", "payload", "aws_secret_access_key", "region_name", "self", "NUMBER", "region_name", "self", "NUMBER", "sns", "self", "NUMBER", "aws_session", "NUMBER", "client", "sns", "and", "we", "call", "self", "NUMBER", "sns", "NUMBER", "publish", "with", "a", "TopicArn", "in", "us", "east", "NUMBER", "it", "gives", "the", "following", "error", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidParameter", "when", "calling", "the", "Publish", "operation", "Invalid", "parameter", "TopicArn", "This", "be", "not", "self", "explanatory", "NUMBER", "I", "couldn", "t", "realize", "I", "was", "use", "a", "Topic", "in", "a", "wrong", "region", "NUMBER", "My", "application", "and", "Kinesis", "be", "not", "in", "the", "same", "account", "NUMBER", "So", "I", "have", "to", "assume", "a", "role", "to", "get", "the", "records", "from", "kinesis", "NUMBER", "But", "the", "credentials", "will", "be", "expired", "in", "a", "short", "time", "NUMBER", "How", "to", "avoid", "it", "I", "followed", "This", "LINK", "vars", "NUMBER", "html", "use", "aws", "iam", "roles", "document", "NUMBER", "I", "can", "assume", "the", "role", "by", "command", "aws", "sts", "assume", "role", "role", "arn", "arn", "aws", "iam", "NUMBER", "role", "list", "role", "role", "session", "name", "kk", "NUMBER", "But", "after", "add", "the", "following", "there", "be", "an", "error", "like", "A", "client", "error", "InvalidClientTokenId", "occur", "when", "calling", "the", "AssumeRole", "operation", "The", "security", "token", "include", "in", "the", "request", "be", "invalid", "NUMBER", "export", "AWS_DEFAULT_PROFILE", "crossaccount", "NUMBER", "aws", "config", "default", "region", "ap", "southeast", "NUMBER", "profile", "crossaccount", "role_arn", "arn", "aws", "iam", "NUMBER", "role", "listing", "matching", "receiver", "role", "Role", "R", "NUMBER", "FLA", "NUMBER", "ID", "NUMBER", "XJ", "source_profile", "development", "NUMBER", "aws", "credentials", "development", "aws_access_key_id", "foo", "aws_secret_access_key", "bar", "This", "typically", "be", "a", "config", "issue", "don", "t", "have", "permission", "to", "assume", "the", "role", "or", "you", "may", "have", "invalid", "credentials", "with", "the", "development", "profile", "NUMBER", "I", "notice", "you", "didn", "t", "specify", "which", "profile", "you", "were", "use", "in", "the", "sample", "CLI", "command", "you", "had", "NUMBER", "Ensure", "that", "that", "same", "CLI", "command", "works", "with", "profile", "development", "NUMBER", "If", "that", "still", "doesn", "t", "work", "please", "post", "a", "debug", "log", "and", "I", "ll", "reopen", "and", "take", "another", "look", "NUMBER", "But", "typically", "it", "s", "one", "of", "the", "two", "issue", "listed", "above", "that", "fix", "the", "issue", "NUMBER", "I", "be", "trying", "to", "add", "a", "rule", "to", "SGa", "to", "allow", "SGb", "as", "in", "in", "bound", "ingress", "NUMBER", "sga", "NUMBER", "authorize_ingress", "IpProtocol", "NUMBER", "SourceSecurityGroupName", "sgb", "where", "sgb", "be", "the", "ID", "of", "the", "security", "group", "NUMBER", "Unknown", "error", "An", "error", "occur", "InvalidParameterValue", "when", "calling", "the", "AuthorizeSecurityGroupIngress", "operation", "Invalid", "value", "sg", "f", "NUMBER", "cd", "NUMBER", "for", "groupName", "NUMBER", "You", "may", "not", "reference", "Amazon", "VPC", "security", "group", "by", "name", "NUMBER", "Please", "use", "the", "corresponding", "id", "for", "this", "operation", "NUMBER", "AWS", "documentation", "shows", "the", "options", "be", "authorize", "security", "group", "ingress", "dry", "run", "no", "dry", "run", "group", "name", "TAG", "group", "id", "TAG", "ip", "permissions", "TAG", "protocol", "TAG", "port", "TAG", "cidr", "TAG", "source", "group", "TAG", "group", "owner", "TAG", "cli", "input", "json", "TAG", "generate", "cli", "skeleton", "I", "ve", "tried", "sga", "NUMBER", "authorize_ingress", "IpProtocol", "NUMBER", "source", "group", "sgb", "How", "do", "I", "set", "the", "source", "as", "a", "Security", "Group", "Thanks", "JordonPhillips", "Got", "it", "NUMBER", "I", "tried", "specify", "the", "name", "at", "one", "point", "and", "also", "the", "ID", "NUMBER", "Either", "way", "I", "get", "You", "may", "not", "reference", "Amazon", "VPC", "security", "group", "by", "name", "NUMBER", "error", "message", "NUMBER", "I", "ended", "up", "get", "it", "work", "with", "this", "command", "sg", "NUMBER", "authorize_ingress", "GroupId", "sg", "NUMBER", "id", "IpPermissions", "IpProtocol", "NUMBER", "UserIdGroupPairs", "GroupId", "sg_a", "So", "many", "brackets", "cc", "kyleknap", "JordonPhillips", "petermoon", "Yes", "ship", "create_instances", "accepts", "a", "parameter", "for", "instance", "initiated", "shutdown", "behavior", "so", "it", "seems", "odd", "that", "when", "you", "describe_instances", "you", "can", "t", "query", "that", "attribute", "directly", "from", "the", "Instance", "NUMBER", "Does", "it", "make", "sense", "to", "expose", "instanceInitiatedShutdownBehavior", "as", "an", "attribute", "of", "EC", "NUMBER", "Instance", "JordonPhillips", "Yes", "I", "be", "aware", "of", "that", "method", "NUMBER", "However", "from", "my", "understanding", "that", "be", "a", "separate", "call", "to", "AWS", "to", "get", "this", "attribute", "NUMBER", "What", "I", "be", "ask", "be", "once", "a", "user", "has", "call", "describe_instances", "for", "example", "and", "has", "an", "Instance", "already", "in", "hand", "shouldn", "t", "they", "be", "able", "to", "query", "attributes", "like", "this", "directly", "from", "the", "object", "As", "oppose", "to", "make", "a", "separate", "call", "back", "out", "to", "AWS", "It", "seems", "odd", "that", "EC", "NUMBER", "Instance", "has", "most", "but", "not", "all", "of", "the", "properties", "describing", "the", "instance", "it", "represents", "NUMBER", "Okie", "doke", "makes", "sense", "NUMBER", "Closes", "NUMBER", "kyleknap", "JordonPhillips", "Docs", "for", "LINK", "cc", "kyleknap", "JordonPhillips", "ship", "It", "would", "also", "be", "good", "to", "update", "this", "in", "the", "CLI", "when", "the", "botocore", "one", "gets", "merge", "NUMBER", "Looks", "fine", "NUMBER", "ship", "upon", "answering", "the", "one", "question", "that", "I", "had", "about", "a", "variable", "renaming", "NUMBER", "MaxKeys", "parameter", "seems", "to", "be", "ignored", "by", "Bucket", "NUMBER", "objects", "NUMBER", "filter", "method", "Code", "python", "session", "boto", "NUMBER", "Session", "profile_name", "aws_profile", "region_name", "aws_region", "s", "NUMBER", "session", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "bucket_name", "it", "bucket", "NUMBER", "objects", "NUMBER", "filter", "MaxKeys", "NUMBER", "n", "NUMBER", "for", "item", "in", "it", "if", "n", "NUMBER", "print", "TOO", "MANY", "break", "print", "item", "n", "NUMBER", "print", "n", "Desired", "effect", "print", "NUMBER", "items", "then", "print", "NUMBER", "Actual", "effect", "print", "NUMBER", "items", "print", "TOO", "MANY", "print", "NUMBER", "parameters", "to", "reproduce", "python", "version", "NUMBER", "boto", "NUMBER", "version", "NUMBER", "platform", "Linux", "NUMBER", "AMD", "NUMBER", "This", "makes", "sense", "but", "as", "you", "said", "the", "documentation", "be", "not", "correct", "NUMBER", "Also", "the", "keyword", "MaxKeys", "in", "this", "usage", "be", "not", "consistent", "with", "MaxKeys", "use", "in", "other", "contexts", "where", "it", "do", "limit", "the", "number", "of", "results", "NUMBER", "In", "any", "case", "thanks", "for", "clarifying", "this", "NUMBER", "boompig", "Why", "be", "this", "close", "if", "the", "documentation", "hasn", "t", "be", "fix", "yet", "When", "I", "call", "LINK", "SQS", "NUMBER", "Client", "NUMBER", "get_queue_url", "I", "received", "URL", "such", "as", "LINK", "But", "in", "AWS", "console", "I", "can", "view", "URL", "LINK", "east", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "reindex", "NUMBER", "I", "fix", "this", "with", "sending", "endpoint_url", "LINK", "east", "NUMBER", "amazonaws", "NUMBER", "com", "when", "create", "SQSClient", "instance", "NUMBER", "But", "I", "m", "not", "sure", "this", "be", "the", "right", "way", "NUMBER", "I", "think", "either", "version", "of", "the", "queue", "URL", "should", "work", "NUMBER", "Both", "hostnames", "resolve", "to", "the", "same", "DNS", "records", "NUMBER", "Were", "you", "having", "a", "problem", "with", "the", "queue", "NUMBER", "amazonaws", "NUMBER", "com", "version", "of", "the", "URL", "I", "don", "t", "know", "what", "be", "it", "but", "with", "queue", "NUMBER", "amazonaws", "NUMBER", "com", "do", "not", "work", "AWS", "ElasticBeanstalk", "Worker", "Environment", "Hi", "I", "create", "network", "interface", "assign", "them", "tags", "NUMBER", "They", "show", "up", "on", "aws", "NUMBER", "These", "interfaces", "be", "then", "use", "in", "create_instances", "in", "NetworkInterfaces", "list", "NUMBER", "Later", "I", "get", "these", "same", "interfaces", "use", "instance", "NUMBER", "network_interfaces", "NUMBER", "I", "notice", "that", "tag_set", "be", "not", "set", "in", "these", "network", "interface", "objects", "NUMBER", "Is", "this", "by", "design", "or", "its", "a", "bug", "When", "trying", "to", "create", "a", "new", "bucket", "it", "fail", "with", "the", "error", "as", "below", "NUMBER", "The", "same", "operation", "succeeds", "when", "use", "the", "resource", "NUMBER", "create_bucket", "API", "NUMBER", "Why", "be", "it", "that", "in", "the", "first", "case", "I", "need", "to", "specify", "a", "LocationConstraint", "while", "in", "the", "NUMBER", "case", "it", "works", "without", "that", "NUMBER", "NUMBER", "Failed", "case", "s", "NUMBER", "client", "boto", "NUMBER", "client", "s", "NUMBER", "s", "NUMBER", "client", "NUMBER", "create_bucket", "Bucket", "test_bucket", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "s", "NUMBER", "client", "NUMBER", "create_bucket", "Bucket", "test_bucket", "NUMBER", "File", "Users", "behzad_dastur", "pyenvironments", "awsenv", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Users", "behzad_dastur", "pyenvironments", "awsenv", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "ClientError", "An", "error", "occur", "IllegalLocationConstraintException", "when", "calling", "the", "CreateBucket", "operation", "The", "unspecified", "location", "constraint", "be", "incompatible", "for", "the", "region", "specific", "endpo", "int", "this", "request", "was", "sent", "to", "NUMBER", "NUMBER", "Pass", "case", "NUMBER", "s", "NUMBER", "client", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "s", "NUMBER", "client", "NUMBER", "create_bucket", "Bucket", "global", "s", "NUMBER", "cpe", "bucket", "NUMBER", "s", "NUMBER", "Bucket", "name", "global", "s", "NUMBER", "cpe", "bucket", "NUMBER", "So", "the", "only", "reason", "I", "file", "the", "bug", "was", "because", "when", "I", "try", "to", "use", "the", "low", "level", "client", "to", "create", "a", "bucket", "and", "explicitly", "specify", "the", "location", "constraint", "NUMBER", "I", "cannot", "create", "buckets", "in", "us", "east", "NUMBER", "which", "would", "be", "the", "default", "location", "if", "None", "be", "specified", "NUMBER", "s", "NUMBER", "client", "NUMBER", "create_bucket", "Bucket", "symcpe", "testbucket", "NUMBER", "CreateBucketConfiguration", "LocationConstraint", "us", "east", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "s", "NUMBER", "client", "NUMBER", "create_bucket", "Bucket", "symcpe", "testbucket", "NUMBER", "CreateBucketConfiguration", "LocationConstraint", "us", "east", "NUMBER", "File", "Users", "behzad_dastur", "pyenvironments", "awsenv", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Users", "behzad_dastur", "pyenvironments", "awsenv", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "ClientError", "An", "error", "occur", "InvalidLocationConstraint", "when", "calling", "the", "CreateBucket", "operation", "The", "specified", "location", "constraint", "be", "not", "valid", "I", "do", "not", "see", "the", "us", "east", "NUMBER", "CreateBucketConfiguration", "LocationConstraint", "EU", "eu", "west", "NUMBER", "us", "west", "NUMBER", "us", "west", "NUMBER", "ap", "southeast", "NUMBER", "ap", "southeast", "NUMBER", "ap", "northeast", "NUMBER", "sa", "east", "NUMBER", "cn", "north", "NUMBER", "eu", "central", "NUMBER", "There", "be", "also", "a", "special", "case", "regard", "NUMBER", "s", "in", "the", "desired", "bucket", "name", "NUMBER", "I", "ve", "put", "more", "information", "on", "LINK", "cli", "issue", "NUMBER", "should", "I", "open", "up", "a", "new", "issue", "Also", "overlaps", "with", "NUMBER", "maybe", "I", "apologize", "if", "this", "isn", "t", "the", "proper", "place", "to", "post", "a", "question", "vs", "NUMBER", "an", "issue", "with", "boto", "NUMBER", "I", "be", "setting", "up", "an", "ETL", "workflow", "based", "on", "sns", "sqs", "message", "notifications", "NUMBER", "For", "polling", "to", "receive", "sqs", "notifications", "I", "initially", "created", "a", "loop", "as", "follows", "python", "def", "get_notifications", "self", "while", "True", "response", "self", "NUMBER", "sqs_client", "NUMBER", "receive_message", "QueueUrl", "self", "NUMBER", "url", "if", "self", "NUMBER", "MESSAGE_KEY", "not", "in", "response", "continue", "message", "response", "self", "NUMBER", "MESSAGE_KEY", "NUMBER", "yield", "message", "Body", "self", "NUMBER", "sqs_client", "NUMBER", "delete_message", "QueueUrl", "self", "NUMBER", "url", "ReceiptHandle", "message", "ReceiptHandle", "In", "my", "initial", "test", "it", "seems", "like", "the", "message", "be", "not", "be", "delete", "from", "the", "queue", "with", "this", "loop", "NUMBER", "I", "was", "hoping", "to", "halt", "execution", "until", "the", "message", "had", "be", "processed", "NUMBER", "I", "see", "the", "documentation", "uses", "queue", "NUMBER", "receive_messages", "instead", "NUMBER", "Would", "you", "recommend", "this", "over", "the", "client", "s", "receive", "message", "What", "be", "the", "best", "mechanism", "to", "poll", "for", "a", "particular", "message", "awesome", "thanks", "NUMBER", "When", "you", "call", "the", "DescribeInstances", "AWS", "API", "call", "and", "give", "it", "a", "list", "of", "instances", "if", "that", "instance", "was", "terminated", "some", "time", "ago", "AWS", "in", "some", "cases", "may", "not", "return", "a", "InvalidInstanceID", "NUMBER", "NotFound", "instead", "it", "will", "return", "a", "valid", "response", "but", "with", "an", "empty", "reservations", "list", "NUMBER", "When", "this", "happens", "boto", "NUMBER", "do", "the", "object", "mapping", "as", "expected", "but", "accessing", "any", "attribute", "on", "an", "ec", "NUMBER", "instance", "in", "this", "state", "results", "in", "File", "Library", "Python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "property_loader", "return", "self", "NUMBER", "meta", "NUMBER", "data", "NUMBER", "get", "name", "AttributeError", "NoneType", "object", "has", "no", "attribute", "get", "This", "can", "be", "reproduced", "by", "executing", "the", "following", "on", "an", "instance", "ID", "that", "once", "existed", "but", "has", "be", "terminated", "for", "a", "day", "or", "so", "import", "boto", "NUMBER", "bad_iid", "i", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "Session", "NUMBER", "resource", "ec", "NUMBER", "instance", "ec", "NUMBER", "Instance", "bad_iid", "print", "i", "NUMBER", "launch_time", "I", "see", "NUMBER", "ways", "of", "fix", "this", "problem", "NUMBER", "Catching", "the", "fact", "that", "reservations", "be", "empty", "and", "issue", "spontaneous", "InvalidInstanceID", "NUMBER", "NotFound", "ourselves", "NUMBER", "NUMBER", "Expose", "the", "reservation", "ID", "as", "part", "of", "the", "Instance", "object", "so", "that", "callers", "can", "check", "the", "reservation", "for", "themselves", "before", "attempting", "to", "access", "other", "Instance", "attributes", "NUMBER", "I", "would", "much", "prefer", "solution", "NUMBER", "as", "empty", "reservations", "and", "InvalidInstanceID", "NUMBER", "NotFound", "be", "really", "the", "same", "thing", "and", "I", "can", "t", "think", "of", "any", "possible", "scenario", "where", "a", "developer", "would", "ever", "need", "to", "distinguish", "between", "the", "NUMBER", "not", "find", "scenarios", "and", "if", "they", "needed", "that", "detail", "they", "should", "probably", "be", "calling", "describe_instances", "directly", "and", "examining", "the", "contents", "of", "the", "dict", "NUMBER", "Any", "update", "on", "this", "I", "run", "into", "the", "same", "issue", "use", "the", "Ruby", "SDK", "and", "find", "it", "quite", "confusing", "NUMBER", "I", "thought", "I", "would", "test", "out", "the", "behaviour", "on", "boto", "NUMBER", "as", "I", "m", "much", "more", "familiar", "with", "it", "and", "notice", "it", "has", "the", "same", "issue", "NUMBER", "I", "m", "also", "in", "favour", "of", "option", "NUMBER", "I", "notice", "there", "be", "also", "a", "number", "of", "similar", "issue", "with", "the", "ec", "NUMBER", "Image", "describeImage", "response", "NUMBER", "NUMBER", "NUMBER", "Lessen", "some", "confusion", "on", "load", "and", "reload", "resource", "documentation", "NUMBER", "cc", "jamesls", "JordonPhillips", "We", "do", "not", "have", "any", "logic", "on", "throttling", "or", "controlling", "max", "bandwidth", "NUMBER", "cc", "jamesls", "JordonPhillips", "S", "NUMBER", "uses", "ContentType", "header", "for", "signature", "calculation", "but", "client", "s", "method", "has", "not", "parameter", "ContentType", "NUMBER", "Are", "you", "seeing", "request", "failures", "You", "can", "set", "the", "response", "content", "type", "with", "the", "ResponseContentType", "parameter", "docs", "LINK", "S", "NUMBER", "Client", "NUMBER", "get_object", "NUMBER", "If", "I", "get", "S", "NUMBER", "object", "by", "generating", "url", "and", "add", "Content", "Type", "to", "headers", "I", "get", "SignatureDoesNotMatch", "error", "NUMBER", "If", "i", "use", "ResponseContentType", "parameter", "url", "has", "parameter", "response", "content", "type", "in", "self", "NUMBER", "I", "tried", "to", "append", "headers", "manually", "create", "request_dict", "add", "headers", "call", "get_presigned_url", "method", "of", "requestsigner", "but", "url", "be", "invalid", "NUMBER", "Now", "I", "use", "old", "boto", "generate_url", "and", "it", "work", "correct", "NUMBER", "Please", "do", "not", "close", "this", "issue", "I", "think", "it", "be", "important", "bug", "NUMBER", "If", "you", "need", "quick", "response", "contact", "with", "me", "immediately", "NUMBER", "u", "LINK", "bucket", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "key", "path", "Signature", "nxK", "NUMBER", "BwZ", "NUMBER", "tQ", "NUMBER", "NHb", "NUMBER", "genrCgwW", "NUMBER", "Yg", "NUMBER", "D", "Expires", "NUMBER", "AWSAccessKeyId", "old", "boto", "generate", "u", "LINK", "bucket", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "key", "path", "response", "content", "type", "application", "NUMBER", "Fjson", "AWSAccessKeyId", "Expires", "NUMBER", "Signature", "GcSTuhqKQAaoEfzaFnHMDCyNBVw", "NUMBER", "D", "with", "ResponseContentType", "u", "LINK", "content", "type", "application", "NUMBER", "Fjson", "Expires", "NUMBER", "Signature", "MfFpVaUNCK", "NUMBER", "CAbUNhd", "NUMBER", "vjHRmtI", "NUMBER", "D", "when", "I", "try", "to", "create", "request_dict", "and", "add", "headers", "manually", "NUMBER", "I", "remove", "AWSAccessKeyId", "it", "isn", "t", "error", "My", "code", "with", "RequestSigner", "bucket_name", "test", "bucket", "key", "key", "path", "request_dict", "query_string", "headers", "Content", "Type", "content_type", "url_path", "u", "bucket", "key", "NUMBER", "format", "bucket", "bucket_name", "key", "key", "body", "method", "u", "GET", "prepare_request_dict", "request_dict", "endpoint_url", "LINK", "presigned_url", "client", "NUMBER", "instance", "NUMBER", "_request_signer", "NUMBER", "generate_presigned_url", "request_dict", "expires_in", "URL_EXPIRATION_TIME", "Result", "u", "LINK", "bucket", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "key", "path", "AWSAccessKeyId", "content", "type", "application", "NUMBER", "Fjson", "Expires", "NUMBER", "Signature", "XIYG", "NUMBER", "hDsdZMUrHDN", "NUMBER", "rwmR", "NUMBER", "Z", "NUMBER", "P", "NUMBER", "BI", "NUMBER", "D", "So", "you", "re", "generating", "the", "pre", "sign", "URL", "and", "then", "when", "you", "use", "that", "URL", "you", "re", "add", "Content", "Type", "I", "tried", "to", "generate", "url", "with", "content", "type", "header", "NUMBER", "conn", "boto", "NUMBER", "connect_s", "NUMBER", "presigned_url", "conn", "NUMBER", "generate_url", "expires_in", "URL_EXPIRATION_TIME", "method", "GET", "bucket", "bucket_name", "key", "key", "headers", "Content", "Type", "content_type", "It", "s", "old", "code", "If", "I", "redirect", "NUMBER", "to", "S", "NUMBER", "presigned", "url", "with", "boto", "NUMBER", "request", "has", "content", "type", "header", "NUMBER", "And", "I", "have", "error", "NUMBER", "TAG", "TAG", "TAG", "SignatureDoesNotMatch", "TAG", "TAG", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "key", "and", "signing", "method", "NUMBER", "TAG", "TAG", "remove", "TAG", "TAG", "GET", "application", "vnd", "NUMBER", "api", "json", "NUMBER", "remove", "NUMBER", "cfdb", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "ce", "NUMBER", "af", "NUMBER", "cc", "NUMBER", "bf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "json", "TAG", "TAG", "pYQyUnK", "NUMBER", "KfsV", "NUMBER", "fcdFU", "NUMBER", "M", "NUMBER", "YaVBs", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "e", "TAG", "TAG", "NUMBER", "A", "NUMBER", "ED", "NUMBER", "B", "NUMBER", "C", "NUMBER", "E", "TAG", "TAG", "NUMBER", "qANbC", "NUMBER", "yFu", "NUMBER", "wrlg", "NUMBER", "G", "NUMBER", "xETyhwGPsimHUMa", "NUMBER", "BiMxbPQs", "NUMBER", "cYYqyT", "NUMBER", "VuY", "NUMBER", "tYB", "nPm", "NUMBER", "NcSnLQhRBzac", "TAG", "TAG", "S", "NUMBER", "service", "calculate", "signature", "with", "headers", "boto", "NUMBER", "ignore", "do", "not", "support", "headers", "when", "it", "generate", "presigned", "url", "Is", "there", "any", "reason", "you", "re", "sending", "ContentType", "Requests", "that", "do", "not", "have", "a", "body", "GET", "do", "not", "need", "to", "have", "ContentType", "set", "NUMBER", "boto", "NUMBER", "will", "sign", "all", "headers", "except", "for", "accept", "and", "user", "agent", "NUMBER", "If", "I", "redirect", "request", "to", "S", "NUMBER", "like", "as", "NUMBER", "NUMBER", "from", "API", "gateway", "I", "cant", "remove", "this", "header", "from", "request", "NUMBER", "And", "client", "browser", "or", "other", "send", "headers", "to", "redirect", "url", "NUMBER", "I", "don", "t", "know", "any", "reason", "why", "S", "NUMBER", "calculate", "signature", "with", "headers", "when", "it", "check", "signature", "of", "request", "but", "I", "think", "it", "be", "correct", "for", "S", "NUMBER", "And", "AWS", "SDK", "should", "provide", "this", "feature", "for", "request", "s", "signing", "NUMBER", "Well", "the", "issue", "be", "that", "we", "do", "sign", "the", "header", "and", "we", "shouldn", "t", "be", "doing", "that", "regardless", "of", "the", "reason", "why", "it", "s", "there", "NUMBER", "I", "ll", "have", "a", "PR", "up", "to", "address", "this", "shortly", "NUMBER", "Thanks", "for", "raising", "the", "issue", "If", "I", "understand", "correctly", "you", "have", "add", "Content", "Type", "to", "your", "ignore", "list", "headers", "NUMBER", "But", "you", "and", "so", "do", "not", "use", "it", "and", "S", "NUMBER", "his", "checks", "NUMBER", "In", "this", "case", "S", "NUMBER", "Service", "should", "not", "use", "this", "headers", "not", "you", "Sure", "I", "can", "be", "do", "not", "send", "Content", "Type", "header", "for", "request", "but", "API", "Gateway", "required", "this", "header", "for", "request", "s", "integration", "NUMBER", "What", "can", "I", "do", "if", "I", "send", "POST", "or", "another", "request", "to", "another", "server", "with", "Content", "Type", "header", "and", "redirect", "it", "to", "S", "NUMBER", "Any", "update", "on", "this", "I", "set", "the", "ContentDisposition", "to", "attachment", "filename", "NUMBER", "so", "it", "can", "be", "use", "as", "a", "download", "but", "then", "I", "get", "the", "SignatureMismatch", "error", "NUMBER", "What", "about", "ContentType", "header", "Is", "there", "a", "bug", "when", "the", "ContentType", "parameter", "be", "include", "In", "the", "code", "below", "the", "first", "block", "make", "a", "sign", "URL", "that", "S", "NUMBER", "accepts", "NUMBER", "But", "when", "I", "specify", "a", "ContentType", "S", "NUMBER", "rejects", "the", "PUT", "with", "NUMBER", "Does", "anyone", "know", "if", "there", "be", "an", "issue", "here", "return", "S", "NUMBER", "Utils", "NUMBER", "s", "NUMBER", "_client", "NUMBER", "generate_presigned_url", "method", "Params", "Bucket", "config", "NUMBER", "s", "NUMBER", "_bucket_name", "Key", "key", "ExpiresIn", "config", "NUMBER", "s", "NUMBER", "_expire_seconds", "HttpMethod", "PUT", "return", "S", "NUMBER", "Utils", "NUMBER", "s", "NUMBER", "_client", "NUMBER", "generate_presigned_url", "method", "Params", "Bucket", "config", "NUMBER", "s", "NUMBER", "_bucket_name", "Key", "key", "ContentType", "content_type", "ExpiresIn", "config", "NUMBER", "s", "NUMBER", "_expire_seconds", "HttpMethod", "PUT", "escanzano", "You", "should", "use", "boto", "old", "AWS", "SDK", "generate_url", "to", "fix", "it", "NUMBER", "I", "think", "this", "be", "AWS", "S", "NUMBER", "bug", "and", "it", "won", "t", "be", "fix", "in", "boto", "NUMBER", "code", "NUMBER", "conn", "boto", "NUMBER", "connect_s", "NUMBER", "presigned_url", "conn", "NUMBER", "generate_url", "expires_in", "url_expiration_time", "method", "GET", "bucket", "self", "NUMBER", "bucket_name", "key", "key", "headers", "Content", "Type", "content_type", "Can", "we", "please", "have", "the", "ability", "to", "add", "headers", "to", "pre", "sign", "urls", "in", "boto", "NUMBER", "just", "as", "be", "demonstrated", "above", "in", "the", "old", "boto", "methods", "I", "have", "a", "situation", "where", "I", "m", "use", "a", "request", "to", "API", "gateway", "to", "run", "a", "Lambda", "function", "which", "generates", "a", "data", "file", "NUMBER", "This", "file", "be", "then", "uploaded", "to", "s", "NUMBER", "since", "it", "be", "too", "large", "to", "return", "directly", "via", "the", "gateway", "NUMBER", "I", "generate", "a", "sign", "url", "and", "return", "a", "NUMBER", "redirect", "with", "this", "url", "as", "the", "location", "NUMBER", "It", "works", "fine", "in", "boto", "NUMBER", "as", "long", "as", "the", "customer", "doesn", "t", "call", "the", "api", "endpoint", "with", "a", "Content", "Type", "header", "but", "if", "they", "do", "that", "header", "causes", "the", "presigned", "url", "to", "be", "invalid", "as", "it", "be", "pass", "along", "with", "the", "redirect", "NUMBER", "This", "be", "very", "much", "a", "real", "world", "situation", "where", "a", "Content", "Type", "header", "would", "be", "pass", "to", "a", "pre", "sign", "s", "NUMBER", "get", "request", "url", "even", "though", "it", "isn", "t", "needed", "it", "be", "there", "from", "the", "original", "API", "request", "NUMBER", "All", "file", "should", "have", "a", "newline", "before", "EOF", "this", "change", "the", "new", "change", "script", "to", "add", "them", "and", "backfills", "them", "into", "all", "exist", "change", "file", "NUMBER", "cc", "kyleknap", "jamesls", "Python", "NUMBER", "do", "not", "have", "string", "NUMBER", "letters", "due", "to", "the", "ambiguous", "nature", "of", "the", "word", "letters", "when", "locales", "be", "taken", "into", "consideration", "NUMBER", "To", "get", "the", "same", "effect", "you", "can", "use", "string", "NUMBER", "ascii_letters", "which", "be", "available", "on", "all", "version", "we", "support", "NUMBER", "cc", "kyleknap", "jamesls", "Motivation", "For", "scenarios", "like", "parsing", "some", "values", "from", "several", "sources", "like", "server", "log", "user", "upload", "data", "which", "might", "contain", "value", "duplication", "and", "write", "them", "to", "dynamoDB", "as", "unique", "values", "NUMBER", "You", "want", "to", "bypass", "no", "duplication", "limitation", "of", "single", "batch", "write", "request", "within", "boto", "NUMBER", "rather", "than", "add", "another", "layer", "to", "deal", "with", "value", "duplication", "NUMBER", "The", "no", "duplication", "error", "looks", "like", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "ValidationException", "when", "calling", "the", "BatchWriteItem", "operation", "Provided", "list", "of", "item", "keys", "contains", "duplicates", "NUMBER", "Solution", "To", "de", "duplicate", "request", "by", "specify", "auto_dedup", "True", "It", "will", "just", "write", "out", "a", "single", "request", "since", "all", "request", "be", "the", "same", "in", "below", "example", "NUMBER", "python", "with", "table", "NUMBER", "batch_writer", "auto_dedup", "True", "as", "batch", "for", "_", "in", "range", "NUMBER", "batch", "NUMBER", "put_item", "Item", "account_type", "anonymous", "username", "user", "first_name", "unknown", "last_name", "unknown", "jamesls", "Thanks", "for", "the", "nice", "catch", "My", "thoughts", "as", "below", "but", "not", "yet", "implement", "completely", "drop", "request", "item", "in", "buffer", "if", "its", "primary", "key", "or", "composite", "values", "be", "the", "same", "as", "newly", "add", "one", "NUMBER", "interface", "might", "look", "like", "python", "with", "table", "NUMBER", "batch_writer", "overwrite_by_pkeys", "primary_key", "sort_key", "as", "batch", "batch", "NUMBER", "put_item", "Item", "primary_key", "p", "NUMBER", "sort_key", "s", "NUMBER", "other", "NUMBER", "batch", "NUMBER", "put_item", "Item", "primary_key", "p", "NUMBER", "sort_key", "s", "NUMBER", "other", "NUMBER", "batch", "NUMBER", "delete_item", "Key", "primary_key", "p", "NUMBER", "sort_key", "s", "NUMBER", "batch", "NUMBER", "put_item", "Item", "primary_key", "p", "NUMBER", "sort_key", "s", "NUMBER", "other", "NUMBER", "request", "items", "after", "dedup", "python", "batch", "NUMBER", "put_item", "Item", "primary_key", "p", "NUMBER", "sort_key", "s", "NUMBER", "other", "NUMBER", "batch", "NUMBER", "put_item", "Item", "primary_key", "p", "NUMBER", "sort_key", "s", "NUMBER", "other", "NUMBER", "the", "reason", "behind", "be", "NUMBER", "treat", "batch", "write", "as", "stream", "of", "individual", "puts", "deletes", "new", "operations", "on", "the", "same", "primary", "key", "item", "always", "overwrite", "old", "ones", "NUMBER", "NUMBER", "so", "if", "we", "drop", "older", "request", "with", "the", "same", "primary", "key", "in", "buffer", "but", "keep", "the", "latest", "one", "it", "be", "acting", "like", "eventually", "consistent", "with", "streams", "of", "individual", "puts", "deletes", "without", "actual", "operations", "on", "old", "request", "NUMBER", "Then", "it", "almost", "meet", "user", "s", "expectation", "if", "they", "want", "the", "same", "behavior", "of", "streams", "of", "individual", "puts", "deletes", "NUMBER", "Thanks", "for", "your", "further", "advise", "No", "concerns", "NUMBER", "Looks", "good", "NUMBER", "ship", "One", "more", "thing", "that", "would", "be", "nice", "be", "could", "you", "run", "the", "boto", "NUMBER", "scripts", "new", "change", "script", "to", "add", "a", "changelog", "entry", "for", "this", "No", "concerns", "NUMBER", "Looks", "good", "NUMBER", "ship", "One", "more", "thing", "that", "would", "be", "nice", "be", "could", "you", "run", "the", "boto", "NUMBER", "scripts", "new", "change", "script", "to", "add", "a", "changelog", "entry", "for", "this", "kyleknap", "do", "jamesls", "kyleknap", "JordonPhillips", "Thanks", "for", "reviewing", "please", "kindly", "let", "me", "know", "if", "anything", "further", "should", "be", "do", "Thanks", "Sorry", "about", "not", "noticing", "the", "update", "before", "NUMBER", "Merging", "NUMBER", "ship", "ship", "Fixes", "NUMBER", "cc", "kyleknap", "jamesls", "The", "documentation", "makes", "explicit", "references", "to", "a", "ProvisionedThroughputExceededException", "LINK", "Kinesis", "NUMBER", "Client", "NUMBER", "put_record", "If", "a", "PutRecord", "request", "cannot", "be", "processed", "because", "of", "insufficient", "provisioned", "throughput", "on", "the", "shard", "involved", "in", "the", "request", "PutRecord", "throw", "ProvisionedThroughputExceededException", "NUMBER", "The", "link", "be", "broken", "and", "there", "s", "no", "information", "on", "how", "to", "catch", "this", "exception", "NUMBER", "Furthermore", "grepping", "the", "source", "code", "for", "boto", "NUMBER", "and", "botocore", "only", "turns", "up", "documentation", "references", "to", "ProvisionedThroughputExceededException", "no", "actual", "implementations", "of", "it", "so", "I", "m", "unsure", "what", "to", "import", "to", "try", "and", "catch", "handle", "this", "exception", "NUMBER", "I", "m", "seeing", "references", "to", "a", "ClientError", "For", "example", "in", "the", "code", "snippet", "here", "LINK", "clienterror", "accessing", "a", "bucket", "NUMBER", "python", "import", "botocore", "bucket", "s", "NUMBER", "Bucket", "mybucket", "exists", "True", "try", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "head_bucket", "Bucket", "mybucket", "except", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "as", "e", "If", "a", "client", "error", "be", "throw", "then", "check", "that", "it", "was", "a", "NUMBER", "error", "NUMBER", "If", "it", "was", "a", "NUMBER", "error", "then", "the", "bucket", "do", "not", "exist", "NUMBER", "error_code", "int", "e", "NUMBER", "response", "Error", "Code", "if", "error_code", "NUMBER", "exists", "False", "If", "I", "could", "reliably", "reproduce", "this", "I", "could", "just", "print", "out", "the", "properties", "of", "a", "ClientError", "and", "figure", "out", "how", "to", "check", "it", "for", "a", "ProvisionedThroughputExceededException", "but", "it", "s", "not", "really", "trivial", "to", "reproduce", "this", "error", "NUMBER", "Now", "I", "m", "utterly", "confused", "because", "in", "the", "previous", "linked", "example", "Code", "be", "NUMBER", "but", "here", "it", "s", "a", "named", "exception", "LINK", "_upgrades", "NUMBER", "html", "error", "handle", "NUMBER", "python", "from", "botocore", "NUMBER", "exception", "import", "ClientError", "ec", "NUMBER", "session", "NUMBER", "get_client", "ec", "NUMBER", "us", "west", "NUMBER", "try", "parsed", "ec", "NUMBER", "describe_instances", "InstanceIds", "i", "badid", "except", "ClientError", "as", "e", "logger", "NUMBER", "error", "Received", "error", "s", "e", "exc_info", "True", "Only", "worry", "about", "a", "specific", "service", "error", "code", "if", "e", "NUMBER", "response", "Error", "Code", "InvalidInstanceID", "NUMBER", "NotFound", "raise", "I", "be", "also", "having", "this", "concern", "in", "the", "Kinesis", "client", "NUMBER", "NUMBER", "If", "I", "could", "reliably", "reproduce", "this", "I", "could", "just", "print", "out", "the", "properties", "of", "a", "ClientError", "and", "figure", "out", "how", "to", "check", "it", "for", "a", "ProvisionedThroughputExceededException", "but", "it", "s", "not", "really", "trivial", "to", "reproduce", "this", "error", "NUMBER", "I", "was", "able", "to", "reproduce", "this", "by", "flooding", "a", "table", "with", "capacity", "NUMBER", "with", "write", "request", "and", "capturing", "the", "error", "object", "NUMBER", "For", "future", "reference", "here", "be", "what", "I", "think", "be", "likely", "the", "interesting", "bits", "python", "import", "pprint", "import", "random", "import", "boto", "NUMBER", "dynamodb", "boto", "NUMBER", "resource", "dynamodb", "table", "dynamodb", "NUMBER", "Table", "test__alex", "while", "True", "try", "table", "NUMBER", "put_item", "Item", "ID", "str", "random", "NUMBER", "randint", "NUMBER", "NUMBER", "name", "open", "usr", "share", "dict", "words", "NUMBER", "read", "NUMBER", "except", "Exception", "as", "e", "f", "e", "break", "error", "f", "for", "attr", "in", "dir", "f", "if", "attr", "NUMBER", "artswith", "_", "continue", "print", "attr", "pprint", "NUMBER", "pprint", "getattr", "f", "attr", "print", "MSG_TEMPLATE", "An", "error", "occur", "error_code", "when", "calling", "the", "operation_name", "operation", "retry_info", "error_message", "args", "An", "error", "occur", "ProvisionedThroughputExceededException", "when", "calling", "the", "PutItem", "operation", "reached", "max", "retries", "NUMBER", "The", "level", "of", "configured", "provisioned", "throughput", "for", "the", "table", "was", "exceeded", "NUMBER", "Consider", "increasing", "your", "provisioning", "level", "with", "the", "UpdateTable", "API", "NUMBER", "operation_name", "PutItem", "response", "Error", "Code", "ProvisionedThroughputExceededException", "Message", "The", "level", "of", "configured", "provisioned", "throughput", "for", "the", "table", "was", "exceeded", "NUMBER", "Consider", "increasing", "your", "provisioning", "level", "with", "the", "UpdateTable", "API", "NUMBER", "ResponseMetadata", "HTTPHeaders", "connection", "keep", "alive", "content", "length", "NUMBER", "content", "type", "application", "x", "amz", "json", "NUMBER", "date", "Tue", "NUMBER", "Aug", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "server", "Server", "x", "amz", "crc", "NUMBER", "NUMBER", "x", "amzn", "requestid", "CDRKT", "NUMBER", "L", "NUMBER", "H", "NUMBER", "RM", "NUMBER", "CL", "NUMBER", "P", "NUMBER", "J", "NUMBER", "L", "NUMBER", "VV", "NUMBER", "KQNSO", "NUMBER", "AEMVJF", "NUMBER", "Q", "NUMBER", "ASUAAJG", "HTTPStatusCode", "NUMBER", "MaxAttemptsReached", "True", "RequestId", "CDRKT", "NUMBER", "L", "NUMBER", "H", "NUMBER", "RM", "NUMBER", "CL", "NUMBER", "P", "NUMBER", "J", "NUMBER", "L", "NUMBER", "VV", "NUMBER", "KQNSO", "NUMBER", "AEMVJF", "NUMBER", "Q", "NUMBER", "ASUAAJG", "RetryAttempts", "NUMBER", "with_traceback", "TAG", "And", "so", "you", "have", "something", "to", "catch", "python", "from", "botocore", "NUMBER", "exception", "import", "ClientError", "isinstance", "error", "ClientError", "True", "ship", "Let", "logging", "show", "the", "real", "amount", "of", "sent", "items", "NUMBER", "Small", "but", "quite", "useful", "detail", "to", "log", "during", "test", "stages", "NUMBER", "Thanks", "smile", "I", "think", "there", "s", "some", "format", "issue", "with", "the", "documentation", "which", "leads", "to", "odd", "mistaken", "information", "when", "describing", "the", "comparison", "operators", "available", "in", "condition", "expressions", "for", "DynamoDB", "NUMBER", "For", "instance", "readthedocs", "Services", "DynamoDB", "Client", "Query", "LINK", "DynamoDB", "NUMBER", "Client", "NUMBER", "query", "and", "specifically", "in", "Request", "Syntax", "Parameters", "KeyConditionExpression", "you", "can", "see", "Valid", "comparisons", "for", "the", "sort", "key", "condition", "be", "as", "follows", "sortKeyName", "sortkeyval", "true", "if", "the", "sort", "key", "value", "be", "equal", "to", "sortkeyval", "NUMBER", "sortKeyName", "sortkeyval", "true", "if", "the", "sort", "key", "value", "be", "less", "than", "sortkeyval", "NUMBER", "sortKeyName", "sortkeyval", "true", "if", "the", "sort", "key", "value", "be", "less", "than", "or", "equal", "to", "sortkeyval", "NUMBER", "sortKeyName", "sortkeyval", "true", "if", "the", "sort", "key", "value", "be", "greater", "than", "sortkeyval", "NUMBER", "NUMBER", "I", "presume", "the", "operators", "in", "this", "list", "be", "meant", "to", "match", "the", "listing", "given", "by", "the", "AWS", "DynamoDB", "DevGuide", "on", "Query", "And", "Scan", "LINK", "QueryAndScan", "NUMBER", "Query", "so", "I", "suspect", "some", "sort", "of", "replacement", "escaping", "gone", "awry", "somewhere", "in", "the", "pipeline", "NUMBER", "_", "btw", "I", "did", "inspect", "the", "page", "source", "so", "these", "don", "t", "seem", "to", "be", "browser", "induced", "char", "replacements", "due", "to", "a", "miss", "font", "or", "anything", "of", "that", "nature", "_", "We", "expose", "this", "in", "botocore", "but", "not", "boto", "NUMBER", "cc", "kyleknap", "jamesls", "ship", "jamesls", "That", "was", "the", "original", "thing", "that", "spurred", "this", "change", "on", "though", "I", "don", "t", "think", "that", "a", "user", "should", "necessarily", "use", "their", "boto", "credentials", "for", "Redshift", "NUMBER", "Fixes", "LINK", "The", "only", "discrepancy", "be", "that", "HeadObject", "do", "return", "an", "Owner", "but", "ListObjects", "do", "so", "the", "owner", "attribute", "cannot", "be", "populated", "from", "the", "load", "NUMBER", "I", "do", "not", "think", "there", "be", "anyway", "around", "this", "unfortunately", "because", "in", "order", "to", "get", "it", "perfectly", "correct", "it", "would", "require", "a", "ListObjects", "for", "a", "single", "object", "which", "be", "not", "cost", "efficient", "NUMBER", "cc", "jamesls", "JordonPhillips", "Fixes", "LINK", "Pretty", "much", "took", "botocore", "s", "guide", "and", "switched", "it", "with", "boto", "NUMBER", "terminology", "syntax", "NUMBER", "cc", "jamesls", "JordonPhillips", "boat", "Looks", "good", "NUMBER", "ship", "Resolves", "this", "StackOverflow", "issue", "LINK", "s", "NUMBER", "object", "object", "has", "no", "attribute", "md", "NUMBER", "NUMBER", "Closes", "NUMBER", "cc", "jamesls", "kyleknap", "We", "currently", "have", "the", "ability", "to", "inspect", "what", "resources", "be", "available", "to", "a", "session", "but", "not", "what", "subresources", "be", "available", "to", "a", "resource", "NUMBER", "This", "add", "a", "method", "to", "do", "that", "on", "each", "resource", "class", "NUMBER", "Resolves", "NUMBER", "This", "wasn", "t", "super", "high", "priority", "but", "it", "was", "a", "very", "simple", "change", "NUMBER", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "pm", "LINK", "ed", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "f", "c", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "png", "cc", "jamesls", "kyleknap", "Cool", "ship", "Repeated", "calls", "to", "the", "following", "method", "display", "an", "ever", "increasing", "memory", "footprint", "python", "CLIENT", "boto", "NUMBER", "client", "s", "NUMBER", "def", "get_contents", "path", "s", "NUMBER", "_object", "CLIENT", "NUMBER", "get_object", "Bucket", "my_existing_bucket", "Key", "my_existing_key", "if", "s", "NUMBER", "_object", "s", "NUMBER", "_stream", "s", "NUMBER", "_object", "NUMBER", "get", "Body", "return", "s", "NUMBER", "_stream", "NUMBER", "read", "return", "Using", "the", "memory_profiler", "library", "it", "s", "clear", "the", "culprit", "be", "the", "get_object", "call", "line", "NUMBER", "Line", "Mem", "usage", "Increment", "Line", "Contents", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "profile", "NUMBER", "def", "get_contents", "path", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "s", "NUMBER", "_object", "CLIENT", "NUMBER", "get_object", "Bucket", "my_existing_bucket", "Key", "my_existing_key", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "if", "s", "NUMBER", "_object", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "s", "NUMBER", "_stream", "s", "NUMBER", "_object", "NUMBER", "get", "Body", "NUMBER", "NUMBER", "MiB", "NUMBER", "MiB", "return", "s", "NUMBER", "_stream", "NUMBER", "read", "NUMBER", "return", "Values", "on", "line", "NUMBER", "ranging", "from", "NUMBER", "MiB", "to", "nearly", "NUMBER", "MiB", "per", "call", "be", "observed", "even", "when", "request", "the", "same", "key", "multiple", "times", "NUMBER", "Information", "Python", "version", "NUMBER", "OS", "X", "Yosemite", "and", "Ubuntu", "NUMBER", "environments", "boto", "NUMBER", "version", "NUMBER", "botocore", "version", "NUMBER", "gaulrobe", "could", "you", "take", "a", "look", "at", "this", "when", "you", "get", "in", "I", "m", "happy", "to", "jump", "on", "board", "when", "I", "m", "in", "as", "well", "Thanks", "for", "the", "response", "jamesls", "NUMBER", "jamesls", "thanks", "for", "the", "quick", "follow", "up", "I", "ve", "run", "several", "more", "test", "this", "morning", "and", "be", "not", "seeing", "memory", "jumps", "on", "subsequent", "calls", "to", "the", "API", "NUMBER", "Not", "sure", "what", "we", "were", "seeing", "yesterday", "NUMBER", "Feel", "free", "to", "close", "this", "out", "for", "now", "we", "will", "run", "more", "test", "and", "make", "another", "issue", "if", "we", "notice", "anything", "else", "wonky", "NUMBER", "Thanks", "again", "gaulrobe", "jamesls", "I", "have", "confirmed", "that", "we", "re", "not", "seeing", "the", "subsequent", "increases", "we", "were", "seeing", "yesterday", "NUMBER", "I", "m", "thoroughly", "confused", "but", "tentatively", "happy", "NUMBER", "Looks", "good", "just", "had", "comments", "about", "a", "couple", "of", "options", "that", "you", "may", "have", "miss", "NUMBER", "All", "of", "the", "stuff", "that", "I", "commented", "about", "can", "be", "add", "in", "a", "subsequent", "PR", "NUMBER", "ship", "We", "recently", "encountered", "a", "rare", "error", "condition", "in", "S", "NUMBER", "where", "the", "download", "of", "a", "larger", "file", "NUMBER", "Mb", "would", "hang", "unexpectedly", "NUMBER", "Somewhere", "in", "the", "network", "layer", "the", "connection", "would", "time", "out", "with", "only", "a", "portion", "of", "the", "file", "transmitted", "NUMBER", "When", "this", "happened", "get_contents_to_file", "would", "write", "as", "much", "data", "as", "was", "received", "and", "then", "exit", "with", "apparent", "success", "leaving", "the", "user", "with", "truncated", "file", "and", "no", "indication", "that", "an", "error", "had", "occur", "NUMBER", "We", "have", "followed", "up", "fairly", "extensively", "with", "S", "NUMBER", "business", "support", "and", "although", "neither", "we", "nor", "they", "have", "be", "able", "to", "pin", "down", "exactly", "what", "s", "cause", "the", "hang", "they", "recommend", "checking", "at", "the", "end", "of", "the", "download", "to", "make", "sure", "that", "the", "amount", "of", "data", "received", "matches", "with", "what", "Content", "Length", "says", "it", "should", "be", "NUMBER", "Here", "s", "what", "Amazon", "support", "actually", "said", "In", "general", "with", "issue", "like", "these", "the", "S", "NUMBER", "service", "team", "would", "usually", "recommend", "implement", "a", "form", "of", "error", "checking", "like", "you", "already", "have", "with", "comparing", "Etags", "of", "somehow", "comparing", "the", "downloaded", "object", "s", "properties", "with", "what", "you", "re", "expecting", "NUMBER", "A", "simple", "alternative", "example", "of", "this", "would", "be", "to", "just", "compare", "the", "retrieved", "Content", "Length", "of", "the", "object", "to", "the", "length", "of", "the", "downloaded", "object", "to", "see", "if", "they", "match", "NUMBER", "In", "a", "perfect", "world", "it", "would", "be", "ideal", "that", "intermittent", "error", "like", "these", "didn", "t", "occur", "ever", "but", "just", "the", "nature", "of", "having", "data", "traverse", "a", "distributed", "system", "like", "S", "NUMBER", "entails", "having", "to", "be", "able", "to", "appropriately", "handle", "unexpect", "responses", "NUMBER", "We", "re", "currently", "implement", "the", "check", "outside", "of", "boto", "eventually", "we", "ll", "get", "a", "pull", "request", "together", "to", "make", "it", "happen", "inside", "get_contents_to_file", "and", "raise", "an", "appropriate", "exception", "but", "in", "the", "meantime", "we", "felt", "it", "was", "important", "to", "get", "the", "info", "out", "there", "in", "case", "someone", "else", "runs", "into", "the", "same", "problem", "or", "someone", "wants", "to", "take", "a", "stab", "at", "fix", "it", "NUMBER", "Hi", "James", "Yes", "we", "be", "in", "fact", "use", "boto", "not", "boto", "NUMBER", "I", "had", "be", "under", "the", "impression", "that", "we", "d", "reproduced", "the", "issue", "with", "both", "boto", "and", "boto", "NUMBER", "just", "checked", "with", "our", "test", "folks", "and", "it", "turns", "out", "that", "we", "did", "not", "reproduce", "with", "boto", "NUMBER", "Call", "it", "an", "internal", "miscommunication", "on", "our", "end", "NUMBER", "My", "apologies", "NUMBER", "Will", "close", "this", "issue", "and", "we", "ll", "look", "into", "switching", "over", "to", "boto", "NUMBER", "as", "well", "NUMBER", "Thank", "you", "When", "calling", "boto", "NUMBER", "client", "cloudsearchdomain", "endpoint_url", "LINK", "had", "following", "error", "with", "Boto", "NUMBER", "NUMBER", "and", "botocore", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "app", "NUMBER", "py", "line", "NUMBER", "in", "dataCS", "size", "size", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "SignatureDoesNotMatch", "when", "calling", "the", "Search", "operation", "Credential", "should", "be", "scoped", "to", "correct", "service", "cloudsearch", "NUMBER", "Uninstalled", "boto", "NUMBER", "and", "reinstalled", "with", "previous", "version", "Boto", "NUMBER", "NUMBER", "and", "botocore", "NUMBER", "everything", "be", "perfect", "with", "older", "version", "NUMBER", "guys", "when", "be", "this", "fix", "going", "to", "be", "in", "tokyo", "lambda", "its", "fail", "today", "NUMBER", "Lambda", "has", "some", "version", "of", "Boto", "there", "by", "default", "NUMBER", "Is", "there", "any", "workaround", "to", "force", "the", "broken", "version", "to", "pass", "the", "right", "signature", "name", "by", "default", "There", "s", "no", "way", "to", "force", "AWS", "to", "upgrade", "their", "Boto", "version", "NUMBER", "Nevermind", "the", "solution", "to", "this", "for", "now", "if", "any", "other", "Lambda", "users", "stumble", "across", "be", "be", "just", "to", "package", "your", "own", "version", "of", "boto", "NUMBER", "from", "a", "virtualenv", "into", "your", "Lambda", "function", "zip", "package", "NUMBER", "That", "s", "probably", "good", "long", "run", "advice", "anyway", "so", "you", "don", "t", "find", "yourself", "in", "this", "type", "of", "situation", "again", "NUMBER", "I", "be", "doing", "monkey", "patch", "right", "now", "to", "those", "two", "function", "that", "be", "affected", "NUMBER", "FYI", "today", "the", "same", "bug", "has", "spread", "to", "us", "east", "NUMBER", "Virginia", "NUMBER", "funny", "that", "Tokyo", "get", "hit", "first", "I", "really", "like", "the", "error", "messaging", "for", "this", "now", "NUMBER", "Just", "had", "a", "question", "about", "subclassing", "error", "and", "whether", "we", "should", "improve", "the", "error", "message", "for", "api", "version", "in", "the", "client", "NUMBER", "Thanks", "NUMBER", "ship", "boat", "I", "be", "use", "Amazon", "cognito", "so", "my", "users", "can", "save", "file", "directly", "into", "an", "S", "NUMBER", "bucket", "NUMBER", "As", "a", "result", "the", "file", "be", "saved", "with", "an", "S", "NUMBER", "key", "that", "looks", "like", "this", "us", "east", "NUMBER", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "dd", "NUMBER", "NUMBER", "aa", "NUMBER", "NUMBER", "d", "NUMBER", "fadfd", "NUMBER", "blah", "myfile", "NUMBER", "txt", "This", "bit", "us", "east", "NUMBER", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "dd", "NUMBER", "NUMBER", "aa", "NUMBER", "NUMBER", "d", "NUMBER", "fadfd", "NUMBER", "be", "the", "users", "Cognito", "ID", "and", "be", "created", "by", "Amazon", "and", "be", "thus", "out", "of", "my", "control", "NUMBER", "My", "goal", "be", "to", "process", "all", "the", "file", "that", "belong", "to", "that", "user", "NUMBER", "So", "the", "best", "way", "to", "do", "that", "be", "use", "a", "paginator", "with", "a", "prefix", "set", "to", "us", "east", "NUMBER", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "dd", "NUMBER", "NUMBER", "aa", "NUMBER", "NUMBER", "d", "NUMBER", "fadfd", "NUMBER", "BUT", "boto", "NUMBER", "appears", "to", "be", "url", "encoding", "the", "prefix", "and", "thus", "no", "results", "be", "returned", "by", "the", "paginator", "NUMBER", "This", "be", "because", "the", "colon", "character", "has", "be", "percent", "encoded", "and", "somewhere", "else", "in", "boto", "NUMBER", "that", "means", "that", "some", "equality", "test", "be", "fail", "NUMBER", "Could", "you", "please", "turn", "off", "the", "url", "encoding", "of", "the", "prefix", "on", "paginators", "thanks", "Closing", "due", "to", "inactivity", "NUMBER", "Let", "us", "know", "if", "you", "get", "a", "code", "sample", "to", "help", "us", "reproduce", "this", "NUMBER", "Fixes", "LINK", "in", "process", "cc", "jamesls", "JordonPhillips", "boat", "Fixes", "LINK", "cc", "jamesls", "JordonPhillips", "Updated", "the", "test", "NUMBER", "Merging", "NUMBER", "Fixes", "LINK", "cc", "jamesls", "JordonPhillips", "Fixes", "LINK", "Was", "not", "completely", "obvious", "for", "a", "common", "use", "case", "NUMBER", "cc", "jamesls", "JordonPhillips", "boat", "I", "notice", "some", "broken", "links", "in", "the", "docs", "and", "while", "I", "was", "update", "I", "decided", "to", "reference", "the", "new", "way", "of", "setting", "the", "addressing", "style", "as", "well", "NUMBER", "cc", "jamesls", "kyleknap", "ship", "cc", "jamesls", "JordonPhillips", "Looks", "like", "we", "be", "miss", "a", "paginator", "NUMBER", "I", "will", "go", "ahead", "and", "add", "it", "NUMBER", "Added", "miss", "paginator", "in", "this", "PR", "LINK", "Looks", "like", "the", "resource", "model", "uses", "waiters", "NUMBER", "We", "will", "need", "to", "scrub", "the", "waiters", "from", "this", "resource", "model", "which", "will", "cause", "us", "to", "differ", "from", "the", "ruby", "sdk", "or", "revamp", "our", "design", "of", "waiters", "NUMBER", "Sure", "discussion", "and", "action", "be", "taking", "longer", "than", "expected", "NUMBER", "Fixes", "LINK", "cc", "jamesls", "JordonPhillips", "In", "the", "boto", "NUMBER", "client", "for", "the", "GameLift", "service", "the", "create_build", "call", "returns", "partial", "upload", "information", "NUMBER", "If", "I", "run", "this", "code", "gamelift_client", "boto", "NUMBER", "client", "gamelift", "aws_access_key_id", "AWS_ACCESS_KEY", "aws_secret_access_key", "AWS_SECRET_KEY", "region_name", "GAMELIFT_REGION", "create_build_result", "gamelift_client", "NUMBER", "create_build", "Name", "some", "build", "name", "Version", "NUMBER", "I", "get", "this", "result", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "TAG", "u", "Build", "u", "Status", "u", "INITIALIZED", "u", "Name", "u", "TAG", "u", "BuildId", "u", "TAG", "u", "CreationTime", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzlocal", "u", "SizeOnDisk", "NUMBER", "u", "Version", "u", "NUMBER", "u", "UploadCredentials", "u", "SecretAccessKey", "u", "TAG", "u", "SessionToken", "u", "TAG", "u", "AccessKeyId", "u", "TAG", "So", "GameLift", "returns", "me", "the", "UploadCredentials", "I", "need", "to", "initiate", "an", "upload", "but", "not", "the", "actual", "S", "NUMBER", "StorageLocation", "for", "me", "to", "make", "the", "upload", "NUMBER", "This", "seems", "to", "conflict", "with", "the", "publish", "API", "docs", "for", "the", "CreateBuild", "operation", "LINK", "_CreateBuild", "NUMBER", "html", "Then", "I", "call", "this", "code", "after", "creating", "a", "build", "build_id", "create_build_result", "Build", "BuildId", "request_creds_response", "gamelift_client", "NUMBER", "request_upload_credentials", "BuildId", "build_id", "And", "I", "get", "this", "result", "u", "StorageLocation", "u", "Bucket", "u", "prod", "gamescale", "build", "us", "west", "NUMBER", "u", "Key", "u", "TAG", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "TAG", "u", "UploadCredentials", "u", "SecretAccessKey", "u", "TAG", "u", "SessionToken", "u", "TAG", "u", "AccessKeyId", "u", "TAG", "This", "call", "successfully", "returns", "both", "the", "UploadCredentials", "and", "the", "StorageLocation", "NUMBER", "So", "my", "question", "be", "why", "do", "create_build", "only", "return", "the", "UploadCredentials", "and", "not", "the", "StorageLocation", "It", "seems", "to", "me", "it", "should", "either", "return", "both", "of", "those", "values", "or", "neither", "of", "those", "values", "NUMBER", "The", "way", "it", "be", "now", "isn", "t", "broken", "per", "se", "but", "it", "be", "really", "confusing", "NUMBER", "As", "a", "side", "note", "the", "AccessKeyId", "and", "SecretAccessKey", "returned", "by", "create_build", "and", "request_upload_credentials", "be", "different", "too", "so", "it", "seems", "like", "GameLift", "might", "be", "unnecessarily", "generating", "credentials", "twice", "NUMBER", "It", "turns", "out", "I", "had", "stale", "or", "corrupt", "GameLift", "model", "cached", "inside", "my", "HOME", "NUMBER", "aws", "gamelift", "directory", "NUMBER", "Deleting", "that", "directory", "and", "re", "run", "the", "script", "seems", "to", "have", "fix", "the", "issue", "NUMBER", "Seems", "like", "there", "be", "so", "many", "different", "ways", "of", "uploading", "a", "file", "to", "S", "NUMBER", "non", "pythonic", "tsk", "tsk", "NUMBER", "I", "have", "yet", "to", "find", "a", "combination", "that", "allows", "for", "both", "KeyboardInterrupts", "AND", "progress", "bars", "NUMBER", "s", "NUMBER", "Bucket", "bucket_name", "NUMBER", "put_object", "Key", "dest_path", "Body", "data", "allows", "KeyboardInterrupt", "to", "work", "but", "has", "no", "callback", "function", "NUMBER", "This", "has", "the", "callback", "but", "KeyboardInterrupt", "doesn", "t", "work", "NUMBER", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "upload_file", "source_path", "bucket_name", "dest_path", "Callback", "progress", "NUMBER", "update", "So", "what", "s", "the", "preferred", "way", "of", "having", "a", "callback", "function", "and", "allowing", "KI", "to", "work", "This", "also", "holds", "for", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "S", "NUMBER", "Transfer", "transfer", "S", "NUMBER", "Transfer", "boto", "NUMBER", "client", "s", "NUMBER", "transfer", "NUMBER", "upload_file", "source_path", "bucket_name", "dest_path", "callback", "progress", "NUMBER", "update", "Really", "annoying", "NUMBER", "Worked", "fine", "with", "boto", "NUMBER", "I", "be", "able", "to", "reproduce", "this", "with", "this", "snippet", "py", "import", "threading", "import", "boto", "NUMBER", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "S", "NUMBER", "Transfer", "source_path", "testfile", "bucket_name", "mybucketfoo", "dest_path", "blah", "class", "ProgressPercentage", "object", "def", "__init__", "self", "filename", "self", "NUMBER", "_filename", "filename", "self", "NUMBER", "_size", "float", "os", "NUMBER", "path", "NUMBER", "getsize", "filename", "self", "NUMBER", "_seen_so_far", "NUMBER", "self", "NUMBER", "_lock", "threading", "NUMBER", "Lock", "def", "__call__", "self", "bytes_amount", "To", "simplify", "we", "ll", "assume", "this", "be", "hooked", "up", "to", "a", "single", "filename", "NUMBER", "with", "self", "NUMBER", "_lock", "self", "NUMBER", "_seen_so_far", "bytes_amount", "percentage", "self", "NUMBER", "_seen_so_far", "self", "NUMBER", "_size", "NUMBER", "sys", "NUMBER", "dout", "NUMBER", "write", "r", "s", "s", "s", "NUMBER", "f", "self", "NUMBER", "_filename", "self", "NUMBER", "_seen_so_far", "self", "NUMBER", "_size", "percentage", "sys", "NUMBER", "dout", "NUMBER", "flush", "transfer", "S", "NUMBER", "Transfer", "boto", "NUMBER", "client", "s", "NUMBER", "transfer", "NUMBER", "upload_file", "source_path", "bucket_name", "dest_path", "callback", "ProgressPercentage", "source_path", "I", "takes", "me", "at", "least", "a", "few", "Cntrl", "C", "s", "to", "cancel", "it", "with", "or", "without", "callbacks", "NUMBER", "How", "long", "do", "it", "take", "for", "your", "program", "to", "exit", "on", "a", "successful", "Cntrl", "C", "Also", "be", "your", "progress", "callbacks", "similar", "to", "mine", "I", "be", "never", "able", "to", "exit", "on", "C", "C", "NUMBER", "They", "stack", "up", "and", "the", "program", "exits", "AFTER", "the", "transfer", "completes", "NUMBER", "Which", "be", "even", "more", "annoying", "NUMBER", "I", "be", "use", "the", "tqdm", "package", "for", "progress", "NUMBER", "Thanks", "NUMBER", "We", "will", "look", "to", "fix", "this", "NUMBER", "Any", "update", "on", "this", "Still", "waiting", "for", "a", "fix", "on", "this", "NUMBER", "The", "documentation", "for", "storing", "data", "to", "S", "NUMBER", "with", "boto", "NUMBER", "at", "LINK", "storing", "data", "says", "Storing", "data", "from", "a", "file", "stream", "or", "string", "be", "easy", "Boto", "NUMBER", "s", "NUMBER", "Object", "mybucket", "hello", "NUMBER", "txt", "NUMBER", "put", "Body", "open", "tmp", "hello", "NUMBER", "txt", "rb", "So", "I", "tried", "use", "a", "stream", "rather", "than", "a", "file", "as", "in", "the", "example", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "with", "contextlib", "NUMBER", "closing", "request", "NUMBER", "get", "url", "stream", "True", "as", "r", "s", "NUMBER", "Object", "bucket", "key", "NUMBER", "put", "Body", "r", "NUMBER", "raw", "It", "do", "not", "actually", "work", "because", "the", "library", "attempts", "to", "seek", "on", "the", "stream", "which", "it", "obviously", "can", "t", "Traceback", "most", "recent", "call", "last", "File", "boto", "NUMBER", "_put", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "put_object", "Bucket", "bucket", "Key", "key", "Body", "r", "NUMBER", "raw", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "request_signer", "self", "NUMBER", "_request_signer", "context", "request_context", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit_until_response", "responses", "self", "NUMBER", "_emit", "event_name", "kwargs", "stop_on_response", "True", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "_kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "handlers", "NUMBER", "py", "line", "NUMBER", "in", "conditionally_calculate_md", "NUMBER", "calculate_md", "NUMBER", "params", "_kwargs", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "handlers", "NUMBER", "py", "line", "NUMBER", "in", "calculate_md", "NUMBER", "binary_md", "NUMBER", "_calculate_md", "NUMBER", "_from_file", "body", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "handlers", "NUMBER", "py", "line", "NUMBER", "in", "_calculate_md", "NUMBER", "_from_file", "fileobj", "NUMBER", "seek", "start_position", "io", "NUMBER", "UnsupportedOperation", "seek", "So", "we", "do", "not", "have", "the", "ability", "to", "stream", "from", "unseekable", "streams", "NUMBER", "I", "be", "not", "sure", "if", "handle", "unseekablee", "streams", "in", "PutObject", "would", "be", "something", "we", "would", "want", "to", "support", "NUMBER", "This", "would", "be", "much", "better", "to", "have", "support", "for", "seekable", "and", "nonseekable", "file", "in", "the", "upload_file", "method", "on", "the", "transfer", "manager", "LINK", "One", "action", "item", "we", "can", "do", "though", "be", "clean", "up", "the", "error", "message", "NUMBER", "Ideally", "we", "bubble", "it", "up", "past", "all", "of", "the", "handlers", "and", "would", "be", "similar", "to", "this", "logic", "LINK", "L", "NUMBER", "I", "m", "all", "for", "clearer", "error", "message", "but", "in", "this", "case", "it", "was", "the", "documentation", "which", "stated", "Storing", "data", "from", "a", "file", "stream", "or", "string", "be", "easy", "It", "would", "be", "nice", "as", "a", "user", "if", "the", "API", "accepted", "a", "stream", "so", "that", "I", "can", "stream", "large", "file", "from", "remote", "servers", "directly", "into", "S", "NUMBER", "But", "if", "it", "s", "necessary", "to", "have", "the", "entire", "file", "in", "hand", "before", "upload", "to", "S", "NUMBER", "that", "s", "workable", "as", "well", "as", "longer", "as", "it", "s", "clear", "that", "s", "what", "s", "expected", "NUMBER", "I", "d", "second", "this", "ticket", "NUMBER", "In", "fact", "I", "had", "write", "the", "exact", "same", "code", "as", "dadkins", "starting", "from", "the", "same", "doc", "based", "assumption", "NUMBER", "Having", "the", "ability", "to", "pipe", "streams", "directly", "into", "s", "NUMBER", "would", "be", "really", "nice", "given", "that", "we", "already", "have", "the", "ability", "to", "give", "file", "handlers", "as", "the", "Body", "argument", "NUMBER", "Just", "sample", "code", "test", "with", "subprocess", "NUMBER", "Popen", "mysqldump", "u", "dbuser", "p", "dbpass", "add", "drop", "table", "db", "bzip", "NUMBER", "stdout", "subprocess", "NUMBER", "PIPE", "shell", "True", "NUMBER", "dout", "as", "dataStream", "s", "NUMBER", "upload_fileobj", "dataStream", "config", "NUMBER", "get", "amazon", "bucket", "mysql_", "db", "_", "date", "NUMBER", "bz", "NUMBER", "May", "be", "someone", "can", "improve", "it", "NUMBER", "kyleknap", "NUMBER", "Thanks", "for", "clarifying", "things", "NUMBER", "But", "if", "I", "use", "upload_fileobj", "to", "upload", "a", "stream", "do", "I", "loose", "the", "ability", "to", "use", "server", "side", "encryption", "Any", "way", "around", "this", "Thanks", "Hi", "I", "want", "to", "receive", "the", "actual", "NumberOfLaunchConfigurations", "and", "the", "documentacion", "I", "find", "this", "describe_account_limits", "Describes", "the", "current", "Auto", "Scaling", "resource", "limits", "for", "your", "AWS", "account", "NUMBER", "For", "information", "about", "request", "an", "increase", "in", "these", "limits", "see", "AWS", "Service", "Limits", "in", "the", "Amazon", "Web", "Services", "General", "Reference", "NUMBER", "Request", "Syntax", "response", "client", "NUMBER", "describe_account_limits", "Return", "type", "dict", "Returns", "Response", "Syntax", "MaxNumberOfAutoScalingGroups", "NUMBER", "MaxNumberOfLaunchConfigurations", "NUMBER", "NumberOfAutoScalingGroups", "NUMBER", "NumberOfLaunchConfigurations", "NUMBER", "But", "when", "I", "only", "received", "MaxNumberOfAutoScalingGroups", "and", "MaxNumberOfLaunchConfigurations", "NUMBER", "My", "code", "NUMBER", "import", "boto", "NUMBER", "NUMBER", "NUMBER", "conection_lc", "boto", "NUMBER", "session", "NUMBER", "Session", "region_name", "eu", "west", "NUMBER", "NUMBER", "client_launch_configuration", "conection_lc", "NUMBER", "client", "autoscaling", "NUMBER", "region_name", "eu", "west", "NUMBER", "NUMBER", "response", "client_launch_configuration", "NUMBER", "describe_account_limits", "NUMBER", "print", "response", "Result", "u", "MaxNumberOfLaunchConfigurations", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "afc", "NUMBER", "cb", "dacc", "NUMBER", "e", "NUMBER", "b", "NUMBER", "cd", "cf", "NUMBER", "bda", "NUMBER", "fae", "u", "MaxNumberOfAutoScalingGroups", "NUMBER", "thanks", "Not", "sure", "about", "this", "NUMBER", "When", "I", "try", "this", "API", "call", "I", "get", "all", "NUMBER", "values", "back", "NUMBER", "The", "next", "thing", "to", "see", "be", "if", "the", "service", "be", "just", "not", "returning", "that", "data", "NUMBER", "In", "that", "case", "there", "s", "not", "really", "anything", "boto", "NUMBER", "can", "do", "about", "it", "since", "the", "service", "isn", "t", "returning", "us", "that", "data", "NUMBER", "Can", "you", "run", "this", "code", "and", "show", "us", "the", "raw", "XML", "response", "that", "comes", "back", "import", "boto", "NUMBER", "boto", "NUMBER", "set_stream_logger", "client_launch_configuration", "conection_lc", "NUMBER", "client", "autoscaling", "eu", "west", "NUMBER", "client_launch_configuration", "NUMBER", "describe_account_limits", "I", "received", "this", "TAG", "TAG", "TAG", "Sender", "TAG", "TAG", "Throttling", "TAG", "TAG", "Rate", "exceeded", "TAG", "That", "error", "message", "suggests", "you", "re", "get", "throttled", "NUMBER", "Boto", "NUMBER", "will", "automatically", "retry", "this", "NUMBER", "In", "this", "case", "boto", "NUMBER", "should", "have", "raise", "an", "exception", "if", "it", "wasn", "t", "able", "to", "be", "retried", "NUMBER", "Could", "you", "post", "the", "entire", "debug", "log", "contents", "yes", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "DEBUG", "Looking", "for", "credentials", "via", "shared", "credentials", "file", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "credentials", "INFO", "Found", "credentials", "in", "shared", "credentials", "file", "NUMBER", "aws", "credentials", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "client", "DEBUG", "Registering", "retry", "handlers", "for", "service", "autoscaling", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "creating", "client", "class", "NUMBER", "autoscaling", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Setting", "autoscaling", "timeout", "as", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "TAG", "verify_ssl", "True", "with", "params", "body", "Action", "u", "DescribeAccountLimits", "Version", "u", "NUMBER", "NUMBER", "NUMBER", "url", "u", "LINK", "west", "NUMBER", "amazonaws", "NUMBER", "com", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Darwin", "NUMBER", "Botocore", "NUMBER", "query_string", "url_path", "method", "u", "POST", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "autoscaling", "NUMBER", "DescribeAccountLimits", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "POST", "host", "autoscaling", "NUMBER", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "user", "agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Darwin", "NUMBER", "Botocore", "NUMBER", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "host", "user", "agent", "x", "amz", "date", "NUMBER", "b", "NUMBER", "ecfa", "NUMBER", "cb", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "bfcba", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "eu", "west", "NUMBER", "autoscaling", "aws", "NUMBER", "_request", "NUMBER", "cd", "NUMBER", "acd", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fbc", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "fb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "d", "NUMBER", "aee", "NUMBER", "c", "NUMBER", "a", "NUMBER", "efc", "NUMBER", "fef", "NUMBER", "dac", "NUMBER", "fa", "NUMBER", "af", "NUMBER", "f", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "cfb", "NUMBER", "d", "NUMBER", "afa", "NUMBER", "ef", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTPS", "connection", "NUMBER", "autoscaling", "NUMBER", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "POST", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "x", "amzn", "requestid", "NUMBER", "ab", "NUMBER", "dbf", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "NUMBER", "ae", "NUMBER", "date", "Thu", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "length", "NUMBER", "content", "type", "text", "xml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "TAG", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "TAG", "NUMBER", "ab", "NUMBER", "dbf", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "NUMBER", "ae", "NUMBER", "TAG", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "autoscaling", "NUMBER", "DescribeAccountLimits", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "TAG", "verify_ssl", "True", "with", "params", "body", "Action", "u", "DescribeLaunchConfigurations", "Version", "u", "NUMBER", "NUMBER", "NUMBER", "url", "u", "LINK", "west", "NUMBER", "amazonaws", "NUMBER", "com", "headers", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Darwin", "NUMBER", "Botocore", "NUMBER", "query_string", "url_path", "method", "u", "POST", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "autoscaling", "NUMBER", "DescribeLaunchConfigurations", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "POST", "host", "autoscaling", "NUMBER", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "user", "agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Darwin", "NUMBER", "Botocore", "NUMBER", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "host", "user", "agent", "x", "amz", "date", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cedec", "NUMBER", "fa", "NUMBER", "ca", "NUMBER", "bda", "NUMBER", "e", "NUMBER", "ffa", "NUMBER", "f", "NUMBER", "eac", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "eu", "west", "NUMBER", "autoscaling", "aws", "NUMBER", "_request", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "NUMBER", "efd", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "eff", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "NUMBER", "f", "NUMBER", "da", "NUMBER", "df", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "af", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "cb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "POST", "HTTP", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "x", "amzn", "requestid", "NUMBER", "cb", "NUMBER", "b", "dbf", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "cd", "NUMBER", "e", "date", "Thu", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "length", "NUMBER", "content", "type", "text", "xml", "Hi", "Problem", "resolve", "I", "have", "update", "the", "boto", "version", "and", "XML", "NUMBER", "Now", "works", "fine", "NUMBER", "Closed", "issue", "NUMBER", "Great", "to", "hear", "that", "be", "now", "work", "NUMBER", "This", "was", "cause", "the", "transfer", "download", "feature", "failure", "when", "downloading", "big", "file", "from", "a", "RequestPayer", "requester", "bucket", "NUMBER", "shipit", "boat", "shipit", "Hello", "I", "think", "the", "documentation", "about", "create_hosted_zone", "LINK", "Route", "NUMBER", "Client", "NUMBER", "create_hosted_zone", "be", "wrong", "because", "if", "I", "set", "the", "attribute", "PrivateZone", "the", "request", "be", "fail", "and", "according", "to", "AWS", "API", "LINK", "create", "hosted", "zone", "private", "NUMBER", "html", "you", "don", "t", "need", "it", "NUMBER", "Steps", "to", "reproduce", "with", "PrivateZone", "True", "python", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "profile_name", "default", "route", "NUMBER", "session", "NUMBER", "client", "route", "NUMBER", "route", "NUMBER", "create_hosted_zone", "Name", "my", "domain", "VPC", "VPCRegion", "my", "region", "VPCId", "my", "vpc", "CallerReference", "random_string", "HostedZoneConfig", "Comment", "string", "PrivateZone", "True", "response", "python", "ClientError", "An", "error", "occur", "InvalidInput", "when", "calling", "the", "CreateHostedZone", "operation", "Invalid", "XML", "cvc", "complex", "type", "NUMBER", "d", "Invalid", "content", "was", "find", "starting", "with", "element", "PrivateZone", "NUMBER", "No", "child", "element", "be", "expected", "at", "this", "point", "NUMBER", "without", "PrivateZone", "python", "route", "NUMBER", "create_hosted_zone", "Name", "my", "domain", "VPC", "VPCRegion", "my", "region", "VPCId", "my", "vpc", "CallerReference", "random_string", "HostedZoneConfig", "Comment", "string", "response", "python", "u", "ChangeInfo", "u", "Id", "change", "C", "NUMBER", "PDIAYEQ", "NUMBER", "D", "NUMBER", "W", "u", "Status", "PENDING", "u", "SubmittedAt", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzutc", "u", "HostedZone", "u", "CallerReference", "random_string", "u", "Config", "u", "Comment", "string", "u", "PrivateZone", "True", "u", "Id", "NUMBER", "The", "same", "works", "for", "a", "public", "domain", "as", "well", "python", "route", "NUMBER", "create_hosted_zone", "Name", "my", "domain", "CallerReference", "random_string", "NUMBER", "HostedZoneConfig", "Comment", "string", "response", "python", "u", "ChangeInfo", "u", "Id", "change", "C", "NUMBER", "KAEFU", "NUMBER", "HILHG", "NUMBER", "u", "Status", "PENDING", "u", "SubmittedAt", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzutc", "u", "DelegationSet", "u", "NameServers", "ns", "NUMBER", "awsdns", "NUMBER", "com", "ns", "NUMBER", "awsdns", "NUMBER", "net", "ns", "NUMBER", "awsdns", "NUMBER", "org", "ns", "NUMBER", "awsdns", "NUMBER", "co", "NUMBER", "uk", "u", "HostedZone", "u", "CallerReference", "random_string", "NUMBER", "u", "Config", "u", "Comment", "string", "u", "PrivateZone", "False", "u", "Id", "NUMBER", "while", "be", "fail", "setting", "PrivateZone", "False", "NUMBER", "Info", "Boto", "version", "NUMBER", "Python", "version", "Python", "NUMBER", "This", "be", "definitely", "a", "big", "issue", "I", "ll", "make", "sure", "we", "follow", "up", "with", "the", "service", "team", "to", "see", "what", "s", "going", "on", "here", "if", "our", "XML", "looks", "good", "NUMBER", "Thanks", "for", "report", "and", "double", "thanks", "for", "having", "such", "great", "detail", "clap", "Need", "to", "get", "the", "build", "times", "down", "first", "NUMBER", "LINK", "config", "NUMBER", "html", "boat", "I", "m", "use", "the", "following", "logic", "to", "pull", "content", "from", "a", "list", "and", "insert", "it", "into", "DynamoDB", "dynamodb", "boto", "NUMBER", "resource", "dynamodb", "keys_table", "dynamodb", "NUMBER", "Table", "my", "dynamodb", "table", "with", "keys_table", "NUMBER", "batch_writer", "as", "batch", "for", "key", "in", "objects", "tmp_id", "batch", "NUMBER", "put_item", "Item", "cluster", "cluster", "tmp_id", "tmp_id", "manifest", "manifest_key", "key", "key", "timestamp", "timestamp", "It", "appears", "to", "periodically", "append", "more", "than", "the", "NUMBER", "item", "limit", "to", "the", "batch", "and", "thus", "fail", "with", "the", "following", "error", "File", "Library", "Python", "NUMBER", "site", "package", "boto", "NUMBER", "dynamodb", "table", "NUMBER", "py", "line", "NUMBER", "in", "__exit__", "self", "NUMBER", "_flush", "File", "Library", "Python", "NUMBER", "site", "package", "boto", "NUMBER", "dynamodb", "table", "NUMBER", "py", "line", "NUMBER", "in", "_flush", "RequestItems", "self", "NUMBER", "_table_name", "self", "NUMBER", "_items_buffer", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "api_params", "operation_model", "context", "request_context", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_convert_to_request_dict", "api_params", "operation_model", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "validate", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "raise", "ParamValidationError", "report", "report", "NUMBER", "generate_report", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Invalid", "length", "for", "parameter", "RequestItems", "NUMBER", "my", "dynamodb", "table", "value", "NUMBER", "valid", "range", "NUMBER", "NUMBER", "Package", "version", "Python", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "I", "ve", "upgrade", "to", "the", "latest", "version", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "And", "I", "m", "still", "seeing", "the", "following", "error", "Traceback", "most", "recent", "call", "last", "File", "recreateManifests", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "main", "File", "recreateManifests", "NUMBER", "py", "line", "NUMBER", "in", "main", "generateManifest", "cluster", "gameId", "File", "recreateManifests", "NUMBER", "py", "line", "NUMBER", "in", "generateManifest", "pass", "File", "Library", "Python", "NUMBER", "site", "package", "boto", "NUMBER", "dynamodb", "table", "NUMBER", "py", "line", "NUMBER", "in", "__exit__", "self", "NUMBER", "_flush", "File", "Library", "Python", "NUMBER", "site", "package", "boto", "NUMBER", "dynamodb", "table", "NUMBER", "py", "line", "NUMBER", "in", "_flush", "RequestItems", "self", "NUMBER", "_table_name", "self", "NUMBER", "_items_buffer", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "ValidationException", "when", "calling", "the", "BatchWriteItem", "operation", "NUMBER", "validation", "error", "detected", "Value", "my", "dynamodb", "table", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "caad", "NUMBER", "cb", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "e", "NUMBER", "e", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "cf", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "c", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ca", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ab", "NUMBER", "e", "NUMBER", "fa", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "be", "NUMBER", "c", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "e", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "c", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "cc", "NUMBER", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ab", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "a", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "d", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "e", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "a", "NUMBER", "c", "NUMBER", "caa", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "cf", "NUMBER", "ac", "NUMBER", "d", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "f", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "b", "NUMBER", "ad", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "f", "NUMBER", "fa", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "a", "NUMBER", "b", "NUMBER", "a", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "bda", "NUMBER", "b", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "bb", "NUMBER", "eb", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "e", "NUMBER", "e", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "fb", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ffe", "NUMBER", "b", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "b", "NUMBER", "d", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ba", "NUMBER", "ad", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "d", "NUMBER", "cd", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "a", "NUMBER", "aa", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "f", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "b", "NUMBER", "c", "NUMBER", "adb", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "f", "NUMBER", "b", "NUMBER", "cf", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "e", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "cb", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "a", "NUMBER", "c", "NUMBER", "e", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "c", "NUMBER", "cc", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "dfb", "NUMBER", "fef", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "cc", "NUMBER", "ac", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "eecdfac", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "bda", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "bb", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "b", "NUMBER", "a", "NUMBER", "bde", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ce", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "aef", "NUMBER", "e", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "dd", "NUMBER", "befd", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "b", "NUMBER", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "de", "NUMBER", "ae", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "a", "NUMBER", "fc", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "baede", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "e", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ac", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "bf", "NUMBER", "cb", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "b", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "f", "NUMBER", "ce", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "d", "NUMBER", "e", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "f", "NUMBER", "e", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ec", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "d", "NUMBER", "e", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "d", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "da", "NUMBER", "bb", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "e", "NUMBER", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "bd", "NUMBER", "ef", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "bf", "NUMBER", "f", "NUMBER", "f", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ee", "NUMBER", "d", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ea", "NUMBER", "bd", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ad", "NUMBER", "c", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "a", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "c", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "fbf", "NUMBER", "db", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "faa", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "a", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "e", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "d", "NUMBER", "e", "NUMBER", "d", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "a", "NUMBER", "d", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "f", "NUMBER", "dd", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "c", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "d", "NUMBER", "fc", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "ec", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "eadbdea", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "b", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "c", "NUMBER", "da", "NUMBER", "f", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "NUMBER", "bc", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "bd", "NUMBER", "df", "NUMBER", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "e", "NUMBER", "af", "NUMBER", "a", "com", "NUMBER", "amazonaws", "NUMBER", "dynamodb", "NUMBER", "v", "NUMBER", "WriteRequest", "ca", "NUMBER", "fa", "NUMBER", "c", "at", "requestItems", "fail", "to", "satisfy", "constraint", "Map", "value", "must", "satisfy", "constraint", "Member", "must", "have", "length", "less", "than", "or", "equal", "to", "NUMBER", "Member", "must", "have", "length", "greater", "than", "or", "equal", "to", "NUMBER", "Thanks", "for", "the", "report", "We", "ll", "take", "a", "look", "NUMBER", "I", "don", "t", "know", "if", "that", "might", "be", "include", "in", "the", "fix", "but", "I", "faced", "this", "issue", "when", "work", "a", "heavily", "loaded", "environment", "NUMBER", "In", "addition", "sending", "more", "than", "NUMBER", "operations", "in", "the", "batch", "I", "also", "notice", "that", "at", "some", "point", "DynamoDB", "was", "refusing", "the", "batch", "with", "ProvisionedThroughputExceededException", "NUMBER", "While", "this", "might", "be", "the", "responsibility", "of", "the", "caller", "during", "put_item", "it", "might", "be", "tricky", "for", "the", "call", "to", "deal", "with", "the", "error", "during", "the", "final", "flush", "which", "be", "performed", "in", "__exit__", "Does", "it", "makes", "sense", "to", "catch", "the", "ClientError", "with", "the", "error", "code", "ProvisionedThroughputExceededException", "and", "consider", "it", "as", "_no", "element", "has", "be", "flushed_", "shipit", "If", "any", "error", "happen", "while", "processing", "IO", "including", "error", "open", "the", "destination", "file", "we", "should", "shutdown", "the", "IO", "queue", "NUMBER", "As", "part", "of", "this", "change", "I", "add", "an", "integration", "test", "NUMBER", "This", "also", "demonstrated", "an", "issue", "with", "python", "NUMBER", "retrying", "socket", "NUMBER", "error", "because", "they", "re", "now", "aliased", "to", "OSErrors", "NUMBER", "I", "update", "the", "compat", "module", "to", "give", "us", "the", "appropriate", "something", "went", "wrong", "on", "the", "socket", "exception", "based", "on", "python", "version", "NUMBER", "Fixes", "NUMBER", "cc", "kyleknap", "mtdowling", "rayluo", "JordonPhillips", "Nice", "I", "wonder", "if", "NUMBER", "to", "NUMBER", "do", "this", "conversion", "Either", "way", "boat", "cc", "kyleknap", "mtdowling", "rayluo", "JordonPhillips", "ship", "boat", "Hey", "I", "m", "trying", "to", "send", "a", "JSON", "message", "to", "a", "SNS", "topic", "that", "several", "SQS", "queues", "subscribe", "to", "NUMBER", "However", "it", "keep", "fail", "to", "parse", "my", "simple", "JSON", "message", "and", "revert", "to", "the", "default", "value", "mess", "default", "default", "this", "that", "jmess", "json", "NUMBER", "JSONEncoder", "NUMBER", "encode", "mess", "response", "self", "NUMBER", "boto_client", "NUMBER", "publish", "TopicArn", "self", "NUMBER", "TopicArn", "MessageStructure", "json", "Message", "jmess", "I", "have", "also", "tried", "with", "json", "NUMBER", "dumps", "to", "no", "avail", "NUMBER", "It", "be", "not", "throw", "an", "exception", "but", "simply", "add", "a", "tag", "to", "the", "message", "_jsonparsefailure", "NUMBER", "I", "be", "use", "version", "NUMBER", "This", "seems", "very", "trivial", "I", "keep", "thinking", "I", "must", "be", "make", "a", "mistake", "but", "I", "ve", "tried", "about", "every", "JSON", "format", "I", "know", "and", "I", "keep", "get", "the", "same", "result", "NUMBER", "Any", "help", "would", "be", "great", "Thanks", "LINK", "EC", "NUMBER", "Client", "NUMBER", "describe_nat_gateways", "Most", "other", "function", "use", "Filters", "while", "this", "function", "seems", "to", "use", "Filter", "NUMBER", "Attempting", "to", "run", "ECS", "NUMBER", "client", "NUMBER", "create_service", "without", "a", "load", "balancer", "NUMBER", "Per", "the", "documentation", "loadBalancers", "parameter", "be", "not", "required", "LINK", "ECS", "NUMBER", "Client", "NUMBER", "create_service", "When", "executed", "via", "boto", "NUMBER", "I", "m", "seeing", "the", "following", "error", "Error", "code", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidParameterException", "when", "calling", "the", "CreateService", "operation", "A", "role", "was", "pass", "but", "no", "load", "balancers", "were", "present", "NUMBER", "The", "aws_cli", "tool", "do", "not", "require", "the", "loadBalancers", "parameter", "NUMBER", "Removing", "role", "fix", "the", "issue", "NUMBER", "It", "appears", "that", "there", "be", "some", "confusion", "on", "whether", "add", "a", "role", "param", "means", "that", "loadBalancers", "param", "be", "required", "LINK", "ECS", "NUMBER", "Client", "NUMBER", "create_service", "role", "NUMBER", "This", "parameter", "be", "only", "required", "if", "you", "be", "use", "a", "load", "balancer", "with", "your", "service", "NUMBER", "As", "stated", "before", "role", "can", "be", "use", "with", "the", "aws_cli", "tool", "without", "requiring", "loadBalancers", "NUMBER", "Looking", "at", "my", "history", "I", "stand", "correct", "my", "work", "cli", "line", "did", "not", "have", "role", "include", "_aws", "ecs", "create", "service", "cluster", "default", "service", "name", "clouddb", "task", "definition", "clouddb", "NUMBER", "desired", "count", "NUMBER", "_", "I", "would", "say", "that", "the", "requirement", "left", "room", "for", "interpretation", "LINK", "ECS", "NUMBER", "Client", "NUMBER", "create_service", "Role", "_", "NUMBER", "This", "parameter", "be", "only", "required", "if", "you", "be", "use", "a", "load", "balancer", "with", "your", "service", "NUMBER", "_", "Per", "the", "above", "line", "the", "role", "parameter", "be", "required", "if", "use", "a", "load", "balancer", "but", "lacks", "explicit", "information", "that", "role", "will", "be", "rejected", "if", "no", "load", "balancer", "param", "exist", "NUMBER", "The", "requirement", "for", "the", "loadBalancers", "parameter", "also", "lacks", "any", "information", "that", "the", "role", "param", "be", "required", "if", "use", "a", "load", "balancer", "NUMBER", "Over", "all", "these", "be", "just", "recommendations", "for", "the", "documentation", "NUMBER", "Use", "Case", "Hind", "sight", "I", "don", "t", "like", "my", "use", "case", "but", "I", "was", "going", "to", "use", "AWS", "to", "save", "the", "role", "info", "that", "will", "be", "use", "at", "a", "later", "date", "when", "add", "an", "ELB", "NUMBER", "I", "now", "understand", "that", "it", "s", "a", "requirement", "to", "add", "the", "role", "param", "when", "add", "the", "load", "balancers", "param", "NUMBER", "Have", "exactly", "the", "same", "issue", "with", "a", "Terraform", "template", "resource", "aws_ecs_service", "sample", "name", "sample", "service", "var", "NUMBER", "env_name", "cluster", "aws_ecs_cluster", "NUMBER", "sample_cluster", "NUMBER", "id", "task_definition", "aws_ecs_task_definition", "NUMBER", "sample", "NUMBER", "_task", "NUMBER", "arn", "desired_count", "NUMBER", "iam_role", "aws_iam_role", "NUMBER", "sample_ecs_role", "NUMBER", "name", "Removing", "iam_role", "fix", "this", "if", "you", "don", "t", "want", "to", "associate", "ELB", "ALB", "with", "container", "NUMBER", "I", "get", "the", "exact", "same", "issue", "in", "similar", "terraform", "template", "but", "we", "do", "need", "iam", "role", "to", "be", "set", "NUMBER", "The", "problem", "has", "be", "report", "at", "LINK", "UPDATES", "The", "iam", "role", "should", "be", "assigned", "in", "resource", "aws_ecs_task_definition", "with", "argument", "task_role_arn", "NUMBER", "So", "if", "no", "load", "balancer", "be", "required", "no", "need", "set", "iam_role", "in", "resource", "aws_ecs_service", "boat", "The", "Tag", "resource", "was", "incorrectly", "modeled", "such", "that", "it", "be", "not", "a", "collection", "on", "an", "Instance", "NUMBER", "As", "a", "result", "there", "be", "no", "way", "to", "batch", "delete", "tags", "from", "an", "Instance", "resource", "NUMBER", "This", "add", "that", "functionality", "in", "in", "a", "way", "that", "won", "t", "break", "on", "future", "EC", "NUMBER", "resource", "change", "NUMBER", "In", "the", "long", "term", "there", "be", "plan", "to", "codify", "SDK", "specific", "customizations", "while", "maintaining", "a", "canonically", "correct", "resource", "model", "but", "that", "will", "sometime", "in", "the", "future", "as", "part", "of", "a", "different", "story", "NUMBER", "Fixes", "NUMBER", "cc", "kyleknap", "jamesls", "mtdowling", "rayluo", "Amazing", "NUMBER", "Code", "wise", "the", "actual", "delete_tags", "method", "add", "looks", "good", "NUMBER", "I", "would", "like", "to", "see", "a", "functional", "test", "add", "possibly", "with", "the", "new", "stubbing", "stuff", "NUMBER", "So", "pending", "add", "test", "work", "with", "kyleknap", "to", "work", "out", "how", "to", "best", "handle", "documentation", "for", "this", "this", "gets", "a", "shipit", "from", "me", "NUMBER", "Changes", "Added", "lots", "of", "test", "change", "the", "docs", "to", "be", "lazy", "loaded", "thus", "remove", "the", "extra", "event", "moved", "custom", "methods", "into", "the", "Action", "section", "as", "they", "should", "be", "fix", "some", "old", "test", "Abstracted", "out", "a", "CustomModeledAction", "which", "allows", "me", "to", "pass", "in", "an", "emitter", "when", "registering", "the", "event", "and", "makes", "it", "easier", "for", "such", "things", "to", "be", "add", "in", "the", "future", "NUMBER", "Updates", "Added", "the", "ability", "to", "inject", "kwargs", "into", "a", "lazy", "call", "so", "that", "it", "can", "be", "use", "NUMBER", "Get", "the", "resource", "name", "from", "the", "event", "name", "and", "remove", "it", "from", "the", "event", "NUMBER", "Following", "the", "Quickstart", "in", "the", "docs", "and", "be", "unable", "to", "authenticate", "use", "my", "NUMBER", "aws", "credentials", "file", "aws", "cli", "commands", "work", "OK", "python", "import", "boto", "NUMBER", "for", "bucket", "in", "boto", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "buckets", "NUMBER", "all", "NUMBER", "print", "bucket", "NUMBER", "name", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "Library", "Python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "collection", "NUMBER", "py", "line", "NUMBER", "in", "__iter__", "for", "page", "in", "self", "NUMBER", "pages", "File", "Library", "Python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "collection", "NUMBER", "py", "line", "NUMBER", "in", "pages", "pages", "getattr", "client", "self", "NUMBER", "_py_operation_name", "params", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "self", "NUMBER", "create_request", "request_dict", "operation_model", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "create_request", "operation_name", "operation_model", "NUMBER", "name", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "handler", "return", "self", "NUMBER", "sign", "operation_name", "request", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "signers", "NUMBER", "py", "line", "NUMBER", "in", "sign", "signer", "NUMBER", "add_auth", "request", "request", "File", "Library", "Python", "NUMBER", "site", "package", "botocore", "auth", "NUMBER", "py", "line", "NUMBER", "in", "add_auth", "raise", "NoCredentialsError", "botocore", "NUMBER", "exception", "NUMBER", "NoCredentialsError", "Unable", "to", "locate", "credentials", "kyleknap", "Here", "be", "the", "output", "from", "configure", "list", "aws", "configure", "list", "Name", "Value", "Type", "Location", "profile", "TAG", "None", "None", "access_key", "TAG", "None", "None", "secret_key", "TAG", "None", "None", "region", "us", "east", "NUMBER", "config", "file", "NUMBER", "aws", "config", "This", "belies", "the", "configuration", "file", "that", "aws", "configure", "write", "in", "the", "NUMBER", "aws", "folder", "it", "created", "which", "include", "a", "named", "profile", "and", "its", "access", "secret", "keys", "NUMBER", "Apparently", "I", "have", "a", "botched", "aws", "config", "As", "far", "as", "I", "know", "I", "m", "use", "boto", "NUMBER", "OS", "X", "El", "Capitan", "NUMBER", "I", "had", "boto", "install", "then", "uninstalled", "it", "and", "install", "boto", "NUMBER", "so", "presumably", "pip", "did", "the", "right", "thing", "sudo", "pip", "uninstall", "boto", "sudo", "pip", "install", "boto", "NUMBER", "sudo", "pip", "install", "boto", "NUMBER", "ignore", "install", "six", "OK", "I", "re", "run", "aws", "configure", "and", "copy", "pasted", "the", "values", "from", "the", "file", "that", "were", "in", "NUMBER", "aws", "config", "credentials", "and", "now", "I", "ve", "get", "aws", "configure", "list", "Name", "Value", "Type", "Location", "profile", "TAG", "None", "None", "access_key", "EQPQ", "shared", "credentials", "file", "secret_key", "J", "NUMBER", "U", "NUMBER", "shared", "credentials", "file", "region", "us", "east", "NUMBER", "config", "file", "NUMBER", "aws", "config", "Retrying", "the", "boto", "NUMBER", "quickstart", "gives", "me", "a", "list", "of", "buckets", "NUMBER", "Thanks", "Case", "close", "NUMBER", "I", "have", "a", "similar", "issue", "but", "I", "m", "able", "to", "print", "bucket", "names", "from", "a", "python", "django", "shell", "NUMBER", "Running", "aws", "configure", "list", "looks", "good", "when", "I", "do", "it", "but", "my", "code", "fail", "when", "trying", "to", "use", "methods", "like", "generate_presigned_url", "in", "my", "views", "NUMBER", "Any", "suggestions", "I", "have", "a", "similar", "issue", "too", "NUMBER", "The", "default", "profile", "for", "boto", "to", "use", "be", "an", "IAM", "profile", "NUMBER", "Now", "I", "need", "to", "add", "an", "additional", "non", "default", "profile", "NUMBER", "However", "boto", "NUMBER", "botocore", "only", "pickup", "the", "NUMBER", "aws", "credentials", "if", "both", "a", "default", "and", "other_profile", "be", "defined", "NUMBER", "How", "do", "I", "not", "specify", "a", "default", "profile", "and", "have", "an", "IAM", "profile", "be", "default", "while", "also", "specify", "other", "other_profile", "NUMBER", "in", "the", "credentials", "file", "I", "have", "the", "same", "situation", "on", "boto", "NUMBER", "with", "my", "default", "profile", "in", "the", "config", "and", "credentials", "file", "be", "a", "IAM", "user", "NUMBER", "AWS", "CLI", "works", "fine", "but", "the", "boto", "NUMBER", "py", "API", "in", "python", "NUMBER", "boto", "NUMBER", "NUMBER", "py", "NUMBER", "py", "NUMBER", "none", "any", "NUMBER", "whl", "do", "not", "and", "seems", "to", "not", "read", "the", "config", "and", "credentials", "which", "be", "stored", "at", "the", "default", "locations", "NUMBER", "Scratch", "my", "previous", "comment", "NUMBER", "I", "was", "work", "in", "a", "stale", "terminal", "from", "which", "I", "install", "AWS", "in", "NUMBER", "New", "terminal", "and", "all", "be", "good", "NUMBER", "I", "be", "having", "similar", "issue", "NUMBER", "my", "aws", "configure", "list", "command", "shows", "everything", "correct", "but", "on", "aws", "ec", "NUMBER", "instance", "on", "the", "very", "first", "line", "python", "script", "boto", "NUMBER", "client", "cloudformation", "failes", "with", "No", "Region", "Error", "NUMBER", "Turn", "out", "when", "run", "the", "pythin", "with", "sudo", "user", "gives", "this", "but", "with", "sudo", "works", "fines", "Could", "be", "an", "issue", "with", "adminuser", "vice", "default", "NUMBER", "My", "credentials", "file", "has", "two", "sections", "adminuser", "NUMBER", "default", "NUMBER", "________________________________", "From", "rest", "NUMBER", "TAG", "Sent", "Sunday", "March", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "To", "boto", "boto", "NUMBER", "Cc", "Subscribed", "Subject", "Re", "boto", "boto", "NUMBER", "Boto", "do", "not", "recognize", "NUMBER", "aws", "credentials", "NUMBER", "I", "be", "having", "similar", "issue", "NUMBER", "my", "aws", "configure", "list", "command", "shows", "everything", "correct", "but", "on", "aws", "ec", "NUMBER", "instance", "on", "the", "very", "first", "line", "python", "script", "boto", "NUMBER", "client", "cloudformation", "failes", "with", "No", "Region", "Error", "NUMBER", "Turn", "out", "when", "run", "the", "pythin", "with", "sudo", "user", "gives", "this", "but", "with", "sudo", "works", "fines", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "weird", "in", "my", "case", "Had", "python", "boto", "NUMBER", "setup_default_session", "profile_name", "aws", "federated", "boto", "NUMBER", "setup_default_session", "region_name", "us", "west", "NUMBER", "had", "to", "remove", "region", "part", "and", "it", "works", "python", "boto", "NUMBER", "setup_default_session", "profile_name", "aws", "federated", "boto", "NUMBER", "setup_default_session", "region_name", "us", "west", "NUMBER", "Using", "Boto", "NUMBER", "NUMBER", "while", "use", "the", "api", "client", "NUMBER", "create_export_task", "giving", "a", "syntax", "error", "client", "boto", "NUMBER", "client", "logs", "response", "client", "NUMBER", "create_export_task", "logGroupName", "loggroupname", "to", "NUMBER", "destination", "s", "NUMBER", "_bucket_name", "from", "NUMBER", "SyntaxError", "invalid", "syntax", "Syntax", "error", "point", "to", "from", "NUMBER", "Not", "sure", "what", "I", "be", "miss", "Thanks", "Thanks", "NUMBER", "As", "a", "workaround", "this", "works", "args_config", "args_config", "logGroupName", "loggroupname", "args_config", "from", "NUMBER", "args_config", "to", "NUMBER", "args_config", "destination", "s", "NUMBER", "_bucket_name", "args_config", "destinationPrefix", "loggroupname", "response", "client", "NUMBER", "create_export_task", "args_config", "One", "comment", "but", "otherwise", "ship", "shipit", "For", "some", "reason", "I", "m", "get", "a", "ResourceWarning", "about", "a", "unclosed", "socket", "even", "when", "I", "m", "specifically", "closing", "the", "socket", "myself", "NUMBER", "See", "testcase", "below", "sh", "python", "NUMBER", "munittest", "discover", "python", "NUMBER", "import", "sys", "import", "boto", "NUMBER", "import", "unittest", "BUCKET", "KEY", "def", "give_it_to_me", "client", "boto", "NUMBER", "client", "s", "NUMBER", "obj", "client", "NUMBER", "get_object", "Bucket", "BUCKET", "Key", "KEY", "try", "yield", "from", "iter", "lambda", "obj", "Body", "NUMBER", "read", "NUMBER", "b", "finally", "print", "Im", "closing", "it", "file", "sys", "NUMBER", "derr", "flush", "True", "obj", "Body", "NUMBER", "close", "class", "TestSomeShit", "unittest", "NUMBER", "TestCase", "def", "test_it", "self", "res", "give_it_to_me", "for", "chunk", "in", "res", "pass", "print", "Done", "file", "sys", "NUMBER", "derr", "flush", "True", "Fill", "in", "any", "BUCKET", "and", "KEY", "to", "see", "the", "problem", "NUMBER", "Attaching", "my", "output", "below", "text", "Im", "closing", "it", "test", "NUMBER", "py", "NUMBER", "ResourceWarning", "unclosed", "TAG", "for", "chunk", "in", "res", "Done", "NUMBER", "Ran", "NUMBER", "test", "in", "NUMBER", "s", "OK", "Should", "probably", "mention", "that", "I", "m", "run", "python", "NUMBER", "as", "well", "NUMBER", "to", "be", "specific", "NUMBER", "I", "m", "seeing", "this", "as", "well", "NUMBER", "Enabling", "ResourceWarning", "yields", "a", "lot", "of", "complaints", "relate", "to", "unclosed", "sockets", "NUMBER", "Also", "run", "Python", "NUMBER", "I", "have", "also", "run", "into", "this", "since", "upgrading", "to", "python", "NUMBER", "From", "what", "I", "can", "tell", "it", "s", "something", "to", "with", "connection", "pooling", "NUMBER", "NUMBER", "I", "have", "find", "a", "way", "to", "fix", "the", "warnings", "although", "I", "m", "not", "sure", "it", "s", "the", "correct", "way", "to", "do", "so", "in", "botocore", "awsrequest", "NUMBER", "py", "explicitly", "set", "the", "Connection", "close", "header", "in", "the", "AWSRequest", "class", "diff", "awsrequest", "NUMBER", "py", "NUMBER", "old", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "awsrequest", "NUMBER", "py", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "class", "AWSRequest", "models", "NUMBER", "RequestEncodingM", "del", "kwargs", "auth_path", "models", "NUMBER", "Request", "NUMBER", "__init__", "self", "args", "kwargs", "headers", "HTTPHeaders", "headers", "Connection", "close", "if", "self", "NUMBER", "headers", "be", "not", "None", "for", "key", "value", "in", "self", "NUMBER", "headers", "NUMBER", "items", "headers", "key", "value", "NUMBER", "LINK", "issuecomment", "NUMBER", "I", "be", "also", "experience", "issue", "with", "python", "NUMBER", "Had", "to", "go", "back", "to", "NUMBER", "Make", "sure", "to", "use", "the", "following", "command", "to", "install", "AWS", "cli", "pip", "install", "awscli", "ignore", "install", "six", "Pinging", "this", "thread", "be", "there", "a", "solution", "merge", "somewhere", "please", "NUMBER", "also", "on", "python", "NUMBER", "any", "update", "NUMBER", "seeing", "on", "python", "NUMBER", "NUMBER", "seeing", "on", "python", "NUMBER", "NUMBER", "Still", "an", "issue", "NUMBER", "The", "fix", "given", "by", "Naddiseo", "works", "NUMBER", "NUMBER", "seeing", "on", "python", "NUMBER", "python", "NUMBER", "I", "m", "test", "cognito", "NUMBER", "NUMBER", "boto", "NUMBER", "NUMBER", "python", "NUMBER", "NUMBER", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "Python", "NUMBER", "For", "future", "readers", "NUMBER", "I", "did", "a", "little", "research", "and", "also", "clicked", "the", "link", "in", "the", "above", "discussion", "given", "by", "Naddiseo", "and", "according", "to", "someone", "work", "on", "Requests", "lib", "You", "don", "t", "have", "to", "NUMBER", "The", "warning", "be", "just", "that", "a", "warning", "NUMBER", "No", "error", "occur", "when", "you", "see", "it", "and", "it", "be", "not", "an", "indication", "of", "the", "program", "doing", "the", "wrong", "thing", "NUMBER", "It", "s", "entirely", "expected", "behaviour", "and", "this", "be", "work", "as", "designed", "NUMBER", "However", "if", "you", "re", "concerned", "about", "them", "you", "may", "call", "close", "NUMBER", "LINK", "and", "The", "reason", "the", "resource", "warnings", "be", "back", "be", "because", "we", "re", "much", "better", "about", "not", "returning", "partially", "complete", "connections", "to", "the", "connection", "pool", "NUMBER", "The", "lack", "of", "warnings", "in", "NUMBER", "was", "actually", "symptomatic", "of", "a", "problem", "weirdly", "the", "warnings", "be", "an", "indication", "that", "everything", "be", "work", "as", "intended", "NUMBER", "LINK", "issuecomment", "NUMBER", "So", "looks", "like", "not", "an", "issue", "NUMBER", "Why", "be", "it", "come", "up", "though", "It", "looks", "like", "Python", "be", "supposed", "to", "suppress", "such", "warnings", "by", "default", "NUMBER", "Seems", "like", "somewhere", "around", "NUMBER", "they", "change", "the", "behavior", "of", "unittest", "to", "override", "the", "default", "behavior", "on", "warnings", "NUMBER", "You", "can", "suppress", "the", "warnings", "following", "this", "SO", "LINK", "python", "NUMBER", "NUMBER", "resourcewarning", "NUMBER", "This", "makes", "it", "clear", "why", "if", "you", "google", "around", "for", "this", "issue", "it", "seems", "to", "occur", "a", "lot", "in", "the", "context", "of", "I", "did", "a", "unit", "test", "and", "now", "this", "NUMBER", "edit", "add", "credit", "where", "credit", "be", "due", "You", "don", "t", "have", "to", "NUMBER", "The", "warning", "be", "just", "that", "a", "warning", "NUMBER", "No", "error", "occur", "when", "you", "see", "it", "and", "it", "be", "not", "an", "indication", "of", "the", "program", "doing", "the", "wrong", "thing", "NUMBER", "It", "s", "entirely", "expected", "behaviour", "and", "this", "be", "work", "as", "designed", "NUMBER", "However", "if", "you", "re", "concerned", "about", "them", "you", "may", "call", "close", "NUMBER", "I", "find", "this", "advice", "contrary", "to", "Python", "s", "typical", "approach", "to", "resource", "handle", "NUMBER", "Python", "encourages", "deterministic", "resource", "handle", "NUMBER", "For", "example", "the", "stdlib", "produces", "warnings", "when", "file", "be", "mismanaged", "in", "a", "non", "deterministic", "way", "to", "help", "guide", "developers", "NUMBER", "Developers", "_should_", "take", "action", "on", "the", "warnings", "produced", "by", "stdlib", "NUMBER", "See", "the", "following", "Python", "bug", "where", "core", "developers", "discuss", "warnings", "during", "destructors", "LINK", "Additionally", "Python", "docs", "LINK", "object", "NUMBER", "__del__", "warn", "against", "relying", "on", "__del__", "for", "resource", "management", "It", "be", "not", "guaranteed", "that", "__del__", "methods", "be", "call", "for", "objects", "that", "still", "exist", "when", "the", "interpreter", "exits", "NUMBER", "And", "exception", "occurring", "during", "__del__", "be", "ignored", "and", "can", "t", "be", "handle", "Due", "to", "the", "precarious", "circumstances", "under", "which", "__del__", "methods", "be", "invoked", "exception", "that", "occur", "during", "their", "execution", "be", "ignored", "and", "a", "warning", "be", "printed", "to", "sys", "NUMBER", "derr", "instead", "NUMBER", "I", "run", "all", "my", "test", "and", "environments", "with", "warnings", "enable", "to", "help", "catch", "_real_", "bug", "and", "upgrade", "paths", "NUMBER", "If", "this", "warning", "really", "should", "be", "ignored", "as", "suggested", "here", "then", "maybe", "it", "shouldn", "t", "be", "logged", "NUMBER", "As", "it", "be", "now", "people", "be", "taking", "this", "advice", "of", "not", "calling", "close", "and", "this", "results", "in", "lots", "of", "ignorable", "noise", "in", "my", "output", "NUMBER", "Another", "work", "around", "based", "upon", "LINK", "be", "use", "the", "event", "system", "python", "def", "http_closer", "http_response", "kwargs", "if", "http_response", "http_response", "NUMBER", "close", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "aws_access_key_id", "XXX", "aws_secret_access_key", "YYY", "events", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "meta", "NUMBER", "events", "For", "HeadBucket", "for", "example", "after", "call", "NUMBER", "s", "NUMBER", "could", "also", "work", "events", "NUMBER", "register", "after", "call", "NUMBER", "s", "NUMBER", "HeadBucket", "http_closer", "try", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "head_bucket", "Bucket", "mybucket", "except", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "as", "e", "print", "Could", "not", "find", "bucket", "e", "for", "example", "I", "have", "NUMBER", "asgs", "when", "I", "run", "client", "NUMBER", "describe_auto_scaling_groups", "without", "any", "options", "it", "will", "only", "return", "NUMBER", "asgs", "back", "NUMBER", "so", "I", "have", "to", "run", "a", "loop", "with", "MaxRecords", "NUMBER", "and", "if", "there", "a", "NextToken", "file", "then", "run", "it", "again", "with", "that", "token", "I", "don", "t", "see", "this", "problem", "with", "AWS", "cli", "Hello", "I", "have", "a", "similar", "problem", "but", "I", "be", "use", "the", "paginator", "NUMBER", "I", "be", "use", "the", "paginator", "to", "go", "download", "file", "from", "a", "large", "s", "NUMBER", "and", "for", "some", "reason", "it", "prints", "out", "all", "the", "keys", "if", "I", "only", "do", "that", "but", "it", "cuts", "off", "if", "I", "try", "to", "download", "NUMBER", "Any", "idea", "There", "seems", "to", "be", "nothing", "to", "prevent", "S", "NUMBER", "Transfer", "to", "upload", "any", "object", "that", "support", "read", "seek", "tell", "and", "size", "so", "I", "would", "like", "to", "suggest", "an", "abstraction", "that", "receives", "a", "file", "object", "NUMBER", "e", "NUMBER", "g", "NUMBER", "the", "exist", "code", "would", "defer", "to", "new", "one", "that", "be", "more", "generic", "python", "def", "upload_file", "self", "filename", "bucket", "key", "callback", "None", "extra_args", "None", "self", "NUMBER", "upload_file_object", "open", "filename", "r", "bucket", "key", "callback", "callback", "extra_args", "extra_args", "I", "agree", "that", "it", "would", "be", "good", "to", "support", "file", "like", "objects", "though", "it", "wouldn", "t", "be", "as", "simple", "as", "a", "single", "function", "alias", "NUMBER", "We", "ll", "look", "into", "add", "it", "to", "our", "backlog", "thanks", "for", "report", "It", "s", "not", "too", "difficult", "I", "think", "NUMBER", "I", "m", "work", "on", "a", "pull", "request", "for", "this", "LINK", "upload", "file", "objects", "expand", "NUMBER", "It", "s", "not", "do", "just", "posting", "to", "let", "you", "know", "that", "I", "m", "work", "on", "it", "NUMBER", "I", "cannot", "see", "a", "way", "for", "both", "file", "like", "object", "abstractions", "and", "OSUtil", "abstractions", "to", "share", "much", "code", "unfortunately", "NUMBER", "Is", "there", "an", "important", "reason", "for", "OSUtil", "or", "did", "someone", "just", "think", "Python", "doesn", "t", "provide", "enough", "OS", "agnosticism", "In", "particular", "the", "fact", "that", "OSUtil", "NUMBER", "open_file_chunk_reader", "be", "abstracted", "makes", "things", "difficult", "NUMBER", "We", "should", "also", "add", "support", "for", "nonseekable", "streams", "NUMBER", "As", "brought", "up", "in", "this", "issue", "LINK", "grischa", "Why", "would", "you", "seek", "to", "NUMBER", "Shouldn", "t", "I", "be", "able", "to", "pass", "a", "file", "like", "object", "that", "I", "have", "already", "seeked", "to", "the", "point", "that", "I", "want", "to", "start", "from", "That", "seems", "like", "more", "expected", "default", "behavior", "when", "I", "look", "at", "models", "like", "the", "read", "method", "of", "file", "like", "objects", "NUMBER", "Good", "point", "wt", "NUMBER", "However", "I", "haven", "t", "be", "able", "to", "do", "any", "further", "work", "on", "this", "NUMBER", "Using", "boto", "NUMBER", "instead", "was", "the", "easier", "option", "for", "my", "purposes", "for", "now", "NUMBER", "If", "I", "were", "to", "start", "again", "I", "would", "not", "even", "calculate", "the", "file", "size", "though", "just", "do", "multipart", "by", "default", "when", "no", "size", "be", "given", "and", "increase", "chunk", "size", "gradually", "as", "total", "file", "size", "and", "number", "of", "chunks", "increases", "NUMBER", "I", "get", "the", "idea", "from", "a", "suggestion", "on", "StackOverflow", "and", "it", "makes", "it", "possible", "to", "write", "a", "stream", "based", "file", "like", "object", "to", "S", "NUMBER", "If", "the", "file", "object", "had", "be", "sought", "to", "some", "non", "zero", "point", "already", "it", "would", "just", "use", "that", "I", "guess", "NUMBER", "NUMBER", "for", "me", "on", "this", "feature", "it", "s", "annoying", "have", "to", "write", "stream", "to", "disk", "when", "ideally", "I", "d", "like", "to", "pass", "it", "straight", "thru", "to", "S", "NUMBER", "btw", "can", "also", "be", "achieved", "by", "replacing", "the", "OSUtils", "class", "like", "so", "python", "class", "ChainedFileOSUtils", "object", "def", "get_file_size", "self", "chained_file", "assert", "isinstance", "chained_file", "ChainedFile", "return", "chained_file", "NUMBER", "getsize", "def", "open_file_chunk_reader", "self", "chained_file", "start_byte", "chunk_size", "callback", "assert", "isinstance", "chained_file", "ChainedFile", "we", "need", "a", "cloned", "chained_file", "for", "each", "chunked", "reader", "as", "each", "will", "change", "the", "underlying", "offsets", "independently", "file_size", "self", "NUMBER", "get_file_size", "chained_file", "return", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "ReadFileChunk", "chained_file", "NUMBER", "clone", "start_byte", "chunk_size", "file_size", "callback", "True", "def", "open", "self", "filename", "mode", "assert", "False", "client", "boto", "NUMBER", "client", "s", "NUMBER", "region_name", "region_name", "connectOpts", "config", "TransferConfig", "multipart_chunksize", "chunkSize", "transfer", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "S", "NUMBER", "Transfer", "client", "client", "config", "config", "osutil", "ChainedFileOSUtils", "transfer", "NUMBER", "upload_file", "chained_file", "bucket", "key", "thehesiod", "thanks", "for", "that", "example", "I", "was", "able", "to", "use", "that", "along", "with", "GzipFile", "and", "BytesIO", "to", "put", "together", "a", "nice", "pipeline", "that", "streams", "file", "from", "a", "legacy", "service", "and", "compresses", "and", "uploads", "them", "to", "S", "NUMBER", "without", "having", "to", "write", "to", "disk", "NUMBER", "Even", "get", "it", "all", "run", "within", "Lambda", "NUMBER", "brandond", "there", "was", "a", "slight", "issue", "in", "my", "example", "I", "ve", "already", "update", "it", "NUMBER", "In", "open_file_chunk_reader", "you", "need", "to", "clone", "the", "file", "object", "chained_file", "since", "each", "copy", "will", "modify", "the", "underlying", "offsets", "independently", "NUMBER", "For", "other", "readers", "replace", "chained_file", "with", "a", "io", "NUMBER", "RawIOBase", "subclass", "NUMBER", "thehesiod", "thanks", "I", "ll", "use", "that", "NUMBER", "The", "file", "I", "ve", "be", "handle", "so", "far", "be", "all", "under", "the", "NUMBER", "MB", "default", "chunk", "size", "so", "I", "haven", "t", "run", "into", "any", "issue", "with", "multiple", "concurrent", "reads", "to", "the", "buffer", "NUMBER", "I", "have", "a", "query", "NUMBER", "Suppose", "client", "be", "uploading", "a", "huge", "file", "to", "a", "file", "server", "NUMBER", "Now", "on", "file", "server", "if", "I", "try", "to", "use", "the", "file", "object", "from", "http", "request", "and", "simultaneously", "upload", "it", "to", "s", "NUMBER", "without", "write", "it", "to", "disk", "will", "at", "any", "point", "I", "run", "out", "of", "memory", "Because", "everything", "will", "be", "in", "memory", "NUMBER", "If", "I", "write", "the", "file", "to", "disk", "in", "chunks", "as", "its", "be", "uploaded", "and", "then", "upload", "the", "file", "to", "s", "NUMBER", "by", "reading", "it", "in", "chunks", "or", "directly", "use", "s", "NUMBER", "cmd", "which", "do", "that", "internally", "i", "will", "not", "hit", "above", "issue", "NUMBER", "Which", "be", "the", "ideal", "approach", "for", "my", "use", "case", "Sidhesh", "telsiz", "That", "entirely", "depends", "on", "how", "much", "memory", "you", "have", "available", "and", "how", "you", "be", "buffering", "the", "file", "NUMBER", "My", "approach", "was", "to", "stream", "the", "response", "body", "into", "an", "BytesIO", "buffer", "and", "then", "pass", "this", "into", "S", "NUMBER", "Transfer", "use", "a", "derivative", "of", "ChainedFileOSUtils", "to", "process", "the", "buffer", "NUMBER", "This", "be", "pretty", "memory", "intensive", "though", "as", "you", "end", "up", "with", "at", "least", "two", "copies", "of", "the", "entire", "body", "in", "memory", "the", "original", "copy", "plus", "one", "more", "for", "each", "instance", "of", "ReadFileChunk", "NUMBER", "A", "less", "memory", "intensive", "but", "more", "complicated", "approach", "might", "be", "to", "write", "yourself", "a", "HTTP", "IO", "wrapper", "that", "use", "byte", "serving", "RFC", "NUMBER", "Range", "Requests", "to", "read", "the", "individual", "chunks", "on", "demand", "NUMBER", "You", "still", "have", "to", "buffer", "entire", "chunks", "though", "as", "various", "bits", "of", "the", "code", "expect", "to", "be", "able", "to", "seek", "around", "within", "the", "handle", "NUMBER", "kyleknap", "do", "the", "implementation", "take", "into", "consideration", "memory", "concern", "I", "mention", "above", "Is", "there", "any", "kind", "of", "chunking", "do", "Thanks", "kyleknap", "Will", "take", "a", "look", "at", "the", "pointer", "and", "use", "it", "NUMBER", "Hi", "Kyle", "Documentation", "for", "this", "api", "says", "the", "following", "Upload", "a", "file", "like", "object", "to", "bucket", "name", "at", "key", "name", "with", "open", "tmp", "NUMBER", "txt", "rb", "as", "f", "s", "NUMBER", "upload_fileobj", "f", "bucket", "name", "key", "name", "However", "if", "the", "file", "be", "not", "located", "on", "the", "disk", "then", "use", "with", "throw", "an", "exception", "NUMBER", "Error", "Errno", "NUMBER", "No", "such", "file", "or", "directory", "In", "my", "case", "I", "upload", "a", "file", "from", "local", "m", "c", "to", "server", "and", "while", "the", "file", "be", "in", "memory", "I", "start", "use", "s", "NUMBER", "upload_fileobj", "NUMBER", "If", "I", "directly", "use", "the", "file", "object", "which", "I", "get", "from", "request", "NUMBER", "FILES", "NUMBER", "items", "dictionary", "it", "works", "fine", "NUMBER", "File", "object", "for", "me", "be", "of", "type", "InMemoryUploadedFile", "NUMBER", "I", "think", "with", "expects", "the", "file", "to", "be", "locally", "available", "and", "would", "throw", "exception", "otherwise", "NUMBER", "Is", "my", "understanding", "correct", "NUMBER", "kyleknap", "Thanks", "for", "the", "clarification", "NUMBER", "Its", "work", "without", "use", "with", "NUMBER", "Will", "continue", "to", "use", "that", "NUMBER", "kyleknap", "Does", "this", "api", "also", "takes", "care", "of", "matching", "the", "md", "NUMBER", "of", "the", "file", "be", "transferred", "once", "the", "file", "be", "transferred", "just", "to", "make", "sure", "the", "file", "was", "not", "altered", "during", "the", "transfer", "and", "be", "valid", "NUMBER", "boat", "Pulls", "in", "NUMBER", "and", "add", "test", "NUMBER", "cc", "kyleknap", "rayluo", "mtdowling", "JordonPhillips", "shipit", "boat", "ship", "after", "add", "the", "blank", "line", "in", "the", "documentation", "otherwise", "doc", "parser", "will", "generate", "an", "error", "NUMBER", "shipit", "btw", "it", "might", "be", "worth", "add", "something", "like", "doc", "NUMBER", "to", "our", "travis", "CI", "runs", "NUMBER", "I", "ve", "start", "use", "that", "in", "some", "of", "my", "projects", "and", "it", "s", "be", "work", "well", "so", "far", "NUMBER", "d", "with", "the", "region", "NUMBER", "Fixes", "NUMBER", "I", "ll", "add", "a", "test", "and", "update", "the", "PR", "NUMBER", "Tests", "add", "in", "LINK", "Tracking", "progress", "there", "NUMBER", "If", "I", "create", "a", "session", "like", "this", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "Session", "profile_name", "foo", "region_name", "us", "west", "NUMBER", "the", "session", "object", "has", "a", "profile_name", "attribute", "session", "NUMBER", "profile_name", "us", "west", "NUMBER", "But", "there", "be", "no", "public", "attribute", "to", "find", "the", "region_name", "associated", "with", "the", "session", "NUMBER", "Both", "profile_name", "and", "region_name", "be", "stored", "in", "the", "config", "so", "it", "seems", "like", "there", "should", "be", "a", "property", "for", "region_name", "just", "like", "the", "one", "for", "profile_name", "NUMBER", "Fixed", "via", "LINK", "and", "NUMBER", "While", "packaging", "boto", "NUMBER", "I", "came", "across", "this", "test", "failure", "and", "was", "wondering", "if", "it", "s", "an", "actual", "failure", "or", "something", "I", "ve", "overlooked", "NUMBER", "S", "NUMBER", "E", "NUMBER", "ERROR", "test_resource_lazy_loads_properties", "test", "NUMBER", "unit", "NUMBER", "resources", "NUMBER", "test_factory", "NUMBER", "TestResourceFactory", "Traceback", "most", "recent", "call", "last", "File", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "mock", "mock", "NUMBER", "py", "line", "NUMBER", "in", "patched", "return", "func", "args", "keywargs", "File", "var", "tmp", "portage", "dev", "python", "boto", "NUMBER", "NUMBER", "work", "boto", "NUMBER", "NUMBER", "test", "unit", "resources", "test_factory", "NUMBER", "py", "line", "NUMBER", "in", "test_resource_lazy_loads_properties", "action", "NUMBER", "assert_called_once", "File", "usr", "lib", "NUMBER", "python", "NUMBER", "site", "package", "mock", "mock", "NUMBER", "py", "line", "NUMBER", "in", "__getattr__", "raise", "AttributeError", "name", "AttributeError", "assert_called_once", "begin", "captured", "logging", "TAG", "end", "captured", "logging", "TAG", "In", "NUMBER", "cloudsearch_domain", "NUMBER", "search", "query", "my", "great", "query", "Out", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "hits", "find", "NUMBER", "hit", "start", "NUMBER", "status", "rid", "tunPuJkqtgkKjJEj", "timems", "NUMBER", "In", "NUMBER", "cloudsearch_domain", "NUMBER", "search", "query", "my", "great", "query", "return", "_score", "File", "TAG", "line", "NUMBER", "cloudsearch_domain", "NUMBER", "search", "query", "my", "great", "query", "return", "_score", "SyntaxError", "invalid", "syntax", "In", "NUMBER", "cloudsearch_domain", "NUMBER", "search", "query", "my", "great", "query", "return", "_score", "Out", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "hits", "find", "NUMBER", "hit", "start", "NUMBER", "status", "rid", "qnRuJkquAkKjJEj", "timems", "NUMBER", "Just", "going", "through", "open", "issue", "NUMBER", "I", "think", "that", "the", "better", "solution", "would", "be", "to", "add", "an", "alias", "for", "it", "as", "describe", "in", "LINK", "especially", "since", "this", "be", "not", "the", "only", "operation", "where", "we", "have", "run", "into", "this", "problem", "NUMBER", "Closing", "this", "issue", "in", "favor", "of", "linked", "issue", "NUMBER", "I", "have", "version", "bucket", "and", "need", "to", "copy", "set", "of", "object", "version", "into", "another", "non", "version", "bucket", "NUMBER", "There", "be", "some", "SomeResource", "NUMBER", "copy_from", "and", "Client", "NUMBER", "copy_object", "methods", "NUMBER", "However", "I", "was", "unable", "to", "find", "how", "to", "specify", "source", "object", "version_id", "NUMBER", "The", "only", "place", "where", "I", "have", "find", "CopySourceVersionId", "was", "response", "but", "no", "place", "to", "put", "it", "into", "request", "NUMBER", "Is", "there", "any", "way", "to", "copy", "object", "version", "into", "another", "bucket", "without", "downloading", "it", "With", "boto", "it", "was", "possible", "but", "I", "my", "source", "bucket", "be", "having", "dots", "in", "names", "and", "this", "be", "not", "work", "with", "old", "boto", "any", "more", "NUMBER", "I", "have", "find", "the", "solution", "NUMBER", "Searching", "for", "similar", "problem", "I", "have", "find", "issue", "boto", "botocore", "NUMBER", "I", "have", "find", "undocumented", "method", "to", "specify", "version", "id", "in", "botocore", "NUMBER", "Testing", "it", "on", "boto", "NUMBER", "I", "have", "find", "it", "works", "there", "NUMBER", "To", "name", "specific", "object", "version", "as", "SourceObject", "one", "has", "to", "use", "following", "pattern", "bucket", "key", "versionId", "id", "NUMBER", "Now", "I", "be", "able", "to", "copy", "from", "specific", "version", "use", "boto", "NUMBER", "I", "still", "consider", "this", "an", "issue", "as", "current", "version", "of", "documentation", "do", "not", "explain", "it", "well", "it", "omits", "the", "version", "and", "do", "not", "explain", "the", "need", "to", "use", "the", "leading", "slash", "NUMBER", "Existing", "specification", "for", "Object", "NUMBER", "copy_from", "LINK", "S", "NUMBER", "Object", "NUMBER", "copy_from", "reads", "for", "the", "SourceCopy", "parameter", "CopySource", "string", "REQUIRED", "The", "name", "of", "the", "source", "bucket", "and", "key", "name", "of", "the", "source", "object", "separated", "by", "a", "slash", "NUMBER", "Must", "be", "URL", "encoded", "NUMBER", "I", "would", "propose", "to", "modify", "the", "text", "to", "clarify", "pattern", "for", "the", "CopySource", "either", "bucket", "key", "or", "bucket", "key", "versionId", "id", "explain", "the", "url", "encoded", "requirement", "it", "be", "not", "clear", "if", "it", "requires", "whole", "string", "to", "be", "url", "encoded", "or", "only", "the", "versionId", "or", "somehow", "differently", "NUMBER", "In", "my", "case", "I", "did", "not", "url", "encode", "anything", "NUMBER", "Thanks", "very", "much", "for", "finding", "the", "solution", "and", "sharing", "it", "We", "will", "definitely", "take", "a", "look", "into", "this", "and", "see", "how", "we", "can", "improve", "the", "documentation", "NUMBER", "rayluo", "Looking", "forward", "to", "that", "NUMBER", "Yesterday", "I", "was", "trying", "to", "make", "copy", "of", "an", "object", "having", "strange", "characters", "in", "the", "path", "bucket", "name", "test", "feed", "NUMBER", "txt", "and", "did", "not", "succeed", "NUMBER", "It", "be", "either", "due", "to", "my", "misunderstanding", "or", "there", "be", "a", "bug", "NUMBER", "If", "your", "update", "doc", "explains", "this", "it", "would", "be", "great", "NUMBER", "Otherwise", "we", "shall", "create", "separate", "issue", "for", "this", "particular", "corner", "case", "NUMBER", "This", "PR", "add", "the", "ability", "to", "inject", "examples", "into", "service", "documentation", "at", "doc", "build", "time", "NUMBER", "Each", "service", "can", "have", "a", "file", "stored", "under", "boto", "NUMBER", "examples", "TAG", "NUMBER", "rst", "NUMBER", "If", "find", "the", "contents", "of", "this", "file", "will", "be", "injected", "into", "each", "service", "s", "documentation", "output", "at", "the", "bottom", "in", "an", "Examples", "section", "NUMBER", "kyleknap", "Could", "I", "get", "a", "screenshot", "of", "what", "this", "looks", "like", "image", "LINK", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "a", "ce", "NUMBER", "ce", "NUMBER", "png", "Feedback", "incorporated", "NUMBER", "I", "just", "need", "to", "add", "a", "local", "TOC", "to", "the", "examples", "file", "NUMBER", "I", "ve", "add", "a", "build", "in", "local", "table", "of", "contents", "to", "the", "injected", "examples", "section", "NUMBER", "This", "relies", "on", "placing", "example", "titles", "as", "subsections", "NUMBER", "Here", "s", "a", "screenshot", "NUMBER", "image", "LINK", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "be", "NUMBER", "e", "NUMBER", "c", "NUMBER", "png", "ship", "boat", "boat", "The", "latest", "change", "looks", "good", "to", "me", "NUMBER", "NUMBER", "There", "s", "a", "common", "pattern", "in", "python", "where", "you", "want", "to", "provide", "all", "parameters", "as", "a", "value", "or", "None", "and", "expect", "that", "the", "receiving", "end", "treats", "None", "as", "a", "non", "value", "NUMBER", "The", "pattern", "simplifies", "and", "shortens", "code", "NUMBER", "Unfortunately", "it", "doesn", "t", "seem", "possible", "to", "do", "so", "with", "boto", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "args", "NUMBER", "region", "volume", "ec", "NUMBER", "create_volume", "Size", "int", "args", "NUMBER", "size", "SnapshotId", "args", "NUMBER", "snapshot_id", "or", "None", "AvailabilityZone", "instance", "NUMBER", "placement", "AvailabilityZone", "VolumeType", "args", "NUMBER", "volume_type", "Iops", "args", "NUMBER", "iops", "or", "None", "Encrypted", "bool", "args", "NUMBER", "encrypted", "KmsKeyId", "args", "NUMBER", "encrypted", "or", "None", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Invalid", "type", "for", "parameter", "Iops", "value", "None", "type", "TAG", "valid", "types", "TAG", "TAG", "Invalid", "type", "for", "parameter", "KmsKeyId", "value", "None", "type", "TAG", "valid", "types", "TAG", "Invalid", "type", "for", "parameter", "SnapshotId", "value", "None", "type", "TAG", "valid", "types", "TAG", "Instead", "one", "has", "to", "carefully", "build", "a", "dict", "with", "the", "argument", "use", "one", "if", "per", "argument", "opt", "if", "args", "NUMBER", "iops", "opt", "Iops", "args", "NUMBER", "iops", "if", "args", "NUMBER", "kms_key_id", "opt", "KmsKeyId", "args", "NUMBER", "kms_key_id", "NUMBER", "I", "think", "this", "be", "a", "dup", "of", "NUMBER", "which", "was", "rejected", "by", "rayluo", "NUMBER", "For", "the", "record", "I", "be", "in", "favor", "of", "the", "change", "propose", "here", "NUMBER", "I", "think", "it", "makes", "work", "with", "optional", "parameters", "easier", "and", "matches", "the", "pattern", "use", "in", "other", "libraries", "including", "the", "original", "boto", "NUMBER", "Wanted", "to", "chime", "in", "here", "and", "indicate", "my", "support", "of", "this", "change", "as", "well", "NUMBER", "I", "m", "in", "the", "process", "of", "porting", "some", "saltstack", "state", "to", "boto", "NUMBER", "and", "this", "issue", "be", "definitely", "a", "huge", "pain", "NUMBER", "Would", "not", "be", "a", "big", "deal", "if", "you", "only", "cared", "about", "a", "few", "of", "the", "possible", "parameters", "but", "add", "quite", "a", "bit", "of", "code", "to", "deal", "with", "support", "for", "None", "on", "the", "optionals", "NUMBER", "Would", "make", "more", "sense", "to", "me", "to", "force", "the", "corner", "cases", "mention", "by", "rayluo", "in", "NUMBER", "to", "jump", "through", "some", "hoops", "rather", "than", "every", "common", "use", "case", "NUMBER", "ship", "The", "NUMBER", "wheel", "on", "PyPI", "be", "a", "bit", "busted", "because", "of", "a", "discrepancy", "between", "the", "futures", "requirement", "spec", "in", "setup", "NUMBER", "py", "and", "setup", "NUMBER", "cfg", "NUMBER", "See", "LINK", "default", "fileviewer", "file", "view", "default", "CHANGES", "NUMBER", "txt", "NUMBER", "requires", "dist", "from", "setup", "NUMBER", "cfg", "overwrites", "any", "requirements", "from", "setup", "NUMBER", "py", "Care", "must", "be", "taken", "that", "the", "requirements", "be", "the", "same", "in", "both", "cases", "or", "just", "always", "install", "from", "wheel", "NUMBER", "Temporary", "fix", "for", "my", "problem", "at", "LINK", "cli", "py", "issue", "NUMBER", "be", "no", "binary", "boto", "NUMBER", "NUMBER", "Is", "there", "a", "mechanism", "for", "update", "the", "metadata", "on", "objects", "larger", "than", "NUMBER", "GB", "without", "really", "doing", "the", "copy", "like", "the", "copy_object", "trick", "mention", "in", "issue", "NUMBER", "I", "ve", "tried", "use", "the", "S", "NUMBER", "Client", "object", "create_multipart_upload", "but", "upload_part", "blocks", "and", "really", "do", "the", "copy", "NUMBER", "I", "m", "trying", "to", "see", "if", "the", "S", "NUMBER", "Resource", "object", "has", "the", "same", "behavior", "but", "I", "get", "this", "error", "mp", "s", "NUMBER", "resource", "NUMBER", "MultipartUpload", "bucket", "foo", "NUMBER", "bam", "id", "part", "NUMBER", "mp", "NUMBER", "Part", "NUMBER", "part", "NUMBER", "copy_from", "CopySource", "source", "CopySourceRange", "bytes", "NUMBER", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "_args", "_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "call", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "api_params", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_convert_to_request_dict", "api_params", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "validate", "NUMBER", "py", "line", "NUMBER", "in", "serialize_to_request", "raise", "ParamValidationError", "report", "report", "NUMBER", "generate_report", "botocore", "NUMBER", "exception", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Invalid", "type", "for", "parameter", "PartNumber", "value", "NUMBER", "type", "TAG", "valid", "types", "TAG", "TAG", "It", "seems", "like", "Part", "part_number", "should", "take", "an", "integer", "instead", "of", "a", "string", "and", "there", "be", "a", "casting", "issue", "later", "on", "or", "I", "m", "make", "a", "silly", "mistake", "NUMBER", "Either", "way", "any", "advice", "would", "be", "appreciated", "NUMBER", "Would", "use", "the", "CopySourceIfNoneMatch", "parameter", "allow", "me", "to", "skip", "the", "copy", "and", "complete", "the", "upload", "This", "do", "help", "NUMBER", "This", "be", "exactly", "what", "I", "be", "trying", "to", "do", "NUMBER", "The", "catch", "be", "if", "the", "file", "be", "over", "NUMBER", "GB", "it", "seems", "I", "get", "an", "error", "on", "response", "part_copy", "NUMBER", "copy_from", "CopySource", "mybucketfoo", "bar", "and", "have", "to", "do", "a", "loop", "over", "this", "instead", "response", "part_copy", "NUMBER", "copy_from", "CopySource", "mybucketfoo", "bar", "CopySourceRange", "bytes", "NUMBER", "NUMBER", "But", "I", "can", "make", "this", "work", "to", "complete", "the", "operation", "NUMBER", "What", "I", "m", "curious", "about", "be", "if", "an", "option", "like", "CopySourceIfNoneMatch", "can", "be", "use", "so", "S", "NUMBER", "will", "skip", "the", "copy", "NUMBER", "So", "far", "every", "permutation", "I", "ve", "tried", "just", "raises", "an", "error", "NUMBER", "The", "idea", "be", "I", "want", "to", "incorporate", "this", "into", "a", "Lambda", "function", "so", "I", "m", "trying", "to", "get", "around", "the", "variable", "copy", "time", "NUMBER", "Are", "there", "any", "flags", "I", "can", "set", "to", "get", "around", "the", "lag", "of", "actually", "copying", "the", "data", "In", "botot", "NUMBER", "the", "mturk", "module", "s", "API", "version", "be", "out", "of", "date", "APIVersion", "NUMBER", "NUMBER", "NUMBER", "And", "there", "be", "some", "function", "miss", "like", "GetBonusPayments", "LINK", "_GetBonusPaymentsOperation", "NUMBER", "html", "NUMBER", "It", "would", "be", "great", "if", "boto", "NUMBER", "will", "still", "have", "a", "mturk", "module", "with", "some", "new", "function", "add", "NUMBER", "Thanks", "for", "the", "great", "work", "Also", "refactor", "NUMBER", "exist", "callback", "test", "cases", "in", "order", "to", "group", "them", "together", "boat", "after", "hasattr", "goes", "away", "Changed", "NUMBER", "I", "m", "following", "this", "guide", "LINK", "chainability", "It", "appears", "that", "a", "Collection", "cannot", "be", "filtered", "like", "a", "CollectionManager", "even", "though", "it", "has", "a", "filter", "method", "NUMBER", "evpc", "NUMBER", "vpc", "NUMBER", "instances", "ec", "NUMBER", "Vpc", "NUMBER", "instancesCollectionManager", "ec", "NUMBER", "Vpc", "id", "vpc", "xxxxxx", "NUMBER", "ec", "NUMBER", "Instance", "evpc", "NUMBER", "vpc", "NUMBER", "instances", "NUMBER", "filter", "ec", "NUMBER", "Vpc", "NUMBER", "instancesCollection", "ec", "NUMBER", "Vpc", "id", "vpc", "xxxxxx", "NUMBER", "ec", "NUMBER", "Instance", "evpc", "NUMBER", "vpc", "NUMBER", "instances", "NUMBER", "filter", "NUMBER", "filter", "Filter", "name_tag_filter", "web", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "Users", "rballestrini", "env", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "collection", "NUMBER", "py", "line", "NUMBER", "in", "filter", "return", "CollectionManager", "NUMBER", "filter", "self", "kwargs", "TypeError", "unbound", "method", "filter", "must", "be", "call", "with", "CollectionManager", "instance", "as", "first", "argument", "get", "ec", "NUMBER", "Vpc", "NUMBER", "instancesCollection", "instance", "instead", "This", "bug", "appears", "in", "NUMBER", "version", "NUMBER", "pip", "freeze", "grep", "boto", "NUMBER", "boto", "NUMBER", "NUMBER", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "object_summary", "s", "NUMBER", "ObjectSummary", "bucket_name", "key", "object_summary", "NUMBER", "size", "Traceback", "most", "recent", "call", "last", "File", "line", "NUMBER", "in", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "property_loader", "NUMBER", "has", "no", "load", "method", "NUMBER", "format", "self", "NUMBER", "class", "NUMBER", "name", "boto", "NUMBER", "exception", "NUMBER", "ResourceLoadException", "s", "NUMBER", "ObjectSummary", "has", "no", "load", "method", "The", "same", "as", "this", "one", "LINK", "When", "I", "try", "to", "do", "an", "empty", "query", "dynamodb", "boto", "NUMBER", "resource", "dynamodb", "endpoint_url", "LINK", "table", "dynamodb", "NUMBER", "Table", "table_name", "response", "table", "NUMBER", "query", "I", "get", "an", "error", "stating", "that", "the", "KeyConditionExpression", "parameter", "needs", "to", "be", "pass", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "ValidationException", "when", "calling", "the", "Query", "operation", "Either", "the", "KeyConditions", "or", "KeyConditionExpression", "parameter", "must", "be", "specified", "in", "the", "request", "NUMBER", "However", "in", "the", "TAG", "Amazon", "Docs", "TAG", "it", "says", "the", "KeyConditionExpression", "be", "not", "a", "required", "parameter", "NUMBER", "I", "m", "trying", "to", "query", "my", "entire", "table", "for", "all", "the", "rows", "and", "run", "a", "scan", "be", "not", "feasible", "in", "my", "scenario", "since", "I", "need", "the", "response", "to", "be", "automatically", "sorted", "NUMBER", "Any", "suggestions", "According", "to", "the", "docs", "it", "says", "neither", "be", "required", "parameters", "so", "I", "m", "not", "sure", "as", "to", "why", "it", "s", "make", "me", "provide", "one", "of", "them", "NUMBER", "My", "table", "be", "based", "on", "a", "Partition", "Key", "which", "contains", "the", "item", "s", "category", "and", "then", "a", "Sort", "Key", "containing", "the", "item", "s", "unique", "ID", "NUMBER", "I", "attempted", "to", "make", "a", "query", "with", "KeyConditionExpression", "Key", "id", "NUMBER", "ge", "NUMBER", "which", "should", "theoretically", "return", "all", "the", "items", "back", "since", "they", "all", "have", "ID", "s", "greater", "than", "NUMBER", "however", "then", "I", "get", "a", "Key", "Schema", "error", "NUMBER", "It", "seems", "like", "KeyConditionExpression", "only", "works", "for", "the", "Partition", "Key", "Wow", "I", "don", "t", "think", "any", "amount", "rereading", "it", "would", "have", "allow", "me", "to", "interpret", "it", "like", "that", "so", "many", "thanks", "for", "the", "explanation", "NUMBER", "As", "for", "the", "comparison", "rules", "that", "I", "definitely", "overlooked", "Now", "I", "see", "the", "fine", "print", "You", "must", "specify", "the", "partition", "key", "name", "and", "value", "as", "an", "equality", "condition", "NUMBER", "Which", "explains", "why", "I", "couldn", "t", "just", "do", "KeyConditionExpression", "Key", "category", "NUMBER", "between", "a", "z", "as", "it", "throw", "a", "ValidationException", "NUMBER", "Hi", "I", "notice", "a", "format", "issue", "here", "LINK", "ref", "s", "NUMBER", "transfer", "usage", "The", "progress", "percentage", "example", "needs", "some", "attention", "NUMBER", "Also", "how", "many", "indents", "for", "sys", "NUMBER", "dout", "NUMBER", "flush", "in", "that", "example", "Thanks", "Dave", "P", "NUMBER", "Hi", "Is", "there", "a", "method", "for", "modifying", "the", "metadata", "of", "an", "S", "NUMBER", "object", "This", "be", "clearly", "possible", "as", "it", "s", "functionality", "that", "the", "AWS", "Console", "exposes", "and", "Boto", "NUMBER", "has", "the", "tantalisingly", "named", "set_remote_metadata", "method", "but", "I", "can", "t", "find", "anything", "in", "the", "Boto", "NUMBER", "docs", "NUMBER", "Ta", "Matt", "Apparently", "the", "way", "to", "do", "this", "be", "to", "use", "copy_object", "use", "the", "same", "value", "for", "source", "and", "destination", "NUMBER", "Since", "this", "isn", "t", "exactly", "obvious", "maybe", "a", "convenience", "method", "for", "metadata", "update", "would", "be", "possible", "Can", "someone", "please", "show", "how", "to", "do", "this", "I", "m", "struggling", "to", "find", "any", "docs", "on", "copy", "operations", "NUMBER", "This", "be", "as", "far", "as", "I", "ve", "get", "in", "trying", "to", "update", "the", "metadata", "on", "an", "object", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "something", "NUMBER", "something", "NUMBER", "com", "object", "list", "bucket", "NUMBER", "objects", "NUMBER", "iterator", "NUMBER", "object", "NUMBER", "meta", "NUMBER", "data", "NUMBER", "update", "Content", "Type", "application", "pdf", "object", "NUMBER", "copy_from", "CopySource", "something", "NUMBER", "something", "NUMBER", "com", "object", "NUMBER", "key", "This", "results", "in", "ClientError", "An", "error", "occur", "InvalidRequest", "when", "calling", "the", "CopyObject", "operation", "This", "copy", "request", "be", "illegal", "because", "it", "be", "trying", "to", "copy", "an", "object", "to", "itself", "without", "change", "the", "object", "s", "metadata", "storage", "class", "website", "redirect", "location", "or", "encryption", "attributes", "NUMBER", "mj", "harvey", "I", "don", "t", "see", "copy_object", "anywhere", "in", "the", "source", "NUMBER", "Any", "tips", "This", "worked", "for", "me", "python", "import", "boto", "NUMBER", "client", "boto", "NUMBER", "client", "s", "NUMBER", "bucket", "bucket_name", "key", "file_key", "k", "client", "NUMBER", "head_object", "Bucket", "bucket", "Key", "key", "m", "k", "Metadata", "m", "new_metadata", "value", "client", "NUMBER", "copy_object", "Bucket", "bucket", "Key", "key", "CopySource", "bucket", "key", "Metadata", "m", "MetadataDirective", "REPLACE", "I", "think", "it", "s", "very", "important", "to", "point", "out", "in", "the", "docs", "that", "MetadataDirective", "REPLACE", "must", "be", "specified", "for", "the", "ContentType", "argument", "to", "be", "considered", "when", "you", "want", "to", "copy", "an", "object", "while", "change", "its", "Content", "Type", "header", "Thanks", "Hi", "there", "I", "was", "having", "trouble", "with", "these", "permissions", "and", "I", "thought", "I", "would", "give", "a", "concrete", "solution", "example", "of", "uploading", "a", "file", "with", "boto", "NUMBER", "version", "NUMBER", "and", "the", "associated", "metadata", "import", "boto", "NUMBER", "NUMBER", "import", "botocore", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "upload_file", "file", "NUMBER", "txt", "my_bucket", "s", "NUMBER", "file", "NUMBER", "txt", "ExtraArgs", "Metadata", "mode", "NUMBER", "uid", "NUMBER", "gid", "NUMBER", "Hope", "this", "helps", "See", "also", "LINK", "fuse", "s", "NUMBER", "fs", "fuse", "issue", "NUMBER", "for", "change", "the", "metadata", "with", "s", "NUMBER", "fs", "Does", "the", "metadata", "update", "do", "a", "copy", "of", "the", "object", "even", "if", "we", "do", "a", "copy", "of", "the", "same", "object", "It", "seems", "that", "when", "I", "update", "the", "metadata", "of", "a", "large", "file", "it", "takes", "more", "time", "The", "documentation", "seems", "to", "indicate", "it", "be", "possible", "to", "update", "the", "metadata", "on", "a", "key", "LINK", "key", "metadata", "but", "doing", "this", "remove", "the", "object", "content", "I", "m", "affected", "by", "the", "same", "problem", "maelp", "said", "NUMBER", "Once", "we", "try", "to", "update", "the", "metadata", "it", "gets", "remove", "NUMBER", "timduly", "NUMBER", "I", "think", "this", "worked", "for", "me", "but", "I", "m", "not", "sure", "how", "to", "access", "the", "custom", "metadata", "after", "I", "ve", "add", "it", "NUMBER", "Do", "you", "have", "that", "info", "polinabee", "it", "looks", "like", "use", "the", "get_object", "method", "from", "the", "S", "NUMBER", "Client", "class", "returns", "a", "dictionary", "containing", "the", "Metdata", "LINK", "S", "NUMBER", "Client", "NUMBER", "get_object", "timduly", "NUMBER", "thanks", "i", "ended", "up", "finding", "it", "NUMBER", "object", "s", "NUMBER", "Object", "bucket", "name", "filepath", "print", "object", "NUMBER", "metadata", "customtag", "Hey", "there", "so", "more", "growing", "pains", "from", "switching", "from", "boto", "NUMBER", "When", "iterating", "over", "a", "bunch", "of", "AMIs", "I", "have", "some", "logic", "in", "there", "that", "do", "this", "python", "name", "tags", "so", "it", "turns", "out", "that", "if", "a", "resource", "has", "no", "tags", "it", "s", "not", "even", "an", "empty", "list", "but", "the", "tags", "property", "be", "None", "Which", "means", "if", "you", "do", "this", "you", "get", "a", "TypeError", "NoneType", "object", "be", "not", "iterable", "for", "tag", "in", "ami", "NUMBER", "tags", "if", "tag", "Key", "Name", "name", "tag", "Value", "tags", "tag", "Key", "tag", "Value", "Because", "I", "can", "t", "just", "reference", "tags", "like", "a", "dict", "like", "I", "can", "in", "boto", "but", "that", "s", "a", "different", "story", "NUMBER", "But", "if", "the", "AMI", "has", "no", "tags", "I", "get", "TypeError", "NoneType", "object", "be", "not", "iterable", "So", "in", "boto", "NUMBER", "please", "_at", "least_", "return", "an", "empty", "list", "for", "TAG", "NUMBER", "tags", "rather", "than", "make", "me", "surround", "this", "logic", "in", "_yet", "another", "layer_", "of", "conditional", "logic", "that", "checks", "to", "see", "if", "there", "even", "be", "any", "tags", "NUMBER", "Thanks", "will", "follow", "in", "NUMBER", "When", "I", "run", "this", "command", "my", "instance", "runs", "for", "a", "second", "and", "then", "immediately", "shuts", "down", "client", "NUMBER", "request_spot_instances", "SpotPrice", "NUMBER", "InstanceCount", "NUMBER", "Type", "one", "time", "LaunchSpecification", "ImageId", "CustomAMI", "InstanceType", "m", "NUMBER", "xlarge", "SecurityGroupIds", "SecurityGroup", "IamInstanceProfile", "Arn", "Arn", "KeyName", "Keyname", "SubnetId", "CustomSubnet", "BlockDeviceMappings", "DeviceName", "dev", "sda", "NUMBER", "Ebs", "VolumeSize", "NUMBER", "However", "when", "I", "run", "this", "cli", "command", "it", "works", "and", "the", "instance", "starts", "with", "no", "issue", "aws", "ec", "NUMBER", "request", "spot", "instances", "spot", "price", "NUMBER", "instance", "count", "NUMBER", "type", "one", "time", "launch", "specification", "ImageId", "CustomAMI", "KeyName", "Keyname", "InstanceType", "m", "NUMBER", "xlarge", "SubnetId", "SubnetId", "IamInstanceProfile", "Arn", "Arn", "SecurityGroupIds", "sg", "e", "NUMBER", "fed", "NUMBER", "BlockDeviceMappings", "DeviceName", "dev", "sda", "NUMBER", "Ebs", "VolumeSize", "NUMBER", "This", "behavior", "only", "exists", "when", "request", "an", "m", "NUMBER", "xlarge", "with", "a", "custom", "AMI", "NUMBER", "When", "spinning", "up", "a", "micro", "instance", "with", "ubuntu", "everything", "works", "fine", "Turns", "out", "it", "was", "an", "issue", "with", "my", "custom", "ami", "id", "NUMBER", "Apologies", "So", "in", "boto", "there", "was", "instance", "NUMBER", "add_tag", "and", "instance", "NUMBER", "remove_tag", "NUMBER", "In", "boto", "NUMBER", "there", "be", "instance", "NUMBER", "create_tags", "but", "no", "corresponding", "delete_tag", "s", "NUMBER", "the", "client", "resource", "has", "delete_tags", "but", "the", "method", "should", "exist", "for", "the", "instance", "object", "NUMBER", "Discussion", "Thanks", "looking", "forward", "to", "it", "NUMBER", "you", "delete", "tag", "in", "boto", "NUMBER", "by", "setting", "a", "tag", "with", "a", "value", "of", "None", "I", "m", "not", "able", "to", "set", "the", "Value", "key", "to", "None", "NUMBER", "I", "m", "get", "a", "type", "error", "NUMBER", "Any", "other", "way", "to", "remove", "a", "tag", "mlapida", "You", "just", "omit", "Value", "Could", "you", "guys", "give", "a", "quick", "code", "example", "Fantastic", "Can", "you", "please", "link", "to", "documentation", "to", "show", "how", "it", "works", "now", "Here", "s", "the", "doc", "section", "LINK", "EC", "NUMBER", "Instance", "NUMBER", "delete_tags", "NUMBER", "python", "import", "boto", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "client", "ec", "NUMBER", "instance", "ec", "NUMBER", "Instance", "id", "Delete", "the", "tag", "foo", "if", "it", "has", "value", "bar", "instance", "NUMBER", "delete_tags", "Tags", "Key", "foo", "Value", "bar", "Delete", "the", "tag", "baz", "if", "it", "exists", "instance", "NUMBER", "delete_tags", "Tags", "Key", "baz", "Delete", "all", "tags", "instance", "NUMBER", "delete_tags", "Awesome", "NUMBER", "You", "guys", "be", "interrobang", "heavy_division_sign", "curly_loop", "zap", "good", "NUMBER", "This", "be", "dandy", "but", "some", "other", "resources", "be", "miss", "delete_tags", "too", "NUMBER", "RouteTable", "would", "be", "one", "of", "them", "NUMBER", "Should", "I", "open", "a", "separate", "issue", "for", "it", "ping", "JordonPhillips", "I", "create", "bucket", "policy", "for", "after", "NUMBER", "day", "data", "move", "s", "NUMBER", "to", "Glacier", "NUMBER", "in", "my", "bucket", "has", "more", "than", "NUMBER", "K", "objects", "NUMBER", "How", "can", "i", "restore", "Glacier", "object", "to", "S", "NUMBER", "and", "what", "be", "most", "efficient", "way", "to", "download", "all", "object", "in", "given", "folder", "directly", "glacier", "or", "move", "glacier", "data", "to", "s", "NUMBER", "then", "download", "NUMBER", "In", "the", "S", "NUMBER", "Restoring", "Objects", "document", "only", "give", "Java", "and", "NUMBER", "NET", "example", "LINK", "objects", "NUMBER", "html", "NUMBER", "Is", "there", "be", "method", "in", "boto", "NUMBER", "please", "explain", "how", "to", "restore", "S", "NUMBER", "object", "NUMBER", "buckt_ob", "self", "NUMBER", "s", "NUMBER", "Bucket", "mybucket", "for", "obj", "in", "buckt_ob", "NUMBER", "objects", "NUMBER", "filter", "Prefix", "folder", "storage_class", "obj", "NUMBER", "orage_class", "restore", "obj", "NUMBER", "restore", "This", "code", "what", "i", "try", "but", "there", "be", "no", "such", "obj", "NUMBER", "restore", "after", "restore", "complete", "how", "can", "i", "get", "notification", "like", "all", "folder", "be", "available", "for", "download", "Thanks", "for", "your", "complete", "description", "with", "example", "NUMBER", "In", "your", "above", "NUMBER", "suggestion", "be", "good", "enough", "for", "restore", "object", "NUMBER", "in", "mean", "time", "please", "add", "some", "example", "to", "documentation", "if", "there", "be", "method", "like", "s", "NUMBER", "object", "NUMBER", "download", "NUMBER", "force", "NUMBER", "that", "method", "will", "do", "NUMBER", "if", "object", "in", "s", "NUMBER", "then", "object", "directly", "download", "NUMBER", "if", "object", "in", "glacier", "then", "restore", "object", "keep", "in", "s", "NUMBER", "until", "file", "complete", "the", "download", "and", "download", "that", "kind", "of", "method", "hide", "all", "low", "level", "client", "call", "and", "that", "will", "easy", "to", "use", "and", "understand", "but", "i", "don", "t", "have", "clear", "idea", "be", "possible", "or", "not", "with", "current", "boto", "NUMBER", "Hai", "kyleknap", "I", "be", "creating", "a", "PHP", "based", "web", "application", "use", "Amazon", "s", "S", "NUMBER", "and", "glacier", "services", "NUMBER", "Now", "I", "want", "to", "give", "my", "site", "users", "a", "feature", "that", "they", "can", "choose", "any", "file", "and", "make", "it", "archive", "means", "move", "file", "from", "S", "NUMBER", "to", "Glacier", "and", "unarchive", "means", "move", "file", "from", "Glacier", "to", "S", "NUMBER", "NUMBER", "Can", "you", "provide", "an", "exple", "demonstrating", "this", "actions", "or", "any", "api", "s", "for", "doing", "this", "Thanks", "in", "advance", "NUMBER", "Had", "this", "automation", "work", "for", "a", "quite", "a", "bit", "on", "a", "Ubuntu", "LTS", "NUMBER", "use", "boto", "NUMBER", "as", "well", "as", "some", "boto", "NUMBER", "However", "starting", "today", "havn", "t", "provisioned", "any", "environments", "in", "a", "week", "or", "so", "be", "get", "this", "now", "Creating", "environment", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "cli", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "SUCCESS", "MSG", "main", "File", "cli", "NUMBER", "py", "line", "NUMBER", "in", "main", "return", "create_environment", "cli_args", "File", "cli", "NUMBER", "py", "line", "NUMBER", "in", "create_environment", "async", "cli_args", "async", "File", "opt", "provisioning", "provision", "environment", "NUMBER", "py", "line", "NUMBER", "in", "provision_via_cloudformation", "path_to_template", "File", "opt", "provisioning", "provision", "environment", "NUMBER", "py", "line", "NUMBER", "in", "upload_to_s", "NUMBER", "env", "self", "NUMBER", "env", "node", "self", "NUMBER", "node", "File", "opt", "provisioning", "provision", "s", "NUMBER", "py", "line", "NUMBER", "in", "upload_all_bytes", "resp", "s", "NUMBER", "_object", "NUMBER", "put", "Body", "file_as_bytes", "ACL", "acl", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "success_response", "exception", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_needs_retry", "caught_exception", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "if", "self", "NUMBER", "_checker", "attempts", "response", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "_should_retry", "return", "self", "NUMBER", "_checker", "attempt_number", "response", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "return", "self", "NUMBER", "_check_caught_exception", "attempt_number", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "_check_caught_exception", "raise", "caught_exception", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "exception", "NUMBER", "SSLError", "SSL", "CERTIFICATE_VERIFY_FAILED", "certificate", "verify", "fail", "_ssl", "NUMBER", "c", "NUMBER", "Thanks", "It", "looks", "like", "you", "re", "hitting", "an", "S", "NUMBER", "endpoint", "and", "you", "re", "request", "be", "probably", "be", "retried", "NUMBER", "Which", "S", "NUMBER", "endpoint", "be", "you", "hitting", "What", "version", "of", "botocore", "be", "you", "use", "Just", "for", "the", "process", "of", "elimination", "to", "find", "root", "cause", "have", "you", "tried", "use", "a", "more", "up", "to", "date", "CA", "bundle", "You", "can", "use", "a", "custom", "CA", "bundle", "by", "specify", "the", "path", "to", "a", "CA", "bundle", "in", "the", "AWS_CA_BUNDLE", "environment", "variable", "NUMBER", "I", "be", "get", "this", "too", "on", "my", "machine", "boto", "NUMBER", "works", "and", "aws", "cli", "but", "boto", "NUMBER", "gives", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "exception", "NUMBER", "SSLError", "Errno", "NUMBER", "_ssl", "NUMBER", "c", "NUMBER", "error", "NUMBER", "SSL", "routines", "SSL", "NUMBER", "_GET_SERVER_CERTIFICATE", "certificate", "verify", "fail", "with", "boto", "import", "boto", "s", "NUMBER", "boto", "NUMBER", "connect_s", "NUMBER", "print", "b", "NUMBER", "name", "for", "b", "in", "s", "NUMBER", "get_all_buckets", "with", "boto", "NUMBER", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "for", "b", "in", "s", "NUMBER", "buckets", "NUMBER", "all", "print", "b", "NUMBER", "name", "I", "have", "update", "the", "CA", "certs", "as", "well", "with", "sudo", "update", "ca", "certificates", "in", "boto", "NUMBER", "endpoint", "url", "boto", "NUMBER", "Session", "NUMBER", "client", "s", "NUMBER", "NUMBER", "bcc", "NUMBER", "meta", "NUMBER", "endpoint_url", "u", "LINK", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "humm", "be", "this", "about", "use", "non", "us", "region", "NUMBER", "nope", "it", "brakes", "with", "us", "east", "NUMBER", "too", "Just", "a", "quick", "thought", "NUMBER", "Would", "it", "be", "the", "same", "issue", "as", "this", "one", "LINK", "cli", "issue", "NUMBER", "issuecomment", "NUMBER", "Brill", "guys", "It", "was", "certify", "OpenSSL", "issue", "It", "was", "odd", "that", "the", "CLI", "worked", "when", "boto", "NUMBER", "did", "not", "NUMBER", "Also", "How", "be", "it", "that", "a", "package", "which", "be", "not", "a", "dependency", "of", "boto", "NUMBER", "can", "break", "boto", "NUMBER", "I", "guess", "certify", "should", "depend", "against", "the", "install", "version", "of", "openssl", "if", "it", "breakes", "on", "old", "version", "but", "that", "be", "not", "an", "issue", "you", "guys", "can", "deal", "with", "NUMBER", "You", "can", "either", "downgrade", "certify", "or", "upgrade", "openssl", "to", "fix", "this", "LINK", "Can", "we", "get", "either", "a", "function", "integ", "test", "add", "that", "verifies", "batch", "resource", "actions", "serialize", "to", "the", "expected", "request", "Either", "Given", "a", "sample", "resource", "model", "with", "a", "batch", "action", "defined", "verify", "the", "appropriate", "params", "for", "the", "corresponding", "client", "calls", "Pick", "an", "exist", "batch", "action", "in", "a", "resource", "model", "and", "verify", "the", "call", "actually", "works", "NUMBER", "I", "m", "mainly", "interested", "in", "having", "test", "cover", "these", "cases", "if", "some", "of", "the", "internals", "get", "refactored", "NUMBER", "shipit", "Looks", "good", "NUMBER", "In", "my", "bucket", "has", "big", "data", "more", "than", "NUMBER", "TB", "some", "of", "data", "store", "in", "Glacier", "I", "want", "to", "create", "data", "summary", "static", "NUMBER", "So", "I", "need", "to", "get", "Bucket", "storage", "size", "in", "S", "NUMBER", "only", "Glacier", "only", "s", "NUMBER", "glacier", "directory", "size", "i", "try", "to", "use", "LINK", "S", "NUMBER", "Client", "NUMBER", "list_objects", "with", "bellow", "code", "but", "that", "method", "list", "only", "NUMBER", "keys", "maximally", "allObj", "client", "NUMBER", "list_objects", "Bucket", "mybucket", "listk", "allObj", "Contents", "so", "please", "suggest", "better", "method", "service", "for", "calculate", "size", "of", "all", "object", "And", "if", "you", "still", "want", "the", "direct", "way", "you", "should", "be", "able", "to", "penetrate", "the", "NUMBER", "keys", "maximum", "limit", "by", "use", "Boto", "NUMBER", "s", "collection", "feature", "LINK", "S", "NUMBER", "Bucket", "NUMBER", "objects", "which", "automatically", "do", "the", "pagination", "for", "you", "NUMBER", "All", "these", "information", "should", "be", "enough", "to", "close", "this", "issue", "now", "NUMBER", "Not", "a", "fan", "of", "having", "the", "future", "dep", "call", "out", "twice", "NUMBER", "Can", "we", "just", "fix", "our", "tox", "NUMBER", "ini", "to", "install", "run", "the", "test", "the", "same", "way", "we", "do", "for", "travis", "CI", "It", "caught", "my", "attention", "because", "I", "remember", "we", "were", "actually", "looking", "to", "upgrade", "future", "due", "to", "LINK", "You", "could", "also", "look", "at", "LINK", "for", "tox", "unification", "ideas", "NUMBER", "shipit", "I", "would", "still", "prefer", "if", "it", "were", "possible", "to", "use", "deps", "or", "some", "other", "tox", "functionality", "to", "not", "have", "to", "run", "the", "install", "script", "everytime", "even", "if", "it", "be", "a", "NUMBER", "second", "noop", "but", "if", "it", "s", "not", "possible", "let", "s", "go", "with", "this", "NUMBER", "Hi", "I", "be", "use", "Boto", "NUMBER", "to", "interact", "with", "a", "Eucalyptus", "cloud", "NUMBER", "Is", "there", "a", "way", "to", "do", "the", "equivalent", "of", "euca", "run", "instances", "addressing", "private", "NUMBER", "from", "a", "Boto", "script", "Basically", "I", "want", "no", "public", "IPs", "assigned", "when", "i", "spin", "up", "an", "ec", "NUMBER", "instance", "but", "this", "be", "a", "Eucalyptus", "cloud", "non", "VPC", "NUMBER", "Thanks", "Ok", "thanks", "NUMBER", "So", "far", "everything", "else", "has", "worked", "with", "no", "error", "NUMBER", "I", "ll", "see", "if", "I", "can", "figure", "out", "what", "the", "euca", "tool", "be", "doing", "NUMBER", "On", "Nov", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Kyle", "Knapp", "notifications", "github", "NUMBER", "com", "write", "So", "boto", "NUMBER", "do", "not", "have", "official", "support", "for", "Eucalyptus", "NUMBER", "Some", "operations", "may", "work", "because", "Eucalyptus", "has", "similar", "APIs", "to", "AWS", "but", "nothing", "be", "guaranteed", "NUMBER", "Unfortunately", "I", "be", "not", "super", "familiar", "with", "the", "Eucalyptus", "API", "NUMBER", "So", "I", "be", "not", "exactly", "sure", "how", "the", "Eucalyptus", "cli", "command", "converts", "to", "a", "boto", "NUMBER", "call", "NUMBER", "Would", "it", "be", "possible", "to", "get", "a", "log", "of", "what", "that", "Euclayptus", "cli", "be", "sending", "over", "the", "wire", "I", "may", "be", "able", "to", "convert", "it", "to", "a", "boto", "NUMBER", "call", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "Hello", "I", "m", "interested", "in", "this", "as", "well", "NUMBER", "Here", "s", "some", "debug", "output", "from", "the", "euca", "run", "instances", "command", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "method", "POST", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "url", "xxx", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "header", "Content", "Length", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "header", "Content", "Type", "application", "x", "www", "form", "urlencoded", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "header", "User", "Agent", "euca", "NUMBER", "ools", "NUMBER", "CPython", "NUMBER", "Linux", "NUMBER", "NUMBER", "amd", "NUMBER", "x", "NUMBER", "_", "NUMBER", "requestbuilder", "NUMBER", "request", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "header", "X", "Amz", "Date", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "data", "Action", "RunInstances", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "data", "AddressingType", "private", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "data", "ImageId", "emi", "xxx", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "data", "InstanceType", "m", "NUMBER", "small", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "data", "MaxCount", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "data", "MinCount", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "data", "Placement", "NUMBER", "AvailabilityZone", "myaz", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "data", "SecurityGroup", "NUMBER", "test", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "EC", "NUMBER", "request", "data", "Version", "NUMBER", "NUMBER", "NUMBER", "Looks", "like", "the", "eucalyptus", "specific", "parameter", "be", "AddressingType", "private", "NUMBER", "I", "d", "be", "happy", "to", "provide", "any", "more", "debugging", "info", "NUMBER", "Thanks", "in", "advance", "for", "checking", "this", "out", "NUMBER", "Thanks", "Andrew", "yeah", "thats", "what", "we", "see", "NUMBER", "I", "don", "t", "think", "there", "s", "anything", "we", "can", "do", "on", "our", "end", "NUMBER", "Comparing", "the", "API", "docs", "for", "ec", "NUMBER", "s", "RunInstances", "LINK", "_RunInstances", "NUMBER", "html", "I", "can", "see", "that", "AddressingType", "be", "not", "one", "of", "the", "parameters", "NUMBER", "The", "way", "you", "d", "do", "this", "with", "EC", "NUMBER", "would", "be", "to", "provide", "a", "NetworkInterfaces", "argument", "that", "had", "AssociatePublicIpAddress", "set", "to", "False", "NUMBER", "I", "d", "see", "if", "Eucalyptus", "support", "this", "NUMBER", "Trying", "to", "run", "tox", "on", "a", "clean", "checkout", "fail", "due", "to", "futures", "not", "be", "required", "in", "requirements", "NUMBER", "txt", "NUMBER", "As", "far", "as", "I", "can", "tell", "this", "was", "broken", "by", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "eaf", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "but", "the", "CI", "isn", "t", "catching", "it", "because", "the", "CI", "runs", "test", "differently", "i", "NUMBER", "e", "NUMBER", "doesn", "t", "use", "tox", "NUMBER", "tox", "py", "NUMBER", "create", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "NUMBER", "tox", "py", "NUMBER", "ERROR", "InterpreterNotFound", "python", "NUMBER", "py", "NUMBER", "install", "e", "git", "github", "NUMBER", "com", "boto", "botocore", "NUMBER", "git", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ddc", "NUMBER", "a", "NUMBER", "aaa", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ccdcc", "NUMBER", "eb", "egg", "botocore", "develop", "docutils", "NUMBER", "e", "git", "github", "NUMBER", "com", "boto", "jmespath", "NUMBER", "git", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "egg", "jmespath", "develop", "mock", "NUMBER", "nose", "NUMBER", "python", "dateutil", "NUMBER", "six", "NUMBER", "wheel", "NUMBER", "py", "NUMBER", "runtests", "PYTHONHASHSEED", "NUMBER", "py", "NUMBER", "runtests", "commands", "NUMBER", "nosetests", "test", "unit", "NUMBER", "S", "NUMBER", "EE", "NUMBER", "E", "NUMBER", "ERROR", "Failure", "ImportError", "No", "module", "named", "concurrent", "Traceback", "most", "recent", "call", "last", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "NUMBER", "tox", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "nose", "loader", "NUMBER", "py", "line", "NUMBER", "in", "loadTestsFromName", "addr", "NUMBER", "filename", "addr", "NUMBER", "module", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "NUMBER", "tox", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "nose", "importer", "NUMBER", "py", "line", "NUMBER", "in", "importFromPath", "return", "self", "NUMBER", "importFromDir", "dir_path", "fqname", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "NUMBER", "tox", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "nose", "importer", "NUMBER", "py", "line", "NUMBER", "in", "importFromDir", "mod", "load_module", "part_fqname", "fh", "filename", "desc", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "test", "unit", "s", "NUMBER", "test_inject", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "boto", "NUMBER", "s", "NUMBER", "import", "inject", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "boto", "NUMBER", "s", "NUMBER", "inject", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "S", "NUMBER", "Transfer", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "concurrent", "import", "futures", "ImportError", "No", "module", "named", "concurrent", "ERROR", "Failure", "ImportError", "No", "module", "named", "concurrent", "Traceback", "most", "recent", "call", "last", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "NUMBER", "tox", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "nose", "loader", "NUMBER", "py", "line", "NUMBER", "in", "loadTestsFromName", "addr", "NUMBER", "filename", "addr", "NUMBER", "module", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "NUMBER", "tox", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "nose", "importer", "NUMBER", "py", "line", "NUMBER", "in", "importFromPath", "return", "self", "NUMBER", "importFromDir", "dir_path", "fqname", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "NUMBER", "tox", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "nose", "importer", "NUMBER", "py", "line", "NUMBER", "in", "importFromDir", "mod", "load_module", "part_fqname", "fh", "filename", "desc", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "test", "unit", "s", "NUMBER", "test_transfer", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "concurrent", "import", "futures", "ImportError", "No", "module", "named", "concurrent", "ERROR", "test_import_module", "test", "NUMBER", "unit", "NUMBER", "test_utils", "NUMBER", "TestUtils", "Traceback", "most", "recent", "call", "last", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "test", "unit", "test_utils", "NUMBER", "py", "line", "NUMBER", "in", "test_import_module", "module", "utils", "NUMBER", "import_module", "boto", "NUMBER", "s", "NUMBER", "transfer", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "boto", "NUMBER", "utils", "NUMBER", "py", "line", "NUMBER", "in", "import_module", "__import__", "name", "File", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "concurrent", "import", "futures", "ImportError", "No", "module", "named", "concurrent", "Ran", "NUMBER", "test", "in", "NUMBER", "s", "FAILED", "SKIP", "NUMBER", "error", "NUMBER", "ERROR", "InvocationError", "home", "jon", "dev", "pkgs", "python", "boto", "NUMBER", "src", "boto", "NUMBER", "NUMBER", "tox", "py", "NUMBER", "bin", "nosetests", "test", "unit", "Closing", "out", "since", "the", "docs", "have", "be", "change", "significantly", "since", "then", "NUMBER", "If", "we", "have", "something", "specific", "we", "want", "to", "do", "we", "can", "open", "another", "issue", "NUMBER", "Like", "the", "upload_file", "and", "download_file", "methods", "provide", "by", "S", "NUMBER", "Transfer", "this", "provides", "copy_file", "methods", "for", "copying", "from", "one", "S", "NUMBER", "object", "to", "another", "NUMBER", "This", "handles", "parallel", "multipart", "uploads", "like", "upload_file", "for", "fast", "copies", "of", "large", "file", "NUMBER", "NUMBER", "Thanks", "for", "taking", "a", "look", "NUMBER", "It", "s", "basically", "a", "copy", "paste", "of", "MultipartUploader", "use", "upload_part_copy", "instead", "of", "upload_part", "NUMBER", "I", "test", "it", "on", "our", "scratch", "bucket", "vs", "awscli", "and", "it", "seems", "to", "be", "doing", "the", "right", "thing", "NUMBER", "Any", "update", "here", "It", "s", "be", "NUMBER", "months", "NUMBER", "NUMBER", "it", "would", "be", "very", "nice", "to", "have", "high", "level", "S", "NUMBER", "PUT", "COPY", "and", "multipart", "PUT", "COPY", "support", "NUMBER", "The", "S", "NUMBER", "transfer", "module", "provides", "convenient", "methods", "to", "upload", "and", "download", "file", "but", "it", "doesn", "t", "provide", "a", "way", "to", "copy", "file", "between", "buckets", "NUMBER", "That", "would", "be", "really", "helpful", "as", "it", "has", "all", "the", "nice", "multipart", "and", "multithreaded", "support", "to", "make", "the", "copies", "fast", "NUMBER", "PR", "ready", "in", "NUMBER", "I", "believe", "this", "provides", "all", "the", "parts", "necessary", "for", "a", "copy_file", "method", "analogous", "to", "upload_file", "NUMBER", "Im", "trying", "to", "create", "a", "new", "security", "group", "use", "this", "code", "NUMBER", "default_vpc_instance", "ec", "NUMBER", "_resource", "NUMBER", "Vpc", "default_vpc_id", "new_security_group", "default_vpc_instance", "NUMBER", "create_security_group", "Description", "rule_set", "rule", "description", "GroupName", "rule", "based", "on", "the", "documentation", "example", "NUMBER", "security_group", "vpc", "NUMBER", "create_security_group", "DryRun", "True", "False", "GroupName", "string", "Description", "string", "located", "here", "NUMBER", "LINK", "region", "EC", "NUMBER", "Vpc", "NUMBER", "create_security_group", "Upon", "execution", "I", "get", "a", "client", "error", "suggesting", "that", "the", "request", "needs", "a", "parameter", "of", "GroupDescription", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "configure", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "new_security_group", "default_vpc_instance", "NUMBER", "create_security_group", "Description", "rule_set", "rule", "description", "GroupName", "rule", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "MissingParameter", "when", "calling", "the", "CreateSecurityGroup", "operation", "The", "request", "must", "contain", "the", "parameter", "GroupDescription", "Attempts", "to", "use", "GroupDescription", "in", "place", "of", "Description", "result", "in", "another", "error", "NUMBER", "Missing", "required", "parameter", "in", "input", "Description", "Unknown", "parameter", "in", "input", "GroupDescription", "must", "be", "one", "of", "DryRun", "GroupName", "Description", "VpcId", "Any", "help", "would", "be", "most", "appreciated", "NUMBER", "Closing", "inactive", "issue", "NUMBER", "I", "run", "into", "this", "and", "the", "fix", "for", "me", "was", "change", "from", "single", "quotes", "to", "double", "quotes", "FYI", "There", "was", "a", "previous", "issue", "that", "briefly", "discussed", "this", "but", "was", "resolve", "NUMBER", "be", "trying", "to", "unzip", "and", "transfer", "file", "between", "two", "S", "NUMBER", "buckets", "use", "lambda", "NUMBER", "The", "issue", "be", "that", "these", "be", "bulk", "loaded", "file", "and", "be", "rather", "large", "some", "can", "get", "up", "to", "NUMBER", "GB", "NUMBER", "Right", "now", "I", "have", "to", "write", "everything", "into", "memory", "and", "so", "the", "function", "will", "fail", "has", "there", "be", "any", "additions", "for", "streaming", "that", "could", "help", "fix", "this", "The", "other", "idea", "I", "had", "was", "having", "the", "ability", "to", "attach", "a", "temporary", "EBS", "volume", "or", "along", "those", "lines", "to", "work", "as", "a", "temporary", "fix", "but", "unclear", "if", "this", "be", "possible", "NUMBER", "import", "json", "import", "urllib", "import", "boto", "NUMBER", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "S", "NUMBER", "Transfer", "from", "zipfile", "import", "ZipFile", "as", "zip", "print", "Loading", "function", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "transfer", "S", "NUMBER", "Transfer", "s", "NUMBER", "dump_bucket", "def", "lambda_handler", "event", "context", "print", "Received", "event", "json", "NUMBER", "dumps", "event", "indent", "NUMBER", "Get", "the", "object", "from", "the", "event", "and", "show", "its", "content", "type", "bucket", "event", "Records", "NUMBER", "s", "NUMBER", "bucket", "name", "key", "urllib", "NUMBER", "unquote_plus", "event", "Records", "NUMBER", "s", "NUMBER", "object", "key", "NUMBER", "decode", "utf", "NUMBER", "try", "response", "s", "NUMBER", "get_object", "Bucket", "bucket", "Key", "key", "s", "NUMBER", "download_file", "bucket", "key", "tmp", "file", "NUMBER", "zip", "zippedfile", "zip", "tmp", "file", "NUMBER", "zip", "namelist", "zippedfile", "NUMBER", "namelist", "for", "filename", "in", "namelist", "data", "zfile", "NUMBER", "read", "filename", "f", "open", "tmp", "str", "filename", "wb", "f", "NUMBER", "write", "data", "f", "NUMBER", "close", "transfer", "NUMBER", "upload_file", "tmp", "str", "filename", "dump_bucket", "namelist", "NUMBER", "except", "Exception", "as", "e", "print", "e", "print", "Error", "get", "object", "from", "bucket", "NUMBER", "Make", "sure", "they", "exist", "and", "your", "bucket", "be", "in", "the", "same", "region", "as", "this", "function", "NUMBER", "NUMBER", "format", "key", "bucket", "raise", "e", "Yeah", "I", "ended", "up", "just", "use", "a", "temporary", "ec", "NUMBER", "instead", "of", "all", "through", "lambda", "as", "there", "was", "no", "way", "to", "get", "around", "the", "disk", "space", "or", "memory", "issue", "NUMBER", "In", "this", "commit", "LINK", "the", "definition", "of", "Coverage", "was", "remove", "but", "the", "reference", "remained", "in", "README", "NUMBER", "rst", "NUMBER", "I", "see", "I", "ll", "try", "to", "get", "NUMBER", "support", "for", "botocore", "first", "NUMBER", "Now", "that", "the", "py", "NUMBER", "issue", "in", "botocore", "have", "be", "fix", "LINK", "I", "reran", "the", "travis", "build", "for", "the", "PR", "and", "everything", "looks", "good", "NUMBER", "I", "m", "going", "to", "go", "ahead", "and", "merge", "this", "now", "NUMBER", "According", "to", "the", "comments", "in", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "py", "it", "be", "possible", "for", "S", "NUMBER", "transfers", "to", "be", "throttled", "based", "on", "user", "configurable", "max", "bandwidth", "setting", "LINK", "L", "NUMBER", "I", "ve", "be", "browsing", "this", "repo", "as", "well", "as", "the", "botocore", "repo", "for", "the", "last", "NUMBER", "minutes", "or", "so", "but", "can", "t", "find", "any", "further", "reference", "to", "any", "throttling", "behaviour", "nor", "a", "configuration", "option", "for", "max", "bandwidth", "NUMBER", "Does", "this", "functionality", "exist", "or", "was", "it", "a", "planned", "feature", "that", "hasn", "t", "be", "implement", "yet", "If", "its", "the", "latter", "when", "be", "this", "functionality", "due", "to", "be", "completed", "I", "m", "currently", "doing", "long", "term", "uploads", "to", "S", "NUMBER", "and", "be", "looking", "for", "something", "to", "limit", "the", "bandwidth", "use", "in", "order", "to", "prevent", "network", "saturation", "NUMBER", "kyleknap", "We", "should", "probably", "remove", "that", "snippet", "from", "the", "docstrings", "though", "NUMBER", "The", "intent", "was", "to", "implement", "it", "in", "the", "initial", "version", "but", "given", "that", "it", "didn", "t", "make", "the", "first", "cut", "of", "this", "feature", "we", "should", "probably", "remove", "it", "until", "we", "support", "this", "so", "other", "users", "don", "t", "get", "confused", "NUMBER", "Thanks", "for", "the", "response", "NUMBER", "Unfortunately", "I", "don", "t", "think", "passing", "values", "for", "max_concurrency", "will", "help", "at", "least", "not", "for", "my", "use", "case", "NUMBER", "Essentially", "I", "want", "to", "be", "able", "to", "upload", "large", "backups", "into", "S", "NUMBER", "over", "the", "course", "of", "NUMBER", "or", "so", "hours", "without", "it", "saturating", "the", "network", "link", "and", "cause", "issue", "for", "other", "services", "NUMBER", "Reducing", "max_concurrency", "I", "feel", "will", "have", "very", "little", "if", "any", "effect", "on", "the", "total", "amount", "of", "bandwidth", "use", "NUMBER", "That", "be", "said", "I", "haven", "t", "had", "an", "opportunity", "to", "do", "a", "test", "yet", "NUMBER", "It", "would", "be", "great", "if", "this", "could", "be", "considered", "for", "a", "feature", "addition", "on", "either", "the", "AWS", "S", "NUMBER", "CLI", "or", "even", "just", "this", "particular", "library", "NUMBER", "Thus", "far", "I", "haven", "t", "be", "able", "to", "find", "a", "practical", "solution", "that", "will", "allow", "me", "to", "control", "bandwidth", "usage", "at", "least", "not", "on", "Windows", "platforms", "NUMBER", "This", "be", "the", "same", "as", "aws", "aws", "cli", "NUMBER", "Sorry", "to", "necropost", "but", "i", "feel", "if", "someone", "else", "had", "the", "same", "issue", "they", "wouldn", "t", "be", "resolving", "their", "issue", "with", "use", "trickle", "after", "seeing", "this", "post", "NUMBER", "Trickle", "and", "large", "s", "NUMBER", "file", "will", "cause", "the", "trickle", "to", "crash", "use", "boto", "NUMBER", "with", "NUMBER", "concurrent", "default", "settings", "uploads", "change", "the", "concurrent", "uploads", "will", "resolve", "the", "issue", "NUMBER", "I", "have", "a", "bucket", "without", "any", "tags", "which", "results", "in", "the", "error", "when", "trying", "to", "list", "them", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "ClientError", "An", "error", "occur", "NoSuchTagSet", "when", "calling", "the", "GetBucketTagging", "operation", "The", "TagSet", "do", "not", "exist", "I", "d", "expect", "it", "to", "return", "just", "an", "empty", "tag", "set", "like", "most", "other", "methods", "do", "NUMBER", "Yep", "I", "ve", "googled", "up", "this", "LINK", "sdk", "core", "ruby", "issue", "NUMBER", "issuecomment", "NUMBER", "in", "ruby", "sdk", "which", "raise", "my", "eyebrows", "NUMBER", "On", "one", "hand", "NUMBER", "be", "a", "deviant", "but", "sort", "of", "makes", "sense", "when", "out", "of", "context", "but", "in", "boto", "it", "s", "definitely", "an", "outsider", "NUMBER", "NUMBER", "to", "that", "NUMBER", "NUMBER", "Just", "hit", "this", "issue", "myself", "NUMBER", "will", "try", "catch", "for", "now", "After", "research", "it", "seems", "there", "be", "not", "much", "can", "be", "do", "here", "to", "change", "the", "behavior", "NUMBER", "NUMBER", "The", "underlying", "S", "NUMBER", "GetBucketTagging", "operation", "LINK", "RESTBucketGETtagging", "responses", "purposely", "defines", "the", "NoSuchTagSet", "scenario", "as", "a", "Special", "Error", "NUMBER", "Right", "now", "all", "AWS", "SDKs", "just", "follow", "this", "behavior", "NUMBER", "NUMBER", "Depending", "on", "the", "perception", "an", "empty", "list", "in", "this", "scenario", "be", "arguably", "a", "more", "intuitive", "behavior", "more", "on", "this", "later", "NUMBER", "But", "even", "if", "that", "be", "the", "case", "the", "proper", "place", "to", "address", "that", "be", "S", "NUMBER", "GetBucketTagging", "to", "return", "an", "empty", "list", "in", "first", "place", "and", "every", "SDK", "will", "naturally", "follow", "NUMBER", "We", "d", "rather", "NOT", "do", "some", "customization", "in", "SDK", "to", "revert", "a", "behavior", "already", "intentionally", "chosen", "by", "upstream", "service", "NUMBER", "Otherwise", "should", "some", "day", "in", "future", "this", "operation", "return", "all", "THREE", "possible", "return", "values", "as", "a", "non", "empty", "list", "an", "empty", "list", "and", "an", "explicit", "NoSuchTagSet", "error", "our", "SDK", "won", "t", "be", "able", "to", "differentiate", "between", "the", "last", "two", "NUMBER", "NUMBER", "Interestingly", "at", "the", "time", "of", "this", "write", "it", "turns", "out", "empty", "list", "be", "NOT", "even", "a", "proper", "value", "that", "can", "be", "accepted", "by", "put_bucket_tagging", "so", "it", "will", "be", "weird", "that", "if", "you", "could", "get", "an", "invalid", "value", "back", "from", "a", "get_bucket_tagging", "which", "you", "can", "not", "roundtrip", "back", "to", "put_bucket_tagging", "NUMBER", "NUMBER", "If", "you", "really", "want", "to", "dive", "deep", "the", "truth", "be", "from", "the", "API", "s", "perspective", "S", "NUMBER", "s", "TagSet", "has", "never", "be", "designed", "as", "a", "list", "unlike", "other", "tags", "such", "as", "tags", "in", "EC", "NUMBER", "NUMBER", "The", "web", "console", "may", "make", "you", "think", "otherwise", "but", "let", "s", "take", "a", "closer", "look", "into", "the", "underlying", "API", "NUMBER", "Its", "delete", "operation", "LINK", "see", "also", "our", "Boto", "NUMBER", "doc", "LINK", "S", "NUMBER", "BucketTagging", "NUMBER", "delete", "or", "botocore", "doc", "LINK", "S", "NUMBER", "Client", "NUMBER", "delete_bucket_tagging", "provides", "no", "semantics", "to", "delete", "one", "tag", "among", "the", "tag", "set", "NUMBER", "You", "can", "only", "delete", "the", "entire", "tag", "set", "NUMBER", "Similarly", "the", "put_bucket_tagging", "operation", "will", "overwrite", "all", "current", "tags", "rather", "than", "append", "some", "into", "them", "NUMBER", "Which", "means", "the", "real", "thing", "be", "Get", "Put", "Delete", "be", "actually", "a", "singular", "not", "a", "collection", "NUMBER", "It", "be", "just", "that", "this", "singular", "named", "TagSet", "contains", "something", "happens", "to", "be", "a", "list", "but", "TagSet", "itself", "be", "not", "a", "list", "NUMBER", "So", "you", "either", "have", "a", "TagSet", "or", "you", "don", "t", "NUMBER", "There", "be", "no", "such", "thing", "as", "empty", "list", "here", "NUMBER", "In", "short", "just", "use", "try", "except", "to", "catch", "that", "error", "NUMBER", "Can", "we", "clarify", "whether", "we", "be", "taking", "about", "clients", "or", "resources", "The", "original", "traceback", "didn", "t", "suggest", "resources", "but", "kyleknap", "s", "comments", "be", "use", "resources", "NUMBER", "I", "agree", "that", "we", "shouldn", "t", "change", "the", "low", "level", "client", "API", "but", "I", "still", "think", "at", "a", "high", "level", "we", "should", "try", "to", "improve", "what", "we", "have", "in", "the", "resource", "model", "especially", "if", "it", "s", "something", "we", "can", "model", "with", "some", "change", "to", "the", "resource", "spec", "NUMBER", "I", "definitely", "understand", "the", "customer", "request", "to", "succinctly", "get", "a", "set", "of", "tags", "modify", "them", "and", "update", "the", "bucket", "with", "the", "new", "tags", "NUMBER", "I", "m", "in", "favor", "of", "make", "that", "easier", "to", "do", "at", "the", "resource", "level", "NUMBER", "So", "to", "document", "the", "off", "line", "conversation", "NUMBER", "This", "be", "not", "a", "bug", "NUMBER", "And", "we", "be", "not", "going", "to", "change", "the", "low", "level", "client", "API", "behavior", "NUMBER", "It", "be", "still", "possible", "to", "do", "something", "in", "the", "higher", "level", "probably", "something", "similar", "to", "waiters", "NUMBER", "This", "be", "considered", "as", "a", "feature", "request", "NUMBER", "Hi", "I", "d", "really", "like", "to", "set", "up", "a", "Lambda", "integration", "with", "the", "API", "Gateway", "NUMBER", "I", "looked", "at", "the", "JS", "on", "the", "API", "Gateway", "Console", "and", "notice", "that", "there", "be", "a", "lambda", "integration", "type", "but", "when", "I", "use", "this", "in", "boto", "NUMBER", "I", "get", "the", "following", "error", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "ValidationException", "when", "calling", "the", "PutIntegration", "operation", "NUMBER", "validation", "error", "detected", "Value", "lambda", "at", "putIntegrationInput", "NUMBER", "type", "fail", "to", "satisfy", "constraint", "Member", "must", "satisfy", "enum", "value", "set", "HTTP", "MOCK", "AWS", "Do", "you", "have", "any", "plan", "to", "support", "Lambdas", "Thanks", "Robert", "That", "worked", "thanks", "NUMBER", "It", "took", "me", "a", "day", "or", "so", "to", "work", "out", "what", "the", "uri", "should", "be", "though", "NUMBER", "Also", "integrationHttpMethod", "be", "undocumented", "in", "the", "boto", "documentation", "NUMBER", "rainierwolfcastle", "can", "you", "mention", "the", "format", "of", "uri", "that", "worked", "for", "you", "I", "have", "be", "able", "to", "add", "the", "integration", "but", "lambda", "function", "be", "not", "get", "bound", "to", "it", "NUMBER", "When", "retrieving", "ec", "NUMBER", "instances", "we", "will", "occasionally", "get", "the", "following", "error", "from", "boto", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "collection", "NUMBER", "py", "line", "NUMBER", "in", "__iter__", "for", "page", "in", "self", "NUMBER", "pages", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "collection", "NUMBER", "py", "line", "NUMBER", "in", "pages", "for", "page", "in", "pages", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "__iter__", "response", "self", "NUMBER", "_make_request", "current_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "_make_request", "return", "self", "NUMBER", "_method", "current_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "operation_model", "attempts", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_get_response", "operation_model", "NUMBER", "output_shape", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "parse", "parsed", "self", "NUMBER", "_do_error_parse", "response", "shape", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_do_error_parse", "RequestId", "original", "NUMBER", "pop", "RequestID", "KeyError", "RequestID", "It", "appears", "some", "error", "happened", "on", "Amazon", "s", "side", "and", "there", "s", "no", "RequestID", "in", "the", "returned", "request", "NUMBER", "I", "have", "no", "reproducer", "since", "this", "happens", "intermittently", "NUMBER", "It", "might", "be", "worth", "having", "a", "default", "value", "of", "None", "if", "the", "RequestID", "doesn", "t", "exist", "in", "the", "response", "though", "NUMBER", "Unfortunately", "it", "happened", "in", "an", "alert", "and", "it", "s", "not", "easily", "reproducible", "since", "it", "likely", "requires", "AWS", "to", "fail", "NUMBER", "We", "have", "also", "modify", "the", "alert", "since", "we", "didn", "t", "need", "to", "use", "the", "AWS", "API", "NUMBER", "It", "was", "use", "the", "instances", "collection", "on", "the", "service", "resource", "NUMBER", "I", "think", "there", "be", "about", "NUMBER", "instances", "to", "iterate", "over", "so", "we", "don", "t", "have", "a", "lot", "of", "instances", "to", "iterate", "over", "NUMBER", "I", "have", "also", "stumbled", "upon", "this", "recently", "and", "get", "a", "bit", "of", "extra", "info", "I", "caught", "it", "through", "sentry", "File", "task", "aws_utils", "NUMBER", "py", "line", "NUMBER", "in", "describe_instances", "Filters", "filters", "NextToken", "next_token", "File", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "request", "operation_model", "attempts", "File", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_get_response", "parser", "NUMBER", "parse", "response_dict", "operation_model", "NUMBER", "output_shape", "File", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "parse", "parsed", "self", "NUMBER", "_do_error_parse", "response", "shape", "File", "botocore", "parsers", "NUMBER", "py", "line", "NUMBER", "in", "_do_error_parse", "RequestId", "original", "NUMBER", "pop", "RequestID", "sorry", "about", "the", "parsing", "for", "the", "following", "NUMBER", "original", "body", "b", "Http", "NUMBER", "Service", "Unavailable", "response", "body", "TAG", "TAG", "TAG", "Http", "NUMBER", "Service", "Unavailable", "TAG", "TAG", "TAG", "headers", "content", "length", "NUMBER", "connection", "close", "pragma", "no", "cache", "cache", "control", "no", "cache", "no", "store", "status_code", "NUMBER", "The", "old", "boto", "library", "had", "argument", "proxy", "proxy_port", "proxy_user", "and", "proxy_pass", "to", "allow", "connections", "to", "the", "API", "endpoints", "to", "go", "through", "a", "proxy", "NUMBER", "What", "be", "the", "boto", "NUMBER", "equivalent", "way", "of", "programmatically", "setting", "the", "proxy", "parameters", "i", "NUMBER", "e", "NUMBER", "not", "use", "the", "configuration", "file", "I", "have", "same", "issue", "NUMBER", "I", "cant", "event", "set", "proxy", "with", "global", "conf", "file", "placed", "in", "etc", "boto", "NUMBER", "cfg", "NUMBER", "I", "think", "this", "be", "a", "poor", "replacement", "NUMBER", "I", "might", "want", "to", "override", "what", "s", "in", "the", "environment", "variable", "without", "change", "it", "and", "cause", "side", "effect", "on", "other", "libraries", "or", "portions", "of", "a", "larger", "program", "NUMBER", "Also", "this", "environment", "variable", "be", "a", "very", "nix", "centric", "standard", "which", "IMHO", "be", "poor", "form", "for", "a", "portable", "library", "such", "as", "boto", "NUMBER", "I", "would", "strongly", "suggest", "that", "a", "way", "for", "this", "to", "be", "specified", "explicitly", "be", "available", "when", "a", "boto", "NUMBER", "connection", "be", "opened", "NUMBER", "I", "would", "agree", "with", "the", "above", "comment", "NUMBER", "I", "think", "it", "would", "be", "better", "if", "the", "proxies", "could", "be", "set", "via", "the", "config", "file", "and", "better", "still", "via", "the", "interface", "outlined", "in", "LINK", "Marking", "as", "a", "feature", "request", "NUMBER", "We", "also", "require", "this", "functionality", "NUMBER", "We", "need", "a", "clean", "way", "of", "indicating", "that", "boto", "uses", "the", "proxy", "while", "other", "services", "on", "the", "same", "machine", "do", "not", "NUMBER", "Effectively", "it", "boils", "down", "to", "local", "services", "don", "t", "require", "a", "proxy", "but", "internet", "services", "do", "NUMBER", "We", "re", "actually", "going", "to", "port", "our", "greenfield", "boto", "NUMBER", "code", "back", "to", "boto", "NUMBER", "now", "NUMBER", "Has", "there", "be", "any", "progress", "on", "this", "We", "require", "this", "for", "our", "organisation", "too", "NUMBER", "This", "be", "just", "another", "ping", "to", "find", "out", "what", "be", "going", "on", "with", "this", "feature", "NUMBER", "Same", "thing", "here", "NUMBER", "We", "need", "this", "functionality", "and", "currently", "we", "re", "backporting", "boto", "NUMBER", "code", "to", "boto", "NUMBER", "because", "of", "this", "NUMBER", "Please", "implement", "this", "feature", "NUMBER", "Same", "request", "but", "for", "make", "use", "of", "boto", "NUMBER", "run", "on", "AWS", "Lambda", "in", "a", "VPC", "to", "connect", "via", "a", "corporate", "proxy", "NUMBER", "Need", "to", "be", "able", "to", "set", "a", "proxy", "in", "the", "code", "as", "setting", "the", "environment", "variables", "has", "to", "be", "do", "before", "you", "instantiate", "the", "AWS", "clients", "NUMBER", "This", "means", "I", "can", "t", "pass", "them", "as", "parameters", "and", "they", "have", "to", "be", "hardcoded", "NUMBER", "I", "have", "the", "same", "issue", "from", "an", "internal", "network", "would", "love", "to", "see", "proper", "support", "for", "proxies", "any", "update", "any", "movement", "on", "this", "issue", "Seems", "silly", "that", "we", "d", "lose", "this", "functionality", "it", "s", "kind", "of", "a", "pain", "when", "run", "boto", "NUMBER", "bundled", "into", "something", "like", "apache", "NUMBER", "so", "it", "s", "not", "really", "run", "with", "the", "standard", "environment", "we", "have", "to", "utilize", "apache", "libs", "to", "pass", "in", "environment", "variables", "NUMBER", "So", "would", "add", "this", "as", "an", "option", "to", "the", "Config", "object", "propose", "here", "LINK", "issuecomment", "NUMBER", "be", "sufficient", "Something", "like", "ec", "NUMBER", "boto", "NUMBER", "client", "ec", "NUMBER", "config", "Config", "proxy", "http", "NUMBER", "jamesls", "A", "better", "solution", "than", "current", "but", "still", "preferred", "would", "be", "having", "the", "prior", "boto", "functionality", "of", "be", "able", "to", "specify", "it", "via", "a", "configuration", "file", "especially", "in", "terms", "of", "credentials", "storage", "NUMBER", "Ok", "so", "to", "capture", "both", "ideas", "you", "could", "ideally", "do", "either", "ec", "NUMBER", "boto", "NUMBER", "client", "ec", "NUMBER", "config", "Config", "proxy", "http", "NUMBER", "Or", "you", "could", "do", "cat", "NUMBER", "aws", "config", "default", "proxy", "LINK", "python", "import", "boto", "NUMBER", "boto", "NUMBER", "client", "ec", "NUMBER", "Would", "use", "the", "proxy", "settings", "NUMBER", "May", "I", "ask", "if", "this", "be", "on", "the", "roadmap", "The", "lack", "of", "this", "feature", "stops", "us", "from", "migrating", "to", "boto", "NUMBER", "from", "boto", "NUMBER", "in", "the", "smart_open", "LINK", "Technologies", "smart_open", "package", "NUMBER", "This", "be", "important", "for", "our", "use", "case", "also", "NUMBER", "Specifically", "setting", "the", "http", "proxy", "interferes", "with", "pip", "installs", "from", "our", "pip", "index", "NUMBER", "Hi", "please", "have", "a", "look", "at", "the", "following", "solution", "NUMBER", "LINK", "to", "add", "dns", "filtering", "to", "your", "nat", "instance", "with", "squid", "Apparently", "this", "would", "free", "us", "from", "the", "need", "of", "setting", "the", "HTTP", "proxy", "in", "every", "instance", "of", "the", "private", "subnet", "NUMBER", "What", "do", "you", "think", "This", "article", "describes", "one", "particular", "way", "of", "implement", "a", "transparent", "proxy", "NUMBER", "However", "some", "of", "us", "have", "to", "write", "Python", "program", "use", "boto", "that", "run", "on", "environments", "we", "don", "t", "control", "and", "where", "use", "an", "explicit", "proxy", "be", "a", "requirement", "NUMBER", "If", "you", "do", "control", "your", "network", "environment", "and", "can", "use", "a", "transparent", "proxy", "as", "a", "workaround", "for", "the", "lack", "of", "explicit", "proxy", "control", "in", "boto", "NUMBER", "then", "by", "all", "means", "do", "so", "NUMBER", "But", "IMHO", "the", "need", "to", "allow", "this", "configuration", "in", "boto", "NUMBER", "still", "remains", "as", "important", "as", "ever", "NUMBER", "Why", "be", "a", "regression", "marked", "as", "a", "feature", "anyway", "So", "you", "guys", "broke", "functionality", "and", "now", "consider", "fix", "it", "or", "revert", "actually", "a", "feature", "request", "Y", "all", "need", "Jesus", "NUMBER", "Submitted", "a", "PR", "LINK", "in", "botocore", "to", "plumb", "the", "proxies", "option", "from", "Config", "to", "the", "Endpoint", "NUMBER", "Happy", "to", "iterate", "on", "it", "if", "this", "be", "desirable", "and", "if", "there", "be", "some", "feedback", "on", "the", "patch", "NUMBER", "Hmmm", "export", "no_proxy", "NUMBER", "someservice", "NUMBER", "amazonaws", "NUMBER", "com", "Closing", "since", "timuralp", "s", "PR", "was", "merge", "NUMBER", "Feel", "free", "to", "open", "another", "issue", "if", "you", "have", "additional", "problem", "NUMBER", "Does", "boto", "NUMBER", "support", "s", "NUMBER", "s", "NUMBER", "multipart", "upload", "copy", "Documentation", "do", "not", "say", "anything", "about", "it", "NUMBER", "I", "find", "one", "here", "that", "it", "be", "not", "support", "NUMBER", "Correct", "me", "if", "i", "be", "miss", "some", "thing", "LINK", "module", "boto", "NUMBER", "s", "NUMBER", "transfer", "LINK", "_modules", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "html", "JordonPhillips", "Thanks", "for", "your", "reply", "it", "clears", "my", "doubt", "NUMBER", "I", "would", "go", "with", "exist", "boto", "library", "which", "do", "have", "this", "support", "NUMBER", "I", "d", "like", "to", "drag", "this", "one", "back", "out", "NUMBER", "I", "really", "need", "to", "use", "boto", "NUMBER", "to", "do", "an", "s", "NUMBER", "s", "NUMBER", "multipart", "transfer", "NUMBER", "I", "do", "not", "want", "to", "use", "the", "old", "boto", "NUMBER", "Can", "you", "gave", "me", "a", "quick", "rundown", "on", "what", "the", "NUMBER", "API", "calls", "entail", "and", "what", "operations", "could", "be", "strung", "together", "to", "accomplish", "this", "Hi", "This", "be", "my", "traceback", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "mp_make_env", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "ToPort", "port", "File", "Users", "teran", "repos", "public", "boto", "NUMBER", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "Users", "teran", "repos", "public", "boto", "NUMBER", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "Users", "teran", "repos", "public", "boto", "NUMBER", "venv", "src", "botocore", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "Users", "teran", "repos", "public", "boto", "NUMBER", "venv", "src", "botocore", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidPermission", "NUMBER", "Malformed", "when", "calling", "the", "AuthorizeSecurityGroupIngress", "operation", "TCP", "UDP", "port", "NUMBER", "out", "of", "range", "Code", "snippet", "be", "the", "following", "for", "port", "in", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "security_group", "NUMBER", "authorize_ingress", "IpPermissions", "IpProtocol", "tcp", "ToPort", "port", "I", "m", "use", "boto", "NUMBER", "in", "a", "venv", "at", "cf", "NUMBER", "d", "NUMBER", "ba", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "df", "NUMBER", "fce", "NUMBER", "ade", "NUMBER", "a", "NUMBER", "Do", "you", "know", "if", "I", "m", "doing", "something", "wrong", "or", "if", "this", "be", "a", "bug", "Thank", "you", "Thank", "you", "I", "just", "realized", "my", "confusion", "NUMBER", "FromPort", "be", "the", "beginning", "of", "the", "port", "range", "NUMBER", "ToPort", "be", "the", "end", "of", "the", "port", "range", "NUMBER", "This", "be", "exceptionally", "confusing", "as", "I", "as", "thinking", "it", "was", "source", "destination", "port", "NUMBER", "Could", "it", "eventually", "be", "renamed", "to", "PortRangeStart", "and", "PortRangeEnd", "or", "something", "similar", "Teran", "I", "be", "use", "boto", "NUMBER", "in", "the", "context", "of", "AWS", "Lambda", "which", "bills", "us", "for", "each", "slice", "of", "NUMBER", "ms", "elapse", "processing", "a", "script", "NUMBER", "The", "biggest", "share", "of", "my", "processing", "time", "be", "spent", "initializing", "boto", "NUMBER", "runtime", "clients", "and", "resources", "NUMBER", "For", "instance", "by", "batching", "NUMBER", "items", "I", "notice", "that", "the", "first", "item", "took", "NUMBER", "seconds", "to", "complete", "then", "it", "took", "less", "than", "NUMBER", "second", "to", "complete", "the", "rest", "of", "the", "items", "NUMBER", "This", "makes", "individual", "request", "very", "costly", "NUMBER", "Occasionally", "AWS", "seems", "to", "re", "use", "the", "runtime", "context", "for", "different", "request", "when", "items", "be", "come", "in", "fast", "enough", "NUMBER", "On", "these", "occasions", "I", "also", "notice", "a", "total", "runtime", "of", "less", "than", "NUMBER", "ms", "average", "even", "though", "the", "handler", "function", "received", "a", "single", "item", "NUMBER", "Even", "though", "AWS", "Lambda", "provides", "the", "boto", "NUMBER", "package", "I", "wouldn", "t", "mind", "packaging", "a", "homebrewed", "static", "version", "of", "the", "package", "with", "my", "code", "if", "that", "can", "save", "me", "a", "few", "seconds", "NUMBER", "But", "I", "m", "not", "sure", "where", "to", "start", "or", "if", "this", "be", "even", "possible", "given", "boto", "NUMBER", "s", "dynamic", "model", "NUMBER", "Make", "sure", "you", "be", "creating", "your", "session", "once", "in", "the", "module", "itself", "and", "use", "it", "globally", "along", "with", "any", "clients", "or", "resources", "NUMBER", "As", "long", "as", "your", "Lambda", "function", "be", "get", "call", "regularly", "this", "code", "won", "t", "have", "to", "be", "re", "run", "NUMBER", "I", "have", "find", "that", "as", "long", "as", "the", "Lambda", "container", "be", "hot", "the", "performance", "be", "quite", "good", "NUMBER", "Also", "bumping", "up", "the", "memory", "also", "improves", "your", "CPU", "performance", "NUMBER", "I", "use", "the", "max", "of", "NUMBER", "for", "everything", "NUMBER", "Thanks", "for", "the", "insights", "I", "ll", "definitely", "switch", "for", "clients", "instead", "of", "resources", "and", "see", "if", "this", "improves", "the", "processing", "time", "NUMBER", "next", "week", "garnaat", "I", "wonder", "if", "the", "tradeoff", "of", "paying", "more", "per", "NUMBER", "ms", "slice", "really", "worth", "it", "considering", "that", "I", "can", "get", "sub", "NUMBER", "ms", "pass", "if", "everything", "be", "hot", "NUMBER", "As", "you", "said", "when", "the", "lambda", "be", "be", "call", "in", "shortly", "after", "a", "previous", "run", "I", "can", "get", "these", "sub", "NUMBER", "ms", "pass", "NUMBER", "JordonPhillips", "isn", "t", "there", "anything", "along", "the", "lines", "of", "Pickle", "that", "could", "improve", "performance", "I", "have", "code", "a", "dynamic", "REST", "client", "on", "top", "of", "our", "generic", "API", "definitions", "in", "python", "and", "I", "can", "either", "generate", "them", "in", "memory", "at", "runtime", "or", "output", "static", "file", "that", "can", "be", "reimported", "later", "on", "NUMBER", "The", "latter", "lets", "me", "use", "the", "APIs", "without", "a", "definition", "handy", "and", "also", "feeds", "a", "package", "while", "the", "former", "be", "useful", "when", "we", "re", "actually", "work", "on", "that", "API", "definition", "NUMBER", "With", "some", "effort", "don", "t", "you", "think", "boto", "NUMBER", "could", "also", "output", "a", "static", "and", "importable", "version", "of", "what", "it", "can", "generate", "at", "runtime", "jamesls", "for", "starters", "I", "enclose", "most", "imports", "and", "long", "initializations", "into", "little", "memoized", "function", "NUMBER", "Importing", "at", "the", "module", "level", "be", "not", "a", "good", "idea", "in", "Lambda", "context", "if", "the", "import", "be", "not", "use", "in", "all", "code", "paths", "NUMBER", "For", "that", "reason", "I", "always", "import", "just", "in", "time", "within", "the", "function", "s", "scope", "and", "the", "memoized", "approach", "results", "in", "instant", "subsquent", "imports", "from", "any", "scope", "memoize", "def", "botoclient", "service", "region_name", "return", "_import_boto", "NUMBER", "NUMBER", "client", "service", "region_name", "region_name", "memoize", "def", "botoresource", "service", "region_name", "return", "_import_boto", "NUMBER", "NUMBER", "resource", "service", "region_name", "region_name", "memoize", "def", "_import_boto", "NUMBER", "import", "boto", "NUMBER", "return", "boto", "NUMBER", "My", "main", "handler", "handles", "a", "DynamoDB", "stream", "and", "dispatches", "the", "work", "to", "other", "Lambda", "function", "NUMBER", "Entering", "that", "if", "be", "a", "NUMBER", "ms", "deal", "because", "of", "the", "boto", "NUMBER", "stuff", "NUMBER", "If", "there", "be", "no", "inserts", "the", "function", "terminates", "within", "NUMBER", "ms", "NUMBER", "def", "handle_dynamodb", "event", "context", "streams", "event", "Records", "inserts", "for", "s", "in", "streams", "if", "s", "eventName", "INSERT", "inserts", "NUMBER", "append", "s", "if", "inserts", "from", "perf", "import", "botoclient", "botoclient", "lambda", "streams", "NUMBER", "awsRegion", "NUMBER", "invoke", "FunctionName", "that", "other", "lambda", "InvocationType", "Event", "Payload", "json", "NUMBER", "dumps", "Records", "inserts", "The", "other", "lambda", "be", "call", "be", "the", "one", "that", "takes", "NUMBER", "seconds", "to", "complete", "at", "worst", "NUMBER", "It", "takes", "an", "EC", "NUMBER", "ID", "and", "must", "identify", "where", "it", "belongs", "in", "OpsWorks", "then", "it", "must", "update", "the", "DynamoDB", "record", "with", "the", "newly", "fetched", "information", "NUMBER", "The", "OpsWorks", "API", "relies", "on", "OpsWorks", "IDs", "but", "the", "EC", "NUMBER", "tags", "only", "contain", "names", "so", "it", "s", "a", "bit", "far", "stretched", "and", "requires", "enumerating", "stacks", "and", "describing", "instances", "in", "stacks", "then", "enumerating", "them", "again", "NUMBER", "NUMBER", "It", "uses", "NUMBER", "resources", "EC", "NUMBER", "Instance", "and", "DynamoDB", "NUMBER", "Table", "and", "one", "client", "OpsWorks", "NUMBER", "Using", "extend", "logging", "I", "was", "able", "to", "see", "that", "API", "calls", "and", "data", "processing", "was", "insanely", "quick", "usually", "below", "NUMBER", "ms", "seconds", "total", "while", "creating", "the", "resources", "before", "the", "API", "calls", "use", "more", "than", "NUMBER", "seconds", "NUMBER", "Here", "s", "the", "gist", "of", "it", "def", "identify_ec", "NUMBER", "instance_id", "logger", "NUMBER", "info", "Launching", "identification", "process", "for", "s", "instance_id", "from", "perf", "import", "botoresource", "instance", "botoresource", "ec", "NUMBER", "us", "east", "NUMBER", "NUMBER", "Instance", "instance_id", "instance", "NUMBER", "load", "this", "calls", "describe_instance", "and", "caches", "the", "data", "tags", "_tags_to_dict", "instance", "NUMBER", "tags", "global", "info", "that", "should", "be", "available", "on", "all", "EC", "NUMBER", "instances", "identification", "ec", "NUMBER", "True", "environment", "tags", "NUMBER", "get", "my", "environment", "None", "instance_type", "instance", "NUMBER", "instance_type", "instance_name", "tags", "NUMBER", "get", "Name", "launch_time", "str", "instance", "NUMBER", "launch_time", "private_ip", "instance", "NUMBER", "private_ip_address", "if", "opsworks", "instance", "in", "tags", "identification", "NUMBER", "append", "opsworks", "True", "layer", "name", "needs", "a", "bit", "of", "processing", "since", "the", "shortname", "be", "in", "the", "key", "multi", "layer", "instances", "be", "not", "support", "for", "layer_key", "in", "tags", "NUMBER", "keys", "if", "layer_key", "NUMBER", "artswith", "opsworks", "layer", "break", "else", "logger", "NUMBER", "error", "Unable", "to", "detect", "layer", "name", "for", "instance", "s", "instance_id", "stack_name", "tags", "opsworks", "stack", "identification", "ow_name", "tags", "opsworks", "instance", "layer_short_name", "layer_key", "NUMBER", "layer_name", "tags", "layer_key", "stack_name", "stack_name", "identify", "the", "owner", "stack", "layer", "ID", "from", "perf", "import", "botoclient", "ow_client", "botoclient", "opsworks", "us", "east", "NUMBER", "opsworks", "be", "region", "agnostic", "stacks", "ow_client", "NUMBER", "describe_stacks", "Stacks", "list", "of", "dicts", "if", "not", "stacks", "logging", "NUMBER", "error", "No", "stack", "to", "process", "NUMBER", "for", "stack", "in", "stacks", "if", "stack", "Name", "stack_name", "break", "else", "logger", "NUMBER", "error", "Unable", "to", "detect", "stack", "for", "instance", "s", "instance_id", "return", "identify", "the", "instance", "within", "the", "stack", "instances", "ow_client", "NUMBER", "describe_instances", "StackId", "stack", "StackId", "Instances", "for", "instance", "in", "instances", "if", "instance", "NUMBER", "get", "Ec", "NUMBER", "InstanceId", "instance_id", "identification", "stack_id", "instance", "StackId", "layer_id", "instance", "LayerIds", "NUMBER", "ow_instance_id", "instance", "InstanceId", "break", "else", "logger", "NUMBER", "error", "Unable", "to", "locate", "instance", "within", "opsworks", "s", "instance_id", "there", "was", "no", "need", "for", "these", "info", "so", "we", "just", "keep", "a", "flag", "if", "elasticbeanstalk", "environment", "id", "in", "tags", "identification", "NUMBER", "append", "elasticbeanstalk", "True", "if", "aws", "cloudformation", "logical", "id", "in", "tags", "identification", "NUMBER", "append", "cloudformation", "True", "logger", "NUMBER", "info", "Identification", "complete", "NUMBER", "return", "identification", "muikrad", "I", "think", "your", "trick", "to", "not", "import", "until", "you", "need", "it", "doesn", "t", "help", "as", "much", "as", "it", "would", "on", "your", "system", "since", "Lambda", "optimizes", "the", "import", "stage", "more", "aggressively", "NUMBER", "In", "general", "moving", "re", "use", "initialization", "to", "the", "module", "level", "can", "speed", "things", "up", "since", "Lambda", "can", "keep", "those", "warm", "NUMBER", "At", "the", "moment", "I", "don", "t", "know", "that", "there", "s", "anything", "else", "I", "can", "recommend", "for", "your", "snippet", "NUMBER", "Sorry", "for", "taking", "so", "long", "to", "get", "back", "to", "you", "No", "problem", "JordonPhillips", "NUMBER", "That", "snippet", "actually", "went", "to", "hell", "since", "I", "also", "agree", "with", "you", "on", "the", "jit", "import", "thing", "the", "time", "lost", "importing", "at", "the", "module", "level", "be", "not", "significant", "when", "compared", "to", "the", "time", "lost", "with", "API", "calls", "in", "general", "NUMBER", "I", "can", "t", "find", "any", "reference", "to", "S", "NUMBER", "calling", "format", "in", "boto", "NUMBER", "At", "first", "I", "thought", "it", "was", "just", "a", "documentation", "oversight", "but", "I", "can", "t", "find", "anything", "like", "that", "in", "the", "source", "code", "either", "though", "the", "source", "code", "be", "completely", "different", "from", "boto", "NUMBER", "so", "maybe", "I", "just", "don", "t", "know", "what", "to", "look", "for", "NUMBER", "Is", "this", "feature", "gone", "Without", "OrdinaryCallingFormat", "be", "it", "now", "impossible", "to", "use", "this", "with", "fake", "s", "NUMBER", "LINK", "s", "NUMBER", "I", "find", "this", "page", "LINK", "____________overviewi_m_trying_to_overwrite_certain_variables_in_boto", "NUMBER", "_using_configuration_file", "question_detail", "NUMBER", "overwrite_s", "NUMBER", "_endpoint_using_boto", "NUMBER", "_configuration_file", "which", "suggests", "this", "will", "help", "from", "botocore", "NUMBER", "utils", "import", "fix_s", "NUMBER", "_host", "resource", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "meta", "NUMBER", "events", "NUMBER", "unregister", "before", "sign", "NUMBER", "s", "NUMBER", "fix_s", "NUMBER", "_host", "but", "it", "doesn", "t", "seem", "to", "make", "a", "difference", "NUMBER", "Here", "s", "the", "simplified", "test", "case", "I", "m", "work", "with", "import", "boto", "NUMBER", "from", "StringIO", "import", "StringIO", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "aws_access_key_id", "NUMBER", "aws_secret_access_key", "NUMBER", "region_name", "NUMBER", "s", "NUMBER", "session", "NUMBER", "resource", "s", "NUMBER", "endpoint_url", "LINK", "use_ssl", "False", "bucket", "s", "NUMBER", "Bucket", "my", "local", "bucket", "obj", "bucket", "NUMBER", "Object", "key", "my", "test", "key", "obj", "NUMBER", "put", "StringIO", "abc", "obj", "bucket", "NUMBER", "Object", "key", "my", "test", "key", "obj", "NUMBER", "get", "Body", "NUMBER", "read", "returns", "the", "empty", "string", "The", "documentation", "doesn", "t", "say", "but", "empirically", "it", "seems", "the", "keys", "pass", "to", "Session", "can", "t", "be", "None", "but", "they", "can", "be", "any", "string", "NUMBER", "jamesls", "Thanks", "for", "the", "tip", "I", "add", "that", "config", "file", "but", "it", "doesn", "t", "seem", "to", "make", "any", "difference", "in", "my", "test", "case", "NUMBER", "I", "tried", "change", "the", "value", "from", "path", "to", "xyz", "and", "get", "an", "error", "so", "I", "ve", "confirmed", "it", "s", "reading", "that", "file", "NUMBER", "I", "m", "still", "get", "the", "empty", "string", "back", "from", "the", "NUMBER", "read", "call", "in", "my", "test", "NUMBER", "Also", "if", "I", "have", "a", "network", "connected", "it", "takes", "around", "NUMBER", "NUMBER", "seconds", "for", "either", "put", "or", "get", "to", "return", "so", "it", "seems", "to", "be", "trying", "to", "hit", "some", "actual", "S", "NUMBER", "servers", "and", "timing", "out", "NUMBER", "From", "looking", "at", "botocore", "client", "NUMBER", "py", "it", "looks", "like", "addressing_style", "path", "causes", "fix_s", "NUMBER", "_host", "to", "be", "unregistered", "automatically", "which", "be", "good", "NUMBER", "It", "looks", "like", "I", "ve", "get", "some", "more", "investigation", "to", "do", "here", "but", "at", "least", "I", "find", "where", "calling", "format", "went", "NUMBER", "Thanks", "It", "might", "help", "to", "turn", "on", "debug", "logging", "to", "see", "what", "endpoints", "it", "s", "trying", "to", "connect", "to", "NUMBER", "At", "the", "top", "of", "your", "script", "you", "can", "add", "import", "boto", "NUMBER", "boto", "NUMBER", "set_stream_logger", "name", "And", "it", "will", "print", "out", "debug", "logs", "to", "stderr", "NUMBER", "OK", "I", "did", "that", "and", "tried", "run", "my", "program", "which", "uploads", "a", "file", "and", "then", "downloads", "it", "while", "not", "connected", "to", "the", "network", "at", "all", "NUMBER", "All", "the", "logs", "point", "to", "localhost", "NUMBER", "and", "nothing", "mentions", "AWS", "or", "any", "other", "external", "server", "NUMBER", "So", "far", "so", "good", "NUMBER", "In", "FakeS", "NUMBER", "it", "s", "creating", "a", "file", "with", "all", "my", "metadata", "field", "which", "be", "a", "good", "start", "NUMBER", "It", "has", "size", "NUMBER", "though", "both", "in", "the", "metadata", "record", "and", "the", "content", "record", "itself", "NUMBER", "After", "some", "investigation", "I", "get", "uploading", "to", "FakeS", "NUMBER", "to", "work", "NUMBER", "The", "trick", "was", "here", "LINK", "key", "metadata", "NUMBER", "The", "documentation", "makes", "it", "look", "to", "me", "like", "you", "can", "call", "key", "NUMBER", "put", "Metadata", "NUMBER", "to", "set", "metadata", "on", "a", "key", "but", "in", "fact", "this", "replaces", "everything", "associated", "with", "the", "key", "with", "just", "that", "metadata", "dict", "NUMBER", "In", "other", "words", "if", "you", "do", "NUMBER", "put", "Body", "NUMBER", "and", "then", "NUMBER", "put", "Metadata", "NUMBER", "the", "second", "one", "wins", "and", "wipes", "out", "the", "first", "one", "NUMBER", "Perhaps", "I", "was", "be", "too", "literal", "with", "the", "documentation", "but", "it", "was", "not", "at", "all", "clear", "to", "me", "that", "NUMBER", "put", "Body", "NUMBER", "Metadata", "NUMBER", "be", "what", "s", "required", "here", "NUMBER", "Anyway", "thanks", "for", "the", "debugging", "tips", "It", "seems", "that", "generate_presigned_url", "mention", "in", "NUMBER", "calls", "fix_s", "NUMBER", "_host", "and", "since", "it", "doesn", "t", "go", "through", "the", "events", "system", "it", "s", "not", "possible", "to", "unregister", "that", "NUMBER", "That", "might", "be", "boto", "botocore", "NUMBER", "or", "relate", "to", "it", "NUMBER", "From", "reading", "the", "source", "I", "find", "a", "workaround", "just", "claim", "that", "my", "FakeS", "NUMBER", "be", "in", "region", "us", "gov", "west", "NUMBER", "It", "s", "one", "of", "two", "RESTRICTED_REGIONS", "whose", "hosts", "be", "never", "fix", "by", "that", "method", "NUMBER", "Apart", "from", "setting", "this", "in", "the", "config", "file", "be", "there", "a", "way", "of", "programmatically", "setting", "it", "Will", "I", "have", "to", "wait", "for", "LINK", "to", "be", "approved", "themanifold", "I", "haven", "t", "find", "a", "way", "to", "set", "Boto", "NUMBER", "config", "without", "a", "config", "file", "no", "NUMBER", "I", "would", "agree", "that", "it", "s", "pretty", "weird", "to", "require", "a", "user", "dotfile", "for", "this", "NUMBER", "I", "wonder", "what", "the", "motivation", "for", "that", "was", "NUMBER", "That", "s", "the", "wrong", "scope", "for", "these", "settings", "NUMBER", "But", "the", "resource", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "meta", "NUMBER", "events", "NUMBER", "unregister", "before", "sign", "NUMBER", "s", "NUMBER", "fix_s", "NUMBER", "_host", "line", "do", "work", "and", "that", "s", "all", "that", "the", "old", "calling", "format", "really", "accomplished", "anyway", "NUMBER", "Between", "that", "and", "use", "the", "fake", "us", "gov", "west", "NUMBER", "region", "to", "avoid", "fix_s", "NUMBER", "_host", "in", "other", "places", "I", "m", "able", "to", "use", "a", "non", "AWS", "S", "NUMBER", "like", "server", "just", "fine", "NUMBER", "It", "s", "a", "lot", "more", "complicated", "and", "less", "well", "documented", "than", "Boto", "NUMBER", "but", "it", "works", "NUMBER", "themanifold", "Yes", "once", "NUMBER", "be", "merge", "this", "be", "how", "you", "ll", "set", "this", "when", "you", "create", "a", "resource", "NUMBER", "I", "ll", "take", "a", "look", "at", "this", "PR", "NUMBER", "NUMBER", "be", "merge", "closing", "out", "issue", "NUMBER", "Also", "kengruven", "that", "latest", "issue", "you", "re", "run", "into", "be", "the", "same", "as", "boto", "botocore", "NUMBER", "Let", "s", "track", "that", "issue", "over", "there", "NUMBER", "There", "be", "various", "web", "pages", "that", "recommend", "use", "boto", "NUMBER", "manage", "NUMBER", "cmdshell", "but", "it", "s", "not", "here", "and", "it", "s", "not", "mention", "in", "the", "migration", "guide", "NUMBER", "I", "m", "having", "some", "trouble", "get", "paramiko", "to", "do", "what", "I", "need", "so", "I", "wonder", "if", "there", "be", "an", "alternative", "NUMBER", "Closing", "inactive", "conversation", "NUMBER", "Uploading", "to", "dynamodb", "from", "scripts", "run", "in", "terminal", "cmd", "prompt", "NUMBER", "But", "after", "bundling", "into", "NUMBER", "app", "or", "NUMBER", "exe", "use", "pyinstaller", "the", "following", "error", "appear", "for", "both", "python", "v", "NUMBER", "and", "v", "NUMBER", "on", "OSX", "and", "Windows", "python", "v", "NUMBER", "OSX", "NUMBER", "File", "Users", "cuddergambino", "Code", "NVDrones", "DynamoDB", "python", "NVConnectApp", "NVServer", "NUMBER", "py", "line", "NUMBER", "in", "createDynamoSession", "dynamodb", "session", "NUMBER", "resource", "dynamodb", "endpoint_url", "LINK", "west", "NUMBER", "amazonaws", "NUMBER", "com", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "resource", "service_name", "resources", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "_wrapper", "data", "func", "self", "_args", "_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "determine_latest_version", "return", "max", "self", "NUMBER", "list_api_versions", "service_name", "type_name", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "_wrapper", "data", "func", "self", "_args", "_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "list_api_versions", "raise", "DataNotFoundError", "data_path", "service_name", "DataNotFoundError", "Unable", "to", "load", "data", "for", "dynamodb", "python", "v", "NUMBER", "Windows", "NUMBER", "File", "C", "Users", "cuddergambino", "Documents", "workspace", "NVConnectApp", "NVServer", "NUMBER", "py", "li", "ne", "NUMBER", "in", "createDynamoSession", "dynamodb", "session", "NUMBER", "resource", "dynamodb", "endpoint_url", "LINK", "we", "st", "NUMBER", "amazonaws", "NUMBER", "com", "File", "C", "Python", "NUMBER", "lib", "site", "package", "boto", "NUMBER", "session", "NUMBER", "py", "line", "NUMBER", "in", "resource", "service_name", "resources", "NUMBER", "File", "C", "Python", "NUMBER", "lib", "site", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "_wrappe", "r", "data", "func", "self", "_args", "_kwargs", "File", "C", "Python", "NUMBER", "lib", "site", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "determi", "ne_latest_version", "return", "max", "self", "NUMBER", "list_api_versions", "service_name", "type_name", "File", "C", "Python", "NUMBER", "lib", "site", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "_wrappe", "r", "data", "func", "self", "_args", "_kwargs", "File", "C", "Python", "NUMBER", "lib", "site", "package", "botocore", "loaders", "NUMBER", "py", "line", "NUMBER", "in", "list_ap", "i_versions", "raise", "DataNotFoundError", "data_path", "service_name", "botocore", "NUMBER", "exception", "NUMBER", "DataNotFoundError", "Unable", "to", "load", "data", "for", "dynamodb", "The", "documentation", "claims", "that", "the", "returned", "Body", "parameter", "be", "a", "bytes", "object", "NUMBER", "I", "be", "instead", "get", "a", "botocore", "NUMBER", "response", "NUMBER", "StreamingBody", "response", "NUMBER", "I", "can", "find", "no", "documentation", "for", "this", "object", "NUMBER", "hth", "result", "s", "NUMBER", "get_object", "Bucket", "BUCKET", "Key", "KEY", "return", "result", "Body", "NUMBER", "read", "result", "ContentLength", "how", "do", "you", "set", "s", "NUMBER", "v", "NUMBER", "signature", "when", "your", "use", "boto", "NUMBER", "as", "a", "library", "dropping", "into", "config", "a", "doesn", "t", "seem", "to", "work", "and", "b", "be", "suboptimal", "for", "library", "usage", "configuration", "NUMBER", "Is", "there", "a", "way", "to", "set", "it", "in", "code", "I", "d", "love", "to", "see", "support", "for", "the", "new", "EC", "NUMBER", "Run", "command", "LINK", "ec", "NUMBER", "run", "command", "remote", "instance", "management", "at", "scale", "Here", "s", "the", "commit", "that", "Jordon", "be", "referring", "to", "boto", "botocore", "d", "NUMBER", "c", "NUMBER", "A", "feature", "like", "the", "ruby", "sdk", "v", "NUMBER", "AssumeRoleCredentials", "method", "would", "be", "very", "useful", "NUMBER", "LINK", "In", "short", "a", "way", "to", "provide", "boto", "NUMBER", "with", "the", "ARN", "of", "an", "IAM", "role", "to", "assume", "and", "it", "will", "handle", "generating", "the", "credentials", "and", "refreshing", "them", "when", "they", "expire", "NUMBER", "I", "m", "sending", "a", "peering", "connection", "request", "with", "create_vpc_peering_connection", "and", "want", "to", "know", "the", "accepter", "vpc", "cidr", "but", "the", "response", "doesn", "t", "contain", "accepter", "cidr", "NUMBER", "As", "I", "write", "this", "I", "m", "realising", "that", "this", "might", "be", "a", "security", "relate", "issue", "and", "cidr", "be", "not", "there", "on", "purpose", "NUMBER", "If", "that", "s", "the", "case", "please", "consider", "update", "the", "docs", "this", "also", "concerns", "describe_peering_connections", "it", "also", "doesn", "t", "return", "accepter", "cidr", "while", "connection", "be", "in", "initiating", "pending", "state", "NUMBER", "This", "be", "between", "two", "different", "accounts", "NUMBER", "Yes", "once", "the", "request", "gets", "accepted", "the", "cidr", "also", "becomes", "available", "NUMBER", "After", "some", "investigation", "it", "seems", "this", "be", "a", "service", "documentation", "issue", "NUMBER", "I", "ll", "let", "the", "service", "team", "know", "so", "they", "can", "clarify", "their", "docs", "NUMBER", "This", "pull", "request", "add", "a", "config", "argument", "to", "the", "boto", "NUMBER", "resource", "boto", "NUMBER", "session", "NUMBER", "resource", "function", "NUMBER", "This", "allows", "passing", "in", "a", "custom", "config", "to", "programatically", "set", "a", "signature", "version", "an", "s", "NUMBER", "addressing", "style", "or", "any", "other", "argument", "from", "the", "botocore", "client", "config", "NUMBER", "It", "was", "do", "this", "way", "over", "passing", "a", "client", "argument", "in", "as", "suggested", "in", "NUMBER", "because", "it", "prevents", "the", "user", "from", "passing", "in", "a", "client", "of", "the", "wrong", "service", "type", "as", "illustrated", "in", "this", "hypothetical", "set", "of", "calls", "NUMBER", "client", "boto", "NUMBER", "client", "sqs", "config", "Config", "resource", "boto", "NUMBER", "resource", "ec", "NUMBER", "client", "client", "You", "could", "make", "it", "so", "that", "resource", "ignores", "the", "service_name", "argument", "pass", "into", "it", "if", "client", "be", "specified", "but", "that", "s", "really", "confusing", "since", "service_name", "be", "a", "required", "argument", "of", "boto", "NUMBER", "resource", "NUMBER", "The", "only", "other", "non", "straightforward", "thing", "in", "this", "pull", "request", "that", "would", "be", "nice", "to", "have", "feedback", "on", "be", "the", "copy", "NUMBER", "deepcopy", "performed", "if", "the", "config", "has", "not", "pass", "in", "user_agent_extra", "NUMBER", "This", "was", "do", "so", "that", "the", "incoming", "argument", "be", "not", "modify", "but", "another", "possible", "semantic", "be", "that", "we", "use", "user_agent_extra", "untouched", "if", "a", "config", "be", "pass", "in", "not", "attempting", "to", "override", "with", "a", "default", "value", "NUMBER", "Any", "preference", "or", "okay", "as", "be", "Ping", "Note", "that", "the", "description", "of", "this", "pull", "request", "above", "did", "explicitly", "discuss", "a", "problem", "with", "passing", "a", "client", "to", "the", "resource", "NUMBER", "May", "not", "block", "that", "idea", "but", "it", "definitely", "points", "out", "how", "error", "prone", "it", "could", "be", "NUMBER", "I", "agree", "NUMBER", "to", "preferring", "configs", "over", "clients", "mbarrien", "makes", "a", "good", "case", "for", "this", "NUMBER", "shipit", "Code", "looks", "good", "to", "me", "NUMBER", "Thanks", "for", "the", "pull", "request", "Updated", "per", "comment", "NUMBER", "You", "re", "okay", "with", "the", "deepcopy", "be", "use", "here", "mbarrien", "I", "think", "that", "s", "fine", "NUMBER", "Thanks", "for", "the", "pull", "request", "NUMBER", "Hi", "Guys", "I", "can", "see", "two", "message", "in", "my", "SQS", "queue", "in", "AWS", "web", "console", "NUMBER", "But", "method", "receive_messages", "in", "sqs", "NUMBER", "Queue", "only", "return", "one", "message", "each", "time", "NUMBER", "I", "be", "a", "little", "confused", "about", "this", "NUMBER", "Here", "be", "my", "python", "code", "below", "sqs", "boto", "NUMBER", "resource", "sqs", "region_name", "cn", "north", "NUMBER", "aws_access_key_id", "access_id", "aws_secret_access_key", "access_secret", "queue", "sqs", "NUMBER", "Queue", "sqs_url", "message", "queue", "NUMBER", "receive_messages", "MaxNumberOfMessages", "NUMBER", "WaitTimeSeconds", "NUMBER", "for", "message", "in", "message", "print", "message", "JordonPhillips", "Yes", "a", "distributed", "message", "queue", "cannot", "guarantee", "that", "NUMBER", "message", "will", "be", "received", "each", "time", "even", "there", "be", "more", "than", "NUMBER", "message", "NUMBER", "But", "no", "matter", "how", "many", "message", "I", "test", "less", "than", "NUMBER", "message", "sorry", "I", "always", "received", "one", "message", "each", "time", "NUMBER", "I", "will", "test", "more", "and", "will", "be", "report", "if", "something", "wrong", "NUMBER", "Thanks", "NUMBER", "UPDATE", "When", "more", "than", "NUMBER", "message", "in", "SQS", "queue", "NUMBER", "It", "will", "receive", "a", "bunch", "of", "message", "one", "time", "use", "receive_messages", "but", "less", "than", "ten", "NUMBER", "python", "query_sqs", "NUMBER", "py", "Message", "The", "IT", "Crowd", "NUMBER", "MP", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "c", "b", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "fdc", "NUMBER", "ObjectCreated", "Put", "Message", "developing_modules", "NUMBER", "rst", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "acb", "NUMBER", "NUMBER", "ad", "b", "NUMBER", "NUMBER", "afb", "NUMBER", "d", "NUMBER", "ObjectCreated", "Put", "Message", "developing_api", "NUMBER", "rst", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "b", "NUMBER", "b", "NUMBER", "NUMBER", "c", "ObjectCreated", "Put", "Message", "intro_configuration", "NUMBER", "rst", "c", "NUMBER", "d", "NUMBER", "f", "NUMBER", "da", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "de", "NUMBER", "df", "NUMBER", "b", "NUMBER", "f", "NUMBER", "cc", "ObjectCreated", "Put", "python", "query_sqs", "NUMBER", "py", "Message", "intro_adhoc", "NUMBER", "rst", "a", "NUMBER", "d", "NUMBER", "f", "eb", "NUMBER", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "b", "NUMBER", "fc", "ObjectCreated", "Put", "Message", "intro_windows", "NUMBER", "rst", "e", "NUMBER", "ceeee", "b", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ff", "ObjectCreated", "Put", "Hi", "Jordon", "Is", "this", "still", "expected", "behaviour", "to", "only", "be", "guaranteed", "to", "receive", "NUMBER", "message", "at", "a", "time", "when", "there", "be", "a", "several", "thousand", "message", "in", "the", "queue", "I", "have", "a", "queue", "with", "around", "NUMBER", "message", "would", "you", "say", "there", "be", "any", "other", "way", "of", "reading", "all", "the", "message", "Any", "other", "method", "or", "service", "I", "can", "use", "for", "small", "queues", "as", "such", "Thanks", "in", "advance", "I", "m", "seeing", "the", "same", "original", "issue", "setting", "MaxNumberOfMessages", "NUMBER", "seems", "to", "come", "back", "always", "with", "NUMBER", "message", "I", "take", "it", "this", "be", "still", "an", "issue", "not", "w", "the", "lib", "more", "w", "SQS", "NUMBER", "Context", "I", "have", "a", "tiny", "queue", "we", "ll", "only", "ever", "have", "NUMBER", "message", "in", "the", "queue", "at", "a", "time", "that", "I", "d", "like", "to", "expose", "over", "a", "Slack", "slash", "command", "NUMBER", "For", "example", "typing", "queue", "would", "hit", "an", "API", "Gateway", "that", "would", "call", "a", "Lambda", "that", "would", "pull", "and", "display", "all", "message", "in", "the", "queue", "in", "order", "NUMBER", "Temp", "Solution", "I", "have", "some", "code", "that", "hacks", "around", "SQS", "s", "limitations", "based", "on", "the", "feedback", "in", "this", "thread", "python", "def", "lambda_handler", "event", "context", "Get", "message", "from", "an", "SQS", "message", "queue", "and", "return", "them", "to", "the", "caller", "NUMBER", "sqs", "boto", "NUMBER", "resource", "sqs", "queue", "sqs", "NUMBER", "get_queue_by_name", "QueueName", "test", "message", "message", "set", "for", "i", "in", "range", "NUMBER", "NUMBER", "msg_list", "queue", "NUMBER", "receive_messages", "VisibilityTimeout", "NUMBER", "MaxNumberOfMessages", "NUMBER", "WaitTimeSeconds", "NUMBER", "for", "msg", "in", "msg_list", "message", "NUMBER", "add", "msg", "NUMBER", "body", "return", "list", "message", "Question", "While", "this", "obviously", "isn", "t", "an", "optimal", "approach", "it", "do", "work", "NUMBER", "That", "said", "I", "was", "wondering", "if", "was", "possible", "to", "order", "these", "message", "by", "the", "timestamp", "w", "which", "they", "were", "submitted", "to", "the", "queue", "Potential", "Approach", "Set", "the", "timestamp", "as", "an", "attr", "on", "the", "message", "during", "message", "creation", "and", "order", "on", "that", "attr", "once", "I", "get", "my", "set", "NUMBER", "Don", "t", "count", "on", "the", "order", "of", "receiving", "the", "message", "put", "a", "timestamp", "in", "the", "message", "NUMBER", "Update", "I", "take", "it", "back", "SQS", "do", "support", "FIFO", "more", "here", "LINK", "queues", "NUMBER", "html", "There", "be", "only", "two", "hard", "problem", "in", "distributed", "systems", "NUMBER", "NUMBER", "Exactly", "once", "delivery", "NUMBER", "NUMBER", "Guaranteed", "order", "of", "message", "NUMBER", "NUMBER", "Exactly", "once", "delivery", "NUMBER", "In", "the", "AWS", "console", "the", "Description", "column", "do", "not", "end", "up", "with", "what", "I", "list", "as", "a", "description", "instead", "I", "get", "something", "like", "Created", "by", "AWS", "VMImport", "service", "for", "import", "snap", "fhc", "NUMBER", "by", "NUMBER", "q", "response", "client", "NUMBER", "import_snapshot", "Description", "desc", "DiskContainer", "Description", "desc", "Format", "RAW", "UserBucket", "S", "NUMBER", "Bucket", "bucket", "S", "NUMBER", "Key", "sdks", "NUMBER", "NUMBER", "img", "NUMBER", "format", "product", "version", "It", "looks", "like", "the", "SDK", "be", "performing", "as", "expected", "here", "and", "the", "issue", "be", "on", "the", "service", "side", "NUMBER", "If", "you", "re", "still", "experience", "this", "issue", "I", "would", "recommend", "ask", "about", "it", "on", "their", "forums", "LINK", "NUMBER", "NUMBER", "In", "documentation", "it", "mentions", "when", "creating", "update", "auto", "scaling", "group", "we", "can", "pass", "a", "a", "list", "of", "subnets", "for", "the", "VPCZoneIdentifier", "key", "LINK", "AutoScaling", "NUMBER", "Client", "NUMBER", "update_auto_scaling_group", "In", "reality", "it", "only", "accepts", "a", "single", "string", "response", "asg_client", "NUMBER", "update_auto_scaling_group", "NUMBER", "AutoScalingGroupName", "asg_name", "NUMBER", "LaunchConfigurationName", "new_launch_configuration_name", "NUMBER", "VPCZoneIdentifier", "subnet", "XXXXX", "subnet", "XXXXXX", "NUMBER", "ParamValidationError", "Parameter", "validation", "fail", "Invalid", "type", "for", "parameter", "VPCZoneIdentifier", "value", "subnet", "XXXXXX", "subnet", "XXXX", "type", "TAG", "valid", "types", "TAG", "I", "m", "trying", "to", "execute", "spark", "submit", "use", "boto", "NUMBER", "client", "for", "EMR", "NUMBER", "After", "executing", "the", "code", "below", "EMR", "step", "submitted", "and", "after", "few", "seconds", "fail", "NUMBER", "The", "actual", "command", "line", "from", "step", "logs", "be", "work", "if", "executed", "manually", "on", "EMR", "master", "NUMBER", "Controller", "log", "shows", "hardly", "readable", "garbage", "looking", "like", "several", "processes", "write", "there", "concurrently", "NUMBER", "Tried", "command", "runner", "NUMBER", "jar", "and", "EMR", "version", "NUMBER", "and", "NUMBER", "The", "code", "fragment", "python", "class", "ProblemExample", "def", "run", "self", "session", "boto", "NUMBER", "Session", "profile_name", "emr", "profile", "client", "session", "NUMBER", "client", "emr", "response", "client", "NUMBER", "add_job_flow_steps", "JobFlowId", "cluster_id", "Steps", "Name", "string", "ActionOnFailure", "CONTINUE", "HadoopJarStep", "Jar", "s", "NUMBER", "n", "elasticmapreduce", "libs", "script", "runner", "script", "runner", "NUMBER", "jar", "Args", "usr", "bin", "spark", "submit", "verbose", "class", "my", "NUMBER", "spark", "NUMBER", "job", "jars", "TAG", "TAG", "NUMBER", "jar", "Yep", "sorry", "for", "disturbing", "NUMBER", "According", "to", "the", "docs", "the", "Glacier", "NUMBER", "MultipartUpload", "LINK", "Glacier", "NUMBER", "MultipartUpload", "NUMBER", "multipart_upload_id", "resource", "should", "have", "a", "number", "of", "attributes", "for", "example", "multipart_upload_id", "LINK", "Glacier", "NUMBER", "MultipartUpload", "NUMBER", "multipart_upload_id", "but", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "glacier", "session", "NUMBER", "resource", "glacier", "vault", "glacier", "NUMBER", "Vault", "vault_name", "multipart_upload", "vault", "NUMBER", "initiate_multipart_upload", "archiveDescription", "archive_desc", "partSize", "str", "part_size", "print", "multipart_upload", "NUMBER", "multipart_upload_id", "fail", "with", "boto", "NUMBER", "exception", "NUMBER", "ResourceLoadException", "glacier", "NUMBER", "MultipartUpload", "has", "no", "load", "method", "NUMBER", "Actions", "and", "identifiers", "of", "the", "MultipartUpload", "resource", "work", "as", "expected", "NUMBER", "Tested", "with", "boto", "NUMBER", "NUMBER", "botocore", "NUMBER", "Sorry", "about", "the", "radio", "silence", "on", "our", "end", "NUMBER", "It", "looks", "like", "the", "multipart_upload_id", "isn", "t", "get", "saturated", "but", "id", "be", "NUMBER", "So", "for", "now", "you", "can", "use", "multipart_upload", "NUMBER", "id", "NUMBER", "I", "see", "NUMBER", "Sorry", "but", "I", "be", "a", "little", "bit", "confused", "by", "this", "Identifiers", "Attributes", "LINK", "identifiers", "attributes", "intro", "thing", "NUMBER", "Is", "it", "safe", "to", "assume", "that", "the", "id", "identifier", "LINK", "Glacier", "NUMBER", "MultipartUpload", "NUMBER", "id", "be", "the", "same", "thing", "as", "the", "multipart_upload_id", "attribute", "LINK", "Glacier", "NUMBER", "MultipartUpload", "NUMBER", "multipart_upload_id", "If", "identifier", "and", "attribute", "point", "to", "the", "very", "same", "thing", "why", "be", "there", "both", "an", "Id", "and", "an", "Attribute", "_Entia", "non", "sunt", "multiplicanda", "praeter", "necessitatem_", "LINK", "NUMBER", "s_razor", "miccoli", "Yes", "they", "be", "the", "same", "thing", "NUMBER", "We", "recently", "fix", "the", "bug", "at", "the", "heart", "of", "the", "issue", "and", "so", "now", "multipart_upload_id", "and", "id", "alias", "the", "same", "value", "NUMBER", "The", "reason", "both", "be", "there", "be", "because", "for", "resources", "we", "try", "to", "make", "the", "identifiers", "simpler", "but", "we", "don", "t", "want", "to", "remove", "response", "attributes", "from", "the", "request", "NUMBER", "I", "d", "like", "to", "script", "a", "blue", "green", "deployment", "between", "two", "auto", "scaling", "group", "NUMBER", "Having", "a", "waiter", "that", "would", "tell", "me", "when", "instances", "in", "the", "new", "group", "have", "finished", "launching", "would", "help", "a", "lot", "NUMBER", "Thanks", "I", "ll", "mark", "this", "as", "a", "feature", "request", "NUMBER", "In", "the", "meantime", "I", "think", "you", "d", "need", "to", "describe", "the", "autoscaling", "group", "and", "poll", "the", "instances", "in", "the", "group", "until", "they", "be", "marked", "as", "InService", "NUMBER", "NUMBER", "I", "need", "this", "feature", "in", "my", "project", "aws", "aws", "sdk", "ruby", "LINK", "sdk", "ruby", "has", "already", "implement", "this", "but", "has", "some", "bug", "aws", "aws", "sdk", "ruby", "NUMBER", "NUMBER", "Once", "it", "s", "fix", "just", "copy", "the", "waiter", "JSON", "to", "botocore", "and", "it", "should", "work", "fine", "smiley", "quiver", "I", "will", "pull", "the", "waiters", "from", "the", "ruby", "sdk", "once", "they", "get", "fix", "NUMBER", "kyleknap", "thx", "NUMBER", "NUMBER", "definitely", "need", "this", "for", "LINK", "Any", "update", "on", "this", "This", "would", "be", "great", "for", "a", "project", "we", "re", "doing", "at", "the", "company", "I", "work", "at", "also", "NUMBER", "Right", "now", "I", "just", "have", "a", "NUMBER", "minute", "celery", "job", "that", "checks", "to", "see", "if", "anything", "has", "be", "do", "NUMBER", "My", "workaround", "be", "to", "check", "every", "NUMBER", "seconds", "if", "the", "ASG", "still", "exists", "response", "client", "NUMBER", "describe_auto_scaling_groups", "NUMBER", "while", "response", "AutoScalingGroups", "time", "NUMBER", "sleep", "NUMBER", "That", "type", "of", "a", "solution", "wouldn", "t", "be", "ideal", "when", "your", "AWS", "account", "be", "get", "close", "to", "its", "API", "limits", "NUMBER", "Loops", "and", "whiles", "on", "response", "code", "be", "a", "solution", "but", "its", "a", "bit", "dirty", "and", "could", "be", "nicer", "NUMBER", "Today", "I", "m", "polling", "but", "would", "much", "prefer", "waiters", "for", "the", "following", "ASG", "delete", "At", "least", "one", "EC", "NUMBER", "instance", "has", "start", "in", "a", "new", "ASG", "NUMBER", "I", "need", "this", "feature", "Just", "a", "thought", "for", "everybody", "polling", "could", "always", "just", "monitor", "SQS", "for", "message", "from", "the", "ASGs", "in", "the", "meanwhile", "NUMBER", "I", "was", "looking", "for", "waiters", "for", "Attach", "and", "Detach", "ELB", "in", "ASG", "NUMBER", "Searched", "the", "boto", "NUMBER", "docs", "but", "did", "not", "see", "any", "waiter", "name", "there", "NUMBER", "Does", "any", "one", "implement", "it", "or", "any", "suggestion", "in", "this", "regards", "NUMBER", "LINK", "AutoScaling", "NUMBER", "Client", "NUMBER", "get_waiter", "when", "i", "use", "ses", "to", "send", "email", "i", "get", "this", "error", "i", "don", "t", "know", "whether", "this", "be", "cause", "by", "this", "problem", "return", "Subclass", "of", "py", "class", "boto", "NUMBER", "resources", "NUMBER", "base", "NUMBER", "ServiceResource", "if", "api_version", "be", "None", "api_version", "self", "NUMBER", "_loader", "NUMBER", "determine_latest_version", "service_name", "resources", "NUMBER", "resource_model", "self", "NUMBER", "_loader", "NUMBER", "load_service_model", "service_name", "resources", "NUMBER", "api_version", "we", "can", "t", "find", "resources", "NUMBER", "json", "in", "boto", "data", "ses", "or", "any", "other", "directory", "maybe", "it", "s", "a", "bug", "or", "just", "my", "mistake", "any", "ideas", "Can", "you", "provide", "the", "version", "number", "of", "boto", "NUMBER", "you", "re", "use", "a", "full", "stack", "trace", "of", "the", "error", "and", "the", "code", "that", "created", "the", "error", "thks", "it", "be", "my", "bad", "we", "should", "use", "boto", "NUMBER", "client", "ses", "instead", "of", "boto", "NUMBER", "resource", "ses", "cause", "the", "problem", "why", "some", "services", "like", "s", "NUMBER", "sqs", "can", "use", "resource", "other", "service", "must", "use", "client", "So", "the", "main", "issue", "here", "be", "that", "we", "be", "disabling", "newlines", "in", "list", "elements", "LINK", "L", "NUMBER", "NUMBER", "It", "seems", "this", "be", "intended", "to", "prevent", "the", "inevitable", "TAG", "from", "creating", "a", "newline", "but", "it", "has", "the", "side", "effect", "of", "completely", "disabling", "nested", "lists", "NUMBER", "Collection", "resources", "for", "the", "Policy", "resource", "were", "get", "preloaded", "due", "to", "the", "existance", "of", "a", "path", "NUMBER", "These", "resources", "need", "to", "be", "fully", "loaded", "through", "their", "load", "method", "not", "the", "ListEntitiesForPolicy", "method", "because", "it", "returns", "a", "partial", "subset", "of", "the", "resource", "s", "attributes", "NUMBER", "Fixes", "LINK", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "This", "test", "makes", "sure", "that", "all", "collections", "that", "use", "an", "operation", "that", "looks", "paginatable", "has", "a", "paginator", "for", "that", "operation", "NUMBER", "If", "you", "do", "not", "have", "a", "paginator", "you", "will", "end", "up", "with", "a", "response", "iterator", "that", "do", "not", "contain", "all", "of", "the", "possible", "resources", "NUMBER", "Helps", "address", "LINK", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "Sure", "we", "will", "be", "able", "to", "shorten", "the", "list", "NUMBER", "But", "I", "be", "not", "sure", "if", "the", "burden", "with", "respect", "to", "the", "future", "will", "be", "lessened", "NUMBER", "It", "seems", "to", "be", "the", "same", "amount", "of", "burden", "for", "both", "strategies", "if", "we", "want", "to", "be", "accurate", "NUMBER", "Using", "your", "suggestion", "if", "we", "add", "a", "new", "paginator", "config", "that", "uses", "a", "new", "pagination", "parameter", "name", "we", "will", "not", "need", "to", "add", "it", "to", "the", "list", "NUMBER", "However", "if", "an", "operation", "comes", "along", "that", "we", "do", "not", "have", "a", "pagination", "config", "for", "and", "has", "the", "same", "pagination", "parameter", "we", "will", "completely", "miss", "add", "a", "paginator", "for", "the", "collection", "because", "it", "would", "not", "look", "as", "paginator", "as", "we", "did", "not", "add", "it", "to", "the", "list", "of", "pagination", "names", "NUMBER", "For", "what", "I", "have", "now", "the", "issue", "be", "the", "same", "NUMBER", "If", "we", "add", "the", "pagination", "config", "and", "do", "not", "add", "the", "new", "parameter", "name", "any", "new", "operations", "that", "do", "not", "have", "paginators", "and", "use", "this", "new", "parameter", "name", "will", "be", "miss", "as", "well", "NUMBER", "Ultimately", "I", "do", "not", "think", "there", "be", "any", "way", "get", "around", "maintaining", "a", "long", "list", "if", "we", "want", "to", "stay", "current", "with", "possible", "paginator", "naming", "conventions", "NUMBER", "So", "I", "be", "not", "oppose", "to", "either", "approach", "but", "I", "rather", "keep", "the", "list", "as", "be", "and", "make", "it", "a", "best", "effort", "to", "update", "the", "list", "NUMBER", "Alright", "I", "see", "where", "the", "disjoint", "be", "NUMBER", "You", "be", "referring", "to", "this", "specifically", "be", "the", "test", "for", "boto", "NUMBER", "I", "be", "fine", "with", "this", "be", "labeled", "as", "just", "a", "sanity", "check", "then", "because", "I", "do", "have", "tooling", "upstream", "to", "help", "catch", "miss", "paginators", "NUMBER", "It", "be", "similiar", "to", "this", "logic", "but", "be", "more", "aggressive", "in", "identifying", "paginators", "NUMBER", "I", "guess", "I", "was", "arguing", "more", "about", "the", "logic", "that", "pertains", "to", "that", "NUMBER", "We", "just", "need", "to", "make", "sure", "we", "audit", "paginators", "on", "a", "regular", "basis", "and", "make", "sure", "we", "add", "them", "where", "needed", "NUMBER", "PR", "be", "update", "NUMBER", "shipit", "Looks", "good", "NUMBER", "The", "following", "worked", "in", "boto", "import", "boto", "ow", "boto", "NUMBER", "connect_opsworks", "Similar", "methods", "fail", "in", "boto", "NUMBER", "because", "of", "region", "selection", "import", "boto", "NUMBER", "ow", "boto", "NUMBER", "resource", "opsworks", "TAG", "inventory", "job", "NUMBER", "get_output", "body", "inventory", "body", "body", "NUMBER", "__dict__", "_amount_read", "NUMBER", "_content_length", "NUMBER", "_raw_stream", "TAG", "inventory_chunk", "job", "NUMBER", "get_output", "range", "Range", "bytes", "NUMBER", "NUMBER", "body_chunk", "inventory_chunk", "body", "body_chunk", "NUMBER", "__dict__", "_amount_read", "NUMBER", "_content_length", "NUMBER", "_raw_stream", "TAG", "inventory_chunk", "job", "NUMBER", "get_output", "range", "Range", "bytes", "NUMBER", "NUMBER", "body_chunk", "inventory_chunk", "body", "body_chunk", "NUMBER", "__dict__", "_amount_read", "NUMBER", "_content_length", "NUMBER", "_raw_stream", "TAG", "body_text", "body_chunk", "NUMBER", "read", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "response", "NUMBER", "py", "line", "NUMBER", "in", "read", "chunk", "self", "NUMBER", "_raw_stream", "NUMBER", "read", "amt", "File", "usr", "lib", "python", "NUMBER", "site", "package", "botocore", "vendored", "request", "package", "urllib", "NUMBER", "response", "NUMBER", "py", "line", "NUMBER", "in", "read", "raise", "ProtocolError", "Connection", "broken", "r", "e", "e", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "exception", "NUMBER", "ProtocolError", "Connection", "broken", "IncompleteRead", "NUMBER", "bytes", "read", "NUMBER", "more", "expected", "IncompleteRead", "NUMBER", "bytes", "read", "NUMBER", "more", "expected", "Thank", "you", "I", "m", "kind", "of", "embarrassed", "I", "didn", "t", "just", "try", "that", "I", "verify", "this", "works", "for", "me", "NUMBER", "Thank", "you", "NUMBER", "In", "boto", "there", "was", "a", "trim_snapshot", "method", "available", "on", "the", "EC", "NUMBER", "connection", "object", "that", "assisted", "in", "managing", "EBS", "snapshot", "retention", "NUMBER", "This", "doesn", "t", "appear", "to", "have", "made", "it", "into", "boto", "NUMBER", "Is", "this", "an", "intentional", "feature", "deprecation", "or", "be", "there", "a", "replacement", "planned", "I", "believe", "we", "did", "not", "intentionally", "drop", "it", "NUMBER", "It", "be", "just", "that", "the", "trim_snapshot", "be", "not", "a", "native", "feature", "support", "by", "the", "EC", "NUMBER", "service", "api", "LINK", "query", "NUMBER", "html", "so", "by", "default", "it", "won", "t", "be", "available", "in", "Boto", "NUMBER", "or", "Botocore", "NUMBER", "We", "may", "consider", "add", "it", "as", "a", "customization", "which", "would", "ideally", "be", "available", "in", "both", "Boto", "NUMBER", "and", "CLI", "NUMBER", "I", "will", "mark", "it", "as", "a", "feature", "request", "here", "for", "now", "NUMBER", "But", "I", "be", "not", "able", "to", "comment", "on", "the", "timeframe", "or", "even", "whether", "it", "would", "eventually", "be", "planned", "NUMBER", "Meanwhile", "your", "options", "be", "Use", "boto", "side", "by", "side", "with", "Boto", "NUMBER", "to", "obtain", "that", "feature", "NUMBER", "Somehow", "migrate", "that", "functionality", "LINK", "L", "NUMBER", "into", "your", "code", "NUMBER", "It", "seems", "quite", "straightforward", "NUMBER", "I", "can", "move", "the", "code", "into", "my", "application", "but", "I", "m", "sure", "other", "people", "will", "miss", "this", "method", "in", "boto", "NUMBER", "Is", "the", "project", "open", "to", "a", "PR", "from", "me", "for", "this", "or", "be", "customizations", "beyond", "the", "EC", "NUMBER", "API", "not", "allow", "at", "this", "time", "Model", "change", "looks", "fine", "NUMBER", "However", "I", "think", "you", "should", "add", "it", "to", "version", "NUMBER", "NUMBER", "NUMBER", "of", "the", "ec", "NUMBER", "model", "because", "that", "be", "the", "latest", "NUMBER", "Thanks", "ship", "A", "side", "note", "there", "be", "a", "test", "failure", "in", "this", "PR", "which", "be", "probably", "not", "cause", "by", "this", "commit", "NUMBER", "After", "address", "that", "a", "rebase", "would", "be", "enough", "to", "trigger", "a", "new", "check", "and", "clean", "that", "out", "NUMBER", "for", "vpc", "in", "ec", "NUMBER", "vpcs", "NUMBER", "all", "for", "route_table", "in", "vpc", "NUMBER", "route_tables", "NUMBER", "all", "print", "route_table", "print", "route_table", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "create_route", "print", "route_table", "NUMBER", "create_route", "print", "route_table", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "delete_route", "print", "route_table", "NUMBER", "delete_route", "TAG", "TAG", "TAG", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "scripts", "foo", "line", "NUMBER", "in", "TAG", "print", "route_table", "NUMBER", "delete_route", "AttributeError", "ec", "NUMBER", "RouteTable", "object", "has", "no", "attribute", "delete_route", "kislyuk", "Agreed", "there", "should", "be", "some", "parity", "NUMBER", "I", "think", "route_table", "NUMBER", "delete_route", "be", "a", "reasonable", "interface", "NUMBER", "Feel", "free", "to", "submit", "a", "PR", "to", "our", "resource", "model", "for", "EC", "NUMBER", "to", "add", "this", "NUMBER", "We", "can", "add", "it", "as", "well", "NUMBER", "If", "you", "have", "any", "other", "question", "feel", "free", "to", "ask", "NUMBER", "I", "m", "run", "into", "the", "same", "issue", "NUMBER", "NUMBER", "x", "ec", "NUMBER", "_client", "NUMBER", "delete_route", "RouteTableId", "route_table", "NUMBER", "id", "DestinationCidrBlock", "route", "DestinationCidrBlock", "NUMBER", "print", "x", "NUMBER", "AttributeError", "ec", "NUMBER", "ServiceResource", "object", "has", "no", "attribute", "delete_route", "ditto", "quite", "annoying", "as", "I", "have", "to", "shell", "call", "the", "CLI", "to", "delete", "routes", "So", "it", "turns", "out", "that", "once", "you", "re", "gone", "through", "all", "the", "events", "in", "the", "filter_log_events", "use", "nextToken", "that", "the", "nextToken", "element", "in", "the", "response", "dict", "be", "simply", "not", "there", "as", "oppose", "to", "set", "to", "a", "value", "that", "resolve", "to", "false", "NUMBER", "Therefore", "a", "loop", "that", "looks", "like", "this", "python", "res", "cwl_client", "NUMBER", "filter_log_events", "logGroupName", "lgn", "filterPattern", "fp", "interleaved", "il", "while", "res", "nextToken", "loops", "NUMBER", "if", "not", "loops", "NUMBER", "print", "We", "be", "on", "loop", "loops", "print", "nextToken", "be", "nt", "res", "cwl_client", "NUMBER", "filter_log_events", "logGroupName", "lgn", "filterPattern", "fp", "nextToken", "nt", "interleaved", "il", "will", "exit", "with", "a", "keyError", "exception", "NUMBER", "Instead", "you", "have", "to", "python", "nt", "res", "nextToken", "while", "nt", "loops", "NUMBER", "if", "not", "loops", "NUMBER", "print", "We", "be", "on", "loop", "loops", "print", "nextToken", "be", "nt", "res", "cwl_client", "NUMBER", "filter_log_events", "logGroupName", "lgn", "filterPattern", "fp", "nextToken", "nt", "interleaved", "il", "if", "nextToken", "in", "res", "nt", "res", "nextToken", "else", "nt", "None", "I", "expect", "this", "be", "a", "documentation", "issue", "though", "perhaps", "the", "logic", "can", "be", "improved", "NUMBER", "In", "any", "case", "I", "can", "t", "find", "in", "the", "repo", "anywhere", "that", "this", "documentation", "be", "generate", "so", "I", "can", "submit", "a", "PR", "NUMBER", "Where", "be", "it", "Ah", "it", "s", "right", "there", "NUMBER", "I", "miss", "it", "NUMBER", "I", "think", "it", "would", "be", "worth", "add", "some", "verbiage", "in", "the", "Response", "Structure", "part", "for", "example", "nextToken", "string", "A", "pagination", "token", "obtained", "from", "a", "FilterLogEvents", "response", "to", "continue", "paginating", "the", "FilterLogEvents", "results", "NUMBER", "_This", "key", "be", "omitted", "from", "the", "response", "when", "there", "be", "no", "further", "results", "for", "continued", "pagination", "NUMBER", "_", "There", "be", "also", "the", "secondary", "question", "of", "where", "be", "this", "content", "in", "the", "repo", "Ah", "get", "it", "NUMBER", "Automated", "documentation", "use", "the", "upstream", "definition", "NUMBER", "Sounds", "familiar", "NUMBER", "Thanks", "I", "be", "run", "into", "several", "problem", "when", "creating", "deleting", "buckets", "in", "S", "NUMBER", "use", "boto", "NUMBER", "I", "have", "caught", "one", "of", "these", "problem", "involving", "the", "deletion", "of", "a", "bucket", "NUMBER", "The", "output", "be", "from", "py", "NUMBER", "test", "and", "clearly", "shows", "that", "the", "assert", "s", "value", "change", "from", "false", "to", "true", "after", "the", "waiter", "had", "a", "chance", "to", "return", "NUMBER", "def", "delete", "self", "Deletes", "the", "bucket", "try", "self", "NUMBER", "bucket", "NUMBER", "load", "self", "NUMBER", "bucket", "NUMBER", "delete", "except", "pass", "sleep", "NUMBER", "self", "NUMBER", "_bucket", "s", "NUMBER", "Bucket", "self", "NUMBER", "name", "self", "NUMBER", "bucket", "NUMBER", "wait_until_not_exists", "assert", "not", "self", "NUMBER", "exists", "E", "AssertionError", "assertion", "fail", "but", "when", "it", "was", "re", "run", "for", "printing", "intermediate", "values", "it", "did", "not", "fail", "NUMBER", "Suggestions", "compute", "assert", "expression", "before", "the", "assert", "or", "use", "assert", "plain", "self", "NUMBER", "bucket", "be", "a", "s", "NUMBER", "Bucket", "NUMBER", "Here", "s", "the", "exists", "code", "property", "def", "exists", "self", "try", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "head_bucket", "Bucket", "self", "NUMBER", "name", "return", "True", "except", "ClientError", "as", "e", "If", "a", "client", "error", "be", "throw", "then", "check", "that", "it", "was", "a", "NUMBER", "error", "NUMBER", "If", "it", "was", "a", "NUMBER", "error", "then", "the", "bucket", "do", "not", "exist", "NUMBER", "error_code", "int", "e", "NUMBER", "response", "Error", "Code", "if", "error_code", "NUMBER", "return", "False", "I", "also", "have", "the", "issue", "on", "creation", "NUMBER", "The", "following", "code", "have", "many", "extra", "measures", "to", "workaround", "the", "bug", "and", "i", "still", "get", "failures", "from", "time", "to", "time", "def", "create", "self", "Creates", "the", "bucket", "try", "if", "self", "NUMBER", "region", "AWS_REGIONS", "N", "NUMBER", "Virginia", "s", "NUMBER", "create_bucket", "Bucket", "self", "NUMBER", "name", "else", "s", "NUMBER", "create_bucket", "Bucket", "self", "NUMBER", "name", "CreateBucketConfiguration", "LocationConstraint", "self", "NUMBER", "region", "except", "ClientError", "as", "ex", "if", "BucketAlreadyOwnedByYou", "not", "in", "str", "ex", "raise", "sleep", "NUMBER", "wait", "NUMBER", "until", "lambda", "self", "NUMBER", "exists", "self", "NUMBER", "_bucket", "s", "NUMBER", "Bucket", "self", "NUMBER", "name", "self", "NUMBER", "bucket", "NUMBER", "wait_until_exists", "The", "wait", "NUMBER", "until", "call", "be", "a", "method", "that", "takes", "a", "lambda", "and", "returns", "when", "its", "value", "be", "positive", "NUMBER", "The", "issue", "I", "encounter", "the", "most", "often", "be", "that", "after", "going", "through", "the", "create", "method", "subsequent", "calls", "such", "as", "put_replication", "and", "the", "likes", "fail", "with", "a", "message", "indicating", "the", "bucket", "doesn", "t", "exist", "NUMBER", "and", "that", "be", "very", "frustrating", "I", "have", "encountered", "the", "issue", "even", "with", "sleep", "NUMBER", "in", "both", "the", "create", "and", "delete", "methods", "NUMBER", "Not", "so", "occasional", "on", "my", "end", "though", "It", "s", "easily", "in", "the", "NUMBER", "range", "NUMBER", "I", "will", "implement", "retry", "strategies", "for", "those", "occasions", "NUMBER", "Thanks", "for", "the", "input", "The", "documentation", "be", "confusing", "and", "raises", "more", "question", "than", "it", "answers", "NUMBER", "I", "want", "to", "import", "a", "volume", "use", "Boto", "but", "I", "really", "cannot", "piece", "together", "the", "syntax", "required", "to", "do", "this", "use", "Boto", "NUMBER", "Could", "you", "_please", "please_", "provide", "a", "full", "complete", "work", "example", "with", "nothing", "at", "all", "left", "out", "NUMBER", "thanks", "Could", "you", "please", "provide", "a", "full", "work", "example", "for", "this", "LINK", "import", "NUMBER", "volume", "EC", "NUMBER", "Client", "NUMBER", "import_volume", "Questions", "What", "be", "ImportManifestUrl", "exactly", "and", "how", "do", "I", "provide", "it", "Where", "exactly", "do", "I", "specify", "the", "volume", "to", "be", "uploaded", "I", "m", "really", "in", "the", "dark", "here", "NUMBER", "It", "would", "be", "great", "to", "get", "a", "complete", "work", "example", "with", "nothing", "left", "out", "NUMBER", "thanks", "This", "old", "issue", "NUMBER", "can", "give", "you", "some", "hint", "NUMBER", "I", "would", "suggest", "use", "import_image", "or", "import_snapshot", "for", "your", "use", "case", "NUMBER", "It", "be", "the", "latest", "version", "for", "this", "type", "of", "functionality", "NUMBER", "Would", "that", "work", "for", "you", "The", "hard", "part", "about", "the", "import_instance", "and", "import_volume", "be", "that", "be", "not", "documented", "well", "so", "trying", "to", "do", "it", "without", "something", "like", "the", "EC", "NUMBER", "CLI", "can", "be", "difficult", "NUMBER", "I", "think", "the", "documentation", "should", "be", "update", "though", "to", "at", "least", "to", "point", "to", "the", "recommended", "operations", "NUMBER", "At", "the", "moment", "for", "me", "personally", "LINK", "import", "NUMBER", "volume", "EC", "NUMBER", "Client", "NUMBER", "import_volume", "be", "not", "usable", "because", "there", "be", "no", "example", "of", "it", "work", "NUMBER", "If", "the", "authors", "of", "boto", "NUMBER", "be", "able", "to", "make", "it", "work", "then", "it", "would", "be", "most", "helpful", "to", "see", "a", "complete", "example", "of", "it", "work", "NUMBER", "Currently", "its", "effectively", "broken", "because", "there", "s", "not", "enough", "information", "in", "the", "documentation", "to", "make", "it", "work", "NUMBER", "Executing", "pip", "install", "boto", "NUMBER", "downgrades", "futures", "to", "NUMBER", "NUMBER", "When", "you", "use", "get_output", "for", "an", "inventory", "you", "get", "a", "body", "that", "be", "a", "stream", "of", "some", "kind", "NUMBER", "Would", "be", "great", "if", "you", "could", "add", "a", "sample", "on", "how", "to", "access", "that", "NUMBER", "Aside", "from", "that", "its", "be", "straightforward", "use", "boto", "NUMBER", "Yeah", "lets", "add", "this", "to", "the", "documentation", "as", "a", "new", "type", "the", "shows", "up", "for", "all", "parameter", "description", "and", "syntax", "examples", "NUMBER", "To", "at", "least", "suggest", "it", "be", "a", "file", "like", "object", "that", "can", "be", "read", "from", "NUMBER", "Just", "saying", "it", "be", "bytes", "be", "not", "good", "enough", "here", "NUMBER", "That", "would", "be", "great", "thank", "you", "I", "think", "this", "now", "properly", "documented", "NUMBER", "It", "be", "now", "documented", "as", "a", "StreamingBody", "which", "you", "can", "read", "from", "NUMBER", "Closing", "issue", "NUMBER", "LINK", "_ModifySubnetAttribute", "NUMBER", "html", "I", "m", "creating", "VPCs", "subnets", "from", "scratch", "and", "they", "default", "to", "having", "MapPublicIpOnLaunch", "off", "NUMBER", "I", "want", "to", "turn", "it", "on", "NUMBER", "It", "would", "be", "nice", "to", "be", "able", "to", "say", "subnet", "NUMBER", "map_public_ip_on_launch", "True", "instead", "of", "subnet", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "modify_subnet_attribute", "SubnetId", "subnet", "NUMBER", "id", "MapPublicIpOnLaunch", "Value", "True", "Yeah", "this", "something", "we", "can", "add", "as", "well", "to", "the", "resource", "interface", "NUMBER", "I", "would", "envision", "it", "as", "a", "subnet", "NUMBER", "modify_attribute", "method", "NUMBER", "Like", "your", "other", "suggestion", "feel", "free", "to", "send", "a", "PR", "for", "this", "one", "and", "ask", "us", "any", "other", "question", "you", "may", "have", "NUMBER", "Otherwise", "we", "will", "look", "into", "add", "it", "NUMBER", "Should", "be", "fairly", "straight", "forward", "to", "add", "NUMBER", "was", "any", "PR", "work", "do", "in", "this", "area", "or", "still", "on", "the", "backlog", "As", "per", "this", "SO", "thread", "LINK", "python", "to", "exe", "conversion", "botocore", "exception", "datanotfounderror", "NUMBER", "boto", "NUMBER", "fail", "to", "create", "environment", "compatible", "with", "exe", "created", "with", "py", "NUMBER", "exe", "NUMBER", "Issue", "be", "with", "session", "NUMBER", "get_data", "_endpoints", "rayleo", "The", "hack", "you", "showed", "do", "well", "without", "hacking", "into", "library", "NUMBER", "But", "not", "solves", "the", "issue", "completely", "NUMBER", "We", "need", "to", "do", "something", "more", "to", "make", "it", "run", "Fixing", "dynamically", "loaded", "library", "boto", "NUMBER", "s", "NUMBER", "inject", "import", "boto", "NUMBER", "s", "NUMBER", "inject", "into", "main", "module", "comment", "out", "import", "name", "from", "boto", "NUMBER", "utils", "NUMBER", "py", "re", "compile", "utils", "NUMBER", "py", "I", "guess", "its", "not", "possible", "to", "apply", "external", "hack", "in", "this", "case", "NUMBER", "Library", "should", "fix", "this", "issue", "NUMBER", "py", "NUMBER", "exe", "be", "still", "miss", "module", "named", "s", "NUMBER", "inject", "NUMBER", "My", "setup", "NUMBER", "py", "setup", "options", "py", "NUMBER", "exe", "optimize", "NUMBER", "skip_archive", "True", "dll_excludes", "crypt", "NUMBER", "dll", "package", "docutils", "urllib", "httplib", "HTMLParser", "awscli", "ConfigParser", "xml", "NUMBER", "etree", "pipes", "console", "s", "NUMBER", "_uploader", "NUMBER", "py", "py", "NUMBER", "exe", "build", "exe", "without", "any", "error", "NUMBER", "after", "I", "run", "s", "NUMBER", "_uploader", "NUMBER", "exe", "No", "module", "named", "s", "NUMBER", "inject", "EXE", "runs", "without", "any", "issue", "if", "I", "explicitly", "import", "boto", "NUMBER", "s", "NUMBER", "inject", "either", "by", "setup", "options", "or", "in", "main", "module", "jamesls", "be", "curious", "why", "dont", "boto", "NUMBER", "provides", "separate", "imports", "for", "each", "aws", "service", "so", "that", "programmer", "will", "import", "only", "those", "sub", "modules", "which", "he", "needs", "NUMBER", "And", "one", "more", "doubt", "can", "I", "embed", "data", "directory", "inside", "my", "EXE", "Same", "for", "cacert", "NUMBER", "pem", "I", "encounter", "a", "similar", "issue", "while", "packaging", "my", "boto", "NUMBER", "script", "to", "EXE", "with", "pyinstaller", "NUMBER", "Does", "anybody", "have", "idea", "to", "package", "boto", "NUMBER", "into", "EXE", "with", "pyinstaller", "yellowcards", "Take", "a", "look", "at", "this", "answer", "LINK", "which", "be", "about", "py", "NUMBER", "exe", "NUMBER", "How", "can", "I", "remove", "myself", "from", "this", "list", "Thx", "From", "niLesh", "Akhade", "TAG", "To", "boto", "boto", "NUMBER", "boto", "NUMBER", "noreply", "NUMBER", "github", "NUMBER", "com", "Sent", "Wednesday", "October", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "Subject", "Re", "boto", "NUMBER", "boto", "NUMBER", "do", "not", "play", "nice", "with", "py", "NUMBER", "exe", "NUMBER", "Closed", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "import", "boto", "NUMBER", "boto", "NUMBER", "ec", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "AttributeError", "module", "boto", "NUMBER", "has", "no", "attribute", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "NUMBER", "create_key_pair", "TAG", "NUMBER", "do_action", "of", "ec", "NUMBER", "ServiceResource", "boto", "NUMBER", "resource", "ec", "NUMBER", "NUMBER", "delete_key_pair", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "AttributeError", "ec", "NUMBER", "ServiceResource", "object", "has", "no", "attribute", "delete_key_pair", "boto", "NUMBER", "resource", "ec", "NUMBER", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "delete_key_pair", "TAG", "NUMBER", "_api_call", "of", "TAG", "So", "usually", "with", "the", "service", "resource", "we", "typically", "only", "add", "operation", "that", "result", "in", "producing", "a", "new", "resource", "NUMBER", "Especially", "since", "ec", "NUMBER", "has", "a", "lot", "of", "operations", "this", "helps", "in", "discoverability", "of", "resources", "and", "functionality", "NUMBER", "To", "achieve", "the", "functionality", "that", "you", "be", "looking", "for", "use", "only", "the", "resource", "interface", "NUMBER", "You", "would", "have", "to", "first", "create", "the", "resource", "object", "and", "call", "its", "delete", "method", "NUMBER", "So", "something", "like", "this", "py", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "In", "NUMBER", "keypair", "ec", "NUMBER", "KeyPair", "mykeypair", "Note", "that", "no", "data", "be", "loaded", "here", "NUMBER", "Just", "a", "python", "object", "be", "created", "In", "NUMBER", "keypair", "NUMBER", "delete", "Out", "NUMBER", "TAG", "Let", "me", "know", "if", "you", "have", "any", "further", "question", "or", "comments", "NUMBER", "Thanks", "for", "the", "explanation", "NUMBER", "I", "would", "challenge", "the", "statement", "that", "this", "helps", "in", "discoverability", "of", "resources", "and", "functionality", "NUMBER", "Generally", "I", "want", "to", "deal", "in", "resources", "not", "clients", "NUMBER", "Resources", "give", "me", "the", "ability", "to", "write", "concise", "and", "elegant", "code", "without", "manually", "constructing", "inputs", "NUMBER", "Because", "not", "all", "methods", "be", "available", "via", "resources", "though", "I", "m", "forced", "to", "jump", "down", "to", "the", "client", "in", "arbitrary", "places", "where", "I", "happen", "to", "need", "to", "use", "a", "method", "that", "doesn", "t", "create", "a", "resource", "NUMBER", "IMO", "it", "s", "reasonable", "for", "resources", "to", "bind", "all", "methods", "that", "the", "API", "provides", "for", "them", "NUMBER", "To", "complete", "my", "thought", "IMO", "discoverability", "be", "hurt", "not", "helped", "by", "the", "fact", "that", "these", "methods", "be", "not", "bound", "since", "I", "m", "seeing", "an", "incomplete", "list", "of", "methods", "if", "I", "m", "just", "looking", "at", "the", "resource", "NUMBER", "Also", "to", "meet", "you", "halfway", "I", "do", "appreciate", "your", "example", "and", "the", "fact", "that", "I", "can", "construct", "an", "ec", "NUMBER", "KeyPair", "and", "use", "its", "bound", "method", "NUMBER", "But", "that", "doesn", "t", "work", "when", "there", "be", "no", "resource", "representation", "for", "what", "I", "want", "to", "do", "e", "NUMBER", "g", "NUMBER", "there", "be", "no", "SubnetAttribute", "for", "LINK", "and", "no", "Route", "for", "LINK", "NUMBER", "kislyuk", "The", "other", "suggestions", "you", "had", "look", "good", "to", "me", "they", "follow", "the", "general", "theme", "pattern", "of", "resources", "NUMBER", "They", "just", "need", "to", "be", "add", "to", "the", "ec", "NUMBER", "json", "resource", "model", "NUMBER", "You", "be", "welcome", "to", "send", "a", "PR", "to", "add", "them", "NUMBER", "Otherwise", "we", "will", "look", "into", "add", "them", "NUMBER", "In", "general", "if", "a", "resource", "be", "miss", "an", "operation", "that", "seems", "like", "it", "would", "belong", "on", "it", "it", "be", "best", "to", "get", "it", "add", "to", "the", "resource", "as", "oppose", "to", "add", "it", "to", "the", "service", "resource", "because", "the", "service", "resource", "at", "that", "point", "be", "just", "a", "super", "client", "has", "all", "of", "the", "client", "methods", "with", "some", "extra", "subresources", "and", "collections", "and", "hurts", "discoverabilty", "especially", "when", "you", "have", "a", "large", "API", "like", "EC", "NUMBER", "do", "NUMBER", "Closing", "out", "this", "issue", "and", "lets", "track", "the", "other", "features", "in", "the", "issue", "that", "you", "opened", "up", "NUMBER", "ship", "This", "be", "the", "final", "pull", "request", "in", "the", "series", "of", "pull", "request", "that", "I", "have", "be", "make", "to", "add", "dynamically", "generate", "docstrings", "to", "clients", "and", "resources", "NUMBER", "I", "would", "recommend", "looking", "at", "this", "pull", "request", "last", "because", "it", "include", "two", "previous", "pull", "request", "and", "thus", "makes", "it", "quite", "large", "NUMBER", "In", "addition", "I", "did", "a", "fair", "amount", "of", "refactoring", "of", "the", "resource", "factory", "code", "NUMBER", "With", "the", "waiter", "docstrings", "I", "needed", "access", "to", "a", "waiter", "model", "and", "that", "really", "just", "add", "on", "to", "the", "really", "large", "signatures", "use", "throughout", "the", "factories", "NUMBER", "So", "I", "decided", "to", "shorten", "the", "signatures", "and", "make", "the", "argument", "much", "more", "explicit", "to", "improve", "readability", "by", "reducing", "ambiguity", "NUMBER", "I", "shortened", "the", "signatures", "by", "introduce", "the", "concept", "of", "a", "ServiceContext", "where", "it", "be", "just", "a", "namedtuple", "of", "important", "information", "relate", "to", "the", "service", "and", "add", "many", "of", "the", "argument", "to", "this", "new", "class", "NUMBER", "I", "did", "this", "because", "there", "was", "this", "pattern", "of", "where", "there", "were", "some", "objects", "that", "were", "needed", "for", "few", "spots", "in", "the", "code", "and", "only", "for", "reading", "purposes", "but", "due", "to", "the", "nature", "of", "how", "resources", "dangle", "off", "all", "other", "resources", "it", "needed", "to", "be", "pass", "to", "a", "dangling", "class", "so", "that", "it", "can", "be", "pass", "to", "other", "classes", "that", "may", "be", "generate", "from", "it", "NUMBER", "Thus", "this", "allows", "us", "to", "update", "the", "code", "such", "that", "if", "the", "factory", "needs", "any", "more", "information", "we", "can", "add", "it", "to", "this", "context", "instead", "of", "having", "to", "update", "the", "signatures", "and", "all", "of", "the", "spots", "the", "method", "be", "call", "NUMBER", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "Test", "pass", "but", "the", "rebasing", "job", "was", "messy", "here", "NUMBER", "I", "would", "prefer", "to", "wait", "until", "the", "collections", "docstrings", "be", "merge", "NUMBER", "So", "I", "can", "clean", "this", "up", "a", "bit", "more", "NUMBER", "shipit", "My", "infrastructure", "be", "use", "a", "lot", "of", "S", "NUMBER", "interactions", "NUMBER", "Previously", "in", "boto", "it", "randomly", "stucked", "once", "per", "long", "week", "or", "two", "weeks", "on", "s", "NUMBER", "upload", "forever", "without", "any", "kind", "of", "timeout", "or", "response", "basically", "either", "on", "connection", "creation", "or", "upload", "file", "NUMBER", "After", "migration", "to", "boto", "NUMBER", "problem", "disappeared", "for", "some", "period", "of", "time", "but", "still", "appeared", "NUMBER", "After", "I", "update", "botocore", "one", "week", "ago", "exception", "finally", "appeared", "on", "one", "of", "the", "boxes", "Unable", "to", "parse", "response", "syntax", "error", "line", "NUMBER", "column", "NUMBER", "invalid", "XML", "received", "NUMBER", "Anything", "I", "can", "do", "with", "that", "Is", "it", "time", "for", "Amazon", "ticket", "I", "d", "like", "to", "try", "to", "repro", "this", "NUMBER", "It", "would", "be", "helpful", "if", "I", "can", "try", "to", "set", "up", "an", "environment", "as", "close", "to", "yours", "How", "many", "file", "be", "you", "uploading", "What", "s", "the", "average", "size", "of", "the", "objects", "be", "uploaded", "Linux", "File", "size", "be", "pretty", "different", "from", "day", "to", "day", "may", "be", "from", "NUMBER", "KB", "to", "NUMBER", "GB", "each", "file", "NUMBER", "upload_file", "be", "be", "executed", "only", "on", "single", "file", "with", "full", "absolute", "path", "okay", "NUMBER", "Average", "size", "of", "file", "be", "usually", "NUMBER", "NUMBER", "MB", "NUMBER", "Operating", "system", "be", "CentOS", "NUMBER", "NUMBER", "both", "boxes", "had", "a", "problem", "NUMBER", "I", "wasn", "t", "able", "to", "reproduce", "it", "with", "boto", "debug", "mode", "and", "infinite", "spam", "of", "connection", "creation", "for", "several", "days", "NUMBER", "Its", "possible", "that", "only", "upload_file", "with", "multipart", "upload", "might", "be", "part", "of", "problem", "NUMBER", "In", "general", "it", "feels", "like", "amazon", "s", "NUMBER", "goes", "downtime", "for", "one", "second", "and", "then", "its", "back", "NUMBER", "But", "since", "timeout", "was", "never", "catched", "even", "by", "any", "kind", "of", "HTTP", "socket", "timeout", "configuration", "boto", "config", "python", "http", "socket", "config", "in", "code", "or", "implementation", "of", "signal", "based", "wrapper", "unfortunately", "even", "that", "wasn", "t", "work", "properly", "because", "its", "run", "in", "subprocess", "NUMBER", "We", "be", "seeing", "this", "as", "well", "NUMBER", "It", "happens", "on", "small", "or", "large", "upload", "request", "perhaps", "every", "few", "hundred", "request", "NUMBER", "We", "have", "add", "an", "application", "level", "retry", "as", "a", "workaround", "NUMBER", "The", "code", "snippet", "below", "enable", "KMS", "which", "we", "also", "use", "NUMBER", "transfer", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "S", "NUMBER", "Transfer", "s", "NUMBER", "_client", "num_retries", "NUMBER", "while", "True", "try", "transfer", "NUMBER", "upload_file", "path", "bucket", "key", "extra_args", "ServerSideEncryption", "aws", "kms", "break", "except", "boto", "NUMBER", "exception", "NUMBER", "S", "NUMBER", "UploadFailedError", "as", "e", "if", "num_retries", "NUMBER", "raise", "print", "Retrying", "fail", "S", "NUMBER", "upload", "NUMBER", "e", "file", "sys", "NUMBER", "derr", "num_retries", "NUMBER", "Actually", "this", "issue", "stopped", "happening", "to", "me", "awhile", "ago", "NUMBER", "I", "may", "assume", "boto", "NUMBER", "botocore", "get", "patched", "or", "amazon", "s", "NUMBER", "became", "better", "NUMBER", "In", "general", "I", "just", "decreased", "amount", "of", "interactions", "with", "s", "NUMBER", "to", "avoid", "possible", "issue", "NUMBER", "So", "this", "be", "dependent", "on", "a", "bunch", "of", "pending", "PR", "s", "NUMBER", "So", "I", "would", "recommend", "looking", "at", "the", "botocore", "docstring", "PR", "s", "first", "and", "the", "action", "identifier", "attr", "references", "subresources", "boto", "NUMBER", "docstring", "PR", "before", "looking", "at", "this", "one", "NUMBER", "Just", "wanted", "to", "put", "this", "PR", "out", "there", "NUMBER", "This", "PR", "add", "docstrings", "to", "collection", "methods", "all", "filter", "page_size", "limit", "and", "add", "a", "docstring", "to", "the", "collection", "dangled", "off", "of", "a", "resource", "i", "NUMBER", "e", "NUMBER", "s", "NUMBER", "buckets", "cc", "jamesls", "mtdowling", "rayluo", "JordonPhillips", "jamesls", "Rebased", "NUMBER", "Good", "to", "look", "at", "now", "NUMBER", "Hi", "I", "be", "very", "new", "with", "boto", "boto", "NUMBER", "First", "of", "all", "thank", "you", "for", "all", "developers", "contribute", "efforts", "to", "support", "this", "great", "library", "NUMBER", "One", "thing", "I", "find", "be", "Amazon", "MWS", "has", "be", "support", "from", "boto", "but", "couldn", "t", "find", "one", "from", "boto", "NUMBER", "Do", "you", "guys", "have", "any", "plan", "to", "support", "the", "services", "I", "would", "also", "like", "to", "inquire", "about", "plan", "for", "MWS", "support", "in", "boto", "NUMBER", "Hi", "I", "be", "also", "interested", "for", "having", "the", "support", "of", "MWS", "into", "boto", "NUMBER", "NUMBER", "rayluo", "if", "there", "s", "interest", "from", "the", "boto", "NUMBER", "maintainers", "I", "would", "be", "happy", "to", "work", "on", "Amazon", "MWS", "support", "in", "boto", "NUMBER", "Just", "want", "to", "make", "sure", "it", "s", "a", "direction", "you", "want", "to", "go", "before", "starting", "any", "work", "NUMBER", "tomhogans", "Please", "contact", "kyleknap", "for", "comments", "NUMBER", "It", "would", "be", "nice", "to", "have", "MWS", "support", "in", "boto", "NUMBER", "One", "more", "vote", "Agreed", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Boto", "NUMBER", "client", "connects", "to", "a", "RIAK", "CS", "Server", "not", "s", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "I", "can", "browse", "the", "buckets", "but", "I", "can", "not", "see", "the", "contained", "objects", "inside", "NUMBER", "It", "seems", "that", "the", "defined", "endpoint_url", "only", "works", "until", "the", "bucket", "level", "NUMBER", "I", "see", "in", "CNTLM", "that", "bucket", "NUMBER", "objects", "NUMBER", "all", "fail", "because", "it", "connects", "to", "bucket", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "not", "use", "the", "specified", "endpoint_url", "NUMBER", "Here", "be", "the", "code", "I", "use", "import", "boto", "NUMBER", "resource", "session", "NUMBER", "resource", "s", "NUMBER", "endpoint_url", "LINK", "aws_access_key_id", "xxx", "NUMBER", "aws_secret_access_key", "yyy", "NUMBER", "list", "all", "buckets", "OK", "for", "bucket", "in", "resource", "NUMBER", "buckets", "NUMBER", "all", "print", "bucket", "NUMBER", "name", "see", "a", "bucket", "OK", "bucket", "resource", "NUMBER", "Bucket", "mybucket", "bucket", "list", "objects", "of", "a", "bucket", "NOK", "for", "o", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "print", "o", "Hi", "Rayluo", "thanks", "a", "lot", "for", "the", "very", "quick", "and", "perfect", "answer", "Sorry", "for", "not", "replying", "earlier", "NUMBER", "Indeed", "It", "works", "rayluo", "I", "can", "also", "confirm", "your", "workaround", "indeed", "works", "but", "isn", "t", "it", "merge", "into", "master", "as", "a", "fix", "or", "be", "it", "bureaucratic", "reaons", "since", "this", "project", "be", "backed", "by", "Amazon", "and", "Amazon", "doesn", "t", "want", "to", "support", "non", "Amazon", "services", "LINK", "services", "Boto", "NUMBER", "still", "has", "good", "support", "of", "many", "non", "Amazon", "services", "maybe", "boto", "NUMBER", "never", "want", "to", "support", "those", "if", "a", "user", "intentionally", "put", "endpoint_url", "why", "do", "Boto", "NUMBER", "automatically", "change", "NUMBER", "be", "that", "definitely", "a", "bug", "deserve", "a", "fix", "Yeah", "its", "arguably", "a", "bug", "but", "we", "would", "need", "to", "make", "sure", "in", "change", "this", "we", "do", "not", "break", "anybody", "relying", "on", "this", "behavior", "NUMBER", "In", "the", "meantime", "I", "would", "recommend", "use", "addressing_style", "in", "the", "s", "NUMBER", "option", "of", "Config", "to", "properly", "use", "the", "endpoint", "url", "NUMBER", "py", "import", "boto", "NUMBER", "from", "boto", "NUMBER", "session", "import", "Config", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "endpoint_url", "LINK", "config", "Config", "s", "NUMBER", "addressing_style", "virtual", "s", "NUMBER", "list_objects", "Bucket", "mybucket", "That", "will", "use", "the", "virtual", "style", "of", "addressing", "NUMBER", "If", "you", "need", "the", "path", "style", "of", "addressing", "just", "specify", "path", "instead", "NUMBER", "as", "I", "suggested", "a", "fix", "in", "LINK", "commitcomment", "NUMBER", "could", "somebody", "make", "a", "simple", "fix", "in", "fix_s", "NUMBER", "_host", "to", "remove", "that", "hard", "code", "s", "NUMBER", "amazonaws", "NUMBER", "com", "Possibly", "NUMBER", "We", "would", "have", "to", "investigate", "NUMBER", "There", "may", "be", "other", "things", "we", "have", "to", "consider", "such", "as", "if", "the", "endpoint", "do", "not", "resolve", "to", "s", "NUMBER", "amazonaws", "NUMBER", "com", "but", "one", "of", "the", "regional", "s", "NUMBER", "endpoints", "because", "that", "would", "result", "in", "request", "to", "s", "NUMBER", "not", "be", "redirected", "appropriately", "if", "the", "incorrect", "region", "be", "provide", "NUMBER", "Also", "feel", "free", "to", "contribute", "as", "well", "NUMBER", "I", "can", "verify", "if", "I", "remove", "that", "hard", "code", "s", "NUMBER", "amazon", "NUMBER", "com", "parameter", "in", "that", "fix_s", "NUMBER", "_host", "then", "it", "works", "well", "with", "virtual_host_style", "bucket", "name", "in", "hostname", "part", "LINK", "L", "NUMBER", "do", "you", "want", "me", "to", "make", "such", "a", "PR", "to", "botocore", "with", "only", "one", "line", "change", "like", "python", "def", "fix_s", "NUMBER", "_host", "request", "signature_version", "region_name", "kwargs", "This", "handler", "looks", "at", "S", "NUMBER", "request", "just", "before", "they", "be", "sign", "NUMBER", "If", "there", "be", "a", "bucket", "name", "on", "the", "path", "true", "for", "everything", "except", "ListAllBuckets", "it", "checks", "to", "see", "if", "that", "bucket", "name", "conforms", "to", "the", "DNS", "naming", "conventions", "NUMBER", "If", "it", "do", "it", "alters", "the", "request", "to", "use", "virtual", "hosting", "style", "addressing", "rather", "than", "path", "style", "addressing", "NUMBER", "This", "allows", "us", "to", "avoid", "NUMBER", "redirects", "for", "all", "bucket", "names", "that", "can", "be", "CNAME", "d", "NUMBER", "try", "switch_to_virtual_host_style", "request", "signature_version", "s", "NUMBER", "amazonaws", "NUMBER", "com", "request", "signature_version", "except", "InvalidDNSNameError", "as", "e", "bucket_name", "e", "NUMBER", "kwargs", "bucket_name", "logger", "NUMBER", "debug", "Not", "change", "URI", "bucket", "be", "not", "DNS", "compatible", "s", "bucket_name", "Why", "was", "this", "close", "This", "would", "be", "really", "nice", "if", "it", "was", "merge", "NUMBER", "Encountering", "a", "similar", "problem", "when", "trying", "to", "use", "minio", "s", "NUMBER", "compatible", "service", "with", "scrapy", "NUMBER", "LINK", "as", "per", "the", "above", "documentation", "i", "get", "error", "here", "be", "my", "code", "import", "boto", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "my", "bucket", "for", "x", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "if", "x", "NUMBER", "key", "assets", "js", "dev", "NUMBER", "js", "x", "NUMBER", "put", "Metadata", "Expires", "Sun", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "print", "x", "NUMBER", "metadata", "Expires", "x", "NUMBER", "put", "ACL", "public", "read", "error", "AttributeError", "s", "NUMBER", "ObjectSummary", "object", "has", "no", "attribute", "metadata", "bucket", "NUMBER", "objects", "NUMBER", "all", "LINK", "S", "NUMBER", "Bucket", "NUMBER", "objects", "returns", "a", "collection", "of", "s", "NUMBER", "ObjectSummary", "LINK", "objectsummary", "which", "has", "the", "full", "s", "NUMBER", "Object", "LINK", "object", "as", "a", "sub", "resource", "NUMBER", "The", "issue", "in", "this", "case", "be", "that", "the", "s", "NUMBER", "ObjectSummary", "do", "not", "have", "the", "metadata", "attribute", "NUMBER", "You", "can", "access", "the", "s", "NUMBER", "Object", "sub", "resource", "by", "calling", "NUMBER", "Object", "on", "your", "s", "NUMBER", "ObjectSummary", "NUMBER", "An", "update", "version", "of", "your", "code", "might", "look", "like", "the", "following", "python", "import", "boto", "NUMBER", "import", "datetime", "KEY", "YOUR", "KEY", "BUCKET", "YOUR", "BUCKET", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "BUCKET", "expire_time", "datetime", "NUMBER", "datetime", "NUMBER", "now", "datetime", "NUMBER", "timedelta", "days", "NUMBER", "for", "summary", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "if", "summary", "NUMBER", "key", "KEY", "target_object", "summary", "NUMBER", "Object", "target_object", "NUMBER", "put", "Expires", "expire_time", "print", "target_object", "NUMBER", "expires", "Could", "you", "try", "that", "out", "and", "let", "me", "know", "if", "you", "re", "still", "having", "problem", "Additionally", "if", "you", "know", "the", "name", "and", "bucket", "of", "the", "object", "before", "hand", "it", "be", "simpler", "to", "access", "it", "with", "s", "NUMBER", "Object", "BUCKET", "KEY", "or", "bucket", "NUMBER", "Object", "KEY", "NUMBER", "Closing", "for", "now", "NUMBER", "Please", "reopen", "if", "you", "have", "any", "more", "information", "as", "we", "have", "not", "be", "able", "to", "reproduce", "NUMBER", "JordonPhillips", "Could", "you", "try", "that", "out", "and", "let", "me", "know", "if", "you", "re", "still", "having", "problem", "Resulting", "file", "size", "be", "NUMBER", "If", "I", "run", "the", "following", "code", "all", "the", "file", "have", "NUMBER", "filesize", "NUMBER", "TAG", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "cckey", "cache", "control", "cache_time", "one_month", "for", "obj", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "if", "obj", "NUMBER", "size", "NUMBER", "continue", "on", "directories", "continue", "object", "obj", "NUMBER", "Object", "object", "NUMBER", "put", "Metadata", "cckey", "max", "age", "d", "public", "cache_time", "TAG", "JordonPhillips", "NUMBER", "ediston", "Were", "you", "able", "to", "figure", "this", "out", "I", "m", "noticing", "the", "same", "NUMBER", "file", "size", "issue", "NUMBER", "When", "I", "try", "to", "open", "one", "of", "my", "file", "in", "a", "separate", "tab", "the", "tab", "opens", "then", "immediately", "close", "NUMBER", "After", "which", "point", "chrome", "downloads", "the", "file", "NUMBER", "When", "I", "try", "to", "open", "the", "downloaded", "file", "it", "be", "empty", "NUMBER", "It", "be", "not", "clear", "why", "setting", "cache", "control", "causes", "this", "behavior", "NUMBER", "nueverest", "This", "must", "help", "LINK", "add", "metadata", "cache", "control", "header", "to", "key", "shipit", "Hey", "Sorry", "for", "treating", "this", "as", "a", "mailing", "list", "I", "didn", "t", "see", "any", "other", "method", "for", "contact", "so", "I", "went", "ahead", "and", "opened", "an", "issue", "NUMBER", "I", "m", "trying", "to", "use", "boto", "NUMBER", "to", "upload", "file", "uploaded", "to", "PyPI", "to", "S", "NUMBER", "The", "majority", "of", "these", "file", "will", "be", "TAG", "response", "client", "NUMBER", "complete_multipart_upload", "vaultName", "vault_name", "uploadId", "upload_id", "archiveSize", "str", "fsize", "File", "home", "user", "work", "python", "aws", "tool", "env", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "home", "user", "work", "python", "aws", "tool", "env", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "MissingParameterValueException", "when", "calling", "the", "CompleteMultipartUpload", "operation", "Required", "parameter", "miss", "x", "amz", "sha", "NUMBER", "tree", "hash", "But", "the", "documentation", "says", "checksum", "string", "The", "SHA", "NUMBER", "tree", "hash", "of", "the", "entire", "archive", "NUMBER", "NUMBER", "Please", "note", "that", "this", "parameter", "be", "automatically", "populated", "if", "it", "be", "not", "provide", "NUMBER", "Including", "this", "parameter", "be", "not", "required", "NUMBER", "Function", "description", "LINK", "Glacier", "NUMBER", "Client", "NUMBER", "complete_multipart_upload", "Thank", "you", "for", "you", "message", "NUMBER", "I", "didn", "t", "know", "about", "botocore", "NUMBER", "utils", "NUMBER", "calculate_tree_hash", "Documentation", "state", "StackSummaries", "StackId", "string", "StackName", "string", "TemplateDescription", "string", "CreationTime", "datetime", "NUMBER", "NUMBER", "NUMBER", "LastUpdatedTime", "datetime", "NUMBER", "NUMBER", "NUMBER", "DeletionTime", "datetime", "NUMBER", "NUMBER", "NUMBER", "StackStatus", "CREATE_IN_PROGRESS", "CREATE_FAILED", "CREATE_COMPLETE", "ROLLBACK_IN_PROGRESS", "ROLLBACK_FAILED", "ROLLBACK_COMPLETE", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETE", "UPDATE_IN_PROGRESS", "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS", "UPDATE_COMPLETE", "UPDATE_ROLLBACK_IN_PROGRESS", "UPDATE_ROLLBACK_FAILED", "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS", "UPDATE_ROLLBACK_COMPLETE", "StackStatusReason", "string", "NextToken", "string", "But", "there", "be", "no", "NextToken", "returned", "in", "the", "response", "NUMBER", "I", "expect", "that", "sometimes", "NextToken", "will", "be", "empty", "or", "even", "None", "but", "with", "no", "dict", "element", "we", "see", "KeyError", "sometimes", "and", "sometimes", "not", "NUMBER", "Documentation", "suggests", "that", "NextToken", "should", "always", "be", "present", "but", "sometimes", "empty", "NUMBER", "The", "error", "response", "do", "not", "contain", "the", "key", "Message", "here", "be", "the", "rough", "outline", "python", "import", "pdb", "import", "boto", "NUMBER", "boto", "NUMBER", "__version__", "NUMBER", "rds", "boto", "NUMBER", "client", "rds", "r", "NUMBER", "rds", "NUMBER", "list_tags_for_resource", "ResourceName", "arn", "aws", "rds", "az", "acc", "db", "name", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "exception", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "error_message", "error_response", "Error", "Message", "KeyError", "Message", "try", "NUMBER", "r", "NUMBER", "rds", "NUMBER", "list_tags_for_resource", "ResourceName", "arn", "aws", "rds", "az", "acc", "db", "name", "NUMBER", "except", "NUMBER", "pdb", "NUMBER", "post_mortem", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "exception", "NUMBER", "py", "NUMBER", "__init__", "error_message", "error_response", "Error", "Message", "Pdb", "p", "error_response", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "id", "Error", "Code", "AccessDenied", "Type", "Sender", "The", "IAM", "user", "be", "with", "the", "arn", "aws", "iam", "aws", "policy", "AdministratorAccess", "enable", "I", "don", "t", "think", "it", "be", "a", "authorization", "problem", "probably", "I", "typed", "a", "wrong", "arn", "NUMBER", "Update", "I", "find", "my", "error", "instead", "of", "typing", "arn", "aws", "rds", "TAG", "I", "typed", "arn", "aws", "rds", "TAG", "NUMBER", "I", "have", "notice", "that", "there", "be", "no", "resouces", "NUMBER", "json", "model", "for", "CodeDeploy", "in", "the", "latest", "version", "of", "boto", "NUMBER", "Any", "plan", "to", "build", "one", "soon", "Is", "there", "any", "detailed", "hopefully", "documentation", "about", "how", "one", "might", "go", "about", "build", "the", "model", "This", "be", "a", "fix", "for", "NUMBER", "When", "attempting", "to", "detect", "lists", "the", "path", "for", "the", "method", "was", "be", "examined", "instead", "of", "the", "path", "for", "the", "resource", "NUMBER", "The", "PR", "looks", "good", "NUMBER", "I", "had", "one", "comment", "that", "will", "help", "fix", "some", "other", "issue", "with", "not", "display", "in", "the", "docs", "that", "a", "list", "of", "resource", "be", "returned", "NUMBER", "I", "update", "the", "branch", "to", "address", "the", "extra", "edge", "cases", "NUMBER", "I", "abstracted", "out", "the", "collection", "detection", "logic", "into", "a", "hidden", "method", "though", "I", "be", "unsure", "if", "that", "should", "be", "in", "method", "NUMBER", "py", "or", "utils", "NUMBER", "py", "NUMBER", "I", "left", "it", "in", "method", "NUMBER", "py", "as", "that", "seem", "best", "to", "me", "NUMBER", "I", "also", "update", "the", "collections", "test", "case", "to", "properly", "verify", "collections", "be", "returned", "NUMBER", "Looks", "better", "NUMBER", "Had", "a", "couple", "of", "comments", "NUMBER", "Also", "I", "would", "not", "worry", "too", "much", "about", "the", "coveralls", "check", "not", "run", "NUMBER", "Looks", "like", "coveralls", "be", "down", "NUMBER", "Looks", "good", "NUMBER", "ship", "NUMBER", "I", "do", "not", "know", "what", "be", "up", "with", "coveralls", "but", "test", "pass", "so", "it", "should", "be", "good", "to", "merge", "NUMBER", "Before", "you", "could", "switch", "out", "the", "identifiers", "on", "a", "resource", "which", "can", "have", "unintended", "affects", "if", "you", "switch", "the", "identifier", "and", "then", "make", "subsequent", "calls", "with", "the", "resource", "NUMBER", "Now", "identifiers", "be", "read", "only", "much", "like", "how", "attributes", "be", "read", "only", "py", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "In", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "mybucketfoo", "In", "NUMBER", "bucket", "NUMBER", "name", "foo", "AttributeError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "bucket", "NUMBER", "name", "foo", "AttributeError", "can", "t", "set", "attribute", "cc", "jamesls", "mtdowling", "rayluo", "Just", "had", "a", "question", "about", "a", "failure", "case", "otherwise", "looks", "good", "NUMBER", "shipit", "When", "I", "try", "to", "create", "and", "use", "an", "S", "NUMBER", "bucket", "with", "NUMBER", "in", "the", "name", "all", "subsequent", "request", "to", "that", "bucket", "raise", "an", "exception", "NUMBER", "A", "simple", "example", "Python", "NUMBER", "default", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GCC", "NUMBER", "Compatible", "Apple", "LLVM", "NUMBER", "clang", "NUMBER", "on", "darwin", "Type", "help", "copyright", "credits", "or", "license", "for", "more", "information", "NUMBER", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "logforwardertestbucket", "bucket", "NUMBER", "create", "CreateBucketConfiguration", "LocationConstraint", "us", "west", "NUMBER", "Location", "LINK", "ResponseMetadata", "RequestId", "NUMBER", "BF", "NUMBER", "E", "NUMBER", "AA", "NUMBER", "HostId", "Ofw", "NUMBER", "UeAwdWJaNEym", "NUMBER", "O", "NUMBER", "NM", "NUMBER", "r", "NUMBER", "Lf", "NUMBER", "GJsTiaMy", "NUMBER", "SaNE", "NUMBER", "z", "NUMBER", "gYwiiLjxV", "NUMBER", "Y", "NUMBER", "KAkBz", "NUMBER", "HTTPStatusCode", "NUMBER", "bucket", "NUMBER", "delete", "ResponseMetadata", "RequestId", "NUMBER", "B", "NUMBER", "BA", "NUMBER", "B", "NUMBER", "D", "NUMBER", "HostId", "wZY", "NUMBER", "ExKV", "NUMBER", "YhJGqsAU", "NUMBER", "CMO", "NUMBER", "cmDyJRHPNwvXvjNWeYThrySwq", "vFRGyMHxyu", "ZCxuaB", "NUMBER", "A", "NUMBER", "gDMo", "HTTPStatusCode", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "test", "NUMBER", "dotsinbucket", "bucket", "NUMBER", "create", "CreateBucketConfiguration", "LocationConstraint", "us", "west", "NUMBER", "Location", "LINK", "ResponseMetadata", "RequestId", "NUMBER", "CF", "NUMBER", "FAC", "NUMBER", "FBA", "NUMBER", "F", "NUMBER", "C", "HostId", "sZahEm", "AVWHOd", "NUMBER", "YTQotg", "NUMBER", "GBCFQhUENaOMl", "NUMBER", "YeUSLX", "NUMBER", "ZzBx", "NUMBER", "H", "NUMBER", "pTU", "NUMBER", "z", "NUMBER", "RJdEfBvx", "HTTPStatusCode", "NUMBER", "bucket", "NUMBER", "delete", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "PermanentRedirect", "when", "calling", "the", "DeleteBucket", "operation", "The", "bucket", "you", "be", "attempting", "to", "access", "must", "be", "address", "use", "the", "specified", "endpoint", "NUMBER", "Please", "send", "all", "future", "request", "to", "this", "endpoint", "NUMBER", "The", "above", "was", "do", "on", "boto", "NUMBER", "version", "NUMBER", "I", "get", "the", "same", "error", "NUMBER", "Tested", "with", "Python", "NUMBER", "botocore", "NUMBER", "and", "boto", "NUMBER", "NUMBER", "and", "botocore", "NUMBER", "and", "boto", "NUMBER", "NUMBER", "NUMBER", "_However_", "setting", "up", "the", "client", "with", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "region", "us", "west", "NUMBER", "allows", "the", "delete", "call", "to", "succeed", "NUMBER", "rayluo", "I", "m", "on", "botocore", "NUMBER", "and", "boto", "NUMBER", "NUMBER", "python", "NUMBER", "as", "shown", "above", "NUMBER", "I", "just", "reproduced", "the", "behavior", "again", "with", "this", "stack", "to", "verify", "that", "nothing", "had", "change", "since", "I", "posted", "the", "issue", "NUMBER", "Thanks", "Ray", "NUMBER", "It", "s", "not", "clear", "to", "me", "why", "this", "be", "an", "issue", "for", "the", "user", "to", "work", "around", "NUMBER", "Perhaps", "the", "bug", "isn", "t", "that", "we", "get", "a", "traceback", "from", "the", "delete", "it", "s", "that", "the", "API", "be", "asymmetric", "inconsistent", "NUMBER", "Is", "this", "documented", "somewhere", "If", "it", "s", "not", "something", "that", "can", "be", "fix", "in", "the", "SDK", "should", "we", "file", "a", "ticket", "with", "AWS", "Is", "there", "a", "way", "to", "operate", "a", "buckets", "NUMBER", "in", "the", "name", "with", "the", "client", "i", "get", "the", "error", "code", "perm", "redirect", "with", "a", "different", "endpoint", "but", "the", "endpoint", "isn", "t", "valid", "ie", "NUMBER", "on", "response", "redirect", "i", "try", "reconstructing", "a", "new", "session", "client", "targetted", "towards", "the", "redirect", "endpoint", "ala", "s", "Session", "c", "s", "NUMBER", "client", "s", "NUMBER", "region_name", "us", "east", "NUMBER", "endpoint_url", "LINK", "s", "e", "NUMBER", "response", "Error", "Endpoint", "but", "invoking", "a", "method", "on", "the", "client", "here", "returns", "a", "separate", "error", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "success_response", "exception", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_needs_retry", "caught_exception", "caught_exception", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "if", "self", "NUMBER", "_checker", "attempts", "response", "caught_exception", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "caught_exception", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "_should_retry", "return", "self", "NUMBER", "_checker", "attempt_number", "response", "caught_exception", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "caught_exception", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "call", "return", "self", "NUMBER", "_check_caught_exception", "attempt_number", "caught_exception", "File", "home", "kapil", "s", "NUMBER", "check", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "_check_caught_exception", "raise", "caught_exception", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "exception", "NUMBER", "SSLError", "hostname", "transaction", "NUMBER", "receipts", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "doesn", "t", "match", "either", "of", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "s", "NUMBER", "amazonaws", "NUMBER", "com", "This", "suggestion", "seems", "to", "throw", "an", "error", "NUMBER", "TAG", "import", "boto", "NUMBER", "s", "NUMBER", "session", "NUMBER", "resource", "s", "NUMBER", "region_name", "s", "NUMBER", "get_bucket_location", "Bucket", "myBucketName", "LocationConstraint", "AttributeError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "import", "boto", "NUMBER", "NUMBER", "s", "NUMBER", "session", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "region_name", "s", "NUMBER", "get_bucket_location", "Bucket", "myBucketName", "LocationConstraint", "AttributeError", "s", "NUMBER", "ServiceResource", "object", "has", "no", "attribute", "get_bucket_location", "TAG", "I", "get", "the", "same", "error", "NUMBER", "Any", "news", "tks", "shipit", "Looks", "good", "It", "looks", "good", "to", "me", "NUMBER", "Had", "a", "little", "nit", "picky", "comment", "about", "the", "docstrings", "NUMBER", "I", "felt", "that", "it", "would", "be", "good", "to", "build", "up", "to", "help", "the", "exposure", "of", "these", "methods", "as", "they", "will", "show", "up", "in", "the", "html", "along", "with", "its", "docstrings", "in", "the", "list", "of", "available", "actions", "for", "the", "Bucket", "and", "Key", "NUMBER", "Otherwise", "ship", "What", "be", "the", "issue", "relate", "to", "the", "CI", "error", "We", "generally", "don", "t", "merge", "things", "unless", "the", "travis", "build", "pass", "NUMBER", "Wouldn", "t", "rebasing", "against", "develop", "get", "the", "build", "passing", "Once", "you", "re", "able", "to", "get", "travis", "passing", "feel", "free", "to", "merge", "NUMBER", "jamesls", "Rebasing", "will", "not", "help", "NUMBER", "The", "test", "in", "boto", "NUMBER", "need", "to", "get", "update", "because", "it", "relies", "on", "output", "for", "documentation", "that", "was", "change", "in", "botocore", "NUMBER", "I", "address", "it", "in", "this", "PR", "LINK", "But", "in", "the", "meantime", "we", "should", "get", "a", "PR", "in", "soon", "that", "update", "the", "test", "if", "it", "be", "going", "to", "take", "a", "while", "to", "review", "the", "resource", "docstring", "PR", "NUMBER", "The", "update", "be", "minor", "NUMBER", "I", "think", "rayluo", "be", "work", "on", "one", "NUMBER", "Looks", "good", "to", "merge", "NUMBER", "I", "would", "not", "worry", "about", "the", "coveralls", "check", "not", "run", "NUMBER", "shipit", "This", "add", "lazy", "loaded", "docstrings", "to", "resource", "actions", "and", "sub", "resources", "NUMBER", "Note", "that", "I", "still", "have", "yet", "to", "add", "docstrings", "identifiers", "attributes", "collections", "and", "resource", "waiters", "NUMBER", "I", "just", "figured", "that", "splitting", "the", "work", "up", "a", "bit", "would", "be", "easier", "to", "review", "NUMBER", "There", "be", "a", "lot", "of", "moving", "parts", "so", "I", "figured", "to", "break", "it", "up", "to", "make", "it", "easier", "to", "follow", "and", "track", "feedback", "update", "NUMBER", "Here", "be", "some", "examples", "of", "what", "you", "can", "do", "now", "py", "import", "boto", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "instance", "ec", "NUMBER", "Instance", "Id", "Sub", "resource", "help", "ec", "NUMBER", "Instance", "Load", "action", "help", "instance", "NUMBER", "load", "Action", "help", "instance", "NUMBER", "art", "Note", "that", "the", "test", "won", "t", "pass", "till", "this", "PR", "gets", "merge", "LINK", "cc", "jamesls", "mtdowling", "rayluo", "The", "most", "recent", "update", "add", "docstrings", "to", "identifiers", "attributes", "and", "references", "NUMBER", "Note", "that", "test", "still", "won", "t", "pass", "until", "all", "of", "the", "botocore", "docstring", "PRs", "be", "merge", "NUMBER", "Cool", "NUMBER", "Since", "all", "of", "the", "botocore", "docstrings", "have", "be", "merge", "this", "should", "be", "good", "to", "get", "review", "NUMBER", "No", "longer", "relying", "on", "any", "outstanding", "PRs", "NUMBER", "Looks", "good", "just", "had", "a", "few", "comments", "NUMBER", "jamesls", "I", "update", "based", "on", "feedback", "NUMBER", "I", "did", "have", "a", "comment", "on", "exposing", "more", "methods", "on", "the", "boto", "NUMBER", "session", "NUMBER", "I", "feel", "we", "should", "talk", "more", "about", "if", "the", "methods", "that", "we", "would", "need", "to", "expose", "to", "prevent", "accessing", "the", "_session", "attribute", "of", "a", "boto", "NUMBER", "session", "be", "worth", "add", "or", "if", "it", "be", "something", "we", "would", "want", "to", "expose", "NUMBER", "A", "fair", "amount", "of", "the", "methods", "that", "I", "do", "use", "on", "the", "botocore", "session", "be", "in", "the", "grey", "area", "in", "terms", "of", "what", "be", "deemed", "internal", "and", "what", "be", "external", "NUMBER", "While", "I", "was", "on", "this", "page", "LINK", "paginators", "I", "expanded", "the", "menu", "in", "the", "lower", "left", "hand", "corner", "and", "clicked", "On", "GitHub", "edit", "and", "get", "the", "GH", "NUMBER", "page", "NUMBER", "The", "same", "thing", "happens", "when", "I", "clicked", "the", "view", "link", "NUMBER", "The", "respective", "URLs", "be", "LINK", "and", "LINK", "So", "the", "change", "I", "was", "thinking", "about", "be", "to", "fix", "all", "the", "instances", "where", "the", "article", "a", "to", "an", "be", "use", "before", "a", "module", "component", "that", "also", "starts", "with", "a", "NUMBER", "For", "example", "change", "Returns", "A", "AccountPasswordPolicy", "resourca", "to", "Returns", "An", "AccountPasswordPolicy", "resource", "On", "Mon", "Aug", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Ray", "Luo", "notifications", "github", "NUMBER", "com", "write", "That", "be", "because", "most", "of", "the", "service", "documents", "do", "not", "physically", "exist", "in", "this", "repo", "in", "the", "form", "of", "rst", "file", "NUMBER", "They", "be", "generate", "by", "the", "doc", "module", "LINK", "based", "on", "service", "model", "definitions", "NUMBER", "In", "this", "sense", "that", "ReadTheDocs", "menu", "be", "somewhat", "misleading", "NUMBER", "We", "may", "need", "to", "check", "if", "we", "can", "adjust", "that", "menu", "to", "avoid", "confusion", "NUMBER", "Meanwhile", "do", "you", "have", "a", "specific", "need", "to", "change", "the", "IAM", "document", "If", "it", "be", "about", "the", "doc", "content", "we", "will", "need", "to", "relay", "it", "to", "the", "upstream", "service", "team", "and", "or", "doc", "team", "NUMBER", "If", "it", "be", "about", "the", "doc", "format", "you", "may", "be", "able", "to", "change", "it", "through", "the", "aforementioned", "doc", "module", "and", "send", "out", "a", "PR", "NUMBER", "Feel", "free", "to", "comment", "on", "this", "thread", "NUMBER", "We", "will", "see", "what", "we", "can", "do", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "So", "that", "change", "falls", "under", "the", "doc", "format", "option", "NUMBER", "We", "would", "have", "to", "update", "how", "we", "generate", "the", "documentation", "NUMBER", "More", "specifically", "that", "change", "needs", "to", "happen", "in", "this", "line", "LINK", "L", "NUMBER", "of", "the", "doc", "generator", "NUMBER", "Feel", "free", "to", "submit", "a", "pull", "request", "to", "fix", "it", "NUMBER", "Done", "NUMBER", "Please", "see", "LINK", "Here", "s", "one", "example", "of", "the", "error", "LINK", "IAM", "NUMBER", "RolePolicy", "NUMBER", "policy_document", "The", "documentation", "says", "a", "string", "be", "returned", "NUMBER", "Actually", "a", "dict", "be", "returned", "NUMBER", "It", "s", "okay", "to", "have", "a", "dict", "created", "from", "the", "json", "I", "guess", "NUMBER", "However", "I", "also", "cannot", "use", "that", "dict", "directly", "with", "the", "following", "API", "LINK", "IAM", "NUMBER", "RolePolicy", "NUMBER", "put", "I", "have", "to", "wrap", "the", "dict", "with", "json", "NUMBER", "dumps", "to", "get", "it", "to", "be", "the", "string", "that", "the", "put", "method", "wants", "for", "the", "PolicyDocument", "arg", "NUMBER", "This", "be", "confusing", "and", "it", "would", "be", "nice", "if", "I", "could", "just", "pass", "the", "dict", "or", "if", "the", "return", "of", "the", "policy_document", "attribute", "were", "actually", "a", "string", "NUMBER", "Making", "sure", "that", "the", "attribute", "be", "a", "JSON", "string", "would", "difficult", "to", "do", "because", "that", "be", "represented", "as", "a", "dictionary", "in", "IAM", "s", "API", "and", "it", "also", "would", "be", "a", "breaking", "change", "if", "we", "did", "change", "it", "to", "a", "string", "NUMBER", "As", "to", "the", "documentation", "it", "be", "incorrectly", "labeled", "a", "string", "NUMBER", "We", "will", "look", "into", "update", "it", "NUMBER", "Is", "there", "any", "way", "to", "get", "at", "that", "string", "so", "that", "I", "can", "pass", "it", "to", "the", "IAM", "NUMBER", "RolePolicy", "NUMBER", "puIs", "method", "without", "having", "to", "re", "encode", "it", "in", "json", "This", "automatic", "parsing", "be", "kinda", "terrible", "for", "any", "use", "case", "that", "can", "treat", "the", "string", "as", "a", "opaque", "value", "NUMBER", "Maybe", "it", "would", "make", "more", "sense", "to", "turn", "the", "policy_document", "into", "an", "object", "that", "has", "methods", "for", "get", "the", "string", "or", "the", "dict", "depending", "on", "whats", "appropriate", "I", "just", "run", "into", "this", "as", "well", "after", "fighting", "with", "PutGroupPolicy", "complaining", "about", "syntax", "error", "I", "know", "the", "string", "I", "m", "passing", "be", "a", "valid", "policy", "document", "because", "I", "copied", "it", "directly", "from", "the", "IAM", "policy", "in", "the", "AWS", "console", "NUMBER", "Is", "it", "also", "possible", "that", "the", "PolicyDocument", "parameter", "to", "PutGroupPolicy", "expects", "a", "dict", "and", "not", "a", "string", "Well", "since", "I", "commented", "here", "I", "ve", "successfully", "run", "my", "Python", "script", "dozens", "of", "times", "and", "it", "put", "inline", "policies", "into", "group", "without", "any", "trouble", "it", "supplies", "the", "policy", "to", "the", "create_policy", "function", "on", "the", "Group", "as", "a", "dict", "NUMBER", "Presumably", "this", "gets", "automatically", "converted", "to", "a", "string", "somewhere", "in", "the", "process", "NUMBER", "When", "I", "do", "something", "like", "client", "boto", "NUMBER", "client", "sqs", "us", "west", "NUMBER", "response", "client", "NUMBER", "get_queue_url", "QueueName", "queue_name", "print", "response", "QueueUrl", "the", "URL", "i", "get", "be", "of", "the", "form", "LINK", "west", "NUMBER", "queue", "NUMBER", "amazonaws", "NUMBER", "com", "TAG", "TAG", "NUMBER", "But", "according", "to", "the", "docs", "here", "LINK", "the", "queue", "url", "should", "be", "of", "the", "form", "LINK", "east", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "queue", "NUMBER", "NUMBER", "This", "makes", "things", "very", "confusing", "NUMBER", "was", "the", "queue", "url", "format", "recently", "change", "No", "I", "do", "not", "think", "the", "queue", "url", "format", "change", "NUMBER", "The", "difference", "be", "that", "the", "one", "in", "the", "example", "you", "linked", "be", "a", "queue", "in", "the", "us", "east", "NUMBER", "region", "and", "the", "one", "you", "be", "get", "be", "located", "in", "the", "us", "west", "NUMBER", "region", "which", "has", "a", "different", "queue", "url", "format", "than", "us", "east", "NUMBER", "queues", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "more", "question", "NUMBER", "Fixed", "typo", "in", "DynamoDB", "exception", "class", "name", "NUMBER", "Fixed", "test", "NUMBER", "Provided", "alias", "for", "backward", "compatibility", "NUMBER", "We", "should", "definitely", "get", "this", "fix", "NUMBER", "Only", "question", "be", "whether", "it", "s", "worth", "aliasing", "the", "typo", "d", "exception", "for", "backwards", "compatibility", "NUMBER", "I", "could", "go", "either", "way", "on", "that", "second", "point", "NUMBER", "kyleknap", "thoughts", "Ok", "guys", "I", "add", "alias", "NUMBER", "But", "IMHO", "this", "be", "not", "such", "case", "when", "there", "s", "a", "need", "to", "provide", "aliases", "NUMBER", "This", "be", "bug", "not", "sort", "of", "deprecate", "thing", "NUMBER", "shipit", "Looks", "good", "to", "me", "NUMBER", "jamesls", "The", "error", "be", "there", "for", "validation", "purposes", "NUMBER", "It", "tells", "you", "that", "the", "condition", "you", "tried", "to", "use", "cannot", "be", "use", "NUMBER", "I", "be", "having", "trouble", "imagining", "someone", "trying", "to", "catch", "this", "exception", "specifically", "because", "you", "really", "cannot", "do", "anything", "with", "the", "error", "or", "have", "logic", "that", "relies", "on", "that", "error", "be", "throw", "because", "you", "have", "to", "physically", "fix", "your", "condition", "statement", "in", "order", "to", "even", "be", "able", "to", "make", "a", "successful", "call", "NUMBER", "However", "I", "suppose", "if", "you", "be", "build", "an", "application", "on", "top", "of", "the", "dynamodb", "library", "and", "you", "wanted", "to", "modify", "the", "message", "sent", "back", "for", "these", "validations", "to", "the", "user", "that", "would", "break", "the", "application", "NUMBER", "As", "much", "as", "I", "really", "do", "not", "like", "that", "spelling", "mistake", "in", "there", "it", "be", "the", "right", "thing", "to", "alias", "it", "for", "backwards", "compatibility", "and", "deprecate", "it", "since", "it", "be", "a", "bug", "mistake", "as", "rayluo", "mention", "and", "which", "I", "notice", "pankshok", "you", "already", "made", "NUMBER", "Thanks", "for", "the", "catch", "NUMBER", "Merging", "NUMBER", "When", "calling", "generate_presigned_url", "on", "a", "s", "NUMBER", "resource", "the", "resulting", "calls", "be", "NUMBER", "x", "as", "slow", "as", "the", "boto", "NUMBER", "equivalent", "NUMBER", "python", "In", "NUMBER", "import", "timeit", "In", "NUMBER", "setup", "NUMBER", "import", "boto", "NUMBER", "NUMBER", "from", "boto", "NUMBER", "s", "NUMBER", "connection", "import", "S", "NUMBER", "Connection", "NUMBER", "b", "NUMBER", "_conn", "boto", "NUMBER", "client", "s", "NUMBER", "NUMBER", "b", "NUMBER", "_conn", "S", "NUMBER", "Connection", "None", "None", "NUMBER", "In", "NUMBER", "print", "min", "timeit", "NUMBER", "Timer", "b", "NUMBER", "_conn", "NUMBER", "generate_url", "NUMBER", "GET", "bucket", "foo", "bucket", "key", "foo", "key", "query_auth", "True", "setup", "setup", "NUMBER", "repeat", "NUMBER", "NUMBER", "NUMBER", "In", "NUMBER", "print", "min", "timeit", "NUMBER", "Timer", "b", "NUMBER", "_conn", "NUMBER", "generate_presigned_url", "get_object", "Params", "Bucket", "foo", "bucket", "Key", "foo", "key", "ExpiresIn", "NUMBER", "HttpMethod", "GET", "setup", "setup", "NUMBER", "repeat", "NUMBER", "NUMBER", "NUMBER", "This", "was", "run", "on", "c", "NUMBER", "xlarge", "instances", "in", "us", "west", "NUMBER", "adepue", "Quick", "question", "be", "your", "use", "case", "that", "you", "re", "generating", "a", "large", "number", "of", "these", "presigned", "URLs", "all", "at", "once", "From", "the", "output", "above", "generating", "a", "presigned", "URL", "in", "boto", "NUMBER", "looks", "like", "it", "takes", "NUMBER", "NUMBER", "or", "about", "NUMBER", "milliseconds", "which", "comes", "out", "to", "a", "rate", "of", "NUMBER", "presigned", "urls", "per", "second", "vs", "NUMBER", "boto", "NUMBER", "s", "NUMBER", "presigned", "urls", "a", "second", "NUMBER", "We", "ll", "look", "at", "improving", "the", "speed", "in", "boto", "NUMBER", "but", "it", "would", "be", "helpful", "to", "understand", "how", "you", "re", "currently", "use", "the", "presigner", "NUMBER", "I", "was", "generating", "NUMBER", "to", "NUMBER", "of", "these", "per", "page", "render", "for", "links", "to", "thumbnail", "images", "stored", "in", "s", "NUMBER", "Under", "load", "with", "NUMBER", "web", "server", "processes", "run", "on", "a", "machine", "this", "generate", "significant", "load", "increase", "NUMBER", "Any", "news", "on", "this", "boto", "NUMBER", "generate_presigned_url", "be", "quite", "slow", "to", "generate", "bulk", "urls", "NUMBER", "any", "news", "on", "this", "issue", "I", "be", "use", "the", "boto", "NUMBER", "api", "to", "with", "IAM", "and", "Cloudwatch", "NUMBER", "I", "be", "collecting", "data", "with", "IAM", "and", "then", "push", "it", "to", "a", "custom", "metric", "use", "the", "cloudwatch", "client", "but", "be", "receiving", "the", "error", "raise", "ClientError", "parsed_response", "operation_name", "NUMBER", "However", "this", "error", "only", "happens", "once", "the", "first", "time", "I", "run", "this", "script", "everyday", "NUMBER", "I", "believe", "it", "may", "be", "a", "configuration", "or", "authentication", "error", "but", "I", "have", "be", "unable", "to", "get", "to", "the", "root", "of", "the", "cause", "NUMBER", "My", "configurations", "Setup", "for", "IAM", "iam", "boto", "NUMBER", "client", "iam", "region_name", "us", "east", "NUMBER", "aws_access_key_id", "Keys", "NUMBER", "aws_access_key_id", "aws_secret_access_key", "Keys", "NUMBER", "aws_secret_access_key", "Setup", "for", "Cloudwatch", "cloudwatch", "boto", "NUMBER", "client", "cloudwatch", "region_name", "us", "east", "NUMBER", "aws_access_key_id", "Keys", "NUMBER", "aws_access_key_id", "aws_secret_access_key", "Keys", "NUMBER", "aws_secret_access_key", "My", "code", "be", "in", "NUMBER", "parts", "NUMBER", "parts", "be", "simple", "processing", "data", "from", "github", "and", "IAM", "API", "calls", "and", "the", "third", "be", "the", "put", "request", "to", "cloudwatch", "custom", "metric", "Part", "NUMBER", "Setup", "for", "IAM", "Credential", "Report", "GET", "Request", "iam", "boto", "NUMBER", "client", "iam", "region_name", "us", "east", "NUMBER", "aws_access_key_id", "Keys", "NUMBER", "aws_access_key_id", "aws_secret_access_key", "Keys", "NUMBER", "aws_secret_access_key", "iam", "NUMBER", "generate_credential_report", "report", "iam", "NUMBER", "get_credential_report", "iamData", "report", "Content", "NUMBER", "more", "data", "processing", "NUMBER", "value", "NUMBER", "NUMBER", "Part", "NUMBER", "url", "example", "NUMBER", "com", "params", "keys", "NUMBER", "params", "request", "request", "NUMBER", "get", "url", "headers", "params", "value", "NUMBER", "NUMBER", "Part", "NUMBER", "putting", "value", "NUMBER", "and", "NUMBER", "into", "Cloudwatch", "value", "NUMBER", "IAMfile", "NUMBER", "value", "NUMBER", "value", "NUMBER", "githubfile", "NUMBER", "value", "NUMBER", "I", "m", "assuming", "my", "error", "lies", "here", "in", "configuration", "cloudwatch", "boto", "NUMBER", "client", "cloudwatch", "region_name", "us", "east", "NUMBER", "aws_access_key_id", "Keys", "NUMBER", "aws_access_key_id", "aws_secret_access_key", "Keys", "NUMBER", "aws_secret_access_key", "end", "PUTresponse", "cloudwatch", "NUMBER", "put_metric_data", "Namespace", "Multi", "Factor", "Authentication", "MetricData", "MetricName", "AWS", "Timestamp", "currentTime", "Value", "value", "NUMBER", "Github", "PUTresponse", "cloudwatch", "NUMBER", "put_metric_data", "Namespace", "Multi", "Factor", "Authentication", "MetricData", "MetricName", "Github", "Timestamp", "currentTime", "Value", "value", "NUMBER", "Please", "let", "me", "know", "if", "something", "be", "unclear", "or", "if", "the", "snippets", "be", "too", "vague", "NUMBER", "I", "believe", "I", "have", "fix", "the", "issue", "NUMBER", "In", "my", "script", "I", "be", "generating", "and", "get", "the", "IAM", "credential", "report", "through", "boto", "NUMBER", "However", "the", "report", "generation", "requires", "a", "couple", "of", "seconds", "before", "it", "can", "be", "retrieved", "while", "in", "my", "script", "it", "attempted", "to", "get", "the", "report", "in", "quick", "succession", "NUMBER", "I", "have", "put", "a", "NUMBER", "second", "delay", "between", "the", "two", "commands", "and", "the", "error", "ceased", "to", "reproduce", "NUMBER", "I", "will", "conduct", "further", "test", "to", "verify", "NUMBER", "Neil", "NUMBER", "Any", "update", "on", "this", "Are", "you", "still", "seeing", "issue", "No", "I", "discover", "that", "it", "was", "cause", "as", "a", "result", "of", "the", "generate", "request", "NUMBER", "Before", "you", "can", "get", "the", "credential", "report", "the", "report", "must", "be", "generate", "and", "in", "some", "occurrences", "the", "generate", "request", "had", "a", "delay", "which", "meant", "that", "the", "get", "request", "fail", "NUMBER", "I", "add", "a", "time", "delay", "between", "the", "two", "request", "and", "it", "solve", "the", "issue", "NUMBER", "Hi", "when", "use", "boto", "NUMBER", "to", "get", "s", "NUMBER", "metrics", "i", "get", "empty", "metrics", "I", "get", "the", "metrics", "via", "list_metrics", "I", "can", "see", "them", "on", "CloudWatch", "AWS", "Web", "Console", "I", "ve", "tried", "different", "time", "spans", "from", "NUMBER", "minute", "to", "NUMBER", "Day", "Always", "return", "empty", "NUMBER", "Changed", "the", "units", "the", "Statistics", "NUMBER", "bah", "NUMBER", "cw", "boto", "NUMBER", "client", "cloudwatch", "cw", "NUMBER", "get_metric_statistics", "Namespace", "AWS", "S", "NUMBER", "MetricName", "BucketSizeBytes", "StartTime", "datetime", "NUMBER", "utcnow", "timedelta", "days", "NUMBER", "EndTime", "datetime", "NUMBER", "utcnow", "Period", "NUMBER", "Statistics", "Sum", "Unit", "Bytes", "Dimensions", "Name", "BucketName", "Value", "backup", "bucket", "OUTPUT", "u", "Datapoints", "u", "Label", "BucketSizeBytes", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "add", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "So", "here", "be", "what", "I", "did", "to", "get", "it", "to", "work", "py", "from", "datetime", "import", "timedelta", "from", "datetime", "import", "datetime", "cw", "boto", "NUMBER", "client", "cloudwatch", "bucket", "mybucketfoo", "response", "cw", "NUMBER", "get_metric_statistics", "Namespace", "AWS", "S", "NUMBER", "MetricName", "BucketSizeBytes", "StartTime", "datetime", "NUMBER", "utcnow", "timedelta", "days", "NUMBER", "EndTime", "datetime", "NUMBER", "utcnow", "Period", "NUMBER", "Statistics", "Average", "Unit", "Bytes", "Dimensions", "Name", "BucketName", "Value", "bucket", "u", "Name", "StorageType", "u", "Value", "StandardStorage", "print", "response", "The", "important", "points", "be", "that", "you", "need", "to", "take", "from", "this", "be", "the", "second", "StorageType", "dimension", "and", "the", "start", "date", "needs", "to", "be", "more", "than", "one", "day", "from", "the", "current", "time", "NUMBER", "I", "could", "not", "find", "too", "much", "documentation", "in", "the", "CloudWatch", "docs", "about", "it", "NUMBER", "However", "based", "on", "the", "console", "you", "need", "that", "StorageType", "as", "well", "to", "correctly", "view", "the", "data", "points", "NUMBER", "Also", "the", "data", "point", "for", "me", "be", "delivered", "daily", "at", "NUMBER", "AM", "so", "my", "guess", "the", "range", "of", "a", "day", "you", "specified", "was", "too", "small", "NUMBER", "However", "I", "was", "not", "able", "to", "find", "the", "official", "minimum", "span", "that", "you", "must", "specify", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "more", "question", "NUMBER", "I", "have", "tried", "that", "but", "it", "doesn", "t", "work", "NUMBER", "Not", "for", "a", "day", "not", "for", "a", "month", "NUMBER", "I", "m", "not", "sure", "what", "else", "can", "go", "wrong", "DjxDeaf", "Did", "you", "use", "the", "same", "code", "snippet", "as", "I", "did", "If", "you", "did", "more", "researching", "may", "be", "needed", "to", "determine", "why", "NUMBER", "Another", "thing", "you", "may", "need", "to", "watch", "out", "for", "be", "that", "the", "region", "for", "which", "you", "be", "make", "the", "cloudwatch", "client", "matches", "up", "with", "the", "region", "your", "s", "NUMBER", "bucket", "be", "located", "in", "NUMBER", "If", "they", "do", "not", "match", "that", "will", "cause", "the", "data", "points", "not", "too", "show", "up", "as", "well", "NUMBER", "This", "worked", "for", "me", "import", "boto", "NUMBER", "from", "datetime", "import", "timedelta", "from", "datetime", "import", "datetime", "region", "us", "east", "NUMBER", "cwWindow", "NUMBER", "client", "boto", "NUMBER", "client", "cloudwatch", "region_name", "region", "response", "client", "NUMBER", "get_metric_statistics", "Namespace", "AWS", "DynamoDB", "MetricName", "ConsumedWriteCapacityUnits", "Dimensions", "Name", "TableName", "Value", "my", "table", "name", "StartTime", "datetime", "NUMBER", "utcnow", "timedelta", "minutes", "cwWindow", "EndTime", "datetime", "NUMBER", "utcnow", "Period", "NUMBER", "Statistics", "Average", "Unit", "Count", "hi", "folks", "The", "script", "was", "initially", "work", "for", "me", "but", "has", "stopped", "work", "now", "and", "no", "matter", "what", "I", "try", "I", "get", "an", "empty", "Datapoints", "list", "NUMBER", "Is", "there", "a", "limit", "per", "day", "Any", "other", "ideas", "for", "what", "could", "be", "wrong", "Ah", "Got", "it", "to", "work", "by", "trying", "bigger", "time", "window", "NUMBER", "I", "had", "a", "timespan", "of", "NUMBER", "day", "which", "was", "work", "but", "it", "stopped", "and", "I", "had", "to", "increase", "it", "to", "NUMBER", "days", "NUMBER", "boto", "NUMBER", "uses", "a", "POST", "style", "for", "the", "search", "endpoint", "for", "CloudSearch", "to", "accommodate", "large", "query", "strings", "NUMBER", "boto", "NUMBER", "should", "either", "auto", "flip", "to", "POST", "for", "large", "query", "strings", "allow", "you", "to", "specify", "or", "always", "use", "POST", "for", "search", "as", "well", "NUMBER", "LINK", "L", "NUMBER", "rayluo", "do", "you", "accept", "help", "on", "this", "I", "be", "happy", "to", "help", "code", "whatever", "and", "open", "a", "PR", "if", "that", "be", "helpful", "NUMBER", "It", "seems", "like", "we", "would", "need", "to", "make", "a", "serializer", "in", "botocore", "that", "support", "form", "encoding", "NUMBER", "As", "of", "now", "this", "be", "blocking", "our", "usage", "of", "boto", "NUMBER", "for", "cloudsearch", "so", "I", "be", "happy", "to", "help", "donate", "time", "to", "fix", "this", "if", "you", "wanted", "to", "discuss", "how", "it", "should", "work", "rayluo", "thanks", "That", "workaround", "works", "great", "for", "now", "NUMBER", "All", "operations", "that", "require", "the", "DomainName", "kwarg", "do", "not", "work", "besides", "create_domain", "NUMBER", "Any", "that", "do", "not", "require", "these", "return", "blank", "responses", "NUMBER", "csc", "boto", "NUMBER", "client", "cloudsearch", "Example", "python", "pprint", "csc", "NUMBER", "list_domain_names", "DomainNames", "cloudsearchdomain", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "bdce", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "bdb", "NUMBER", "cd", "NUMBER", "bee", "NUMBER", "c", "python", "pprint", "csc", "NUMBER", "describe_index_fields", "DomainName", "cloudsearchdomain", "NUMBER", "ClientError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "pprint", "csc", "NUMBER", "describe_index_fields", "DomainName", "cloudsearchdomain", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "in", "_api_call", "self", "args", "kwargs", "NUMBER", "s", "only", "accepts", "keyword", "argument", "NUMBER", "py_operation_name", "NUMBER", "The", "self", "in", "this", "scope", "be", "referring", "to", "the", "BaseClient", "NUMBER", "NUMBER", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "NUMBER", "NUMBER", "_api_call", "NUMBER", "__name__", "str", "py_operation_name", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "in", "_make_api_call", "self", "operation_name", "api_params", "NUMBER", "NUMBER", "if", "http", "NUMBER", "atus_code", "NUMBER", "NUMBER", "raise", "ClientError", "parsed_response", "operation_name", "NUMBER", "else", "NUMBER", "return", "parsed_response", "ClientError", "An", "error", "occur", "ResourceNotFound", "when", "calling", "the", "DescribeIndexFields", "operation", "Domain", "not", "find", "cloudsearchdomain", "NUMBER", "python", "pprint", "csc", "NUMBER", "describe_expressions", "DomainName", "cloudsearchdomain", "NUMBER", "ClientError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "pprint", "csc", "NUMBER", "describe_expressions", "DomainName", "cloudsearchdomain", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "in", "_api_call", "self", "args", "kwargs", "NUMBER", "s", "only", "accepts", "keyword", "argument", "NUMBER", "py_operation_name", "NUMBER", "The", "self", "in", "this", "scope", "be", "referring", "to", "the", "BaseClient", "NUMBER", "NUMBER", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "NUMBER", "NUMBER", "_api_call", "NUMBER", "__name__", "str", "py_operation_name", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "in", "_make_api_call", "self", "operation_name", "api_params", "NUMBER", "NUMBER", "if", "http", "NUMBER", "atus_code", "NUMBER", "NUMBER", "raise", "ClientError", "parsed_response", "operation_name", "NUMBER", "else", "NUMBER", "return", "parsed_response", "ClientError", "An", "error", "occur", "ResourceNotFound", "when", "calling", "the", "DescribeExpressions", "operation", "Domain", "not", "find", "cloudsearchdomain", "NUMBER", "python", "pprint", "csc", "NUMBER", "describe_domains", "DomainNames", "cloudsearchdomain", "NUMBER", "DomainStatusList", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "The", "domain", "exists", "in", "the", "console", "and", "works", "just", "fine", "no", "matter", "what", "I", "do", "to", "it", "NUMBER", "What", "s", "going", "on", "I", "tried", "this", "with", "multiple", "domains", "the", "name", "cloudsearchdomain", "NUMBER", "be", "nonexistent", "and", "use", "just", "as", "a", "placeholder", "I", "have", "many", "more", "domains", "NUMBER", "I", "m", "not", "able", "to", "repro", "NUMBER", "Are", "you", "sure", "that", "your", "client", "be", "use", "the", "same", "region", "in", "which", "you", "ve", "created", "your", "domains", "I", "did", "notice", "that", "if", "I", "specify", "a", "different", "region", "I", "ll", "get", "an", "empty", "response", "In", "NUMBER", "c", "boto", "NUMBER", "client", "cloudsearch", "us", "west", "NUMBER", "In", "NUMBER", "c", "NUMBER", "list_domain_names", "Out", "NUMBER", "u", "DomainNames", "testdomain", "NUMBER", "NUMBER", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "id", "c", "NUMBER", "describe_index_fields", "DomainName", "testdomain", "IndexFields", "Out", "NUMBER", "u", "Options", "u", "IndexFieldName", "actors", "u", "IndexFieldType", "text", "array", "u", "TextArrayOptions", "u", "AnalysisScheme", "_en_default_", "u", "HighlightEnabled", "True", "u", "ReturnEnabled", "True", "NUMBER", "In", "NUMBER", "us_east_", "NUMBER", "boto", "NUMBER", "client", "cloudsearch", "us", "east", "NUMBER", "In", "NUMBER", "us_east_", "NUMBER", "list_domain_names", "Out", "NUMBER", "u", "DomainNames", "testdomain", "NUMBER", "NUMBER", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "id", "Shows", "up", "in", "list_domain_names", "but", "we", "aren", "t", "able", "to", "describe", "the", "domain", "s", "index", "field", "because", "it", "s", "in", "us", "west", "NUMBER", "In", "NUMBER", "us_east_", "NUMBER", "describe_index_fields", "DomainName", "testdomain", "Out", "NUMBER", "u", "IndexFields", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "id", "NUMBER", "Nope", "this", "do", "not", "work", "either", "NUMBER", "The", "domain", "in", "question", "cloudsearchdomain", "NUMBER", "be", "in", "us", "east", "NUMBER", "at", "least", "according", "to", "the", "AWS", "console", "and", "I", "tried", "the", "following", "In", "python", "csc", "boto", "NUMBER", "client", "cloudsearch", "us", "east", "NUMBER", "In", "python", "pprint", "csc", "NUMBER", "list_domain_names", "Output", "DomainNames", "cloudsearchdomain", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "c", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ac", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "dc", "In", "python", "pprint", "csc", "NUMBER", "describe_index_fields", "DomainName", "cloudsearchdomain", "NUMBER", "Output", "ClientError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "pprint", "csc", "NUMBER", "describe_index_fields", "DomainName", "cloudsearchdomain", "NUMBER", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "in", "_api_call", "self", "args", "kwargs", "NUMBER", "s", "only", "accepts", "keyword", "argument", "NUMBER", "py_operation_name", "NUMBER", "The", "self", "in", "this", "scope", "be", "referring", "to", "the", "BaseClient", "NUMBER", "NUMBER", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "NUMBER", "NUMBER", "_api_call", "NUMBER", "__name__", "str", "py_operation_name", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "in", "_make_api_call", "self", "operation_name", "api_params", "NUMBER", "NUMBER", "if", "http", "NUMBER", "atus_code", "NUMBER", "NUMBER", "raise", "ClientError", "parsed_response", "operation_name", "NUMBER", "else", "NUMBER", "return", "parsed_response", "ClientError", "An", "error", "occur", "ResourceNotFound", "when", "calling", "the", "DescribeIndexFields", "operation", "Domain", "not", "find", "cloudsearchdomain", "NUMBER", "And", "run", "pprint", "csc", "NUMBER", "describe_index_fields", "DomainName", "cloudsearchdomain", "NUMBER", "IndexFields", "gives", "the", "same", "output", "NUMBER", "Ping", "NUMBER", "I", "actually", "have", "a", "feeling", "that", "it", "may", "be", "due", "to", "the", "fact", "that", "your", "cloudsearch", "be", "the", "old", "version", "of", "cloudsearch", "NUMBER", "NUMBER", "NUMBER", "because", "after", "looking", "at", "the", "docs", "LINK", "there", "be", "a", "lot", "of", "functionality", "change", "NUMBER", "We", "be", "currently", "calling", "NUMBER", "NUMBER", "NUMBER", "operations", "and", "based", "on", "the", "docs", "it", "seems", "that", "the", "NUMBER", "NUMBER", "NUMBER", "API", "be", "needed", "to", "interact", "with", "NUMBER", "NUMBER", "NUMBER", "domains", "NUMBER", "You", "can", "probably", "check", "by", "registering", "a", "handler", "to", "use", "the", "old", "version", "note", "that", "I", "cannot", "confirm", "this", "because", "I", "be", "unable", "to", "create", "domains", "of", "that", "version", "NUMBER", "It", "be", "a", "legacy", "thing", "py", "import", "boto", "NUMBER", "client", "boto", "NUMBER", "client", "cloudsearch", "us", "east", "NUMBER", "def", "switch_api_version", "request", "kwargs", "request", "NUMBER", "data", "Version", "NUMBER", "NUMBER", "NUMBER", "client", "NUMBER", "meta", "NUMBER", "events", "NUMBER", "register", "before", "sign", "NUMBER", "cloudsearch", "switch_api_version", "client", "NUMBER", "describe_index_fields", "DomainName", "cloudsearchdomain", "NUMBER", "How", "feasible", "be", "it", "to", "move", "off", "of", "the", "old", "cloudsearch", "version", "It", "may", "be", "difficult", "to", "get", "a", "model", "for", "the", "old", "version", "of", "cloudsearch", "especially", "since", "it", "was", "major", "version", "bump", "before", "the", "creation", "of", "boto", "NUMBER", "but", "we", "can", "look", "into", "it", "NUMBER", "I", "think", "I", "ended", "up", "determining", "that", "the", "issue", "was", "indeed", "cause", "by", "the", "fact", "that", "we", "were", "use", "the", "old", "version", "NUMBER", "I", "do", "not", "enjoy", "use", "older", "systems", "because", "of", "lack", "of", "support", "like", "this", "but", "at", "my", "company", "we", "have", "many", "pieces", "of", "outdate", "infrastructure", "which", "doesn", "t", "get", "update", "and", "ends", "up", "cause", "trouble", "NUMBER", "I", "m", "not", "in", "a", "position", "to", "change", "this", "at", "the", "moment", "so", "I", "have", "to", "just", "deal", "with", "it", "NUMBER", "I", "think", "I", "ended", "up", "use", "some", "scraping", "method", "not", "positive", "though", "NUMBER", "Makes", "sense", "NUMBER", "Were", "you", "use", "the", "old", "boto", "NUMBER", "cloudsearch", "module", "which", "uses", "NUMBER", "NUMBER", "NUMBER", "before", "the", "cloudsearch", "NUMBER", "package", "was", "created", "to", "use", "NUMBER", "NUMBER", "NUMBER", "API", "before", "In", "the", "meantime", "we", "can", "look", "to", "see", "if", "we", "can", "get", "a", "model", "of", "the", "old", "API", "version", "into", "botocore", "if", "you", "still", "need", "it", "So", "I", "actually", "was", "able", "to", "find", "an", "old", "model", "of", "this", "cloudsearch", "version", "thanks", "javascript", "SDK", "opened", "a", "PR", "to", "support", "it", "NUMBER", "To", "use", "it", "on", "the", "client", "all", "you", "have", "to", "do", "be", "specify", "api_version", "NUMBER", "NUMBER", "NUMBER", "when", "creating", "the", "cloudsearch", "client", "NUMBER", "Documentation", "for", "SWF", "NUMBER", "Client", "NUMBER", "poll_for_decision_task", "says", "Workers", "should", "set", "their", "client", "side", "socket", "timeout", "to", "at", "least", "NUMBER", "seconds", "NUMBER", "seconds", "higher", "than", "the", "maximum", "time", "service", "may", "hold", "the", "poll", "request", "NUMBER", "But", "how", "do", "I", "do", "that", "socket", "NUMBER", "setdefaulttimeout", "NUMBER", "has", "no", "effect", "NUMBER", "When", "polling", "I", "do", "sometimes", "get", "timeout", "error", "as", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "exception", "NUMBER", "ReadTimeoutError", "HTTPSConnectionPool", "host", "swf", "NUMBER", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "port", "NUMBER", "Read", "timed", "out", "NUMBER", "read", "timeout", "NUMBER", "DEBUG", "botocore", "NUMBER", "retryhandler", "Retry", "needed", "action", "of", "NUMBER", "DEBUG", "botocore", "NUMBER", "endpoint", "Response", "received", "to", "retry", "sleeping", "for", "NUMBER", "seconds", "I", "also", "don", "t", "know", "how", "to", "avoid", "the", "retries", "so", "my", "polling", "workers", "be", "sleeping", "for", "longer", "and", "longer", "and", "I", "m", "forced", "to", "continue", "use", "boto", "NUMBER", "Thanks", "for", "point", "this", "out", "NUMBER", "There", "s", "no", "config", "option", "for", "this", "currently", "NUMBER", "Marking", "this", "as", "a", "feature", "request", "NUMBER", "After", "raising", "the", "problem", "above", "some", "time", "ago", "I", "find", "a", "temporary", "workaround", "until", "properly", "fix", "by", "editing", "botocore", "endpoint", "NUMBER", "py", "and", "change", "DEFAULT_TIMEOUT", "NUMBER", "not", "ideal", "but", "get", "me", "back", "on", "track", "NUMBER", "shipit", "Looks", "good", "NUMBER", "The", "EC", "NUMBER", "Waiter", "says", "everything", "be", "ok", "but", "it", "s", "fibbing", "the", "instance", "be", "not", "in", "fact", "run", "but", "still", "pending", "NUMBER", "I", "m", "not", "sure", "if", "this", "be", "because", "an", "instance", "object", "probably", "shouldn", "t", "be", "calling", "wait_until_running", "on", "itself", "or", "an", "actual", "race", "with", "describe_instances", "maybe", "NUMBER", "print", "Waiting", "until", "instance", "be", "run", "instance", "NUMBER", "wait_until_running", "Filters", "Name", "instance", "id", "Values", "instance", "NUMBER", "instance_id", "print", "instance", "NUMBER", "ate", "Name", "pending", "Code", "NUMBER", "Should", "be", "run", "NUMBER", "Yeah", "a", "reload", "after", "wait_until_running", "works", "with", "the", "caveat", "that", "if", "you", "be", "use", "a", "list", "of", "instances", "from", "create_instances", "and", "summarily", "iterate", "over", "the", "instances", "it", "doesn", "t", "work", "NUMBER", "I", "have", "to", "actually", "instantiate", "an", "Instance", "for", "it", "to", "work", "otherwise", "it", "still", "shows", "as", "pending", "pretty", "weird", "let", "me", "play", "with", "it", "a", "bit", "more", "NUMBER", "Closing", "for", "now", "NUMBER", "Please", "let", "us", "know", "if", "you", "have", "any", "other", "feedback", "NUMBER", "shipit", "Using", "boto", "NUMBER", "i", "m", "launching", "an", "image", "like", "so", "self", "NUMBER", "ec", "NUMBER", "_resource", "boto", "NUMBER", "resource", "ec", "NUMBER", "response", "self", "NUMBER", "ec", "NUMBER", "_resource", "NUMBER", "create_instances", "DryRun", "False", "ImageId", "image", "MinCount", "NUMBER", "MaxCount", "NUMBER", "InstanceType", "m", "NUMBER", "medium", "According", "to", "the", "docs", "that", "i", "m", "reading", "here", "LINK", "EC", "NUMBER", "ServiceResource", "NUMBER", "create_instances", "response", "should", "be", "an", "instance", "resource", "Return", "Type", "ec", "NUMBER", "Instance", "but", "i", "m", "get", "back", "a", "list", "NUMBER", "Should", "be", "returns", "a", "list", "of", "instance", "types", "NUMBER", "Would", "make", "it", "easier", "to", "compose", "a", "job", "flow", "for", "specific", "use", "cases", "NUMBER", "Instead", "of", "giving", "a", "list", "of", "parameters", "each", "input", "would", "be", "specified", "through", "a", "function", "e", "NUMBER", "g", "NUMBER", "job_flow", "NUMBER", "add_step", "job_flow", "NUMBER", "add_boostrap_action", "then", "job_flow", "NUMBER", "art", "NUMBER", "Right", "now", "I", "m", "doing", "this", "for", "each", "parameter", "and", "its", "painful", "NUMBER", "Closing", "issue", "due", "to", "inactivity", "NUMBER", "Please", "reopen", "if", "there", "be", "an", "update", "NUMBER", "The", "response", "structure", "documented", "at", "LINK", "S", "NUMBER", "Client", "NUMBER", "get_bucket_acl", "says", "that", "the", "Grantee", "dictionary", "should", "contain", "the", "following", "attributes", "DisplayName", "EmailAddress", "ID", "Type", "and", "URI", "NUMBER", "When", "test", "grantees", "only", "consist", "of", "a", "URI", "e", "NUMBER", "g", "NUMBER", "LINK", "or", "pair", "of", "DisplayName", "and", "ID", "NUMBER", "Thanks", "I", "expected", "the", "URI", "ID", "EmailAddress", "to", "only", "be", "there", "if", "it", "applies", "but", "I", "though", "that", "Type", "would", "always", "be", "present", "NUMBER", "The", "S", "NUMBER", "AP", "reference", "at", "LINK", "do", "not", "mention", "a", "Type", "at", "all", "actually", "so", "that", "makes", "sense", "that", "it", "do", "not", "exist", "NUMBER", "Maybe", "it", "could", "be", "remove", "from", "the", "documented", "structure", "then", "Thanks", "Cool", "thanks", "for", "the", "prompt", "reply", "From", "LINK", "I", "be", "use", "boto", "NUMBER", "to", "manage", "users", "in", "my", "AWS", "account", "NUMBER", "The", "call", "to", "create", "a", "new", "user", "works", "on", "my", "local", "machine", "as", "part", "of", "unittesting", "but", "not", "on", "production", "server", "NUMBER", "This", "be", "how", "I", "initialize", "the", "session", "self", "NUMBER", "session", "Session", "aws_access_key_id", "aws_secret_access_key", "region_name", "us", "west", "NUMBER", "and", "this", "be", "the", "user", "creation", "client", "self", "NUMBER", "session", "NUMBER", "resource", "iam", "user", "client", "NUMBER", "User", "username", "user", "user", "NUMBER", "create", "log", "Starting", "new", "HTTPS", "connection", "NUMBER", "iam", "NUMBER", "amazonaws", "NUMBER", "com", "Event", "needs", "retry", "NUMBER", "iam", "NUMBER", "CreateUser", "calling", "handler", "TAG", "retry", "needed", "retryable", "exception", "caught", "Connection", "abort", "NUMBER", "error", "An", "error", "occured", "while", "connecting", "to", "the", "server", "Unable", "to", "connect", "to", "server", "at", "URL", "LINK", "ConnectionError", "Connection", "abort", "NUMBER", "error", "An", "error", "occured", "while", "connecting", "to", "the", "server", "Unable", "to", "connect", "to", "server", "at", "URL", "LINK", "I", "be", "not", "setting", "the", "endpoint", "manually", "NUMBER", "But", "in", "the", "error", "message", "I", "can", "see", "it", "s", "trying", "to", "post", "to", "http", "and", "not", "https", "NUMBER", "Thats", "the", "whole", "issue", "can", "t", "understand", "what", "NUMBER", "Locally", "it", "s", "work", "fine", "NUMBER", "On", "GAE", "it", "s", "doing", "all", "the", "trouble", "NUMBER", "Did", "you", "try", "to", "reproduce", "on", "GAE", "or", "locally", "Hi", "idanya", "NUMBER", "We", "don", "t", "have", "any", "GAE", "accounts", "to", "test", "on", "NUMBER", "Your", "code", "should", "definitely", "not", "be", "hitting", "an", "HTTP", "endpoint", "if", "you", "re", "not", "manually", "configuring", "an", "endpoint", "I", "ve", "confirmed", "this", "be", "the", "case", "NUMBER", "The", "issue", "might", "be", "a", "GAE", "specific", "setting", "that", "s", "forcing", "HTTP", "especially", "given", "it", "works", "locally", "for", "you", "and", "us", "NUMBER", "I", "think", "the", "GAE", "support", "team", "would", "be", "able", "to", "better", "assist", "you", "NUMBER", "Closing", "out", "issue", "as", "it", "doesn", "t", "appear", "to", "be", "an", "issue", "with", "boto", "NUMBER", "idanya", "Did", "you", "ever", "get", "this", "to", "work", "We", "ve", "get", "the", "same", "problem", "trying", "to", "access", "Route", "NUMBER", "on", "GAE", "use", "boto", "NUMBER", "Ran", "into", "this", "too", "and", "seems", "boto", "NUMBER", "uses", "some", "low", "level", "TCP", "connect", "calls", "that", "GEA", "blocks", "NUMBER", "In", "my", "case", "when", "I", "tried", "this", "ses", "boto", "NUMBER", "client", "ses", "region_name", "AWS_REGION", "aws_access_key_id", "AWS_KEY", "aws_secret_access_key", "AWS_SECRET", "r", "ses", "NUMBER", "send_email", "Source", "orig", "Destination", "ToAddresses", "dest_list", "Message", "msg", "It", "fail", "with", "a", "similar", "error", "NUMBER", "Finally", "get", "it", "to", "work", "like", "this", "par", "Source", "orig", "Destination", "ToAddresses", "dest_list", "Message", "msg", "r", "aws_execute", "ses", "send_email", "par", "SES", "NUMBER", "Client", "NUMBER", "send_email", "use", "the", "following", "helper", "function", "AWS_API_DEADLINE", "NUMBER", "deadline", "for", "AWS", "calls", "seconds", "AWS_SIGURL_EXP", "NUMBER", "expiry", "of", "generate_presigned_url", "URLs", "seconds", "def", "aws_execute", "client", "method", "par", "Perform", "an", "AWS", "method", "call", "by", "wrapping", "it", "in", "urlfetch", "NUMBER", "fetch", "Direct", "boto", "NUMBER", "client", "NUMBER", "method", "calls", "times", "out", "as", "GAE", "blocks", "it", "url", "client", "NUMBER", "generate_presigned_url", "method", "Params", "par", "ExpiresIn", "AWS_SIGURL_EXP", "HttpMethod", "GET", "hdrs", "Accept", "application", "json", "request", "JSON", "results", "in", "body", "NUMBER", "result", "urlfetch", "NUMBER", "fetch", "url", "deadline", "AWS_API_DEADLINE", "headers", "hdrs", "if", "result", "NUMBER", "atus_code", "NUMBER", "NUMBER", "no", "NUMBER", "xx", "from", "AWS", "logging", "NUMBER", "info", "AWS", "s", "FAIL", "s", "method", "str", "result", "raise", "RuntimeError", "AWS", "s", "call", "fail", "with", "d", "method", "result", "NUMBER", "atus_code", "if", "result", "NUMBER", "content", "return", "json", "NUMBER", "loads", "result", "NUMBER", "content", "return", "Do", "we", "have", "a", "proper", "solution", "for", "this", "either", "from", "GAE", "or", "Boto", "NUMBER", "In", "boto", "there", "was", "a", "call", "to", "get", "a", "list", "of", "regions", "available", "to", "a", "given", "service", "NUMBER", "i", "NUMBER", "e", "NUMBER", "boto", "NUMBER", "cloudformation", "NUMBER", "regions", "NUMBER", "I", "don", "t", "see", "any", "sort", "of", "equivalent", "call", "in", "boto", "NUMBER", "NUMBER", "Am", "I", "miss", "something", "or", "be", "this", "relate", "to", "LINK", "What", "I", "usually", "do", "for", "this", "be", "use", "a", "client", "ec", "NUMBER", "c", "boto", "NUMBER", "client", "ec", "NUMBER", "and", "run", "describe_availability_zones", "like", "so", "python", "availZones", "for", "zone", "in", "ec", "NUMBER", "c", "NUMBER", "describe_availability_zones", "AvailabilityZones", "if", "zone", "State", "available", "availZones", "NUMBER", "append", "zone", "ZoneName", "SamCyanide", "thanks", "NUMBER", "That", "seems", "straightforward", "enough", "NUMBER", "It", "would", "be", "nice", "to", "have", "something", "similar", "provide", "NUMBER", "I", "ll", "close", "this", "since", "since", "I", "can", "make", "that", "work", "NUMBER", "That", "only", "works", "for", "EC", "NUMBER", "because", "the", "service", "itself", "provides", "a", "request", "to", "return", "all", "availability", "zones", "NUMBER", "That", "doesn", "t", "help", "you", "if", "you", "want", "to", "find", "all", "regions", "for", "another", "service", "e", "NUMBER", "g", "NUMBER", "CloudFormation", "or", "Lambda", "NUMBER", "This", "be", "important", "for", "monitoring", "purposes", "in", "a", "company", "which", "be", "growing", "fast", "and", "might", "use", "a", "new", "region", "after", "a", "few", "months", "NUMBER", "If", "this", "feature", "be", "implement", "it", "will", "help", "reduce", "the", "manual", "work", "involved", "in", "update", "the", "region", "list", "often", "NUMBER", "NUMBER", "We", "need", "this", "Feature", "also", "for", "our", "account", "configuration", "scripts", "NUMBER", "I", "have", "write", "a", "blog", "post", "on", "this", "NUMBER", "Someone", "might", "find", "it", "useful", "NUMBER", "LINK", "all", "aws", "regions", "use", "aws", "cli", "on", "python", "shyampsunder", "NUMBER", "you", "don", "t", "need", "a", "subprocess", "NUMBER", "python", "import", "boto", "NUMBER", "from", "pprint", "import", "pprint", "ec", "NUMBER", "c", "boto", "NUMBER", "client", "ec", "NUMBER", "pprint", "ec", "NUMBER", "c", "NUMBER", "describe_regions", "returns", "Regions", "Endpoint", "ec", "NUMBER", "eu", "west", "NUMBER", "amazonaws", "NUMBER", "com", "RegionName", "eu", "west", "NUMBER", "Endpoint", "ec", "NUMBER", "ap", "southeast", "NUMBER", "amazonaws", "NUMBER", "com", "RegionName", "ap", "southeast", "NUMBER", "Endpoint", "ec", "NUMBER", "ap", "southeast", "NUMBER", "amazonaws", "NUMBER", "com", "RegionName", "ap", "southeast", "NUMBER", "Endpoint", "ec", "NUMBER", "eu", "central", "NUMBER", "amazonaws", "NUMBER", "com", "RegionName", "eu", "central", "NUMBER", "Endpoint", "ec", "NUMBER", "ap", "northeast", "NUMBER", "amazonaws", "NUMBER", "com", "RegionName", "ap", "northeast", "NUMBER", "Endpoint", "ec", "NUMBER", "ap", "northeast", "NUMBER", "amazonaws", "NUMBER", "com", "RegionName", "ap", "northeast", "NUMBER", "Endpoint", "ec", "NUMBER", "us", "east", "NUMBER", "amazonaws", "NUMBER", "com", "RegionName", "us", "east", "NUMBER", "Endpoint", "ec", "NUMBER", "sa", "east", "NUMBER", "amazonaws", "NUMBER", "com", "RegionName", "sa", "east", "NUMBER", "Endpoint", "ec", "NUMBER", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "RegionName", "us", "west", "NUMBER", "Endpoint", "ec", "NUMBER", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "RegionName", "us", "west", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "But", "this", "be", "only", "for", "EC", "NUMBER", "not", "for", "all", "other", "services", "I", "create", "me", "a", "helper", "LINK", "stups", "sevenseconds", "blob", "master", "sevenseconds", "helper", "regioninfo", "NUMBER", "py", "for", "this", "Issue", "NUMBER", "import", "boto", "NUMBER", "boto", "NUMBER", "session", "NUMBER", "Session", "NUMBER", "get_available_regions", "ec", "NUMBER", "hello", "NUMBER", "I", "have", "a", "question", "about", "boto", "NUMBER", "the", "Instance", "class", "be", "be", "initialized", "with", "a", "single", "instance", "id", "NUMBER", "instance", "ec", "NUMBER", "Instance", "id", "so", "why", "in", "this", "class", "there", "be", "methods", "that", "affect", "other", "instances", "with", "other", "id", "s", "like", "reboot", "for", "example", "which", "gets", "the", "InstanceIds", "string", "attribute", "NUMBER", "be", "I", "miss", "something", "thanks", "Hi", "sometimes", "I", "will", "get", "the", "following", "error", "but", "most", "time", "the", "program", "execute", "successfully", "what", "do", "the", "error", "exactly", "mean", "and", "how", "can", "I", "get", "rid", "of", "this", "error", "Thanks", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "refresh_price_history", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "main", "File", "refresh_price_history", "NUMBER", "py", "line", "NUMBER", "in", "main", "file_to_db", "NUMBER", "update_from_last_timestamp", "conn", "aws_key_id", "aws_secret_key", "File", "home", "ec", "NUMBER", "user", "CC", "file_to_db", "NUMBER", "py", "line", "NUMBER", "in", "update_from_last_timestamp", "unrecorded_prices", "spot_price_pagination", "NUMBER", "get_history", "ec", "NUMBER", "start_time", "end_time", "p", "File", "home", "ec", "NUMBER", "user", "CC", "spot_price_pagination", "NUMBER", "py", "line", "NUMBER", "in", "get_history", "for", "page", "in", "paginator", "NUMBER", "paginate", "StartTime", "start_time", "EndTime", "end_time", "ProductDescriptions", "products", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "iter", "response", "self", "NUMBER", "_make_request", "current_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "paginate", "NUMBER", "py", "line", "NUMBER", "in", "_make_request", "return", "self", "NUMBER", "_method", "current_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "operation_model", "request_dict", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "make_request", "return", "self", "NUMBER", "_send_request", "request_dict", "operation_model", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_send_request", "success_response", "exception", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "endpoint", "NUMBER", "py", "line", "NUMBER", "in", "_needs_retry", "caught_exception", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "emit", "return", "self", "NUMBER", "_emit", "event_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "hooks", "NUMBER", "py", "line", "NUMBER", "in", "_emit", "response", "handler", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "if", "self", "NUMBER", "_checker", "attempts", "response", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "_should_retry", "return", "self", "NUMBER", "_checker", "attempt_number", "response", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "call", "return", "self", "NUMBER", "_check_caught_exception", "attempt_number", "caught_exception", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "botocore", "retryhandler", "NUMBER", "py", "line", "NUMBER", "in", "_check_caught_exception", "raise", "caught_exception", "ssl", "NUMBER", "SSLError", "The", "read", "operation", "timed", "out", "Can", "you", "provide", "more", "information", "Such", "as", "what", "aws", "service", "be", "involved", "how", "often", "this", "happens", "be", "there", "a", "pattern", "do", "the", "error", "persist", "for", "a", "while", "so", "that", "you", "can", "use", "aws", "cli", "to", "connect", "to", "that", "service", "and", "reproduce", "the", "same", "issue", "If", "a", "symptom", "can", "be", "reproduced", "it", "would", "be", "much", "easier", "to", "debug", "and", "fix", "it", "NUMBER", "I", "use", "ec", "NUMBER", "client", "and", "paginator", "to", "retrieve", "data", "for", "spot", "price", "history", "and", "met", "this", "error", "twice", "in", "the", "last", "half", "month", "NUMBER", "It", "did", "not", "persist", "for", "a", "long", "time", "when", "I", "request", "later", "there", "was", "no", "SSLError", "showing", "again", "NUMBER", "I", "was", "use", "this", "in", "a", "EC", "NUMBER", "instance", "was", "it", "possible", "that", "the", "network", "connection", "was", "weak", "among", "the", "instance", "or", "the", "request", "was", "timed", "out", "sometimes", "Personally", "I", "would", "say", "the", "rare", "connection", "error", "between", "client", "and", "remote", "server", "be", "not", "uncommon", "in", "SOA", "NUMBER", "While", "the", "underlying", "sdk", "may", "or", "may", "not", "provide", "finer", "granularity", "of", "error", "handle", "in", "future", "after", "all", "it", "be", "the", "upper", "layer", "caller", "to", "take", "control", "about", "how", "to", "react", "to", "those", "error", "either", "retry", "or", "ignore", "NUMBER", "So", "you", "may", "consider", "use", "a", "try", "NUMBER", "except", "NUMBER", "clause", "to", "wrap", "your", "code", "and", "see", "if", "it", "helps", "in", "your", "case", "NUMBER", "Yes", "I", "already", "use", "the", "try", "except", "to", "retry", "the", "command", "NUMBER", "I", "be", "just", "curious", "about", "how", "this", "error", "happened", "NUMBER", "Anyway", "thanks", "for", "your", "help", "NUMBER", "oysnow", "This", "error", "can", "happen", "sometimes", "if", "the", "server", "takes", "a", "little", "longer", "to", "send", "a", "response", "that", "we", "allow", "time", "for", "or", "if", "it", "takes", "a", "little", "longer", "for", "the", "service", "s", "response", "to", "make", "it", "s", "way", "back", "to", "the", "caller", "i", "NUMBER", "e", "network", "issue", "as", "you", "suggested", "NUMBER", "For", "example", "we", "establish", "a", "connection", "to", "EC", "NUMBER", "and", "send", "a", "request", "for", "spot", "price", "history", "NUMBER", "We", "then", "try", "to", "NUMBER", "read", "a", "response", "from", "EC", "NUMBER", "Meanwhile", "EC", "NUMBER", "be", "work", "on", "generating", "the", "response", "to", "send", "back", "to", "us", "but", "hasn", "t", "sent", "anything", "yet", "NUMBER", "I", "believe", "our", "default", "timeout", "be", "NUMBER", "seconds", "NUMBER", "If", "after", "NUMBER", "seconds", "EC", "NUMBER", "still", "hasn", "t", "sent", "us", "a", "response", "we", "time", "out", "and", "propagate", "the", "exception", "back", "to", "the", "caller", "NUMBER", "I", "think", "a", "good", "addition", "for", "us", "be", "to", "add", "config", "options", "for", "setting", "the", "NUMBER", "read", "timeout", "on", "connections", "so", "that", "users", "that", "run", "into", "situations", "like", "this", "can", "increase", "this", "timeout", "NUMBER", "The", "other", "option", "be", "that", "we", "could", "retry", "this", "but", "given", "this", "be", "because", "the", "service", "hasn", "t", "responded", "quickly", "enough", "retrying", "has", "potential", "to", "make", "this", "problem", "worse", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "other", "question", "NUMBER", "I", "ve", "file", "LINK", "to", "track", "the", "read", "timeout", "configuration", "option", "NUMBER", "I", "m", "unable", "to", "upload", "file", "use", "aws", "kms", "which", "requires", "signature", "version", "v", "NUMBER", "Is", "this", "a", "know", "issue", "I", "m", "use", "boto", "NUMBER", "NUMBER", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "profile_name", "profile_name", "region_name", "region", "self", "NUMBER", "s", "NUMBER", "client", "session", "NUMBER", "client", "s", "NUMBER", "config", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "transfer", "S", "NUMBER", "Transfer", "self", "NUMBER", "s", "NUMBER", "client", "extra_args", "ServerSideEncryption", "aws", "kms", "transfer", "NUMBER", "upload_file", "file_path", "s", "NUMBER", "bucket", "s", "NUMBER", "_file_name", "extra_args", "extra_args", "callback", "uploader_config", "NUMBER", "progress_callback", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "SignatureDoesNotMatch", "when", "calling", "the", "PutObject", "operation", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "key", "and", "signing", "method", "NUMBER", "Thanks", "for", "the", "response", "NUMBER", "Following", "be", "the", "log", "file", "contents", "NUMBER", "Note", "that", "the", "same", "access", "id", "works", "with", "SSE", "S", "NUMBER", "So", "I", "don", "t", "think", "there", "be", "a", "problem", "with", "access", "id", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "call", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "call", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "handlers", "DEBUG", "Adding", "expect", "NUMBER", "continue", "header", "to", "request", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "TAG", "verify_ssl", "True", "with", "params", "body", "TAG", "url", "u", "XXXX", "headers", "u", "x", "amz", "meta", "XXXX", "True", "u", "x", "amz", "meta", "XXX", "NUMBER", "Content", "MD", "NUMBER", "u", "sodN", "NUMBER", "rFnoX", "NUMBER", "u", "ozGDHwrw", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "generic", "Botocore", "NUMBER", "Expect", "NUMBER", "continue", "u", "x", "amz", "server", "side", "encryption", "aws", "kms", "query_string", "url_path", "u", "XXXX", "method", "u", "PUT", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "sign", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "PUT", "XXXX", "content", "md", "NUMBER", "sodN", "NUMBER", "rFnoX", "NUMBER", "u", "ozGDHwrw", "expect", "NUMBER", "continue", "host", "s", "NUMBER", "amazonaws", "NUMBER", "com", "user", "agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "generic", "Botocore", "NUMBER", "x", "amz", "content", "sha", "NUMBER", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "f", "NUMBER", "deb", "NUMBER", "c", "NUMBER", "cffd", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "cfd", "NUMBER", "f", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "x", "amz", "meta", "XXXX", "True", "x", "amz", "meta", "XXXX", "NUMBER", "x", "amz", "server", "side", "encryption", "aws", "kms", "content", "md", "NUMBER", "expect", "host", "user", "agent", "x", "amz", "content", "sha", "NUMBER", "x", "amz", "date", "x", "amz", "meta", "XXXX", "x", "amz", "meta", "XXXX", "x", "amz", "server", "side", "encryption", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "f", "NUMBER", "deb", "NUMBER", "c", "NUMBER", "cffd", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "cfd", "NUMBER", "f", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "east", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "NUMBER", "de", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "fa", "NUMBER", "bbe", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "ee", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "df", "NUMBER", "dcdc", "NUMBER", "c", "NUMBER", "fd", "NUMBER", "df", "NUMBER", "d", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTPS", "connection", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "awsrequest", "DEBUG", "Waiting", "for", "NUMBER", "Continue", "response", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "awsrequest", "DEBUG", "Received", "a", "non", "NUMBER", "Continue", "response", "from", "the", "server", "NOT", "sending", "request", "body", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "XXXX", "HTTP", "NUMBER", "NUMBER", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "x", "amz", "id", "NUMBER", "jJhgk", "NUMBER", "TrU", "NUMBER", "Xr", "NUMBER", "YeKEjZN", "NUMBER", "vUW", "NUMBER", "K", "NUMBER", "Zb", "NUMBER", "rslp", "NUMBER", "otDxpuFf", "aInnkEpZ", "NUMBER", "axCyFlCGHZbgqdleboBM", "server", "AmazonS", "NUMBER", "transfer", "encoding", "chunked", "connection", "close", "x", "amz", "request", "id", "NUMBER", "CA", "NUMBER", "E", "NUMBER", "E", "NUMBER", "date", "Wed", "NUMBER", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "type", "application", "xml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "TAG", "TAG", "TAG", "SignatureDoesNotMatch", "TAG", "TAG", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "key", "and", "signing", "method", "NUMBER", "TAG", "TAG", "XXXXX", "TAG", "TAG", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "east", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "bef", "NUMBER", "fcfbbd", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "cf", "NUMBER", "TAG", "TAG", "ee", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "df", "NUMBER", "dcdc", "NUMBER", "c", "NUMBER", "fd", "NUMBER", "df", "NUMBER", "d", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "axxxx", "xxxx", "test", "NUMBER", "content", "md", "NUMBER", "sodN", "NUMBER", "rFnoX", "NUMBER", "u", "ozGDHwrw", "expect", "NUMBER", "continue", "host", "s", "NUMBER", "amazonaws", "NUMBER", "com", "user", "agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "generic", "Botocore", "NUMBER", "x", "amz", "content", "sha", "NUMBER", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "f", "NUMBER", "deb", "NUMBER", "c", "NUMBER", "cffd", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "cfd", "NUMBER", "f", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "x", "amz", "meta", "XXXX", "True", "x", "amz", "meta", "XXXX", "NUMBER", "x", "amz", "server", "side", "encryption", "aws", "kms", "content", "md", "NUMBER", "expect", "host", "user", "agent", "x", "amz", "content", "sha", "NUMBER", "x", "amz", "date", "x", "amz", "meta", "XXXX", "x", "amz", "meta", "XXXX", "x", "amz", "server", "side", "encryption", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "f", "NUMBER", "deb", "NUMBER", "c", "NUMBER", "cffd", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "cfd", "NUMBER", "f", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "aa", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ajJhgk", "NUMBER", "TrU", "NUMBER", "Xr", "NUMBER", "YeKEjZN", "NUMBER", "vUW", "NUMBER", "K", "NUMBER", "Zb", "NUMBER", "rslp", "NUMBER", "otDxpuFf", "aInnkEpZ", "NUMBER", "axCyFlCGHZbgqdleboBM", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "E", "ClientError", "An", "error", "occur", "SignatureDoesNotMatch", "when", "calling", "the", "PutObject", "operation", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "key", "and", "signing", "method", "NUMBER", "Any", "update", "on", "this", "Any", "pointers", "to", "how", "to", "debug", "this", "problem", "Not", "yet", "NUMBER", "We", "be", "still", "investigating", "NUMBER", "Really", "the", "only", "difference", "I", "saw", "was", "that", "you", "had", "some", "metadata", "but", "when", "I", "specified", "metadata", "it", "still", "worked", "NUMBER", "If", "I", "could", "get", "a", "minimal", "amount", "of", "steps", "so", "that", "I", "could", "reproduce", "it", "that", "would", "be", "awesome", "like", "how", "I", "did", "in", "my", "previous", "comment", "NUMBER", "Ok", "here", "be", "the", "output", "following", "exact", "repro", "steps", "that", "you", "had", "NUMBER", "If", "you", "can", "give", "me", "any", "pointers", "I", "can", "also", "set", "breakpoint", "and", "help", "debug", "in", "botocore", "NUMBER", "import", "boto", "NUMBER", "from", "boto", "NUMBER", "s", "NUMBER", "transfer", "import", "S", "NUMBER", "Transfer", "from", "botocore", "NUMBER", "client", "import", "Config", "client", "boto", "NUMBER", "client", "s", "NUMBER", "config", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "transfer", "S", "NUMBER", "Transfer", "client", "extra_args", "ServerSideEncryption", "aws", "kms", "boto", "NUMBER", "set_stream_logger", "botocore", "transfer", "NUMBER", "upload_file", "test", "NUMBER", "py", "xxxx", "test", "NUMBER", "py", "extra_args", "extra_args", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "parameter", "build", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "call", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "call", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "handlers", "DEBUG", "Adding", "expect", "NUMBER", "continue", "header", "to", "request", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Making", "request", "for", "TAG", "verify_ssl", "True", "with", "params", "body", "TAG", "url", "u", "LINK", "headers", "Content", "MD", "NUMBER", "u", "NUMBER", "O", "NUMBER", "wgeFTmsAO", "NUMBER", "bdhtPsBsw", "u", "x", "amz", "server", "side", "encryption", "aws", "kms", "Expect", "NUMBER", "continue", "User", "Agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "generic", "Botocore", "NUMBER", "query_string", "url_path", "u", "XXXX", "test", "NUMBER", "py", "method", "u", "PUT", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "before", "sign", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Calculating", "signature", "use", "v", "NUMBER", "auth", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "CanonicalRequest", "PUT", "XXXX", "test", "NUMBER", "py", "content", "md", "NUMBER", "NUMBER", "O", "NUMBER", "wgeFTmsAO", "NUMBER", "bdhtPsBsw", "expect", "NUMBER", "continue", "host", "s", "NUMBER", "amazonaws", "NUMBER", "com", "user", "agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "generic", "Botocore", "NUMBER", "x", "amz", "content", "sha", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "acbf", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "afc", "NUMBER", "c", "NUMBER", "f", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "x", "amz", "server", "side", "encryption", "aws", "kms", "content", "md", "NUMBER", "expect", "host", "user", "agent", "x", "amz", "content", "sha", "NUMBER", "x", "amz", "date", "x", "amz", "server", "side", "encryption", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "acbf", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "afc", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "StringToSign", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "east", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "fbb", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "auth", "DEBUG", "Signature", "NUMBER", "f", "NUMBER", "d", "NUMBER", "dbf", "NUMBER", "df", "NUMBER", "d", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "fa", "NUMBER", "c", "NUMBER", "ec", "NUMBER", "c", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "request", "created", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "endpoint", "DEBUG", "Sending", "http", "request", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "INFO", "Starting", "new", "HTTPS", "connection", "NUMBER", "s", "NUMBER", "amazonaws", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "awsrequest", "DEBUG", "Waiting", "for", "NUMBER", "Continue", "response", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "awsrequest", "DEBUG", "Received", "a", "non", "NUMBER", "Continue", "response", "from", "the", "server", "NOT", "sending", "request", "body", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "vendored", "NUMBER", "request", "NUMBER", "package", "NUMBER", "urllib", "NUMBER", "connectionpool", "DEBUG", "PUT", "XXXX", "test", "NUMBER", "py", "HTTP", "NUMBER", "NUMBER", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "headers", "x", "amz", "id", "NUMBER", "SagV", "NUMBER", "viT", "NUMBER", "FLp", "NUMBER", "RTuwfBi", "NUMBER", "y", "NUMBER", "xmehDIK", "NUMBER", "DY", "NUMBER", "LoUxDI", "NUMBER", "xgsqIWBFd", "JztHeBjGb", "server", "AmazonS", "NUMBER", "transfer", "encoding", "chunked", "connection", "close", "x", "amz", "request", "id", "A", "NUMBER", "F", "NUMBER", "ABC", "NUMBER", "FB", "NUMBER", "date", "Sun", "NUMBER", "Aug", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "content", "type", "application", "xml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "parsers", "DEBUG", "Response", "body", "TAG", "TAG", "TAG", "SignatureDoesNotMatch", "TAG", "TAG", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "key", "and", "signing", "method", "NUMBER", "TAG", "TAG", "XXXX", "TAG", "TAG", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "east", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "a", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ecbbb", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "adeb", "NUMBER", "TAG", "TAG", "NUMBER", "f", "NUMBER", "d", "NUMBER", "dbf", "NUMBER", "df", "NUMBER", "d", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "fa", "NUMBER", "c", "NUMBER", "ec", "NUMBER", "c", "NUMBER", "d", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "atest", "NUMBER", "py", "content", "md", "NUMBER", "NUMBER", "O", "NUMBER", "wgeFTmsAO", "NUMBER", "bdhtPsBsw", "expect", "NUMBER", "continue", "host", "s", "NUMBER", "amazonaws", "NUMBER", "com", "user", "agent", "Boto", "NUMBER", "NUMBER", "Python", "NUMBER", "Linux", "NUMBER", "NUMBER", "generic", "Botocore", "NUMBER", "x", "amz", "content", "sha", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "acbf", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "afc", "NUMBER", "c", "NUMBER", "f", "x", "amz", "date", "NUMBER", "T", "NUMBER", "Z", "x", "amz", "server", "side", "encryption", "aws", "kms", "content", "md", "NUMBER", "expect", "host", "user", "agent", "x", "amz", "content", "sha", "NUMBER", "x", "amz", "date", "x", "amz", "server", "side", "encryption", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "acbf", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "afc", "NUMBER", "c", "NUMBER", "f", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aagV", "NUMBER", "viT", "NUMBER", "FLp", "NUMBER", "RTuwfBi", "NUMBER", "y", "NUMBER", "xmehDIK", "NUMBER", "DY", "NUMBER", "LoUxDI", "NUMBER", "xgsqIWBFd", "JztHeBjGb", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "hooks", "DEBUG", "Event", "needs", "retry", "NUMBER", "s", "NUMBER", "PutObject", "calling", "handler", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "botocore", "NUMBER", "retryhandler", "DEBUG", "No", "retry", "needed", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "botobug", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "test", "NUMBER", "py", "XXXX", "test", "NUMBER", "py", "extra_args", "extra_args", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "py", "line", "NUMBER", "in", "upload_file", "self", "NUMBER", "_put_object", "filename", "bucket", "key", "callback", "extra_args", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "py", "line", "NUMBER", "in", "_put_object", "extra_args", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "SignatureDoesNotMatch", "when", "calling", "the", "PutObject", "operation", "The", "request", "signature", "we", "calculated", "do", "not", "match", "the", "signature", "you", "provide", "NUMBER", "Check", "your", "key", "and", "signing", "method", "NUMBER", "Hi", "Kyle", "I", "have", "add", "the", "log", "to", "github", "following", "the", "exact", "repro", "steps", "you", "had", "NUMBER", "If", "you", "can", "give", "me", "any", "pointers", "on", "which", "botocore", "code", "to", "look", "at", "I", "could", "also", "help", "debug", "from", "my", "side", "NUMBER", "Thanks", "Lakshmi", "NUMBER", "On", "Aug", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Kyle", "Knapp", "notifications", "github", "NUMBER", "com", "write", "Not", "yet", "NUMBER", "We", "be", "still", "investigating", "NUMBER", "Really", "the", "only", "difference", "I", "saw", "was", "that", "you", "had", "some", "metadata", "but", "when", "I", "specified", "metadata", "it", "still", "worked", "NUMBER", "If", "I", "could", "get", "a", "minimal", "amount", "of", "steps", "so", "that", "I", "could", "reproduce", "it", "that", "would", "be", "awesome", "like", "how", "I", "did", "in", "my", "previous", "comment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "From", "your", "debug", "logs", "the", "canonicalization", "we", "calculate", "matches", "exactly", "what", "S", "NUMBER", "s", "error", "message", "says", "the", "canonicalization", "should", "be", "NUMBER", "The", "only", "thing", "else", "that", "would", "be", "cause", "this", "error", "be", "because", "we", "actually", "aren", "t", "signing", "the", "string", "properly", "which", "either", "means", "There", "s", "a", "bug", "in", "how", "we", "compute", "hmacs", "You", "have", "invalid", "credentials", "NUMBER", "We", "can", "quickly", "rule", "out", "option", "two", "by", "trying", "a", "few", "things", "NUMBER", "Can", "you", "ensure", "that", "the", "following", "calls", "work", "for", "you", "Non", "sigv", "NUMBER", "call", "to", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "NUMBER", "list_buckets", "Sigv", "NUMBER", "call", "to", "other", "service", "besides", "s", "NUMBER", "boto", "NUMBER", "client", "iam", "NUMBER", "list_users", "If", "both", "of", "those", "calls", "work", "for", "you", "then", "it", "suggests", "something", "s", "wrong", "in", "how", "we", "calculate", "hmacs", "that", "we", "ll", "need", "to", "dig", "into", "NUMBER", "Both", "of", "the", "calls", "succeed", "NUMBER", "So", "I", "don", "t", "think", "it", "be", "a", "problem", "with", "credentials", "NUMBER", "Also", "kms", "encryption", "works", "with", "Java", "SDK", "NUMBER", "Its", "only", "with", "the", "boto", "NUMBER", "I", "get", "the", "error", "NUMBER", "I", "think", "it", "must", "be", "a", "hmac", "relate", "issue", "like", "you", "point", "out", "NUMBER", "Is", "there", "anything", "I", "can", "do", "to", "identify", "the", "problem", "code", "In", "looking", "at", "the", "debugs", "more", "in", "depth", "it", "looks", "like", "the", "canonical", "request", "in", "your", "debug", "log", "matches", "up", "but", "the", "string", "to", "sign", "which", "be", "build", "from", "the", "canonical", "request", "doesn", "t", "match", "what", "the", "service", "expects", "EXPECTED", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "east", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "a", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ecbbb", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "adeb", "NUMBER", "ACTUAL", "AWS", "NUMBER", "HMAC", "SHA", "NUMBER", "NUMBER", "T", "NUMBER", "Z", "NUMBER", "us", "east", "NUMBER", "s", "NUMBER", "aws", "NUMBER", "_request", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "fbb", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "The", "code", "for", "the", "string", "to", "sign", "be", "here", "LINK", "L", "NUMBER", "L", "NUMBER", "NUMBER", "I", "m", "guessing", "this", "be", "where", "the", "issue", "be", "NUMBER", "This", "seems", "to", "also", "fit", "the", "error", "pattern", "NUMBER", "It", "s", "not", "affected", "by", "other", "services", "and", "not", "affected", "by", "S", "NUMBER", "without", "signature", "version", "NUMBER", "So", "it", "s", "something", "specific", "to", "how", "we", "re", "computing", "the", "string", "to", "sign", "for", "this", "request", "NUMBER", "We", "ll", "keep", "digging", "and", "let", "you", "know", "what", "we", "find", "NUMBER", "Another", "update", "the", "specific", "line", "that", "s", "different", "be", "the", "sha", "NUMBER", "of", "the", "canonical", "request", "which", "comes", "from", "this", "line", "here", "LINK", "L", "NUMBER", "If", "I", "take", "the", "canonical", "request", "from", "your", "debug", "logs", "and", "compute", "the", "sha", "NUMBER", "exactly", "as", "that", "linked", "line", "of", "code", "do", "I", "get", "a", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ecbbb", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "adeb", "NUMBER", "which", "be", "the", "same", "value", "that", "S", "NUMBER", "expects", "NUMBER", "I", "m", "not", "sure", "why", "your", "actual", "SHA", "NUMBER", "checksum", "has", "a", "value", "of", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "fbb", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "instead", "NUMBER", "It", "would", "be", "great", "if", "you", "could", "verify", "these", "checksums", "on", "your", "end", "as", "well", "to", "double", "check", "you", "re", "seeing", "the", "same", "behavior", "I", "m", "seeing", "NUMBER", "ok", "I", "ll", "take", "a", "look", "at", "that", "on", "my", "side", "and", "respond", "back", "NUMBER", "I", "set", "a", "breakpoint", "in", "string_to_sign", "and", "notice", "that", "I", "get", "b", "NUMBER", "b", "NUMBER", "de", "NUMBER", "cd", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fd", "NUMBER", "fe", "NUMBER", "a", "NUMBER", "b", "NUMBER", "dde", "NUMBER", "ee", "which", "be", "different", "from", "what", "I", "get", "before", "NUMBER", "I", "upgrade", "boto", "NUMBER", "to", "NUMBER", "and", "my", "botocore", "be", "now", "NUMBER", "which", "was", "part", "of", "the", "canonical", "request", "NUMBER", "The", "original", "canonical", "request", "had", "boto", "NUMBER", "NUMBER", "and", "botocore", "NUMBER", "That", "may", "be", "the", "reason", "for", "get", "a", "different", "string", "to", "sign", "NUMBER", "I", "still", "get", "the", "signature", "mismatch", "error", "NUMBER", "After", "string", "to", "sign", "the", "code", "computes", "the", "signature", "NUMBER", "Could", "there", "be", "a", "problem", "with", "that", "code", "Would", "you", "happen", "to", "have", "non", "ascii", "characters", "in", "any", "part", "of", "your", "request", "e", "NUMBER", "g", "custom", "metadata", "The", "line", "that", "computes", "the", "checksum", "be", "literally", "sts", "NUMBER", "append", "sha", "NUMBER", "canonical_request", "NUMBER", "encode", "utf", "NUMBER", "NUMBER", "hexdigest", "so", "the", "only", "thing", "that", "looks", "like", "it", "could", "cause", "problem", "be", "_possibly_", "the", "encoding", "to", "utf", "NUMBER", "And", "just", "to", "confirm", "do", "this", "issue", "happen", "if", "you", "don", "t", "enable", "KMS", "server", "side", "encryption", "that", "be", "if", "you", "don", "t", "provide", "extra_args", "ServerSideEncryption", "aws", "kms", "NUMBER", "Would", "still", "like", "to", "reproduce", "the", "issue", "on", "my", "end", "to", "also", "help", "troubleshoot", "NUMBER", "I", "get", "the", "error", "without", "extra_args", "NUMBER", "Here", "be", "the", "repro", "I", "tried", "client", "boto", "NUMBER", "client", "s", "NUMBER", "config", "Config", "signature_version", "s", "NUMBER", "v", "NUMBER", "transfer", "S", "NUMBER", "Transfer", "client", "extra_args", "ServerSideEncryption", "aws", "kms", "boto", "NUMBER", "set_stream_logger", "botocore", "transfer", "NUMBER", "upload_file", "test", "NUMBER", "py", "xxxx", "test", "NUMBER", "py", "I", "m", "taking", "a", "look", "at", "my", "request", "carefully", "for", "any", "non", "ascii", "characters", "NUMBER", "The", "same", "bucket", "and", "same", "access", "secret", "keys", "work", "with", "the", "kms", "in", "java", "sdk", "NUMBER", "So", "may", "be", "the", "user", "agent", "value", "in", "canonical", "request", "that", "be", "different", "between", "the", "both", "has", "non", "ascii", "character", "NUMBER", "I", "can", "t", "casually", "find", "any", "NUMBER", "ok", "I", "figured", "the", "problem", "NUMBER", "Thank", "you", "for", "the", "pointer", "with", "the", "non", "ascii", "character", "NUMBER", "It", "was", "a", "use", "in", "the", "bucket", "NUMBER", "I", "have", "a", "bucket", "and", "a", "folder", "underneath", "NUMBER", "In", "my", "repro", "steps", "above", "xxxx", "bucket", "folder", "gets", "converted", "to", "NUMBER", "F", "in", "the", "url", "NUMBER", "Uploading", "directly", "to", "bucket", "without", "the", "folder", "works", "NUMBER", "Now", "my", "question", "be", "how", "to", "upload", "file", "to", "the", "folder", "underneath", "the", "bucket", "NUMBER", "In", "java", "code", "I", "could", "use", "bucket", "folder", "for", "bucket", "NUMBER", "Also", "in", "Boto", "NUMBER", "for", "SSE", "S", "NUMBER", "it", "uploads", "correctly", "when", "xxxx", "bucket", "folder", "NUMBER", "I", "think", "that", "the", "bug", "be", "in", "botocore", "serialize", "NUMBER", "py", "def", "serialize_to_request", "self", "parameters", "operation_model", "Should", "this", "function", "or", "the", "one", "calling", "it", "split", "the", "bucket", "and", "key", "parameters", "by", "before", "doing", "a", "utf", "NUMBER", "Oh", "that", "makes", "total", "sense", "now", "NUMBER", "The", "key", "argument", "should", "actually", "contain", "the", "path", "not", "the", "bucket", "that", "be", "upload_file", "Bucket", "mybucket", "Key", "path", "to", "my", "key", "NUMBER", "txt", "NUMBER", "NUMBER", "I", "think", "we", "can", "improve", "a", "few", "things", "specifically", "we", "can", "validate", "the", "Bucket", "name", "parameter", "before", "make", "the", "actual", "API", "call", "NUMBER", "From", "their", "docs", "LINK", "chars", "such", "as", "aren", "t", "allow", "and", "if", "we", "had", "validation", "in", "place", "it", "would", "have", "be", "straightforward", "to", "fix", "based", "on", "the", "error", "message", "NUMBER", "Leaving", "this", "open", "until", "we", "can", "get", "better", "validation", "in", "place", "NUMBER", "Thanks", "for", "digging", "into", "this", "Actually", "java", "sdk", "allows", "in", "bucket", "so", "do", "upload_file", "when", "you", "use", "AES", "NUMBER", "or", "no", "encryption", "NUMBER", "Could", "we", "make", "it", "in", "parity", "with", "the", "other", "code", "and", "allow", "in", "bucket", "Bucket", "name", "itself", "in", "S", "NUMBER", "doesnot", "contain", "the", "but", "the", "other", "code", "just", "understands", "everything", "after", "to", "be", "part", "of", "the", "key", "and", "works", "seamlessly", "NUMBER", "The", "S", "NUMBER", "docs", "LINK", "document", "what", "a", "valid", "bucket", "name", "be", "and", "I", "think", "it", "makes", "sense", "to", "validate", "the", "rules", "they", "ve", "specified", "The", "rules", "for", "bucket", "names", "in", "the", "US", "Standard", "region", "allow", "bucket", "names", "to", "be", "as", "long", "as", "NUMBER", "characters", "and", "bucket", "names", "can", "contain", "any", "combination", "of", "uppercase", "letters", "lowercase", "letters", "numbers", "periods", "NUMBER", "hyphens", "and", "underscores", "_", "NUMBER", "The", "fact", "that", "it", "works", "now", "for", "some", "specific", "cases", "be", "a", "bug", "NUMBER", "Boto", "NUMBER", "s", "attempt", "to", "graciously", "handle", "differences", "in", "capitalization", "in", "resource", "names", "results", "in", "inconsistent", "behavior", "with", "respect", "to", "emitters", "NUMBER", "If", "the", "expected", "capitalization", "be", "call", "emitters", "be", "call", "but", "if", "the", "wrong", "capitalization", "be", "provide", "the", "API", "still", "accepts", "it", "but", "doesn", "t", "call", "the", "emitters", "NUMBER", "For", "the", "below", "example", "notice", "that", "the", "load", "method", "be", "attached", "to", "the", "bucket", "via", "event", "emitters", "at", "LINK", "L", "NUMBER", "Notice", "the", "difference", "in", "capitalization", "between", "s", "NUMBER", "and", "S", "NUMBER", "in", "the", "NUMBER", "and", "NUMBER", "lines", "NUMBER", "import", "boto", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "region_name", "us", "east", "NUMBER", "NUMBER", "Bucket", "foobar", "NUMBER", "load", "boto", "NUMBER", "resource", "S", "NUMBER", "region_name", "us", "east", "NUMBER", "NUMBER", "Bucket", "foobar", "NUMBER", "load", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "AttributeError", "S", "NUMBER", "Bucket", "object", "has", "no", "attribute", "load", "This", "happens", "because", "in", "the", "latter", "case", "the", "event", "creating", "resource", "class", "NUMBER", "S", "NUMBER", "Bucket", "be", "emitted", "not", "the", "lowercased", "creating", "resource", "class", "NUMBER", "s", "NUMBER", "Bucket", "as", "was", "registered", "in", "session", "NUMBER", "py", "Either", "the", "capitalized", "S", "NUMBER", "should", "be", "disallowed", "or", "the", "emitters", "should", "still", "be", "call", "when", "the", "capitalized", "S", "NUMBER", "pass", "in", "by", "normalizing", "the", "capitalization", "somewhere", "NUMBER", "Pretty", "sure", "this", "be", "just", "a", "bug", "NUMBER", "All", "of", "our", "docs", "show", "creating", "clients", "resources", "use", "their", "lowercased", "name", "NUMBER", "I", "think", "we", "should", "just", "remove", "the", "ability", "to", "make", "this", "case", "insensitive", "and", "keep", "it", "simple", "NUMBER", "I", "don", "t", "really", "see", "a", "benefit", "of", "support", "things", "like", "boto", "NUMBER", "resource", "eC", "NUMBER", "NUMBER", "Thoughts", "cc", "kyleknap", "mtdowling", "kyleknap", "Filed", "LINK", "Let", "s", "track", "this", "over", "there", "NUMBER", "Not", "sure", "if", "this", "be", "a", "defect", "NUMBER", "Filter", "on", "a", "vpc", "NUMBER", "instances", "causes", "instances", "from", "all", "VPCs", "to", "be", "returned", "len", "list", "evpc", "NUMBER", "instances", "NUMBER", "all", "NUMBER", "len", "list", "evpc", "NUMBER", "instances", "NUMBER", "filter", "Filters", "Name", "tag", "Name", "Values", "vpn", "NUMBER", "len", "list", "evpc", "NUMBER", "instances", "NUMBER", "all", "NUMBER", "filter", "Filters", "Name", "tag", "Name", "Values", "vpn", "NUMBER", "I", "expected", "only", "NUMBER", "vpn", "box", "in", "the", "relate", "VPC", "to", "be", "returned", "I", "get", "back", "NUMBER", "vpn", "boxes", "one", "from", "each", "VPC", "in", "the", "AWS", "account", "NUMBER", "In", "this", "case", "evpc", "be", "an", "object", "of", "class", "ec", "NUMBER", "Vpc", "boto", "NUMBER", "resources", "NUMBER", "base", "NUMBER", "ServiceResource", "LGTM", "Will", "the", "doc", "system", "just", "automatically", "work", "with", "this", "customization", "because", "it", "s", "we", "re", "replacing", "an", "exist", "method", "on", "a", "resource", "Assuming", "the", "docs", "be", "good", "and", "the", "unneed", "if", "check", "for", "the", "event", "be", "remove", "shipit", "The", "event", "rename", "looks", "good", "NUMBER", "I", "would", "prefer", "we", "don", "t", "have", "the", "functional", "test", "or", "switch", "it", "to", "an", "integration", "test", "NUMBER", "Otherwise", "looks", "good", "NUMBER", "I", "think", "the", "change", "look", "good", "for", "now", "NUMBER", "We", "can", "look", "at", "improvement", "in", "the", "future", "NUMBER", "As", "for", "functional", "test", "I", "think", "of", "them", "as", "test", "that", "operate", "at", "the", "API", "use", "by", "the", "customer", "and", "on", "a", "technical", "level", "don", "t", "call", "out", "to", "AWS", "NUMBER", "The", "whole", "idea", "be", "to", "exercise", "end", "to", "end", "functionality", "and", "catch", "problem", "such", "as", "events", "not", "hooked", "up", "properly", "wrong", "assumptions", "about", "file", "system", "access", "customizations", "we", "make", "that", "don", "t", "actually", "work", "with", "real", "world", "JSON", "models", "we", "use", "etc", "NUMBER", "The", "more", "that", "gets", "mocked", "patched", "out", "the", "less", "useful", "functional", "test", "become", "for", "me", "NUMBER", "You", "mention", "that", "be", "similar", "functional", "test", "but", "I", "think", "the", "differences", "between", "them", "be", "what", "make", "the", "difference", "for", "me", "NUMBER", "For", "example", "other", "functional", "test", "only", "care", "that", "upload_file", "was", "add", "to", "a", "client", "NUMBER", "They", "don", "t", "_which_", "upload_file", "method", "or", "_how_", "it", "was", "add", "just", "that", "by", "the", "time", "you", "get", "a", "client", "upload_file", "exists", "NUMBER", "This", "gives", "us", "flexibility", "to", "alter", "the", "implementation", "as", "long", "as", "we", "make", "sure", "upload_file", "gets", "add", "NUMBER", "I", "get", "that", "it", "s", "not", "as", "simple", "in", "this", "test", "because", "we", "re", "replacing", "not", "add", "a", "method", "so", "you", "have", "to", "check", "that", "it", "was", "replaced", "with", "a", "_specific_", "method", "via", "assertIs", "NUMBER", "That", "s", "why", "I", "feel", "here", "that", "an", "integ", "test", "would", "have", "be", "better", "NUMBER", "FWIW", "you", "could", "just", "create", "a", "resource", "that", "s", "cheap", "to", "create", "like", "CreateVPC", "NUMBER", "But", "either", "way", "I", "think", "it", "s", "something", "we", "can", "look", "at", "later", "if", "this", "becomes", "an", "issue", "NUMBER", "This", "significantly", "reduces", "rendering", "time", "of", "the", "docs", "NUMBER", "Addresses", "NUMBER", "See", "LINK", "kyleknap", "When", "use", "ec", "NUMBER", "SecurityGroup", "while", "ec", "NUMBER", "be", "a", "boto", "resource", "because", "the", "security", "group", "be", "created", "with", "the", "VpcId", "parameter", "it", "cannot", "have", "an", "authorize_ingress", "operation", "performed", "on", "it", "as", "it", "throw", "InvalidGroup", "NUMBER", "NotFound", "due", "to", "the", "fact", "that", "it", "be", "looking", "for", "the", "security", "group", "within", "the", "default", "vpc", "rather", "than", "the", "created", "one", "specified", "during", "the", "initial", "creation", "of", "the", "security", "group", "NUMBER", "Full", "error", "text", "python", "Traceback", "most", "recent", "call", "last", "File", "home", "sam", "PycharmProjects", "CoreSuite", "SetUpVpc", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "inboundruleconfig", "File", "home", "sam", "PycharmProjects", "CoreSuite", "SetUpVpc", "NUMBER", "py", "line", "NUMBER", "in", "inboundruleconfig", "securitygroup", "NUMBER", "authorize_ingress", "GroupName", "groupnamein", "IpProtocol", "protocol", "FromPort", "int", "fromport", "ToPort", "int", "toport", "CidrIp", "cidrip", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidGroup", "NUMBER", "NotFound", "when", "calling", "the", "AuthorizeSecurityGroupIngress", "operation", "The", "security", "group", "NewSG", "do", "not", "exist", "in", "default", "VPC", "vpc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "The", "default", "vpc", "be", "not", "the", "same", "as", "the", "vpc", "which", "NewSG", "be", "in", "as", "NewSG", "be", "in", "vpc", "NUMBER", "ed", "NUMBER", "d", "NUMBER", "b", "NUMBER", "In", "my", "code", "I", "create", "the", "security", "group", "via", "the", "ec", "NUMBER", "client", "ec", "NUMBER", "c", "and", "specify", "the", "vpc", "like", "so", "python", "securitygroupid", "ec", "NUMBER", "c", "NUMBER", "create_security_group", "GroupName", "groupnamein", "Description", "descriptionin", "VpcId", "vpcid", "GroupId", "Then", "I", "define", "securitygroup", "as", "a", "resource", "ec", "NUMBER", "r", "python", "securitygroup", "ec", "NUMBER", "r", "NUMBER", "SecurityGroup", "securitygroupid", "And", "the", "issue", "occur", "here", "when", "attempting", "to", "authorize_ingress", "python", "securitygroup", "NUMBER", "authorize_ingress", "GroupName", "groupnamein", "IpProtocol", "protocol", "FromPort", "int", "fromport", "ToPort", "int", "toport", "CidrIp", "cidrip", "The", "security", "group", "be", "associated", "with", "the", "non", "default", "created", "VPC", "confirmed", "by", "securitygroup", "NUMBER", "vpc", "and", "the", "EC", "NUMBER", "GUI", "NUMBER", "Here", "s", "the", "trace", "python", "Begin", "security", "group", "configuration", "NUMBER", "Enter", "a", "name", "for", "new", "security", "group", "this", "will", "serve", "as", "the", "Name", "tag", "and", "Group", "name", "DebugSG", "Enter", "the", "description", "for", "the", "new", "security", "group", "FOr", "debugging", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "DEBUG", "Loading", "ec", "NUMBER", "SecurityGroup", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "INFO", "Calling", "ec", "NUMBER", "create_tags", "with", "Resources", "sg", "NUMBER", "f", "Tags", "Value", "DebugSG", "Key", "Name", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "DEBUG", "Response", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "NUMBER", "bbf", "NUMBER", "e", "abbb", "NUMBER", "fe", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "DEBUG", "Loading", "ec", "NUMBER", "Tag", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "model", "DEBUG", "Renaming", "Tag", "attribute", "resource_id", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "model", "DEBUG", "Renaming", "Tag", "attribute", "key", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "model", "DEBUG", "Renaming", "Tag", "attribute", "value", "Security", "group", "TAG", "DebugSG", "created", "Begin", "configuration", "of", "inbound", "rules", "for", "security", "group", "TAG", "Enter", "the", "protocol", "TCP", "UDP", "ICMP", "or", "NUMBER", "for", "all", "tcp", "Enter", "starting", "port", "NUMBER", "Enter", "ending", "port", "can", "be", "same", "as", "starting", "NUMBER", "Enter", "source", "IP", "where", "request", "comes", "from", "in", "CIDR", "form", "e", "NUMBER", "x", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "INFO", "Calling", "ec", "NUMBER", "authorize_security_group_ingress", "with", "GroupName", "DebugSG", "GroupId", "sg", "NUMBER", "f", "CidrIp", "NUMBER", "NUMBER", "FromPort", "NUMBER", "IpProtocol", "tcp", "ToPort", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "usr", "share", "pycharm", "helpers", "pydev", "pydevd", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "globals", "debugger", "NUMBER", "run", "setup", "file", "None", "None", "is_module", "File", "usr", "share", "pycharm", "helpers", "pydev", "pydevd", "NUMBER", "py", "line", "NUMBER", "in", "run", "pydev_imports", "NUMBER", "execfile", "file", "globals", "locals", "execute", "the", "script", "File", "usr", "share", "pycharm", "helpers", "pydev", "_pydev_imps", "_pydev_execfile", "NUMBER", "py", "line", "NUMBER", "in", "execfile", "exec", "compile", "contents", "n", "file", "exec", "glob", "loc", "File", "home", "sam", "PycharmProjects", "CoreSuite", "SetUpVpc", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "inboundruleconfig", "File", "home", "sam", "PycharmProjects", "CoreSuite", "SetUpVpc", "NUMBER", "py", "line", "NUMBER", "in", "inboundruleconfig", "securitygroup", "NUMBER", "authorize_ingress", "GroupName", "groupnamein", "IpProtocol", "protocol", "FromPort", "int", "fromport", "ToPort", "int", "toport", "CidrIp", "cidrip", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidGroup", "NUMBER", "NotFound", "when", "calling", "the", "AuthorizeSecurityGroupIngress", "operation", "The", "security", "group", "DebugSG", "do", "not", "exist", "in", "default", "VPC", "vpc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "Traceback", "most", "recent", "call", "last", "Process", "finished", "with", "exit", "code", "NUMBER", "Here", "s", "my", "code", "for", "that", "section", "I", "m", "aware", "that", "the", "recursive", "function", "be", "unnecessary", "stuck_out_tongue", "I", "m", "planning", "on", "optimizing", "with", "a", "better", "while", "loop", "when", "I", "m", "do", "with", "this", "NUMBER", "python", "print", "nBegin", "security", "group", "configuration", "NUMBER", "n", "groupnamein", "input", "Enter", "a", "name", "for", "new", "security", "group", "this", "will", "serve", "as", "the", "Name", "tag", "and", "Group", "name", "descriptionin", "input", "nEnter", "the", "description", "for", "the", "new", "security", "group", "boto", "NUMBER", "set_stream_logger", "boto", "NUMBER", "securitygroupid", "ec", "NUMBER", "c", "NUMBER", "create_security_group", "GroupName", "groupnamein", "Description", "descriptionin", "VpcId", "vpcid", "GroupId", "securitygroup", "ec", "NUMBER", "r", "NUMBER", "SecurityGroup", "securitygroupid", "securitygroup", "NUMBER", "create_tags", "Resources", "securitygroupid", "Tags", "Key", "Name", "Value", "groupnamein", "print", "nSecurity", "group", "TAG", "groupnamein", "created", "n", "Need", "multiple", "inbound", "rules", "with", "change", "ports", "and", "such", "print", "Begin", "configuration", "of", "inbound", "rules", "for", "security", "group", "TAG", "n", "def", "inboundruleconfig", "no", "way", "I", "m", "make", "it", "support", "over", "NUMBER", "protocols", "individually", "just", "TCP", "UDP", "ICMP", "or", "NUMBER", "for", "now", "can", "configure", "ip", "based", "perms", "if", "needed", "later", "SourceSecurityGroupOwnerId", "SourceSecurityGroupName", "protocol", "input", "Enter", "the", "protocol", "TCP", "UDP", "ICMP", "or", "NUMBER", "for", "all", "fromport", "input", "Enter", "starting", "port", "toport", "input", "Enter", "ending", "port", "can", "be", "same", "as", "starting", "cidrip", "input", "Enter", "source", "IP", "where", "request", "comes", "from", "in", "CIDR", "form", "e", "NUMBER", "x", "NUMBER", "NUMBER", "securitygroup", "NUMBER", "authorize_ingress", "GroupName", "groupnamein", "IpProtocol", "protocol", "FromPort", "int", "fromport", "ToPort", "int", "toport", "CidrIp", "cidrip", "rule", "Protocol", "ip", "From", "Port", "fp", "To", "Port", "tp", "Source", "cidr", "n", "print", "rule", "NUMBER", "format", "ip", "protocol", "fp", "fromport", "tp", "toport", "cidr", "cidrip", "cont", "y", "while", "not", "cont", "NUMBER", "artswith", "N", "and", "not", "cont", "NUMBER", "artswith", "n", "inboundruleconfig", "cont", "input", "Create", "another", "rule", "y", "n", "I", "even", "tried", "creating", "the", "security", "group", "and", "referencing", "the", "ID", "in", "the", "response", "later", "like", "so", "python", "createsg", "ec", "NUMBER", "c", "NUMBER", "create_security_group", "GroupName", "groupnamein", "Description", "descriptionin", "VpcId", "vpcid", "securitygroupid", "createsg", "GroupId", "As", "I", "suspected", "this", "change", "nothing", "disappointed", "python", "Begin", "security", "group", "configuration", "NUMBER", "Enter", "a", "name", "for", "new", "security", "group", "this", "will", "serve", "as", "the", "Name", "tag", "and", "Group", "name", "SecurityGroupDude", "Enter", "the", "description", "for", "the", "new", "security", "group", "YeahDude", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "DEBUG", "Loading", "ec", "NUMBER", "SecurityGroup", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "INFO", "Calling", "ec", "NUMBER", "create_tags", "with", "Resources", "sg", "c", "NUMBER", "a", "NUMBER", "Tags", "Key", "Name", "Value", "SecurityGroupDude", "Security", "group", "TAG", "SecurityGroupDude", "created", "Begin", "configuration", "of", "inbound", "rules", "for", "security", "group", "TAG", "Enter", "the", "protocol", "TCP", "UDP", "ICMP", "or", "NUMBER", "for", "all", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "DEBUG", "Response", "ResponseMetadata", "RequestId", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "faa", "NUMBER", "de", "NUMBER", "ff", "NUMBER", "HTTPStatusCode", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "DEBUG", "Loading", "ec", "NUMBER", "Tag", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "model", "DEBUG", "Renaming", "Tag", "attribute", "resource_id", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "model", "DEBUG", "Renaming", "Tag", "attribute", "key", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "model", "DEBUG", "Renaming", "Tag", "attribute", "value", "TCP", "Enter", "starting", "port", "NUMBER", "Enter", "ending", "port", "can", "be", "same", "as", "starting", "NUMBER", "Enter", "source", "IP", "where", "request", "comes", "from", "in", "CIDR", "form", "e", "NUMBER", "x", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "action", "INFO", "Calling", "ec", "NUMBER", "authorize_security_group_ingress", "with", "GroupId", "sg", "c", "NUMBER", "a", "NUMBER", "CidrIp", "NUMBER", "NUMBER", "IpProtocol", "TCP", "FromPort", "NUMBER", "ToPort", "NUMBER", "GroupName", "SecurityGroupDude", "Traceback", "most", "recent", "call", "last", "File", "home", "sam", "PycharmProjects", "CoreSuite", "SetUpVpc", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "inboundruleconfig", "File", "home", "sam", "PycharmProjects", "CoreSuite", "SetUpVpc", "NUMBER", "py", "line", "NUMBER", "in", "inboundruleconfig", "securitygroup", "NUMBER", "authorize_ingress", "GroupName", "groupnamein", "IpProtocol", "protocol", "FromPort", "int", "fromport", "ToPort", "int", "toport", "CidrIp", "cidrip", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "return", "self", "NUMBER", "_make_api_call", "operation_name", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_make_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidGroup", "NUMBER", "NotFound", "when", "calling", "the", "AuthorizeSecurityGroupIngress", "operation", "The", "security", "group", "SecurityGroupDude", "do", "not", "exist", "in", "default", "VPC", "vpc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "Process", "finished", "with", "exit", "code", "NUMBER", "Okay", "so", "the", "ec", "NUMBER", "CLIENT", "has", "a", "GroupId", "that", "you", "can", "pass", "to", "it", "which", "will", "make", "it", "work", "however", "the", "RESOURCE", "be", "unable", "to", "have", "this", "parameter", "therefore", "make", "it", "so", "you", "cannot", "use", "a", "group", "outside", "of", "the", "default", "VPC", "use", "the", "resource", "method", "NUMBER", "python", "ec", "NUMBER", "c", "NUMBER", "authorize_security_group_ingress", "GroupName", "groupnamein", "GroupId", "securitygroupid", "IpProtocol", "protocol", "FromPort", "int", "fromport", "ToPort", "int", "toport", "CidrIp", "cidrip", "Where", "ec", "NUMBER", "c", "be", "a", "boto", "NUMBER", "client", "ec", "NUMBER", "SamCyanide", "I", "came", "here", "looking", "for", "a", "solution", "to", "the", "same", "problem", "NUMBER", "Turns", "out", "in", "a", "VPC", "you", "must", "use", "LINK", "NUMBER", "GroupId", "SecurityGroupId", "and", "not", "GroupName", "SecurityGroupName", "NUMBER", "kyleknap", "I", "d", "submit", "a", "docs", "PR", "if", "I", "could", "find", "the", "source", "NUMBER", "I", "believe", "I", "m", "run", "into", "this", "issue", "here", "and", "I", "m", "not", "sure", "how", "to", "proceed", "NUMBER", "I", "have", "a", "security", "group", "in", "a", "non", "default", "VPC", "and", "I", "want", "to", "authorize", "ingress", "from", "the", "security", "group", "to", "itself", "so", "I", "do", "this", "python", "cluster_group", "NUMBER", "authorize_ingress", "SourceSecurityGroupName", "cluster_group", "NUMBER", "group_name", "This", "works", "if", "cluster_group", "be", "a", "security", "group", "in", "my", "default", "VPC", "but", "in", "a", "non", "default", "VPC", "this", "yields", "the", "following", "error", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidGroup", "NUMBER", "NotFound", "when", "calling", "the", "AuthorizeSecurityGroupIngress", "operation", "The", "security", "group", "flintrock", "nick", "do", "not", "exist", "in", "default", "VPC", "vpc", "xxxxxxxx", "So", "like", "SamCyanide", "I", "m", "puzzled", "by", "the", "fact", "that", "EC", "NUMBER", "be", "looking", "for", "the", "security", "group", "in", "my", "default", "VPC", "when", "I", "created", "it", "in", "a", "non", "default", "VPC", "NUMBER", "kyleknap", "Given", "a", "security", "group", "in", "a", "non", "default", "VPC", "how", "be", "we", "supposed", "to", "reference", "source", "security", "group", "in", "authorize_ingress", "assuming", "they", "be", "in", "the", "same", "VPC", "Taking", "my", "example", "how", "be", "I", "supposed", "to", "authorize", "ingress", "from", "a", "security", "group", "to", "itself", "if", "that", "security", "group", "be", "in", "a", "non", "default", "VPC", "Related", "issue", "LINK", "I", "believe", "I", "ve", "find", "the", "issue", "I", "was", "not", "explicitly", "specify", "the", "VPC", "when", "I", "filtered", "the", "list", "of", "security", "group", "against", "my", "account", "NUMBER", "You", "can", "have", "NUMBER", "security", "group", "with", "the", "same", "name", "if", "they", "be", "in", "different", "VPCs", "so", "I", "was", "referring", "to", "different", "security", "group", "by", "the", "same", "name", "which", "confused", "me", "NUMBER", "Please", "disregard", "my", "earlier", "comments", "NUMBER", "sweat_smile", "cc", "kyleknap", "mtdowling", "I", "may", "be", "misremembering", "the", "discussion", "NUMBER", "I", "thought", "the", "plan", "was", "to", "follow", "semver", "in", "which", "new", "features", "warrant", "a", "minor", "version", "bump", "NUMBER", "Botocore", "patch", "version", "would", "be", "bug", "fix", "service", "update", "NUMBER", "NUMBER", "Yeah", "that", "sounds", "fine", "NUMBER", "shipit", "Looks", "good", "once", "the", "botocore", "PR", "gets", "merge", "NUMBER", "I", "would", "suggest", "_not_", "creating", "a", "tutorial", "directory", "NUMBER", "This", "be", "a", "lesson", "learned", "from", "boto", "where", "these", "service", "specific", "tutorials", "never", "get", "fleshed", "out", "NUMBER", "Instead", "I", "would", "recommend", "creating", "a", "dynamodb", "guide", "that", "goes", "under", "the", "pre", "exist", "guide", "directory", "NUMBER", "We", "would", "only", "have", "service", "guide", "for", "things", "that", "have", "high", "level", "abstractions", "NUMBER", "I", "think", "eventually", "we", "ll", "make", "the", "exist", "tutorial", "more", "generic", "and", "less", "SQS", "specific", "but", "I", "would", "not", "advise", "per", "service", "tutorials", "NUMBER", "And", "finally", "we", "should", "also", "somehow", "show", "the", "expected", "output", "of", "each", "call", "NUMBER", "We", "can", "filter", "out", "things", "like", "request", "ids", "etc", "but", "I", "think", "it", "s", "important", "for", "the", "user", "to", "see", "the", "expected", "output", "so", "they", "have", "some", "indication", "if", "they", "re", "get", "the", "same", "results", "the", "tutorial", "gets", "when", "they", "call", "the", "various", "methods", "NUMBER", "Content", "wise", "I", "think", "it", "looks", "good", "NUMBER", "NUMBER", "to", "everything", "except", "moving", "the", "tutorial", "over", "to", "guide", "sqs", "NUMBER", "rst", "NUMBER", "While", "I", "agree", "with", "you", "that", "the", "tutorial", "should", "get", "update", "SQS", "has", "no", "high", "level", "abstractions", "so", "doesn", "t", "need", "a", "page", "in", "the", "user", "guide", "NUMBER", "I", "d", "rather", "keep", "the", "tutorial", "in", "its", "original", "location", "and", "have", "one", "of", "us", "update", "it", "to", "be", "less", "SQS", "specific", "in", "the", "near", "future", "NUMBER", "What", "do", "you", "think", "shipit", "Looks", "good", "NUMBER", "Related", "to", "LINK", "kyleknap", "Thanks", "for", "all", "the", "hard", "work", "on", "boto", "NUMBER", "guys", "I", "suggest", "to", "add", "the", "ability", "to", "add", "an", "alert", "to", "your", "scaling", "policy", "during", "put_scaling_metric", "NUMBER", "I", "have", "be", "implement", "a", "scheme", "for", "automating", "auto", "scaling", "group", "launch", "configurations", "and", "scaling", "policies", "use", "boto", "NUMBER", "In", "the", "put_scaling_policy", "method", "I", "don", "t", "see", "an", "option", "to", "apply", "an", "exist", "alert", "to", "a", "auto_scaling_group", "NUMBER", "During", "our", "automation", "I", "would", "want", "to", "create", "a", "launch", "configuration", "cloudwatch", "alarm", "auto_scaling_group", "then", "apply", "the", "alarm", "to", "the", "auto_scaling_group", "in", "the", "scaling", "policy", "NUMBER", "Otherwise", "everytime", "I", "add", "a", "new", "scaling", "policy", "to", "my", "auto_scaling_group", "I", "have", "to", "manually", "add", "the", "cloudwatch", "alarm", "NUMBER", "Is", "there", "a", "different", "call", "to", "add", "alert", "to", "the", "scaling", "policy", "that", "I", "be", "miss", "I", "think", "there", "be", "two", "improvement", "to", "be", "made", "to", "the", "documentation", "Correctly", "link", "the", "documentation", "source", "the", "EC", "NUMBER", "reference", "LINK", "links", "to", "an", "unexistent", "page", "LINK", "It", "makes", "it", "difficult", "to", "contribute", "back", "The", "EC", "NUMBER", "page", "size", "be", "quite", "big", "and", "difficult", "to", "navigate", "through", "NUMBER", "MB", "image", "LINK", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "cacd", "NUMBER", "a", "NUMBER", "png", "Not", "to", "butt", "in", "too", "intrusively", "but", "I", "think", "that", "on", "services", "that", "can", "be", "use", "as", "a", "resource", "client", "should", "be", "separated", "into", "subsections", "NUMBER", "Like", "ec", "NUMBER", "because", "the", "references", "be", "much", "different", "but", "can", "accomplish", "many", "of", "the", "same", "tasks", "NUMBER", "Also", "although", "ctrl", "f", "works", "pretty", "well", "to", "find", "what", "you", "want", "a", "lot", "of", "time", "there", "be", "a", "lot", "of", "instances", "of", "a", "word", "you", "may", "be", "looking", "for", "NUMBER", "If", "you", "know", "exactly", "what", "you", "want", "e", "NUMBER", "x", "NUMBER", "start_instance", "there", "won", "t", "be", "a", "whole", "bunch", "of", "entries", "around", "NUMBER", "NUMBER", "usually", "but", "if", "you", "aren", "t", "exactly", "sure", "what", "the", "keyword", "be", "you", "ll", "have", "to", "sift", "through", "dozens", "of", "entries", "relate", "to", "one", "word", "such", "as", "create_tags", "NUMBER", "Hi", "kyleknap", "thanks", "for", "the", "response", "NUMBER", "I", "didn", "t", "quite", "understand", "what", "you", "meant", "NUMBER", "If", "I", "were", "to", "help", "fix", "a", "typo", "or", "an", "incorrect", "statement", "in", "the", "docs", "text", "how", "would", "I", "begin", "The", "broken", "link", "I", "ve", "mention", "be", "actually", "present", "on", "the", "page", "itself", "image", "LINK", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "bc", "fddbccde", "NUMBER", "png", "NUMBER", "It", "can", "be", "tricky", "having", "everything", "in", "a", "single", "page", "which", "be", "very", "large", "when", "navigating", "through", "EC", "NUMBER", "s", "page", "it", "became", "quite", "cumbersome", "to", "go", "through", "different", "levels", "on", "the", "page", "EC", "NUMBER", "Instance", "Attributes", "and", "Actions", "NUMBER", "Moreover", "the", "page", "be", "NUMBER", "pixels", "high", "even", "resizing", "the", "window", "hangs", "NUMBER", "I", "think", "we", "need", "to", "find", "a", "balance", "between", "navigability", "and", "pagesize", "breadcrumbs", "and", "treelike", "navigation", "like", "you", "ve", "mention", "be", "good", "alternatives", "NUMBER", "Another", "alternative", "would", "be", "to", "give", "the", "option", "to", "the", "reader", "to", "choose", "between", "reading", "the", "full", "thing", "on", "a", "single", "page", "or", "break", "it", "down", "in", "different", "levels", "much", "like", "sobre", "online", "version", "of", "books", "do", "full", "book", "chapter", "sections", "subsections", "NUMBER", "Another", "nice", "addition", "would", "be", "some", "live", "breadcrumbs", "that", "show", "how", "deep", "you", "be", "while", "scrolling", "down", "the", "page", "NUMBER", "I", "d", "go", "beyond", "and", "say", "that", "we", "could", "also", "use", "some", "better", "styling", "on", "the", "tables", "code", "snippets", "and", "etc", "NUMBER", "Regardless", "of", "the", "path", "chosen", "I", "d", "urge", "the", "maintainers", "to", "review", "the", "page", "s", "weight", "it", "takes", "almost", "NUMBER", "seconds", "on", "my", "machine", "for", "the", "page", "to", "fully", "load", "and", "I", "be", "able", "to", "navigate", "through", "links", "there", "s", "definitely", "something", "wrong", "going", "on", "image", "LINK", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "f", "b", "NUMBER", "baf", "NUMBER", "bba", "NUMBER", "png", "arturhoo", "If", "your", "browser", "be", "hanging", "something", "be", "wrong", "with", "your", "system", "NUMBER", "I", "tried", "re", "sizing", "the", "window", "and", "loading", "the", "page", "on", "an", "old", "NUMBER", "gb", "hard", "drive", "in", "my", "NUMBER", "laptop", "and", "an", "SSD", "and", "neither", "had", "any", "delays", "to", "speak", "of", "NUMBER", "What", "be", "your", "system", "specs", "I", "understand", "that", "it", "should", "be", "able", "to", "run", "on", "older", "systems", "but", "even", "on", "my", "NUMBER", "laptop", "it", "loads", "the", "entire", "page", "in", "about", "NUMBER", "seconds", "NUMBER", "SamCyanide", "the", "page", "hangs", "on", "Chrome", "Beta", "NUMBER", "very", "badly", "and", "on", "Firefox", "NUMBER", "things", "be", "a", "little", "bit", "better", "NUMBER", "I", "m", "on", "a", "Macbook", "Pro", "SSD", "NUMBER", "GB", "ram", "and", "i", "NUMBER", "so", "I", "don", "t", "think", "that", "it", "the", "issue", "NUMBER", "The", "load", "times", "be", "better", "thanks", "to", "NUMBER", "the", "other", "two", "standing", "issue", "that", "were", "mention", "on", "this", "thread", "Improve", "navigability", "Correctly", "link", "each", "page", "to", "its", "source", "code", "Glad", "to", "hear", "that", "helped", "NUMBER", "Improve", "navigability", "I", "be", "hoping", "to", "add", "more", "depth", "to", "the", "left", "nav", "and", "make", "it", "a", "tree", "based", "navigation", "that", "can", "be", "expanded", "and", "collapsed", "NUMBER", "Correctly", "link", "each", "page", "to", "its", "source", "code", "All", "of", "the", "pages", "that", "be", "actually", "backed", "by", "NUMBER", "rst", "file", "in", "the", "repo", "appear", "to", "link", "correctly", "NUMBER", "The", "only", "pages", "that", "do", "not", "link", "correctly", "be", "the", "pages", "we", "generate", "at", "doc", "build", "time", "e", "NUMBER", "g", "NUMBER", "service", "docs", "NUMBER", "I", "m", "not", "sure", "there", "s", "anything", "we", "can", "do", "here", "to", "have", "rtd", "hide", "the", "source", "links", "NUMBER", "I", "like", "the", "idea", "of", "tree", "based", "navigation", "looking", "forward", "to", "test", "that", "out", "NUMBER", "Regarding", "the", "services", "pages", "I", "think", "it", "would", "be", "nice", "to", "let", "the", "end", "users", "know", "how", "they", "can", "contribute", "to", "those", "pages", "due", "to", "the", "boto", "NUMBER", "botocore", "split", "I", "still", "don", "t", "know", "where", "the", "source", "to", "the", "EC", "NUMBER", "docs", "be", "be", "a", "must", "regardless", "if", "be", "linked", "on", "every", "page", "page", "by", "rtd", "or", "through", "a", "dedicated", "page", "explaining", "how", "the", "build", "process", "works", "and", "how", "to", "contribute", "NUMBER", "LINK", "ElasticBeanstalk", "NUMBER", "Client", "NUMBER", "check_dns_availability", "Another", "issue", "under", "this", "section", "in", "CNAME", "it", "state", "the", "meaning", "of", "responses", "twice", "and", "in", "the", "first", "section", "be", "state", "that", "both", "true", "and", "true", "mean", "the", "domain", "be", "available", "and", "not", "available", "NUMBER", "Small", "typo", "at", "LINK", "Route", "NUMBER", "Client", "NUMBER", "associate_vpc_with_hosted_zone", "Where", "it", "says", "associate", "with", "AN", "hosted", "zone", "should", "be", "associate", "with", "a", "hosted", "zone", "NUMBER", "I", "be", "going", "to", "close", "this", "issue", "NUMBER", "I", "think", "main", "issue", "have", "be", "resolve", "here", "NUMBER", "Let", "s", "track", "any", "specific", "service", "documentation", "update", "in", "separate", "issue", "to", "avoid", "too", "many", "conversation", "threads", "NUMBER", "I", "like", "it", "NUMBER", "shipit", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "for", "vpc", "in", "ec", "NUMBER", "vpcs", "NUMBER", "all", "for", "subnet", "in", "vpc", "NUMBER", "subnets", "NUMBER", "all", "print", "vpc", "all", "subnet", "for", "az", "in", "ec", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "describe_availability_zones", "AvailabilityZones", "for", "subnet", "in", "vpc", "NUMBER", "subnets", "NUMBER", "filter", "Filters", "Name", "availabilityZone", "Values", "az", "ZoneName", "print", "vpc", "filter", "subnet", "It", "appears", "vpc", "NUMBER", "subnets", "NUMBER", "filter", "NUMBER", "admits", "subnets", "from", "other", "VPCs", "while", "all", "do", "not", "NUMBER", "This", "be", "confusing", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "for", "vpc", "in", "ec", "NUMBER", "vpcs", "NUMBER", "all", "for", "subnet", "in", "vpc", "NUMBER", "subnets", "NUMBER", "all", "print", "vpc", "all", "subnet", "for", "az", "in", "ec", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "describe_availability_zones", "AvailabilityZones", "for", "subnet", "in", "vpc", "NUMBER", "subnets", "NUMBER", "filter", "Filters", "Name", "availabilityZone", "Values", "az", "ZoneName", "print", "vpc", "az", "ZoneName", "filter", "subnet", "ec", "NUMBER", "Vpc", "id", "vpc", "NUMBER", "a", "NUMBER", "us", "east", "NUMBER", "c", "filter", "ec", "NUMBER", "Subnet", "id", "subnet", "NUMBER", "b", "NUMBER", "e", "ec", "NUMBER", "Vpc", "id", "vpc", "f", "NUMBER", "a", "NUMBER", "us", "east", "NUMBER", "c", "filter", "ec", "NUMBER", "Subnet", "id", "subnet", "NUMBER", "b", "NUMBER", "e", "ec", "NUMBER", "Vpc", "id", "vpc", "b", "NUMBER", "defde", "all", "ec", "NUMBER", "Subnet", "id", "subnet", "NUMBER", "b", "NUMBER", "e", "ec", "NUMBER", "Vpc", "id", "vpc", "b", "NUMBER", "defde", "us", "east", "NUMBER", "c", "filter", "ec", "NUMBER", "Subnet", "id", "subnet", "NUMBER", "b", "NUMBER", "e", "ec", "NUMBER", "Vpc", "id", "vpc", "fb", "NUMBER", "a", "NUMBER", "d", "us", "east", "NUMBER", "c", "filter", "ec", "NUMBER", "Subnet", "id", "subnet", "NUMBER", "b", "NUMBER", "e", "ec", "NUMBER", "Vpc", "id", "vpc", "d", "NUMBER", "abd", "us", "east", "NUMBER", "c", "filter", "ec", "NUMBER", "Subnet", "id", "subnet", "NUMBER", "b", "NUMBER", "e", "IDs", "change", "What", "I", "see", "be", "a", "particular", "subnet", "showing", "up", "in", "the", "all", "listing", "for", "_all_", "VPCs", "in", "a", "region", "not", "just", "for", "the", "one", "that", "it", "really", "belongs", "to", "NUMBER", "I", "believe", "the", "other", "VPCs", "be", "empty", "NUMBER", "Hi", "Guys", "The", "describe_auto_scaling_groups", "function", "be", "returning", "a", "dictionary", "very", "different", "from", "the", "one", "describe", "in", "the", "docs", "NUMBER", "I", "be", "trying", "to", "get", "the", "status", "of", "an", "auto_scaling_group", "after", "launch", "and", "the", "returned", "dictionary", "be", "not", "returning", "the", "status", "key", "as", "documented", "here", "NUMBER", "LINK", "AutoScaling", "NUMBER", "Client", "NUMBER", "describe_auto_scaling_instances", "The", "dictionary", "I", "be", "returning", "be", "NUMBER", "u", "AutoScalingGroups", "u", "AutoScalingGroupARN", "arn", "aws", "autoscaling", "us", "east", "NUMBER", "NUMBER", "autoScalingGroup", "NUMBER", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "e", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "autoScalingGroupName", "deploy", "docker", "blueprint", "u", "HealthCheckGracePeriod", "NUMBER", "u", "SuspendedProcesses", "u", "DesiredCapacity", "NUMBER", "u", "Tags", "u", "ResourceType", "auto", "scaling", "group", "u", "ResourceId", "deploy", "docker", "blueprint", "u", "PropagateAtLaunch", "True", "u", "Value", "deploy", "u", "Key", "Environment", "u", "ResourceType", "auto", "scaling", "group", "u", "ResourceId", "deploy", "docker", "blueprint", "u", "PropagateAtLaunch", "False", "u", "Value", "deploy", "docker", "blueprint", "u", "Key", "Name", "u", "ResourceType", "auto", "scaling", "group", "u", "ResourceId", "deploy", "docker", "blueprint", "u", "PropagateAtLaunch", "True", "u", "Value", "docker", "u", "Key", "Puppet_role", "u", "ResourceType", "auto", "scaling", "group", "u", "ResourceId", "deploy", "docker", "blueprint", "u", "PropagateAtLaunch", "True", "u", "Value", "John", "NUMBER", "Dzialo", "u", "Key", "Requester", "u", "ResourceType", "auto", "scaling", "group", "u", "ResourceId", "deploy", "docker", "blueprint", "u", "PropagateAtLaunch", "True", "u", "Value", "blueprint", "u", "Key", "Xively_service", "u", "EnabledMetrics", "u", "LoadBalancerNames", "deploy", "autoscale", "test", "u", "AutoScalingGroupName", "deploy", "docker", "blueprint", "u", "DefaultCooldown", "NUMBER", "u", "MinSize", "NUMBER", "u", "Instances", "u", "InstanceId", "i", "d", "NUMBER", "cd", "NUMBER", "b", "u", "AvailabilityZone", "us", "east", "NUMBER", "c", "u", "HealthStatus", "Unhealthy", "u", "LifecycleState", "Terminating", "u", "LaunchConfigurationName", "deploy", "docker", "blueprint", "u", "InstanceId", "i", "f", "NUMBER", "a", "NUMBER", "u", "AvailabilityZone", "us", "east", "NUMBER", "b", "u", "HealthStatus", "Healthy", "u", "LifecycleState", "InService", "u", "LaunchConfigurationName", "deploy", "docker", "blueprint", "u", "InstanceId", "i", "bb", "NUMBER", "e", "NUMBER", "u", "AvailabilityZone", "us", "east", "NUMBER", "c", "u", "HealthStatus", "Healthy", "u", "LifecycleState", "Pending", "u", "LaunchConfigurationName", "deploy", "docker", "blueprint", "u", "MaxSize", "NUMBER", "u", "VPCZoneIdentifier", "subnet", "NUMBER", "fa", "NUMBER", "dd", "NUMBER", "subnet", "c", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "subnet", "NUMBER", "d", "u", "TerminationPolicies", "Default", "u", "LaunchConfigurationName", "deploy", "docker", "blueprint", "u", "CreatedTime", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzutc", "u", "AvailabilityZones", "us", "east", "NUMBER", "c", "us", "east", "NUMBER", "b", "us", "east", "NUMBER", "d", "u", "HealthCheckType", "ELB", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "d", "NUMBER", "acb", "NUMBER", "f", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "No", "Status", "in", "the", "dictionary", "NUMBER", "Secondary", "question", "NUMBER", "If", "no", "Status", "key", "be", "in", "the", "dictionary", "what", "be", "the", "best", "way", "to", "verify", "that", "a", "auto", "scaling", "group", "be", "up", "and", "run", "Ah", "NUMBER", "I", "see", "now", "NUMBER", "I", "did", "not", "read", "carefully", "NUMBER", "OK", "so", "checking", "the", "HealthStatus", "of", "the", "instances", "seems", "sufficient", "NUMBER", "I", "will", "try", "that", "NUMBER", "The", "service", "names", "would", "be", "much", "easier", "to", "navigate", "if", "they", "did", "not", "start", "with", "Amazon", "and", "AWS", "NUMBER", "Most", "of", "the", "names", "would", "fit", "on", "one", "line", "and", "be", "easier", "to", "read", "NUMBER", "A", "screenshot", "of", "the", "documentation", "image", "LINK", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "ced", "NUMBER", "fa", "NUMBER", "png", "We", "know", "these", "be", "Amazon", "products", "wink", "I", "d", "be", "happy", "to", "make", "the", "change", "if", "given", "the", "go", "ahead", "NUMBER", "I", "notice", "these", "strings", "be", "pull", "in", "from", "botocore", "NUMBER", "Would", "it", "be", "best", "to", "provide", "a", "method", "there", "to", "get", "the", "shorter", "names", "or", "just", "modify", "them", "in", "the", "boto", "NUMBER", "docs", "Looks", "awesome", "NUMBER", "Thank", "you", "Excellent", "closing", "issue", "NUMBER", "cc", "kyleknap", "mtdowling", "shipit", "Updates", "with", "the", "latest", "botocore", "change", "and", "the", "removal", "of", "the", "profile", "setter", "NUMBER", "This", "will", "also", "require", "one", "change", "in", "botocore", "NUMBER", "cc", "kyleknap", "mtdowling", "Should", "be", "good", "to", "look", "at", "NUMBER", "Looks", "like", "a", "prior", "botocore", "change", "broke", "boto", "NUMBER", "so", "I", "ve", "include", "that", "fix", "in", "this", "PR", "as", "well", "NUMBER", "shipit", "Let", "s", "figure", "out", "what", "s", "going", "on", "with", "the", "test", "but", "otherwise", "looks", "good", "NUMBER", "When", "passing", "multiple", "tags", "to", "the", "create_tags", "method", "I", "get", "the", "following", "backtrace", "File", "boto", "ec", "NUMBER", "py", "line", "NUMBER", "in", "create", "Customer", "instance", "customer", "File", "usr", "home", "imil", "aws", "awscli", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "fa", "ctory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "home", "imil", "aws", "awscli", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "ac", "tion", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "return", "self", "NUMBER", "_response_handler", "parent", "params", "response", "File", "usr", "home", "imil", "aws", "awscli", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "re", "sponse", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "parent", "identifiers", "response_item", "File", "usr", "home", "imil", "aws", "awscli", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "re", "sponse", "NUMBER", "py", "line", "NUMBER", "in", "handle_response_item", "value", "value", "NUMBER", "pop", "NUMBER", "IndexError", "pop", "from", "empty", "list", "When", "creating", "a", "loop", "where", "I", "create", "the", "tags", "one", "after", "the", "other", "everything", "be", "going", "smoothly", "NUMBER", "For", "the", "record", "the", "taglist", "has", "this", "form", "Key", "Name", "Value", "myinstance", "Key", "Customer", "Value", "mycustomer", "I", "use", "boto", "NUMBER", "NUMBER", "Can", "you", "share", "a", "code", "snippet", "that", "shows", "the", "issue", "Here", "s", "what", "I", "tried", "which", "be", "work", "for", "me", "In", "NUMBER", "import", "boto", "NUMBER", "In", "NUMBER", "c", "boto", "NUMBER", "client", "ec", "NUMBER", "us", "west", "NUMBER", "In", "NUMBER", "c", "NUMBER", "create_tags", "Resources", "i", "id", "Tags", "Key", "foo", "Value", "bar", "Key", "foo", "NUMBER", "Value", "bar", "NUMBER", "Out", "NUMBER", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "requestid", "Of", "course", "def", "mktags", "self", "taglst", "Makes", "a", "Filter", "friendly", "tag", "list", "param", "dict", "taglst", "A", "dict", "of", "key", "value", "pairs", "return", "Filter", "friendly", "tag", "list", "rtype", "dict", "tags", "for", "t", "in", "taglst", "tags", "NUMBER", "append", "Key", "t", "Value", "taglst", "t", "return", "tags", "then", "the", "main", "call", "tags", "Name", "NUMBER", "_", "NUMBER", "NUMBER", "format", "dname", "instance", "name", "Customer", "instance", "customer", "ec", "NUMBER", "resource", "NUMBER", "create_tags", "Resources", "dev", "Ebs", "VolumeId", "Tags", "mktags", "tags", "This", "code", "works", "with", "a", "single", "Key", "foo", "Value", "bar", "item", "Update", "When", "use", "ec", "NUMBER", "client", "NUMBER", "create_tags", "I", "have", "the", "intended", "behavior", "this", "bug", "concerns", "the", "resource", "way", "of", "doing", "things", "NUMBER", "Fixed", "via", "LINK", "Hi", "boto", "NUMBER", "documentation", "says", "Boto", "NUMBER", "x", "ec", "NUMBER", "_connection", "NUMBER", "run_instances", "TAG", "Boto", "NUMBER", "ec", "NUMBER", "create_instances", "ImageId", "TAG", "MinCount", "NUMBER", "MaxCount", "NUMBER", "But", "as", "a", "matter", "of", "fact", "there", "s", "very", "little", "if", "none", "documentation", "on", "create_instance", "usage", "I", "merely", "discover", "how", "to", "pass", "more", "parameters", "use", "completion", "in", "ipython", "NUMBER", "On", "the", "contrary", "the", "run_instances", "method", "be", "fully", "describe", "NUMBER", "This", "be", "true", "for", "all", "boto", "NUMBER", "vs", "boto", "NUMBER", "paragraphs", "in", "the", "_Migrating", "from", "Boto", "NUMBER", "x_", "section", "NUMBER", "Are", "we", "supposed", "to", "use", "the", "documented", "methods", "or", "to", "discover", "parameters", "from", "the", "new", "methods", "Thanks", "Thanks", "a", "lot", "for", "your", "answer", "kyleknap", "I", "suspected", "the", "methods", "were", "actually", "the", "same", "thats", "how", "I", "dealt", "with", "parameters", "so", "far", "NUMBER", "I", "ll", "stick", "to", "new", "methods", "as", "much", "as", "I", "can", "then", "NUMBER", "Nice", "the", "documentation", "be", "now", "mentioning", "create_instance", "Please", "note", "there", "s", "an", "error", "regard", "the", "UserData", "parameter", "it", "says", "UserData", "string", "Optional", "The", "Base", "NUMBER", "encoded", "MIME", "user", "data", "for", "the", "instances", "NUMBER", "But", "this", "be", "not", "true", "a", "plain", "text", "string", "must", "be", "pass", "as", "boto", "NUMBER", "do", "the", "base", "NUMBER", "conversion", "itself", "NUMBER", "Been", "bit", "by", "that", "one", "Thanks", "NUMBER", "Our", "docs", "now", "say", "that", "this", "value", "will", "be", "base", "NUMBER", "encoded", "for", "you", "but", "I", "ve", "also", "add", "a", "track", "issue", "to", "be", "more", "explicit", "about", "the", "fact", "that", "you", "don", "t", "have", "to", "base", "NUMBER", "encode", "this", "value", "LINK", "shipit", "Apologies", "for", "what", "sounds", "like", "a", "very", "basic", "question", "NUMBER", "In", "this", "example", "LINK", "from", "the", "s", "NUMBER", "docs", "be", "there", "a", "way", "to", "list", "the", "continents", "I", "was", "hoping", "this", "might", "work", "but", "it", "doesn", "t", "seem", "to", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "edsu", "test", "bucket", "for", "o", "in", "bucket", "NUMBER", "objects", "NUMBER", "filter", "Delimiter", "print", "o", "NUMBER", "key", "However", "the", "equivalent", "code", "use", "boto", "NUMBER", "do", "seem", "to", "work", "the", "way", "I", "expect", "python", "import", "boto", "s", "NUMBER", "boto", "NUMBER", "connect_s", "NUMBER", "bucket", "s", "NUMBER", "get_bucket", "edsu", "test", "bucket", "for", "o", "in", "bucket", "NUMBER", "list", "delimiter", "print", "o", "NUMBER", "name", "kyleknap", "the", "boto", "NUMBER", "sample", "will", "list", "only", "the", "top", "level", "directories", "use", "the", "unique", "portion", "before", "the", "delimiter", "i", "NUMBER", "e", "NUMBER", "given", "file", "like", "North", "America", "United", "States", "California", "and", "South", "America", "Brazil", "Bahia", "it", "would", "return", "North", "America", "and", "South", "America", "NUMBER", "Thanks", "for", "taking", "a", "look", "acdha", "kyleknap", "NUMBER", "Yes", "if", "you", "assume", "the", "above", "snippets", "be", "a", "NUMBER", "py", "and", "b", "NUMBER", "py", "the", "output", "should", "look", "like", "this", "NUMBER", "a", "NUMBER", "py", "NUMBER", "b", "NUMBER", "py", "Europe", "North", "America", "I", "made", "s", "NUMBER", "edsu", "test", "bucket", "public", "if", "you", "want", "to", "give", "it", "a", "try", "NUMBER", "This", "be", "what", "it", "looks", "like", "from", "aws", "cli", "but", "you", "can", "see", "for", "yourself", "since", "it", "be", "public", "NUMBER", "aws", "s", "NUMBER", "ls", "s", "NUMBER", "edsu", "test", "bucket", "PRE", "Europe", "PRE", "North", "America", "aws", "s", "NUMBER", "ls", "recursive", "s", "NUMBER", "edsu", "test", "bucket", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Europe", "France", "Acquitaine", "Bordeaux", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "North", "America", "Canada", "Quebec", "Montreal", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "North", "America", "USA", "Washington", "Bellevue", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "North", "America", "USA", "Washington", "Seattle", "edsu", "I", "run", "into", "this", "as", "well", "NUMBER", "The", "directories", "to", "list", "aren", "t", "really", "objects", "but", "substrings", "of", "object", "keys", "so", "I", "do", "not", "expect", "them", "to", "show", "up", "in", "an", "objects", "collection", "NUMBER", "As", "a", "quick", "workaround", "I", "list", "them", "via", "client", "NUMBER", "list_objects", "NUMBER", "For", "non", "public", "buckets", "or", "buckets", "that", "you", "can", "explicitly", "access", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "edsu", "test", "bucket", "result", "bucket", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "list_objects", "Bucket", "bucket", "NUMBER", "name", "Delimiter", "for", "o", "in", "result", "NUMBER", "get", "CommonPrefixes", "print", "o", "NUMBER", "get", "Prefix", "Would", "print", "Europe", "North", "America", "This", "doesn", "t", "support", "anonymous", "calls", "though", "NUMBER", "When", "I", "run", "this", "I", "get", "an", "AccessDenied", "error", "NUMBER", "For", "anonymous", "calls", "I", "haven", "t", "find", "a", "way", "to", "use", "a", "s", "NUMBER", "resource", "at", "all", "so", "far", "NUMBER", "But", "I", "can", "call", "list_objects", "on", "a", "low", "level", "client", "python", "import", "boto", "NUMBER", "import", "botocore", "client", "boto", "NUMBER", "client", "s", "NUMBER", "region_name", "us", "east", "NUMBER", "config", "botocore", "NUMBER", "client", "NUMBER", "Config", "signature_version", "botocore", "NUMBER", "UNSIGNED", "result", "client", "NUMBER", "list_objects", "Bucket", "edsu", "test", "bucket", "Prefix", "North", "America", "Delimiter", "for", "o", "in", "result", "NUMBER", "get", "CommonPrefixes", "print", "o", "NUMBER", "get", "Prefix", "Not", "very", "beautiful", "but", "it", "prints", "what", "I", "wanted", "North", "America", "Canada", "North", "America", "USA", "amatthies", "You", "raise", "a", "really", "good", "point", "while", "the", "low", "level", "interface", "be", "the", "same", "this", "be", "definitely", "a", "different", "class", "of", "response", "NUMBER", "Maybe", "it", "s", "as", "simple", "as", "documenting", "list_objects", "as", "the", "best", "way", "to", "do", "this", "kyleknap", "Great", "thanks", "NUMBER", "client", "NUMBER", "get_paginator", "list_objects", "answers", "this", "question", "NUMBER", "Looking", "forward", "to", "some", "hints", "on", "the", "event", "system", "NUMBER", "Fixes", "NUMBER", "This", "works", "by", "registering", "two", "handlers", "to", "disable", "re", "enable", "callbacks", "during", "the", "request", "created", "event", "handle", "NUMBER", "So", "for", "signature", "version", "NUMBER", "you", "now", "have", "request", "created", "disable_callbacks", "via", "register_first", "client", "NUMBER", "_sign_request", "via", "register", "enable_callbacks", "via", "register_last", "Added", "an", "integration", "test", "for", "this", "because", "the", "crux", "of", "this", "work", "be", "because", "of", "the", "coordination", "of", "the", "event", "system", "with", "the", "disabling", "enabling", "of", "callbacks", "NUMBER", "This", "will", "require", "a", "corresponding", "fix", "in", "botocore", "as", "well", "NUMBER", "LINK", "cc", "kyleknap", "mtdowling", "shipit", "ship", "This", "fix", "LINK", "The", "issue", "was", "that", "due", "to", "a", "bug", "in", "botocore", "which", "be", "address", "in", "LINK", "we", "were", "pulling", "in", "the", "latest", "API", "version", "in", "botocore", "NUMBER", "However", "in", "boto", "NUMBER", "s", "doc", "generator", "when", "it", "looked", "for", "the", "corresponding", "resource", "model", "associated", "with", "the", "API", "version", "it", "didn", "t", "find", "it", "so", "we", "d", "skip", "the", "EC", "NUMBER", "resource", "documentation", "NUMBER", "This", "PR", "add", "that", "miss", "API", "version", "NUMBER", "cc", "kyleknap", "mtdowling", "Not", "ready", "for", "review", "I", "need", "to", "address", "a", "few", "fail", "test", "first", "NUMBER", "I", "ll", "update", "when", "this", "be", "ready", "NUMBER", "Tests", "fix", "ready", "to", "be", "looked", "at", "NUMBER", "Would", "like", "some", "feedback", "on", "whether", "we", "want", "this", "change", "NUMBER", "This", "be", "propose", "from", "LINK", "It", "do", "solve", "the", "problem", "that", "you", "will", "no", "longer", "get", "a", "confusing", "error", "when", "accessing", "bucket", "NUMBER", "creation_date", "but", "we", "have", "to", "make", "a", "ListBuckets", "request", "to", "get", "this", "information", "NUMBER", "cc", "kyleknap", "mtdowling", "trevorrowe", "Test", "fix", "NUMBER", "Should", "be", "ready", "to", "look", "at", "now", "NUMBER", "Feedback", "incorporated", "NUMBER", "Currently", "the", "wheel", "package", "that", "be", "install", "for", "boto", "NUMBER", "version", "NUMBER", "contains", "this", "line", "in", "it", "s", "METADATA", "Requires", "Dist", "futures", "NUMBER", "extra", "python_version", "NUMBER", "or", "python_version", "NUMBER", "The", "latest", "version", "of", "pip", "NUMBER", "on", "Windows", "ignores", "this", "line", "and", "the", "futures", "dependency", "be", "not", "install", "see", "LINK", "python", "issue", "NUMBER", "NUMBER", "When", "I", "add", "the", "same", "extras_require", "line", "as", "boto", "NUMBER", "to", "my", "own", "package", "s", "setup", "NUMBER", "py", "and", "run", "bdist_wheel", "I", "get", "this", "slightly", "different", "line", "with", "wheel", "NUMBER", "Requires", "Dist", "futures", "NUMBER", "python_version", "NUMBER", "or", "python_version", "NUMBER", "In", "this", "case", "installing", "the", "wheel", "properly", "installs", "futures", "NUMBER", "This", "could", "be", "relate", "to", "LINK", "Interesting", "do", "you", "know", "if", "this", "issue", "be", "specific", "to", "windows", "pip", "NUMBER", "or", "the", "combination", "of", "both", "It", "can", "t", "be", "specific", "to", "Windows", "since", "our", "user", "report", "the", "problem", "for", "MacOSX", "it", "wasn", "t", "clear", "in", "the", "report", "sorry", "NUMBER", "I", "ll", "try", "some", "other", "pip", "version", "and", "let", "you", "know", "NUMBER", "Similar", "or", "same", "problem", "here", "LINK", "Perhaps", "this", "be", "a", "pip", "bug", "NUMBER", "Yeah", "I", "m", "definitely", "seeing", "this", "on", "pip", "NUMBER", "and", "pip", "NUMBER", "What", "s", "interesting", "be", "that", "our", "travis", "jobs", "which", "we", "create", "a", "wheel", "and", "install", "from", "the", "whl", "file", "use", "pip", "NUMBER", "LINK", "ci", "NUMBER", "org", "boto", "boto", "NUMBER", "jobs", "NUMBER", "and", "be", "passing", "NUMBER", "Looking", "into", "what", "the", "difference", "be", "and", "what", "we", "can", "do", "about", "this", "NUMBER", "Ah", "I", "think", "I", "see", "the", "issue", "NUMBER", "The", "release", "version", "of", "boto", "NUMBER", "was", "generate", "with", "wheel", "NUMBER", "and", "the", "support", "for", "the", "conditional", "dependencies", "was", "not", "add", "until", "wheel", "NUMBER", "LINK", "id", "NUMBER", "We", "ll", "just", "need", "to", "rebuild", "the", "wheel", "on", "the", "latest", "version", "of", "the", "wheel", "package", "and", "we", "should", "be", "good", "to", "go", "NUMBER", "Thanks", "for", "report", "NUMBER", "Yes", "it", "seems", "to", "work", "now", "thanks", "NUMBER", "Needed", "to", "be", "update", "when", "we", "update", "loaders", "to", "use", "use", "new", "directory", "structure", "NUMBER", "cc", "kyleknap", "It", "seems", "as", "though", "the", "documentation", "only", "covers", "details", "of", "the", "low", "level", "client", "for", "each", "aws", "service", "not", "the", "high", "level", "resources", "collections", "in", "detail", "NUMBER", "Where", "would", "I", "find", "all", "the", "available", "actions", "for", "specific", "resources", "like", "ec", "NUMBER", "vs", "s", "NUMBER", "Should", "be", "fix", "now", "via", "LINK", "Any", "service", "that", "also", "contains", "high", "level", "resources", "be", "now", "documented", "LINK", "For", "EC", "NUMBER", "I", "still", "only", "see", "client", "and", "waiter", "no", "resources", "LINK", "SQS", "do", "seem", "to", "have", "it", "documented", "though", "LINK", "I", "only", "see", "two", "example", "services", "in", "the", "Resources", "section", "S", "NUMBER", "and", "SQS", "and", "these", "appear", "to", "have", "their", "resources", "documentation", "complete", "NUMBER", "Can", "we", "get", "a", "list", "automatically", "generate", "in", "the", "Resources", "overview", "of", "the", "services", "that", "have", "high", "level", "resources", "Ok", "taking", "a", "look", "NUMBER", "Looks", "good", "now", "thanks", "for", "fix", "it", "NUMBER", "Good", "idea", "with", "the", "smoke", "test", "too", "Cheers", "NUMBER", "Would", "it", "be", "at", "all", "possible", "to", "make", "the", "s", "NUMBER", "client", "s", "list_objects", "method", "return", "the", "ContentType", "for", "each", "object", "The", "get_object", "and", "head_object", "methods", "both", "do", "this", "NUMBER", "I", "suspect", "wanting", "to", "know", "an", "object", "s", "type", "would", "be", "a", "fairly", "common", "requirement", "when", "performing", "a", "list", "operation", "NUMBER", "Is", "there", "even", "a", "way", "to", "get", "the", "content", "type", "in", "bulk", "with", "the", "current", "boto", "NUMBER", "s", "NUMBER", "api", "Obviously", "doing", "a", "head", "request", "on", "each", "object", "individually", "be", "not", "practical", "NUMBER", "This", "would", "actually", "leak", "NUMBER", "tables", "because", "we", "d", "create", "a", "table", "in", "setupClass", "and", "then", "create", "another", "one", "in", "tearDownClass", "because", "we", "call", "setupClass", "again", "NUMBER", "cc", "kyleknap", "mtdowling", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "fab", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "on", "jamesls", "leaking", "ddb", "tables", "into", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "fbd", "NUMBER", "c", "NUMBER", "ecba", "NUMBER", "af", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "fca", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "af", "NUMBER", "on", "kyleknap", "rename", "paginate", "into", "NUMBER", "c", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ffe", "on", "boto", "develop", "NUMBER", "shipit", "This", "be", "similar", "to", "what", "boto", "NUMBER", "do", "in", "terms", "of", "the", "interface", "with", "a", "few", "internal", "details", "change", "Keep", "a", "single", "buffer", "of", "puts", "and", "deletes", "NUMBER", "This", "simplifies", "the", "logic", "of", "when", "to", "send", "request", "NUMBER", "It", "also", "sends", "the", "request", "in", "the", "order", "they", "were", "call", "NUMBER", "In", "boto", "NUMBER", "puts", "were", "always", "sent", "before", "deletes", "NUMBER", "This", "shouldn", "t", "affect", "the", "semantics", "though", "because", "you", "can", "t", "put", "delete", "the", "same", "object", "in", "a", "batch", "request", "NUMBER", "Immediately", "handle", "unprocessed", "items", "in", "the", "next", "batch", "NUMBER", "boto", "NUMBER", "would", "keep", "these", "and", "flush", "them", "only", "at", "exit", "NUMBER", "This", "meant", "you", "could", "have", "unbounded", "growth", "of", "unprocessed", "items", "NUMBER", "Perf", "be", "about", "the", "same", "as", "boto", "NUMBER", "cc", "kyleknap", "mtdowling", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "cb", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "b", "NUMBER", "eb", "on", "jamesls", "ddb", "batch", "write", "into", "NUMBER", "c", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ffe", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "on", "jamesls", "ddb", "batch", "write", "into", "NUMBER", "c", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ffe", "on", "boto", "develop", "NUMBER", "shipit", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "aec", "NUMBER", "dafc", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "on", "kyleknap", "develop", "into", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ba", "NUMBER", "bd", "NUMBER", "aaae", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "Hi", "for", "the", "response", "data", "that", "I", "be", "recieving", "the", "letter", "u", "appears", "between", "key", "value", "pairs", "in", "my", "dictionary", "the", "returned", "data", "NUMBER", "Is", "this", "just", "a", "failure", "of", "an", "escape", "character", "or", "be", "it", "something", "else", "My", "code", "python", "import", "boto", "NUMBER", "ec", "NUMBER", "boto", "NUMBER", "resource", "ec", "NUMBER", "instances", "for", "status", "in", "ec", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "describe_instance_status", "InstanceStatuses", "instances", "NUMBER", "append", "status", "InstanceId", "def", "filterInstances", "instances", "filtertemplate", "Name", "resource", "id", "Values", "instances", "return", "filtertemplate", "for", "instance", "in", "instances", "tags", "ec", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "describe_tags", "Filters", "filterInstances", "instances", "print", "tags", "Here", "s", "my", "response", "data", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "RequestId", "c", "NUMBER", "f", "NUMBER", "fca", "NUMBER", "ec", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "u", "Tags", "u", "ResourceType", "instance", "u", "ResourceId", "i", "xxxxxxxx", "u", "Value", "xx", "u", "Key", "Category", "u", "ResourceType", "instance", "u", "ResourceId", "i", "xxxxxxxx", "u", "Value", "QA", "u", "Key", "xxxxxxx", "Ah", "that", "actually", "makes", "a", "lot", "of", "sense", "NUMBER", "Thanks", "that", "s", "all", "sorry", "for", "the", "unrelated", "issue", "haha", "NUMBER", "I", "can", "easily", "find", "the", "available", "service", "resources", "give", "a", "session", "import", "boto", "NUMBER", "session", "session", "boto", "NUMBER", "session", "NUMBER", "Session", "profile_name", "prod", "session", "NUMBER", "available_resources", "cloudformation", "dynamodb", "ec", "NUMBER", "glacier", "iam", "opsworks", "s", "NUMBER", "sns", "sqs", "But", "be", "there", "a", "way", "to", "find", "the", "available", "resources", "for", "a", "given", "service", "resource", "I", "NUMBER", "E", "NUMBER", "be", "there", "some", "way", "to", "get", "the", "equivalent", "of", "ec", "NUMBER", "session", "NUMBER", "resource", "ec", "NUMBER", "ec", "NUMBER", "available_resources", "I", "ve", "be", "going", "through", "the", "code", "for", "a", "while", "and", "can", "t", "really", "figure", "out", "an", "easy", "way", "to", "do", "this", "NUMBER", "Thanks", "NUMBER", "I", "can", "also", "find", "what", "I", "m", "looking", "for", "by", "accessing", "the", "_loader", "private", "attribute", "of", "the", "client", "and", "then", "loading", "the", "service", "model", "but", "of", "course", "I", "shouldn", "t", "be", "mucking", "around", "with", "those", "private", "attributes", "NUMBER", "While", "I", "do", "understand", "the", "desire", "to", "provide", "methods", "very", "similar", "if", "not", "analogous", "to", "the", "AWS", "CLI", "I", "really", "feel", "like", "work", "with", "boto", "NUMBER", "do", "not", "really", "improve", "on", "the", "AWS", "CLI", "NUMBER", "From", "my", "point", "of", "view", "boto", "NUMBER", "should", "not", "only", "be", "a", "wrapper", "but", "also", "an", "adapter", "to", "make", "the", "CLI", "something", "desirable", "to", "work", "with", "from", "python", "NUMBER", "For", "instance", "instead", "of", "creating", "an", "S", "NUMBER", "client", "with", "boto", "NUMBER", "client", "s", "NUMBER", "hide", "this", "and", "use", "a", "S", "NUMBER", "Client", "class", "NUMBER", "Instead", "of", "managing", "multi", "part", "upload", "with", "the", "upload", "id", "directly", "it", "would", "be", "more", "pythonic", "to", "have", "a", "MultiPartUpload", "class", "and", "have", "the", "corresponding", "methods", "take", "or", "return", "an", "instance", "of", "this", "class", "NUMBER", "What", "be", "the", "point", "of", "having", "the", "Client", "do", "operations", "such", "as", "get_bucket_policy", "Bucket", "string", "Wouldn", "t", "it", "be", "much", "better", "and", "intuitive", "to", "have", "a", "getter", "for", "bucket_policy", "on", "the", "Bucket", "class", "Also", "having", "helper", "methods", "would", "help", "a", "lot", "NUMBER", "Something", "like", "Bucket", "NUMBER", "upload_file", "file", "path", "or", "along", "those", "lines", "NUMBER", "The", "point", "isn", "t", "precisely", "the", "examples", "I", "have", "point", "out", "here", "the", "point", "be", "the", "library", "be", "hard", "to", "work", "with", "it", "be", "essentially", "the", "same", "as", "the", "CLI", "NUMBER", "Please", "note", "I", "do", "not", "mean", "any", "disrespect", "and", "this", "be", "just", "at", "least", "from", "my", "point", "of", "view", "constructive", "criticism", "NUMBER", "I", "love", "boto", "NUMBER", "but", "I", "agree", "with", "autrilla", "NUMBER", "NUMBER", "Awesome", "writeup", "kyleknap", "NUMBER", "I", "learned", "a", "thing", "or", "two", "NUMBER", "So", "something", "I", "was", "disappointed", "with", "recently", "NUMBER", "python", "x", "boto", "NUMBER", "resource", "s", "NUMBER", "x", "s", "NUMBER", "ServiceResource", "import", "s", "NUMBER", "ImportError", "NUMBER", "type", "x", "boto", "NUMBER", "resources", "NUMBER", "factory", "NUMBER", "s", "NUMBER", "ServiceResource", "isinstance", "s", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "NUMBER", "s", "NUMBER", "ServiceResource", "AttributeError", "module", "object", "has", "no", "attribute", "s", "NUMBER", "Every", "python", "API", "should", "be", "able", "to", "answer", "these", "question", "What", "exactly", "be", "this", "object", "I", "m", "use", "Where", "can", "I", "find", "the", "exact", "code", "for", "this", "object", "How", "can", "I", "perform", "some", "basic", "operations", "on", "this", "object", "autrilla", "Completely", "agree", "with", "you", "NUMBER", "type", "x", "boto", "NUMBER", "resources", "NUMBER", "factory", "NUMBER", "s", "NUMBER", "ServiceResource", "isinstance", "s", "NUMBER", "boto", "NUMBER", "resources", "NUMBER", "factory", "NUMBER", "s", "NUMBER", "ServiceResource", "AttributeError", "module", "object", "has", "no", "attribute", "s", "NUMBER", "I", "m", "having", "this", "exact", "problem", "isinstance", "be", "essentially", "unusable", "NUMBER", "I", "m", "not", "sure", "how", "I", "can", "accurately", "identify", "which", "type", "of", "object", "I", "m", "work", "with", "NUMBER", "Is", "there", "any", "way", "to", "import", "the", "classes", "created", "by", "the", "factory", "so", "they", "can", "be", "identified", "with", "isinstance", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "aebfa", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "db", "NUMBER", "fe", "on", "kyleknap", "develop", "into", "fec", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "a", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "af", "NUMBER", "aeee", "NUMBER", "baf", "NUMBER", "c", "NUMBER", "on", "boto", "develop", "NUMBER", "With", "boto", "library", "not", "boto", "NUMBER", "there", "be", "method", "generate_url", "which", "generates", "temporary", "url", "for", "given", "object", "NUMBER", "This", "method", "be", "availabe", "on", "connection", "bucket", "and", "key", "objects", "NUMBER", "python", "import", "boto", "con", "boto", "NUMBER", "connect_s", "NUMBER", "tmpurl_c", "con", "NUMBER", "generate_url", "NUMBER", "bucket", "con", "NUMBER", "get_bucket", "mybucket", "tmpurl_b", "bucket", "NUMBER", "generate_url", "NUMBER", "key", "bucket", "NUMBER", "get_object", "key", "name", "NUMBER", "txt", "tmpurl_k", "key", "NUMBER", "generate_url", "NUMBER", "I", "was", "unable", "to", "find", "corresponding", "method", "in", "boto", "NUMBER", "Is", "there", "such", "a", "method", "Or", "be", "it", "planned", "I", "be", "aware", "that", "actually", "creating", "the", "temporary", "url", "be", "not", "a", "call", "to", "AWS", "web", "service", "so", "I", "do", "not", "expect", "it", "to", "be", "find", "in", "AWS", "serices", "model", "but", "for", "practical", "use", "it", "be", "very", "important", "NUMBER", "Fortunatelly", "today", "we", "may", "se", "boto", "to", "do", "this", "work", "but", "if", "boto", "NUMBER", "be", "supposed", "to", "be", "complete", "replacement", "to", "today", "boto", "ability", "to", "generate", "temporary", "url", "seems", "to", "be", "important", "NUMBER", "kyleknap", "Perfect", "as", "it", "be", "on", "roadmap", "and", "it", "looks", "like", "get", "close", "it", "make", "me", "feel", "safer", "NUMBER", "Anyway", "I", "did", "try", "to", "use", "exist", "solution", "use", "botocore", "branch", "clients", "only", "and", "see", "that", "the", "expiration", "can", "be", "currently", "specified", "only", "in", "relative", "value", "how", "many", "seconds", "from", "now", "it", "shall", "require", "NUMBER", "It", "would", "be", "very", "convenient", "if", "it", "would", "also", "allow", "specify", "absolute", "time", "NUMBER", "I", "will", "add", "this", "request", "to", "botocore", "NUMBER", "A", "couple", "of", "question", "One", "be", "there", "anyway", "to", "generate", "plain", "HTTP", "URL", "Thie", "following", "command", "will", "always", "create", "an", "expiring", "https", "get_object", "URL", "even", "if", "object", "be", "set", "to", "public", "read", "py", "client", "NUMBER", "generate_presigned_url", "get_object", "Params", "Bucket", "www", "NUMBER", "mybucket", "NUMBER", "com", "Key", "hello", "NUMBER", "txt", "ExpiresIn", "NUMBER", "LINK", "BLAHBLAHBLAH", "NUMBER", "D", "AWSAccessKeyId", "MYKEY", "Expires", "NUMBER", "Two", "Is", "this", "kind", "of", "thing", "not", "best", "practice", "Other", "S", "NUMBER", "clients", "I", "ve", "use", "which", "I", "assume", "use", "the", "previous", "AWS", "API", "seem", "to", "just", "generate", "the", "HTTP", "URL", "without", "any", "problem", "NUMBER", "and", "now", "that", "I", "ve", "tried", "use", "the", "API", "through", "boto", "NUMBER", "be", "feature", "seems", "_extremely_", "buried", "I", "read", "the", "docs", "and", "source", "code", "for", "about", "an", "hour", "until", "stumbling", "upon", "this", "issue", "NUMBER", "to", "the", "point", "where", "it", "seems", "like", "spitting", "out", "a", "HTTP", "URL", "from", "a", "S", "NUMBER", "object", "be", "not", "recommended", "practice", "dannguyen", "do", "not", "forget", "that", "having", "public", "read", "might", "not", "be", "always", "a", "constant", "feature", "of", "an", "object", "NUMBER", "In", "past", "I", "was", "a", "bit", "surprised", "when", "I", "have", "realized", "that", "the", "temporary", "url", "can", "be", "generate", "even", "without", "having", "connectivity", "to", "relate", "object", "NUMBER", "To", "me", "the", "lesson", "be", "when", "talking", "about", "temporary", "url", "it", "be", "temporary", "url", "and", "it", "shall", "have", "an", "expiration", "regardless", "of", "current", "or", "future", "ACL", "configuration", "it", "be", "client", "s", "decision", "which", "can", "be", "do", "without", "even", "looking", "to", "the", "object", "could", "be", "about", "object", "which", "even", "do", "not", "exist", "at", "the", "moment", "NUMBER", "how", "be", "such", "url", "created", "generating", "the", "url", "without", "touching", "relevant", "object", "be", "fine", "in", "fact", "it", "allows", "nice", "efficiency", "no", "network", "communication", "NUMBER", "For", "S", "NUMBER", "pre", "sign", "URLs", "I", "find", "this", "LINK", "S", "NUMBER", "Client", "NUMBER", "generate_presigned_url", "and", "for", "CF", "pre", "sign", "URLs", "I", "find", "LINK", "CloudFront", "NUMBER", "Client", "NUMBER", "generate_presigned_url", "NUMBER", "When", "will", "they", "become", "available", "in", "a", "stable", "release", "of", "boto", "NUMBER", "Both", "of", "those", "methods", "be", "available", "in", "the", "latest", "version", "of", "boto", "NUMBER", "Let", "us", "know", "if", "there", "s", "any", "other", "question", "NUMBER", "Hi", "there", "I", "ve", "read", "the", "docs", "but", "I", "m", "struggling", "to", "understand", "how", "to", "actually", "generate", "a", "pre", "sign", "url", "to", "allow", "temporary", "access", "to", "download", "contents", "from", "a", "s", "NUMBER", "bucket", "NUMBER", "Any", "help", "Thanks", "Mjello", "I", "m", "in", "the", "same", "boat", "as", "niallatbynder", "I", "can", "t", "seem", "to", "figure", "out", "how", "generate", "a", "sign", "url", "NUMBER", "CloudFront", "NUMBER", "Client", "NUMBER", "generate_presigned_url", "takes", "a", "ClientMethod", "argument", "but", "fail", "to", "describe", "what", "this", "ClientMethod", "can", "be", "NUMBER", "From", "my", "trails", "I", "get", "the", "impression", "that", "ClientMethod", "should", "be", "a", "method", "on", "CloudFront", "NUMBER", "Client", "be", "that", "correctly", "understood", "In", "that", "case", "I", "can", "t", "find", "any", "methods", "on", "CloudFront", "NUMBER", "Client", "that", "fetches", "a", "file", "from", "a", "bucket", "hence", "no", "methods", "to", "generate", "a", "sign", "url", "for", "NUMBER", "An", "example", "of", "how", "to", "use", "this", "would", "be", "greatly", "appreciated", "NUMBER", "Thanks", "in", "advance", "NUMBER", "Faerloev", "The", "ClientMethod", "param", "be", "not", "clearly", "describe", "but", "it", "just", "means", "a", "Client", "method", "like", "the", "get_object", "LINK", "s", "NUMBER", "NUMBER", "url", "client", "NUMBER", "Here", "s", "my", "example", "python", "client", "boto", "NUMBER", "client", "s", "NUMBER", "bucket_name", "api_reports", "resp", "client", "NUMBER", "put_object", "Bucket", "bucket_name", "Key", "filename", "Body", "file", "Expires", "datetime", "NUMBER", "utcnow", "timedelta", "days", "NUMBER", "print", "resp", "url", "client", "NUMBER", "generate_presigned_url", "get_object", "Params", "Bucket", "bucket_name", "Key", "filename", "ExpiresIn", "NUMBER", "print", "url", "radhomero", "thanks", "for", "point", "it", "out", "NUMBER", "I", "look", "through", "the", "methods", "listed", "under", "These", "be", "the", "available", "methods", "under", "Client", "section", "LINK", "s", "NUMBER", "NUMBER", "url", "client", "and", "I", "wonder", "what", "be", "the", "difference", "between", "download_file", "and", "get_object", "and", "similarly", "upload_file", "and", "put_object", "cilia", "See", "LINK", "for", "the", "differences", "NUMBER", "Upload", "and", "Download_file", "be", "abstractions", "in", "high", "level", "to", "actually", "download", "or", "upload", "file", "from", "local", "folders", "NUMBER", "radhomero", "My", "apologies", "for", "not", "be", "more", "specific", "NUMBER", "I", "m", "talking", "about", "the", "CloudFront", "client", "NUMBER", "Not", "the", "S", "NUMBER", "client", "NUMBER", "As", "far", "I", "can", "tell", "the", "CloudFront", "client", "be", "miss", "methods", "for", "downloading", "data", "eg", "NUMBER", "get_object", "NUMBER", "For", "now", "I", "have", "overcome", "this", "by", "write", "my", "own", "signing", "method", "based", "on", "an", "old", "Stackoverflow", "answer", "NUMBER", "faerloev", "how", "did", "you", "generate_presigned_url", "for", "cloudfront", "has", "the", "miss", "get_object", "be", "fix", "Thanks", "radhomero", "Thank", "you", "beers", "cx", "NUMBER", "yale", "My", "sincere", "apologies", "for", "not", "responding", "sooner", "NUMBER", "I", "hope", "you", "managed", "to", "sign", "your", "urls", "but", "if", "not", "and", "for", "the", "sake", "of", "others", "ending", "up", "here", "here", "s", "a", "hint", "I", "based", "my", "solution", "on", "the", "accepted", "answer", "from", "this", "question", "on", "Stackoverflow", "LINK", "sign", "urls", "for", "amazon", "cloudfront", "which", "pretty", "much", "works", "out", "of", "the", "box", "NUMBER", "I", "exchanged", "M", "NUMBER", "Crypto", "for", "rsa", "LINK", "to", "get", "a", "pure", "Python", "implmentation", "NUMBER", "radhomero", "NUMBER", "exactly", "what", "I", "needed", "NUMBER", "I", "think", "this", "should", "be", "documented", "in", "the", "boto", "NUMBER", "S", "NUMBER", "documentation", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "c", "NUMBER", "eccd", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "on", "jamesls", "resource", "user", "agent", "into", "fec", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "a", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "af", "NUMBER", "aeee", "NUMBER", "baf", "NUMBER", "c", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "c", "NUMBER", "eccd", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "on", "jamesls", "resource", "user", "agent", "into", "fec", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "a", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "af", "NUMBER", "aeee", "NUMBER", "baf", "NUMBER", "c", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "edde", "NUMBER", "adbcafa", "NUMBER", "a", "NUMBER", "efde", "NUMBER", "on", "jamesls", "move", "functional", "test", "into", "b", "NUMBER", "e", "NUMBER", "beded", "NUMBER", "cee", "NUMBER", "da", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "df", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "ship", "It", "looks", "good", "to", "me", "NUMBER", "That", "be", "all", "I", "need", "to", "start", "hooking", "in", "the", "dynamodb", "customizations", "NUMBER", "Had", "a", "small", "comment", "NUMBER", "I", "was", "going", "to", "make", "a", "comment", "about", "add", "more", "of", "the", "test", "over", "to", "functional", "directory", "but", "it", "looks", "like", "you", "beat", "me", "to", "it", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "dfbc", "NUMBER", "bcd", "on", "jamesls", "resource", "ext", "into", "b", "NUMBER", "e", "NUMBER", "beded", "NUMBER", "cee", "NUMBER", "da", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "df", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "ff", "NUMBER", "d", "NUMBER", "dc", "NUMBER", "ab", "NUMBER", "b", "NUMBER", "cebe", "NUMBER", "ac", "NUMBER", "ae", "NUMBER", "on", "jamesls", "resource", "ext", "into", "b", "NUMBER", "e", "NUMBER", "beded", "NUMBER", "cee", "NUMBER", "da", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "df", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "This", "be", "an", "easy", "way", "to", "build", "conditional", "expressions", "for", "operations", "like", "query", "scan", "etc", "NUMBER", "It", "helps", "build", "both", "the", "conditional", "expression", "string", "and", "any", "placeholders", "that", "may", "be", "required", "for", "the", "attribute", "name", "or", "value", "NUMBER", "This", "can", "be", "applied", "whenever", "the", "dynamodb", "shape", "be", "ConditionExpression", "or", "any", "other", "similar", "shapes", "like", "KeyExpression", "To", "get", "a", "sense", "of", "all", "of", "the", "different", "options", "I", "would", "first", "checkout", "the", "TestConditionExpressionBuilder", "to", "see", "what", "the", "end", "output", "of", "use", "the", "builder", "with", "the", "various", "attribute", "and", "attribute", "methods", "be", "NUMBER", "cc", "jamesls", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ebc", "NUMBER", "e", "NUMBER", "db", "NUMBER", "b", "NUMBER", "e", "NUMBER", "af", "NUMBER", "e", "NUMBER", "c", "on", "kyleknap", "dynamodb", "filters", "into", "b", "NUMBER", "e", "NUMBER", "beded", "NUMBER", "cee", "NUMBER", "da", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "df", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "d", "NUMBER", "d", "NUMBER", "dcea", "NUMBER", "b", "NUMBER", "bf", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "ee", "NUMBER", "bdd", "NUMBER", "c", "NUMBER", "on", "kyleknap", "dynamodb", "filters", "into", "b", "NUMBER", "e", "NUMBER", "beded", "NUMBER", "cee", "NUMBER", "da", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "df", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "I", "update", "the", "code", "based", "on", "comments", "NUMBER", "Edit", "I", "actually", "remove", "the", "commit", "that", "add", "a", "KeyConditionBuilder", "class", "NUMBER", "The", "reason", "I", "did", "this", "be", "that", "the", "logic", "needs", "to", "live", "in", "the", "same", "object", "when", "applying", "the", "transformation", "NUMBER", "The", "Query", "operation", "can", "do", "both", "a", "KeyConditionExpression", "and", "a", "ConditionExpression", "NUMBER", "However", "they", "share", "the", "same", "variable", "dictionary", "for", "attribute", "names", "and", "values", "NUMBER", "If", "there", "were", "two", "separate", "builders", "they", "can", "clobber", "each", "other", "s", "variables", "when", "the", "request", "be", "be", "formed", "because", "each", "do", "not", "have", "knowledge", "of", "the", "variables", "the", "other", "builder", "be", "build", "NUMBER", "Therefore", "it", "be", "most", "safe", "to", "use", "only", "one", "builder", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "baaccb", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "d", "NUMBER", "cfd", "NUMBER", "f", "NUMBER", "bb", "NUMBER", "on", "kyleknap", "dynamodb", "filters", "into", "fec", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "a", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "af", "NUMBER", "aeee", "NUMBER", "baf", "NUMBER", "c", "NUMBER", "on", "boto", "develop", "NUMBER", "shipit", "Looks", "good", "just", "had", "some", "small", "comments", "and", "suggestions", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ae", "NUMBER", "ea", "NUMBER", "dfbf", "NUMBER", "e", "NUMBER", "abcba", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "ac", "NUMBER", "f", "NUMBER", "on", "kyleknap", "dynamodb", "filters", "into", "fec", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "a", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "af", "NUMBER", "aeee", "NUMBER", "baf", "NUMBER", "c", "NUMBER", "on", "boto", "develop", "NUMBER", "shipit", "Looks", "good", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "ace", "NUMBER", "fb", "NUMBER", "c", "on", "jamesls", "add", "ec", "NUMBER", "NUMBER", "into", "f", "NUMBER", "de", "NUMBER", "b", "NUMBER", "eff", "NUMBER", "f", "NUMBER", "d", "NUMBER", "aeab", "on", "boto", "develop", "NUMBER", "Nice", "NUMBER", "Good", "to", "see", "those", "test", "update", "NUMBER", "ship", "Added", "handlers", "on", "both", "the", "intput", "and", "output", "of", "clients", "and", "resources", "to", "automatically", "use", "TypeSerializer", "and", "TypeDeserializer", "NUMBER", "cc", "jamesls", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "bdfa", "NUMBER", "cd", "NUMBER", "on", "kyleknap", "apply", "db", "shapes", "into", "NUMBER", "fa", "NUMBER", "bbdc", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "df", "NUMBER", "af", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "bd", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "on", "kyleknap", "apply", "db", "shapes", "into", "fec", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "a", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "af", "NUMBER", "aeee", "NUMBER", "baf", "NUMBER", "c", "NUMBER", "on", "boto", "develop", "NUMBER", "Overall", "it", "looks", "good", "and", "I", "like", "the", "general", "approach", "NUMBER", "I", "just", "had", "some", "comments", "about", "the", "test", "and", "possibly", "pulling", "out", "some", "of", "the", "inner", "function", "classes", "out", "to", "the", "module", "level", "to", "avoid", "having", "to", "create", "them", "every", "time", "the", "handlers", "be", "invoked", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "cef", "NUMBER", "f", "NUMBER", "ced", "NUMBER", "a", "NUMBER", "a", "NUMBER", "bcdc", "NUMBER", "c", "NUMBER", "d", "NUMBER", "on", "kyleknap", "apply", "db", "shapes", "into", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "efe", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "on", "boto", "develop", "NUMBER", "Thanks", "Just", "had", "a", "small", "alternate", "suggestion", "for", "that", "dynamodb", "high", "level", "class", "that", "might", "be", "a", "little", "cleaner", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "df", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "abfefd", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "dd", "NUMBER", "a", "on", "kyleknap", "apply", "db", "shapes", "into", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "efe", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "on", "boto", "develop", "NUMBER", "shipit", "Looks", "good", "NUMBER", "Attempting", "to", "load", "the", "bucket", "s", "creation_date", "results", "in", "a", "ResourceLoadException", "NUMBER", "python", "import", "sys", "sys", "NUMBER", "version", "NUMBER", "default", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "n", "GCC", "NUMBER", "Compatible", "Apple", "LLVM", "NUMBER", "clang", "NUMBER", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "b", "s", "NUMBER", "Bucket", "mybucket", "b", "NUMBER", "name", "mybucket", "b", "NUMBER", "creation_date", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "property_loader", "NUMBER", "has", "no", "load", "method", "NUMBER", "format", "self", "NUMBER", "__class__", "NUMBER", "__name__", "boto", "NUMBER", "exception", "NUMBER", "ResourceLoadException", "s", "NUMBER", "Bucket", "has", "no", "load", "method", "sh", "pip", "show", "boto", "NUMBER", "Name", "boto", "NUMBER", "Version", "NUMBER", "Following", "up", "on", "this", "issue", "The", "underlying", "issue", "here", "be", "that", "there", "be", "no", "API", "to", "directly", "get", "a", "single", "bucket", "s", "creation_date", "NUMBER", "The", "best", "we", "can", "do", "be", "approximate", "this", "by", "doing", "a", "ListBuckets", "call", "which", "gives", "a", "list", "of", "all", "your", "buckets", "and", "their", "creation", "dates", "and", "finding", "the", "appropriate", "bucket", "NUMBER", "Fixed", "via", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "ae", "NUMBER", "d", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "db", "NUMBER", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "jamesls", "extract", "ci", "scripts", "into", "cf", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "de", "NUMBER", "babf", "NUMBER", "e", "NUMBER", "db", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "ae", "NUMBER", "d", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "db", "NUMBER", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "jamesls", "extract", "ci", "scripts", "into", "cf", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "de", "NUMBER", "babf", "NUMBER", "e", "NUMBER", "db", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "on", "boto", "develop", "NUMBER", "LGTM", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "fa", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "bfeb", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "on", "jamesls", "wheels", "deps", "into", "cf", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "de", "NUMBER", "babf", "NUMBER", "e", "NUMBER", "db", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "on", "boto", "develop", "NUMBER", "Looks", "good", "NUMBER", "Just", "had", "a", "couple", "question", "before", "giving", "you", "a", "ship", "NUMBER", "Looks", "good", "given", "the", "upcoming", "PR", "NUMBER", "ship", "As", "per", "the", "examples", "in", "the", "docs", "LINK", "usage", "passing", "a", "callback", "to", "S", "NUMBER", "Transfer", "NUMBER", "upload_file", "displays", "the", "upload", "progress", "NUMBER", "However", "because", "botocore", "NUMBER", "auth", "NUMBER", "SigV", "NUMBER", "Auth", "NUMBER", "payload", "consumes", "the", "request", "body", "this", "actually", "happens", "twice", "once", "for", "calculating", "the", "SHA", "NUMBER", "of", "the", "body", "and", "one", "more", "when", "sending", "the", "body", "NUMBER", "This", "be", "somewhat", "cumbersome", "to", "workaround", "I", "did", "it", "by", "add", "these", "lines", "to", "the", "Progress", "NUMBER", "__call__", "example", "if", "bytes_amount", "NUMBER", "and", "self", "NUMBER", "_seen_so_far", "self", "NUMBER", "_size", "assume", "we", "be", "now", "only", "starting", "the", "actual", "transfer", "self", "NUMBER", "_seen_so_far", "NUMBER", "It", "would", "be", "nice", "if", "somehow", "this", "could", "be", "do", "a", "bit", "better", "seems", "however", "that", "botocore", "has", "no", "support", "for", "progress", "report", "and", "I", "don", "t", "see", "an", "obvious", "way", "to", "do", "it", "correctly", "apart", "from", "the", "present", "solution", "NUMBER", "Here", "s", "an", "idea", "for", "a", "propose", "fix", "NUMBER", "While", "the", "ideal", "fix", "would", "be", "to", "hook", "into", "the", "_sending_", "side", "of", "the", "upload", "the", "actual", "socket", "use", "by", "the", "HTTPConnection", "the", "next", "best", "thing", "we", "have", "be", "to", "hook", "into", "the", "read", "s", "of", "the", "file", "like", "object", "we", "re", "uploading", "NUMBER", "To", "fix", "this", "issue", "we", "need", "to", "hook", "into", "this", "process", "as", "late", "as", "possible", "such", "that", "any", "other", "handler", "signer", "that", "reads", "the", "body", "before", "sending", "doesn", "t", "affect", "progress", "NUMBER", "One", "possibility", "be", "Add", "an", "enable_callback", "disable_callback", "method", "to", "the", "file", "like", "object", "which", "indicates", "whether", "or", "not", "the", "callback", "be", "invoked", "when", "read", "ing", "from", "the", "file", "NUMBER", "When", "we", "wrap", "the", "file", "like", "object", "for", "uploads", "we", "disable", "callbacks", "NUMBER", "We", "register", "a", "handler", "for", "request", "created", "via", "register_last", "which", "checks", "if", "the", "object", "has", "an", "enable_callback", "method", "and", "if", "it", "do", "it", "will", "enable", "callbacks", "NUMBER", "This", "gets", "around", "our", "two", "problem", "NUMBER", "By", "checking", "for", "enable_callback", "when", "we", "ensure", "that", "the", "client", "not", "use", "the", "high", "level", "interface", "will", "not", "trigger", "undesired", "behavior", "NUMBER", "This", "be", "how", "we", "can", "scope", "it", "to", "a", "per", "request", "basis", "because", "only", "request", "created", "by", "the", "high", "level", "interface", "will", "have", "file", "like", "bodies", "with", "an", "enable_callback", "method", "NUMBER", "NUMBER", "By", "use", "register_last", "we", "ensure", "we", "enable", "callbacks", "after", "request", "signing", "which", "happens", "in", "request", "created", "via", "register", "and", "can", "avoid", "the", "double", "callbacks", "NUMBER", "kyleknap", "mtdowling", "thoughts", "kyleknap", "So", "what", "we", "can", "do", "be", "register", "two", "handlers", "register_first", "calls", "fileobj", "NUMBER", "disable_callback", "register_last", "calls", "fileobj", "NUMBER", "enable_callback", "That", "should", "handle", "the", "retry", "case", "NUMBER", "Although", "as", "mention", "in", "an", "earlier", "comment", "I", "think", "we", "ll", "need", "a", "separate", "change", "to", "handle", "the", "retry", "case", "NUMBER", "I", "think", "will", "require", "an", "update", "to", "the", "required", "interface", "for", "callbacks", "NUMBER", "Something", "like", "class", "ProgressCalllback", "def", "reset", "self", "pass", "def", "__call__", "self", "NUMBER", "pass", "This", "that", "would", "be", "address", "in", "a", "separate", "PR", "NUMBER", "When", "run", "on", "Python", "NUMBER", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "S", "NUMBER", "Transfer", "has", "a", "dependency", "on", "futures", "package", "a", "back", "port", "of", "Python", "NUMBER", "x", "concurrent", "NUMBER", "future", "which", "be", "not", "install", "by", "default", "with", "a", "pip", "install", "boto", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "db", "NUMBER", "bcc", "NUMBER", "f", "NUMBER", "a", "NUMBER", "da", "NUMBER", "a", "NUMBER", "bf", "on", "jamesls", "add", "ddb", "resource", "into", "be", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "dddb", "NUMBER", "d", "NUMBER", "da", "NUMBER", "d", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "db", "NUMBER", "bcc", "NUMBER", "f", "NUMBER", "a", "NUMBER", "da", "NUMBER", "a", "NUMBER", "bf", "on", "jamesls", "add", "ddb", "resource", "into", "be", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "dddb", "NUMBER", "d", "NUMBER", "da", "NUMBER", "d", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "ship", "This", "PR", "add", "type", "serialization", "deserialization", "for", "dynamodb", "NUMBER", "It", "works", "much", "like", "the", "Dynamizer", "class", "in", "boto", "NUMBER", "This", "interface", "be", "build", "specifically", "for", "botocore", "NUMBER", "So", "stuff", "like", "base", "NUMBER", "encoding", "decoding", "binary", "be", "handed", "off", "to", "botocore", "NUMBER", "cc", "jamesls", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dffd", "NUMBER", "a", "NUMBER", "a", "NUMBER", "af", "NUMBER", "ebc", "NUMBER", "f", "on", "kyleknap", "dynamodb", "types", "into", "be", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "dddb", "NUMBER", "d", "NUMBER", "da", "NUMBER", "d", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "cca", "NUMBER", "af", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "efab", "NUMBER", "dff", "on", "kyleknap", "dynamodb", "types", "into", "cf", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "de", "NUMBER", "babf", "NUMBER", "e", "NUMBER", "db", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "on", "boto", "develop", "NUMBER", "jamesls", "I", "update", "the", "code", "based", "on", "your", "feedback", "By", "add", "this", "requirement", "we", "do", "not", "worry", "about", "having", "to", "do", "a", "release", "of", "boto", "NUMBER", "everytime", "we", "do", "a", "release", "of", "botocore", "NUMBER", "This", "should", "be", "fine", "given", "we", "do", "not", "expect", "botocore", "breaking", "boto", "NUMBER", "in", "the", "near", "future", "NUMBER", "cc", "jamesls", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ff", "NUMBER", "eeb", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "on", "kyleknap", "requirements", "into", "NUMBER", "aff", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ff", "NUMBER", "eeb", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "on", "kyleknap", "requirements", "into", "NUMBER", "aff", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "on", "boto", "develop", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "afa", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fb", "NUMBER", "on", "jamesls", "jmespath", "deps", "into", "e", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "ff", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "dad", "NUMBER", "cb", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "afa", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fb", "NUMBER", "on", "jamesls", "jmespath", "deps", "into", "e", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "ff", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "dad", "NUMBER", "cb", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "cecca", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "on", "jamesls", "setup", "py", "into", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "cecca", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "on", "jamesls", "setup", "py", "into", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "on", "boto", "develop", "NUMBER", "ship", "LGTM", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "afe", "NUMBER", "ccb", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "on", "jamesls", "more", "random", "into", "NUMBER", "dbea", "NUMBER", "fb", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "afe", "NUMBER", "ccb", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "on", "jamesls", "more", "random", "into", "NUMBER", "dbea", "NUMBER", "fb", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "d", "NUMBER", "a", "NUMBER", "fdd", "NUMBER", "bbf", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "jamesls", "envvar", "update", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "d", "NUMBER", "a", "NUMBER", "fdd", "NUMBER", "bbf", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "jamesls", "envvar", "update", "into", "on", "boto", "develop", "NUMBER", "LGTM", "ship", "it", "ship", "Adds", "some", "info", "about", "how", "to", "use", "resources", "in", "multithreaded", "applications", "NUMBER", "cc", "kyleknap", "jamesls", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "bf", "NUMBER", "b", "NUMBER", "cfb", "NUMBER", "be", "NUMBER", "b", "NUMBER", "f", "NUMBER", "adef", "NUMBER", "on", "threading", "doc", "into", "on", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "bf", "NUMBER", "b", "NUMBER", "cfb", "NUMBER", "be", "NUMBER", "b", "NUMBER", "f", "NUMBER", "adef", "NUMBER", "on", "threading", "doc", "into", "on", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "bf", "NUMBER", "b", "NUMBER", "cfb", "NUMBER", "be", "NUMBER", "b", "NUMBER", "f", "NUMBER", "adef", "NUMBER", "on", "threading", "doc", "into", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "It", "would", "be", "nice", "to", "have", "an", "explanation", "on", "why", "resources", "be", "not", "thread", "safe", "so", "users", "know", "exactly", "why", "it", "be", "suggested", "that", "each", "thread", "should", "use", "its", "own", "resource", "just", "in", "case", "the", "user", "do", "want", "to", "share", "a", "resource", "across", "threads", "and", "would", "have", "to", "add", "locks", "where", "appropriate", "NUMBER", "Also", "it", "would", "be", "nice", "to", "mention", "that", "clients", "be", "thread", "safe", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "ead", "NUMBER", "eeb", "NUMBER", "e", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ee", "NUMBER", "a", "on", "threading", "doc", "into", "on", "develop", "NUMBER", "Hi", "all", "I", "m", "very", "new", "to", "boto", "and", "AWS", "in", "general", "semi", "new", "to", "Python", "but", "loving", "it", "and", "I", "m", "trying", "to", "use", "boto", "NUMBER", "because", "I", "need", "Python", "NUMBER", "support", "for", "S", "NUMBER", "Glacier", "and", "be", "stuck", "NUMBER", "I", "read", "in", "another", "thread", "that", "it", "was", "OK", "to", "ask", "question", "here", "so", "I", "hope", "that", "s", "still", "true", "NUMBER", "I", "be", "trying", "to", "make", "a", "simple", "online", "data", "dump", "for", "archival", "purposes", "NUMBER", "As", "such", "I", "need", "to", "put", "tar", "file", "list", "tar", "file", "and", "retrieve", "tar", "file", "as", "the", "core", "functionality", "NUMBER", "I", "have", "be", "able", "to", "upload", "a", "tar", "but", "cannot", "seem", "to", "get", "the", "list", "function", "to", "work", "NUMBER", "I", "haven", "t", "gotten", "to", "the", "get", "function", "yet", "as", "a", "result", "NUMBER", "Here", "s", "what", "I", "have", "python", "import", "boto", "NUMBER", "import", "os", "os", "NUMBER", "environ", "aws_access_key_id", "xxxxxxxxxxxxxxx", "os", "NUMBER", "environ", "aws_secret_access_key", "yyyyyyyyyyyyy", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "s", "NUMBER", "c", "boto", "NUMBER", "client", "s", "NUMBER", "obj", "boto", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "Object", "archive", "NUMBER", "D", "NUMBER", "NUMBER", "E", "NUMBER", "B", "NUMBER", "A", "NUMBER", "F", "NUMBER", "NUMBER", "F", "NUMBER", "FA", "NUMBER", "tar", "obj", "NUMBER", "put", "Body", "open", "C", "Users", "TropicMike", "PycharmProjects", "glacier", "NUMBER", "D", "NUMBER", "NUMBER", "E", "NUMBER", "B", "NUMBER", "A", "NUMBER", "F", "NUMBER", "NUMBER", "F", "NUMBER", "FA", "NUMBER", "tar", "rb", "response", "s", "NUMBER", "c", "NUMBER", "list_objects", "Bucket", "archive", "for", "i", "in", "response", "print", "i", "When", "I", "do", "the", "list_objects", "I", "just", "get", "this", "output", "TAG", "MaxKeys", "Prefix", "Name", "ResponseMetadata", "Marker", "IsTruncated", "Contents", "TAG", "Can", "someone", "smack", "me", "with", "the", "clue", "by", "four", "and", "help", "me", "see", "the", "what", "I", "m", "doing", "wrong", "I", "just", "want", "to", "be", "able", "to", "get", "the", "list", "of", "tars", "other", "file", "stored", "in", "the", "bucket", "along", "with", "maybe", "their", "size", "date", "info", "NUMBER", "Thanks", "TropicMike", "you", "can", "see", "the", "expected", "output", "structure", "of", "the", "list_objects", "method", "here", "LINK", "s", "NUMBER", "Client", "NUMBER", "list_objects", "The", "correct", "code", "would", "look", "like", "this", "python", "response", "s", "NUMBER", "c", "NUMBER", "list_objects", "Bucket", "archive", "for", "i", "in", "response", "Contents", "print", "i", "Key", "However", "it", "be", "much", "easier", "to", "just", "stick", "with", "the", "higher", "level", "API", "and", "use", "resources", "bucket", "s", "NUMBER", "Bucket", "archive", "for", "i", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "print", "i", "NUMBER", "key", "The", "doc", "link", "above", "has", "a", "lot", "more", "information", "and", "examples", "NUMBER", "Please", "let", "me", "know", "if", "you", "have", "other", "question", "Awesome", "thank", "you", "Daniel", "I", "shouldn", "t", "have", "close", "that", "so", "quickly", "Is", "this", "guy", "correct", "in", "his", "assessment", "of", "saving", "an", "object", "LINK", "to", "save", "s", "NUMBER", "object", "to", "a", "file", "use", "boto", "NUMBER", "Thanks", "TropicMike", "there", "be", "a", "customization", "that", "went", "in", "recently", "to", "help", "with", "this", "but", "it", "s", "currently", "only", "expose", "at", "the", "client", "low", "level", "python", "s", "NUMBER", "c", "s", "NUMBER", "meta", "NUMBER", "client", "s", "NUMBER", "c", "NUMBER", "download_file", "BucketName", "RemoteFilename", "LocalFilename", "s", "NUMBER", "c", "NUMBER", "upload_file", "LocalFilename", "BucketName", "RemoteFilename", "Example", "s", "NUMBER", "c", "NUMBER", "download_file", "MyBucket", "hello", "NUMBER", "txt", "hello", "NUMBER", "txt", "You", "can", "see", "the", "full", "documentation", "and", "available", "features", "in", "the", "boto", "NUMBER", "s", "NUMBER", "transfer", "NUMBER", "py", "LINK", "file", "NUMBER", "The", "client", "s", "upload_file", "and", "download_file", "be", "just", "a", "convenience", "layer", "so", "you", "don", "t", "have", "to", "make", "your", "own", "S", "NUMBER", "Transfer", "class", "from", "the", "client", "NUMBER", "Edit", "That", "documentation", "be", "also", "rendered", "out", "here", "LINK", "Thanks", "again", "I", "ll", "give", "those", "a", "shot", "today", "NUMBER", "I", "m", "seeing", "some", "performance", "issue", "NUMBER", "When", "I", "upload", "two", "test", "file", "via", "the", "web", "UI", "s", "NUMBER", "dashboard", "from", "my", "computer", "they", "complete", "way", "faster", "than", "when", "I", "upload", "via", "Python", "boto", "NUMBER", "image", "LINK", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "cfb", "a", "NUMBER", "ff", "NUMBER", "a", "NUMBER", "c", "NUMBER", "png", "Is", "the", "Python", "boto", "NUMBER", "solution", "expected", "to", "be", "that", "much", "slower", "Here", "s", "my", "code", "python", "file", "C", "Users", "mike", "PycharmProjects", "glacier", "NUMBER", "D", "NUMBER", "NUMBER", "E", "NUMBER", "B", "NUMBER", "A", "NUMBER", "F", "NUMBER", "NUMBER", "F", "NUMBER", "FA", "NUMBER", "tar", "C", "Users", "mike", "PycharmProjects", "glacier", "SDMT", "NUMBER", "tar", "s", "NUMBER", "r", "boto", "NUMBER", "resource", "s", "NUMBER", "s", "NUMBER", "c", "s", "NUMBER", "r", "NUMBER", "meta", "NUMBER", "client", "for", "path", "in", "file", "file", "os", "NUMBER", "path", "NUMBER", "basename", "path", "print", "uploading", "file", "start", "time", "NUMBER", "time", "s", "NUMBER", "c", "NUMBER", "upload_file", "path", "archive", "file", "end", "time", "NUMBER", "time", "print", "time", "elapse", "str", "end", "start", "Interesting", "NUMBER", "Further", "test", "with", "the", "US", "normal", "yields", "much", "better", "results", "for", "the", "large", "file", "vs", "NUMBER", "the", "small", "but", "I", "wonder", "why", "the", "python", "vs", "NUMBER", "web", "upload", "in", "the", "Oregon", "datacenter", "be", "so", "varying", "NUMBER", "image", "LINK", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "be", "NUMBER", "png", "Hmm", "NUMBER", "maybe", "this", "be", "my", "own", "inexperience", "with", "the", "variability", "of", "S", "NUMBER", "I", "just", "re", "run", "my", "test", "to", "the", "Oregon", "DC", "and", "the", "large", "file", "completed", "in", "NUMBER", "seconds", "NUMBER", "Perhaps", "that", "level", "of", "variance", "be", "par", "for", "the", "course", "Yep", "your", "summarization", "be", "correct", "NUMBER", "Both", "the", "python", "and", "web", "uploads", "were", "do", "from", "the", "same", "desktop", "hardwired", "computer", "from", "Florida", "yeah", "I", "know", "OR", "be", "about", "as", "far", "away", "as", "you", "can", "get", "I", "was", "just", "test", "different", "options", "For", "the", "web", "uploads", "I", "went", "into", "the", "bucket", "in", "the", "S", "NUMBER", "interface", "and", "dragged", "a", "file", "in", "NUMBER", "I", "start", "a", "stopwatch", "on", "my", "phone", "the", "second", "I", "clicked", "start", "upload", "and", "stopped", "it", "when", "it", "turned", "green", "and", "said", "complete", "so", "there", "be", "some", "human", "factor", "slop", "in", "those", "numbers", "NUMBER", "The", "nice", "thing", "though", "be", "that", "the", "boto", "speeds", "be", "not", "as", "drastically", "different", "slower", "than", "that", "one", "test", "indicated", "recent", "runs", "have", "be", "giving", "me", "NUMBER", "and", "NUMBER", "seconds", "each", "for", "the", "large", "file", "so", "_much_", "better", "NUMBER", "Here", "be", "the", "table", "with", "the", "additional", "python", "boto", "test", "image", "LINK", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "da", "NUMBER", "ad", "NUMBER", "de", "NUMBER", "png", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "be", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "ffaa", "NUMBER", "b", "NUMBER", "bdcc", "NUMBER", "fc", "on", "jamesls", "inject", "s", "NUMBER", "methods", "into", "c", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "be", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "ffaa", "NUMBER", "b", "NUMBER", "bdcc", "NUMBER", "fc", "on", "jamesls", "inject", "s", "NUMBER", "methods", "into", "c", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "be", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "ffaa", "NUMBER", "b", "NUMBER", "bdcc", "NUMBER", "fc", "on", "jamesls", "inject", "s", "NUMBER", "methods", "into", "c", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "on", "boto", "develop", "NUMBER", "Aside", "from", "the", "one", "comment", "about", "collisions", "this", "looks", "good", "NUMBER", "Also", "how", "be", "we", "going", "to", "handle", "documenting", "these", "new", "methods", "I", "d", "ideally", "like", "to", "see", "them", "in", "the", "reference", "documentation", "for", "both", "clients", "and", "resources", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "dba", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ab", "NUMBER", "bde", "NUMBER", "on", "jamesls", "inject", "s", "NUMBER", "methods", "into", "c", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "on", "boto", "develop", "NUMBER", "LGTM", "ship", "it", "Sorry", "if", "this", "isn", "t", "the", "right", "place", "to", "ask", "this", "question", "NUMBER", "I", "can", "t", "find", "a", "boto", "NUMBER", "mailing", "list", "NUMBER", "How", "do", "I", "stream", "content", "into", "S", "NUMBER", "from", "a", "file", "use", "boto", "NUMBER", "without", "reading", "the", "whole", "file", "s", "contents", "into", "memory", "I", "m", "looking", "for", "the", "equivalent", "of", "set_contents_from_filename", "in", "boto", "NUMBER", "Thanks", "Russ", "russellneufeld", "a", "possible", "workaround", "for", "now", "that", "doesn", "t", "support", "multipart", "be", "below", "NUMBER", "I", "believe", "this", "will", "read", "the", "file", "in", "chunks", "as", "it", "sends", "the", "data", "python", "import", "boto", "NUMBER", "obj", "boto", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "Object", "bucket", "name", "object", "name", "obj", "NUMBER", "put", "Body", "open", "path", "to", "filename", "rb", "Thanks", "I", "ll", "give", "it", "a", "try", "NUMBER", "Russ", "On", "Apr", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Daniel", "G", "NUMBER", "Taylor", "notifications", "github", "NUMBER", "com", "write", "russellneufeld", "a", "possible", "workaround", "for", "now", "that", "doesn", "t", "support", "multipart", "be", "below", "NUMBER", "I", "believe", "this", "will", "read", "the", "file", "in", "chunks", "as", "it", "sends", "the", "data", "import", "boto", "NUMBER", "obj", "boto", "NUMBER", "resource", "s", "NUMBER", "NUMBER", "Object", "bucket", "name", "object", "name", "obj", "NUMBER", "put", "Body", "open", "path", "to", "filename", "rb", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "By", "the", "way", "be", "there", "a", "better", "forum", "for", "me", "to", "ask", "these", "types", "of", "question", "russellneufeld", "this", "be", "probably", "the", "best", "place", "to", "report", "issue", "and", "ask", "question", "for", "now", "NUMBER", "Please", "do", "let", "us", "know", "your", "thoughts", "on", "Boto", "NUMBER", "and", "any", "shortcomings", "like", "set_contents_from_filename", "functionality", "because", "this", "helps", "us", "to", "understand", "what", "our", "customers", "need", "NUMBER", "FWIW", "I", "tried", "what", "danielgtaylor", "suggested", "and", "it", "worked", "NUMBER", "In", "my", "particular", "case", "I", "actually", "had", "a", "file", "object", "already", "so", "the", "upload_file", "api", "taking", "a", "filename", "would", "not", "work", "NUMBER", "Hopefully", "danielgtaylor", "s", "way", "will", "continue", "to", "work", "or", "there", "will", "be", "an", "api", "which", "will", "also", "take", "a", "file", "object", "NUMBER", "More", "details", "in", "my", "case", "I", "have", "a", "django", "UploadedFile", "object", "which", "either", "wraps", "a", "stream", "or", "a", "temporary", "file", "on", "disk", "NUMBER", "UploadedFile", "subclasses", "the", "python", "file", "object", "but", "there", "s", "no", "way", "to", "access", "it", "by", "filename", "NUMBER", "russellneufeld", "both", "ways", "will", "continue", "to", "work", "NUMBER", "This", "appears", "to", "be", "similar", "to", "a", "report", "issue", "in", "boto", "LINK", "I", "get", "the", "following", "exception", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "PermanentRedirect", "when", "calling", "the", "GetBucketTagging", "operation", "The", "bucket", "you", "be", "attempting", "to", "access", "must", "be", "address", "use", "the", "specified", "endpoint", "NUMBER", "Please", "send", "all", "future", "request", "to", "this", "endpoint", "NUMBER", "tianx", "NUMBER", "it", "looks", "like", "you", "probably", "need", "to", "pass", "the", "region", "name", "when", "creating", "your", "client", "or", "resource", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "region_name", "us", "west", "NUMBER", "bucket", "s", "NUMBER", "create_bucket", "Bucket", "boto", "NUMBER", "region", "CreateBucketConfiguration", "LocationConstraint", "us", "west", "NUMBER", "bucket", "NUMBER", "Object", "hello", "NUMBER", "txt", "NUMBER", "put", "Body", "hello", "NUMBER", "bucket", "NUMBER", "Object", "hello", "NUMBER", "txt", "NUMBER", "last_modified", "datetime", "NUMBER", "datetime", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tzinfo", "tzutc", "You", "can", "also", "determine", "the", "bucket", "location", "programmatically", "python", "s", "NUMBER", "meta", "NUMBER", "client", "NUMBER", "get_bucket_location", "Bucket", "boto", "NUMBER", "region", "LocationConstraint", "us", "west", "NUMBER", "ResponseMetadata", "RequestId", "abc", "NUMBER", "HostId", "NUMBER", "HTTPStatusCode", "NUMBER", "This", "be", "a", "limitation", "of", "the", "way", "that", "S", "NUMBER", "works", "but", "with", "the", "above", "code", "you", "can", "work", "around", "it", "to", "support", "any", "bucket", "in", "any", "region", "NUMBER", "Please", "let", "me", "know", "if", "you", "have", "any", "other", "question", "NUMBER", "So", "my", "use", "case", "was", "that", "i", "was", "trying", "to", "grab", "the", "tags", "for", "the", "bucket", "NUMBER", "Here", "be", "some", "sample", "code", "python", "import", "boto", "NUMBER", "try", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "region_name", "us", "east", "NUMBER", "name", "my", "NUMBER", "bucket", "NUMBER", "random", "dotted_bucket", "s", "NUMBER", "Bucket", "name", "print", "dotted_bucket", "NUMBER", "Tagging", "NUMBER", "tag_set", "except", "Exception", "as", "e", "print", "e", "NUMBER", "message", "Event", "with", "your", "suggestion", "I", "still", "get", "the", "error", "NUMBER", "Steps", "NUMBER", "Create", "a", "bucket", "with", "dots", "NUMBER", "in", "the", "name", "NUMBER", "NUMBER", "Replace", "name", "my", "NUMBER", "bucket", "NUMBER", "random", "in", "sample", "code", "with", "the", "created", "bucket", "name", "NUMBER", "Run", "sample", "code", "NUMBER", "Result", "text", "An", "error", "occur", "PermanentRedirect", "when", "calling", "the", "GetBucketTagging", "operation", "The", "bucket", "you", "be", "attempting", "to", "access", "must", "be", "address", "use", "the", "specified", "endpoint", "NUMBER", "Please", "send", "all", "future", "request", "to", "this", "endpoint", "NUMBER", "I", "did", "a", "test", "on", "Python", "NUMBER", "as", "well", "NUMBER", "I", "get", "the", "error", "there", "too", "so", "I", "don", "t", "think", "it", "s", "relate", "to", "the", "SSL", "issue", "NUMBER", "i", "tag", "the", "s", "NUMBER", "bucket", "now", "i", "want", "to", "write", "a", "a", "program", "use", "boto", "NUMBER", "to", "fetch", "the", "details", "of", "the", "tagging", "bucket", "can", "anyone", "help", "me", "in", "dat", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "dfd", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "The", "general", "design", "looks", "good", "NUMBER", "I", "had", "a", "couple", "comments", "on", "some", "edge", "cases", "such", "as", "the", "mapping", "of", "extra_args", "to", "UploadObject", "and", "CreateMultipartUpload", "whether", "we", "want", "to", "do", "MD", "NUMBER", "checks", "and", "retries", "NUMBER", "Was", "there", "a", "specific", "reason", "that", "we", "do", "not", "do", "it", "for", "the", "ones", "that", "we", "be", "able", "to", "like", "non", "multipart", "transfers", "I", "did", "not", "make", "a", "comment", "about", "this", "but", "what", "be", "your", "thought", "about", "be", "able", "to", "register", "multiple", "call", "backs", "NUMBER", "Do", "you", "see", "any", "uses", "for", "it", "If", "you", "allow", "for", "multiple", "call", "backs", "you", "could", "enable", "a", "setting", "that", "produces", "a", "progress", "bar", "for", "the", "user", "instead", "of", "having", "the", "user", "copy", "and", "use", "sample", "code", "in", "the", "doc", "strings", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "d", "NUMBER", "da", "NUMBER", "bc", "NUMBER", "a", "NUMBER", "b", "NUMBER", "b", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "da", "NUMBER", "eebda", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Overall", "I", "think", "this", "looks", "good", "just", "had", "a", "few", "comments", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "a", "NUMBER", "aaf", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "baeb", "NUMBER", "aa", "NUMBER", "a", "NUMBER", "d", "NUMBER", "db", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "a", "NUMBER", "aaf", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "baeb", "NUMBER", "aa", "NUMBER", "a", "NUMBER", "d", "NUMBER", "db", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "a", "NUMBER", "aaf", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "baeb", "NUMBER", "aa", "NUMBER", "a", "NUMBER", "d", "NUMBER", "db", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "a", "NUMBER", "aaf", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "baeb", "NUMBER", "aa", "NUMBER", "a", "NUMBER", "d", "NUMBER", "db", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "ae", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "cdd", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "a", "NUMBER", "aeddd", "NUMBER", "b", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "b", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "dfe", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ecd", "NUMBER", "e", "NUMBER", "fbc", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "It", "be", "looking", "good", "NUMBER", "Had", "a", "couple", "comments", "NUMBER", "I", "be", "going", "to", "wait", "on", "the", "ship", "it", "till", "the", "final", "touches", "be", "add", "like", "propagating", "kwargs", "to", "UploadPart", "and", "MD", "NUMBER", "checking", "non", "range", "downloads", "NUMBER", "I", "think", "the", "latest", "change", "look", "good", "overall", "but", "I", "m", "curious", "why", "we", "be", "hard", "code", "the", "allow", "parameters", "instead", "of", "just", "fetching", "that", "info", "from", "the", "Botocore", "model", "NUMBER", "Seems", "like", "it", "may", "become", "a", "maintenance", "issue", "over", "time", "and", "we", "can", "get", "the", "same", "functionality", "and", "good", "error", "by", "use", "the", "model", "instead", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "bbce", "NUMBER", "b", "NUMBER", "ffcd", "NUMBER", "ed", "NUMBER", "d", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "jamesls", "ah", "I", "see", "NUMBER", "I", "thought", "they", "were", "an", "exhaustive", "list", "NUMBER", "Just", "ignore", "my", "comment", "then", "smile", "The", "recent", "stuff", "with", "the", "upload", "error", "handle", "looks", "good", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "fdca", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "fffcb", "NUMBER", "da", "NUMBER", "ff", "NUMBER", "c", "NUMBER", "c", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "fdca", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "fffcb", "NUMBER", "da", "NUMBER", "ff", "NUMBER", "c", "NUMBER", "c", "NUMBER", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ef", "NUMBER", "ea", "NUMBER", "afe", "NUMBER", "aeac", "NUMBER", "c", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "on", "jamesls", "s", "NUMBER", "high", "level", "into", "ee", "NUMBER", "a", "NUMBER", "bac", "NUMBER", "fb", "NUMBER", "adb", "NUMBER", "b", "NUMBER", "d", "NUMBER", "on", "boto", "develop", "NUMBER", "jamesls", "just", "had", "the", "one", "small", "question", "above", "otherwise", "it", "LGTM", "NUMBER", "Thanks", "Looks", "good", "NUMBER", "ship", "I", "have", "a", "queue", "with", "NUMBER", "message", "for", "test", "test", "NUMBER", "test", "NUMBER", "and", "test", "NUMBER", "I", "create", "a", "method", "print_messages", "with", "contents", "for", "message", "in", "queue", "NUMBER", "receive_messages", "MaxNumberOfMessages", "NUMBER", "print", "Messages", "message", "NUMBER", "message_id", "message", "NUMBER", "body", "NUMBER", "Running", "print_messages", "then", "yields", "output", "like", "print_messages", "Message", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "cd", "test", "NUMBER", "Message", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "cd", "test", "NUMBER", "Message", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "cd", "test", "NUMBER", "print_messages", "Message", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "Message", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "Message", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "print_messages", "Message", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "fa", "bb", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "Message", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "fa", "bb", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "Message", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "fa", "bb", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "print_messages", "Message", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "cd", "test", "NUMBER", "Message", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "cd", "test", "NUMBER", "Message", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "cd", "test", "NUMBER", "print_messages", "Message", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "fa", "bb", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "Message", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "fa", "bb", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "Message", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "fa", "bb", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "print_messages", "Message", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "Message", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "Message", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "print_messages", "Message", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "Message", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "Message", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "test", "NUMBER", "jamesls", "of", "course", "NUMBER", "LINK", "The", "parts", "that", "interest", "you", "be", "lines", "NUMBER", "NUMBER", "and", "the", "collect_messages", "function", "NUMBER", "This", "be", "not", "the", "code", "I", "originally", "provide", "in", "this", "issue", "but", "I", "have", "the", "issue", "with", "this", "other", "code", "too", "NUMBER", "The", "only", "difference", "I", "see", "with", "your", "code", "be", "that", "I", "created", "the", "queue", "with", "Queue", "url", "SQS", "doesn", "t", "guarantee", "at", "most", "one", "delivery", "not", "sure", "if", "that", "be", "relate", "to", "this", "issue", "as", "this", "seems", "to", "be", "occurring", "to", "frequently", "NUMBER", "Just", "following", "up", "on", "this", "issue", "NUMBER", "I", "believe", "you", "re", "correct", "it", "s", "likely", "just", "the", "fact", "that", "SQS", "provides", "at", "least", "once", "delivery", "NUMBER", "This", "change", "modifies", "the", "documentation", "to", "include", "structure", "examples", "for", "both", "nested", "input", "parameters", "and", "nested", "service", "response", "values", "NUMBER", "Responses", "be", "include", "for", "both", "clients", "and", "any", "resource", "action", "which", "returns", "a", "low", "level", "response", "NUMBER", "This", "be", "part", "of", "the", "work", "for", "NUMBER", "This", "do", "not", "yet", "include", "documentation", "for", "each", "of", "the", "nested", "values", "except", "for", "a", "basic", "Python", "type", "NUMBER", "I", "m", "hoping", "to", "get", "some", "feedback", "on", "this", "before", "including", "the", "full", "member", "documentation", "NUMBER", "Additionally", "this", "include", "some", "basic", "test", "for", "the", "new", "functionality", "in", "the", "docs", "NUMBER", "py", "module", "NUMBER", "It", "also", "include", "a", "minor", "naming", "change", "for", "PEP", "NUMBER", "more", "of", "these", "be", "come", "soon", "NUMBER", "Example", "output", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "be", "LINK", "d", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "feb", "NUMBER", "ab", "NUMBER", "png", "cc", "jamesls", "kyleknap", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "on", "doc", "structure", "into", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "be", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "on", "develop", "NUMBER", "I", "be", "glad", "that", "you", "add", "test", "so", "we", "can", "start", "build", "those", "up", "NUMBER", "I", "feel", "that", "we", "need", "them", "now", "as", "we", "be", "document", "some", "of", "the", "more", "complex", "structures", "NUMBER", "One", "thing", "that", "I", "would", "like", "seen", "do", "be", "if", "you", "add", "bcdoc", "esque", "helper", "methods", "in", "NUMBER", "I", "feel", "like", "if", "I", "was", "make", "edits", "to", "the", "doc", "code", "I", "could", "easily", "forget", "a", "newline", "character", "or", "a", "closing", "bracket", "NUMBER", "If", "we", "had", "some", "helper", "methods", "to", "help", "clean", "it", "up", "that", "would", "be", "great", "NUMBER", "Even", "if", "it", "was", "like", "methods", "like", "start_structure", "end_structure", "start_list", "end_list", "that", "made", "starting", "and", "ending", "brackets", "that", "would", "be", "great", "NUMBER", "Looking", "at", "the", "code", "other", "methods", "that", "come", "off", "of", "the", "top", "of", "my", "head", "would", "be", "a", "structure_element", "key", "value", "that", "returns", "the", "key", "value", "pattern", "in", "the", "documentation", "NUMBER", "I", "will", "let", "you", "know", "if", "I", "think", "of", "any", "more", "possible", "helper", "methods", "NUMBER", "Let", "me", "know", "what", "you", "think", "NUMBER", "kyleknap", "please", "take", "another", "look", "NUMBER", "Note", "that", "the", "test", "failure", "be", "because", "this", "depends", "on", "boto", "botocore", "NUMBER", "I", "ve", "cleaned", "up", "the", "code", "quite", "a", "bit", "add", "some", "constants", "string", "template", "to", "lower", "the", "chances", "of", "human", "error", "and", "along", "with", "that", "Botocore", "change", "be", "now", "test", "a", "more", "complete", "example", "of", "the", "output", "that", "should", "catch", "your", "concerns", "NUMBER", "Any", "other", "feedback", "Thanks", "NUMBER", "Looks", "good", "NUMBER", "ship", "jamesls", "The", "specific", "examples", "that", "I", "point", "out", "were", "address", "NUMBER", "But", "in", "general", "I", "agree", "with", "you", "I", "feel", "the", "more", "abstraction", "there", "be", "the", "better", "when", "it", "comes", "to", "docs", "NUMBER", "For", "better", "abstraction", "I", "could", "see", "additional", "helper", "methods", "like", "document_list", "document_list_element", "document_structure_element", "add", "NUMBER", "For", "me", "I", "guess", "the", "level", "of", "abstraction", "should", "be", "based", "on", "if", "we", "be", "planning", "to", "reuse", "this", "code", "elsewhere", "and", "how", "long", "we", "plan", "on", "use", "it", "NUMBER", "I", "was", "under", "the", "impression", "this", "code", "be", "going", "to", "be", "relatively", "temporary", "NUMBER", "If", "we", "be", "planning", "to", "reuse", "this", "code", "elsewhere", "it", "would", "be", "useful", "to", "have", "a", "public", "documentation", "api", "that", "we", "could", "rely", "on", "such", "that", "if", "we", "refactor", "the", "internals", "of", "a", "public", "documentation", "method", "we", "can", "expect", "a", "similar", "output", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "cea", "NUMBER", "bbb", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "doc", "structure", "into", "ee", "NUMBER", "a", "NUMBER", "bac", "NUMBER", "fb", "NUMBER", "adb", "NUMBER", "b", "NUMBER", "d", "NUMBER", "on", "develop", "NUMBER", "jamesls", "kyleknap", "please", "have", "another", "look", "NUMBER", "I", "ve", "update", "the", "code", "to", "use", "helper", "function", "have", "add", "a", "dummy", "service", "and", "test", "a", "bunch", "of", "the", "output", "from", "the", "doc", "generator", "NUMBER", "The", "coverage", "be", "now", "near", "to", "where", "it", "was", "before", "around", "NUMBER", "NUMBER", "Still", "lower", "but", "it", "s", "a", "good", "set", "of", "basic", "test", "that", "we", "can", "grow", "over", "time", "NUMBER", "I", "be", "not", "test", "batch", "actions", "and", "a", "couple", "other", "minor", "things", "so", "we", "ll", "want", "to", "add", "test", "for", "that", "in", "the", "future", "NUMBER", "What", "do", "you", "guys", "think", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "on", "doc", "structure", "into", "ee", "NUMBER", "a", "NUMBER", "bac", "NUMBER", "fb", "NUMBER", "adb", "NUMBER", "b", "NUMBER", "d", "NUMBER", "on", "develop", "NUMBER", "Definitely", "looks", "better", "NUMBER", "It", "would", "still", "be", "nice", "to", "get", "coverage", "back", "to", "where", "it", "was", "but", "It", "be", "a", "good", "start", "to", "build", "up", "our", "documentation", "methods", "and", "test", "NUMBER", "ship", "We", "should", "look", "into", "add", "test", "for", "the", "miss", "lines", "and", "possibly", "more", "abstractions", "to", "the", "documentation", "methods", "in", "the", "near", "future", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "cdac", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "on", "jamesls", "update", "readme", "into", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "be", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "cdac", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "on", "jamesls", "update", "readme", "into", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "be", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "on", "boto", "develop", "NUMBER", "LGTM", "ship", "it", "This", "change", "allows", "references", "with", "a", "JMESPath", "query", "set", "on", "the", "reference", "resource", "path", "attribute", "to", "be", "loaded", "with", "data", "at", "instantiation", "time", "if", "that", "data", "be", "present", "in", "the", "parent", "via", "meta", "NUMBER", "data", "NUMBER", "If", "the", "data", "has", "not", "yet", "be", "loaded", "and", "the", "parent", "be", "loadable", "then", "a", "load", "operation", "be", "incurred", "NUMBER", "Before", "python", "ni", "ec", "NUMBER", "NetworkInterface", "abc", "NUMBER", "ni", "NUMBER", "association", "NUMBER", "public_ip", "ResourceLoadException", "ec", "NUMBER", "NetworkInterfaceAssociation", "has", "no", "load", "method", "After", "python", "ni", "ec", "NUMBER", "NetworkInterface", "abc", "NUMBER", "ni", "NUMBER", "association", "NUMBER", "public_ip", "NUMBER", "Added", "a", "test", "to", "ensure", "this", "works", "as", "expected", "NUMBER", "kyleknap", "jamesls", "please", "have", "a", "look", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "dfd", "NUMBER", "f", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "a", "NUMBER", "a", "NUMBER", "bee", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "on", "ref", "load", "into", "ebc", "NUMBER", "f", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "ec", "NUMBER", "ffa", "NUMBER", "e", "NUMBER", "a", "NUMBER", "cb", "NUMBER", "c", "NUMBER", "on", "develop", "NUMBER", "jamesls", "mind", "taking", "another", "look", "Thanks", "NUMBER", "Not", "sure", "this", "be", "the", "right", "place", "to", "ask", "but", "I", "m", "also", "not", "sure", "WHERE", "to", "ask", "this", "NUMBER", "I", "m", "now", "get", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "NotAuthorizedException", "when", "calling", "the", "SetIdentityPoolRoles", "operation", "Access", "to", "Role", "SomeRoleName", "be", "forbidden", "NUMBER", "I", "created", "the", "role", "just", "a", "few", "lines", "previous", "in", "the", "python", "script", "use", "iam", "session", "NUMBER", "client", "iam", "iam", "NUMBER", "create_role", "NUMBER", "and", "now", "trying", "to", "call", "cognito", "session", "NUMBER", "client", "cognito", "identity", "region_name", "us", "east", "NUMBER", "cognito", "NUMBER", "set_identity_pool_roles", "NUMBER", "Am", "I", "doing", "something", "wrong", "Seems", "the", "same", "credentials", "that", "created", "the", "role", "should", "be", "able", "to", "reference", "it", "NUMBER", "Any", "ideas", "jvilhuber", "your", "calling", "code", "looks", "good", "from", "the", "perspective", "of", "Boto", "NUMBER", "Have", "you", "read", "through", "the", "Cognito", "Sync", "developer", "guide", "Maybe", "take", "a", "look", "here", "and", "make", "sure", "your", "role", "has", "the", "correct", "policy", "set", "up", "LINK", "auth", "NUMBER", "html", "iam", "roles", "jvilhuber", "any", "update", "on", "this", "Have", "you", "gotten", "it", "work", "Sorry", "haven", "t", "had", "a", "chance", "yet", "NUMBER", "I", "believe", "the", "user", "I", "m", "use", "has", "full", "access", "during", "development", "but", "I", "will", "double", "check", "NUMBER", "Jan", "On", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Daniel", "G", "NUMBER", "Taylor", "notifications", "github", "NUMBER", "com", "write", "jvilhuber", "LINK", "any", "update", "on", "this", "Have", "you", "gotten", "it", "work", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Sorry", "for", "the", "delay", "NUMBER", "Just", "get", "back", "to", "this", "code", "today", "and", "it", "s", "still", "not", "work", "NUMBER", "The", "user", "in", "question", "has", "AdministratorAccess", "Version", "NUMBER", "NUMBER", "NUMBER", "Statement", "Effect", "Allow", "Action", "Resource", "NUMBER", "I", "tried", "this", "both", "with", "boto", "NUMBER", "and", "the", "aws", "cli", "which", "uses", "the", "same", "botocore", "under", "the", "covers", "I", "think", "NUMBER", "Both", "fail", "with", "the", "same", "error", "NUMBER", "I", "can", "send", "you", "output", "from", "the", "aws", "cli", "debug", "if", "you", "like", "NUMBER", "Or", "I", "can", "paste", "it", "here", "if", "appropriate", "NUMBER", "One", "thought", "I", "m", "passing", "in", "the", "roles", "via", "RoleName", "instead", "of", "an", "ARN", "NUMBER", "Perhaps", "the", "API", "wants", "an", "ARN", "Yes", "that", "was", "it", "NUMBER", "The", "documentation", "could", "be", "better", "Sigh", "NUMBER", "That", "be", "said", "when", "I", "go", "to", "the", "AWS", "console", "and", "inspect", "the", "new", "identity", "pool", "I", "just", "created", "and", "set", "roles", "in", "it", "still", "shows", "as", "having", "no", "roles", "for", "auth", "and", "unauth", "set", "NUMBER", "I", "can", "select", "them", "from", "the", "drop", "down", "and", "save", "but", "for", "some", "reason", "the", "api", "doesn", "t", "REALLY", "set", "them", "NUMBER", "I", "think", "this", "seems", "reasonable", "NUMBER", "Looks", "good", "to", "me", "shipit", "Looks", "good", "ship", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "cde", "NUMBER", "ba", "NUMBER", "d", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "fe", "NUMBER", "on", "session", "profile", "into", "on", "develop", "NUMBER", "For", "everybody", "come", "from", "Google", "it", "be", "now", "call", "AWS_PROFILE", "NUMBER", "AWS_PROFILE", "dev", "ipython", "import", "boto", "NUMBER", "s", "NUMBER", "dev", "boto", "NUMBER", "resource", "s", "NUMBER", "kudos", "go", "to", "haihappen", "shipit", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ec", "NUMBER", "eefb", "NUMBER", "fb", "NUMBER", "fa", "NUMBER", "cbfffe", "on", "model", "collision", "into", "on", "develop", "NUMBER", "As", "someone", "who", "hasn", "t", "looked", "at", "this", "code", "in", "a", "while", "I", "m", "probably", "miss", "something", "but", "where", "be", "the", "test", "for", "this", "feature", "Given", "your", "description", "particularly", "the", "second", "point", "Order", "reserved", "names", "meta", "load", "action", "identifiers", "actions", "subresources", "references", "collections", "and", "then", "attributes", "NUMBER", "I", "was", "looking", "for", "a", "test", "of", "exactly", "like", "this", "NUMBER", "A", "resource", "that", "had", "one", "or", "more", "of", "those", "and", "we", "verify", "they", "get", "renamed", "as", "X", "Y", "Z", "NUMBER", "ResourceModel", "has", "two", "new", "methods", "add", "but", "I", "don", "t", "see", "any", "explicit", "test", "for", "this", "NUMBER", "Looks", "good", "NUMBER", "The", "only", "thing", "I", "did", "not", "see", "was", "the", "collision", "handle", "for", "waiters", "NUMBER", "I", "talked", "to", "you", "about", "add", "it", "even", "though", "the", "chance", "of", "collisions", "for", "waiter_actions", "be", "very", "small", "especially", "since", "wait_until_", "prepends", "all", "waiter", "actions", "just", "to", "be", "safe", "and", "consistent", "with", "the", "rest", "of", "the", "features", "in", "boto", "NUMBER", "Once", "you", "add", "it", "ship", "NUMBER", "Thanks", "ship", "shipit", "I", "could", "be", "incorrect", "but", "I", "believe", "iam", "NUMBER", "NUMBER", "NUMBER", "resources", "NUMBER", "json", "needs", "to", "be", "regenerated", "to", "have", "the", "new", "methods", "for", "interacting", "with", "Managed", "Policies", "NUMBER", "LINK", "Are", "there", "instructions", "for", "generating", "these", "JSON", "file", "LINK", "NUMBER", "NUMBER", "NUMBER", "resources", "NUMBER", "json", "The", "version", "from", "AWS", "has", "remained", "the", "same", "API", "Version", "NUMBER", "NUMBER", "NUMBER", "LINK", "_Operations", "NUMBER", "html", "Is", "there", "documentation", "on", "how", "you", "create", "these", "JSON", "file", "by", "hand", "It", "s", "not", "immediately", "obvious", "to", "me", "what", "the", "correct", "format", "be", "and", "what", "the", "different", "values", "actually", "represent", "NUMBER", "monkeysecurity", "these", "resources", "be", "now", "in", "the", "latest", "release", "Thanks", "for", "all", "the", "help", "NUMBER", "I", "was", "attempting", "to", "test", "some", "failure", "logic", "by", "calling", "an", "S", "NUMBER", "Object", "s", "put", "method", "with", "no", "network", "connection", "NUMBER", "Since", "the", "response", "isn", "t", "really", "documented", "I", "was", "expecting", "an", "empty", "response", "however", "instead", "I", "received", "this", "stack", "trace", "File", "Documents", "development", "amazon", "aws", "aws", "uploader", "NUMBER", "py", "line", "NUMBER", "in", "upload_file", "response", "upload_file", "NUMBER", "put", "Body", "file_handle", "File", "Documents", "development", "virtualenvs", "potree", "converter", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "Documents", "development", "virtualenvs", "potree", "converter", "NUMBER", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "Documents", "development", "virtualenvs", "potree", "converter", "NUMBER", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "operation_model", "request_dict", "TypeError", "NoneType", "object", "be", "not", "iterable", "Here", "s", "the", "code", "that", "cause", "it", "again", "with", "no", "network", "connection", "create", "the", "object", "to", "put", "upload_file", "self", "NUMBER", "bucket", "NUMBER", "Object", "key", "upload", "the", "file", "object", "response", "upload_file", "NUMBER", "put", "Body", "file_handle", "a", "NUMBER", "hill", "this", "has", "be", "fix", "in", "the", "latest", "release", "with", "a", "new", "error", "message", "that", "be", "more", "clear", "EndpointConnectionError", "Could", "not", "connect", "to", "the", "endpoint", "URL", "LINK", "us", "west", "NUMBER", "amazonaws", "NUMBER", "com", "Hi", "I", "m", "not", "sure", "how", "to", "do", "this", "could", "you", "clarify", "boto", "NUMBER", "NUMBER", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "ubitricity", "backup", "o", "bucket", "NUMBER", "Object", "test", "mpu", "o", "NUMBER", "initiate_multipart_upload", "part", "mpu", "NUMBER", "MultipartUploadPart", "NUMBER", "part", "NUMBER", "upload", "datadatadata", "u", "ETag", "d", "NUMBER", "d", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ecf", "NUMBER", "e", "ResponseMetadata", "HTTPStatusCode", "NUMBER", "HostId", "leCanviHIAh", "NUMBER", "lS", "NUMBER", "UursVkiMiyzksNVMAn", "jYgyClzp", "NUMBER", "us", "NUMBER", "mpCjwB", "NUMBER", "WEeifjy", "NUMBER", "LX", "RequestId", "NUMBER", "C", "NUMBER", "B", "NUMBER", "C", "NUMBER", "D", "NUMBER", "E", "NUMBER", "mpu", "NUMBER", "complete", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidRequest", "when", "calling", "the", "CompleteMultipartUpload", "operation", "You", "must", "specify", "at", "least", "one", "part", "I", "understand", "the", "MultipartUploadPart", "be", "not", "be", "add", "to", "the", "MultipartUpload", "object", "NUMBER", "But", "how", "be", "it", "do", "I", "was", "looking", "for", "a", "method", "like", "mpu", "NUMBER", "add_part", "but", "there", "be", "none", "NUMBER", "Thank", "you", "Would", "certainly", "be", "nice", "if", "the", "test", "contained", "more", "than", "one", "part", "NUMBER", "yes", "please", "update", "for", "multiple", "parts", "NUMBER", "boto", "NUMBER", "NUMBER", "import", "boto", "NUMBER", "r", "NUMBER", "boto", "NUMBER", "client", "route", "NUMBER", "domains", "r", "NUMBER", "list_domains", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "home", "aws", "lib", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "operation_model", "request_dict", "TypeError", "NoneType", "object", "be", "not", "iterable", "Never", "mind", "it", "works", "when", "I", "set", "region", "to", "us", "east", "NUMBER", "my", "default", "be", "eu", "central", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "df", "NUMBER", "c", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "d", "NUMBER", "bc", "on", "s", "NUMBER", "ident", "fix", "into", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "febf", "NUMBER", "af", "NUMBER", "ec", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "cf", "NUMBER", "b", "NUMBER", "be", "NUMBER", "on", "develop", "NUMBER", "Would", "there", "be", "any", "way", "to", "add", "a", "test", "for", "this", "Maybe", "an", "integration", "test", "I", "would", "suggest", "just", "creating", "a", "multipart", "upload", "uploading", "a", "part", "and", "then", "listing", "the", "parts", "for", "the", "assertion", "NUMBER", "You", "do", "not", "need", "to", "do", "a", "full", "multipart", "upload", "as", "that", "requires", "more", "than", "NUMBER", "MB", "data", "transferred", "NUMBER", "I", "would", "say", "an", "integration", "for", "multipart", "upload", "in", "boto", "NUMBER", "would", "be", "nice", "NUMBER", "Its", "a", "fairly", "use", "operation", "and", "it", "would", "not", "take", "too", "much", "time", "when", "run", "the", "test", "to", "instantiate", "a", "multipart", "upload", "upload", "a", "single", "small", "under", "TAG", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "ubitricity", "backup", "o", "bucket", "NUMBER", "Object", "test", "mpu", "o", "NUMBER", "initiate_multipart_upload", "mpu", "s", "NUMBER", "MultipartUpload", "bucket_name", "ubitricity", "backup", "object_key", "test", "id", "WYDgB", "NUMBER", "hJrtoTHxWLVL", "NUMBER", "yz", "NUMBER", "bTrL", "NUMBER", "UCuQAk", "NUMBER", "iIpNeIm", "NUMBER", "pIl", "NUMBER", "CZoZ", "NUMBER", "Uk", "NUMBER", "mJmKDokQejymCurdjKBj", "NUMBER", "IQpJF", "NUMBER", "VAJmEjvjHfepJyWSGU", "NUMBER", "P", "NUMBER", "QVdiaDIvJSX_OK", "NUMBER", "w", "NUMBER", "omLPVOcu", "part", "mpu", "NUMBER", "MultipartUploadPart", "NUMBER", "part", "s", "NUMBER", "MultipartUploadPart", "bucket_name", "ubitricity", "backup", "object_key", "WYDgB", "NUMBER", "hJrtoTHxWLVL", "NUMBER", "yz", "NUMBER", "bTrL", "NUMBER", "UCuQAk", "NUMBER", "iIpNeIm", "NUMBER", "pIl", "NUMBER", "CZoZ", "NUMBER", "Uk", "NUMBER", "mJmKDokQejymCurdjKBj", "NUMBER", "IQpJF", "NUMBER", "VAJmEjvjHfepJyWSGU", "NUMBER", "P", "NUMBER", "QVdiaDIvJSX_OK", "NUMBER", "w", "NUMBER", "omLPVOcu", "multipart_upload_id", "test", "part_number", "NUMBER", "part", "NUMBER", "upload", "Body", "test", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "NUMBER", "client", "operation_name", "params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "NoSuchUpload", "when", "calling", "the", "UploadPart", "operation", "The", "specified", "upload", "do", "not", "exist", "NUMBER", "The", "upload", "ID", "may", "be", "invalid", "or", "the", "upload", "may", "have", "be", "abort", "or", "completed", "NUMBER", "In", "the", "MultipartUploadPart", "object", "the", "values", "for", "object_key", "and", "multipart_upload_id", "seem", "inverted", "NUMBER", "Do", "I", "use", "this", "function", "in", "a", "wrong", "way", "I", "m", "just", "get", "going", "on", "boto", "NUMBER", "but", "stumbling", "on", "an", "issue", "NUMBER", "The", "following", "comes", "back", "with", "a", "SignatureDoesNotMatch", "exception", "python", "import", "boto", "NUMBER", "aws_session", "boto", "NUMBER", "Session", "aws_access_key_id", "AWS_ACCESS_KEY", "aws_secret_access_key", "AWS_SECRET_KEY", "region_name", "us", "west", "NUMBER", "s", "NUMBER", "aws_session", "NUMBER", "resource", "s", "NUMBER", "b", "s", "NUMBER", "Bucket", "BUCKET", "bad", "b", "xe", "NUMBER", "good", "this", "works", "b", "NUMBER", "put_object", "Key", "test", "Body", "bad", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "SignatureDoesNotMatch", "when", "calling", "the", "PutObject", "operation", "Am", "I", "miss", "something", "obvious", "I", "m", "use", "boto", "NUMBER", "NUMBER", "I", "m", "expecting", "this", "code", "to", "output", "the", "sizes", "of", "the", "keys", "in", "the", "bucket", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "bucket", "s", "NUMBER", "Bucket", "BUCKET", "for", "o", "in", "bucket", "NUMBER", "objects", "NUMBER", "all", "print", "o", "NUMBER", "size", "instead", "I", "get", "this", "error", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "bug_report", "line", "NUMBER", "in", "TAG", "print", "o", "NUMBER", "size", "File", "home", "glacier", "lib", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "property_loader", "NUMBER", "has", "no", "load", "method", "NUMBER", "format", "self", "NUMBER", "__class__", "NUMBER", "__name__", "boto", "NUMBER", "exception", "NUMBER", "ResourceLoadException", "s", "NUMBER", "ObjectSummary", "has", "no", "load", "method", "I", "m", "use", "a", "bucket", "in", "the", "eu", "central", "NUMBER", "region", "NUMBER", "do", "o", "NUMBER", "content_length", "work", "better", "for", "you", "I", "couldn", "t", "figure", "out", "the", "s", "NUMBER", "ObjectSummary", "example", "in", "the", "documentation", "NUMBER", "Unfortunately", "not", "AttributeError", "s", "NUMBER", "ObjectSummary", "object", "has", "no", "attribute", "content_length", "This", "bug", "appears", "in", "NUMBER", "version", "NUMBER", "pip", "freeze", "grep", "boto", "NUMBER", "boto", "NUMBER", "NUMBER", "python", "import", "boto", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "object_summary", "s", "NUMBER", "ObjectSummary", "bucket_name", "key", "object_summary", "NUMBER", "size", "Traceback", "most", "recent", "call", "last", "File", "line", "NUMBER", "in", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "property_loader", "NUMBER", "has", "no", "load", "method", "NUMBER", "format", "self", "NUMBER", "class", "NUMBER", "name", "boto", "NUMBER", "exception", "NUMBER", "ResourceLoadException", "s", "NUMBER", "ObjectSummary", "has", "no", "load", "method", "danielgtaylor", "I", "be", "still", "get", "the", "same", "problem", "here", "for", "boto", "NUMBER", "version", "NUMBER", "boto", "NUMBER", "exception", "NUMBER", "ResourceLoadException", "s", "NUMBER", "ObjectSummary", "has", "no", "load", "method", "any", "update", "on", "this", "I", "m", "use", "NUMBER", "and", "still", "get", "this", "error", "AttributeError", "s", "NUMBER", "ObjectSummary", "object", "has", "no", "attribute", "content_length", "Has", "it", "be", "fix", "If", "it", "hasn", "t", "now", "worries", "I", "ll", "use", "something", "else", "NUMBER", "Still", "acting", "odd", "for", "me", "too", "NUMBER", "I", "just", "upgrade", "to", "boto", "NUMBER", "NUMBER", "and", "now", "I", "m", "get", "an", "error", "when", "trying", "to", "call", "s", "NUMBER", "Object", "NUMBER", "python", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "obj", "s", "NUMBER", "Object", "my", "bucket", "my", "key", "That", "throw", "an", "AttributeError", "AttributeError", "s", "NUMBER", "object", "has", "no", "attribute", "Object", "If", "I", "go", "back", "to", "NUMBER", "or", "NUMBER", "I", "have", "no", "problem", "accessing", "s", "NUMBER", "Object", "NUMBER", "Was", "there", "a", "breaking", "change", "here", "I", "didn", "t", "see", "anything", "in", "the", "release", "note", "or", "change", "in", "the", "docs", "NUMBER", "Preview", "at", "LINK", "NUMBER", "README", "NUMBER", "rst", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "on", "msabramo", "patch", "NUMBER", "into", "on", "boto", "develop", "NUMBER", "Where", "do", "I", "find", "the", "additional", "information", "not", "covered", "in", "boto", "NUMBER", "read", "the", "docs", "I", "m", "use", "EMR", "and", "need", "to", "use", "add_job_flow_steps", "but", "I", "don", "t", "know", "what", "the", "structure", "of", "steps", "list", "needs", "to", "be", "NUMBER", "I", "know", "how", "to", "do", "it", "use", "aws", "cli", "NUMBER", "Is", "there", "an", "additional", "resource", "I", "should", "be", "looking", "at", "which", "has", "this", "information", "about", "parameter", "structure", "requirements", "when", "use", "boto", "NUMBER", "Thanks", "danielgtaylor", "I", "saw", "your", "comment", "with", "an", "example", "but", "then", "it", "just", "disappeared", "not", "sure", "what", "happened", "there", "danielgtaylor", "Excellent", "thanks", "as", "always", "for", "quick", "response", "owenrumney", "the", "structure", "descriptions", "for", "parameters", "and", "return", "values", "have", "now", "be", "merge", "NUMBER", "Please", "have", "a", "look", "at", "the", "docs", "and", "let", "me", "know", "what", "you", "think", "danielgtaylor", "had", "a", "look", "much", "clearer", "thanks", "for", "update", "me", "that", "it", "was", "there", "NUMBER", "Recently", "I", "notice", "that", "when", "I", "go", "view", "my", "cognito", "pools", "in", "the", "console", "I", "m", "prompted", "to", "set", "the", "roles", "NUMBER", "Previously", "they", "were", "set", "or", "so", "I", "thought", "via", "the", "iam", "call", "to", "set", "them", "up", "but", "apparently", "I", "was", "mistaken", "or", "things", "have", "change", "NUMBER", "I", "notice", "there", "s", "a", "new", "API", "LINK", "_SetIdentityPoolRoles", "NUMBER", "html", "This", "API", "appears", "to", "not", "be", "support", "by", "boto", "NUMBER", "yet", "NUMBER", "Can", "you", "please", "add", "it", "Regard", "jan", "Hm", "NUMBER", "Perhaps", "the", "call", "be", "there", "but", "not", "documented", "on", "readthedocs", "NUMBER", "org", "yet", "I", "m", "get", "an", "error", "now", "I", "ll", "have", "to", "figure", "out", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "NotAuthorizedException", "when", "calling", "the", "SetIdentityPoolRoles", "operation", "Access", "to", "Role", "ZZZZZ", "be", "forbidden", "NUMBER", "Things", "just", "keep", "get", "weirder", "NUMBER", "I", "upgrade", "my", "install", "pip", "install", "U", "boto", "NUMBER", "and", "now", "I", "get", "AttributeError", "cognito", "identity", "object", "has", "no", "attribute", "set_identity_pool_roles", "When", "I", "upgrade", "botocore", "I", "get", "jmespath", "NUMBER", "exception", "NUMBER", "ParseError", "Invalid", "token", "NUMBER", "Parse", "error", "at", "column", "NUMBER", "near", "token", "CURRENT", "for", "expression", "Not", "sure", "this", "be", "the", "right", "place", "to", "ask", "but", "I", "m", "also", "not", "sure", "WHERE", "to", "ask", "this", "NUMBER", "I", "m", "now", "get", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "NotAuthorizedException", "when", "calling", "the", "SetIdentityPoolRoles", "operation", "Access", "to", "Role", "SomeRoleName", "be", "forbidden", "NUMBER", "I", "created", "the", "role", "just", "a", "few", "lines", "previous", "in", "the", "python", "script", "use", "iam", "session", "NUMBER", "client", "iam", "iam", "NUMBER", "create_role", "NUMBER", "and", "now", "trying", "to", "call", "cognito", "NUMBER", "cognito", "NUMBER", "set_identity_pool_roles", "NUMBER", "where", "cognito", "session", "NUMBER", "client", "cognito", "identity", "region_name", "us", "east", "NUMBER", "Am", "I", "doing", "something", "wrong", "Seems", "the", "same", "credentials", "that", "created", "the", "role", "should", "be", "able", "to", "reference", "it", "NUMBER", "Any", "ideas", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "d", "NUMBER", "aeec", "NUMBER", "f", "NUMBER", "f", "NUMBER", "cdc", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "cc", "on", "plural", "refs", "into", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ff", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "cf", "NUMBER", "fa", "NUMBER", "dbca", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "on", "resource", "model", "update", "into", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "on", "develop", "NUMBER", "It", "looks", "good", "to", "me", "NUMBER", "ship", "Most", "of", "my", "comments", "were", "minor", "question", "and", "comments", "on", "style", "and", "test", "NUMBER", "Overall", "looks", "good", "NUMBER", "Just", "had", "a", "couple", "question", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "on", "resource", "model", "update", "into", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "on", "develop", "NUMBER", "Any", "ideas", "on", "the", "coverage", "drop", "I", "m", "having", "trouble", "with", "completing", "a", "multipart", "upload", "given", "the", "following", "test", "code", "mp", "s", "NUMBER", "create_multipart_upload", "Bucket", "datalake", "NUMBER", "primary", "Key", "test", "NUMBER", "uid", "mp", "UploadId", "p", "NUMBER", "s", "NUMBER", "upload_part", "Bucket", "datalake", "NUMBER", "primary", "Key", "test", "NUMBER", "PartNumber", "NUMBER", "UploadId", "uid", "Body", "part_", "NUMBER", "s", "NUMBER", "complete_multipart_upload", "Bucket", "datalake", "NUMBER", "primary", "Key", "test", "NUMBER", "UploadId", "uid", "MultipartUpload", "I", "don", "t", "know", "what", "I", "m", "supposed", "to", "be", "setting", "MultipartUpload", "to", "and", "can", "t", "work", "it", "out", "in", "the", "docs", "NUMBER", "I", "see", "it", "needs", "to", "be", "a", "dict", "but", "not", "sure", "what", "it", "should", "contain", "NUMBER", "Without", "it", "I", "get", "the", "error", "ClientError", "An", "error", "occur", "InvalidRequest", "when", "calling", "the", "CompleteMultipartUpload", "operation", "You", "must", "specify", "at", "least", "one", "part", "danielgtaylor", "thanks", "thats", "much", "better", "NUMBER", "I", "d", "seen", "from", "the", "API", "docs", "this", "was", "the", "general", "form", "but", "wasn", "t", "completely", "clear", "NUMBER", "If", "the", "documentation", "could", "just", "detail", "the", "structure", "of", "dict", "that", "would", "probably", "have", "be", "enough", "NUMBER", "What", "be", "the", "ETag", "the", "dict", "part", "be", "not", "defined", "in", "this", "example", "NUMBER", "ETag", "be", "part", "of", "the", "response", "of", "method", "s", "NUMBER", "upload_part", "NUMBER", "See", "the", "response", "structure", "in", "the", "doc", "LINK", "S", "NUMBER", "Client", "NUMBER", "upload_part", "I", "guess", "the", "typo", "in", "the", "example", "be", "confusing", "you", "NUMBER", "part", "should", "be", "renamed", "to", "part", "NUMBER", "part_info", "Parts", "PartNumber", "NUMBER", "ETag", "part", "NUMBER", "ETag", "I", "get", "a", "SignatureDoesNotMatch", "error", "when", "trying", "to", "put", "an", "object", "without", "specify", "the", "content", "type", "NUMBER", "After", "turning", "on", "logging", "and", "looking", "at", "the", "raw", "Message", "prop", "in", "the", "response", "I", "saw", "that", "S", "NUMBER", "was", "expecting", "the", "client", "to", "sign", "PUT", "napplication", "x", "www", "form", "urlencoded", "n", "NUMBER", "but", "botocore", "was", "signing", "PUT", "n", "n", "NUMBER", "NUMBER", "Once", "I", "specified", "any", "content", "type", "the", "client", "was", "able", "to", "sign", "the", "string", "correctly", "put", "the", "object", "NUMBER", "Using", "boto", "NUMBER", "w", "botocore", "NUMBER", "Sorry", "I", "was", "irresponsible", "in", "not", "responding", "to", "this", "NUMBER", "I", "m", "run", "into", "issue", "trying", "to", "run", "this", "through", "NUMBER", "as", "report", "in", "another", "issue", "but", "it", "appears", "this", "problem", "do", "exist", "in", "at", "least", "NUMBER", "still", "NUMBER", "This", "be", "from", "the", "boto", "NUMBER", "log", "output", "in", "that", "version", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "botocore", "NUMBER", "auth", "StringToSign", "PUT", "XlMJyebV", "NUMBER", "YFc", "NUMBER", "xs", "NUMBER", "nf", "NUMBER", "cg", "Fri", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "my", "bucket", "my", "key", "If", "when", "I", "get", "NUMBER", "work", "I", "ll", "report", "back", "again", "either", "way", "NUMBER", "This", "be", "relate", "to", "boto", "botocore", "NUMBER", "which", "contains", "more", "background", "information", "NUMBER", "According", "to", "LINK", "and", "LINK", "the", "GenerateShippingLabel", "API", "call", "be", "miss", "NUMBER", "It", "be", "also", "miss", "in", "botocore", "as", "mention", "above", "NUMBER", "It", "be", "also", "miss", "from", "AWS", "CLI", "v", "NUMBER", "importexport", "NUMBER", "generate_shipping_label", "be", "miss", "python", "In", "NUMBER", "importexport", "boto", "NUMBER", "client", "importexport", "In", "NUMBER", "importexport", "NUMBER", "importexport", "NUMBER", "can_paginate", "importexport", "NUMBER", "get_status", "importexport", "NUMBER", "cancel_job", "importexport", "NUMBER", "get_waiter", "importexport", "NUMBER", "clone_client", "importexport", "NUMBER", "list_jobs", "importexport", "NUMBER", "create_job", "importexport", "NUMBER", "update_job", "importexport", "NUMBER", "get_paginator", "importexport", "NUMBER", "waiter_names", "danielgtaylor", "thanks", "for", "the", "update", "NUMBER", "I", "look", "forward", "to", "this", "be", "resolve", "NUMBER", "Just", "to", "be", "clear", "this", "be", "a", "show", "stopper", "NUMBER", "I", "product", "be", "broken", "until", "this", "be", "fix", "NUMBER", "danielgtaylor", "NUMBER", "Thank", "you", "for", "this", "NUMBER", "You", "rock", "Keep", "up", "the", "great", "work", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ec", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "bfc", "NUMBER", "b", "NUMBER", "f", "NUMBER", "cba", "NUMBER", "d", "NUMBER", "f", "on", "meta", "object", "into", "bc", "NUMBER", "bbdd", "NUMBER", "bcc", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "ba", "on", "develop", "NUMBER", "Looks", "good", "just", "some", "small", "question", "on", "the", "ResourceMeta", "class", "itself", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "c", "NUMBER", "ecc", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "baeb", "NUMBER", "ac", "NUMBER", "f", "NUMBER", "f", "NUMBER", "on", "meta", "object", "into", "bc", "NUMBER", "bbdd", "NUMBER", "bcc", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "ba", "on", "develop", "NUMBER", "shipit", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "e", "NUMBER", "eba", "NUMBER", "dd", "NUMBER", "b", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "meta", "object", "into", "bc", "NUMBER", "bbdd", "NUMBER", "bcc", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "ba", "on", "develop", "NUMBER", "I", "add", "a", "section", "to", "the", "overview", "of", "both", "clients", "and", "resources", "about", "how", "to", "use", "waiters", "for", "each", "of", "them", "NUMBER", "cc", "danielgtaylor", "jamesls", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "f", "NUMBER", "aa", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "dcca", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "on", "kyleknap", "waiter", "top", "level", "docs", "into", "NUMBER", "d", "NUMBER", "fdacd", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "af", "NUMBER", "on", "boto", "develop", "NUMBER", "So", "for", "this", "PR", "I", "expose", "waiter", "actions", "for", "resources", "NUMBER", "For", "each", "waiter", "action", "the", "name", "was", "prepended", "with", "wait_until_", "NUMBER", "So", "for", "the", "EC", "NUMBER", "Instance", "resource", "definition", "it", "has", "waiter", "resource", "definitions", "Running", "Stopped", "and", "Terminated", "LINK", "NUMBER", "NUMBER", "NUMBER", "resources", "NUMBER", "json", "L", "NUMBER", "This", "gets", "translated", "to", "the", "methods", "wait_until_running", "wait_until_stopped", "and", "wait_until_terminated", "for", "the", "Instance", "resource", "NUMBER", "These", "methods", "will", "then", "make", "a", "wait", "call", "to", "the", "client", "s", "waiter", "method", "to", "actually", "perform", "the", "wait", "NUMBER", "cc", "danielgtaylor", "jamesls", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "dde", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fdbefd", "on", "kyleknap", "waiters", "into", "NUMBER", "b", "NUMBER", "f", "NUMBER", "efc", "NUMBER", "fcd", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "cdcdee", "NUMBER", "dd", "NUMBER", "ec", "NUMBER", "df", "NUMBER", "acb", "on", "remove", "six", "into", "NUMBER", "b", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "develop", "NUMBER", "ship", "because", "awscli", "requires", "six", "NUMBER", "and", "boto", "NUMBER", "works", "fine", "with", "it", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "a", "NUMBER", "b", "NUMBER", "bebfbe", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "on", "bosr", "six_dependency", "into", "NUMBER", "b", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "boto", "develop", "NUMBER", "Perfect", "NUMBER", "Thanks", "Romain", "On", "NUMBER", "Dec", "NUMBER", "at", "NUMBER", "NUMBER", "Daniel", "G", "NUMBER", "Taylor", "notifications", "github", "NUMBER", "com", "write", "bosr", "thanks", "for", "the", "pull", "request", "I", "ve", "looked", "into", "this", "a", "bit", "more", "and", "it", "turns", "out", "I", "m", "not", "even", "use", "six", "anymore", "since", "moving", "to", "use", "Botocore", "for", "data", "loading", "in", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "I", "think", "that", "I", "m", "just", "going", "to", "remove", "the", "dependency", "on", "six", "completely", "and", "if", "we", "need", "it", "in", "the", "future", "we", "can", "expose", "it", "via", "the", "version", "that", "ships", "with", "Botocore", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "Hi", "I", "be", "trying", "to", "encrypt", "on", "one", "instance", "and", "decrypt", "on", "another", "however", "it", "fail", "to", "decrypt", "on", "the", "second", "instance", "NUMBER", "I", "be", "use", "the", "following", "two", "function", "def", "encryptFile", "self", "with", "open", "self", "NUMBER", "file", "NUMBER", "enc", "rb", "as", "input_file", "encoded_file", "base", "NUMBER", "b", "NUMBER", "encode", "input_file", "NUMBER", "read", "check", "if", "we", "be", "not", "trying", "to", "encrypt", "larger", "than", "NUMBER", "kb", "if", "sys", "NUMBER", "getsizeof", "encoded_file", "NUMBER", "print", "File", "s", "too", "large", "to", "encrypt", "file", "NUMBER", "enc", "sys", "NUMBER", "exit", "NUMBER", "encryption", "self", "NUMBER", "kms", "boto", "NUMBER", "client", "kms", "e", "self", "NUMBER", "kms", "NUMBER", "encrypt", "KeyId", "self", "NUMBER", "keyid", "Plaintext", "encoded_file", "self", "NUMBER", "objectBody", "base", "NUMBER", "b", "NUMBER", "encode", "e", "CiphertextBlob", "NUMBER", "decode", "utf", "NUMBER", "def", "decryptFile", "self", "enc_string", "enc_string", "self", "NUMBER", "encrypted_content", "self", "NUMBER", "kms", "boto", "NUMBER", "client", "kms", "print", "enc_string", "decrypt", "decrypted_file", "self", "NUMBER", "kms", "NUMBER", "decrypt", "CiphertextBlob", "enc_string", "return", "decrypted_file", "Plaintext", "If", "I", "run", "those", "on", "instance", "NUMBER", "it", "works", "correctly", "however", "if", "I", "encrypt", "on", "instance", "NUMBER", "and", "decrypt", "on", "instance", "NUMBER", "I", "get", "kms", "boto", "NUMBER", "client", "kms", "kms", "NUMBER", "decrypt", "CiphertextBlob", "CiDLU", "NUMBER", "Ooom", "NUMBER", "Wauq", "kF", "NUMBER", "F", "NUMBER", "cMkyN", "tO", "NUMBER", "IzD", "NUMBER", "aTn", "NUMBER", "RUeynBhKJAQEBAgB", "NUMBER", "y", "NUMBER", "NDqKJtlmrqvpBdBfXDJMjf", "NUMBER", "TudCMw", "Gk", "NUMBER", "EVHspwYAAABgMF", "NUMBER", "GCSqGSIb", "NUMBER", "DQEHBqBRME", "NUMBER", "CAQAwSgYJKoZIhvcNAQcBMB", "NUMBER", "GCWCGSAFlAwQBLjARBAzVBeU", "NUMBER", "nmuhfVzUoUUCARCAHRma", "bCWarfMFZJNqkfmcN", "NUMBER", "AVTacxPCiu", "NUMBER", "lNi", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "InvalidCiphertextException", "when", "calling", "the", "Decrypt", "operation", "None", "Both", "instances", "use", "the", "same", "IAM", "role", "NUMBER", "Is", "this", "a", "bug", "or", "I", "be", "miss", "the", "obvious", "Thanks", "Thanks", "danielgtaylor", "Working", "perfectly", "now", "NUMBER", "I", "find", "a", "bug", "on", "my", "end", "with", "base", "NUMBER", "encoding", "NUMBER", "I", "m", "use", "the", "code", "see", "below", "to", "upload", "and", "encrypt", "a", "file", "in", "s", "NUMBER", "use", "a", "valid", "keyAlias", "based", "on", "the", "new", "KMS", "features", "It", "fail", "with", "the", "error", "Requests", "specify", "Server", "Side", "Encryption", "with", "AWS", "KMS", "managed", "keys", "require", "AWS", "Signature", "Version", "NUMBER", "I", "have", "specified", "s", "NUMBER", "use", "sigv", "NUMBER", "True", "in", "my", "NUMBER", "aws", "config", "file", "NUMBER", "I", "can", "get", "this", "functionality", "to", "work", "via", "the", "Java", "SDK", "NUMBER", "s", "NUMBER", "boto", "NUMBER", "resource", "s", "NUMBER", "data", "open", "fileName", "rb", "s", "NUMBER", "Bucket", "bucketName", "NUMBER", "put_object", "Key", "keyName", "Body", "data", "ServerSideEncryption", "aws", "kms", "SSEKMSKeyId", "keyAlias", "I", "be", "experience", "this", "issue", "as", "well", "NUMBER", "After", "looking", "into", "this", "a", "bit", "it", "looks", "like", "botocore", "NUMBER", "handlers", "NUMBER", "signature_overrides", "might", "be", "a", "no", "op", "Thank", "you", "for", "the", "update", "NUMBER", "be", "there", "a", "work", "around", "to", "this", "problem", "I", "believe", "with", "the", "java", "SDK", "you", "can", "explicitly", "set", "endpoint", "and", "region", "to", "get", "it", "work", "NUMBER", "Anything", "with", "boto", "NUMBER", "Great", "NUMBER", "Thanks", "for", "the", "update", "Thanks", "for", "all", "of", "your", "work", "danielgtaylor", "I", "ve", "be", "looking", "at", "the", "Java", "SDK", "for", "client", "side", "encryption", "up", "to", "AWS", "use", "KMS", "keys", "and", "have", "use", "KMSEncryptionMaterialsProvider", "to", "do", "so", "as", "per", "this", "blog", "LINK", "Encryption", "with", "AWS", "Key", "Management", "Service", "Is", "there", "an", "equivalent", "for", "boto", "NUMBER", "to", "client", "side", "encrypt", "or", "be", "it", "a", "case", "of", "generating", "a", "key", "encrypting", "with", "that", "key", "then", "push", "up", "to", "S", "NUMBER", "Thanks", "Owen", "Hi", "I", "ve", "be", "facing", "somehow", "the", "same", "issue", "and", "I", "find", "a", "lib", "that", "provides", "compatibility", "with", "the", "Ruby", "SDK", "LINK", "encryption", "I", "ve", "not", "be", "able", "to", "test", "thoroughly", "but", "I", "believe", "it", "could", "help", "NUMBER", "I", "m", "on", "a", "project", "that", "requires", "client", "side", "encryption", "but", "be", "unfortunately", "build", "around", "the", "original", "boto", "NUMBER", "I", "ll", "subscribe", "this", "issue", "and", "if", "I", "come", "to", "use", "boto", "NUMBER", "for", "this", "purpose", "I", "d", "be", "glad", "to", "help", "NUMBER", "Seems", "like", "this", "should", "be", "pretty", "doable", "NUMBER", "Started", "work", "on", "it", "for", "client", "side", "with", "AWS", "KMS", "but", "run", "into", "some", "issue", "with", "decrypting", "the", "envelope", "key", "NUMBER", "Will", "update", "once", "it", "be", "work", "NUMBER", "Here", "be", "current", "code", "snippet", "import", "base", "NUMBER", "from", "Crypto", "NUMBER", "Cipher", "import", "AES", "encrypted", "bucket", "NUMBER", "get_key", "object_key", "metadata", "encrypted", "NUMBER", "metadata", "envelope_key", "base", "NUMBER", "b", "NUMBER", "decode", "metadata", "x", "amz", "key", "v", "NUMBER", "envelope_iv", "base", "NUMBER", "b", "NUMBER", "decode", "metadata", "x", "amz", "iv", "encryption_key", "kms", "NUMBER", "decrypt", "CiphertextBlob", "envelope_key", "Got", "it", "work", "with", "KMS", "CMK", "key", "NUMBER", "Works", "with", "client", "side", "sdk", "for", "ruby", "and", "java", "NUMBER", "Used", "the", "following", "link", "as", "a", "starting", "point", "LINK", "to", "decrypt", "aws", "ruby", "client", "side", "encryption", "in", "python", "Same", "code", "as", "previous", "comment", "for", "decrypting", "envelope", "key", "with", "one", "tweak", "python", "import", "base", "NUMBER", "import", "json", "from", "Crypto", "NUMBER", "Cipher", "import", "AES", "encrypted", "bucket", "NUMBER", "get_key", "object_key", "metadata", "encrypted", "NUMBER", "metadata", "envelope_key", "base", "NUMBER", "b", "NUMBER", "decode", "metadata", "x", "amz", "key", "v", "NUMBER", "envelope_iv", "base", "NUMBER", "b", "NUMBER", "decode", "metadata", "x", "amz", "iv", "encrypt_ctx", "json", "NUMBER", "loads", "metadata", "x", "amz", "matdesc", "encryption_key", "kms", "NUMBER", "decrypt", "CiphertextBlob", "envelope_key", "EncryptionContext", "encrypt_ctx", "I", "m", "trying", "to", "do", "the", "kms", "NUMBER", "decrypt", "thing", "and", "fail", "NUMBER", "ty", "dev", "do", "the", "above", "work", "for", "you", "LINK", "when", "calling", "kms", "decrypt", "with", "s", "NUMBER", "metadata", "Hey", "Tedder", "Here", "be", "the", "code", "I", "get", "work", "to", "decrypt", "Java", "KMS", "client", "side", "uploads", "NUMBER", "Its", "hacky", "but", "was", "enough", "to", "prove", "out", "the", "solution", "NUMBER", "I", "did", "the", "encryption", "side", "for", "both", "python", "and", "dotnet", "as", "well", "if", "needed", "NUMBER", "from", "__future__", "import", "print_function", "import", "boto", "import", "boto", "NUMBER", "import", "tempfile", "import", "base", "NUMBER", "import", "json", "import", "Crypto", "from", "Crypto", "NUMBER", "Cipher", "import", "AES", "from", "Crypto", "import", "Random", "import", "os", "random", "struct", "decrypt_file", "method", "from", "LINK", "encryption", "of", "file", "in", "python", "with", "pycrypto", "def", "decrypt_file", "key", "in_filename", "iv", "original_size", "out_filename", "None", "chunksize", "NUMBER", "NUMBER", "if", "not", "out_filename", "out_filename", "tempfile", "NUMBER", "png", "with", "open", "in_filename", "rb", "as", "infile", "decryptor", "AES", "NUMBER", "new", "key", "AES", "NUMBER", "MODE_CBC", "iv", "with", "open", "out_filename", "wb", "as", "outfile", "while", "True", "chunk", "infile", "NUMBER", "read", "chunksize", "if", "len", "chunk", "NUMBER", "break", "outfile", "NUMBER", "write", "decryptor", "NUMBER", "decrypt", "chunk", "outfile", "NUMBER", "truncate", "original_size", "REGION", "BUCKET", "s", "NUMBER", "_key", "NUMBER", "png", "filename", "NUMBER", "png", "s", "NUMBER", "boto", "NUMBER", "client", "s", "NUMBER", "kms", "boto", "NUMBER", "client", "kms", "download", "encrypted", "object", "from", "S", "NUMBER", "encrypted", "s", "NUMBER", "get_object", "Bucket", "BUCKET", "Key", "s", "NUMBER", "_key", "get", "object", "metadata", "from", "encrypted", "object", "and", "decode", "base", "NUMBER", "strings", "metadata", "encrypted", "Metadata", "envelope_key", "base", "NUMBER", "b", "NUMBER", "decode", "metadata", "x", "amz", "key", "v", "NUMBER", "envelope_iv", "base", "NUMBER", "b", "NUMBER", "decode", "metadata", "x", "amz", "iv", "encrypt_ctx", "json", "NUMBER", "loads", "metadata", "x", "amz", "matdesc", "original_size", "metadata", "x", "amz", "unencrypted", "content", "length", "use", "AWS", "KMS", "to", "decrtyp", "envelop", "key", "envelop", "key", "be", "use", "to", "encrypt", "object", "data", "envelope_key_decrypt", "kms", "NUMBER", "decrypt", "CiphertextBlob", "envelope_key", "EncryptionContext", "encrypt_ctx", "print", "envelope_key_decrypt", "download", "encrypted", "object", "directly", "to", "file", "could", "also", "just", "write", "exist", "encrypted", "object", "to", "file", "s", "NUMBER", "download_file", "BUCKET", "s", "NUMBER", "_key", "filename", "decrypt", "file", "decrypt_file", "envelope_key_decrypt", "Plaintext", "filename", "envelope_iv", "int", "original_size", "Brilliant", "NUMBER", "I", "just", "rewrote", "my", "code", "slightly", "and", "have", "it", "work", "NUMBER", "The", "main", "issue", "was", "the", "EncryptionContext", "both", "what", "it", "needed", "to", "be", "and", "that", "it", "needed", "to", "be", "json", "NUMBER", "parsed", "NUMBER", "It", "also", "means", "s", "NUMBER", "encryption", "be", "unnecessary", "NUMBER", "If", "you", "use", "download_file", "in", "your", "script", "I", "d", "suggest", "change", "get_object", "to", "head_object", "since", "it", "isn", "t", "necessary", "NUMBER", "Okay", "I", "just", "reversed", "it", "this", "code", "do", "a", "put", "NUMBER", "It", "s", "my", "proof", "of", "concept", "code", "so", "it", "needs", "some", "refactoring", "and", "such", "NUMBER", "I", "verify", "it", "works", "by", "pulling", "an", "object", "through", "the", "Java", "SDK", "but", "please", "let", "me", "know", "if", "you", "test", "it", "independently", "NUMBER", "LINK", "client", "side", "encryption", "blob", "master", "put", "NUMBER", "py", "Fixed", "an", "edge", "case", "with", "padding", "in", "my", "put", "NUMBER", "py", "so", "make", "sure", "to", "update", "if", "you", "happen", "to", "have", "grabbed", "my", "older", "version", "NUMBER", "I", "d", "love", "to", "inject", "this", "into", "s", "NUMBER", "similar", "to", "how", "s", "NUMBER", "transfer", "works", "but", "I", "need", "someone", "more", "fluent", "in", "boto", "NUMBER", "Checking", "in", "on", "this", "issue", "NUMBER", "I", "haven", "t", "seen", "traffic", "on", "it", "for", "a", "while", "NUMBER", "Does", "it", "make", "sense", "to", "revive", "it", "If", "I", "put", "together", "a", "PR", "that", "provides", "both", "AES", "CBC", "and", "AES", "GCM", "client", "side", "encryption", "would", "there", "be", "appetite", "to", "add", "it", "to", "the", "library", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "on", "docs", "kwargs", "into", "d", "NUMBER", "affc", "NUMBER", "ec", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ffcf", "NUMBER", "ab", "NUMBER", "df", "NUMBER", "on", "develop", "NUMBER", "danielgtaylor", "This", "makes", "it", "much", "clearer", "that", "first", "arg", "be", "keyword", "NUMBER", "Looks", "good", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "ec", "NUMBER", "b", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "bdb", "NUMBER", "bdae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "d", "NUMBER", "on", "integ", "into", "d", "NUMBER", "affc", "NUMBER", "ec", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ffcf", "NUMBER", "ab", "NUMBER", "df", "NUMBER", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "Just", "had", "that", "comment", "about", "explicit", "setting", "the", "region", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "ca", "NUMBER", "a", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "aef", "NUMBER", "de", "NUMBER", "on", "integ", "into", "d", "NUMBER", "affc", "NUMBER", "ec", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ffcf", "NUMBER", "ab", "NUMBER", "df", "NUMBER", "on", "develop", "NUMBER", "When", "I", "try", "to", "call", "generate_data_key", "on", "a", "KMS", "client", "with", "the", "following", "code", "I", "get", "and", "error", "saying", "I", "ve", "provide", "too", "many", "parameters", "to", "_api_call", "import", "boto", "NUMBER", "kms", "boto", "NUMBER", "client", "kms", "datakey", "kms", "NUMBER", "generate_data_key", "my_data_key_alias", "The", "same", "error", "occur", "when", "trying", "other", "calls", "such", "as", "kms", "NUMBER", "get_key_policy", "my_data_key_alias", "default", "danielgtaylor", "I", "was", "use", "that", "documentation", "and", "I", "took", "it", "to", "mean", "that", "all", "argument", "other", "than", "the", "KeyId", "needed", "to", "be", "named", "NUMBER", "So", "generally", "the", "documentation", "was", "clear", "just", "that", "first", "parameter", "that", "I", "miss", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "b", "NUMBER", "faabf", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "a", "on", "model", "version", "update", "into", "ab", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ce", "NUMBER", "df", "NUMBER", "ff", "NUMBER", "fc", "NUMBER", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "ship", "As", "a", "future", "PR", "we", "should", "have", "integration", "test", "that", "catch", "these", "type", "of", "regressions", "where", "we", "actually", "create", "resources", "for", "specific", "services", "like", "s", "NUMBER", "and", "sqs", "and", "performs", "some", "actions", "use", "these", "resources", "NUMBER", "import", "boto", "NUMBER", "queue_url", "sqs", "boto", "NUMBER", "resource", "sqs", "queue", "sqs", "NUMBER", "Queue", "queue_url", "message", "queue", "NUMBER", "receive_messages", "msg", "message", "NUMBER", "print", "msg", "NUMBER", "body", "It", "gives", "File", "line", "NUMBER", "in", "perform_action", "print", "msg", "NUMBER", "body", "File", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "property_loader", "NUMBER", "has", "no", "load", "method", "NUMBER", "format", "self", "NUMBER", "__class__", "NUMBER", "__name__", "ResourceLoadException", "sqs", "NUMBER", "Message", "has", "no", "load", "method", "It", "worked", "in", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "cfa", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "bf", "NUMBER", "fc", "NUMBER", "on", "batch", "actions", "into", "ab", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ce", "NUMBER", "df", "NUMBER", "ff", "NUMBER", "fc", "NUMBER", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "ship", "You", "may", "want", "to", "add", "a", "test", "that", "do", "a", "Collection", "NUMBER", "page_size", "NUMBER", "pages", "to", "ensure", "that", "you", "never", "run", "into", "issue", "for", "that", "case", "NUMBER", "I", "would", "picture", "a", "test", "similar", "to", "the", "test", "you", "did", "for", "limit", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "NUMBER", "ab", "NUMBER", "ab", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "on", "batch", "actions", "into", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "db", "NUMBER", "bb", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "fff", "NUMBER", "on", "develop", "NUMBER", "Thanks", "ship", "kms", "decrypt", "throw", "this", "error", "every", "time", "UnicodeDecodeError", "utf", "NUMBER", "codec", "can", "t", "decode", "byte", "NUMBER", "xf", "NUMBER", "in", "position", "NUMBER", "invalid", "continuation", "byte", "Repro", "steps", "import", "boto", "NUMBER", "kms", "boto", "NUMBER", "client", "kms", "result", "kms", "NUMBER", "encrypt", "KeyId", "some_key_id_redacted", "Plaintext", "my", "name", "be", "bob", "kms", "NUMBER", "decrypt", "CiphertextBlob", "result", "CiphertextBlob", "May", "be", "relate", "to", "this", "issue", "LINK", "cli", "issue", "NUMBER", "I", "can", "confirm", "the", "bug", "on", "my", "end", "too", "NUMBER", "The", "workaround", "worked", "for", "me", "but", "I", "had", "to", "base", "NUMBER", "encode", "the", "Plaintext", "as", "well", "NUMBER", "python", "encrypted", "kms", "NUMBER", "encrypt", "KeyId", "Plaintext", "Test", "decrypted", "kms", "NUMBER", "decrypt", "CiphertextBlob", "base", "NUMBER", "b", "NUMBER", "encode", "encrypted", "CiphertextBlob", "NUMBER", "decode", "utf", "NUMBER", "base", "NUMBER", "b", "NUMBER", "encode", "decrypted", "Plaintext", "NUMBER", "decode", "utf", "NUMBER", "danielgtaylor", "This", "works", "for", "me", "encrypt", "kms", "boto", "NUMBER", "client", "kms", "e", "kms", "NUMBER", "encrypt", "KeyId", "self", "NUMBER", "keyid", "EncryptionContext", "Plaintext", "encoded_file", "self", "NUMBER", "objectBody", "base", "NUMBER", "b", "NUMBER", "encode", "e", "CiphertextBlob", "NUMBER", "decode", "utf", "NUMBER", "decrypt", "kms", "boto", "NUMBER", "client", "kms", "decrypted_file", "kms", "NUMBER", "decrypt", "CiphertextBlob", "enc_string", "EncryptionContext", "I", "can", "t", "seem", "to", "figure", "out", "how", "to", "make", "a", "cognito", "identity", "NUMBER", "get_id", "NUMBER", "call", "NUMBER", "This", "call", "do", "not", "require", "an", "access", "key", "or", "secret", "NUMBER", "Is", "there", "a", "way", "to", "do", "this", "Or", "be", "this", "out", "of", "scope", "for", "boto", "NUMBER", "Updated", "requirements", "NUMBER", "txt", "to", "use", "the", "head", "of", "the", "develop", "branch", "for", "package", "like", "botocore", "NUMBER", "This", "will", "help", "us", "better", "monitor", "if", "change", "in", "botocore", "break", "boto", "NUMBER", "and", "ensures", "that", "we", "do", "not", "have", "to", "update", "this", "file", "with", "every", "release", "of", "botocore", "NUMBER", "cc", "danielgtaylor", "jamesls", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "bdbf", "NUMBER", "a", "NUMBER", "cb", "NUMBER", "ddfb", "NUMBER", "afa", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "on", "kyleknap", "update", "req", "into", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "eca", "NUMBER", "caf", "NUMBER", "ce", "NUMBER", "on", "boto", "develop", "NUMBER", "shipit", "NUMBER", "to", "this", "NUMBER", "This", "be", "what", "the", "AWS", "CLI", "do", "to", "ensure", "that", "we", "re", "aware", "of", "any", "issue", "from", "the", "develop", "branch", "of", "botocore", "potentially", "breaking", "the", "AWS", "CLI", "change", "NUMBER", "In", "order", "to", "contribute", "to", "the", "project", "get", "a", "better", "understanding", "of", "how", "Boto", "NUMBER", "and", "Botocore", "be", "interconnected", "and", "get", "a", "better", "understanding", "of", "how", "this", "code", "generation", "works", "I", "have", "attempted", "to", "add", "a", "resource", "definition", "for", "Route", "NUMBER", "I", "do", "however", "hit", "a", "problem", "when", "I", "list", "the", "hosted", "zones", "and", "then", "try", "to", "do", "something", "with", "them", "NUMBER", "My", "current", "JSON", "file", "for", "Route", "NUMBER", "can", "be", "find", "here", "LINK", "and", "an", "example", "of", "the", "problem", "can", "be", "seen", "here", "import", "boto", "NUMBER", "route", "NUMBER", "boto", "NUMBER", "resource", "route", "NUMBER", "zones", "list", "route", "NUMBER", "hosted_zones", "NUMBER", "all", "zones", "route", "NUMBER", "HostedZone", "id", "hostedzone", "Z", "NUMBER", "HVO", "NUMBER", "WA", "NUMBER", "FVVP", "NUMBER", "zones", "NUMBER", "NUMBER", "id", "hostedzone", "Z", "NUMBER", "HVO", "NUMBER", "WA", "NUMBER", "FVVP", "NUMBER", "zones", "NUMBER", "NUMBER", "delete", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "Users", "jeppe", "NUMBER", "pyenv", "version", "boto", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "factory", "NUMBER", "py", "line", "NUMBER", "in", "do_action", "response", "action", "self", "args", "kwargs", "File", "Users", "jeppe", "NUMBER", "pyenv", "version", "boto", "lib", "python", "NUMBER", "site", "package", "boto", "NUMBER", "resources", "action", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "response", "getattr", "parent", "NUMBER", "meta", "client", "operation_name", "params", "File", "Users", "jeppe", "NUMBER", "pyenv", "version", "boto", "lib", "python", "NUMBER", "site", "package", "botocore", "client", "NUMBER", "py", "line", "NUMBER", "in", "_api_call", "raise", "ClientError", "parsed_response", "operation_name", "botocore", "NUMBER", "exception", "NUMBER", "ClientError", "An", "error", "occur", "NUMBER", "when", "calling", "the", "DeleteHostedZone", "operation", "Bad", "Request", "As", "the", "output", "shows", "the", "ID", "I", "get", "back", "for", "the", "zone", "in", "the", "listing", "be", "hostedzone", "Z", "NUMBER", "HVO", "NUMBER", "WA", "NUMBER", "FVVP", "NUMBER", "but", "the", "API", "for", "deleting", "a", "hosted", "zone", "LINK", "_DeleteHostedZone", "NUMBER", "html", "expects", "to", "be", "call", "with", "an", "ID", "such", "as", "Z", "NUMBER", "HVO", "NUMBER", "WA", "NUMBER", "FVVP", "NUMBER", "NUMBER", "I", "don", "t", "see", "a", "way", "in", "the", "resource", "file", "for", "the", "other", "products", "of", "how", "this", "string", "manipulation", "can", "be", "do", "so", "I", "wonder", "if", "that", "might", "not", "be", "a", "topic", "that", "has", "be", "address", "yet", "It", "would", "of", "course", "have", "be", "easier", "if", "the", "Route", "NUMBER", "API", "actually", "returned", "the", "ID", "in", "the", "same", "format", "as", "it", "expects", "to", "get", "it", "back", "in", "but", "that", "might", "not", "be", "easy", "to", "get", "Amazon", "to", "change", "that", "or", "add", "the", "bare", "ID", "to", "a", "new", "field", "in", "the", "output", "NUMBER", "Yeah", "that", "be", "an", "annoying", "aspect", "of", "the", "Route", "NUMBER", "API", "NUMBER", "The", "AWSCLI", "has", "a", "customization", "that", "allows", "the", "user", "to", "pass", "in", "either", "the", "full", "ID", "returned", "in", "the", "listing", "or", "just", "the", "ID", "itself", "NUMBER", "I", "definitely", "think", "this", "be", "an", "ugly", "detail", "that", "should", "be", "hidden", "by", "the", "boto", "NUMBER", "library", "NUMBER", "We", "should", "be", "able", "to", "move", "that", "AWS", "CLI", "customization", "down", "into", "the", "botocore", "layer", "so", "both", "AWS", "CLI", "and", "boto", "NUMBER", "will", "have", "this", "customization", "NUMBER", "Thanks", "for", "the", "responses", "and", "thanks", "for", "the", "workaround", "NUMBER", "Would", "you", "like", "me", "to", "create", "an", "issue", "on", "the", "Botocore", "project", "for", "this", "as", "I", "couldn", "t", "see", "any", "obvious", "place", "to", "add", "such", "a", "customization", "like", "AWSCLI", "has", "It", "looks", "like", "the", "issue", "have", "not", "be", "fully", "solve", "yet", "or", "at", "least", "not", "for", "any", "function", "use", "these", "IDs", "NUMBER", "I", "went", "into", "the", "same", "kind", "of", "problem", "by", "use", "the", "function", "change_tags_for_resource", "for", "example", "which", "require", "the", "ResourceId", "and", "resulted", "in", "the", "same", "issue", "NUMBER", "The", "same", "workaround", "of", "the", "split", "could", "be", "use", "but", "wouldn", "t", "it", "be", "better", "to", "have", "both", "IDs", "form", "handle", "in", "every", "function", "requiring", "it", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ae", "NUMBER", "da", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "on", "model", "update", "into", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "eca", "NUMBER", "caf", "NUMBER", "ce", "NUMBER", "on", "develop", "NUMBER", "This", "looks", "good", "NUMBER", "I", "had", "a", "comment", "about", "the", "ItemWithParameters", "be", "a", "little", "vague", "for", "me", "NUMBER", "It", "was", "more", "of", "the", "Item", "part", "of", "the", "name", "that", "was", "vague", "to", "me", "NUMBER", "Otherwise", "ship", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "ef", "NUMBER", "dc", "NUMBER", "ce", "NUMBER", "acfe", "NUMBER", "e", "NUMBER", "e", "NUMBER", "on", "model", "update", "into", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "eca", "NUMBER", "caf", "NUMBER", "ce", "NUMBER", "on", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "a", "NUMBER", "adfa", "NUMBER", "cd", "NUMBER", "b", "NUMBER", "a", "on", "doc", "example", "into", "NUMBER", "f", "NUMBER", "aa", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "df", "NUMBER", "f", "NUMBER", "on", "develop", "NUMBER", "LGTM", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fba", "NUMBER", "ab", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "integ", "into", "NUMBER", "f", "NUMBER", "aa", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "df", "NUMBER", "f", "NUMBER", "on", "develop", "NUMBER", "That", "looks", "good", "NUMBER", "ship", "The", "one", "thing", "that", "may", "be", "sort", "of", "annoying", "be", "that", "the", "region", "map", "will", "have", "to", "be", "update", "occasionally", "if", "the", "service", "for", "that", "resource", "be", "not", "support", "in", "us", "west", "NUMBER", "when", "we", "add", "the", "resource", "model", "NUMBER", "Same", "can", "be", "said", "for", "the", "blacklisting", "of", "certain", "collection", "methods", "when", "we", "add", "update", "more", "resource", "models", "NUMBER", "Except", "for", "this", "we", "will", "have", "to", "manually", "run", "and", "pinpoint", "which", "collection", "methods", "be", "slow", "NUMBER", "Despite", "these", "comments", "I", "be", "not", "sure", "of", "a", "good", "way", "around", "them", "given", "we", "want", "these", "integration", "test", "to", "run", "fairly", "quickly", "NUMBER", "LINK", "I", "don", "t", "see", "elb", "mention", "anywhere", "in", "the", "repo", "NUMBER", "This", "fail", "elb", "boto", "NUMBER", "resource", "elb", "Are", "ELB", "s", "not", "support", "yet", "How", "were", "those", "docs", "build", "Clicking", "Edit", "on", "Github", "from", "the", "readthedocs", "page", "brings", "you", "to", "a", "NUMBER", "Thanks", "danielgtaylor", "I", "m", "excited", "for", "this", "project", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "a", "NUMBER", "fcb", "NUMBER", "b", "NUMBER", "a", "NUMBER", "dba", "NUMBER", "a", "NUMBER", "cb", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "deps", "into", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "ship", "shipit", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "be", "NUMBER", "db", "NUMBER", "e", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "bfa", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "useragent", "into", "NUMBER", "a", "NUMBER", "e", "NUMBER", "aaf", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "fde", "NUMBER", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "dba", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ad", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "fe", "NUMBER", "c", "on", "useragent", "into", "NUMBER", "a", "NUMBER", "e", "NUMBER", "aaf", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "fde", "NUMBER", "on", "develop", "NUMBER", "shipit", "Is", "there", "a", "simple", "way", "to", "use", "a", "non", "default", "profile", "by", "specify", "it", "s", "name", "Like", "on", "boto", "there", "be", "boto", "NUMBER", "connect_ec", "NUMBER", "profile_name", "dev", "profile", "I", "see", "that", "I", "can", "construct", "a", "session", "with", "credentials", "and", "region", "but", "I", "don", "t", "see", "an", "ability", "to", "just", "refer", "to", "the", "profile", "s", "name", "Nice", "NUMBER", "Botocore", "session", "seems", "like", "a", "good", "workaround", "for", "now", "NUMBER", "Great", "thanks", "NUMBER", "How", "do", "you", "get", "a", "list", "of", "available", "profiles", "revmischa", "You", "can", "look", "at", "your", "config", "file", "at", "NUMBER", "aws", "config", "or", "its", "corresponding", "NUMBER", "aws", "credentials", "That", "s", "a", "terrible", "answer", "revmischa", "This", "be", "what", "I", "was", "able", "to", "come", "up", "with", "NUMBER", "Should", "print", "out", "all", "available", "boto", "profiles", "NUMBER", "usr", "bin", "env", "python", "import", "boto", "NUMBER", "session", "boto", "NUMBER", "Session", "print", "session", "NUMBER", "available_profiles", "This", "do", "not", "affect", "the", "implementation", "code", "ramen", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "fbf", "NUMBER", "e", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "dd", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "on", "nishigori", "doc", "typo", "into", "on", "boto", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "df", "NUMBER", "fda", "NUMBER", "a", "NUMBER", "a", "NUMBER", "ef", "NUMBER", "ad", "NUMBER", "edf", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "reverse", "jmespath", "into", "NUMBER", "aa", "NUMBER", "de", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "on", "develop", "NUMBER", "LGTM", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "ad", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "db", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "on", "reverse", "jmespath", "into", "NUMBER", "aa", "NUMBER", "de", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "on", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "a", "NUMBER", "a", "NUMBER", "bee", "NUMBER", "baf", "NUMBER", "f", "NUMBER", "dbae", "NUMBER", "cf", "NUMBER", "b", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "on", "docs", "refs", "into", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "ceaedeec", "NUMBER", "b", "NUMBER", "on", "develop", "NUMBER", "I", "build", "the", "docs", "locally", "as", "well", "NUMBER", "Looks", "good", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "ed", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ee", "NUMBER", "b", "NUMBER", "e", "NUMBER", "aed", "NUMBER", "d", "NUMBER", "f", "NUMBER", "df", "on", "collisions", "into", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "ceaedeec", "NUMBER", "b", "NUMBER", "on", "develop", "NUMBER", "Yeah", "looks", "good", "NUMBER", "ship", "I", "agree", "this", "logic", "should", "live", "in", "the", "model", "as", "well", "NUMBER", "Oh", "ok", "makes", "sense", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "a", "NUMBER", "a", "NUMBER", "ab", "NUMBER", "ce", "NUMBER", "abaa", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "dcc", "NUMBER", "d", "NUMBER", "b", "on", "config", "docs", "into", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "ceaedeec", "NUMBER", "b", "NUMBER", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "I", "just", "had", "a", "couple", "comments", "that", "could", "help", "make", "the", "tutorial", "a", "little", "more", "clear", "NUMBER", "ship", "Thanks", "it", "be", "much", "clearer", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "ade", "NUMBER", "ff", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "b", "NUMBER", "on", "config", "docs", "into", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "ceaedeec", "NUMBER", "b", "NUMBER", "on", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "bccc", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "afacd", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "on", "error", "info", "into", "acda", "NUMBER", "db", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "on", "develop", "NUMBER", "shipit", "Might", "be", "good", "to", "add", "a", "test", "that", "verifies", "the", "category", "resource", "name", "be", "in", "the", "error", "message", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "e", "NUMBER", "fcc", "NUMBER", "dc", "NUMBER", "cc", "NUMBER", "b", "NUMBER", "fdda", "NUMBER", "dbd", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "caf", "NUMBER", "on", "error", "info", "into", "acda", "NUMBER", "db", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "on", "develop", "NUMBER", "shipit", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "ae", "NUMBER", "aa", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "ec", "NUMBER", "ecefae", "NUMBER", "b", "on", "docs", "fix", "into", "acda", "NUMBER", "db", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "on", "develop", "NUMBER", "I", "think", "overall", "this", "looks", "good", "NUMBER", "I", "looked", "mostly", "at", "the", "docs", "as", "oppose", "to", "the", "code", "but", "I", "did", "look", "over", "it", "quickly", "NUMBER", "Good", "jobs", "on", "the", "docs", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "d", "NUMBER", "db", "NUMBER", "e", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "on", "docs", "into", "NUMBER", "c", "NUMBER", "e", "NUMBER", "fcb", "NUMBER", "b", "NUMBER", "df", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "dba", "NUMBER", "a", "NUMBER", "c", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "ship", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "cfb", "NUMBER", "fb", "NUMBER", "ec", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "region", "config", "into", "ce", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "aac", "NUMBER", "b", "NUMBER", "fdeef", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "c", "NUMBER", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "Just", "had", "a", "comment", "about", "splitting", "up", "a", "couple", "of", "the", "test", "NUMBER", "ship", "I", "agree", "with", "kyle", "I", "much", "prefer", "to", "have", "small", "isolated", "test", "that", "more", "or", "less", "verify", "a", "single", "feature", "NUMBER", "I", "d", "prefer", "to", "have", "them", "split", "as", "well", "NUMBER", "Other", "than", "that", "looks", "good", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fec", "NUMBER", "ad", "NUMBER", "b", "NUMBER", "c", "NUMBER", "ff", "NUMBER", "a", "on", "region", "config", "into", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "bf", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "d", "on", "equality", "into", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "a", "NUMBER", "d", "NUMBER", "bad", "NUMBER", "ee", "NUMBER", "cd", "NUMBER", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "Just", "had", "a", "small", "question", "NUMBER", "ship", "Looks", "good", "just", "some", "minor", "feedback", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "f", "NUMBER", "dddf", "NUMBER", "d", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "e", "on", "equality", "into", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "a", "NUMBER", "d", "NUMBER", "bad", "NUMBER", "ee", "NUMBER", "cd", "NUMBER", "on", "develop", "NUMBER", "It", "looks", "good", "NUMBER", "I", "like", "the", "general", "refactoring", "of", "remove", "the", "loading", "from", "the", "resource", "factory", "NUMBER", "My", "main", "comments", "were", "about", "the", "test", "and", "string", "manipulation", "NUMBER", "One", "general", "comment", "be", "that", "it", "looks", "like", "you", "be", "performing", "multiple", "string", "manipulation", "operation", "in", "one", "line", "i", "NUMBER", "e", "NUMBER", "indexing", "splitting", "joining", "NUMBER", "Those", "be", "not", "easy", "to", "follow", "in", "general", "NUMBER", "If", "you", "could", "split", "it", "up", "and", "make", "comments", "for", "each", "string", "operation", "that", "would", "be", "great", "NUMBER", "That", "will", "make", "it", "easier", "to", "follow", "when", "we", "port", "the", "resource", "loaders", "over", "to", "botocore", "NUMBER", "I", "think", "looks", "fine", "I", "d", "suggest", "possibly", "extracting", "out", "the", "loader", "logic", "out", "of", "session", "into", "it", "s", "own", "object", "possibly", "even", "a", "subclass", "of", "Loader", "NUMBER", "This", "would", "make", "the", "migration", "over", "to", "botocore", "s", "loaders", "painless", "once", "the", "needed", "behavior", "be", "moved", "to", "botocore", "NUMBER", "It", "would", "also", "cut", "down", "the", "need", "for", "NUMBER", "patches", "and", "NUMBER", "mocks", "per", "test", "NUMBER", "But", "that", "be", "said", "it", "s", "not", "terribly", "hard", "to", "update", "the", "session", "code", "as", "be", "once", "botocore", "has", "the", "required", "loading", "logic", "NUMBER", "Also", "I", "didn", "t", "see", "any", "test", "for", "verifying", "find_latest_version", "NUMBER", "It", "would", "be", "good", "to", "verify", "that", "if", "there", "s", "a", "service", "with", "more", "than", "one", "API", "version", "that", "we", "be", "in", "fact", "picking", "the", "latest", "version", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "d", "NUMBER", "ff", "NUMBER", "fbea", "NUMBER", "be", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "on", "loader", "into", "e", "NUMBER", "d", "NUMBER", "eff", "NUMBER", "f", "NUMBER", "d", "NUMBER", "eb", "NUMBER", "ae", "NUMBER", "a", "NUMBER", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "ship", "shipit", "Looks", "good", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "b", "NUMBER", "ba", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "cd", "NUMBER", "e", "NUMBER", "e", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "b", "NUMBER", "a", "NUMBER", "on", "references", "into", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "a", "NUMBER", "d", "NUMBER", "bad", "NUMBER", "ee", "NUMBER", "cd", "NUMBER", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "ship", "Just", "had", "one", "question", "NUMBER", "Looks", "good", "NUMBER", "I", "also", "share", "your", "concern", "that", "iterating", "through", "each", "resource", "to", "check", "for", "subresources", "be", "not", "particularly", "efficient", "even", "for", "the", "initial", "first", "pass", "for", "large", "models", "like", "ec", "NUMBER", "but", "I", "agree", "that", "we", "can", "optimize", "this", "later", "NUMBER", "Let", "s", "just", "get", "that", "test", "issue", "resolve", "and", "call", "this", "good", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ebc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cfea", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "af", "NUMBER", "on", "references", "into", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "a", "NUMBER", "d", "NUMBER", "bad", "NUMBER", "ee", "NUMBER", "cd", "NUMBER", "on", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "aefebbc", "NUMBER", "bab", "NUMBER", "daa", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "d", "NUMBER", "b", "NUMBER", "on", "references", "into", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "acd", "NUMBER", "ee", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "f", "NUMBER", "e", "NUMBER", "on", "develop", "NUMBER", "Cool", "NUMBER", "Looks", "good", "NUMBER", "Just", "had", "a", "styling", "comment", "NUMBER", "ship", "shipit", "Looks", "good", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "efc", "NUMBER", "ecd", "NUMBER", "db", "NUMBER", "cefccdc", "NUMBER", "on", "references", "into", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "acd", "NUMBER", "ee", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "f", "NUMBER", "e", "NUMBER", "on", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "eb", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "eabf", "NUMBER", "a", "NUMBER", "c", "NUMBER", "on", "model", "into", "e", "NUMBER", "ef", "NUMBER", "ec", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "on", "develop", "NUMBER", "shipit", "Looks", "good", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "d", "NUMBER", "d", "on", "install", "fix", "into", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bce", "NUMBER", "bead", "NUMBER", "aac", "NUMBER", "cb", "NUMBER", "ef", "NUMBER", "on", "develop", "NUMBER", "shipit", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "on", "repr", "into", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bce", "NUMBER", "bead", "NUMBER", "aac", "NUMBER", "cb", "NUMBER", "ef", "NUMBER", "on", "develop", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "ccfa", "NUMBER", "e", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "ec", "NUMBER", "dbb", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "a", "on", "collections", "into", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bce", "NUMBER", "bead", "NUMBER", "aac", "NUMBER", "cb", "NUMBER", "ef", "NUMBER", "on", "develop", "NUMBER", "Looks", "good", "NUMBER", "Main", "comments", "include", "the", "one", "question", "I", "had", "on", "indexing", "slicing", "and", "the", "limit", "and", "page_size", "seeming", "a", "bit", "ambiguous", "comment", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "b", "NUMBER", "ec", "NUMBER", "dcf", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "on", "collections", "into", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bce", "NUMBER", "bead", "NUMBER", "aac", "NUMBER", "cb", "NUMBER", "ef", "NUMBER", "on", "develop", "NUMBER", "API", "wise", "I", "think", "it", "looks", "good", "with", "the", "exception", "of", "a", "couple", "question", "I", "had", "about", "all", "vs", "NUMBER", "filter", "and", "the", "slicing", "NUMBER", "Design", "wise", "one", "of", "the", "things", "that", "I", "m", "finding", "hard", "to", "follow", "in", "general", "be", "the", "fact", "that", "parents", "be", "pass", "around", "various", "objects", "which", "now", "include", "collections", "NUMBER", "Frequently", "the", "parent", "actually", "isn", "t", "needed", "it", "s", "just", "that", "the", "parent", "has", "access", "to", "some", "other", "object", "that", "s", "_actually_", "the", "thing", "the", "resource", "collection", "needs", "NUMBER", "I", "would", "find", "it", "easier", "to", "read", "if", "the", "dependencies", "be", "more", "explicit", "i", "NUMBER", "e", "a", "resource", "collection", "requires", "a", "client", "pass", "one", "to", "me", "in", "my", "__init__", "I", "require", "the", "service_name", "pass", "that", "to", "me", "in", "my", "__init__", "etc", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "de", "NUMBER", "b", "NUMBER", "bac", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "on", "collections", "into", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bce", "NUMBER", "bead", "NUMBER", "aac", "NUMBER", "cb", "NUMBER", "ef", "NUMBER", "on", "develop", "NUMBER", "It", "looks", "good", "ship", "NUMBER", "The", "test", "look", "much", "better", "as", "well", "NUMBER", "As", "to", "the", "naming", "convention", "of", "the", "page_size", "and", "limit", "methods", "I", "be", "fine", "with", "keep", "the", "names", "as", "be", "NUMBER", "Really", "cannot", "think", "of", "a", "better", "name", "NUMBER", "The", "only", "other", "solution", "I", "could", "think", "of", "be", "to", "get", "rid", "of", "them", "for", "now", "NUMBER", "However", "they", "be", "useful", "if", "you", "do", "not", "know", "that", "you", "can", "pass", "the", "limit", "and", "page_size", "to", "all", "and", "filter", "so", "I", "would", "be", "hesitant", "to", "vote", "to", "remove", "them", "NUMBER", "Looks", "good", "shipit", "NUMBER", "API", "wise", "the", "only", "thing", "that", "looks", "a", "little", "weird", "be", "the", "fact", "that", "filter", "will", "mix", "snake", "cased", "and", "camel", "cased", "args", "for", "example", "for", "instance", "in", "ec", "NUMBER", "instances", "NUMBER", "filter", "InstanceIds", "NUMBER", "page_size", "NUMBER", "PossiblyOtherFilter", "NUMBER", "print", "instance", "NUMBER", "instance_type", "Especially", "given", "that", "I", "believe", "these", "three", "things", "all", "do", "the", "same", "thing", "instances", "NUMBER", "all", "page_size", "NUMBER", "limit", "NUMBER", "NUMBER", "filter", "InstanceIds", "NUMBER", "instances", "NUMBER", "filter", "InstancesIds", "NUMBER", "page_size", "NUMBER", "limit", "NUMBER", "instances", "NUMBER", "filter", "InstanceIds", "NUMBER", "NUMBER", "page_size", "NUMBER", "NUMBER", "limit", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "on", "unique", "meta", "into", "e", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "cee", "NUMBER", "d", "NUMBER", "c", "NUMBER", "febc", "NUMBER", "fdeb", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "on", "develop", "NUMBER", "shipit", "LGTM", "ship", "Look", "good", "NUMBER", "I", "just", "had", "the", "same", "question", "comments", "on", "the", "types", "as", "James", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "cfbe", "NUMBER", "d", "on", "load", "fix", "into", "e", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "cee", "NUMBER", "d", "NUMBER", "c", "NUMBER", "febc", "NUMBER", "fdeb", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "on", "develop", "NUMBER", "LGTM", "ship"], "text_count": [0, 47012, 11401, 6728, 4546, 637, 5127, 6, 164, 4659, 6394, 12636, 6141, 4082, 4898, 3848, 0, 0, 0, 0, 13796, 4043, 2567, 1826, 4241, 2111, 0, 0, 0, 0, 34306, 19378, 15062, 451, 8670, 2320, 0, 0, 0, 0, 38482, 237, 16887, 15783, 9219, 0, 0, 0, 0, 0, 9337, 5656, 5063, 1853, 3114, 1303, 3312, 0, 0, 0, 33174, 2363, 27137, 1555, 0, 0, 0, 0, 0, 0, 28807, 3900, 20067, 8724, 3569, 0, 0, 0, 0, 0, 41445, 18083, 2965, 18330, 1937, 1940, 0, 0, 0, 0, 1827, 8394, 871, 0, 0, 0, 0, 0, 0, 0, 36517, 4956, 24345, 8344, 0, 0, 0, 0, 0, 0, 82544, 142839, 2038, 7332, 1469, 3583, 0, 0, 0, 0, 177852, 510, 128138, 1047, 25471, 44678]}]