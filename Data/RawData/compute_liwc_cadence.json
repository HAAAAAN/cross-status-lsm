[{"repo": "cadence", "type": "elite", "title": "", "number of text": 610, "text": "      Moved to https://github.com/uber-go/cadence-client/issues/943      Following unit test are failing, can you please fix them?\r\n\r\n```\r\n\r\n--- FAIL: TestVisibilityArchiverSuite/TestArchiveAndQuery (0.00s) --\r\n\u00a0 | visibilityArchiver_test.go:508:\r\n\u00a0 | Error Trace:\tvisibilityArchiver_test.go:508\r\n\u00a0 | Error:      \t\"[]\" should have 2 item(s), but has 0\r\n\u00a0 | Test:       \tTestVisibilityArchiverSuite/TestArchiveAndQuery\r\n\r\n--- FAIL: TestVisibilityArchiverSuite/TestArchiveAndQueryPrecisions (0.01s) --\r\n\u00a0 | visibilityArchiver_test.go:461:\r\n\u00a0 | Error Trace:\tvisibilityArchiver_test.go:461\r\n\u00a0 | Error:      \t\"[]\" should have 2 item(s), but has 0\r\n\u00a0 | Test:       \tTestVisibilityArchiverSuite/TestArchiveAndQueryPrecisions\r\n\u00a0 | Messages:   \tIteration %!(EXTRA int=0)\r\n\r\n--- FAIL: TestVisibilityArchiverSuite/TestQuery_Success_NoNextPageToken (0.00s) --\r\n\u00a0 | visibilityArchiver_test.go:305:\r\n\u00a0 | Error Trace:\tvisibilityArchiver_test.go:305\r\n\u00a0 | Error:      \t\"[]\" should have 2 item(s), but has 0\r\n\u00a0 | Test:       \tTestVisibilityArchiverSuite/TestQuery_Success_NoNextPageToken\r\n\r\n--- FAIL: TestVisibilityArchiverSuite/TestQuery_Success_SmallPageSize (0.00s) --\r\n\u00a0 | visibilityArchiver_test.go:328:\r\n\u00a0 | Error Trace:\tvisibilityArchiver_test.go:328\r\n\u00a0 | Error:      \tExpected value not to be nil.\r\n\u00a0 | Test:       \tTestVisibilityArchiverSuite/TestQuery_Success_SmallPageSize\r\n\r\n\r\n\r\n```      Multiple tests failed with the following error. Seems like a config problem for unit testing.\r\n```\r\n--- FAIL: TestVisibilityArchiverSuiteSuite/TestArchive_Fail_InvalidVisibilityURI (0.00s) --\r\n\u00a0 | visibilityArchiver_test.go:140:\r\n\u00a0 | Error Trace:\tvisibilityArchiver_test.go:140\r\n\u00a0 | Error:      \tReceived unexpected error:\r\n\u00a0 | dialing: google: could not find default credentials. See https://developers.google.com/accounts/docs/application-default-credentials for more information.\r\n``` There are still two tests failing\r\n```\r\n\r\n--- FAIL: TestVisibilityArchiverSuiteSuite/TestArchive_Fail_InvalidVisibilityURI (0.01s) --\r\n\u00a0 | visibilityArchiver_test.go:139:\r\n\u00a0 | Error Trace:\tvisibilityArchiver_test.go:139\r\n\u00a0 | Error:      \tReceived unexpected error:\r\n\u00a0 | dialing: google: could not find default credentials. See https://developers.google.com/accounts/docs/application-default-credentials for more information.\r\n\u00a0 | Test:       \tTestVisibilityArchiverSuiteSuite/TestArchive_Fail_InvalidVisibilityURI\r\n\r\n--- FAIL: TestVisibilityArchiverSuiteSuite/TestQuery_Fail_InvalidVisibilityURI (0.00s) --\r\n\u00a0 | visibilityArchiver_test.go:165:\r\n\u00a0 | Error Trace:\tvisibilityArchiver_test.go:165\r\n\u00a0 | Error:      \tReceived unexpected error:\r\n\u00a0 | dialing: google: could not find default credentials. See https://developers.google.com/accounts/docs/application-default-credentials for more information.\r\n\u00a0 | Test:       \tTestVisibilityArchiverSuiteSuite/TestQuery_Fail_InvalidVisibilityURI\r\n```  I believe the code using this tag was already deleted in our internal release branch so I don't think we need to add this tag.  This pr moves the MaxQPS to service level so that the race condition could be removed. The problem I observed here is that we lose the flexibility of setting max qps value to a specific datastore. However, look like so far always the default datastore will be set up with this value. Please let me know your idea about it.   This reverts commit 909c329d2796a7177a23f6369ab185a558119a3b.  @aoby Sorry for the delay. I just merged the pull request.  Moved to https://github.com/uber/cadence-java-client/issues/455    This diff includes the skeleton of a new system scanner which will go over workflow executions. This scanner is meant to be used to assert system invariants, generate reports and someday could also automatically perform repair actions. \r\n\r\nThis code contains all the plumbing needed to actually bootstrap this workflow and run it. This diff does not contain the actual implementation of the validations or unit tests (these will come in follow up diffs).   1. Add DLQ ack level metrics\r\n2. Add DLQ max message id metrics\r\n3. Add DLQ domain specific metrics/log  In order to safely implement executions scanner we need the persistence RPS to be controllable through dynamic config. This diff addresses the two issues that had prevented us from doing this:\r\n\r\n1. Persistence RPS was not truly dynamic. The dynamic config value was read once when service components booted up and then never read again. I changed this to plumb the dynamic config through everywhere. This is safe because we were never relying on the value in static yaml config.\r\n2. The worker only had one resource.Resource (with one persistence RPS) shared between all features of the worker. This made it impossible to set a persistence RPS for one worker feature and a different RPS for another worker feature. In order to address this I added a new field on worker for the resources for scanner. Before my change we attempted to this by setting the PersistenceMaxRPS in the scanner before we start the scanner, but this wasn't working because the resources (including the rate limited persistence resources) had already been created.   This should help reduce the number of allocations associated with creating dynamic scopes.   When creating dynamically allocated tally scopes GetDomainName can be a lot to tag metrics with domain name. This results in a lot of extra allocations and pressure on golang's GC. This diff enables access of domainID -> domainName mapping without doing any allocations.     Check https://github.com/uber/cadence/pull/3039 for context.\r\n  Revert commit #3038     Fix buildkite build failure  - This is for deprecating the current taskProcessor, taskExecutor and taskInfo defined in history package and in favor of the task interface defined in common/task package. \r\n\r\n-  Separating the logic for queue management and task processing make the code easier to read and understand. \r\n\r\n- Executor (and also task metric scope) will be assigned to a task when the task is created and sent for processing.\r\n\r\n- When implementing NDC task life cycle, we can consider combine the executor for active and standby processing into one executor and let the executor to decide if the task should be executed as active or passive. This can't be done without this refactoring.\r\n\r\n- Will send out separate PR for transfer and replication task  As submodule currently does not support pin to commit, this creates problems when merging master to a local developing branch. If the commit in master might point to the new commit in submodule idl. But the local branch tracks the old commit. \r\n\r\nThe change removing the command of sync submodule and only two cases should run make sync-submodules:\r\n1. Merge master\r\n2. Current changes in the local branch require IDL changes\r\n\r\nThe buildkite should be fine as it do git clone every time and it should get the latest commit in master branch.    Currently the mutable state is \"versioned\" using next event ID; next event ID is not a good attr for protecting concurrent modification of mutable state or preventing writing the activity heartbeat > 1 times.\r\n\r\nWe should have a additional attr 'dbVersion', which will +1 for each db write related to a mutable state\r\n\r\nWe can also consider persist the heartbeat timer time along with activity (currently it is a in mem only attr) For background context, check: https://github.com/uber/cadence/pull/3032   Decided to implement this with visibility API instead of direct database scan.   Revert \"Update metrics and add logging for activity timeout task (#3030)\"\r\nRevert \"Add metrics for profiling activity timeout task latency (#3026)\"\r\nRevert \"check if timer expired first\"\r\n   > not a blocking comment.\r\n> \r\n> currently the mutable state is \"versioned\" using next event ID; next event ID is not a good attr protecting concurrent modification of mutable state or in this case, preventing writing the activity heartbeat > 1 times.\r\n> \r\n> should have a additional attr 'dbVersion', which will +1 for each db write related to a mutable state\r\n> @yux0 @yycptt @venkat1109\r\n> \r\n> one more thing, plz also consider persist the heartbeat timer time along with activity (currently it is a in mem only attr)\r\n\r\nCreated a new issue: https://github.com/uber/cadence/issues/3036  Revert this later  Instead of renaming the property which may call the back-end breaking, I removed it from CLI and mark the property as depreciated. Pull request for task #2380   Revert this change after root causing the issue.  Yes it should be in a few days. There's a regression that we are working on to fix and that's the release blocker.      Add three new metrics for debugging purpose. We can revert this change later.\r\n```\r\nTaskProcessingWithRetryLatency\r\n\r\nTaskScheduleToStartLatency:\r\n        ScheduleTime: the time when a task is created and added to the queue\r\n        StartTime: the time when a task is popped from the task queue\r\n\r\nTaskQueueSize: \r\n        # of buffered tasks in the queue when adding a task\r\n```  FIFO scheduler is just an no-op implementation which forwards the call to the underlying parallel task processor. This is for testing and development purpose.\r\n\r\nWRR scheduler goes through all the queues and dispatch tasks from that queue if exists. The number of tasks dispatched from each queue is determined by the weights.  Update logging tag with the correct component  This is to allow Cadence to exercise failover on behalf of the customer/domain owner.\r\nIf this is enrolled, Cadence will do failover on behalf of the user with some preset schedule (which can be config/dynamic config). This will need to work with ignore LISA = true.\r\n\r\nIf customer set ignore lisa = false then this will be opted out and value from LISA is honored.  \u2026ecisionTaskFail (#2929)  This PR contains:\r\n1. Domain DLQ implementation\r\n2. Admin APIs\r\n3. CLI for DLQ operations\r\n\r\nOperations:\r\n1. Read DLQ messages by Max message ID or number of messages\r\n2. Purge DLQ messages by Max message ID or purge all\r\n3. Merge DLQ messages by Max message ID or merge all\r\n  This sounds like some setup problem rather than code issue. Please seek help in the Slack chat room.        The matching engine only use the matching client for forwarding request. The caller does not care if the client returns error in this case. If the client return error, the matching can handle the task locally.     Don't forget to also add an admin CLI command for this API.  **Will prioritize work on task processor side instead of the queue management. So I will address the comments later. Thanks.**\r\n\r\nThis pr implements the task processing job, the smallest building block for the multi-tenant task processing logic. On top of the processing job, another component will be implemented to manage a list of jobs with disjoint range (can be viewed as a queue) and responsible for managing their life cycles, read tasks, etc.\r\n\r\nLogging and metrics will be added later.  1. Add domain DLQ \r\n2. Add enqueue dlq logic in worker\r\n3. Update some DLQ persistence API (not fully integrated, require next PR with CLI changes)  The domain replication queue has a function to cleanup the applied messages which is not being invoked. This change is to invoke the function from the domain replication queue. \r\nThe queue maintains a map of the ack levels of each cluster. The domain replication queue will clean up all the messages before the minimum ack level among all clusters.   1. Add new API to get replication task using DLQ info\r\n2. Fix mockgen \r\n3. Fix lint  https://github.com/uber/cadence/issues/2790\r\n\r\nVerified it works locally.  Enable domain update clusters info from CLI  consider a workflow example like this:\r\n```\r\nSampleWorkflow(ctx workflow.Context) error{\r\n    ...\r\n    err := executeLocalActivity(activityToSendSignalToSelf).Get(nil)\r\n    if err != nil{\r\n        return err\r\n    }\r\n    err := executeLocalActivity(activityBToValidateStatus).Get(nil)\r\n    if err != nil{\r\n        return err\r\n    }\r\n    ...\r\n}\r\n```\r\nNote that activityToSendSignalToSelf is sending a signal to itself, mostly will succeed with Cadence high availability.\r\n*activityBToValidateStatus* is to do some validation with external calls.\r\n\r\nIf the service that activityB is calling is unavailable, then the workflow will run into a infinite loop:\r\n\r\n* 1. Cadence server schedule a decision\r\n* 2. Worker started a decision, then trigger activityToSendSignalToSelf, because there is a decision in flight(in process), the received signal has to be saved into buffered events (). \r\n* 3. Worker then started activityBToValidateStatus, but failed, so workflow attempts to return an error as workflow result --> internally, this means worker tries to ResponDecisionTaskCompleted with WorkflowFailed decision. \r\n* 4. When Cadence server process this ResponDecisionTaskCompleted, it becomes DecisionTaskFailed because there is a buffered events (https://github.com/uber/cadence/blob/bb555046fdf0ae14316b1928ffdabdb8d47675dc/service/history/decisionTaskHandler.go#L402 ). So it records DecisionTaskFailed and then schedule a next decision. Then it start to do 1. again.\r\n\r\nThe above loop only get break only the external service becomes available back. If activityBToValidateStatus keeps returning error, this loop will keep going on and consume lots of resources for Cadence server and customer workers. \r\n\r\nThe same will apply if activityA and activityB are one single activity. \r\nThe same loop will also happen if the decision after signal self tries to Complete/Cancel/ContinueAsNew. But failing is the most common case because the code looks more natural. \r\n\r\nHere are several ways to fix it:\r\n* a). Not using local activity to send signal to self -- use regular activity instead\r\n* b). Not closing workflow in the same decision after sending signal to self -- not returning to workflow function(any error or not error).\r\n* c). Revert the order of activityA and activityB -- always send signal to self as the very last step. It's sometimes hard to guarantee because you may not know where is the decision boundary.\r\n* d). If possible, put an identifier in requstedID in send signal request.  this would dedup the signal so that even local activity is triggered again, it won't send another signal and being put into buffer. \r\nBy default the requestedID is filled by client with random UUID, so there is not dedup for each decision.\r\n\r\n<del>Also to mitigate, use this config https://github.com/uber/cadence/blob/master/service/history/service.go#L128  to limit the number of signals that a workflow execution can receive.</del>\r\n\r\nStep back, mostly the reason that customers want to send signal to self is because signal is immutable and never lost even in case of workflow reset and XDC replication. \r\nIdeally, Cadence should support signal self as part of a decision, instead of letting customers using an activity to send signal -- this will not only prevent this issue, but also improve the performance and coding experience of using Cadence: https://github.com/uber/cadence/issues/2935\r\n  \u2026stic_only\r\n\r\nmore improvements with dryrun and originalTimestamp\r\n\r\ndry run logs  for troubleshooting issues for customers  Looks good to me. Could you also update the failed test? The failed test is common/persistence/persistence-tests/historyV2PersistenceTest.go\r\n\r\nUpdate the line 164 from \"if resp.NextPageToken == nil {\" to \"if len(resp.NextPageToken) == 0 {\"\r\nshould fix the test  Working on adding a test  for https://github.com/uber/cadence/issues/2870  This is a pre step for implementing a scanner to mark workflow as corrupted and then eventually delete it.   For https://github.com/uber/cadence/issues/2869\r\n\r\nit will be easier to make the instructions for https://github.com/uber/cadence/issues/2870  Handle activity start not found during replication. This could happen when DB has resurrection issue with two activity start event.  For https://github.com/uber/cadence/issues/1128\r\nIt causes confusion when I explaining SLO calculation to @vitarb . This will help make it more clear. Some other details see internal T1878655 .\r\n\r\n    Thanks for doing this ! @enmand   Today we are doing some complicated timezone conversion in Postgres. There are some reasons:\r\nr application layer is not consistent with timezone: for example, in some case we write timestamp with local timezone but when the time.Time is converted from \"JSON\"(from paging token), the timezone is missing... The simplest way is to disable timezone in postgres, I tried different ways but they don't work.\r\n\r\nMaybe there is a way I missed.  This still needs some work. This is an open issue in the PR that I found but not solved yet.\r\n\r\n  This PR is implementing the defined interface of SQL Plugin and the testing.\r\nIt also fixes some issues with the Postgres schema we landed previously with CLI tool.\r\n\r\nRunning with samples locally looks good:\r\n\r\n```\r\n(postgres4)$./cadence-server --env development_postgres start\r\n2019/11/27 16:59:40 Loading config; env=development_postgres,zone=,configDir=./config\r\n2019/11/27 16:59:40 Loading configFiles=[./config/base.yaml ./config/development_postgres.yaml]\r\n2019/11/27 16:59:40 error creating file based dynamic config client, use no-op config client instead. error: error checking dynamic config file at path , error: stat : no such file or directory\r\n{\"level\":\"info\",\"ts\":\"2019-11-27T16:59:40.141-0800\",\"msg\":\"Created RPC dispatcher and listening\",\"service\":\"cadence-frontend\",\"address\":\"127.0.0.1:7933\",\"logging-call-at\":\"rpc.go:81\"}\r\n``` Some TODOs, will create small PRs later:\r\n\r\n#2863\r\n#2856\r\n#2854\r\n#2869\r\n#2870\r\n#2877\r\nhttps://github.com/uber/cadence/issues/2892\r\nhttps://github.com/uber/cadence/issues/2893    We need detailed information to perform manual operation if some workflow run into corrupted state.   This still needs some work. This is an open issue in the PR that I found but not solved yet.\r\n\r\n    Use resource struct for history service, history handler, shard controller and shard context. \r\nWe can also consider use the resource struct in history engine, but will leave this as a future work.  Update words with spelling  This is just a temp fix for the race condition of persistence config. The race condition for archiver provider happens only in the integration test as in the test all services shares one archiver provider.\r\n\r\nThe race condition for persistence config happens because all the services are using the same persistence config (the datastore map in particular) and will retry to modify the maxQPS during start up and use the modified maxQPS value to create a persistence factory. \r\n\r\nWe need to come up with a better way to resolve this race condition. One idea is to remove all the pointers in the config definition, which makes every copy of persistence config a deep copy.  This still needs work. This is an open issue in the PR that I found but not solved yet.\r\n\r\n    This still needs work. This is an open issue in the PR that I found but not solved yet.  ContinueAsNew should track the workflow previous run for NDC enabled   - Use new resource struct for frontend initialization logic\r\n - Register archiver bootstrap params during resource struct initialization\r\n - Update unit and integration test to use new resource struct   Let's create an issue to track this issue.  For 0.10.1 release. Will be cherry-picked to 0.10.x branch   Do not merge into release branch  > @longquanzheng I see you have made good progress on your refactor. Should I wait for it to land in master or do you think it is in a stable spot for me to start making my changes?\r\n\r\nHi @bjacobso thanks for waiting. My PR is landed. It should be much easier for you to do it this.     Fix replicate ActivityTaskCancelRequested event if activity info not found  > Looks good. I have one suggestion though\r\n> \r\n> How do you feel about renaming the package \"plugins\" to \"sqlplugin\" ?\r\n> i.e. common/persistence/sql/plugins -> common/persistence/sql/sqlplugin\r\n> \r\n> This will make the code on the callers more readable. Currently, referencing plugins.DB, plugings.Tx etc looks weird - sqlplugin.DB / sqlplugin.Tx looks more readable to me.\r\n\r\nAgreed. I had the same feeling as well. In case that we will have some other plugins like archival plugin. Thanks for pointing it out  I think we already have the `attempt` field in the `ActivityTaskStarted` Event? Not sure if we want to add the same field to the completed event again (those two fields will always have the same value I think).  Probably what we want is move the field from start event to the close event, but then we also need to do this for other events like activity task failed, timed out, cancelled etc.           Merged into 0.10.x    Handle empty newRunHistory in stateBuilder if it is re-replication case.          Mutable state rebuild should include activity progress if appliable for workflow reset in active/passive case and conflict resolution case.    This change includes:\r\n1. Logic to handle duplicated reapplied events by run id, event id and version\r\n2. The record stores in the mutable state currently and we might want to persist it to the database in the future    - Add logger tags for visibility archival query\r\n- Add dynamic config for max visibility archival query page size\r\n- Use long poll timeout for `ListArchivedWorkflowExecution` API\r\n\r\n- Add dynamic config for max visibility archival query RPS (used by internal impl)\r\n- Add dynamic config for max visibility archival query range (used by internal impl)          * Rewrite some transfer active processing code\r\n* Remove unused test utils   close due to mis-understanding @yux0 actually your are right  * Workflow can be continued-as-newed in created state due to workflow retry policy / cron    FYI, decision task timeout logic does not need to be merged here, timer queue active processor makes more sense, I will remove the TODO from decision handler  Currently worker does not have the ability to analyze CPU util / load + mem usage for worker side resource based load balancing, users need to manually configure the number concurrent execution of decision / activity per worker. everything is static for now:\r\n[go worker configs](https://github.com/uber-go/cadence-client/blob/75078a95a1299fc8156ae185451ae7e0269e7d31/internal/worker.go#L59)\r\n[go worker config default values](https://github.com/uber-go/cadence-client/blob/072e408387dc3b620a2fc35ef96f8bbe990f8a90/internal/internal_worker.go#L56)  * Rename DecisionTimeoutValue since we have 2 decision timeout, one for schedule to start, one for start to close  * Deprecate timer builder\r\n* Rename TimerSequenceID to timerKey\r\n* Do not expose user timer task / activity timer task vars\r\n* Rewrite time active processing logic UT  * Use goimports instead of gofmt for better imports management\r\n* Deprecate domain cache mockery  solves #2718   * Rewrite state builder\r\n* Rewrite UT  could you make change in history replicator, apply events API?\r\nthat API is the only entrance  * Add go generate mock in Makefile\r\n* Run `go generate ./...`    * Fix sync activity timer not generated isssue\r\n* Fix task refresher missing timer task mask update to mutable state  @sevein cadence server / java client / go client pipelines are all public now  same as #2619    1. cadence server cannot start until target schema versions (one for execution, one for visibility) are met.\r\n2. the log showed here is from cadence-cassandra-tool, which has nothing to do with cadence cli.\r\n3. the command showed is cadence cli, which dependents on cadence server (which is not started yet).\r\n4. the error log says connection refused:\r\n  `error creating Keyspace:gocql: unable to create session: control: unable to connect to initial hosts: dial tcp 172.27.215.236:9042: connect: connection refused `\r\n5. according to the dependency & schema version check, did you tried using cadence-cassandra-tool to setup the visibility keyspace? you can ref this: https://github.com/uber/cadence/blob/master/Makefile#L236 according to the analysis, the correct solution should be #2696 + error handling + proper retry\r\nexisting cadence cassandra / sql tool does not handle error well.\r\n\r\nclose in favor of #2696     Cadence need to improve the debuggability for customer, especially for non-compatible code change.    In case of Kafka / Cassandra down, we need to have dynamic config which can \r\n1. suspend task processing (at least) to ease the load down stream dependencies.\r\n2. block incoming request. the first step should be ability to suspend replication task processing & visibility / elastic search task processing   * Add dedicated dynamic config for passive task processing: verification retry duration; fetch history from remote duration. \r\n* Group passive task processing post processing actions into one dedicated file.\r\n* Add new type taskInfo grouping task attempt & start processing time for metrics / logging.  * Remove APIs from mutable state if not used externaly\r\n* Add checking on timer / activity / child workflow / request cancel external info / signal external info  @yux0 which part is broken?    * Fail in flight decision & flush buffered events when workflow is timed out, terminated or retried (by continue as new)\r\n* Update mutable state AddTimeoutWorkflowEvent / AddWorkflowExecutionTerminatedEvent accordingly  #2787 2787  * Fix docker/start-cadence.sh permission (missing +x)\r\n* Fix docker config template cass visibility default keyspace  pending #2665 please use the latest release 0.9.4: https://hub.docker.com/r/ubercadence/server/tags I have already verified locally, @zhaytee could you double verify?\r\nMake sure to upgrade to Cassandra 0.22 schema version before rollout  Admin delete workflow use both `address` attr to set connection to server & connection to Cassandra\r\nThe ideal solution should be bypassing server to get the mutable state  * Expose version history internal attribute for serialization / deserialization  * Remove AddUserTimer in timerBuilder\r\n* User timer generation is handled by closeTransactionHandleActivityUserTimerTasks in mutableState\r\n\r\nsolve #1046  @sevein could you sign the CLA plz?  * New workflowResetter & workflowResetterImpl supporting workflow with version history\r\n* Add panic handling on workflow execution context for better protection against corruption\r\n* Add GetEventVersion API to VersionHistory\r\n* Remove resetWorkflow attr from idl\r\n\r\nTested with local domain canary & global domain canary + failover  termination & start a new can be done by similar to `continue as new`\r\nthis should be easy to do since after the refactor of DB layer & business logic layer, terminate the currently running workflow & start a new workflow can be done within one transaction.  This issue aims to track the progress of updating the workflow config, including but not limited to cron schedule, retry policy.\r\n\r\nBackground:\r\nCustomer needs the functionality to update the cron schedule of workflow without workflow termination & start a new workflow with updated cron schedule.\r\n\r\nPossible solution:\r\nAdding a new event type containing all possible attributes which can be updated for a workflow (excluding activity, child workflow etc.).\r\nAdding a new event will making the support of Cross DC simple.\r\n  * Fix worker initialization order issue\r\n* Remove unused domains_by_name related schema changes  History server task loading & processing should undergo a refactor to support multi-tenancy & new cross DC active / passive task lifecycle.  History server have a host level task worker pool, instead of shard level  Expose new get raw history API, since currently the history events are deserialized when loaded from DB and serialized again when dispatching to client.    * Remove domain V1 schema\r\n* Fix cadence-system domain migration issue      @yycptt if possible, could you use the paging iterator?\r\n[link](https://github.com/uber/cadence/blob/master/common/collection/pagingIterator.go#L38) > @wxing1292 I think they are a little bit different. The history iterator used by archiver needs the ability to get current state of the iterator and create a new iterator based on some previous states. I don't think the paging iterator supports that. The functionality is needed because archiver workflow needs to periodically record its current progress and resume from last saved state if worker restarts.\r\n> \r\n> There are some other issues like keeping current iterator state when error occurs, performing lookahead for nextPageToken etc. If you want, we can talk about it in more detail offline.\r\n\r\nIf that is the case, then plz ignore the above comment.\r\nIf the logic used in archival is generic enough, maybe it is a good idea to move it to common  * Update unit tests\r\n* Remove DomainTableVersion variables\r\n* Improve domain cache refreshment on newly created domain  * Add admin domain CLI functionality which will bypass cadence frontend, this should be mainly used for testing purpose\r\n* New flags for admin domain CLI\r\n  * Required attr service_config_dir specifying dir location of cadence configuration\r\n  * Optional attr service_env specifying the env to be used for loading cadence configuration\r\n  * Optional attr service_zone specifying the zone to be used for loading cadence configuration\r\n\r\nSample commands:\r\n* Register a domain: `./cadence --do canary-test admin domain register --scd ./config --oe cadence-dev@uber.com --desc 'canary test domain' --rd 7 --em true --ac active --cl active --global_domain false`\r\n* Update a domain: `./cadence --do canary-test admin domain update --scd ./config --oe cadence-prod@uber.com --desc 'canary test domain' --rd 3 --em true`\r\n* Describe a domain: `./cadence --do canary-test admin domain describe --scd ./config` Local domain examples:\r\n```\r\ncadence|admin-domain-cli \u21d2 ./cadence --do canary-test admin domain register --scd ./config --oe cadence-dev@uber.com --desc 'canary cross dc test domain' --rd 7 --em true --ac active --cl active --global_domain false\r\n2019/10/02 15:10:04 Loading configFiles=[./config/base.yaml ./config/development.yaml]\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:10:04.449-0700\",\"msg\":\"Updated dynamic config\",\"logging-call-at\":\"fileBasedClient.go:257\"}\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:10:04.455-0700\",\"msg\":\"Get dynamic config\",\"name\":\"system.historyArchivalStatus\",\"value\":\"enabled\",\"default-value\":\"enabled\",\"logging-call-at\":\"config.go:58\"}\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:10:04.473-0700\",\"msg\":\"Register domain succeeded\",\"wf-domain-name\":\"canary-test\",\"wf-domain-id\":\"e73c5330-1b67-407d-b30a-d965f9452cc5\",\"logging-call-at\":\"handler.go:269\"}\r\nDomain canary-test successfully registered.\r\n```\r\n```\r\ncadence|admin-domain-cli \u21d2 ./cadence --do canary-test admin domain describe --scd ./config --sz active\r\n2019/10/02 15:10:53 Loading configFiles=[./config/base.yaml ./config/development.yaml]\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:10:53.250-0700\",\"msg\":\"Updated dynamic config\",\"logging-call-at\":\"fileBasedClient.go:257\"}\r\nName: canary-test\r\nUUID: e73c5330-1b67-407d-b30a-d965f9452cc5\r\nDescription: canary cross dc test domain\r\nOwnerEmail: cadence-dev@uber.com\r\nDomainData: map[]\r\nStatus: REGISTERED\r\nRetentionInDays: 7\r\nEmitMetrics: true\r\nActiveClusterName: active\r\nClusters: active\r\nHistoryArchivalStatus: ENABLED\r\nHistoryArchivalURI: file:///tmp/cadence_archival/development\r\nVisibilityArchivalStatus: DISABLED\r\nBad binaries to reset:\r\n+-----------------+----------+------------+--------+\r\n| BINARY CHECKSUM | OPERATOR | START TIME | REASON |\r\n+-----------------+----------+------------+--------+\r\n+-----------------+----------+------------+--------+\r\n```\r\n```\r\ncadence|admin-domain-cli \u21d2 ./cadence --do canary-test admin domain update --scd ./config --oe cadence-prod@uber.com --desc 'canary test domain' --rd 3 --em true                                 \r\n2019/10/02 15:11:07 Loading configFiles=[./config/base.yaml ./config/development.yaml]\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:11:07.645-0700\",\"msg\":\"Updated dynamic config\",\"logging-call-at\":\"fileBasedClient.go:257\"}\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:11:07.648-0700\",\"msg\":\"Get dynamic config\",\"name\":\"system.historyArchivalStatus\",\"value\":\"enabled\",\"default-value\":\"enabled\",\"logging-call-at\":\"config.go:58\"}\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:11:07.653-0700\",\"msg\":\"Update domain succeeded\",\"wf-domain-name\":\"canary-test\",\"wf-domain-id\":\"e73c5330-1b67-407d-b30a-d965f9452cc5\",\"logging-call-at\":\"handler.go:575\"}\r\nDomain canary-test successfully updated.\r\n```\r\n```\r\ncadence|admin-domain-cli \u21d2 ./cadence --do canary-test admin domain describe --scd ./config\r\n2019/10/02 15:11:09 Loading configFiles=[./config/base.yaml ./config/development.yaml]\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:11:09.670-0700\",\"msg\":\"Updated dynamic config\",\"logging-call-at\":\"fileBasedClient.go:257\"}\r\nName: canary-test\r\nUUID: e73c5330-1b67-407d-b30a-d965f9452cc5\r\nDescription: canary test domain\r\nOwnerEmail: cadence-prod@uber.com\r\nDomainData: map[]\r\nStatus: REGISTERED\r\nRetentionInDays: 3\r\nEmitMetrics: true\r\nActiveClusterName: active\r\nClusters: active\r\nHistoryArchivalStatus: ENABLED\r\nHistoryArchivalURI: file:///tmp/cadence_archival/development\r\nVisibilityArchivalStatus: DISABLED\r\nBad binaries to reset:\r\n+-----------------+----------+------------+--------+\r\n| BINARY CHECKSUM | OPERATOR | START TIME | REASON |\r\n+-----------------+----------+------------+--------+\r\n+-----------------+----------+------------+--------+\r\n``` Global domain examples:\r\n```\r\ncadence|admin-domain-cli \u21d2 ./cadence --do canary-test admin domain register --scd ./config --sz active --oe cadence-dev@uber.com --desc 'canary cross dc test domain' --rd 7 --em true --global_domain true --ac active --cl active standby \r\n2019/10/02 15:11:38 Loading configFiles=[./config/base.yaml ./config/development.yaml ./config/development_active.yaml]\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:11:38.828-0700\",\"msg\":\"Updated dynamic config\",\"logging-call-at\":\"fileBasedClient.go:257\"}\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:11:38.831-0700\",\"msg\":\"Get dynamic config\",\"name\":\"system.historyArchivalStatus\",\"value\":\"enabled\",\"default-value\":\"enabled\",\"logging-call-at\":\"config.go:58\"}\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:11:38.840-0700\",\"msg\":\"Register domain succeeded\",\"wf-domain-name\":\"canary-test\",\"wf-domain-id\":\"6f84fea5-5126-4541-8f7d-36faf039530e\",\"logging-call-at\":\"handler.go:269\"}\r\nDomain canary-test successfully registered.\r\n```\r\n```\r\ncadence|admin-domain-cli \u21d2 ./cadence --do canary-test admin domain describe --scd ./config --sz active                 \r\n2019/10/02 15:12:15 Loading configFiles=[./config/base.yaml ./config/development.yaml ./config/development_active.yaml]\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:12:15.232-0700\",\"msg\":\"Updated dynamic config\",\"logging-call-at\":\"fileBasedClient.go:257\"}\r\nName: canary-test\r\nUUID: 6f84fea5-5126-4541-8f7d-36faf039530e\r\nDescription: canary cross dc test domain\r\nOwnerEmail: cadence-dev@uber.com\r\nDomainData: map[]\r\nStatus: REGISTERED\r\nRetentionInDays: 7\r\nEmitMetrics: true\r\nActiveClusterName: active\r\nClusters: active, standby\r\nHistoryArchivalStatus: ENABLED\r\nHistoryArchivalURI: file:///tmp/cadence_archival/development\r\nVisibilityArchivalStatus: DISABLED\r\nBad binaries to reset:\r\n+-----------------+----------+------------+--------+\r\n| BINARY CHECKSUM | OPERATOR | START TIME | REASON |\r\n+-----------------+----------+------------+--------+\r\n+-----------------+----------+------------+--------+\r\n```\r\n```\r\ncadence|admin-domain-cli \u21d2 ./cadence --do canary-test admin domain update --scd ./config --sz active --oe cadence@uber.com --desc 'canary test domain' --rd 3 --em false                                    \r\n2019/10/02 15:12:28 Loading configFiles=[./config/base.yaml ./config/development.yaml ./config/development_active.yaml]\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:12:28.594-0700\",\"msg\":\"Updated dynamic config\",\"logging-call-at\":\"fileBasedClient.go:257\"}\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:12:28.596-0700\",\"msg\":\"Get dynamic config\",\"name\":\"system.historyArchivalStatus\",\"value\":\"enabled\",\"default-value\":\"enabled\",\"logging-call-at\":\"config.go:58\"}\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:12:28.601-0700\",\"msg\":\"Update domain succeeded\",\"wf-domain-name\":\"canary-test\",\"wf-domain-id\":\"6f84fea5-5126-4541-8f7d-36faf039530e\",\"logging-call-at\":\"handler.go:575\"}\r\nDomain canary-test successfully updated.\r\n```\r\n```\r\ncadence|admin-domain-cli \u21d2 ./cadence --do canary-test admin domain describe --scd ./config --sz active\r\n2019/10/02 15:12:31 Loading configFiles=[./config/base.yaml ./config/development.yaml ./config/development_active.yaml]\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:12:31.017-0700\",\"msg\":\"Updated dynamic config\",\"logging-call-at\":\"fileBasedClient.go:257\"}\r\nName: canary-test\r\nUUID: 6f84fea5-5126-4541-8f7d-36faf039530e\r\nDescription: canary test domain\r\nOwnerEmail: cadence@uber.com\r\nDomainData: map[]\r\nStatus: REGISTERED\r\nRetentionInDays: 3\r\nEmitMetrics: false\r\nActiveClusterName: active\r\nClusters: active, standby\r\nHistoryArchivalStatus: ENABLED\r\nHistoryArchivalURI: file:///tmp/cadence_archival/development\r\nVisibilityArchivalStatus: DISABLED\r\nBad binaries to reset:\r\n+-----------------+----------+------------+--------+\r\n| BINARY CHECKSUM | OPERATOR | START TIME | REASON |\r\n+-----------------+----------+------------+--------+\r\n+-----------------+----------+------------+--------+\r\n```\r\n```\r\ncadence|admin-domain-cli \u21d2 ./cadence --do canary-test admin domain update --scd ./config --sz active --ac standby\r\n2019/10/02 15:12:43 Loading configFiles=[./config/base.yaml ./config/development.yaml ./config/development_active.yaml]\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:12:43.338-0700\",\"msg\":\"Updated dynamic config\",\"logging-call-at\":\"fileBasedClient.go:257\"}\r\nWill set active cluster name to: standby, other flag will be omitted.\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:12:43.342-0700\",\"msg\":\"Update domain succeeded\",\"wf-domain-name\":\"canary-test\",\"wf-domain-id\":\"6f84fea5-5126-4541-8f7d-36faf039530e\",\"logging-call-at\":\"handler.go:575\"}\r\nDomain canary-test successfully updated.\r\n```\r\n```\r\ncadence|admin-domain-cli \u21d2 ./cadence --do canary-test admin domain describe --scd ./config --sz active            \r\n2019/10/02 15:12:45 Loading configFiles=[./config/base.yaml ./config/development.yaml ./config/development_active.yaml]\r\n{\"level\":\"info\",\"ts\":\"2019-10-02T15:12:45.289-0700\",\"msg\":\"Updated dynamic config\",\"logging-call-at\":\"fileBasedClient.go:257\"}\r\nName: canary-test\r\nUUID: 6f84fea5-5126-4541-8f7d-36faf039530e\r\nDescription: canary test domain\r\nOwnerEmail: cadence@uber.com\r\nDomainData: map[]\r\nStatus: REGISTERED\r\nRetentionInDays: 3\r\nEmitMetrics: false\r\nActiveClusterName: standby\r\nClusters: active, standby\r\nHistoryArchivalStatus: ENABLED\r\nHistoryArchivalURI: file:///tmp/cadence_archival/development\r\nVisibilityArchivalStatus: DISABLED\r\nBad binaries to reset:\r\n+-----------------+----------+------------+--------+\r\n| BINARY CHECKSUM | OPERATOR | START TIME | REASON |\r\n+-----------------+----------+------------+--------+\r\n+-----------------+----------+------------+--------+\r\n```  dup of #2651   https://github.com/uber/cadence/issues/2617  Start cadence with clean db setup will sometimes having following errors: \r\nThis will cause serious ServiceBusyError, and break user experience who use docker for integration tests (such as cadence-client integration tests).\r\n\r\n```\r\n{\"level\":\"error\",\"ts\":\"2019-09-27T13:24:48.361-0700\",\"msg\":\"error starting cadence-sys-history-scanner-workflow workflow\",\"service\":\"cadence-worker\",\"error\":\"EntityNotExistsError{Message: Domain: cadence-system}\",\"logging-call-at\":\"scanner.go:164\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Error\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/log/loggerimpl/logger.go:133\\ngithub.com/uber/cadence/service/worker/scanner.(*Scanner).startWorkflow\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/service/worker/scanner/scanner.go:164\\ngithub.com/uber/cadence/service/worker/scanner.(*Scanner).startWorkflowWithRetry.func1\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/service/worker/scanner/scanner.go:150\\ngithub.com/uber/cadence/common/backoff.Retry\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/backoff/retry.go:99\\ngithub.com/uber/cadence/service/worker/scanner.(*Scanner).startWorkflowWithRetry\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/service/worker/scanner/scanner.go:149\"}\r\n{\"level\":\"error\",\"ts\":\"2019-09-27T13:24:54.470-0700\",\"msg\":\"Error refreshing domain cache\",\"service\":\"cadence-frontend\",\"error\":\"ServiceBusyError{Message: Persistence Max QPS Reached.}\",\"logging-call-at\":\"domainCache.go:359\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Error\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/log/loggerimpl/logger.go:133\\ngithub.com/uber/cadence/common/cache.(*domainCache).refreshLoop\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/cache/domainCache.go:359\"}\r\n{\"level\":\"error\",\"ts\":\"2019-09-27T13:24:54.472-0700\",\"msg\":\"Error refreshing domain cache\",\"service\":\"cadence-frontend\",\"error\":\"ServiceBusyError{Message: Persistence Max QPS Reached.}\",\"logging-call-at\":\"domainCache.go:359\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Error\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/log/loggerimpl/logger.go:133\\ngithub.com/uber/cadence/common/cache.(*domainCache).refreshLoop\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/cache/domainCache.go:359\"}\r\n{\"level\":\"info\",\"ts\":\"2019-09-27T13:24:54.521-0700\",\"msg\":\"Get dynamic config\",\"name\":\"history.timerProcessorCompleteTimerFailureRetryCount\",\"value\":\"10\",\"default-value\":\"10\",\"logging-call-at\":\"config.go:58\"}\r\n{\"level\":\"info\",\"ts\":\"2019-09-27T13:24:54.521-0700\",\"msg\":\"Get dynamic config\",\"name\":\"history.transferProcessorCompleteTransferFailureRetryCount\",\"value\":\"10\",\"default-value\":\"10\",\"logging-call-at\":\"config.go:58\"}\r\n{\"level\":\"error\",\"ts\":\"2019-09-27T13:25:04.475-0700\",\"msg\":\"Error refreshing domain cache\",\"service\":\"cadence-frontend\",\"error\":\"ServiceBusyError{Message: Persistence Max QPS Reached.}\",\"logging-call-at\":\"domainCache.go:359\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Error\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/log/loggerimpl/logger.go:133\\ngithub.com/uber/cadence/common/cache.(*domainCache).refreshLoop\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/cache/domainCache.go:359\"}\r\n{\"level\":\"error\",\"ts\":\"2019-09-27T13:25:14.475-0700\",\"msg\":\"Error refreshing domain cache\",\"service\":\"cadence-frontend\",\"error\":\"ServiceBusyError{Message: Persistence Max QPS Reached.}\",\"logging-call-at\":\"domainCache.go:359\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Error\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/log/loggerimpl/logger.go:133\\ngithub.com/uber/cadence/common/cache.(*domainCache).refreshLoop\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/cache/domainCache.go:359\"}\r\n{\"level\":\"error\",\"ts\":\"2019-09-27T13:25:24.475-0700\",\"msg\":\"Error refreshing domain cache\",\"service\":\"cadence-frontend\",\"error\":\"ServiceBusyError{Message: Persistence Max QPS Reached.}\",\"logging-call-at\":\"domainCache.go:359\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Error\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/log/loggerimpl/logger.go:133\\ngithub.com/uber/cadence/common/cache.(*domainCache).refreshLoop\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/cache/domainCache.go:359\"}\r\n{\"level\":\"error\",\"ts\":\"2019-09-27T13:25:34.475-0700\",\"msg\":\"Error refreshing domain cache\",\"service\":\"cadence-frontend\",\"error\":\"ServiceBusyError{Message: Persistence Max QPS Reached.}\",\"logging-call-at\":\"domainCache.go:359\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Error\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/log/loggerimpl/logger.go:133\\ngithub.com/uber/cadence/common/cache.(*domainCache).refreshLoop\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/cache/domainCache.go:359\"}\r\n{\"level\":\"error\",\"ts\":\"2019-09-27T13:25:44.475-0700\",\"msg\":\"Error refreshing domain cache\",\"service\":\"cadence-frontend\",\"error\":\"ServiceBusyError{Message: Persistence Max QPS Reached.}\",\"logging-call-at\":\"domainCache.go:359\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Error\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/log/loggerimpl/logger.go:133\\ngithub.com/uber/cadence/common/cache.(*domainCache).refreshLoop\\n\\t/Users/boweixu/gocode/src/github.com/uber/cadence/common/cache/domainCache.go:359\"}\r\n```  #2697    #2675  Currently the build is blocked by \r\n```\r\n# github.com/uber/cadence/service/history\r\nservice/history/timerBuilder.go:241:4: undefined: log\r\nservice/history/workflowResetor.go:26:2: imported and not used: \"github.com/pkg/errors\"\r\n```\r\n\r\nI will try to create a PR tomorrow to `carlcortright:cc/handle-errors` @carlcortright I have a change ready to push to your PR, but seems that I do not have permission:\r\n```\r\ncadence|fix-build\u26a1 \u21d2 git push -u carlcortright fix-build                    \r\nEnumerating objects: 36, done.\r\nCounting objects: 100% (36/36), done.\r\nDelta compression using up to 12 threads\r\nCompressing objects: 100% (19/19), done.\r\nWriting objects: 100% (19/19), 6.92 KiB | 6.92 MiB/s, done.\r\nTotal 19 (delta 16), reused 0 (delta 0)\r\nremote: Resolving deltas: 100% (16/16), completed with 16 local objects.\r\nTo github.com:carlcortright/cadence.git\r\n ! [remote rejected]   fix-build -> fix-build (permission denied)\r\nerror: failed to push some refs to 'git@github.com:carlcortright/cadence.git'\r\n```\r\n\r\nCould you use [this reference](https://help.github.com/en/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork) and allow me to update your PR? Or maybe this is easier, could you apply this patch? @carlcortright\r\n[fix-build.txt](https://github.com/uber/cadence/files/3715547/fix-build.txt)\r\n  #2624: then add capability to use domain handler from admin domain CLI  Hi @szaluzhskiy , \r\nIn your environment, what client do you use and how do you usually connect with authentication? We use `github.com/olivere/elastic`, I wonder will adding option of `SetHttpClient` help you? ([ref](https://github.com/olivere/elastic/issues/636))\r\n\r\nAlso do you think you can help working on adding this? Because Cadence team doesn't have such authentication in ES so it would be a little bit inconvenient for us to work on it. \r\n\r\n @szaluzhskiy \r\nTo build cadence server, under root `github.com/uber/cadence/` run `make bins` or `make cadence-server`. \r\n\r\n- Then start dependencies systems including database (mysql or cassandra), elasticsearch, kafka&zookeeper.\r\n- Then use ES cadence config by copy `./config/development.-es.yaml` to `./config/development.yaml`\r\n- Then start cadence server by `./cadence-server start`  Currently SQL injection will panic instead of throwing error.\r\n\r\nThis PR fixes these.   > Honestly I feel like I miss too much of the code familiarity of cadence here to be able to fully support this code change. Can someone from the team step in too?\r\n\r\nWe are actually trying to (see https://github.com/uber/cadence/pull/2537#issuecomment-539747740), although we cannot really promise the progress.\r\n\r\nCan you plz take a look at https://github.com/hazcod/cadence/pull/2 ?\r\nWe may have to create multiple PRs to your repo (so it can land in this PR). > Oh apologies, I for some reason thought that was a PR to uber/cadence. Merged!\r\n\r\nThat is fine, since we are also doing server side cleanup, there maybe more PR (there is already one PR merged removing events V1 table & corresponding logic)\r\n\r\nWe probably also need to setup the test correctly, may take some time :)  https://github.com/uber/cadence/pull/2889    CLI: Add support for array type in ES visibility store.   Thank you for making this doc  This caused some keys not able to be queried using local docker.   https://github.com/uber/cadence/issues/2501  Currently for local test search attributes, user need to wait an interval (10s+) for dynamic config take effect. \r\nTo make it easier for dev console team integration test, add their key to default list. \r\n\r\n  This will be useful for query like \"value in field\" for some customers, and helpful for support cadence version probably.   @vancexu is this still relevant?  @snaftaly yes.\r\nWhen list workflows, you will be able to search by `CadenceChangeVersion = <changeID>-<version>`\r\nWhen show history of a specific workflow, you will also see `<changeID>-<version>` in UpsertSearchAttributeEvent.\r\n\r\nNote this feature will require advanced visibility enabled on ElasticSearch. \r\n  @andrewjdawson2016 is this still relevant?  This PR move elasticsearch config under persistence, and renamed related dynamic config to control writing visibility data to advanced visibility data store like ElasticSearch. It will be more cleaner for user to configure ElasticSearch. \r\n\r\nNext, I will support only writing to ES data store.   I think this's still valid if we still have stickTTL.   This should be done as part of host capacity control, i.e. host level coroutine worker pool, mutable state cache  NDC tests are already enabled in build kite  This is for the RPC rate limiter, which is implemented. For protection on task processing side, see #2647  It should work. Maybe worth to try `docker prune`   All CLI operations currently requires domain as global option, to init client and create related metrics. This has a benefit that we can know which domain made the CLI calls. \r\nI agree `get-search-attr` doesn't need domain itself, but I don't think it worth to make the change (because it will be the only cmd doesn't require domain and cannot be tracked), unless we have more commands doesn't requires domain.  ubercadence/server:master is not auto track of Cadence master branch.  Can you also add a brief description for this PR, maybe put a local test result screenshot, so that people know how to use and what is the output \r\nExample: https://github.com/uber/cadence/pull/2219  as part of domain v1 deprecation, domain cache will be refreshed if cache miss & domain accessible from DB    #2454  https://github.com/uber/cadence/pull/2266\r\nhttps://github.com/uber-go/cadence-client/pull/802  Currently, search attributes are not rolled over when continue as new.\r\nNeed to add options for users to choose whether we need copy search attributes in the new run https://github.com/uber-go/cadence-client/issues/798\r\nhttps://github.com/uber/cadence-java-client/issues/347 https://github.com/uber/cadence/pull/2293  handled by NDC transaction manager:\r\nhttps://github.com/uber/cadence/blob/master/service/history/nDCTransactionMgrForExistingWorkflow.go#L434\r\nhttps://github.com/uber/cadence/blob/master/service/history/nDCTransactionMgrForNewWorkflow.go#L287  Currently it is too strict to force user add cluster info for local domain.  For example, https://github.com/uber/cadence/pull/2169 user should only need\r\n `cadence --do samples-domain2 d re` instead of  \r\n`cadence --do samples-domain2 d re --global_domain false --active_cluster active --clusters active`\r\n\r\nThis PR makes global_domain flag optional. It use server side check so that it make sure:\r\nif server enable cross dc then global_domain flag is must provided. \r\n\r\n\r\n > the cluster info is not required:\r\n> https://github.com/uber/cadence/blob/master/service/frontend/domainHandler.go#L117\r\n> \r\n> the one thing that should be done is to drop the requirement of --global_domain flag, so if CLI not seeing that, set \"IsGlobalDomain\" in the register request to be null and let server do the check\r\n\r\nAgree. \r\nThere is a small missing check in frontend leads to default not set correctly. \r\nAfter this PR in local domain register will be simple as previous `cadence --do samples-domain2 d re`  Thank you @khaale for the contribution! \r\n\r\nThis is a breaking change on CLI, which we shouldn't add. \r\nWe are fixing it to make the CLI command in original instruction works.\r\n\r\nThanks again \r\nBowei  There are too many \"the number of auto-reset points is exceeding the limit, will do rotating.\"\r\nTry to suppress this message  close as duplicated of https://github.com/uber/cadence/issues/2138   already using the semver version convention  @longquanzheng is this still relevant?  Should be done as part of https://github.com/uber/cadence/issues/2093  Moved.  I think we need some discussion on the user experience.\r\n\r\nFor example:\r\n\r\n1. Adding new client side API for returning the close status when querying workflow, or just change the existing API? If we choose the later one, it will break existing customer, how to deal with this?\r\n2. Is there any other information we want to add besides close status? Basically, what makes close status so special. It seems reasonable to also add more workflow information.\r\n3. If user really need these information, what prevents them from making an additional `describeWorkflowExecution` API call?  Please get help from the slack channel if it is still an issue for you.  dup of #2651 #2652     Moved.    as part of domain v1 deprecation, domain cache refreshment can be triggered by cache miss & domain existence.  server: https://github.com/uber/cadence/pull/2117\r\nclient: https://github.com/uber-go/cadence-client/pull/781    Mac user may find it easier to use homebrew to install cli.\r\n\r\nAlso remember to update release pipeline to include it.       https://github.com/uber/cadence/pull/1931  > > So it doesn't improve much perf compared to directly using domainCache\r\n> > This patch caches the domain metric scope once it's created not the domain metadata. That's about it. DomainCache caches the domain metadata. And I tend to disagree that it's complicated.\r\n\r\nI am fine to forget about complexity as it's hard to argue. Adding another atomicValue is unnecessary. How about just use domainCache whenever you need to translate from domainID to domainName?   TransactionSizeError should be translated to BadRequest in history handler?  Our SLO needs latency of GetWorkflowHistory but with long poll, the latency is messed up.\r\nFor now I have to remove it from API latency. Once we separate it out, we should put it back  Right now we only record the last started time when writing down the started event. This is super confusing for customers even for us.\r\n\r\nWe don't have to record all of them, but it will be nice to have a limit like at most 5 of them can be recorded down.  #1870    Existing cross DC history replication logic & passive side events storage logic treat transient decision completion (1st batch decision task scheduled + started, 2nd batch decision task completed + other events) as one single batch of events to be replicated to passive side, this behavior is correct since passive side need to guarantee the transactionality.\r\n\r\nAbove behavior however break the new workflow execution reset logic, since this functionality assumes that decision task completed event will always be the first event in an event batch.\r\n\r\nThis PR breaks the single replication message which contains 2 event batches to 2 replication message which each contains 1 event batch. \r\nAdditional logic is added to ReplicateDecisionTaskStartedEvent to handle case if 1st batch is replicated but 2nd batch is not, basically set the decision attempt to 0 so passive side, when turning into active can properly timeout / fail existing decision.\r\n\r\nCorrectness is guaranteed by existing transient decision cross DC integration test. > I'm still not certain why we need separate handling for transient decision. If the decision fails why can't the state machine on passive also go into transient decision than it expects the next transaction to have multiple batches, similar to state machine on active side.\r\n\r\ntransient decision has 2 parts:\r\n1. active side in transient decision, this is correctly handled by passive side\r\n2. active side try to end the transient decision, with decision task scheduled + started as first batch,  decision task completed + decisions + others in the second batch.\r\n\r\nthe 2 above breaks the existing model that one batch of events is one transaction.\r\nif say first batch is replicated to passive while second batch is not, and passive turns into active, history will be corrupted.  This PR contains:\r\n1. A new API `GetSearchAttributes`, which will be used by customers to learn what keys (and value type) they can use. Implemented through dynamic config.\r\n2. Ability to support search attributes on start workflow. This is majorly about persist info in mutable state; pipe to ES; various validation on frontend\r\n I will add xdc integration test in separate PR      @yycptt is this still relevant?  \u2026xpired    * Add CLI support for domain creation, with local / global domain\r\n* Add protection in domain replication against domain name / UUID collision     > `func newErrorTag(key string, value error) Tag { `\r\n> This should not take key as it is ignored.\r\n\r\nWe want to pass in \"error\" key so that the key is explicitly reserved  > I am unable to use docker-compose in our (restricted) environment but am able to use docker command. So, instead, I tried to use the plain docker commands (by following what is in the docker-compose.yml file). However, I am unable to start Cadence due to the error:\r\n> `error: failed to connect to <IP_Address>:9042 due to error: Keyspace 'cadence' does not exist`\r\n> \r\n> Looks like there is some issue with the `cadence-cassandra-tool`\r\n> \r\n> How can I make this work? What else should I do apart from the following docker commands? Thank you for any pointers or suggestions.\r\n> \r\n> Docker Commands Used:\r\n> \r\n> 1. `docker run --name cassandra -p 9042:9042 -d cassandra:3.11`\r\n> 2. `docker run --name statsd -p 8080:80 -p 2003:2003 -p 8125:8125 -p 8126:8126 -d hopsoft/graphite-statsd`\r\n> 3. `docker run --name cadence -p 7933:7933 -p 7934:7934 -p 7935:7935 -p 7939:7939 -d --link cassandra --link statsd -e \"CASSANDRA_SEEDS=cassandra\" -e \"STATSD_ENDPOINT=statsd:8125\" ubercadence/server:0.5.6`\r\n> 4. `docker run --name cadence-web -p 8088:8088 -d --link cadence -e \"CADENCE_TCHANNEL_PEERS=cadence:7933\" ubercadence/web:3.1.2`\r\n\r\nthere is a `start.sh` in the docker dir, please run that script to setup the schema\r\nanother way to initialize the scheme is to call `make install-schema` Confirmed that somehow the cadence-cassandra-tool in docker image is broken. But cadence-server is actually working:\r\n```\r\nlonger@~/gocode/src/github.com/uber/cadence:(log4)$ docker exec -it cadence  ./cadence-server\r\nNAME:\r\n   cadence - Cadence server\r\n\r\nUSAGE:\r\n   cadence-server [global options] command [command options] [arguments...]\r\n\r\nVERSION:\r\n   0.0.1\r\n\r\nCOMMANDS:\r\n     start,   start cadence server\r\n     help, h  Shows a list of commands or help for one command\r\n\r\nGLOBAL OPTIONS:\r\n   --root value, -r value    root directory of execution environment (default: \".\") [$CADENCE_ROOT]\r\n   --config value, -c value  config dir path relative to root (default: \"config\") [$CADENCE_CONFIG_DIR]\r\n   --env value, -e value     runtime environment (default: \"development\") [$CADENCE_ENVIRONMENT]\r\n   --zone value, --az value  availability zone [$CADENCE_AVAILABILTY_ZONE]\r\n   --help, -h                show help\r\n   --version, -v             print the version\r\nlonger@~/gocode/src/github.com/uber/cadence:(log4)$ docker exec -it cadence  ./cadence-cassandra-tool\r\nlonger@~/gocode/src/github.com/uber/cadence:(log4)$\r\n```\r\n\r\nWe will fix that later. For now you can our make command to install schema manually:  Should be similar to our reset canary code > @longquanzheng is this done?\r\n\r\nNot yet. I ended up implementing reset canary but not integ test.     It could be useful for searching domain by partial name/email/etc  close in favor of #1643   Test code are fixed and landed in master. You should be able to land it after rebase, without changing any test code.  The internal metrics cache was written when old metrics client did not cache subscopes and metrics, which caused problems with excessive GC. Tally presently caches all metrics and scopes created within the scope object - so we do not need the metrics cache any more.   the behavior is expected since the underlying domain is essentially a global domain  @yycptt move to client Moved to client side https://github.com/uber-go/cadence-client/issues/697  Since decision tasks in sticky task list expire after 5 seconds it is likely that we have a bug in computing backlog hint for decision tasks in sticky task lists. \r\n\r\nThere are two pieces to this task:\r\n- Check if a bug exists\r\n- Fix the bug if it exists  Currently DescribeTaskList only returns information about the pollers. This API would be more useful if it also included things like backlogHint. This involves cli changes, plumbing through frontend and returning this value out of matching service.  And anything else you think would be useful to return out of matching for visibility into tasklist.  @rajeshbr Are you using Cadence development docker to run this scale test?  My guess is cluster is not provisioned appropriately for the expected workload.  We are still working on documentation for setting up Cadence clusters.  In the meantime I recommend joining our [slack channel](https://join.slack.com/t/uber-cadence/shared_invite/enQtNDczNTgxMjYxNDEzLTI5Yzc5ODYwMjg1ZmI3NmRmMTU1MjQ0YzQyZDc5NzMwMmM0NjkzNDE5MmM0NzU5YTlhMmI4NzIzMDhiNzFjMDM) and we can work through your setup questions there.    When frontend PollForDecisionTask is invoked it will call into matching to get a task to dispatch. The context given to the frontend RPC request is passed along to matching service. If the context times outs then it will time out for both frontend and matching at the same time. A context timeout on matching should return emptyPollForDecisionTaskResponse, but by the time matching gets the context closed and tries to return back to frontend, frontend has already timeout. We then log an error on frontend and emit a timeout metric. This falsely counts against our SLO. What we actually want is for matching to return a emptyPollForDecisionTaskResponse in time for frontend to get that response. \r\n\r\nPossible solution: shorten the timeout on the context given to matching by some very small amount. This will cause matching to timeout still with time to return back to frontend.   I have created a [Security](https://github.com/uber/cadence/labels/Security) label for filing security issues with Cadence server.  I also update the readme with instructions.  In the meantime please file a github issue and label it accordingly.   @yycptt is this still relevant?  It would be useful if cadence server could handle dedupping of signals. I discovered the usefulness of this feature when writing archival signal processing. Basically the customer experience should be that for a target workflow execution only one signal will ever be delivered. If multiple signals are sent then the cadence server will handle dedupping and only deliver one signal.   - Verify code exist to support server side cron i.e. cron state is propagated / persisted in sql\r\n- Fix any gaps in unit / integration tests  The SQL implementation is pretty close in reaching feature parity with cassandra. This is a right time to enable integration tests to run against both {cassandra, sql}.   Will create a failover integration test for cron workflow. The bug still exists for retry and cron workflow if failover happens during the first run. \r\n\r\nPR for the fix and integration test: https://github.com/uber/cadence/pull/1715    Let's sync up with Bowei on the best approach here. He has a lot of context on visibility.   dup of #2651      rerunning tests  @h7kanna option 1) is not going to work as it will break all Cadence dashboards for us.  Let's go with option 2) for now.  I'll try to look into PR this coming week to see if we can get prometheus support landed to master without breaking existing deployments. With #1575, we started dual emitting metrics which should be compatible with prometheus. So should be able to scrape prometheus metrics with the appropriate tally config now.     Allow this is a little bit confusing, will put off doing this. After new visibility completed, we can allow multiple filter. This will be done as part of https://github.com/uber/cadence/issues/1630   Closing this PR in favor of https://github.com/uber/cadence/pull/1471  test test  For troubleshooting seeing the last event first in UI is more useful.  dup of #1323  Let's start this task by showing what we want the response to look like. There are at least three interesting points in time to consider: (1) When the activity is running but retries are not exhausted. (2) Retries are exhausted for activity but workflow is not closed. (3) Workflow is closed. We need to make sure the describe workflow API surfaces correct and informative responses in all these cases.\r\n\r\nLets start by:\r\n1. Figuring out what information we want to surface.\r\n2. Write out sample responses in this ticket.  looks like our timeout for tests is too short as we are adding more tests. I bump it into 15 mins: https://github.com/uber/cadence/blob/master/Makefile#L23 Yes let me close it.   @yux0 @wxing1292 This seems like an old task. Is it still valid?  @meiliang86 is this still relevant?  No I didn't work on that. Wenquan added that API and it's now public. \r\nHere is the API IDL: https://github.com/uber/cadence/blob/master/idl/github.com/uber/cadence/admin.thrift#L54    so that when activity failed, it could report the buffered progress.\r\nCurrently, this is work around by an extra round trip to RecordActivityHeartbeat and then RecordActivityTaskFailed.    Customer want to know the backlog size of pending decision tasks and activity tasks. solved as part of #1122   Should be part of your invariant check? @andrewjdawson2016   Currently there are multiple places which does for loop writing to DB in case of conditional update failure.\r\nWe should re-write those logic.  We were seeing below error from query:\r\ncadence --env autobots -do goautobots-prod-0829-sjc1a_2 wf query -qt state -w 03767417-4de7-45cc-8d32-1af65b8118c5\r\nError: Query failed\r\nError Details: QueryFailedError{Message: Workflow panic: MutableSideEffect with given ID not found during replay}\r\n That particular error means the code is trying to access a MutableSideEffect by an ID, and there is no such event (marker) in the history. I tried that query later and it worked fine.  So I think the reason   was that the query was issued too fast before the worker has a chance to work on the first task on that workflow, so when the query task is delivered to the worker, there is no such event in the history yet and the query would fail. As soon as the worker was able to catch up the decision task, the query should work as expected.\r\nWe need to somehow avoid this error or at least give a more accurate error.\r\n  can we close this issue ? @vancexu    solve #1060  we need to add test to make sure new metrics added correctly without missing things. Added tests to prevent this here https://github.com/uber/cadence/pull/1038    When query on closed workflow by status like completed, it start to kill Cassandra nodes when query over 10M workflows. \r\nNeed to take care of all these performance issues with 2nd index  We decide to use ElasticSearch as visibility data store to resolve this issue.  this is seen using cqlsh, not sure whether the data is persisted as hex or not, need investigation    Every shard has a background job which cleans up the timer and transfer tasks when all the cursors have moved beyond that point.  If for whatever reason a cursor does not moves than we could have shard not delete any timer/transfer tasks. One scenario this could happen is if we have very high traffic on one cluster and very low traffic on another.\r\nThis could become a problem when the failover comes in as now we have to scan over all those stale task for the failed over domain.\r\nWe first of all need to heartbeat from the shard to guarantee cursor will move and then also set up a metric to compute lag on delete cursor to trigger alert if it breaches a threshold.    We saw multiple travis error becuase ([example](https://api.travis-ci.org/v3/job/399745590/log.txt))\r\n\r\n> The log length has exceeded the limit of 4 MB (this usually means that the test suite is raising the same exception over and over). The job has been terminated\r\n\r\nNeed to get rid of some unnecessary info from output.   Apart from this scale issue, there is one bug on showing open workflow for signalWithStart, which is fixed in https://github.com/uber/cadence/pull/974 Visibility sampling https://github.com/uber/cadence/pull/1059  already fixed    The https://github.com/uber/cadence/pull/1196 adds SQL cadence_visibility. @sagikazarmark Our SQL persistence layer is getting pretty close to being production ready.  We are just working towards multiple sql version support and stress testing before we call it production ready.  Let's join [uber-cadence slack channel](https://join.slack.com/t/uber-cadence/shared_invite/enQtNDczNTgxMjYxNDEzLTI5Yzc5ODYwMjg1ZmI3NmRmMTU1MjQ0YzQyZDc5NzMwMmM0NjkzNDE5MmM0NzU5YTlhMmI4NzIzMDhiNzFjMDM ) to explore any opportunities for collaboration.  [These](https://github.com/uber/cadence/labels/sql) are the task items associated with SQL production readiness.\r\n\r\n| Task     |    Category    | ETA   | Notes |\r\n| ------- | ------------- | ------ | ---------------    |\r\n| #1436  | Correctness  | 02/15 | Required for running cadence |\r\n| #1339  | Feature          | 02/15 | Optional feature |\r\n| #1439  | Feature          | 02/22 | Optional feature |\r\n| #1437  | Tests             | 02/22 | Required  |\r\n| #1368  | Feature         | ~03/15 |Optional as of today - but this will be required for running cadence in future  | \r\n\r\n@sagikazarmark - As soon as #1436 is landed, cadence on SQL will be ready for alpha testing.  MaximumBufferedEventsBatch should not be domain specific, but rather a service level protection    solved by #1348, #1353, #1356, #1358  1. Ability to turn on and off cross dc functionality, by dynamic config. (this requires a restart)\r\n2. Ability to turn on and off the replication task generation & transmission to Kafka, by dynamic config. (this requires a restart)\r\n3. Double check on the existing path which use domain's IsGlobalDomainEnabled & cluster metadata's IsGlobalDomainEnabled\r\n4. Double check on the new component, i.e. standby transfer / timer processor, replication task processor, V2 domain table, worker, failover.  this bug should be gone after #777 is merged. \r\nkeep an eye on this issue until confident that this will not re-appear Resolving this.  Reactivate if it happens again.    We should separate msbuilder, into interface and implementation, so we can mock and have better UT coverage.  This PR sit for more than one year and requirements already been fulfilled by other commits.   This issue is there without news for sometime, close it for now, and let us know if more questions  manually tested failover using canary without local activity, mostly works\r\n\r\nthis PR does not deal with shard movements     Tested in my laptop:\r\n\r\n```\r\nlonger@~/gocode/src/github.com/uber/cadence:(admin-dev)$ ./cadence -do test admin wf inq  -w 123\r\n{\r\n  \"shardId\": \"\\u0003\",\r\n  \"historyAddr\": \"127.0.0.1:7934\"\r\n}\r\n```  * bugfix: user timer is not correctly created\r\n* bugfix: hSerializerFactory should be initialized  solve #735  This feature is completed. \r\nWith dynamic config `EnableReadFromClosedExecutionV2` set to true (OSS default is false to avoid breaking change), ListClosedWorkflowExecutions will sort/filter by closeTime.   Yes, let me close it.  * Update Kafka Client to 0.1.7\r\n* Change Kafka Config to make DLQ and retry topics configurable\r\n* Use OffsetNewest instead of OffsetOldest (this is the previous value as well as the default from kafka client)\r\n\r\nfrom https://github.com/bsm/sarama-cluster/issues/133:\r\n```\r\nif the group has been consumed before and the offset exists, \r\nit will always automatically resume from that offset. \r\nThe Consumer.Offsets.Initial setting will only be used if the consumer \r\ngroup doesn't exist or if the stored offset cannot be retrieved (e.g. expired)\r\n```\r\nand\r\n```\r\n        // OffsetNewest stands for the log head offset, i.e. the offset that will be\r\n\t// assigned to the next message that will be produced to the partition. You\r\n\t// can send this to a client's GetOffset method to get this offset, or when\r\n\t// calling ConsumePartition to start consuming new messages.\r\n\tOffsetNewest int64 = -1\r\n\t// OffsetOldest stands for the oldest offset available on the broker for a\r\n\t// partition. You can send this to a client's GetOffset method to get this\r\n\t// offset, or when calling ConsumePartition to start consuming from the\r\n\t// oldest offset that is still available on the broker.\r\n\tOffsetOldest int64 = -2\r\n```  \u2026be set  * bugfix: when creating workflow, the timer / transfer tasks should be updated with corresponding version\r\n* bugfix: when continue as new a workflow, the timer / transfer tasks should be updated with corresponding version  solve #634           * bugfix: replicator should call notify when error is nil\r\n* bugfix: wire missing transfer task retry  \u2026sandra  * add failover trigger to domain cache\r\n* wire failover trigger registration && de-registration to history engine\r\n\r\nsolves #708  * Wire replicator to transfer / timer task generation\r\n* Add failover version checking on transfer / timer task\r\n* Deprecate existing transfer queue test in favor of new tests powered by mocks.\r\n\r\nAfter this PR, we need to throughly test the domain failover.\r\n\r\nWe probably should also rewrite the timer active processor test, using mocks\r\n\r\nsolves #567 #568    We can make decision timeout optional on the server and default to some reasonable value.  The default value needs to support override per domain. decision mac start to close timeout is default to 4 min:\r\nhttps://github.com/uber/cadence/blob/master/service/history/service.go#L196  deprecate in favor of #829 deprecate in favor of #829  if travis could not build, just change this line:\r\nhttps://github.com/uber/cadence/blob/master/.travis.yml#L26  \u2026rom race condition, causing the imminent timer fired event to be lost.\r\n\r\nperformance impact:\r\n\r\nafter the change:\r\n```\r\ncadence|timer-bug \u21d2 go test -cpu=1 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer \t100000000\t       107 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t10.931s\r\ncadence|timer-bug \u21d2 go test -cpu=1 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer \t100000000\t       100 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t10.205s\r\ncadence|timer-bug \u21d2 go test -cpu=1 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer \t100000000\t       108 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t10.945s\r\ncadence|timer-bug \u21d2 go test -cpu=4 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer-4   \t100000000\t       211 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t21.347s\r\ncadence|timer-bug \u21d2 go test -cpu=4 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer-4   \t100000000\t       193 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t19.484s\r\ncadence|timer-bug \u21d2 go test -cpu=4 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer-4   \t100000000\t       236 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t23.771s\r\n```\r\n\r\nbefore the change:\r\n```\r\ncadence|master \u21d2 go test -cpu=1 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer \t200000000\t        88.8 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t26.831s\r\ncadence|master\u26a1 \u21d2 go test -cpu=1 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer \t200000000\t        86.9 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t26.456s\r\ncadence|master\u26a1 \u21d2 go test -cpu=1 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer \t200000000\t        88.1 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t26.589s\r\ncadence|master\u26a1 \u21d2 go test -cpu=4 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer-4   \t100000000\t       183 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t18.578s\r\ncadence|master\u26a1 \u21d2 go test -cpu=4 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer-4   \t100000000\t       185 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t18.653s\r\ncadence|master\u26a1 \u21d2 go test -cpu=4 -benchtime=10s -benchmem -run=^$ github.com/uber/cadence/service/history -bench ^BenchmarkLocalTimer$\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: github.com/uber/cadence/service/history\r\nBenchmarkLocalTimer-4   \t100000000\t       179 ns/op\t       0 B/op\t       0 allocs/op\r\nPASS\r\nok  \tgithub.com/uber/cadence/service/history\t18.042s\r\n```\r\n\r\nthe performance impact is ~<20% latency increase, which is negligible    \u2026o as to deal with case when events are overwritten.\r\n\r\npartially solve #678  solve #622 \r\npartially solve #678       First admin CLI: https://github.com/uber/cadence/pull/762 MutableState visibility \r\nhttps://github.com/uber/cadence/pull/805  #667 only fix the issue that whenever a err occur, the mutable state cache should be cleared.\r\nHowever, there are cases which the mutable state is not touched, and the mutable state cache can be left intact.\r\nWe should optimize those cases, especially the EntityNotExists error case. @wxing1292 Is this still relevant?  \u2026fully  \u2026 counter before return  separate queue ack mgr into separate file\r\n\r\nReview #648 first, since this PR contains some code from #648\r\n\r\nsolve #564 \r\npartially solve #566  #2413   @mfateev What is the benefit of using child workflow if we have this?  \u2026ne being actually deleted in Cassandra  will keep open until we decided to do the update  * bugfix: update mutable state to handle duplicated update activity / user timer for better Cassandra performance\r\n  UT in next PR  partially solves #564   Partially solve #565  Current implementation has an assumption that during a domain failover, the host will not shutdown. @yux0 @wxing1292 Is this still relevant?  partially solve #633  * add standby timer processing logic, separate existing timer processing logic into active & standby\r\n* rename timer gate to local timer gate, add remote timer gate\r\n* add local time / remote time to shard context\r\n\r\nNote: \r\nUT for standby timer processor in #648\r\nDB change adding failover version in timer info in next PR\r\nActual failover for timer in #648\r\n\r\nPartially solve #565\r\n  failover version check of activity / decision / user timer / workflow timer in next PR.\r\ntimer failover in next PR  \u2026 failover version  \u2026to timer queue processor to be cluster aware\r\n\r\nrename SequenceID -> TimerSequenceID\r\n\r\nStandby timer processing logic && domain failover timer ack manager scan DB for domain specific timer in next PR.\r\n\r\nPartially solve #565  Partially solve #565  looks like we have a dedicated replication task queue, does that means each host will start additional # of shard of go routine for acking & processing replication task?  implement standby timer processor, which keeps standby timers which are fired.\r\nrename SequenceID -> TimerSequenceID\r\n\r\nNote:\r\nHandling current domain become active, i.e. redirect current timers to timer queue processor is in next PR.\r\nHandling of other domain become active is TBD, probably need to rebuild timers for workflow being active in other cluster close this PR since this solution cannot handle host restart, should rely on mutable state instead  same as https://github.com/uber/cadence/issues/1524  \u2026te existing domain      When a host try to grab a shard, it will first get the shard and then update the shard.\r\nIf still just query one Cassandra host, for shard info, the case below can happen:\r\n\r\nduring deployment, a host try to grab a shard which is no longer been hold by previous generation of host, and cannot acquire the shard (by update shard) due to a Cassandra host is lagging behind.\r\n\r\n\r\n\r\n\r\n   The conclusion is visibility part only provide eventually consistency, close PR  \u2026e corresponding \u2026 (#601)\" (#611)\"\r\n\r\nThis reverts commit dff860e15f2b1cbac4add5a66d79aaed77764ba3.  \u2026ponding \u2026 (#601)\"\r\n\r\nThis reverts commit 6164b73da4a2d57fd78f3351033e53c93f886cb7.\r\n\r\nThis revert is done because a patch should be added to the release  solve #609   See above, moreover, timerAckMgr it self does not come with enough (if there is any) test.\r\nApart from that, i believe the timer processing logic can miss timers by creating timer in the \"past\", i.e. timer created before read level / ack level  \u2026e deadlock, if child workflow, at the same time, is completed.  @samarabbas maybe we can include this patch in the release keep this PR open, until we finish the cross DC work and then refactor the timer logic.  2. send visibility time through channel instead setting minPendingTimer\r\n3. increase history cache size from 256 to 512, note, this value was previously 1024  \u2026events for decision will have exactly the same order and no irrelevant event will be inserted in between, so client can predict the event ID of a corresponding decision.\r\n\r\ntested using canary\r\n\r\ncounterpart: https://github.com/uber/cadence/pull/600  \u2026events for decision will have exactly the same order and no irrelevant event will be inserted in between, so client can predict the event ID of a corresponding decision.\r\n\r\ntested using canary\r\n\r\ncounterpart: https://github.com/uber/cadence/pull/601 close in favor of #601   maybe already solved by: \r\nhttps://github.com/uber/cadence/blob/master/service/history/historyEngine.go#L1052      bugfix: missing cql change file in schema version update    solve #569      at least the workflow execution reset logic use this cause as indication that workflow is resetted  New cadence-worker service and bootstrap code to bring up the new\r\nservice.  This service currently only host the replicator which consumes\r\nreplication tasks from kafka topic and applies to current Cadence\r\ncluster.\r\n\r\nMessagingClient interface abstract out interaction with Kafka.\r\nKafkaClient provides implementation for the interface using kafka-client\r\nlibrary which consumes messages from Kafka broker.\r\n\r\nCreated separate Kafka configuration used for bootstrapping the\r\nKafkaClient created during service startup and passed down to\r\nreplicator.\r\n\r\nCreated replicator.thrift which defines the payload which is sent over\r\nto other clusters through KafkaClient.  workflow execution context already honor the input context   since there is an agreement that variable control will only be present in the RequestCancelExternalWorkfllowInitiated event, and we use initiated event ID for mapping from history event to state machine, this issue is no longer relevant  Emit a server-side metric on RespondDecisionTaskCompleted with empty decisions. You can talk to @yycptt or @yux0 for context.  Domain on StartChildWorkflowExecution is only used for cross domain\r\ncalls.  Fixed the incorrect condition on history engine which was\r\ncausing panic when domain attribute was not specified.  Also added logic\r\nto inherit tasklist, decision timeout and workflow timeout from parent\r\nexecution when they are not provided on decision attributes.\r\n\r\nUpdated ContinueAsNewDecision validation logic to inherit\r\nWorfklowTimeout, Tasklist, DecisionTimeout and WorkflowTimeout from\r\nprevious execution.\r\n\r\nfixes #554  We have a domain cache which can be used for both domain or domainUUID lookup.  In this case changing the incorrect if condition is enough as domain is optional parameter and is only used for cross domain calls.  \r\nAs for the Nil ChildPolicy I'll fix the panic on server but it is a required parameter.  I'll put validation and fail the decision if ChildPolicy is not set.\r\nLet me prepare fix for both issues. Yeah I know.  I have all the places fixed.  Will send out PR soon. Not sure about inheriting ChildPolicy from parent but updated the validation logic to inherit Tasklist, WorkflowTimeout and DecisionTimeout from parent.  \r\nLet's talk about ChildPolicy on Monday.    Created one for Java https://github.com/uber/cadence-java-client/issues/442  Related: https://github.com/uber/cadence/issues/531\r\nThis fix will handle case when workflow try to signal itself  @bayesianmind, your prototype makes sense for the workflow to workflow communication. But it is not solving the original use case of an external processes invoking the request/reply operation on a workflow and if this operation is not applicable not recording it into the history. Also, ideally the external client should be able to use a long poll to wait for a request completion the same way it is already possible to wait for a workflow completion.  Fixes https://github.com/uber/cadence/issues/533  Thanks for bringing this up. Will send out a fix shortly. Fixed, let me know if you run into anything.  Current we return the following error message on activity completion:\r\nEntityNotExistsError({Message:Activity task not found.})\r\n\r\nIt would be great if we can return more context like cannot find the activity because workflow completed.  solves #491 \r\nthis commit depends on #527  Heartbeart timeout fixes to create next timeout if first heartbeat timer\r\nfires and activity is heartbeating.\r\n\r\nAlways include ScheduleToClose timeout when creating next activity\r\ntimeout.\r\n\r\nFix logic for correctly setting TimerCreated flag on TimerDetails.\r\n\r\nRemove redundant code for all activity APIs from history engine.  \u2026ersistence layer, refactor existing domain cache\r\n\r\nsolve #493 #495    Warn logs are clogging up disk space in matching service.  We seems to be emitting a warning log every time message is throttled due to rate limit.  This is resulting in disk being filled up on matching host due to aggressive throttling.   There are 2 issues here:\r\n1) rate limiting logs should not be warn level.  We should log them as info with domain and tasklist name.\r\n2) We should emit these logs like once every 5 minutes or so instead of emitting them on each throttled request.  Related issue: https://github.com/uber/cadence/issues/515\r\n\r\nAlso changed existing methods that use domainCache.GetDomain() to use domainCache.GetDomainID()  Related to https://github.com/uber/cadence/issues/514    runtime.Caller does not return absolute path in all cases. Changed to pass in the root path so dependent repos can send in appropriate roots.  DomainID is an internal identifier to Cadence server.  We should not be leaking these identifiers to Cadence clients.  Update RespondActivityTaskCompletedByID API on server to take in domainName instead of domainID. @ryanwalls we are planning to take up this task next week. @ryanwalls This issue was fixed. Please let us know if anything else is needed.  This will delete sticky task list in one day after no ack update happens for that task list. \r\nRelate issue: https://github.com/uber/cadence/issues/472\r\n Manually test old client works, but in that case the tasklist will be treated as NORMAL all the time and wouldn't be removed automatically.  Currently, the schema check is using the running directory which will not work if a different repo is using it. Change it to be the directory of this specific file so that even if run from another repo, it will pick the right schema file so it can be used internally. Note: Unclear why the idl gen is tagging along. Likely was missed in an earlier PR with a thrift update.    While using CLI to get history, I encountered this \r\n```\r\nboweixu$ cadence --domain \"samples-domain\" show --wid signal_source_bd830b51-ffc2-4481-a23a-dbbf49debdc1\r\ncode:deadline-exceeded message:timeout\r\n('export CADENCE_CLI_SHOW_STACKS=1' to see stack traces)\r\n```\r\nThe cmd stuck for a few seconds and then show error timeout.\r\n(I suspect when decision is started but yet completed, get history will have issue)\r\n\r\nAfter workflow timeout, get history work as expected and return the following:\r\n```\r\n1, 2018-01-10T16:57:17-08:00, WorkflowExecutionStarted: (WorkflowType:(Name:code.uber.internal/devexp/cadence-samples.git/cmd/samples/recipes/signal.SampleSignalWorkflowSource), TaskList:(Name:signalGroup), Input:[], ExecutionStartToCloseTimeoutSeconds:180, TaskStartToCloseTimeoutSeconds:180, Identity:25769@boweixu-C02V61JZHTDG@)\r\n2, 2018-01-10T16:57:17-08:00, DecisionTaskScheduled: (TaskList:(Name:signalGroup), StartToCloseTimeoutSeconds:180)\r\n3, 2018-01-10T16:57:17-08:00, DecisionTaskStarted: (ScheduledEventId:2, Identity:25684@boweixu-C02V61JZHTDG@signalGroup, RequestId:9e5d3104-a210-4f33-9fdb-036d705cc97d)\r\n4, 2018-01-10T17:00:17-08:00, WorkflowExecutionTimedOut: (TimeoutType:START_TO_CLOSE)\r\n```\r\n\r\n\r\n Please hold on investigate this. I need to reproduce with latest master branch before investigate.  RecordChildWorkflowCompletion is missing handling for child execution\r\ngetting timedout event.  This results in a empty decision task getting\r\ncreated without the ChildWorkflowExecutionTimedOut getting recorded in\r\nhistory.\r\n\r\nfixes #503   tested using 2 canary running concurrently  client change:\r\nhttps://github.com/uber-go/cadence-client/pull/338  When decision goes into retry loop due to DecisionTimeout or\r\nDecisionFailed, and then eventually completes we write incorrect\r\ntasklist name on DecisionTaskScheduledEvent for the transient decisions.\r\nAlso DecisionAttempt got incorrected removed due to bad merge, so\r\nputting that back in.\r\n\r\nfixes #498     \u2026 the current execution when finished, we should do a conversion  \u2026vent of when dumping history events\r\n\r\nwhen long poll on end event, use history service for end event\r\n  \r\n#470 experienced some weird issue when merging to master, redo the commit\r\n This PR was reviewed earlier by me.  Cadence Failures are used to determine availability and marking all errors as CadenceFailures were causing availability drops. Created new tags for history/matching that can be tracked independently.      solves #477 @vancexu cassandraPersistenceClientFactory.go and shardContext.go @yiminc \r\nhttps://github.com/uber/cadence/pull/484#pullrequestreview-85760683\r\nA1: I change the # of shards from 4 to 16384, and launch the service, check the memory usage using pprof, which is ~7G (used by this tagged metrics client), I change to this bugfix, and redo the check, the memory usage is ~ 3-4 G. so issue fixed.\r\n\r\nA2 & A3: since the tagged metrics client is per shard (from the original code), i assume that we need to continue to do that.\r\n  DescribeTaskList return poller information, which contains the poller identity and last time this poller poll a given tasklist.\r\n\r\nsolve #467, #365, #144\r\n        bugfix timer queue processor, change history cache size from 1024 to 256\r\nsolve #411    > I don't think this is a bug\r\n\r\nwhy?\r\nif you try to build a branch and you make a typo in the branch name, docker will continue to build and nobody will understand why the change is not included.    \u2026vent of when dumping history events  Don't think we need it anymore  Added as part of:\r\nhttps://github.com/uber/cadence/pull/486   Add Sticky Query to Cadence Server\r\nAdd field in QueryWorkflowRequest, specifying whether to use sticky tasklist for query  solves #40 @mfateev could you take a look?  Fix as part of:\r\nFix workflow timeout not created for new execution when ContinuedAsNew (\r\n#487)  This reverts commit 9314ff5b5d1a1966b13ce0d7caa75be446d5b5bb.\r\n\r\nRevert sticky query server side change for release.\r\nWill reapply after the release  solves #405\r\n\r\nclient side change: https://github.com/uber-go/cadence-client/pull/308  fix linter  fixed in #528   Schema validation on startup to prevent code from running into incompatible cassandra schema.    Made this a separate PR from https://github.com/uber/cadence/pull/432\r\nYarpc upgrade pulls in these files  duplicate of #511   Fixes https://github.com/uber/cadence/issues/50  Fixed in #555   This only includes thrift changes in case there are questions on that.\r\nI did not change the \"TaskList\" structure directly because it is used in a number of other APIs, and it would be more confusing and error prone to have a throttling RPS on all these APIs (eg. StartChildWorkflow, ScheduleActivity etc.) @samarabbas @mfateev Looks good post-meeting?  Today we open sourced the web UI for Cadence server: https://github.com/uber/cadence-web\r\n @ryanwalls give it a try and resolve this task if you think this is good enough for your needs. @ryanwalls closing this issue for now.  Feel free to file feature requests on [cadence-web](https://github.com/uber/cadence-web) repo.  due to change of plan, close this issue  Shard can be down for longer than workflow timeout. In that window, workflow would be missing from both open and closed if we set a short buffer.  Created an issue for this already :) https://github.com/uber/cadence/issues/397 closing as duplicate  With schema changes, if code is deployed without the corresponding schema changes, the server does not report clear errors. This manifests elsewhere and makes it harder to debug.\r\n\r\nOn startup, server should verify that the schema is of the right version and fail on startup if not. From @venkat1109 -\r\nSince the schema is already versioned, a somewhat better approach here would be for the server to watch the schema version in the background and abort itself when there is a mismatch.    Related PR #1352 #1377 #1411  Yes, it should be closed @dmetzgar let's have some document for external customer: https://github.com/uber/cadence/pull/1821  Server can leak decision task metadata (type = 0, taskid = -12345) if there are no pollers.\r\nNeed to have a way to clean those left tasks. I think this issue is still there, but relatively not important/urgent, since it's a rare case there are only tasklist but no pollers. \r\nOne way to fix is to add some sort of scanning, which I think is on the road map.    also remove duplicate export PATH in Makefile    When history service comes up it creates a gocql client for execution manager and then uses the same client for all shards for making persistence calls.  Also created config knobs to configure number of connections for both events and execution maanger clients.\r\n\r\nfixes #307   Fix incorrect condition on updating shards.\r\nReset lastUpdated time after each successful shard update.    Remove noisy persistence logs. fixes #313   @szaluzhskiy I'd like to understand your requirements a bit more. For tracing support, we are looking at adding opentracing support in cadence which should allow you to use zipkin. But limiting what information we save from the tracing baggage is likely not possible.. \r\n\r\nFor the use case of sending sensitive data and ensuring it isn't saved anywhere in Cadence - is that related to tracing data or some separate requirements around authorization/tenancy?\r\n > Talking about sensitive information, I agree it's minor point in dealing with traces in Cadence.\r\n> And at the same time it's important as separate requirement to think how to get around of authorization, because Cadence is storing state of workflow. And workflow can has a sensitive info in state variables. If have any kind of guide how to deal with sensitive data in Cadence you are welcome to share it.\r\n\r\nFor storing sensitive information Cadence provides a `DataConverter` interface in the both [Go](https://github.com/uber-go/cadence-client/blob/master/encoded/encoded.go) and [Java](https://github.com/uber/cadence-java-client/blob/master/src/main/java/com/uber/cadence/converter/DataConverter.java) clients. While the server itself does not look at or do anything with the data stored, the DataConverter will ensure that sensitive information isn't stored in plain on the server side..  #1731   RPC stack used by Cadence does not support cancel propagation through\r\ncontext and this results in tasks being dispatched to zombie pollers\r\nwhen client connection is closed.\r\nUpdated mathcing engine api for PollForDecisionTask and\r\nPollForActivityTask to alsoo take in pollerID.  Also added new API on\r\nmatching engine to CancelOutstandingPolls given pollerID.\r\nFrontend handler for Poll API generates pollerID before calling the\r\ncorresponding API on matching engine, if the call fails due to context\r\ncancellation it calls the CancelOutstandingPoll.\r\n\r\nFixes Issue #254   Is this even needed after support for sticky query? close this task since sticky query is already rolled out  TaskListManager needs range to updated before starting task writer so it\r\ncan initialize max read level correctly using the initialized\r\ntaskSequenceNumber on TasklistMgr.  If ordering of reversed then\r\nMaxReadLevel is initialized incorrectly to -1 and will rely on a task to\r\nbe written before it can be set to correct value.  This results in\r\nGetTasks to use incorrectly initialized MaxReadLevel and will never read\r\ntasks from persistence store.  We are actually redoing our RPC stack for Cadence, so we can easily plug-in various protocols like http, grpc, etc.  \r\nLet's keep this issue active until we land our new RPC stack and have support for http. @ryanwalls API compatibility with SWF is not in scope for this work.      History engine appends events to history irrespective of whether a decision is outstanding or not.  This introduces challenges on the client side where history events need to be reorder to guarantee determinism.\r\nThe idea is to buffer new events within mutable state and append to history once the outstanding decision either completes or times out.  Handle EntityNotExistError in the processing of transfer task for\r\nStartChildExecution.\r\n\r\nFixes #304   Issue #327  Issue #330   Can you clarify what you mean by \"workflow engine in a traditional sense\"?  Most of the \"traditional\" workflow engines expose some kind of DSL to represent long running applications.  In that sense both Cadence and AirFlow are non-traditional engines as they allow users to express their application as regular code.\r\nHaving said that, it should be pretty straightforward to expose any DSL on top of Cadence.  Here is an example which how to write a workflow definition which parses a DSL and executes steps in the provided definition:\r\nhttps://github.com/samarabbas/cadence-samples/tree/master/cmd/samples/dsl\r\n Resolving this task as I have answered the original question.  \r\nFeel free to reactivate if you have more questions.  The RangeID check is sufficient to guarantee correctness, due to our strict requirements that the cache of the shard owner always be up to date.\r\nRemoving the conditional check in UpdateWorkflowExecution query will make the operation more efficient, as the only thing that needs to be read during the first phase of Cassandra's CAS is the RangeID (which is read/written frequently that it is almost certain to be in the memtable or L1 SSTable).\r\nWe won't need to go through the SSTables to read the execution records, which saves a bunch of read operations. This might just result in perf optimization.  Not a correctness issue.  Issue #312   Handle overload errors returned from Cassandra differently from timeouts and internal service errors.\r\nThis is because in the case of throttling errors we know that the query never executed, so we do not have to invoke the cache consistency maintenance part.\r\nIssue #300  Issue #308  Issue #286  ShardContext is a history service concept, and does not belong in the persistence package.\r\nThis change refactors test code to move testShardContext to the history package.\r\nIssue #109   Replace constant config with a config struct that can be passed to the service during initialization.\r\nIssue #286  History will be done in a separate PR as it will need more serious refactoring (#109) first  We observed that when executing CAS queries on static fields, the coordinator issues a range query during the read phase of paxos with LIMIT 1.\r\nThis is problematic, as it causes table scans when only a point query is needed.\r\nThis change turns RangeID into a non-static column to avoid this problem.\r\n\r\nThis change also reverts the gc_grace_seconds setting back to default 10 days to avoid masking similar issues by fast removal of tombstones.\r\nIssue #277   The CreateTasks query used to write task list tasks to persistence includes a CAS check that verifies that the rangeID has not changed.\r\nThe rangeID is a static field in the tasks table, and Cassandra only accepts the partition keys (but not the other clustering keys) in the CAS query to read and update it.\r\nThis unrestricted query however causes problems when there is a big backlog in the task list as the coordinator automatically turns it into a LIMIT 1 query.\r\nTo fix this we restrict the query with clustering keys, and rewrite non-static fields so that Cassandra accepts the query restrictions.\r\nIssue #277   Concurrent Cassandra LWT to the same partition are known to cause timeout errors.\r\nThis change ensures that all LWT to a task list are serialized by using a mutex.  Make token fields public so they can be serialized properly.\r\nAlso change integration test page size to force pagination path to be exercised.\r\nIssue #282   Simple RPS throttling at the cadence frontend level\r\nIssue #61  Currently, failing to completely process one transfer task (e.g. because matching engine is down, or visibility store write is failing) would block the progress of the transfer queue processor goroutine (and, in extreme cases, causes the entire history service node to log fatal and restart).\r\nInstead of blocking, it is better to rewrite the task back to cassandra with a higher task ID. This allows processing other tasks until the task is picked up again, and hopefully the reason for failing to process the task in the first place would be resolved by that time. Also consider writing to a side / dead-letter queue and alert when processing repeatedly fails so that the failures can be inspected (e.g. a bug in the code prevents task from being processed)  This way the progress of the workflow is not blocked on the visibility store operation.   > @vancexu will you support counts on ES?\r\n\r\nYes. Server side count API already merged.\r\nhttps://github.com/uber/cadence/issues/1547  Issue #269 #272  - Need to create transfer task and timer task for deleting execution and timer for retention on the history events.  - We need to create transfer task and timer task for deleting execution and timer for retention on the history events. This mixed up from a change that is still in review. going to send out again.    I believe I understand what was going on here. This should be fixed by #271.\r\nMore details:\r\n\r\nIn the past the only way the matching engine would detect that it no longer owns a task list was when it attempts to write a task to Cassandra and fails due to RangeID condition. Due to sync matching, writing tasks to Cassandra is rare. \r\nIf a matching engine loses the ownership of a task list and gets it back, it would not recognize that it was lost (until it tries to write to Cassandra). This could lead it to be unaware of tasks that were written to Cassandra in the period the ownership was lost.  - Refactor them in to Load/Add/Get methods.\r\n- Fail the decision on duplicate timer ID.  - Add another timer task to track the workflow execution start to close timeout.\r\n- Add integration test for workflow timeout.  Timer processor to checkpoint ack level frequently.\r\nTimer processor to use addition 64bit for sequence number for same time resolution. At this time the main purpose of ack manager is to keep track of in progress tasks and making sure there is nothing left before when we move ack level. We could use cassandra query to figure that out  but we are trying to reduce these range queries as much as possible.  No deadlocks found  #2499   We discussed and came to the conclusion that there isn't that much benefit to be gained from doing this. There is a common component that has the code to serialize/deserialize the token, which is used by all services so there is no code duplication.  The only way we support failing the decision is DecisionTimeout.  It may make sense in certain cases where we can explicitly nack a decision so it is picked up by another decider for faster processing instead of waiting for the decision timeout.  History engine has validation logic for timeout for ActivitySchedule decisions.  Currently we just fail the decision with BadRequestError, which is wrong.  We instead need to recordActivityTaskScheduleFailedEvent in the history and schedule another decision task.\r\nAnother thing is error messages are actually quite bad, we need to specify separate errors if some required field is not specified versus if the value is invalid like negative timeouts.\r\n\r\nif attributes.GetStartToCloseTimeoutSeconds() <= 0 {\r\n\t\t\t\t\treturn &workflow.BadRequestError{Message: \"Missing StartToCloseTimeoutSeconds in the activity scheduling parameters.\"}\r\n\t\t\t\t}\r\n\t\t\t\tif attributes.GetScheduleToStartTimeoutSeconds() <= 0 {\r\n\t\t\t\t\treturn &workflow.BadRequestError{Message: \"Missing ScheduleToStartTimeoutSeconds in the activity scheduling parameters.\"}\r\n\t\t\t\t}\r\n\t\t\t\tif attributes.GetScheduleToCloseTimeoutSeconds() <= 0 {\r\n\t\t\t\t\treturn &workflow.BadRequestError{Message: \"Missing ScheduleToCloseTimeoutSeconds in the activity scheduling parameters.\"}\r\n\t\t\t\t}  We mark the workflow execution row with a TTL in executions table on completion.  This takes care of workflow execution entry in executions table but we still need leak space in the events table as we don't cleanup the history associated with that execution.\r\nWe could use the timer queue processor for this purpose and queue up a timer task to delete the execution history after retention period.  Hopefully, execution history should never get corrupted. If, for any reason (bugs?) we get into a state where this happens we should not just return a retriable error to the callers.  When decider responds back with complete workflow decision, we first update the execution with new events and then delete workflow execution as a separate transaction.  This can cause issues when the update times out but we successfully apply the update.  This can cause us to never delete this workflow execution.\r\nWe need to make sure that execution is update and deleted in the same transaction. This sounds much cleaner approach.  Let me code up the fix using transfer task. Fixed.  If RespondDecisionTask sends in bad request or corrupted data than we just silently ignore the activitySchedule decisions.  Instead we need to add relevant failure like ActivityTaskScheduleFailed event and then also create a new DecisionTask for the decider.  Here is an instance of the failure:\r\n{\"RunID\":\"c09c5b10-d240-4f8b-bc4c-5735c0bb3805\",\"ScheduleID\":212,\"Service\":\"cadence-frontend\",\"WorkflowID\":\"48018f57-0c39-4d4e-b055-e3df3fff7464\",\"level\":\"error\",\"msg\":\"RespondDecisionTaskCompleted. Error: BadRequestError({Message:Missing StartToCloseTimeoutSeconds in the activity scheduling parameters.})\",\"time\":\"2017-03-07T13:56:56-08:00\"}  This is for monitoring purpose, cli style scenarios.  This allows us to get call-stacks, debug stuck issues, etc without hosting decider implementation.    Cadence is a multi-tenant service and we need to protect against single bad user bringing the entire system down.  This task is to implement basic throttling and quotas for each client.  This is very useful for supporting scenarios like storing config as a custom event when the workflow execution is started.  This will allow users to make configuration changes without breaking running instances.  This is to enable the scenario to give higher priorities to task for outstanding workflows rather than newer ones. So we can complete outstanding ones faster in the event of backlog.   core functionality is implemented and rolled out\r\nremaining issue is tracked in #2473 #2483    Users want to throttle the number workflows (or activities) being executed per second. For eg. User has workflow with activity that calls downstream service foo. foo has a TPS limit that user has to abide by. We want to expose configuration to users that will limit how many workflows (and in turn calls to downstream services) are executed in a time duration.   close in favor of #1272        For example: updated_at.  Currently Cadence has support for dedupe on workflow-id if the execution is still running. There are scenarios where workflows are fast running and completes immediately, so it would be super useful to have support for dedupe on workflow-id on completed executions also. We would want the following semantics for start workflow:\r\nWhen creating workflow specify condition like: allowDuplicate, allowDuplicateFailedOnly, rejectDuplicate.\r\nThen specify IF NOT EXISTS or condition on the status based on that condition.  Currently all timers are created on each activity and decision task.  We need to implement the logic to create a single timer for each workflow execution and set the next earliest timer when that one fires.  ", "text_all_count": 17389, "text_word_token": ["Moved", "to", "LINK", "go", "cadence", "client", "issue", "NUMBER", "Following", "unit", "test", "be", "fail", "can", "you", "please", "fix", "them", "FAIL", "TestVisibilityArchiverSuite", "TestArchiveAndQuery", "NUMBER", "s", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Trace", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "should", "have", "NUMBER", "item", "s", "but", "has", "NUMBER", "Test", "TestVisibilityArchiverSuite", "TestArchiveAndQuery", "FAIL", "TestVisibilityArchiverSuite", "TestArchiveAndQueryPrecisions", "NUMBER", "s", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Trace", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "should", "have", "NUMBER", "item", "s", "but", "has", "NUMBER", "Test", "TestVisibilityArchiverSuite", "TestArchiveAndQueryPrecisions", "Messages", "Iteration", "EXTRA", "int", "NUMBER", "FAIL", "TestVisibilityArchiverSuite", "TestQuery_Success_NoNextPageToken", "NUMBER", "s", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Trace", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "should", "have", "NUMBER", "item", "s", "but", "has", "NUMBER", "Test", "TestVisibilityArchiverSuite", "TestQuery_Success_NoNextPageToken", "FAIL", "TestVisibilityArchiverSuite", "TestQuery_Success_SmallPageSize", "NUMBER", "s", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Trace", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Expected", "value", "not", "to", "be", "nil", "NUMBER", "Test", "TestVisibilityArchiverSuite", "TestQuery_Success_SmallPageSize", "Multiple", "test", "fail", "with", "the", "following", "error", "NUMBER", "Seems", "like", "a", "config", "problem", "for", "unit", "test", "NUMBER", "FAIL", "TestVisibilityArchiverSuiteSuite", "TestArchive_Fail_InvalidVisibilityURI", "NUMBER", "s", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Trace", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Received", "unexpect", "error", "dialing", "google", "could", "not", "find", "default", "credentials", "NUMBER", "See", "LINK", "default", "credentials", "for", "more", "information", "NUMBER", "There", "be", "still", "two", "test", "fail", "FAIL", "TestVisibilityArchiverSuiteSuite", "TestArchive_Fail_InvalidVisibilityURI", "NUMBER", "s", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Trace", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Received", "unexpect", "error", "dialing", "google", "could", "not", "find", "default", "credentials", "NUMBER", "See", "LINK", "default", "credentials", "for", "more", "information", "NUMBER", "Test", "TestVisibilityArchiverSuiteSuite", "TestArchive_Fail_InvalidVisibilityURI", "FAIL", "TestVisibilityArchiverSuiteSuite", "TestQuery_Fail_InvalidVisibilityURI", "NUMBER", "s", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Trace", "visibilityArchiver_test", "NUMBER", "go", "NUMBER", "Error", "Received", "unexpect", "error", "dialing", "google", "could", "not", "find", "default", "credentials", "NUMBER", "See", "LINK", "default", "credentials", "for", "more", "information", "NUMBER", "Test", "TestVisibilityArchiverSuiteSuite", "TestQuery_Fail_InvalidVisibilityURI", "I", "believe", "the", "code", "use", "this", "tag", "was", "already", "delete", "in", "our", "internal", "release", "branch", "so", "I", "don", "t", "think", "we", "need", "to", "add", "this", "tag", "NUMBER", "This", "pr", "moves", "the", "MaxQPS", "to", "service", "level", "so", "that", "the", "race", "condition", "could", "be", "remove", "NUMBER", "The", "problem", "I", "observed", "here", "be", "that", "we", "lose", "the", "flexibility", "of", "setting", "max", "qps", "value", "to", "a", "specific", "datastore", "NUMBER", "However", "look", "like", "so", "far", "always", "the", "default", "datastore", "will", "be", "set", "up", "with", "this", "value", "NUMBER", "Please", "let", "me", "know", "your", "idea", "about", "it", "NUMBER", "This", "revert", "commit", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "aoby", "Sorry", "for", "the", "delay", "NUMBER", "I", "just", "merge", "the", "pull", "request", "NUMBER", "Moved", "to", "LINK", "java", "client", "issue", "NUMBER", "This", "diff", "include", "the", "skeleton", "of", "a", "new", "system", "scanner", "which", "will", "go", "over", "workflow", "executions", "NUMBER", "This", "scanner", "be", "meant", "to", "be", "use", "to", "assert", "system", "invariants", "generate", "report", "and", "someday", "could", "also", "automatically", "perform", "repair", "actions", "NUMBER", "This", "code", "contains", "all", "the", "plumbing", "needed", "to", "actually", "bootstrap", "this", "workflow", "and", "run", "it", "NUMBER", "This", "diff", "do", "not", "contain", "the", "actual", "implementation", "of", "the", "validations", "or", "unit", "test", "these", "will", "come", "in", "follow", "up", "diffs", "NUMBER", "NUMBER", "Add", "DLQ", "ack", "level", "metrics", "NUMBER", "Add", "DLQ", "max", "message", "id", "metrics", "NUMBER", "Add", "DLQ", "domain", "specific", "metrics", "log", "In", "order", "to", "safely", "implement", "executions", "scanner", "we", "need", "the", "persistence", "RPS", "to", "be", "controllable", "through", "dynamic", "config", "NUMBER", "This", "diff", "address", "the", "two", "issue", "that", "had", "prevented", "us", "from", "doing", "this", "NUMBER", "Persistence", "RPS", "was", "not", "truly", "dynamic", "NUMBER", "The", "dynamic", "config", "value", "was", "read", "once", "when", "service", "components", "booted", "up", "and", "then", "never", "read", "again", "NUMBER", "I", "change", "this", "to", "plumb", "the", "dynamic", "config", "through", "everywhere", "NUMBER", "This", "be", "safe", "because", "we", "were", "never", "relying", "on", "the", "value", "in", "static", "yaml", "config", "NUMBER", "NUMBER", "The", "worker", "only", "had", "one", "resource", "NUMBER", "Resource", "with", "one", "persistence", "RPS", "shared", "between", "all", "features", "of", "the", "worker", "NUMBER", "This", "made", "it", "impossible", "to", "set", "a", "persistence", "RPS", "for", "one", "worker", "feature", "and", "a", "different", "RPS", "for", "another", "worker", "feature", "NUMBER", "In", "order", "to", "address", "this", "I", "add", "a", "new", "field", "on", "worker", "for", "the", "resources", "for", "scanner", "NUMBER", "Before", "my", "change", "we", "attempted", "to", "this", "by", "setting", "the", "PersistenceMaxRPS", "in", "the", "scanner", "before", "we", "start", "the", "scanner", "but", "this", "wasn", "t", "work", "because", "the", "resources", "including", "the", "rate", "limited", "persistence", "resources", "had", "already", "be", "created", "NUMBER", "This", "should", "help", "reduce", "the", "number", "of", "allocations", "associated", "with", "creating", "dynamic", "scopes", "NUMBER", "When", "creating", "dynamically", "allocated", "tally", "scopes", "GetDomainName", "can", "be", "a", "lot", "to", "tag", "metrics", "with", "domain", "name", "NUMBER", "This", "results", "in", "a", "lot", "of", "extra", "allocations", "and", "pressure", "on", "golang", "s", "GC", "NUMBER", "This", "diff", "enable", "access", "of", "domainID", "domainName", "mapping", "without", "doing", "any", "allocations", "NUMBER", "Check", "LINK", "for", "context", "NUMBER", "Revert", "commit", "NUMBER", "Fix", "buildkite", "build", "failure", "This", "be", "for", "deprecating", "the", "current", "taskProcessor", "taskExecutor", "and", "taskInfo", "defined", "in", "history", "package", "and", "in", "favor", "of", "the", "task", "interface", "defined", "in", "common", "task", "package", "NUMBER", "Separating", "the", "logic", "for", "queue", "management", "and", "task", "processing", "make", "the", "code", "easier", "to", "read", "and", "understand", "NUMBER", "Executor", "and", "also", "task", "metric", "scope", "will", "be", "assigned", "to", "a", "task", "when", "the", "task", "be", "created", "and", "sent", "for", "processing", "NUMBER", "When", "implement", "NDC", "task", "life", "cycle", "we", "can", "consider", "combine", "the", "executor", "for", "active", "and", "standby", "processing", "into", "one", "executor", "and", "let", "the", "executor", "to", "decide", "if", "the", "task", "should", "be", "executed", "as", "active", "or", "passive", "NUMBER", "This", "can", "t", "be", "do", "without", "this", "refactoring", "NUMBER", "Will", "send", "out", "separate", "PR", "for", "transfer", "and", "replication", "task", "As", "submodule", "currently", "do", "not", "support", "pin", "to", "commit", "this", "creates", "problem", "when", "merge", "master", "to", "a", "local", "developing", "branch", "NUMBER", "If", "the", "commit", "in", "master", "might", "point", "to", "the", "new", "commit", "in", "submodule", "idl", "NUMBER", "But", "the", "local", "branch", "tracks", "the", "old", "commit", "NUMBER", "The", "change", "remove", "the", "command", "of", "sync", "submodule", "and", "only", "two", "cases", "should", "run", "make", "sync", "submodules", "NUMBER", "Merge", "master", "NUMBER", "Current", "change", "in", "the", "local", "branch", "require", "IDL", "change", "The", "buildkite", "should", "be", "fine", "as", "it", "do", "git", "clone", "every", "time", "and", "it", "should", "get", "the", "latest", "commit", "in", "master", "branch", "NUMBER", "Currently", "the", "mutable", "state", "be", "version", "use", "next", "event", "ID", "next", "event", "ID", "be", "not", "a", "good", "attr", "for", "protecting", "concurrent", "modification", "of", "mutable", "state", "or", "preventing", "write", "the", "activity", "heartbeat", "NUMBER", "times", "NUMBER", "We", "should", "have", "a", "additional", "attr", "dbVersion", "which", "will", "NUMBER", "for", "each", "db", "write", "relate", "to", "a", "mutable", "state", "We", "can", "also", "consider", "persist", "the", "heartbeat", "timer", "time", "along", "with", "activity", "currently", "it", "be", "a", "in", "mem", "only", "attr", "For", "background", "context", "check", "LINK", "Decided", "to", "implement", "this", "with", "visibility", "API", "instead", "of", "direct", "database", "scan", "NUMBER", "Revert", "Update", "metrics", "and", "add", "logging", "for", "activity", "timeout", "task", "NUMBER", "Revert", "Add", "metrics", "for", "profiling", "activity", "timeout", "task", "latency", "NUMBER", "Revert", "check", "if", "timer", "expired", "first", "not", "a", "blocking", "comment", "NUMBER", "currently", "the", "mutable", "state", "be", "version", "use", "next", "event", "ID", "next", "event", "ID", "be", "not", "a", "good", "attr", "protecting", "concurrent", "modification", "of", "mutable", "state", "or", "in", "this", "case", "preventing", "write", "the", "activity", "heartbeat", "NUMBER", "times", "NUMBER", "should", "have", "a", "additional", "attr", "dbVersion", "which", "will", "NUMBER", "for", "each", "db", "write", "relate", "to", "a", "mutable", "state", "yux", "NUMBER", "yycptt", "venkat", "NUMBER", "one", "more", "thing", "plz", "also", "consider", "persist", "the", "heartbeat", "timer", "time", "along", "with", "activity", "currently", "it", "be", "a", "in", "mem", "only", "attr", "Created", "a", "new", "issue", "LINK", "Revert", "this", "later", "Instead", "of", "renaming", "the", "property", "which", "may", "call", "the", "back", "end", "breaking", "I", "remove", "it", "from", "CLI", "and", "mark", "the", "property", "as", "depreciated", "NUMBER", "Pull", "request", "for", "task", "NUMBER", "Revert", "this", "change", "after", "root", "cause", "the", "issue", "NUMBER", "Yes", "it", "should", "be", "in", "a", "few", "days", "NUMBER", "There", "s", "a", "regression", "that", "we", "be", "work", "on", "to", "fix", "and", "that", "s", "the", "release", "blocker", "NUMBER", "Add", "three", "new", "metrics", "for", "debugging", "purpose", "NUMBER", "We", "can", "revert", "this", "change", "later", "NUMBER", "TaskProcessingWithRetryLatency", "TaskScheduleToStartLatency", "ScheduleTime", "the", "time", "when", "a", "task", "be", "created", "and", "add", "to", "the", "queue", "StartTime", "the", "time", "when", "a", "task", "be", "popped", "from", "the", "task", "queue", "TaskQueueSize", "of", "buffered", "tasks", "in", "the", "queue", "when", "add", "a", "task", "FIFO", "scheduler", "be", "just", "an", "no", "op", "implementation", "which", "forwards", "the", "call", "to", "the", "underlying", "parallel", "task", "processor", "NUMBER", "This", "be", "for", "test", "and", "development", "purpose", "NUMBER", "WRR", "scheduler", "goes", "through", "all", "the", "queues", "and", "dispatch", "tasks", "from", "that", "queue", "if", "exists", "NUMBER", "The", "number", "of", "tasks", "dispatched", "from", "each", "queue", "be", "determined", "by", "the", "weights", "NUMBER", "Update", "logging", "tag", "with", "the", "correct", "component", "This", "be", "to", "allow", "Cadence", "to", "exercise", "failover", "on", "behalf", "of", "the", "customer", "domain", "owner", "NUMBER", "If", "this", "be", "enrolled", "Cadence", "will", "do", "failover", "on", "behalf", "of", "the", "user", "with", "some", "preset", "schedule", "which", "can", "be", "config", "dynamic", "config", "NUMBER", "This", "will", "need", "to", "work", "with", "ignore", "LISA", "true", "NUMBER", "If", "customer", "set", "ignore", "lisa", "false", "then", "this", "will", "be", "opted", "out", "and", "value", "from", "LISA", "be", "honored", "NUMBER", "ecisionTaskFail", "NUMBER", "This", "PR", "contains", "NUMBER", "Domain", "DLQ", "implementation", "NUMBER", "Admin", "APIs", "NUMBER", "CLI", "for", "DLQ", "operations", "Operations", "NUMBER", "Read", "DLQ", "message", "by", "Max", "message", "ID", "or", "number", "of", "message", "NUMBER", "Purge", "DLQ", "message", "by", "Max", "message", "ID", "or", "purge", "all", "NUMBER", "Merge", "DLQ", "message", "by", "Max", "message", "ID", "or", "merge", "all", "This", "sounds", "like", "some", "setup", "problem", "rather", "than", "code", "issue", "NUMBER", "Please", "seek", "help", "in", "the", "Slack", "chat", "room", "NUMBER", "The", "matching", "engine", "only", "use", "the", "matching", "client", "for", "forwarding", "request", "NUMBER", "The", "caller", "do", "not", "care", "if", "the", "client", "returns", "error", "in", "this", "case", "NUMBER", "If", "the", "client", "return", "error", "the", "matching", "can", "handle", "the", "task", "locally", "NUMBER", "Don", "t", "forget", "to", "also", "add", "an", "admin", "CLI", "command", "for", "this", "API", "NUMBER", "Will", "prioritize", "work", "on", "task", "processor", "side", "instead", "of", "the", "queue", "management", "NUMBER", "So", "I", "will", "address", "the", "comments", "later", "NUMBER", "Thanks", "NUMBER", "This", "pr", "implement", "the", "task", "processing", "job", "the", "smallest", "build", "block", "for", "the", "multi", "tenant", "task", "processing", "logic", "NUMBER", "On", "top", "of", "the", "processing", "job", "another", "component", "will", "be", "implement", "to", "manage", "a", "list", "of", "jobs", "with", "disjoint", "range", "can", "be", "viewed", "as", "a", "queue", "and", "responsible", "for", "managing", "their", "life", "cycles", "read", "tasks", "etc", "NUMBER", "Logging", "and", "metrics", "will", "be", "add", "later", "NUMBER", "NUMBER", "Add", "domain", "DLQ", "NUMBER", "Add", "enqueue", "dlq", "logic", "in", "worker", "NUMBER", "Update", "some", "DLQ", "persistence", "API", "not", "fully", "integrated", "require", "next", "PR", "with", "CLI", "change", "The", "domain", "replication", "queue", "has", "a", "function", "to", "cleanup", "the", "applied", "message", "which", "be", "not", "be", "invoked", "NUMBER", "This", "change", "be", "to", "invoke", "the", "function", "from", "the", "domain", "replication", "queue", "NUMBER", "The", "queue", "maintains", "a", "map", "of", "the", "ack", "levels", "of", "each", "cluster", "NUMBER", "The", "domain", "replication", "queue", "will", "clean", "up", "all", "the", "message", "before", "the", "minimum", "ack", "level", "among", "all", "clusters", "NUMBER", "NUMBER", "Add", "new", "API", "to", "get", "replication", "task", "use", "DLQ", "info", "NUMBER", "Fix", "mockgen", "NUMBER", "Fix", "lint", "LINK", "Verified", "it", "works", "locally", "NUMBER", "Enable", "domain", "update", "clusters", "info", "from", "CLI", "consider", "a", "workflow", "example", "like", "this", "SampleWorkflow", "ctx", "workflow", "NUMBER", "Context", "error", "NUMBER", "err", "executeLocalActivity", "activityToSendSignalToSelf", "NUMBER", "Get", "nil", "if", "err", "nil", "return", "err", "err", "executeLocalActivity", "activityBToValidateStatus", "NUMBER", "Get", "nil", "if", "err", "nil", "return", "err", "NUMBER", "Note", "that", "activityToSendSignalToSelf", "be", "sending", "a", "signal", "to", "itself", "mostly", "will", "succeed", "with", "Cadence", "high", "availability", "NUMBER", "activityBToValidateStatus", "be", "to", "do", "some", "validation", "with", "external", "calls", "NUMBER", "If", "the", "service", "that", "activityB", "be", "calling", "be", "unavailable", "then", "the", "workflow", "will", "run", "into", "a", "infinite", "loop", "NUMBER", "Cadence", "server", "schedule", "a", "decision", "NUMBER", "Worker", "start", "a", "decision", "then", "trigger", "activityToSendSignalToSelf", "because", "there", "be", "a", "decision", "in", "flight", "in", "process", "the", "received", "signal", "has", "to", "be", "saved", "into", "buffered", "events", "NUMBER", "NUMBER", "Worker", "then", "start", "activityBToValidateStatus", "but", "fail", "so", "workflow", "attempts", "to", "return", "an", "error", "as", "workflow", "result", "internally", "this", "means", "worker", "try", "to", "ResponDecisionTaskCompleted", "with", "WorkflowFailed", "decision", "NUMBER", "NUMBER", "When", "Cadence", "server", "process", "this", "ResponDecisionTaskCompleted", "it", "becomes", "DecisionTaskFailed", "because", "there", "be", "a", "buffered", "events", "LINK", "L", "NUMBER", "NUMBER", "So", "it", "records", "DecisionTaskFailed", "and", "then", "schedule", "a", "next", "decision", "NUMBER", "Then", "it", "start", "to", "do", "NUMBER", "again", "NUMBER", "The", "above", "loop", "only", "get", "break", "only", "the", "external", "service", "becomes", "available", "back", "NUMBER", "If", "activityBToValidateStatus", "keep", "returning", "error", "this", "loop", "will", "keep", "going", "on", "and", "consume", "lots", "of", "resources", "for", "Cadence", "server", "and", "customer", "workers", "NUMBER", "The", "same", "will", "apply", "if", "activityA", "and", "activityB", "be", "one", "single", "activity", "NUMBER", "The", "same", "loop", "will", "also", "happen", "if", "the", "decision", "after", "signal", "self", "try", "to", "Complete", "Cancel", "ContinueAsNew", "NUMBER", "But", "fail", "be", "the", "most", "common", "case", "because", "the", "code", "looks", "more", "natural", "NUMBER", "Here", "be", "several", "ways", "to", "fix", "it", "a", "NUMBER", "Not", "use", "local", "activity", "to", "send", "signal", "to", "self", "use", "regular", "activity", "instead", "b", "NUMBER", "Not", "closing", "workflow", "in", "the", "same", "decision", "after", "sending", "signal", "to", "self", "not", "returning", "to", "workflow", "function", "any", "error", "or", "not", "error", "NUMBER", "c", "NUMBER", "Revert", "the", "order", "of", "activityA", "and", "activityB", "always", "send", "signal", "to", "self", "as", "the", "very", "last", "step", "NUMBER", "It", "s", "sometimes", "hard", "to", "guarantee", "because", "you", "may", "not", "know", "where", "be", "the", "decision", "boundary", "NUMBER", "d", "NUMBER", "If", "possible", "put", "an", "identifier", "in", "requstedID", "in", "send", "signal", "request", "NUMBER", "this", "would", "dedup", "the", "signal", "so", "that", "even", "local", "activity", "be", "triggered", "again", "it", "won", "t", "send", "another", "signal", "and", "be", "put", "into", "buffer", "NUMBER", "By", "default", "the", "requestedID", "be", "filled", "by", "client", "with", "random", "UUID", "so", "there", "be", "not", "dedup", "for", "each", "decision", "NUMBER", "TAG", "Also", "to", "mitigate", "use", "this", "config", "LINK", "L", "NUMBER", "to", "limit", "the", "number", "of", "signals", "that", "a", "workflow", "execution", "can", "receive", "NUMBER", "TAG", "Step", "back", "mostly", "the", "reason", "that", "customers", "want", "to", "send", "signal", "to", "self", "be", "because", "signal", "be", "immutable", "and", "never", "lost", "even", "in", "case", "of", "workflow", "reset", "and", "XDC", "replication", "NUMBER", "Ideally", "Cadence", "should", "support", "signal", "self", "as", "part", "of", "a", "decision", "instead", "of", "letting", "customers", "use", "an", "activity", "to", "send", "signal", "this", "will", "not", "only", "prevent", "this", "issue", "but", "also", "improve", "the", "performance", "and", "code", "experience", "of", "use", "Cadence", "LINK", "stic_only", "more", "improvement", "with", "dryrun", "and", "originalTimestamp", "dry", "run", "logs", "for", "troubleshooting", "issue", "for", "customers", "Looks", "good", "to", "me", "NUMBER", "Could", "you", "also", "update", "the", "fail", "test", "The", "fail", "test", "be", "common", "persistence", "persistence", "test", "historyV", "NUMBER", "PersistenceTest", "NUMBER", "go", "Update", "the", "line", "NUMBER", "from", "if", "resp", "NUMBER", "NextPageToken", "nil", "to", "if", "len", "resp", "NUMBER", "NextPageToken", "NUMBER", "should", "fix", "the", "test", "Working", "on", "add", "a", "test", "for", "LINK", "This", "be", "a", "pre", "step", "for", "implement", "a", "scanner", "to", "mark", "workflow", "as", "corrupted", "and", "then", "eventually", "delete", "it", "NUMBER", "For", "LINK", "it", "will", "be", "easier", "to", "make", "the", "instructions", "for", "LINK", "Handle", "activity", "start", "not", "find", "during", "replication", "NUMBER", "This", "could", "happen", "when", "DB", "has", "resurrection", "issue", "with", "two", "activity", "start", "event", "NUMBER", "For", "LINK", "It", "causes", "confusion", "when", "I", "explaining", "SLO", "calculation", "to", "vitarb", "NUMBER", "This", "will", "help", "make", "it", "more", "clear", "NUMBER", "Some", "other", "details", "see", "internal", "T", "NUMBER", "NUMBER", "Thanks", "for", "doing", "this", "enmand", "Today", "we", "be", "doing", "some", "complicated", "timezone", "conversion", "in", "Postgres", "NUMBER", "There", "be", "some", "reasons", "r", "application", "layer", "be", "not", "consistent", "with", "timezone", "for", "example", "in", "some", "case", "we", "write", "timestamp", "with", "local", "timezone", "but", "when", "the", "time", "NUMBER", "Time", "be", "converted", "from", "JSON", "from", "paging", "token", "the", "timezone", "be", "miss", "NUMBER", "The", "simplest", "way", "be", "to", "disable", "timezone", "in", "postgres", "I", "tried", "different", "ways", "but", "they", "don", "t", "work", "NUMBER", "Maybe", "there", "be", "a", "way", "I", "miss", "NUMBER", "This", "still", "needs", "some", "work", "NUMBER", "This", "be", "an", "open", "issue", "in", "the", "PR", "that", "I", "find", "but", "not", "solve", "yet", "NUMBER", "This", "PR", "be", "implement", "the", "defined", "interface", "of", "SQL", "Plugin", "and", "the", "test", "NUMBER", "It", "also", "fix", "some", "issue", "with", "the", "Postgres", "schema", "we", "landed", "previously", "with", "CLI", "tool", "NUMBER", "Running", "with", "samples", "locally", "looks", "good", "postgres", "NUMBER", "NUMBER", "cadence", "server", "env", "development_postgres", "start", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "config", "env", "development_postgres", "zone", "configDir", "NUMBER", "config", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development_postgres", "NUMBER", "yaml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "error", "creating", "file", "based", "dynamic", "config", "client", "use", "no", "op", "config", "client", "instead", "NUMBER", "error", "error", "checking", "dynamic", "config", "file", "at", "path", "error", "stat", "no", "such", "file", "or", "directory", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Created", "RPC", "dispatcher", "and", "listening", "service", "cadence", "frontend", "address", "NUMBER", "NUMBER", "logging", "call", "at", "rpc", "NUMBER", "go", "NUMBER", "Some", "TODOs", "will", "create", "small", "PRs", "later", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "LINK", "We", "need", "detailed", "information", "to", "perform", "manual", "operation", "if", "some", "workflow", "run", "into", "corrupted", "state", "NUMBER", "This", "still", "needs", "some", "work", "NUMBER", "This", "be", "an", "open", "issue", "in", "the", "PR", "that", "I", "find", "but", "not", "solve", "yet", "NUMBER", "Use", "resource", "struct", "for", "history", "service", "history", "handler", "shard", "controller", "and", "shard", "context", "NUMBER", "We", "can", "also", "consider", "use", "the", "resource", "struct", "in", "history", "engine", "but", "will", "leave", "this", "as", "a", "future", "work", "NUMBER", "Update", "words", "with", "spelling", "This", "be", "just", "a", "temp", "fix", "for", "the", "race", "condition", "of", "persistence", "config", "NUMBER", "The", "race", "condition", "for", "archiver", "provider", "happens", "only", "in", "the", "integration", "test", "as", "in", "the", "test", "all", "services", "shares", "one", "archiver", "provider", "NUMBER", "The", "race", "condition", "for", "persistence", "config", "happens", "because", "all", "the", "services", "be", "use", "the", "same", "persistence", "config", "the", "datastore", "map", "in", "particular", "and", "will", "retry", "to", "modify", "the", "maxQPS", "during", "start", "up", "and", "use", "the", "modify", "maxQPS", "value", "to", "create", "a", "persistence", "factory", "NUMBER", "We", "need", "to", "come", "up", "with", "a", "better", "way", "to", "resolve", "this", "race", "condition", "NUMBER", "One", "idea", "be", "to", "remove", "all", "the", "pointers", "in", "the", "config", "definition", "which", "makes", "every", "copy", "of", "persistence", "config", "a", "deep", "copy", "NUMBER", "This", "still", "needs", "work", "NUMBER", "This", "be", "an", "open", "issue", "in", "the", "PR", "that", "I", "find", "but", "not", "solve", "yet", "NUMBER", "This", "still", "needs", "work", "NUMBER", "This", "be", "an", "open", "issue", "in", "the", "PR", "that", "I", "find", "but", "not", "solve", "yet", "NUMBER", "ContinueAsNew", "should", "track", "the", "workflow", "previous", "run", "for", "NDC", "enable", "Use", "new", "resource", "struct", "for", "frontend", "initialization", "logic", "Register", "archiver", "bootstrap", "params", "during", "resource", "struct", "initialization", "Update", "unit", "and", "integration", "test", "to", "use", "new", "resource", "struct", "Let", "s", "create", "an", "issue", "to", "track", "this", "issue", "NUMBER", "For", "NUMBER", "release", "NUMBER", "Will", "be", "cherry", "pick", "to", "NUMBER", "x", "branch", "Do", "not", "merge", "into", "release", "branch", "longquanzheng", "I", "see", "you", "have", "made", "good", "progress", "on", "your", "refactor", "NUMBER", "Should", "I", "wait", "for", "it", "to", "land", "in", "master", "or", "do", "you", "think", "it", "be", "in", "a", "stable", "spot", "for", "me", "to", "start", "make", "my", "change", "Hi", "bjacobso", "thanks", "for", "waiting", "NUMBER", "My", "PR", "be", "landed", "NUMBER", "It", "should", "be", "much", "easier", "for", "you", "to", "do", "it", "this", "NUMBER", "Fix", "replicate", "ActivityTaskCancelRequested", "event", "if", "activity", "info", "not", "find", "Looks", "good", "NUMBER", "I", "have", "one", "suggestion", "though", "How", "do", "you", "feel", "about", "renaming", "the", "package", "plugins", "to", "sqlplugin", "i", "NUMBER", "e", "NUMBER", "common", "persistence", "sql", "plugins", "common", "persistence", "sql", "sqlplugin", "This", "will", "make", "the", "code", "on", "the", "callers", "more", "readable", "NUMBER", "Currently", "referencing", "plugins", "NUMBER", "DB", "plugings", "NUMBER", "Tx", "etc", "looks", "weird", "sqlplugin", "NUMBER", "DB", "sqlplugin", "NUMBER", "Tx", "looks", "more", "readable", "to", "me", "NUMBER", "Agreed", "NUMBER", "I", "had", "the", "same", "feeling", "as", "well", "NUMBER", "In", "case", "that", "we", "will", "have", "some", "other", "plugins", "like", "archival", "plugin", "NUMBER", "Thanks", "for", "point", "it", "out", "I", "think", "we", "already", "have", "the", "attempt", "field", "in", "the", "ActivityTaskStarted", "Event", "Not", "sure", "if", "we", "want", "to", "add", "the", "same", "field", "to", "the", "completed", "event", "again", "those", "two", "field", "will", "always", "have", "the", "same", "value", "I", "think", "NUMBER", "Probably", "what", "we", "want", "be", "move", "the", "field", "from", "start", "event", "to", "the", "close", "event", "but", "then", "we", "also", "need", "to", "do", "this", "for", "other", "events", "like", "activity", "task", "fail", "timed", "out", "cancelled", "etc", "NUMBER", "Merged", "into", "NUMBER", "x", "Handle", "empty", "newRunHistory", "in", "stateBuilder", "if", "it", "be", "re", "replication", "case", "NUMBER", "Mutable", "state", "rebuild", "should", "include", "activity", "progress", "if", "appliable", "for", "workflow", "reset", "in", "active", "passive", "case", "and", "conflict", "resolution", "case", "NUMBER", "This", "change", "include", "NUMBER", "Logic", "to", "handle", "duplicate", "reapplied", "events", "by", "run", "id", "event", "id", "and", "version", "NUMBER", "The", "record", "stores", "in", "the", "mutable", "state", "currently", "and", "we", "might", "want", "to", "persist", "it", "to", "the", "database", "in", "the", "future", "Add", "logger", "tags", "for", "visibility", "archival", "query", "Add", "dynamic", "config", "for", "max", "visibility", "archival", "query", "page", "size", "Use", "long", "poll", "timeout", "for", "ListArchivedWorkflowExecution", "API", "Add", "dynamic", "config", "for", "max", "visibility", "archival", "query", "RPS", "use", "by", "internal", "impl", "Add", "dynamic", "config", "for", "max", "visibility", "archival", "query", "range", "use", "by", "internal", "impl", "Rewrite", "some", "transfer", "active", "processing", "code", "Remove", "unuse", "test", "utils", "close", "due", "to", "mis", "understanding", "yux", "NUMBER", "actually", "your", "be", "right", "Workflow", "can", "be", "continued", "as", "newed", "in", "created", "state", "due", "to", "workflow", "retry", "policy", "cron", "FYI", "decision", "task", "timeout", "logic", "do", "not", "need", "to", "be", "merge", "here", "timer", "queue", "active", "processor", "makes", "more", "sense", "I", "will", "remove", "the", "TODO", "from", "decision", "handler", "Currently", "worker", "do", "not", "have", "the", "ability", "to", "analyze", "CPU", "util", "load", "mem", "usage", "for", "worker", "side", "resource", "based", "load", "balancing", "users", "need", "to", "manually", "configure", "the", "number", "concurrent", "execution", "of", "decision", "activity", "per", "worker", "NUMBER", "everything", "be", "static", "for", "now", "go", "worker", "configs", "LINK", "go", "cadence", "client", "blob", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "ae", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "internal", "worker", "NUMBER", "go", "L", "NUMBER", "go", "worker", "config", "default", "values", "LINK", "go", "cadence", "client", "blob", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "ef", "NUMBER", "f", "NUMBER", "bbe", "NUMBER", "f", "NUMBER", "a", "NUMBER", "internal", "internal_worker", "NUMBER", "go", "L", "NUMBER", "Rename", "DecisionTimeoutValue", "since", "we", "have", "NUMBER", "decision", "timeout", "one", "for", "schedule", "to", "start", "one", "for", "start", "to", "close", "Deprecate", "timer", "builder", "Rename", "TimerSequenceID", "to", "timerKey", "Do", "not", "expose", "user", "timer", "task", "activity", "timer", "task", "vars", "Rewrite", "time", "active", "processing", "logic", "UT", "Use", "goimports", "instead", "of", "gofmt", "for", "better", "imports", "management", "Deprecate", "domain", "cache", "mockery", "solves", "NUMBER", "Rewrite", "state", "builder", "Rewrite", "UT", "could", "you", "make", "change", "in", "history", "replicator", "apply", "events", "API", "that", "API", "be", "the", "only", "entrance", "Add", "go", "generate", "mock", "in", "Makefile", "Run", "go", "generate", "NUMBER", "NUMBER", "Fix", "sync", "activity", "timer", "not", "generate", "isssue", "Fix", "task", "refresher", "miss", "timer", "task", "mask", "update", "to", "mutable", "state", "sevein", "cadence", "server", "java", "client", "go", "client", "pipelines", "be", "all", "public", "now", "same", "as", "NUMBER", "NUMBER", "cadence", "server", "cannot", "start", "until", "target", "schema", "version", "one", "for", "execution", "one", "for", "visibility", "be", "met", "NUMBER", "NUMBER", "the", "log", "showed", "here", "be", "from", "cadence", "cassandra", "tool", "which", "has", "nothing", "to", "do", "with", "cadence", "cli", "NUMBER", "NUMBER", "the", "command", "showed", "be", "cadence", "cli", "which", "dependents", "on", "cadence", "server", "which", "be", "not", "start", "yet", "NUMBER", "NUMBER", "the", "error", "log", "says", "connection", "refused", "error", "creating", "Keyspace", "gocql", "unable", "to", "create", "session", "control", "unable", "to", "connect", "to", "initial", "hosts", "dial", "tcp", "NUMBER", "NUMBER", "connect", "connection", "refused", "NUMBER", "according", "to", "the", "dependency", "schema", "version", "check", "did", "you", "tried", "use", "cadence", "cassandra", "tool", "to", "setup", "the", "visibility", "keyspace", "you", "can", "ref", "this", "LINK", "L", "NUMBER", "according", "to", "the", "analysis", "the", "correct", "solution", "should", "be", "NUMBER", "error", "handle", "proper", "retry", "exist", "cadence", "cassandra", "sql", "tool", "do", "not", "handle", "error", "well", "NUMBER", "close", "in", "favor", "of", "NUMBER", "Cadence", "need", "to", "improve", "the", "debuggability", "for", "customer", "especially", "for", "non", "compatible", "code", "change", "NUMBER", "In", "case", "of", "Kafka", "Cassandra", "down", "we", "need", "to", "have", "dynamic", "config", "which", "can", "NUMBER", "suspend", "task", "processing", "at", "least", "to", "ease", "the", "load", "down", "stream", "dependencies", "NUMBER", "NUMBER", "block", "incoming", "request", "NUMBER", "the", "first", "step", "should", "be", "ability", "to", "suspend", "replication", "task", "processing", "visibility", "elastic", "search", "task", "processing", "Add", "dedicated", "dynamic", "config", "for", "passive", "task", "processing", "verification", "retry", "duration", "fetch", "history", "from", "remote", "duration", "NUMBER", "Group", "passive", "task", "processing", "post", "processing", "actions", "into", "one", "dedicated", "file", "NUMBER", "Add", "new", "type", "taskInfo", "grouping", "task", "attempt", "start", "processing", "time", "for", "metrics", "logging", "NUMBER", "Remove", "APIs", "from", "mutable", "state", "if", "not", "use", "externaly", "Add", "checking", "on", "timer", "activity", "child", "workflow", "request", "cancel", "external", "info", "signal", "external", "info", "yux", "NUMBER", "which", "part", "be", "broken", "Fail", "in", "flight", "decision", "flush", "buffered", "events", "when", "workflow", "be", "timed", "out", "terminated", "or", "retried", "by", "continue", "as", "new", "Update", "mutable", "state", "AddTimeoutWorkflowEvent", "AddWorkflowExecutionTerminatedEvent", "accordingly", "NUMBER", "NUMBER", "Fix", "docker", "start", "cadence", "NUMBER", "sh", "permission", "miss", "x", "Fix", "docker", "config", "template", "cass", "visibility", "default", "keyspace", "pending", "NUMBER", "please", "use", "the", "latest", "release", "NUMBER", "LINK", "I", "have", "already", "verify", "locally", "zhaytee", "could", "you", "double", "verify", "Make", "sure", "to", "upgrade", "to", "Cassandra", "NUMBER", "schema", "version", "before", "rollout", "Admin", "delete", "workflow", "use", "both", "address", "attr", "to", "set", "connection", "to", "server", "connection", "to", "Cassandra", "The", "ideal", "solution", "should", "be", "bypassing", "server", "to", "get", "the", "mutable", "state", "Expose", "version", "history", "internal", "attribute", "for", "serialization", "deserialization", "Remove", "AddUserTimer", "in", "timerBuilder", "User", "timer", "generation", "be", "handle", "by", "closeTransactionHandleActivityUserTimerTasks", "in", "mutableState", "solve", "NUMBER", "sevein", "could", "you", "sign", "the", "CLA", "plz", "New", "workflowResetter", "workflowResetterImpl", "support", "workflow", "with", "version", "history", "Add", "panic", "handle", "on", "workflow", "execution", "context", "for", "better", "protection", "against", "corruption", "Add", "GetEventVersion", "API", "to", "VersionHistory", "Remove", "resetWorkflow", "attr", "from", "idl", "Tested", "with", "local", "domain", "canary", "global", "domain", "canary", "failover", "termination", "start", "a", "new", "can", "be", "do", "by", "similar", "to", "continue", "as", "new", "this", "should", "be", "easy", "to", "do", "since", "after", "the", "refactor", "of", "DB", "layer", "business", "logic", "layer", "terminate", "the", "currently", "run", "workflow", "start", "a", "new", "workflow", "can", "be", "do", "within", "one", "transaction", "NUMBER", "This", "issue", "aims", "to", "track", "the", "progress", "of", "update", "the", "workflow", "config", "including", "but", "not", "limited", "to", "cron", "schedule", "retry", "policy", "NUMBER", "Background", "Customer", "needs", "the", "functionality", "to", "update", "the", "cron", "schedule", "of", "workflow", "without", "workflow", "termination", "start", "a", "new", "workflow", "with", "update", "cron", "schedule", "NUMBER", "Possible", "solution", "Adding", "a", "new", "event", "type", "containing", "all", "possible", "attributes", "which", "can", "be", "update", "for", "a", "workflow", "excluding", "activity", "child", "workflow", "etc", "NUMBER", "NUMBER", "Adding", "a", "new", "event", "will", "make", "the", "support", "of", "Cross", "DC", "simple", "NUMBER", "Fix", "worker", "initialization", "order", "issue", "Remove", "unuse", "domains_by_name", "relate", "schema", "change", "History", "server", "task", "loading", "processing", "should", "undergo", "a", "refactor", "to", "support", "multi", "tenancy", "new", "cross", "DC", "active", "passive", "task", "lifecycle", "NUMBER", "History", "server", "have", "a", "host", "level", "task", "worker", "pool", "instead", "of", "shard", "level", "Expose", "new", "get", "raw", "history", "API", "since", "currently", "the", "history", "events", "be", "deserialized", "when", "loaded", "from", "DB", "and", "serialized", "again", "when", "dispatching", "to", "client", "NUMBER", "Remove", "domain", "V", "NUMBER", "schema", "Fix", "cadence", "system", "domain", "migration", "issue", "yycptt", "if", "possible", "could", "you", "use", "the", "paging", "iterator", "link", "LINK", "L", "NUMBER", "wxing", "NUMBER", "I", "think", "they", "be", "a", "little", "bit", "different", "NUMBER", "The", "history", "iterator", "use", "by", "archiver", "needs", "the", "ability", "to", "get", "current", "state", "of", "the", "iterator", "and", "create", "a", "new", "iterator", "based", "on", "some", "previous", "state", "NUMBER", "I", "don", "t", "think", "the", "paging", "iterator", "support", "that", "NUMBER", "The", "functionality", "be", "needed", "because", "archiver", "workflow", "needs", "to", "periodically", "record", "its", "current", "progress", "and", "resume", "from", "last", "saved", "state", "if", "worker", "restarts", "NUMBER", "There", "be", "some", "other", "issue", "like", "keep", "current", "iterator", "state", "when", "error", "occur", "performing", "lookahead", "for", "nextPageToken", "etc", "NUMBER", "If", "you", "want", "we", "can", "talk", "about", "it", "in", "more", "detail", "offline", "NUMBER", "If", "that", "be", "the", "case", "then", "plz", "ignore", "the", "above", "comment", "NUMBER", "If", "the", "logic", "use", "in", "archival", "be", "generic", "enough", "maybe", "it", "be", "a", "good", "idea", "to", "move", "it", "to", "common", "Update", "unit", "test", "Remove", "DomainTableVersion", "variables", "Improve", "domain", "cache", "refreshment", "on", "newly", "created", "domain", "Add", "admin", "domain", "CLI", "functionality", "which", "will", "bypass", "cadence", "frontend", "this", "should", "be", "mainly", "use", "for", "test", "purpose", "New", "flags", "for", "admin", "domain", "CLI", "Required", "attr", "service_config_dir", "specify", "dir", "location", "of", "cadence", "configuration", "Optional", "attr", "service_env", "specify", "the", "env", "to", "be", "use", "for", "loading", "cadence", "configuration", "Optional", "attr", "service_zone", "specify", "the", "zone", "to", "be", "use", "for", "loading", "cadence", "configuration", "Sample", "commands", "Register", "a", "domain", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "register", "scd", "NUMBER", "config", "oe", "cadence", "dev", "uber", "NUMBER", "com", "desc", "canary", "test", "domain", "rd", "NUMBER", "em", "true", "ac", "active", "cl", "active", "global_domain", "false", "Update", "a", "domain", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "update", "scd", "NUMBER", "config", "oe", "cadence", "prod", "uber", "NUMBER", "com", "desc", "canary", "test", "domain", "rd", "NUMBER", "em", "true", "Describe", "a", "domain", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "describe", "scd", "NUMBER", "config", "Local", "domain", "examples", "cadence", "admin", "domain", "cli", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "register", "scd", "NUMBER", "config", "oe", "cadence", "dev", "uber", "NUMBER", "com", "desc", "canary", "cross", "dc", "test", "domain", "rd", "NUMBER", "em", "true", "ac", "active", "cl", "active", "global_domain", "false", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Updated", "dynamic", "config", "logging", "call", "at", "fileBasedClient", "NUMBER", "go", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Get", "dynamic", "config", "name", "system", "NUMBER", "historyArchivalStatus", "value", "enable", "default", "value", "enable", "logging", "call", "at", "config", "NUMBER", "go", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Register", "domain", "succeeded", "wf", "domain", "name", "canary", "test", "wf", "domain", "id", "e", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "b", "NUMBER", "a", "d", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "logging", "call", "at", "handler", "NUMBER", "go", "NUMBER", "Domain", "canary", "test", "successfully", "registered", "NUMBER", "cadence", "admin", "domain", "cli", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "describe", "scd", "NUMBER", "config", "sz", "active", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Updated", "dynamic", "config", "logging", "call", "at", "fileBasedClient", "NUMBER", "go", "NUMBER", "Name", "canary", "test", "UUID", "e", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "b", "NUMBER", "a", "d", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "Description", "canary", "cross", "dc", "test", "domain", "OwnerEmail", "cadence", "dev", "uber", "NUMBER", "com", "DomainData", "map", "Status", "REGISTERED", "RetentionInDays", "NUMBER", "EmitMetrics", "true", "ActiveClusterName", "active", "Clusters", "active", "HistoryArchivalStatus", "ENABLED", "HistoryArchivalURI", "file", "tmp", "cadence_archival", "development", "VisibilityArchivalStatus", "DISABLED", "Bad", "binaries", "to", "reset", "BINARY", "CHECKSUM", "OPERATOR", "START", "TIME", "REASON", "cadence", "admin", "domain", "cli", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "update", "scd", "NUMBER", "config", "oe", "cadence", "prod", "uber", "NUMBER", "com", "desc", "canary", "test", "domain", "rd", "NUMBER", "em", "true", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Updated", "dynamic", "config", "logging", "call", "at", "fileBasedClient", "NUMBER", "go", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Get", "dynamic", "config", "name", "system", "NUMBER", "historyArchivalStatus", "value", "enable", "default", "value", "enable", "logging", "call", "at", "config", "NUMBER", "go", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Update", "domain", "succeeded", "wf", "domain", "name", "canary", "test", "wf", "domain", "id", "e", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "b", "NUMBER", "a", "d", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "logging", "call", "at", "handler", "NUMBER", "go", "NUMBER", "Domain", "canary", "test", "successfully", "update", "NUMBER", "cadence", "admin", "domain", "cli", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "describe", "scd", "NUMBER", "config", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Updated", "dynamic", "config", "logging", "call", "at", "fileBasedClient", "NUMBER", "go", "NUMBER", "Name", "canary", "test", "UUID", "e", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "d", "b", "NUMBER", "a", "d", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "Description", "canary", "test", "domain", "OwnerEmail", "cadence", "prod", "uber", "NUMBER", "com", "DomainData", "map", "Status", "REGISTERED", "RetentionInDays", "NUMBER", "EmitMetrics", "true", "ActiveClusterName", "active", "Clusters", "active", "HistoryArchivalStatus", "ENABLED", "HistoryArchivalURI", "file", "tmp", "cadence_archival", "development", "VisibilityArchivalStatus", "DISABLED", "Bad", "binaries", "to", "reset", "BINARY", "CHECKSUM", "OPERATOR", "START", "TIME", "REASON", "Global", "domain", "examples", "cadence", "admin", "domain", "cli", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "register", "scd", "NUMBER", "config", "sz", "active", "oe", "cadence", "dev", "uber", "NUMBER", "com", "desc", "canary", "cross", "dc", "test", "domain", "rd", "NUMBER", "em", "true", "global_domain", "true", "ac", "active", "cl", "active", "standby", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "NUMBER", "config", "development_active", "NUMBER", "yaml", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Updated", "dynamic", "config", "logging", "call", "at", "fileBasedClient", "NUMBER", "go", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Get", "dynamic", "config", "name", "system", "NUMBER", "historyArchivalStatus", "value", "enable", "default", "value", "enable", "logging", "call", "at", "config", "NUMBER", "go", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Register", "domain", "succeeded", "wf", "domain", "name", "canary", "test", "wf", "domain", "id", "NUMBER", "f", "NUMBER", "fea", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "faf", "NUMBER", "e", "logging", "call", "at", "handler", "NUMBER", "go", "NUMBER", "Domain", "canary", "test", "successfully", "registered", "NUMBER", "cadence", "admin", "domain", "cli", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "describe", "scd", "NUMBER", "config", "sz", "active", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "NUMBER", "config", "development_active", "NUMBER", "yaml", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Updated", "dynamic", "config", "logging", "call", "at", "fileBasedClient", "NUMBER", "go", "NUMBER", "Name", "canary", "test", "UUID", "NUMBER", "f", "NUMBER", "fea", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "faf", "NUMBER", "e", "Description", "canary", "cross", "dc", "test", "domain", "OwnerEmail", "cadence", "dev", "uber", "NUMBER", "com", "DomainData", "map", "Status", "REGISTERED", "RetentionInDays", "NUMBER", "EmitMetrics", "true", "ActiveClusterName", "active", "Clusters", "active", "standby", "HistoryArchivalStatus", "ENABLED", "HistoryArchivalURI", "file", "tmp", "cadence_archival", "development", "VisibilityArchivalStatus", "DISABLED", "Bad", "binaries", "to", "reset", "BINARY", "CHECKSUM", "OPERATOR", "START", "TIME", "REASON", "cadence", "admin", "domain", "cli", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "update", "scd", "NUMBER", "config", "sz", "active", "oe", "cadence", "uber", "NUMBER", "com", "desc", "canary", "test", "domain", "rd", "NUMBER", "em", "false", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "NUMBER", "config", "development_active", "NUMBER", "yaml", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Updated", "dynamic", "config", "logging", "call", "at", "fileBasedClient", "NUMBER", "go", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Get", "dynamic", "config", "name", "system", "NUMBER", "historyArchivalStatus", "value", "enable", "default", "value", "enable", "logging", "call", "at", "config", "NUMBER", "go", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Update", "domain", "succeeded", "wf", "domain", "name", "canary", "test", "wf", "domain", "id", "NUMBER", "f", "NUMBER", "fea", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "faf", "NUMBER", "e", "logging", "call", "at", "handler", "NUMBER", "go", "NUMBER", "Domain", "canary", "test", "successfully", "update", "NUMBER", "cadence", "admin", "domain", "cli", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "describe", "scd", "NUMBER", "config", "sz", "active", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "NUMBER", "config", "development_active", "NUMBER", "yaml", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Updated", "dynamic", "config", "logging", "call", "at", "fileBasedClient", "NUMBER", "go", "NUMBER", "Name", "canary", "test", "UUID", "NUMBER", "f", "NUMBER", "fea", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "faf", "NUMBER", "e", "Description", "canary", "test", "domain", "OwnerEmail", "cadence", "uber", "NUMBER", "com", "DomainData", "map", "Status", "REGISTERED", "RetentionInDays", "NUMBER", "EmitMetrics", "false", "ActiveClusterName", "active", "Clusters", "active", "standby", "HistoryArchivalStatus", "ENABLED", "HistoryArchivalURI", "file", "tmp", "cadence_archival", "development", "VisibilityArchivalStatus", "DISABLED", "Bad", "binaries", "to", "reset", "BINARY", "CHECKSUM", "OPERATOR", "START", "TIME", "REASON", "cadence", "admin", "domain", "cli", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "update", "scd", "NUMBER", "config", "sz", "active", "ac", "standby", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "NUMBER", "config", "development_active", "NUMBER", "yaml", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Updated", "dynamic", "config", "logging", "call", "at", "fileBasedClient", "NUMBER", "go", "NUMBER", "Will", "set", "active", "cluster", "name", "to", "standby", "other", "flag", "will", "be", "omitted", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Update", "domain", "succeeded", "wf", "domain", "name", "canary", "test", "wf", "domain", "id", "NUMBER", "f", "NUMBER", "fea", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "faf", "NUMBER", "e", "logging", "call", "at", "handler", "NUMBER", "go", "NUMBER", "Domain", "canary", "test", "successfully", "update", "NUMBER", "cadence", "admin", "domain", "cli", "NUMBER", "cadence", "do", "canary", "test", "admin", "domain", "describe", "scd", "NUMBER", "config", "sz", "active", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "NUMBER", "config", "development_active", "NUMBER", "yaml", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Updated", "dynamic", "config", "logging", "call", "at", "fileBasedClient", "NUMBER", "go", "NUMBER", "Name", "canary", "test", "UUID", "NUMBER", "f", "NUMBER", "fea", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "faf", "NUMBER", "e", "Description", "canary", "test", "domain", "OwnerEmail", "cadence", "uber", "NUMBER", "com", "DomainData", "map", "Status", "REGISTERED", "RetentionInDays", "NUMBER", "EmitMetrics", "false", "ActiveClusterName", "standby", "Clusters", "active", "standby", "HistoryArchivalStatus", "ENABLED", "HistoryArchivalURI", "file", "tmp", "cadence_archival", "development", "VisibilityArchivalStatus", "DISABLED", "Bad", "binaries", "to", "reset", "BINARY", "CHECKSUM", "OPERATOR", "START", "TIME", "REASON", "dup", "of", "NUMBER", "LINK", "Start", "cadence", "with", "clean", "db", "setup", "will", "sometimes", "having", "following", "error", "This", "will", "cause", "serious", "ServiceBusyError", "and", "break", "user", "experience", "who", "use", "docker", "for", "integration", "test", "such", "as", "cadence", "client", "integration", "test", "NUMBER", "level", "error", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "error", "starting", "cadence", "sys", "history", "scanner", "workflow", "workflow", "service", "cadence", "worker", "error", "EntityNotExistsError", "Message", "Domain", "cadence", "system", "logging", "call", "at", "scanner", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Error", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "worker", "scanner", "NUMBER", "Scanner", "NUMBER", "artWorkflow", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "service", "worker", "scanner", "scanner", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "worker", "scanner", "NUMBER", "Scanner", "NUMBER", "artWorkflowWithRetry", "NUMBER", "func", "NUMBER", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "service", "worker", "scanner", "scanner", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "common", "backoff", "NUMBER", "Retry", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "backoff", "retry", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "worker", "scanner", "NUMBER", "Scanner", "NUMBER", "artWorkflowWithRetry", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "service", "worker", "scanner", "scanner", "NUMBER", "go", "NUMBER", "level", "error", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Error", "refreshing", "domain", "cache", "service", "cadence", "frontend", "error", "ServiceBusyError", "Message", "Persistence", "Max", "QPS", "Reached", "NUMBER", "logging", "call", "at", "domainCache", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Error", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "common", "cache", "NUMBER", "domainCache", "NUMBER", "refreshLoop", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "cache", "domainCache", "NUMBER", "go", "NUMBER", "level", "error", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Error", "refreshing", "domain", "cache", "service", "cadence", "frontend", "error", "ServiceBusyError", "Message", "Persistence", "Max", "QPS", "Reached", "NUMBER", "logging", "call", "at", "domainCache", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Error", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "common", "cache", "NUMBER", "domainCache", "NUMBER", "refreshLoop", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "cache", "domainCache", "NUMBER", "go", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Get", "dynamic", "config", "name", "history", "NUMBER", "timerProcessorCompleteTimerFailureRetryCount", "value", "NUMBER", "default", "value", "NUMBER", "logging", "call", "at", "config", "NUMBER", "go", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Get", "dynamic", "config", "name", "history", "NUMBER", "transferProcessorCompleteTransferFailureRetryCount", "value", "NUMBER", "default", "value", "NUMBER", "logging", "call", "at", "config", "NUMBER", "go", "NUMBER", "level", "error", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Error", "refreshing", "domain", "cache", "service", "cadence", "frontend", "error", "ServiceBusyError", "Message", "Persistence", "Max", "QPS", "Reached", "NUMBER", "logging", "call", "at", "domainCache", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Error", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "common", "cache", "NUMBER", "domainCache", "NUMBER", "refreshLoop", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "cache", "domainCache", "NUMBER", "go", "NUMBER", "level", "error", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Error", "refreshing", "domain", "cache", "service", "cadence", "frontend", "error", "ServiceBusyError", "Message", "Persistence", "Max", "QPS", "Reached", "NUMBER", "logging", "call", "at", "domainCache", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Error", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "common", "cache", "NUMBER", "domainCache", "NUMBER", "refreshLoop", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "cache", "domainCache", "NUMBER", "go", "NUMBER", "level", "error", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Error", "refreshing", "domain", "cache", "service", "cadence", "frontend", "error", "ServiceBusyError", "Message", "Persistence", "Max", "QPS", "Reached", "NUMBER", "logging", "call", "at", "domainCache", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Error", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "common", "cache", "NUMBER", "domainCache", "NUMBER", "refreshLoop", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "cache", "domainCache", "NUMBER", "go", "NUMBER", "level", "error", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Error", "refreshing", "domain", "cache", "service", "cadence", "frontend", "error", "ServiceBusyError", "Message", "Persistence", "Max", "QPS", "Reached", "NUMBER", "logging", "call", "at", "domainCache", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Error", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "common", "cache", "NUMBER", "domainCache", "NUMBER", "refreshLoop", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "cache", "domainCache", "NUMBER", "go", "NUMBER", "level", "error", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Error", "refreshing", "domain", "cache", "service", "cadence", "frontend", "error", "ServiceBusyError", "Message", "Persistence", "Max", "QPS", "Reached", "NUMBER", "logging", "call", "at", "domainCache", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Error", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "common", "cache", "NUMBER", "domainCache", "NUMBER", "refreshLoop", "n", "t", "Users", "boweixu", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "common", "cache", "domainCache", "NUMBER", "go", "NUMBER", "NUMBER", "NUMBER", "Currently", "the", "build", "be", "blocked", "by", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "service", "history", "timerBuilder", "NUMBER", "go", "NUMBER", "NUMBER", "undefined", "log", "service", "history", "workflowResetor", "NUMBER", "go", "NUMBER", "NUMBER", "imported", "and", "not", "use", "github", "NUMBER", "com", "pkg", "error", "I", "will", "try", "to", "create", "a", "PR", "tomorrow", "to", "carlcortright", "cc", "handle", "error", "carlcortright", "I", "have", "a", "change", "ready", "to", "push", "to", "your", "PR", "but", "seems", "that", "I", "do", "not", "have", "permission", "cadence", "fix", "build", "git", "push", "u", "carlcortright", "fix", "build", "Enumerating", "objects", "NUMBER", "do", "NUMBER", "Counting", "objects", "NUMBER", "NUMBER", "NUMBER", "do", "NUMBER", "Delta", "compression", "use", "up", "to", "NUMBER", "threads", "Compressing", "objects", "NUMBER", "NUMBER", "NUMBER", "do", "NUMBER", "Writing", "objects", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "KiB", "NUMBER", "MiB", "s", "do", "NUMBER", "Total", "NUMBER", "delta", "NUMBER", "reused", "NUMBER", "delta", "NUMBER", "remote", "Resolving", "deltas", "NUMBER", "NUMBER", "NUMBER", "completed", "with", "NUMBER", "local", "objects", "NUMBER", "To", "github", "NUMBER", "com", "carlcortright", "cadence", "NUMBER", "git", "remote", "rejected", "fix", "build", "fix", "build", "permission", "denied", "error", "fail", "to", "push", "some", "refs", "to", "git", "github", "NUMBER", "com", "carlcortright", "cadence", "NUMBER", "git", "Could", "you", "use", "this", "reference", "LINK", "change", "to", "a", "pull", "request", "branch", "created", "from", "a", "fork", "and", "allow", "me", "to", "update", "your", "PR", "Or", "maybe", "this", "be", "easier", "could", "you", "apply", "this", "patch", "carlcortright", "fix", "build", "NUMBER", "txt", "LINK", "build", "NUMBER", "txt", "NUMBER", "then", "add", "capability", "to", "use", "domain", "handler", "from", "admin", "domain", "CLI", "Hi", "szaluzhskiy", "In", "your", "environment", "what", "client", "do", "you", "use", "and", "how", "do", "you", "usually", "connect", "with", "authentication", "We", "use", "github", "NUMBER", "com", "olivere", "elastic", "I", "wonder", "will", "add", "option", "of", "SetHttpClient", "help", "you", "ref", "LINK", "Also", "do", "you", "think", "you", "can", "help", "work", "on", "add", "this", "Because", "Cadence", "team", "doesn", "t", "have", "such", "authentication", "in", "ES", "so", "it", "would", "be", "a", "little", "bit", "inconvenient", "for", "us", "to", "work", "on", "it", "NUMBER", "szaluzhskiy", "To", "build", "cadence", "server", "under", "root", "github", "NUMBER", "com", "uber", "cadence", "run", "make", "bins", "or", "make", "cadence", "server", "NUMBER", "Then", "start", "dependencies", "systems", "including", "database", "mysql", "or", "cassandra", "elasticsearch", "kafka", "zookeeper", "NUMBER", "Then", "use", "ES", "cadence", "config", "by", "copy", "NUMBER", "config", "development", "NUMBER", "es", "NUMBER", "yaml", "to", "NUMBER", "config", "development", "NUMBER", "yaml", "Then", "start", "cadence", "server", "by", "NUMBER", "cadence", "server", "start", "Currently", "SQL", "injection", "will", "panic", "instead", "of", "throw", "error", "NUMBER", "This", "PR", "fix", "these", "NUMBER", "Honestly", "I", "feel", "like", "I", "miss", "too", "much", "of", "the", "code", "familiarity", "of", "cadence", "here", "to", "be", "able", "to", "fully", "support", "this", "code", "change", "NUMBER", "Can", "someone", "from", "the", "team", "step", "in", "too", "We", "be", "actually", "trying", "to", "see", "LINK", "issuecomment", "NUMBER", "although", "we", "cannot", "really", "promise", "the", "progress", "NUMBER", "Can", "you", "plz", "take", "a", "look", "at", "LINK", "We", "may", "have", "to", "create", "multiple", "PRs", "to", "your", "repo", "so", "it", "can", "land", "in", "this", "PR", "NUMBER", "Oh", "apologies", "I", "for", "some", "reason", "thought", "that", "was", "a", "PR", "to", "uber", "cadence", "NUMBER", "Merged", "That", "be", "fine", "since", "we", "be", "also", "doing", "server", "side", "cleanup", "there", "maybe", "more", "PR", "there", "be", "already", "one", "PR", "merge", "remove", "events", "V", "NUMBER", "table", "corresponding", "logic", "We", "probably", "also", "need", "to", "setup", "the", "test", "correctly", "may", "take", "some", "time", "LINK", "CLI", "Add", "support", "for", "array", "type", "in", "ES", "visibility", "store", "NUMBER", "Thank", "you", "for", "make", "this", "doc", "This", "cause", "some", "keys", "not", "able", "to", "be", "queried", "use", "local", "docker", "NUMBER", "LINK", "Currently", "for", "local", "test", "search", "attributes", "user", "need", "to", "wait", "an", "interval", "NUMBER", "s", "for", "dynamic", "config", "take", "effect", "NUMBER", "To", "make", "it", "easier", "for", "dev", "console", "team", "integration", "test", "add", "their", "key", "to", "default", "list", "NUMBER", "This", "will", "be", "useful", "for", "query", "like", "value", "in", "field", "for", "some", "customers", "and", "helpful", "for", "support", "cadence", "version", "probably", "NUMBER", "vancexu", "be", "this", "still", "relevant", "snaftaly", "yes", "NUMBER", "When", "list", "workflows", "you", "will", "be", "able", "to", "search", "by", "CadenceChangeVersion", "TAG", "TAG", "When", "show", "history", "of", "a", "specific", "workflow", "you", "will", "also", "see", "TAG", "TAG", "in", "UpsertSearchAttributeEvent", "NUMBER", "Note", "this", "feature", "will", "require", "advance", "visibility", "enable", "on", "ElasticSearch", "NUMBER", "andrewjdawson", "NUMBER", "be", "this", "still", "relevant", "This", "PR", "move", "elasticsearch", "config", "under", "persistence", "and", "renamed", "relate", "dynamic", "config", "to", "control", "write", "visibility", "data", "to", "advance", "visibility", "data", "store", "like", "ElasticSearch", "NUMBER", "It", "will", "be", "more", "cleaner", "for", "user", "to", "configure", "ElasticSearch", "NUMBER", "Next", "I", "will", "support", "only", "write", "to", "ES", "data", "store", "NUMBER", "I", "think", "this", "s", "still", "valid", "if", "we", "still", "have", "stickTTL", "NUMBER", "This", "should", "be", "do", "as", "part", "of", "host", "capacity", "control", "i", "NUMBER", "e", "NUMBER", "host", "level", "coroutine", "worker", "pool", "mutable", "state", "cache", "NDC", "test", "be", "already", "enable", "in", "build", "kite", "This", "be", "for", "the", "RPC", "rate", "limiter", "which", "be", "implement", "NUMBER", "For", "protection", "on", "task", "processing", "side", "see", "NUMBER", "It", "should", "work", "NUMBER", "Maybe", "worth", "to", "try", "docker", "prune", "All", "CLI", "operations", "currently", "requires", "domain", "as", "global", "option", "to", "init", "client", "and", "create", "relate", "metrics", "NUMBER", "This", "has", "a", "benefit", "that", "we", "can", "know", "which", "domain", "made", "the", "CLI", "calls", "NUMBER", "I", "agree", "get", "search", "attr", "doesn", "t", "need", "domain", "itself", "but", "I", "don", "t", "think", "it", "worth", "to", "make", "the", "change", "because", "it", "will", "be", "the", "only", "cmd", "doesn", "t", "require", "domain", "and", "cannot", "be", "tracked", "unless", "we", "have", "more", "commands", "doesn", "t", "requires", "domain", "NUMBER", "ubercadence", "server", "master", "be", "not", "auto", "track", "of", "Cadence", "master", "branch", "NUMBER", "Can", "you", "also", "add", "a", "brief", "description", "for", "this", "PR", "maybe", "put", "a", "local", "test", "result", "screenshot", "so", "that", "people", "know", "how", "to", "use", "and", "what", "be", "the", "output", "Example", "LINK", "as", "part", "of", "domain", "v", "NUMBER", "deprecation", "domain", "cache", "will", "be", "refreshed", "if", "cache", "miss", "domain", "accessible", "from", "DB", "NUMBER", "LINK", "LINK", "go", "cadence", "client", "pull", "NUMBER", "Currently", "search", "attributes", "be", "not", "rolled", "over", "when", "continue", "as", "new", "NUMBER", "Need", "to", "add", "options", "for", "users", "to", "choose", "whether", "we", "need", "copy", "search", "attributes", "in", "the", "new", "run", "LINK", "go", "cadence", "client", "issue", "NUMBER", "LINK", "java", "client", "issue", "NUMBER", "LINK", "handle", "by", "NDC", "transaction", "manager", "LINK", "L", "NUMBER", "LINK", "L", "NUMBER", "Currently", "it", "be", "too", "strict", "to", "force", "user", "add", "cluster", "info", "for", "local", "domain", "NUMBER", "For", "example", "LINK", "user", "should", "only", "need", "cadence", "do", "samples", "domain", "NUMBER", "d", "re", "instead", "of", "cadence", "do", "samples", "domain", "NUMBER", "d", "re", "global_domain", "false", "active_cluster", "active", "clusters", "active", "This", "PR", "makes", "global_domain", "flag", "optional", "NUMBER", "It", "use", "server", "side", "check", "so", "that", "it", "make", "sure", "if", "server", "enable", "cross", "dc", "then", "global_domain", "flag", "be", "must", "provide", "NUMBER", "the", "cluster", "info", "be", "not", "required", "LINK", "L", "NUMBER", "the", "one", "thing", "that", "should", "be", "do", "be", "to", "drop", "the", "requirement", "of", "global_domain", "flag", "so", "if", "CLI", "not", "seeing", "that", "set", "IsGlobalDomain", "in", "the", "register", "request", "to", "be", "null", "and", "let", "server", "do", "the", "check", "Agree", "NUMBER", "There", "be", "a", "small", "miss", "check", "in", "frontend", "leads", "to", "default", "not", "set", "correctly", "NUMBER", "After", "this", "PR", "in", "local", "domain", "register", "will", "be", "simple", "as", "previous", "cadence", "do", "samples", "domain", "NUMBER", "d", "re", "Thank", "you", "khaale", "for", "the", "contribution", "This", "be", "a", "breaking", "change", "on", "CLI", "which", "we", "shouldn", "t", "add", "NUMBER", "We", "be", "fix", "it", "to", "make", "the", "CLI", "command", "in", "original", "instruction", "works", "NUMBER", "Thanks", "again", "Bowei", "There", "be", "too", "many", "the", "number", "of", "auto", "reset", "points", "be", "exceeding", "the", "limit", "will", "do", "rotating", "NUMBER", "Try", "to", "suppress", "this", "message", "close", "as", "duplicate", "of", "LINK", "already", "use", "the", "semver", "version", "convention", "longquanzheng", "be", "this", "still", "relevant", "Should", "be", "do", "as", "part", "of", "LINK", "Moved", "NUMBER", "I", "think", "we", "need", "some", "discussion", "on", "the", "user", "experience", "NUMBER", "For", "example", "NUMBER", "Adding", "new", "client", "side", "API", "for", "returning", "the", "close", "status", "when", "querying", "workflow", "or", "just", "change", "the", "exist", "API", "If", "we", "choose", "the", "later", "one", "it", "will", "break", "exist", "customer", "how", "to", "deal", "with", "this", "NUMBER", "Is", "there", "any", "other", "information", "we", "want", "to", "add", "besides", "close", "status", "Basically", "what", "makes", "close", "status", "so", "special", "NUMBER", "It", "seems", "reasonable", "to", "also", "add", "more", "workflow", "information", "NUMBER", "NUMBER", "If", "user", "really", "need", "these", "information", "what", "prevents", "them", "from", "make", "an", "additional", "describeWorkflowExecution", "API", "call", "Please", "get", "help", "from", "the", "slack", "channel", "if", "it", "be", "still", "an", "issue", "for", "you", "NUMBER", "dup", "of", "NUMBER", "NUMBER", "Moved", "NUMBER", "as", "part", "of", "domain", "v", "NUMBER", "deprecation", "domain", "cache", "refreshment", "can", "be", "triggered", "by", "cache", "miss", "domain", "existence", "NUMBER", "server", "LINK", "client", "LINK", "go", "cadence", "client", "pull", "NUMBER", "Mac", "user", "may", "find", "it", "easier", "to", "use", "homebrew", "to", "install", "cli", "NUMBER", "Also", "remember", "to", "update", "release", "pipeline", "to", "include", "it", "NUMBER", "LINK", "So", "it", "doesn", "t", "improve", "much", "perf", "compared", "to", "directly", "use", "domainCache", "This", "patch", "caches", "the", "domain", "metric", "scope", "once", "it", "s", "created", "not", "the", "domain", "metadata", "NUMBER", "That", "s", "about", "it", "NUMBER", "DomainCache", "caches", "the", "domain", "metadata", "NUMBER", "And", "I", "tend", "to", "disagree", "that", "it", "s", "complicated", "NUMBER", "I", "be", "fine", "to", "forget", "about", "complexity", "as", "it", "s", "hard", "to", "argue", "NUMBER", "Adding", "another", "atomicValue", "be", "unnecessary", "NUMBER", "How", "about", "just", "use", "domainCache", "whenever", "you", "need", "to", "translate", "from", "domainID", "to", "domainName", "TransactionSizeError", "should", "be", "translated", "to", "BadRequest", "in", "history", "handler", "Our", "SLO", "needs", "latency", "of", "GetWorkflowHistory", "but", "with", "long", "poll", "the", "latency", "be", "messed", "up", "NUMBER", "For", "now", "I", "have", "to", "remove", "it", "from", "API", "latency", "NUMBER", "Once", "we", "separate", "it", "out", "we", "should", "put", "it", "back", "Right", "now", "we", "only", "record", "the", "last", "start", "time", "when", "write", "down", "the", "start", "event", "NUMBER", "This", "be", "super", "confusing", "for", "customers", "even", "for", "us", "NUMBER", "We", "don", "t", "have", "to", "record", "all", "of", "them", "but", "it", "will", "be", "nice", "to", "have", "a", "limit", "like", "at", "most", "NUMBER", "of", "them", "can", "be", "recorded", "down", "NUMBER", "NUMBER", "Existing", "cross", "DC", "history", "replication", "logic", "passive", "side", "events", "storage", "logic", "treat", "transient", "decision", "completion", "NUMBER", "batch", "decision", "task", "scheduled", "start", "NUMBER", "batch", "decision", "task", "completed", "other", "events", "as", "one", "single", "batch", "of", "events", "to", "be", "replicated", "to", "passive", "side", "this", "behavior", "be", "correct", "since", "passive", "side", "need", "to", "guarantee", "the", "transactionality", "NUMBER", "Above", "behavior", "however", "break", "the", "new", "workflow", "execution", "reset", "logic", "since", "this", "functionality", "assumes", "that", "decision", "task", "completed", "event", "will", "always", "be", "the", "first", "event", "in", "an", "event", "batch", "NUMBER", "This", "PR", "breaks", "the", "single", "replication", "message", "which", "contains", "NUMBER", "event", "batches", "to", "NUMBER", "replication", "message", "which", "each", "contains", "NUMBER", "event", "batch", "NUMBER", "Additional", "logic", "be", "add", "to", "ReplicateDecisionTaskStartedEvent", "to", "handle", "case", "if", "NUMBER", "batch", "be", "replicated", "but", "NUMBER", "batch", "be", "not", "basically", "set", "the", "decision", "attempt", "to", "NUMBER", "so", "passive", "side", "when", "turning", "into", "active", "can", "properly", "timeout", "fail", "exist", "decision", "NUMBER", "Correctness", "be", "guaranteed", "by", "exist", "transient", "decision", "cross", "DC", "integration", "test", "NUMBER", "I", "m", "still", "not", "certain", "why", "we", "need", "separate", "handle", "for", "transient", "decision", "NUMBER", "If", "the", "decision", "fail", "why", "can", "t", "the", "state", "machine", "on", "passive", "also", "go", "into", "transient", "decision", "than", "it", "expects", "the", "next", "transaction", "to", "have", "multiple", "batches", "similar", "to", "state", "machine", "on", "active", "side", "NUMBER", "transient", "decision", "has", "NUMBER", "parts", "NUMBER", "active", "side", "in", "transient", "decision", "this", "be", "correctly", "handle", "by", "passive", "side", "NUMBER", "active", "side", "try", "to", "end", "the", "transient", "decision", "with", "decision", "task", "scheduled", "start", "as", "first", "batch", "decision", "task", "completed", "decisions", "others", "in", "the", "second", "batch", "NUMBER", "the", "NUMBER", "above", "breaks", "the", "exist", "model", "that", "one", "batch", "of", "events", "be", "one", "transaction", "NUMBER", "if", "say", "first", "batch", "be", "replicated", "to", "passive", "while", "second", "batch", "be", "not", "and", "passive", "turns", "into", "active", "history", "will", "be", "corrupted", "NUMBER", "This", "PR", "contains", "NUMBER", "A", "new", "API", "GetSearchAttributes", "which", "will", "be", "use", "by", "customers", "to", "learn", "what", "keys", "and", "value", "type", "they", "can", "use", "NUMBER", "Implemented", "through", "dynamic", "config", "NUMBER", "NUMBER", "Ability", "to", "support", "search", "attributes", "on", "start", "workflow", "NUMBER", "This", "be", "majorly", "about", "persist", "info", "in", "mutable", "state", "pipe", "to", "ES", "various", "validation", "on", "frontend", "I", "will", "add", "xdc", "integration", "test", "in", "separate", "PR", "yycptt", "be", "this", "still", "relevant", "xpired", "Add", "CLI", "support", "for", "domain", "creation", "with", "local", "global", "domain", "Add", "protection", "in", "domain", "replication", "against", "domain", "name", "UUID", "collision", "func", "newErrorTag", "key", "string", "value", "error", "Tag", "This", "should", "not", "take", "key", "as", "it", "be", "ignored", "NUMBER", "We", "want", "to", "pass", "in", "error", "key", "so", "that", "the", "key", "be", "explicitly", "reserved", "I", "be", "unable", "to", "use", "docker", "compose", "in", "our", "restricted", "environment", "but", "be", "able", "to", "use", "docker", "command", "NUMBER", "So", "instead", "I", "tried", "to", "use", "the", "plain", "docker", "commands", "by", "following", "what", "be", "in", "the", "docker", "compose", "NUMBER", "yml", "file", "NUMBER", "However", "I", "be", "unable", "to", "start", "Cadence", "due", "to", "the", "error", "error", "fail", "to", "connect", "to", "TAG", "NUMBER", "due", "to", "error", "Keyspace", "cadence", "do", "not", "exist", "Looks", "like", "there", "be", "some", "issue", "with", "the", "cadence", "cassandra", "tool", "How", "can", "I", "make", "this", "work", "What", "else", "should", "I", "do", "apart", "from", "the", "following", "docker", "commands", "Thank", "you", "for", "any", "pointers", "or", "suggestions", "NUMBER", "Docker", "Commands", "Used", "NUMBER", "docker", "run", "name", "cassandra", "p", "NUMBER", "NUMBER", "d", "cassandra", "NUMBER", "NUMBER", "docker", "run", "name", "statsd", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "d", "hopsoft", "graphite", "statsd", "NUMBER", "docker", "run", "name", "cadence", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "d", "link", "cassandra", "link", "statsd", "e", "CASSANDRA_SEEDS", "cassandra", "e", "STATSD_ENDPOINT", "statsd", "NUMBER", "ubercadence", "server", "NUMBER", "NUMBER", "docker", "run", "name", "cadence", "web", "p", "NUMBER", "NUMBER", "d", "link", "cadence", "e", "CADENCE_TCHANNEL_PEERS", "cadence", "NUMBER", "ubercadence", "web", "NUMBER", "there", "be", "a", "start", "NUMBER", "sh", "in", "the", "docker", "dir", "please", "run", "that", "script", "to", "setup", "the", "schema", "another", "way", "to", "initialize", "the", "scheme", "be", "to", "call", "make", "install", "schema", "Confirmed", "that", "somehow", "the", "cadence", "cassandra", "tool", "in", "docker", "image", "be", "broken", "NUMBER", "But", "cadence", "server", "be", "actually", "work", "longer", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "log", "NUMBER", "docker", "exec", "it", "cadence", "NUMBER", "cadence", "server", "NAME", "cadence", "Cadence", "server", "USAGE", "cadence", "server", "global", "options", "command", "command", "options", "argument", "NUMBER", "VERSION", "NUMBER", "COMMANDS", "start", "start", "cadence", "server", "help", "h", "Shows", "a", "list", "of", "commands", "or", "help", "for", "one", "command", "GLOBAL", "OPTIONS", "root", "value", "r", "value", "root", "directory", "of", "execution", "environment", "default", "NUMBER", "CADENCE_ROOT", "config", "value", "c", "value", "config", "dir", "path", "relative", "to", "root", "default", "config", "CADENCE_CONFIG_DIR", "env", "value", "e", "value", "runtime", "environment", "default", "development", "CADENCE_ENVIRONMENT", "zone", "value", "az", "value", "availability", "zone", "CADENCE_AVAILABILTY_ZONE", "help", "h", "show", "help", "version", "v", "print", "the", "version", "longer", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "log", "NUMBER", "docker", "exec", "it", "cadence", "NUMBER", "cadence", "cassandra", "tool", "longer", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "log", "NUMBER", "We", "will", "fix", "that", "later", "NUMBER", "For", "now", "you", "can", "our", "make", "command", "to", "install", "schema", "manually", "Should", "be", "similar", "to", "our", "reset", "canary", "code", "longquanzheng", "be", "this", "do", "Not", "yet", "NUMBER", "I", "ended", "up", "implement", "reset", "canary", "but", "not", "integ", "test", "NUMBER", "It", "could", "be", "useful", "for", "searching", "domain", "by", "partial", "name", "email", "etc", "close", "in", "favor", "of", "NUMBER", "Test", "code", "be", "fix", "and", "landed", "in", "master", "NUMBER", "You", "should", "be", "able", "to", "land", "it", "after", "rebase", "without", "change", "any", "test", "code", "NUMBER", "The", "internal", "metrics", "cache", "was", "write", "when", "old", "metrics", "client", "did", "not", "cache", "subscopes", "and", "metrics", "which", "cause", "problem", "with", "excessive", "GC", "NUMBER", "Tally", "presently", "caches", "all", "metrics", "and", "scopes", "created", "within", "the", "scope", "object", "so", "we", "do", "not", "need", "the", "metrics", "cache", "any", "more", "NUMBER", "the", "behavior", "be", "expected", "since", "the", "underlying", "domain", "be", "essentially", "a", "global", "domain", "yycptt", "move", "to", "client", "Moved", "to", "client", "side", "LINK", "go", "cadence", "client", "issue", "NUMBER", "Since", "decision", "tasks", "in", "sticky", "task", "list", "expire", "after", "NUMBER", "seconds", "it", "be", "likely", "that", "we", "have", "a", "bug", "in", "computing", "backlog", "hint", "for", "decision", "tasks", "in", "sticky", "task", "lists", "NUMBER", "There", "be", "two", "pieces", "to", "this", "task", "Check", "if", "a", "bug", "exists", "Fix", "the", "bug", "if", "it", "exists", "Currently", "DescribeTaskList", "only", "returns", "information", "about", "the", "pollers", "NUMBER", "This", "API", "would", "be", "more", "useful", "if", "it", "also", "include", "things", "like", "backlogHint", "NUMBER", "This", "involves", "cli", "change", "plumbing", "through", "frontend", "and", "returning", "this", "value", "out", "of", "matching", "service", "NUMBER", "And", "anything", "else", "you", "think", "would", "be", "useful", "to", "return", "out", "of", "matching", "for", "visibility", "into", "tasklist", "NUMBER", "rajeshbr", "Are", "you", "use", "Cadence", "development", "docker", "to", "run", "this", "scale", "test", "My", "guess", "be", "cluster", "be", "not", "provisioned", "appropriately", "for", "the", "expected", "workload", "NUMBER", "We", "be", "still", "work", "on", "documentation", "for", "setting", "up", "Cadence", "clusters", "NUMBER", "In", "the", "meantime", "I", "recommend", "joining", "our", "slack", "channel", "LINK", "cadence", "shared_invite", "enQtNDczNTgxMjYxNDEzLTI", "NUMBER", "Yzc", "NUMBER", "ODYwMjg", "NUMBER", "ZmI", "NUMBER", "NmRmMTU", "NUMBER", "MjQ", "NUMBER", "YzQyZDc", "NUMBER", "NzMwMmM", "NUMBER", "NjkzNDE", "NUMBER", "MmM", "NUMBER", "NzU", "NUMBER", "YTlhMmI", "NUMBER", "NzIzMDhiNzFjMDM", "and", "we", "can", "work", "through", "your", "setup", "question", "there", "NUMBER", "When", "frontend", "PollForDecisionTask", "be", "invoked", "it", "will", "call", "into", "matching", "to", "get", "a", "task", "to", "dispatch", "NUMBER", "The", "context", "given", "to", "the", "frontend", "RPC", "request", "be", "pass", "along", "to", "matching", "service", "NUMBER", "If", "the", "context", "times", "outs", "then", "it", "will", "time", "out", "for", "both", "frontend", "and", "matching", "at", "the", "same", "time", "NUMBER", "A", "context", "timeout", "on", "matching", "should", "return", "emptyPollForDecisionTaskResponse", "but", "by", "the", "time", "matching", "gets", "the", "context", "close", "and", "try", "to", "return", "back", "to", "frontend", "frontend", "has", "already", "timeout", "NUMBER", "We", "then", "log", "an", "error", "on", "frontend", "and", "emit", "a", "timeout", "metric", "NUMBER", "This", "falsely", "counts", "against", "our", "SLO", "NUMBER", "What", "we", "actually", "want", "be", "for", "matching", "to", "return", "a", "emptyPollForDecisionTaskResponse", "in", "time", "for", "frontend", "to", "get", "that", "response", "NUMBER", "Possible", "solution", "shorten", "the", "timeout", "on", "the", "context", "given", "to", "matching", "by", "some", "very", "small", "amount", "NUMBER", "This", "will", "cause", "matching", "to", "timeout", "still", "with", "time", "to", "return", "back", "to", "frontend", "NUMBER", "I", "have", "created", "a", "Security", "LINK", "label", "for", "file", "security", "issue", "with", "Cadence", "server", "NUMBER", "I", "also", "update", "the", "readme", "with", "instructions", "NUMBER", "In", "the", "meantime", "please", "file", "a", "github", "issue", "and", "label", "it", "accordingly", "NUMBER", "yycptt", "be", "this", "still", "relevant", "It", "would", "be", "useful", "if", "cadence", "server", "could", "handle", "dedupping", "of", "signals", "NUMBER", "I", "discover", "the", "usefulness", "of", "this", "feature", "when", "write", "archival", "signal", "processing", "NUMBER", "Basically", "the", "customer", "experience", "should", "be", "that", "for", "a", "target", "workflow", "execution", "only", "one", "signal", "will", "ever", "be", "delivered", "NUMBER", "If", "multiple", "signals", "be", "sent", "then", "the", "cadence", "server", "will", "handle", "dedupping", "and", "only", "deliver", "one", "signal", "NUMBER", "Verify", "code", "exist", "to", "support", "server", "side", "cron", "i", "NUMBER", "e", "NUMBER", "cron", "state", "be", "propagated", "persisted", "in", "sql", "Fix", "any", "gaps", "in", "unit", "integration", "test", "The", "SQL", "implementation", "be", "pretty", "close", "in", "reaching", "feature", "parity", "with", "cassandra", "NUMBER", "This", "be", "a", "right", "time", "to", "enable", "integration", "test", "to", "run", "against", "both", "cassandra", "sql", "NUMBER", "Will", "create", "a", "failover", "integration", "test", "for", "cron", "workflow", "NUMBER", "The", "bug", "still", "exists", "for", "retry", "and", "cron", "workflow", "if", "failover", "happens", "during", "the", "first", "run", "NUMBER", "PR", "for", "the", "fix", "and", "integration", "test", "LINK", "Let", "s", "sync", "up", "with", "Bowei", "on", "the", "best", "approach", "here", "NUMBER", "He", "has", "a", "lot", "of", "context", "on", "visibility", "NUMBER", "dup", "of", "NUMBER", "rerunning", "test", "h", "NUMBER", "kanna", "option", "NUMBER", "be", "not", "going", "to", "work", "as", "it", "will", "break", "all", "Cadence", "dashboards", "for", "us", "NUMBER", "Let", "s", "go", "with", "option", "NUMBER", "for", "now", "NUMBER", "I", "ll", "try", "to", "look", "into", "PR", "this", "come", "week", "to", "see", "if", "we", "can", "get", "prometheus", "support", "landed", "to", "master", "without", "breaking", "exist", "deployments", "NUMBER", "With", "NUMBER", "we", "start", "dual", "emitting", "metrics", "which", "should", "be", "compatible", "with", "prometheus", "NUMBER", "So", "should", "be", "able", "to", "scrape", "prometheus", "metrics", "with", "the", "appropriate", "tally", "config", "now", "NUMBER", "Allow", "this", "be", "a", "little", "bit", "confusing", "will", "put", "off", "doing", "this", "NUMBER", "After", "new", "visibility", "completed", "we", "can", "allow", "multiple", "filter", "NUMBER", "This", "will", "be", "do", "as", "part", "of", "LINK", "Closing", "this", "PR", "in", "favor", "of", "LINK", "test", "test", "For", "troubleshooting", "seeing", "the", "last", "event", "first", "in", "UI", "be", "more", "useful", "NUMBER", "dup", "of", "NUMBER", "Let", "s", "start", "this", "task", "by", "showing", "what", "we", "want", "the", "response", "to", "look", "like", "NUMBER", "There", "be", "at", "least", "three", "interesting", "points", "in", "time", "to", "consider", "NUMBER", "When", "the", "activity", "be", "run", "but", "retries", "be", "not", "exhausted", "NUMBER", "NUMBER", "Retries", "be", "exhausted", "for", "activity", "but", "workflow", "be", "not", "close", "NUMBER", "NUMBER", "Workflow", "be", "close", "NUMBER", "We", "need", "to", "make", "sure", "the", "describe", "workflow", "API", "surfaces", "correct", "and", "informative", "responses", "in", "all", "these", "cases", "NUMBER", "Lets", "start", "by", "NUMBER", "Figuring", "out", "what", "information", "we", "want", "to", "surface", "NUMBER", "NUMBER", "Write", "out", "sample", "responses", "in", "this", "ticket", "NUMBER", "looks", "like", "our", "timeout", "for", "test", "be", "too", "short", "as", "we", "be", "add", "more", "test", "NUMBER", "I", "bump", "it", "into", "NUMBER", "mins", "LINK", "L", "NUMBER", "Yes", "let", "me", "close", "it", "NUMBER", "yux", "NUMBER", "wxing", "NUMBER", "This", "seems", "like", "an", "old", "task", "NUMBER", "Is", "it", "still", "valid", "meiliang", "NUMBER", "be", "this", "still", "relevant", "No", "I", "didn", "t", "work", "on", "that", "NUMBER", "Wenquan", "add", "that", "API", "and", "it", "s", "now", "public", "NUMBER", "Here", "be", "the", "API", "IDL", "LINK", "L", "NUMBER", "so", "that", "when", "activity", "fail", "it", "could", "report", "the", "buffered", "progress", "NUMBER", "Currently", "this", "be", "work", "around", "by", "an", "extra", "round", "trip", "to", "RecordActivityHeartbeat", "and", "then", "RecordActivityTaskFailed", "NUMBER", "Customer", "want", "to", "know", "the", "backlog", "size", "of", "pending", "decision", "tasks", "and", "activity", "tasks", "NUMBER", "solve", "as", "part", "of", "NUMBER", "Should", "be", "part", "of", "your", "invariant", "check", "andrewjdawson", "NUMBER", "Currently", "there", "be", "multiple", "places", "which", "do", "for", "loop", "write", "to", "DB", "in", "case", "of", "conditional", "update", "failure", "NUMBER", "We", "should", "re", "write", "those", "logic", "NUMBER", "We", "were", "seeing", "below", "error", "from", "query", "cadence", "env", "autobots", "do", "goautobots", "prod", "NUMBER", "sjc", "NUMBER", "a_", "NUMBER", "wf", "query", "qt", "state", "w", "NUMBER", "NUMBER", "de", "NUMBER", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "NUMBER", "af", "NUMBER", "b", "NUMBER", "c", "NUMBER", "Error", "Query", "fail", "Error", "Details", "QueryFailedError", "Message", "Workflow", "panic", "MutableSideEffect", "with", "given", "ID", "not", "find", "during", "replay", "That", "particular", "error", "means", "the", "code", "be", "trying", "to", "access", "a", "MutableSideEffect", "by", "an", "ID", "and", "there", "be", "no", "such", "event", "marker", "in", "the", "history", "NUMBER", "I", "tried", "that", "query", "later", "and", "it", "worked", "fine", "NUMBER", "So", "I", "think", "the", "reason", "was", "that", "the", "query", "was", "issue", "too", "fast", "before", "the", "worker", "has", "a", "chance", "to", "work", "on", "the", "first", "task", "on", "that", "workflow", "so", "when", "the", "query", "task", "be", "delivered", "to", "the", "worker", "there", "be", "no", "such", "event", "in", "the", "history", "yet", "and", "the", "query", "would", "fail", "NUMBER", "As", "soon", "as", "the", "worker", "was", "able", "to", "catch", "up", "the", "decision", "task", "the", "query", "should", "work", "as", "expected", "NUMBER", "We", "need", "to", "somehow", "avoid", "this", "error", "or", "at", "least", "give", "a", "more", "accurate", "error", "NUMBER", "can", "we", "close", "this", "issue", "vancexu", "solve", "NUMBER", "we", "need", "to", "add", "test", "to", "make", "sure", "new", "metrics", "add", "correctly", "without", "miss", "things", "NUMBER", "Added", "test", "to", "prevent", "this", "here", "LINK", "When", "query", "on", "close", "workflow", "by", "status", "like", "completed", "it", "start", "to", "kill", "Cassandra", "nodes", "when", "query", "over", "NUMBER", "M", "workflows", "NUMBER", "Need", "to", "take", "care", "of", "all", "these", "performance", "issue", "with", "NUMBER", "index", "We", "decide", "to", "use", "ElasticSearch", "as", "visibility", "data", "store", "to", "resolve", "this", "issue", "NUMBER", "this", "be", "seen", "use", "cqlsh", "not", "sure", "whether", "the", "data", "be", "persisted", "as", "hex", "or", "not", "need", "investigation", "Every", "shard", "has", "a", "background", "job", "which", "cleans", "up", "the", "timer", "and", "transfer", "tasks", "when", "all", "the", "cursors", "have", "moved", "beyond", "that", "point", "NUMBER", "If", "for", "whatever", "reason", "a", "cursor", "do", "not", "moves", "than", "we", "could", "have", "shard", "not", "delete", "any", "timer", "transfer", "tasks", "NUMBER", "One", "scenario", "this", "could", "happen", "be", "if", "we", "have", "very", "high", "traffic", "on", "one", "cluster", "and", "very", "low", "traffic", "on", "another", "NUMBER", "This", "could", "become", "a", "problem", "when", "the", "failover", "comes", "in", "as", "now", "we", "have", "to", "scan", "over", "all", "those", "stale", "task", "for", "the", "fail", "over", "domain", "NUMBER", "We", "first", "of", "all", "need", "to", "heartbeat", "from", "the", "shard", "to", "guarantee", "cursor", "will", "move", "and", "then", "also", "set", "up", "a", "metric", "to", "compute", "lag", "on", "delete", "cursor", "to", "trigger", "alert", "if", "it", "breaches", "a", "threshold", "NUMBER", "We", "saw", "multiple", "travis", "error", "becuase", "example", "LINK", "ci", "NUMBER", "org", "v", "NUMBER", "job", "NUMBER", "log", "NUMBER", "txt", "The", "log", "length", "has", "exceeded", "the", "limit", "of", "NUMBER", "MB", "this", "usually", "means", "that", "the", "test", "suite", "be", "raising", "the", "same", "exception", "over", "and", "over", "NUMBER", "The", "job", "has", "be", "terminated", "Need", "to", "get", "rid", "of", "some", "unnecessary", "info", "from", "output", "NUMBER", "Apart", "from", "this", "scale", "issue", "there", "be", "one", "bug", "on", "showing", "open", "workflow", "for", "signalWithStart", "which", "be", "fix", "in", "LINK", "Visibility", "sampling", "LINK", "already", "fix", "The", "LINK", "add", "SQL", "cadence_visibility", "NUMBER", "sagikazarmark", "Our", "SQL", "persistence", "layer", "be", "get", "pretty", "close", "to", "be", "production", "ready", "NUMBER", "We", "be", "just", "work", "towards", "multiple", "sql", "version", "support", "and", "stress", "test", "before", "we", "call", "it", "production", "ready", "NUMBER", "Let", "s", "join", "uber", "cadence", "slack", "channel", "LINK", "cadence", "shared_invite", "enQtNDczNTgxMjYxNDEzLTI", "NUMBER", "Yzc", "NUMBER", "ODYwMjg", "NUMBER", "ZmI", "NUMBER", "NmRmMTU", "NUMBER", "MjQ", "NUMBER", "YzQyZDc", "NUMBER", "NzMwMmM", "NUMBER", "NjkzNDE", "NUMBER", "MmM", "NUMBER", "NzU", "NUMBER", "YTlhMmI", "NUMBER", "NzIzMDhiNzFjMDM", "to", "explore", "any", "opportunities", "for", "collaboration", "NUMBER", "These", "LINK", "be", "the", "task", "items", "associated", "with", "SQL", "production", "readiness", "NUMBER", "Task", "Category", "ETA", "Notes", "NUMBER", "Correctness", "NUMBER", "NUMBER", "Required", "for", "run", "cadence", "NUMBER", "Feature", "NUMBER", "NUMBER", "Optional", "feature", "NUMBER", "Feature", "NUMBER", "NUMBER", "Optional", "feature", "NUMBER", "Tests", "NUMBER", "NUMBER", "Required", "NUMBER", "Feature", "NUMBER", "NUMBER", "Optional", "as", "of", "today", "but", "this", "will", "be", "required", "for", "run", "cadence", "in", "future", "sagikazarmark", "As", "soon", "as", "NUMBER", "be", "landed", "cadence", "on", "SQL", "will", "be", "ready", "for", "alpha", "test", "NUMBER", "MaximumBufferedEventsBatch", "should", "not", "be", "domain", "specific", "but", "rather", "a", "service", "level", "protection", "solve", "by", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Ability", "to", "turn", "on", "and", "off", "cross", "dc", "functionality", "by", "dynamic", "config", "NUMBER", "this", "requires", "a", "restart", "NUMBER", "Ability", "to", "turn", "on", "and", "off", "the", "replication", "task", "generation", "transmission", "to", "Kafka", "by", "dynamic", "config", "NUMBER", "this", "requires", "a", "restart", "NUMBER", "Double", "check", "on", "the", "exist", "path", "which", "use", "domain", "s", "IsGlobalDomainEnabled", "cluster", "metadata", "s", "IsGlobalDomainEnabled", "NUMBER", "Double", "check", "on", "the", "new", "component", "i", "NUMBER", "e", "NUMBER", "standby", "transfer", "timer", "processor", "replication", "task", "processor", "V", "NUMBER", "domain", "table", "worker", "failover", "NUMBER", "this", "bug", "should", "be", "gone", "after", "NUMBER", "be", "merge", "NUMBER", "keep", "an", "eye", "on", "this", "issue", "until", "confident", "that", "this", "will", "not", "re", "appear", "Resolving", "this", "NUMBER", "Reactivate", "if", "it", "happens", "again", "NUMBER", "We", "should", "separate", "msbuilder", "into", "interface", "and", "implementation", "so", "we", "can", "mock", "and", "have", "better", "UT", "coverage", "NUMBER", "This", "PR", "sit", "for", "more", "than", "one", "year", "and", "requirements", "already", "be", "fulfilled", "by", "other", "commit", "NUMBER", "This", "issue", "be", "there", "without", "news", "for", "sometime", "close", "it", "for", "now", "and", "let", "us", "know", "if", "more", "question", "manually", "test", "failover", "use", "canary", "without", "local", "activity", "mostly", "works", "this", "PR", "do", "not", "deal", "with", "shard", "movements", "Tested", "in", "my", "laptop", "longer", "gocode", "src", "github", "NUMBER", "com", "uber", "cadence", "admin", "dev", "NUMBER", "cadence", "do", "test", "admin", "wf", "inq", "w", "NUMBER", "shardId", "u", "NUMBER", "historyAddr", "NUMBER", "NUMBER", "bugfix", "user", "timer", "be", "not", "correctly", "created", "bugfix", "hSerializerFactory", "should", "be", "initialized", "solve", "NUMBER", "This", "feature", "be", "completed", "NUMBER", "With", "dynamic", "config", "EnableReadFromClosedExecutionV", "NUMBER", "set", "to", "true", "OSS", "default", "be", "false", "to", "avoid", "breaking", "change", "ListClosedWorkflowExecutions", "will", "sort", "filter", "by", "closeTime", "NUMBER", "Yes", "let", "me", "close", "it", "NUMBER", "Update", "Kafka", "Client", "to", "NUMBER", "Change", "Kafka", "Config", "to", "make", "DLQ", "and", "retry", "topics", "configurable", "Use", "OffsetNewest", "instead", "of", "OffsetOldest", "this", "be", "the", "previous", "value", "as", "well", "as", "the", "default", "from", "kafka", "client", "from", "LINK", "cluster", "issue", "NUMBER", "if", "the", "group", "has", "be", "consumed", "before", "and", "the", "offset", "exists", "it", "will", "always", "automatically", "resume", "from", "that", "offset", "NUMBER", "The", "Consumer", "NUMBER", "Offsets", "NUMBER", "Initial", "setting", "will", "only", "be", "use", "if", "the", "consumer", "group", "doesn", "t", "exist", "or", "if", "the", "stored", "offset", "cannot", "be", "retrieved", "e", "NUMBER", "g", "NUMBER", "expired", "and", "OffsetNewest", "stands", "for", "the", "log", "head", "offset", "i", "NUMBER", "e", "NUMBER", "the", "offset", "that", "will", "be", "assigned", "to", "the", "next", "message", "that", "will", "be", "produced", "to", "the", "partition", "NUMBER", "You", "can", "send", "this", "to", "a", "client", "s", "GetOffset", "method", "to", "get", "this", "offset", "or", "when", "calling", "ConsumePartition", "to", "start", "consuming", "new", "message", "NUMBER", "OffsetNewest", "int", "NUMBER", "NUMBER", "OffsetOldest", "stands", "for", "the", "oldest", "offset", "available", "on", "the", "broker", "for", "a", "partition", "NUMBER", "You", "can", "send", "this", "to", "a", "client", "s", "GetOffset", "method", "to", "get", "this", "offset", "or", "when", "calling", "ConsumePartition", "to", "start", "consuming", "from", "the", "oldest", "offset", "that", "be", "still", "available", "on", "the", "broker", "NUMBER", "OffsetOldest", "int", "NUMBER", "NUMBER", "be", "set", "bugfix", "when", "creating", "workflow", "the", "timer", "transfer", "tasks", "should", "be", "update", "with", "corresponding", "version", "bugfix", "when", "continue", "as", "new", "a", "workflow", "the", "timer", "transfer", "tasks", "should", "be", "update", "with", "corresponding", "version", "solve", "NUMBER", "bugfix", "replicator", "should", "call", "notify", "when", "error", "be", "nil", "bugfix", "wire", "miss", "transfer", "task", "retry", "sandra", "add", "failover", "trigger", "to", "domain", "cache", "wire", "failover", "trigger", "registration", "de", "registration", "to", "history", "engine", "solves", "NUMBER", "Wire", "replicator", "to", "transfer", "timer", "task", "generation", "Add", "failover", "version", "checking", "on", "transfer", "timer", "task", "Deprecate", "exist", "transfer", "queue", "test", "in", "favor", "of", "new", "test", "powered", "by", "mocks", "NUMBER", "After", "this", "PR", "we", "need", "to", "throughly", "test", "the", "domain", "failover", "NUMBER", "We", "probably", "should", "also", "rewrite", "the", "timer", "active", "processor", "test", "use", "mocks", "solves", "NUMBER", "NUMBER", "We", "can", "make", "decision", "timeout", "optional", "on", "the", "server", "and", "default", "to", "some", "reasonable", "value", "NUMBER", "The", "default", "value", "needs", "to", "support", "override", "per", "domain", "NUMBER", "decision", "mac", "start", "to", "close", "timeout", "be", "default", "to", "NUMBER", "min", "LINK", "L", "NUMBER", "deprecate", "in", "favor", "of", "NUMBER", "deprecate", "in", "favor", "of", "NUMBER", "if", "travis", "could", "not", "build", "just", "change", "this", "line", "LINK", "L", "NUMBER", "rom", "race", "condition", "cause", "the", "imminent", "timer", "fired", "event", "to", "be", "lost", "NUMBER", "performance", "impact", "after", "the", "change", "cadence", "timer", "bug", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "cadence", "timer", "bug", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "cadence", "timer", "bug", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "cadence", "timer", "bug", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "cadence", "timer", "bug", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "cadence", "timer", "bug", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "before", "the", "change", "cadence", "master", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "cadence", "master", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "cadence", "master", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "cadence", "master", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "cadence", "master", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "cadence", "master", "go", "test", "cpu", "NUMBER", "benchtime", "NUMBER", "s", "benchmem", "run", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "bench", "BenchmarkLocalTimer", "goos", "darwin", "goarch", "amd", "NUMBER", "pkg", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "BenchmarkLocalTimer", "NUMBER", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "PASS", "ok", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "s", "the", "performance", "impact", "be", "TAG", "TimerSequenceID", "Standby", "timer", "processing", "logic", "domain", "failover", "timer", "ack", "manager", "scan", "DB", "for", "domain", "specific", "timer", "in", "next", "PR", "NUMBER", "Partially", "solve", "NUMBER", "Partially", "solve", "NUMBER", "looks", "like", "we", "have", "a", "dedicated", "replication", "task", "queue", "do", "that", "means", "each", "host", "will", "start", "additional", "of", "shard", "of", "go", "routine", "for", "acking", "processing", "replication", "task", "implement", "standby", "timer", "processor", "which", "keep", "standby", "timers", "which", "be", "fired", "NUMBER", "rename", "SequenceID", "TimerSequenceID", "Note", "Handling", "current", "domain", "become", "active", "i", "NUMBER", "e", "NUMBER", "redirect", "current", "timers", "to", "timer", "queue", "processor", "be", "in", "next", "PR", "NUMBER", "Handling", "of", "other", "domain", "become", "active", "be", "TBD", "probably", "need", "to", "rebuild", "timers", "for", "workflow", "be", "active", "in", "other", "cluster", "close", "this", "PR", "since", "this", "solution", "cannot", "handle", "host", "restart", "should", "rely", "on", "mutable", "state", "instead", "same", "as", "LINK", "te", "exist", "domain", "When", "a", "host", "try", "to", "grab", "a", "shard", "it", "will", "first", "get", "the", "shard", "and", "then", "update", "the", "shard", "NUMBER", "If", "still", "just", "query", "one", "Cassandra", "host", "for", "shard", "info", "the", "case", "below", "can", "happen", "during", "deployment", "a", "host", "try", "to", "grab", "a", "shard", "which", "be", "no", "longer", "be", "hold", "by", "previous", "generation", "of", "host", "and", "cannot", "acquire", "the", "shard", "by", "update", "shard", "due", "to", "a", "Cassandra", "host", "be", "lagging", "behind", "NUMBER", "The", "conclusion", "be", "visibility", "part", "only", "provide", "eventually", "consistency", "close", "PR", "e", "corresponding", "NUMBER", "NUMBER", "This", "revert", "commit", "dff", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "cbac", "NUMBER", "add", "NUMBER", "a", "NUMBER", "d", "NUMBER", "aaed", "NUMBER", "ba", "NUMBER", "ponding", "NUMBER", "This", "revert", "commit", "NUMBER", "b", "NUMBER", "da", "NUMBER", "a", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "This", "revert", "be", "do", "because", "a", "patch", "should", "be", "add", "to", "the", "release", "solve", "NUMBER", "See", "above", "moreover", "timerAckMgr", "it", "self", "do", "not", "come", "with", "enough", "if", "there", "be", "any", "test", "NUMBER", "Apart", "from", "that", "i", "believe", "the", "timer", "processing", "logic", "can", "miss", "timers", "by", "creating", "timer", "in", "the", "past", "i", "NUMBER", "e", "NUMBER", "timer", "created", "before", "read", "level", "ack", "level", "e", "deadlock", "if", "child", "workflow", "at", "the", "same", "time", "be", "completed", "NUMBER", "samarabbas", "maybe", "we", "can", "include", "this", "patch", "in", "the", "release", "keep", "this", "PR", "open", "until", "we", "finish", "the", "cross", "DC", "work", "and", "then", "refactor", "the", "timer", "logic", "NUMBER", "NUMBER", "send", "visibility", "time", "through", "channel", "instead", "setting", "minPendingTimer", "NUMBER", "increase", "history", "cache", "size", "from", "NUMBER", "to", "NUMBER", "note", "this", "value", "was", "previously", "NUMBER", "events", "for", "decision", "will", "have", "exactly", "the", "same", "order", "and", "no", "irrelevant", "event", "will", "be", "inserted", "in", "between", "so", "client", "can", "predict", "the", "event", "ID", "of", "a", "corresponding", "decision", "NUMBER", "test", "use", "canary", "counterpart", "LINK", "events", "for", "decision", "will", "have", "exactly", "the", "same", "order", "and", "no", "irrelevant", "event", "will", "be", "inserted", "in", "between", "so", "client", "can", "predict", "the", "event", "ID", "of", "a", "corresponding", "decision", "NUMBER", "test", "use", "canary", "counterpart", "LINK", "close", "in", "favor", "of", "NUMBER", "maybe", "already", "solve", "by", "LINK", "L", "NUMBER", "bugfix", "miss", "cql", "change", "file", "in", "schema", "version", "update", "solve", "NUMBER", "at", "least", "the", "workflow", "execution", "reset", "logic", "use", "this", "cause", "as", "indication", "that", "workflow", "be", "resetted", "New", "cadence", "worker", "service", "and", "bootstrap", "code", "to", "bring", "up", "the", "new", "service", "NUMBER", "This", "service", "currently", "only", "host", "the", "replicator", "which", "consumes", "replication", "tasks", "from", "kafka", "topic", "and", "applies", "to", "current", "Cadence", "cluster", "NUMBER", "MessagingClient", "interface", "abstract", "out", "interaction", "with", "Kafka", "NUMBER", "KafkaClient", "provides", "implementation", "for", "the", "interface", "use", "kafka", "client", "library", "which", "consumes", "message", "from", "Kafka", "broker", "NUMBER", "Created", "separate", "Kafka", "configuration", "use", "for", "bootstrapping", "the", "KafkaClient", "created", "during", "service", "startup", "and", "pass", "down", "to", "replicator", "NUMBER", "Created", "replicator", "NUMBER", "rift", "which", "defines", "the", "payload", "which", "be", "sent", "over", "to", "other", "clusters", "through", "KafkaClient", "NUMBER", "workflow", "execution", "context", "already", "honor", "the", "input", "context", "since", "there", "be", "an", "agreement", "that", "variable", "control", "will", "only", "be", "present", "in", "the", "RequestCancelExternalWorkfllowInitiated", "event", "and", "we", "use", "initiated", "event", "ID", "for", "mapping", "from", "history", "event", "to", "state", "machine", "this", "issue", "be", "no", "longer", "relevant", "Emit", "a", "server", "side", "metric", "on", "RespondDecisionTaskCompleted", "with", "empty", "decisions", "NUMBER", "You", "can", "talk", "to", "yycptt", "or", "yux", "NUMBER", "for", "context", "NUMBER", "Domain", "on", "StartChildWorkflowExecution", "be", "only", "use", "for", "cross", "domain", "calls", "NUMBER", "Fixed", "the", "incorrect", "condition", "on", "history", "engine", "which", "was", "cause", "panic", "when", "domain", "attribute", "was", "not", "specified", "NUMBER", "Also", "add", "logic", "to", "inherit", "tasklist", "decision", "timeout", "and", "workflow", "timeout", "from", "parent", "execution", "when", "they", "be", "not", "provide", "on", "decision", "attributes", "NUMBER", "Updated", "ContinueAsNewDecision", "validation", "logic", "to", "inherit", "WorfklowTimeout", "Tasklist", "DecisionTimeout", "and", "WorkflowTimeout", "from", "previous", "execution", "NUMBER", "fix", "NUMBER", "We", "have", "a", "domain", "cache", "which", "can", "be", "use", "for", "both", "domain", "or", "domainUUID", "lookup", "NUMBER", "In", "this", "case", "change", "the", "incorrect", "if", "condition", "be", "enough", "as", "domain", "be", "optional", "parameter", "and", "be", "only", "use", "for", "cross", "domain", "calls", "NUMBER", "As", "for", "the", "Nil", "ChildPolicy", "I", "ll", "fix", "the", "panic", "on", "server", "but", "it", "be", "a", "required", "parameter", "NUMBER", "I", "ll", "put", "validation", "and", "fail", "the", "decision", "if", "ChildPolicy", "be", "not", "set", "NUMBER", "Let", "me", "prepare", "fix", "for", "both", "issue", "NUMBER", "Yeah", "I", "know", "NUMBER", "I", "have", "all", "the", "places", "fix", "NUMBER", "Will", "send", "out", "PR", "soon", "NUMBER", "Not", "sure", "about", "inheriting", "ChildPolicy", "from", "parent", "but", "update", "the", "validation", "logic", "to", "inherit", "Tasklist", "WorkflowTimeout", "and", "DecisionTimeout", "from", "parent", "NUMBER", "Let", "s", "talk", "about", "ChildPolicy", "on", "Monday", "NUMBER", "Created", "one", "for", "Java", "LINK", "java", "client", "issue", "NUMBER", "Related", "LINK", "This", "fix", "will", "handle", "case", "when", "workflow", "try", "to", "signal", "itself", "bayesianmind", "your", "prototype", "makes", "sense", "for", "the", "workflow", "to", "workflow", "communication", "NUMBER", "But", "it", "be", "not", "solving", "the", "original", "use", "case", "of", "an", "external", "processes", "invoking", "the", "request", "reply", "operation", "on", "a", "workflow", "and", "if", "this", "operation", "be", "not", "applicable", "not", "recording", "it", "into", "the", "history", "NUMBER", "Also", "ideally", "the", "external", "client", "should", "be", "able", "to", "use", "a", "long", "poll", "to", "wait", "for", "a", "request", "completion", "the", "same", "way", "it", "be", "already", "possible", "to", "wait", "for", "a", "workflow", "completion", "NUMBER", "Fixes", "LINK", "Thanks", "for", "bringing", "this", "up", "NUMBER", "Will", "send", "out", "a", "fix", "shortly", "NUMBER", "Fixed", "let", "me", "know", "if", "you", "run", "into", "anything", "NUMBER", "Current", "we", "return", "the", "following", "error", "message", "on", "activity", "completion", "EntityNotExistsError", "Message", "Activity", "task", "not", "find", "NUMBER", "It", "would", "be", "great", "if", "we", "can", "return", "more", "context", "like", "cannot", "find", "the", "activity", "because", "workflow", "completed", "NUMBER", "solves", "NUMBER", "this", "commit", "depends", "on", "NUMBER", "Heartbeart", "timeout", "fix", "to", "create", "next", "timeout", "if", "first", "heartbeat", "timer", "fires", "and", "activity", "be", "heartbeating", "NUMBER", "Always", "include", "ScheduleToClose", "timeout", "when", "creating", "next", "activity", "timeout", "NUMBER", "Fix", "logic", "for", "correctly", "setting", "TimerCreated", "flag", "on", "TimerDetails", "NUMBER", "Remove", "redundant", "code", "for", "all", "activity", "APIs", "from", "history", "engine", "NUMBER", "ersistence", "layer", "refactor", "exist", "domain", "cache", "solve", "NUMBER", "NUMBER", "Warn", "logs", "be", "clogging", "up", "disk", "space", "in", "matching", "service", "NUMBER", "We", "seems", "to", "be", "emitting", "a", "warning", "log", "every", "time", "message", "be", "throttled", "due", "to", "rate", "limit", "NUMBER", "This", "be", "resulting", "in", "disk", "be", "filled", "up", "on", "matching", "host", "due", "to", "aggressive", "throttling", "NUMBER", "There", "be", "NUMBER", "issue", "here", "NUMBER", "rate", "limiting", "logs", "should", "not", "be", "warn", "level", "NUMBER", "We", "should", "log", "them", "as", "info", "with", "domain", "and", "tasklist", "name", "NUMBER", "NUMBER", "We", "should", "emit", "these", "logs", "like", "once", "every", "NUMBER", "minutes", "or", "so", "instead", "of", "emitting", "them", "on", "each", "throttled", "request", "NUMBER", "Related", "issue", "LINK", "Also", "change", "exist", "methods", "that", "use", "domainCache", "NUMBER", "GetDomain", "to", "use", "domainCache", "NUMBER", "GetDomainID", "Related", "to", "LINK", "runtime", "NUMBER", "Caller", "do", "not", "return", "absolute", "path", "in", "all", "cases", "NUMBER", "Changed", "to", "pass", "in", "the", "root", "path", "so", "dependent", "repos", "can", "send", "in", "appropriate", "roots", "NUMBER", "DomainID", "be", "an", "internal", "identifier", "to", "Cadence", "server", "NUMBER", "We", "should", "not", "be", "leaking", "these", "identifiers", "to", "Cadence", "clients", "NUMBER", "Update", "RespondActivityTaskCompletedByID", "API", "on", "server", "to", "take", "in", "domainName", "instead", "of", "domainID", "NUMBER", "ryanwalls", "we", "be", "planning", "to", "take", "up", "this", "task", "next", "week", "NUMBER", "ryanwalls", "This", "issue", "was", "fix", "NUMBER", "Please", "let", "us", "know", "if", "anything", "else", "be", "needed", "NUMBER", "This", "will", "delete", "sticky", "task", "list", "in", "one", "day", "after", "no", "ack", "update", "happens", "for", "that", "task", "list", "NUMBER", "Relate", "issue", "LINK", "Manually", "test", "old", "client", "works", "but", "in", "that", "case", "the", "tasklist", "will", "be", "treated", "as", "NORMAL", "all", "the", "time", "and", "wouldn", "t", "be", "remove", "automatically", "NUMBER", "Currently", "the", "schema", "check", "be", "use", "the", "run", "directory", "which", "will", "not", "work", "if", "a", "different", "repo", "be", "use", "it", "NUMBER", "Change", "it", "to", "be", "the", "directory", "of", "this", "specific", "file", "so", "that", "even", "if", "run", "from", "another", "repo", "it", "will", "pick", "the", "right", "schema", "file", "so", "it", "can", "be", "use", "internally", "NUMBER", "Note", "Unclear", "why", "the", "idl", "gen", "be", "tagging", "along", "NUMBER", "Likely", "was", "miss", "in", "an", "earlier", "PR", "with", "a", "thrift", "update", "NUMBER", "While", "use", "CLI", "to", "get", "history", "I", "encountered", "this", "boweixu", "cadence", "domain", "samples", "domain", "show", "wid", "signal_source_bd", "NUMBER", "b", "NUMBER", "ffc", "NUMBER", "NUMBER", "a", "NUMBER", "a", "dbbf", "NUMBER", "debdc", "NUMBER", "code", "deadline", "exceeded", "message", "timeout", "export", "CADENCE_CLI_SHOW_STACKS", "NUMBER", "to", "see", "stack", "traces", "The", "cmd", "stuck", "for", "a", "few", "seconds", "and", "then", "show", "error", "timeout", "NUMBER", "I", "suspect", "when", "decision", "be", "start", "but", "yet", "completed", "get", "history", "will", "have", "issue", "After", "workflow", "timeout", "get", "history", "work", "as", "expected", "and", "return", "the", "following", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "WorkflowExecutionStarted", "WorkflowType", "Name", "code", "NUMBER", "uber", "NUMBER", "internal", "devexp", "cadence", "samples", "NUMBER", "git", "cmd", "samples", "recipes", "signal", "NUMBER", "SampleSignalWorkflowSource", "TaskList", "Name", "signalGroup", "Input", "ExecutionStartToCloseTimeoutSeconds", "NUMBER", "TaskStartToCloseTimeoutSeconds", "NUMBER", "Identity", "NUMBER", "boweixu", "C", "NUMBER", "V", "NUMBER", "JZHTDG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DecisionTaskScheduled", "TaskList", "Name", "signalGroup", "StartToCloseTimeoutSeconds", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DecisionTaskStarted", "ScheduledEventId", "NUMBER", "Identity", "NUMBER", "boweixu", "C", "NUMBER", "V", "NUMBER", "JZHTDG", "signalGroup", "RequestId", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "fdb", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "WorkflowExecutionTimedOut", "TimeoutType", "START_TO_CLOSE", "Please", "hold", "on", "investigate", "this", "NUMBER", "I", "need", "to", "reproduce", "with", "latest", "master", "branch", "before", "investigate", "NUMBER", "RecordChildWorkflowCompletion", "be", "miss", "handle", "for", "child", "execution", "get", "timedout", "event", "NUMBER", "This", "results", "in", "a", "empty", "decision", "task", "get", "created", "without", "the", "ChildWorkflowExecutionTimedOut", "get", "recorded", "in", "history", "NUMBER", "fix", "NUMBER", "test", "use", "NUMBER", "canary", "run", "concurrently", "client", "change", "LINK", "go", "cadence", "client", "pull", "NUMBER", "When", "decision", "goes", "into", "retry", "loop", "due", "to", "DecisionTimeout", "or", "DecisionFailed", "and", "then", "eventually", "completes", "we", "write", "incorrect", "tasklist", "name", "on", "DecisionTaskScheduledEvent", "for", "the", "transient", "decisions", "NUMBER", "Also", "DecisionAttempt", "get", "incorrected", "remove", "due", "to", "bad", "merge", "so", "putting", "that", "back", "in", "NUMBER", "fix", "NUMBER", "the", "current", "execution", "when", "finished", "we", "should", "do", "a", "conversion", "vent", "of", "when", "dumping", "history", "events", "when", "long", "poll", "on", "end", "event", "use", "history", "service", "for", "end", "event", "NUMBER", "experienced", "some", "weird", "issue", "when", "merge", "to", "master", "redo", "the", "commit", "This", "PR", "was", "review", "earlier", "by", "me", "NUMBER", "Cadence", "Failures", "be", "use", "to", "determine", "availability", "and", "marking", "all", "error", "as", "CadenceFailures", "were", "cause", "availability", "drops", "NUMBER", "Created", "new", "tags", "for", "history", "matching", "that", "can", "be", "tracked", "independently", "NUMBER", "solves", "NUMBER", "vancexu", "cassandraPersistenceClientFactory", "NUMBER", "go", "and", "shardContext", "NUMBER", "go", "yiminc", "LINK", "pullrequestreview", "NUMBER", "A", "NUMBER", "I", "change", "the", "of", "shards", "from", "NUMBER", "to", "NUMBER", "and", "launch", "the", "service", "check", "the", "memory", "usage", "use", "pprof", "which", "be", "NUMBER", "G", "use", "by", "this", "tag", "metrics", "client", "I", "change", "to", "this", "bugfix", "and", "redo", "the", "check", "the", "memory", "usage", "be", "NUMBER", "NUMBER", "G", "NUMBER", "so", "issue", "fix", "NUMBER", "A", "NUMBER", "A", "NUMBER", "since", "the", "tag", "metrics", "client", "be", "per", "shard", "from", "the", "original", "code", "i", "assume", "that", "we", "need", "to", "continue", "to", "do", "that", "NUMBER", "DescribeTaskList", "return", "poller", "information", "which", "contains", "the", "poller", "identity", "and", "last", "time", "this", "poller", "poll", "a", "given", "tasklist", "NUMBER", "solve", "NUMBER", "NUMBER", "NUMBER", "bugfix", "timer", "queue", "processor", "change", "history", "cache", "size", "from", "NUMBER", "to", "NUMBER", "solve", "NUMBER", "I", "don", "t", "think", "this", "be", "a", "bug", "why", "if", "you", "try", "to", "build", "a", "branch", "and", "you", "make", "a", "typo", "in", "the", "branch", "name", "docker", "will", "continue", "to", "build", "and", "nobody", "will", "understand", "why", "the", "change", "be", "not", "include", "NUMBER", "vent", "of", "when", "dumping", "history", "events", "Don", "t", "think", "we", "need", "it", "anymore", "Added", "as", "part", "of", "LINK", "Add", "Sticky", "Query", "to", "Cadence", "Server", "Add", "field", "in", "QueryWorkflowRequest", "specify", "whether", "to", "use", "sticky", "tasklist", "for", "query", "solves", "NUMBER", "mfateev", "could", "you", "take", "a", "look", "Fix", "as", "part", "of", "Fix", "workflow", "timeout", "not", "created", "for", "new", "execution", "when", "ContinuedAsNew", "NUMBER", "This", "revert", "commit", "NUMBER", "ff", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "d", "NUMBER", "caa", "NUMBER", "be", "NUMBER", "d", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "Revert", "sticky", "query", "server", "side", "change", "for", "release", "NUMBER", "Will", "reapply", "after", "the", "release", "solves", "NUMBER", "client", "side", "change", "LINK", "go", "cadence", "client", "pull", "NUMBER", "fix", "linter", "fix", "in", "NUMBER", "Schema", "validation", "on", "startup", "to", "prevent", "code", "from", "run", "into", "incompatible", "cassandra", "schema", "NUMBER", "Made", "this", "a", "separate", "PR", "from", "LINK", "Yarpc", "upgrade", "pulls", "in", "these", "file", "duplicate", "of", "NUMBER", "Fixes", "LINK", "Fixed", "in", "NUMBER", "This", "only", "include", "thrift", "change", "in", "case", "there", "be", "question", "on", "that", "NUMBER", "I", "did", "not", "change", "the", "TaskList", "structure", "directly", "because", "it", "be", "use", "in", "a", "number", "of", "other", "APIs", "and", "it", "would", "be", "more", "confusing", "and", "error", "prone", "to", "have", "a", "throttling", "RPS", "on", "all", "these", "APIs", "eg", "NUMBER", "StartChildWorkflow", "ScheduleActivity", "etc", "NUMBER", "samarabbas", "mfateev", "Looks", "good", "post", "meeting", "Today", "we", "open", "sourced", "the", "web", "UI", "for", "Cadence", "server", "LINK", "web", "ryanwalls", "give", "it", "a", "try", "and", "resolve", "this", "task", "if", "you", "think", "this", "be", "good", "enough", "for", "your", "needs", "NUMBER", "ryanwalls", "closing", "this", "issue", "for", "now", "NUMBER", "Feel", "free", "to", "file", "feature", "request", "on", "cadence", "web", "LINK", "web", "repo", "NUMBER", "due", "to", "change", "of", "plan", "close", "this", "issue", "Shard", "can", "be", "down", "for", "longer", "than", "workflow", "timeout", "NUMBER", "In", "that", "window", "workflow", "would", "be", "miss", "from", "both", "open", "and", "close", "if", "we", "set", "a", "short", "buffer", "NUMBER", "Created", "an", "issue", "for", "this", "already", "LINK", "closing", "as", "duplicate", "With", "schema", "change", "if", "code", "be", "deployed", "without", "the", "corresponding", "schema", "change", "the", "server", "do", "not", "report", "clear", "error", "NUMBER", "This", "manifests", "elsewhere", "and", "makes", "it", "harder", "to", "debug", "NUMBER", "On", "startup", "server", "should", "verify", "that", "the", "schema", "be", "of", "the", "right", "version", "and", "fail", "on", "startup", "if", "not", "NUMBER", "From", "venkat", "NUMBER", "Since", "the", "schema", "be", "already", "version", "a", "somewhat", "better", "approach", "here", "would", "be", "for", "the", "server", "to", "watch", "the", "schema", "version", "in", "the", "background", "and", "abort", "itself", "when", "there", "be", "a", "mismatch", "NUMBER", "Related", "PR", "NUMBER", "NUMBER", "NUMBER", "Yes", "it", "should", "be", "close", "dmetzgar", "let", "s", "have", "some", "document", "for", "external", "customer", "LINK", "Server", "can", "leak", "decision", "task", "metadata", "type", "NUMBER", "taskid", "NUMBER", "if", "there", "be", "no", "pollers", "NUMBER", "Need", "to", "have", "a", "way", "to", "clean", "those", "left", "tasks", "NUMBER", "I", "think", "this", "issue", "be", "still", "there", "but", "relatively", "not", "important", "urgent", "since", "it", "s", "a", "rare", "case", "there", "be", "only", "tasklist", "but", "no", "pollers", "NUMBER", "One", "way", "to", "fix", "be", "to", "add", "some", "sort", "of", "scanning", "which", "I", "think", "be", "on", "the", "road", "map", "NUMBER", "also", "remove", "duplicate", "export", "PATH", "in", "Makefile", "When", "history", "service", "comes", "up", "it", "creates", "a", "gocql", "client", "for", "execution", "manager", "and", "then", "uses", "the", "same", "client", "for", "all", "shards", "for", "make", "persistence", "calls", "NUMBER", "Also", "created", "config", "knobs", "to", "configure", "number", "of", "connections", "for", "both", "events", "and", "execution", "maanger", "clients", "NUMBER", "fix", "NUMBER", "Fix", "incorrect", "condition", "on", "update", "shards", "NUMBER", "Reset", "lastUpdated", "time", "after", "each", "successful", "shard", "update", "NUMBER", "Remove", "noisy", "persistence", "logs", "NUMBER", "fix", "NUMBER", "szaluzhskiy", "I", "d", "like", "to", "understand", "your", "requirements", "a", "bit", "more", "NUMBER", "For", "tracing", "support", "we", "be", "looking", "at", "add", "opentracing", "support", "in", "cadence", "which", "should", "allow", "you", "to", "use", "zipkin", "NUMBER", "But", "limiting", "what", "information", "we", "save", "from", "the", "tracing", "baggage", "be", "likely", "not", "possible", "NUMBER", "For", "the", "use", "case", "of", "sending", "sensitive", "data", "and", "ensuring", "it", "isn", "t", "saved", "anywhere", "in", "Cadence", "be", "that", "relate", "to", "tracing", "data", "or", "some", "separate", "requirements", "around", "authorization", "tenancy", "Talking", "about", "sensitive", "information", "I", "agree", "it", "s", "minor", "point", "in", "dealing", "with", "traces", "in", "Cadence", "NUMBER", "And", "at", "the", "same", "time", "it", "s", "important", "as", "separate", "requirement", "to", "think", "how", "to", "get", "around", "of", "authorization", "because", "Cadence", "be", "storing", "state", "of", "workflow", "NUMBER", "And", "workflow", "can", "has", "a", "sensitive", "info", "in", "state", "variables", "NUMBER", "If", "have", "any", "kind", "of", "guide", "how", "to", "deal", "with", "sensitive", "data", "in", "Cadence", "you", "be", "welcome", "to", "share", "it", "NUMBER", "For", "storing", "sensitive", "information", "Cadence", "provides", "a", "DataConverter", "interface", "in", "the", "both", "Go", "LINK", "go", "cadence", "client", "blob", "master", "encoded", "encoded", "NUMBER", "go", "and", "Java", "LINK", "java", "client", "blob", "master", "src", "main", "java", "com", "uber", "cadence", "converter", "DataConverter", "NUMBER", "java", "clients", "NUMBER", "While", "the", "server", "itself", "do", "not", "look", "at", "or", "do", "anything", "with", "the", "data", "stored", "the", "DataConverter", "will", "ensure", "that", "sensitive", "information", "isn", "t", "stored", "in", "plain", "on", "the", "server", "side", "NUMBER", "NUMBER", "RPC", "stack", "use", "by", "Cadence", "do", "not", "support", "cancel", "propagation", "through", "context", "and", "this", "results", "in", "tasks", "be", "dispatched", "to", "zombie", "pollers", "when", "client", "connection", "be", "close", "NUMBER", "Updated", "mathcing", "engine", "api", "for", "PollForDecisionTask", "and", "PollForActivityTask", "to", "alsoo", "take", "in", "pollerID", "NUMBER", "Also", "add", "new", "API", "on", "matching", "engine", "to", "CancelOutstandingPolls", "given", "pollerID", "NUMBER", "Frontend", "handler", "for", "Poll", "API", "generates", "pollerID", "before", "calling", "the", "corresponding", "API", "on", "matching", "engine", "if", "the", "call", "fail", "due", "to", "context", "cancellation", "it", "calls", "the", "CancelOutstandingPoll", "NUMBER", "Fixes", "Issue", "NUMBER", "Is", "this", "even", "needed", "after", "support", "for", "sticky", "query", "close", "this", "task", "since", "sticky", "query", "be", "already", "rolled", "out", "TaskListManager", "needs", "range", "to", "update", "before", "starting", "task", "writer", "so", "it", "can", "initialize", "max", "read", "level", "correctly", "use", "the", "initialized", "taskSequenceNumber", "on", "TasklistMgr", "NUMBER", "If", "ordering", "of", "reversed", "then", "MaxReadLevel", "be", "initialized", "incorrectly", "to", "NUMBER", "and", "will", "rely", "on", "a", "task", "to", "be", "write", "before", "it", "can", "be", "set", "to", "correct", "value", "NUMBER", "This", "results", "in", "GetTasks", "to", "use", "incorrectly", "initialized", "MaxReadLevel", "and", "will", "never", "read", "tasks", "from", "persistence", "store", "NUMBER", "We", "be", "actually", "redoing", "our", "RPC", "stack", "for", "Cadence", "so", "we", "can", "easily", "plug", "in", "various", "protocols", "like", "http", "grpc", "etc", "NUMBER", "Let", "s", "keep", "this", "issue", "active", "until", "we", "land", "our", "new", "RPC", "stack", "and", "have", "support", "for", "http", "NUMBER", "ryanwalls", "API", "compatibility", "with", "SWF", "be", "not", "in", "scope", "for", "this", "work", "NUMBER", "History", "engine", "appends", "events", "to", "history", "irrespective", "of", "whether", "a", "decision", "be", "outstanding", "or", "not", "NUMBER", "This", "introduces", "challenges", "on", "the", "client", "side", "where", "history", "events", "need", "to", "be", "reorder", "to", "guarantee", "determinism", "NUMBER", "The", "idea", "be", "to", "buffer", "new", "events", "within", "mutable", "state", "and", "append", "to", "history", "once", "the", "outstanding", "decision", "either", "completes", "or", "times", "out", "NUMBER", "Handle", "EntityNotExistError", "in", "the", "processing", "of", "transfer", "task", "for", "StartChildExecution", "NUMBER", "Fixes", "NUMBER", "Issue", "NUMBER", "Issue", "NUMBER", "Can", "you", "clarify", "what", "you", "mean", "by", "workflow", "engine", "in", "a", "traditional", "sense", "Most", "of", "the", "traditional", "workflow", "engines", "expose", "some", "kind", "of", "DSL", "to", "represent", "long", "run", "applications", "NUMBER", "In", "that", "sense", "both", "Cadence", "and", "AirFlow", "be", "non", "traditional", "engines", "as", "they", "allow", "users", "to", "express", "their", "application", "as", "regular", "code", "NUMBER", "Having", "said", "that", "it", "should", "be", "pretty", "straightforward", "to", "expose", "any", "DSL", "on", "top", "of", "Cadence", "NUMBER", "Here", "be", "an", "example", "which", "how", "to", "write", "a", "workflow", "definition", "which", "parses", "a", "DSL", "and", "executes", "steps", "in", "the", "provide", "definition", "LINK", "samples", "tree", "master", "cmd", "samples", "dsl", "Resolving", "this", "task", "as", "I", "have", "answered", "the", "original", "question", "NUMBER", "Feel", "free", "to", "reactivate", "if", "you", "have", "more", "question", "NUMBER", "The", "RangeID", "check", "be", "sufficient", "to", "guarantee", "correctness", "due", "to", "our", "strict", "requirements", "that", "the", "cache", "of", "the", "shard", "owner", "always", "be", "up", "to", "date", "NUMBER", "Removing", "the", "conditional", "check", "in", "UpdateWorkflowExecution", "query", "will", "make", "the", "operation", "more", "efficient", "as", "the", "only", "thing", "that", "needs", "to", "be", "read", "during", "the", "first", "phase", "of", "Cassandra", "s", "CAS", "be", "the", "RangeID", "which", "be", "read", "write", "frequently", "that", "it", "be", "almost", "certain", "to", "be", "in", "the", "memtable", "or", "L", "NUMBER", "SSTable", "NUMBER", "We", "won", "t", "need", "to", "go", "through", "the", "SSTables", "to", "read", "the", "execution", "records", "which", "saves", "a", "bunch", "of", "read", "operations", "NUMBER", "This", "might", "just", "result", "in", "perf", "optimization", "NUMBER", "Not", "a", "correctness", "issue", "NUMBER", "Issue", "NUMBER", "Handle", "overload", "error", "returned", "from", "Cassandra", "differently", "from", "timeouts", "and", "internal", "service", "error", "NUMBER", "This", "be", "because", "in", "the", "case", "of", "throttling", "error", "we", "know", "that", "the", "query", "never", "executed", "so", "we", "do", "not", "have", "to", "invoke", "the", "cache", "consistency", "maintenance", "part", "NUMBER", "Issue", "NUMBER", "Issue", "NUMBER", "Issue", "NUMBER", "ShardContext", "be", "a", "history", "service", "concept", "and", "do", "not", "belong", "in", "the", "persistence", "package", "NUMBER", "This", "change", "refactors", "test", "code", "to", "move", "testShardContext", "to", "the", "history", "package", "NUMBER", "Issue", "NUMBER", "Replace", "constant", "config", "with", "a", "config", "struct", "that", "can", "be", "pass", "to", "the", "service", "during", "initialization", "NUMBER", "Issue", "NUMBER", "History", "will", "be", "do", "in", "a", "separate", "PR", "as", "it", "will", "need", "more", "serious", "refactoring", "NUMBER", "first", "We", "observed", "that", "when", "executing", "CAS", "queries", "on", "static", "field", "the", "coordinator", "issue", "a", "range", "query", "during", "the", "read", "phase", "of", "paxos", "with", "LIMIT", "NUMBER", "This", "be", "problematic", "as", "it", "causes", "table", "scans", "when", "only", "a", "point", "query", "be", "needed", "NUMBER", "This", "change", "turns", "RangeID", "into", "a", "non", "static", "column", "to", "avoid", "this", "problem", "NUMBER", "This", "change", "also", "revert", "the", "gc_grace_seconds", "setting", "back", "to", "default", "NUMBER", "days", "to", "avoid", "masking", "similar", "issue", "by", "fast", "removal", "of", "tombstones", "NUMBER", "Issue", "NUMBER", "The", "CreateTasks", "query", "use", "to", "write", "task", "list", "tasks", "to", "persistence", "include", "a", "CAS", "check", "that", "verifies", "that", "the", "rangeID", "has", "not", "change", "NUMBER", "The", "rangeID", "be", "a", "static", "field", "in", "the", "tasks", "table", "and", "Cassandra", "only", "accepts", "the", "partition", "keys", "but", "not", "the", "other", "clustering", "keys", "in", "the", "CAS", "query", "to", "read", "and", "update", "it", "NUMBER", "This", "unrestricted", "query", "however", "causes", "problem", "when", "there", "be", "a", "big", "backlog", "in", "the", "task", "list", "as", "the", "coordinator", "automatically", "turns", "it", "into", "a", "LIMIT", "NUMBER", "query", "NUMBER", "To", "fix", "this", "we", "restrict", "the", "query", "with", "clustering", "keys", "and", "rewrite", "non", "static", "field", "so", "that", "Cassandra", "accepts", "the", "query", "restrictions", "NUMBER", "Issue", "NUMBER", "Concurrent", "Cassandra", "LWT", "to", "the", "same", "partition", "be", "know", "to", "cause", "timeout", "error", "NUMBER", "This", "change", "ensures", "that", "all", "LWT", "to", "a", "task", "list", "be", "serialized", "by", "use", "a", "mutex", "NUMBER", "Make", "token", "field", "public", "so", "they", "can", "be", "serialized", "properly", "NUMBER", "Also", "change", "integration", "test", "page", "size", "to", "force", "pagination", "path", "to", "be", "exercised", "NUMBER", "Issue", "NUMBER", "Simple", "RPS", "throttling", "at", "the", "cadence", "frontend", "level", "Issue", "NUMBER", "Currently", "fail", "to", "completely", "process", "one", "transfer", "task", "e", "NUMBER", "g", "NUMBER", "because", "matching", "engine", "be", "down", "or", "visibility", "store", "write", "be", "fail", "would", "block", "the", "progress", "of", "the", "transfer", "queue", "processor", "goroutine", "and", "in", "extreme", "cases", "causes", "the", "entire", "history", "service", "node", "to", "log", "fatal", "and", "restart", "NUMBER", "Instead", "of", "blocking", "it", "be", "better", "to", "rewrite", "the", "task", "back", "to", "cassandra", "with", "a", "higher", "task", "ID", "NUMBER", "This", "allows", "processing", "other", "tasks", "until", "the", "task", "be", "pick", "up", "again", "and", "hopefully", "the", "reason", "for", "fail", "to", "process", "the", "task", "in", "the", "first", "place", "would", "be", "resolve", "by", "that", "time", "NUMBER", "Also", "consider", "write", "to", "a", "side", "dead", "letter", "queue", "and", "alert", "when", "processing", "repeatedly", "fail", "so", "that", "the", "failures", "can", "be", "inspected", "e", "NUMBER", "g", "NUMBER", "a", "bug", "in", "the", "code", "prevents", "task", "from", "be", "processed", "This", "way", "the", "progress", "of", "the", "workflow", "be", "not", "blocked", "on", "the", "visibility", "store", "operation", "NUMBER", "vancexu", "will", "you", "support", "counts", "on", "ES", "Yes", "NUMBER", "Server", "side", "count", "API", "already", "merge", "NUMBER", "LINK", "Issue", "NUMBER", "NUMBER", "Need", "to", "create", "transfer", "task", "and", "timer", "task", "for", "deleting", "execution", "and", "timer", "for", "retention", "on", "the", "history", "events", "NUMBER", "We", "need", "to", "create", "transfer", "task", "and", "timer", "task", "for", "deleting", "execution", "and", "timer", "for", "retention", "on", "the", "history", "events", "NUMBER", "This", "mix", "up", "from", "a", "change", "that", "be", "still", "in", "review", "NUMBER", "going", "to", "send", "out", "again", "NUMBER", "I", "believe", "I", "understand", "what", "was", "going", "on", "here", "NUMBER", "This", "should", "be", "fix", "by", "NUMBER", "More", "details", "In", "the", "past", "the", "only", "way", "the", "matching", "engine", "would", "detect", "that", "it", "no", "longer", "owns", "a", "task", "list", "was", "when", "it", "attempts", "to", "write", "a", "task", "to", "Cassandra", "and", "fail", "due", "to", "RangeID", "condition", "NUMBER", "Due", "to", "sync", "matching", "write", "tasks", "to", "Cassandra", "be", "rare", "NUMBER", "If", "a", "matching", "engine", "loses", "the", "ownership", "of", "a", "task", "list", "and", "gets", "it", "back", "it", "would", "not", "recognize", "that", "it", "was", "lost", "until", "it", "try", "to", "write", "to", "Cassandra", "NUMBER", "This", "could", "lead", "it", "to", "be", "unaware", "of", "tasks", "that", "were", "write", "to", "Cassandra", "in", "the", "period", "the", "ownership", "was", "lost", "NUMBER", "Refactor", "them", "in", "to", "Load", "Add", "Get", "methods", "NUMBER", "Fail", "the", "decision", "on", "duplicate", "timer", "ID", "NUMBER", "Add", "another", "timer", "task", "to", "track", "the", "workflow", "execution", "start", "to", "close", "timeout", "NUMBER", "Add", "integration", "test", "for", "workflow", "timeout", "NUMBER", "Timer", "processor", "to", "checkpoint", "ack", "level", "frequently", "NUMBER", "Timer", "processor", "to", "use", "addition", "NUMBER", "bit", "for", "sequence", "number", "for", "same", "time", "resolution", "NUMBER", "At", "this", "time", "the", "main", "purpose", "of", "ack", "manager", "be", "to", "keep", "track", "of", "in", "progress", "tasks", "and", "make", "sure", "there", "be", "nothing", "left", "before", "when", "we", "move", "ack", "level", "NUMBER", "We", "could", "use", "cassandra", "query", "to", "figure", "that", "out", "but", "we", "be", "trying", "to", "reduce", "these", "range", "queries", "as", "much", "as", "possible", "NUMBER", "No", "deadlocks", "find", "NUMBER", "We", "discussed", "and", "came", "to", "the", "conclusion", "that", "there", "isn", "t", "that", "much", "benefit", "to", "be", "gained", "from", "doing", "this", "NUMBER", "There", "be", "a", "common", "component", "that", "has", "the", "code", "to", "serialize", "deserialize", "the", "token", "which", "be", "use", "by", "all", "services", "so", "there", "be", "no", "code", "duplication", "NUMBER", "The", "only", "way", "we", "support", "fail", "the", "decision", "be", "DecisionTimeout", "NUMBER", "It", "may", "make", "sense", "in", "certain", "cases", "where", "we", "can", "explicitly", "nack", "a", "decision", "so", "it", "be", "pick", "up", "by", "another", "decider", "for", "faster", "processing", "instead", "of", "waiting", "for", "the", "decision", "timeout", "NUMBER", "History", "engine", "has", "validation", "logic", "for", "timeout", "for", "ActivitySchedule", "decisions", "NUMBER", "Currently", "we", "just", "fail", "the", "decision", "with", "BadRequestError", "which", "be", "wrong", "NUMBER", "We", "instead", "need", "to", "recordActivityTaskScheduleFailedEvent", "in", "the", "history", "and", "schedule", "another", "decision", "task", "NUMBER", "Another", "thing", "be", "error", "message", "be", "actually", "quite", "bad", "we", "need", "to", "specify", "separate", "error", "if", "some", "required", "field", "be", "not", "specified", "versus", "if", "the", "value", "be", "invalid", "like", "negative", "timeouts", "NUMBER", "if", "attributes", "NUMBER", "GetStartToCloseTimeoutSeconds", "NUMBER", "return", "workflow", "NUMBER", "BadRequestError", "Message", "Missing", "StartToCloseTimeoutSeconds", "in", "the", "activity", "scheduling", "parameters", "NUMBER", "if", "attributes", "NUMBER", "GetScheduleToStartTimeoutSeconds", "NUMBER", "return", "workflow", "NUMBER", "BadRequestError", "Message", "Missing", "ScheduleToStartTimeoutSeconds", "in", "the", "activity", "scheduling", "parameters", "NUMBER", "if", "attributes", "NUMBER", "GetScheduleToCloseTimeoutSeconds", "NUMBER", "return", "workflow", "NUMBER", "BadRequestError", "Message", "Missing", "ScheduleToCloseTimeoutSeconds", "in", "the", "activity", "scheduling", "parameters", "NUMBER", "We", "mark", "the", "workflow", "execution", "row", "with", "a", "TTL", "in", "executions", "table", "on", "completion", "NUMBER", "This", "takes", "care", "of", "workflow", "execution", "entry", "in", "executions", "table", "but", "we", "still", "need", "leak", "space", "in", "the", "events", "table", "as", "we", "don", "t", "cleanup", "the", "history", "associated", "with", "that", "execution", "NUMBER", "We", "could", "use", "the", "timer", "queue", "processor", "for", "this", "purpose", "and", "queue", "up", "a", "timer", "task", "to", "delete", "the", "execution", "history", "after", "retention", "period", "NUMBER", "Hopefully", "execution", "history", "should", "never", "get", "corrupted", "NUMBER", "If", "for", "any", "reason", "bug", "we", "get", "into", "a", "state", "where", "this", "happens", "we", "should", "not", "just", "return", "a", "retriable", "error", "to", "the", "callers", "NUMBER", "When", "decider", "responds", "back", "with", "complete", "workflow", "decision", "we", "first", "update", "the", "execution", "with", "new", "events", "and", "then", "delete", "workflow", "execution", "as", "a", "separate", "transaction", "NUMBER", "This", "can", "cause", "issue", "when", "the", "update", "times", "out", "but", "we", "successfully", "apply", "the", "update", "NUMBER", "This", "can", "cause", "us", "to", "never", "delete", "this", "workflow", "execution", "NUMBER", "We", "need", "to", "make", "sure", "that", "execution", "be", "update", "and", "delete", "in", "the", "same", "transaction", "NUMBER", "This", "sounds", "much", "cleaner", "approach", "NUMBER", "Let", "me", "code", "up", "the", "fix", "use", "transfer", "task", "NUMBER", "Fixed", "NUMBER", "If", "RespondDecisionTask", "sends", "in", "bad", "request", "or", "corrupted", "data", "than", "we", "just", "silently", "ignore", "the", "activitySchedule", "decisions", "NUMBER", "Instead", "we", "need", "to", "add", "relevant", "failure", "like", "ActivityTaskScheduleFailed", "event", "and", "then", "also", "create", "a", "new", "DecisionTask", "for", "the", "decider", "NUMBER", "Here", "be", "an", "instance", "of", "the", "failure", "RunID", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "b", "bc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "ScheduleID", "NUMBER", "Service", "cadence", "frontend", "WorkflowID", "NUMBER", "f", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "d", "NUMBER", "e", "b", "NUMBER", "e", "NUMBER", "df", "NUMBER", "fff", "NUMBER", "level", "error", "msg", "RespondDecisionTaskCompleted", "NUMBER", "Error", "BadRequestError", "Message", "Missing", "StartToCloseTimeoutSeconds", "in", "the", "activity", "scheduling", "parameters", "NUMBER", "time", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "This", "be", "for", "monitoring", "purpose", "cli", "style", "scenarios", "NUMBER", "This", "allows", "us", "to", "get", "call", "stacks", "debug", "stuck", "issue", "etc", "without", "hosting", "decider", "implementation", "NUMBER", "Cadence", "be", "a", "multi", "tenant", "service", "and", "we", "need", "to", "protect", "against", "single", "bad", "user", "bringing", "the", "entire", "system", "down", "NUMBER", "This", "task", "be", "to", "implement", "basic", "throttling", "and", "quotas", "for", "each", "client", "NUMBER", "This", "be", "very", "useful", "for", "support", "scenarios", "like", "storing", "config", "as", "a", "custom", "event", "when", "the", "workflow", "execution", "be", "start", "NUMBER", "This", "will", "allow", "users", "to", "make", "configuration", "change", "without", "breaking", "run", "instances", "NUMBER", "This", "be", "to", "enable", "the", "scenario", "to", "give", "higher", "priorities", "to", "task", "for", "outstanding", "workflows", "rather", "than", "newer", "ones", "NUMBER", "So", "we", "can", "complete", "outstanding", "ones", "faster", "in", "the", "event", "of", "backlog", "NUMBER", "core", "functionality", "be", "implement", "and", "rolled", "out", "remaining", "issue", "be", "tracked", "in", "NUMBER", "NUMBER", "Users", "want", "to", "throttle", "the", "number", "workflows", "or", "activities", "be", "executed", "per", "second", "NUMBER", "For", "eg", "NUMBER", "User", "has", "workflow", "with", "activity", "that", "calls", "downstream", "service", "foo", "NUMBER", "foo", "has", "a", "TPS", "limit", "that", "user", "has", "to", "abide", "by", "NUMBER", "We", "want", "to", "expose", "configuration", "to", "users", "that", "will", "limit", "how", "many", "workflows", "and", "in", "turn", "calls", "to", "downstream", "services", "be", "executed", "in", "a", "time", "duration", "NUMBER", "close", "in", "favor", "of", "NUMBER", "For", "example", "updated_at", "NUMBER", "Currently", "Cadence", "has", "support", "for", "dedupe", "on", "workflow", "id", "if", "the", "execution", "be", "still", "run", "NUMBER", "There", "be", "scenarios", "where", "workflows", "be", "fast", "run", "and", "completes", "immediately", "so", "it", "would", "be", "super", "useful", "to", "have", "support", "for", "dedupe", "on", "workflow", "id", "on", "completed", "executions", "also", "NUMBER", "We", "would", "want", "the", "following", "semantics", "for", "start", "workflow", "When", "creating", "workflow", "specify", "condition", "like", "allowDuplicate", "allowDuplicateFailedOnly", "rejectDuplicate", "NUMBER", "Then", "specify", "IF", "NOT", "EXISTS", "or", "condition", "on", "the", "status", "based", "on", "that", "condition", "NUMBER", "Currently", "all", "timers", "be", "created", "on", "each", "activity", "and", "decision", "task", "NUMBER", "We", "need", "to", "implement", "the", "logic", "to", "create", "a", "single", "timer", "for", "each", "workflow", "execution", "and", "set", "the", "next", "earliest", "timer", "when", "that", "one", "fires", "NUMBER"], "text_count": [0, 5766, 1140, 639, 447, 108, 482, 0, 16, 501, 712, 1635, 923, 648, 605, 393, 0, 0, 0, 0, 1986, 531, 248, 211, 582, 256, 0, 0, 0, 0, 4024, 2469, 1621, 78, 787, 374, 0, 0, 0, 0, 4548, 52, 2278, 1979, 1085, 0, 0, 0, 0, 0, 1142, 546, 790, 274, 281, 189, 368, 0, 0, 0, 3944, 213, 3208, 273, 0, 0, 0, 0, 0, 0, 3086, 258, 2326, 1031, 387, 0, 0, 0, 0, 0, 5477, 2436, 605, 2400, 207, 231, 0, 0, 0, 0, 244, 1379, 161, 0, 0, 0, 0, 0, 0, 0, 4593, 1023, 2347, 1228, 0, 0, 0, 0, 0, 0, 9165, 16338, 236, 516, 174, 249, 0, 0, 0, 0, 20067, 37, 14838, 241, 2885, 4754]}, {"repo": "cadence", "type": "nonelite", "title": "", "number of text": 862, "text": "  \n[![Coverage Status](https://coveralls.io/builds/29037157/badge)](https://coveralls.io/builds/29037157)\n\nCoverage increased (+0.5%) to 67.53% when pulling **d8fe451d5fde832ef24013b7c1bff48705ef3874 on kafka-parse** into **ac29268d6f28c4fa28bb47c1d01fb73c3b934eb7 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/29106028/badge)](https://coveralls.io/builds/29106028)\n\nCoverage increased (+0.4%) to 67.557% when pulling **5f77cf503e951fb17c21f85da0a1f8f1c997210e on yycptt:queue-task-processor** into **ccafe5b8a0d1152ebce85895be85a39ea4369d2c on uber:master**.\n  Not possible to make LocalActivity that returns nil in result. Workflow fails with\r\n```\r\n  \"reason\": \"cadenceInternal:Generic\",\r\n  \"details\": \"unable to decode argument: 0, **struct {}, with json error: EOF\",\r\n```\r\n\r\nI've made a sample to demonstrate this problem:\r\nhttps://github.com/olegmedvedev/cadence-local-activity-sample  \n[![Coverage Status](https://coveralls.io/builds/28988190/badge)](https://coveralls.io/builds/28988190)\n\nCoverage increased (+0.09%) to 67.216% when pulling **e438da18ad98f69f48bec0aaa13e0fdda0f1e416 on RaceConditionRemove** into **7c07af4fbb043b70332a132d395e7e1aa8c3fcff on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/29007437/badge)](https://coveralls.io/builds/29007437)\n\nCoverage increased (+0.1%) to 67.24% when pulling **899fae245a7ae99de2df60db5663f408a646af24 on yycptt:non-blocking-submit** into **b196c3fe63a37f6c318a6834432416639e4f747f on uber:master**.\n  Fixes #3002.\r\nRemove MaxRetries, this was a left over from the old interface Fixed the failing unit tests as well \n[![Coverage Status](https://coveralls.io/builds/29036652/badge)](https://coveralls.io/builds/29036652)\n\nCoverage decreased (-0.08%) to 67.098% when pulling **0959ca2e4e96ff1e617f5e15a68890c674810514 on jontro:s3-archival-multipart** into **32aa76abfa38dd457ef5718f433fae92afdc904a on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28958811/badge)](https://coveralls.io/builds/28958811)\n\nCoverage decreased (-0.3%) to 67.166% when pulling **1560f9be620126eb49a8c282c2a880f9a60f33d0 on yycptt:go-mod-tidy** into **61cf85ac08be0ce00b22d293b38e60fd525dfd4b on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28961725/badge)](https://coveralls.io/builds/28961725)\n\nCoverage decreased (-0.4%) to 67.155% when pulling **ef3b61e40c5cb10b62dacd6aaa31fe29175664e7 on yycptt:queue-task-impl** into **a20e0b412825dfdfe36af172e2238127fe32ff40 on uber:master**.\n     \n[![Coverage Status](https://coveralls.io/builds/28962544/badge)](https://coveralls.io/builds/28962544)\n\nCoverage decreased (-0.5%) to 67.123% when pulling **5bfa4cc8c482b179d8504727c7b8b375a506a136 on vitarb:add-tpath** into **a20e0b412825dfdfe36af172e2238127fe32ff40 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28980569/badge)](https://coveralls.io/builds/28980569)\n\nCoverage decreased (-0.1%) to 67.036% when pulling **75b21c17f298080ccb29e6d6b429ea1d924da72b on RaceConditionQPS** into **909c329d2796a7177a23f6369ab185a558119a3b on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28885880/badge)](https://coveralls.io/builds/28885880)\n\nCoverage increased (+0.4%) to 67.524% when pulling **5682e937ebfb76d42e986f008f6c97dc0e7a7b57 on andrewjdawson2016:RevertDCChange** into **909c329d2796a7177a23f6369ab185a558119a3b on uber:master**.\n  This is a follow-up to https://github.com/uber/cadence/pull/2769\r\n\r\nI didn't test that earlier PR with host verification enabled. Now when I deploy the [0.11.0 release](https://github.com/uber/cadence/releases/tag/v0.11.0) with host verification enabled, it fails with:\r\n\r\n```\r\nIncompatible cassandra versions: unable to create CQL Client: gocql: unable to create session: control: unable to connect to initial hosts: x509: cannot validate certificate for <ip address> because it doesn't contain any IP SANs\r\n```\r\n\r\nThis PR adds a server name setting, which is passed into `tls.Config.ServerName` to bypass the error. I have verified this connects successfully with both `enableHostVerification: true` and `serverName: ` set. \n[![Coverage Status](https://coveralls.io/builds/28983724/badge)](https://coveralls.io/builds/28983724)\n\nCoverage decreased (-0.03%) to 67.126% when pulling **b97e125e058dcda04deab017018eb4b9c4a37107 on aoby:tls-add-server-name** into **dbbf83775e02e0b1ccfe12801a78e040383488ce on uber:master**.\n Thx for the review @meiliang86. Can we get this merged soon? Do I need anything else?  \r\nFor a workflow, where \"memo\" field is set through WorkflowOptions, calling continueAsNew fails to propagate the value to subsequent instances. So any subsequent invocation of \"describe workflow\" will have null values for memo.\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n\r\n```\r\n// setup up workflow options\r\nString wfId = \"greeting101\";\r\nMap<String, Object> map = new HashMap<>();\r\n      map.put(\"key1\", \"value1\");\r\nWorkflowOptions options = new WorkflowOptions.Builder().setWorkflowId(wfId).setMemo(map).build();\r\n      GreetingWorkflow workflow = workflowClient.newWorkflowStub(GreetingWorkflow.class, options);\r\n\r\n// start the workflow\r\nGreetingWorkflow workflow = workflowClient.newWorkflowStub(GreetingWorkflow.class);\r\nWorkflowClient.start(workflow::getGreeting, \"World\");\r\n\r\n// ensure continueAsNew is invoked in the workflow inside workflow\r\n// Current workflow run stops executing after this call.\r\n      if (forSomeCondition()) continueAsNew.composeGreeting(greeting, name, delay, counter);\r\n\r\n// invoke describe workflow\r\n\r\nWorkflowExecution workflowExecution = new WorkflowExecution();\r\n        workflowExecution.setWorkflowId(wfId);\r\n        WorkflowExecutionInfo workflowExecutionInfo = WorkflowExecutionUtils.describeWorkflowInstance(\r\n                cadenceService,\r\n                cadenceServerConfig.getDomain(),\r\n                workflowExecution);\r\nMap<String,Object> memo = workflowExecutionInfo.memo; \r\nassertNull(memo) <--- memo is null\r\n```\r\n  \n[![Coverage Status](https://coveralls.io/builds/28913880/badge)](https://coveralls.io/builds/28913880)\n\nCoverage decreased (-0.2%) to 67.187% when pulling **279155503ab0df96a7925b023d5a94835b5f758b on yycptt:vis-archival-canary** into **c09186f4c8583d3084315b9fe8a493c2b080d1f6 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28862166/badge)](https://coveralls.io/builds/28862166)\n\nCoverage decreased (-0.06%) to 67.253% when pulling **1c2498152ce6e32e9376816fa1bea1e15272f07e on andrewjdawson2016:StartNopScannerWorkflow** into **20a6350ac30327c3c304ba850c647325ef2fab7b on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28985532/badge)](https://coveralls.io/builds/28985532)\n\nCoverage increased (+0.5%) to 67.559% when pulling **f5c300e51973531776078bd19a2679b1d2c8da18 on add-rpc-metrics** into **daf446fff310f8b69df18d735e4a9fa8b48c5fbe on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28863581/badge)](https://coveralls.io/builds/28863581)\n\nCoverage increased (+0.1%) to 67.334% when pulling **1cade3028b5b4556f215a0494beb415426b07226 on andrewjdawson2016:FixScannerQPS** into **9975e7d8a4a00fd2930f4f382566a0c75f3301d8 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28741554/badge)](https://coveralls.io/builds/28741554)\n\nCoverage decreased (-0.09%) to 67.304% when pulling **2dc5d6c9afe0b484608feb39f351442a124d168f on andrewjdawson2016:UpgradeTally** into **bd34a55b09c8bfa1ef7299cb490b53ed4a6875fb on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28740698/badge)](https://coveralls.io/builds/28740698)\n\nCoverage increased (+0.03%) to 67.35% when pulling **fbe132402e55eaff9aca7b3711e310c08b913859 on andrewjdawson2016:DomainCache** into **cb5da71e9cda1540e01dc402f64e0b6d3dfddeba on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28699292/badge)](https://coveralls.io/builds/28699292)\n\nCoverage decreased (-0.09%) to 67.342% when pulling **ac361bafcdc1b936aa744e89b2bac9774179ee10 on UpgradeIDLs** into **8bb88596ab64b81e3ddb391747531765109c227d on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28814943/badge)](https://coveralls.io/builds/28814943)\n\nCoverage decreased (-0.002%) to 67.403% when pulling **71df564e8cacaa6fab70391745a1c9f0861b0a5b on yycptt:transfer-task-executor** into **f0d5b1bacbf5863b0673864766e5fd4a808502bf on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28698833/badge)](https://coveralls.io/builds/28698833)\n\nCoverage increased (+0.6%) to 67.918% when pulling **cac184334ced5f6eb33e5368c91787e9af681202 on submodule** into **f9de3d50be0bef490246a312c6f13b28845f5cf1 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28695605/badge)](https://coveralls.io/builds/28695605)\n\nCoverage decreased (-0.01%) to 67.372% when pulling **35e290879d79a3c154a1d96867c30e4d5bf327cc on andrewjdawson2016:UpgradeIDLs** into **fcd50fd82fbcada3ae46d6307d42f798eb779190 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28692319/badge)](https://coveralls.io/builds/28692319)\n\nCoverage increased (+0.3%) to 67.815% when pulling **9a0e5b71c880fac1f5483518984cd2b5e67a1778 on yycptt:hotfix** into **4b1554209e88212338c5e6ef1598d854015e12ff on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28693695/badge)](https://coveralls.io/builds/28693695)\n\nCoverage increased (+0.1%) to 67.422% when pulling **d5e5aa9438cec719776b59f90ec95af0bcce6d02 on yycptt:task-executor** into **2eeb017dc2cf7be70b627ec661f15038706974a0 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28669193/badge)](https://coveralls.io/builds/28669193)\n\nCoverage decreased (-0.2%) to 67.477% when pulling **af081e064a5465f6366675d93dff3a29c6caa738 on submodule-update** into **72a84fd927671e91e608f7e3b8f36dab5f2df518 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28638430/badge)](https://coveralls.io/builds/28638430)\n\nCoverage increased (+0.05%) to 67.844% when pulling **481f4deeef5a47d660f31a5ca8603152b4a0e2eb on yycptt:0.11.x-hotfix** into **d5cd7b0b165c604cf23746df8826d8d08ae62dc0 on uber:0.11.x**.\n   \n[![Coverage Status](https://coveralls.io/builds/28697502/badge)](https://coveralls.io/builds/28697502)\n\nCoverage increased (+0.04%) to 67.369% when pulling **0de311313cbcb4781e6a8aecd9ba42668f3ddfee on andrewjdawson2016:ListCurrentExecution** into **f9de3d50be0bef490246a312c6f13b28845f5cf1 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28600964/badge)](https://coveralls.io/builds/28600964)\n\nCoverage increased (+0.01%) to 67.754% when pulling **e3ffff6104e3e4a4a8e5e711bf6668795ceeb31b on yycptt:0.11.x-revert** into **6bf637f503425e4a6289067c22a9a8b530a6afcd on uber:0.11.x**.\n  \n[![Coverage Status](https://coveralls.io/builds/28600676/badge)](https://coveralls.io/builds/28600676)\n\nCoverage increased (+0.03%) to 67.816% when pulling **6aa0b8791ed502c16d86fb194887617c14431eef on yycptt:fix-heartbeat-creation** into **873f32c04737bec1af42c216be9ae167b1f67cb0 on uber:master**.\n not a blocking comment.\r\n\r\ncurrently the mutable state is \"versioned\" using next event ID; next event ID is not a good attr protecting concurrent modification of mutable state or in this case, preventing writing the activity heartbeat > 1 times.\r\n\r\nshould have a additional attr 'dbVersion', which will +1 for each db write related to a mutable state\r\n@yux0 @yycptt @venkat1109  \r\n\r\none more thing, plz also consider persist the heartbeat timer time along with activity (currently it is a in mem only attr)  \n[![Coverage Status](https://coveralls.io/builds/28578715/badge)](https://coveralls.io/builds/28578715)\n\nCoverage decreased (-0.005%) to 67.813% when pulling **b8b20c3c1476bb77cdaeef234d367a74bcd017e6 on yycptt:0.11.x-debug** into **23fa79cb9ee8260d84154e4a4385eda99e3c9792 on uber:0.11.x**.\n  \n[![Coverage Status](https://coveralls.io/builds/28726242/badge)](https://coveralls.io/builds/28726242)\n\nCoverage decreased (-0.2%) to 67.284% when pulling **67c90aa66b00efee66b61127c954381d8e133902 on DisableEmitMetric** into **d613cde3a7839560d431c5c241e1a808536bbe21 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28554823/badge)](https://coveralls.io/builds/28554823)\n\nCoverage increased (+0.4%) to 68.232% when pulling **44a34df9b3df2a89e1c8ad344a63d167822e56b6 on yycptt:0.11.x-debug** into **7af39efda081867a4c2f21661dce7f3aa39c7075 on uber:0.11.x**.\n  Hi Cadence developers \ud83d\udc4b,\r\n\r\nDo you have a rough eta for when Cadence server 0.10.4 is to be released? Moreover will this release include the Cassandra SSL feature merged back in November? (see: #2769 ) Thanks for the prompt response @meiliang86. Closing out \"issue\" as my query has now been answered.  \n[![Coverage Status](https://coveralls.io/builds/28721123/badge)](https://coveralls.io/builds/28721123)\n\nCoverage decreased (-0.5%) to 67.338% when pulling **a98da214716a47210e13b0b0a99cc5ced0f6b063 on yycptt:priority-assigner** into **6f31fd97b05193f3bf3ee6e33f282e8b1415ddea on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28700625/badge)](https://coveralls.io/builds/28700625)\n\nCoverage decreased (-0.04%) to 67.401% when pulling **8b03e41f58f3adf980169881dcbed6ab47869854 on history_dlq** into **031bb6b5065d6ea2393219e9719557e2e7663283 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28425357/badge)](https://coveralls.io/builds/28425357)\n\nCoverage increased (+0.1%) to 67.874% when pulling **b6681bb4b422a5b65f4845b2de81cdc7a8cef930 on yycptt:add-task-metrics** into **a48bcb6d9995fa6369ce4610ebd6b01b7d4bddf9 on uber:0.11.x**.\n  \n[![Coverage Status](https://coveralls.io/builds/28465900/badge)](https://coveralls.io/builds/28465900)\n\nCoverage decreased (-0.09%) to 67.712% when pulling **21fd2594e5fc9be260d7d1f2d2af8ff8bd340727 on yycptt:task-scheduler** into **e97f3e93641e36b6b91e57d6621a839453671a0d on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28436322/badge)](https://coveralls.io/builds/28436322)\n\nCoverage increased (+0.06%) to 67.746% when pulling **2f85ed3c9cde9be6d90af61318c9dd8e10344c52 on fix_logging** into **dc5431ec18da82c3e4f7d0a0678ad9be19894366 on master**.\n   [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/uber/cadence?pullRequest=3012) <br/>All committers have signed the CLA. \n[![Coverage Status](https://coveralls.io/builds/28440194/badge)](https://coveralls.io/builds/28440194)\n\nCoverage increased (+0.3%) to 68.103% when pulling **48e79ecf8c6f135cdd367f436918e0cf0907334b on AddEmittingMetricsLog** into **64afbc6d8ef557a0caa0950ad2fd35d3dfbfbaae on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28641034/badge)](https://coveralls.io/builds/28641034)\n\nCoverage decreased (-0.4%) to 67.494% when pulling **cc668caf749b39e824c2d823420b0671d9ccecb3 on dlq_cli** into **36d7dd320203d791313ed85ff323447e917a50ac on master**.\n  \r\nI am facing below issue while starting cadence service with external cassandra.\r\n\r\nBelow are the commands i fired to start Cadence server ,Cadence-wen and statsd server.\r\nCassandra is running on localhost(Windows 10),I am using Windows docker desktop. \r\n\r\ndocker run  --name cadence  --network app-tier -p 7933:7933 -p 7934:7934 -p 7935:7935 -p 7939:7939 -e CASSANDRA_SEEDS=host.docker.internal -e KEYSPACE=cadence -e VISIBILITY_KEYSPACE=cadence_visibility -e SKIP_SCHEMA_SETUP=TRUE -e RINGPOP_SEEDS=host.docker.internal -e STATSD_ENDPOINT=host.docker.internal:8125 -e NUM_HISTORY_SHARDS=1024 -e LOG_LEVEL=info ubercadence/server:master-auto-setup\r\n\r\ndocker run --name cadence-web -p 8088:8088 -d --link cadence -e CADENCE_TCHANNEL_SERVICE=cadence-frontend -e CADENCE_WEB_PORT=8088 -e CADENCE_TCHANNEL_PEERS=192.168.65.2:7933 ubercadence/web:3.4.1\r\n\r\ndocker run --name statsd --network app-tier -p 8080:80 -p 2003:2003 -p 8125:8125 -p 8126:8126 -d graphiteapp/graphite-statsd\r\n\r\nCadence server is Up and running ,Cadence-web UI is accessible.\r\nBUT while running any workflow i am getting exception saying-\r\n\r\n16:36:19.137 [main] WARN  c.u.cadence.internal.common.Retryer - Retrying after failure\r\norg.apache.thrift.TException: Rpc error:<ErrorResponse id=1 errorType=Timeout message=Request timeout after 1014ms>\r\n\tat com.uber.cadence.serviceclient.WorkflowServiceTChannel.throwOnRpcError(WorkflowServiceTChannel.java:513)\r\n\tat com.uber.cadence.serviceclient.WorkflowServiceTChannel.doRemoteCall(WorkflowServiceTChannel.java:488)\r\n\tat com.uber.cadence.serviceclient.WorkflowServiceTChannel.startWorkflowExecution(WorkflowServiceTChannel.java:773)\r\n\tat com.uber.cadence.serviceclient.WorkflowServiceTChannel.lambda$StartWorkflowExecution$7(WorkflowServiceTChannel.java:761)\r\n\tat com.uber.cadence.serviceclient.WorkflowServiceTChannel.measureRemoteCall(WorkflowServiceTChannel.java:533)\r\n\tat com.uber.cadence.serviceclient.WorkflowServiceTChannel.StartWorkflowExecution(WorkflowServiceTChannel.java:760)\r\n\tat com.uber.cadence.internal.external.GenericWorkflowClientExternalImpl.lambda$startWorkflowInternal$0(GenericWorkflowClientExternalImpl.java:134)\r\n\tat com.uber.cadence.internal.common.Retryer.retryWithResult(Retryer.java:122)\r\n\tat com.uber.cadence.internal.external.GenericWorkflowClientExternalImpl.startWorkflowInternal(GenericWorkflowClientExternalImpl.java:132)\r\n\tat com.uber.cadence.internal.external.GenericWorkflowClientExternalImpl.startWorkflow(GenericWorkflowClientExternalImpl.java:77)\r\n\tat com.uber.cadence.internal.sync.WorkflowStubImpl.startWithOptions(WorkflowStubImpl.java:116)\r\n\tat com.uber.cadence.internal.sync.WorkflowStubImpl.start(WorkflowStubImpl.java:180)\r\n\tat com.uber.cadence.internal.sync.WorkflowInvocationHandler.startWorkflow(WorkflowInvocationHandler.java:175)\r\n\tat com.uber.cadence.internal.sync.WorkflowInvocationHandler.access$400(WorkflowInvocationHandler.java:46)\r\n\tat com.uber.cadence.internal.sync.WorkflowInvocationHandler$SyncWorkflowInvocationHandler.startWorkflow(WorkflowInvocationHandler.java:286)\r\n\tat com.uber.cadence.internal.sync.WorkflowInvocationHandler$SyncWorkflowInvocationHandler.invoke(WorkflowInvocationHandler.java:246)\r\n\tat com.uber.cadence.internal.sync.WorkflowInvocationHandler.invoke(WorkflowInvocationHandler.java:162)\r\n\tat com.sun.proxy.$Proxy3.getGreeting(Unknown Source)\r\n\tat com.uber.cadence.samples.hello.HelloActivity.main(HelloActivity.java:92)\r\n\r\nBelow error i am getting while starting cadence-server.\r\n\r\n\r\n{\"level\":\"error\",\"ts\":\"2020-01-24T10:56:17.380Z\",\"msg\":\"Internal service error\",\"service\":\"cadence-frontend\",\"error\":\"InternalServiceError{Message: Not enough hosts to serve the request}\r\n\",\"logging-call-at\":\"workflowHandler.go:3143\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Error\\n\\t/cadence/common/log/loggerimpl/logger.go:134\\ngithub.com/\r\nuber/cadence/service/frontend.(*WorkflowHandler).error\\n\\t/cadence/service/frontend/workflowHandler.go:3143\\ngithub.com/uber/cadence/service/frontend.(*WorkflowHandler).PollForActivityTa\r\nsk\\n\\t/cadence/service/frontend/workflowHandler.go:429\\ngithub.com/uber/cadence/service/frontend.(*DCRedirectionHandlerImpl).PollForActivityTask.func2\\n\\t/cadence/service/frontend/dcRedi\r\nrectionHandler.go:489\\ngithub.com/uber/cadence/service/frontend.(*NoopRedirectionPolicy).WithDomainNameRedirect\\n\\t/cadence/service/frontend/dcRedirectionPolicy.go:112\\ngithub.com/uber/c\r\nadence/service/frontend.(*DCRedirectionHandlerImpl).PollForActivityTask\\n\\t/cadence/service/frontend/dcRedirectionHandler.go:485\\ngithub.com/uber/cadence/service/frontend.(*AccessControl\r\nledWorkflowHandler).PollForActivityTask\\n\\t/cadence/service/frontend/accessControlledHandler.go:347\\ngithub.com/uber/cadence/.gen/go/cadence/workflowserviceserver.handler.PollForActivity\r\nTask\\n\\t/cadence/.gen/go/cadence/workflowserviceserver/server.go:938\\ngo.uber.org/yarpc/encoding/thrift.thriftUnaryHandler.Handle\\n\\t/go/pkg/mod/go.uber.org/yarpc@v1.42.0/encoding/thrift\r\n/inbound.go:61\\ngo.uber.org/yarpc/internal/observability.(*Middleware).Handle\\n\\t/go/pkg/mod/go.uber.org/yarpc@v1.42.0/internal/observability/middleware.go:141\\ngo.uber.org/yarpc/api/mid\r\ndleware.unaryHandlerWithMiddleware.Handle\\n\\t/go/pkg/mod/go.uber.org/yarpc@v1.42.0/api/middleware/inbound.go:71\\ngo.uber.org/yarpc/api/transport.InvokeUnaryHandler\\n\\t/go/pkg/mod/go.uber\r\n.org/yarpc@v1.42.0/api/transport/handler_invoker.go:70\\ngo.uber.org/yarpc/transport/tchannel.handler.callHandler\\n\\t/go/pkg/mod/go.uber.org/yarpc@v1.42.0/transport/tchannel/handler.go:21\r\n5\\ngo.uber.org/yarpc/transport/tchannel.handler.handle\\n\\t/go/pkg/mod/go.uber.org/yarpc@v1.42.0/transport/tchannel/handler.go:118\\ngo.uber.org/yarpc/transport/tchannel.handler.Handle\\n\\t\r\n/go/pkg/mod/go.uber.org/yarpc@v1.42.0/transport/tchannel/handler.go:107\\ngithub.com/uber/tchannel-go.channelHandler.Handle\\n\\t/go/pkg/mod/github.com/uber/tchannel-go@v1.16.0/handlers.go:\r\n126\\ngithub.com/uber/tchannel-go.(*Connection).dispatchInbound\\n\\t/go/pkg/mod/github.com/uber/tchannel-go@v1.16.0/inbound.go:203\"}\r\n{  \n[![Coverage Status](https://coveralls.io/builds/28314314/badge)](https://coveralls.io/builds/28314314)\n\nCoverage decreased (-0.1%) to 67.666% when pulling **0cf59929150ed0fdcb0e4bb1f824b47c572ec514 on yycptt:fix-list-archived-cli** into **0dee0ba987a1badb90cf65be88c56b23a2778423 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28296253/badge)](https://coveralls.io/builds/28296253)\n\nCoverage increased (+0.1%) to 67.807% when pulling **c6030379cebc40078aaf17c33a660f9380f9ea28 on yycptt:fix-flaky-cli-test** into **ee3d5f45043a0a79767d2aca2fafe8f535f47952 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28387771/badge)](https://coveralls.io/builds/28387771)\n\nCoverage decreased (-0.04%) to 67.715% when pulling **e374ca2b332bd949aa10049f809e53eb0ff7e6fe on yycptt:task-processor** into **543cc7c6daf8ebcddf94fcc7f0ea43ce0c1a74b0 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28247494/badge)](https://coveralls.io/builds/28247494)\n\nCoverage decreased (-0.06%) to 67.65% when pulling **51d0aae35654cf3e6d5a57696b20cee1fbda7e85 on non_retry_matching** into **0db27e79038761e6254d71f64520735d788b1655 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28239055/badge)](https://coveralls.io/builds/28239055)\n\nCoverage decreased (-0.03%) to 67.664% when pulling **0beca84a1107b0ef5e5db221d6557014778b18b0 on yycptt:update-license** into **30702321ed2ad5f1a754ae019729df95e2f08eb7 on uber:master**.\n   \n[![Coverage Status](https://coveralls.io/builds/28677339/badge)](https://coveralls.io/builds/28677339)\n\nCoverage decreased (-0.2%) to 67.437% when pulling **ffecb66e8fab29311a62a7c9a1fbe8d00cc37566 on anish531213:aanish/refresh-workflow-tasks** into **84b8ca9d041c4d84b60b8c6fb5c43e9386bbda37 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28036332/badge)](https://coveralls.io/builds/28036332)\n\nCoverage decreased (-0.3%) to 68.017% when pulling **9143ac3033751c3423229f74ef83a4f189324875 on yycptt:task-processing-job** into **afe9717f998614fa58d9f0774c0ab7251036d65e on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28087369/badge)](https://coveralls.io/builds/28087369)\n\nCoverage decreased (-0.5%) to 67.751% when pulling **9138a09ffdee234165d70b7987b8df1871f5b9ba on domain_dlq** into **f55620d6acebb5ac6fb20f701a0fbee09c940f61 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/28015671/badge)](https://coveralls.io/builds/28015671)\n\nCoverage increased (+0.2%) to 67.878% when pulling **95fa0c891e8a8e58a06405155d62c2fc0cff247b on domain_queue_cleanup** into **d69591532cdc305033dd62d19f9ff3f83a3c5364 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27948311/badge)](https://coveralls.io/builds/27948311)\n\nCoverage decreased (-0.06%) to 67.843% when pulling **9bc1329687188560755742970ffb21e12d676832 on get_dlq_messages** into **0fa83dee7872a4cdc35582499d0f158ca5c2d977 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27941356/badge)](https://coveralls.io/builds/27941356)\n\nCoverage decreased (-0.6%) to 67.621% when pulling **4b0c9100d18f599297dcbc68ed08458a2ebe88d3 on yycptt:run-canary** into **f4648ae27430a5f27043a6e9503e6818cf2e0dd0 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27809266/badge)](https://coveralls.io/builds/27809266)\n\nCoverage increased (+0.2%) to 67.912% when pulling **4711f5837994545d0fd89620b2f422b090757a80 on enable-modify-cluster** into **e057c46670ecda72e1c40bae9e70fe126549af0c on master**.\n  Signal to self is logically the same thing as a marker. We need to fix the XDC logic to reapply certain markers the same way we reapply signals.  \n[![Coverage Status](https://coveralls.io/builds/27849577/badge)](https://coveralls.io/builds/27849577)\n\nCoverage increased (+0.4%) to 68.276% when pulling **d21354dc3f32bff78a936af80cfe42829e25fe63 on longquanzheng:cli-reset-batch** into **2348e969a91ce16e280670df06ce048a30e49878 on uber:master**.\n  Also emit domain specific metrics on non-deterministic errors  Updates gocql to pull in https://github.com/gocql/gocql/pull/1321 [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/uber/cadence?pullRequest=2928) <br/>All committers have signed the CLA. \n[![Coverage Status](https://coveralls.io/builds/27942903/badge)](https://coveralls.io/builds/27942903)\n\nCoverage decreased (-0.03%) to 67.761% when pulling **84882de0d4ff299f2b40fd0e5eb7c6afdf3f32e9 on AngerM:master** into **48aa62dcd6e51332f64b27820419f6e53c9cbe44 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27674051/badge)](https://coveralls.io/builds/27674051)\n\nCoverage increased (+0.02%) to 68.061% when pulling **2a87f08260a9c833e87e71956bda2b6c5b59e4c3 on longquanzheng:orderBy** into **c961861e686c267d618c5c5f1aeef3295772045a on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27610999/badge)](https://coveralls.io/builds/27610999)\n\nCoverage decreased (-0.08%) to 67.896% when pulling **3da9e77ee9d1463beadf540b4f34cb907b06e753 on longquanzheng-patch-1** into **0d60272bb3ec63512cd73de96a707b62984625cb on master**.\n  assuming that corrupted state is rare, the solution is fine\r\nplz also update `IsWorkflowExecutionRunning` in mutable state builder to return `false` in this case\r\nplz also update `IsCurrentWorkflowGuaranteed` in mutable state builder to return `false` in this case\r\n \n[![Coverage Status](https://coveralls.io/builds/27697473/badge)](https://coveralls.io/builds/27697473)\n\nCoverage decreased (-0.7%) to 67.995% when pulling **c7e8ae78ec53d96609c648dec156ee5da5be7d6c on longquanzheng:ms-scanner** into **d81a728db2ab63453c9095cd0367d4e4e04b5e2f on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27588050/badge)](https://coveralls.io/builds/27588050)\n\nCoverage decreased (-0.1%) to 67.784% when pulling **66257fe9608b92df42bcf0f4352ba637e19ebcfa on longquanzheng:server-main** into **97c01c95411bc579f775754fef54821c1f17738a on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27582990/badge)](https://coveralls.io/builds/27582990)\n\nCoverage increased (+0.4%) to 68.25% when pulling **c14483c390dea9a57c9d92c576da8671382b7c2a on replicate-activity-start** into **97de98cc8070d820293250aeb07549f8c619e892 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27563863/badge)](https://coveralls.io/builds/27563863)\n\nCoverage decreased (-0.6%) to 67.805% when pulling **e8438ef5a238e247dbb3661875ae06a3750cba5e on longquanzheng:cleanup-idl** into **9ca09ccc0e2131e0edb198b485e2e5065d38f37b on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27672536/badge)](https://coveralls.io/builds/27672536)\n\nCoverage increased (+0.3%) to 68.079% when pulling **1eda7e237e9c94742429c2c676e828c5fb59bce3 on ack-level** into **8d0f6cd126886abefa7a7b2d8d68260da0c1e360 on master**.\n  This PR adds the required docker configuration for the `auto-setup` image on Postgres [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/uber/cadence?pullRequest=2894) <br/>All committers have signed the CLA. \n[![Coverage Status](https://coveralls.io/builds/27502384/badge)](https://coveralls.io/builds/27502384)\n\nCoverage decreased (-0.1%) to 67.803% when pulling **63d0cbd29b53ce51870ed6c65035bb3dc588d0f1 on enmand:dan/improvements/docker-autosetup-pg** into **cba849dfb19f13d9d0dad03d5f87d8b6e9c78ce4 on uber:master**.\n   \n[![Coverage Status](https://coveralls.io/builds/27467617/badge)](https://coveralls.io/builds/27467617)\n\nCoverage increased (+0.1%) to 67.801% when pulling **699f46665c3db4e9fb38b3fbb357720c12b99099 on longquanzheng:postgres4** into **b972d8d3ec909a601c97a30fbeb1eeb83d484b60 on uber:master**.\n How about to make `ubercadence/server:master-auto-setup` work with postgres? @sunfmin https://github.com/uber/cadence/pull/2894 should make the auto-setup docker image work if you build it yourself with ` docker build . -t REPO/TAG_NAME --build-arg TARGET=auto-setup`  \n[![Coverage Status](https://coveralls.io/builds/27422587/badge)](https://coveralls.io/builds/27422587)\n\nCoverage decreased (-0.4%) to 67.347% when pulling **b2e5f3274418048ebaafc9a913192162a08a6266 on longquanzheng:postgres3** into **bf93d90c7d3b1e81e72e1155f97ebf502f1414cc on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27371160/badge)](https://coveralls.io/builds/27371160)\n\nCoverage decreased (-0.06%) to 67.316% when pulling **4baf859c6f27520539b01750592e734643a0d914 on longquanzheng:frontendLogs** into **245075c199b6b32b9ba3e8bfe1f0e9f76b797253 on uber:master**.\n  /*\r\nFAIL: TestSQLQueuePersistence/TestDomainReplicationQueue (0.26s)\r\n        queuePersistenceTest.go:102:\r\n            \tError Trace:\tqueuePersistenceTest.go:102\r\n            \tError:      \tNot equal:\r\n            \t            \texpected: 99\r\n            \t            \tactual  : 98\r\n            \tTest:       \tTestSQLQueuePersistence/TestDomainReplicationQueue\r\n */\r\n```\r\nfunc TestSQLQueuePersistence(t *testing.T) {\r\n\ts := new(pt.QueuePersistenceSuite)\r\n\ts.TestBase = pt.NewTestBaseWithSQL(getTestClusterOption())\r\n\ts.TestBase.Setup()\r\n\tsuite.Run(t, s)\r\n}\r\n```\r\n  \n[![Coverage Status](https://coveralls.io/builds/27417354/badge)](https://coveralls.io/builds/27417354)\n\nCoverage decreased (-0.4%) to 67.405% when pulling **b76ef359aedded77c5c68467154ed595fd52cbcd on retry-task-error** into **bf93d90c7d3b1e81e72e1155f97ebf502f1414cc on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27447889/badge)](https://coveralls.io/builds/27447889)\n\nCoverage increased (+0.6%) to 67.885% when pulling **94024ee847e2d7dd3e59053b7aede79e4e7d35f8 on yycptt:history-resource** into **04732b2c92aabf23eca02084caa48d502bacbea1 on uber:master**.\n Everything looks good when running canary on my local machine.  \n[![Coverage Status](https://coveralls.io/builds/27269079/badge)](https://coveralls.io/builds/27269079)\n\nCoverage decreased (-0.05%) to 67.386% when pulling **9c08c4e8b30225f3d6a68318d5c4f7f2d7341479 on wording-correct** into **dc5f154c34d48b00b3d6b7682e615f9606867b80 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27267990/badge)](https://coveralls.io/builds/27267990)\n\nCoverage decreased (-0.7%) to 67.262% when pulling **c464cd8717d7541a766a48b8ac443d33b2fb3364 on yycptt:fix-int-race** into **41f1acc662adf262bc56b26eb03c9737a43c361b on uber:master**.\n  In sqlx, with NameExec, if there are more than one records to insert, we will see errors like:\r\n```\r\nInternalServiceError{Message: applyTasks failed. Failed to create replication tasks. Error: InternalServiceError{Message: createReplicationTasks failed. Error: pq: got 12 parameters but the statement requires 4}}\r\n          \r\n```\r\n\r\nThis is because of a bug in sqlx library that it doesn't handle the **$X** correctly when expanding the query template into real SQL.\r\n\r\nFor example, for 3 records,\r\nIt should be \r\n```\r\nINSERT INTO ... $1,$2,$3,$4),($5,$6,$7,$8),($9,$10,$11,$12)\r\n```\r\nInstead of \r\n```\r\nINSERT INTO ... $1,$2,$3,$4),($1,$2,$3,$4),($1,$2,$3,$4)\r\n``` current fix (temporary) in : https://github.com/longquanzheng/sqlx/tree/cadence02 in fork repo I submitted a PR to sqlx that should resolve this issue: https://github.com/jmoiron/sqlx/pull/579  \n[![Coverage Status](https://coveralls.io/builds/27231546/badge)](https://coveralls.io/builds/27231546)\n\nCoverage increased (+0.1%) to 66.742% when pulling **4aba5c66b7e1b5427d3685c2b95e45d5980927d6 on yycptt:improve-es-int-test** into **505a79e0475a50bc967e0969fad74619d72ddd76 on uber:master**.\n    \n[![Coverage Status](https://coveralls.io/builds/27182109/badge)](https://coveralls.io/builds/27182109)\n\nCoverage increased (+0.01%) to 66.633% when pulling **5f67ef8c1a188b00fb7dee14beaf45bd649acb77 on ndc-can** into **4b079a0a9af84e37b8e4d97718c9365ea59b0951 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27265517/badge)](https://coveralls.io/builds/27265517)\n\nCoverage increased (+0.9%) to 67.488% when pulling **0b515ad29cb59d1b2aea733cf78e9883b852cc2a on yycptt:frontend-resource** into **5e0a62bd2acaf2aae8e60547cbcce9b0b86d1fa7 on uber:master**.\n   \n[![Coverage Status](https://coveralls.io/builds/27120891/badge)](https://coveralls.io/builds/27120891)\n\nCoverage decreased (-0.05%) to 66.605% when pulling **0fda3d7fb018238ca3a3f10e770a7dc0dfd85080 on andrewjdawson2016:removeStickyQuery** into **1b10ab34f49df7fca8bc06bdd7c23f3565ed6a5c on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27099188/badge)](https://coveralls.io/builds/27099188)\n\nCoverage increased (+0.4%) to 67.093% when pulling **a2f75d546e4189145b4251e2c177b5e76e3bc840 on yycptt:cli-version** into **04d4d42b7f7e60620d0b77e2a694154d79c17883 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27100233/badge)](https://coveralls.io/builds/27100233)\n\nCoverage decreased (-0.08%) to 66.672% when pulling **ad1562aaabaaeb10d397f2920df330be15d876a8 on 0.10.x-patch** into **c6112ac58aa321cd9b1afebffe212090d81777ae on 0.10.x**.\n  This is an attempt to add support for TLS MySQL (we use RDS/Aurora and require TLS support) using the recently added TLS support for Cassandra. In the process it reuses the config in persistence for use in tools and removes ConnectParams. \r\n\r\nFeedback is welcome! [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/uber/cadence?pullRequest=2841) <br/>All committers have signed the CLA. \n[![Coverage Status](https://coveralls.io/builds/27097423/badge)](https://coveralls.io/builds/27097423)\n\nCoverage increased (+0.3%) to 67.001% when pulling **e7b697e92cbaf9b8eee8d704cf7b0cce913d29e9 on bjacobso:ben/mysql-tls** into **04d4d42b7f7e60620d0b77e2a694154d79c17883 on uber:master**.\n @bjacobso I think your change is easier if you can do it after I did this refactoring: https://github.com/uber/cadence/pull/2836 @venkat1109 Thanks for the feedback! @longquanzheng I will wait until your PR lands to continue. \r\n\r\nOverall though does the direction make sense? We really need TLS in order to put Cadence in production. > Overall though does the direction make sense? \r\n\r\nThe direction certainly looks reasonable to me. One thing that I don't like is the fact that the config takes a path to keyFile. Ideally, this should be some sort of TLSCertProvider interface which behind the scenes has many implementations one of which could be a keyFile stored on disk. But for most production use cases, the keyFile will likely be stored on a KeyServer and the implementation will fetch it and store it only in memory (never on disk). This is orthogonal to what you are trying to achieve though and should be a separate task item. @longquanzheng I see you have made good progress on your refactor. Should I wait for it to land in master or do you think it is in a stable spot for me to start making my changes? > @longquanzheng I see you have made good progress on your refactor. Should I wait for it to land in master or do you think it is in a stable spot for me to start making my changes?\r\n\r\nIt should be in a good shape enough for just start working on top of it. But it's probably even easier for you if you wait for landing into master -- it shouldn't take a long time. As tomorrow is holiday, I think @venkat1109  will review my PR next week.  Closing in favor of https://github.com/uber/cadence/pull/2913  \n[![Coverage Status](https://coveralls.io/builds/27094004/badge)](https://coveralls.io/builds/27094004)\n\nCoverage decreased (-0.06%) to 66.618% when pulling **1136b78831cf209933f6d8b0aa6686b78b7dad22 on yycptt:list-cli-improve** into **a4e46007233d248b5e47f287a7bad04f0bbb2917 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27070689/badge)](https://coveralls.io/builds/27070689)\n\nCoverage increased (+0.4%) to 67.062% when pulling **1a4f895df3149aed9ff7376964a7ab47fb7bf0bf on fix-cancel-activity-notfound** into **88c6d1abbe05c29cd5f4ae3c7c4751a0a6375b17 on master**.\n  This PR is to refactor the persistence layer to make it easier and plugable to support different databases, also refactor MySQL for the new interfaces\r\nMore specifically:\r\n1. Add persistence interface for CLI/Testing \r\n2. Add interface for plugin.factory\r\n3. Move MySQL to the sql-extensions and implement(/refactor to) factory\r\n4. Refactor sql persistence test for MySQL\r\n\r\n\r\n```\r\n(postgres2)$./cadence-server --env development_postgres start\r\n2019/11/27 16:59:40 Loading config; env=development_postgres,zone=,configDir=./config\r\n2019/11/27 16:59:40 Loading configFiles=[./config/base.yaml ./config/development_postgres.yaml]\r\n2019/11/27 16:59:40 error creating file based dynamic config client, use no-op config client instead. error: error checking dynamic config file at path , error: stat : no such file or directory\r\n{\"level\":\"info\",\"ts\":\"2019-11-27T16:59:40.141-0800\",\"msg\":\"Created RPC dispatcher and listening\",\"service\":\"cadence-frontend\",\"address\":\"127.0.0.1:7933\",\"logging-call-at\":\"rpc.go:81\"}\r\n```\r\n\r\nSome TODOs -- will create other small diffs for them\r\n1. https://github.com/uber/cadence/issues/2863\r\n2. https://github.com/uber/cadence/issues/2856\r\n3. https://github.com/uber/cadence/issues/2854\r\n4. https://github.com/uber/cadence/issues/2869\r\n5. https://github.com/uber/cadence/issues/2870\r\n6. https://github.com/uber/cadence/issues/2877 https://github.com/uber/cadence/issues/2536 \n[![Coverage Status](https://coveralls.io/builds/27448479/badge)](https://coveralls.io/builds/27448479)\n\nCoverage decreased (-0.1%) to 67.781% when pulling **310f89ddcae80fc37acb59ba4429fe29d01204e8 on longquanzheng:postgres2** into **ac457cd9f7f9ec4829eb8bd555052f871ddf748f on uber:master**.\n @venkat1109 Can you take a look at this as well?  https://github.com/uber/cadence/issues/1482 \n[![Coverage Status](https://coveralls.io/builds/27067989/badge)](https://coveralls.io/builds/27067989)\n\nCoverage decreased (-0.01%) to 66.616% when pulling **ddf5365d91714be43d5fb4f56fda9c2e800ae5e0 on anish531213:aanish/add-attempt** into **808265e91c6b0b7730b4425ab7611d75727f97d7 on uber:master**.\n See comments in #1482.  \n[![Coverage Status](https://coveralls.io/builds/26995862/badge)](https://coveralls.io/builds/26995862)\n\nCoverage increased (+0.005%) to 66.85% when pulling **47632d16a8581af92795c11f0c1f38801aa85a12 on 0.9.x-patch** into **b37db6ba91c78df8675464627f9e3a522afc1f5c on 0.9.x**.\n  \n[![Coverage Status](https://coveralls.io/builds/26982009/badge)](https://coveralls.io/builds/26982009)\n\nCoverage decreased (-0.4%) to 66.604% when pulling **4af021a80377d9f6ee438e2ddb9024bc8edf2302 on yycptt:vis-archiver-guide** into **7700613bd14eafe0a7275d76ad04e9735f2ceece on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26975310/badge)](https://coveralls.io/builds/26975310)\n\nCoverage decreased (-0.3%) to 66.671% when pulling **e3d8dd683f2b122484482747921b44252b85028b on yycptt:vis-start-time** into **42d03452c7578bad87d0c13d0f7bde258b80dac4 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26953215/badge)](https://coveralls.io/builds/26953215)\n\nCoverage increased (+0.09%) to 66.641% when pulling **fc59a81dcfde7f8ae9cd4e202e60c64eeba7500f on yycptt:fix-archival-metrics** into **21e7f99de30eff35f997ead947dad18cf01b6ed4 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26951202/badge)](https://coveralls.io/builds/26951202)\n\nCoverage decreased (-0.1%) to 66.421% when pulling **562b30059ce918c794ff0a536869ef8dd94c954b on pollmutablestate** into **21e7f99de30eff35f997ead947dad18cf01b6ed4 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26926209/badge)](https://coveralls.io/builds/26926209)\n\nCoverage decreased (-0.1%) to 66.434% when pulling **0273f110501286c93855f3e1d82c8d07bebd9426 on yycptt:vis-archival-when-wf-close** into **95093ea3fdf5a73430f4ca3e5c21e9a42fb82788 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26926068/badge)](https://coveralls.io/builds/26926068)\n\nCoverage increased (+0.3%) to 66.875% when pulling **220b324327872c585a3d7e4ab4f06d2866e5c6ce on resend-can** into **95093ea3fdf5a73430f4ca3e5c21e9a42fb82788 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26918273/badge)](https://coveralls.io/builds/26918273)\n\nCoverage decreased (-0.4%) to 66.524% when pulling **2b4f423221beef6acfe8a3e1840edc2a0661eb7d on handle-can-resend** into **e58ce1a84859b3dec6a2ed256a63d01d168f207a on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26869167/badge)](https://coveralls.io/builds/26869167)\n\nCoverage decreased (-0.03%) to 66.548% when pulling **193c7d20dc4b34b4a889fc267da1401d0016aa7d on fix-sync-activity** into **d4308b9eb690ad0a1c7a31610285db41d75d85fe on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26863772/badge)](https://coveralls.io/builds/26863772)\n\nCoverage decreased (-0.06%) to 66.472% when pulling **6e5cf4de31a6fe4556a0a689b953117f21e90fb6 on fix-clientbean** into **792479969793ed81fafdeb5accca349a44c518a9 on master**.\n  let us keep the workflow status check and discard the activity version thing for now. \n[![Coverage Status](https://coveralls.io/builds/26841271/badge)](https://coveralls.io/builds/26841271)\n\nCoverage increased (+0.5%) to 67.098% when pulling **c459e6e4b4feaf1025f42eb01e6445bb059e6928 on activity-version** into **6a264d2e75200409c80206082753d20ccc137ae7 on master**.\n  few things need to be changed\r\n1. when doing workflow reset on active side, also re-apply the activity progress, if applicable\r\n2. for workflow reset & cross DC, bundle the above activity progress (sync activity) along with the workflow reset batch\r\n3. for cross DC conflict resolution mutable state rebuild, active side, whenever sending the first batch of events which has version change, should also include all activity progress (sync activity) as part of the bundle  \n[![Coverage Status](https://coveralls.io/builds/26840478/badge)](https://coveralls.io/builds/26840478)\n\nCoverage decreased (-0.4%) to 66.659% when pulling **6afbff2337bc37287a51337b3616e00bf83df36f on yycptt:improve-retention-msg** into **d3e9c2748b188eae26e8848dc54fa6dc8390ba13 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/27065670/badge)](https://coveralls.io/builds/27065670)\n\nCoverage increased (+0.05%) to 66.679% when pulling **5dbaaa1a67fdb9ffc1ac6a3b9c39bc570f6f882f on reapply-dedup** into **808265e91c6b0b7730b4425ab7611d75727f97d7 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26816935/badge)](https://coveralls.io/builds/26816935)\n\nCoverage decreased (-0.01%) to 66.676% when pulling **dff5d00644dd85efefff861fe42dbe34d3f57201 on fix-lint** into **0a722c0f9454e0b4a241024a69e8232d870987ad on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26810455/badge)](https://coveralls.io/builds/26810455)\n\nCoverage increased (+0.6%) to 67.253% when pulling **2866ac84b30a14e9d7ea9a3c909eae2ac847b27d on yycptt:vis-archival-tag-and-dc** into **1046b5b3d8441a1008a6c246b1fc215cb94c860d on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26794597/badge)](https://coveralls.io/builds/26794597)\n\nCoverage increased (+0.05%) to 66.711% when pulling **98e9040ea73a53cce65918e5249d8c3e6fd2f35f on mysql-version** into **33321e278d04ce92073c2bad79295a21ec8338c2 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26784302/badge)](https://coveralls.io/builds/26784302)\n\nCoverage decreased (-0.06%) to 66.642% when pulling **6a40630ecc463287c495524e2fc4275107b80871 on version-compare** into **589424187ec374f736ef3ac0b2d8997575211c05 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26711776/badge)](https://coveralls.io/builds/26711776)\n\nCoverage decreased (-0.6%) to 66.319% when pulling **8b396942177eda186c3f1fa030102b826ac79973 on yycptt:eventstore-version** into **a4561ec56beab9f4004327b92766b37a5ef66064 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26717013/badge)](https://coveralls.io/builds/26717013)\n\nCoverage decreased (-0.02%) to 66.373% when pulling **0e1ab9b24bc8ee03fc9502f363222f29a09c0654 on resend-fix** into **3b41da33c404f413c8873372935d1cdbcdb8dab8 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26723516/badge)](https://coveralls.io/builds/26723516)\n\nCoverage increased (+0.2%) to 66.63% when pulling **bb0096ebfd50bc9bd10944ea05bbd696b0780a2c on transfer-active-processing-refactoring** into **454d3812260a9b4a52099608b686184f57f29fc5 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26680834/badge)](https://coveralls.io/builds/26680834)\n\nCoverage decreased (-0.04%) to 66.671% when pulling **7a0a966476fe80307ddf20a98c6ecaea67ba726b on fix-workflow-state** into **5ac1e0b9890ba8decc51c804efce8fd6df45c61f on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26661585/badge)](https://coveralls.io/builds/26661585)\n\nCoverage decreased (-0.06%) to 66.673% when pulling **b5514a7f7d01d16193c72e5b5b69f4f5020eccfb on fix-checking** into **fe0bd36eec64bb110e2dd0aacf9596739c4163b7 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26629817/badge)](https://coveralls.io/builds/26629817)\n\nCoverage increased (+0.1%) to 66.72% when pulling **6052b49dc4ca8065853bd70066519c2f60a9b247 on sort-imports** into **0cd0ffafdbaae3e26a1da8f587d3478342af6b68 on master**.\n  Right now the logic in decisionHandler is nomothetic. We need to break the methods up. Also decision task timeout logic should live here.   Hi everyone, \r\n\r\nFirst of all I want to thank you for this amazing project. I started playing with cadence a couple of days ago and I'm impressed. One thing that I'm struggling to understand is the queueing in task lists and the criteria which is used by cadence to decide when and using which worker to execute a specific activity.\r\n\r\nIn the documentation I see the following: \r\n\r\n> A worker polls for a message only when it has spare capacity, so it never gets overloaded.\r\nAutomatic load balancing across a large number of workers.\r\n\r\nKeeping that in mind I created a workflow that launches a task which uses 100% CPU for 30 seconds on all cores. I then start 2 workers and start the cpu intensive workflow 2 times. Workflow1 is launched on worker1 while workflow2 is launched on worker2. The weird thing is now, both activities are executed immediately on worker1. I expected the worker to first finish activity1 and then activity2.\r\n\r\nIn a second example I created a workflow which launches an activity for every CPU core. Each of these activities again generate 100% CPU load for 30 seconds. I then again launch 2 workers and trigger the workflow 2 times. In this example workflow1 is started on worker1 and workflow2 is started on worker2. Now 4 activities are executed using worker1 and the other 4 activities are executed using worker2. Here again I expected the activities to be executed one by one, since the \"capacity\" of the workers is 0 no?\r\n\r\nSo my question is: Is is possible to configure Cadence to schedule activities only if enough CPU and memory are available? What is the criteria for a worker to be \"overloaded\" as described in the documentation?\r\n\r\nThank you and best regards  Thank you for the interest in Cadence. You have to specify the limit on how many parallel activities a worker is allowed to pick up. The default limit is pretty high that's why you see a single worker picking them up. The configuration parameter is WorkerOptions.MaxConcurrentActivityExecutionSize.  Hi @mfateev thanks for your quick response. Ah so the workers are limited by WorkerOptions.MaxConcurrentActivityExecutionSize and not by system resources such as CPU and memory? Is there a way to achieve what I'm trying to do (allow workers to pick up work based on system resources)? @wxing1292 ah okay that't what I suspected, thanks for your reply! Do you know of a way to solve this by e.g. combining it with docker swarm? Say, execute resource intensive activities in a docker container and let docker swarm analyze & manage system resources.  Ah so the number of concurrent activity executions is static for a specific worker, I see. But wouldn't it be possible to dynamically start and stop workers (e.g. using the CLI) depending on docker swarm system resources monitoring? E.g. a simple script which polls for docker swarm memory usage and if memory is available it spins up additional Cadence workers.  The idea to dynamically increase / decrease # of coroutines / threads in go / java client lib is certainly possible, but in reality, after proper load testing (assuming that user will load test their system based on different use case), this functionality will be used less frequently.\r\n\r\nso to sum up:\r\n1. since this is not a high priority issue, this feature is not currently on our roadmap\r\n2. any contribution will be welcomed Alright makes sense, thanks a lot @wxing1292 I'm closing this issue  \n[![Coverage Status](https://coveralls.io/builds/26601013/badge)](https://coveralls.io/builds/26601013)\n\nCoverage increased (+0.5%) to 67.285% when pulling **a064954f6f713e0bdd4ee99e6c8b9472c01910aa on rename-decision-timeout-value** into **403373bf9e9deb0f776e6dd335627fbbd006748c on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26681933/badge)](https://coveralls.io/builds/26681933)\n\nCoverage decreased (-0.4%) to 66.41% when pulling **230b2c1e105aa1daa25200487ba29eec52c67ed2 on deprecate-timer-builder** into **b1c0886447770e155b9638beba316c6da85dbce1 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26580343/badge)](https://coveralls.io/builds/26580343)\n\nCoverage increased (+0.5%) to 67.348% when pulling **fe0218a0a1a9eb14f347a8bc955c0a0bb28dfd0e on deprecate-mockery** into **a1b996d7d0d5bd3f92deff42a39f1c312b98360d on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26572500/badge)](https://coveralls.io/builds/26572500)\n\nCoverage increased (+0.06%) to 66.931% when pulling **71860742c0907b7eaec96dc15173b70436bb32cd on do-not-initialize-client-if-cluster-not-enabled** into **2ec684567b983b8fc831d3091ffabc2374fd7b46 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26573053/badge)](https://coveralls.io/builds/26573053)\n\nCoverage increased (+0.1%) to 66.929% when pulling **e4f092336a7bc945f2106cbbb307e71ebadb2db2 on merge-task-generation** into **ac9069349846e8ab8502ac05a44abe4fbb8297ab on master**.\n  Set default event store version to v2 in apply events. This change is needed before service upgrade to 0.10 \n[![Coverage Status](https://coveralls.io/builds/26562044/badge)](https://coveralls.io/builds/26562044)\n\nCoverage increased (+0.3%) to 67.256% when pulling **8a5647a33524b5287153b90e50f3c29355d87c96 on 0.9.x-patch** into **ecdaf96ce5fa3a7da4972d85a92e06e192141815 on 0.9.x**.\n  \n[![Coverage Status](https://coveralls.io/builds/26537920/badge)](https://coveralls.io/builds/26537920)\n\nCoverage increased (+0.2%) to 66.935% when pulling **c9839801a2157f14fd727e2ef1a2384bd75d5877 on timer-sequence** into **2827287aae0f2cb504115d059b8b4d305dbb006a on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26534435/badge)](https://coveralls.io/builds/26534435)\n\nCoverage decreased (-0.08%) to 66.637% when pulling **abeaa570266c86542a674e6e4302a881c1d98323 on timer-deterministic-sort** into **d0b51308acfa4d121b08c452aed389d6aa3164ba on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26514480/badge)](https://coveralls.io/builds/26514480)\n\nCoverage decreased (-0.6%) to 66.702% when pulling **d080819cccdc3df8f659f496de5eceb75390c8fc on fix-timer** into **8ae29adb0b0825ee3c1054549503a58c8bb2a028 on master**.\n  Would it be possible to make the buildkite pipeline public? That would allow external contributors to access build reports.\r\n\r\nBuildkite [announced support for public build pages](https://buildkite.com/changelog/46-public-build-pages-for-open-source) back in February.  It can be set up here: https://buildkite.com/uber/cadence/settings/pipeline (admin privileges needed). Amazing! Thank you! :clap: :clap: :clap:    \n[![Coverage Status](https://coveralls.io/builds/26427249/badge)](https://coveralls.io/builds/26427249)\n\nCoverage decreased (-0.2%) to 67.145% when pulling **14b3267e9b951fbd8df95f8ce40fa42d8fefcf8c on schema-version** into **9ae7b5afae61fb0c30e959bc2c8c2a57f8d9d997 on master**.\n  I\u2019m using the command until cadence --domain $CADENCE_CLI_DOMAIN domain describe || cadence --domain $CADENCE_CLI_DOMAIN domain register; as a test for when cadence has started and ready. It looks like this command actually halts cadence if it is in the middle of initializing cassandra. This is error\r\n```\r\n2019/10/20 02:37:03 Schema updated from 0.21 to 0.22                                              \r\n2019/10/20 02:37:03 UpdateSchemeTask done                                                         2019/10/20 02:37:03 gocql: unable to dial control conn 172.27.215.236: dial tcp 172.27.215.236:9042: connect: connection refused                                                                   \r\n2019/10/20 02:37:03 error creating Keyspace:gocql: unable to create session: control: unable to connect to initial hosts: dial tcp 172.27.215.236:9042: connect: connection refused                \r\n2019/10/20 02:37:03 error: failed to connect to 250.2.162.9:9042 due to error: Keyspace 'cadence_ visibility' does not exist                                                                        \r\n2019/10/20 02:37:03 error: failed to connect to 250.2.162.9:9042 due to error: Keyspace 'cadence_ visibility' does not exist                                                                        \r\n2019/10/20 02:37:03 no connections were made when creating the session                            \r\n2019/10/20 02:37:03 error: failed to connect to 250.2.162.9:9042 due to error: Keyspace 'cadence_ visibility' does not exist                                                                        \r\n2019/10/20 02:37:04 error: failed to connect to 250.2.162.9:9042 due to error: Keyspace 'cadence_ visibility' does not exist                                                                        \r\n2019/10/20 02:37:04 no connections were made when creating the session                            \r\n2019/10/20 02:37:04 Loading config; env=docker,zone=,configDir=/etc/cadence/config                \r\n2019/10/20 02:37:04 Loading configFiles=[/etc/cadence/config/docker.yaml]                         \r\n2019/10/20 02:37:04 error: failed to connect to 250.2.162.9:9042 due to error: Keyspace 'cadence_ visibility' does not exist                                                                        \r\n2019/10/20 02:37:04 error: failed to connect to 250.2.162.9:9042 due to error: Keyspace 'cadence_ visibility' does not exist                                                                        \r\n2019/10/20 02:37:04 Incompatible versionsunable to create CQL Client: no connections were made when creating the session                                                                           \r\n2019/10/20 02:37:04 Command exited with error: exit status 1 \r\n```\r\n\r\nThe problem is in this line from my Terraform automation\r\nhttps://github.com/mingfang/terraform-k8s-modules/blob/master/modules/cadence/server/main.tf#L53 @wxing1292 Thanks for troubleshooting this. \r\nAs discussed, I believe you're correct in thinking that this problem was actually caused by the Cassandra being unstable around the same time as the schema is being created.  \n[![Coverage Status](https://coveralls.io/builds/26418762/badge)](https://coveralls.io/builds/26418762)\n\nCoverage increased (+0.1%) to 67.268% when pulling **5f3f3c379c8f317328eef2d78fb30da50d16b3c9 on mockery-deprecation** into **8d14eb53d7c12f233ff49ee70f7e5549aa2805e1 on master**.\n   \n[![Coverage Status](https://coveralls.io/builds/26408328/badge)](https://coveralls.io/builds/26408328)\n\nCoverage decreased (-0.4%) to 66.801% when pulling **9ba3fb7a55a770b57c482b620ead5e8b9cf7bca5 on update-kafka-client** into **1da0ebfa981b63153335209d87e24e2d3a6c62c9 on master**.\n  Related to this, but from a totally different perspective: For service protection, we need the ability to pause task processing given a domain.  \n[![Coverage Status](https://coveralls.io/builds/26386645/badge)](https://coveralls.io/builds/26386645)\n\nCoverage increased (+0.06%) to 66.808% when pulling **fea0dd0fa954604de5adf43a87e99fb645329e1e on task-processing-context** into **11500606e2af3e030237ae2bd1bce8e8aa5c7d73 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26339997/badge)](https://coveralls.io/builds/26339997)\n\nCoverage decreased (-0.1%) to 66.996% when pulling **a428cf55c82da2abf4e569ba6470fd4dad0129f7 on mutable-state-check** into **f72adc51cb05032ea671ac44d9b074dab1cb722d on master**.\n   \n[![Coverage Status](https://coveralls.io/builds/26336310/badge)](https://coveralls.io/builds/26336310)\n\nCoverage decreased (-0.5%) to 66.676% when pulling **480d71441561110c165af1b57c5e03fe0f26d3eb on domain** into **df19cca8b0801739f10d11eb62a8d6da90c95646 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26333114/badge)](https://coveralls.io/builds/26333114)\n\nCoverage decreased (-0.04%) to 66.732% when pulling **19be4ecf61993307fdd32e0784edb5cbe2bd9f8a on improve-domain-cache-error-handling** into **a84e928f22786f9e126981b05f7a2fae60d8488a on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26313522/badge)](https://coveralls.io/builds/26313522)\n\nCoverage increased (+0.3%) to 67.131% when pulling **126a972d3e8fe32ffa1aa64cd7f09bc5d5bef9b8 on flush-buffer-when-timeout-terminate** into **5e00abe539c54be2617044ef16cd93f8c7610dbf on master**.\n    \n[![Coverage Status](https://coveralls.io/builds/26292045/badge)](https://coveralls.io/builds/26292045)\n\nCoverage increased (+0.4%) to 67.04% when pulling **12f9848653699ad40918a1bd3d440717ed2ce2ad on fix-permission** into **1ddc599c6d3433a12b35893eaab466598b44e240 on master**.\n  Hey folks.\r\n\r\nTrying to run the latest `server` Docker image hosted on DockerHub, tag `0.9.3`. Looks like there might be an issue with the entrypoint script not being marked as executable or something? Tags `0.9.0`, `0.9.1`, and `0.9.3` all have this issue:\r\n\r\n```bash\r\n$ docker run -it --rm ubercadence/server:0.9.3\r\n/bin/bash: /start-cadence.sh: Permission denied\r\n```\r\n\r\nSo I walked back in time and found that the latest 0.8 tag (`0.8.6`) is fine:\r\n\r\n```bash\r\n$ docker run -it --rm ubercadence/server:0.8.6\r\n2019/10/14 04:41:41 Loading config; env=docker,zone=,configDir=/etc/cadence/config\r\n2019/10/14 04:41:41 Loading configFiles=[/etc/cadence/config/docker.yaml]\r\n(rest snipped)\r\n```\r\n\r\nI'll be using `0.8.6` in my k8s cluster for now, but just wanted to raise a red flag about those latest image releases. I'd rather use them, but they don't seem to execute as expected.\r\n\r\nThank you. Closing this as the bad images have been removed and new images are published.  fix in https://github.com/uber/cadence/pull/2761\r\n\r\nbypassing server is a little more unfriendly: user need to pass domianID and numShards. Let's have the minimum fix for now. We can create a new issue for it and see if we still want to do that way.  \n[![Coverage Status](https://coveralls.io/builds/26303456/badge)](https://coveralls.io/builds/26303456)\n\nCoverage decreased (-0.1%) to 66.611% when pulling **c5d71aca3313bef717896ef46a5c5513fc070f78 on fix-admin-cli** into **99b2baa176e998faef6d1c92bb85b8d54835c265 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26266101/badge)](https://coveralls.io/builds/26266101)\n\nCoverage decreased (-1.0%) to 66.688% when pulling **576b7e21f19f95e45ea4c91a485822b6d948bf21 on remove-unnecessary-insertion-timer-builder** into **44f69c7abc7a17a51a93fd0b24a568e7efe03834 on master**.\n  I've found some spelling issues with aspell. [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/uber/cadence?pullRequest=2658) <br/>All committers have signed the CLA. @wxing1292 done!  \n[![Coverage Status](https://coveralls.io/builds/26288343/badge)](https://coveralls.io/builds/26288343)\n\nCoverage increased (+0.2%) to 67.057% when pulling **6322bee965fd7f71b5ff7b55e518573279d46275 on workflow-reset-rewrite** into **16eb3d5759d064bee4d39167182b4bdd26960bac on master**.\n  It common scenario when a workflow should be started with new parameters. Terminating and then starting workflow has race conditions. Adding terminateIfRunning WorkflowIDReusePolicy would allow to eliminate race conditions. @wxing1292 Is it still available to be picked up? If yes, I would love to take it. Yes, I'm not aware about anyone working on this. Hi, @mfateev @wxing1292 apologies for the delayed response. I was trying to wrap my head around the cadence server and client codebase. As I understood it, the following steps are needed:\r\n\r\n1. Append the new policy `TerminateIfRunning` in `enum WorkflowIdReusePolicy`, in [shared.thrift](https://github.com/uber/cadence-idl/blob/master/thrift/shared.thrift#L106) file. \r\n2. Add a new workflow reuse policy in the [internal/client.go](https://github.com/uber-go/cadence-client/blob/master/internal/client.go#L481) and [client/client.go](https://github.com/uber-go/cadence-client/blob/master/client/client.go#L388). Make other relevant changes in the client to send the new policy while creating workflows.\r\n3. Handle the new policy in the cadence server [canary/client.go](https://github.com/uber/cadence/blob/master/canary/client.go), and do the steps necessary to ensure that existing workflow is terminated before creating a new one.\r\n\r\nObviously, the last step is the critical one. I will try to further specify the exact sub-steps needed in the final part. I know it's a lot to ask for, but it would be a big help if you guys can point me to any design/high-level architecture document, or something else that would help me to have a better understanding of the cadence server. 3. canary is a process used to test availability of the service. The actual implementation logic is in the https://github.com/uber/cadence/blob/ee3d5f45043a0a79767d2aca2fafe8f535f47952/service/history/historyEngine.go#L488 @samarabbas Would you be able to give the sequence of steps needed to change the historyEngine? @vancexu plz provide some details about signal with start, that code should really be cleaned up\r\n\r\nmy understanding, the followings should be done\r\n1. merge start workflow execution with signal with start workflow execution (underlying business logic)\r\n2. add the corresponding terminal & start policy to workflow ID reuse policy\r\n3. treat terminal & start something similar to signal with start  I would also consider https://github.com/uber/cadence/issues/2653 An open question if input can be updated. I think it should be allowed for crons which are waiting for the first decision task.  \n[![Coverage Status](https://coveralls.io/builds/26238100/badge)](https://coveralls.io/builds/26238100)\n\nCoverage increased (+0.2%) to 66.77% when pulling **2f624d3cee9c7774a9ccac98d659a77a7971f7af on fix-worker-init** into **189b1e1efd585664d38105e6bdd97d4b5ec74378 on master**.\n     \n[![Coverage Status](https://coveralls.io/builds/26168106/badge)](https://coveralls.io/builds/26168106)\n\nCoverage decreased (-1.0%) to 66.822% when pulling **e21f88c18a08ff52662aa93d60014fd77f693a06 on kafka-ndc** into **dccfa24dd77d6346900157b0baac269ec13a89eb on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26127201/badge)](https://coveralls.io/builds/26127201)\n\nCoverage decreased (-0.04%) to 66.863% when pulling **362ca290ea00064c9bf8c45bb785afe54f822821 on remove-domain-v1-schema** into **ef14cb24bf6397b5713c072fd504c79676b8aeea on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26125662/badge)](https://coveralls.io/builds/26125662)\n\nCoverage decreased (-0.01%) to 66.806% when pulling **7ada2c9b8e92c213baa47dc11fd58e83630e6313 on fix-test-bug** into **9d30d92377001d11c161dc2caab2b4d5f6937703 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26120371/badge)](https://coveralls.io/builds/26120371)\n\nCoverage increased (+0.03%) to 66.929% when pulling **ee233b69321b2f2f55b963d7dc2df3770865f61a on bugfix** into **a781595a30ff4feea7bfc38305e091a6a29d1f07 on master**.\n  One year ago, I introduced History Events V2 with more functionality(forking branches) and performance(removing LWT). However we had to keep V1 running for backward compatibility. After one year, we have found that there is no more workflows running with V1. It's time to remove the V1 code and the logic of backward compatibility. \r\n\r\n\r\nTODO:\r\n1. Rename V2 interface to get rid of \"V2\" since there is no V1 anymore.\r\n2. Make SetHistoryTree transparent in mutableStateBuilder to make it more easy to maintain. @wxing1292 I think they are a little bit different. The history iterator used by archiver needs the ability to get current state of the iterator and create a new iterator based on some previous states. I don't think the paging iterator supports that. The functionality is needed because archiver workflow needs to periodically record its current progress and resume from last saved state if worker restarts. \r\n\r\nThere are some other issues like keeping current iterator state when error occurs, performing lookahead for nextPageToken etc. If you want, we can talk about it in more detail offline. \n[![Coverage Status](https://coveralls.io/builds/26270083/badge)](https://coveralls.io/builds/26270083)\n\nCoverage increased (+0.08%) to 66.762% when pulling **7a4cdd1ef117cacd0844f6eb9346e68092d1fa22 on longquanzheng:eventsV1** into **dda75d096e563dc20313adce50600969edb3459f on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26104476/badge)](https://coveralls.io/builds/26104476)\n\nCoverage increased (+0.3%) to 67.262% when pulling **13fdcaa2d40d9a67924213bc156949dd4bbfde15 on deprecate-domain-v1** into **6d2ffbd5110eaba92c03ac179106521cf1fee6aa on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/26078054/badge)](https://coveralls.io/builds/26078054)\n\nCoverage decreased (-0.2%) to 67.024% when pulling **a30c77176009b74f68b9b5e46b38e02aa9ff8793 on admin-domain-cli** into **e2cfef989cc0a6c3606bcd30edd44eda9861f920 on master**.\n  Currently, if a customer wants to update the cron schedule on a workflow, they have to terminate and start the workflow with the new cron schedule. We should support this use case and allow customers to update the cron schedule without terminating it.  \n[![Coverage Status](https://coveralls.io/builds/26025383/badge)](https://coveralls.io/builds/26025383)\n\nCoverage increased (+0.4%) to 68.436% when pulling **67673513a6fe75aebd5c56d27e2ec2d276b2ebda on fix** into **e126ebebc6871c161bffbddd53b4315c30894bea on master**.\n  I'm not sure if it is related. But this is what I've got running docker-compose for the first time:\r\n\r\n\r\n```\r\ncadence_1      | {\"level\":\"info\",\"ts\":\"2019-10-05T03:31:44.579Z\",\"msg\":\"cadence-system domain does not exist, attempting to register domain\",\"service\":\"cadence-worker\",\"logging-call-at\":\"service.go:339\"}\r\ncadence_1      | {\"level\":\"error\",\"ts\":\"2019-10-05T03:31:44.590Z\",\"msg\":\"Operation failed with internal error.\",\"service\":\"cadence-worker\",\"error\":\"InternalServiceError{Message: CreateDomain operation failed because of uuid collision.}\",\"metric-scope\":31,\"logging-call-at\":\"persistenceMetricClients.go:835\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Error\\n\\t/cadence/common/log/loggerimpl/logger.go:133\\ngithub.com/uber/cadence/common/persistence.(*metadataPersistenceClient).updateErrorMetric\\n\\t/cadence/common/persistence/persistenceMetricClients.go:835\\ngithub.com/uber/cadence/common/persistence.(*metadataPersistenceClient).CreateDomain\\n\\t/cadence/common/persistence/persistenceMetricClients.go:729\\ngithub.com/uber/cadence/service/worker.(*Service).registerSystemDomain\\n\\t/cadence/service/worker/service.go:374\\ngithub.com/uber/cadence/service/worker.(*Service).ensureSystemDomainExists\\n\\t/cadence/service/worker/service.go:340\\ngithub.com/uber/cadence/service/worker.(*Service).Start\\n\\t/cadence/service/worker/service.go:163\\nmain.execute\\n\\t/cadence/cmd/server/server.go:225\"}\r\ncadence_1      | {\"level\":\"fatal\",\"ts\":\"2019-10-05T03:31:44.590Z\",\"msg\":\"failed to register system domain\",\"service\":\"cadence-worker\",\"error\":\"InternalServiceError{Message: CreateDomain operation failed because of uuid collision.}\",\"logging-call-at\":\"service.go:395\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Fatal\\n\\t/cadence/common/log/loggerimpl/logger.go:139\\ngithub.com/uber/cadence/service/worker.(*Service).registerSystemDomain\\n\\t/cadence/service/worker/service.go:395\\ngithub.com/uber/cadence/service/worker.(*Service).ensureSystemDomainExists\\n\\t/cadence/service/worker/service.go:340\\ngithub.com/uber/cadence/service/worker.(*Service).Start\\n\\t/cadence/service/worker/service.go:163\\nmain.execute\\n\\t/cadence/cmd/server/server.go:225\"}\r\ncadence_1      | 2019/10/05 03:31:44 Command exited with error: exit status 1\r\ndocker_cadence_1 exited with code 1\r\n``` I'm busy evaluating cadence and was happy to see docker-compose files, but they don't actually work :/ . fyi I got similar errors with mysql.  \"CreateDomain operation failed because of uuid collision\" is caused by a recent change. It was fixed by https://github.com/uber/cadence/pull/2639.   Slack invite on the site just returns:\r\n\r\n> This invite link is no longer active.\r\n> If you have an @paypal.com or @visa.com email address, you can still create an account.\r\n> If not, please check with the person who shared the invite link with you to ask for an invitation.\r\n\r\n Weird, I'm able to sign up using the same link and an incognito browser window Are you using [this link?](https://join.slack.com/t/uber-cadence/shared_invite/enQtNDczNTgxMjYxNDEzLTQyYjcxZDM2YTIxMTZkMzQ0NjgxYmI3OWY5ODhiOTliM2I5MzA4NTM4MjU4YzgzZDkwNGEzOTUzNTBlNDk3Yjc) > Are you using [this link?](https://join.slack.com/t/uber-cadence/shared_invite/enQtNDczNTgxMjYxNDEzLTQyYjcxZDM2YTIxMTZkMzQ0NjgxYmI3OWY5ODhiOTliM2I5MzA4NTM4MjU4YzgzZDkwNGEzOTUzNTBlNDk3Yjc)\r\n\r\nsorry, should have been more specific, was using the one in the top right of the bar on the site (https://join.slack.com/t/uber-cadence/shared_invite/enQtNDczNTgxMjYxNDEzLTI5Yzc5ODYwMjg1ZmI3NmRmMTU1MjQ0YzQyZDc5NzMwMmM0NjkzNDE5MmM0NzU5YTlhMmI4NzIzMDhiNzFjMDM) that new one works!  \n[![Coverage Status](https://coveralls.io/builds/25936360/badge)](https://coveralls.io/builds/25936360)\n\nCoverage decreased (-0.02%) to 68.963% when pulling **1649e8f0228d37684a81fb65fc796121677c5bac on versionsa** into **39599a25dac2cfec6d222c96162464187d87b600 on master**.\n  After using history scanner, we do not rely on timeout to delete history anymore. This is not doing anything useful just taking one more persistence call.  Looking through the codebase there were several errors that were either unhandled when they should be handled or handled without empty assignment. This PR logs them in most cases and returns them in others.   @longquanzheng @samarabbas apologies for the delay on this one. Just iterated on your comments. Let me know if there's anything else we should update or if it's good to merge! > @longquanzheng @samarabbas apologies for the delay on this one. Just iterated on your comments. Let me know if there's anything else we should update or if it's good to merge!\r\n\r\ncan you run \"make fmt\" and \"make lint\" to make sure it passes all the format requirements?  I would like to create a Cadence domain in the underlying storage without actually running Cadence service.\r\n\r\nMy use case is moving Cadence from one storage to another (without preserving anything, but the domain), but I can imagine it to be useful for bootstrapping Cadence store for the first time.\r\n\r\nThe store CLI utility might be a good place for this. #2612: first moving domain logic into common Thanks!  Visibility requires ElasticSearch(ES) to be installed and connected to Cadence server. In out production installation, ES server requires service authentication by certificate. ES client used in Cadence server does not allow to authenticate in ES. \r\n\r\nES client - https://github.com/uber/cadence/blob/master/common/elasticsearch/client.go Hi @vancexu,\r\nI'll try to make a this client extension. In order to test locally I need to run Cadence server. \r\nWhat is the most easy way to start server locally?\r\n\r\nI try to run\r\n`go build github.com/uber/cadence/cmd/server/cadence.go`\r\n\r\nAnd get\r\n\r\n `2019/09/23 23:02:56 Loading configFiles=[./config/base.yaml ./config/development.yaml]\r\n2019/09/23 23:07:58 Config file corrupted.PublicClient.HostPort: zero value`\r\n     \n[![Coverage Status](https://coveralls.io/builds/25936717/badge)](https://coveralls.io/builds/25936717)\n\nCoverage increased (+0.4%) to 69.364% when pulling **909821c36b2c0acc24c78241b167ce52a8fdca12 on sqlinject** into **1e9e137a773e75ceac5d5d926d2c4d284a276f55 on master**.\n  I did the first steps for adding postgres support.\r\nFixes https://github.com/uber/cadence/issues/2536 and https://github.com/uber/cadence/issues/1834\r\n\r\n- [x] Add basic support for postgres\r\n- [x] Migrate the schema files\r\n- [ ] Add postgres tests\r\n- [ ] Fix postgres tests [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/uber/cadence?pullRequest=2537) <br/>All committers have signed the CLA. @wxing1292 I fixed your comments, please take a look.\r\nFYI I do not have viewing permissions on the buildkite server, so no idea what is happening there. @longquanzheng could you review the event v2 part?\r\n@vancexu could you review the visibility part? It seems that the postgres is not recognized\r\nref: https://github.com/uber/cadence/blob/master/tools/sql/conn.go#L73\r\n\r\n> @wxing1292 I fixed your comments, please take a look.\r\n> FYI I do not have viewing permissions on the buildkite server, so no idea what is happening there.\r\n\r\n```\r\n\r\n--- FAIL: TestPostgresConnTestSuite (0.01s)\r\n\r\n    --- PASS: TestPostgresConnTestSuite/TestParseCQLFile (0.00s)\r\n\r\n    --- FAIL: TestPostgresConnTestSuite/TestSQLConn (0.00s)\r\n\r\n        require.go:765: \r\n\r\n            \tError Trace:\tconn_test.go:127\r\n\r\n            \tError:      \tExpected nil, but got: &errors.errorString{s:\"unsupported database driver: postgres\"}\r\n\r\n            \tTest:       \tTestPostgresConnTestSuite/TestSQLConn\r\n``` @vancexu the difference is only in the connection string (DSN), schema SQL files and perhaps some minor query syntax differences.\r\n\r\n@wxing1292 how can I run the tests locally? > @vancexu the difference is only in the connection string (DSN), schema SQL files and perhaps some minor query syntax differences.\r\n> \r\n> @wxing1292 how can I run the tests locally?\r\n\r\nSorry about the inconvenience, please refer to this [local docker file](https://github.com/uber/cadence/tree/master/docker/buildkite)\r\n\r\nbasically, build kite is using this [.buildkite file](https://github.com/uber/cadence/blob/master/.buildkite/pipeline.yml) as a list of validation tasks.\r\n\r\nthe `.buildkite` file is basically referencing to this [docker file](https://github.com/uber/cadence/blob/master/docker/buildkite/docker-compose.yml)\r\n\r\nthe `local docker file` shown at the very beginning should be the local test equivalent BTW, usually, we do `make clean && make` for local testing. (assuming that you have cassandra & MySQL 5.7 running locally)\r\n\r\nCassandra / MySQL can be easily installed using homebrew (assuming you are using a mac?)\r\nfor MySQL, you need to additionally run this:\r\n`GRANT ALL PRIVILEGES ON *.* TO 'uber'@'%' IDENTIFIED BY 'uber';`\r\n\r\nBTW, this is the error shown on build kite\r\n```\r\n\r\n# github.com/uber/cadence/common/persistence/sql/storage/mysql\r\n--\r\n\u00a0 | common/persistence/sql/storage/mysql/db.go:36:5: cannot use (*DB)(nil) (type *DB) as type sqldb.Tx in assignment:\r\n\u00a0 | *DB does not implement sqldb.Tx (missing DeleteFromEvents method)\r\n\u00a0 | common/persistence/sql/storage/mysql/db.go:37:5: cannot use (*DB)(nil) (type *DB) as type sqldb.Interface in assignment:\r\n\u00a0 | *DB does not implement sqldb.Interface (missing DeleteFromEvents method)\r\n\u00a0 | common/persistence/sql/storage/mysql/db.go:57:14: cannot use NewDB(mdb.db, xtx) (type *DB) as type sqldb.Tx in return argument:\r\n\u00a0 | *DB does not implement sqldb.Tx (missing DeleteFromEvents method)\r\n\u00a0 | # github.com/uber/cadence/common/persistence/sql/storage/postgres\r\n\u00a0 | common/persistence/sql/storage/postgres/db.go:36:5: cannot use (*DB)(nil) (type *DB) as type sqldb.Tx in assignment:\r\n\u00a0 | *DB does not implement sqldb.Tx (missing DeleteFromEvents method)\r\n\u00a0 | common/persistence/sql/storage/postgres/db.go:37:5: cannot use (*DB)(nil) (type *DB) as type sqldb.Interface in assignment:\r\n\u00a0 | *DB does not implement sqldb.Interface (missing DeleteFromEvents method)\r\n\u00a0 | common/persistence/sql/storage/postgres/db.go:57:14: cannot use NewDB(mdb.db, xtx) (type *DB) as type sqldb.Tx in return argument:\r\n\u00a0 | *DB does not implement sqldb.Tx (missing DeleteFromEvents method)\r\n\u00a0 | Makefile:118: recipe for target 'cadence' failed\r\n``` Can someone help out on the above errors? I can't seem to find the cause of:\r\n`common/persistence/sql/storage/mysql/db.go:36:5: cannot use (*DB)(nil) (type *DB) as type sqldb.Tx in assignment:` > Can someone help out on the above errors? I can't seem to find the cause of:\r\n> `common/persistence/sql/storage/mysql/db.go:36:5: cannot use (*DB)(nil) (type *DB) as type sqldb.Tx in assignment:`\r\n\r\nDeletion of  `common/persistence/sql/storage/mysql/event.go` is the cause. \r\n\r\nThe statement `var _ sqldb.Tx = (*DB)(nil)` is asserting that `mysql.DB` satisfies the `sqldb.Tx` interface.  Specifically, it's failing because `DeleteFromEvents()` was deleted with the rest of `mysql/event.go`.\r\n\r\n> I believe events V1 is deprecated. plz remove this file and panic on usage of events v1 & postgres\r\n\r\nNote that only removal of the postgres implementation was requested, not mysql. It's not clear to me where the postgres `panic`s should be added. Perhaps @wxing1292 can clarify?\r\n\r\nSorry I can't be more helpful. I just started exploring Cadence a couple days ago, but I'm really interested in PostgreSQL support. > > Can someone help out on the above errors? I can't seem to find the cause of:\r\n> > `common/persistence/sql/storage/mysql/db.go:36:5: cannot use (*DB)(nil) (type *DB) as type sqldb.Tx in assignment:`\r\n> \r\n> Deletion of `common/persistence/sql/storage/mysql/event.go` is the cause.\r\n> \r\n> The statement `var _ sqldb.Tx = (*DB)(nil)` is asserting that `mysql.DB` satisfies the `sqldb.Tx` interface. Specifically, it's failing because `DeleteFromEvents()` was deleted with the rest of `mysql/event.go`.\r\n> \r\n> > I believe events V1 is deprecated. plz remove this file and panic on usage of events v1 & postgres\r\n> \r\n> Note that only removal of the postgres implementation was requested, not mysql. It's not clear to me where the postgres `panic`s should be added. Perhaps @wxing1292 can clarify?\r\n> \r\n> Sorry I can't be more helpful. I just started exploring Cadence a couple days ago, but I'm really interested in PostgreSQL support.\r\n\r\nSorry for the confusion again, please keep the file (common/persistence/sql/storage/postgres/event.go), functions, but panic whenever the functions are called [link](https://github.com/uber/cadence/pull/2537#discussion_r326509164).  @hazcod it seems that your PR (adding support of postgres) has collide with @meiliang86's change (Kafka deprecation, by using our message queue implementation for lossless message replication)\r\n\r\n@meiliang86 can you plz help?\r\n\r\nref:\r\n```\r\n# github.com/uber/cadence/common/persistence/sql/storage/postgres\r\n--\r\n\u00a0 | common/persistence/sql/storage/postgres/db.go:36:5: cannot use (*DB)(nil) (type *DB) as type sqldb.Tx in assignment:\r\n\u00a0 | *DB does not implement sqldb.Tx (missing GetLastEnqueuedMessageIDForUpdate method)\r\n\u00a0 | common/persistence/sql/storage/postgres/db.go:37:5: cannot use (*DB)(nil) (type *DB) as type sqldb.Interface in assignment:\r\n\u00a0 | *DB does not implement sqldb.Interface (missing GetLastEnqueuedMessageIDForUpdate method)\r\n\u00a0 | common/persistence/sql/storage/postgres/db.go:57:14: cannot use NewDB(mdb.db, xtx) (type *DB) as type sqldb.Tx in return argument:\r\n\u00a0 | *DB does not implement sqldb.Tx (missing GetLastEnqueuedMessageIDForUpdate method)\r\n\u00a0 | Makefile:118: recipe for target 'cadence' failed\r\n``` @hazcod We recently added a queue interface for domain replication. Relevant MySql implementation is at cadence/common/persistence/sql/sqlQueue.go\r\nIt should be fairly simple for you to port to postgres. I added the missing `queue.go` in https://github.com/uber/cadence/pull/2537/commits/298947cbafe1d9f2c59cd1624695bb330fdca324 @meiliang86 @wxing1292  @hazcod is it ready to test this locally? @SebastianM I have never used or ran cadence before, so please do test it locally! @hazcod I get an error for the history manager when starting the cadance server:\r\n\r\n```\r\n{\"level\":\"fatal\",\"ts\":\"2019-10-04T09:15:13.151+0200\",\"msg\":\"failed to create shard manager\",\"service\":\"cadence-history\",\"error\":\"sql: unknown driver \\\"postgres\\\" (forgotten import?)\",\"logging-call-at\":\"service.go:337\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Fatal\\n\\t/Users/.../cadence/common/log/loggerimpl/logger.go:139\\ngithub.com/uber/cadence/service/history.(*Service).Start\\n\\t/Users/.../cadence/service/history/service.go:337\\nmain.execute\\n\\t/Users/.../cadence/cmd/server/server.go:225\"}\r\n```\r\n\r\nSeems like a side effect import is missing somewhere for pq? @SebastianM how are you compiling & running the server? I'll fix. Steps to reproduce:\r\n\r\n1. go to `cmd/server` and run `go build`\r\n1. create a `config` dir in `cmd/server`\r\n1. create a `base.yaml` file in the new `config` dir with the following config (change db credentials):\r\n  ```yaml\r\nlog:\r\n  stdout: true\r\n  level: info\r\n\r\npersistence:\r\n  defaultStore: postgres\r\n  visibilityStore: postgres\r\n  numHistoryShards: 4\r\n  datastores:\r\n    postgres:\r\n      sql:\r\n       driverName: postgres\r\n       databaseName: \"xxx\"\r\n       connectAddr: \"127.0.0.1:5432\"\r\n       connectProtocol: \"tcp\"\r\n       user: \"xxxx\"\r\n       password: \"xxxx\"\r\n       maxConns: 10\r\n       maxIdleConns: 5\r\n       maxConnLifetime: \"1m\"\r\nringpop:\r\n  name: cadence\r\n  bootstrapMode: hosts\r\n  bootstrapHosts: [\"127.0.0.1:7933\"]\r\n  maxJoinDuration: 30s\r\n\r\nservices:\r\n  frontend:\r\n    rpc:\r\n      port: 7933\r\n      bindOnLocalHost: true\r\n    metrics:\r\n      statsd:\r\n        hostPort: \"127.0.0.1:8125\"\r\n        prefix: \"cadence\"\r\n    pprof:\r\n      port: 7936\r\n\r\n  matching:\r\n    rpc:\r\n      port: 7935\r\n      bindOnLocalHost: true\r\n    metrics:\r\n      statsd:\r\n        hostPort: \"127.0.0.1:8125\"\r\n        prefix: \"cadence\"\r\n    pprof:\r\n      port: 7938\r\n\r\n  history:\r\n    rpc:\r\n      port: 7934\r\n      bindOnLocalHost: true\r\n    metrics:\r\n      statsd:\r\n        hostPort: \"127.0.0.1:8125\"\r\n        prefix: \"cadence\"\r\n    pprof:\r\n      port: 7937\r\n\r\n  worker:\r\n    rpc:\r\n      port: 7939\r\n      bindOnLocalHost: true\r\n    metrics:\r\n      statsd:\r\n        hostPort: \"127.0.0.1:8125\"\r\n        prefix: \"cadence\"\r\n    pprof:\r\n      port: 7940\r\n\r\nclusterMetadata:\r\n  enableGlobalDomain: false\r\n  failoverVersionIncrement: 10\r\n  masterClusterName: \"active\"\r\n  currentClusterName: \"active\"\r\n  clusterInformation:\r\n    active:\r\n      enabled: true\r\n      initialFailoverVersion: 0\r\n      rpcName: \"cadence-frontend\"\r\n      rpcAddress: \"localhost:7933\"\r\n\r\ndcRedirectionPolicy:\r\n  policy: \"noop\"\r\n  toDC: \"\"\r\n\r\narchival:\r\n  history:\r\n    status: \"enabled\"\r\n    enableRead: true\r\n    provider:\r\n      filestore:\r\n        fileMode: \"0666\"\r\n        dirMode: \"0766\"\r\n  visibility:\r\n    status: \"disabled\"\r\n    enableRead: false\r\n\r\ndomainDefaults:\r\n  archival:\r\n    history:\r\n      status: \"disabled\"\r\n      URI: \"file:///tmp/cadence_archival/development\"\r\n    visibility:\r\n      status: \"disabled\"\r\n\r\nkafka:\r\n  clusters:\r\n    test:\r\n      brokers:\r\n        - 127.0.0.1:9092\r\n  topics:\r\n    cadence-visibility-dev:\r\n      cluster: test\r\n    cadence-visibility-dev-dlq:\r\n      cluster: test\r\n\r\npublicClient:\r\n  hostPort: \"localhost:7933\"\r\n  ```\r\n1. run `./server start` @SebastianM sorry for the hassle, but seems like there is a level of indentation gone in the config file? @hazcod hmmm, try this: https://gist.githubusercontent.com/SebastianM/5b77a83f07c4bc51a75b2cdc4a8e132f/raw/711e0111cc1e9cad57217a58bef59dbf3c33d65e/base.yaml @SebastianM that is now fixed, now just needs a locally listening postgres. @hazcod thanks, now it requests a ssl certificate for postgres connection. Is there a way to disable ssl via the configuration?\r\n\r\n```\r\n{\"level\":\"fatal\",\"ts\":\"2019-10-04T12:00:01.123+0200\",\"msg\":\"failed to create shard manager\",\"service\":\"cadence-history\",\"error\":\"pq: SSL is not enabled on the server\",\"logging-call-at\":\"service.go:337\",\"stacktrace\":\"github.com/uber/cadence/common/log/loggerimpl.(*loggerImpl).Fatal\\n\\t/Users/sebmueller/.../cadence/common/log/loggerimpl/logger.go:139\\ngithub.com/uber/cadence/service/history.(*Service).Start\\n\\t/Users/.../cadence/service/history/service.go:337\\nmain.execute\\n\\t/Users/.../cadence/cmd/server/server.go:225\"}\r\n``` https://github.com/hazcod/cadence/pull/2 Honestly I feel like I miss too much of the code familiarity of cadence here to be able to fully support this code change. Can someone from the team step in too? Oh apologies, I for some reason thought that was a PR to uber/cadence. Merged! Close in favor of https://github.com/uber/cadence/pull/2836  Postgress support would add support for PostgreSQL or even [cockroach-db](https://github.com/cockroachdb/cockroach) which is optimized for high-available cloud scenarios.\r\n\r\nOne would need to reimplement https://github.com/uber/cadence/tree/78d84ea199b0bba2828df3461e4e7b9a40edf5fd/common/persistence/sql/storage/mysql for postgres.\r\n\r\nI started the work in https://github.com/uber/cadence/pull/2537 , but will probably need some help here. https://github.com/uber/cadence/pull/2836 #2836 Is merged, so this is implemented? Are there docs how to use Cadence with Postgres? I'm also having the same issue can't find any docs to connect with Postgres?   \n[![Coverage Status](https://coveralls.io/builds/25690388/badge)](https://coveralls.io/builds/25690388)\n\nCoverage increased (+0.006%) to 66.84% when pulling **eaa179c6d18a3a3bb099b3e269bf290872a94fd6 on clicl** into **c8bd8035bf32fe87ab9d7461b7f8724fd71de329 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/25659986/badge)](https://coveralls.io/builds/25659986)\n\nCoverage increased (+0.4%) to 66.935% when pulling **9e234408004c8059455712f773a0dd04887571d6 on salist** into **d884315233b19f2992bdf49797ecae5c29f29a82 on master**.\n    \n[![Coverage Status](https://coveralls.io/builds/25556334/badge)](https://coveralls.io/builds/25556334)\n\nCoverage decreased (-0.4%) to 66.508% when pulling **0ca674e0fc1833dfa29730807d6c1b8846820951 on fixes** into **8c4e0e4fb57aed1708274ba4056f7989f24ad610 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/25535369/badge)](https://coveralls.io/builds/25535369)\n\nCoverage increased (+0.4%) to 66.877% when pulling **2051bb768bf675b052426bd97960a756802e811f on cron** into **1a7583a5c41ce52cb2bbac2360fc82e5aa0fe3d0 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/25532906/badge)](https://coveralls.io/builds/25532906)\n\nCoverage decreased (-0.03%) to 66.477% when pulling **3899aa4406269940f3ec753ddb3bb676eb59b980 on addsa** into **8dc2f32f38c92c7431bc268e788d761fe0aa6f7d on master**.\n  This is achieved long time ago\r\n  Looks like if user sends a decision with empty RunID than we create a transfer task with incorrect information for TargetRunID resulting is 'SignalExternalWorkflowExecutionFailed' instead of sending the signal to current run. There was a race condition, when SignalExternalWorkflow with empty RunID happens, the target run A may already ContinueAsNew with new RunID B, which result in `SignalExternalWorkflowExecutionFailed`.  \r\nThis race was fixed sometime ago.  To support removal of deprecated branches of getVersion call there is a need to count and query worklfows that are using a specific version of the _getVersion_ API call given a _changeID_.\r\n\r\nI'm not sure if this feature can rely on the custom search attributes in their current form as the _workflowVersions_ attribute should contain a list of [changeID, version] pairs. Hi, is the getVersion API call planned to return whether a workflow (and how many workflows) is using the DefaultVersion for a specific change ID? It will be implemented through enhanced visibility (list/count) API: https://github.com/uber/cadence/issues/2495\r\n\r\nhttps://github.com/uber/cadence/issues/2409 Hi @vancexu , I see that the cadence client code for querying the API for workflow version is merged. I wanted to make sure if this is already supported in the server, and if so, from which version. Thanks! > Hi @vancexu , I see that the cadence client code for querying the API for workflow version is merged. I wanted to make sure if this is already supported in the server, and if so, from which version. Thanks!\r\n\r\nHi server side release is not done, we may do a release at end of Oct, (after which there will also be a client release)\r\n\r\nHowever to use this feature now, the only thing need on server side (v0.9.0) is allowlist new search attributes \"CadenceChangeVersion\" as keyword type. see https://cadenceworkflow.io/docs/11_search on how to allowlist it manually.\r\n\r\n Go client v0.10.1 \r\nJava client not available yet: https://github.com/uber/cadence-java-client/issues/421\r\n \r\nTo search default version, use query like `CadenceChangeVersion != \"changeID-1\"` or `CadenceChangeVersion not in (\"changeID-1\", \"changeID-2\")` (before `missing` or `not exist` is supported in advanced query). \r\n\r\nNote this feature requires advanced visibility on server side (is ElasticSearch)\r\n  For code clarity, decision state machine logic should be moved into a dedicated struct\r\n\r\nrelated issue: #2407   Looking much better. Few high level comments:\r\n\r\n1. Let's move ES config section as another persistence\r\n2. Default for 'advancedVisibilityWritingMode' should be dynamic based on existence of 'advancedVisibilityStore' persistence config.  Here are the options in increasing precedence:\r\n\r\n- Default to 'Off' when it does not exist, otherwise Default to 'On'\r\n- Allows override to 'Dual' when it exists\r\n\r\n3. Default for 'enableReadVisibilityFromES' should be dynamic based on existence of 'advancedVisibilityStore' persistence config. Here are the options in increasing precedence:\r\n\r\n- Default to 'false' when it does not exist, otherwise Default to 'true'\r\n- Allows global override to 'true' or 'false' when it exists\r\n- Allows domain override to 'true' or 'false' when it exists\r\n \n[![Coverage Status](https://coveralls.io/builds/25456624/badge)](https://coveralls.io/builds/25456624)\n\nCoverage decreased (-0.8%) to 66.49% when pulling **0ca5d785162eae5ed9f29818ab955db815dc2bf6 on esrefact** into **faec6e537f85b9923d8b7b3760903ffc9ea0d807 on master**.\n  Right now we took a shot-cut to use LastUpdateTimestamp. It is inacurate. In some case we may update mutableState without any decision(ex. ActivityHeartbeat). In that case, updating LastUpdateTimestamp will make the StickyTTL not expire. It could be a bug if a customer relying on StickyTTL to dispatch tasks.  Every shard has the following 2 caches which mostly contribute to the memory consumption on history host:\r\n\r\n1. MutableStateCache\r\n2. EventsCache\r\n\r\nThese caches have their own knobs to configure the maximum size per shard, which makes it very hard to define these knobs in a generic fashion for various cluster sizes.  \r\nThe idea is to have a simpler knob which is defined per host which automatically adjust the size of caches placed on that host evenly.    Use history event generator to test event replication logic with multiple branches history events  We need to ensure that one domain does not overwhelm a shard. This could happen by sending many signals to the same workflow or trying to start the workflow on the same shard. They will all block on the shard lock causing some calls to timeout. On a big burst this will slow down traffic on the shard. Adding a domain specific rate limit will protect us against such cases.  ```\r\n493be6bec984        docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.1   \"/usr/local/bin/dock\u2026\"   9 minutes ago        Exited (137) 58 seconds ago                                                                                                                       docker_elasticsearch_1\r\n```\r\n```\r\ncadence_1        | + curl -s http://elasticsearch:9200\r\ncadence_1        | waiting for elasticsearch to start up\r\ncadence_1        | + '[' 52 -eq 0 ']'\r\ncadence_1        | + echo 'waiting for elasticsearch to start up'\r\ncadence_1        | + sleep 1\r\ncadence_1        | + curl -s http://elasticsearch:9200\r\ncadence_1        | waiting for elasticsearch to start up\r\ncadence_1        | + '[' 52 -eq 0 ']'\r\ncadence_1        | + echo 'waiting for elasticsearch to start up'\r\ncadence_1        | + sleep 1\r\ncadence_1        | + curl -s http://elasticsearch:9200\r\ncadence_1        | waiting for elasticsearch to start up\r\ncadence_1        | + '[' 52 -eq 0 ']'\r\ncadence_1        | + echo 'waiting for elasticsearch to start up'\r\ncadence_1        | + sleep 1\r\n...\r\n```  Search attributes are global for a cluster. It should not require a domain as input to run the operation. Ok, that makes sense. But there is one more thing (I forget now) which is global but we end up doing it at domain level due to this limitation.. We should keep track of these and when we get a chance and handle the global stuff.  But admin operations do not require a domain, right? It makes the commands look a bit inconsistent:\r\n`cadence adm cl add-search-attr --search_attr_key RolloutID --search_attr_type 1`\r\nfor creating a search attribute, and\r\n`cadence --domain \"whatever\" cl get-search-attr`\r\nfor listing them. This was fixed and will be available in CLI 0.9.0  I'm guessing #2325 didn't help either. fixed.   I have added report API in this PR. Below shows the way to use it:\r\n`./cadence admin es rep -url <elasticsearch url> -index <index to query> -query <sql>`\r\n\r\nA typical call of report API is as follows:\r\n`./cadence admin es rep -url \"http://localhost:9200\" -index \"test0\" -query \"SELECT COUNT(*), MAX(Attr.CustomDatetimeField) FROM dummy GROUP BY DomainID, WorkflowType, CloseStatus HAVING COUNT(*) > 30\"`\r\n\r\nI have added unit tests too. Screenshot below shows a local result of the tests.  \r\n<img width=\"855\" alt=\"Screen Shot 2019-08-01 at 10 29 35 AM\" src=\"https://user-images.githubusercontent.com/22061232/62314191-5009ad80-b447-11e9-88ce-41f11921f050.png\">\r\n  Domain cache refresh is 10s which is fine for real service but might be annoying for tests that create domains using local docker instance.    It is needed for DescribeBatchJob API  From user - For SearchAttributes: Is there any way to pass SearchAttribute for childworkflows? I have checked that it's not getting passed implicitly. \r\nI cannot even find an explicit way of doing so. We pass the SearchAttribute in StartWorkflowOptions and ExecuteWorkflow takes the StartWorkflowOptions as a parameter but ExecuteChildWorkflow doesn't have such parameter.  Can you add tasks for Go and Java clients as well? Thanks!    the cluster info is not required:\r\nhttps://github.com/uber/cadence/blob/master/service/frontend/domainHandler.go#L117\r\n\r\nthe one thing that should be done is to drop the requirement of --global_domain flag, so if CLI not seeing that, set \"IsGlobalDomain\" in the register request to be null and let server do the check  https://github.com/uber/cadence/blob/master/docker/README.md contains instruction for CLI usage\r\n```\r\nFor example to register new domain 'test-domain' with 1 retention day\r\n`docker run --network=host --rm ubercadence/cli:master --do test-domain domain register -rd 1`\r\n```\r\nwhich fails with the following message\r\n```\r\nError: Option global_domain must be provided.\r\n```\r\n\r\nI suppose that it worth adding `--global_domain false` to documentation. [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/uber/cadence?pullRequest=2169) <br/>All committers have signed the CLA. Actually, I meant to close this. #2172 is checked in.  https://github.com/uber/cadence/pull/2163    I would love more frequent patch releases, but currently it seems \"patch\" releases are used for major/minor releases.    Task 7 of https://github.com/uber/cadence/issues/2082\r\n \r\nCreate dynamic config for the threshold of history size below which history should be archived by the timer queue processor without sending signal to archival workflow\r\n \r\nUpdate timer queue processor to use archiver \r\n  Task 3 of https://github.com/uber/cadence/issues/2082 Move this  Currently query returns some result even if workflow was terminated. And it is not possible to find out if the workflow still running without additional API calls. https://github.com/uber/cadence/commit/cc54edd9b52d5787791ae5e473f37ae2b35427c8  We're in the process of writing a .NET Cadence client and ran into an issue while unit testing workflows.  When we start a worker, execute a workflow, stop the worker, start it again, and then try and execute another workflow, the first workflow completes, but any workflow after the first hangs during the `client.ExecuteWorkflow()` call, eventually failing with a `START_TO_CLOSE` timeout.  I replicated this behavior by munging the greetings [cadence-samples](https://github.com/samarabbas/cadence-samples/) workflow.  See the loop in `func main()`:\r\n```\r\npackage main\r\n\r\nimport (\r\n    \"context\"\r\n    \"time\"\r\n\r\n    \"go.uber.org/cadence/client\"\r\n    \"go.uber.org/cadence/worker\"\r\n    \"go.uber.org/zap\"\r\n\r\n    \"github.com/pborman/uuid\"\r\n\r\n    \"github.com/samarabbas/cadence-samples/cmd/samples/common\"\r\n)\r\n\r\n// This needs to be done as part of a bootstrap step when the process starts.\r\n// The workers are supposed to be long running.\r\nfunc startWorkers(h *common.SampleHelper) worker.Worker {\r\n    // Configure worker options.\r\n    workerOptions := worker.Options{\r\n        MetricsScope: h.Scope,\r\n        Logger:       h.Logger,\r\n    }\r\n    return h.StartWorkers(h.Config.DomainName, ApplicationName, workerOptions)\r\n}\r\n\r\nfunc startWorkflow(h *common.SampleHelper) client.WorkflowRun {\r\n    workflowOptions := client.StartWorkflowOptions{\r\n        ID:                              \"greetings_\" + uuid.New(),\r\n        TaskList:                        ApplicationName,\r\n        ExecutionStartToCloseTimeout:    time.Minute,\r\n        DecisionTaskStartToCloseTimeout: time.Minute,\r\n    }\r\n    return h.StartWorkflow(workflowOptions, SampleGreetingsWorkflow)\r\n}\r\n\r\nfunc main() {\r\n\r\n    // configure service client\r\n    var h common.SampleHelper\r\n    h.SetupServiceConfig()\r\n\r\n    // Loop:\r\n    //  - start a worker\r\n    //  - start a workflow\r\n    //  - block and wait for workflow result\r\n    //  - stop the worker\r\n    for i := 0; i < 3; i++ {\r\n\r\n        // start the worker\r\n        // execute the workflow\r\n        workflowWorker := startWorkers(&h)\r\n        workflowRun := startWorkflow(&h)\r\n\r\n        // create context\r\n        // get workflow result\r\n        var result string\r\n        ctx, cancel := context.WithCancel(context.Background())\r\n        err := workflowRun.Get(ctx, &result)\r\n        if err != nil {\r\n            panic(err)\r\n        }\r\n\r\n        // log the result\r\n        h.Logger.Info(\"Workflow Completed\", zap.String(\"Result\", result))\r\n\r\n        // stop the worker\r\n        // cancel the context\r\n        workflowWorker.Stop()\r\n        cancel()\r\n    }\r\n}\r\n```\r\n\r\n### This is not a blocking issue and will probably not come up in production.  \r\n\r\n### Background: \r\nWe ([Jeff Lill](https://github.com/jefflill) and I) noticed this issue during unit testing workflows in our .NET Cadence client.  When we run our workflow tests individually they all pass, but when we run multiple at a time (sequentially, not in parallel), we see the behavior described above.  This is because of the cleanup done in the .NET Cadence client `dispose()` method called after a test completes (pass or fail).  One of the dispose behaviors is to stop workers created during a test.  When the next test runs, new workers are created using the same workflow service client, and this is where the issue arises.  In some cases an activity or a workflow that is being retried has misconfigured retry policy.\r\nIt would be useful to be able to update it while activity is in retry loop. \r\n\r\nFor example the maximumRetryInterval is set to 1 day, but underlying issue is already fixed and we don't want to wait for the retry to happen in 20 hours.\r\n\r\nThrough this new management API it should be possible to force immediate retry.  Fixed by #2172     #2250   This force us to wait for 20s after regstering/describing a domain in master in PR: https://github.com/uber/cadence/pull/1998    @wxing1292 can this be closed? if the unit tests are there then sure   Should be done as part of #1903 Completed   Current step is design review Working on the implementation of the POC Merged even generator into 3+DC branch #2302   This is an activity that won't be used as of yet but we will need this primitive in the future.   Follow patch to #1906. The domainScope was assigned within a lock however it was accessed throughout the code without acquiring any locks. This patch fixes the bug and also gets rid of the locks, in favor of atomics.\r\n\r\nThere was also another existing bug - the metricsClient was never initialized in the constructor. Also, fixes this problem > So it doesn't improve much perf compared to directly using domainCache\r\nThis patch caches the domain metric scope once it's created not the domain metadata. That's about it. DomainCache caches the domain metadata. And I tend to disagree that it's complicated. > > > So it doesn't improve much perf compared to directly using domainCache\r\n> > > This patch caches the domain metric scope once it's created not the domain metadata. That's about it. DomainCache caches the domain metadata. And I tend to disagree that it's complicated.\r\n> \r\n> I am fine to forget about complexity as it's hard to argue. Adding another atomicValue is unnecessary. How about just use domainCache whenever you need to translate from domainID to domainName?\r\n\r\nDiscussed offline.   This diff does the following:\r\n1. Enforces transaction size limit at persistence layer\r\n2. Fixes existing bug in RespondDecisionTaskCompleted. Workflows which were being failed by us due to a size check validation failure were not being cleaned up.\r\n3. Makes two small refactors in RespondDecisionTaskCompleted.\r\n4. Fails workflow if transaction size error occurs.  <img width=\"1400\" alt=\"Screen Shot 2019-05-26 at 2 19 24 PM\" src=\"https://user-images.githubusercontent.com/8705504/58387567-569e2380-7fc5-11e9-8b8d-442fca354568.png\">\r\n\r\nHere is an example of a workflow history which results from triggering a transaction size beyond limit.  Fixes #1894    During using the Cadence, we found one activity will fail to schedule on all the machines, the last time it fails by timeout. But the failure records in the process will help debugging the issue. Hi all, is there any progress on this issue? We're looking at adopting Cadence, in part as a potential replacement for our existing background workers. Currently, if an activity fails and is retried, there is no way to see what the error message is that caused the failure which makes it difficult to debug. This feature is something that comes out of the box with traditional job workers like Sidekiq or Celery.  Add forwarding of terminate and cancel to support them from any DC. \r\n  #1872 merged  I'm still not certain why we need separate handling for transient decision.  If the decision fails why can't the state machine on passive also go into transient decision than it expects the next transaction to have multiple batches, similar to state machine on active side.  #1709     The start time for cron jobs is the time the previous workflow finishes. This is confusing when exposing the start time to users.\r\n\r\nMy suggestion is to add a FirstScheduled field that reports the time of the first DecisionTaskScheduled event. This can be closed. Describe workflow will return execution time which is when the workflow will actually start.  Approved with a couple of comments. I think Samar should also take a look though.  #1885 merged  Please update the documentation to reflect that global_domain is required.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n$ docker run --network=host --rm ubercadence/cli:master --domain samples-domain domain register \r\n\r\n\r\nError: Option global_domain must be provided.\r\n\r\n\r\n\r\n   `func newErrorTag(key string, value error) Tag {\r\n`\r\nThis should not take key as it is ignored. Please fix imports before checking in.  I am unable to use docker-compose in our (restricted) environment but am able to use docker command. So, instead, I tried to use the plain docker commands (by following what is in the docker-compose.yml file). However, I am unable to start Cadence due to the error:\r\n`error: failed to connect to <IP_Address>:9042 due to error: Keyspace 'cadence' does not exist`\r\n\r\nLooks like there is some issue with the `cadence-cassandra-tool`\r\n\r\nHow can I make this work? What else should I do apart from the following docker commands? Thank you for any pointers or suggestions.\r\n\r\nDocker Commands Used:\r\n1. `docker run --name cassandra -p 9042:9042 -d cassandra:3.11`\r\n2. `docker run --name statsd -p 8080:80 -p 2003:2003 -p 8125:8125 -p 8126:8126 -d hopsoft/graphite-statsd`\r\n3. `docker run --name cadence -p 7933:7933 -p 7934:7934 -p 7935:7935 -p 7939:7939 -d --link cassandra --link statsd -e \"CASSANDRA_SEEDS=cassandra\" -e \"STATSD_ENDPOINT=statsd:8125\" ubercadence/server:0.5.6`\r\n4. `docker run --name cadence-web -p 8088:8088 -d --link cadence -e \"CADENCE_TCHANNEL_PEERS=cadence:7933\" ubercadence/web:3.1.2` @longquanzheng @wxing1292 : Thank you very much for your reply. We tried a whole bunch of things and finally made it work! Here is the quick summary of what did not work and what worked:\r\n### Run make \r\nUnfortunately, since we are working in a linux env with restricted policies, we are unable to run `make install-schema` - as this needs all the Go dependencies and complete make env with all the permissions.\r\n### Try after installing docker-compose binary\r\nThis was more promising that the 1st option. Our docker engine is `v 1.12.6`. We downloaded the binary of docker-compose and changed the version of the docker-compose.yml to `2.1` (instead of 3). We also made some corresponding changes in the docker-compose.yml file (as per version 2.1), adding `network_mode: bridge` for each of the service.\r\n\r\nBut this also had the same outcome that the Cadence could not connect to the Cassandra for running the schema setup.\r\n\r\n### Steps that finally got it working \ud83d\udc4d \r\n\r\n1. Run Cassandra container first - using the simple docker command above\r\n2. Copy the cadence binary from Cadence container to local linux directory \r\n`docker exec -i cadence sh -c 'cat /cadence.tar' > cadence.tar`\r\n3. Set all the environment variables and run each command of `cadence-cassandra-tool` one-by-one listed in the file https://github.com/uber/cadence/blob/master/docker/start.sh\r\n4. Start the Cadence Container with the flag `\"SKIP_SCHEMA_SETUP=true\"`\r\n\r\nIf you want me to document the exact steps further, let me know. I can add it somewhere, so that someone else can also benefit from this exercise.\r\n\r\nThank you again for the pointers \ud83d\ude4f   @longquanzheng is this done?  This one is merged   Still having trouble with Cassandra. It installs as root but the integration tests are unable to connect to it. Is anyone able to see the build pipeline? https://buildkite.com/uberopensource/cadence-server    [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/uber/cadence?pullRequest=1571) <br/>All committers have signed the CLA.  The list open/closed workflow execution APIs return empty result when calling them from a non-active cluster.\r\n\r\nE.g.\r\nCalling list open workflow on a local domain (active in cluster ABC) from a cluster DEF will return an empty result.\r\n\r\nThe behavior is different from other workflow APIs which throws DomainNotActive Error.  Cadence server adjusts ScheduleToStartTimeout(Queue Timeout) to be the same as ExpirationInterval specified for RetryOptions.  This does not work well when client wants to use task routing for host specific tasklist, as it requires to have much smaller ScheduleToStartTimeout so the task can be retried on a different host in case of host failure.   One of the issues for Cadence in this particular case, it has no way to identify if the tasklist is host specific or not.  So currently there is no way to associate different behavior for RetryPolicy based on type of activity tasklist.  \r\nWe might need to think about a high level abstraction for activity host specific tasklist which might make it easier for Server to associate different behavior for configured retry policy.  No bug found. Test already covered in TestDescribeTaskList? Confirmed. Closing the issue.  Merged. Closing this issue. [#1542]( https://github.com/uber/cadence/pull/1542)  I am evaluating Cadence for one of my projects. I am required to create hundreds of thousands of workflows in Async mode. When I am trying to start ten thousand workflows with two worker threads I am getting the following errors after 4000 workflows are created. \r\nIn workflow starter\r\n>Caused by: ServiceBusyError(message:Too many outstanding requests to the cadence service)\r\n\r\nAnd the following warning message in Cadence server\r\n\r\n>WARN[2019-02-28T12:22:14+05:30] Too many pendind tasks.                       Service=cadence-history shard-id=1 wf-cluster=active wf-component=transfer-queue-processor\r\n\r\nI have \r\n>scheduleToCloseTimeoutSeconds=300\r\n\r\nfor Activity and \r\n>executionStartToCloseTimeoutSeconds = 900\r\n\r\nfor workflow\r\n\r\nAlso are there any references for Cadence cluster setup? I am not able to find anything related on google!\r\n\r\n\r\n **Feedback From Slack Channel**\r\n\r\n- The database tools are not really mentioned very clearly / linked from the main documentation\r\n- The different server roles (worker, frontend, ...) are not obvious in much of the documentation, and there is no docker setup that splits them out\r\n- The database upgrade documentation mentions some calls with versions, but its not clear how you know what version you need if you update:\r\n```\r\n./cadence-sql-tool --ep $SQL_HOST_ADDR -p $port --driver mysql --db cadence_visibility update-schema -d ./schema/mysql/v57/cadence/versioned -v x.x -y -- executes a dryrun of upgrade to version x.x\r\n```\r\n- The implications and architecture for picking MySQL are not obvious. It looks like this is aimed at a single master DB.\r\n- Bug in https://github.com/uber/cadence/blob/master/tools/sql/handler.go#L83 - message talks about Keyspace, actually should be database parameter\r\n- Not much information about the config beyond the basics. Error message for not having a dynamic config file in the right place isn't great:\r\n```\r\n2019/09/25 16:00:41 error creating file based dynamic config client, use no-op config client instead. error: Stat : The system cannot find the path specified.\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal 0xc0000005 code=0x0 addr=0x0 pc=0x159c86a]\r\n```\r\n- More generally, I think it would be helpful with the docker quickstart setups if the webui could allow you to create a domain, and do a better job of explaining that since it's an overloaded term The server initialization is super-flaky in the face of setup mistakes.  ClusterMetadata is not set in development_mysql.yaml and results in the following panic:\r\n```\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal 0xc0000005 code=0x0 addr=0x0 pc=0x159c86a]\r\n\r\ngoroutine 1 [running]:\r\nmain.(*server).startService(0xc00040f680, 0xc00029ffb0, 0xc000035180)\r\n        E:/stuff/cadence/cmd/server/server.go:135 +0x94a\r\nmain.(*server).Start(0xc00040f680)\r\n        E:/stuff/cadence/cmd/server/server.go:79 +0x73\r\n``` > The server initialization is super-flaky in the face of setup mistakes. ClusterMetadata is not set in development_mysql.yaml and results in the following panic:\r\n> \r\n> ```\r\n> panic: runtime error: invalid memory address or nil pointer dereference\r\n> [signal 0xc0000005 code=0x0 addr=0x0 pc=0x159c86a]\r\n> \r\n> goroutine 1 [running]:\r\n> main.(*server).startService(0xc00040f680, 0xc00029ffb0, 0xc000035180)\r\n>         E:/stuff/cadence/cmd/server/server.go:135 +0x94a\r\n> main.(*server).Start(0xc00040f680)\r\n>         E:/stuff/cadence/cmd/server/server.go:79 +0x73\r\n> ```\r\n\r\nthe panic will be fixed in : https://github.com/uber/cadence/pull/2608 related to https://github.com/uber/cadence/issues/2609 > We are still working on documentation for setting up Cadence clusters.\r\n\r\n@samarabbas Are there any updates in that matter? I wonder where should I learn how to run more than a single server instance. At this point we recommend using [Helm Chart ](https://hub.kubeapps.com/charts/banzaicloud-stable/cadence)and we planning to get much better documentation in the Q1 next year.  [#1548](https://github.com/uber/cadence/pull/1548) Merged. Closing the issue.  It would be great to have the readme indicate the proper process for reporting security issues - be it sending an e-mail to security@uber.com, some other mailing list, or filing an issue with a particular format. Thanks. I don't have an issue to report - sorry if I gave that impression.  currently, the API will not return whether a workflow is running or not\r\n```\r\nif executionInfo.State == persistence.WorkflowStateCompleted {\r\n\t\t// for closed workflow\r\n\t\tcloseStatus := getWorkflowExecutionCloseStatus(executionInfo.CloseStatus)\r\n\t\tresult.WorkflowExecutionInfo.CloseStatus = &closeStatus\r\n\t\tresult.WorkflowExecutionInfo.CloseTime = common.Int64Ptr(msBuilder.GetLastUpdatedTimestamp())\r\n\t}\r\n```\r\ncustomer need to check `WorkflowExecutionInfo.CloseStatus` is null or not to determine if worklfow is running.\r\n\r\nneed to return more information Yes. We need to add a new field to return the current workflow state. Question is should we add a new `NONE` field to the thrift `WorkflowExecutionCloseStatus` enum (as described by the TODO [here](https://github.com/uber/cadence/blob/master/idl/github.com/uber/cadence/shared.thrift#L243)) or create a new `IsWorkflowRunning` bool field in the `WorkflowExecutionInfo` struct.\r\n\r\nThe first approach may cause some customer code to break if they are using `switch` on the returned closeStatus field as the new value will fall into the `default` case. \r\n\r\n@mfateev Do you have any suggestions? Let's add a flag IsWorkflowOpen Decided not to implement this.  I don't think we are going to support this feature. The reason is that it would require storing each signal id in the mutable state and also is not going to . work with continue as new.  This is implemented as part of #1342  Integration tests on MySQL are already running with our BuildKite builds.  we have a bug where the cron schedule was not replicated to passive cluster, so after failover, the workflow will not schedule next run when it complete.\r\n\r\nWe could have some logic to protect this. For example, in the now passive cluster (which previously was active and know the workflow is cron), when it receive the complete workflow event, it should do something. For example, it should call the new active cluster directly to start the cron again.  New repo created https://github.com/uber/cadence-idl  Cron workflow will create next execution with delayed first decision task.\r\n\r\nCurrently, the visibility record is created only after first decision scheduled.\r\n The issue also exists for workflow retry. During backoff, list open workflow returns no record for the workflow. \r\n\r\nTo repro this bug, use a workflow that returns directly (return an error if testing retry), then specify a cronSchedule or retry policy in startWorkflowOptions. Run this workflow and check cadence-web's open workflow or use cli to list open workflows. There will be no records. Besides fixing the bug, more information should be exposed through list open workflow API, for example, next scheduled time, failing reason, etc.    thanks for adding the comments  solved by #1492   **What does this diff contain?**\r\n- An implementation of blobstore interface which is backed by local file system (this is most of the diff)\r\n- Static config which is used to construct a file based blobstore at cadence boot-up time.\r\n- A static config to enable/disable archival for all of cadence. If this config is set to false then cadence will startup without archival.\r\n- A dynamic config override to enable/disable archival for all of cadence\r\n- Plumbing needed to send signals to archival system workflows\r\n- Dummy implementation of archival activity which trivially uses blobstore\r\n- Method constructing archival record name based on hash of domainID, workflowID and runID\r\n- Updated unit tests to assert archival was invoked\r\n\r\n**What is not done as part of this diff that will be done in follow up diffs?**\r\n- Implementation of archival activity (this includes visibility metrics and scheduling a timer)\r\n- Implementation of backfill activity (current diff just stubs out backfill activity)\r\n- Integration tests (current diff updates unit tests but archival is currently not enabled in integration tests). This was left as a follow up item because archival activity is not finished.\r\n- Playing nicely with cross DC. Must make sure we do not do double uploads for all archivals.\r\n- Gracefully stopping archival when we encounter too many errors\r\n\r\n**What does running locally with archival enabled look like?**\r\nOn cadence boot-up time a file based blobstore client will be created, based on static yaml config. The client will write archival records to /tmp/development/blobstore/[buckets]. On startup there is a default bucket and two custom buckets created. File based blobstore implementation does not create buckets dynamically, this is because an implementation based on S3 or other blobstore would not do dynamic bucket creation. \r\n\r\nA new domain can be registered with archival enabled e.g. `cadence --do samples-domain admin domain register --archival_enabled true`\r\n\r\nAn existing domain can enable archival e.g. `cadence --do samples-domain admin domain update --archival_status enabled` \r\n\r\nWhen a domain first enables archival (either on update or register) a custom bucket name can be optionally provided. If no custom bucket name is provided the default bucket will be used. \r\n\r\nWhen a domain which has archival enabled has a workflow which completes the following will happen\r\n- History engine will use archival client to send a signal to archival system workflow\r\n- Archival client will send a signal with start to a system workflow which can handle the archival\r\n- The signal contains information about the user workflow which finished\r\n- The system workflow listens for signals and dispatches signals to archival activities\r\n- Archival activities use a blobstore client to archive history (currently they are uploading a dummy blob not real history)\r\n- Archival activities retry forever.   Hi team,\r\n\r\nI made changes to cadence to expose prometheus metrics \r\nusing https://github.com/uber-go/tally/tree/master/prometheus\r\n\r\nThis resolves #769 \r\n\r\nBut it does not work as the metric names in the cadence are not compatible with Prometheus query language. https://github.com/uber/cadence/blob/master/common/metrics/defs.go#L1021\r\n\r\nBasically Prometheus does not like '-' and '.' in the names.\r\nhttps://prometheus.io/docs/practices/naming/\r\n\r\nThere are two options,\r\n\r\n1) Rename the metrics.\r\nBut this will be disruptive to the existing monitoring rules setup of Cadence within Uber. (I want to know how disruptive it will be?)\r\n\r\n2) Rename the metrics on the fly when Prometheus monitoring is on.\r\n\r\nPlease suggest which one is acceptable.\r\n\r\nThanks,\r\nHarsha\r\n I would love to see this feature in Cadence. \ud83d\ude09  When I tried, I couldn't make it completely work because of Prometheus client panicking on naming conflicts with uber-tally scoped metric names.\r\nI will find some time this week to rebase this  oh nice. I will verify after rebasing. Thanks Closing as #1770 supersedes and adds prometheus metrics support.   close in favor of #1456   We have limited number of secondary indexes.  We should ignore the status filter if the user calls list workflow execution with both workflow execution ID and status filter.  In some environments (to satisfy difference between local laptop environment and CI) we need to make sure cadence binds on all interfaces Our internal integration framework creates isolated docker network and during local development it is exporting ports back to host system - here we need to make sure cadence server binds on external IP of docker container (docker is not exporting binds on localhost of container), when we run same test inside CI environment - we're not exporting anything to host machine and run test in that isolated network and here we need cadence to bind on `127.0.0.1`. Binding on all interfaces will satisfy both environments and it is defaul behavior of yarpc apps (afaik). @artms -  Just a ping - Where are you with this PR ? Do you still need the changes in this PR ?  > @artms - Just a ping - Where are you with this PR ? Do you still need the changes in this PR ?\r\nSorry, last week was very busy didn't have time to sit and do it, I'm keeping this change in mind :) @venkat1109 - change is ready @venkat1109 - gentle nudge.   Closing test pull requests to just clean up our CR list  See PR for changes: https://github.com/uber/cadence-web/pull/84  Cadence frontend reads history for executions from persistence and deserializes them before sending it back to client.  This adds unnecessary load on the frontend as it never does anything with the history before shipping it back to client.  \r\nWe need to have another API to GetRawHistory which returns the entire payload as-is back to client and client does the deserialization to thrift object.  This will reduce a lot of load from frontend.   Describe workflow execution behavior is broken when server side retries kicks in for activities.  Currently we expose the following pending activity information:\r\n```\r\n{\r\n      \"ActivityID\": \"57\",\r\n      \"ActivityType\": {\r\n        \"name\": \"hearbeating_activity\"\r\n      },\r\n      \"State\": \"STARTED\",\r\n      \"HeartbeatDetails\": \"162125\\n\",\r\n      \"LastHeartbeatTimestamp\": \"2018-10-24T20:15:57Z\"\r\n    }\r\n```\r\n\r\nIf this activity timeouts due to heartbeat timeout it shows the following:\r\n```\r\n{\r\n      \"ActivityID\": \"57\",\r\n      \"ActivityType\": {\r\n        \"name\": \"hearbeating_activity\"\r\n      },\r\n      \"State\": \"SCHEDULED\",\r\n      \"HeartbeatDetails\": \"\",\r\n      \"LastHeartbeatTimestamp\": \"1970-01-01T00:00:00Z\"\r\n    }\r\n```\r\n\r\nDetails and LastHeartbeatTimestamps are cleared.  We need to surface all retryable information in mutable state including previous errors, lastheartbeat, etc. Any update on this? Would be helpful for debugging For case 2 and 3, the activity is either succeed or failed, and the information can be accessed by showing history of the workflow. For case 1, I am unable to get a local repro. I think it has already been fixed by [#1204](https://github.com/uber/cadence/pull/1204). See also [#1219](https://github.com/uber/cadence/pull/1219). need to create an integration test to ensure the behavior is correct. [PR](https://github.com/uber/cadence/pull/1593) for the integration test. Just found that the issue still exists for cross-DC. Working on a fix. Merged. Closing this issue.  There are some red marks in the last merged commits:\r\nhttps://github.com/uber/cadence/commits/master\r\n\r\n\r\nAlso on my laptop, running \"make cover_ci\" sometimes would fail.\r\nThey are because for two reason: \r\n```\r\n*** Test killed: ran too long (11m0s).\r\nFAIL\tgithub.com/uber/cadence/host\t712.056s\r\n```\r\nOr\r\n```\r\n    --- FAIL: TestIntegrationSuite/TestActivityCancellation (1.89s)\r\n        <autogenerated>:1: \r\n            \tError Trace:\tintegration_test.go:1767\r\n            \tError:      \tShould be true\r\n            \tTest:       \tTestIntegrationSuite/TestActivityCancellation\r\n```\r\nMy guess is we hit some performance issue in the last few commits.\r\n\r\n https://travis-ci.org/uber/cadence/builds/440767443?utm_source=github_status&utm_medium=notification\r\n\r\nhttps://travis-ci.org/uber/cadence/builds/441820429?utm_source=github_status&utm_medium=notification\r\n\r\nhttps://travis-ci.org/uber/cadence/builds/441144876?utm_source=github_status&utm_medium=notification https://travis-ci.org/uber/cadence/builds/442942611?utm_source=github_status&utm_medium=notification @longquanzheng it looks like this can be closed now that we moved to buildkite  this has something to do with list open / close workflow of a domain which is effectively local (global domain with one target datacenter).\r\n\r\nmy opinion, the current behavior is ok, i.e. any read operation should not see domain not active.\r\n`this is a feature, not a bug`   This is done.  Skips deserialization of this data since we don't need to turn history events into strongly-typed objects on the server side.  @longquanzheng was this something you already worked on? Is there a public API to get history blobs?  @samarabbas was this feature already built? No it is still not done yet.  I have created a couple of tasks which needs to happen before this.  Activity task fail / timeout event should also include activity progress if there is any.\r\n  Too many conflicts, use this PR instead: https://github.com/uber/cadence/pull/1156  This is a duplicate of #474. Will close the old one.   yes, should be part of the invariant check.\r\n\r\nsome more info on this: currently, all workflow update transaction will do a check on being the current workflow. so even if we have a bug / data resurrection, the blast radius is acceptable. same applies to workflow creation  @meiliang86 this issue should be re-opened\r\n\r\nbasically we were dealing with this err `ErrConflict` by write a for loop and throw away in mem change of mutable state and redo the change again: https://github.com/uber/cadence/blob/master/service/history/decisionHandler.go#L518\r\n\r\nwe should \r\n1. get rid of the generation of `ErrConflict`, to be replaced by directly using `ConditionFailedError`\r\n\r\nref: https://github.com/uber/cadence/blob/d69591532cdc305033dd62d19f9ff3f83a3c5364/common/persistence/cassandra/cassandraPersistence.go#L1882\r\n\r\nref: https://github.com/uber/cadence/blob/d69591532cdc305033dd62d19f9ff3f83a3c5364/service/history/workflowExecutionContext.go#L948\r\n\r\n2. we should get rid of the for loop dealing with `ErrConflict` (ref see above), and use network middle layer to do retry (which will looks clean) if seeing err with type `ConditionFailedError`\r\n  @andrewjdawson2016 Can you check if this is still relevant? https://github.com/uber/cadence/pull/2825\r\n\r\nThis diff addresses the issue. Query cannot complete unless at least one decision task has been completed. This diff will make the error message more obvious.   Currently list of workflow executions doesn't include any user provided information about a workflow.\r\nThe proposal is to support additional field (description or info) that is included into the visiblity records. This is supported by search attributes on advanced visibility store. \r\nhttps://cadenceworkflow.io/docs/11_search\r\nhttps://github.com/uber/cadence/blob/master/docs/visibility-on-elasticsearch.md   Looks good after the update.  Let's modify the unit test as I suggested in the comment and land this PR.  Add the missing metric scope for ResetStickyTaskList  Currently all list close workflow APIs are ordered by workflow start_time, this lead to confusion when users try to \"list failed workflows in last 7 days\" where they only saw those failed workflow started within 7 days. The reason is closed_executions initially chose to use start_time as clustering key and sort by that. \r\n\r\nWith latest Cadence server v0.5.3, users need to follow the following steps to migrate to this feature:\r\n1. update db schema and make sure visibility keyspace contains table `closed_executions_v2`\r\n2. let visibility data goes to both close_execution and close_executions_v2 tables for longest domain retention.\r\n3. enable dynamic config `system.enableReadFromClosedExecutionV2` and restart server.\r\nThere is no changes needed from Cadence client side. \r\n\r\nDetails could be found:\r\n1. https://github.com/uber/cadence/pull/1221 \r\n2. https://github.com/uber/cadence/pull/1470  @vancexu can we close this issue?  Compressing data might also help  close issue\r\n\r\ndecision will be invalidated when workflow turn from active to standby or standby to active due to issues with buffered events.\r\nactivity will not be affected   Done internally  https://github.com/uber/cadence/pull/949\r\n   Visibility table uses domain_id + domain_partition as partition key. Currently, we are hardcode 0 as domain_partition for all domains. This will become scale issue if we have large number of workflows in a domain, like 500M. We need to fix this for autobots use case.\r\nPossible solutions: \r\n1) Generate a day_id from timestamp and use it as domain_partition.\r\n2) Config a max_partition for each domain, then hash(workflow_id) % max_partition and use it as domain_partition.\r\n3) Or even combine with 1 and 2, use the combination of the day_id and hash(workflow_id) % max_partition.\r\n\r\nThere are pros/cons for each approaches.  InternalServiceError{Message: CreateDomain operation failed. Inserting into domains table. Error: gocql: not enough columns to scan into: have 1 want 4 This bug cannot be stably repro. We we fix it when it becomes an issue.\r\nThe test is in common/persistence/cassandraMetadataPersistenceV2_test.go#TestConcurrentCreateDOmain()   Implement SQL persistence so that Cadence can run on top of SQL database.\r\nWe should rely on general SQL interface so the actual DB implementation can be swappable. @meiliang86 Any updates on this?  We were hoping to use this in the next couple weeks.   Any update on this issue and the SQL implementation? Yes. We recently implemented all the SQL persistence (other than visibility) and made it working on top of MySQL (we use general SQL library so it should work with other SQL implementations). @uber-qlam can you send out instructions so people can try? Hi, let me know if these instructions work for you.\r\n\r\n1. Stand up a MySQL instance (or perhaps your SQL database of choice) at `localhost:3306`.\r\n1. Make sure that NO_ZERO_IN_DATE and STRICT_TRANS_TABLES [is disabled ](https://stackoverflow.com/questions/9192027/invalid-default-value-for-create-date-timestamp-field) as 0 timestamps are used for timer queues.\r\n1. Create a schema called `catalyst_test` and give a user `uber` with password `uber` privileges to it.\r\n1. Create a file `/tmp/usemysql`. (This \"hack\" is the current way of enabling/disabling SQL persistence.)\r\n1. If you already have a local cassandra instance with the cadence-visibility keyspace, you can skip this.\r\n    1. Go to the `cadence` source and run `make install-schema`.\r\n1. Clone **`uber-qlam/cadence`** into `$GOPATH/src/github.com/uber/cadence`. You might need to displace your copy of `uber/cadence`.\r\n1. Check out revision `helloworld2`.\r\n1. Build with `make`.\r\n1.  Install the MySQL schema. Execute the contents of `common/persistence/sql/schema/1_base.up.sql`. \r\n1. Start cadence: `cadence-server start` Hey, this is awesome! Looking forward to it.\r\n\r\nIs this feature actively worked on or is it still a proposal + a POC implementation? Is there a decision that SQL is going to be supported in Cadence?\r\n\r\nIs there a way we (users) can help with this feature other than testing it? Yes, this is active. We're currently getting the PoC into a state that it can be checked into master. Issues related to this work will be marked with the [sql](https://github.com/uber/cadence/labels/sql) label. That's good to hear! Is there a rough ETA when that will happen? Cassandra is a no-go for us in the long term and we are about to make a decision about using Cadence in our project. I'm currently working on merging the SQL support into the master branch. I target this or next week to land it. It is still missing the visibility functions support. So realistically it would take another week or two to get all of the API implemented. Then we need thorough performance testing to consider it officially ready. \r\n\r\nSo less than in a month you could start your performance tests to speed things up.\r\n\r\nHere is the branch I'm currently using for development: https://github.com/mfateev/cadence/tree/sqlpersistence @mfateev thanks a lot, that sounds very promising. Are the instructions to run with Mysql still valid on master branch? No, the instructions are not valid for it.\r\nThe SQL persistence unit tests can be executed through \"make\" assuming that a mysql database with user \"uber\" and password \"uber\" is reachable on a localhost. Most of them are still disabled as they are not passing and I'm working on fixing them.\r\nWe are also working on refactoring configuration and initialization code to support pluggable persistence implementations. After this code is merged the updated instructions will be posted. Hi @mfateev , I see good progress on SQL implementation,\r\nCan you update the instructions to run locally with SQL setup, I want to try it out and if possible contribute to it further. \r\nThanks, Any update? no change on that branch since a month ago. All of the pieces needed to execute a fully functional cadence server on top of SQL are now in master. Cadence config now supports multiple data store options (SQL & Cassandra):\r\n\r\nhttps://github.com/uber/cadence/blob/master/config/development.yaml#L5\r\nhttps://github.com/uber/cadence/blob/master/common/service/config/config.go#L114\r\n\r\nThe persistence layer unit tests also run against both SQL/Cassandra as of today. That said, we are still in the process of testing for correctness / performance / scalability. We expect to find bugs and/or perf issues as we are doing this. Meanwhile, if you like to try out running cadence on top of SQL, you can follow the steps below:\r\n\r\nInstall Schema - using the .sql files in this directory\r\nhttps://github.com/uber/cadence/tree/master/schema/mysql/\r\n\r\nModify Server Config\r\nhttps://github.com/uber/cadence/blob/master/config/development.yaml#L1\r\n```\r\npersistence:\r\n  defaultStore: mysql-default\r\n  visibilityStore: mysql-visibility\r\n  numHistoryShards: 4\r\n  datastores:\r\n    mysql-default:\r\n     sql:\r\n        driverName: \"mysql\"\r\n        user: \"userName\"\r\n        password: \"password\"\r\n        connectAddr: \"addr:port\"\r\n        connectProtocol: \"tcp\"\r\n        databaseName: \"cadence\"\r\n    mysql-visibility:\r\n      sql:\r\n        driverName: \"mysql\"\r\n        databaseName: \"cadence_visibility\"\r\n        connectAddr: \"addr:port\"\r\n        connectProtocol: \"tcp\"\r\n        user: \"userName\"\r\n        password: \"password\"\r\n``` Hey guys!\r\n\r\nNo pressure, but are there any updates on the SQL support? We are really looking forward to use it.\r\nCan we help in any way to make progress?\r\n\r\nIs there a roadmap or project board to track the progress of the feature? I can't really see any issues, PRs labeled with `sql` (except maybe #1339) Closing this since MySQL support is now in beta as of release [0.5.7](https://github.com/uber/cadence/releases/tag/v0.5.7). Use the [sql label](https://github.com/uber/cadence/labels/sql) to tag issues and follow progress.  It is non-trival to add domain filter to dynamic config MaximumBufferedEventsBatch in history. Currently in mutableState, we only have domainID but no domainName or domainCache. \r\n\r\nThere are 3 possible ways:\r\n1. Add domainName to executionInfo, along with domainID. But this requires persist additional unimportant info. \r\n2. Add domainCache reference in mutableState\r\n3. Add new type of filter domainID, which confuse people and sometimes hard to get domainID.\r\n\r\n   Merge protocol sometimes rely on the entire history being sent on the first replication task.  As sometime conflict resolution could drop certain events and only way to correctly merge execution history is to send the entire history on first replication task.  Enable global domain added at https://github.com/uber/cadence/pull/858\r\nReplication switch is decided not needed for now.  Last few events in the history:\r\n```\r\n79  TimerFired                 (TimerId:13,\r\n                                 StartedEventId:73)\r\n  80  DecisionTaskScheduled      (TaskList:(Name:samar-C02Q512VG8WM:f36e9080-cf7c-4939-bc80-0aa4a04197ff),\r\n                                 StartToCloseTimeoutSeconds:180, Attempt:0)\r\n```\r\n\r\nLogs from the replicator:\r\n```\r\nWARN[2018-06-05T10:34:44-07:00] Dropping stale replication task.  CurrentV: 11, LastWriteV: 11, LastWriteEvent: 80  Service=cadence-history execution-id=cron.workflow.sanity first-event-id=81 next-event-id=82 run-id=56726d3e-336f-4d40-a47b-fb5621d1b8cd shard-id=0 source-cluster=standby version=10 wf-component=history-replicator\r\nWARN[2018-06-05T10:34:44-07:00] Dropping stale replication task.  CurrentV: 11, LastWriteV: 11, LastWriteEvent: 80  Service=cadence-history execution-id=cron.workflow.sanity first-event-id=82 next-event-id=85 run-id=56726d3e-336f-4d40-a47b-fb5621d1b8cd shard-id=0 source-cluster=standby version=10 wf-component=history-replicator\r\n``` We are not seeing this recently.  Let's keep an eye out to make sure it does not appear again.  close due to no longer relevant   Closing this one as we have already added UT coverage for core components.  Will file explicit workitems for things which need more coverage.  This allows the Makefile to be used for production schema setup by\r\nadding variables for changing the cassandra host and the replication\r\nfactor.\r\n\r\nAlso introduces a Dockerfile for the cadence-cassandra-tool that makes\r\nit easier to get started administering cassandra for cadence.\r\n\r\nThe docker image also allows us to setup the schema in a kubernetes cluster easily. This is related to #789  @vancexu can you review this PR? Thank you @ryanwalls for the contribution! \r\nCould you move dockerfile-cct to docker folder like #793\r\nand address merge conflicts? @vancexu Yep, will do that in the next couple days.   Hi @ryanwalls, would you be able to update this PR and #789? I think the Docker image part is already handled but the makefile part is not.   Hey Guys, \r\n\r\nI am getting an intermittent error when trying to start cadence as a binary locally\r\n\r\n```\r\nRingpop creation failed\\\" Service=cadence-frontend err=\\\"join duration of 45.2023763s exceeded max 30s\\\r\n\r\n```\r\n\r\nWhat is ringpop? And what could cause this error?\r\n\r\nI notice this issue more if I have chrome and slack open. It also will kill my network sometime too. Hi @alexDrinkwater , \r\nringpop is a [library](https://github.com/uber/ringpop-go) Cadence used for service discovery. \r\nIt looks like node take too long to join the ring, have you try using our docker image to start cadence locally? How did you start cadence as binary? We use binary all the time but we never seen this error before. (We do see similar errors when running our integration tests on Travis though https://github.com/uber/cadence/issues/737 ). \r\n @vancexu I compiled the binary into an exe for windows using this command:\r\n\r\n```\r\ngo build -o cadence.exe\r\n```\r\n\r\nI am trying to start it with:\r\n\r\n```\r\ncadence.exe start\r\n```\r\n @alexDrinkwater we run Cadence server as an executable on our Macbook all the time for local development and have never ran into the issue you described above.  Unfortunately we don't have the expertise to debug this issue on Windows.\r\nI suggest you use the docker we provide to run Cadence on Windows.  Otherwise you need to debug further to figure out why ring-pop is unable to bootstrap on a windows machine. @vancexu Is the service discovery used for discovering other cadence servers or Cassandra servers?\r\n\r\nWe are just running one instance of cadence, can we turn off service discovery? @samarabbas Unfortunately this is not for a development scenario but for a windows desktop app and it is a requirement to not have docker. @alexDrinkwater running even 1 instance of cadence will start multiple shards of frontend, history, and matching services, which ensure Cadence is scalable, so there is no way to shut it down. \r\nCould you try edit your config file (development.yaml) and change the ringpop maxJoinDuration to 60s, then make clean build again and try? @alexDrinkwater Were you able to walk around this ringpop issue?   \n[![Coverage Status](https://coveralls.io/builds/17079280/badge)](https://coveralls.io/builds/17079280)\n\nCoverage decreased (-0.04%) to 65.477% when pulling **0030aebbe38bdf8f46da5e0346dec085feee5812 on refresh0-cache** into **e515b0d27befbefd8232be708f4177c410f140d9 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/17095733/badge)](https://coveralls.io/builds/17095733)\n\nCoverage decreased (-0.008%) to 65.501% when pulling **4eba17e1db9b86a87f3f3f99d0b9cea828b639bc on bugfix-replicator** into **8d7b467a5e9db2f78d105620488f121f27c076fe on master**.\n  [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/uber/cadence?pullRequest=762) <br/>All committers have signed the CLA. \n[![Coverage Status](https://coveralls.io/builds/17064767/badge)](https://coveralls.io/builds/17064767)\n\nCoverage decreased (-0.2%) to 65.362% when pulling **45df0ebbebb2c10597a3a1fb074180f72f5ba3f8 on longquanzheng:admin-dev** into **b5d63c7c84b8e18ac08436b8ca24dfbd6c9fec10 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/17065133/badge)](https://coveralls.io/builds/17065133)\n\nCoverage increased (+0.1%) to 65.647% when pulling **1f5df762b7d96a5522c38c52f48cd4fdc164ef24 on bugfix** into **f34a6dbee8548f33526cd23aa6dfef0911dd65f2 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/17020228/badge)](https://coveralls.io/builds/17020228)\n\nCoverage decreased (-0.04%) to 65.558% when pulling **48e9556b692ff1d67709de3aa8d900d62bab44a1 on replicator-workflow-id-reuse** into **2f9dbdb36f5e77779ebe53c6dfcce204909b395d on master**.\n  Currently only start time is filterable. Needed for uber/cadence-web#17 @longquanzheng, is this part of your work on visibility?  If workflow has incorrect timeout specific when activity is scheduled then it appears the workflow is stuck when someone restarts the worker while activity is running.  But in reality workflow is waiting on a timer to fire to timeout the activity in future.\r\nIt would be great to have a CLI command to manually fail an activity, considering we already expose all the information about outstanding activities using the describe command.  This will be really useful feature for operations where someone can manually unstuck workflows by failing such activities manually. I would also allow completing activity successfully through CLI  @longquanzheng looks like this can be closed  \n[![Coverage Status](https://coveralls.io/builds/16999948/badge)](https://coveralls.io/builds/16999948)\n\nCoverage decreased (-0.06%) to 65.536% when pulling **aecf1eda36e8e2a2712d2f1eb41f4da76710fb9b on fakfa** into **2f9dbdb36f5e77779ebe53c6dfcce204909b395d on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16932101/badge)](https://coveralls.io/builds/16932101)\n\nCoverage decreased (-0.02%) to 65.679% when pulling **324c6c48dec83e9ef41450f8d840496070a23888 on bugfix** into **c89d2fd6cbab82565ea0252e76e6b0d7f87a210e on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16926231/badge)](https://coveralls.io/builds/16926231)\n\nCoverage increased (+0.02%) to 65.686% when pulling **ec7d62115d756ea3f62b7e39fe3ad11e01015e67 on bugfix-version** into **dbe4abb6f8bf3b5387ec7bfea296ba2d9bfa1918 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16996755/badge)](https://coveralls.io/builds/16996755)\n\nCoverage increased (+0.004%) to 65.69% when pulling **897d9f2e63cac1c18ae9dc5761dead28a0195831 on shard-update** into **b764298786f48e335e0f670fdeeaa393d99b1c8e on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16929651/badge)](https://coveralls.io/builds/16929651)\n\nCoverage decreased (-0.005%) to 65.681% when pulling **dda295a37e17a63d6c84ee210f4f3e972a481f4c on kafka-config** into **c16ac3a3832ccd8da493e134bdfdc264654ff619 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16845130/badge)](https://coveralls.io/builds/16845130)\n\nCoverage decreased (-0.08%) to 65.941% when pulling **5bf15ef27b504b589a246ee1131f880977aeb27b on bugfix** into **b8c61d8a10effdccabb0147d11d4c07808d22abb on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16844661/badge)](https://coveralls.io/builds/16844661)\n\nCoverage increased (+0.01%) to 65.963% when pulling **d3a33636c123c78c1383de7e636b1fed0bb22775 on tmp** into **915598b5c9743c6c1f1981d5b21ad7728b219878 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16844164/badge)](https://coveralls.io/builds/16844164)\n\nCoverage decreased (-0.02%) to 65.955% when pulling **55577b2246b5e30c5e104a214f769e6aeabebfed on bugfix** into **92e96a72a808fa3aee93bc3bd687d72044035d10 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16842359/badge)](https://coveralls.io/builds/16842359)\n\nCoverage increased (+0.003%) to 65.974% when pulling **b323f15474ca645b305406e61a9056fee8a650ab on bugfix** into **6d2c2f41b815ae30989fb7417aab8035818e4836 on master**.\n  Can you abandon this request as it is already landed in the patch branch.  \n[![Coverage Status](https://coveralls.io/builds/16912822/badge)](https://coveralls.io/builds/16912822)\n\nCoverage decreased (-0.05%) to 65.678% when pulling **db21f9939a28003afb06996205ed8d5d1484c06f on trigger** into **722bec990ca32e03e5d51afbf8fc069ab0b650e9 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16806369/badge)](https://coveralls.io/builds/16806369)\n\nCoverage decreased (-0.2%) to 65.975% when pulling **9eaa97ab483f9ef96491887820de485629c428bc on remaining** into **0d472875a126a6a68378e2d23b340a1f624149b2 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16738006/badge)](https://coveralls.io/builds/16738006)\n\nCoverage increased (+0.07%) to 66.357% when pulling **2710d2ee253f5fb7acfd40326fa88b5bdaf13e05 on domain** into **12ffac3e86cc986643047fcf1fd35d67d603b973 on master**.\n  This seems to be a common problem clients run into where they set very large DecisionTimeout value when starting workflow execution.  This cause the workflow to appear it is stuck when decision is dropped by the worker for whatever reason.  Decision should be very fast and most of the time should take under a second.  We need to restrict DecisionTimeout to some reasonable value, like 60 seconds for instance.\r\nThings to consider when restricting are:\r\n1) Local Activity\r\n2) Debugging experience is effected as decision will timeout when stepping through decider code\r\n\r\nOne idea is to log a warning when someone sets a decision timeout higher than a threshold.\r\nAnother idea is to reject request on docker with higher decision timeout for developers to catch these during development.  \n[![Coverage Status](https://coveralls.io/builds/16827289/badge)](https://coveralls.io/builds/16827289)\n\nCoverage increased (+0.3%) to 66.291% when pulling **4b1d4a42c07302ffab60c9b9489d7ce66aa31f04 on pagination** into **6d2c2f41b815ae30989fb7417aab8035818e4836 on master**.\n  Schema changes to buffer replication tasks as part of mutable state.\r\nPersistence layer changes to provide support for adding new replication\r\ntasks, and deleting replication tasks after they are processed and\r\napplied to workflow execution.\r\n\r\nMutableState change to support CRUD of buffered replication tasks.  And\r\nHistoryReplicator changes to detect out-of-order events and instead add\r\nreplication task to the buffer.  Also loop through all replication task\r\nand flush any buffered tasks after processing of an update.\r\n\r\nfixes #672  \n[![Coverage Status](https://coveralls.io/builds/16682248/badge)](https://coveralls.io/builds/16682248)\n\nCoverage decreased (-0.2%) to 65.596% when pulling **d0c98fd68ad8996d69cbcdfef91af1d2d809df2f on samarabbas:xdc-reorder-events** into **021330b6bb1438c7fdcc14fc7a27717ed9eabe82 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16660335/badge)](https://coveralls.io/builds/16660335)\n\nCoverage increased (+0.02%) to 65.362% when pulling **4795a55b0f259e704e2fd1befb15f3e04519215f on timer-bug** into **b125c4ebbd6962bea8e88c1aeab7608c09720d64 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16609246/badge)](https://coveralls.io/builds/16609246)\n\nCoverage decreased (-0.008%) to 65.332% when pulling **e4a357470880d01c4e1b342f77bc0e69bb05f27f on update-docker** into **1aecfbce9956b88816b6d3d68db37e2de242f849 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16663198/badge)](https://coveralls.io/builds/16663198)\n\nCoverage increased (+0.1%) to 65.863% when pulling **0032fbb18b1645119a7e584f8f821461b25ef9cc on ms-version** into **021330b6bb1438c7fdcc14fc7a27717ed9eabe82 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16697889/badge)](https://coveralls.io/builds/16697889)\n\nCoverage increased (+0.02%) to 65.62% when pulling **96263257dcf1600fb880f005a0278e957e69b14a on event-version** into **99f36c9cd8c1133aaeee1f6f9a49958a0a52d0ef on master**.\n WorkflowExecutionContext.UpdateHelper has one more location where it updates replication state for new run under the flag: 'updateReplicationState'.\r\nMake sure to update that code path.  \n[![Coverage Status](https://coveralls.io/builds/16581541/badge)](https://coveralls.io/builds/16581541)\n\nCoverage decreased (-0.01%) to 64.849% when pulling **bce641300ac6726015638903358b500b2c544f30 on events** into **f57cd0df8ee17fbd1e59d2d510d75639d584ffa6 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16580907/badge)](https://coveralls.io/builds/16580907)\n\nCoverage increased (+0.09%) to 64.956% when pulling **68d47e9eb44b22eaf8a9af1b9a1556ff1fde40bf on events** into **f57cd0df8ee17fbd1e59d2d510d75639d584ffa6 on master**.\n  We need admin commands like the following to support certain servicing scenarios:\r\n1) Visibility into MutableState Database\r\n2) Visibility into MutableState Cached\r\n3) Induce DecisionTask\r\n4) Induce ActivityTimeout for workflow execution\r\n5) Force Reload Shard\r\n6) Force Reload mutable state cache\r\n7) Find host from workflow execution History Host Level Analytics:\r\n1) Number of Shards\r\n2) Number of items in DomainCache\r\n3) Number of items in HistoryCache for a specific shard https://github.com/uber/cadence/pull/1601\r\nhttps://github.com/uber/cadence/pull/1581\r\n  conditionally.\r\n\r\ncurrently, there is no clean & reliably way to know that if an error is returned, no change is modified to mutable state. so each time an error happens, mutable state cache is cleared.\r\n\r\nplz keep this issue open, to remind us of this potential perf improvement.\r\nhowever there is nothing we can do for now (and probably even in the future) we can add a `dirty cache` flag indicating that the mutable state is changed, the cost is refactoring the entire mutable state & corresponding logic: change everything to getter & setter.  \n[![Coverage Status](https://coveralls.io/builds/16546633/badge)](https://coveralls.io/builds/16546633)\n\nCoverage increased (+0.09%) to 64.948% when pulling **7b061f4cccdd9f5186ac39cacf5ccf5aeaab54a0 on bugfix-mutablestate-x** into **1662b2533392c68fb95081ed8bb2bce5962c8dbe on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16496261/badge)](https://coveralls.io/builds/16496261)\n\nCoverage decreased (-0.09%) to 64.831% when pulling **5f8ad70e36c2d500163634b7c3c6199638c38877 on bugfix-cache** into **df4866521fc7f8c13de3d034c32e23ace93323e2 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16662808/badge)](https://coveralls.io/builds/16662808)\n\nCoverage increased (+0.4%) to 65.685% when pulling **f7e6b01205aa5c629d556d60bf5ee7458b01b902 on transfer-Q-ack-x** into **b2f53a9a1fb6c30f8b95cc03f3e5caee3e795a9b on master**.\n  Some scenarios do not require querying closed workflows. So for them having a flag on a query to not query closed workflows is required. It is also a performance optimization to not load the closed workflow history to answer these queries.  Currently a workflow code can wait for completion of its child workflow. \r\nIt is also possible to wait for a completion of any workflow given its id from an external client.\r\nAbility waiting for completion of any workflow from a decider code is missing.\r\n\r\nStrawman proposal:\r\n\r\n- Add a WaitForExternalWorkflowCompletion decision and the correspondent event.\r\n- Add a WaitForExternalWorkflowCompletionFailed event\r\n- Add ExternalWorkflowCompleted/Failed/Cancelled/Terminated/TimedOut events. Another option is to have an\r\nExternalWorkflowCompleted event that contains the termination event of the external workflow as a field. The waiting part is almost the same if this is implemented. But the child workflow creation part is still needed. lemme +1 this request.  I'm hoping to build a \"nanny\" workflow to do cleanup regardless of how another workflow exits (including termination), and at the moment the only ways to do this seem to be:\r\n- use the nanny workflow to run the \"real\" workflow as a child-workflow, so it can wait on the completion.  works, but adds a layer of indirection, kinda hard to adapt existing code.\r\n- long-poll with GetWorkflow(..) and wait on the completion, e.g. in a long-running activity.  fine for small numbers, but I'd be looking at millions of active workflows -> active long-polls.\r\n- or this issue, which would let me launch any number of nanny / observer / cleanup workflows from inside the \"real\" workflow whenever needed. (child policy: abandon, and they wait on the parent's completion) Specific to my case, where I want to run code based on the completion of a *single* other workflow:\r\n@meiliang86 came up with the great idea of starting a child workflow with `ParentClosePolicyRequestCancel` and just sleeping for, like, a year or some other absurd length.  When the parent completes, the ctx will cancel and the sleep will unblock, at which point I can get a disconnected context and do whatever I like.\r\n\r\nThat's a pretty acceptable workaround for cases like mine.  It could even be used to build a multi-workflow watcher, e.g. with children signaling a shared observer-workflow.  That'd be more complicated though, hopefully I won't need to do that.\r\n\r\nA true \"wait for any workflow\" mechanism would still be great though, and far more natural, so my +1 stands :)\r\n\r\n---\r\n\r\nedit: bleh.  this plays poorly with resets (can't reset with pending children)... so maybe I can't use this either.\r\nhmm.  \n[![Coverage Status](https://coveralls.io/builds/16350211/badge)](https://coveralls.io/builds/16350211)\n\nCoverage decreased (-0.1%) to 64.831% when pulling **c93d84fa87586fadcbb77842ea1755555b22db76 on bugbugbug-bug1** into **8b6694a16ca463ff70b831e5247a3bd472127328 on master**.\n  lgtm \n[![Coverage Status](https://coveralls.io/builds/16624339/badge)](https://coveralls.io/builds/16624339)\n\nCoverage increased (+0.01%) to 65.255% when pulling **fa59d957abbfd9c0cf2151d25eb971f37a19ccc3 on 1.10** into **ebde44dd18cdee73487d6e9c10fc88e14f336b0b on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16662943/badge)](https://coveralls.io/builds/16662943)\n\nCoverage increased (+0.08%) to 65.745% when pulling **bba56fa5a02d1a9d9471b5b0c40713d6f7dfe655 on bugbugbug-bug2** into **c3e240ed0875cdcbf168e8e599e0580af3a1404e on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16309629/badge)](https://coveralls.io/builds/16309629)\n\nCoverage decreased (-0.6%) to 64.371% when pulling **91fa2396aebdb6813bd2a73fd0dc91c680fa3d18 on transfer-Q-ack-1** into **910f5999cbf47d2ce227d2e684824be91a221126 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16306217/badge)](https://coveralls.io/builds/16306217)\n\nCoverage decreased (-0.5%) to 64.829% when pulling **e6a2a0e59214169a80e95ecf47b3df642babbec6 on transfer-Q-standby** into **1beef9007bb8957a96401539e30b18a754fbebde on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16565328/badge)](https://coveralls.io/builds/16565328)\n\nCoverage increased (+0.5%) to 65.315% when pulling **a3143d14d592b685cfccc43f08b890535e7c5b30 on timer-Q-failover** into **f57cd0df8ee17fbd1e59d2d510d75639d584ffa6 on master**.\n  can be closed after @yycptt 's work on queue multi cursers  \n[![Coverage Status](https://coveralls.io/builds/16258714/badge)](https://coveralls.io/builds/16258714)\n\nCoverage increased (+0.06%) to 63.408% when pulling **fa0c9c48bfb715875147b7ee8ad8413ecaa0e254 on integ-speed** into **2aca9406fbfd630d8245407fd1a3aea838a02ae5 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16300739/badge)](https://coveralls.io/builds/16300739)\n\nCoverage decreased (-0.2%) to 65.371% when pulling **df0e1bfc66be8f47c05fa567d4f7828872aa0b74 on timer-Q-process-2** into **e68e2bf3b3d56368d89d609b46e4795d7bb546c7 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16218100/badge)](https://coveralls.io/builds/16218100)\n\nCoverage increased (+0.002%) to 63.251% when pulling **7be290ec07a5a2b6954a8da7b2b1fd57b5d7caea on timer-Q-process** into **473c5241936127b547a3cc7e54c4ae24209b2f1f on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16258940/badge)](https://coveralls.io/builds/16258940)\n\nCoverage decreased (-0.08%) to 63.265% when pulling **caf49b34315719ea09312fdcc31e0e90175ba30c on metadata** into **2aca9406fbfd630d8245407fd1a3aea838a02ae5 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16207845/badge)](https://coveralls.io/builds/16207845)\n\nCoverage increased (+0.01%) to 63.474% when pulling **4f6eae21b882dba127a71be76d191797ff926f58 on timer-Q-ack** into **314d222071e8fcae72275092364ef68fbed5e7e6 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16127826/badge)](https://coveralls.io/builds/16127826)\n\nCoverage increased (+0.06%) to 64.148% when pulling **1af2db7a38274e07fcbd4d64f0dcf952d69e44e8 on timer-Q-p1** into **8200f58811ef31a211d0dd20d970892d22e3d422 on master**.\n  History engine changes to generate replication task when IsGlobalDomain\r\nis enabled.  MutableStateBuilder is also updated to load replication\r\nstate for the domain and have support for creating replication task on\r\nupdates along with relevant updates to mutable state.\r\n\r\nReplication tasks are written to a separate queue for the shard.  This\r\nrequires persistence changes to write replication tasks on updates in\r\nthe same transaction and new API for reading and completing the task.\r\nNew AckLevel is needed for processing of replication tasks.  This\r\nrequires changes to shard crud on the persistence layer for reading and\r\nwriting the new ack level for replication task processing.\r\n\r\nClusterMetadata and MessagingClient are already exposed on the Service.\r\nSo passing through Service to all layers in History service which needs\r\naccess to both ClusterMetadata and MessagingClient. \n[![Coverage Status](https://coveralls.io/builds/16108228/badge)](https://coveralls.io/builds/16108228)\n\nCoverage decreased (-0.3%) to 63.998% when pulling **e454c148ee545ab4f5e3dbbeb4b71358ba7b32ea on samarabbas:xdc-replicate-events** into **93a5728fab1d2a94f4ea65cbbc69f1f24b757d12 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16087858/badge)](https://coveralls.io/builds/16087858)\n\nCoverage increased (+0.1%) to 64.37% when pulling **a65c40bb91391bbd787c487e0600fbefae387f2e on timer-Q-standby-processor** into **ae6b94c9a75e81928dca82ffcc96630fc7bb40e8 on master**.\n  Multiple steps:\r\n1) Be able to restart from begining.\r\n2) Be able to restart from point in history.\r\n3) Be able to detect the last good point in history and restart from that point.\r\n  \n[![Coverage Status](https://coveralls.io/builds/16106724/badge)](https://coveralls.io/builds/16106724)\n\nCoverage increased (+0.1%) to 64.364% when pulling **15ba62c4174388339fd6d8789b08dd8d9b869af8 on bugfix-domain** into **ae6b94c9a75e81928dca82ffcc96630fc7bb40e8 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16085178/badge)](https://coveralls.io/builds/16085178)\n\nCoverage decreased (-0.08%) to 64.266% when pulling **87c09c573905ee1bd6274a56559fddd0e02fa1ff on domain-cache** into **1d939e688f94aeecd8e13820d884a672e6ef90b0 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16026776/badge)](https://coveralls.io/builds/16026776)\n\nCoverage increased (+0.02%) to 64.373% when pulling **1b651a14bd13e9da493ab380e0833a5ca0a58389 on timer-builder** into **1d939e688f94aeecd8e13820d884a672e6ef90b0 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16001297/badge)](https://coveralls.io/builds/16001297)\n\nCoverage increased (+0.03%) to 64.085% when pulling **54cabd8074d7f0083b926db73c8cb76cadc419c5 on bugfix-shard-consistency** into **6ad47ffc1b484ff71e3712437d1d34854790ffd2 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15982233/badge)](https://coveralls.io/builds/15982233)\n\nCoverage increased (+0.02%) to 64.071% when pulling **213d50cc21bf7d13e2b41bf42a2fe5d4efba97e6 on bugfix-visibility-consistency** into **6ad47ffc1b484ff71e3712437d1d34854790ffd2 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16007698/badge)](https://coveralls.io/builds/16007698)\n\nCoverage increased (+0.1%) to 64.153% when pulling **5db6ac15b4eb0b24a93fab141dc2efc854219535 on revert** into **738d1035d2570dbc48d760038f0b13cb18ed4380 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15960860/badge)](https://coveralls.io/builds/15960860)\n\nCoverage decreased (-0.1%) to 64.071% when pulling **dc5991c9ce731a04aeeac09b68c3587acc9b41e4 on revert** into **1f1d16ffefb7699aaad76f199a3d8f7db899c38c on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15960345/badge)](https://coveralls.io/builds/15960345)\n\nCoverage increased (+0.2%) to 64.322% when pulling **729ebee912a8984f24927512bf02724ab5898991 on bugfix-visibility** into **6164b73da4a2d57fd78f3351033e53c93f886cb7 on master**.\n  rewrite is done, close issue  \n[![Coverage Status](https://coveralls.io/builds/15937568/badge)](https://coveralls.io/builds/15937568)\n\nCoverage increased (+0.005%) to 64.046% when pulling **8fc8d8a49e59eb929cea86335c5e9b8eb51cea96 on bugfix-transfer** into **0a4abbeb0b7f5153572d00d06ad093bedc5251c6 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15921580/badge)](https://coveralls.io/builds/15921580)\n\nCoverage increased (+0.1%) to 64.159% when pulling **1a627e3d4946e1f2df635767a9dddf1129347ef3 on timer-bug** into **0a4abbeb0b7f5153572d00d06ad093bedc5251c6 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/16022286/badge)](https://coveralls.io/builds/16022286)\n\nCoverage decreased (-0.002%) to 64.395% when pulling **f3a4b79b6f905607cc192c069453c689d1ad496f on timer** into **edb556c5f073cdfbbb6eff55ebd53e4aeb983b33 on master**.\n Let's hold onto this change until we cut a new release.  \n[![Coverage Status](https://coveralls.io/builds/15954839/badge)](https://coveralls.io/builds/15954839)\n\nCoverage increased (+0.1%) to 64.161% when pulling **a67b4e7a26fa618e5c3e151ffd901a400480f621 on decision-order-2** into **35bf3dee6eed3e205d93ee4b87d35e7cdea0b089 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15884661/badge)](https://coveralls.io/builds/15884661)\n\nCoverage increased (+0.08%) to 64.151% when pulling **29266205bdd986d0e88dd7e9617cd4a525f0fbfd on decision-order-1** into **08652dbbf80b5ffd2cd35602484e3b57ce3ac210 on master**.\n  When SignalExternalWorkflowDecision doesn't specify domain the following error is returned:\r\n\r\n\"Unable to signal workflow across domain: .\"  \n[![Coverage Status](https://coveralls.io/builds/15825647/badge)](https://coveralls.io/builds/15825647)\n\nCoverage decreased (-0.02%) to 64.396% when pulling **9e4a18bd7c59dc3e8653d69daa771265572744a6 on bugfix-dynamicconfig** into **57829555fb3ee55da5daa6f1b767808b7851f903 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15825643/badge)](https://coveralls.io/builds/15825643)\n\nCoverage decreased (-0.0007%) to 64.413% when pulling **83d61671f9949cc634ed005742125312f90c6801 on cancellation** into **57829555fb3ee55da5daa6f1b767808b7851f903 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15821237/badge)](https://coveralls.io/builds/15821237)\n\nCoverage decreased (-0.02%) to 64.414% when pulling **48d8ecd65834bfab5f6b16e27c2f85423bc7830a on bugfix-mock** into **3f1420984d90426eb71c3125252502c7bc0c531f on master**.\n  Resolved along with https://github.com/uber/cadence/issues/741  \n[![Coverage Status](https://coveralls.io/builds/15770966/badge)](https://coveralls.io/builds/15770966)\n\nCoverage decreased (-0.03%) to 67.345% when pulling **0e1d96261384f0a93e43016c7c209fff0e3db37a on replicate-domain-done** into **7d658c9815ebd2f7a14b875f4ef84b4f32d264b1 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15727745/badge)](https://coveralls.io/builds/15727745)\n\nCoverage decreased (-0.2%) to 67.253% when pulling **c2e208c9d42b5f170cf697c1c0b89cc1019aa0e2 on samarabbas:replicator** into **d914e07ca78e84f9c5d5aa055ec353acd9acab9c on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15669148/badge)](https://coveralls.io/builds/15669148)\n\nCoverage increased (+0.09%) to 67.509% when pulling **a8a94077442efc7dc35ea870fc6ef4fca66b6268 on samarabbas:replicator-fixes** into **ad78f5f2006d73ca0389eb976c278d6b71033a6f on uber:master**.\n  DecisionTaskFailedCause doesn't make sense when coming from a decider.\r\n\r\nhttps://github.com/uber/cadence/blob/master/idl/github.com/uber/cadence/shared.thrift#L908  \n[![Coverage Status](https://coveralls.io/builds/15612989/badge)](https://coveralls.io/builds/15612989)\n\nCoverage decreased (-1.0%) to 67.511% when pulling **911b019d0b92ded987e918a58a009663b5542718 on samarabbas:replicator** into **ce52993e2212fa77045d07b6ab5a18496482543d on uber:master**.\n  Currently, sync lock is used to ensure serialized transaction, like in CreateWorkflowExecution. \r\nThere are cases when one call is holding lock (because of network/db issues) which blocks all the others calls, and then after lock released all calls start to run and cause a spike.\r\n\r\nOne thing we can do to optimize is: \r\nInstead of using native sync lock, use common.lock with frontend context. If frontend context deadline exceed, history calls can release lock immediately.   Moreover, control is not propagated to database layer.\r\nThis is currently fine due to client issue https://github.com/uber-go/cadence-client/issues/405\r\n\r\n  Apparently this was already taken care of by #2807. Closing this issue.   \n[![Coverage Status](https://coveralls.io/builds/15528770/badge)](https://coveralls.io/builds/15528770)\n\nCoverage increased (+0.02%) to 68.458% when pulling **ad77d4639706d2d9be6a2473ba8701a788a56b48 on samarabbas:history-panic** into **9b56a18552fc6bc0b436d30182e5e491761ea1a9 on uber:master**.\n  Running on local docker. Getting panic:\r\n\r\n```\r\ncadence_1      | time=\"2018-02-10T20:28:04Z\" level=debug msg=\"Decision Updated: {Schedule: -23, Started: -23, ID: emptyUuid, Timeout: 0, Attempt: 0, Timestamp: 0}\" Service=cadence-history execution-id=7f2ca02f-b2a7-4dbc-b5c9-6b05c6143282 run-id=f0d47549-2df0-43f9-8666-681702eea4ad shard-id=2 wf-component=history-cache\r\ncadence_1      | 2018/02/10 20:28:04 Unary handler panicked: runtime error: invalid memory address or nil pointer dereference\r\ncadence_1      | goroutine 21785 [running]:\r\ncadence_1      | runtime/debug.Stack(0xc421126b78, 0xd3e000, 0x1315750)\r\ncadence_1      | \t/usr/local/go/src/runtime/debug/stack.go:24 +0x79\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/api/transport.DispatchUnaryHandler.func1(0xc421127b70)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/go.uber.org/yarpc/api/transport/handler.go:110 +0x6e\r\ncadence_1      | panic(0xd3e000, 0x1315750)\r\ncadence_1      | \t/usr/local/go/src/runtime/panic.go:489 +0x2cf\r\ncadence_1      | github.com/uber/cadence/service/history.(*historyEngineImpl).RespondDecisionTaskCompleted(0xc420576fc0, 0x12ed0c0, 0xc421347680, 0xc420a11440, 0x0, 0x0)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/service/history/historyEngine.go:1080 +0x393f\r\ncadence_1      | github.com/uber/cadence/service/history.(*Handler).RespondDecisionTaskCompleted(0xc4204062d0, 0x12ed0c0, 0xc421347680, 0xc420a11440, 0x0, 0x0)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/service/history/handler.go:400 +0x526\r\ncadence_1      | github.com/uber/cadence/.gen/go/history/historyserviceserver.handler.RespondDecisionTaskCompleted(0x12f3460, 0xc4204062d0, 0x12ed0c0, 0xc421347680, 0xc, 0x0, 0x0, 0x0, 0x0, 0xc420953e60, ...)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/.gen/go/history/historyserviceserver/server.go:545 +0xac\r\ncadence_1      | github.com/uber/cadence/.gen/go/history/historyserviceserver.(handler).RespondDecisionTaskCompleted-fm(0x12ed0c0, 0xc421347680, 0xc, 0x0, 0x0, 0x0, 0x0, 0xc420953e60, 0x1, 0x1, ...)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/.gen/go/history/historyserviceserver/server.go:260 +0x85\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/encoding/thrift.thriftUnaryHandler.Handle(0xc4207a9600, 0x12edc00, 0x13433d0, 0xc4203c1100, 0x12ed0c0, 0xc421347680, 0xc4212d8ab0, 0x12ebd00, 0xc4213529c0, 0x0, ...)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/go.uber.org/yarpc/encoding/thrift/inbound.go:84 +0x357\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/encoding/thrift.(*thriftUnaryHandler).Handle(0xc4207a9860, 0x12ed0c0, 0xc421343140, 0xc4212d8ab0, 0x12ebd00, 0xc4213529c0, 0xc42053af00, 0xea6158)\r\ncadence_1      | \t<autogenerated>:8 +0xa6\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/internal/observability.(*Middleware).Handle(0xc4202da6c0, 0x12ed0c0, 0xc421343140, 0xc4212d8ab0, 0x12ebf40, 0xc4213802d0, 0x12e4d80, 0xc4207a9860, 0xed2114cf2, 0x332f75d)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/go.uber.org/yarpc/internal/observability/middleware.go:74 +0x117\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/api/middleware.unaryHandlerWithMiddleware.Handle(0x12e4d80, 0xc4207a9860, 0x12e2b00, 0xc4202da6c0, 0x12ed0c0, 0xc421343140, 0xc4212d8ab0, 0x12ebf40, 0xc4213802d0, 0xc420961a88, ...)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/go.uber.org/yarpc/api/middleware/inbound.go:71 +0x8a\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/api/middleware.(*unaryHandlerWithMiddleware).Handle(0xc4207a9a80, 0x12ed0c0, 0xc421343140, 0xc4212d8ab0, 0x12ebf40, 0xc4213802d0, 0x1326240, 0xc4207a9a01)\r\ncadence_1      | \t<autogenerated>:2 +0xa7\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/api/transport.DispatchUnaryHandler(0x12ed0c0, 0xc421343140, 0x12e4bc0, 0xc4207a9a80, 0xed2114cd4, 0x342ce5e, 0x1326240, 0xc4212d8ab0, 0x12ebf40, 0xc4213802d0, ...)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/go.uber.org/yarpc/api/transport/handler.go:115 +0xdb\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/transport/tchannel.handler.callHandler(0xc4208f7b30, 0x7efd0e860b48, 0xc42054c630, 0x12ec440, 0x1343020, 0x12ed0c0, 0xc421343140, 0x12f1be0, 0xc42107c3c0, 0xc4213802d0, ...)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/go.uber.org/yarpc/transport/tchannel/handler.go:182 +0x7fe\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/transport/tchannel.handler.handle(0xc4208f7b30, 0x7efd0e860b48, 0xc42054c630, 0x12ec440, 0x1343020, 0x7efd0e860d98, 0xc4208e7f40, 0x12f1be0, 0xc42107c3c0)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/go.uber.org/yarpc/transport/tchannel/handler.go:97 +0x169\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/transport/tchannel.handler.Handle(0xc4208f7b30, 0x7efd0e860b48, 0xc42054c630, 0x12ec440, 0x1343020, 0x7efd0e860d58, 0xc4208e7f40, 0xc42107c3c0)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/go.uber.org/yarpc/transport/tchannel/handler.go:90 +0xa3\r\ncadence_1      | github.com/uber/cadence/vendor/go.uber.org/yarpc/transport/tchannel.(*handler).Handle(0xc4208f7b60, 0x7efd0e860d58, 0xc4208e7f40, 0xc42107c3c0)\r\ncadence_1      | \t<autogenerated>:34 +0x87\r\ncadence_1      | github.com/uber/cadence/vendor/github.com/uber/tchannel-go.channelHandler.Handle(0xc420566180, 0x7efd0e860d58, 0xc4208e7f40, 0xc42107c3c0)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/github.com/uber/tchannel-go/handlers.go:126 +0x96\r\ncadence_1      | github.com/uber/cadence/vendor/github.com/uber/tchannel-go.(*Connection).dispatchInbound(0xc420378fc0, 0x8c00000006, 0xc42107c3c0, 0xc420b02240)\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/github.com/uber/tchannel-go/inbound.go:200 +0x3c5\r\ncadence_1      | created by github.com/uber/cadence/vendor/github.com/uber/tchannel-go.(*Connection).handleCallReq\r\ncadence_1      | \t/go/src/github.com/uber/cadence/vendor/github.com/uber/tchannel-go/inbound.go:131 +0x1370\r\n```\r\n\r\nThe decision task reply that caused the panic:\r\n\r\n```\r\n    StartChildWorkflowExecutionDecisionAttributes {\r\n        TaskList = UnitTest;\r\n        WorkflowType = ITestChild::execute;\r\n        WorkflowId = 88be4541-e983-46ef-b9f8-ba08549a6864:1;\r\n        ExecutionStartToCloseTimeoutSeconds = 2;\r\n        TaskStartToCloseTimeoutSeconds = 1;\r\n        Input = [\"[Ljava.lang.Object;\",[\"Hello \"]]\r\n    },\r\n    FailWorkflowExecutionDecisionAttributes {\r\n        Details = java.lang.NullPointerException\r\n\tat com.uber.cadence.internal.dispatcher.SyncDecisionContext.executeChildWorkflow(SyncDecisionContext.java:128)\r\n\tat com.uber.cadence.internal.dispatcher.ChildWorkflowInvocationHandler.executeChildWorkflow(ChildWorkflowInvocationHandler.java:94)\r\n\tat com.uber.cadence.internal.dispatcher.ChildWorkflowInvocationHandler.invoke(ChildWorkflowInvocationHandler.java:67)\r\n\tat com.uber.cadence.workflow.$Proxy12.execute(Unknown Source)\r\n\tat com.uber.cadence.workflow.WorkfowTest$TestParentWorkflow.execute(WorkfowTest.java:520)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.uber.cadence.internal.worker.POJOWorkflowImplementationFactory$POJOWorkflowImplementation.execute(POJOWorkflowImplementationFactory.java:156)\r\n\tat com.uber.cadence.internal.dispatcher.WorkflowProc.apply(WorkflowProc.java:44)\r\n\tat com.uber.cadence.internal.dispatcher.WorkflowThreadInternal$RunnableWrapper.run(WorkflowThreadInternal.java:61)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n;\r\n        Reason = unknown\r\n    }\r\n}\r\n\r\n``` The same happens if there is no FailWorkflowExecutionDecisionAttributes:\r\n\r\n```\r\n419  decisions                      : Failed taskId=3 decisions={\r\n    StartChildWorkflowExecutionDecisionAttributes {\r\n        WorkflowType = ITestChild::execute;\r\n        ExecutionStartToCloseTimeoutSeconds = 2;\r\n        TaskStartToCloseTimeoutSeconds = 1;\r\n        WorkflowId = dc86b1ab-525c-4259-96e5-f814ac0d6fd7:1;\r\n        TaskList = UnitTest;\r\n        Input = [\"[Ljava.lang.Object;\",[\"Hello \"]]\r\n    },\r\n    StartChildWorkflowExecutionDecisionAttributes {\r\n        WorkflowType = ITestChild::execute;\r\n        ExecutionStartToCloseTimeoutSeconds = 2;\r\n        TaskStartToCloseTimeoutSeconds = 1;\r\n        WorkflowId = child2;\r\n        TaskList = UnitTest;\r\n        Input = [\"[Ljava.lang.Object;\",[\"World!\"]]\r\n    }\r\n}\r\n```\r\n Found the bug. Condition at this line should be != instead of ==:\r\n\r\nhttps://github.com/uber/cadence/blob/master/service/history/historyEngine.go#L1078 I'm preparing a fix. It looks not as straightforward as I initially thought. I couldn't find the domain in the mutable state, only domainUUID. So we either need to change all code to allow nil domain for child events, or populate domain on front-end. Nil childPolicy also crashes the server. Fixing condition is not enough as code invoked by this method blows up as doing *Domain on nil value. I don't think childPolicy should be required for child workflows. It should be just inherited. I would also inherit all other parameters. Just make execution timeout up to time when parent times out.  \n[![Coverage Status](https://coveralls.io/builds/15456175/badge)](https://coveralls.io/builds/15456175)\n\nCoverage decreased (-0.02%) to 68.389% when pulling **c659d5b5a1292e68a2ab46e9c921163767137536 on samarabbas:docker-release** into **f059d317dbda7c4b5a899968651639260430771e on uber:master**.\n  cadence server has the information, we need to send down the parent info down in the PollForDecisionTaskTaskResponse. Then, on client side SDK, we need to expose that info.\r\n\r\nCurrently, parent has to pass its WorkflowID/RunID as argument to child workflow for child to be able to send back signal. This is now returned by the server in the WorkflowExecutionStarted event: https://github.com/uber/cadence/blob/master/idl/github.com/uber/cadence/shared.thrift#L377 Parent workflow info seems available in the Go client since https://github.com/uber-go/cadence-client/issues/635.\r\n\r\nThe [Java client]((https://github.com/uber/cadence-java-client/blob/5b28096165ee4bb075bb1a9ac10064916b7b070a/src/main/java/com/uber/cadence/internal/replay/WorkflowContext.java#L87-L92)) seems to be the one lagging behind.  \n[![Coverage Status](https://coveralls.io/builds/15296374/badge)](https://coveralls.io/builds/15296374)\n\nCoverage increased (+0.03%) to 67.776% when pulling **33130a1803dad1c3c937372fa0ca32a3c007adc4 on fix-sig-self** into **4d9fcf764c447d2fa4d88d61cf245e7bb82eec49 on master**.\n  The use case is to reject Signal if it cannot be processed by the workflow code for whatever reason. For example if Signal is created from a Cherami message handler nacking it would put it into Cherami DLQ. \r\nWe could introduce new concept which is similar to Query but mutates the workflow state and can return result instead of Signal to cover this use case. If we implement this feature, then we can rely on DLQ support from other technologies like Kafka or Cherami.  The idea would be to send signal in response to Kafka/Cherami message and then synchronously (could be long poll) to wait for successful processing of signal.  If the signal fails multiple times then we nack the original message and let it end up in the DLQ exposed by the messaging system.\r\nHere are few other things discussed:\r\n1) Let the current signal semantics function as is and create new event/api for request/reply signals\r\n2) We need to think through reply could be long running and we need API to long for response for signal\r\n3) Do not write signal into history until successfully processed.\r\n4) We might need to dedupe signals and need a signal cache for deduping for this feature Personally, I'd like to be able to use this to e.g. tell a workflow to refresh its config, or retry the current operation, or that kind of thing.  We could use it to support a web UI that could submit a request *and tell you if it worked*.  Currently we'd need to build this kind of thing via a signal + polling (probably a query handler) until it's complete.\r\n\r\nNot that signal + poll is impossible nor even that bad of an idea, but for known-fast operations it would be nice to have a simpler option. I've been prototyping this. The implementation I'm working on is external to cadence but could be merged in. The api looks like this:\r\nCallee workflow exposes functionality like so:\r\n```\r\nerr := workflow.SetCallHandler(ctx, \"MutateStateA\", func(dataStruct ProjectState) (ReplyData, error) {\r\n    // do something\r\n    return data, nil\r\n})\r\n// err is thrown just like SetQueryHandler (invalid handler name, bad signature for func)\r\n```\r\n\r\nIn caller workflow (caller could be non-workflow callers with server support):\r\n```\r\n// timeout for call can be customized by setting opts on ctx just like StartActivityOptions\r\nfut := workflow.CallExternalWorkflow(ctx, \"destWF\", \"\", \"MutateStateA\", ProjectState{})\r\nvar reply ReplyData\r\nerr := fut.Get(ctx, &reply) // blocks until Call timeout or call finishes\r\n// err is either cadence error or the error returned from call handler\r\n```\r\n\r\nUnder the hood in my prototype this is done like so:\r\n- Caller registers a signal handler for replies\r\n- Caller sends info about itself along with the serialized call to callee. Assigns temp ID to a Future and returns the Future. If timeout is set, schedule delayed timeout completion.\r\n- Callee WF runs the call handler and returns data by signaling back caller\r\n- Caller receives signal, looks up the correct future, completes that future with the data from the signal if it has not timed out. Agreed, I'm going to keep this to workflow to workflow for now. Doing calls to workflows from outside the workflow will require server support as far as I can tell. I'll decouple that from this issue since this prototype is insufficient for the original usecase.  \n[![Coverage Status](https://coveralls.io/builds/15279066/badge)](https://coveralls.io/builds/15279066)\n\nCoverage decreased (-0.02%) to 67.728% when pulling **6908b378a53c8410868440efc97dc308da70c80c on version** into **99f48991a1bc167dce9ad5dd72afa80d09c0d603 on master**.\n  Since #516 we are unable to start cadence running as a binary. The error output is: \r\n```\r\nIncompatible versions%!(EXTRA *errors.errorString=unable to read expected schema version: open github.com/uber/cadence/schema/cadence/versioned: The system cannot find the file specified.)\r\n```\r\nIt seems like the change in #516 hardcoded the project path to \"github.com/uber/cadence/schema\". What was the intention of this change? Cadence should be able to run in any directory as a binary. \r\n\r\nThe offending line is here: https://github.com/uber/cadence/blob/master/tools/cassandra/version.go#L134  I think we already have a message \"EntityNotExistsError{Message: workflow execution already completed}\" . I reproed by running a workflow and sleeping an activity for 30s. Here is the result.\r\n\r\n<img width=\"1671\" alt=\"Screen Shot 2019-11-07 at 3 47 04 PM\" src=\"https://user-images.githubusercontent.com/14882675/68437520-19de7700-0176-11ea-8669-156263c633c6.png\">\r\n@longquanzheng @andrewjdawson2016 Pls verify this and we can close the Issue.  \n[![Coverage Status](https://coveralls.io/builds/15319552/badge)](https://coveralls.io/builds/15319552)\n\nCoverage increased (+0.08%) to 68.473% when pulling **118dfd67560387b18e6c5cab0656f7f9499efdf7 on cross-dc-2-ring** into **1a9baeb5dddf0028aad0dfc10967b8c6165a694e on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15227420/badge)](https://coveralls.io/builds/15227420)\n\nCoverage increased (+0.2%) to 67.539% when pulling **6e33c244e19be98a684e35b22770f08705707b14 on samarabbas:activity-heartbeat-timeout-fixes** into **6fe6949ba8fd6e0d4c262e392c38bf70122c2a79 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15318675/badge)](https://coveralls.io/builds/15318675)\n\nCoverage increased (+0.7%) to 68.426% when pulling **5215d47989a607d7a184b73455296f0b544876ce on cross-dc-API** into **051f9de994f8cade79387b47ff7379270f2f6fd8 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15226748/badge)](https://coveralls.io/builds/15226748)\n\nCoverage increased (+0.3%) to 67.646% when pulling **22fd3da2b71639475cddb4e98d397ad7bdc75e32 on actIDTest** into **6fe6949ba8fd6e0d4c262e392c38bf70122c2a79 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15170615/badge)](https://coveralls.io/builds/15170615)\n\nCoverage increased (+0.06%) to 67.297% when pulling **7fc1646f9b4f0bc50d1e55eacaf3b271e3a44318 on throttle** into **6ce4fdc15ad20ed8a92c808268d05a28fc0f94b4 on master**.\n  A burst size bug triggered excess logging. Fixed by #529 #526 and #523   \n[![Coverage Status](https://coveralls.io/builds/15167127/badge)](https://coveralls.io/builds/15167127)\n\nCoverage increased (+0.04%) to 66.692% when pulling **ef66e75cf5edd37ad459e52f24a8c8f05853b7f9 on compAct** into **7c79aaf8011fc8af56fa5a60167cba2580c468f5 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15138447/badge)](https://coveralls.io/builds/15138447)\n\nCoverage increased (+0.09%) to 66.743% when pulling **0e955afafec9630ec3251cfa3469b0f73c6341c0 on tlunload** into **7c79aaf8011fc8af56fa5a60167cba2580c468f5 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15136160/badge)](https://coveralls.io/builds/15136160)\n\nCoverage decreased (-0.05%) to 66.609% when pulling **cdf827d14aa13bfdccc0f1ac98f3cef8f1a25352 on hehe** into **7c79aaf8011fc8af56fa5a60167cba2580c468f5 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/15168646/badge)](https://coveralls.io/builds/15168646)\n\nCoverage decreased (-0.02%) to 67.292% when pulling **76e536066ac44176eb46a04b66f61bbef3c277d6 on hehe** into **bd9eb9f575d4597d01a37bc808efda8d4afdc033 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15119708/badge)](https://coveralls.io/builds/15119708)\n\nCoverage increased (+0.1%) to 66.779% when pulling **6dafe91fb725ec4872dbd272cd75703079d39788 on version** into **0b5a268e0351cb59347ecd756a9578088c122751 on master**.\n  @samarabbas @vancexu What is your timeline for looking at this issue?  If not in the next few days, I could try to take a look.  We just really need this change for our implementation to function.  \n[![Coverage Status](https://coveralls.io/builds/15190124/badge)](https://coveralls.io/builds/15190124)\n\nCoverage decreased (-0.07%) to 67.354% when pulling **445693c885760b83593b675ef2995505cb9f7e39 on stickyttl** into **b9c8eef91926a48a1f59f96f7b9ab6dc122b6800 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15100163/badge)](https://coveralls.io/builds/15100163)\n\nCoverage increased (+0.02%) to 66.639% when pulling **5ceef4e96513280185ad83ad003e70f2d5fc6a41 on version** into **2964f0b6dd3f8395cf83cfa7b7ec06cc926d8d96 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/15101103/badge)](https://coveralls.io/builds/15101103)\n\nCoverage increased (+0.01%) to 66.629% when pulling **1ded255d4f2c8f947c6d8b7f30f0da83e023490c on version** into **2964f0b6dd3f8395cf83cfa7b7ec06cc926d8d96 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/15101420/badge)](https://coveralls.io/builds/15101420)\n\nCoverage increased (+0.03%) to 66.65% when pulling **0eaf7ebb6d44d85ae5f97ad90f7e2a4a607f3fa6 on version** into **2964f0b6dd3f8395cf83cfa7b7ec06cc926d8d96 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15031385/badge)](https://coveralls.io/builds/15031385)\n\nChanges Unknown when pulling **1e0af2208de6bf0bff12e5fe0a1143c2bfde4d12 on fix-integ-test** into ** on master**.\n \n[![Coverage Status](https://coveralls.io/builds/15031528/badge)](https://coveralls.io/builds/15031528)\n\nChanges Unknown when pulling **1e0af2208de6bf0bff12e5fe0a1143c2bfde4d12 on fix-integ-test** into ** on master**.\n  This can not be reproduced with lastest changes. closed.  \n[![Coverage Status](https://coveralls.io/builds/15017389/badge)](https://coveralls.io/builds/15017389)\n\nCoverage decreased (-0.2%) to 66.463% when pulling **ddb2243d22763257afbece0a7bd6aece3e15fd94 on samarabbas:child-workflow-timeout-fix** into **113a644aceaf66d71a7887f1a7c278a92cbf4818 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/15030602/badge)](https://coveralls.io/builds/15030602)\n\nCoverage decreased (-0.1%) to 66.518% when pulling **9d0948b7a725968f21847c5aecaf540d87406beb on samarabbas:child-workflow-timeout-fix** into **113a644aceaf66d71a7887f1a7c278a92cbf4818 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14992498/badge)](https://coveralls.io/builds/14992498)\n\nCoverage decreased (-0.1%) to 66.606% when pulling **8ae311b8a85967415b4ee566adae9a5efbfbbdb3 on pprof** into **7ca011c30e76da4160f40c5419f3b972a46fb67c on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14977500/badge)](https://coveralls.io/builds/14977500)\n\nCoverage decreased (-0.1%) to 66.597% when pulling **ec885924c2cd266aa78215fdf9c46b29fca380bd on child-workflow** into **7ca011c30e76da4160f40c5419f3b972a46fb67c on master**.\n \n[![Coverage Status](https://coveralls.io/builds/15030544/badge)](https://coveralls.io/builds/15030544)\n\nCoverage decreased (-0.02%) to 66.61% when pulling **c6defbba96fdfc06ce875e43d0e91ede69e4a2ba on child-workflow** into **113a644aceaf66d71a7887f1a7c278a92cbf4818 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/15031177/badge)](https://coveralls.io/builds/15031177)\n\nChanges Unknown when pulling **c88b751605e72da281bd9323a67263035d622d38 on child-workflow** into ** on master**.\n \n[![Coverage Status](https://coveralls.io/builds/15031335/badge)](https://coveralls.io/builds/15031335)\n\nChanges Unknown when pulling **c88b751605e72da281bd9323a67263035d622d38 on child-workflow** into ** on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14976452/badge)](https://coveralls.io/builds/14976452)\n\nCoverage increased (+0.04%) to 66.643% when pulling **2a7bb8ab78911c7c77b8be8af41a2250a669bb01 on samarabbas:missing-tasklist-name-on-event** into **7a51af2390dbb52ad7bd741c87bd46d396089bc2 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14907247/badge)](https://coveralls.io/builds/14907247)\n\nCoverage decreased (-0.006%) to 66.469% when pulling **1473daf8f7b5d8ed877029aa845a01b5ceafd16f on met** into **aa29ebb3f229e453ba8b62530c990f5fe796bc88 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14921257/badge)](https://coveralls.io/builds/14921257)\n\nCoverage decreased (-0.06%) to 66.602% when pulling **42469c17d0a7f287c6b0eb3e124f0f76db1ae5f8 on met** into **58a3ad267d5a0bd0d708bd388a295cdaebe94e72 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14921359/badge)](https://coveralls.io/builds/14921359)\n\nCoverage increased (+0.06%) to 66.713% when pulling **42469c17d0a7f287c6b0eb3e124f0f76db1ae5f8 on met** into **58a3ad267d5a0bd0d708bd388a295cdaebe94e72 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14886666/badge)](https://coveralls.io/builds/14886666)\n\nCoverage decreased (-0.2%) to 66.291% when pulling **95618ceafdf927b60cab42c468219655154503df on bugfix** into **bb03ce5b8984f38ae12db8983750728119403ceb on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14887687/badge)](https://coveralls.io/builds/14887687)\n\nCoverage decreased (-0.04%) to 66.307% when pulling **48e4684deb02ccc7340897079a046d8d6f028bea on bugfix** into **6ff9cbd99e19de21096b856f223b2958676db9d6 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14876067/badge)](https://coveralls.io/builds/14876067)\n\nCoverage decreased (-0.005%) to 66.449% when pulling **2bdf00a7bf84bc304d6f6caec1154be3f33c388a on wait-until-finish** into **bb03ce5b8984f38ae12db8983750728119403ceb on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14877822/badge)](https://coveralls.io/builds/14877822)\n\nCoverage decreased (-0.005%) to 66.449% when pulling **10c3ad25abdc770562ae9886b95516c668c71592 on wait-until-finish** into **bb03ce5b8984f38ae12db8983750728119403ceb on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14887501/badge)](https://coveralls.io/builds/14887501)\n\nCoverage decreased (-0.06%) to 66.393% when pulling **5b896dd33211b277bef9b56862a5f7e9e3fcce87 on wait-until-finish** into **bb03ce5b8984f38ae12db8983750728119403ceb on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14888679/badge)](https://coveralls.io/builds/14888679)\n\nCoverage increased (+0.07%) to 66.425% when pulling **231c758085c24c9b00d6b6936fe9deaa91100999 on wait-until-finish** into **6fd468a034fee2e57ca8e2dc8d25e5bb43e6cf43 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14874700/badge)](https://coveralls.io/builds/14874700)\n\nCoverage increased (+0.006%) to 66.801% when pulling **128ec19642fff8ad4ea5ec2975adb6041f21675e on avail** into **8a89e911b460371aa7df85ee5356daef5187a0db on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14874759/badge)](https://coveralls.io/builds/14874759)\n\nCoverage increased (+0.03%) to 66.829% when pulling **128ec19642fff8ad4ea5ec2975adb6041f21675e on avail** into **8a89e911b460371aa7df85ee5356daef5187a0db on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14874969/badge)](https://coveralls.io/builds/14874969)\n\nCoverage decreased (-0.2%) to 66.304% when pulling **b1f6eac99f53537c64cfafdac1d841590c174be5 on avail** into **bb03ce5b8984f38ae12db8983750728119403ceb on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14876358/badge)](https://coveralls.io/builds/14876358)\n\nCoverage decreased (-0.1%) to 66.352% when pulling **ce6f7879be2283e43ca0cd73b5bbc56bf11f0836 on timeoutconasnew** into **bb03ce5b8984f38ae12db8983750728119403ceb on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14887707/badge)](https://coveralls.io/builds/14887707)\n\nCoverage decreased (-0.02%) to 66.324% when pulling **e9436980a863218e6efaba81ce324ff36dcac793 on timeoutconasnew** into **6ff9cbd99e19de21096b856f223b2958676db9d6 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14887709/badge)](https://coveralls.io/builds/14887709)\n\nCoverage increased (+0.03%) to 66.38% when pulling **e9436980a863218e6efaba81ce324ff36dcac793 on timeoutconasnew** into **6ff9cbd99e19de21096b856f223b2958676db9d6 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14887738/badge)](https://coveralls.io/builds/14887738)\n\nCoverage decreased (-0.02%) to 66.324% when pulling **e9436980a863218e6efaba81ce324ff36dcac793 on timeoutconasnew** into **6ff9cbd99e19de21096b856f223b2958676db9d6 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14887907/badge)](https://coveralls.io/builds/14887907)\n\nCoverage decreased (-0.007%) to 66.341% when pulling **e9436980a863218e6efaba81ce324ff36dcac793 on timeoutconasnew** into **6ff9cbd99e19de21096b856f223b2958676db9d6 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14890399/badge)](https://coveralls.io/builds/14890399)\n\nCoverage increased (+0.03%) to 66.436% when pulling **dbdf679b7792fb5beb8f31bb57b59484e8405c51 on timeoutconasnew** into **5e9c49d24e6e68ff6c75f54c99bbbd52ec54dbed on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14867187/badge)](https://coveralls.io/builds/14867187)\n\nCoverage decreased (-0.5%) to 66.331% when pulling **f95b34a53084c1f671528a8e0cea129b5f5d5620 on metric** into **36c6f54ed83bc414dfca96a0092ccaff763abdb7 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14874361/badge)](https://coveralls.io/builds/14874361)\n\nCoverage decreased (-0.5%) to 66.304% when pulling **beba8a5299c7d7061a28436de9891164db5d7efa on metric** into **8a89e911b460371aa7df85ee5356daef5187a0db on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14874478/badge)](https://coveralls.io/builds/14874478)\n\nCoverage decreased (-0.5%) to 66.287% when pulling **beba8a5299c7d7061a28436de9891164db5d7efa on metric** into **8a89e911b460371aa7df85ee5356daef5187a0db on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14809746/badge)](https://coveralls.io/builds/14809746)\n\nCoverage increased (+0.5%) to 67.357% when pulling **50c311fefd50a5aa88b96dc8fd3c60b1b97707cd on bugfix** into **36c6f54ed83bc414dfca96a0092ccaff763abdb7 on master**.\n Where is the 2 times initialization in old implementation?  \n[![Coverage Status](https://coveralls.io/builds/14872534/badge)](https://coveralls.io/builds/14872534)\n\nCoverage decreased (-0.04%) to 66.795% when pulling **b41eff2eeeca590eba88c5cb7ef67de7977ac034 on bugfix** into **36c6f54ed83bc414dfca96a0092ccaff763abdb7 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14873015/badge)](https://coveralls.io/builds/14873015)\n\nCoverage decreased (-0.04%) to 66.795% when pulling **d744f7ff96f08471a31d8088bc7728ffb35b46df on bugfix** into **36c6f54ed83bc414dfca96a0092ccaff763abdb7 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14873257/badge)](https://coveralls.io/builds/14873257)\n\nCoverage decreased (-0.03%) to 66.812% when pulling **6c208565fdfda9b4de95652884b4bd4f08dc16c7 on bugfix** into **36c6f54ed83bc414dfca96a0092ccaff763abdb7 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/15030948/badge)](https://coveralls.io/builds/15030948)\n\nCoverage decreased (-0.06%) to 66.618% when pulling **773e66457df2a5562c3c6f601a31f22a5f519ec2 on poller** into **65e165c206979f723952fcabb2a6986909bc125d on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14783601/badge)](https://coveralls.io/builds/14783601)\n\nChanges Unknown when pulling **ae26fc625dde4a2edfd9c6c3553dbbf69b268e57 on cache** into ** on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14782101/badge)](https://coveralls.io/builds/14782101)\n\nChanges Unknown when pulling **0f577ab17a3badcc7e836b989a726bc6f5b4f817 on bugfix-sticky** into ** on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14781825/badge)](https://coveralls.io/builds/14781825)\n\nCoverage increased (+0.009%) to 66.822% when pulling **e2e60040bdcdfdafdab609def7d7ec82f07a4746 on bugfix** into **8eaced5a5fc0d4cb10e99c1d0580fc2ef24120b8 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14768842/badge)](https://coveralls.io/builds/14768842)\n\nCoverage decreased (-0.03%) to 66.586% when pulling **3ffbc41a1c14f01de2f45cf3e48d7e9ebb955c56 on bugfix-docker** into **26303d59c643c45ab0dcaefd2688cdc413d84398 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14767437/badge)](https://coveralls.io/builds/14767437)\n\nCoverage increased (+0.02%) to 66.638% when pulling **6739ea4d37e31de6fd36be6b72818edbd5dcbb6c on pprof** into **26303d59c643c45ab0dcaefd2688cdc413d84398 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14769754/badge)](https://coveralls.io/builds/14769754)\n\nCoverage decreased (-0.04%) to 66.577% when pulling **acb8583f2af42c1c4760d6a133cb7c481b9ed38f on pprof** into **26303d59c643c45ab0dcaefd2688cdc413d84398 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14770302/badge)](https://coveralls.io/builds/14770302)\n\nCoverage decreased (-0.07%) to 66.577% when pulling **1814aac28dbcc3cce2c6dc8aa003e572ea0f79d1 on pprof** into **3c1e5bbab0e580e04ae6e202e746dac127056dc5 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14668585/badge)](https://coveralls.io/builds/14668585)\n\nCoverage increased (+0.09%) to 66.282% when pulling **71df3cbfbb9027f63901860f4e7d6328d073ed6e on waiting-until-end** into **d4204d73fa1426e8095e858b4d80ad2b85d01f9c on dedup**.\n \n[![Coverage Status](https://coveralls.io/builds/14699528/badge)](https://coveralls.io/builds/14699528)\n\nCoverage increased (+0.1%) to 66.34% when pulling **d80a4d0c500ce4b764b5a69904e473a428db00fc on waiting-until-end** into **d16995cdcd1e927a933b264a7538cab62a7e40b4 on dedup**.\n \n[![Coverage Status](https://coveralls.io/builds/14781475/badge)](https://coveralls.io/builds/14781475)\n\nCoverage decreased (-0.02%) to 66.879% when pulling **55aa3ab6cb5ec4241002acb130b2122821cd7f8c on waiting-until-end** into **94819c19ce23c2250ab9a1bb2ed51a27162852e0 on dedup**.\n  https://github.com/uber/cadence/blob/bb26b98eef6d22bb767e4ffb6bbdaf4a8088ca84/docker/auto-build-docker-image.sh#L2 Should be a few line changes:\r\ninstead of checking new commits, checking new tags. Then build and push with the new tag an  Looks like we are not emitting any metric on persistence client for visibility api.  This is making it harder to debug visibility api issues in production.  \n[![Coverage Status](https://coveralls.io/builds/14642293/badge)](https://coveralls.io/builds/14642293)\n\nCoverage increased (+0.2%) to 66.47% when pulling **ec85132d951ea369c75f452023df4bb23de34111 on revert** into **963d13c6acc508120f4d904f1911cdc2fbb25a47 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14683654/badge)](https://coveralls.io/builds/14683654)\n\nCoverage increased (+0.4%) to 66.614% when pulling **cdf0a36fc40916d8e2a4727e766f3d05a9ccf840 on revert** into **bb26b98eef6d22bb767e4ffb6bbdaf4a8088ca84 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14630569/badge)](https://coveralls.io/builds/14630569)\n\nCoverage decreased (-0.09%) to 66.197% when pulling **3e55211db8969dc01065dd5759e1f3ca9dd3bb75 on dedup** into **963d13c6acc508120f4d904f1911cdc2fbb25a47 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14641377/badge)](https://coveralls.io/builds/14641377)\n\nCoverage decreased (-0.06%) to 66.221% when pulling **de909c0cca3d032056f2f36a2bce0063a7ccab90 on dedup** into **963d13c6acc508120f4d904f1911cdc2fbb25a47 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14643410/badge)](https://coveralls.io/builds/14643410)\n\nCoverage decreased (-0.1%) to 66.155% when pulling **798ba9d05859fa864d190e70ada793a4a1f5f597 on dedup** into **963d13c6acc508120f4d904f1911cdc2fbb25a47 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14770050/badge)](https://coveralls.io/builds/14770050)\n\nCoverage increased (+0.2%) to 66.839% when pulling **1e87da9a5e1ae90a80ec0b1355d5151ca674a8d2 on dedup** into **3c1e5bbab0e580e04ae6e202e746dac127056dc5 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14771123/badge)](https://coveralls.io/builds/14771123)\n\nCoverage increased (+0.2%) to 66.79% when pulling **94819c19ce23c2250ab9a1bb2ed51a27162852e0 on dedup** into **1fdb54388b6b93f6e1910f639adfebc3bd66a4f7 on master**.\n    \n[![Coverage Status](https://coveralls.io/builds/14623961/badge)](https://coveralls.io/builds/14623961)\n\nCoverage decreased (-0.3%) to 66.243% when pulling **efd4b394d12a40f846ce947802108738b3ce2a01 on revert** into **c844eb7e2e27e55f069e7c8ba1202266a1d9404b on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14558983/badge)](https://coveralls.io/builds/14558983)\n\nChanges Unknown when pulling **557862d337db5ed5a19b7069001be0b3fa7cc6ae on sticky-query** into ** on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14605349/badge)](https://coveralls.io/builds/14605349)\n\nChanges Unknown when pulling **0b000a366c57d7e529e576aa2d6e6b4a545a0784 on sticky-query** into ** on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14607381/badge)](https://coveralls.io/builds/14607381)\n\nCoverage increased (+0.06%) to 66.466% when pulling **f3017947f4ad419444cb3939e79ca1f054fedc84 on sticky-query** into **fffdc7e35498217c1f17e6e9b1250affe3fd6506 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14499858/badge)](https://coveralls.io/builds/14499858)\n\nCoverage decreased (-0.06%) to 66.193% when pulling **73d4a140203eebd7ef46fd3cc798133782cfd66b on fix-linter** into **881db8a3f054991c7bce1fb62e3ff1c4ea90fc20 on master**.\n  Refactor HistoryEngine APIs like ResponseActivityTaskComplete ... similar to SignalWorkflowExecution using updateWorkflowExecution  \n[![Coverage Status](https://coveralls.io/builds/14434176/badge)](https://coveralls.io/builds/14434176)\n\nChanges Unknown when pulling **bc4222649fbbb60c2859add21fa5bbb524659152 on version** into ** on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14444395/badge)](https://coveralls.io/builds/14444395)\n\nChanges Unknown when pulling **4e68bfac02285d6ac1b99a294417e5ccc0d5723f on version** into ** on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14449885/badge)](https://coveralls.io/builds/14449885)\n\nChanges Unknown when pulling **d40a8cc67ea006e46764c2080832ad4dbcead907 on version** into ** on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14463246/badge)](https://coveralls.io/builds/14463246)\n\nChanges Unknown when pulling **da48d076b1536c46fb8e60a37f31619ae72fc12e on version** into ** on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14466002/badge)](https://coveralls.io/builds/14466002)\n\nChanges Unknown when pulling **14ad017e829a76bc10fda34c2e66eff2e346503c on version** into ** on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14466446/badge)](https://coveralls.io/builds/14466446)\n\nCoverage decreased (-0.1%) to 65.859% when pulling **e4384e8bd7a798b9f95dc51669125bcc31ff46f8 on version** into **172983f96f048b29dc066a688edbdd8591aa5f24 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14466490/badge)](https://coveralls.io/builds/14466490)\n\nCoverage decreased (-0.09%) to 65.882% when pulling **e4384e8bd7a798b9f95dc51669125bcc31ff46f8 on version** into **172983f96f048b29dc066a688edbdd8591aa5f24 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14466704/badge)](https://coveralls.io/builds/14466704)\n\nCoverage decreased (-0.004%) to 65.969% when pulling **d3ad7cb5f0416f9c7b59ea193de2c12d20e469ca on version** into **172983f96f048b29dc066a688edbdd8591aa5f24 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14430495/badge)](https://coveralls.io/builds/14430495)\n\nCoverage remained the same at 66.292% when pulling **4449b0a8b3d05ad42ce236f2966ba9dab5b97c8a on up** into **b97f07cdc082678fd84bd8223bfd125b0671ca06 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/14412426/badge)](https://coveralls.io/builds/14412426)\n\nCoverage increased (+0.03%) to 66.267% when pulling **1e2bd2b5dc378233f7971d32063212ca83739067 on upgrade** into **cadabad906c89c1ac56ec3fbfdcaf1af644820cc on master**.\n  Currently client can connect to non compatible service version and get undefined behavior. See  https://github.com/uber-go/cadence-client/issues/290 for an example. \r\n\r\nService has to reject client connections from non compatible clients.  \n[![Coverage Status](https://coveralls.io/builds/14390947/badge)](https://coveralls.io/builds/14390947)\n\nCoverage increased (+0.08%) to 66.321% when pulling **24e626c31190ac55b73559d1263fee9abb72bf16 on tasklist** into **cadabad906c89c1ac56ec3fbfdcaf1af644820cc on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14392137/badge)](https://coveralls.io/builds/14392137)\n\nCoverage increased (+0.1%) to 66.351% when pulling **e7a1fbdf24198996114f6a8e5f3abc5bc7c78757 on tasklist** into **cadabad906c89c1ac56ec3fbfdcaf1af644820cc on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14409514/badge)](https://coveralls.io/builds/14409514)\n\nCoverage increased (+0.1%) to 66.363% when pulling **85fac838af56e73766a6f8adc6db44a984d55e1e on tasklist** into **cadabad906c89c1ac56ec3fbfdcaf1af644820cc on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14412180/badge)](https://coveralls.io/builds/14412180)\n\nCoverage increased (+0.2%) to 66.406% when pulling **c93e34cd025b5e3cad2df5d0c438e7e6accabad0 on tasklist** into **cadabad906c89c1ac56ec3fbfdcaf1af644820cc on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14755614/badge)](https://coveralls.io/builds/14755614)\n\nCoverage increased (+0.3%) to 66.871% when pulling **2dff6f6694070e8f9d2b65a971838c8d9d616670 on tasklist** into **26303d59c643c45ab0dcaefd2688cdc413d84398 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14755702/badge)](https://coveralls.io/builds/14755702)\n\nCoverage increased (+0.3%) to 66.876% when pulling **2dff6f6694070e8f9d2b65a971838c8d9d616670 on tasklist** into **26303d59c643c45ab0dcaefd2688cdc413d84398 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14783160/badge)](https://coveralls.io/builds/14783160)\n\nCoverage increased (+0.4%) to 67.059% when pulling **623475c580083c268f2605def55514ad8f57c210 on tasklist** into **26303d59c643c45ab0dcaefd2688cdc413d84398 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14784104/badge)](https://coveralls.io/builds/14784104)\n\nCoverage increased (+0.4%) to 67.001% when pulling **744025f7255be41bb670a3ef72927137d09d8f83 on tasklist** into **26303d59c643c45ab0dcaefd2688cdc413d84398 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14821592/badge)](https://coveralls.io/builds/14821592)\n\nCoverage increased (+0.2%) to 66.999% when pulling **46f4c3ee65c2e3974df1081f8333fdcaa30b0346 on tasklist** into **36c6f54ed83bc414dfca96a0092ccaff763abdb7 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14875504/badge)](https://coveralls.io/builds/14875504)\n\nCoverage increased (+0.03%) to 66.484% when pulling **006f60cff7b7365d83623e97f0e864022d1aa6e2 on tasklist** into **bb03ce5b8984f38ae12db8983750728119403ceb on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14875517/badge)](https://coveralls.io/builds/14875517)\n\nCoverage increased (+0.03%) to 66.484% when pulling **006f60cff7b7365d83623e97f0e864022d1aa6e2 on tasklist** into **bb03ce5b8984f38ae12db8983750728119403ceb on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14910056/badge)](https://coveralls.io/builds/14910056)\n\nCoverage increased (+0.1%) to 66.619% when pulling **e4debb33843e2e9dfe348d20f37745274114b5ff on tasklist** into **aa29ebb3f229e453ba8b62530c990f5fe796bc88 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14920917/badge)](https://coveralls.io/builds/14920917)\n\nCoverage increased (+0.1%) to 66.608% when pulling **310dbdcc1f47ab653dec893d47c5e88d1f917cfa on tasklist** into **aa29ebb3f229e453ba8b62530c990f5fe796bc88 on master**.\n  Currently ContinueAsNew requires all its parameters. In most cases the new workflow run keeps all the same values as the continued one. Let's change all of the parameters to optional.   \n[![Coverage Status](https://coveralls.io/builds/14226159/badge)](https://coveralls.io/builds/14226159)\n\nCoverage increased (+0.07%) to 66.193% when pulling **b6ed061ff3f09e0e8f56895b9de67fabd880df91 on rps** into **b44676669d49b3970df7e819cf50cedc34fbaefb on master**.\n \n[![Coverage Status](https://coveralls.io/builds/14279679/badge)](https://coveralls.io/builds/14279679)\n\nCoverage remained the same at 65.993% when pulling **6690ab738cb1090a6899a53151827e2aa3eaad28 on rps** into **bc4cd93328b4608330080409a06a6332cd1879d2 on master**.\n  Similar to SWF, it would be great if there was a dashboard to view workflow/activity status and the event history.  \r\n\r\nSomething simple like was used here would be a good starting point: https://www.youtube.com/watch?v=-LRghQzfF8k  We are currently working on open sourcing the Cadence UI. I'm going to keep this issue open until it is released. @samarabbas Thanks.  This is working well for us!  Sorry I forgot to report back.  Add filter to GetWorkflowExecutionHistory API.\r\nWe need to provide functionality to allow customer filter on specific event type and certain event content  \n[![Coverage Status](https://coveralls.io/builds/14018183/badge)](https://coveralls.io/builds/14018183)\n\nCoverage decreased (-0.1%) to 66.254% when pulling **ef8322241eb525a17c17b7882021c267e9029297 on ttl** into **b3d8ab3015082a0c7c1da704f3b80d6d05c28b4b on master**.\n  Today, when someone accidentally updates the schema to a version that's incompatible with the server code, the behavior is undefined. Since the schema is already versioned, a somewhat better approach here would be for the server to watch the schema version in the background and abort itself when there is a mismatch.   Fixed by https://github.com/uber/cadence/pull/438  \n[![Coverage Status](https://coveralls.io/builds/13850001/badge)](https://coveralls.io/builds/13850001)\n\nCoverage decreased (-0.07%) to 66.328% when pulling **5d1cf03f1936099a144286c23ca3ab640998e889 on fixtest** into **cbc769ded8936b757a9dcc9abdfbb678ec747b4f on master**.\n  Currently there is no way to restart failed workflow from the point of failure or completed workflow from some point in the middle if some bug was fixed.\r\n\r\nThe proposal is to create a new execution with the same workflowID which contains copy of partial history of the workflow run being restarted. For this to work correctly the copy of history should be analyzed and either all open activities failed or may be requeued if not started yet.\r\n\r\nThe other hard problem is to figure out up to which point a history should be copied. Having that multiple activities can be failing and rescheduled from multiple coroutines there is no clear way to determine what part of history should not be copied. Hey @mfateev .. Is this new feature in some future plans ?  It is being worked on and should be available within a quarter. Great.. Thanks ! Related to #620 @longquanzheng reset is now released, can this issue be closed?  @vancexu is this still valid? Can we close it?  \n[![Coverage Status](https://coveralls.io/builds/13739519/badge)](https://coveralls.io/builds/13739519)\n\nCoverage decreased (-0.002%) to 66.436% when pulling **a8abbf1610479f370a46ad980228ef0d422115e3 on dtleak** into **73ffdeb425831e927fbf8ca994d92dff8ffa23f9 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/13763863/badge)](https://coveralls.io/builds/13763863)\n\nCoverage increased (+0.01%) to 66.371% when pulling **adb45fd398a310b8c98100539e24942401bd82f4 on dtleak** into **b388ca718334326fd68121c598d6a30516f3fcf1 on master**.\n  [![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/uber/cadence?pullRequest=366) <br/>All committers have signed the CLA. \n[![Coverage Status](https://coveralls.io/builds/13570939/badge)](https://coveralls.io/builds/13570939)\n\nCoverage increased (+0.2%) to 66.575% when pulling **1a47f207cdc08d4f331b4bb66e8dd24ab61576ac on clean** into **81e51c6b3f9f9dccbe07564667c4ed2ca84b85d0 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/13572259/badge)](https://coveralls.io/builds/13572259)\n\nCoverage increased (+0.2%) to 66.575% when pulling **1cd7895655ba34b29390bd0b602808ba72eddcf7 on clean** into **3455967ae1f0f3b8baea11b1119e2c85f8b37357 on master**.\n \n[![Coverage Status](https://coveralls.io/builds/13572330/badge)](https://coveralls.io/builds/13572330)\n\nCoverage increased (+0.03%) to 66.419% when pulling **1cd7895655ba34b29390bd0b602808ba72eddcf7 on clean** into **3455967ae1f0f3b8baea11b1119e2c85f8b37357 on master**.\n  \n[![Coverage Status](https://coveralls.io/builds/13504696/badge)](https://coveralls.io/builds/13504696)\n\nCoverage increased (+0.03%) to 66.494% when pulling **7c866e4a19e4746b7baa3eb2f7539da906b6b933 on samarabbas:frontend-logs-cleanup** into **9169f8ffe30ed81e181337461f2ac1d4171fced0 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/13488324/badge)](https://coveralls.io/builds/13488324)\n\nCoverage decreased (-0.02%) to 66.44% when pulling **233f736938011ac912b691fd11d7812a7082fae7 on samarabbas:persistence_connections** into **9169f8ffe30ed81e181337461f2ac1d4171fced0 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/13501356/badge)](https://coveralls.io/builds/13501356)\n\nCoverage increased (+0.02%) to 66.49% when pulling **4913b8c953846cdffece8720add8903b7acea57a on samarabbas:persistence_connections** into **9169f8ffe30ed81e181337461f2ac1d4171fced0 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/13505613/badge)](https://coveralls.io/builds/13505613)\n\nCoverage decreased (-0.02%) to 66.469% when pulling **6024cf709c9f50b7f6255990cf9f94813d803ff7 on samarabbas:persistence_connections** into **affdf19891e1a2812b7f45395d4ae0520e77f1aa on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/13444407/badge)](https://coveralls.io/builds/13444407)\n\nCoverage increased (+0.02%) to 66.428% when pulling **4645f0f818cffebcfd0d5a8191fc5e20e577c3e7 on samarabbas:minor_fix** into **95e865b4651a9727ecbfbe90a07d910b627023a4 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/13427985/badge)](https://coveralls.io/builds/13427985)\n\nCoverage increased (+0.01%) to 66.515% when pulling **a2bccba578dc88fd14b1c4f05512a84fb6c22063 on samarabbas:timeout-adjustments** into **27d483c260dbdbeeaea1eea0c8e65ee9a6cf0ae5 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/13425241/badge)](https://coveralls.io/builds/13425241)\n\nCoverage decreased (-0.1%) to 66.378% when pulling **159f8e698bc6183bbb7e43657b231de42b74ef00 on samarabbas:code-cleanup-tasks** into **27d483c260dbdbeeaea1eea0c8e65ee9a6cf0ae5 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/13440703/badge)](https://coveralls.io/builds/13440703)\n\nCoverage decreased (-0.08%) to 66.37% when pulling **11693bd4b4a8ef90f2d622c4282f64b7d984ebf8 on samarabbas:code-cleanup-tasks** into **fd9a01a3ae864dff72dc5c7a9f5eb446be26a4fe on uber:master**.\n  Most request/reply protocols use headers to pass additional information about request. It would simplify forwarding such requests (like HTTP or TChannel) if headers are supported directly.\r\nIf headers were supported then adding request encoding information wouldn't require any server side changes. Hi @mfateev , I tried to add context propagation using Opentracing/Jaeger as an experiment. \r\nIt is a very naive attempt(I did this for a demo). \r\n\r\nI added opentracing binary carrier to workflow execution as a blob. This solution assumes only cadence-client is responsible for propagation.\r\n\r\nCan you please share the plan to support this feature. If someone is not already working on it, I will continue working on this.\r\n\r\nAlso please suggest a more efficient way (if any) to do this.\r\n\r\nhttps://github.com/h7kanna/cadence/commit/e18f47f293bf05ec7c6920b0b8b2f0f5b2ed75a9\r\n\r\nhttps://github.com/h7kanna/cadence-client/commit/94518205dc2e26b26079edc55e8eaed5e3ee10ba\r\n\r\nThanks,\r\nHarsha\r\n Harsha, it looks reasonable. I would prefer more generic header that is key->blob_value to support future extensions instead of a single carrier blob field. Let me consult with my local Jaeger experts to see if I'm missing something. Hi @mfateev,\r\nAlso, I have few more questions. Please clarify whenever possible for you.\r\nI think sampling rate of Jaeger client should be configured to 100% if all the workflows should be traced. It will be a scale issue.  Moreover, jaeger agent is UDP based with an in-memory queue, so can be lossy.\r\nActually what I was looking for is the trace of the workflow end to end based on a business key. Jaeger can provide that view but may not be reliable and also not searchable by a business key(unless it is the trace id). Also, long-running workflows will be another problem.\r\n\r\nI started digging into this issue based on your answer for https://github.com/uber-go/cadence-client/issues/318. But want to know if there is a plan for any cadence UI or API with end-to-end workflow execution trace view that does not depend on jaeger? \r\n\r\nThanks,\r\nHarsha\r\n\r\n\r\n   Could you elaborate on your use case? Are you trying to get some analytic of a single workflow execution, or your goal is to track requests from client app all way down through the chain of services including Cadence based ones? Actually both.\r\n1) Workflow execution history as a tree including input output of the activities from visibility API.\r\n2) Trace down through the chain of services including cadence.\r\n I think the relevant issue for first use case is https://github.com/uber/cadence/issues/418\r\nApologize for mixing up my questions.\r\n 1. You already can get workflow execution history through the GetWorkflowExecutionHistory API. The UI is coming soon.\r\n2. We are working on this one with the Jaeger team. The complexity is around requirements of not persisting a Jaeger context in the history as it might contains some time sensitive or even security related information. Thanks for your prompt responses.\r\nI will keep refining the code changes I did and add tests. Let me know the approach Jaeger team proposes.\r\n I have exactly same demand on production project. We use cadence as a part of complex business flow. So business workflow is starting at API gateway goes through number of microservices before cadence, than cadence orchestration layer, and last part again set of microservices. Where I need to provide: \r\n1. Possibility to make tracing of end to end flow, based on business key.\r\n2. To escape saving of sensitive data\r\n3. Use Zipkin as tracing server Talking about our requirement\r\n \"To escape saving of sensitive data\"\r\n\r\nActually it's more important to support a possibility to continue existing traceId which was stared at the beginning of business transaction before coming to Cadence.\r\n \r\nTalking about sensitive information, I agree it's minor point in dealing with traces in Cadence. \r\nAnd at the same time it's important as separate requirement to think how to get around of authorization, because Cadence is storing state of workflow. And workflow can has a sensitive info in state variables. If have any kind of guide how to deal with sensitive data in Cadence you are welcome to share it.\r\n #1731 adds server side support for propagating headers across workflows. Client side changes are in progress.  @shreyassrivatsan could you please specify the number of ticket for implementing this functionality in Java client?  \n[![Coverage Status](https://coveralls.io/builds/13381723/badge)](https://coveralls.io/builds/13381723)\n\nCoverage decreased (-0.4%) to 66.434% when pulling **bbf945cefd65d867c30eb5e7e78915e3027c294a on samarabbas:zombie-poller** into **3b1b45bab5e511716f7a3b08a89f520144612a67 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/13393670/badge)](https://coveralls.io/builds/13393670)\n\nCoverage decreased (-0.3%) to 66.477% when pulling **211a3a744470d7f6a8f8f5249c1d8e034c8cccfd on samarabbas:zombie-poller** into **3b1b45bab5e511716f7a3b08a89f520144612a67 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/13393798/badge)](https://coveralls.io/builds/13393798)\n\nCoverage decreased (-0.4%) to 66.461% when pulling **211a3a744470d7f6a8f8f5249c1d8e034c8cccfd on samarabbas:zombie-poller** into **3b1b45bab5e511716f7a3b08a89f520144612a67 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/13393870/badge)](https://coveralls.io/builds/13393870)\n\nCoverage decreased (-0.3%) to 66.517% when pulling **211a3a744470d7f6a8f8f5249c1d8e034c8cccfd on samarabbas:zombie-poller** into **3b1b45bab5e511716f7a3b08a89f520144612a67 on uber:master**.\n  we could send down some opaque task token in query result so when next time client send query, it sends along with the token, and we could check if there is any change to history and return immediately if there is no change to history. @andrewjdawson2016 this looks like something you're already doing as part of sync-rr. Do you want to close this as duplicate?  \n[![Coverage Status](https://coveralls.io/builds/13237290/badge)](https://coveralls.io/builds/13237290)\n\nCoverage increased (+0.02%) to 66.533% when pulling **c82db79a200b2d0bcb4588c716432e6f2332091f on samarabbas:flaky-unit-test** into **f358b883ba091a31369d7fa92fc7199b83e96155 on uber:master**.\n  No idea how feasible this is... but about half our existing SWF workers are written in .net core.  There doesn't seem to be very good support for Thrift in that framework.  Would love to have the flexibility of an HTTP interface.   @samarabbas Any estimate of time frame for the new RPC stack? \r\n\r\nWe are just planning out our cutover to Cadence from SWF. Ryan - We landed the server side RPC framework changes in this week. The two things that comes with is YARPC(generic rpc framework) and thriftrw, it would allow to easily try http protocol by decorating the IDL. \r\nhttps://godoc.org/go.uber.org/yarpc/transport/http\r\n\r\nThe client is backward compatible with generic server RPC framework at some time over next month we will move client as well. That wouldn't block you to expose http endpoint right away with the changes in server master and start consuming. Some follow up question: \r\n- is your deciders/workflow workers also in .net core? \r\n- Do you have any plans to move to GO (or) want to stay in .net core? @sivakku Our deciders and about half of our workers are written in Go.  Half of our workers are in .net core.  We currently do not have plans to rewrite the .net core workers.  \r\n\r\nIf we had to though, we could write a wrapper in Go around the .net core workers so they don't really have to know about Cadence.  But ideally, we just expose http endpoints from the cadence server. @ryanwalls - Good to know, yeah at some time we want cadence to expose all endpoints through http(based on scenarios). Exposing the endpoints needed for activity workers is probably first step. @sivakku @samarabbas Will the http endpoints be compatible with existing SWF deciders and workers?  It would be great if Cadence could be made backwards compatible.  Should I open a separate issue for that request? @sivakku @samarabbas just following up on my earlier question about SWF compatible endpoints.  \n[![Coverage Status](https://coveralls.io/builds/13175499/badge)](https://coveralls.io/builds/13175499)\n\nCoverage decreased (-0.05%) to 67.188% when pulling **668998056fd56cead9661b1baffee9e0b23f8d06 on samarabbas:flaky-unit-test** into **9ccd575b07058d75de1dc33a08a0130eb7934830 on uber:master**.\n  this is done  \n[![Coverage Status](https://coveralls.io/builds/13152804/badge)](https://coveralls.io/builds/13152804)\n\nCoverage decreased (-0.02%) to 67.226% when pulling **5679f844c12a770fd661e76a560000f87171e306 on samarabbas:start-child-execution-task-stuck-fix** into **37a6a24f98b4dfd02353adee8ff17d54cf416864 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/13057142/badge)](https://coveralls.io/builds/13057142)\n\nCoverage decreased (-0.4%) to 66.85% when pulling **43e6f19f4ed4b90d876cb44bdad27f47e63af9a6 on tamer-eldeeb:throttler** into **37a6a24f98b4dfd02353adee8ff17d54cf416864 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/13190778/badge)](https://coveralls.io/builds/13190778)\n\nChanges Unknown when pulling **3b258b35ac9b1f5b9d74acae981598057c145cde on tamer-eldeeb:throttler** into ** on uber:master**.\n Closing down this old PR since we're unlikely to merge it as-is but may still look at it for reference later.  \n[![Coverage Status](https://coveralls.io/builds/12978538/badge)](https://coveralls.io/builds/12978538)\n\nCoverage decreased (-0.03%) to 67.231% when pulling **5a5bb276767358d545f796a548ac7ee14446e027 on tamer-eldeeb:queue_backoff** into **df9ac3ebe01078649c9edb701e657534d37db1a5 on uber:master**.\n  how is it different compared to apache airflow still in incubator process. I wonder what are key differences I see a lot of similarities. **Here are few differences I can see**\r\n- Airflow requires you to express workflows in python, as oppose to Cadence which is language agnostic.\r\n- Airflow seems to compute the graph statically and persist it in SqlAlchemy based store (MySQL or Postgres).  Cadence just maintains workflow state as mutable state and append-only list of events stored in Cassandra.  Our Persistence layer is pluggable but today we only provide Cassandra based persistence implementation.\r\n- Cadence provides atmost once task dispatch guarantee, meaning either the task is delivered to worker or it will timeout.  Giving an opportunity to workflow logic to either retry the task or run some compensation logic.  I didn't find any details on Airflow around those. My guess it provides atleast once guarantee meaning all your tasks need to be idempotent.\r\n- I didn't see any perf and scale numbers for Airflow, but considering it is backed by MySQL I have a feeling it will have limitations around number of active workflows and workflow executions per second.  Cadence is backed by Cassandra and we are targeting much larger scale both in the terms of large number of active workflows and workflow executions per second.\r\n- Airflow seems to have pretty good experience around managing visualizing pipelines.  Cadence only provides bare bones visibility API\r\n\r\n I have not had much time to look into cadence, but after spending some time browsing through the code I can see what you guys trying to achieve it not exactly a workflow engine in a traditional sense. You can't compare it with airflow what I see you guys trying to achieve transactional semantics with some queuing mechanism.  @longquanzheng this feels like an optimization you may have already made. Can we close this issue? (either because it's already done or we're not going to do it) > @longquanzheng this feels like an optimization you may have already made. Can we close this issue? (either because it's already done or we're not going to do it)\r\n\r\nNo I didn't make this one, and I still see the check in our persistence layer.   \n[![Coverage Status](https://coveralls.io/builds/12873615/badge)](https://coveralls.io/builds/12873615)\n\nCoverage increased (+0.1%) to 67.923% when pulling **db3074b2545ab964d96c8056cbe90f957bf0611d on tamer-eldeeb:matching_error** into **f246cb3e19dcc54756c7439d8c5323fc603b5dd3 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12883070/badge)](https://coveralls.io/builds/12883070)\n\nCoverage increased (+0.04%) to 67.845% when pulling **58da93f9ed346b003fd399d3eddb838f2fb02585 on tamer-eldeeb:matching_error** into **f246cb3e19dcc54756c7439d8c5323fc603b5dd3 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12850524/badge)](https://coveralls.io/builds/12850524)\n\nCoverage decreased (-0.4%) to 67.447% when pulling **4bc4e28bc8e58f622d4a8adc8bea082d60756844 on tamer-eldeeb:cassandra_busy** into **f246cb3e19dcc54756c7439d8c5323fc603b5dd3 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12868313/badge)](https://coveralls.io/builds/12868313)\n\nCoverage decreased (-0.6%) to 67.17% when pulling **fabd9c306e13c5ccc0460c65f55f735c093501aa on tamer-eldeeb:cassandra_busy** into **f246cb3e19dcc54756c7439d8c5323fc603b5dd3 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12899657/badge)](https://coveralls.io/builds/12899657)\n\nChanges Unknown when pulling **0e770c108371e2f86436368625b7d771f9aca264 on tamer-eldeeb:cassandra_busy** into ** on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12899712/badge)](https://coveralls.io/builds/12899712)\n\nChanges Unknown when pulling **0e770c108371e2f86436368625b7d771f9aca264 on tamer-eldeeb:cassandra_busy** into ** on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12902363/badge)](https://coveralls.io/builds/12902363)\n\nChanges Unknown when pulling **eb145895714a915055cc135a5f4681a0f20d23a4 on tamer-eldeeb:cassandra_busy** into ** on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12766265/badge)](https://coveralls.io/builds/12766265)\n\nCoverage decreased (-0.3%) to 67.626% when pulling **d251665c9ed20aea21a1febf1589c5aa6f3a0710 on tamer-eldeeb:matching_start** into **886a2dc0d9beb7badfa20bce499f514b1fc7153f on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12766275/badge)](https://coveralls.io/builds/12766275)\n\nCoverage decreased (-0.3%) to 67.659% when pulling **d251665c9ed20aea21a1febf1589c5aa6f3a0710 on tamer-eldeeb:matching_start** into **886a2dc0d9beb7badfa20bce499f514b1fc7153f on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12766296/badge)](https://coveralls.io/builds/12766296)\n\nCoverage decreased (-0.4%) to 67.515% when pulling **d251665c9ed20aea21a1febf1589c5aa6f3a0710 on tamer-eldeeb:matching_start** into **886a2dc0d9beb7badfa20bce499f514b1fc7153f on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12788068/badge)](https://coveralls.io/builds/12788068)\n\nCoverage decreased (-0.1%) to 67.808% when pulling **aa85cefb1e2c3388a1aa779d905ea4c6f09c374b on tamer-eldeeb:matching_start** into **886a2dc0d9beb7badfa20bce499f514b1fc7153f on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12788241/badge)](https://coveralls.io/builds/12788241)\n\nCoverage decreased (-0.2%) to 67.774% when pulling **867d008f34007aeb502da4dabc58ba3cd17d345a on tamer-eldeeb:matching_start** into **886a2dc0d9beb7badfa20bce499f514b1fc7153f on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12788687/badge)](https://coveralls.io/builds/12788687)\n\nCoverage decreased (-0.2%) to 67.689% when pulling **4cf4d170b785bb57e92a5d976117c605cfecc43c on tamer-eldeeb:matching_start** into **886a2dc0d9beb7badfa20bce499f514b1fc7153f on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12884848/badge)](https://coveralls.io/builds/12884848)\n\nCoverage increased (+0.01%) to 67.861% when pulling **41cae9d93bc74892b9c19e4185974f59b8528356 on tamer-eldeeb:matching_start** into **721339672ce3901e91045667eed5b3f27ac83bdb on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12702478/badge)](https://coveralls.io/builds/12702478)\n\nCoverage increased (+0.1%) to 67.692% when pulling **824054569bbb53f96b038b14f9070fb5e5c8d461 on tamer-eldeeb:history_config** into **e21f25622ad89920808d7f6a6007c3ee16bb87ad on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12747376/badge)](https://coveralls.io/builds/12747376)\n\nCoverage increased (+0.09%) to 67.711% when pulling **0606f81c613a5b0e6c42443df00f27181488a2f2 on tamer-eldeeb:history_config** into **aafd57d0034e8267fe4c4a3e7ce76f9dbb349323 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12751093/badge)](https://coveralls.io/builds/12751093)\n\nCoverage increased (+0.09%) to 67.711% when pulling **df6687c2ce5f6905126bbf288597eb15e79acc8d on tamer-eldeeb:history_config** into **aafd57d0034e8267fe4c4a3e7ce76f9dbb349323 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12683099/badge)](https://coveralls.io/builds/12683099)\n\nCoverage increased (+0.2%) to 67.731% when pulling **d397e93f7c1e5eabfc6d77194b9a49b4ca207c1b on tamer-eldeeb:test_shard_context** into **524be31576b7f10660803556b8016f25fbb728b6 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12700478/badge)](https://coveralls.io/builds/12700478)\n\nCoverage increased (+0.2%) to 67.627% when pulling **0d7480a850aa8aae9a901f5afa2c1e3a75609698 on tamer-eldeeb:test_shard_context** into **719bb1cda47a975aa288d26469aec50f533b4e7a on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12669132/badge)](https://coveralls.io/builds/12669132)\n\nCoverage decreased (-0.04%) to 67.456% when pulling **b39cdb8fb1278ef465232f9590bd51047f71747e on tamer-eldeeb:config** into **524be31576b7f10660803556b8016f25fbb728b6 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12699512/badge)](https://coveralls.io/builds/12699512)\n\nChanges Unknown when pulling **077d2e34a46812a563c934cb132b6b6983acdec2 on tamer-eldeeb:config** into ** on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12699667/badge)](https://coveralls.io/builds/12699667)\n\nCoverage decreased (-0.09%) to 67.391% when pulling **077d2e34a46812a563c934cb132b6b6983acdec2 on tamer-eldeeb:config** into **76ddae63b319542b33ee024c7989c06cbcf4f2ea on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12699926/badge)](https://coveralls.io/builds/12699926)\n\nCoverage decreased (-0.04%) to 67.437% when pulling **077d2e34a46812a563c934cb132b6b6983acdec2 on tamer-eldeeb:config** into **76ddae63b319542b33ee024c7989c06cbcf4f2ea on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12650366/badge)](https://coveralls.io/builds/12650366)\n\nCoverage increased (+0.05%) to 67.57% when pulling **cb5f05d613ff190bd2e66bb54dcecbbf91dbf48b on tamer-eldeeb:static_rangeid** into **3560320980038786a6d7e15ccefb19a3a1fa749b on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12650927/badge)](https://coveralls.io/builds/12650927)\n\nCoverage increased (+0.02%) to 67.547% when pulling **8f6ae664807f786d582203ec55742912eb552a53 on tamer-eldeeb:static_rangeid** into **3560320980038786a6d7e15ccefb19a3a1fa749b on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12631233/badge)](https://coveralls.io/builds/12631233)\n\nCoverage increased (+0.03%) to 67.563% when pulling **7b5a5052311862cacc7bec6a1872921fa007d676 on tamer-eldeeb:matching_latency** into **3ac1e5a3a22ec73bca1ad69be2673ce1fe67beb2 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12501468/badge)](https://coveralls.io/builds/12501468)\n\nCoverage decreased (-0.02%) to 67.449% when pulling **f0c73346d4a80505742a5bbed5a28dd199e9d9ca on tamer-eldeeb:matching_serialize** into **cc82d243cc2ccd60b28dc7b385469365ef7770d9 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12531612/badge)](https://coveralls.io/builds/12531612)\n\nCoverage increased (+0.03%) to 67.502% when pulling **aa8ebaa4c408595fa1e5d6d79f7ca3bde4433205 on tamer-eldeeb:matching_serialize** into **cc82d243cc2ccd60b28dc7b385469365ef7770d9 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12481857/badge)](https://coveralls.io/builds/12481857)\n\nCoverage increased (+0.2%) to 67.613% when pulling **fdf9445ad9944bfa374514bd78deb6d0b27d6ae7 on tamer-eldeeb:pagination_bug** into **b5c2556b5b366e768e08180e546df76b4af07ed8 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12482316/badge)](https://coveralls.io/builds/12482316)\n\nCoverage increased (+0.1%) to 67.586% when pulling **af0e74ce2a9cc9164c33e658344a38f8853ce002 on tamer-eldeeb:pagination_bug** into **b5c2556b5b366e768e08180e546df76b4af07ed8 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12467449/badge)](https://coveralls.io/builds/12467449)\n\nCoverage decreased (-0.1%) to 67.356% when pulling **c2f383e79102641b70cc84a5dfddf27b97d5b7ab on tamer-eldeeb:fe_throttling** into **b5c2556b5b366e768e08180e546df76b4af07ed8 on uber:master**.\n Looks good, my only ask would be to make the RPS setting configurable, just so that we can avoid hitting the limits on our load test cluster without needing a code change.  Ok, if this is in a followup PR. Also second Venkat that the RPS should be made configurable. Not sure if we are currently using a dynamic configuration system. \n[![Coverage Status](https://coveralls.io/builds/12484497/badge)](https://coveralls.io/builds/12484497)\n\nCoverage decreased (-0.09%) to 67.514% when pulling **01aa2d002e355c98687a1dd0e76d0627f8bcca11 on tamer-eldeeb:fe_throttling** into **a5a7c51fe33620937fdb0f9a3e1ce4421a6b0191 on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12485965/badge)](https://coveralls.io/builds/12485965)\n\nCoverage decreased (-0.1%) to 67.534% when pulling **dd73d10f9670ac49f403bf04d3d83786709c9ec8 on tamer-eldeeb:fe_throttling** into **5531ea37a4a16551c04a34a4f47e119c5252f830 on uber:master**.\n  @wxing1292 has already implemented a DLQ as part of cross-DC.  \n[![Coverage Status](https://coveralls.io/builds/12284817/badge)](https://coveralls.io/builds/12284817)\n\nCoverage decreased (-0.02%) to 67.447% when pulling **a2fc05d8b3ebb13699c07d6989b5e4b0fb2cf591 on tamer-eldeeb:visibility_ordering** into **2a1930112aa67353d18a3237ebe966bffc71d85d on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12284950/badge)](https://coveralls.io/builds/12284950)\n\nCoverage increased (+0.03%) to 67.5% when pulling **a2fc05d8b3ebb13699c07d6989b5e4b0fb2cf591 on tamer-eldeeb:visibility_ordering** into **2a1930112aa67353d18a3237ebe966bffc71d85d on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12285131/badge)](https://coveralls.io/builds/12285131)\n\nCoverage increased (+0.01%) to 67.48% when pulling **75ced08dbbc6777f9ca8f4710f9cf3331f722623 on tamer-eldeeb:visibility_ordering** into **2a1930112aa67353d18a3237ebe966bffc71d85d on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12285417/badge)](https://coveralls.io/builds/12285417)\n\nCoverage increased (+0.02%) to 67.506% when pulling **534040507e1e2cd39a55ec074cf8124e20a10770 on tamer-eldeeb:visibility_ordering** into **aa6f4b26888eb8f105a94d70a53df5e2042490f9 on uber:master**.\n  @vancexu will you support counts on ES?  \n[![Coverage Status](https://coveralls.io/builds/12282685/badge)](https://coveralls.io/builds/12282685)\n\nCoverage decreased (-0.02%) to 67.447% when pulling **32c016296f20ea6165a900664a1a476fafbee30e on tamer-eldeeb:unload_tasklist** into **2a1930112aa67353d18a3237ebe966bffc71d85d on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12283538/badge)](https://coveralls.io/builds/12283538)\n\nCoverage increased (+0.01%) to 67.481% when pulling **527e0e7cb15e6a4ca5c1d7f85a9b9fb2bca9712c on tamer-eldeeb:unload_tasklist** into **2a1930112aa67353d18a3237ebe966bffc71d85d on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12196043/badge)](https://coveralls.io/builds/12196043)\n\nCoverage decreased (-0.03%) to 67.324% when pulling **6c94bc9284b531466c3d409773d8ec7bd9dc4e27 on sivakku:delete_history_on_timeout** into **ffefac1783df1f238ddb6c9493230ba0035a095e on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12209346/badge)](https://coveralls.io/builds/12209346)\n\nCoverage increased (+0.03%) to 67.384% when pulling **46559ef4f636784eb652dc8d60b70a4885c5915e on sivakku:delete_history_on_timeout** into **ffefac1783df1f238ddb6c9493230ba0035a095e on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12210210/badge)](https://coveralls.io/builds/12210210)\n\nCoverage increased (+0.05%) to 67.4% when pulling **9a6f973488666068d68efc6ebeac359a05587f91 on sivakku:delete_history_on_timeout** into **ffefac1783df1f238ddb6c9493230ba0035a095e on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12211001/badge)](https://coveralls.io/builds/12211001)\n\nCoverage decreased (-0.02%) to 67.346% when pulling **b3b88dbef49e286f3ead6fa8a09ae0c3343c0e2e on sivakku:delete_history_on_timeout** into **9971c8302fa409e2bd1785ab3c1e9dfa1bd1c5e0 on uber:master**.\n  \n[![Coverage Status](https://coveralls.io/builds/12195912/badge)](https://coveralls.io/builds/12195912)\n\nCoverage increased (+0.08%) to 67.434% when pulling **9791460b4333e50db63afd95fb22fb9483d197a0 on sivakku:delete_history** into **ffefac1783df1f238ddb6c9493230ba0035a095e on uber:master**.\n  Already finished. See [dataInterfaces](https://github.com/uber/cadence/blob/2cf0577af28bf4c8e68bf7949b9716ff70419f06/common/persistence/dataInterfaces.go#L287)  We uncovered an issue in our upgrade testing today where matching engine stopped delivering tasks for some tasklists.  Ack Level was stuck at a lower value and I can see more tasks in tasklist beyond the ack level.  Restarting all matching engine nodes fixed the problem, and caused all stuck workflow executions to make progress.  \r\nLosing decision scheduled tasks can cause stuck workflows as they are not protected by timeouts.  In this case we didn't lose tasks but just matching engine stopped delivering those tasks due to some bug.\r\n\r\nStuck Workflow:\r\nselect * from open_executions ;\r\n\r\n domain_id                            | domain_partition | start_time               | run_id                               | workflow_id                                  | workflow_type_name\r\n--------------------------------------+------------------+--------------------------+--------------------------------------+----------------------------------------------+------------------------------------------------------------------------------\r\n 70de1505-7b4a-4762-83ac-363cebde7077 |                0 | 2017-06-27 23:04:37+0000 | 1a331bc9-2193-4073-969f-68ce28d630e4 | 91047fac-3452-4e43-b6d1-e848a739cc39-16-7209 | code.uber.internal/devexp/cadence-server/health/driver.stressWorkflowExecute\r\n 70de1505-7b4a-4762-83ac-363cebde7077 |                0 | 2017-06-27 23:04:35+0000 | a383c1f1-175f-4550-8c3c-dd51b87ef113 | 4813f9d4-bf52-4a4c-a868-782db860802d-13-7209 | code.uber.internal/devexp/cadence-server/health/driver.stressWorkflowExecute\r\n 70de1505-7b4a-4762-83ac-363cebde7077 |                0 | 2017-06-27 23:04:35+0000 | b5ce35ef-b175-4de9-b76f-cd8ea65f87ce | 5081ee9e-c8e9-4c17-9590-597962b595f4-17-7273 | code.uber.internal/devexp/cadence-server/health/driver.stressWorkflowExecute\r\n 70de1505-7b4a-4762-83ac-363cebde7077 |                0 | 2017-06-27 23:04:06+0000 | 888f4697-89dd-4bd8-8f2b-0258e8a5d79c |  90201a11-cc57-48da-b165-46ce8e5326ff-6-6986 | code.uber.internal/devexp/cadence-server/health/driver.stressWorkflowExecute\r\n\r\nHistory for one of the stuck workflow:\r\n1, 2017-06-27T23:04:37Z, WorkflowExecutionStarted: (WorkflowType:(Name:code.uber.internal/devexp/cadence-server/health/driver.stressWorkflowExecute), TaskList:(Name:testTaskList-41), Input:[len=176], ExecutionStartToCloseTimeoutSeconds:300, TaskStartToCloseTimeoutSeconds:60, Identity:106@compute2470-dca1@)\r\n2, 2017-06-27T23:04:37Z, DecisionTaskScheduled: (TaskList:(Name:testTaskList-41), StartToCloseTimeoutSeconds:60)\r\n\r\n\r\nOne of the stuck tasklist:\r\nselect * from tasks where domain_id = 70de1505-7b4a-4762-83ac-363cebde7077 and task_list_name = 'testTaskList-41' and task_list_type = 0;\r\n\r\n domain_id                            | task_list_name  | task_list_type | type | task_id | range_id | task                                                                                                                                                                          | task_list\r\n--------------------------------------+-----------------+----------------+------+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------\r\n 70de1505-7b4a-4762-83ac-363cebde7077 | testTaskList-41 |              0 |    0 |  800005 |        9 |  {domain_id: 70de1505-7b4a-4762-83ac-363cebde7077, workflow_id: '5081ee9e-c8e9-4c17-9590-597962b595f4-17-7273', run_id: b5ce35ef-b175-4de9-b76f-cd8ea65f87ce, schedule_id: 8} |                                                                                                   null\r\n 70de1505-7b4a-4762-83ac-363cebde7077 | testTaskList-41 |              0 |    0 |  800006 |        9 | {domain_id: 70de1505-7b4a-4762-83ac-363cebde7077, workflow_id: '4813f9d4-bf52-4a4c-a868-782db860802d-13-7209', run_id: a383c1f1-175f-4550-8c3c-dd51b87ef113, schedule_id: 26} |                                                                                                   null\r\n 70de1505-7b4a-4762-83ac-363cebde7077 | testTaskList-41 |              0 |    0 |  800007 |        9 |  {domain_id: 70de1505-7b4a-4762-83ac-363cebde7077, workflow_id: '91047fac-3452-4e43-b6d1-e848a739cc39-16-7209', run_id: 1a331bc9-2193-4073-969f-68ce28d630e4, schedule_id: 2} |                                                                                                   null\r\n 70de1505-7b4a-4762-83ac-363cebde7077 | testTaskList-41 |              0 |    1 |  -12345 |        9 |                                                                                                                                                                          null | {domain_id: 70de1505-7b4a-4762-83ac-363cebde7077, name: 'testTaskList-41', type: 0, ack_level: 800004}\r\n\r\n(4 rows) I also see the following logs on matching engine:\r\nhelpers.go:38 Persistent store operation failure. Operation Details: {taskType: 0, taskList: testTaskList-4}  \n[![Coverage Status](https://coveralls.io/builds/12170896/badge)](https://coveralls.io/builds/12170896)\n\nCoverage decreased (-0.02%) to 67.329% when pulling **b54ffbb0fd5789b4033e1ba50eaf744f5b3e9240 on sivakku:timer_opt** into **ffefac1783df1f238ddb6c9493230ba0035a095e on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12170937/badge)](https://coveralls.io/builds/12170937)\n\nCoverage increased (+0.05%) to 67.403% when pulling **b54ffbb0fd5789b4033e1ba50eaf744f5b3e9240 on sivakku:timer_opt** into **ffefac1783df1f238ddb6c9493230ba0035a095e on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12192977/badge)](https://coveralls.io/builds/12192977)\n\nCoverage increased (+0.09%) to 67.439% when pulling **9e5f853059b936a65e5e0be2171e9de6dce1a435 on sivakku:timer_opt** into **ffefac1783df1f238ddb6c9493230ba0035a095e on uber:master**.\n \n[![Coverage Status](https://coveralls.io/builds/12266351/badge)](https://coveralls.io/builds/12266351)\n\nCoverage increased (+0.1%) to 67.49% when pulling **ec5427a8385dae562ad2115d1e45c01b7998cb06 on sivakku:timer_opt** into **6d8ad647c23f6b0b72612bb65d5c7f24fc000a19 on uber:master**.\n  \n[![Coverage Status](https://:/builds/12160872/badge)](https://:/builds/12160872)\n\nCoverage decreased (-0.02%) to 67.336% when pulling **51e8aec7d3f6f0bcf4247e4ec27cdc44404050e8 on sivakku:workflow_end2end_timeout** into **293a73ce0e4491f89b2330eeb65e19019a7db4e1 on uber:master**.\n  I am not sure why we need an ackManager for timers. Since we assign timestamps under the lock and never do timers in the past, to advance the ackLevel for the timer it suffices to check if there are no timers between the previous ackLevel and now. Are we trying to avoid querying Cassandra for this check?  Processing of certain transfer tasks require loading the mutable state under a lock.  We need to carefully review all code which loads the execution to make sure it is not making any calls to history service under the lock as it could potentially cause deadlock.  History engine first creates the history of new execution in the events table and then create the mutable state in executions table.  It is possible that it writes the events but fails on the second write.  We current leak all those stale executions in cassandra.  \r\nWe need to come up with a mechanism to detect all those stale entries and remove them. @samarabbas @andrewjdawson2016 is this still valid?  Frontend should be responsible for serializing/deserializing the task token. All other internal services should use the internal representation.  The other benefit of an explicit decision failure is that an error that caused the failure can be exposed through the visibility API.  Dupe by #176   PR #255 fixes this.  Closing as there is no activity and not enough detail to know if this is still relevant.  Another option is to schedule a transfer task for delete. It would also work with archival of completed workflows to an external system.  Tamer, can you resolve this bug?  We are thinking about a more generic support for query which can be used by clients to issue custom queries to workflow execution, like expose current state of execution. @samarabbas since we already have query support, can we close this issue?  Ideally it should be transparent to the clients. So any archived workflow should still be accessible through all the visibility APIs, but instead of Cassandra they should hit the backend blob store.  Let's scope this to something we need for first release.  We already have marker support in history.  This is not needed anymore.  @shreyassrivatsan does this still make sense and does it fit with your current work? This is also captured in the overall multi-tenancy overview task I opened #2469   Guys, what's the status of this feature?\r\n\r\nFrom what I understand, currently a single matching service node distributes all the work belonging to a TaskList. What's the impact of this? Does anybody have some throughput measurements? How many tasks per sec can a matcher distribute?\r\n\r\nAre there any workarounds for this? A simple one I can think of is duplicating TaskLists into and then starting their workflows in a round robin fashion. Are there such setups supported directly by the cadence client library? @rpasea This task is currently not funded on our side nor we have an ETA on when we can start working on it.  Fortunately there is a very straightforward workaround as you pointed out.  When starting workers specify multiple tasklist and start a worker for each of them.  For example:\r\n```\r\n{application}-tasklist-0\r\n{application}-tasklist-1\r\n{application}-tasklist-2\r\n```\r\nWhen starting workflow you can randomly pick a tasklist and pass it in as parameter to workflow execution.  Then use this tasklist for scheduling activities from that workflow execution.  We don't have a high level client abstraction which does this automatically but it should be pretty easy to built.\r\nAnswer to throughput measurements for a single tasklist depends on what kind of hardware you are using for the deployment.  Here are some numbers which see on our production cluster:\r\nNumber of tasks dispatch (with SyncMatch): 400/sec\r\nNumber of tasks dispatch (without SyncMatch): 100/sec\r\n\r\nSpecs:\r\nMatchingHost Memory: 8GB\r\nMatchingHost Cores: 4\r\nCassandra Memory: 32 GB\r\nCassandra Cores: 28\r\n Thanks for the thorough response, Samar!\n\nOn Mon, Mar 11, 2019, 22:31 Samar Abbas - Uber <notifications@github.com>\nwrote:\n\n> @rpasea <https://github.com/rpasea> This task is currently not funded on\n> our side nor we have an ETA on when we can start working on it. Fortunately\n> there is a very straightforward workaround as you pointed out. When\n> starting workers specify multiple tasklist and start a worker for each of\n> them. For example:\n>\n> {application}-tasklist-0\n> {application}-tasklist-1\n> {application}-tasklist-2\n>\n> When starting workflow you can randomly pick a tasklist and pass it in as\n> parameter to workflow execution. Then use this tasklist for scheduling\n> activities from that workflow execution. We don't have a high level client\n> abstraction which does this automatically but it should be pretty easy to\n> built.\n> Answer to throughput measurements for a single tasklist depends on what\n> kind of hardware you are using for the deployment. Here are some numbers\n> which see on our production cluster:\n> Number of tasks dispatch (with SyncMatch): 400/sec\n> Number of tasks dispatch (without SyncMatch): 100/sec\n>\n> Specs:\n> MatchingHost Memory: 8GB\n> MatchingHost Cores: 4\n> Cassandra Memory: 32 GB\n> Cassandra Cores: 28\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/uber/cadence/issues/52#issuecomment-471716871>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ADxAL7jA2CcL0vJnJ5QnfGEPE6Q1XcBfks5vVr0ugaJpZM4MTrUG>\n> .\n>\n Implemented as part of #2229. Assigned to @yux0 for testing and rollout.  It should also accept 0 as a valid value. When 0 is specified no tasks should be dispatched on the given task list. It can be used to quickly shut down the dispatch to workers if some corruption problem with them is found.  We see significant load from individually deleting transfer and timer tasks from DB after processing.  Cassandra has support for range deletes and we should be easily move our deleting logic to range deletes when we move the ack level, rather than individually deleting tasks.  We need a tool to automate creation / update of versioned cassandra schema for cadence. The requirements are as follows:\r\n\r\n* Support initial setup of schema (and associate the schema with a version number)\r\n* Support intial setup of schema without versioning (for testing / onebox etc)\r\n* Support update of schema to a newer version with safety\r\n** Only whitelist CREATE/ALTER command\r\n** Support for dry runs\r\n\r\n https://github.com/uber/cadence/pull/171 Part-II: https://github.com/uber/cadence/pull/177 resolving, all diffs pushed to master.  https://github.com/uber/cadence/pull/238  matching: emit metrics for interesting events (#244)  Not an issue.  We need to have a discussion on what is the default.  #278 fixes part of this, we now create just one timer for all of the activities combined.   Ghhlvifyc,gcjc&$6\"+\"_-*@vhxhvc", "text_all_count": 44068, "text_word_token": ["Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "fde", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "c", "NUMBER", "bff", "NUMBER", "ef", "NUMBER", "on", "kafka", "parse", "into", "ac", "NUMBER", "d", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "bb", "NUMBER", "c", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "f", "NUMBER", "da", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "on", "yycptt", "queue", "task", "processor", "into", "ccafe", "NUMBER", "b", "NUMBER", "a", "NUMBER", "d", "NUMBER", "ebce", "NUMBER", "be", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "c", "on", "uber", "master", "NUMBER", "Not", "possible", "to", "make", "LocalActivity", "that", "returns", "nil", "in", "result", "NUMBER", "Workflow", "fail", "with", "reason", "cadenceInternal", "Generic", "details", "unable", "to", "decode", "argument", "NUMBER", "struct", "with", "json", "error", "EOF", "I", "ve", "made", "a", "sample", "to", "demonstrate", "this", "problem", "LINK", "local", "activity", "sample", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "da", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "f", "NUMBER", "bec", "NUMBER", "aaa", "NUMBER", "e", "NUMBER", "fdda", "NUMBER", "f", "NUMBER", "e", "NUMBER", "on", "RaceConditionRemove", "into", "NUMBER", "c", "NUMBER", "af", "NUMBER", "fbb", "NUMBER", "b", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "fcff", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fae", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "de", "NUMBER", "df", "NUMBER", "db", "NUMBER", "f", "NUMBER", "a", "NUMBER", "af", "NUMBER", "on", "yycptt", "non", "blocking", "submit", "into", "b", "NUMBER", "c", "NUMBER", "fe", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "on", "uber", "master", "NUMBER", "Fixes", "NUMBER", "Remove", "MaxRetries", "this", "was", "a", "left", "over", "from", "the", "old", "interface", "Fixed", "the", "fail", "unit", "test", "as", "well", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "on", "jontro", "s", "NUMBER", "archival", "multipart", "into", "NUMBER", "aa", "NUMBER", "abfa", "NUMBER", "dd", "NUMBER", "ef", "NUMBER", "f", "NUMBER", "fae", "NUMBER", "afdc", "NUMBER", "a", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "be", "NUMBER", "eb", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "d", "NUMBER", "on", "yycptt", "go", "mod", "tidy", "into", "NUMBER", "cf", "NUMBER", "ac", "NUMBER", "be", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "dfd", "NUMBER", "b", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "ef", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "b", "NUMBER", "dacd", "NUMBER", "aaa", "NUMBER", "fe", "NUMBER", "e", "NUMBER", "on", "yycptt", "queue", "task", "impl", "into", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "dfdfe", "NUMBER", "af", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "ff", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "bfa", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "NUMBER", "on", "vitarb", "add", "tpath", "into", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "dfdfe", "NUMBER", "af", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "ff", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ccb", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "da", "NUMBER", "b", "on", "RaceConditionQPS", "into", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "ebfb", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "on", "andrewjdawson", "NUMBER", "RevertDCChange", "into", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "on", "uber", "master", "NUMBER", "This", "be", "a", "follow", "up", "to", "LINK", "I", "didn", "t", "test", "that", "earlier", "PR", "with", "host", "verification", "enable", "NUMBER", "Now", "when", "I", "deploy", "the", "NUMBER", "release", "LINK", "with", "host", "verification", "enable", "it", "fail", "with", "Incompatible", "cassandra", "version", "unable", "to", "create", "CQL", "Client", "gocql", "unable", "to", "create", "session", "control", "unable", "to", "connect", "to", "initial", "hosts", "x", "NUMBER", "cannot", "validate", "certificate", "for", "TAG", "because", "it", "doesn", "t", "contain", "any", "IP", "SANs", "This", "PR", "add", "a", "server", "name", "setting", "which", "be", "pass", "into", "tls", "NUMBER", "Config", "NUMBER", "ServerName", "to", "bypass", "the", "error", "NUMBER", "I", "have", "verify", "this", "connects", "successfully", "with", "both", "enableHostVerification", "true", "and", "serverName", "set", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dcda", "NUMBER", "deab", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "on", "aoby", "tls", "add", "server", "name", "into", "dbbf", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ccfe", "NUMBER", "a", "NUMBER", "e", "NUMBER", "ce", "on", "uber", "master", "NUMBER", "Thx", "for", "the", "review", "meiliang", "NUMBER", "Can", "we", "get", "this", "merge", "soon", "Do", "I", "need", "anything", "else", "For", "a", "workflow", "where", "memo", "field", "be", "set", "through", "WorkflowOptions", "calling", "continueAsNew", "fail", "to", "propagate", "the", "value", "to", "subsequent", "instances", "NUMBER", "So", "any", "subsequent", "invocation", "of", "describe", "workflow", "will", "have", "null", "values", "for", "memo", "NUMBER", "Steps", "to", "reproduce", "the", "issue", "setup", "up", "workflow", "options", "String", "wfId", "greeting", "NUMBER", "Map", "TAG", "map", "new", "HashMap", "TAG", "map", "NUMBER", "put", "key", "NUMBER", "value", "NUMBER", "WorkflowOptions", "options", "new", "WorkflowOptions", "NUMBER", "Builder", "NUMBER", "setWorkflowId", "wfId", "NUMBER", "setMemo", "map", "NUMBER", "build", "GreetingWorkflow", "workflow", "workflowClient", "NUMBER", "newWorkflowStub", "GreetingWorkflow", "NUMBER", "class", "options", "start", "the", "workflow", "GreetingWorkflow", "workflow", "workflowClient", "NUMBER", "newWorkflowStub", "GreetingWorkflow", "NUMBER", "class", "WorkflowClient", "NUMBER", "art", "workflow", "getGreeting", "World", "ensure", "continueAsNew", "be", "invoked", "in", "the", "workflow", "inside", "workflow", "Current", "workflow", "run", "stops", "executing", "after", "this", "call", "NUMBER", "if", "forSomeCondition", "continueAsNew", "NUMBER", "composeGreeting", "greeting", "name", "delay", "counter", "invoke", "describe", "workflow", "WorkflowExecution", "workflowExecution", "new", "WorkflowExecution", "workflowExecution", "NUMBER", "setWorkflowId", "wfId", "WorkflowExecutionInfo", "workflowExecutionInfo", "WorkflowExecutionUtils", "NUMBER", "describeWorkflowInstance", "cadenceService", "cadenceServerConfig", "NUMBER", "getDomain", "workflowExecution", "Map", "TAG", "memo", "workflowExecutionInfo", "NUMBER", "memo", "assertNull", "memo", "TAG", "NUMBER", "times", "NUMBER", "should", "have", "a", "additional", "attr", "dbVersion", "which", "will", "NUMBER", "for", "each", "db", "write", "relate", "to", "a", "mutable", "state", "yux", "NUMBER", "yycptt", "venkat", "NUMBER", "one", "more", "thing", "plz", "also", "consider", "persist", "the", "heartbeat", "timer", "time", "along", "with", "activity", "currently", "it", "be", "a", "in", "mem", "only", "attr", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "cdaeef", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bcd", "NUMBER", "e", "NUMBER", "on", "yycptt", "NUMBER", "x", "debug", "into", "NUMBER", "fa", "NUMBER", "cb", "NUMBER", "ee", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "eda", "NUMBER", "e", "NUMBER", "c", "NUMBER", "on", "uber", "NUMBER", "x", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "aa", "NUMBER", "b", "NUMBER", "efee", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "on", "DisableEmitMetric", "into", "d", "NUMBER", "cde", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bbe", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "df", "NUMBER", "b", "NUMBER", "df", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "yycptt", "NUMBER", "x", "debug", "into", "NUMBER", "af", "NUMBER", "efda", "NUMBER", "a", "NUMBER", "c", "NUMBER", "f", "NUMBER", "dce", "NUMBER", "f", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "on", "uber", "NUMBER", "x", "NUMBER", "Hi", "Cadence", "developers", "Do", "you", "have", "a", "rough", "eta", "for", "when", "Cadence", "server", "NUMBER", "be", "to", "be", "release", "Moreover", "will", "this", "release", "include", "the", "Cassandra", "SSL", "feature", "merge", "back", "in", "November", "see", "NUMBER", "Thanks", "for", "the", "prompt", "response", "meiliang", "NUMBER", "Closing", "out", "issue", "as", "my", "query", "has", "now", "be", "answered", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "da", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "ced", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "yycptt", "priority", "assigner", "into", "NUMBER", "f", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "ee", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ddea", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "adf", "NUMBER", "dcbed", "NUMBER", "ab", "NUMBER", "on", "history_dlq", "into", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "de", "NUMBER", "cdc", "NUMBER", "a", "NUMBER", "cef", "NUMBER", "on", "yycptt", "add", "task", "metrics", "into", "a", "NUMBER", "bcb", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "ce", "NUMBER", "ebd", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "bddf", "NUMBER", "on", "uber", "NUMBER", "x", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "be", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "af", "NUMBER", "ff", "NUMBER", "bd", "NUMBER", "on", "yycptt", "task", "scheduler", "into", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "cde", "NUMBER", "be", "NUMBER", "d", "NUMBER", "af", "NUMBER", "c", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "c", "NUMBER", "on", "fix_logging", "into", "dc", "NUMBER", "ec", "NUMBER", "da", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "be", "NUMBER", "on", "master", "NUMBER", "CLA", "assistant", "check", "LINK", "assistant", "NUMBER", "io", "pull", "badge", "sign", "LINK", "assistant", "NUMBER", "io", "uber", "cadence", "pullRequest", "NUMBER", "TAG", "All", "committers", "have", "sign", "the", "CLA", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "ecf", "NUMBER", "c", "NUMBER", "f", "NUMBER", "cdd", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "b", "on", "AddEmittingMetricsLog", "into", "NUMBER", "afbc", "NUMBER", "d", "NUMBER", "ef", "NUMBER", "a", "NUMBER", "caa", "NUMBER", "ad", "NUMBER", "fd", "NUMBER", "d", "NUMBER", "dfbfbaae", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "cc", "NUMBER", "caf", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ccecb", "NUMBER", "on", "dlq_cli", "into", "NUMBER", "d", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "ff", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ac", "on", "master", "NUMBER", "I", "be", "facing", "below", "issue", "while", "starting", "cadence", "service", "with", "external", "cassandra", "NUMBER", "Below", "be", "the", "commands", "i", "fired", "to", "start", "Cadence", "server", "Cadence", "wen", "and", "statsd", "server", "NUMBER", "Cassandra", "be", "run", "on", "localhost", "Windows", "NUMBER", "I", "be", "use", "Windows", "docker", "desktop", "NUMBER", "docker", "run", "name", "cadence", "network", "app", "tier", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "e", "CASSANDRA_SEEDS", "host", "NUMBER", "docker", "NUMBER", "internal", "e", "KEYSPACE", "cadence", "e", "VISIBILITY_KEYSPACE", "cadence_visibility", "e", "SKIP_SCHEMA_SETUP", "TRUE", "e", "RINGPOP_SEEDS", "host", "NUMBER", "docker", "NUMBER", "internal", "e", "STATSD_ENDPOINT", "host", "NUMBER", "docker", "NUMBER", "internal", "NUMBER", "e", "NUM_HISTORY_SHARDS", "NUMBER", "e", "LOG_LEVEL", "info", "ubercadence", "server", "master", "auto", "setup", "docker", "run", "name", "cadence", "web", "p", "NUMBER", "NUMBER", "d", "link", "cadence", "e", "CADENCE_TCHANNEL_SERVICE", "cadence", "frontend", "e", "CADENCE_WEB_PORT", "NUMBER", "e", "CADENCE_TCHANNEL_PEERS", "NUMBER", "NUMBER", "ubercadence", "web", "NUMBER", "docker", "run", "name", "statsd", "network", "app", "tier", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "d", "graphiteapp", "graphite", "statsd", "Cadence", "server", "be", "Up", "and", "run", "Cadence", "web", "UI", "be", "accessible", "NUMBER", "BUT", "while", "run", "any", "workflow", "i", "be", "get", "exception", "saying", "NUMBER", "NUMBER", "NUMBER", "main", "WARN", "c", "NUMBER", "u", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "common", "NUMBER", "Retryer", "Retrying", "after", "failure", "org", "NUMBER", "apache", "NUMBER", "rift", "NUMBER", "TException", "Rpc", "error", "TAG", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "serviceclient", "NUMBER", "WorkflowServiceTChannel", "NUMBER", "rowOnRpcError", "WorkflowServiceTChannel", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "serviceclient", "NUMBER", "WorkflowServiceTChannel", "NUMBER", "doRemoteCall", "WorkflowServiceTChannel", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "serviceclient", "NUMBER", "WorkflowServiceTChannel", "NUMBER", "artWorkflowExecution", "WorkflowServiceTChannel", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "serviceclient", "NUMBER", "WorkflowServiceTChannel", "NUMBER", "lambda", "StartWorkflowExecution", "NUMBER", "WorkflowServiceTChannel", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "serviceclient", "NUMBER", "WorkflowServiceTChannel", "NUMBER", "measureRemoteCall", "WorkflowServiceTChannel", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "serviceclient", "NUMBER", "WorkflowServiceTChannel", "NUMBER", "StartWorkflowExecution", "WorkflowServiceTChannel", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "external", "NUMBER", "GenericWorkflowClientExternalImpl", "NUMBER", "lambda", "startWorkflowInternal", "NUMBER", "GenericWorkflowClientExternalImpl", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "common", "NUMBER", "Retryer", "NUMBER", "retryWithResult", "Retryer", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "external", "NUMBER", "GenericWorkflowClientExternalImpl", "NUMBER", "artWorkflowInternal", "GenericWorkflowClientExternalImpl", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "external", "NUMBER", "GenericWorkflowClientExternalImpl", "NUMBER", "artWorkflow", "GenericWorkflowClientExternalImpl", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "sync", "NUMBER", "WorkflowStubImpl", "NUMBER", "artWithOptions", "WorkflowStubImpl", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "sync", "NUMBER", "WorkflowStubImpl", "NUMBER", "art", "WorkflowStubImpl", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "sync", "NUMBER", "WorkflowInvocationHandler", "NUMBER", "artWorkflow", "WorkflowInvocationHandler", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "sync", "NUMBER", "WorkflowInvocationHandler", "NUMBER", "access", "NUMBER", "WorkflowInvocationHandler", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "sync", "NUMBER", "WorkflowInvocationHandler", "SyncWorkflowInvocationHandler", "NUMBER", "artWorkflow", "WorkflowInvocationHandler", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "sync", "NUMBER", "WorkflowInvocationHandler", "SyncWorkflowInvocationHandler", "NUMBER", "invoke", "WorkflowInvocationHandler", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "sync", "NUMBER", "WorkflowInvocationHandler", "NUMBER", "invoke", "WorkflowInvocationHandler", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "sun", "NUMBER", "proxy", "NUMBER", "Proxy", "NUMBER", "getGreeting", "Unknown", "Source", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "samples", "NUMBER", "hello", "NUMBER", "HelloActivity", "NUMBER", "main", "HelloActivity", "NUMBER", "java", "NUMBER", "Below", "error", "i", "be", "get", "while", "starting", "cadence", "server", "NUMBER", "level", "error", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "Internal", "service", "error", "service", "cadence", "frontend", "error", "InternalServiceError", "Message", "Not", "enough", "hosts", "to", "serve", "the", "request", "logging", "call", "at", "workflowHandler", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Error", "n", "t", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "frontend", "NUMBER", "WorkflowHandler", "NUMBER", "error", "n", "t", "cadence", "service", "frontend", "workflowHandler", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "frontend", "NUMBER", "WorkflowHandler", "NUMBER", "PollForActivityTa", "sk", "n", "t", "cadence", "service", "frontend", "workflowHandler", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "frontend", "NUMBER", "DCRedirectionHandlerImpl", "NUMBER", "PollForActivityTask", "NUMBER", "func", "NUMBER", "n", "t", "cadence", "service", "frontend", "dcRedi", "rectionHandler", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "frontend", "NUMBER", "NoopRedirectionPolicy", "NUMBER", "WithDomainNameRedirect", "n", "t", "cadence", "service", "frontend", "dcRedirectionPolicy", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "c", "adence", "service", "frontend", "NUMBER", "DCRedirectionHandlerImpl", "NUMBER", "PollForActivityTask", "n", "t", "cadence", "service", "frontend", "dcRedirectionHandler", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "frontend", "NUMBER", "AccessControl", "ledWorkflowHandler", "NUMBER", "PollForActivityTask", "n", "t", "cadence", "service", "frontend", "accessControlledHandler", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "NUMBER", "gen", "go", "cadence", "workflowserviceserver", "NUMBER", "handler", "NUMBER", "PollForActivity", "Task", "n", "t", "cadence", "NUMBER", "gen", "go", "cadence", "workflowserviceserver", "server", "NUMBER", "go", "NUMBER", "ngo", "NUMBER", "uber", "NUMBER", "org", "yarpc", "encoding", "thrift", "NUMBER", "riftUnaryHandler", "NUMBER", "Handle", "n", "t", "go", "pkg", "mod", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "v", "NUMBER", "encoding", "thrift", "inbound", "NUMBER", "go", "NUMBER", "ngo", "NUMBER", "uber", "NUMBER", "org", "yarpc", "internal", "observability", "NUMBER", "Middleware", "NUMBER", "Handle", "n", "t", "go", "pkg", "mod", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "v", "NUMBER", "internal", "observability", "middleware", "NUMBER", "go", "NUMBER", "ngo", "NUMBER", "uber", "NUMBER", "org", "yarpc", "api", "mid", "dleware", "NUMBER", "unaryHandlerWithMiddleware", "NUMBER", "Handle", "n", "t", "go", "pkg", "mod", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "v", "NUMBER", "api", "middleware", "inbound", "NUMBER", "go", "NUMBER", "ngo", "NUMBER", "uber", "NUMBER", "org", "yarpc", "api", "transport", "NUMBER", "InvokeUnaryHandler", "n", "t", "go", "pkg", "mod", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "v", "NUMBER", "api", "transport", "handler_invoker", "NUMBER", "go", "NUMBER", "ngo", "NUMBER", "uber", "NUMBER", "org", "yarpc", "transport", "tchannel", "NUMBER", "handler", "NUMBER", "callHandler", "n", "t", "go", "pkg", "mod", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "v", "NUMBER", "transport", "tchannel", "handler", "NUMBER", "go", "NUMBER", "NUMBER", "ngo", "NUMBER", "uber", "NUMBER", "org", "yarpc", "transport", "tchannel", "NUMBER", "handler", "NUMBER", "handle", "n", "t", "go", "pkg", "mod", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "v", "NUMBER", "transport", "tchannel", "handler", "NUMBER", "go", "NUMBER", "ngo", "NUMBER", "uber", "NUMBER", "org", "yarpc", "transport", "tchannel", "NUMBER", "handler", "NUMBER", "Handle", "n", "t", "go", "pkg", "mod", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "v", "NUMBER", "transport", "tchannel", "handler", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "tchannel", "go", "NUMBER", "channelHandler", "NUMBER", "Handle", "n", "t", "go", "pkg", "mod", "github", "NUMBER", "com", "uber", "tchannel", "go", "v", "NUMBER", "handlers", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "tchannel", "go", "NUMBER", "Connection", "NUMBER", "dispatchInbound", "n", "t", "go", "pkg", "mod", "github", "NUMBER", "com", "uber", "tchannel", "go", "v", "NUMBER", "inbound", "NUMBER", "go", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "cf", "NUMBER", "ed", "NUMBER", "fdcb", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "ec", "NUMBER", "on", "yycptt", "fix", "list", "archived", "cli", "into", "NUMBER", "dee", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "badb", "NUMBER", "cf", "NUMBER", "be", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "cebc", "NUMBER", "aaf", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "on", "yycptt", "fix", "flaky", "cli", "test", "into", "ee", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "NUMBER", "aca", "NUMBER", "fafe", "NUMBER", "f", "NUMBER", "f", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "bd", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "ff", "NUMBER", "e", "NUMBER", "fe", "on", "yycptt", "task", "processor", "into", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "daf", "NUMBER", "ebcddf", "NUMBER", "fcc", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "aae", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "NUMBER", "cee", "NUMBER", "fbda", "NUMBER", "e", "NUMBER", "on", "non_retry_matching", "into", "NUMBER", "db", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "beca", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "e", "NUMBER", "db", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "on", "yycptt", "update", "license", "into", "NUMBER", "ed", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "df", "NUMBER", "e", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "ffecb", "NUMBER", "e", "NUMBER", "fab", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "fbe", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "on", "anish", "NUMBER", "aanish", "refresh", "workflow", "tasks", "into", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "e", "NUMBER", "bbda", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ac", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "a", "NUMBER", "f", "NUMBER", "on", "yycptt", "task", "processing", "job", "into", "afe", "NUMBER", "f", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "f", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "e", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "ffdee", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "df", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ba", "on", "domain_dlq", "into", "f", "NUMBER", "d", "NUMBER", "acebb", "NUMBER", "ac", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "a", "NUMBER", "fbee", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fa", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "cff", "NUMBER", "b", "on", "domain_queue_cleanup", "into", "d", "NUMBER", "cdc", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "bc", "NUMBER", "ffb", "NUMBER", "e", "NUMBER", "d", "NUMBER", "on", "get_dlq_messages", "into", "NUMBER", "fa", "NUMBER", "dee", "NUMBER", "a", "NUMBER", "cdc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dcbc", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "ebe", "NUMBER", "d", "NUMBER", "on", "yycptt", "run", "canary", "into", "f", "NUMBER", "ae", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "a", "NUMBER", "on", "enable", "modify", "cluster", "into", "e", "NUMBER", "c", "NUMBER", "ecda", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bae", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "af", "NUMBER", "c", "on", "master", "NUMBER", "Signal", "to", "self", "be", "logically", "the", "same", "thing", "as", "a", "marker", "NUMBER", "We", "need", "to", "fix", "the", "XDC", "logic", "to", "reapply", "certain", "markers", "the", "same", "way", "we", "reapply", "signals", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "dc", "NUMBER", "f", "NUMBER", "bff", "NUMBER", "a", "NUMBER", "af", "NUMBER", "cfe", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "on", "longquanzheng", "cli", "reset", "batch", "into", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "e", "NUMBER", "df", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "e", "NUMBER", "on", "uber", "master", "NUMBER", "Also", "emit", "domain", "specific", "metrics", "on", "non", "deterministic", "error", "Updates", "gocql", "to", "pull", "in", "LINK", "CLA", "assistant", "check", "LINK", "assistant", "NUMBER", "io", "pull", "badge", "sign", "LINK", "assistant", "NUMBER", "io", "uber", "cadence", "pullRequest", "NUMBER", "TAG", "All", "committers", "have", "sign", "the", "CLA", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "de", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "f", "NUMBER", "b", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "c", "NUMBER", "afdf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "on", "AngerM", "master", "into", "NUMBER", "aa", "NUMBER", "dcd", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "cbe", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "bda", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "on", "longquanzheng", "orderBy", "into", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "aeef", "NUMBER", "a", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "da", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "d", "NUMBER", "beadf", "NUMBER", "b", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "longquanzheng", "patch", "NUMBER", "into", "NUMBER", "d", "NUMBER", "bb", "NUMBER", "ec", "NUMBER", "cd", "NUMBER", "de", "NUMBER", "a", "NUMBER", "b", "NUMBER", "cb", "on", "master", "NUMBER", "assuming", "that", "corrupted", "state", "be", "rare", "the", "solution", "be", "fine", "plz", "also", "update", "IsWorkflowExecutionRunning", "in", "mutable", "state", "builder", "to", "return", "false", "in", "this", "case", "plz", "also", "update", "IsCurrentWorkflowGuaranteed", "in", "mutable", "state", "builder", "to", "return", "false", "in", "this", "case", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "c", "NUMBER", "dec", "NUMBER", "ee", "NUMBER", "da", "NUMBER", "be", "NUMBER", "d", "NUMBER", "c", "on", "longquanzheng", "ms", "scanner", "into", "d", "NUMBER", "a", "NUMBER", "db", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fe", "NUMBER", "b", "NUMBER", "df", "NUMBER", "bcf", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "e", "NUMBER", "ebcfa", "on", "longquanzheng", "server", "main", "into", "NUMBER", "c", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "fef", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "c", "NUMBER", "dea", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "da", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "on", "replicate", "activity", "start", "into", "NUMBER", "de", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "aeb", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "ef", "NUMBER", "a", "NUMBER", "e", "NUMBER", "dbb", "NUMBER", "ae", "NUMBER", "a", "NUMBER", "cba", "NUMBER", "e", "on", "longquanzheng", "cleanup", "idl", "into", "NUMBER", "ca", "NUMBER", "ccc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "edb", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "eda", "NUMBER", "e", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "bce", "NUMBER", "on", "ack", "level", "into", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "abefa", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "d", "NUMBER", "da", "NUMBER", "c", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "This", "PR", "add", "the", "required", "docker", "configuration", "for", "the", "auto", "setup", "image", "on", "Postgres", "CLA", "assistant", "check", "LINK", "assistant", "NUMBER", "io", "pull", "badge", "sign", "LINK", "assistant", "NUMBER", "io", "uber", "cadence", "pullRequest", "NUMBER", "TAG", "All", "committers", "have", "sign", "the", "CLA", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "cbd", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "on", "enmand", "dan", "improvement", "docker", "autosetup", "pg", "into", "cba", "NUMBER", "dfb", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "dad", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "c", "NUMBER", "db", "NUMBER", "e", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "fbb", "NUMBER", "c", "NUMBER", "b", "NUMBER", "on", "longquanzheng", "postgres", "NUMBER", "into", "b", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ec", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "fbeb", "NUMBER", "eeb", "NUMBER", "d", "NUMBER", "b", "NUMBER", "on", "uber", "master", "NUMBER", "How", "about", "to", "make", "ubercadence", "server", "master", "auto", "setup", "work", "with", "postgres", "sunfmin", "LINK", "should", "make", "the", "auto", "setup", "docker", "image", "work", "if", "you", "build", "it", "yourself", "with", "docker", "build", "NUMBER", "t", "REPO", "TAG_NAME", "build", "arg", "TARGET", "auto", "setup", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ebaafc", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "on", "longquanzheng", "postgres", "NUMBER", "into", "bf", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ebf", "NUMBER", "f", "NUMBER", "cc", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "baf", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "on", "longquanzheng", "frontendLogs", "into", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "e", "NUMBER", "bfe", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "uber", "master", "NUMBER", "FAIL", "TestSQLQueuePersistence", "TestDomainReplicationQueue", "NUMBER", "s", "queuePersistenceTest", "NUMBER", "go", "NUMBER", "Error", "Trace", "queuePersistenceTest", "NUMBER", "go", "NUMBER", "Error", "Not", "equal", "expected", "NUMBER", "actual", "NUMBER", "Test", "TestSQLQueuePersistence", "TestDomainReplicationQueue", "func", "TestSQLQueuePersistence", "t", "test", "NUMBER", "T", "s", "new", "pt", "NUMBER", "QueuePersistenceSuite", "s", "NUMBER", "TestBase", "pt", "NUMBER", "NewTestBaseWithSQL", "getTestClusterOption", "s", "NUMBER", "TestBase", "NUMBER", "Setup", "suite", "NUMBER", "Run", "t", "s", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "ef", "NUMBER", "aedded", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "fd", "NUMBER", "cbcd", "on", "retry", "task", "error", "into", "bf", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ebf", "NUMBER", "f", "NUMBER", "cc", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ee", "NUMBER", "e", "NUMBER", "d", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "b", "NUMBER", "aede", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "on", "yycptt", "history", "resource", "into", "NUMBER", "b", "NUMBER", "c", "NUMBER", "aabf", "NUMBER", "eca", "NUMBER", "caa", "NUMBER", "d", "NUMBER", "bacbea", "NUMBER", "on", "uber", "master", "NUMBER", "Everything", "looks", "good", "when", "run", "canary", "on", "my", "local", "machine", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "on", "word", "correct", "into", "dc", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "b", "NUMBER", "fb", "NUMBER", "on", "yycptt", "fix", "int", "race", "into", "NUMBER", "f", "NUMBER", "acc", "NUMBER", "adf", "NUMBER", "bc", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "on", "uber", "master", "NUMBER", "In", "sqlx", "with", "NameExec", "if", "there", "be", "more", "than", "one", "records", "to", "insert", "we", "will", "see", "error", "like", "InternalServiceError", "Message", "applyTasks", "fail", "NUMBER", "Failed", "to", "create", "replication", "tasks", "NUMBER", "Error", "InternalServiceError", "Message", "createReplicationTasks", "fail", "NUMBER", "Error", "pq", "get", "NUMBER", "parameters", "but", "the", "statement", "requires", "NUMBER", "This", "be", "because", "of", "a", "bug", "in", "sqlx", "library", "that", "it", "doesn", "t", "handle", "the", "X", "correctly", "when", "expanding", "the", "query", "template", "into", "real", "SQL", "NUMBER", "For", "example", "for", "NUMBER", "records", "It", "should", "be", "INSERT", "INTO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Instead", "of", "INSERT", "INTO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "current", "fix", "temporary", "in", "LINK", "in", "fork", "repo", "I", "submitted", "a", "PR", "to", "sqlx", "that", "should", "resolve", "this", "issue", "LINK", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "aba", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "yycptt", "improve", "es", "int", "test", "into", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "fad", "NUMBER", "d", "NUMBER", "ddd", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "fb", "NUMBER", "dee", "NUMBER", "beaf", "NUMBER", "bd", "NUMBER", "acb", "NUMBER", "on", "ndc", "can", "into", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "NUMBER", "af", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "ad", "NUMBER", "cb", "NUMBER", "d", "NUMBER", "b", "NUMBER", "aea", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "a", "on", "yycptt", "frontend", "resource", "into", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "acaf", "NUMBER", "aae", "NUMBER", "e", "NUMBER", "cbcce", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fda", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "ca", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "dfd", "NUMBER", "on", "andrewjdawson", "NUMBER", "removeStickyQuery", "into", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "df", "NUMBER", "fca", "NUMBER", "bc", "NUMBER", "bdd", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "c", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "f", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "on", "yycptt", "cli", "version", "into", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "ad", "NUMBER", "aaabaaeb", "NUMBER", "d", "NUMBER", "f", "NUMBER", "df", "NUMBER", "be", "NUMBER", "d", "NUMBER", "a", "NUMBER", "on", "NUMBER", "x", "patch", "into", "c", "NUMBER", "ac", "NUMBER", "aa", "NUMBER", "cd", "NUMBER", "b", "NUMBER", "afebffe", "NUMBER", "d", "NUMBER", "ae", "on", "NUMBER", "x", "NUMBER", "This", "be", "an", "attempt", "to", "add", "support", "for", "TLS", "MySQL", "we", "use", "RDS", "Aurora", "and", "require", "TLS", "support", "use", "the", "recently", "add", "TLS", "support", "for", "Cassandra", "NUMBER", "In", "the", "process", "it", "reuses", "the", "config", "in", "persistence", "for", "use", "in", "tool", "and", "remove", "ConnectParams", "NUMBER", "Feedback", "be", "welcome", "CLA", "assistant", "check", "LINK", "assistant", "NUMBER", "io", "pull", "badge", "sign", "LINK", "assistant", "NUMBER", "io", "uber", "cadence", "pullRequest", "NUMBER", "TAG", "All", "committers", "have", "sign", "the", "CLA", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "cbaf", "NUMBER", "b", "NUMBER", "eee", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "b", "NUMBER", "cce", "NUMBER", "d", "NUMBER", "e", "NUMBER", "on", "bjacobso", "ben", "mysql", "tls", "into", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "on", "uber", "master", "NUMBER", "bjacobso", "I", "think", "your", "change", "be", "easier", "if", "you", "can", "do", "it", "after", "I", "did", "this", "refactoring", "LINK", "venkat", "NUMBER", "Thanks", "for", "the", "feedback", "longquanzheng", "I", "will", "wait", "until", "your", "PR", "lands", "to", "continue", "NUMBER", "Overall", "though", "do", "the", "direction", "make", "sense", "We", "really", "need", "TLS", "in", "order", "to", "put", "Cadence", "in", "production", "NUMBER", "Overall", "though", "do", "the", "direction", "make", "sense", "The", "direction", "certainly", "looks", "reasonable", "to", "me", "NUMBER", "One", "thing", "that", "I", "don", "t", "like", "be", "the", "fact", "that", "the", "config", "takes", "a", "path", "to", "keyFile", "NUMBER", "Ideally", "this", "should", "be", "some", "sort", "of", "TLSCertProvider", "interface", "which", "behind", "the", "scenes", "has", "many", "implementations", "one", "of", "which", "could", "be", "a", "keyFile", "stored", "on", "disk", "NUMBER", "But", "for", "most", "production", "use", "cases", "the", "keyFile", "will", "likely", "be", "stored", "on", "a", "KeyServer", "and", "the", "implementation", "will", "fetch", "it", "and", "store", "it", "only", "in", "memory", "never", "on", "disk", "NUMBER", "This", "be", "orthogonal", "to", "what", "you", "be", "trying", "to", "achieve", "though", "and", "should", "be", "a", "separate", "task", "item", "NUMBER", "longquanzheng", "I", "see", "you", "have", "made", "good", "progress", "on", "your", "refactor", "NUMBER", "Should", "I", "wait", "for", "it", "to", "land", "in", "master", "or", "do", "you", "think", "it", "be", "in", "a", "stable", "spot", "for", "me", "to", "start", "make", "my", "change", "longquanzheng", "I", "see", "you", "have", "made", "good", "progress", "on", "your", "refactor", "NUMBER", "Should", "I", "wait", "for", "it", "to", "land", "in", "master", "or", "do", "you", "think", "it", "be", "in", "a", "stable", "spot", "for", "me", "to", "start", "make", "my", "change", "It", "should", "be", "in", "a", "good", "shape", "enough", "for", "just", "start", "work", "on", "top", "of", "it", "NUMBER", "But", "it", "s", "probably", "even", "easier", "for", "you", "if", "you", "wait", "for", "landing", "into", "master", "it", "shouldn", "t", "take", "a", "long", "time", "NUMBER", "As", "tomorrow", "be", "holiday", "I", "think", "venkat", "NUMBER", "will", "review", "my", "PR", "next", "week", "NUMBER", "Closing", "in", "favor", "of", "LINK", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "b", "NUMBER", "b", "NUMBER", "dad", "NUMBER", "on", "yycptt", "list", "cli", "improve", "into", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "bad", "NUMBER", "f", "NUMBER", "bbb", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "f", "NUMBER", "df", "NUMBER", "aed", "NUMBER", "ff", "NUMBER", "a", "NUMBER", "ab", "NUMBER", "fb", "NUMBER", "bf", "NUMBER", "bf", "on", "fix", "cancel", "activity", "notfound", "into", "NUMBER", "c", "NUMBER", "d", "NUMBER", "abbe", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "This", "PR", "be", "to", "refactor", "the", "persistence", "layer", "to", "make", "it", "easier", "and", "plugable", "to", "support", "different", "databases", "also", "refactor", "MySQL", "for", "the", "new", "interfaces", "More", "specifically", "NUMBER", "Add", "persistence", "interface", "for", "CLI", "Testing", "NUMBER", "Add", "interface", "for", "plugin", "NUMBER", "factory", "NUMBER", "Move", "MySQL", "to", "the", "sql", "extensions", "and", "implement", "refactor", "to", "factory", "NUMBER", "Refactor", "sql", "persistence", "test", "for", "MySQL", "postgres", "NUMBER", "NUMBER", "cadence", "server", "env", "development_postgres", "start", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "config", "env", "development_postgres", "zone", "configDir", "NUMBER", "config", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development_postgres", "NUMBER", "yaml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "error", "creating", "file", "based", "dynamic", "config", "client", "use", "no", "op", "config", "client", "instead", "NUMBER", "error", "error", "checking", "dynamic", "config", "file", "at", "path", "error", "stat", "no", "such", "file", "or", "directory", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "Created", "RPC", "dispatcher", "and", "listening", "service", "cadence", "frontend", "address", "NUMBER", "NUMBER", "logging", "call", "at", "rpc", "NUMBER", "go", "NUMBER", "Some", "TODOs", "will", "create", "other", "small", "diffs", "for", "them", "NUMBER", "LINK", "NUMBER", "LINK", "NUMBER", "LINK", "NUMBER", "LINK", "NUMBER", "LINK", "NUMBER", "LINK", "LINK", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "ddcae", "NUMBER", "fc", "NUMBER", "acb", "NUMBER", "ba", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "e", "NUMBER", "on", "longquanzheng", "postgres", "NUMBER", "into", "ac", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ec", "NUMBER", "eb", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "ddf", "NUMBER", "f", "on", "uber", "master", "NUMBER", "venkat", "NUMBER", "Can", "you", "take", "a", "look", "at", "this", "as", "well", "LINK", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "ddf", "NUMBER", "d", "NUMBER", "be", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "fda", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "on", "anish", "NUMBER", "aanish", "add", "attempt", "into", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "on", "uber", "master", "NUMBER", "See", "comments", "in", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "a", "NUMBER", "af", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "aa", "NUMBER", "a", "NUMBER", "on", "NUMBER", "x", "patch", "into", "b", "NUMBER", "db", "NUMBER", "ba", "NUMBER", "c", "NUMBER", "df", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "afc", "NUMBER", "f", "NUMBER", "c", "on", "NUMBER", "x", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "af", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ee", "NUMBER", "e", "NUMBER", "ddb", "NUMBER", "bc", "NUMBER", "edf", "NUMBER", "on", "yycptt", "vis", "archiver", "guide", "into", "NUMBER", "bd", "NUMBER", "eafe", "NUMBER", "a", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ceece", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "d", "NUMBER", "dd", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "on", "yycptt", "vis", "start", "time", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "bad", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bde", "NUMBER", "b", "NUMBER", "dac", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "fc", "NUMBER", "a", "NUMBER", "dcfde", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "cd", "NUMBER", "e", "NUMBER", "e", "NUMBER", "c", "NUMBER", "eeba", "NUMBER", "f", "on", "yycptt", "fix", "archival", "metrics", "into", "NUMBER", "e", "NUMBER", "f", "NUMBER", "de", "NUMBER", "eff", "NUMBER", "f", "NUMBER", "ead", "NUMBER", "dad", "NUMBER", "cf", "NUMBER", "b", "NUMBER", "ed", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "ff", "NUMBER", "a", "NUMBER", "ef", "NUMBER", "dd", "NUMBER", "c", "NUMBER", "b", "on", "pollmutablestate", "into", "NUMBER", "e", "NUMBER", "f", "NUMBER", "de", "NUMBER", "eff", "NUMBER", "f", "NUMBER", "ead", "NUMBER", "dad", "NUMBER", "cf", "NUMBER", "b", "NUMBER", "ed", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "bebd", "NUMBER", "on", "yycptt", "vis", "archival", "when", "wf", "close", "into", "NUMBER", "ea", "NUMBER", "fdf", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "fb", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ce", "on", "resend", "can", "into", "NUMBER", "ea", "NUMBER", "fdf", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "fb", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "f", "NUMBER", "beef", "NUMBER", "acfe", "NUMBER", "a", "NUMBER", "e", "NUMBER", "edc", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "d", "on", "handle", "can", "resend", "into", "e", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "b", "NUMBER", "dec", "NUMBER", "a", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "d", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "da", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "d", "on", "fix", "sync", "activity", "into", "d", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "ad", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "db", "NUMBER", "d", "NUMBER", "d", "NUMBER", "fe", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "de", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fb", "NUMBER", "on", "fix", "clientbean", "into", "NUMBER", "ed", "NUMBER", "fafdeb", "NUMBER", "accca", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "on", "master", "NUMBER", "let", "us", "keep", "the", "workflow", "status", "check", "and", "discard", "the", "activity", "version", "thing", "for", "now", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "feaf", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "on", "activity", "version", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ccc", "NUMBER", "ae", "NUMBER", "on", "master", "NUMBER", "few", "things", "need", "to", "be", "change", "NUMBER", "when", "doing", "workflow", "reset", "on", "active", "side", "also", "re", "apply", "the", "activity", "progress", "if", "applicable", "NUMBER", "for", "workflow", "reset", "cross", "DC", "bundle", "the", "above", "activity", "progress", "sync", "activity", "along", "with", "the", "workflow", "reset", "batch", "NUMBER", "for", "cross", "DC", "conflict", "resolution", "mutable", "state", "rebuild", "active", "side", "whenever", "sending", "the", "first", "batch", "of", "events", "which", "has", "version", "change", "should", "also", "include", "all", "activity", "progress", "sync", "activity", "as", "part", "of", "the", "bundle", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "afbff", "NUMBER", "bc", "NUMBER", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "bf", "NUMBER", "df", "NUMBER", "f", "on", "yycptt", "improve", "retention", "msg", "into", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "eae", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "fa", "NUMBER", "dc", "NUMBER", "ba", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "dbaaa", "NUMBER", "a", "NUMBER", "fdb", "NUMBER", "ffc", "NUMBER", "ac", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "on", "reapply", "dedup", "into", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "dff", "NUMBER", "d", "NUMBER", "dd", "NUMBER", "efefff", "NUMBER", "fe", "NUMBER", "dbe", "NUMBER", "d", "NUMBER", "f", "NUMBER", "on", "fix", "lint", "into", "NUMBER", "a", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ad", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "c", "NUMBER", "eae", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "d", "on", "yycptt", "vis", "archival", "tag", "and", "dc", "into", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "fc", "NUMBER", "cb", "NUMBER", "c", "NUMBER", "d", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "cce", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "f", "NUMBER", "f", "on", "mysql", "version", "into", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "bad", "NUMBER", "a", "NUMBER", "ec", "NUMBER", "c", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "ecc", "NUMBER", "c", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "on", "version", "compare", "into", "NUMBER", "ec", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "eda", "NUMBER", "c", "NUMBER", "f", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "on", "yycptt", "eventstore", "version", "into", "a", "NUMBER", "ec", "NUMBER", "beab", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ef", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "ee", "NUMBER", "fc", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "on", "resend", "fix", "into", "NUMBER", "b", "NUMBER", "da", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "cdbcdb", "NUMBER", "dab", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "bb", "NUMBER", "ebfd", "NUMBER", "bc", "NUMBER", "bd", "NUMBER", "ea", "NUMBER", "bbd", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "on", "transfer", "active", "processing", "refactoring", "into", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "fc", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "ddf", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ecaea", "NUMBER", "ba", "NUMBER", "b", "on", "fix", "workflow", "state", "into", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "decc", "NUMBER", "c", "NUMBER", "efce", "NUMBER", "fd", "NUMBER", "df", "NUMBER", "c", "NUMBER", "f", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "eccfb", "on", "fix", "checking", "into", "fe", "NUMBER", "bd", "NUMBER", "eec", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "aacf", "NUMBER", "c", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "ca", "NUMBER", "bd", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "on", "sort", "imports", "into", "NUMBER", "cd", "NUMBER", "ffafdbaae", "NUMBER", "e", "NUMBER", "a", "NUMBER", "da", "NUMBER", "f", "NUMBER", "d", "NUMBER", "af", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Right", "now", "the", "logic", "in", "decisionHandler", "be", "nomothetic", "NUMBER", "We", "need", "to", "break", "the", "methods", "up", "NUMBER", "Also", "decision", "task", "timeout", "logic", "should", "live", "here", "NUMBER", "Hi", "everyone", "First", "of", "all", "I", "want", "to", "thank", "you", "for", "this", "amazing", "project", "NUMBER", "I", "start", "playing", "with", "cadence", "a", "couple", "of", "days", "ago", "and", "I", "m", "impressed", "NUMBER", "One", "thing", "that", "I", "m", "struggling", "to", "understand", "be", "the", "queueing", "in", "task", "lists", "and", "the", "criteria", "which", "be", "use", "by", "cadence", "to", "decide", "when", "and", "use", "which", "worker", "to", "execute", "a", "specific", "activity", "NUMBER", "In", "the", "documentation", "I", "see", "the", "following", "A", "worker", "polls", "for", "a", "message", "only", "when", "it", "has", "spare", "capacity", "so", "it", "never", "gets", "overloaded", "NUMBER", "Automatic", "load", "balancing", "across", "a", "large", "number", "of", "workers", "NUMBER", "Keeping", "that", "in", "mind", "I", "created", "a", "workflow", "that", "launches", "a", "task", "which", "uses", "NUMBER", "CPU", "for", "NUMBER", "seconds", "on", "all", "cores", "NUMBER", "I", "then", "start", "NUMBER", "workers", "and", "start", "the", "cpu", "intensive", "workflow", "NUMBER", "times", "NUMBER", "Workflow", "NUMBER", "be", "launched", "on", "worker", "NUMBER", "while", "workflow", "NUMBER", "be", "launched", "on", "worker", "NUMBER", "The", "weird", "thing", "be", "now", "both", "activities", "be", "executed", "immediately", "on", "worker", "NUMBER", "I", "expected", "the", "worker", "to", "first", "finish", "activity", "NUMBER", "and", "then", "activity", "NUMBER", "In", "a", "second", "example", "I", "created", "a", "workflow", "which", "launches", "an", "activity", "for", "every", "CPU", "core", "NUMBER", "Each", "of", "these", "activities", "again", "generate", "NUMBER", "CPU", "load", "for", "NUMBER", "seconds", "NUMBER", "I", "then", "again", "launch", "NUMBER", "workers", "and", "trigger", "the", "workflow", "NUMBER", "times", "NUMBER", "In", "this", "example", "workflow", "NUMBER", "be", "start", "on", "worker", "NUMBER", "and", "workflow", "NUMBER", "be", "start", "on", "worker", "NUMBER", "Now", "NUMBER", "activities", "be", "executed", "use", "worker", "NUMBER", "and", "the", "other", "NUMBER", "activities", "be", "executed", "use", "worker", "NUMBER", "Here", "again", "I", "expected", "the", "activities", "to", "be", "executed", "one", "by", "one", "since", "the", "capacity", "of", "the", "workers", "be", "NUMBER", "no", "So", "my", "question", "be", "Is", "be", "possible", "to", "configure", "Cadence", "to", "schedule", "activities", "only", "if", "enough", "CPU", "and", "memory", "be", "available", "What", "be", "the", "criteria", "for", "a", "worker", "to", "be", "overloaded", "as", "describe", "in", "the", "documentation", "Thank", "you", "and", "best", "regards", "Thank", "you", "for", "the", "interest", "in", "Cadence", "NUMBER", "You", "have", "to", "specify", "the", "limit", "on", "how", "many", "parallel", "activities", "a", "worker", "be", "allow", "to", "pick", "up", "NUMBER", "The", "default", "limit", "be", "pretty", "high", "that", "s", "why", "you", "see", "a", "single", "worker", "picking", "them", "up", "NUMBER", "The", "configuration", "parameter", "be", "WorkerOptions", "NUMBER", "MaxConcurrentActivityExecutionSize", "NUMBER", "Hi", "mfateev", "thanks", "for", "your", "quick", "response", "NUMBER", "Ah", "so", "the", "workers", "be", "limited", "by", "WorkerOptions", "NUMBER", "MaxConcurrentActivityExecutionSize", "and", "not", "by", "system", "resources", "such", "as", "CPU", "and", "memory", "Is", "there", "a", "way", "to", "achieve", "what", "I", "m", "trying", "to", "do", "allow", "workers", "to", "pick", "up", "work", "based", "on", "system", "resources", "wxing", "NUMBER", "ah", "okay", "that", "t", "what", "I", "suspected", "thanks", "for", "your", "reply", "Do", "you", "know", "of", "a", "way", "to", "solve", "this", "by", "e", "NUMBER", "g", "NUMBER", "combining", "it", "with", "docker", "swarm", "Say", "execute", "resource", "intensive", "activities", "in", "a", "docker", "container", "and", "let", "docker", "swarm", "analyze", "manage", "system", "resources", "NUMBER", "Ah", "so", "the", "number", "of", "concurrent", "activity", "executions", "be", "static", "for", "a", "specific", "worker", "I", "see", "NUMBER", "But", "wouldn", "t", "it", "be", "possible", "to", "dynamically", "start", "and", "stop", "workers", "e", "NUMBER", "g", "NUMBER", "use", "the", "CLI", "depending", "on", "docker", "swarm", "system", "resources", "monitoring", "E", "NUMBER", "g", "NUMBER", "a", "simple", "script", "which", "polls", "for", "docker", "swarm", "memory", "usage", "and", "if", "memory", "be", "available", "it", "spins", "up", "additional", "Cadence", "workers", "NUMBER", "The", "idea", "to", "dynamically", "increase", "decrease", "of", "coroutines", "threads", "in", "go", "java", "client", "lib", "be", "certainly", "possible", "but", "in", "reality", "after", "proper", "load", "test", "assuming", "that", "user", "will", "load", "test", "their", "system", "based", "on", "different", "use", "case", "this", "functionality", "will", "be", "use", "less", "frequently", "NUMBER", "so", "to", "sum", "up", "NUMBER", "since", "this", "be", "not", "a", "high", "priority", "issue", "this", "feature", "be", "not", "currently", "on", "our", "roadmap", "NUMBER", "any", "contribution", "will", "be", "welcomed", "Alright", "makes", "sense", "thanks", "a", "lot", "wxing", "NUMBER", "I", "m", "closing", "this", "issue", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdd", "NUMBER", "ee", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "c", "NUMBER", "aa", "on", "rename", "decision", "timeout", "value", "into", "NUMBER", "bf", "NUMBER", "e", "NUMBER", "deb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "fbbd", "NUMBER", "c", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "daa", "NUMBER", "ba", "NUMBER", "eec", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "on", "deprecate", "timer", "builder", "into", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "beba", "NUMBER", "c", "NUMBER", "da", "NUMBER", "dbce", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "fe", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "a", "NUMBER", "bb", "NUMBER", "dfd", "NUMBER", "e", "on", "deprecate", "mockery", "into", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "deff", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "b", "NUMBER", "eaec", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "cd", "on", "do", "not", "initialize", "client", "if", "cluster", "not", "enable", "into", "NUMBER", "ec", "NUMBER", "b", "NUMBER", "b", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "ffabc", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "cbbb", "NUMBER", "e", "NUMBER", "ebadb", "NUMBER", "db", "NUMBER", "on", "merge", "task", "generation", "into", "ac", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "ac", "NUMBER", "a", "NUMBER", "abe", "NUMBER", "fbb", "NUMBER", "ab", "on", "master", "NUMBER", "Set", "default", "event", "store", "version", "to", "v", "NUMBER", "in", "apply", "events", "NUMBER", "This", "change", "be", "needed", "before", "service", "upgrade", "to", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "on", "NUMBER", "x", "patch", "into", "ecdaf", "NUMBER", "ce", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "da", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "on", "NUMBER", "x", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "on", "timer", "sequence", "into", "NUMBER", "aae", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "dbb", "NUMBER", "a", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "abeaa", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "on", "timer", "deterministic", "sort", "into", "d", "NUMBER", "b", "NUMBER", "acfa", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "aed", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "ba", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "cccdc", "NUMBER", "df", "NUMBER", "f", "NUMBER", "f", "NUMBER", "de", "NUMBER", "eceb", "NUMBER", "c", "NUMBER", "fc", "on", "fix", "timer", "into", "NUMBER", "ae", "NUMBER", "adb", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "a", "NUMBER", "on", "master", "NUMBER", "Would", "it", "be", "possible", "to", "make", "the", "buildkite", "pipeline", "public", "That", "would", "allow", "external", "contributors", "to", "access", "build", "report", "NUMBER", "Buildkite", "announced", "support", "for", "public", "build", "pages", "LINK", "public", "build", "pages", "for", "open", "source", "back", "in", "February", "NUMBER", "It", "can", "be", "set", "up", "here", "LINK", "admin", "privileges", "needed", "NUMBER", "Amazing", "Thank", "you", "clap", "clap", "clap", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "fbd", "NUMBER", "df", "NUMBER", "f", "NUMBER", "ce", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "fefcf", "NUMBER", "c", "on", "schema", "version", "into", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "afae", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "I", "m", "use", "the", "command", "until", "cadence", "domain", "CADENCE_CLI_DOMAIN", "domain", "describe", "cadence", "domain", "CADENCE_CLI_DOMAIN", "domain", "register", "as", "a", "test", "for", "when", "cadence", "has", "start", "and", "ready", "NUMBER", "It", "looks", "like", "this", "command", "actually", "halts", "cadence", "if", "it", "be", "in", "the", "middle", "of", "initializing", "cassandra", "NUMBER", "This", "be", "error", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Schema", "update", "from", "NUMBER", "to", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UpdateSchemeTask", "do", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "gocql", "unable", "to", "dial", "control", "conn", "NUMBER", "dial", "tcp", "NUMBER", "NUMBER", "connect", "connection", "refused", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "error", "creating", "Keyspace", "gocql", "unable", "to", "create", "session", "control", "unable", "to", "connect", "to", "initial", "hosts", "dial", "tcp", "NUMBER", "NUMBER", "connect", "connection", "refused", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "error", "fail", "to", "connect", "to", "NUMBER", "NUMBER", "due", "to", "error", "Keyspace", "cadence_", "visibility", "do", "not", "exist", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "error", "fail", "to", "connect", "to", "NUMBER", "NUMBER", "due", "to", "error", "Keyspace", "cadence_", "visibility", "do", "not", "exist", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "no", "connections", "were", "made", "when", "creating", "the", "session", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "error", "fail", "to", "connect", "to", "NUMBER", "NUMBER", "due", "to", "error", "Keyspace", "cadence_", "visibility", "do", "not", "exist", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "error", "fail", "to", "connect", "to", "NUMBER", "NUMBER", "due", "to", "error", "Keyspace", "cadence_", "visibility", "do", "not", "exist", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "no", "connections", "were", "made", "when", "creating", "the", "session", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "config", "env", "docker", "zone", "configDir", "etc", "cadence", "config", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "etc", "cadence", "config", "docker", "NUMBER", "yaml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "error", "fail", "to", "connect", "to", "NUMBER", "NUMBER", "due", "to", "error", "Keyspace", "cadence_", "visibility", "do", "not", "exist", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "error", "fail", "to", "connect", "to", "NUMBER", "NUMBER", "due", "to", "error", "Keyspace", "cadence_", "visibility", "do", "not", "exist", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Incompatible", "versionsunable", "to", "create", "CQL", "Client", "no", "connections", "were", "made", "when", "creating", "the", "session", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Command", "exited", "with", "error", "exit", "status", "NUMBER", "The", "problem", "be", "in", "this", "line", "from", "my", "Terraform", "automation", "LINK", "k", "NUMBER", "s", "modules", "blob", "master", "modules", "cadence", "server", "main", "NUMBER", "tf", "L", "NUMBER", "wxing", "NUMBER", "Thanks", "for", "troubleshooting", "this", "NUMBER", "As", "discussed", "I", "believe", "you", "re", "correct", "in", "thinking", "that", "this", "problem", "was", "actually", "cause", "by", "the", "Cassandra", "be", "unstable", "around", "the", "same", "time", "as", "the", "schema", "be", "be", "created", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "eef", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "da", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "on", "mockery", "deprecation", "into", "NUMBER", "d", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "ee", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ba", "NUMBER", "fb", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "ead", "NUMBER", "e", "NUMBER", "b", "NUMBER", "cf", "NUMBER", "bca", "NUMBER", "on", "update", "kafka", "client", "into", "NUMBER", "da", "NUMBER", "ebfa", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "on", "master", "NUMBER", "Related", "to", "this", "but", "from", "a", "totally", "different", "perspective", "For", "service", "protection", "we", "need", "the", "ability", "to", "pause", "task", "processing", "given", "a", "domain", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "fea", "NUMBER", "dd", "NUMBER", "fa", "NUMBER", "de", "NUMBER", "adf", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "e", "on", "task", "processing", "context", "into", "NUMBER", "e", "NUMBER", "af", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "bd", "NUMBER", "bce", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "cf", "NUMBER", "c", "NUMBER", "da", "NUMBER", "abf", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "fd", "NUMBER", "dad", "NUMBER", "f", "NUMBER", "on", "mutable", "state", "check", "into", "f", "NUMBER", "adc", "NUMBER", "cb", "NUMBER", "ea", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "b", "NUMBER", "dab", "NUMBER", "cb", "NUMBER", "d", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "c", "NUMBER", "af", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "f", "NUMBER", "d", "NUMBER", "eb", "on", "domain", "into", "df", "NUMBER", "cca", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "eb", "NUMBER", "a", "NUMBER", "d", "NUMBER", "da", "NUMBER", "c", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "be", "NUMBER", "ecf", "NUMBER", "fdd", "NUMBER", "e", "NUMBER", "edb", "NUMBER", "cbe", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "a", "on", "improve", "domain", "cache", "error", "handle", "into", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "fae", "NUMBER", "d", "NUMBER", "a", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "ffa", "NUMBER", "aa", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "bef", "NUMBER", "b", "NUMBER", "on", "flush", "buffer", "when", "timeout", "terminate", "into", "NUMBER", "e", "NUMBER", "abe", "NUMBER", "c", "NUMBER", "be", "NUMBER", "ef", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "c", "NUMBER", "dbf", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "ad", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "ce", "NUMBER", "ad", "on", "fix", "permission", "into", "NUMBER", "ddc", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "NUMBER", "eaab", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Hey", "folks", "NUMBER", "Trying", "to", "run", "the", "latest", "server", "Docker", "image", "hosted", "on", "DockerHub", "tag", "NUMBER", "NUMBER", "Looks", "like", "there", "might", "be", "an", "issue", "with", "the", "entrypoint", "script", "not", "be", "marked", "as", "executable", "or", "something", "Tags", "NUMBER", "NUMBER", "and", "NUMBER", "all", "have", "this", "issue", "bash", "docker", "run", "it", "rm", "ubercadence", "server", "NUMBER", "bin", "bash", "start", "cadence", "NUMBER", "sh", "Permission", "denied", "So", "I", "walked", "back", "in", "time", "and", "find", "that", "the", "latest", "NUMBER", "tag", "NUMBER", "be", "fine", "bash", "docker", "run", "it", "rm", "ubercadence", "server", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "config", "env", "docker", "zone", "configDir", "etc", "cadence", "config", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "etc", "cadence", "config", "docker", "NUMBER", "yaml", "rest", "snipped", "I", "ll", "be", "use", "NUMBER", "in", "my", "k", "NUMBER", "s", "cluster", "for", "now", "but", "just", "wanted", "to", "raise", "a", "red", "flag", "about", "those", "latest", "image", "release", "NUMBER", "I", "d", "rather", "use", "them", "but", "they", "don", "t", "seem", "to", "execute", "as", "expected", "NUMBER", "Thank", "you", "NUMBER", "Closing", "this", "as", "the", "bad", "images", "have", "be", "remove", "and", "new", "images", "be", "publish", "NUMBER", "fix", "in", "LINK", "bypassing", "server", "be", "a", "little", "more", "unfriendly", "user", "need", "to", "pass", "domianID", "and", "numShards", "NUMBER", "Let", "s", "have", "the", "minimum", "fix", "for", "now", "NUMBER", "We", "can", "create", "a", "new", "issue", "for", "it", "and", "see", "if", "we", "still", "want", "to", "do", "that", "way", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "d", "NUMBER", "aca", "NUMBER", "bef", "NUMBER", "ef", "NUMBER", "a", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "f", "NUMBER", "on", "fix", "admin", "cli", "into", "NUMBER", "b", "NUMBER", "baa", "NUMBER", "e", "NUMBER", "faef", "NUMBER", "d", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "on", "remove", "unnecessary", "insertion", "timer", "builder", "into", "NUMBER", "f", "NUMBER", "c", "NUMBER", "abc", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "efe", "NUMBER", "on", "master", "NUMBER", "I", "ve", "find", "some", "spelling", "issue", "with", "aspell", "NUMBER", "CLA", "assistant", "check", "LINK", "assistant", "NUMBER", "io", "pull", "badge", "sign", "LINK", "assistant", "NUMBER", "io", "uber", "cadence", "pullRequest", "NUMBER", "TAG", "All", "committers", "have", "sign", "the", "CLA", "NUMBER", "wxing", "NUMBER", "do", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "bee", "NUMBER", "fd", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "on", "workflow", "reset", "rewrite", "into", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "d", "NUMBER", "bee", "NUMBER", "d", "NUMBER", "b", "NUMBER", "bdd", "NUMBER", "bac", "on", "master", "NUMBER", "It", "common", "scenario", "when", "a", "workflow", "should", "be", "start", "with", "new", "parameters", "NUMBER", "Terminating", "and", "then", "starting", "workflow", "has", "race", "conditions", "NUMBER", "Adding", "terminateIfRunning", "WorkflowIDReusePolicy", "would", "allow", "to", "eliminate", "race", "conditions", "NUMBER", "wxing", "NUMBER", "Is", "it", "still", "available", "to", "be", "pick", "up", "If", "yes", "I", "would", "love", "to", "take", "it", "NUMBER", "Yes", "I", "m", "not", "aware", "about", "anyone", "work", "on", "this", "NUMBER", "Hi", "mfateev", "wxing", "NUMBER", "apologies", "for", "the", "delayed", "response", "NUMBER", "I", "was", "trying", "to", "wrap", "my", "head", "around", "the", "cadence", "server", "and", "client", "codebase", "NUMBER", "As", "I", "understood", "it", "the", "following", "steps", "be", "needed", "NUMBER", "Append", "the", "new", "policy", "TerminateIfRunning", "in", "enum", "WorkflowIdReusePolicy", "in", "shared", "NUMBER", "rift", "LINK", "idl", "blob", "master", "thrift", "shared", "NUMBER", "rift", "L", "NUMBER", "file", "NUMBER", "NUMBER", "Add", "a", "new", "workflow", "reuse", "policy", "in", "the", "internal", "client", "NUMBER", "go", "LINK", "go", "cadence", "client", "blob", "master", "internal", "client", "NUMBER", "go", "L", "NUMBER", "and", "client", "client", "NUMBER", "go", "LINK", "go", "cadence", "client", "blob", "master", "client", "client", "NUMBER", "go", "L", "NUMBER", "NUMBER", "Make", "other", "relevant", "change", "in", "the", "client", "to", "send", "the", "new", "policy", "while", "creating", "workflows", "NUMBER", "NUMBER", "Handle", "the", "new", "policy", "in", "the", "cadence", "server", "canary", "client", "NUMBER", "go", "LINK", "and", "do", "the", "steps", "necessary", "to", "ensure", "that", "exist", "workflow", "be", "terminated", "before", "creating", "a", "new", "one", "NUMBER", "Obviously", "the", "last", "step", "be", "the", "critical", "one", "NUMBER", "I", "will", "try", "to", "further", "specify", "the", "exact", "sub", "steps", "needed", "in", "the", "final", "part", "NUMBER", "I", "know", "it", "s", "a", "lot", "to", "ask", "for", "but", "it", "would", "be", "a", "big", "help", "if", "you", "guys", "can", "point", "me", "to", "any", "design", "high", "level", "architecture", "document", "or", "something", "else", "that", "would", "help", "me", "to", "have", "a", "better", "understanding", "of", "the", "cadence", "server", "NUMBER", "NUMBER", "canary", "be", "a", "process", "use", "to", "test", "availability", "of", "the", "service", "NUMBER", "The", "actual", "implementation", "logic", "be", "in", "the", "LINK", "L", "NUMBER", "samarabbas", "Would", "you", "be", "able", "to", "give", "the", "sequence", "of", "steps", "needed", "to", "change", "the", "historyEngine", "vancexu", "plz", "provide", "some", "details", "about", "signal", "with", "start", "that", "code", "should", "really", "be", "cleaned", "up", "my", "understanding", "the", "followings", "should", "be", "do", "NUMBER", "merge", "start", "workflow", "execution", "with", "signal", "with", "start", "workflow", "execution", "underlying", "business", "logic", "NUMBER", "add", "the", "corresponding", "terminal", "start", "policy", "to", "workflow", "ID", "reuse", "policy", "NUMBER", "treat", "terminal", "start", "something", "similar", "to", "signal", "with", "start", "I", "would", "also", "consider", "LINK", "An", "open", "question", "if", "input", "can", "be", "update", "NUMBER", "I", "think", "it", "should", "be", "allow", "for", "crons", "which", "be", "waiting", "for", "the", "first", "decision", "task", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "d", "NUMBER", "cee", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ccac", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "af", "on", "fix", "worker", "init", "into", "NUMBER", "b", "NUMBER", "e", "NUMBER", "efd", "NUMBER", "d", "NUMBER", "e", "NUMBER", "bdd", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ec", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "kafka", "ndc", "into", "dccfa", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "b", "NUMBER", "baac", "NUMBER", "ec", "NUMBER", "a", "NUMBER", "eb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ca", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "afe", "NUMBER", "f", "NUMBER", "on", "remove", "domain", "v", "NUMBER", "schema", "into", "ef", "NUMBER", "cb", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fd", "NUMBER", "c", "NUMBER", "b", "NUMBER", "aeea", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ada", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "baa", "NUMBER", "dc", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "e", "NUMBER", "on", "fix", "test", "bug", "into", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "dc", "NUMBER", "caab", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "ee", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "dc", "NUMBER", "df", "NUMBER", "f", "NUMBER", "a", "on", "bugfix", "into", "a", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "feea", "NUMBER", "bfc", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "One", "year", "ago", "I", "introduce", "History", "Events", "V", "NUMBER", "with", "more", "functionality", "forking", "branch", "and", "performance", "remove", "LWT", "NUMBER", "However", "we", "had", "to", "keep", "V", "NUMBER", "run", "for", "backward", "compatibility", "NUMBER", "After", "one", "year", "we", "have", "find", "that", "there", "be", "no", "more", "workflows", "run", "with", "V", "NUMBER", "It", "s", "time", "to", "remove", "the", "V", "NUMBER", "code", "and", "the", "logic", "of", "backward", "compatibility", "NUMBER", "TODO", "NUMBER", "Rename", "V", "NUMBER", "interface", "to", "get", "rid", "of", "V", "NUMBER", "since", "there", "be", "no", "V", "NUMBER", "anymore", "NUMBER", "NUMBER", "Make", "SetHistoryTree", "transparent", "in", "mutableStateBuilder", "to", "make", "it", "more", "easy", "to", "maintain", "NUMBER", "wxing", "NUMBER", "I", "think", "they", "be", "a", "little", "bit", "different", "NUMBER", "The", "history", "iterator", "use", "by", "archiver", "needs", "the", "ability", "to", "get", "current", "state", "of", "the", "iterator", "and", "create", "a", "new", "iterator", "based", "on", "some", "previous", "state", "NUMBER", "I", "don", "t", "think", "the", "paging", "iterator", "support", "that", "NUMBER", "The", "functionality", "be", "needed", "because", "archiver", "workflow", "needs", "to", "periodically", "record", "its", "current", "progress", "and", "resume", "from", "last", "saved", "state", "if", "worker", "restarts", "NUMBER", "There", "be", "some", "other", "issue", "like", "keep", "current", "iterator", "state", "when", "error", "occur", "performing", "lookahead", "for", "nextPageToken", "etc", "NUMBER", "If", "you", "want", "we", "can", "talk", "about", "it", "in", "more", "detail", "offline", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "cdd", "NUMBER", "ef", "NUMBER", "cacd", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "on", "longquanzheng", "eventsV", "NUMBER", "into", "dda", "NUMBER", "d", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "adce", "NUMBER", "edb", "NUMBER", "f", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fdcaa", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "dd", "NUMBER", "bbfde", "NUMBER", "on", "deprecate", "domain", "v", "NUMBER", "into", "NUMBER", "d", "NUMBER", "ffbd", "NUMBER", "eaba", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "cf", "NUMBER", "fee", "NUMBER", "aa", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "ff", "NUMBER", "on", "admin", "domain", "cli", "into", "e", "NUMBER", "cfef", "NUMBER", "cc", "NUMBER", "a", "NUMBER", "c", "NUMBER", "bcd", "NUMBER", "edd", "NUMBER", "eda", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Currently", "if", "a", "customer", "wants", "to", "update", "the", "cron", "schedule", "on", "a", "workflow", "they", "have", "to", "terminate", "and", "start", "the", "workflow", "with", "the", "new", "cron", "schedule", "NUMBER", "We", "should", "support", "this", "use", "case", "and", "allow", "customers", "to", "update", "the", "cron", "schedule", "without", "terminating", "it", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "aebd", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ebda", "on", "fix", "into", "e", "NUMBER", "ebebc", "NUMBER", "c", "NUMBER", "bffbddd", "NUMBER", "b", "NUMBER", "c", "NUMBER", "bea", "on", "master", "NUMBER", "I", "m", "not", "sure", "if", "it", "be", "relate", "NUMBER", "But", "this", "be", "what", "I", "ve", "get", "run", "docker", "compose", "for", "the", "first", "time", "cadence_", "NUMBER", "level", "info", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "cadence", "system", "domain", "do", "not", "exist", "attempting", "to", "register", "domain", "service", "cadence", "worker", "logging", "call", "at", "service", "NUMBER", "go", "NUMBER", "cadence_", "NUMBER", "level", "error", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "Operation", "fail", "with", "internal", "error", "NUMBER", "service", "cadence", "worker", "error", "InternalServiceError", "Message", "CreateDomain", "operation", "fail", "because", "of", "uuid", "collision", "NUMBER", "metric", "scope", "NUMBER", "logging", "call", "at", "persistenceMetricClients", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Error", "n", "t", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "common", "persistence", "NUMBER", "metadataPersistenceClient", "NUMBER", "updateErrorMetric", "n", "t", "cadence", "common", "persistence", "persistenceMetricClients", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "common", "persistence", "NUMBER", "metadataPersistenceClient", "NUMBER", "CreateDomain", "n", "t", "cadence", "common", "persistence", "persistenceMetricClients", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "worker", "NUMBER", "Service", "NUMBER", "registerSystemDomain", "n", "t", "cadence", "service", "worker", "service", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "worker", "NUMBER", "Service", "NUMBER", "ensureSystemDomainExists", "n", "t", "cadence", "service", "worker", "service", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "worker", "NUMBER", "Service", "NUMBER", "Start", "n", "t", "cadence", "service", "worker", "service", "NUMBER", "go", "NUMBER", "nmain", "NUMBER", "execute", "n", "t", "cadence", "cmd", "server", "server", "NUMBER", "go", "NUMBER", "cadence_", "NUMBER", "level", "fatal", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "msg", "fail", "to", "register", "system", "domain", "service", "cadence", "worker", "error", "InternalServiceError", "Message", "CreateDomain", "operation", "fail", "because", "of", "uuid", "collision", "NUMBER", "logging", "call", "at", "service", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Fatal", "n", "t", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "worker", "NUMBER", "Service", "NUMBER", "registerSystemDomain", "n", "t", "cadence", "service", "worker", "service", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "worker", "NUMBER", "Service", "NUMBER", "ensureSystemDomainExists", "n", "t", "cadence", "service", "worker", "service", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "worker", "NUMBER", "Service", "NUMBER", "Start", "n", "t", "cadence", "service", "worker", "service", "NUMBER", "go", "NUMBER", "nmain", "NUMBER", "execute", "n", "t", "cadence", "cmd", "server", "server", "NUMBER", "go", "NUMBER", "cadence_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Command", "exited", "with", "error", "exit", "status", "NUMBER", "docker_cadence_", "NUMBER", "exited", "with", "code", "NUMBER", "I", "m", "busy", "evaluating", "cadence", "and", "was", "happy", "to", "see", "docker", "compose", "file", "but", "they", "don", "t", "actually", "work", "NUMBER", "fyi", "I", "get", "similar", "error", "with", "mysql", "NUMBER", "CreateDomain", "operation", "fail", "because", "of", "uuid", "collision", "be", "cause", "by", "a", "recent", "change", "NUMBER", "It", "was", "fix", "by", "LINK", "Slack", "invite", "on", "the", "site", "just", "returns", "This", "invite", "link", "be", "no", "longer", "active", "NUMBER", "If", "you", "have", "an", "paypal", "NUMBER", "com", "or", "visa", "NUMBER", "com", "email", "address", "you", "can", "still", "create", "an", "account", "NUMBER", "If", "not", "please", "check", "with", "the", "person", "who", "shared", "the", "invite", "link", "with", "you", "to", "ask", "for", "an", "invitation", "NUMBER", "Weird", "I", "m", "able", "to", "sign", "up", "use", "the", "same", "link", "and", "an", "incognito", "browser", "window", "Are", "you", "use", "this", "link", "LINK", "cadence", "shared_invite", "enQtNDczNTgxMjYxNDEzLTQyYjcxZDM", "NUMBER", "YTIxMTZkMzQ", "NUMBER", "NjgxYmI", "NUMBER", "OWY", "NUMBER", "ODhiOTliM", "NUMBER", "I", "NUMBER", "MzA", "NUMBER", "NTM", "NUMBER", "MjU", "NUMBER", "YzgzZDkwNGEzOTUzNTBlNDk", "NUMBER", "Yjc", "Are", "you", "use", "this", "link", "LINK", "cadence", "shared_invite", "enQtNDczNTgxMjYxNDEzLTQyYjcxZDM", "NUMBER", "YTIxMTZkMzQ", "NUMBER", "NjgxYmI", "NUMBER", "OWY", "NUMBER", "ODhiOTliM", "NUMBER", "I", "NUMBER", "MzA", "NUMBER", "NTM", "NUMBER", "MjU", "NUMBER", "YzgzZDkwNGEzOTUzNTBlNDk", "NUMBER", "Yjc", "sorry", "should", "have", "be", "more", "specific", "was", "use", "the", "one", "in", "the", "top", "right", "of", "the", "bar", "on", "the", "site", "LINK", "cadence", "shared_invite", "enQtNDczNTgxMjYxNDEzLTI", "NUMBER", "Yzc", "NUMBER", "ODYwMjg", "NUMBER", "ZmI", "NUMBER", "NmRmMTU", "NUMBER", "MjQ", "NUMBER", "YzQyZDc", "NUMBER", "NzMwMmM", "NUMBER", "NjkzNDE", "NUMBER", "MmM", "NUMBER", "NzU", "NUMBER", "YTlhMmI", "NUMBER", "NzIzMDhiNzFjMDM", "that", "new", "one", "works", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "fb", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "bac", "on", "versionsa", "into", "NUMBER", "a", "NUMBER", "dac", "NUMBER", "cfec", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "After", "use", "history", "scanner", "we", "do", "not", "rely", "on", "timeout", "to", "delete", "history", "anymore", "NUMBER", "This", "be", "not", "doing", "anything", "useful", "just", "taking", "one", "more", "persistence", "call", "NUMBER", "Looking", "through", "the", "codebase", "there", "were", "several", "error", "that", "were", "either", "unhandle", "when", "they", "should", "be", "handle", "or", "handle", "without", "empty", "assignment", "NUMBER", "This", "PR", "logs", "them", "in", "most", "cases", "and", "returns", "them", "in", "others", "NUMBER", "longquanzheng", "samarabbas", "apologies", "for", "the", "delay", "on", "this", "one", "NUMBER", "Just", "iterated", "on", "your", "comments", "NUMBER", "Let", "me", "know", "if", "there", "s", "anything", "else", "we", "should", "update", "or", "if", "it", "s", "good", "to", "merge", "longquanzheng", "samarabbas", "apologies", "for", "the", "delay", "on", "this", "one", "NUMBER", "Just", "iterated", "on", "your", "comments", "NUMBER", "Let", "me", "know", "if", "there", "s", "anything", "else", "we", "should", "update", "or", "if", "it", "s", "good", "to", "merge", "can", "you", "run", "make", "fmt", "and", "make", "lint", "to", "make", "sure", "it", "pass", "all", "the", "format", "requirements", "I", "would", "like", "to", "create", "a", "Cadence", "domain", "in", "the", "underlying", "storage", "without", "actually", "run", "Cadence", "service", "NUMBER", "My", "use", "case", "be", "moving", "Cadence", "from", "one", "storage", "to", "another", "without", "preserving", "anything", "but", "the", "domain", "but", "I", "can", "imagine", "it", "to", "be", "useful", "for", "bootstrapping", "Cadence", "store", "for", "the", "first", "time", "NUMBER", "The", "store", "CLI", "utility", "might", "be", "a", "good", "place", "for", "this", "NUMBER", "NUMBER", "first", "moving", "domain", "logic", "into", "common", "Thanks", "Visibility", "requires", "ElasticSearch", "ES", "to", "be", "install", "and", "connected", "to", "Cadence", "server", "NUMBER", "In", "out", "production", "installation", "ES", "server", "requires", "service", "authentication", "by", "certificate", "NUMBER", "ES", "client", "use", "in", "Cadence", "server", "do", "not", "allow", "to", "authenticate", "in", "ES", "NUMBER", "ES", "client", "LINK", "Hi", "vancexu", "I", "ll", "try", "to", "make", "a", "this", "client", "extension", "NUMBER", "In", "order", "to", "test", "locally", "I", "need", "to", "run", "Cadence", "server", "NUMBER", "What", "be", "the", "most", "easy", "way", "to", "start", "server", "locally", "I", "try", "to", "run", "go", "build", "github", "NUMBER", "com", "uber", "cadence", "cmd", "server", "cadence", "NUMBER", "go", "And", "get", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Loading", "configFiles", "NUMBER", "config", "base", "NUMBER", "yaml", "NUMBER", "config", "development", "NUMBER", "yaml", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Config", "file", "corrupted", "NUMBER", "PublicClient", "NUMBER", "HostPort", "zero", "value", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "b", "NUMBER", "c", "NUMBER", "acc", "NUMBER", "c", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "fdca", "NUMBER", "on", "sqlinject", "into", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "ceac", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "I", "did", "the", "first", "steps", "for", "add", "postgres", "support", "NUMBER", "Fixes", "LINK", "and", "LINK", "x", "Add", "basic", "support", "for", "postgres", "x", "Migrate", "the", "schema", "file", "Add", "postgres", "test", "Fix", "postgres", "test", "CLA", "assistant", "check", "LINK", "assistant", "NUMBER", "io", "pull", "badge", "sign", "LINK", "assistant", "NUMBER", "io", "uber", "cadence", "pullRequest", "NUMBER", "TAG", "All", "committers", "have", "sign", "the", "CLA", "NUMBER", "wxing", "NUMBER", "I", "fix", "your", "comments", "please", "take", "a", "look", "NUMBER", "FYI", "I", "do", "not", "have", "viewing", "permissions", "on", "the", "buildkite", "server", "so", "no", "idea", "what", "be", "happening", "there", "NUMBER", "longquanzheng", "could", "you", "review", "the", "event", "v", "NUMBER", "part", "vancexu", "could", "you", "review", "the", "visibility", "part", "It", "seems", "that", "the", "postgres", "be", "not", "recognized", "ref", "LINK", "L", "NUMBER", "wxing", "NUMBER", "I", "fix", "your", "comments", "please", "take", "a", "look", "NUMBER", "FYI", "I", "do", "not", "have", "viewing", "permissions", "on", "the", "buildkite", "server", "so", "no", "idea", "what", "be", "happening", "there", "NUMBER", "FAIL", "TestPostgresConnTestSuite", "NUMBER", "s", "PASS", "TestPostgresConnTestSuite", "TestParseCQLFile", "NUMBER", "s", "FAIL", "TestPostgresConnTestSuite", "TestSQLConn", "NUMBER", "s", "require", "NUMBER", "go", "NUMBER", "Error", "Trace", "conn_test", "NUMBER", "go", "NUMBER", "Error", "Expected", "nil", "but", "get", "error", "NUMBER", "errorString", "s", "unsupported", "database", "driver", "postgres", "Test", "TestPostgresConnTestSuite", "TestSQLConn", "vancexu", "the", "difference", "be", "only", "in", "the", "connection", "string", "DSN", "schema", "SQL", "file", "and", "perhaps", "some", "minor", "query", "syntax", "differences", "NUMBER", "wxing", "NUMBER", "how", "can", "I", "run", "the", "test", "locally", "vancexu", "the", "difference", "be", "only", "in", "the", "connection", "string", "DSN", "schema", "SQL", "file", "and", "perhaps", "some", "minor", "query", "syntax", "differences", "NUMBER", "wxing", "NUMBER", "how", "can", "I", "run", "the", "test", "locally", "Sorry", "about", "the", "inconvenience", "please", "refer", "to", "this", "local", "docker", "file", "LINK", "basically", "build", "kite", "be", "use", "this", "NUMBER", "buildkite", "file", "LINK", "as", "a", "list", "of", "validation", "tasks", "NUMBER", "the", "NUMBER", "buildkite", "file", "be", "basically", "referencing", "to", "this", "docker", "file", "LINK", "compose", "NUMBER", "yml", "the", "local", "docker", "file", "shown", "at", "the", "very", "beginning", "should", "be", "the", "local", "test", "equivalent", "BTW", "usually", "we", "do", "make", "clean", "make", "for", "local", "test", "NUMBER", "assuming", "that", "you", "have", "cassandra", "MySQL", "NUMBER", "run", "locally", "Cassandra", "MySQL", "can", "be", "easily", "install", "use", "homebrew", "assuming", "you", "be", "use", "a", "mac", "for", "MySQL", "you", "need", "to", "additionally", "run", "this", "GRANT", "ALL", "PRIVILEGES", "ON", "NUMBER", "TO", "uber", "IDENTIFIED", "BY", "uber", "BTW", "this", "be", "the", "error", "shown", "on", "build", "kite", "github", "NUMBER", "com", "uber", "cadence", "common", "persistence", "sql", "storage", "mysql", "common", "persistence", "sql", "storage", "mysql", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "DB", "nil", "type", "DB", "as", "type", "sqldb", "NUMBER", "Tx", "in", "assignment", "DB", "do", "not", "implement", "sqldb", "NUMBER", "Tx", "miss", "DeleteFromEvents", "method", "common", "persistence", "sql", "storage", "mysql", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "DB", "nil", "type", "DB", "as", "type", "sqldb", "NUMBER", "Interface", "in", "assignment", "DB", "do", "not", "implement", "sqldb", "NUMBER", "Interface", "miss", "DeleteFromEvents", "method", "common", "persistence", "sql", "storage", "mysql", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "NewDB", "mdb", "NUMBER", "db", "xtx", "type", "DB", "as", "type", "sqldb", "NUMBER", "Tx", "in", "return", "argument", "DB", "do", "not", "implement", "sqldb", "NUMBER", "Tx", "miss", "DeleteFromEvents", "method", "github", "NUMBER", "com", "uber", "cadence", "common", "persistence", "sql", "storage", "postgres", "common", "persistence", "sql", "storage", "postgres", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "DB", "nil", "type", "DB", "as", "type", "sqldb", "NUMBER", "Tx", "in", "assignment", "DB", "do", "not", "implement", "sqldb", "NUMBER", "Tx", "miss", "DeleteFromEvents", "method", "common", "persistence", "sql", "storage", "postgres", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "DB", "nil", "type", "DB", "as", "type", "sqldb", "NUMBER", "Interface", "in", "assignment", "DB", "do", "not", "implement", "sqldb", "NUMBER", "Interface", "miss", "DeleteFromEvents", "method", "common", "persistence", "sql", "storage", "postgres", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "NewDB", "mdb", "NUMBER", "db", "xtx", "type", "DB", "as", "type", "sqldb", "NUMBER", "Tx", "in", "return", "argument", "DB", "do", "not", "implement", "sqldb", "NUMBER", "Tx", "miss", "DeleteFromEvents", "method", "Makefile", "NUMBER", "recipe", "for", "target", "cadence", "fail", "Can", "someone", "help", "out", "on", "the", "above", "error", "I", "can", "t", "seem", "to", "find", "the", "cause", "of", "common", "persistence", "sql", "storage", "mysql", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "DB", "nil", "type", "DB", "as", "type", "sqldb", "NUMBER", "Tx", "in", "assignment", "Can", "someone", "help", "out", "on", "the", "above", "error", "I", "can", "t", "seem", "to", "find", "the", "cause", "of", "common", "persistence", "sql", "storage", "mysql", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "DB", "nil", "type", "DB", "as", "type", "sqldb", "NUMBER", "Tx", "in", "assignment", "Deletion", "of", "common", "persistence", "sql", "storage", "mysql", "event", "NUMBER", "go", "be", "the", "cause", "NUMBER", "The", "statement", "var", "_", "sqldb", "NUMBER", "Tx", "DB", "nil", "be", "asserting", "that", "mysql", "NUMBER", "DB", "satisfies", "the", "sqldb", "NUMBER", "Tx", "interface", "NUMBER", "Specifically", "it", "s", "fail", "because", "DeleteFromEvents", "was", "delete", "with", "the", "rest", "of", "mysql", "event", "NUMBER", "go", "NUMBER", "I", "believe", "events", "V", "NUMBER", "be", "deprecate", "NUMBER", "plz", "remove", "this", "file", "and", "panic", "on", "usage", "of", "events", "v", "NUMBER", "postgres", "Note", "that", "only", "removal", "of", "the", "postgres", "implementation", "was", "request", "not", "mysql", "NUMBER", "It", "s", "not", "clear", "to", "me", "where", "the", "postgres", "panic", "s", "should", "be", "add", "NUMBER", "Perhaps", "wxing", "NUMBER", "can", "clarify", "Sorry", "I", "can", "t", "be", "more", "helpful", "NUMBER", "I", "just", "start", "exploring", "Cadence", "a", "couple", "days", "ago", "but", "I", "m", "really", "interested", "in", "PostgreSQL", "support", "NUMBER", "Can", "someone", "help", "out", "on", "the", "above", "error", "I", "can", "t", "seem", "to", "find", "the", "cause", "of", "common", "persistence", "sql", "storage", "mysql", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "DB", "nil", "type", "DB", "as", "type", "sqldb", "NUMBER", "Tx", "in", "assignment", "Deletion", "of", "common", "persistence", "sql", "storage", "mysql", "event", "NUMBER", "go", "be", "the", "cause", "NUMBER", "The", "statement", "var", "_", "sqldb", "NUMBER", "Tx", "DB", "nil", "be", "asserting", "that", "mysql", "NUMBER", "DB", "satisfies", "the", "sqldb", "NUMBER", "Tx", "interface", "NUMBER", "Specifically", "it", "s", "fail", "because", "DeleteFromEvents", "was", "delete", "with", "the", "rest", "of", "mysql", "event", "NUMBER", "go", "NUMBER", "I", "believe", "events", "V", "NUMBER", "be", "deprecate", "NUMBER", "plz", "remove", "this", "file", "and", "panic", "on", "usage", "of", "events", "v", "NUMBER", "postgres", "Note", "that", "only", "removal", "of", "the", "postgres", "implementation", "was", "request", "not", "mysql", "NUMBER", "It", "s", "not", "clear", "to", "me", "where", "the", "postgres", "panic", "s", "should", "be", "add", "NUMBER", "Perhaps", "wxing", "NUMBER", "can", "clarify", "Sorry", "I", "can", "t", "be", "more", "helpful", "NUMBER", "I", "just", "start", "exploring", "Cadence", "a", "couple", "days", "ago", "but", "I", "m", "really", "interested", "in", "PostgreSQL", "support", "NUMBER", "Sorry", "for", "the", "confusion", "again", "please", "keep", "the", "file", "common", "persistence", "sql", "storage", "postgres", "event", "NUMBER", "go", "function", "but", "panic", "whenever", "the", "function", "be", "call", "link", "LINK", "discussion_r", "NUMBER", "NUMBER", "hazcod", "it", "seems", "that", "your", "PR", "add", "support", "of", "postgres", "has", "collide", "with", "meiliang", "NUMBER", "s", "change", "Kafka", "deprecation", "by", "use", "our", "message", "queue", "implementation", "for", "lossless", "message", "replication", "meiliang", "NUMBER", "can", "you", "plz", "help", "ref", "github", "NUMBER", "com", "uber", "cadence", "common", "persistence", "sql", "storage", "postgres", "common", "persistence", "sql", "storage", "postgres", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "DB", "nil", "type", "DB", "as", "type", "sqldb", "NUMBER", "Tx", "in", "assignment", "DB", "do", "not", "implement", "sqldb", "NUMBER", "Tx", "miss", "GetLastEnqueuedMessageIDForUpdate", "method", "common", "persistence", "sql", "storage", "postgres", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "DB", "nil", "type", "DB", "as", "type", "sqldb", "NUMBER", "Interface", "in", "assignment", "DB", "do", "not", "implement", "sqldb", "NUMBER", "Interface", "miss", "GetLastEnqueuedMessageIDForUpdate", "method", "common", "persistence", "sql", "storage", "postgres", "db", "NUMBER", "go", "NUMBER", "NUMBER", "cannot", "use", "NewDB", "mdb", "NUMBER", "db", "xtx", "type", "DB", "as", "type", "sqldb", "NUMBER", "Tx", "in", "return", "argument", "DB", "do", "not", "implement", "sqldb", "NUMBER", "Tx", "miss", "GetLastEnqueuedMessageIDForUpdate", "method", "Makefile", "NUMBER", "recipe", "for", "target", "cadence", "fail", "hazcod", "We", "recently", "add", "a", "queue", "interface", "for", "domain", "replication", "NUMBER", "Relevant", "MySql", "implementation", "be", "at", "cadence", "common", "persistence", "sql", "sqlQueue", "NUMBER", "go", "It", "should", "be", "fairly", "simple", "for", "you", "to", "port", "to", "postgres", "NUMBER", "I", "add", "the", "miss", "queue", "NUMBER", "go", "in", "LINK", "meiliang", "NUMBER", "wxing", "NUMBER", "hazcod", "be", "it", "ready", "to", "test", "this", "locally", "SebastianM", "I", "have", "never", "use", "or", "run", "cadence", "before", "so", "please", "do", "test", "it", "locally", "hazcod", "I", "get", "an", "error", "for", "the", "history", "manager", "when", "starting", "the", "cadance", "server", "level", "fatal", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "fail", "to", "create", "shard", "manager", "service", "cadence", "history", "error", "sql", "unknown", "driver", "postgres", "forgotten", "import", "logging", "call", "at", "service", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Fatal", "n", "t", "Users", "NUMBER", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "Service", "NUMBER", "Start", "n", "t", "Users", "NUMBER", "cadence", "service", "history", "service", "NUMBER", "go", "NUMBER", "nmain", "NUMBER", "execute", "n", "t", "Users", "NUMBER", "cadence", "cmd", "server", "server", "NUMBER", "go", "NUMBER", "Seems", "like", "a", "side", "effect", "import", "be", "miss", "somewhere", "for", "pq", "SebastianM", "how", "be", "you", "compile", "run", "the", "server", "I", "ll", "fix", "NUMBER", "Steps", "to", "reproduce", "NUMBER", "go", "to", "cmd", "server", "and", "run", "go", "build", "NUMBER", "create", "a", "config", "dir", "in", "cmd", "server", "NUMBER", "create", "a", "base", "NUMBER", "yaml", "file", "in", "the", "new", "config", "dir", "with", "the", "following", "config", "change", "db", "credentials", "yaml", "log", "stdout", "true", "level", "info", "persistence", "defaultStore", "postgres", "visibilityStore", "postgres", "numHistoryShards", "NUMBER", "datastores", "postgres", "sql", "driverName", "postgres", "databaseName", "xxx", "connectAddr", "NUMBER", "NUMBER", "connectProtocol", "tcp", "user", "xxxx", "password", "xxxx", "maxConns", "NUMBER", "maxIdleConns", "NUMBER", "maxConnLifetime", "NUMBER", "m", "ringpop", "name", "cadence", "bootstrapMode", "hosts", "bootstrapHosts", "NUMBER", "NUMBER", "maxJoinDuration", "NUMBER", "s", "services", "frontend", "rpc", "port", "NUMBER", "bindOnLocalHost", "true", "metrics", "statsd", "hostPort", "NUMBER", "NUMBER", "prefix", "cadence", "pprof", "port", "NUMBER", "matching", "rpc", "port", "NUMBER", "bindOnLocalHost", "true", "metrics", "statsd", "hostPort", "NUMBER", "NUMBER", "prefix", "cadence", "pprof", "port", "NUMBER", "history", "rpc", "port", "NUMBER", "bindOnLocalHost", "true", "metrics", "statsd", "hostPort", "NUMBER", "NUMBER", "prefix", "cadence", "pprof", "port", "NUMBER", "worker", "rpc", "port", "NUMBER", "bindOnLocalHost", "true", "metrics", "statsd", "hostPort", "NUMBER", "NUMBER", "prefix", "cadence", "pprof", "port", "NUMBER", "clusterMetadata", "enableGlobalDomain", "false", "failoverVersionIncrement", "NUMBER", "masterClusterName", "active", "currentClusterName", "active", "clusterInformation", "active", "enable", "true", "initialFailoverVersion", "NUMBER", "rpcName", "cadence", "frontend", "rpcAddress", "localhost", "NUMBER", "dcRedirectionPolicy", "policy", "noop", "toDC", "archival", "history", "status", "enable", "enableRead", "true", "provider", "filestore", "fileMode", "NUMBER", "dirMode", "NUMBER", "visibility", "status", "disabled", "enableRead", "false", "domainDefaults", "archival", "history", "status", "disabled", "URI", "file", "tmp", "cadence_archival", "development", "visibility", "status", "disabled", "kafka", "clusters", "test", "brokers", "NUMBER", "NUMBER", "topics", "cadence", "visibility", "dev", "cluster", "test", "cadence", "visibility", "dev", "dlq", "cluster", "test", "publicClient", "hostPort", "localhost", "NUMBER", "NUMBER", "run", "NUMBER", "server", "start", "SebastianM", "sorry", "for", "the", "hassle", "but", "seems", "like", "there", "be", "a", "level", "of", "indentation", "gone", "in", "the", "config", "file", "hazcod", "hmmm", "try", "this", "LINK", "SebastianM", "that", "be", "now", "fix", "now", "just", "needs", "a", "locally", "listening", "postgres", "NUMBER", "hazcod", "thanks", "now", "it", "request", "a", "ssl", "certificate", "for", "postgres", "connection", "NUMBER", "Is", "there", "a", "way", "to", "disable", "ssl", "via", "the", "configuration", "level", "fatal", "ts", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "msg", "fail", "to", "create", "shard", "manager", "service", "cadence", "history", "error", "pq", "SSL", "be", "not", "enable", "on", "the", "server", "logging", "call", "at", "service", "NUMBER", "go", "NUMBER", "stacktrace", "github", "NUMBER", "com", "uber", "cadence", "common", "log", "loggerimpl", "NUMBER", "loggerImpl", "NUMBER", "Fatal", "n", "t", "Users", "sebmueller", "NUMBER", "cadence", "common", "log", "loggerimpl", "logger", "NUMBER", "go", "NUMBER", "ngithub", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "Service", "NUMBER", "Start", "n", "t", "Users", "NUMBER", "cadence", "service", "history", "service", "NUMBER", "go", "NUMBER", "nmain", "NUMBER", "execute", "n", "t", "Users", "NUMBER", "cadence", "cmd", "server", "server", "NUMBER", "go", "NUMBER", "LINK", "Honestly", "I", "feel", "like", "I", "miss", "too", "much", "of", "the", "code", "familiarity", "of", "cadence", "here", "to", "be", "able", "to", "fully", "support", "this", "code", "change", "NUMBER", "Can", "someone", "from", "the", "team", "step", "in", "too", "Oh", "apologies", "I", "for", "some", "reason", "thought", "that", "was", "a", "PR", "to", "uber", "cadence", "NUMBER", "Merged", "Close", "in", "favor", "of", "LINK", "Postgress", "support", "would", "add", "support", "for", "PostgreSQL", "or", "even", "cockroach", "db", "LINK", "which", "be", "optimized", "for", "high", "available", "cloud", "scenarios", "NUMBER", "One", "would", "need", "to", "reimplement", "LINK", "for", "postgres", "NUMBER", "I", "start", "the", "work", "in", "LINK", "but", "will", "probably", "need", "some", "help", "here", "NUMBER", "LINK", "NUMBER", "Is", "merge", "so", "this", "be", "implement", "Are", "there", "docs", "how", "to", "use", "Cadence", "with", "Postgres", "I", "m", "also", "having", "the", "same", "issue", "can", "t", "find", "any", "docs", "to", "connect", "with", "Postgres", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "eaa", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "e", "NUMBER", "bf", "NUMBER", "a", "NUMBER", "fd", "NUMBER", "on", "clicl", "into", "c", "NUMBER", "bd", "NUMBER", "bf", "NUMBER", "fe", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fd", "NUMBER", "de", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "on", "salist", "into", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "bdf", "NUMBER", "ecae", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "dfa", "NUMBER", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "on", "fix", "into", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "fb", "NUMBER", "aed", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ad", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "bb", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "on", "cron", "into", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "cb", "NUMBER", "bbac", "NUMBER", "fc", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "ec", "NUMBER", "ddb", "NUMBER", "bb", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "on", "addsa", "into", "NUMBER", "dc", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "d", "on", "master", "NUMBER", "This", "be", "achieved", "long", "time", "ago", "Looks", "like", "if", "user", "sends", "a", "decision", "with", "empty", "RunID", "than", "we", "create", "a", "transfer", "task", "with", "incorrect", "information", "for", "TargetRunID", "resulting", "be", "SignalExternalWorkflowExecutionFailed", "instead", "of", "sending", "the", "signal", "to", "current", "run", "NUMBER", "There", "was", "a", "race", "condition", "when", "SignalExternalWorkflow", "with", "empty", "RunID", "happens", "the", "target", "run", "A", "may", "already", "ContinueAsNew", "with", "new", "RunID", "B", "which", "result", "in", "SignalExternalWorkflowExecutionFailed", "NUMBER", "This", "race", "was", "fix", "sometime", "ago", "NUMBER", "To", "support", "removal", "of", "deprecate", "branch", "of", "getVersion", "call", "there", "be", "a", "need", "to", "count", "and", "query", "worklfows", "that", "be", "use", "a", "specific", "version", "of", "the", "_getVersion_", "API", "call", "given", "a", "_changeID_", "NUMBER", "I", "m", "not", "sure", "if", "this", "feature", "can", "rely", "on", "the", "custom", "search", "attributes", "in", "their", "current", "form", "as", "the", "_workflowVersions_", "attribute", "should", "contain", "a", "list", "of", "changeID", "version", "pairs", "NUMBER", "Hi", "be", "the", "getVersion", "API", "call", "planned", "to", "return", "whether", "a", "workflow", "and", "how", "many", "workflows", "be", "use", "the", "DefaultVersion", "for", "a", "specific", "change", "ID", "It", "will", "be", "implement", "through", "enhanced", "visibility", "list", "count", "API", "LINK", "LINK", "Hi", "vancexu", "I", "see", "that", "the", "cadence", "client", "code", "for", "querying", "the", "API", "for", "workflow", "version", "be", "merge", "NUMBER", "I", "wanted", "to", "make", "sure", "if", "this", "be", "already", "support", "in", "the", "server", "and", "if", "so", "from", "which", "version", "NUMBER", "Thanks", "Hi", "vancexu", "I", "see", "that", "the", "cadence", "client", "code", "for", "querying", "the", "API", "for", "workflow", "version", "be", "merge", "NUMBER", "I", "wanted", "to", "make", "sure", "if", "this", "be", "already", "support", "in", "the", "server", "and", "if", "so", "from", "which", "version", "NUMBER", "Thanks", "Hi", "server", "side", "release", "be", "not", "do", "we", "may", "do", "a", "release", "at", "end", "of", "Oct", "after", "which", "there", "will", "also", "be", "a", "client", "release", "However", "to", "use", "this", "feature", "now", "the", "only", "thing", "need", "on", "server", "side", "v", "NUMBER", "be", "allowlist", "new", "search", "attributes", "CadenceChangeVersion", "as", "keyword", "type", "NUMBER", "see", "LINK", "_search", "on", "how", "to", "allowlist", "it", "manually", "NUMBER", "Go", "client", "v", "NUMBER", "Java", "client", "not", "available", "yet", "LINK", "java", "client", "issue", "NUMBER", "To", "search", "default", "version", "use", "query", "like", "CadenceChangeVersion", "changeID", "NUMBER", "or", "CadenceChangeVersion", "not", "in", "changeID", "NUMBER", "changeID", "NUMBER", "before", "miss", "or", "not", "exist", "be", "support", "in", "advance", "query", "NUMBER", "Note", "this", "feature", "requires", "advance", "visibility", "on", "server", "side", "be", "ElasticSearch", "For", "code", "clarity", "decision", "state", "machine", "logic", "should", "be", "moved", "into", "a", "dedicated", "struct", "relate", "issue", "NUMBER", "Looking", "much", "better", "NUMBER", "Few", "high", "level", "comments", "NUMBER", "Let", "s", "move", "ES", "config", "section", "as", "another", "persistence", "NUMBER", "Default", "for", "advancedVisibilityWritingMode", "should", "be", "dynamic", "based", "on", "existence", "of", "advancedVisibilityStore", "persistence", "config", "NUMBER", "Here", "be", "the", "options", "in", "increasing", "precedence", "Default", "to", "Off", "when", "it", "do", "not", "exist", "otherwise", "Default", "to", "On", "Allows", "override", "to", "Dual", "when", "it", "exists", "NUMBER", "Default", "for", "enableReadVisibilityFromES", "should", "be", "dynamic", "based", "on", "existence", "of", "advancedVisibilityStore", "persistence", "config", "NUMBER", "Here", "be", "the", "options", "in", "increasing", "precedence", "Default", "to", "false", "when", "it", "do", "not", "exist", "otherwise", "Default", "to", "true", "Allows", "global", "override", "to", "true", "or", "false", "when", "it", "exists", "Allows", "domain", "override", "to", "true", "or", "false", "when", "it", "exists", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ca", "NUMBER", "d", "NUMBER", "eae", "NUMBER", "ed", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "db", "NUMBER", "dc", "NUMBER", "bf", "NUMBER", "on", "esrefact", "into", "faec", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ffc", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Right", "now", "we", "took", "a", "shot", "cut", "to", "use", "LastUpdateTimestamp", "NUMBER", "It", "be", "inacurate", "NUMBER", "In", "some", "case", "we", "may", "update", "mutableState", "without", "any", "decision", "ex", "NUMBER", "ActivityHeartbeat", "NUMBER", "In", "that", "case", "update", "LastUpdateTimestamp", "will", "make", "the", "StickyTTL", "not", "expire", "NUMBER", "It", "could", "be", "a", "bug", "if", "a", "customer", "relying", "on", "StickyTTL", "to", "dispatch", "tasks", "NUMBER", "Every", "shard", "has", "the", "following", "NUMBER", "caches", "which", "mostly", "contribute", "to", "the", "memory", "consumption", "on", "history", "host", "NUMBER", "MutableStateCache", "NUMBER", "EventsCache", "These", "caches", "have", "their", "own", "knobs", "to", "configure", "the", "maximum", "size", "per", "shard", "which", "makes", "it", "very", "hard", "to", "define", "these", "knobs", "in", "a", "generic", "fashion", "for", "various", "cluster", "sizes", "NUMBER", "The", "idea", "be", "to", "have", "a", "simpler", "knob", "which", "be", "defined", "per", "host", "which", "automatically", "adjust", "the", "size", "of", "caches", "placed", "on", "that", "host", "evenly", "NUMBER", "Use", "history", "event", "generator", "to", "test", "event", "replication", "logic", "with", "multiple", "branch", "history", "events", "We", "need", "to", "ensure", "that", "one", "domain", "do", "not", "overwhelm", "a", "shard", "NUMBER", "This", "could", "happen", "by", "sending", "many", "signals", "to", "the", "same", "workflow", "or", "trying", "to", "start", "the", "workflow", "on", "the", "same", "shard", "NUMBER", "They", "will", "all", "block", "on", "the", "shard", "lock", "cause", "some", "calls", "to", "timeout", "NUMBER", "On", "a", "big", "burst", "this", "will", "slow", "down", "traffic", "on", "the", "shard", "NUMBER", "Adding", "a", "domain", "specific", "rate", "limit", "will", "protect", "us", "against", "such", "cases", "NUMBER", "NUMBER", "be", "NUMBER", "bec", "NUMBER", "docker", "NUMBER", "elastic", "NUMBER", "co", "elasticsearch", "elasticsearch", "oss", "NUMBER", "usr", "local", "bin", "dock", "NUMBER", "minutes", "ago", "Exited", "NUMBER", "NUMBER", "seconds", "ago", "docker_elasticsearch_", "NUMBER", "cadence_", "NUMBER", "curl", "s", "LINK", "cadence_", "NUMBER", "waiting", "for", "elasticsearch", "to", "start", "up", "cadence_", "NUMBER", "NUMBER", "eq", "NUMBER", "cadence_", "NUMBER", "echo", "waiting", "for", "elasticsearch", "to", "start", "up", "cadence_", "NUMBER", "sleep", "NUMBER", "cadence_", "NUMBER", "curl", "s", "LINK", "cadence_", "NUMBER", "waiting", "for", "elasticsearch", "to", "start", "up", "cadence_", "NUMBER", "NUMBER", "eq", "NUMBER", "cadence_", "NUMBER", "echo", "waiting", "for", "elasticsearch", "to", "start", "up", "cadence_", "NUMBER", "sleep", "NUMBER", "cadence_", "NUMBER", "curl", "s", "LINK", "cadence_", "NUMBER", "waiting", "for", "elasticsearch", "to", "start", "up", "cadence_", "NUMBER", "NUMBER", "eq", "NUMBER", "cadence_", "NUMBER", "echo", "waiting", "for", "elasticsearch", "to", "start", "up", "cadence_", "NUMBER", "sleep", "NUMBER", "NUMBER", "Search", "attributes", "be", "global", "for", "a", "cluster", "NUMBER", "It", "should", "not", "require", "a", "domain", "as", "input", "to", "run", "the", "operation", "NUMBER", "Ok", "that", "makes", "sense", "NUMBER", "But", "there", "be", "one", "more", "thing", "I", "forget", "now", "which", "be", "global", "but", "we", "end", "up", "doing", "it", "at", "domain", "level", "due", "to", "this", "limitation", "NUMBER", "We", "should", "keep", "track", "of", "these", "and", "when", "we", "get", "a", "chance", "and", "handle", "the", "global", "stuff", "NUMBER", "But", "admin", "operations", "do", "not", "require", "a", "domain", "right", "It", "makes", "the", "commands", "look", "a", "bit", "inconsistent", "cadence", "adm", "cl", "add", "search", "attr", "search_attr_key", "RolloutID", "search_attr_type", "NUMBER", "for", "creating", "a", "search", "attribute", "and", "cadence", "domain", "whatever", "cl", "get", "search", "attr", "for", "listing", "them", "NUMBER", "This", "was", "fix", "and", "will", "be", "available", "in", "CLI", "NUMBER", "I", "m", "guessing", "NUMBER", "didn", "t", "help", "either", "NUMBER", "fix", "NUMBER", "I", "have", "add", "report", "API", "in", "this", "PR", "NUMBER", "Below", "shows", "the", "way", "to", "use", "it", "NUMBER", "cadence", "admin", "es", "rep", "url", "TAG", "index", "TAG", "query", "TAG", "A", "typical", "call", "of", "report", "API", "be", "as", "follows", "NUMBER", "cadence", "admin", "es", "rep", "url", "LINK", "index", "test", "NUMBER", "query", "SELECT", "COUNT", "MAX", "Attr", "NUMBER", "CustomDatetimeField", "FROM", "dummy", "GROUP", "BY", "DomainID", "WorkflowType", "CloseStatus", "HAVING", "COUNT", "NUMBER", "I", "have", "add", "unit", "test", "too", "NUMBER", "Screenshot", "below", "shows", "a", "local", "result", "of", "the", "test", "NUMBER", "TAG", "Domain", "cache", "refresh", "be", "NUMBER", "s", "which", "be", "fine", "for", "real", "service", "but", "might", "be", "annoying", "for", "test", "that", "create", "domains", "use", "local", "docker", "instance", "NUMBER", "It", "be", "needed", "for", "DescribeBatchJob", "API", "From", "user", "For", "SearchAttributes", "Is", "there", "any", "way", "to", "pass", "SearchAttribute", "for", "childworkflows", "I", "have", "checked", "that", "it", "s", "not", "get", "pass", "implicitly", "NUMBER", "I", "cannot", "even", "find", "an", "explicit", "way", "of", "doing", "so", "NUMBER", "We", "pass", "the", "SearchAttribute", "in", "StartWorkflowOptions", "and", "ExecuteWorkflow", "takes", "the", "StartWorkflowOptions", "as", "a", "parameter", "but", "ExecuteChildWorkflow", "doesn", "t", "have", "such", "parameter", "NUMBER", "Can", "you", "add", "tasks", "for", "Go", "and", "Java", "clients", "as", "well", "Thanks", "the", "cluster", "info", "be", "not", "required", "LINK", "L", "NUMBER", "the", "one", "thing", "that", "should", "be", "do", "be", "to", "drop", "the", "requirement", "of", "global_domain", "flag", "so", "if", "CLI", "not", "seeing", "that", "set", "IsGlobalDomain", "in", "the", "register", "request", "to", "be", "null", "and", "let", "server", "do", "the", "check", "LINK", "contains", "instruction", "for", "CLI", "usage", "For", "example", "to", "register", "new", "domain", "test", "domain", "with", "NUMBER", "retention", "day", "docker", "run", "network", "host", "rm", "ubercadence", "cli", "master", "do", "test", "domain", "domain", "register", "rd", "NUMBER", "which", "fail", "with", "the", "following", "message", "Error", "Option", "global_domain", "must", "be", "provide", "NUMBER", "I", "suppose", "that", "it", "worth", "add", "global_domain", "false", "to", "documentation", "NUMBER", "CLA", "assistant", "check", "LINK", "assistant", "NUMBER", "io", "pull", "badge", "sign", "LINK", "assistant", "NUMBER", "io", "uber", "cadence", "pullRequest", "NUMBER", "TAG", "All", "committers", "have", "sign", "the", "CLA", "NUMBER", "Actually", "I", "meant", "to", "close", "this", "NUMBER", "NUMBER", "be", "checked", "in", "NUMBER", "LINK", "I", "would", "love", "more", "frequent", "patch", "release", "but", "currently", "it", "seems", "patch", "release", "be", "use", "for", "major", "minor", "release", "NUMBER", "Task", "NUMBER", "of", "LINK", "Create", "dynamic", "config", "for", "the", "threshold", "of", "history", "size", "below", "which", "history", "should", "be", "archived", "by", "the", "timer", "queue", "processor", "without", "sending", "signal", "to", "archival", "workflow", "Update", "timer", "queue", "processor", "to", "use", "archiver", "Task", "NUMBER", "of", "LINK", "Move", "this", "Currently", "query", "returns", "some", "result", "even", "if", "workflow", "was", "terminated", "NUMBER", "And", "it", "be", "not", "possible", "to", "find", "out", "if", "the", "workflow", "still", "run", "without", "additional", "API", "calls", "NUMBER", "LINK", "We", "re", "in", "the", "process", "of", "write", "a", "NUMBER", "NET", "Cadence", "client", "and", "run", "into", "an", "issue", "while", "unit", "test", "workflows", "NUMBER", "When", "we", "start", "a", "worker", "execute", "a", "workflow", "stop", "the", "worker", "start", "it", "again", "and", "then", "try", "and", "execute", "another", "workflow", "the", "first", "workflow", "completes", "but", "any", "workflow", "after", "the", "first", "hangs", "during", "the", "client", "NUMBER", "ExecuteWorkflow", "call", "eventually", "fail", "with", "a", "START_TO_CLOSE", "timeout", "NUMBER", "I", "replicated", "this", "behavior", "by", "munging", "the", "greetings", "cadence", "samples", "LINK", "samples", "workflow", "NUMBER", "See", "the", "loop", "in", "func", "main", "package", "main", "import", "context", "time", "go", "NUMBER", "uber", "NUMBER", "org", "cadence", "client", "go", "NUMBER", "uber", "NUMBER", "org", "cadence", "worker", "go", "NUMBER", "uber", "NUMBER", "org", "zap", "github", "NUMBER", "com", "pborman", "uuid", "github", "NUMBER", "com", "samarabbas", "cadence", "samples", "cmd", "samples", "common", "This", "needs", "to", "be", "do", "as", "part", "of", "a", "bootstrap", "step", "when", "the", "process", "starts", "NUMBER", "The", "workers", "be", "supposed", "to", "be", "long", "run", "NUMBER", "func", "startWorkers", "h", "common", "NUMBER", "SampleHelper", "worker", "NUMBER", "Worker", "Configure", "worker", "options", "NUMBER", "workerOptions", "worker", "NUMBER", "Options", "MetricsScope", "h", "NUMBER", "Scope", "Logger", "h", "NUMBER", "Logger", "return", "h", "NUMBER", "StartWorkers", "h", "NUMBER", "Config", "NUMBER", "DomainName", "ApplicationName", "workerOptions", "func", "startWorkflow", "h", "common", "NUMBER", "SampleHelper", "client", "NUMBER", "WorkflowRun", "workflowOptions", "client", "NUMBER", "StartWorkflowOptions", "ID", "greetings_", "uuid", "NUMBER", "New", "TaskList", "ApplicationName", "ExecutionStartToCloseTimeout", "time", "NUMBER", "Minute", "DecisionTaskStartToCloseTimeout", "time", "NUMBER", "Minute", "return", "h", "NUMBER", "StartWorkflow", "workflowOptions", "SampleGreetingsWorkflow", "func", "main", "configure", "service", "client", "var", "h", "common", "NUMBER", "SampleHelper", "h", "NUMBER", "SetupServiceConfig", "Loop", "start", "a", "worker", "start", "a", "workflow", "block", "and", "wait", "for", "workflow", "result", "stop", "the", "worker", "for", "i", "NUMBER", "i", "TAG", "So", "it", "doesn", "t", "improve", "much", "perf", "compared", "to", "directly", "use", "domainCache", "This", "patch", "caches", "the", "domain", "metric", "scope", "once", "it", "s", "created", "not", "the", "domain", "metadata", "NUMBER", "That", "s", "about", "it", "NUMBER", "DomainCache", "caches", "the", "domain", "metadata", "NUMBER", "And", "I", "tend", "to", "disagree", "that", "it", "s", "complicated", "NUMBER", "So", "it", "doesn", "t", "improve", "much", "perf", "compared", "to", "directly", "use", "domainCache", "This", "patch", "caches", "the", "domain", "metric", "scope", "once", "it", "s", "created", "not", "the", "domain", "metadata", "NUMBER", "That", "s", "about", "it", "NUMBER", "DomainCache", "caches", "the", "domain", "metadata", "NUMBER", "And", "I", "tend", "to", "disagree", "that", "it", "s", "complicated", "NUMBER", "I", "be", "fine", "to", "forget", "about", "complexity", "as", "it", "s", "hard", "to", "argue", "NUMBER", "Adding", "another", "atomicValue", "be", "unnecessary", "NUMBER", "How", "about", "just", "use", "domainCache", "whenever", "you", "need", "to", "translate", "from", "domainID", "to", "domainName", "Discussed", "offline", "NUMBER", "This", "diff", "do", "the", "following", "NUMBER", "Enforces", "transaction", "size", "limit", "at", "persistence", "layer", "NUMBER", "Fixes", "exist", "bug", "in", "RespondDecisionTaskCompleted", "NUMBER", "Workflows", "which", "were", "be", "fail", "by", "us", "due", "to", "a", "size", "check", "validation", "failure", "were", "not", "be", "cleaned", "up", "NUMBER", "NUMBER", "Makes", "two", "small", "refactors", "in", "RespondDecisionTaskCompleted", "NUMBER", "NUMBER", "Fails", "workflow", "if", "transaction", "size", "error", "occur", "NUMBER", "TAG", "Here", "be", "an", "example", "of", "a", "workflow", "history", "which", "results", "from", "triggering", "a", "transaction", "size", "beyond", "limit", "NUMBER", "Fixes", "NUMBER", "During", "use", "the", "Cadence", "we", "find", "one", "activity", "will", "fail", "to", "schedule", "on", "all", "the", "machines", "the", "last", "time", "it", "fail", "by", "timeout", "NUMBER", "But", "the", "failure", "records", "in", "the", "process", "will", "help", "debugging", "the", "issue", "NUMBER", "Hi", "all", "be", "there", "any", "progress", "on", "this", "issue", "We", "re", "looking", "at", "adopting", "Cadence", "in", "part", "as", "a", "potential", "replacement", "for", "our", "exist", "background", "workers", "NUMBER", "Currently", "if", "an", "activity", "fail", "and", "be", "retried", "there", "be", "no", "way", "to", "see", "what", "the", "error", "message", "be", "that", "cause", "the", "failure", "which", "makes", "it", "difficult", "to", "debug", "NUMBER", "This", "feature", "be", "something", "that", "comes", "out", "of", "the", "box", "with", "traditional", "job", "workers", "like", "Sidekiq", "or", "Celery", "NUMBER", "Add", "forwarding", "of", "terminate", "and", "cancel", "to", "support", "them", "from", "any", "DC", "NUMBER", "NUMBER", "merge", "I", "m", "still", "not", "certain", "why", "we", "need", "separate", "handle", "for", "transient", "decision", "NUMBER", "If", "the", "decision", "fail", "why", "can", "t", "the", "state", "machine", "on", "passive", "also", "go", "into", "transient", "decision", "than", "it", "expects", "the", "next", "transaction", "to", "have", "multiple", "batches", "similar", "to", "state", "machine", "on", "active", "side", "NUMBER", "NUMBER", "The", "start", "time", "for", "cron", "jobs", "be", "the", "time", "the", "previous", "workflow", "finishes", "NUMBER", "This", "be", "confusing", "when", "exposing", "the", "start", "time", "to", "users", "NUMBER", "My", "suggestion", "be", "to", "add", "a", "FirstScheduled", "field", "that", "report", "the", "time", "of", "the", "first", "DecisionTaskScheduled", "event", "NUMBER", "This", "can", "be", "close", "NUMBER", "Describe", "workflow", "will", "return", "execution", "time", "which", "be", "when", "the", "workflow", "will", "actually", "start", "NUMBER", "Approved", "with", "a", "couple", "of", "comments", "NUMBER", "I", "think", "Samar", "should", "also", "take", "a", "look", "though", "NUMBER", "NUMBER", "merge", "Please", "update", "the", "documentation", "to", "reflect", "that", "global_domain", "be", "required", "NUMBER", "docker", "run", "network", "host", "rm", "ubercadence", "cli", "master", "domain", "samples", "domain", "domain", "register", "Error", "Option", "global_domain", "must", "be", "provide", "NUMBER", "func", "newErrorTag", "key", "string", "value", "error", "Tag", "This", "should", "not", "take", "key", "as", "it", "be", "ignored", "NUMBER", "Please", "fix", "imports", "before", "checking", "in", "NUMBER", "I", "be", "unable", "to", "use", "docker", "compose", "in", "our", "restricted", "environment", "but", "be", "able", "to", "use", "docker", "command", "NUMBER", "So", "instead", "I", "tried", "to", "use", "the", "plain", "docker", "commands", "by", "following", "what", "be", "in", "the", "docker", "compose", "NUMBER", "yml", "file", "NUMBER", "However", "I", "be", "unable", "to", "start", "Cadence", "due", "to", "the", "error", "error", "fail", "to", "connect", "to", "TAG", "NUMBER", "due", "to", "error", "Keyspace", "cadence", "do", "not", "exist", "Looks", "like", "there", "be", "some", "issue", "with", "the", "cadence", "cassandra", "tool", "How", "can", "I", "make", "this", "work", "What", "else", "should", "I", "do", "apart", "from", "the", "following", "docker", "commands", "Thank", "you", "for", "any", "pointers", "or", "suggestions", "NUMBER", "Docker", "Commands", "Used", "NUMBER", "docker", "run", "name", "cassandra", "p", "NUMBER", "NUMBER", "d", "cassandra", "NUMBER", "NUMBER", "docker", "run", "name", "statsd", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "d", "hopsoft", "graphite", "statsd", "NUMBER", "docker", "run", "name", "cadence", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "d", "link", "cassandra", "link", "statsd", "e", "CASSANDRA_SEEDS", "cassandra", "e", "STATSD_ENDPOINT", "statsd", "NUMBER", "ubercadence", "server", "NUMBER", "NUMBER", "docker", "run", "name", "cadence", "web", "p", "NUMBER", "NUMBER", "d", "link", "cadence", "e", "CADENCE_TCHANNEL_PEERS", "cadence", "NUMBER", "ubercadence", "web", "NUMBER", "longquanzheng", "wxing", "NUMBER", "Thank", "you", "very", "much", "for", "your", "reply", "NUMBER", "We", "tried", "a", "whole", "bunch", "of", "things", "and", "finally", "made", "it", "work", "Here", "be", "the", "quick", "summary", "of", "what", "did", "not", "work", "and", "what", "worked", "Run", "make", "Unfortunately", "since", "we", "be", "work", "in", "a", "linux", "env", "with", "restricted", "policies", "we", "be", "unable", "to", "run", "make", "install", "schema", "as", "this", "needs", "all", "the", "Go", "dependencies", "and", "complete", "make", "env", "with", "all", "the", "permissions", "NUMBER", "Try", "after", "installing", "docker", "compose", "binary", "This", "was", "more", "promising", "that", "the", "NUMBER", "option", "NUMBER", "Our", "docker", "engine", "be", "v", "NUMBER", "NUMBER", "We", "downloaded", "the", "binary", "of", "docker", "compose", "and", "change", "the", "version", "of", "the", "docker", "compose", "NUMBER", "yml", "to", "NUMBER", "instead", "of", "NUMBER", "NUMBER", "We", "also", "made", "some", "corresponding", "change", "in", "the", "docker", "compose", "NUMBER", "yml", "file", "as", "per", "version", "NUMBER", "add", "network_mode", "bridge", "for", "each", "of", "the", "service", "NUMBER", "But", "this", "also", "had", "the", "same", "outcome", "that", "the", "Cadence", "could", "not", "connect", "to", "the", "Cassandra", "for", "run", "the", "schema", "setup", "NUMBER", "Steps", "that", "finally", "get", "it", "work", "NUMBER", "Run", "Cassandra", "container", "first", "use", "the", "simple", "docker", "command", "above", "NUMBER", "Copy", "the", "cadence", "binary", "from", "Cadence", "container", "to", "local", "linux", "directory", "docker", "exec", "i", "cadence", "sh", "c", "cat", "cadence", "NUMBER", "tar", "cadence", "NUMBER", "tar", "NUMBER", "Set", "all", "the", "environment", "variables", "and", "run", "each", "command", "of", "cadence", "cassandra", "tool", "one", "by", "one", "listed", "in", "the", "file", "LINK", "NUMBER", "Start", "the", "Cadence", "Container", "with", "the", "flag", "SKIP_SCHEMA_SETUP", "true", "If", "you", "want", "me", "to", "document", "the", "exact", "steps", "further", "let", "me", "know", "NUMBER", "I", "can", "add", "it", "somewhere", "so", "that", "someone", "else", "can", "also", "benefit", "from", "this", "exercise", "NUMBER", "Thank", "you", "again", "for", "the", "pointers", "longquanzheng", "be", "this", "do", "This", "one", "be", "merge", "Still", "having", "trouble", "with", "Cassandra", "NUMBER", "It", "installs", "as", "root", "but", "the", "integration", "test", "be", "unable", "to", "connect", "to", "it", "NUMBER", "Is", "anyone", "able", "to", "see", "the", "build", "pipeline", "LINK", "server", "CLA", "assistant", "check", "LINK", "assistant", "NUMBER", "io", "pull", "badge", "sign", "LINK", "assistant", "NUMBER", "io", "uber", "cadence", "pullRequest", "NUMBER", "TAG", "All", "committers", "have", "sign", "the", "CLA", "NUMBER", "The", "list", "open", "close", "workflow", "execution", "APIs", "return", "empty", "result", "when", "calling", "them", "from", "a", "non", "active", "cluster", "NUMBER", "E", "NUMBER", "g", "NUMBER", "Calling", "list", "open", "workflow", "on", "a", "local", "domain", "active", "in", "cluster", "ABC", "from", "a", "cluster", "DEF", "will", "return", "an", "empty", "result", "NUMBER", "The", "behavior", "be", "different", "from", "other", "workflow", "APIs", "which", "throw", "DomainNotActive", "Error", "NUMBER", "Cadence", "server", "adjusts", "ScheduleToStartTimeout", "Queue", "Timeout", "to", "be", "the", "same", "as", "ExpirationInterval", "specified", "for", "RetryOptions", "NUMBER", "This", "do", "not", "work", "well", "when", "client", "wants", "to", "use", "task", "routing", "for", "host", "specific", "tasklist", "as", "it", "requires", "to", "have", "much", "smaller", "ScheduleToStartTimeout", "so", "the", "task", "can", "be", "retried", "on", "a", "different", "host", "in", "case", "of", "host", "failure", "NUMBER", "One", "of", "the", "issue", "for", "Cadence", "in", "this", "particular", "case", "it", "has", "no", "way", "to", "identify", "if", "the", "tasklist", "be", "host", "specific", "or", "not", "NUMBER", "So", "currently", "there", "be", "no", "way", "to", "associate", "different", "behavior", "for", "RetryPolicy", "based", "on", "type", "of", "activity", "tasklist", "NUMBER", "We", "might", "need", "to", "think", "about", "a", "high", "level", "abstraction", "for", "activity", "host", "specific", "tasklist", "which", "might", "make", "it", "easier", "for", "Server", "to", "associate", "different", "behavior", "for", "configured", "retry", "policy", "NUMBER", "No", "bug", "find", "NUMBER", "Test", "already", "covered", "in", "TestDescribeTaskList", "Confirmed", "NUMBER", "Closing", "the", "issue", "NUMBER", "Merged", "NUMBER", "Closing", "this", "issue", "NUMBER", "NUMBER", "LINK", "I", "be", "evaluating", "Cadence", "for", "one", "of", "my", "projects", "NUMBER", "I", "be", "required", "to", "create", "hundreds", "of", "thousands", "of", "workflows", "in", "Async", "mode", "NUMBER", "When", "I", "be", "trying", "to", "start", "ten", "thousand", "workflows", "with", "two", "worker", "threads", "I", "be", "get", "the", "following", "error", "after", "NUMBER", "workflows", "be", "created", "NUMBER", "In", "workflow", "starter", "Caused", "by", "ServiceBusyError", "message", "Too", "many", "outstanding", "request", "to", "the", "cadence", "service", "And", "the", "following", "warning", "message", "in", "Cadence", "server", "WARN", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Too", "many", "pendind", "tasks", "NUMBER", "Service", "cadence", "history", "shard", "id", "NUMBER", "wf", "cluster", "active", "wf", "component", "transfer", "queue", "processor", "I", "have", "scheduleToCloseTimeoutSeconds", "NUMBER", "for", "Activity", "and", "executionStartToCloseTimeoutSeconds", "NUMBER", "for", "workflow", "Also", "be", "there", "any", "references", "for", "Cadence", "cluster", "setup", "I", "be", "not", "able", "to", "find", "anything", "relate", "on", "google", "Feedback", "From", "Slack", "Channel", "The", "database", "tool", "be", "not", "really", "mention", "very", "clearly", "linked", "from", "the", "main", "documentation", "The", "different", "server", "roles", "worker", "frontend", "NUMBER", "be", "not", "obvious", "in", "much", "of", "the", "documentation", "and", "there", "be", "no", "docker", "setup", "that", "splits", "them", "out", "The", "database", "upgrade", "documentation", "mentions", "some", "calls", "with", "version", "but", "its", "not", "clear", "how", "you", "know", "what", "version", "you", "need", "if", "you", "update", "NUMBER", "cadence", "sql", "tool", "ep", "SQL_HOST_ADDR", "p", "port", "driver", "mysql", "db", "cadence_visibility", "update", "schema", "d", "NUMBER", "schema", "mysql", "v", "NUMBER", "cadence", "version", "v", "x", "NUMBER", "x", "y", "executes", "a", "dryrun", "of", "upgrade", "to", "version", "x", "NUMBER", "x", "The", "implications", "and", "architecture", "for", "picking", "MySQL", "be", "not", "obvious", "NUMBER", "It", "looks", "like", "this", "be", "aimed", "at", "a", "single", "master", "DB", "NUMBER", "Bug", "in", "LINK", "L", "NUMBER", "message", "talks", "about", "Keyspace", "actually", "should", "be", "database", "parameter", "Not", "much", "information", "about", "the", "config", "beyond", "the", "basics", "NUMBER", "Error", "message", "for", "not", "having", "a", "dynamic", "config", "file", "in", "the", "right", "place", "isn", "t", "great", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "error", "creating", "file", "based", "dynamic", "config", "client", "use", "no", "op", "config", "client", "instead", "NUMBER", "error", "Stat", "The", "system", "cannot", "find", "the", "path", "specified", "NUMBER", "panic", "runtime", "error", "invalid", "memory", "address", "or", "nil", "pointer", "dereference", "signal", "NUMBER", "xc", "NUMBER", "code", "NUMBER", "x", "NUMBER", "addr", "NUMBER", "x", "NUMBER", "pc", "NUMBER", "x", "NUMBER", "c", "NUMBER", "a", "More", "generally", "I", "think", "it", "would", "be", "helpful", "with", "the", "docker", "quickstart", "setups", "if", "the", "webui", "could", "allow", "you", "to", "create", "a", "domain", "and", "do", "a", "better", "job", "of", "explaining", "that", "since", "it", "s", "an", "overloaded", "term", "The", "server", "initialization", "be", "super", "flaky", "in", "the", "face", "of", "setup", "mistakes", "NUMBER", "ClusterMetadata", "be", "not", "set", "in", "development_mysql", "NUMBER", "yaml", "and", "results", "in", "the", "following", "panic", "panic", "runtime", "error", "invalid", "memory", "address", "or", "nil", "pointer", "dereference", "signal", "NUMBER", "xc", "NUMBER", "code", "NUMBER", "x", "NUMBER", "addr", "NUMBER", "x", "NUMBER", "pc", "NUMBER", "x", "NUMBER", "c", "NUMBER", "a", "goroutine", "NUMBER", "run", "main", "NUMBER", "server", "NUMBER", "artService", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "NUMBER", "xc", "NUMBER", "ffb", "NUMBER", "NUMBER", "xc", "NUMBER", "E", "stuff", "cadence", "cmd", "server", "server", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "a", "main", "NUMBER", "server", "NUMBER", "Start", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "E", "stuff", "cadence", "cmd", "server", "server", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "The", "server", "initialization", "be", "super", "flaky", "in", "the", "face", "of", "setup", "mistakes", "NUMBER", "ClusterMetadata", "be", "not", "set", "in", "development_mysql", "NUMBER", "yaml", "and", "results", "in", "the", "following", "panic", "panic", "runtime", "error", "invalid", "memory", "address", "or", "nil", "pointer", "dereference", "signal", "NUMBER", "xc", "NUMBER", "code", "NUMBER", "x", "NUMBER", "addr", "NUMBER", "x", "NUMBER", "pc", "NUMBER", "x", "NUMBER", "c", "NUMBER", "a", "goroutine", "NUMBER", "run", "main", "NUMBER", "server", "NUMBER", "artService", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "NUMBER", "xc", "NUMBER", "ffb", "NUMBER", "NUMBER", "xc", "NUMBER", "E", "stuff", "cadence", "cmd", "server", "server", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "a", "main", "NUMBER", "server", "NUMBER", "Start", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "E", "stuff", "cadence", "cmd", "server", "server", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "the", "panic", "will", "be", "fix", "in", "LINK", "relate", "to", "LINK", "We", "be", "still", "work", "on", "documentation", "for", "setting", "up", "Cadence", "clusters", "NUMBER", "samarabbas", "Are", "there", "any", "update", "in", "that", "matter", "I", "wonder", "where", "should", "I", "learn", "how", "to", "run", "more", "than", "a", "single", "server", "instance", "NUMBER", "At", "this", "point", "we", "recommend", "use", "Helm", "Chart", "LINK", "stable", "cadence", "and", "we", "planning", "to", "get", "much", "better", "documentation", "in", "the", "Q", "NUMBER", "next", "year", "NUMBER", "NUMBER", "LINK", "Merged", "NUMBER", "Closing", "the", "issue", "NUMBER", "It", "would", "be", "great", "to", "have", "the", "readme", "indicate", "the", "proper", "process", "for", "report", "security", "issue", "be", "it", "sending", "an", "e", "mail", "to", "security", "uber", "NUMBER", "com", "some", "other", "mailing", "list", "or", "file", "an", "issue", "with", "a", "particular", "format", "NUMBER", "Thanks", "NUMBER", "I", "don", "t", "have", "an", "issue", "to", "report", "sorry", "if", "I", "gave", "that", "impression", "NUMBER", "currently", "the", "API", "will", "not", "return", "whether", "a", "workflow", "be", "run", "or", "not", "if", "executionInfo", "NUMBER", "State", "persistence", "NUMBER", "WorkflowStateCompleted", "for", "close", "workflow", "closeStatus", "getWorkflowExecutionCloseStatus", "executionInfo", "NUMBER", "CloseStatus", "result", "NUMBER", "WorkflowExecutionInfo", "NUMBER", "CloseStatus", "closeStatus", "result", "NUMBER", "WorkflowExecutionInfo", "NUMBER", "CloseTime", "common", "NUMBER", "Int", "NUMBER", "Ptr", "msBuilder", "NUMBER", "GetLastUpdatedTimestamp", "customer", "need", "to", "check", "WorkflowExecutionInfo", "NUMBER", "CloseStatus", "be", "null", "or", "not", "to", "determine", "if", "worklfow", "be", "run", "NUMBER", "need", "to", "return", "more", "information", "Yes", "NUMBER", "We", "need", "to", "add", "a", "new", "field", "to", "return", "the", "current", "workflow", "state", "NUMBER", "Question", "be", "should", "we", "add", "a", "new", "NONE", "field", "to", "the", "thrift", "WorkflowExecutionCloseStatus", "enum", "as", "describe", "by", "the", "TODO", "here", "LINK", "L", "NUMBER", "or", "create", "a", "new", "IsWorkflowRunning", "bool", "field", "in", "the", "WorkflowExecutionInfo", "struct", "NUMBER", "The", "first", "approach", "may", "cause", "some", "customer", "code", "to", "break", "if", "they", "be", "use", "switch", "on", "the", "returned", "closeStatus", "field", "as", "the", "new", "value", "will", "fall", "into", "the", "default", "case", "NUMBER", "mfateev", "Do", "you", "have", "any", "suggestions", "Let", "s", "add", "a", "flag", "IsWorkflowOpen", "Decided", "not", "to", "implement", "this", "NUMBER", "I", "don", "t", "think", "we", "be", "going", "to", "support", "this", "feature", "NUMBER", "The", "reason", "be", "that", "it", "would", "require", "storing", "each", "signal", "id", "in", "the", "mutable", "state", "and", "also", "be", "not", "going", "to", "NUMBER", "work", "with", "continue", "as", "new", "NUMBER", "This", "be", "implement", "as", "part", "of", "NUMBER", "Integration", "test", "on", "MySQL", "be", "already", "run", "with", "our", "BuildKite", "build", "NUMBER", "we", "have", "a", "bug", "where", "the", "cron", "schedule", "was", "not", "replicated", "to", "passive", "cluster", "so", "after", "failover", "the", "workflow", "will", "not", "schedule", "next", "run", "when", "it", "complete", "NUMBER", "We", "could", "have", "some", "logic", "to", "protect", "this", "NUMBER", "For", "example", "in", "the", "now", "passive", "cluster", "which", "previously", "was", "active", "and", "know", "the", "workflow", "be", "cron", "when", "it", "receive", "the", "complete", "workflow", "event", "it", "should", "do", "something", "NUMBER", "For", "example", "it", "should", "call", "the", "new", "active", "cluster", "directly", "to", "start", "the", "cron", "again", "NUMBER", "New", "repo", "created", "LINK", "idl", "Cron", "workflow", "will", "create", "next", "execution", "with", "delayed", "first", "decision", "task", "NUMBER", "Currently", "the", "visibility", "record", "be", "created", "only", "after", "first", "decision", "scheduled", "NUMBER", "The", "issue", "also", "exists", "for", "workflow", "retry", "NUMBER", "During", "backoff", "list", "open", "workflow", "returns", "no", "record", "for", "the", "workflow", "NUMBER", "To", "repro", "this", "bug", "use", "a", "workflow", "that", "returns", "directly", "return", "an", "error", "if", "test", "retry", "then", "specify", "a", "cronSchedule", "or", "retry", "policy", "in", "startWorkflowOptions", "NUMBER", "Run", "this", "workflow", "and", "check", "cadence", "web", "s", "open", "workflow", "or", "use", "cli", "to", "list", "open", "workflows", "NUMBER", "There", "will", "be", "no", "records", "NUMBER", "Besides", "fix", "the", "bug", "more", "information", "should", "be", "expose", "through", "list", "open", "workflow", "API", "for", "example", "next", "scheduled", "time", "fail", "reason", "etc", "NUMBER", "thanks", "for", "add", "the", "comments", "solve", "by", "NUMBER", "What", "do", "this", "diff", "contain", "An", "implementation", "of", "blobstore", "interface", "which", "be", "backed", "by", "local", "file", "system", "this", "be", "most", "of", "the", "diff", "Static", "config", "which", "be", "use", "to", "construct", "a", "file", "based", "blobstore", "at", "cadence", "boot", "up", "time", "NUMBER", "A", "static", "config", "to", "enable", "disable", "archival", "for", "all", "of", "cadence", "NUMBER", "If", "this", "config", "be", "set", "to", "false", "then", "cadence", "will", "startup", "without", "archival", "NUMBER", "A", "dynamic", "config", "override", "to", "enable", "disable", "archival", "for", "all", "of", "cadence", "Plumbing", "needed", "to", "send", "signals", "to", "archival", "system", "workflows", "Dummy", "implementation", "of", "archival", "activity", "which", "trivially", "uses", "blobstore", "Method", "constructing", "archival", "record", "name", "based", "on", "hash", "of", "domainID", "workflowID", "and", "runID", "Updated", "unit", "test", "to", "assert", "archival", "was", "invoked", "What", "be", "not", "do", "as", "part", "of", "this", "diff", "that", "will", "be", "do", "in", "follow", "up", "diffs", "Implementation", "of", "archival", "activity", "this", "include", "visibility", "metrics", "and", "scheduling", "a", "timer", "Implementation", "of", "backfill", "activity", "current", "diff", "just", "stubs", "out", "backfill", "activity", "Integration", "test", "current", "diff", "update", "unit", "test", "but", "archival", "be", "currently", "not", "enable", "in", "integration", "test", "NUMBER", "This", "was", "left", "as", "a", "follow", "up", "item", "because", "archival", "activity", "be", "not", "finished", "NUMBER", "Playing", "nicely", "with", "cross", "DC", "NUMBER", "Must", "make", "sure", "we", "do", "not", "do", "double", "uploads", "for", "all", "archivals", "NUMBER", "Gracefully", "stopping", "archival", "when", "we", "encounter", "too", "many", "error", "What", "do", "run", "locally", "with", "archival", "enable", "look", "like", "On", "cadence", "boot", "up", "time", "a", "file", "based", "blobstore", "client", "will", "be", "created", "based", "on", "static", "yaml", "config", "NUMBER", "The", "client", "will", "write", "archival", "records", "to", "tmp", "development", "blobstore", "buckets", "NUMBER", "On", "startup", "there", "be", "a", "default", "bucket", "and", "two", "custom", "buckets", "created", "NUMBER", "File", "based", "blobstore", "implementation", "do", "not", "create", "buckets", "dynamically", "this", "be", "because", "an", "implementation", "based", "on", "S", "NUMBER", "or", "other", "blobstore", "would", "not", "do", "dynamic", "bucket", "creation", "NUMBER", "A", "new", "domain", "can", "be", "registered", "with", "archival", "enable", "e", "NUMBER", "g", "NUMBER", "cadence", "do", "samples", "domain", "admin", "domain", "register", "archival_enabled", "true", "An", "exist", "domain", "can", "enable", "archival", "e", "NUMBER", "g", "NUMBER", "cadence", "do", "samples", "domain", "admin", "domain", "update", "archival_status", "enable", "When", "a", "domain", "first", "enable", "archival", "either", "on", "update", "or", "register", "a", "custom", "bucket", "name", "can", "be", "optionally", "provide", "NUMBER", "If", "no", "custom", "bucket", "name", "be", "provide", "the", "default", "bucket", "will", "be", "use", "NUMBER", "When", "a", "domain", "which", "has", "archival", "enable", "has", "a", "workflow", "which", "completes", "the", "following", "will", "happen", "History", "engine", "will", "use", "archival", "client", "to", "send", "a", "signal", "to", "archival", "system", "workflow", "Archival", "client", "will", "send", "a", "signal", "with", "start", "to", "a", "system", "workflow", "which", "can", "handle", "the", "archival", "The", "signal", "contains", "information", "about", "the", "user", "workflow", "which", "finished", "The", "system", "workflow", "listens", "for", "signals", "and", "dispatches", "signals", "to", "archival", "activities", "Archival", "activities", "use", "a", "blobstore", "client", "to", "archive", "history", "currently", "they", "be", "uploading", "a", "dummy", "blob", "not", "real", "history", "Archival", "activities", "retry", "forever", "NUMBER", "Hi", "team", "I", "made", "change", "to", "cadence", "to", "expose", "prometheus", "metrics", "use", "LINK", "go", "tally", "tree", "master", "prometheus", "This", "resolve", "NUMBER", "But", "it", "do", "not", "work", "as", "the", "metric", "names", "in", "the", "cadence", "be", "not", "compatible", "with", "Prometheus", "query", "language", "NUMBER", "LINK", "L", "NUMBER", "Basically", "Prometheus", "do", "not", "like", "and", "NUMBER", "in", "the", "names", "NUMBER", "LINK", "There", "be", "two", "options", "NUMBER", "Rename", "the", "metrics", "NUMBER", "But", "this", "will", "be", "disruptive", "to", "the", "exist", "monitoring", "rules", "setup", "of", "Cadence", "within", "Uber", "NUMBER", "I", "want", "to", "know", "how", "disruptive", "it", "will", "be", "NUMBER", "Rename", "the", "metrics", "on", "the", "fly", "when", "Prometheus", "monitoring", "be", "on", "NUMBER", "Please", "suggest", "which", "one", "be", "acceptable", "NUMBER", "Thanks", "Harsha", "I", "would", "love", "to", "see", "this", "feature", "in", "Cadence", "NUMBER", "When", "I", "tried", "I", "couldn", "t", "make", "it", "completely", "work", "because", "of", "Prometheus", "client", "panicking", "on", "naming", "conflict", "with", "uber", "tally", "scoped", "metric", "names", "NUMBER", "I", "will", "find", "some", "time", "this", "week", "to", "rebase", "this", "oh", "nice", "NUMBER", "I", "will", "verify", "after", "rebasing", "NUMBER", "Thanks", "Closing", "as", "NUMBER", "supersedes", "and", "add", "prometheus", "metrics", "support", "NUMBER", "close", "in", "favor", "of", "NUMBER", "We", "have", "limited", "number", "of", "secondary", "indexes", "NUMBER", "We", "should", "ignore", "the", "status", "filter", "if", "the", "user", "calls", "list", "workflow", "execution", "with", "both", "workflow", "execution", "ID", "and", "status", "filter", "NUMBER", "In", "some", "environments", "to", "satisfy", "difference", "between", "local", "laptop", "environment", "and", "CI", "we", "need", "to", "make", "sure", "cadence", "binds", "on", "all", "interfaces", "Our", "internal", "integration", "framework", "creates", "isolated", "docker", "network", "and", "during", "local", "development", "it", "be", "exporting", "ports", "back", "to", "host", "system", "here", "we", "need", "to", "make", "sure", "cadence", "server", "binds", "on", "external", "IP", "of", "docker", "container", "docker", "be", "not", "exporting", "binds", "on", "localhost", "of", "container", "when", "we", "run", "same", "test", "inside", "CI", "environment", "we", "re", "not", "exporting", "anything", "to", "host", "machine", "and", "run", "test", "in", "that", "isolated", "network", "and", "here", "we", "need", "cadence", "to", "bind", "on", "NUMBER", "NUMBER", "Binding", "on", "all", "interfaces", "will", "satisfy", "both", "environments", "and", "it", "be", "defaul", "behavior", "of", "yarpc", "apps", "afaik", "NUMBER", "artms", "Just", "a", "ping", "Where", "be", "you", "with", "this", "PR", "Do", "you", "still", "need", "the", "change", "in", "this", "PR", "artms", "Just", "a", "ping", "Where", "be", "you", "with", "this", "PR", "Do", "you", "still", "need", "the", "change", "in", "this", "PR", "Sorry", "last", "week", "was", "very", "busy", "didn", "t", "have", "time", "to", "sit", "and", "do", "it", "I", "m", "keep", "this", "change", "in", "mind", "venkat", "NUMBER", "change", "be", "ready", "venkat", "NUMBER", "gentle", "nudge", "NUMBER", "Closing", "test", "pull", "request", "to", "just", "clean", "up", "our", "CR", "list", "See", "PR", "for", "change", "LINK", "web", "pull", "NUMBER", "Cadence", "frontend", "reads", "history", "for", "executions", "from", "persistence", "and", "deserializes", "them", "before", "sending", "it", "back", "to", "client", "NUMBER", "This", "add", "unnecessary", "load", "on", "the", "frontend", "as", "it", "never", "do", "anything", "with", "the", "history", "before", "shipping", "it", "back", "to", "client", "NUMBER", "We", "need", "to", "have", "another", "API", "to", "GetRawHistory", "which", "returns", "the", "entire", "payload", "as", "be", "back", "to", "client", "and", "client", "do", "the", "deserialization", "to", "thrift", "object", "NUMBER", "This", "will", "reduce", "a", "lot", "of", "load", "from", "frontend", "NUMBER", "Describe", "workflow", "execution", "behavior", "be", "broken", "when", "server", "side", "retries", "kicks", "in", "for", "activities", "NUMBER", "Currently", "we", "expose", "the", "following", "pending", "activity", "information", "ActivityID", "NUMBER", "ActivityType", "name", "hearbeating_activity", "State", "STARTED", "HeartbeatDetails", "NUMBER", "n", "LastHeartbeatTimestamp", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "If", "this", "activity", "timeouts", "due", "to", "heartbeat", "timeout", "it", "shows", "the", "following", "ActivityID", "NUMBER", "ActivityType", "name", "hearbeating_activity", "State", "SCHEDULED", "HeartbeatDetails", "LastHeartbeatTimestamp", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "Details", "and", "LastHeartbeatTimestamps", "be", "cleared", "NUMBER", "We", "need", "to", "surface", "all", "retryable", "information", "in", "mutable", "state", "including", "previous", "error", "lastheartbeat", "etc", "NUMBER", "Any", "update", "on", "this", "Would", "be", "helpful", "for", "debugging", "For", "case", "NUMBER", "and", "NUMBER", "the", "activity", "be", "either", "succeed", "or", "fail", "and", "the", "information", "can", "be", "accessed", "by", "showing", "history", "of", "the", "workflow", "NUMBER", "For", "case", "NUMBER", "I", "be", "unable", "to", "get", "a", "local", "repro", "NUMBER", "I", "think", "it", "has", "already", "be", "fix", "by", "NUMBER", "LINK", "NUMBER", "See", "also", "NUMBER", "LINK", "NUMBER", "need", "to", "create", "an", "integration", "test", "to", "ensure", "the", "behavior", "be", "correct", "NUMBER", "PR", "LINK", "for", "the", "integration", "test", "NUMBER", "Just", "find", "that", "the", "issue", "still", "exists", "for", "cross", "DC", "NUMBER", "Working", "on", "a", "fix", "NUMBER", "Merged", "NUMBER", "Closing", "this", "issue", "NUMBER", "There", "be", "some", "red", "marks", "in", "the", "last", "merge", "commit", "LINK", "Also", "on", "my", "laptop", "run", "make", "cover_ci", "sometimes", "would", "fail", "NUMBER", "They", "be", "because", "for", "two", "reason", "Test", "killed", "run", "too", "long", "NUMBER", "m", "NUMBER", "s", "NUMBER", "FAIL", "github", "NUMBER", "com", "uber", "cadence", "host", "NUMBER", "s", "Or", "FAIL", "TestIntegrationSuite", "TestActivityCancellation", "NUMBER", "s", "TAG", "NUMBER", "Error", "Trace", "integration_test", "NUMBER", "go", "NUMBER", "Error", "Should", "be", "true", "Test", "TestIntegrationSuite", "TestActivityCancellation", "My", "guess", "be", "we", "hit", "some", "performance", "issue", "in", "the", "last", "few", "commit", "NUMBER", "LINK", "ci", "NUMBER", "org", "uber", "cadence", "build", "NUMBER", "utm_source", "github_status", "utm_medium", "notification", "LINK", "ci", "NUMBER", "org", "uber", "cadence", "build", "NUMBER", "utm_source", "github_status", "utm_medium", "notification", "LINK", "ci", "NUMBER", "org", "uber", "cadence", "build", "NUMBER", "utm_source", "github_status", "utm_medium", "notification", "LINK", "ci", "NUMBER", "org", "uber", "cadence", "build", "NUMBER", "utm_source", "github_status", "utm_medium", "notification", "longquanzheng", "it", "looks", "like", "this", "can", "be", "close", "now", "that", "we", "moved", "to", "buildkite", "this", "has", "something", "to", "do", "with", "list", "open", "close", "workflow", "of", "a", "domain", "which", "be", "effectively", "local", "global", "domain", "with", "one", "target", "datacenter", "NUMBER", "my", "opinion", "the", "current", "behavior", "be", "ok", "i", "NUMBER", "e", "NUMBER", "any", "read", "operation", "should", "not", "see", "domain", "not", "active", "NUMBER", "this", "be", "a", "feature", "not", "a", "bug", "This", "be", "do", "NUMBER", "Skips", "deserialization", "of", "this", "data", "since", "we", "don", "t", "need", "to", "turn", "history", "events", "into", "strongly", "typed", "objects", "on", "the", "server", "side", "NUMBER", "longquanzheng", "was", "this", "something", "you", "already", "worked", "on", "Is", "there", "a", "public", "API", "to", "get", "history", "blobs", "samarabbas", "was", "this", "feature", "already", "build", "No", "it", "be", "still", "not", "do", "yet", "NUMBER", "I", "have", "created", "a", "couple", "of", "tasks", "which", "needs", "to", "happen", "before", "this", "NUMBER", "Activity", "task", "fail", "timeout", "event", "should", "also", "include", "activity", "progress", "if", "there", "be", "any", "NUMBER", "Too", "many", "conflict", "use", "this", "PR", "instead", "LINK", "This", "be", "a", "duplicate", "of", "NUMBER", "Will", "close", "the", "old", "one", "NUMBER", "yes", "should", "be", "part", "of", "the", "invariant", "check", "NUMBER", "some", "more", "info", "on", "this", "currently", "all", "workflow", "update", "transaction", "will", "do", "a", "check", "on", "be", "the", "current", "workflow", "NUMBER", "so", "even", "if", "we", "have", "a", "bug", "data", "resurrection", "the", "blast", "radius", "be", "acceptable", "NUMBER", "same", "applies", "to", "workflow", "creation", "meiliang", "NUMBER", "this", "issue", "should", "be", "re", "opened", "basically", "we", "were", "dealing", "with", "this", "err", "ErrConflict", "by", "write", "a", "for", "loop", "and", "throw", "away", "in", "mem", "change", "of", "mutable", "state", "and", "redo", "the", "change", "again", "LINK", "L", "NUMBER", "we", "should", "NUMBER", "get", "rid", "of", "the", "generation", "of", "ErrConflict", "to", "be", "replaced", "by", "directly", "use", "ConditionFailedError", "ref", "LINK", "L", "NUMBER", "ref", "LINK", "L", "NUMBER", "NUMBER", "we", "should", "get", "rid", "of", "the", "for", "loop", "dealing", "with", "ErrConflict", "ref", "see", "above", "and", "use", "network", "middle", "layer", "to", "do", "retry", "which", "will", "looks", "clean", "if", "seeing", "err", "with", "type", "ConditionFailedError", "andrewjdawson", "NUMBER", "Can", "you", "check", "if", "this", "be", "still", "relevant", "LINK", "This", "diff", "address", "the", "issue", "NUMBER", "Query", "cannot", "complete", "unless", "at", "least", "one", "decision", "task", "has", "be", "completed", "NUMBER", "This", "diff", "will", "make", "the", "error", "message", "more", "obvious", "NUMBER", "Currently", "list", "of", "workflow", "executions", "doesn", "t", "include", "any", "user", "provide", "information", "about", "a", "workflow", "NUMBER", "The", "proposal", "be", "to", "support", "additional", "field", "description", "or", "info", "that", "be", "include", "into", "the", "visiblity", "records", "NUMBER", "This", "be", "support", "by", "search", "attributes", "on", "advance", "visibility", "store", "NUMBER", "LINK", "_search", "LINK", "on", "elasticsearch", "NUMBER", "md", "Looks", "good", "after", "the", "update", "NUMBER", "Let", "s", "modify", "the", "unit", "test", "as", "I", "suggested", "in", "the", "comment", "and", "land", "this", "PR", "NUMBER", "Add", "the", "miss", "metric", "scope", "for", "ResetStickyTaskList", "Currently", "all", "list", "close", "workflow", "APIs", "be", "ordered", "by", "workflow", "start_time", "this", "lead", "to", "confusion", "when", "users", "try", "to", "list", "fail", "workflows", "in", "last", "NUMBER", "days", "where", "they", "only", "saw", "those", "fail", "workflow", "start", "within", "NUMBER", "days", "NUMBER", "The", "reason", "be", "closed_executions", "initially", "chose", "to", "use", "start_time", "as", "clustering", "key", "and", "sort", "by", "that", "NUMBER", "With", "latest", "Cadence", "server", "v", "NUMBER", "users", "need", "to", "follow", "the", "following", "steps", "to", "migrate", "to", "this", "feature", "NUMBER", "update", "db", "schema", "and", "make", "sure", "visibility", "keyspace", "contains", "table", "closed_executions_v", "NUMBER", "NUMBER", "let", "visibility", "data", "goes", "to", "both", "close_execution", "and", "close_executions_v", "NUMBER", "tables", "for", "longest", "domain", "retention", "NUMBER", "NUMBER", "enable", "dynamic", "config", "system", "NUMBER", "enableReadFromClosedExecutionV", "NUMBER", "and", "restart", "server", "NUMBER", "There", "be", "no", "change", "needed", "from", "Cadence", "client", "side", "NUMBER", "Details", "could", "be", "find", "NUMBER", "LINK", "NUMBER", "LINK", "vancexu", "can", "we", "close", "this", "issue", "Compressing", "data", "might", "also", "help", "close", "issue", "decision", "will", "be", "invalidated", "when", "workflow", "turn", "from", "active", "to", "standby", "or", "standby", "to", "active", "due", "to", "issue", "with", "buffered", "events", "NUMBER", "activity", "will", "not", "be", "affected", "Done", "internally", "LINK", "Visibility", "table", "uses", "domain_id", "domain_partition", "as", "partition", "key", "NUMBER", "Currently", "we", "be", "hardcode", "NUMBER", "as", "domain_partition", "for", "all", "domains", "NUMBER", "This", "will", "become", "scale", "issue", "if", "we", "have", "large", "number", "of", "workflows", "in", "a", "domain", "like", "NUMBER", "M", "NUMBER", "We", "need", "to", "fix", "this", "for", "autobots", "use", "case", "NUMBER", "Possible", "solutions", "NUMBER", "Generate", "a", "day_id", "from", "timestamp", "and", "use", "it", "as", "domain_partition", "NUMBER", "NUMBER", "Config", "a", "max_partition", "for", "each", "domain", "then", "hash", "workflow_id", "max_partition", "and", "use", "it", "as", "domain_partition", "NUMBER", "NUMBER", "Or", "even", "combine", "with", "NUMBER", "and", "NUMBER", "use", "the", "combination", "of", "the", "day_id", "and", "hash", "workflow_id", "max_partition", "NUMBER", "There", "be", "pros", "cons", "for", "each", "approaches", "NUMBER", "InternalServiceError", "Message", "CreateDomain", "operation", "fail", "NUMBER", "Inserting", "into", "domains", "table", "NUMBER", "Error", "gocql", "not", "enough", "columns", "to", "scan", "into", "have", "NUMBER", "want", "NUMBER", "This", "bug", "cannot", "be", "stably", "repro", "NUMBER", "We", "we", "fix", "it", "when", "it", "becomes", "an", "issue", "NUMBER", "The", "test", "be", "in", "common", "persistence", "cassandraMetadataPersistenceV", "NUMBER", "_test", "NUMBER", "go", "TestConcurrentCreateDOmain", "Implement", "SQL", "persistence", "so", "that", "Cadence", "can", "run", "on", "top", "of", "SQL", "database", "NUMBER", "We", "should", "rely", "on", "general", "SQL", "interface", "so", "the", "actual", "DB", "implementation", "can", "be", "swappable", "NUMBER", "meiliang", "NUMBER", "Any", "update", "on", "this", "We", "were", "hoping", "to", "use", "this", "in", "the", "next", "couple", "weeks", "NUMBER", "Any", "update", "on", "this", "issue", "and", "the", "SQL", "implementation", "Yes", "NUMBER", "We", "recently", "implement", "all", "the", "SQL", "persistence", "other", "than", "visibility", "and", "made", "it", "work", "on", "top", "of", "MySQL", "we", "use", "general", "SQL", "library", "so", "it", "should", "work", "with", "other", "SQL", "implementations", "NUMBER", "uber", "qlam", "can", "you", "send", "out", "instructions", "so", "people", "can", "try", "Hi", "let", "me", "know", "if", "these", "instructions", "work", "for", "you", "NUMBER", "NUMBER", "Stand", "up", "a", "MySQL", "instance", "or", "perhaps", "your", "SQL", "database", "of", "choice", "at", "localhost", "NUMBER", "NUMBER", "NUMBER", "Make", "sure", "that", "NO_ZERO_IN_DATE", "and", "STRICT_TRANS_TABLES", "be", "disabled", "LINK", "default", "value", "for", "create", "date", "timestamp", "field", "as", "NUMBER", "timestamps", "be", "use", "for", "timer", "queues", "NUMBER", "NUMBER", "Create", "a", "schema", "call", "catalyst_test", "and", "give", "a", "user", "uber", "with", "password", "uber", "privileges", "to", "it", "NUMBER", "NUMBER", "Create", "a", "file", "tmp", "usemysql", "NUMBER", "This", "hack", "be", "the", "current", "way", "of", "enabling", "disabling", "SQL", "persistence", "NUMBER", "NUMBER", "If", "you", "already", "have", "a", "local", "cassandra", "instance", "with", "the", "cadence", "visibility", "keyspace", "you", "can", "skip", "this", "NUMBER", "NUMBER", "Go", "to", "the", "cadence", "source", "and", "run", "make", "install", "schema", "NUMBER", "NUMBER", "Clone", "uber", "qlam", "cadence", "into", "GOPATH", "src", "github", "NUMBER", "com", "uber", "cadence", "NUMBER", "You", "might", "need", "to", "displace", "your", "copy", "of", "uber", "cadence", "NUMBER", "NUMBER", "Check", "out", "revision", "helloworld", "NUMBER", "NUMBER", "NUMBER", "Build", "with", "make", "NUMBER", "NUMBER", "Install", "the", "MySQL", "schema", "NUMBER", "Execute", "the", "contents", "of", "common", "persistence", "sql", "schema", "NUMBER", "_base", "NUMBER", "up", "NUMBER", "sql", "NUMBER", "NUMBER", "Start", "cadence", "cadence", "server", "start", "Hey", "this", "be", "awesome", "Looking", "forward", "to", "it", "NUMBER", "Is", "this", "feature", "actively", "worked", "on", "or", "be", "it", "still", "a", "proposal", "a", "POC", "implementation", "Is", "there", "a", "decision", "that", "SQL", "be", "going", "to", "be", "support", "in", "Cadence", "Is", "there", "a", "way", "we", "users", "can", "help", "with", "this", "feature", "other", "than", "test", "it", "Yes", "this", "be", "active", "NUMBER", "We", "re", "currently", "get", "the", "PoC", "into", "a", "state", "that", "it", "can", "be", "checked", "into", "master", "NUMBER", "Issues", "relate", "to", "this", "work", "will", "be", "marked", "with", "the", "sql", "LINK", "label", "NUMBER", "That", "s", "good", "to", "hear", "Is", "there", "a", "rough", "ETA", "when", "that", "will", "happen", "Cassandra", "be", "a", "no", "go", "for", "us", "in", "the", "long", "term", "and", "we", "be", "about", "to", "make", "a", "decision", "about", "use", "Cadence", "in", "our", "project", "NUMBER", "I", "m", "currently", "work", "on", "merge", "the", "SQL", "support", "into", "the", "master", "branch", "NUMBER", "I", "target", "this", "or", "next", "week", "to", "land", "it", "NUMBER", "It", "be", "still", "miss", "the", "visibility", "function", "support", "NUMBER", "So", "realistically", "it", "would", "take", "another", "week", "or", "two", "to", "get", "all", "of", "the", "API", "implement", "NUMBER", "Then", "we", "need", "thorough", "performance", "test", "to", "consider", "it", "officially", "ready", "NUMBER", "So", "less", "than", "in", "a", "month", "you", "could", "start", "your", "performance", "test", "to", "speed", "things", "up", "NUMBER", "Here", "be", "the", "branch", "I", "m", "currently", "use", "for", "development", "LINK", "mfateev", "thanks", "a", "lot", "that", "sounds", "very", "promising", "NUMBER", "Are", "the", "instructions", "to", "run", "with", "Mysql", "still", "valid", "on", "master", "branch", "No", "the", "instructions", "be", "not", "valid", "for", "it", "NUMBER", "The", "SQL", "persistence", "unit", "test", "can", "be", "executed", "through", "make", "assuming", "that", "a", "mysql", "database", "with", "user", "uber", "and", "password", "uber", "be", "reachable", "on", "a", "localhost", "NUMBER", "Most", "of", "them", "be", "still", "disabled", "as", "they", "be", "not", "passing", "and", "I", "m", "work", "on", "fix", "them", "NUMBER", "We", "be", "also", "work", "on", "refactoring", "configuration", "and", "initialization", "code", "to", "support", "pluggable", "persistence", "implementations", "NUMBER", "After", "this", "code", "be", "merge", "the", "update", "instructions", "will", "be", "posted", "NUMBER", "Hi", "mfateev", "I", "see", "good", "progress", "on", "SQL", "implementation", "Can", "you", "update", "the", "instructions", "to", "run", "locally", "with", "SQL", "setup", "I", "want", "to", "try", "it", "out", "and", "if", "possible", "contribute", "to", "it", "further", "NUMBER", "Thanks", "Any", "update", "no", "change", "on", "that", "branch", "since", "a", "month", "ago", "NUMBER", "All", "of", "the", "pieces", "needed", "to", "execute", "a", "fully", "functional", "cadence", "server", "on", "top", "of", "SQL", "be", "now", "in", "master", "NUMBER", "Cadence", "config", "now", "support", "multiple", "data", "store", "options", "SQL", "Cassandra", "LINK", "L", "NUMBER", "LINK", "L", "NUMBER", "The", "persistence", "layer", "unit", "test", "also", "run", "against", "both", "SQL", "Cassandra", "as", "of", "today", "NUMBER", "That", "said", "we", "be", "still", "in", "the", "process", "of", "test", "for", "correctness", "performance", "scalability", "NUMBER", "We", "expect", "to", "find", "bug", "and", "or", "perf", "issue", "as", "we", "be", "doing", "this", "NUMBER", "Meanwhile", "if", "you", "like", "to", "try", "out", "run", "cadence", "on", "top", "of", "SQL", "you", "can", "follow", "the", "steps", "below", "Install", "Schema", "use", "the", "NUMBER", "sql", "file", "in", "this", "directory", "LINK", "Modify", "Server", "Config", "LINK", "L", "NUMBER", "persistence", "defaultStore", "mysql", "default", "visibilityStore", "mysql", "visibility", "numHistoryShards", "NUMBER", "datastores", "mysql", "default", "sql", "driverName", "mysql", "user", "userName", "password", "password", "connectAddr", "addr", "port", "connectProtocol", "tcp", "databaseName", "cadence", "mysql", "visibility", "sql", "driverName", "mysql", "databaseName", "cadence_visibility", "connectAddr", "addr", "port", "connectProtocol", "tcp", "user", "userName", "password", "password", "Hey", "guys", "No", "pressure", "but", "be", "there", "any", "update", "on", "the", "SQL", "support", "We", "be", "really", "looking", "forward", "to", "use", "it", "NUMBER", "Can", "we", "help", "in", "any", "way", "to", "make", "progress", "Is", "there", "a", "roadmap", "or", "project", "board", "to", "track", "the", "progress", "of", "the", "feature", "I", "can", "t", "really", "see", "any", "issue", "PRs", "labeled", "with", "sql", "except", "maybe", "NUMBER", "Closing", "this", "since", "MySQL", "support", "be", "now", "in", "beta", "as", "of", "release", "NUMBER", "LINK", "NUMBER", "Use", "the", "sql", "label", "LINK", "to", "tag", "issue", "and", "follow", "progress", "NUMBER", "It", "be", "non", "trival", "to", "add", "domain", "filter", "to", "dynamic", "config", "MaximumBufferedEventsBatch", "in", "history", "NUMBER", "Currently", "in", "mutableState", "we", "only", "have", "domainID", "but", "no", "domainName", "or", "domainCache", "NUMBER", "There", "be", "NUMBER", "possible", "ways", "NUMBER", "Add", "domainName", "to", "executionInfo", "along", "with", "domainID", "NUMBER", "But", "this", "requires", "persist", "additional", "unimportant", "info", "NUMBER", "NUMBER", "Add", "domainCache", "reference", "in", "mutableState", "NUMBER", "Add", "new", "type", "of", "filter", "domainID", "which", "confuse", "people", "and", "sometimes", "hard", "to", "get", "domainID", "NUMBER", "Merge", "protocol", "sometimes", "rely", "on", "the", "entire", "history", "be", "sent", "on", "the", "first", "replication", "task", "NUMBER", "As", "sometime", "conflict", "resolution", "could", "drop", "certain", "events", "and", "only", "way", "to", "correctly", "merge", "execution", "history", "be", "to", "send", "the", "entire", "history", "on", "first", "replication", "task", "NUMBER", "Enable", "global", "domain", "add", "at", "LINK", "Replication", "switch", "be", "decided", "not", "needed", "for", "now", "NUMBER", "Last", "few", "events", "in", "the", "history", "NUMBER", "TimerFired", "TimerId", "NUMBER", "StartedEventId", "NUMBER", "NUMBER", "DecisionTaskScheduled", "TaskList", "Name", "samar", "C", "NUMBER", "Q", "NUMBER", "VG", "NUMBER", "WM", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "NUMBER", "aa", "NUMBER", "a", "NUMBER", "ff", "StartToCloseTimeoutSeconds", "NUMBER", "Attempt", "NUMBER", "Logs", "from", "the", "replicator", "WARN", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Dropping", "stale", "replication", "task", "NUMBER", "CurrentV", "NUMBER", "LastWriteV", "NUMBER", "LastWriteEvent", "NUMBER", "Service", "cadence", "history", "execution", "id", "cron", "NUMBER", "workflow", "NUMBER", "sanity", "first", "event", "id", "NUMBER", "next", "event", "id", "NUMBER", "run", "id", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "fb", "NUMBER", "d", "NUMBER", "b", "NUMBER", "cd", "shard", "id", "NUMBER", "source", "cluster", "standby", "version", "NUMBER", "wf", "component", "history", "replicator", "WARN", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Dropping", "stale", "replication", "task", "NUMBER", "CurrentV", "NUMBER", "LastWriteV", "NUMBER", "LastWriteEvent", "NUMBER", "Service", "cadence", "history", "execution", "id", "cron", "NUMBER", "workflow", "NUMBER", "sanity", "first", "event", "id", "NUMBER", "next", "event", "id", "NUMBER", "run", "id", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "fb", "NUMBER", "d", "NUMBER", "b", "NUMBER", "cd", "shard", "id", "NUMBER", "source", "cluster", "standby", "version", "NUMBER", "wf", "component", "history", "replicator", "We", "be", "not", "seeing", "this", "recently", "NUMBER", "Let", "s", "keep", "an", "eye", "out", "to", "make", "sure", "it", "do", "not", "appear", "again", "NUMBER", "close", "due", "to", "no", "longer", "relevant", "Closing", "this", "one", "as", "we", "have", "already", "add", "UT", "coverage", "for", "core", "components", "NUMBER", "Will", "file", "explicit", "workitems", "for", "things", "which", "need", "more", "coverage", "NUMBER", "This", "allows", "the", "Makefile", "to", "be", "use", "for", "production", "schema", "setup", "by", "add", "variables", "for", "change", "the", "cassandra", "host", "and", "the", "replication", "factor", "NUMBER", "Also", "introduces", "a", "Dockerfile", "for", "the", "cadence", "cassandra", "tool", "that", "makes", "it", "easier", "to", "get", "start", "administering", "cassandra", "for", "cadence", "NUMBER", "The", "docker", "image", "also", "allows", "us", "to", "setup", "the", "schema", "in", "a", "kubernetes", "cluster", "easily", "NUMBER", "This", "be", "relate", "to", "NUMBER", "vancexu", "can", "you", "review", "this", "PR", "Thank", "you", "ryanwalls", "for", "the", "contribution", "Could", "you", "move", "dockerfile", "cct", "to", "docker", "folder", "like", "NUMBER", "and", "address", "merge", "conflict", "vancexu", "Yep", "will", "do", "that", "in", "the", "next", "couple", "days", "NUMBER", "Hi", "ryanwalls", "would", "you", "be", "able", "to", "update", "this", "PR", "and", "NUMBER", "I", "think", "the", "Docker", "image", "part", "be", "already", "handle", "but", "the", "makefile", "part", "be", "not", "NUMBER", "Hey", "Guys", "I", "be", "get", "an", "intermittent", "error", "when", "trying", "to", "start", "cadence", "as", "a", "binary", "locally", "Ringpop", "creation", "fail", "Service", "cadence", "frontend", "err", "join", "duration", "of", "NUMBER", "s", "exceeded", "max", "NUMBER", "s", "What", "be", "ringpop", "And", "what", "could", "cause", "this", "error", "I", "notice", "this", "issue", "more", "if", "I", "have", "chrome", "and", "slack", "open", "NUMBER", "It", "also", "will", "kill", "my", "network", "sometime", "too", "NUMBER", "Hi", "alexDrinkwater", "ringpop", "be", "a", "library", "LINK", "go", "Cadence", "use", "for", "service", "discovery", "NUMBER", "It", "looks", "like", "node", "take", "too", "long", "to", "join", "the", "ring", "have", "you", "try", "use", "our", "docker", "image", "to", "start", "cadence", "locally", "How", "did", "you", "start", "cadence", "as", "binary", "We", "use", "binary", "all", "the", "time", "but", "we", "never", "seen", "this", "error", "before", "NUMBER", "We", "do", "see", "similar", "error", "when", "run", "our", "integration", "test", "on", "Travis", "though", "LINK", "NUMBER", "vancexu", "I", "compiled", "the", "binary", "into", "an", "exe", "for", "windows", "use", "this", "command", "go", "build", "o", "cadence", "NUMBER", "exe", "I", "be", "trying", "to", "start", "it", "with", "cadence", "NUMBER", "exe", "start", "alexDrinkwater", "we", "run", "Cadence", "server", "as", "an", "executable", "on", "our", "Macbook", "all", "the", "time", "for", "local", "development", "and", "have", "never", "run", "into", "the", "issue", "you", "describe", "above", "NUMBER", "Unfortunately", "we", "don", "t", "have", "the", "expertise", "to", "debug", "this", "issue", "on", "Windows", "NUMBER", "I", "suggest", "you", "use", "the", "docker", "we", "provide", "to", "run", "Cadence", "on", "Windows", "NUMBER", "Otherwise", "you", "need", "to", "debug", "further", "to", "figure", "out", "why", "ring", "pop", "be", "unable", "to", "bootstrap", "on", "a", "windows", "machine", "NUMBER", "vancexu", "Is", "the", "service", "discovery", "use", "for", "discovering", "other", "cadence", "servers", "or", "Cassandra", "servers", "We", "be", "just", "run", "one", "instance", "of", "cadence", "can", "we", "turn", "off", "service", "discovery", "samarabbas", "Unfortunately", "this", "be", "not", "for", "a", "development", "scenario", "but", "for", "a", "windows", "desktop", "app", "and", "it", "be", "a", "requirement", "to", "not", "have", "docker", "NUMBER", "alexDrinkwater", "run", "even", "NUMBER", "instance", "of", "cadence", "will", "start", "multiple", "shards", "of", "frontend", "history", "and", "matching", "services", "which", "ensure", "Cadence", "be", "scalable", "so", "there", "be", "no", "way", "to", "shut", "it", "down", "NUMBER", "Could", "you", "try", "edit", "your", "config", "file", "development", "NUMBER", "yaml", "and", "change", "the", "ringpop", "maxJoinDuration", "to", "NUMBER", "s", "then", "make", "clean", "build", "again", "and", "try", "alexDrinkwater", "Were", "you", "able", "to", "walk", "around", "this", "ringpop", "issue", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "aebbe", "NUMBER", "bdf", "NUMBER", "f", "NUMBER", "da", "NUMBER", "e", "NUMBER", "dec", "NUMBER", "feee", "NUMBER", "on", "refresh", "NUMBER", "cache", "into", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "befbefd", "NUMBER", "be", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "eba", "NUMBER", "e", "NUMBER", "db", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "cea", "NUMBER", "b", "NUMBER", "bc", "on", "bugfix", "replicator", "into", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "db", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fe", "on", "master", "NUMBER", "CLA", "assistant", "check", "LINK", "assistant", "NUMBER", "io", "pull", "badge", "sign", "LINK", "assistant", "NUMBER", "io", "uber", "cadence", "pullRequest", "NUMBER", "TAG", "All", "committers", "have", "sign", "the", "CLA", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "df", "NUMBER", "ebbebb", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "on", "longquanzheng", "admin", "dev", "into", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "dfbd", "NUMBER", "c", "NUMBER", "fec", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "df", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "fdc", "NUMBER", "ef", "NUMBER", "on", "bugfix", "into", "f", "NUMBER", "a", "NUMBER", "dbee", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "aa", "NUMBER", "dfef", "NUMBER", "dd", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "d", "NUMBER", "de", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "d", "NUMBER", "bab", "NUMBER", "a", "NUMBER", "on", "replicator", "workflow", "id", "reuse", "into", "NUMBER", "f", "NUMBER", "dbdb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ebe", "NUMBER", "c", "NUMBER", "dfcce", "NUMBER", "b", "NUMBER", "d", "on", "master", "NUMBER", "Currently", "only", "start", "time", "be", "filterable", "NUMBER", "Needed", "for", "uber", "cadence", "web", "NUMBER", "longquanzheng", "be", "this", "part", "of", "your", "work", "on", "visibility", "If", "workflow", "has", "incorrect", "timeout", "specific", "when", "activity", "be", "scheduled", "then", "it", "appears", "the", "workflow", "be", "stuck", "when", "someone", "restarts", "the", "worker", "while", "activity", "be", "run", "NUMBER", "But", "in", "reality", "workflow", "be", "waiting", "on", "a", "timer", "to", "fire", "to", "timeout", "the", "activity", "in", "future", "NUMBER", "It", "would", "be", "great", "to", "have", "a", "CLI", "command", "to", "manually", "fail", "an", "activity", "considering", "we", "already", "expose", "all", "the", "information", "about", "outstanding", "activities", "use", "the", "describe", "command", "NUMBER", "This", "will", "be", "really", "useful", "feature", "for", "operations", "where", "someone", "can", "manually", "unstuck", "workflows", "by", "fail", "such", "activities", "manually", "NUMBER", "I", "would", "also", "allow", "completing", "activity", "successfully", "through", "CLI", "longquanzheng", "looks", "like", "this", "can", "be", "close", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "aecf", "NUMBER", "eda", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "da", "NUMBER", "fb", "NUMBER", "b", "on", "fakfa", "into", "NUMBER", "f", "NUMBER", "dbdb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ebe", "NUMBER", "c", "NUMBER", "dfcce", "NUMBER", "b", "NUMBER", "d", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "c", "NUMBER", "dec", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "on", "bugfix", "into", "c", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "cbab", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "ec", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "e", "NUMBER", "on", "bugfix", "version", "into", "dbe", "NUMBER", "abb", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "ec", "NUMBER", "bfea", "NUMBER", "ba", "NUMBER", "d", "NUMBER", "bfa", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cac", "NUMBER", "c", "NUMBER", "ae", "NUMBER", "dc", "NUMBER", "dead", "NUMBER", "a", "NUMBER", "on", "shard", "update", "into", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "fdeeaa", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "dda", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ee", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "on", "kafka", "config", "into", "c", "NUMBER", "ac", "NUMBER", "a", "NUMBER", "ccd", "NUMBER", "da", "NUMBER", "e", "NUMBER", "bdfdc", "NUMBER", "ff", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "bf", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ee", "NUMBER", "f", "NUMBER", "aeb", "NUMBER", "b", "on", "bugfix", "into", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "effdccabb", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "abb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "de", "NUMBER", "e", "NUMBER", "b", "NUMBER", "fed", "NUMBER", "bb", "NUMBER", "on", "tmp", "into", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ad", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aeabebfed", "on", "bugfix", "into", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "aee", "NUMBER", "bc", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "fee", "NUMBER", "a", "NUMBER", "ab", "on", "bugfix", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ae", "NUMBER", "fb", "NUMBER", "aab", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Can", "you", "abandon", "this", "request", "as", "it", "be", "already", "landed", "in", "the", "patch", "branch", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "db", "NUMBER", "f", "NUMBER", "a", "NUMBER", "afb", "NUMBER", "ed", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "on", "trigger", "into", "NUMBER", "bec", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "afbf", "NUMBER", "fc", "NUMBER", "ab", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "eaa", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "de", "NUMBER", "c", "NUMBER", "bc", "on", "remaining", "into", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "f", "NUMBER", "fb", "NUMBER", "acfd", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "bdaf", "NUMBER", "e", "NUMBER", "on", "domain", "into", "NUMBER", "ffac", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "fcf", "NUMBER", "fd", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "This", "seems", "to", "be", "a", "common", "problem", "clients", "run", "into", "where", "they", "set", "very", "large", "DecisionTimeout", "value", "when", "starting", "workflow", "execution", "NUMBER", "This", "cause", "the", "workflow", "to", "appear", "it", "be", "stuck", "when", "decision", "be", "drop", "by", "the", "worker", "for", "whatever", "reason", "NUMBER", "Decision", "should", "be", "very", "fast", "and", "most", "of", "the", "time", "should", "take", "under", "a", "second", "NUMBER", "We", "need", "to", "restrict", "DecisionTimeout", "to", "some", "reasonable", "value", "like", "NUMBER", "seconds", "for", "instance", "NUMBER", "Things", "to", "consider", "when", "restricting", "be", "NUMBER", "Local", "Activity", "NUMBER", "Debugging", "experience", "be", "effected", "as", "decision", "will", "timeout", "when", "stepping", "through", "decider", "code", "One", "idea", "be", "to", "log", "a", "warning", "when", "someone", "sets", "a", "decision", "timeout", "higher", "than", "a", "threshold", "NUMBER", "Another", "idea", "be", "to", "reject", "request", "on", "docker", "with", "higher", "decision", "timeout", "for", "developers", "to", "catch", "these", "during", "development", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ffab", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "on", "pagination", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ae", "NUMBER", "fb", "NUMBER", "aab", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Schema", "change", "to", "buffer", "replication", "tasks", "as", "part", "of", "mutable", "state", "NUMBER", "Persistence", "layer", "change", "to", "provide", "support", "for", "add", "new", "replication", "tasks", "and", "deleting", "replication", "tasks", "after", "they", "be", "processed", "and", "applied", "to", "workflow", "execution", "NUMBER", "MutableState", "change", "to", "support", "CRUD", "of", "buffered", "replication", "tasks", "NUMBER", "And", "HistoryReplicator", "change", "to", "detect", "out", "of", "order", "events", "and", "instead", "add", "replication", "task", "to", "the", "buffer", "NUMBER", "Also", "loop", "through", "all", "replication", "task", "and", "flush", "any", "buffered", "tasks", "after", "processing", "of", "an", "update", "NUMBER", "fix", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "c", "NUMBER", "fd", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "cbcdfef", "NUMBER", "af", "NUMBER", "d", "NUMBER", "d", "NUMBER", "df", "NUMBER", "f", "on", "samarabbas", "xdc", "reorder", "events", "into", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "c", "NUMBER", "fdcc", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "ed", "NUMBER", "eabe", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "befb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "on", "timer", "bug", "into", "b", "NUMBER", "c", "NUMBER", "ebbd", "NUMBER", "bea", "NUMBER", "e", "NUMBER", "c", "NUMBER", "aeab", "NUMBER", "c", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "f", "NUMBER", "f", "on", "update", "docker", "into", "NUMBER", "aecfbce", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "d", "NUMBER", "db", "NUMBER", "e", "NUMBER", "de", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fbb", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "cc", "on", "ms", "version", "into", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "c", "NUMBER", "fdcc", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "ed", "NUMBER", "eabe", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "dcf", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "on", "event", "version", "into", "NUMBER", "f", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "c", "NUMBER", "aaeee", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "NUMBER", "ef", "on", "master", "NUMBER", "WorkflowExecutionContext", "NUMBER", "UpdateHelper", "has", "one", "more", "location", "where", "it", "update", "replication", "state", "for", "new", "run", "under", "the", "flag", "updateReplicationState", "NUMBER", "Make", "sure", "to", "update", "that", "code", "path", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "bce", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "events", "into", "f", "NUMBER", "cd", "NUMBER", "df", "NUMBER", "ee", "NUMBER", "fbd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ffa", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "eaf", "NUMBER", "a", "NUMBER", "af", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "fde", "NUMBER", "bf", "on", "events", "into", "f", "NUMBER", "cd", "NUMBER", "df", "NUMBER", "ee", "NUMBER", "fbd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ffa", "NUMBER", "on", "master", "NUMBER", "We", "need", "admin", "commands", "like", "the", "following", "to", "support", "certain", "servicing", "scenarios", "NUMBER", "Visibility", "into", "MutableState", "Database", "NUMBER", "Visibility", "into", "MutableState", "Cached", "NUMBER", "Induce", "DecisionTask", "NUMBER", "Induce", "ActivityTimeout", "for", "workflow", "execution", "NUMBER", "Force", "Reload", "Shard", "NUMBER", "Force", "Reload", "mutable", "state", "cache", "NUMBER", "Find", "host", "from", "workflow", "execution", "History", "Host", "Level", "Analytics", "NUMBER", "Number", "of", "Shards", "NUMBER", "Number", "of", "items", "in", "DomainCache", "NUMBER", "Number", "of", "items", "in", "HistoryCache", "for", "a", "specific", "shard", "LINK", "LINK", "conditionally", "NUMBER", "currently", "there", "be", "no", "clean", "reliably", "way", "to", "know", "that", "if", "an", "error", "be", "returned", "no", "change", "be", "modify", "to", "mutable", "state", "NUMBER", "so", "each", "time", "an", "error", "happens", "mutable", "state", "cache", "be", "cleared", "NUMBER", "plz", "keep", "this", "issue", "open", "to", "remind", "us", "of", "this", "potential", "perf", "improvement", "NUMBER", "however", "there", "be", "nothing", "we", "can", "do", "for", "now", "and", "probably", "even", "in", "the", "future", "we", "can", "add", "a", "dirty", "cache", "flag", "indicating", "that", "the", "mutable", "state", "be", "change", "the", "cost", "be", "refactoring", "the", "entire", "mutable", "state", "corresponding", "logic", "change", "everything", "to", "getter", "setter", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "f", "NUMBER", "cccdd", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "cacf", "NUMBER", "ccf", "NUMBER", "aeaab", "NUMBER", "a", "NUMBER", "on", "bugfix", "mutablestate", "x", "into", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "ed", "NUMBER", "bb", "NUMBER", "bce", "NUMBER", "c", "NUMBER", "dbe", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "on", "bugfix", "cache", "into", "df", "NUMBER", "fc", "NUMBER", "f", "NUMBER", "c", "NUMBER", "de", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ace", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "d", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "ee", "NUMBER", "b", "NUMBER", "b", "NUMBER", "on", "transfer", "Q", "ack", "x", "into", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "f", "NUMBER", "e", "NUMBER", "caee", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "on", "master", "NUMBER", "Some", "scenarios", "do", "not", "require", "querying", "close", "workflows", "NUMBER", "So", "for", "them", "having", "a", "flag", "on", "a", "query", "to", "not", "query", "close", "workflows", "be", "required", "NUMBER", "It", "be", "also", "a", "performance", "optimization", "to", "not", "load", "the", "close", "workflow", "history", "to", "answer", "these", "queries", "NUMBER", "Currently", "a", "workflow", "code", "can", "wait", "for", "completion", "of", "its", "child", "workflow", "NUMBER", "It", "be", "also", "possible", "to", "wait", "for", "a", "completion", "of", "any", "workflow", "given", "its", "id", "from", "an", "external", "client", "NUMBER", "Ability", "waiting", "for", "completion", "of", "any", "workflow", "from", "a", "decider", "code", "be", "miss", "NUMBER", "Strawman", "proposal", "Add", "a", "WaitForExternalWorkflowCompletion", "decision", "and", "the", "correspondent", "event", "NUMBER", "Add", "a", "WaitForExternalWorkflowCompletionFailed", "event", "Add", "ExternalWorkflowCompleted", "Failed", "Cancelled", "Terminated", "TimedOut", "events", "NUMBER", "Another", "option", "be", "to", "have", "an", "ExternalWorkflowCompleted", "event", "that", "contains", "the", "termination", "event", "of", "the", "external", "workflow", "as", "a", "field", "NUMBER", "The", "waiting", "part", "be", "almost", "the", "same", "if", "this", "be", "implement", "NUMBER", "But", "the", "child", "workflow", "creation", "part", "be", "still", "needed", "NUMBER", "lemme", "NUMBER", "this", "request", "NUMBER", "I", "m", "hoping", "to", "build", "a", "nanny", "workflow", "to", "do", "cleanup", "regardless", "of", "how", "another", "workflow", "exits", "including", "termination", "and", "at", "the", "moment", "the", "only", "ways", "to", "do", "this", "seem", "to", "be", "use", "the", "nanny", "workflow", "to", "run", "the", "real", "workflow", "as", "a", "child", "workflow", "so", "it", "can", "wait", "on", "the", "completion", "NUMBER", "works", "but", "add", "a", "layer", "of", "indirection", "kinda", "hard", "to", "adapt", "exist", "code", "NUMBER", "long", "poll", "with", "GetWorkflow", "NUMBER", "and", "wait", "on", "the", "completion", "e", "NUMBER", "g", "NUMBER", "in", "a", "long", "run", "activity", "NUMBER", "fine", "for", "small", "numbers", "but", "I", "d", "be", "looking", "at", "millions", "of", "active", "workflows", "active", "long", "polls", "NUMBER", "or", "this", "issue", "which", "would", "let", "me", "launch", "any", "number", "of", "nanny", "observer", "cleanup", "workflows", "from", "inside", "the", "real", "workflow", "whenever", "needed", "NUMBER", "child", "policy", "abandon", "and", "they", "wait", "on", "the", "parent", "s", "completion", "Specific", "to", "my", "case", "where", "I", "want", "to", "run", "code", "based", "on", "the", "completion", "of", "a", "single", "other", "workflow", "meiliang", "NUMBER", "came", "up", "with", "the", "great", "idea", "of", "starting", "a", "child", "workflow", "with", "ParentClosePolicyRequestCancel", "and", "just", "sleeping", "for", "like", "a", "year", "or", "some", "other", "absurd", "length", "NUMBER", "When", "the", "parent", "completes", "the", "ctx", "will", "cancel", "and", "the", "sleep", "will", "unblock", "at", "which", "point", "I", "can", "get", "a", "disconnected", "context", "and", "do", "whatever", "I", "like", "NUMBER", "That", "s", "a", "pretty", "acceptable", "workaround", "for", "cases", "like", "mine", "NUMBER", "It", "could", "even", "be", "use", "to", "build", "a", "multi", "workflow", "watcher", "e", "NUMBER", "g", "NUMBER", "with", "children", "signaling", "a", "shared", "observer", "workflow", "NUMBER", "That", "d", "be", "more", "complicated", "though", "hopefully", "I", "won", "t", "need", "to", "do", "that", "NUMBER", "A", "true", "wait", "for", "any", "workflow", "mechanism", "would", "still", "be", "great", "though", "and", "far", "more", "natural", "so", "my", "NUMBER", "stands", "edit", "bleh", "NUMBER", "this", "plays", "poorly", "with", "resets", "can", "t", "reset", "with", "pending", "children", "NUMBER", "so", "maybe", "I", "can", "t", "use", "this", "either", "NUMBER", "hmm", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "fadcbb", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "db", "NUMBER", "on", "bugbugbug", "bug", "NUMBER", "into", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ca", "NUMBER", "ff", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "on", "master", "NUMBER", "lgtm", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "fa", "NUMBER", "d", "NUMBER", "abbfd", "NUMBER", "c", "NUMBER", "cf", "NUMBER", "d", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ccc", "NUMBER", "on", "NUMBER", "into", "ebde", "NUMBER", "dd", "NUMBER", "cdee", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "bba", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dfe", "NUMBER", "on", "bugbugbug", "bug", "NUMBER", "into", "c", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "cdcbf", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "af", "NUMBER", "a", "NUMBER", "e", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fa", "NUMBER", "aebdb", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "fd", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "on", "transfer", "Q", "ack", "NUMBER", "into", "NUMBER", "f", "NUMBER", "cbf", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "d", "NUMBER", "e", "NUMBER", "be", "NUMBER", "a", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "ecf", "NUMBER", "b", "NUMBER", "df", "NUMBER", "babbec", "NUMBER", "on", "transfer", "Q", "standby", "into", "NUMBER", "beef", "NUMBER", "bb", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "fbebde", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "cfccc", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "on", "timer", "Q", "failover", "into", "f", "NUMBER", "cd", "NUMBER", "df", "NUMBER", "ee", "NUMBER", "fbd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ffa", "NUMBER", "on", "master", "NUMBER", "can", "be", "close", "after", "yycptt", "s", "work", "on", "queue", "multi", "cursers", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "fa", "NUMBER", "c", "NUMBER", "c", "NUMBER", "bfb", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "ad", "NUMBER", "ecaa", "NUMBER", "e", "NUMBER", "on", "integ", "speed", "into", "NUMBER", "aca", "NUMBER", "fbfd", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "aea", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "df", "NUMBER", "e", "NUMBER", "bfc", "NUMBER", "be", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "f", "NUMBER", "aa", "NUMBER", "b", "NUMBER", "on", "timer", "Q", "process", "NUMBER", "into", "e", "NUMBER", "e", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "bb", "NUMBER", "c", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "be", "NUMBER", "ec", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "NUMBER", "da", "NUMBER", "b", "NUMBER", "b", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "d", "NUMBER", "caea", "on", "timer", "Q", "process", "into", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "caf", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "fdcc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "c", "on", "metadata", "into", "NUMBER", "aca", "NUMBER", "fbfd", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "aea", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "eae", "NUMBER", "b", "NUMBER", "dba", "NUMBER", "a", "NUMBER", "be", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "f", "NUMBER", "on", "timer", "Q", "ack", "into", "NUMBER", "d", "NUMBER", "e", "NUMBER", "fcae", "NUMBER", "ef", "NUMBER", "fbed", "NUMBER", "e", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "af", "NUMBER", "db", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fcbd", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dcf", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "on", "timer", "Q", "p", "NUMBER", "into", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "a", "NUMBER", "d", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "History", "engine", "change", "to", "generate", "replication", "task", "when", "IsGlobalDomain", "be", "enable", "NUMBER", "MutableStateBuilder", "be", "also", "update", "to", "load", "replication", "state", "for", "the", "domain", "and", "have", "support", "for", "creating", "replication", "task", "on", "update", "along", "with", "relevant", "update", "to", "mutable", "state", "NUMBER", "Replication", "tasks", "be", "write", "to", "a", "separate", "queue", "for", "the", "shard", "NUMBER", "This", "requires", "persistence", "change", "to", "write", "replication", "tasks", "on", "update", "in", "the", "same", "transaction", "and", "new", "API", "for", "reading", "and", "completing", "the", "task", "NUMBER", "New", "AckLevel", "be", "needed", "for", "processing", "of", "replication", "tasks", "NUMBER", "This", "requires", "change", "to", "shard", "crud", "on", "the", "persistence", "layer", "for", "reading", "and", "write", "the", "new", "ack", "level", "for", "replication", "task", "processing", "NUMBER", "ClusterMetadata", "and", "MessagingClient", "be", "already", "expose", "on", "the", "Service", "NUMBER", "So", "passing", "through", "Service", "to", "all", "layers", "in", "History", "service", "which", "needs", "access", "to", "both", "ClusterMetadata", "and", "MessagingClient", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "c", "NUMBER", "ee", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dbbeb", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "b", "NUMBER", "ea", "on", "samarabbas", "xdc", "replicate", "events", "into", "NUMBER", "a", "NUMBER", "fab", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "cbbc", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "bbd", "NUMBER", "c", "NUMBER", "e", "NUMBER", "fbefae", "NUMBER", "f", "NUMBER", "e", "on", "timer", "Q", "standby", "processor", "into", "ae", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "dca", "NUMBER", "ffcc", "NUMBER", "fc", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Multiple", "steps", "NUMBER", "Be", "able", "to", "restart", "from", "begining", "NUMBER", "NUMBER", "Be", "able", "to", "restart", "from", "point", "in", "history", "NUMBER", "NUMBER", "Be", "able", "to", "detect", "the", "last", "good", "point", "in", "history", "and", "restart", "from", "that", "point", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ba", "NUMBER", "c", "NUMBER", "fd", "NUMBER", "d", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "b", "NUMBER", "af", "NUMBER", "on", "bugfix", "domain", "into", "ae", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "dca", "NUMBER", "ffcc", "NUMBER", "fc", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ee", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "fddd", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "ff", "on", "domain", "cache", "into", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "aeecd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "da", "NUMBER", "ab", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ca", "NUMBER", "a", "NUMBER", "on", "timer", "builder", "into", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "aeecd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "cabd", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "db", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "cadc", "NUMBER", "c", "NUMBER", "on", "bugfix", "shard", "consistency", "into", "NUMBER", "ad", "NUMBER", "ffc", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ffd", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "bf", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "bf", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "efba", "NUMBER", "e", "NUMBER", "on", "bugfix", "visibility", "consistency", "into", "NUMBER", "ad", "NUMBER", "ffc", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ffd", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "db", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "a", "NUMBER", "fab", "NUMBER", "dc", "NUMBER", "efc", "NUMBER", "on", "revert", "into", "NUMBER", "d", "NUMBER", "d", "NUMBER", "dbc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "cb", "NUMBER", "ed", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "dc", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "aeeac", "NUMBER", "b", "NUMBER", "c", "NUMBER", "acc", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "revert", "into", "NUMBER", "f", "NUMBER", "d", "NUMBER", "ffefb", "NUMBER", "aaad", "NUMBER", "f", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "db", "NUMBER", "c", "NUMBER", "c", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ebee", "NUMBER", "a", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "ab", "NUMBER", "on", "bugfix", "visibility", "into", "NUMBER", "b", "NUMBER", "da", "NUMBER", "a", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "on", "master", "NUMBER", "rewrite", "be", "do", "close", "issue", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "cea", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "cea", "NUMBER", "on", "bugfix", "transfer", "into", "NUMBER", "a", "NUMBER", "abbeb", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "bedc", "NUMBER", "c", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "df", "NUMBER", "a", "NUMBER", "dddf", "NUMBER", "ef", "NUMBER", "on", "timer", "bug", "into", "NUMBER", "a", "NUMBER", "abbeb", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "bedc", "NUMBER", "c", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "f", "on", "timer", "into", "edb", "NUMBER", "c", "NUMBER", "f", "NUMBER", "cdfbbb", "NUMBER", "eff", "NUMBER", "ebd", "NUMBER", "e", "NUMBER", "aeb", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Let", "s", "hold", "onto", "this", "change", "until", "we", "cut", "a", "new", "release", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ffd", "NUMBER", "a", "NUMBER", "f", "NUMBER", "on", "decision", "order", "NUMBER", "into", "NUMBER", "bf", "NUMBER", "dee", "NUMBER", "eed", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "cdea", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "bdd", "NUMBER", "d", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "cd", "NUMBER", "a", "NUMBER", "f", "NUMBER", "fbfd", "on", "decision", "order", "NUMBER", "into", "NUMBER", "dbbf", "NUMBER", "b", "NUMBER", "ffd", "NUMBER", "cd", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "ac", "NUMBER", "on", "master", "NUMBER", "When", "SignalExternalWorkflowDecision", "doesn", "t", "specify", "domain", "the", "following", "error", "be", "returned", "Unable", "to", "signal", "workflow", "across", "domain", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "c", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "d", "NUMBER", "daa", "NUMBER", "a", "NUMBER", "on", "bugfix", "dynamicconfig", "into", "NUMBER", "fb", "NUMBER", "ee", "NUMBER", "da", "NUMBER", "daa", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "ed", "NUMBER", "f", "NUMBER", "c", "NUMBER", "on", "cancellation", "into", "NUMBER", "fb", "NUMBER", "ee", "NUMBER", "da", "NUMBER", "daa", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "ecd", "NUMBER", "bfab", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "bc", "NUMBER", "a", "on", "bugfix", "mock", "into", "NUMBER", "f", "NUMBER", "d", "NUMBER", "eb", "NUMBER", "c", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "f", "on", "master", "NUMBER", "Resolved", "along", "with", "LINK", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "fff", "NUMBER", "e", "NUMBER", "db", "NUMBER", "a", "on", "replicate", "domain", "do", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ebd", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "on", "samarabbas", "replicator", "into", "d", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "ec", "NUMBER", "acd", "NUMBER", "acab", "NUMBER", "c", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "a", "NUMBER", "efc", "NUMBER", "dc", "NUMBER", "ea", "NUMBER", "fc", "NUMBER", "ef", "NUMBER", "fca", "NUMBER", "b", "NUMBER", "on", "samarabbas", "replicator", "fix", "into", "ad", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "eb", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "on", "uber", "master", "NUMBER", "DecisionTaskFailedCause", "doesn", "t", "make", "sense", "when", "come", "from", "a", "decider", "NUMBER", "LINK", "L", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ded", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "on", "samarabbas", "replicator", "into", "ce", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "d", "on", "uber", "master", "NUMBER", "Currently", "sync", "lock", "be", "use", "to", "ensure", "serialized", "transaction", "like", "in", "CreateWorkflowExecution", "NUMBER", "There", "be", "cases", "when", "one", "call", "be", "holding", "lock", "because", "of", "network", "db", "issue", "which", "blocks", "all", "the", "others", "calls", "and", "then", "after", "lock", "release", "all", "calls", "start", "to", "run", "and", "cause", "a", "spike", "NUMBER", "One", "thing", "we", "can", "do", "to", "optimize", "be", "Instead", "of", "use", "native", "sync", "lock", "use", "common", "NUMBER", "lock", "with", "frontend", "context", "NUMBER", "If", "frontend", "context", "deadline", "exceed", "history", "calls", "can", "release", "lock", "immediately", "NUMBER", "Moreover", "control", "be", "not", "propagated", "to", "database", "layer", "NUMBER", "This", "be", "currently", "fine", "due", "to", "client", "issue", "LINK", "go", "cadence", "client", "issue", "NUMBER", "Apparently", "this", "was", "already", "taken", "care", "of", "by", "NUMBER", "Closing", "this", "issue", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "ad", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "be", "NUMBER", "a", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "on", "samarabbas", "history", "panic", "into", "NUMBER", "b", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "bc", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "on", "uber", "master", "NUMBER", "Running", "on", "local", "docker", "NUMBER", "Getting", "panic", "cadence_", "NUMBER", "time", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "level", "debug", "msg", "Decision", "Updated", "Schedule", "NUMBER", "Started", "NUMBER", "ID", "emptyUuid", "Timeout", "NUMBER", "Attempt", "NUMBER", "Timestamp", "NUMBER", "Service", "cadence", "history", "execution", "id", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "f", "b", "NUMBER", "a", "NUMBER", "NUMBER", "dbc", "b", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "run", "id", "f", "NUMBER", "d", "NUMBER", "NUMBER", "df", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "eea", "NUMBER", "ad", "shard", "id", "NUMBER", "wf", "component", "history", "cache", "cadence_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Unary", "handler", "panicked", "runtime", "error", "invalid", "memory", "address", "or", "nil", "pointer", "dereference", "cadence_", "NUMBER", "goroutine", "NUMBER", "run", "cadence_", "NUMBER", "runtime", "debug", "NUMBER", "Stack", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "NUMBER", "xd", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "usr", "local", "go", "src", "runtime", "debug", "stack", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "api", "transport", "NUMBER", "DispatchUnaryHandler", "NUMBER", "func", "NUMBER", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "api", "transport", "handler", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "e", "cadence_", "NUMBER", "panic", "NUMBER", "xd", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "usr", "local", "go", "src", "runtime", "panic", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "cf", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "historyEngineImpl", "NUMBER", "RespondDecisionTaskCompleted", "NUMBER", "xc", "NUMBER", "fc", "NUMBER", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "historyEngine", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "f", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "NUMBER", "Handler", "NUMBER", "RespondDecisionTaskCompleted", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "service", "history", "handler", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "NUMBER", "gen", "go", "history", "historyserviceserver", "NUMBER", "handler", "NUMBER", "RespondDecisionTaskCompleted", "NUMBER", "x", "NUMBER", "f", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "e", "NUMBER", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "NUMBER", "gen", "go", "history", "historyserviceserver", "server", "NUMBER", "go", "NUMBER", "NUMBER", "xac", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "NUMBER", "gen", "go", "history", "historyserviceserver", "NUMBER", "handler", "NUMBER", "RespondDecisionTaskCompleted", "fm", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "NUMBER", "gen", "go", "history", "historyserviceserver", "server", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "encoding", "thrift", "NUMBER", "riftUnaryHandler", "NUMBER", "Handle", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "edc", "NUMBER", "NUMBER", "x", "NUMBER", "d", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "NUMBER", "x", "NUMBER", "ebd", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "encoding", "thrift", "inbound", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "encoding", "thrift", "NUMBER", "thriftUnaryHandler", "NUMBER", "Handle", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "NUMBER", "x", "NUMBER", "ebd", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "af", "NUMBER", "NUMBER", "xea", "NUMBER", "cadence_", "NUMBER", "TAG", "NUMBER", "NUMBER", "xa", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "internal", "observability", "NUMBER", "Middleware", "NUMBER", "Handle", "NUMBER", "xc", "NUMBER", "da", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "NUMBER", "x", "NUMBER", "ebf", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "xed", "NUMBER", "cf", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "d", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "internal", "observability", "middleware", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "api", "middleware", "NUMBER", "unaryHandlerWithMiddleware", "NUMBER", "Handle", "NUMBER", "x", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "xc", "NUMBER", "da", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "NUMBER", "x", "NUMBER", "ebf", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "api", "middleware", "inbound", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "a", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "api", "middleware", "NUMBER", "unaryHandlerWithMiddleware", "NUMBER", "Handle", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "NUMBER", "x", "NUMBER", "ebf", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "a", "NUMBER", "cadence_", "NUMBER", "TAG", "NUMBER", "NUMBER", "xa", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "api", "transport", "NUMBER", "DispatchUnaryHandler", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "x", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "a", "NUMBER", "NUMBER", "xed", "NUMBER", "cd", "NUMBER", "NUMBER", "x", "NUMBER", "ce", "NUMBER", "e", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "NUMBER", "x", "NUMBER", "ebf", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "api", "transport", "handler", "NUMBER", "go", "NUMBER", "NUMBER", "xdb", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "transport", "tchannel", "NUMBER", "handler", "NUMBER", "callHandler", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "efd", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ec", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "be", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "transport", "tchannel", "handler", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "fe", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "transport", "tchannel", "NUMBER", "handler", "NUMBER", "handle", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "efd", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ec", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "efd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "xc", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "be", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "transport", "tchannel", "handler", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "transport", "tchannel", "NUMBER", "handler", "NUMBER", "Handle", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "efd", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ec", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "efd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "xc", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "transport", "tchannel", "handler", "NUMBER", "go", "NUMBER", "NUMBER", "xa", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "go", "NUMBER", "uber", "NUMBER", "org", "yarpc", "transport", "tchannel", "NUMBER", "handler", "NUMBER", "Handle", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "efd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "xc", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cadence_", "NUMBER", "TAG", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "github", "NUMBER", "com", "uber", "tchannel", "go", "NUMBER", "channelHandler", "NUMBER", "Handle", "NUMBER", "xc", "NUMBER", "NUMBER", "x", "NUMBER", "efd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "xc", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "github", "NUMBER", "com", "uber", "tchannel", "go", "handlers", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "cadence_", "NUMBER", "github", "NUMBER", "com", "uber", "cadence", "vendor", "github", "NUMBER", "com", "uber", "tchannel", "go", "NUMBER", "Connection", "NUMBER", "dispatchInbound", "NUMBER", "xc", "NUMBER", "fc", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "github", "NUMBER", "com", "uber", "tchannel", "go", "inbound", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "cadence_", "NUMBER", "created", "by", "github", "NUMBER", "com", "uber", "cadence", "vendor", "github", "NUMBER", "com", "uber", "tchannel", "go", "NUMBER", "Connection", "NUMBER", "handleCallReq", "cadence_", "NUMBER", "go", "src", "github", "NUMBER", "com", "uber", "cadence", "vendor", "github", "NUMBER", "com", "uber", "tchannel", "go", "inbound", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "The", "decision", "task", "reply", "that", "cause", "the", "panic", "StartChildWorkflowExecutionDecisionAttributes", "TaskList", "UnitTest", "WorkflowType", "ITestChild", "execute", "WorkflowId", "NUMBER", "be", "NUMBER", "e", "NUMBER", "NUMBER", "ef", "b", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "NUMBER", "ExecutionStartToCloseTimeoutSeconds", "NUMBER", "TaskStartToCloseTimeoutSeconds", "NUMBER", "Input", "Ljava", "NUMBER", "lang", "NUMBER", "Object", "Hello", "FailWorkflowExecutionDecisionAttributes", "Details", "java", "NUMBER", "lang", "NUMBER", "NullPointerException", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "dispatcher", "NUMBER", "SyncDecisionContext", "NUMBER", "executeChildWorkflow", "SyncDecisionContext", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "dispatcher", "NUMBER", "ChildWorkflowInvocationHandler", "NUMBER", "executeChildWorkflow", "ChildWorkflowInvocationHandler", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "dispatcher", "NUMBER", "ChildWorkflowInvocationHandler", "NUMBER", "invoke", "ChildWorkflowInvocationHandler", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "workflow", "NUMBER", "Proxy", "NUMBER", "execute", "Unknown", "Source", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "workflow", "NUMBER", "WorkfowTest", "TestParentWorkflow", "NUMBER", "execute", "WorkfowTest", "NUMBER", "java", "NUMBER", "at", "sun", "NUMBER", "reflect", "NUMBER", "NativeMethodAccessorImpl", "NUMBER", "invoke", "NUMBER", "Native", "Method", "at", "sun", "NUMBER", "reflect", "NUMBER", "NativeMethodAccessorImpl", "NUMBER", "invoke", "NativeMethodAccessorImpl", "NUMBER", "java", "NUMBER", "at", "sun", "NUMBER", "reflect", "NUMBER", "DelegatingMethodAccessorImpl", "NUMBER", "invoke", "DelegatingMethodAccessorImpl", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "lang", "NUMBER", "reflect", "NUMBER", "Method", "NUMBER", "invoke", "Method", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "worker", "NUMBER", "POJOWorkflowImplementationFactory", "POJOWorkflowImplementation", "NUMBER", "execute", "POJOWorkflowImplementationFactory", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "dispatcher", "NUMBER", "WorkflowProc", "NUMBER", "apply", "WorkflowProc", "NUMBER", "java", "NUMBER", "at", "com", "NUMBER", "uber", "NUMBER", "cadence", "NUMBER", "internal", "NUMBER", "dispatcher", "NUMBER", "WorkflowThreadInternal", "RunnableWrapper", "NUMBER", "run", "WorkflowThreadInternal", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "Executors", "RunnableAdapter", "NUMBER", "call", "Executors", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "FutureTask", "NUMBER", "run", "FutureTask", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "NUMBER", "runWorker", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "util", "NUMBER", "concurrent", "NUMBER", "ThreadPoolExecutor", "Worker", "NUMBER", "run", "ThreadPoolExecutor", "NUMBER", "java", "NUMBER", "at", "java", "NUMBER", "lang", "NUMBER", "Thread", "NUMBER", "run", "Thread", "NUMBER", "java", "NUMBER", "Reason", "unknown", "The", "same", "happens", "if", "there", "be", "no", "FailWorkflowExecutionDecisionAttributes", "NUMBER", "decisions", "Failed", "taskId", "NUMBER", "decisions", "StartChildWorkflowExecutionDecisionAttributes", "WorkflowType", "ITestChild", "execute", "ExecutionStartToCloseTimeoutSeconds", "NUMBER", "TaskStartToCloseTimeoutSeconds", "NUMBER", "WorkflowId", "dc", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "NUMBER", "TaskList", "UnitTest", "Input", "Ljava", "NUMBER", "lang", "NUMBER", "Object", "Hello", "StartChildWorkflowExecutionDecisionAttributes", "WorkflowType", "ITestChild", "execute", "ExecutionStartToCloseTimeoutSeconds", "NUMBER", "TaskStartToCloseTimeoutSeconds", "NUMBER", "WorkflowId", "child", "NUMBER", "TaskList", "UnitTest", "Input", "Ljava", "NUMBER", "lang", "NUMBER", "Object", "World", "Found", "the", "bug", "NUMBER", "Condition", "at", "this", "line", "should", "be", "instead", "of", "LINK", "L", "NUMBER", "I", "m", "preparing", "a", "fix", "NUMBER", "It", "looks", "not", "as", "straightforward", "as", "I", "initially", "thought", "NUMBER", "I", "couldn", "t", "find", "the", "domain", "in", "the", "mutable", "state", "only", "domainUUID", "NUMBER", "So", "we", "either", "need", "to", "change", "all", "code", "to", "allow", "nil", "domain", "for", "child", "events", "or", "populate", "domain", "on", "front", "end", "NUMBER", "Nil", "childPolicy", "also", "crashes", "the", "server", "NUMBER", "Fixing", "condition", "be", "not", "enough", "as", "code", "invoked", "by", "this", "method", "blows", "up", "as", "doing", "Domain", "on", "nil", "value", "NUMBER", "I", "don", "t", "think", "childPolicy", "should", "be", "required", "for", "child", "workflows", "NUMBER", "It", "should", "be", "just", "inherited", "NUMBER", "I", "would", "also", "inherit", "all", "other", "parameters", "NUMBER", "Just", "make", "execution", "timeout", "up", "to", "time", "when", "parent", "times", "out", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ab", "NUMBER", "e", "NUMBER", "c", "NUMBER", "on", "samarabbas", "docker", "release", "into", "f", "NUMBER", "d", "NUMBER", "dbda", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "on", "uber", "master", "NUMBER", "cadence", "server", "has", "the", "information", "we", "need", "to", "send", "down", "the", "parent", "info", "down", "in", "the", "PollForDecisionTaskTaskResponse", "NUMBER", "Then", "on", "client", "side", "SDK", "we", "need", "to", "expose", "that", "info", "NUMBER", "Currently", "parent", "has", "to", "pass", "its", "WorkflowID", "RunID", "as", "argument", "to", "child", "workflow", "for", "child", "to", "be", "able", "to", "send", "back", "signal", "NUMBER", "This", "be", "now", "returned", "by", "the", "server", "in", "the", "WorkflowExecutionStarted", "event", "LINK", "L", "NUMBER", "Parent", "workflow", "info", "seems", "available", "in", "the", "Go", "client", "since", "LINK", "go", "cadence", "client", "issue", "NUMBER", "The", "Java", "client", "LINK", "java", "client", "blob", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "bb", "NUMBER", "bb", "NUMBER", "a", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "src", "main", "java", "com", "uber", "cadence", "internal", "replay", "WorkflowContext", "NUMBER", "java", "L", "NUMBER", "L", "NUMBER", "seems", "to", "be", "the", "one", "lagging", "behind", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "dad", "NUMBER", "c", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "ca", "NUMBER", "a", "NUMBER", "c", "NUMBER", "adc", "NUMBER", "on", "fix", "sig", "self", "into", "NUMBER", "d", "NUMBER", "fcf", "NUMBER", "c", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "eec", "NUMBER", "on", "master", "NUMBER", "The", "use", "case", "be", "to", "reject", "Signal", "if", "it", "cannot", "be", "processed", "by", "the", "workflow", "code", "for", "whatever", "reason", "NUMBER", "For", "example", "if", "Signal", "be", "created", "from", "a", "Cherami", "message", "handler", "nacking", "it", "would", "put", "it", "into", "Cherami", "DLQ", "NUMBER", "We", "could", "introduce", "new", "concept", "which", "be", "similar", "to", "Query", "but", "mutates", "the", "workflow", "state", "and", "can", "return", "result", "instead", "of", "Signal", "to", "cover", "this", "use", "case", "NUMBER", "If", "we", "implement", "this", "feature", "then", "we", "can", "rely", "on", "DLQ", "support", "from", "other", "technologies", "like", "Kafka", "or", "Cherami", "NUMBER", "The", "idea", "would", "be", "to", "send", "signal", "in", "response", "to", "Kafka", "Cherami", "message", "and", "then", "synchronously", "could", "be", "long", "poll", "to", "wait", "for", "successful", "processing", "of", "signal", "NUMBER", "If", "the", "signal", "fail", "multiple", "times", "then", "we", "nack", "the", "original", "message", "and", "let", "it", "end", "up", "in", "the", "DLQ", "expose", "by", "the", "messaging", "system", "NUMBER", "Here", "be", "few", "other", "things", "discussed", "NUMBER", "Let", "the", "current", "signal", "semantics", "function", "as", "be", "and", "create", "new", "event", "api", "for", "request", "reply", "signals", "NUMBER", "We", "need", "to", "think", "through", "reply", "could", "be", "long", "run", "and", "we", "need", "API", "to", "long", "for", "response", "for", "signal", "NUMBER", "Do", "not", "write", "signal", "into", "history", "until", "successfully", "processed", "NUMBER", "NUMBER", "We", "might", "need", "to", "dedupe", "signals", "and", "need", "a", "signal", "cache", "for", "deduping", "for", "this", "feature", "Personally", "I", "d", "like", "to", "be", "able", "to", "use", "this", "to", "e", "NUMBER", "g", "NUMBER", "tell", "a", "workflow", "to", "refresh", "its", "config", "or", "retry", "the", "current", "operation", "or", "that", "kind", "of", "thing", "NUMBER", "We", "could", "use", "it", "to", "support", "a", "web", "UI", "that", "could", "submit", "a", "request", "and", "tell", "you", "if", "it", "worked", "NUMBER", "Currently", "we", "d", "need", "to", "build", "this", "kind", "of", "thing", "via", "a", "signal", "polling", "probably", "a", "query", "handler", "until", "it", "s", "complete", "NUMBER", "Not", "that", "signal", "poll", "be", "impossible", "nor", "even", "that", "bad", "of", "an", "idea", "but", "for", "know", "fast", "operations", "it", "would", "be", "nice", "to", "have", "a", "simpler", "option", "NUMBER", "I", "ve", "be", "prototyping", "this", "NUMBER", "The", "implementation", "I", "m", "work", "on", "be", "external", "to", "cadence", "but", "could", "be", "merge", "in", "NUMBER", "The", "api", "looks", "like", "this", "Callee", "workflow", "exposes", "functionality", "like", "so", "err", "workflow", "NUMBER", "SetCallHandler", "ctx", "MutateStateA", "func", "dataStruct", "ProjectState", "ReplyData", "error", "do", "something", "return", "data", "nil", "err", "be", "throw", "just", "like", "SetQueryHandler", "invalid", "handler", "name", "bad", "signature", "for", "func", "In", "caller", "workflow", "caller", "could", "be", "non", "workflow", "callers", "with", "server", "support", "timeout", "for", "call", "can", "be", "customized", "by", "setting", "opts", "on", "ctx", "just", "like", "StartActivityOptions", "fut", "workflow", "NUMBER", "CallExternalWorkflow", "ctx", "destWF", "MutateStateA", "ProjectState", "var", "reply", "ReplyData", "err", "fut", "NUMBER", "Get", "ctx", "reply", "blocks", "until", "Call", "timeout", "or", "call", "finishes", "err", "be", "either", "cadence", "error", "or", "the", "error", "returned", "from", "call", "handler", "Under", "the", "hood", "in", "my", "prototype", "this", "be", "do", "like", "so", "Caller", "registers", "a", "signal", "handler", "for", "replies", "Caller", "sends", "info", "about", "itself", "along", "with", "the", "serialized", "call", "to", "callee", "NUMBER", "Assigns", "temp", "ID", "to", "a", "Future", "and", "returns", "the", "Future", "NUMBER", "If", "timeout", "be", "set", "schedule", "delayed", "timeout", "completion", "NUMBER", "Callee", "WF", "runs", "the", "call", "handler", "and", "returns", "data", "by", "signaling", "back", "caller", "Caller", "receives", "signal", "looks", "up", "the", "correct", "future", "completes", "that", "future", "with", "the", "data", "from", "the", "signal", "if", "it", "has", "not", "timed", "out", "NUMBER", "Agreed", "I", "m", "going", "to", "keep", "this", "to", "workflow", "to", "workflow", "for", "now", "NUMBER", "Doing", "calls", "to", "workflows", "from", "outside", "the", "workflow", "will", "require", "server", "support", "as", "far", "as", "I", "can", "tell", "NUMBER", "I", "ll", "decouple", "that", "from", "this", "issue", "since", "this", "prototype", "be", "insufficient", "for", "the", "original", "usecase", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "efc", "NUMBER", "dc", "NUMBER", "da", "NUMBER", "c", "NUMBER", "c", "on", "version", "into", "NUMBER", "f", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "dce", "NUMBER", "ad", "NUMBER", "dd", "NUMBER", "afa", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Since", "NUMBER", "we", "be", "unable", "to", "start", "cadence", "run", "as", "a", "binary", "NUMBER", "The", "error", "output", "be", "Incompatible", "version", "EXTRA", "error", "NUMBER", "errorString", "unable", "to", "read", "expected", "schema", "version", "open", "github", "NUMBER", "com", "uber", "cadence", "schema", "cadence", "version", "The", "system", "cannot", "find", "the", "file", "specified", "NUMBER", "It", "seems", "like", "the", "change", "in", "NUMBER", "hardcoded", "the", "project", "path", "to", "github", "NUMBER", "com", "uber", "cadence", "schema", "NUMBER", "What", "was", "the", "intention", "of", "this", "change", "Cadence", "should", "be", "able", "to", "run", "in", "any", "directory", "as", "a", "binary", "NUMBER", "The", "offending", "line", "be", "here", "LINK", "L", "NUMBER", "I", "think", "we", "already", "have", "a", "message", "EntityNotExistsError", "Message", "workflow", "execution", "already", "completed", "NUMBER", "I", "reproed", "by", "run", "a", "workflow", "and", "sleeping", "an", "activity", "for", "NUMBER", "s", "NUMBER", "Here", "be", "the", "result", "NUMBER", "TAG", "longquanzheng", "andrewjdawson", "NUMBER", "Pls", "verify", "this", "and", "we", "can", "close", "the", "Issue", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "dfd", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "cab", "NUMBER", "f", "NUMBER", "f", "NUMBER", "efdf", "NUMBER", "on", "cross", "dc", "NUMBER", "ring", "into", "NUMBER", "a", "NUMBER", "baeb", "NUMBER", "dddf", "NUMBER", "aad", "NUMBER", "dfc", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "be", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "samarabbas", "activity", "heartbeat", "timeout", "fix", "into", "NUMBER", "fe", "NUMBER", "ba", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "a", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ce", "on", "cross", "dc", "API", "into", "NUMBER", "f", "NUMBER", "de", "NUMBER", "f", "NUMBER", "cade", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "f", "NUMBER", "f", "NUMBER", "fd", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fd", "NUMBER", "da", "NUMBER", "b", "NUMBER", "cddb", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "bdc", "NUMBER", "e", "NUMBER", "on", "actIDTest", "into", "NUMBER", "fe", "NUMBER", "ba", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "a", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fc", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "e", "NUMBER", "eacaf", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "on", "throttle", "into", "NUMBER", "ce", "NUMBER", "fdc", "NUMBER", "ad", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "A", "burst", "size", "bug", "triggered", "excess", "logging", "NUMBER", "Fixed", "by", "NUMBER", "NUMBER", "and", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "ef", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "edd", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "on", "compAct", "into", "NUMBER", "c", "NUMBER", "aaf", "NUMBER", "fc", "NUMBER", "af", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "cba", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "afafec", "NUMBER", "ec", "NUMBER", "cfa", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "on", "tlunload", "into", "NUMBER", "c", "NUMBER", "aaf", "NUMBER", "fc", "NUMBER", "af", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "cba", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "cdf", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "bfdccc", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "f", "NUMBER", "cef", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "hehe", "into", "NUMBER", "c", "NUMBER", "aaf", "NUMBER", "fc", "NUMBER", "af", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "cba", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "eb", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "bbef", "NUMBER", "c", "NUMBER", "d", "NUMBER", "on", "hehe", "into", "bd", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "efda", "NUMBER", "d", "NUMBER", "afdc", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "dafe", "NUMBER", "fb", "NUMBER", "ec", "NUMBER", "dbd", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "on", "version", "into", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "ecd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "on", "master", "NUMBER", "samarabbas", "vancexu", "What", "be", "your", "timeline", "for", "looking", "at", "this", "issue", "If", "not", "in", "the", "next", "few", "days", "I", "could", "try", "to", "take", "a", "look", "NUMBER", "We", "just", "really", "need", "this", "change", "for", "our", "implementation", "to", "function", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "cb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "on", "stickyttl", "into", "b", "NUMBER", "c", "NUMBER", "eef", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ceef", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "on", "version", "into", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "cfa", "NUMBER", "b", "NUMBER", "ec", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ded", "NUMBER", "d", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "da", "NUMBER", "e", "NUMBER", "c", "on", "version", "into", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "cfa", "NUMBER", "b", "NUMBER", "ec", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "eaf", "NUMBER", "ebb", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "fa", "NUMBER", "on", "version", "into", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "cfa", "NUMBER", "b", "NUMBER", "ec", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "e", "NUMBER", "af", "NUMBER", "de", "NUMBER", "bf", "NUMBER", "bff", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "a", "NUMBER", "c", "NUMBER", "bfde", "NUMBER", "d", "NUMBER", "on", "fix", "integ", "test", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "e", "NUMBER", "af", "NUMBER", "de", "NUMBER", "bf", "NUMBER", "bff", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "a", "NUMBER", "c", "NUMBER", "bfde", "NUMBER", "d", "NUMBER", "on", "fix", "integ", "test", "into", "on", "master", "NUMBER", "This", "can", "not", "be", "reproduced", "with", "lastest", "change", "NUMBER", "close", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "ddb", "NUMBER", "d", "NUMBER", "afbece", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "aece", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "on", "samarabbas", "child", "workflow", "timeout", "fix", "into", "NUMBER", "a", "NUMBER", "aceaf", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "cbf", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "aecaf", "NUMBER", "d", "NUMBER", "beb", "on", "samarabbas", "child", "workflow", "timeout", "fix", "into", "NUMBER", "a", "NUMBER", "aceaf", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "cbf", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "adae", "NUMBER", "a", "NUMBER", "efbfbbdb", "NUMBER", "on", "pprof", "into", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "e", "NUMBER", "da", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "a", "NUMBER", "fb", "NUMBER", "c", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "ec", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "aa", "NUMBER", "fdf", "NUMBER", "c", "NUMBER", "b", "NUMBER", "fca", "NUMBER", "bd", "on", "child", "workflow", "into", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "e", "NUMBER", "da", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "a", "NUMBER", "fb", "NUMBER", "c", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "defbba", "NUMBER", "fdfc", "NUMBER", "ce", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ede", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ba", "on", "child", "workflow", "into", "NUMBER", "a", "NUMBER", "aceaf", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "cbf", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "da", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "child", "workflow", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "da", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "child", "workflow", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "bb", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "be", "NUMBER", "af", "NUMBER", "a", "NUMBER", "a", "NUMBER", "bb", "NUMBER", "on", "samarabbas", "miss", "tasklist", "name", "on", "event", "into", "NUMBER", "a", "NUMBER", "af", "NUMBER", "dbb", "NUMBER", "ad", "NUMBER", "bd", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "bc", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "daf", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "aa", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ceafd", "NUMBER", "f", "on", "met", "into", "aa", "NUMBER", "ebb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "fe", "NUMBER", "bc", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "on", "met", "into", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "cdaebe", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "on", "met", "into", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "cdaebe", "NUMBER", "e", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ceafdf", "NUMBER", "b", "NUMBER", "cab", "NUMBER", "c", "NUMBER", "df", "on", "bugfix", "into", "bb", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "db", "NUMBER", "ceb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "deb", "NUMBER", "ccc", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bea", "on", "bugfix", "into", "NUMBER", "ff", "NUMBER", "cbd", "NUMBER", "e", "NUMBER", "de", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "db", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "bdf", "NUMBER", "a", "NUMBER", "bf", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "caec", "NUMBER", "be", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "on", "wait", "until", "finish", "into", "bb", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "db", "NUMBER", "ceb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "abdc", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "on", "wait", "until", "finish", "into", "bb", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "db", "NUMBER", "ceb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "b", "NUMBER", "bef", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "fcce", "NUMBER", "on", "wait", "until", "finish", "into", "bb", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "db", "NUMBER", "ceb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "fe", "NUMBER", "deaa", "NUMBER", "on", "wait", "until", "finish", "into", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "fee", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ec", "NUMBER", "fff", "NUMBER", "ad", "NUMBER", "ea", "NUMBER", "ec", "NUMBER", "adb", "NUMBER", "f", "NUMBER", "e", "on", "avail", "into", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "df", "NUMBER", "ee", "NUMBER", "daef", "NUMBER", "a", "NUMBER", "db", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ec", "NUMBER", "fff", "NUMBER", "ad", "NUMBER", "ea", "NUMBER", "ec", "NUMBER", "adb", "NUMBER", "f", "NUMBER", "e", "on", "avail", "into", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "df", "NUMBER", "ee", "NUMBER", "daef", "NUMBER", "a", "NUMBER", "db", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "f", "NUMBER", "eac", "NUMBER", "f", "NUMBER", "c", "NUMBER", "cfafdac", "NUMBER", "d", "NUMBER", "c", "NUMBER", "be", "NUMBER", "on", "avail", "into", "bb", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "db", "NUMBER", "ceb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "ce", "NUMBER", "f", "NUMBER", "be", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "cd", "NUMBER", "b", "NUMBER", "bbc", "NUMBER", "bf", "NUMBER", "f", "NUMBER", "on", "timeoutconasnew", "into", "bb", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "db", "NUMBER", "ceb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "efaba", "NUMBER", "ce", "NUMBER", "ff", "NUMBER", "dcac", "NUMBER", "on", "timeoutconasnew", "into", "NUMBER", "ff", "NUMBER", "cbd", "NUMBER", "e", "NUMBER", "de", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "db", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "efaba", "NUMBER", "ce", "NUMBER", "ff", "NUMBER", "dcac", "NUMBER", "on", "timeoutconasnew", "into", "NUMBER", "ff", "NUMBER", "cbd", "NUMBER", "e", "NUMBER", "de", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "db", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "efaba", "NUMBER", "ce", "NUMBER", "ff", "NUMBER", "dcac", "NUMBER", "on", "timeoutconasnew", "into", "NUMBER", "ff", "NUMBER", "cbd", "NUMBER", "e", "NUMBER", "de", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "db", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "efaba", "NUMBER", "ce", "NUMBER", "ff", "NUMBER", "dcac", "NUMBER", "on", "timeoutconasnew", "into", "NUMBER", "ff", "NUMBER", "cbd", "NUMBER", "e", "NUMBER", "de", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "db", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "dbdf", "NUMBER", "b", "NUMBER", "fb", "NUMBER", "beb", "NUMBER", "f", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "on", "timeoutconasnew", "into", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "bbbd", "NUMBER", "ec", "NUMBER", "dbed", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "f", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "cea", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "on", "metric", "into", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "bc", "NUMBER", "dfca", "NUMBER", "a", "NUMBER", "ccaff", "NUMBER", "abdb", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "beba", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "de", "NUMBER", "db", "NUMBER", "d", "NUMBER", "efa", "on", "metric", "into", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "df", "NUMBER", "ee", "NUMBER", "daef", "NUMBER", "a", "NUMBER", "db", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "beba", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "de", "NUMBER", "db", "NUMBER", "d", "NUMBER", "efa", "on", "metric", "into", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "df", "NUMBER", "ee", "NUMBER", "daef", "NUMBER", "a", "NUMBER", "db", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "fefd", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "fd", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "cd", "on", "bugfix", "into", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "bc", "NUMBER", "dfca", "NUMBER", "a", "NUMBER", "ccaff", "NUMBER", "abdb", "NUMBER", "on", "master", "NUMBER", "Where", "be", "the", "NUMBER", "times", "initialization", "in", "old", "implementation", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "eff", "NUMBER", "eeeca", "NUMBER", "eba", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "ef", "NUMBER", "de", "NUMBER", "ac", "NUMBER", "on", "bugfix", "into", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "bc", "NUMBER", "dfca", "NUMBER", "a", "NUMBER", "ccaff", "NUMBER", "abdb", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "f", "NUMBER", "a", "NUMBER", "d", "NUMBER", "bc", "NUMBER", "ffb", "NUMBER", "b", "NUMBER", "df", "on", "bugfix", "into", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "bc", "NUMBER", "dfca", "NUMBER", "a", "NUMBER", "ccaff", "NUMBER", "abdb", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "fdfda", "NUMBER", "b", "NUMBER", "de", "NUMBER", "b", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "on", "bugfix", "into", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "bc", "NUMBER", "dfca", "NUMBER", "a", "NUMBER", "ccaff", "NUMBER", "abdb", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "df", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ec", "NUMBER", "on", "poller", "into", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "fcabb", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "d", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "ae", "NUMBER", "fc", "NUMBER", "dde", "NUMBER", "a", "NUMBER", "edfd", "NUMBER", "c", "NUMBER", "c", "NUMBER", "dbbf", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "cache", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "badcc", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "on", "bugfix", "sticky", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "e", "NUMBER", "bdcdfdafdab", "NUMBER", "def", "NUMBER", "d", "NUMBER", "ec", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "bugfix", "into", "NUMBER", "eaced", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "fc", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ffbc", "NUMBER", "a", "NUMBER", "c", "NUMBER", "f", "NUMBER", "de", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ebb", "NUMBER", "c", "NUMBER", "on", "bugfix", "docker", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "dcaefd", "NUMBER", "cdc", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "e", "NUMBER", "de", "NUMBER", "fd", "NUMBER", "be", "NUMBER", "b", "NUMBER", "edbd", "NUMBER", "dcbb", "NUMBER", "c", "on", "pprof", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "dcaefd", "NUMBER", "cdc", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "acb", "NUMBER", "f", "NUMBER", "af", "NUMBER", "c", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "cb", "NUMBER", "c", "NUMBER", "b", "NUMBER", "ed", "NUMBER", "f", "on", "pprof", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "dcaefd", "NUMBER", "cdc", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "aac", "NUMBER", "dbcc", "NUMBER", "cce", "NUMBER", "c", "NUMBER", "dc", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "d", "NUMBER", "on", "pprof", "into", "NUMBER", "c", "NUMBER", "e", "NUMBER", "bbab", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dac", "NUMBER", "dc", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "df", "NUMBER", "cbfbb", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "e", "on", "waiting", "until", "end", "into", "d", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "c", "on", "dedup", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "NUMBER", "db", "NUMBER", "fc", "on", "waiting", "until", "end", "into", "d", "NUMBER", "cdcd", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "NUMBER", "cab", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "dedup", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "aa", "NUMBER", "ab", "NUMBER", "cb", "NUMBER", "ec", "NUMBER", "acb", "NUMBER", "b", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "c", "on", "waiting", "until", "end", "into", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "bb", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "e", "NUMBER", "on", "dedup", "NUMBER", "LINK", "build", "docker", "image", "NUMBER", "sh", "L", "NUMBER", "Should", "be", "a", "few", "line", "change", "instead", "of", "checking", "new", "commit", "checking", "new", "tags", "NUMBER", "Then", "build", "and", "push", "with", "the", "new", "tag", "an", "Looks", "like", "we", "be", "not", "emitting", "any", "metric", "on", "persistence", "client", "for", "visibility", "api", "NUMBER", "This", "be", "make", "it", "harder", "to", "debug", "visibility", "api", "issue", "in", "production", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "ec", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "f", "NUMBER", "df", "NUMBER", "bb", "NUMBER", "de", "NUMBER", "on", "revert", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "acc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cdc", "NUMBER", "fbb", "NUMBER", "a", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "cdf", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ccf", "NUMBER", "on", "revert", "into", "bb", "NUMBER", "b", "NUMBER", "eef", "NUMBER", "d", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "ffb", "NUMBER", "bbdaf", "NUMBER", "a", "NUMBER", "ca", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "db", "NUMBER", "dc", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "dd", "NUMBER", "bb", "NUMBER", "on", "dedup", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "acc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cdc", "NUMBER", "fbb", "NUMBER", "a", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "de", "NUMBER", "c", "NUMBER", "cca", "NUMBER", "d", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "bce", "NUMBER", "a", "NUMBER", "ccab", "NUMBER", "on", "dedup", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "acc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cdc", "NUMBER", "fbb", "NUMBER", "a", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ba", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ada", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "on", "dedup", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "acc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cdc", "NUMBER", "fbb", "NUMBER", "a", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "da", "NUMBER", "a", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "a", "NUMBER", "ec", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "a", "NUMBER", "d", "NUMBER", "on", "dedup", "into", "NUMBER", "c", "NUMBER", "e", "NUMBER", "bbab", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dac", "NUMBER", "dc", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "bb", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "e", "NUMBER", "on", "dedup", "into", "NUMBER", "fdb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "adfebc", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "efd", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "on", "revert", "into", "c", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "d", "NUMBER", "db", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "b", "NUMBER", "be", "NUMBER", "b", "NUMBER", "fa", "NUMBER", "cc", "NUMBER", "ae", "on", "sticky", "query", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "NUMBER", "on", "sticky", "query", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "f", "NUMBER", "f", "NUMBER", "ad", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "f", "NUMBER", "fedc", "NUMBER", "on", "sticky", "query", "into", "fffdc", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "affe", "NUMBER", "fd", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "a", "NUMBER", "eebd", "NUMBER", "ef", "NUMBER", "fd", "NUMBER", "cc", "NUMBER", "cfd", "NUMBER", "b", "on", "fix", "linter", "into", "NUMBER", "db", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "bce", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "fc", "NUMBER", "on", "master", "NUMBER", "Refactor", "HistoryEngine", "APIs", "like", "ResponseActivityTaskComplete", "NUMBER", "similar", "to", "SignalWorkflowExecution", "use", "updateWorkflowExecution", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "bc", "NUMBER", "fbbb", "NUMBER", "c", "NUMBER", "add", "NUMBER", "fa", "NUMBER", "bbb", "NUMBER", "on", "version", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "e", "NUMBER", "bfac", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "ccc", "NUMBER", "d", "NUMBER", "f", "on", "version", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "d", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "dbcead", "NUMBER", "on", "version", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "da", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "fc", "NUMBER", "e", "on", "version", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "fda", "NUMBER", "c", "NUMBER", "e", "NUMBER", "eff", "NUMBER", "e", "NUMBER", "c", "on", "version", "into", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "bcc", "NUMBER", "ff", "NUMBER", "f", "NUMBER", "on", "version", "into", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "a", "NUMBER", "edbdd", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "bcc", "NUMBER", "ff", "NUMBER", "f", "NUMBER", "on", "version", "into", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "a", "NUMBER", "edbdd", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "ad", "NUMBER", "cb", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "de", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ca", "on", "version", "into", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "a", "NUMBER", "edbdd", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "dab", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "on", "up", "into", "b", "NUMBER", "f", "NUMBER", "cdc", "NUMBER", "fd", "NUMBER", "bd", "NUMBER", "bfd", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "on", "upgrade", "into", "cadabad", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "ec", "NUMBER", "fbfdcaf", "NUMBER", "af", "NUMBER", "cc", "on", "master", "NUMBER", "Currently", "client", "can", "connect", "to", "non", "compatible", "service", "version", "and", "get", "undefined", "behavior", "NUMBER", "See", "LINK", "go", "cadence", "client", "issue", "NUMBER", "for", "an", "example", "NUMBER", "Service", "has", "to", "reject", "client", "connections", "from", "non", "compatible", "clients", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "d", "NUMBER", "fee", "NUMBER", "abb", "NUMBER", "bf", "NUMBER", "on", "tasklist", "into", "cadabad", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "ec", "NUMBER", "fbfdcaf", "NUMBER", "af", "NUMBER", "cc", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "a", "NUMBER", "fbdf", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "abc", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "on", "tasklist", "into", "cadabad", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "ec", "NUMBER", "fbfdcaf", "NUMBER", "af", "NUMBER", "cc", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fac", "NUMBER", "af", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "adc", "NUMBER", "db", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "on", "tasklist", "into", "cadabad", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "ec", "NUMBER", "fbfdcaf", "NUMBER", "af", "NUMBER", "cc", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "e", "NUMBER", "cd", "NUMBER", "b", "NUMBER", "e", "NUMBER", "cad", "NUMBER", "df", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "accabad", "NUMBER", "on", "tasklist", "into", "cadabad", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "ec", "NUMBER", "fbfdcaf", "NUMBER", "af", "NUMBER", "cc", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "dff", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "tasklist", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "dcaefd", "NUMBER", "cdc", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "dff", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "tasklist", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "dcaefd", "NUMBER", "cdc", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "def", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "c", "NUMBER", "on", "tasklist", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "dcaefd", "NUMBER", "cdc", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "be", "NUMBER", "bb", "NUMBER", "a", "NUMBER", "ef", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "on", "tasklist", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "dcaefd", "NUMBER", "cdc", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "c", "NUMBER", "ee", "NUMBER", "c", "NUMBER", "e", "NUMBER", "df", "NUMBER", "f", "NUMBER", "fdcaa", "NUMBER", "b", "NUMBER", "on", "tasklist", "into", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "bc", "NUMBER", "dfca", "NUMBER", "a", "NUMBER", "ccaff", "NUMBER", "abdb", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "cff", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "on", "tasklist", "into", "bb", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "db", "NUMBER", "ceb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "cff", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "on", "tasklist", "into", "bb", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "db", "NUMBER", "ceb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "e", "NUMBER", "debb", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dfe", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ff", "on", "tasklist", "into", "aa", "NUMBER", "ebb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "fe", "NUMBER", "bc", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "dbdcc", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "dec", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cfa", "on", "tasklist", "into", "aa", "NUMBER", "ebb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "fe", "NUMBER", "bc", "NUMBER", "on", "master", "NUMBER", "Currently", "ContinueAsNew", "requires", "all", "its", "parameters", "NUMBER", "In", "most", "cases", "the", "new", "workflow", "run", "keep", "all", "the", "same", "values", "as", "the", "continued", "one", "NUMBER", "Let", "s", "change", "all", "of", "the", "parameters", "to", "optional", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "ed", "NUMBER", "ff", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "de", "NUMBER", "fabd", "NUMBER", "df", "NUMBER", "on", "rps", "into", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "df", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "cedc", "NUMBER", "fbaefb", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "at", "NUMBER", "when", "pulling", "NUMBER", "ab", "NUMBER", "cb", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "eaad", "NUMBER", "on", "rps", "into", "bc", "NUMBER", "cd", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Similar", "to", "SWF", "it", "would", "be", "great", "if", "there", "was", "a", "dashboard", "to", "view", "workflow", "activity", "status", "and", "the", "event", "history", "NUMBER", "Something", "simple", "like", "was", "use", "here", "would", "be", "a", "good", "starting", "point", "LINK", "LRghQzfF", "NUMBER", "k", "We", "be", "currently", "work", "on", "open", "sourcing", "the", "Cadence", "UI", "NUMBER", "I", "m", "going", "to", "keep", "this", "issue", "open", "until", "it", "be", "release", "NUMBER", "samarabbas", "Thanks", "NUMBER", "This", "be", "work", "well", "for", "us", "Sorry", "I", "forgot", "to", "report", "back", "NUMBER", "Add", "filter", "to", "GetWorkflowExecutionHistory", "API", "NUMBER", "We", "need", "to", "provide", "functionality", "to", "allow", "customer", "filter", "on", "specific", "event", "type", "and", "certain", "event", "content", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "ef", "NUMBER", "eb", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "on", "ttl", "into", "b", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "da", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "on", "master", "NUMBER", "Today", "when", "someone", "accidentally", "update", "the", "schema", "to", "a", "version", "that", "s", "incompatible", "with", "the", "server", "code", "the", "behavior", "be", "undefined", "NUMBER", "Since", "the", "schema", "be", "already", "version", "a", "somewhat", "better", "approach", "here", "would", "be", "for", "the", "server", "to", "watch", "the", "schema", "version", "in", "the", "background", "and", "abort", "itself", "when", "there", "be", "a", "mismatch", "NUMBER", "Fixed", "by", "LINK", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ca", "NUMBER", "ab", "NUMBER", "e", "NUMBER", "on", "fixtest", "into", "cbc", "NUMBER", "ded", "NUMBER", "b", "NUMBER", "a", "NUMBER", "dcc", "NUMBER", "abdfbb", "NUMBER", "ec", "NUMBER", "b", "NUMBER", "f", "on", "master", "NUMBER", "Currently", "there", "be", "no", "way", "to", "restart", "fail", "workflow", "from", "the", "point", "of", "failure", "or", "completed", "workflow", "from", "some", "point", "in", "the", "middle", "if", "some", "bug", "was", "fix", "NUMBER", "The", "proposal", "be", "to", "create", "a", "new", "execution", "with", "the", "same", "workflowID", "which", "contains", "copy", "of", "partial", "history", "of", "the", "workflow", "run", "be", "restarted", "NUMBER", "For", "this", "to", "work", "correctly", "the", "copy", "of", "history", "should", "be", "analyzed", "and", "either", "all", "open", "activities", "fail", "or", "may", "be", "requeued", "if", "not", "start", "yet", "NUMBER", "The", "other", "hard", "problem", "be", "to", "figure", "out", "up", "to", "which", "point", "a", "history", "should", "be", "copied", "NUMBER", "Having", "that", "multiple", "activities", "can", "be", "fail", "and", "rescheduled", "from", "multiple", "coroutines", "there", "be", "no", "clear", "way", "to", "determine", "what", "part", "of", "history", "should", "not", "be", "copied", "NUMBER", "Hey", "mfateev", "NUMBER", "Is", "this", "new", "feature", "in", "some", "future", "plan", "It", "be", "be", "worked", "on", "and", "should", "be", "available", "within", "a", "quarter", "NUMBER", "Great", "NUMBER", "Thanks", "Related", "to", "NUMBER", "longquanzheng", "reset", "be", "now", "release", "can", "this", "issue", "be", "close", "vancexu", "be", "this", "still", "valid", "Can", "we", "close", "it", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "abbf", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "ef", "NUMBER", "d", "NUMBER", "e", "NUMBER", "on", "dtleak", "into", "NUMBER", "ffdeb", "NUMBER", "e", "NUMBER", "fbf", "NUMBER", "ca", "NUMBER", "d", "NUMBER", "dff", "NUMBER", "ffa", "NUMBER", "f", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "adb", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "on", "dtleak", "into", "b", "NUMBER", "ca", "NUMBER", "fd", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "fcf", "NUMBER", "on", "master", "NUMBER", "CLA", "assistant", "check", "LINK", "assistant", "NUMBER", "io", "pull", "badge", "sign", "LINK", "assistant", "NUMBER", "io", "uber", "cadence", "pullRequest", "NUMBER", "TAG", "All", "committers", "have", "sign", "the", "CLA", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "f", "NUMBER", "cdc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "ab", "NUMBER", "ac", "on", "clean", "into", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "dccbe", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "d", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "cd", "NUMBER", "ba", "NUMBER", "b", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "eddcf", "NUMBER", "on", "clean", "into", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "baea", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "cd", "NUMBER", "ba", "NUMBER", "b", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "eddcf", "NUMBER", "on", "clean", "into", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "baea", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "baa", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "da", "NUMBER", "b", "NUMBER", "b", "NUMBER", "on", "samarabbas", "frontend", "logs", "cleanup", "into", "NUMBER", "f", "NUMBER", "ffe", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "fced", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "fd", "NUMBER", "d", "NUMBER", "a", "NUMBER", "fae", "NUMBER", "on", "samarabbas", "persistence_connections", "into", "NUMBER", "f", "NUMBER", "ffe", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "fced", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "c", "NUMBER", "cdffece", "NUMBER", "add", "NUMBER", "b", "NUMBER", "acea", "NUMBER", "a", "on", "samarabbas", "persistence_connections", "into", "NUMBER", "f", "NUMBER", "ffe", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "fced", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "cf", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "on", "samarabbas", "persistence_connections", "into", "affdf", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "f", "NUMBER", "aa", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "f", "NUMBER", "cffebcfd", "NUMBER", "d", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "on", "samarabbas", "minor_fix", "into", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ecbfbe", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "bccba", "NUMBER", "dc", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "on", "samarabbas", "timeout", "adjustments", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "dbdbeeaea", "NUMBER", "eea", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "ae", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "bbb", "NUMBER", "e", "NUMBER", "b", "NUMBER", "de", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "on", "samarabbas", "code", "cleanup", "tasks", "into", "NUMBER", "d", "NUMBER", "c", "NUMBER", "dbdbeeaea", "NUMBER", "eea", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "ae", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ef", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ebf", "NUMBER", "on", "samarabbas", "code", "cleanup", "tasks", "into", "fd", "NUMBER", "a", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "dff", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "be", "NUMBER", "a", "NUMBER", "fe", "on", "uber", "master", "NUMBER", "Most", "request", "reply", "protocols", "use", "headers", "to", "pass", "additional", "information", "about", "request", "NUMBER", "It", "would", "simplify", "forwarding", "such", "request", "like", "HTTP", "or", "TChannel", "if", "headers", "be", "support", "directly", "NUMBER", "If", "headers", "were", "support", "then", "add", "request", "encoding", "information", "wouldn", "t", "require", "any", "server", "side", "change", "NUMBER", "Hi", "mfateev", "I", "tried", "to", "add", "context", "propagation", "use", "Opentracing", "Jaeger", "as", "an", "experiment", "NUMBER", "It", "be", "a", "very", "naive", "attempt", "I", "did", "this", "for", "a", "demo", "NUMBER", "I", "add", "opentracing", "binary", "carrier", "to", "workflow", "execution", "as", "a", "blob", "NUMBER", "This", "solution", "assumes", "only", "cadence", "client", "be", "responsible", "for", "propagation", "NUMBER", "Can", "you", "please", "share", "the", "plan", "to", "support", "this", "feature", "NUMBER", "If", "someone", "be", "not", "already", "work", "on", "it", "I", "will", "continue", "work", "on", "this", "NUMBER", "Also", "please", "suggest", "a", "more", "efficient", "way", "if", "any", "to", "do", "this", "NUMBER", "LINK", "LINK", "client", "commit", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "b", "NUMBER", "edc", "NUMBER", "e", "NUMBER", "eaed", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "ba", "Thanks", "Harsha", "Harsha", "it", "looks", "reasonable", "NUMBER", "I", "would", "prefer", "more", "generic", "header", "that", "be", "key", "blob_value", "to", "support", "future", "extensions", "instead", "of", "a", "single", "carrier", "blob", "field", "NUMBER", "Let", "me", "consult", "with", "my", "local", "Jaeger", "experts", "to", "see", "if", "I", "m", "miss", "something", "NUMBER", "Hi", "mfateev", "Also", "I", "have", "few", "more", "question", "NUMBER", "Please", "clarify", "whenever", "possible", "for", "you", "NUMBER", "I", "think", "sampling", "rate", "of", "Jaeger", "client", "should", "be", "configured", "to", "NUMBER", "if", "all", "the", "workflows", "should", "be", "traced", "NUMBER", "It", "will", "be", "a", "scale", "issue", "NUMBER", "Moreover", "jaeger", "agent", "be", "UDP", "based", "with", "an", "in", "memory", "queue", "so", "can", "be", "lossy", "NUMBER", "Actually", "what", "I", "was", "looking", "for", "be", "the", "trace", "of", "the", "workflow", "end", "to", "end", "based", "on", "a", "business", "key", "NUMBER", "Jaeger", "can", "provide", "that", "view", "but", "may", "not", "be", "reliable", "and", "also", "not", "searchable", "by", "a", "business", "key", "unless", "it", "be", "the", "trace", "id", "NUMBER", "Also", "long", "run", "workflows", "will", "be", "another", "problem", "NUMBER", "I", "start", "digging", "into", "this", "issue", "based", "on", "your", "answer", "for", "LINK", "go", "cadence", "client", "issue", "NUMBER", "But", "want", "to", "know", "if", "there", "be", "a", "plan", "for", "any", "cadence", "UI", "or", "API", "with", "end", "to", "end", "workflow", "execution", "trace", "view", "that", "do", "not", "depend", "on", "jaeger", "Thanks", "Harsha", "Could", "you", "elaborate", "on", "your", "use", "case", "Are", "you", "trying", "to", "get", "some", "analytic", "of", "a", "single", "workflow", "execution", "or", "your", "goal", "be", "to", "track", "request", "from", "client", "app", "all", "way", "down", "through", "the", "chain", "of", "services", "including", "Cadence", "based", "ones", "Actually", "both", "NUMBER", "NUMBER", "Workflow", "execution", "history", "as", "a", "tree", "including", "input", "output", "of", "the", "activities", "from", "visibility", "API", "NUMBER", "NUMBER", "Trace", "down", "through", "the", "chain", "of", "services", "including", "cadence", "NUMBER", "I", "think", "the", "relevant", "issue", "for", "first", "use", "case", "be", "LINK", "Apologize", "for", "mixing", "up", "my", "question", "NUMBER", "NUMBER", "You", "already", "can", "get", "workflow", "execution", "history", "through", "the", "GetWorkflowExecutionHistory", "API", "NUMBER", "The", "UI", "be", "come", "soon", "NUMBER", "NUMBER", "We", "be", "work", "on", "this", "one", "with", "the", "Jaeger", "team", "NUMBER", "The", "complexity", "be", "around", "requirements", "of", "not", "persisting", "a", "Jaeger", "context", "in", "the", "history", "as", "it", "might", "contains", "some", "time", "sensitive", "or", "even", "security", "relate", "information", "NUMBER", "Thanks", "for", "your", "prompt", "responses", "NUMBER", "I", "will", "keep", "refining", "the", "code", "change", "I", "did", "and", "add", "test", "NUMBER", "Let", "me", "know", "the", "approach", "Jaeger", "team", "proposes", "NUMBER", "I", "have", "exactly", "same", "demand", "on", "production", "project", "NUMBER", "We", "use", "cadence", "as", "a", "part", "of", "complex", "business", "flow", "NUMBER", "So", "business", "workflow", "be", "starting", "at", "API", "gateway", "goes", "through", "number", "of", "microservices", "before", "cadence", "than", "cadence", "orchestration", "layer", "and", "last", "part", "again", "set", "of", "microservices", "NUMBER", "Where", "I", "need", "to", "provide", "NUMBER", "Possibility", "to", "make", "tracing", "of", "end", "to", "end", "flow", "based", "on", "business", "key", "NUMBER", "NUMBER", "To", "escape", "saving", "of", "sensitive", "data", "NUMBER", "Use", "Zipkin", "as", "tracing", "server", "Talking", "about", "our", "requirement", "To", "escape", "saving", "of", "sensitive", "data", "Actually", "it", "s", "more", "important", "to", "support", "a", "possibility", "to", "continue", "exist", "traceId", "which", "was", "stared", "at", "the", "beginning", "of", "business", "transaction", "before", "come", "to", "Cadence", "NUMBER", "Talking", "about", "sensitive", "information", "I", "agree", "it", "s", "minor", "point", "in", "dealing", "with", "traces", "in", "Cadence", "NUMBER", "And", "at", "the", "same", "time", "it", "s", "important", "as", "separate", "requirement", "to", "think", "how", "to", "get", "around", "of", "authorization", "because", "Cadence", "be", "storing", "state", "of", "workflow", "NUMBER", "And", "workflow", "can", "has", "a", "sensitive", "info", "in", "state", "variables", "NUMBER", "If", "have", "any", "kind", "of", "guide", "how", "to", "deal", "with", "sensitive", "data", "in", "Cadence", "you", "be", "welcome", "to", "share", "it", "NUMBER", "NUMBER", "add", "server", "side", "support", "for", "propagating", "headers", "across", "workflows", "NUMBER", "Client", "side", "change", "be", "in", "progress", "NUMBER", "shreyassrivatsan", "could", "you", "please", "specify", "the", "number", "of", "ticket", "for", "implement", "this", "functionality", "in", "Java", "client", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "bbf", "NUMBER", "cefd", "NUMBER", "d", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "on", "samarabbas", "zombie", "poller", "into", "NUMBER", "b", "NUMBER", "b", "NUMBER", "bab", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "cccfd", "on", "samarabbas", "zombie", "poller", "into", "NUMBER", "b", "NUMBER", "b", "NUMBER", "bab", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "cccfd", "on", "samarabbas", "zombie", "poller", "into", "NUMBER", "b", "NUMBER", "b", "NUMBER", "bab", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "cccfd", "on", "samarabbas", "zombie", "poller", "into", "NUMBER", "b", "NUMBER", "b", "NUMBER", "bab", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "uber", "master", "NUMBER", "we", "could", "send", "down", "some", "opaque", "task", "token", "in", "query", "result", "so", "when", "next", "time", "client", "send", "query", "it", "sends", "along", "with", "the", "token", "and", "we", "could", "check", "if", "there", "be", "any", "change", "to", "history", "and", "return", "immediately", "if", "there", "be", "no", "change", "to", "history", "NUMBER", "andrewjdawson", "NUMBER", "this", "looks", "like", "something", "you", "re", "already", "doing", "as", "part", "of", "sync", "rr", "NUMBER", "Do", "you", "want", "to", "close", "this", "as", "duplicate", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "db", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "bcb", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "on", "samarabbas", "flaky", "unit", "test", "into", "f", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "uber", "master", "NUMBER", "No", "idea", "how", "feasible", "this", "be", "NUMBER", "but", "about", "half", "our", "exist", "SWF", "workers", "be", "write", "in", "NUMBER", "net", "core", "NUMBER", "There", "doesn", "t", "seem", "to", "be", "very", "good", "support", "for", "Thrift", "in", "that", "framework", "NUMBER", "Would", "love", "to", "have", "the", "flexibility", "of", "an", "HTTP", "interface", "NUMBER", "samarabbas", "Any", "estimate", "of", "time", "frame", "for", "the", "new", "RPC", "stack", "We", "be", "just", "planning", "out", "our", "cutover", "to", "Cadence", "from", "SWF", "NUMBER", "Ryan", "We", "landed", "the", "server", "side", "RPC", "framework", "change", "in", "this", "week", "NUMBER", "The", "two", "things", "that", "comes", "with", "be", "YARPC", "generic", "rpc", "framework", "and", "thriftrw", "it", "would", "allow", "to", "easily", "try", "http", "protocol", "by", "decorating", "the", "IDL", "NUMBER", "LINK", "The", "client", "be", "backward", "compatible", "with", "generic", "server", "RPC", "framework", "at", "some", "time", "over", "next", "month", "we", "will", "move", "client", "as", "well", "NUMBER", "That", "wouldn", "t", "block", "you", "to", "expose", "http", "endpoint", "right", "away", "with", "the", "change", "in", "server", "master", "and", "start", "consuming", "NUMBER", "Some", "follow", "up", "question", "be", "your", "deciders", "workflow", "workers", "also", "in", "NUMBER", "net", "core", "Do", "you", "have", "any", "plan", "to", "move", "to", "GO", "or", "want", "to", "stay", "in", "NUMBER", "net", "core", "sivakku", "Our", "deciders", "and", "about", "half", "of", "our", "workers", "be", "write", "in", "Go", "NUMBER", "Half", "of", "our", "workers", "be", "in", "NUMBER", "net", "core", "NUMBER", "We", "currently", "do", "not", "have", "plan", "to", "rewrite", "the", "NUMBER", "net", "core", "workers", "NUMBER", "If", "we", "had", "to", "though", "we", "could", "write", "a", "wrapper", "in", "Go", "around", "the", "NUMBER", "net", "core", "workers", "so", "they", "don", "t", "really", "have", "to", "know", "about", "Cadence", "NUMBER", "But", "ideally", "we", "just", "expose", "http", "endpoints", "from", "the", "cadence", "server", "NUMBER", "ryanwalls", "Good", "to", "know", "yeah", "at", "some", "time", "we", "want", "cadence", "to", "expose", "all", "endpoints", "through", "http", "based", "on", "scenarios", "NUMBER", "Exposing", "the", "endpoints", "needed", "for", "activity", "workers", "be", "probably", "first", "step", "NUMBER", "sivakku", "samarabbas", "Will", "the", "http", "endpoints", "be", "compatible", "with", "exist", "SWF", "deciders", "and", "workers", "It", "would", "be", "great", "if", "Cadence", "could", "be", "made", "backwards", "compatible", "NUMBER", "Should", "I", "open", "a", "separate", "issue", "for", "that", "request", "sivakku", "samarabbas", "just", "following", "up", "on", "my", "earlier", "question", "about", "SWF", "compatible", "endpoints", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "fd", "NUMBER", "cead", "NUMBER", "b", "NUMBER", "baffee", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "on", "samarabbas", "flaky", "unit", "test", "into", "NUMBER", "ccd", "NUMBER", "b", "NUMBER", "d", "NUMBER", "de", "NUMBER", "dc", "NUMBER", "a", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "on", "uber", "master", "NUMBER", "this", "be", "do", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "on", "samarabbas", "start", "child", "execution", "task", "stuck", "fix", "into", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dfd", "NUMBER", "adee", "NUMBER", "ff", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "b", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "bdad", "NUMBER", "f", "NUMBER", "e", "NUMBER", "af", "NUMBER", "a", "NUMBER", "on", "tamer", "eldeeb", "throttler", "into", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "dfd", "NUMBER", "adee", "NUMBER", "ff", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "acae", "NUMBER", "c", "NUMBER", "cde", "on", "tamer", "eldeeb", "throttler", "into", "on", "uber", "master", "NUMBER", "Closing", "down", "this", "old", "PR", "since", "we", "re", "unlikely", "to", "merge", "it", "as", "be", "but", "may", "still", "look", "at", "it", "for", "reference", "later", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "bb", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ac", "NUMBER", "ee", "NUMBER", "e", "NUMBER", "on", "tamer", "eldeeb", "queue_backoff", "into", "df", "NUMBER", "ac", "NUMBER", "ebe", "NUMBER", "c", "NUMBER", "edb", "NUMBER", "e", "NUMBER", "d", "NUMBER", "db", "NUMBER", "a", "NUMBER", "on", "uber", "master", "NUMBER", "how", "be", "it", "different", "compared", "to", "apache", "airflow", "still", "in", "incubator", "process", "NUMBER", "I", "wonder", "what", "be", "key", "differences", "I", "see", "a", "lot", "of", "similarities", "NUMBER", "Here", "be", "few", "differences", "I", "can", "see", "Airflow", "requires", "you", "to", "express", "workflows", "in", "python", "as", "oppose", "to", "Cadence", "which", "be", "language", "agnostic", "NUMBER", "Airflow", "seems", "to", "compute", "the", "graph", "statically", "and", "persist", "it", "in", "SqlAlchemy", "based", "store", "MySQL", "or", "Postgres", "NUMBER", "Cadence", "just", "maintains", "workflow", "state", "as", "mutable", "state", "and", "append", "only", "list", "of", "events", "stored", "in", "Cassandra", "NUMBER", "Our", "Persistence", "layer", "be", "pluggable", "but", "today", "we", "only", "provide", "Cassandra", "based", "persistence", "implementation", "NUMBER", "Cadence", "provides", "atmost", "once", "task", "dispatch", "guarantee", "meaning", "either", "the", "task", "be", "delivered", "to", "worker", "or", "it", "will", "timeout", "NUMBER", "Giving", "an", "opportunity", "to", "workflow", "logic", "to", "either", "retry", "the", "task", "or", "run", "some", "compensation", "logic", "NUMBER", "I", "didn", "t", "find", "any", "details", "on", "Airflow", "around", "those", "NUMBER", "My", "guess", "it", "provides", "atleast", "once", "guarantee", "meaning", "all", "your", "tasks", "need", "to", "be", "idempotent", "NUMBER", "I", "didn", "t", "see", "any", "perf", "and", "scale", "numbers", "for", "Airflow", "but", "considering", "it", "be", "backed", "by", "MySQL", "I", "have", "a", "feeling", "it", "will", "have", "limitations", "around", "number", "of", "active", "workflows", "and", "workflow", "executions", "per", "second", "NUMBER", "Cadence", "be", "backed", "by", "Cassandra", "and", "we", "be", "targeting", "much", "larger", "scale", "both", "in", "the", "terms", "of", "large", "number", "of", "active", "workflows", "and", "workflow", "executions", "per", "second", "NUMBER", "Airflow", "seems", "to", "have", "pretty", "good", "experience", "around", "managing", "visualizing", "pipelines", "NUMBER", "Cadence", "only", "provides", "bare", "bones", "visibility", "API", "I", "have", "not", "had", "much", "time", "to", "look", "into", "cadence", "but", "after", "spending", "some", "time", "browsing", "through", "the", "code", "I", "can", "see", "what", "you", "guys", "trying", "to", "achieve", "it", "not", "exactly", "a", "workflow", "engine", "in", "a", "traditional", "sense", "NUMBER", "You", "can", "t", "compare", "it", "with", "airflow", "what", "I", "see", "you", "guys", "trying", "to", "achieve", "transactional", "semantics", "with", "some", "queuing", "mechanism", "NUMBER", "longquanzheng", "this", "feels", "like", "an", "optimization", "you", "may", "have", "already", "made", "NUMBER", "Can", "we", "close", "this", "issue", "either", "because", "it", "s", "already", "do", "or", "we", "re", "not", "going", "to", "do", "it", "longquanzheng", "this", "feels", "like", "an", "optimization", "you", "may", "have", "already", "made", "NUMBER", "Can", "we", "close", "this", "issue", "either", "because", "it", "s", "already", "do", "or", "we", "re", "not", "going", "to", "do", "it", "No", "I", "didn", "t", "make", "this", "one", "and", "I", "still", "see", "the", "check", "in", "our", "persistence", "layer", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "db", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "c", "NUMBER", "cbe", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "d", "on", "tamer", "eldeeb", "matching_error", "into", "f", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "dcc", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "da", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "b", "NUMBER", "fd", "NUMBER", "d", "NUMBER", "eddb", "NUMBER", "f", "NUMBER", "fb", "NUMBER", "on", "tamer", "eldeeb", "matching_error", "into", "f", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "dcc", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "adc", "NUMBER", "bea", "NUMBER", "d", "NUMBER", "on", "tamer", "eldeeb", "cassandra_busy", "into", "f", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "dcc", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "fabd", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ccc", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "aa", "on", "tamer", "eldeeb", "cassandra_busy", "into", "f", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "dcc", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "aca", "NUMBER", "on", "tamer", "eldeeb", "cassandra_busy", "into", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "aca", "NUMBER", "on", "tamer", "eldeeb", "cassandra_busy", "into", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "eb", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "on", "tamer", "eldeeb", "cassandra_busy", "into", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "aea", "NUMBER", "a", "NUMBER", "febf", "NUMBER", "c", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "tamer", "eldeeb", "matching_start", "into", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "beb", "NUMBER", "badfa", "NUMBER", "bce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "fc", "NUMBER", "f", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "aea", "NUMBER", "a", "NUMBER", "febf", "NUMBER", "c", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "tamer", "eldeeb", "matching_start", "into", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "beb", "NUMBER", "badfa", "NUMBER", "bce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "fc", "NUMBER", "f", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "c", "NUMBER", "ed", "NUMBER", "aea", "NUMBER", "a", "NUMBER", "febf", "NUMBER", "c", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "tamer", "eldeeb", "matching_start", "into", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "beb", "NUMBER", "badfa", "NUMBER", "bce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "fc", "NUMBER", "f", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "aa", "NUMBER", "cefb", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "on", "tamer", "eldeeb", "matching_start", "into", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "beb", "NUMBER", "badfa", "NUMBER", "bce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "fc", "NUMBER", "f", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "f", "NUMBER", "aeb", "NUMBER", "da", "NUMBER", "dabc", "NUMBER", "ba", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "a", "on", "tamer", "eldeeb", "matching_start", "into", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "beb", "NUMBER", "badfa", "NUMBER", "bce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "fc", "NUMBER", "f", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "cf", "NUMBER", "d", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "cfecc", "NUMBER", "c", "on", "tamer", "eldeeb", "matching_start", "into", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "beb", "NUMBER", "badfa", "NUMBER", "bce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "fc", "NUMBER", "f", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "cae", "NUMBER", "d", "NUMBER", "bc", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "on", "tamer", "eldeeb", "matching_start", "into", "NUMBER", "ce", "NUMBER", "e", "NUMBER", "eed", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "bdb", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "bbb", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "on", "tamer", "eldeeb", "history_config", "into", "e", "NUMBER", "f", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ee", "NUMBER", "bb", "NUMBER", "ad", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "c", "NUMBER", "df", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "on", "tamer", "eldeeb", "history_config", "into", "aafd", "NUMBER", "d", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "dbb", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "df", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "bbf", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "acc", "NUMBER", "d", "on", "tamer", "eldeeb", "history_config", "into", "aafd", "NUMBER", "d", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "dbb", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "eabfc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "b", "on", "tamer", "eldeeb", "test_shard_context", "into", "NUMBER", "be", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fbb", "NUMBER", "b", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "aae", "NUMBER", "a", "NUMBER", "f", "NUMBER", "afa", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "on", "tamer", "eldeeb", "test_shard_context", "into", "NUMBER", "bb", "NUMBER", "cda", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "aec", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "cdb", "NUMBER", "fb", "NUMBER", "ef", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "e", "on", "tamer", "eldeeb", "config", "into", "NUMBER", "be", "NUMBER", "b", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fbb", "NUMBER", "b", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "acdec", "NUMBER", "on", "tamer", "eldeeb", "config", "into", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "acdec", "NUMBER", "on", "tamer", "eldeeb", "config", "into", "NUMBER", "ddae", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cbcf", "NUMBER", "f", "NUMBER", "ea", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "acdec", "NUMBER", "on", "tamer", "eldeeb", "config", "into", "NUMBER", "ddae", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cbcf", "NUMBER", "f", "NUMBER", "ea", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "cb", "NUMBER", "f", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "dcecbbf", "NUMBER", "dbf", "NUMBER", "b", "on", "tamer", "eldeeb", "static_rangeid", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ccefb", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "b", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "d", "NUMBER", "ec", "NUMBER", "eb", "NUMBER", "a", "NUMBER", "on", "tamer", "eldeeb", "static_rangeid", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ccefb", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "b", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "a", "NUMBER", "cacc", "NUMBER", "bec", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "on", "tamer", "eldeeb", "matching_latency", "into", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "ec", "NUMBER", "bca", "NUMBER", "ad", "NUMBER", "be", "NUMBER", "ce", "NUMBER", "fe", "NUMBER", "beb", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "bbed", "NUMBER", "a", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ca", "on", "tamer", "eldeeb", "matching_serialize", "into", "cc", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "ccd", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "d", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "aa", "NUMBER", "ebaa", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "bde", "NUMBER", "on", "tamer", "eldeeb", "matching_serialize", "into", "cc", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "ccd", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "d", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "fdf", "NUMBER", "ad", "NUMBER", "bfa", "NUMBER", "bd", "NUMBER", "deb", "NUMBER", "d", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "on", "tamer", "eldeeb", "pagination_bug", "into", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "df", "NUMBER", "b", "NUMBER", "af", "NUMBER", "ed", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "af", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ce", "NUMBER", "on", "tamer", "eldeeb", "pagination_bug", "into", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "df", "NUMBER", "b", "NUMBER", "af", "NUMBER", "ed", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "a", "NUMBER", "dfddf", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ab", "on", "tamer", "eldeeb", "fe_throttling", "into", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "df", "NUMBER", "b", "NUMBER", "af", "NUMBER", "ed", "NUMBER", "on", "uber", "master", "NUMBER", "Looks", "good", "my", "only", "ask", "would", "be", "to", "make", "the", "RPS", "setting", "configurable", "just", "so", "that", "we", "can", "avoid", "hitting", "the", "limits", "on", "our", "load", "test", "cluster", "without", "needing", "a", "code", "change", "NUMBER", "Ok", "if", "this", "be", "in", "a", "followup", "PR", "NUMBER", "Also", "second", "Venkat", "that", "the", "RPS", "should", "be", "made", "configurable", "NUMBER", "Not", "sure", "if", "we", "be", "currently", "use", "a", "dynamic", "configuration", "system", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bcca", "NUMBER", "on", "tamer", "eldeeb", "fe_throttling", "into", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "fe", "NUMBER", "fdb", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "b", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "dd", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ec", "NUMBER", "on", "tamer", "eldeeb", "fe_throttling", "into", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "uber", "master", "NUMBER", "wxing", "NUMBER", "has", "already", "implement", "a", "DLQ", "as", "part", "of", "cross", "DC", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ebb", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "fb", "NUMBER", "cf", "NUMBER", "on", "tamer", "eldeeb", "visibility_ordering", "into", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ebe", "NUMBER", "bffc", "NUMBER", "d", "NUMBER", "d", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "a", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ebb", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "fb", "NUMBER", "cf", "NUMBER", "on", "tamer", "eldeeb", "visibility_ordering", "into", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ebe", "NUMBER", "bffc", "NUMBER", "d", "NUMBER", "d", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ced", "NUMBER", "dbbc", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "f", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "on", "tamer", "eldeeb", "visibility_ordering", "into", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ebe", "NUMBER", "bffc", "NUMBER", "d", "NUMBER", "d", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "e", "NUMBER", "cd", "NUMBER", "a", "NUMBER", "ec", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "a", "NUMBER", "on", "tamer", "eldeeb", "visibility_ordering", "into", "aa", "NUMBER", "f", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "df", "NUMBER", "e", "NUMBER", "f", "NUMBER", "on", "uber", "master", "NUMBER", "vancexu", "will", "you", "support", "counts", "on", "ES", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fafbee", "NUMBER", "e", "on", "tamer", "eldeeb", "unload_tasklist", "into", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ebe", "NUMBER", "bffc", "NUMBER", "d", "NUMBER", "d", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "fb", "NUMBER", "bca", "NUMBER", "c", "on", "tamer", "eldeeb", "unload_tasklist", "into", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ebe", "NUMBER", "bffc", "NUMBER", "d", "NUMBER", "d", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ec", "NUMBER", "bd", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "on", "sivakku", "delete_history_on_timeout", "into", "ffefac", "NUMBER", "df", "NUMBER", "f", "NUMBER", "ddb", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "e", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "ef", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "on", "sivakku", "delete_history_on_timeout", "into", "ffefac", "NUMBER", "df", "NUMBER", "f", "NUMBER", "ddb", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "e", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "a", "NUMBER", "f", "NUMBER", "d", "NUMBER", "efc", "NUMBER", "ebeac", "NUMBER", "a", "NUMBER", "f", "NUMBER", "on", "sivakku", "delete_history_on_timeout", "into", "ffefac", "NUMBER", "df", "NUMBER", "f", "NUMBER", "ddb", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "e", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "b", "NUMBER", "dbef", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ead", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "on", "sivakku", "delete_history_on_timeout", "into", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "e", "NUMBER", "dfa", "NUMBER", "bd", "NUMBER", "c", "NUMBER", "e", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "e", "NUMBER", "db", "NUMBER", "afd", "NUMBER", "fb", "NUMBER", "fb", "NUMBER", "d", "NUMBER", "a", "NUMBER", "on", "sivakku", "delete_history", "into", "ffefac", "NUMBER", "df", "NUMBER", "f", "NUMBER", "ddb", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "e", "on", "uber", "master", "NUMBER", "Already", "finished", "NUMBER", "See", "dataInterfaces", "LINK", "L", "NUMBER", "We", "uncovered", "an", "issue", "in", "our", "upgrade", "test", "today", "where", "matching", "engine", "stopped", "delivering", "tasks", "for", "some", "tasklists", "NUMBER", "Ack", "Level", "was", "stuck", "at", "a", "lower", "value", "and", "I", "can", "see", "more", "tasks", "in", "tasklist", "beyond", "the", "ack", "level", "NUMBER", "Restarting", "all", "matching", "engine", "nodes", "fix", "the", "problem", "and", "cause", "all", "stuck", "workflow", "executions", "to", "make", "progress", "NUMBER", "Losing", "decision", "scheduled", "tasks", "can", "cause", "stuck", "workflows", "as", "they", "be", "not", "protected", "by", "timeouts", "NUMBER", "In", "this", "case", "we", "didn", "t", "lose", "tasks", "but", "just", "matching", "engine", "stopped", "delivering", "those", "tasks", "due", "to", "some", "bug", "NUMBER", "Stuck", "Workflow", "select", "from", "open_executions", "domain_id", "domain_partition", "start_time", "run_id", "workflow_id", "workflow_type_name", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "ce", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "fac", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "code", "NUMBER", "uber", "NUMBER", "internal", "devexp", "cadence", "server", "health", "driver", "NUMBER", "ressWorkflowExecute", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "c", "NUMBER", "c", "dd", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "NUMBER", "a", "NUMBER", "c", "a", "NUMBER", "NUMBER", "db", "NUMBER", "d", "NUMBER", "NUMBER", "code", "NUMBER", "uber", "NUMBER", "internal", "devexp", "cadence", "server", "health", "driver", "NUMBER", "ressWorkflowExecute", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "ef", "b", "NUMBER", "NUMBER", "de", "NUMBER", "b", "NUMBER", "f", "cd", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "ce", "NUMBER", "ee", "NUMBER", "e", "c", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "code", "NUMBER", "uber", "NUMBER", "internal", "devexp", "cadence", "server", "health", "driver", "NUMBER", "ressWorkflowExecute", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "dd", "NUMBER", "bd", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "NUMBER", "da", "b", "NUMBER", "NUMBER", "ce", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "NUMBER", "code", "NUMBER", "uber", "NUMBER", "internal", "devexp", "cadence", "server", "health", "driver", "NUMBER", "ressWorkflowExecute", "History", "for", "one", "of", "the", "stuck", "workflow", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "WorkflowExecutionStarted", "WorkflowType", "Name", "code", "NUMBER", "uber", "NUMBER", "internal", "devexp", "cadence", "server", "health", "driver", "NUMBER", "ressWorkflowExecute", "TaskList", "Name", "testTaskList", "NUMBER", "Input", "len", "NUMBER", "ExecutionStartToCloseTimeoutSeconds", "NUMBER", "TaskStartToCloseTimeoutSeconds", "NUMBER", "Identity", "NUMBER", "compute", "NUMBER", "dca", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "DecisionTaskScheduled", "TaskList", "Name", "testTaskList", "NUMBER", "StartToCloseTimeoutSeconds", "NUMBER", "One", "of", "the", "stuck", "tasklist", "select", "from", "tasks", "where", "domain_id", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "and", "task_list_name", "testTaskList", "NUMBER", "and", "task_list_type", "NUMBER", "domain_id", "task_list_name", "task_list_type", "type", "task_id", "range_id", "task", "task_list", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "testTaskList", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "domain_id", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "workflow_id", "NUMBER", "ee", "NUMBER", "e", "c", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "run_id", "b", "NUMBER", "ce", "NUMBER", "ef", "b", "NUMBER", "NUMBER", "de", "NUMBER", "b", "NUMBER", "f", "cd", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "ce", "schedule_id", "NUMBER", "null", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "testTaskList", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "domain_id", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "workflow_id", "NUMBER", "f", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "NUMBER", "a", "NUMBER", "c", "a", "NUMBER", "NUMBER", "db", "NUMBER", "d", "NUMBER", "NUMBER", "run_id", "a", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "c", "NUMBER", "c", "dd", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "schedule_id", "NUMBER", "null", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "testTaskList", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "domain_id", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "workflow_id", "NUMBER", "fac", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "run_id", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "ce", "NUMBER", "d", "NUMBER", "e", "NUMBER", "schedule_id", "NUMBER", "null", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "testTaskList", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "null", "domain_id", "NUMBER", "de", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ac", "NUMBER", "cebde", "NUMBER", "name", "testTaskList", "NUMBER", "type", "NUMBER", "ack_level", "NUMBER", "NUMBER", "rows", "I", "also", "see", "the", "following", "logs", "on", "matching", "engine", "helpers", "NUMBER", "go", "NUMBER", "Persistent", "store", "operation", "failure", "NUMBER", "Operation", "Details", "taskType", "NUMBER", "taskList", "testTaskList", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "ffbb", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "eaf", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "sivakku", "timer_opt", "into", "ffefac", "NUMBER", "df", "NUMBER", "f", "NUMBER", "ddb", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "e", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "b", "NUMBER", "ffbb", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "eaf", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "sivakku", "timer_opt", "into", "ffefac", "NUMBER", "df", "NUMBER", "f", "NUMBER", "ddb", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "e", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "be", "NUMBER", "e", "NUMBER", "de", "NUMBER", "dce", "NUMBER", "a", "NUMBER", "on", "sivakku", "timer_opt", "into", "ffefac", "NUMBER", "df", "NUMBER", "f", "NUMBER", "ddb", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "e", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "to", "NUMBER", "when", "pulling", "ec", "NUMBER", "a", "NUMBER", "dae", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "cb", "NUMBER", "on", "sivakku", "timer_opt", "into", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "on", "uber", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "to", "NUMBER", "when", "pulling", "NUMBER", "e", "NUMBER", "aec", "NUMBER", "d", "NUMBER", "f", "NUMBER", "f", "NUMBER", "bcf", "NUMBER", "e", "NUMBER", "ec", "NUMBER", "cdc", "NUMBER", "e", "NUMBER", "on", "sivakku", "workflow_end", "NUMBER", "end_timeout", "into", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "eeb", "NUMBER", "e", "NUMBER", "a", "NUMBER", "db", "NUMBER", "e", "NUMBER", "on", "uber", "master", "NUMBER", "I", "be", "not", "sure", "why", "we", "need", "an", "ackManager", "for", "timers", "NUMBER", "Since", "we", "assign", "timestamps", "under", "the", "lock", "and", "never", "do", "timers", "in", "the", "past", "to", "advance", "the", "ackLevel", "for", "the", "timer", "it", "suffices", "to", "check", "if", "there", "be", "no", "timers", "between", "the", "previous", "ackLevel", "and", "now", "NUMBER", "Are", "we", "trying", "to", "avoid", "querying", "Cassandra", "for", "this", "check", "Processing", "of", "certain", "transfer", "tasks", "require", "loading", "the", "mutable", "state", "under", "a", "lock", "NUMBER", "We", "need", "to", "carefully", "review", "all", "code", "which", "loads", "the", "execution", "to", "make", "sure", "it", "be", "not", "make", "any", "calls", "to", "history", "service", "under", "the", "lock", "as", "it", "could", "potentially", "cause", "deadlock", "NUMBER", "History", "engine", "first", "creates", "the", "history", "of", "new", "execution", "in", "the", "events", "table", "and", "then", "create", "the", "mutable", "state", "in", "executions", "table", "NUMBER", "It", "be", "possible", "that", "it", "writes", "the", "events", "but", "fail", "on", "the", "second", "write", "NUMBER", "We", "current", "leak", "all", "those", "stale", "executions", "in", "cassandra", "NUMBER", "We", "need", "to", "come", "up", "with", "a", "mechanism", "to", "detect", "all", "those", "stale", "entries", "and", "remove", "them", "NUMBER", "samarabbas", "andrewjdawson", "NUMBER", "be", "this", "still", "valid", "Frontend", "should", "be", "responsible", "for", "serializing", "deserializing", "the", "task", "token", "NUMBER", "All", "other", "internal", "services", "should", "use", "the", "internal", "representation", "NUMBER", "The", "other", "benefit", "of", "an", "explicit", "decision", "failure", "be", "that", "an", "error", "that", "cause", "the", "failure", "can", "be", "expose", "through", "the", "visibility", "API", "NUMBER", "Dupe", "by", "NUMBER", "PR", "NUMBER", "fix", "this", "NUMBER", "Closing", "as", "there", "be", "no", "activity", "and", "not", "enough", "detail", "to", "know", "if", "this", "be", "still", "relevant", "NUMBER", "Another", "option", "be", "to", "schedule", "a", "transfer", "task", "for", "delete", "NUMBER", "It", "would", "also", "work", "with", "archival", "of", "completed", "workflows", "to", "an", "external", "system", "NUMBER", "Tamer", "can", "you", "resolve", "this", "bug", "We", "be", "thinking", "about", "a", "more", "generic", "support", "for", "query", "which", "can", "be", "use", "by", "clients", "to", "issue", "custom", "queries", "to", "workflow", "execution", "like", "expose", "current", "state", "of", "execution", "NUMBER", "samarabbas", "since", "we", "already", "have", "query", "support", "can", "we", "close", "this", "issue", "Ideally", "it", "should", "be", "transparent", "to", "the", "clients", "NUMBER", "So", "any", "archived", "workflow", "should", "still", "be", "accessible", "through", "all", "the", "visibility", "APIs", "but", "instead", "of", "Cassandra", "they", "should", "hit", "the", "backend", "blob", "store", "NUMBER", "Let", "s", "scope", "this", "to", "something", "we", "need", "for", "first", "release", "NUMBER", "We", "already", "have", "marker", "support", "in", "history", "NUMBER", "This", "be", "not", "needed", "anymore", "NUMBER", "shreyassrivatsan", "do", "this", "still", "make", "sense", "and", "do", "it", "fit", "with", "your", "current", "work", "This", "be", "also", "captured", "in", "the", "overall", "multi", "tenancy", "overview", "task", "I", "opened", "NUMBER", "Guys", "what", "s", "the", "status", "of", "this", "feature", "From", "what", "I", "understand", "currently", "a", "single", "matching", "service", "node", "distributes", "all", "the", "work", "belonging", "to", "a", "TaskList", "NUMBER", "What", "s", "the", "impact", "of", "this", "Does", "anybody", "have", "some", "throughput", "measurements", "How", "many", "tasks", "per", "sec", "can", "a", "matcher", "distribute", "Are", "there", "any", "workarounds", "for", "this", "A", "simple", "one", "I", "can", "think", "of", "be", "duplicating", "TaskLists", "into", "and", "then", "starting", "their", "workflows", "in", "a", "round", "robin", "fashion", "NUMBER", "Are", "there", "such", "setups", "support", "directly", "by", "the", "cadence", "client", "library", "rpasea", "This", "task", "be", "currently", "not", "funded", "on", "our", "side", "nor", "we", "have", "an", "ETA", "on", "when", "we", "can", "start", "work", "on", "it", "NUMBER", "Fortunately", "there", "be", "a", "very", "straightforward", "workaround", "as", "you", "point", "out", "NUMBER", "When", "starting", "workers", "specify", "multiple", "tasklist", "and", "start", "a", "worker", "for", "each", "of", "them", "NUMBER", "For", "example", "application", "tasklist", "NUMBER", "application", "tasklist", "NUMBER", "application", "tasklist", "NUMBER", "When", "starting", "workflow", "you", "can", "randomly", "pick", "a", "tasklist", "and", "pass", "it", "in", "as", "parameter", "to", "workflow", "execution", "NUMBER", "Then", "use", "this", "tasklist", "for", "scheduling", "activities", "from", "that", "workflow", "execution", "NUMBER", "We", "don", "t", "have", "a", "high", "level", "client", "abstraction", "which", "do", "this", "automatically", "but", "it", "should", "be", "pretty", "easy", "to", "build", "NUMBER", "Answer", "to", "throughput", "measurements", "for", "a", "single", "tasklist", "depends", "on", "what", "kind", "of", "hardware", "you", "be", "use", "for", "the", "deployment", "NUMBER", "Here", "be", "some", "numbers", "which", "see", "on", "our", "production", "cluster", "Number", "of", "tasks", "dispatch", "with", "SyncMatch", "NUMBER", "sec", "Number", "of", "tasks", "dispatch", "without", "SyncMatch", "NUMBER", "sec", "Specs", "MatchingHost", "Memory", "NUMBER", "GB", "MatchingHost", "Cores", "NUMBER", "Cassandra", "Memory", "NUMBER", "GB", "Cassandra", "Cores", "NUMBER", "Thanks", "for", "the", "thorough", "response", "Samar", "On", "Mon", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Samar", "Abbas", "Uber", "TAG", "write", "rpasea", "TAG", "This", "task", "be", "currently", "not", "funded", "on", "our", "side", "nor", "we", "have", "an", "ETA", "on", "when", "we", "can", "start", "work", "on", "it", "NUMBER", "Fortunately", "there", "be", "a", "very", "straightforward", "workaround", "as", "you", "point", "out", "NUMBER", "When", "starting", "workers", "specify", "multiple", "tasklist", "and", "start", "a", "worker", "for", "each", "of", "them", "NUMBER", "For", "example", "application", "tasklist", "NUMBER", "application", "tasklist", "NUMBER", "application", "tasklist", "NUMBER", "When", "starting", "workflow", "you", "can", "randomly", "pick", "a", "tasklist", "and", "pass", "it", "in", "as", "parameter", "to", "workflow", "execution", "NUMBER", "Then", "use", "this", "tasklist", "for", "scheduling", "activities", "from", "that", "workflow", "execution", "NUMBER", "We", "don", "t", "have", "a", "high", "level", "client", "abstraction", "which", "do", "this", "automatically", "but", "it", "should", "be", "pretty", "easy", "to", "build", "NUMBER", "Answer", "to", "throughput", "measurements", "for", "a", "single", "tasklist", "depends", "on", "what", "kind", "of", "hardware", "you", "be", "use", "for", "the", "deployment", "NUMBER", "Here", "be", "some", "numbers", "which", "see", "on", "our", "production", "cluster", "Number", "of", "tasks", "dispatch", "with", "SyncMatch", "NUMBER", "sec", "Number", "of", "tasks", "dispatch", "without", "SyncMatch", "NUMBER", "sec", "Specs", "MatchingHost", "Memory", "NUMBER", "GB", "MatchingHost", "Cores", "NUMBER", "Cassandra", "Memory", "NUMBER", "GB", "Cassandra", "Cores", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Implemented", "as", "part", "of", "NUMBER", "Assigned", "to", "yux", "NUMBER", "for", "test", "and", "rollout", "NUMBER", "It", "should", "also", "accept", "NUMBER", "as", "a", "valid", "value", "NUMBER", "When", "NUMBER", "be", "specified", "no", "tasks", "should", "be", "dispatched", "on", "the", "given", "task", "list", "NUMBER", "It", "can", "be", "use", "to", "quickly", "shut", "down", "the", "dispatch", "to", "workers", "if", "some", "corruption", "problem", "with", "them", "be", "find", "NUMBER", "We", "see", "significant", "load", "from", "individually", "deleting", "transfer", "and", "timer", "tasks", "from", "DB", "after", "processing", "NUMBER", "Cassandra", "has", "support", "for", "range", "deletes", "and", "we", "should", "be", "easily", "move", "our", "deleting", "logic", "to", "range", "deletes", "when", "we", "move", "the", "ack", "level", "rather", "than", "individually", "deleting", "tasks", "NUMBER", "We", "need", "a", "tool", "to", "automate", "creation", "update", "of", "version", "cassandra", "schema", "for", "cadence", "NUMBER", "The", "requirements", "be", "as", "follows", "Support", "initial", "setup", "of", "schema", "and", "associate", "the", "schema", "with", "a", "version", "number", "Support", "intial", "setup", "of", "schema", "without", "version", "for", "test", "onebox", "etc", "Support", "update", "of", "schema", "to", "a", "newer", "version", "with", "safety", "Only", "whitelist", "CREATE", "ALTER", "command", "Support", "for", "dry", "runs", "LINK", "Part", "II", "LINK", "resolving", "all", "diffs", "push", "to", "master", "NUMBER", "LINK", "matching", "emit", "metrics", "for", "interesting", "events", "NUMBER", "Not", "an", "issue", "NUMBER", "We", "need", "to", "have", "a", "discussion", "on", "what", "be", "the", "default", "NUMBER", "NUMBER", "fix", "part", "of", "this", "we", "now", "create", "just", "one", "timer", "for", "all", "of", "the", "activities", "combined", "NUMBER", "Ghhlvifyc", "gcjc", "NUMBER", "_", "vhxhvc"], "text_count": [0, 10910, 2400, 1646, 1310, 149, 1396, 0, 37, 752, 1013, 3755, 1276, 1563, 1560, 509, 0, 0, 0, 0, 3295, 1060, 361, 1035, 786, 368, 0, 0, 0, 0, 8577, 5119, 3543, 171, 1813, 698, 0, 0, 0, 0, 8143, 98, 4568, 4092, 1862, 0, 0, 0, 0, 0, 1815, 932, 985, 357, 488, 238, 532, 0, 0, 0, 8955, 355, 7911, 294, 0, 0, 0, 0, 0, 0, 6094, 431, 4992, 1974, 431, 0, 0, 0, 0, 0, 10951, 4725, 797, 5408, 230, 304, 0, 0, 0, 0, 338, 1980, 159, 0, 0, 0, 0, 0, 0, 0, 11308, 1901, 7033, 2395, 0, 0, 0, 0, 0, 0, 18919, 34270, 1807, 1597, 249, 370, 0, 0, 0, 0, 41265, 79, 31269, 336, 5046, 9272]}]