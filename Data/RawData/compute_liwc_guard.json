[{"repo": "guard", "type": "elite", "title": "", "number of text": 686, "text": "  Hi, I thanks for the report. However, since this is related to guard-rspec, you should [report the issue there](https://github.com/guard/guard-rspec/issues/new).\n\nBtw, have you tried with `focus_on_failed: false`?\n You're welcome!\n\n@thibaudgg maybe `focus_on_failed` should be `false` by default, what do you think?\n Yeah I know this has changed, all I say is that it's not the least surprising option IMHO (and not so fundamental to me ^^).\n  Hi @daniel, this is normally fixed since [Listen 2.0.3](https://github.com/guard/listen/releases/tag/v2.0.3).\n\nPlease make sure you're using the latest Guard and Listen versions.\n @daniel You're welcome!\n@thibaudgg Of course I was! ;)\n  Thanks, you're right!\n Guard 2.2.2 released, thank you!\n  Ok, I've pushed a fix for this issue. Please try guard master (`gem 'guard', github: 'guard'` in your Gemfile) and let me know how it goes.\n\nThanks in advance!\n Awesome, Guard 2.2.1 released!\n  This is definitely a Listen issue, thanks guys!\n\n@stas, @wulftone, @tinamou Could you please [report this issue in the Listen issue tracker](https://github.com/guard/listen/issues/new) (only one issue report should be sufficient since Ubuntu & Kubuntu are based on Debian (if I'm not mistaken))?\n\n@blackheaven Could you please [create another issue in the Listen issue tracker](https://github.com/guard/listen/issues/new) for FreeBSD not supported (btw, did you add `gem 'rb-kqueue', '>= 0.2'` in your Gemfile)?\n\nThanks in advance guys.\n  Hello, I've pushed a commit to master so that debugging should be easier (backtraces are now displayed when in debug mode).\n\nCould you try guard master in debug mode (in your Gemfile: `gem 'guard', github: 'guard'`) and using one notifier at a time (in your Guardfile: `notification :tmux` first, then `notification :terminal_title`) and let us know what the errors and backtraces are?\n\nThanks in advance!\n This is fixed in 2.2.1!\n  Hi,\n\nI've pushed a commit that might fix this issue. Please try guard master (`gem 'guard', github: 'guard'` in your Gemfile) and let me know how it goes.\n\nThanks!\n  Right, seems like a regression to me!\n I agree, nice issue report! :+1: \n  It's due to the way vim saves the file: https://github.com/guard/guard/wiki/Analysis-of-inotify-events-for-different-editors#vim\n\nI believe this is a guard-rspec implementation issue. We could replace `run_on_changes` with `run_on_modifications` here: https://github.com/guard/guard-rspec/blob/master/lib/guard/rspec.rb#L48 but specs wouldn't run when new files are really created (i.e. not on a vim save).\n\n@thibaudgg what do you think?\n Closing this issue since this will be fixed in guard-rspec.\n  Hi, thank you very much for the very good report, this is actually an already-reported Listen issue: guard/listen#144\n\nFeel free to comment on guard/listen#144 and submit a pull-request (it's not hard to fix), thanks!\n  Hi @RamiroCampa, I've pushed a commit that should fix this issue.\n\nCould you please try guard master (`gem 'guard', github: 'guard'` in your Gemfile) and let me know?\n\nThanks in advance!\n > i changed the guard source as specified in bundler documentation, it throws me an error\n\nWhat was this error?\n\nPlease try only with `gem \"guard\", github: \"guard\"` (to avoid having Bundler issues on top of Guard issues ^^) and be sure to [run the Bundler troubleshooting steps](https://github.com/bundler/bundler/blob/master/ISSUES.md#other-problems).\n Do you have git installed?\n @jyrkij It should be fixed in master, did you try it (`gem 'guard', github: 'guard'` in your Gemfile)?\n Ok, thanks for the feedback! :)\n  Hi,\n\nIf `Guardfile-lint` is in a directory watched by Guard, it should be reloaded. Could you please give more details about the issue (see [CONTRIBUTING.md](https://github.com/guard/guard/blob/master/CONTRIBUTING.md))?\n\nThanks!\n Ok, thank your for these useful infos. I think this might be an issue that is now resolved since Guard 2.0.0.\n\nCould you update to Guard 2.0.3 and let me know if you still encounter this issue? Thanks in advance.\n Ok, I managed to reproduce the issue now! Looking into it now!\n Ok, found the culprit, fix's coming soon!!\n Ok, this is now fixed in master, could you try it (`gem 'guard', github: 'guard'`)?\n\nThanks!\n Awesome!! :rainbow: \n  You're right, now, before the refactoring, the options were passed to the `.notify` method but now they're passed at initialization time to the notifier and they're not merged with the options passed to the `#notify` method.\n\nThanks for the pull-request, I'll merge it and refactor the `Notifier::Base` class to always pass options to the `#notify` method.\n  Thanks for the report and for the fix! I've [released 2.0.1](https://github.com/guard/guard/releases/tag/v2.0.1)!\n  I'm not sure about that, currently we don't perform notifier-specific stuff when a Guard plugin runs a specific task.\n\nCould you describe more precisely what you'd like to achieve?\n  @jasonm23 Any update yet?\n Thanks @jasonm23, fixed!\n  Awesome, thank you!\n @cablegram Was the PR actually ok to be merged (I've seen that your latest message originally included 2 todos items) and if yes can I release a new pre release?\n Ok cool, I've actually [added tests for this (based on your suggestion)](https://github.com/guard/guard/commit/3633f0d20ad14bb315901373887e4da2569d5302)!\n\nThanks!\n  Hi, could you update to Guard 2.0.3 and let me know if you still encounter the issue? Thanks in advance!\n Please update to latest Guard (2.0.5) and let me know if you still encounter the issue? Thanks in advance!\n Actually, the latest release is now 2.1.0. ;)\n Close for lack of reply (feel to re-open if the issue is confirmed).\n  Thanks guys, do you think [these changes](https://github.com/guard/guard/compare/v1.8.1...v1.8.2#diff-6) might cause this issue?\n Ok. @netzpirat do you see anything in these changes that might cause this issue?\n  Yeah, we have time to ensure Listen 2 is stable and then release Guard and Listen 2 together! :)\n :+1: I've fixed an issue occurring in 2.0.0.pre so I'm very interested in having 2.0.0.pre.2 released! :)\n Thanks! 2.0.0.pre.2 released!\n  @shyam-habarakada Could you try this branch and let me know if this fixes the issue? Thanks in advance!\n Yeah, I was not sure since I cannot reproduce the issue... :P\n\nBut maybe this is not clear in the what TerminalNotifier is, in fact it's not a notifier in the terminal... ^^\n\nClosing this in favour of #481, thanks!\n  Hi,\n\nIt's strange, we're using both `guard (1.8.2)` and `better_errors (0.9.0)` successfully...\n Thanks very much for that!\n\nI think I found the problem: `better_errors` depends on `coderay >= 1.0.0` while `pry` (required by Guard since the 1.5.0) depends on `coderay ~> 1.0.5`. The version `1.1.0` of `coderay` has been released on August 31st but since `pry` doesn't accept `coderay 1.1.0`, Bundler select the first version of Guard that doesn't depends on `pry`: the `1.4.0`.\n\nSolutions:\n- (best) [Update Pry dependencies](https://github.com/pry/pry/issues) to depends on `coderay ~> 1.0` (>= 1.0 && < 2);\n- (in the meantime) Add `gem 'coderay', '~> 1.0.9'` to your Gemfile so that the latest version of `coderay` doesn't prevent the latest Guard version from being used.\n :P The second solution definitely works, yes!\n\n@netzpirat Do you think my reasoning make sense?\n  Hi guys, I cannot reproduce the issue. For me the terminal title is cleared when I exit Guard.\n Me too: 10.8.4 :/\n\nWhat are the steps to reproduce?\n\nOn Sep 5, 2013, at 22:06 , shyam-habarakada notifications@github.com wrote:\n\n> I'm on current / latest OSX. What are you on @rymai?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n For me, I have this once specs pass:\n![screen shot 2013-09-05 at 22 15 51](https://f.cloud.github.com/assets/1168/1091436/0d9d86fc-1668-11e3-9c1a-7380366541aa.png)\n\nAnd then the title goes back to normal once I exit Guard:\n![screen shot 2013-09-05 at 22 16 03](https://f.cloud.github.com/assets/1168/1091443/196986ca-1668-11e3-80e9-62635eef37ed.png)\n\nThe strange thing is that in your case it updates the tab's title... not the window's one.\n Sorry but no...\n\nAfter specs run:\n![screen shot 2013-09-05 at 22 22 20](https://f.cloud.github.com/assets/1168/1091496/ee26e6be-1668-11e3-9e04-a923be5e5dc4.png)\n\nAfter exit:\n\n![screen shot 2013-09-05 at 22 22 32](https://f.cloud.github.com/assets/1168/1091498/f02b57d8-1668-11e3-9829-2840ae49cd00.png)\n Awesome.\n\n@shyam-habarakada Could you open a pull-request in the following days for that (you can do it against master as I just merged the v2.0 branch into it!)?\n\nThanks!\n  Hi guys, great idea. I suggest to keep it for 2.x so we can focus on releasing 2.0 first, what do you think?\n W00t!\n I've changed the milestone to 2.0! :)\n Ok, 2.0.0.pre released!!!! I've also [migrated all the CHANGELOG into GitHub releases](https://github.com/guard/guard/releases).\n Yes, manually! :D\n Yes, why not!\n  Hi,\n\nCurrently the `ignore` and `filter` methods are forwarded to `Listen` so that they have effects only on a file change, not when you hit \"run all\" or \"reload\".\n\nThat said, that's could be considered a bug...\n\n@guard/core-team what do you think?\n  Work in progress.\n Ok guys!!!!!!!!!\n\nI've written the guide to upgrade to Guard 2.0 (mostly for plugins authors): https://github.com/guard/guard/wiki/Upgrading-to-Guard-2.0 (comments, feedback, fixes and modifications welcome!)\n\nSo now, I propose the following steps before releasing 2.0:\n1. Do #424 and #425. Once done, go to next step.\n2. The @guard/core-team and people who want could test-drive the v2.0 branch to spot any obvious breakage / big issues. After 2 days of no new issues, go to next step.\n3. Once stable for alpha, we could (optionally merge this branch and) release 2.0.0.alpha and ask our users to try it. After 7 days of no new issues, go to next step.\n4. Release 2.0. Celebrate.\n\nNote:\n- Durations are approximate.\n- We could even skip step 2...\n Yeah we could try using GitHub releases only (I actually [tried them here](https://github.com/jilion/http_content_type/releases)).\n lol, I knew you'd say that! It was more convenient to write the changes one by one in the CHANGELOG, and create the release afterward and I also wasn't sure how the GitHub releases work.\n\nThat said, if we don't use the CHANGELOG anymore, we'll have to create a draft release with `master` as target and, once the new gem release is published, publish the GitHub release with the target set as the last gem's release commit.\n Ok, I made a draft release: https://github.com/guard/guard/releases\n I'd say let's experiment using GitHub releases for the 2.0.0.alpha and keep using the CHANGELOG until it's migrated to GitHub releases (or not).\n Ok @guard/core-team, #424, #425 & #432 are now done so it's time to go to the next step. I'm thinking of test-driving the v2.0 branch tomorrow (Tuesday) before releasing 2.0.0.alpha. Then we'll allow a few more days for issues to come and be fixed and then release 2.0.0.\n\nWhat do you think about that plan?\n  Hi,\n\nAs always, please follow the [CONTRIBUTING](https://github.com/guard/guard/blob/master/CONTRIBUTING.md#file-an-issue) guidelines so that we can help you better, thanks!\n So, what should we do in the case when a group is called \"all\"?\n\nI suggest displaying an error message and quit Guard.\n  Thanks for the report! Fixed in 1.8.1!\n  Hi, please give us more info first: https://github.com/guard/guard/blob/master/CONTRIBUTING.md#file-an-issue\n\nThanks!\n Thank you, what's your guard version?\n Ok, have you tried adding `rb-readline` to your Gemfile?\n Btw, you can remove `gem 'rb-fsevent'` from your Gemfile (it's automatically added by latest version of Guard).\n You're welcome!\n  Notifiers are now classes with a common interface\ninherited from `Guard::Notifier::Base`:\n- `#notify` (required)\n- `.available?` (optional)\n- `.supported_hosts` (optional)\n- `.gem_name` (optional)\n\nWhat do you think of this?\n\nAlso, I think after this refactoring it'd be very easy to extract the notifiers\nto a separate gem. I couldn't find such gem (there's [notifier](http://rubygems.org/gems/notifier) but I don't really like its\napproach...) so I thought we could create a new one and name it \"Brief\"!\n\nWhat do you @guard/core-team think?\n Thanks guys!\n\n`tell` sounds right but [it's already taken](http://rubygems.org/gems/tell) on RubyGems.org. :/\n Ok thanks guys!\n\nHere is a little to-do list for me before I merge this PR (don't hesitate to add tasks if you think I forgot some):\n- [ ] ~~Deprecate `Guard::Notifier.notify` old signature~~\n- [ ] ~~Update CHANGELOG~~\n\nEdit: Actually the signature didn't change so there's nothing else to do here!\n @thibaudgg I think it was a joke ! ^^\n  Agreed! @timmfin could you rebase this pull-request please? Thanks!\n Thank you!\n 1.8.2 released!\n  That seems fair enough, thanks!\n Thanks to you, yeah the second PR is welcome too.\n  Hi Praveen, it seems to be more an issue on the plugin side of livereload, please try to contact support@livereload.com.\n You doesn't use the official one? http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-\n Nops, ask support@livereload.com.\n  Good to hear, thanks!\n  Please open an issue in the guard-jasmine repository instead. Thanks!\n Oops, sorry my bad!\n  Looks like a Bundler issue, closing this for now due to lack of activity. Feel free to re-open if you have anything new, thanks!\n  Looks great, thanks!\n  Thanks!\n  Thanks for removing it @tilsammans, I have updated the wiki because from Listen release 1.0.0 these adapters are dependencies of the Listen gem, so you doesn't need to add them in your Gemfile anymore.\n  Perfect PR, thanks :)\n  - [x] Change `Guard::Guard` with `Guard::Plugin`\n- [x] New signature for `Guard::Plugin.initialize`\n- [x] Behavior change for `Guard#guards`\n- [x] Behavior change for `Guard#groups`\n- [x] New signature for `Guard#add_guard`\n- [x] Deprecation of `Guard.get_guard_class` replaced by `Guard::PluginUtil#plugin_class`\n- [x] Deprecation of `Guard.locate_guard` replaced by `Guard::PluginUtil#plugin_location`\n- [x] Deprecation of `Guard.guard_gem_names` replaced by `Guard::PluginUtil.plugin_names`\n- [x] Document the new notifiers system\n- [x] Update https://github.com/guard/guard/wiki/Use-Guard-programmatically-cookbook\n Ok, I've written the guide to upgrade to Guard 2.0 (mostly for plugins authors): https://github.com/guard/guard/wiki/Upgrading-to-Guard-2.0\n\nComments, feedback, fixes and modifications welcome!\n @thibaudgg Yeah, you're right. I think I made this change because most of the time you'd call `Guard.guards('rspec')` so it'd be more convenient to get a `Guard::Plugin` instead of an array but that's not worth breaking the current API, IMHO (and the method is named `guards` so it's also less surprising to always get an array in return). I'll revert this change!\n\n@netzpirat Thank you!\n Ok, I've actually created `Guard.plugin(filter)` and `Guard.group(filter)` to return the first plugin / group matching the filter to handle this case cleanly! And I've updated the wiki page.\n  Hi guys!\n\nWith 2.0 in mind, I've made many refactorings to almost all the parts of the code!\n- As discussed in #426, I've deprecated `Guard::Guard` in favor of `Guard::Plugin` (with a deprecation warning message show-able with the `--show-deprecations` options).\n- I've moved many methods from `Guard` to `Guard::Deprecator`, `Guard::Setuper`, `Guard::PluginUtil`. See the individual commits for the details.\n- I've also moved `Guard::Hook` into `Guard::Plugin::Hooker` and created a new `Guard::Plugin::Base` for the common methods of `Guard::Plugin` and `Guard::Guard` (deprecated).\n\nSee the individual commits for the other stuff I forgot to mention here!\n\nThanks for the feedback!\n Cool thanks! It's only refactorings but I think it's needed!\n\nI didn't even start the to-dos of #426! :P\n Done!\n Sure!\n Some todos (for me) before I merge this:\n- [x] Fix inline doc for `Guard#guards`\n- [x] Fix inline doc for `Guard#groups`\n- [x] Fix inline doc for `Guard#add_guard`\n- [x] Document all the `Guard::Setuper` methods\n- [x] Improve inline doc for `Guard::Plugin::Base#name` (give an example)\n- [x] Improve inline doc for `Guard::Plugin::Base#title` (give an example)\n- [x] Improve inline doc for `Guard::Plugin::Base#to_s` (give an example)\n- [x] Improve inline doc for `Guard::Group#title` (give an example)\n- [x] Deprecate `Guard.locate_guard` (instead of removing it directly)\n- [x] Deprecate `Guard.guard_gem_names` (instead of removing it directly)\n- [x] Mark methods that are not included in the public API as private\n- [x] Allow `Guard::PluginUtil.initialize` to pass a full plugin name (e.g. `guard-rspec`) or only its name (e.g. `rspec`)\n- [x] Check the generated Yard doc\n @SamSaffron what do you think of using [Celluloid Notification](https://github.com/celluloid/celluloid/wiki/Notifications) for this? I'm rewriting the Listen gem with Celluloid and I'm thinking to also maybe using it for Guard 2.0, so it could be a good use case for it.\n What would be the id here? Some unique identifier that change every run, or a guard-plugin identifier?\n Ok sounds good. Let me finish the Listen rewrite (count maybe 4-6 weeks) and I'll start the Celluloid transition for Guard 2.0\n\n@guard/core-team what do you think of using Celluloid for Guard 2.0? I'm quite happy with if for Listen (no commit published yet sadly... big big rewrite :))\n Sorry this branch will be broken until #451 is merged! :)\n  Hi,\n\n`ignore` applies to all Guard plugins in your Guardfile, indeed! :)\n Sure thing, feel free to open a pull-request, thanks!\n\nI don't think many people will assume `ignore` is scoped by Guard plugins but it's always better to be clear! :)\n  :cake:!\n Nice, I agree the old theme is the best. What about hosting it with [gh-pages](https://github.com/jeromegn/DocumentUp#gh-pages) that [supports custom domain](https://help.github.com/articles/setting-up-a-custom-domain-with-pages)?\n\nThe wiki is great with a sidebar and a footer, the only thing I'm worried about is fact that the wiki could become outdated, but it's great for stable stuff, specialized how-to and so on. So maybe we could move some stable stuff from the README to the wiki (like Windows Colors, System notifications, ...) \n http://guardgem.org I think it's already pointing to GH pages. thanks!\n Awesome, thank you Michi!\n  Cool @netzpirat, sounds very good! I'm interested in working on these todos, let me know if you already want to work on them (we can split them between us). \n Ok, I was reviewing the API and already did some changes but I was thinking of replacing `Guard::Guard` with `Guard::Plugin` for the 2.0 to make it clearer when we speak of Guard and when we speak of Guard plugins...\n\nWe could still make it backward-compatible with a deprecation notice for Guard plugins that inherits from `Guard::Guard`.\n\nWdyt @guard/core-team?\n Hum, I see... Since the deprecation messages are hidden by default and can be shown via the :show_deprecations option, I think that shouldn't be a problem (by the way this option is not in the readme).\n\nSent from my iPhone\n\nOn 17 avr. 2013, at 08:56, Michael Kessler notifications@github.com wrote:\n\n> That's a great suggestion. However we need to ensure that deprecations for plugin developers doesn't bother normal users of a plugin.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n @netzpirat I'm not sure about \"Review Listen integration, preferably use Listen by default in blocking mode\", I'll let you (or maybe @thibaudgg ?) have a look at this if you're ok with it!\n\nThanks!\n  Would be cool to have that done asap (I could do it / help if you don't have the time)! :)\n Ok, I'll let you know if I start this before you! ;)\n Ok @netzpirat, since I had some time and motivation, I went ahead and removed the deprecated methods / deprecation warnings as agreed!\n  Would be cool to have that done asap (I could do it / help if you don't have the time)! :)\n Ok!\n Done.\n  Hi Robin!\n\nThanks for your investigation on this! :)\n\nAbout your 3 propositions:\n1. I agree that this should be possible to pass a default group as a symbol with `scope groups: :all_specs`. Feel free to open a pull-request specifically for this, or I could implement it if you prefer. Let me know.\n2. Go for it! :)\n3. You should definitely create a new issue for this!\n\nThank you!\n  Perfect!\n\nAlso, could you add `[#413][]` for all the changes of the #413?\n\nThanks!\n\nPS: I'm really picky about changelog entries, aren't I? :P\n Thank you very much, you rock and are totally right!\n\nCheers!\n  You forgot to update the changelog! :)\n I was actually saying this to @aspiers (you can now directly update and push it without a pull-request)! ^^\n You're right, I shouldn't have \"direct pushed\" (aka `[ci skip]`), my bad!\n\nThat said, I think the actual issue was that the test needed the `guard-rspec` gem to be loaded! Fortunately, I've [fixed that](https://travis-ci.org/guard/guard/builds/6063458) with 762524cf03406562a6fea655162bf436c2830af8. :)\n\nThat said, for the Changelog I really encourage you to direct push with `[ci skip]` (or without if you're really afraid to break the build). ;-)\n Sorry, I thought you were speaking about `[ci skip]`, I understand what you meant now!\n\nYou're right there's no guidelines for updating the Changelog, I'll try to write them down soon! :)\n\nAnd yes, we use `## Master` when changes are not included in a gem release yet.\n\nIn the end, it's really up to you to choose to submit pull-requests for readme/changelog/docs changes, but don't worry we'll never complain about new pull-requests! ^^\n  Thanks!\n\nIt needed to be updated on https://rubygems.org, indeed!\n Btw, the correct link is http://rubydoc.info/gems/guard/frames\n  We have now an [open commit bit](https://github.com/guard/guard#open-commit-bit) policy and you're the first contributor! Welcome @amiel \n  That's a very, very nice pull request that opens a whole bunch of new possibilities. Thanks a lot. I see no problems with adding the options hash to the `available?` method, but I'd add it as last parameter, so the API is backward compatible: `.available?(silent = false, options = {})`\n  I never had that certificate issue on any system I'm using (perhaps because I've installed http://curl.haxx.se/docs/caextract.html. Anyway you're absolutely right, terminal-table isn't maintained anymore and thus wasn't the best choice for printing a table to the terminal. After a quick research I've found https://github.com/geemus/formatador from @geemus and so I rewrote the `list` and `show` actions, so we can drop the dependency on `terminal-table`.\n @geemus Thanks! It was straight forward to implement, the only thing that took me a while was to realize that formatador has an instance per thread, so I could write [a spec](https://github.com/guard/guard/blob/master/spec/guard/dsl_describer_spec.rb#L38-L41) for it.\n  I hope you understand that I cannot merge the pull request without specs and I'm going to close this PR now because of inactivity. If you decide to add some specs, please reopen the pull request and I'll happily review it. Thanks a lot.\n  I hope you understand that I cannot merge a pull request without working specs on all supported platforms and I'm going to close this PR now because of inactivity. If you decide to fix the specs, please reopen the pull request and I'll happily review it. I'm fine when it only works on 1.9, because we anyway drop 1.8.7 support very soon. Thanks a lot.\n  I do not have Growl version 1.4 available, because I've bought version 2.0.1 in the App store. The following snippet works fine and it uses the default GNTP options:\n\n``` ruby\nrequire 'ruby_gntp'\ngntp = ::GNTP.new('Guard', '127.0.0.1', '', 23053)\ngntp.register({\n  :app_icon => File.expand_path(File.join('images', 'guard.png')),\n  :notifications => [\n    { :name => 'notify', :enabled => true },\n    { :name => 'failed', :enabled => true },\n    { :name => 'pending', :enabled => true },\n    { :name => 'success', :enabled => true }\n  ]\n})\ngntp.notify(:name => 'success', :title => 'Guard test', :text => 'This is a test')\n```\n\nCan you verify Growl listens on the same port?\n Strange, that code is basically a slightly modified version of the [::Guard::Notifiers::GNTP#notify](https://github.com/guard/guard/blob/master/lib/guard/notifiers/gntp.rb) method. I'm not aware of any setup needed, the parameters used are the [default ones](https://github.com/guard/guard/blob/master/lib/guard/notifiers/gntp.rb#L33-L38).\n @jamesarosen Did you solve the GNTP problem?\n Ok, that's also a solution :P I'm closing this then, since I'm not able to reproduce it.\n  The Guard interactor is based on Pry and offers some [useful commands](https://github.com/guard/guard#interactions) which are of interest for all users, so we like to have it enabled by default. For Ruby developers Pry offers a huge feature set to examine the runtime and is extremely useful.\n\nIt looks like the issue happens only with the latest Pry minor releases (0.9.11.x) on Windows and it's likely that it will be fixed soon.\n @ kyrylo Thanks for the test. So it seems that `0.9.11.4` solves the command problem on Windows 7. What Ruby version are you using?\n We had the issue some weeks ago, that the characters were not echoed, but the commands still worked. In your case, is it totally blocked or does it react on further changes, like file modifications and/or typing `test<Enter>`?\n I just tested the Guard master branch on my Windows 8 VM and all works fine. I'm also using Ruby 1.9.3p362 with DevKit (installed via RubyInstaller) and the `wdm` gem for file notifications. The only difference I see is that I ran Guard with `bundle exec guard`.\n\nAll previous issues causing the interactor to block were related to the Ruby readline implementation on OS X that blocked the other threads (because it uses libedit and not readline). I don't know how Ruby on Windows is built and its OS specific characteristics like threading and console IO.\n\nI have no clue what the problem might be and I will not spend any more time trying to reproduce it, since I have only Windows 8 available and I don't know anything about Ruby on Windows. The Guard team is missing a developer that uses Windows as development machine (and not only as IE testing machine) and has some deeper understanding of the OS and its Ruby implementation. As long we don't have such a person on board, Guard will not be a first class citizen on Windows.\n @wolfgangihloff You still have Pry 0.9.11.2 installed. Please run `bundle update` to upgrade to pry-0.9.11.4\n @wolfgangihloff did you open an new issue at the Pry repo?\n  That's really appreciated. Most of the README and the YARDOCs are written by non native English speakers.\n  What happens when you put each guard into its own group?\n I just verified that multiple guard-rails plugins can co-exists in Guard by initializing a fresh Rails app, installed guard-rails and used the `Gemfile` you've supplied:\n\n``` bash\n[1] guard(main)> Guard.guards\n=> [Rails, Rails]\n[2] guard(main)> Guard.guards[0].options\n=> {:port=>4000,\n :environment=>:test,\n :start_on_start=>true,\n :force_run=>false,\n :timeout=>20,\n :server=>nil,\n :debugger=>false,\n :daemon=>true}\n[3] guard(main)> Guard.guards[1].options\n=> {:port=>4001,\n :environment=>:test,\n :start_on_start=>true,\n :force_run=>false,\n :timeout=>20,\n :server=>nil,\n :debugger=>false,\n :daemon=>true}\n[4] guard(main)> \n```\n\nSo there is no problem by running multiple instance of the same Guard plugin and the problem seems to be with the plugin implementation.\n  Prior to Guard 1.6 the group option was used to skip plugins that are not in the given group when evaluating the `Guardfile`, so they were not initialized and could not be used afterwards. Guard 1.6 introduced then the ability to change the scope at runtime and also scope to plugins in addition to groups, thus Guard will initialize all plugins when evaluating the `Guardfile`, since they are used to create Pry shortcut commands. Guard also starts all plugins from the beginning and only scopes the `run_*` actions to the active plugins, which may not be optimal for every use case. We could change that to support plugin lazy starting, so that only active plugins will be started on Guard start and all the others will be started prior the first `run_*` action.\n Since we evaluate all plugins in the `Guardfile` on start, we create a plugin object even for inactive plugins and thus the constructor will be called and the plugin initialized. There's no easy way to defer plugin initialization and I see no reason to do so, since it should only initialize the internal state of the plugin and not do any plugin related work. This should go into the `#start` method and this is what we should _not_ call for inactive plugins. So I still think we should implement lazy starting :)\n Sure, we always welcome enhancements of all kinds!\n You're right. So some plugins will never receive the `#start` when we start Guard in scoped mode and switch it later at runtime.\n  Yep, I can reproduce it. I anyways want to improve the `list` and `show` actions, so I'll take care of it.\n  That sounds great and you're completely right! The `guardrc` file has no dependency to Pry at all and really doesn't belong there. Originally Pry had support for a custom `pryrc` file and when they removed support for it, we just re-implemented it instead of thinking about why they removed it :P \n\nThanks a lot for taking care of it!\n Great! Thanks a lot.\n I'm closing this for now... awaiting your pull request.\n  Thanks a lot for catching this!\n  No worries, that failure is a problem in the Guard spec suite and not in your pull request. I'll have a look \n  I'm sorry, but I can't help you with this because I don't use Windows for development. Also all the other core members are either using OS X or Linux for development. If you don't get help here form another Guard user that uses Windows I recommend asking on StackOverflow for a wider audience. If you use the `guard` tag I'll see the question and will jump in to help if general Guard knowledge not specific to Windows is needed.\n SO question: http://stackoverflow.com/questions/14303869/unable-to-exit-guard-when-running-on-windows\n Ah, totally forgot about this! Since Guard has a full featured Pry shell as interactor, it catches Ctrl-C to simulate the same behavior as Pry/Bash/ZSH. Ctrl-C cancels your entered commands, whereas Ctrl-D (EOF) stops the process:\n\n``` bash\n$ guard\n10:07:44 - INFO - Guard is now watching at '/path/to/project'\n[1] guard(main)> Guard.opt<Ctrl-C>\n[2] guard(main)> <Ctrl-D>\n10:10:38 - INFO - Bye bye...\n$\n```\n @shvelo @agibralter Can you confirm that `Ctrl-D` works fine?\n Just read on superuser that on windows EOF is sent with `Ctrl-Z`, perhaps that works. I also went to Pry and I see that people are using it on Windows. Do you know the reason why it doesn't work in your environment? Have you tried to run it in Cygwin?\n Can you do some debugging? I recommend RubyMine, where you can [run Guard within RubyMine](http://stackoverflow.com/questions/11996124/is-it-impossible-to-use-guard-with-rubymine/12000765#12000765) and attach its multi-thread aware debugger.\n Guard has the [following logic when trapping Ctrl-C](https://github.com/guard/guard/blob/master/lib/guard.rb#L120-L128): If Pry is running it delegates Ctrl-C to Pry otherwise Guard stops. Ctrl-D is handled by Pry and [will exit the Pry session](https://github.com/guard/guard/blob/master/lib/guard/interactor.rb#L241) and then Guard stops. In all cases Guard should [normally stop](https://github.com/guard/guard/blob/master/lib/guard.rb#L195-L204) by executing the plugins stop action.\n\n@agibralter You should be able to execute custom stop code with an inline Guard directly in your `Guardfile`:\n\n``` ruby\nrequire 'guard/guard'\n\nclass InlineGuard < ::Guard::Guard\n  def stop\n    # This will be called on Guard stop\n  end\nend\n```\n\n@shvelo I have no clue if Windows handles Ruby threads different than on OS X, but you can check with the debugger if it reaches the [stop method](https://github.com/guard/guard/blob/master/lib/guard.rb#L195-L204) on Ctrl-D/Ctrl-C/exit command.\n Oh sorry, I missed the Guard module...\n @shvelo I just did a quick test by installing Ruby 1.9.3-p362 with RubyInstaller and DevKit into a new Windows 8 VM and Guard works as expected:\n- Exits when entering `exit` into the interactor.\n- Cancels current expression in Pry when entering `Ctrl-C`\n- Exits when pressing `Ctrl-D`\n- Exits on `Ctrl-C` when running without interactor.\n\nSo I cannot reproduce your issue and you need to debug it on your own. Please reopen if you need some assistance when debugging.\n  You've already located the only area where Guard is making use of `stty`. I have no clue what's causing this.\n Closing this, please reopen if you need more information.\n  You don't need to set the history file to `~/.guard_history`, because it's [the default history file](https://github.com/guard/guard/blob/master/lib/guard/interactor.rb#L25). You can verify your history file directly within Guard:\n\n``` ruby\n[1] guard(main)> Pry.config.history.file\n=> \"~/.guard_history\"\n```\n\nGuard just passes that `:history_file` option from the `interactor` DSL method [directly to that Pry config](https://github.com/guard/guard/blob/master/lib/guard/interactor.rb#L90), as [described in the Pry wiki](https://github.com/pry/pry/wiki/Customization-and-configuration#wiki-Config_history).\n\nI don't know what happened in your case, please try to remove the configuration option from your `Guardfile`, remove the project local `~/.guard_history` and touch `~/.guard_history` in your home. If this doesn't work, then I'd file an Pry issue.\n I'm sorry, but I can't reproduce it. It just works on my machine. I also see no problem with the Pry history [implementation](https://github.com/pry/pry/blob/master/lib/pry/history.rb#L99-L108), it uses `File.expand_path`, so your home should be resolved properly:\n\n``` ruby\n[1] {Specs} guard(main)> File.expand_path(Pry.config.history.file)\n=> \"/Users/michi/.guard_history\"\n```\n\nDo you have some special Pry plugins installed or custom hooks in `~/.guardrc`? I'm asking because Guard does nothing special when [stopping the interactor](https://github.com/guard/guard/blob/master/lib/guard/interactor.rb#L237-L245), it just kills the Pry thread and restores the terminal settings.\n Yes, when I add `pry-coolline` I also get that behavior. So the issue is not with Guard itself, it's with `pry-coolline`. Please open a new issue there.\n  Yes, just place\n\n``` ruby\nGuard.options[:clear] = true\n```\n\ninto `~/.guardrc` and you're fine.\n  Thanks for the correction!\n  Thanks a lot.\n   Yeah, I know that I can file an issue and close it completely keyboard driven, but I have no clue how I did it.\n  This adds setting an initial plugin scope from the cli (in addition to the already existing group scope), shows the current scope in the interactor and let it change at runtime with the new `scope` (or `o` as shortcut).\n\nBut let's see it in action instead of this boring description:\n\n``` bash\n$ bundle exec guard help start \n  -g, [--group=Run only the passed groups]                                                                    \n  -P, [--plugin=Run only the passed plugins]  \n```\n\nYeah I know, but `-p` is already for polling.  So now you can pass a plugin to scope the actions to, like\n\n``` bash\n$ bundle exec guard -P ronn\n[1] {Ronn} guard(main)>\n```\n\nAs you can see, the current scope is visible within the mustaches `{ronn}`. This means that the `change`, `run_all` and `reload` actions are globally scoped to ronn and no other plugins are triggered:\n\n``` ruby\n[1] {Ronn} guard(main)> r\n15:54:53 - INFO - Reload ronn\n[2] {Ronn} guard(main)> \n```\n\nbut you can overwrite the global scope by providing a local scope:\n\n``` ruby\n[2] {Ronn} guard(main)> r rspec\n15:55:20 - INFO - Reload rspec\n[3] {Ronn} guard(main)>\n```\n\nTo change the scope, use the `scope` command or its shorthand `o`:\n\n``` ruby\n[3] {Ronn} guard(main)> o rspec\n[4] {Rspec} guard(main)>\n```\n\nTo clear the scope, just call it without parameter:\n\n``` ruby\n[4] {Rspec} guard(main)> o\n[5] guard(main)> \n```\n\nThe same is true for groups:\n\n``` bash\n$ bundle exec guard -g docs\n[1] {Docs} guard(main)> \n```\n\nThat's all. Happy scoping!\n  That's great! Thanks @rymai\n  Yes, looks fine for me.\n  That's a nice start!\n\nEach notifier module has its own options, which are [stored when the notification is added](https://github.com/rudicode/guard/blob/23aee4127807e32f9ac7823a1337644f3c888fac/lib/guard/notifier.rb#L156). So you can grab it from `self.notifications`:\n\n``` ruby\n# Turn notifications off.\n#\ndef turn_off\n  notifications.each do |notification|\n    notifier = get_notifier_module(notification[:name])\n    notifier.turn_off(notification[:options]) if notifier.respond_to?(:turn_off)\n  end\n  ENV['GUARD_NOTIFY'] = 'false'\nend\n```\n Each notifier module extends itself\n\n``` ruby\nmodule GNTP\n  extend self\nend\n```\n\nwhich is basically the same as opening the eigenclass\n\n``` ruby\nmodule GNTP\n  class << self\n  end\nend\n```\n\nYou do not need to to have a class variable, a simple instance variable like `@tmux_state` is fine.\n Can you also merge the upstream changes? Would be nice to have it also in the release at the end of the week.\n I've merged it and made [some refactoring](https://github.com/guard/guard/commit/9f0b57c523dd4141d8422b1c88e22dff7a83830e):\n\nThe biggest change was to inline the `save_tmux_state` and `restore_tmux_state` directly into its correlating on/off methods, but extracted the internal state handling into a separate method `reset_options_store`. I also removed accessors to the internal state, which was only used for accessing within the specs. The idea of BDD (testing in general) is not to rely on internal state and only describe the behavior (input/output) of the system from the outside. You can see this good on the rewriting of the specs (because of the removed internal accessors).\n\nThe turn off of the notifier was fine, I just added the missing spec and the execution order when Guard stops.\n\nAll the rest is adding missing specs, documentation and code style changes (also from previous merges of other pull request).\n\nThanks a lot for this pull request!\n  The notifier doesn't notify each implementation when Guard stops, so you need to add it. I'd extend [Notifier#turn_off](https://github.com/guard/guard/blob/master/lib/guard/notifier.rb#L114-L116) to loop through the current implementation and call an optional method, something like\n\n``` ruby\ndef turn_off\n  notifications.each do |notification|\n    notifier = get_notifier_module(notification[:name])\n    notifier.turn_off if notifier.respond_to?(:turn_off)\n  end\n\n  ENV['GUARD_NOTIFY'] = 'false'\nend\n```\n\nan then call the `#turn_off` method also when Guard [stops](https://github.com/guard/guard/blob/master/lib/guard.rb#L177). Thanks for having a look at it!\n Great! A heartily welcome to the Ruby community. If you need any kind of assistance or feedback, you can open a pull request even if it's not ready to merge, so we can have a look and start discussing.\n You need to add a call to your new `#turn_off` method from the [Guard.stop](https://github.com/guard/guard/blob/master/lib/guard.rb#L177) method.\n Yes, exactly.\n  It would be interesting to see how well it performs when you have a lot of gems in your project, but definitely an interesting idea.\n Great. It'd be a very nice improvement to Guard.\n I understood this issue in that way, that you want to have our opinion before starting to work on a pull request. All @guard/core-team members have a full-time job and also a lot of other projects to maintain, so we're quite busy. Since the current approach works very well for us and your suggested improvement is for a very specific situation for your own project, we'd love to have a pull request for it. If you need some assistance or feedback, please open the pull request early and we can continue the discussion there.\n :+1:\n  Yes, looks fine from my side.\n  It's an excellent pull request, thanks a lot @jfolkins !\n  Thanks!\n  Sounds good to me, @guard/core-team ok?\n  Listen 0.6.0 ready to support that.\n  nops no ideas... sorry\n  @burlesona have you a lot of files in the watched directory?\n Really weird, can you try to move them in another folder (maybe out of Dropbox) and try it again. Thanks!\n @kfalconer You need to upgrade Bundler (>= 1.2)\n Really nice catch! Well done!\n @burlesona yes please.\n  This is a follow up to the Pry pull request #327 and introduces a continuous Pry session, so no stop/start cycle of the interactor on a Guard action anymore. It also cleans up some legacy support code that isn't needed anymore.\n\nCurrent changes:\n- Remove interactor thread\n- Remove listen mutex\n- Remove tty store/restore\n\nKnown issues:\n- The prompt is not visible after a Guard action. We need to redraw the current line after a Guard action has been finished.\n- Using `binding.pry` starts another Pry instance. \n Thanks for the feedback. I've added it to the known issues and will have a look soon.\n :cry:\n  Thanks a lot for reporting. I disabled the loading of `~/.pryrc` for Guard, so the normals Pry configuration is completely separated from the Guard Pry configuration.\n  Hey, thanks for reporting. Just released 1.5.1 that fixes it.\n  I'd also prefer to have a continuous Pry session, but I wasn't able to stop Pry from reading from the input stream other than killing the thread it runs. I spent at least two days to work around this problem with different approaches, and I finally forced myself to stop working on it and move on, since I also have other work to do :P\n I started a new branch [pry/cleanup](https://github.com/guard/guard/tree/interactor/cleanup), which basically removes all the grown interactor support code like `tty` save and restore and also the start/stop of the interactor. It still works fine with a continuous Pry session, expect we lose the prompt after an action has been executed, so I guess most stuff isn't needed anymore with Pry. I'm going to work on this branch and see if I can improve the Pry experience.\n Just removed the interactor threading on the cleanup branch and some synchronization code, and I don't see the issue poping up anymore. Sure, the editor screen gets scrambled with the Guard output, but after redrawing the screen vim continues to work fine and Guard doesn't capture the input.\n\nI'm closing this, please continue to discuss Pry issues in issue #355.\n  See https://github.com/guard/guard-livereload/issues/52. (Please do not double post issues in the future, thanks.)\n  This groups the notifiers, so that the auto\ndetection features only enables one notifier per group.\n\nThis speeds up the auto detection a little bit and doesn't\nactivate for example two different Growl libraries.\n  Thanks for the pull request. I've changed it to support a different foreground color per message type, as it's the same with the foreground color. Also the missing specs have been added.\n I like to release a new Guard version this week, I just need some feedback on #327, as it seems to work fine and is ready to merge.\n  Please follow the [guidelines for contributing](https://github.com/guard/guard/blob/master/CONTRIBUTING.md) as you've been asked when you've filed the issue. Thanks!\n  This pull request makes use of Lumberjack as a logger, and adds a corresponding `logger` DSL method, so you can customize the logging behavior to your needs.\n\nFrom the README:\n### logger\n\nThe `logger` method allows you to customize the Guard log output to your needs by specifying one or more options like:\n\n``` ruby\nlogger :level       => :warn,\n       :template    => '[:severity - :time - :progname] :message',\n       :time_format => 'at %I:%M%p',\n       :only        => [:rspec, :jasmine, 'coffeescript'],\n       :except      => :jammit\n```\n\nLog `:level` option must be either `:debug`, `:info`, `:warn` or `:error`. If Guard is started in debug mode, the log level will be automatically set to `:debug`.\n\nThe `:template` option is a string which can have one or more of the following placeholders: `:time`, `:severity`, `:progname`, `:pid`, `:unit_of_work_id` and `:message`. A unit of work is assigned for each action Guard performs on multiple Guard plugin.\n\nThe `:time_format` option directives are the same as Time#strftime or can be `:milliseconds`\n\nThe `:only` and `:except` are either a string or a symbol, or an array of strings or symbols that matches the name of\nthe Guard plugin name that sends the log message. They cannot be specified at the same time.\n This addresses issue #277\n Nice idea! More Rails like and simpler. I'll change that...\n  Another great inspiration. I need some time to add plymouth to Guard and play with it when developing, before I'm able to give some feedback. Thanks a lot.\n  Great! Thanks for the pull request.\n  Great work. Thanks a lot!\n  Nice idea. Can you submit a pull request?\n Thanks for the pull request.\n  Everything is great! Thanks a lot.\n  You need to turn off the interactor to make it work. Add the following to your `Guardfile`\n\n``` Ruby\ninteractor :off\n```\n\nand it works flawless.\n  Thanks lot for the improvement.\n  I know but currently don't use tmux, so we have to rely on the experience of @matthijsgroen.\n Thanks a lot for your detailed information. I've added it straight to the README.\n This has been already published with 1.4.1\n You're right, somehow the \"release\" wasn't released at all. I reverted the 1.4.1 release commit and will release a new version today or tomorrow.\n  Please do not use the issue tracker for questions. We kindly asked for it in the [README](https://github.com/guard/guard#file-an-issue) and also the [contributing guidelines](https://github.com/guard/guard/blob/master/CONTRIBUTING.md) when you've openend the issue.\n\nYou can search on [GitHub](https://github.com/search) and also on [RubyGems.org](https://rubygems.org/) for Guard plugins. This has been also clearly described in the [README](https://github.com/guard/guard#add-guard-plugins).\n\nIf you'd do that, you certainly found:\n\nhttps://github.com/hawx/guard-sass\nhttps://github.com/oliamb/guard-compass\n  Oh how I'm happy being the Notifier guy and not the Windows guy :wink2: Looks fine, will push the merge soon.\n  We definitely need to add (again) a section about the file listener dependencies, but I'm not in favor of adding the needed dependency to the `Gemfile`, mainly because a) I never encountered a gem that does this and b) I want the users read the README and have an understanding of the setup, rather that trying to make Guard smart and customize the users environment. The real source of the problem relies in the fact that RubyGems doesn't support real plattform dependent dependencies and Bundler doesn't have a `Gemfile.lock` per runtime and OS.\n  Great! Thanks a lot.\n  This is the initial integration of Pry as replacement of the Guard interactor (`:simple`, `:readline` and `:coolline` are all gone). Pry itself makes use of rb-readline and coolline whenever they are available, so support for these gems is still available.\n\nGuard provides its own set of Pry commands that can be used to control Guard in the same way as before. However `Enter` doesn't trigger the `run_all` action anymore, instead use the `all` command.\n\nThe biggest advantage of using Pry is that it comes with a powerful plugin system that allows you to customize and extend the console. This will allow Guard users to release gems that provide extended functionality to Guard, as it's needed by for example by #321 and #305.\n\nPry will evaluate `~/.guardrc` in addition to the standard `~/.pryrc` and `./.pryrc` before the session starts, which allows the customization of prompts, commands, aliases, etc.\n\nI didn't provide the short hand commands `c`, `s`, `p`, etc. by intention to avoid variable and method collisions (remember, we have now a full featured Ruby REPL with shell access), because it's so easy to customize it. Just add\n\n```\nPry.config.commands.alias_command 'n', 'notification'\n```\n\nto `~/.guardrc` and you're fine.\n\nThere's still some work to do like missing commands specs and a better Pry session restore, but it works and I'd like to have people play with it and give feedback.\n\nI recommend to have a look at the [Pry Wiki](https://github.com/pry/pry/wiki) to see what's possible.\n So all specs are now in place and the pull request should be fine to merge. However I'd like to have some more feedback how it works for you guys.\n\nFor me it works mostly, but I have seldom hangs of the interactor, so it won't read any more input. Do other people also see this behavior? I have spent some hours but didn't discover why this happens sometimes...\n Yes, we can't merge until the nasty bug is resolved. I've already spent some hours to find the cause for that bug, but without success. I'll keep the branch in sync, until I (or someone else) has time to dig into it an fix it. I'm on holiday for the next two weeks, so I won't be able to put any work into it before the 15th of October.\n OMG, you're a genius @rking You're right! It doesn't hang, just no echo. I restored the old terminal helper code and I haven't seen the problem until then. @guard/core-team Can you give it a try? \n That would be great @rymai. Since I'm back from holiday, my work is just making phone calls, visiting customers and write emails :cry: So sadly no Guard running all day long.\n @rymai Did you had the chance to run the pry interactor for some time last week?\n Great! I will merge today all pull request you're fine with.\n  I personally don't need a subtitle in the notification, because I don't even read the text in it. I just notice red/green and depending of the context of my current work, I immediately take some action or go and read the details in the console. I'm not against it, but I have no personal use and I'm not sure how others are using the notifications and thus if it's worth to spend time on it (there may be better features to implement if you have some time to contribute to Guard).\n\nIf you want to add subtitle support, the API must be backward compatible, because there are a way to many Guard plugins out there and I guess most plugins will not be updated to make use of the subtitle (I remember the low acceptance of the improved Guard plugin API).\n  No description given.\n  Yep, code looks fine and I merged it locally to use it today. I've planned to do some work on the Guard interactor tomorrow evening, and I'll merge and release then.\n Thanks a lot @mattgreen for the pull request!\n  This has nothing to to with Guard, the problem is (as the error message says), that with Ruby 1.8.7 the `Find.find` method must take a block. Only newer Rubies returns an enumerator:\n\n``` Bash\n$ rvm use ruby-1.9.3-p194\n$ pry \n[1] pry(main)> require 'find'\n=> true\n[2] pry(main)> Find.find(Dir.pwd)\n=> #<Enumerator: ...>\n[3] pry(main)> ^D\n\n$ rvm use ruby-1.8.7-p358\n$ pry\n[1] pry(main)> require 'find'\n=> true\n[2] pry(main)> Find.find(Dir.pwd)\nLocalJumpError: no block given\nfrom /Users/michi/.rvm/rubies/ruby-1.8.7-p358/lib/ruby/1.8/find.rb:39:in `find'\n[3] pry(main)> ^D\n```\n\nSo either use to a newer Ruby version or rewrite the Guard condition.\n You're welcome. Solving little puzzles like this is relaxing and it makes me a better Ruby programmer with every issue :P\n  There are some very interesting ideas that could make developers life much easier.\n\nAll the success/failed logic is within each Guard plugin and not Guard itself, so test related Guard plugins like guard-rspec, guard-test, guard-cucumber and guard-jasmine handles the BDD cycle on their own. You could add some [hooks](https://github.com/guard/guard/wiki/Hooks-and-callbacks) to these Guard plugins, so you can do some stuff when something interesting happens. Hooks can also [pass arguments](http://rubydoc.info/github/guard/guard/master/Guard/Hook/InstanceMethods#hook-instance_method), so you can easily add hooks for `failed`, `success`, `fixed`, etc to the Guard plugins of your choice.\n\nI think it's a good idea to not add specific commands to the interactor, but extend it in a way that custom commands can be registered, something like:\n\n``` Ruby\ninteractor :coolline do\n  command :refactor do\n    `${VISUAL:-${EDITOR:-vim}} $(git status --porcelain | cut -b4-) \"$@\"`\n  end\nend\n```\n\nCustom commands and detailed hooks would allow a customizable workflow. I can take care of the interactor enhancement, since I anyway had plans for such a feature.\n\nIt should be possible to develop a Guard plugin, which adds some predefined interactors and hooks to other plugins, but there is certainly room for improvement to provide some better abstractions for these kind of plugins. \n You could make the pull requests with the hooks to each Guard plugin, I'll add the interactor commands.\n Pry has landed in 1.5.0, which enables you to customize the Guard interactions to your needs.\n  Interesting I got the same problem with `guard-livereload` \n Guard 1.5.0 has now integrated Pry instead of directly using Readline and/or Coolline (Pry still makes use of Coolline when installed). Can anyone with the problem see if it still exists with guard 1.5.0 or has it gone?\n Great. So the console output from development mode is not corrupted anymore.\n  - Avoid double output clear during the same run_on_changes call\n  Great, I'm in love :heart: !\n  Yeah, it's a known issue.\nWe could memorize if the screen has been already clean per run, and skip a second screen clean.\n Yeah good idea, I'll try to have a look at that this week-end. Thanks!\n Committed on this [PR](https://github.com/guard/guard/pull/318) (#318) could you give it a try please.\n Thanks, Guard 1.3.2 has been released with this fix!\n  It would need a change on each guard to support a `run_with_arguments` method, wouldn't be easier to just save/edit the files that you want to run? or simply launch the command in another terminal?\n Yep sure, I use rspec filters all the time :)\n  Thanks very much, that's awesome! Is there any chance to have the image in the notification soon? :)\n Thanks @foxycoder, @netzpirat I'll let you merge this since the Notifier is your \"baby\"! ;)\n What about creating a guard-ncnotifier gem with the Guard icon (maybe 3 with different icon apps, success (red), failure (green), normal) ?\n  Thanks!\n  I think `ignore` is useful for ignoring specific folders (e.g. `tmp`, `logs` etc...) while `filter` is useful to narrow down the files to watch, usually by giving extension patterns (e.g. `\\.rb$`).\n\nNote that the two methods are complementary. For instance you could `filter /\\.rb$/` files and `ignore /lib\\/foo/` in which you could have `.rb` files.\n Hum, most of the time that's indeed the use case in practice, but I think you _could_ `ignore` files and `filter` directories. @Maher4Ever do you confirm that?\n Thanks @Maher4Ever! Should we update the Listen's README with these clarifications?\n Yep I think you got it right!\n  Hi,\n\nThanks for your interest in Guard, you can probably learn more with [this nice article about Guard](http://www.intridea.com/blog/2011/8/25/hire-a-guard-for-your-project), or by taking a look a [this Guardfile](https://github.com/thibaudgg/thibaudgg.github.com).\n\nOtherwise, please use either Google, the [Google group](http://groups.google.com/group/guard-dev) or on `#guard` (irc.freenode.net) for such question since this issue tracker is meant to ... track issues! :)\n  I personally think this is overkill. If you're using RSpec the [filters feature](https://www.relishapp.com/rspec/rspec-core/v/2-11/docs/filtering/inclusion-filters) does exactly what you want. From the RSpec doc:\n\n> You can constrain which examples are run by declaring an inclusion filter. The most common use case is to focus on a subset of examples as you're focused on a particular problem.\n I see. Let's take a concrete example and let me know if I'm mistaken.\n\nYou're editing `app/helpers/application_helper.rb` but the test that you want to run is in `spec/requests/foo_spec.rb`:\n1. Edit or save `spec/requests/foo_spec.rb` so that Guard stores it as latest changed;\n2. Enter `f`/`focus` + `<enter>` to start the \"focus\" mode;\n3. Edit `app/helpers/application_helper.rb` (this triggers no tests);\n4. Run the \"focused\" file `spec/requests/foo_spec.rb` by pressing `<enter>`;\n5. Repeat 3. & 4. as needed;\n6. Once you're happy with the implementation, stop the \"focus\" mode by entering  `f`/`focus` + `<enter>`.\n\nIf that's right, I think it'd be faster to save `spec/requests/foo_spec.rb` to run it, than switch to the terminal and press `<enter>` (in addition to start & stop the \"focus\" mode). This is my opinion, I'm still not really convinced by this \"focus\" mode. :)\n Ok I see, I guess that makes sense then! @netzpirat, @Maher4Ever, should we wait for @thibaudgg to see what he has to say about this?\n I agree with @netzpirat, we just want to avoid developing/merging a feature for only one person, and more importantly we need to fully understand the use case and challenge it with solutions that could currently have the same results.\n\nBy the way @prusswan, if you want to focus on several files, you can set the `:focus` metadata on the top `describe` of each file and it'll focus the entire files (it's not only for specific tests as you said).\n\nPersonally I'm still not convinced by this feature and as @Maher4Ever said:\n\n> Also, please remember that Guard is used in multiple contexts. The usecases for this feature seem to be limited. If you still think that this feature is necessarily, I would appreciate it if you can give an example in which this feature is better than just filtering a spec.\n\nLast but not least, as @netzpirat said, please don't take it personally @prusswan, we love everyone who uses Guard! :)\n Guard 1.5.0 has now Pry integrated, which allows you to create new commands for your need which can control Guard.\n  Thanks! However, this doesn't seem to fix #231! :(\n What a funny coincidence @netzpirat! :P\n\nGood luck with ruby_gntp debugging, that could be that indeed! :)\n  The given example works fine on OS X, so I guess this is a Listen inotify adapter issue.\n\nBefore Listen was created, the adapter [watched](https://github.com/guard/guard/blob/v0.10.0/lib/guard/listeners/linux.rb#L58) for `:recursive`, `:attrib`, `:create`, `:move_self` and `:close_write` events. We came to this event list by analyzing several command and editor write behavior reported in various issues, which is documented in the wiki under [Analysis of inotify events for different editors](https://github.com/guard/guard/wiki/Analysis-of-inotify-events-for-different-editors). Append to a file `echo 'blah' >> file` is missing, perhaps someone on Linux can add this info to the wiki page.\n\nListen actually [watches](https://github.com/guard/listen/blob/master/lib/listen/adapters/linux.rb#L13) for `:recursive`, `:attrib`, `:close`, `:modify`, `:move`, `:create`, `:delete`, `:delete_self` and `:move_self`. Since I wasn't part of the Listen dev team, I cannot say what the reason was to switch the event list.\n I had the double prompt `> >` issue very often before 1.2.0, but never had the double run issue. I guess these two issues are not related. With 1.2.0 I worked a full day with the readline interactor and haven't seen the double prompt once.\nI have switched to the coolline interactor and it feels more robust than the readline interactor. If you're on Ruby 1.9.3, then I recommend to switch to coolline. Coolline uses `>>` as prompt, so one can notice which interactor type is running.\n @prusswan Yep, guard-rspec \u2013as many other Guard plugins\u2013 [cleans the modified paths](https://github.com/guard/guard-rspec/blob/master/lib/guard/rspec.rb#L47), [see here for the actual cleaning code](https://github.com/guard/guard-rspec/blob/master/lib/guard/rspec/inspector.rb).\n @rschmitty can you please try to launch the Listen gem specs suite on your system (Windows) to see if it's all green.\n  Good point. I added a link to the wiki and some example topics of what can be found there to the introduction section.\n  I don't see that guard-shell has a `:cli` option, so this config is being ignored.\n\nThe problem is that you're using Kernel#` to execute the command. This _captures_ STDOUT:\n\n``` Ruby\n\u00bb pry\n[1] pry(main)> `git status`\n=> \"# On branch master\\n#\\n# Initial commit\\n#\\n# Untracked files:\\n#   (use \\\"git add <file>...\\\" to include in what will be committed)\\n#\\n#\\tGemfile\\n#\\tGemfile.lock\\n#\\tGuardfile\\n#\\thello\\n#\\ttest.rb\\nnothing added to commit but untracked files present (use \\\"git add\\\" to track)\\n\"\n```\n\nYou have to execute the command, so that STDOUT is outputted and not captured, for example by using `Kernel#system`:\n\n``` Ruby\n[2] pry(main)> system('git status')\n# On branch master\n#\n# Initial commit\n#\n# Untracked files:\n#   (use \"git add <file>...\" to include in what will be committed)\n#\n#   Gemfile\n#   Gemfile.lock\n#   Guardfile\n#   hello\n#   test.rb\nnothing added to commit but untracked files present (use \"git add\" to track)\n=> true\n```\n\nThis outputs the colored information directly, returning `true` when the status code is 0. You can return an empty string from your watcher block to skip this output:\n\n``` Ruby\nguard :shell do\n  watch (/.*/) { system('git status'); \"\" }\n  watch (/\\.git\\/refs\\/.*/) { system('git lola'); \"\" }\nend\n```\n  This adds initial [Coolline](https://github.com/Mon-Ouie/coolline) support for a Ruby 1.9.3 io/console interactor.\n\nIn addition the `show` command has been added to the interactor (Closes #288). \n\nThis may help on issues #292, #285, #279, please give it a try.\n\nI also like to add a `change` action to rerun last specs failed, by triggering an empty file change (See #284). Also a `scope` command as described in [Rspec #113](https://github.com/guard/guard-rspec/issues/113) would be nice to have.\n Well spotted @rymai, thanks! \n So I think everything is in place now, I just wan't to have some feedback from some people who actually are _using_ the new interactor before the merge and release.\n Yep, this has happend also to me. I'll try to find out what happens next week.\n There were some unnecessary threads created and killed on almost all Guard tasks, which I have addressed now. The coolline adapter feels snappier and I haven't seen any interactor error in the last few hours.\n\nI'm going to use this version for a few days to see how it works when using it in my daily work, and will merge it at the end of the week if all went fine and I got also some positive feedback for you guys.\n Oh I forgot that I configured RSpec to have a random spec order. Currently the same specs have failed once and passed once without any change, so we have some bad specs that depends on state of a previous spec.\n  What Ruby are you using (MRI, JRuby, Rubinius) and which version? Have you explicit select a certain interactor (with `interactor` in your Guardfile)?\n Closing this because of lack of response. Please reopen when the issue still exists.\n  Since your issue isn't very detailed, I have to guess what you're talking about, but I assume you're talking about the Guard v1.0.3 to v1.1.0 transition.\n\nThere were no major changes in the public API, the new Guard plugin interface is fully backward compatible and the deprecated API show a message with a link to the [upgrade guide](https://github.com/guard/guard/wiki/Upgrade-guide-for-existing-guards-to-Guard-v1.1). We didn't remove support for any previous Guard plugins, all Guard plugin will continue to work.\n\nThe [Semantic Versioning](http://semver.org/) describes the minor version as follows:\n\n> Minor version Y (x.Y.z | x > 0) MUST be incremented if new, backwards compatible functionality is introduced to the public API. It MUST be incremented if any public API functionality is marked as deprecated. It MAY be incremented if substantial new functionality or improvements are introduced within the private code. It MAY include patch level changes. Patch version MUST be reset to 0 when minor version is incremented.\n\nAccording to semantic versioning, we **must** increase the minor version. In addition, semantic versioning describes a major version as follows:\n\n> Major version X (X.y.z | X > 0) MUST be incremented if any backwards incompatible changes are introduced to the public API. It MAY include minor and patch level changes. Patch and minor version MUST be reset to 0 when major version is incremented.\n\nSo we **could** have increased the major version, but it wasn't necessary.\n\nThere was a lot of effort put into extracting [Listen](https://github.com/guard/listen) from Guard core, so that other OSS  projects (like Compass) can easily make use of the excellent cross plattform file notification. For a normal Guard user, the Listen gem has some really nifty new features that makes the use of Guard even more simpler. So this is anything but sad.\n\nThibaud [posted](https://groups.google.com/forum/?fromgroups#!searchin/guard-dev/listen/guard-dev/dfkwTAsazdw/Wj1VbRu1uHwJ) the link to the [pull request](https://github.com/guard/guard/issues/245) for further discussion to the [Guard Developer](https://groups.google.com/forum/?fromgroups#!forum/guard-dev) mailing list, and we had [one alpha and one beta](https://rubygems.org/gems/guard) release to give the developer a chance to test the new release. \n\nYour voice was missing then when you had a chance to actively participate, but you've chosen to blame us for your decision.  This is not fair. I believe we have a transparent and open development process, open to anyone who's interested to participate.\n  Closing this because of lack of response. Please reopen when the issue still exists.\n  Pressing tab in the interactor (with readline) shows all possible commands:\n\n``` ruby\n> \nbackend       exit          help          livereload    pause         rspec         \ncoffeescript  frontend      jasmine       notification  reload \n```\n\nSure, there are commands (exit, help, pause, reload), plugins (livereload, rspec, coffeescript, jasmine)  and groups (frontend, backend) mixed. For my needs this is perfectly sufficient. But adding a show command should be not that hard, since every information needed is already in the interactor.\n Just played with coolline and its great so far. Coolline doesn't show all commands when there isn't at least a character, so I'll add a show command to the interactor and improve the completion abilities.\n Guard 1.2.0 has been released, which provides a new `show` command.\n  The code for the file listener is in [Listen](https://github.com/guard/listen), but I'm not familiar with that code base to give you a hint.\n  I just switched a project to the simple interactor and I it works mostly fine. I tested it for about 20 times and only once it had the failure described. Since you said that the readline interactor just works fine for you, I must admit that I have no clue where to start on this issue, because most of the behavior is shared in a parent class and the [simple interactor](https://github.com/guard/guard/blob/master/lib/guard/interactors/simple.rb) is sooo small, I can't imagine that there's a problem with that code.\n\nI have the same OS X, Ruby and Guard versions, only my terminal 2.2.3 (303.2). Have you tried it in iTerm 2 also?\n I noticed that the [readline bug](http://bugs.ruby-lang.org/issues/5539) has been fixed in Ruby 1.9.3-p194. Can you try to use `interactor :readline` to see if it works properly? If so, I'll remove the warning for this Ruby version and add it to the auto-detection.\n Thanks for the feedback. So all the interactors are a bit unreliable currently, except the readline adapter with `rb-readline`, and it doesn't seem to be a quick fix. Since you have a workaround I put this issue aside for this week, since I have to catch up with work left behind from my EuRuKo trip. I anyway want to work on the interactor modules, since I really want to give [coolline](https://github.com/Mon-Ouie/coolline) a try.\n Oh wow, it's getting weird...\n Guard 1.2.0 has been released with some new features:\n- Better thread handling for the interactor, which results in more robust interactors (simple and readline)\n- A new Ruby 1.9.3 only interactor that is based on [Coolline](https://github.com/Mon-Ouie/coolline), which in turn is based on the new `io/console` library.\n- Some small improvements for the Readline interactor (e.g. erase lines before a command is executed).\n\nI've worked the last three days with each of the provided interactors (simple, readline and coolline) and I've never seen that the interactor failed.\n I'm not aware of the changes in the different patch levels. Did you add `gem 'coolline'` to your `Gemfile`? If you're using the coolline interactor, then the prompt would change to `>>` instead of just `>` of the Readline interactor.\n Ok, then somehow the auto-detection fails and you're using the `:simple` interactor, which has no prompt at all. Can you try to force another interactor by adding\n\n``` Ruby\ninteractor :coolline\n```\n\nto your `Guardfile`. You can also force the `:readline` interactor in the same way if you want to give it a try.\n You're welcome. Can you do me a favor by running and reporting the results of the following commands?\n\n``` Ruby\n$ pry\n[1] pry(main)> require 'guard'\n=> true\n[2] pry(main)> Guard::CoollineInteractor.available?\n=> true\n[3] pry(main)> RbConfig::CONFIG['RUBY_PROGRAM_VERSION']\n=> \"1.9.3\"\n```\n\nPerhaps Ruby 1.9.3-p0 is reporting another `RUBY_PROGRAM_VERSION` than Ruby 1.9.3-p194, so the auto-detection fails. \n Thanks, the reported Ruby version is the same, so this should not be the problem. The reason why you get an error is that I cheated with the pry log and removed the following line when searching for the interactor class:\n\n``` Ruby\n[2] pry(main)> Guard::Interactor\n=> Guard::Interactor\n```\n\nwhich was adding an auto load for `Guard::CoollineInteractor`. Since you've the right Ruby version, you should have the same output for:\n\n``` Ruby\n$ pry\n[1] pry(main)> require 'guard/interactor'\n=> true\n[2] pry(main)> Guard::CoollineInteractor.available?\n=> true\n```\n Strange, perhaps it takes an old, global Guard gem, because pry is run without bundle exec? I have the latest Guard in the Gemfile and also in the global gems.\n Yes, `gem update --system` updates RubyGems itself and you already have the latest version installed. Managing gems seems simple, but it can result to subtle runtime differences if you're not careful:\n\nWhen I'm in my home directory, I have no `Gemfile` since it's not a project managed with Bundler, thus it loads the global (system) gems when you start for example `pry`. You have to update the gems with `gem update`.\n\nWhen you're in a project with a `Gemfile`, then you should add the needed gems to it and prefix each command with `bundle exec` like `cd project;bundle exec pry`. You have to update the gems with `bundle update`.\n\nSo you should have `gem 'coolline'` in the `Gemfile` of each project with Guard and run Guard always with `bundle exec`.\n  Concerning your `run last failed` shortcut: This is implemented within each plugin, but Guard could just trigger an empty change. I'm just wondering about your workflow to understand why you'd like to have it: When a spec fails, I normally modify either the spec or the implementation to fix it, which in turn would trigger a change. So why is it useful? (Don't get me wrong, it'd be a small change and I'm not against implementing it, I'm just wondering.)\n Thanks for the clarification. If you like to have a shortcut to trigger the last failed specs, just open a new issue and I'll add it then.\n  Good point, it's a mess. What do you think about renaming `--verbose` in `--debug` (`-d`).\n @guard/core-team ok for you too? I think we can change that in the 1.1 release!\n  @henare can you please update the spec, and maybe add a new one. Thanks!\n Ok it fails, but it isn't your fault :) Thanks!\n Certainly at the end of this week, alongs 1.1 release.\n  Have you add:\n\n``` ruby\nplatform :ruby do\n  gem 'rb-readline'\nend\n```\n\nin your Gemfile?\n @netzpirat great news!\n @cdlm @ryansch I hope that coolline will solved that, in the meantime  `guard --no-interactions` seems the only solution sadly.\n I also get that sometimes with the Terminal.app (2.2.3) so it could be a readline issue.\n Sadly I wasn't able to add the coolline interactor at the hackday, but if you're on Ruby 1.9.3, then the [readline bug](http://bugs.ruby-lang.org/issues/5539) has been fixed and you could give it a try by forcing the readline adapter without having `rb-readline` installed, just add `interactor :readline` to your Gemfile. If that works, I'll remove the warning and change the auto detection.\n Guard 1.2.0 has been released with some interactor improvements and a new [Coolline](https://github.com/Mon-Ouie/coolline) based interactor (for Ruby 1.9.3 only).\n\nYou can try it by upgrading Guard and adding\n\n``` Ruby\ngem 'coolline'\n```\n\ninstead of `rb-readline` to your `Gemfile`.\n Looks like nobody is interested in this anymore, no response for a week now. I close the issue, please re-open if you are interested in solving this. \n  Like Github [explain it](https://github.com/blog/1124-how-we-use-pull-requests-to-build-github), I think it's a good idea to open a pull request even before having finished the implementation so we have a nice place to discuss what is done and what it left to do :).\n\nSo here the stuff to do before merging:\n\nDocumentation:\n- Adding `throw` stuff in the [upgrade guide wiki page](https://github.com/guard/guard/wiki/Upgrade-guide-for-existing-guards-to-Guard-v1.1).\n- ~~Upgrading the README (Replace old listeners info by Listen)~~\n\nCode:\n- ~~[cli] Add latency option~~\n- ~~[dsl] Update `ignore_paths` path method.~~\n- ~~[dsl] Add `filters` method~~\n- ~~Improve `lib/guard.rb` specs~~\n\nAre you thinking of anything else?\n\nOnce the \"Code\" todos is done, I propose that we all use it for real on your work project to detect un-tested bugs. After that we could release a `1.1.0.pre` version of Guard to allow every guards maintainers to upgrade before the official `1.1` release.\n\nSounds good to you?\n @Maher4Ever, you right +1 for an alpha release first.\n Nice, little update: `ignore_paths` method will be deprecated and replaced by `ignore` and `filter` more powerful Listen methods.\n @Maher4Ever I just want to handle a last little issue before, but releasing the alpha version this week would be great!\n I just released the alpha version. I propose that we test it internally and advertise the beta version only to the guard community. Ok for you?\n  That's sound like a good idea. What kind of level would you propose? \n Warning/deprecation are a little different, I think we could order those like that:\n- info\n- debug\n- warning\n- deprecation\n- error\n\nI agree that having guard-wide option available would be nice, it could maybe be done with [`caller`](http://grosser.it/2009/07/01/getting-the-caller-method-in-ruby/) ruby method to known from which Guard the UI method has been called.\n\nSo we would have a Guard cli option:\n\n`guard --log_level info` or `guard -l info`\n\nAnd a Guard dsl option:\n\n``` ruby\nguard 'rspec', : log_level => 'info' do\n  # ...\nend\n```\n\nIf it's ok with you, can you submit a pull request? It would be awesome, thanks!\n Nah, :thumbsdown: I had some bad experience with log4r on a big project (I mean I love the concept and liked log4j a lot). \n\nDevelopment stopped on RubyForge on the [2010-07-07](http://log4r.rubyforge.org/git?p=log4r.git;a=summary) and some fixes were made on its new home at [GitHub](https://github.com/colbygk/log4r/commits/master) 5 months ago, but it looks unmaintained now.\n\nI don't remember what the problem was exactly, but I think I had some threading issues with the diagnostics contexts. It may work fine when we don't use the NDC and MDC features.\n Btw. I use now [Lumberjack](https://github.com/bdurand/lumberjack), which works fine.\n Release with 1.5.0. Have a look at the `logger` DSL method to customize the UI logger.\n  guard-spork [directly kill](https://github.com/guard/guard-spork/blob/master/lib/guard/spork/spork_instance.rb#L35) Spork instance, so it's maybe why the at_exit isn't properly executed. But anyway, this bug is related to guard-spork and not Guard. Please open a issue [here](https://github.com/guard/guard-spork/issues).\n Thanks! I'm the maintainer of guard-spork too ;) \nI've release guard-spork 0.7.0 with Foreman support, it could be maybe solve your issue.\nCreate guard-solr could also be another solution!\n  Oops it breaks the specs badly :( http://travis-ci.org/#!/guard/guard/builds/1072250\n Thanks!\n  Good for me too, thanks!\n\n@mcmire just one point, you can use `bundle exec guard` even if you want to run test without Bundler by setting `:bundler => false` on guard-test/rspec.\n  Closing this, since Guard 1.1.0 is released with Listen integration.\n  Sounds good to me, we can do that in Guard 1.1 (alongs Listen integration)\n Since @Maher4Ever is very, very busy lately with other stuff and nobody else want to take care of it, I'm closing this. If someone is still interested in putting some work into it, please open a pull request :P\n  Thanks!\n\nCould you please also reflect this update in the README under the \"Guardfile DSL -> notification\" section?\n I think that's enough, what do you think @netzpirat ?\n Thanks! Added to [CHANGELOG](https://github.com/guard/guard/commit/e75f8028b2aceaa104b64e3309a4d5273bca5cf1) as well!\n  Please can you try if it works with the [Listen gem](https://github.com/guard/listen). Thanks!\n Guard 1.1.0 has been released with Listen integration, please give it a try and re-open the issue when you still have an issue with it.\n Since Guard 1.1.0 there's now a `latency` CLI option that has influence on polling adapter. Can you play with this option to see if you can make it work? \n I didn't give a recommendation on purpose, because I didn't implement anything in the _much_ improved [Listen](https://github.com/guard/listen) gem and have thus almost no knowledge in this area. Perhaps @thibaudgg or @Maher4Ever can join to help? \n\nFrom my understanding the polling listener compares the file mtime and also compares the content checksum on subsequent modifications. The latency is the time in between the polling adapter actions, in which it tries to find the modified files. According to this [Virtualbox Ticket](https://www.virtualbox.org/ticket/6473), the copied file now has the timestamp of the host os when it was copied into the shared folder and not the time when it was copied into  the vm (do I understand this correctly?) So if the latency of the os->vm copy process is bigger the Guard's latency, the the file change will not be catched? In any case I would now try to decrease the Guard latency.\n\nCan you please analyse your inotify events, as [described in the wiki](https://github.com/guard/guard/wiki/Analysis-of-inotify-events-for-different-editors) and add your finding to it wiki. Perhaps this helps to understand the inotify issue.\n @rchampourlier interesting and on a local file editing and saving with SublimeText/TextMate only triggers one time with polling?\n Ok, it could be an error in the polling adapter of Listen. Could you please paste the debug output of Guard when running with `bundle exec guard -d -p -l 10` please?\n\nAlso note that we are working to improve monitoring of remote filesystems events:  guard/listen#57\n @Maher4Ever do you have any thoughts on that one?\n  @steakknife could you explain more in details the \"unpredictable results\"?\n\nEDIT: As far as I can tell \u2013using the `guard@guard/master`\u2013 sending `kill -USR1 pid` pauses Guard and sending `kill -USR2 pid` un-pauses Guard, as expected.\n Yeah, why not moving the handlers registration [here](https://github.com/guard/guard/blob/master/lib/guard.rb#L100) with a check to be sure `@listener` is instanciated (but maybe it's not even necessary)?\n Don't be rude man! We did what you wanted and you're still not happy? Discussion is part of collaboration, don't take it that way! You could at least say \"Thanks\"! :)\n Man, what is your drug seriously? :bear:\n\nI can't believe you dare telling us to \"be nice\".\n\nIf you really want to collaborate to Guard, you'll have to (at least):\n- be polite;\n- be thankful (you never said \"thanks\", we all did at least once);\n- accept that sometimes your code is not perfect;\n- not be always ironic otherwise no one will ever trust you.\n\nWhy don't you simply say \"I'm really sorry guys, there were some misunderstanding but now everything is alright, thanks very much for including my contribution into Guard.\" and stop playing the victim that has nothing to say but \"Be nice\" when you're not nice yourself.\n  Very good catch!!\n\nThanks very much for clarifying all that! :)\n And you're in the [CHANGELOG](https://github.com/guard/guard/blob/master/CHANGELOG.md) now! :clap:\n  Awesome @netzpirat! :)\n  Done!\n  Good point!\n\nPull-request very welcome! :)\n  @steakknife If you'd known @netzpirat personally, you wouldn't have answered him like that.\n\nPlease talk to him with the respect he deserves.\n\nThanks in advance.\n  Awesome, great thanks!\n  Yep, @netzpirat is right, and the issue is more likely to come from your `watch` blocks than from the fact that Guard is watching the Guardfile's directory.\n  Now that [Listen](https://github.com/guard/listen) seems ready to be used, it's time to integrate it inside Guard, yeah!\n\nDoing so will engender some important change in Guard and I want to get your feedback about them. Listen gem will give us, modified, added and removed file paths, right now Guard only has modified and added files (given together, via `run_on_change`) and removed/moved file paths (via `run_on_deletion`) with the `-A/--watch-all-modifications` option (but there's an issue #212 with the implementation). \n\nI propose:\n- `-A/--watch-all-modifications` option should be removed as Listen gem will always watch all changes.\n- `run_on_change` & `run_on_deletion` should be deprecated and replaced by `run_on_addition`, `run_on_modification` and `run_on_removals` (more about that below).\n- `-I/--no-vendor` option could be removed as Listen gem handle that.\n- `ext` & `lib/vendor` path could be removed, obviously.\n\nI'm aware that deprecating `run_on_change` & `run_on_deletion` will warns on all guards but it will really be easy to upgrade (one or two methods to rename) for everyone and I think the whole guards ecosystem will benefice of that. We could just show a deprecation warning message for each deprecated guards when launching Guard with something like:\n\n`DEPRECATION WARNING [Guard::XXX]: run_on_change is deprecated and will be removed in future releases, is it really easy to upgrade, please read \"wiki-page-link\"`\n\nWhat do you think of that, do you see other alternative?\n Awesome guys!\n Yeah that's already the case, because guard will inherits from [this implementation](https://github.com/guard/guard/blob/listen/lib/guard/guard.rb#L109-147).\n +1 for @rymai explanation. \n@Maher4Ever the lock is to block new run_on_changes call (if I remember well).\n\nPS: Thanks to work on runner specs!\n Nice progression! We still need to work on deprecation warnings and the wiki page with info about how to upgrade existing guards.\n @Maher4Ever nice work! What do you thinks about adding a link to a wiki page with more explanation about how to upgrade (with code examples) in the deprecation warnings? I think we really need to help guards creators to upgrade to Guard 1.1 quickly.\n Yeah it's really great! @netzpirat do you think we should also add some note about properly `throw` errors when something goes wrong on `run_on_***` methods?\n Ah, we also need to deprecate\n- --no-vendor\n- --watch-all-modifications\n\ncommand line options (and explain that now `--watch-all-modifications` is always active)\n The upgrade guide includes now a section about proper error handling. Kudos to @thibaudgg and @Maher4Ever for Listen and also the integration into Guard.\n  Please can you open an issue in guard-rspec instead. Thanks!\n  Have you Dropbox installed? Try also to add `rb-fsevent` 0.9.0 in your Gemfile and launch Guard with `--no-vendor`.\n Yeah Dropbox is known to cause problem sometimes, try to update your Dropbox client and maybe move/rename your folder (it works sometimes as well).\n\nIf you want you can give a try to the new Listen gem that will be soon used inside Guard and that should nicely falling back to polling in your case. https://github.com/guard/listen\n Great!\n  This is still failing on the listen branch. :(\n  I think a lot of users use RVM without gemset (like me) so I don't it would be a good idea to remove this WARNING when using RVM.\n\nYou can still make an alias with `bundle exec guard` no?\n  Thanks to report it, it's fixed now! :)\n @sunaku not sure about _filling_ being more memorable, **Listen** sound great to me and I already released version 0.1.0. :)\n @sunaku at the moment only **polling** adapter is implemented and the README isn't in sync with the code, but it'll be updated soon. That' a work in progress.. ;)\n\nPease feel free to give your feedback on open issues, like [this one](https://github.com/guard/listen/issues/5). Thanks!\n  Awesome, very good work! We'll release that in Guard 1.1, thanks.\n  Too bad :(\n  This could arrive when there's too much files to watch in your folder, you can ignore some path with `ignore_paths` method (more info about it in the [README](https://github.com/guard/guard#readme))\n That's weird, try to ask lib notify guys.\n Any news?\n Paths are only ignored at the Guard level but not with `rb-inotify` so using `ignore_paths` isn't useful here. To solve your issue I think we need an ignore_paths option in `rb-inotify`. @nex3 do you think it would be possible?\n @jhirn Nice link, thanks to share it! /cc @Maher4Ever \n @Maher4Ever yeah +1 for a link to our first Listen wiki page! \n  Can you give your Guardfile & Gemfile please?\n Salut Philippe, je pense que les pi\u00e8ces jointes par mail ne marchent pas sous Github, tu pourrais faire un gist?\n Le 'No examples found.' vient du faite que tu ne dois pas avoir de specs, juste?\nSinon pour la d\u00e9tection des modifications essaye d'effacer `gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i` ou de le remplacer par `gem 'rb-fsevent', '0.9.0.pre5', :require => false if RUBY_PLATFORM =~ /darwin/i`\n Non, je pense pas. T'utilises DropBox? Essaye voir de renommer/deplacer le dossier de l'application (et peut-\u00eatre un restart).\n\nOn Jan 21, 2012, at 22:12 , madeinpanto wrote:\n\n> Pour le No example, effectivement ca s'et regle des que j'ai mis une\n> spec, par contre en enlevant la ligne fsevent ou en la remplacant ca\n> ne change rien ...\n> Est-ce que LIvereload pourrait etre le probleme ?\n> \n> Merci\n> Philippe\n> \n> On Sat, Jan 21, 2012 at 2:28 PM, Thibaud Guillaume-Gentil\n> reply@reply.github.com\n> wrote:\n> \n> > Le 'No examples found.' vient du faite que tu ne dois pas avoir de specs, juste?\n> > Sinon pour la d\u00e9tection des modifications essaye d'effacer `gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i` ou de le remplacer par `gem 'rb-fsevent', '0.9.0.pre5', :require => false if RUBY_PLATFORM =~ /darwin/i`\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/guard/guard/issues/228#issuecomment-3598398\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/228#issuecomment-3599000\n D\u00e8s fois il y a des conflits avec Dropbox, c'est pour \u00e7a :). Si ton app est dans le dossier de Dropbox, tu peux aussi essayer de la mettre en dehors.\n\nOn Jan 22, 2012, at 01:21 , madeinpanto wrote:\n\n> Oui j'utilise Dropbox, comment tu le sais ?? ;-)\n> Je vais essayer ca.\n> Merci\n> Philippe\n> \n> On Sat, Jan 21, 2012 at 4:20 PM, Thibaud Guillaume-Gentil\n> reply@reply.github.com\n> wrote:\n> \n> > Non, je pense pas. T'utilises DropBox? Essaye voir de renommer/deplacer le dossier de l'application (et peut-\u00eatre un restart).\n> > \n> > On Jan 21, 2012, at 22:12 , madeinpanto wrote:\n> > \n> > > Pour le No example, effectivement ca s'et regle des que j'ai mis une\n> > > spec, par contre en enlevant la ligne fsevent ou en la remplacant ca\n> > > ne change rien ...\n> > > Est-ce que LIvereload pourrait etre le probleme ?\n> > > \n> > > Merci\n> > > Philippe\n> > > \n> > > On Sat, Jan 21, 2012 at 2:28 PM, Thibaud Guillaume-Gentil\n> > > reply@reply.github.com\n> > > wrote:\n> > > \n> > > > Le 'No examples found.' vient du faite que tu ne dois pas avoir de specs, juste?\n> > > > Sinon pour la d\u00e9tection des modifications essaye d'effacer `gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i` ou de le remplacer par `gem 'rb-fsevent', '0.9.0.pre5', :require => false if RUBY_PLATFORM =~ /darwin/i`\n> > > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/guard/guard/issues/228#issuecomment-3598398\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/guard/guard/issues/228#issuecomment-3599000\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/guard/guard/issues/228#issuecomment-3599050\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/228#issuecomment-3600141\n C'est une issue avec `rb-fsevent`, essaye de mettre \u00e0 jour ton client DropBox d\u00e8s fois cela fixe le probl\u00e8me: http://www.dropbox.com/downloading\n\nJe t'en prie!\n\nOn Jan 23, 2012, at 16:33 , madeinpanto wrote:\n\n> Salut Thibaud,\n> \n> J'ai sorti le dossier de la DropBox et maintenant ca marche !!!\n> Penses tu que ce conflit avec DropBox va pouvoir etre corrige un jour\n> ? Est-ce un probleme avec fbsevent ou guard ?\n> C'est tres pratique d'avoir les applications dans DropBox pour plein\n> de raisons (possibilite de partage entre differents ordis, os etc ...)\n> \n> Merci beaucoup\n> Philippe\n> \n> 2012/1/22 Thibaud Guillaume-Gentil\n> reply@reply.github.com:\n> \n> > D\u00e8s fois il y a des conflits avec Dropbox, c'est pour \u00e7a :). Si ton app est dans le dossier de Dropbox, tu peux aussi essayer de la mettre en dehors.\n> > \n> > On Jan 22, 2012, at 01:21 , madeinpanto wrote:\n> > \n> > > Oui j'utilise Dropbox, comment tu le sais ?? ;-)\n> > > Je vais essayer ca.\n> > > Merci\n> > > Philippe\n> > > \n> > > On Sat, Jan 21, 2012 at 4:20 PM, Thibaud Guillaume-Gentil\n> > > reply@reply.github.com\n> > > wrote:\n> > > \n> > > > Non, je pense pas. T'utilises DropBox? Essaye voir de renommer/deplacer le dossier de l'application (et peut-\u00eatre un restart).\n> > > > \n> > > > On Jan 21, 2012, at 22:12 , madeinpanto wrote:\n> > > > \n> > > > > Pour le No example, effectivement ca s'et regle des que j'ai mis une\n> > > > > spec, par contre en enlevant la ligne fsevent ou en la remplacant ca\n> > > > > ne change rien ...\n> > > > > Est-ce que LIvereload pourrait etre le probleme ?\n> > > > > \n> > > > > Merci\n> > > > > Philippe\n> > > > > \n> > > > > On Sat, Jan 21, 2012 at 2:28 PM, Thibaud Guillaume-Gentil\n> > > > > reply@reply.github.com\n> > > > > wrote:\n> > > > > \n> > > > > > Le 'No examples found.' vient du faite que tu ne dois pas avoir de specs, juste?\n> > > > > > Sinon pour la d\u00e9tection des modifications essaye d'effacer `gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i` ou de le remplacer par `gem 'rb-fsevent', '0.9.0.pre5', :require => false if RUBY_PLATFORM =~ /darwin/i`\n> > > > > > \n> > > > > > ---\n> > > > > > \n> > > > > > Reply to this email directly or view it on GitHub:\n> > > > > > https://github.com/guard/guard/issues/228#issuecomment-3598398\n> > > > > \n> > > > > ---\n> > > > > \n> > > > > Reply to this email directly or view it on GitHub:\n> > > > > https://github.com/guard/guard/issues/228#issuecomment-3599000\n> > > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/guard/guard/issues/228#issuecomment-3599050\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/guard/guard/issues/228#issuecomment-3600141\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/guard/guard/issues/228#issuecomment-3602490\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/228#issuecomment-3615683\n  Hi, yes it sounds like a good idea. Can you submit a pull request for that, it would be great! Thanks.\n I think the only thing to accomplish here is too add all guards present in the Gemfile to the Guardfile if `guard init` is run without any parameters (creating an Guardfile when not present is already handled). If some guards (or all) are already present in the Guardfile they will just be added again; It's already the case when you run `guard init xxx` and I think it's a fine behavior.\n @rupert654 any news?\n Merged, thanks to @Maher4Ever !\n  Answered [here](https://github.com/guard/guard-rspec/issues/90).\n  We should add a warning message (or even refuse to launch Guard!) if a Gemfile is present and `bundle exec` isn't used.\n\nWe can maybe doing it like that (http://stackoverflow.com/questions/6542432/how-to-raise-error-if-cap-deploy-was-not-invoked-using-bundle-exec).\nWe just need to be careful if the [`rubygems-bundler`](https://github.com/mpapis/rubygems-bundler) gem is installed/used.\n\nThis would be a nice addition before the 1.0.0 release! :)\n We need to check that, no idea how it works.\n I think warning would be a good fit here, something like:\n\n`WARNING: You are using Guard outside of Bundler, this is dangerous and could not work. Using \"bundle exec guard\" is safer.`\n\nI would add this warning to all actions, to safe us a little more hours in 2012. :)\n Awesome thanks!\n @semaperepelitsa We're checking for a `Gemfile` and the non-presence of `ENV['BUNDLE_GEMFILE']`  https://github.com/guard/guard/blob/master/lib/guard/cli.rb#L161\n @semaperepelitsa I just released version 1.0.2, please tell me if it works for you.\n  Yeah, very good points. We'll release Guard 1.0.0 soon! :D\n Guard will be updated to 1.0.0 once [these issues](https://github.com/guard/guard/issues?milestone=3&sort=created&direction=desc&state=open) will be closed if it's ok for @netzpirat and @rymai. But I think we will propably release a last 0.10.1 version before. Stay tuned! \n  I think it's more something that should be added in the README of [`guard-test`](https://github.com/guard/guard-test), please open an issue there or directly submit a pull request. Thanks!\n  Thanks! It's written like that: [`guard-test`](https://github.com/guard/guard-test\\)\n  Great move, thanks!\n  Can you give more information like files tree, gemspec, github repo... because this suggestion has worked great for many many guards gem.\n Please have a look on how this is handled in other gems: [guard-rspec](https://github.com/guard/guard-rspec/blob/master/lib/guard/rspec/version.rb), [guard-jasmine](https://github.com/guard/guard-jasmine/blob/master/lib/guard/jasmine/version.rb), ...\nDo you think it should be more explained in the README?\n  I'm asking myself if it's not related to issue #174. I'll take a look this week-end or next week.\n  It isn't the case now :)\n After some more thinking I'm not so sure that is a bug, maybe it's more a feature :)\nSkipping Guardfile reevaluation when listener is paused can bring to weird situation (Guard not up-to-date/in sync with Guardfile). So we should always reevaluate a modified Guardfile even if listener is paused.\n\n@netzpirat, @rymai what do you think? No changes needed?\n Yes my case was precisely when switching from a branch to another, but in that case if the Guardfile will reevaluated anyway, why not do it directly (without waiting for the listener un-pause)?\n Oh I see, nice. I'll think about it :)\n  Great, thanks!\n @Maher4Ever this is ready to be merged?\n  Have you tried to update to latest guard & guard-rspec version?\n  You right it's a bug, thanks to report it. Could you please try to fix it and submit a pull request?\n  Changes are fired at files level so it's quite normal to not receive `run_on_change` for the new path, I think the problem rather comes form receiving the `run_on_deletion` hook on directory event.\nDo you got the same behavior for file renaming?\n Ok I understand it better now, I think your right.\nCan you provide a failing spec and a patch for that? It would be awesome, thanks.\n Great, thanks\n Which `rb-fsevent` version do you use? Because the version of `rb-fsevent` \"vendored\" in Guard should only return the parent directory of the renamed directory.\n After some time passed to study this issue, I think I understand well the problem and `:watch_all_modifications => true` feature must be certainly completely rewrited using a Tree structure like [fssm](https://github.com/ttilley/fssm/blob/master/lib/fssm/tree.rb) to keep trace of all created/moved/deleted paths.\n@ttilley maybe it's time to think about extracting/merging the listening stuff (windows support, checksums_hash,...) of Guard inside fssm or the other way around :). There's certainly a lot of overlapping here.\n\nI think this issue is also related with #174 and #218. So for now `watch_all_modifications` option is not to be considerated as rock solid (sadly).\n\nPS: After this rewrite maybe we'll be able to remove this option and watch all modifications all the time, that would be great!\n @ttilley after a discussion on #guard (irc.freenode.net) with @netzpirat and @rymai we all agree that extracting Guard Listeners to its own gems it's a smart move, but we're not sure if it's a good idea to merge it directly inside FSSM. What do you think about creating a new gem (@netzpirat has proposed [`Listener`](https://rubygems.org/gems/listener)) with its own github organization (or maybe in Guard organization if that doesn't bother you) so we can begin from scratch and merge all good idea from FSSM and Guard?\nI also think there are some pretty good ideas to take from [`vigilo`](https://github.com/wycats/vigilo) from @wycats, like using [a  two-level hash](https://github.com/wycats/vigilo/blob/master/lib/vigilo/adapters/base.rb#L21) instead of a tree structure (way more simple I think!).\n\nTo accomplish that, I was thinking to that todo list:\n1. Define Gem name / repository / organization stuff (using Pivotal Tracker or just Github Issues...)\n2. Write README and defining first public API version (maybe something between FSSM and Vigilo)\n3. Write RSpec\n4. Write Polling listeners\n5. Add systems backend support (Darwin, Linux, Windows)\n6. Found a Windows user to test it (point featured by @netzpirat)\n\nThis new gem must be Thread safe and work on all major Ruby VMs (MRI 1.8.7/1.9.x, JRuby, Rubinius). Obviously it would be great if the migration for FSSM users is simple to do.\n\nAll that is clearly open to discussion, but I think we have all what's needed to build a great gem!\n BTW we should maybe continue this discussion to a new issue or in the [guard google group](http://groups.google.com/group/guard-dev). :)\n Ok there is the new [`Listener`](https://github.com/guard/listener/) repository under the Guard repo with [a new issue about defining the API](https://github.com/guard/listener/issues/1).\n\n@ttilley once the listener gem is ready to production, maybe you can deprecate FSSM and add a deprecation warning message in the gem + README asking people to upgrade to the new gem. We must also trying to contact all FSSM/Vigilo users via Github directly so they could participate to the new API elaboration and talk about their need (multi-directories, directory events support\u2026)\n\n@wycats are you interested to have a collaborator access to this new repository and participate? It would be an honor! :)\n  This modification is needed to allow good restart of the guard-livereload server, could also be useful for guards with server handlings like guard-spork, guard-jasmine etc... but theses guards should need to be updated so I think we should bump Guard version to 0.10.0 after this pull request acceptance.\n\nDo you see any drawbacks about this update? Do you think it will change the meaning of the start/stop guard methods? Thanks for your feedback.\n\nAlso if you find a nice way to specs [the start part](https://github.com/guard/guard/blob/b03d8ec53d6287e9ac7f0f205dc372424a3e5afb/spec/guard/dsl_spec.rb#L210-224) it would be great, I'm stuck :)\n @netzpirat @rymai no feedback? This is needed to fix guard-livereload on Guardfile reevaluation.\n Ok great, I'll update guard-spork & guard-livereload to use this change and release Guard 0.10.0 soon. Thanks!\n@netzpirat I hope your flu is gone!\n\nHappy new year!\n  Hi Johannes, this should be submitted to my [rb-fsevent repository](https://github.com/thibaudgg/rb-fsevent/blob/master/ext/extconf.rb) as the `extconf.rb` guard file is copied from there (via [`rake build_vendor`](https://github.com/guard/guard/blob/master/Rakefile#L7-42) task). Thanks!\n You right, it wasn't updated yet. I just [push it](https://github.com/guard/guard/commit/97036b6f8a6971536c29d3c64d3dfe583acc880d) to master, can you try it please.\n @ttilley there si a `no-vendor` option if you want to skip the vendored lib. `bundle exec guard --no-vendor`\n With the `--no-vendor` option you need to add `rb-fsevent` prerelease in your Gemfile. \nFor using the GitHub master version of Guard (and skip the `no-vendor` option) you need to add that in your Gemfile:\n`gem 'guard', :git => 'git://github.com/guard/guard.git'`\n\nIs it more clear now?\n Je t'en prie, merci!\n I'm not sure if rb-fsevent works well on 10.5.8 (and on PowerPC). Is itthe case @ttilley?\n @madtrick @ttilley rb-fsevent is hideously embedded inside Guard, so it certainly not the last version. This will change with the Listen gem.\n\nIn the meantime, you can skip the embedded version with the --no-vendor option and adding rb-fsevent in your Gemfile. \n @Prasanna79 this will be fixed in Guard 1.1 (with the Listen gem)\n  And I think you have Xcode install right? Have you try to move your repository to another volume or directory?\n It's a known issue with rb-fsevent: https://github.com/thibaudgg/rb-fsevent/issues/10 feel free to contact @ttilley if you have more question.\n  Guard::RSpec formatter is call outside guard so notifications variable\nis always empty (if not set with an ENV variable) and no notifications\nare fired.\n\nSounds good to you?\n I didn't think about that, good point.\nBut because I don't see how to achieve to fix this problem in an other way, what do you think of scoping the env variable with something like `Dir.pwd` it'll give: `ENV[\"GUARD_NOTIFICATIONS-#{Dir.pwd}\"]`. \n\nDon't we have the same issue with `ENV['GUARD_NOTIFY']` ?\n Ok great, so I merged it that's way.\n  Ok so we certainly need to add a option to disable (or enable) readline, what do you think about that @netzpirat ?\n  Just to be sure, are you launching guard with `bundle exec`?\n  @pyrat have you try with Guard 0.10.0 ?\n Can you give your Gemfile & Guardfile please (and be sure to launch guard with `bundle exec guard`)\n  Could be useful, can you please add specs and documentations before we merged it. Thanks\n Seems good to me, @netzpirat, @rymai is this ok for you?\n  Which version of rb-fsevent are you using?\n Ok, have you try with the `0.9.0.pre3` release?\n rb-fsevent `0.9.0.pre3` works great for us under Lion, what didn't work for you?  @ttilley are you aware of such issue on Lion?\n  Thanks for reporting, can you please submit a pull request with a quick fix and update the documentation? \n  Thanks for keeping us updated, this may help other users with a similar problem.\n  Awesome, thanks!\n  Joshua, thanks for taking time for this nice pull request. I see both, pros and cons for vendor all file system event gems:\n\n**Pro**\n- Simpler start for new users\n\n**Con**\n- It's not possible to test Guard with pre-release gems (like the current rb-fsevent 0.9.0.pre4) or use the master branch. This may be necessary on hard to reproduce issues that come to light after using Guard for some time.\n- Inflexibility for a user to choose a specific gem version. This may be necessary when a gem drops support for an older system, where a user of the old OS version must stick with an old gem version. Another case is that sometimes for user A works only the current released version, and for user B works only the last but one version.\n\nThe current cons can be addressed by adding a new [cli option](https://github.com/guard/guard/blob/dev/lib/guard/cli.rb) that sets a loading strategy when the [listener gets initialized](https://github.com/guard/guard/blob/dev/lib/guard.rb#L66). You could make loading the vendor gem the default and use the current loading strategy when passing a certain cli switch, for example `-s/--system-gems`.\n\nI noticed that you're developing on the master branch and not the dev branch. I'm very sorry for this, that's my fault, because I was so stupid to add the hint to the `dev` branch and not the `master` branch.\n\n@franciscoj Can you elaborate the problems you've had? I'm just wondering, because I have tested adding both to the `Gemfile` and install them on Mac OS X and Linux. Bundler installs them fine, even when the gem is not supported in the current platform and Guard picks the right one. In addition one could use `RbConfig::CONFIG['host_os']` in the Gemfile to install only the really needed gems for a platform.\n\n@thibaudgg and @rymai, what do you think of vendored gems?  \n  I have not much experience with the listeners, but from my understanding, pausing the listener [reactor loop](https://github.com/guard/guard/blob/master/lib/guard/listener.rb#L75) will only stop **processing** the changes, but they are still **collected**. You can clear the collected file changes with `#clear_changed_files`, so perhaps something like this works:\n\n```\n::Guard.listener.pause\n... shell process here ...\n::Guard.listener.clear_changed_files\n::Guard.listener.run\n```\n  That would duplicate most notifiers we have already on the dev branch.\n\nHave a look at the [notifiers on the dev branch](https://github.com/guard/guard/tree/dev/lib/guard/notifiers), there we have currently implementations for five notification libraries. I suggest to try Ruby GNTP, since it runs on OS X, Linux and Windows and allows even to send notifications from one OS to another. You'll find more information about these notifiers in the [polished README](https://github.com/guard/guard/blob/dev/README.md) of the upcoming Guard release.\n\nYou can give it a try by simply adding\n\n```\ngem 'guard', :git => 'git://github.com/guard/guard.git', :branch => 'dev'\n```\n\nto your `Gemfile`.\n  Thanks for the corrections. They have been already fixed on the dev branch, but since we're not ready to release now we should fix it on the currect README. Thanks.\n  I have no BSD, so I can't reproduce it. I give it a try next week within a virtual machine.\n I just installed a bare minimal freebsd 8.2 and cloned the fork from @vizjerai.\n\nFirst I noticed that development was done against the `master` branch and not the `dev` branch.\n\nNext I ran the specs and see them failing, then played with Guard a bit and I'm not surprised that there are some failing specs: I have a BIG latency between modifying a file until an event gets triggered (sometimes there is a difference of multiple seconds) and I had also some that were not triggered at all.\n\nI did a quick check of the implementation and compared it to the statswatcher cool.io spec, but everything seems fine.\n\n@vizjerai do you have this latency also or is it only happening on my VM?\n  Thanks for the README update. I had to struggle a bit with this merge, since you used the `master` branch and not the `dev` branch. \n\nI made a few little changes to it:\n- Removed the `On Linux` section, since there are no other OS sections available and named the section `Advanced Linux system configuration`. We can undo this when there is more info for the other OS.\n- Moved to section to the bottom, since the advances configuration should come **after** the initial setup and first usage. The goal of the new README on `dev` is to have a clear and consistent structure to help people start fast. This means generic stuff first, specific stuff last.\n  When I look at the source code for both, guard-minitest and guard-test, I see that notifications aren't supported when using `drb`.\n- guard-test [doesn't include the guard_test_runner](https://github.com/guard/guard-test/blob/master/lib/guard/test/runner.rb#L59) when `drb` is enabled, which in turn is responsible for the notifications.\n- guard-minitest [doesn't include the default_runner](https://github.com/guard/guard-minitest/blob/master/lib/guard/minitest/runner.rb#L73) when `drb` is enabled, which in turn is responsible for the notifications.\n\nIt seems there may be a technical reason why both, guard-minitest and guard-test, doesn't support system notifications when using drb: both are using Sporks [testdrb](https://github.com/timcharper/spork-testunit/blob/master/bin/testdrb) for executing the tests.\n\nI'd analyse the [result for testdrb](https://github.com/timcharper/spork-testunit/blob/master/bin/testdrb#L14) and see if it contains the information needed to show a system notification (You can call this from the command line to see). If this is the case, it's possible to enhance guard-test and guard-minitest to evaluate the result after the test run and show a notification. I'm sure @yannlugrin and @rymai would be happy to merge a pull request for this. If there is no valuable information in the `testdrb` result, you have to do some work in spork-testunit.\n\nIn either case it would be nice if you could edit the README for both projects and add a notice that notifications aren't supported when using `drb`. This could be easily done directly on GitHub.\n  Thanks for bringing this up. You're right, there is definitely some room to improve the Guard class detection and make it more Ruby conform. Borrowing the `camelize` method is a great way.\n\nSince Guard has a large Guard ecosystem, every change we make there should be fully backwards compatible. I know it's not uncommon to break the API prior to version 1.0, but since it's possible to chain the detection rules, we should support the current algorithm alongside any new algorithm.\n I could implement a solution on Monday at the earliest, but if you like to take care of it, please use the `dev` branch and send a pull request.\n Thanks for this clearly described issue and your Gist with the elegant solution. I just changed it a bit to still support the old syntax.\n  Sorry for the lame response time - all core members seems to be very, very busy with other stuff. That particular area of Guard is not easy to understand and must be handled carefully, so there is no quick fix in sight. But many thanks for reporting, we'll take care of it when we have the time and muse for get into it.\n Hi @sutherland not sure why timestamps aren't created for new files, can you try to submit a failing spec so we can try to fix it? There's a lot of example of that kind of specs in https://github.com/guard/guard/blob/master/spec/guard/listener_spec.rb.\nThanks!\n @sutherland please can you tell us if the fix in Guard master works for you?\n  Thanks for analyzing this issue and reporting it. Your suggestion\n\n```\n@watch_all_modifications = options[:watch_all_modifications] || false\n```\n\nworks only in the case where the default value is `false`. \n\nSo what can we do? \n\nOne solution would be to just use the Thor default value and completely remove any default value in the listener itself. This seems fine, but it would lead to a long rat tail to update all methods and its docs to reflect that `Thor::CoreExt::HashWithIndifferentAccess` is passed instead of a `Hash`, so no `options = {}` anymore. In addition the specs must be updated to handle the new parameter type. I mainly decided against this solution because it would couple the listener to Thor, which makes it harder for other projects that are using Guard's listener framework.\n\nIn the end I simply changed the `options.fetch` key to a string, because Thor internally converts every key to a String. This is solution at not cost for Guard and also simple for projects using the listeners to ensure the option keys are string.\n After thinking a second time on this, I simply convert the options keys to symbols before evaluation them. This ensures the projects that are using the Listener framework don't have to change anything.\n  I guess you're taking about `ruby_gntp`, since there is no support for a `ruby_growl` gem.\n\nYou description sounds strange, because what you describe should not be possible: when you see the given error message, you should not be able to see any notification, because they are [turned off](https://github.com/guard/guard/blob/master/lib/guard/notifier.rb#L203) then.\n\nAre your sure you run Guard always with `bundle exec`?\n Thanks for the `Gemfile` and `Guardfile`. We have no official support for the `ruby-growl` gem, we have support for the `growl` gem, `ruby-gntp` gem and `growl_notify` gem. I think that we already support enough Growl gems, and the `ruby-growl` gem uses the GNTP protocol like `ruby-gntp`, so it would not make much sense to add another Growl library. Is there a specific reason that you have to stick with `ruby-growl` or can you switch to `ruby-gntp`?\n  Are you running Guard with `bundle exec`?\n  I just released 0.8.6, because this bug is so unhappily for new users that want to get started with Guard.\n  Damn, not again! This was exactly the reason why I added specs to it, but I didn't verify the existence of the template. I added that missing spec and hope I never have to handle that again :P Thanks a lot for the pull request, I merged it into the `dev` branch.\n  Thanks for reporting this. I have now expanded the logic in the `#changed_paths` and `#deleted_paths` methods: If the list of paths contains an object that does not have a `#start_with?` method, then these \"paths\" are considered as changed.\n  You can change the maximum number of allowed inotify watches:\n\n```\necho 16384 > /proc/sys/fs/inotify/max_user_watches\n```\n\nThe above for example doubles the allowed watches.\n Why not just start the debugger and tell us what's happening? It's hard to debug something that cannot be clearly reproduced.\n Good news! @dyfrgi was kind enough to create a reproducible test case, available as Git repository: https://github.com/dyfrgi/Guard-Broken\n\nWow. Thanks a lot. Making it reproducible fixes half of the bug. I will take care of it tomorrow.\n Great explanation and fix! Thanks all.\n  Thanks for the hint that the error message is not including `ruby_gntp`. \n\nAre you executing Guard with `bundle exec`? I use Guard form master branch with `ruby_gntp` without any problems. Another thing that comes me to mind is that `RUBY_PLATFORM` is returnbing `java` for JRuby. If you're using JRuby, you should use `RbConfig::CONFIG['host_os'] =~ /darwin/i`\n  When I look at your log I see\n\n```\nDEBUG (12:23:12): Command execution: growlnotify --version\n```\n\nwhich comes from the [growl](https://github.com/visionmedia/growl/blob/master/lib/growl/growl.rb#L62) gem. However I don't see the `growl` gem in the `Gemfile` and you're running guard with `bundle exec`. So something is wrong here, because this should not work.\n\nI'm running Guard from master branch with JRuby 1.6.4 on OS X 10.7.2 without any problems. \n  The step definition watcher is not fine, see the included template from guard-cucumber:\n\n```\nguard 'cucumber' do\n    watch(%r{^features/.+\\.feature$})\n    watch(%r{^features/support/.+$})          { 'features' }\n    watch(%r{^features/step_definitions/(.+)_steps\\.rb$}) { |m| Dir[File.join(\"**/#{m[1]}.feature\")][0] || 'features' }\nend\n```\n\nThe difference is that you can't run step definitions, instead you run a feature when its name matches the step definition or all features if no matching feature is found (for shared step definitions).\n\nWhen inotify does not see any file changes, you should open an issue at [rb-inotify](https://github.com/nex3/rb-inotify/issues).\n\nPolling should catch the changes, you just have to remove\n\n```\ngem 'rb-inotify'\n```\n\nfrom your `Gemfile`, so that the polling fallback is active.\n Don't forget to run it with `bundle exec` so that Guard doesn't pick up `rb-inotify` from the system.\n Can you try adding the `.sass-cache` to the ignored paths in your Guardfile?\n\n```\nignore_paths '.sass-cache'\n```\n The file listener is always active, even when you have no Guards watching.\n  I have refactored the cli class and extracted the show and list methods to the DslDescriber class and added the missing specs: https://github.com/guard/guard/commit/cdf090661456f3650fd4dc5df296fef9abd0a8f7 I have no problem with both options and they work as expected. Due this refactoring I made the `guardfile_structure` method private on the DslDescriber, but I don't see how this could lead to your error message.\n\nCan you please test if adding :: to Guard::DslDescriber.list(options) and Guard::DslDescriber.show(options) in cli.rb resolves the problem?\n\n```\n def list\n     ::Guard::DslDescriber.list(options)\n end\n\n def show\n   ::Guard::DslDescriber.show(options)\n end\n```\n  This is not something that Guard does handle, each Guard implementation decides on its own what to show in a notification. Guard only provides a framework for that. You should open an issue in each Guard you like to support such kind of notifications.\n\nI think such a detailed message should go into the console, because the space to show it within a notification is limited. I can only speak for Growl, as I haven't used the other supported notification frameworks for Linux and Windows. For Growl most of the themes are narrow and showing this kind of message would make it almost unreadable. I know there are also themes that have more space, like the `Music Video` theme for growl, but I believe that a testing framework should not make a demand for a specific notification theme.\n I did show such detailed notification in guard-jasmine, until I realized that not everybody uses the `Music Video` theme. Then I changed it...\n Perhaps a `:detailed_notification` option that defaults to `false` has the best chance to be merged into a Guard. You may can change the Growl theme programmatically via apple script, but I would not recommend it for several reasons:\n1. Respect the users freedom\n2. You will only be able to change it for Growl, ignoring Linux and Windows users.\n3. You can only configure it by using apple script, thus ignoring all JRuby users.\n\nThis is not worth the time and effort, then you better buy a 27\" iMac where you have enough space for the terminal window :P\n  I like the `:required => false`, because this is the best way to declare these dependencies: They won't get loaded when Rails starts in development or test environment, but they get required when Guard starts. We should definitely use this best practice in the README.\n\nWhen support for `ruby_gntp` on all plattforms is done, then the installation section will get (again) a bit more complex, because each plattform will support at least two system notification libraries, and Mac OS X even three libraries. Then we  should move these instructions into a separate section about system notifications.\n\nWe do some duplicate stuff in the installation section: We install the gem manually and through bundler, and we describe putting these gems into the development group instead of showing the `Gemfile`.\n\nThe essential installation instructions for all platforms are in fact:\n\nAdd Guard to your `Gemfile`:\n\n```\ngroup :development do\n  gem 'guard'\n  gem 'rb-inotify', :require => false\n  gem 'rb-fsevent', :require => false\n  gem 'rb-fchange', :require => false\nend\n```\n\nand install via Bundler:\n\n```\n$ bundle\n```\n\nThis would be perfectly fine, because you can install all these gems on all plattforms, they just won't work on all plattforms. Since we do not require them, they won't fail. Guard will then require the correct library depending on the host plattform.\n\nThis approach has two advantages:\n- Much simpler installation for a novice user.\n- Makes a project work cross plattform out of the box.\n\nWe can still go into more detail for those how really read the README.\n I take care of it next week when I add the notification options for ruby_gntp.\n  Looks fine. I'll merge it now.\n Merge went fine, I just added some more documentation and split two context blocks in the watcher specs apart. The golden rule with context is, that only one assumption should go into a context description. If there are two, split and nest them.\n\nThanks for your work, the implementation finally looks very nice!\n  My first reaction on this was that only errors should go to STDERR, as the name implies. But after I read the following description of STDERR:\n\n```\nStandard error is another output stream typically used by programs to output\nerror messages or diagnostics.\n```\n\nat [Wikipedia](http://en.wikipedia.org/wiki/Standard_streams#Standard_error_.28stderr.29), I think that at least `error`, `deprecation` and `debug` should definitely write to STDERR. Writing `info` messages to STDERR feels wrong, but when you think about Guard just being a framework for Guard implementations, then everything from within Guard should be considered as diagnostics.\n\nWe are free to make a general decision here without impact, because all Guards I have seen so far are doing something with the files and the output are again files or processes and all messages could be considered as diagnostics. This is the first use where the output written to STDOUT is used as output to be further processed. From a user perspective nothing changes, it works and looks the same as before.\n\nI vote +1 for this, but in case we merge it, a description should go into the documentation of the `ui.rb` class, that everything logged through this class is considered an error or diagnostic messages, and writing to STDOUT should be done by simply using `put`.\n Logger is 1.9 only and I use the private color method in Guard::UI from within my own Guards :P I'm tending more to make them public.\n Yes, it would make sense to use term-ansicolor, but I don't like projects where pull requests and issues are completely ignored.\n Yes, perhaps everything will be fine with term-ansicolor. I've no problem with changing that at all, I'd have changed my Guards within a few minutes. But there are more important things to work on Guard than replacing a few lines of perfectly working code. But if you like to take care about it (including answer issues from crying Windows users) and @thibaudgg has no historical reason against it, then feel free to send another pull request.\n You see messages written to STDERR in your console, so from a user perspective nothing has changed:\n\n```\n$ echo \"TEST\" > /dev/stderr \nTEST\n```\n\nAll those message you see from RSpec are diagnostics messages, because it has no real output that you process further. You don't lose control, because you never had control in a dynamic language like Ruby and every developer was always free to use `puts`.\n Since you cannot have control, you can only lay out some guidelines and hope developers read and follow them. So we have definitely made a step in the right direction by just defining what to use when.\n My comment wasn't meant to teach you, it was just an argument against losing control. I find it very hard to come to a clear decision, I see arguments on both sides. Not speaking personal and not even in my mother tongue makes it even harder. I think you best discuss it with @thibaudgg face to face and make a decision. I'm fine with everything you'll decide.\n Sure, why not... but it would only affect Guard messages and not the ones from each Guard plugin.\n Guard is not really meant to be used as a library, it's rather a customizable product to improve the developers workflow. Sure, you can use it programmatically and write plugins for it, but it's always limited to some extend to \"the Guard way\". If you want to use it in another way, you can make use of [Listen](https://github.com/guard/listen) and write your own workflow and interactions around it.\n\nForcing the existing plugins to adhere to some kind of messaging is not a good idea, because there are many plugins that are working fine with the current API, but aren't really maintained and thus we will split half of the plugin ecosystem. Deprecation messages are not effective, because the authors of the unmaintained plugins won't see them and the active Guard users will suffer under the message flood. Anyway, I've seen Guard plugins that aren't using the provided Guard::UI class anyway and just write to stdout, so we cannot enforce it anyway.\n\nYou can always open Guard in a subprocess and filter the stream, so you can control the console output and you can write your own notifications in the parent process depending on it. If you disable the notifications in the subprocess, you have full control of the Guard output.\n  I just added support for GNTP with ruby_gntp. It supports different message channels, but is limited to Darwin listener and the localhost for now.\n Like @thibaudgg mentioned, there have been some issues lately with `growl_notify`. I don't see the need to drop support for it, because the code is very small for supporting all these different approaches, but I'd like to recommend the solution that causes the least pain to the users of Guard.\n\nSo please, could you all give `ruby_gntp` a try and see how it works for you. When we have good response, we can change the order of the three gems and recommend `ruby_gntp` over `growl_notify`.\n This is an area of uncertainty. I checked the [Growl version history](http://growl.info/documentation/version_history.php) and see that from 0.7 network support has been added.\n\nCould it be that Growl < 1.3 needs to manually enable incoming network connection in the preferences, whereas Growl 1.3 always accepts connections on localhost? I mean I have not enabled the `Listen for incoming notifications` checkbox in the Growl 1.3 Network tab, but I see open ports:\n\n```\n$ lsof -i | grep LISTEN | grep -i growl\nGrowl      463 michi    5u  IPv4 0xffffff801a3d2160      0t0  TCP *:23053 (LISTEN)\nGrowl      463 michi    6u  IPv6 0xffffff801981cf80      0t0  TCP *:23053 (LISTEN)\n```\n I find it a bit strange that GNTP support is announced in Growl 1.3, but the ruby_gntp gem was first released on April 19, 2009.\n I did some research on the Growl mailing list and GNTP is only available for Growl >= 1.3. \n\nThe reason why `ruby_gntp` is released years before the support in Growl has landed is simple: Growl has used an unpublished, internal protocol prior 1.3. The GNTP protocol was then co-developed with the developers of Snarl and Growl for Windows (and other notification systems, including Mumbles) and has been already implemented in these systems.\n\nSo GNTP is an open protocol for system notifications and is supported by many system notification utilities on many platforms.\n\nI will refactor the GNTP support next week to be available on all plattforms and add a way to configure the host, port and password. I think this will allow Guard to be very flexible configured on all platforms (e.g. you can have a Linux and Windows box sharing an project with Dropbox and send notifications to your Mac).\n Suggestion for the Guard DSL:\n\n```\nnotification :gntp, :host => '192.168.1.5', :password => 'secret'\n```\n\nWe can use this also for the other notifications, so you can have both `growl_notify` and `ruby_gntp` gems installed, but make a selection of your preferred notification provider:\n\n```\nnotification :gntp\n```\n\nwithout this line `growl_notify` would be selected currently. Another use would be\n\n```\nnotification :off\n```\n Thanks for the additional information. I really like `ruby_gntp` because it has not dependencies and works on all Rubies. The implementation is also very lightweight, so any adjustments in the future shouldn't be that hard.\n ruby_gntp support is not released yet, you have to use Guard from master.\n\nOn 15.10.2011, at 11:23, Jimmy Cuadra reply@reply.github.com wrote:\n\n> I see `ruby_gntp` is now being promoted as an option in the README, but it's not triggering notifications for me. My specs:\n> - OS X 10.7.2\n> - Ruby 1.9.2-p290\n> - guard 0.8.4\n> - guard-rspec 0.5.0\n> - guard-spork 0.3.1 (w/ spork 0.9.0.rc9)\n> \n> I even installed the just-released GrowlNotify 1.3, but I'm still not getting notifications. Does `ruby_gntp` need to be updated to work with Growl 1.3 before this will work? I'm wondering if I was just mislead by the README.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/154#issuecomment-2414747\n For everyone interested in trying out the refactored notifications, they are on the [notifications](https://github.com/guard/guard/tree/notifications) branch. Since the README has not been updated, I'll just copy & paste the instructions from the mail I sent to the Google group:\n\nIf you don't specify any notification configuration in your Guardfile, Guard goes through the list of available notifiers and takes the first that is available. If you specify your preferred library, auto detection will not take place.\n\n```\nnotification :growl\n```\n\nwill select the growl gem for notifications, even when other notification libraries are available. You can also set options for a notifier:\n\n```\nnotification :growl, :sticky => true\n```\n\nEach notifier has a slightly different set of supported options:\n\n```\nnotification :growl, :sticky => true, :host => '192.168.1.5', :password => 'secret'\nnotification :gntp, :sticky => true, :host => '192.168.1.5', :password => 'secret'\nnotification :growl_notify, :sticky => true, :priority => 0\nnotification :libnotify, :timeout => 5, :transient => true, :append => false\nnotification :notifu, :time => 5, :nosound => true, :xp => true\n```\n\nIt's possible to use more than one notifier. This allows you to configure different notifiers for different OS if your project is developed cross-plattform or if you like to have local and remote notifications.\n\nNotifications can also be turned off in the Guardfile, in addition to setting the environment variable `GUARD_NOTIFY` or using the cli switch `-n`:\n\n```\nnotification :off\n```\n\nEach notification library is extracted into its own module, which makes it simpler to add further notification libraries like Kdialog, Knotify and OSD Cat.\n\nWith Guard 0.8.5 and ruby_gntp support, Growl is now also supported on Windows and Linux, and from what I read it supports also Snarl.\n\nThe different notification channels that are already supported in `ruby_gntp` should now also be available in GrowlNotify.\n\nIs anyone using GrowlNotify, libnotify or notifu? I'd be happy if you could give it a try, especially for libnotify and notifu, because I have no development environment setup for Linux and Windows.\n The notification branch has been merged into dev. You can give it a try by adding\n\n```\ngem 'guard', :git => 'git://github.com/guard/guard.git', :branch => 'dev'\n```\n\nto your Gemfile.\n  I don't see any problems with the current implementation, now that 33542ac introduced an explicit flag to enable any objects as watcher response. However I'd like to see that flag on the Guard and not on the watcher, because the Guard must decide if he can accept something other than strings and not the watcher. I have still some minor issues with the code (yes, I know I'm fussy on such things) and I'll leave my comments in the pull request.\n  This is an excellent use of a Mutex and makes everything much simpler. Thank you very much!\n  You're right, it happens when the Interactor is locked, thanks!\n  Still an issue with Guard 0.8.0 ?\n  Soon, we just wait on [that one](https://github.com/guard/guard/pull/136#issuecomment-2214827)\n  There's nothing wrong by using `bundle exec guard` it's even a preferred way. Have you add `growl` and `rb-fsevent` to your Gemfile?\n  This pull request cannot be automatically merged. Please can you merge your fork with the master before I merged it. Thanks\n Oh yeah the specs and the README note :)\n It seems there's still two issues with the jruby specs on Travis :( (Have you an idea why?)  http://travis-ci.org/#!/limeyd/guard\n Maybe `--watch-moves-and-deletions` would be even more precise?\n Yep, I think we can go for `--watch-moves-and-deletions` and use the `-W` alias rather than `-D` to not be focus only on the deleted files.\n Yeah, `--watch-all-modifications`  with `-A` is even better! Go for it!\n Ok great thanks, it's almost ready to be merged! There's just this [2 issues on jruby](http://travis-ci.org/#!/limeyd/guard/builds/176039), any idea on how to fix it? \n @netzpirat have you an idea about jruby falling (again!) on linux but not on osx\n Ok thanks @netzpirat, take care of yourself!\n Not sure if it's a bug, when I pull master I got the run_on_deletion branch code (in my local master)\n Ok, no problem :)\n  So it isn't really an issue right? :) Can you please propose a better phrase that include a rbx suggestion?\n Ok thanks for the reporting, I thing I can close this issue :). \n  Growl is definitely handled through guard but for Cucumber & Rspec guards we need to use custom formatters outside of the guard scope. Have you disabled `bundler` on these guards config options? Are you launching guard with `bundle exec` ?\n  Have you installed growl?  http://growl.info\n Please try with the `growl` gem instead.\n And don't forget to install the `growl_notify` binary in Growl extra folder (in the growl dog)\n Good to hear! I close this issue now.\n Answered [here](https://github.com/guard/guard-rspec/issues/84)\n  I think it should be fine like that, please can you add some documentation on the README about that feature. Thanks\n Thanks!\n  Not sure if it'll be used a lot, but if it's optional and you send a pretty pull request (with maybe a wiki page as documentation) why not! :)\n  You can try to add this `default_notifications` feature to the `growl_notify` support in Guard. Seems like a good idea. Pull request is welcome :)\n I have added support for multiple notification channels to Guard through ruby_gntp. Currently there are channels for `success`, `pending`, `failed` and `notification`. If you like to add the same for growl_notify, please feel free to open a pull request.\n  Still stuck with this one? Without more info, it'll be hard to help you :|\n  Yes it's intentional and I don't think it would be a good idea to turn that on. Not sure if every guards gems would handle that properly.\n Why not to making this optional if you have time to handle it. Have you found a solution about your error?\n Seems good!\n @limeyd are you work is pull requestable? :)\n  Seems like a good idea, feel free to submit a pull request. Thanks\n  Thanks!\n  Looks great thanks. Please can you also update the README before I merged it.\n Sounds, good. Thanks!\n  Also with the master branch of Guard?\n Do you have the same issue with rb-fsevent 0.4.1 ? If not, please report directly this on rb-fsevent (with a link on this issue). Thanks.\n\n@ttilley what do you think of that?\n @ttilley yeah, I think we'll seriously thinking about a replacement for posix signals :)\n Please can you try with rb-fsevent 0.4.3 (thanks @ttilley for this one!)\n Great, I close this issue.\n  Hi,\n\nactually it has been thought and prepared in [this pull-request](https://github.com/guard/guard/pull/63) [here](https://github.com/guard/guard/blob/master/lib/guard/listener.rb#L26-27) but [not implemented yet](https://github.com/guard/guard/blob/master/lib/guard.rb#L17).\n\nA CLI option seems good to me. Feel free to make a pull-request if you're interested.\n\n(FYI, next time if you have a question, please ask it in the [Google group](http://groups.google.com/group/guard-dev) or on #guard (irc.freenode.net).)\n I've just pulled some contribution from @nestegg that add 2 new CLI options:\n- `watchdir`/`-w` to specify the directory in which Guard should watch for file changes,\n- `guardfile`/`-G` to specify the location of an alternate Guardfile.\n\nCould you give it a try (if you still need it)?\n\nThanks!\n  Hi,\n\nI've just diagnosed a **very critical** bug that's probably be the same that you described. I've fixed it locally and will push it this evening along with a new DSL method to exclude specific folders (by default, we plan to exclude `.bundle`, `.git`, `log`, `tmp`, `vendor`).\n\nFYI, before the fix https://github.com/guard/guard/blob/master/lib/guard.rb#L49-54 was taking ~56 seconds, it now takes less than a single second.\n Hi again,\n\nI've now pushed the fix (+ some other refactoring/optimizations/improvements)! :)\n\n@ianwhite (OSX), @thibaudgg (OSX), @yannlugrin (Linux), @stereobooster (Win), @surajreddy (Win), could you all try Guard from master `gem 'guard', :git => 'git://github.com/guard/guard.git'` before any new release since I've made some minor changes to listeners (normally nothing should break though but who knows...)!\n\nI'll also try to merge #90 in the next few days so @stereobooster & @surajreddy, please be ready to stress-test the 0.5.2 pre-release (scheduled for Sunday)!\n Have you tried it yet?\n\nMaybe you could sync with @yannlugrin, we are having a commit discussion here: https://github.com/guard/guard/commit/06be2107afa6f56b3740aaee0e0bc73067a933dd#commitcomment-488603 :P\n Great, it should be fairly easy and quick to add a new Guardfile DSL methods for exclusions now.\n No, I think it will be good, we will see if Windows users get issues...\n\nBtw, it was on [this issue](https://github.com/guard/guard/pull/90).\n @ianwhite, how is it going? :)\n  Thanks!\n  Thanks ! :)\n  That's pretty cool, I'll give it a try!\n I tried  quickly yesterday and it didn't work, is there any extra configuration to make it work? (I think not but...)\n Actually, it works well when `Notifier.notify` is called in the context of Guard, but not when it's not in its context (like in the `guard-rspec` formatters for example).\n\nI tried to find why but no result yet.\n The issue seems to be in the `GrowlNotify.config` block since a `puts` before the block is displayed but a `put` just after the block is not (on `guard-rspec` results)...\n  Seems like supporting only `close_write` & `move_self` (for vim & jedit) would cover 100% of editors listed above. Thanks these info, that's really helpful!\n  It should be easy to implement, [`Guard::Guard#run_on_change(paths)`](https://github.com/guard/guard/blob/master/lib/guard/guard.rb#L51) method return a boolean so if it's false we can break the loop in [`Guard.run_on_change_for_all_guards(files)`](https://github.com/guard/guard/blob/master/lib/guard.rb#L46). Please can you try to implement it and make a pull request. Thanks\n Ok @yannlugrin and @netzpirat made a good point. I think we can keep that for version 1.0.  Seems ok for you @jamesarosen?\n Ok, I thin we can do that for v0.6 with a beta/rc period (v0.5 is just around the corner). With:\n- A deprecation warning when a method isn't returning a boolean, and only break the loop when a \"true\" `false` returned. \n- An update of the documentation\n- A mail/issue to all guards that aren't compliant with the new rules\n\nSounds good to you?\n I'm afraid there is not at this time. We should recommend to subscribe to the google group when we sent the mail to all guard's members (one by one)\n Hi,\n\nyeah we would have to find a way to store each guard's group and keep the same order of groups and guards as declared in the Guardfile. Also, any structure modification to `@guards = []` could be harmful for some existing guards that access the guards list.\n\nMaybe we could pass a group to `Guard::Guard#initialize` (in the `options` hash) and store groups in `@groups = []`. Then call (at the [current line 46](https://github.com/guard/guard/blob/master/lib/guard.rb#L46)):\n\n``` ruby\ngroups.each do |group| # we should set group to \"default\" (for instance) if no group present\n  guards.select { |guard| guard.options[:group] == group }.each do |guard| # simplified since it should handle cases when guards have no group...\n    supervised_task(guard, :run_on_change, paths) }\n    # with new logic when supervised_task return false here\n  end\nend\n```\n\nAny thoughts?\n +1 for Google Group mailing\n Ok great, +1 for YARD and documentation for Guard developers :)\n Wooo, that's just awesome, thanks @netzpirat!\n Ok Guard 0.8.0 is out with this new feature, now we'll just need to add some documentation (README) about it :)\n  Seems like a great idea, please can you try to implement it and make a pull request? Thanks\n Good point, @netzpirat I think you're right (again!). Thanks for your input on that point!\n @capotej feel free to reopen this one, if you send a pull request. I close it in the meantime.\n  Sounds useful, thanks! Please can you add one spec, and one line in the README/CHANGELOG.\n Sounds goods, thanks!\n  Thanks for fixing the specs! It's all green again now! :)\n\nAlso, I didn't know this way of calling `should_receive` with a block!\n  Thanks!\n Oops it breaks the specs (http://travis-ci.org/#!/guard/guard/builds/29739), can you please fix it.\n Updating the changelog would be great too. :)\n  Please can you just edit the README to referrer this change (a line in the CHANGELOG would be great too). Thanks! \nDon't you think we can support both type (hidden & non-hidden)? \n Great, good point will keep only .Guardfile! Thanks again!\n  Awesome, thanks. Can you just add some info about this _great_ feature in the README, inside man pages give more bonus points ;-)\n I used [ronn](https://github.com/rtomayko/ronn) like this `ronn man/guard.md > man/guard.1 && man man/guard.1` but I'll probably write `Guard::Ronn` for future ease of generation! :)\n\nBTW, I've mostly followed the instructions here: http://shairosenfeld.com/blog/index.php/2011/04/ruby-gems-and-man-pages and here: http://rtomayko.github.com/ronn/ronn-format.7\n Awesome! Thanks for completing the manpage!\n  Is it final? Does this work on Windows?\n\nIn any case, the implementation looks fine for me!\n Hey all, I've just seen this cool gem: https://github.com/defunkt/colored\n\nMaybe we could use it? Just a thought! :)\n This is now merged! Thanks @stereobooster, it would be cool if everyone could stress-test this (most importantly on Windows) before the next pre-release, in a few days...\n Ok good to know, please @luislavena can you submit a pull request for that? Thanks!\n  Do you have any clues on why this is happening? I'm not sure to understand everything though...\n Still a problem with the last version?\n  Hi,\n\nif it's for development purpose, I think the `UI#debug` method is appropriate. You would then launch guard in debug mode with `guard -d` (I've just seen that this option is not documented in the README!) to see more info on the exception.\n Ok, I've merged the pull-request and finally used UI.error since I think it's **always** useful to see an Exception trace (not only during development). I've also added color (red) to the \"ERROR:\" flag when you use UI.error.\n\nThanks Elliot!\n  Please can you give your `Guardfile` maybe this issue is coming from a guard plugins.\n Can you try with `guard 'bundler'` placed before `guard 'rspec'` or by commented it completely to see if it still hanging.\n  Great thanks!\n  @stereobooster just fixed it with https://github.com/guard/guard/pull/86\n  Thanks!\n  Would it not be easier to not pressing save every couple seconds, rather than thinking to stoping/restarting Guard?\nI don't think adding this feature it's a good way to solve your problem. But maybe I've not enough understood your problem, can you clarify it a little bit?\n You can also try to use RSpec filter (I use `focus => true`) to speed up your tests execution.\n Hi @toolbear, you right good use case. I'm a on the middle of a complete rewrite of how Guard interactions work, I have removed Posix signal interaction and replaced them with something more universal, `$stdin.get`! (Posix signals didn't work well on jruby & windows). So... I have already added pausing support on the [stdin branch](https://github.com/guard/guard/tree/stdin), please give it a try!\n\nSpecific code here:\n- https://github.com/guard/guard/blob/stdin/lib/guard/interactor.rb#L19-20\n- https://github.com/guard/guard/blob/stdin/lib/guard.rb#L61-70\n @potiguar we can maybe add a option to automatically pause files modification listening on specific git branches. Feel free to test if it's feasible (and that don't slow down the whole thing) on your side and provide a pull request (maybe against the stdin branch)\n\nPlease give a try on the pausing feature already implemented on the stdin branch, thanks!\n This feature exists now in the head master branch.\n  Specs doesn't fail on Mac OS X, all green!\n  I don't think this has drawback, but I'm not using Linux so I can't really tell. Anyway, feel free to do a pull-request if you think it's appropriate! :)\n\nThanks!\n  Good catch, thanks!\n  Awesome, thanks!\n  Fixed with [this commit](https://github.com/guard/guard/commit/61b0a7aa05ffed7df19800ce9051bf3551c53053) right?\n I think this should be fixed by the #90, if not, feel free to reopen this issue.\n  Great thanks for the wiki page. I just updated the guard-rspec Guardfile template ([this commit](https://github.com/guard/guard-rspec/commit/32e014b0d6e931fe4090c0a519558e22d98f9d4f). Feel free to make some pull requests on the guards Guardfile templates you are using :).\n  That's awesome man!\n\nThanks!!\n I didn't know this trick, that's very useful and clean! :)\n  Can you leave a spec with the guard name set as a String? Thanks, I'll merge after that!\n Perfect! Does the specs pass? ;)\n In that case, let see what Travis-CI has to say! :D\n\nThanks! :)\n  Hi, The version specification in your gemspec [is broken](https://github.com/darwalenator/Guard-Krammer/blob/master/guard-krammer.gemspec#L7) maybe it's just that.\n\nYou should also renamed our repository name as `guard-krammer` and not `Guard-Krammer`\n Oh sorry, I have misread your gemspec. It seems fine.\n\nPlease can you show me your Guardfile & Gemfile and also try our gem with Guard 0.4.0.rc\n\nThanks\n yep +1 for `guard-markdown` :)\n Great idea, just added the link for the Google group and #guard channel at the top of the Readme!\n Great, let us know when guard-markdown is ready!\n w00t!! Love all this! :D\n\nAbout the gem & gemspec structure, please take inspiration from [guard-rspec](https://github.com/guard/guard-rspec), made by our leader: @thibaudgg! :P\n  I can feel your pain, because I struggled with the same issue some time ago. \n\nThe Guard keyboard shortcuts are in fact signals that are being trapped. Signals are specified in POSIX.1 standard and not all operating systems are full POSIX compliant (like embedded systems and windows). You can send signals to Guard with the `kill` command on Unix like operating systems.\n\nGuard uses the following signals:\n- `SIGQUIT` => Run all\n- `SIGINT` => Stop\n- `SIGTSTP` => Reload\n\nYou can set the options for a terminal device interface with the `stty` command and list the current control characters for signals with:\n\n```\n$ stty -a\ncchars: discard = ^O; dsusp = ^Y; eof = ^D; eol = <undef>;\neol2 = <undef>; erase = ^?; intr = ^C; kill = ^U; lnext = ^V;\nmin = 1; quit = ^\\; reprint = ^R; start = ^Q; status = ^T;\nstop = ^S; susp = ^Z; time = 0; werase = ^W;\n```\n\nNow you can change the control character for `SIGQUIT` with\n\n```\nstty quit \"^R\"\n```\n\nThis maps Guards' Run all to `Ctrl-R`. You may want to have a look at man page of `stty` to see what you can do.\n I also added this information to the wiki and added links to it.\n  This behavior depends on how file system notifications work: They don't catch file changes at the content level, they catch changes at the file attribute level. For example, FSEvent provides no notifications for changes to individual files, so Guard has to figure it out based on the file modification timestamp.\n\nIf you want to check if the file content has been changed, you'll have to duplicate the content to be able to compare it when a file system notification is triggered. This is costly to implement and would slow down Guard massively, because you'll have to clone the whole directory on startup, and read the content of all files within a directory where a single file has been changed. \n\nI think this is an overkill and would not make much sense to implement.\n Hashing the file content would be a good way to implement this! I did  a small test to measure the time that is needed to generate a md5 on each file in my current project (4061 files), and it took around 4 seconds:\n\n```\ntime find . -type file -exec md5 {} > /dev/null \\;                           sigint \u21b5\nnoglob find . -type file -exec md5 {} \\; > /dev/null  0.93s user 2.39s system 87% cpu 3.815 total\n```\n\nI'd like it to see this feature coming into Guard, but I suggest to turn off by default. I'm thinking about implementing some kind of system wide and project specific `.guardrc`, so that pros can configure they Guard how they like it without providing some options each time.\n Great implementation. I like the lazy SHA1 generation to avoid costly pre-calculation. I think it's the best solution in terms of speed and user experience.\n Yes exactly, I would also not make this an option, because a user would not expect a Guard action when the content has not been changed. This is what I meant with great user experience ;-) \n  This is something your Guard should handle. You can easily get an absolute path from a relative one by using [File.expand_path](http://www.ruby-doc.org/core/classes/File.html#M000022).\n Ok, now I understand your intention - thanks for clarify.\n\nIt's not only about joining `Dir.pwd` to the files being watched, it's about initializing the listener. To have a performant Guard, the watched files should be as less as possible, otherwise Guard would be flooded with file system events from the whole system. So when you want to get file notifications from your project directory `/home/anithri/workspace/alfred` **and**  `/tmp/`, you have to watch `/` to get notifications from both directories, which is a bad idea.\n\nThe current Guard implementation allows only one listener, so you have to refactor it to handle multiple listeners. This is something that is also discussed in #52 for another reason. Perhaps another approach is to enhance the `group` keyword:\n\n```\nguard 'coffeescript', :input => 'app/coffeescripts', :output => 'public/javascripts/compiled'\n\ngroup 'backend' do\n  guard 'rspec', :cli => '--color --format doc' do\n    watch(%r{^spec/.+_spec\\.rb})\n    watch(%r{^lib/(.+)\\.rb})         { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  end\nend\n\ngroup 'output', :listen => '/tmp' do\n  guard 'livereload' do\n    watch(\"output.hmtl\")\n  end\nend\n```\n\nTo make the above Guardfile work, we need to implement the following functionality:\n- Guards not defined within a group must go into an anonymous top-level group (perhaps the `main` group, so you could start it with `guard -g main`).\n- Collect the watchers in the DSL by group. \n- Accept a `:listen` option to set the directory to listen on a `group` level.\n- Change the listeners to allow passing a directory to listen to, defaults to `Dir.pwd`.\n- Change the Guard main module to handle multiple listeners.\n\nThis is something I'm also interested to help implementing.\n I've no idea and I do not remember that a `:listen` option has been added to the group DSL. But I guess it was around the time where the `watchdir` and `guardfile` options have been added to Guard, which will allow to split the Guard plugins into different Guardfiles and have them watch different directory. \n  This was exactly one of the reasons why I implemented the group feature: It enables you to selectively start different guard groups in separate threads.\n\nI admit it would be very nice if each guard group would be automatically run in a separate thread when no option `--group` is passed on the command line, but implementing this would increase code complexity a lot due to the design of Guard (the setup of the different guards and the listener are done statically in the Guard module).\n\nSo if you have a `Guardfile` flike this:\n\n```\ngroup 'backend' do\n  guard 'rspec', :cli => '--color --format doc' do\n    watch(%r{^spec/.+_spec\\.rb})\n    watch(%r{^lib/(.+)\\.rb})         { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  end\nend\n\ngroup 'frontend' do\n  guard 'coffeescript', :input => 'app/coffeescripts', :output => 'public/javascripts/compiled'\n  guard 'livereload' do\n    watch(%r{^app/.+\\.(erb|haml)})\n  end\nend\n```\n\nJust open a terminal and run `guard -g fronend` and another terminal to run `guard -g backend`. It's not as simple as just running `guard` and have the groups separated, but it works and it's not bad to have the outputs of the groups separated.\n I'd also prefer to start Guard only once. I've spent some time today to test some ideas how this can be done, but haven't found a simple solution yet. #19 has been solved with a [workaround](https://github.com/guard/guard-coffeescript/blob/master/lib/guard/coffeescript.rb#L33) within guard-coffeescript, but it should be handled in common by Guard. I've some more ideas how to achieve this and will play some more with Guard the next days.\n Not sure if there's again an issue with inotify, with the new listening process introduced in Guard 0.7.0 it should be possible to add this feature without too much problems.\nI think parallelizing Guard groups is the way to go, we just need to take care of not having the same group running twice in the same time (a group should wait for itself before running again). \n Oh my dear GitHub issue, I've looked at you many times, because you're still in `open` state. I've also read your completely at least three times, which takes ages... But nobody cares about you, not you, dear reader and recipient of the notification, not the creator of the issue, not anyone of the Guard maintainers, just nobody. There's no discussion since 11 months and nobody want to spend some time for you. In short: we don't need you. I'm sorry about you, but I'm going to close you now...\n  Great, but your commit will break the libnotify notification (https://github.com/guard/guard/blob/master/lib/guard/notifier.rb#L22) because you have removed the title attribute. Please can you fix that and update & add specs. Thanks!\n  Yeah, Windows support is a great thing to have!\nHave you an idea about a possible replacement for TSTP signal (Ctrl-Z) to handle \"reload\" on Windows? \nDo you think it's easy to add something like http://win32utils.rubyforge.org instead of polling for Windows?\n rb-fchange looks great, currently FSEvent on Mac OS X do the same thing (only say when something change in a (sub) folder but not exactly what), so adding a win32 listener should be really easy (here [the darwin listener](https://github.com/guard/guard/blob/master/lib/guard/listeners/darwin.rb). Can you tried to do that? It would be awesome!\n\nFor the Signal trapping have you got the time to try https://github.com/Spakman/syscalls on Windows?\n\nThanks!\n  Looks nice, thanks Jeff!\n  Yes that kind of feature was commented ( https://github.com/guard/guard/issues/14 ) but I never have the time to implement it. In the meantime some guard like guard-rspec have implement that as an option ( https://github.com/guard/guard-rspec/commit/f2418995cfb45fb8a5e34af6d86ef8e1bc2e4735 ).\nPlease add your thoughts on the #14 thread issue. \n  @gvt Wich Xcode version do you have? On which folder path are you watching changes?\n @gvt have you tried without the hyphen (just to be sure)? :) \n @gvt ok so feel free to open an issue on https://github.com/thibaudgg/rb-fsevent/issues\n @ttilley 0.9.0.pre1 ? that's a big jump forward :)\n  open_gem dependency has been removed yesterday in Guard 0.3.2, thanks for this feedback!\n  Hooks could be a great feature, but It would be much nicer if existing guard didn't have too be updated (which is not the case with your implementation, right?) I think it must be possible to add it directly inside Guard code.\n\n@rymai, not sure if adding that in the Guardfile is very useful/handy, what do you think @monocle?\n @rymai ready to merged this one? :D\n great, thanks!\n  Do you have installed Bundler in Ruby 1.9.2? `Could not find RubyGem bundler`\n Please, can you give your Gemfile & Guardfile?\n You are right, bundler is no more required in the main file (it was needed in [version 0.1.1 in Guard#locate_guard](https://github.com/guard/guard/blob/v0.1.1/lib/guard.rb#L54)). I forgot to remove the require, my fault!\n  Thanks! Merged.\n  Finally merged, thanks!\n  Now I merged the reset_line issue, do you still have this issue? (Please close this issue if not)\n  Hey,\n\nwe simply don't use platform conditions, and growl is in the `Gemfile.lock`, so what? :-)\nAs far as I know, Linux doesn't complain about that.\n\nI don't get why you had \"conflicts\", if you install both gems (growl and libnotify), the developers on Mac will see notifications via Growl, the developers on Linux will see them via Libnotify. No?\n\nAnyway, this question is not related to Guard at all! ;-)\nIt's more a Bundler question.\n\nR\u00e9my\n Still an issue? (Please close this issue if not)\n  It's @yannlugrin that have code the inotify listener, Yann can you check that? Or maybe @nex3 could directly merge this fix if @jcnnghm make a pull request.\n\nThanks to all :)\n Cool! I'm glad that there is now a solution for this issue. Thank you Sven for taking action.\n just merged & released in `rb-inotify` version 0.8.5. I'll require this version for Guard 0.4.0\n Done [here](https://github.com/guard/guard/commit/deec4135a9a36c775a6c460cd13214d089bb36f1).\n  Still an issue for you? (Please close this issue if not)\n Do you know if there is an equivalent for \"QUIT\" signal on windows?\nYou can change it here: https://github.com/guard/guard/blob/master/lib/guard/interactor.rb\nSome tips here: http://stackoverflow.com/questions/876006/how-to-trap-signal-on-ruby-running-on-windows\n\nAs I don't have a Windows machine I can't test it for you, sorry. In the meantime if other signals trapping are working (INT & TSTP) and you don't use too much \"QUIT\" you can just comment it.\n  I can think of two ways of solving this issue:\n1. Use a `guard.lock` file to mark a directory as being watched.\n   \n   **Pro:** Very easy to implement.\n   **Con:** Generates a temporary file that must be manually removed when Guard terminates unexpected and must be ignored by the version control system.\n   \n   **I think the temporary lockfile causes the same amount of problems like running accidentally two Guards in the same project.**\n2. Use some kind of inter process communication (IPC).\n   \n   **Pro:** Ease of use.\n   **Con:** Hard to implement, because Guard runs on many Rubies and OS and any kind of IPC is quite different an each combination. Most Ruby libraries I've found are POSIX-only and don't run on JRuby and Windows.\n   \n   **The problem is interesting to solve, but would increase the complexity of Guard immense.**\n\nI'd not fix this issue, because the cost of the fix is too high from either ease of use or development complexity. This problem should be solved in a separate Gem for this very specific problem that could also be very interesting for other Ruby tools.\n  +1 for the latest DSL proposal. It's perfectly self-describing.\n Oh my dear GitHub issue, I've looked at you many times, because you're still in `open` state. I've also read your completely at least three times, which takes ages... But nobody cares about you, not you, dear reader and recipient of the notification, not the creator of the issue, not anyone of the Guard maintainers, just nobody. There's no discussion since 10 months and nobody want to spend some time for you. In short: we don't need you. I'm sorry about you, but I'm going to close you now...\n  Great, please can you provide a pull request to fix this. Thx!\n", "text_all_count": 26525, "text_word_token": ["Hi", "I", "thanks", "for", "the", "report", "NUMBER", "However", "since", "this", "be", "relate", "to", "guard", "rspec", "you", "should", "report", "the", "issue", "there", "LINK", "rspec", "issue", "new", "NUMBER", "Btw", "have", "you", "tried", "with", "focus_on_failed", "false", "You", "re", "welcome", "thibaudgg", "maybe", "focus_on_failed", "should", "be", "false", "by", "default", "what", "do", "you", "think", "Yeah", "I", "know", "this", "has", "change", "all", "I", "say", "be", "that", "it", "s", "not", "the", "least", "surprising", "option", "IMHO", "and", "not", "so", "fundamental", "to", "me", "NUMBER", "Hi", "daniel", "this", "be", "normally", "fix", "since", "Listen", "NUMBER", "LINK", "NUMBER", "Please", "make", "sure", "you", "re", "use", "the", "latest", "Guard", "and", "Listen", "version", "NUMBER", "daniel", "You", "re", "welcome", "thibaudgg", "Of", "course", "I", "was", "Thanks", "you", "re", "right", "Guard", "NUMBER", "release", "thank", "you", "Ok", "I", "ve", "push", "a", "fix", "for", "this", "issue", "NUMBER", "Please", "try", "guard", "master", "gem", "guard", "github", "guard", "in", "your", "Gemfile", "and", "let", "me", "know", "how", "it", "goes", "NUMBER", "Thanks", "in", "advance", "Awesome", "Guard", "NUMBER", "release", "This", "be", "definitely", "a", "Listen", "issue", "thanks", "guys", "stas", "wulftone", "tinamou", "Could", "you", "please", "report", "this", "issue", "in", "the", "Listen", "issue", "tracker", "LINK", "only", "one", "issue", "report", "should", "be", "sufficient", "since", "Ubuntu", "Kubuntu", "be", "based", "on", "Debian", "if", "I", "m", "not", "mistaken", "blackheaven", "Could", "you", "please", "create", "another", "issue", "in", "the", "Listen", "issue", "tracker", "LINK", "for", "FreeBSD", "not", "support", "btw", "did", "you", "add", "gem", "rb", "kqueue", "NUMBER", "in", "your", "Gemfile", "Thanks", "in", "advance", "guys", "NUMBER", "Hello", "I", "ve", "push", "a", "commit", "to", "master", "so", "that", "debugging", "should", "be", "easier", "backtraces", "be", "now", "display", "when", "in", "debug", "mode", "NUMBER", "Could", "you", "try", "guard", "master", "in", "debug", "mode", "in", "your", "Gemfile", "gem", "guard", "github", "guard", "and", "use", "one", "notifier", "at", "a", "time", "in", "your", "Guardfile", "notification", "tmux", "first", "then", "notification", "terminal_title", "and", "let", "us", "know", "what", "the", "error", "and", "backtraces", "be", "Thanks", "in", "advance", "This", "be", "fix", "in", "NUMBER", "Hi", "I", "ve", "push", "a", "commit", "that", "might", "fix", "this", "issue", "NUMBER", "Please", "try", "guard", "master", "gem", "guard", "github", "guard", "in", "your", "Gemfile", "and", "let", "me", "know", "how", "it", "goes", "NUMBER", "Thanks", "Right", "seems", "like", "a", "regression", "to", "me", "I", "agree", "nice", "issue", "report", "NUMBER", "It", "s", "due", "to", "the", "way", "vim", "saves", "the", "file", "LINK", "of", "inotify", "events", "for", "different", "editors", "vim", "I", "believe", "this", "be", "a", "guard", "rspec", "implementation", "issue", "NUMBER", "We", "could", "replace", "run_on_changes", "with", "run_on_modifications", "here", "LINK", "rspec", "blob", "master", "lib", "guard", "rspec", "NUMBER", "rb", "L", "NUMBER", "but", "specs", "wouldn", "t", "run", "when", "new", "file", "be", "really", "created", "i", "NUMBER", "e", "NUMBER", "not", "on", "a", "vim", "save", "NUMBER", "thibaudgg", "what", "do", "you", "think", "Closing", "this", "issue", "since", "this", "will", "be", "fix", "in", "guard", "rspec", "NUMBER", "Hi", "thank", "you", "very", "much", "for", "the", "very", "good", "report", "this", "be", "actually", "an", "already", "report", "Listen", "issue", "guard", "listen", "NUMBER", "Feel", "free", "to", "comment", "on", "guard", "listen", "NUMBER", "and", "submit", "a", "pull", "request", "it", "s", "not", "hard", "to", "fix", "thanks", "Hi", "RamiroCampa", "I", "ve", "push", "a", "commit", "that", "should", "fix", "this", "issue", "NUMBER", "Could", "you", "please", "try", "guard", "master", "gem", "guard", "github", "guard", "in", "your", "Gemfile", "and", "let", "me", "know", "Thanks", "in", "advance", "i", "change", "the", "guard", "source", "as", "specified", "in", "bundler", "documentation", "it", "throw", "me", "an", "error", "What", "was", "this", "error", "Please", "try", "only", "with", "gem", "guard", "github", "guard", "to", "avoid", "having", "Bundler", "issue", "on", "top", "of", "Guard", "issue", "and", "be", "sure", "to", "run", "the", "Bundler", "troubleshooting", "steps", "LINK", "other", "problem", "NUMBER", "Do", "you", "have", "git", "install", "jyrkij", "It", "should", "be", "fix", "in", "master", "did", "you", "try", "it", "gem", "guard", "github", "guard", "in", "your", "Gemfile", "Ok", "thanks", "for", "the", "feedback", "Hi", "If", "Guardfile", "lint", "be", "in", "a", "directory", "watched", "by", "Guard", "it", "should", "be", "reloaded", "NUMBER", "Could", "you", "please", "give", "more", "details", "about", "the", "issue", "see", "CONTRIBUTING", "NUMBER", "md", "LINK", "Thanks", "Ok", "thank", "your", "for", "these", "useful", "infos", "NUMBER", "I", "think", "this", "might", "be", "an", "issue", "that", "be", "now", "resolve", "since", "Guard", "NUMBER", "Could", "you", "update", "to", "Guard", "NUMBER", "and", "let", "me", "know", "if", "you", "still", "encounter", "this", "issue", "Thanks", "in", "advance", "NUMBER", "Ok", "I", "managed", "to", "reproduce", "the", "issue", "now", "Looking", "into", "it", "now", "Ok", "find", "the", "culprit", "fix", "s", "come", "soon", "Ok", "this", "be", "now", "fix", "in", "master", "could", "you", "try", "it", "gem", "guard", "github", "guard", "Thanks", "Awesome", "rainbow", "You", "re", "right", "now", "before", "the", "refactoring", "the", "options", "were", "pass", "to", "the", "NUMBER", "notify", "method", "but", "now", "they", "re", "pass", "at", "initialization", "time", "to", "the", "notifier", "and", "they", "re", "not", "merge", "with", "the", "options", "pass", "to", "the", "notify", "method", "NUMBER", "Thanks", "for", "the", "pull", "request", "I", "ll", "merge", "it", "and", "refactor", "the", "Notifier", "Base", "class", "to", "always", "pass", "options", "to", "the", "notify", "method", "NUMBER", "Thanks", "for", "the", "report", "and", "for", "the", "fix", "I", "ve", "release", "NUMBER", "LINK", "I", "m", "not", "sure", "about", "that", "currently", "we", "don", "t", "perform", "notifier", "specific", "stuff", "when", "a", "Guard", "plugin", "runs", "a", "specific", "task", "NUMBER", "Could", "you", "describe", "more", "precisely", "what", "you", "d", "like", "to", "achieve", "jasonm", "NUMBER", "Any", "update", "yet", "Thanks", "jasonm", "NUMBER", "fix", "Awesome", "thank", "you", "cablegram", "Was", "the", "PR", "actually", "ok", "to", "be", "merge", "I", "ve", "seen", "that", "your", "latest", "message", "originally", "include", "NUMBER", "todos", "items", "and", "if", "yes", "can", "I", "release", "a", "new", "pre", "release", "Ok", "cool", "I", "ve", "actually", "add", "test", "for", "this", "based", "on", "your", "suggestion", "LINK", "Thanks", "Hi", "could", "you", "update", "to", "Guard", "NUMBER", "and", "let", "me", "know", "if", "you", "still", "encounter", "the", "issue", "Thanks", "in", "advance", "Please", "update", "to", "latest", "Guard", "NUMBER", "and", "let", "me", "know", "if", "you", "still", "encounter", "the", "issue", "Thanks", "in", "advance", "Actually", "the", "latest", "release", "be", "now", "NUMBER", "Close", "for", "lack", "of", "reply", "feel", "to", "re", "open", "if", "the", "issue", "be", "confirmed", "NUMBER", "Thanks", "guys", "do", "you", "think", "these", "change", "LINK", "diff", "NUMBER", "might", "cause", "this", "issue", "Ok", "NUMBER", "netzpirat", "do", "you", "see", "anything", "in", "these", "change", "that", "might", "cause", "this", "issue", "Yeah", "we", "have", "time", "to", "ensure", "Listen", "NUMBER", "be", "stable", "and", "then", "release", "Guard", "and", "Listen", "NUMBER", "together", "NUMBER", "I", "ve", "fix", "an", "issue", "occurring", "in", "NUMBER", "pre", "so", "I", "m", "very", "interested", "in", "having", "NUMBER", "pre", "NUMBER", "release", "Thanks", "NUMBER", "pre", "NUMBER", "release", "shyam", "habarakada", "Could", "you", "try", "this", "branch", "and", "let", "me", "know", "if", "this", "fix", "the", "issue", "Thanks", "in", "advance", "Yeah", "I", "was", "not", "sure", "since", "I", "cannot", "reproduce", "the", "issue", "NUMBER", "P", "But", "maybe", "this", "be", "not", "clear", "in", "the", "what", "TerminalNotifier", "be", "in", "fact", "it", "s", "not", "a", "notifier", "in", "the", "terminal", "NUMBER", "Closing", "this", "in", "favour", "of", "NUMBER", "thanks", "Hi", "It", "s", "strange", "we", "re", "use", "both", "guard", "NUMBER", "and", "better_errors", "NUMBER", "successfully", "NUMBER", "Thanks", "very", "much", "for", "that", "I", "think", "I", "find", "the", "problem", "better_errors", "depends", "on", "coderay", "NUMBER", "while", "pry", "required", "by", "Guard", "since", "the", "NUMBER", "depends", "on", "coderay", "NUMBER", "NUMBER", "The", "version", "NUMBER", "of", "coderay", "has", "be", "release", "on", "August", "NUMBER", "but", "since", "pry", "doesn", "t", "accept", "coderay", "NUMBER", "Bundler", "select", "the", "first", "version", "of", "Guard", "that", "doesn", "t", "depends", "on", "pry", "the", "NUMBER", "NUMBER", "Solutions", "best", "Update", "Pry", "dependencies", "LINK", "to", "depends", "on", "coderay", "NUMBER", "NUMBER", "TAG", "NUMBER", "to", "your", "Gemfile", "so", "that", "the", "latest", "version", "of", "coderay", "doesn", "t", "prevent", "the", "latest", "Guard", "version", "from", "be", "use", "NUMBER", "P", "The", "second", "solution", "definitely", "works", "yes", "netzpirat", "Do", "you", "think", "my", "reasoning", "make", "sense", "Hi", "guys", "I", "cannot", "reproduce", "the", "issue", "NUMBER", "For", "me", "the", "terminal", "title", "be", "cleared", "when", "I", "exit", "Guard", "NUMBER", "Me", "too", "NUMBER", "What", "be", "the", "steps", "to", "reproduce", "On", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "shyam", "habarakada", "notifications", "github", "NUMBER", "com", "write", "I", "m", "on", "current", "latest", "OSX", "NUMBER", "What", "be", "you", "on", "rymai", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "For", "me", "I", "have", "this", "once", "specs", "pass", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "png", "And", "then", "the", "title", "goes", "back", "to", "normal", "once", "I", "exit", "Guard", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "eef", "NUMBER", "ed", "NUMBER", "png", "The", "strange", "thing", "be", "that", "in", "your", "case", "it", "update", "the", "tab", "s", "title", "NUMBER", "not", "the", "window", "s", "one", "NUMBER", "Sorry", "but", "no", "NUMBER", "After", "specs", "run", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "be", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "png", "After", "exit", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "ae", "NUMBER", "cd", "NUMBER", "png", "Awesome", "NUMBER", "shyam", "habarakada", "Could", "you", "open", "a", "pull", "request", "in", "the", "following", "days", "for", "that", "you", "can", "do", "it", "against", "master", "as", "I", "just", "merge", "the", "v", "NUMBER", "branch", "into", "it", "Thanks", "Hi", "guys", "great", "idea", "NUMBER", "I", "suggest", "to", "keep", "it", "for", "NUMBER", "x", "so", "we", "can", "focus", "on", "release", "NUMBER", "first", "what", "do", "you", "think", "W", "NUMBER", "t", "I", "ve", "change", "the", "milestone", "to", "NUMBER", "Ok", "NUMBER", "pre", "release", "I", "ve", "also", "migrated", "all", "the", "CHANGELOG", "into", "GitHub", "release", "LINK", "NUMBER", "Yes", "manually", "D", "Yes", "why", "not", "Hi", "Currently", "the", "ignore", "and", "filter", "methods", "be", "forwarded", "to", "Listen", "so", "that", "they", "have", "effect", "only", "on", "a", "file", "change", "not", "when", "you", "hit", "run", "all", "or", "reload", "NUMBER", "That", "said", "that", "s", "could", "be", "considered", "a", "bug", "NUMBER", "guard", "core", "team", "what", "do", "you", "think", "Work", "in", "progress", "NUMBER", "Ok", "guys", "I", "ve", "write", "the", "guide", "to", "upgrade", "to", "Guard", "NUMBER", "mostly", "for", "plugins", "authors", "LINK", "to", "Guard", "NUMBER", "comments", "feedback", "fix", "and", "modifications", "welcome", "So", "now", "I", "propose", "the", "following", "steps", "before", "release", "NUMBER", "NUMBER", "Do", "NUMBER", "and", "NUMBER", "Once", "do", "go", "to", "next", "step", "NUMBER", "NUMBER", "The", "guard", "core", "team", "and", "people", "who", "want", "could", "test", "drive", "the", "v", "NUMBER", "branch", "to", "spot", "any", "obvious", "breakage", "big", "issue", "NUMBER", "After", "NUMBER", "days", "of", "no", "new", "issue", "go", "to", "next", "step", "NUMBER", "NUMBER", "Once", "stable", "for", "alpha", "we", "could", "optionally", "merge", "this", "branch", "and", "release", "NUMBER", "alpha", "and", "ask", "our", "users", "to", "try", "it", "NUMBER", "After", "NUMBER", "days", "of", "no", "new", "issue", "go", "to", "next", "step", "NUMBER", "NUMBER", "Release", "NUMBER", "Celebrate", "NUMBER", "Note", "Durations", "be", "approximate", "NUMBER", "We", "could", "even", "skip", "step", "NUMBER", "Yeah", "we", "could", "try", "use", "GitHub", "release", "only", "I", "actually", "tried", "them", "here", "LINK", "_content_type", "release", "NUMBER", "lol", "I", "knew", "you", "d", "say", "that", "It", "was", "more", "convenient", "to", "write", "the", "change", "one", "by", "one", "in", "the", "CHANGELOG", "and", "create", "the", "release", "afterward", "and", "I", "also", "wasn", "t", "sure", "how", "the", "GitHub", "release", "work", "NUMBER", "That", "said", "if", "we", "don", "t", "use", "the", "CHANGELOG", "anymore", "we", "ll", "have", "to", "create", "a", "draft", "release", "with", "master", "as", "target", "and", "once", "the", "new", "gem", "release", "be", "publish", "publish", "the", "GitHub", "release", "with", "the", "target", "set", "as", "the", "last", "gem", "s", "release", "commit", "NUMBER", "Ok", "I", "made", "a", "draft", "release", "LINK", "I", "d", "say", "let", "s", "experiment", "use", "GitHub", "release", "for", "the", "NUMBER", "alpha", "and", "keep", "use", "the", "CHANGELOG", "until", "it", "s", "migrated", "to", "GitHub", "release", "or", "not", "NUMBER", "Ok", "guard", "core", "team", "NUMBER", "NUMBER", "NUMBER", "be", "now", "do", "so", "it", "s", "time", "to", "go", "to", "the", "next", "step", "NUMBER", "I", "m", "thinking", "of", "test", "driving", "the", "v", "NUMBER", "branch", "tomorrow", "Tuesday", "before", "release", "NUMBER", "alpha", "NUMBER", "Then", "we", "ll", "allow", "a", "few", "more", "days", "for", "issue", "to", "come", "and", "be", "fix", "and", "then", "release", "NUMBER", "What", "do", "you", "think", "about", "that", "plan", "Hi", "As", "always", "please", "follow", "the", "CONTRIBUTING", "LINK", "file", "an", "issue", "guidelines", "so", "that", "we", "can", "help", "you", "better", "thanks", "So", "what", "should", "we", "do", "in", "the", "case", "when", "a", "group", "be", "call", "all", "I", "suggest", "display", "an", "error", "message", "and", "quit", "Guard", "NUMBER", "Thanks", "for", "the", "report", "Fixed", "in", "NUMBER", "Hi", "please", "give", "us", "more", "info", "first", "LINK", "file", "an", "issue", "Thanks", "Thank", "you", "what", "s", "your", "guard", "version", "Ok", "have", "you", "tried", "add", "rb", "readline", "to", "your", "Gemfile", "Btw", "you", "can", "remove", "gem", "rb", "fsevent", "from", "your", "Gemfile", "it", "s", "automatically", "add", "by", "latest", "version", "of", "Guard", "NUMBER", "You", "re", "welcome", "Notifiers", "be", "now", "classes", "with", "a", "common", "interface", "inherited", "from", "Guard", "Notifier", "Base", "notify", "required", "NUMBER", "available", "optional", "NUMBER", "supported_hosts", "optional", "NUMBER", "gem_name", "optional", "What", "do", "you", "think", "of", "this", "Also", "I", "think", "after", "this", "refactoring", "it", "d", "be", "very", "easy", "to", "extract", "the", "notifiers", "to", "a", "separate", "gem", "NUMBER", "I", "couldn", "t", "find", "such", "gem", "there", "s", "notifier", "LINK", "but", "I", "don", "t", "really", "like", "its", "approach", "NUMBER", "so", "I", "thought", "we", "could", "create", "a", "new", "one", "and", "name", "it", "Brief", "What", "do", "you", "guard", "core", "team", "think", "Thanks", "guys", "tell", "sounds", "right", "but", "it", "s", "already", "taken", "LINK", "on", "RubyGems", "NUMBER", "org", "NUMBER", "Ok", "thanks", "guys", "Here", "be", "a", "little", "to", "do", "list", "for", "me", "before", "I", "merge", "this", "PR", "don", "t", "hesitate", "to", "add", "tasks", "if", "you", "think", "I", "forgot", "some", "Deprecate", "Guard", "Notifier", "NUMBER", "notify", "old", "signature", "Update", "CHANGELOG", "Edit", "Actually", "the", "signature", "didn", "t", "change", "so", "there", "s", "nothing", "else", "to", "do", "here", "thibaudgg", "I", "think", "it", "was", "a", "joke", "Agreed", "timmfin", "could", "you", "rebase", "this", "pull", "request", "please", "Thanks", "Thank", "you", "NUMBER", "release", "That", "seems", "fair", "enough", "thanks", "Thanks", "to", "you", "yeah", "the", "second", "PR", "be", "welcome", "too", "NUMBER", "Hi", "Praveen", "it", "seems", "to", "be", "more", "an", "issue", "on", "the", "plugin", "side", "of", "livereload", "please", "try", "to", "contact", "support", "livereload", "NUMBER", "com", "NUMBER", "You", "doesn", "t", "use", "the", "official", "one", "LINK", "how", "do", "i", "install", "and", "use", "the", "browser", "extensions", "Nops", "ask", "support", "livereload", "NUMBER", "com", "NUMBER", "Good", "to", "hear", "thanks", "Please", "open", "an", "issue", "in", "the", "guard", "jasmine", "repository", "instead", "NUMBER", "Thanks", "Oops", "sorry", "my", "bad", "Looks", "like", "a", "Bundler", "issue", "closing", "this", "for", "now", "due", "to", "lack", "of", "activity", "NUMBER", "Feel", "free", "to", "re", "open", "if", "you", "have", "anything", "new", "thanks", "Looks", "great", "thanks", "Thanks", "Thanks", "for", "remove", "it", "tilsammans", "I", "have", "update", "the", "wiki", "because", "from", "Listen", "release", "NUMBER", "these", "adapters", "be", "dependencies", "of", "the", "Listen", "gem", "so", "you", "doesn", "t", "need", "to", "add", "them", "in", "your", "Gemfile", "anymore", "NUMBER", "Perfect", "PR", "thanks", "x", "Change", "Guard", "Guard", "with", "Guard", "Plugin", "x", "New", "signature", "for", "Guard", "Plugin", "NUMBER", "initialize", "x", "Behavior", "change", "for", "Guard", "guards", "x", "Behavior", "change", "for", "Guard", "group", "x", "New", "signature", "for", "Guard", "add_guard", "x", "Deprecation", "of", "Guard", "NUMBER", "get_guard_class", "replaced", "by", "Guard", "PluginUtil", "plugin_class", "x", "Deprecation", "of", "Guard", "NUMBER", "locate_guard", "replaced", "by", "Guard", "PluginUtil", "plugin_location", "x", "Deprecation", "of", "Guard", "NUMBER", "guard_gem_names", "replaced", "by", "Guard", "PluginUtil", "NUMBER", "plugin_names", "x", "Document", "the", "new", "notifiers", "system", "x", "Update", "LINK", "Guard", "programmatically", "cookbook", "Ok", "I", "ve", "write", "the", "guide", "to", "upgrade", "to", "Guard", "NUMBER", "mostly", "for", "plugins", "authors", "LINK", "to", "Guard", "NUMBER", "Comments", "feedback", "fix", "and", "modifications", "welcome", "thibaudgg", "Yeah", "you", "re", "right", "NUMBER", "I", "think", "I", "made", "this", "change", "because", "most", "of", "the", "time", "you", "d", "call", "Guard", "NUMBER", "guards", "rspec", "so", "it", "d", "be", "more", "convenient", "to", "get", "a", "Guard", "Plugin", "instead", "of", "an", "array", "but", "that", "s", "not", "worth", "breaking", "the", "current", "API", "IMHO", "and", "the", "method", "be", "named", "guards", "so", "it", "s", "also", "less", "surprising", "to", "always", "get", "an", "array", "in", "return", "NUMBER", "I", "ll", "revert", "this", "change", "netzpirat", "Thank", "you", "Ok", "I", "ve", "actually", "created", "Guard", "NUMBER", "plugin", "filter", "and", "Guard", "NUMBER", "group", "filter", "to", "return", "the", "first", "plugin", "group", "matching", "the", "filter", "to", "handle", "this", "case", "cleanly", "And", "I", "ve", "update", "the", "wiki", "page", "NUMBER", "Hi", "guys", "With", "NUMBER", "in", "mind", "I", "ve", "made", "many", "refactorings", "to", "almost", "all", "the", "parts", "of", "the", "code", "As", "discussed", "in", "NUMBER", "I", "ve", "deprecate", "Guard", "Guard", "in", "favor", "of", "Guard", "Plugin", "with", "a", "deprecation", "warning", "message", "show", "able", "with", "the", "show", "deprecations", "options", "NUMBER", "I", "ve", "moved", "many", "methods", "from", "Guard", "to", "Guard", "Deprecator", "Guard", "Setuper", "Guard", "PluginUtil", "NUMBER", "See", "the", "individual", "commit", "for", "the", "details", "NUMBER", "I", "ve", "also", "moved", "Guard", "Hook", "into", "Guard", "Plugin", "Hooker", "and", "created", "a", "new", "Guard", "Plugin", "Base", "for", "the", "common", "methods", "of", "Guard", "Plugin", "and", "Guard", "Guard", "deprecate", "NUMBER", "See", "the", "individual", "commit", "for", "the", "other", "stuff", "I", "forgot", "to", "mention", "here", "Thanks", "for", "the", "feedback", "Cool", "thanks", "It", "s", "only", "refactorings", "but", "I", "think", "it", "s", "needed", "I", "didn", "t", "even", "start", "the", "to", "dos", "of", "NUMBER", "P", "Done", "Sure", "Some", "todos", "for", "me", "before", "I", "merge", "this", "x", "Fix", "inline", "doc", "for", "Guard", "guards", "x", "Fix", "inline", "doc", "for", "Guard", "group", "x", "Fix", "inline", "doc", "for", "Guard", "add_guard", "x", "Document", "all", "the", "Guard", "Setuper", "methods", "x", "Improve", "inline", "doc", "for", "Guard", "Plugin", "Base", "name", "give", "an", "example", "x", "Improve", "inline", "doc", "for", "Guard", "Plugin", "Base", "title", "give", "an", "example", "x", "Improve", "inline", "doc", "for", "Guard", "Plugin", "Base", "to_s", "give", "an", "example", "x", "Improve", "inline", "doc", "for", "Guard", "Group", "title", "give", "an", "example", "x", "Deprecate", "Guard", "NUMBER", "locate_guard", "instead", "of", "remove", "it", "directly", "x", "Deprecate", "Guard", "NUMBER", "guard_gem_names", "instead", "of", "remove", "it", "directly", "x", "Mark", "methods", "that", "be", "not", "include", "in", "the", "public", "API", "as", "private", "x", "Allow", "Guard", "PluginUtil", "NUMBER", "initialize", "to", "pass", "a", "full", "plugin", "name", "e", "NUMBER", "g", "NUMBER", "guard", "rspec", "or", "only", "its", "name", "e", "NUMBER", "g", "NUMBER", "rspec", "x", "Check", "the", "generate", "Yard", "doc", "SamSaffron", "what", "do", "you", "think", "of", "use", "Celluloid", "Notification", "LINK", "for", "this", "I", "m", "rewriting", "the", "Listen", "gem", "with", "Celluloid", "and", "I", "m", "thinking", "to", "also", "maybe", "use", "it", "for", "Guard", "NUMBER", "so", "it", "could", "be", "a", "good", "use", "case", "for", "it", "NUMBER", "What", "would", "be", "the", "id", "here", "Some", "unique", "identifier", "that", "change", "every", "run", "or", "a", "guard", "plugin", "identifier", "Ok", "sounds", "good", "NUMBER", "Let", "me", "finish", "the", "Listen", "rewrite", "count", "maybe", "NUMBER", "NUMBER", "weeks", "and", "I", "ll", "start", "the", "Celluloid", "transition", "for", "Guard", "NUMBER", "guard", "core", "team", "what", "do", "you", "think", "of", "use", "Celluloid", "for", "Guard", "NUMBER", "I", "m", "quite", "happy", "with", "if", "for", "Listen", "no", "commit", "publish", "yet", "sadly", "NUMBER", "big", "big", "rewrite", "Sorry", "this", "branch", "will", "be", "broken", "until", "NUMBER", "be", "merge", "Hi", "ignore", "applies", "to", "all", "Guard", "plugins", "in", "your", "Guardfile", "indeed", "Sure", "thing", "feel", "free", "to", "open", "a", "pull", "request", "thanks", "I", "don", "t", "think", "many", "people", "will", "assume", "ignore", "be", "scoped", "by", "Guard", "plugins", "but", "it", "s", "always", "better", "to", "be", "clear", "cake", "Nice", "I", "agree", "the", "old", "theme", "be", "the", "best", "NUMBER", "What", "about", "hosting", "it", "with", "gh", "pages", "LINK", "gh", "pages", "that", "support", "custom", "domain", "LINK", "up", "a", "custom", "domain", "with", "pages", "The", "wiki", "be", "great", "with", "a", "sidebar", "and", "a", "footer", "the", "only", "thing", "I", "m", "worried", "about", "be", "fact", "that", "the", "wiki", "could", "become", "outdate", "but", "it", "s", "great", "for", "stable", "stuff", "specialized", "how", "to", "and", "so", "on", "NUMBER", "So", "maybe", "we", "could", "move", "some", "stable", "stuff", "from", "the", "README", "to", "the", "wiki", "like", "Windows", "Colors", "System", "notifications", "NUMBER", "LINK", "I", "think", "it", "s", "already", "point", "to", "GH", "pages", "NUMBER", "thanks", "Awesome", "thank", "you", "Michi", "Cool", "netzpirat", "sounds", "very", "good", "I", "m", "interested", "in", "work", "on", "these", "todos", "let", "me", "know", "if", "you", "already", "want", "to", "work", "on", "them", "we", "can", "split", "them", "between", "us", "NUMBER", "Ok", "I", "was", "reviewing", "the", "API", "and", "already", "did", "some", "change", "but", "I", "was", "thinking", "of", "replacing", "Guard", "Guard", "with", "Guard", "Plugin", "for", "the", "NUMBER", "to", "make", "it", "clearer", "when", "we", "speak", "of", "Guard", "and", "when", "we", "speak", "of", "Guard", "plugins", "NUMBER", "We", "could", "still", "make", "it", "backward", "compatible", "with", "a", "deprecation", "notice", "for", "Guard", "plugins", "that", "inherits", "from", "Guard", "Guard", "NUMBER", "Wdyt", "guard", "core", "team", "Hum", "I", "see", "NUMBER", "Since", "the", "deprecation", "message", "be", "hidden", "by", "default", "and", "can", "be", "shown", "via", "the", "show_deprecations", "option", "I", "think", "that", "shouldn", "t", "be", "a", "problem", "by", "the", "way", "this", "option", "be", "not", "in", "the", "readme", "NUMBER", "Sent", "from", "my", "iPhone", "On", "NUMBER", "avr", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "Michael", "Kessler", "notifications", "github", "NUMBER", "com", "write", "That", "s", "a", "great", "suggestion", "NUMBER", "However", "we", "need", "to", "ensure", "that", "deprecations", "for", "plugin", "developers", "doesn", "t", "bother", "normal", "users", "of", "a", "plugin", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "netzpirat", "I", "m", "not", "sure", "about", "Review", "Listen", "integration", "preferably", "use", "Listen", "by", "default", "in", "blocking", "mode", "I", "ll", "let", "you", "or", "maybe", "thibaudgg", "have", "a", "look", "at", "this", "if", "you", "re", "ok", "with", "it", "Thanks", "Would", "be", "cool", "to", "have", "that", "do", "asap", "I", "could", "do", "it", "help", "if", "you", "don", "t", "have", "the", "time", "Ok", "I", "ll", "let", "you", "know", "if", "I", "start", "this", "before", "you", "Ok", "netzpirat", "since", "I", "had", "some", "time", "and", "motivation", "I", "went", "ahead", "and", "remove", "the", "deprecate", "methods", "deprecation", "warnings", "as", "agreed", "Would", "be", "cool", "to", "have", "that", "do", "asap", "I", "could", "do", "it", "help", "if", "you", "don", "t", "have", "the", "time", "Ok", "Done", "NUMBER", "Hi", "Robin", "Thanks", "for", "your", "investigation", "on", "this", "About", "your", "NUMBER", "propositions", "NUMBER", "I", "agree", "that", "this", "should", "be", "possible", "to", "pass", "a", "default", "group", "as", "a", "symbol", "with", "scope", "group", "all_specs", "NUMBER", "Feel", "free", "to", "open", "a", "pull", "request", "specifically", "for", "this", "or", "I", "could", "implement", "it", "if", "you", "prefer", "NUMBER", "Let", "me", "know", "NUMBER", "NUMBER", "Go", "for", "it", "NUMBER", "You", "should", "definitely", "create", "a", "new", "issue", "for", "this", "Thank", "you", "Perfect", "Also", "could", "you", "add", "NUMBER", "for", "all", "the", "change", "of", "the", "NUMBER", "Thanks", "PS", "I", "m", "really", "picky", "about", "changelog", "entries", "aren", "t", "I", "P", "Thank", "you", "very", "much", "you", "rock", "and", "be", "totally", "right", "Cheers", "You", "forgot", "to", "update", "the", "changelog", "I", "was", "actually", "saying", "this", "to", "aspiers", "you", "can", "now", "directly", "update", "and", "push", "it", "without", "a", "pull", "request", "You", "re", "right", "I", "shouldn", "t", "have", "direct", "push", "aka", "ci", "skip", "my", "bad", "That", "said", "I", "think", "the", "actual", "issue", "was", "that", "the", "test", "needed", "the", "guard", "rspec", "gem", "to", "be", "loaded", "Fortunately", "I", "ve", "fix", "that", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "with", "NUMBER", "cf", "NUMBER", "a", "NUMBER", "fea", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "af", "NUMBER", "That", "said", "for", "the", "Changelog", "I", "really", "encourage", "you", "to", "direct", "push", "with", "ci", "skip", "or", "without", "if", "you", "re", "really", "afraid", "to", "break", "the", "build", "NUMBER", "Sorry", "I", "thought", "you", "were", "speaking", "about", "ci", "skip", "I", "understand", "what", "you", "meant", "now", "You", "re", "right", "there", "s", "no", "guidelines", "for", "update", "the", "Changelog", "I", "ll", "try", "to", "write", "them", "down", "soon", "And", "yes", "we", "use", "Master", "when", "change", "be", "not", "include", "in", "a", "gem", "release", "yet", "NUMBER", "In", "the", "end", "it", "s", "really", "up", "to", "you", "to", "choose", "to", "submit", "pull", "request", "for", "readme", "changelog", "docs", "change", "but", "don", "t", "worry", "we", "ll", "never", "complain", "about", "new", "pull", "request", "Thanks", "It", "needed", "to", "be", "update", "on", "LINK", "indeed", "Btw", "the", "correct", "link", "be", "LINK", "We", "have", "now", "an", "open", "commit", "bit", "LINK", "open", "commit", "bit", "policy", "and", "you", "re", "the", "first", "contributor", "Welcome", "amiel", "That", "s", "a", "very", "very", "nice", "pull", "request", "that", "opens", "a", "whole", "bunch", "of", "new", "possibilities", "NUMBER", "Thanks", "a", "lot", "NUMBER", "I", "see", "no", "problem", "with", "add", "the", "options", "hash", "to", "the", "available", "method", "but", "I", "d", "add", "it", "as", "last", "parameter", "so", "the", "API", "be", "backward", "compatible", "NUMBER", "available", "silent", "false", "options", "I", "never", "had", "that", "certificate", "issue", "on", "any", "system", "I", "m", "use", "perhaps", "because", "I", "ve", "install", "LINK", "Anyway", "you", "re", "absolutely", "right", "terminal", "table", "isn", "t", "maintained", "anymore", "and", "thus", "wasn", "t", "the", "best", "choice", "for", "printing", "a", "table", "to", "the", "terminal", "NUMBER", "After", "a", "quick", "research", "I", "ve", "find", "LINK", "from", "geemus", "and", "so", "I", "rewrote", "the", "list", "and", "show", "actions", "so", "we", "can", "drop", "the", "dependency", "on", "terminal", "table", "NUMBER", "geemus", "Thanks", "It", "was", "straight", "forward", "to", "implement", "the", "only", "thing", "that", "took", "me", "a", "while", "was", "to", "realize", "that", "formatador", "has", "an", "instance", "per", "thread", "so", "I", "could", "write", "a", "spec", "LINK", "_describer_spec", "NUMBER", "rb", "L", "NUMBER", "L", "NUMBER", "for", "it", "NUMBER", "I", "hope", "you", "understand", "that", "I", "cannot", "merge", "the", "pull", "request", "without", "specs", "and", "I", "m", "going", "to", "close", "this", "PR", "now", "because", "of", "inactivity", "NUMBER", "If", "you", "decide", "to", "add", "some", "specs", "please", "reopen", "the", "pull", "request", "and", "I", "ll", "happily", "review", "it", "NUMBER", "Thanks", "a", "lot", "NUMBER", "I", "hope", "you", "understand", "that", "I", "cannot", "merge", "a", "pull", "request", "without", "work", "specs", "on", "all", "support", "platforms", "and", "I", "m", "going", "to", "close", "this", "PR", "now", "because", "of", "inactivity", "NUMBER", "If", "you", "decide", "to", "fix", "the", "specs", "please", "reopen", "the", "pull", "request", "and", "I", "ll", "happily", "review", "it", "NUMBER", "I", "m", "fine", "when", "it", "only", "works", "on", "NUMBER", "because", "we", "anyway", "drop", "NUMBER", "support", "very", "soon", "NUMBER", "Thanks", "a", "lot", "NUMBER", "I", "do", "not", "have", "Growl", "version", "NUMBER", "available", "because", "I", "ve", "bought", "version", "NUMBER", "in", "the", "App", "store", "NUMBER", "The", "following", "snippet", "works", "fine", "and", "it", "uses", "the", "default", "GNTP", "options", "ruby", "require", "ruby_gntp", "gntp", "GNTP", "NUMBER", "new", "Guard", "NUMBER", "NUMBER", "gntp", "NUMBER", "register", "app_icon", "File", "NUMBER", "expand_path", "File", "NUMBER", "join", "images", "guard", "NUMBER", "png", "notifications", "name", "notify", "enable", "true", "name", "fail", "enable", "true", "name", "pending", "enable", "true", "name", "success", "enable", "true", "gntp", "NUMBER", "notify", "name", "success", "title", "Guard", "test", "text", "This", "be", "a", "test", "Can", "you", "verify", "Growl", "listens", "on", "the", "same", "port", "Strange", "that", "code", "be", "basically", "a", "slightly", "modify", "version", "of", "the", "Guard", "Notifiers", "GNTP", "notify", "LINK", "method", "NUMBER", "I", "m", "not", "aware", "of", "any", "setup", "needed", "the", "parameters", "use", "be", "the", "default", "ones", "LINK", "L", "NUMBER", "L", "NUMBER", "NUMBER", "jamesarosen", "Did", "you", "solve", "the", "GNTP", "problem", "Ok", "that", "s", "also", "a", "solution", "P", "I", "m", "closing", "this", "then", "since", "I", "m", "not", "able", "to", "reproduce", "it", "NUMBER", "The", "Guard", "interactor", "be", "based", "on", "Pry", "and", "offers", "some", "useful", "commands", "LINK", "interactions", "which", "be", "of", "interest", "for", "all", "users", "so", "we", "like", "to", "have", "it", "enable", "by", "default", "NUMBER", "For", "Ruby", "developers", "Pry", "offers", "a", "huge", "feature", "set", "to", "examine", "the", "runtime", "and", "be", "extremely", "useful", "NUMBER", "It", "looks", "like", "the", "issue", "happens", "only", "with", "the", "latest", "Pry", "minor", "release", "NUMBER", "x", "on", "Windows", "and", "it", "s", "likely", "that", "it", "will", "be", "fix", "soon", "NUMBER", "kyrylo", "Thanks", "for", "the", "test", "NUMBER", "So", "it", "seems", "that", "NUMBER", "solves", "the", "command", "problem", "on", "Windows", "NUMBER", "What", "Ruby", "version", "be", "you", "use", "We", "had", "the", "issue", "some", "weeks", "ago", "that", "the", "characters", "were", "not", "echoed", "but", "the", "commands", "still", "worked", "NUMBER", "In", "your", "case", "be", "it", "totally", "blocked", "or", "do", "it", "react", "on", "further", "change", "like", "file", "modifications", "and", "or", "typing", "test", "TAG", "I", "just", "test", "the", "Guard", "master", "branch", "on", "my", "Windows", "NUMBER", "VM", "and", "all", "works", "fine", "NUMBER", "I", "m", "also", "use", "Ruby", "NUMBER", "p", "NUMBER", "with", "DevKit", "install", "via", "RubyInstaller", "and", "the", "wdm", "gem", "for", "file", "notifications", "NUMBER", "The", "only", "difference", "I", "see", "be", "that", "I", "run", "Guard", "with", "bundle", "exec", "guard", "NUMBER", "All", "previous", "issue", "cause", "the", "interactor", "to", "block", "were", "relate", "to", "the", "Ruby", "readline", "implementation", "on", "OS", "X", "that", "blocked", "the", "other", "threads", "because", "it", "uses", "libedit", "and", "not", "readline", "NUMBER", "I", "don", "t", "know", "how", "Ruby", "on", "Windows", "be", "build", "and", "its", "OS", "specific", "characteristics", "like", "threading", "and", "console", "IO", "NUMBER", "I", "have", "no", "clue", "what", "the", "problem", "might", "be", "and", "I", "will", "not", "spend", "any", "more", "time", "trying", "to", "reproduce", "it", "since", "I", "have", "only", "Windows", "NUMBER", "available", "and", "I", "don", "t", "know", "anything", "about", "Ruby", "on", "Windows", "NUMBER", "The", "Guard", "team", "be", "miss", "a", "developer", "that", "uses", "Windows", "as", "development", "machine", "and", "not", "only", "as", "IE", "test", "machine", "and", "has", "some", "deeper", "understanding", "of", "the", "OS", "and", "its", "Ruby", "implementation", "NUMBER", "As", "long", "we", "don", "t", "have", "such", "a", "person", "on", "board", "Guard", "will", "not", "be", "a", "first", "class", "citizen", "on", "Windows", "NUMBER", "wolfgangihloff", "You", "still", "have", "Pry", "NUMBER", "install", "NUMBER", "Please", "run", "bundle", "update", "to", "upgrade", "to", "pry", "NUMBER", "wolfgangihloff", "did", "you", "open", "an", "new", "issue", "at", "the", "Pry", "repo", "That", "s", "really", "appreciated", "NUMBER", "Most", "of", "the", "README", "and", "the", "YARDOCs", "be", "write", "by", "non", "native", "English", "speakers", "NUMBER", "What", "happens", "when", "you", "put", "each", "guard", "into", "its", "own", "group", "I", "just", "verify", "that", "multiple", "guard", "rails", "plugins", "can", "co", "exists", "in", "Guard", "by", "initializing", "a", "fresh", "Rails", "app", "install", "guard", "rails", "and", "use", "the", "Gemfile", "you", "ve", "supplied", "bash", "NUMBER", "guard", "main", "Guard", "NUMBER", "guards", "Rails", "Rails", "NUMBER", "guard", "main", "Guard", "NUMBER", "guards", "NUMBER", "NUMBER", "options", "port", "NUMBER", "environment", "test", "start_on_start", "true", "force_run", "false", "timeout", "NUMBER", "server", "nil", "debugger", "false", "daemon", "true", "NUMBER", "guard", "main", "Guard", "NUMBER", "guards", "NUMBER", "NUMBER", "options", "port", "NUMBER", "environment", "test", "start_on_start", "true", "force_run", "false", "timeout", "NUMBER", "server", "nil", "debugger", "false", "daemon", "true", "NUMBER", "guard", "main", "So", "there", "be", "no", "problem", "by", "run", "multiple", "instance", "of", "the", "same", "Guard", "plugin", "and", "the", "problem", "seems", "to", "be", "with", "the", "plugin", "implementation", "NUMBER", "Prior", "to", "Guard", "NUMBER", "the", "group", "option", "was", "use", "to", "skip", "plugins", "that", "be", "not", "in", "the", "given", "group", "when", "evaluating", "the", "Guardfile", "so", "they", "were", "not", "initialized", "and", "could", "not", "be", "use", "afterwards", "NUMBER", "Guard", "NUMBER", "introduce", "then", "the", "ability", "to", "change", "the", "scope", "at", "runtime", "and", "also", "scope", "to", "plugins", "in", "addition", "to", "group", "thus", "Guard", "will", "initialize", "all", "plugins", "when", "evaluating", "the", "Guardfile", "since", "they", "be", "use", "to", "create", "Pry", "shortcut", "commands", "NUMBER", "Guard", "also", "starts", "all", "plugins", "from", "the", "beginning", "and", "only", "scopes", "the", "run_", "actions", "to", "the", "active", "plugins", "which", "may", "not", "be", "optimal", "for", "every", "use", "case", "NUMBER", "We", "could", "change", "that", "to", "support", "plugin", "lazy", "starting", "so", "that", "only", "active", "plugins", "will", "be", "start", "on", "Guard", "start", "and", "all", "the", "others", "will", "be", "start", "prior", "the", "first", "run_", "action", "NUMBER", "Since", "we", "evaluate", "all", "plugins", "in", "the", "Guardfile", "on", "start", "we", "create", "a", "plugin", "object", "even", "for", "inactive", "plugins", "and", "thus", "the", "constructor", "will", "be", "call", "and", "the", "plugin", "initialized", "NUMBER", "There", "s", "no", "easy", "way", "to", "defer", "plugin", "initialization", "and", "I", "see", "no", "reason", "to", "do", "so", "since", "it", "should", "only", "initialize", "the", "internal", "state", "of", "the", "plugin", "and", "not", "do", "any", "plugin", "relate", "work", "NUMBER", "This", "should", "go", "into", "the", "start", "method", "and", "this", "be", "what", "we", "should", "_not_", "call", "for", "inactive", "plugins", "NUMBER", "So", "I", "still", "think", "we", "should", "implement", "lazy", "starting", "Sure", "we", "always", "welcome", "enhancements", "of", "all", "kinds", "You", "re", "right", "NUMBER", "So", "some", "plugins", "will", "never", "receive", "the", "start", "when", "we", "start", "Guard", "in", "scoped", "mode", "and", "switch", "it", "later", "at", "runtime", "NUMBER", "Yep", "I", "can", "reproduce", "it", "NUMBER", "I", "anyways", "want", "to", "improve", "the", "list", "and", "show", "actions", "so", "I", "ll", "take", "care", "of", "it", "NUMBER", "That", "sounds", "great", "and", "you", "re", "completely", "right", "The", "guardrc", "file", "has", "no", "dependency", "to", "Pry", "at", "all", "and", "really", "doesn", "t", "belong", "there", "NUMBER", "Originally", "Pry", "had", "support", "for", "a", "custom", "pryrc", "file", "and", "when", "they", "remove", "support", "for", "it", "we", "just", "re", "implement", "it", "instead", "of", "thinking", "about", "why", "they", "remove", "it", "P", "Thanks", "a", "lot", "for", "taking", "care", "of", "it", "Great", "Thanks", "a", "lot", "NUMBER", "I", "m", "closing", "this", "for", "now", "NUMBER", "awaiting", "your", "pull", "request", "NUMBER", "Thanks", "a", "lot", "for", "catching", "this", "No", "worries", "that", "failure", "be", "a", "problem", "in", "the", "Guard", "spec", "suite", "and", "not", "in", "your", "pull", "request", "NUMBER", "I", "ll", "have", "a", "look", "I", "m", "sorry", "but", "I", "can", "t", "help", "you", "with", "this", "because", "I", "don", "t", "use", "Windows", "for", "development", "NUMBER", "Also", "all", "the", "other", "core", "members", "be", "either", "use", "OS", "X", "or", "Linux", "for", "development", "NUMBER", "If", "you", "don", "t", "get", "help", "here", "form", "another", "Guard", "user", "that", "uses", "Windows", "I", "recommend", "ask", "on", "StackOverflow", "for", "a", "wider", "audience", "NUMBER", "If", "you", "use", "the", "guard", "tag", "I", "ll", "see", "the", "question", "and", "will", "jump", "in", "to", "help", "if", "general", "Guard", "knowledge", "not", "specific", "to", "Windows", "be", "needed", "NUMBER", "SO", "question", "LINK", "to", "exit", "guard", "when", "run", "on", "windows", "Ah", "totally", "forgot", "about", "this", "Since", "Guard", "has", "a", "full", "featured", "Pry", "shell", "as", "interactor", "it", "catches", "Ctrl", "C", "to", "simulate", "the", "same", "behavior", "as", "Pry", "Bash", "ZSH", "NUMBER", "Ctrl", "C", "cancels", "your", "entered", "commands", "whereas", "Ctrl", "D", "EOF", "stops", "the", "process", "bash", "guard", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "path", "to", "project", "NUMBER", "guard", "main", "Guard", "NUMBER", "opt", "TAG", "NUMBER", "guard", "main", "TAG", "NUMBER", "NUMBER", "NUMBER", "INFO", "Bye", "bye", "NUMBER", "shvelo", "agibralter", "Can", "you", "confirm", "that", "Ctrl", "D", "works", "fine", "Just", "read", "on", "superuser", "that", "on", "windows", "EOF", "be", "sent", "with", "Ctrl", "Z", "perhaps", "that", "works", "NUMBER", "I", "also", "went", "to", "Pry", "and", "I", "see", "that", "people", "be", "use", "it", "on", "Windows", "NUMBER", "Do", "you", "know", "the", "reason", "why", "it", "doesn", "t", "work", "in", "your", "environment", "Have", "you", "tried", "to", "run", "it", "in", "Cygwin", "Can", "you", "do", "some", "debugging", "I", "recommend", "RubyMine", "where", "you", "can", "run", "Guard", "within", "RubyMine", "LINK", "it", "impossible", "to", "use", "guard", "with", "rubymine", "NUMBER", "NUMBER", "and", "attach", "its", "multi", "thread", "aware", "debugger", "NUMBER", "Guard", "has", "the", "following", "logic", "when", "trapping", "Ctrl", "C", "LINK", "L", "NUMBER", "L", "NUMBER", "If", "Pry", "be", "run", "it", "delegates", "Ctrl", "C", "to", "Pry", "otherwise", "Guard", "stops", "NUMBER", "Ctrl", "D", "be", "handle", "by", "Pry", "and", "will", "exit", "the", "Pry", "session", "LINK", "L", "NUMBER", "and", "then", "Guard", "stops", "NUMBER", "In", "all", "cases", "Guard", "should", "normally", "stop", "LINK", "L", "NUMBER", "L", "NUMBER", "by", "executing", "the", "plugins", "stop", "action", "NUMBER", "agibralter", "You", "should", "be", "able", "to", "execute", "custom", "stop", "code", "with", "an", "inline", "Guard", "directly", "in", "your", "Guardfile", "ruby", "require", "guard", "guard", "class", "InlineGuard", "TAG", "Pry", "NUMBER", "config", "NUMBER", "history", "NUMBER", "file", "NUMBER", "guard_history", "Guard", "just", "pass", "that", "history_file", "option", "from", "the", "interactor", "DSL", "method", "directly", "to", "that", "Pry", "config", "LINK", "L", "NUMBER", "as", "describe", "in", "the", "Pry", "wiki", "LINK", "and", "configuration", "wiki", "Config_history", "NUMBER", "I", "don", "t", "know", "what", "happened", "in", "your", "case", "please", "try", "to", "remove", "the", "configuration", "option", "from", "your", "Guardfile", "remove", "the", "project", "local", "NUMBER", "guard_history", "and", "touch", "NUMBER", "guard_history", "in", "your", "home", "NUMBER", "If", "this", "doesn", "t", "work", "then", "I", "d", "file", "an", "Pry", "issue", "NUMBER", "I", "m", "sorry", "but", "I", "can", "t", "reproduce", "it", "NUMBER", "It", "just", "works", "on", "my", "machine", "NUMBER", "I", "also", "see", "no", "problem", "with", "the", "Pry", "history", "implementation", "LINK", "L", "NUMBER", "L", "NUMBER", "it", "uses", "File", "NUMBER", "expand_path", "so", "your", "home", "should", "be", "resolve", "properly", "ruby", "NUMBER", "Specs", "guard", "main", "File", "NUMBER", "expand_path", "Pry", "NUMBER", "config", "NUMBER", "history", "NUMBER", "file", "Users", "michi", "NUMBER", "guard_history", "Do", "you", "have", "some", "special", "Pry", "plugins", "install", "or", "custom", "hooks", "in", "NUMBER", "guardrc", "I", "m", "ask", "because", "Guard", "do", "nothing", "special", "when", "stopping", "the", "interactor", "LINK", "L", "NUMBER", "L", "NUMBER", "it", "just", "kills", "the", "Pry", "thread", "and", "restores", "the", "terminal", "settings", "NUMBER", "Yes", "when", "I", "add", "pry", "coolline", "I", "also", "get", "that", "behavior", "NUMBER", "So", "the", "issue", "be", "not", "with", "Guard", "itself", "it", "s", "with", "pry", "coolline", "NUMBER", "Please", "open", "a", "new", "issue", "there", "NUMBER", "Yes", "just", "place", "ruby", "Guard", "NUMBER", "options", "clear", "true", "into", "NUMBER", "guardrc", "and", "you", "re", "fine", "NUMBER", "Thanks", "for", "the", "correction", "Thanks", "a", "lot", "NUMBER", "Yeah", "I", "know", "that", "I", "can", "file", "an", "issue", "and", "close", "it", "completely", "keyboard", "driven", "but", "I", "have", "no", "clue", "how", "I", "did", "it", "NUMBER", "This", "add", "setting", "an", "initial", "plugin", "scope", "from", "the", "cli", "in", "addition", "to", "the", "already", "exist", "group", "scope", "shows", "the", "current", "scope", "in", "the", "interactor", "and", "let", "it", "change", "at", "runtime", "with", "the", "new", "scope", "or", "o", "as", "shortcut", "NUMBER", "But", "let", "s", "see", "it", "in", "action", "instead", "of", "this", "boring", "description", "bash", "bundle", "exec", "guard", "help", "start", "g", "group", "Run", "only", "the", "pass", "group", "P", "plugin", "Run", "only", "the", "pass", "plugins", "Yeah", "I", "know", "but", "p", "be", "already", "for", "polling", "NUMBER", "So", "now", "you", "can", "pass", "a", "plugin", "to", "scope", "the", "actions", "to", "like", "bash", "bundle", "exec", "guard", "P", "ronn", "NUMBER", "Ronn", "guard", "main", "As", "you", "can", "see", "the", "current", "scope", "be", "visible", "within", "the", "mustaches", "ronn", "NUMBER", "This", "means", "that", "the", "change", "run_all", "and", "reload", "actions", "be", "globally", "scoped", "to", "ronn", "and", "no", "other", "plugins", "be", "triggered", "ruby", "NUMBER", "Ronn", "guard", "main", "r", "NUMBER", "NUMBER", "NUMBER", "INFO", "Reload", "ronn", "NUMBER", "Ronn", "guard", "main", "but", "you", "can", "overwrite", "the", "global", "scope", "by", "provide", "a", "local", "scope", "ruby", "NUMBER", "Ronn", "guard", "main", "r", "rspec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Reload", "rspec", "NUMBER", "Ronn", "guard", "main", "To", "change", "the", "scope", "use", "the", "scope", "command", "or", "its", "shorthand", "o", "ruby", "NUMBER", "Ronn", "guard", "main", "o", "rspec", "NUMBER", "Rspec", "guard", "main", "To", "clear", "the", "scope", "just", "call", "it", "without", "parameter", "ruby", "NUMBER", "Rspec", "guard", "main", "o", "NUMBER", "guard", "main", "The", "same", "be", "true", "for", "group", "bash", "bundle", "exec", "guard", "g", "docs", "NUMBER", "Docs", "guard", "main", "That", "s", "all", "NUMBER", "Happy", "scoping", "That", "s", "great", "Thanks", "rymai", "Yes", "looks", "fine", "for", "me", "NUMBER", "That", "s", "a", "nice", "start", "Each", "notifier", "module", "has", "its", "own", "options", "which", "be", "stored", "when", "the", "notification", "be", "add", "LINK", "L", "NUMBER", "NUMBER", "So", "you", "can", "grab", "it", "from", "self", "NUMBER", "notifications", "ruby", "Turn", "notifications", "off", "NUMBER", "def", "turn_off", "notifications", "NUMBER", "each", "do", "notification", "notifier", "get_notifier_module", "notification", "name", "notifier", "NUMBER", "turn_off", "notification", "options", "if", "notifier", "NUMBER", "respond_to", "turn_off", "end", "ENV", "GUARD_NOTIFY", "false", "end", "Each", "notifier", "module", "extend", "itself", "ruby", "module", "GNTP", "extend", "self", "end", "which", "be", "basically", "the", "same", "as", "open", "the", "eigenclass", "ruby", "module", "GNTP", "class", "TAG", "NUMBER", "Really", "nice", "catch", "Well", "do", "burlesona", "yes", "please", "NUMBER", "This", "be", "a", "follow", "up", "to", "the", "Pry", "pull", "request", "NUMBER", "and", "introduces", "a", "continuous", "Pry", "session", "so", "no", "stop", "start", "cycle", "of", "the", "interactor", "on", "a", "Guard", "action", "anymore", "NUMBER", "It", "also", "cleans", "up", "some", "legacy", "support", "code", "that", "isn", "t", "needed", "anymore", "NUMBER", "Current", "change", "Remove", "interactor", "thread", "Remove", "listen", "mutex", "Remove", "tty", "store", "restore", "Known", "issue", "The", "prompt", "be", "not", "visible", "after", "a", "Guard", "action", "NUMBER", "We", "need", "to", "redraw", "the", "current", "line", "after", "a", "Guard", "action", "has", "be", "finished", "NUMBER", "Using", "binding", "NUMBER", "pry", "starts", "another", "Pry", "instance", "NUMBER", "Thanks", "for", "the", "feedback", "NUMBER", "I", "ve", "add", "it", "to", "the", "know", "issue", "and", "will", "have", "a", "look", "soon", "NUMBER", "cry", "Thanks", "a", "lot", "for", "report", "NUMBER", "I", "disabled", "the", "loading", "of", "NUMBER", "pryrc", "for", "Guard", "so", "the", "normals", "Pry", "configuration", "be", "completely", "separated", "from", "the", "Guard", "Pry", "configuration", "NUMBER", "Hey", "thanks", "for", "report", "NUMBER", "Just", "release", "NUMBER", "that", "fix", "it", "NUMBER", "I", "d", "also", "prefer", "to", "have", "a", "continuous", "Pry", "session", "but", "I", "wasn", "t", "able", "to", "stop", "Pry", "from", "reading", "from", "the", "input", "stream", "other", "than", "killing", "the", "thread", "it", "runs", "NUMBER", "I", "spent", "at", "least", "two", "days", "to", "work", "around", "this", "problem", "with", "different", "approaches", "and", "I", "finally", "forced", "myself", "to", "stop", "work", "on", "it", "and", "move", "on", "since", "I", "also", "have", "other", "work", "to", "do", "P", "I", "start", "a", "new", "branch", "pry", "cleanup", "LINK", "which", "basically", "remove", "all", "the", "grown", "interactor", "support", "code", "like", "tty", "save", "and", "restore", "and", "also", "the", "start", "stop", "of", "the", "interactor", "NUMBER", "It", "still", "works", "fine", "with", "a", "continuous", "Pry", "session", "expect", "we", "lose", "the", "prompt", "after", "an", "action", "has", "be", "executed", "so", "I", "guess", "most", "stuff", "isn", "t", "needed", "anymore", "with", "Pry", "NUMBER", "I", "m", "going", "to", "work", "on", "this", "branch", "and", "see", "if", "I", "can", "improve", "the", "Pry", "experience", "NUMBER", "Just", "remove", "the", "interactor", "threading", "on", "the", "cleanup", "branch", "and", "some", "synchronization", "code", "and", "I", "don", "t", "see", "the", "issue", "poping", "up", "anymore", "NUMBER", "Sure", "the", "editor", "screen", "gets", "scrambled", "with", "the", "Guard", "output", "but", "after", "redrawing", "the", "screen", "vim", "continues", "to", "work", "fine", "and", "Guard", "doesn", "t", "capture", "the", "input", "NUMBER", "I", "m", "closing", "this", "please", "continue", "to", "discuss", "Pry", "issue", "in", "issue", "NUMBER", "See", "LINK", "livereload", "issue", "NUMBER", "Please", "do", "not", "double", "post", "issue", "in", "the", "future", "thanks", "NUMBER", "This", "group", "the", "notifiers", "so", "that", "the", "auto", "detection", "features", "only", "enable", "one", "notifier", "per", "group", "NUMBER", "This", "speeds", "up", "the", "auto", "detection", "a", "little", "bit", "and", "doesn", "t", "activate", "for", "example", "two", "different", "Growl", "libraries", "NUMBER", "Thanks", "for", "the", "pull", "request", "NUMBER", "I", "ve", "change", "it", "to", "support", "a", "different", "foreground", "color", "per", "message", "type", "as", "it", "s", "the", "same", "with", "the", "foreground", "color", "NUMBER", "Also", "the", "miss", "specs", "have", "be", "add", "NUMBER", "I", "like", "to", "release", "a", "new", "Guard", "version", "this", "week", "I", "just", "need", "some", "feedback", "on", "NUMBER", "as", "it", "seems", "to", "work", "fine", "and", "be", "ready", "to", "merge", "NUMBER", "Please", "follow", "the", "guidelines", "for", "contribute", "LINK", "as", "you", "ve", "be", "asked", "when", "you", "ve", "file", "the", "issue", "NUMBER", "Thanks", "This", "pull", "request", "makes", "use", "of", "Lumberjack", "as", "a", "logger", "and", "add", "a", "corresponding", "logger", "DSL", "method", "so", "you", "can", "customize", "the", "logging", "behavior", "to", "your", "needs", "NUMBER", "From", "the", "README", "logger", "The", "logger", "method", "allows", "you", "to", "customize", "the", "Guard", "log", "output", "to", "your", "needs", "by", "specify", "one", "or", "more", "options", "like", "ruby", "logger", "level", "warn", "template", "severity", "time", "progname", "message", "time_format", "at", "I", "M", "p", "only", "rspec", "jasmine", "coffeescript", "except", "jammit", "Log", "level", "option", "must", "be", "either", "debug", "info", "warn", "or", "error", "NUMBER", "If", "Guard", "be", "start", "in", "debug", "mode", "the", "log", "level", "will", "be", "automatically", "set", "to", "debug", "NUMBER", "The", "template", "option", "be", "a", "string", "which", "can", "have", "one", "or", "more", "of", "the", "following", "placeholders", "time", "severity", "progname", "pid", "unit_of_work_id", "and", "message", "NUMBER", "A", "unit", "of", "work", "be", "assigned", "for", "each", "action", "Guard", "performs", "on", "multiple", "Guard", "plugin", "NUMBER", "The", "time_format", "option", "directives", "be", "the", "same", "as", "Time", "strftime", "or", "can", "be", "milliseconds", "The", "only", "and", "except", "be", "either", "a", "string", "or", "a", "symbol", "or", "an", "array", "of", "strings", "or", "symbols", "that", "matches", "the", "name", "of", "the", "Guard", "plugin", "name", "that", "sends", "the", "log", "message", "NUMBER", "They", "cannot", "be", "specified", "at", "the", "same", "time", "NUMBER", "This", "address", "issue", "NUMBER", "Nice", "idea", "More", "Rails", "like", "and", "simpler", "NUMBER", "I", "ll", "change", "that", "NUMBER", "Another", "great", "inspiration", "NUMBER", "I", "need", "some", "time", "to", "add", "plymouth", "to", "Guard", "and", "play", "with", "it", "when", "developing", "before", "I", "m", "able", "to", "give", "some", "feedback", "NUMBER", "Thanks", "a", "lot", "NUMBER", "Great", "Thanks", "for", "the", "pull", "request", "NUMBER", "Great", "work", "NUMBER", "Thanks", "a", "lot", "Nice", "idea", "NUMBER", "Can", "you", "submit", "a", "pull", "request", "Thanks", "for", "the", "pull", "request", "NUMBER", "Everything", "be", "great", "Thanks", "a", "lot", "NUMBER", "You", "need", "to", "turn", "off", "the", "interactor", "to", "make", "it", "work", "NUMBER", "Add", "the", "following", "to", "your", "Guardfile", "Ruby", "interactor", "off", "and", "it", "works", "flawless", "NUMBER", "Thanks", "lot", "for", "the", "improvement", "NUMBER", "I", "know", "but", "currently", "don", "t", "use", "tmux", "so", "we", "have", "to", "rely", "on", "the", "experience", "of", "matthijsgroen", "NUMBER", "Thanks", "a", "lot", "for", "your", "detailed", "information", "NUMBER", "I", "ve", "add", "it", "straight", "to", "the", "README", "NUMBER", "This", "has", "be", "already", "publish", "with", "NUMBER", "You", "re", "right", "somehow", "the", "release", "wasn", "t", "release", "at", "all", "NUMBER", "I", "revert", "the", "NUMBER", "release", "commit", "and", "will", "release", "a", "new", "version", "today", "or", "tomorrow", "NUMBER", "Please", "do", "not", "use", "the", "issue", "tracker", "for", "question", "NUMBER", "We", "kindly", "asked", "for", "it", "in", "the", "README", "LINK", "file", "an", "issue", "and", "also", "the", "contribute", "guidelines", "LINK", "when", "you", "ve", "openend", "the", "issue", "NUMBER", "You", "can", "search", "on", "GitHub", "LINK", "and", "also", "on", "RubyGems", "NUMBER", "org", "LINK", "for", "Guard", "plugins", "NUMBER", "This", "has", "be", "also", "clearly", "describe", "in", "the", "README", "LINK", "add", "guard", "plugins", "NUMBER", "If", "you", "d", "do", "that", "you", "certainly", "find", "LINK", "sass", "LINK", "compass", "Oh", "how", "I", "m", "happy", "be", "the", "Notifier", "guy", "and", "not", "the", "Windows", "guy", "wink", "NUMBER", "Looks", "fine", "will", "push", "the", "merge", "soon", "NUMBER", "We", "definitely", "need", "to", "add", "again", "a", "section", "about", "the", "file", "listener", "dependencies", "but", "I", "m", "not", "in", "favor", "of", "add", "the", "needed", "dependency", "to", "the", "Gemfile", "mainly", "because", "a", "I", "never", "encountered", "a", "gem", "that", "do", "this", "and", "b", "I", "want", "the", "users", "read", "the", "README", "and", "have", "an", "understanding", "of", "the", "setup", "rather", "that", "trying", "to", "make", "Guard", "smart", "and", "customize", "the", "users", "environment", "NUMBER", "The", "real", "source", "of", "the", "problem", "relies", "in", "the", "fact", "that", "RubyGems", "doesn", "t", "support", "real", "plattform", "dependent", "dependencies", "and", "Bundler", "doesn", "t", "have", "a", "Gemfile", "NUMBER", "lock", "per", "runtime", "and", "OS", "NUMBER", "Great", "Thanks", "a", "lot", "NUMBER", "This", "be", "the", "initial", "integration", "of", "Pry", "as", "replacement", "of", "the", "Guard", "interactor", "simple", "readline", "and", "coolline", "be", "all", "gone", "NUMBER", "Pry", "itself", "makes", "use", "of", "rb", "readline", "and", "coolline", "whenever", "they", "be", "available", "so", "support", "for", "these", "gems", "be", "still", "available", "NUMBER", "Guard", "provides", "its", "own", "set", "of", "Pry", "commands", "that", "can", "be", "use", "to", "control", "Guard", "in", "the", "same", "way", "as", "before", "NUMBER", "However", "Enter", "doesn", "t", "trigger", "the", "run_all", "action", "anymore", "instead", "use", "the", "all", "command", "NUMBER", "The", "biggest", "advantage", "of", "use", "Pry", "be", "that", "it", "comes", "with", "a", "powerful", "plugin", "system", "that", "allows", "you", "to", "customize", "and", "extend", "the", "console", "NUMBER", "This", "will", "allow", "Guard", "users", "to", "release", "gems", "that", "provide", "extend", "functionality", "to", "Guard", "as", "it", "s", "needed", "by", "for", "example", "by", "NUMBER", "and", "NUMBER", "Pry", "will", "evaluate", "NUMBER", "guardrc", "in", "addition", "to", "the", "standard", "NUMBER", "pryrc", "and", "NUMBER", "NUMBER", "pryrc", "before", "the", "session", "starts", "which", "allows", "the", "customization", "of", "prompts", "commands", "aliases", "etc", "NUMBER", "I", "didn", "t", "provide", "the", "short", "hand", "commands", "c", "s", "p", "etc", "NUMBER", "by", "intention", "to", "avoid", "variable", "and", "method", "collisions", "remember", "we", "have", "now", "a", "full", "featured", "Ruby", "REPL", "with", "shell", "access", "because", "it", "s", "so", "easy", "to", "customize", "it", "NUMBER", "Just", "add", "Pry", "NUMBER", "config", "NUMBER", "commands", "NUMBER", "alias_command", "n", "notification", "to", "NUMBER", "guardrc", "and", "you", "re", "fine", "NUMBER", "There", "s", "still", "some", "work", "to", "do", "like", "miss", "commands", "specs", "and", "a", "better", "Pry", "session", "restore", "but", "it", "works", "and", "I", "d", "like", "to", "have", "people", "play", "with", "it", "and", "give", "feedback", "NUMBER", "I", "recommend", "to", "have", "a", "look", "at", "the", "Pry", "Wiki", "LINK", "to", "see", "what", "s", "possible", "NUMBER", "So", "all", "specs", "be", "now", "in", "place", "and", "the", "pull", "request", "should", "be", "fine", "to", "merge", "NUMBER", "However", "I", "d", "like", "to", "have", "some", "more", "feedback", "how", "it", "works", "for", "you", "guys", "NUMBER", "For", "me", "it", "works", "mostly", "but", "I", "have", "seldom", "hangs", "of", "the", "interactor", "so", "it", "won", "t", "read", "any", "more", "input", "NUMBER", "Do", "other", "people", "also", "see", "this", "behavior", "I", "have", "spent", "some", "hours", "but", "didn", "t", "discover", "why", "this", "happens", "sometimes", "NUMBER", "Yes", "we", "can", "t", "merge", "until", "the", "nasty", "bug", "be", "resolve", "NUMBER", "I", "ve", "already", "spent", "some", "hours", "to", "find", "the", "cause", "for", "that", "bug", "but", "without", "success", "NUMBER", "I", "ll", "keep", "the", "branch", "in", "sync", "until", "I", "or", "someone", "else", "has", "time", "to", "dig", "into", "it", "an", "fix", "it", "NUMBER", "I", "m", "on", "holiday", "for", "the", "next", "two", "weeks", "so", "I", "won", "t", "be", "able", "to", "put", "any", "work", "into", "it", "before", "the", "NUMBER", "of", "October", "NUMBER", "OMG", "you", "re", "a", "genius", "rking", "You", "re", "right", "It", "doesn", "t", "hang", "just", "no", "echo", "NUMBER", "I", "restored", "the", "old", "terminal", "helper", "code", "and", "I", "haven", "t", "seen", "the", "problem", "until", "then", "NUMBER", "guard", "core", "team", "Can", "you", "give", "it", "a", "try", "That", "would", "be", "great", "rymai", "NUMBER", "Since", "I", "m", "back", "from", "holiday", "my", "work", "be", "just", "make", "phone", "calls", "visiting", "customers", "and", "write", "emails", "cry", "So", "sadly", "no", "Guard", "run", "all", "day", "long", "NUMBER", "rymai", "Did", "you", "had", "the", "chance", "to", "run", "the", "pry", "interactor", "for", "some", "time", "last", "week", "Great", "I", "will", "merge", "today", "all", "pull", "request", "you", "re", "fine", "with", "NUMBER", "I", "personally", "don", "t", "need", "a", "subtitle", "in", "the", "notification", "because", "I", "don", "t", "even", "read", "the", "text", "in", "it", "NUMBER", "I", "just", "notice", "red", "green", "and", "depending", "of", "the", "context", "of", "my", "current", "work", "I", "immediately", "take", "some", "action", "or", "go", "and", "read", "the", "details", "in", "the", "console", "NUMBER", "I", "m", "not", "against", "it", "but", "I", "have", "no", "personal", "use", "and", "I", "m", "not", "sure", "how", "others", "be", "use", "the", "notifications", "and", "thus", "if", "it", "s", "worth", "to", "spend", "time", "on", "it", "there", "may", "be", "better", "features", "to", "implement", "if", "you", "have", "some", "time", "to", "contribute", "to", "Guard", "NUMBER", "If", "you", "want", "to", "add", "subtitle", "support", "the", "API", "must", "be", "backward", "compatible", "because", "there", "be", "a", "way", "to", "many", "Guard", "plugins", "out", "there", "and", "I", "guess", "most", "plugins", "will", "not", "be", "update", "to", "make", "use", "of", "the", "subtitle", "I", "remember", "the", "low", "acceptance", "of", "the", "improved", "Guard", "plugin", "API", "NUMBER", "No", "description", "given", "NUMBER", "Yep", "code", "looks", "fine", "and", "I", "merge", "it", "locally", "to", "use", "it", "today", "NUMBER", "I", "ve", "planned", "to", "do", "some", "work", "on", "the", "Guard", "interactor", "tomorrow", "evening", "and", "I", "ll", "merge", "and", "release", "then", "NUMBER", "Thanks", "a", "lot", "mattgreen", "for", "the", "pull", "request", "This", "has", "nothing", "to", "to", "with", "Guard", "the", "problem", "be", "as", "the", "error", "message", "says", "that", "with", "Ruby", "NUMBER", "the", "Find", "NUMBER", "find", "method", "must", "take", "a", "block", "NUMBER", "Only", "newer", "Rubies", "returns", "an", "enumerator", "Bash", "rvm", "use", "ruby", "NUMBER", "p", "NUMBER", "pry", "NUMBER", "pry", "main", "require", "find", "true", "NUMBER", "pry", "main", "Find", "NUMBER", "find", "Dir", "NUMBER", "pwd", "TAG", "NUMBER", "pry", "main", "D", "rvm", "use", "ruby", "NUMBER", "p", "NUMBER", "pry", "NUMBER", "pry", "main", "require", "find", "true", "NUMBER", "pry", "main", "Find", "NUMBER", "find", "Dir", "NUMBER", "pwd", "LocalJumpError", "no", "block", "given", "from", "Users", "michi", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "find", "NUMBER", "rb", "NUMBER", "in", "find", "NUMBER", "pry", "main", "D", "So", "either", "use", "to", "a", "newer", "Ruby", "version", "or", "rewrite", "the", "Guard", "condition", "NUMBER", "You", "re", "welcome", "NUMBER", "Solving", "little", "puzzles", "like", "this", "be", "relaxing", "and", "it", "makes", "me", "a", "better", "Ruby", "programmer", "with", "every", "issue", "P", "There", "be", "some", "very", "interesting", "ideas", "that", "could", "make", "developers", "life", "much", "easier", "NUMBER", "All", "the", "success", "fail", "logic", "be", "within", "each", "Guard", "plugin", "and", "not", "Guard", "itself", "so", "test", "relate", "Guard", "plugins", "like", "guard", "rspec", "guard", "test", "guard", "cucumber", "and", "guard", "jasmine", "handles", "the", "BDD", "cycle", "on", "their", "own", "NUMBER", "You", "could", "add", "some", "hooks", "LINK", "and", "callbacks", "to", "these", "Guard", "plugins", "so", "you", "can", "do", "some", "stuff", "when", "something", "interesting", "happens", "NUMBER", "Hooks", "can", "also", "pass", "argument", "LINK", "hook", "instance_method", "so", "you", "can", "easily", "add", "hooks", "for", "fail", "success", "fix", "etc", "to", "the", "Guard", "plugins", "of", "your", "choice", "NUMBER", "I", "think", "it", "s", "a", "good", "idea", "to", "not", "add", "specific", "commands", "to", "the", "interactor", "but", "extend", "it", "in", "a", "way", "that", "custom", "commands", "can", "be", "registered", "something", "like", "Ruby", "interactor", "coolline", "do", "command", "refactor", "do", "VISUAL", "EDITOR", "vim", "git", "status", "porcelain", "cut", "b", "NUMBER", "end", "end", "Custom", "commands", "and", "detailed", "hooks", "would", "allow", "a", "customizable", "workflow", "NUMBER", "I", "can", "take", "care", "of", "the", "interactor", "enhancement", "since", "I", "anyway", "had", "plan", "for", "such", "a", "feature", "NUMBER", "It", "should", "be", "possible", "to", "develop", "a", "Guard", "plugin", "which", "add", "some", "predefined", "interactors", "and", "hooks", "to", "other", "plugins", "but", "there", "be", "certainly", "room", "for", "improvement", "to", "provide", "some", "better", "abstractions", "for", "these", "kind", "of", "plugins", "NUMBER", "You", "could", "make", "the", "pull", "request", "with", "the", "hooks", "to", "each", "Guard", "plugin", "I", "ll", "add", "the", "interactor", "commands", "NUMBER", "Pry", "has", "landed", "in", "NUMBER", "which", "enable", "you", "to", "customize", "the", "Guard", "interactions", "to", "your", "needs", "NUMBER", "Interesting", "I", "get", "the", "same", "problem", "with", "guard", "livereload", "Guard", "NUMBER", "has", "now", "integrated", "Pry", "instead", "of", "directly", "use", "Readline", "and", "or", "Coolline", "Pry", "still", "makes", "use", "of", "Coolline", "when", "install", "NUMBER", "Can", "anyone", "with", "the", "problem", "see", "if", "it", "still", "exists", "with", "guard", "NUMBER", "or", "has", "it", "gone", "Great", "NUMBER", "So", "the", "console", "output", "from", "development", "mode", "be", "not", "corrupted", "anymore", "NUMBER", "Avoid", "double", "output", "clear", "during", "the", "same", "run_on_changes", "call", "Great", "I", "m", "in", "love", "heart", "Yeah", "it", "s", "a", "know", "issue", "NUMBER", "We", "could", "memorize", "if", "the", "screen", "has", "be", "already", "clean", "per", "run", "and", "skip", "a", "second", "screen", "clean", "NUMBER", "Yeah", "good", "idea", "I", "ll", "try", "to", "have", "a", "look", "at", "that", "this", "week", "end", "NUMBER", "Thanks", "Committed", "on", "this", "PR", "LINK", "NUMBER", "could", "you", "give", "it", "a", "try", "please", "NUMBER", "Thanks", "Guard", "NUMBER", "has", "be", "release", "with", "this", "fix", "It", "would", "need", "a", "change", "on", "each", "guard", "to", "support", "a", "run_with_arguments", "method", "wouldn", "t", "be", "easier", "to", "just", "save", "edit", "the", "file", "that", "you", "want", "to", "run", "or", "simply", "launch", "the", "command", "in", "another", "terminal", "Yep", "sure", "I", "use", "rspec", "filters", "all", "the", "time", "Thanks", "very", "much", "that", "s", "awesome", "Is", "there", "any", "chance", "to", "have", "the", "image", "in", "the", "notification", "soon", "Thanks", "foxycoder", "netzpirat", "I", "ll", "let", "you", "merge", "this", "since", "the", "Notifier", "be", "your", "baby", "What", "about", "creating", "a", "guard", "ncnotifier", "gem", "with", "the", "Guard", "icon", "maybe", "NUMBER", "with", "different", "icon", "apps", "success", "red", "failure", "green", "normal", "Thanks", "I", "think", "ignore", "be", "useful", "for", "ignoring", "specific", "folders", "e", "NUMBER", "g", "NUMBER", "tmp", "logs", "etc", "NUMBER", "while", "filter", "be", "useful", "to", "narrow", "down", "the", "file", "to", "watch", "usually", "by", "giving", "extension", "patterns", "e", "NUMBER", "g", "NUMBER", "NUMBER", "rb", "NUMBER", "Note", "that", "the", "two", "methods", "be", "complementary", "NUMBER", "For", "instance", "you", "could", "filter", "NUMBER", "rb", "file", "and", "ignore", "lib", "foo", "in", "which", "you", "could", "have", "NUMBER", "rb", "file", "NUMBER", "Hum", "most", "of", "the", "time", "that", "s", "indeed", "the", "use", "case", "in", "practice", "but", "I", "think", "you", "_could_", "ignore", "file", "and", "filter", "directories", "NUMBER", "Maher", "NUMBER", "Ever", "do", "you", "confirm", "that", "Thanks", "Maher", "NUMBER", "Ever", "Should", "we", "update", "the", "Listen", "s", "README", "with", "these", "clarifications", "Yep", "I", "think", "you", "get", "it", "right", "Hi", "Thanks", "for", "your", "interest", "in", "Guard", "you", "can", "probably", "learn", "more", "with", "this", "nice", "article", "about", "Guard", "LINK", "a", "guard", "for", "your", "project", "or", "by", "taking", "a", "look", "a", "this", "Guardfile", "LINK", "NUMBER", "Otherwise", "please", "use", "either", "Google", "the", "Google", "group", "LINK", "dev", "or", "on", "guard", "irc", "NUMBER", "freenode", "NUMBER", "net", "for", "such", "question", "since", "this", "issue", "tracker", "be", "meant", "to", "NUMBER", "track", "issue", "I", "personally", "think", "this", "be", "overkill", "NUMBER", "If", "you", "re", "use", "RSpec", "the", "filters", "feature", "LINK", "core", "v", "NUMBER", "NUMBER", "docs", "filtering", "inclusion", "filters", "do", "exactly", "what", "you", "want", "NUMBER", "From", "the", "RSpec", "doc", "You", "can", "constrain", "which", "examples", "be", "run", "by", "declaring", "an", "inclusion", "filter", "NUMBER", "The", "most", "common", "use", "case", "be", "to", "focus", "on", "a", "subset", "of", "examples", "as", "you", "re", "focused", "on", "a", "particular", "problem", "NUMBER", "I", "see", "NUMBER", "Let", "s", "take", "a", "concrete", "example", "and", "let", "me", "know", "if", "I", "m", "mistaken", "NUMBER", "You", "re", "editing", "app", "helpers", "application_helper", "NUMBER", "rb", "but", "the", "test", "that", "you", "want", "to", "run", "be", "in", "spec", "request", "foo_spec", "NUMBER", "rb", "NUMBER", "Edit", "or", "save", "spec", "request", "foo_spec", "NUMBER", "rb", "so", "that", "Guard", "stores", "it", "as", "latest", "change", "NUMBER", "Enter", "f", "focus", "TAG", "to", "start", "the", "focus", "mode", "NUMBER", "Edit", "app", "helpers", "application_helper", "NUMBER", "rb", "this", "triggers", "no", "test", "NUMBER", "Run", "the", "focused", "file", "spec", "request", "foo_spec", "NUMBER", "rb", "by", "pressing", "TAG", "NUMBER", "Repeat", "NUMBER", "NUMBER", "as", "needed", "NUMBER", "Once", "you", "re", "happy", "with", "the", "implementation", "stop", "the", "focus", "mode", "by", "entering", "f", "focus", "TAG", "NUMBER", "If", "that", "s", "right", "I", "think", "it", "d", "be", "faster", "to", "save", "spec", "request", "foo_spec", "NUMBER", "rb", "to", "run", "it", "than", "switch", "to", "the", "terminal", "and", "press", "TAG", "in", "addition", "to", "start", "stop", "the", "focus", "mode", "NUMBER", "This", "be", "my", "opinion", "I", "m", "still", "not", "really", "convinced", "by", "this", "focus", "mode", "NUMBER", "Ok", "I", "see", "I", "guess", "that", "makes", "sense", "then", "netzpirat", "Maher", "NUMBER", "Ever", "should", "we", "wait", "for", "thibaudgg", "to", "see", "what", "he", "has", "to", "say", "about", "this", "I", "agree", "with", "netzpirat", "we", "just", "want", "to", "avoid", "developing", "merge", "a", "feature", "for", "only", "one", "person", "and", "more", "importantly", "we", "need", "to", "fully", "understand", "the", "use", "case", "and", "challenge", "it", "with", "solutions", "that", "could", "currently", "have", "the", "same", "results", "NUMBER", "By", "the", "way", "prusswan", "if", "you", "want", "to", "focus", "on", "several", "file", "you", "can", "set", "the", "focus", "metadata", "on", "the", "top", "describe", "of", "each", "file", "and", "it", "ll", "focus", "the", "entire", "file", "it", "s", "not", "only", "for", "specific", "test", "as", "you", "said", "NUMBER", "Personally", "I", "m", "still", "not", "convinced", "by", "this", "feature", "and", "as", "Maher", "NUMBER", "Ever", "said", "Also", "please", "remember", "that", "Guard", "be", "use", "in", "multiple", "contexts", "NUMBER", "The", "usecases", "for", "this", "feature", "seem", "to", "be", "limited", "NUMBER", "If", "you", "still", "think", "that", "this", "feature", "be", "necessarily", "I", "would", "appreciate", "it", "if", "you", "can", "give", "an", "example", "in", "which", "this", "feature", "be", "better", "than", "just", "filtering", "a", "spec", "NUMBER", "Last", "but", "not", "least", "as", "netzpirat", "said", "please", "don", "t", "take", "it", "personally", "prusswan", "we", "love", "everyone", "who", "uses", "Guard", "Guard", "NUMBER", "has", "now", "Pry", "integrated", "which", "allows", "you", "to", "create", "new", "commands", "for", "your", "need", "which", "can", "control", "Guard", "NUMBER", "Thanks", "However", "this", "doesn", "t", "seem", "to", "fix", "NUMBER", "What", "a", "funny", "coincidence", "netzpirat", "P", "Good", "luck", "with", "ruby_gntp", "debugging", "that", "could", "be", "that", "indeed", "The", "given", "example", "works", "fine", "on", "OS", "X", "so", "I", "guess", "this", "be", "a", "Listen", "inotify", "adapter", "issue", "NUMBER", "Before", "Listen", "was", "created", "the", "adapter", "watched", "LINK", "L", "NUMBER", "for", "recursive", "attrib", "create", "move_self", "and", "close_write", "events", "NUMBER", "We", "came", "to", "this", "event", "list", "by", "analyzing", "several", "command", "and", "editor", "write", "behavior", "report", "in", "various", "issue", "which", "be", "documented", "in", "the", "wiki", "under", "Analysis", "of", "inotify", "events", "for", "different", "editors", "LINK", "of", "inotify", "events", "for", "different", "editors", "NUMBER", "Append", "to", "a", "file", "echo", "blah", "file", "be", "miss", "perhaps", "someone", "on", "Linux", "can", "add", "this", "info", "to", "the", "wiki", "page", "NUMBER", "Listen", "actually", "watches", "LINK", "L", "NUMBER", "for", "recursive", "attrib", "close", "modify", "move", "create", "delete", "delete_self", "and", "move_self", "NUMBER", "Since", "I", "wasn", "t", "part", "of", "the", "Listen", "dev", "team", "I", "cannot", "say", "what", "the", "reason", "was", "to", "switch", "the", "event", "list", "NUMBER", "I", "had", "the", "double", "prompt", "issue", "very", "often", "before", "NUMBER", "but", "never", "had", "the", "double", "run", "issue", "NUMBER", "I", "guess", "these", "two", "issue", "be", "not", "relate", "NUMBER", "With", "NUMBER", "I", "worked", "a", "full", "day", "with", "the", "readline", "interactor", "and", "haven", "t", "seen", "the", "double", "prompt", "once", "NUMBER", "I", "have", "switched", "to", "the", "coolline", "interactor", "and", "it", "feels", "more", "robust", "than", "the", "readline", "interactor", "NUMBER", "If", "you", "re", "on", "Ruby", "NUMBER", "then", "I", "recommend", "to", "switch", "to", "coolline", "NUMBER", "Coolline", "uses", "as", "prompt", "so", "one", "can", "notice", "which", "interactor", "type", "be", "run", "NUMBER", "prusswan", "Yep", "guard", "rspec", "as", "many", "other", "Guard", "plugins", "cleans", "the", "modify", "paths", "LINK", "rspec", "blob", "master", "lib", "guard", "rspec", "NUMBER", "rb", "L", "NUMBER", "see", "here", "for", "the", "actual", "cleaning", "code", "LINK", "rspec", "blob", "master", "lib", "guard", "rspec", "inspector", "NUMBER", "rb", "NUMBER", "rschmitty", "can", "you", "please", "try", "to", "launch", "the", "Listen", "gem", "specs", "suite", "on", "your", "system", "Windows", "to", "see", "if", "it", "s", "all", "green", "NUMBER", "Good", "point", "NUMBER", "I", "add", "a", "link", "to", "the", "wiki", "and", "some", "example", "topics", "of", "what", "can", "be", "find", "there", "to", "the", "introduction", "section", "NUMBER", "I", "don", "t", "see", "that", "guard", "shell", "has", "a", "cli", "option", "so", "this", "config", "be", "be", "ignored", "NUMBER", "The", "problem", "be", "that", "you", "re", "use", "Kernel", "to", "execute", "the", "command", "NUMBER", "This", "_captures_", "STDOUT", "Ruby", "pry", "NUMBER", "pry", "main", "git", "status", "On", "branch", "master", "n", "n", "Initial", "commit", "n", "n", "Untracked", "file", "n", "use", "git", "add", "TAG", "NUMBER", "to", "include", "in", "what", "will", "be", "commit", "n", "n", "tGemfile", "n", "tGemfile", "NUMBER", "lock", "n", "tGuardfile", "n", "thello", "n", "ttest", "NUMBER", "rb", "nnothing", "add", "to", "commit", "but", "untracked", "file", "present", "use", "git", "add", "to", "track", "n", "You", "have", "to", "execute", "the", "command", "so", "that", "STDOUT", "be", "outputted", "and", "not", "captured", "for", "example", "by", "use", "Kernel", "system", "Ruby", "NUMBER", "pry", "main", "system", "git", "status", "On", "branch", "master", "Initial", "commit", "Untracked", "file", "use", "git", "add", "TAG", "NUMBER", "to", "include", "in", "what", "will", "be", "commit", "Gemfile", "Gemfile", "NUMBER", "lock", "Guardfile", "hello", "test", "NUMBER", "rb", "nothing", "add", "to", "commit", "but", "untracked", "file", "present", "use", "git", "add", "to", "track", "true", "This", "outputs", "the", "colored", "information", "directly", "returning", "true", "when", "the", "status", "code", "be", "NUMBER", "You", "can", "return", "an", "empty", "string", "from", "your", "watcher", "block", "to", "skip", "this", "output", "Ruby", "guard", "shell", "do", "watch", "NUMBER", "system", "git", "status", "watch", "NUMBER", "git", "refs", "NUMBER", "system", "git", "lola", "end", "This", "add", "initial", "Coolline", "LINK", "Ouie", "coolline", "support", "for", "a", "Ruby", "NUMBER", "io", "console", "interactor", "NUMBER", "In", "addition", "the", "show", "command", "has", "be", "add", "to", "the", "interactor", "Closes", "NUMBER", "NUMBER", "This", "may", "help", "on", "issue", "NUMBER", "NUMBER", "NUMBER", "please", "give", "it", "a", "try", "NUMBER", "I", "also", "like", "to", "add", "a", "change", "action", "to", "rerun", "last", "specs", "fail", "by", "triggering", "an", "empty", "file", "change", "See", "NUMBER", "NUMBER", "Also", "a", "scope", "command", "as", "describe", "in", "Rspec", "NUMBER", "LINK", "rspec", "issue", "NUMBER", "would", "be", "nice", "to", "have", "NUMBER", "Well", "spotted", "rymai", "thanks", "So", "I", "think", "everything", "be", "in", "place", "now", "I", "just", "wan", "t", "to", "have", "some", "feedback", "from", "some", "people", "who", "actually", "be", "_using_", "the", "new", "interactor", "before", "the", "merge", "and", "release", "NUMBER", "Yep", "this", "has", "happend", "also", "to", "me", "NUMBER", "I", "ll", "try", "to", "find", "out", "what", "happens", "next", "week", "NUMBER", "There", "were", "some", "unnecessary", "threads", "created", "and", "killed", "on", "almost", "all", "Guard", "tasks", "which", "I", "have", "address", "now", "NUMBER", "The", "coolline", "adapter", "feels", "snappier", "and", "I", "haven", "t", "seen", "any", "interactor", "error", "in", "the", "last", "few", "hours", "NUMBER", "I", "m", "going", "to", "use", "this", "version", "for", "a", "few", "days", "to", "see", "how", "it", "works", "when", "use", "it", "in", "my", "daily", "work", "and", "will", "merge", "it", "at", "the", "end", "of", "the", "week", "if", "all", "went", "fine", "and", "I", "get", "also", "some", "positive", "feedback", "for", "you", "guys", "NUMBER", "Oh", "I", "forgot", "that", "I", "configured", "RSpec", "to", "have", "a", "random", "spec", "order", "NUMBER", "Currently", "the", "same", "specs", "have", "fail", "once", "and", "pass", "once", "without", "any", "change", "so", "we", "have", "some", "bad", "specs", "that", "depends", "on", "state", "of", "a", "previous", "spec", "NUMBER", "What", "Ruby", "be", "you", "use", "MRI", "JRuby", "Rubinius", "and", "which", "version", "Have", "you", "explicit", "select", "a", "certain", "interactor", "with", "interactor", "in", "your", "Guardfile", "Closing", "this", "because", "of", "lack", "of", "response", "NUMBER", "Please", "reopen", "when", "the", "issue", "still", "exists", "NUMBER", "Since", "your", "issue", "isn", "t", "very", "detailed", "I", "have", "to", "guess", "what", "you", "re", "talking", "about", "but", "I", "assume", "you", "re", "talking", "about", "the", "Guard", "v", "NUMBER", "to", "v", "NUMBER", "transition", "NUMBER", "There", "were", "no", "major", "change", "in", "the", "public", "API", "the", "new", "Guard", "plugin", "interface", "be", "fully", "backward", "compatible", "and", "the", "deprecate", "API", "show", "a", "message", "with", "a", "link", "to", "the", "upgrade", "guide", "LINK", "guide", "for", "exist", "guards", "to", "Guard", "v", "NUMBER", "NUMBER", "We", "didn", "t", "remove", "support", "for", "any", "previous", "Guard", "plugins", "all", "Guard", "plugin", "will", "continue", "to", "work", "NUMBER", "The", "Semantic", "Versioning", "LINK", "describes", "the", "minor", "version", "as", "follows", "Minor", "version", "Y", "x", "NUMBER", "Y", "NUMBER", "z", "x", "NUMBER", "MUST", "be", "incremented", "if", "new", "backwards", "compatible", "functionality", "be", "introduce", "to", "the", "public", "API", "NUMBER", "It", "MUST", "be", "incremented", "if", "any", "public", "API", "functionality", "be", "marked", "as", "deprecate", "NUMBER", "It", "MAY", "be", "incremented", "if", "substantial", "new", "functionality", "or", "improvement", "be", "introduce", "within", "the", "private", "code", "NUMBER", "It", "MAY", "include", "patch", "level", "change", "NUMBER", "Patch", "version", "MUST", "be", "reset", "to", "NUMBER", "when", "minor", "version", "be", "incremented", "NUMBER", "According", "to", "semantic", "version", "we", "must", "increase", "the", "minor", "version", "NUMBER", "In", "addition", "semantic", "version", "describes", "a", "major", "version", "as", "follows", "Major", "version", "X", "X", "NUMBER", "y", "NUMBER", "z", "X", "NUMBER", "MUST", "be", "incremented", "if", "any", "backwards", "incompatible", "change", "be", "introduce", "to", "the", "public", "API", "NUMBER", "It", "MAY", "include", "minor", "and", "patch", "level", "change", "NUMBER", "Patch", "and", "minor", "version", "MUST", "be", "reset", "to", "NUMBER", "when", "major", "version", "be", "incremented", "NUMBER", "So", "we", "could", "have", "increase", "the", "major", "version", "but", "it", "wasn", "t", "necessary", "NUMBER", "There", "was", "a", "lot", "of", "effort", "put", "into", "extracting", "Listen", "LINK", "from", "Guard", "core", "so", "that", "other", "OSS", "projects", "like", "Compass", "can", "easily", "make", "use", "of", "the", "excellent", "cross", "plattform", "file", "notification", "NUMBER", "For", "a", "normal", "Guard", "user", "the", "Listen", "gem", "has", "some", "really", "nifty", "new", "features", "that", "makes", "the", "use", "of", "Guard", "even", "more", "simpler", "NUMBER", "So", "this", "be", "anything", "but", "sad", "NUMBER", "Thibaud", "posted", "LINK", "searchin", "guard", "dev", "listen", "guard", "dev", "dfkwTAsazdw", "Wj", "NUMBER", "VbRu", "NUMBER", "uHwJ", "the", "link", "to", "the", "pull", "request", "LINK", "for", "further", "discussion", "to", "the", "Guard", "Developer", "LINK", "forum", "guard", "dev", "mailing", "list", "and", "we", "had", "one", "alpha", "and", "one", "beta", "LINK", "release", "to", "give", "the", "developer", "a", "chance", "to", "test", "the", "new", "release", "NUMBER", "Your", "voice", "was", "miss", "then", "when", "you", "had", "a", "chance", "to", "actively", "participate", "but", "you", "ve", "chosen", "to", "blame", "us", "for", "your", "decision", "NUMBER", "This", "be", "not", "fair", "NUMBER", "I", "believe", "we", "have", "a", "transparent", "and", "open", "development", "process", "open", "to", "anyone", "who", "s", "interested", "to", "participate", "NUMBER", "Closing", "this", "because", "of", "lack", "of", "response", "NUMBER", "Please", "reopen", "when", "the", "issue", "still", "exists", "NUMBER", "Pressing", "tab", "in", "the", "interactor", "with", "readline", "shows", "all", "possible", "commands", "ruby", "backend", "exit", "help", "livereload", "pause", "rspec", "coffeescript", "frontend", "jasmine", "notification", "reload", "Sure", "there", "be", "commands", "exit", "help", "pause", "reload", "plugins", "livereload", "rspec", "coffeescript", "jasmine", "and", "group", "frontend", "backend", "mix", "NUMBER", "For", "my", "needs", "this", "be", "perfectly", "sufficient", "NUMBER", "But", "add", "a", "show", "command", "should", "be", "not", "that", "hard", "since", "every", "information", "needed", "be", "already", "in", "the", "interactor", "NUMBER", "Just", "played", "with", "coolline", "and", "its", "great", "so", "far", "NUMBER", "Coolline", "doesn", "t", "show", "all", "commands", "when", "there", "isn", "t", "at", "least", "a", "character", "so", "I", "ll", "add", "a", "show", "command", "to", "the", "interactor", "and", "improve", "the", "completion", "abilities", "NUMBER", "Guard", "NUMBER", "has", "be", "release", "which", "provides", "a", "new", "show", "command", "NUMBER", "The", "code", "for", "the", "file", "listener", "be", "in", "Listen", "LINK", "but", "I", "m", "not", "familiar", "with", "that", "code", "base", "to", "give", "you", "a", "hint", "NUMBER", "I", "just", "switched", "a", "project", "to", "the", "simple", "interactor", "and", "I", "it", "works", "mostly", "fine", "NUMBER", "I", "test", "it", "for", "about", "NUMBER", "times", "and", "only", "once", "it", "had", "the", "failure", "describe", "NUMBER", "Since", "you", "said", "that", "the", "readline", "interactor", "just", "works", "fine", "for", "you", "I", "must", "admit", "that", "I", "have", "no", "clue", "where", "to", "start", "on", "this", "issue", "because", "most", "of", "the", "behavior", "be", "shared", "in", "a", "parent", "class", "and", "the", "simple", "interactor", "LINK", "be", "sooo", "small", "I", "can", "t", "imagine", "that", "there", "s", "a", "problem", "with", "that", "code", "NUMBER", "I", "have", "the", "same", "OS", "X", "Ruby", "and", "Guard", "version", "only", "my", "terminal", "NUMBER", "NUMBER", "NUMBER", "Have", "you", "tried", "it", "in", "iTerm", "NUMBER", "also", "I", "notice", "that", "the", "readline", "bug", "LINK", "lang", "NUMBER", "org", "issue", "NUMBER", "has", "be", "fix", "in", "Ruby", "NUMBER", "p", "NUMBER", "Can", "you", "try", "to", "use", "interactor", "readline", "to", "see", "if", "it", "works", "properly", "If", "so", "I", "ll", "remove", "the", "warning", "for", "this", "Ruby", "version", "and", "add", "it", "to", "the", "auto", "detection", "NUMBER", "Thanks", "for", "the", "feedback", "NUMBER", "So", "all", "the", "interactors", "be", "a", "bit", "unreliable", "currently", "except", "the", "readline", "adapter", "with", "rb", "readline", "and", "it", "doesn", "t", "seem", "to", "be", "a", "quick", "fix", "NUMBER", "Since", "you", "have", "a", "workaround", "I", "put", "this", "issue", "aside", "for", "this", "week", "since", "I", "have", "to", "catch", "up", "with", "work", "left", "behind", "from", "my", "EuRuKo", "trip", "NUMBER", "I", "anyway", "want", "to", "work", "on", "the", "interactor", "modules", "since", "I", "really", "want", "to", "give", "coolline", "LINK", "Ouie", "coolline", "a", "try", "NUMBER", "Oh", "wow", "it", "s", "get", "weird", "NUMBER", "Guard", "NUMBER", "has", "be", "release", "with", "some", "new", "features", "Better", "thread", "handle", "for", "the", "interactor", "which", "results", "in", "more", "robust", "interactors", "simple", "and", "readline", "A", "new", "Ruby", "NUMBER", "only", "interactor", "that", "be", "based", "on", "Coolline", "LINK", "Ouie", "coolline", "which", "in", "turn", "be", "based", "on", "the", "new", "io", "console", "library", "NUMBER", "Some", "small", "improvement", "for", "the", "Readline", "interactor", "e", "NUMBER", "g", "NUMBER", "erase", "lines", "before", "a", "command", "be", "executed", "NUMBER", "I", "ve", "worked", "the", "last", "three", "days", "with", "each", "of", "the", "provide", "interactors", "simple", "readline", "and", "coolline", "and", "I", "ve", "never", "seen", "that", "the", "interactor", "fail", "NUMBER", "I", "m", "not", "aware", "of", "the", "change", "in", "the", "different", "patch", "levels", "NUMBER", "Did", "you", "add", "gem", "coolline", "to", "your", "Gemfile", "If", "you", "re", "use", "the", "coolline", "interactor", "then", "the", "prompt", "would", "change", "to", "instead", "of", "just", "of", "the", "Readline", "interactor", "NUMBER", "Ok", "then", "somehow", "the", "auto", "detection", "fail", "and", "you", "re", "use", "the", "simple", "interactor", "which", "has", "no", "prompt", "at", "all", "NUMBER", "Can", "you", "try", "to", "force", "another", "interactor", "by", "add", "Ruby", "interactor", "coolline", "to", "your", "Guardfile", "NUMBER", "You", "can", "also", "force", "the", "readline", "interactor", "in", "the", "same", "way", "if", "you", "want", "to", "give", "it", "a", "try", "NUMBER", "You", "re", "welcome", "NUMBER", "Can", "you", "do", "me", "a", "favor", "by", "run", "and", "report", "the", "results", "of", "the", "following", "commands", "Ruby", "pry", "NUMBER", "pry", "main", "require", "guard", "true", "NUMBER", "pry", "main", "Guard", "CoollineInteractor", "NUMBER", "available", "true", "NUMBER", "pry", "main", "RbConfig", "CONFIG", "RUBY_PROGRAM_VERSION", "NUMBER", "Perhaps", "Ruby", "NUMBER", "p", "NUMBER", "be", "report", "another", "RUBY_PROGRAM_VERSION", "than", "Ruby", "NUMBER", "p", "NUMBER", "so", "the", "auto", "detection", "fail", "NUMBER", "Thanks", "the", "report", "Ruby", "version", "be", "the", "same", "so", "this", "should", "not", "be", "the", "problem", "NUMBER", "The", "reason", "why", "you", "get", "an", "error", "be", "that", "I", "cheated", "with", "the", "pry", "log", "and", "remove", "the", "following", "line", "when", "searching", "for", "the", "interactor", "class", "Ruby", "NUMBER", "pry", "main", "Guard", "Interactor", "Guard", "Interactor", "which", "was", "add", "an", "auto", "load", "for", "Guard", "CoollineInteractor", "NUMBER", "Since", "you", "ve", "the", "right", "Ruby", "version", "you", "should", "have", "the", "same", "output", "for", "Ruby", "pry", "NUMBER", "pry", "main", "require", "guard", "interactor", "true", "NUMBER", "pry", "main", "Guard", "CoollineInteractor", "NUMBER", "available", "true", "Strange", "perhaps", "it", "takes", "an", "old", "global", "Guard", "gem", "because", "pry", "be", "run", "without", "bundle", "exec", "I", "have", "the", "latest", "Guard", "in", "the", "Gemfile", "and", "also", "in", "the", "global", "gems", "NUMBER", "Yes", "gem", "update", "system", "update", "RubyGems", "itself", "and", "you", "already", "have", "the", "latest", "version", "install", "NUMBER", "Managing", "gems", "seems", "simple", "but", "it", "can", "result", "to", "subtle", "runtime", "differences", "if", "you", "re", "not", "careful", "When", "I", "m", "in", "my", "home", "directory", "I", "have", "no", "Gemfile", "since", "it", "s", "not", "a", "project", "managed", "with", "Bundler", "thus", "it", "loads", "the", "global", "system", "gems", "when", "you", "start", "for", "example", "pry", "NUMBER", "You", "have", "to", "update", "the", "gems", "with", "gem", "update", "NUMBER", "When", "you", "re", "in", "a", "project", "with", "a", "Gemfile", "then", "you", "should", "add", "the", "needed", "gems", "to", "it", "and", "prefix", "each", "command", "with", "bundle", "exec", "like", "cd", "project", "bundle", "exec", "pry", "NUMBER", "You", "have", "to", "update", "the", "gems", "with", "bundle", "update", "NUMBER", "So", "you", "should", "have", "gem", "coolline", "in", "the", "Gemfile", "of", "each", "project", "with", "Guard", "and", "run", "Guard", "always", "with", "bundle", "exec", "NUMBER", "Concerning", "your", "run", "last", "fail", "shortcut", "This", "be", "implement", "within", "each", "plugin", "but", "Guard", "could", "just", "trigger", "an", "empty", "change", "NUMBER", "I", "m", "just", "wondering", "about", "your", "workflow", "to", "understand", "why", "you", "d", "like", "to", "have", "it", "When", "a", "spec", "fail", "I", "normally", "modify", "either", "the", "spec", "or", "the", "implementation", "to", "fix", "it", "which", "in", "turn", "would", "trigger", "a", "change", "NUMBER", "So", "why", "be", "it", "useful", "Don", "t", "get", "me", "wrong", "it", "d", "be", "a", "small", "change", "and", "I", "m", "not", "against", "implement", "it", "I", "m", "just", "wondering", "NUMBER", "Thanks", "for", "the", "clarification", "NUMBER", "If", "you", "like", "to", "have", "a", "shortcut", "to", "trigger", "the", "last", "fail", "specs", "just", "open", "a", "new", "issue", "and", "I", "ll", "add", "it", "then", "NUMBER", "Good", "point", "it", "s", "a", "mess", "NUMBER", "What", "do", "you", "think", "about", "renaming", "verbose", "in", "debug", "d", "NUMBER", "guard", "core", "team", "ok", "for", "you", "too", "I", "think", "we", "can", "change", "that", "in", "the", "NUMBER", "release", "henare", "can", "you", "please", "update", "the", "spec", "and", "maybe", "add", "a", "new", "one", "NUMBER", "Thanks", "Ok", "it", "fail", "but", "it", "isn", "t", "your", "fault", "Thanks", "Certainly", "at", "the", "end", "of", "this", "week", "alongs", "NUMBER", "release", "NUMBER", "Have", "you", "add", "ruby", "platform", "ruby", "do", "gem", "rb", "readline", "end", "in", "your", "Gemfile", "netzpirat", "great", "news", "cdlm", "ryansch", "I", "hope", "that", "coolline", "will", "solve", "that", "in", "the", "meantime", "guard", "no", "interactions", "seems", "the", "only", "solution", "sadly", "NUMBER", "I", "also", "get", "that", "sometimes", "with", "the", "Terminal", "NUMBER", "app", "NUMBER", "so", "it", "could", "be", "a", "readline", "issue", "NUMBER", "Sadly", "I", "wasn", "t", "able", "to", "add", "the", "coolline", "interactor", "at", "the", "hackday", "but", "if", "you", "re", "on", "Ruby", "NUMBER", "then", "the", "readline", "bug", "LINK", "lang", "NUMBER", "org", "issue", "NUMBER", "has", "be", "fix", "and", "you", "could", "give", "it", "a", "try", "by", "forcing", "the", "readline", "adapter", "without", "having", "rb", "readline", "install", "just", "add", "interactor", "readline", "to", "your", "Gemfile", "NUMBER", "If", "that", "works", "I", "ll", "remove", "the", "warning", "and", "change", "the", "auto", "detection", "NUMBER", "Guard", "NUMBER", "has", "be", "release", "with", "some", "interactor", "improvement", "and", "a", "new", "Coolline", "LINK", "Ouie", "coolline", "based", "interactor", "for", "Ruby", "NUMBER", "only", "NUMBER", "You", "can", "try", "it", "by", "upgrading", "Guard", "and", "add", "Ruby", "gem", "coolline", "instead", "of", "rb", "readline", "to", "your", "Gemfile", "NUMBER", "Looks", "like", "nobody", "be", "interested", "in", "this", "anymore", "no", "response", "for", "a", "week", "now", "NUMBER", "I", "close", "the", "issue", "please", "re", "open", "if", "you", "be", "interested", "in", "solving", "this", "NUMBER", "Like", "Github", "explain", "it", "LINK", "how", "we", "use", "pull", "request", "to", "build", "github", "I", "think", "it", "s", "a", "good", "idea", "to", "open", "a", "pull", "request", "even", "before", "having", "finished", "the", "implementation", "so", "we", "have", "a", "nice", "place", "to", "discuss", "what", "be", "do", "and", "what", "it", "left", "to", "do", "NUMBER", "So", "here", "the", "stuff", "to", "do", "before", "merge", "Documentation", "Adding", "throw", "stuff", "in", "the", "upgrade", "guide", "wiki", "page", "LINK", "guide", "for", "exist", "guards", "to", "Guard", "v", "NUMBER", "NUMBER", "Upgrading", "the", "README", "Replace", "old", "listeners", "info", "by", "Listen", "Code", "cli", "Add", "latency", "option", "dsl", "Update", "ignore_paths", "path", "method", "NUMBER", "dsl", "Add", "filters", "method", "Improve", "lib", "guard", "NUMBER", "rb", "specs", "Are", "you", "thinking", "of", "anything", "else", "Once", "the", "Code", "todos", "be", "do", "I", "propose", "that", "we", "all", "use", "it", "for", "real", "on", "your", "work", "project", "to", "detect", "un", "test", "bug", "NUMBER", "After", "that", "we", "could", "release", "a", "NUMBER", "pre", "version", "of", "Guard", "to", "allow", "every", "guards", "maintainers", "to", "upgrade", "before", "the", "official", "NUMBER", "release", "NUMBER", "Sounds", "good", "to", "you", "Maher", "NUMBER", "Ever", "you", "right", "NUMBER", "for", "an", "alpha", "release", "first", "NUMBER", "Nice", "little", "update", "ignore_paths", "method", "will", "be", "deprecate", "and", "replaced", "by", "ignore", "and", "filter", "more", "powerful", "Listen", "methods", "NUMBER", "Maher", "NUMBER", "Ever", "I", "just", "want", "to", "handle", "a", "last", "little", "issue", "before", "but", "release", "the", "alpha", "version", "this", "week", "would", "be", "great", "I", "just", "release", "the", "alpha", "version", "NUMBER", "I", "propose", "that", "we", "test", "it", "internally", "and", "advertise", "the", "beta", "version", "only", "to", "the", "guard", "community", "NUMBER", "Ok", "for", "you", "That", "s", "sound", "like", "a", "good", "idea", "NUMBER", "What", "kind", "of", "level", "would", "you", "propose", "Warning", "deprecation", "be", "a", "little", "different", "I", "think", "we", "could", "order", "those", "like", "that", "info", "debug", "warning", "deprecation", "error", "I", "agree", "that", "having", "guard", "wide", "option", "available", "would", "be", "nice", "it", "could", "maybe", "be", "do", "with", "caller", "LINK", "the", "caller", "method", "in", "ruby", "ruby", "method", "to", "know", "from", "which", "Guard", "the", "UI", "method", "has", "be", "call", "NUMBER", "So", "we", "would", "have", "a", "Guard", "cli", "option", "guard", "log_level", "info", "or", "guard", "l", "info", "And", "a", "Guard", "dsl", "option", "ruby", "guard", "rspec", "log_level", "info", "do", "NUMBER", "end", "If", "it", "s", "ok", "with", "you", "can", "you", "submit", "a", "pull", "request", "It", "would", "be", "awesome", "thanks", "Nah", "thumbsdown", "I", "had", "some", "bad", "experience", "with", "log", "NUMBER", "r", "on", "a", "big", "project", "I", "mean", "I", "love", "the", "concept", "and", "liked", "log", "NUMBER", "j", "a", "lot", "NUMBER", "Development", "stopped", "on", "RubyForge", "on", "the", "NUMBER", "NUMBER", "NUMBER", "LINK", "log", "NUMBER", "r", "NUMBER", "git", "a", "summary", "and", "some", "fix", "were", "made", "on", "its", "new", "home", "at", "GitHub", "LINK", "NUMBER", "months", "ago", "but", "it", "looks", "unmaintained", "now", "NUMBER", "I", "don", "t", "remember", "what", "the", "problem", "was", "exactly", "but", "I", "think", "I", "had", "some", "threading", "issue", "with", "the", "diagnostics", "contexts", "NUMBER", "It", "may", "work", "fine", "when", "we", "don", "t", "use", "the", "NDC", "and", "MDC", "features", "NUMBER", "Btw", "NUMBER", "I", "use", "now", "Lumberjack", "LINK", "which", "works", "fine", "NUMBER", "Release", "with", "NUMBER", "Have", "a", "look", "at", "the", "logger", "DSL", "method", "to", "customize", "the", "UI", "logger", "NUMBER", "guard", "spork", "directly", "kill", "LINK", "spork", "blob", "master", "lib", "guard", "spork", "spork_instance", "NUMBER", "rb", "L", "NUMBER", "Spork", "instance", "so", "it", "s", "maybe", "why", "the", "at_exit", "isn", "t", "properly", "executed", "NUMBER", "But", "anyway", "this", "bug", "be", "relate", "to", "guard", "spork", "and", "not", "Guard", "NUMBER", "Please", "open", "a", "issue", "here", "LINK", "spork", "issue", "NUMBER", "Thanks", "I", "m", "the", "maintainer", "of", "guard", "spork", "too", "I", "ve", "release", "guard", "spork", "NUMBER", "with", "Foreman", "support", "it", "could", "be", "maybe", "solve", "your", "issue", "NUMBER", "Create", "guard", "solr", "could", "also", "be", "another", "solution", "Oops", "it", "breaks", "the", "specs", "badly", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "Thanks", "Good", "for", "me", "too", "thanks", "mcmire", "just", "one", "point", "you", "can", "use", "bundle", "exec", "guard", "even", "if", "you", "want", "to", "run", "test", "without", "Bundler", "by", "setting", "bundler", "false", "on", "guard", "test", "rspec", "NUMBER", "Closing", "this", "since", "Guard", "NUMBER", "be", "release", "with", "Listen", "integration", "NUMBER", "Sounds", "good", "to", "me", "we", "can", "do", "that", "in", "Guard", "NUMBER", "alongs", "Listen", "integration", "Since", "Maher", "NUMBER", "Ever", "be", "very", "very", "busy", "lately", "with", "other", "stuff", "and", "nobody", "else", "want", "to", "take", "care", "of", "it", "I", "m", "closing", "this", "NUMBER", "If", "someone", "be", "still", "interested", "in", "putting", "some", "work", "into", "it", "please", "open", "a", "pull", "request", "P", "Thanks", "Could", "you", "please", "also", "reflect", "this", "update", "in", "the", "README", "under", "the", "Guardfile", "DSL", "notification", "section", "I", "think", "that", "s", "enough", "what", "do", "you", "think", "netzpirat", "Thanks", "Added", "to", "CHANGELOG", "LINK", "as", "well", "Please", "can", "you", "try", "if", "it", "works", "with", "the", "Listen", "gem", "LINK", "NUMBER", "Thanks", "Guard", "NUMBER", "has", "be", "release", "with", "Listen", "integration", "please", "give", "it", "a", "try", "and", "re", "open", "the", "issue", "when", "you", "still", "have", "an", "issue", "with", "it", "NUMBER", "Since", "Guard", "NUMBER", "there", "s", "now", "a", "latency", "CLI", "option", "that", "has", "influence", "on", "polling", "adapter", "NUMBER", "Can", "you", "play", "with", "this", "option", "to", "see", "if", "you", "can", "make", "it", "work", "I", "didn", "t", "give", "a", "recommendation", "on", "purpose", "because", "I", "didn", "t", "implement", "anything", "in", "the", "_much_", "improved", "Listen", "LINK", "gem", "and", "have", "thus", "almost", "no", "knowledge", "in", "this", "area", "NUMBER", "Perhaps", "thibaudgg", "or", "Maher", "NUMBER", "Ever", "can", "join", "to", "help", "From", "my", "understanding", "the", "polling", "listener", "compares", "the", "file", "mtime", "and", "also", "compares", "the", "content", "checksum", "on", "subsequent", "modifications", "NUMBER", "The", "latency", "be", "the", "time", "in", "between", "the", "polling", "adapter", "actions", "in", "which", "it", "try", "to", "find", "the", "modify", "file", "NUMBER", "According", "to", "this", "Virtualbox", "Ticket", "LINK", "the", "copied", "file", "now", "has", "the", "timestamp", "of", "the", "host", "os", "when", "it", "was", "copied", "into", "the", "shared", "folder", "and", "not", "the", "time", "when", "it", "was", "copied", "into", "the", "vm", "do", "I", "understand", "this", "correctly", "So", "if", "the", "latency", "of", "the", "os", "vm", "copy", "process", "be", "bigger", "the", "Guard", "s", "latency", "the", "the", "file", "change", "will", "not", "be", "catched", "In", "any", "case", "I", "would", "now", "try", "to", "decrease", "the", "Guard", "latency", "NUMBER", "Can", "you", "please", "analyse", "your", "inotify", "events", "as", "describe", "in", "the", "wiki", "LINK", "of", "inotify", "events", "for", "different", "editors", "and", "add", "your", "finding", "to", "it", "wiki", "NUMBER", "Perhaps", "this", "helps", "to", "understand", "the", "inotify", "issue", "NUMBER", "rchampourlier", "interesting", "and", "on", "a", "local", "file", "editing", "and", "saving", "with", "SublimeText", "TextMate", "only", "triggers", "one", "time", "with", "polling", "Ok", "it", "could", "be", "an", "error", "in", "the", "polling", "adapter", "of", "Listen", "NUMBER", "Could", "you", "please", "paste", "the", "debug", "output", "of", "Guard", "when", "run", "with", "bundle", "exec", "guard", "d", "p", "l", "NUMBER", "please", "Also", "note", "that", "we", "be", "work", "to", "improve", "monitoring", "of", "remote", "filesystems", "events", "guard", "listen", "NUMBER", "Maher", "NUMBER", "Ever", "do", "you", "have", "any", "thoughts", "on", "that", "one", "steakknife", "could", "you", "explain", "more", "in", "details", "the", "unpredictable", "results", "EDIT", "As", "far", "as", "I", "can", "tell", "use", "the", "guard", "guard", "master", "sending", "kill", "USR", "NUMBER", "pid", "pauses", "Guard", "and", "sending", "kill", "USR", "NUMBER", "pid", "un", "pauses", "Guard", "as", "expected", "NUMBER", "Yeah", "why", "not", "moving", "the", "handlers", "registration", "here", "LINK", "L", "NUMBER", "with", "a", "check", "to", "be", "sure", "listener", "be", "instanciated", "but", "maybe", "it", "s", "not", "even", "necessary", "Don", "t", "be", "rude", "man", "We", "did", "what", "you", "wanted", "and", "you", "re", "still", "not", "happy", "Discussion", "be", "part", "of", "collaboration", "don", "t", "take", "it", "that", "way", "You", "could", "at", "least", "say", "Thanks", "Man", "what", "be", "your", "drug", "seriously", "bear", "I", "can", "t", "believe", "you", "dare", "telling", "us", "to", "be", "nice", "NUMBER", "If", "you", "really", "want", "to", "collaborate", "to", "Guard", "you", "ll", "have", "to", "at", "least", "be", "polite", "be", "thankful", "you", "never", "said", "thanks", "we", "all", "did", "at", "least", "once", "accept", "that", "sometimes", "your", "code", "be", "not", "perfect", "not", "be", "always", "ironic", "otherwise", "no", "one", "will", "ever", "trust", "you", "NUMBER", "Why", "don", "t", "you", "simply", "say", "I", "m", "really", "sorry", "guys", "there", "were", "some", "misunderstanding", "but", "now", "everything", "be", "alright", "thanks", "very", "much", "for", "including", "my", "contribution", "into", "Guard", "NUMBER", "and", "stop", "playing", "the", "victim", "that", "has", "nothing", "to", "say", "but", "Be", "nice", "when", "you", "re", "not", "nice", "yourself", "NUMBER", "Very", "good", "catch", "Thanks", "very", "much", "for", "clarifying", "all", "that", "And", "you", "re", "in", "the", "CHANGELOG", "LINK", "now", "clap", "Awesome", "netzpirat", "Done", "Good", "point", "Pull", "request", "very", "welcome", "steakknife", "If", "you", "d", "know", "netzpirat", "personally", "you", "wouldn", "t", "have", "answered", "him", "like", "that", "NUMBER", "Please", "talk", "to", "him", "with", "the", "respect", "he", "deserves", "NUMBER", "Thanks", "in", "advance", "NUMBER", "Awesome", "great", "thanks", "Yep", "netzpirat", "be", "right", "and", "the", "issue", "be", "more", "likely", "to", "come", "from", "your", "watch", "blocks", "than", "from", "the", "fact", "that", "Guard", "be", "watching", "the", "Guardfile", "s", "directory", "NUMBER", "Now", "that", "Listen", "LINK", "seems", "ready", "to", "be", "use", "it", "s", "time", "to", "integrate", "it", "inside", "Guard", "yeah", "Doing", "so", "will", "engender", "some", "important", "change", "in", "Guard", "and", "I", "want", "to", "get", "your", "feedback", "about", "them", "NUMBER", "Listen", "gem", "will", "give", "us", "modify", "add", "and", "remove", "file", "paths", "right", "now", "Guard", "only", "has", "modify", "and", "add", "file", "given", "together", "via", "run_on_change", "and", "remove", "moved", "file", "paths", "via", "run_on_deletion", "with", "the", "A", "watch", "all", "modifications", "option", "but", "there", "s", "an", "issue", "NUMBER", "with", "the", "implementation", "NUMBER", "I", "propose", "A", "watch", "all", "modifications", "option", "should", "be", "remove", "as", "Listen", "gem", "will", "always", "watch", "all", "change", "NUMBER", "run_on_change", "run_on_deletion", "should", "be", "deprecate", "and", "replaced", "by", "run_on_addition", "run_on_modification", "and", "run_on_removals", "more", "about", "that", "below", "NUMBER", "I", "no", "vendor", "option", "could", "be", "remove", "as", "Listen", "gem", "handle", "that", "NUMBER", "ext", "lib", "vendor", "path", "could", "be", "remove", "obviously", "NUMBER", "I", "m", "aware", "that", "deprecating", "run_on_change", "run_on_deletion", "will", "warns", "on", "all", "guards", "but", "it", "will", "really", "be", "easy", "to", "upgrade", "one", "or", "two", "methods", "to", "rename", "for", "everyone", "and", "I", "think", "the", "whole", "guards", "ecosystem", "will", "benefice", "of", "that", "NUMBER", "We", "could", "just", "show", "a", "deprecation", "warning", "message", "for", "each", "deprecate", "guards", "when", "launching", "Guard", "with", "something", "like", "DEPRECATION", "WARNING", "Guard", "XXX", "run_on_change", "be", "deprecate", "and", "will", "be", "remove", "in", "future", "release", "be", "it", "really", "easy", "to", "upgrade", "please", "read", "wiki", "page", "link", "What", "do", "you", "think", "of", "that", "do", "you", "see", "other", "alternative", "Awesome", "guys", "Yeah", "that", "s", "already", "the", "case", "because", "guard", "will", "inherits", "from", "this", "implementation", "LINK", "L", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "for", "rymai", "explanation", "NUMBER", "Maher", "NUMBER", "Ever", "the", "lock", "be", "to", "block", "new", "run_on_changes", "call", "if", "I", "remember", "well", "NUMBER", "PS", "Thanks", "to", "work", "on", "runner", "specs", "Nice", "progression", "We", "still", "need", "to", "work", "on", "deprecation", "warnings", "and", "the", "wiki", "page", "with", "info", "about", "how", "to", "upgrade", "exist", "guards", "NUMBER", "Maher", "NUMBER", "Ever", "nice", "work", "What", "do", "you", "thinks", "about", "add", "a", "link", "to", "a", "wiki", "page", "with", "more", "explanation", "about", "how", "to", "upgrade", "with", "code", "examples", "in", "the", "deprecation", "warnings", "I", "think", "we", "really", "need", "to", "help", "guards", "creators", "to", "upgrade", "to", "Guard", "NUMBER", "quickly", "NUMBER", "Yeah", "it", "s", "really", "great", "netzpirat", "do", "you", "think", "we", "should", "also", "add", "some", "note", "about", "properly", "throw", "error", "when", "something", "goes", "wrong", "on", "run_on_", "methods", "Ah", "we", "also", "need", "to", "deprecate", "no", "vendor", "watch", "all", "modifications", "command", "line", "options", "and", "explain", "that", "now", "watch", "all", "modifications", "be", "always", "active", "The", "upgrade", "guide", "include", "now", "a", "section", "about", "proper", "error", "handle", "NUMBER", "Kudos", "to", "thibaudgg", "and", "Maher", "NUMBER", "Ever", "for", "Listen", "and", "also", "the", "integration", "into", "Guard", "NUMBER", "Please", "can", "you", "open", "an", "issue", "in", "guard", "rspec", "instead", "NUMBER", "Thanks", "Have", "you", "Dropbox", "install", "Try", "also", "to", "add", "rb", "fsevent", "NUMBER", "in", "your", "Gemfile", "and", "launch", "Guard", "with", "no", "vendor", "NUMBER", "Yeah", "Dropbox", "be", "know", "to", "cause", "problem", "sometimes", "try", "to", "update", "your", "Dropbox", "client", "and", "maybe", "move", "rename", "your", "folder", "it", "works", "sometimes", "as", "well", "NUMBER", "If", "you", "want", "you", "can", "give", "a", "try", "to", "the", "new", "Listen", "gem", "that", "will", "be", "soon", "use", "inside", "Guard", "and", "that", "should", "nicely", "falling", "back", "to", "polling", "in", "your", "case", "NUMBER", "LINK", "Great", "This", "be", "still", "fail", "on", "the", "listen", "branch", "NUMBER", "I", "think", "a", "lot", "of", "users", "use", "RVM", "without", "gemset", "like", "me", "so", "I", "don", "t", "it", "would", "be", "a", "good", "idea", "to", "remove", "this", "WARNING", "when", "use", "RVM", "NUMBER", "You", "can", "still", "make", "an", "alias", "with", "bundle", "exec", "guard", "no", "Thanks", "to", "report", "it", "it", "s", "fix", "now", "sunaku", "not", "sure", "about", "_filling_", "be", "more", "memorable", "Listen", "sound", "great", "to", "me", "and", "I", "already", "release", "version", "NUMBER", "sunaku", "at", "the", "moment", "only", "polling", "adapter", "be", "implement", "and", "the", "README", "isn", "t", "in", "sync", "with", "the", "code", "but", "it", "ll", "be", "update", "soon", "NUMBER", "That", "a", "work", "in", "progress", "NUMBER", "Pease", "feel", "free", "to", "give", "your", "feedback", "on", "open", "issue", "like", "this", "one", "LINK", "NUMBER", "Thanks", "Awesome", "very", "good", "work", "We", "ll", "release", "that", "in", "Guard", "NUMBER", "thanks", "NUMBER", "Too", "bad", "This", "could", "arrive", "when", "there", "s", "too", "much", "file", "to", "watch", "in", "your", "folder", "you", "can", "ignore", "some", "path", "with", "ignore_paths", "method", "more", "info", "about", "it", "in", "the", "README", "LINK", "readme", "That", "s", "weird", "try", "to", "ask", "lib", "notify", "guys", "NUMBER", "Any", "news", "Paths", "be", "only", "ignored", "at", "the", "Guard", "level", "but", "not", "with", "rb", "inotify", "so", "use", "ignore_paths", "isn", "t", "useful", "here", "NUMBER", "To", "solve", "your", "issue", "I", "think", "we", "need", "an", "ignore_paths", "option", "in", "rb", "inotify", "NUMBER", "nex", "NUMBER", "do", "you", "think", "it", "would", "be", "possible", "jhirn", "Nice", "link", "thanks", "to", "share", "it", "cc", "Maher", "NUMBER", "Ever", "Maher", "NUMBER", "Ever", "yeah", "NUMBER", "for", "a", "link", "to", "our", "first", "Listen", "wiki", "page", "Can", "you", "give", "your", "Guardfile", "Gemfile", "please", "Salut", "Philippe", "je", "pense", "que", "les", "pi\u00e8ces", "jointes", "par", "mail", "ne", "marchent", "pas", "sous", "Github", "tu", "pourrais", "faire", "un", "gist", "Le", "No", "examples", "find", "NUMBER", "vient", "du", "faite", "que", "tu", "ne", "dois", "pas", "avoir", "de", "specs", "juste", "Sinon", "pour", "la", "d\u00e9tection", "des", "modifications", "essaye", "d", "effacer", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "ou", "de", "le", "remplacer", "par", "gem", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "Non", "je", "pense", "pas", "NUMBER", "T", "utilises", "DropBox", "Essaye", "voir", "de", "renommer", "deplacer", "le", "dossier", "de", "l", "application", "et", "peut", "\u00eatre", "un", "restart", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Pour", "le", "No", "example", "effectivement", "ca", "s", "et", "regle", "des", "que", "j", "ai", "mis", "une", "spec", "par", "contre", "en", "enlevant", "la", "ligne", "fsevent", "ou", "en", "la", "remplacant", "ca", "ne", "change", "rien", "NUMBER", "Est", "ce", "que", "LIvereload", "pourrait", "etre", "le", "probleme", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Le", "No", "examples", "find", "NUMBER", "vient", "du", "faite", "que", "tu", "ne", "dois", "pas", "avoir", "de", "specs", "juste", "Sinon", "pour", "la", "d\u00e9tection", "des", "modifications", "essaye", "d", "effacer", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "ou", "de", "le", "remplacer", "par", "gem", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "D\u00e8s", "fois", "il", "y", "a", "des", "conflits", "avec", "Dropbox", "c", "est", "pour", "\u00e7a", "NUMBER", "Si", "ton", "app", "est", "dans", "le", "dossier", "de", "Dropbox", "tu", "peux", "aussi", "essayer", "de", "la", "mettre", "en", "dehors", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Oui", "j", "utilise", "Dropbox", "comment", "tu", "le", "sais", "Je", "vais", "essayer", "ca", "NUMBER", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Non", "je", "pense", "pas", "NUMBER", "T", "utilises", "DropBox", "Essaye", "voir", "de", "renommer", "deplacer", "le", "dossier", "de", "l", "application", "et", "peut", "\u00eatre", "un", "restart", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Pour", "le", "No", "example", "effectivement", "ca", "s", "et", "regle", "des", "que", "j", "ai", "mis", "une", "spec", "par", "contre", "en", "enlevant", "la", "ligne", "fsevent", "ou", "en", "la", "remplacant", "ca", "ne", "change", "rien", "NUMBER", "Est", "ce", "que", "LIvereload", "pourrait", "etre", "le", "probleme", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Le", "No", "examples", "find", "NUMBER", "vient", "du", "faite", "que", "tu", "ne", "dois", "pas", "avoir", "de", "specs", "juste", "Sinon", "pour", "la", "d\u00e9tection", "des", "modifications", "essaye", "d", "effacer", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "ou", "de", "le", "remplacer", "par", "gem", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "C", "est", "une", "issue", "avec", "rb", "fsevent", "essaye", "de", "mettre", "\u00e0", "jour", "ton", "client", "DropBox", "d\u00e8s", "fois", "cela", "fixe", "le", "probl\u00e8me", "LINK", "Je", "t", "en", "prie", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Salut", "Thibaud", "J", "ai", "sorti", "le", "dossier", "de", "la", "DropBox", "et", "maintenant", "ca", "marche", "Penses", "tu", "que", "ce", "conflit", "avec", "DropBox", "va", "pouvoir", "etre", "corrige", "un", "jour", "Est", "ce", "un", "probleme", "avec", "fbsevent", "ou", "guard", "C", "est", "tres", "pratique", "d", "avoir", "les", "applications", "dans", "DropBox", "pour", "plein", "de", "raisons", "possibilite", "de", "partage", "entre", "differents", "ordis", "os", "etc", "NUMBER", "Merci", "beaucoup", "Philippe", "NUMBER", "NUMBER", "NUMBER", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "D\u00e8s", "fois", "il", "y", "a", "des", "conflits", "avec", "Dropbox", "c", "est", "pour", "\u00e7a", "NUMBER", "Si", "ton", "app", "est", "dans", "le", "dossier", "de", "Dropbox", "tu", "peux", "aussi", "essayer", "de", "la", "mettre", "en", "dehors", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Oui", "j", "utilise", "Dropbox", "comment", "tu", "le", "sais", "Je", "vais", "essayer", "ca", "NUMBER", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Non", "je", "pense", "pas", "NUMBER", "T", "utilises", "DropBox", "Essaye", "voir", "de", "renommer", "deplacer", "le", "dossier", "de", "l", "application", "et", "peut", "\u00eatre", "un", "restart", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Pour", "le", "No", "example", "effectivement", "ca", "s", "et", "regle", "des", "que", "j", "ai", "mis", "une", "spec", "par", "contre", "en", "enlevant", "la", "ligne", "fsevent", "ou", "en", "la", "remplacant", "ca", "ne", "change", "rien", "NUMBER", "Est", "ce", "que", "LIvereload", "pourrait", "etre", "le", "probleme", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Le", "No", "examples", "find", "NUMBER", "vient", "du", "faite", "que", "tu", "ne", "dois", "pas", "avoir", "de", "specs", "juste", "Sinon", "pour", "la", "d\u00e9tection", "des", "modifications", "essaye", "d", "effacer", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "ou", "de", "le", "remplacer", "par", "gem", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Hi", "yes", "it", "sounds", "like", "a", "good", "idea", "NUMBER", "Can", "you", "submit", "a", "pull", "request", "for", "that", "it", "would", "be", "great", "Thanks", "NUMBER", "I", "think", "the", "only", "thing", "to", "accomplish", "here", "be", "too", "add", "all", "guards", "present", "in", "the", "Gemfile", "to", "the", "Guardfile", "if", "guard", "init", "be", "run", "without", "any", "parameters", "creating", "an", "Guardfile", "when", "not", "present", "be", "already", "handle", "NUMBER", "If", "some", "guards", "or", "all", "be", "already", "present", "in", "the", "Guardfile", "they", "will", "just", "be", "add", "again", "It", "s", "already", "the", "case", "when", "you", "run", "guard", "init", "xxx", "and", "I", "think", "it", "s", "a", "fine", "behavior", "NUMBER", "rupert", "NUMBER", "any", "news", "Merged", "thanks", "to", "Maher", "NUMBER", "Ever", "Answered", "here", "LINK", "rspec", "issue", "NUMBER", "NUMBER", "We", "should", "add", "a", "warning", "message", "or", "even", "refuse", "to", "launch", "Guard", "if", "a", "Gemfile", "be", "present", "and", "bundle", "exec", "isn", "t", "use", "NUMBER", "We", "can", "maybe", "doing", "it", "like", "that", "LINK", "to", "raise", "error", "if", "cap", "deploy", "was", "not", "invoked", "use", "bundle", "exec", "NUMBER", "We", "just", "need", "to", "be", "careful", "if", "the", "rubygems", "bundler", "LINK", "bundler", "gem", "be", "install", "use", "NUMBER", "This", "would", "be", "a", "nice", "addition", "before", "the", "NUMBER", "release", "We", "need", "to", "check", "that", "no", "idea", "how", "it", "works", "NUMBER", "I", "think", "warning", "would", "be", "a", "good", "fit", "here", "something", "like", "WARNING", "You", "be", "use", "Guard", "outside", "of", "Bundler", "this", "be", "dangerous", "and", "could", "not", "work", "NUMBER", "Using", "bundle", "exec", "guard", "be", "safer", "NUMBER", "I", "would", "add", "this", "warning", "to", "all", "actions", "to", "safe", "us", "a", "little", "more", "hours", "in", "NUMBER", "Awesome", "thanks", "semaperepelitsa", "We", "re", "checking", "for", "a", "Gemfile", "and", "the", "non", "presence", "of", "ENV", "BUNDLE_GEMFILE", "LINK", "L", "NUMBER", "semaperepelitsa", "I", "just", "release", "version", "NUMBER", "please", "tell", "me", "if", "it", "works", "for", "you", "NUMBER", "Yeah", "very", "good", "points", "NUMBER", "We", "ll", "release", "Guard", "NUMBER", "soon", "D", "Guard", "will", "be", "update", "to", "NUMBER", "once", "these", "issue", "LINK", "NUMBER", "sort", "created", "direction", "desc", "state", "open", "will", "be", "close", "if", "it", "s", "ok", "for", "netzpirat", "and", "rymai", "NUMBER", "But", "I", "think", "we", "will", "propably", "release", "a", "last", "NUMBER", "version", "before", "NUMBER", "Stay", "tuned", "I", "think", "it", "s", "more", "something", "that", "should", "be", "add", "in", "the", "README", "of", "guard", "test", "LINK", "test", "please", "open", "an", "issue", "there", "or", "directly", "submit", "a", "pull", "request", "NUMBER", "Thanks", "Thanks", "It", "s", "write", "like", "that", "guard", "test", "LINK", "test", "Great", "move", "thanks", "Can", "you", "give", "more", "information", "like", "file", "tree", "gemspec", "github", "repo", "NUMBER", "because", "this", "suggestion", "has", "worked", "great", "for", "many", "many", "guards", "gem", "NUMBER", "Please", "have", "a", "look", "on", "how", "this", "be", "handle", "in", "other", "gems", "guard", "rspec", "LINK", "rspec", "blob", "master", "lib", "guard", "rspec", "version", "NUMBER", "rb", "guard", "jasmine", "LINK", "jasmine", "blob", "master", "lib", "guard", "jasmine", "version", "NUMBER", "rb", "NUMBER", "Do", "you", "think", "it", "should", "be", "more", "explained", "in", "the", "README", "I", "m", "ask", "myself", "if", "it", "s", "not", "relate", "to", "issue", "NUMBER", "I", "ll", "take", "a", "look", "this", "week", "end", "or", "next", "week", "NUMBER", "It", "isn", "t", "the", "case", "now", "After", "some", "more", "thinking", "I", "m", "not", "so", "sure", "that", "be", "a", "bug", "maybe", "it", "s", "more", "a", "feature", "Skipping", "Guardfile", "reevaluation", "when", "listener", "be", "paused", "can", "bring", "to", "weird", "situation", "Guard", "not", "up", "to", "date", "in", "sync", "with", "Guardfile", "NUMBER", "So", "we", "should", "always", "reevaluate", "a", "modify", "Guardfile", "even", "if", "listener", "be", "paused", "NUMBER", "netzpirat", "rymai", "what", "do", "you", "think", "No", "change", "needed", "Yes", "my", "case", "was", "precisely", "when", "switching", "from", "a", "branch", "to", "another", "but", "in", "that", "case", "if", "the", "Guardfile", "will", "reevaluated", "anyway", "why", "not", "do", "it", "directly", "without", "waiting", "for", "the", "listener", "un", "pause", "Oh", "I", "see", "nice", "NUMBER", "I", "ll", "think", "about", "it", "Great", "thanks", "Maher", "NUMBER", "Ever", "this", "be", "ready", "to", "be", "merge", "Have", "you", "tried", "to", "update", "to", "latest", "guard", "guard", "rspec", "version", "You", "right", "it", "s", "a", "bug", "thanks", "to", "report", "it", "NUMBER", "Could", "you", "please", "try", "to", "fix", "it", "and", "submit", "a", "pull", "request", "Changes", "be", "fired", "at", "file", "level", "so", "it", "s", "quite", "normal", "to", "not", "receive", "run_on_change", "for", "the", "new", "path", "I", "think", "the", "problem", "rather", "comes", "form", "receiving", "the", "run_on_deletion", "hook", "on", "directory", "event", "NUMBER", "Do", "you", "get", "the", "same", "behavior", "for", "file", "renaming", "Ok", "I", "understand", "it", "better", "now", "I", "think", "your", "right", "NUMBER", "Can", "you", "provide", "a", "fail", "spec", "and", "a", "patch", "for", "that", "It", "would", "be", "awesome", "thanks", "NUMBER", "Great", "thanks", "Which", "rb", "fsevent", "version", "do", "you", "use", "Because", "the", "version", "of", "rb", "fsevent", "vendored", "in", "Guard", "should", "only", "return", "the", "parent", "directory", "of", "the", "renamed", "directory", "NUMBER", "After", "some", "time", "pass", "to", "study", "this", "issue", "I", "think", "I", "understand", "well", "the", "problem", "and", "watch_all_modifications", "true", "feature", "must", "be", "certainly", "completely", "rewrited", "use", "a", "Tree", "structure", "like", "fssm", "LINK", "to", "keep", "trace", "of", "all", "created", "moved", "delete", "paths", "NUMBER", "ttilley", "maybe", "it", "s", "time", "to", "think", "about", "extracting", "merge", "the", "listening", "stuff", "windows", "support", "checksums_hash", "NUMBER", "of", "Guard", "inside", "fssm", "or", "the", "other", "way", "around", "NUMBER", "There", "s", "certainly", "a", "lot", "of", "overlapping", "here", "NUMBER", "I", "think", "this", "issue", "be", "also", "relate", "with", "NUMBER", "and", "NUMBER", "So", "for", "now", "watch_all_modifications", "option", "be", "not", "to", "be", "considerated", "as", "rock", "solid", "sadly", "NUMBER", "PS", "After", "this", "rewrite", "maybe", "we", "ll", "be", "able", "to", "remove", "this", "option", "and", "watch", "all", "modifications", "all", "the", "time", "that", "would", "be", "great", "ttilley", "after", "a", "discussion", "on", "guard", "irc", "NUMBER", "freenode", "NUMBER", "net", "with", "netzpirat", "and", "rymai", "we", "all", "agree", "that", "extracting", "Guard", "Listeners", "to", "its", "own", "gems", "it", "s", "a", "smart", "move", "but", "we", "re", "not", "sure", "if", "it", "s", "a", "good", "idea", "to", "merge", "it", "directly", "inside", "FSSM", "NUMBER", "What", "do", "you", "think", "about", "creating", "a", "new", "gem", "netzpirat", "has", "propose", "Listener", "LINK", "with", "its", "own", "github", "organization", "or", "maybe", "in", "Guard", "organization", "if", "that", "doesn", "t", "bother", "you", "so", "we", "can", "begin", "from", "scratch", "and", "merge", "all", "good", "idea", "from", "FSSM", "and", "Guard", "I", "also", "think", "there", "be", "some", "pretty", "good", "ideas", "to", "take", "from", "vigilo", "LINK", "from", "wycats", "like", "use", "a", "two", "level", "hash", "LINK", "L", "NUMBER", "instead", "of", "a", "tree", "structure", "way", "more", "simple", "I", "think", "NUMBER", "To", "accomplish", "that", "I", "was", "thinking", "to", "that", "todo", "list", "NUMBER", "Define", "Gem", "name", "repository", "organization", "stuff", "use", "Pivotal", "Tracker", "or", "just", "Github", "Issues", "NUMBER", "NUMBER", "Write", "README", "and", "defining", "first", "public", "API", "version", "maybe", "something", "between", "FSSM", "and", "Vigilo", "NUMBER", "Write", "RSpec", "NUMBER", "Write", "Polling", "listeners", "NUMBER", "Add", "systems", "backend", "support", "Darwin", "Linux", "Windows", "NUMBER", "Found", "a", "Windows", "user", "to", "test", "it", "point", "featured", "by", "netzpirat", "This", "new", "gem", "must", "be", "Thread", "safe", "and", "work", "on", "all", "major", "Ruby", "VMs", "MRI", "NUMBER", "NUMBER", "x", "JRuby", "Rubinius", "NUMBER", "Obviously", "it", "would", "be", "great", "if", "the", "migration", "for", "FSSM", "users", "be", "simple", "to", "do", "NUMBER", "All", "that", "be", "clearly", "open", "to", "discussion", "but", "I", "think", "we", "have", "all", "what", "s", "needed", "to", "build", "a", "great", "gem", "BTW", "we", "should", "maybe", "continue", "this", "discussion", "to", "a", "new", "issue", "or", "in", "the", "guard", "google", "group", "LINK", "dev", "NUMBER", "Ok", "there", "be", "the", "new", "Listener", "LINK", "repository", "under", "the", "Guard", "repo", "with", "a", "new", "issue", "about", "defining", "the", "API", "LINK", "NUMBER", "ttilley", "once", "the", "listener", "gem", "be", "ready", "to", "production", "maybe", "you", "can", "deprecate", "FSSM", "and", "add", "a", "deprecation", "warning", "message", "in", "the", "gem", "README", "ask", "people", "to", "upgrade", "to", "the", "new", "gem", "NUMBER", "We", "must", "also", "trying", "to", "contact", "all", "FSSM", "Vigilo", "users", "via", "Github", "directly", "so", "they", "could", "participate", "to", "the", "new", "API", "elaboration", "and", "talk", "about", "their", "need", "multi", "directories", "directory", "events", "support", "wycats", "be", "you", "interested", "to", "have", "a", "collaborator", "access", "to", "this", "new", "repository", "and", "participate", "It", "would", "be", "an", "honor", "This", "modification", "be", "needed", "to", "allow", "good", "restart", "of", "the", "guard", "livereload", "server", "could", "also", "be", "useful", "for", "guards", "with", "server", "handlings", "like", "guard", "spork", "guard", "jasmine", "etc", "NUMBER", "but", "theses", "guards", "should", "need", "to", "be", "update", "so", "I", "think", "we", "should", "bump", "Guard", "version", "to", "NUMBER", "after", "this", "pull", "request", "acceptance", "NUMBER", "Do", "you", "see", "any", "drawbacks", "about", "this", "update", "Do", "you", "think", "it", "will", "change", "the", "meaning", "of", "the", "start", "stop", "guard", "methods", "Thanks", "for", "your", "feedback", "NUMBER", "Also", "if", "you", "find", "a", "nice", "way", "to", "specs", "the", "start", "part", "LINK", "_spec", "NUMBER", "rb", "L", "NUMBER", "NUMBER", "it", "would", "be", "great", "I", "m", "stuck", "netzpirat", "rymai", "no", "feedback", "This", "be", "needed", "to", "fix", "guard", "livereload", "on", "Guardfile", "reevaluation", "NUMBER", "Ok", "great", "I", "ll", "update", "guard", "spork", "guard", "livereload", "to", "use", "this", "change", "and", "release", "Guard", "NUMBER", "soon", "NUMBER", "Thanks", "netzpirat", "I", "hope", "your", "flu", "be", "gone", "Happy", "new", "year", "Hi", "Johannes", "this", "should", "be", "submitted", "to", "my", "rb", "fsevent", "repository", "LINK", "fsevent", "blob", "master", "ext", "extconf", "NUMBER", "rb", "as", "the", "extconf", "NUMBER", "rb", "guard", "file", "be", "copied", "from", "there", "via", "rake", "build_vendor", "LINK", "L", "NUMBER", "NUMBER", "task", "NUMBER", "Thanks", "You", "right", "it", "wasn", "t", "update", "yet", "NUMBER", "I", "just", "push", "it", "LINK", "to", "master", "can", "you", "try", "it", "please", "NUMBER", "ttilley", "there", "si", "a", "no", "vendor", "option", "if", "you", "want", "to", "skip", "the", "vendored", "lib", "NUMBER", "bundle", "exec", "guard", "no", "vendor", "With", "the", "no", "vendor", "option", "you", "need", "to", "add", "rb", "fsevent", "prerelease", "in", "your", "Gemfile", "NUMBER", "For", "use", "the", "GitHub", "master", "version", "of", "Guard", "and", "skip", "the", "no", "vendor", "option", "you", "need", "to", "add", "that", "in", "your", "Gemfile", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "Is", "it", "more", "clear", "now", "Je", "t", "en", "prie", "merci", "I", "m", "not", "sure", "if", "rb", "fsevent", "works", "well", "on", "NUMBER", "and", "on", "PowerPC", "NUMBER", "Is", "itthe", "case", "ttilley", "madtrick", "ttilley", "rb", "fsevent", "be", "hideously", "embedded", "inside", "Guard", "so", "it", "certainly", "not", "the", "last", "version", "NUMBER", "This", "will", "change", "with", "the", "Listen", "gem", "NUMBER", "In", "the", "meantime", "you", "can", "skip", "the", "embedded", "version", "with", "the", "no", "vendor", "option", "and", "add", "rb", "fsevent", "in", "your", "Gemfile", "NUMBER", "Prasanna", "NUMBER", "this", "will", "be", "fix", "in", "Guard", "NUMBER", "with", "the", "Listen", "gem", "And", "I", "think", "you", "have", "Xcode", "install", "right", "Have", "you", "try", "to", "move", "your", "repository", "to", "another", "volume", "or", "directory", "It", "s", "a", "know", "issue", "with", "rb", "fsevent", "LINK", "fsevent", "issue", "NUMBER", "feel", "free", "to", "contact", "ttilley", "if", "you", "have", "more", "question", "NUMBER", "Guard", "RSpec", "formatter", "be", "call", "outside", "guard", "so", "notifications", "variable", "be", "always", "empty", "if", "not", "set", "with", "an", "ENV", "variable", "and", "no", "notifications", "be", "fired", "NUMBER", "Sounds", "good", "to", "you", "I", "didn", "t", "think", "about", "that", "good", "point", "NUMBER", "But", "because", "I", "don", "t", "see", "how", "to", "achieve", "to", "fix", "this", "problem", "in", "an", "other", "way", "what", "do", "you", "think", "of", "scoping", "the", "env", "variable", "with", "something", "like", "Dir", "NUMBER", "pwd", "it", "ll", "give", "ENV", "GUARD_NOTIFICATIONS", "Dir", "NUMBER", "pwd", "NUMBER", "Don", "t", "we", "have", "the", "same", "issue", "with", "ENV", "GUARD_NOTIFY", "Ok", "great", "so", "I", "merge", "it", "that", "s", "way", "NUMBER", "Ok", "so", "we", "certainly", "need", "to", "add", "a", "option", "to", "disable", "or", "enable", "readline", "what", "do", "you", "think", "about", "that", "netzpirat", "Just", "to", "be", "sure", "be", "you", "launching", "guard", "with", "bundle", "exec", "pyrat", "have", "you", "try", "with", "Guard", "NUMBER", "Can", "you", "give", "your", "Gemfile", "Guardfile", "please", "and", "be", "sure", "to", "launch", "guard", "with", "bundle", "exec", "guard", "Could", "be", "useful", "can", "you", "please", "add", "specs", "and", "documentations", "before", "we", "merge", "it", "NUMBER", "Thanks", "Seems", "good", "to", "me", "netzpirat", "rymai", "be", "this", "ok", "for", "you", "Which", "version", "of", "rb", "fsevent", "be", "you", "use", "Ok", "have", "you", "try", "with", "the", "NUMBER", "pre", "NUMBER", "release", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "works", "great", "for", "us", "under", "Lion", "what", "didn", "t", "work", "for", "you", "ttilley", "be", "you", "aware", "of", "such", "issue", "on", "Lion", "Thanks", "for", "report", "can", "you", "please", "submit", "a", "pull", "request", "with", "a", "quick", "fix", "and", "update", "the", "documentation", "Thanks", "for", "keep", "us", "update", "this", "may", "help", "other", "users", "with", "a", "similar", "problem", "NUMBER", "Awesome", "thanks", "Joshua", "thanks", "for", "taking", "time", "for", "this", "nice", "pull", "request", "NUMBER", "I", "see", "both", "pros", "and", "cons", "for", "vendor", "all", "file", "system", "event", "gems", "Pro", "Simpler", "start", "for", "new", "users", "Con", "It", "s", "not", "possible", "to", "test", "Guard", "with", "pre", "release", "gems", "like", "the", "current", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "or", "use", "the", "master", "branch", "NUMBER", "This", "may", "be", "necessary", "on", "hard", "to", "reproduce", "issue", "that", "come", "to", "light", "after", "use", "Guard", "for", "some", "time", "NUMBER", "Inflexibility", "for", "a", "user", "to", "choose", "a", "specific", "gem", "version", "NUMBER", "This", "may", "be", "necessary", "when", "a", "gem", "drops", "support", "for", "an", "older", "system", "where", "a", "user", "of", "the", "old", "OS", "version", "must", "stick", "with", "an", "old", "gem", "version", "NUMBER", "Another", "case", "be", "that", "sometimes", "for", "user", "A", "works", "only", "the", "current", "release", "version", "and", "for", "user", "B", "works", "only", "the", "last", "but", "one", "version", "NUMBER", "The", "current", "cons", "can", "be", "address", "by", "add", "a", "new", "cli", "option", "LINK", "that", "sets", "a", "loading", "strategy", "when", "the", "listener", "gets", "initialized", "LINK", "L", "NUMBER", "NUMBER", "You", "could", "make", "loading", "the", "vendor", "gem", "the", "default", "and", "use", "the", "current", "loading", "strategy", "when", "passing", "a", "certain", "cli", "switch", "for", "example", "s", "system", "gems", "NUMBER", "I", "notice", "that", "you", "re", "developing", "on", "the", "master", "branch", "and", "not", "the", "dev", "branch", "NUMBER", "I", "m", "very", "sorry", "for", "this", "that", "s", "my", "fault", "because", "I", "was", "so", "stupid", "to", "add", "the", "hint", "to", "the", "dev", "branch", "and", "not", "the", "master", "branch", "NUMBER", "franciscoj", "Can", "you", "elaborate", "the", "problem", "you", "ve", "had", "I", "m", "just", "wondering", "because", "I", "have", "test", "add", "both", "to", "the", "Gemfile", "and", "install", "them", "on", "Mac", "OS", "X", "and", "Linux", "NUMBER", "Bundler", "installs", "them", "fine", "even", "when", "the", "gem", "be", "not", "support", "in", "the", "current", "platform", "and", "Guard", "pick", "the", "right", "one", "NUMBER", "In", "addition", "one", "could", "use", "RbConfig", "CONFIG", "host_os", "in", "the", "Gemfile", "to", "install", "only", "the", "really", "needed", "gems", "for", "a", "platform", "NUMBER", "thibaudgg", "and", "rymai", "what", "do", "you", "think", "of", "vendored", "gems", "I", "have", "not", "much", "experience", "with", "the", "listeners", "but", "from", "my", "understanding", "pausing", "the", "listener", "reactor", "loop", "LINK", "L", "NUMBER", "will", "only", "stop", "processing", "the", "change", "but", "they", "be", "still", "collected", "NUMBER", "You", "can", "clear", "the", "collected", "file", "change", "with", "clear_changed_files", "so", "perhaps", "something", "like", "this", "works", "Guard", "NUMBER", "listener", "NUMBER", "pause", "NUMBER", "shell", "process", "here", "NUMBER", "Guard", "NUMBER", "listener", "NUMBER", "clear_changed_files", "Guard", "NUMBER", "listener", "NUMBER", "run", "That", "would", "duplicate", "most", "notifiers", "we", "have", "already", "on", "the", "dev", "branch", "NUMBER", "Have", "a", "look", "at", "the", "notifiers", "on", "the", "dev", "branch", "LINK", "there", "we", "have", "currently", "implementations", "for", "five", "notification", "libraries", "NUMBER", "I", "suggest", "to", "try", "Ruby", "GNTP", "since", "it", "runs", "on", "OS", "X", "Linux", "and", "Windows", "and", "allows", "even", "to", "send", "notifications", "from", "one", "OS", "to", "another", "NUMBER", "You", "ll", "find", "more", "information", "about", "these", "notifiers", "in", "the", "polished", "README", "LINK", "of", "the", "upcoming", "Guard", "release", "NUMBER", "You", "can", "give", "it", "a", "try", "by", "simply", "add", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "branch", "dev", "to", "your", "Gemfile", "NUMBER", "Thanks", "for", "the", "corrections", "NUMBER", "They", "have", "be", "already", "fix", "on", "the", "dev", "branch", "but", "since", "we", "re", "not", "ready", "to", "release", "now", "we", "should", "fix", "it", "on", "the", "currect", "README", "NUMBER", "Thanks", "NUMBER", "I", "have", "no", "BSD", "so", "I", "can", "t", "reproduce", "it", "NUMBER", "I", "give", "it", "a", "try", "next", "week", "within", "a", "virtual", "machine", "NUMBER", "I", "just", "install", "a", "bare", "minimal", "freebsd", "NUMBER", "and", "cloned", "the", "fork", "from", "vizjerai", "NUMBER", "First", "I", "notice", "that", "development", "was", "do", "against", "the", "master", "branch", "and", "not", "the", "dev", "branch", "NUMBER", "Next", "I", "run", "the", "specs", "and", "see", "them", "fail", "then", "played", "with", "Guard", "a", "bit", "and", "I", "m", "not", "surprised", "that", "there", "be", "some", "fail", "specs", "I", "have", "a", "BIG", "latency", "between", "modifying", "a", "file", "until", "an", "event", "gets", "triggered", "sometimes", "there", "be", "a", "difference", "of", "multiple", "seconds", "and", "I", "had", "also", "some", "that", "were", "not", "triggered", "at", "all", "NUMBER", "I", "did", "a", "quick", "check", "of", "the", "implementation", "and", "compared", "it", "to", "the", "statswatcher", "cool", "NUMBER", "io", "spec", "but", "everything", "seems", "fine", "NUMBER", "vizjerai", "do", "you", "have", "this", "latency", "also", "or", "be", "it", "only", "happening", "on", "my", "VM", "Thanks", "for", "the", "README", "update", "NUMBER", "I", "had", "to", "struggle", "a", "bit", "with", "this", "merge", "since", "you", "use", "the", "master", "branch", "and", "not", "the", "dev", "branch", "NUMBER", "I", "made", "a", "few", "little", "change", "to", "it", "Removed", "the", "On", "Linux", "section", "since", "there", "be", "no", "other", "OS", "sections", "available", "and", "named", "the", "section", "Advanced", "Linux", "system", "configuration", "NUMBER", "We", "can", "undo", "this", "when", "there", "be", "more", "info", "for", "the", "other", "OS", "NUMBER", "Moved", "to", "section", "to", "the", "bottom", "since", "the", "advances", "configuration", "should", "come", "after", "the", "initial", "setup", "and", "first", "usage", "NUMBER", "The", "goal", "of", "the", "new", "README", "on", "dev", "be", "to", "have", "a", "clear", "and", "consistent", "structure", "to", "help", "people", "start", "fast", "NUMBER", "This", "means", "generic", "stuff", "first", "specific", "stuff", "last", "NUMBER", "When", "I", "look", "at", "the", "source", "code", "for", "both", "guard", "minitest", "and", "guard", "test", "I", "see", "that", "notifications", "aren", "t", "support", "when", "use", "drb", "NUMBER", "guard", "test", "doesn", "t", "include", "the", "guard_test_runner", "LINK", "test", "blob", "master", "lib", "guard", "test", "runner", "NUMBER", "rb", "L", "NUMBER", "when", "drb", "be", "enable", "which", "in", "turn", "be", "responsible", "for", "the", "notifications", "NUMBER", "guard", "minitest", "doesn", "t", "include", "the", "default_runner", "LINK", "minitest", "blob", "master", "lib", "guard", "minitest", "runner", "NUMBER", "rb", "L", "NUMBER", "when", "drb", "be", "enable", "which", "in", "turn", "be", "responsible", "for", "the", "notifications", "NUMBER", "It", "seems", "there", "may", "be", "a", "technical", "reason", "why", "both", "guard", "minitest", "and", "guard", "test", "doesn", "t", "support", "system", "notifications", "when", "use", "drb", "both", "be", "use", "Sporks", "testdrb", "LINK", "testunit", "blob", "master", "bin", "testdrb", "for", "executing", "the", "test", "NUMBER", "I", "d", "analyse", "the", "result", "for", "testdrb", "LINK", "testunit", "blob", "master", "bin", "testdrb", "L", "NUMBER", "and", "see", "if", "it", "contains", "the", "information", "needed", "to", "show", "a", "system", "notification", "You", "can", "call", "this", "from", "the", "command", "line", "to", "see", "NUMBER", "If", "this", "be", "the", "case", "it", "s", "possible", "to", "enhance", "guard", "test", "and", "guard", "minitest", "to", "evaluate", "the", "result", "after", "the", "test", "run", "and", "show", "a", "notification", "NUMBER", "I", "m", "sure", "yannlugrin", "and", "rymai", "would", "be", "happy", "to", "merge", "a", "pull", "request", "for", "this", "NUMBER", "If", "there", "be", "no", "valuable", "information", "in", "the", "testdrb", "result", "you", "have", "to", "do", "some", "work", "in", "spork", "testunit", "NUMBER", "In", "either", "case", "it", "would", "be", "nice", "if", "you", "could", "edit", "the", "README", "for", "both", "projects", "and", "add", "a", "notice", "that", "notifications", "aren", "t", "support", "when", "use", "drb", "NUMBER", "This", "could", "be", "easily", "do", "directly", "on", "GitHub", "NUMBER", "Thanks", "for", "bringing", "this", "up", "NUMBER", "You", "re", "right", "there", "be", "definitely", "some", "room", "to", "improve", "the", "Guard", "class", "detection", "and", "make", "it", "more", "Ruby", "conform", "NUMBER", "Borrowing", "the", "camelize", "method", "be", "a", "great", "way", "NUMBER", "Since", "Guard", "has", "a", "large", "Guard", "ecosystem", "every", "change", "we", "make", "there", "should", "be", "fully", "backwards", "compatible", "NUMBER", "I", "know", "it", "s", "not", "uncommon", "to", "break", "the", "API", "prior", "to", "version", "NUMBER", "but", "since", "it", "s", "possible", "to", "chain", "the", "detection", "rules", "we", "should", "support", "the", "current", "algorithm", "alongside", "any", "new", "algorithm", "NUMBER", "I", "could", "implement", "a", "solution", "on", "Monday", "at", "the", "earliest", "but", "if", "you", "like", "to", "take", "care", "of", "it", "please", "use", "the", "dev", "branch", "and", "send", "a", "pull", "request", "NUMBER", "Thanks", "for", "this", "clearly", "describe", "issue", "and", "your", "Gist", "with", "the", "elegant", "solution", "NUMBER", "I", "just", "change", "it", "a", "bit", "to", "still", "support", "the", "old", "syntax", "NUMBER", "Sorry", "for", "the", "lame", "response", "time", "all", "core", "members", "seems", "to", "be", "very", "very", "busy", "with", "other", "stuff", "NUMBER", "That", "particular", "area", "of", "Guard", "be", "not", "easy", "to", "understand", "and", "must", "be", "handle", "carefully", "so", "there", "be", "no", "quick", "fix", "in", "sight", "NUMBER", "But", "many", "thanks", "for", "report", "we", "ll", "take", "care", "of", "it", "when", "we", "have", "the", "time", "and", "muse", "for", "get", "into", "it", "NUMBER", "Hi", "sutherland", "not", "sure", "why", "timestamps", "aren", "t", "created", "for", "new", "file", "can", "you", "try", "to", "submit", "a", "fail", "spec", "so", "we", "can", "try", "to", "fix", "it", "There", "s", "a", "lot", "of", "example", "of", "that", "kind", "of", "specs", "in", "LINK", "_spec", "NUMBER", "rb", "NUMBER", "Thanks", "sutherland", "please", "can", "you", "tell", "us", "if", "the", "fix", "in", "Guard", "master", "works", "for", "you", "Thanks", "for", "analyzing", "this", "issue", "and", "report", "it", "NUMBER", "Your", "suggestion", "watch_all_modifications", "options", "watch_all_modifications", "false", "works", "only", "in", "the", "case", "where", "the", "default", "value", "be", "false", "NUMBER", "So", "what", "can", "we", "do", "One", "solution", "would", "be", "to", "just", "use", "the", "Thor", "default", "value", "and", "completely", "remove", "any", "default", "value", "in", "the", "listener", "itself", "NUMBER", "This", "seems", "fine", "but", "it", "would", "lead", "to", "a", "long", "rat", "tail", "to", "update", "all", "methods", "and", "its", "docs", "to", "reflect", "that", "Thor", "CoreExt", "HashWithIndifferentAccess", "be", "pass", "instead", "of", "a", "Hash", "so", "no", "options", "anymore", "NUMBER", "In", "addition", "the", "specs", "must", "be", "update", "to", "handle", "the", "new", "parameter", "type", "NUMBER", "I", "mainly", "decided", "against", "this", "solution", "because", "it", "would", "couple", "the", "listener", "to", "Thor", "which", "makes", "it", "harder", "for", "other", "projects", "that", "be", "use", "Guard", "s", "listener", "framework", "NUMBER", "In", "the", "end", "I", "simply", "change", "the", "options", "NUMBER", "fetch", "key", "to", "a", "string", "because", "Thor", "internally", "converts", "every", "key", "to", "a", "String", "NUMBER", "This", "be", "solution", "at", "not", "cost", "for", "Guard", "and", "also", "simple", "for", "projects", "use", "the", "listeners", "to", "ensure", "the", "option", "keys", "be", "string", "NUMBER", "After", "thinking", "a", "second", "time", "on", "this", "I", "simply", "convert", "the", "options", "keys", "to", "symbols", "before", "evaluation", "them", "NUMBER", "This", "ensures", "the", "projects", "that", "be", "use", "the", "Listener", "framework", "don", "t", "have", "to", "change", "anything", "NUMBER", "I", "guess", "you", "re", "taking", "about", "ruby_gntp", "since", "there", "be", "no", "support", "for", "a", "ruby_growl", "gem", "NUMBER", "You", "description", "sounds", "strange", "because", "what", "you", "describe", "should", "not", "be", "possible", "when", "you", "see", "the", "given", "error", "message", "you", "should", "not", "be", "able", "to", "see", "any", "notification", "because", "they", "be", "turned", "off", "LINK", "L", "NUMBER", "then", "NUMBER", "Are", "your", "sure", "you", "run", "Guard", "always", "with", "bundle", "exec", "Thanks", "for", "the", "Gemfile", "and", "Guardfile", "NUMBER", "We", "have", "no", "official", "support", "for", "the", "ruby", "growl", "gem", "we", "have", "support", "for", "the", "growl", "gem", "ruby", "gntp", "gem", "and", "growl_notify", "gem", "NUMBER", "I", "think", "that", "we", "already", "support", "enough", "Growl", "gems", "and", "the", "ruby", "growl", "gem", "uses", "the", "GNTP", "protocol", "like", "ruby", "gntp", "so", "it", "would", "not", "make", "much", "sense", "to", "add", "another", "Growl", "library", "NUMBER", "Is", "there", "a", "specific", "reason", "that", "you", "have", "to", "stick", "with", "ruby", "growl", "or", "can", "you", "switch", "to", "ruby", "gntp", "Are", "you", "run", "Guard", "with", "bundle", "exec", "I", "just", "release", "NUMBER", "because", "this", "bug", "be", "so", "unhappily", "for", "new", "users", "that", "want", "to", "get", "start", "with", "Guard", "NUMBER", "Damn", "not", "again", "This", "was", "exactly", "the", "reason", "why", "I", "add", "specs", "to", "it", "but", "I", "didn", "t", "verify", "the", "existence", "of", "the", "template", "NUMBER", "I", "add", "that", "miss", "spec", "and", "hope", "I", "never", "have", "to", "handle", "that", "again", "P", "Thanks", "a", "lot", "for", "the", "pull", "request", "I", "merge", "it", "into", "the", "dev", "branch", "NUMBER", "Thanks", "for", "report", "this", "NUMBER", "I", "have", "now", "expanded", "the", "logic", "in", "the", "changed_paths", "and", "deleted_paths", "methods", "If", "the", "list", "of", "paths", "contains", "an", "object", "that", "do", "not", "have", "a", "start_with", "method", "then", "these", "paths", "be", "considered", "as", "change", "NUMBER", "You", "can", "change", "the", "maximum", "number", "of", "allow", "inotify", "watches", "echo", "NUMBER", "proc", "sys", "fs", "inotify", "max_user_watches", "The", "above", "for", "example", "doubles", "the", "allow", "watches", "NUMBER", "Why", "not", "just", "start", "the", "debugger", "and", "tell", "us", "what", "s", "happening", "It", "s", "hard", "to", "debug", "something", "that", "cannot", "be", "clearly", "reproduced", "NUMBER", "Good", "news", "dyfrgi", "was", "kind", "enough", "to", "create", "a", "reproducible", "test", "case", "available", "as", "Git", "repository", "LINK", "Broken", "Wow", "NUMBER", "Thanks", "a", "lot", "NUMBER", "Making", "it", "reproducible", "fix", "half", "of", "the", "bug", "NUMBER", "I", "will", "take", "care", "of", "it", "tomorrow", "NUMBER", "Great", "explanation", "and", "fix", "Thanks", "all", "NUMBER", "Thanks", "for", "the", "hint", "that", "the", "error", "message", "be", "not", "including", "ruby_gntp", "NUMBER", "Are", "you", "executing", "Guard", "with", "bundle", "exec", "I", "use", "Guard", "form", "master", "branch", "with", "ruby_gntp", "without", "any", "problem", "NUMBER", "Another", "thing", "that", "comes", "me", "to", "mind", "be", "that", "RUBY_PLATFORM", "be", "returnbing", "java", "for", "JRuby", "NUMBER", "If", "you", "re", "use", "JRuby", "you", "should", "use", "RbConfig", "CONFIG", "host_os", "darwin", "i", "When", "I", "look", "at", "your", "log", "I", "see", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "growlnotify", "version", "which", "comes", "from", "the", "growl", "LINK", "L", "NUMBER", "gem", "NUMBER", "However", "I", "don", "t", "see", "the", "growl", "gem", "in", "the", "Gemfile", "and", "you", "re", "run", "guard", "with", "bundle", "exec", "NUMBER", "So", "something", "be", "wrong", "here", "because", "this", "should", "not", "work", "NUMBER", "I", "m", "run", "Guard", "from", "master", "branch", "with", "JRuby", "NUMBER", "on", "OS", "X", "NUMBER", "without", "any", "problem", "NUMBER", "The", "step", "definition", "watcher", "be", "not", "fine", "see", "the", "include", "template", "from", "guard", "cucumber", "guard", "cucumber", "do", "watch", "r", "features", "NUMBER", "NUMBER", "feature", "watch", "r", "features", "support", "NUMBER", "features", "watch", "r", "features", "step_definitions", "NUMBER", "_steps", "NUMBER", "rb", "m", "Dir", "File", "NUMBER", "join", "m", "NUMBER", "NUMBER", "feature", "NUMBER", "features", "end", "The", "difference", "be", "that", "you", "can", "t", "run", "step", "definitions", "instead", "you", "run", "a", "feature", "when", "its", "name", "matches", "the", "step", "definition", "or", "all", "features", "if", "no", "matching", "feature", "be", "find", "for", "shared", "step", "definitions", "NUMBER", "When", "inotify", "do", "not", "see", "any", "file", "change", "you", "should", "open", "an", "issue", "at", "rb", "inotify", "LINK", "inotify", "issue", "NUMBER", "Polling", "should", "catch", "the", "change", "you", "just", "have", "to", "remove", "gem", "rb", "inotify", "from", "your", "Gemfile", "so", "that", "the", "polling", "fallback", "be", "active", "NUMBER", "Don", "t", "forget", "to", "run", "it", "with", "bundle", "exec", "so", "that", "Guard", "doesn", "t", "pick", "up", "rb", "inotify", "from", "the", "system", "NUMBER", "Can", "you", "try", "add", "the", "NUMBER", "sass", "cache", "to", "the", "ignored", "paths", "in", "your", "Guardfile", "ignore_paths", "NUMBER", "sass", "cache", "The", "file", "listener", "be", "always", "active", "even", "when", "you", "have", "no", "Guards", "watching", "NUMBER", "I", "have", "refactored", "the", "cli", "class", "and", "extracted", "the", "show", "and", "list", "methods", "to", "the", "DslDescriber", "class", "and", "add", "the", "miss", "specs", "LINK", "I", "have", "no", "problem", "with", "both", "options", "and", "they", "work", "as", "expected", "NUMBER", "Due", "this", "refactoring", "I", "made", "the", "guardfile_structure", "method", "private", "on", "the", "DslDescriber", "but", "I", "don", "t", "see", "how", "this", "could", "lead", "to", "your", "error", "message", "NUMBER", "Can", "you", "please", "test", "if", "add", "to", "Guard", "DslDescriber", "NUMBER", "list", "options", "and", "Guard", "DslDescriber", "NUMBER", "show", "options", "in", "cli", "NUMBER", "rb", "resolve", "the", "problem", "def", "list", "Guard", "DslDescriber", "NUMBER", "list", "options", "end", "def", "show", "Guard", "DslDescriber", "NUMBER", "show", "options", "end", "This", "be", "not", "something", "that", "Guard", "do", "handle", "each", "Guard", "implementation", "decides", "on", "its", "own", "what", "to", "show", "in", "a", "notification", "NUMBER", "Guard", "only", "provides", "a", "framework", "for", "that", "NUMBER", "You", "should", "open", "an", "issue", "in", "each", "Guard", "you", "like", "to", "support", "such", "kind", "of", "notifications", "NUMBER", "I", "think", "such", "a", "detailed", "message", "should", "go", "into", "the", "console", "because", "the", "space", "to", "show", "it", "within", "a", "notification", "be", "limited", "NUMBER", "I", "can", "only", "speak", "for", "Growl", "as", "I", "haven", "t", "use", "the", "other", "support", "notification", "frameworks", "for", "Linux", "and", "Windows", "NUMBER", "For", "Growl", "most", "of", "the", "themes", "be", "narrow", "and", "showing", "this", "kind", "of", "message", "would", "make", "it", "almost", "unreadable", "NUMBER", "I", "know", "there", "be", "also", "themes", "that", "have", "more", "space", "like", "the", "Music", "Video", "theme", "for", "growl", "but", "I", "believe", "that", "a", "test", "framework", "should", "not", "make", "a", "demand", "for", "a", "specific", "notification", "theme", "NUMBER", "I", "did", "show", "such", "detailed", "notification", "in", "guard", "jasmine", "until", "I", "realized", "that", "not", "everybody", "uses", "the", "Music", "Video", "theme", "NUMBER", "Then", "I", "change", "it", "NUMBER", "Perhaps", "a", "detailed_notification", "option", "that", "defaults", "to", "false", "has", "the", "best", "chance", "to", "be", "merge", "into", "a", "Guard", "NUMBER", "You", "may", "can", "change", "the", "Growl", "theme", "programmatically", "via", "apple", "script", "but", "I", "would", "not", "recommend", "it", "for", "several", "reasons", "NUMBER", "Respect", "the", "users", "freedom", "NUMBER", "You", "will", "only", "be", "able", "to", "change", "it", "for", "Growl", "ignoring", "Linux", "and", "Windows", "users", "NUMBER", "NUMBER", "You", "can", "only", "configure", "it", "by", "use", "apple", "script", "thus", "ignoring", "all", "JRuby", "users", "NUMBER", "This", "be", "not", "worth", "the", "time", "and", "effort", "then", "you", "better", "buy", "a", "NUMBER", "iMac", "where", "you", "have", "enough", "space", "for", "the", "terminal", "window", "P", "I", "like", "the", "required", "false", "because", "this", "be", "the", "best", "way", "to", "declare", "these", "dependencies", "They", "won", "t", "get", "loaded", "when", "Rails", "starts", "in", "development", "or", "test", "environment", "but", "they", "get", "required", "when", "Guard", "starts", "NUMBER", "We", "should", "definitely", "use", "this", "best", "practice", "in", "the", "README", "NUMBER", "When", "support", "for", "ruby_gntp", "on", "all", "plattforms", "be", "do", "then", "the", "installation", "section", "will", "get", "again", "a", "bit", "more", "complex", "because", "each", "plattform", "will", "support", "at", "least", "two", "system", "notification", "libraries", "and", "Mac", "OS", "X", "even", "three", "libraries", "NUMBER", "Then", "we", "should", "move", "these", "instructions", "into", "a", "separate", "section", "about", "system", "notifications", "NUMBER", "We", "do", "some", "duplicate", "stuff", "in", "the", "installation", "section", "We", "install", "the", "gem", "manually", "and", "through", "bundler", "and", "we", "describe", "putting", "these", "gems", "into", "the", "development", "group", "instead", "of", "showing", "the", "Gemfile", "NUMBER", "The", "essential", "installation", "instructions", "for", "all", "platforms", "be", "in", "fact", "Add", "Guard", "to", "your", "Gemfile", "group", "development", "do", "gem", "guard", "gem", "rb", "inotify", "require", "false", "gem", "rb", "fsevent", "require", "false", "gem", "rb", "fchange", "require", "false", "end", "and", "install", "via", "Bundler", "bundle", "This", "would", "be", "perfectly", "fine", "because", "you", "can", "install", "all", "these", "gems", "on", "all", "plattforms", "they", "just", "won", "t", "work", "on", "all", "plattforms", "NUMBER", "Since", "we", "do", "not", "require", "them", "they", "won", "t", "fail", "NUMBER", "Guard", "will", "then", "require", "the", "correct", "library", "depending", "on", "the", "host", "plattform", "NUMBER", "This", "approach", "has", "two", "advantages", "Much", "simpler", "installation", "for", "a", "novice", "user", "NUMBER", "Makes", "a", "project", "work", "cross", "plattform", "out", "of", "the", "box", "NUMBER", "We", "can", "still", "go", "into", "more", "detail", "for", "those", "how", "really", "read", "the", "README", "NUMBER", "I", "take", "care", "of", "it", "next", "week", "when", "I", "add", "the", "notification", "options", "for", "ruby_gntp", "NUMBER", "Looks", "fine", "NUMBER", "I", "ll", "merge", "it", "now", "NUMBER", "Merge", "went", "fine", "I", "just", "add", "some", "more", "documentation", "and", "split", "two", "context", "blocks", "in", "the", "watcher", "specs", "apart", "NUMBER", "The", "golden", "rule", "with", "context", "be", "that", "only", "one", "assumption", "should", "go", "into", "a", "context", "description", "NUMBER", "If", "there", "be", "two", "split", "and", "nest", "them", "NUMBER", "Thanks", "for", "your", "work", "the", "implementation", "finally", "looks", "very", "nice", "My", "first", "reaction", "on", "this", "was", "that", "only", "error", "should", "go", "to", "STDERR", "as", "the", "name", "implies", "NUMBER", "But", "after", "I", "read", "the", "following", "description", "of", "STDERR", "Standard", "error", "be", "another", "output", "stream", "typically", "use", "by", "program", "to", "output", "error", "message", "or", "diagnostics", "NUMBER", "at", "Wikipedia", "LINK", "_streams", "Standard_error_", "NUMBER", "derr", "NUMBER", "I", "think", "that", "at", "least", "error", "deprecation", "and", "debug", "should", "definitely", "write", "to", "STDERR", "NUMBER", "Writing", "info", "message", "to", "STDERR", "feels", "wrong", "but", "when", "you", "think", "about", "Guard", "just", "be", "a", "framework", "for", "Guard", "implementations", "then", "everything", "from", "within", "Guard", "should", "be", "considered", "as", "diagnostics", "NUMBER", "We", "be", "free", "to", "make", "a", "general", "decision", "here", "without", "impact", "because", "all", "Guards", "I", "have", "seen", "so", "far", "be", "doing", "something", "with", "the", "file", "and", "the", "output", "be", "again", "file", "or", "processes", "and", "all", "message", "could", "be", "considered", "as", "diagnostics", "NUMBER", "This", "be", "the", "first", "use", "where", "the", "output", "write", "to", "STDOUT", "be", "use", "as", "output", "to", "be", "further", "processed", "NUMBER", "From", "a", "user", "perspective", "nothing", "change", "it", "works", "and", "looks", "the", "same", "as", "before", "NUMBER", "I", "vote", "NUMBER", "for", "this", "but", "in", "case", "we", "merge", "it", "a", "description", "should", "go", "into", "the", "documentation", "of", "the", "ui", "NUMBER", "rb", "class", "that", "everything", "logged", "through", "this", "class", "be", "considered", "an", "error", "or", "diagnostic", "message", "and", "write", "to", "STDOUT", "should", "be", "do", "by", "simply", "use", "put", "NUMBER", "Logger", "be", "NUMBER", "only", "and", "I", "use", "the", "private", "color", "method", "in", "Guard", "UI", "from", "within", "my", "own", "Guards", "P", "I", "m", "tending", "more", "to", "make", "them", "public", "NUMBER", "Yes", "it", "would", "make", "sense", "to", "use", "term", "ansicolor", "but", "I", "don", "t", "like", "projects", "where", "pull", "request", "and", "issue", "be", "completely", "ignored", "NUMBER", "Yes", "perhaps", "everything", "will", "be", "fine", "with", "term", "ansicolor", "NUMBER", "I", "ve", "no", "problem", "with", "change", "that", "at", "all", "I", "d", "have", "change", "my", "Guards", "within", "a", "few", "minutes", "NUMBER", "But", "there", "be", "more", "important", "things", "to", "work", "on", "Guard", "than", "replacing", "a", "few", "lines", "of", "perfectly", "work", "code", "NUMBER", "But", "if", "you", "like", "to", "take", "care", "about", "it", "including", "answer", "issue", "from", "crying", "Windows", "users", "and", "thibaudgg", "has", "no", "historical", "reason", "against", "it", "then", "feel", "free", "to", "send", "another", "pull", "request", "NUMBER", "You", "see", "message", "write", "to", "STDERR", "in", "your", "console", "so", "from", "a", "user", "perspective", "nothing", "has", "change", "echo", "TEST", "dev", "stderr", "TEST", "All", "those", "message", "you", "see", "from", "RSpec", "be", "diagnostics", "message", "because", "it", "has", "no", "real", "output", "that", "you", "process", "further", "NUMBER", "You", "don", "t", "lose", "control", "because", "you", "never", "had", "control", "in", "a", "dynamic", "language", "like", "Ruby", "and", "every", "developer", "was", "always", "free", "to", "use", "puts", "NUMBER", "Since", "you", "cannot", "have", "control", "you", "can", "only", "lay", "out", "some", "guidelines", "and", "hope", "developers", "read", "and", "follow", "them", "NUMBER", "So", "we", "have", "definitely", "made", "a", "step", "in", "the", "right", "direction", "by", "just", "defining", "what", "to", "use", "when", "NUMBER", "My", "comment", "wasn", "t", "meant", "to", "teach", "you", "it", "was", "just", "an", "argument", "against", "losing", "control", "NUMBER", "I", "find", "it", "very", "hard", "to", "come", "to", "a", "clear", "decision", "I", "see", "argument", "on", "both", "sides", "NUMBER", "Not", "speaking", "personal", "and", "not", "even", "in", "my", "mother", "tongue", "makes", "it", "even", "harder", "NUMBER", "I", "think", "you", "best", "discuss", "it", "with", "thibaudgg", "face", "to", "face", "and", "make", "a", "decision", "NUMBER", "I", "m", "fine", "with", "everything", "you", "ll", "decide", "NUMBER", "Sure", "why", "not", "NUMBER", "but", "it", "would", "only", "affect", "Guard", "message", "and", "not", "the", "ones", "from", "each", "Guard", "plugin", "NUMBER", "Guard", "be", "not", "really", "meant", "to", "be", "use", "as", "a", "library", "it", "s", "rather", "a", "customizable", "product", "to", "improve", "the", "developers", "workflow", "NUMBER", "Sure", "you", "can", "use", "it", "programmatically", "and", "write", "plugins", "for", "it", "but", "it", "s", "always", "limited", "to", "some", "extend", "to", "the", "Guard", "way", "NUMBER", "If", "you", "want", "to", "use", "it", "in", "another", "way", "you", "can", "make", "use", "of", "Listen", "LINK", "and", "write", "your", "own", "workflow", "and", "interactions", "around", "it", "NUMBER", "Forcing", "the", "exist", "plugins", "to", "adhere", "to", "some", "kind", "of", "messaging", "be", "not", "a", "good", "idea", "because", "there", "be", "many", "plugins", "that", "be", "work", "fine", "with", "the", "current", "API", "but", "aren", "t", "really", "maintained", "and", "thus", "we", "will", "split", "half", "of", "the", "plugin", "ecosystem", "NUMBER", "Deprecation", "message", "be", "not", "effective", "because", "the", "authors", "of", "the", "unmaintained", "plugins", "won", "t", "see", "them", "and", "the", "active", "Guard", "users", "will", "suffer", "under", "the", "message", "flood", "NUMBER", "Anyway", "I", "ve", "seen", "Guard", "plugins", "that", "aren", "t", "use", "the", "provide", "Guard", "UI", "class", "anyway", "and", "just", "write", "to", "stdout", "so", "we", "cannot", "enforce", "it", "anyway", "NUMBER", "You", "can", "always", "open", "Guard", "in", "a", "subprocess", "and", "filter", "the", "stream", "so", "you", "can", "control", "the", "console", "output", "and", "you", "can", "write", "your", "own", "notifications", "in", "the", "parent", "process", "depending", "on", "it", "NUMBER", "If", "you", "disable", "the", "notifications", "in", "the", "subprocess", "you", "have", "full", "control", "of", "the", "Guard", "output", "NUMBER", "I", "just", "add", "support", "for", "GNTP", "with", "ruby_gntp", "NUMBER", "It", "support", "different", "message", "channels", "but", "be", "limited", "to", "Darwin", "listener", "and", "the", "localhost", "for", "now", "NUMBER", "Like", "thibaudgg", "mention", "there", "have", "be", "some", "issue", "lately", "with", "growl_notify", "NUMBER", "I", "don", "t", "see", "the", "need", "to", "drop", "support", "for", "it", "because", "the", "code", "be", "very", "small", "for", "support", "all", "these", "different", "approaches", "but", "I", "d", "like", "to", "recommend", "the", "solution", "that", "causes", "the", "least", "pain", "to", "the", "users", "of", "Guard", "NUMBER", "So", "please", "could", "you", "all", "give", "ruby_gntp", "a", "try", "and", "see", "how", "it", "works", "for", "you", "NUMBER", "When", "we", "have", "good", "response", "we", "can", "change", "the", "order", "of", "the", "three", "gems", "and", "recommend", "ruby_gntp", "over", "growl_notify", "NUMBER", "This", "be", "an", "area", "of", "uncertainty", "NUMBER", "I", "checked", "the", "Growl", "version", "history", "LINK", "_history", "NUMBER", "php", "and", "see", "that", "from", "NUMBER", "network", "support", "has", "be", "add", "NUMBER", "Could", "it", "be", "that", "Growl", "TAG", "NUMBER", "The", "reason", "why", "ruby_gntp", "be", "release", "years", "before", "the", "support", "in", "Growl", "has", "landed", "be", "simple", "Growl", "has", "use", "an", "unpublished", "internal", "protocol", "prior", "NUMBER", "The", "GNTP", "protocol", "was", "then", "co", "developed", "with", "the", "developers", "of", "Snarl", "and", "Growl", "for", "Windows", "and", "other", "notification", "systems", "including", "Mumbles", "and", "has", "be", "already", "implement", "in", "these", "systems", "NUMBER", "So", "GNTP", "be", "an", "open", "protocol", "for", "system", "notifications", "and", "be", "support", "by", "many", "system", "notification", "utilities", "on", "many", "platforms", "NUMBER", "I", "will", "refactor", "the", "GNTP", "support", "next", "week", "to", "be", "available", "on", "all", "plattforms", "and", "add", "a", "way", "to", "configure", "the", "host", "port", "and", "password", "NUMBER", "I", "think", "this", "will", "allow", "Guard", "to", "be", "very", "flexible", "configured", "on", "all", "platforms", "e", "NUMBER", "g", "NUMBER", "you", "can", "have", "a", "Linux", "and", "Windows", "box", "sharing", "an", "project", "with", "Dropbox", "and", "send", "notifications", "to", "your", "Mac", "NUMBER", "Suggestion", "for", "the", "Guard", "DSL", "notification", "gntp", "host", "NUMBER", "password", "secret", "We", "can", "use", "this", "also", "for", "the", "other", "notifications", "so", "you", "can", "have", "both", "growl_notify", "and", "ruby_gntp", "gems", "install", "but", "make", "a", "selection", "of", "your", "preferred", "notification", "provider", "notification", "gntp", "without", "this", "line", "growl_notify", "would", "be", "selected", "currently", "NUMBER", "Another", "use", "would", "be", "notification", "off", "Thanks", "for", "the", "additional", "information", "NUMBER", "I", "really", "like", "ruby_gntp", "because", "it", "has", "not", "dependencies", "and", "works", "on", "all", "Rubies", "NUMBER", "The", "implementation", "be", "also", "very", "lightweight", "so", "any", "adjustments", "in", "the", "future", "shouldn", "t", "be", "that", "hard", "NUMBER", "ruby_gntp", "support", "be", "not", "release", "yet", "you", "have", "to", "use", "Guard", "from", "master", "NUMBER", "On", "NUMBER", "at", "NUMBER", "NUMBER", "Jimmy", "Cuadra", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "I", "see", "ruby_gntp", "be", "now", "be", "promoted", "as", "an", "option", "in", "the", "README", "but", "it", "s", "not", "triggering", "notifications", "for", "me", "NUMBER", "My", "specs", "OS", "X", "NUMBER", "Ruby", "NUMBER", "p", "NUMBER", "guard", "NUMBER", "guard", "rspec", "NUMBER", "guard", "spork", "NUMBER", "w", "spork", "NUMBER", "rc", "NUMBER", "I", "even", "install", "the", "just", "release", "GrowlNotify", "NUMBER", "but", "I", "m", "still", "not", "get", "notifications", "NUMBER", "Does", "ruby_gntp", "need", "to", "be", "update", "to", "work", "with", "Growl", "NUMBER", "before", "this", "will", "work", "I", "m", "wondering", "if", "I", "was", "just", "mislead", "by", "the", "README", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "For", "everyone", "interested", "in", "trying", "out", "the", "refactored", "notifications", "they", "be", "on", "the", "notifications", "LINK", "branch", "NUMBER", "Since", "the", "README", "has", "not", "be", "update", "I", "ll", "just", "copy", "paste", "the", "instructions", "from", "the", "mail", "I", "sent", "to", "the", "Google", "group", "If", "you", "don", "t", "specify", "any", "notification", "configuration", "in", "your", "Guardfile", "Guard", "goes", "through", "the", "list", "of", "available", "notifiers", "and", "takes", "the", "first", "that", "be", "available", "NUMBER", "If", "you", "specify", "your", "preferred", "library", "auto", "detection", "will", "not", "take", "place", "NUMBER", "notification", "growl", "will", "select", "the", "growl", "gem", "for", "notifications", "even", "when", "other", "notification", "libraries", "be", "available", "NUMBER", "You", "can", "also", "set", "options", "for", "a", "notifier", "notification", "growl", "sticky", "true", "Each", "notifier", "has", "a", "slightly", "different", "set", "of", "support", "options", "notification", "growl", "sticky", "true", "host", "NUMBER", "password", "secret", "notification", "gntp", "sticky", "true", "host", "NUMBER", "password", "secret", "notification", "growl_notify", "sticky", "true", "priority", "NUMBER", "notification", "libnotify", "timeout", "NUMBER", "transient", "true", "append", "false", "notification", "notifu", "time", "NUMBER", "nosound", "true", "xp", "true", "It", "s", "possible", "to", "use", "more", "than", "one", "notifier", "NUMBER", "This", "allows", "you", "to", "configure", "different", "notifiers", "for", "different", "OS", "if", "your", "project", "be", "developed", "cross", "plattform", "or", "if", "you", "like", "to", "have", "local", "and", "remote", "notifications", "NUMBER", "Notifications", "can", "also", "be", "turned", "off", "in", "the", "Guardfile", "in", "addition", "to", "setting", "the", "environment", "variable", "GUARD_NOTIFY", "or", "use", "the", "cli", "switch", "n", "notification", "off", "Each", "notification", "library", "be", "extracted", "into", "its", "own", "module", "which", "makes", "it", "simpler", "to", "add", "further", "notification", "libraries", "like", "Kdialog", "Knotify", "and", "OSD", "Cat", "NUMBER", "With", "Guard", "NUMBER", "and", "ruby_gntp", "support", "Growl", "be", "now", "also", "support", "on", "Windows", "and", "Linux", "and", "from", "what", "I", "read", "it", "support", "also", "Snarl", "NUMBER", "The", "different", "notification", "channels", "that", "be", "already", "support", "in", "ruby_gntp", "should", "now", "also", "be", "available", "in", "GrowlNotify", "NUMBER", "Is", "anyone", "use", "GrowlNotify", "libnotify", "or", "notifu", "I", "d", "be", "happy", "if", "you", "could", "give", "it", "a", "try", "especially", "for", "libnotify", "and", "notifu", "because", "I", "have", "no", "development", "environment", "setup", "for", "Linux", "and", "Windows", "NUMBER", "The", "notification", "branch", "has", "be", "merge", "into", "dev", "NUMBER", "You", "can", "give", "it", "a", "try", "by", "add", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "branch", "dev", "to", "your", "Gemfile", "NUMBER", "I", "don", "t", "see", "any", "problem", "with", "the", "current", "implementation", "now", "that", "NUMBER", "ac", "introduce", "an", "explicit", "flag", "to", "enable", "any", "objects", "as", "watcher", "response", "NUMBER", "However", "I", "d", "like", "to", "see", "that", "flag", "on", "the", "Guard", "and", "not", "on", "the", "watcher", "because", "the", "Guard", "must", "decide", "if", "he", "can", "accept", "something", "other", "than", "strings", "and", "not", "the", "watcher", "NUMBER", "I", "have", "still", "some", "minor", "issue", "with", "the", "code", "yes", "I", "know", "I", "m", "fussy", "on", "such", "things", "and", "I", "ll", "leave", "my", "comments", "in", "the", "pull", "request", "NUMBER", "This", "be", "an", "excellent", "use", "of", "a", "Mutex", "and", "makes", "everything", "much", "simpler", "NUMBER", "Thank", "you", "very", "much", "You", "re", "right", "it", "happens", "when", "the", "Interactor", "be", "locked", "thanks", "Still", "an", "issue", "with", "Guard", "NUMBER", "Soon", "we", "just", "wait", "on", "that", "one", "LINK", "issuecomment", "NUMBER", "There", "s", "nothing", "wrong", "by", "use", "bundle", "exec", "guard", "it", "s", "even", "a", "preferred", "way", "NUMBER", "Have", "you", "add", "growl", "and", "rb", "fsevent", "to", "your", "Gemfile", "This", "pull", "request", "cannot", "be", "automatically", "merge", "NUMBER", "Please", "can", "you", "merge", "your", "fork", "with", "the", "master", "before", "I", "merge", "it", "NUMBER", "Thanks", "Oh", "yeah", "the", "specs", "and", "the", "README", "note", "It", "seems", "there", "s", "still", "two", "issue", "with", "the", "jruby", "specs", "on", "Travis", "Have", "you", "an", "idea", "why", "LINK", "ci", "NUMBER", "org", "limeyd", "guard", "Maybe", "watch", "moves", "and", "deletions", "would", "be", "even", "more", "precise", "Yep", "I", "think", "we", "can", "go", "for", "watch", "moves", "and", "deletions", "and", "use", "the", "W", "alias", "rather", "than", "D", "to", "not", "be", "focus", "only", "on", "the", "delete", "file", "NUMBER", "Yeah", "watch", "all", "modifications", "with", "A", "be", "even", "better", "Go", "for", "it", "Ok", "great", "thanks", "it", "s", "almost", "ready", "to", "be", "merge", "There", "s", "just", "this", "NUMBER", "issue", "on", "jruby", "LINK", "ci", "NUMBER", "org", "limeyd", "guard", "build", "NUMBER", "any", "idea", "on", "how", "to", "fix", "it", "netzpirat", "have", "you", "an", "idea", "about", "jruby", "falling", "again", "on", "linux", "but", "not", "on", "osx", "Ok", "thanks", "netzpirat", "take", "care", "of", "yourself", "Not", "sure", "if", "it", "s", "a", "bug", "when", "I", "pull", "master", "I", "get", "the", "run_on_deletion", "branch", "code", "in", "my", "local", "master", "Ok", "no", "problem", "So", "it", "isn", "t", "really", "an", "issue", "right", "Can", "you", "please", "propose", "a", "better", "phrase", "that", "include", "a", "rbx", "suggestion", "Ok", "thanks", "for", "the", "report", "I", "thing", "I", "can", "close", "this", "issue", "NUMBER", "Growl", "be", "definitely", "handle", "through", "guard", "but", "for", "Cucumber", "Rspec", "guards", "we", "need", "to", "use", "custom", "formatters", "outside", "of", "the", "guard", "scope", "NUMBER", "Have", "you", "disabled", "bundler", "on", "these", "guards", "config", "options", "Are", "you", "launching", "guard", "with", "bundle", "exec", "Have", "you", "install", "growl", "LINK", "Please", "try", "with", "the", "growl", "gem", "instead", "NUMBER", "And", "don", "t", "forget", "to", "install", "the", "growl_notify", "binary", "in", "Growl", "extra", "folder", "in", "the", "growl", "dog", "Good", "to", "hear", "I", "close", "this", "issue", "now", "NUMBER", "Answered", "here", "LINK", "rspec", "issue", "NUMBER", "I", "think", "it", "should", "be", "fine", "like", "that", "please", "can", "you", "add", "some", "documentation", "on", "the", "README", "about", "that", "feature", "NUMBER", "Thanks", "Thanks", "Not", "sure", "if", "it", "ll", "be", "use", "a", "lot", "but", "if", "it", "s", "optional", "and", "you", "send", "a", "pretty", "pull", "request", "with", "maybe", "a", "wiki", "page", "as", "documentation", "why", "not", "You", "can", "try", "to", "add", "this", "default_notifications", "feature", "to", "the", "growl_notify", "support", "in", "Guard", "NUMBER", "Seems", "like", "a", "good", "idea", "NUMBER", "Pull", "request", "be", "welcome", "I", "have", "add", "support", "for", "multiple", "notification", "channels", "to", "Guard", "through", "ruby_gntp", "NUMBER", "Currently", "there", "be", "channels", "for", "success", "pending", "fail", "and", "notification", "NUMBER", "If", "you", "like", "to", "add", "the", "same", "for", "growl_notify", "please", "feel", "free", "to", "open", "a", "pull", "request", "NUMBER", "Still", "stuck", "with", "this", "one", "Without", "more", "info", "it", "ll", "be", "hard", "to", "help", "you", "Yes", "it", "s", "intentional", "and", "I", "don", "t", "think", "it", "would", "be", "a", "good", "idea", "to", "turn", "that", "on", "NUMBER", "Not", "sure", "if", "every", "guards", "gems", "would", "handle", "that", "properly", "NUMBER", "Why", "not", "to", "make", "this", "optional", "if", "you", "have", "time", "to", "handle", "it", "NUMBER", "Have", "you", "find", "a", "solution", "about", "your", "error", "Seems", "good", "limeyd", "be", "you", "work", "be", "pull", "requestable", "Seems", "like", "a", "good", "idea", "feel", "free", "to", "submit", "a", "pull", "request", "NUMBER", "Thanks", "Thanks", "Looks", "great", "thanks", "NUMBER", "Please", "can", "you", "also", "update", "the", "README", "before", "I", "merge", "it", "NUMBER", "Sounds", "good", "NUMBER", "Thanks", "Also", "with", "the", "master", "branch", "of", "Guard", "Do", "you", "have", "the", "same", "issue", "with", "rb", "fsevent", "NUMBER", "If", "not", "please", "report", "directly", "this", "on", "rb", "fsevent", "with", "a", "link", "on", "this", "issue", "NUMBER", "Thanks", "NUMBER", "ttilley", "what", "do", "you", "think", "of", "that", "ttilley", "yeah", "I", "think", "we", "ll", "seriously", "thinking", "about", "a", "replacement", "for", "posix", "signals", "Please", "can", "you", "try", "with", "rb", "fsevent", "NUMBER", "thanks", "ttilley", "for", "this", "one", "Great", "I", "close", "this", "issue", "NUMBER", "Hi", "actually", "it", "has", "be", "thought", "and", "prepared", "in", "this", "pull", "request", "LINK", "here", "LINK", "L", "NUMBER", "NUMBER", "but", "not", "implement", "yet", "LINK", "L", "NUMBER", "NUMBER", "A", "CLI", "option", "seems", "good", "to", "me", "NUMBER", "Feel", "free", "to", "make", "a", "pull", "request", "if", "you", "re", "interested", "NUMBER", "FYI", "next", "time", "if", "you", "have", "a", "question", "please", "ask", "it", "in", "the", "Google", "group", "LINK", "dev", "or", "on", "guard", "irc", "NUMBER", "freenode", "NUMBER", "net", "NUMBER", "I", "ve", "just", "pull", "some", "contribution", "from", "nestegg", "that", "add", "NUMBER", "new", "CLI", "options", "watchdir", "w", "to", "specify", "the", "directory", "in", "which", "Guard", "should", "watch", "for", "file", "change", "guardfile", "G", "to", "specify", "the", "location", "of", "an", "alternate", "Guardfile", "NUMBER", "Could", "you", "give", "it", "a", "try", "if", "you", "still", "need", "it", "Thanks", "Hi", "I", "ve", "just", "diagnosed", "a", "very", "critical", "bug", "that", "s", "probably", "be", "the", "same", "that", "you", "describe", "NUMBER", "I", "ve", "fix", "it", "locally", "and", "will", "push", "it", "this", "evening", "along", "with", "a", "new", "DSL", "method", "to", "exclude", "specific", "folders", "by", "default", "we", "plan", "to", "exclude", "NUMBER", "bundle", "NUMBER", "git", "log", "tmp", "vendor", "NUMBER", "FYI", "before", "the", "fix", "LINK", "L", "NUMBER", "NUMBER", "was", "taking", "NUMBER", "seconds", "it", "now", "takes", "less", "than", "a", "single", "second", "NUMBER", "Hi", "again", "I", "ve", "now", "push", "the", "fix", "some", "other", "refactoring", "optimizations", "improvement", "ianwhite", "OSX", "thibaudgg", "OSX", "yannlugrin", "Linux", "stereobooster", "Win", "surajreddy", "Win", "could", "you", "all", "try", "Guard", "from", "master", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "before", "any", "new", "release", "since", "I", "ve", "made", "some", "minor", "change", "to", "listeners", "normally", "nothing", "should", "break", "though", "but", "who", "knows", "NUMBER", "I", "ll", "also", "try", "to", "merge", "NUMBER", "in", "the", "next", "few", "days", "so", "stereobooster", "surajreddy", "please", "be", "ready", "to", "stress", "test", "the", "NUMBER", "pre", "release", "scheduled", "for", "Sunday", "Have", "you", "tried", "it", "yet", "Maybe", "you", "could", "sync", "with", "yannlugrin", "we", "be", "having", "a", "commit", "discussion", "here", "LINK", "commitcomment", "NUMBER", "P", "Great", "it", "should", "be", "fairly", "easy", "and", "quick", "to", "add", "a", "new", "Guardfile", "DSL", "methods", "for", "exclusions", "now", "NUMBER", "No", "I", "think", "it", "will", "be", "good", "we", "will", "see", "if", "Windows", "users", "get", "issue", "NUMBER", "Btw", "it", "was", "on", "this", "issue", "LINK", "NUMBER", "ianwhite", "how", "be", "it", "going", "Thanks", "Thanks", "That", "s", "pretty", "cool", "I", "ll", "give", "it", "a", "try", "I", "tried", "quickly", "yesterday", "and", "it", "didn", "t", "work", "be", "there", "any", "extra", "configuration", "to", "make", "it", "work", "I", "think", "not", "but", "NUMBER", "Actually", "it", "works", "well", "when", "Notifier", "NUMBER", "notify", "be", "call", "in", "the", "context", "of", "Guard", "but", "not", "when", "it", "s", "not", "in", "its", "context", "like", "in", "the", "guard", "rspec", "formatters", "for", "example", "NUMBER", "I", "tried", "to", "find", "why", "but", "no", "result", "yet", "NUMBER", "The", "issue", "seems", "to", "be", "in", "the", "GrowlNotify", "NUMBER", "config", "block", "since", "a", "puts", "before", "the", "block", "be", "display", "but", "a", "put", "just", "after", "the", "block", "be", "not", "on", "guard", "rspec", "results", "NUMBER", "Seems", "like", "support", "only", "close_write", "move_self", "for", "vim", "jedit", "would", "cover", "NUMBER", "of", "editors", "listed", "above", "NUMBER", "Thanks", "these", "info", "that", "s", "really", "helpful", "It", "should", "be", "easy", "to", "implement", "Guard", "Guard", "run_on_change", "paths", "LINK", "L", "NUMBER", "method", "return", "a", "boolean", "so", "if", "it", "s", "false", "we", "can", "break", "the", "loop", "in", "Guard", "NUMBER", "run_on_change_for_all_guards", "file", "LINK", "L", "NUMBER", "NUMBER", "Please", "can", "you", "try", "to", "implement", "it", "and", "make", "a", "pull", "request", "NUMBER", "Thanks", "Ok", "yannlugrin", "and", "netzpirat", "made", "a", "good", "point", "NUMBER", "I", "think", "we", "can", "keep", "that", "for", "version", "NUMBER", "Seems", "ok", "for", "you", "jamesarosen", "Ok", "I", "thin", "we", "can", "do", "that", "for", "v", "NUMBER", "with", "a", "beta", "rc", "period", "v", "NUMBER", "be", "just", "around", "the", "corner", "NUMBER", "With", "A", "deprecation", "warning", "when", "a", "method", "isn", "t", "returning", "a", "boolean", "and", "only", "break", "the", "loop", "when", "a", "true", "false", "returned", "NUMBER", "An", "update", "of", "the", "documentation", "A", "mail", "issue", "to", "all", "guards", "that", "aren", "t", "compliant", "with", "the", "new", "rules", "Sounds", "good", "to", "you", "I", "m", "afraid", "there", "be", "not", "at", "this", "time", "NUMBER", "We", "should", "recommend", "to", "subscribe", "to", "the", "google", "group", "when", "we", "sent", "the", "mail", "to", "all", "guard", "s", "members", "one", "by", "one", "Hi", "yeah", "we", "would", "have", "to", "find", "a", "way", "to", "store", "each", "guard", "s", "group", "and", "keep", "the", "same", "order", "of", "group", "and", "guards", "as", "declared", "in", "the", "Guardfile", "NUMBER", "Also", "any", "structure", "modification", "to", "guards", "could", "be", "harmful", "for", "some", "exist", "guards", "that", "access", "the", "guards", "list", "NUMBER", "Maybe", "we", "could", "pass", "a", "group", "to", "Guard", "Guard", "initialize", "in", "the", "options", "hash", "and", "store", "group", "in", "group", "NUMBER", "Then", "call", "at", "the", "current", "line", "NUMBER", "LINK", "L", "NUMBER", "ruby", "group", "NUMBER", "each", "do", "group", "we", "should", "set", "group", "to", "default", "for", "instance", "if", "no", "group", "present", "guards", "NUMBER", "select", "guard", "guard", "NUMBER", "options", "group", "group", "NUMBER", "each", "do", "guard", "simplified", "since", "it", "should", "handle", "cases", "when", "guards", "have", "no", "group", "NUMBER", "supervised_task", "guard", "run_on_change", "paths", "with", "new", "logic", "when", "supervised_task", "return", "false", "here", "end", "end", "Any", "thoughts", "NUMBER", "for", "Google", "Group", "mailing", "Ok", "great", "NUMBER", "for", "YARD", "and", "documentation", "for", "Guard", "developers", "Wooo", "that", "s", "just", "awesome", "thanks", "netzpirat", "Ok", "Guard", "NUMBER", "be", "out", "with", "this", "new", "feature", "now", "we", "ll", "just", "need", "to", "add", "some", "documentation", "README", "about", "it", "Seems", "like", "a", "great", "idea", "please", "can", "you", "try", "to", "implement", "it", "and", "make", "a", "pull", "request", "Thanks", "Good", "point", "netzpirat", "I", "think", "you", "re", "right", "again", "NUMBER", "Thanks", "for", "your", "input", "on", "that", "point", "capotej", "feel", "free", "to", "reopen", "this", "one", "if", "you", "send", "a", "pull", "request", "NUMBER", "I", "close", "it", "in", "the", "meantime", "NUMBER", "Sounds", "useful", "thanks", "Please", "can", "you", "add", "one", "spec", "and", "one", "line", "in", "the", "README", "CHANGELOG", "NUMBER", "Sounds", "goods", "thanks", "Thanks", "for", "fix", "the", "specs", "It", "s", "all", "green", "again", "now", "Also", "I", "didn", "t", "know", "this", "way", "of", "calling", "should_receive", "with", "a", "block", "Thanks", "Oops", "it", "breaks", "the", "specs", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "can", "you", "please", "fix", "it", "NUMBER", "Updating", "the", "changelog", "would", "be", "great", "too", "NUMBER", "Please", "can", "you", "just", "edit", "the", "README", "to", "referrer", "this", "change", "a", "line", "in", "the", "CHANGELOG", "would", "be", "great", "too", "NUMBER", "Thanks", "Don", "t", "you", "think", "we", "can", "support", "both", "type", "hidden", "non", "hidden", "Great", "good", "point", "will", "keep", "only", "NUMBER", "Guardfile", "Thanks", "again", "Awesome", "thanks", "NUMBER", "Can", "you", "just", "add", "some", "info", "about", "this", "_great_", "feature", "in", "the", "README", "inside", "man", "pages", "give", "more", "bonus", "points", "I", "use", "ronn", "LINK", "like", "this", "ronn", "man", "guard", "NUMBER", "md", "man", "guard", "NUMBER", "man", "man", "guard", "NUMBER", "but", "I", "ll", "probably", "write", "Guard", "Ronn", "for", "future", "ease", "of", "generation", "BTW", "I", "ve", "mostly", "followed", "the", "instructions", "here", "LINK", "gems", "and", "man", "pages", "and", "here", "LINK", "format", "NUMBER", "Awesome", "Thanks", "for", "completing", "the", "manpage", "Is", "it", "final", "Does", "this", "work", "on", "Windows", "In", "any", "case", "the", "implementation", "looks", "fine", "for", "me", "Hey", "all", "I", "ve", "just", "seen", "this", "cool", "gem", "LINK", "Maybe", "we", "could", "use", "it", "Just", "a", "thought", "This", "be", "now", "merge", "Thanks", "stereobooster", "it", "would", "be", "cool", "if", "everyone", "could", "stress", "test", "this", "most", "importantly", "on", "Windows", "before", "the", "next", "pre", "release", "in", "a", "few", "days", "NUMBER", "Ok", "good", "to", "know", "please", "luislavena", "can", "you", "submit", "a", "pull", "request", "for", "that", "Thanks", "Do", "you", "have", "any", "clues", "on", "why", "this", "be", "happening", "I", "m", "not", "sure", "to", "understand", "everything", "though", "NUMBER", "Still", "a", "problem", "with", "the", "last", "version", "Hi", "if", "it", "s", "for", "development", "purpose", "I", "think", "the", "UI", "debug", "method", "be", "appropriate", "NUMBER", "You", "would", "then", "launch", "guard", "in", "debug", "mode", "with", "guard", "d", "I", "ve", "just", "seen", "that", "this", "option", "be", "not", "documented", "in", "the", "README", "to", "see", "more", "info", "on", "the", "exception", "NUMBER", "Ok", "I", "ve", "merge", "the", "pull", "request", "and", "finally", "use", "UI", "NUMBER", "error", "since", "I", "think", "it", "s", "always", "useful", "to", "see", "an", "Exception", "trace", "not", "only", "during", "development", "NUMBER", "I", "ve", "also", "add", "color", "red", "to", "the", "ERROR", "flag", "when", "you", "use", "UI", "NUMBER", "error", "NUMBER", "Thanks", "Elliot", "Please", "can", "you", "give", "your", "Guardfile", "maybe", "this", "issue", "be", "come", "from", "a", "guard", "plugins", "NUMBER", "Can", "you", "try", "with", "guard", "bundler", "placed", "before", "guard", "rspec", "or", "by", "commented", "it", "completely", "to", "see", "if", "it", "still", "hanging", "NUMBER", "Great", "thanks", "stereobooster", "just", "fix", "it", "with", "LINK", "Thanks", "Would", "it", "not", "be", "easier", "to", "not", "pressing", "save", "every", "couple", "seconds", "rather", "than", "thinking", "to", "stoping", "restarting", "Guard", "I", "don", "t", "think", "add", "this", "feature", "it", "s", "a", "good", "way", "to", "solve", "your", "problem", "NUMBER", "But", "maybe", "I", "ve", "not", "enough", "understood", "your", "problem", "can", "you", "clarify", "it", "a", "little", "bit", "You", "can", "also", "try", "to", "use", "RSpec", "filter", "I", "use", "focus", "true", "to", "speed", "up", "your", "test", "execution", "NUMBER", "Hi", "toolbear", "you", "right", "good", "use", "case", "NUMBER", "I", "m", "a", "on", "the", "middle", "of", "a", "complete", "rewrite", "of", "how", "Guard", "interactions", "work", "I", "have", "remove", "Posix", "signal", "interaction", "and", "replaced", "them", "with", "something", "more", "universal", "stdin", "NUMBER", "get", "Posix", "signals", "didn", "t", "work", "well", "on", "jruby", "windows", "NUMBER", "So", "NUMBER", "I", "have", "already", "add", "pausing", "support", "on", "the", "stdin", "branch", "LINK", "please", "give", "it", "a", "try", "Specific", "code", "here", "LINK", "L", "NUMBER", "NUMBER", "LINK", "L", "NUMBER", "NUMBER", "potiguar", "we", "can", "maybe", "add", "a", "option", "to", "automatically", "pause", "file", "modification", "listening", "on", "specific", "git", "branch", "NUMBER", "Feel", "free", "to", "test", "if", "it", "s", "feasible", "and", "that", "don", "t", "slow", "down", "the", "whole", "thing", "on", "your", "side", "and", "provide", "a", "pull", "request", "maybe", "against", "the", "stdin", "branch", "Please", "give", "a", "try", "on", "the", "pausing", "feature", "already", "implement", "on", "the", "stdin", "branch", "thanks", "This", "feature", "exists", "now", "in", "the", "head", "master", "branch", "NUMBER", "Specs", "doesn", "t", "fail", "on", "Mac", "OS", "X", "all", "green", "I", "don", "t", "think", "this", "has", "drawback", "but", "I", "m", "not", "use", "Linux", "so", "I", "can", "t", "really", "tell", "NUMBER", "Anyway", "feel", "free", "to", "do", "a", "pull", "request", "if", "you", "think", "it", "s", "appropriate", "Thanks", "Good", "catch", "thanks", "Awesome", "thanks", "Fixed", "with", "this", "commit", "LINK", "right", "I", "think", "this", "should", "be", "fix", "by", "the", "NUMBER", "if", "not", "feel", "free", "to", "reopen", "this", "issue", "NUMBER", "Great", "thanks", "for", "the", "wiki", "page", "NUMBER", "I", "just", "update", "the", "guard", "rspec", "Guardfile", "template", "this", "commit", "LINK", "rspec", "commit", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "Feel", "free", "to", "make", "some", "pull", "request", "on", "the", "guards", "Guardfile", "template", "you", "be", "use", "NUMBER", "That", "s", "awesome", "man", "Thanks", "I", "didn", "t", "know", "this", "trick", "that", "s", "very", "useful", "and", "clean", "Can", "you", "leave", "a", "spec", "with", "the", "guard", "name", "set", "as", "a", "String", "Thanks", "I", "ll", "merge", "after", "that", "Perfect", "Does", "the", "specs", "pass", "In", "that", "case", "let", "see", "what", "Travis", "CI", "has", "to", "say", "D", "Thanks", "Hi", "The", "version", "specification", "in", "your", "gemspec", "be", "broken", "LINK", "Krammer", "blob", "master", "guard", "krammer", "NUMBER", "gemspec", "L", "NUMBER", "maybe", "it", "s", "just", "that", "NUMBER", "You", "should", "also", "renamed", "our", "repository", "name", "as", "guard", "krammer", "and", "not", "Guard", "Krammer", "Oh", "sorry", "I", "have", "misread", "your", "gemspec", "NUMBER", "It", "seems", "fine", "NUMBER", "Please", "can", "you", "show", "me", "your", "Guardfile", "Gemfile", "and", "also", "try", "our", "gem", "with", "Guard", "NUMBER", "rc", "Thanks", "yep", "NUMBER", "for", "guard", "markdown", "Great", "idea", "just", "add", "the", "link", "for", "the", "Google", "group", "and", "guard", "channel", "at", "the", "top", "of", "the", "Readme", "Great", "let", "us", "know", "when", "guard", "markdown", "be", "ready", "w", "NUMBER", "t", "Love", "all", "this", "D", "About", "the", "gem", "gemspec", "structure", "please", "take", "inspiration", "from", "guard", "rspec", "LINK", "rspec", "made", "by", "our", "leader", "thibaudgg", "P", "I", "can", "feel", "your", "pain", "because", "I", "struggled", "with", "the", "same", "issue", "some", "time", "ago", "NUMBER", "The", "Guard", "keyboard", "shortcuts", "be", "in", "fact", "signals", "that", "be", "be", "trapped", "NUMBER", "Signals", "be", "specified", "in", "POSIX", "NUMBER", "standard", "and", "not", "all", "operate", "systems", "be", "full", "POSIX", "compliant", "like", "embedded", "systems", "and", "windows", "NUMBER", "You", "can", "send", "signals", "to", "Guard", "with", "the", "kill", "command", "on", "Unix", "like", "operate", "systems", "NUMBER", "Guard", "uses", "the", "following", "signals", "SIGQUIT", "Run", "all", "SIGINT", "Stop", "SIGTSTP", "Reload", "You", "can", "set", "the", "options", "for", "a", "terminal", "device", "interface", "with", "the", "stty", "command", "and", "list", "the", "current", "control", "characters", "for", "signals", "with", "stty", "a", "cchars", "discard", "O", "dsusp", "Y", "eof", "D", "eol", "TAG", "eol", "NUMBER", "TAG", "erase", "intr", "C", "kill", "U", "lnext", "V", "min", "NUMBER", "quit", "reprint", "R", "start", "Q", "status", "T", "stop", "S", "susp", "Z", "time", "NUMBER", "werase", "W", "Now", "you", "can", "change", "the", "control", "character", "for", "SIGQUIT", "with", "stty", "quit", "R", "This", "maps", "Guards", "Run", "all", "to", "Ctrl", "R", "NUMBER", "You", "may", "want", "to", "have", "a", "look", "at", "man", "page", "of", "stty", "to", "see", "what", "you", "can", "do", "NUMBER", "I", "also", "add", "this", "information", "to", "the", "wiki", "and", "add", "links", "to", "it", "NUMBER", "This", "behavior", "depends", "on", "how", "file", "system", "notifications", "work", "They", "don", "t", "catch", "file", "change", "at", "the", "content", "level", "they", "catch", "change", "at", "the", "file", "attribute", "level", "NUMBER", "For", "example", "FSEvent", "provides", "no", "notifications", "for", "change", "to", "individual", "file", "so", "Guard", "has", "to", "figure", "it", "out", "based", "on", "the", "file", "modification", "timestamp", "NUMBER", "If", "you", "want", "to", "check", "if", "the", "file", "content", "has", "be", "change", "you", "ll", "have", "to", "duplicate", "the", "content", "to", "be", "able", "to", "compare", "it", "when", "a", "file", "system", "notification", "be", "triggered", "NUMBER", "This", "be", "costly", "to", "implement", "and", "would", "slow", "down", "Guard", "massively", "because", "you", "ll", "have", "to", "clone", "the", "whole", "directory", "on", "startup", "and", "read", "the", "content", "of", "all", "file", "within", "a", "directory", "where", "a", "single", "file", "has", "be", "change", "NUMBER", "I", "think", "this", "be", "an", "overkill", "and", "would", "not", "make", "much", "sense", "to", "implement", "NUMBER", "Hashing", "the", "file", "content", "would", "be", "a", "good", "way", "to", "implement", "this", "I", "did", "a", "small", "test", "to", "measure", "the", "time", "that", "be", "needed", "to", "generate", "a", "md", "NUMBER", "on", "each", "file", "in", "my", "current", "project", "NUMBER", "file", "and", "it", "took", "around", "NUMBER", "seconds", "time", "find", "NUMBER", "type", "file", "exec", "md", "NUMBER", "dev", "null", "sigint", "noglob", "find", "NUMBER", "type", "file", "exec", "md", "NUMBER", "dev", "null", "NUMBER", "s", "user", "NUMBER", "s", "system", "NUMBER", "cpu", "NUMBER", "total", "I", "d", "like", "it", "to", "see", "this", "feature", "come", "into", "Guard", "but", "I", "suggest", "to", "turn", "off", "by", "default", "NUMBER", "I", "m", "thinking", "about", "implement", "some", "kind", "of", "system", "wide", "and", "project", "specific", "NUMBER", "guardrc", "so", "that", "pros", "can", "configure", "they", "Guard", "how", "they", "like", "it", "without", "provide", "some", "options", "each", "time", "NUMBER", "Great", "implementation", "NUMBER", "I", "like", "the", "lazy", "SHA", "NUMBER", "generation", "to", "avoid", "costly", "pre", "calculation", "NUMBER", "I", "think", "it", "s", "the", "best", "solution", "in", "terms", "of", "speed", "and", "user", "experience", "NUMBER", "Yes", "exactly", "I", "would", "also", "not", "make", "this", "an", "option", "because", "a", "user", "would", "not", "expect", "a", "Guard", "action", "when", "the", "content", "has", "not", "be", "change", "NUMBER", "This", "be", "what", "I", "meant", "with", "great", "user", "experience", "This", "be", "something", "your", "Guard", "should", "handle", "NUMBER", "You", "can", "easily", "get", "an", "absolute", "path", "from", "a", "relative", "one", "by", "use", "File", "NUMBER", "expand_path", "LINK", "doc", "NUMBER", "org", "core", "classes", "File", "NUMBER", "html", "M", "NUMBER", "NUMBER", "Ok", "now", "I", "understand", "your", "intention", "thanks", "for", "clarify", "NUMBER", "It", "s", "not", "only", "about", "joining", "Dir", "NUMBER", "pwd", "to", "the", "file", "be", "watched", "it", "s", "about", "initializing", "the", "listener", "NUMBER", "To", "have", "a", "performant", "Guard", "the", "watched", "file", "should", "be", "as", "less", "as", "possible", "otherwise", "Guard", "would", "be", "flooded", "with", "file", "system", "events", "from", "the", "whole", "system", "NUMBER", "So", "when", "you", "want", "to", "get", "file", "notifications", "from", "your", "project", "directory", "home", "anithri", "workspace", "alfred", "and", "tmp", "you", "have", "to", "watch", "to", "get", "notifications", "from", "both", "directories", "which", "be", "a", "bad", "idea", "NUMBER", "The", "current", "Guard", "implementation", "allows", "only", "one", "listener", "so", "you", "have", "to", "refactor", "it", "to", "handle", "multiple", "listeners", "NUMBER", "This", "be", "something", "that", "be", "also", "discussed", "in", "NUMBER", "for", "another", "reason", "NUMBER", "Perhaps", "another", "approach", "be", "to", "enhance", "the", "group", "keyword", "guard", "coffeescript", "input", "app", "coffeescripts", "output", "public", "javascripts", "compiled", "group", "backend", "do", "guard", "rspec", "cli", "color", "format", "doc", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "end", "end", "group", "output", "listen", "tmp", "do", "guard", "livereload", "do", "watch", "output", "NUMBER", "hmtl", "end", "end", "To", "make", "the", "above", "Guardfile", "work", "we", "need", "to", "implement", "the", "following", "functionality", "Guards", "not", "defined", "within", "a", "group", "must", "go", "into", "an", "anonymous", "top", "level", "group", "perhaps", "the", "main", "group", "so", "you", "could", "start", "it", "with", "guard", "g", "main", "NUMBER", "Collect", "the", "watchers", "in", "the", "DSL", "by", "group", "NUMBER", "Accept", "a", "listen", "option", "to", "set", "the", "directory", "to", "listen", "on", "a", "group", "level", "NUMBER", "Change", "the", "listeners", "to", "allow", "passing", "a", "directory", "to", "listen", "to", "defaults", "to", "Dir", "NUMBER", "pwd", "NUMBER", "Change", "the", "Guard", "main", "module", "to", "handle", "multiple", "listeners", "NUMBER", "This", "be", "something", "I", "m", "also", "interested", "to", "help", "implement", "NUMBER", "I", "ve", "no", "idea", "and", "I", "do", "not", "remember", "that", "a", "listen", "option", "has", "be", "add", "to", "the", "group", "DSL", "NUMBER", "But", "I", "guess", "it", "was", "around", "the", "time", "where", "the", "watchdir", "and", "guardfile", "options", "have", "be", "add", "to", "Guard", "which", "will", "allow", "to", "split", "the", "Guard", "plugins", "into", "different", "Guardfiles", "and", "have", "them", "watch", "different", "directory", "NUMBER", "This", "was", "exactly", "one", "of", "the", "reasons", "why", "I", "implement", "the", "group", "feature", "It", "enable", "you", "to", "selectively", "start", "different", "guard", "group", "in", "separate", "threads", "NUMBER", "I", "admit", "it", "would", "be", "very", "nice", "if", "each", "guard", "group", "would", "be", "automatically", "run", "in", "a", "separate", "thread", "when", "no", "option", "group", "be", "pass", "on", "the", "command", "line", "but", "implement", "this", "would", "increase", "code", "complexity", "a", "lot", "due", "to", "the", "design", "of", "Guard", "the", "setup", "of", "the", "different", "guards", "and", "the", "listener", "be", "do", "statically", "in", "the", "Guard", "module", "NUMBER", "So", "if", "you", "have", "a", "Guardfile", "flike", "this", "group", "backend", "do", "guard", "rspec", "cli", "color", "format", "doc", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "end", "end", "group", "frontend", "do", "guard", "coffeescript", "input", "app", "coffeescripts", "output", "public", "javascripts", "compiled", "guard", "livereload", "do", "watch", "r", "app", "NUMBER", "NUMBER", "erb", "haml", "end", "end", "Just", "open", "a", "terminal", "and", "run", "guard", "g", "fronend", "and", "another", "terminal", "to", "run", "guard", "g", "backend", "NUMBER", "It", "s", "not", "as", "simple", "as", "just", "run", "guard", "and", "have", "the", "group", "separated", "but", "it", "works", "and", "it", "s", "not", "bad", "to", "have", "the", "outputs", "of", "the", "group", "separated", "NUMBER", "I", "d", "also", "prefer", "to", "start", "Guard", "only", "once", "NUMBER", "I", "ve", "spent", "some", "time", "today", "to", "test", "some", "ideas", "how", "this", "can", "be", "do", "but", "haven", "t", "find", "a", "simple", "solution", "yet", "NUMBER", "NUMBER", "has", "be", "solve", "with", "a", "workaround", "LINK", "coffeescript", "blob", "master", "lib", "guard", "coffeescript", "NUMBER", "rb", "L", "NUMBER", "within", "guard", "coffeescript", "but", "it", "should", "be", "handle", "in", "common", "by", "Guard", "NUMBER", "I", "ve", "some", "more", "ideas", "how", "to", "achieve", "this", "and", "will", "play", "some", "more", "with", "Guard", "the", "next", "days", "NUMBER", "Not", "sure", "if", "there", "s", "again", "an", "issue", "with", "inotify", "with", "the", "new", "listening", "process", "introduce", "in", "Guard", "NUMBER", "it", "should", "be", "possible", "to", "add", "this", "feature", "without", "too", "much", "problem", "NUMBER", "I", "think", "parallelizing", "Guard", "group", "be", "the", "way", "to", "go", "we", "just", "need", "to", "take", "care", "of", "not", "having", "the", "same", "group", "run", "twice", "in", "the", "same", "time", "a", "group", "should", "wait", "for", "itself", "before", "run", "again", "NUMBER", "Oh", "my", "dear", "GitHub", "issue", "I", "ve", "looked", "at", "you", "many", "times", "because", "you", "re", "still", "in", "open", "state", "NUMBER", "I", "ve", "also", "read", "your", "completely", "at", "least", "three", "times", "which", "takes", "ages", "NUMBER", "But", "nobody", "cares", "about", "you", "not", "you", "dear", "reader", "and", "recipient", "of", "the", "notification", "not", "the", "creator", "of", "the", "issue", "not", "anyone", "of", "the", "Guard", "maintainers", "just", "nobody", "NUMBER", "There", "s", "no", "discussion", "since", "NUMBER", "months", "and", "nobody", "want", "to", "spend", "some", "time", "for", "you", "NUMBER", "In", "short", "we", "don", "t", "need", "you", "NUMBER", "I", "m", "sorry", "about", "you", "but", "I", "m", "going", "to", "close", "you", "now", "NUMBER", "Great", "but", "your", "commit", "will", "break", "the", "libnotify", "notification", "LINK", "L", "NUMBER", "because", "you", "have", "remove", "the", "title", "attribute", "NUMBER", "Please", "can", "you", "fix", "that", "and", "update", "add", "specs", "NUMBER", "Thanks", "Yeah", "Windows", "support", "be", "a", "great", "thing", "to", "have", "Have", "you", "an", "idea", "about", "a", "possible", "replacement", "for", "TSTP", "signal", "Ctrl", "Z", "to", "handle", "reload", "on", "Windows", "Do", "you", "think", "it", "s", "easy", "to", "add", "something", "like", "LINK", "instead", "of", "polling", "for", "Windows", "rb", "fchange", "looks", "great", "currently", "FSEvent", "on", "Mac", "OS", "X", "do", "the", "same", "thing", "only", "say", "when", "something", "change", "in", "a", "sub", "folder", "but", "not", "exactly", "what", "so", "add", "a", "win", "NUMBER", "listener", "should", "be", "really", "easy", "here", "the", "darwin", "listener", "LINK", "NUMBER", "Can", "you", "tried", "to", "do", "that", "It", "would", "be", "awesome", "For", "the", "Signal", "trapping", "have", "you", "get", "the", "time", "to", "try", "LINK", "on", "Windows", "Thanks", "Looks", "nice", "thanks", "Jeff", "Yes", "that", "kind", "of", "feature", "was", "commented", "LINK", "but", "I", "never", "have", "the", "time", "to", "implement", "it", "NUMBER", "In", "the", "meantime", "some", "guard", "like", "guard", "rspec", "have", "implement", "that", "as", "an", "option", "LINK", "rspec", "commit", "f", "NUMBER", "cfb", "NUMBER", "fb", "NUMBER", "a", "NUMBER", "e", "NUMBER", "af", "NUMBER", "d", "NUMBER", "ef", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "NUMBER", "Please", "add", "your", "thoughts", "on", "the", "NUMBER", "thread", "issue", "NUMBER", "gvt", "Wich", "Xcode", "version", "do", "you", "have", "On", "which", "folder", "path", "be", "you", "watching", "change", "gvt", "have", "you", "tried", "without", "the", "hyphen", "just", "to", "be", "sure", "gvt", "ok", "so", "feel", "free", "to", "open", "an", "issue", "on", "LINK", "fsevent", "issue", "ttilley", "NUMBER", "pre", "NUMBER", "that", "s", "a", "big", "jump", "forward", "open_gem", "dependency", "has", "be", "remove", "yesterday", "in", "Guard", "NUMBER", "thanks", "for", "this", "feedback", "Hooks", "could", "be", "a", "great", "feature", "but", "It", "would", "be", "much", "nicer", "if", "exist", "guard", "didn", "t", "have", "too", "be", "update", "which", "be", "not", "the", "case", "with", "your", "implementation", "right", "I", "think", "it", "must", "be", "possible", "to", "add", "it", "directly", "inside", "Guard", "code", "NUMBER", "rymai", "not", "sure", "if", "add", "that", "in", "the", "Guardfile", "be", "very", "useful", "handy", "what", "do", "you", "think", "monocle", "rymai", "ready", "to", "merge", "this", "one", "D", "great", "thanks", "Do", "you", "have", "install", "Bundler", "in", "Ruby", "NUMBER", "Could", "not", "find", "RubyGem", "bundler", "Please", "can", "you", "give", "your", "Gemfile", "Guardfile", "You", "be", "right", "bundler", "be", "no", "more", "required", "in", "the", "main", "file", "it", "was", "needed", "in", "version", "NUMBER", "in", "Guard", "locate_guard", "LINK", "L", "NUMBER", "NUMBER", "I", "forgot", "to", "remove", "the", "require", "my", "fault", "Thanks", "Merged", "NUMBER", "Finally", "merge", "thanks", "Now", "I", "merge", "the", "reset_line", "issue", "do", "you", "still", "have", "this", "issue", "Please", "close", "this", "issue", "if", "not", "Hey", "we", "simply", "don", "t", "use", "platform", "conditions", "and", "growl", "be", "in", "the", "Gemfile", "NUMBER", "lock", "so", "what", "As", "far", "as", "I", "know", "Linux", "doesn", "t", "complain", "about", "that", "NUMBER", "I", "don", "t", "get", "why", "you", "had", "conflict", "if", "you", "install", "both", "gems", "growl", "and", "libnotify", "the", "developers", "on", "Mac", "will", "see", "notifications", "via", "Growl", "the", "developers", "on", "Linux", "will", "see", "them", "via", "Libnotify", "NUMBER", "No", "Anyway", "this", "question", "be", "not", "relate", "to", "Guard", "at", "all", "It", "s", "more", "a", "Bundler", "question", "NUMBER", "R\u00e9my", "Still", "an", "issue", "Please", "close", "this", "issue", "if", "not", "It", "s", "yannlugrin", "that", "have", "code", "the", "inotify", "listener", "Yann", "can", "you", "check", "that", "Or", "maybe", "nex", "NUMBER", "could", "directly", "merge", "this", "fix", "if", "jcnnghm", "make", "a", "pull", "request", "NUMBER", "Thanks", "to", "all", "Cool", "I", "m", "glad", "that", "there", "be", "now", "a", "solution", "for", "this", "issue", "NUMBER", "Thank", "you", "Sven", "for", "taking", "action", "NUMBER", "just", "merge", "release", "in", "rb", "inotify", "version", "NUMBER", "I", "ll", "require", "this", "version", "for", "Guard", "NUMBER", "Done", "here", "LINK", "NUMBER", "Still", "an", "issue", "for", "you", "Please", "close", "this", "issue", "if", "not", "Do", "you", "know", "if", "there", "be", "an", "equivalent", "for", "QUIT", "signal", "on", "windows", "You", "can", "change", "it", "here", "LINK", "Some", "tips", "here", "LINK", "to", "trap", "signal", "on", "ruby", "run", "on", "windows", "As", "I", "don", "t", "have", "a", "Windows", "machine", "I", "can", "t", "test", "it", "for", "you", "sorry", "NUMBER", "In", "the", "meantime", "if", "other", "signals", "trapping", "be", "work", "INT", "TSTP", "and", "you", "don", "t", "use", "too", "much", "QUIT", "you", "can", "just", "comment", "it", "NUMBER", "I", "can", "think", "of", "two", "ways", "of", "solving", "this", "issue", "NUMBER", "Use", "a", "guard", "NUMBER", "lock", "file", "to", "mark", "a", "directory", "as", "be", "watched", "NUMBER", "Pro", "Very", "easy", "to", "implement", "NUMBER", "Con", "Generates", "a", "temporary", "file", "that", "must", "be", "manually", "remove", "when", "Guard", "terminates", "unexpect", "and", "must", "be", "ignored", "by", "the", "version", "control", "system", "NUMBER", "I", "think", "the", "temporary", "lockfile", "causes", "the", "same", "amount", "of", "problem", "like", "run", "accidentally", "two", "Guards", "in", "the", "same", "project", "NUMBER", "NUMBER", "Use", "some", "kind", "of", "inter", "process", "communication", "IPC", "NUMBER", "Pro", "Ease", "of", "use", "NUMBER", "Con", "Hard", "to", "implement", "because", "Guard", "runs", "on", "many", "Rubies", "and", "OS", "and", "any", "kind", "of", "IPC", "be", "quite", "different", "an", "each", "combination", "NUMBER", "Most", "Ruby", "libraries", "I", "ve", "find", "be", "POSIX", "only", "and", "don", "t", "run", "on", "JRuby", "and", "Windows", "NUMBER", "The", "problem", "be", "interesting", "to", "solve", "but", "would", "increase", "the", "complexity", "of", "Guard", "immense", "NUMBER", "I", "d", "not", "fix", "this", "issue", "because", "the", "cost", "of", "the", "fix", "be", "too", "high", "from", "either", "ease", "of", "use", "or", "development", "complexity", "NUMBER", "This", "problem", "should", "be", "solve", "in", "a", "separate", "Gem", "for", "this", "very", "specific", "problem", "that", "could", "also", "be", "very", "interesting", "for", "other", "Ruby", "tool", "NUMBER", "NUMBER", "for", "the", "latest", "DSL", "proposal", "NUMBER", "It", "s", "perfectly", "self", "describing", "NUMBER", "Oh", "my", "dear", "GitHub", "issue", "I", "ve", "looked", "at", "you", "many", "times", "because", "you", "re", "still", "in", "open", "state", "NUMBER", "I", "ve", "also", "read", "your", "completely", "at", "least", "three", "times", "which", "takes", "ages", "NUMBER", "But", "nobody", "cares", "about", "you", "not", "you", "dear", "reader", "and", "recipient", "of", "the", "notification", "not", "the", "creator", "of", "the", "issue", "not", "anyone", "of", "the", "Guard", "maintainers", "just", "nobody", "NUMBER", "There", "s", "no", "discussion", "since", "NUMBER", "months", "and", "nobody", "want", "to", "spend", "some", "time", "for", "you", "NUMBER", "In", "short", "we", "don", "t", "need", "you", "NUMBER", "I", "m", "sorry", "about", "you", "but", "I", "m", "going", "to", "close", "you", "now", "NUMBER", "Great", "please", "can", "you", "provide", "a", "pull", "request", "to", "fix", "this", "NUMBER", "Thx"], "text_count": [0, 11061, 2721, 1355, 598, 139, 1085, 5, 41, 1366, 1604, 2628, 1516, 1381, 1326, 397, 0, 0, 0, 0, 3386, 1055, 431, 419, 596, 676, 0, 0, 0, 0, 6226, 4145, 2196, 101, 1148, 373, 0, 0, 0, 0, 8521, 27, 3885, 3101, 2485, 0, 0, 0, 0, 0, 2039, 855, 1126, 555, 808, 453, 760, 0, 0, 0, 6259, 388, 5287, 279, 0, 0, 0, 0, 0, 0, 3895, 354, 2993, 1335, 355, 0, 0, 0, 0, 0, 7791, 3713, 676, 2489, 441, 883, 0, 0, 0, 0, 496, 2515, 163, 0, 0, 0, 0, 0, 0, 0, 5909, 1299, 3314, 1506, 0, 0, 0, 0, 0, 0, 9765, 22415, 431, 868, 232, 379, 0, 0, 0, 0, 31633, 126, 23216, 375, 5066, 7111]}, {"repo": "guard", "type": "nonelite", "title": "", "number of text": 1729, "text": "  In my app, I just upgraded to Guard 2. Lets say Guard is telling me there are 7 examples and 7 failures. Here's the spec file im working on :\n\n```\n    # == Schema Information\n    #\n    # Table name: awardunits\n    #\n    #  id              :integer          not null, primary key\n    #  nyaaid          :string(255)\n    #  name            :string(255)\n    #  address         :string(255)\n    #  district        :string(255)\n    #  contact         :string(255)\n    #  email           :string(255)\n    #  insthead        :string(255)\n    #  instheadcontact :string(255)\n    #  datestarted     :date\n    #  allowedmem      :integer\n    #  remarks         :text\n    #  disabled        :boolean\n    #  created_at      :datetime\n    #  updated_at      :datetime\n    #\n\n    require 'spec_helper'\n\n    describe Awardunit do\n        before { @awardunit = Awardunit.new(nyaaid: \"NYAA/N/WP0001\", name: \"Test Unit\", address: \"No. 50, Kalpitiya Road, Maradana\", district: \"Colombo\", contact: \"23232223\", email: \"abc@localhost.com\", insthead: \"Namal Kaluaarachchi\", instheadcontact: \"324234234\", datestarted: \"1/10/2013\", allowedmem: \"5\", remarks: \"\" ) }\n\n        it { should respond_to(:nyaaid) }\n        it { should respond_to(:name) }\n        it { should respond_to(:address) }\n        it { should respond_to(:district) }\n        it { should respond_to(:contact) }\n        it { should respond_to(:email) }\n        it { should respond_to(:insthead) }\n        it { should respond_to(:instheadcontact) }\n        it { should respond_to(:datestarted) }\n        it { should respond_to(:allowedmem) }\n        it { should respond_to(:remarks) }\n        it { should respond_to(:disabled) }\n\n        it { should be_valid }\n\n        describe \"when nyaaid is not present\" do\n            before { @awardunit.nyaaid = \" \" }\n            it { should_not be_valid }\n        end\n\n        describe \"when name is not present\" do\n            before { @awardunit.name = \" \" }\n            it { should_not be_valid }\n        end\n\n        describe \"when district is not present\" do\n            before { @awardunit.district = \" \" }\n            it { should_not be_valid }\n        end\n\n        describe \"when contact is not present\" do\n            before { @awardunit.contact = \" \" }\n            it { should_not be_valid }\n        end\n\n        describe \"when datestarted is not present\" do\n            before { @awardunit.datestarted = \" \" }\n            it { should_not be_valid }\n        end\n\n\n\n        describe \"when email format is invalid\" do\n            it \"should be invalid\" do\n                addresses = %w[user@foo,com user_at_foo.org example.user@foo. foo@bar_baz.com foo@bar+baz.com]\n                addresses.each do |invalid_address|\n                    @authentication.email = invalid_address\n                    expect(@authentication.save).to be_false\n                end\n            end\n        end\n\n        describe \"when email format is valid\" do\n            it \"should be valid\" do\n                addresses = %w[user@foo.COM A_US-ER@f.b.org frst.lst@foo.jp a+b@baz.cn]\n                addresses.each do |valid_address|\n                    @authentication.email = valid_address\n                    expect(@authentication.save).to be_true\n                end\n            end\n        end \n\n    end\n```\n\nIts not including the top tests into the 7 examples! One problem... The other one is... When I add a new describe block to a spec file and save, normally the count should go to 8 examples. But guard is still showing 7! If I go to a different spec file and save it, guard still say 7 examples and 7 failures according to the old file! How can I fix this issue?\n\nHere's my Guardfile :\n\n```\nrequire 'active_support/inflector' \nnotification :libnotify\n\nguard :rspec, notification: true, all_on_start: true, cmd: 'spring rspec'  do\nwatch(%r{^spec/.+_spec\\.rb$})\nwatch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/lib/#{m[1]}_spec.rb\" }\nwatch('spec/spec_helper.rb')  { \"spec\" }\n\n# Rails example\nwatch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\nwatch(%r{^app/(.*)(\\.erb|\\.haml|\\.slim)$})          { |m| \"spec/#{m[1]}#{m[2]}_spec.rb\" }\nwatch(%r{^app/controllers/(.+)_(controller)\\.rb$})  { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\nwatch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\nwatch('config/routes.rb')                           { \"spec/routing\" }\nwatch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n\n# Capybara features specs\nwatch(%r{^app/views/(.+)/.*\\.(erb|haml|slim)$})     { |m| \"spec/features/#{m[1]}_spec.rb\" }\n\n# Turnip features and steps\nwatch(%r{^spec/acceptance/(.+)\\.feature$})\nwatch(%r{^spec/acceptance/steps/(.+)_steps\\.rb$})   { |m| Dir[File.join(\"**/#{m[1]}.feature\")][0] || 'spec/acceptance' }\n\n\n  # Custom Rails Tutorial specs\nwatch(%r{^app/controllers/(.+)_(controller)\\.rb$})  do |m|\n  [\"spec/routing/#{m[1]}_routing_spec.rb\",\n   \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\",\n   \"spec/acceptance/#{m[1]}_spec.rb\",\n   (m[1][/_pages/] ? \"spec/requests/#{m[1]}_spec.rb\" : \n                     \"spec/requests/#{m[1].singularize}_pages_spec.rb\")]\nend\nwatch(%r{^app/views/(.+)/}) do |m|\n  (m[1][/_pages/] ? \"spec/requests/#{m[1]}_spec.rb\" : \n                     \"spec/requests/#{m[1].singularize}_pages_spec.rb\")\nend\nwatch(%r{^app/controllers/sessions_controller\\.rb$}) do |m|                                                                                                  \n  \"spec/requests/authentication_pages_spec.rb\"                                                                                                               \nend\nend\n```\n\nThe Gemfile.lock :\n\n```\nGEM\n  remote: https://rubygems.org/\n  specs:\n    actionmailer (4.0.0)\n      actionpack (= 4.0.0)\n      mail (~> 2.5.3)\n    actionpack (4.0.0)\n      activesupport (= 4.0.0)\n      builder (~> 3.1.0)\n      erubis (~> 2.7.0)\n      rack (~> 1.5.2)\n      rack-test (~> 0.6.2)\n    activemodel (4.0.0)\n      activesupport (= 4.0.0)\n      builder (~> 3.1.0)\n    activerecord (4.0.0)\n      activemodel (= 4.0.0)\n      activerecord-deprecated_finders (~> 1.0.2)\n      activesupport (= 4.0.0)\n      arel (~> 4.0.0)\n    activerecord-deprecated_finders (1.0.3)\n    activesupport (4.0.0)\n      i18n (~> 0.6, >= 0.6.4)\n      minitest (~> 4.2)\n      multi_json (~> 1.3)\n      thread_safe (~> 0.1)\n      tzinfo (~> 0.3.37)\n    annotate (2.5.0)\n      rake\n    arel (4.0.1)\n    atomic (1.1.14)\n    bcrypt-ruby (3.0.1)\n    better_errors (1.0.1)\n      coderay (>= 1.0.0)\n      erubis (>= 2.6.6)\n    binding_of_caller (0.7.2)\n      debug_inspector (>= 0.0.1)\n    bootstrap-sass (2.3.2.2)\n      sass (~> 3.2)\n    builder (3.1.4)\n    capybara (2.1.0)\n      mime-types (>= 1.16)\n      nokogiri (>= 1.3.3)\n      rack (>= 1.0.0)\n      rack-test (>= 0.5.4)\n      xpath (~> 2.0)\n    celluloid (0.15.2)\n      timers (~> 1.1.0)\n    childprocess (0.3.9)\n      ffi (~> 1.0, >= 1.0.11)\n    coderay (1.0.9)\n    coffee-rails (4.0.1)\n      coffee-script (>= 2.2.0)\n      railties (>= 4.0.0, < 5.0)\n    coffee-script (2.2.0)\n      coffee-script-source\n      execjs\n    coffee-script-source (1.6.3)\n    debug_inspector (0.0.2)\n    diff-lcs (1.2.4)\n    erubis (2.7.0)\n    execjs (2.0.2)\n    factory_girl (4.2.0)\n      activesupport (>= 3.0.0)\n    factory_girl_rails (4.2.1)\n      factory_girl (~> 4.2.0)\n      railties (>= 3.0.0)\n    faker (1.2.0)\n      i18n (~> 0.5)\n    ffi (1.9.0)\n    font-awesome-rails (4.0.0.0)\n      railties (>= 3.2, < 5.0)\n    formatador (0.2.4)\n    guard (2.1.1)\n      formatador (>= 0.2.4)\n      listen (~> 2.1)\n      lumberjack (~> 1.0)\n      pry (>= 0.9.12)\n      thor (>= 0.18.1)\n    guard-rspec (4.0.3)\n      guard (>= 2.1.1)\n      rspec (~> 2.14)\n    hike (1.2.3)\n    i18n (0.6.5)\n    jbuilder (1.5.2)\n      activesupport (>= 3.0.0)\n      multi_json (>= 1.2.0)\n    jquery-rails (3.0.4)\n      railties (>= 3.0, < 5.0)\n      thor (>= 0.14, < 2.0)\n    json (1.8.1)\n    libnotify (0.8.2)\n      ffi (>= 1.0.11)\n    listen (2.1.1)\n      celluloid (>= 0.15.2)\n      rb-fsevent (>= 0.9.3)\n      rb-inotify (>= 0.9)\n    lumberjack (1.0.4)\n    mail (2.5.4)\n      mime-types (~> 1.16)\n      treetop (~> 1.4.8)\n    method_source (0.8.2)\n    mime-types (1.25)\n    mini_portile (0.5.2)\n    minitest (4.7.5)\n    modernizr-rails (2.6.2.3)\n    multi_json (1.8.2)\n    nokogiri (1.6.0)\n      mini_portile (~> 0.5.0)\n    pg (0.17.0)\n    polyglot (0.3.3)\n    pry (0.9.12.2)\n      coderay (~> 1.0.5)\n      method_source (~> 0.8)\n      slop (~> 3.4)\n    rack (1.5.2)\n    rack-test (0.6.2)\n      rack (>= 1.0)\n    rails (4.0.0)\n      actionmailer (= 4.0.0)\n      actionpack (= 4.0.0)\n      activerecord (= 4.0.0)\n      activesupport (= 4.0.0)\n      bundler (>= 1.3.0, < 2.0)\n      railties (= 4.0.0)\n      sprockets-rails (~> 2.0.0)\n    rails_12factor (0.0.2)\n      rails_serve_static_assets\n      rails_stdout_logging\n    rails_serve_static_assets (0.0.1)\n    rails_stdout_logging (0.0.3)\n    railties (4.0.0)\n      actionpack (= 4.0.0)\n      activesupport (= 4.0.0)\n      rake (>= 0.8.7)\n      thor (>= 0.18.1, < 2.0)\n    rake (10.1.0)\n    rb-fsevent (0.9.3)\n    rb-inotify (0.9.2)\n      ffi (>= 0.5.0)\n    rdoc (3.12.2)\n      json (~> 1.4)\n    rspec (2.14.1)\n      rspec-core (~> 2.14.0)\n      rspec-expectations (~> 2.14.0)\n      rspec-mocks (~> 2.14.0)\n    rspec-core (2.14.6)\n    rspec-expectations (2.14.3)\n      diff-lcs (>= 1.1.3, < 2.0)\n    rspec-mocks (2.14.4)\n    rspec-rails (2.14.0)\n      actionpack (>= 3.0)\n      activesupport (>= 3.0)\n      railties (>= 3.0)\n      rspec-core (~> 2.14.0)\n      rspec-expectations (~> 2.14.0)\n      rspec-mocks (~> 2.14.0)\n    sass (3.2.12)\n    sass-rails (4.0.1)\n      railties (>= 4.0.0, < 5.0)\n      sass (>= 3.1.10)\n      sprockets-rails (~> 2.0.0)\n    sdoc (0.3.20)\n      json (>= 1.1.3)\n      rdoc (~> 3.10)\n    slop (3.4.6)\n    spring (0.0.11)\n    sprockets (2.10.0)\n      hike (~> 1.2)\n      multi_json (~> 1.0)\n      rack (~> 1.0)\n      tilt (~> 1.1, != 1.3.0)\n    sprockets-rails (2.0.1)\n      actionpack (>= 3.0)\n      activesupport (>= 3.0)\n      sprockets (~> 2.8)\n    thor (0.18.1)\n    thread_safe (0.1.3)\n      atomic\n    tilt (1.4.1)\n    timers (1.1.0)\n    treetop (1.4.15)\n      polyglot\n      polyglot (>= 0.3.1)\n    turbolinks (1.3.0)\n      coffee-rails\n    tzinfo (0.3.38)\n    uglifier (2.2.1)\n      execjs (>= 0.3.0)\n      multi_json (~> 1.0, >= 1.0.2)\n    xpath (2.0.0)\n      nokogiri (~> 1.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  annotate\n  bcrypt-ruby (~> 3.0.0)\n  better_errors\n  binding_of_caller\n  bootstrap-sass\n  capybara\n  childprocess\n  coffee-rails (~> 4.0.0)\n  factory_girl_rails\n  faker\n  font-awesome-rails\n  guard (~> 2.1.1)\n  guard-rspec (~> 4.0.3)\n  jbuilder (~> 1.2)\n  jquery-rails\n  libnotify\n  modernizr-rails\n  pg\n  rails (= 4.0.0)\n  rails_12factor\n  rb-inotify\n  rspec (~> 2.14.0)\n  rspec-rails\n  sass-rails (~> 4.0.0)\n  sdoc\n  spring\n  turbolinks\n  uglifier (>= 1.3.0)\n```\n @rymai Thanks :) `focus_on_failed: false` did the trick! :+1: \n @rymai it was before, but I changed it because it looks quite fundamental to me :)\n Yeah, we'll see if it creates more issues, that the first yet :)\n  I can't get Guard to work with files that include \"log\" in the name.\n\nHere is an example of a Guardfile I have tested with:\n\n``` ruby\nguard 'livereload' do\n  watch('log')\n  watch('catalog')\nend\n```\n\nRunning \"touch log\" or \"touch catalog\" doesn't trigger Guard. I see nothing in the output from Guard when I run it with the debug flag. I've tried this with guard-pow too, with the same result.\n `log` is in the [default ignore list](https://github.com/guard/guard#ignore), you may want to overwrite it in your `Guardfile` with something like:\n\n``` Ruby\nignore! /.git/ \n```\n @rymai `./log` folder is ignored by default, Listen 2.0.3 just assure that `./foo/bar/log` isn't.\n Thanks! It works fine after upgrading Guard.\n Mmm, so @rymai was right :)\n  Hi All,\n\n  I got some errors when running tests with guard and guard-gotest, below are those notifiers I am using.\n\n```\n22:38:11 - INFO - Guard is using Libnotify to send notifications.\n22:38:11 - INFO - Guard is using Emacs to send notifications.\n22:38:11 - INFO - Guard is using TerminalTitle to send notifications.\n22:38:11 - INFO - Guard::Gotest is running\n```\n\nMy error is Libnotify reported tests failed when got some errors, but emacs got success notification.\n\nWhen I look into guard, and try to prints the `opts` at `lib/guard/notifier.rb#177` (v2.2.1) and found the opts was changed after finish every notification:\n\nWhen send the first notification, the opts is `{:title=>\"Gotest results\", :type=>:failed, :priority=>2}` \nAfter finish the first notification, the opts changed to `{:priority=>2}`, (missed the failed type)\nAfter finish the emacs notification, the value became `{:priority=>2, :title=>\"Guard\", :type=>:success, :image=>\"/home/jinzhu/.gem/ruby/2.0.0/gems/guard-2.2.1/images/success.png\"}` (Got some unexpected values)\n\nAfter doing some research, I found every notifier's notify method inherit Guard::Notifier::Base#notify, but the code of Guard::Notifier::Base#notify looks strange for me:\n\n```\n      def notify(message, opts = {})\n        options.delete(:silent)\n        ***opts.replace(options.merge(opts))***\n        normalize_standard_options!(opts)\n      end\n```\n\nIt will update the original opts passed to it. I think it should only update the opts for this notifier but not global. So maybe pass a cloned options to each notifier should be a better idea.\n\nHere is a simple code base to explain what's the error, hope it make sense:\n\n```\ndef notify opts \n  opts.replace opts.merge(:age => 18)\nend\n\na = {:name => 'testing'}\nnotify(a)\nputs a #=> {:name=>\"testing\", :age=>18}\n\nb = {:name => 'testing'}\nnotify(b.dup)\nputs b #=> {:name=>\"testing\"}\n```\n [![Coverage Status](https://coveralls.io/builds/276967/badge)](https://coveralls.io/builds/276967)\n\nCoverage remained the same when pulling **0b2f76153764aaefa9da5cbb4a6b23d3c180d749 on jinzhu:fix_options_changed_after_pass_to_notifier** into **30d6486de1b0f76adad2502413b57c98124c3b43 on guard:master**.\n  I'm getting this error on every notification attempt.\n\nSeems to replicate Issue #500 \n- OSX 10.8\n- Guard version 2.2.0\n- ruby 2.0.0p0 (2013-02-24 revision 39474) [x86_64-darwin12.1.0]\n- gem 2.0.0\n- Bundler version 1.3.5\n\n`ERROR - Error sending notification with growl: undefined method `to_sym' for nil:NilClass`\n\nDoesn't seem to be isolated to any particular notifier. \n\nDebug Output:\n\n```\n11:45:29 - DEBUG - Command execution: growlnotify --version\n11:45:29 - INFO - Guard is using Growl to send notifications.\n11:45:29 - DEBUG - Command execution: hash stty\n11:45:29 - DEBUG - Guard starts all plugins\n11:45:29 - DEBUG - Hook :start_begin executed for Guard::Shell\n11:45:29 - DEBUG - Command execution: pdflatex -shell-escape interim_report.tex\n11:45:29 - DEBUG - Command execution: rm interim_report.log\n11:45:29 - DEBUG - Command execution: texcount -inc -nc -1 interim_report.tex\n11:41:37 - ERROR - Error sending notification with growl: undefined method `to_sym' for nil:NilClass\n11:41:37 - DEBUG - /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/notifiers/base.rb:209:in `_notification_type'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/notifiers/base.rb:173:in `normalize_standard_options!'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/notifiers/base.rb:60:in `notify'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/notifiers/growl.rb:91:in `notify'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/notifier.rb:177:in `block in notify'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/notifier.rb:173:in `each'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/notifier.rb:173:in `notify'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-shell-0.5.1/lib/guard/shell.rb:30:in `n'\n> [#1E5C5D25B607] /Users/robj/workspace/dissertation/interim-report/Guardfile:12:in `block (2 levels) in _instance_eval_guardfile'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/watcher.rb:124:in `call'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/watcher.rb:124:in `call_action'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/watcher.rb:55:in `block (2 levels) in match_files'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/watcher.rb:52:in `each'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/watcher.rb:52:in `block in match_files'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/watcher.rb:51:in `each'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/watcher.rb:51:in `inject'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/watcher.rb:51:in `match_files'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-shell-0.5.1/lib/guard/shell.rb:17:in `run_all'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-shell-0.5.1/lib/guard/shell.rb:12:in `start'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:67:in `block in run_supervised_task'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:65:in `catch'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:65:in `run_supervised_task'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:22:in `block (2 levels) in run'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:140:in `block (3 levels) in _scoped_plugins'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:138:in `each'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:138:in `block (2 levels) in _scoped_plugins'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:137:in `catch'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:137:in `block in _scoped_plugins'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:135:in `each'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:135:in `_scoped_plugins'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:21:in `block in run'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/lumberjack-1.0.4/lib/lumberjack.rb:31:in `unit_of_work'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/runner.rb:20:in `run'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/commander.rb:28:in `block in start'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/commander.rb:108:in `block in within_preserved_state'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/commander.rb:105:in `synchronize'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/commander.rb:105:in `within_preserved_state'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/commander.rb:26:in `start'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/lib/guard/cli.rb:96:in `start'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor/command.rb:27:in `run'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor/invocation.rb:120:in `invoke_command'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor.rb:363:in `dispatch'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/thor-0.18.1/lib/thor/base.rb:439:in `start'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/gems/guard-2.2.0/bin/guard:6:in `<top (required)>'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/bin/guard:23:in `load'\n> [#1E5C5D25B607] /Users/robj/.rbenv/versions/2.0.0-p0/lib/ruby/gems/2.0.0/bin/guard:23:in `<main>'\n-> Built interim_report.pdf (2 words)\n11:45:29 - DEBUG - Hook :start_end executed for Guard::Shell\n11:45:29 - INFO - Guard is now watching at '/Users/robj/workspace/dissertation/interim-report'\n11:45:29 - DEBUG - Command execution: stty -g 2>/dev/null\n11:45:29 - DEBUG - Start interactor\n```\n\nGemfile:\n\n```\nsource 'https://rubygems.org'\ngem 'guard'\ngem 'guard-shell'\ngem 'growl' \n```\n\nGuardfile\n\n```\nnotification :growl\n\nguard :shell, :all_on_start => true do\n  watch /^([^\\/]*)\\.tex/ do |m|\n    `pdflatex -shell-escape #{m[0]}`\n    `rm #{m[1]}.log`\n    count = `texcount -inc -nc -1 #{m[0]}`.split('+').first\n    msg = \"Built #{m[1]}.pdf (#{count} words)\"\n    n msg, 'LaTeX'\n    \"-> #{msg}\"\n  end\nend\n```\n\nAs I mentioned above, this isn't isolated to the growl notification and still happens when I remove  `notification :growl`  from the Guardfile.\n\nThanks!\n Great, seems to fix the issue. Thanks!\n Yep, it solves the problem for me too.\n  So I just updated from 1.8.3 to 2.1.1 (no other changes) and guard is not watching anything.. not even its own Guardfile... _confused_\n\nAnyone know what's going on?  Did I miss some obvious thing when upgrading?\n > Anyone know what's going on?\n\nNope, you didn't supply the information [we kindly asked for](https://github.com/guard/guard/blob/master/CONTRIBUTING.md#file-an-issue) when you filed the issue.\n\n> Did I miss some obvious thing when upgrading?\n\nNo, as user there is no change needed from your side. A complete list of changes and a guide for plugin authors to upgrade is available in [the wiki](https://github.com/guard/guard/wiki/Upgrading-to-Guard-2.0).\n\nYou may also want to check out [the issues on the Listen project](https://github.com/guard/listen/issues?state=open), since Listen takes care of watching for changes and notifies Guard.\n Sorry, I wasn't aware of that part of your docs.  Here's some more info:\n\nGuardfile:\n\n``` ruby\n#!/usr/bin/env ruby\n\nguard :rspec do\n  watch(%r{^app/(.+)\\.rb$})                           { |m| puts m; \"spec/#{m[1]}_spec.rb\" } # Here i put a puts just to see if it would watch things... and it does, but it isn't executing rspec.\nend\n```\n\nGemfile:\n\n``` ruby\nsource 'http://rubygems.org'\nruby '2.0.0'\n\ngem 'rails', '~> 3.2.0'\n\ngem 'american_date'\ngem 'awesome_print'\ngem 'aws-sdk' # For storing paperclip uploads on Amazon S3\ngem 'cancan'\ngem 'chronic'\ngem 'devise', '~> 2'\ngem 'easy_roles', github: 'wulftone/easy_roles'\ngem 'eco'\ngem 'faker'\ngem 'jquery-rails'\ngem 'miniskirt'\ngem 'paperclip'\ngem 'puma'\ngem 'rabl'\ngem 'redcarpet'\ngem 'sprockets-derailleur'\ngem 'validates_timeliness'\ngem 'multi_json', '~> 1.6.0'\n\ngroup :production do\n  gem 'pg'\n  gem 'rails_12factor'\nend\n\ngroup :assets do\n  gem 'coffee-rails', '~> 3.2.0'\n  gem 'compass-rails'\n  gem 'sass-rails', '~> 3.2.0'\n  gem 'uglifier'\n  gem 'slim'\n  gem 'skim'\n  gem 'turbo-sprockets-rails3'\nend\n\ngroup :development do\n  # gem 'railroady' # generates diagrams of our DB schema\n  gem 'letter_opener'\n  # gem 'guard', '~> 1'\n  gem 'guard-livereload'\n  gem 'guard-rspec'\n  gem 'spring'\n  gem 'yard'\nend\n\ngroup :test, :development do\n  gem 'guard-jasmine'\n  gem 'jasminerice'\n  gem 'parallel_tests'\n  gem 'perftools.rb', github: 'tmm1/perftools.rb'\n  gem 'pry'\n  gem 'pry-rails'\n  gem 'pry-debugger'\n  gem 'rack-perftools_profiler', require: 'rack/perftools_profiler'\n  gem 'rspec-rails'\n  gem 'sqlite3'\n  gem 'tapp'\n  gem 'thin-rails'\nend\n\ngroup :test do\n  gem 'simplecov', :require => false\n\n  # Capybara stuff\n  gem 'capybara'\n  gem 'capybara-webkit'\n  gem 'database_cleaner', '< 1.1'\n  gem 'poltergeist' # phantomjs driver\n  gem 'selenium-webdriver', '~> 2.35.0'\n  # gem 'rubyzip', '< 1.0' # because of selenium\n\n  # Rspec stuff\n  # gem 'rspec-steps' # Probably doesn't work anymore, but was an awesome gem\n  gem 'shoulda'\n  gem 'valid_attribute'\nend\n```\n\nTest run:\n\n```\n$ bundle exec guard --debug\n12:23:11 - DEBUG - Command execution: which notify-send\n12:23:11 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n12:23:11 - INFO - Guard is using NotifySend to send notifications.\n12:23:11 - INFO - Guard is using TerminalTitle to send notifications.\n12:23:11 - DEBUG - Command execution: hash stty\n12:23:11 - DEBUG - Guard starts all plugins\n12:23:11 - DEBUG - Hook :start_begin executed for Guard::RSpec\n12:23:11 - INFO - Guard::RSpec is running\n12:23:11 - DEBUG - Hook :start_end executed for Guard::RSpec\n12:23:11 - INFO - Guard is now watching at '/home/trevor/fruhla/homefront'\n12:23:11 - DEBUG - Start interactor\n12:23:15 - DEBUG - Stop interactor\napp/services/yc/consequence_services.rb\nservices/yc/consequence_services\n12:23:15 - DEBUG - Trying to run Guard::RSpec#run_on_additions with [\"spec/services/yc/consequence_services_spec.rb\"]\n12:23:15 - DEBUG - Trying to run Guard::RSpec#run_on_changes with [\"spec/services/yc/consequence_services_spec.rb\"]\n12:23:15 - DEBUG - Trying to run Guard::RSpec#run_on_change with [\"spec/services/yc/consequence_services_spec.rb\"]\n12:23:15 - DEBUG - Start interactor\n[1] guard(main)> \n```\n\nOS: Debian wheezy\nRuby: ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-linux]\nRubygems: 2.0.3\nBundler: 1.3.5\nContext: Large Ruby on Rails project\n\nI hope that's enough to at least start...  So it is watching, but not running rspec.  It also does not reload the Guardfile when I save it:\n\n```\n$ bundle exec guard --debug\n12:26:50 - DEBUG - Command execution: which notify-send\n12:26:50 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n12:26:50 - INFO - Guard is using NotifySend to send notifications.\n12:26:50 - INFO - Guard is using TerminalTitle to send notifications.\n12:26:50 - DEBUG - Command execution: hash stty\n12:26:50 - DEBUG - Guard starts all plugins\n12:26:50 - DEBUG - Hook :start_begin executed for Guard::RSpec\n12:26:50 - INFO - Guard::RSpec is running\n12:26:50 - DEBUG - Hook :start_end executed for Guard::RSpec\n12:26:50 - INFO - Guard is now watching at '/home/trevor/fruhla/homefront'\n12:26:50 - DEBUG - Start interactor\n12:26:52 - DEBUG - Stop interactor\n12:26:52 - DEBUG - Start interactor\n```\n\nThanks for your help!\n Confirming this on Ubuntu 12.04, though it looks more like a listen issue, downgrading to latest 1.x version of listen (1.3.1 in my case) worked.\n\nSame ruby 2.0.0.\n\nWhat I discovered is that after a while of being stalled, guard finally ran rspec after what raised an exception:\n\n``` bash\nRandomized with seed 37139\n\nError: can't modify string; temporarily locked\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:624:in `readline'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:624:in `block in readline'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:564:in `handle_read_errors'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:609:in `readline'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:384:in `retrieve_line'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:301:in `block in r'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:298:in `loop'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:298:in `r'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:276:in `re'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:254:in `rep'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:234:in `block (3 levels) in repl'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:232:in `loop'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:232:in `block (2 levels) in repl'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:231:in `catch'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:231:in `block in repl'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:230:in `catch'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_instance.rb:230:in `repl'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/pry-0.9.12.2/lib/pry/pry_class.rb:170:in `start'\n~/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/guard-2.1.1/lib/guard/interactor.rb:133:in `block in start'\n```\n\nHope this helps.\n I have the same issue on FreeBSD 9.1, try to launch guard via `bundle exec guard -p`, it works for me.\n The same problem on Kubuntu 13.10, `-p` flag fixes the problem.\n  I just got this error with Guard 2 (Guard 1.8 works fine):\n\n```\n10:58:48 - ERROR - Error sending notification with tmux: undefined method `to_sym' for nil:NilClass\n10:58:48 - ERROR - Error sending notification with terminal_title: undefined method `to_sym' for nil:NilClass\n```\n\nVersions:\n- Guard: Guard version 2.1.0\n- Tmux: tmux 1.6\n- Ruby: ruby 1.9.3p385 (2013-02-06 revision 39114) [x86_64-darwin12.2.0]\n- OS: Mac OS X 10.8.8\n\nDebug-Output:\n\n```\n$ bundle exec guard --debug  \n11:09:20 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n11:09:20 - INFO - Guard is using Tmux to send notifications.\n11:09:20 - INFO - Guard is using TerminalTitle to send notifications.\n11:09:20 - DEBUG - Command execution: hash stty\n11:09:20 - DEBUG - Guard starts all plugins\n11:09:20 - DEBUG - Hook :start_begin executed for Guard::Cucumber\n11:09:20 - INFO - Running all features\n11:09:20 - DEBUG - Command execution: bundle exec cucumber --no-profile --color --format progress --strict --require /Users/bjoern/code/wrapp/vendor/ruby/1.9.1/gems/guard-cucumber-1.4.0/lib/guard/cucumber/notification_formatter.rb --format Guard::Cucumber::NotificationFormatter --out /dev/null --require features features \nDisabling profiles...\n\n\n0 scenarios\n0 steps\n0m0.000s\n11:09:23 - ERROR - Error sending notification with tmux: undefined method `to_sym' for nil:NilClass\n11:09:23 - ERROR - Error sending notification with terminal_title: undefined method `to_sym' for nil:NilClass\n11:09:23 - DEBUG - Hook :start_end executed for Guard::Cucumber\n11:09:23 - DEBUG - Hook :start_begin executed for Guard::RSpec\n11:09:23 - INFO - Guard::RSpec is running\n11:09:23 - DEBUG - Hook :start_end executed for Guard::RSpec\n11:09:23 - INFO - Guard is now watching at '/Users/bjoern/code/wrapp'\n11:09:23 - DEBUG - Command execution: stty -g 2>/dev/null\n11:09:23 - DEBUG - Start interactor\n[1] guard(main)> \n```\n Tmux works fine for me. Can you show your `Guardfile` and `.guard.rb` if present?\n @rymai I ran you backtrace patch against the given project but it couldn't reproduce the bug (same with guard 2.1 via RubyGems). Maybe a tmux hiccup? Anyway, sorry for the noise...\n  I've updated guard from 2.0.3 to 2.0.4 and now I'm getting error after running tests in guard console:\n\n```\n11:24:59 - ERROR - Error sending notification with growl: undefined method `silent=' for #<Growl::Base:0x007fd3a939cba8>\n```\n\nI use growl gem version 1.0.3.\n Ok, with master it works great. Thanks for your work!\n  With Guard 2.0, `ignore` in Guardfile does not work with regular expressions for relative paths.\n\nFor example, with the following Guardfile:\n\n``` ruby\nguard :rspec do\n  ignore(%r{^spec/})\n  watch(%r{^spec/.+_spec\\.rb$})\nend\n```\n\nall files under the `spec` directory are _not_ ignored. (Though `watch` [works with relative paths](https://github.com/guard/guard/blob/v2.0.3/lib/guard/setuper.rb#L174-L185).)\n\nI think this is because Guard 2.0 delegates silencing logic to Listen, but Listen tries to match patterns to absolute paths. (If you add `p path.to_s` to `Listen::Silencer#silenced?`, you'll see absolute paths.)\n- https://github.com/guard/guard/blob/v2.0.3/lib/guard/dsl.rb#L226\n- https://github.com/guard/listen/blob/v2.0.3/lib/listen/silencer.rb#L19\n\nOnce I thought this was an intentional change, but I found [the example in README](https://github.com/guard/guard/tree/v2.0.3#ignore) still uses `%r{^ignored/path/}` so maybe this is an issue.\n\nThen, I've tried to fix this, but I think it cannot be done only by some minor fixes in Guard. Probably it needs design consideration between Guard and Listen.\n\nAs far as I can figure out, there are 2 options:\n1. Implement silencing logic in Guard. (Do not delegate to Listen)\n2. Add an option that allows to specify patterns for relative path to `Listen::Listener#ignore` and `Listen::Silencer#initialize`.\n\nWhat do you think?\n\n**Update: Fixed the wrong pattern. (It was `ignore(%r{^spec/$})`, though the issue still exists.)**\n\n---\n\nGems:\n- `guard` 2.0.3\n- `listen` 2.0.3\n- `guard-rspec` 3.1.0\n\nDebug log: https://gist.github.com/yujinakayama/6905427\nReproducible example project: https://github.com/yujinakayama/guard-ignore-issue\nEnvironment:\n\n``` bash\n$ uname -mprsv\nDarwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64 i386\n$ ruby --version\nruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.0]\n$ gem --version\n2.0.3\n$ bundle --version\nBundler version 1.3.5\n```\n Yeah, very good point. I'll think about the best way to handle it. Thanks for that great issue report!\n Ok, using absolute path in Listen seems quite essential to me so I wouldn't change it. What I propose it do detect if `ignore` regex on Guard side include `^` with a relative path and inject the missing path part inside the regex before delegating to Listen.\n\nSounds good to you?\n I think tweaking regexp is quite error-prone and should be avoided. It's not just a simple string operation.\n\nThese are just a few examples of things you need to consider:\n\n``` ruby\n/(foo|^bar)baz/\n/foo[^A-Z]bar/\n/foo\\^bar/\n/\\Afoo/\n```\n\nAnd probably implementing it takes too long and you won't get good results.\n\nRather, I'd like to highly recommend converting absolute path to relative path (though it's up to you where you implement it in, Guard or Listen). It's much more robust way.\n Good point, I agree that converting absolute path to relative path would be more easier with `Pathname#relative_path_from`. I think upgrade Listen logic will be simpler to do. \nWill have a look at it over the week-end. Thanks!\n :+1: Thank you too!\n Fixed in https://github.com/guard/listen/commit/3677dab01247951bdd88f1d1e8c4d0b32f331e6b, Listen 2.1.0 released. Feel free to reopen it if it doesn't work for you!\n It's working well with Listen 2.1.0. Thanks!\n @yujinakayama great!\n  I have problem with rails4 + ruby2.0 + guard 2.0.3 + guard-rspec 3.1.0, the problem is good described at http://stackoverflow.com/questions/19271319/guard-runs-specs-three-times\n\nbtw, i can't reproduce it on MacOS\n i can confirm that editing files with vim, gedit on linux results as reported on stackoverflow.\nwhen changing files e.g. in eclipse this behavior does not occur.\n Yeah replacing `replace run_on_changes` with `run_on_modifications` is a good idea, I'll change it in `4.0.0` release of Guard::RSpec (ready soon).\n\nThere's no way of changing how vim saves files?\n  Had a minor hiccup with Guard the other day.\n\nIt seems as if Guard ignores the entire folder if the folder name contains any of the default ignored patterns, like \".git\" or \".hg\".\n\nIn this case i was creating a github repo for github pages called \"marcuslilja.github.io\". Guard runs as usual but it isn't watching any files for changes. Manually triggering a refresh works fine.\n\nGuard doesn't seem to care if the parent folder name is \".git\" or \"abc.git.whatever\". Simply renaming the parent folder to anything that doesn't contain \".git\" solves the issue. However, it is still a bit annoying.\n\nCurrently I'm running Guard on Mac OS X 10.8.5. Ruby is installed with RVM and running version `1.9.3p429 (2013-05-15 revision 40747) [x86_64-darwin12.4.0]`\n## Gemfile\n\n```\nsource 'https://rubygems.org'\n\ngem 'guard'\ngem 'guard-compass'\n```\n## Guardfile\n\n```\nguard 'compass', :configuration_file => 'Compass.rb'\n```\n## Compass.rb\n\n```\nhttp_path = \"/\"\nsass_dir = \"sass\"\ncss_dir = \"stylesheets\"\nhttp_stylesheets_path = \"stylesheets\"\nimages_dir = \"images\"\nhttp_images_path = \"images\"\nfonts_path = \"fonts\"\nhttp_fonts_dir = \"fonts\"\noutput_style = :expanded\nrelative_assets = false\nline_comments = true\n```\n## Gems included by the bundle\n\n```\n* bundler (1.3.5)\n* celluloid (0.15.2)\n* chunky_png (1.2.8)\n* coderay (1.0.9)\n* compass (0.12.2)\n* ffi (1.9.0)\n* formatador (0.2.4)\n* fssm (0.2.10)\n* guard (2.0.3)\n* guard-compass (1.0.0)\n* listen (2.0.1)\n* lumberjack (1.0.4)\n* method_source (0.8.2)\n* pry (0.9.12.2)\n* rb-fsevent (0.9.3)\n* rb-inotify (0.9.2)\n* sass (3.2.12)\n* slop (3.4.6)\n* thor (0.18.1)\n* timers (1.1.0)\n```\n## Guard run with --debug\n\n```\n11:34:05 - DEBUG - Command execution: which notify-send\n11:34:05 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n11:34:05 - INFO - Guard is using NotifySend to send notifications.\n11:34:05 - INFO - Guard is using TerminalTitle to send notifications.\n11:34:05 - DEBUG - Command execution: hash stty\n11:34:05 - DEBUG - Guard starts all plugins\n11:34:05 - DEBUG - Hook :start_begin executed for #<Guard::Compass @name=compass @group=#<Guard::Group @name=default @options={}> @watchers=[] @callbacks=[] @options={:configuration_file=>\"Compass.rb\"}>\n11:34:05 - INFO - Guard::Compass is waiting to compile your stylesheets.\n11:34:05 - DEBUG - Hook :start_end executed for #<Guard::Compass @name=compass @group=#<Guard::Group @name=default @options={}> @watchers=[#<Guard::Watcher:0x007fb36d80e698 @action=nil, @pattern=/^sass\\/.*/>, #<Guard::Watcher:0x007fb36d80c898 @action=nil, @pattern=/^Compass.rb$/>] @callbacks=[] @options={:configuration_file=>\"/Users/marcuslilja/Widgets/test.hg/Compass.rb\"}>\n11:34:05 - INFO - Guard is now watching at '/Users/marcuslilja/Widgets/test.hg'\n11:34:05 - DEBUG - Command execution: stty -g 2>/dev/null\n11:34:05 - DEBUG - Start interactor\n[1] guard(main)> a\n11:34:15 - DEBUG - Command execution: stty gfmt1:cflag=4b00:iflag=6b02:lflag=200005cb:oflag=3:discard=f:dsusp=19:eof=4:eol=ff:eol2=ff:erase=7f:intr=3:kill=15:lnext=16:min=1:quit=1c:reprint=12:start=11:status=14:stop=13:susp=1a:time=0:werase=17:ispeed=9600:ospeed=9600 2>/dev/null \n11:34:15 - INFO - Run all all\n11:34:15 - DEBUG - Hook :run_all_begin executed for #<Guard::Compass @name=compass @group=#<Guard::Group @name=default @options={}> @watchers=[#<Guard::Watcher:0x007fb36d80e698 @action=nil, @pattern=/^sass\\/.*/>, #<Guard::Watcher:0x007fb36d80c898 @action=nil, @pattern=/^Compass.rb$/>] @callbacks=[] @options={:configuration_file=>\"/Users/marcuslilja/Widgets/test.hg/Compass.rb\"}>\noverwrite stylesheets/main.css \n11:34:16 - DEBUG - Hook :run_all_end executed for #<Guard::Compass @name=compass @group=#<Guard::Group @name=default @options={}> @watchers=[#<Guard::Watcher:0x007fb36d80e698 @action=nil, @pattern=/^sass\\/.*/>, #<Guard::Watcher:0x007fb36d80c898 @action=nil, @pattern=/^Compass.rb$/>] @callbacks=[] @options {:configuration_file=>\"/Users/marcuslilja/Widgets/test.hg/Compass.rb\"}>\n11:34:16 - DEBUG - Command execution: stty -g 2>/dev/null\n11:34:16 - DEBUG - Command execution: stty echo 2>/dev/null \n```\n Should be fixed in Listen 2.0.2, thanks!\n  ```\nWARN: Unresolved specs during Gem::Specification.reset:\n      celluloid (>= 0.15.1)\n      rb-inotify (>= 0.9)\nWARN: Clearing out unresolved specs.\nPlease report a bug if this causes problems.\nC:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifiers/notifysend.r\nb:86:in ``': No such file or directory - which notify-send (Errno::ENOENT)\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifiers\n/notifysend.rb:86:in `_notifysend_binary_available?'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifiers\n/notifysend.rb:92:in `_register!'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifiers\n/notifysend.rb:29:in `available?'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:153:in `add_notifier'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:207:in `block (2 levels) in _auto_detect_notification'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:207:in `each'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:207:in `find'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:207:in `block in _auto_detect_notification'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:206:in `each'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:206:in `_auto_detect_notification'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:94:in `turn_on'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/setuper.r\nb:235:in `_setup_notifier'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/setuper.r\nb:66:in `setup'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/commander\n.rb:24:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/cli.rb:96\n:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.18.1/lib/thor/command.rb\n:27:in `run'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.18.1/lib/thor/invocation\n.rb:120:in `invoke_command'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.18.1/lib/thor.rb:363:in\n`dispatch'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.18.1/lib/thor/base.rb:43\n9:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/bin/guard:6:in `<to\np (required)>'\n        from C:/Ruby193/bin/guard:23:in `load'\n        from C:/Ruby193/bin/guard:23:in `<main>'\n```\n\n------ version numbers\n\n```\nruby 1.9.3p448 (2013-06-27) [i386-mingw32\ngem 2.1.5\nguard 2.0.3\n```\n\nfirst error line from dump (86):\n\n```\n85 def self._notifysend_binary_available?\n86        !`which notify-send`.empty?\n87      end\n<a href=\"https://github.com/guard/guard/blob/master/lib/guard/notifiers/notifysend.rb#L86\" title=\"error line\">Error Line</a>\n```\n\nI hope this helps to solve the bug\n\nGuard was running properly until i updated to this new version\n if i run compass to compile stylesheets it runs properly but with guard it doesnt.\ni am running guard stand alone\nguard start\nThanks in advance for any help\n --debug dump:\n\n```\nprompt>guard start --debug\n\nWARN: Unresolved specs during Gem::Specification.reset:\n      celluloid (>= 0.15.1)\n      rb-inotify (>= 0.9)\nWARN: Clearing out unresolved specs.\nPlease report a bug if this causes problems.\n02:08:51 - DEBUG - Command execution: which notify-send\nC:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/setuper.rb:254:in ``':\n No such file or directory - which notify-send (Errno::ENOENT)\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/setuper.r\nb:254:in `block in _debug_command_execution'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifiers\n/notifysend.rb:86:in `_notifysend_binary_available?'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifiers\n/notifysend.rb:92:in `_register!'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifiers\n/notifysend.rb:29:in `available?'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:153:in `add_notifier'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:207:in `block (2 levels) in _auto_detect_notification'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:207:in `each'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:207:in `find'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:207:in `block in _auto_detect_notification'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:206:in `each'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:206:in `_auto_detect_notification'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifier.\nrb:94:in `turn_on'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/setuper.r\nb:235:in `_setup_notifier'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/setuper.r\nb:66:in `setup'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/commander\n.rb:24:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/cli.rb:96\n:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.18.1/lib/thor/command.rb\n:27:in `run'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.18.1/lib/thor/invocation\n.rb:120:in `invoke_command'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.18.1/lib/thor.rb:363:in\n`dispatch'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.18.1/lib/thor/base.rb:43\n9:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/bin/guard:6:in `<to\np (required)>'\n        from C:/Ruby193/bin/guard:23:in `load'\n        from C:/Ruby193/bin/guard:23:in `<main>'\n```\n\nI am at win 7 OS\n Edit from @rymai: I've formatted your code / terminal outputs.\n\nit seems that all my explanation suddenly disappeared i generated a gemfile with bundle init\nto the gem file i changed the guard source as specified in bundler documentation, it throws me an error, i forced (downloaded previously a copy of the repository from github) with bundle config local.guard my-git-repo-copy-dir and throws me the same error\nso finally i cant access the repo\n\n-------------------Error from local repo\n\n```\nUnfortunately, a fatal error has occurred. Please see the Bundler\ntroubleshooting documentation at http://bit.ly/bundler-issues. Thanks!\nC:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/source/git/git_pro\nxy.rb:88:in ``': No such file or directory - git branch (Errno::ENOENT)\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git/git_proxy.rb:88:in `git'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git/git_proxy.rb:26:in `block in branch'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git/git_proxy.rb:135:in `block in allowed_in_path'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git/git_proxy.rb:130:in `chdir'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git/git_proxy.rb:130:in `in_path'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git/git_proxy.rb:135:in `allowed_in_path'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git/git_proxy.rb:25:in `branch'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git.rb:121:in `local_override!'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:407:in `block in converge_locals'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:402:in `each'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:402:in `map'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:402:in `converge_locals'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:79:in `initialize'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/dsl.r\nb:154:in `new'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/dsl.r\nb:154:in `to_definition'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/dsl.r\nb:10:in `evaluate'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:19:in `build'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler.rb:14\n8:in `definition'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/cli.r\nb:108:in `check'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/vendo\nr/thor/task.rb:27:in `run'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/vendo\nr/thor/invocation.rb:120:in `invoke_task'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/vendo\nr/thor.rb:344:in `dispatch'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/vendo\nr/thor/base.rb:434:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/bin/bundle:20:in\n`block in <top (required)>'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/frien\ndly_errors.rb:3:in `with_friendly_errors'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/bin/bundle:20:in\n`<top (required)>'\n        from C:/Ruby193/bin/bundle:23:in `load'\n        from C:/Ruby193/bin/bundle:23:in `<main>'\n```\n\n-----------------------------------gemfile \n\n``` ruby\n# A sample Gemfile\nsource \"https://rubygems.org\"\n\n# gem \"rails\"\ngem \"guard\", github: \"guard\"\ngem \"guard-compass\"\ngem \"guard-livereload\"\ngem \"compass-960-plugin\"\n```\n\n-----------------------------------gemfile\n\n------------------------gemfile used with config bundle config local.guard my-git-repo-copy-dir,needed to set a branch\n\n``` ruby\n# A sample Gemfile\nsource \"https://rubygems.org\"\n\n# gem \"rails\"\n\ngem \"guard\", :github => \"guard/guard\", :branch => \"master\"\ngem \"guard-compass\"\ngem \"guard-livereload\"\ngem \"compass-960-plugin\"\n```\n\n-----------------------------------gemfile\n\ni used bundle check for each change on gemfile and later `bundle install`\n New Bundle Configured to just get guard.\n------------------used gemfile\n\n``` ruby\n# A sample Gemfile\nsource \"https://rubygems.org\"\n\n# gem \"rails\"\n\ngem \"guard\", github: \"guard\"\n\n```\n\n------------------used gemfile\nnew error:\n\n```\nFetching git://github.com/guard/guard.git\nUnfortunately, a fatal error has occurred. Please see the Bundler\ntroubleshooting documentation at http://bit.ly/bundler-issues. Thanks!\nC:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/source/git/git_pro\nxy.rb:88:in ``': No such file or directory - git clone \"git://github.com/guard/g\nuard.git\" \"C:/Ruby193/lib/ruby/gems/1.9.1/cache/bundler/git/guard-9a8d3b34091f50\n8488efd58df82578635251513b\" --bare --no-hardlinks (Errno::ENOENT)\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git/git_proxy.rb:88:in `git'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git/git_proxy.rb:49:in `checkout'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/sourc\ne/git.rb:144:in `specs'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:493:in `block in converge_locked_specs'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:482:in `each'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:482:in `converge_locked_specs'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:167:in `resolve'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:114:in `specs'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/defin\nition.rb:109:in `resolve_remotely!'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/insta\nller.rb:83:in `run'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/insta\nller.rb:14:in `install'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/cli.r\nb:247:in `install'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/vendo\nr/thor/task.rb:27:in `run'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/vendo\nr/thor/invocation.rb:120:in `invoke_task'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/vendo\nr/thor.rb:344:in `dispatch'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/vendo\nr/thor/base.rb:434:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/bin/bundle:20:in\n`block in <top (required)>'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/lib/bundler/frien\ndly_errors.rb:3:in `with_friendly_errors'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/bundler-1.3.5/bin/bundle:20:in\n`<top (required)>'\n        from C:/Ruby193/bin/bundle:23:in `load'\n        from C:/Ruby193/bin/bundle:23:in `<main>'\n\n\n```\n\ni have tried a few ways to try to get from git, even the one you described but with no luck, i attach the procedure (gemfile+terminal output) previously, tomorrow i will do the troubleshooting of bundler.\n\nThanks for your help\n sorry i am new at github\n Followed troubleshooting and it seems its the same error\nas in comment https://github.com/guard/guard/issues/493#issuecomment-25940755\n\n```\nThe same error compared with diff tool\n\n```\n\nprocedure of troubleshooting done 3 times the same error happens\n\nSalutations\n Sorry for this strange question.... once you install git for ruby (gem install git) does anyone need to do some thing specific to get git working properly or its used system's credentials and info from github clients like github for windows???\nmy github for windows runs properly but it seems that it doesnt want to work ruby version.\nis there another way to try the code from remote repository (guard/guard)????  i can get it via github for windows... like manual install???\n I'm having the same issue. Doesn't this crash on `which` binary missing on Windows?\n\nEDIT: No more crashing on this point after returning `false` before the broken line \n`C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-2.0.3/lib/guard/notifiers/notifysend.r\nb:86`.\n @rymai Yes, it is working now.\n  I like how `guard` automatically reloads `Guardfile` when a user edits it. However, other files like `guard -G Guardfile-lint` are not automatically reloaded on change. Could we please fix this?\n The guardfiles I'm using:\n- https://github.com/mcandre/dotfiles/blob/master/Guardfile\n- https://github.com/mcandre/dotfiles/blob/master/Guardfile-lint\n\nTrace:\n\n```\n$ guard -G Guardfile\n$ guard\n12:32:28 - INFO - Guard is using TerminalTitle to send notifications.\n12:32:28 - INFO - Guard is now watching at '/Users/apennebaker/Desktop/src/sample'\n(edit Guardfile)\n12:32:40 - INFO - Guardfile has been re-evaluated.\n> exit\n$ guard -G Guardfile-lint\n12:32:48 - INFO - Guard is using TerminalTitle to send notifications.\n12:32:48 - INFO - Guard is now watching at '/Users/apennebaker/Desktop/src/sample'\n(edit Guardfile-lint)\n>\n```\n\nSystem:\n\n```\n$ specs guard ruby os\nSpecs:\n\nspecs 0.4\nhttps://github.com/mcandre/specs#readme\n\nguard --version\nGuard version 1.8.2\n\nbundle --version\nBundler version 1.3.5\n\ngem --version\n2.0.6\n\nruby --version\nruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.0]\n\nsystem_profiler SPSoftwareDataType | grep 'System Version'\n      System Version: OS X 10.8.5 (12F37)\n```\n I `bundle update`d to guard v2.0.3, same problem.\n @rymai Wow, that was quick!\n\nYes, confirmed working with `bundle && bundle exec guard -G Guardfile-lint`, `touch Guardfile-lint`.\n  I was looking to customize the tmux notifier, but as best I can tell, it's been ignoring options since around the notifier refactor: 8d350744acd6e66be2744d5c57f93ed55b50019e.\n\nThis should fix the option setting, along with adding an option to disable the color highlighting (since, in my case, I only want to display a message and not permanently change the background).\n [![Coverage Status](https://coveralls.io/builds/246314/badge)](https://coveralls.io/builds/246314)\n\nCoverage decreased (-0.07%) when pulling **53d91e0ed944ac5c4942170850190187b2e14989 on jamesdabbs:tmux-notifier** into **8d996cd44aca633c14a8f260a13f262cee87f5e6 on guard:master**.\n  ```\n% bundle exec guard\n13:39:36 - ERROR - Invalid Guardfile, original error is:\n> [#] uninitialized constant Guard::Guard\n/Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/lib/guard/plugin_util.rb:57:in `initialize_plugin': uninitialized constant Guard::Guard (NameError)\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/lib/guard.rb:167:in `add_plugin'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/lib/guard/dsl.rb:166:in `guard'\n    from /Users/superbrothers/dev/guard-test/Guardfile:12:in `_instance_eval_guardfile'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/lib/guard/guardfile/evaluator.rb:128:in `instance_eval'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/lib/guard/guardfile/evaluator.rb:128:in `_instance_eval_guardfile'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/lib/guard/guardfile/evaluator.rb:35:in `evaluate_guardfile'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/lib/guard/setuper.rb:144:in `evaluate_guardfile'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/lib/guard/setuper.rb:62:in `setup'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/lib/guard/commander.rb:24:in `start'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/lib/guard/cli.rb:96:in `start'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/thor-0.18.1/lib/thor/command.rb:27:in `run'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/thor-0.18.1/lib/thor/invocation.rb:120:in `invoke_command'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/thor-0.18.1/lib/thor.rb:363:in `dispatch'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/thor-0.18.1/lib/thor/base.rb:439:in `start'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/gems/guard-2.0.0/bin/guard:6:in `<top (required)>'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/bin/guard:23:in `load'\n    from /Users/superbrothers/dev/guard-test/vendor/bundle/ruby/2.0.0/bin/guard:23:in `<main>'\n```\n\nhttps://gist.github.com/superbrothers/6849602\n Guard::Guard is not required for the Guard plugin compatible with Guard 2.0.\nSo Guard::Guard is uninitialized, right?\n\n``` ruby\n    def initialize_plugin(options)\n      if plugin_class.superclass.to_s == \"Guard::Guard\"\n        plugin_class.new(options.delete(:watchers), options)\n      else\n        plugin_class.new(options)\n      end\n    end\n```\n Thank you for the fix quickly! \n  Via the same mechanism as fail / pass (ie. emacsclient eval lisp) it would be good if the modeline was changed to a neutral color when tests begin to be re-run. \n\nIt saves having to check if something critical has killed / paused guard, or if the change didn't re-run specs are expected.\n\nI'll have  a crack at adding this myself this week.\n I'd like to have the red/green Emacs mode-line reset (or set to something neutral would be easier to do, to dark/mid grey perhaps.) when Guard begins a test run.  I've found it hung on occasion, and I'd like to know without having to switch back to the Terminal to know that something went south.\n  Each time `emacsclient` is called to do a modeline color change, it's leaving the process open until guard quits.\n\nI will try and have a look at fixing this myself, but I'd appreciate any input/info from anyone. \n\nThanks.\n Have a look at the [emacs notifier](https://github.com/guard/guard/blob/master/lib/guard/notifiers/emacs.rb), which basically [sends some elisp to evaluate to the emacs client](https://github.com/guard/guard/blob/master/lib/guard/notifiers/emacs.rb#L67).\n @netzpirat @rymai - just had a look, sorry for the delay, `IO.popen` is [left unclosed.](https://github.com/guard/guard/blob/master/lib/guard/notifiers/emacs.rb#L89) - it should be something like this instead:\n\n```\np = IO.popen(args).readlines\np.close\n```\n  On a newly killed thread, Thread#alive? behaves differently under MRI 2.0.0 than under MRI 1.9.3, and jruby and Thread#status behaves differently under jruby than under MRI 1.9.3, and MRI 2.0.0.\n\n  t=Thread.new{}.kill; puts \"#{t.alive?}--#{t.status}\"\n\n  On MRI 1.9.3 => true--aborting\n  On MRI 2.0.0 => true--run\n  On jruby        => false--aborting\n [![Coverage Status](https://coveralls.io/builds/234461/badge)](https://coveralls.io/builds/234461)\n\nCoverage decreased (-0.16%) when pulling **eb4a4a752c6fb7c9c4251b262cde9625b1d9b5a2 on cablegram:fix-thread-status** into **117e4665bac343c7a90cf1825b80519677035ab6 on guard:master**.\n By setting @thread to nil whenever the thread is killed and then testing @thread.nil? to determine if the thread is alive avoids calling Thread#alive? and Thread#status.\n This PR is OK to be merged.\n\n---\n\nI was looking into creating tests something like:\n\n```\nsubject {Guard.interactor.thread}\nit \"is an instance of Thread after calling .start\" do\n  expect(::Guard.interactor.thread).to be_a(Thread)\n  ::Guard.interactor.start\nend\nit \"is nil after calling .stop\" do\n  expect(::Guard.interactor.thread).to be_nil\n  ::Guard.interactor.stop\nend\n```\n\nbut the #start and #stop methods include code to short-circuit their behavior while under test (i.e., `return if ENV['GUARD_ENV'] == 'test'`). \n\nGiven that the code that would need to be tested is short-circuited in test mode, I am leaning toward not adding any tests. Do you agree?\n  Error message:\n\n```\n21:54:57 - ERROR - Error sending notification with growl_notify: undefined method `first' for nil:NilClass\n```\n\nguard version 1.8.3\ngrowl_notify version 0.0.3\ngrowlnotify --version:\n\n```\ngrowlnotify 2.0\nCopyright (c) The Growl Project, 2004-2011\n```\n\nGuardfile:\n\n```\nnotification :growl_notify, :sticky => true\n```\n Sorry, have been elsewhere. I just ran this with guard v.2.2.2 and it no longer raises the error. Thanks.\n  For me, the Guard console frequently freezes after running a test, disabling subsequent keyboard input.\n\nThe workaround is to kill and restart the terminal session, or to re-save my files-under-test which reruns the test and un-freezes the terminal.\n\nI have not been able to figure out what is causing the terminal to freeze.  As soon as I have an error condition that I can replicate, I will report it.\n\nIn the meantime - does anyone know a reliable and fast way to reset a frozen Guard terminal session?  I have tried Ctrl-C, Ctrl-J > reset, Ctrl-Z > fg, and a bunch of other incantations.\n\nI'm using: Xubuntu 12.04, Terminator, Tmux 1.8, guard 1.8.3, ruby2.0, guard-rspec 3.0.3, Rails4, bash 4.2.25\n I'd suggest to give Guard master a try. There has been a lot of refactoring and most importantly, it makes use of the completely rewritten Listen gem. I do not have the issue myself and I don't know way to reset Guard in a simple way.\n Thanks for the tip - I'll give this a try when Guard 2.0 is released.\n This issue may have appeared in 1.8.2. On my machines that have 1.8.1, they never appear to freeze. On 1.8.2 machines, it's common. The observed symptom is: an edit of some file starts, the input cursor moves to the left margin, and input to guard is not processed until the file is saved.\n @wpaulson - my observed symptoms were exactly as you described.  My guard console froze on 10% - 20% of my test runs, but I was not able to figure out a cause, or reproduce reliably.\n\nI reverted from 1.8.3 to 1.8.1.  I haven't experienced the freeze all morning.  Sweet!  Thanks a ton for this tip.\n I can't see within those changes what would cause the symptoms. The only thing that seems at all related is the code that calls stty, but the changes seem ok to an outsider.\n\nSent from my iPhone\n\nOn Sep 25, 2013, at 1:52 PM, R\u00e9my Coutable notifications@github.com wrote:\n\n> Thanks guys, do you think these changes might cause this issue?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n Hmm, perhaps changing\n\n> @thread.alive?\n\nto\n\n> if !@thread || !['sleep', 'run'].include?(@thread.status)\n\nmakes it not atomic anymore? What was the purpose of rewriting this? I mean the docs for `Thread#alive?` says `Returns true if thr is running or sleeping.`, so I don't see a reason to change that.\n See PR #462 for the change to `@thread.alive?`.\n\nAccording to ruby documentation for both [1.9.3](http://www.ruby-doc.org/core-1.9.3/Thread.html#method-i-alive-3F) and [2.0.0](http://www.ruby-doc.org/core-2.0.0/Thread.html#method-i-alive-3F), `Thread#alive?` returns `true` if the thread is running or sleeping. In actuality, on both 1.9.3 and 2.0.0, `Thread#alive?` also returns `true` if the thread is aborting.\n\nThe impact of this was that when `@thread` was in the 'aborting' state, `Guard::Interactor#start` would skip creating a new interactor thread (because `@thread.alive?` returned `true` when @thread was in fact in the half dead aborting state). With the current thread aborting and no new thread started, no keyboard interaction was possible. PR #462 appeared to address the problem, but apparently not completely.\n On a killed thread, `Thread#alive?` behaves differently under MRI 2.0.0 than under MRI 1.9.3, and jruby.\nOn a killed thread, `Thread#status` behaves differently under jruby than under MRI 1.9.3, and MRI 2.0.0.\n\nUnder MRI 1.9.3 (on either Windows XP SP2 or Ubuntu 12.04):\n\n```\nt=Thread.new{}.kill\nputs \"#{t.alive?}--#{t.status}\"    # => true--aborting\n```\n\nUnder jruby (on either Windows XP SP2 or Ubuntu 12.04):\n\n```\nt=Thread.new{}.kill\nputs \"#{t.alive?}--#{t.status}\"    # => false--aborting\n```\n\nUnder MRI 2.0.0 (on either Windows XP SP2 or Ubuntu 12.04):\n\n```\nt=Thread.new{}.kill\nputs \"#{t.alive?}--#{t.status}\"    # => true--run\n```\n\nIt makes sense that the interactor thread is not restarted under 2.0.0 because `@thread.status` will return 'run' which causes `Guard::Interactor#start` to skip restarting the interactor.\n\nAs a work around, you can trigger guard to action by re-saving a file in the watched directory. When there is no interactor, the watcher still functions...\n @cablegram Thanks a lot for the detailed answer, that's very interesting!\n @netzpirat: Take a look at #486. It addresses this issue by avoiding calls to Thread#alive? and Thread#status.\n @andyl: #486 was merged and is included in '2.0.0.pre.4'. This should fix your issue when using ruby 2.0.\n\nI am closing assuming this is fixed. Post again if issues persists. Thanks\n  Here the update for the new Listen 2 API. \n\nAs version 2 is still in beta stage (*BSD and Windows adapter hasn't been tested) I'm not sure if it's a good idea to include it directly in Guard 2.0, maybe waiting for 2.1 would be a safer idea. \nIn an other side, it would be way kicker tested/used if included in Guard 2.0 release.\n\nWhat do you think guys?\n [![Coverage Status](https://coveralls.io/builds/214456/badge)](https://coveralls.io/builds/214456)\n\nCoverage decreased (-0.15%) when pulling **2af9cc34f1fb8f91b6553736a8e10646b0eff786 on listen2** into **add2b21c1befb03170c53c1cd485ea5db7eacf5d on master**.\n [![Coverage Status](https://coveralls.io/builds/214462/badge)](https://coveralls.io/builds/214462)\n\nCoverage decreased (-0.2%) when pulling **17f32f8000f8e02e6ad4c3a46f7125582b2f6c4c on listen2** into **add2b21c1befb03170c53c1cd485ea5db7eacf5d on master**.\n From a user perspective it's definitely simpler to understand that Listen 2 and Guard 2 belongs together, dropping both Ruby 1.8.7 support (they not interested in the internal rewrite). We do not have any reason to release Guard 2 as soon as possible, so it may make sense to release them together.\n Ok great, I agree. I'll merge this PR and release Guard 2.0.0.pre.2 soon. \n Merged, feel free to release pre.2 :)\n  [![Coverage Status](https://coveralls.io/builds/204802/badge)](https://coveralls.io/builds/204802)\n\nCoverage decreased (-6.06%) when pulling **05637fcfc05bc3d9c839939928fccdae616ff058 on turn_off_for_terminal_notifier** into **c21611f2cd7ef11822dbc1b19bb53b8a9beeecf2 on master**.\n [![Coverage Status](https://coveralls.io/builds/204822/badge)](https://coveralls.io/builds/204822)\n\nCoverage increased (+11.52%) when pulling **fe2a5aa26b7c889882f2264878976b8f121210a1 on turn_off_for_terminal_notifier** into **c21611f2cd7ef11822dbc1b19bb53b8a9beeecf2 on master**.\n [![Coverage Status](https://coveralls.io/builds/204861/badge)](https://coveralls.io/builds/204861)\n\nCoverage increased (+11.48%) when pulling **addfab10834cc3797f5001341803332c9bc26dde on turn_off_for_terminal_notifier** into **c21611f2cd7ef11822dbc1b19bb53b8a9beeecf2 on master**.\n I think #472 referred to the notification in the terminal title, whereas this pull request removes the last notification from the notification center. I guess this is not what you want :)\n  When Gemfile:\ncontains:\ngem 'guard'\nbundle will install guard version 1.8.2\n\nwhen it contains:\ngem 'guard'\ngem 'better_errors'\n\nbundle will install guard version 1.4.0\n Here is a reproduction script:\nhttps://gist.github.com/Lunatyq/6423863\n\nI am using: Bundler version 1.3.5, on Darwin Kernel Version 12.4.0\n I think this is a bundler error:\n\nGuard depends on Pry > 0.9.10, and the latest Pry 0.9.12.2 depends on Coderay ~> 1.0.5\nBetter Errors depends on Coderay >= 1.0.5\n\nWhen I try to force Guard version 1.8.2 by adding it as a version requirement to the Gemfile\n\n```\nsource 'https://rubygems.org'\ngem 'guard', '1.8.2'\ngem 'better_errors'\n```\n\nand run `bundle install`, I get the following error:\n\n```\n$ bundle install\nFetching gem metadata from https://rubygems.org/...........\nFetching gem metadata from https://rubygems.org/..\nResolving dependencies...\nBundler could not find compatible versions for gem \"coderay\":\n  In Gemfile:\n    guard (= 1.8.2) ruby depends on\n      coderay (~> 1.0.5) ruby\n\n    better_errors (>= 0) ruby depends on\n      coderay (1.1.0)\n```\n\nBut Better Error [depends on >= 1.0.0 and not >= 1.1.0](https://github.com/charliesome/better_errors/blob/v0.9.0/better_errors.gemspec#L31)\n Oh, @rymai was faster and has even a solution.\n @rymai Yes, makes sense. So Bundler first analyzes Coderay because C comes before G, selects the matching Coderay version, then analyzes Guard, decreases the version until the dependencies are working together.\n Nice guys :)\n Closing, it's not something we can handle as far as I understand.\n  Currently it leaves what ever it put there last after exiting, which is a bit annoying. Love guard regardless though :D \n For me it should be the normal behavior of every command line tools, do you know other tools that clean the screen after exiting?\n\nIf you want there's still the [`--clear`](https://github.com/guard/guard#-c--clear-option) Guard option to clean after each change.\n @thibaudgg I think he means that the result of the last run will be shown in the terminal _title_, which is done by the TerminalNotifier. That means we need to notify all notifiers that Guard is shutting down and allow each notifier to do some cleanup. I'd prefer to address this in #458 since @rymai refactored the notifiers. I'll have a look...\n Oh I see, sorry! :)\n I'm on current / latest OSX. What are you on @rymai?\n Here's a screenshot. I'm running guard `1.6.2`\n\n![image](https://f.cloud.github.com/assets/601660/1091356/ecab8044-1666-11e3-96d6-82726f85c7df.png)\n In Gemfile,\n\n```\ngem 'guard'\ngem 'guard-rspec'\n```\n\nThen\n\n```\nbundle install\n```\n\nThen just run \n\n```\nbundle exec guard # from the osx terminal\n```\n\nWhen a run is complete,\n\n```\n[1] guard(main)> exit\n```\n In my case, both the window and tab titles are updated. I think you may see the same if you had multiple tabs open ...\n Let me try to debug this on my machine. I will send a pull request if I can find the bug and fix it.\n I looked through the code. The current notifications design does not have a clean way of clearing anything because there is no mechanism for the notifiers to be informed of the guard process exiting. Without this, there is no clean way of telling the terminal notifier that guard is exiting, which is required to have it reset the terminal title to the default.\n\nIf you agree, I can add a new hook to all the notifiers like `on_exit` and have guard invoke it on all registered notifiers before exiting. This will given each of them the chance to perform any cleanup.\n\nWe can also first check to see each notifier implement the on_exit method, before invoking it. This will provide backward compatibility for any notifiers that don't yet implement this.\n\nThoughts?\n > I looked through the code. The current notifications design does not have a clean way of clearing anything because there is no mechanism for the notifiers to be informed of the guard process exiting. Without this, there is no clean way of telling the terminal notifier that guard is exiting, which is required to have it reset the terminal title to the default.\n> \n> You need to look at the v2.0 branch. Rymai refactored the notifiers and when Guard stops, each notifier's class receives a `turn_off` message.\n> If you agree, I can add a new hook to all the notifiers like on_exit and have guard invoke it on all registered notifiers before exiting. This will given each of them the chance to perform any cleanup.\n> \n> That would be great! Just don't forget to use the v2.0 branch. This will be merged very likely within the next two weeks\u2026\n\nMichael\n Ah, perfect. The only thing remaining is for the terminal_notifier class to implement the `turn_off` method and do the needful to clear the title.\n  It would be nice if the list of currently-installed notifiers (and, perhaps, their options) were available on the command-line, similar to \"guard show\" for event-plugins.\n Sounds like a good idea, do you want to handle it and submit a PR? @rymai could certainly help you when he'll be back from vacation. Thanks!\n What about this?\n\n```\n$ bundle exec guard notifiers\n  +-------------------+-----------+------+------------------------+-------------------+\n  | Name              | Available | Used | Option                 | Value             |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | gntp              | \u2714         | \u2718    | sticky                 | false             |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | growl             | \u2718         | \u2718    | sticky                 | false             |\n  |                   |           |      | priority               | 0                 |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | growl_notify      | \u2718         | \u2718    | sticky                 | false             |\n  |                   |           |      | priority               | 0                 |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | terminal_notifier | \u2718         | \u2718    |                        |                   |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | libnotify         | \u2718         | \u2718    | transient              | false             |\n  |                   |           |      | append                 | true              |\n  |                   |           |      | timeout                | 3                 |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | notifysend        | \u2714         | \u2718    | t                      | 3000              |\n  |                   |           |      | h                      | \"int:transient:1\" |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | notifu            | \u2718         | \u2718    | time                   | 3                 |\n  |                   |           |      | icon                   | false             |\n  |                   |           |      | baloon                 | false             |\n  |                   |           |      | nosound                | false             |\n  |                   |           |      | noquiet                | false             |\n  |                   |           |      | xp                     | false             |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | emacs             | \u2718         | \u2718    | client                 | \"emacsclient\"     |\n  |                   |           |      | success                | \"ForestGreen\"     |\n  |                   |           |      | failed                 | \"Firebrick\"       |\n  |                   |           |      | default                | \"Black\"           |\n  |                   |           |      | fontcolor              | \"White\"           |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | tmux              | \u2718         | \u2718    | client                 | \"tmux\"            |\n  |                   |           |      | tmux_environment       | \"TMUX\"            |\n  |                   |           |      | success                | \"green\"           |\n  |                   |           |      | failed                 | \"red\"             |\n  |                   |           |      | pending                | \"yellow\"          |\n  |                   |           |      | default                | \"green\"           |\n  |                   |           |      | timeout                | 5                 |\n  |                   |           |      | display_message        | false             |\n  |                   |           |      | default_message_format | \"%s - %s\"         |\n  |                   |           |      | default_message_color  | \"white\"           |\n  |                   |           |      | line_separator         | \" - \"             |\n  |                   |           |      | color_location         | \"status-left-bg\"  |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | terminal_title    | \u2714         | \u2718    |                        |                   |\n  +-------------------+-----------+------+------------------------+-------------------+\n  | file              | \u2718         | \u2718    | format                 | \"%s\\n%s\\n%s\\n\"    |\n  +-------------------+-----------+------+------------------------+-------------------+\n```\n :heart_eyes: \n @netzpirat That looks fantastic!  ...but is there a place I can clone/test that from to see if those lovely Unicode checkmarks need to be \"Yes\"/\"No\" on Windows?\n @edbrannin Just landed on the master branch, so you can test it on Windows.\n @rymai Ready for the pre-release from my end!\n Tweet it! :)\n\nDo you migrate CHANGELOG manually?\n @rymai good guy! What do you think about removing CHANGELOG.md and adding a link/chapter in the README?\n  I have this in my Guardfile:\n\n```\nignore %r{^test\\/not_interested}\nguard :minitest do\n    watch(%r{^test/(.*)\\/?(.*)_test\\.rb})\n    watch(%r{^lib/(.*/)?([^/]+)\\.rb})    { |m| \"test/#{m[1]}#{m[2]}_test.rb\" }\n    ...\nend\n```\n\nWhat I'm trying to do is to avoid tests inside `test/not_interested` to run when I run all the tests with: `minitest` in the Guard console. Any idea?\n Yeah, that's a bug for me.\n We have the following as plugin API for the run all command:\n\n``` bash\ndef run_all\nend\n```\n\nThere's a good reason why we don't pass any path: we should not know plugin specific stuff like a default spec folder, which is needed to calculate the diff of the default path and the ignored/filtered paths. It's the plugin that needs to implement it by taking the `ignore` and `filter` options into account.\n\nAnother solution is to add a custom Pry command that only runs a subset of the specs. This can be derived from the [change command](https://github.com/guard/guard/blob/master/lib/guard/commands/change.rb).\n How do we wanna proceed with this? For me this isn't a bug and the documentation describes it clearly, e.g. for `ignore`\n\n> The ignore method can be used to exclude files and directories from the set of files being watched. Let's say you > have used the watch method to monitor a directory, but you are not interested in changes happening to images, you could use the ignore method to exclude them.\n\nand for `filter`\n\n> The filter method allows you to focus by filtering files and directories without having to specify them by hand in the > watch method. E.g. if you are watching multiple directories but only interested in changes to the Ruby files, then use the filter method.\n You right @netzpirat we should leave it as this, as the documentation is correct with the current implementation (only filter watched files). \nI don't think filtering the run all methods would be possible at the Guard level, it should be managed by Guard plugins. \n Thanks, closing this as it's not a bug and we anyway won't be able to handle this in Guard itself.\n  Very nice stuff here! Thanks!\n [![Coverage Status](https://coveralls.io/builds/196351/badge)](https://coveralls.io/builds/196351)\n\nCoverage increased (+0.66%) when pulling **57d13de4e2352e68570d3cdb49201ff64b7a1f3e on v2.0** into **e8d1c4adf91be65ccf430252c76c52a9f86ae4ec on master**.\n Perfect for me!\n\nWhat do you thing about using [GitHub Releases](https://github.com/blog/1547-release-your-software) instead of the CHANGELOG.md file?\n But you keep the CHANGELOG file? https://github.com/jilion/http_content_type/blob/master/CHANGELOG.md\nWhy that, maybe just a link to GitHub Releases inside the CHANGELOG at first would be enough no?\n I'm ok with draft release, even if they aren't public. @netzpirat ok for you?\n Sounds reasonable :)\n [![Coverage Status](https://coveralls.io/builds/197269/badge)](https://coveralls.io/builds/197269)\n\nCoverage increased (+0.63%) when pulling **f8df8161a7beb0263670fe2659201f861cc6241d on v2.0** into **e8d1c4adf91be65ccf430252c76c52a9f86ae4ec on master**.\n [![Coverage Status](https://coveralls.io/builds/197288/badge)](https://coveralls.io/builds/197288)\n\nCoverage increased (+0.63%) when pulling **9cffc3d1f95fbfb4ae52652dcd28a298873fc61d on v2.0** into **e8d1c4adf91be65ccf430252c76c52a9f86ae4ec on master**.\n [![Coverage Status](https://coveralls.io/builds/197307/badge)](https://coveralls.io/builds/197307)\n\nCoverage increased (+0.63%) when pulling **585c5f7992e2bbf41a31c68ac377752186b2305f on v2.0** into **e8d1c4adf91be65ccf430252c76c52a9f86ae4ec on master**.\n [![Coverage Status](https://coveralls.io/builds/198464/badge)](https://coveralls.io/builds/198464)\n\nCoverage increased (+0.64%) when pulling **019741c648fcf7c94326d92517f4dfc3f3a90c9c on v2.0** into **e8d1c4adf91be65ccf430252c76c52a9f86ae4ec on master**.\n [![Coverage Status](https://coveralls.io/builds/201453/badge)](https://coveralls.io/builds/201453)\n\nCoverage increased (+0.68%) when pulling **a5162d2b4bce6adbcb32bfd178c06803a1c973ea on v2.0** into **e8d1c4adf91be65ccf430252c76c52a9f86ae4ec on master**.\n [![Coverage Status](https://coveralls.io/builds/201661/badge)](https://coveralls.io/builds/201661)\n\nCoverage increased (+0.68%) when pulling **920efa26387f44071fb5fadea2ef11a110f1ca91 on v2.0** into **31b696349f38507e49e7f841d7b90f744d8bec1e on master**.\n Ok for me.\n Will Guard 2 depend on Listen 2?\n Listen 2 will be soon ready for a beta release, but I preferrer to keep the upgrade for later, maybe Guard 2.1 as there is a lot of rewrite. @netzpirat do you got the time to have a look to Listen v2.0 branch?\n [![Coverage Status](https://coveralls.io/builds/202626/badge)](https://coveralls.io/builds/202626)\n\nCoverage increased (+0.68%) when pulling **a3288d9a3f0eb761f28f7fd1e540757af148f321 on v2.0** into **31b696349f38507e49e7f841d7b90f744d8bec1e on master**.\n  So guard runs through the first time, but when I press enter to toggle a repeated run, I get\n\n```\nSystemStackError: stack level too deep\nfrom /Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/pry-0.9.12.2/lib/pry/command.rb:182\n```\n\nAlso, I have a process `fseventsd` and a process `ruby > fsevent_watch` that starts consuming all cpu. \n Yeah, sorry:\n\nguard --debug\n\n```\n$ guard --debug\n16:21:06 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n16:21:06 - INFO - Guard uses TerminalTitle to send notifications.\n16:21:06 - DEBUG - Command execution: hash stty\n16:21:06 - DEBUG - Guard starts all plugins\n16:21:06 - DEBUG - Hook :start_begin executed for Guard::RSpec\n16:21:06 - INFO - Guard::RSpec is running\n16:21:06 - INFO - Running all specs\n16:21:06 - DEBUG - Command execution: bundle exec rspec --help\n16:21:07 - DEBUG - Command execution: bundle exec rspec -f d -r /Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/guard-rspec-2.5.3/lib/guard/rspec/formatter.rb -f Guard::RSpec::Formatter --failure-exit-code 2 spec \n\n.... # runs successfully\n\n6:21:45 - DEBUG - Hook :start_end executed for Guard::RSpec\n16:21:45 - INFO - Guard is now watching at '/Users/robin/Code/soc/soc'\n16:21:49 - DEBUG - Command execution: stty -g 2>/dev/null\n16:21:49 - DEBUG - Start interactor\n[1] {All} guard(main)>  # pressing enter\nSystemStackError: stack level too deep\nfrom /Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/pry-0.9.12.2/lib/pry/command.rb:182\n\n```\n\nGuardfile\n\n``` ruby\ndef add_rspec(spec_paths: %w(spec))\n  guard 'rspec', :cli => \"-f d\", :spec_paths => spec_paths do\n\n    # if routes change\n    watch('config/routes.rb')  { \"spec\" }\n\n    # if a spec changes\n    watch(%r{^spec/.+_spec\\.rb$})\n\n    # rerun shared examples\n    watch(%r(^spec/.+\\.example.rb$))\n    watch(%r{^lib/(.+)\\.rb$}) { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n\n    # Rails\n    # models, controllers, etc\n    watch(%r{^app/(.+)\\.rb$}) { |m| \"spec/#{m[1]}_spec.rb\" }\n\n    # views\n    watch(%r{^app/(.*)(\\.erb|\\.haml)$}) { |m| \"spec/#{m[1]}#{m[2]}_spec.rb\" }\n\n    # routing & acceptance\n    watch(%r{^app/controllers/(.+)_controller\\.rb$}) { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/controllers/#{m[1]}_controller_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\n\n    # if support changes\n    watch(%r{^spec/support/(.+)\\.rb$}) { \"spec\" }\n\n    # if application controller changes\n    watch('app/controllers/application_controller.rb') { \"spec\" }\n\n    # Tasks\n    watch(%r{^lib/tasks/(.+)\\.rake$}) { |m| \"spec/tasks/#{m[1]}_spec.rb\" }\n\n    # Lib\n    watch(%r{^lib/(.+)\\.rb$}) { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n\n    # Fabrication\n    watch(%r{^spec/fabricators/(.+)\\_fabricator.rb$}) { |m| Dir[\"spec/**/*#{m[1]}*\"] }\n\n    # cell views\n    watch(%r{^app/cells/(.+)/.+\\.html.*$}){ |m| \"spec/cells/#{m[1]}_cell_spec.rb\" }\n  end\nend\n\ngroup :all do\n  add_rspec\nend\n\nscope group: :all\n```\n\nThe Gemfile is a bit long but it seems to be an issue with my Guardfile: \n\nIt doesn't work as stated above, however, if I remove the group + scope and add `add_rspec` directly at the top-level everything works fine. I am using Ruby 2.0.0 on OS X 10.8\n What about\n\n``` Ruby\nscope group: :all\n\ngroup :all do\n   guard 'rspec', :cli => \"-f d\", :spec_paths => %w(spec) do\n\n    # if routes change\n    watch('config/routes.rb')  { \"spec\" }\n\n    # if a spec changes\n    watch(%r{^spec/.+_spec\\.rb$})\n\n    # rerun shared examples\n    watch(%r(^spec/.+\\.example.rb$))\n    watch(%r{^lib/(.+)\\.rb$}) { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n\n    # Rails\n    # models, controllers, etc\n    watch(%r{^app/(.+)\\.rb$}) { |m| \"spec/#{m[1]}_spec.rb\" }\n\n    # views\n    watch(%r{^app/(.*)(\\.erb|\\.haml)$}) { |m| \"spec/#{m[1]}#{m[2]}_spec.rb\" }\n\n    # routing & acceptance\n    watch(%r{^app/controllers/(.+)_controller\\.rb$}) { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/controllers/#{m[1]}_controller_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\n\n    # if support changes\n    watch(%r{^spec/support/(.+)\\.rb$}) { \"spec\" }\n\n    # if application controller changes\n    watch('app/controllers/application_controller.rb') { \"spec\" }\n\n    # Tasks\n    watch(%r{^lib/tasks/(.+)\\.rake$}) { |m| \"spec/tasks/#{m[1]}_spec.rb\" }\n\n    # Lib\n    watch(%r{^lib/(.+)\\.rb$}) { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n\n    # Fabrication\n    watch(%r{^spec/fabricators/(.+)\\_fabricator.rb$}) { |m| Dir[\"spec/**/*#{m[1]}*\"] }\n\n    # cell views\n    watch(%r{^app/cells/(.+)/.+\\.html.*$}){ |m| \"spec/cells/#{m[1]}_cell_spec.rb\" }\n  end\nend\n```\n I can reproduce it and the reason why it fails is that the group is called `all`. If you change the group name to something different, it works fine.\n Crazy shit, can we catch this somehow?\n Yes, we can check the group name when evaluating the Guardfile...\n Exactly, that's the most simple solution.\n  Still seeing bug #389 on 1.8.0.  I'm assuming that it's a regression.\n\n`Guardfile`:\n\n``` ruby\nignore %r{^site/}\n```\n\nRun:\n\n```\nguard list\n```\n\nOutput:\n\n```\n04:51:46 - ERROR - Invalid Guardfile, original error is:\n> [#] undefined method `ignore' for nil:NilClass\n```\n\nAnother example `Guardfile` that results in the same output:\n\n``` ruby\nguard :jekyll do\n   ignore /site/\nend\n```\n  I've recently done a `gem update` on my system, and now I'm unable to run guard. This is the error I'm getting:\n\n```\nYou're running a version of ruby with no Readline support\nPlease `gem install rb-readline` or recompile ruby --with-readline.\n```\n\nNow obviously I've tried running `gem install rb-readline`, which looks like it has installed correctly:\n\n```\nSuccessfully installed rb-readline-0.5.0\nParsing documentation for rb-readline-0.5.0\nDone installing documentation for rb-readline after 7 seconds\n1 gem installed\n```\n\nBut I'm still getting the error message.\n\nThis is what my `Guardfile` looks like:\n\n```\n# Guardfile: https://github.com/guard/guard#readme\n\nguard 'compass', :configuration_file => 'config.rb' do\n  watch(%r{public_html/mysite/.+\\.(scss|sass)$})\nend\n\nguard 'livereload' do\n  watch(%r{public_html/mysite/.+\\.(css|js|html|php|ss)$})\nend\n```\n\nCan anyone help? Thank you :)\n - `bundle exec guard` gives the same error\n- as does `bundle exec guard --debug` and `guard --debug`\n- `rvm -v` outputs \"rvm 1.16.11 (stable) by Wayne E. Seguin wayneeseguin@gmail.com, Michal Papis mpapis@gmail.com [https://rvm.io/]\"\n- `ruby -v` outputs \"ruby 1.9.3p194 (2012-04-20 revision 35410) [i686-linux]\"\n- I'm running Debian 7\n- My `Gemfile` is below:\n  \n  source 'https://rubygems.org'\n  gem 'compass'\n  gem 'compass-h5bp'\n  gem 'susy'\n  \n  gem 'guard'\n  gem 'guard-sass'\n  gem 'guard-compass'\n  gem 'guard-livereload'\n  \n  gem 'rb-fsevent'\n  gem 'json', '~> 1.7.7'\n\nI don't know if this is an issue, or if I'm being an idiot - if the latter, I apologize, please tell me so and I'll open this ticket on StackOverflow.\n 1.8.0\n I've removed `gem 'rb-fsevent'`, added `gem 'rb-readline'`, and its now working. Thank you\n  [![Coverage Status](https://coveralls.io/builds/72107/badge)](https://coveralls.io/builds/72107)\n\nCoverage increased (+0%) when pulling **24d5f09d234bbb6c3a9e2f04326b1d1d93a17dcd on v2.0-notifiers-refactoring** into **708c58f9288d4f49bfbfc23a11be87d904cf564c on v2.0_refactorings**.\n :heart: \n Awesome refactoring, thanks @rymai \n\nAfter having `Listen`, I agree that `Brief` could be great. `Tell` is another possibility and it's a name too!\n Oh and I'm definitely for extracting Notifier before 2.0!\n Even if I'm not a patriot, `tell` is funny, because it's related to Switzerland like (Swiss) Guard.\n Good point, I haven't even thinking about that!\n Then we should go with Wilhelm and change the API to `Wilhelm.tell('I wonder what happened to the apple?')`. \n\nHere some other, serious ideas that are available on Rubygems:\n- notifer\n- announce\n- disclose\n- advice\n\nand of course the already mentioned\n- brief\n [![Coverage Status](https://coveralls.io/builds/72489/badge)](https://coveralls.io/builds/72489)\n\nCoverage increased (+0%) when pulling **8cfde67e3ce56119e30caa249abbb22d54a1c389 on v2.0-notifiers-refactoring** into **708c58f9288d4f49bfbfc23a11be87d904cf564c on v2.0_refactorings**.\n Hi @cyx , would it be possible to giving us the \"tell\" gem name so we could use it for Guard notifiers gem?\nI see that the [`tell`](https://rubygems.org/gems/tell) gem hasn't be updated used/updated a lot.\n\nOh and btw we love openredis! :)\n @netzpirat `Wilhelm Tell` is the German version, `Guillaume Tell` the french one. http://en.wikipedia.org/wiki/William_Tell ... `Tell` would be better IMHO :)\n @rymai ouch!\n Of course it was a joke :grin: \n @netzpirat ouch ouch! :)\n [![Coverage Status](https://coveralls.io/builds/74195/badge)](https://coveralls.io/builds/74195)\n\nCoverage increased (+0%) when pulling **3f45db1913daa5e60331398f87d97d3dcdb59760 on v2.0-notifiers-refactoring** into **708c58f9288d4f49bfbfc23a11be87d904cf564c on v2.0_refactorings**.\n  Thought I'd give a shot at making multiple directories work. All you need to do is separate the directories you'd like to watch with the space (e.g. `guard -w ~/path1 ~/path2`).\n\nNote, this patch still passes along all added, modified, and deleted paths as relative paths, so it isn't very easy to discern which watched folder the change came from. But we could get around that pretty easily by adding other option to guard that also passed along the watched directory name (e.g. `path1/dir/changed.txt` instead of `dir/changed.txt`)\n\nPlease let me know if there is anything else I should be doing and/or testing for this PR.\n [![Coverage Status](https://coveralls.io/builds/70516/badge)](https://coveralls.io/builds/70516)\n\nCoverage decreased (-0%) when pulling **c6949728360e0e21bc4d1bb853dc0f52ac824d6b on timmfin:watch-multiple-directories** into **ada76587c88d2cc5ebb56c0b4514abbe194f7090 on guard:master**.\n [![Coverage Status](https://coveralls.io/builds/70520/badge)](https://coveralls.io/builds/70520)\n\nCoverage decreased (-0%) when pulling **c6949728360e0e21bc4d1bb853dc0f52ac824d6b on timmfin:watch-multiple-directories** into **ada76587c88d2cc5ebb56c0b4514abbe194f7090 on guard:master**.\n [![Coverage Status](https://coveralls.io/builds/70554/badge)](https://coveralls.io/builds/70554)\n\nCoverage decreased (-0%) when pulling **e2d7a19fdbeca044e7941185a5b9169ad3b68c32 on timmfin:watch-multiple-directories** into **ada76587c88d2cc5ebb56c0b4514abbe194f7090 on guard:master**.\n Hi thanks for this PR! \nI don't understand the issue with `relative_paths` option, if you removed it all paths should be absolute. Also Listen doesn't support this option with multiple directories and that options will be removed in Listen 2.0, so absolute paths are definitely the way to go!\n I assumed that people would want compatibility with existing Guardfiles. More specifically, if I didn't convert everything to a relative path, all existing watches would immediately break as soon as you started watching a second directory, since they were written to compare to a relative path not an absolute one.\n Ok you right, relative paths here seems a good approach, because each watched directories will very certainly have the same logic file structure. \n\nOk for me, @guard/core-team ok too?\n Sure thing, fixes made and rebased.\n [![Coverage Status](https://coveralls.io/builds/136137/badge)](https://coveralls.io/builds/136137)\n\nCoverage decreased (-0%) when pulling **84db64b39dd829023cdb199ad48759e98186f7c7 on timmfin:watch-multiple-directories** into **47b818dbdea16d4a8212ca668387af186f371845 on guard:master**.\n Fantastic :)\n  For anyone else who\u2019s new to Bundler (currently the command `bundle exec guard` is not in the Readme). Consider adding this to Start section too.\nRef: #274\n [![Coverage Status](https://coveralls.io/builds/57980/badge)](https://coveralls.io/builds/57980)\n\nChanges Unknown when pulling **7222d27d217948f05a3604bc55d7eddeb18d0d94 on oli:patch-1** into *\\* on guard:master**.\n @thibaudgg wow, fast ^_^ If you want a pull req to add a similar note to the [Start](https://github.com/guard/guard#start) section, let me know. For example from this:\n\n> Just launch Guard inside your Ruby or Rails project with:\n> \n> ```\n> $ guard\n> ```\n\nto this:\n\n> Just launch Guard inside your Ruby or Rails project with:\n> \n> ```\n> $ guard\n> ```\n> \n> Or if you\u2019re using Bundle with:\n> \n> ```\n> $ bundle exec guard\n> ```\n\nAlso, thanks for Guard! :+1:\n  I have installed the necessary gems as follows :\n\n```\n        ~/Desktop/html5$ gem list\n\n        bundle (0.0.1)\n        bundler (1.3.5)\n        coderay (1.0.9)\n        em-websocket (0.5.0)\n        eventmachine (1.0.3)\n        ffi (1.8.1)\n        formatador (0.2.4)\n        guard (1.8.0)\n        guard-livereload (1.4.0)\n        guard-sass (1.2.0)\n```\n\nThis is what my Guardfile looks like :\n\n```\n        ~/Desktop/html5$ more Guardfile \n        A sample Guardfile\n        More info at https://github.com/guard/guard#readme\n\n        guard 'livereload' do\n            watch(%r{.+\\.(css|js|html)$})\n        end\n```\n\nThis is what I get when I run : bundle exec guard\n\n```\n        ~/Desktop/html5$ bundle exec guard\n        12:05:56 - INFO - Guard uses NotifySend to send notifications.\n        12:05:56 - INFO - Guard uses TerminalTitle to send notifications.\n        12:05:56 - INFO - LiveReload is waiting for a browser to connect.\n        12:05:56 - INFO - Guard is now watching at '/home/praveen/Desktop/html5'\n        [1] guard(main)> \n```\n\nTo make sure the Guard server is running , this is what i get when telneting\n\n```\n        :~/Desktop/html5$ telnet 127.0.0.1 35729\n        Trying 127.0.0.1...\n        Connected to 127.0.0.1.\n        Escape character is '^]'.\n```\n\nWhen I make changes to the index.html in the monitored directory , this is what i get from guard\n\n```\n        12:32:30 - INFO - Reloading browser: index.html\n        Unable to write to your history file, history not saved\n        12:36:38 - INFO - Reloading browser: index.html\n        [1] guard(main)> \n```\n\nI have installed the chrome live reload plugin and given it file reading permission but when I click it , it doesn't change and thus does not reload the code change to any html or css in the /home/praveen/Desktop/html5 , pls let me know what can be done.\n\nPraveen\n The warning `Unable to write to your history file, history not saved` comes from Pry and has nothing to do with LiveReload. You need to make the Guard interactor history `~/.guard_history` writeable.\n thanks folks, do you have any recommendations on the Chrome extension to be used. it just doesnt seem to work.\n I am using the official one, it is not being enabled though . when I click it to enable , it doesn't change but on saving the index.html in sublime text I get  the below in the Guard prompt \n\n[1] guard(main)> 13:31:34 - INFO - Browser connected.\n13:31:43 - INFO - Reloading browser: index.html\n[1] guard(main)> 13:31:46 - INFO - Browser connected.\n\nbut the chrome does not refresh . any idea how to troubleshoot this.\n After Struggling for 2 days , this is the method that I figured to work without hassle on Ubuntu 13.04, it has thus made my workflow seamless : \n\nInstall LiveReload from Through Python and CD to the directory that needs to be watched for changes\n\n```\n            curl -O https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python           \n            pip install livereload\n            sudo apt-get install python-pip\n            pip install livereload\n            cd FolderToBeMonitored/\n```\n\nCreate a file called Guardfile with the following contents to monitor for all changes to html and css files \n\n```\n            Desktop/html5$ more Guardfile \n            #!/usr/bin/env python\n            from livereload.task import Task\n\n            Task.add('*.css')\n            Task.add('*.html')\n            Task.add('css/*.css')\n            praveen@praveen-XPS-L412Z:~/Desktop/html5$ \n```\n\nOnce the above is done , start the LiveReload with the below command : \n\n```\n                livereload -b\n```\n\nPlease note that liveReload uses 35729 as the default port but if it needs to be changed TO 1717 use\n\n```\n            livereload -p 1717 -b\n```\n\nThe default html file will launch automatically in the default browser , no need to install any buggy chrome extensions . to launch a particular file , use appropriate URL of the below format \n\n```\n           http://127.0.0.1:35729/test.html\n```\n\nI prefer this way the Ruby gem installation followed by the chrome extension  that needs to connect to the port method, I spent 2 days on this issue and it never worked until figuring out the above methodology that works without any chrome plugins.\n  I have a basic guard install with rspec. I am using the Guardfile generated by guard. After I start guard it pauses for ~15 seconds and drops to the guard(main) prompt. I have tried changing and saving files from spec/foo/bar_spec.rb as well as rails controllers but nothing gets triggered in guard. I have checked that Guard.listener.adapter does return an object. \n\nThe class is:\n=> Listen::Adapters::Linux\n\nThis is the output of guard:\n\n```\n$ bundle exec guard -d\n12:05:34 - DEBUG - Command execution: which notify-send\n12:05:34 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n12:05:34 - INFO - Guard uses TerminalTitle to send notifications.\n12:05:34 - DEBUG - Command execution: hash stty\n12:05:35 - DEBUG - Guard starts all plugins\n12:05:35 - DEBUG - Hook :start_begin executed for Guard::RSpec\n12:05:35 - INFO - Guard::RSpec is running\n12:05:35 - DEBUG - Hook :start_end executed for Guard::RSpec\n12:05:35 - INFO - Guard is now watching at '/vagrant'\n12:05:59 - DEBUG - Command execution: hash stty\n12:05:59 - DEBUG - Start interactor\n[1] guard(main)>\n```\n\nGuardfile:\n\n```\n# A sample Guardfile\n# More info at https://github.com/guard/guard#readme\n\nguard :rspec do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb')  { \"spec\" }\n\n  # Rails example\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^app/(.*)(\\.erb|\\.haml)$})                 { |m| \"spec/#{m[1]}#{m[2]}_spec.rb\" }\n  watch(%r{^app/controllers/(.+)_(controller)\\.rb$})  { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\n  watch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\n  watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n\n  # Capybara features specs\n  watch(%r{^app/views/(.+)/.*\\.(erb|haml)$})          { |m| \"spec/features/#{m[1]}_spec.rb\" }\n\n  # Turnip features and steps\n  watch(%r{^spec/acceptance/(.+)\\.feature$})\n  watch(%r{^spec/acceptance/steps/(.+)_steps\\.rb$})   { |m| Dir[File.join(\"**/#{m[1]}.feature\")][0] || 'spec/acceptance' }\nend\n```\n\nGemfile:\n\n```\nsource 'http://rubygems.org'\n\ngem 'rails', '~> 3.2.13'\n\ngem 'pg'\ngem 'activerecord-postgres-hstore'\n\ngem 'ffi'\n\n# Gems used only for assets and not required\n# in production environments by default.\ngroup :assets do\n  gem 'sass-rails'\n  gem 'compass-rails'\n  gem 'coffee-rails'\n  gem 'uglifier'\n\n  gem 'modernizr-rails'\nend\n\ngem \"rails-backbone\"\ngem 'jquery-rails'\n\ngem 'unicorn'\n\ngem 'haml-rails'\ngem 'mustache'\ngem 'mustache-trimmer', :git => 'https://github.com/josh/mustache-trimmer.git'\n\n# gem 'copycat', :git => 'git://github.com/Vermonster/copycat.git'\n\ngem 'rinku', :require => 'rails_rinku'\ngem \"nokogiri\"\n\ngem 'draper'\ngem 'gon'\ngem 'settingslogic'\ngem 'wicked'\ngem \"paperclip\", \"~> 3.4.0\"\n\ngem 'simple_form'\ngem 'nested_form'\n\ngem 'will_paginate', '~> 3.0.4'\ngem 'bootstrap-will_paginate'\n\ngem 'bootstrap-sass', '~> 2.2.2.0'\ngem \"font-awesome-rails\"\n\ngem 'active_utils', :git => \"git://github.com/jeffutter/active_utils.git\", :branch => \"configure_ssl_version\"\ngem 'activemerchant', :git => \"git://github.com/jeffutter/active_merchant.git\", :branch => \"force_ssl_on_money_movers_gateway\"\n\ngem \"devise\"\ngem \"cancan\"\ngem 'activevalidators'\ngem 'date_validator', :git => \"git://github.com/joealba/date_validator.git\"\n\ngem 'awesome_nested_set'\ngem 'the_sortable_tree', \"~> 2.3.0\"\n\ngem 'recursive-open-struct'\n\ngem 'airbrake'\n\ngroup :test, :development do \n  gem 'rspec-rails'\n  gem 'launchy'\n  # gem 'spring', github: \"jonleighton/spring\"\nend\n\ngroup :development do\n  gem 'quiet_assets'\n  gem 'annotate', :git => 'git://github.com/ctran/annotate_models.git'\n  gem 'pry'\n  gem \"rails-erd\"\n  gem 'rdoc'\n  # gem 'rack-mini-profiler'\n  gem 'meta_request', '0.2.1'\n  gem \"better_errors\"\n  gem \"binding_of_caller\"\n  #gem 'railroady'\n  # gem 'guard-livereload'\n  gem 'capistrano'\n  gem 'capistrano-unicorn', :git => \"git://github.com/sosedoff/capistrano-unicorn.git\"\n  gem 'capistrano-rbenv'\n  platforms :ruby do\n    # gem \"libnotify\"\n    gem 'rb-inotify'\n  end\nend\n\ngroup :test do\n  # Pretty printed test output\n  gem 'turn', :require => false\n\n  gem 'faker'\n  gem \"factory_girl_rails\"\n  gem \"capybara\"\n  gem \"guard-rspec\"\n  # gem 'rb-readline'\nend\n```\n\nI have also tried with interactor :off with no difference.\n\nAny ideas?\n The above setup is running in Vagrant. It seems as though if I run it directly on my box It works fine... now to figure out what is different about the environments\n Found my problem. Mentioned in issues guard/listen#57 and guard/listen#53. Closing this issue\n  Using `guard-jasmine` with the PlayerSpec that\u00b4s found all over the the internet:\n\n```\nsh: -c: line 0: syntax error near unexpected token `('\nsh: -c: line 0: `notify-send 'Jasmine spec failed' 'should be able to play a Song: ReferenceError: Can't find variable: Player in http://localhost:9292/assets/spec.js (line 6), TypeError: 'undefined' is not an object (evaluating 'player.play') in http://localhost:9292/assets/spec.js (line 11), ReferenceError: Can't find variable: $ in http://localhost:9292/assets/jasminetea.js (line 3427)' -t '3000' -h 'int:transient:1' -i '/home/arthur/.rvm/gems/ruby-1.9.3-p392@survey_element_test/gems/guard-1.8.0/images/failed.png' -u 'normal''\n\nsh: -c: line 0: syntax error near unexpected token `('\nsh: -c: line 0: `notify-send 'Jasmine spec failed' 'tells the current song if the user has made it a favorite: ReferenceError: Can't find variable: Player in http://localhost:9292/assets/spec.js (line 6), spyOn could not find an object to spy upon for persistFavoriteStatus(), ReferenceError: Can't find variable: $ in http://localhost:9292/assets/jasminetea.js (line 3427)' -t '3000' -h 'int:transient:1' -i '/home/arthur/.rvm/gems/ruby-1.9.3-p392@survey_element_test/gems/guard-1.8.0/images/failed.png' -u 'normal''\n\nsh: -c: line 0: syntax error near unexpected token `('\nsh: -c: line 0: `notify-send 'Jasmine spec failed' 'should indicate that the song is currently paused: ReferenceError: Can't find variable: Player in http://localhost:9292/assets/spec.js (line 6), TypeError: 'undefined' is not an object (evaluating 'player.play') in http://localhost:9292/assets/spec.js (line 20), TypeError: 'undefined' is not an object (evaluating 'player.isPlaying') in http://localhost:9292/assets/spec.js (line 25), ReferenceError: Can't find variable: $ in http://localhost:9292/assets/jasminetea.js (line 3427)' -t '3000' -h 'int:transient:1' -i '/home/arthur/.rvm/gems/ruby-1.9.3-p392@survey_element_test/gems/guard-1.8.0/images/failed.png' -u 'normal''\n```\n He's just using Guard Jasmine as an example, but the error is with the Guard notifier here: https://github.com/guard/guard/blob/master/lib/guard/notifiers/notifysend.rb#L51\n\nI'll take care of it...\n Wow! Just wanted to make that clear...\n\nThanks!\n  Hi, this is my gemfile:\n\nhttps://gist.github.com/ngw/73b1b405ec75a001429b\n\nAnd here is the resulting Gemfile.lock\n\nhttps://gist.github.com/ngw/fff3b9db7196985d7aff\n\nAd you can see for example Padrino is rather old (0.9.3)\n\nIf I remove all guard related gems and update the bundle, I have the latest padrino, as you can see from the updated Gemfile.lock:\n\nhttps://gist.github.com/ngw/9603909ca5f4ce3462f2\n\nAre you guys aware of this, and how can I fix it?\n I don't think this is caused by Guard. Have you tried running `bundle update` without removing guard-related gems?\n Yes, I absolutely did, and I think it's very weird too...\n\n```\nvagrant@precise64:/vagrant/hentan$ bundle update\nFetching gem metadata from https://rubygems.org/.........\nFetching gem metadata from https://rubygems.org/..\nResolving dependencies...\nUsing rake (10.0.4) \nUsing i18n (0.6.1) \nUsing multi_json (1.7.3) \nUsing activesupport (3.2.13) \nUsing addressable (2.2.8) \nUsing bcrypt-ruby (3.0.1) \nUsing builder (3.2.0) \nUsing bundler (1.3.5) \nUsing mime-types (1.23) \nUsing nokogiri (1.5.9) \nUsing rack (1.5.2) \nUsing rack-test (0.6.2) \nUsing xpath (2.0.0) \nUsing capybara (2.1.0) \nUsing coderay (1.0.9) \nUsing diff-lcs (1.2.4) \nUsing gherkin (2.12.0) \nUsing cucumber (1.3.1) \nUsing data_objects (0.10.12) \nUsing database_cleaner (1.0.1) \nUsing dm-core (1.2.0) \nUsing dm-aggregates (1.2.0) \nUsing dm-constraints (1.2.0) \nUsing dm-do-adapter (1.2.0) \nUsing dm-migrations (1.2.0) \nUsing do_postgres (0.10.12) \nUsing dm-postgres-adapter (1.2.0) \nUsing dm-timestamps (1.2.0) \nUsing dm-transactions (1.2.0) \nUsing fastercsv (1.5.5) \nUsing json (1.8.0) \nUsing stringex (1.5.1) \nUsing uuidtools (2.1.4) \nUsing dm-types (1.2.2) \nUsing dm-validations (1.2.0) \nUsing ffi (1.8.1) \nUsing formatador (0.2.4) \nUsing posix-spawn (0.3.6) \nUsing grit (2.5.0) \nUsing rb-fsevent (0.9.3) \nUsing rb-inotify (0.9.0) \nUsing rb-kqueue (0.2.0) \nUsing listen (1.1.2) \nUsing lumberjack (1.0.3) \nUsing method_source (0.8.1) \nUsing slop (3.4.5) \nUsing pry (0.9.12.2) \nUsing thor (0.18.1) \nUsing guard (1.8.0) \nUsing guard-cucumber (1.4.0) \nUsing rspec-core (2.13.1) \nUsing rspec-expectations (2.13.0) \nUsing rspec-mocks (2.13.1) \nUsing rspec (2.13.0) \nUsing guard-rspec (3.0.0) \nUsing tilt (1.3.7) \nUsing haml (4.0.2) \nUsing url_mount (0.2.1) \nUsing http_router (0.7.10) \nUsing polyglot (0.3.3) \nUsing treetop (1.4.12) \nUsing mail (2.5.4) \nUsing oj (2.0.12) \nUsing sinatra (1.2.8) \nUsing padrino-core (0.9.29) \nUsing padrino-helpers (0.9.29) \nUsing padrino-admin (0.9.29) \nUsing padrino-cache (0.9.29) \nUsing padrino-gen (0.9.29) \nUsing padrino-mailer (0.9.29) \nUsing padrino (0.9.29) \nUsing puma (2.0.1) \nUsing rabl (0.8.4) \nYour bundle is updated!\n```\n\nAs you can see it downgrades padrino...\nIf you bundle install my Gemfile what version of padrino you get?\n I also tried to remove the Gemfile.lock, just to be sure.\n I can confirm this, but I also do not understand the reason. I tried to force the latest padrino version\n\n```\ngem 'padrino', '0.11.0'\n```\n\nbut it results in the following error:\n\n```\n$ bundle                                                                                                                   2.0.0-p0\nFetching gem metadata from https://rubygems.org/.........\nFetching gem metadata from https://rubygems.org/..\nResolving dependencies...\nBundler could not find compatible versions for gem \"thor\":\n  In Gemfile:\n    padrino (= 0.11.0) ruby depends on\n      thor (~> 0.17.0) ruby\n\n    guard (>= 0) ruby depends on\n      thor (0.18.1)\n```\n\nBut this is not true! [Guard depends on Thor >= 0.14.6](https://github.com/guard/guard/blob/master/guard.gemspec#L18). I have absolutely no idea, it might be a Bundler issue.\n I confirm too, but I also get a strange output when running `bundle update`:\n\n```\n19:00:12 \u2192 bu\nFetching gem metadata from https://rubygems.org/.........\nFetching gem metadata from https://rubygems.org/..\nResolving dependencies...\nBundler could not find compatible versions for gem \"tilt\":\n  In Gemfile:\n    padrino (= 0.11.1) ruby depends on\n      tilt (~> 1.3.0) ruby\n\n    padrino (= 0.11.1) ruby depends on\n      tilt (1.4.1)\n```\n   [![Coverage Status](https://coveralls.io/builds/40266/badge)](https://coveralls.io/builds/40266)\n\nChanges Unknown when pulling **6f2ccd6f89db90eea117e3b0d25fe400de0bcda2 on aspiers:master** into *\\* on guard:master**.\n  Points to:\nhttps://github.com/guard/guard/wiki/Add-proper-Readline-support-to-Ruby-on-Mac-OS-X\n\nShould point to:\nhttps://github.com/guard/guard/wiki/Add-Readline-support-to-Ruby-on-Mac-OS-X\n [![Coverage Status](https://coveralls.io/builds/38275/badge)](https://coveralls.io/builds/38275)\n\nChanges Unknown when pulling **d24fb3906125ab96d79d96487e4cc3f8d28cf294 on theroux:master** into *\\* on guard:master**.\n  Filesystem adapters are now handled by the Listen gem.\n\nTherefore I propose to delete this entire section, since this is all handled transparently. I have created a Wiki page and moved the content there. https://github.com/guard/guard/wiki/Efficient-Filesystem-Handling\n [![Coverage Status](https://coveralls.io/builds/35761/badge)](https://coveralls.io/builds/35761)\n\nCoverage remained the same when pulling **df14312317c29d5cc5d4f990b515f2aeabca89bb on tilsammans:patch-1** into **b48f736171a34400505ebf5786d012bda8389839 on guard:master**.\n Great! Thanks a lot.\n Wow! That was quick!\n My pleasure. The introduction of Listen certainly was an improvement.\n  If this pull request seems overkill to you, please read [my previous comment](https://github.com/guard/guard/pull/414#issuecomment-15947366) ;-)\n [![Coverage Status](https://coveralls.io/builds/33124/badge)](https://coveralls.io/builds/33124)\n\nCoverage remained the same when pulling **c82dd0fcea5a7760e5e095d9090d73f23b3951a6 on aspiers:master** into **b11fcb657657aa7f4946c33e6d2cf6ed55797d35 on guard:master**.\n  Nice list! :+1:\n Is it really a good idea to returns a single Plugin/Group if there's only one matching with Guard.plugins / Guard.groups ? The most logical for me would be to always returns an array.\n The rest is great, thanks @rymai !\n Very, very nice! Thanks a lot.\n @rymai Great, thanks!\n Perfect!\n  Looks super nice to me, very good job @rymai !\n Can you rebase on v2.0 branch, so it should be tested on Travis CI. Thanks!\n [![Coverage Status](https://coveralls.io/builds/20634/badge)](https://coveralls.io/builds/20634)\n\nCoverage decreased (-0.07%) when pulling **da2f41196ffbdb049e77f0f8c9029c08bbadbe9e on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n Thanks, we'll wait other @guard/core-team feedback :)\n [![Coverage Status](https://coveralls.io/builds/20647/badge)](https://coveralls.io/builds/20647)\n\nCoverage increased (+0.11%) when pulling **f98aef9b323bd89dffe4b6c0229587112df1539f on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n Wow. Awesome work. That will increase the code climate score definitely. Thanks a lot!\n [![Coverage Status](https://coveralls.io/builds/22058/badge)](https://coveralls.io/builds/22058)\n\nCoverage decreased (-0.05%) when pulling **c5c53ee078625e822a5f7b04fd22c2c888acdeb1 on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n [![Coverage Status](https://coveralls.io/builds/22548/badge)](https://coveralls.io/builds/22548)\n\nCoverage decreased (-0.12%) when pulling **a1320f6ab5191e0f58e173e5bc863440f252f2e7 on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n [![Coverage Status](https://coveralls.io/builds/22559/badge)](https://coveralls.io/builds/22559)\n\nCoverage increased (+0.15%) when pulling **e3c86085533d833e9057019628885a94baf5f7f8 on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n [![Coverage Status](https://coveralls.io/builds/22562/badge)](https://coveralls.io/builds/22562)\n\nCoverage decreased (-0.03%) when pulling **e3c86085533d833e9057019628885a94baf5f7f8 on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n I have been thinking about this a fair bit and architecturally I see a few significant problems with Guard that are very tricky to address. \n\nMy current dilema\n\nI have a test suite that takes 3 minutes to run, when I save a spec I would like to \"interrupt\" the suite, run the spec and then continue with the rest of the tests. However ... \n1. There is no provision to deliver events to an already running task.\n2. There is no way to return \"async\" status and eventual status\n3. There is not provision in guard to deliver the actual name of the file touched coupled with the test (which helps me decide on what to do) \n\nNow, I am not sure if you could easily write a simplistic tmux clone in Ruby, or simply use the tmux-ruby gem to split the outputs of async tasks ... this is all super mighty ambitious \n\n3) is clearly in scope for 2.0 api, but I am concerned I will still not get exactly what I want unless there is a way of splitting the output. (pry / control) in one tmux pane, (output in another) \n\nDon't know what you think about all of this raising so you can have a think \n Having each guard/group running in there own thread, would allow us to interact with them and running them concurrently. It could be very Interesting. Also using Celluloid for doing that would be great :)\n @thibaudgg fyi I wrote an an async runner for Discourse now, https://github.com/discourse/discourse/blob/master/lib/autospec/runner.rb will blog about it, using the notify gem but read through the source it gets involved and multithreaded ... really wish I could just sit on guard there. \n @guard/core-team what do you think of @SamSaffron use case?\n The use case is great and we discussed very similar things already, but no one had time to implement it :)\n @SamSaffron do you want to handle it? :)\n @thibaudgg I have been thinking about this, I think the biggest issue here is nailing the API ... was thinking something along these lines \n\n``` ruby\ndef run_on_changes(paths, original_paths, finish_callback)\n\n  # for async \n   :async\nend\n\ndef status\n   # :running, :idle\nend\n\n# somewhere else when done \nfinish_callback.call(result)\n\n```\n @thibaudgg \nI think that would work fine, you would not need to send a callback in, one change though is that you would probably need to track who you are ... so \n\n```\ndef run_on_changes(paths, original_paths, id)\n\n  # for async \n   :async\nend\n\n# then on complete\nGuard.publish(id, :complete, results)\n```\n I think a per-run id is the right thing to do, that way when you handle the messages you can validate that you are getting what you expect and not some bogus message from a previous run.\n nice! sounds like a plan\n\nOn Mon, May 13, 2013 at 4:36 PM, Thibaud Guillaume-Gentil <\nnotifications@github.com> wrote:\n\n> Ok sounds good. Let me finish the Listen rewrite (count maybe 4-6 weeks)\n> and I'll start the Celluloid transition for Guard 2.0\n> \n> @guard/core-team what do you think of using Celluloid for Guard 2.0? I'm\n> quite happy with if for Listen (no commit published yet sadly... big big\n> rewrite :))\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/guard/guard/pull/431#issuecomment-17794790\n> .\n [![Coverage Status](https://coveralls.io/builds/42244/badge)](https://coveralls.io/builds/42244)\n\nCoverage increased (+0%) when pulling **232b1537bec5831075fd1a4a86be64e72e7f91f0 on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n [![Coverage Status](https://coveralls.io/builds/42800/badge)](https://coveralls.io/builds/42800)\n\nCoverage increased (+0%) when pulling **29984f70c252fa51220929b46a1f3f012ecdde75 on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n [![Coverage Status](https://coveralls.io/builds/43547/badge)](https://coveralls.io/builds/43547)\n\nCoverage increased (+0%) when pulling **2b6583a28650fdcb9fa43ebcc77956c3f83ab8cd on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n [![Coverage Status](https://coveralls.io/builds/44945/badge)](https://coveralls.io/builds/44945)\n\nCoverage increased (+0%) when pulling **9b4e9478124e8280ec142430579436192eaedcb3 on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n [![Coverage Status](https://coveralls.io/builds/46832/badge)](https://coveralls.io/builds/46832)\n\nCoverage increased (+0%) when pulling **fdbb65292e4bd55d13806e937169b1586cd0d439 on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n [![Coverage Status](https://coveralls.io/builds/72097/badge)](https://coveralls.io/builds/72097)\n\nCoverage decreased (-0%) when pulling **708c58f9288d4f49bfbfc23a11be87d904cf564c on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n [![Coverage Status](https://coveralls.io/builds/74201/badge)](https://coveralls.io/builds/74201)\n\nCoverage increased (+0%) when pulling **b99ccc27a9e918578c8beb5ce9845616cfcc5dad on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n [![Coverage Status](https://coveralls.io/builds/97595/badge)](https://coveralls.io/builds/97595)\n\nCoverage remained the same when pulling **8d350744acd6e66be2744d5c57f93ed55b50019e on v2.0_refactorings** into **31a495627179575660d864cf71f9e328e05b3873 on v2.0**.\n  So I have\n\n``` ruby\nguard 'rspec', :cli => \"-f d\", :spec_paths => spec_paths do\n  # ... \n  watch('config/routes.rb')  { \"spec\" }\n  # ...\nend\n```\n\nin my Guardfile. Now when I change `routes.rb`, no specs are run. Starting guard w/ `-d` tells me that guard registers the change but I can't figure out more of the output:\n\n```\n12:36:24 - DEBUG - Stop interactor\n12:36:24 - DEBUG - Command execution: stty gfmt1:cflag=4b00:iflag=6b02:lflag=200005cf:oflag=3:discard=f:dsusp=19:eof=4:eol=ff:eol2=ff:erase=7f:intr=3:kill=15:lnext=16:min=1:quit=1c:reprint=12:start=11:status=14:stop=13:susp=1a:time=0:werase=17:ispeed=38400:ospeed=38400 2>/dev/null\n12:36:24 - DEBUG - Command execution: stty -g 2>/dev/null\n12:36:24 - DEBUG - Start interactor\n```\n\nAny idea on how to debug this further?\n A Guardfile is a normal Ruby file that can be debugged. You can any of the available debugger gems available. A more minimalistic approach is to simply use `puts` to output debug messages like:\n\n``` Ruby\nguard 'rspec', :cli => \"-f d\", :spec_paths => spec_paths do\n  watch('config/routes.rb')  do\n    puts 'Routes have been modified'\n    \"spec\"\n  end\nend\n```\n\nThis comes in handy when you have match groups in your regex:\n\n``` Ruby\nguard :cucumber do\n  watch(%r{^features/step_definitions/(.+)_steps\\.rb$}) do |m| \n    puts 'Matching', m.inspect\n    Dir[File.join(\"**/#{ m[1] }.feature\")][0] || 'features'\n  end\nend\n```\n\nIn your case I think you need to return `spec_paths` to run all specs:\n\n``` Ruby\nguard 'rspec', :cli => \"-f d\", :spec_paths => spec_paths do\n  # ... \n  watch('config/routes.rb')  { spec_paths }\n  # ...\nend\n```\n I have used the following method to check if the watch gets triggered:\n\n``` ruby\n# requires a block!\ndef debug_watch(regex, &action)\n  watch(regex) do |match|\n      puts \"Watcher #{ regex.inspect } triggered.\"\n      action.call(match).tap do |result|\n        puts \"result: #{result.inspect}\"\n      end\n  end\nend\n```\n\nSince it didn't output anything, I assume the problem lies with matching the watch to the changed file. Anyhow, I keep you posted. Thanks for the input!\n Allright, I just figured out that `run_on_changes` isn't even triggered for the file (except for a file in my IDE folder). Strange thing, since I have not set a specific watchdir:\n\n```\n::Guard.options\n=> {\"clear\"=>false,\n \"notify\"=>true,\n \"debug\"=>false,\n \"group\"=>[:specs],\n \"plugin\"=>[],\n \"no_vendor\"=>false,\n \"watch_all_modifications\"=>false,\n \"no_interactions\"=>false,\n \"no_bundler_warning\"=>false,\n \"show_deprecations\"=>false,\n \"force_polling\"=>false}\n```\n\nIt also can't be an IDE problem, since the method is also not triggered if I do a direct `touch config/routes.rb`.\n ok, digging a bit deeper, the routes.rb file wasn't even in the Listener's directory_record paths, but therefore in the `directory_record.ignoring_patterns`! Thing is, the only place I ignore this file is in a different guard. Is `ignore` not scoped by guard?\n\nCommenting out the `ignore` in the other guard works as a tmp. solution.\n Alright then, can you (or I later) add this information to the Readme as it is quite vital? Or is it stated somewhere else and I just read over it?\n Yeah, I see now that the methods that are scoped, like callback and watch, are scoped in the examples. I feel that it is a bit implicit, but as long as nobody else stumbles across this it might be only my perception :)\n  We have a lot of information in the README, but having all within a single document makes it hard to find. We also have a wonderful logo to put on the website and @thibaudgg has reserved the domain since over a year. So let's create a simple site with what we have now.\n\nI suggest to take a static site generator, using a responsive framework like Zurb Foundation and move the README contents there.\n Foundation has some templates to get easy started: http://foundation.zurb.com/templates.php\n What about http://documentup.com I think it could still be a good fit, and I like the sync with our README.\n\nHer gem use it: http://remiprev.github.io/her/\n That looks great. I have some time to spend on Guard next week, so I'l give it a try.\n Great thanks, I'm fighting with Listen & Windows & jruby on my side :)\n I noticed the recent activity on the Listen repo, it's great and provides much groundwork for many popular Ruby gems.Thanks a lot for that! However it makes me a sad to see you on a Mac solving Windows issues and also Maher on Ubuntu writing WDM to solve the bad file watcher problematic on Windows. Where are the Windows guys to help solve the problems on their own environment?\n That's a really good question! :)\n I played a bit with DocumentUp and its configuration values and you can see the latest docs at http://documentup.com/guard/guard\n\nDocumentUp allows you to set some minimal configuration options and you can even change the configuration as parameter on the hosted site, e.g\n- [New theme](http://documentup.com/guard/guard?config={\"name\":\"Guard\",\"travis\":true,\"twitter\":[\"mahersalam\",\"netzpirat\",\"rymai\",\"thibaudgg\"]})\n- [Old theme](http://documentup.com/guard/guard?config={\"name\":\"Guard\",\"theme\":\"v1\",\"travis\":true,\"twitter\":[\"mahersalam\",\"netzpirat\",\"rymai\",\"thibaudgg\"]})\n\nBe aware that a wrong config object brings the server down, but they seem to have a watchdog that brings it up again after some time :p\n\nThe generated site is nice, but the new theme doesn't add much value over the current README. I like the old theme better, because it gives you the benefit of a fixed menu for quick navigation.\n\nBasically we just need to add a simple config file, enable the service hook and we're fine, but a custom domain is not possible until they provide subdomains instead a path to access the documentation. Still, it gives some value for a minimal effort.\n\nI also played a bit with the [Guard GitHub wiki](https://github.com/guard/guard/wiki) and added a sidebar and a footer. Sure, it's definitely less styled than the DocumentUp site, but is more flexible and it's very easy for people to contribute. We also can set a header, footer and sidebar per subfolder, which gives us additional flexibility in structuring the documents.\n\nThoughts?\n Great, I'll setup GH pages for DocumentUp and move some information to the wiki. What was the domain name you reserved? Can you setup the CNAME for `guard.github.io`?\n perfect!\n Finally a minimal page is available at http://guardgem.org/ \n :heart: \n Very minimal at the moment, but I'll pimp it a bit tonight.\n  I see an increasing interest in using Guard programmatically on StackOverflow and in the issues, but the API feels half baked. Some method are dependent in the order they will be called (try `Guard.setup` before `Guard.start`) and using Listen in non-blocking mode make the API really cumbersome, because you need to check the Guard running status from the outside.\n- [x] Review the API on the Guard module general\n- [x] Make API calls not order independent\n- [x] Provide sensible default options also for the API (and not only the cli) (See #423)\n- [x] Review Listen integration, preferably use Listen by default in blocking mode\n- [x] Provide a Rake Task wrapper (See [guard-jasmine](https://github.com/guard/guard-jasmine/blob/master/lib/guard/jasmine/task.rb) as example) to start Guard, run a plugin or a group once\n- [x] Update the wiki page [Programmatic use of guard](https://github.com/guard/guard/wiki/Programmatic-use-of-guard)\n Great. Then I start with the deprecations and come over to help when I'm done. I suggest that we all push an empty feature branch, so others see what we want to work on.\n @rymai I like it\n That's a great suggestion. However we need to ensure that deprecations for plugin developers doesn't bother normal users of a plugin.\n Yeah, I'll take care of it later, once Listen rewrite will be done. I think we can check it now.\n  All removals must be properly documented in a migration guide.\n- [x] Remove `watch_all_modifications` option (cli and guard module)\n- [x] Remove `no_vendor` options (cli and guard module)\n- [x] Remove `ignore_paths` DSL method\n- [x] Remove interactor deprecation (dsl)\n- [x] Remove `reset_color` from ui.\n- [x] Remove `match_file?` from watcher.\n\nThe deprecation of `run_on_change` and `run_on_deletion`  have been silenced by default and since it would break a lot of the plugin ecosystem, I vote for removing the deprecation and just keep it as an alternative for the preferred methods. (See #298)\n- [x] Remove `run_on_change` and `run_on_deletion` deprecation message\n I agree on keeping `run_on_change`and `run_on_deletion` as aliases. Great!\n Sure, I have some time next Thursday! If you want it earlier, please go on...\n Awesome!\n Very nice!\n  - [x] Remove 1.8.7, ree, jruby-18mode and rbx-18mode from Travis\n- [x] Remove 1.8.7 from Rakefile\n- [x] Convert Hashes to 1.9 style (code and documentation)\n- [x] Cleanup [dsl_describer_spec.rb](https://github.com/guard/guard/blob/master/spec/guard/dsl_describer_spec.rb#L64)\n- [x] Make the [notifier list a Hash](https://github.com/guard/guard/blob/master/lib/guard/notifier.rb#L58)\n- [x] Update documentation\n I like that, I'll handle it once it's done on `Listen`.\n Yeah `Listen` still need some work, would be great if you can handle it. I know you we'll like doing that! :) Thanks!\n  So there is [this wiki entry on how to run guard with Rake tasks](https://github.com/guard/guard/wiki/Use-Guard-programmatically-cookbook).\n\nFirst, there seems to be a couple of things wrong with this entry. It seems as if the following is enough, since `Guard.setup` already runs `Guard::Dsl.evaluate_guardfile`:\n\n```\ntask :run_all do\n    require 'guard'\n    Guard.setup\n    Guard.run_all group: :all_specs\n  end\nend\n```\n\nHowever, I stumbled accross two issues here: First, when I have a default scope in my Guardfile (`scope groups: :all_specs`) I get the following error\n\n```\n11:52:38 - ERROR - Invalid Guardfile, original error is:\n> [#] undefined method `empty?' for nil:NilClass\n```\n\nRemoving the default scope results in the following error [in the runner.rb](https://github.com/guard/guard/blob/master/lib/guard/runner.rb#L172).\n\n```\n$ rake specs:run_all\n11:54:43 - INFO - Run all_specs\nrake aborted!\nundefined method `name' for :all_specs:Symbol\n/Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/guard-1.6.2/lib/guard/runner.rb:174:in `block (2 levels) in scoped_guards'\n/Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/guard-1.6.2/lib/guard/runner.rb:173:in `catch'\n/Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/guard-1.6.2/lib/guard/runner.rb:173:in `block in scoped_guards'\n/Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/guard-1.6.2/lib/guard/runner.rb:172:in `each'\n/Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/guard-1.6.2/lib/guard/runner.rb:172:in `scoped_guards'\n/Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/guard-1.6.2/lib/guard/runner.rb:53:in `block in run'\n/Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/lumberjack-1.0.3/lib/lumberjack.rb:27:in `unit_of_work'\n/Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/guard-1.6.2/lib/guard/runner.rb:52:in `run'\n/Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/guard-1.6.2/lib/guard.rb:238:in `block in run_all'\n/Users/robin/.rvm/gems/ruby-2.0.0-p0/gems/guard-1.6.2/lib/guard.rb:364:in `block in within_preserved_state'\n....\n```\n\nIt seems, as if the group must be provided with a `Guard::Group`. Using `Guard.run_all group: Guard::Group.new(:all_specs)` works.\n\nNow I propose 3 things:\n1. ensure that `scopes[:groups]` contains `Guard::Group`s, even if run_all is passed Symbols.\n2. Update the wiki entry\n3. fix error that occurs when a `scope` is defined in the Guardfile (maybe we should create a new issue for that)\n\nNow I might have gotten this all totally wrong, so looking forward to your opinion :)\n   #413 was already referenced.  Am I missing something?\n OK I added refs to the other pull requests.  This is another reason to never directly push and instead issue pull requests - it's nicer to refer to pull request IDs than commit SHAs.\n\n I've already way exceeded my time budget on this, so if you find any other nits to pick, please fix them yourself :)\n  This should get Travis builds working again, and fixes a few other things.\nPlease don't merge until the Travis build for the pull request is green.\n [![](https://coveralls.io/builds/13435/badge.png)](https://coveralls.io/builds/13435)\n\nCoverage increased (+0.1%) when pulling **c90f42bf4fbae56394f3bdd09fd81e551b95141d on aspiers:master** into **8f8f01efc795dc7c3dc44793abf3072536d698f3 on guard:master**.\n\n[View Details](https://coveralls.io/builds/13435)\n Thanks @aspiers , tmux specs failed on [`2.0.0`](https://travis-ci.org/guard/guard/jobs/6050550) & [`jruby-18mode`](https://travis-ci.org/guard/guard/jobs/6050553) can you have a look please? Thanks!\n Yeah I'm already looking - I half-expected those failures ... I have seen them on 1.9.3 too.\n @thibaudgg I'm struggling to understand why @rudicode added `tmux set quiet on/off` in d0451826d - do you know?\n No idea, I don't use `tmux` myself.\n Don't worry, I've worked around it ...\n [![](https://coveralls.io/builds/13510/badge.png)](https://coveralls.io/builds/13510)\n\nCoverage increased (+0.11%) when pulling **ed1bb0fc5298ddb90f1039cc0825d92a537c227e on aspiers:master** into **8f8f01efc795dc7c3dc44793abf3072536d698f3 on guard:master**.\n\n[View Details](https://coveralls.io/builds/13510)\n Alright!  I think this is good to merge now.  Please sanity check b5a2f01 first though - that is the only risky commit.  All the others are very low risk.\n Great thanks!\n I'll tomorrow!\n Really good point! :)\n I know I have push access (thanks for that ;-) but I think it's a bad idea to push directly because it makes the changes less visible and also circumvents Travis - it was a direct push which broke Travis last time...\n I didn't know about `[ci skip]` before - that explains the previous breakage.  However, it is orthogonal to direct pushes.  Even if you issue a pull request containing `[ci skip]`, it still gives other people a chance to peer review your changes.  This is good even when altering READMEs etc. because documentation can have bugs too :)  So I would suggest that it is a good idea to _never_ direct push except for real emergencies.\n\nI would have updated the `CHANGELOG.md` but there are no instructions on how to add new sections after a release.  Currently `VERSION` is still `1.7.0` but new changes cannot go in the `1.7.0` section of `CHANGELOG.md`.  I've just looked at the history and it seems that creating a new `## Master` section is the way to go.\n Done: #417\n  I was trying to quickly look something up in the official docs and followed the link from the [official gem](https://rubygems.org/gems/guard/) page (not sure why...), but it links to some really outdated version: http://rubydoc.info/github/guard/guard/master/frames (actually says:\nVERSION =\nThe current gem version of Guard\n'1.0.2')\n\nTried to see if this is in the gemspec of something I can create a pull request for but couldn't, might be something which needs to be manually updated on rubygems.org?\n  This allows `FileNotifier` to not be `available?` when it is not configured with a `:path`.\n\nThere are also a few other places where `.available?` uses a `DEFAULTS` hash to check availability, but could not consult user options. This would theoretically be a bug if the user configured a notifier in such a way that it would only be considered available with their options.\n BTW, \nThere was one failing test before this pull-request. It is still failing.\n\n```\n  1) Guard::Dsl#callback creates callbacks for the guard\n     Failure/Error: described_class.evaluate_guardfile(:guardfile_contents => '\n       Guard received :add_guard with unexpected arguments\n         expected: (\"dummy\", #<RSpec::Mocks::ArgumentMatchers::AnyArgMatcher:0x007f984135be30>, #<RSpec::Mocks::ArgumentMatchers::AnyArgMatcher:0x007f984135be08>, {:group=>:default})\n              got: (\"shell\", [#<Guard::Watcher:0x007f98416bde70 @action=#<Proc:0x007f98416bde98@Inline Guardfile:11>, @pattern=\".guard_result\">], [], {:group=>:default})\n     # ./lib/guard/dsl.rb:354:in `guard'\n     # Inline Guardfile:10:in `instance_eval_guardfile'\n     # ./lib/guard/dsl.rb:119:in `instance_eval'\n     # ./lib/guard/dsl.rb:119:in `instance_eval_guardfile'\n     # ./lib/guard/dsl.rb:74:in `evaluate_guardfile'\n     # ./spec/guard/dsl_spec.rb:504:in `block (3 levels) in <top (required)>'\n```\n [![](https://coveralls.io/builds/10910/badge.png)](https://coveralls.io/builds/10910)\n\nChanges Unknown when pulling **abcb4e20afa63a99ec4affb900358de3b77a0445 on amiel:available_options** into *\\* on guard:master**.\n\n[View Details](https://coveralls.io/builds/10910)\n  Option to write Guard notifications to a file. Each notification will overwrite the file. This allows other commands to be run based on the status of other guard commands.\n\nI tried hard not to say \"meta-guard\" in the README.\n\nPlease see this relevant discussion: https://groups.google.com/forum/?fromgroups=#!topic/guard-dev/wz5zlLJUEQA.\n\nOne thing to note. I wanted to disable the notifier when no `path` option is provided. Right now that happens in [`.notify`](https://github.com/amiel/guard/blob/file_notifier/lib/guard/notifiers/file_notifier.rb#L41) as `.available?` doesn't have access to the notification options.\nSince this is still an internal api, it seems like it could still be possible to change `.available?(silent = false)` to `.available?(options = {}, silent = false)`. Thoughts?\n @netzpirat cool, thanks! I'll tackle the `available?` change in a separate pull-request.\n This is awesome, thank you Amiel!\n @rymai I'm glad I could help.\n\nFor more on how I'm using it: https://gist.github.com/amiel/5258723\n\nFor some reason, my guard-shell doesn't seem to run after the first test run (I'm pretty sure the notification is firing and writing to the file though), but it does fire after every subsequent run.\n  `Installing terminal-table (1.4.5) WARNING: terminal-table-1.4.5 has an invalid nil value for @cert_chain`\nran across my terminal while running bundler. From my Gemfile.lock and your guard.gemspec it looks like guard is the source of this terminal-table dependency.\n\n---\n\n[This ticket was opened 2 months ago](https://github.com/visionmedia/terminal-table/issues/29) on terminal-table repo and no response yet.\n\nDon't know how serious this issue is, but thought I would let you know in case you can drop the dependency or something as from I read the maintainer of that project might not be maintaining anymore.\n +1, guard only works with terminal-table (1.4.4) for me right now.\n Awesome, thank you @netzpirat!\n Cool, just let me know if you have questions or issues. formatador hasn't changed much in a while, but happy to help out and/or fix stuff if it comes up (I still use it regularly in lots of stuff, it's just stable).\n Thanks to @netzpirat and @geemus for knocking this out. A round of :+1:  for each of you. I appreciate your responsiveness. Love guard.\n Awesome, thanks!\n  This adds the ability to trigger Amazon SNS notifications.\n That looks really nice! Can you add some specs like the [other notifiers](https://github.com/guard/guard/tree/master/spec/guard/notifiers) have?\n Sure, will do.\n\nOn Thu, Feb 7, 2013 at 8:50 AM, Michael Kessler notifications@github.comwrote:\n\n> That looks really nice! Can you add some specs like the other notifiershttps://github.com/guard/guard/tree/master/spec/guard/notifiershave?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/guard/guard/pull/399#issuecomment-13241876.\n Totally understand, just haven't had time to add them yet, but I plan to\nand will reopen when they are done.\n\nThanks\n\n## \n\nKyle Campos\n_Twitter_: @kcampos http://www.twitter.com/kcampos\n_Phone_: 623-455-6180\nLinkedIn Profile http://www.linkedin.com/in/kylecampos/\n\nOn Tue, Mar 5, 2013 at 10:47 AM, Michael Kessler\nnotifications@github.comwrote:\n\n> I hope you understand that I cannot merge the pull request without specs\n> and I'm going to close this PR now because of inactivity. If you decide to\n> add some specs, please reopen the pull request and I'll happily review it.\n> Thanks a lot.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/guard/guard/pull/399#issuecomment-14454100\n> .\n  I use tmux messages for all kinds of things. When using the tmux notifier in Guard it messes up the settings for these messages. This change restores the options immediately after the notification disappears so that other messages display with the defaults.\n We cannot merge this currently, because it's not working on all Rubies Guard supports. Are you planning to change your implementation or should this PR be closed?\n Thanks for the update. Unfortunately the specs for the Tmux notifier are failing and need to be updated according to the changes in the implementation.\n Yes, sorry, I was in a hurry and didn't check the specs. Now they should be all fixed, but I only tested it on 1.9.3.\n Thanks for the update, but I still can't merge this, since it [fails on Travis](https://travis-ci.org/guard/guard/builds/4645349). Can you have a look?\n This failure is puzzling. I could only reproduce the failure once on Ruby 1.8.7, but it disappeared as soon as I started debugging. After that I could not reproduce again. Not even after removing all debugging messages an restoring commit state.\n I think this may be related to `Thread.new` because thread scheduling is not guaranteed nor in strict order. You can workaround this by just make it run inside the current thread with something like:\n\n``` ruby\nbefore do\n  Thread.stub(:new).and_yield\nend\n```\n\nin the spec suite (I didn't test the above snippet, but you get the idea). \n Of course. I haven't had time to get to the bottom of this. I'll reopen if\nI can deal with this in the future.\n  I get \"Error sending notification with gntp: Register failed\" on every Guard run.\n- Growl version 1.4\n- guard (1.6.1)\n- ruby_gntp (0.3.4)\n\n``` ruby\n# Guardfile\nguard :test do\n  watch(%r{^lib/(.+)\\.rb$})\n  watch(%r{^test/.+_test\\.rb$})\n  watch('test/test_helper.rb')  { \"test\" }\nend\n```\n\nWhen I go through the examples in [the ruby_gntp README](https://github.com/snaka/ruby_gntp/blob/master/README), the notifications work fine. Growl is running and the network tab on its preference pane shows that it is listening for incoming network notifications.\n That code works great on Growl 1.4. Do I need to add some setup to my Guardfile corresponding to the following?\n\n``` ruby\ngntp = ::GNTP.new('Guard', '127.0.0.1', '', 23053)\ngntp.register({\n  :app_icon => File.expand_path(File.join('images', 'guard.png')),\n  :notifications => [\n    { :name => 'notify', :enabled => true },\n    { :name => 'failed', :enabled => true },\n    { :name => 'pending', :enabled => true },\n    { :name => 'success', :enabled => true }\n  ]\n})\n```\n No, I switched to one of the other Growl gems.\n Hi! I have same problem.\n\nI try send notification on local machine from remote server.\n\nUbuntu 13.04\n[gol](http://mattn.github.io/growl-for-linux/) installed from repository\ngem ruby_gntp\n\nThe example using gntp above work fine on local machine, but\non remote server I take 'ruby/gems/1.9.1/gems/ruby_gntp-0.3.4/lib/ruby_gntp.rb:91:in `register': Register failed (RuntimeError)`\n\nI use remote forward in ssh\n\n```\n  RemoteForward 23053 localhost:23053\n```\n\nIt seems to me where I was wrong :)\n\nThanks!\n @maksimr this looks like a Ruby GNTP issue, not much we can do from our side.\n Thanks!\nYes, I understand, but looking at their repository seems that the escort had left him.\n\nP.S.\nI noticed that it works through time, periodically it send notification ... %)\n\nP.P.S\n\nProblem in [growl for linux](https://github.com/mattn/growl-for-linux) https://github.com/mattn/growl-for-linux/issues/39\n  It stinks to report this, since I'm traveling and can't do anything about it, but:\n\nhttp://stackoverflow.com/questions/14412725/guard-fails-on-windows-7-with-runtime-error\n\nI have no idea what would've changed in that area of the code, especially not in that minor-minor release. Freenode/#pry is aware of it, but I don't know who can do anything in the short term.\n I think there's no way it's due to 0.9.11.3 after seeing [the diff between 0.9.11.2 and 0.9.11.3](https://github.com/pry/pry/compare/v0.9.11.2...v0.9.11.3)!\n I should've said 0.9.11.*, which is pretty new as a whole.\n\nIt was tested on Windows, and with Guard, but not with Guard on Windows.\n\nDo we have replication of the problem? I won't be able to get to a Windows machine for a couple days.\n\n-------- Original message --------\nFrom: R\u00e9my Coutable notifications@github.com \nDate: 2013/01/19  6:49 AM  (GMT-06:00) \nTo: guard/guard guard@noreply.github.com \nCc: \u2608king rkingithub@sharpsaw.org \nSubject: Re: [guard] Windows broken due to pry 0.9.11.3 ? (#394) \n\nI think there's no way it's due to 0.9.11.3 after seeing the diff between 0.9.11.2 and 0.9.11.3!\n\n\u2014\nReply to this email directly or view it on GitHub.            \n I ran successfully\n\n```\nbundle exec guard -i\n```\n\nI do not even know why I would want/need pry then? I see my notifications show up, that is all I wanted for a start, could that not be the default then anyway?\n Thanks for the info on the useful commands.\n\nOn Mon, Jan 21, 2013 at 7:39 AM, Michael Kessler\nnotifications@github.comwrote:\n\n> The Guard interactor is based on Pry and offers some useful commandshttps://github.com/guard/guard#interactionswhich are of interest for all users, so we like to have it enabled by\n> default. For Ruby developers Pry offers a huge feature set to examine the\n> runtime and is extremely useful.\n> \n> It looks like the issue happens only with the latest Pry minor releases\n> (0.9.11.x) on Windows and it's likely that it will be fixed soon.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/guard/guard/issues/394#issuecomment-12479053.\n @rking have you had a chance to look at this yet?\n I just tested this. I had no problem both with Pry `0.9.10` and Pry `0.9.11.4`.\n\n[Original size](http://img-fotki.yandex.ru/get/6438/98991937.10/0_8e855_4018be99_orig)\n\n![](http://img-fotki.yandex.ru/get/6438/98991937.10/0_8e855_4018be99_orig)\n\nThey both do have other issue, though. After I edit my test, Guard is running it. After the process is finished, I can't type anything in the console anymore.\n I was testing on Ruby `1.9.3p362`.\n It was totally blocked. But what's interesting, you _can_ type stuff during the time when tests are being executed (the characters are not echoed, though) and it will be executed after the tests are finished.\n Makes sense. I understand your point. Also my Ruby/RSpec/pry knowledge seems to be too limited to help, I just run a bundle update, but still face the same issue on Windows 7 64bit.\n\n```\nC:\\Users\\wolfgang\\RubymineProjects\\Koreanisch>bundle update\nFetching gem metadata from https://rubygems.org/.........\nFetching gem metadata from https://rubygems.org/..\nUsing rake (10.0.3)\nUsing i18n (0.6.1)\nUsing multi_json (1.5.0)\nUsing activesupport (3.2.11)\nUsing builder (3.0.4)\nUsing activemodel (3.2.11)\nUsing erubis (2.7.0)\nUsing journey (1.0.4)\nUsing rack (1.4.4)\nUsing rack-cache (1.2)\nUsing rack-test (0.6.2)\nUsing hike (1.2.1)\nUsing tilt (1.3.3)\nUsing sprockets (2.2.2)\nUsing actionpack (3.2.11)\nUsing mime-types (1.19)\nUsing polyglot (0.3.3)\nUsing treetop (1.4.12)\nUsing mail (2.4.4)\nUsing actionmailer (3.2.11)\nUsing arel (3.0.2)\nUsing tzinfo (0.3.35)\nUsing activerecord (3.2.11)\nUsing activeresource (3.2.11)\nUsing bcrypt-ruby (3.0.1)\nUsing bundler (1.3.0.pre.2)\nUsing nokogiri (1.5.6)\nUsing ffi (1.3.1)\nInstalling childprocess (0.3.7)\nUsing rubyzip (0.9.9)\nUsing websocket (1.0.6)\nInstalling selenium-webdriver (2.29.0)\nUsing xpath (1.0.0)\nUsing capybara (2.0.2)\nUsing coderay (1.0.8)\nUsing coffee-script-source (1.4.0)\nUsing execjs (1.4.0)\nUsing coffee-script (2.2.0)\nUsing rack-ssl (1.3.2)\nUsing json (1.7.6)\nUsing rdoc (3.12)\nInstalling thor (0.17.0)\nUsing railties (3.2.11)\nUsing coffee-rails (3.2.2)\nUsing diff-lcs (1.1.3)\nUsing listen (0.7.2)\nUsing lumberjack (1.0.2)\nUsing method_source (0.8.1)\nUsing slop (3.4.3)\nUsing pry (0.9.11.2)\nUsing guard (1.6.1)\nUsing rspec-core (2.12.2)\nUsing rspec-expectations (2.12.1)\nUsing rspec-mocks (2.12.1)\nUsing rspec (2.12.0)\nUsing guard-rspec (2.4.0)\nUsing spork (0.9.2)\nUsing guard-spork (1.4.1)\nUsing hashie (1.2.0)\nUsing jquery-rails (2.2.0)\nUsing omniauth (1.1.1)\nUsing omniauth-identity (1.1.0)\nUsing pg (0.14.1)\nUsing rails (3.2.11)\nUsing rb-fchange (0.0.6)\nUsing rb-fsevent (0.9.3)\nUsing rb-inotify (0.9.0)\nUsing rb-notifu (0.0.4)\nUsing rspec-rails (2.12.2)\nUsing sass (3.2.5)\nUsing sass-rails (3.2.6)\nUsing sqlite3 (1.3.7)\nUsing uglifier (1.3.0)\nUsing wdm (0.0.3)\nUsing win32console (1.3.2)\nYour bundle is updated! Use `bundle show [gemname]` to see where a bundled gem i\ns installed.\n\nC:\\Users\\wolfgang\\RubymineProjects\\Koreanisch>bundle exec guard\n11:51:20 - INFO - Guard uses Notifu to send notifications.\n11:51:20 - INFO - Guard uses TerminalTitle to send notifications.\nC:/Ruby193/lib/ruby/gems/1.9.1/gems/pry-0.9.11.2/lib/pry/command_set.rb:216:in `\nalias_command': Command: `help` not found (RuntimeError)\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard/interacto\nr.rb:135:in `block in create_command_aliases'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard/interacto\nr.rb:134:in `each'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard/interacto\nr.rb:134:in `create_command_aliases'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard/interacto\nr.rb:95:in `initialize'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard.rb:161:in\n `new'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard.rb:161:in\n `setup_interactor'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard.rb:82:in\n`setup'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard.rb:183:in\n `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard/cli.rb:11\n0:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.17.0/lib/thor/task.rb:27\n:in `run'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.17.0/lib/thor/invocation\n.rb:120:in `invoke_task'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.17.0/lib/thor.rb:344:in\n`dispatch'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.17.0/lib/thor/base.rb:43\n4:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/bin/guard:6:in `<to\np (required)>'\n        from C:/Ruby193/bin/guard:23:in `load'\n        from C:/Ruby193/bin/guard:23:in `<main>'\n\nC:\\Users\\wolfgang\\RubymineProjects\\Koreanisch>ruby -v\nruby 1.9.3p327 (2012-11-10) [i386-mingw32]\n```\n Alright, I had the Pry version set in the Gemfile. Removed it, ran bundle update, I see the new pry version in the output, however it is still failing with the same. I might have to head over then to the pry board and see what the gotchas are on the Windows configuration, maybe a bad %PATH%\n\n```\nC:\\Users\\wolfgang\\RubymineProjects\\Koreanisch>bundle update\nFetching gem metadata from https://rubygems.org/.........\nFetching gem metadata from https://rubygems.org/..\nUsing rake (10.0.3)\nUsing i18n (0.6.1)\nUsing multi_json (1.5.0)\nUsing activesupport (3.2.11)\nUsing builder (3.0.4)\nUsing activemodel (3.2.11)\nUsing erubis (2.7.0)\nUsing journey (1.0.4)\nUsing rack (1.4.4)\nUsing rack-cache (1.2)\nUsing rack-test (0.6.2)\nUsing hike (1.2.1)\nUsing tilt (1.3.3)\nUsing sprockets (2.2.2)\nUsing actionpack (3.2.11)\nUsing mime-types (1.19)\nUsing polyglot (0.3.3)\nUsing treetop (1.4.12)\nUsing mail (2.4.4)\nUsing actionmailer (3.2.11)\nUsing arel (3.0.2)\nUsing tzinfo (0.3.35)\nUsing activerecord (3.2.11)\nUsing activeresource (3.2.11)\nUsing bcrypt-ruby (3.0.1)\nUsing bundler (1.3.0.pre.2)\nUsing nokogiri (1.5.6)\nUsing ffi (1.3.1)\nUsing childprocess (0.3.7)\nUsing rubyzip (0.9.9)\nUsing websocket (1.0.6)\nUsing selenium-webdriver (2.29.0)\nUsing xpath (1.0.0)\nUsing capybara (2.0.2)\nUsing coderay (1.0.8)\nUsing coffee-script-source (1.4.0)\nUsing execjs (1.4.0)\nUsing coffee-script (2.2.0)\nUsing rack-ssl (1.3.2)\nUsing json (1.7.6)\nUsing rdoc (3.12)\nUsing thor (0.17.0)\nUsing railties (3.2.11)\nUsing coffee-rails (3.2.2)\nUsing diff-lcs (1.1.3)\nUsing listen (0.7.2)\nUsing lumberjack (1.0.2)\nUsing method_source (0.8.1)\nUsing slop (3.4.3)\nInstalling pry (0.9.11.4)\nUsing guard (1.6.1)\nUsing rspec-core (2.12.2)\nUsing rspec-expectations (2.12.1)\nUsing rspec-mocks (2.12.1)\nUsing rspec (2.12.0)\nUsing guard-rspec (2.4.0)\nUsing spork (0.9.2)\nUsing guard-spork (1.4.1)\nUsing hashie (1.2.0)\nUsing jquery-rails (2.2.0)\nUsing omniauth (1.1.1)\nUsing omniauth-identity (1.1.0)\nUsing pg (0.14.1)\nUsing rails (3.2.11)\nUsing rb-fchange (0.0.6)\nUsing rb-fsevent (0.9.3)\nUsing rb-inotify (0.9.0)\nUsing rb-notifu (0.0.4)\nUsing rspec-rails (2.12.2)\nUsing sass (3.2.5)\nUsing sass-rails (3.2.6)\nUsing sqlite3 (1.3.7)\nUsing uglifier (1.3.0)\nUsing wdm (0.0.3)\nUsing win32console (1.3.2)\nYour bundle is updated! Use `bundle show [gemname]` to see where a bundled gem i\ns installed.\n\nC:\\Users\\wolfgang\\RubymineProjects\\Koreanisch>bundle exec guard\n19:28:42 - INFO - Guard uses Notifu to send notifications.\n19:28:42 - INFO - Guard uses TerminalTitle to send notifications.\nC:/Ruby193/lib/ruby/gems/1.9.1/gems/pry-0.9.11.4/lib/pry/command_set.rb:216:in `\nalias_command': Command: `help` not found (RuntimeError)\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard/interacto\nr.rb:135:in `block in create_command_aliases'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard/interacto\nr.rb:134:in `each'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard/interacto\nr.rb:134:in `create_command_aliases'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard/interacto\nr.rb:95:in `initialize'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard.rb:161:in\n `new'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard.rb:161:in\n `setup_interactor'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard.rb:82:in\n`setup'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard.rb:183:in\n `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/lib/guard/cli.rb:11\n0:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.17.0/lib/thor/task.rb:27\n:in `run'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.17.0/lib/thor/invocation\n.rb:120:in `invoke_task'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.17.0/lib/thor.rb:344:in\n`dispatch'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/thor-0.17.0/lib/thor/base.rb:43\n4:in `start'\n        from C:/Ruby193/lib/ruby/gems/1.9.1/gems/guard-1.6.1/bin/guard:6:in `<to\np (required)>'\n        from C:/Ruby193/bin/guard:23:in `load'\n        from C:/Ruby193/bin/guard:23:in `<main>'\n\nC:\\Users\\wolfgang\\RubymineProjects\\Koreanisch>bundle exec guard -i\n19:28:53 - INFO - Guard uses Notifu to send notifications.\n19:28:53 - INFO - Guard uses TerminalTitle to send notifications.\n19:28:53 - INFO - Starting Spork for RSpec\nUsing RSpec\n  -- Rinda Ring Server listening for connections...\n\n  -- Starting to fill pool...\n     Wait until at least one slave is provided before running tests...\n  ** CTRL+BREAK to stop Spork and kill all ruby slave processes **\nSpork is ready and listening on 8989!\n   -- build slave 1...   -- build slave 2...\n\nPreloading Rails environmentPreloading Rails environment\n\nLoading Spork.prefork block...Loading Spork.prefork block...\n\nRack::File headers parameter replaces cache_control after Rack 1.5.Rack::File he\naders parameter replaces cache_control after Rack 1.5.\n\n  --> DRb magazine_slave_service: 1 provided...  --> DRb magazine_slave_service:\n 2 provided...\n```\n\n```\nC:\\Users\\wolfgang\\RubymineProjects\\Koreanisch>echo %PATH%\nC:\\Program Files (x86)\\PHP\\;%CommonProgramFiles%\\Microsoft Shared\\Windows Live;C\n:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Windows\\system32;C:\\Win\ndows;C:\\Windows\\System32\\Wbem;C:\\Program Files (x86)\\Common Files\\HP\\Digital Ima\nging\\bin;C:\\Program Files (x86)\\HP\\Digital Imaging\\bin\\;C:\\Program Files (x86)\\H\nP\\Digital Imaging\\bin\\Qt\\Qt 4.3.3;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program F\niles (x86)\\git\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Program Files (x86)\\Common\nFiles\\Acronis\\SnapAPI\\;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\ansi153\\x6\n4;C:\\Ruby193\\bin;C:\\DevKit\\bin;C:\\DevKit\\mingw\\bin;C:\\Program Files\\Common Files\n\\Microsoft Shared\\Windows Live;C:\\Program Files (x86)\\OpenVPN\\bin;C:\\Pik;C:\\Qt\\4\n.7.4\\bin;C:\\Qt\\4.7.4;C:\\Python27;C:\\Program Files (x86)\\Heroku\\bin;C:\\Users\\wolf\ngang\\gitflow\n```\n @netzpirat thanks for making me follow through. Just created https://github.com/pry/pry/issues/834\n As a noobi, I am quite perplexed going through these comments. I wish there is a clear direction on interim solution while waiting for pry fix. Should I just do <i>bundle exec guard -i </i> ?\n\nIf it helps here is the data:\n\nOS: Windows 8\nruby 1.9.3p327 (2012-11-10) [i386-mingw32]\nRails 3.2.11\n\n<b>Gemfile lock:</b>\n\n```\nguard (1.6.2)\n  listen (>= 0.6.0)\n  lumberjack (>= 1.0.2)\n  pry (>= 0.9.10)\n  terminal-table (>= 1.4.3)\n  thor (>= 0.14.6)\nguard-rspec (2.4.0)\n  guard (>= 1.1)\n  rspec (~> 2.11)\n\npry (0.9.11.4-x86-mingw32)\n  coderay (~> 1.0.5)\n  method_source (~> 0.8)\n  slop (~> 3.4)\n  win32console (~> 1.3)\n```\n\n<b>Gemfile:</b>\n<code>\ngroup :test, :development do\n  gem \"rspec-rails\"\nend\ngroup :development do\n  gem 'wdm', :platforms => [:mswin, :mingw], :require => false\n  gem 'win32console'\nend\ngroup :test do\n  gem 'factory_girl_rails'  \n  gem 'capybara'\n  gem 'faker', '1.0.1'\n  gem 'shoulda'\n  gem 'guard-rspec'\n  gem 'guard'\nend\n</code>\n\nand the error:\n\n![error](https://f.cloud.github.com/assets/2120154/119088/afb344d0-6c96-11e2-8365-42c7057b459d.png)\n @murtyk If you want to have the Guard command line available, then just use the previous Pry version by adding\n\n```\ngem 'pry', '0.9.10'\n```\n\nto your `Gemfile` and `bundle` your gems.\n\nAs alternative you can just disable the interactor, but you won't be able to give guard manual commands:\n\n```\n$ bundle exec guard -i\n```\n\nIt's interesting that you have the failure on Windows 8, because in my VM it worked on Windows 8. Looking at the comments, @kyrylo tested Pry 0.9.11.4 on Windows 7 with Ruby 1.9.3p362 successfully, whereas I tested Pry 0.9.11.4 on Windows 8 with Ruby 1.9.3p362 successfully. Perhaps upgrading your Ruby installation to 1.9.3p362 helps also?\n Thank you. I did bundle exec guard -i and ok for now.\n This issue has been fixed by this commit: https://github.com/pry/pry/commit/7c8a849fef142cf354095f79c024cc2b8cfcd568\n\nIt will be included in the next Pry release, which should be out in the next couple of days.\n\nIf you don't have time, upgrade your Ruby.\n Thanks @kyrylo for your time investigating this issue and fix it :clap: \n  I realised that I managed to put a typo in the single line of documentation I added in the last pull request... Got so embarrassed that I went through the entire class and fixed all typos to redeem myself :)\n I'm also non-native, but with the benefit of having lived in London for the last 6 years :)\n\nWill definitely send more pull requests if I spot anything else!\n  Hi there,\n\nI am trying to use guard to monitor my servers.\n\nI need a test server and a inner server at the same time,\nso I add these into my Guardfile:\n\n``` ruby\n# This is the test host\nguard 'rails', port: 4000, environment: :test, daemon: true, timeout: 20 do\n  watch('Gemfile.lock')\n  watch('config/application.rb')\n  watch('config/environment.rb')\n  watch('config/environments/test.rb')\n  watch('config/config.rb')\n  # watch(%r{^(config|lib)/.*})\nend\n\n# This is the test Inner API\nguard 'rails', port: 4001, environment: :test, daemon: true, timeout: 20 do\n  watch('Gemfile.lock')\n  watch('config/application.rb')\n  watch('config/environment.rb')\n  watch('config/environments/test.rb')\n  watch('config/config.rb')\n  # watch(%r{^(config|lib)/.*})\nend\n```\n\nBut it seems that the first server are terminated by the second one.\n\nI search the Google, and find that the guard-spork has the same situation.\nSo is there a way for Guard to run multiple instance of a single plugin?\n This could also be a [guard-rails issue](https://github.com/johnbintz/guard-rails/blob/master/lib/guard/rails/runner.rb)?\n @rymai Yes, I certainly understand it could be improved in guard-rails plugin.\nBut since some user want it with guard-spork too, maybe it is better to support this on Guard level.\n\n@netzpirat Weird. In fact, I have three servers at the same time, the 3001 and 4001 co-exist without 4000.\nMaybe due to the RAILS_ENV?\nIt is the same when I separate into groups.\n\nThis is what my Guardfile now: \n\n``` ruby\n# This is the dev Inner API\ngroup :dev_api do\n  guard 'rails', port: 3001, environment: :development, daemon: true, timeout: 20 do\n    watch('Gemfile.lock')\n    watch('config/application.rb')\n    watch('config/environment.rb')\n    watch('config/environments/test.rb')\n    watch('config/config.rb')\n  end\nend\n\n# This is the test host\ngroup :test_host do\n  guard 'rails', port: 4000, environment: :test, daemon: true, timeout: 20 do\n    watch('Gemfile.lock')\n    watch('config/application.rb')\n    watch('config/environment.rb')\n    watch('config/environments/test.rb')\n    watch('config/config.rb')\n    # watch(%r{^(config|lib)/.*})\n  end\nend\n\n# This is the test Inner API\ngroup :test_api do\n  guard 'rails', port: 4001, environment: :test, daemon: true, timeout: 20 do\n    watch('Gemfile.lock')\n    watch('config/application.rb')\n    watch('config/environment.rb')\n    watch('config/environments/test.rb')\n    watch('config/config.rb')\n    # watch(%r{^(config|lib)/.*})\n  end\nend\n```\n This is really weird. I still failed on local.\n\nBut, anyway, after I read the source code of Guard-rails,\nit seems that it is the problem in Guard-rails and can't avoid from Guard itself.\nI'll dive into it.\n\nSorry for bothering.\n  This might be expected behaviour, but wanted to check just to be sure.\n\nIt seems that Guard triggers `:initialize` on every single Guards in all groups, even if I start it using `guard -g specs` for example.\n\nIn my specific case I'm using `:initialize` to delete / recreate some build folders, which means when I only want to run Jasmine which is in `specs` group, the build folder gets obliterated as some Guards in my `development` group kick off :(\n\nTried to find some warning in the docs about using `:initialize`, but couldn't find anything about this so not sure if I'm just not supposed to do things this way or if this is a bug?\n I think you're right, all guards are initialized, but not started!\n\nSo, in your case you should \"delete / recreate some build folders\" in the `start` method of your guard plugin, not in its `initialize` method.\n\nHope that helps!\n Hmm, is there a specific reason for this behaviour?\n\nI can probably work around this in my Guards, but I think the reason I actually moved some stuff to `:initialize` is because if you use Guards programatically then `:start` won't be invoked.\n\nOn the other hand initialising Guards when they are in a different group naively doesn't sound logical as it's wasting resources, but of course there might be some very good reasons I don't see without knowing the code.\n\nSo my point is, should this be changed?\n One of the reason I see is that scopes (individual plugins or groups) [can be updated when Guard is already running](https://github.com/guard/guard/blob/master/lib/guard/commands/scope.rb) so the Guard plugins have to be initialized at that time.\n\nWhat do you think @netzpirat ?\n Thanks for the historical explanation! ;)\n\nYou probably meant \"lazy initialization\" instead of \"lazy starting\"? This would indeed be the ideal solution I guess!\n Thanks a lot for the explanation!\n\nI guess I'll have to refactor my Guards a bit to conform to this pattern.\n\nShould I create a pull request with a cautionary comment line added for the constructor? \n Hmmm, I don't think we call `start` on all plugins in all cases. For instance, here is the debug output when I start Guard with a particular group:\n\n```\n\u2192 guard start -g backend -d\n14:42:14 - INFO - Guard uses GNTP to send notifications.\n14:42:14 - DEBUG - Command execution: hash stty\n14:42:14 - DEBUG - Guard starts all plugins\n14:42:14 - DEBUG - Hook :start_begin executed for Guard::RSpec\n14:42:14 - INFO - Guard::RSpec is running\n14:42:14 - DEBUG - Hook :start_end executed for Guard::RSpec\n14:42:14 - DEBUG - Hook :start_begin executed for Guard::Shell\n14:42:14 - DEBUG - Hook :start_end executed for Guard::Shell\n```\n\nIt [starts only the plugins in that group](https://github.com/guard/guard/blob/master/lib/guard/runner.rb#L226-L227).\n\nSo maybe the real issue is that we don't call `start` on Guard plugins that are not in the initial scope (the scope at Guard's launch), either on Guard start (eager-load) or by lazy-load!\n Exact! :)\n\nThanks @daaain for making us noticing an unoticed-until-then issue! ^^\n Thanks a lot for the useful discussion guys, I'm closing the issue as I think with the documentation letting other Guard developers know what's expected behaviour it's not an issue any more.\n  Hey,\n\nit seems if there's an `ignore!` line in a Guardfile then `guard show` will error out:\n\n```\ndains-MacBook-Pro:guard-steering dain$ guard show\n12:55:33 - ERROR - Invalid Guardfile, original error is:\n> [#] undefined method `ignore!' for nil:NilClass\n12:55:33 - INFO - \n```\n\nI don't have time to try to fix this right now myself, but wanted to report to see if this happens to anyone else?\n And you have the last version of guard installed? (just to be sure)\n Oh yeah, forgot that, 1.6.1 yes! I'm on OSX 10.7.5.\n Also, I can reproduce this with a Guard file only having `ignore! %r{tmp/}` in it.\n I got this error too:\n\n```\n15:32:56 - ERROR - Invalid Guardfile, original error is:\n> [#] undefined method `ignore' for nil:NilClass\n```\n\nGuard version 1.6.2\nUbuntu 12.10 i386\nruby-1.9.3-p327 [ i686 ]\n\nI added ignore at the begin of Guardfile.\n  As it stands right now, to customize the history file you have to either use the built in bin switch or nothing. There are other issues such as being able to disable the bundler warning via guardrc that arise too.  Right now you let Pry handle all that which means you are doing some of your work way too late because you are setting the history file before Pry even has a chance to do it's work.\n\nIt would be nice if Guard took control of the guard RC file and loaded it after Pry but before anything else or you could go the long route and create a new set of commands which allows for at least a custom history file via the guardrc but but leaves some early guard options out of the question.\n\nI'm willing to do the work of fixing this all up, actually I already have a patch to fix the history file problem, but if you guys think the other is a good idea I'd be more than willing to donate the time to making this happen.  You could also play YAML games too meaning something like what Jekyll does:\n\n``` ruby\n# ---\n# key: value\n# ---\n\nRuby.code\n```\n\nThis makes it so you read the file and pull out the YAML options early and then let Pry load the Ruby.\n Awesome, I'll work on this sometime tomorrow and get an idea thrown out there for ya'll to comment on.\n  Whoops?\n  Replace Pry's reset command with a command that restarts Guard.\n I'm not even gonna touch on that failure, I don't even understand how a simple change like the one I made could cause a problem so far away... so if it's truly my fault somebody please explain how so I can fix it.  Though it might just be a problem with jRuby because it seems pretty inconsistent. Perhaps @headius or somebody who commits to the failing piece can comment on the inconsistency between jRuby1.8mode and Ruby1.8.\n  When running guard on Windows with `bundle exec guard` with or without `-i` option, I'm unable to shut it down without closing the terminal window, it just hangs and doesn't respond to Ctrl+C and nor I can enter any commands when running without `-i`.\n\nHere's the Gemfile\n\n```\nsource \"http://rubygems.org\"\n\ngem \"rake\"\ngem \"webrick\"\ngem \"rainbow\"\n\ngem \"sass\"\ngem \"css_parser\"\ngem \"compass\"\n\ngem \"slim\"\ngem \"wdm\"\n\ngem \"guard\"\ngem \"guard-slim\"\ngem \"guard-compass\"\ngem 'rb-inotify', :require => false\ngem 'rb-fsevent', :require => false\ngem 'rb-fchange', :require => false\n```\n\nAnd Guardfile:\n\n```\nguard 'slim', :slim => { :pretty => true } do\n  watch(%r'^.+\\.slim$')\nend\n\nguard 'compass' do\n  watch(%r'^sass/(.*)\\.s[ac]ss')\nend\n```\n I use both Windows and Linux for development, and btw I'm banned on Stack Overflow. \nI guess I'll just open another window and have guard running there.\n On OS X I also have this issue as of 1.6.1. Ctrl-C doesn't work for me, but typing \"exit\" at the pry prompt does. Only problem with typing \"exit\" is that I use `ThinkingSphinx::Test.start_with_autostop` in my rspec test suite and guard exists and orphans my searchd process. Ctrl-C used to get trapped by both guard and thinking-sphinx such that I could get a clean shutdown. Now I have to type exit and quickly Ctrl-C while guard is shutting down... a bit wonky, but it works.\n @netzpirat No, neither Ctrl+D or Ctrl+Z work. I know that `exit` works in pry shell but on Windows I can't interact with it.\n No, haven't tried Cygwin, but git bash works normally, I can exit.\n Ah, Ctrl-D does work, but I can't seem to get my extra processes that startup with RSpec to quit: https://gist.github.com/4548607\n\nThinkingSphinx and Redis are always left running. It seems like Ctrl-C used to trigger the `Kernel.at_exit` blocks of `ThinkingSphinx::Test.start_with_autostop`, but Ctrl-D does not.\n @netzpirat Hmm I put\n\n``` ruby\nrequire 'guard/guard'\n# require 'local_redis'\n# require 'thinking_sphinx/test'\n\nclass InlineGuard < ::Guard::Guard\n  def stop\n    puts \"foo?\"\n    # ThinkingSphinx::Test.stop\n    # LocalRedis.kill!\n  end\nend\n```\n\nat the top of my Guardfile but I'm not seeing anything when I type `exit` to exit guard. Just:\n\n```\n[1] guard(main)> exit\n13:21:20 - INFO - Bye bye...\n```\n Ah, ok so it's more like this:\n\n``` ruby\nrequire 'guard/guard'\n\nmodule ::Guard\n  class CleanupGuard < ::Guard::Guard\n    def stop\n      #...\n    end\n  end\nend\n\nguard('cleanup_guard')\n```\n Ah, so that did work as far as executing code when Guard stops. But what I actually ended up needing to do was monkey patching `Spork::Server#listen` to call `exit` instead of `exit!` on this line: https://github.com/sporkrb/spork/blob/master/lib/spork/server.rb#L28\n\nMy code required the cleanup within my Rails app being run by spork. Problem was all my `at_exit` hooks were being bypassed by the SIGINT trap.\n\nThanks again for the help on the guard-front though!\n I just wanted to let you all know that I am experiencing the same problem. Both `exit` and `Ctrl-D` don't work. Yes, it's true the message `Bye Bye...` does pop up, so the key is correct, but after showing that message, Guard hangs and actually never exits completely. Only a `kill -9` shuts down the process.\n\nRunning `OSX 10.8`.\n\nI haven't drilled down into this problem, but I just wanted to report that there are more people _in the wild_ having issues like this. At least _one_ more :)\n @JeanMertz are you also using guard-spork?\n  When spawning `pry` from within my stuff that's run from guard+spork, I still sometimes get invisible text, as if `stty -echo` had been run.\n\nI haven't figured out the pattern, really.\n\nI do see the code in \nhttps://github.com/guard/guard/blob/master/lib/guard/interactor.rb#L260 but I don't see how it could be at fault.\n\nWhat could be turning off echo?\n I have same issue without `-i` key.\n\nguard (1.8.0)\nguard-spork (1.5.0)\nguard-rspec (3.0.0)\nguard-cucumber (1.4.0)\n  I am running pry with guard, and I've set guard to keep a history with\n\n``` ruby\ninteractor :history_file => \"~/.guard_history\" \n```\n\nHowever, instead it keep it in my home directoy, it create a folder name `~` in my project directory. \n I tried again, making sure there is `.guard_history` in my `$HOME` and the result is weird. \n- the `~/.guard_history` is pended with new records when guard exits\n- the `./~/.guard_history` is still created **when `guard` is finished loading**.\n\nCheckout this screenshot.\n\n![Screen Shot 2013-01-11 at 9 36 52 AM](https://f.cloud.github.com/assets/1043403/58945/c83f5b46-5b8f-11e2-9b78-683a7a6b8b08.png)\n I got two news:\n- a workaround is found;\n- I reproduced the problem on another machine.\n\n## Workaround\n\n``` ruby\n[1] {Specs} guard(main)> File.expand_path(Pry.config.history.file)\n```\n\nworks in my case, but the problem still exists. The IO behaviors like going through a `tee` pipeline,  both the `~/.guard_history` and `./~/.guard_history` is updated.\n\nI tried to tackle it with using the `ENV` hash in Ruby:\n\n``` ruby\ninteractor :history_file => \"#{ENV['HOME']}/.guard_history\"\n```\n\nAnd it **worked** now, but the causes are still unknown.\n\n## Reproduce the problem\n\nHere is gemfile I used in another repo to reproduce the problem, could you reproduce in your local machine?\n\n``` ruby\n  gem 'guard'\n  gem 'guard-rspec'\n  gem 'guard-livereload'\n  gem 'guard-bundler'\n  gem 'guard-pow'\n  gem 'guard-spork'\n  # pry setups\n  gem 'pry', :require => false\n  gem 'pry-remote'\n  gem 'pry-stack_explorer'\n  gem 'pry-debugger'\n  gem 'pry-rails'\n  gem 'pry-coolline'\n```\n Sure. \n  It would really help to have less clutter in terminal.\n If you read the README you'll find the `--clear` option :)\n Hehe, sorry, is it possible to add it to some sort of `.guardrc` or `Guardfile` ?\n Good question, @netzpirat is it possible to add `--clear` option via `.guardrc` or `.pryrc` ?\n Nice!\n Thanks!\n  the info on WDM in the readme is not quite correct.\nif you include \n\n``` ruby\ngroup :development do\n  gem 'wdm', :require => false\nend\n```\n\nin your gemfile, bundle install will still try to install WDM on linux systems and fail.\nfor things to work you need to include\n\n``` ruby\ngroup :development do\n  gem 'wdm', platform: :mingw, :require => false\nend\n```\n\ninstead (\"mingw\" may need to be replaced with \"mswin\" or something else depending on what you're working with).\n you're welcome.\n  Fix a typo in the `--plugins` example in the README.\n  :shipit: \n Aha, no problem, I was joking because I just didn't understand what was the issue since the title is very cryptic, there is no description and you closed it immediately! :P\n  That's totally awesome @netzpirat, I love you so much!! :heart:\n Really nice! Thanks!\n  Under the [interactions](https://github.com/guard/guard#interactions) section of the documentation:\n\n```\nGuard shows a Pry console whenever it has nothing to do and comes with some Guard specific Pry commands:\n\n\u21a9, a, all: Run all plugins.\n```\n\nI get an undefined local variable `a`, but `return` and `all` work just fine.\n\n```\n[9] guard(main)> a\nNameError: undefined local variable or method `a' for main:Object\nfrom (pry):4:in `__pry__'\n```\n\n```\n10] guard(main)> all\n09:23:38 - INFO - Run all\n```\n\nIs this a problem with the documentation or with the implementation? Either way, I can whip up a pull request real quick to fix the issue. Let me know.\n Thanks, I think that was an implementation issue so I fixed it. Ok for your @netzpirat?\n  It looks like it was easier than I thought !\n\nthis change includes in the \"guard list\" output guard plugins which are not in a \"guard-xxx\" gem by looking inside the gem folder if a \"lib/guard/<gem_name>.rb\" file is available.\n\nI only updated the code for rubygems 1.8.0+ since I am not sure about the api provided below.\n Can you please add some specs, thanks!\n specs added !\n Thanks, @guard/core-team seems good to you?\n Other than my comment, it seems good to me!\n specs fixed.\n @schmurfy can you try an empty commit to see if travis-ci build are ok now? Thanks!\n just rebased on master.\n Great thanks!\n  Here is the work in progress pull request, as suggested by @netzpirat\nI hope it's understandable.\n I'm not sure how to send the notifier options hash in the loops for Notifier#turn_on and Notifier#turn_off\nRight now they don't send anything, but the methods I wrote in ::Tmux#turn_on and ::Tmux#turn_off, do accept a hash of options.\n Ok more work on this.\nChanged the logic on this slightly.\nTmux#save_tmux_state now saves the tmux state as it is shown by the tmux command\n\n``` shell\ntmux show\n```\n\nAny options are saved into a hash @@tmux_state\nIs this an appropriate way to save the info inside the module? It works, but is there a different solution?\n\nTmux#restore_tmux_state, loops through the saved options and sets them to what they were or un-sets the option which was created by the Tmux module.\n\nI hope this helps\n Thanks , I'll update the code to reflect that.\n I need to write some specs for this.\n Ok I added specs for the save_tmux_state and restore_tmux_state, methods.\nThis is working good on my work and home machines. But I'd like to get some input from anybody using this. :-)\n This is greatly needed for Tmux users has having our bg and fg settings overwritten completely outside of the guard processes is annoying at best.  \n @cpjolicoeur would you mind testing my branch of guard. It's available here https://github.com/rudicode/guard/tree/tmux-bg-color\n\nI'm using it in one of my projects now. But I put it in my gem file like this\n`gem 'guard',               :git => \"https://github.com/rudicode/guard.git\", :branch => \"tmux-bg-color\"`\n\nbut for some reason can only run it using:\n`bundle exec guard`\nI think it has something to do with bundler handling git repos.\n\nBefore running it for the first time make sure your tmux settings are they way you want them.\nAnything displayed with `tmux show` will be saved and then restored on exit. Any extra settings made by the notifier will be unset.\n Thanks for the feedback, I'll start on the changes.\n Sure what would be the proper way to merge the upstream changes into my branch? I'm a little new to this, and don't want to make a mistake. Should I:\n`git fetch`\n`git rebase upstream/master`\n Yeah it should work, and then you could squash your commits into one using the following method: http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html\n\nand force push the squashed commit.\n Having a small issue, on exit guard does not call `::Guard::Notifier.turn_off` , I added it to `lib\\guard.rb`\nThis works, but i don't think it's the appropriate place.\nAny ideas?\n Wow lots of changes to grok, over the weekend. Thanks for the help along the way.\n  Hello, I'm using guard with tmux, and noticed that after exiting guard, the last set background color (red, green, yellow or default ) remains.\nIdeally, the tmux notifier should save the state before the first notification and then revert to that state when exiting.\n\nI have been working on a fix for this, but need some guidance.\n\nIs there a mechanism to let notifiers know that they are starting/stopping.\nIf not where could I hook in such functionality?\n\nBTW, I really like guard very useful.\n Thanks for that feedback. I'm learning ruby and thought I could help out.\nI'll have a closer look at those methods.\n Cool, thanks for your involvement @rudicode!\n Hi @rudicode, I'm looking forward to see your pull request and hope you will love Ruby as much as we do!\n Thanks for the welcome.\n\nSo I have looked into the Notifier#turn_off and Notifier#turn_on, loops.\nThat's what I was looking for.\n\nOn starting up guard, The turn_on , starts very early on, which is good, so that we can get the state of tmux settings.\n\nHowever for some reason Notifier#turn_off , is not called when typing exit at the guard prompt.\nIt just sends an Info - Bye Bye. and exits.\n\nWhat can we do about that?\n @netzpirat  , Is this what you have in mind?\n\n``` ruby\n    def stop\n      within_preserved_state(false) do\n        runner.run(:stop)\n        ::Guard::UI.info 'Bye bye...', :reset => true\n        ::Guard::Notifier.turn_off\n        # Unblocks main thread\n        listener.stop\n      end\n    end\n```\n  Recently I started to question the need for a guard plugin to have its own gem, when the guard is linked to another gem and the author of both is the same I think it would really be better to have the guard directly available inside the gems it supports.\n\nI already submitted a patch to allow a guard to specify its Guardfile template which was the first step but currently \"guard list\" does not list such guard plugins.\n\nAfter a quick look at the code what guard currently does when a list command is received is to find all gems with a name starting with \"guard-\" and then load the guard plugin and list them all, what I propose is merely to remove the name requirement and scan every gem for an available guard plugin.\n\nWhat do you think ?\n It may be a concern but since this is a one time call and never called inside an actual application so even if it takes a little more time I doubt it may be noticeable, it may become a problem if you installed every gems available on rubygems but otherwise it should be fine.\n\nI would even go as far as to say it may take more time to load the ruby interpreter than building the guards list most of the time ;)\n I was not expecting so much interest xD\nWould turning this into a pull request help ?\n The whole point of the discussion was to know if you agree with the changes required, mainly scanning every gem instead of only listing the ones with a name started in \"guard-\", I see this like in pseudo code:\n\n```\nguard_plugins = GEMS.select do |gem|\n  gem_path = gem.path\n  File.exists?(\"#{gem_path}/guard/#{gem.name}.rb\")\nend\n```\n\nI am pretty sure the impact will be minimal and the \"performance\" of the \"guard list\" command is not a major issue but still that's not something I want to throw time at if for nothing.\n\nI also have a job, I also have other things to do that's exactly why I do not work on something unless I am sure it will be accepted as a pull request, given your answer I suppose it is an acceptable change ?\n Yeah this would be ok for me, please open a pull request. Thanks!\n  I was playing with the idea of embedding the guard in the gem it supports and while it works \"guard init\" does not because guard expects the guard to live in a separate gem and hardcode its search path.\n\nWhy hardcode something that does not need to be ?\nOnce the guard class has been found no magic should happen to find any related location or files...\n\nWhat do you think ?\n I think this is a good idea, thank you. WDYT @guard/core-team ?\n documentation added !\n\nThe only thing left which is not working is \"guard list\" but I am sure how to best handle this, except by searching a guard in every gem in path.\n Thanks for the doc. Regarding `guard list`, this has nothing to do with this pull-request, right?\n yes... and no ;)\nThe only reason for this pull request to exists is to be able to embed a guard into another gem, so why not discuss this here further ? ^^\nI can create a separate issue to discuss this if you prefer.\n All that is fine for me too, thanks! Just by curiosity on which gem do you want to embed Guard?\n https://github.com/schmurfy/eetee\nI just did not felt the need to create one more gem for the guard for a project that will most likely be used only be myself ;)\n ok nice!\n @rymal I forgot to say but I did the changes to the documentation.\n Wow, I was sure I had left a comment yesterday... Anyways, yes please open a new issue for your specific need.\n\nThank you for this pull-request, merging it now!\n  Hello,\n\nIn using guard, I found that the specs were running twice. I Google'd around and found several cases where other users were complaining of similar issues. I finally came to understand that it was because there were duplicate definitions in the Guardfile. In my case, the duplications were the result of me accidentally running `guard init` 1+n times and not being keen to the fact that I had done this.\n\nI do not know if this functionality is by design, but I implemented the basic spec tests and code to detect if there were multiple definitions and alert the user to their existence.\n\nExample:\n\n[jfolkins@jfolkins-mbp:~/Programming/Ruby/guard]$ bundle exec guard init\n16:40:15 - INFO - ronn guard added to Guardfile, feel free to edit it\n16:40:15 - INFO - There are 23 definitions in your Guardfile for 'ronn', you may want to clean up your Guardfile as this could cause issues.\n16:40:15 - INFO - rspec guard added to Guardfile, feel free to edit it\n16:40:15 - INFO - There are 20 definitions in your Guardfile for 'rspec', you may want to clean up your Guardfile as this could cause issues.\n\nHow to duplicate my findings on OSX 10.7.5:\n\n`cd ~`\n`git clone git@github.com:guard/guard.git`\n`cd guard`\n`vi Gemfile`\n# Add the following line and :wq\n\n`gem 'guard', :path => '~/guard/'`\n\n`rvm --create ruby-1.9.2-p290@guard_test_jfolkins_pre`\n`bundle install`\n`bundle exec guard init`\n`bundle exec guard init`\n`cat Guardfile`\n\nFrom here you will hopefully see multiple definitions.\n\nHow to test my proposal:\n\n`cd ~`\n`git clone git@github.com:jfolkins/guard.git`\n`cd guard`\n`vi Gemfile`\n# Add the following line and :wq\n\ngem 'guard', :path => '~/guard/'\n\n`rvm --create ruby-1.9.2-p290@guard_test_jfolkins_post`\n`bundle install`\n`bundle exec guard init`\n`bundle exec guard init`\n# warning will be here\n\nValue Proposition:\n\nI believe the solution I have implemented is a reasonable way to clue in the user to potential issues in their Guard file. In my case, I thought it was Guard being buggy and this barrier almost had me drop the use of it in my project. Instead, I decided to be proactive and solve this issue for others.\n\nThanks for your time and for the software!\njared\n Awesome thank you!\n My pleasure!\n  Set fgcolor to white. When guard sets status to default - bgcolor black - and you are using a theme with black fonts in modeline the text becomes unvisible. \n  - Replace use of '/dev/null' with DEV_NULL, a constant that is evaluated at load time. This snippet for identifying Windows and calculating the null device name is copied from bundler (see https://github.com/carlhuda/bundler/blob/054329690071974180393a4f14ec3fa2984bc446/lib/bundler.rb#L65-67)\n- Handle the case where quotes in the argument of an echo command may or may not be included in the result depending on OS. On Windows, the shell command \"ECHO 'a'\" returns \"'a'\" (with quotes). On Linux, the shell command \"ECHO 'a'\" returns \"a\" (without quotes).\n Yep, seems good, thanks!\n :+1:\n  Please see the following pull req. for further details: https://github.com/guard/listen/pull/68\n  After a long conversation in [this issue](https://github.com/guard/guard/issues/357), I've found a different issue from `rb-readline`. The summary of this issue is as follows:\n1. Guard runs normally.\n2. Guard detects one file system event correctly.\n3. Guard runs specs etc. for that file.\n4. The Listener then hangs for 3-5 minutes, unresponsive to subsequent file changes.\n5. During the listener hanging, other guard interactions are responsive. ie. you can hit enter to run all specs.\n\nNow, the core stuff as asked for by the issue guidelines:\n- Running guard with bundle exec, check.\n- System versions: Mac OS: 10.8.2, Ruby 1.9.3-p286, Gem 1.8.24, Bundler 1.2.1\n- No shared folder system, running on local disk\n- Gemfile:\n\n```\nsource 'http://rubygems.org'\n\ngem 'rails', '3.2.8'\ngem 'rake'\ngem 'bcrypt-ruby'\n\ngem 'jquery-rails'\ngem 'haml-rails'\ngem 'jetpack-rails'\ngem 'rdiscount'\ngem 'rabl'\n\ngem 'sorcery'\ngem 'cancan'\ngem 'stripe'\n\ngem 'impressionist'\ngem 'simple_form'\ngem 'kaminari'\ngem 'sorted'\ngem 'friendly_id'\n\ngem 'rmagick'\ngem 'carrierwave'\ngem 'fog'\ngem 'rack-raw-upload'\ngem 'exifr'\n\ngem 'meta_search'\ngem 'squeel'\ngem 'randumb'\ngem 'has_serialized'\n\ngem 'geocoder'\ngem 'carmen', '0.2.8'\n\n# For Heroku\ngem 'foreman'\ngem 'thin'\ngem 'airbrake'\n\ngroup :assets do\n    gem 'sass-rails'\n    gem 'coffee-rails'\n    gem 'uglifier'\nend\n\ngroup :production, :staging do\n    gem 'pg'\nend\n\ngroup :development, :staging do\n    gem 'letter_opener'\nend\n\ngroup :development, :test do\n    gem 'sqlite3'\n    gem 'debugger'\n    gem 'rspec-rails'\n    gem 'capybara'\n    gem 'spork'\n    gem 'rb-fsevent'\n    gem 'rb-readline'\n    gem 'guard', :github => 'guard/guard', :branch => 'master'\n    gem 'guard-spork'\n    gem 'guard-rspec'\n    gem 'guard-pow'\nend\n\ngroup :test do\n    gem 'shoulda-matchers'\n    gem 'fabrication'\nend\n```\n- Guardfile\n\n```\nguard 'pow' do\n  watch('.powrc')\n  watch('.powenv')\n  watch('Gemfile')\n  watch('Gemfile.lock')\n  watch('config/application.rb')\n  watch('config/environment.rb')\n  watch(%r{^config/environments/.*\\.rb$})\n  watch(%r{^config/initializers/.*\\.rb$})\nend\n\nguard 'spork', :rspec_env => { 'RAILS_ENV' => 'test' } do\n  watch('config/application.rb')\n  watch('config/environment.rb')\n  watch(%r{^config/environments/.+\\.rb$})\n  watch(%r{^config/initializers/.+\\.rb$})\n  watch('Gemfile')\n  watch('Gemfile.lock')\n  watch('spec/spec_helper.rb')\nend\n\nguard 'rspec', :all_on_start => false, :all_after_pass => false do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^lib/(.+)\\.rb$})                           { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\n  watch('spec/spec_helper.rb')                        { \"spec\" }\n  # watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n  watch(%r{^app/views/(.+)/.*\\.(erb|haml)$})          { |m| \"spec/requests/#{m[1]}_spec.rb\" } # Capybara request specs\nend\n```\n\nNow, here is what happens when I run `guard --debug`\n\n```\n$ guard --debug\n10:21:11 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n10:21:12 - INFO - Guard uses TerminalTitle to send notifications.\n10:21:12 - INFO - Guard is now watching at '/Users/Andrew/Code/placeology'\n10:21:12 - DEBUG - Hook :start_begin executed for Guard::Pow\n10:21:12 - DEBUG - Hook :start_end executed for Guard::Pow\n10:21:12 - DEBUG - Hook :start_begin executed for Guard::Spork\n10:21:12 - DEBUG - Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\n10:21:12 - DEBUG - Killing Spork servers with PID: \n10:21:12 - INFO - Starting Spork for RSpec\n10:21:12 - DEBUG - guard-spork command execution: [\"bundle exec spork -p 8989\"]\nUsing RSpec\nPreloading Rails environment\nLoading Spork.prefork block...\nSpork is ready and listening on 8989!\n10:21:24 - INFO - Spork server for RSpec successfully started\n\n10:21:24 - DEBUG - Hook :start_end executed for Guard::Spork\n10:21:24 - DEBUG - Hook :start_begin executed for Guard::RSpec\n10:21:24 - INFO - Guard::RSpec is running\n10:21:24 - DEBUG - Hook :start_end executed for Guard::RSpec\n10:21:24 - DEBUG - Command execution: hash stty\n10:21:24 - DEBUG - Command execution: stty -g 2>/dev/null\n10:21:24 - DEBUG - Start interactor\n10:21:24 - DEBUG - Command execution: infocmp -C\n10:21:25 - DEBUG - Command execution: infocmp -C -r\n10:21:25 - DEBUG - Command execution: infocmp -C -r\n10:21:25 - DEBUG - Command execution: stty size\n10:21:25 - DEBUG - Command execution: infocmp -C -r\n10:21:25 - DEBUG - Command execution: stty -a\n10:21:25 - DEBUG - Command execution: stty -a\n10:21:25 - DEBUG - Command execution: stty -g\n10:21:25 - DEBUG - Command execution: stty -a\n10:21:26 - DEBUG - Command execution: stty -a\n10:21:26 - DEBUG - Command execution: stty  -echo -icrnl cbreak pass8 -ixoff\n[1] guard(main)> \n```\n\nGuard is now waiting. I save `app/models/tag.rb`\n\n```\n10:22:48 - DEBUG - Stop interactor\n10:22:48 - DEBUG - Command execution: stty gfmt1:cflag=4b00:iflag=6b02:lflag=200005cb:oflag=3:discard=f:dsusp=19:eof=4:eol=ff:eol2=ff:erase=7f:intr=3:kill=15:lnext=16:min=1:quit=1c:reprint=12:start=11:status=14:stop=13:susp=1a:time=0:werase=17:ispeed=9600:ospeed=9600 2>/dev/null \n10:22:48 - DEBUG - Trying to run Guard::RSpec#run_on_modifications with [\"spec/models/tag_spec.rb\"]\n10:22:48 - DEBUG - Hook :run_on_changes_begin executed for Guard::RSpec\n10:22:48 - INFO - Running: spec/models/tag_spec.rb\n10:22:48 - DEBUG - Command execution: bundle exec rspec --help\n10:22:50 - DEBUG - Command execution: bundle exec rspec -f progress -r /Users/Andrew/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/guard-rspec-2.1.1/lib/guard/rspec/formatter.rb -f Guard::RSpec::Formatter --out /dev/null --failure-exit-code 2 spec/models/tag_spec.rb \nRunning tests with args [\"--color\", \"--failure-exit-code\", \"2\", \"--format\", \"progress\", \"--format\", \"Guard::RSpec::Formatter\", \"--out\", \"/dev/null\", \"--require\", \"/Users/Andrew/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/guard-rspec-2.1.1/lib/guard/rspec/formatter.rb\", \"spec/models/tag_spec.rb\"]...\n........\n\nFinished in 11.74 seconds\n8 examples, 0 failures\n\nDone.\n\n10:23:04 - DEBUG - Hook :run_on_changes_end executed for Guard::RSpec\n10:23:04 - DEBUG - Command execution: stty -g 2>/dev/null\n10:23:04 - DEBUG - Start interactor\n[1] guard(main)> \n```\n\nGuard is now waiting. I save `spec/models/comment_spec.rb` Nothing happens for a while, although the computer is humming away like it's thinking about something.\n\n```\n10:25:45 - DEBUG - Stop interactor\n10:25:45 - DEBUG - Command execution: stty gfmt1:cflag=4b00:iflag=6b02:lflag=200005cb:oflag=3:discard=f:dsusp=19:eof=4:eol=ff:eol2=ff:erase=7f:intr=3:kill=15:lnext=16:min=1:quit=1c:reprint=12:start=11:status=14:stop=13:susp=1a:time=0:werase=17:ispeed=9600:ospeed=9600 2>/dev/null \n10:25:45 - DEBUG - Command execution: stty -g 2>/dev/null\n10:25:45 - DEBUG - Start interactor\n10:25:46 - DEBUG - Stop interactor\n10:25:46 - DEBUG - Command execution: stty gfmt1:cflag=4b00:iflag=6b02:lflag=200005cb:oflag=3:discard=f:dsusp=19:eof=4:eol=ff:eol2=ff:erase=7f:intr=3:kill=15:lnext=16:min=1:quit=1c:reprint=12:start=11:status=14:stop=13:susp=1a:time=0:werase=17:ispeed=9600:ospeed=9600 2>/dev/null \n10:25:46 - DEBUG - Trying to run Guard::RSpec#run_on_modifications with [\"spec/models/comment_spec.rb\"]\n10:25:46 - DEBUG - Hook :run_on_changes_begin executed for Guard::RSpec\n10:25:46 - INFO - Running: spec/models/comment_spec.rb\n10:25:46 - DEBUG - Command execution: bundle exec rspec -f progress -r /Users/Andrew/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/guard-rspec-2.1.1/lib/guard/rspec/formatter.rb -f Guard::RSpec::Formatter --out /dev/null --failure-exit-code 2 spec/models/comment_spec.rb \nRunning tests with args [\"--color\", \"--failure-exit-code\", \"2\", \"--format\", \"progress\", \"--format\", \"Guard::RSpec::Formatter\", \"--out\", \"/dev/null\", \"--require\", \"/Users/Andrew/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/guard-rspec-2.1.1/lib/guard/rspec/formatter.rb\", \"spec/models/comment_spec.rb\"]...\n.......\n\nFinished in 16.26 seconds\n7 examples, 0 failures\n\nDone.\n\n10:26:06 - DEBUG - Hook :run_on_changes_end executed for Guard::RSpec\n10:26:06 - DEBUG - Command execution: stty -g 2>/dev/null\n10:26:06 - DEBUG - Start interactor\n[1] guard(main)> \n```\n\n2 minutes and 41 seconds later guard runs `comment_spec.rb`\n\nNow, to recap what I've tried with no effect:\n- Guard 1.4.x vs 1.5.x\n- Guard on master branch\n- With and without guard-spork\n- With and without guard-pow\n- With and without `rb-readline`\n\nThe above logs are guard on master branch with rb-readline gem.\n\nI also tried running a bare guard project as per [these instructions](https://github.com/guard/guard/issues/357#issuecomment-10068592), and that worked without perceptible lag.\n\nSo, that's where I'm at. Thanks for your help!\n Thank you for such a great description - this is how all issues should be filed.\n\nCan you test if the interactor has some influence on the Guard behavior by turning it off in your `Guardfile` with:\n\n``` Ruby\ninteractor :off\n```\n With `interactor :off`, same result:\n\n```\nguard --debug\n22:56:33 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n22:56:33 - INFO - Guard uses TerminalTitle to send notifications.\n22:56:33 - INFO - Guard is now watching at '/Users/Andrew/Code/placeology'\n22:56:33 - DEBUG - Hook :start_begin executed for Guard::Pow\n22:56:33 - DEBUG - Hook :start_end executed for Guard::Pow\n22:56:33 - DEBUG - Hook :start_begin executed for Guard::Spork\n22:56:33 - DEBUG - Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\n22:56:33 - DEBUG - Killing Spork servers with PID: \n22:56:33 - INFO - Starting Spork for RSpec\n22:56:33 - DEBUG - guard-spork command execution: [\"bundle exec spork -p 8989\"]\nUsing RSpec\nPreloading Rails environment\nLoading Spork.prefork block...\nSpork is ready and listening on 8989!\n22:56:42 - INFO - Spork server for RSpec successfully started\n\n22:56:42 - DEBUG - Hook :start_end executed for Guard::Spork\n22:56:42 - DEBUG - Hook :start_begin executed for Guard::RSpec\n22:56:42 - INFO - Guard::RSpec is running\n22:56:42 - DEBUG - Hook :start_end executed for Guard::RSpec\n```\n\nsave models/tag.rb, spec runs immediately\n\n```\n22:56:47 - DEBUG - Trying to run Guard::RSpec#run_on_modifications with [\"spec/models/tag_spec.rb\"]\n22:56:47 - DEBUG - Hook :run_on_changes_begin executed for Guard::RSpec\n22:56:47 - INFO - Running: spec/models/tag_spec.rb\n22:56:47 - DEBUG - Command execution: bundle exec rspec --help\n22:56:49 - DEBUG - Command execution: bundle exec rspec -f progress -r /Users/Andrew/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/guard-rspec-2.1.1/lib/guard/rspec/formatter.rb -f Guard::RSpec::Formatter --out /dev/null --failure-exit-code 2 spec/models/tag_spec.rb \nRunning tests with args [\"--color\", \"--failure-exit-code\", \"2\", \"--format\", \"progress\", \"--format\", \"Guard::RSpec::Formatter\", \"--out\", \"/dev/null\", \"--require\", \"/Users/Andrew/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/guard-rspec-2.1.1/lib/guard/rspec/formatter.rb\", \"spec/models/tag_spec.rb\"]...\n........\n\nFinished in 7.03 seconds\n8 examples, 0 failures\n\nDone.\n\n22:56:57 - DEBUG - Hook :run_on_changes_end executed for Guard::RSpec\n```\n\nsave models/kueue.rb, nothing happens for several minutes\n\n```\n23:00:07 - DEBUG - Trying to run Guard::RSpec#run_on_modifications with [\"spec/models/kueue_spec.rb\"]\n23:00:07 - DEBUG - Hook :run_on_changes_begin executed for Guard::RSpec\n23:00:07 - INFO - Running: spec/models/kueue_spec.rb\n23:00:07 - DEBUG - Command execution: bundle exec rspec -f progress -r /Users/Andrew/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/guard-rspec-2.1.1/lib/guard/rspec/formatter.rb -f Guard::RSpec::Formatter --out /dev/null --failure-exit-code 2 spec/models/kueue_spec.rb \nRunning tests with args [\"--color\", \"--failure-exit-code\", \"2\", \"--format\", \"progress\", \"--format\", \"Guard::RSpec::Formatter\", \"--out\", \"/dev/null\", \"--require\", \"/Users/Andrew/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/guard-rspec-2.1.1/lib/guard/rspec/formatter.rb\", \"spec/models/kueue_spec.rb\"]...\n........\n\nFinished in 4.32 seconds\n8 examples, 0 failures\n\nDone.\n\n23:00:14 - DEBUG - Hook :run_on_changes_end executed for Guard::RSpec\n\n```\n I installed rbenv and Ruby 1.9.3-p286 with readline from Homebrew. Then I set up a test project with your `Gemfile` and `Guardfile` contents, but I still can't reproduce it. To be honest, I don't have a clue what the problem might be.\n\nWhen did the lag started to appear? Was it always like that? What about polling with `bundle exec guard -p` or playing with the Listen latency option `bundle exec guard -l 0.5` (0.25 is the default)?\n\n@guard/core-team Has anyone an idea what might causing the issue?\n What's frustrating is that otherwise similar apps on my machine don't experience the bug either. For instance, here is the gemfile of an app that Guard runs perfectly with:\n\n```\nsource 'http://rubygems.org'\n\ngem 'rails', '3.2.8'\ngem 'thin'\n\ngem 'jquery-rails'\ngem 'haml-rails'\ngem 'jetpack-rails'\ngem 'simple_form'\ngem 'rdiscount'\ngem 'tinymce-rails'\ngem 'geocoder'\ngem 'kaminari'\ngem 'gibbon'\ngem 'micro_auth'\n\n\ngroup :assets do\n  gem 'sass-rails'\n  gem 'coffee-rails'\n  gem 'uglifier'\nend\n\ngroup :production do\n    gem 'pg'\nend\n\ngroup :development do\n    gem 'letter_opener'\nend\n\ngroup :development, :test do\n    gem 'sqlite3'\n    gem 'rspec-rails'\n    gem 'capybara'\n    # gem 'capybara-webkit'\n    gem 'fabrication'\n    gem 'database_cleaner'\n    gem 'spork'\n    gem 'rb-fsevent'\n    gem 'growl'\n    gem 'guard'\n    gem 'guard-pow'\n    gem 'guard-spork'\n    gem 'guard-rspec'\nend\n```\n\nSo, I'm really at a loss. I'll try playing with polling and latency and see if I can find any other leads. I wish I could see what my computer was doing in the background, when guard lags like this I can hear the computer thinking, I just don't know what it's thinking about!\n I'm very sorry that we cannot help you, but it looks like this is a very specific issue that no one can reproduce. What about using a debugger to have a look what the threads are doing? RubyMine has a great multi thread aware debugger that you can use to debug a Guard session. See http://stackoverflow.com/questions/11996124/is-it-impossible-to-use-guard-with-rubymine/12000765#12000765 on how to setup RubyMine to start Guard.\n I'm having a similar problem.  I'll start up guard, it'll run all RSpec specs correctly, and thereafter fails to notice any file changes I make.  I can kick them off manually in the pry console with `c [filename]` but of course that rather defeats the purpose of Guard.\n\nAnother clue is that Guard won't exit correctly.  The _way_ it fails depends on whether I ran it with force-polling or not:\n\n**_With FSEvent monitoring (OS X 10.8.2)**_\n\nI'll type `exit` and get the `INFO - Bye bye...` but it will then hang.  When I hit CTRL-C, it gives me the info again and then the following backtrace:\n\n```\n[1] guard(main)> exit\n16:06:26 - INFO - Bye bye...  # (then hangs until I hit CTRL-C)\n16:06:37 - INFO - Bye bye...\n/Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/listen-0.5.3/lib/listen/adapters/darwin.rb:39:in `join': Interrupt\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/listen-0.5.3/lib/listen/adapters/darwin.rb:39:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/listen-0.5.3/lib/listen/listener.rb:49:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/guard-1.5.4/lib/guard.rb:166:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/guard-1.5.4/lib/guard/cli.rb:104:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/task.rb:27:in `send'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/task.rb:27:in `run'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/invocation.rb:120:in `invoke_task'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor.rb:275:in `dispatch'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/base.rb:425:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/guard-1.5.4/bin/guard:6\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/bin/guard:23:in `load'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/bin/guard:23\n```\n\n**_With -p for forced polling**_\n\nIt doesn't hang at all when exiting with forced polling enabled, but it does give me a thread deadlock error:\n\n```\n[1] guard(main)> exit\n16:11:46 - INFO - Bye bye...\n/Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/guard-1.5.4/lib/guard.rb:331:in `synchronize': Thread#join: deadlock 0x104638f30 - mutual join(0x103969890) (ThreadError)\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/listen-0.5.3/lib/listen/adapters/polling.rb:33:in `join'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/listen-0.5.3/lib/listen/adapters/polling.rb:33:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/listen-0.5.3/lib/listen/listener.rb:49:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/guard-1.5.4/lib/guard.rb:166:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/guard-1.5.4/lib/guard/cli.rb:104:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/task.rb:27:in `send'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/task.rb:27:in `run'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/invocation.rb:120:in `invoke_task'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor.rb:275:in `dispatch'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/base.rb:425:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/guard-1.5.4/bin/guard:6\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/bin/guard:23:in `load'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/bin/guard:23\n```\n\nAnd finally...\n\n**_On old Guard 1.5.2 version**_\n\nIn case it's useful for investigating, I should note that I first spotted this failure when we had an older version (1.5.2) in our Gemfile.  Behavior was similar but the backtrace was different.  With forced-polling both on and off, `exit` would hang and hitting CTRL-C would give us the following:\n\n```\n16:17:00 - INFO - Bye bye...\n/Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/listen-0.5.3/lib/listen/turnstile.rb:19:in `pop': Interrupt\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/listen-0.5.3/lib/listen/turnstile.rb:19:in `wait'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/guard-1.5.2/lib/guard.rb:167:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/guard-1.5.2/lib/guard/cli.rb:104:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/task.rb:27:in `send'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/task.rb:27:in `run'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/invocation.rb:120:in `invoke_task'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor.rb:275:in `dispatch'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/thor-0.16.0/lib/thor/base.rb:425:in `start'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/gems/guard-1.5.2/bin/guard:6\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/bin/guard:23:in `load'\nfrom /Users/Steve/.rvm/gems/ruby-1.8.7-p371@cg/bin/guard:23\n```\n\nI hope this is helpful.  I know my Ruby and RSpec versions are old, but this is a legacy Rails 2.3 app I've inherited.  Until this issue is resolved I'm going to have to (regretfully) go back to Autotest for this particular project.\n @SFEley Your traces etc. are the same behavior I'm getting.\n Thanks for the stack traces, that will certainly help. I'm going to review the Listen/Guard thread coordination and will also give the suggested thread option from  #344 a try.\n\nMeanwhile you can just downgrade to 1.4.0 in your `Gemfile`:\n\n``` Ruby\ngem 'guard', '1.4.0'\n```\n I think my issue is very similar, but downgrading to 1.4.0 did not resolve it. In my case, after running all tests, guard no longer responds to file changes. It doesn't matter if the call to run all specs happened on the command line or within guard, so it is very strange.\n @lukaso You need to https://github.com/guard/guard/wiki/Add-proper-Readline-support-to-Ruby-on-Mac-OS-X\n Thanks Michael. I did the pure ruby version listed as 'easiest way'. Maybe\nthat way doesn't work in all cases?\n @lukaso It depends on the Ruby version and patch version. The latest patch sets should have a fix included, however I think compiling proper readline support directly into Ruby is the best solution.\n OK. Thanks. Will look into it.\n\nOn 12 Nov 2012, at 18:26, Michael Kessler notifications@github.com wrote:\n\n> @lukaso It depends on the Ruby version and patch version. The latest patch sets should have a fix included, however I think compiling proper readline support directly into Ruby is the best solution.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n  I installed rb-fsevent and after I change a spec the suite isn't running.\n\nThe only way to trigger it is to hit enter.\n\nMy prompt looks like this:\n\n```\n[2] guard(main)> \n```\n\nWhich is unique for this project. I haven't noticed this before. Any tips to investigate issue? \n Hi, please respect the [guidelines for contributing](https://github.com/guard/guard/blob/master/CONTRIBUTING.md) so we're able to understand your issue and help you.\n\nThank you in advance.\n Sorry, thank you. Attaching missing files.\n\n```\nguard 'rspec', :version => 2 do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb')  { \"spec\" }\n\n  # Rails example\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^app/(.*)(\\.erb|\\.haml)$})                 { |m| \"spec/#{m[1]}#{m[2]}_spec.rb\" }\n  watch(%r{^app/controllers/(.+)_(controller)\\.rb$})  { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\n  watch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\n  watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n\n  # Capybara request specs\n  watch(%r{^app/views/(.+)/.*\\.(erb|haml)$})          { |m| \"spec/requests/#{m[1]}_spec.rb\" }\n\n  # Turnip features and steps\n  watch(%r{^spec/acceptance/(.+)\\.feature$})\n  watch(%r{^spec/acceptance/steps/(.+)_steps\\.rb$})   { |m| Dir[File.join(\"**/#{m[1]}.feature\")][0] || 'spec/acceptance' }\nend\n\n```\n\nGuardfile\n\n```\ngem 'rails', '3.0.9'\ngem 'rake', '0.9.2'\n\ngroup :test, :development do\n  gem \"rspec-rails\", \"~> 2.4\"\n  gem \"ruby-prof\"\n  gem \"test-unit\"\n  gem 'rb-inotify', :require => false\n  gem 'rb-fsevent', :require => false\n  gem 'rb-fchange', :require => false\n  gem 'terminal-notifier-guard'\n  gem 'database_cleaner'\n  gem 'factory_girl_rails'\n  gem 'guard'\n  gem 'guard-rspec'\nend\n\n```\n\nGemfile\n Ok, thanks. Are you sure the file you save is catch by a `watch` definition, and if yes, is there a spec file that correspond to it?\n Yes, I'm changing a file in \n\nspec/controllers. \n\nIf I try something in spec/models I don't get anything triggered either. I'm using the same Guardfile on another project that does catch it.\n\nAlso I don't know why Guard is returning with a prompt like this `[35] guard(main)> Killed:`\n Does the issue still occur if you use polling instead of rb-fsevent?\n\nSince version 1.5.0, [Guard is using Pry as its interactor](https://github.com/guard/guard/blob/master/CHANGELOG.md), that's why you see this prompt: `[2] guard(main)>`.\n How long does it take to poll? I commented out the rb-fsevent gem and it doesn't seem like anything updated after 1 minute waiting.\n Default latency for polling is 1 second.\n\nA few more hints to find the issue:\n- run Guard [in debug mode](https://github.com/guard/guard#-d--debug-option);\n- ensure again that the issue is not related to your `watch` definitions. For instance, create a `watch('a/specific/path/that/exists.rb') { 'a/specific/spec/file/that/exist_spec.rb' }`, save 'a/specific/path/that/exists.rb' and see if the associated spec is run.\n\nIf you still don't find the issue, please also share your Gemfile.lock.\n Still doesn't seem to detect a write to that file.\n\nI used\n\n```\n  watch('spec/controllers/hello_controller_spec.rb')  { 'spec/controllers/hello_controller_spec.rb' }\n```\n\nAnd nada on change.\n\n```\nGEM\n  remote: http://rubygems.org/\n  specs:\n    aaronh-chronic (0.3.9)\n    abstract (1.0.0)\n    actionmailer (3.0.9)\n      actionpack (= 3.0.9)\n      mail (~> 2.2.19)\n    actionpack (3.0.9)\n      activemodel (= 3.0.9)\n      activesupport (= 3.0.9)\n      builder (~> 2.1.2)\n      erubis (~> 2.6.6)\n      i18n (~> 0.5.0)\n      rack (~> 1.2.1)\n      rack-mount (~> 0.6.14)\n      rack-test (~> 0.5.7)\n      tzinfo (~> 0.3.23)\n    active_shipping (0.9.13)\n      activesupport (>= 2.3.5)\n    activemerchant (1.17.0)\n      activesupport (>= 2.3.11)\n      braintree (>= 2.0.0)\n      builder (>= 2.0.0)\n      json (>= 1.5.1)\n    activemodel (3.0.9)\n      activesupport (= 3.0.9)\n      builder (~> 2.1.2)\n      i18n (~> 0.5.0)\n    activerecord (3.0.9)\n      activemodel (= 3.0.9)\n      activesupport (= 3.0.9)\n      arel (~> 2.0.10)\n      tzinfo (~> 0.3.23)\n    activeresource (3.0.9)\n      activemodel (= 3.0.9)\n      activesupport (= 3.0.9)\n    activesupport (3.0.9)\n    addressable (2.2.7)\n    arel (2.0.10)\n    bcrypt-ruby (3.0.1)\n    braintree (2.11.0)\n      builder (>= 2.0.0)\n    builder (2.1.2)\n    cancan (1.6.5)\n    capistrano (2.13.4)\n      highline\n      net-scp (>= 1.0.0)\n      net-sftp (>= 2.0.0)\n      net-ssh (>= 2.0.14)\n      net-ssh-gateway (>= 1.1.0)\n    carrierwave (0.5.6)\n      activesupport (~> 3.0)\n    ckeditor (3.6.0)\n      mime-types (~> 1.16)\n      orm_adapter (~> 0.0.5)\n    client_side_validations (3.1.0)\n    cocaine (0.1.0)\n    coderay (1.0.8)\n    database_cleaner (0.9.1)\n    devise (1.5.3)\n      bcrypt-ruby (~> 3.0)\n      orm_adapter (~> 0.0.3)\n      warden (~> 1.1)\n    diff-lcs (1.1.3)\n    erubis (2.6.6)\n      abstract (>= 1.0.0)\n    exception_notification_rails3 (1.2.0)\n    factory_girl (4.1.0)\n      activesupport (>= 3.0.0)\n    factory_girl_rails (4.1.0)\n      factory_girl (~> 4.1.0)\n      railties (>= 3.0.0)\n    faraday (0.7.6)\n      addressable (~> 2.2)\n      multipart-post (~> 1.1)\n      rack (~> 1.1)\n    fastercsv (1.5.4)\n    gdata_19 (1.1.5)\n    guard (1.5.3)\n      listen (>= 0.4.2)\n      lumberjack (>= 1.0.2)\n      pry (>= 0.9.10)\n      thor (>= 0.14.6)\n    guard-rspec (1.2.1)\n      guard (>= 1.1)\n    hashie (1.2.0)\n    highline (1.6.15)\n    i18n (0.5.0)\n    json (1.7.5)\n    listen (0.5.3)\n    lumberjack (1.0.2)\n    mail (2.2.19)\n      activesupport (>= 2.3.6)\n      i18n (>= 0.4.0)\n      mime-types (~> 1.16)\n      treetop (~> 1.4.8)\n    meta_where (1.0.4)\n      activerecord (~> 3.0.0)\n      activesupport (~> 3.0.0)\n      arel (~> 2.0.7)\n    method_source (0.8.1)\n    mime-types (1.16)\n    multi_json (1.1.0)\n    multipart-post (1.1.5)\n    mysql (2.8.1)\n    mysql2 (0.2.7)\n    net-scp (1.0.4)\n      net-ssh (>= 1.99.1)\n    net-sftp (2.0.5)\n      net-ssh (>= 2.0.9)\n    net-ssh (2.6.1)\n    net-ssh-gateway (1.1.0)\n      net-ssh (>= 1.99.1)\n    nokogiri (1.5.5)\n    oauth2 (0.5.2)\n      faraday (~> 0.7)\n      multi_json (~> 1.0)\n    omniauth (1.0.3)\n      hashie (~> 1.2)\n      rack\n    omniauth-facebook (1.2.0)\n      omniauth-oauth2 (~> 1.0.0)\n    omniauth-oauth2 (1.0.0)\n      oauth2 (~> 0.5.0)\n      omniauth (~> 1.0)\n    orm_adapter (0.0.6)\n    paperclip (2.3.16)\n      activerecord (>= 2.3.0)\n      activesupport (>= 2.3.2)\n      cocaine (>= 0.0.2)\n      mime-types\n    polyglot (0.3.2)\n    pry (0.9.10)\n      coderay (~> 1.0.5)\n      method_source (~> 0.8)\n      slop (~> 3.3.1)\n    rack (1.2.5)\n    rack-mount (0.6.14)\n      rack (>= 1.0.0)\n    rack-test (0.5.7)\n      rack (>= 1.0)\n    rails (3.0.9)\n      actionmailer (= 3.0.9)\n      actionpack (= 3.0.9)\n      activerecord (= 3.0.9)\n      activeresource (= 3.0.9)\n      activesupport (= 3.0.9)\n      bundler (~> 1.0)\n      railties (= 3.0.9)\n    railties (3.0.9)\n      actionpack (= 3.0.9)\n      activesupport (= 3.0.9)\n      rake (>= 0.8.7)\n      rdoc (~> 3.4)\n      thor (~> 0.14.4)\n    rake (0.9.2)\n    rdoc (3.9.1)\n    rmagick (2.13.1)\n    rspec (2.11.0)\n      rspec-core (~> 2.11.0)\n      rspec-expectations (~> 2.11.0)\n      rspec-mocks (~> 2.11.0)\n    rspec-core (2.11.1)\n    rspec-expectations (2.11.3)\n      diff-lcs (~> 1.1.3)\n    rspec-mocks (2.11.3)\n    rspec-rails (2.11.4)\n      actionpack (>= 3.0)\n      activesupport (>= 3.0)\n      railties (>= 3.0)\n      rspec (~> 2.11.0)\n    ruby-prof (0.10.8)\n    rvm-capistrano (1.2.7)\n      capistrano (>= 2.0.0)\n    slop (3.3.3)\n    smurf (1.0.6)\n    sqlite3 (1.3.4)\n    sqlite3-ruby (1.3.3)\n      sqlite3 (>= 1.3.3)\n    terminal-notifier-guard (1.5.3)\n    test-unit (2.4.0)\n    thor (0.14.6)\n    treetop (1.4.10)\n      polyglot\n      polyglot (>= 0.3.1)\n    tzinfo (0.3.29)\n    warden (1.1.1)\n      rack (>= 1.0)\n    whenever (0.6.8)\n      aaronh-chronic (>= 0.3.9)\n      activesupport (>= 2.3.4)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  active_shipping\n  activemerchant\n  awesome_nested_set!\n  bcrypt-ruby\n  cancan\n  capistrano (~> 2.13.4)\n  carrierwave\n  ckeditor (~> 3.6.0)\n  client_side_validations\n  database_cleaner\n  devise\n  exception_notification_rails3\n  factory_girl_rails\n  fastercsv\n  gdata_19\n  guard\n  guard-rspec\n  json (~> 1.7.3)\n  meta_where\n  mysql (= 2.8.1)\n  mysql2\n  nokogiri\n  omniauth-facebook\n  paperclip\n  rails (= 3.0.9)\n  rake (= 0.9.2)\n  rmagick\n  rspec-rails (~> 2.11.4)\n  ruby-prof\n  rvm-capistrano\n  smurf\n  sqlite3-ruby\n  terminal-notifier-guard\n  test-unit\n  whenever\n```\n What's odd is that polling doesn't seem to  work either.\n Are you running Guard with Bundler?\n\n```\nbunde exec guard\n```\n\nCan you provide the debug output of Guard?\n\n```\nbunde exec guard -d\n```\n\nCan you test if the watch expression is working properly by output a log statement like:\n\n```\nwatch(%r{^app/controllers/(.+)_(controller)\\.rb$})  do  |m| \n  run = [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"]\n  puts \"Should run now: #{ run.inspect }\"\n  run\nend\n```\n Since 1.5.x I've had similar issues where a file is run once and thereafter no further changes are detected, or they are only detected after a 30-60 second delay. This is with rb-fsevent.\n\nWith polling the behavior is the same, the delay is just longer. (3-5 minutes)\n\nIn my case I'm absolutely 100% certain the correct files are being watched, (a) because they do run, just after a crazy delay, and (b) because this same guardfile has been working on this app for a long time.\n\nI'm looking into this further and will post more information if I can figure anything else out.\n Can you please test the cleanup branch? This branch has removed some threading code, which may solve the problem:\n\n```\ngem 'guard', :github => 'guard/guard', :branch => 'interactor/cleanup'\n```\n\nThanks...\n On cleanup branch the performance seems marginally better, but I'm still having a large delay with files. Let me try and describe the behavior I'm observing:\n\nIt seems like Guard will only run a test every 30-45 seconds. If nothing has changed in that long, then it will run a test almost immediately after a file change.\n\nHowever, if a test has been run within the last 30-45 seconds, then any subsequent file change will not trigger a test run until a delay of 30-45 seconds.\n\nThis is on the cleanup branch with both fsevent and polling.\n @thibaudgg I have about 20-30 files total in there.\n I am having the same problem as @dfischer. I have tried using the polling, debug doesnt seem to show any errors. I have also verified that rb-fsevent is working by running their same script https://github.com/thibaudgg/rb-fsevent#singular-path in the same directory.\n Could you all try to downgrade to 1.4.0 and let us know if the issue is still here or not?\n Hi @rymai I downgraded to 1.4.0 and that resolved my issue.\n @rymai Downgrading to 1.4.0 improved my issue. There is still a noticeable lag between saving a file and a test being triggered if the file that is saved just passed all tests.\n\nie: save - red(no lag) - save - green(no lag) - save - (lag)\n\nHowever it is much less than on the later version.\n For reference, here is my guardfile:\n\n```\nguard 'pow' do\n  watch('.powrc')\n  watch('.powenv')\n  watch('Gemfile')\n  watch('Gemfile.lock')\n  watch('config/application.rb')\n  watch('config/environment.rb')\n  watch(%r{^config/environments/.*\\.rb$})\n  watch(%r{^config/initializers/.*\\.rb$})\nend\n\nguard 'spork', :rspec_env => { 'RAILS_ENV' => 'test' } do\n  watch('config/application.rb')\n  watch('config/environment.rb')\n  watch(%r{^config/environments/.+\\.rb$})\n  watch(%r{^config/initializers/.+\\.rb$})\n  watch('Gemfile')\n  watch('Gemfile.lock')\n  watch('spec/spec_helper.rb')\nend\n\nguard 'rspec', :all_on_start => false, :all_after_pass => false do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^lib/(.+)\\.rb$})                           { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\n  watch('spec/spec_helper.rb')                        { \"spec\" }\n  # watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n  watch(%r{^app/views/(.+)/.*\\.(erb|haml)$})          { |m| \"spec/requests/#{m[1]}_spec.rb\" } # Capybara request specs\nend\n```\n\nand Gemfile\n\n```\ngroup :development, :test do\n    gem 'sqlite3'\n    gem 'debugger'\n    gem 'rspec-rails'\n    gem 'capybara'\n    gem 'spork'\n    gem 'rb-fsevent'\n    gem 'guard', '1.4.0'\n    gem 'guard-spork'\n    gem 'guard-rspec'\n    gem 'guard-pow'\n    gem 'growl'\nend\n```\n\nNote: After originally posting I noticed there were a few duplicated lines in my guardfile twice. I revised my guardfile to take those out (edited revisions in above), and re-ran all the test cases discussed in this thread so far, and that did not affect my results.\n\nThe best I can tell, something that happens after a test passes all green consumes a lot of computer horsepower. I notice that when a test run is all green the computer cranks away for a while, in Activity Monitor CPU useage jumps to 30-50% and stays there for a while, then when it cools down it runs the next test.\n\nThere is no output in the terminal though, so I don't know what it's doing behind the scenes.\n Downgrading to 1.4 solved my issue.\n I still have the problem that I'm unable to reproduce the issue. Can you guys please share some info about your environment (OS X and Ruby version, project folder shared with Dropbox or NFS)? Perhaps you have something in common that could give us a hint.\n\nIt would be interesting to see if using Pry from master would have an influence on the problem (the latest stable release is 4 months old), by adding this to your `Gemfile`\n\n``` Ruby\ngem 'pry', :github => 'pry/pry', :branch => 'master'\n```\n @netzpirat Adding that like to my `Gemfile` produces the following error\n\n`You passed :github as an option for gem 'pry', but it is invalid.`\n\nI am using \nBundler 1.0.21 \nOS X 10.7.5\nRuby 1.9.2\nLocal disk drive, no Dropbox/NFS\nRails 3.1.3\n Ruby 1.9.3-p194\nBundler 1.1.5\nOS X 10.8.2\nRails 3.2.8\n\nLocal disk drive, no cloud stuff. Not sure pry would affect, because my issue is roughly the same in 1.4x as it is in 1.5x.\n\nAt least on my end I feel like I'm getting a memory leak or something. It's really weird.\n Same as Andrew.\n\nOn Sun, Nov 4, 2012 at 11:05 AM, Andrew Burleson\nnotifications@github.comwrote:\n\n> Ruby 1.9.3-p194\n> Bundler 1.1.5\n> OS X 10.8.2\n> Rails 3.2.8\n> \n> Local disk drive, no cloud stuff.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/guard/guard/issues/357#issuecomment-10053965.\n If you've tested the latest Pry without success, let us start with an empty project, just to see if it's a Guard issue or a combination of plugins that leads to the problem. Please create an empty directory an add the following `Gemfile`:\n\n``` Ruby\nsource :rubygems\ngem 'guard'\ngem 'rb-fsevent'\n```\n\nNext create a `Guardfile` without ant plugin dependency:\n\n``` Ruby\nrequire 'guard/guard'\n\nmodule ::Guard\n  class InlineGuard < ::Guard::Guard\n    def run_on_changes(paths)\n      puts \"Got change for: #{ paths.inspect }\"\n    end\n  end\nend\n\nguard :inline_guard do\n  watch(%r{.*})\nend\n```\n\nNow install the gems and run Guard:\n\n``` Bash\n$ bundle\n$ bundle exec guard\n13:17:08 - INFO - Guard uses TerminalTitle to send notifications.\n13:17:08 - INFO - Guard is now watching at '/Users/michi/Desktop/test'\n[1] guard(main)> \n```\n\nNow try to trigger an event directly from within Guard like:\n\n``` Bash\n[1] guard(main)> .touch hello\n[2] guard(main)> Got change for: [\"hello\"]\n```\n\nIf this doesn't work, disable the notifications in the `Guardfile` by adding:\n\n``` Ruby\nnotification :off\n```\n\nand run again:\n\n``` Bash\n$ bundle exec guard\n13:19:53 - INFO - Guard is now watching at '/Users/michi/Desktop/test'\n[1] guard(main)> .touch hi\n[2] guard(main)> Got change for: [\"hi\"]\n```\n\nIf that doesn't work, disable the interactor in the `Guardfile` by adding:\n\n``` Ruby\ninteractor :off\n```\n\nand run Guard in the background and test it with:\n\n``` Bash\n$ bundle exec guard &\n[1] 45087\n13:21:47 - INFO - Guard is now watching at '/Users/michi/Desktop/test' \n\n$ touch hihi\nGot change for: [\"hihi\"]\n\n$ kill 45087\n```\n @netzpirat Unfortunately, none of these things worked. Here are the results:\n\nInitial Guard File Result\n\n```\n08:41:04 - INFO - Guard uses TerminalTitle to send notifications.\n08:41:04 - INFO - Guard is now watching at '/Users/kfalconer/workspace/guard_test'\n[1] guard(main)> .touch hello\n[2] guard(main)> exit\n[2] guard(main)> exit\n/Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/gems/listen-0.5.3/lib/listen/listener.rb:55:in `stop': undefined method `stop' for nil:NilClass (NoMethodError)\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/gems/guard-1.5.3/lib/guard.rb:173:in `stop'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/gems/guard-1.5.3/lib/guard/cli.rb:106:in `rescue in start'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/gems/guard-1.5.3/lib/guard/cli.rb:103:in `start'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/gems/thor-0.16.0/lib/thor/task.rb:27:in `run'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/gems/thor-0.16.0/lib/thor/invocation.rb:120:in `invoke_task'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/gems/thor-0.16.0/lib/thor.rb:275:in `dispatch'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/gems/thor-0.16.0/lib/thor/base.rb:425:in `start'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/gems/guard-1.5.3/bin/guard:6:in `<top (required)>'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/bin/guard:19:in `load'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/bin/guard:19:in `<main>'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/bin/ruby_noexec_wrapper:14:in `eval'\n    from /Users/kfalconer/.rvm/gems/ruby-1.9.2-p290@guard_test/bin/ruby_noexec_wrapper:14:in `<main>'\n```\n\nWith notifications off I also had no result, and when typing `exit` the app hung.\n\nGuard Background Test - Looks like Guard crashed\n\n```\nCardadmins-MacBook-Pro-2:guard_test kfalconer$ bundle exec guard &\n[2] 18442\nCardadmins-MacBook-Pro-2:guard_test kfalconer$ touch hihi\n\n[2]+  Stopped                 bundle exec guard\nCardadmins-MacBook-Pro-2:guard_test kfalconer$\n```\n @kfalconer Ok, thanks. I see two interesting things. First, you're using `rubygems-bundler`, so you should not prefix Guard with `bundle exec`. Second, Guard fails to properly exit, since the `Listen` gem has no adapter found (`listener.rb:55:in`stop': undefined method `stop' for nil:NilClass`). Can you go to your normal project, start Guard and enter the following into the Guard console:\n\n``` Ruby\n[1] guard(main)> Guard.listener.adapter.class\n=> Listen::Adapters::Darwin\n```\n\n@dfischer, @burlesona Do you guys use `rubygems-bundler`?\n @netzpirat I don't use rubygems-bundler. I'll run the tests you spelled out as soon as I get a chance. Thanks!\n Same issue here. Everything worked with guard 1.4.0, but after upgrading to 1.5.3, guard doesn't run on file change. Guardfile, gems, bundle version, etc. are untouched. Even saving `Guardfile` itself doesn't do anything. \n- Guard 1.5.3\n- Pry 0.9.10\n- Mac OS X 10.7.4\n- RVM, Ruby 1.9.3-p0\n- Bundler 1.2.1\n\nSome extra information:\n- I am not using `rubygems-bundler`.\n- I am running guard via `bundle exec guard`.\n- When I type `exit`, the app hangs. The `return` key works as expected.\n I have the same issue - `guard <= 1.4.0` works fine, but `>= 1.5.0` does not detect file changes. I have also verified in IRB that `rb-fsevents` itself does see the changes.\n\nI followed @netzpirat [testcase](#issuecomment-10068592)  and got Guard to respond with the last test `interactor :off`. I also verified that when removing `notification :off` still works. So the problem seems somewhere in the interactor thing.\n\n``` Ruby\nrequire 'guard/guard'\n\nmodule ::Guard\n  class InlineGuard < ::Guard::Guard\n    def run_on_changes(paths)\n      puts \"Got change for: #{ paths.inspect }\"\n    end\n  end\nend\n\nguard :inline_guard do\n  watch(%r{.*})\nend\n\ninteractor :off    # <--- adding this gets things working\n```\n\nMy versions:\n\n``` Bash\n$ ruby -v                                                                                                                           [10:16:57]\nruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-darwin10.4.0]\n\n$ gem list                                                                                                                          [10:19:53]\n\n*** LOCAL GEMS ***\n\nbundler (1.2.1, 1.0.0)\ncoderay (1.0.8)\nguard (1.5.3)\nlisten (0.5.3)\nlumberjack (1.0.2)\nmethod_source (0.8.1)\npry (0.9.10)\nrake (0.8.7)\nrb-fsevent (0.9.2)\nslop (3.3.3)\nthor (0.16.0)\n\n$ system_profiler SPSoftwareDataType                                                                                                [10:21:41]\nSoftware:\n\n    System Software Overview:\n\n      System Version: OS X 10.8.2 (12C60)\n      Kernel Version: Darwin 12.2.0\n```\n\nMy files are all local and nothing is shared nor clouded.\n\nFor the time being, I'm downgrading to `1.4.0`\n I still have no clue what causes the issue, because I can't reproduce it. I guess the interactor thread swallows an exception, hiding the cause from us. So I changed the threading code a bit and Guard will now also set [Thread.abort_on_exception](http://www.ruby-doc.org/core-1.9.3/Thread.html#method-c-abort_on_exception-3D) to true when in debug mode.\n\nCan you guys please make sure that you're using the latest rubygems and Bundler versions:\n\n``` Bash\n$ cd ~\n$ gem update --system\n$ gem update\n```\n\nAnd use Guard from the `master` branch, by adding\n\n``` Ruby\ngem 'guard', :github => 'guard/guard', :branch => 'master'\n```\n\nto your `Gemfile` and run `bundle update`. Now start Guard in debug mode and we should see now any exception that occurs in the Listen and the Interactor thread.\n\n``` Bash\n$ bundle exec guard -d\n```\n\nAlso updating to the latest Pry version is interesting, since a lot has happend on Pry master in the last 4 months:\n\n``` Ruby\ngem 'pry', :github => 'pry/pry', :branch => 'master'\n```\n\nThanks a lot.\n Still nothing.\n\nMy versions\n\n``` Bash\n$ gem update --system\nLatest version currently installed. Aborting.\n\n$ gem --version\n1.8.24\n\n$ gem update\nUpdating installed gems\nNothing to update\n\n$ bundle show\nGems included by the bundle:\n  * bundler (1.2.1)\n  * coderay (1.0.8)\n  * guard (1.5.3 251c74a)\n  * listen (0.5.3)\n  * lumberjack (1.0.2)\n  * method_source (0.8.1)\n  * pry (0.9.10 322313e)\n  * rb-fsevent (0.9.2)\n  * slop (3.3.3)\n  * thor (0.16.0)\n```\n\nI run `guard`:\n\n``` Bash\n$ bundle exec guard -d\n13:41:53 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n13:41:53 - INFO - Guard uses TerminalTitle to send notifications.\n13:41:53 - INFO - Guard is now watching at '/Users/laas/proged/guardtest'\n13:41:53 - DEBUG - Hook :start_begin executed for Guard::InlineGuard\n13:41:53 - DEBUG - Command execution: hash stty\n13:41:53 - DEBUG - Command execution: stty -g 2>/dev/null\n13:41:53 - DEBUG - Start interactor\n[1] guard(main)> \n```\n\nWhen I touch a file in another terminal window, nothing happens.\n\nThe same thing with `interactor :off` in Guardfile:\n\n``` Bash\n$ bundle exec guard -d\n13:57:03 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n13:57:03 - INFO - Guard uses TerminalTitle to send notifications.\n13:57:03 - INFO - Guard is now watching at '/Users/laas/proged/guardtest'\n13:57:03 - DEBUG - Hook :start_begin executed for Guard::InlineGuard\n```\n\nBut when I touch a file, it outputs:\n\n``` Bash\n13:57:05 - DEBUG - Trying to run Guard::InlineGuard#run_on_modifications with [\"hello\"]\n13:57:05 - DEBUG - Hook :run_on_changes_begin executed for Guard::InlineGuard\nGot change for: [\"hello\"]\n13:57:05 - DEBUG - Hook :run_on_changes_end executed for Guard::InlineGuard\n```\n\nJust to make sure, I run this in `bundle exec irb`:\n\n``` Ruby\nrequire 'listen'\n\nListen.to(Dir.pwd) do |*args|\n  puts \"Got change: #{args.inspect}\"\nend\n```\n\nAnd when I touched a file, it outputs:\n\n```\nGot change: [[\"/Users/laas/proged/guardtest/hello\"], [], []]\n```\n\nSo, `Listen` gem itself detects changes.\n Can you check if Listen has an active adapter?\n\n``` Ruby\n[1] guard(main)> ::Guard.listener.adapter\n```\n Ok, I can now reproduce it in Ruby 1.9.2-p320. Looks like the interactor thread blocks the listener thread. I'll keep you updated...\n Can you please add\n\n``` Ruby\ngem 'rb-readline'\n```\n\nto your `Gemfile` and see if that resolves the issue for you?\n Yay! Adding `rb-readline` did the job!\n\nMeanwhile I wrote myself a [small threaded guard clone](https://gist.github.com/4024548) to test the issue.\nIf I use the `MyInteractor` thread, everything works, but if I switch to `MyPry` thread, it blocks just as in Guard.\n\n**Confirmed**, that adding `rb-readline` to that testcase also fixes issue there.\n\nAlso, if its of any help still, I found that I could start `listener` from Pry console and then it blocks until first fsevent is received:\n\n``` Ruby\n[1] guard(main)> ::Guard.listener.start\n14:21:33 - DEBUG - Stop interactor\n14:21:33 - DEBUG - Command execution: stty gfmt1:cflag=4b00:iflag=6b02:lflag=200005cf:oflag=3:discard=f:dsusp=19:eof=4:eol=ff:eol2=ff:erase=7f:intr=3:kill=15:lnext=16:min=1:quit=1c:reprint=12:start=11:status=14:stop=13:susp=1a:time=0:werase=17:ispeed=38400:ospeed=38400 2>/dev/null \n14:21:33 - DEBUG - Trying to run Guard::InlineGuard#run_on_modifications with [\"hello\"]\n14:21:33 - DEBUG - Hook :run_on_changes_begin executed for Guard::InlineGuard\nGot change for: [\"hello\"]\n14:21:33 - DEBUG - Hook :run_on_changes_end executed for Guard::InlineGuard\n14:21:33 - DEBUG - Command execution: stty -g 2>/dev/null\n14:21:33 - DEBUG - Start interactor\n[1] guard(main)>\n```\n Please visit https://github.com/guard/guard/wiki/Add-proper-Readline-support-to-Ruby-on-Mac-OS-X to add proper readline support to Ruby on OS X.\n +1, `rb-readline` seems to have fixed it for me.\n @netzpirat When I tried the test you prescribed (creating an empty project), guard worked fine.\n\nThen I tried adding `rb-readline`, and it made no difference in my app. Side note: can you add to your `rb-readline` page, is there any way to check and see which ruby build you have, ie. see if this is likely the issue?\n\nSo, I must have a different problem. To recap, here's what is happening:\n\nWhen running guard in my app, the first spec run will go fine, but any subsequent spec runs take anywhere from 1-5 minutes to be picked up. Interestingly, if I save a file after the first spec run, while it is waiting and waiting to be picked up, I can hit enter and guard will immediately start running all specs. Eventually, sometime after all specs have run, the file I saved before I ran all specs will run.\n\nNow, I tried guard 1.4x and 1.5x, no difference. I tried with and without `rb-readline`, no difference.\n\nI was thinking that maybe it is a problem with guard-spork, since the specs run fine manually, so I removed guard-spork and tried that. No difference, same exact behavior.\n\nJust to double check, I ran spork outside of guard, and with spork running I can manually run many specs in a row, back to back, no perceptible delay between one spec finishing and the next one firing. So, that doesn't seem to be it.\n\nI tried with and without guard-pow, no difference there either.\n\nI tried removing `growl`. No difference.\n\nI did all of the above test with `rb-readline` gem, and it had no effect.\n\nSo, at this point, my issue is something different. Guard runs fine in an empty project. Rspec and Spork run fine on their own. But somehow the combination of the above is causing guard to become unresponsive to file system events (the pry console is still responsive) after the first event.\n *_After doing all the above, I found a lead: *_\n\n```\n[1] guard(main)> ::Guard.listener.adapter\n```\n\nThis responds if I run it immediately after running guard (before any file system events).\n\nThis responds if I run it after _manually_ trigger all specs run (hit enter) but no file system events.\n\n**This  _does not respond_ if I run it after a file system event, it just hangs forever.**\n\nSo, that's the first thing from this thread I've found that doesn't do what it is 'supposed to' (besides taking forever to pick up file system changes).\n\nAny suggestions for what to try next?\n @netzpirat @thibaudgg : Should I open a new issue for the problem I'm still having, since it seems different from what worked for everyone else on this thread?\n @burlesona looks like your issue is different, since this one is about the listener being completely blocked, whereas your issue is about a lag, but it doesn't happen without other Guard plugins. It would be great to start over with a new issue.\n\nYou can use the test case from @borgand to see if you have the readline issue: https://gist.github.com/4024548\n\nIn your case, I would upgrade to the latest Ruby (ruby-1.9.3-p286 instead of ruby-1.9.3-p194) and add proper readline support to it, see https://github.com/guard/guard/wiki/Add-proper-Readline-support-to-Ruby-on-Mac-OS-X\n\nAlso upgrade to Bundle 1.2.1 and run Guard from the master branch.\n I seem to have a little glitch still, which might be related to the `readline`:\n\nWhen I start `guard`, pry prompt works as expected, I can hit _Enter_ to run all tests etc.\n\nBut when Guard detects a file change and runs specific task for it, then from that moment on, the pry prompt stops working - instead of submitting the command, it inserts **^M** characters.\n\nListen still keeps detecting file changes and running tasks, but I can't run all tasks anymore, until I stop Guard with _^C_ or _^D_.\n\nI can debug this a bit later, but maybe you can already guide me in some direction.\n Installing rb-readline resolved this issue for me.\n\nI'm running ruby 1.8.7 with rails 3.2.5, and guard 1.5.4\n Adding the rb-readline gem also fixed this same issue for me\n\nguard 1.5.3\nruby 1.9.2p290\nrails 3.2.8\n It turned out that `rb-readline` caused the **^M** characters and even in Rails Console when I started typing before console was finished loading.\n\nOnly difference was that Rails Console submitted the lines when it finished and afterwards all was OK. Guard only submitted the line when I followed it up with **^D**, which then run the command (e.g. run all tests) and then exited the Guard session.\n\nI was able to fix this when I installed latest Ruby 1.9.3 with **native readline** from **Homebrew** as suggested in the wiki page.\n\nNow I'm able to run commands from Pry console and also detect file changes.\n Thanks for the info. I'll update the wiki page...\n  I love the way the diffs are shaping up, but I am also having a few issues.\n\nI have one Rails project where, if I `require'pry';binding.pry` at some point in test execution, the prompt comes up but is in contention with the Guard interactor Pry.\n\nThat same project does similarly with `pry-rescue/minitest` Pries.\n\nI tried to replicate it on a tiny project but it doesn't exhibit the same behavior. Do you see it on your end, or should I bisect these two to figure out what triggers it? Sorry for not doing it right away \u2014 am at work and will be busy for next several evenings.\n Since there's no way that `bindings.pry` would stop the Guard Pry session in another thread, the idea of a continuously running Guard Pry session will never work. So I'm going to abandon this pull request and cherry-pick the good parts.\n  Now that Pry is our Guard interactor (PR #327), anyone who has followed the Pry wiki for using Pry with Rails without altering their Gemfile (https://github.com/pry/pry/wiki/Setting-up-Rails-or-Heroku-to-use-Pry#wiki-without_gemfile) will see Guard inexplicably die immediately prior to loading Pry.\n\nThis has to do with their `~/.pryrc` loading the Rails environment.  I haven't dug too deeply into the issue, but ultimately, we don't want the Rails environment to be loaded in Guard's Pry session.  \n\nI'm not sure what the best course of action is to solve this.  I think it's still valuable to be able to load Rails in any pry session without an initializer or a plugin like pry-rails (consider the situation where only one developer on a team wants to use Pry), so I don't think \"don't do that\" is a sufficient answer.  Fortunately, if anyone has copied and pasted the .pryrc snippet on the Pry wiki exactly, then loading Rails can be skipped with the `ENV['SKIP_RAILS']` environment variable.  \n\nMy current solution is to add: `ENV['SKIP_RAILS'] = 'true'` to my `~/.guard.rb` file.  \n\nIf that's the best solution, then it should probably be mentioned somewhere in Guard's docs.  I'd be happy to provide any additional information if it's needed.  \n Excellent!  I think that makes the most sense.\n\nAlso, Guard has completely changed how I work and has become an invaluable addition to my toolchain.  I can't thank you enough for it!\n @jimryan thanks for your kind words!\n Hi! So is it not recommended to load rails in guard's pry console?\n- If yes, why? It would seem to me like a handy quick console to quickly investigate why a test is failing, for example.\n- If not, how can I actually do it without breaking guard?\n\nThanks a lot and congratulations for guard!\n > Hi! So is it not recommended to load rails in guard's pry console?\n> \n> There is no official recommendation from our side. I usually have a Pry session and a Guard session side by side, so I can work in the Pry session when Guard is running some tests or similar.\n> If yes, why? It would seem to me like a handy quick console to quickly investigate why a test is failing, for example.\n> Sure, I do exactly that. I'm in the test environment in the Guard session when investigating a spec, whereas in the Pry session I'm in the development environment. I usually work by triggering Pry manually, but there is a plugin that opens a Pry session when an exception occurs (https://github.com/ConradIrwin/pry-rescue).\n> If not, how can I actually do it without breaking guard?\n\nI'm not aware that the Rails env would break guard, but it might be a problem mixing environments.\n\nMichael\n\n---\n\nMichael Kessler // Schulgasse 8 // 5620 Bremgarten // Switzerland\nMobile +41 79 244 55 61 // Phone +41 56 496 03 58 // @netzpirat\n Thanks Michael!\n\nThe title of this issue made me think that loading rails in the guard console would break guard. But it actually seems to work! :)\n  Is it just me, or with 1.5.0 the `interactor :off` makes Guard throw a Thor error and completely ignore the Guardfile?\n\n```\n23:36:07 - ERROR - Invalid Guardfile, original error is:\n> [#] can't modify frozen Thor::CoreExt::HashWithIndifferentAccess\n23:36:07 - ERROR - No guards found in Guardfile, please add at least one.\n```\n That was fast, thanks a lot :+1: \n  If you use 1.5.0 and do, at the prompt: `system 'vim Guardfile'` (or `.vim Guardfile`) it will show vim and work fine, until the moment you change a file that is Guarded (such as `:w`'ing the `Guardfile`).\n\nIt will then begin to split keystrokes between Guard and vim.\n\nMy theory is that the problem is Pry being run in a thread. I know that if you `fork` from a regular Pry prompt, it will act in a similar manner.\n\nMore to follow.\n So, guard spawns a new pry on every change. You can see it in the prompt, always getting a `1` in `[1] guard(main)>`.\n\nThis probably shouldn't be the case, but I can see how it came from the previous direct-to-readline interactor that could more easily work with it. But let's assume for a bit that it is right to stop/start the interactor so much.\n\nAs of commit 767a79b or so, if you watch `guard -d`, it will bracket consistently with:\n\n```\n::Guard::UI.debug 'Stop interactor'\n# (do stuff)\n::Guard::UI.debug 'Start interactor'\n```\n\nBut now, you don't get them in exact pairs. Sometimes you even just get the \"Stop\", and sure enough, the interactor is gone.\n\nI'm not sure what the perfect solution is. I wonder if the threading can be toned down a good bit and made simpler.\n\nFor now, the Issue can be worked around by manually doing `Guard.pause` before running vim. (Then doing it again after \u2014 though it won't pick up on intermediate changes in between.)\n @netzpirat awesome thanks!\n  Hi,\n\nI've got guard-livereload working perfectly on a Mac Lion. But on another (Snow Leopard) I've got an issue.\n\nWhen I type guard, I get:\n\n```\n01:00:03 - INFO - Guard uses TerminalTitle to send notifications.\n01:00:03 - INFO - Guard is now watching at '/Users/romuald/Documents/devserver/temp/tgr'\n01:00:03 - INFO - LiveReload 1.6 is waiting for a browser to connect.\n[1] guard(main)> 01:00:21 - INFO - Browser connected.\n01:00:21 - INFO - Browser URL: http://localhost/temp/tgr/\n[1] guard(main)> \n[1] guard(main)> \n01:00:37 - INFO - Run all\n[2] guard(main)> \n```\n\nAs you can see the program seems interrupted by \"guard(main)\" and is waiting for something, which I don't see on the computer (the one where it works).\n\nIt looks like the chrome plugin livereload connects successfully, but when I save a file, it is going back on this guard(main) line and the browser doesn't reload.\n\nI don't know anything about ruby btw... Any idea?\n\nMy version of ruby is 1.9.3\n\nGemfile:\n\n```\nsource \"http://rubygems.org\"\ngroup :development do\n  gem 'guard'\n  gem 'guard-livereload'\n  gem 'rb-fsevent', :require => false\nend\n```\n\nGuardfile:\n\n```\nguard 'livereload', :apply_js_live => false, :apply_css_live => true do\n  watch(%r{lab/.+\\.(css|js|html)$})\nend\n```\n\nThanks\n\nRomu\n I had this same issue after upgrading today. It seems that the latest and greatest Pry interaction is halting Guard and forcing user input. I've fixed this for myself by running\n\n```\nbundle exec guard start -i \n```\n\nGuard will now run its jobs in the background like it used to.\n  :+1:\n :shipit: \n  Currently it uses whatever tmux's default foreground color is set to. For someone using the tmux solarized theme this is orange. A failure background of bright red with orange text is almost impossible to read.\n\nI've added an option to set the foreground color defaulting it to white.\n Great! Thanks for the quick merge. :)\n\nHow do you guys decide when to release a gem update? I see releases about\nonce a month on rubygems. Is one coming up?\n\nOn Oct 22, 2012, at 2:17 AM, Michael Kessler notifications@github.com\nwrote:\n\nThanks for the pull request. I've changed it to support a different\nforeground color per message type, as it's the same with the foreground\ncolor. Also the missing specs have been added.\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/guard/guard/pull/347#issuecomment-9654476.\n Interesting. I shall check this out tomorrow.\n\nOn Oct 22, 2012, at 3:02 AM, Michael Kessler notifications@github.com\nwrote:\n\nI like to release a new Guard version this week, I just need some feedback\non #327 https://github.com/guard/guard/issues/327, as it seems to work\nfine and is ready to merge.\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/guard/guard/pull/347#issuecomment-9655434.\n  If I attempt to give any commands on the command line to guard, I get the error stated.\n\n```\nguard start requires at least 0 argument: \"guard start\"\n```\n\nRunning guard as just `guard` is fine, but even `guard help` returns that error.\n\n```\nruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-linux]\n```\n\nGems:\n\n```\nGEM\n  remote: https://rubygems.org/\n  specs:\n    addressable (2.3.2)\n    chunky_png (1.2.6)\n    compass (0.12.2)\n      chunky_png (~> 1.2)\n      fssm (>= 0.2.7)\n      sass (~> 3.1)\n    em-websocket (0.3.8)\n      addressable (>= 2.1.1)\n      eventmachine (>= 0.12.9)\n    eventmachine (1.0.0)\n    ffi (1.1.5)\n    fssm (0.2.9)\n    guard (1.4.0)\n      listen (>= 0.4.2)\n      thor (>= 0.14.6)\n    guard-compass (0.0.6)\n      compass (>= 0.10.5)\n      guard (>= 0.2.1)\n    guard-livereload (1.0.1)\n      em-websocket (>= 0.2.0)\n      guard (>= 1.1.0)\n      multi_json (~> 1.0)\n    listen (0.5.3)\n    multi_json (1.3.6)\n    rb-inotify (0.8.8)\n      ffi (>= 0.5.0)\n    sass (3.2.1)\n    thor (0.16.0)\n    yajl-ruby (1.1.0)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  guard\n  guard-compass\n  guard-livereload\n  rb-inotify\n  yajl-ruby\n```\n  Sounds awesome! \n Awesome!\n\nShouldn't the `:only` and `:except` option accept a string/symbol or array of strings/symbols instead of a regex?\n\ne.g. `:only => ['rspec', :test, :livereload]`\n  So, if you're hip and stuff, you've been [automatically starting Pry](https://github.com/banister/plymouth) within the context of any failing test.\n\nThis is super powerful, because for unintentional failures you can `cd`/`ls`/`$`/`?`/`up`/`down`/etc (with `pry-stack_explorer` and `pry-debugger` and `pry-syntax_hacks`, for extra handiness).  But you can even take it further by using the REPL to sketch out your implementation and check that it passes the tests, then use `edit-method` (or even the upcoming `save-source`) to make your REPLd code permanent on the filesystem.\n\nThe downside is that this means you end up with `pry` sessions sitting around being dumb when you change your test's+impl's externally. This means you have to go Ctrl+d them a lot.\n\nSo, I want to make a guard plugin to kill them off according to the same rules as my tests follow in the `Guardfile`.\n\nI could go poking around and hack something together, but I'd like your input first.\n\nI was picturing a thread that started up and <somehow loaded the guard rules> then killed `$$` whenever one of the watched files changed.\n\nAny ideas?\n\nThanks!\n @netzpirat - Cool.\n\nKeep in mind that prying into RSpec failures works, but not perfectly, due to the generated AST looking like  `RSpec::Core::ExampleGroup::Nested_4`. So, figuring out where you are is more of a pain, plus `edit -c` from Pry will in fact reload the `foo_spec.rb`, but RSpec will _not_ replace the in-memory spec. You have to kill everything off and let Guard pick up the re-running of the tests (for spec changes, that is. Implementations reload/rerun just fine).\n\n`minitest/spec` is better w.r.t the AST. It makes predictable methods.  But still I'm finding that for live coding you want just Plain Old Classes the way Test::Unit style tests are. E.g. you can do `edit -c`, fix the test up, then when it exits you can call it by name, like `test_bar`. Worx grate.\n\nThere is a whole frontier, here. Let's blaze a new thing.\n Update!\n\n`pry-rescue`'s git version now allows:\n\n``` ruby\nrequire 'pry-rescue/minitest'\n```\n\nSo between this and #350, we're on the trail.\n What about a generic option to guard that makes it spawn a thread while the guard is running, then kills off that process if one of the guarded files changes again?\n\nWould close this issue and would be useful anyway:\n- if you wanted a workflow where you could save a test or impl file and cancel the current test run\n- for the \"run all on success\" mode (let the individual test pass, then do some more edits and save to kill the run-all)\n Nice idea, will give it a try...\n I finally got around to: https://github.com/ConradIrwin/pry-rescue/pull/18\n\nThen one can do something like this, in `~/.vim/ftplugin/ruby.vim`:\n\n```\nmap <f3> :wa<cr>:!kill-pry-rescue<cr>\n```\n\nOne thing that still seems to need fixing is the same as https://github.com/guard/guard/pull/327#issuecomment-9577092\n\nI put this in my `~/.guardrc` to fix that:\n\n```\nPry.hooks.get_hook :after_eval, :restore_visiblity or\n   Pry.hooks.add_hook :after_eval, :restore_visiblity do system 'stty echo' end\n```\n\nThe `get_hook` check could be removed if the `add_hook` was done at the right level (it's just that the `~/.guardrc` gets re-sourced on each new pry instance, and generates a warning).\n\nI think if the echo part is fixed, this Issue can be closed.\n  I was using the `:tmux` notifier for the first time tonight, and was surprised that my status bar wasn't showing the correct red/green status during test runs. Depending on a user's TMux configuration, certain fields aren't available to be colored. In my case, `status-left-bg` wasn't available. But `status-right-bg` was.\n\nIf this is a problem that you see others encountering, I've attached a new option to the `:tmux` notifier allowing that field to be changed if desired. The default behavior is left intact and all of my installed rubies pass the `spec:portability` suite. Let me know if there's anything I can do to help! Later!\n Nice! I found the left status to limited that's why I added the display message option. the more options the better :+1: \n  Signed-off-by: Tomas Pokorny tnt@netsafe.cz\n  Can you add notifier to terminal + terminal title?\n\nSomethink like this:\n\n # Module for notifying test result to terminal title\n module Guard\n  module Notifier\n    module TerminalTitle\n      extend self\n\n```\n  # Test if the notification library is available.\n  #\n  # @param [Boolean] silent true if no error messages should be shown\n  # @return [Boolean] the availability status\n  #\n  def available?(silent = false)\n    true\n  end\n\n  # Show a system notification.\n  #\n  # @param [String] type the notification type. Either 'success', 'pending', 'failed' or 'notify'\n  # @param [String] title the notification title\n  # @param [String] message the notification message body\n  # @param [String] image the path to the notification image\n  # @param [Hash] options additional notification library options\n  #\n  def notify(type, title, message, image, options = { })\n    set_terminal_title(\"[#{title}] #{message}\")\n  end\n\n  def set_terminal_title(text)\n    text.sub!(/^\\n/, '')\n    text.sub!(/\\n.*/m, '')\n    puts \"\\e]2;#{text}\\a\"\n  end\nend\n```\n\n  end\n end\n I submit it https://github.com/guard/guard/pull/342\n  The first patch allows general overriding of the `DEFAULTS` options in the emacs notifier.\n\nThe second patch adds the ability to override options that don't exist in `DEFAULTS`. For example, a custom color can be set for 'pending' notifications (instead of just falling back to `DEFAULTS[:default]`)  by providing a `:pending` option to the `notification` method.\n\nThis allows the Guardfile to look something like:\n\n``` ruby\nemacs_colors = {\n  :success => 'Green',\n  :pending => 'Yellow',\n  :failed  => 'Red',\n  :default => 'White',\n}\nnotification :emacs, emacs_colors\n```\n\nPlease let me know if if there is anything that you'd like to be done differently.\n :+1: Thanks!\n  $ guard 2>/dev/null > /dev/null &\n[1] 30953\n$ jobs\n[1]+ Running guard 2> /dev/null > /dev/null &\n$ touch xxx.html\n\n[1]+ Stopped guard 2> /dev/null > /dev/null\n\nNot clear why it stops. nohup doesn't help for some reason too. This makes guard unusable as a background process.\n\nSo I have to open another terminal just for guard to run -- this is not cool.\n  Updated the options and an example for the tmux notifier\n  The current `:tmux` notifier implementation was too limited that it only colored the left status bar. I want to see a message, so updated the notifier to also use `display-message` when configured. I has extended configurable options, so 'powerline' users can pimp there messages :-)\n Ok for you @netzpirat? (I don't know/use :tmux)\n What it basically does (easy to test) when in tmux\n\n```\ntmux display-message 'hello world'\n```\n\nThis will show for a short period of time (configurable by `tmux set display-time`) an message instead of the statusbar. after the period the statusbar returns. this is all standard tmux behaviour, and ideal for notifications such as those of Guard. The user can get the message history by using `Ctrl+b ~` (where Ctrl+b is your key to activate tmux).\n\nI think a quick scan of the code will give a general idea what it does.\n Ah I'm afraid that is not fully correct, since my code will set that display-time for the user, it overwrites custom settings. I will refork and update the readme in a pull request ok? (sorry for the late response, I was away for the weekend)\n Ok, for the new pull request. Thanks!\n When will the rubygem be published on rubygems.org?\n hmm weird, rubygems is still listing 1.4.0 as the latest version http://rubygems.org/gems/guard/versions\n  How to use SASS files with Gurad?\n  The Tmux notifier changes the background color of the Tmux window status bar that is currently running Guard.\n @netzpirat you are the notifier guy :) Ok for you?\n  This is related to https://github.com/guard/listen/issues/5 and the conclusion in  https://github.com/guard/listen/issues/54\n\nWhile I understand the motivation behind https://github.com/guard/listen/issues/54, for those who are using guard directly and are not aware of the change that took place since listen 0.5.x, this poses some sort of regression (it is strange that dependencies that used to be specified are removed, with the user shown a warning to satisfy the 'missing' dependencies if possible)\n\nI propose the following:\n\n1) update README.md `Installation` section to account for the listen-related gems, with special care not to confuse them with the system-specific gems under `System notifications` section.\n\n2) `guard init` could possibly insert the relevant lines into Gemfile and do a bundle update\n Your propositions sounds very good to me. What do you thing @guard/core-team ?\n @netzpirat \nThat sounds reasonable enough if the installation steps are clear about the dependencies and the user just has to go through them once and never has to deal with it again (and users of older versions can find them easily as well)\n\nIn my experience I never had a problem with installing these 'extra' dependencies on each of the three OS environments I have used guard on, so probably I am just going to add all of them anyway.\n Great, thanks!\n  Pry::RC_FILES went away recently, in this commit:\n  https://github.com/pry/pry/commit/d830ebbacc6ebaf60261855ef6011bd6b9d47d8d\n\nThe hooks should work both in 0.9.10 and HEAD pry.\n\nAlso, gave the user a hint about ~/.guardrc, because it changes the\ninteractor experience quite a bit with/without one.\n  It seems to be pure awesomeness, I'll give it a try this week. Thanks!\n :+1:\n Yeah @rymai and I also get (quite frequently sadly) hangs of the interactor (no more key input accepted). \nI'm afraid that a showstopper until it's fixed no?\n @netzpirat great, enjoy your holiday!\n +1\n Are you 100% sure you get hangs?\n\nWhat I see from time to time is echo being off. When I can't see what I'm doing I just run this:\n\n```\n`stty echo`\n```\n\nThen it fixes it. At one point I poked around guard's stty stuff\u2026 not sure what any of it is really doing.\n It seems to work, but I'll use it tomorrow all day to be sure! :)\n\nThanks!\n @netzpirat for me it seems to works perfectly.\n @netzpirat Yep, seems to work fine!\n Perfect, 1.5.0 for today!\n This is awesome guys, thanks for the work.\n\nOne thing though regarding the upgrade experience: Guard now spews deprecation warnings about usage of `interactor`, `notification`, etc. for configuration in the Guardfile, pointing users toward `~/.guardrc`. Yet the DSL methods are still the primary thing documented in the README, and there's really nothing I can find suggesting how to configure things in `~/.guardrc`, examples, etc. The DSL methods don't work there. The DSL methods **do** still work to do user-local configuration in `~/.guard.rb` (though of course you still see deprecation warnings). Moving this stuff to user preferences where it can be out of a project's version control is great, but the state of things right now is kind of circular and confusing, and I'm sure `~/.guard.rb` is not really intended to be the place for configuration.\n\nThere is a pointer to the Pry docs for things one might do with `~/.pryrc` as a hint for `~/.guardrc`, but as discussed in the thread here, it shouldn't be Guard's interest to replace a project's REPL, so it seems like for most Guard users extending the shell isn't going to be a very common need compared to simple configuration.\n\nSo, I think the problem here is primarily just one of updating the blessed documentation :wink:  Or maybe also the DSL should be loaded when evaluating `~/.guardrc`? If I'm confused about the intent, please point me toward the light :smile: \n @ches As developer we never really have an upgrade, since we continuously move forward, so thanks for your feedback.\n\nThere is no deprecation message for the `notification` DSL method, so I'm wondering what you mean with this. The main change from 1.4 to 1.5 was the removal of three different interactors that have been replaced by a single Pry interactor, thus the deprecation message. I think it's great to have less choice.\n\nI just re-read the deprecation warning and [simplified it](https://github.com/guard/guard/commit/218d44211ca7eeaa162cf13d4434b8f3fa933896), because it was not quite correct and the hint for the Pry customization is just not necessary, since it targets more advanced use of Guard. In fact this was also one of the drivers for the change: people wanted to have more control over the workflow with Guard, and a programmable interactor using the Guard API makes a lot of customization possible. It should not replace your main REPL, but it can be very useful for improving your test workflow for example.\n\nWe have a short sentence in the README about the `~/.guardrc`:\n\n> Further Guard specific customizations can be made in ~/.guardrc that will be evaluated prior the Pry session is started (~/.pryrc is ignored). This allows you to make use of the Pry plugin architecture to provide custom commands and extend Guard for your own needs and distribute as a gem. Please have a look at the [Pry Wiki](https://github.com/pry/pry/wiki) for more information.\n\nIf it's not clear to you that the `~/.guardrc` is a Guard specific `~/.pryrc` to customize Pry and you can write Pry plugins, then please help us to write this in a more clear way (Guard core speaks French, German and Dutch). Pull requests for better wording, fix bad grammer, etc. is _very_ welcome, since we can't do any better.\n\nThe quote from the README has also a link to the Pry wiki and if you follow it, then I see pages about\n- https://github.com/pry/pry/wiki/Customization-and-configuration\n- https://github.com/pry/pry/wiki/Command-system\n- https://github.com/pry/pry/wiki/Custom-commands\n- https://github.com/pry/pry/wiki/Plugins\n- https://github.com/pry/pry/wiki/Available-plugins\n\nand they contain tons of information and examples, and there is even a lot more available. What are you missing?\n @netzpirat Thanks for the detailed reply.\n\n> There is no deprecation message for the notification DSL method\n\nYou're right, apologies, it was only `interactor`. Totally agree that streamlining the choices is a good thing, plus it just works more reliably I think.\n\nRegarding your updated deprecation message, in my case I'm only wanting to set a history file location:\n\n``` ruby\ninteractor :history_file => 'my preferred location'\n```\n\nIt sounds like I shouldn't be getting a deprecation warning for this usage at all? Or what would be the recommended way/place to configure this now? I think that's my main question and what I found confusing/circular about the docs and warning.\n\nI noted the mention of the Pry customization in the README. Personally, I'm a Pry user and I'm familiar with customizing and extending it, so to me at least, the wording and the expressed intent is fairly clear. I think what tripped me up about it is the ordering of the information: that mention of `~/.pryrc` now precedes other info on configuring Guard in the README, so it seems to imply a precedence of what is now preferred. As you say, this is probably only for more advanced use really, and something like configuring Guard notifications is orthogonal to customizing Guard's Pry instances, I think (you might wish to turn the interactor off entirely, and evaluating `~/.pryrc` then wouldn't make sense). So basically, it's still not clear to me where one should set global configuration like my history file example or other similar things where options shouldn't be forced on everyone on a project through the `Guardfile` kept in version control. Once I understand that, I could try to work up some doc tweaks to discuss on a pull request.\n So in conclusion, maybe `~/.guard.rb` really _is_ the right place for what I'm asking, but I think it's hard to arrive at that from the current docs, and the deprecation warning gave a further feeling that it wasn't right.\n The `interactor` deprecation warning is only shown when you pass invalid arguments, like the previous `:readline` and `:coolline`. You can either place it on a per project basis in your `Guardfile` or for all projects in `~/.guard.rb`.\n  OS X 10.8 notifications support a subtitle in addition to the usual title and message:\n\nhttp://cl.ly/image/2l3Y071g0F0d\n\nIndividual guards can specify it when they send a notification, but you can't rely on it to be there if other notifiers (such as growl) are used. So that means you can't put important information in there. I'm wondering if the Guard time would be receptive to changing the other notifiers to emulate support for the subtitle by prepending it to the message (perhaps with a line break).\n\nIf there is a cleaner way to do this, let me know.\n That's fair.\n    I'm not sure I agree with the Terminal Notifier imposing a particular format upon notifications that are generated. Currently, it puts the app name (defaulting to Guard), then the type, then the title into the notification title. Why not just accept the `title` argument as-is?\n I don't think that is possible with Notification Center. @Springest am I right?\n Oops sorry, didn't see your PR #324, so I'm think is working :)\n\n@netzpirat seems good to you?\n @netzpirat great, thanks!\n You're welcome!\n  Everything appears to be running fine but I am getting an annoying error (https://gist.github.com/3661622).\n\nAny ideas?\n\nGuardfile is this - https://gist.github.com/3661100#file_gistfile1.rb\n Even though this wasn't anything to do with Guard I want to let you know I very much appreciate your explanation and example, it is very helpful.\n\nThank you\n  # tl;dr\n\nI'd like to add a custom command or two to guard. Is this possible?  Is it desirable?\n# ww;tmm\n\n(\"Wait wait, tell me more!\")\n\nI'm working on some new (to me) [REPL-based workflows](https://github.com/pry/pry/wiki/pry-de), in particular trying to make a sweet [red/green/refactor loop](https://github.com/pry/pry/wiki/pry-de#wiki-red-green-refactor). That loop is currently starting to shape up with `pry-rescue` automatically putting me into the REPL whenever I get a test failure. However, I'm writing to talk about the next step, _after_ each succesful {test fail \u21d2 test pass} stage.\n\nThere are basically three courses of action:\n1. Refactor what you did.\n2. Start over again writing another failing test.\n3. Commit to VCS.\n\nFor the refactor case, I imagine a guard command like `refactor` and would run:\n    `${VISUAL:-${EDITOR:-vim}} $(git status --porcelain | cut -b4-) \"$@\"`\n\nFor new failing test, perhaps it would be a command that would open to the spec with the most recent timestamp? Maybe the syntax would be like:\n    `another spec`\n(which would descend through `spec/` looking for the most recent file. This would be generic enough that you could use it for editing files in entirely different workflows.)\n\nFor the commit to VCS, it could maybe just be ^Z and do some git commands in the background. Not sure if any guard integration would be useful (though if it showed a `git status` after every all-tests-passed it might be useful).\n\nSo I need your guidance on how to do this the right way.\n\nIs there any kind of user-defined command mechanism in place?  If so, would anyone be interested in co-developing this small piece as a gem? (I'm happy to do most of the work, but if I had other input I could do it with more clarity.)\n\nShould I instead focus on the RSpec runner, and leave Guard alone? I could accomplish those same 1/2/3 paths mentioned above by merely causing RSpec to do more than say \"0 failures\".\n\nThanks!\n\u2014\u2608\n Couldn't agree more ;)\n Sounds wonderful. Let me know if you want to have me monkeying around trying to make the Pull Req.\n  Please refer to Mon-Ouie/coolline#7 for more information. I'll copy some of it over to her.\n\nTrying to use coolline on Mac OS X with zsh because readline doesn't work very well (it stops accepting input) unfortunately coolline is useless because my development mode looks like below.\n\n``` bash\n                                                                                                                                                                               app/views/lists/show.html.haml:161:in `_app_views_lists_show_html_haml___1021052418807862974_70125393452100'\n                                                  app/controllers/lists_controller.rb:68:in `show'\n                                                                                                    List Load (0.5ms)  SELECT \"lists\".* FROM \"lists\" WHERE \"lists\".\"id\" = 85 LIMIT 1\n                                                                                                                                                                                    Called from: app/models/workflow.rb:92:in `list_todo_percentage'\n        app/views/lists/_user_stats.html.haml:12:in `_app_views_lists__user_stats_html_haml__4234996185636509608_70125372887960'\n                                                                                                                                 app/views/lists/show.html.haml:161:in `_app_views_lists_show_html_haml___1021052418807862974_70125393452100'\n app/controllers/lists_controller.rb:68:in `show'\n                                                 Called from: app/views/lists/_user_stats.html.haml:24:in `_app_views_lists__user_stats_html_haml__4234996185636509608_70125372887960'\n                                                                                                                                                                                       app/views/lists/show.html.haml:161:in `_app_views_lists_show_html_haml___1021052418807862974_70125393452100'\n                                                       app/controllers/lists_controller.rb:68:in `show'\n                                                                                                       Called from: app/views/lists/_user_stats.html.haml:24:in `_app_views_lists__user_stats_html_haml__4234996185636509608_70125372887960'\n                                                                                                                                                                                                                                             app/views/lists/show.html.haml:161:in `_app_views_lists_show_html_haml___1021052418807862974_70125393452100'\n                                                                                                             app/controllers/lists_controller.rb:68:in `show'\n                                                                                                                                                             Called from: app/views/lists/_user_stats.html.haml:24:in `_app_views_lists__user_stats_html_haml__4234996185636509608_70125372887960'\n                                                      app/views/lists/show.html.haml:161:in `_app_views_lists_show_html_haml___1021052418807862974_70125393452100'\n                                                                                                                                                                   app/controllers/lists_controller.rb:68:in `show'\n                                                                                                                                                                                                                     Activity Load (1.7ms)  SELECT \"activities\".* FROM \"activities\" WHERE \"activities\".\"workflow_id\" = 102 ORDER BY activities.created_at DESC LIMIT 10\n                                                                                                                          Called from: app/views/lists/_user_stats.html.haml:24:in `_app_views_lists__user_stats_html_haml__4234996185636509608_70125372887960'\n                   app/views/lists/show.html.haml:161:in `_app_views_lists_show_html_haml___1021052418807862974_70125393452100'\n                                                                                                                                app/controllers/lists_controller.rb:68:in `show'\n                                                                                                                                                                                  Rendered lists/_user_stats.html.haml (93.6ms)\n                                                                                                                                                                                                                                 Activity Load (1.7ms)  SELECT \"activities\".* FROM \"activities\" WHERE \"activities\".\"list_id\" = 85 ORDER BY activities.created_at DESC LIMIT 10\n                                                                                                                                 Called from: app/views/lists/show.html.haml:170:in `_app_views_lists_show_html_haml___1021052418807862974_70125393452100'\n              app/controllers/lists_controller.rb:68:in `show'\n                                                                Rendered activities/_activity.html.haml (6.6ms)\n                                                                                                                 Rendered lists/show.html.haml within layouts/application (671.5ms)\n                                                                                                                                                                                     Workflow Load (0.6ms)  SELECT \"workflows\".* FROM \"workflows\" WHERE \"workflows\".\"user_id\" = 1 AND (workflows.archived='f') ORDER BY workflows.position ASC\n                                                                                                 Called from: app/views/application/_menu.html.haml:46:in `block in _app_views_application__menu_html_haml__3341304488632390902_70125374568400'\n   app/views/application/_menu.html.haml:45:in `_app_views_application__menu_html_haml__3341304488632390902_70125374568400'\n                                                                                                                            app/views/layouts/application.html.haml:40:in `_app_views_layouts_application_html_haml___1694226297120499442_70125393188980'\n             app/controllers/lists_controller.rb:68:in `show'\n                                                               Rendered application/_search_form.html.haml (3.4ms)\n                                                                                                                    Rendered application/_menu.html.haml (77.4ms)\n                                                                                                                                                                 Called from: app/views/layouts/application.html.haml:45:in `_app_views_layouts_application_html_haml___1694226297120499442_70125393188980'\n                                                               app/controllers/lists_controller.rb:68:in `show'\n                                                                                                               Called from: app/views/layouts/application.html.haml:45:in `_app_views_layouts_application_html_haml___1694226297120499442_70125393188980'\n             app/controllers/lists_controller.rb:68:in `show'\n                                                             Called from: app/views/layouts/application.html.haml:45:in `_app_views_layouts_application_html_haml___1694226297120499442_70125393188980'\n                                                                                                                                                                                                        app/controllers/lists_controller.rb:68:in `show'\n              (0.5ms)  SELECT COUNT(*) FROM \"announcements\" \n                                                            Called from: app/views/layouts/application.html.haml:45:in `_app_views_layouts_application_html_haml___1694226297120499442_70125393188980'\n                                                                                                                                                                                                       app/controllers/lists_controller.rb:68:in `show'\n            Announcement Load (0.4ms)  SELECT \"announcements\".* FROM \"announcements\" ORDER BY \"announcements\".\"id\" DESC LIMIT 1\n                                                                                                                               Called from: app/models/announcement.rb:7:in `newest'\n                                                                                                                                                                                     app/views/layouts/application.html.haml:46:in `_app_views_layouts_application_html_haml___1694226297120499442_70125393188980'\n                                                                      app/controllers/lists_controller.rb:68:in `show'\n                                                                                                                        Rendered application/_iphone_footer.html.haml (2.8ms)\n                                                                                                                                                                             Completed 200 OK in 1397ms (Views: 782.8ms | ActiveRecord: 43.1ms)\n```\n\nI have investigated and as soon as I remove the colline gem everything is back to normal. @Mon-Ouie told me it can't corrupt the output unless it's used the wrong way so I'm asking for help here instead.\n I'm also using ZSH with the Guard Coolline interactor and I don't see these problems.\n\nYou can also try to not automatically require the gems, since Guard requires everything manually, so when you have a `Gemfile` like\n\n``` Ruby\ngroup :development do\n  gem 'guard'                  , require: false\n  gem 'guard-coffeescript'     , require: false\n  gem 'guard-rspec'            , require: false\n  gem 'guard-livereload'       , require: false\n  gem 'rb-fsevent'             , require: false\n  gem 'coolline'               , require: false\n  gem 'terminal-notifier-guard', require: false\n  gem 'thin'                   , require: false\nend\n```\n\nthen these dependency won't be loaded when you start Rails, but they will be loaded when your start Guard, and as a nice side effect Rails will also start faster.\n I tried what you suggested but unfortunately it doesn't help. I still get\n\n``` sh\n>> /Users/mhenrixon/Dropbox/github/taskk/app/helpers/calendar_helper.rb:6: warning: already initialized constant Calendar\n\n\n                                                                                                                         Started GET \"/\" for 127.0.0.1 at 2012-08-23 16:23:03 +0200\n                                                                                                                                                                                   Processing by WelcomeController#index as HTML\n                                                                                                                                                                                                                                Called from: app/controllers/application_controller.rb:75:in `sign_in_from_cookies'\n                                                                       app/controllers/application_controller.rb:32:in `current_user'\n                                                                                                                                      app/controllers/application_controller.rb:56:in `logged_in?'\n```\n What happens if you remove Guard from the `Gemfile`, but keep Cooline? \n That works great but not having the specs running in the background is scary :)\n To clarify, it's only the rails server output that gets corrupted. RSpec formats nicely\n Yep, I also can't work without Guard in the background. I'm just trying to understand what's happening :P So to summarize:\n\nOnly Guard -> works fine\nOnly Coolline -> works fine\nGuard and Coolline -> doesn't work\n\nHmm.\n\nJust noticed I'm using [Lumberjack](https://github.com/bdurand/lumberjack), but when I remove it, everything still works fine. Will be hard to fix when I can't reproduce it :(\n\nCan you give some more info about your environment? OS version, Ruby version (with patchlevel), zsh version.\n\nCan you try to change to another terminal (Terminal.app/iTerm2)?\n What makes absolutely no sense to me is the fact, that when you do not automatically require Guard and Coolline in the Gemfile, why does it break? I mean both gems aren't loaded in the Rails server process, so they can't interfere with the Rails logger at all. Do you do something special with Bundler or the Ruby load path?\n I am on bundler 1.2.0 pre version because of being on Heroku. Would that be a potential problem?\n- Mac OSX 10.8\n- ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin12.0.0]\n- Bundler version 1.2.0.rc.2\n- $ZSH_VERSION 5.0.0\n\nI tried using Terminal instead of iTerm2 but with the same result.\n I just tried on another project with the same results ![image showing how things are logged](http://f.cl.ly/items/2p310S2w0z1A3W1U1b1q/Image%202012.08.23%2018:04:03.png)\n I tested it again by specify Guard and Coolline normally in the Gemfile:\n\n``` Ruby\ngroup :development do\n  gem 'guard'\n  gem 'coolline'\nend\n```\n\nrunning `rails s` with the exact same Ruby version. Works fine. Then I noticed that the Mountain Lion upgrade has reset my login shell to 4.3.11. Switched ZSH to 5.0.0. Still works fine. Upgraded to Bundler 1.2.0.rc2. Again, works fine.\n\nI tested it with the latest Rails 3.2.8\n Is the log also like this in the `development.log` file or just in the console output?\n Only the console output is messed up. Log file looks great as always. Going to try a spanking new project and see what happens with just guard and coolline\n I've used iTerm2 Build 1.0.0.20120203 with UTF and xterm-256.\n\n@guard/core-team anyone seen this behavior?\n I get the same problem with a WEBrick spanking new rails app though I have to add `gem 'guard-rails'` as well.\n\niTerm2 Build 1.0.0.20120724\n Yep, `guard-rails` was the missing puzzle peace and I can finally reproduce the issue.\n @netzpirat that's such a relief! I was ready to tear my new Macbook Pro apart...\n I had a look at guard-rails and the runner uses [Kernel#system](http://www.ruby-doc.org/core-1.9.3/Kernel.html#method-i-system) to [start the Rails process](https://github.com/johnbintz/guard-rails/blob/master/lib/guard/rails/runner.rb#L60) in a subshell. A subshell has the same environment as the process that spawned it, so Coolline gets loaded in the Rails process.\n\nI don't understand too much about the underlying IO and why this all is happening, but I've found a workaround. In guard-rspec, the [run_rails_command!](https://github.com/johnbintz/guard-rails/blob/master/lib/guard/rails/runner.rb#L60) can be replaced by:\n\n``` Ruby\ndef run_rails_command!\n  stdin, stdout, stderr = Open3.popen3 build_rails_command\n  Thread.new do\n    loop do\n      out = stdout.gets\n      print \"\\r\\e[0m\\e[0K\"\n      print out if out\n    end\n  end\nend\n```\n\nThe key is `print \"\\r\\e[0m\\e[0K\"`, which seems to resets the line (This is taken from [Coolline](https://github.com/Mon-Ouie/coolline/blob/master/lib/coolline/coolline.rb#L191) and I don't understand why this works). Without this line, a subsequent `puts` never goes back to the start of the line:\n\n```\nputs 'hi'\nputs 'hi'\nputs 'hi'\n```\n\nwill be outputted as\n\n```\nhi\n  hi\n    hi\n```\n\nPerhaps this helps @Mon-Ouie to understand the real problem.\n I had something interesting happen. I was running coolline just fine with zsh+guard-rspec+guard-ctags-bundler. I changed to add groups into my Guardfile to split my acceptance tests and unit tests. That is the point when the output started being like:\n\n```\nline 1\n        line 2\n                 line 3\n```\n As discussed on the other issue, the reason this happens is something gets output when stdin is in raw mode (which is the case because Coolline is calling #getch at that moment). To fix that, you'd need a way to be notified when the user presses a key without having to turn it on.\n\n(netzpirat's workaround works because it resets the cursor on every line that is received from the subprocess.)\n Output seem ok for me but sending input works a little differently\n  This pull request [fails](http://travis-ci.org/guard/guard/builds/2123944) (merged 2fe5b280 into 2a166518).\n This pull request [fails](http://travis-ci.org/guard/guard/builds/2124048) (merged bcdc2ff6 into 2a166518).\n [![Coverage Status](https://coveralls.io/builds/292806/badge)](https://coveralls.io/builds/292806)\n\nChanges Unknown when pulling **bcdc2ff601c740c1845b839cc148316d4c5d5188 on clear** into *\\* on master**.\n  As discussed in #311, the `TerminalNotifier` for native OS X 10.8  user notifications lacked support for different icons for different statuses.\n\nI am happy to announce the [`terminal-notifier-guard`](https://github.com/Springest/terminal-notifier-guard) gem! The gem has 4 different status notifiers, each with their own icon for the following statuses:\n1. Pending\n2. Failed\n3. Success\n4. Notify\n\nI updated the `TerminalNotifier` inside Guard to use our new gem and - finally - have our beloved icons back. :)\n\nSpecial thanks go out to @alloy for making the initial [`TerminalNotifier`](https://github.com/alloy/terminal-notifier)\n This pull request [passes](http://travis-ci.org/guard/guard/builds/2119021) (merged 6151dc4a into c919116d).\n Works great. Thanks a lot for your effort!\n +1 works like a charm!\n Glad you guys like it :)\n\nAnd cool to see it released so soon too!\n  Hi. If you run guard with the `-c` option Guard is clears the screen before running new tests. There is a problem, however, when used in conjunction with multiple guard groups. See the following example of a scenario with two groups\n1. File modified.\n2. Guard checks Group A\n   1. Clear screen.\n   2. Matching rule found - run test.\n3. Guard checks Group B\n   1. Clear screen.\n   2. No matching rule found - do nothing.\n\nWhich means the user sees tests run and then they disappear before they can be read.\n Extra info:\n\nWith my setup, this is consistently replicatable.\nGiven the `Guardfile` below, if I edit anything under `lib/blah/` the screen gets clears twice.\nIf I edit anything under `test/unit` or `test/spec` then it correctly only gets cleared once.\n\n**Guardfile (simplified)**\n\n``` ruby\n# Ignore Vim swap files\nignore /~$/\nignore /^(?:.*[\\\\\\/])?\\.[^\\\\\\/]+\\.sw[p-z]$/\n\ngroup :unit do\n  guard 'minitest', test_folders: 'test/unit', test_file_patterns: '*_test.rb' do\n\n    watch(%r'^lib/blah/(.+)\\.rb$') {|m| \"test/unit/#{m[1]}_test.rb\"}\n    watch(%r'^test/unit/.+_test\\.rb$')\n\n  end\nend\n\ngroup :spec do\n  guard 'rspec', binstubs: true, spec_paths: ['test/spec'], all_on_start: false, all_after_pass: false do\n\n    watch(%r'^lib/blah/(.+)\\.rb$') {|m| \"test/spec/#{m[1]}_spec.rb\"}\n    watch(%r'^test/spec/.+_spec\\.rb$')\n\n  end\nend\n```\n Sounds like a plan. Maybe it'd help to have the clear-screen code could be in it's own class that then gets passed around to anyone interested, that would make it easy for it to maintain its own state. Just an idea :)\n No worries mate! If there's anything you'd like me to help with just give me a shout ;)\n Just tested it out, I couldn't reproduce the problem, works perfectly! Nice work mate!!\n  It would be cool if interactive mode would support passing arguments to one of the guards (particularly i want to use rspec's -e to run specific examples and so on)\n Ah maybe ))\nI should probably look into it myself )) It's opensource after all  )\n\nMeanwhile, those who need this too, may use rspec's filters\n  As requested in #307.\n\nLet me know if there's anything missing or wrong.\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1990474) (merged 8ba44a0b into 1a759586).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1990537) (merged ecdd50d2 into 1a759586).\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1991125) (merged eb6fdd5b into 1a759586).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1991146) (merged eb3bc286 into 1a759586).\n Thanks for the feedback and looking into it.\n\nChanging the image is harder than I expected: I tried symlinking the icns file and even copying the entire .app bundle but the icons remains cached in OS X. Which means that the icon will stay the same once the app is called, no matter what you do :)\n\nAll I can think of is asking @alloy whether he can make a bunch of clones of his [terminal-notifier](https://github.com/alloy/terminal-notifier), for each status (success, error, pending, etc.) and each with an icon matching it's status.. I would do it myself, but I don't have an Appl\u20ac developer account.\n What does the nsnotify gem do over the [terminal-notifier gem](http://rubygems.org/gems/terminal-notifier)?\n\n> Changing the image is harder than I expected: I tried symlinking the icns file and even copying the entire .app bundle but the icons remains cached in OS X. Which means that the icon will stay the same once the app is called, no matter what you do :)\n> \n> All I can think of is asking @alloy whether he can make a bunch of clones of his terminal-notifier, for each status (success, error, pending, etc.) and each with an icon matching it's status.. I would do it myself, but I don't have an Appl\u20ac developer account.\n\nYou have to change the bundle identifier of the app for the correct (not cached) image to be used. **But** this is not how NotificationCenter is supposed to be used, you should have one notification look per app.\n\nFor that reason and that I don\u2019t want to be responsible for builds of every version for everyone that wants a custom icon, I regret to say that I won\u2019t do this.\n > What does the nsnotify gem do over the terminal-notifier gem?\n\nWhy, nothing! I didn't know about your gem! :) In fact, I'd be happy to change the pull to use your gem if that's what you want.\n\n> For that reason and that I don\u2019t want to be responsible for builds of every version for everyone that wants a custom icon, I regret to say that I won\u2019t do this.\n\nI can imagine that. It was just a thought.\n > > What does the nsnotify gem do over the terminal-notifier gem?\n> > Why, nothing! I didn't know about your gem! :) In fact, I'd be happy to change the pull to use your gem if that's what you want.\n\nAh I see, your gem is newer than mine, that's the reason I could not find it.\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1993419) (merged 78ccf162 into 1a759586).\n Alright, I altered the implementation to use @alloy's gem instead of mine. Thanks and kudo's to you from Guard and of course Alloy for making the app and the gem.\n Awesome :)\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1998110) (merged ac293c2a into 1a759586).\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1998394) (merged ef11bf18 into 1a759586).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1998497) (merged 89ddc262 into 1a759586).\n I was thinking of adding another feature: passing options `on_error` and `on_success` to execute some command. This way I can e.g. play a sound on errors, by passing options in my `Guardfile` like so:\n\n``` ruby\nnotification :terminal_notifier, :app_name => \"MyApp ::\", :on_error => '/usr/bin/afplay /System/Library/Sounds/Basso.aiff', :activate => 'com.googlecode.iTerm2'\n```\n\nThis plays the Basso sound whenever a test fails and compensates for the fact that we can't change the app icon imo. What do you guys think?\n\nBTW: The `activate` option make sure iTerm2 gets focus when I click the notification, rather than the default Terminal app.\n @foxycoder The command is executed when you click the notification, by that time you probably already know the status, no? I.e. playing an extra sound to indicate the status might not be that useful. Anyways, I\u2019m just thinking out loud :)\n @alloy Yeah sorry I was not clear. I want to run the command from the notify method in Ruby, rather than pass it on to the terminal notifier app for the reason you just mentioned.\n This is great! I just returned from holidays and want to get started with this, and boom, here it is already. I'm currently updating my hardware zoo to Mountain Lion and will merge and test it tomorrow. Thanks a lot.\n Yeah that'd be nice. In the meantime, I got my hands on an Apple dev account from work, so I could make those if needed. Unless @alloy reconsiders and wants to do it himself ;)\n\nLet me know how I can help.\n Thanks a lot @foxycoder, works great! I just changed some code style and added complete YARDOC to the notifier, so that all notifiers looks similar.\n\nWe should make new pull requests for a guard-terminal-notifier gem or `:on_error` or `:on_success` callbacks.\n [![Coverage Status](https://coveralls.io/builds/271813/badge)](https://coveralls.io/builds/271813)\n\nChanges Unknown when pulling **89ddc262097af32d4b36c394732b3e02f92c2c0f on foxycoder:nsnotify** into *\\* on guard:master**.\n   This pull request [passes](http://travis-ci.org/guard/guard/builds/1986610) (merged 09750f62 into cd87711e).\n  Could somebody please update the doco to clarify the difference between `ignore` and `filter`?\nIt's unclear and filtering out and ignoring sounds like the same thing to me.\n Ahhh right, so to put it simply `ignore` is for directories and `filter` is for files. Is that right?\n The `ignore` method can be used to _exclude_ a file or a directory from the set of files being watched. Let's say you have used the `watch` method to monitor a directory but you are not interested in changes happening to images, you could use the `ignore` method to exclude them.\n\nThe `filter` method has a different purpose. It can be used to _focus on_, or rather _filter_ the important files and directories without having to specify them by hand in the `watch` method. If you are watching multiple directories but only interested in changes to the ruby files, use the `filter` method.\n\nAs @rymai said above, both of them can be used for files and directories.\n Yeah, I guess that should be done to stop confusing more people.\n Thanks guys. `ignore` sounds very straightforward.\nLet me just clarify again - so if I'm understanding you correctly then when `watch` is called to watch a directory (with no filename provided), `filter` specifies a regex that all files in that directory must match in order to be further processed (with non-matching files being ignored).\n Ok sweet. Thanks for the time explaining it to me guys!\n\nI'll leave the issue open as a reminder to give the README some extra love. Just close whenever; don't mind me :)\n  hello!\n\ni'd like to 'abuse guard' to build my project. normally i am not a ruby-guy and using grunt.js for building my project. but since guard is much better as watching 'manually' at my files i am asking myself if there is no posibility to run guard initially over all the files. so  i'd like to init my project with compiling coffee, haml and all the stuff.\nDoes anybody has any ideas how to do it?\n\nthanks a lot!\n A simple solution would be to normally define a `Guardfile` and trigger all plugins at the end:\n\n``` Ruby\nguard :coffeescript, input: 'src', output: 'lib'\n\n::Guard.run_all({})\n```\n it worked, thanks a lot.\n\nthe other posibility is, since its supported by the specific module, use the following option: (thx to: rymai)\n:all_on_start => true\n\nmaybe you can put it in the docs?\n\nanyway. thanks a lot.\n  This is a feature request to have a command like run_all that executes the previous triggered test set again, preferably using [enter] as well (with a separate command to togger the behavior for [enter])\n\nIn case it is too confusing, let's suppose the switch key is [x]\n\n<pre>\n...  # test group Y executed\n[x] # toggles behavior\n[enter] # re-run test group Y\n[enter] # re-run test group Y\n[x] # toggle behavior\n[enter] # re-run all tests\n\n\nOptional: while in run_previous mode, test group Y is locked but will not be modified if other tests are triggered by file changes\n\n... # test group Y executed\n[x] # toggles behavior \n[enter] # re-run test group Y\n... # test group X triggered by file change\n[enter] # re-run test group Y\n\n</pre>\n The wording in the example is a bit confusing, since in the context of Guard a group is a group of Guard plugins and not a set of changed files, but I guess you just want to be able to re-trigger the latest file changes again.\n\nI do not really understand the need for this, because when a test fails, you always modify either the code or the test and thus trigger the file change with your modification rather than a key stroke in the Guard interactor. When the test passes, why rerun it?\n\nMost test plugins like guard-rspec, guard-test and guard-cucumber keeps the last failed test internally, and you can re-trigger these failed specs with the `change` command (without any files supplied) in the interactor.\n > but I guess you just want to be able to re-trigger the latest file changes again\n\nNot exactly, the focus is on the result of those file changes (the set of tests/actions that were executed by plugins), but I suppose it can be implemented by storing the file change to be re-invoked later\n\n> I do not really understand the need for this\n\nOften I would find myself working on a portion of the code (like a new method in application_helper.rb which will usually cause all tests/features to be triggered, and that is undesirable), against a set of tests/files that would not belong to a definition in Guardfile. It is only a temporary stage in the development process, and thus it would be a waste of time to define the regex that captures that association. In other words I am looking for a means to \"focus\" on a particular test group that has been previously triggered by some predefined watch expression, with no condition on their passing/failure or file changes. [Enter] is just a convenient hotkey (on top of its default function) since I do not need run_all all the time\n\n> Most test plugins like guard-rspec, guard-test and guard-cucumber keeps the last failed test internally, and you can re-trigger these failed specs with the change command (without any files supplied) in the interactor.\n\nThis may help but I can't seem to get it to work, the prompt changes to change > but nothing happens even when I have a failed scenario from the previous trigger (keep_failed is true)\n > Not exactly, the focus is on the result of those file changes (the set of tests/actions that were executed by plugins), but I > suppose it can be implemented by storing the file change to be re-invoked later\n\nYes, it must be implemented in that way, since some Guard plugins do further processing of the paths, but Guard itself doesn't know about this.\n\n> In other words I am looking for a means to \"focus\" on a particular test group that has been previously triggered by some predefined watch expression, with no condition on their passing/failure or file changes. [Enter] is just a convenient hotkey (on top of its default function) since I do not need run_all all the time\n\nOk, I see. I think 'focus' is a good name for this feature and `f` is also free in the interactor commands. So let me summarize it:\n1. Guard stores the latest file changes.\n2. The user presses `f` or `focus` in the interactor.\n3. The interactor prompt changes to `f>` to indicate that Guard is on focus mode. The focus mode pauses the file listener, similar to `p` or `pause`, but when the user presses `<enter>`, the latest file changes will be re-triggered instead of running all files.\n4. Pressing `f` or `focus` again, switches Guard back to normal mode.\n\n> This may help but I can't seem to get it to work, the prompt changes to change > but nothing happens even when I have a failed scenario from the previous trigger (keep_failed is true)\n\nStrange, that should work. I'll have a look when implementing this feature.\n @netzpirat What I had in mind is:\n\n> 1. Guard stores the latest file changes.\n> 2. The user presses f or focus in the interactor.\n> 3. The interactor prompt changes to f> to indicate that Guard is on focus mode. When the user presses <enter>, the stored file changes will be re-triggered instead of running all files. The file listener still works as normal if other file changes take place in the middle of this mode, they just do not get stored.\n> 4. Pressing f or focus again, switches Guard back to normal mode.\n\nBut either way should be fine, if not pausing the file listener happens to be problematic for any reason \n\n@rymai I am not looking for such fine-grained control (to run only certain tests within a file), just a way to minimize the need to execute _all_ tests or look for some particular file and \"edit\" it in order to trigger the test file(s) I want to be executed (and only those). Also, not having to modify the test files for this purpose, would be a plus.\n What I have in mind is more than just a particular spec file, maybe it would help if I give an example of the watch expressions I am using: https://github.com/prusswan/ticketee/blob/master/Guardfile\n\nMy watch expressions should capture most of the normal cases where the name of the modified file can be properly matched to similarly named test files (i.e. something 'foo' should trigger all the _foo_ features/specs etc), but sometimes the names do not match, or I could be working on an application-level file but only interested in the impact on a smaller group of files. Since I know that modifying some foo file will trigger that foo group of test files given the existing watch expressions, why not make use of this property and save myself from writing temporary watch expressions, and switching between/editing test files unrelated to my goal and risk corrupting them?\n\nAnother concern is that I try to avoid having overly specific and possibly convoluted watch expressions so that the configuration can be reused across multiple projects.\n Although your usecase seems centerd around testing, I still can't see the point of this feature. Rspec already gives you the filtering posibilities @rymai mentioned above.\n\n> @rymai I am not looking for such fine-grained control (to run only certain tests within a file), just a way to minimize the need to execute all tests or look for some particular file and \"edit\" it in order to trigger the test file(s) I want to be executed (and only those). Also, not having to modify the test files for this purpose, would be a plus.\n\nI don't understand why you wouldn't want to edit the specs to add the `:focus` symbol if you are interested in the effect a change will have on a different part of your spec. If you decouple your code into classes and modules and test them separately, you would use mocks and stubs anyway in your tests, so changes to other files shouldn't have any effect.\n\nChanges to shared code like the one in `application_helper.rb` should trigger changes to multiple spec files IMHO. How would you know otherwise that you broke something with your changes?\n\nAlso, please remember that Guard is used in multiple contexts. The usecases for this feature seem to be limited. If you still think that this feature is necessarily, I would appreciate it if you can give an example in which this feature is better than just filtering a spec. \n run_all now takes over 10 minutes for a real project, I am trying to run a smaller set of spec files at any given time based on my named groups, and not having to define extra expressions for those 10-30% cases. This is not about trying to run one test in the middle of one particular spec file. I have no idea why you are so fixated on that o.o\n @prusswan Ok, let me explain to you how I see this feature working. I think that @rymai has a good description of a simple scenario. In that scenario Guard would need to capture the last changes (step 1) which means you need to manually trigger it somehow. Then you would enter the \"focus\" mode and keep on _pressing Enter_ as needed. \n\nDoesn't that simply translate into opening a new terminal (or tab) and running `rspec SET_OF_SPEC_FILES` as needed?\n\nGuard's purpose is to run a command automatically based on a change. You want Guard to capture a change and then trigger the associated command manually, but it's simpler to run the command yourself in the terminal and cut the middleman.\n How will \"running `rspec SET_OF_SPEC_FILES` as need\" really be feasible considering that it may be _any_ combination of regex groups and/or named groups already defined in the Guardfile?! The only thing that _may_ be feasible now is to repeatedly execute `change` on the specific file I know that will trigger the desired group, but looking at how enter already works for run_all and how I prefer it to work as run_some in certain cases....it should not be too hard to understand where this is going. Personally I think this is just added convenience and a variant of run_all, if this is too much trouble, I will just fork it and implement it when I have the time. Thanks for your attention\n It's not about being to much trouble for us, it's about convince other people to do some free work. In order that I do this, I must either have a personal use of the feature or be sure that a _lot of other people_ want this (I guess other core member have similar weights). Before we can do this balance, we need to _fully understand_ the feature request, and this includes questions like \"why aren't you doing it in that way?\". It's not about that we don't like it, we love to hear what people are doing with our product and we want to make our product better for everyone, but as I already said, we need to understand the requested feature in detail and this involves asking questions. Do not take this personally, we didn't felt the same pain like you that leads you to wish to have this feature, so we may not give it the same importance like you.\n\nIf you plan to implement it anyway by yourself, we're still here to support you when you have questions. We have a mailing list, are often hanging around on IRC and we like to give you feedback on your development when you open a pull request.\n I am fine with the feature being 'challenged', but it seems that we cannot agree on what is 'feasible' and what is not. Let me summarize my use case: \n1. I have enough tests in total such that run_all every other minute is no longer realistic\n2.  I have existing watch expressions that are intelligent enough to run just the right number of tests for 70% of the time (going by the 70/30 principle), so what to do about the remaining 30%? I can create new groups/watch expressions in the Guardfile and try to tune it such that it will match correctly for 90%+ of the time, but that kind of effort usually is not transferable to other projects, so I want to avoid overtuning as a solution\n3. **Adding focus tags manually to a handful of files is simply not going to match the expressive power of the watch expressions**, and like I mentioned earlier, risk corrupting existing specs/features that are not meant to be modified. Another downside is that it is not feasible to switch quickly and easily among regex groups with this method. Basically I don't see the intelligence in tagging the spec/feature files _at all_ for this purpose; I might as well just go ahead and create new watch expressions that are just slight variations of existing ones and will be commented in/out on a as needed basis (cumbersome and still not as good as `change some_file_that_is_known_to_trigger_desired_group` btw).  All in all, I see this as a weak recommendation that no one in my situation will take (even `change some_file` would work much better)\n I absolutely understand your needs, I also have very limited use for `run_all` in large projects.\n\nI currently try to minimize the pain by splitting different parts of the app in different Guard groups and run them in separate terminal windows to reduce the amount of `run_all`. I also do not try to have a reusable `Guardfile` for all of my projects, because I believe in the gain of having a very specific `Guardfile` for each project for an optimized workflow over the time saved for a reusable `Guardfile`.\n\nBut I'm still here and take part of the discussion (even in my holidays from the camping site :P), because I think this discussion may lead to a nice new feature for Guard. I for myself still don't have a clear idea how the focus feature should work, so we really need a clear description of how it should work.\n\nI'm still confused by your use of the word `group` in conjunction with the watchers. Sure, all matching files by a watcher could be seen as a group, but I don't see how Guard should find out how to focus on a given group and what it triggers for a given group. Currently Guard receives a file change, goes through all watchers from top to bottom to see if there's a match, transforms the file if a block exists and passes the final file list to all plugins for further actions (of which Guard doesn't now anything and will not receive any feedback, only when something gets wrong aka. `:task_has_failed`).\n\nSo let me describe another possible idea I have for the `focus` feature:\n\nThe watchers will have the possibility to give a watcher a name, like:\n\n```\nguard :rspec do\n  watch(%r{^app/models/.+.rb}, :name => :models)\nend\n```\n\nNow you can focus on a named watcher in the interactor:\n\n```\n>> focus models\n[models] >>\n```\n\nFile changes will still be catched, but only for the models watcher. You can always `pause` and `unpause` while something is focused. You can stack different watchers:\n\n```\n[models] >> focus controllers\n[models controllers] >> focus models\n[controllers] >>\n```\n\nPressing enter in focus mode will find all the project files that matches the watchers in the focused groups and triggers a `run_on_changes` with all the files (Note that this behavior is completely different than `run_all`, because for `run_all`, the plugin decides what `all` means).\n\nPlease, let us focus the discussion on the possible focus feature and not on if it's useful or not. We still can have the useful-discussion when we know how the feature will work.\n > I currently try to minimize the pain by splitting different parts of the app in different Guard groups and run them in separate terminal windows to reduce the amount of run_all. I also do not try to have a reusable Guardfile for all of my projects, because I believe in the gain of having a very specific Guardfile for each project for an optimized workflow over the time saved for a reusable Guardfile.\n\nI do not dispute that at all and I do have some matching rules that are app specific (either the source and test files are named in a very different manner, causing the name-based rules to fail, or the changed file is naturally associated with multiple functional groups, like changing user_steps.rb is associated with all the _user_ tests and signin/signup features). As long as the matching rule is deemed to be have some permanent value I don't see why it should not be defined. But more convenience is always better.\n\n> I'm still confused by your use of the word group in conjunction with the watchers. Sure, all matching files by a watcher could be seen as a group, but I don't see how Guard should find out how to focus on a given group and what it triggers for a given group. Currently Guard receives a file change, goes through all watchers from top to bottom to see if there's a match, transforms the file if a block exists and passes the final file list to all plugins for further actions (of which Guard doesn't now anything and will not receive any feedback, only when something gets wrong aka. :task_has_failed).\n\nBy \"group\" I am specifically referring to the group of specs/features (or other actions dependent on plugin behavior) that will be returned for a changed file given a particular watch expression (I am aware of the group feature that is currently present for guard, and I am indeed using it to separate specs and features in the Guardfile I am linking to). \n\nSo what I have in mind originally is really just to take advantage of the current behavior in the perceived simplest possible manner, and provide some kind of shortcut for `change foo` in order to run all the foo tests (provided the watch expression is defined in such a manner), even though I am working on a file that is named in a completely different manner and do not want to define a matching rule. Given that most of my rules are named-based, it will work very well and custom-rules will no longer be a necessity provided I know exactly which named groups I want. If I need multiple of them, I can still define a rule that matches a particular file to a combination of groups. But I acknowledge that this has limitations because one changed file can only be matched to one group at any point in time (so if I am matching user.rb to [user_spec.rb, signup.feature] I cannot match user.rb to just [user_spec.rb]. \n\n> So let me describe another possible idea I have for the focus feature:\n> \n> The watchers will have the possibility to give a watcher a name, like:\n> \n> File changes will still be catched, but only for the models watcher. You can always pause and unpause while something is focused. You can stack different watchers:\n\nYour idea would clearly be better (but more work I suspect) since you are allowing individual watch expressions to be targeted directly (rather than indirectly) and multiple of them to be stacked (more work even)\n\nI _might_ want to allow file changes to be still applied to all watchers in focus mode, and having the focus function only for manual triggers. This is just down to personal preference as my rules are such that changing a test file itself will only cause that test file to be executed, so there is no reason for such rules to be excluded in focus mode (they are probably more good than harm), but I guess I can still use them as named watch expressions(s) if there's an option to define watch expressions that are enabled by default during focus mode.\n  ruby_gtnp supports embedding image data directly in the notification\nallowing remote notifications to display an image.\n\nIn practice, this change has been tested with Growl for Windows\nreceiving the notification and it behaves as expected, i.e. the image\nappears in the notification.\n\nThis also likely resolves issue #231, as that involves Growl (for OSX)\nrefusing to download the images.\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1874351) (merged 2119448f into 815ca3d8).\n Ha. I was merging this pull request for local testing at the same moment @rymai was merging. I also see that it doesn't fix #231, and I guess the reason is that the default host is `localhost` and this is why [ruby_gntp skips the image encoding](https://github.com/snaka/ruby_gntp/blob/master/lib/ruby_gntp.rb#L270). I will play a bit more with it now...\n I see that when I set the host for example to '127.0.0.1', then ruby_gntp properly embeds the image in the protocol message, but the image is still not displayed. So let's wait for Growl 2.0 :P\n  I setup an example project with the following structure:\n\n```\nGemfile\nGuardfile\n```\n\nThe contents of these files are:\n\n```\n# Gemfile\nsource :rubygems\ngem \"guard\"\ngem \"guard-shell\"\n```\n\nand\n\n```\n# Guardfile\nguard 'shell' do\n  watch(/^test\\.txt$/) {|m| `echo #{m.inspect} #{File.mtime(m[0])}` }\nend\n```\n\nI then continue to run guard. Whenever I echo something into that file, guard registers a change twice. In one shell:\n\n```\n$ echo blah >> test.txt\n```\n\nIn the shell running guard:\n\n```\n> [test.txt] 2012-06-26 00:40:22 +0200\n> [test.txt] 2012-06-26 00:40:22 +0200\n```\n\nThe same behaviour accounts for vim/nano etc. Interestingly, when I just run echo blah > test.txt, guard only fires once.\n\nAny idea how I can prevent this from happening or whether this is expected behaviour? (See my original stackoverflow question here: http://stackoverflow.com/questions/11198446/guard-executes-shell-scripts-twice)\n I tried opening the issue on guard-shell's github page, but it seems that option is disabled.\n Will update the issue with debug output if necessary (don't have access to it right now unfortunately)\n Hi @jabalsad,\n\nMatt Solt & Christopher Powell also have the same issue on [google group](https://groups.google.com/forum/#!topic/guard-dev/FDi8lV2EUQ4).\n\n@guard/core-team do you have an idea from when it could come? (also do you already encountered that issue)\n I have updated linux event in Listen, can you please try it by adding:\n\n``` ruby\ngem 'listen', :github => 'guard/listen', :branch => 'linux_events'\n```\n\nin your Gemfile. Thanks\n That fixes the issue, much appreciated!\n This also fixes the issue for me on Ubuntu. Thank you!\n\nEdit: Actually, on second review, this seems to _mostly_ fix the issue. I am still getting the double run, albeit less frequently.\n Noob mistake for me (actually noob, just started with ruby), I had a:\n\n```\nrequire 'rubygems'\n```\n\nwhich I had moved from the top of my spec_helper file into the Spork.prefork block and this was causing the doubling up for me. I believe I was tricked by the following comment:\n\n```\n# Loading more in this block will cause your tests to run faster.\n```\n\nHopefully this might help some others who find themselves here via Google like I did.\n Nice, I'll release a new release of Listen today. Thanks!\n Listen 0.4.7 released!\n I have updated Listen to 0.4.7 but am also experiencing this issue often. Since updating from 1.0.2 to 1.2.1, the guard prompt is often `> >` rather than `>`, and I have noticed that when this occurs, my guards execute twice. I'm running on Ubuntu 10.04.3.\n I am glad that this had been resolved, but can I ask if there is a way to print the cause (such as the list of modified files) for each triggered run? \n @prusswan you can use the debug option: `guard -d`\n @thibaudgg I tried that but it only shows the features that will be executed, but not the files that have been changed (i.e. model/controller), at least for cucumber\n\nIn the end I used the following watch expression, which works on ubuntu:\n\n``` ruby\n    watch(%r{^(.+)$}) { |m| `notify-send #{m[1]} modified` }\n```\n I'm running listen 0.4.7, but am still getting the double-run (and double-prompt) problem.\n I'm still getting this (inconsistently) with listen 0.4.7.\nSave a file once with vim in linux, guard runs twice.\n\n```\n> DEBUG (14:56:27): Stop interactor\nDEBUG (14:56:27): Command execution: hash stty\nDEBUG (14:56:27): Command execution: clear; \n\nDEBUG (14:56:27): Trying to run Guard::RSpec#run_on_modifications with [\"test/spec/generators/init_spec.rb\"]\nDEBUG (14:56:27): Hook :run_on_changes_begin executed for Guard::RSpec\nRunning: test/spec/generators/init_spec.rb\nDEBUG (14:56:27): Command execution: bin/rspec --color --order default   -f nested -r /home/golly/.rvm/gems/ruby-1.9.3-p194/gems/guard-rspec-1.2.0/lib/guard/rspec/formatters/notification_rspec.rb -f Guard::RSpec::Formatter::NotificationRSpec --out /dev/null --failure-exit-code 2 test/spec/generators/init_spec.rb \n...\nDEBUG (14:56:28): Command execution: hash stty\nDEBUG (14:56:28): Start interactor\n> DEBUG (14:56:29): Stop interactor\nDEBUG (14:56:29): Command execution: hash stty\nDEBUG (14:56:29): Command execution: clear; \n\nDEBUG (14:56:29): Trying to run Guard::RSpec#run_on_modifications with [\"test/spec/generators/init_spec.rb\"]\nDEBUG (14:56:29): Hook :run_on_changes_begin executed for Guard::RSpec\nRunning: test/spec/generators/init_spec.rb\nDEBUG (14:56:29): Command execution: bin/rspec --color --order default   -f nested -r /home/golly/.rvm/gems/ruby-1.9.3-p194/gems/guard-rspec-1.2.0/lib/guard/rspec/formatters/notification_rspec.rb -f Guard::RSpec::Formatter::NotificationRSpec --out /dev/null --failure-exit-code 2 test/spec/generators/init_spec.rb \n...\nDEBUG (14:56:30): Command execution: hash stty\nDEBUG (14:56:30): Start interactor\n> \n```\n Actually just a thought: Vim (on any platform I think) creates swap files while the editor is open.\nI think that Vim updating both of these files on save is what's causing Guard to run twice.\n\nIs there anyway to tell Guard to ignore a notification if it matches a certain regex?\nThis should match Vim swap files: `/^(?:.*[\\\\\\/])?\\.[^\\\\\\/]+\\.sw[p-z]$/`\n Yes, that could be the a cause. I think prior to the [Listen](https://github.com/guard/listen) integration, Vim swap files have been ignore by Guard, but I see that this [isn't the case for Listen anymore](https://github.com/guard/listen/blob/master/lib/listen/directory_record.rb#L14-16). Can someone with this problem verify this by using the [ignore](https://github.com/guard/listen/blob/master/lib/listen/directory_record.rb#L14-16) DSL method and open an issue on Listen if this solves the problem?\n Alrighty, I added this to my Guardfile and have been coding away for a while now.\n\n```\n    # Ignore Vim swap files\n    ignore /^(?:.*[\\\\\\/])?\\.[^\\\\\\/]+\\.sw[p-z]$/\n```\n\nUnfortunately the issue is still occurring.\nThe good news is that after adding the `ignore` directive I've only experienced the problem twice in the last 2 hours, much better than before where I couldn't go 15 minutes without the problem occurring.\n This is not directly related, but I noticed that my watcher for showing modified files, is triggered a lot more often when associated with guard-shell (rather than guard-rspec or guard-cucumber), even for files that are not really being modified (I can do a run_all and start seeing notifications for various source files even though only tests are being executed). Do plugins perform further filtering of file changes on their own?\n\n``` ruby\n    watch(%r{^(.+)$}) { |m| `notify-send #{m[1]} modified` }\n```\n Thanks for the tip prusswan. I added that snippet and found that Vim also creates an intermediary file and deletes (or moves) it nearly immediately.\n\nThis seems to be working better so far:\n\n``` ruby\n    # Ignore Vim swap files                                                                                              \n    ignore /~$/                                                                                                          \n    ignore /^(?:.*[\\\\\\/])?\\.[^\\\\\\/]+\\.sw[p-z]$/                                                                          \n```\n @japgolly glad it helped. Unfortunately I can't ignore my source code, so perhaps the behavior of guard-shell (as opposed to other plugins) needs to be examined\n Hi again. Unfortunately even with the aforementioned charge to my Guardfile to ignore Vim swap files, I'm still getting this error. I've kept on some debugging info and it turns out that the same filename in some cases, is simply sending two notifications. I'm not sure why.\n\nExample:\n\n```\nWATCH --------> test/spec/res_patch_manager_spec.rb modified\n...[tests run here]...\nWATCH --------> test/spec/res_patch_manager_spec.rb modified\n...[tests run again]...\n```\n\nI was hoping it would just be a few filters I was missing but I think the fix in 0.4.7 hasn't fixed this completely.\n I'm also running into the double run on file save.  Running with bundle exec guard -p --debug\n\n```\nwatch(%r{^(.+)$}) { |m| `notify-send #{m[1]} modified` }\n```\n\nWill tell me that spec/requests/static_pages_spec.rb has been modified twice after I save it once.  Here is output of starting up guard and saving the file once: http://pastebin.com/LA8NA0QQ\n\nI'm using force polling as this is a shared folder in a virtual machine\n\nI only get notifications of the file I actual saved as being modified, no temp/swap files are alerted\n @thibaudgg Here is the output for the listen gem run from the same environment as my normal project I have issues with (files on windows, shared in linux VM)\n\nhttp://jsbin.com/alitap/1\n @rschmitty so the specs suite is run from the linux VM right? Is it the Listen 0.5 spec suite?\n\nSymlinks stuff seems to fail badly, it could be related to https://github.com/guard/listen/issues/25\n\n@Maher4Ever do you have any thoughts?\n Correct, run from the VM running linux, ruby 1.9.3p194 (2012-04-20 revision 35410) [i686-linux]\n\nLooks like 0.5 spec: http://pastebin.com/j9XRdEHT\n\nI basically cloned from git, created a .rvmrc, and then ran bundle and rspec.  Let me know if I can provide any further info to help debug! Thx\n Bump, I'm getting this issue too (with `guard-rspec` and `guard-spork`) on Ubuntu 12.04.\n I'm also getting this issue with guard v1.3.2, guard-minitest, and guard-spork v1.1.0 on Mac OS X Snow Leopard. \n\nA save to any test file triggers a complete double-run of tests. \n\nMy Guardfile is here: http://pastebin.com/Mxr4ydS5.\nMy test_helper.rb is here: http://pastebin.com/WfxY1wwm\n\n(I am using the spork_incompatible_args branch of guard-minitest at https://github.com/singlebrook/guard-minitest.git to get around the troubling passing of the \"-r\" option to Spork.)\n Yeah it's an issue wit Listen 0.5 https://github.com/guard/guard/issues/297#issuecomment-8323185\nI just need to find time to fix it.\n +1\n This should have been fixed in the [polling/double](https://github.com/guard/listen/tree/polling/double) Listen branch. Please can you give it a try by adding that in your Gemfile:\n\n``` ruby\ngem 'listen', github: 'guard/listen', branch: 'polling/double'\n```\n\nThanks!\n .spec:\n `--drb`.\n\nGemfile:\n...\ngroup :development, :test do\n  gem 'sqlite3'\n  gem 'rspec-rails'\n  gem 'guard-rspec'\n  gem 'listen', github: 'guard/listen', branch: 'polling/double'\n  gem 'guard-spork'\n  gem 'spork'\nend\n...\n\n`$ bundle install\n$ bundle exec guard'\n\n[~/repo/example] bundle exec guard\nGuard uses TerminalNotifier to send notifications.\nGuard is now watching at '/Users/cczona/repo/example'\nGuard::RSpec is running, with RSpec 2!\nRunning all specs\nNo DRb server is running. Running in local process instead ...\n........\n\nFinished in 0.2224 seconds\n8 examples, 0 failures\n\nRandomized with seed 12499\n\nGuard::RSpec is running, with RSpec 2!\nRunning all specs\nNo DRb server is running. Running in local process instead ...\n........\n\nFinished in 0.2513 seconds\n8 examples, 0 failures\n\nRandomized with seed 12448\n Running all specs twice seems to be another issue, have you try without the `--drb` option?\n Same result without `--drb`, including 'No DRb server\" either way.\n\nShould I open a new issue or is there an existing one you'd prefer this be added to?\n That's weird, but editing/touching a file also launch the spec twice? Can you please give your Gemfile & Guardfile? \n Yep, the spec runs twice when guard launches, then twice again when a file changes.  I've gisted the Gemfile & Guardfile here: https://gist.github.com/3768936\n @cczona remove the `guard 'rspec', :version => 2 do` block duplication and it will be good. Have guard-rspec twice in your Guardfile will quite logically execute it twice...\n Fixed in Listen 0.5.2\n I'm having this exact issue, although for me it's not just twice but occasionally three repetitions.\n\nThis is my `Guardfile`:\n\n``` ruby\nguard 'shell' do\n  watch(%r{^src/(.*)\\.hs$}) { |m| system(\"runghc spec/#{m[1]}Spec.hs\" )}\n  watch(%r{^spec/(.*)$}) { |m| system(\"runghc #{m[0]}\") }\nend\n```\n\nI currently don't use a `Gemfile`, since this is not a Ruby project, but I've only got versions higher than 0.7.3 installed for Listen, so that shouldn't be an issue.\n\nI'm using Ruby 2.0.0-p247.\n  As I wrote on [Stack Overflow: \"How to build a very basic Guard example?\"](http://stackoverflow.com/questions/11174175/how-to-build-a-very-basic-guard-example) I stumbled around for a while looking for an example of how to write my own guard.\n\nWould you all be open to linking to \nhttps://github.com/guard/guard/wiki/Create-a-guard\n\nFrom the README? I think that would help people like me trying to learn.\n\nThanks for the excellent documentation.\n  I cannot get colored output to properly show from my guard tasks.\n\n```\nguard :shell, :cli => \"--tty --color\" do\n       watch (/.*/) { `git status` }\n       watch (/\\.git\\/refs\\/.*/) { `git lola` }\nend\n```\n\nI am not running this as part of a rails application or anything, I am just trying to use guard to help coding on any arbitrary project (have a tmux pane refreshing the log and status as changes are made).\n\nI am executing `bundle exec guard start -c` and my gemfile is just\n\n```\ngem 'quard'\ngem 'guard-shell'\n```\n\nThank you for any help!\n\nedit: formatting\n  This pull request [passes](http://travis-ci.org/guard/guard/builds/1604623) (merged 16d2d2ef into 89e46482).\n Looks good thanks!!\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1605102) (merged 41fe1683 into 89e46482).\n Looks great, README [interactions section](https://github.com/guard/guard#interactions) need to be updated right? After that I think we can release version 1.2.0 (correct right :fearful:?).\nThanks for this awesome PR @netzpirat !\n And don't forget the CHANGELOG! ^^\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1609179) (merged c0250393 into 89e46482).\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1609213) (merged f7070f91 into 89e46482).\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1609571) (merged fa4f2bd4 into 89e46482).\n @netzpirat I'll give it a try tomorrow, thanks!\n Seems to work great, there's just that at launch one time on ten the `>>` doesn't show up (and so doesn't work at all). Maybe this not directly related to coolline.\n Amazing job. I'll try this and get back to you :)\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1646092) (merged 56ef54ef into 89e46482).\n Awesome, I'll do the same. Thanks!\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1646213) (merged 7012e38c into 89e46482).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1649151) (merged c7f5cc7b into 89e46482).\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1649229) (merged ef14e664 into 89e46482).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1662465) (merged 81e297bd into 89e46482).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1664900) (merged ee133a6b into 89e46482).\n  After \n$ bundle update(ing)\na couple of my repositories I seem to have <Enter> be disabled to call #run_all\n\nWhat should I be checking?\n\nThanks!\n I am having this issue all the time and it's really frustrating that I constantly have to restart guard because Enter stops being captured.\n\nI get this `reload^M` the `^M` is what enter seems to send to guard.\n\n**EDIT** going to try coolline instead of readline for Mac OS  X\n  Why did you implement a major changes in minor version?\nWhy did you removed support of previous versions?\nI can't understand this.\nThis is sad =(\n Thanks @netzpirat for clarifying things. :)\n\n@AlexDenisov Could you backup your assumptions?\n\n> Why did you implement a major changes in minor version?\n\nThe list of changes is here: https://github.com/guard/guard/blob/master/CHANGELOG.md#110---2-june-2012\n\n> Why did you removed support of previous versions?\n\nThe only thing that we removed support of is the `--verbose` option but it was actually needed since this option was conflicting with the `--version` option.\n @netzpirat well said, thanks!\n  Just made the mistake of updating my gems, and now `listen` is installed but cannot be found\n\n``` bash\n% bundle install\nUsing ffi (1.0.11) \nUsing rb-fchange (0.0.5) \nUsing rb-fsevent (0.9.1) \nUsing rb-inotify (0.8.8) \nUsing listen (0.4.3) \nUsing thor (0.15.2) \nUsing guard (1.1.1) \nUsing guard-shell (0.5.1) \nUsing bundler (1.1.4) \n```\n\nOS X 10.7.4 / Ruby 1.8.7\n it seems to have an issue to Listen 0.4.3, could try to force version 0.4.2 ?\n\n@Maher4Ever Maybe we should nuke 0.4.3 no?  \n I'm just pinning Guard's version since every single update I've ever pulled has broken it completely. \n @khiltd sorry about that, feel free to helping us!\n Should be fixed with LIsten 0.4.4, can you try it please?\n rake spec:portability  # Run all specs on multiple ruby versions (requires rvm)\n\u279c  guard git:(master) rake spec\n/home/matthijs/.rvm/rubies/ruby-1.9.3-p0/bin/ruby -S rspec ./spec/guard_spec.rb ./spec/guard/interactor_spec.rb ./spec/guard/runner_spec.rb ./spec/guard/dsl_spec.rb ./spec/guard/notifier_spec.rb ./spec/guard/ui_spec.rb ./spec/guard/hook_spec.rb ./spec/guard/guardfile_spec.rb ./spec/guard/group_spec.rb ./spec/guard/notifiers/growl_notify_spec.rb ./spec/guard/notifiers/notifysend_spec.rb ./spec/guard/notifiers/growl_spec.rb ./spec/guard/notifiers/rb_notifu_spec.rb ./spec/guard/notifiers/tmux_spec.rb ./spec/guard/notifiers/libnotify_spec.rb ./spec/guard/notifiers/terminal_notifier_spec.rb ./spec/guard/notifiers/emacs_spec.rb ./spec/guard/notifiers/gntp_spec.rb ./spec/guard/interactors/helpers/terminal_spec.rb ./spec/guard/interactors/helpers/completion_spec.rb ./spec/guard/interactors/readline_spec.rb ./spec/guard/interactors/simple_spec.rb ./spec/guard/interactors/coolline_spec.rb ./spec/guard/guard_spec.rb ./spec/guard/watcher_spec.rb ./spec/guard/dsl_describer_spec.rb ./spec/guard/cli_spec.rb\n/home/matthijs/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require': cannot load such file -- listen (LoadError)\n        from /home/matthijs/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in`require'\n        from /home/matthijs/workspace/gems/guard/lib/guard.rb:2:in `<top (required)>'\n        from /home/matthijs/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in`require'\n        from /home/matthijs/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'\n        from /home/matthijs/workspace/gems/guard/spec/spec_helper.rb:2:in`<top (required)>'\n        from /home/matthijs/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'\n        from /home/matthijs/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in`require'\n        from /home/matthijs/workspace/gems/guard/spec/guard_spec.rb:1:in `<top (required)>'\n        from /home/matthijs/.rvm/gems/ruby-1.9.3-p0@guard/gems/rspec-core-2.11.1/lib/rspec/core/configuration.rb:780:in`load'\n        from /home/matthijs/.rvm/gems/ruby-1.9.3-p0@guard/gems/rspec-core-2.11.1/lib/rspec/core/configuration.rb:780:in `block in load_spec_files'\n        from /home/matthijs/.rvm/gems/ruby-1.9.3-p0@guard/gems/rspec-core-2.11.1/lib/rspec/core/configuration.rb:780:in`map'\n        from /home/matthijs/.rvm/gems/ruby-1.9.3-p0@guard/gems/rspec-core-2.11.1/lib/rspec/core/configuration.rb:780:in `load_spec_files'\n        from /home/matthijs/.rvm/gems/ruby-1.9.3-p0@guard/gems/rspec-core-2.11.1/lib/rspec/core/command_line.rb:22:in`run'\n        from /home/matthijs/.rvm/gems/ruby-1.9.3-p0@guard/gems/rspec-core-2.11.1/lib/rspec/core/runner.rb:69:in `run'\n        from /home/matthijs/.rvm/gems/ruby-1.9.3-p0@guard/gems/rspec-core-2.11.1/lib/rspec/core/runner.rb:8:in`block in autorun'\nrake aborted!\n/home/matthijs/.rvm/rubies/ruby-1.9.3-p0/bin/ruby -S rspec ./spec/guard_spec.rb ./spec/guard/interactor_spec.rb ./spec/guard/runner_spec.rb ./spec/guard/dsl_spec.rb ./spec/guard/notifier_spec.rb ./spec/guard/ui_spec.rb ./spec/guard/hook_spec.rb ./spec/guard/guardfile_spec.rb ./spec/guard/group_spec.rb ./spec/guard/notifiers/growl_notify_spec.rb ./spec/guard/notifiers/notifysend_spec.rb ./spec/guard/notifiers/growl_spec.rb ./spec/guard/notifiers/rb_notifu_spec.rb ./spec/guard/notifiers/tmux_spec.rb ./spec/guard/notifiers/libnotify_spec.rb ./spec/guard/notifiers/terminal_notifier_spec.rb ./spec/guard/notifiers/emacs_spec.rb ./spec/guard/notifiers/gntp_spec.rb ./spec/guard/interactors/helpers/terminal_spec.rb ./spec/guard/interactors/helpers/completion_spec.rb ./spec/guard/interactors/readline_spec.rb ./spec/guard/interactors/simple_spec.rb ./spec/guard/interactors/coolline_spec.rb ./spec/guard/guard_spec.rb ./spec/guard/watcher_spec.rb ./spec/guard/dsl_describer_spec.rb ./spec/guard/cli_spec.rb failed\n\nTasks: TOP => spec\n(See full trace by running task with --trace)\n\u279c  guard git:(master) \n `bundle install` & `bundle exec rake spec:portability` ?\n a loose 'gem install listen' fixed it, but it was not really clear that had to be done\n 'gem install listen' did not fix this problem for me.\n @mkanthan with `bundle exec ...` as well?\n  interactor should have a way of listing the running guards, as does the CLI.\nPerhaps it could also show stats on running threads?\n Sounds good, @guard/core-team what do you think?\n I think that's an excellent idea, let's start with `show` as I don't think the `list` command is very useful once Guard is started (since it \"Lists guards that can be used with the init command.\".\n Great new!\n  I have a project that's mounted from a Windows share and the share name has a dollar sign, for a Windows hidden share. On my Mac, the path ends up as /Volumes/e\\$/\n\nIf I fire up Guard in this directory, any time I change a file, nothing happens. If I hit the Enter key to force the Guards to run, it executes. If I map to a resource without a $ in the name Guard behaves properly. Discovering that it wasn't a network share that was causing the problem, I created a folder called test$ on my mac. Guard exhibited the same issue with that folder. Renaming it fixed the problem.\n\nI'm not sure where to even start looking to fix this. Is this something in the notification library, something with Guard, or something else entirely? \n Yeah it certainly an issue on Listen, @Maher4Ever do you have an idea where it could come from?\n Hum, that's interesting, I did [some tests](https://gist.github.com/2878273) and couldn't find any issue in Guard or in Listen with folder containing a `$`.\n\nCould you give us more details about your configuration (Guardfile and terminal output)?\n\nThanks in advance.\n Guardfile only uses guard-coffeescript right now. I tried with guard-sass with the same results.\n\nI noticed in your gist that your OS is using an OS-specific notifier. With mine, I'm running without one on OSX.\n\n```\nGuard could not detect any of the supported notification libraries.  \nGuard is now watching at '/Volumes/uwecweb6'\n```\n\nThe guardfile really is quite simple:\n\n```\nguard 'coffeescript', :input => \"src\", :output => \"lib\"\n```\n\nI've been digging around in the sass and coffeescript plugins to see if I could figure out what was going on, but I've come up empty - they both resolve the paths and execute things - they just don't seem to get notified.\n\nThe more I dig around the more I think it's something with the sass and coffeescript guards - after looking at your gist I tried the shell guard and it seems to notify just fine. What I can't figure out is why sass and coffeescript guards work when I force them to run, but they don't work when files change.\n Ok I think I'm going to close this because I can work around the problem with Guard-coffeescript by not using the :input param. Specifically creating my watch inside of the block gets around the problem:\n\n```\nguard 'coffeescript', :output => \"lib\", :bare => true do\n  watch(%r{src/.+\\.coffee})\nend\n```\n\nSo it's definitely something with how the coffeescript and sass guards create the watchers from the `:input` parameter.\n\nThanks for the discussion on this ticket folks, and thanks for Guard. Now that I know where the problem is, I'll start digging in to see if I can fix it.\n  On OS X 10.7, in Terminal 2.2.2 (303) and guard v1.1.1, Ruby 1.9.3-p194: \n\nIt seems that interactors don't work when guard first starts up. For example, pressing \"enter\" to run all tests does nothing.  After guard catches a watch, like revaluating the Guardfile or some other watched change, the interactors work normally again.\n\nSetting\n\n``` ruby\ninteractor :simple\n```\n\ndoes not work.\n\nHowever, **installing 'rb-readline' fixes it** -- although, I'd prefer not to add that dependency.\n\nMy Guardfile:\n\n``` ruby\nSPEC_FORMAT = 'p'\nSPEC_PROFILE = '--profile'\nCUKE_FORMAT = 'progress'\n\nguard 'rspec', version: 2, cli: \"#{SPEC_PROFILE} --drb --format #{SPEC_FORMAT}\", wait: 30, all_on_start: false, all_after_pass: false do\n  watch('spec/spec_helper.rb')  { \"spec\" }\n\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^app/(.+)\\.rb$}) { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^app/(.+)/(.+)/(.+)\\.rb$}) { |m| \"spec/#{m[1]}/#{m[2]}_spec.rb\"}\n  watch(%r{^lib/(.+)\\.rb$}) { |m| \"spec/lib/#{m[1]}_spec.rb\" }\nend\n\nguard 'cucumber', cli: \"-c --drb --format #{CUKE_FORMAT} --no-profile\", all_on_start: false, all_after_pass: false do\n  watch(%r{^features/.+\\.feature$})\n  watch(%r{^features/support/.+$})          { 'features' }\n  watch(%r{^features/step_definitions/(.+)_steps\\.rb$}) { |m| Dir[File.join(\"**/#{m[1]}.feature\")][0] || 'features' }\nend\n```\n Just tried on iTerm 2 v1.0.0, and I see the same behavior.\n\nIn more detail: I notice that the \"enter\" keystrokes are actually all queued up, but don't execute until the first watch catches.  So, if I boot guard hit and enter three times, nothing happens until a watch triggers.  At which point, the watch test is run and then guard runs all tests three times.\n @netzpirat: Seems like it works, with a caveat.\n\nPressing ENTER now runs all tests right away:\n\n```\n$ guard\nGuard could not detect any of the supported notification libraries.\nPlease add rb-readline for proper Readline support.\n > Guard is now watching at '/Users/scott/dev/vblive'\nGuard::RSpec is running, with RSpec 2!\n > > Run all\nRunning all specs\n```\n\n**On the other hand**  I now notice that my commands are not locally echoed.  Typing `rspec` works, but produces no visible characters on the screen.  In fact, after I quit guard, my terminal's echo is broken and I have to do a 'reset' to get it working again.\n\nThis wasn't happening with the rb-readline gem installed.  Everything worked fine with rb-readline.\n If it works perfectly with cooline, I can even imagine to making Guard working only with ruby >= 1.9.3 :)\n Update:\n\nI just noticed that the simple interactor does work properly when 'rb-readline' is in my bundle.  I can't figure out why, since the simple interactor just calls `IO#gets`.  Removing 'rb-readline' from my bundle causes the simple interactor to go back to  sticking on first run.\n I still have this issue, but I'm using Ruby 1.9.3-p0. Could this be the reason?\n I added the gem, but my prompt is simply a flashing rectangle anyway, I don't see a `>>` nor a `>` when running guard.\n Much better now, thank you!\n Haha, nice, I just found pry yesterday when googling around for something else. Very cool!\n\n```\nmacbuech:tttt josh$ pry\n[1] pry(main)> require 'guard'\n=> true\n[2] pry(main)> Guard::CoollineInteractor.available?\nNameError: uninitialized constant Guard::CoollineInteractor\nfrom (pry):2:in `<main>'\n[3] pry(main)> RbConfig::CONFIG['RUBY_PROGRAM_VERSION']\n=> \"1.9.3\"\n```\n\nHmmm why doesn't markup work anymore?? (I sent this through mail, and code is not marked up, even when I edit it here on the page.)\n :2: :1: :123: :9: :10:\n\n...funny stuff...\n Nope:\n\n```\nmacbuech:tttt josh$ pry\n[1] pry(main)> require 'guard/interactor'\n=> true\n[2] pry(main)> Guard::CoollineInteractor.available?\nNameError: uninitialized constant Guard::CoollineInteractor\nfrom (pry):2:in `<main>'\n```\n Strangely, in another project, I still don't get a console, even after having added `interactor :coolline` to `Guardfile`.\n I guess I will have to clean out my gems anyways some time soon, my system's pretty cluttered after some weeks of fooling around with RVM. What would you suggest me to do? It's not that much of a problem that the console of guard doesn't work for me, but it's still annoying a bit.\n I tried to update the system's installed gems, but it aborts:\n\n```\nmacbuech:iq josh$ sudo gem update --system\nPassword:\nLatest version currently installed. Aborting.\nmacbuech:iq josh$ \n```\n\nIs this normal?\n I have created a new .rvmrc file within the project and called `bundle` which made a clean new install of the gems. Still:\n\nAm I correct when I say: now my project shouldn't have any dependency on my system's gems anymore. Right?\n\nBut still:\n\n```\n[1] pry(main)> require 'guard/interactor'\n=> true\n[2] pry(main)> Guard::CoollineInteractor.available?\nNameError: uninitialized constant Guard::CoollineInteractor\nfrom (pry):2:in `<main>'\n```\n\nReally strange, that it works in one project and not in the other (with pretty the same configuration, though it's a new project, the other one has quite a lot other stuff in it already).\n `bundle exec pry` doesn't make any difference...\n What's also strange, though, is that on the other project, I get the following deprecation warning, which I don't get in the one where coolline doesn't work:\n\n```\nDEPRECATION: Starting with Guard v1.1 the use of the 'run_on_change' method in the 'Guard::Rails' guard is deprecated.\nPlease consider replacing that method-call with 'run_on_changes' if the type of change\nis not important for your usecase or using either 'run_on_modifications' or 'run_on_additions'\nbased on the type of the changes you want to handle.\nFor more information on how to update existing guards, please head over to:\nhttps://github.com/guard/guard/wiki/Upgrade-guide-for-existing-guards-to-Guard-v1.1\n```\n\nMaybe this gives us some extra clue...?? Is there an easy way to compare the gems used by a running Rails app to another's?\n Damn it, now it isn't working in both projects anymore! :P\n\nI have done a `sudo gem update` before, maybe that's the reason? No I think not, as I'm having an .rvmrc file in both projects.\n\nAnd I also don't get the DEPRECATION warning anymore. ;) Seems both projects use the same gems now, but this means that coolline also doesn't work for both.\n\nOn monday, my co-worker will come back from holidays, let's see what results he will have...\n\nAnyway, thanks a lot for your effort, I really appreciate it.\n  I noticed that my last failed specs are not run again when I made a change, but instead just the watched file. \n\nI just upgraded, but lacking proper documentation I just left my Guardfile as is. A copy paste version of the default Rspec Guardfile would be nice in the upgrade wiki file, I do understand now how 1.1 does things but still have no clue what my Guardfile should exactly look like. \n\nNice work otherwise, I see a lot of possible improvements for my guard file in the future.\n\nOn a different note: Consider a run last failed specs shortcut as well. I tend to hit enter and run my entire suite by mistake, but what I wanted was just the last failing spec.\n Hi,\n\nI think this is a [guard-rspec](https://github.com/guard/guard-rspec) issue rather than a guard issue.\n\nRegarding the Guardfile, you don't have to update it after upgrading to Guard 1.1 (the upgrade wiki page is meant for guard plugins developers only).\n\nRegarding the \"run last failed specs shortcut\" suggestion, feel free to file a specific issue for that.\n First reason: Guard before 1.1.0 wasn't always great on picking up changes fast. Sometimes it took 10-20 seconds to notice a change, sometimes it didn't rerun on change at all. That let me to just pressing enter, which of course runs everything. (I could not reproduce it at a specific point and it only happens with hundreds of specs, so I didn't report it here. )\n\nSecond reason: Not 100% of my specs follow the \"watch this, then run that\" pattern. Since we don't mock, we often pick up failures in related specs, that use a particular file, not necessarily the corresponding specs. Sometimes the failure doesn't require it's own test. So we just fix it from the related spec. \nSome red-green-red-green steps in and we usually come to the point where if we forgot to set a focus tag, guard runs everything, what we rather want is to run the last failed. \nThe much better listener might fix this already, I will let you know.\n\nto make it clear we want:\nred green red green all\n\nwe often get: \nred-all-red-green-all\n\nAlready set: keep_failed => true, :all_after_pass => false\n  Convention suggests that it should be `--version` (and that's what it actually is) but docs (and code) mention both [`--version`](https://github.com/guard/guard/blob/master/lib/guard/cli.rb#L100) and [`--verbose`](https://github.com/guard/guard/blob/master/lib/guard/cli.rb#L31).\n Sounds good to me :)\n Absolutely, that's a total mess right now! :P\n Yes, go for it. `--debug` describes the purpose of the option even better.\n This is fixed in 1d0ae2169653426d0afae72bbd11dfbb39c74a28\n  If you don't set this option, Gnome 3 will keep Guard notifications open in the notification bar. See this bug for more info: https://bugzilla.redhat.com/show_bug.cgi?id=693207#c3\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1342164) (merged 3e5241a8 into b19576d1).\n My bad\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1343360) (merged 0fdcf117 into b19576d1).\n When are you planning to release it in stable version?\n  I'm using guard-spin to run spin serve under guard.  I'm also using https://github.com/cldwalker/debugger instead of ruby-debug19.  When I hit a breakpoint in my code, I find that most of my keystrokes are eaten before they're handled by the debugger.  Running `guard -i` fixes this problem but is undesirable because I use guard for more than just spin.\n\nI would have filed this with guard-spin (https://github.com/jonsgreen/guard-spin) but it's such a small wrapper that I doubt the bug is in there.\n I think I'm going to add [coolline](https://github.com/Mon-Ouie/coolline) support on the EuRuKo hackday as alternative to Readline. Then the only dependency is Ruby 1.9 on all systems.\n Adding rb-readline does indeed change things.  I can use the debugger with both guard-spin and guard-rspec.\n\nHowever, they both now have additional problems.  When using the debugger under spin, guard runs all of my specs when I hit enter after typing a debugger command.  The debugger works fine under rspec but I'm unable to run any guard interaction commands afterwards.  I can type at the prompt but when I press enter I just get `^M` instead.\n I also get that `^M` issue. My project is a Sinatra app, I use guard-{bundler,minitest,rack}.\nSometimes things work fine for a while, but eventually it starts doing that.\n yeah I'm getting the same problem with the prompt in `git add --patch`, so it looks like it's really a readline or iTerm2 issue\u2026\n I encounter this bug, with guard-spin when using `binding.pry` in the code to start a debug, when I arrive in pry, some keys are not working properly so I can't use it for debug.\nWill try something with pry-remote but I'm definitely interesting in solving this.\n  This pull request [passes](http://travis-ci.org/guard/guard/builds/1254301) (merged ce48a8b8 into cdf561cd).\n This is a great proposal. I also propose that we contact all the developers of guards to ensure they are notified about the changes. Otherwise, users would get the deprecation warnings and a swarm of issues would be reported to the developers.\n\nIt might be better to change the proposed pre version to `1.1.0-alpha` because the \"alpha\" term is usually used to denote a developers-only build. We could then release a `1.1.0-beta` version just to allow users to experiment with the changes  before releasing the final version. The periods between the releases don't have to be long of course.\n Great. Just switched to the listen branch to use for my projects and migration of my Guards.\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1274059) (merged 306bd4de into cdf561cd).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1279093) (merged 061ab9fa into cdf561cd).\n Great job so far! Do you have any release date in mind for the alpha version?\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1280429) (merged f47b1c48 into cdf561cd).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1280543) (merged b2b95e84 into cdf561cd).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1315921) (merged 86ccd4f3 into cdf561cd).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1315979) (merged ac2251fd into cdf561cd).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1316005) (merged 44295398 into cdf561cd).\n Congrats :clap: :clap:. Now we can begin testing Guard and Listen and how they will work with existing guards. I also agree that we should keep the alpha version for the core-team usage only.\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1324846) (merged 6afd62f1 into cdf561cd).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1324987) (merged 6ae953c1 into cdf561cd).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1329802) (merged fcf01289 into cdf561cd).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1341139) (merged a9119695 into b19576d1).\n Ok, the [CHANGELOG is ready](https://github.com/guard/guard/blob/listen/CHANGELOG.md) for 1.1.0!\n\nEdit: :heart: Travis CI!!!\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1382966) (merged 313bc869 into b84e9975).\n This pull request [passes](http://travis-ci.org/guard/guard/builds/1383037) (merged 55184444 into b84e9975).\n Regarding the things left to do, does \"Adding throw stuff in the upgrade guide wiki page.\" is still to do, or not anymore?\n Yep, that task is still open. It's not directly related to the Listen integration, but since people should anyway update their Guards, it's a good opportunity to explain again how to `throw :task_has_failed`. It's not a big deal, I can add it next week at the hack day before we release.\n Ok nice, thanks! :)\n  Some guards are a little more verbose than I'd prefer, but they do appear to be using UI.info to output. I'd love a guard level option to set the UI logging level.\n Looking at the UI class, the log methods available are:\n- info\n- warning\n- error\n- deprecation\n- debug\n\nI'd argue that you could order those like so:\n- info\n- debug\n- warning/deprecation (are these actually equivalent?)\n- error\n\nSo I'd allow for a symbol to be passed in that corresponds to the lowest level you would like display. If guard is passed `:info` (which would be the default) then all logs are rendered. If passed `:warning` then only warning and error calls are logged.\n\nIt'd be nice to have this guard-wide and also available to be set on individual guards (I may want info from one guard but only errors from another).\n I still think this is a good idea for a feature, but I've just started a\nnew job and welcomed a new child, so I haven't had much time for anything\nof late.\n\nOn Tue, May 1, 2012 at 3:07 AM, Thibaud Guillaume-Gentil <\nreply@reply.github.com\n\n> wrote:\n> \n> Warning/deprecation are a little different, I think we could order those\n> like that:\n> - info\n> - debug\n> - warning\n> - deprecation\n> - error\n> \n> I agree that having guard-wide option available would be nice, it could\n> maybe be done with [`caller`](http://grosser.it/2009/07/01/getting-the-caller-method-in-ruby/) ruby\n> method to known from which Guard the UI method has been called.\n> \n> So we would have a Guard cli option:\n> \n> `guard --log_level info` or `guard -l info`\n> \n> And a Guard dsl option:\n> \n> ``` ruby\n> guard 'rspec', : log_level => 'info' do\n>  # ...\n> end\n> ```\n> \n> If it's ok with you, can you submit a pull request? It would be awesome,\n> thanks!\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/277#issuecomment-5434648\n @derekprior no problem, take care of your new child!\n I would put `debug` before `info` because `debug` is something that you should activate deliberately.\n\nSo to see the `debug` outputs, you'd have to set the log level to `debug`.\n\nThat's actually how [Ruby's Logger](http://ruby-docs.com/docs/ruby_1.9.3-rails_3.2.2/Ruby%201.9.3/classes/Logger.html) work.\n\nRegarding the way of passing the logger level, we could probably add a new DSL method to allow this to be set Guard-wide as well as per guard plugin.\n More thoughts: I've attended EuRuKo 2012 in Amsterdam last week and had the chance to hear a talk by Mitchell Hashimoto speaking about [Building a Ruby Library: The Parts No One Talks About](https://speakerdeck.com/u/mitchellh/p/building-a-ruby-library-the-parts-no-one-talks-about) and there was [a part about logging](https://speakerdeck.com/u/mitchellh/p/building-a-ruby-library-the-parts-no-one-talks-about?slide=25) => I think we could definitely use [Log4r](http://log4r.rubyforge.org/) and we should definitely print the output to a file instead of stdout/stderr!\n Interesting! +1 to try Log4r.\n Guard also should allow enabling timestamps on log messages by configuration.\n For example, if you don't want to see INFO level logging like this:\n\n```\n15:16:38 - INFO - Guard::Spork has just been fired\n15:16:38 - INFO - Guard::Minitest 2.0.0 is running, with Minitest::Unit 4.7.5!\n15:16:38 - INFO - Running all tests\n```\n\nAdd a line like\n\n```\nlogger level: :warn\n```\n\nto your Guardfile.  See [the readme](https://github.com/guard/guard#logger) for details.\n  Is there any possible reason to explain why an at_exit callback is not executed when the main process is started by guard? I've filed an [issue for a sunspot testing gem](https://github.com/justinko/sunspot-rails-tester/issues/3).\n\nThis gem will take care of launching a solr server instance when needed in testing and kills it when the process is ending. This is the relevant code:\n\nhttps://github.com/justinko/sunspot-rails-tester/blob/master/lib/sunspot/rails/tester.rb#L33\n\nHowever when I run my specs (using guard-spork) after I stop the guard instance the solr process is still there and it's not killed. With plain spork (no guard) everything works. Gem maintainer told me to look at guard internals since he does a simple at_exit call. Is it possible that guard stops in some way the callback from being executed?\n You're right that's the issue, I'll forward the request to the guard-spork maintainer.\n ;) Guard-solr or foreman could solve the issue in a more elegant way, I'll look in those options too.\n  Fix for #274\n It's true the message may be a bit too obvious now -- if you're not happy about it, let me know and I'll see what I can do to edit it down.\n Whoops! Sorry. I should know better than to not run the tests. If you pull the branch again, I've fixed them.\n  Hi -- I am all for the message that Guard gives you if you have a Gemfile but aren't using it, but it's kind of FUDdy. It isn't \"dangerous\" to run guard without Bundler, and it's not \"safer\" with it. That would imply that Bundler is an antivirus program, which it's not. It also assumes that the user knows nothing about Bundler, which is probably not true. First, if I have a Gemfile, I probably know a little bit about Bundler, but second, what if I choose not to use Bundler because I'm running tests and I don't want to wait for `bundle exec` to do its thing? I would rather see a message like this:\n\n> FYI: It looks like your project has a Gemfile yet you are running `guard` outside of Bundler. If this is your intent, feel free to ignore this message. Otherwise, consider running `bundle exec guard` to ensure your dependencies are loaded correctly.\n I completely agree. All the Guard core members are non-native English speakers, so it's likely that you find plenty of clumsy  phrases all over the code base and the readme, and we really appreciate any feedback to improve the situation. \n\nI'm ok with changing the phrase, even when it's quite lengthy. Any objections @thibaudgg, @rymai and @Maher4Ever?\n Agreed! No objection! Thanks! :)\n Great feedback @mcmire. I also think the suggested message is a lot more descriptive (in a good way) and less misleading.\n Ah, right. Setting `bundle exec guard` doesn't affect individual guards because they usually run their own completely separate processes, correct?\n\nSo actually, take a step back -- what's the point of giving me this Bundler warning? After all, running `guard` probably isn't going to load the app or library I am working on (the guard processes will). So -- connecting the dots -- running `bundle exec guard` is important insofar that it guarantees that all of the guards I've defined in my Gemfile are successfully loaded, and I'm guessing you guys don't want to get complaints about stuff not being loaded properly from people who don't know the first thing about Guard (or Bundler for that matter). Was that the use case for this?\n Some time ago almost every second issue was related to not having run Guard with bundle exec. The bundle warning message saves hours of our time. Remember, there are many Guards that are useful for designers (guard-sass, guard-compass, guard-haml, etc.) or Guards for people not using Ruby as their language (guard-go, guard-phpcs, etc.), and they do not understand the bundler thing fully.\n Okay. That makes sense and I see why you phrased it as \"dangerous\" -- you want to stress that it's important that unless you know what you're doing, just use `bundle exec` and everything will be peachy. I'm considering changing the text to reflect this urgency (while keeping the friendly tone). What do you think about this:\n\n```\nGuard here! This project uses Bundler to manage dependencies, yet you are\nrunning `guard` outside of the bundle. Unless this is your intent, we strongly\nadvise that you use `bundle exec guard`, as this will ensure that all of the\nguards in your Guardfile are successfully loaded.\n\n(To hide this message, run `guard --no-bundler-warning`.)\n```\n You might want to also mention `bundle exec guard` explicitly in the Readme under [Installation](https://github.com/guard/guard#installation). As this was my first time to use Bundler, this initially confused me. I\u2019ve made a pull request with this copyedit \u2191\n\nYou might also want to mention this under [Start](https://github.com/guard/guard/blob/master/README.md#start) too\u2026\n  Was running into this error when using guard programmatically:\n\n```\n/usr/local/rvm/gems/ree-1.8.7-2011.12/gems/guard-1.0.0/lib/guard/interactor.rb:85: command not found: /usr/local/rvm/gems/ree-1.8.7-2011.12/gems/guard-1.0.0/bin/fsevent_watch_guard  \n```\n\nThe file in ./bin is named fsevent_watch_guard_guard and running rake build_vendor would modify ext/extconf and other files by continuously appending/prepending values.  I also regenerated fsevent_watch_guard by running rake build_mac_exec but there weren't any changes. \n Guard will be getting rid of the `fsevent` extension soon as it'll be using a new gem called [Listen](https://github.com/guard/listen). So your problem should automatically disappear when the transition is done.\n This pull request [fails](http://travis-ci.org/guard/guard/builds/1209426) (merged 65cbec9d into 0b431087).\n  Hello everyone,\n\nGuard has two files now for extra configurations as you know. The first one is `~/.Guardfile` and the second one is `~/.guard.rb`. Four months ago though a [new feature](https://github.com/guard/guard/pull/192) was added to define templates for guard's implementations in `~/.guard/templates/`.\n\nSince Guard already uses the `~/.guard/` directory, I think it would be better to move all user configurations to that directory. I also think we could change the name of `~/.guard.rb` to `~/.guard/shared.rb` which better describes the purpose of that file.\n\nWe could also change file `~/.Guardfile` to just `~/.guard/Guardfile`, but that would make `~/.guard/` unwatchable by Guard!\n\nOf course, the old files would be deprecated in the beginning until they get removed when its time for it.\n\nTo summarize: Guard already \"reserves\" the `~/.guard/` directory, thus we could store all configurations there. \n\n**Update**:\n\nWhile playing with the feature of defining templates in `~/.guard/templates`, I found out that the `Guardfile` for a given implementation must use the name of the implementation. So to define a template for `rspec` to use when calling `guard init rspec`, one should create a file  `~/.guard/templates/rspec`. Also, if `guard-rspec` is already installed, it wouldn't be used.\n\nWouldn't it be nicer to store the templates in a directory for the implementation instead? So `~/.guard/templates/rspec` would become `~/.guard/templates/rspec/Guardfile` and use it if it's found instead of the default one that comes with the implementation? That way one could define the template one time there and never have to change it again.\n +1 for moving all the configs to the `.guard` directory.\n Great! Hopefully this change will make it into Guard 1.1 :)\n No it didn't! :P\n\nWhat's the milestone for this? 1.2.0?\n Yep 1.2!\n That sounds good. I started working on this feature at the HackDay, but I didn't finish it yet :).\n :+1: and bump!\n  Also changes default urgency for libnotify to normal and low to match notifysend's new defaults.\n Is that sufficient? I can add more details if needed.\n  I'm using [vagrant](https://github.com/mitchellh/vagrant) on Windows with guard running on an Ubuntu VM. I can't seem to trigger file changes over the VirtualBox shared folder. If I touch the files within Ubuntu, it picks up the file changes (with `rb-inotify`). Touching the files on Windows doesn't trigger anything, even with polling. Any suggestions?\n It looks like this is a VirtualBox issue. https://github.com/mitchellh/vagrant/issues/707\n Thanks for the info. You can force the use of the polling adapter, see my comment in [issue #266](https://github.com/guard/guard/issues/266#issuecomment-4698677)\n Hmm well I updated to the latest VirtualBox which is supposed to include the fix. I've also tried the polling method you mentioned with\n\n```\nbundle exec guard --no-vendor\n```\n\nWhen touching the files on Windows, I can see that the last modified date reflects correctly but guard still isn't being triggered. Any suggestions?\n Does Guard show the message `Using polling (Please help us to support your system better than that).` on start?\n Yep, here is the full output\n\n```\n$ bundle exec guard --no-vendor\nUsing polling (Please help us to support your system better than that).\nGuard could not detect any of the supported notification libraries.\nGuard is now watching at '/vagrant'\nStarting Spork for RSpec\nUsing RSpec\nPreloading Rails environment\nLoading Spork.prefork block...\nSpork is ready and listening on 8989!\nSpork server for RSpec successfully started\nGuard::RSpec is running, with RSpec 2!\n```\n I've updated to Guard 1.1.0 and still having the same issue. My test involved\n\n```\n$ bundle exec guard\n```\n\nand then initiating file saves on a few `*_spec.rb` files from Windows. From within the virtual machine itself (Ubuntu), I can verify it works with a\n\n```\n$ touch *_spec.rb\n```\n\nHowever, I have a strong feeling this is a VirtualBox issue.\n @netzpirat What would you recommend? Been doing something like this but with no success =(\n\n```\nbundle exec guard -l 1000\n```\n @netzpirat thanks for the Virtualbox ticket research! \nThis issue seems to have been fixed in Virtualbox release 4.1.12, @Axsuul do you have that version?\n I updated to latest virtualbox, then installed guest additions, and then run guard with -p option. It works well now, but test runs twice if I modify file in Windows. When I try to \"touch test.rb\" in linux, it runs only 1 time.\n Using VirtualBox 4.1.18 with updated Guest Additions, the host being a MacOS X 10.7.4 and the guest an Ubuntu 10.04.3, I have to run guard with `guard -p -l 10`  to make it work without keeping my CPU at 100% charge.\n\nI understand the non-polling approach is not supported, but I'm getting this annoying double-trigger @Vizakenjack is getting. Did someone find a neat solution?\n @rchampourlier have you the last version of Guard & Listen?\n @thibaudgg Sorry I did specify my OSes versions and I forgot Guard & Listen...\n\nGuard is 1.2.3\nListen is 0.4.7\n\nI think these are the latest versions?\n @rchampourlier yep it is, it difficult to know from where the double-trigger is coming, have you try with another editor?\n Updated Guest Additions to 4.1.18 and now working with polling (although ti can be a bit slow). I don't seem to be getting the double trigger problem. Thanks for the help guys!\n Guard is launched with: `bundle exec guard -p -l 10`\n- `touch Guardfile` on guest: 1 trigger\n- `touch Guardfile` on host: 1 trigger\n- Editing and saving the file with SublimeText 2.0.1:\n  - without changing the file content: 1 trigger\n  - after changing the file content: 2 triggers\n- Editing and saving the file with TextMate 1.5.11: same behavior as SublimeText.\n @thibaudgg I just tested on a local file with SublimeText and TextMate. We have the exact same behavior as through Vagrant. When the file is changed, we have a double trigger if guard is run with `-p` (I tested with `-p -l 10` and `-p` the result is the same). When the file is just saved, we have a single trigger.\n I'm also hitting the double trigger issue each time I save an edit in Sublime on Win7 x64. I ran `bundle exec guard -d -p -l 10` as asked, and I copied the result I see below. Note that at 19:23:13 the interactor and starts and stops instantly:\n\n```\n$ bx guard -d -p -l 10\nGuard uses GNTP to send notifications.\nDEBUG (19:21:45): Command execution: chcp\nGuard is now watching at 'c:/workspace/cognate'\nDEBUG (19:21:45): Command execution: hash stty\nDEBUG (19:21:45): Hook :start_begin executed for Guard::RSpec\nGuard::RSpec is running, with RSpec 2!\nRunning all specs\nDEBUG (19:21:45): Command execution: bundle exec rspec --help\nDEBUG (19:21:49): Command execution: bundle exec rspec --fail-fast -f progress -r c:/R\nailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/guard-rspec-1.2.1/lib/guard/rspec/for\nmatters/notification_rspec.rb -f Guard::RSpec::Formatter::NotificationRSpec --out /dev\n/null --failure-exit-code 2 spec\n....\n\nFinished in 7.53 seconds\n4 examples, 0 failures\n\nRandomized with seed 56900\n\nDEBUG (19:22:21): Hook :start_end executed for Guard::RSpec\nDEBUG (19:22:21): Command execution: hash stty\nDEBUG (19:22:21): Start interactor\nDEBUG (19:22:41): Stop interactor\nDEBUG (19:22:41): Command execution: hash stty\nDEBUG (19:22:41): Trying to run Guard::RSpec#run_on_modifications with [\"spec/models/n\node_spec.rb\"]\nDEBUG (19:22:41): Hook :run_on_changes_begin executed for Guard::RSpec\nRunning: spec/models/node_spec.rb\nDEBUG (19:22:41): Command execution: bundle exec rspec --fail-fast -f progress -r c:/R\nailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/guard-rspec-1.2.1/lib/guard/rspec/for\nmatters/notification_rspec.rb -f Guard::RSpec::Formatter::NotificationRSpec --out /dev\n/null --failure-exit-code 2 spec/models/node_spec.rb\n...\n\nFinished in 6.75 seconds\n3 examples, 0 failures\n\nRandomized with seed 4440\n\nDEBUG (19:23:13): Hook :run_on_changes_end executed for Guard::RSpec\nDEBUG (19:23:13): Command execution: hash stty\nDEBUG (19:23:13): Start interactor\nDEBUG (19:23:13): Stop interactor\nDEBUG (19:23:13): Command execution: hash stty\nDEBUG (19:23:13): Trying to run Guard::RSpec#run_on_modifications with [\"spec/models/n\node_spec.rb\"]\nDEBUG (19:23:13): Hook :run_on_changes_begin executed for Guard::RSpec\nRunning: spec/models/node_spec.rb\nDEBUG (19:23:13): Command execution: bundle exec rspec --fail-fast -f progress -r c:/R\nailsInstaller/Ruby1.9.3/lib/ruby/gems/1.9.1/gems/guard-rspec-1.2.1/lib/guard/rspec/for\nmatters/notification_rspec.rb -f Guard::RSpec::Formatter::NotificationRSpec --out /dev\n/null --failure-exit-code 2 spec/models/node_spec.rb\n...\n\nFinished in 6.74 seconds\n3 examples, 0 failures\n\nRandomized with seed 10269\n\nDEBUG (19:23:44): Hook :run_on_changes_end executed for Guard::RSpec\nDEBUG (19:23:44): Command execution: hash stty\nDEBUG (19:23:44): Start interactor\n>\n```\n\nPS Separately, I'm defaulting to the polling adapter because the listen gem doesn't seem to notice file changes in my working directory. I've installed and removed combinations of rb-fsevent, rb-notifu, rb-fchange, and wdm, but guard doesn't pick up changes. But polling seems to work perfectly, except for this double trigger issue.\n Unfortunately, I wasn't able to reproduce the double trigger issue. Does anyone have a repeatable way to reproduce this issue? (preferably starting with a clean install of an operating system and ruby).\n I'm looking into a reproductible way. What would be the lowest-requirement-approach to test Guard triggering (without the need for a Rails/Sinatra project and the appropriate guards?). Is there a 'guard-test' for example?\n\n[EDIT] Just created a new guard: [guard-self_test](https://github.com/rchampourlier/guard-self_test).\n Done!\n\nI've reproduced it on a fresh Vagrant box with Lucid32 and rbenv install of Ruby 1.9.3-p194. The test project is available on this [repo](https://github.com/rchampourlier/guard_reproduce_issue_269). I've set the box to `lucid32-ruby-1.9.3-p194` in the `Vagrantfile` which is a box I build using [this](https://github.com/rchampourlier/vagrant-stacks) but you can use `lucid32` instead and install Ruby 1.9.3-p194 yourself.\n\nThe test log is in this [gist](https://gist.github.com/3357019). We can see that editing a file in SublimeText causes two triggers, when all other cases trigger only once.\n\nThe test procedure is:\n- touch `touch-from-host` from the host\n- touch `touch-in-guest` inside the guest machine\n- save `touch-in-sublime-text`without changing the file in SublimeText\n- edit and save `edit-in-sublime-text` after changing the file in SublimeText\n I have the same issue with sublime. Hope you fix it soon.\n We have an issue opened on Listen about this issue, feel free to participate. Pull requests are welcome.\nhttps://github.com/guard/listen/issues/57\n  The problem is that the refactored code doesn't work as anticipated.  The previous code registers them sufficiently early and works correctly, btw.\n\nThe fix will be attached soon.\n The signal traps are attached before the listener starts and since the signals change the listener state, this is perfectly valid. \n\nThe refactoring was done because the listener will be replaced with [Listen](https://github.com/guard/listen) soon and I didn't want to have them lost.\n\nYou current Guard master does not work as advertised. When I send a `SIGUSR1` or `SIGUSR2` to your version of Guard, it exits the process.\n\nIn addition the specs are also failing:\n\n``` bash\n\u00bb git clone git://github.com/steakknife/guard.git                                                      ruby-1.9.3-p125 \nCloning into 'guard'...\nremote: Counting objects: 5415, done.\nremote: Compressing objects: 100% (2020/2020), done.\nremote: Total 5415 (delta 3427), reused 5313 (delta 3345)\nReceiving objects: 100% (5415/5415), 770.63 KiB | 349 KiB/s, done.\nResolving deltas: 100% (3427/3427), done.\n\notherland ~\n\u00bb cd guard                                                                                             ruby-1.9.3-p125 \n\notherland ~/guard\n\u00bb bundle                                                                               master 5c60354  ruby-1.9.3-p125 \nFetching gem metadata from http://rubygems.org/........\nUsing rake (0.9.2.2) \nUsing bundler (1.1.1) \nUsing coderay (1.0.5) \nUsing diff-lcs (1.1.3) \nUsing ffi (1.0.11) \nUsing thor (0.14.6) \nUsing guard (1.0.0) from source at /Users/michi/guard \nInstalling hpricot (0.8.6) with native extensions \nInstalling mustache (0.99.4) \nInstalling rdiscount (1.6.8) with native extensions \nInstalling ronn (0.7.3) \nInstalling guard-ronn (0.1.2) \nUsing guard-rspec (0.6.0) \nUsing method_source (0.7.1) \nUsing slop (2.4.4) \nUsing pry (0.9.8.4) \nUsing rb-readline (0.4.2) \nInstalling redcarpet (2.1.0) with native extensions \nUsing rspec-core (2.8.0) \nUsing rspec-expectations (2.8.0) \nUsing rspec-mocks (2.8.0) \nUsing rspec (2.8.0) \nInstalling ruby_gntp (0.3.4) \nUsing yard (0.7.5) \nYour bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.\n\notherland ~/guard\n\u00bb bundle exec rspec spec/guard/listeners/signals_spec.rb                               master 5c60354  ruby-1.9.3-p125 \nPlease do not update/create files while tests are running.\nRun options: include {:focus=>true}\n\nAll examples were filtered out; ignoring {:focus=>true}\nFFFFFFFFFFFF\n\nFailures:\n\n  1) Guard::Listener when #initialize a new Listener on an USR1 signal#pause once\n     Failure/Error: guard.should_receive(:pause).once\n     SignalException:\n       SIGUSR1\n     # ./spec/guard/listeners/signals_spec.rb:23:in `block (4 levels) in <top (required)>'\n\n  2) Guard::Listener when #initialize a new Listener on an USR2 signal does nothing\n     Failure/Error: let(:guard) { Guard::Listener.new }\n     SignalException:\n       SIGUSR2\n     # ./lib/guard/listener.rb:60:in `initialize'\n     # ./spec/guard/listeners/signals_spec.rb:11:in `new'\n     # ./spec/guard/listeners/signals_spec.rb:11:in `block (3 levels) in <top (required)>'\n     # ./spec/guard/listeners/signals_spec.rb:35:in `block (4 levels) in <top (required)>'\n\n  3) Guard::Listener when #initialize a new Listener on duplicate USR1 signals#pause once\n     Failure/Error: guard.should_receive(:pause).once\n     SignalException:\n       SIGUSR1\n     # ./spec/guard/listeners/signals_spec.rb:50:in `block (4 levels) in <top (required)>'\n\n  4) Guard::Listener when #initialize a new Listener on duplicate USR2 signals does nothing\n     Failure/Error: guard.should_not_receive(:pause).any_number_of_times\n     SignalException:\n       SIGUSR2\n     # ./spec/guard/listeners/signals_spec.rb:65:in `block (4 levels) in <top (required)>'\n\n  5) Guard::Listener when #initialize a new Listener on an USR1 and then USR2 signal#pause and then #run\n     Failure/Error: Process.kill :USR2, Process.pid\n     SignalException:\n       SIGUSR2\n     # ./spec/guard/listeners/signals_spec.rb:76:in `exception'\n     # ./spec/guard/listeners/signals_spec.rb:76:in `kill'\n     # ./spec/guard/listeners/signals_spec.rb:76:in `block (4 levels) in <top (required)>'\n\n  6) Guard::Listener when #initialize a new Listener on an USR2 and then USR1 signal#run once\n     Failure/Error: Unable to find matching line from backtrace\n     SignalException:\n       SIGUSR2\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:35:in `exception'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:35:in `run_in'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:70:in `block in run_all'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:70:in `each'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:70:in `run_all'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:368:in `run_hook'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:292:in `block in run_before_each_hooks'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:292:in `each'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:292:in `run_before_each_hooks'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example.rb:217:in `run_before_each'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example.rb:79:in `block in run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example.rb:173:in `with_around_hooks'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example.rb:77:in `run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:355:in `block in run_examples'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:351:in `map'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:351:in `run_examples'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:337:in `run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:338:in `block in run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:338:in `map'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:338:in `run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:338:in `block in run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:338:in `map'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:338:in `run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/command_line.rb:28:in `block (2 levels) in run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/command_line.rb:28:in `map'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/command_line.rb:28:in `block in run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/reporter.rb:34:in `report'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/command_line.rb:25:in `run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/runner.rb:80:in `run_in_process'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/runner.rb:69:in `run'\n     # /Users/michi/.rvm/gems/ruby-1.9.3-p125-perf/gems/rspec-core-2.8.0/lib/rspec/core/runner.rb:10:in `block in autorun'\n\n  7) Guard::Listener when #initialize a new Listener when #pause on an USR1 signal does nothing\n     Failure/Error: before { Process.kill :USR1, Process.pid }\n     SignalException:\n       SIGUSR1\n     # ./spec/guard/listeners/signals_spec.rb:110:in `kill'\n     # ./spec/guard/listeners/signals_spec.rb:110:in `block (5 levels) in <top (required)>'\n\n  8) Guard::Listener when #initialize a new Listener when #pause on an USR2 signal#pause once\n     Failure/Error: before { Process.kill :USR2, Process.pid }\n     SignalException:\n       SIGUSR2\n     # ./spec/guard/listeners/signals_spec.rb:122:in `kill'\n     # ./spec/guard/listeners/signals_spec.rb:122:in `block (5 levels) in <top (required)>'\n\n  9) Guard::Listener when #initialize a new Listener when #pause on duplicate USR1 signals does nothing\n     Failure/Error: Process.kill :USR1, Process.pid\n     SignalException:\n       SIGUSR1\n     # ./spec/guard/listeners/signals_spec.rb:136:in `kill'\n     # ./spec/guard/listeners/signals_spec.rb:136:in `block (5 levels) in <top (required)>'\n\n  10) Guard::Listener when #initialize a new Listener when #pause on duplicate USR2 signals#run once\n     Failure/Error: Process.kill :USR2, Process.pid\n     SignalException:\n       SIGUSR2\n     # ./spec/guard/listeners/signals_spec.rb:151:in `kill'\n     # ./spec/guard/listeners/signals_spec.rb:151:in `block (5 levels) in <top (required)>'\n\n  11) Guard::Listener when #initialize a new Listener when #pause on an USR1 and then USR2 signal#run once\n     Failure/Error: Process.kill :USR1, Process.pid\n     SignalException:\n       SIGUSR1\n     # ./spec/guard/listeners/signals_spec.rb:166:in `kill'\n     # ./spec/guard/listeners/signals_spec.rb:166:in `block (5 levels) in <top (required)>'\n\n  12) Guard::Listener when #initialize a new Listener when #pause on an USR2 and then USR1 signal#run and then #pause\n     Failure/Error: Process.kill :USR2, Process.pid\n     SignalException:\n       SIGUSR2\n     # ./spec/guard/listeners/signals_spec.rb:181:in `kill'\n     # ./spec/guard/listeners/signals_spec.rb:181:in `block (5 levels) in <top (required)>'\n\nFinished in 0.00904 seconds\n12 examples, 12 failures\n\nFailed examples:\n\nrspec ./spec/guard/listeners/signals_spec.rb:22 # Guard::Listener when #initialize a new Listener on an USR1 signal#pause once\nrspec ./spec/guard/listeners/signals_spec.rb:34 # Guard::Listener when #initialize a new Listener on an USR2 signal does nothing\nrspec ./spec/guard/listeners/signals_spec.rb:49 # Guard::Listener when #initialize a new Listener on duplicate USR1 signals#pause once\nrspec ./spec/guard/listeners/signals_spec.rb:64 # Guard::Listener when #initialize a new Listener on duplicate USR2 signals does nothing\nrspec ./spec/guard/listeners/signals_spec.rb:79 # Guard::Listener when #initialize a new Listener on an USR1 and then USR2 signal#pause and then #run\nrspec ./spec/guard/listeners/signals_spec.rb:94 # Guard::Listener when #initialize a new Listener on an USR2 and then USR1 signal#run once\nrspec ./spec/guard/listeners/signals_spec.rb:112 # Guard::Listener when #initialize a new Listener when #pause on an USR1 signal does nothing\nrspec ./spec/guard/listeners/signals_spec.rb:124 # Guard::Listener when #initialize a new Listener when #pause on an USR2 signal#pause once\nrspec ./spec/guard/listeners/signals_spec.rb:140 # Guard::Listener when #initialize a new Listener when #pause on duplicate USR1 signals does nothing\nrspec ./spec/guard/listeners/signals_spec.rb:155 # Guard::Listener when #initialize a new Listener when #pause on duplicate USR2 signals#run once\nrspec ./spec/guard/listeners/signals_spec.rb:170 # Guard::Listener when #initialize a new Listener when #pause on an USR1 and then USR2 signal#run once\nrspec ./spec/guard/listeners/signals_spec.rb:185 # Guard::Listener when #initialize a new Listener when #pause on an USR2 and then USR1 signal#run and then #pause\n```\n\nI'm very sorry that you're disappointed, but as a maintainer it's my job to test each pull request that I'm merging and make sure the specs are passing and the changes works.\n The handlers are not installed for several seconds with the refactored patch.  If a USR1 is sent before the handler is installed, the result is obvious.\n @netzpirat \n\nThe previous code works with s/`self.windows?`/`Listener.windows?`/.  It was throwing a NoMethod error that was not visible from inside the Thread block.\n\nAlso, the signal handlers are not added for over 40 seconds consistently whereas the pull request add them at about 500 ms.\n\n```\n~/guard-example (master \u2714) guard \n/Volumes/Users/barry/.rvm/gems/ruby-1.9.3-p125@guard-example/gems/guard-1.0.0/lib/guard/listener.rb:310: Added signal handlers to Guard, PID 65581\nGuard uses GNTP to send notifications.\nGuard is now watching at '/Volumes/Users/barry/guard-example'\nBundle already up-to-date\nStarting guard-rake build\nGuard::Rails will now restart your app on port 3000 using development environment.\nStarting Rails...\n=> Booting Thin\n=> Rails 3.2.2 application starting in production on http://0.0.0.0:3000\n=> Call with -d to detach\n=> Ctrl-C to shutdown server\n.\n.\n.\n.\n.\n.\n/Volumes/Users/barry/.rvm/gems/ruby-1.9.3-p125@guard-example/gems/guard-1.0.0/lib/guard.rb:205: Added signal handlers to Guard, PID 65581\n```\n\nFurthermore, installing traps on windows fails with an ArgumentError exception.\n So the issue is that the handlers get attached _after_ Guard triggers start. Why not just move it?\n\nI have tested the Signal handlers on three Rubies on Windows 7 and they can be attached without exception. What was your test case?\n Way to encourage collaboration.  Good luck!\n Let me summarize what happend until now:\n1. You send us pull request #254 with a **broken** implementation and **failing** specs that test the **wrong** stuff.\n2. I fixed the implementation and rewrote the specs in 6802646 for you and I gave you a [polite explanation](https://github.com/guard/guard/pull/254#issuecomment-4510183) why I did so.\n3. You gave me a [disparaging  answer](https://github.com/guard/guard/pull/254#issuecomment-4534571) without any constructive feedback.\n4. You opened #263 with (again) a disparaging description and no constructive feedback.\n5. I gave you a more [detailed explanation](https://github.com/guard/guard/pull/254#issuecomment-4539495) why I changed some code from your pull request.\n6. You opened pull request #264 without a meaningful title and description. You ignoring my previous comment why I moved the logic to the Guard class and you moved the handlers back to the Listener class. Again, the specs are **failing**.\n7. I gave you a [polite feedback](https://github.com/guard/guard/pull/264#issuecomment-4560349) why I can't merge the pull request #264.\n8. I decided to fix the problem for you in efe8f76.\n9. You gave again a [rude answer](https://github.com/steakknife) without any constructive feedback.\n\nIn short, you send us broken code, I fix it for you and you react with abusive behavior. You are resistant to any feedback, ignoring any good advice and you communicate in a way that is not acceptable. And you call me to not encourage collaboration? What a joke.\n\nWhat did you expect? That I'm merging broken code and failing specs? No way. It was never my intention to offend you, I always tried to support you to get the feature _you_ want into Guard. And instead of learning from experienced people and saying thanks, you behave totally strange and offend me.\n\nYou have a serious problem man. I suggest that you maintain your own fork of Guard to fiddle around and leave us alone. From now on I will ignore you ~~and immediately close every issue and pull request without comment.~~\n This is not professional at all.  I suggest you ask your contributors to behave in a more constructive manner in the future to prevent such misunderstandings.  Life is too short to waste on such foolishness.  I let you have the last word.\n For the record, Windows 2003 Server, RubyInstaller 1.9.3p0 http://screencast.com/t/P4wlJ66Jk44M\n\nBe nice, it's contagious. :cake: :beer:\n  I'm confused by the use of the term `guard-name` in the README section for creating a new guard. It's unclear whether you should be using the actual word \"guard\" or the name of your Guard.\n Nice. Thanks! :smile:\n  While customizing my guardfile, it would be helpful for guard to output which `watch` method was used when an event is fired off.  is there a way to do this?\n There is no way to doing that yet, but that's a good idea. Pull request is welcome, thanks!\n Since the `Guardfile` is plain Ruby, you can write a debug watch method that outputs some debug info:\n\n``` ruby\ndef debug_watch(regex, &action)\n  watch(regex) do |match|\n      puts \"Watcher #{ regex.inspect } triggered.\"\n      action.call(match)\n  end\nend\n\nguard :whatever do\n  debug_watch %r{(.+).test}\nend\n```\n Closing this since it can be easily solved on a custom basis in your Guardfile. If you'd like to see it in Guard, feel free to send a pull request.\n  Hey guys\n\n@alandipert and I are using guard on a client project, and need the latest fixes in git HEAD.  For reasons out of our control, we can't use the git version w/ our deployment model.  Any chance you could push a RC for 1.0.1 so we could bind to a recent gem?\n\nThanks for the work on a great tool.\n- rob\n  This would be a minor documentation update, but I found that pause is useful not just when switching branches, but also when doing any longer file operations which do not involve programming:\n- `git rebase`\n- `git svn rebase`\n- Whitespace changes\n  USR1/USR2 signals and doc.\n\nFuture suggestion: print guard's pid when is verbose enabled to help users identify multiple guard processes.\n Thanks @steakknife, can you please add some specs :)\n Summary: Humour taken seriously may lead to awesome. :)\n\nAlthough other pulls have tested signal handler code on each other, I'll see what's possible just for the sport of it.\n\nLet me know if you find specs or helpers for rspec, rails, etc. that check signal handling.\n You can simply send a signal in the spec with [Process.kill](http://ruby-doc.org/core-1.9.3/Process.html#method-c-kill):\n\n``` ruby\nProcess.kill :USR1, Process.pid\n```\n This is probably wrong in 20 different ways, but here's a start.\n Thanks for adding the specs, however they failed and the signal handling was not working at all. I had to move the method call to `#add_signal_handlers` outside of the listener thread to make it work.\n\nIn addition I merged your separate `signals_spec.rb` into the `listener_spec.rb` to follow the common lib/spec pattern and slim down the spec, since you tested a way too extensively: You don't need to test for combination of method call sequences, just each program execution path within the method (two signals, two conditions). The internal state of the listener is a simple `@pause` instance boolean and is not a state machine :P\n\nThanks for your effort.\n I've never heard a complaint about too much testing unless test time slowed down production deployments.\n\nOften, the problem is lack of testing.\n\nBe careful what you wish for.\n There are also other aspects about tests: They have to be maintained by someone and they have to test the right thing.\n\nYour [#add_signal_handlers](https://github.com/steakknife/guard/blob/5c60354b2c645ea290b107df0f681d333ffe93fd/lib/guard/listener.rb#L145-152) has four execution paths: two signal blocks and in each an `if` condition. This should result in four contexts to be specified, but your [signal spec](https://github.com/steakknife/guard/blob/5c60354b2c645ea290b107df0f681d333ffe93fd/spec/guard/listeners/signals_spec.rb) has 12 different contexts. So you're testing three times to much as necessary. When focusing on the important logic of the method, I actually see only two contexts, because the purpose of the two `if` is only informational.\n\nIn short, the added method does the following: `SIGUSR1 => pause` and `SIGUSR2 => run`. As I mentioned in my previous comment, you're testing different sequences of possible method calls. Why do you want to ensure that a second `USR1` would result in something other than the first call? Do you want to test if the `if` statement really behaves the same on subsequent calls? The signal handlers are idempotent, you do not have to test the Ruby language constructs.\n\nI really don't understand your reaction. It was you who said: _\"this is probably wrong in 20 different ways\"_, and when I give you a honest feedback, you want to teach me in a childish way with your comment here and in #263. I really have no problem when someone teaches me, but it should be well-considered and constructive.\n\nI also had the choice of simply not merge you changes, because it doesn't work as advertised and the provided specs are failing, but I decided to support your intention to add signal handlers, even though I don't need them for my personal workflow. And what do I get for spending my time to support you? A response in a disparaging way.\n\nSo long, and thanks for all the fish.\n  ```\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/guard-1.0.0/lib/guard/cli.rb:102:in `version': uninitialized constant Guard::VERSION (NameError)\n    from /home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n    from /home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n    from /home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n    from /home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n    from /home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/guard-1.0.0/bin/guard:6:in `<top (required)>'\n    from /home/user/.rvm/gems/ruby-1.9.3-p125@gemset/bin/guard:19:in `load'\n    from /home/user/.rvm/gems/ruby-1.9.3-p125@gemset/bin/guard:19:in `<main>'\n```\n\nAny ideas what I'm doing wrong?\n I've found that /home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/guard-1.0.0/lib/guard/version.rb is not being required when using bundle exec.  It is included when _not_ using bundle exec.\n\nDebug version.rb:\n\n```\n$stderr.puts \"Guard version include start\"\nif false\n  $stderr.puts \"Terminating early for debug purposes\"\n  exit 1\nend\nmodule Guard\n  unless defined? Guard::VERSION\n    # The current gem version of Guard\n    VERSION = '1.0.0'\n    $stderr.puts \"Guard VERSION defined as #{Guard::VERSION}\"\n  end\nend\n$stderr.puts \"Guard version include end\"\n```\n `bundle exec guard version` $LOAD_PATH:\n\n```\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/yard-0.7.5/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/rspec-mocks-2.8.0/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/rspec-expectations-2.8.0/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/rspec-core-2.8.0/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/pry-0.9.8.3/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/slop-2.4.4/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/method_source-0.7.1/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/guard-rake-0.0.4/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/guard-1.0.0/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/thor-0.14.6/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/ffi-1.0.11/liba\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/ffi-1.0.11/ext\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/diff-lcs-1.1.3/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/coderay-1.0.5/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/awesome_print-1.0.2/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@global/gems/rake-0.9.2.2/lib\n/home/user/ruby/gemset/lib\n/home/user/ruby/gemset/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@global/gems/bundler-1.0.21/lib\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby/1.9.1\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby/1.9.1/x86_64-darwin11.3.0\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/vendor_ruby/1.9.1\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/vendor_ruby/1.9.1/x86_64-darwin11.3.0\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/vendor_ruby\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/1.9.1\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/1.9.1/x86_64-darwin11.3.0\n```\n\n`guard version` $LOAD_PATH:\n\n```\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/thor-0.14.6/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/ffi-1.0.11/lib\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/ffi-1.0.11/ext\n/home/user/.rvm/gems/ruby-1.9.3-p125@gemset/gems/guard-1.0.0/lib\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby/1.9.1\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby/1.9.1/x86_64-darwin11.3.0\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/vendor_ruby/1.9.1\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/vendor_ruby/1.9.1/x86_64-darwin11.3.0\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/vendor_ruby\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/1.9.1\n/home/user/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/1.9.1/x86_64-darwin11.3.0\n```\n I've even tried changing `require 'guard/version'` to `puts require 'guard/version'` AND putting a `puts require 'guard/version'` in Guard::CLI::version _with the above modified version.rb_, which prints:\n\n```\ntrue\nfalse\n```\n\nNo output from the modified version.rb, sadly.\n I've found the culprit.  guard-rake has an identically named lib/guard/version.rb  \n I've submitted a patch to fix [guard-rake #9](https://github.com/rubyist/guard-rake/issues/9).  `bundle exec guard` works again.\n Thanks for the patch on guard-rake\n Great work @steakknife\n No problem.  Glad to help.\n  Whenever I start guard, it informs me that it's watching the Guardfiles home directory. I don't want this behavior...I only want guard to watch the specific directories I have defined in my Guardfile. This is causing a real problem because its triggering my guard:shell function recursively and causing it to crash. How can I disable this default behavior?\n From the README:\n\nWhen you file an issue, please try to follow to these simple rules if applicable:\n- Make sure you run Guard with `bundle exec` first.\n- Add verbose information to the issue by running Guard with the `--verbose` option.\n- Add your `Guardfile` and `Gemfile` to the issue.\n- Make sure that the issue is reproducible with your description.\n You can either start Guard with the `-w` option to watch another directory than the home directory, but in general you want to filter the file system events with the `watch` regular expressions.\n No response for 5 days, so closing this for now.\n  I 100% agree to everything proposed. This is a chance to have the most used Guards upgraded to the latest Guard API. We could write a migration guide and put it to the wiki and add also information how errors should be handler (with throw) and give examples for most common patterns.\n Although this might be a big change to a core building-block of Guard, most _users_ won't notice it if the maintainers of the most used Guard release new versions after this change. I noticed that the names of the new methods use the singular form in `run_on_addition`, `run_on_modification` and the plural form in `run_on_removals`. I think that using the plural form in all the methods is better as these methods get called with an array of files.\n\nBeside from that small observation, all your proposals are great. I'm looking forward to using the new Guard with Listen and see how they play together in the long run :)\n Yeah +1 for the plural form:\n- `run_on_additions`\n- `run_on_modifications`\n- `run_on_removals`\n\nI'll attack that on the `listen` branch when I found some time :)\n Ok, I begun the Listen gem integration on the [listen branch](https://github.com/guard/guard/tree/listen). It's already working but only for file modification, I'll continue when I'll have some free time (and not super tired!), so feel free to commits on that branch :)\n\nOne point through. What do you think about adding a global `run_on_changes` (note the `s` on change) method to Guard, to remove duplication on guards implementation. Something like:\n\n``` ruby\nmodule Guard\n  class Guard\n\n    def run_on_changes(paths)\n      # general behavior\n    end\n\n    def run_on_additions(paths)\n      run_on_changes(path)\n    end\n    def run_on_modifications(paths)\n      run_on_changes(path)\n    end\n    def run_on_removals(paths)\n      run_on_changes(paths)\n    end\n\n  end\nend\n```\n\nSo a guard could overwrite just that method and having the same behavior across all changes. Great no?\n +1 to adding `run_on_changes`. From your example it seems that the developer should manually call it in the code, but wouldn't it be nicer if we called it automatically? After all, the code in that method should always be shared.\n If I see it correctly, that would require guards to call `super` in all the three method, right? I was thinking that we could always call `run_on_changes` from [this method](https://github.com/guard/guard/blob/listen/lib/guard/runner.rb#L48) to avoid the `super` call. What do you think about it?\n BTW: I'm working on the specs for the runner, but I was wondering about the lock [used here](https://github.com/guard/guard/blob/listen/lib/guard/runner.rb#L94), what is it for? I can't see any resource being shared between the interactors and the runner.\n I think the example above is not relevant since when a guard want to have the same behavior regardless of the change type (addition, modification, removel), it'll just have to override `#run_on_changes` (and not the others).\nThe example @thibaudgg gave is actually almost the default implementation if you don't override any methods. \n @rymai Thanks for pointing that out :). I indeed based my question on the example above which lead to me thinking about guard's implementations.\n\n@thibaudgg I see now why the lock is used. It's being used more like a semaphore than a mutex, but that's beside the point. Thanks for clearing that up.\n The listen gem integration process seems to approach its end. Tests pass on (almost) all supported Ruby versions for the runner. Rubinus has a problem with the `eql` operator of Rspec v2.9. [This commit](https://github.com/guard/guard/commit/0fc3d6e2f79051597a3f220e9648e88c38766b00) updates Rspec for Guard and starting with it some of the tests fail. The problem is a bit tricky to reproduce, but It seems that Rubinus's compiler can't find `RSpec::Matchers::BuiltIn::Eql` sometimes. You will see the specs fail if you are lucky the first time, or you could try the following command: `rm -rf ~/.rbx && bundle exec rspec`. \n\nI couldn't pinpoint the source of the problem (to be able to report it), but for our specs we can just replace all `eql` calls with `==` in the specs. @thibaudgg @netzpirat @rymai is that OK with you?\n NiceW\n\nI suggest to simply replace `eql` by `eq`! :)\n Ok I've pushed a few improvements, in particular I've move all the Guardfile-template-generation methods into a new `Guard::Guardfile` class. :)\n\nAlso, we'll have to implement `Guard::Runner.deprecation_warning`! ;-)\n I just pushed an implementation of the `deprecation_warning` for the runner. The message could be improved be adding a link to the wiki-page of the upgrade instructions. \n\n@rymai I already tried replacing `eql` with `eq`, but rspec seems to also have a problem with it on rubinius. The only method that works for now is `==`.\n Awesome deprecation notices! :)\n\nOk for the `eql`/`eq` shit, let's use `==` instead then? Or is this something that'll be fixed in RSpec at some point?\n Great. I'm sure it won't take a lot of time before rspec fixes the `eql` problem. So in the meantime we'll just use `==`.\n\n**Update**: Now we are green all the way :) http://travis-ci.org/#!/guard/guard/builds/1113274\n Thank you. About the wiki-page: sure thing, helping guards developers is very important considering the amount of guards out there. I'll see what I can come up with :)\n I've written a small [upgrade guide](https://github.com/guard/guard/wiki/Upgrade-guide-for-existing-guards-to-Guard-v1.1) to Guard v1.1. It is an initial draft, so feel free to change it as you see fit :)\n Wow that's great thank you! :)\n is it just me or is @Maher4Ever kicking some ass lately? ^_^b\n Thanks @Maher4Ever for this great guide!\n Glad you all liked the guide :). I'll add a link to it in the deprecation warning.\n\n**Update**: I'll wait until the decisions is made about the other things that should be deprecated.\n  When I start guard, all tests are run but the run_all hooks don't get triggered. Also, when I go from failed to pass, guard does rerun all tests but, again, the run_all hooks don't get called. The only time that the run_all hooks get executed is when I force a run of all tests by hitting Enter in the terminal.\n\nHere's what I have in my .Guardfile:\n\n``` ruby\nguard 'rspec', :version => 2, :all_after_pass => true do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb')  { \"spec\" }\n\n  # Rails example\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^app/(.*)(\\.erb|\\.haml)$})                 { |m| \"spec/#{m[1]}#{m[2]}_spec.rb\" }\n  watch(%r{^app/controllers/(.+)_(controller)\\.rb$})  { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\n  watch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\n  watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n\n  # Capybara request specs\n  watch(%r{^app/views/(.+)/.*\\.(erb|haml)$})          { |m| \"spec/requests/#{m[1]}_spec.rb\" }\n\n  # Guard#start runs once right after startup\n  callback(:start_begin) { coverage }\n  callback(:start_end) { no_coverage }\n\n  # Guard#run_all runs\n  callback(:run_all_begin) { coverage }\n  callback(:run_all_end) { no_coverage }\nend\n\ndef coverage\n  `touch tmp/coverage.txt`\nend\n\ndef no_coverage\n  `rm tmp/coverage.txt`\nend\n```\n\nHere are the results.\n\n``` bash\n$ bundle exec guard --verbose\nGuard could not detect any of the supported notification libraries.\nGuard is now watching at '/Users/mmaglana/src/mign'\nDEBUG (14:50:04): Hook :start_begin executed for Guard::RSpec\nDEBUG (14:50:04): Command execution: touch tmp/coverage.txt\nGuard::RSpec is running, with RSpec 2!\nRunning all specs\nDEBUG (14:50:04): Command execution: rspec --help\nDEBUG (14:50:05): Command execution: bundle exec rspec -f progress -r /Users/mmaglana/.rvm/gems/ruby-1.9.3-p125@mign/gems/guard-rspec-0.6.0/lib/guard/rspec/formatters/notification_rspec.rb -f Guard::RSpec::Formatter::NotificationRSpec --out /dev/null --failure-exit-code 2 spec \n.\n\nFinished in 0.43448 seconds\n1 example, 0 failures\nCoverage report generated for RSpec to /Users/mmaglana/src/mign/coverage. 15 / 43 LOC (34.88%) covered.\nDEBUG (14:50:07): Hook :start_end executed for Guard::RSpec\nDEBUG (14:50:07): Command execution: rm tmp/coverage.txt\nDEBUG (14:50:37): Guard::RSpec#run_on_change with [\"spec/requests/items_spec.rb\"]\nDEBUG (14:50:37): Hook :run_on_change_begin executed for Guard::RSpec\nRunning: spec/requests/items_spec.rb\nDEBUG (14:50:37): Command execution: bundle exec rspec -f progress -r /Users/mmaglana/.rvm/gems/ruby-1.9.3-p125@mign/gems/guard-rspec-0.6.0/lib/guard/rspec/formatters/notification_rspec.rb -f Guard::RSpec::Formatter::NotificationRSpec --out /dev/null --failure-exit-code 2 spec/requests/items_spec.rb \nF\n\nFailures:\n\n  1) Items Items index\n     Failure/Error: page.should have_content(@item2.subject)\n     NoMethodError:\n       undefined method `subject' for nil:NilClass\n     # ./spec/requests/items_spec.rb:12:in `block (2 levels) in <top (required)>'\n\nFinished in 0.38268 seconds\n1 example, 1 failure\n\nFailed examples:\n\nrspec ./spec/requests/items_spec.rb:9 # Items Items index\nDEBUG (14:50:49): Guard::RSpec#run_on_change with [\"spec/requests/items_spec.rb\"]\nDEBUG (14:50:49): Hook :run_on_change_begin executed for Guard::RSpec\nRunning: spec/requests/items_spec.rb\nDEBUG (14:50:49): Command execution: bundle exec rspec -f progress -r /Users/mmaglana/.rvm/gems/ruby-1.9.3-p125@mign/gems/guard-rspec-0.6.0/lib/guard/rspec/formatters/notification_rspec.rb -f Guard::RSpec::Formatter::NotificationRSpec --out /dev/null --failure-exit-code 2 spec/requests/items_spec.rb \n.\n\nFinished in 0.38563 seconds\n1 example, 0 failures\nRunning all specs\nDEBUG (14:50:51): Command execution: bundle exec rspec -f progress -r /Users/mmaglana/.rvm/gems/ruby-1.9.3-p125@mign/gems/guard-rspec-0.6.0/lib/guard/rspec/formatters/notification_rspec.rb -f Guard::RSpec::Formatter::NotificationRSpec --out /dev/null --failure-exit-code 2 spec \n.\n\nFinished in 0.3912 seconds\n1 example, 0 failures\nDEBUG (14:50:52): Hook :run_on_change_end executed for Guard::RSpec\n```\n Sorry about that. Thanks!\n  ```\nguard (0.10.0)\nguard-shell (0.3.0)\n```\n\n``` ruby\n# Guardfile\n\nguard :shell do\n  watch /^.+$/ do\n    p self\n  end\nend\n```\n\n```\n$ guard\nGuard could not detect any of the supported notification libraries.\nGuard is now watching at '/Users/krainboltgreene/Repository/ruby/gems/behaviorr'\n# <I've saved a file at this point>\n^C\n```\n\nAny ideas?\n - ruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-darwin10.8.0]\n- Bundler version 1.1.rc.7\n- Darwin mini.local 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386\n Yes, I have dropbox installed. Would that hijack the fs events?\n Yep, it was freaking Dropbox. Amazingly it also solved my Sublime Text 2 problem.\n\nDownloaded Dropbox, \"installed\", waited for it to finish initializing, restarted, everything worked like a charm.\n  Currently JRuby builds are disabled on Travis CI, because they always fail because of an [environment issue](http://travis-ci.org/#!/guard/guard/jobs/634357).  This need further investigation and may be fixed on the Travis side.\n  When using RVM and running Guard, I frequently see this:\n\n``` sh\nWARNING: You are using Guard outside of Bundler, this is dangerous and could not work. Using `bundle exec guard` is safer.\n```\n\nI don't think this is necessary when using RVM correctly. Ideally it would check for a gemset instead of the ruby version, but I don't see a way to detect that.\n The reason for this warning is to reduce the constant flow of issues from novice users that do not understand their environment and I really like to keep it, because it's a huge time saver for the Guard maintainers. What we really need is some kind of configuration (like a `.guardrc` file) that let advanced user customize Guard for their need. This would enable us to set a `--no-bundler-warning` flag.\n FWIW, I'd appreciate a `--no-bundler-warning`. Not everyone who would want this warning disabled uses RVM. \n\nMaybe I'm atypical, but when developing gems, I only use a Gemfile to install development dependencies. Typically the Gemfile only includes sources and gemspecs. I do not depend on Bundler to manage the `$LOAD_PATH` so it's not particularly useful beyond dependency installation.\n In the end it's just a stupid warning and it doesn't force anyone to use bundler at all, so you can just ignore it. Don't forget that Guard has a wide user base and many of them aren't even Ruby developers, they use Guard for frontend stuff (guard-haml, guard-sass, guard-compass, guard-less, guard-livereload) or system administration (guard-chef, guard-puppet, guard-rsync, guard-s3) just to name a few. This warning is meant for people who do not even know what `$LOAD_PATH` is and below the line this save us many, many hours of answering support questions.\n\nWe like to make Guard as flexible as possible, so we definitely would merge a pull request that introduces a `--no-bundler-warning` flag if someone want to see this in Guard, but we must always keep the non-technical users in mind.\n  The `options=nil` parameter suggests that the options hash is _optional_, but Guard fails without it:\n\n```\n!?notify ~/src/tork> irb -r guard/listener                                                                    10:12AM\n## ruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-linux]\n>> Guard::Listener.select_and_init\nNoMethodError: undefined method `inject' for nil:NilClass\n    from /home/sunny/app/rubygems/gems/guard-1.0.0/lib/guard/listener.rb:68:in `initialize'\n    from /home/sunny/app/rubygems/gems/guard-1.0.0/lib/guard/listeners/linux.rb:10:in `initialize'\n    from /home/sunny/app/rubygems/gems/guard-1.0.0/lib/guard/listener.rb:44:in `new'\n    from /home/sunny/app/rubygems/gems/guard-1.0.0/lib/guard/listener.rb:44:in `select_and_init'\n    from (irb):1\n    from /usr/bin/irb:12:in `<main>'\n```\n\nThis problem has existed since Guard v0.9.0.  I have updated [the wiki](https://github.com/guard/guard/wiki/Guard-Cookbook) accordingly. :gift:\n If you're interested in the FS listener, have a look at the upcoming [Listener](https://github.com/guard/listen). Any feedback is appreciated.\n @netzpirat The API looks good.  My first reaction was to reject the `ignore` and `filter` option passed into `Listen.to`:  I say, just give the user the raw events as they come and let them do their own processing.  But later, when I saw the (ARel style) chainable query creation, the ignore() and filter() modifiers seemed more reasonable.\n\nDefinitely looking forward to this being released, but first, perhaps a more memorable, non-generic project name would be in order?  How about \"**filling**\" for **fil**e system **li**steni**ng**? :)\n Ooh nice!  I'm going to use it instead of Guard::Listener.\n  Hello Guard core-devs,\n\nToday I have spent some time implementing a [feature-request](https://github.com/guard/guard/issues/227) I found on your issues-tracker.\n\nAs a consequence of the new features, Guard has changed a bit:\n- The `init` task defaults now to searching for installed guards and adding them to the new Guardfile.\n- The old functionality has been moved to the new `--bare` or `-b` option for the `init` task. This will just generate a Guard file with the default Guard template.\n- Multiple invokes of the `init` task with the `--bare` option will display an error and abort the Guard process if a Guardfile already exists (just like it used to do). This is not the case when invoking the `init` task with or w/o a guard name; These will result in adding the same templates to the `Guardfile`.\n\nThe new features has been documented, tested and added to the README file. I also made sure that all [tests pass on travis-ci](http://travis-ci.org/#!/Maher4Ever/guard) to make merging this feature easier.\n\nCheers\n Woot, thanks a lot!\n You are all more than welcome, keep up the good work :)\n  When using GNTP and the Growl 1.3.3 icons are no longer displayed on OSX. Instead Growl logs the following:\n\n```\n1/27/12 12:00:26.081 AM Growl: Not downloading icon for notification success of application Guard\n```\n\nIt appears to be related to GNTP and the Growl 1.3.3 - images still work using growl/growl-notify and previous versions of Growl don't exhibit this behavior.\n\nI am pretty sure this is a bug with Growl, but until it is fixed it should be noted somewhere.\n Thanks for reporting. I've asked the Growl guys and I'm waiting for a response. I'll update the status here when I have new information about it.\n GrowlMac confirmed that they know [the issue](http://code.google.com/p/growl/issues/detail?id=423) and it'll be fixed with Growl 1.4.\n It actually works on Growl 1.3.2 so I'd suggest not upgrading until 1.4 is released.\n Any way to revert Growl to 1.3.2? Hate this new icon lol\n If you're lucky enough to have not installed it on your other computer, you can just copy the old file across. If not -  Time Machine.\n Update: \"Anyhow, it should be fixed in 1.4. If not in 1.4, then 2.0.\"\n The reason for the change is that this specific item was causing 100% CPU for a lot of people. The tradeoff was worth it in our opinion so that people wouldn't run into that.\n Respectfully, I don't agree. The primary reason I use Growl is so that I see a big green light when my tests pass and a big red light when my tests fail. \n\nAnd my brain is trained to look for the colors. I honestly felt confused until I dug out my laptop and grabbed the older binary off it.\n it's only URL icons that have this problem. you may still send notifications to growl using files, and this is supported by the ruby_gntp library as far as i can tell. it's surprisingly useful despite being untouched in two years (as in, GNTP in growl for mac came _after_ development on ruby_gntp halted).\n also, 1.4 is currently in its second beta so you hopefully won't have long to wait for it.\n\nEDIT: 1.4b2 doesn't fix this issue, so it will likely not be fixed in 1.4.\n Ya, 1.4 doesn't fix this. 2.0 will. 1.3.2 has it, but if you have it and you hit 100% CPU, that's not cool at all. \n I've just installed Growl 1.4 from the Mac app store and can confirm that this issue is still present.  Rather frustrating to have a regression persisting for so long.\n Yeah, too bad... looking forward to use the new Notification Center of OS X Mountain Lion :)\n I think at this point I think it is safe to look at closing this as the 1.3.1 release supports TerminalNotifier which is a much better solution than Growl at this point.\n Great to hear that TerminalNotifier works great and replaces Growl for you, but it isn't a replacement for Growl by no means. Growl works cross-plattform and even cross-machine, so it's for example a great way to have notifications from your Vagrant box shown on the Vagrant host. Also customizing the notifications is a great feature of Growl, I for example like to have the 'Music Video' display style for Guard, so that notifications are obtrusive and can't be missed.\n\nWe'll keep the Growl notifier in the future and continue to maintain it, so I prefer to keep this issue open as reminder for people using Growl and come to Guard issues because of the missing icons. \n Makes sense. At this point though I am starting to doubt this will ever be resolved in Growl for OS X.\n\nThe issue has been open for 7 months now and I am fairly confident that the upcoming Growl 2.0 release doesn't resolve this issue. Even with the fix for #304.\n\nIt would be great if this was to get fixed but I've given up hope on it.\n This issue only affects users that use cross-machine notifications through the network protocol GNTP. For local notifications, the `growl` gem works just fine and I guess this is the majority of the users.\n So you don't believe in distributed test running?\n\nSeems like everybody wants this issue closed because they're convinced that the way they use Guard is the way everyone else uses it too. \n\nOn Aug 15, 2012, at 4:36 AM, Michael Kessler notifications@github.com wrote:\n\n> This issue only affects users that use cross-machine notifications through the network protocol GNTP. For local notifications, the growl gem works just fine and I guess this is the majority of the users.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n Sure, I see big advantages in distributed test running and also of Growl over the Mac Notification Center. This is why I don't want this issue to be closed. But I also believe a minority of the Guard users have such a setup and a real need for GNTP (I mean, the rails-dev-box was released 18 hours ago). There are a lot of Guard users that comes from design, frontend development, system administration and also from other languages than Ruby with a simple setup, and for them the `growl` gem just works fine.\n  ## Guardfile:\n\n``` ruby\nguard 'rspec', :version => 2, :cli => \"--color --format nested\" do\n  watch(%r{^spec/.+_spec\\.rb})\n  watch(%r{^lib/(.+)\\.rb})     { |m| \"spec/#{m[1]}_spec.rb\" }\nend\n```\n## Gemfile\n\n``` ruby\ngroup :development do\n  gem 'guard'\n  gem 'libnotify'\n  gem 'guard-rspec'\n  gem 'rb-readline'\nend\n```\n## Environment\n- Linux 2.6.32-5-amd64\n- ruby 1.8.7 (2011-06-30 patchlevel 352)\n## Error\n\nWhen I run `guard start` I see libnotify message with report and then guard crashes with next error:\n\n```\n//home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/watcher.rb:80:in `initialize': No space left on device - Failed to watch \"/home/blake/dev/my/project_child/.git/objects/78\": The user limit on the total number of inotify watches was reached or the kernel failed to allocate a needed resource. (Errno::ENOSPC)\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:190:in `new'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:190:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:199:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:195:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `each'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:195:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `each'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:195:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `each'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/guard/listeners/linux.rb:58:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/guard/listener.rb:100:in `start'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/guard/listeners/linux.rb:20:in `start'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/guard.rb:203:in `start'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/guard/cli.rb:75:in `start'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/thor-0.14.6/lib/thor/task.rb:22:in `send'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/bin/guard:6\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/bin/guard:19:in `load'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/bin/guard:19home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/watcher.rb:80:in `initialize': No space left on device - Failed to watch \"/home/blake/dev/my/project_child/.git/objects/78\": The user limit on the total number of inotify watches was reached or the kernel failed to allocate a needed resource. (Errno::ENOSPC)\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:190:in `new'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:190:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:199:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:195:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `each'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:195:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `each'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:195:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `each'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/guard/listeners/linux.rb:58:in `watch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/guard/listener.rb:100:in `start'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/guard/listeners/linux.rb:20:in `start'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/guard.rb:203:in `start'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/lib/guard/cli.rb:75:in `start'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/thor-0.14.6/lib/thor/task.rb:22:in `send'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/gems/guard-1.0.0/bin/guard:6\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/bin/guard:19:in `load'\n    from /home/blake/.rvm/gems/ruby-1.8.7-p352@project/bin/guard:19\n\n```\n\n---\n\nDoes it try to watch git files? Do I miss something?\n I've tried to use `ignore_paths '.git'` it had no effect.\n\nI've got only 93 files in the project:\n\n```\nfind . | grep -v '.git'  | wc -l\n93\n```\n Just FYI, `.git` is already ignored by default: https://github.com/guard/guard/blob/master/lib/guard/listener.rb#L19\n Nope.Gonna try to run it on another machine.\n Hm.. At my work, on another PC same project runs well with guard.. On both PCs I use Debian Squeeze. \n I am having a similar problem with a large directory that I have ignored using ignore_paths. It insists on complaining that it has 'Failed to Watch\" some file in the ignored directory.\n There doesn't seem to be any way to selectively ignore paths in the underlying inotify interface.\n I took the monster directory out of the project tree for now. Thanks for trying.\n I removed `.git` directory and it works for me too. But there might be something better:)\n Try increasing the max_user_watches for inotify. It is default set to 8192. I bumped it to 100k and things are ok. \n\n```\ncat /proc/sys/fs/inotify/max_user_watches\n\necho 100000|sudo tee /proc/sys/fs/inotify/max_user_watches\n```\n\nTo increase max_user_watches at boot, edit /etc/sysctl.conf and add fs.inotify.max_user_watches=100000 or fix fs.inotify.max_user_watches= to 100000.\n\nDon't thank me, thank this guy -> http://blog.sorah.jp/2012/01/24/inotify-limitation\n @thibaudgg I think it's indeed a good idea to catch this exception and show a link to a (wiki page?) or something on the Listen repo to help users. Shall we add the first wiki page to Listen ? :)\n Do it, but be sure to credit github.com/sorah and not me. =)\n @jhirn, good find!\n@thibaudgg, thanks for the support.\n  Hi there,\n## I followed Ryan Bates rails cast and when I start \"bundle exec guard\" I have this message : \n\nGuard could not detect any of the supported notification libraries.\nGuard is now watching at '/name_of_my_app_folder'\nGuard::RSpec is running, with RSpec 2!LiveReload 1.6 is waiting for a browser to connect.\nRunning all specs\n\nNo examples found.\n\nFinished in 0.00004 seconds\n## 0 examples, 0 failures\n\nAnd any changes I make don't get trapped by guard.\n\nAny idea why ?\n\nThx\n Bonjour Thibaud,\n\nLes voila\nMerci beaucoup et desole pour le derangement\n\nPhilippe\n\nOn Sat, Jan 21, 2012 at 5:02 AM, Thibaud Guillaume-Gentil\nreply@reply.github.com\nwrote:\n\n> Can you give your Guardfile & Gemfile please?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/228#issuecomment-3595441\n Voila les 2 liens\n\nGemFile\nhttps://gist.github.com/41d317a001adc0f522b3\n\nGuardFile\nhttps://gist.github.com/1653373\n\nMerci ;-)\nPhilipe\n\nOn Sat, Jan 21, 2012 at 11:51 AM, Thibaud Guillaume-Gentil\nreply@reply.github.com\nwrote:\n\n> Salut Philippe, je pense que les pi\u00e8ces jointes par mail ne marchent pas sous Github, tu pourrais faire un gist?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/228#issuecomment-3597223\n Pour le No example, effectivement ca s'et regle des que j'ai mis une\nspec, par contre en enlevant la ligne fsevent ou en la remplacant ca\nne change rien ...\nEst-ce que LIvereload pourrait etre le probleme ?\n\nMerci\nPhilippe\n\nOn Sat, Jan 21, 2012 at 2:28 PM, Thibaud Guillaume-Gentil\nreply@reply.github.com\nwrote:\n\n> Le 'No examples found.' vient du faite que tu ne dois pas avoir de specs, juste?\n> Sinon pour la d\u00e9tection des modifications essaye d'effacer `gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i` ou de le remplacer par `\u00a0gem 'rb-fsevent', '0.9.0.pre5', :require => false if RUBY_PLATFORM =~ /darwin/i`\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/228#issuecomment-3598398\n Oui j'utilise Dropbox, comment tu le sais ?? ;-)\nJe vais essayer ca.\nMerci\nPhilippe\n\nOn Sat, Jan 21, 2012 at 4:20 PM, Thibaud Guillaume-Gentil\nreply@reply.github.com\nwrote:\n\n> Non, je pense pas. T'utilises DropBox? Essaye voir de renommer/deplacer le dossier de l'application (et peut-\u00eatre un restart).\n> \n> On Jan 21, 2012, at 22:12 , madeinpanto wrote:\n> \n> > Pour le No example, effectivement ca s'et regle des que j'ai mis une\n> > spec, par contre en enlevant la ligne fsevent ou en la remplacant ca\n> > ne change rien ...\n> > Est-ce que LIvereload pourrait etre le probleme ?\n> > \n> > Merci\n> > Philippe\n> > \n> > On Sat, Jan 21, 2012 at 2:28 PM, Thibaud Guillaume-Gentil\n> > reply@reply.github.com\n> > wrote:\n> > \n> > > Le 'No examples found.' vient du faite que tu ne dois pas avoir de specs, juste?\n> > > Sinon pour la d\u00e9tection des modifications essaye d'effacer `gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i` ou de le remplacer par `\u00a0gem 'rb-fsevent', '0.9.0.pre5', :require => false if RUBY_PLATFORM =~ /darwin/i`\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/guard/guard/issues/228#issuecomment-3598398\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/guard/guard/issues/228#issuecomment-3599000\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/228#issuecomment-3599050\n Salut Thibaud,\n\nJ'ai sorti le dossier de la DropBox et maintenant ca marche !!!\nPenses tu que ce conflit avec DropBox va pouvoir etre corrige un jour\n? Est-ce un probleme avec fbsevent ou guard ?\nC'est tres pratique d'avoir les applications dans DropBox pour plein\nde raisons (possibilite de partage entre differents ordis, os etc ...)\n\nMerci beaucoup\nPhilippe\n\n2012/1/22 Thibaud Guillaume-Gentil\nreply@reply.github.com:\n\n> D\u00e8s fois il y a des conflits avec Dropbox, c'est pour \u00e7a :). Si ton app est dans le dossier de Dropbox, tu peux aussi essayer de la mettre en dehors.\n> \n> On Jan 22, 2012, at 01:21 , madeinpanto wrote:\n> \n> > Oui j'utilise Dropbox, comment tu le sais ?? ;-)\n> > Je vais essayer ca.\n> > Merci\n> > Philippe\n> > \n> > On Sat, Jan 21, 2012 at 4:20 PM, Thibaud Guillaume-Gentil\n> > reply@reply.github.com\n> > wrote:\n> > \n> > > Non, je pense pas. T'utilises DropBox? Essaye voir de renommer/deplacer le dossier de l'application (et peut-\u00eatre un restart).\n> > > \n> > > On Jan 21, 2012, at 22:12 , madeinpanto wrote:\n> > > \n> > > > Pour le No example, effectivement ca s'et regle des que j'ai mis une\n> > > > spec, par contre en enlevant la ligne fsevent ou en la remplacant ca\n> > > > ne change rien ...\n> > > > Est-ce que LIvereload pourrait etre le probleme ?\n> > > > \n> > > > Merci\n> > > > Philippe\n> > > > \n> > > > On Sat, Jan 21, 2012 at 2:28 PM, Thibaud Guillaume-Gentil\n> > > > reply@reply.github.com\n> > > > wrote:\n> > > > \n> > > > > Le 'No examples found.' vient du faite que tu ne dois pas avoir de specs, juste?\n> > > > > Sinon pour la d\u00e9tection des modifications essaye d'effacer `gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i` ou de le remplacer par `\u00a0gem 'rb-fsevent', '0.9.0.pre5', :require => false if RUBY_PLATFORM =~ /darwin/i`\n> > > > > \n> > > > > ---\n> > > > > \n> > > > > Reply to this email directly or view it on GitHub:\n> > > > > https://github.com/guard/guard/issues/228#issuecomment-3598398\n> > > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/guard/guard/issues/228#issuecomment-3599000\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/guard/guard/issues/228#issuecomment-3599050\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/guard/guard/issues/228#issuecomment-3600141\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/228#issuecomment-3602490\n J'ai update le client dropbox mais ca a pas regle le probleme.\nJe vois sur des forums que pas mal de gens ont le mm soucis.\nJe vais deplacer mes apps en attendant que ca soit fixe\n\nMerci encore en tout cas, pour Guard et pour tes reponses.\n\n2012/1/23 Thibaud Guillaume-Gentil\nreply@reply.github.com:\n\n> C'est une issue avec `rb-fsevent`, essaye de mettre \u00e0 jour ton client DropBox d\u00e8s fois cela fixe le probl\u00e8me: http://www.dropbox.com/downloading\n> \n> Je t'en prie!\n> \n> On Jan 23, 2012, at 16:33 , madeinpanto wrote:\n> \n> > Salut Thibaud,\n> > \n> > J'ai sorti le dossier de la DropBox et maintenant ca marche !!!\n> > Penses tu que ce conflit avec DropBox va pouvoir etre corrige un jour\n> > ? Est-ce un probleme avec fbsevent ou guard ?\n> > C'est tres pratique d'avoir les applications dans DropBox pour plein\n> > de raisons (possibilite de partage entre differents ordis, os etc ...)\n> > \n> > Merci beaucoup\n> > Philippe\n> > \n> > 2012/1/22 Thibaud Guillaume-Gentil\n> > reply@reply.github.com:\n> > \n> > > D\u00e8s fois il y a des conflits avec Dropbox, c'est pour \u00e7a :). Si ton app est dans le dossier de Dropbox, tu peux aussi essayer de la mettre en dehors.\n> > > \n> > > On Jan 22, 2012, at 01:21 , madeinpanto wrote:\n> > > \n> > > > Oui j'utilise Dropbox, comment tu le sais ?? ;-)\n> > > > Je vais essayer ca.\n> > > > Merci\n> > > > Philippe\n> > > > \n> > > > On Sat, Jan 21, 2012 at 4:20 PM, Thibaud Guillaume-Gentil\n> > > > reply@reply.github.com\n> > > > wrote:\n> > > > \n> > > > > Non, je pense pas. T'utilises DropBox? Essaye voir de renommer/deplacer le dossier de l'application (et peut-\u00eatre un restart).\n> > > > > \n> > > > > On Jan 21, 2012, at 22:12 , madeinpanto wrote:\n> > > > > \n> > > > > > Pour le No example, effectivement ca s'et regle des que j'ai mis une\n> > > > > > spec, par contre en enlevant la ligne fsevent ou en la remplacant ca\n> > > > > > ne change rien ...\n> > > > > > Est-ce que LIvereload pourrait etre le probleme ?\n> > > > > > \n> > > > > > Merci\n> > > > > > Philippe\n> > > > > > \n> > > > > > On Sat, Jan 21, 2012 at 2:28 PM, Thibaud Guillaume-Gentil\n> > > > > > reply@reply.github.com\n> > > > > > wrote:\n> > > > > > \n> > > > > > > Le 'No examples found.' vient du faite que tu ne dois pas avoir de specs, juste?\n> > > > > > > Sinon pour la d\u00e9tection des modifications essaye d'effacer `gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i` ou de le remplacer par `\u00a0gem 'rb-fsevent', '0.9.0.pre5', :require => false if RUBY_PLATFORM =~ /darwin/i`\n> > > > > > > \n> > > > > > > ---\n> > > > > > > \n> > > > > > > Reply to this email directly or view it on GitHub:\n> > > > > > > https://github.com/guard/guard/issues/228#issuecomment-3598398\n> > > > > > \n> > > > > > ---\n> > > > > > \n> > > > > > Reply to this email directly or view it on GitHub:\n> > > > > > https://github.com/guard/guard/issues/228#issuecomment-3599000\n> > > > > \n> > > > > ---\n> > > > > \n> > > > > Reply to this email directly or view it on GitHub:\n> > > > > https://github.com/guard/guard/issues/228#issuecomment-3599050\n> > > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/guard/guard/issues/228#issuecomment-3600141\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/guard/guard/issues/228#issuecomment-3602490\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/guard/guard/issues/228#issuecomment-3615683\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/228#issuecomment-3620015\n  When starting a new project, I'll often have several guards in my Gemfile and it sucks having to run `guard init` for each one.\n\nIt would be useful if I could instead initialize them all at once.\n\nI suggest that if `guard init` is not passed any parameters then:\n- If no guard gems are present in Gemfile, generate an empty Guardfile\n- If guard gems are present, initialize each one\n Heya I spent a few hours on this but my coding is not up to scratch. Essentially, `Guard.initialize_template` will need to use `Guard::DslDescriber.evaluate_guardfile` in order to get a list of already initialised gems and `Guard.guard_gem_names` to get a list of already installed gems but I'm not sure how to go about manipulating the output of these methods in the specs so can't produce anything that will pass. Sorry my testing skills are really poor!\n  My Guardfile: http://pastie.org/3160573\n\nMy spec_helper: http://pastie.org/3160578\n\n<!-- language: lang-rb -->\n\nWhen I initialize guard:\n\n```\nRunning tests with args [\"--color\", \"--format\", \"progress\", \"--format\", \"Guard::RSpec::Formatter::NotificationRSpec\", \"--out\", \"/dev/null\", \"--require\", \"/home/rege/.rvm/gems/ruby-1.9.2-p290/gems/guard-rspec-0.5.10/lib/guard/rspec/formatters/notification_rspec.rb\", \"spec\"]...\n```\n\nHow to diagnose where is the problem? \n\nhttp://stackoverflow.com/questions/8805278/why-libnotify-stoped-showing-rspec-notifications\n  That would save us hours in 2012! Perhaps we can also use `Bundler.setup` if not running with Bundler. \n Good idea but not sure `rubygems-bundler` is a problem, in the end the `ENV['BUNDLE_BIN_PATH']` or `ENV['BUNDLE_GEMFILE']` are set if Guard is run by bundler so we can safely rely on the presence of these variables, or not?\n Just did a quick test with `ENV['BUNDLE_GEMFILE']` and it works fine. Do we wanna show this as an error or info message, or should we add a new message type `UI#warning`? Also, do we check for bundler presence for all actions or only when actually start Guard?\n Hi, I'm using Isolate instead of Bundler and still see this warning. So, as I see it doesn't check if you use Bundler at all\n Good, will be waiting for a release.\n Yep, it works, thanks!\n  Right now Guard is currently at version `0.10.0`. I assume based on the notation that Guard is using [Semantic Versioning](http://semver.org/) which is great! With that said I'd like to point out a few things from Semantic Versioning:\n\n> 5. Major version zero (0.y.z) is for initial development. Anything may change at any time. The public API should not be considered stable.\n> \n> 6. Version 1.0.0 defines the public API. The way in which the version number is incremented after this release is dependent on this public API and how it changes.\n\nAnd finally:\n\n> ## How do I know when to release 1.0.0?\n> \n> If your software is being used in production, it should probably already be 1.0.0. If you have a stable API on which users have come to depend, you should be 1.0.0. If you're worrying a lot about backwards compatibility, you should probably already be 1.0.0.\n\nCurrently there are **89** guard gems, based on the `guard-` prefix naming convention, on Rubygems. If any public API changed in guard at this point all of them would likely break. Considering the amount of libraries depending on Guard's current public API, the number of forks, watchers, and downloads per day along with the statistic that [18% of surveyed Gemfile's have guard-rspec](https://twitter.com/#!/GemStats/status/120909697460088833) I believe I have a strong case for bumping up Guard's version number to 1.0.0.\n\nThoughts?\n The [Guard public API](http://rubydoc.info/github/guard/guard/master/Guard/Guard) has been quite stable in the last year. The addition of `#run_on_deletion` was backward compatible and the change of the boolean return value to throwing `:task_has_failed` made the API usage even more stable, since most Guard implementation haven't handled the return value properly.\n\nI think the current public Guard API is feature complete for **version 1.0.0**.\n I agree!\n Perfect! \n Sure thing!\n\nSent from my iPhone\n\nOn 15 janv. 2012, at 20:33, Thibaud Guillaume-Gentil reply@reply.github.com wrote:\n\n> Guard will be updated to 1.0.0 once [these issues](https://github.com/guard/guard/issues?milestone=3&sort=created&direction=desc&state=open) will be closed if it's ok for @netzpirat and @rymai. But I think we will propably release a last 0.10.1 version before. Stay tuned!\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/222#issuecomment-3501169\n  My app started its life on a very old Rails version (something like Rails 2.1 or maybe earlier, I can't remember).  Consequently even though it's now upgraded to 3.1, the first line of my unit/functional test files was as follows:\n\n```\nrequire File.dirname(__FILE__) + '/../test_helper'\n```\n\nUnfortunately that does not work with guard, since only `Rails.root + 'test'` is in `$:`.  I wonder if this should be documented or worked around in some way - I wasted a lot of time trying to figure out what was wrong.\n [Done](https://github.com/guard/guard-test/issues/22).  BTW how did you get that link to the guard-test project in your previous comment?  I've been searching the GitHub Markdown syntax for that but couldn't find it.\n Yeah, I just realised that about two seconds are commenting :-(  At first I thought the border around it looked different to a normal hyperlink and that there was some special way of hyperlinking to other github repos (I wish there was for github users, too)\n   Thanks a lot. I only moved the dependency status badge down to the development section, since it's not something that is under direct control from the Guard devs and I don't want a red badge that jumps into the eye of a new user when he's visiting the Guard README.\n  When a guard gem has a version.rb, bundler loads it during it's startup process.  This causes Guard::GuardName to be defined, which prevents guard from loading the main gem file, `guard/guardname`\n\nAttempting to work around with `require 'guard/guardname'` in the Guardfile causes `superclass mismatch for class GuardName`\n ```\nrocky:guard-ruby jlove$ gem list guard\n\n*** LOCAL GEMS ***\n\nguard (0.10.0)\n\nrocky:guard-ruby jlove$ head -n 3 guard-ruby.gemspec\n\n# -*- encoding: utf-8 -*-\n$:.push File.expand_path(\"../lib\", __FILE__)\nrequire \"guard/ruby/version\"\n\nrocky:guard-ruby jlove$ cat lib/guard/ruby/version.rb \nputs \"loading guard/ruby/version\"\n\nmodule Guard\n  class Ruby\n    VERSION = \"0.0.1\"\n  end\nend\n\nrocky:guard-ruby jlove$ head -n 7 lib/guard/ruby.rb\nputs \"loading guard/ruby\"\n\nrequire 'guard'\nrequire 'guard/guard'\n\nmodule Guard\n  class Ruby < Guard\n\nrocky:guard-ruby jlove$ cd ../prototypal/\n\nrocky:prototypal jlove$ cat Gemfile\nsource \"http://rubygems.org\"\n\ngem 'guard-ruby', :path => '../guard-ruby'\n\nrocky:prototypal jlove$ bundle exec guard init ruby\nloading guard/ruby/version\nloading guard/ruby/version\n/Users/jlove/.rvm/gems/ruby-1.9.2-p290@prototypal/gems/guard-0.10.0/lib/guard.rb:45:in `initialize_template': undefined method `init' for Guard::Ruby:Class (NoMethodError)\n    from /Users/jlove/.rvm/gems/ruby-1.9.2-p290@prototypal/gems/guard-0.10.0/lib/guard/cli.rb:111:in `init'\n.....\n\nrocky:prototypal jlove$ bundle exec guard\nloading guard/ruby/version\nloading guard/ruby/version\nGuard is now watching at '/Users/jlove/files/programming/ruby/prototypal'\n/Users/jlove/.rvm/gems/ruby-1.9.2-p290@prototypal/gems/guard-0.10.0/lib/guard.rb:121:in `block (2 levels) in guards': undefined method `group' for #<Guard::Ruby:0x00000100bb6768> (NoMethodError)\n    from /Users/jlove/.rvm/gems/ruby-1.9.2-p290@prototypal/gems/guard-0.10.0/lib/guard.rb:121:in `each'\n.....\n```\n Only occurs on 'path' gems.  I presume that bundler only loads the gemspec for path dependencies (I didn't try git)\n\nIt's not strictly a Guard bug or a Bundler bug, but an unfortunate interaction between them.  The practical effect is still that if you ever want to 'path' a guard gem, it can't have a separate version file.\n I suspect most libraries use tests rather than cross-project inclusion, but my guard is so simple I'd mostly be testing Guard.  Perhaps I should use plain old load path modification rather than Bundler.\n I just spent nearly an hour trying to debug this. Thanks for the tip @JustinLove :)\n  I have guard set up to watch a directory for any file changes. When it detects changes, I'd like it to copy the files to a location on a server. Or remove the files if they get deleted. The copying works perfectly every time. Deletion, however, only works the first time around. After one deletion, it no longer seems to detect any more deletions. Even though changes through saving or re-creating the file works fine.\n\nI am using guard-shell to copy, move, and remove files as well as create custom notifications. It's probably something simple I'm overlooking as I'm not too experienced in any of this. Any help would be appreciated.\n\nHere is my terminal output:\n\n```\nwa-003381-ap:src ilan.epstein$ bundle exec guard -A\nGuard uses Growl to send notifications.\nGuard is now watching at '/Users/ilan.epstein/Desktop/NGL/phaseIII/src'\npath = output/output_newFile\nFile updated: /Volumes/wa-projects/NGL_USA/NGL004_PhaseIII/02_Design/03_Design_Tech/output/output_newFile\npath = output/output_newFile\nFile deleted: output/output_newFile\npath = output/output_newFile\nFile updated: /Volumes/wa-projects/NGL_USA/NGL004_PhaseIII/02_Design/03_Design_Tech/output/output_newFile\npath = output/output_newFile\nFile updated: /Volumes/wa-projects/NGL_USA/NGL004_PhaseIII/02_Design/03_Design_Tech/output/output_newFile\npath = output/output_newFile\nFile updated: /Volumes/wa-projects/NGL_USA/NGL004_PhaseIII/02_Design/03_Design_Tech/output/output_newFile\n```\n\nAnd here is my Guardfile:\n\n``` ruby\n# More info at https://github.com/guard/guard#readme\n# code to run: \"bundle exec guard -A\"\nrequire 'pathname'\nrequire 'growl'\n\nnotification :growl\n\nserver_path = '/Volumes/wa-projects/NGL_USA/'\nproject_path = 'NGL004_PhaseIII/02_Design/03_Design_Tech/'\n\nguard :shell do\n  watch(/output\\/*.*/) do |m|\n    puts \"path = #{m[0]}\"\n    serverPath = Pathname.new(server_path)\n    localPath = Pathname.new(m[0])\n\n      #check to see if connected to server\n    if serverPath.exist?\n        serverPath = serverPath + project_path + \"#{m[0]}\"\n        #check to see if file exists or if it's been deleted\n        if localPath.exist?\n          puts \"File updated: #{serverPath}\"\n          #check to make sure the directory exists on the server\n        unless serverPath.parent.exist?\n          #if not, make the dir\n          `mkdir -p #{serverPath.parent}`\n        end\n        `cp #{m} #{serverPath}`\n        `growlnotify -i pkg -m \"File updated: #{m}\"`\n      elsif serverPath.exist?\n        #file has been deleted, remove from server if exists there\n        #if serverPath.exist?\n        puts \"File deleted: #{m}\"\n        `growlnotify -i pkg -m \"File deleted: #{m}\"`\n        `rm #{serverPath}`\n      end\n      else\n      #puts \"path exist? #{path.exist?}\"\n      puts \"Not connected to server.\"\n      `growlnotify -s -i pkg -m \"!IMPORTANT! You are NOT connected to wa-projects. Please reconnect and resave your file.\"`\n    end\n  end\nend\n```\n Thanks very much. I appreciate any help as my experience in this is very minimal (I'm primarily an actionscript developer). That said, if there's any other information I can provide that would be helpful for you, please let me know.\n\nThanks for the formatting help :)\n\nAlso, just to add a little more explanation, after the first deletion, no other deletions on any files are detected. If, however, I press \"e\" to exit the guard watch, and re-initiate a new watch, it will again detect the first file deletion. After that, back to no more deletion detections. File changes through saving or creating new files always works as expected.\n\nThanks for any help,\n-iLan\n Yep @thibaudgg, I had the same thought when I saw that...\n\nYou're welcome @thepuzzlemaster (for the formatting ;))!\n Hi @thepuzzlemaster,\n\nI've pushed a fix for this yesterday, can you give it a try by using Guard from git: `gem 'guard', :git => 'git://github.com/guard/guard.git'` and let us know if the issue is solved?\n\nThanks in advance!\n This may very well be an error on my part, but I am getting an error when attempting to start guard. Here is my terminal output:\n\n```\nwa-003381-ap:src ilan.epstein$ bundle exec guard start -A\nGuard uses Growl to send notifications.\nGuard is now watching at '/Users/ilan.epstein/Desktop/NGL/phaseIII/src'\n/Users/ilan.epstein/.bundler/ruby/1.8/guard-43fb77c9cb71/lib/guard/interactor.rb:85: command not found: /Users/ilan.epstein/.bundler/ruby/1.8/guard-43fb77c9cb71/bin/fsevent_watch_guard  /Users/ilan.epstein/Desktop/NGL/phaseIII/src\n```\n\nAnd here is my gemfile, which is where I put in your code:\n\n```\nsource \"http://rubygems.org\"\n\ngem \"compass\"\ngem \"growl\"\ngem \"growl_notify\"\ngem 'guard', :git => 'git://github.com/guard/guard.git'\ngem \"guard-shell\"\n```\n\nAfter changing my gemfile, I ran \"bundle install\" which seemed to install the gems correctly. \n\nLet me know if I was supposed to do this differently. My coworker, who has a good deal of experience using ruby, will be in later today and I'll ask him if he sees anything I did incorrectly if I don't hear back from you first. \n\nThanks,\niLan\n Hum...\n\nThe error is not related to my commits, but it's probably coming from one of these commits: https://github.com/guard/guard/compare/v0.10.0...master\n Update coming soon. I think I've got things figured out.\n Ok! Everything appears to be working smoothly now!\n\nThe initial error I was getting, was because I did not have rb-fsevent in my gemfile. My helpful coworker suggested, that since I was telling my bundle file to pull from git instead of the compiled rubygem, it didn't know rb-fsevent was a required dependency. So without that gem installed, I got the unknown command error.\n\nOnce I got that added to my gemfile, I got past that error.\n\nIt then appeared that using your fix, appends the path to the changed file with an \"!\" if the file had been deleted. Took a little refactoring of my guardfile, but I'm quite happy to report that it now works great! Notices every file deletion/creation/change I throw at it!\n\nI am assuming this will be a permanent change, yes? (the addition of the \"!\")\n\nThanks very much!\n Yes, since you're doing all your work in the `watch` block, the deleted files appear with a prepended \"!\" (it was already the case in fact, but there was a bug preventing the paths from being passed at all!).\n\nAs a side note, you should create at least an inline guard and use the `run_on_change` and `run_on_deletion` methods instead, in that case the \"!\" aren't passed to the `run_on_deletion` method.\n\nSee the [\"Create a Guard\"](http://rubydoc.info/github/guard/guard/master/frames) section for more infos!\n  Hum, maybe we could re-evaluate the Guardfile after the listener is resumed from pause only if the currently evaluated Guardfile has changed (maybe a hash of its content could be used in that case).\n\nI'm thinking for example of the case when you switch from on branch to another, if you remove the pause in the new branch, the Guardfile should be re-evaluated, but if you return to the original branch without removing the pause, the Guardfile should not be re-evaluated.\n\nIf that's too complicated, I agree to not skip the Guardfile re-evaluation (as it is now).\n I was thinking of the case where you switch to a branch, don't unpause, do stuff, get back to the first branch and then unpause, there would be no reevaluation in such case...\n\nBut as I said, it's probably too complicated for what it's worth so the current behavior is ok for me!\n\nSent from my iPhone\n\nOn 5 janv. 2012, at 08:14, Thibaud Guillaume-Gentil reply@reply.github.com wrote:\n\n> Yes my case was precisely when switching from a branch to another, but in that case if the Guardfile will reevaluated anyway, why not do it directly (without waiting for the listener un-pause)?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/217#issuecomment-3366457\n  While using Guard I always noticed that it exits with status code \"1\" even when using the interactor to stop it  (My terminal shows failure status codes).\nIt would be nice to let Guard exit with the right status codes because it is a tool used by a lot of developers.\n\nI've changed the way Guard exits in this commit. Guard doesn't exit the program no more when calling `Guard.stop`. This has the advantage of being able to use `Guard.stop` programmatically knowing it won't kill the process.\n\nI felt that the interactor should be the one to exit Guard's process, so now it will call `Kernel::exit` after it stops all running guards.\n\nWhen there is an interrupt, Guard will still stop all guards, but now it will use `Kernel::abort` to return a failure status-code.\n\nThe commits will apply nicely and the specs pass: http://travis-ci.org/#!/Maher4Ever/guard\n Cool thanks! :gift:\n Yes it is. Just merge the last commit though... the rest is already in Guard's `master` branch.\n  Hey guys, I seem to be having a very strange issue and its quite possible that its down to my configuration however this is a reasonably new install and can't think of much that would conflict. I am using rspec 2.7.0, guard 0.9.3, guard-rspec 0.5.10 and growl 1.0.3. Now when I start guard it definitely detects growl installed as it prints Guard uses growl to send notifications to the terminal however after some digging and debugging I have found that when notify is called from the spec formatter included in guard-rspec, then the array of notifications in Guard::Notifier is empty, This array gets populated at the same time that the Guard uses growl for notifications message is printed which means this should not be empty and it appears something is emptying it in between start up and notifying. A way around this that I have found is to add auto_detect_notification to the beginning of the notify method in Guard::Notifier to force this array to be repopulated before it tries to send through the notification.\n\nCheers\nNick\n Thankyou that has fixed it. My apologies for not trying the latest versions already. I had deleted my gemset and run a fresh bundle install not remembering that my lock file would keep the versions. Thanks again and keep up the good work.\n  When executing `bundle exec guard list` I get this output:\n\n```\nERROR: No guards found in Guardfile, please add at least one.\nAvailable guards:\n   rspec*\n   spork*\nSee also https://github.com/guard/guard/wiki/List-of-available-Guards\n* denotes ones already in your Guardfile\n```\n\nIt seems to detect correctly my guards in my Guardfile, but it's giving that error.\n  Renaming a directory correctly sends the `run_on_deletion` hooks for the old path, but never sends `run_on_change` for the new paths.\n\nUsing guard 0.9.4 with `:watch_all_modifications => true`\n `run_on_deletion` is getting paths for each of the files in the renamed directory. This is correct behavior in my opinion.\n\nWhy would it be expected not to receive  `run_on_change` for renamed directories, but it is fired on new files and renamed files? I think `run_on_change` should work like `run_on_deletion` and trigger with paths for each of the new files in the directory.\n\ndir1/file1.txt -> dir2/file1.txt should trigger:\n\n`run_on_deletion` with \"dir1/file1.txt\"\n\nand \n\n`run_on_change` with \"dir2/file1.txt\"\n BTW, rb-fsevent does return these events correctly and in the right order. I'll work up a test spec.\n Note that I didn't know what I was doing quite so much when I wrote that code and to call it inefficient is an understatement. Also, modification to directories isn't caught by all back ends so the option to enable them is deceiving.\n\nPerhaps this is a good excuse for finishing some refactoring. I'll add guard committers to FSSM. :)\n\nSent from my iPhone\n\nOn Jan 7, 2012, at 9:00 AM, Thibaud Guillaume-Gentilreply@reply.github.com wrote:\n\n> After some time passed to study this issue, I think I understand well the problem and `:watch_all_modifications => true` feature must be certainly completely rewrited using a Tree structure like [fssm](https://github.com/ttilley/fssm/blob/master/lib/fssm/tree.rb) to keep trace of all created/moved/deleted paths.\n> @ttilley maybe it's time to think about extracting/merging the listening stuff (windows support, checksums_hash,...) of Guard inside fssm or the other way around :). There's certainly a lot of overlapping here.\n> \n> I think this issue is also related with #174 and #218. So for now `watch_all_modifications` option is not to be considerated as rock solid (sadly).\n> \n> PS: After this rewrite maybe we'll be able to remove this option and watch all modifications all the time, that would be great!\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/212#issuecomment-3395845\n @thibaudgg - I forgot you were already given repo access to FSSM. Added @netzpirat and @rymai to the list of people with commit rights. My preference is to integrate functionality from guard into FSSM, as this then improves multiple apps and libraries, not just guard (compass, sass, middleman, etc). \n\nWhat I meant earlier by inefficient is that, to get a list of changes, it ends up rebuilding a fairly large subsection of the tree on an event. A subsection that's far larger than it strictly has to be. I've had a TODO item to improve that for some time now, but until you reach a certain size of watched content it really doesn't matter much unless you use polling. Performing checksums would put the \"too many files\" point at a significantly lower number though...\n\nMy personal priority list is:\n1.  rewrite ttilley/TSITString so that it performs exactly zero Range(0,0) insertions, as the CFData/NSData APIs hide the fact that this just results in a very expensive memcpy() rather than a new allocation and subsequent management of non-contiguous memory (transparent handling of non-contiguous memory only exists in lion, as part of dispatch IO). The canonical implementation of tagged netstrings handles this by writing to memory backwards, then flipping, which results in less copying around memory... but it's kinda icky. I'm going to use a singly linked list with a doubly linked header, which seems wasteful for some of the sections that get prepended/appended, but anything will be better than the amount of copying i'm doing... (ew ew ew https://github.com/ttilley/TSITString/blob/master/TSITString/TSICTString.c#L91 )\n2.  clean up fsevent_watch into something that looks more like a reusable library wrapped in a CLI interface rather than the monolithic mass of code it is currently\n3.  add the ability to send configuration directives to fsevent_watch via a tnetstring or yaml or json or w/e on STDIN. handling CLI options in anything approaching sanity makes it _really_ difficult to handle different options for different paths. I really don't feel like writing my own option parser, and nothing out there supports this kind of parsing (or options being parsed as unsigned long long) without major refactoring.\n4.  update ruby half of rb-fsevent to represent the functionality exposed by fsevent_watch\n5.  finish cleanup and refactoring of FSSM, including the removal of previously necessary hacks surrounding rb-fsevent now that it supports what FSSM needs directly (multi-path support on the ruby side of things, not just in fsevent_watch)\n\nWith my glacial pace and tendency to get distracted by shiny objects, a timeline for the above would be nothing but a blatant lie. Let me know if I should flip that list and get FSSM on top. ;)\n\nI recently did some backend cleanup that'd help you in making use of FSSM as it currently exists if that's your desire: changing the default backend is now easy, and you can add your own backends before a default is chosen. Performance might not be where you want for mid to large trees until the update structure is rethought though. I'm sure there are all kinds of ideas and improvements in guard that'd be great to pull in above and beyond backend support. =]\n Thanks for the compliment. At one point I was frustrated by the lack of centralized infrastructure for this sort of thing, and by the size of the implementations on offer. I never got around to finishing it, but am thankful that my initial implementation is useful for someone :heart:\n @thibaudgg - fire up a new repo under guard org and start a new issue there. FSSM has only received attention in the past year or two when someone files an issue or makes a suggestion on github. Starting from scratch and just taking over the good parts might be a good idea. My concern being, of course, the gems that either bundle or depend upon FSSM: [google search](https://www.google.com/#sclient=psy-ab&hl=en&site=&source=hp&q=site:rubygems.org+dependencies+fssm&pbx=1&oq=site:rubygems.org+dependencies+fssm&aq=f&aqi=&aql=&gs_sm=e&gs_upl=1278l1278l0l1440l1l1l0l0l0l0l159l159l0.1l1l0&bav=on.2,or.r_gc.r_pw.r_cp.,cf.osb&fp=6d580c5f55d4323&biw=1047&bih=1106) (not many, but still)\n I didn't know `viglio` until now, but I looks like a simple and straight forward solution. I will start writing some specs and see how much it conforms to what we need for Guard.\n\nI like the public API of `viglio`, but we can also add a compatibility layer to FSSM, so that it can be used as a drop in replacement.\n @thibaudgg sure!\n Fixed in Guard 1.1\n <3\n  Sorry, I have a flu _and_ a project to be done today, so I'm constantly changing from bed to my dev machine and back :cold_sweat:\n\nYour changes looks completely fine, I'm wondering why we didn't do it that way already. Haven't found the time to give the missing spec a try.\n Hey,\n\nsorry I tried yesterday to give a look at the missing spec but didn't find a solution yet...\n\nThe pull-request looks good apart from that missing spec, great work!\n  Running Mac OS X 10.6.8 on a MacBook1,1\n\n```\n > uname -a\nDarwin mobile 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386\n```\n### Current Guard\n\n```\n > gem install guard\nFetching: guard-0.9.4.gem (100%)\nSuccessfully installed guard-0.9.4\n1 gem installed\n```\n\n```\n > guard\n[...]\n~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:89:in `popen': Bad CPU type in executable - ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/bin/fsevent_watch_guard (Errno::E086)\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:89:in `pipe'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:46:in `stop'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:42:in `ensure in run'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:42:in `run'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/lib/guard/listeners/darwin.rb:18:in `start'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/lib/guard.rb:202:in `start'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/lib/guard/cli.rb:74:in `start'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n  from ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/bin/guard:6:in `<top (required)>'\n  from ~/.rbenv/versions/1.9.2-p290/bin/guard:19:in `load'\n  from ~/.rbenv/versions/1.9.2-p290/bin/guard:19:in `<main>'\n```\n\n```\n > file ~/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/bin/fsevent_watch_guard\n/Users/johannesh/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/gems/guard-0.9.4/bin/fsevent_watch_guard: Mach-O 64-bit executable x86_64\n```\n### Patched\n\n```\n > rake install\nguard 0.9.4 built to pkg/guard-0.9.4.gem\nguard (0.9.4) installed\n```\n\n```\n > guard\n[...]\n0 scenarios\n0 steps\n0m0.000s\n```\n\nRuns just fine now, all specs pass :)\n Sure, thanks! :)\n I'm experiencing the same problem with Guard 0.10.0. Has this change been copied (from rb-fsevent) into this release? I'm struggling to tell/work out whether it has. \n\nMy error is:\n```/Users/andy/.rvm/gems/ruby-1.9.2-p290@mfl/gems/guard-0.10.0/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:89:in`popen': Bad CPU type in executable - /Users/andy/.rvm/gems/ruby-1.9.2-p290@mfl/gems/guard-0.10.0/bin/fsevent_watch_guard \n(Errno::E086)\n\n```\n```\n ...does guard not use the system installed rb-fsevent any more? If it does, then install rb-fsevent --pre to get the pre-compiled 32bit+64bit version that's been somewhat rewritten. If it doesn't then install it anyway and copy the resulting binary over to that location (the binary defaults to being compatible in every way).\n With guard at master `bundle exec guard --no-vendor` works, although it doesn't appear then to be using rb-fsevent as it states:\n`\nUsing polling (Please help us to support your system better than that).\n`\nIs that just a warning, or have I bypassed rb-fsevent with --no-vendor?\n\nAlso, when you next push the guard gem that will overwrite the system rb-fsevent to support 32bit, or do I still need to get the --pre version of rb-fsevent? Forgive me for my lack of knowledge on how this all works together...\n It is clearer, thanks.\n\nI have Guard at master from git and am running `bundle exec guard` and that is working fine, so all is well.\n\nMerci bien pour votre aide.\n Salut!\n\nI am experiencing something similar to @mrship even after using `guard` from the GitHub master with `rb-fsevent (0.9.0)`. My application is running on a PowerBook G4 and Mac OS 10.5.8.\n\nRunning either `bundle exec guard` or `bundle exec guard --no-vendor`, I get:\n\n```\n~/.rvm/gems/ruby-1.9.3-p0@app-rails.3.1.x/gems/rb-fsevent-0.9.0/lib/rb-fsevent/fsevent.rb:89:in `popen': Bad CPU type in executable - ~/.rvm/gems/ruby-1.9.3-p0@app-rails.3.1.x/gems/rb-fsevent-0.9.0/bin/fsevent_watch (Errno::E086)\n```\n\nHelp? Thanks in advance!\n ...You people still exist? ;)\n\nThis is a new and different issue. Xcode4 doesn't even provide a facility for building PPC code... 10.6 is the oldest framework available. If a pre-compiled binary is provided so that a full xcode installation isn't required (like for people using osx-gcc-installer), then that's the best I can do for that. However, it wouldn't be completely crazy to detect that one is on 10.5 and recompile in that case, using a local install of xcode3.\n\nThe code has ifdefs around everything 10.6+ with an alternative provided for 10.5. I can't promise that this will always be the case, but it is right now. You may need to disable code signing to get the build to succeed. I don't have a PPC machine anywhere to properly test.\n\nIf you would like to pursue that route, please file a new issue on rb-fsevent. Just know that you will be needed to sacrifice X number of hours on testing since I don't otherwise have access to a PPC machine.\n ... we exist but I can't say we are thriving :)\n\nLooks like I'm stuck between a rock and a hard place. I'll follow it up on rb-fsevent and reference this issue-thread there.\n\nThanks!\n Hi, \n\nI've just installed guard and the problem persists on my machine:\n\n``` bash\n>>uname -a\nDarwin madbook.local 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386\n```\n\nGuard version 1.0.1\n\nAm I missing something?\n Possibly? Can you expand a bit on what's going on? The binary includes support for both i386 and x86_64:\n\n```\nAyanami:~ ttilley$ file ~/.rvm/gems/ruby-1.9.3-p125/gems/guard-1.0.1/lib/vendor/darwin/bin/fsevent_watch \n/Users/ttilley/.rvm/gems/ruby-1.9.3-p125/gems/guard-1.0.1/lib/vendor/darwin/bin/fsevent_watch: Mach-O universal binary with 2 architectures\n/Users/ttilley/.rvm/gems/ruby-1.9.3-p125/gems/guard-1.0.1/lib/vendor/darwin/bin/fsevent_watch (for architecture x86_64):    Mach-O 64-bit executable x86_64\n/Users/ttilley/.rvm/gems/ruby-1.9.3-p125/gems/guard-1.0.1/lib/vendor/darwin/bin/fsevent_watch (for architecture i386):  Mach-O executable i386\n```\n Sorry for the previous short feedback : (\n\nThis is the output when I execute guard,\n\n``` bash\n>>guard\nWARNING: You are using Guard outside of Bundler, this is dangerous and may not work. Using `bundle exec guard` is safer.\nGuard could not detect any of the supported notification libraries.\nGuard is now watching at '/Users/madtrick/Dropbox/wsecli'\n/Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:89:in `popen': Bad CPU type in executable - /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/bin/fsevent_watch_guard (Errno::E086)\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:89:in `pipe'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:46:in `stop'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:42:in `ensure in run'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/vendor/darwin/lib/rb-fsevent/fsevent.rb:42:in `run'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/guard/listeners/darwin.rb:18:in `start'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/guard.rb:221:in `start'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/guard/cli.rb:75:in `start'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/bin/guard:6:in `<top (required)>'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/bin/guard:19:in `load'\n    from /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/bin/guard:19:in `<main>'\n```\n\nI have the same output for _fsevent_watch_\n\n``` bash\nfile /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/vendor/darwin/bin/fsevent_watch \n/Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/vendor/darwin/bin/fsevent_watch: Mach-O universal binary with 2 architectures\n/Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/vendor/darwin/bin/fsevent_watch (for architecture x86_64):   Mach-O 64-bit executable x86_64\n/Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/lib/vendor/darwin/bin/fsevent_watch (for architecture i386): Mach-O executable i386\n```\n\nBut for _fsevent_watch_guard_ which seems to be cause of the error, I got this\n\n``` bash\n>>file /Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/bin/fsevent_watch_guard\n/Users/madtrick/.rvm/gems/ruby-1.9.2-p180/gems/guard-1.0.1/bin/fsevent_watch_guard: Mach-O 64-bit executable x86_64\n```\n ah... there you go then. that's a bit of a WTF moment there.\n\n@thibaudgg @netzpirat ping: non-universal version of fsevent_watch in guard gem. any idea how that happened?\n Two problems\n1. I don't have fsevent_watch_guard, I have fsevent_watch_guard_guard !\n2. fsevent_watch_guard_guard is only 64bit as for @madtrick - this is with master for guard\n\n[Edit] Works with guard -> master, no-vendor, rb-fsevent in Gemfile\n  OS X 10.7.2\nGem list: https://gist.github.com/1519559\nGemfile: https://gist.github.com/1519560\nGuardfile: https://gist.github.com/1519561\nGuard output: https://gist.github.com/1519563\n\nTried without rb-fsevent too, no effect.\n XCode 4.2\n\nI've moved repository to another directory and... it works well now, thanks.\nhttps://gist.github.com/1521155\n\nWhy?\n  That I'd call a _real_ singleton. It disallows two different Guard instances with different notification settings. I for myself only work on one project at a time, be I remember we had issues where people exactly want to do that.\n I think I was wrong with my previous statement, you're solution is fine. If you start another Guard from another shell, it has another environment and they won't affect each other. If you start another subprocess (with `Kernel#fork` or `Kernel#system`) they share the same environment and thus can share the configuration. \n  I'm not using rb-readline because it doesn't support vi key bindings and screws up my irb / rails console workflow.    Before typing \"e\" I touch a file in another terminal and wait for guard to run the spec, nothing happens.\n\n```\n$ guard\nPlease add rb-readline for proper Readline support.\nGuard uses GNTP to send notifications.\nGuard is now watching at '/Users/jnimety/workspace/control'\nGuard::RSpec is running, with RSpec 2!\nGuard::Compass is watching at your stylesheets.\nGuard::JsLintOnRails started using config: /Users/jnimety/workspace/control/config/jslint.yml\nGuard::JasmineHeadlessWebkit is running.\nGuard::JasmineHeadlessWebkit running all specs...\n\nRunning Jasmine specs...\n\nPASS: 0 tests, 0 failures, 0.004 secs.\n\nTest ordering seed: --seed 7968\n#\n# \"touch app/models/user.rb\" in another terminal here\n#\n> e\nBye bye...\nRunning: spec/models/user_spec.rb\n\nUser\n...\n```\n had the same problem today... Spent 8 hours testing guard rspec on a rails project\nyou must uninstall guard > 0.8.8 if you want to use it. If guard >= 0.9.0 is installed, it will still show command prompt, even if you specify guard 0.8.8 in your gemfile\n Sure, a readline option would be nice. But why not simply put `rb-readline` in separate Bundler group?\n\n```\ngroup :guard do\n  gem 'rb-readline'\nend\n```\n\nThis won't get loaded in the Rails environment, but will when running `bundle exec`.\n still breaks rails console if I put it in it's own group.  Using rails 3.0.11\n You can create bin stubs without the guard group:\n\n```\nbundle install --without guard --binstubs\n```\n\nso when you execute `bin/irb`, then `rb-readline` is not part of the load path.\n Is rb-readline optional or not?\n It depends on the platform. With JRuby the built-in readline support works fine, but with MRI on OS X, readline is linked against libedit and I haven't had much success with it, so then rb-readline is not optional currently.\n\nWhen you seldom use the interactor you can turn it off with `--no-interactions`, and readline is not required at all.\n the --no-interactions flag sounds promising, thanks.\n I'm also have this issue. Using `--no-interactions` works in the short term, but is not a solution.\n The reason for this problem is a [bug in Ruby](http://bugs.ruby-lang.org/issues/5539) on OS X. You have the following possibilities to work around this bug:\n- Install `rb-readline`\n- Use JRuby\n- Disable the interactor with `--no-interactions`\n With Guard 0.9.2 Readline support is off on environments it's known to not work properly and you can now force a specific implementation with the new `interactor` DSL method. Check out the README.\n  Hi,\n\nThe last version of Guard is working fine for me, but I get some warnings.\n\n```\nguard\nPlease add rb-readline for proper Readline support.\nGuard uses GNTP to send notifications.\nGuard is now watching at '/Users/Nerian/Projects/shopfrog/respondify'\nCompiling rails assets with Guard::RailsAssets::RailsRunner.\nBooting Rails for test environment.\n/Users/Nerian/.rvm/gems/ruby-1.9.3-p0@global/gems/rb-fsevent-0.4.3.1/lib/rb-fsevent/version.rb:2: warning: already initialized constant VERSION\n/Users/Nerian/.rvm/gems/ruby-1.9.3-p0@respondify/gems/rb-readline-0.4.2/lib/readline.rb:447: warning: already initialized constant HISTORY\n/Users/Nerian/.rvm/gems/ruby-1.9.3-p0@respondify/gems/rb-readline-0.4.2/lib/readline.rb:476: warning: already initialized constant FILENAME_COMPLETION_PROC\n/Users/Nerian/.rvm/gems/ruby-1.9.3-p0@respondify/gems/rb-readline-0.4.2/lib/readline.rb:508: warning: already initialized constant USERNAME_COMPLETION_PROC\n/Users/Nerian/.rvm/gems/ruby-1.9.3-p0@respondify/gems/rb-readline-0.4.2/lib/readline.rb:514: warning: already initialized constant VERSION\n```\n\nGemfile\n\n```\ngroup :test do\n  gem 'rspec'\n  gem \"rspec-rails\"\n  gem 'guard-rspec'\n  gem 'rb-fsevent'\n  # gem 'growl'\n  gem 'rb-readline'\n  gem 'ruby_gntp'\n  gem 'guard-spork'\n  gem 'spork', '~> 0.9.0.rc'\nend\n```\n\nNotice that I get `Please add rb-readline for proper Readline support.` despite the fact that I do have it installed.\n No, I wasn't.\n\nLaunching guard with `bundle exec guard` solved both problems. :clap:\n  Hi, \n\nI've just installed the latest version (0.9.0) of the guard gem and it doesn't work on my system.\n\nThis is the output I get when I run it:\n\n``` bash\n\nPlease add rb-readline for proper Readline support.\nGuard could not detect any of the supported notification libraries.\nGuard is now watching at ''\n/home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/watcher.rb:80:in `initialize': Permission denied - Failed to watch \"/lost+found\": read access to the given file is not permitted. (Errno::EACCES)\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:190:in `new'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:190:in `watch'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:199:in `watch'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:195:in `block in watch'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `each'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `watch'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/guard/listeners/linux.rb:58:in `watch'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/guard/listener.rb:95:in `start'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/guard/listeners/linux.rb:20:in `start'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/guard.rb:181:in `start'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/lib/guard/cli.rb:74:in `start'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.9.0/bin/guard:6:in `<top (required)>'\n    from /home/madtrick/.rvm/gems/ruby-1.9.2-p290/bin/guard:19:in `load'\n```\n\nThis are the related gems I have installed:\n- guard (0.9.0)\n- guard-shell (0.2.0)\n- rb-inotify (0.8.8)\n- rb-readline (0.4.2)\n\nMy Guardfile (in the same directory where I run guard) is this:\n\n``` ruby\nguard 'shell' do\n  watch(%r{uploads/(.+)\\.zip}) {|m| `rake deploy[#{m[1]}]`}\nend\n```\n Are you running Guard with `bundle exec` ? I'm asking this because I see `Please add rb-readline for proper Readline support.` and you say that you've installed `rb-readline`.\n\nThe 0.9 Guard release comes with vendored gems for the the file system libraries and you can try to see what happens when you disable them with the `-I` (that's a capital i) option. Maybe @joshbuddy has some ideas.\n I'm experiencing similar problems. Guard doesn't seem to pick up any changes with or without rb-fsevent installed.\n\nSo i started off with a new rails-project for testing purposes. I added \"gem 'rb-readline'\", \"gem 'guard'\" and \"gem 'guard-bundler'\" to my fresh Gemfile (in this order). \n\nAfter running \"guard init\" and \"guard init bundler\", the output of \"bundle exec guard start\" looks like this:\n\n``` ruby\nGuard could not detect any of the supported notification libraries.\nGuard is now watching at ''\nBundle already up-to-date\n> \n```\n\nGuard doesn't detect a notification library, which is fine, because i haven't installed one. Notice that Guard says \"Guard is now watching at ''\" (two single quotes).\n\nIf I change my Gemfile, eg. adding rspec, but guard doesn't fire the bundle-command.\n\nSo i tried to run \"bundle exec guard start -w .\" in order to get around the empty working directory issue. Now Guard seems to pick up the correct directory, but the result stays the same.\n\nany thoughts?\n\n_edit_\n\nMy Gemversions:\n- rb-readline (0.4.2)\n- guard (0.9.0)\n- guard-bundler (0.1.3)\n @netzpirat I'm running it without bundler. I mean, I installed all the gems directly with the gem command. \n\nI've just installed the via Gemfile (vendoring the gems) and the problem persists. The only change is that this time rb-readline seems to be required.\n\nMy Gemfile:\n\n``` ruby\n# A sample Gemfile\nsource \"http://rubygems.org\"\n\n# gem \"rails\"\ngem \"rb-readline\"\ngem \"guard-shell\"\n```\n\nMy Gemfile.lock\n\n``` ruby\n\n[madtrick { guard-tests } ruby-1.9.2-p290 ]\n>>cat Gemfile.lock \nGEM\n  remote: http://rubygems.org/\n  specs:\n    ffi (1.0.11)\n    guard (0.9.0)\n      ffi (>= 0.5.0)\n      thor (~> 0.14.6)\n    guard-shell (0.2.0)\n      guard (>= 0.2.0)\n    rb-readline (0.4.2)\n    thor (0.14.6)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  guard-shell\n  rb-readline\n```\n\nAnd the output of _bundle exec guard_\n\n``` bash\n[madtrick { guard-tests } ruby-1.9.2-p290 ]\n>>bundle exec guard\nGuard could not detect any of the supported notification libraries.\nGuard is now watching at ''\n/home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/watcher.rb:80:in `initialize': Permission denied - Failed to watch \"/lost+found\": read access to the given file is not permitted. (Errno::EACCES)\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:190:in `new'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:190:in `watch'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:199:in `watch'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:195:in `block in watch'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `each'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/vendor/linux/lib/rb-inotify/notifier.rb:192:in `watch'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/guard/listeners/linux.rb:58:in `watch'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/guard/listener.rb:95:in `start'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/guard/listeners/linux.rb:20:in `start'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/guard.rb:181:in `start'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/lib/guard/cli.rb:74:in `start'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/gems/guard-0.9.0/bin/guard:6:in `<top (required)>'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/bin/guard:19:in `load'\n    from /home/madtrick/guard-tests/vendor/ruby/1.9.1/bin/guard:19:in `<main>'\n```\n\nThe curious thing is that if I run _bundle exec guard list_, guard complains that I have no guard in my Guardfile, but the _shell_ guard has an \\* after it (which denotes it's present in the Guardfile)\n\nMy Guardfile:\n\n``` ruby\n[madtrick { guard-tests } ruby-1.9.2-p290 ]\n>>cat Guardfile \n# A sample Guardfile\n# More info at https://github.com/guard/guard#readme\n\n# Add files and commands to this file, like the example:\n#   watch(%r{file/path}) { `command(s)` }\n#\nguard 'shell' do\n  watch(/(.*).txt/) {|m| `tail #{m[0]}` }\nend\n```\n\nThe output of _bundle exec guard list_:\n\n``` bash\n[madtrick { guard-tests } ruby-1.9.2-p290 ]\n>>guard list\nERROR: No guards found in Guardfile, please add at least one.\nAvailable guards:\n   shell*\nSee also https://github.com/guard/guard/wiki/List-of-available-Guards\n* denotes ones already in your Guardfile\n```\n\nHope this helps\n Thanks for all the information. I understand the problem now and you can expect a bugfix release soon. In the meanwhile, you can either explicit pass a directory to be watched or stick with guard 0.8.8.\n Thanks, for your reply. I'll stay with 0.8.8 until the bugfix is released : )\n Guard 0.9.1 is out with a fix for the wrong working directory. Hope you all enjoy exploring all the other new bugs in Guard :P \n Unfortunately I still experience this error with 0.9.1?\n Yes and same error, 0.8.8 works fine. Will investigate further on Monday.\n False alarm!  0.10.0 works great, apologies.\n  I just wanted an opinion on this because I've been wanting something like this lately. It allows you to define templates, like you would for a guard plugin, but in `~/.guard/templates`. You can then add these to your Guardfile using `guard init [name]` which loads `~/.guard/templates/[name]` if a guard of the same name does not exist.\n Is this OK?\n Yeah, looks good to me too. Thanks!\n  I just setup a new project with guard 0.8.8, guard-rspec 0.5.8, spork 0.9.0.rc9, and guard-spork 0.3.2 on OS X Lion. Everything seems to work fine except \"guard start\" exits after running all the specs. Here's what the debug output looks like:\n\n```\nGuard is now watching at '/Users/subelsky/code/cardshark'\nDEBUG (11:25:09): Hook :start_begin executed for Guard::Spork\nDEBUG (11:25:09): Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\nDEBUG (11:25:09): Killing Spork servers with PID: 2279\nDEBUG (11:25:09): Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\nDEBUG (11:25:09): Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\nStarting Spork for RSpec \nDEBUG (11:25:09): Spawned Spork server 2427 ('bundle exec spork -p 9069')\nDEBUG (11:25:09): Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\nUsing RSpec\nPreloading Rails environment\nLoading Spork.prefork block...\nSpork is ready and listening on 9069!\nSpork server for RSpec successfully started\nDEBUG (11:25:20): Command execution: growlnotify --version\nDEBUG (11:25:20): Hook :start_end executed for Guard::Spork\nDEBUG (11:25:20): Hook :start_begin executed for Guard::RSpec\nGuard::RSpec is running, with RSpec 2!\nRunning all specs\nDEBUG (11:25:20): Command execution: rspec --help\nDEBUG (11:25:20): Command execution: bundle exec rspec -f progress -r /Users/subelsky/.rvm/gems/ruby-1.9.2-p180-patched@global/gems/guard-rspec-0.5.8/lib/guard/rspec/formatters/notification_rspec.rb -f Guard::RSpec::Formatter::NotificationRSpec --out /dev/null --failure-exit-code 2 spec \n.**.\n\nPending:\n  adding a card as a signed-in user succeeds\n    # No reason given\n    # ./spec/integration/add_a_card_spec.rb:5\n  adding a card as a signed-out user \n    # Not Yet Implemented\n    # ./spec/integration/add_a_card_spec.rb:11\n\nFinished in 8.09 seconds\n4 examples, 0 failures, 2 pending\nDEBUG (11:25:31): Hook :start_end executed for Guard::RSpec\nruby-1.9.2-p180@cardshark ~/code/cardshark$\n```\n\nMy Guardfile is below:\n\n``` ruby\nguard 'spork', :cucumber => false, :test_unit => false, :rspec => true, :rspec_port => 9069 do\n  watch('config/application.rb')\n  watch('config/environment.rb')\n  watch(%r{^config/environments/.+\\.rb$})\n  watch(%r{^config/initializers/.+\\.rb$})\n  watch('Gemfile')\n  watch('Gemfile.lock')\n  watch('spec/spec_helper.rb')\nend\n\nguard 'rspec' do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb')  { \"spec\" }\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^app/(.*)(\\.erb|\\.haml)$})                 { |m| \"spec/#{m[1]}#{m[2]}_spec.rb\" }\n  watch(%r{^lib/(.+)\\.rb$})                           { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch(%r{^app/controllers/(.+)_(controller)\\.rb$})  { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\n  watch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\n  watch('spec/spec_helper.rb')                        { \"spec\" }\n  watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n  # Capybara request specs\n  watch(%r{^app/views/(.+)/.*\\.(erb|haml)$})          { |m| \"spec/integration/#{m[1]}_spec.rb\" }\nend\n```\n\nI've been googling and experiment for awhile, so I hope I didn't miss some obvious answer!\n 0.9.0.pre4 (I'm on OS X Lion and used the gcc-osx-installer instead of Xcode)\n unfortunately pre3 doesn't work with Lion\n I've got the same problem, except I'm not using guard-rspec. Mine is exiting after running any guards (cucumber, minitest, etc). I also just updated to rb-fsevent 0.9.0.pre4. If I uninstall rb-fsevent, it behaves correctly with polling.\n Since I'm primarily using lion now and only testing on snow leopard (...via an old 32bit-only intel imac), I'm pretty sure it works on lion.\n\nThere is mention of a confusing EOFError that I haven't had the time to look into... Perhaps this is related?\n\n```\n/Users/dev/.rvm/gems/ruby-1.9.2-p290@rb-fsevent-test/gems/guard-0.8.8/lib/guard/interactor.rb:30: warning: instance variable @thread not initialized\nException `EOFError' at /Users/dev/.rvm/gems/ruby-1.9.2-p290@rb-fsevent-test/gems/rb-fsevent-0.9.0.pre4/lib/rb-fsevent/fsevent.rb:35 - end of file reached\n```\n\nPerhaps running with ruby's debug voodoo enabled will give more info?\n\n```\nexport RUBYOPT=\"${RUBYOPT} -w -v --debug\"\n```\n Per https://github.com/thibaudgg/rb-fsevent/issues/20, rb-fsevent 0.9.0.pre3 is dependent on XCode being installed, but pre4 is not. I'm currently foregoing XCode and using [osx-gcc-installer](https://github.com/kennethreitz/osx-gcc-installer) since XCode 4.2's LLVM compiler breaks all kinds of stuff. The rb-fsevent issue linked above appears to be the same issue as what we're now discussing here, so I recommend we close this discussion and just continue the other one.\n  When trying to run guard in debug mode, the --debug option doesn't work. However, using -d does.\n\nI'm on Debian Squeeze and running guard v0.8.8.\n\nAlso, it should be stated that this doesn't actually provide _actual_ debugging as one would expect, but just tells guard to do debug _logging_.\n That seems to be a Thor bug, renaming the option and it works again as expected. \n  This is a strange bug that I've not been able to reproduce outside of Guard. I'm using it with `guard-rspec` and `guard-spork`, when I start it the \"spork started successfully\" is shown then libnotify stop working. I can't send notification using any other means (I've tried `notify-send` and from `irb` using the `libnotify` directly) after the first notification sent by guard. I then need to restart Gnome to make it work again. There's no error messages anywhere, althought I'm not sure where to look. I'm not experiencing this issue with other application using `libnotify`.\n\nHere's the gems I'm using:\n- libnotify-0.5.9\n- guard-0.8.8\n- guard-spork-0.3.2\n- guard-rspec-0.5.8\n\nAnd some of my (ArchLinux) system information:\n- libnotify 0.7.4\n- notification-daemon 0.7.3\n- gtkmm 3.2.0\n- gtk3 3.2.2\n- gnome-session 3.2.1\n- xmonad 0.9.2\n I've found out about dbus-monitor, I'm not sure if it could help you, but here's some of it's output...\n\nWhen calling `notify-send`, there's this method call that is monitored:\n\n```\nmethod call sender=:1.34 -> dest=:1.22 serial=6 path=/org/freedesktop/Notifications; interface=org.freedesktop.Notifications; member=GetServerInformation\nmethod return sender=:1.22 -> dest=:1.34 reply_serial=6\n   string \"Notification Daemon\"\n   string \"GNOME\"\n   string \"0.7.3\"\n   string \"1.2\"\nmethod call sender=:1.34 -> dest=:1.22 serial=7 path=/org/freedesktop/Notifications; interface=org.freedesktop.Notifications; member=Notify\n   string \"notify-send\"\n   uint32 0\n   string \"\"\n   string \"hello\"\n   string \"world\"\n   array [\n   ]\n   array [\n      dict entry(\n         string \"urgency\"\n         variant             byte 1\n      )\n   ]\n   int32 -1\nmethod return sender=:1.22 -> dest=:1.34 reply_serial=7\n   uint32 3\n```\n\nThen when I start Guard, the monitor display both the Spork call and the Rspec one:\n\n```\nmethod call sender=:1.36 -> dest=:1.22 serial=6 path=/org/freedesktop/Notifications; interface=org.freedesktop.Notifications; member=GetServerInformation\nmethod return sender=:1.22 -> dest=:1.36 reply_serial=6\n   string \"Notification Daemon\"\n   string \"GNOME\"\n   string \"0.7.3\"\n   string \"1.2\"\nmethod call sender=:1.36 -> dest=:1.22 serial=7 path=/org/freedesktop/Notifications; interface=org.freedesktop.Notifications; member=Notify\n   string \"Libnotify::API\"\n   uint32 0\n   string \"/home/budu/.rvm/gems/ruby-1.9.3-p0@fantasy-sports/gems/guard-0.8.8/images/success.png\"\n   string \"Spork\"\n   string \"RSpec successfully started\"\n   array [\n   ]\n   array [\n      dict entry(\n         string \"urgency\"\n         variant             byte 1\n      )\n      dict entry(\n         string \"transient\"\n         variant             uint32 1\n      )\n   ]\n   int32 -1\nmethod return sender=:1.22 -> dest=:1.36 reply_serial=7\n   uint32 4\n```\n\nand\n\n```\nmethod call sender=:1.37 -> dest=:1.22 serial=6 path=/org/freedesktop/Notifications; interface=org.freedesktop.Notifications; member=GetServerInformation\nmethod return sender=:1.22 -> dest=:1.37 reply_serial=6\n   string \"Notification Daemon\"\n   string \"GNOME\"\n   string \"0.7.3\"\n   string \"1.2\"\nmethod call sender=:1.37 -> dest=:1.22 serial=7 path=/org/freedesktop/Notifications; interface=org.freedesktop.Notifications; member=Notify\n   string \"Libnotify::API\"\n   uint32 0\n   string \"/home/budu/.rvm/gems/ruby-1.9.3-p0@fantasy-sports/gems/guard-0.8.8/images/failed.png\"\n   string \"RSpec results\"\n   string \"57 examples, 17 failures (1 pending)\nin 1.922 seconds\"\n   array [\n   ]\n   array [\n      dict entry(\n         string \"urgency\"\n         variant             byte 1\n      )\n      dict entry(\n         string \"transient\"\n         variant             uint32 1\n      )\n   ]\n   int32 -1\nmethod return sender=:1.22 -> dest=:1.37 reply_serial=7\n   uint32 5\n```\n\nAfter that there's no method call monitored at all no matter what I do until after restarting the gnome-session.\n I'm getting close to solve this and it appear to have nothing to do with Guard in the end, it happen after sending a notification with the transient option.\n Just to wrap it up, it ended up being a problem in `notification-daemon`. I have reported that bug to the Gnome project bug tracker and while waiting for the fix I've modified the guard code for the `notify_linux` method in `lib/guard/notifier.rb` to not pass the transient option.\n  Not sure how to debug this issue. No file changes are being caught, and the --debug flag does nothing.\n\nHow do I fix this?\n Versions:\n- guard 0.8.8\n- rb-fsevent 0.4.3.1\n- ruby 1.9.3\n- xcode 4.0\n Removing rb-fsevent makes it work.\n Have you tried with the pre-release of rb-fsevent ?\n The `--debug` flag is now `--verbose` and works again.\n Closing this because we've not received any reply. Feel free to reopen if still an issue. Until the next Guard version is released, you could use the `-d` flag instead of `--debug`.\n Sorry, I've been working hard on a few projects. Thanks for fixing and looking into this. Much appreciated, also wanted to note: No I haven't tried a pre-release as honestly Guard seems to be working perfectly without the rb-fsevent gem.\n  This will vendor all file system event gems which will work in a cross-platform way.\n +1 on this. Our team has MacOS and Linux developers and we're having problems because of theses dependencies.\n Having vendored defaults + a way to overwrite them seems to be a really good solution. I'm also think we should absolutely leave the possibility to use system gems.\n @netzpirat should I be working off of dev instead, or, can this be merged into master once I address the above issue?\n I just merged it locally into the `dev` branch and ran the spec suite with `rake spec:portability`. There's only a single spec failing on Rubinius:\n\n```\n1) Guard::Linux isn't usable on 10.6\n Failure/Error: described_class.should_not be_usable\n FFI::NotFoundError:\n   Unable to find foreign function 'inotify_init'\n```\n\nI also two other small things:\n- I had to run `rake build_mac_exec` before the `spec:portability` task- that should be a dependency.\n- The `--ignore-vendor` option is not documented.\n I will fix the documentation and the dependencies in those tasks. Re: inotify ffi issues .. I'm not really sure what to say about that one. Perhaps we need to lock down each vendored dep to a specific sha and update those shas manually? Thoughts?\n Really no idea what happens. I'll test it on a Linux machine in the evening to see if it's only a problem on a Mac. In this case we can just catch and ignore.\n I ran a quick test on linux, everything seemed to work well.\n @netzpirat Do you have the stacktrace handy for that error above? Happy to add the catch and ignore.\n No sorry, but I'll have a look again this evening.\n Very nice, the error has gone and [the specs are passing](http://travis-ci.org/#!/guard/guard), so I merged your changes into the `dev` branch. I only had to add a platform check to the listener, because for example rb_fsevent loads fine under Linux, but doesn't work. Thank you for all your work.\n  I am the maintainer of guard-annotate and I'm not familiar enough with guards internals to solve a problem.\n\nRight now, guard-annotate will get stuck in an endless loop while monitoring a specific file (config/routes.rb in a rails application).  The issue is that we are watching the file for changes, which will kick off a process that annotates those changes in the same file. \n\nSo, guard notices a change to the file, then kicks off a shell script in response which in turn, makes more changes to that same file -- which guard notices as a change and starts the process again, continuously looping.\n\nI tried finding a way by looking through the guard code to temporarily pause monitoring of files to prevent this issue but haven't found a solution.  My last attempt involved wrapping my shell script call inside:\n\n```\n    ::Guard.listener.pause\n    ... shell process here ...\n    ::Guard.listener.run\n```\n\nbut that doesnt seem to prevent the endless looping either.\n Yes you're right @netzpirat pausing the listener only stop the changes processing. Your code proposition should works fine. \n I'm closing this for now. Feel free to continue discussion at the mailing list.\n  How about using the [notify](https://github.com/jugyo/notify) gem to handle notifications?\n\nI can't install the `growl_notify` gem on Linux because it depends on the [rb-appscript](http://appscript.sourceforge.net/rb-appscript/index.html) gem, which doesn't compile outside Mac. This is a problem because we put our `Gemfile.lock` file under version control.\n Awesome. Thanks!\n  The first typo is obvious.\n\nI also believe \"files modifications\" is not correct English.\nI believe \"modifications of files\" or \"file modifications\" are better.\n  Currently Guard does not support Bsd based OSs such as FreeBSD.\n\nI found the [Cool.io](https://github.com/tarcieri/cool.io) gem that uses libev behind the scenes and should be able to detect file changes without polling. It's older gem name was [Rev](https://github.com/tarcieri/rev) that was rebuilt and updated.\n Hi Andrew,\n\nInteresting, having BSD listener support would be great! Feel free to submit a pull request, thanks!\n Added support for BSD using cool.io gem. https://github.com/vizjerai/guard/tree/coolio\n\nCurrently it does not find new files and the tests fail because of this.\n Made an update that allows it to find new files. But the tests still fail for some reason...\n Are you sure new files are detected by cool.io, he seems to me that it wasn't the case with kqueue on OS X. @netzpirat do you have some ideas about why theses specs are failing?\n Thanks!\n Hey guys thanks for looking into it. I do get the same latency issues but not always.\n\nThe latency doesn't seem to be as big of an issue if I've got a statwatcher on each file. But it doesn't detect new files.\n Another thing that I noticed is that the statwatcher's on_change method gets called when a file is opened and written.\n\nAnd when watching a directory, it doesn't give a way to know what changed other than the path that was passed to the statwatcher. Which requires looking at all of the files in the directory looking for something that changed. I'm thinking this is worse than polling...\n So my suspicion that it's polling is correct. After looking at cool.io's stat watcher, it actually polls at the file system level for changes, which explains the multiple second delays. And their default is ~5 seconds...\n\nIf the latency is set to a low value... the tests still fail.\n\nBut that doesn't really matter because Guard already has polling. Or is the way polling is done different?\n Closing this issue because adding support for cool.io at this time does not improve anything. If anyone is interested in this being further developed let me know and I'll see if I can find some time to work on it.\n Ok, thanks to have try it.\n  Linux notes on user watch limits\n great, thanks for the merge @netzpirat\n Apologies for the inconvenience.  I'll look into the dev branch.\n  I'm not getting growl or libnotify error messages (on either OS X or Linux, respectively) when using guard with spork.\n\nOn the OS X side of things, I'm using the spork-testunit gem, guard-minitest, guard-spork and growl_notify (I had tried the plain growl gem but the homebrew install of growlnotify didn't even work standalone, complaining of \"permission denied\"). I get a message when starting guard which reads \"Test::Unit successfully started\", but then I get no messages after that.\n\nAny ideas? I thought this might be the guard-minitest gem's fault, but after reviewing the code, I don't think it's responsible for notifications. There was a previously created issue that I (and others) had commented on:\n\nhttps://github.com/guard/guard-minitest/issues/11\n If you remove spork/guard-spork notifications work?\n Awesome, thanks for the insight; I'll look into testdrb and will make the changes if the information is available, or document it otherwise.\n\nCheers!\n Hi guys, regarding guard-test, it's actually already documented!\n  # The Problem\n\nCurrently, the singleton method [Guard.get_guard_class](https://github.com/guard/guard/blob/v0.8.8/lib/guard.rb#L398) removes dashes and compares all constants under the Guard module to the given guard name (say, in a Guardfile) after downcasing both. Finding Guard subclasses this way seems overly restrictive.\n\nFor example, given a guard with gem name `guard-foo_bar_baz`, and the following Guardfile:\n\n``` ruby\n# Guardfile\nguard :foo_bar_baz do\nend\n```\n\nand the following class definition:\n\n``` ruby\n# lib/guard/foo_bar_baz.rb\nmodule Guard\n  class FooBarBaz < Guard\n    #...\n  end\nend\n```\n\nthen Guard looks for a class that downcases to `foo_bar_baz`, which doesn't exist. I could rename my class to `Guard::Foo_Bar_Baz`, but that goes against ruby class naming conventions.\n\nIf we try to change the Guardfile to take advantage of the `gsub('-','')`, for instance:\n\n``` ruby\n# Guardfile\nguard 'foo-bar-baz' do\nend\n```\n\nthen it correctly finds the class name, but it looks for the class definition in `lib/guard/foo-bar-baz.rb`, which goes against ruby file naming conventions.\n# Solutions?\n\nIt seems to me that the intent of the `gsub` in [Guard.get_guard_class](https://github.com/guard/guard/blob/v0.8.8/lib/guard.rb#L401) was to remove **underscores**, not **dashes**. If this is the case, that would take care of the problem above, but it still seems like a bad lookup.\n\nA better solution might be to borrow the `camelize` method from ActiveSupport, for example:\n\nhttps://gist.github.com/1323225\n\nhowever, this might break other gems such as guard-rspec, whose class name is [`RSpec`](https://github.com/guard/guard-rspec/blob/master/lib/guard/rspec.rb#L5), not `Rspec`.\n\nIt seems to me that there should be a better way for Guard to keep track of what guards exist, and accessing the class names shouldn't just be a lookup of all constants under the Guard module.\n# TL;DR\n\nMy snake_cased guard name fails to match my CamelCased class name.\n I appreciate you taking care of this issue so quickly. I'm glad to see that your solution is backwards-compatible as well. Thanks!\n  When Guard is running with watch_all_modifications, timestamps aren't being created for new files.\n\nI believe `Guard::Listener#file_modified?` needs to be updated to resolve this. However, I don't understand the `if` statements in this method well enough to provide a fix.\n Hi @sutherland,\n\nI've pushed a fix for this yesterday, can you give it a try by using Guard from git: `gem 'guard', :git => 'git://github.com/guard/guard.git'` and let us know if the issue is solved?\n\nThanks in advance!\n Looks good. Works for me.\n  In `Guard::Listener`, the `initialize()` method is attempting to set default options:\n\n```\n@watch_all_modifications = options.fetch(:watch_all_modifications, false)\n```\n\nThe options hash is an instance of `Thor::CoreExt::HashWithIndifferentAccess`. This hash extension doesn't seem to support indifferent access for `fetch()`. Because the stored key is actually a string, this will always default to false.\n\nThis might be resolved with:\n\n```\n@watch_all_modifications = options[:watch_all_modifications] || false\n```\n Thanks, could you add a failing test (and even fix the issue) and submit a pull-request against the dev branch?\n  I use ruby-growl.\nnotifications work just fine, but guard always says \"Please install growl_notify or growl gem for Mac OS X notification support and add it to your Gemfile\".\ncould you make it so it understands if i use ruby-growl?\nthanks\n https://github.com/pvinis/U_O_me\nhere is my gemfile and guardfile.\nI just run guard and it starts spork etc, and runs normally, with growl notifications\n growl_notify gives me errors like that \"The process has forked and you cannot use this CoreFoundation functionality safely. You MUST exec().\nBreak on **THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY___YOU_MUST_EXEC**() to debug.\"\n\ngrowl is working fine. I'll use that.\nat some point, I had some problems and I tried ruby-growl, but growl works now.\nthanks.\n  I have guard installed for use with rspec, and am running into an issue where it is failing looking for minitest params.\n\nhere's the error : ...uby/1.9.1/minitest/unit.rb:581:in `block in process_args': invalid option: -p (OptionParser::InvalidOption)\n\nmy guardfile is the vanilla version created by guard-rspec init\n\nhere are gems:\n\n```\ngroup :development, :test do\n  gem 'turn', :require => false\n  gem 'shoulda'\n  gem 'shoulda-matchers'\n  gem 'factory_girl_rails'\n  gem 'guard'\n  gem 'rb-fsevent'\n  gem 'rspec-rails', '>= 2.0.0'\n  gem 'cucumber-rails', '>= 0.3.2'\n  gem 'webrat', '>= 0.7.2'\n  gem 'guard-rspec' \nend\n```\n\nNote that I have uninstalled both the guard-test and test-unit gems......\n\nAlso note that when guard-test and test-unit are installed it runs properly.\n\nCLARIFICATION: The error above is seen when exiting the running thin server.....\n\nWhen guard is run at the console it is working without error....\n Hi,\n\nIf you're using RSpec, why are you using MiniTest, or even test-unit?\n\nCould you show us your Guardfile (even if it's the \"vanilla version\"?\n\nThanks!\n i brought in rspec after i had already installed guard to run against test-unit. So once i moved to rspec, i brought in the guard-rspec gem and ran the init, removed the guard-test and test-unit gems. i thought i had scrubbed everything related to test-unit....\n\nhere's the guard file:\n\n```\nguard 'rspec', :version => 2 do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb')  { \"spec\" }\n\n  # Rails example\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^lib/(.+)\\.rb$})                           { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch(%r{^app/controllers/(.+)_(controller)\\.rb$})  { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\n  watch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\n  watch('spec/spec_helper.rb')                        { \"spec\" }\n  watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n  # Capybara request specs\n  watch(%r{^app/views/(.+)/.*\\.(erb|haml)$})          { |m| \"spec/requests/#{m[1]}_spec.rb\" }\nend\n```\n Ah ok, thanks for the clarifications! I thought you were actually using MiniTest etc...\n\nYou should remove `turn` from your Gemfile. Could you show us your `spec_helper.rb` too? Have you removed the `test` folder entirely?\n ok, so i am running guard with bundle exec and when that is run at the console it works. \n\ni think the issue i am seeing when i shut down the thin server (which is run out of a procfile) is that i am also running resque out of the procfile and when i shut down the server it tries to run a resque test suite which is odd. i need to look at the resque doc and see how to disable that test suite...\n\ni need to look into that and redux all of the test related gems as well. i think there are too many moving parts here and that's causing the issue. \n\nhere's the relevant part of the server shutdown:\n\n```\n16:10:44 system    | sending SIGTERM to all processes\n16:10:44 web.1     | >> Stopping ...\n16:10:44 web.1     | Exiting\n16:10:44 web.1     | /Users/tpletcher/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/minitest/unit.rb:581:in `block in process_args': invalid option: -p (OptionParser::InvalidOption)\n16:10:44 web.1     |    from /Users/tpletcher/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/minitest/unit.rb:560:in `new'\n16:10:44 web.1     |    from /Users/tpletcher/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/minitest/unit.rb:560:in `process_args'\n16:10:44 web.1     |    from /Users/tpletcher/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/minitest/unit.rb:591:in `run'\n16:10:44 web.1     |    from /Users/tpletcher/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/minitest/unit.rb:508:in `block in autorun'\n16:10:45 worker.1  | Loaded suite resque-1.19.0: Waiting for *\n16:10:45 worker.1  | Started\n16:10:45 worker.1  | \n16:10:45 worker.1  | Finished in 0.003896 seconds.\n16:10:45 worker.1  | \n16:10:45 worker.1  | 0 tests, 0 assertions, 0 failures, 0 errors, 0 skips\n16:10:45 worker.1  | \n16:10:45 worker.1  | Test run options: --seed 17992\n```\n ok, so it looks like the shoulda gems are the issue. \n\nwhen i remove them from bundle everything is good to go...not sure why that would cause the resque test suite to be run at server shutdown, but i'll look into that later. i'm going to go ahead and close this issue. \n\nthanks for quick response! \n\ncheers,\n\nT\n  There was no test to show this, I'm not quite sure how to test it though.\n Hi,\n\nthanks but it has been already reported and fixed in #168!\n\nYou can use the `dev` branch until the next release.\n 0.8.6 has just been released! Grab it while it's hot! ;)\n Oh whoops, sorry about that.\n  Between 0.8.4 and 0.8.5, the file that calls the `guard init` task changed, but the path to the template Guardfile was not adjusted accordingly. This results in an error when doing `guard init` using version 0.8.5 of this gem.\n\nThis pull request makes the small tweak necessary to point to the correct path of the Guardfile.\n  Hey all, \nI know this isn't the most pressing issue, but I am still having trouble with the any_return. Looks like changed_paths and deleted_paths are trying to use start_with?('!') but Arrays and Hashes don't have these methods. I was wondering what we/I should do about that. \n\n```\nbundle exec guard -d\n>>>Turn off AMQP/RabbitMQ support...\nAuthenticating mongo...\nGuard is now watching at '/Users/telmate/Documents/git_tygerweb/tygerweb'\nDEBUG (16:25:44): Hook :start_begin executed for Guard::FtpGuard\nStarting FtpGuarding\nDEBUG (16:25:44): Hook :start_end executed for Guard::FtpGuard\n/Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:283:in `changed_paths': undefined method `start_with?' for #<Array:0x102b64178> (NoMethodError)\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:283:in `select'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:283:in `changed_paths'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:260:in `run_on_change_task'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:204:in `run_on_change'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:243:in `run_on_guards'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:242:in `each'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:242:in `run_on_guards'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:241:in `catch'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:241:in `run_on_guards'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:240:in `each'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:240:in `run_on_guards'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:203:in `run_on_change'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:220:in `run'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:217:in `synchronize'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:217:in `run'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:202:in `run_on_change'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/listener.rb:78:in `start_reactor'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/listener.rb:74:in `loop'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/listener.rb:74:in `start_reactor'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/listener.rb:73:in `initialize'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/listener.rb:73:in `new'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/listener.rb:73:in `start_reactor'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/listener.rb:65:in `initialize'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/listeners/darwin.rb:10:in `initialize'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/listener.rb:36:in `new'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/listener.rb:36:in `select_and_init'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:60:in `setup'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard.rb:130:in `start'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/lib/guard/cli.rb:68:in `start'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/thor-0.14.6/lib/thor/task.rb:22:in `send'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.5/bin/guard:6\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/bin/guard:19:in `load'\n    from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/bin/guard:19\n```\n  I'm running virtualized Ubuntu on Win7 host, the working directory is mounted with `vboxsf` driver.\n\nIf I edit Guardfile while `guard` is running, it prints\n\n```\nIgnoring paths: public\nGuardfile has been re-evaluated.\n```\n\nand then stops running the current guards.\nCommands `p`, `r` and `q` work as expected, but hitting `return` doesn't do anything anymore, neither does editing any of the watched files.\n\nIf I quit it like that, `guard-spork` leaves the `spork` process running. The problem could be on its side, but the related issue is supposedly fixed.\n\nGemfile:\n\n```\ngroup :test do\n  gem 'spork', '~> 0.9.0.rc'\n  gem 'spork-testunit'\n  gem 'mocha'\n  gem 'guard-spork'\n  gem 'guard-test'\nend\n```\n\nGuardfile:\n\n```\nignore_paths 'public'\n\nguard 'spork', :wait => 30, :notification => true do\n  watch('config/application.rb')\n  watch('config/environment.rb')\n  watch('config/routes.rb')\n  watch(%r{^config/environments/.*\\.rb$})\n  watch(%r{^config/initializers/.*\\.rb$})\n  watch('Gemfile')\n  watch('Gemfile.lock')\n  watch('test/test_helper.rb')\nend\n\nguard :test, :drb => true do\n  watch(%r{^lib/(.+)/([^/]+)\\.rb$}) { |m| \"test/#{m[1]}/#{m[2]}_test.rb\" }\n  { \"models\" => \"unit\", \"controllers\" => \"functional\" }.each do |cs, ts|\n    watch(%r{^app/#{cs}/([^/]+)\\.rb$}) { |m| \"test/#{ts}/#{m[1]}_test.rb\" }\n  end\n  watch(%r{^test/(.+)/.*test_case\\.rb}) { |m| \"test/#{m[1]}\" }\n  watch(%r{^test/.*test\\.rb})\nend\n```\n Please can you try to launch guard with the debug option `bundle exec guard -d` and give the complete output. Thanks\n Sure.\n\n```\n$ bundle exec guard -d\nPlease install rb-inotify gem for Linux inotify support\nUsing polling (Please help us to support your system better than that).\nPlease install libnotify gem for Linux notification support and add it to your Gemfile\nIgnoring paths: public\nGuard is now watching at '(...)'\nDEBUG (22:57:06): Hook :start_begin executed for Guard::Spork\nDEBUG (22:57:06): Killing Spork servers with PID: \nStarting Spork for Test::Unit \nDEBUG (22:57:06): Spawned Spork server 10251 ('bundle exec spork testunit -p 8988')\nUsing TestUnit\nPreloading Rails environment\nLoading Spork.prefork block...\nSpork is ready and listening on 8988!\nSpork server for Test::Unit successfully started\nDEBUG (22:57:19): Hook :start_end executed for Guard::Spork\nDEBUG (22:57:19): Hook :start_begin executed for Guard::Test\nGuard::Test 0.4.0 is running, with Test::Unit 2.4.0!\nRunning all tests\nUsing testdrb to run the tests\nDEBUG (22:57:19): Command execution: testdrb -Itest (...)\nRunning tests with args [\"-Itest\", (...)]...\nSpecify ruby-prof as application's dependency in Gemfile to run benchmarks.\nLoaded suite [(...)]\nStarted\nPP\n\nFinished in 5.831700728 seconds.\n\n52 tests, 242 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n\n8.92 tests/s, 41.50 assertions/s\n\nPending Cases:\n(...)\nDone.\n\nDEBUG (22:57:28): Hook :start_end executed for Guard::Test\nIgnoring paths: public\nGuardfile has been re-evaluated.\n```\n\nAfter that, nothing.\nI censored the output a bit, since I don't think the repo location and the test file paths can be of any help.\n Can you add `rb-inotify` & `libnotify` in your `development` group in your Gemfile and move `guard-spork` & `guard-test` in that one too. Maybe it's an issue with the polling listener, but that's weird.\n `rb-inotify` doesn't make much of a difference, except looks like it's ignoring the `ignore_paths` instruction:\n\n```\n/home/gutov/.rvm/gems/ruby-1.9.2-p180/gems/rb-inotify-0.8.8/lib/rb-inotify/watcher.rb:80:in `initialize': No space left on device - Failed to watch \"/home/gutov/docs/Ruby/estate/public/system/images/000/003/561\": The user limit on the total number of inotify watches was reached or the kernel failed to allocate a needed resource. (Errno::ENOSPC)\n```\n\nAs soon as I moved the `public/system` directory out of the way and rebooted(!) the machine, it worked just like before, with the same problem.\n`libnotify` works as expected, it's just more or less useless to me, since `guard-test` doesn't support it in Drb mode.\n And if you try without `guard-spork` or `guard-rspec` you got the same issue?\nAnd it's only happens when you edit the `Guardfile` right? Otherwise it works fine?\n Commented them out, tried `guard-shell` with ctags example -- same issue.\n\nIt works fine otherwise, yes.\n Thanks, but that's not the issue here.\n I am having this same problem on the current 0.8.6 release. I wonder if there is anyone for whom this is a regression - if so, git-bisect could find the bug.\n I get roughly the same output as dgutov.\n\n```\nGuard is now watching at '/home/dyfrgi/work/tendril/energize'\nDEBUG (14:50:16): Hook :start_begin executed for Guard::Spork\nDEBUG (14:50:16): Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\nDEBUG (14:50:16): Killing Spork servers with PID: \nDEBUG (14:50:16): Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\nStarting Spork for RSpec & Cucumber \nDEBUG (14:50:16): Spawned Spork server 13778 ('bundle exec spork -p 8989')\nDEBUG (14:50:16): Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\nDEBUG (14:50:16): Spawned Spork server 13786 ('bundle exec spork cu -p 8990')\nUsing RSpec\nPreloading Rails environment\nUsing Cucumber\nPreloading Rails environment\n/home/dyfrgi/.rvm/gems/ruby-1.9.2-p290@energize/gems/rack-1.3.4/lib/rack/backports/uri/common_192.rb:53: warning: already initialized constant WFKV_\n/home/dyfrgi/.rvm/gems/ruby-1.9.2-p290@energize/gems/rack-1.3.4/lib/rack/backports/uri/common_192.rb:53: warning: already initialized constant WFKV_\nLoading Spork.prefork block...\nLoading Spork.prefork block...\nSpork is ready and listening on 8989!\nSpork is ready and listening on 8990!\nSpork server for RSpec & Cucumber successfully started\nDEBUG (14:51:13): Hook :start_end executed for Guard::Spork\nDEBUG (14:51:13): Hook :start_begin executed for Guard::RSpec\nGuard::RSpec is running, with RSpec 2!\nDEBUG (14:51:13): Hook :start_end executed for Guard::RSpec\nDEBUG (14:51:13): Hook :start_begin executed for Guard::Cucumber\nDEBUG (14:51:13): Hook :start_end executed for Guard::Cucumber\nGuardfile has been re-evaluated.\n```\n\nAnd then nothing, regardless of input.\n Hey guys, I've just found the issue. It's fixed, thanks for the report and the \"broken-guard\" script @dyfrgi! ;)\n\nI'll push and release a new version once all is green.\n Great. Thanks for fixing!\n A quick explanation:\n\nWhen the Guardfile is evaluated, each guard is given the group in which it is defined, or `:default` if the guard is not in a `group` block. Note that you couldn't see the issue happening if all your guards were declared in named groups (that was my case for instance).\n\nOn `Guard.setup`, the `@groups` variable is set to `[Group.new(:default)]` so when Guard run the `reload` method for instance (with no specific group given to run the task) it is taking all the groups in `@groups` (including the `:default` group) and run the task for all the guards in each group.\n\nBut when the Guardfile was re-evaluated, in `Guard::Dsl.reevaluate_guardfile` we were clearing the `@groups` variable so the next time Guard was running `reload` (with no specific group given to run the task), `@groups` was missing the `:default` group so it was running the task only for the named groups (the one declared explicitly in the Guardfile).\n\nHope I was clear enough. :)\n You're welcome, you can now grab the [0.8.7](http://rubygems.org/gems/guard).\n Nice catch and fix. Thanks all!\n  When I have ruby_gntp installed, and growl and growl_notify not installed, Guard produces the following message on startup:\n\n```\nPlease install growl_notify or growl gem for Mac OS X notification support and add it to your Gemfile\n```\n\nLooking at the code, while the error message definitely needs ruby_gntp adding to it, Guard does appear to be checking for the presence of ruby_gntp, but not finding it.\n\nI've already run bundle update; here's the relevant section of my Gemfile:\n\n```\n  gem 'guard', :git => 'git://github.com/guard/guard.git'\n  gem 'guard-rspec'\n  if RUBY_PLATFORM =~ /darwin/i then\n    gem 'ruby_gntp'\n    gem 'rb-fsevent'\n  end\n```\n\n(I tried explicitly specifying the git version of guard in case the changes hadn't made it to the gem in the repository - the same thing happens without doing that.)\n\nThanks\n Thanks - `bundle exec guard` has eliminated the message; I was just typing `guard`. So much for doing things the easy way :)\n Since you're using Guard from the master @ GitHub, you have to launch it with `bundle exec`. :)\n  guardfile:\n\n``` ruby\nguard 'bundler' do\n  watch('Gemfile')\nend\n\nguard 'rspec', :all_on_start => false, :all_after_pass => false do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^lib/(.+)\\.rb$})                           { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n\n  watch('spec/spec_helper.rb')                        { \"spec\" }\n  watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\nend\n```\n\nNow when I execute guard it just parses the file and quits:\n\n```\n$ bundle exec guard -d\nGuard is now watching at '/Users/paul/code/IM/code/extranet'\nDEBUG (12:23:07): Hook :start_begin executed for Guard::Bundler\nDEBUG (12:23:07): Command execution: bundle check\nBundle already up-to-date\nDEBUG (12:23:12): Command execution: growlnotify --version\nDEBUG (12:23:12): Hook :start_end executed for Guard::Bundler\nDEBUG (12:23:12): Hook :start_begin executed for Guard::RSpec\nGuard::RSpec is running, with RSpec 2!\nDEBUG (12:23:12): Hook :start_end executed for Guard::RSpec\n$ \n```\n\nI'm using JRuby 1.6.3 on OSX 10.7.\n Please can you give your Gemfile content too. Thanks\n Sure thing.  I'll try to highlight what I installed for these tools\n\n``` ruby\nsource :gemcutter\nsource 'http://gems.github.com'\n\ngem 'rails', '3.0.10'\ngem 'erubis', '2.6.6'\ngem 'authlogic', '3.0.2'\ngem 'chronic', '0.3.0'\ngem 'exception_notification', '2.4.1'\ngem 'workflow', '0.8.0'\ngem 'fastercsv', '1.5.3'\ngem 'hpricot', '0.8.4'\ngem 'will_paginate', '2.3.15'\ngem 'netaddr', '1.5.0'\ngem 'json_pure', '1.5.1'\ngem 'xml-simple', '1.0.15'\ngem 'database_cleaner', '0.6.7'\ngem 'clear_empty_attributes', '0.2.1'\ngem 'encryptor', '1.1.2'\ngem 'attr_encrypted', '1.2.0'\ngem 'collectd', '0.0.15'\ngem 'newrelic_rpm', '3.1.2', :require => false\ngem 'rake', '0.9.2'\ngem 'aws-s3', '0.6.2'\ngem 'haml', '3.1.2'\ngem 'sass', '3.1.3'\ngem 'paperclip', '2.3.15'\ngem 'default_value_for', '1.0.4'\ngem 'carmen', '0.2.8'\ngem 'geokit', '1.5.0'\ngem 'geokit-rails3', '0.1.3'\ngem 'acts_as_audited', '2.0.0.rc7'\n\nplatform :jruby do\n  gem 'trinidad', '1.2.3'\n  gem 'jruby-openssl', '0.7.4'\n  gem 'activerecord-jdbc-adapter', '1.1.1'\n  gem 'jdbc-mysql', '5.1.13'\n  gem 'jmx4r', '0.1.0'\n  gem 'celerity', '0.8.7'\nend\n\nplatform :mri do\n  gem 'mysql2', '0.2.11'\nend\n\ngroup :test, :development do\n  gem 'rspec', '2.6.0'\n  gem 'rspec-rails', '2.6.1'\n  gem 'cucumber', '1.0.2'\n  gem 'cucumber-rails', '1.0.2'\n  gem 'capybara', '1.0.0'\n  gem 'capybara-celerity', '0.0.1'\n  gem 'vcr', '1.10.0'\n  gem 'webmock', '1.6.4'\n\n  # BEGIN GUARD SUPPORT\n\n  gem 'guard-bundler', '0.1.3'\n  gem 'guard-rspec', '0.5.0'\n  gem 'rb-fsevent', '0.4.3.1', :require => false\n  gem 'rb-inotify', '0.8.8', :require => false\n\n  # END GUARD SUPPORT\nend\n```\n Sorry, I had already uninstalled the growl gem when I pasted in the Gemfile (I was just trying to simplify it as much as possible.).  I'll try upgrading JRuby to 1.6.4.\n Upgrading to JRuby 1.6.4 and Lion 1.7.2 seems to have resolved this issue.\n  Hi,\n\nGuard is not detecting any file modifications. My watches are (I expect) good\nex : \nguard 'cucumber', :cli => \"--drb --no-profile --color --format progress --strict\"  do\n  watch(%r{^features/.+.feature$})\n  watch(%r{^features/support/.+$})          { 'features' }\n  watch(%r{^features/step_definitions/(.+)_steps.rb$})\nend\n\nand when I run Guard (with/out -A -n f) the tests are executed without any issues but the modifications(on users.feature for exemple) are not making it run the tests again. (Interaction, like \"reload\" and ... are working well)\n\nI'm running Linux (Ubuntu) on a VirtualMachine (VirtualBox) over Windows 7. (Everything run under ubundu, except my editor)\nRails (3.1.1) is working fine (using WebRick)\n\nI'm using guard (0.8.4) , guard-cucumber (0.7.3), guard-sprok(0.3.1)\n\nI'm modifying my sources with RubyMine ON WINDOWS, which is probably the main reason of this issue. inotify is not triggering any signal under linux. I thought however that the polling system of guard would see the file modifications.\n\nAny idea ?\n Ok thanks.\nYou're right, removing the rb-inotify worked fine (using the polling).\n My mistake, it is working fine now\n Sorry to spam again.\nIn the same topic, I noticed that when I modify a file triggering Spork (routes.rb for ex) or Guard directly (Guardfile) or doing it manually (using \"reload\" command), Guard is not working anymore. It doesn't react to interaction commands (reload...) neither to file modifications.\n\nHowever, when cucumber is triggered, Guard is still working (until I trigger Spork or Guard). I guess there is an issue with the relading process for Guard and Spork. I haven't change those (generated by default) except for the watches of Spork.\n\nI tried to run it with debug but everything looks fine and I don't know why it is waiting without doing anything.\n Please can you also give your full Guardfile & Gemfile. Thanks!\n Sure. Here are my files: \nhttps://gist.github.com/1288335\n\nI did some other tests. When Guard is blocked , I can still press enter to run all the test and if there are some modifications of watched files for Guard or Spork then it reloads Guard or Spork\n\nWhat I guess is that Guard is waiting something special to happend that is triggered by the \"Enter\" key\n I also got another issue which is probably linked to this one. When I let run guard for a little time. It often block my virtual machine. By block I mean, I can't run any process anymore, neither send a signal to guard. Only the current processes are working (other shells are able to use shell commands but not anymore binaries. I can't login anymore too) So my guess is that it is taking all the thread (or another ressource) limit for itself preventing any other process to run.\n\nI never got such an issue before and I did the test 4 times, it is only happening when guard is running. I'll try to debug it a little\n Please can you try to launch guard with the debug option `bundle exec guard -d` and give the complete output. Thanks\n I did... and this time I got something weirder. The freeze appeared during the cucumber test (one Ctrl+C interrupt the process and then freeze again without any possibility to restore the system) Here is the log:\n\n``` bash\n--$ bundle exec guard -d\nPlease install rb-inotify gem for Linux inotify support\nUsing polling (Please help us to support your system better than that).\nPlease install libnotify gem for Linux notification support and add it to your Gemfile\nGuard is now watching at '/media/sf_Projects/commemora'\nDEBUG (21:02:17): Hook :start_begin executed for Guard::Spork\nDEBUG (21:02:17): Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\nDEBUG (21:02:17): Killing Spork servers with PID:\nDEBUG (21:02:17): Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\nStarting Spork for Cucumber\nDEBUG (21:02:17): Spawned Spork server 1926 ('bundle exec spork cu -p 8990')\nDEBUG (21:02:17): Command execution: ps aux | awk '/spork/&&!/awk/{print $2;}'\nUsing Cucumber\nPreloading Rails environment\nLoading Spork.prefork block...\nSpork is ready and listening on 8990!\nSpork server for Cucumber successfully started\nDEBUG (21:03:56): Hook :start_end executed for Guard::Spork\nDEBUG (21:03:56): Hook :start_begin executed for Guard::Cucumber\nRunning all features\nDEBUG (21:03:56): Command execution: bundle exec cucumber --drb --no-profile --color --format progress --strict --tags ~@wip --require /home/crystalin/.rvm/gems/ruby-1.9.2-p290@commemora/gems/guard-cucumber-0.7.3/lib/guard/cucumber/notification_formatter.rb --format Guard::Cucumber::NotificationFormatter --out /dev/null --require features features\nDisabling profiles...\nRunning tests with args [\"--no-profile\", \"--color\", \"--format\", \"progress\", \"--strict\", \"--tags\", \"~@wip\", \"--require\", \"/home/crystalin/.rvm/gems/ruby-1.9.2-p290@commemora/gems/guard-cucumber-0.7.3/lib/guard/cucumber/notification_formatter.rb\", \"--format\", \"Guard::Cucumber::NotificationFormatter\", \"--out\", \"/dev/null\", \"--require\", \"features\", \"features\"]...\nDisabling profiles...\n----------\n```\n\nIt froze there. Then hitting Ctrl+C gives me those lines more:\n\n``` bash\n\n           ...............------...................................-----.........-----....-----.............................\n\n29 scenarios (29 passed)\n161 steps (161 passed)\n0m5.441s\nDone.\n\nDEBUG (21:04:16): Hook :start_end executed for Guard::Cucumber\nnap_time = -0.5578572750091553\nnap_time = 4.076275110244751\n\n```\n\nNow it is completely frozen.\nThe nap_time is just a little hack I've done to see when guard is watching the files (it is a simple put in the polling.rb)\n\nSometimes it runs for a longer time (10mins) without freezing (but in all the cases, I don't do anything... i start guard and wait (without modifying files or running commands on the VM))\n There might be something wrong in my guardfile too. I looked at the excetion of guard and after running the tests and while waiting, the processes are calling stat64(...) on all the files of my projects (even the caches parts, tmp and ...) without stoping (I guess the polling is based on the stat call but while those files? (the calls are in a loop and never stops)\n\nhere is a part:\n\n``` bash\nstat64(\"/media/sf_Projects/commemora/.sass-cache/d00b2e19b485bc46c4fbf161c64f01469d95131f/..\", {st_mode=S_IFDIR|0770, st_size=32768, ...}) = 0\nstat64(\"/media/sf_Projects/commemora/.sass-cache/d00b2e19b485bc46c4fbf161c64f01469d95131f/_color.scssc\", {st_mode=S_IFREG|0770, st_size=264, ...}) = 0\nstat64(\"/media/sf_Projects/commemora/.sass-cache/d00b2e19b485bc46c4fbf161c64f01469d95131f/_general.scssc\", {st_mode=S_IFREG|0770, st_size=604, ...}) = 0\nstat64(\"/media/sf_Projects/commemora/.sass-cache/d07d98710a0e85fc03a2cec59a1582832e6fd5e5\", {st_mode=S_IFDIR|0770, st_size=4096, ...}) = 0\nstat64(\"/media/sf_Projects/commemora/.sass-cache/d07d98710a0e85fc03a2cec59a1582832e6fd5e5/.\", {st_mode=S_IFDIR|0770, st_size=4096, ...}) = 0\nstat64(\"/media/sf_Projects/commemora/.sass-cache/d07d98710a0e85fc03a2cec59a1582832e6fd5e5/..\", {st_mode=S_IFDIR|0770, st_size=32768, ...}) = 0\nsched_yield()   \n```\n I did another test:\nI removed everything inside my Guard file, so it is actually empty, but when i call guard, it is still looking for every files inside my projects for each loop\n So it is normal to watch all the files ? I didn't know that (what is the purpose? I'm not sure I understand why not only look at the watched files/folders?\n(I deleted the .sass-cache, but I did the test with only this in my Guardfile\n```ignore_paths '.idea'\n\n```\nand it is ignoring that path\n```\n As I'm the only one who seems to have this issue... I suggest we close it... It is probably linked to my system. I'll try to update the VM/ubuntu and see if the issue is still here and from where it comes (I start to think that the number of access guard is making to the files from the shared folder make the hdd driver goes crazy or ... dunno)\n  Hello again all! \n\nI was using 0.7.0 before my recent pull was accepted. Now I am trying to use 0.8.4 and I get this when I do guard list or guard -T. \nI saw that this was an error before. I wonder if I am maybe just implementing incorrectly. \n\nHere are the errors I see. \n\n[ree-1.8.7-2011.03][KraussMac:~/Documents/git_tygerweb/tygerweb]$ guard list\n\n> > > Turn off AMQP/RabbitMQ support...\n> > > Authenticating mongo...\n> > > /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:417:in `load_missing_constant': Guard is not missing constant DslDescriber! (ArgumentError)\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:80:in`const_missing'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:98:in `send'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:98:in`const_missing'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/guard-0.8.4/lib/guard/cli.rb:86:in `list'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/task.rb:22:in`send'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/invocation.rb:118:in`invoke_task'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/base.rb:389:in`start'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/guard-0.8.4/bin/guard:6\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/bin/guard:19:in `load'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/bin/guard:19\n> > > [ree-1.8.7-2011.03][KraussMac:~/Documents/git_tygerweb/tygerweb]$ guard -T\n> > > Turn off AMQP/RabbitMQ support...\n> > > Authenticating mongo...\n> > > /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:417:in`load_missing_constant': Guard is not missing constant DslDescriber! (ArgumentError)\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:80:in `const_missing'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:98:in`send'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:98:in `const_missing'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/guard-0.8.4/lib/guard/cli.rb:154:in`show'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/task.rb:22:in `send'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/task.rb:22:in`run'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor.rb:263:in`dispatch'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/guard-0.8.4/bin/guard:6\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/bin/guard:19:in`load'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/bin/guard:19\n### Guardfile\n\n$rails_rake_task = true\nrequire 'config/boot'\noptions = { :environment => (ENV['RAILS_ENV'] || \"development\").dup }\nENV[\"RAILS_ENV\"] = options[:environment]\nRAILS_ENV.replace(options[:environment]) if defined?(RAILS_ENV)\nrequire 'config/environment'\nrequire 'util/guards/ftp_guard'\n\ngroup 'ftp' do\n     guard 'ftpguard' do\n       watch(%r{^tmp/facbingham/.+.txt}){|m| [521, m, \"CAI\"]}\n       watch(%r{^tmp/facgoodingjms/.+.txt}){|m| [1175, m, \"CAI\"]}\n       watch(%r{^tmp/caiftp/washington.txt}){|m| [31, m, \"CAI\"]}\n       watch(%r{^tmp/owyheeft/.+.txt}){|m| [74, m, \"CAI\"]}\n       watch(%r{^tmp/caiftp/FortHall.txt}){|m| [885, m, \"CAI\"]}\n       watch(%r{^tmp/facbingham/.+.txt}){|m| [1345, m, \"CAI\"]}\n       watch(%r{^tmp/facwhitley/inbox/.+.csv}){|m| [1545, m]}\n       watch(%r{^tmp/facordes/inbox/.+.xml}){|m| [1295, m]}\n     end\nend\n### util/guards/ftp_guard.rb\n\nrequire 'guard'\nrequire 'guard/guard'\nrequire 'mongoid'\nrequire 'sync/import/integration/jms_integration'\n\nmodule Guard\n  class FtpGuard < Guard\n    def start\n      puts \"Starting FtpGuarding\"\n    end\n\n```\ndef stop\n  puts \"Stopping FtpGuarding\"  \nend\n\ndef reload\n  stop\n  start\nend\n\ndef run_all\n  true\nend\n\ndef choose_fac(path_hash)\n  fac_id = path_hash[:facility_id]\n  path = path_hash[:file_name]\n  vendor = path_hash[:vendor]\n  case vendor\n    when \"CAI\"\n      require 'sync/import/jms_vendors/vendor_cai'\n      fork_ftp{\n        jms_i = JmsIntegration.create(:facility_id => fac_id, :file_name =>path, :file_type =>\"txt\", :i_type=> \"ftp\", \n                                      :mapping=>VendorCai::TXT_MAP, \n                                      :jms_procs => VendorCai::PARSE_BLOCK) \n        jms_i.save\n        jms_i.synchronize\n      }\n    when \"1545\"\n      fork_ftp{\n        jms_i = JmsIntegration.create(:facility_id => fac_id, :file_name =>path, :file_type =>\"csv\", :i_type=> \"ftp\")\n        #jms_i.synchronize\n      }\n    when \"1295\"\n      fork_ftp{\n        jms_i = JmsIntegration.create(:facility_id => fac_id, :file_name =>path, :file_type =>\"xml\", :i_type=> \"ftp\")\n        #jms_i.synchronize\n      }\n    else\n      puts \"Hey I am else\"\n  end\nend\n\ndef run_on_change(paths)\n  new_paths = []\n  new_paths << {:facility_id => paths[0], :file_name => paths[1], :vendor=> paths[2]}\n  new_paths.size == 1 ? choose_fac(new_paths[0]) : new_paths.each do |np| choose_fac(np) end\nend\n\ndef fork_ftp(&fblock)\n  fork do\n    yield fblock\n  end\nend\n```\n\n  end\nend\n\nVery funny error description.. Guard is not missing constant DslDescriber! Haha if it is not missing then what is the problem lol!\nIt doesn't effect running my guards as before but I just cannot list my available guards which is somewhat annoying. \n\nKevin\n have you tried to launch guard with bundle exec? `bundle exec guard list`\n I did try bundle exec guard list\n\n[ree-1.8.7-2011.03][KraussMac:~/Documents/git_tygerweb/tygerweb]$ bundle exec guard list\n\n> > > Turn off AMQP/RabbitMQ support...\n> > > Authenticating mongo...\n> > > /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:417:in `load_missing_constant': Guard is not missing constant DslDescriber! (ArgumentError)\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:80:in`const_missing'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:98:in `send'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:98:in`const_missing'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.4/lib/guard/cli.rb:86:in `list'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/thor-0.14.6/lib/thor/task.rb:22:in`send'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/thor-0.14.6/lib/thor/invocation.rb:118:in`invoke_task'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/thor-0.14.6/lib/thor/base.rb:389:in`start'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/guard-0.8.4/bin/guard:6\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/bin/guard:19:in `load'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/bin/guard:19\n\nI then tried netzpirat's idea, but using gem open and it does get me farther along in the file. \n\n[ree-1.8.7-2011.03][KraussMac:~/Documents/git_tygerweb/tygerweb]$ guard -T\n\n> > > Turn off AMQP/RabbitMQ support...\n> > > Authenticating mongo...\n> > > /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:417:in `load_missing_constant': Guard is not missing constant UI! (ArgumentError)\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:80:in`const_missing'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:98:in `send'\n> > >     from /Users/telmate/Documents/git_tygerweb/tygerweb/help/ruby/1.8/gems/activesupport-2.3.4/lib/active_support/dependencies.rb:98:in`const_missing'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/guard-0.8.4/lib/guard/cli.rb:157:in `show'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/guard-0.8.4/lib/guard/cli.rb:154:in`each'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/guard-0.8.4/lib/guard/cli.rb:154:in `show'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/task.rb:22:in`send'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/invocation.rb:118:in`invoke_task'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/thor-0.14.6/lib/thor/base.rb:389:in`start'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/gems/guard-0.8.4/bin/guard:6\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/bin/guard:19:in `load'\n> > >     from /Users/telmate/.rvm/gems/ree-1.8.7-2011.03/bin/guard:19\n\nNow we get this error.  Guard is not missing constant UI!\nAgain with the not missing hehe...\n\nSo finally I changed def show some more adding '::' to all the Guard constant references. \n   def show\n      ::Guard::DslDescriber.evaluate_guardfile(options)\n\n```\n  ::Guard::DslDescriber.guardfile_structure.each do |group|\n    unless group[:guards].empty?\n      if group[:group]\n        ::Guard::UI.info \"Group #{ group[:group] }:\"\n      else\n        ::Guard::UI.info '(global):'\n      end\n\n      group[:guards].each do |guard|\n        line = \"  #{ guard[:name] }\"\n\n        unless guard[:options].empty?\n          line += \": #{ guard[:options].collect { |k, v| \"#{ k } => #{ v.inspect }\" }.join(', ') }\"\n        end\n\n        ::Guard::UI.info line\n      end\n    end\n  end\n\n  ::Guard::UI.info ''\nend\n```\n\nAnd then no errors with listing... \nIf you guys want I can commit and put in a pull request, but w/e is easiest :D\n\nKevin\n  When I write a failing test Guard automatically runs the example. It fails, saying `1 example, 1 failure`. \n\nThen I have to go to the terminal and look what the actual error is.\n\nWhat I would love to see in the growl notification is:\n\n``` ruby\n  1) SchoolsController GET new assigns @school\n     Failure/Error: assigns(:school).should eq(school)\n\n       expected #<School _id: 4e95a3beb5a4820678000001, _type: nil>\n            got nil\n\n       (compared using ==)\n```\n\nAnd I can configure it to be sticky, so I have the explanation right there for a couple of seconds.\n\nThat way I don't need to switch context.\n\nNow this behaviour should only happen when there is just **one** failing test. If there are many, then the current behaviour is the right one.\n\nWhat do you think?\n Why not, we can add that as an option, feel free to make a pull request on guard-rspec.\nI close this issue, because it isn't in the scope of guard (but on guard-rspec).\n I see. So the available space could be a problem on some notifications systems.\n\nI use growl and themes can be configured on a per application basis. So in my case, I would configure growl to use `Music Video` for Guard and the default for everything else. I'll check if that can be configured programatically.\n\nI will check guard-jasmine so see how did you implemented it.\n\nThanks!\n You are right, bad idea :) \n :)\n  Just so people get efficiency out of the box.\n Don't you think it's redundant with each specific platform section? And what about the notification gems?\nI think it'll be confusing, maybe we could just add the `, :require => false if RUBY_PLATFORM =~ /xxx/i` directly in each section.\n In my view, the notification gems are non-essential.  In contrast, these FS gems increase efficiency and performance, so I think people should install them alongside guard itself.\n Yeah, but I think it's more complicate than that, for example `win32console` is needed in Windows too. So a universal section (after each platform section) would be better, with gems needed for all platforms (notifications gem included)\n The README file currently says \"Install the win32console gem if you want colors in your terminal\", so it's non-essential IMHO.  Anyway, do as you wish: having the information somewhere is better than not at all.\n I think there is maybe a solution, I'll propose something later. In the meantime, I've added a sentence in the README that could help a bit: https://github.com/guard/guard/commit/18e0f99a6d1791d836686f356cf55247e11407ad\n I agree, the `:required => false` approach seems the good to me. We should split the current installation section in the README with an Installation section that include directly all listeners gems, plus another sub section for the notifications stuff. It should be way more clear.\n Agreed!\n Great, thanks!\n  These are the changes that I made on this other branch. Which uses the guard options to allow for any object to be the return. \n Ok, excluding my last comment, everything looks good to me! Well done!\n Again sorry for the comments one the coding-style details! ^^ If you're already too annoyed, don't bother and we'll do it ourselves! :P\n No problem Rymai. Thanks for helping me become a better programmer :D\n Also thnx to netzpirat too !\n Thanks all!\n Thanks all, that's awesome!\n Thanks all :D \n  Messages directed at the user should be printed to STDERR because when a guard program's STDOUT is connected to other programs via UNIX pipes, user messages interfere with valid guard output.  Play nice!\n Hi, thanks for this, however I'm not sure I understand the difference between \"user messages\" and \"valid guard output\"?\n\nThe thing is you print all Guard's output to STDERR, shouldn't there be only the \"error\" messages printed to STDERR?\n\nMaybe you can describe a bit more with examples what was the issue and how this pull-request resolves it? :)\n\nThanks.\n I use Guard's directory watching abilities in [this simple script](https://github.com/sunaku/testr/blob/master/bin/testr-herald), whose STDOUT is consumed by a different program further downstream on a UNIX pipeline.  The problem is that Guard is emitting the following error/warning messages to STDOUT instead of to the more suitable STDERR:\n\n```\nPlease install rb-inotify gem for Linux inotify support\nUsing polling (Please help us to support your system better than that).\n```\n\nThis interferes with the downstream processing of my simple wrapper script's actual output.\n You might ask: \"why don't you install the suggested rb-inotify gem to avoid getting that Guard warning?\"  The reason is that such a task can only be performed by the end user who uses my scripts; I have no control over their machines.  And when Guard's warning is printed to STDOUT, it is silently consumed by my downstream script and the end user never sees it.  In contrast, if Guard printed warnings to STDERR, the end user _would_ see them!\n Ok I see the point, but Guard doesn't print only warnings (for example [here](https://github.com/guard/guard/blob/master/lib/guard.rb#L182), what do you think we should we do with them?\n I would print those to STDERR also.  They are meant for the user, not programs consuming Guard's actual output.\n\nThink of STDERR as a global message bus (such as growl notifications) that is simultaneously available to all programs in a UNIX pipeline.  You can use them to notify the user instantly from anywhere in the pipeline.  Also, because it is global, you should prefix your output with the program name:\n\n``` ruby\nSTDERR.puts \"guard: some message here\"\n# or, an even shorter way to do it:\nwarn \"guard: some message here\"\n```\n Well said.  Going further, since the purpose of `UI` is to convey Guard diagnostics, perhaps a [Logger](http://www.ruby-doc.org/stdlib/libdoc/logger/rdoc/Logger.html) connected to STDERR could replace `UI` entirely:\n\n``` ruby\nUI = Logger.new(STDERR)\n```\n Does a color implementation really belong in Guard?  I would use a [different library](http://flori.github.com/term-ansicolor/doc/index.html) for that.\n True, that can be disheartening.  I've dealt with my fair share of such cases and, in the end, learned to cope by just using my own fork as the \"official\" repository for my own projects.  In this case, @flori seems to be active on his other projects, so there's a good chance he would be willing to look at [term-ansicolor's pending issues](https://github.com/flori/term-ansicolor/issues).\n Yeah I totally agree on what @netzpirat, but if you want to change that I see no problem about it. Maybe we can use https://github.com/defunkt/colored, feel free to send another pull request.\nIn the meantime, I merge this one. Thanks!\n It's possible to switch of coloring globally by calling\n    Term::ANSIColor::coloring = STDOUT.isatty\nat the beginning of your script for exactly this use case, piping to other programs.\n Hey guys,\n\nsorry I'm a bit late but I don't feel comfortable with writing what's not diagnostic to me to STDERR. Take for example the RSpec guard: it runs specs and display the summary. I agree that the main process here is the specs that are run, BUT if I'm not there and can't see a visual (or sound, or whatever signal that my senses can feel) output, it's worthless (unless I have a script that use the return value and run something else or whatever), so I think in this case it's not diagnostic.\n\nThe problem here is simply that messages outputted by Guard itself (for instance by `Guard::Listener(::Darwin)`) should be only warning/error/deprecation/debug and should be outputted to STDERR. BUT guards implementation should be able to choose whether they want to output warning/error/deprecation/debug messages (=> STDERR) or normal/info/actually-useful messages (=>STDOUT). The thing with the new implementation is that guards who want to output to STDOUT will use `puts` (this is fine) but in doing so they now bypass any Guard's control/decoration/whatever. We're losing control guys!!!!!! :P\n\nWe should definitely keep `UI.info` => STDOUT in order to keep guards under control! :D\n\nlol, do you get what I'm trying to say? ^^\n\nRegarding the color issue, I agree to externalize it.\n I know that STDERR is by default written to my console, that's not my point here, it's not because users will not see anything changing that it's the right decision.\n\nRegarding the RSpec example, I don't agree because if it's diagnostics it means that I can skip these messages entirely. But I don't because my development rely on this, even if no other program is using this output.\n\nRegarding the \"losing control\" joke (in the first place), what I meant is that currently guards are advised to use the `Guard::UI` class to output messages to the console, in that sense we have some control (for example if `ENV['GUARD_ENV']` is true, we don't output anything), and yes I know I'm free with Ruby, come on Michael! ;)\n Ok, I'll discuss that face to face with @rymai tomorrow :) Thanks for your feedback @netzpirat\n No problem Michi! No big deal, really!\n\nIt's just that it seems to me that @sunaku has proposed a solution that fixes his particular problem, that's fine but there were other solutions to it, that could maybe be better. We'll discuss that tomorrow with **the boss**. :P\n In my project I'm using guard to some standard stuff SASS ,Livereload etc. I'm trying to capture output to change it a little bit to fit my project. Because of using STDERR insted of $stderr I'm unable to capture output from Guard.start method using popular method:\n\n```\ndef capture_stderr\n  previous_stderr = $stderr\n  $stderr = StringIO.new\n  yield\n  $stderr.string\nensure\n  $stderr = previous_stderr\nend\n```\n\nI can't change $stderr to STDERR in this method because STDERR is a constant. I would change STDERR to $stderr everywhere in the Guard. This is quick fix.\n\nIn more elegant way would be nice to have module with all Guard messages and overwrite it in my own project. What do you think?\n I always in favor of the elegant way, @guard/core-team what do you think?\n You have right. But I think this is rather solution for libraries which is using guard and will be implementing own solutions. However in future major version guard can force plugins to implement some kind of interface or abstract class to messages. \n\nIf you know better solution to customize terminal or notification output please let me know. Unfortunately method capture_stderr which i mention before can only hide output. I don't have capabilities to redirect and change it. \n You have right, probably listen will be better for my project. \n  Growl 1.3 doesn't include currently growlnotify itself, and though growlnotify from 1.2.2 still works, it's using the older API and not GNTP. GNTP would allow for compatibility with \"growl\" for windows and linux as well, which neither of the suggested options will work with.\n\nThis is really just a placemarker issue ATM and more of a feature request and \"note to self\" than a bug. I'm thinking of tackling this one myself after porting growltunes.\n Yep, the `growl_notify` gem has already been updated to support Growl 1.3 but I think we'll need to say goodbye to the `growl` gem. \n I think you should look at [ruby_gntp](https://github.com/snaka/ruby_gntp) for 1.3\n Ok very interesting, so because of [different](https://github.com/guard/guard-spork/issues/37) [issues](https://github.com/guard/guard-rspec/issues/40#issuecomment-2368409) with `growl_notify` we could replace it by `ruby_gntp` for Growl 1.3 and keep `growl` gem for Growl 1.2. Right?\n I think so.\n Thanks all. It looks like does work for me (using the git repo).\n with Growl 1.2 it seems to not working, I got:\n\n```\n/Users/Thibaud/Codes/test/vendor/ruby/1.9.1/gems/ruby_gntp-0.3.4/lib/ruby_gntp.rb:155:in `initialize': Connection refused - connect(2) (Errno::ECONNREFUSED)\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/gems/ruby_gntp-0.3.4/lib/ruby_gntp.rb:155:in `open'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/gems/ruby_gntp-0.3.4/lib/ruby_gntp.rb:155:in `send_and_recieve'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/gems/ruby_gntp-0.3.4/lib/ruby_gntp.rb:90:in `register'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/bundler/gems/guard-10f1542ac3fc/lib/guard/notifier.rb:242:in `try_ruby_gntp'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/bundler/gems/guard-10f1542ac3fc/lib/guard/notifier.rb:200:in `require_growl'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/bundler/gems/guard-10f1542ac3fc/lib/guard/notifier.rb:37:in `turn_on'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/bundler/gems/guard-10f1542ac3fc/lib/guard.rb:62:in `setup'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/bundler/gems/guard-10f1542ac3fc/lib/guard.rb:130:in `start'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/bundler/gems/guard-10f1542ac3fc/lib/guard/cli.rb:68:in `start'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/bundler/gems/guard-10f1542ac3fc/bin/guard:6:in `<top (required)>'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/bin/guard:19:in `load'\n    from /Users/Thibaud/Codes/test/vendor/ruby/1.9.1/bin/guard:19:in `<main>'\n```\n\n@netzpirat are you sure that's working with Growl >= 0.7 ?\n I have the `Listen for incoming notifications` checked and I have an open port:\n\n``` bash\n$ lsof -i | grep LISTEN | grep -i growl\nGrowlHelp  354 Thibaud    8u  IPv4 0xffffff8027d6da40      0t0  TCP *:23052 (LISTEN)\n```\n\nBut I got the `Connection refused - connect(2) (Errno::ECONNREFUSED)` issue :(\n Yep, that's weird. We can wait to see if I'm the only one with that error.\n Your DSL sounds good. Great stuff!\n ...sorry guys. I haven't been paying much attention. I really should have mentioned something about the history of GNTP, and that technically the \"Growl Network Transport Protocol\" was used by growl for windows long before it was solidified as a shared protocol. Technically there are still interoperability problems with forwarding from growl for windows to growl for mac due to differences in encryption and password handling (though this is being worked on, and forwarding the other way works fine).\n\nDue to not having been updated for so long, I wasn't even expecting ruby_gntp to work as-is. It's good to know that it does. I'm a big fan of being lazy. ;)\n GrowlNotify 1.3 released as of 5 minutes ago: http://growl.cachefly.net/GrowlNotify-1.3.zip\n I see `ruby_gntp` is now being promoted as an option in the README, but it's not triggering notifications for me. My specs:\n- OS X 10.7.2\n- Ruby 1.9.2-p290\n- guard 0.8.4\n- guard-rspec 0.5.0\n- guard-spork 0.3.1 (w/ spork 0.9.0.rc9)\n\nI even installed the just-released GrowlNotify 1.3, but I'm still not getting notifications. Does `ruby_gntp` need to be updated to work with Growl 1.3 before this will work? I'm wondering if I was just mislead by the README.\n so... the growl 1.3 SDK isn't quite final and the current tree doesn't build for 10.6 (XPC services support was added and there's a temporary weak linking failure going on). However, once that is resolved, there's a fairly glorious new feature that guard might be interested in taking advantage of: mist. It allows for basic notifications to just work regardless of whether or not growl is installed, with the full featureset available via growl when it is installed. It'd let guard have notification support on macos 10.6+, period, always.\n\nThe growl 1.3 SDK is technically available in binary form via the growl version detective now, but the goal is to have growl 1.3.1 out before the end of the month. Getting GrowlTunes XPC-safe and ScriptingBridge-clean is a bit more of a task than I originally assumed, but I'd like to write an extension that makes use of the growl framework directly in the reasonably-near future (doesn't seem any of the existing libs do...).\n\n...I wonder how painful it'll be to create an extension for macruby, 1.9, and 1.8 at the same time. Or use FFI to interface with ObjC code, which _might_ be less painful. Might be fun. ;)\n\nOf course, that'll make guard's growl support even more of a complicated grid, the extension would be mac-only, and it hasn't been written yet. ^^;\n  Hey, \n\nI wanted to do something like this \n\n``` ruby\nwatch(%r{^tmp/facbingham/.+\\.txt}){|m| {:file_name => m, :other_param => \"CAI\"}}\n```\n\nbut I had to settle for\n\n``` ruby\nwatch(%r{^tmp/facbingham/.+\\.txt}){|m| [521, m, \"CAI\"]}\n```\n\nand then in my ftp_guard.rb\n\n``` ruby\ndef run_on_change(paths)\n    new_paths = []\n    new_paths << {:facility_id => paths[0], :file_name => paths[1], :vendor=> paths[2]}\nend\n```\n\nand still you can only return strings into these values. \nSo this branch you can return anything with a block.\nMaybe I am missing something. \nThanks for making such a great gem! \n Hi,\n\nthis feature _could_ be interesting but I'm not sure I see the big picture of what you're trying to achieve. Could you explain us what is your initial goal with `ftp_guard.rb`?\n\nRegarding the implementation itself: the problem is that you removed the old specs, hence removing non-regression checks! In fact, I'm almost certain that your changes will break many projects that are currently using Guard. \n Rymai, \n\n Thanks for the response. ftp_guard.rb is my guard which looks at my ftp server which has many users from different facilities. Each facility has its own ftp user account w/ home folder etc. I monitor each home folder for new files that the users can dump in. These files are then parsed and populate our database. I would like to send more information with each file path. This makes it easier for the next script to have the correct data structure. \nFor clarity here are the two files I am using. \n\n### ftp_guard.rb\n\n```\nrequire 'guard/guard'\nrequire 'mongoid'\nrequire 'sync/import/integration/jms_integration'\n\nmodule ::Guard\n  class FtpGuard < ::Guard::Guard\n    def start\n      puts \"Starting FtpGuarding\"\n    end\n\n    def stop\n      puts \"Stopping FtpGuarding\"  \n    end\n\n    def reload\n      stop\n      start\n    end\n\n    def run_all\n      true\n    end\n\n    def choose_fac(path_hash)\n      fac_id = path_hash[:facility_id]\n      path = path_hash[:file_name]\n      vendor = path_hash[:vendor]\n      case vendor\n        when \"CAI\"\n          require 'jms_vendors/vendor_cai'\n          fork_ftp{\n            jms_i = JmsIntegration.create(:facility_id => fac_id, :file_name =>path, :file_type =>\"txt\", :i_type=> \"ftp\", \n                                          :mapping=>TXT_MAP, \n                                          :jms_procs => PARSE_BLOCK) \n            jms_i.save\n            jms_i.synchronize\n          }\n        when \"1545\"\n          fork_ftp{\n            jms_i = JmsIntegration.create(:facility_id => fac_id, :file_name =>path, :file_type =>\"csv\", :i_type=> \"ftp\")\n            #jms_i.synchronize\n          }\n        when \"1295\"\n          fork_ftp{\n            jms_i = JmsIntegration.create(:facility_id => fac_id, :file_name =>path, :file_type =>\"xml\", :i_type=> \"ftp\")\n            #jms_i.synchronize\n          }\n        else\n          puts \"Hey I am else\"\n      end\n    end\n\n    def run_on_change(paths)\n      new_paths = []\n      new_paths << {:facility_id => paths[0], :file_name => paths[1], :vendor=> paths[2]}\n      new_paths.size == 1 ? choose_fac(new_paths[0]) : new_paths.each do |np| choose_fac(np) end\n    end\n\n    def fork_ftp(&fblock)\n      fork do\n        yield fblock\n      end\n    end\n\n  end\nend\n```\n\n### Guardfile\n\n```\n# A sample Guardfile\n# More info at https://github.com/guard/guard#readme\n\n$rails_rake_task = true\nrequire 'config/boot'\noptions = { :environment => (ENV['RAILS_ENV'] || \"development\").dup }\nENV[\"RAILS_ENV\"] = options[:environment]\nRAILS_ENV.replace(options[:environment]) if defined?(RAILS_ENV)\nrequire 'config/environment'\nrequire 'util/guards/ftp_guard'\n\ngroup 'ftp' do\n     guard 'FtpGuard' do\n       watch(%r{^tmp/facbingham/.+\\.txt}){|m| [521, m, \"CAI\"]}\n       watch(%r{^tmp/facgoodingjms/.+\\.txt}){|m| [1175, m, \"CAI\"]}\n       watch(%r{^tmp/caiftp/washington.txt}){|m| [31, m, \"CAI\"]}\n       watch(%r{^tmp/owyheeft/.+\\.txt}){|m| [74, m, \"CAI\"]}\n       watch(%r{^tmp/caiftp/FortHall.txt}){|m| [885, m, \"CAI\"]}\n       watch(%r{^tmp/facbingham/.+\\.txt}){|m| [1345, m, \"CAI\"]}\n       watch(%r{^tmp/facwhitley/inbox/.+\\.csv}){|m| [1545, m]}\n       watch(%r{^tmp/facordes/inbox/.+\\.xml}){|m| [1295, m]}\n     end\nend\n```\n\nSo as you can see, I have a work around and there are many ways to work arounds to this problem, but it would still be nice to allow a person using a block to handle their own return. I would be more than happy to fix any issues with the spec or improve upon this existing branch. This how I would like to use watch\n\n```\nwatch(%r{^tmp/facordes/inbox/.+\\.xml}){|m| {:file_name => m, :other_param => \"CAI\", :facility_id => 521, :some_block=> lambda{|x| puts \"here is another block\" + x}, :other_crap=>'crap'}}\n```\n\nBut the possibilities are endless.\nThanks again!\n Hey, \nThank you for pointing these issues out. This is my first time doing a pull request. It is a lot of fun! It is interesting how tight the code needs to get to be put out into the world. Hopefully these changes will be more to your liking. It should allow for a decent compromise. \n Hi,\n\nI think we need a deeper reflection for such functionality to maybe provide a very adaptable solution to this kind of problems. Because currently, everything has been thought with the fact that we always deal with paths. I agree to make Guard more universal in its use cases, but we will need a more global thinking of what should be changed and how to make these changes very adaptable yet backward-compatibles.\n\nWhat do you think @netzpirat, @thibaudgg, @earlonrails?\n And I agree with @netzpirat to add the flag to the guard instead of the watcher (it's also more clean, even if it removes some flexibility but I think it's better to not have guards that can accept both only strings and any objects, at least for now).\n I just cleaned up the watcher version, but I also made a new branch with all the params on the guard instead of the watcher. Redid part of the spec and it is completing with no errors. Should I open a new pull request with that branch or how should I do this? \n https://github.com/earlonrails/guard/tree/return_on_guard\n Hey! Thanks for that, I've made two comments on your last commit. And yes I think it's better to open a new pull-request (I doubt it's possible to change the origin branch of a pull-request that already exists?!), and we'll close this one.\n The last up-to-date pull-request is at #157! Thanks!\n  I thought it might be easier to use a Mutex for the locking between the listener/interactor threads.  Take a look and let me know what you think.  Thanks for the awesome tool!\n\n/Brian\n Awesome, thanks!\n Sadly it seems to have [an issue](https://github.com/guard/guard/issues/149) with the mutex way. Interactor should be locked more aggressively (like before) don't you think?\n Good catch!  I didn't anticipate that the interactor thread would continue to capture input from stdin, but it looks like that's what is happening.  I'll be submitting another pull request for you momentarily.\n  The new Interactor was taking way more CPU than it should, simply because the loop in the thread was so tight that not even test UIs could update quickly (the very very slow progress bar while using Hydra was my hint something was up). This adds a `sleep 0.1` to the Interactor thread, the same sleep time as the Listener's thread, in order to prevent Guard itself from hijacking a CPU to itself while running tests.\n  Hi,\n\nI'm not sure if this is the right place to post this, but here's what's happening:\n\nI'm running Mac OS X Lion, with RVM and Ruby 1.9.2, Rails 3.1, and Guard (and guard-test, and ruby-debug19). When I debug my app, sometimes (most of the time), the standard input becomes EXTRAORDINARILY slow. I'll type something into the debugger, and it'll miss several keys, and print others out slowly. It's virtually unusable.\n\nI've switched to Ruby 1.8.7, no difference. When I simply run 'rake test', everything appears normal.\n\nAny ideas?\n There was a [pull request](https://github.com/guard/guard/pull/137) that fixes an issue with ruby-debug, although in that specific case all input was eaten, but perhaps it also fixes your issue. The mentioned fix isn't released yet, so can you please give Guard on the master branch a try, by using it directly from the Git repo from your `Gemfile`:\n\n```\ngem 'guard', :git => 'git://github.com/guard/guard.git'\n```\n Okay, I upgraded my local guard gem to 0.8.0, and it appears to be fixed.\n  I'm using Guard + Spork + Rspec to run the test.\nWhen I insert debugger instruction inside my rspec test, guard 0.7.0 failed to read input from keyboard.\nGuard 0.6.3 still reads fine.\nI'm running MRI 1.9.2-p290. The problem happen with both Mac OSX and Ubuntu.\n This should be fixed at the master branch. Can you please try it by adding\n\n```\ngem 'guard', :git => 'git://github.com/guard/guard.git'\n```\n\nto your `Gemfile`?\n Have you tried using Guard from the master branch?\n The problem is fixed on the master. When will you release it into next version?\n I think last time I didn't test it properly to confirm the problem fixed (since I could have both gem from master and 0.6.3 installed and by-some-way run 0.6.3 guard instead of master-branch one)\nNow the problem still persist on 0.8.4\n (phuong-nguyen and phuongnd08 is the same guy)\n Please can you try with guard 0.8.2 to see if you still get this problem. Thanks\n I'm still running into this problem with 0.8.2. When spork run into a debugger statement, if I try to enter\n1234567891234567891234567898 into the console, then I actually see: 23456789123456723456 Few key strokes is missing here. Out of curious, are you changing any dependency between 0.6.3 and 0.7 (and higher) that may cause such problem? Since it's kinda weird.\n From guard 0.8 we have introduced a new [Interactor that use `$stdin.gets`](https://github.com/guard/guard/blob/master/lib/guard/interactor.rb#L21) maybe it comes from here.\nIs it the same without Spork?\n I have experienced such problem from 0.7.0. I don't know how to test this problem without spork.\n Comment out 'Spork' and all `--drb` cli options for RSpec/Cucumber in your Guardfile. Maybe you can give us your Guardfile / Gemfile and describe more precisely what you want doing. \n Basically, what I want to do is pretty simple. It just spork + guard + guard-spork. \nHere's my Gemfile:\n\n``` ruby\nsource 'http://rubygems.org'\n#source 'http://192.168.25.249'\n\ngem 'rails', '3.1.0'\ngem 'mysql2'\n\ngem 'devise'\ngem 'cancan'\ngem 'haml'\ngem 'coffee-filter'\ngem 'jquery-rails'\ngem 'airbrake'\ngem 'settingslogic'\ngem 'kaminari'\n\ngroup :assets do\n  gem 'sass-rails', \"~> 3.1.0.rc\"\n  gem 'coffee-rails', \"~> 3.1.0.rc\"\n  gem 'uglifier'\n  gem 'compass', '>= 0.11.beta.7'\n  gem 'compass-susy-plugin', :require => 'susy'\n  gem 'fancy-buttons'\nend\n\ngroup :development do\n  gem 'haml-rails'\n  gem 'hpricot', :require => false\n  gem 'ruby_parser', :require => false\n  gem 'capistrano', :require => false\nend\n\ngroup :development, :test do\n  gem 'rspec-rails'\n  gem 'ruby-debug19', :require => 'ruby-debug'\n  gem 'machinist', '>= 2.0.0.beta2'\n  gem 'ruby-prof'\nend\n\ngroup :test do\n  gem 'capybara'\n  gem 'shoulda', \">= 3.0.0.beta2\"\n  gem 'spork', '~> 0.9.0.rc3'\n  gem 'database_cleaner'\n  gem 'rspec2-rails-views-matchers'\nend\n\ngroup :guard do\n  gem 'guard', '0.8.4'\n  gem 'guard-spork'\n  gem 'guard-shell'\n  gem 'guard-rails'\n  gem 'guard-bundler'\nend\n```\n\nHere my Guardfile\n\n``` ruby\ngroup :drb do\n  guard 'spork', :cucumber => false, :rspec_env => { 'RAILS_ENV' => 'test' } do\n    watch('config/application.rb')\n    watch('Gemfile.lock')\n    watch('config/environment.rb')\n    watch('config/database.yml')\n    watch('app/models/user.rb')\n    watch(%r{^config/environments/.+\\.rb$})\n    watch(%r{^lib/.+validator\\.rb$})\n    watch(%r{^config/locales/.+\\.yml$})\n    watch(%r{^config/initializers/.+\\.rb$})\n    watch('spec/spec_helper.rb')\n  end\nend\n```\n\nWhen I run spec inside spork, sometimes I just want to put a debugger instruction inside a spec to see what happen. \nFor example, this:\n\n``` ruby\nit \"should validate presence of display_name\" do\n  debugger\n  user = User.new\n  user.valid?\n  user.errors[:display_name].should == [\"can't be blank\"]\nend\n```\n\nWhat I expect is that I can control ruby-debug inside the spork console. In fact, I still can. But for every 10 characters I typed into the console, only 6 or 7 of them received by ruby-debug. The problem doesn't happen with 0.6.3.\n Just to rectify what @thibaudgg said before, it's from the 0.7 version that we removed the signals. ;)\n\nIs everything ok if you don't use Spork?\n Ok, I think I have understand your problem. Because that you're not using guard-rspec, the new Interactor is still turn on and gets $stdin inputs. Please try with guard-rspec, it'll \"turn off\" the Interactor during your spec execution. \n Are you saying only installing guard-rspec will fix my problem? Or I have to create a guard for that? Isn't it possible for me to turn off interactor with something like: Interactor.turn_off\n You need to add `guard-rspec` in your Gemfile and run `bundle exec guard init rspec` to add it in your Guardfile. After that guard will automatically run your spec when you save a file (and turn off the Interactor when specs are running).\nAt the moment there's no way to turn off the Interactor at guard level (but we could add that)\n I'd rather not doing that. Running rspec automatically more often than not just steps into my way.\nWould like to turn interactor off in future guard version. Right now just stick with 0.6.3\nJust a thought that by adding interactor, guard is actually compromising the guarded program. What I expect is `guard -g drb` should just the same as `spork` except guard can restart `spork` when files are changed, or created or deleted from my directory.\n It's never too often to run your specs! ;)\n\nThat said, feel free to submit a pull-request if you'd like to add a new feature to Guard.\n There are cases when it not convenient to auto run your spec.\nGiven I have method A that is involved in 10 specs located in the same spec\nfile. Suddenly, A turns weird and I need to debug A when condition X (which\ndescribe in spec at line 18) is met, so I put a debugger into A. Normally, I\nwould run that single spec and start debugging my code right away. But if\nguard-rspec is taking place, then I will have to resume the spec several\ntimes before it jump to spec at line 18, and then have to resume more  times\njust to finish the test run. It's then not desirable. That's not to say\nguard-rspec not great stuff, it just doesn't fit into my way.\n\nBy the way, I'm here just to submit and _talk_ about the issue. I definitely\nwant to improve guard, but sometime making such a fix (which is to turn off\na new feature) can be done easily by a guy who understand guard better. And\nI'm happy with guard 0.6.3 any way. :)\n\nOn Wed, Oct 12, 2011 at 6:51 PM, Rmy Coutable <\nreply@reply.github.com>wrote:\n\n> It's never too often to run your specs! ;)\n> \n> That said, feel free to submit a pull-request if you'd like to add a new\n> feature to Guard.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/142#issuecomment-2378312\n No problem, we will discuss this feature with the team, thanks for your feedback!\n\nBy the way, do you know that you can filter the specs to run with the RSpec tag's feature?\n\nExample: \n\nAdd the following to your `spec_helper.rb`:\n\n``` ruby\nRSpec.configure do |config|\n  config.filter_run :focus => true\n  config.run_all_when_everything_filtered = true\n  config.treat_symbols_as_metadata_keys_with_true_values = true\nend\n```\n\nand you can then filter the specs you want to run like this:\n\n``` ruby\nit \"example I'm working now\", :focus do\n  # your spec\nend\n```\n\nRegards,\nR\u00e9my\n Full doc here: https://www.relishapp.com/rspec/rspec-core/docs/filtering/inclusion-filters\n Interesting tips. Thanks.\n\nOn Wed, Oct 12, 2011 at 10:29 PM, Rmy Coutable <\nreply@reply.github.com>wrote:\n\n> Full doc here:\n> https://www.relishapp.com/rspec/rspec-core/docs/filtering/inclusion-filters\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/142#issuecomment-2380515\n I have [added a cli option](https://github.com/guard/guard/commit/5111e8594e68d307fb03f6723547c794641a37f2) to completely turn off any Guard Interaction. Can you please try it by adding\n\n```\ngem 'guard', :git => 'git://github.com/guard/guard.git'\n```\n\nto your `Gemfile` and launch guard with:\n\n```\nbundle exec guard -i\n```\n It works. I can also use guard-spork 0.3.1 now. Thanks.\n I came upon this page when having similar problems with Ruby debug. Someone told me to simply use the Pry gem instead (http://pry.github.com), and it's really awesome! You guys should check it out.\n  Guard closes when there is a syntax error. \n\n---\n\n**Situation**\n\nWhen running guard (`guard`), it will run smoothly until it comes across a syntax error. Which causes it to throw the line that the syntax was caused on and terminate. \n![Terminates and tells me this](http://i.imgur.com/iYBkK.png)\n\n**Workaround**\nI have been able to run `bundle exec guard` and it seems to keep going through even with syntax errors. It'll complain about the line and then once I fix it, it'll go back to being awesome. \n\nThe problem with this is that it doesn't notify me through Growl or rb-fsevent. \nI might be wrong but I'm under the impression that it's better to run `guard` because it serves better on the CPU and ram compared to `bundle exec guard`. \n\n---\n\nIf this is a `guard-sass` issue, let me know. I can just post it there.\n Oh nope. I can easily use `growl` and `rb-fsevent`. I'll just use `bundle exec guard`. \n\nThanks :)\n  Hey thibaudgg here's my work on watching deleted/moved files.\nD.\n And what about the specs? :)\n So I've done the merge but I'm getting to FAILS on specs see the following gist https://gist.github.com/e887abe38bcd35081a35\n all specs are passing now.\n I'll take a look.\nd.\n\nOn Wed, Sep 14, 2011 at 12:44 AM, Thibaud Guillaume-Gentil <\nreply@reply.github.com>wrote:\n\n> It seems there's still two issues with the jruby specs on Travis :( (Have\n> you an idea why?)  http://travis-ci.org/#!/limeyd/guard\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/pull/136#issuecomment-2090304\n\n## \n\ndarren pearce  |  interactive designer  |  o:403.475.4545  |  m:403.630.6258\n as for the option name how about this for explict --watch-moves-deletions\n Perfect for me !\n\nSent from my iPhone\n\nOn 14 sept. 2011, at 19:10, Darren Pearce reply@reply.github.com wrote:\n\n> as for the option name how about this for explict --watch-moves-deletions\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/pull/136#issuecomment-2095435\n That would be for sure :) and I'd be happy to change it as it does read\nbetter.\nd.\n\nOn Wed, Sep 14, 2011 at 1:20 PM, Thibaud Guillaume-Gentil <\nreply@reply.github.com>wrote:\n\n> Maybe `--watch-moves-and-deletions` would be even more precise?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/pull/136#issuecomment-2096964\n\n## \n\ndarren pearce  |  interactive designer  |  o:403.475.4545  |  m:403.630.6258\n How about `--watch-all-modifications` and then use `-A` or `-M` as  `-w` is\nused for watchdir\nthoughts.\n\nOn Thu, Sep 15, 2011 at 1:15 AM, Thibaud Guillaume-Gentil <\nreply@reply.github.com>wrote:\n\n> Yep, I think we can go for `--watch-moves-and-deletions` and use the `-W`\n> alias rather than `-D` to not be focus only on the deleted files.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/pull/136#issuecomment-2101685\n\n## \n\ndarren pearce  |  interactive designer  |  o:403.475.4545  |  m:403.630.6258\n Yeah you're right, it's way better IMO! `-A` seems good for it too. Let's wait for @thibaudgg's opinion!\n done and done and  all code is merged.\n I'm looking as it's passing locally using jruby1.6.4 on osx lion\n When I analysed the Guard spec suite on Travis for JRuby, I spent most of the time to understand [the ctime bug on JRuby](http://jira.codehaus.org/browse/JRUBY-6040). All other specs were fixed by giving more time before evaluate the result (Just add another sleep or increase the wait time for an exisiting sleep). I believe that Travis has very bad file IO and also CPU is not that fast. This leads to exactly the problem that the specs are passing locally and fails on Travis.\n I'm feeling a bit sick right now, so this is the reason why I **try** to avoid coding, have a good rest and become healthy again. When I feel ok on Monday, I could give it a shot.\n I tried reducing the sleep locally and it did raise the same errors as per jruby on travis so the question is we increase the sleep for those failing specs? \n I just refactored the listener spec [sleep time to be configurable](https://github.com/guard/guard/commit/5de287ba95af056dba57dc44c702fd226b9ac6be)  through an environment variable and set it to [2 seconds on Travis](https://github.com/guard/guard/commit/8365d7c429a349c8031b86020dd3b7b6b0a06e27). Can you please merge these changes, so we see if this generally solves some timing problems we have with the specs on Travis.\n Forget about the previous comment, there is definitely something wrong with our specs: After I increased the sleep time on Travis, more specs have failed on other Rubies as well. This can be reproduced locally by setting a longer sleep time:\n\n```\nexport GUARD_SLEEP=3\nrake spec:portability\n```\n\nFrom my understanding, increasing the sleep time should not have an influence on the outcome of the specs, but it does. I have to spend some more time to dig into the code to better understand why this happens. But this is not _your_ problem, it's a problem of the Guard specs, so _we_ should take care of it.\n\nI suggest that you just update your branch with the latest changes from master (especially the YARD-docs, so please think about it if something special should be documented), and then we'll merge you branch into master.\n\nI will spend some time next week on the spec suite and see what I can do.\n Ok everything is merge, I had a conflict with run_on_change so code was moved to execute_supervised_task_for_all_guards, please review.\n Looks good to me now. We will wait for the specs to pass though, maybe wait for @netzpirat see if he has any idea on how to solve this...\n I've merge it into the [guard/run_on_deletion](https://github.com/guard/guard/commits/run_on_deletion) branch and not into the master branch, as GitHub wrongly reports here. Next is fixing the specs on Travis before merging to master...\n Interesting bug! :P Good luck Michael, and THANK YOU!\n Wow, really strange. I mean I see my commits here on GitHub on the `run_on_deletion` branch and not in master. What have I done?\n Oh, I see! I branched after I made my commits and I have count the commits wrongly when reseting HEAD~2. How stupid is that :P\n\nSo I work today directly on master to fix JRuby on Travis.\n  glad to see that it's been merged :) ping if you need help testing. \n\nD. \n\n---\n\ndarren pearce < interactive\nt:403.475.4545, c:403.630.6258\n\nOn Wednesday, 28 September, 2011 at 4:02 AM, Thibaud Guillaume-Gentil wrote:\n\n> Ok, no problem :)\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/pull/136#issuecomment-2223240\n  The suggested Mac OS X tool (growl_notify) does not work with rubinius due to an bug in rb-appscript. \n\nSwitching the the second option (growlnotify cli tool and growl gem) works around this.\n A README mention may or may not be necessary.\n\nI just figured that I'd post this here so that the work-around was documented for anyone else that runs into the issue :)\n Thanks, there's now a page [in the wiki](https://github.com/guard/guard/wiki/Use-growl_notify-or-growl-gem) too.\n I've had trouble with rb-appscript in MRI 1.9.2 as well that led me back to the `growl` gem for Guard -- here's hoping rb-appscript library makes the jump to the next generation of Rubies.\n  I just installed the growl notify add-on and installed the growl gem. I am now getting growl notifications for my `guard-pow` and `guard-jasmine` gems, but I am still getting the `\"please install growl\"` errors for both `guard-rspec` and `guard-cucumber`. So it seems that the growl support is hit or miss based on the different recipes?\n\nIt feels weird that this is the way guard works (if it actually does work like this), wouldn't it be better to support growl through `guard` and not have submodules show up (false) errors?\n\n**But back to the main problem:** How do I solve this? Obviously growl is installed and working (I can see \"Guard\" in the applications list of growl, and jasmine is outputting stuff to growl), but I still see the errors for cucumber and rspec.\n Thank you, I need to get in the habit of using `bundle exec` more often. It works now.\n  Hi,\n\nI'm not sure if this is the right place to post this, since it is related to the installation of `growl_notify`. However, it concerns guard because:\n1. Guard reccomended that I install `growl_notify`\n2. Guard stopped working after `growl_notify` was installed.\n\nFirst, guard told me to install the `growl_notify` gem:\n\n```\n$ guard\nPlease install growl or growl_notify gem for Mac OS X notification support and add it to your Gemfile\n```\n\nSo I followed its instructions and installed `growl_notify`\n\n```\n$ gem install growl_notify\n```\n\nAfter the installation, guard does not work anymore:\n\n```\n$ guard\n/Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/rb-appscript-0.6.1/lib/_appscript/terminology.rb:419:in `rescue in aetes_for_app': Can't get terminology for application (AEM::Application.by_path(\"/Library/PreferencePanes/Growl.prefPane/Contents/Resources/GrowlHelperApp.app\")): EventError (RuntimeError)\n    OSERROR: -609\n    MESSAGE: Connection is invalid.\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/rb-appscript-0.6.1/lib/_appscript/terminology.rb:408:in `aetes_for_app'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/rb-appscript-0.6.1/lib/_appscript/terminology.rb:430:in `tables_for_app'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/rb-appscript-0.6.1/lib/appscript.rb:61:in `connect'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/rb-appscript-0.6.1/lib/appscript.rb:159:in `reference_by_name'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/rb-appscript-0.6.1/lib/appscript.rb:633:in `method_missing'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/growl_notify-0.0.1/lib/growl_notify.rb:26:in `register'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/growl_notify-0.0.1/lib/growl_notify.rb:16:in `config'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.6.3/lib/guard/notifier.rb:109:in `require_growl'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.6.3/lib/guard/notifier.rb:17:in `turn_on'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.6.3/lib/guard.rb:21:in `setup'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.6.3/lib/guard.rb:32:in `start'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.6.3/lib/guard/cli.rb:17:in `start'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/gems/guard-0.6.3/bin/guard:6:in `<top (required)>'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/bin/guard:19:in `load'\nfrom /Users/josh/.rvm/gems/ruby-1.9.2-p290/bin/guard:19:in `<main>'\n```\n\nI have temporarily fixed the issue by uninstalling `growl_notify` and `rb-applescript`:\n\n```\n$ gem uninstall growl_notify\n$ gem uninstall rb-appscript\n```\n\nApologies if this is the wrong place to post this issue. I poked around a bit and asked in the irc channel and got no responses.\n Yes\n\nJosh\n\nOn Sep 1, 2011, at 11:17 PM, thibaudgg\nreply@reply.github.com\nwrote:\n\n> Have you installed growl?  http://growl.info\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/131#issuecomment-1976297\n I tried the `growl` gem and nothing happened, but guard didn't break ;)\n\n```\n$ gem install growl\n```\n\nThen I looked into the docs of the growl gem, and it looks like it depends on `growlnotify`. So, I installed `growlnotify` and everything seems to work fine now!\n\n```\n$ brew install growlnotify\n```\n\nThanks for your help!\n I don't like bumping old tickets but which OS version was this?\n\nedit: and which growl version\n Mac OS X 10.6.8 (Snow Leopard)\nGrowl 1.2\n I had the same issue, but it turns out that Growl wasn't running. A trip to the prefPane fixed it up. Oops!\n I do not get growl notifications. When i put growl_notify in gemfile. I get the following error \n\nP:guard2 jayparteek$ guard \n/Users/jayparteek/.rvm/gems/ruby-1.9.2-head@guard2/gems/rb-appscript-0.6.1/lib/appscript.rb:542:in `_send_command': CommandError (Appscript::CommandError)\n        OSERROR: -10000\n        MESSAGE: Apple event handler failed.\n        COMMAND: app(\"/Library/PreferencePanes/Growl.prefPane/Contents/Resources/GrowlHelperApp.app\").register({:all_notifications=>[\"success\", \"pending\", \"failed\", \"notify\"], :as_application=>\"Guard\", :default_notifications=>\"notify\"})\n    from /Users/jayparteek/.rvm/gems/ruby-1.9.2-head@guard2/gems/rb-appscript-0.6.1/lib/appscript.rb:642:in`method_missing'\n\nMac OS X Lion 10.7.2 (11C74)\nGrowl 1.2\n\nGem file\ngroup :development, :test do\n  gem 'rspec-rails'\n  gem 'capybara', :git => 'git://github.com/jnicklas/capybara.git'\n  gem 'launchy'\n  gem 'database_cleaner'\n  gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i\n  gem 'guard-rspec'\n  gem 'guard-livereload'\n  gem 'growl_notify'\nend\n\ngem 'growl'\n\ngroup :test do\ngem 'guard-spork'\nend\n Growl_notify does not work with spork\n\nSent from my iPhone\n\nOn Dec 26, 2011, at 1:03 PM, jaipratikreply@reply.github.com wrote:\n\n> I do not get growl notifications. When i put growl_notify in gemfile. I get the following error \n> \n> P:guard2 jayparteek$ guard \n> /Users/jayparteek/.rvm/gems/ruby-1.9.2-head@guard2/gems/rb-appscript-0.6.1/lib/appscript.rb:542:in `_send_command': CommandError (Appscript::CommandError)\n>        OSERROR: -10000\n>        MESSAGE: Apple event handler failed.\n>        COMMAND: app(\"/Library/PreferencePanes/Growl.prefPane/Contents/Resources/GrowlHelperApp.app\").register({:all_notifications=>[\"success\", \"pending\", \"failed\", \"notify\"], :as_application=>\"Guard\", :default_notifications=>\"notify\"})\n>    from /Users/jayparteek/.rvm/gems/ruby-1.9.2-head@guard2/gems/rb-appscript-0.6.1/lib/appscript.rb:642:in`method_missing'\n> \n> Mac OS X Lion 10.7.2 (11C74)\n> Growl 1.2\n> \n> Gem file\n> group :development, :test do\n>  gem 'rspec-rails'\n>  gem 'capybara', :git => 'git://github.com/jnicklas/capybara.git'\n>  gem 'launchy'\n>  gem 'database_cleaner'\n>  gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i\n>  gem 'guard-rspec'\n>  gem 'guard-livereload'\n>  gem 'growl_notify'\n> end\n> \n> gem 'growl'\n> \n> group :test do\n> gem 'guard-spork'\n> end\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/131#issuecomment-3275881\n  I replaced gem 'guard-spork' with 'growl_notify'  in test group.  Getting Error \n\nJP:guard2 $ guard\nERROR: Could not load 'guard/spork' or find class Guard::Spork\nERROR: no such file to load -- guard/spork\nERROR: Invalid Guardfile, original error is:\nundefined method `new' for nil:NilClass\n Replace growl_notify with ruby_gntp\n\nSent from my iPhone\n\nOn Dec 26, 2011, at 1:11 PM, jaipratikreply@reply.github.com wrote:\n\n> Should I replace gem 'guard-spork' with 'growl_notify'  in test group?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/131#issuecomment-3275936\n Nothing pops up\n\nJP:guard2 jayparteek$ guard\nGuard uses GNTP to send notifications.\nGuard is now watching at '/Users/jayparteek/projects/learningrails2/guard2'\nGuard::RSpec is running, with RSpec 2!\nRunning all specs\n Upgrade growl?\n\nSent from my iPhone\n\nOn Dec 26, 2011, at 3:09 PM, jaipratikreply@reply.github.com wrote:\n\n> Nothing pops up\n> \n> JP:guard2 jayparteek$ guard\n> Guard uses GNTP to send notifications.\n> Guard is now watching at '/Users/jayparteek/projects/learningrails2/guard2'\n> Guard::RSpec is running, with RSpec 2!\n> Running all specs\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/131#issuecomment-3276614\n No, its 1.2\n Use 1.3\n\nSent from my iPhone\n\nOn Dec 26, 2011, at 3:21 PM, jaipratikreply@reply.github.com wrote:\n\n> No, its 1.2\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/131#issuecomment-3276677\n I am now using 1.3.1 ver of growl. Still Nothing pops up. \n\nDo i need to configure any specific application inside Growl's application tab?\n Ultimately it worked with following gemfile\n\n``` ruby\ngem 'rails', '3.1.3'\n\n\ngem 'sqlite3'\n\n\ngroup :development, :test do\n  gem 'rspec-rails'\n  gem 'capybara', :git => 'git://github.com/jnicklas/capybara.git'\n  gem 'launchy'\n  gem 'database_cleaner'\n  gem 'rb-fsevent', :require => false if RUBY_PLATFORM =~ /darwin/i\n  gem 'guard-rspec'\n# gem 'guard-livereload'\nend\n\ngroup :test do\ngem 'guard-spork'\ngem 'ruby_gntp'\nend\n\n# Gems used only for assets and not required\n# in production environments by default.\ngroup :assets do\n  gem 'sass-rails',   '~> 3.1.5'\n  gem 'coffee-rails', '~> 3.1.1'\n  gem 'uglifier', '>= 1.0.3'\nend\n\ngem 'jquery-rails'\n```\n But It took 7.1 seconds to pull output. How can i make it fast? \n  This is my first stab at #127. It was pretty easy to bolt on, but the tests changed just enough that I wonder if there was a better way to encapsulate it. I didn't do anything fancy like caching it in memory like the main Guardfile. Should I?\n I should add that a wiki page is forthcoming. Tomorrow.\n Oh, and README? Got it.\n README was pretty easy. Wiki page will still have to wait until a fresh day.\n  Let me start with my concrete use case.  I like [Ctags](http://ctags.sourceforge.net). And I mean I really Ctags.  And it recently occurred to me that while guard is setting there running my tests and bundling my gems, it would be super easy to make it run `ctags` automatically whenever I update code. But this isn't something that belongs in the project Ctags file. Other developers might not have even Ctags installed, let alone want it to run under [my weird setup](http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html). No, if I am to use Ctags to invoke guard, it needs to sit outside the `Guardfile`.\n\nThat's where my idea of a user config file comes in.  This is different from `~/.Guardfile`, which is used by default if no `Guardfile` is found.  No, this is more of a `~/.guardrc`. Or `~/.guard.rb` if you want to be nice to the people who maintain [syntax highlighting filetype mappings](https://github.com/vim-ruby/vim-ruby/blob/master/ftdetect/ruby.vim).  It would basically be concatenated into the `Guardfile` when loading.\n\nI haven't taken a stab at implementing this (though a quick glance suggests I could probably knock it out pretty easily). I'm just taking the temperature. After all, I could be the only lone nut out there that thinks this is a good idea.\n Closed by #128, thanks!\n  When configuring notifications for Guard in the Growl preference pane, they all appear in the notification list under Guard (or \"command-line notification\" if using the growl gem rather than growl_notify). This makes it impossible to assign one sound to a success notification, and a different sound to a failure notification.\n\nIs it possible to separate these out into Red, Yellow and Green when using growl_notify? That way I don't have to be looking at the top right of the screen \u2014\u00a0or even at the screen at all\u00a0\u2014\u00a0to know whether my tests passed.\n\n(I know the growl gem doesn't support this as the growlnotify command doesn't allow passing the necessary option, but growl_notify would appear to allow it by setting `default_notifications` to [\"Red\", \"Yellow\", \"Green\"] and then using `:with_name` to pass it on the notify call.)\n This should also be possible with the growl gem by setting an [identifier](https://github.com/visionmedia/growl/blob/master/lib/growl/growl.rb#L192).\n Any update on this @tinyclanger?\n Sorry, real life got in the way - I should have some time to look at this over the weekend, though.\n No problem man!\n  Guard starts up fine and says it is doing its thing... but it doesn't update with any changes. Other projects are working fine... and this one was, but just stopped. No errors or anything.\n\nI know this isn't much to go on, but any ideas why it would just stop? (I have restarted, etc)\n Restarting my machine a third time fixed it. Weird huh? Thanks :)\n  No Event gets fired when deleting or moving a file, is this intentional or am I missing something? Even though rb-fsevent fires when tested outside of Guard\n So after looking into this I see why it's not implemented. With large directory trees it could be get really memory hungry. But knowing this it could still be an optional feature turned on through options :include_deletes or something. And would fire a new callback called run_on_deleted. Anyway just a thought.\n how about the idea of it being optional?\n I have been playing around with a new listener but  as soon as I add more than one to lib/guard.rb everything breaks it appears to sending nil to fsevent not sure why that would happen.\n\nSeparately they work just fine.\n\n```/Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/rb-fsevent-0.4.3.1/lib/rb-fsevent/fsevent.rb:89:in`+': can't convert nil into Array (TypeError)\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/rb-fsevent-0.4.3.1/lib/rb-fsevent/fsevent.rb:89:in `pipe'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/rb-fsevent-0.4.3.1/lib/rb-fsevent/fsevent.rb:46:in`stop'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/guard-0.6.2/lib/guard/listeners/darwin.rb:20:in `stop'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/guard-0.6.2/lib/guard.rb:87:in`run'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/guard-0.6.2/lib/guard.rb:41:in `block in start'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/guard-0.6.2/lib/guard/listeners/darwin.rb:42:in`call'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/guard-0.6.2/lib/guard/listeners/darwin.rb:42:in `block in watch'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/rb-fsevent-0.4.3.1/lib/rb-fsevent/fsevent.rb:37:in`call'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/rb-fsevent-0.4.3.1/lib/rb-fsevent/fsevent.rb:37:in `run'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/guard-0.6.2/lib/guard/listeners/darwin.rb:15:in`start'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/guard-0.6.2/lib/guard.rb:52:in `start'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/guard-0.6.2/lib/guard/cli.rb:17:in`start'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/thor-0.14.6/lib/thor/invocation.rb:118:in`invoke_task'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/thor-0.14.6/lib/thor/base.rb:389:in`start'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/gems/guard-0.6.2/bin/guard:6:in `<top (required)>'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/bin/guard:19:in`load'\n    from /Users/limeyd/.rvm/gems/ruby-1.9.2-p290@guardshopify/bin/guard:19:in `<main>'\n\n```\n```\n I implemented another idea you can see it on my guard fork https://github.com/limeyd/guard/commit/8da8f6a33def410147a5f3eb4f3beb91c4d1faa4\n\nTake a look and let me know your thoughts?\n Changed it to cache a directory/timestamp hash this is way faster and covers my previous use cases. Take a look https://github.com/limeyd/guard/commit/f8960ec783a427c298bb8844c3c76aa6ac88bb71\nI'll be adding some test as soon as I can, to verify the use cases.\n It would be pretty nice to have this as optional\n Congrats guys!\n  Hi, I'm integrating Guard with an existing application and would like to silence the comments being printed to the terminal. Right now, this can be done by setting ENV[\"GUARD_ENV\"] to \"test.\"\n\nI'd love to get a more generic option, such as \"silent\", to quiet guard when I'm using it inside my app.\n\nThanks.\n Any update on this @tdreyno?\n Nope. I'm still trying to figure out if the latest release (and usage changes) make sense embedded in my app. Seems the the project is focused on being a command-line tool more than a library.\n Ok, maybe we could close the issue in the meantime?\n Closing. Will reopen with pull request if I end up needing it.\n  The polling listener is not respecting the directory set for it. It was hardcoded in watch_change to the current working dir.\n  This adds a list command, that shows all available\nguard gems.\n\nhttps://github.com/guard/guard/issues/111\n How is that?  It was the only logical place I could think of to add it.\n\nCiao!\n This closes https://github.com/guard/guard/issues/111 ?\n yup. I closed it.\n  I am using Guard on OS X (10.6.7) with rb-fsevent 0.4.2. The project I am working on is running in RVM on REE 1.8.7 2011.03. When guard is running and I press Control-c, it does not quit immediately. I press Control-c several times and it is simply echoed back to the terminal until I go to my project and change one of the watched files. At that point, guard quits.\n\nGuard file:\n\n``` ruby\n\n# Run the bundle install command when the bundle file changes\nguard 'bundler' do\n  watch('Gemfile')\nend\n\n# compile coffee script files:\nguard 'coffeescript', :input => 'public/coffeescripts', :output => 'public/javascripts'\n\n# Spin up Spork\nguard 'spork', :cucumber_env => { 'RAILS_ENV' => 'test' }, :rspec_env => { 'RAILS_ENV' => 'test' } do\n  watch('config/application.rb')\n  watch('config/environment.rb')\n  watch(%r{^config/environments/.+\\.rb$})\n  watch(%r{^config/initializers/.+\\.rb$})\n  watch('spec/spec_helper.rb')\nend\n\n# Run specs when files change\nguard 'rspec', :version => 2, :cli => \"--drb --format d\" do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb')  { \"spec\" }\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^lib/(.+)\\.rb$})                           { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch(%r{^app/controllers/(.+)_(controller)\\.rb$})  { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\n  watch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\n  watch(%r{^spec/factories/(.+)\\.rb$})                { \"spec\" }\n  watch('spec/spec_helper.rb')                        { \"spec\" }\n  watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n  watch(%r{^app/views/(.+)/.*\\.(erb|haml)$})          { |m| \"spec/requests/#{m[1]}_spec.rb\" }\nend\n\n# annotate models when the schema changes\nguard 'annotate' do\n  watch( 'db/schema.rb' )\nend\n```\n Hmm, me too. Although sometimes it says \"Bye bye\" after a few minutes and then exits.\n\nI'm on OS X 10.7, ruby 1.8.7 (2011-06-30 patchlevel 352) under RVM, using guard 0.5.1, using rb-fsevent 0.4.2.\n\nEDIT: ctrl+c works when I don't have rb-fsevent loaded, so I'm pointing to that as the culprit. May be related to https://github.com/thibaudgg/rb-fsevent/issues/17\n I tried this with both the latest guard release and guard master with the same result.\n Same here. Recompiled rb-fsevent just to be sure \u2013 I recently upgraded to Lion \u2013 and there was no change.\n I just verified that I get exactly the same behavior here on multiple variants of 1.8.x. Sigh...\n With 1.8.x the process tree looks like...\n\n```\n--login (2 threads)\n  --bash (1 thread)\n    --ruby (1 thread)\n      --fsevent_watch (2 threads)\n```\n\nIn 1.9.x, the process tree looks like...\n\n```\n--login (2 threads)\n  --bash (1 thread)\n    --ruby (2 threads)\n      --fsevent_watch (2 threads)\n```\n\nSo... here's the scenario when using 1.8.x, as far as I can guesstimate. The ctrl-c is handled by the terminal that spawned the login session, sending the signal to the process group owned by bash (so, since 0.4.2, that would be just bash and ruby). Bash does its interactive login shell signal handling voodoo that we don't care about here, but ruby **is blocked on IO** since it only has one thread. This defers handling of the signal until after the next time fsevent_watch writes to the pipe.\n\nAs you can see above, ruby 1.9.x performs blocking IO on a separate thread and just works.\n\nI feel kinda silly for not realizing this would happen when fixing https://github.com/thibaudgg/rb-fsevent/issues/17\n @thibaudgg have I mentioned within the past 24 hours my distaste for posix signals? ;)\n\nI'm honestly not sure how to _properly_ fix both issues while rb-fsevent uses pipes for IPC. I guess we could add a --my-ruby-is-special-needs option to fsevent_watch to turn off the behavior that makes it detach from the process group...\n a workaround has been pushed to rb-fsevent master for the time being: https://github.com/thibaudgg/rb-fsevent/commit/6be8496cd11853bac4280b5bca9161a2a055b96c\n\nNote that this still means SIGQUIT nukes fsevent_watch and breaks rb-fsevent when using ruby 1.8.x. I'd rather not muck around with it more deeply without a second pair of eyes and actually talking it out.\n\nHowever, the issue here in guard could probably be closed and the one in rb-fsevent re-opened. -_-\n @thibaudgg as much as I bitch, an alternative still wouldn't get around ruby 1.8's green thread problem. You could have the simpler \"respond to any keypress\" UI, but not in pure ruby: your event loop for handling UI would be blocking once entered. Also, signals _are_ the standard \"unix way\" of doing things... and none of this becomes a **real** headache until you combine everything else with the limitation of green threads. You pretty much end up _having_ to drop to C or make use of something else that drops to C/java (EventMachine).\n To provide more context, this is the relevant section of io.c: https://github.com/ruby/ruby/blob/ruby_1_8_7/io.c#L826\n fixed cleanly in rb-fsevent master. apparently IO::select, in ruby 1.8, is magical and allows for correct signal handling behavior despite being used in its blocking form (no timeout). huzzah.\n ctrl-\\ , ctrl-C and ctrl-Z works with rb-fsevent 0.4.3 ! Nice!\n Awesome, works great for me too! Thanks for working on this, guys!\n  I imagine it's a silly question, but I didn't found how I change the default path where Guard is watching at. Always is chained to the Guardfile's location? Is there another way or option to override this? My problem is to call Guardfile from another location. Is it possible?\n Thanks for your fast answer :) Me too if you decided finally choose the CLI option and I'll post in the Google group the next questions.\n Wow!\nYes, I need it! I'll do some tests to verify that all works fine :-)\n\nThanks!\n They've been working for me.  I haven't had time to update the tests, though.\n  Hi, and thanks heaps for guard!\n\nOne of my projects contains a very large subdirectory with lots of marshalled db data.  Because of this, and this code https://github.com/guard/guard/blob/master/lib/guard.rb#L49-54, guard blocks for a couple of minutes after each change, consuming 90% of one of my cpu threads.  The large subtree of files is not being watched by guard.\n\nI believe that the code is recursively scanning the entire subtree of the directory, and calculating a hash, to determine what files have changed.  I'm not exactly sure, as the this code is not covered by tests (removing the lines above do not cause any spec failures).  This seems odd, as fs-event should remove the need for this.\n\nI'd like to be able to turn this function off, which could easily be done with a config option, but I'd like to first understand what the problem is, and why it can't be solved just using fs-event.  So before I dive in to a solution for my problem, could I get some guidance on what problem this code is solving?\n\nThanks for reading,\n\nIan \n Hi Ian,\n\nBecause of how works rb-fsevent (principally because of Signal interruption) we need to stop it, during guard runs. So we need to reparse the whole directory after each run to see if there was files modified during that run before relaunching rb-fsevent.\n\nMaybe an option to exclude some files (your marshalled db data) on listener (https://github.com/guard/guard/blob/master/lib/guard/listener.rb#L84) would fix this issue for you?\n Thanks for the explanation.\n\nYes, I think that adding an option to exclude files from the rescan is a goer.  I'll have a crack at that.\n Great, thanks in advance for your pull request :)\n Can't wait for the patch :)\n it's rocket fast now, thanks @rymai!\n Hi @rymai,\n\nThanks for the fix, unfortunately it's not helping with my problem - but all it will take is for me to expose the excluded folders as a configuration option.  I'll work on a pull request today.\n\nCheers,\nIan\n Yes I have tried it.  It's my db/data subdir (with in insane amount of dirs and files) in a particular project that's causing the trouble.\n\nill have a look at the discussion\n @rymai, do you still need testing on windows? My team now has ansi and stuff setup, and it's going to be a pain to try to undo that.\n Sounds good, I'll create an issue if I encounter any difficulties!\n @ianwhite, @rymai Any progress here? I have same issue, Guard fails with exception on carrierwave tmp files. It would be great if guard will have dsl to exclude files from watching. Does somebody work on this issue or is it already implemented?\n\n``` bash\n/home/anton/.rvm/gems/ruby-1.9.2-p180/gems/rb-inotify-0.8.5/lib/rb-inotify/watcher.rb:80:in `initialize': No such file or directory - Failed to watch \"/home/anton/work/pics/public/uploads/tmp/20110818-1142-28238-2818\" (Errno::ENOENT)\n```\n @ianwhite did add an [`ignore_paths`](https://github.com/ianwhite/guard/blob/master/lib/guard/dsl.rb#L120) DSL option to exclude files from watching, I'll see if I can merge it later today... (or you/@ianwhite could do a pull-request before that)\n Hi guys,\n\nMy fork's changes are untested, and my first attempt to handle arbitrary nesting doesn't work.  It does work for ignoring top level paths though.\n\nI'm not able to work on this until the weekend, so if you can wait till then, I can rustle up a pull request.\n\nCheers,\nIan\n Thank you very much Ian, no problem, take your time!\n  When I run 'guard -T' I get:\n\n```\n/home/bronson/.rvm/gems/ruby-1.9.2-p180/gems/guard-0.5.0/lib/guard/dsl.rb:12:in `evaluate_guardfile':\nundefined method `empty?' for nil:NilClass (NoMethodError)\nfrom /home/bronson/.rvm/gems/ruby-1.9.2-p180/gems/guard-0.5.0/lib/guard/cli.rb:42:in `show'\nfrom /home/bronson/.rvm/gems/ruby-1.9.2-p180/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\nfrom /home/bronson/.rvm/gems/ruby-1.9.2-p180/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\nfrom /home/bronson/.rvm/gems/ruby-1.9.2-p180/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\nfrom /home/bronson/.rvm/gems/ruby-1.9.2-p180/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\nfrom /home/bronson/.rvm/gems/ruby-1.9.2-p180/gems/guard-0.5.0/bin/guard:6:in `<top (required)>'\nfrom /home/bronson/.rvm/gems/ruby-1.9.2-p180/bin/guard:19:in `load'\nfrom /home/bronson/.rvm/gems/ruby-1.9.2-p180/bin/guard:19:in `<main>'\n```\n\nTrivial fix makes Guard print \"no guards in guardfile\" instead of crashing.\n It's event better if \"no guards in guardfile\" isn't printed when using `guars show` :) Fixed [here](https://github.com/guard/guard/commit/694664ced88189ed843c956d745f2c149545fcf3).\n    [`growl_notify`](http://github.com/jetviper21/growl_notify) is a gem that uses AppleScript, the recommended approach, rather than the `growlnotify` CLI app, which is what the `growl` gem uses, to make Growl notifications. This change checks for `growl_notify` and then `growl` and uses the first one found. I've been running this fork for a few days with no problems, but I think it needs wider testing, since `growl_notify` is still pretty new.\n The gem's still fairly new, so it hasn't been too widely tested yet. I'll talk with the creator today and see if we can figure out what's going on. Are notifications actually reaching `GrowlNotify.send_notification` on your setup?\n so growl_notify uses the apple script interface to talk to growl though the appscript gem. by doing this it requires that you follow the growl pattern of registering one application name per \"Application\" trying to modify the application name after it has been registered with growl will result in your notification to not being sent ex: https://github.com/johnbintz/guard/commit/e53036ad0542c2731be850d70454e4b2770e46f6#L0R54\n\nAllowing people to define a custom application name is bad and it goes against the growl security \"best practices\" and hence will not work if you try to change the application name. The growl gem gets around this by using the `growlnotify` command which the growl team specifically states that it should not be used as a dependency in projects and is for debugging only and in so i believe it just throws the application name away since in the growl preferences it is registered as `growlnotify` \n\ngrowl_notify gem gives you the ability to have your application show up as a registered app in the growl preferences and it works with the native applescript driver these are the core differences.\n If `growl_notify` is the good way to use Growl what do you think of completely remove the `growl` gem support?\n Ideally, I'd love to not need the `growl` gem. `growl_notify` has been working well for me on my machine, and I'd like to get a little more \"real-world\" testing on the combination before I can confidently say, \"Yes, remove `growl`.\" I'll play with it this week on a few other various Mac systems and see the results.\n Ok perfect, good idea. Please try particularly the guard-rspec (with the embed growl formatter) and with the `--notify false` guard option. Thanks\n OK I just took this for a spin on a few other Macs I had available and `growl_notify` worked correctly with guard-rspec, and notifications didn't appear at all with `--notify false`. @rymai, can you try out the latest changes and see if they are working for you now?\n Just FYI, here's the test project I put together to test `growl_notify` with `guard-rspec`, to save you the trouble of putting something together yourselves: https://github.com/johnbintz/guard-growl_notify-test\n just to post the obvious but growl_notify does require that they have a xcode in stalled incase that is a deal killer\n @jetviper21 @johnbintz @rymai are you think it's a issue? I suppose every Guard mac users have Xcode installed, no?\n If they're using rb-fsevent with Guard (and folks should be), they already need Xcode, right?\n yeah, good point :)\n Let's do this?! :P\n Works for me, it's been solid for me for a month now. If people complain, we can switch it back.\n  It seems that in some cases rb-inotify is generating multiple events when it should only be generating one.\n\nMy specific scenario:\n\nI'm using the sublimetext editor. When saving a file with sublimetext it uses one fwrite operation and then multiple writes in 4k blocks.\n\nas can be seen here:\nhttps://github.com/guard/guard/blob/master/lib/guard/listeners/linux.rb#L50\n\nGuard is watching for :close_write and :modify events. A modify event gets triggered for every 4k block written by the editor. If guard just listened for :close_write it would only trigger once when the editor has closed the file handle. I can't really think of any situation where :modify would be needed, but there may be some.\n From the [inotifywatch](http://linux.die.net/man/1/inotifywatch) man page:\n\n```\nmodify\n    A watched file or a file within a watched directory was written to.\n\nclose_write\n    A watched file or a file within a watched directory was closed, after being opened\n    in writeable mode. This does not necessarily imply the file was written to.\n```\n\nSo when the editor writes a file in chunks, it fires several `:modify` and a single `:close_write`. So from my understanding, when removing `:modify` from the listener, we'll catch only the end of the write operation. However there may be other editors that keeps a file handle open and thus fires only `:modify` events.\n\nI'm not sure how to approach this, since it may break another editor and I'm not using Linux on my development machine. I'd like to see more analysis of inotify events for other popular editors like vim, nano, joe, gedit, kate, SciTE, etc.\n Here is the inotifywatch output from a few common editors. I opened the file, launched inotifywatch, changed it, saved it, killed inotify watch:\n\nSublime Text\n\n```\ntotal  modify  close_write  open  filename\n5      3       1            1     coffee/script.coffee\n```\n\nVim\n\n```\ntotal  attrib  move_self  delete_self  filename\n4      1       1          1            coffee/script.coffee\n```\n\nGedit\n\n```\ntotal  access  attrib  close_write  close_nowrite  open  delete_self  filename\n8      1       1       1            1              2     1            coffee/script.coffee\n```\n\nnano\n\n```\ntotal  modify  close_write  open  filename\n5      3       1            1     coffee/script.coffee\n```\n\njoe\n\n```\ntotal  access  modify  attrib  close_write  close_nowrite  open  filename\n10     1       4       1       1            1              2     coffee/script.coffee\n```\n\njedit\n\n```\ntotal  move_self  filename\n1      1          coffee/script.coffee\n```\n\nscite\n\n```\ntotal  modify  close_write  open  filename\n5      3       1            1     coffee/script.coffee\n```\n\nbluefish\n\n```\ntotal  attrib  close_write  open  filename\n4      2       1            1     coffee/script.coffee\n```\n\necho 'foo' > coffee/test.txt\n\n```\ntotal  modify  close_write  open  filename\n4      2       1            1     coffee/test.txt\n```\n\nIt looks to me like everything has a close_write except for a few that have neither close_write nor modify. I think these ones write to a tmp file and then move it into place over the existing file.\n Awesome job! I will take care of it tomorrow. Thanks a lot.\n I'd like to add this issue, which is now closed, to this thread:\n\nhttps://github.com/guard/guard-rspec/issues/26#issuecomment-1469757\n Fixed in [this commit](https://github.com/guard/guard/commit/d78ecb45fb784b08c3823984eb04f5448c5ffc1e)\n  It would be nice to be able to have earlier guards prevent later ones from firing for a given file change. For example, if a Javascript file doesn't pass JSHint, I don't want my asset-compiler to run.\n This change can break actuals guard, no? Implement it before a version 1.0 is not a good idea if is true.\n\nIf you test if return value is false, and not just evaluate has false, result is probably less serious, but I'm not sure is a good idea anyway.\n I'm with @yannlugrin. \n\nThis is a dangerous request, since it may break the whole Guard ecosystem. Sure, the example in the README returned always `true` from the various guards, but it was never stated that these methods should return a boolean indicating the status of the action and more importantly the return value was never evaluated. \n\nI took three Guards (guard-minitest, guard-rspec and  guard-coffeescript) and looked at the main Guard methods if they return a boolean indication the action success. As result, only guard-minitest is done right, the other two guards return a wrong value which would lead to unexpected results.\n\nSo be prepared to go through all available guards and fix them if necessary, or the joy of using Guard will be lowered.\n I find this issue very interesting, since it would enable us to do stuff we discussed in #14. My concern was only to not underestimate the impact it has.  From the semantic version philosophy it should be done before 1.0.0, but it should be carefully planned:\n1. Enhance documentation and make it clear what each guard method MUST return.\n2. Go over all available Guards and check if it conforms to the new rules.\n3. Implement the change within Guard\n I totally agree with nearly everything said above, most notably:\n- the most _obvious_ and _elegant_ way to implement it would be to have returning `false` from any of the calls stop the chain for that change\n- using the return value will cause breakage since it wasn't the documented behavior\n\nWaiting until v1.0 to institute the change is a perfectly reasonable solution, particularly if that's not expected to be that far off. There are a couple of other variations that would work as well but aren't as elegant:\n- have guards declare whether returning false is meant to be a cancellation, perhaps by `include Guard::Cancelling` or setting a `false_cancels_chain` class attribute to `true`. The default would be that this behavior is _not_ intended (at least until v1.0).\n- add some sort of `change` object as an optional additional parameter to `#start`, `#reload`, etc. that has a `#cancel` method that `Guard#start` and `#run_on_change_for_all_guards` check between guards.\n\nAgain, neither of the alternatives I suggest are as nice, but they are a little safer. Either could be implemented in a minor release without breaking any existing guards.\n This would be a perfect use case for the Google group. Is there a way you can send a message to all members of the Guard organization? We should bring all Guard developers onto the Google group for exactly such cases, we're only 6 members for now :(\n Speaking of groups, it might be worth considering only letting a Guard cancel a change _within a group_. Or that might be too complex. I'm not sure whether it muddies the meaning of \"groups\" or enhances it...\n I think I'd want it to cancel within a group, but I need to think about it more. One use case I'd use: if I have a group chained like this:\n- `coffeescript`\n- `compass`\n- `livereload`\n\nI wouldn't want to trigger the LiveReload if either of the prior Guards fail. Same if I chain this way:\n- `coffeescript`\n- `jasmine-headless-webkit` with `jasmine.yml` configured to use the compiled JS files rather than raw CoffeeScript for the app.\n\nIf set up correctly, it would prevent some redundant things from happening (browser reloading a broken Compass stylesheet or JHW and CoffeeScript complaining about the same syntax error in the same file).\n\nI'm sure there are disadvantages with this arrangement, though. I just haven't pondered enough to know them. :)\n I agree that the dependency should be handled only within a group, although it makes the change more complex, since Guard doesn't know anything about groups at runtime. Disabled groups are just not evaluated when the DSL is evaluated. \n Very good point about being careful with structure modification of `@guard`. Your proposed solution is thus elegant and has the advantage that we don't have to deal with inconsistency of Hash ordering in different Ruby versions, since Array have always been ordered. Having the groups available would also enable us to implement issue #52 more easily.\n Hi guys, I started to hack around for this feature (I've already added the `@groups` attribute [here](https://github.com/guard/guard/commit/dd864021090a3e779cb12ed37cce60f94c153bd9)). I think we need a new option for the `Dsl.group` method to enable dependency between guards inside a group since sometimes groups are not necessarily composed of dependent guards.\n\nSuch option could be:\n\n``` ruby\ngroup :backend, :halt_on_fail => true do\n  guard :spork\n  guard :rspec\nend\n\n# or\n\ngroup :backend, :chained => true do\n  guard :spork\n  guard :rspec\nend\n```\n\n_Note: With such a name, this option should default to false._\n\nPlease give ideas for an appropriate name for this option!\n\nPS: Do you think I should mail the Google group (14 people now) for this? :)\n +1 for `halt_on_fail`, +1 for the Google mailing as well. Will this still be managed by returning `false` from the `run_*` methods for failure and something not === `false` for success?\n One option to make for better backwards-compatibility would be to use a `raise` or even a `throw` instead of returning `false` to indicate a stop. (I personally think this is a perfect place to use `throw`, which doesn't see a lot of action in Ruby.)\n Hey guys!\n\nI've just pushed a first implementation of this feature in the new [guard_dependencies branch](https://github.com/guard/guard/tree/guard_dependencies).\n\nI think, a refactoring of groups into a `Guard::Group` class will be needed next.\n\nLet me know what you think (I've used your suggestion @jamesarosen for the `throw`, very cool idea thanks!).\n Very well done R\u00e9my, thanks a lot. This serves also as a good basis for other ideas like #52. So then I need to upgrade my Guards to throw `:task_has_failed` :-)\n\nNext we need to document this for Guard developers and I'd like to take the opportunity to add full [YARD](http://yardoc.org/) support when @thibaudgg and @rymai agrees. \n Hey thanks Michael!\n\nI personally totally agree for YARD (I even documented the whole project some months ago... I'll see if it still up to date and push it to a branch if yes, it could be a bootstrap...)\n\nSent from my iPhone\n\nOn 19 sept. 2011, at 09:17, Michael Kessler reply@reply.github.com wrote:\n\n> Very well done R\u00e9my, thanks a lot. This serves also as a good basis for other ideas like #52. So then I need to upgrade my Guards to throw :task_has_failed :-)\n> \n> Next we need to document this for Guard developers and I'd like to take the opportunity to add full [YARD](http://yardoc.org/) support when @thibaudgg and @rymai agrees.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/97#issuecomment-2130986\n It doesn't matter whether your Yard branch is up to date or not. I anyway would go through Guard class by class, method by method, and see what is in your branch, transfer and update it where necessary.\n Ok, I've pushed it [here](https://github.com/guard/guard/tree/yardoc), in reality I almost only documented the `Guard::Dsl` class. So feel free to document Guard! :)\n Thanks. I've already annotated 100% with yardoc and pushed it to master. I've still some limited knowledge in some areas of Guard, so I'd be happy, whenever you touch a method, please check the docs and add the not-so-obvious-things you've got from your experience with Guard. This then makes the docs really useful.\n\nThere are still some minor formatting issues that I've to address, but at least it's a good starting point for the future: http://rdoc.info/github/guard/guard/master/frames There is also a problem with the GitHub flavored markdown that is not supported on rubydoc.info. I've to do more investigation on that, but in the worst case we should drop the fancy colorization in the readme to make it work.\n This is simply plain awesomeness! Thank you Michael!\n I've now merged the branch into master. Next step is real testing and to add `throw :task_has_failed` into existing Guards.\n Love it!\n  Guard needs at least a single 'guard' declaration in Guardfile to work. It should just work with a single generic watch also, like so:\n\n```\nwatch(/\\.txt/) do |path|\n   `markdown #{path}`\nend\n```\n Have you seen [guard-shell](https://github.com/guard/guard-shell)?  You could do something like this:\n\n```\nguard 'shell' do\n  watch(/\\.txt/) { |path| `markdown #{path}` }\nend\n```\n\n**I would not make the Guard codebase more complex just do implement something that can already be done in a slightly other way.**\n\nFor more complex use cases, there are inline guards and if this is not enough, you should implement a specific guard gem.\n\nAnd for your very specific example [guard-markdown](https://github.com/guard/guard-markdown) would be the best solution.\n My issue wasn't a specific one; It felt like a bug in the way guard parses Guardfiles. If a watch by itself works with another guard, then it should work also without the guard. Otherwise, you _always_ need a guard gem in order to use guard, which I feel is overkill. You _should_ be able to use guard without any gems (even guard-shell), IMHO.\n It's not a bug, it's the design of the Guard [DSL](https://github.com/guard/guard/blob/master/lib/guard/listener.rb). But you're totally right @capotej, all the points you've made are valid and worth pursuing.\n\nAfter a second look I think it won't be that hard to implement, because the base [Guard](https://github.com/guard/guard/blob/master/lib/guard/guard.rb) class is a non functional Guard and could be used as a default Guard, because in your example the work is done within the watcher. With this design, only the DSL has to be changed a bit and the rest of Guard could be untouched.\n\nSo feel free to send a pull request.\n  When errors occured, I want to know wheter Guardfile has problem or not.\n(ex. guard/guard-test#9)\nSo it is usefult to know the system command exactly which executed by guard.\nThis patch output the command and it's options\nTo use this\n\n<pre>\nguard --dry_run\n</pre>\n\nIt's work for me in RMI 1.9.2p180.\nHow about this?\n This is a nice idea, but it assumes that every guard uses the Kernel module `system` method. So this is a bit misleading, because you could also execute commands with %x or ` and write content through the `File` class. I'm fine with this, but at least it needs a clear statement in the README that points out the issue with `--dry-run`.\n I added some specs, and some lines in README/CHANGELOG.\nAnd added support for Kernel.#` and %x literal.\nBut I don't know the way to write content through the File class.\nCan you show me an example or reference?\n In Ruby file IO is usually done through the [File](http://www.ruby-doc.org/core/classes/File.html) class:\n\n```\nFile.open(filename, 'w') { |f| f.write(content) }\n```\n\nBut the open method yields an [IO](http://www.ruby-doc.org/core/classes/IO.html) instance. So you'll fine with the methods `write` and `write_nonblock` on the IO class.\n Thank you for your explanation. But I'm sorry, I cannot understand the relation between external command execution and File/IO class.So please can you add a note about the issue in README.\n From my understanding a dry run should not write anything. Not all Guards uses system calls to execute an external command, some Guards uses normal Ruby libraries like [guard-compass that uses Compass](https://github.com/oliamb/guard-compass/blob/master/lib/guard/compass.rb#L117), which [writes through standard Ruby IO to a file](https://github.com/chriseppstein/compass/blob/stable/lib/compass/actions.rb#L56), hence the hint to make any IO write operations non functional for the dry run.\n\nI mean you already figured out how to redefine a method and wrote a nice spec for it, so you'll just have to do the same for IO's write methods. Then you have a 99% dry run possibility.\n\nOne last thing I noticed: You should have no space before the closing parenthesis, so instead of `(:define_method, :system )` please write `(:define_method, :system)`.\n In addition you also should include `FileUtils::DryRun` when in dry run mode:\n\n```\ninclude FileUtils::DryRun\n```\n\nThen you're at 99.5% :-) Sadly I haven't found something similar for File or IO.\n OK, You are right. I can understand what you say. I thought a dry run only print a command and it's options at first. But now, I think a dry run should not change files too. I will try to support write and write_nonblock in IO and to use FileUtils::DryRun.\n Hi, I tried to use FileUtils::DryRun. But, I realize it is difficult for me. Here is a problem.\n- Once include FileUtils::DryRun in global, cannot exclude the FileUtils::DryRun module. So I cannnot execute specs at one time.\n\nDo you have any ideas?\n Oops. Didn't think about this side effect. I think you can leave it, because you anyway don't get a 100% dry run for sure. Just add some information what dry run does to the readme.\n\nI'm leaving today for a three week holiday, so @yannlugrin, @rymai or @thibaudgg, can you please take care of this? Thanks a lot!\n @netzpirat Ok, we'll take care of it. Thanks, enjoy your holidays!\n Hum hum, we did_'nt_ take care of this sorry... ^^\n\n@netzpirat, are you still interested (and available) for taking care of this?\n I just merged this branch and spent some time playing with this feature. To be honest, I have no good feeling with it. Catching IO writes has large-scale changes in the whole Ruby interpreter and makes all the specs brittle. I know this was something I suggested, but I think I went to far with this demand and I was misguided by the term `dry-run`. After reading the description of this pull request again, I came to the conclusion that `dry-run` is probably not the right term for what the original need for this pull request was: _Seeing what system commands have been executed._\n\nSo if there are no objections, I suggest to drop the `dry-run` option completely (since we anyway cannot guarantee this for 100%) and just output a hint like `Execute command: command args*` before any system call is executed when we are in debug mode.\n\nIs this ok for you?\n I **TOTALLY** agree, and I must confess I was already thinking of it... Let's use `UI.debug` more! :)\n I'm sorry for late reply. Thank you for your merging my pull request! This is the function that I imagined first time. So I should describe this feature as `debug` or `verbose` option instead of `dry-run`\n   Ha, I just learned about it today for this project!\n  This shows the backtrace when there is a problem with a watch action, makes for easier watch debugging\n No problem :)\n  It's rather un-UNIXy to put a non-hidden config file in the home directory. This patch makes it hidden. I can look into making it backwards compatible if you deem it appropriate, but I've already convinced the original contributors who originally added the home config file so I don't think it's a big deal.\n Would much prefer this style of global Guardfile.  Thanks for submitting!\n Whoops! Fixed the README and updated the CHANGELOG.\n\nIt's certainly possible to support both file names, but like any feature it adds complexity. It is my opinion that very few would actually prefer a file named Guardfile in their home directory, so it's not worth adding such complexity for a backwards compatibility edge-case in pre-1.0 software.\n\nBut, of course, it's not my software, so if it's really desired, I'll look into it.\n  This addition adds a new CLI method, `show` (aliased to `-T` to work like Rake/Capistrano), which concisely lists what's in the Guardfile and in what group:\n\n```\n(global):\n  rspec: version => 2\nGroup exceptional:\n  breaking\nGroup rails:\n  rails: port => 6060, timeout => 20, daemon => true\nGroup doc:\n  rocco: dir => doc-rocco\n  shell\n  livereload\n```\n\nIt does it by creating a new DSL introspection class based on `Guard::Dsl` which prepares a subset of Guardfile structure for display. Individual `watch`es are not shown, since showing those would be a little too much like actually opening the Guardfile.\n\nWritten 'cause I was getting lazy about cracking open Guardfiles on all my projects to see what projects had what groups available for running. :) Hopefully should also help new people on Guard-using projects get up to speed with Guard usage faster.\n @thibaudgg, what tool do I use to generate the actual man page so I know I'm doing it right?\n OK I think I build the manpage right. I cleaned it up a bit more, and added a few of the other commands.\n  Test it again more carefully. Can some one recheck? pls\n I test it on windows with win32console and without. It works for me. But I want someone else to test it. Maybe we need implement spec for this case. But I'm not sure how to write such specs. Maybe something like [aruba](https://github.com/cucumber/aruba). \n Sorry for the delay. To test it do I just need to update to the latest guard?\n @surajreddy, no the patch isn't merged in Guard yet. You can try it by using the @stereobooster Guard fork (https://github.com/stereobooster/guard.git) in your Gemfile. Thanks!\n @thibaudgg, I seem to be using 'guard-rspec' - I don't know how to test this out with that.\n\nOnce I apply the fix in the issue I brought up ( https://github.com/guard/guard/pull/76#issuecomment-1401867 ), colors seem to work fine. I did have to install ansi.\n Testcases are:\n1. windows without ansi and win32console all messages in console without colors\n2. windows with ansi all messages in console colored\n3. windows with win32console all messages in console colored\n4. not windows all messages in console colored\n\nThese case are not covered with RSpec. I tested it myself (not automated)\n Hello, following the conversation from the other issues and seems @stereobooster implementation is clear.\n\nIt attempts to use ansicon first (checking `ANSICON` environment variable and then falls back to win32console gem.\n\nA minor nitpick: I will suggest the message recommends ANSICON over win32console, specially since it is no longer maintained:\n\nhttp://blog.mmediasys.com/2010/11/24/we-all-love-colors/\n\nRSpec2 has dropped support on win32console and now uses ANSICON only.\n\nCheers.\n  I updated guard from 3.4 to 4.2, and found that debugger no longer appeared in terminal when I ran Rspec or Cucumber within Textmate.  Note that debugger would run from the Guard.  But after the update, the debugger would appear in Terminal, and then a \"Terminated\" message appeared and Guard quit.  \n I'm not sure, I actually haven't been using it of late.  If I use it again I'll update this.\n  If a task for a guard throws an exception, the error is swallowed. This is fine, except that if you're developing a guard, all you get is an error message without an idea of where it occurred, which is not very helpful. This change prints the exception and its backtrace to the console before continuing.\n\nOne note about this is that I didn't know whether to print to stderr or use UI.error. I don't really know what the point of the UI module is -- since it resets colors, one would think that it prints colored messages also, but it doesn't do that, so I don't exactly see why it's being used. Feel free to change it to UI.error if that's what you really want, though.\n Hmm. Yeah, UI.debug might make more sense. I could live with that.\n  From time to time guard hangs under linux; it doesn't see any file changes and the ^C and ^Z signals (INTR and STOP IIRC) are not caught. Inspecting the running process with strace shows that guard is hanging in a select loop (with rb-inotify enabled) or in sched_yield (without rb-inotify). I can only get guard to terminate with a SIGKILL.\n\nThis happens both with and without rb-inotify enabled. \n\nRunning guard 0.4.2 under ruby 1.9.2-p180 in a bundle environment (bundler 1.0.15) under linux 2.6.38.\n Sure, the file content is:\n\n```\n# A sample Guardfile\n# More info at https://github.com/guard/guard#readme\n\n guard 'rspec', :version => 2 do\n  watch(%r{^spec/.+_spec\\.rb})\n  watch(%r{^lib/(.+)\\.rb})     { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb') { \"spec\" }\n\n  # Rails example\n  watch('spec/spec_helper.rb')                       { \"spec\" }\n  watch('config/routes.rb')                          { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb') { \"spec/controllers\" }\n  watch(%r{^spec/.+_spec\\.rb})\n  watch(%r{^app/(.+)\\.rb})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^lib/(.+)\\.rb})                           { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch(%r{^app/controllers/(.+)_(controller)\\.rb})  { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\nend\n\nguard 'bundler' do\n  watch('Gemfile')\n  # Uncomment next line if Gemfile contain `gemspec' command\n  # watch(/^.+\\.gemspec/)\nend\n```\n Just a quick followup: I've tried revsersing the sections and so far no lockups happened. However I've been working on a different project for the past 2 days, so I can't be sure if that fixes it or not. Once I move back to the original project I'll give you an update if I still get lockups there.\n It turns out I'm having the same issue with webbrick and according to stackoverflow this is a kernel issue (http://stackoverflow.com/questions/6086601/using-ubuntu-11-04-i-cant-shut-down-rails-server-using-ctrl-c/6109606#6109606).\n\nSo guard is totally innocent :).\n    Ruby 1.9\npik installed \nwin32console gem NOT installed\n\nWhen running guard init <any guard type> and continuous loop occurs where line 45 of ui.rb tests for color_enabled? and fails. This results in the rescue on line 58 being called which attempts to display an info message and then returns false. At this point, from the windows command line, the error message is not displayed and the code continues to loop back to line 45 and then 58 until all the pagefile memory is consumed and guard crashes. \n\nOnce win32console is installed everything works fine. Would it be possible to completely exit guard and display the gem dependency error message?\n  Fixed multiple warnings on ruby-head looked like\n\n``` sh\nguard/spec/guard/listener_spec.rb:7: Use RbConfig instead of obsolete and deprecated Config.\n```\n\nTests passed on ruby-head, 1.9.2, 1.8.7.\n  Is there a way to toggle guard on/off without stoping and restarting?\n\nIt'd be helpful if I could disable it, because I press save every couple seconds and I want to run it after I've saved the changes I know should be tested or whatever.\n\nAny ideas?  Some keyboard shortcut to pause, then another to resume would be awesome.\n I guess I should probably do that, but sometimes when I'm saving a model or something, and I have a large test suite, it can take a minute or so to run, so if I save again within that minute, it doesn't work right.  So it'd be nice to run the test specifically when I want.  I can probably do that by more finely tuning the guardfile.  I'll look into that.  Thanks.\n I have a different use case than @viatropos where pausing would come in handy: temporarily switching git branches. Sometimes when I switch back to `master` I'd rather not have Guard restarting rails, running specs. Currently I exit out of guard. However, I use `guard-livereload` and when I switch back to my topic branch I have to re-enable livereload in my browser windows.\n\nWould you be amendable to a pull request that adds in pausing support, say with Ctrl-D?\n +1 to have some way to pause it.\n\nI have a staging script that switches branches, run the test suites and bundle gems etc, and guard goes crazy with all the branch-switching, sometimes interfering with the process.\n\nIt would be nice if I had a way to turn guard off during the execution of this script rather than having to remember to switch it off.\n\nCrazy idea: what if guard could watch only when we're inside a git branch or a specific set of git branches? Maybe too specific? Anyway, if I had a way to turn guard off and then back on again from inside a rake task using ruby code it would be great.\n\nBtw, thanks ! I love guard.\n  Added a failing spec for the case of files named '.whatever'. Fails with 1.8.7 and 1.9.2 on Mac.\nNot yet sure how to fix this. Thought I'd submit the failing spec to verify it's not just my system, and see if anyone else has an idea.\n This spec doesn't fail with Linux Listener, fixed in Polling listener (5d1203d).\n\n@thibaudgg, @rymai, please checkout `dot_file_fix` branch to fix Darwin Listener.\n\nI try to test Windows soon.\n Mac is now working for me too (it still fails at f25ef91, but 5d1203d fixed it).\n\nI did mess with my spotlight stuff a while ago. Thought I had it all back to normal, but maybe that's not working and it was falling through to polling?\n  Gedit saves files in an uncommon way. They write a temporary files and then move to overwrite the original filename.\n\nGuard on linux right now are only watching for modify and create events, so, modifying a file from gedit is never detected because the final event is a IN_MOVE_TO. So, adding :moved_to in the worker.watch of listener/linux.rb:47 fix this problem.\n\nI dont know if this has a drawback, but if not, it would be nice to have in the next release :)\n\nThank you!\n Event detected by guard on Linux is probably not quite enough If you send a pull request, we probably can merge it, but test your patch in real world (with GEdit) before please.\n Thanks for the quick reply. Rigth now the fix as expressed in the first post is working with gedit.\n\nI'll be forking the project tomorrow and testing this fix severals editors (at least the popular ones : vim, emacs, gedit, somee KDE's editor) to be sure that don't break, and send a pull request if all is goin smooth.\n FWIW, vim saves files in the same way (write to temporary, copy on top of old) if `set backup` is enabled. I just noticed this because my Dropbox revision history had a series of delete+add instead of modify. \n Ok, first problem :). If we support moved_to, we break the spec \"not catches a moved file\" from 'it_should_behave_like \"a listener that reacts to #on_change\"'.\n\nI'll try using CLOSE_WRITE and see if behave as expected (at least with GEdit works file, and File.touch is now recognized)\n I'm still having this issue with gedit. \n\nSpecs run when I touch them or use nano to edit.\n\nBut when using gedit guard doesn't pick up the change. \n\nUsing the guard git repo in my gemfile, so latest source. \n Have you tried to run guard with bundle exec ?\n\n`bundle exec guard`\n When I run it with that, I think spork takes issue with it. \n\n```Guard::RSpec is running, with RSpec 2!\nRunning all specs\nRuntimeError: Called id for nil, which would mistakenly be 4 -- if you really wanted the id of nil, use object_id\n  method_missing at /home/michael/.rvm/rubies/jruby-1.6.2/lib/ruby/1.8/drb/drb.rb:1134\n\n```\n```\n To install guard from source, you can follow this instruction :\n\n```\ngit clone git://github.com/guard/guard.git\ncd guard\nbundle install\ngedit lib/guard/version.rb # replace \"0.4.2\" by \"0.4.2.1\"\nrake install\n```\n\nThis install a version 0.4.2.1 on your system and you can run guard without bundler now.\n Followed instructions, now I get the following error when I run guard:\nTo note, I'm using guard with spork. \n\n```\n$ guard -g rspec\nThe signal QUIT is in use by the JVM and will not work correctly on this platform\nGuard is now watching at '/home/michael/dev/git4/nfproto'\nGuard::RSpec is running, with RSpec 2!\nRunning all specs\nRuntimeError: Called id for nil, which would mistakenly be 4 -- if you really wanted the id of nil, use object_id\n  method_missing at /home/michael/.rvm/rubies/jruby-1.6.2/lib/ruby/1.8/drb/drb.rb:1134\n             run at /home/michael/.rvm/gems/jruby-1.6.2@railspre/gems/rspec-core-2.6.4/lib/rspec/core/drb_command_line.rb:19\n    run_over_drb at /home/michael/.rvm/gems/jruby-1.6.2@railspre/gems/rspec-core-2.6.4/lib/rspec/core/runner.rb:76\n             run at /home/michael/.rvm/gems/jruby-1.6.2@railspre/gems/rspec-core-2.6.4/lib/rspec/core/runner.rb:63\n         autorun at /home/michael/.rvm/gems/jruby-1.6.2@railspre/gems/rspec-core-2.6.4/lib/rspec/core/runner.rb:11\n            call at org/jruby/RubyProc.java:268\n            call at org/jruby/RubyProc.java:232\n```\n\nThis might be a spork+jruby issue though, but it used to work. \n\nEdit: Looks like it was just an error in one of my specs. Looks like it works now. Thanks. \n  Just missed the link at the end of file.\n  This branch contains various small tweaks I've done to Guard. The most important is 17a654b1714c13aa124aedf78d6e59b8ac3db0d1 for which I forgot to send a pull request in time for the the 0.4.0 release. Others are for you to review and cherry-pick if wanted\n  This is a follow up to https://github.com/guard/guard/issues/12\n\nCommenting out line#8 in ui.rb seems to fix a stack level too deep error on Windows.\n I think it's my fault. Temporary solution can be\n\n```\n          info \"You must 'gem install win32console' to use color on Windows\" // this string cause to deep stack, beackause info use color_enabled? function\n```\n\nreplace with\n\n```\n          p \"You must 'gem install win32console' to use color on Windows\"\n```\n\nI have no possibility to test it right now.\n According to someone on the issue I was following up with (https://github.com/guard/guard/issues/12), it's trying to use the gem to tell us that the gem is missing.\n\nWhen we installed ansicon on windows, that fixed the color issues. I'll try to see if installing the win32console gem fixes it, but for now everything's working great with that line commented out.\n\nI'd recommend ignoring my pull request (cause it's just a temp fix), but fixing it in the next version.\n Test it again, seems not. See https://github.com/guard/guard/pull/90. @surajreddy can you check it?\n @stereobooster, I'm using the gem 'guard-rspec' - how do I test this out?\n @surajreddy \nUninstall gem win32console (remove from Gemfile, if there is one).\nRemove ansi.\nRun guard.\nThere is should be no \"stack level too deep\" error.\n  I was trying to figure out why every time that I began editing any file guard would be triggered for that file before I saved the file. I finally figured out that it was because editors like vim keep a \"*.swp\" version of the file and that swp file is modified as a user edits a file. Therefore, if you add a '$' to the end of those regex examples, at the end of the file extension, this clears up problems for vim users and other editors that may use similar temporary files.\n I updated https://github.com/guard/guard/wiki/Guardfile-examples\n I updated guard-cucumber also.\n  Hey guys,\n\nthis is a little help to make guard's CHANGELOG da cleanest CHANGELOG ever. :)\n I'm happy you like it!\n https://gist.github.com/1003649 in case you need that on other changelogs\n  I tried treating Guardfile groups like Gemfile groups by using symbols and that failed. This patch allows the use of symbols in the Guardfile.\n Will that work?\n All 130 of them.\n  Hi there. I'm writing a custom guard plugin (it's also my first ever gem, so I'm a proper newbie), and I'm having real problems with it.\n\nI'm trying to write a guard that will watch a folder for markdown documents and then use kramdown to convert them to html.\n\nI've followed the example on the Guard home page for writing my own guard, and also checked out some of the other guards listed in the wiki. The simplest one there seems to be Guard-Shell. i can't for the life of me see what I've done wrong, and I'm at the point where I'm thinking this may be a bug in the examples or the version of guard I'm using (0.3.4) which is why I'm posting here.\n\nPlease excuse me if this isn't a bug, in which case I guess I should be posting on SO or something. But I'd really appreciate a pointer.\n\nThe error I'm getting:\n\n```\n   ERROR: Could not find load find gem 'guard-krammer' or find class Guard::krammer\n   ERROR: Invalid Guardfile, original error is:\n   undefined method `new' for nil:NilClass\n```\n\nMy project repo: [guard-krammer](https://github.com/darwalenator/Guard-Krammer)\n Thanks, I've renamed the repo\n\nSorry for what is probably a dumb question, but why is my version statement broken? I've included lib/guard/krammer/version.rb and that contains a module called [KrammerVersion](https://github.com/darwalenator/guard-krammer/blob/master/lib/guard/krammer/version.rb#L2-4) which is what I've referenced in the gemspec. Isn't that right? Or should the module name match the path name exactly or something?\n I was able to run your Guard by changing\n\n```\ns.require_paths = [\"lib\"]\n```\n\nwithin your `guard-krammer.gemspec` to\n\n```\ns.require_path  = 'lib'\n```\n I also  would removed\n\n```\ns.test_files    = `git ls-files -- {test,spec,features}/*`.split(\"\\n\")\n```\n\nbecause in my opinion I would try to keep the gem size as small as possible, and people who like to use the tests should anyway check out the whole project from Github.\n\nAlso the line\n\n```\ns.executables   = `git ls-files -- bin/*`.split(\"\\n\").map{ |f| File.basename(f) }\n```\n\nis unnecessary, since Guard itself has the binary and not guard-krammer.\n Why did you name your Guard `guard-krammer`? Because you're using kramdown? \n\nI would have choosen a name related to the syntax (Markdown) instead of one related to one of the many implementations (kramdown itself was a very good choice, because it runs on C Ruby and JRuby). This would enable a potential user of your guard to recognize what it's related to without the need to open the project and read the Readme, because the [list of available guards](https://github.com/guard/guard/wiki/List-of-available-Guards) is slim and has not additional information.\n @thibaudgg What about registering `guard-dev` on Google groups and add it together with #guard on irc.freenode.net to the Readme file? I believe this would help new guard developers a lot.\n Nice one guys, guard-markdown it is :)\n\nLike I said, this is my first gem so I was sticking as closely to the bundler gem structure as possible. But I'll Jake those changes later. Nice one. \n  The `run_all` command (`Ctrl-\\`) don't work well on non-US keyboard layouts. I can't even trigger it on Swedish keyboard without hacking ZSH key bindings - which itself is overkill for most potential users of Guard I believe. Could we add a better keyboard alias?\n Great thanks!\n Thanks!\n  Muscle memory sometimes has me saving files that I haven't actually modified. Having to wait for guard to do its thing can be a bit annoying in this scenario. That said, I know it can also be useful to force certain things to happen just by saving a file. What do others think?\n I frequently use this \"feature\" when, per example, I want to relaunch the specs on a unchanged file after having modified a other file. But maybe we can provide this behavior via an option.\n Yep, that's a good point :)\n I assumed that the file system would not be able to provide this information. That said, you don't need to duplicate the content, you just need a hash or md5sum of each file. My first thought would be to have a Ruby hash with the file name and path as the key and an md5sum as the value. When the file system says a file has changed, Guard would recalculate the md5sum and compare it to the previously calculated value.\n\nIt would be slower, but if you prevent running a bunch of specs or reloading spork unnecessarily then you've more than made up the time.\n\nAs thibaudgg said, it can be useful to quickly rerun a spec by just saving the file. If this feature is going to be implemented, enabling it would have to require configuration.\n\nI just posted this to see if others were interested enough to warrant me working on it.\n What do you think of that? https://github.com/guard/guard/commit/0dcf13d77c57c53bc8b7b52533687e1f726fc171\n Great, thanks. And because of [this issue](https://github.com/guard/guard-livereload/issues/4#issuecomment-1114670) I think we can't provide this as an option (it'll be the default and not be disabled)\n I have change the implementation [in this commit](https://github.com/guard/guard/commit/8f68778927b7cfe9026f963e17fa567e9d156aa5) to only check sha1 checksum when `File.mtime(path).to_i == last_event.to_i` so just touching file is still working. After trying some time to use Guard without the touch feature, I really missed it. So I don't think it's a good default behavior. I close this issue, but now with the sha1 checksum, It's really easy to add that as an option. If you still want it, please submit a pull request. Thanks!\n  I'm writing a gem called guard-bot which watched incoming directories for new .bot files, and then passes the file to a Bot object who will read the file, parse it for commands, and optionally write out a results file.\n\nI'm using that in a project called Alfred who's job it will be to watch a dropbox folder for incoming messages and uses those messages to move files from a large back-end library to a folder in dropbox.  \n\nThe whole idea is that I have many more media files than I have space in Dropbox, so Alfred will act as a librarian of sorts, and provide a way to search the media library for files, and then put those files into Dropbox.  So the next time I'm out of town and want to watch something I've got on my library server, I can.\n\nBut it seems that guard always uses a relative path starting at the directory the Guardfile is in.  So I'd like a way to indicate that I instead want it to use absolute pathnames, or possibly set a PARENTDIR folder that it will use instead of the Guardfile path when setting up watchers.\n Actually as I dig into the code, I think just a parent option would be fine.  working on code now.\n That's not the issue. \nIf I am in /home/anithri/workspace/alfred and so is the Guardfile.\n\nAnd I define a watch like \n\n``` ruby\n  guard 'livereload' do\n    watch(\"/tmp/output.hmtl\")\n  end\n```\n\nthen Guard sends change signals to the livereload guard _only_ when /home/anithri/workspace/alfred/tmp/output.html is changed\nand will not send a signal when /tmp/output.html is changed.\n\nThis is because Dir.pwd is joined to the files given to the watch method.\n\nWhat I want, (and am coding, and am writing the specs for) is the ability to define a different parent dir from (Dir.pwd).\n1. Add the ability to pass a -parent flag to the guard process which it will use as the parent dir (optionally looking for the Guardfile in that location)\n2. Add the ability to declare a Guard DSL method (may not fly) that can define a parent dir at the File or Group level\n3. Add the ability to define a :parent option for the guard command.  Watches declared for that guard will use it by preference\n\nI don't know if all of that can be accomplished without really complicating the code, but I do know the -parent flag should as it only needs to change code in a few places.\n\nA different solution that is _not_ behavior compatable with the current setup, but is the easiest change would be to treat\nwatches that start with a '/' (and a '~' for convience, expands to the users home dir) as not needing to prepend the Dir.pwd.  But that would potentially change the behavior of existing guards that already use leading '/', which is used in some of the examples.\n\nI think this is a very useful behavior to add as it allows Guard to start to do things that are not testing or project centric.\n1. Automatically file things placed into a directory.\n2. Send notify/growl messages based on the content of a log file \n3. automatically delete files in a directory after some number of hours have passed (scratch space)\n4. submit data to process, database. websites, or other apis based on the name or contents of a file\n Um.. I unintenionally had that problem but bypassed it by creating a symbolic link in my project folder ->  to the folder i wanted to guard.. Did I do something bad?\n merged\n How is this to be used? `:listen` doesn't seem to do anything, I couldn't find any docs about how to make Guard work with absolute paths.\n The `:listen` hasn't been implemented, that's why :)   My ['merged'](https://github.com/guard/guard/issues/53#issuecomment-1254771) comment must be a mistake. @netzpirat do you remembers what could have been merged?\n  In the latest [Railscasts episode](http://railscasts.com/episodes/264-guard) I ran into the issue that [LiveReload](https://github.com/guard/guard-livereload) changes were not shown until after the specs run. Moving them first helps solve this problem, but if you're making changes quickly the tests will still be running and you won't see the changes.\n\nI would love it if there was some way to specify a guard to run in a separate thread so it won't interfere with other guards. This can also address issue #19 where changes to files are not detected while a guard is running. IIRC other similar tools such as autotest detect changes while the tests are running, why can't guard? It's frustrating to have to re-save a file for Guard to pick up on a change because it happened to be running before.\n\nUpdate: Maybe this can be combined with the groups feature (issue #26), because often you want some guards to run in sequence (cucumber with rspec) but some in parallel. Placing guards in a group could make it run in sequence.\n @netzpirat, good idea. At least that is a work-around. It would be nice if we didn't have to start two processes though.\n\nThere's still the other problem mentioned in #19 where files saved while the tests are running won't be picked up to run the tests again which requires me to save the file again for it to notice. I think that would be an easy feature to add once guards are split into multiple threads. The longer the tests take to run the more critical this is. I love Guard, but have a hard time using it on those kinds of projects.\n Hi @netzpirat, are you still interested in developing this feature (now that we store the list of groups)?\n\nIf yes, feel free to assign yourself to the issue instead of me! ;)\n Not yet, because I have no need for it. \n\nThe reason why I wouldn't use it currently is simple: I like to have each Guard group in its own terminal window because I don't want to have my RSpec results mixed with CoffeeScript validations and the like. For this reason I use [Terminitor](https://github.com/achiu/terminitor) in each project and I can perfectly configure my terminal setup to have my iTerm split with different Guard groups.\n\nFor the example in the issue description this issue makes perfectly sense, but I don't have the problem right now and I have spent (again) to much time on my toolkit (guard-jasmine lately) instead of my product, so someone who will profit from the solution should also implement it ;)\n\nBut this may change in the future...\n I understand and I agree!\n\n@ryanb, are you still interested? If yes, feel free to make a pull-request.\n I remember that we discussed the locking issue once, but I'm no longer sure what @thibaudgg said why locking is needed at all. Could it be an issue with inotify? In this case, I could simply add an option `:locking` that defaults to true, so that at least on OS X and Windows we could set it to `false` and enjoy parallel Guards with a very low effort? \n I think the way to do this is to use, or at least copy, Aruba's process management, which uses child process, so is cross platform.\n Anyway, you'd index the processes using the shell command that started them, duplicates can easily be prevented by searching for a process before starting. \n\nI used this approach to manage SSH multiplexing connections, and in various tests it seems to be working very well.\nThe addiotnal code would be small if you depend on Aruba, but even if you just 'copy' Aruba's Process and API files it won't be much work.\n\nHTH\n Please can you share some links about this Aruba's process management.\n Not sure if this[0] suffices (up/down that page there may be more relevant illustrations)?  You'll likely need a `get_name(process)` but `get_process(launch_string)` shows how trivial that is.  The whole API isn't much more complicated, nor is the whole process management code[1]\n\nHTH\n\n[0] https://github.com/cucumber/aruba/blob/master/lib/aruba/api.rb#L207\n[1] https://github.com/cucumber/aruba/blob/master/lib/aruba/process.rb\n Aruba's process management seems interesting, sadly I don't have the time to trying to add it on Guard at the moment. But it would be great if you give it a try! Thanks\n Not familiar with Gaurd's internals, so to flatten the learning curve... \nCan to suggest the best point at which to insert such a 'launch'.\nCan you suggest the most appropriate module/class to contain such a launch method?\nFinally, configuration.  How to indicate parallel launch, maybe:\n\n```\ngroup 'frontend', :parallel => true do\n  guard 'coffeescript', :input => 'app/coffeescripts', :output => 'public/javascripts/compiled'\n  guard 'livereload' do\n    watch(%r{^app/.+\\.(erb|haml)})\n  end\nend\n```\n Maybe this can help you:\n\nGuards are all started (regardless of their group) [here](https://github.com/guard/guard/blob/dev/lib/guard.rb#L163-165) so you should probably replace it with a loop on the groups, like [here](https://github.com/guard/guard/blob/dev/lib/guard.rb#L263-269) where \u2013 if the group has the `:parallel` option \u2013 you would start a process (with `#launch`) and start guards using this new process.\nI think you could add the `launch` method directly inside https://github.com/guard/guard/blob/dev/lib/guard.rb for now.\n\nDoes it make sense?\n @rymai, thanks for that I'll try get to this in the next week or so.  Am I right in understanding that both `group` and `guard` should accept a `:parallel` option?  Specifically if `guard` takes a `:parallel` option then we'd need to loop over the `watch`ed and `#launch` each of them.\n That was poetry. :cry:\n  This change allows guard plugins (like guard-rspec) to pass options (like :priority) up to the Growl notifier. With this change, things like indirect/rspec-guard@d2f01d69a7aa2d8c4ea01586618f26422680bbf0 are possible, and the growl notification colors can be customized depending on the outcome of the spec run.\n   > Have you an idea about a possible replacement for TSTP signal (Ctrl-Z) to handle \"reload\" on Windows? \n\nHow about to read stdin in main thread (wait for hotkeys like Ctrl-Z) and in the fork watch for file changes. If hotkey happens just send notification to the forked proccess\nOr maybe try to fix signals https://github.com/Spakman/syscalls\n\n> Do you think it's easy to add something like http://win32utils.rubyforge.org instead of polling for Windows?\n\nIt's possible to use windows native function to watch for file system changes. But the API is very limited - it only can tell that something is changed in watched directory, but not exactly which file was changed\nhttp://msdn.microsoft.com/en-us/library/aa365261(VS.85).aspx\n\nI tryed to make library in maner of rb-inotify using example from here http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/36807 , but it's not working yet\n Take a look here is gem which mimics rb-inotify interface using native windows functions http://github.com/stereobooster/rb-fchange\nIt works. But it only can say that something is changed in the directory, it can't say exactly which file or subfolder was changed (limitation of winapi). So I'm not sure is it useful or not. If we will use it - it can simply trigger file system scan (we don't need to scan it all time - poll).\n > Can you tried to do that?\n\nYes (spec: 67 examples, 0 failures). https://github.com/stereobooster/guard/tree/windows\n\nAs I understand https://github.com/Spakman/syscalls on Windows won't work beacause there are no some functions in msvcrt.dll (like sys_sigwait)\n > Yes (spec: 67 examples, 0 failures). https://github.com/stereobooster/guard/tree/windows\n\nThat's awesome, can you submit another pull request for that? (With the README updated please)\n\n> As I understand https://github.com/Spakman/syscalls on Windows won't work beacause there are no some functions in msvcrt.dll (like sys_sigwait)\n\nIf `syscalls` don't work on Windows the only alternative I can see is to choose another signal for the `reload`, do you see a good candidate?\n\nDo you know if an notification system like `growl` exists on Windows? It would the last thing we need to have a full Windows compatibility :)\n > If syscalls don't work on Windows the only alternative I can see is to choose another signal for the reload, do you see a good candidate?\n\nNo. Because only INT generated by keyboard shortcut (Ctrl + C). And actualy with INT sgnal not all that simple \n\n> SIGINT is not supported for any Win32 application, including Windows 98/Me and Windows NT/2000/XP. When a CTRL+C interrupt occurs, Win32 operating systems generate a new thread to specifically handle that interrupt. This can cause a single-thread application such as UNIX, to become multithreaded, resulting in unexpected behavior.\n\nsource: http://msdn.microsoft.com/en-us/library/xdkz3x12(v=vs.71).aspx\n\n> Do you know if an notification system like growl exists on Windows?\n\nThere are two systems. http://lifehacker.com/#!5350422/battle-of-the-windows-notification-apps-growl-for-windows-vs-snarl\nBut they are not so widely spreaded.\n Ok thanks for all your researchs, we can continue the discussion about finding an alternative to Signal trapping here #27.\n  I added the ability to inline a guard class in the guardfile itself rather than going out to a gem for everything.  This could be useful when there are complex things you may need to run as opposed to the guard-shell gem which only lets you 'run on change'.  I have some custom things I would like to guard and would rather not create a gem for it.  Guard will attempt to load the gem as before and then look for a class.  If it is inline it will get picked up.\n\nHere is an example of a Guardfile with what I am describing as an inline guard class:\n\nrequire 'guard/guard'\n\nmodule ::Guard\n  class Example < ::Guard::Guard\n    def run_on_change(paths)\n      puts 'hello'\n    end\n  end\nend\n\nguard 'example' do\n  watch(%r{.*})\nend\n  If I base my development environment on guard, I might want to copy some files or compile some coffeescripts or sass files during the build.\nIn this case, when someone clones the repository, it should it ctrl-\\ to rebuild everything, which is quite uncommon.\n\nMaybe a \"--run-on-start\", or \"-s\" flag in the guard command might solve this problem.\n\nThanks for the good work!\n  Hi, I'm not sure if this is just me not seeing something obvious, but I can't make guard detect changes in any of my coffeescript files. Strangely enough, when I first installed it yesterday, it worked. But then for some reasons it stopped detecting changes.\n\nHere's my Guardfile:\n\n```\nguard 'coffeescript', :input => 'spec/coffeescripts', :output => 'spec/javascripts'\n```\n\nI'm using macosx. I tried v. 0.3 and v 0.3.2, both with rb-fsevent and without. All coffee files have a .coffee extension and are in the `spec/coffeescripts` directory. `spec/javascripts` directory exists, but nothing appears there when I change my .coffee files.\n I can imagine some cases why it doesn't work:\n1. ExecJS cannot determine the runtime. First install the ExecJS gem:\n   \n   ```\n   gem install execjs\n   ```\n   \n   Then check it with an irb session:\n   \n   ```\n   >> require 'execjs'\n   => true\n   >> ExecJS.runtime\n   => #<ExecJS::ExternalRuntime:0x0000010090fa78 @name=\"Node.js (V8)\", @command=[\"nodejs\", \"node\"], @runner_path=\"/Users/michi/.rvm/gems/ruby-1.9.2-p180/gems/execjs-0.2.0/lib/execjs/support/node_runner.js\", @test_args=nil, @test_match=nil, @conversion=nil, @binary=\"node\">\n   >> ExecJS.eval('1 + 1')\n   => 2\n   ```\n2. The CoffeeScript file has some errors and cannot be converted to a JavaScript file. This is usually reported as a Growl message (when Growl and the growl gem are installed), but you can also verify it on the command line:\n   \n   ```\n   coffee -c yourfile.coffee\n   cat yourfile.js\n   ```\n3. There is an error in generating the watcher from the :input option. You can verify it by adding a watcher manually:\n   \n   ```\n   guard 'coffeescript', :output => 'spec/javascripts' do\n       watch(%r{app/coffeescripts/(.+\\.coffee)})\n   end\n   ```\n\nFrom your description I guess it'll be number 2 :-)\n I just checked all of the three options.\n1. Installed ExecJS, checked in irb - output was the same as yours. No changes, file is still not compiled after guard restart.\n2. The file is valid. In fact, I only wrote `alert \"hello\"` in it. And I even checked that with the command you suggested. It's valid.\n3. Tried explicitly writing the watcher, no luck.\n Ok, so we have to figure out if the problem is related to Guard/rb-fsevent or guard-coffeescript.\nFirst, what Ruby version are you using? If you're on Ruby 1.8 you have to install the json or json_pure gem.\nSecond, what happens if you force Guard to run all watchers with `Ctrl-\\`\n I'm on 1.8.7 , installing json_pure did not help.\nCtrl-\\ compiled the file, so we're getting somewhere. But it still doesn't happen automatically.\n Just did a small test to verify that it works on my machine. Here's the shell session log:\n\n```\notherland ~ \u00bb mkdir test\notherland ~ \u00bb cd test\notherland ~/test \u00bb echo \"source :rubygems\\ngem 'guard'\\ngem 'guard-coffeescript'\" > Gemfile\notherland ~/test \u00bb bundle\nFetching source index for http://rubygems.org/\nUsing coffee-script-source (1.0.1) \nUsing execjs (0.2.0) \nUsing coffee-script (2.2.0) \nUsing thor (0.14.6) \nInstalling guard (0.3.2) \nUsing guard-coffeescript (0.2.0) \nUsing bundler (1.0.12) \nYour bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.\notherland ~/test \u00bb echo \"guard 'coffeescript', :input => 'spec/coffeescripts', :output => 'spec/javascripts'\" > Guardfile\notherland ~/test \u00bb guard &\n[1] 10822\notherland ~/test \u00bb Guard is now watching at '/Users/michi/test'\notherland ~/test \u00bb mkdir -p spec/coffeescripts\notherland ~/test \u00bb mkdir -p spec/javascripts  \notherland ~/test \u00bb echo \"alert 'test'\" > spec/coffeescripts/test.coffee\nCompile spec/coffeescripts/test.coffee\notherland ~/test \u00bb cat spec/javascripts/test.js \n(function() {\n  alert('test');\n}).call(this);\n```\n\nSo everything works fine here.\n Notice that I had a small typo by writing `spec` instead of `specs`, but this does not have an influence on the outcome of the test. Are you sure you haven't a typo in the path of the :input and :output options?\n I am sure, yes. I copy-pasted them. Besides, if I had a typo, Ctrl-/ wouldn't work, right?\n Yes you're right! I'm actually enjoying some beer and it has the desired effect :-) I'm almost at my wits' end. Can you please verify that rb-fsevent works as expected by testing it with the script from the readme:\n\n```\nrequire 'rb-fsevent'\n\nfsevent = FSEvent.new\nfsevent.watch Dir.pwd do |directories|\n  puts \"Detected change inside: #{directories.inspect}\"\nend\n\nfsevent.run\n```\n\nRun the above snippet and touch a file in the current directory.\n And what happens when you reply the shell session transcript?\n Ok, here's what I did. I cd-ed to ~/Desktop, started irb, pasted that snippet. fsevent seemed to be running. I touched a file, fsevent replied with `Detected change inside: [\"/Users/roman/Desktop/\"]`.\n\nHowever, when I did the same on my project dir - it didn't work. Beats a hell out of me why.\n Also, what exactly do you mean by \"reply the shell session transcript\"?\n Reply the shell session transcript means to execute the same commands as I did in my previous comment where I verified that it works on my machine. But with your `rb-fsevent` test you nailed down the failure: For some reason `rb-fsevent` doesn't notify a change in your project directory. Is there something special with your project directory? Is it on a network drive or on another hard drive with a different file system than HFS+?\n Well, the only special things about it is that it is synced by Dropbox and that there's a git repo in it. Now that I think about it, could be Dropbox. I don't see any other explanation.\n I just created a git repo in my Dropbox and ran the `rb-fsevent` test. All changes were detected fine under both Ruby 1.8.7 and Ruby 1.9.2.\n\nWhat happens if you copy your project onto the desktop and remove the `.git` directory? Then you should have closer conditions to your previous test on your desktop.\n I copied the dir, removed the .git dir from it, run the test - changes were detected. However, they are also detected even when I don't remove the .git dir from this copy on my Desktop. Checked again - still doesn't work in the original dir. I still think it may be some weird Dropbox bug that appears under certain circumstances. Because, like I said, everything worked smoothly just yesterday.\n I just checked my Dropbox version and mine was out-dated with version 1.0.28. I re-ran the test within the Dropbox after upgrading to the current version 1.1.24 and it also works for me. What's your Dropbox version? I personally miss an upgrade notification from the app and find myself often using a totally out-dated version of Dropbox.\n My version of Dropbox is even more outdated, it's 1.0.10\nWill keep you updated if I find the true reason for this weird behavior of the filesystem.\n I updated Dropbox to the latest version, still no luck.\n I guess you're using the current OS X version 10.6.7?\n Actually 10.6.6\nI'll try updating later today.\n I've also tried to \"reply the shell session transcript\", and it worked on my Desktop and in Dropbox! :|\n\nGood luck guys, don't drink too much Netzpirat, we need you on this! ;)\n Any update on this?\n I've updated MacOSX to 10.6.7. Still no luck.\n Not the answer I'd like to hear... I'm sorry, I'm at my wits' end and cannot help you further. I suggest you to take the following actions:\n\nThere is a nice little tool called [fseventer](http://www.fernlightning.com/doku.php?id=software:fseventer:start) that visualizes FS Events. I tested it on my machine and it works fine on the latest OS X version. Can you please test if your Mac OS X is sending the correct FS events? You can set a filter to your project directory to narrow down the results.\n\nWhen OS X fails to send the FS Events in your project directory, you should report a [bug to Apple](http://developer.apple.com/bugreporter/bugrptform.html) (You aren't using a Hackintosh, are you?) and/or file a bug in the [Dropbox Bugs & Troubleshooting forum](http://forums.dropbox.com/forum.php?id=2).\n\nWhen OS X successfully sends the FS Events in your project directory, you should open an Issue on [rb-fsevent](https://github.com/thibaudgg/rb-fsevent) with a recap of this thread along with detailed description of your OS X environment and file system settings (format, journaling, case-sensitive). @thibaudgg and @ttilley have a much deeper understanding of this gem and may help you to resolve the issue.\n Thanks a lot, you've been very helpful anyway. I'll try the things you suggested in the last message, maybe I'll discover a solution.\n You're welcome. I really like to hear if you found a solution to this problem.\n An aside: \n\n```\nexport FWDEBUG=\"true\" gem install rb-fsevent\n```\n\nThis will enable a truly obnoxious level of debugging output when the bin gets compiled.\n Ah, yes. There IS an example of how verbose debug is in the README for 0.4. :)\n\nYou will know EVERY last detail of what happens within fsevent_watch, making additional tools hopefully unnecessary.\n I am having this problem on OSX 10.7.1, when I remove use of gem rb-fsevent (0.4.3.1) it starts working again.\nhttps://github.com/thibaudgg/rb-fsevent/issues/10\n XCode Version 4.1 (Build 4B110) downloaded from the App Store on a new Lion MacBook Pro.\n\nI'm watching changes on /Users/greg/workspace/company/project-name (it actually does have a hyphen).\n It seems to be the gem rb-fsevent (0.4.3.1) that is the problem, not guard.\n\nI tried it with no hyphen in the path, and I got the same result: with the gem rb-fsevent it does not detect changes, when I remove that and instead use the gem autotest-fsevent it works as expected.\n there is an issue open for rb-fsevent at the same url as in my first post here: https://github.com/thibaudgg/rb-fsevent/issues/10\n @gvt YES! another test subject!!! if you're online now, and willing to let me poke around, i'm on AIM as YourTravis and IRC on irc.freenode.net as Aphelion. If you've been keeping track of issue 10 you know we're close and just need another person experiencing the bug to test some theories. =]\n @gvt alternatively, it would be insanely useful if you could run https://github.com/andreyvit/find-fsevents-bugs \n I'll give find-fsevents-bugs a try when I can and get back to ya!\n thankyou :)\n @gvt - I also just pushed a pre-release version of the rb-fsevent gem that uses a nearly completely rewritten fsevent_watch. In particular, the path resolution logic is different and may _:crosses fingers:_ bypass the issue.\n When the new version is finished for real, I think it's a significant enough\njump to qualify for 1.0. =]\n\nOn Thu, Sep 29, 2011 at 3:53 AM, Thibaud Guillaume-Gentil <\nreply@reply.github.com>wrote:\n\n> @ttilley 0.9.0.pre1 ? that's a big jump forward :)\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/guard/guard/issues/45#issuecomment-2235129\n I just worked through this problem, and found that it seems there is an issue picking up the fs events when using a case-insensitive filesystem and the real path from which you are 'listening' for changes contains capital characters.\n\nIt didn't work when the real path to my project was: `~/Project`, but does work when the Project directory is moved to project, so that it is `~/project`.\n @JamesMaroney Yeah this is a [known issue](https://github.com/thibaudgg/rb-fsevent/issues/10) with OS X FSEvents.\n I'm getting a variation of this problem on Ubuntu 12.04 with rb-inotify (0.8.8), while 0.9.0 seems to be okay. The following debug trace may be of interest:\n\n```\n12:21:00 prusswan@prusswan-vm billingly (master)$ bundle exec guard -d\n12:21:06 - DEBUG - Command execution: which notify-send\n12:21:06 - DEBUG - Command execution: emacsclient --eval '1' 2> /dev/null || echo 'N/A'\n12:21:06 - INFO - Guard uses NotifySend to send notifications.\n12:21:06 - INFO - Guard uses TerminalTitle to send notifications.\n12:21:06 - DEBUG - Command execution: hash stty\n12:21:06 - DEBUG - Guard starts all plugins\n12:21:06 - DEBUG - Hook :start_begin executed for Guard::RSpec\n12:21:06 - INFO - Guard::RSpec is running, with RSpec 2!\n12:21:06 - DEBUG - Hook :start_end executed for Guard::RSpec\n12:21:06 - INFO - Guard is now watching at '/home/prusswan/Desktop/billingly'\n12:21:08 - DEBUG - Command execution: hash stty\n12:21:08 - DEBUG - Start interactor\n12:21:14 - DEBUG - Stop interactor\n12:21:14 - DEBUG - Command execution: hash stty\n12:21:14 - DEBUG - Trying to run Guard::RSpec#run_on_additions with [\"spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/controllers/application_controller_spec.rb\", \"spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/controllers/redemptions_controller_spec.rb\", \"spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/controllers/subscriptions_controller_spec.rb\", \"spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/controllers/use_cases_controller_spec.rb\"]\n12:21:14 - DEBUG - Trying to run Guard::RSpec#run_on_changes with [\"spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/controllers/application_controller_spec.rb\", \"spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/controllers/redemptions_controller_spec.rb\", \"spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/controllers/subscriptions_controller_spec.rb\", \"spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/dummy/spec/controllers/use_cases_controller_spec.rb\"]\n12:21:14 - DEBUG - Hook :run_on_change_begin executed for Guard::RSpec\n12:21:14 - DEBUG - Command execution: hash stty\n12:21:14 - DEBUG - Start interactor\n```\n  open_gem currently has a pretty serious issue with it that I've documented here:\nhttps://github.com/adamsanderson/open_gem/issues/12#issuecomment-1018765\n\nThis gem hasn't been updated in a while and doesn't seem to be actively maintained anymore. Should we consider using a replacement for this dependency? The gem author even says he's using this now:\nhttps://github.com/adamsanderson/qwandry\n Actually we don't depend on `open_gem` for about 2 months in master and a fews days since the 0.3.1 release\nThis was the commit that ended the dependency: guard/guard@59f555e086ba32e7b85d619746ac28c508ad53f9\n  Is there any interest in providing a hook or callback mechanism for Guard? For example, if I wanted to benchmark a Guard, I could create an external gem to hook into various internal Guard events.\n\n```\ndef run_on_change\n  hook :run_on_change_start\n  # other code\n  hook :run_on_change_end\nend\n```\n Here's a possible implementation: https://github.com/monocle/guard/blob/hook/lib/guard/hook.rb\n\nIn a Guard definition, you would include Hook and add the available hooks to the methods of interest:\n\n```\nrequire 'guard/hook'\n\nmodule Guard\n  class MyGuard < Guard\n    include Hook\n\n    def run_all\n      hook :begin\n      # some other code\n      hook :end\n    end\n\n    def reload\n      hook :begin\n      # more code\n      hook :end\n\n      # if a hook name needs to be specific, then use\n      # hook \"custom_hook_name\"\n    end\n  end\nend\n```\n\nThen you could define a plugin like:\n\n```\nclass Timer\n  def times\n    @times ||= {}\n  end\n\n  # A plugin would just need to define a #call method to receive the trigger from Guard::Hook\n  # Example input: guard_class = ::Guard::MyGuard,  event = :reload_begin\n  def call(guard_class, event)\n    event.to_s =~ /(.*)_(begin|end)/\n    times[[guard_class, $1, $2]] = Time.now\n    if $2 == 'end'\n      puts \"Time elapsed: #{@times[[guard_class, $1, 'end']] - @times[[guard_class, $1, 'begin']]}\"\n    end\n  end\nend\n\ntimer = Timer.new\nHook.add(timer, ::Guard::MyGuard, [:reload_begin, :reload_end])\nHook.add(timer, ::Guard::MyGuard, [:run_all_begin, :run_all_end])\n```\n Hey!\n\nThanks a lot for that, it's really interesting!!\n\nI'll have to sync with Thibaud to decide what to do with this. I personally think it's great but we will have to find a nice way to add hooks/callbacks to guards.\n\nThe best would certainly be in the Guardfile, maybe something like this:\n\n```\nguard :rspec do\n  hook :timer, [:reload_begin, :reload_end]\n  # or even more concise to activate the callbacks on all events in reload and run_all\n  hook :timer, [:reload, :run_all]\nend\n```\n\nWhat do you think of this?\n @rymai - I like the syntax there. Perhaps we could use more specific hook methods:\n\n```\nguard :rspec do\n  around_hook :timer => [:reload, :run_all]    # adds :begin and :end hooks\n  begin_hook :greeter => :start\n  end_hook :big_finish => :run_all\nend\n```\n\n(Maybe we should rename them to be :before_hook and :after_hook a la Rails' :before_filter and :after_filter.)\n\n@thibaudgg - If we [move the hook calls to Guard.supervised_task](https://github.com/monocle/guard/commits/hook)\n\n```\ndef supervised_task(guard, task_to_supervise, *args)\n  guard.hook \"#{task_to_supervise.to_s}_begin\"\n  result = guard.send(task_to_supervise, *args)\n  guard.hook \"#{task_to_supervise.to_s}_end\"\n  result\nrescue Exception ...\n```\n\nwe can have :begin and :end hooks for all of the Guard tasks automatically. Existing Guard gems wouldn't have to change their code. If they wanted to add other special hooks, they could still do that too.\n\nRe: the Guardfile, I think I would advocate putting the code in there versus creating some other configuration file (like '.guard'). Having two configuration files would be a little inconvenient. Of course a plugin (as a separate gem) could just initialize itself as long as it was required after the Guard gems in the Gemfile.\n Hey guys, I've just implemented a first draft version of the new #callback Guardfile DSL method, please take a look at the [hook branch](https://github.com/guard/guard/tree/hook)!!\n\nBlocks can also be passed (like for the #watch method), I think it can be really useful and quick to add a callback this way. :)\n\nYou can now do some _silly_ stuff like this:\n    require 'growl'\n\n```\nguard 'rspec' do\n  watch /.+\\.spec/\n  callback(:start_end) { `say 'RSpec guard is running!'` }\n  callback(:run_all_begin) { ::Growl.notify(\"Running all specs\", :title => \"Guard::RSpec\", :name => \"Guard\") }\n  callback(MyCustomCallback, [:start_begin, :run_all_begin]) # MyCustomCallback must have a .call method\nend\n```\n\nLet me know what do you think of this, I'll try to experiment some callbacks to see how it could be improved! :)\n\nNote: I've added this hook feature to the 0.4.0 milestone (ok, all I wanted was trying this new GitHub's feature ^^)\n The blocks are nice! Now I can easily have Guard open TextMate:\n\n```\ncallback(:start_end) { `mate .`}\n```\n\nand open some terminal windows:\n\n```\n  callback(:start_end) do\n    dir = `pwd`\n\n    osa = <<-END\n      osascript <<EOS\n        tell app \"iTerm\"\n          tell the first terminal\n            launch session \"Default\"\n            tell last session\n              write text \"cd #{dir}\"\n              write text \"rails s\"\n              delay 1\n              set name to \"Rails Server\"\n            end tell\n         end tell\n        end tell\n    END\n\n    `#{osa}`\n  end\n```\n\nWhat do you think about having the :begin hook pass the args from Guard.supervised_task on to the callback? Also, then we could pass the result of the task to the :end hook. (See [this commit](https://github.com/monocle/guard/commit/c82e1582f84cb95f6c31662deb62a4659261c685).)  Also in that commit, I silenced the UI message from the hooks unless Guard is in 'development' mode.\n Hey!\n\nI've merged your last commit (along with minor changes concerning docs & specs). I didn't find any useful callbacks yet, but I think this feature could be useful though.\n\nShould we stay with the current implementation / functionality? If yes, we should write some new documentation to add to the README before we merge this into the master. :)\n\nIn any case, I'd like to say thank you already, you've done a great job!\n Cool! I think the current implementation seems good. I added a [blurb to the README](https://github.com/monocle/guard/commit/efdacce491ee04d0ba0314b0fcb78520622bdf69) and put most of the documentation in the [Wiki](https://github.com/guard/guard/wiki/Hooks-and-callbacks) since it was getting kind of long.\n Thanks!\n\nI've made some minor changes to it and added a link in the Wiki's home.\n\nWe'll see with @thibaudgg when we merge/release it! :)\n Done!\n  I'm not sure if this is an issue w/ Guard or my rvm install, but in my rails 3 1.9.2 project, I get this:\n\n> guard\n\n/Volumes/spinner/jeffdeville/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/site_ruby/1.9.1/rubygems.rb:900:in `report_activate_error': Could not find RubyGem bundler (>= 0) (Gem::LoadError)\n    from /Volumes/spinner/jeffdeville/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/site_ruby/1.9.1/rubygems.rb:248:in`activate'\n    from /Volumes/spinner/jeffdeville/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/site_ruby/1.9.1/rubygems.rb:1276:in `gem'\n    from /Volumes/spinner/jeffdeville/.rvm/gems/ruby-1.9.2-p180/bin/bundle:18:in`<main>'\n\nbut if I instead use:\nrvm use ree; guard\n\nthings work.\n\nIs this a known compatibility issue, or might there be something wrong w/ my 1.9.2 gems?  (0.3.0 is definitely installed, and the bin is evidently found)\n Yes.  And bundle exec guard didn't work either.\n Any update on this Jeff?\n Bundler is only a development dependency of Guard, yet you require it in the main file. This means Bundler would not get installed while installing Guard, and is probably why jeff gets this error.\n\nI wonder\u2026 why do you require bundler in the first place? I tried looking through the project, searching for something that might require bundler but I found nothing.\n When will this be released?\n This week!\n  in the readme\n  Fixes an invalid ANSI escape code in UI.reset_line. I assumed that with naming the method reset_line an actual reset of things like color and bold is meant, not just a carriage return.\n  Guard::UI.reset_line prints an ESC without further arguments (\"\\e \") which is, afaik, an invalid escape sequence. This results in literals ESC symbols (showing 001B) when using Guard (in zsh oder bash under Ubuntu here). I'm not sure what the intention behind \"\\e \" is, so I'm not sure whether it should be removed or replaced with something else.\n Honestly I don't remember why I added this \"\\e \", maybe the \"\\r \" is enough to reset the line. I will try on my Mac OS X bash when I'll have some time. Feel free to submit a pull request if you think that \"\\e \" is completely useless, thanks!\n I presume with \"reset_line\" is also meant to reset colors/bold etc., not just a carriage return. For that I sent a pull request (see https://github.com/guard/guard/pull/39).\n Issue is resolved. Thanks for merging!\n  Hi all\n\nSince guard needs some OS specific gems in Gemfile we are running constantly into conflicts between developers using linux and developers using Mac OS. My somewath naive approach to circumvent the problem was adding this to the Gemfile:\n\n<pre>\ngroup :development, :test do\n\n....\n  gem 'guard-rspec'\n\n  if RUBY_PLATFORM =~ /-*darwin.*/\n    gem 'growl'\n  end\n  if RUBY_PLATFORM =~ /-*linux.*/\n    gem 'libnotify'\n  end\n</pre>\n\n\nSadly this breaks cross-plattform deployment, since growl will be mentioned in Gemfile.lock and our Servers are running Linux. Would be interesting to see how you handle this at your sites!\n\nThanks\n  Hello, \n\nI have problems to run guard, guard-spork and guard-cucumber together, here is the gist with the failing message more information\n\nhttps://gist.github.com/829458\n\nIn short the error is\n\n```\nrb-inotify-0.8.4/lib/rb-inotify/notifier.rb:183:in `open': No such file or directory - /home/calas/dev/client/theproject/tmp/cache/configuration_120110216-9803-1cy326l.lock (Errno::ENOENT)\n```\n Hello, do you have a /tmp/cache directory in your project?\n Yes, I have such directory. \n\nThanks for your time\n Do you know from who this file `configuration_120110216-9803-1cy326l.lock` is coming?\n Not so sure, but I guess it comes from configuration gem, \n\nThe dependency chain is like: \n\n```\nguard -> open_gem -> launchy -> configuration\n```\n I should say guard-spork and guard-rspec DO NOT fail. \n Can you tried to delete this configuration*.lock file and rerun guard to see if it is coming back\n\nMy guessing is that file is quickly added/removed and so rb-inotify failed. So it's seems to be more a rb-inotify issue. But we can maybe tried to found a workaround.\n :( the file doesn't exist, what is worst, I doesn't happen on other projects with almost same configuration and gems. I'm trying to spot what is causing the problem. \n\nWill go back to it on the weekend to see if I catch something more. \n\nThanks. \n This bug is affected me too. I am not sure weather this is a rb-inotify issue or guard itself. However, here is a fork of rb-inotify which has a fix for that.\n\n https://github.com/jcnnghm/rb-inotify\n\nIt will be cool if guard developers can take a look at it to realize where this bug should be fixed. ;)\n\nThank you.\n I suggest to rename the issue title, since there has been issue #46 reported because of the same reason. The failure has nothing to do with with cucumber at all, it's because `Dir.entries` function doesn't handle short living files (that are created and deleted within the `entries` call) very well. I'm also not sure where this fix belongs to: It feels like a problem within `Dir.entries`, but `rb-inotify` should report this as `IN_CREATE` and `IN_DELETE` events.\n I've renamed the issue, I hope it's more clear now...\n I don't have acceptable solution to solve this problem. Catching the error avoids guard crash, but in this case guard don't process all notification, because inotify stop processing of current batch of files. It is not easy to test this bug, reproduction is a little difficult :)\n Yeah I tried to reproduce this, very difficult indeed! :P\n I have this problem too, for every run of my specs. Perhaps catching the error, even if it means losing occasional events, is better than guard dying?\n There seems to be a misunderstanding of this issue (I was also getting it wrong the first time), so let me explain it in more detail:\n\n# The Dir.entries failure\n\nThe error comes from Ruby core, more precisely from [Dir.entries(dirname)](http://ruby-doc.org/core/classes/Dir.html#M000607). It looks like this function gets a list of all files in this directory and then uses this list to get some more information about the files shortly afterwards. In case a file has been deleted in between these two calls, `Dir.entries` fails with a `No such file or directory` error. \n\nI have searched the [Ruby Bugtracker](http://redmine.ruby-lang.org/) quickly, but haven't found an issue related to `Dir.entries`. I suggest that someone who **can reproduce** this error files a new bug - I even don't know the Ruby version  that causes this error, but I suggest to try another version, since there are some significant changes from [1.8.7](https://github.com/ruby/ruby/blob/v1_8_7_330/dir.c#L1781) to [1.9.2](https://github.com/ruby/ruby/blob/ruby_1_9_2/dir.c#L1824) (dir_open_dir is called from [dir_entires](https://github.com/ruby/ruby/blob/ruby_1_9_2/dir.c#L1877) that is the same in both Ruby version).\n\n# Catching the error\n\nCatching this error at the Guard level will not solve your problem. In fact, I prefer Guard dying instead of swallow the exception and not working properly: When you have a look at [the source where rb-inotify fails](https://github.com/nex3/rb-inotify/blob/master/lib/rb-inotify/notifier.rb#L183), you'll notice that the error occurs in the `watch` method. Since [Guard calls rb-inotify](https://github.com/guard/guard/blob/master/lib/guard/listeners/linux.rb#L25) with the `:recursive` flag, the `watch` method will call itself recursively on all entires of `Dir.entries`. So when `Dir.entries` raises an error, it stops attaching more file watchers. In the worst case, it haven't attached a single file watcher when the error occurs.\n\nSo **catching this error will not make rb-inotify work** and it doesn't matter whether you catch it within Guard or within rb-inotify. So the [patch](https://github.com/jcnnghm/rb-inotify/commit/36fb93d6b5e7898706f273bb102672b6f6965f04) from @hron will not fix the problem at all.\n\n# How to fix this error\n\nAs I said before, the fix should go into Ruby itself. Since this may take a way to long, we should work around this bug. We could do this either in the Guard [linux listener](https://github.com/guard/guard/blob/master/lib/guard/listeners/linux.rb#L25) or in the rb-inotify [notifier](https://github.com/nex3/rb-inotify/blob/master/lib/rb-inotify/notifier.rb#L181), but I believe that the workaround must go into rb-inotify, so that other projects using this library would also benefit.\n\n## A possible workaround\n\nTo work around this bug, we must find another Ruby function that doesn't have the same limitations as `Dir.entires`. Since I don't know the internals of the different Ruby functions, we must simply approach this with trial and error. Below you'll find some possible workarounds, but I haven't tested them.\n\n### Dir.foreach\n\nThe C implementation uses `dir_open_dir`, so I expect this to fail also. But it's worth a test since it works different:\n\n```\n  Dir.foreach(path) do |d|\n    next if d == '.' || d == '..'\n    d = File.join(path, d)\n    watch(d, *flags, &callback) if !RECURSIVE_BLACKLIST.include?(d) && File.directory?(d)\n  end\n```\n\nI think this workaround would even be better than the original in terms of simplicity and speed (an iterator is returned instead of an Array).\n\n### Dir.glob\n\nThe C implementation of [Dir.glob](https://github.com/ruby/ruby/blob/v1_8_7_330/dir.c#L1751) looks quite different, so this may be a good candidate:\n\n```\n  Dir.glob(File.join(path, '*')).each do |d|\n    watch(d, *flags, &callback) if !RECURSIVE_BLACKLIST.include?(d) && File.directory?(d)\n  end\n```\n\nThe implementation will definitely be slower, but it would be acceptable since it will be executed only once when the notifications are initialized.\n\n### Pathname\n\nPathname is not a candidate, since it's implemented in Ruby itself and uses `Dir` for getting the files.\n\n# Who takes care?\n\nAs @yannlugrin and @rymai said: It's extremely difficult to reproduce this error. So best would be if @calas, @hron or @kevinrutherford could test the suggested workarounds.\n\nPlease also submit a Bug report to the Ruby core bug tracker and send a pull request to rb-inotify if a solution works.\n Hi guys,\n\nI can reproduce the error in my environment by calling git pull --rebase in the directory that guard is watching. Im on Ubuntu 11.04, Ruby 1.9.2, guard 0.3.4 and rb-inotify 0.8.4. I guess it's because git creates a temporary file (.git/rebase-apply) and then removes it.\n\nI can confirm that the Dir.glob solution by @netzpirat works for me!\n Great, looks like it's going in the good direction! :)\n There's also a pull request here: https://github.com/nex3/rb-inotify/pull/10\n Great, when the new release of rb-inotify will be out. We will update the README/Gemfile of guard. Thanks!\n  Getting the following error when running in windows:\n\n```\n\u2190[0mUsing polling (Please help us to support your system better than that.)\u2190[0m\nC:/Ruby192/lib/ruby/gems/1.9.1/gems/guard-0.2.2/lib/guard/interactor.rb:6:in `trap': unsupported signal SIGQUIT (ArgumentError)\n        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/guard-0.2.2/lib/guard/interactor.rb:6:in `init_signal_traps'\n        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/guard-0.2.2/lib/guard.rb:24:in `start'\n        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/guard-0.2.2/lib/guard/cli.rb:12:in `start'\n        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/guard-0.2.2/bin/guard:6:in `<top (required)>'\n        from C:/Ruby192/bin/guard:19:in `load'\n        from C:/Ruby192/bin/guard:19:in `<main>'\n```\n Ok Windows seems to not knowing SIGQUIT signal, do you know a list of available signals on windows?\n Issue for me too. Windows 7 x64\n\n```\n\u2190[0mUsing polling (Please help us to support your system better than that.)\u2190[0m\nD:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/gems/guard-0.3.1/lib/guard/interactor.rb:6:in `trap': unsupported signal SIGQUIT (ArgumentError)\n    from D:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/gems/guard-0.3.1/lib/guard/interactor.rb:6:in `init_signal_traps'\n    from D:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/gems/guard-0.3.1/lib/guard.rb:29:in `start'\n    from D:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/gems/guard-0.3.1/lib/guard/cli.rb:15:in `start'\n    from D:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'\n    from D:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'\n    from D:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'\n    from D:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'\n    from D:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/gems/guard-0.3.1/bin/guard:6:in `<top (required)>'\n    from D:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/bin/guard:19:in `load'\n    from D:/tools/ruby-1.9.2-p136-i386-mingw32/lib/ruby/gems/1.9.1/bin/guard:19:in `<main>'\n```\n Here is the list of supported signals on my machine\n\n```\n{\"EXIT\"=>0, \"INT\"=>2, \"ILL\"=>4, \"ABRT\"=>22, \"FPE\"=>8, \"KILL\"=>9, \"SEGV\"=>11, \"TERM\"=>15}\n```\n\nI'll try to comment QUIT\n I've verified that stereobooster commit fixes this issue on my Win 7 x64 machine. Although it doesn't allow you any functionally with these keyboard shortcuts, it at least works and executes.\n Yes, trapping signals on Windows [seems impossible](https://github.com/guard/guard/pull/49#issuecomment-1101872) :(. We need to found a workaround. Have you any ideas?\n Discussion about Signals trapping continues [here](https://github.com/guard/guard/issues/59)\n stereobooster's commit fixed this for me also on Windows. It would be awesome if this fix could be rolled into the official guard gem release.\n It's already in the master branch. You can use it right now with bundler: `gem 'guard', :git => 'git://github.com/guard/guard.git'`. A new gem release will comes soon.\n  So tonight I was running some tests and wasn't paying attention that I had 2 guard's running (same dir/same guardfile). IMHO, an error should be thrown if it detects another guard running? Maybe if its running in the same directory, or the same Guard file (since people could probably have different projects running multiple guards).\n  Discussed with YannLugrin, three new options should be added for run_all/reload guard method and could be specify per guard. Options are:\n- each => \"5.minutes\"  (run the method each X minutes/seconds)\n- at_start => true/false (run the method when starting guard, false by default)\n- disabled => true/false (avoid to run the method when signal sent, false by default)\n\nExample:\n\n```\nguard 'rspec', :run_all => { :at_start => true } do ...\n```\n\nWhat do you think about that?\n I totally agree ;)\n\nI push a \"working in progress\" feature branch today or tomorrow.\n These options seem cool to me but will it be possible for guards developer to set those without the possibility for users to overwrite these options?\nIn other words, who will have the priority, guards developers or guards users?\n\nFor example, if the developer of a guard wants to never reload or run_all on any signals, the user should not be able to specify options that would cancel this behavior.\n If a developer never want to reload/run_all on signal, actually the only way to call these methods, he just don't implement them :-)\nGuard users will always have the priority.\n Ok fair enough, btw my example was the opposite of what I thought: \"If a developer wants to always run_all/reload, the user should not be able to cancel this behavior\".\n\nDo you have some concrete examples of the use of these options in a \"real scenario\"?\n In my opinion if run_all/reload should not be disabled the user need to be smart enough to not doing that.\n\n\"Real scenario\" Examples:\n- Running all spesc when guard starts\n- Not running all cucumber features with Ctrl-\\\n You can see work in progress branch at https://github.com/guard/guard/tree/guard_optionnal_actions\n\n:disable and :at_start work\n\nwith this implementation you can control this in each guard code to add more optional case (but it is not recommended to overwrite normal option result).\n I like the new options and I'd like to see even more of these: it would be nice if I could  make the execution of a guard dependent on the result of another guard.\n\nLet me illustrate this with a few examples:\n\n```\nguard 'rspec' do\n   ...\nend\n\nguard 'cucumber', :run_all => { :depends => :rspec }  true do\n   ...\nend\n```\n\nThis configuration will run all cucumber features after rspec has run all specs successfully. This would enable a autotest like configuration for guard-rspec and guard-cucumber.\n\n```\nguard 'coffeescript' do\n   ...\nend\n\nguard 'jasmine', :run_on_change => { :depends => :coffeescript } do\n   ...\nend\n```\n\nThis configuration would run jasmine tests for a changed file after is has been successfully compiled into JavaScript. (The Jasmine guard doesn't exist for now, but who know).\n\nIf there are multiple guards of the same type configured, they can have an id options for unique identification:\n\n```\nguard 'coffeescript', :id => :coffee_app do\n   ... watch app ...\nend\n\nguard 'coffeescript', :id => :coffee_tests do\n   ... watch tests ...\nend\n\nguard 'jasmine', :run_on_change => { \n    :depends => [:coffee_app, :coffee_tests] \n} do\n   ...\nend\n```\n\nThis implies a change that each plugin has to return either true or false in the #run_on_change and #run_all methods.\n\nMichael\n Yes, :depends option is a good idea, but the :id stuff is maybe overkill... a smart convention could be better... don't have better idea at the moment :-)\n\nI'm thinking about another option, something like :non_blocking/threadable => true, that will make running the guard plugin without having to wait for his result (could be useful for guard-passenger). \n Guard referencing by id may be unnecessary if we switch to a notification push approach instead of a pull approach.\n\nLast week I sat down and wrote my dream Guardfile and it looks like this:\n\n```\nthreads 4\n\ngroup :autotest do\n  guard 'rspec', :version => 2, :start => true, :rerun => true, :success => { :all => :cucumber } do\n    watch('^spec/(.*)_spec.rb')\n    watch('^spec/spec_helper.rb')                       { 'spec' }\n\n    watch('^app/(.*)\\.rb')                              { |m| \"spec/#{m[1]}_spec.rb\" }\n    watch('^lib/(.*)\\.rb')                              { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n\n    watch('^app/controllers/application_controller.rb') { 'spec/controllers' }\n    watch('^config/routes.rb')                          { 'spec/routing' }\n\n    watch('^spec/fabricators/*')                        { 'spec/models' }\n  end\n\n  guard 'cucumber', :rerun => true do\n    watch('^features/(.*).feature')\n    watch('^features/support')                          { 'features' }\n    watch('^features/step_definitions')                 { 'features' }\n  end\nend\n\ngroup :frontend do\n  guard 'compass' do\n    watch('^app/stylesheets/(.*)\\.scss')\n  end\n\n  guard 'coffeescript', :output => 'public/javascripts/compiled' do\n    watch('^app/coffeescripts/(.*)\\.coffee')\n  end\n\n  guard 'coffeescript', :output => 'spec/javascripts' do\n    watch('^spec/coffeescripts/(.*)\\.coffee')\n  end\n\n  guard 'livereload' do\n    watch('^app/.+\\.(erb|haml)$')\n    watch('^app/helpers/.+\\.rb$')\n    watch('^public/.+\\.(css|js|html)$')\n    watch('^config/locales/.+\\.yml$')\n    watch('^spec/javascripts/.+\\.js$')\n  end\nend\n```\n\nLet me dissect the above Guardfile:\n\n# threads\n\nThe thread keyword switches the Guard loop to a non-blocking mode, where the fs listener will keep listening for changes and spawns the Guard executions to the maximum number of threads defined. This allows to choose the optimal setting depending on the CPU.\n\n# group\n\nThe above example introduces groups that let me choose to run only a subset of the guardfile:\n\n```\nguard                        # Run all groups\nguard autotest               # Run only the autotest group\nguard frontend               # Run only the frontend group\nguard autotest frontend      # Run both the autotest and the frontend group\n```\n\nSo when I am focusing on frontend development, I could omit the whole backend testing stuff.\n\n# :start option\n\nWhen the `:start` option is set to true, Guard will trigger `run_all` upon start. It defaults to false.\n\n# :rerun option\n\nWhen the `:rerun` option is set, Guard will trigger `run_on_change` with all the failed files from the previous run if any of the guarded files (of the actual guard) is changed. It defaults to false.\n\nThis would imply that a Guard **must** return an Array with the failed files after a run method has been triggered. If everything succeed returns nil or an empty Array.\n\n# :success option\n\nWith the `:success` option a Guard can trigger other Guards run methods after it ran successfully. \n\nThe `:success` option takes an option Hash with two possible keys: `:all` will trigger `run_all` whereas `:changed` will trigger `:run_on_change` on the specified Guard(s). The value is either a single symbol of the destination Guard or an Array with multiple destination Guards.\n\n# \n\nWhat do you guys think of this DSL extensions? Do you see any problems? I'm wondering especially about the thread option, since I have no clue why it was decided to block the fs listener on guard execution.\n\nThe `:start`, `:rerun` and `:success` options will allow us to build more complex Guard configuration, for example to achieve an Autotest like behavior. Do you would like to see this implemented or do you think this is to heavy weight for Guard?\n\nThanks for any feedback.\n Here some remarks for each points:\n\n# Threads\n\nI don't think all guard should be running in thread, for example guard-spork must always running before guard-rspec/cucumber. So there is some real dependencies between some guards. Maybe a `:thread => true` option is enough to make just some guard non-blocking. Setting the number of maximum threads seems overkill for me, but why not. \n\n# Groups\n\nSound like a great feature to add\n\n# :start option\n\nIt's the same as `:run_all => { :at_start => true }` no?\n\n# :rerun option\n\nThis option should be added inside guard-rspec/test/cucumber instead of Guard itself, don't you think?\n\n# :success option\n\nI think using `:run_all` & `:run_on_change` directly will be more clear than `:all` & `:changed`. It'll give something like `:success => { :run_all => :cucumber }`.\nGood idea.\n\n---\n\nI just commit a change that remove the blockage of listeners on guards execution so a `:thread => true` option should be really easy to implement now. May be we can speak a little more about `:start => true` vs `:run_all => { :at_start => true }` before beginning any implementation. After that any pull request are very welcome as my hobby coding time is really limited :-).\n\nThanks for all your suggestions/ideas.\n The change you made on Guard to not block the listeners is sufficient and makes the threading obsolete for me.\n\nI will definitely take care of the Guard Groups and you can expect a pull request in the near future.\n\nI also agree that the rerun option is very specific and should be handled in the Guard implementations that need such a feature. I will do this for guard-cucumber soon.\n\nRegarding the automatic start of a Guard and triggering other Guards after completion I also think we need to find the optimal DSL before starting the implementation. But since yannlugrin already started a branch with `:run_all => { :at_start => true }` it may be a good idea to keep the syntax close to his implementation and use something like `:on_success => { :run_all => :cucumber }` for the automatic Guard triggering.\n\nThanks for the feedback. \n I think this is going to end up just a +1 comment.  But I'm happy everyone is thinking about this.  Would love to plug `:on_success => { :run_all => :cucumber, :run_all => :rspec}` into my Guardfile spork config and have it automatically tell me what the hell I was breaking when I last shut this project down ;)\nFor my own small contribution, I'm finding the more verbose syntax a lot clearer.\n Hi guys,\n\nThe `group` option has been implemented, the `rerun` option should be implemented by the guards who need it, for example guard-rspec (guard/guard-rspec@f2418995cfb45fb8a5e34af6d86ef8e1bc2e4735), so all is left to do for the moment is the `:success` option.\n\nCould we discuss it and maybe finally find a proper DSL for it? We should also define precisely all the possibility of this option.\n\nExamples:\n\n``` ruby\n# will run the Guard::RSpec#run_all and Guard::Cucumber#run_all methods.\nguard 'spork', :on_success => { :run_all => [:rspec, :cucumber] }\n\n# will run the Guard::Cucumber#run_on_change method with the paths run by Guard::RSpec.\nguard 'rspec', :on_success => { :run_on_change => :cucumber }\n```\n +1 for the latest DSL proposal too. We can make it! :)\n usually i dont like the rerun of all specs on success, as it takes a long time and stops me from quickly adding a new test and seeing it fail. But disabling it completely seems too drastic, so how about\n\n``` ruby\nguard 'spork', :on_success => { :run_all_when_5_minutes_idle => [:rspec, :cucumber] }\nguard 'spork', :on_success => { :run_all_when_50_seconds_idle => :rspec }\n```\n\n5_minutes_idle would be method missing, so it adjusts the idle time based on the method name\n Hi,\n\nPersonally, I would prefer something like this:\n\n``` ruby\nguard 'spork', :on_success => { :run_all => [:rspec, :cucumber], :if => { :idle_for => 5*60 } }\n```\n\nIt's maybe a bit too verbose, but the point is that I don't really like putting arguments inside a Hash key.\n\nAlso note that we probably would't use `method_missing` here, a simple `\"run_all_when_50_seconds_idle\"[/run_all_when_(\\d+)_seconds_idle/, 1].to_i` (or similar) would suffice. :)\n Oh now i see, thanks for the tip, agreed :)\n You're welcome. By the way, I think your suggestion in itself, to run all the specs only when Guard has been idle for a certain amount of time is interesting. But anyway, we'll first have to implement the basis of this new `:on_success` option before thinking about conditional executions etc.\n :+1: ^^\n\nSent from my iPhone\n\nOn 19 oct. 2012, at 00:42, Michael Kessler notifications@github.com wrote:\n\n> Oh my dear GitHub issue, I've looked at you many times, because you're still in open state. I've also read your completely at least three times, which takes ages... But nobody cares about you, not you, dear reader and recipient of the notification, not the creator of the issue, not anyone of the Guard maintainers, just nobody. There's no discussion since 10 months and nobody want to spend some time for you. In short: we don't need you. I'm sorry about you, but I'm going to close you now...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n  It looks like your fix to #5 introduced another bug. After a day or two of leaving guard running, it exited with the following exception:\n\n```\n/Users/stouset/.rvm/gems/ruby-1.9.2-p0@patterns2/bin/guard:19: stack level too deep (SystemStackError)\n```\n That's weird. Can you give more backtrace? bin/guard:19 only isn't very helpfull. Thx!\n It didn't give me one. Unfortunately, it will probably take another few days before I can reproduce this.\n Ok, I'll also try to reproduce this on my side.\n I test this case on linux too\n Still having this issue? I haven't been able to reproduce it.\n I haven't noticed it in a bit, but I've been away at RubyConf. I'll let you know if I see it in the next day or two.\n This exception pops up when I change a lot of files in a short period.\nFor example when I populate sample data that is indexed with thinking sphinx.\n\nI can reproduce the problem with following shell command:\nfor i in {0..100000}; do touch tmp/dummy$i.txt;rm tmp/dummy$i.txt; done\n Ok, we could avoid that by adding an option to exclude some files extensions. Sounds good for you?\n still needed with 0.4.0?\n Nope. Haven't seen the problem return in a long, long while.\n I'm getting this error on a windows install - everything's working fine on our mac machines, but we get this on Windows:\nc:/Ruby192/lib/ruby/gems/1.9.1/bin/guard:19: stack level too deep (SystemStackError)\n On a different app, I get these errors recursively (can't see the top):\n\n```\nfrom c:/Ruby192/lib/ruby/gems/1.9.1/gems/guard-0.4.0/lib/guard/ui.rb:8:in `info'\n        from c:/Ruby192/lib/ruby/gems/1.9.1/gems/guard-0.4.0/lib/guard/ui.rb:59:in `rescue in color_enabled?'\n        from c:/Ruby192/lib/ruby/gems/1.9.1/gems/guard-0.4.0/lib/guard/ui.rb:55:in `color_enabled?'\n        from c:/Ruby192/lib/ruby/gems/1.9.1/gems/guard-0.4.0/lib/guard/ui.rb:45:in `color'\n        from c:/Ruby192/lib/ruby/gems/1.9.1/gems/guard-0.4.0/lib/guard/ui.rb:41:in `reset_color'\n```\n Commenting line #8 in ui.rb seems to fix this for me on windows:\n    #puts reset_color(message) if message != ''\n\nAlso, I had to replace interactor with https://raw.github.com/guard/guard/master/lib/guard/interactor.rb\n done - however, please note that I don't know what I'm doing/I see this as a temp fix only.\n I just had the same problem, but I was able to fix it by installing the win32console gem.  I think that the problem is that if this gem is missing it, it tries to tell you that it's missing it...  by using it.  (color_reset).  I think the easiest fix may simply to update the docs on how to get guard up and running with windows.  You may want to suggest including:\ngem 'rb-fchange'\ngem 'win32console'\ngem 'rb-notifu'\ninto windows-based Gemfiles.\n Thanks #jeff! We'll try that out.\n gem install win32console also worked for getting me past the \"stack level too deep\" error when running guard\n", "text_all_count": 123514, "text_word_token": ["In", "my", "app", "I", "just", "upgrade", "to", "Guard", "NUMBER", "Lets", "say", "Guard", "be", "telling", "me", "there", "be", "NUMBER", "examples", "and", "NUMBER", "failures", "NUMBER", "Here", "s", "the", "spec", "file", "im", "work", "on", "Schema", "Information", "Table", "name", "awardunits", "id", "integer", "not", "null", "primary", "key", "nyaaid", "string", "NUMBER", "name", "string", "NUMBER", "address", "string", "NUMBER", "district", "string", "NUMBER", "contact", "string", "NUMBER", "email", "string", "NUMBER", "insthead", "string", "NUMBER", "instheadcontact", "string", "NUMBER", "datestarted", "date", "allowedmem", "integer", "remarks", "text", "disabled", "boolean", "created_at", "datetime", "updated_at", "datetime", "require", "spec_helper", "describe", "Awardunit", "do", "before", "awardunit", "Awardunit", "NUMBER", "new", "nyaaid", "NYAA", "N", "WP", "NUMBER", "name", "Test", "Unit", "address", "No", "NUMBER", "NUMBER", "Kalpitiya", "Road", "Maradana", "district", "Colombo", "contact", "NUMBER", "email", "abc", "localhost", "NUMBER", "com", "insthead", "Namal", "Kaluaarachchi", "instheadcontact", "NUMBER", "datestarted", "NUMBER", "NUMBER", "NUMBER", "allowedmem", "NUMBER", "remarks", "it", "should", "respond_to", "nyaaid", "it", "should", "respond_to", "name", "it", "should", "respond_to", "address", "it", "should", "respond_to", "district", "it", "should", "respond_to", "contact", "it", "should", "respond_to", "email", "it", "should", "respond_to", "insthead", "it", "should", "respond_to", "instheadcontact", "it", "should", "respond_to", "datestarted", "it", "should", "respond_to", "allowedmem", "it", "should", "respond_to", "remarks", "it", "should", "respond_to", "disabled", "it", "should", "be_valid", "describe", "when", "nyaaid", "be", "not", "present", "do", "before", "awardunit", "NUMBER", "nyaaid", "it", "should_not", "be_valid", "end", "describe", "when", "name", "be", "not", "present", "do", "before", "awardunit", "NUMBER", "name", "it", "should_not", "be_valid", "end", "describe", "when", "district", "be", "not", "present", "do", "before", "awardunit", "NUMBER", "district", "it", "should_not", "be_valid", "end", "describe", "when", "contact", "be", "not", "present", "do", "before", "awardunit", "NUMBER", "contact", "it", "should_not", "be_valid", "end", "describe", "when", "datestarted", "be", "not", "present", "do", "before", "awardunit", "NUMBER", "datestarted", "it", "should_not", "be_valid", "end", "describe", "when", "email", "format", "be", "invalid", "do", "it", "should", "be", "invalid", "do", "address", "w", "user", "foo", "com", "user_at_foo", "NUMBER", "org", "example", "NUMBER", "user", "foo", "NUMBER", "foo", "bar_baz", "NUMBER", "com", "foo", "bar", "baz", "NUMBER", "com", "address", "NUMBER", "each", "do", "invalid_address", "authentication", "NUMBER", "email", "invalid_address", "expect", "authentication", "NUMBER", "save", "NUMBER", "to", "be_false", "end", "end", "end", "describe", "when", "email", "format", "be", "valid", "do", "it", "should", "be", "valid", "do", "address", "w", "user", "foo", "NUMBER", "COM", "A_US", "ER", "f", "NUMBER", "b", "NUMBER", "org", "frst", "NUMBER", "lst", "foo", "NUMBER", "jp", "a", "b", "baz", "NUMBER", "cn", "address", "NUMBER", "each", "do", "valid_address", "authentication", "NUMBER", "email", "valid_address", "expect", "authentication", "NUMBER", "save", "NUMBER", "to", "be_true", "end", "end", "end", "end", "Its", "not", "including", "the", "top", "test", "into", "the", "NUMBER", "examples", "One", "problem", "NUMBER", "The", "other", "one", "be", "NUMBER", "When", "I", "add", "a", "new", "describe", "block", "to", "a", "spec", "file", "and", "save", "normally", "the", "count", "should", "go", "to", "NUMBER", "examples", "NUMBER", "But", "guard", "be", "still", "showing", "NUMBER", "If", "I", "go", "to", "a", "different", "spec", "file", "and", "save", "it", "guard", "still", "say", "NUMBER", "examples", "and", "NUMBER", "failures", "according", "to", "the", "old", "file", "How", "can", "I", "fix", "this", "issue", "Here", "s", "my", "Guardfile", "require", "active_support", "inflector", "notification", "libnotify", "guard", "rspec", "notification", "true", "all_on_start", "true", "cmd", "spring", "rspec", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "Rails", "example", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "erb", "NUMBER", "haml", "NUMBER", "slim", "m", "spec", "m", "NUMBER", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "controllers", "NUMBER", "_", "controller", "NUMBER", "rb", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "m", "NUMBER", "s", "m", "NUMBER", "_", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "Capybara", "features", "specs", "watch", "r", "app", "views", "NUMBER", "NUMBER", "NUMBER", "erb", "haml", "slim", "m", "spec", "features", "m", "NUMBER", "_spec", "NUMBER", "rb", "Turnip", "features", "and", "steps", "watch", "r", "spec", "acceptance", "NUMBER", "NUMBER", "feature", "watch", "r", "spec", "acceptance", "steps", "NUMBER", "_steps", "NUMBER", "rb", "m", "Dir", "File", "NUMBER", "join", "m", "NUMBER", "NUMBER", "feature", "NUMBER", "spec", "acceptance", "Custom", "Rails", "Tutorial", "specs", "watch", "r", "app", "controllers", "NUMBER", "_", "controller", "NUMBER", "rb", "do", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "m", "NUMBER", "s", "m", "NUMBER", "_", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "m", "NUMBER", "_pages", "spec", "request", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "request", "m", "NUMBER", "NUMBER", "singularize", "_pages_spec", "NUMBER", "rb", "end", "watch", "r", "app", "views", "NUMBER", "do", "m", "m", "NUMBER", "_pages", "spec", "request", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "request", "m", "NUMBER", "NUMBER", "singularize", "_pages_spec", "NUMBER", "rb", "end", "watch", "r", "app", "controllers", "sessions_controller", "NUMBER", "rb", "do", "m", "spec", "request", "authentication_pages_spec", "NUMBER", "rb", "end", "end", "The", "Gemfile", "NUMBER", "lock", "GEM", "remote", "LINK", "specs", "actionmailer", "NUMBER", "actionpack", "NUMBER", "mail", "NUMBER", "actionpack", "NUMBER", "activesupport", "NUMBER", "builder", "NUMBER", "erubis", "NUMBER", "rack", "NUMBER", "rack", "test", "NUMBER", "activemodel", "NUMBER", "activesupport", "NUMBER", "builder", "NUMBER", "activerecord", "NUMBER", "activemodel", "NUMBER", "activerecord", "deprecated_finders", "NUMBER", "activesupport", "NUMBER", "arel", "NUMBER", "activerecord", "deprecated_finders", "NUMBER", "activesupport", "NUMBER", "i", "NUMBER", "n", "NUMBER", "NUMBER", "minitest", "NUMBER", "multi_json", "NUMBER", "thread_safe", "NUMBER", "tzinfo", "NUMBER", "annotate", "NUMBER", "rake", "arel", "NUMBER", "atomic", "NUMBER", "bcrypt", "ruby", "NUMBER", "better_errors", "NUMBER", "coderay", "NUMBER", "erubis", "NUMBER", "binding_of_caller", "NUMBER", "debug_inspector", "NUMBER", "bootstrap", "sass", "NUMBER", "sass", "NUMBER", "builder", "NUMBER", "capybara", "NUMBER", "mime", "types", "NUMBER", "nokogiri", "NUMBER", "rack", "NUMBER", "rack", "test", "NUMBER", "xpath", "NUMBER", "celluloid", "NUMBER", "timers", "NUMBER", "childprocess", "NUMBER", "ffi", "NUMBER", "NUMBER", "coderay", "NUMBER", "coffee", "rails", "NUMBER", "coffee", "script", "NUMBER", "railties", "NUMBER", "TAG", "NUMBER", "factory_girl_rails", "NUMBER", "factory_girl", "NUMBER", "railties", "NUMBER", "faker", "NUMBER", "i", "NUMBER", "n", "NUMBER", "ffi", "NUMBER", "font", "awesome", "rails", "NUMBER", "railties", "NUMBER", "TAG", "NUMBER", "listen", "NUMBER", "lumberjack", "NUMBER", "pry", "NUMBER", "thor", "NUMBER", "guard", "rspec", "NUMBER", "guard", "NUMBER", "rspec", "NUMBER", "hike", "NUMBER", "i", "NUMBER", "n", "NUMBER", "jbuilder", "NUMBER", "activesupport", "NUMBER", "multi_json", "NUMBER", "jquery", "rails", "NUMBER", "railties", "NUMBER", "TAG", "NUMBER", "TAG", "NUMBER", "listen", "NUMBER", "celluloid", "NUMBER", "rb", "fsevent", "NUMBER", "rb", "inotify", "NUMBER", "lumberjack", "NUMBER", "mail", "NUMBER", "mime", "types", "NUMBER", "treetop", "NUMBER", "method_source", "NUMBER", "mime", "types", "NUMBER", "mini_portile", "NUMBER", "minitest", "NUMBER", "modernizr", "rails", "NUMBER", "multi_json", "NUMBER", "nokogiri", "NUMBER", "mini_portile", "NUMBER", "pg", "NUMBER", "polyglot", "NUMBER", "pry", "NUMBER", "coderay", "NUMBER", "method_source", "NUMBER", "slop", "NUMBER", "rack", "NUMBER", "rack", "test", "NUMBER", "rack", "NUMBER", "rails", "NUMBER", "actionmailer", "NUMBER", "actionpack", "NUMBER", "activerecord", "NUMBER", "activesupport", "NUMBER", "bundler", "NUMBER", "TAG", "NUMBER", "rails_", "NUMBER", "factor", "NUMBER", "rails_serve_static_assets", "rails_stdout_logging", "rails_serve_static_assets", "NUMBER", "rails_stdout_logging", "NUMBER", "railties", "NUMBER", "actionpack", "NUMBER", "activesupport", "NUMBER", "rake", "NUMBER", "thor", "NUMBER", "TAG", "NUMBER", "rdoc", "NUMBER", "json", "NUMBER", "rspec", "NUMBER", "rspec", "core", "NUMBER", "rspec", "expectations", "NUMBER", "rspec", "mocks", "NUMBER", "rspec", "core", "NUMBER", "rspec", "expectations", "NUMBER", "diff", "lcs", "NUMBER", "TAG", "NUMBER", "activesupport", "NUMBER", "railties", "NUMBER", "rspec", "core", "NUMBER", "rspec", "expectations", "NUMBER", "rspec", "mocks", "NUMBER", "sass", "NUMBER", "sass", "rails", "NUMBER", "railties", "NUMBER", "TAG", "NUMBER", "sprockets", "rails", "NUMBER", "sdoc", "NUMBER", "json", "NUMBER", "rdoc", "NUMBER", "slop", "NUMBER", "spring", "NUMBER", "sprockets", "NUMBER", "hike", "NUMBER", "multi_json", "NUMBER", "rack", "NUMBER", "tilt", "NUMBER", "NUMBER", "sprockets", "rails", "NUMBER", "actionpack", "NUMBER", "activesupport", "NUMBER", "sprockets", "NUMBER", "thor", "NUMBER", "thread_safe", "NUMBER", "atomic", "tilt", "NUMBER", "timers", "NUMBER", "treetop", "NUMBER", "polyglot", "polyglot", "NUMBER", "turbolinks", "NUMBER", "coffee", "rails", "tzinfo", "NUMBER", "uglifier", "NUMBER", "execjs", "NUMBER", "multi_json", "NUMBER", "NUMBER", "xpath", "NUMBER", "nokogiri", "NUMBER", "PLATFORMS", "ruby", "DEPENDENCIES", "annotate", "bcrypt", "ruby", "NUMBER", "better_errors", "binding_of_caller", "bootstrap", "sass", "capybara", "childprocess", "coffee", "rails", "NUMBER", "factory_girl_rails", "faker", "font", "awesome", "rails", "guard", "NUMBER", "guard", "rspec", "NUMBER", "jbuilder", "NUMBER", "jquery", "rails", "libnotify", "modernizr", "rails", "pg", "rails", "NUMBER", "rails_", "NUMBER", "factor", "rb", "inotify", "rspec", "NUMBER", "rspec", "rails", "sass", "rails", "NUMBER", "sdoc", "spring", "turbolinks", "uglifier", "NUMBER", "rymai", "Thanks", "focus_on_failed", "false", "did", "the", "trick", "NUMBER", "rymai", "it", "was", "before", "but", "I", "change", "it", "because", "it", "looks", "quite", "fundamental", "to", "me", "Yeah", "we", "ll", "see", "if", "it", "creates", "more", "issue", "that", "the", "first", "yet", "I", "can", "t", "get", "Guard", "to", "work", "with", "file", "that", "include", "log", "in", "the", "name", "NUMBER", "Here", "be", "an", "example", "of", "a", "Guardfile", "I", "have", "test", "with", "ruby", "guard", "livereload", "do", "watch", "log", "watch", "catalog", "end", "Running", "touch", "log", "or", "touch", "catalog", "doesn", "t", "trigger", "Guard", "NUMBER", "I", "see", "nothing", "in", "the", "output", "from", "Guard", "when", "I", "run", "it", "with", "the", "debug", "flag", "NUMBER", "I", "ve", "tried", "this", "with", "guard", "pow", "too", "with", "the", "same", "result", "NUMBER", "log", "be", "in", "the", "default", "ignore", "list", "LINK", "ignore", "you", "may", "want", "to", "overwrite", "it", "in", "your", "Guardfile", "with", "something", "like", "Ruby", "ignore", "NUMBER", "git", "rymai", "NUMBER", "log", "folder", "be", "ignored", "by", "default", "Listen", "NUMBER", "just", "assure", "that", "NUMBER", "foo", "bar", "log", "isn", "t", "NUMBER", "Thanks", "It", "works", "fine", "after", "upgrading", "Guard", "NUMBER", "Mmm", "so", "rymai", "was", "right", "Hi", "All", "I", "get", "some", "error", "when", "run", "test", "with", "guard", "and", "guard", "gotest", "below", "be", "those", "notifiers", "I", "be", "use", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "Libnotify", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "Emacs", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "Gotest", "be", "run", "My", "error", "be", "Libnotify", "report", "test", "fail", "when", "get", "some", "error", "but", "emacs", "get", "success", "notification", "NUMBER", "When", "I", "look", "into", "guard", "and", "try", "to", "prints", "the", "opts", "at", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "v", "NUMBER", "and", "find", "the", "opts", "was", "change", "after", "finish", "every", "notification", "When", "send", "the", "first", "notification", "the", "opts", "be", "title", "Gotest", "results", "type", "fail", "priority", "NUMBER", "After", "finish", "the", "first", "notification", "the", "opts", "change", "to", "priority", "NUMBER", "miss", "the", "fail", "type", "After", "finish", "the", "emacs", "notification", "the", "value", "became", "priority", "NUMBER", "title", "Guard", "type", "success", "image", "home", "jinzhu", "NUMBER", "gem", "ruby", "NUMBER", "gems", "guard", "NUMBER", "images", "success", "NUMBER", "png", "Got", "some", "unexpect", "values", "After", "doing", "some", "research", "I", "find", "every", "notifier", "s", "notify", "method", "inherit", "Guard", "Notifier", "Base", "notify", "but", "the", "code", "of", "Guard", "Notifier", "Base", "notify", "looks", "strange", "for", "me", "def", "notify", "message", "opts", "options", "NUMBER", "delete", "silent", "opts", "NUMBER", "replace", "options", "NUMBER", "merge", "opts", "normalize_standard_options", "opts", "end", "It", "will", "update", "the", "original", "opts", "pass", "to", "it", "NUMBER", "I", "think", "it", "should", "only", "update", "the", "opts", "for", "this", "notifier", "but", "not", "global", "NUMBER", "So", "maybe", "pass", "a", "cloned", "options", "to", "each", "notifier", "should", "be", "a", "better", "idea", "NUMBER", "Here", "be", "a", "simple", "code", "base", "to", "explain", "what", "s", "the", "error", "hope", "it", "make", "sense", "def", "notify", "opts", "opts", "NUMBER", "replace", "opts", "NUMBER", "merge", "age", "NUMBER", "end", "a", "name", "test", "notify", "a", "puts", "a", "name", "test", "age", "NUMBER", "b", "name", "test", "notify", "b", "NUMBER", "dup", "puts", "b", "name", "test", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "b", "NUMBER", "f", "NUMBER", "aaefa", "NUMBER", "da", "NUMBER", "cbb", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "on", "jinzhu", "fix_options_changed_after_pass_to_notifier", "into", "NUMBER", "d", "NUMBER", "de", "NUMBER", "b", "NUMBER", "f", "NUMBER", "adad", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "on", "guard", "master", "NUMBER", "I", "m", "get", "this", "error", "on", "every", "notification", "attempt", "NUMBER", "Seems", "to", "replicate", "Issue", "NUMBER", "OSX", "NUMBER", "Guard", "version", "NUMBER", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "gem", "NUMBER", "Bundler", "version", "NUMBER", "ERROR", "Error", "sending", "notification", "with", "growl", "undefined", "method", "to_sym", "for", "nil", "NilClass", "Doesn", "t", "seem", "to", "be", "isolated", "to", "any", "particular", "notifier", "NUMBER", "Debug", "Output", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "growlnotify", "version", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "Growl", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Guard", "starts", "all", "plugins", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "Shell", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "pdflatex", "shell", "escape", "interim_report", "NUMBER", "tex", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "rm", "interim_report", "NUMBER", "log", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "texcount", "inc", "nc", "NUMBER", "interim_report", "NUMBER", "tex", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Error", "sending", "notification", "with", "growl", "undefined", "method", "to_sym", "for", "nil", "NilClass", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "base", "NUMBER", "rb", "NUMBER", "in", "_notification_type", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "base", "NUMBER", "rb", "NUMBER", "in", "normalize_standard_options", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "base", "NUMBER", "rb", "NUMBER", "in", "notify", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "growl", "NUMBER", "rb", "NUMBER", "in", "notify", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "block", "in", "notify", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "notify", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "shell", "NUMBER", "lib", "guard", "shell", "NUMBER", "rb", "NUMBER", "in", "n", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "workspace", "dissertation", "interim", "report", "Guardfile", "NUMBER", "in", "block", "NUMBER", "levels", "in", "_instance_eval_guardfile", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "watcher", "NUMBER", "rb", "NUMBER", "in", "call", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "watcher", "NUMBER", "rb", "NUMBER", "in", "call_action", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "watcher", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "match_files", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "watcher", "NUMBER", "rb", "NUMBER", "in", "each", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "watcher", "NUMBER", "rb", "NUMBER", "in", "block", "in", "match_files", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "watcher", "NUMBER", "rb", "NUMBER", "in", "each", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "watcher", "NUMBER", "rb", "NUMBER", "in", "inject", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "watcher", "NUMBER", "rb", "NUMBER", "in", "match_files", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "shell", "NUMBER", "lib", "guard", "shell", "NUMBER", "rb", "NUMBER", "in", "run_all", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "shell", "NUMBER", "lib", "guard", "shell", "NUMBER", "rb", "NUMBER", "in", "start", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run_supervised_task", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "catch", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "run_supervised_task", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "run", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "_scoped_plugins", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "each", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "_scoped_plugins", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "catch", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "in", "_scoped_plugins", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "each", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "_scoped_plugins", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "lumberjack", "NUMBER", "lib", "lumberjack", "NUMBER", "rb", "NUMBER", "in", "unit_of_work", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "run", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "commander", "NUMBER", "rb", "NUMBER", "in", "block", "in", "start", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "commander", "NUMBER", "rb", "NUMBER", "in", "block", "in", "within_preserved_state", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "commander", "NUMBER", "rb", "NUMBER", "in", "synchronize", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "commander", "NUMBER", "rb", "NUMBER", "in", "within_preserved_state", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "commander", "NUMBER", "rb", "NUMBER", "in", "start", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "command", "NUMBER", "rb", "NUMBER", "in", "run", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_command", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "NUMBER", "E", "NUMBER", "C", "NUMBER", "D", "NUMBER", "B", "NUMBER", "Users", "robj", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "Built", "interim_report", "NUMBER", "pdf", "NUMBER", "words", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "Shell", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "robj", "workspace", "dissertation", "interim", "report", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "Gemfile", "source", "LINK", "gem", "guard", "gem", "guard", "shell", "gem", "growl", "Guardfile", "notification", "growl", "guard", "shell", "all_on_start", "true", "do", "watch", "NUMBER", "tex", "do", "m", "pdflatex", "shell", "escape", "m", "NUMBER", "rm", "m", "NUMBER", "NUMBER", "log", "count", "texcount", "inc", "nc", "NUMBER", "m", "NUMBER", "NUMBER", "split", "NUMBER", "first", "msg", "Built", "m", "NUMBER", "NUMBER", "pdf", "count", "words", "n", "msg", "LaTeX", "msg", "end", "end", "As", "I", "mention", "above", "this", "isn", "t", "isolated", "to", "the", "growl", "notification", "and", "still", "happens", "when", "I", "remove", "notification", "growl", "from", "the", "Guardfile", "NUMBER", "Thanks", "Great", "seems", "to", "fix", "the", "issue", "NUMBER", "Thanks", "Yep", "it", "solves", "the", "problem", "for", "me", "too", "NUMBER", "So", "I", "just", "update", "from", "NUMBER", "to", "NUMBER", "no", "other", "change", "and", "guard", "be", "not", "watching", "anything", "NUMBER", "not", "even", "its", "own", "Guardfile", "NUMBER", "_confused_", "Anyone", "know", "what", "s", "going", "on", "Did", "I", "miss", "some", "obvious", "thing", "when", "upgrading", "Anyone", "know", "what", "s", "going", "on", "Nope", "you", "didn", "t", "supply", "the", "information", "we", "kindly", "asked", "for", "LINK", "file", "an", "issue", "when", "you", "file", "the", "issue", "NUMBER", "Did", "I", "miss", "some", "obvious", "thing", "when", "upgrading", "No", "as", "user", "there", "be", "no", "change", "needed", "from", "your", "side", "NUMBER", "A", "complete", "list", "of", "change", "and", "a", "guide", "for", "plugin", "authors", "to", "upgrade", "be", "available", "in", "the", "wiki", "LINK", "to", "Guard", "NUMBER", "NUMBER", "You", "may", "also", "want", "to", "check", "out", "the", "issue", "on", "the", "Listen", "project", "LINK", "open", "since", "Listen", "takes", "care", "of", "watching", "for", "change", "and", "notifies", "Guard", "NUMBER", "Sorry", "I", "wasn", "t", "aware", "of", "that", "part", "of", "your", "docs", "NUMBER", "Here", "s", "some", "more", "info", "Guardfile", "ruby", "usr", "bin", "env", "ruby", "guard", "rspec", "do", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "puts", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "Here", "i", "put", "a", "puts", "just", "to", "see", "if", "it", "would", "watch", "things", "NUMBER", "and", "it", "do", "but", "it", "isn", "t", "executing", "rspec", "NUMBER", "end", "Gemfile", "ruby", "source", "LINK", "ruby", "NUMBER", "gem", "rails", "NUMBER", "gem", "american_date", "gem", "awesome_print", "gem", "aws", "sdk", "For", "storing", "paperclip", "uploads", "on", "Amazon", "S", "NUMBER", "gem", "cancan", "gem", "chronic", "gem", "devise", "NUMBER", "gem", "easy_roles", "github", "wulftone", "easy_roles", "gem", "eco", "gem", "faker", "gem", "jquery", "rails", "gem", "miniskirt", "gem", "paperclip", "gem", "puma", "gem", "rabl", "gem", "redcarpet", "gem", "sprockets", "derailleur", "gem", "validates_timeliness", "gem", "multi_json", "NUMBER", "group", "production", "do", "gem", "pg", "gem", "rails_", "NUMBER", "factor", "end", "group", "assets", "do", "gem", "coffee", "rails", "NUMBER", "gem", "compass", "rails", "gem", "sass", "rails", "NUMBER", "gem", "uglifier", "gem", "slim", "gem", "skim", "gem", "turbo", "sprockets", "rails", "NUMBER", "end", "group", "development", "do", "gem", "railroady", "generates", "diagrams", "of", "our", "DB", "schema", "gem", "letter_opener", "gem", "guard", "NUMBER", "gem", "guard", "livereload", "gem", "guard", "rspec", "gem", "spring", "gem", "yard", "end", "group", "test", "development", "do", "gem", "guard", "jasmine", "gem", "jasminerice", "gem", "parallel_tests", "gem", "perftools", "NUMBER", "rb", "github", "tmm", "NUMBER", "perftools", "NUMBER", "rb", "gem", "pry", "gem", "pry", "rails", "gem", "pry", "debugger", "gem", "rack", "perftools_profiler", "require", "rack", "perftools_profiler", "gem", "rspec", "rails", "gem", "sqlite", "NUMBER", "gem", "tapp", "gem", "thin", "rails", "end", "group", "test", "do", "gem", "simplecov", "require", "false", "Capybara", "stuff", "gem", "capybara", "gem", "capybara", "webkit", "gem", "database_cleaner", "TAG", "NUMBER", "gem", "rubyzip", "TAG", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "NotifySend", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Guard", "starts", "all", "plugins", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "RSpec", "be", "run", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "home", "trevor", "fruhla", "homefront", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Stop", "interactor", "app", "services", "yc", "consequence_services", "NUMBER", "rb", "services", "yc", "consequence_services", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "RSpec", "run_on_additions", "with", "spec", "services", "yc", "consequence_services_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "RSpec", "run_on_changes", "with", "spec", "services", "yc", "consequence_services_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "RSpec", "run_on_change", "with", "spec", "services", "yc", "consequence_services_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "guard", "main", "OS", "Debian", "wheezy", "Ruby", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "linux", "Rubygems", "NUMBER", "Bundler", "NUMBER", "Context", "Large", "Ruby", "on", "Rails", "project", "I", "hope", "that", "s", "enough", "to", "at", "least", "start", "NUMBER", "So", "it", "be", "watching", "but", "not", "run", "rspec", "NUMBER", "It", "also", "do", "not", "reload", "the", "Guardfile", "when", "I", "save", "it", "bundle", "exec", "guard", "debug", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "which", "notify", "send", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "emacsclient", "eval", "NUMBER", "NUMBER", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "NotifySend", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Guard", "starts", "all", "plugins", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "RSpec", "be", "run", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "home", "trevor", "fruhla", "homefront", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Stop", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "Thanks", "for", "your", "help", "Confirming", "this", "on", "Ubuntu", "NUMBER", "though", "it", "looks", "more", "like", "a", "listen", "issue", "downgrading", "to", "latest", "NUMBER", "x", "version", "of", "listen", "NUMBER", "in", "my", "case", "worked", "NUMBER", "Same", "ruby", "NUMBER", "What", "I", "discover", "be", "that", "after", "a", "while", "of", "be", "stalled", "guard", "finally", "run", "rspec", "after", "what", "raise", "an", "exception", "bash", "Randomized", "with", "seed", "NUMBER", "Error", "can", "t", "modify", "string", "temporarily", "locked", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "readline", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "block", "in", "readline", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "handle_read_errors", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "readline", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "retrieve_line", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "block", "in", "r", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "loop", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "r", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "re", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "rep", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "repl", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "loop", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "repl", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "catch", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "block", "in", "repl", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "catch", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_instance", "NUMBER", "rb", "NUMBER", "in", "repl", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "pry_class", "NUMBER", "rb", "NUMBER", "in", "start", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interactor", "NUMBER", "rb", "NUMBER", "in", "block", "in", "start", "Hope", "this", "helps", "NUMBER", "I", "have", "the", "same", "issue", "on", "FreeBSD", "NUMBER", "try", "to", "launch", "guard", "via", "bundle", "exec", "guard", "p", "it", "works", "for", "me", "NUMBER", "The", "same", "problem", "on", "Kubuntu", "NUMBER", "p", "flag", "fix", "the", "problem", "NUMBER", "I", "just", "get", "this", "error", "with", "Guard", "NUMBER", "Guard", "NUMBER", "works", "fine", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Error", "sending", "notification", "with", "tmux", "undefined", "method", "to_sym", "for", "nil", "NilClass", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Error", "sending", "notification", "with", "terminal_title", "undefined", "method", "to_sym", "for", "nil", "NilClass", "Versions", "Guard", "Guard", "version", "NUMBER", "Tmux", "tmux", "NUMBER", "Ruby", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "OS", "Mac", "OS", "X", "NUMBER", "Debug", "Output", "bundle", "exec", "guard", "debug", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "emacsclient", "eval", "NUMBER", "NUMBER", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "Tmux", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Guard", "starts", "all", "plugins", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "Cucumber", "NUMBER", "NUMBER", "NUMBER", "INFO", "Running", "all", "features", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "bundle", "exec", "cucumber", "no", "profile", "color", "format", "progress", "strict", "require", "Users", "bjoern", "code", "wrapp", "vendor", "ruby", "NUMBER", "gems", "guard", "cucumber", "NUMBER", "lib", "guard", "cucumber", "notification_formatter", "NUMBER", "rb", "format", "Guard", "Cucumber", "NotificationFormatter", "out", "dev", "null", "require", "features", "features", "Disabling", "profiles", "NUMBER", "NUMBER", "scenarios", "NUMBER", "steps", "NUMBER", "m", "NUMBER", "s", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Error", "sending", "notification", "with", "tmux", "undefined", "method", "to_sym", "for", "nil", "NilClass", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Error", "sending", "notification", "with", "terminal_title", "undefined", "method", "to_sym", "for", "nil", "NilClass", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "Cucumber", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "RSpec", "be", "run", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "bjoern", "code", "wrapp", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "guard", "main", "Tmux", "works", "fine", "for", "me", "NUMBER", "Can", "you", "show", "your", "Guardfile", "and", "NUMBER", "guard", "NUMBER", "rb", "if", "present", "rymai", "I", "run", "you", "backtrace", "patch", "against", "the", "given", "project", "but", "it", "couldn", "t", "reproduce", "the", "bug", "same", "with", "guard", "NUMBER", "via", "RubyGems", "NUMBER", "Maybe", "a", "tmux", "hiccup", "Anyway", "sorry", "for", "the", "noise", "NUMBER", "I", "ve", "update", "guard", "from", "NUMBER", "to", "NUMBER", "and", "now", "I", "m", "get", "error", "after", "run", "test", "in", "guard", "console", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Error", "sending", "notification", "with", "growl", "undefined", "method", "silent", "for", "TAG", "I", "use", "growl", "gem", "version", "NUMBER", "Ok", "with", "master", "it", "works", "great", "NUMBER", "Thanks", "for", "your", "work", "With", "Guard", "NUMBER", "ignore", "in", "Guardfile", "do", "not", "work", "with", "regular", "expressions", "for", "relative", "paths", "NUMBER", "For", "example", "with", "the", "following", "Guardfile", "ruby", "guard", "rspec", "do", "ignore", "r", "spec", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "end", "all", "file", "under", "the", "spec", "directory", "be", "_not_", "ignored", "NUMBER", "Though", "watch", "works", "with", "relative", "paths", "LINK", "L", "NUMBER", "L", "NUMBER", "NUMBER", "I", "think", "this", "be", "because", "Guard", "NUMBER", "delegates", "silencing", "logic", "to", "Listen", "but", "Listen", "try", "to", "match", "patterns", "to", "absolute", "paths", "NUMBER", "If", "you", "add", "p", "path", "NUMBER", "to_s", "to", "Listen", "Silencer", "silenced", "you", "ll", "see", "absolute", "paths", "NUMBER", "LINK", "L", "NUMBER", "LINK", "L", "NUMBER", "Once", "I", "thought", "this", "was", "an", "intentional", "change", "but", "I", "find", "the", "example", "in", "README", "LINK", "ignore", "still", "uses", "r", "ignored", "path", "so", "maybe", "this", "be", "an", "issue", "NUMBER", "Then", "I", "ve", "tried", "to", "fix", "this", "but", "I", "think", "it", "cannot", "be", "do", "only", "by", "some", "minor", "fix", "in", "Guard", "NUMBER", "Probably", "it", "needs", "design", "consideration", "between", "Guard", "and", "Listen", "NUMBER", "As", "far", "as", "I", "can", "figure", "out", "there", "be", "NUMBER", "options", "NUMBER", "Implement", "silencing", "logic", "in", "Guard", "NUMBER", "Do", "not", "delegate", "to", "Listen", "NUMBER", "Add", "an", "option", "that", "allows", "to", "specify", "patterns", "for", "relative", "path", "to", "Listen", "Listener", "ignore", "and", "Listen", "Silencer", "initialize", "NUMBER", "What", "do", "you", "think", "Update", "Fixed", "the", "wrong", "pattern", "NUMBER", "It", "was", "ignore", "r", "spec", "though", "the", "issue", "still", "exists", "NUMBER", "Gems", "guard", "NUMBER", "listen", "NUMBER", "guard", "rspec", "NUMBER", "Debug", "log", "LINK", "Reproducible", "example", "project", "LINK", "ignore", "issue", "Environment", "bash", "uname", "mprsv", "Darwin", "NUMBER", "Darwin", "Kernel", "Version", "NUMBER", "Sun", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PDT", "NUMBER", "root", "xnu", "NUMBER", "NUMBER", "RELEASE_X", "NUMBER", "_", "NUMBER", "x", "NUMBER", "_", "NUMBER", "i", "NUMBER", "ruby", "version", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "gem", "version", "NUMBER", "bundle", "version", "Bundler", "version", "NUMBER", "Yeah", "very", "good", "point", "NUMBER", "I", "ll", "think", "about", "the", "best", "way", "to", "handle", "it", "NUMBER", "Thanks", "for", "that", "great", "issue", "report", "Ok", "use", "absolute", "path", "in", "Listen", "seems", "quite", "essential", "to", "me", "so", "I", "wouldn", "t", "change", "it", "NUMBER", "What", "I", "propose", "it", "do", "detect", "if", "ignore", "regex", "on", "Guard", "side", "include", "with", "a", "relative", "path", "and", "inject", "the", "miss", "path", "part", "inside", "the", "regex", "before", "delegating", "to", "Listen", "NUMBER", "Sounds", "good", "to", "you", "I", "think", "tweaking", "regexp", "be", "quite", "error", "prone", "and", "should", "be", "avoided", "NUMBER", "It", "s", "not", "just", "a", "simple", "string", "operation", "NUMBER", "These", "be", "just", "a", "few", "examples", "of", "things", "you", "need", "to", "consider", "ruby", "foo", "bar", "baz", "foo", "A", "Z", "bar", "foo", "bar", "Afoo", "And", "probably", "implement", "it", "takes", "too", "long", "and", "you", "won", "t", "get", "good", "results", "NUMBER", "Rather", "I", "d", "like", "to", "highly", "recommend", "converting", "absolute", "path", "to", "relative", "path", "though", "it", "s", "up", "to", "you", "where", "you", "implement", "it", "in", "Guard", "or", "Listen", "NUMBER", "It", "s", "much", "more", "robust", "way", "NUMBER", "Good", "point", "I", "agree", "that", "converting", "absolute", "path", "to", "relative", "path", "would", "be", "more", "easier", "with", "Pathname", "relative_path_from", "NUMBER", "I", "think", "upgrade", "Listen", "logic", "will", "be", "simpler", "to", "do", "NUMBER", "Will", "have", "a", "look", "at", "it", "over", "the", "week", "end", "NUMBER", "Thanks", "NUMBER", "Thank", "you", "too", "Fixed", "in", "LINK", "Listen", "NUMBER", "release", "NUMBER", "Feel", "free", "to", "reopen", "it", "if", "it", "doesn", "t", "work", "for", "you", "It", "s", "work", "well", "with", "Listen", "NUMBER", "Thanks", "yujinakayama", "great", "I", "have", "problem", "with", "rails", "NUMBER", "ruby", "NUMBER", "guard", "NUMBER", "guard", "rspec", "NUMBER", "the", "problem", "be", "good", "describe", "at", "LINK", "runs", "specs", "three", "times", "btw", "i", "can", "t", "reproduce", "it", "on", "MacOS", "i", "can", "confirm", "that", "editing", "file", "with", "vim", "gedit", "on", "linux", "results", "as", "report", "on", "stackoverflow", "NUMBER", "when", "change", "file", "e", "NUMBER", "g", "NUMBER", "in", "eclipse", "this", "behavior", "do", "not", "occur", "NUMBER", "Yeah", "replacing", "replace", "run_on_changes", "with", "run_on_modifications", "be", "a", "good", "idea", "I", "ll", "change", "it", "in", "NUMBER", "release", "of", "Guard", "RSpec", "ready", "soon", "NUMBER", "There", "s", "no", "way", "of", "change", "how", "vim", "saves", "file", "Had", "a", "minor", "hiccup", "with", "Guard", "the", "other", "day", "NUMBER", "It", "seems", "as", "if", "Guard", "ignores", "the", "entire", "folder", "if", "the", "folder", "name", "contains", "any", "of", "the", "default", "ignored", "patterns", "like", "NUMBER", "git", "or", "NUMBER", "hg", "NUMBER", "In", "this", "case", "i", "was", "creating", "a", "github", "repo", "for", "github", "pages", "call", "marcuslilja", "NUMBER", "github", "NUMBER", "io", "NUMBER", "Guard", "runs", "as", "usual", "but", "it", "isn", "t", "watching", "any", "file", "for", "change", "NUMBER", "Manually", "triggering", "a", "refresh", "works", "fine", "NUMBER", "Guard", "doesn", "t", "seem", "to", "care", "if", "the", "parent", "folder", "name", "be", "NUMBER", "git", "or", "abc", "NUMBER", "git", "NUMBER", "whatever", "NUMBER", "Simply", "renaming", "the", "parent", "folder", "to", "anything", "that", "doesn", "t", "contain", "NUMBER", "git", "solves", "the", "issue", "NUMBER", "However", "it", "be", "still", "a", "bit", "annoying", "NUMBER", "Currently", "I", "m", "run", "Guard", "on", "Mac", "OS", "X", "NUMBER", "Ruby", "be", "install", "with", "RVM", "and", "run", "version", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "Gemfile", "source", "LINK", "gem", "guard", "gem", "guard", "compass", "Guardfile", "guard", "compass", "configuration_file", "Compass", "NUMBER", "rb", "Compass", "NUMBER", "rb", "http_path", "sass_dir", "sass", "css_dir", "stylesheets", "http_stylesheets_path", "stylesheets", "images_dir", "images", "http_images_path", "images", "fonts_path", "fonts", "http_fonts_dir", "fonts", "output_style", "expanded", "relative_assets", "false", "line_comments", "true", "Gems", "include", "by", "the", "bundle", "bundler", "NUMBER", "celluloid", "NUMBER", "chunky_png", "NUMBER", "coderay", "NUMBER", "compass", "NUMBER", "ffi", "NUMBER", "formatador", "NUMBER", "fssm", "NUMBER", "guard", "NUMBER", "guard", "compass", "NUMBER", "listen", "NUMBER", "lumberjack", "NUMBER", "method_source", "NUMBER", "pry", "NUMBER", "rb", "fsevent", "NUMBER", "rb", "inotify", "NUMBER", "sass", "NUMBER", "slop", "NUMBER", "thor", "NUMBER", "timers", "NUMBER", "Guard", "run", "with", "debug", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "which", "notify", "send", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "emacsclient", "eval", "NUMBER", "NUMBER", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "NotifySend", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Guard", "starts", "all", "plugins", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "TAG", "watchers", "callbacks", "options", "configuration_file", "Compass", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "Compass", "be", "waiting", "to", "compile", "your", "stylesheets", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "TAG", "watchers", "TAG", "TAG", "callbacks", "options", "configuration_file", "Users", "marcuslilja", "Widgets", "test", "NUMBER", "hg", "Compass", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "marcuslilja", "Widgets", "test", "NUMBER", "hg", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "guard", "main", "a", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "gfmt", "NUMBER", "cflag", "NUMBER", "b", "NUMBER", "iflag", "NUMBER", "b", "NUMBER", "lflag", "NUMBER", "cb", "oflag", "NUMBER", "discard", "f", "dsusp", "NUMBER", "eof", "NUMBER", "eol", "ff", "eol", "NUMBER", "ff", "erase", "NUMBER", "f", "intr", "NUMBER", "kill", "NUMBER", "lnext", "NUMBER", "min", "NUMBER", "quit", "NUMBER", "c", "reprint", "NUMBER", "start", "NUMBER", "status", "NUMBER", "stop", "NUMBER", "susp", "NUMBER", "a", "time", "NUMBER", "werase", "NUMBER", "ispeed", "NUMBER", "ospeed", "NUMBER", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "INFO", "Run", "all", "all", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_all_begin", "executed", "for", "TAG", "watchers", "TAG", "TAG", "callbacks", "options", "configuration_file", "Users", "marcuslilja", "Widgets", "test", "NUMBER", "hg", "Compass", "NUMBER", "rb", "overwrite", "stylesheets", "main", "NUMBER", "css", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_all_end", "executed", "for", "TAG", "watchers", "TAG", "TAG", "callbacks", "options", "configuration_file", "Users", "marcuslilja", "Widgets", "test", "NUMBER", "hg", "Compass", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "echo", "NUMBER", "dev", "null", "Should", "be", "fix", "in", "Listen", "NUMBER", "thanks", "WARN", "Unresolved", "specs", "during", "Gem", "Specification", "NUMBER", "reset", "celluloid", "NUMBER", "rb", "inotify", "NUMBER", "WARN", "Clearing", "out", "unresolve", "specs", "NUMBER", "Please", "report", "a", "bug", "if", "this", "causes", "problem", "NUMBER", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "notifysend", "NUMBER", "r", "b", "NUMBER", "in", "No", "such", "file", "or", "directory", "which", "notify", "send", "Errno", "ENOENT", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "notifysend", "NUMBER", "rb", "NUMBER", "in", "_notifysend_binary_available", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "notifysend", "NUMBER", "rb", "NUMBER", "in", "_register", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "notifysend", "NUMBER", "rb", "NUMBER", "in", "available", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "add_notifier", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "_auto_detect_notification", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "find", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "block", "in", "_auto_detect_notification", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "_auto_detect_notification", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "turn_on", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "setuper", "NUMBER", "r", "b", "NUMBER", "in", "_setup_notifier", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "setuper", "NUMBER", "r", "b", "NUMBER", "in", "setup", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "commander", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "command", "NUMBER", "rb", "NUMBER", "in", "run", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_command", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "C", "Ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "C", "Ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "version", "numbers", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "gem", "NUMBER", "guard", "NUMBER", "first", "error", "line", "from", "dump", "NUMBER", "NUMBER", "def", "self", "NUMBER", "_notifysend_binary_available", "NUMBER", "which", "notify", "send", "NUMBER", "empty", "NUMBER", "end", "TAG", "Error", "Line", "TAG", "I", "hope", "this", "helps", "to", "solve", "the", "bug", "Guard", "was", "run", "properly", "until", "i", "update", "to", "this", "new", "version", "if", "i", "run", "compass", "to", "compile", "stylesheets", "it", "runs", "properly", "but", "with", "guard", "it", "doesnt", "NUMBER", "i", "be", "run", "guard", "stand", "alone", "guard", "start", "Thanks", "in", "advance", "for", "any", "help", "debug", "dump", "prompt", "guard", "start", "debug", "WARN", "Unresolved", "specs", "during", "Gem", "Specification", "NUMBER", "reset", "celluloid", "NUMBER", "rb", "inotify", "NUMBER", "WARN", "Clearing", "out", "unresolve", "specs", "NUMBER", "Please", "report", "a", "bug", "if", "this", "causes", "problem", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "which", "notify", "send", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "setuper", "NUMBER", "rb", "NUMBER", "in", "No", "such", "file", "or", "directory", "which", "notify", "send", "Errno", "ENOENT", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "setuper", "NUMBER", "r", "b", "NUMBER", "in", "block", "in", "_debug_command_execution", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "notifysend", "NUMBER", "rb", "NUMBER", "in", "_notifysend_binary_available", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "notifysend", "NUMBER", "rb", "NUMBER", "in", "_register", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "notifysend", "NUMBER", "rb", "NUMBER", "in", "available", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "add_notifier", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "_auto_detect_notification", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "find", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "block", "in", "_auto_detect_notification", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "_auto_detect_notification", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "turn_on", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "setuper", "NUMBER", "r", "b", "NUMBER", "in", "_setup_notifier", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "setuper", "NUMBER", "r", "b", "NUMBER", "in", "setup", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "commander", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "command", "NUMBER", "rb", "NUMBER", "in", "run", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_command", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "C", "Ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "C", "Ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "I", "be", "at", "win", "NUMBER", "OS", "Edit", "from", "rymai", "I", "ve", "formatted", "your", "code", "terminal", "outputs", "NUMBER", "it", "seems", "that", "all", "my", "explanation", "suddenly", "disappeared", "i", "generate", "a", "gemfile", "with", "bundle", "init", "to", "the", "gem", "file", "i", "change", "the", "guard", "source", "as", "specified", "in", "bundler", "documentation", "it", "throw", "me", "an", "error", "i", "forced", "downloaded", "previously", "a", "copy", "of", "the", "repository", "from", "github", "with", "bundle", "config", "local", "NUMBER", "guard", "my", "git", "repo", "copy", "dir", "and", "throw", "me", "the", "same", "error", "so", "finally", "i", "cant", "access", "the", "repo", "Error", "from", "local", "repo", "Unfortunately", "a", "fatal", "error", "has", "occur", "NUMBER", "Please", "see", "the", "Bundler", "troubleshooting", "documentation", "at", "LINK", "issue", "NUMBER", "Thanks", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "source", "git", "git_pro", "xy", "NUMBER", "rb", "NUMBER", "in", "No", "such", "file", "or", "directory", "git", "branch", "Errno", "ENOENT", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "git_proxy", "NUMBER", "rb", "NUMBER", "in", "git", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "git_proxy", "NUMBER", "rb", "NUMBER", "in", "block", "in", "branch", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "git_proxy", "NUMBER", "rb", "NUMBER", "in", "block", "in", "allowed_in_path", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "git_proxy", "NUMBER", "rb", "NUMBER", "in", "chdir", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "git_proxy", "NUMBER", "rb", "NUMBER", "in", "in_path", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "git_proxy", "NUMBER", "rb", "NUMBER", "in", "allowed_in_path", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "git_proxy", "NUMBER", "rb", "NUMBER", "in", "branch", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "NUMBER", "rb", "NUMBER", "in", "local_override", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "block", "in", "converge_locals", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "each", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "map", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "converge_locals", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "initialize", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "dsl", "NUMBER", "r", "b", "NUMBER", "in", "new", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "dsl", "NUMBER", "r", "b", "NUMBER", "in", "to_definition", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "dsl", "NUMBER", "r", "b", "NUMBER", "in", "evaluate", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "build", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "NUMBER", "rb", "NUMBER", "NUMBER", "in", "definition", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "cli", "NUMBER", "r", "b", "NUMBER", "in", "check", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "vendo", "r", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "vendo", "r", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "vendo", "r", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "vendo", "r", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "bin", "bundle", "NUMBER", "in", "block", "in", "TAG", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "frien", "dly_errors", "NUMBER", "rb", "NUMBER", "in", "with_friendly_errors", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "bin", "bundle", "NUMBER", "in", "TAG", "from", "C", "Ruby", "NUMBER", "bin", "bundle", "NUMBER", "in", "load", "from", "C", "Ruby", "NUMBER", "bin", "bundle", "NUMBER", "in", "TAG", "gemfile", "ruby", "A", "sample", "Gemfile", "source", "LINK", "gem", "rails", "gem", "guard", "github", "guard", "gem", "guard", "compass", "gem", "guard", "livereload", "gem", "compass", "NUMBER", "plugin", "gemfile", "gemfile", "use", "with", "config", "bundle", "config", "local", "NUMBER", "guard", "my", "git", "repo", "copy", "dir", "needed", "to", "set", "a", "branch", "ruby", "A", "sample", "Gemfile", "source", "LINK", "gem", "rails", "gem", "guard", "github", "guard", "guard", "branch", "master", "gem", "guard", "compass", "gem", "guard", "livereload", "gem", "compass", "NUMBER", "plugin", "gemfile", "i", "use", "bundle", "check", "for", "each", "change", "on", "gemfile", "and", "later", "bundle", "install", "New", "Bundle", "Configured", "to", "just", "get", "guard", "NUMBER", "use", "gemfile", "ruby", "A", "sample", "Gemfile", "source", "LINK", "gem", "rails", "gem", "guard", "github", "guard", "use", "gemfile", "new", "error", "Fetching", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "Unfortunately", "a", "fatal", "error", "has", "occur", "NUMBER", "Please", "see", "the", "Bundler", "troubleshooting", "documentation", "at", "LINK", "issue", "NUMBER", "Thanks", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "source", "git", "git_pro", "xy", "NUMBER", "rb", "NUMBER", "in", "No", "such", "file", "or", "directory", "git", "clone", "git", "github", "NUMBER", "com", "guard", "g", "uard", "NUMBER", "git", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "cache", "bundler", "git", "guard", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "NUMBER", "efd", "NUMBER", "df", "NUMBER", "b", "bare", "no", "hardlinks", "Errno", "ENOENT", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "git_proxy", "NUMBER", "rb", "NUMBER", "in", "git", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "git_proxy", "NUMBER", "rb", "NUMBER", "in", "checkout", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "sourc", "e", "git", "NUMBER", "rb", "NUMBER", "in", "specs", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "block", "in", "converge_locked_specs", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "each", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "converge_locked_specs", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "resolve", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "specs", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "defin", "ition", "NUMBER", "rb", "NUMBER", "in", "resolve_remotely", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "insta", "ller", "NUMBER", "rb", "NUMBER", "in", "run", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "insta", "ller", "NUMBER", "rb", "NUMBER", "in", "install", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "cli", "NUMBER", "r", "b", "NUMBER", "in", "install", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "vendo", "r", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "vendo", "r", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "vendo", "r", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "vendo", "r", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "bin", "bundle", "NUMBER", "in", "block", "in", "TAG", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "lib", "bundler", "frien", "dly_errors", "NUMBER", "rb", "NUMBER", "in", "with_friendly_errors", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "bundler", "NUMBER", "bin", "bundle", "NUMBER", "in", "TAG", "from", "C", "Ruby", "NUMBER", "bin", "bundle", "NUMBER", "in", "load", "from", "C", "Ruby", "NUMBER", "bin", "bundle", "NUMBER", "in", "TAG", "i", "have", "tried", "a", "few", "ways", "to", "try", "to", "get", "from", "git", "even", "the", "one", "you", "describe", "but", "with", "no", "luck", "i", "attach", "the", "procedure", "gemfile", "terminal", "output", "previously", "tomorrow", "i", "will", "do", "the", "troubleshooting", "of", "bundler", "NUMBER", "Thanks", "for", "your", "help", "sorry", "i", "be", "new", "at", "github", "Followed", "troubleshooting", "and", "it", "seems", "its", "the", "same", "error", "as", "in", "comment", "LINK", "issuecomment", "NUMBER", "The", "same", "error", "compared", "with", "diff", "tool", "procedure", "of", "troubleshooting", "do", "NUMBER", "times", "the", "same", "error", "happens", "Salutations", "Sorry", "for", "this", "strange", "question", "NUMBER", "once", "you", "install", "git", "for", "ruby", "gem", "install", "git", "do", "anyone", "need", "to", "do", "some", "thing", "specific", "to", "get", "git", "work", "properly", "or", "its", "use", "system", "s", "credentials", "and", "info", "from", "github", "clients", "like", "github", "for", "windows", "my", "github", "for", "windows", "runs", "properly", "but", "it", "seems", "that", "it", "doesnt", "want", "to", "work", "ruby", "version", "NUMBER", "be", "there", "another", "way", "to", "try", "the", "code", "from", "remote", "repository", "guard", "guard", "i", "can", "get", "it", "via", "github", "for", "windows", "NUMBER", "like", "manual", "install", "I", "m", "having", "the", "same", "issue", "NUMBER", "Doesn", "t", "this", "crash", "on", "which", "binary", "miss", "on", "Windows", "EDIT", "No", "more", "crash", "on", "this", "point", "after", "returning", "false", "before", "the", "broken", "line", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifiers", "notifysend", "NUMBER", "r", "b", "NUMBER", "NUMBER", "rymai", "Yes", "it", "be", "work", "now", "NUMBER", "I", "like", "how", "guard", "automatically", "reloads", "Guardfile", "when", "a", "user", "edits", "it", "NUMBER", "However", "other", "file", "like", "guard", "G", "Guardfile", "lint", "be", "not", "automatically", "reloaded", "on", "change", "NUMBER", "Could", "we", "please", "fix", "this", "The", "guardfiles", "I", "m", "use", "LINK", "LINK", "lint", "Trace", "guard", "G", "Guardfile", "guard", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "apennebaker", "Desktop", "src", "sample", "edit", "Guardfile", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guardfile", "has", "be", "re", "evaluated", "NUMBER", "exit", "guard", "G", "Guardfile", "lint", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "use", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "apennebaker", "Desktop", "src", "sample", "edit", "Guardfile", "lint", "System", "specs", "guard", "ruby", "os", "Specs", "specs", "NUMBER", "LINK", "readme", "guard", "version", "Guard", "version", "NUMBER", "bundle", "version", "Bundler", "version", "NUMBER", "gem", "version", "NUMBER", "ruby", "version", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "system_profiler", "SPSoftwareDataType", "grep", "System", "Version", "System", "Version", "OS", "X", "NUMBER", "NUMBER", "F", "NUMBER", "I", "bundle", "update", "d", "to", "guard", "v", "NUMBER", "same", "problem", "NUMBER", "rymai", "Wow", "that", "was", "quick", "Yes", "confirmed", "work", "with", "bundle", "bundle", "exec", "guard", "G", "Guardfile", "lint", "touch", "Guardfile", "lint", "NUMBER", "I", "was", "looking", "to", "customize", "the", "tmux", "notifier", "but", "as", "best", "I", "can", "tell", "it", "s", "be", "ignoring", "options", "since", "around", "the", "notifier", "refactor", "NUMBER", "d", "NUMBER", "acd", "NUMBER", "e", "NUMBER", "be", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "b", "NUMBER", "e", "NUMBER", "This", "should", "fix", "the", "option", "setting", "along", "with", "add", "an", "option", "to", "disable", "the", "color", "highlight", "since", "in", "my", "case", "I", "only", "want", "to", "display", "a", "message", "and", "not", "permanently", "change", "the", "background", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "ac", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "on", "jamesdabbs", "tmux", "notifier", "into", "NUMBER", "d", "NUMBER", "cd", "NUMBER", "aca", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "cee", "NUMBER", "f", "NUMBER", "e", "NUMBER", "on", "guard", "master", "NUMBER", "bundle", "exec", "guard", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Invalid", "Guardfile", "original", "error", "be", "uninitialized", "constant", "Guard", "Guard", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "plugin_util", "NUMBER", "rb", "NUMBER", "in", "initialize_plugin", "uninitialized", "constant", "Guard", "Guard", "NameError", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "add_plugin", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "dsl", "NUMBER", "rb", "NUMBER", "in", "guard", "from", "Users", "superbrothers", "dev", "guard", "test", "Guardfile", "NUMBER", "in", "_instance_eval_guardfile", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "guardfile", "evaluator", "NUMBER", "rb", "NUMBER", "in", "instance_eval", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "guardfile", "evaluator", "NUMBER", "rb", "NUMBER", "in", "_instance_eval_guardfile", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "guardfile", "evaluator", "NUMBER", "rb", "NUMBER", "in", "evaluate_guardfile", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "setuper", "NUMBER", "rb", "NUMBER", "in", "evaluate_guardfile", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "setuper", "NUMBER", "rb", "NUMBER", "in", "setup", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "commander", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "command", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_command", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "superbrothers", "dev", "guard", "test", "vendor", "bundle", "ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "LINK", "Guard", "Guard", "be", "not", "required", "for", "the", "Guard", "plugin", "compatible", "with", "Guard", "NUMBER", "So", "Guard", "Guard", "be", "uninitialized", "right", "ruby", "def", "initialize_plugin", "options", "if", "plugin_class", "NUMBER", "superclass", "NUMBER", "to_s", "Guard", "Guard", "plugin_class", "NUMBER", "new", "options", "NUMBER", "delete", "watchers", "options", "else", "plugin_class", "NUMBER", "new", "options", "end", "end", "Thank", "you", "for", "the", "fix", "quickly", "Via", "the", "same", "mechanism", "as", "fail", "pass", "ie", "NUMBER", "emacsclient", "eval", "lisp", "it", "would", "be", "good", "if", "the", "modeline", "was", "change", "to", "a", "neutral", "color", "when", "test", "begin", "to", "be", "re", "run", "NUMBER", "It", "saves", "having", "to", "check", "if", "something", "critical", "has", "killed", "paused", "guard", "or", "if", "the", "change", "didn", "t", "re", "run", "specs", "be", "expected", "NUMBER", "I", "ll", "have", "a", "crack", "at", "add", "this", "myself", "this", "week", "NUMBER", "I", "d", "like", "to", "have", "the", "red", "green", "Emacs", "mode", "line", "reset", "or", "set", "to", "something", "neutral", "would", "be", "easier", "to", "do", "to", "dark", "mid", "grey", "perhaps", "NUMBER", "when", "Guard", "begins", "a", "test", "run", "NUMBER", "I", "ve", "find", "it", "hung", "on", "occasion", "and", "I", "d", "like", "to", "know", "without", "having", "to", "switch", "back", "to", "the", "Terminal", "to", "know", "that", "something", "went", "south", "NUMBER", "Each", "time", "emacsclient", "be", "call", "to", "do", "a", "modeline", "color", "change", "it", "s", "leaving", "the", "process", "open", "until", "guard", "quits", "NUMBER", "I", "will", "try", "and", "have", "a", "look", "at", "fix", "this", "myself", "but", "I", "d", "appreciate", "any", "input", "info", "from", "anyone", "NUMBER", "Thanks", "NUMBER", "Have", "a", "look", "at", "the", "emacs", "notifier", "LINK", "which", "basically", "sends", "some", "elisp", "to", "evaluate", "to", "the", "emacs", "client", "LINK", "L", "NUMBER", "NUMBER", "netzpirat", "rymai", "just", "had", "a", "look", "sorry", "for", "the", "delay", "IO", "NUMBER", "popen", "be", "left", "unclosed", "NUMBER", "LINK", "L", "NUMBER", "it", "should", "be", "something", "like", "this", "instead", "p", "IO", "NUMBER", "popen", "args", "NUMBER", "readlines", "p", "NUMBER", "close", "On", "a", "newly", "killed", "thread", "Thread", "alive", "behaves", "differently", "under", "MRI", "NUMBER", "than", "under", "MRI", "NUMBER", "and", "jruby", "and", "Thread", "status", "behaves", "differently", "under", "jruby", "than", "under", "MRI", "NUMBER", "and", "MRI", "NUMBER", "t", "Thread", "NUMBER", "new", "NUMBER", "kill", "puts", "t", "NUMBER", "alive", "t", "NUMBER", "atus", "On", "MRI", "NUMBER", "true", "aborting", "On", "MRI", "NUMBER", "true", "run", "On", "jruby", "false", "aborting", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "eb", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "cde", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "on", "cablegram", "fix", "thread", "status", "into", "NUMBER", "e", "NUMBER", "bac", "NUMBER", "c", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "on", "guard", "master", "NUMBER", "By", "setting", "thread", "to", "nil", "whenever", "the", "thread", "be", "killed", "and", "then", "test", "thread", "NUMBER", "nil", "to", "determine", "if", "the", "thread", "be", "alive", "avoids", "calling", "Thread", "alive", "and", "Thread", "status", "NUMBER", "This", "PR", "be", "OK", "to", "be", "merge", "NUMBER", "I", "was", "looking", "into", "creating", "test", "something", "like", "subject", "Guard", "NUMBER", "interactor", "NUMBER", "read", "it", "be", "an", "instance", "of", "Thread", "after", "calling", "NUMBER", "art", "do", "expect", "Guard", "NUMBER", "interactor", "NUMBER", "read", "NUMBER", "to", "be_a", "Thread", "Guard", "NUMBER", "interactor", "NUMBER", "art", "end", "it", "be", "nil", "after", "calling", "NUMBER", "op", "do", "expect", "Guard", "NUMBER", "interactor", "NUMBER", "read", "NUMBER", "to", "be_nil", "Guard", "NUMBER", "interactor", "NUMBER", "op", "end", "but", "the", "start", "and", "stop", "methods", "include", "code", "to", "short", "circuit", "their", "behavior", "while", "under", "test", "i", "NUMBER", "e", "NUMBER", "return", "if", "ENV", "GUARD_ENV", "test", "NUMBER", "Given", "that", "the", "code", "that", "would", "need", "to", "be", "test", "be", "short", "circuited", "in", "test", "mode", "I", "be", "leaning", "toward", "not", "add", "any", "test", "NUMBER", "Do", "you", "agree", "Error", "message", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Error", "sending", "notification", "with", "growl_notify", "undefined", "method", "first", "for", "nil", "NilClass", "guard", "version", "NUMBER", "growl_notify", "version", "NUMBER", "growlnotify", "version", "growlnotify", "NUMBER", "Copyright", "c", "The", "Growl", "Project", "NUMBER", "NUMBER", "Guardfile", "notification", "growl_notify", "sticky", "true", "Sorry", "have", "be", "elsewhere", "NUMBER", "I", "just", "run", "this", "with", "guard", "v", "NUMBER", "and", "it", "no", "longer", "raises", "the", "error", "NUMBER", "Thanks", "NUMBER", "For", "me", "the", "Guard", "console", "frequently", "freezes", "after", "run", "a", "test", "disabling", "subsequent", "keyboard", "input", "NUMBER", "The", "workaround", "be", "to", "kill", "and", "restart", "the", "terminal", "session", "or", "to", "re", "save", "my", "file", "under", "test", "which", "reruns", "the", "test", "and", "un", "freezes", "the", "terminal", "NUMBER", "I", "have", "not", "be", "able", "to", "figure", "out", "what", "be", "cause", "the", "terminal", "to", "freeze", "NUMBER", "As", "soon", "as", "I", "have", "an", "error", "condition", "that", "I", "can", "replicate", "I", "will", "report", "it", "NUMBER", "In", "the", "meantime", "do", "anyone", "know", "a", "reliable", "and", "fast", "way", "to", "reset", "a", "frozen", "Guard", "terminal", "session", "I", "have", "tried", "Ctrl", "C", "Ctrl", "J", "reset", "Ctrl", "Z", "fg", "and", "a", "bunch", "of", "other", "incantations", "NUMBER", "I", "m", "use", "Xubuntu", "NUMBER", "Terminator", "Tmux", "NUMBER", "guard", "NUMBER", "ruby", "NUMBER", "guard", "rspec", "NUMBER", "Rails", "NUMBER", "bash", "NUMBER", "I", "d", "suggest", "to", "give", "Guard", "master", "a", "try", "NUMBER", "There", "has", "be", "a", "lot", "of", "refactoring", "and", "most", "importantly", "it", "makes", "use", "of", "the", "completely", "rewritten", "Listen", "gem", "NUMBER", "I", "do", "not", "have", "the", "issue", "myself", "and", "I", "don", "t", "know", "way", "to", "reset", "Guard", "in", "a", "simple", "way", "NUMBER", "Thanks", "for", "the", "tip", "I", "ll", "give", "this", "a", "try", "when", "Guard", "NUMBER", "be", "release", "NUMBER", "This", "issue", "may", "have", "appeared", "in", "NUMBER", "On", "my", "machines", "that", "have", "NUMBER", "they", "never", "appear", "to", "freeze", "NUMBER", "On", "NUMBER", "machines", "it", "s", "common", "NUMBER", "The", "observed", "symptom", "be", "an", "edit", "of", "some", "file", "starts", "the", "input", "cursor", "moves", "to", "the", "left", "margin", "and", "input", "to", "guard", "be", "not", "processed", "until", "the", "file", "be", "saved", "NUMBER", "wpaulson", "my", "observed", "symptoms", "were", "exactly", "as", "you", "describe", "NUMBER", "My", "guard", "console", "froze", "on", "NUMBER", "NUMBER", "of", "my", "test", "runs", "but", "I", "was", "not", "able", "to", "figure", "out", "a", "cause", "or", "reproduce", "reliably", "NUMBER", "I", "revert", "from", "NUMBER", "to", "NUMBER", "I", "haven", "t", "experienced", "the", "freeze", "all", "morning", "NUMBER", "Sweet", "Thanks", "a", "ton", "for", "this", "tip", "NUMBER", "I", "can", "t", "see", "within", "those", "change", "what", "would", "cause", "the", "symptoms", "NUMBER", "The", "only", "thing", "that", "seems", "at", "all", "relate", "be", "the", "code", "that", "calls", "stty", "but", "the", "change", "seem", "ok", "to", "an", "outsider", "NUMBER", "Sent", "from", "my", "iPhone", "On", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "R\u00e9my", "Coutable", "notifications", "github", "NUMBER", "com", "write", "Thanks", "guys", "do", "you", "think", "these", "change", "might", "cause", "this", "issue", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "Hmm", "perhaps", "change", "thread", "NUMBER", "alive", "to", "if", "thread", "sleep", "run", "NUMBER", "include", "thread", "NUMBER", "atus", "makes", "it", "not", "atomic", "anymore", "What", "was", "the", "purpose", "of", "rewriting", "this", "I", "mean", "the", "docs", "for", "Thread", "alive", "says", "Returns", "true", "if", "thr", "be", "run", "or", "sleeping", "NUMBER", "so", "I", "don", "t", "see", "a", "reason", "to", "change", "that", "NUMBER", "See", "PR", "NUMBER", "for", "the", "change", "to", "thread", "NUMBER", "alive", "NUMBER", "According", "to", "ruby", "documentation", "for", "both", "NUMBER", "LINK", "doc", "NUMBER", "org", "core", "NUMBER", "Thread", "NUMBER", "html", "method", "i", "alive", "NUMBER", "F", "and", "NUMBER", "LINK", "doc", "NUMBER", "org", "core", "NUMBER", "Thread", "NUMBER", "html", "method", "i", "alive", "NUMBER", "F", "Thread", "alive", "returns", "true", "if", "the", "thread", "be", "run", "or", "sleeping", "NUMBER", "In", "actuality", "on", "both", "NUMBER", "and", "NUMBER", "Thread", "alive", "also", "returns", "true", "if", "the", "thread", "be", "aborting", "NUMBER", "The", "impact", "of", "this", "was", "that", "when", "thread", "was", "in", "the", "aborting", "state", "Guard", "Interactor", "start", "would", "skip", "creating", "a", "new", "interactor", "thread", "because", "thread", "NUMBER", "alive", "returned", "true", "when", "thread", "was", "in", "fact", "in", "the", "half", "dead", "aborting", "state", "NUMBER", "With", "the", "current", "thread", "aborting", "and", "no", "new", "thread", "start", "no", "keyboard", "interaction", "was", "possible", "NUMBER", "PR", "NUMBER", "appeared", "to", "address", "the", "problem", "but", "apparently", "not", "completely", "NUMBER", "On", "a", "killed", "thread", "Thread", "alive", "behaves", "differently", "under", "MRI", "NUMBER", "than", "under", "MRI", "NUMBER", "and", "jruby", "NUMBER", "On", "a", "killed", "thread", "Thread", "status", "behaves", "differently", "under", "jruby", "than", "under", "MRI", "NUMBER", "and", "MRI", "NUMBER", "Under", "MRI", "NUMBER", "on", "either", "Windows", "XP", "SP", "NUMBER", "or", "Ubuntu", "NUMBER", "t", "Thread", "NUMBER", "new", "NUMBER", "kill", "puts", "t", "NUMBER", "alive", "t", "NUMBER", "atus", "true", "aborting", "Under", "jruby", "on", "either", "Windows", "XP", "SP", "NUMBER", "or", "Ubuntu", "NUMBER", "t", "Thread", "NUMBER", "new", "NUMBER", "kill", "puts", "t", "NUMBER", "alive", "t", "NUMBER", "atus", "false", "aborting", "Under", "MRI", "NUMBER", "on", "either", "Windows", "XP", "SP", "NUMBER", "or", "Ubuntu", "NUMBER", "t", "Thread", "NUMBER", "new", "NUMBER", "kill", "puts", "t", "NUMBER", "alive", "t", "NUMBER", "atus", "true", "run", "It", "makes", "sense", "that", "the", "interactor", "thread", "be", "not", "restarted", "under", "NUMBER", "because", "thread", "NUMBER", "atus", "will", "return", "run", "which", "causes", "Guard", "Interactor", "start", "to", "skip", "restarting", "the", "interactor", "NUMBER", "As", "a", "work", "around", "you", "can", "trigger", "guard", "to", "action", "by", "re", "saving", "a", "file", "in", "the", "watched", "directory", "NUMBER", "When", "there", "be", "no", "interactor", "the", "watcher", "still", "function", "NUMBER", "cablegram", "Thanks", "a", "lot", "for", "the", "detailed", "answer", "that", "s", "very", "interesting", "netzpirat", "Take", "a", "look", "at", "NUMBER", "It", "address", "this", "issue", "by", "avoiding", "calls", "to", "Thread", "alive", "and", "Thread", "status", "NUMBER", "andyl", "NUMBER", "was", "merge", "and", "be", "include", "in", "NUMBER", "pre", "NUMBER", "NUMBER", "This", "should", "fix", "your", "issue", "when", "use", "ruby", "NUMBER", "I", "be", "closing", "assuming", "this", "be", "fix", "NUMBER", "Post", "again", "if", "issue", "persists", "NUMBER", "Thanks", "Here", "the", "update", "for", "the", "new", "Listen", "NUMBER", "API", "NUMBER", "As", "version", "NUMBER", "be", "still", "in", "beta", "stage", "BSD", "and", "Windows", "adapter", "hasn", "t", "be", "test", "I", "m", "not", "sure", "if", "it", "s", "a", "good", "idea", "to", "include", "it", "directly", "in", "Guard", "NUMBER", "maybe", "waiting", "for", "NUMBER", "would", "be", "a", "safer", "idea", "NUMBER", "In", "an", "other", "side", "it", "would", "be", "way", "kicker", "test", "use", "if", "include", "in", "Guard", "NUMBER", "release", "NUMBER", "What", "do", "you", "think", "guys", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "NUMBER", "af", "NUMBER", "cc", "NUMBER", "f", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "eff", "NUMBER", "on", "listen", "NUMBER", "into", "add", "NUMBER", "b", "NUMBER", "c", "NUMBER", "befb", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "ea", "NUMBER", "db", "NUMBER", "eacf", "NUMBER", "d", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "on", "listen", "NUMBER", "into", "add", "NUMBER", "b", "NUMBER", "c", "NUMBER", "befb", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "ea", "NUMBER", "db", "NUMBER", "eacf", "NUMBER", "d", "on", "master", "NUMBER", "From", "a", "user", "perspective", "it", "s", "definitely", "simpler", "to", "understand", "that", "Listen", "NUMBER", "and", "Guard", "NUMBER", "belongs", "together", "dropping", "both", "Ruby", "NUMBER", "support", "they", "not", "interested", "in", "the", "internal", "rewrite", "NUMBER", "We", "do", "not", "have", "any", "reason", "to", "release", "Guard", "NUMBER", "as", "soon", "as", "possible", "so", "it", "may", "make", "sense", "to", "release", "them", "together", "NUMBER", "Ok", "great", "I", "agree", "NUMBER", "I", "ll", "merge", "this", "PR", "and", "release", "Guard", "NUMBER", "pre", "NUMBER", "soon", "NUMBER", "Merged", "feel", "free", "to", "release", "pre", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "NUMBER", "fcfc", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "c", "NUMBER", "fccdae", "NUMBER", "ff", "NUMBER", "on", "turn_off_for_terminal_notifier", "into", "c", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "ef", "NUMBER", "dbc", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "a", "NUMBER", "beeecf", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "fe", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "on", "turn_off_for_terminal_notifier", "into", "c", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "ef", "NUMBER", "dbc", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "a", "NUMBER", "beeecf", "NUMBER", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "addfab", "NUMBER", "cc", "NUMBER", "f", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "dde", "on", "turn_off_for_terminal_notifier", "into", "c", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "ef", "NUMBER", "dbc", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "a", "NUMBER", "beeecf", "NUMBER", "on", "master", "NUMBER", "I", "think", "NUMBER", "referred", "to", "the", "notification", "in", "the", "terminal", "title", "whereas", "this", "pull", "request", "remove", "the", "last", "notification", "from", "the", "notification", "center", "NUMBER", "I", "guess", "this", "be", "not", "what", "you", "want", "When", "Gemfile", "contains", "gem", "guard", "bundle", "will", "install", "guard", "version", "NUMBER", "when", "it", "contains", "gem", "guard", "gem", "better_errors", "bundle", "will", "install", "guard", "version", "NUMBER", "Here", "be", "a", "reproduction", "script", "LINK", "I", "be", "use", "Bundler", "version", "NUMBER", "on", "Darwin", "Kernel", "Version", "NUMBER", "I", "think", "this", "be", "a", "bundler", "error", "Guard", "depends", "on", "Pry", "NUMBER", "and", "the", "latest", "Pry", "NUMBER", "depends", "on", "Coderay", "NUMBER", "Better", "Errors", "depends", "on", "Coderay", "NUMBER", "When", "I", "try", "to", "force", "Guard", "version", "NUMBER", "by", "add", "it", "as", "a", "version", "requirement", "to", "the", "Gemfile", "source", "LINK", "gem", "guard", "NUMBER", "gem", "better_errors", "and", "run", "bundle", "install", "I", "get", "the", "following", "error", "bundle", "install", "Fetching", "gem", "metadata", "from", "LINK", "Fetching", "gem", "metadata", "from", "LINK", "Resolving", "dependencies", "NUMBER", "Bundler", "could", "not", "find", "compatible", "version", "for", "gem", "coderay", "In", "Gemfile", "guard", "NUMBER", "ruby", "depends", "on", "coderay", "NUMBER", "ruby", "better_errors", "NUMBER", "ruby", "depends", "on", "coderay", "NUMBER", "But", "Better", "Error", "depends", "on", "NUMBER", "and", "not", "NUMBER", "LINK", "_errors", "blob", "v", "NUMBER", "better_errors", "NUMBER", "gemspec", "L", "NUMBER", "Oh", "rymai", "was", "faster", "and", "has", "even", "a", "solution", "NUMBER", "rymai", "Yes", "makes", "sense", "NUMBER", "So", "Bundler", "first", "analyzes", "Coderay", "because", "C", "comes", "before", "G", "selects", "the", "matching", "Coderay", "version", "then", "analyzes", "Guard", "decreases", "the", "version", "until", "the", "dependencies", "be", "work", "together", "NUMBER", "Nice", "guys", "Closing", "it", "s", "not", "something", "we", "can", "handle", "as", "far", "as", "I", "understand", "NUMBER", "Currently", "it", "leaves", "what", "ever", "it", "put", "there", "last", "after", "exiting", "which", "be", "a", "bit", "annoying", "NUMBER", "Love", "guard", "regardless", "though", "D", "For", "me", "it", "should", "be", "the", "normal", "behavior", "of", "every", "command", "line", "tool", "do", "you", "know", "other", "tool", "that", "clean", "the", "screen", "after", "exiting", "If", "you", "want", "there", "s", "still", "the", "clear", "LINK", "c", "clear", "option", "Guard", "option", "to", "clean", "after", "each", "change", "NUMBER", "thibaudgg", "I", "think", "he", "means", "that", "the", "result", "of", "the", "last", "run", "will", "be", "shown", "in", "the", "terminal", "_title_", "which", "be", "do", "by", "the", "TerminalNotifier", "NUMBER", "That", "means", "we", "need", "to", "notify", "all", "notifiers", "that", "Guard", "be", "shutting", "down", "and", "allow", "each", "notifier", "to", "do", "some", "cleanup", "NUMBER", "I", "d", "prefer", "to", "address", "this", "in", "NUMBER", "since", "rymai", "refactored", "the", "notifiers", "NUMBER", "I", "ll", "have", "a", "look", "NUMBER", "Oh", "I", "see", "sorry", "I", "m", "on", "current", "latest", "OSX", "NUMBER", "What", "be", "you", "on", "rymai", "Here", "s", "a", "screenshot", "NUMBER", "I", "m", "run", "guard", "NUMBER", "image", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "df", "NUMBER", "png", "In", "Gemfile", "gem", "guard", "gem", "guard", "rspec", "Then", "bundle", "install", "Then", "just", "run", "bundle", "exec", "guard", "from", "the", "osx", "terminal", "When", "a", "run", "be", "complete", "NUMBER", "guard", "main", "exit", "In", "my", "case", "both", "the", "window", "and", "tab", "titles", "be", "update", "NUMBER", "I", "think", "you", "may", "see", "the", "same", "if", "you", "had", "multiple", "tabs", "open", "NUMBER", "Let", "me", "try", "to", "debug", "this", "on", "my", "machine", "NUMBER", "I", "will", "send", "a", "pull", "request", "if", "I", "can", "find", "the", "bug", "and", "fix", "it", "NUMBER", "I", "looked", "through", "the", "code", "NUMBER", "The", "current", "notifications", "design", "do", "not", "have", "a", "clean", "way", "of", "clearing", "anything", "because", "there", "be", "no", "mechanism", "for", "the", "notifiers", "to", "be", "informed", "of", "the", "guard", "process", "exiting", "NUMBER", "Without", "this", "there", "be", "no", "clean", "way", "of", "telling", "the", "terminal", "notifier", "that", "guard", "be", "exiting", "which", "be", "required", "to", "have", "it", "reset", "the", "terminal", "title", "to", "the", "default", "NUMBER", "If", "you", "agree", "I", "can", "add", "a", "new", "hook", "to", "all", "the", "notifiers", "like", "on_exit", "and", "have", "guard", "invoke", "it", "on", "all", "registered", "notifiers", "before", "exiting", "NUMBER", "This", "will", "given", "each", "of", "them", "the", "chance", "to", "perform", "any", "cleanup", "NUMBER", "We", "can", "also", "first", "check", "to", "see", "each", "notifier", "implement", "the", "on_exit", "method", "before", "invoking", "it", "NUMBER", "This", "will", "provide", "backward", "compatibility", "for", "any", "notifiers", "that", "don", "t", "yet", "implement", "this", "NUMBER", "Thoughts", "I", "looked", "through", "the", "code", "NUMBER", "The", "current", "notifications", "design", "do", "not", "have", "a", "clean", "way", "of", "clearing", "anything", "because", "there", "be", "no", "mechanism", "for", "the", "notifiers", "to", "be", "informed", "of", "the", "guard", "process", "exiting", "NUMBER", "Without", "this", "there", "be", "no", "clean", "way", "of", "telling", "the", "terminal", "notifier", "that", "guard", "be", "exiting", "which", "be", "required", "to", "have", "it", "reset", "the", "terminal", "title", "to", "the", "default", "NUMBER", "You", "need", "to", "look", "at", "the", "v", "NUMBER", "branch", "NUMBER", "Rymai", "refactored", "the", "notifiers", "and", "when", "Guard", "stops", "each", "notifier", "s", "class", "receives", "a", "turn_off", "message", "NUMBER", "If", "you", "agree", "I", "can", "add", "a", "new", "hook", "to", "all", "the", "notifiers", "like", "on_exit", "and", "have", "guard", "invoke", "it", "on", "all", "registered", "notifiers", "before", "exiting", "NUMBER", "This", "will", "given", "each", "of", "them", "the", "chance", "to", "perform", "any", "cleanup", "NUMBER", "That", "would", "be", "great", "Just", "don", "t", "forget", "to", "use", "the", "v", "NUMBER", "branch", "NUMBER", "This", "will", "be", "merge", "very", "likely", "within", "the", "next", "two", "weeks", "Michael", "Ah", "perfect", "NUMBER", "The", "only", "thing", "remaining", "be", "for", "the", "terminal_notifier", "class", "to", "implement", "the", "turn_off", "method", "and", "do", "the", "needful", "to", "clear", "the", "title", "NUMBER", "It", "would", "be", "nice", "if", "the", "list", "of", "currently", "install", "notifiers", "and", "perhaps", "their", "options", "were", "available", "on", "the", "command", "line", "similar", "to", "guard", "show", "for", "event", "plugins", "NUMBER", "Sounds", "like", "a", "good", "idea", "do", "you", "want", "to", "handle", "it", "and", "submit", "a", "PR", "rymai", "could", "certainly", "help", "you", "when", "he", "ll", "be", "back", "from", "vacation", "NUMBER", "Thanks", "What", "about", "this", "bundle", "exec", "guard", "notifiers", "Name", "Available", "Used", "Option", "Value", "gntp", "sticky", "false", "growl", "sticky", "false", "priority", "NUMBER", "growl_notify", "sticky", "false", "priority", "NUMBER", "terminal_notifier", "libnotify", "transient", "false", "append", "true", "timeout", "NUMBER", "notifysend", "t", "NUMBER", "h", "int", "transient", "NUMBER", "notifu", "time", "NUMBER", "icon", "false", "baloon", "false", "nosound", "false", "noquiet", "false", "xp", "false", "emacs", "client", "emacsclient", "success", "ForestGreen", "fail", "Firebrick", "default", "Black", "fontcolor", "White", "tmux", "client", "tmux", "tmux_environment", "TMUX", "success", "green", "fail", "red", "pending", "yellow", "default", "green", "timeout", "NUMBER", "display_message", "false", "default_message_format", "s", "s", "default_message_color", "white", "line_separator", "color_location", "status", "left", "bg", "terminal_title", "file", "format", "s", "n", "s", "n", "s", "n", "heart_eyes", "netzpirat", "That", "looks", "fantastic", "NUMBER", "but", "be", "there", "a", "place", "I", "can", "clone", "test", "that", "from", "to", "see", "if", "those", "lovely", "Unicode", "checkmarks", "need", "to", "be", "Yes", "No", "on", "Windows", "edbrannin", "Just", "landed", "on", "the", "master", "branch", "so", "you", "can", "test", "it", "on", "Windows", "NUMBER", "rymai", "Ready", "for", "the", "pre", "release", "from", "my", "end", "Tweet", "it", "Do", "you", "migrate", "CHANGELOG", "manually", "rymai", "good", "guy", "What", "do", "you", "think", "about", "remove", "CHANGELOG", "NUMBER", "md", "and", "add", "a", "link", "chapter", "in", "the", "README", "I", "have", "this", "in", "my", "Guardfile", "ignore", "r", "test", "not_interested", "guard", "minitest", "do", "watch", "r", "test", "NUMBER", "NUMBER", "_test", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "test", "m", "NUMBER", "m", "NUMBER", "_test", "NUMBER", "rb", "NUMBER", "end", "What", "I", "m", "trying", "to", "do", "be", "to", "avoid", "test", "inside", "test", "not_interested", "to", "run", "when", "I", "run", "all", "the", "test", "with", "minitest", "in", "the", "Guard", "console", "NUMBER", "Any", "idea", "Yeah", "that", "s", "a", "bug", "for", "me", "NUMBER", "We", "have", "the", "following", "as", "plugin", "API", "for", "the", "run", "all", "command", "bash", "def", "run_all", "end", "There", "s", "a", "good", "reason", "why", "we", "don", "t", "pass", "any", "path", "we", "should", "not", "know", "plugin", "specific", "stuff", "like", "a", "default", "spec", "folder", "which", "be", "needed", "to", "calculate", "the", "diff", "of", "the", "default", "path", "and", "the", "ignored", "filtered", "paths", "NUMBER", "It", "s", "the", "plugin", "that", "needs", "to", "implement", "it", "by", "taking", "the", "ignore", "and", "filter", "options", "into", "account", "NUMBER", "Another", "solution", "be", "to", "add", "a", "custom", "Pry", "command", "that", "only", "runs", "a", "subset", "of", "the", "specs", "NUMBER", "This", "can", "be", "derived", "from", "the", "change", "command", "LINK", "NUMBER", "How", "do", "we", "wanna", "proceed", "with", "this", "For", "me", "this", "isn", "t", "a", "bug", "and", "the", "documentation", "describes", "it", "clearly", "e", "NUMBER", "g", "NUMBER", "for", "ignore", "The", "ignore", "method", "can", "be", "use", "to", "exclude", "file", "and", "directories", "from", "the", "set", "of", "file", "be", "watched", "NUMBER", "Let", "s", "say", "you", "have", "use", "the", "watch", "method", "to", "monitor", "a", "directory", "but", "you", "be", "not", "interested", "in", "change", "happening", "to", "images", "you", "could", "use", "the", "ignore", "method", "to", "exclude", "them", "NUMBER", "and", "for", "filter", "The", "filter", "method", "allows", "you", "to", "focus", "by", "filtering", "file", "and", "directories", "without", "having", "to", "specify", "them", "by", "hand", "in", "the", "watch", "method", "NUMBER", "E", "NUMBER", "g", "NUMBER", "if", "you", "be", "watching", "multiple", "directories", "but", "only", "interested", "in", "change", "to", "the", "Ruby", "file", "then", "use", "the", "filter", "method", "NUMBER", "You", "right", "netzpirat", "we", "should", "leave", "it", "as", "this", "as", "the", "documentation", "be", "correct", "with", "the", "current", "implementation", "only", "filter", "watched", "file", "NUMBER", "I", "don", "t", "think", "filtering", "the", "run", "all", "methods", "would", "be", "possible", "at", "the", "Guard", "level", "it", "should", "be", "managed", "by", "Guard", "plugins", "NUMBER", "Thanks", "closing", "this", "as", "it", "s", "not", "a", "bug", "and", "we", "anyway", "won", "t", "be", "able", "to", "handle", "this", "in", "Guard", "itself", "NUMBER", "Very", "nice", "stuff", "here", "Thanks", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "de", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cdb", "NUMBER", "ff", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "on", "v", "NUMBER", "into", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "adf", "NUMBER", "be", "NUMBER", "ccf", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "ec", "on", "master", "NUMBER", "Perfect", "for", "me", "What", "do", "you", "thing", "about", "use", "GitHub", "Releases", "LINK", "release", "your", "software", "instead", "of", "the", "CHANGELOG", "NUMBER", "md", "file", "But", "you", "keep", "the", "CHANGELOG", "file", "LINK", "_content_type", "blob", "master", "CHANGELOG", "NUMBER", "md", "Why", "that", "maybe", "just", "a", "link", "to", "GitHub", "Releases", "inside", "the", "CHANGELOG", "at", "first", "would", "be", "enough", "no", "I", "m", "ok", "with", "draft", "release", "even", "if", "they", "aren", "t", "public", "NUMBER", "netzpirat", "ok", "for", "you", "Sounds", "reasonable", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "f", "NUMBER", "df", "NUMBER", "a", "NUMBER", "beb", "NUMBER", "fe", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "d", "on", "v", "NUMBER", "into", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "adf", "NUMBER", "be", "NUMBER", "ccf", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "ec", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "cffc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "fbfb", "NUMBER", "ae", "NUMBER", "dcd", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "d", "on", "v", "NUMBER", "into", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "adf", "NUMBER", "be", "NUMBER", "ccf", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "ec", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bbf", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "f", "on", "v", "NUMBER", "into", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "adf", "NUMBER", "be", "NUMBER", "ccf", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "ec", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "fcf", "NUMBER", "c", "NUMBER", "d", "NUMBER", "f", "NUMBER", "dfc", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "on", "v", "NUMBER", "into", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "adf", "NUMBER", "be", "NUMBER", "ccf", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "ec", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "bce", "NUMBER", "adbcb", "NUMBER", "bfd", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ea", "on", "v", "NUMBER", "into", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "adf", "NUMBER", "be", "NUMBER", "ccf", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "ec", "on", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "efa", "NUMBER", "f", "NUMBER", "fb", "NUMBER", "fadea", "NUMBER", "ef", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "on", "v", "NUMBER", "into", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "bec", "NUMBER", "e", "on", "master", "NUMBER", "Ok", "for", "me", "NUMBER", "Will", "Guard", "NUMBER", "depend", "on", "Listen", "NUMBER", "Listen", "NUMBER", "will", "be", "soon", "ready", "for", "a", "beta", "release", "but", "I", "preferrer", "to", "keep", "the", "upgrade", "for", "later", "maybe", "Guard", "NUMBER", "as", "there", "be", "a", "lot", "of", "rewrite", "NUMBER", "netzpirat", "do", "you", "get", "the", "time", "to", "have", "a", "look", "to", "Listen", "v", "NUMBER", "branch", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "f", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "af", "NUMBER", "f", "NUMBER", "on", "v", "NUMBER", "into", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "bec", "NUMBER", "e", "on", "master", "NUMBER", "So", "guard", "runs", "through", "the", "first", "time", "but", "when", "I", "press", "enter", "to", "toggle", "a", "repeated", "run", "I", "get", "SystemStackError", "stack", "level", "too", "deep", "from", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "command", "NUMBER", "rb", "NUMBER", "Also", "I", "have", "a", "process", "fseventsd", "and", "a", "process", "ruby", "fsevent_watch", "that", "starts", "consuming", "all", "cpu", "NUMBER", "Yeah", "sorry", "guard", "debug", "guard", "debug", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "emacsclient", "eval", "NUMBER", "NUMBER", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Guard", "starts", "all", "plugins", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "RSpec", "be", "run", "NUMBER", "NUMBER", "NUMBER", "INFO", "Running", "all", "specs", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "bundle", "exec", "rspec", "help", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "bundle", "exec", "rspec", "f", "d", "r", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatter", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "failure", "exit", "code", "NUMBER", "spec", "NUMBER", "runs", "successfully", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "robin", "Code", "soc", "soc", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "All", "guard", "main", "pressing", "enter", "SystemStackError", "stack", "level", "too", "deep", "from", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "command", "NUMBER", "rb", "NUMBER", "Guardfile", "ruby", "def", "add_rspec", "spec_paths", "w", "spec", "guard", "rspec", "cli", "f", "d", "spec_paths", "spec_paths", "do", "if", "routes", "change", "watch", "config", "routes", "NUMBER", "rb", "spec", "if", "a", "spec", "change", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "rerun", "shared", "examples", "watch", "r", "spec", "NUMBER", "NUMBER", "example", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "Rails", "models", "controllers", "etc", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "views", "watch", "r", "app", "NUMBER", "NUMBER", "erb", "NUMBER", "haml", "m", "spec", "m", "NUMBER", "m", "NUMBER", "_spec", "NUMBER", "rb", "routing", "acceptance", "watch", "r", "app", "controllers", "NUMBER", "_controller", "NUMBER", "rb", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "controllers", "m", "NUMBER", "_controller_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "if", "support", "change", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "if", "application", "controller", "change", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "Tasks", "watch", "r", "lib", "tasks", "NUMBER", "NUMBER", "rake", "m", "spec", "tasks", "m", "NUMBER", "_spec", "NUMBER", "rb", "Lib", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "Fabrication", "watch", "r", "spec", "fabricators", "NUMBER", "_fabricator", "NUMBER", "rb", "m", "Dir", "spec", "m", "NUMBER", "cell", "views", "watch", "r", "app", "cells", "NUMBER", "NUMBER", "NUMBER", "html", "NUMBER", "m", "spec", "cells", "m", "NUMBER", "_cell_spec", "NUMBER", "rb", "end", "end", "group", "all", "do", "add_rspec", "end", "scope", "group", "all", "The", "Gemfile", "be", "a", "bit", "long", "but", "it", "seems", "to", "be", "an", "issue", "with", "my", "Guardfile", "It", "doesn", "t", "work", "as", "stated", "above", "however", "if", "I", "remove", "the", "group", "scope", "and", "add", "add_rspec", "directly", "at", "the", "top", "level", "everything", "works", "fine", "NUMBER", "I", "be", "use", "Ruby", "NUMBER", "on", "OS", "X", "NUMBER", "What", "about", "Ruby", "scope", "group", "all", "group", "all", "do", "guard", "rspec", "cli", "f", "d", "spec_paths", "w", "spec", "do", "if", "routes", "change", "watch", "config", "routes", "NUMBER", "rb", "spec", "if", "a", "spec", "change", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "rerun", "shared", "examples", "watch", "r", "spec", "NUMBER", "NUMBER", "example", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "Rails", "models", "controllers", "etc", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "views", "watch", "r", "app", "NUMBER", "NUMBER", "erb", "NUMBER", "haml", "m", "spec", "m", "NUMBER", "m", "NUMBER", "_spec", "NUMBER", "rb", "routing", "acceptance", "watch", "r", "app", "controllers", "NUMBER", "_controller", "NUMBER", "rb", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "controllers", "m", "NUMBER", "_controller_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "if", "support", "change", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "if", "application", "controller", "change", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "Tasks", "watch", "r", "lib", "tasks", "NUMBER", "NUMBER", "rake", "m", "spec", "tasks", "m", "NUMBER", "_spec", "NUMBER", "rb", "Lib", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "Fabrication", "watch", "r", "spec", "fabricators", "NUMBER", "_fabricator", "NUMBER", "rb", "m", "Dir", "spec", "m", "NUMBER", "cell", "views", "watch", "r", "app", "cells", "NUMBER", "NUMBER", "NUMBER", "html", "NUMBER", "m", "spec", "cells", "m", "NUMBER", "_cell_spec", "NUMBER", "rb", "end", "end", "I", "can", "reproduce", "it", "and", "the", "reason", "why", "it", "fail", "be", "that", "the", "group", "be", "call", "all", "NUMBER", "If", "you", "change", "the", "group", "name", "to", "something", "different", "it", "works", "fine", "NUMBER", "Crazy", "shit", "can", "we", "catch", "this", "somehow", "Yes", "we", "can", "check", "the", "group", "name", "when", "evaluating", "the", "Guardfile", "NUMBER", "Exactly", "that", "s", "the", "most", "simple", "solution", "NUMBER", "Still", "seeing", "bug", "NUMBER", "on", "NUMBER", "I", "m", "assuming", "that", "it", "s", "a", "regression", "NUMBER", "Guardfile", "ruby", "ignore", "r", "site", "Run", "guard", "list", "Output", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Invalid", "Guardfile", "original", "error", "be", "undefined", "method", "ignore", "for", "nil", "NilClass", "Another", "example", "Guardfile", "that", "results", "in", "the", "same", "output", "ruby", "guard", "jekyll", "do", "ignore", "site", "end", "I", "ve", "recently", "do", "a", "gem", "update", "on", "my", "system", "and", "now", "I", "m", "unable", "to", "run", "guard", "NUMBER", "This", "be", "the", "error", "I", "m", "get", "You", "re", "run", "a", "version", "of", "ruby", "with", "no", "Readline", "support", "Please", "gem", "install", "rb", "readline", "or", "recompile", "ruby", "with", "readline", "NUMBER", "Now", "obviously", "I", "ve", "tried", "run", "gem", "install", "rb", "readline", "which", "looks", "like", "it", "has", "install", "correctly", "Successfully", "install", "rb", "readline", "NUMBER", "Parsing", "documentation", "for", "rb", "readline", "NUMBER", "Done", "installing", "documentation", "for", "rb", "readline", "after", "NUMBER", "seconds", "NUMBER", "gem", "install", "But", "I", "m", "still", "get", "the", "error", "message", "NUMBER", "This", "be", "what", "my", "Guardfile", "looks", "like", "Guardfile", "LINK", "readme", "guard", "compass", "configuration_file", "config", "NUMBER", "rb", "do", "watch", "r", "public_html", "mysite", "NUMBER", "NUMBER", "scss", "sass", "end", "guard", "livereload", "do", "watch", "r", "public_html", "mysite", "NUMBER", "NUMBER", "css", "js", "html", "php", "ss", "end", "Can", "anyone", "help", "Thank", "you", "bundle", "exec", "guard", "gives", "the", "same", "error", "as", "do", "bundle", "exec", "guard", "debug", "and", "guard", "debug", "rvm", "v", "outputs", "rvm", "NUMBER", "stable", "by", "Wayne", "E", "NUMBER", "Seguin", "wayneeseguin", "gmail", "NUMBER", "com", "Michal", "Papis", "mpapis", "gmail", "NUMBER", "com", "LINK", "ruby", "v", "outputs", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "i", "NUMBER", "linux", "I", "m", "run", "Debian", "NUMBER", "My", "Gemfile", "be", "below", "source", "LINK", "gem", "compass", "gem", "compass", "h", "NUMBER", "bp", "gem", "susy", "gem", "guard", "gem", "guard", "sass", "gem", "guard", "compass", "gem", "guard", "livereload", "gem", "rb", "fsevent", "gem", "json", "NUMBER", "I", "don", "t", "know", "if", "this", "be", "an", "issue", "or", "if", "I", "m", "be", "an", "idiot", "if", "the", "latter", "I", "apologize", "please", "tell", "me", "so", "and", "I", "ll", "open", "this", "ticket", "on", "StackOverflow", "NUMBER", "NUMBER", "I", "ve", "remove", "gem", "rb", "fsevent", "add", "gem", "rb", "readline", "and", "its", "now", "work", "NUMBER", "Thank", "you", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "bbb", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "dcd", "on", "v", "NUMBER", "notifiers", "refactoring", "into", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bfbfc", "NUMBER", "a", "NUMBER", "be", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "c", "on", "v", "NUMBER", "_refactorings", "NUMBER", "heart", "Awesome", "refactoring", "thanks", "rymai", "After", "having", "Listen", "I", "agree", "that", "Brief", "could", "be", "great", "NUMBER", "Tell", "be", "another", "possibility", "and", "it", "s", "a", "name", "too", "Oh", "and", "I", "m", "definitely", "for", "extracting", "Notifier", "before", "NUMBER", "Even", "if", "I", "m", "not", "a", "patriot", "tell", "be", "funny", "because", "it", "s", "relate", "to", "Switzerland", "like", "Swiss", "Guard", "NUMBER", "Good", "point", "I", "haven", "t", "even", "thinking", "about", "that", "Then", "we", "should", "go", "with", "Wilhelm", "and", "change", "the", "API", "to", "Wilhelm", "NUMBER", "tell", "I", "wonder", "what", "happened", "to", "the", "apple", "NUMBER", "Here", "some", "other", "serious", "ideas", "that", "be", "available", "on", "Rubygems", "notifer", "announce", "disclose", "advice", "and", "of", "course", "the", "already", "mention", "brief", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "cfde", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "e", "NUMBER", "caa", "NUMBER", "abbb", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "on", "v", "NUMBER", "notifiers", "refactoring", "into", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bfbfc", "NUMBER", "a", "NUMBER", "be", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "c", "on", "v", "NUMBER", "_refactorings", "NUMBER", "Hi", "cyx", "would", "it", "be", "possible", "to", "giving", "us", "the", "tell", "gem", "name", "so", "we", "could", "use", "it", "for", "Guard", "notifiers", "gem", "I", "see", "that", "the", "tell", "LINK", "gem", "hasn", "t", "be", "update", "use", "update", "a", "lot", "NUMBER", "Oh", "and", "btw", "we", "love", "openredis", "netzpirat", "Wilhelm", "Tell", "be", "the", "German", "version", "Guillaume", "Tell", "the", "french", "one", "NUMBER", "LINK", "_Tell", "NUMBER", "Tell", "would", "be", "better", "IMHO", "rymai", "ouch", "Of", "course", "it", "was", "a", "joke", "grin", "netzpirat", "ouch", "ouch", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "db", "NUMBER", "daa", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "dcdb", "NUMBER", "on", "v", "NUMBER", "notifiers", "refactoring", "into", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bfbfc", "NUMBER", "a", "NUMBER", "be", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "c", "on", "v", "NUMBER", "_refactorings", "NUMBER", "Thought", "I", "d", "give", "a", "shot", "at", "make", "multiple", "directories", "work", "NUMBER", "All", "you", "need", "to", "do", "be", "separate", "the", "directories", "you", "d", "like", "to", "watch", "with", "the", "space", "e", "NUMBER", "g", "NUMBER", "guard", "w", "path", "NUMBER", "path", "NUMBER", "NUMBER", "Note", "this", "patch", "still", "pass", "along", "all", "add", "modify", "and", "delete", "paths", "as", "relative", "paths", "so", "it", "isn", "t", "very", "easy", "to", "discern", "which", "watched", "folder", "the", "change", "came", "from", "NUMBER", "But", "we", "could", "get", "around", "that", "pretty", "easily", "by", "add", "other", "option", "to", "guard", "that", "also", "pass", "along", "the", "watched", "directory", "name", "e", "NUMBER", "g", "NUMBER", "path", "NUMBER", "dir", "change", "NUMBER", "txt", "instead", "of", "dir", "change", "NUMBER", "txt", "Please", "let", "me", "know", "if", "there", "be", "anything", "else", "I", "should", "be", "doing", "and", "or", "test", "for", "this", "PR", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "bb", "NUMBER", "dc", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "b", "on", "timmfin", "watch", "multiple", "directories", "into", "ada", "NUMBER", "c", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "ebb", "NUMBER", "c", "NUMBER", "b", "NUMBER", "abbe", "NUMBER", "f", "NUMBER", "on", "guard", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "bb", "NUMBER", "dc", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "b", "on", "timmfin", "watch", "multiple", "directories", "into", "ada", "NUMBER", "c", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "ebb", "NUMBER", "c", "NUMBER", "b", "NUMBER", "abbe", "NUMBER", "f", "NUMBER", "on", "guard", "master", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "fdbeca", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ad", "NUMBER", "b", "NUMBER", "c", "NUMBER", "on", "timmfin", "watch", "multiple", "directories", "into", "ada", "NUMBER", "c", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "ebb", "NUMBER", "c", "NUMBER", "b", "NUMBER", "abbe", "NUMBER", "f", "NUMBER", "on", "guard", "master", "NUMBER", "Hi", "thanks", "for", "this", "PR", "I", "don", "t", "understand", "the", "issue", "with", "relative_paths", "option", "if", "you", "remove", "it", "all", "paths", "should", "be", "absolute", "NUMBER", "Also", "Listen", "doesn", "t", "support", "this", "option", "with", "multiple", "directories", "and", "that", "options", "will", "be", "remove", "in", "Listen", "NUMBER", "so", "absolute", "paths", "be", "definitely", "the", "way", "to", "go", "I", "assumed", "that", "people", "would", "want", "compatibility", "with", "exist", "Guardfiles", "NUMBER", "More", "specifically", "if", "I", "didn", "t", "convert", "everything", "to", "a", "relative", "path", "all", "exist", "watches", "would", "immediately", "break", "as", "soon", "as", "you", "start", "watching", "a", "second", "directory", "since", "they", "were", "write", "to", "compare", "to", "a", "relative", "path", "not", "an", "absolute", "one", "NUMBER", "Ok", "you", "right", "relative", "paths", "here", "seems", "a", "good", "approach", "because", "each", "watched", "directories", "will", "very", "certainly", "have", "the", "same", "logic", "file", "structure", "NUMBER", "Ok", "for", "me", "guard", "core", "team", "ok", "too", "Sure", "thing", "fix", "made", "and", "rebased", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "NUMBER", "db", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "cdb", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "on", "timmfin", "watch", "multiple", "directories", "into", "NUMBER", "b", "NUMBER", "dbdea", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ca", "NUMBER", "af", "NUMBER", "f", "NUMBER", "on", "guard", "master", "NUMBER", "Fantastic", "For", "anyone", "else", "who", "s", "new", "to", "Bundler", "currently", "the", "command", "bundle", "exec", "guard", "be", "not", "in", "the", "Readme", "NUMBER", "Consider", "add", "this", "to", "Start", "section", "too", "NUMBER", "Ref", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "eddeb", "NUMBER", "d", "NUMBER", "d", "NUMBER", "on", "oli", "patch", "NUMBER", "into", "on", "guard", "master", "NUMBER", "thibaudgg", "wow", "fast", "_", "If", "you", "want", "a", "pull", "req", "to", "add", "a", "similar", "note", "to", "the", "Start", "LINK", "start", "section", "let", "me", "know", "NUMBER", "For", "example", "from", "this", "Just", "launch", "Guard", "inside", "your", "Ruby", "or", "Rails", "project", "with", "guard", "to", "this", "Just", "launch", "Guard", "inside", "your", "Ruby", "or", "Rails", "project", "with", "guard", "Or", "if", "you", "re", "use", "Bundle", "with", "bundle", "exec", "guard", "Also", "thanks", "for", "Guard", "NUMBER", "I", "have", "install", "the", "necessary", "gems", "as", "follows", "Desktop", "html", "NUMBER", "gem", "list", "bundle", "NUMBER", "bundler", "NUMBER", "coderay", "NUMBER", "em", "websocket", "NUMBER", "eventmachine", "NUMBER", "ffi", "NUMBER", "formatador", "NUMBER", "guard", "NUMBER", "guard", "livereload", "NUMBER", "guard", "sass", "NUMBER", "This", "be", "what", "my", "Guardfile", "looks", "like", "Desktop", "html", "NUMBER", "more", "Guardfile", "A", "sample", "Guardfile", "More", "info", "at", "LINK", "readme", "guard", "livereload", "do", "watch", "r", "NUMBER", "NUMBER", "css", "js", "html", "end", "This", "be", "what", "I", "get", "when", "I", "run", "bundle", "exec", "guard", "Desktop", "html", "NUMBER", "bundle", "exec", "guard", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "NotifySend", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "LiveReload", "be", "waiting", "for", "a", "browser", "to", "connect", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "home", "praveen", "Desktop", "html", "NUMBER", "NUMBER", "guard", "main", "To", "make", "sure", "the", "Guard", "server", "be", "run", "this", "be", "what", "i", "get", "when", "telneting", "Desktop", "html", "NUMBER", "telnet", "NUMBER", "NUMBER", "Trying", "NUMBER", "Connected", "to", "NUMBER", "Escape", "character", "be", "NUMBER", "When", "I", "make", "change", "to", "the", "index", "NUMBER", "html", "in", "the", "monitored", "directory", "this", "be", "what", "i", "get", "from", "guard", "NUMBER", "NUMBER", "NUMBER", "INFO", "Reloading", "browser", "index", "NUMBER", "html", "Unable", "to", "write", "to", "your", "history", "file", "history", "not", "saved", "NUMBER", "NUMBER", "NUMBER", "INFO", "Reloading", "browser", "index", "NUMBER", "html", "NUMBER", "guard", "main", "I", "have", "install", "the", "chrome", "live", "reload", "plugin", "and", "given", "it", "file", "reading", "permission", "but", "when", "I", "click", "it", "it", "doesn", "t", "change", "and", "thus", "do", "not", "reload", "the", "code", "change", "to", "any", "html", "or", "css", "in", "the", "home", "praveen", "Desktop", "html", "NUMBER", "pls", "let", "me", "know", "what", "can", "be", "do", "NUMBER", "Praveen", "The", "warning", "Unable", "to", "write", "to", "your", "history", "file", "history", "not", "saved", "comes", "from", "Pry", "and", "has", "nothing", "to", "do", "with", "LiveReload", "NUMBER", "You", "need", "to", "make", "the", "Guard", "interactor", "history", "NUMBER", "guard_history", "writeable", "NUMBER", "thanks", "folks", "do", "you", "have", "any", "recommendations", "on", "the", "Chrome", "extension", "to", "be", "use", "NUMBER", "it", "just", "doesnt", "seem", "to", "work", "NUMBER", "I", "be", "use", "the", "official", "one", "it", "be", "not", "be", "enable", "though", "NUMBER", "when", "I", "click", "it", "to", "enable", "it", "doesn", "t", "change", "but", "on", "saving", "the", "index", "NUMBER", "html", "in", "sublime", "text", "I", "get", "the", "below", "in", "the", "Guard", "prompt", "NUMBER", "guard", "main", "NUMBER", "NUMBER", "NUMBER", "INFO", "Browser", "connected", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Reloading", "browser", "index", "NUMBER", "html", "NUMBER", "guard", "main", "NUMBER", "NUMBER", "NUMBER", "INFO", "Browser", "connected", "NUMBER", "but", "the", "chrome", "do", "not", "refresh", "NUMBER", "any", "idea", "how", "to", "troubleshoot", "this", "NUMBER", "After", "Struggling", "for", "NUMBER", "days", "this", "be", "the", "method", "that", "I", "figured", "to", "work", "without", "hassle", "on", "Ubuntu", "NUMBER", "it", "has", "thus", "made", "my", "workflow", "seamless", "Install", "LiveReload", "from", "Through", "Python", "and", "CD", "to", "the", "directory", "that", "needs", "to", "be", "watched", "for", "change", "curl", "O", "LINK", "pip", "NUMBER", "py", "python", "pip", "install", "livereload", "sudo", "apt", "get", "install", "python", "pip", "pip", "install", "livereload", "cd", "FolderToBeMonitored", "Create", "a", "file", "call", "Guardfile", "with", "the", "following", "contents", "to", "monitor", "for", "all", "change", "to", "html", "and", "css", "file", "Desktop", "html", "NUMBER", "more", "Guardfile", "usr", "bin", "env", "python", "from", "livereload", "NUMBER", "task", "import", "Task", "Task", "NUMBER", "add", "NUMBER", "css", "Task", "NUMBER", "add", "NUMBER", "html", "Task", "NUMBER", "add", "css", "NUMBER", "css", "praveen", "praveen", "XPS", "L", "NUMBER", "Z", "Desktop", "html", "NUMBER", "Once", "the", "above", "be", "do", "start", "the", "LiveReload", "with", "the", "below", "command", "livereload", "b", "Please", "note", "that", "liveReload", "uses", "NUMBER", "as", "the", "default", "port", "but", "if", "it", "needs", "to", "be", "change", "TO", "NUMBER", "use", "livereload", "p", "NUMBER", "b", "The", "default", "html", "file", "will", "launch", "automatically", "in", "the", "default", "browser", "no", "need", "to", "install", "any", "buggy", "chrome", "extensions", "NUMBER", "to", "launch", "a", "particular", "file", "use", "appropriate", "URL", "of", "the", "below", "format", "LINK", "I", "prefer", "this", "way", "the", "Ruby", "gem", "installation", "followed", "by", "the", "chrome", "extension", "that", "needs", "to", "connect", "to", "the", "port", "method", "I", "spent", "NUMBER", "days", "on", "this", "issue", "and", "it", "never", "worked", "until", "figuring", "out", "the", "above", "methodology", "that", "works", "without", "any", "chrome", "plugins", "NUMBER", "I", "have", "a", "basic", "guard", "install", "with", "rspec", "NUMBER", "I", "be", "use", "the", "Guardfile", "generate", "by", "guard", "NUMBER", "After", "I", "start", "guard", "it", "pauses", "for", "NUMBER", "seconds", "and", "drops", "to", "the", "guard", "main", "prompt", "NUMBER", "I", "have", "tried", "change", "and", "saving", "file", "from", "spec", "foo", "bar_spec", "NUMBER", "rb", "as", "well", "as", "rails", "controllers", "but", "nothing", "gets", "triggered", "in", "guard", "NUMBER", "I", "have", "checked", "that", "Guard", "NUMBER", "listener", "NUMBER", "adapter", "do", "return", "an", "object", "NUMBER", "The", "class", "be", "Listen", "Adapters", "Linux", "This", "be", "the", "output", "of", "guard", "bundle", "exec", "guard", "d", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "which", "notify", "send", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "emacsclient", "eval", "NUMBER", "NUMBER", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Guard", "starts", "all", "plugins", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "RSpec", "be", "run", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "vagrant", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "guard", "main", "Guardfile", "A", "sample", "Guardfile", "More", "info", "at", "LINK", "readme", "guard", "rspec", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "Rails", "example", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "erb", "NUMBER", "haml", "m", "spec", "m", "NUMBER", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "controllers", "NUMBER", "_", "controller", "NUMBER", "rb", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "m", "NUMBER", "s", "m", "NUMBER", "_", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "Capybara", "features", "specs", "watch", "r", "app", "views", "NUMBER", "NUMBER", "NUMBER", "erb", "haml", "m", "spec", "features", "m", "NUMBER", "_spec", "NUMBER", "rb", "Turnip", "features", "and", "steps", "watch", "r", "spec", "acceptance", "NUMBER", "NUMBER", "feature", "watch", "r", "spec", "acceptance", "steps", "NUMBER", "_steps", "NUMBER", "rb", "m", "Dir", "File", "NUMBER", "join", "m", "NUMBER", "NUMBER", "feature", "NUMBER", "spec", "acceptance", "end", "Gemfile", "source", "LINK", "gem", "rails", "NUMBER", "gem", "pg", "gem", "activerecord", "postgres", "hstore", "gem", "ffi", "Gems", "use", "only", "for", "assets", "and", "not", "required", "in", "production", "environments", "by", "default", "NUMBER", "group", "assets", "do", "gem", "sass", "rails", "gem", "compass", "rails", "gem", "coffee", "rails", "gem", "uglifier", "gem", "modernizr", "rails", "end", "gem", "rails", "backbone", "gem", "jquery", "rails", "gem", "unicorn", "gem", "haml", "rails", "gem", "mustache", "gem", "mustache", "trimmer", "git", "LINK", "trimmer", "NUMBER", "git", "gem", "copycat", "git", "git", "github", "NUMBER", "com", "Vermonster", "copycat", "NUMBER", "git", "gem", "rinku", "require", "rails_rinku", "gem", "nokogiri", "gem", "draper", "gem", "gon", "gem", "settingslogic", "gem", "wicked", "gem", "paperclip", "NUMBER", "gem", "simple_form", "gem", "nested_form", "gem", "will_paginate", "NUMBER", "gem", "bootstrap", "will_paginate", "gem", "bootstrap", "sass", "NUMBER", "gem", "font", "awesome", "rails", "gem", "active_utils", "git", "git", "github", "NUMBER", "com", "jeffutter", "active_utils", "NUMBER", "git", "branch", "configure_ssl_version", "gem", "activemerchant", "git", "git", "github", "NUMBER", "com", "jeffutter", "active_merchant", "NUMBER", "git", "branch", "force_ssl_on_money_movers_gateway", "gem", "devise", "gem", "cancan", "gem", "activevalidators", "gem", "date_validator", "git", "git", "github", "NUMBER", "com", "joealba", "date_validator", "NUMBER", "git", "gem", "awesome_nested_set", "gem", "the_sortable_tree", "NUMBER", "gem", "recursive", "open", "struct", "gem", "airbrake", "group", "test", "development", "do", "gem", "rspec", "rails", "gem", "launchy", "gem", "spring", "github", "jonleighton", "spring", "end", "group", "development", "do", "gem", "quiet_assets", "gem", "annotate", "git", "git", "github", "NUMBER", "com", "ctran", "annotate_models", "NUMBER", "git", "gem", "pry", "gem", "rails", "erd", "gem", "rdoc", "gem", "rack", "mini", "profiler", "gem", "meta_request", "NUMBER", "gem", "better_errors", "gem", "binding_of_caller", "gem", "railroady", "gem", "guard", "livereload", "gem", "capistrano", "gem", "capistrano", "unicorn", "git", "git", "github", "NUMBER", "com", "sosedoff", "capistrano", "unicorn", "NUMBER", "git", "gem", "capistrano", "rbenv", "platforms", "ruby", "do", "gem", "libnotify", "gem", "rb", "inotify", "end", "end", "group", "test", "do", "Pretty", "printed", "test", "output", "gem", "turn", "require", "false", "gem", "faker", "gem", "factory_girl_rails", "gem", "capybara", "gem", "guard", "rspec", "gem", "rb", "readline", "end", "I", "have", "also", "tried", "with", "interactor", "off", "with", "no", "difference", "NUMBER", "Any", "ideas", "The", "above", "setup", "be", "run", "in", "Vagrant", "NUMBER", "It", "seems", "as", "though", "if", "I", "run", "it", "directly", "on", "my", "box", "It", "works", "fine", "NUMBER", "now", "to", "figure", "out", "what", "be", "different", "about", "the", "environments", "Found", "my", "problem", "NUMBER", "Mentioned", "in", "issue", "guard", "listen", "NUMBER", "and", "guard", "listen", "NUMBER", "Closing", "this", "issue", "Using", "guard", "jasmine", "with", "the", "PlayerSpec", "that", "s", "find", "all", "over", "the", "the", "internet", "sh", "c", "line", "NUMBER", "syntax", "error", "near", "unexpect", "token", "sh", "c", "line", "NUMBER", "notify", "send", "Jasmine", "spec", "fail", "should", "be", "able", "to", "play", "a", "Song", "ReferenceError", "Can", "t", "find", "variable", "Player", "in", "LINK", "line", "NUMBER", "TypeError", "undefined", "be", "not", "an", "object", "evaluating", "player", "NUMBER", "play", "in", "LINK", "line", "NUMBER", "ReferenceError", "Can", "t", "find", "variable", "in", "LINK", "line", "NUMBER", "t", "NUMBER", "h", "int", "transient", "NUMBER", "i", "home", "arthur", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "survey_element_test", "gems", "guard", "NUMBER", "images", "fail", "NUMBER", "png", "u", "normal", "sh", "c", "line", "NUMBER", "syntax", "error", "near", "unexpect", "token", "sh", "c", "line", "NUMBER", "notify", "send", "Jasmine", "spec", "fail", "tells", "the", "current", "song", "if", "the", "user", "has", "made", "it", "a", "favorite", "ReferenceError", "Can", "t", "find", "variable", "Player", "in", "LINK", "line", "NUMBER", "spyOn", "could", "not", "find", "an", "object", "to", "spy", "upon", "for", "persistFavoriteStatus", "ReferenceError", "Can", "t", "find", "variable", "in", "LINK", "line", "NUMBER", "t", "NUMBER", "h", "int", "transient", "NUMBER", "i", "home", "arthur", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "survey_element_test", "gems", "guard", "NUMBER", "images", "fail", "NUMBER", "png", "u", "normal", "sh", "c", "line", "NUMBER", "syntax", "error", "near", "unexpect", "token", "sh", "c", "line", "NUMBER", "notify", "send", "Jasmine", "spec", "fail", "should", "indicate", "that", "the", "song", "be", "currently", "paused", "ReferenceError", "Can", "t", "find", "variable", "Player", "in", "LINK", "line", "NUMBER", "TypeError", "undefined", "be", "not", "an", "object", "evaluating", "player", "NUMBER", "play", "in", "LINK", "line", "NUMBER", "TypeError", "undefined", "be", "not", "an", "object", "evaluating", "player", "NUMBER", "isPlaying", "in", "LINK", "line", "NUMBER", "ReferenceError", "Can", "t", "find", "variable", "in", "LINK", "line", "NUMBER", "t", "NUMBER", "h", "int", "transient", "NUMBER", "i", "home", "arthur", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "survey_element_test", "gems", "guard", "NUMBER", "images", "fail", "NUMBER", "png", "u", "normal", "He", "s", "just", "use", "Guard", "Jasmine", "as", "an", "example", "but", "the", "error", "be", "with", "the", "Guard", "notifier", "here", "LINK", "L", "NUMBER", "I", "ll", "take", "care", "of", "it", "NUMBER", "Wow", "Just", "wanted", "to", "make", "that", "clear", "NUMBER", "Thanks", "Hi", "this", "be", "my", "gemfile", "LINK", "And", "here", "be", "the", "resulting", "Gemfile", "NUMBER", "lock", "LINK", "Ad", "you", "can", "see", "for", "example", "Padrino", "be", "rather", "old", "NUMBER", "If", "I", "remove", "all", "guard", "relate", "gems", "and", "update", "the", "bundle", "I", "have", "the", "latest", "padrino", "as", "you", "can", "see", "from", "the", "update", "Gemfile", "NUMBER", "lock", "LINK", "Are", "you", "guys", "aware", "of", "this", "and", "how", "can", "I", "fix", "it", "I", "don", "t", "think", "this", "be", "cause", "by", "Guard", "NUMBER", "Have", "you", "tried", "run", "bundle", "update", "without", "remove", "guard", "relate", "gems", "Yes", "I", "absolutely", "did", "and", "I", "think", "it", "s", "very", "weird", "too", "NUMBER", "vagrant", "precise", "NUMBER", "vagrant", "hentan", "bundle", "update", "Fetching", "gem", "metadata", "from", "LINK", "Fetching", "gem", "metadata", "from", "LINK", "Resolving", "dependencies", "NUMBER", "Using", "rake", "NUMBER", "Using", "i", "NUMBER", "n", "NUMBER", "Using", "multi_json", "NUMBER", "Using", "activesupport", "NUMBER", "Using", "addressable", "NUMBER", "Using", "bcrypt", "ruby", "NUMBER", "Using", "builder", "NUMBER", "Using", "bundler", "NUMBER", "Using", "mime", "types", "NUMBER", "Using", "nokogiri", "NUMBER", "Using", "rack", "NUMBER", "Using", "rack", "test", "NUMBER", "Using", "xpath", "NUMBER", "Using", "capybara", "NUMBER", "Using", "coderay", "NUMBER", "Using", "diff", "lcs", "NUMBER", "Using", "gherkin", "NUMBER", "Using", "cucumber", "NUMBER", "Using", "data_objects", "NUMBER", "Using", "database_cleaner", "NUMBER", "Using", "dm", "core", "NUMBER", "Using", "dm", "aggregates", "NUMBER", "Using", "dm", "constraints", "NUMBER", "Using", "dm", "do", "adapter", "NUMBER", "Using", "dm", "migrations", "NUMBER", "Using", "do_postgres", "NUMBER", "Using", "dm", "postgres", "adapter", "NUMBER", "Using", "dm", "timestamps", "NUMBER", "Using", "dm", "transactions", "NUMBER", "Using", "fastercsv", "NUMBER", "Using", "json", "NUMBER", "Using", "stringex", "NUMBER", "Using", "uuidtools", "NUMBER", "Using", "dm", "types", "NUMBER", "Using", "dm", "validations", "NUMBER", "Using", "ffi", "NUMBER", "Using", "formatador", "NUMBER", "Using", "posix", "spawn", "NUMBER", "Using", "grit", "NUMBER", "Using", "rb", "fsevent", "NUMBER", "Using", "rb", "inotify", "NUMBER", "Using", "rb", "kqueue", "NUMBER", "Using", "listen", "NUMBER", "Using", "lumberjack", "NUMBER", "Using", "method_source", "NUMBER", "Using", "slop", "NUMBER", "Using", "pry", "NUMBER", "Using", "thor", "NUMBER", "Using", "guard", "NUMBER", "Using", "guard", "cucumber", "NUMBER", "Using", "rspec", "core", "NUMBER", "Using", "rspec", "expectations", "NUMBER", "Using", "rspec", "mocks", "NUMBER", "Using", "rspec", "NUMBER", "Using", "guard", "rspec", "NUMBER", "Using", "tilt", "NUMBER", "Using", "haml", "NUMBER", "Using", "url_mount", "NUMBER", "Using", "http_router", "NUMBER", "Using", "polyglot", "NUMBER", "Using", "treetop", "NUMBER", "Using", "mail", "NUMBER", "Using", "oj", "NUMBER", "Using", "sinatra", "NUMBER", "Using", "padrino", "core", "NUMBER", "Using", "padrino", "helpers", "NUMBER", "Using", "padrino", "admin", "NUMBER", "Using", "padrino", "cache", "NUMBER", "Using", "padrino", "gen", "NUMBER", "Using", "padrino", "mailer", "NUMBER", "Using", "padrino", "NUMBER", "Using", "puma", "NUMBER", "Using", "rabl", "NUMBER", "Your", "bundle", "be", "update", "As", "you", "can", "see", "it", "downgrades", "padrino", "NUMBER", "If", "you", "bundle", "install", "my", "Gemfile", "what", "version", "of", "padrino", "you", "get", "I", "also", "tried", "to", "remove", "the", "Gemfile", "NUMBER", "lock", "just", "to", "be", "sure", "NUMBER", "I", "can", "confirm", "this", "but", "I", "also", "do", "not", "understand", "the", "reason", "NUMBER", "I", "tried", "to", "force", "the", "latest", "padrino", "version", "gem", "padrino", "NUMBER", "but", "it", "results", "in", "the", "following", "error", "bundle", "NUMBER", "p", "NUMBER", "Fetching", "gem", "metadata", "from", "LINK", "Fetching", "gem", "metadata", "from", "LINK", "Resolving", "dependencies", "NUMBER", "Bundler", "could", "not", "find", "compatible", "version", "for", "gem", "thor", "In", "Gemfile", "padrino", "NUMBER", "ruby", "depends", "on", "thor", "NUMBER", "ruby", "guard", "NUMBER", "ruby", "depends", "on", "thor", "NUMBER", "But", "this", "be", "not", "true", "Guard", "depends", "on", "Thor", "NUMBER", "LINK", "L", "NUMBER", "NUMBER", "I", "have", "absolutely", "no", "idea", "it", "might", "be", "a", "Bundler", "issue", "NUMBER", "I", "confirm", "too", "but", "I", "also", "get", "a", "strange", "output", "when", "run", "bundle", "update", "NUMBER", "NUMBER", "NUMBER", "bu", "Fetching", "gem", "metadata", "from", "LINK", "Fetching", "gem", "metadata", "from", "LINK", "Resolving", "dependencies", "NUMBER", "Bundler", "could", "not", "find", "compatible", "version", "for", "gem", "tilt", "In", "Gemfile", "padrino", "NUMBER", "ruby", "depends", "on", "tilt", "NUMBER", "ruby", "padrino", "NUMBER", "ruby", "depends", "on", "tilt", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "f", "NUMBER", "ccd", "NUMBER", "f", "NUMBER", "db", "NUMBER", "eea", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "de", "NUMBER", "bcda", "NUMBER", "on", "aspiers", "master", "into", "on", "guard", "master", "NUMBER", "Points", "to", "LINK", "proper", "Readline", "support", "to", "Ruby", "on", "Mac", "OS", "X", "Should", "point", "to", "LINK", "Readline", "support", "to", "Ruby", "on", "Mac", "OS", "X", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "d", "NUMBER", "fb", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "f", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "on", "theroux", "master", "into", "on", "guard", "master", "NUMBER", "Filesystem", "adapters", "be", "now", "handle", "by", "the", "Listen", "gem", "NUMBER", "Therefore", "I", "propose", "to", "delete", "this", "entire", "section", "since", "this", "be", "all", "handle", "transparently", "NUMBER", "I", "have", "created", "a", "Wiki", "page", "and", "moved", "the", "content", "there", "NUMBER", "LINK", "Filesystem", "Handling", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "df", "NUMBER", "c", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "aeabca", "NUMBER", "bb", "on", "tilsammans", "patch", "NUMBER", "into", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ebf", "NUMBER", "d", "NUMBER", "bda", "NUMBER", "on", "guard", "master", "NUMBER", "Great", "Thanks", "a", "lot", "NUMBER", "Wow", "That", "was", "quick", "My", "pleasure", "NUMBER", "The", "introduction", "of", "Listen", "certainly", "was", "an", "improvement", "NUMBER", "If", "this", "pull", "request", "seems", "overkill", "to", "you", "please", "read", "my", "previous", "comment", "LINK", "issuecomment", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "c", "NUMBER", "dd", "NUMBER", "fcea", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "a", "NUMBER", "on", "aspiers", "master", "into", "b", "NUMBER", "fcb", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "ed", "NUMBER", "d", "NUMBER", "on", "guard", "master", "NUMBER", "Nice", "list", "NUMBER", "Is", "it", "really", "a", "good", "idea", "to", "returns", "a", "single", "Plugin", "Group", "if", "there", "s", "only", "one", "matching", "with", "Guard", "NUMBER", "plugins", "Guard", "NUMBER", "group", "The", "most", "logical", "for", "me", "would", "be", "to", "always", "returns", "an", "array", "NUMBER", "The", "rest", "be", "great", "thanks", "rymai", "Very", "very", "nice", "Thanks", "a", "lot", "NUMBER", "rymai", "Great", "thanks", "Perfect", "Looks", "super", "nice", "to", "me", "very", "good", "job", "rymai", "Can", "you", "rebase", "on", "v", "NUMBER", "branch", "so", "it", "should", "be", "test", "on", "Travis", "CI", "NUMBER", "Thanks", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "da", "NUMBER", "f", "NUMBER", "ffbdb", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "bbadbe", "NUMBER", "e", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Thanks", "we", "ll", "wait", "other", "guard", "core", "team", "feedback", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "f", "NUMBER", "aef", "NUMBER", "b", "NUMBER", "bd", "NUMBER", "dffe", "NUMBER", "b", "NUMBER", "c", "NUMBER", "df", "NUMBER", "f", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Wow", "NUMBER", "Awesome", "work", "NUMBER", "That", "will", "increase", "the", "code", "climate", "score", "definitely", "NUMBER", "Thanks", "a", "lot", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "c", "NUMBER", "c", "NUMBER", "ee", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "fd", "NUMBER", "c", "NUMBER", "c", "NUMBER", "acdeb", "NUMBER", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "a", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "baf", "NUMBER", "f", "NUMBER", "f", "NUMBER", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "baf", "NUMBER", "f", "NUMBER", "f", "NUMBER", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "I", "have", "be", "thinking", "about", "this", "a", "fair", "bit", "and", "architecturally", "I", "see", "a", "few", "significant", "problem", "with", "Guard", "that", "be", "very", "tricky", "to", "address", "NUMBER", "My", "current", "dilema", "I", "have", "a", "test", "suite", "that", "takes", "NUMBER", "minutes", "to", "run", "when", "I", "save", "a", "spec", "I", "would", "like", "to", "interrupt", "the", "suite", "run", "the", "spec", "and", "then", "continue", "with", "the", "rest", "of", "the", "test", "NUMBER", "However", "NUMBER", "NUMBER", "There", "be", "no", "provision", "to", "deliver", "events", "to", "an", "already", "run", "task", "NUMBER", "NUMBER", "There", "be", "no", "way", "to", "return", "async", "status", "and", "eventual", "status", "NUMBER", "There", "be", "not", "provision", "in", "guard", "to", "deliver", "the", "actual", "name", "of", "the", "file", "touched", "coupled", "with", "the", "test", "which", "helps", "me", "decide", "on", "what", "to", "do", "Now", "I", "be", "not", "sure", "if", "you", "could", "easily", "write", "a", "simplistic", "tmux", "clone", "in", "Ruby", "or", "simply", "use", "the", "tmux", "ruby", "gem", "to", "split", "the", "outputs", "of", "async", "tasks", "NUMBER", "this", "be", "all", "super", "mighty", "ambitious", "NUMBER", "be", "clearly", "in", "scope", "for", "NUMBER", "api", "but", "I", "be", "concerned", "I", "will", "still", "not", "get", "exactly", "what", "I", "want", "unless", "there", "be", "a", "way", "of", "splitting", "the", "output", "NUMBER", "pry", "control", "in", "one", "tmux", "pane", "output", "in", "another", "Don", "t", "know", "what", "you", "think", "about", "all", "of", "this", "raising", "so", "you", "can", "have", "a", "think", "Having", "each", "guard", "group", "run", "in", "there", "own", "thread", "would", "allow", "us", "to", "interact", "with", "them", "and", "run", "them", "concurrently", "NUMBER", "It", "could", "be", "very", "Interesting", "NUMBER", "Also", "use", "Celluloid", "for", "doing", "that", "would", "be", "great", "thibaudgg", "fyi", "I", "write", "an", "an", "async", "runner", "for", "Discourse", "now", "LINK", "will", "blog", "about", "it", "use", "the", "notify", "gem", "but", "read", "through", "the", "source", "it", "gets", "involved", "and", "multithreaded", "NUMBER", "really", "wish", "I", "could", "just", "sit", "on", "guard", "there", "NUMBER", "guard", "core", "team", "what", "do", "you", "think", "of", "SamSaffron", "use", "case", "The", "use", "case", "be", "great", "and", "we", "discussed", "very", "similar", "things", "already", "but", "no", "one", "had", "time", "to", "implement", "it", "SamSaffron", "do", "you", "want", "to", "handle", "it", "thibaudgg", "I", "have", "be", "thinking", "about", "this", "I", "think", "the", "biggest", "issue", "here", "be", "nailing", "the", "API", "NUMBER", "was", "thinking", "something", "along", "these", "lines", "ruby", "def", "run_on_changes", "paths", "original_paths", "finish_callback", "for", "async", "async", "end", "def", "status", "run", "idle", "end", "somewhere", "else", "when", "do", "finish_callback", "NUMBER", "call", "result", "thibaudgg", "I", "think", "that", "would", "work", "fine", "you", "would", "not", "need", "to", "send", "a", "callback", "in", "one", "change", "though", "be", "that", "you", "would", "probably", "need", "to", "track", "who", "you", "be", "NUMBER", "so", "def", "run_on_changes", "paths", "original_paths", "id", "for", "async", "async", "end", "then", "on", "complete", "Guard", "NUMBER", "publish", "id", "complete", "results", "I", "think", "a", "per", "run", "id", "be", "the", "right", "thing", "to", "do", "that", "way", "when", "you", "handle", "the", "message", "you", "can", "validate", "that", "you", "be", "get", "what", "you", "expect", "and", "not", "some", "bogus", "message", "from", "a", "previous", "run", "NUMBER", "nice", "sounds", "like", "a", "plan", "On", "Mon", "May", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "TAG", "write", "Ok", "sounds", "good", "NUMBER", "Let", "me", "finish", "the", "Listen", "rewrite", "count", "maybe", "NUMBER", "NUMBER", "weeks", "and", "I", "ll", "start", "the", "Celluloid", "transition", "for", "Guard", "NUMBER", "guard", "core", "team", "what", "do", "you", "think", "of", "use", "Celluloid", "for", "Guard", "NUMBER", "I", "m", "quite", "happy", "with", "if", "for", "Listen", "no", "commit", "publish", "yet", "sadly", "NUMBER", "big", "big", "rewrite", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "bec", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "a", "NUMBER", "be", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ecdde", "NUMBER", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "a", "NUMBER", "fdcb", "NUMBER", "fa", "NUMBER", "ebcc", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "cd", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ec", "NUMBER", "eaedcb", "NUMBER", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "fdbb", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "decreased", "NUMBER", "when", "pulling", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "bfbfc", "NUMBER", "a", "NUMBER", "be", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "c", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "b", "NUMBER", "ccc", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "beb", "NUMBER", "ce", "NUMBER", "cfcc", "NUMBER", "dad", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Coverage", "remained", "the", "same", "when", "pulling", "NUMBER", "d", "NUMBER", "acd", "NUMBER", "e", "NUMBER", "be", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "b", "NUMBER", "e", "on", "v", "NUMBER", "_refactorings", "into", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "on", "v", "NUMBER", "NUMBER", "So", "I", "have", "ruby", "guard", "rspec", "cli", "f", "d", "spec_paths", "spec_paths", "do", "NUMBER", "watch", "config", "routes", "NUMBER", "rb", "spec", "NUMBER", "end", "in", "my", "Guardfile", "NUMBER", "Now", "when", "I", "change", "routes", "NUMBER", "rb", "no", "specs", "be", "run", "NUMBER", "Starting", "guard", "w", "d", "tells", "me", "that", "guard", "registers", "the", "change", "but", "I", "can", "t", "figure", "out", "more", "of", "the", "output", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Stop", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "gfmt", "NUMBER", "cflag", "NUMBER", "b", "NUMBER", "iflag", "NUMBER", "b", "NUMBER", "lflag", "NUMBER", "cf", "oflag", "NUMBER", "discard", "f", "dsusp", "NUMBER", "eof", "NUMBER", "eol", "ff", "eol", "NUMBER", "ff", "erase", "NUMBER", "f", "intr", "NUMBER", "kill", "NUMBER", "lnext", "NUMBER", "min", "NUMBER", "quit", "NUMBER", "c", "reprint", "NUMBER", "start", "NUMBER", "status", "NUMBER", "stop", "NUMBER", "susp", "NUMBER", "a", "time", "NUMBER", "werase", "NUMBER", "ispeed", "NUMBER", "ospeed", "NUMBER", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "Any", "idea", "on", "how", "to", "debug", "this", "further", "A", "Guardfile", "be", "a", "normal", "Ruby", "file", "that", "can", "be", "debugged", "NUMBER", "You", "can", "any", "of", "the", "available", "debugger", "gems", "available", "NUMBER", "A", "more", "minimalistic", "approach", "be", "to", "simply", "use", "puts", "to", "output", "debug", "message", "like", "Ruby", "guard", "rspec", "cli", "f", "d", "spec_paths", "spec_paths", "do", "watch", "config", "routes", "NUMBER", "rb", "do", "puts", "Routes", "have", "be", "modify", "spec", "end", "end", "This", "comes", "in", "handy", "when", "you", "have", "match", "group", "in", "your", "regex", "Ruby", "guard", "cucumber", "do", "watch", "r", "features", "step_definitions", "NUMBER", "_steps", "NUMBER", "rb", "do", "m", "puts", "Matching", "m", "NUMBER", "inspect", "Dir", "File", "NUMBER", "join", "m", "NUMBER", "NUMBER", "feature", "NUMBER", "features", "end", "end", "In", "your", "case", "I", "think", "you", "need", "to", "return", "spec_paths", "to", "run", "all", "specs", "Ruby", "guard", "rspec", "cli", "f", "d", "spec_paths", "spec_paths", "do", "NUMBER", "watch", "config", "routes", "NUMBER", "rb", "spec_paths", "NUMBER", "end", "I", "have", "use", "the", "following", "method", "to", "check", "if", "the", "watch", "gets", "triggered", "ruby", "requires", "a", "block", "def", "debug_watch", "regex", "action", "watch", "regex", "do", "match", "puts", "Watcher", "regex", "NUMBER", "inspect", "triggered", "NUMBER", "action", "NUMBER", "call", "match", "NUMBER", "tap", "do", "result", "puts", "result", "result", "NUMBER", "inspect", "end", "end", "end", "Since", "it", "didn", "t", "output", "anything", "I", "assume", "the", "problem", "lies", "with", "matching", "the", "watch", "to", "the", "change", "file", "NUMBER", "Anyhow", "I", "keep", "you", "posted", "NUMBER", "Thanks", "for", "the", "input", "Allright", "I", "just", "figured", "out", "that", "run_on_changes", "isn", "t", "even", "triggered", "for", "the", "file", "except", "for", "a", "file", "in", "my", "IDE", "folder", "NUMBER", "Strange", "thing", "since", "I", "have", "not", "set", "a", "specific", "watchdir", "Guard", "NUMBER", "options", "clear", "false", "notify", "true", "debug", "false", "group", "specs", "plugin", "no_vendor", "false", "watch_all_modifications", "false", "no_interactions", "false", "no_bundler_warning", "false", "show_deprecations", "false", "force_polling", "false", "It", "also", "can", "t", "be", "an", "IDE", "problem", "since", "the", "method", "be", "also", "not", "triggered", "if", "I", "do", "a", "direct", "touch", "config", "routes", "NUMBER", "rb", "NUMBER", "ok", "digging", "a", "bit", "deeper", "the", "routes", "NUMBER", "rb", "file", "wasn", "t", "even", "in", "the", "Listener", "s", "directory_record", "paths", "but", "therefore", "in", "the", "directory_record", "NUMBER", "ignoring_patterns", "Thing", "be", "the", "only", "place", "I", "ignore", "this", "file", "be", "in", "a", "different", "guard", "NUMBER", "Is", "ignore", "not", "scoped", "by", "guard", "Commenting", "out", "the", "ignore", "in", "the", "other", "guard", "works", "as", "a", "tmp", "NUMBER", "solution", "NUMBER", "Alright", "then", "can", "you", "or", "I", "later", "add", "this", "information", "to", "the", "Readme", "as", "it", "be", "quite", "vital", "Or", "be", "it", "stated", "somewhere", "else", "and", "I", "just", "read", "over", "it", "Yeah", "I", "see", "now", "that", "the", "methods", "that", "be", "scoped", "like", "callback", "and", "watch", "be", "scoped", "in", "the", "examples", "NUMBER", "I", "feel", "that", "it", "be", "a", "bit", "implicit", "but", "as", "long", "as", "nobody", "else", "stumbles", "across", "this", "it", "might", "be", "only", "my", "perception", "We", "have", "a", "lot", "of", "information", "in", "the", "README", "but", "having", "all", "within", "a", "single", "document", "makes", "it", "hard", "to", "find", "NUMBER", "We", "also", "have", "a", "wonderful", "logo", "to", "put", "on", "the", "website", "and", "thibaudgg", "has", "reserved", "the", "domain", "since", "over", "a", "year", "NUMBER", "So", "let", "s", "create", "a", "simple", "site", "with", "what", "we", "have", "now", "NUMBER", "I", "suggest", "to", "take", "a", "static", "site", "generator", "use", "a", "responsive", "framework", "like", "Zurb", "Foundation", "and", "move", "the", "README", "contents", "there", "NUMBER", "Foundation", "has", "some", "template", "to", "get", "easy", "start", "LINK", "What", "about", "LINK", "I", "think", "it", "could", "still", "be", "a", "good", "fit", "and", "I", "like", "the", "sync", "with", "our", "README", "NUMBER", "Her", "gem", "use", "it", "LINK", "That", "looks", "great", "NUMBER", "I", "have", "some", "time", "to", "spend", "on", "Guard", "next", "week", "so", "I", "l", "give", "it", "a", "try", "NUMBER", "Great", "thanks", "I", "m", "fighting", "with", "Listen", "Windows", "jruby", "on", "my", "side", "I", "notice", "the", "recent", "activity", "on", "the", "Listen", "repo", "it", "s", "great", "and", "provides", "much", "groundwork", "for", "many", "popular", "Ruby", "gems", "NUMBER", "Thanks", "a", "lot", "for", "that", "However", "it", "makes", "me", "a", "sad", "to", "see", "you", "on", "a", "Mac", "solving", "Windows", "issue", "and", "also", "Maher", "on", "Ubuntu", "write", "WDM", "to", "solve", "the", "bad", "file", "watcher", "problematic", "on", "Windows", "NUMBER", "Where", "be", "the", "Windows", "guys", "to", "help", "solve", "the", "problem", "on", "their", "own", "environment", "That", "s", "a", "really", "good", "question", "I", "played", "a", "bit", "with", "DocumentUp", "and", "its", "configuration", "values", "and", "you", "can", "see", "the", "latest", "docs", "at", "LINK", "DocumentUp", "allows", "you", "to", "set", "some", "minimal", "configuration", "options", "and", "you", "can", "even", "change", "the", "configuration", "as", "parameter", "on", "the", "hosted", "site", "e", "NUMBER", "g", "New", "theme", "LINK", "name", "Guard", "travis", "true", "twitter", "mahersalam", "netzpirat", "rymai", "thibaudgg", "Old", "theme", "LINK", "name", "Guard", "theme", "v", "NUMBER", "travis", "true", "twitter", "mahersalam", "netzpirat", "rymai", "thibaudgg", "Be", "aware", "that", "a", "wrong", "config", "object", "brings", "the", "server", "down", "but", "they", "seem", "to", "have", "a", "watchdog", "that", "brings", "it", "up", "again", "after", "some", "time", "p", "The", "generate", "site", "be", "nice", "but", "the", "new", "theme", "doesn", "t", "add", "much", "value", "over", "the", "current", "README", "NUMBER", "I", "like", "the", "old", "theme", "better", "because", "it", "gives", "you", "the", "benefit", "of", "a", "fix", "menu", "for", "quick", "navigation", "NUMBER", "Basically", "we", "just", "need", "to", "add", "a", "simple", "config", "file", "enable", "the", "service", "hook", "and", "we", "re", "fine", "but", "a", "custom", "domain", "be", "not", "possible", "until", "they", "provide", "subdomains", "instead", "a", "path", "to", "access", "the", "documentation", "NUMBER", "Still", "it", "gives", "some", "value", "for", "a", "minimal", "effort", "NUMBER", "I", "also", "played", "a", "bit", "with", "the", "Guard", "GitHub", "wiki", "LINK", "and", "add", "a", "sidebar", "and", "a", "footer", "NUMBER", "Sure", "it", "s", "definitely", "less", "styled", "than", "the", "DocumentUp", "site", "but", "be", "more", "flexible", "and", "it", "s", "very", "easy", "for", "people", "to", "contribute", "NUMBER", "We", "also", "can", "set", "a", "header", "footer", "and", "sidebar", "per", "subfolder", "which", "gives", "us", "additional", "flexibility", "in", "structuring", "the", "documents", "NUMBER", "Thoughts", "Great", "I", "ll", "setup", "GH", "pages", "for", "DocumentUp", "and", "move", "some", "information", "to", "the", "wiki", "NUMBER", "What", "was", "the", "domain", "name", "you", "reserved", "Can", "you", "setup", "the", "CNAME", "for", "guard", "NUMBER", "github", "NUMBER", "io", "perfect", "Finally", "a", "minimal", "page", "be", "available", "at", "LINK", "heart", "Very", "minimal", "at", "the", "moment", "but", "I", "ll", "pimp", "it", "a", "bit", "tonight", "NUMBER", "I", "see", "an", "increasing", "interest", "in", "use", "Guard", "programmatically", "on", "StackOverflow", "and", "in", "the", "issue", "but", "the", "API", "feels", "half", "baked", "NUMBER", "Some", "method", "be", "dependent", "in", "the", "order", "they", "will", "be", "call", "try", "Guard", "NUMBER", "setup", "before", "Guard", "NUMBER", "art", "and", "use", "Listen", "in", "non", "blocking", "mode", "make", "the", "API", "really", "cumbersome", "because", "you", "need", "to", "check", "the", "Guard", "run", "status", "from", "the", "outside", "NUMBER", "x", "Review", "the", "API", "on", "the", "Guard", "module", "general", "x", "Make", "API", "calls", "not", "order", "independent", "x", "Provide", "sensible", "default", "options", "also", "for", "the", "API", "and", "not", "only", "the", "cli", "See", "NUMBER", "x", "Review", "Listen", "integration", "preferably", "use", "Listen", "by", "default", "in", "blocking", "mode", "x", "Provide", "a", "Rake", "Task", "wrapper", "See", "guard", "jasmine", "LINK", "jasmine", "blob", "master", "lib", "guard", "jasmine", "task", "NUMBER", "rb", "as", "example", "to", "start", "Guard", "run", "a", "plugin", "or", "a", "group", "once", "x", "Update", "the", "wiki", "page", "Programmatic", "use", "of", "guard", "LINK", "use", "of", "guard", "Great", "NUMBER", "Then", "I", "start", "with", "the", "deprecations", "and", "come", "over", "to", "help", "when", "I", "m", "do", "NUMBER", "I", "suggest", "that", "we", "all", "push", "an", "empty", "feature", "branch", "so", "others", "see", "what", "we", "want", "to", "work", "on", "NUMBER", "rymai", "I", "like", "it", "That", "s", "a", "great", "suggestion", "NUMBER", "However", "we", "need", "to", "ensure", "that", "deprecations", "for", "plugin", "developers", "doesn", "t", "bother", "normal", "users", "of", "a", "plugin", "NUMBER", "Yeah", "I", "ll", "take", "care", "of", "it", "later", "once", "Listen", "rewrite", "will", "be", "do", "NUMBER", "I", "think", "we", "can", "check", "it", "now", "NUMBER", "All", "removals", "must", "be", "properly", "documented", "in", "a", "migration", "guide", "NUMBER", "x", "Remove", "watch_all_modifications", "option", "cli", "and", "guard", "module", "x", "Remove", "no_vendor", "options", "cli", "and", "guard", "module", "x", "Remove", "ignore_paths", "DSL", "method", "x", "Remove", "interactor", "deprecation", "dsl", "x", "Remove", "reset_color", "from", "ui", "NUMBER", "x", "Remove", "match_file", "from", "watcher", "NUMBER", "The", "deprecation", "of", "run_on_change", "and", "run_on_deletion", "have", "be", "silenced", "by", "default", "and", "since", "it", "would", "break", "a", "lot", "of", "the", "plugin", "ecosystem", "I", "vote", "for", "remove", "the", "deprecation", "and", "just", "keep", "it", "as", "an", "alternative", "for", "the", "preferred", "methods", "NUMBER", "See", "NUMBER", "x", "Remove", "run_on_change", "and", "run_on_deletion", "deprecation", "message", "I", "agree", "on", "keep", "run_on_change", "and", "run_on_deletion", "as", "aliases", "NUMBER", "Great", "Sure", "I", "have", "some", "time", "next", "Thursday", "If", "you", "want", "it", "earlier", "please", "go", "on", "NUMBER", "Awesome", "Very", "nice", "x", "Remove", "NUMBER", "ree", "jruby", "NUMBER", "mode", "and", "rbx", "NUMBER", "mode", "from", "Travis", "x", "Remove", "NUMBER", "from", "Rakefile", "x", "Convert", "Hashes", "to", "NUMBER", "style", "code", "and", "documentation", "x", "Cleanup", "dsl_describer_spec", "NUMBER", "rb", "LINK", "_describer_spec", "NUMBER", "rb", "L", "NUMBER", "x", "Make", "the", "notifier", "list", "a", "Hash", "LINK", "L", "NUMBER", "x", "Update", "documentation", "I", "like", "that", "I", "ll", "handle", "it", "once", "it", "s", "do", "on", "Listen", "NUMBER", "Yeah", "Listen", "still", "need", "some", "work", "would", "be", "great", "if", "you", "can", "handle", "it", "NUMBER", "I", "know", "you", "we", "ll", "like", "doing", "that", "Thanks", "So", "there", "be", "this", "wiki", "entry", "on", "how", "to", "run", "guard", "with", "Rake", "tasks", "LINK", "Guard", "programmatically", "cookbook", "NUMBER", "First", "there", "seems", "to", "be", "a", "couple", "of", "things", "wrong", "with", "this", "entry", "NUMBER", "It", "seems", "as", "if", "the", "following", "be", "enough", "since", "Guard", "NUMBER", "setup", "already", "runs", "Guard", "Dsl", "NUMBER", "evaluate_guardfile", "task", "run_all", "do", "require", "guard", "Guard", "NUMBER", "setup", "Guard", "NUMBER", "run_all", "group", "all_specs", "end", "end", "However", "I", "stumbled", "accross", "two", "issue", "here", "First", "when", "I", "have", "a", "default", "scope", "in", "my", "Guardfile", "scope", "group", "all_specs", "I", "get", "the", "following", "error", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Invalid", "Guardfile", "original", "error", "be", "undefined", "method", "empty", "for", "nil", "NilClass", "Removing", "the", "default", "scope", "results", "in", "the", "following", "error", "in", "the", "runner", "NUMBER", "rb", "LINK", "L", "NUMBER", "NUMBER", "rake", "specs", "run_all", "NUMBER", "NUMBER", "NUMBER", "INFO", "Run", "all_specs", "rake", "abort", "undefined", "method", "name", "for", "all_specs", "Symbol", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "scoped_guards", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "catch", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "in", "scoped_guards", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "each", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "scoped_guards", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "lumberjack", "NUMBER", "lib", "lumberjack", "NUMBER", "rb", "NUMBER", "in", "unit_of_work", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "runner", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run_all", "Users", "robin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "block", "in", "within_preserved_state", "NUMBER", "It", "seems", "as", "if", "the", "group", "must", "be", "provide", "with", "a", "Guard", "Group", "NUMBER", "Using", "Guard", "NUMBER", "run_all", "group", "Guard", "Group", "NUMBER", "new", "all_specs", "works", "NUMBER", "Now", "I", "propose", "NUMBER", "things", "NUMBER", "ensure", "that", "scopes", "group", "contains", "Guard", "Group", "s", "even", "if", "run_all", "be", "pass", "Symbols", "NUMBER", "NUMBER", "Update", "the", "wiki", "entry", "NUMBER", "fix", "error", "that", "occur", "when", "a", "scope", "be", "defined", "in", "the", "Guardfile", "maybe", "we", "should", "create", "a", "new", "issue", "for", "that", "Now", "I", "might", "have", "gotten", "this", "all", "totally", "wrong", "so", "looking", "forward", "to", "your", "opinion", "NUMBER", "was", "already", "referenced", "NUMBER", "Am", "I", "miss", "something", "OK", "I", "add", "refs", "to", "the", "other", "pull", "request", "NUMBER", "This", "be", "another", "reason", "to", "never", "directly", "push", "and", "instead", "issue", "pull", "request", "it", "s", "nicer", "to", "refer", "to", "pull", "request", "IDs", "than", "commit", "SHAs", "NUMBER", "I", "ve", "already", "way", "exceeded", "my", "time", "budget", "on", "this", "so", "if", "you", "find", "any", "other", "nits", "to", "pick", "please", "fix", "them", "yourself", "This", "should", "get", "Travis", "build", "work", "again", "and", "fix", "a", "few", "other", "things", "NUMBER", "Please", "don", "t", "merge", "until", "the", "Travis", "build", "for", "the", "pull", "request", "be", "green", "NUMBER", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "c", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "fbae", "NUMBER", "f", "NUMBER", "bdd", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "on", "aspiers", "master", "into", "NUMBER", "f", "NUMBER", "f", "NUMBER", "efc", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "dc", "NUMBER", "abf", "NUMBER", "d", "NUMBER", "f", "NUMBER", "on", "guard", "master", "NUMBER", "View", "Details", "LINK", "Thanks", "aspiers", "tmux", "specs", "fail", "on", "NUMBER", "LINK", "ci", "NUMBER", "org", "guard", "guard", "jobs", "NUMBER", "jruby", "NUMBER", "mode", "LINK", "ci", "NUMBER", "org", "guard", "guard", "jobs", "NUMBER", "can", "you", "have", "a", "look", "please", "Thanks", "Yeah", "I", "m", "already", "looking", "I", "half", "expected", "those", "failures", "NUMBER", "I", "have", "seen", "them", "on", "NUMBER", "too", "NUMBER", "thibaudgg", "I", "m", "struggling", "to", "understand", "why", "rudicode", "add", "tmux", "set", "quiet", "on", "off", "in", "d", "NUMBER", "d", "do", "you", "know", "No", "idea", "I", "don", "t", "use", "tmux", "myself", "NUMBER", "Don", "t", "worry", "I", "ve", "worked", "around", "it", "NUMBER", "LINK", "LINK", "Coverage", "increase", "NUMBER", "when", "pulling", "ed", "NUMBER", "bb", "NUMBER", "fc", "NUMBER", "ddb", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "on", "aspiers", "master", "into", "NUMBER", "f", "NUMBER", "f", "NUMBER", "efc", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "dc", "NUMBER", "abf", "NUMBER", "d", "NUMBER", "f", "NUMBER", "on", "guard", "master", "NUMBER", "View", "Details", "LINK", "Alright", "I", "think", "this", "be", "good", "to", "merge", "now", "NUMBER", "Please", "sanity", "check", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "first", "though", "that", "be", "the", "only", "risky", "commit", "NUMBER", "All", "the", "others", "be", "very", "low", "risk", "NUMBER", "Great", "thanks", "I", "ll", "tomorrow", "Really", "good", "point", "I", "know", "I", "have", "push", "access", "thanks", "for", "that", "but", "I", "think", "it", "s", "a", "bad", "idea", "to", "push", "directly", "because", "it", "makes", "the", "change", "less", "visible", "and", "also", "circumvents", "Travis", "it", "was", "a", "direct", "push", "which", "broke", "Travis", "last", "time", "NUMBER", "I", "didn", "t", "know", "about", "ci", "skip", "before", "that", "explains", "the", "previous", "breakage", "NUMBER", "However", "it", "be", "orthogonal", "to", "direct", "pushes", "NUMBER", "Even", "if", "you", "issue", "a", "pull", "request", "containing", "ci", "skip", "it", "still", "gives", "other", "people", "a", "chance", "to", "peer", "review", "your", "change", "NUMBER", "This", "be", "good", "even", "when", "altering", "READMEs", "etc", "NUMBER", "because", "documentation", "can", "have", "bug", "too", "So", "I", "would", "suggest", "that", "it", "be", "a", "good", "idea", "to", "_never_", "direct", "push", "except", "for", "real", "emergencies", "NUMBER", "I", "would", "have", "update", "the", "CHANGELOG", "NUMBER", "md", "but", "there", "be", "no", "instructions", "on", "how", "to", "add", "new", "sections", "after", "a", "release", "NUMBER", "Currently", "VERSION", "be", "still", "NUMBER", "but", "new", "change", "cannot", "go", "in", "the", "NUMBER", "section", "of", "CHANGELOG", "NUMBER", "md", "NUMBER", "I", "ve", "just", "looked", "at", "the", "history", "and", "it", "seems", "that", "creating", "a", "new", "Master", "section", "be", "the", "way", "to", "go", "NUMBER", "Done", "NUMBER", "I", "was", "trying", "to", "quickly", "look", "something", "up", "in", "the", "official", "docs", "and", "followed", "the", "link", "from", "the", "official", "gem", "LINK", "page", "not", "sure", "why", "NUMBER", "but", "it", "links", "to", "some", "really", "outdate", "version", "LINK", "actually", "says", "VERSION", "The", "current", "gem", "version", "of", "Guard", "NUMBER", "Tried", "to", "see", "if", "this", "be", "in", "the", "gemspec", "of", "something", "I", "can", "create", "a", "pull", "request", "for", "but", "couldn", "t", "might", "be", "something", "which", "needs", "to", "be", "manually", "update", "on", "rubygems", "NUMBER", "org", "This", "allows", "FileNotifier", "to", "not", "be", "available", "when", "it", "be", "not", "configured", "with", "a", "path", "NUMBER", "There", "be", "also", "a", "few", "other", "places", "where", "NUMBER", "available", "uses", "a", "DEFAULTS", "hash", "to", "check", "availability", "but", "could", "not", "consult", "user", "options", "NUMBER", "This", "would", "theoretically", "be", "a", "bug", "if", "the", "user", "configured", "a", "notifier", "in", "such", "a", "way", "that", "it", "would", "only", "be", "considered", "available", "with", "their", "options", "NUMBER", "BTW", "There", "was", "one", "fail", "test", "before", "this", "pull", "request", "NUMBER", "It", "be", "still", "fail", "NUMBER", "NUMBER", "Guard", "Dsl", "callback", "creates", "callbacks", "for", "the", "guard", "Failure", "Error", "described_class", "NUMBER", "evaluate_guardfile", "guardfile_contents", "Guard", "received", "add_guard", "with", "unexpect", "argument", "expected", "dummy", "TAG", "TAG", "group", "default", "get", "shell", "TAG", "pattern", "NUMBER", "guard_result", "group", "default", "NUMBER", "lib", "guard", "dsl", "NUMBER", "rb", "NUMBER", "in", "guard", "Inline", "Guardfile", "NUMBER", "in", "instance_eval_guardfile", "NUMBER", "lib", "guard", "dsl", "NUMBER", "rb", "NUMBER", "in", "instance_eval", "NUMBER", "lib", "guard", "dsl", "NUMBER", "rb", "NUMBER", "in", "instance_eval_guardfile", "NUMBER", "lib", "guard", "dsl", "NUMBER", "rb", "NUMBER", "in", "evaluate_guardfile", "NUMBER", "spec", "guard", "dsl_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "abcb", "NUMBER", "e", "NUMBER", "afa", "NUMBER", "a", "NUMBER", "ec", "NUMBER", "affb", "NUMBER", "de", "NUMBER", "b", "NUMBER", "a", "NUMBER", "on", "amiel", "available_options", "into", "on", "guard", "master", "NUMBER", "View", "Details", "LINK", "Option", "to", "write", "Guard", "notifications", "to", "a", "file", "NUMBER", "Each", "notification", "will", "overwrite", "the", "file", "NUMBER", "This", "allows", "other", "commands", "to", "be", "run", "based", "on", "the", "status", "of", "other", "guard", "commands", "NUMBER", "I", "tried", "hard", "not", "to", "say", "meta", "guard", "in", "the", "README", "NUMBER", "Please", "see", "this", "relevant", "discussion", "LINK", "topic", "guard", "dev", "wz", "NUMBER", "zlLJUEQA", "NUMBER", "One", "thing", "to", "note", "NUMBER", "I", "wanted", "to", "disable", "the", "notifier", "when", "no", "path", "option", "be", "provide", "NUMBER", "Right", "now", "that", "happens", "in", "NUMBER", "notify", "LINK", "_notifier", "lib", "guard", "notifiers", "file_notifier", "NUMBER", "rb", "L", "NUMBER", "as", "NUMBER", "available", "doesn", "t", "have", "access", "to", "the", "notification", "options", "NUMBER", "Since", "this", "be", "still", "an", "internal", "api", "it", "seems", "like", "it", "could", "still", "be", "possible", "to", "change", "NUMBER", "available", "silent", "false", "to", "NUMBER", "available", "options", "silent", "false", "NUMBER", "Thoughts", "netzpirat", "cool", "thanks", "I", "ll", "tackle", "the", "available", "change", "in", "a", "separate", "pull", "request", "NUMBER", "This", "be", "awesome", "thank", "you", "Amiel", "rymai", "I", "m", "glad", "I", "could", "help", "NUMBER", "For", "more", "on", "how", "I", "m", "use", "it", "LINK", "For", "some", "reason", "my", "guard", "shell", "doesn", "t", "seem", "to", "run", "after", "the", "first", "test", "run", "I", "m", "pretty", "sure", "the", "notification", "be", "firing", "and", "write", "to", "the", "file", "though", "but", "it", "do", "fire", "after", "every", "subsequent", "run", "NUMBER", "Installing", "terminal", "table", "NUMBER", "WARNING", "terminal", "table", "NUMBER", "has", "an", "invalid", "nil", "value", "for", "cert_chain", "run", "across", "my", "terminal", "while", "run", "bundler", "NUMBER", "From", "my", "Gemfile", "NUMBER", "lock", "and", "your", "guard", "NUMBER", "gemspec", "it", "looks", "like", "guard", "be", "the", "source", "of", "this", "terminal", "table", "dependency", "NUMBER", "This", "ticket", "was", "opened", "NUMBER", "months", "ago", "LINK", "table", "issue", "NUMBER", "on", "terminal", "table", "repo", "and", "no", "response", "yet", "NUMBER", "Don", "t", "know", "how", "serious", "this", "issue", "be", "but", "thought", "I", "would", "let", "you", "know", "in", "case", "you", "can", "drop", "the", "dependency", "or", "something", "as", "from", "I", "read", "the", "maintainer", "of", "that", "project", "might", "not", "be", "maintaining", "anymore", "NUMBER", "NUMBER", "guard", "only", "works", "with", "terminal", "table", "NUMBER", "for", "me", "right", "now", "NUMBER", "Awesome", "thank", "you", "netzpirat", "Cool", "just", "let", "me", "know", "if", "you", "have", "question", "or", "issue", "NUMBER", "formatador", "hasn", "t", "change", "much", "in", "a", "while", "but", "happy", "to", "help", "out", "and", "or", "fix", "stuff", "if", "it", "comes", "up", "I", "still", "use", "it", "regularly", "in", "lots", "of", "stuff", "it", "s", "just", "stable", "NUMBER", "Thanks", "to", "netzpirat", "and", "geemus", "for", "knocking", "this", "out", "NUMBER", "A", "round", "of", "NUMBER", "for", "each", "of", "you", "NUMBER", "I", "appreciate", "your", "responsiveness", "NUMBER", "Love", "guard", "NUMBER", "Awesome", "thanks", "This", "add", "the", "ability", "to", "trigger", "Amazon", "SNS", "notifications", "NUMBER", "That", "looks", "really", "nice", "Can", "you", "add", "some", "specs", "like", "the", "other", "notifiers", "LINK", "have", "Sure", "will", "do", "NUMBER", "On", "Thu", "Feb", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Michael", "Kessler", "notifications", "github", "NUMBER", "comwrote", "That", "looks", "really", "nice", "Can", "you", "add", "some", "specs", "like", "the", "other", "notifiers", "LINK", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Totally", "understand", "just", "haven", "t", "had", "time", "to", "add", "them", "yet", "but", "I", "plan", "to", "and", "will", "reopen", "when", "they", "be", "do", "NUMBER", "Thanks", "Kyle", "Campos", "_Twitter_", "kcampos", "LINK", "_Phone_", "NUMBER", "NUMBER", "NUMBER", "LinkedIn", "Profile", "LINK", "On", "Tue", "Mar", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Michael", "Kessler", "notifications", "github", "NUMBER", "comwrote", "I", "hope", "you", "understand", "that", "I", "cannot", "merge", "the", "pull", "request", "without", "specs", "and", "I", "m", "going", "to", "close", "this", "PR", "now", "because", "of", "inactivity", "NUMBER", "If", "you", "decide", "to", "add", "some", "specs", "please", "reopen", "the", "pull", "request", "and", "I", "ll", "happily", "review", "it", "NUMBER", "Thanks", "a", "lot", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "NUMBER", "I", "use", "tmux", "message", "for", "all", "kinds", "of", "things", "NUMBER", "When", "use", "the", "tmux", "notifier", "in", "Guard", "it", "messes", "up", "the", "settings", "for", "these", "message", "NUMBER", "This", "change", "restores", "the", "options", "immediately", "after", "the", "notification", "disappears", "so", "that", "other", "message", "display", "with", "the", "defaults", "NUMBER", "We", "cannot", "merge", "this", "currently", "because", "it", "s", "not", "work", "on", "all", "Rubies", "Guard", "support", "NUMBER", "Are", "you", "planning", "to", "change", "your", "implementation", "or", "should", "this", "PR", "be", "close", "Thanks", "for", "the", "update", "NUMBER", "Unfortunately", "the", "specs", "for", "the", "Tmux", "notifier", "be", "fail", "and", "need", "to", "be", "update", "according", "to", "the", "change", "in", "the", "implementation", "NUMBER", "Yes", "sorry", "I", "was", "in", "a", "hurry", "and", "didn", "t", "check", "the", "specs", "NUMBER", "Now", "they", "should", "be", "all", "fix", "but", "I", "only", "test", "it", "on", "NUMBER", "Thanks", "for", "the", "update", "but", "I", "still", "can", "t", "merge", "this", "since", "it", "fail", "on", "Travis", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "NUMBER", "Can", "you", "have", "a", "look", "This", "failure", "be", "puzzling", "NUMBER", "I", "could", "only", "reproduce", "the", "failure", "once", "on", "Ruby", "NUMBER", "but", "it", "disappeared", "as", "soon", "as", "I", "start", "debugging", "NUMBER", "After", "that", "I", "could", "not", "reproduce", "again", "NUMBER", "Not", "even", "after", "remove", "all", "debugging", "message", "an", "restoring", "commit", "state", "NUMBER", "I", "think", "this", "may", "be", "relate", "to", "Thread", "NUMBER", "new", "because", "thread", "scheduling", "be", "not", "guaranteed", "nor", "in", "strict", "order", "NUMBER", "You", "can", "workaround", "this", "by", "just", "make", "it", "run", "inside", "the", "current", "thread", "with", "something", "like", "ruby", "before", "do", "Thread", "NUMBER", "ub", "new", "NUMBER", "and_yield", "end", "in", "the", "spec", "suite", "I", "didn", "t", "test", "the", "above", "snippet", "but", "you", "get", "the", "idea", "NUMBER", "Of", "course", "NUMBER", "I", "haven", "t", "had", "time", "to", "get", "to", "the", "bottom", "of", "this", "NUMBER", "I", "ll", "reopen", "if", "I", "can", "deal", "with", "this", "in", "the", "future", "NUMBER", "I", "get", "Error", "sending", "notification", "with", "gntp", "Register", "fail", "on", "every", "Guard", "run", "NUMBER", "Growl", "version", "NUMBER", "guard", "NUMBER", "ruby_gntp", "NUMBER", "ruby", "Guardfile", "guard", "test", "do", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "watch", "r", "test", "NUMBER", "_test", "NUMBER", "rb", "watch", "test", "test_helper", "NUMBER", "rb", "test", "end", "When", "I", "go", "through", "the", "examples", "in", "the", "ruby_gntp", "README", "LINK", "_gntp", "blob", "master", "README", "the", "notifications", "work", "fine", "NUMBER", "Growl", "be", "run", "and", "the", "network", "tab", "on", "its", "preference", "pane", "shows", "that", "it", "be", "listening", "for", "incoming", "network", "notifications", "NUMBER", "That", "code", "works", "great", "on", "Growl", "NUMBER", "Do", "I", "need", "to", "add", "some", "setup", "to", "my", "Guardfile", "corresponding", "to", "the", "following", "ruby", "gntp", "GNTP", "NUMBER", "new", "Guard", "NUMBER", "NUMBER", "gntp", "NUMBER", "register", "app_icon", "File", "NUMBER", "expand_path", "File", "NUMBER", "join", "images", "guard", "NUMBER", "png", "notifications", "name", "notify", "enable", "true", "name", "fail", "enable", "true", "name", "pending", "enable", "true", "name", "success", "enable", "true", "No", "I", "switched", "to", "one", "of", "the", "other", "Growl", "gems", "NUMBER", "Hi", "I", "have", "same", "problem", "NUMBER", "I", "try", "send", "notification", "on", "local", "machine", "from", "remote", "server", "NUMBER", "Ubuntu", "NUMBER", "gol", "LINK", "for", "linux", "install", "from", "repository", "gem", "ruby_gntp", "The", "example", "use", "gntp", "above", "work", "fine", "on", "local", "machine", "but", "on", "remote", "server", "I", "take", "ruby", "gems", "NUMBER", "gems", "ruby_gntp", "NUMBER", "lib", "ruby_gntp", "NUMBER", "rb", "NUMBER", "in", "register", "Register", "fail", "RuntimeError", "I", "use", "remote", "forward", "in", "ssh", "RemoteForward", "NUMBER", "localhost", "NUMBER", "It", "seems", "to", "me", "where", "I", "was", "wrong", "Thanks", "maksimr", "this", "looks", "like", "a", "Ruby", "GNTP", "issue", "not", "much", "we", "can", "do", "from", "our", "side", "NUMBER", "Thanks", "Yes", "I", "understand", "but", "looking", "at", "their", "repository", "seems", "that", "the", "escort", "had", "left", "him", "NUMBER", "P", "NUMBER", "S", "NUMBER", "I", "notice", "that", "it", "works", "through", "time", "periodically", "it", "send", "notification", "NUMBER", "P", "NUMBER", "P", "NUMBER", "S", "Problem", "in", "growl", "for", "linux", "LINK", "for", "linux", "LINK", "for", "linux", "issue", "NUMBER", "It", "stinks", "to", "report", "this", "since", "I", "m", "traveling", "and", "can", "t", "do", "anything", "about", "it", "but", "LINK", "fail", "on", "windows", "NUMBER", "with", "runtime", "error", "I", "have", "no", "idea", "what", "would", "ve", "change", "in", "that", "area", "of", "the", "code", "especially", "not", "in", "that", "minor", "minor", "release", "NUMBER", "Freenode", "pry", "be", "aware", "of", "it", "but", "I", "don", "t", "know", "who", "can", "do", "anything", "in", "the", "short", "term", "NUMBER", "I", "think", "there", "s", "no", "way", "it", "s", "due", "to", "NUMBER", "after", "seeing", "the", "diff", "between", "NUMBER", "and", "NUMBER", "LINK", "I", "should", "ve", "said", "NUMBER", "which", "be", "pretty", "new", "as", "a", "whole", "NUMBER", "It", "was", "test", "on", "Windows", "and", "with", "Guard", "but", "not", "with", "Guard", "on", "Windows", "NUMBER", "Do", "we", "have", "replication", "of", "the", "problem", "I", "won", "t", "be", "able", "to", "get", "to", "a", "Windows", "machine", "for", "a", "couple", "days", "NUMBER", "Original", "message", "From", "R\u00e9my", "Coutable", "notifications", "github", "NUMBER", "com", "Date", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "GMT", "NUMBER", "NUMBER", "To", "guard", "guard", "guard", "noreply", "NUMBER", "github", "NUMBER", "com", "Cc", "king", "rkingithub", "sharpsaw", "NUMBER", "org", "Subject", "Re", "guard", "Windows", "broken", "due", "to", "pry", "NUMBER", "NUMBER", "I", "think", "there", "s", "no", "way", "it", "s", "due", "to", "NUMBER", "after", "seeing", "the", "diff", "between", "NUMBER", "and", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "I", "run", "successfully", "bundle", "exec", "guard", "i", "I", "do", "not", "even", "know", "why", "I", "would", "want", "need", "pry", "then", "I", "see", "my", "notifications", "show", "up", "that", "be", "all", "I", "wanted", "for", "a", "start", "could", "that", "not", "be", "the", "default", "then", "anyway", "Thanks", "for", "the", "info", "on", "the", "useful", "commands", "NUMBER", "On", "Mon", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Michael", "Kessler", "notifications", "github", "NUMBER", "comwrote", "The", "Guard", "interactor", "be", "based", "on", "Pry", "and", "offers", "some", "useful", "commands", "LINK", "interactionswhich", "be", "of", "interest", "for", "all", "users", "so", "we", "like", "to", "have", "it", "enable", "by", "default", "NUMBER", "For", "Ruby", "developers", "Pry", "offers", "a", "huge", "feature", "set", "to", "examine", "the", "runtime", "and", "be", "extremely", "useful", "NUMBER", "It", "looks", "like", "the", "issue", "happens", "only", "with", "the", "latest", "Pry", "minor", "release", "NUMBER", "x", "on", "Windows", "and", "it", "s", "likely", "that", "it", "will", "be", "fix", "soon", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "rking", "have", "you", "had", "a", "chance", "to", "look", "at", "this", "yet", "I", "just", "test", "this", "NUMBER", "I", "had", "no", "problem", "both", "with", "Pry", "NUMBER", "and", "Pry", "NUMBER", "NUMBER", "Original", "size", "LINK", "fotki", "NUMBER", "yandex", "NUMBER", "ru", "get", "NUMBER", "NUMBER", "NUMBER", "_", "NUMBER", "e", "NUMBER", "_", "NUMBER", "be", "NUMBER", "_orig", "LINK", "fotki", "NUMBER", "yandex", "NUMBER", "ru", "get", "NUMBER", "NUMBER", "NUMBER", "_", "NUMBER", "e", "NUMBER", "_", "NUMBER", "be", "NUMBER", "_orig", "They", "both", "do", "have", "other", "issue", "though", "NUMBER", "After", "I", "edit", "my", "test", "Guard", "be", "run", "it", "NUMBER", "After", "the", "process", "be", "finished", "I", "can", "t", "type", "anything", "in", "the", "console", "anymore", "NUMBER", "I", "was", "test", "on", "Ruby", "NUMBER", "p", "NUMBER", "NUMBER", "It", "was", "totally", "blocked", "NUMBER", "But", "what", "s", "interesting", "you", "_can_", "type", "stuff", "during", "the", "time", "when", "test", "be", "be", "executed", "the", "characters", "be", "not", "echoed", "though", "and", "it", "will", "be", "executed", "after", "the", "test", "be", "finished", "NUMBER", "Makes", "sense", "NUMBER", "I", "understand", "your", "point", "NUMBER", "Also", "my", "Ruby", "RSpec", "pry", "knowledge", "seems", "to", "be", "too", "limited", "to", "help", "I", "just", "run", "a", "bundle", "update", "but", "still", "face", "the", "same", "issue", "on", "Windows", "NUMBER", "NUMBER", "bit", "NUMBER", "C", "Users", "wolfgang", "RubymineProjects", "Koreanisch", "bundle", "update", "Fetching", "gem", "metadata", "from", "LINK", "Fetching", "gem", "metadata", "from", "LINK", "Using", "rake", "NUMBER", "Using", "i", "NUMBER", "n", "NUMBER", "Using", "multi_json", "NUMBER", "Using", "activesupport", "NUMBER", "Using", "builder", "NUMBER", "Using", "activemodel", "NUMBER", "Using", "erubis", "NUMBER", "Using", "journey", "NUMBER", "Using", "rack", "NUMBER", "Using", "rack", "cache", "NUMBER", "Using", "rack", "test", "NUMBER", "Using", "hike", "NUMBER", "Using", "tilt", "NUMBER", "Using", "sprockets", "NUMBER", "Using", "actionpack", "NUMBER", "Using", "mime", "types", "NUMBER", "Using", "polyglot", "NUMBER", "Using", "treetop", "NUMBER", "Using", "mail", "NUMBER", "Using", "actionmailer", "NUMBER", "Using", "arel", "NUMBER", "Using", "tzinfo", "NUMBER", "Using", "activerecord", "NUMBER", "Using", "activeresource", "NUMBER", "Using", "bcrypt", "ruby", "NUMBER", "Using", "bundler", "NUMBER", "pre", "NUMBER", "Using", "nokogiri", "NUMBER", "Using", "ffi", "NUMBER", "Installing", "childprocess", "NUMBER", "Using", "rubyzip", "NUMBER", "Using", "websocket", "NUMBER", "Installing", "selenium", "webdriver", "NUMBER", "Using", "xpath", "NUMBER", "Using", "capybara", "NUMBER", "Using", "coderay", "NUMBER", "Using", "coffee", "script", "source", "NUMBER", "Using", "execjs", "NUMBER", "Using", "coffee", "script", "NUMBER", "Using", "rack", "ssl", "NUMBER", "Using", "json", "NUMBER", "Using", "rdoc", "NUMBER", "Installing", "thor", "NUMBER", "Using", "railties", "NUMBER", "Using", "coffee", "rails", "NUMBER", "Using", "diff", "lcs", "NUMBER", "Using", "listen", "NUMBER", "Using", "lumberjack", "NUMBER", "Using", "method_source", "NUMBER", "Using", "slop", "NUMBER", "Using", "pry", "NUMBER", "Using", "guard", "NUMBER", "Using", "rspec", "core", "NUMBER", "Using", "rspec", "expectations", "NUMBER", "Using", "rspec", "mocks", "NUMBER", "Using", "rspec", "NUMBER", "Using", "guard", "rspec", "NUMBER", "Using", "spork", "NUMBER", "Using", "guard", "spork", "NUMBER", "Using", "hashie", "NUMBER", "Using", "jquery", "rails", "NUMBER", "Using", "omniauth", "NUMBER", "Using", "omniauth", "identity", "NUMBER", "Using", "pg", "NUMBER", "Using", "rails", "NUMBER", "Using", "rb", "fchange", "NUMBER", "Using", "rb", "fsevent", "NUMBER", "Using", "rb", "inotify", "NUMBER", "Using", "rb", "notifu", "NUMBER", "Using", "rspec", "rails", "NUMBER", "Using", "sass", "NUMBER", "Using", "sass", "rails", "NUMBER", "Using", "sqlite", "NUMBER", "NUMBER", "Using", "uglifier", "NUMBER", "Using", "wdm", "NUMBER", "Using", "win", "NUMBER", "console", "NUMBER", "Your", "bundle", "be", "update", "Use", "bundle", "show", "gemname", "to", "see", "where", "a", "bundled", "gem", "i", "s", "install", "NUMBER", "C", "Users", "wolfgang", "RubymineProjects", "Koreanisch", "bundle", "exec", "guard", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "Notifu", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "command_set", "NUMBER", "rb", "NUMBER", "in", "alias_command", "Command", "help", "not", "find", "RuntimeError", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interacto", "r", "NUMBER", "rb", "NUMBER", "in", "block", "in", "create_command_aliases", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interacto", "r", "NUMBER", "rb", "NUMBER", "in", "each", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interacto", "r", "NUMBER", "rb", "NUMBER", "in", "create_command_aliases", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interacto", "r", "NUMBER", "rb", "NUMBER", "in", "initialize", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "new", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "setup_interactor", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "setup", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "C", "Ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "C", "Ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "C", "Users", "wolfgang", "RubymineProjects", "Koreanisch", "ruby", "v", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "Alright", "I", "had", "the", "Pry", "version", "set", "in", "the", "Gemfile", "NUMBER", "Removed", "it", "run", "bundle", "update", "I", "see", "the", "new", "pry", "version", "in", "the", "output", "however", "it", "be", "still", "fail", "with", "the", "same", "NUMBER", "I", "might", "have", "to", "head", "over", "then", "to", "the", "pry", "board", "and", "see", "what", "the", "gotchas", "be", "on", "the", "Windows", "configuration", "maybe", "a", "bad", "PATH", "C", "Users", "wolfgang", "RubymineProjects", "Koreanisch", "bundle", "update", "Fetching", "gem", "metadata", "from", "LINK", "Fetching", "gem", "metadata", "from", "LINK", "Using", "rake", "NUMBER", "Using", "i", "NUMBER", "n", "NUMBER", "Using", "multi_json", "NUMBER", "Using", "activesupport", "NUMBER", "Using", "builder", "NUMBER", "Using", "activemodel", "NUMBER", "Using", "erubis", "NUMBER", "Using", "journey", "NUMBER", "Using", "rack", "NUMBER", "Using", "rack", "cache", "NUMBER", "Using", "rack", "test", "NUMBER", "Using", "hike", "NUMBER", "Using", "tilt", "NUMBER", "Using", "sprockets", "NUMBER", "Using", "actionpack", "NUMBER", "Using", "mime", "types", "NUMBER", "Using", "polyglot", "NUMBER", "Using", "treetop", "NUMBER", "Using", "mail", "NUMBER", "Using", "actionmailer", "NUMBER", "Using", "arel", "NUMBER", "Using", "tzinfo", "NUMBER", "Using", "activerecord", "NUMBER", "Using", "activeresource", "NUMBER", "Using", "bcrypt", "ruby", "NUMBER", "Using", "bundler", "NUMBER", "pre", "NUMBER", "Using", "nokogiri", "NUMBER", "Using", "ffi", "NUMBER", "Using", "childprocess", "NUMBER", "Using", "rubyzip", "NUMBER", "Using", "websocket", "NUMBER", "Using", "selenium", "webdriver", "NUMBER", "Using", "xpath", "NUMBER", "Using", "capybara", "NUMBER", "Using", "coderay", "NUMBER", "Using", "coffee", "script", "source", "NUMBER", "Using", "execjs", "NUMBER", "Using", "coffee", "script", "NUMBER", "Using", "rack", "ssl", "NUMBER", "Using", "json", "NUMBER", "Using", "rdoc", "NUMBER", "Using", "thor", "NUMBER", "Using", "railties", "NUMBER", "Using", "coffee", "rails", "NUMBER", "Using", "diff", "lcs", "NUMBER", "Using", "listen", "NUMBER", "Using", "lumberjack", "NUMBER", "Using", "method_source", "NUMBER", "Using", "slop", "NUMBER", "Installing", "pry", "NUMBER", "Using", "guard", "NUMBER", "Using", "rspec", "core", "NUMBER", "Using", "rspec", "expectations", "NUMBER", "Using", "rspec", "mocks", "NUMBER", "Using", "rspec", "NUMBER", "Using", "guard", "rspec", "NUMBER", "Using", "spork", "NUMBER", "Using", "guard", "spork", "NUMBER", "Using", "hashie", "NUMBER", "Using", "jquery", "rails", "NUMBER", "Using", "omniauth", "NUMBER", "Using", "omniauth", "identity", "NUMBER", "Using", "pg", "NUMBER", "Using", "rails", "NUMBER", "Using", "rb", "fchange", "NUMBER", "Using", "rb", "fsevent", "NUMBER", "Using", "rb", "inotify", "NUMBER", "Using", "rb", "notifu", "NUMBER", "Using", "rspec", "rails", "NUMBER", "Using", "sass", "NUMBER", "Using", "sass", "rails", "NUMBER", "Using", "sqlite", "NUMBER", "NUMBER", "Using", "uglifier", "NUMBER", "Using", "wdm", "NUMBER", "Using", "win", "NUMBER", "console", "NUMBER", "Your", "bundle", "be", "update", "Use", "bundle", "show", "gemname", "to", "see", "where", "a", "bundled", "gem", "i", "s", "install", "NUMBER", "C", "Users", "wolfgang", "RubymineProjects", "Koreanisch", "bundle", "exec", "guard", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "Notifu", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "pry", "NUMBER", "lib", "pry", "command_set", "NUMBER", "rb", "NUMBER", "in", "alias_command", "Command", "help", "not", "find", "RuntimeError", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interacto", "r", "NUMBER", "rb", "NUMBER", "in", "block", "in", "create_command_aliases", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interacto", "r", "NUMBER", "rb", "NUMBER", "in", "each", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interacto", "r", "NUMBER", "rb", "NUMBER", "in", "create_command_aliases", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interacto", "r", "NUMBER", "rb", "NUMBER", "in", "initialize", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "new", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "setup_interactor", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "setup", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "C", "Ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "C", "Ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "C", "Users", "wolfgang", "RubymineProjects", "Koreanisch", "bundle", "exec", "guard", "i", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "Notifu", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "Spork", "for", "RSpec", "Using", "RSpec", "Rinda", "Ring", "Server", "listening", "for", "connections", "NUMBER", "Starting", "to", "fill", "pool", "NUMBER", "Wait", "until", "at", "least", "one", "slave", "be", "provide", "before", "run", "test", "NUMBER", "CTRL", "BREAK", "to", "stop", "Spork", "and", "kill", "all", "ruby", "slave", "processes", "Spork", "be", "ready", "and", "listening", "on", "NUMBER", "build", "slave", "NUMBER", "build", "slave", "NUMBER", "Preloading", "Rails", "environmentPreloading", "Rails", "environment", "Loading", "Spork", "NUMBER", "prefork", "block", "NUMBER", "Loading", "Spork", "NUMBER", "prefork", "block", "NUMBER", "Rack", "File", "headers", "parameter", "replaces", "cache_control", "after", "Rack", "NUMBER", "Rack", "File", "he", "aders", "parameter", "replaces", "cache_control", "after", "Rack", "NUMBER", "DRb", "magazine_slave_service", "NUMBER", "provide", "NUMBER", "DRb", "magazine_slave_service", "NUMBER", "provide", "NUMBER", "C", "Users", "wolfgang", "RubymineProjects", "Koreanisch", "echo", "PATH", "C", "Program", "Files", "x", "NUMBER", "PHP", "CommonProgramFiles", "Microsoft", "Shared", "Windows", "Live", "C", "Program", "Files", "x", "NUMBER", "NVIDIA", "Corporation", "PhysX", "Common", "C", "Windows", "system", "NUMBER", "C", "Win", "dows", "C", "Windows", "System", "NUMBER", "Wbem", "C", "Program", "Files", "x", "NUMBER", "Common", "Files", "HP", "Digital", "Ima", "ging", "bin", "C", "Program", "Files", "x", "NUMBER", "HP", "Digital", "Imaging", "bin", "C", "Program", "Files", "x", "NUMBER", "H", "P", "Digital", "Imaging", "bin", "Qt", "Qt", "NUMBER", "C", "Program", "Files", "x", "NUMBER", "Heroku", "bin", "C", "Program", "F", "iles", "x", "NUMBER", "git", "bin", "C", "Program", "Files", "x", "NUMBER", "git", "cmd", "C", "Program", "Files", "x", "NUMBER", "Common", "Files", "Acronis", "SnapAPI", "C", "Windows", "System", "NUMBER", "WindowsPowerShell", "v", "NUMBER", "C", "ansi", "NUMBER", "x", "NUMBER", "NUMBER", "C", "Ruby", "NUMBER", "bin", "C", "DevKit", "bin", "C", "DevKit", "mingw", "bin", "C", "Program", "Files", "Common", "Files", "Microsoft", "Shared", "Windows", "Live", "C", "Program", "Files", "x", "NUMBER", "OpenVPN", "bin", "C", "Pik", "C", "Qt", "NUMBER", "NUMBER", "bin", "C", "Qt", "NUMBER", "C", "Python", "NUMBER", "C", "Program", "Files", "x", "NUMBER", "Heroku", "bin", "C", "Users", "wolf", "gang", "gitflow", "netzpirat", "thanks", "for", "make", "me", "follow", "through", "NUMBER", "Just", "created", "LINK", "As", "a", "noobi", "I", "be", "quite", "perplexed", "going", "through", "these", "comments", "NUMBER", "I", "wish", "there", "be", "a", "clear", "direction", "on", "interim", "solution", "while", "waiting", "for", "pry", "fix", "NUMBER", "Should", "I", "just", "do", "TAG", "bundle", "exec", "guard", "i", "TAG", "If", "it", "helps", "here", "be", "the", "data", "OS", "Windows", "NUMBER", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "Rails", "NUMBER", "TAG", "Gemfile", "lock", "TAG", "guard", "NUMBER", "listen", "NUMBER", "lumberjack", "NUMBER", "pry", "NUMBER", "terminal", "table", "NUMBER", "thor", "NUMBER", "guard", "rspec", "NUMBER", "guard", "NUMBER", "rspec", "NUMBER", "pry", "NUMBER", "x", "NUMBER", "mingw", "NUMBER", "coderay", "NUMBER", "method_source", "NUMBER", "slop", "NUMBER", "win", "NUMBER", "console", "NUMBER", "TAG", "Gemfile", "TAG", "TAG", "group", "test", "development", "do", "gem", "rspec", "rails", "end", "group", "development", "do", "gem", "wdm", "platforms", "mswin", "mingw", "require", "false", "gem", "win", "NUMBER", "console", "end", "group", "test", "do", "gem", "factory_girl_rails", "gem", "capybara", "gem", "faker", "NUMBER", "gem", "shoulda", "gem", "guard", "rspec", "gem", "guard", "end", "TAG", "and", "the", "error", "error", "LINK", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "png", "murtyk", "If", "you", "want", "to", "have", "the", "Guard", "command", "line", "available", "then", "just", "use", "the", "previous", "Pry", "version", "by", "add", "gem", "pry", "NUMBER", "to", "your", "Gemfile", "and", "bundle", "your", "gems", "NUMBER", "As", "alternative", "you", "can", "just", "disable", "the", "interactor", "but", "you", "won", "t", "be", "able", "to", "give", "guard", "manual", "commands", "bundle", "exec", "guard", "i", "It", "s", "interesting", "that", "you", "have", "the", "failure", "on", "Windows", "NUMBER", "because", "in", "my", "VM", "it", "worked", "on", "Windows", "NUMBER", "Looking", "at", "the", "comments", "kyrylo", "test", "Pry", "NUMBER", "on", "Windows", "NUMBER", "with", "Ruby", "NUMBER", "p", "NUMBER", "successfully", "whereas", "I", "test", "Pry", "NUMBER", "on", "Windows", "NUMBER", "with", "Ruby", "NUMBER", "p", "NUMBER", "successfully", "NUMBER", "Perhaps", "upgrading", "your", "Ruby", "installation", "to", "NUMBER", "p", "NUMBER", "helps", "also", "Thank", "you", "NUMBER", "I", "did", "bundle", "exec", "guard", "i", "and", "ok", "for", "now", "NUMBER", "This", "issue", "has", "be", "fix", "by", "this", "commit", "LINK", "It", "will", "be", "include", "in", "the", "next", "Pry", "release", "which", "should", "be", "out", "in", "the", "next", "couple", "of", "days", "NUMBER", "If", "you", "don", "t", "have", "time", "upgrade", "your", "Ruby", "NUMBER", "Thanks", "kyrylo", "for", "your", "time", "investigating", "this", "issue", "and", "fix", "it", "clap", "I", "realised", "that", "I", "managed", "to", "put", "a", "typo", "in", "the", "single", "line", "of", "documentation", "I", "add", "in", "the", "last", "pull", "request", "NUMBER", "Got", "so", "embarrassed", "that", "I", "went", "through", "the", "entire", "class", "and", "fix", "all", "typo", "to", "redeem", "myself", "I", "m", "also", "non", "native", "but", "with", "the", "benefit", "of", "having", "lived", "in", "London", "for", "the", "last", "NUMBER", "years", "Will", "definitely", "send", "more", "pull", "request", "if", "I", "spot", "anything", "else", "Hi", "there", "I", "be", "trying", "to", "use", "guard", "to", "monitor", "my", "servers", "NUMBER", "I", "need", "a", "test", "server", "and", "a", "inner", "server", "at", "the", "same", "time", "so", "I", "add", "these", "into", "my", "Guardfile", "ruby", "This", "be", "the", "test", "host", "guard", "rails", "port", "NUMBER", "environment", "test", "daemon", "true", "timeout", "NUMBER", "do", "watch", "Gemfile", "NUMBER", "lock", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "config", "environments", "test", "NUMBER", "rb", "watch", "config", "config", "NUMBER", "rb", "watch", "r", "config", "lib", "NUMBER", "end", "This", "be", "the", "test", "Inner", "API", "guard", "rails", "port", "NUMBER", "environment", "test", "daemon", "true", "timeout", "NUMBER", "do", "watch", "Gemfile", "NUMBER", "lock", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "config", "environments", "test", "NUMBER", "rb", "watch", "config", "config", "NUMBER", "rb", "watch", "r", "config", "lib", "NUMBER", "end", "But", "it", "seems", "that", "the", "first", "server", "be", "terminated", "by", "the", "second", "one", "NUMBER", "I", "search", "the", "Google", "and", "find", "that", "the", "guard", "spork", "has", "the", "same", "situation", "NUMBER", "So", "be", "there", "a", "way", "for", "Guard", "to", "run", "multiple", "instance", "of", "a", "single", "plugin", "This", "could", "also", "be", "a", "guard", "rails", "issue", "LINK", "rails", "blob", "master", "lib", "guard", "rails", "runner", "NUMBER", "rb", "rymai", "Yes", "I", "certainly", "understand", "it", "could", "be", "improved", "in", "guard", "rails", "plugin", "NUMBER", "But", "since", "some", "user", "want", "it", "with", "guard", "spork", "too", "maybe", "it", "be", "better", "to", "support", "this", "on", "Guard", "level", "NUMBER", "netzpirat", "Weird", "NUMBER", "In", "fact", "I", "have", "three", "servers", "at", "the", "same", "time", "the", "NUMBER", "and", "NUMBER", "co", "exist", "without", "NUMBER", "Maybe", "due", "to", "the", "RAILS_ENV", "It", "be", "the", "same", "when", "I", "separate", "into", "group", "NUMBER", "This", "be", "what", "my", "Guardfile", "now", "ruby", "This", "be", "the", "dev", "Inner", "API", "group", "dev_api", "do", "guard", "rails", "port", "NUMBER", "environment", "development", "daemon", "true", "timeout", "NUMBER", "do", "watch", "Gemfile", "NUMBER", "lock", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "config", "environments", "test", "NUMBER", "rb", "watch", "config", "config", "NUMBER", "rb", "end", "end", "This", "be", "the", "test", "host", "group", "test_host", "do", "guard", "rails", "port", "NUMBER", "environment", "test", "daemon", "true", "timeout", "NUMBER", "do", "watch", "Gemfile", "NUMBER", "lock", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "config", "environments", "test", "NUMBER", "rb", "watch", "config", "config", "NUMBER", "rb", "watch", "r", "config", "lib", "NUMBER", "end", "end", "This", "be", "the", "test", "Inner", "API", "group", "test_api", "do", "guard", "rails", "port", "NUMBER", "environment", "test", "daemon", "true", "timeout", "NUMBER", "do", "watch", "Gemfile", "NUMBER", "lock", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "config", "environments", "test", "NUMBER", "rb", "watch", "config", "config", "NUMBER", "rb", "watch", "r", "config", "lib", "NUMBER", "end", "end", "This", "be", "really", "weird", "NUMBER", "I", "still", "fail", "on", "local", "NUMBER", "But", "anyway", "after", "I", "read", "the", "source", "code", "of", "Guard", "rails", "it", "seems", "that", "it", "be", "the", "problem", "in", "Guard", "rails", "and", "can", "t", "avoid", "from", "Guard", "itself", "NUMBER", "I", "ll", "dive", "into", "it", "NUMBER", "Sorry", "for", "bothering", "NUMBER", "This", "might", "be", "expected", "behaviour", "but", "wanted", "to", "check", "just", "to", "be", "sure", "NUMBER", "It", "seems", "that", "Guard", "triggers", "initialize", "on", "every", "single", "Guards", "in", "all", "group", "even", "if", "I", "start", "it", "use", "guard", "g", "specs", "for", "example", "NUMBER", "In", "my", "specific", "case", "I", "m", "use", "initialize", "to", "delete", "recreate", "some", "build", "folders", "which", "means", "when", "I", "only", "want", "to", "run", "Jasmine", "which", "be", "in", "specs", "group", "the", "build", "folder", "gets", "obliterated", "as", "some", "Guards", "in", "my", "development", "group", "kick", "off", "Tried", "to", "find", "some", "warning", "in", "the", "docs", "about", "use", "initialize", "but", "couldn", "t", "find", "anything", "about", "this", "so", "not", "sure", "if", "I", "m", "just", "not", "supposed", "to", "do", "things", "this", "way", "or", "if", "this", "be", "a", "bug", "I", "think", "you", "re", "right", "all", "guards", "be", "initialized", "but", "not", "start", "So", "in", "your", "case", "you", "should", "delete", "recreate", "some", "build", "folders", "in", "the", "start", "method", "of", "your", "guard", "plugin", "not", "in", "its", "initialize", "method", "NUMBER", "Hope", "that", "helps", "Hmm", "be", "there", "a", "specific", "reason", "for", "this", "behaviour", "I", "can", "probably", "work", "around", "this", "in", "my", "Guards", "but", "I", "think", "the", "reason", "I", "actually", "moved", "some", "stuff", "to", "initialize", "be", "because", "if", "you", "use", "Guards", "programatically", "then", "start", "won", "t", "be", "invoked", "NUMBER", "On", "the", "other", "hand", "initialising", "Guards", "when", "they", "be", "in", "a", "different", "group", "naively", "doesn", "t", "sound", "logical", "as", "it", "s", "wasting", "resources", "but", "of", "course", "there", "might", "be", "some", "very", "good", "reasons", "I", "don", "t", "see", "without", "knowing", "the", "code", "NUMBER", "So", "my", "point", "be", "should", "this", "be", "change", "One", "of", "the", "reason", "I", "see", "be", "that", "scopes", "individual", "plugins", "or", "group", "can", "be", "update", "when", "Guard", "be", "already", "run", "LINK", "so", "the", "Guard", "plugins", "have", "to", "be", "initialized", "at", "that", "time", "NUMBER", "What", "do", "you", "think", "netzpirat", "Thanks", "for", "the", "historical", "explanation", "You", "probably", "meant", "lazy", "initialization", "instead", "of", "lazy", "starting", "This", "would", "indeed", "be", "the", "ideal", "solution", "I", "guess", "Thanks", "a", "lot", "for", "the", "explanation", "I", "guess", "I", "ll", "have", "to", "refactor", "my", "Guards", "a", "bit", "to", "conform", "to", "this", "pattern", "NUMBER", "Should", "I", "create", "a", "pull", "request", "with", "a", "cautionary", "comment", "line", "add", "for", "the", "constructor", "Hmmm", "I", "don", "t", "think", "we", "call", "start", "on", "all", "plugins", "in", "all", "cases", "NUMBER", "For", "instance", "here", "be", "the", "debug", "output", "when", "I", "start", "Guard", "with", "a", "particular", "group", "guard", "start", "g", "backend", "d", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "GNTP", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Guard", "starts", "all", "plugins", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "RSpec", "be", "run", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "Shell", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "Shell", "It", "starts", "only", "the", "plugins", "in", "that", "group", "LINK", "L", "NUMBER", "L", "NUMBER", "NUMBER", "So", "maybe", "the", "real", "issue", "be", "that", "we", "don", "t", "call", "start", "on", "Guard", "plugins", "that", "be", "not", "in", "the", "initial", "scope", "the", "scope", "at", "Guard", "s", "launch", "either", "on", "Guard", "start", "eager", "load", "or", "by", "lazy", "load", "Exact", "Thanks", "daaain", "for", "make", "us", "noticing", "an", "unoticed", "until", "then", "issue", "Thanks", "a", "lot", "for", "the", "useful", "discussion", "guys", "I", "m", "closing", "the", "issue", "as", "I", "think", "with", "the", "documentation", "letting", "other", "Guard", "developers", "know", "what", "s", "expected", "behaviour", "it", "s", "not", "an", "issue", "any", "more", "NUMBER", "Hey", "it", "seems", "if", "there", "s", "an", "ignore", "line", "in", "a", "Guardfile", "then", "guard", "show", "will", "error", "out", "dains", "MacBook", "Pro", "guard", "steering", "dain", "guard", "show", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Invalid", "Guardfile", "original", "error", "be", "undefined", "method", "ignore", "for", "nil", "NilClass", "NUMBER", "NUMBER", "NUMBER", "INFO", "I", "don", "t", "have", "time", "to", "try", "to", "fix", "this", "right", "now", "myself", "but", "wanted", "to", "report", "to", "see", "if", "this", "happens", "to", "anyone", "else", "And", "you", "have", "the", "last", "version", "of", "guard", "install", "just", "to", "be", "sure", "Oh", "yeah", "forgot", "that", "NUMBER", "yes", "I", "m", "on", "OSX", "NUMBER", "Also", "I", "can", "reproduce", "this", "with", "a", "Guard", "file", "only", "having", "ignore", "r", "tmp", "in", "it", "NUMBER", "I", "get", "this", "error", "too", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Invalid", "Guardfile", "original", "error", "be", "undefined", "method", "ignore", "for", "nil", "NilClass", "Guard", "version", "NUMBER", "Ubuntu", "NUMBER", "i", "NUMBER", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "I", "add", "ignore", "at", "the", "begin", "of", "Guardfile", "NUMBER", "As", "it", "stands", "right", "now", "to", "customize", "the", "history", "file", "you", "have", "to", "either", "use", "the", "build", "in", "bin", "switch", "or", "nothing", "NUMBER", "There", "be", "other", "issue", "such", "as", "be", "able", "to", "disable", "the", "bundler", "warning", "via", "guardrc", "that", "arise", "too", "NUMBER", "Right", "now", "you", "let", "Pry", "handle", "all", "that", "which", "means", "you", "be", "doing", "some", "of", "your", "work", "way", "too", "late", "because", "you", "be", "setting", "the", "history", "file", "before", "Pry", "even", "has", "a", "chance", "to", "do", "it", "s", "work", "NUMBER", "It", "would", "be", "nice", "if", "Guard", "took", "control", "of", "the", "guard", "RC", "file", "and", "loaded", "it", "after", "Pry", "but", "before", "anything", "else", "or", "you", "could", "go", "the", "long", "route", "and", "create", "a", "new", "set", "of", "commands", "which", "allows", "for", "at", "least", "a", "custom", "history", "file", "via", "the", "guardrc", "but", "but", "leaves", "some", "early", "guard", "options", "out", "of", "the", "question", "NUMBER", "I", "m", "willing", "to", "do", "the", "work", "of", "fix", "this", "all", "up", "actually", "I", "already", "have", "a", "patch", "to", "fix", "the", "history", "file", "problem", "but", "if", "you", "guys", "think", "the", "other", "be", "a", "good", "idea", "I", "d", "be", "more", "than", "willing", "to", "donate", "the", "time", "to", "make", "this", "happen", "NUMBER", "You", "could", "also", "play", "YAML", "games", "too", "meaning", "something", "like", "what", "Jekyll", "do", "ruby", "key", "value", "Ruby", "NUMBER", "code", "This", "makes", "it", "so", "you", "read", "the", "file", "and", "pull", "out", "the", "YAML", "options", "early", "and", "then", "let", "Pry", "load", "the", "Ruby", "NUMBER", "Awesome", "I", "ll", "work", "on", "this", "sometime", "tomorrow", "and", "get", "an", "idea", "throw", "out", "there", "for", "ya", "ll", "to", "comment", "on", "NUMBER", "Whoops", "Replace", "Pry", "s", "reset", "command", "with", "a", "command", "that", "restarts", "Guard", "NUMBER", "I", "m", "not", "even", "gonna", "touch", "on", "that", "failure", "I", "don", "t", "even", "understand", "how", "a", "simple", "change", "like", "the", "one", "I", "made", "could", "cause", "a", "problem", "so", "far", "away", "NUMBER", "so", "if", "it", "s", "truly", "my", "fault", "somebody", "please", "explain", "how", "so", "I", "can", "fix", "it", "NUMBER", "Though", "it", "might", "just", "be", "a", "problem", "with", "jRuby", "because", "it", "seems", "pretty", "inconsistent", "NUMBER", "Perhaps", "headius", "or", "somebody", "who", "commit", "to", "the", "fail", "piece", "can", "comment", "on", "the", "inconsistency", "between", "jRuby", "NUMBER", "mode", "and", "Ruby", "NUMBER", "When", "run", "guard", "on", "Windows", "with", "bundle", "exec", "guard", "with", "or", "without", "i", "option", "I", "m", "unable", "to", "shut", "it", "down", "without", "closing", "the", "terminal", "window", "it", "just", "hangs", "and", "doesn", "t", "respond", "to", "Ctrl", "C", "and", "nor", "I", "can", "enter", "any", "commands", "when", "run", "without", "i", "NUMBER", "Here", "s", "the", "Gemfile", "source", "LINK", "gem", "rake", "gem", "webrick", "gem", "rainbow", "gem", "sass", "gem", "css_parser", "gem", "compass", "gem", "slim", "gem", "wdm", "gem", "guard", "gem", "guard", "slim", "gem", "guard", "compass", "gem", "rb", "inotify", "require", "false", "gem", "rb", "fsevent", "require", "false", "gem", "rb", "fchange", "require", "false", "And", "Guardfile", "guard", "slim", "slim", "pretty", "true", "do", "watch", "r", "NUMBER", "NUMBER", "slim", "end", "guard", "compass", "do", "watch", "r", "sass", "NUMBER", "NUMBER", "s", "ac", "ss", "end", "I", "use", "both", "Windows", "and", "Linux", "for", "development", "and", "btw", "I", "m", "banned", "on", "Stack", "Overflow", "NUMBER", "I", "guess", "I", "ll", "just", "open", "another", "window", "and", "have", "guard", "run", "there", "NUMBER", "On", "OS", "X", "I", "also", "have", "this", "issue", "as", "of", "NUMBER", "Ctrl", "C", "doesn", "t", "work", "for", "me", "but", "typing", "exit", "at", "the", "pry", "prompt", "do", "NUMBER", "Only", "problem", "with", "typing", "exit", "be", "that", "I", "use", "ThinkingSphinx", "Test", "NUMBER", "art_with_autostop", "in", "my", "rspec", "test", "suite", "and", "guard", "exists", "and", "orphans", "my", "searchd", "process", "NUMBER", "Ctrl", "C", "use", "to", "get", "trapped", "by", "both", "guard", "and", "thinking", "sphinx", "such", "that", "I", "could", "get", "a", "clean", "shutdown", "NUMBER", "Now", "I", "have", "to", "type", "exit", "and", "quickly", "Ctrl", "C", "while", "guard", "be", "shutting", "down", "NUMBER", "a", "bit", "wonky", "but", "it", "works", "NUMBER", "netzpirat", "No", "neither", "Ctrl", "D", "or", "Ctrl", "Z", "work", "NUMBER", "I", "know", "that", "exit", "works", "in", "pry", "shell", "but", "on", "Windows", "I", "can", "t", "interact", "with", "it", "NUMBER", "No", "haven", "t", "tried", "Cygwin", "but", "git", "bash", "works", "normally", "I", "can", "exit", "NUMBER", "Ah", "Ctrl", "D", "do", "work", "but", "I", "can", "t", "seem", "to", "get", "my", "extra", "processes", "that", "startup", "with", "RSpec", "to", "quit", "LINK", "ThinkingSphinx", "and", "Redis", "be", "always", "left", "run", "NUMBER", "It", "seems", "like", "Ctrl", "C", "use", "to", "trigger", "the", "Kernel", "NUMBER", "at_exit", "blocks", "of", "ThinkingSphinx", "Test", "NUMBER", "art_with_autostop", "but", "Ctrl", "D", "do", "not", "NUMBER", "netzpirat", "Hmm", "I", "put", "ruby", "require", "guard", "guard", "require", "local_redis", "require", "thinking_sphinx", "test", "class", "InlineGuard", "TAG", "exit", "NUMBER", "NUMBER", "NUMBER", "INFO", "Bye", "bye", "NUMBER", "Ah", "ok", "so", "it", "s", "more", "like", "this", "ruby", "require", "guard", "guard", "module", "Guard", "class", "CleanupGuard", "TAG", "NUMBER", "guard_history", "However", "instead", "it", "keep", "it", "in", "my", "home", "directoy", "it", "create", "a", "folder", "name", "in", "my", "project", "directory", "NUMBER", "I", "tried", "again", "make", "sure", "there", "be", "NUMBER", "guard_history", "in", "my", "HOME", "and", "the", "result", "be", "weird", "NUMBER", "the", "NUMBER", "guard_history", "be", "pended", "with", "new", "records", "when", "guard", "exits", "the", "NUMBER", "NUMBER", "guard_history", "be", "still", "created", "when", "guard", "be", "finished", "loading", "NUMBER", "Checkout", "this", "screenshot", "NUMBER", "Screen", "Shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "AM", "LINK", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "b", "NUMBER", "png", "I", "get", "two", "news", "a", "workaround", "be", "find", "I", "reproduced", "the", "problem", "on", "another", "machine", "NUMBER", "Workaround", "ruby", "NUMBER", "Specs", "guard", "main", "File", "NUMBER", "expand_path", "Pry", "NUMBER", "config", "NUMBER", "history", "NUMBER", "file", "works", "in", "my", "case", "but", "the", "problem", "still", "exists", "NUMBER", "The", "IO", "behaviors", "like", "going", "through", "a", "tee", "pipeline", "both", "the", "NUMBER", "guard_history", "and", "NUMBER", "NUMBER", "guard_history", "be", "update", "NUMBER", "I", "tried", "to", "tackle", "it", "with", "use", "the", "ENV", "hash", "in", "Ruby", "ruby", "interactor", "history_file", "ENV", "HOME", "NUMBER", "guard_history", "And", "it", "worked", "now", "but", "the", "causes", "be", "still", "unknown", "NUMBER", "Reproduce", "the", "problem", "Here", "be", "gemfile", "I", "use", "in", "another", "repo", "to", "reproduce", "the", "problem", "could", "you", "reproduce", "in", "your", "local", "machine", "ruby", "gem", "guard", "gem", "guard", "rspec", "gem", "guard", "livereload", "gem", "guard", "bundler", "gem", "guard", "pow", "gem", "guard", "spork", "pry", "setups", "gem", "pry", "require", "false", "gem", "pry", "remote", "gem", "pry", "stack_explorer", "gem", "pry", "debugger", "gem", "pry", "rails", "gem", "pry", "coolline", "Sure", "NUMBER", "It", "would", "really", "help", "to", "have", "less", "clutter", "in", "terminal", "NUMBER", "If", "you", "read", "the", "README", "you", "ll", "find", "the", "clear", "option", "Hehe", "sorry", "be", "it", "possible", "to", "add", "it", "to", "some", "sort", "of", "NUMBER", "guardrc", "or", "Guardfile", "Good", "question", "netzpirat", "be", "it", "possible", "to", "add", "clear", "option", "via", "NUMBER", "guardrc", "or", "NUMBER", "pryrc", "Nice", "Thanks", "the", "info", "on", "WDM", "in", "the", "readme", "be", "not", "quite", "correct", "NUMBER", "if", "you", "include", "ruby", "group", "development", "do", "gem", "wdm", "require", "false", "end", "in", "your", "gemfile", "bundle", "install", "will", "still", "try", "to", "install", "WDM", "on", "linux", "systems", "and", "fail", "NUMBER", "for", "things", "to", "work", "you", "need", "to", "include", "ruby", "group", "development", "do", "gem", "wdm", "platform", "mingw", "require", "false", "end", "instead", "mingw", "may", "need", "to", "be", "replaced", "with", "mswin", "or", "something", "else", "depending", "on", "what", "you", "re", "work", "with", "NUMBER", "you", "re", "welcome", "NUMBER", "Fix", "a", "typo", "in", "the", "plugins", "example", "in", "the", "README", "NUMBER", "shipit", "Aha", "no", "problem", "I", "was", "joking", "because", "I", "just", "didn", "t", "understand", "what", "was", "the", "issue", "since", "the", "title", "be", "very", "cryptic", "there", "be", "no", "description", "and", "you", "close", "it", "immediately", "P", "That", "s", "totally", "awesome", "netzpirat", "I", "love", "you", "so", "much", "heart", "Really", "nice", "Thanks", "Under", "the", "interactions", "LINK", "interactions", "section", "of", "the", "documentation", "Guard", "shows", "a", "Pry", "console", "whenever", "it", "has", "nothing", "to", "do", "and", "comes", "with", "some", "Guard", "specific", "Pry", "commands", "a", "all", "Run", "all", "plugins", "NUMBER", "I", "get", "an", "undefined", "local", "variable", "a", "but", "return", "and", "all", "work", "just", "fine", "NUMBER", "NUMBER", "guard", "main", "a", "NameError", "undefined", "local", "variable", "or", "method", "a", "for", "main", "Object", "from", "pry", "NUMBER", "in", "__pry__", "NUMBER", "guard", "main", "all", "NUMBER", "NUMBER", "NUMBER", "INFO", "Run", "all", "Is", "this", "a", "problem", "with", "the", "documentation", "or", "with", "the", "implementation", "Either", "way", "I", "can", "whip", "up", "a", "pull", "request", "real", "quick", "to", "fix", "the", "issue", "NUMBER", "Let", "me", "know", "NUMBER", "Thanks", "I", "think", "that", "was", "an", "implementation", "issue", "so", "I", "fix", "it", "NUMBER", "Ok", "for", "your", "netzpirat", "It", "looks", "like", "it", "was", "easier", "than", "I", "thought", "this", "change", "include", "in", "the", "guard", "list", "output", "guard", "plugins", "which", "be", "not", "in", "a", "guard", "xxx", "gem", "by", "looking", "inside", "the", "gem", "folder", "if", "a", "lib", "guard", "TAG", "NUMBER", "rb", "file", "be", "available", "NUMBER", "I", "only", "update", "the", "code", "for", "rubygems", "NUMBER", "since", "I", "be", "not", "sure", "about", "the", "api", "provide", "below", "NUMBER", "Can", "you", "please", "add", "some", "specs", "thanks", "specs", "add", "Thanks", "guard", "core", "team", "seems", "good", "to", "you", "Other", "than", "my", "comment", "it", "seems", "good", "to", "me", "specs", "fix", "NUMBER", "schmurfy", "can", "you", "try", "an", "empty", "commit", "to", "see", "if", "travis", "ci", "build", "be", "ok", "now", "Thanks", "just", "rebased", "on", "master", "NUMBER", "Great", "thanks", "Here", "be", "the", "work", "in", "progress", "pull", "request", "as", "suggested", "by", "netzpirat", "I", "hope", "it", "s", "understandable", "NUMBER", "I", "m", "not", "sure", "how", "to", "send", "the", "notifier", "options", "hash", "in", "the", "loops", "for", "Notifier", "turn_on", "and", "Notifier", "turn_off", "Right", "now", "they", "don", "t", "send", "anything", "but", "the", "methods", "I", "write", "in", "Tmux", "turn_on", "and", "Tmux", "turn_off", "do", "accept", "a", "hash", "of", "options", "NUMBER", "Ok", "more", "work", "on", "this", "NUMBER", "Changed", "the", "logic", "on", "this", "slightly", "NUMBER", "Tmux", "save_tmux_state", "now", "saves", "the", "tmux", "state", "as", "it", "be", "shown", "by", "the", "tmux", "command", "shell", "tmux", "show", "Any", "options", "be", "saved", "into", "a", "hash", "tmux_state", "Is", "this", "an", "appropriate", "way", "to", "save", "the", "info", "inside", "the", "module", "It", "works", "but", "be", "there", "a", "different", "solution", "Tmux", "restore_tmux_state", "loops", "through", "the", "saved", "options", "and", "sets", "them", "to", "what", "they", "were", "or", "un", "sets", "the", "option", "which", "was", "created", "by", "the", "Tmux", "module", "NUMBER", "I", "hope", "this", "helps", "Thanks", "I", "ll", "update", "the", "code", "to", "reflect", "that", "NUMBER", "I", "need", "to", "write", "some", "specs", "for", "this", "NUMBER", "Ok", "I", "add", "specs", "for", "the", "save_tmux_state", "and", "restore_tmux_state", "methods", "NUMBER", "This", "be", "work", "good", "on", "my", "work", "and", "home", "machines", "NUMBER", "But", "I", "d", "like", "to", "get", "some", "input", "from", "anybody", "use", "this", "NUMBER", "This", "be", "greatly", "needed", "for", "Tmux", "users", "has", "having", "our", "bg", "and", "fg", "settings", "overwritten", "completely", "outside", "of", "the", "guard", "processes", "be", "annoying", "at", "best", "NUMBER", "cpjolicoeur", "would", "you", "mind", "test", "my", "branch", "of", "guard", "NUMBER", "It", "s", "available", "here", "LINK", "bg", "color", "I", "m", "use", "it", "in", "one", "of", "my", "projects", "now", "NUMBER", "But", "I", "put", "it", "in", "my", "gem", "file", "like", "this", "gem", "guard", "git", "LINK", "branch", "tmux", "bg", "color", "but", "for", "some", "reason", "can", "only", "run", "it", "use", "bundle", "exec", "guard", "I", "think", "it", "has", "something", "to", "do", "with", "bundler", "handle", "git", "repos", "NUMBER", "Before", "run", "it", "for", "the", "first", "time", "make", "sure", "your", "tmux", "settings", "be", "they", "way", "you", "want", "them", "NUMBER", "Anything", "display", "with", "tmux", "show", "will", "be", "saved", "and", "then", "restored", "on", "exit", "NUMBER", "Any", "extra", "settings", "made", "by", "the", "notifier", "will", "be", "unset", "NUMBER", "Thanks", "for", "the", "feedback", "I", "ll", "start", "on", "the", "change", "NUMBER", "Sure", "what", "would", "be", "the", "proper", "way", "to", "merge", "the", "upstream", "change", "into", "my", "branch", "I", "m", "a", "little", "new", "to", "this", "and", "don", "t", "want", "to", "make", "a", "mistake", "NUMBER", "Should", "I", "git", "fetch", "git", "rebase", "upstream", "master", "Yeah", "it", "should", "work", "and", "then", "you", "could", "squash", "your", "commit", "into", "one", "use", "the", "following", "method", "LINK", "commit", "with", "rebase", "NUMBER", "html", "and", "force", "push", "the", "squashed", "commit", "NUMBER", "Having", "a", "small", "issue", "on", "exit", "guard", "do", "not", "call", "Guard", "Notifier", "NUMBER", "turn_off", "I", "add", "it", "to", "lib", "guard", "NUMBER", "rb", "This", "works", "but", "i", "don", "t", "think", "it", "s", "the", "appropriate", "place", "NUMBER", "Any", "ideas", "Wow", "lots", "of", "change", "to", "grok", "over", "the", "weekend", "NUMBER", "Thanks", "for", "the", "help", "along", "the", "way", "NUMBER", "Hello", "I", "m", "use", "guard", "with", "tmux", "and", "notice", "that", "after", "exiting", "guard", "the", "last", "set", "background", "color", "red", "green", "yellow", "or", "default", "remains", "NUMBER", "Ideally", "the", "tmux", "notifier", "should", "save", "the", "state", "before", "the", "first", "notification", "and", "then", "revert", "to", "that", "state", "when", "exiting", "NUMBER", "I", "have", "be", "work", "on", "a", "fix", "for", "this", "but", "need", "some", "guidance", "NUMBER", "Is", "there", "a", "mechanism", "to", "let", "notifiers", "know", "that", "they", "be", "starting", "stopping", "NUMBER", "If", "not", "where", "could", "I", "hook", "in", "such", "functionality", "BTW", "I", "really", "like", "guard", "very", "useful", "NUMBER", "Thanks", "for", "that", "feedback", "NUMBER", "I", "m", "learning", "ruby", "and", "thought", "I", "could", "help", "out", "NUMBER", "I", "ll", "have", "a", "closer", "look", "at", "those", "methods", "NUMBER", "Cool", "thanks", "for", "your", "involvement", "rudicode", "Hi", "rudicode", "I", "m", "looking", "forward", "to", "see", "your", "pull", "request", "and", "hope", "you", "will", "love", "Ruby", "as", "much", "as", "we", "do", "Thanks", "for", "the", "welcome", "NUMBER", "So", "I", "have", "looked", "into", "the", "Notifier", "turn_off", "and", "Notifier", "turn_on", "loops", "NUMBER", "That", "s", "what", "I", "was", "looking", "for", "NUMBER", "On", "starting", "up", "guard", "The", "turn_on", "starts", "very", "early", "on", "which", "be", "good", "so", "that", "we", "can", "get", "the", "state", "of", "tmux", "settings", "NUMBER", "However", "for", "some", "reason", "Notifier", "turn_off", "be", "not", "call", "when", "typing", "exit", "at", "the", "guard", "prompt", "NUMBER", "It", "just", "sends", "an", "Info", "Bye", "Bye", "NUMBER", "and", "exits", "NUMBER", "What", "can", "we", "do", "about", "that", "netzpirat", "Is", "this", "what", "you", "have", "in", "mind", "ruby", "def", "stop", "within_preserved_state", "false", "do", "runner", "NUMBER", "run", "stop", "Guard", "UI", "NUMBER", "info", "Bye", "bye", "NUMBER", "reset", "true", "Guard", "Notifier", "NUMBER", "turn_off", "Unblocks", "main", "thread", "listener", "NUMBER", "op", "end", "end", "Recently", "I", "start", "to", "question", "the", "need", "for", "a", "guard", "plugin", "to", "have", "its", "own", "gem", "when", "the", "guard", "be", "linked", "to", "another", "gem", "and", "the", "author", "of", "both", "be", "the", "same", "I", "think", "it", "would", "really", "be", "better", "to", "have", "the", "guard", "directly", "available", "inside", "the", "gems", "it", "support", "NUMBER", "I", "already", "submitted", "a", "patch", "to", "allow", "a", "guard", "to", "specify", "its", "Guardfile", "template", "which", "was", "the", "first", "step", "but", "currently", "guard", "list", "do", "not", "list", "such", "guard", "plugins", "NUMBER", "After", "a", "quick", "look", "at", "the", "code", "what", "guard", "currently", "do", "when", "a", "list", "command", "be", "received", "be", "to", "find", "all", "gems", "with", "a", "name", "starting", "with", "guard", "and", "then", "load", "the", "guard", "plugin", "and", "list", "them", "all", "what", "I", "propose", "be", "merely", "to", "remove", "the", "name", "requirement", "and", "scan", "every", "gem", "for", "an", "available", "guard", "plugin", "NUMBER", "What", "do", "you", "think", "It", "may", "be", "a", "concern", "but", "since", "this", "be", "a", "one", "time", "call", "and", "never", "call", "inside", "an", "actual", "application", "so", "even", "if", "it", "takes", "a", "little", "more", "time", "I", "doubt", "it", "may", "be", "noticeable", "it", "may", "become", "a", "problem", "if", "you", "install", "every", "gems", "available", "on", "rubygems", "but", "otherwise", "it", "should", "be", "fine", "NUMBER", "I", "would", "even", "go", "as", "far", "as", "to", "say", "it", "may", "take", "more", "time", "to", "load", "the", "ruby", "interpreter", "than", "build", "the", "guards", "list", "most", "of", "the", "time", "I", "was", "not", "expecting", "so", "much", "interest", "xD", "Would", "turning", "this", "into", "a", "pull", "request", "help", "The", "whole", "point", "of", "the", "discussion", "was", "to", "know", "if", "you", "agree", "with", "the", "change", "required", "mainly", "scanning", "every", "gem", "instead", "of", "only", "listing", "the", "ones", "with", "a", "name", "start", "in", "guard", "I", "see", "this", "like", "in", "pseudo", "code", "guard_plugins", "GEMS", "NUMBER", "select", "do", "gem", "gem_path", "gem", "NUMBER", "path", "File", "NUMBER", "exists", "gem_path", "guard", "gem", "NUMBER", "name", "NUMBER", "rb", "end", "I", "be", "pretty", "sure", "the", "impact", "will", "be", "minimal", "and", "the", "performance", "of", "the", "guard", "list", "command", "be", "not", "a", "major", "issue", "but", "still", "that", "s", "not", "something", "I", "want", "to", "throw", "time", "at", "if", "for", "nothing", "NUMBER", "I", "also", "have", "a", "job", "I", "also", "have", "other", "things", "to", "do", "that", "s", "exactly", "why", "I", "do", "not", "work", "on", "something", "unless", "I", "be", "sure", "it", "will", "be", "accepted", "as", "a", "pull", "request", "given", "your", "answer", "I", "suppose", "it", "be", "an", "acceptable", "change", "Yeah", "this", "would", "be", "ok", "for", "me", "please", "open", "a", "pull", "request", "NUMBER", "Thanks", "I", "was", "playing", "with", "the", "idea", "of", "embedding", "the", "guard", "in", "the", "gem", "it", "support", "and", "while", "it", "works", "guard", "init", "do", "not", "because", "guard", "expects", "the", "guard", "to", "live", "in", "a", "separate", "gem", "and", "hardcode", "its", "search", "path", "NUMBER", "Why", "hardcode", "something", "that", "do", "not", "need", "to", "be", "Once", "the", "guard", "class", "has", "be", "find", "no", "magic", "should", "happen", "to", "find", "any", "relate", "location", "or", "file", "NUMBER", "What", "do", "you", "think", "I", "think", "this", "be", "a", "good", "idea", "thank", "you", "NUMBER", "WDYT", "guard", "core", "team", "documentation", "add", "The", "only", "thing", "left", "which", "be", "not", "work", "be", "guard", "list", "but", "I", "be", "sure", "how", "to", "best", "handle", "this", "except", "by", "searching", "a", "guard", "in", "every", "gem", "in", "path", "NUMBER", "Thanks", "for", "the", "doc", "NUMBER", "Regarding", "guard", "list", "this", "has", "nothing", "to", "do", "with", "this", "pull", "request", "right", "yes", "NUMBER", "and", "no", "The", "only", "reason", "for", "this", "pull", "request", "to", "exists", "be", "to", "be", "able", "to", "embed", "a", "guard", "into", "another", "gem", "so", "why", "not", "discuss", "this", "here", "further", "I", "can", "create", "a", "separate", "issue", "to", "discuss", "this", "if", "you", "prefer", "NUMBER", "All", "that", "be", "fine", "for", "me", "too", "thanks", "Just", "by", "curiosity", "on", "which", "gem", "do", "you", "want", "to", "embed", "Guard", "LINK", "I", "just", "did", "not", "felt", "the", "need", "to", "create", "one", "more", "gem", "for", "the", "guard", "for", "a", "project", "that", "will", "most", "likely", "be", "use", "only", "be", "myself", "ok", "nice", "rymal", "I", "forgot", "to", "say", "but", "I", "did", "the", "change", "to", "the", "documentation", "NUMBER", "Wow", "I", "was", "sure", "I", "had", "left", "a", "comment", "yesterday", "NUMBER", "Anyways", "yes", "please", "open", "a", "new", "issue", "for", "your", "specific", "need", "NUMBER", "Thank", "you", "for", "this", "pull", "request", "merge", "it", "now", "Hello", "In", "use", "guard", "I", "find", "that", "the", "specs", "were", "run", "twice", "NUMBER", "I", "Google", "d", "around", "and", "find", "several", "cases", "where", "other", "users", "were", "complaining", "of", "similar", "issue", "NUMBER", "I", "finally", "came", "to", "understand", "that", "it", "was", "because", "there", "were", "duplicate", "definitions", "in", "the", "Guardfile", "NUMBER", "In", "my", "case", "the", "duplications", "were", "the", "result", "of", "me", "accidentally", "run", "guard", "init", "NUMBER", "n", "times", "and", "not", "be", "keen", "to", "the", "fact", "that", "I", "had", "do", "this", "NUMBER", "I", "do", "not", "know", "if", "this", "functionality", "be", "by", "design", "but", "I", "implement", "the", "basic", "spec", "test", "and", "code", "to", "detect", "if", "there", "were", "multiple", "definitions", "and", "alert", "the", "user", "to", "their", "existence", "NUMBER", "Example", "jfolkins", "jfolkins", "mbp", "Programming", "Ruby", "guard", "bundle", "exec", "guard", "init", "NUMBER", "NUMBER", "NUMBER", "INFO", "ronn", "guard", "add", "to", "Guardfile", "feel", "free", "to", "edit", "it", "NUMBER", "NUMBER", "NUMBER", "INFO", "There", "be", "NUMBER", "definitions", "in", "your", "Guardfile", "for", "ronn", "you", "may", "want", "to", "clean", "up", "your", "Guardfile", "as", "this", "could", "cause", "issue", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "rspec", "guard", "add", "to", "Guardfile", "feel", "free", "to", "edit", "it", "NUMBER", "NUMBER", "NUMBER", "INFO", "There", "be", "NUMBER", "definitions", "in", "your", "Guardfile", "for", "rspec", "you", "may", "want", "to", "clean", "up", "your", "Guardfile", "as", "this", "could", "cause", "issue", "NUMBER", "How", "to", "duplicate", "my", "findings", "on", "OSX", "NUMBER", "cd", "git", "clone", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "cd", "guard", "vi", "Gemfile", "Add", "the", "following", "line", "and", "wq", "gem", "guard", "path", "guard", "rvm", "create", "ruby", "NUMBER", "p", "NUMBER", "guard_test_jfolkins_pre", "bundle", "install", "bundle", "exec", "guard", "init", "bundle", "exec", "guard", "init", "cat", "Guardfile", "From", "here", "you", "will", "hopefully", "see", "multiple", "definitions", "NUMBER", "How", "to", "test", "my", "proposal", "cd", "git", "clone", "git", "github", "NUMBER", "com", "jfolkins", "guard", "NUMBER", "git", "cd", "guard", "vi", "Gemfile", "Add", "the", "following", "line", "and", "wq", "gem", "guard", "path", "guard", "rvm", "create", "ruby", "NUMBER", "p", "NUMBER", "guard_test_jfolkins_post", "bundle", "install", "bundle", "exec", "guard", "init", "bundle", "exec", "guard", "init", "warning", "will", "be", "here", "Value", "Proposition", "I", "believe", "the", "solution", "I", "have", "implement", "be", "a", "reasonable", "way", "to", "clue", "in", "the", "user", "to", "potential", "issue", "in", "their", "Guard", "file", "NUMBER", "In", "my", "case", "I", "thought", "it", "was", "Guard", "be", "buggy", "and", "this", "barrier", "almost", "had", "me", "drop", "the", "use", "of", "it", "in", "my", "project", "NUMBER", "Instead", "I", "decided", "to", "be", "proactive", "and", "solve", "this", "issue", "for", "others", "NUMBER", "Thanks", "for", "your", "time", "and", "for", "the", "software", "jared", "Awesome", "thank", "you", "My", "pleasure", "Set", "fgcolor", "to", "white", "NUMBER", "When", "guard", "sets", "status", "to", "default", "bgcolor", "black", "and", "you", "be", "use", "a", "theme", "with", "black", "fonts", "in", "modeline", "the", "text", "becomes", "unvisible", "NUMBER", "Replace", "use", "of", "dev", "null", "with", "DEV_NULL", "a", "constant", "that", "be", "evaluated", "at", "load", "time", "NUMBER", "This", "snippet", "for", "identifying", "Windows", "and", "calculating", "the", "null", "device", "name", "be", "copied", "from", "bundler", "see", "LINK", "L", "NUMBER", "NUMBER", "Handle", "the", "case", "where", "quotes", "in", "the", "argument", "of", "an", "echo", "command", "may", "or", "may", "not", "be", "include", "in", "the", "result", "depending", "on", "OS", "NUMBER", "On", "Windows", "the", "shell", "command", "ECHO", "a", "returns", "a", "with", "quotes", "NUMBER", "On", "Linux", "the", "shell", "command", "ECHO", "a", "returns", "a", "without", "quotes", "NUMBER", "Yep", "seems", "good", "thanks", "NUMBER", "Please", "see", "the", "following", "pull", "req", "NUMBER", "for", "further", "details", "LINK", "After", "a", "long", "conversation", "in", "this", "issue", "LINK", "I", "ve", "find", "a", "different", "issue", "from", "rb", "readline", "NUMBER", "The", "summary", "of", "this", "issue", "be", "as", "follows", "NUMBER", "Guard", "runs", "normally", "NUMBER", "NUMBER", "Guard", "detects", "one", "file", "system", "event", "correctly", "NUMBER", "NUMBER", "Guard", "runs", "specs", "etc", "NUMBER", "for", "that", "file", "NUMBER", "NUMBER", "The", "Listener", "then", "hangs", "for", "NUMBER", "NUMBER", "minutes", "unresponsive", "to", "subsequent", "file", "change", "NUMBER", "NUMBER", "During", "the", "listener", "hanging", "other", "guard", "interactions", "be", "responsive", "NUMBER", "ie", "NUMBER", "you", "can", "hit", "enter", "to", "run", "all", "specs", "NUMBER", "Now", "the", "core", "stuff", "as", "asked", "for", "by", "the", "issue", "guidelines", "Running", "guard", "with", "bundle", "exec", "check", "NUMBER", "System", "version", "Mac", "OS", "NUMBER", "Ruby", "NUMBER", "p", "NUMBER", "Gem", "NUMBER", "Bundler", "NUMBER", "No", "shared", "folder", "system", "run", "on", "local", "disk", "Gemfile", "source", "LINK", "gem", "rails", "NUMBER", "gem", "rake", "gem", "bcrypt", "ruby", "gem", "jquery", "rails", "gem", "haml", "rails", "gem", "jetpack", "rails", "gem", "rdiscount", "gem", "rabl", "gem", "sorcery", "gem", "cancan", "gem", "stripe", "gem", "impressionist", "gem", "simple_form", "gem", "kaminari", "gem", "sorted", "gem", "friendly_id", "gem", "rmagick", "gem", "carrierwave", "gem", "fog", "gem", "rack", "raw", "upload", "gem", "exifr", "gem", "meta_search", "gem", "squeel", "gem", "randumb", "gem", "has_serialized", "gem", "geocoder", "gem", "carmen", "NUMBER", "For", "Heroku", "gem", "foreman", "gem", "thin", "gem", "airbrake", "group", "assets", "do", "gem", "sass", "rails", "gem", "coffee", "rails", "gem", "uglifier", "end", "group", "production", "staging", "do", "gem", "pg", "end", "group", "development", "staging", "do", "gem", "letter_opener", "end", "group", "development", "test", "do", "gem", "sqlite", "NUMBER", "gem", "debugger", "gem", "rspec", "rails", "gem", "capybara", "gem", "spork", "gem", "rb", "fsevent", "gem", "rb", "readline", "gem", "guard", "github", "guard", "guard", "branch", "master", "gem", "guard", "spork", "gem", "guard", "rspec", "gem", "guard", "pow", "end", "group", "test", "do", "gem", "shoulda", "matchers", "gem", "fabrication", "end", "Guardfile", "guard", "pow", "do", "watch", "NUMBER", "powrc", "watch", "NUMBER", "powenv", "watch", "Gemfile", "watch", "Gemfile", "NUMBER", "lock", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "r", "config", "environments", "NUMBER", "NUMBER", "rb", "watch", "r", "config", "initializers", "NUMBER", "NUMBER", "rb", "end", "guard", "spork", "rspec_env", "RAILS_ENV", "test", "do", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "r", "config", "environments", "NUMBER", "NUMBER", "rb", "watch", "r", "config", "initializers", "NUMBER", "NUMBER", "rb", "watch", "Gemfile", "watch", "Gemfile", "NUMBER", "lock", "watch", "spec", "spec_helper", "NUMBER", "rb", "end", "guard", "rspec", "all_on_start", "false", "all_after_pass", "false", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "watch", "r", "app", "views", "NUMBER", "NUMBER", "NUMBER", "erb", "haml", "m", "spec", "request", "m", "NUMBER", "_spec", "NUMBER", "rb", "Capybara", "request", "specs", "end", "Now", "here", "be", "what", "happens", "when", "I", "run", "guard", "debug", "guard", "debug", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "emacsclient", "eval", "NUMBER", "NUMBER", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "Andrew", "Code", "placeology", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "Pow", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "Pow", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "Spork", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Killing", "Spork", "servers", "with", "PID", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "Spork", "for", "RSpec", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "guard", "spork", "command", "execution", "bundle", "exec", "spork", "p", "NUMBER", "Using", "RSpec", "Preloading", "Rails", "environment", "Loading", "Spork", "NUMBER", "prefork", "block", "NUMBER", "Spork", "be", "ready", "and", "listening", "on", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Spork", "server", "for", "RSpec", "successfully", "start", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "Spork", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "RSpec", "be", "run", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "infocmp", "C", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "infocmp", "C", "r", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "infocmp", "C", "r", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "size", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "infocmp", "C", "r", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "a", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "a", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "a", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "a", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "echo", "icrnl", "cbreak", "pass", "NUMBER", "ixoff", "NUMBER", "guard", "main", "Guard", "be", "now", "waiting", "NUMBER", "I", "save", "app", "models", "tag", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Stop", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "gfmt", "NUMBER", "cflag", "NUMBER", "b", "NUMBER", "iflag", "NUMBER", "b", "NUMBER", "lflag", "NUMBER", "cb", "oflag", "NUMBER", "discard", "f", "dsusp", "NUMBER", "eof", "NUMBER", "eol", "ff", "eol", "NUMBER", "ff", "erase", "NUMBER", "f", "intr", "NUMBER", "kill", "NUMBER", "lnext", "NUMBER", "min", "NUMBER", "quit", "NUMBER", "c", "reprint", "NUMBER", "start", "NUMBER", "status", "NUMBER", "stop", "NUMBER", "susp", "NUMBER", "a", "time", "NUMBER", "werase", "NUMBER", "ispeed", "NUMBER", "ospeed", "NUMBER", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "RSpec", "run_on_modifications", "with", "spec", "models", "tag_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Running", "spec", "models", "tag_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "bundle", "exec", "rspec", "help", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "bundle", "exec", "rspec", "f", "progress", "r", "Users", "Andrew", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatter", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "models", "tag_spec", "NUMBER", "rb", "Running", "test", "with", "args", "color", "failure", "exit", "code", "NUMBER", "format", "progress", "format", "Guard", "RSpec", "Formatter", "out", "dev", "null", "require", "Users", "Andrew", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatter", "NUMBER", "rb", "spec", "models", "tag_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Done", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_end", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "guard", "main", "Guard", "be", "now", "waiting", "NUMBER", "I", "save", "spec", "models", "comment_spec", "NUMBER", "rb", "Nothing", "happens", "for", "a", "while", "although", "the", "computer", "be", "humming", "away", "like", "it", "s", "thinking", "about", "something", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Stop", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "gfmt", "NUMBER", "cflag", "NUMBER", "b", "NUMBER", "iflag", "NUMBER", "b", "NUMBER", "lflag", "NUMBER", "cb", "oflag", "NUMBER", "discard", "f", "dsusp", "NUMBER", "eof", "NUMBER", "eol", "ff", "eol", "NUMBER", "ff", "erase", "NUMBER", "f", "intr", "NUMBER", "kill", "NUMBER", "lnext", "NUMBER", "min", "NUMBER", "quit", "NUMBER", "c", "reprint", "NUMBER", "start", "NUMBER", "status", "NUMBER", "stop", "NUMBER", "susp", "NUMBER", "a", "time", "NUMBER", "werase", "NUMBER", "ispeed", "NUMBER", "ospeed", "NUMBER", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Stop", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "gfmt", "NUMBER", "cflag", "NUMBER", "b", "NUMBER", "iflag", "NUMBER", "b", "NUMBER", "lflag", "NUMBER", "cb", "oflag", "NUMBER", "discard", "f", "dsusp", "NUMBER", "eof", "NUMBER", "eol", "ff", "eol", "NUMBER", "ff", "erase", "NUMBER", "f", "intr", "NUMBER", "kill", "NUMBER", "lnext", "NUMBER", "min", "NUMBER", "quit", "NUMBER", "c", "reprint", "NUMBER", "start", "NUMBER", "status", "NUMBER", "stop", "NUMBER", "susp", "NUMBER", "a", "time", "NUMBER", "werase", "NUMBER", "ispeed", "NUMBER", "ospeed", "NUMBER", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "RSpec", "run_on_modifications", "with", "spec", "models", "comment_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Running", "spec", "models", "comment_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "bundle", "exec", "rspec", "f", "progress", "r", "Users", "Andrew", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatter", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "models", "comment_spec", "NUMBER", "rb", "Running", "test", "with", "args", "color", "failure", "exit", "code", "NUMBER", "format", "progress", "format", "Guard", "RSpec", "Formatter", "out", "dev", "null", "require", "Users", "Andrew", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatter", "NUMBER", "rb", "spec", "models", "comment_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Done", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_end", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "guard", "main", "NUMBER", "minutes", "and", "NUMBER", "seconds", "later", "guard", "runs", "comment_spec", "NUMBER", "rb", "Now", "to", "recap", "what", "I", "ve", "tried", "with", "no", "effect", "Guard", "NUMBER", "x", "vs", "NUMBER", "x", "Guard", "on", "master", "branch", "With", "and", "without", "guard", "spork", "With", "and", "without", "guard", "pow", "With", "and", "without", "rb", "readline", "The", "above", "logs", "be", "guard", "on", "master", "branch", "with", "rb", "readline", "gem", "NUMBER", "I", "also", "tried", "run", "a", "bare", "guard", "project", "as", "per", "these", "instructions", "LINK", "issuecomment", "NUMBER", "and", "that", "worked", "without", "perceptible", "lag", "NUMBER", "So", "that", "s", "where", "I", "m", "at", "NUMBER", "Thanks", "for", "your", "help", "Thank", "you", "for", "such", "a", "great", "description", "this", "be", "how", "all", "issue", "should", "be", "file", "NUMBER", "Can", "you", "test", "if", "the", "interactor", "has", "some", "influence", "on", "the", "Guard", "behavior", "by", "turning", "it", "off", "in", "your", "Guardfile", "with", "Ruby", "interactor", "off", "With", "interactor", "off", "same", "result", "guard", "debug", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "emacsclient", "eval", "NUMBER", "NUMBER", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "Andrew", "Code", "placeology", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "Pow", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "Pow", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "Spork", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Killing", "Spork", "servers", "with", "PID", "NUMBER", "NUMBER", "NUMBER", "INFO", "Starting", "Spork", "for", "RSpec", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "guard", "spork", "command", "execution", "bundle", "exec", "spork", "p", "NUMBER", "Using", "RSpec", "Preloading", "Rails", "environment", "Loading", "Spork", "NUMBER", "prefork", "block", "NUMBER", "Spork", "be", "ready", "and", "listening", "on", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Spork", "server", "for", "RSpec", "successfully", "start", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "Spork", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "RSpec", "be", "run", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "save", "models", "tag", "NUMBER", "rb", "spec", "runs", "immediately", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "RSpec", "run_on_modifications", "with", "spec", "models", "tag_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Running", "spec", "models", "tag_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "bundle", "exec", "rspec", "help", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "bundle", "exec", "rspec", "f", "progress", "r", "Users", "Andrew", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatter", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "models", "tag_spec", "NUMBER", "rb", "Running", "test", "with", "args", "color", "failure", "exit", "code", "NUMBER", "format", "progress", "format", "Guard", "RSpec", "Formatter", "out", "dev", "null", "require", "Users", "Andrew", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatter", "NUMBER", "rb", "spec", "models", "tag_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Done", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_end", "executed", "for", "Guard", "RSpec", "save", "models", "kueue", "NUMBER", "rb", "nothing", "happens", "for", "several", "minutes", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "RSpec", "run_on_modifications", "with", "spec", "models", "kueue_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Running", "spec", "models", "kueue_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "bundle", "exec", "rspec", "f", "progress", "r", "Users", "Andrew", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatter", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "models", "kueue_spec", "NUMBER", "rb", "Running", "test", "with", "args", "color", "failure", "exit", "code", "NUMBER", "format", "progress", "format", "Guard", "RSpec", "Formatter", "out", "dev", "null", "require", "Users", "Andrew", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatter", "NUMBER", "rb", "spec", "models", "kueue_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Done", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_end", "executed", "for", "Guard", "RSpec", "I", "install", "rbenv", "and", "Ruby", "NUMBER", "p", "NUMBER", "with", "readline", "from", "Homebrew", "NUMBER", "Then", "I", "set", "up", "a", "test", "project", "with", "your", "Gemfile", "and", "Guardfile", "contents", "but", "I", "still", "can", "t", "reproduce", "it", "NUMBER", "To", "be", "honest", "I", "don", "t", "have", "a", "clue", "what", "the", "problem", "might", "be", "NUMBER", "When", "did", "the", "lag", "start", "to", "appear", "Was", "it", "always", "like", "that", "What", "about", "polling", "with", "bundle", "exec", "guard", "p", "or", "playing", "with", "the", "Listen", "latency", "option", "bundle", "exec", "guard", "l", "NUMBER", "NUMBER", "be", "the", "default", "guard", "core", "team", "Has", "anyone", "an", "idea", "what", "might", "cause", "the", "issue", "What", "s", "frustrating", "be", "that", "otherwise", "similar", "apps", "on", "my", "machine", "don", "t", "experience", "the", "bug", "either", "NUMBER", "For", "instance", "here", "be", "the", "gemfile", "of", "an", "app", "that", "Guard", "runs", "perfectly", "with", "source", "LINK", "gem", "rails", "NUMBER", "gem", "thin", "gem", "jquery", "rails", "gem", "haml", "rails", "gem", "jetpack", "rails", "gem", "simple_form", "gem", "rdiscount", "gem", "tinymce", "rails", "gem", "geocoder", "gem", "kaminari", "gem", "gibbon", "gem", "micro_auth", "group", "assets", "do", "gem", "sass", "rails", "gem", "coffee", "rails", "gem", "uglifier", "end", "group", "production", "do", "gem", "pg", "end", "group", "development", "do", "gem", "letter_opener", "end", "group", "development", "test", "do", "gem", "sqlite", "NUMBER", "gem", "rspec", "rails", "gem", "capybara", "gem", "capybara", "webkit", "gem", "fabrication", "gem", "database_cleaner", "gem", "spork", "gem", "rb", "fsevent", "gem", "growl", "gem", "guard", "gem", "guard", "pow", "gem", "guard", "spork", "gem", "guard", "rspec", "end", "So", "I", "m", "really", "at", "a", "loss", "NUMBER", "I", "ll", "try", "playing", "with", "polling", "and", "latency", "and", "see", "if", "I", "can", "find", "any", "other", "leads", "NUMBER", "I", "wish", "I", "could", "see", "what", "my", "computer", "was", "doing", "in", "the", "background", "when", "guard", "lags", "like", "this", "I", "can", "hear", "the", "computer", "thinking", "I", "just", "don", "t", "know", "what", "it", "s", "thinking", "about", "I", "m", "very", "sorry", "that", "we", "cannot", "help", "you", "but", "it", "looks", "like", "this", "be", "a", "very", "specific", "issue", "that", "no", "one", "can", "reproduce", "NUMBER", "What", "about", "use", "a", "debugger", "to", "have", "a", "look", "what", "the", "threads", "be", "doing", "RubyMine", "has", "a", "great", "multi", "thread", "aware", "debugger", "that", "you", "can", "use", "to", "debug", "a", "Guard", "session", "NUMBER", "See", "LINK", "it", "impossible", "to", "use", "guard", "with", "rubymine", "NUMBER", "NUMBER", "on", "how", "to", "setup", "RubyMine", "to", "start", "Guard", "NUMBER", "I", "m", "having", "a", "similar", "problem", "NUMBER", "I", "ll", "start", "up", "guard", "it", "ll", "run", "all", "RSpec", "specs", "correctly", "and", "thereafter", "fail", "to", "notice", "any", "file", "change", "I", "make", "NUMBER", "I", "can", "kick", "them", "off", "manually", "in", "the", "pry", "console", "with", "c", "filename", "but", "of", "course", "that", "rather", "defeats", "the", "purpose", "of", "Guard", "NUMBER", "Another", "clue", "be", "that", "Guard", "won", "t", "exit", "correctly", "NUMBER", "The", "_way_", "it", "fail", "depends", "on", "whether", "I", "run", "it", "with", "force", "polling", "or", "not", "_With", "FSEvent", "monitoring", "OS", "X", "NUMBER", "_", "I", "ll", "type", "exit", "and", "get", "the", "INFO", "Bye", "bye", "NUMBER", "but", "it", "will", "then", "hang", "NUMBER", "When", "I", "hit", "CTRL", "C", "it", "gives", "me", "the", "info", "again", "and", "then", "the", "following", "backtrace", "NUMBER", "guard", "main", "exit", "NUMBER", "NUMBER", "NUMBER", "INFO", "Bye", "bye", "NUMBER", "then", "hangs", "until", "I", "hit", "CTRL", "C", "NUMBER", "NUMBER", "NUMBER", "INFO", "Bye", "bye", "NUMBER", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "listen", "NUMBER", "lib", "listen", "adapters", "darwin", "NUMBER", "rb", "NUMBER", "in", "join", "Interrupt", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "listen", "NUMBER", "lib", "listen", "adapters", "darwin", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "listen", "NUMBER", "lib", "listen", "listener", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "bin", "guard", "NUMBER", "_With", "p", "for", "forced", "polling", "_", "It", "doesn", "t", "hang", "at", "all", "when", "exiting", "with", "forced", "polling", "enable", "but", "it", "do", "give", "me", "a", "thread", "deadlock", "error", "NUMBER", "guard", "main", "exit", "NUMBER", "NUMBER", "NUMBER", "INFO", "Bye", "bye", "NUMBER", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "synchronize", "Thread", "join", "deadlock", "NUMBER", "x", "NUMBER", "f", "NUMBER", "mutual", "join", "NUMBER", "x", "NUMBER", "ThreadError", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "listen", "NUMBER", "lib", "listen", "adapters", "polling", "NUMBER", "rb", "NUMBER", "in", "join", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "listen", "NUMBER", "lib", "listen", "adapters", "polling", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "listen", "NUMBER", "lib", "listen", "listener", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "bin", "guard", "NUMBER", "And", "finally", "NUMBER", "_On", "old", "Guard", "NUMBER", "version", "_", "In", "case", "it", "s", "useful", "for", "investigating", "I", "should", "note", "that", "I", "first", "spotted", "this", "failure", "when", "we", "had", "an", "older", "version", "NUMBER", "in", "our", "Gemfile", "NUMBER", "Behavior", "was", "similar", "but", "the", "backtrace", "was", "different", "NUMBER", "With", "forced", "polling", "both", "on", "and", "off", "exit", "would", "hang", "and", "hitting", "CTRL", "C", "would", "give", "us", "the", "following", "NUMBER", "NUMBER", "NUMBER", "INFO", "Bye", "bye", "NUMBER", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "listen", "NUMBER", "lib", "listen", "turnstile", "NUMBER", "rb", "NUMBER", "in", "pop", "Interrupt", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "listen", "NUMBER", "lib", "listen", "turnstile", "NUMBER", "rb", "NUMBER", "in", "wait", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "Steve", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "cg", "bin", "guard", "NUMBER", "I", "hope", "this", "be", "helpful", "NUMBER", "I", "know", "my", "Ruby", "and", "RSpec", "version", "be", "old", "but", "this", "be", "a", "legacy", "Rails", "NUMBER", "app", "I", "ve", "inherited", "NUMBER", "Until", "this", "issue", "be", "resolve", "I", "m", "going", "to", "have", "to", "regretfully", "go", "back", "to", "Autotest", "for", "this", "particular", "project", "NUMBER", "SFEley", "Your", "traces", "etc", "NUMBER", "be", "the", "same", "behavior", "I", "m", "get", "NUMBER", "Thanks", "for", "the", "stack", "traces", "that", "will", "certainly", "help", "NUMBER", "I", "m", "going", "to", "review", "the", "Listen", "Guard", "thread", "coordination", "and", "will", "also", "give", "the", "suggested", "thread", "option", "from", "NUMBER", "a", "try", "NUMBER", "Meanwhile", "you", "can", "just", "downgrade", "to", "NUMBER", "in", "your", "Gemfile", "Ruby", "gem", "guard", "NUMBER", "I", "think", "my", "issue", "be", "very", "similar", "but", "downgrading", "to", "NUMBER", "did", "not", "resolve", "it", "NUMBER", "In", "my", "case", "after", "run", "all", "test", "guard", "no", "longer", "responds", "to", "file", "change", "NUMBER", "It", "doesn", "t", "matter", "if", "the", "call", "to", "run", "all", "specs", "happened", "on", "the", "command", "line", "or", "within", "guard", "so", "it", "be", "very", "strange", "NUMBER", "lukaso", "You", "need", "to", "LINK", "proper", "Readline", "support", "to", "Ruby", "on", "Mac", "OS", "X", "Thanks", "Michael", "NUMBER", "I", "did", "the", "pure", "ruby", "version", "listed", "as", "easiest", "way", "NUMBER", "Maybe", "that", "way", "doesn", "t", "work", "in", "all", "cases", "lukaso", "It", "depends", "on", "the", "Ruby", "version", "and", "patch", "version", "NUMBER", "The", "latest", "patch", "sets", "should", "have", "a", "fix", "include", "however", "I", "think", "compile", "proper", "readline", "support", "directly", "into", "Ruby", "be", "the", "best", "solution", "NUMBER", "OK", "NUMBER", "Thanks", "NUMBER", "Will", "look", "into", "it", "NUMBER", "On", "NUMBER", "Nov", "NUMBER", "at", "NUMBER", "NUMBER", "Michael", "Kessler", "notifications", "github", "NUMBER", "com", "write", "lukaso", "It", "depends", "on", "the", "Ruby", "version", "and", "patch", "version", "NUMBER", "The", "latest", "patch", "sets", "should", "have", "a", "fix", "include", "however", "I", "think", "compile", "proper", "readline", "support", "directly", "into", "Ruby", "be", "the", "best", "solution", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "I", "install", "rb", "fsevent", "and", "after", "I", "change", "a", "spec", "the", "suite", "isn", "t", "run", "NUMBER", "The", "only", "way", "to", "trigger", "it", "be", "to", "hit", "enter", "NUMBER", "My", "prompt", "looks", "like", "this", "NUMBER", "guard", "main", "Which", "be", "unique", "for", "this", "project", "NUMBER", "I", "haven", "t", "notice", "this", "before", "NUMBER", "Any", "tips", "to", "investigate", "issue", "Hi", "please", "respect", "the", "guidelines", "for", "contribute", "LINK", "so", "we", "re", "able", "to", "understand", "your", "issue", "and", "help", "you", "NUMBER", "Thank", "you", "in", "advance", "NUMBER", "Sorry", "thank", "you", "NUMBER", "Attaching", "miss", "file", "NUMBER", "guard", "rspec", "version", "NUMBER", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "Rails", "example", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "erb", "NUMBER", "haml", "m", "spec", "m", "NUMBER", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "controllers", "NUMBER", "_", "controller", "NUMBER", "rb", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "m", "NUMBER", "s", "m", "NUMBER", "_", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "Capybara", "request", "specs", "watch", "r", "app", "views", "NUMBER", "NUMBER", "NUMBER", "erb", "haml", "m", "spec", "request", "m", "NUMBER", "_spec", "NUMBER", "rb", "Turnip", "features", "and", "steps", "watch", "r", "spec", "acceptance", "NUMBER", "NUMBER", "feature", "watch", "r", "spec", "acceptance", "steps", "NUMBER", "_steps", "NUMBER", "rb", "m", "Dir", "File", "NUMBER", "join", "m", "NUMBER", "NUMBER", "feature", "NUMBER", "spec", "acceptance", "end", "Guardfile", "gem", "rails", "NUMBER", "gem", "rake", "NUMBER", "group", "test", "development", "do", "gem", "rspec", "rails", "NUMBER", "gem", "ruby", "prof", "gem", "test", "unit", "gem", "rb", "inotify", "require", "false", "gem", "rb", "fsevent", "require", "false", "gem", "rb", "fchange", "require", "false", "gem", "terminal", "notifier", "guard", "gem", "database_cleaner", "gem", "factory_girl_rails", "gem", "guard", "gem", "guard", "rspec", "end", "Gemfile", "Ok", "thanks", "NUMBER", "Are", "you", "sure", "the", "file", "you", "save", "be", "catch", "by", "a", "watch", "definition", "and", "if", "yes", "be", "there", "a", "spec", "file", "that", "correspond", "to", "it", "Yes", "I", "m", "change", "a", "file", "in", "spec", "controllers", "NUMBER", "If", "I", "try", "something", "in", "spec", "models", "I", "don", "t", "get", "anything", "triggered", "either", "NUMBER", "I", "m", "use", "the", "same", "Guardfile", "on", "another", "project", "that", "do", "catch", "it", "NUMBER", "Also", "I", "don", "t", "know", "why", "Guard", "be", "returning", "with", "a", "prompt", "like", "this", "NUMBER", "guard", "main", "Killed", "Does", "the", "issue", "still", "occur", "if", "you", "use", "polling", "instead", "of", "rb", "fsevent", "Since", "version", "NUMBER", "Guard", "be", "use", "Pry", "as", "its", "interactor", "LINK", "that", "s", "why", "you", "see", "this", "prompt", "NUMBER", "guard", "main", "NUMBER", "How", "long", "do", "it", "take", "to", "poll", "I", "commented", "out", "the", "rb", "fsevent", "gem", "and", "it", "doesn", "t", "seem", "like", "anything", "update", "after", "NUMBER", "minute", "waiting", "NUMBER", "Default", "latency", "for", "polling", "be", "NUMBER", "second", "NUMBER", "A", "few", "more", "hints", "to", "find", "the", "issue", "run", "Guard", "in", "debug", "mode", "LINK", "d", "debug", "option", "ensure", "again", "that", "the", "issue", "be", "not", "relate", "to", "your", "watch", "definitions", "NUMBER", "For", "instance", "create", "a", "watch", "a", "specific", "path", "that", "exists", "NUMBER", "rb", "a", "specific", "spec", "file", "that", "exist_spec", "NUMBER", "rb", "save", "a", "specific", "path", "that", "exists", "NUMBER", "rb", "and", "see", "if", "the", "associated", "spec", "be", "run", "NUMBER", "If", "you", "still", "don", "t", "find", "the", "issue", "please", "also", "share", "your", "Gemfile", "NUMBER", "lock", "NUMBER", "Still", "doesn", "t", "seem", "to", "detect", "a", "write", "to", "that", "file", "NUMBER", "I", "use", "watch", "spec", "controllers", "hello_controller_spec", "NUMBER", "rb", "spec", "controllers", "hello_controller_spec", "NUMBER", "rb", "And", "nada", "on", "change", "NUMBER", "GEM", "remote", "LINK", "specs", "aaronh", "chronic", "NUMBER", "abstract", "NUMBER", "actionmailer", "NUMBER", "actionpack", "NUMBER", "mail", "NUMBER", "actionpack", "NUMBER", "activemodel", "NUMBER", "activesupport", "NUMBER", "builder", "NUMBER", "erubis", "NUMBER", "i", "NUMBER", "n", "NUMBER", "rack", "NUMBER", "rack", "mount", "NUMBER", "rack", "test", "NUMBER", "tzinfo", "NUMBER", "active_shipping", "NUMBER", "activesupport", "NUMBER", "activemerchant", "NUMBER", "activesupport", "NUMBER", "braintree", "NUMBER", "builder", "NUMBER", "json", "NUMBER", "activemodel", "NUMBER", "activesupport", "NUMBER", "builder", "NUMBER", "i", "NUMBER", "n", "NUMBER", "activerecord", "NUMBER", "activemodel", "NUMBER", "activesupport", "NUMBER", "arel", "NUMBER", "tzinfo", "NUMBER", "activeresource", "NUMBER", "activemodel", "NUMBER", "activesupport", "NUMBER", "activesupport", "NUMBER", "addressable", "NUMBER", "arel", "NUMBER", "bcrypt", "ruby", "NUMBER", "braintree", "NUMBER", "builder", "NUMBER", "builder", "NUMBER", "cancan", "NUMBER", "capistrano", "NUMBER", "highline", "net", "scp", "NUMBER", "net", "sftp", "NUMBER", "net", "ssh", "NUMBER", "net", "ssh", "gateway", "NUMBER", "carrierwave", "NUMBER", "activesupport", "NUMBER", "ckeditor", "NUMBER", "mime", "types", "NUMBER", "orm_adapter", "NUMBER", "client_side_validations", "NUMBER", "cocaine", "NUMBER", "coderay", "NUMBER", "database_cleaner", "NUMBER", "devise", "NUMBER", "bcrypt", "ruby", "NUMBER", "orm_adapter", "NUMBER", "warden", "NUMBER", "diff", "lcs", "NUMBER", "erubis", "NUMBER", "abstract", "NUMBER", "exception_notification_rails", "NUMBER", "NUMBER", "factory_girl", "NUMBER", "activesupport", "NUMBER", "factory_girl_rails", "NUMBER", "factory_girl", "NUMBER", "railties", "NUMBER", "faraday", "NUMBER", "addressable", "NUMBER", "multipart", "post", "NUMBER", "rack", "NUMBER", "fastercsv", "NUMBER", "gdata_", "NUMBER", "NUMBER", "guard", "NUMBER", "listen", "NUMBER", "lumberjack", "NUMBER", "pry", "NUMBER", "thor", "NUMBER", "guard", "rspec", "NUMBER", "guard", "NUMBER", "hashie", "NUMBER", "highline", "NUMBER", "i", "NUMBER", "n", "NUMBER", "json", "NUMBER", "listen", "NUMBER", "lumberjack", "NUMBER", "mail", "NUMBER", "activesupport", "NUMBER", "i", "NUMBER", "n", "NUMBER", "mime", "types", "NUMBER", "treetop", "NUMBER", "meta_where", "NUMBER", "activerecord", "NUMBER", "activesupport", "NUMBER", "arel", "NUMBER", "method_source", "NUMBER", "mime", "types", "NUMBER", "multi_json", "NUMBER", "multipart", "post", "NUMBER", "mysql", "NUMBER", "mysql", "NUMBER", "NUMBER", "net", "scp", "NUMBER", "net", "ssh", "NUMBER", "net", "sftp", "NUMBER", "net", "ssh", "NUMBER", "net", "ssh", "NUMBER", "net", "ssh", "gateway", "NUMBER", "net", "ssh", "NUMBER", "nokogiri", "NUMBER", "oauth", "NUMBER", "NUMBER", "faraday", "NUMBER", "multi_json", "NUMBER", "omniauth", "NUMBER", "hashie", "NUMBER", "rack", "omniauth", "facebook", "NUMBER", "omniauth", "oauth", "NUMBER", "NUMBER", "omniauth", "oauth", "NUMBER", "NUMBER", "oauth", "NUMBER", "NUMBER", "omniauth", "NUMBER", "orm_adapter", "NUMBER", "paperclip", "NUMBER", "activerecord", "NUMBER", "activesupport", "NUMBER", "cocaine", "NUMBER", "mime", "types", "polyglot", "NUMBER", "pry", "NUMBER", "coderay", "NUMBER", "method_source", "NUMBER", "slop", "NUMBER", "rack", "NUMBER", "rack", "mount", "NUMBER", "rack", "NUMBER", "rack", "test", "NUMBER", "rack", "NUMBER", "rails", "NUMBER", "actionmailer", "NUMBER", "actionpack", "NUMBER", "activerecord", "NUMBER", "activeresource", "NUMBER", "activesupport", "NUMBER", "bundler", "NUMBER", "railties", "NUMBER", "railties", "NUMBER", "actionpack", "NUMBER", "activesupport", "NUMBER", "rake", "NUMBER", "rdoc", "NUMBER", "thor", "NUMBER", "rake", "NUMBER", "rdoc", "NUMBER", "rmagick", "NUMBER", "rspec", "NUMBER", "rspec", "core", "NUMBER", "rspec", "expectations", "NUMBER", "rspec", "mocks", "NUMBER", "rspec", "core", "NUMBER", "rspec", "expectations", "NUMBER", "diff", "lcs", "NUMBER", "rspec", "mocks", "NUMBER", "rspec", "rails", "NUMBER", "actionpack", "NUMBER", "activesupport", "NUMBER", "railties", "NUMBER", "rspec", "NUMBER", "ruby", "prof", "NUMBER", "rvm", "capistrano", "NUMBER", "capistrano", "NUMBER", "slop", "NUMBER", "smurf", "NUMBER", "sqlite", "NUMBER", "NUMBER", "sqlite", "NUMBER", "ruby", "NUMBER", "sqlite", "NUMBER", "NUMBER", "terminal", "notifier", "guard", "NUMBER", "test", "unit", "NUMBER", "thor", "NUMBER", "treetop", "NUMBER", "polyglot", "polyglot", "NUMBER", "tzinfo", "NUMBER", "warden", "NUMBER", "rack", "NUMBER", "whenever", "NUMBER", "aaronh", "chronic", "NUMBER", "activesupport", "NUMBER", "PLATFORMS", "ruby", "DEPENDENCIES", "active_shipping", "activemerchant", "awesome_nested_set", "bcrypt", "ruby", "cancan", "capistrano", "NUMBER", "carrierwave", "ckeditor", "NUMBER", "client_side_validations", "database_cleaner", "devise", "exception_notification_rails", "NUMBER", "factory_girl_rails", "fastercsv", "gdata_", "NUMBER", "guard", "guard", "rspec", "json", "NUMBER", "meta_where", "mysql", "NUMBER", "mysql", "NUMBER", "nokogiri", "omniauth", "facebook", "paperclip", "rails", "NUMBER", "rake", "NUMBER", "rmagick", "rspec", "rails", "NUMBER", "ruby", "prof", "rvm", "capistrano", "smurf", "sqlite", "NUMBER", "ruby", "terminal", "notifier", "guard", "test", "unit", "whenever", "What", "s", "odd", "be", "that", "polling", "doesn", "t", "seem", "to", "work", "either", "NUMBER", "Are", "you", "run", "Guard", "with", "Bundler", "bunde", "exec", "guard", "Can", "you", "provide", "the", "debug", "output", "of", "Guard", "bunde", "exec", "guard", "d", "Can", "you", "test", "if", "the", "watch", "expression", "be", "work", "properly", "by", "output", "a", "log", "statement", "like", "watch", "r", "app", "controllers", "NUMBER", "_", "controller", "NUMBER", "rb", "do", "m", "run", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "m", "NUMBER", "s", "m", "NUMBER", "_", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "puts", "Should", "run", "now", "run", "NUMBER", "inspect", "run", "end", "Since", "NUMBER", "x", "I", "ve", "had", "similar", "issue", "where", "a", "file", "be", "run", "once", "and", "thereafter", "no", "further", "change", "be", "detected", "or", "they", "be", "only", "detected", "after", "a", "NUMBER", "NUMBER", "second", "delay", "NUMBER", "This", "be", "with", "rb", "fsevent", "NUMBER", "With", "polling", "the", "behavior", "be", "the", "same", "the", "delay", "be", "just", "longer", "NUMBER", "NUMBER", "NUMBER", "minutes", "In", "my", "case", "I", "m", "absolutely", "NUMBER", "certain", "the", "correct", "file", "be", "be", "watched", "a", "because", "they", "do", "run", "just", "after", "a", "crazy", "delay", "and", "b", "because", "this", "same", "guardfile", "has", "be", "work", "on", "this", "app", "for", "a", "long", "time", "NUMBER", "I", "m", "looking", "into", "this", "further", "and", "will", "post", "more", "information", "if", "I", "can", "figure", "anything", "else", "out", "NUMBER", "Can", "you", "please", "test", "the", "cleanup", "branch", "This", "branch", "has", "remove", "some", "threading", "code", "which", "may", "solve", "the", "problem", "gem", "guard", "github", "guard", "guard", "branch", "interactor", "cleanup", "Thanks", "NUMBER", "On", "cleanup", "branch", "the", "performance", "seems", "marginally", "better", "but", "I", "m", "still", "having", "a", "large", "delay", "with", "file", "NUMBER", "Let", "me", "try", "and", "describe", "the", "behavior", "I", "m", "observing", "It", "seems", "like", "Guard", "will", "only", "run", "a", "test", "every", "NUMBER", "NUMBER", "seconds", "NUMBER", "If", "nothing", "has", "change", "in", "that", "long", "then", "it", "will", "run", "a", "test", "almost", "immediately", "after", "a", "file", "change", "NUMBER", "However", "if", "a", "test", "has", "be", "run", "within", "the", "last", "NUMBER", "NUMBER", "seconds", "then", "any", "subsequent", "file", "change", "will", "not", "trigger", "a", "test", "run", "until", "a", "delay", "of", "NUMBER", "NUMBER", "seconds", "NUMBER", "This", "be", "on", "the", "cleanup", "branch", "with", "both", "fsevent", "and", "polling", "NUMBER", "thibaudgg", "I", "have", "about", "NUMBER", "NUMBER", "file", "total", "in", "there", "NUMBER", "I", "be", "having", "the", "same", "problem", "as", "dfischer", "NUMBER", "I", "have", "tried", "use", "the", "polling", "debug", "doesnt", "seem", "to", "show", "any", "error", "NUMBER", "I", "have", "also", "verify", "that", "rb", "fsevent", "be", "work", "by", "run", "their", "same", "script", "LINK", "fsevent", "singular", "path", "in", "the", "same", "directory", "NUMBER", "Could", "you", "all", "try", "to", "downgrade", "to", "NUMBER", "and", "let", "us", "know", "if", "the", "issue", "be", "still", "here", "or", "not", "Hi", "rymai", "I", "downgraded", "to", "NUMBER", "and", "that", "resolve", "my", "issue", "NUMBER", "rymai", "Downgrading", "to", "NUMBER", "improved", "my", "issue", "NUMBER", "There", "be", "still", "a", "noticeable", "lag", "between", "saving", "a", "file", "and", "a", "test", "be", "triggered", "if", "the", "file", "that", "be", "saved", "just", "pass", "all", "test", "NUMBER", "ie", "save", "red", "no", "lag", "save", "green", "no", "lag", "save", "lag", "However", "it", "be", "much", "less", "than", "on", "the", "later", "version", "NUMBER", "For", "reference", "here", "be", "my", "guardfile", "guard", "pow", "do", "watch", "NUMBER", "powrc", "watch", "NUMBER", "powenv", "watch", "Gemfile", "watch", "Gemfile", "NUMBER", "lock", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "r", "config", "environments", "NUMBER", "NUMBER", "rb", "watch", "r", "config", "initializers", "NUMBER", "NUMBER", "rb", "end", "guard", "spork", "rspec_env", "RAILS_ENV", "test", "do", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "r", "config", "environments", "NUMBER", "NUMBER", "rb", "watch", "r", "config", "initializers", "NUMBER", "NUMBER", "rb", "watch", "Gemfile", "watch", "Gemfile", "NUMBER", "lock", "watch", "spec", "spec_helper", "NUMBER", "rb", "end", "guard", "rspec", "all_on_start", "false", "all_after_pass", "false", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "watch", "r", "app", "views", "NUMBER", "NUMBER", "NUMBER", "erb", "haml", "m", "spec", "request", "m", "NUMBER", "_spec", "NUMBER", "rb", "Capybara", "request", "specs", "end", "and", "Gemfile", "group", "development", "test", "do", "gem", "sqlite", "NUMBER", "gem", "debugger", "gem", "rspec", "rails", "gem", "capybara", "gem", "spork", "gem", "rb", "fsevent", "gem", "guard", "NUMBER", "gem", "guard", "spork", "gem", "guard", "rspec", "gem", "guard", "pow", "gem", "growl", "end", "Note", "After", "originally", "posting", "I", "notice", "there", "were", "a", "few", "duplicate", "lines", "in", "my", "guardfile", "twice", "NUMBER", "I", "revised", "my", "guardfile", "to", "take", "those", "out", "edit", "revisions", "in", "above", "and", "re", "run", "all", "the", "test", "cases", "discussed", "in", "this", "thread", "so", "far", "and", "that", "did", "not", "affect", "my", "results", "NUMBER", "The", "best", "I", "can", "tell", "something", "that", "happens", "after", "a", "test", "pass", "all", "green", "consumes", "a", "lot", "of", "computer", "horsepower", "NUMBER", "I", "notice", "that", "when", "a", "test", "run", "be", "all", "green", "the", "computer", "cranks", "away", "for", "a", "while", "in", "Activity", "Monitor", "CPU", "useage", "jumps", "to", "NUMBER", "NUMBER", "and", "stays", "there", "for", "a", "while", "then", "when", "it", "cools", "down", "it", "runs", "the", "next", "test", "NUMBER", "There", "be", "no", "output", "in", "the", "terminal", "though", "so", "I", "don", "t", "know", "what", "it", "s", "doing", "behind", "the", "scenes", "NUMBER", "Downgrading", "to", "NUMBER", "solve", "my", "issue", "NUMBER", "I", "still", "have", "the", "problem", "that", "I", "m", "unable", "to", "reproduce", "the", "issue", "NUMBER", "Can", "you", "guys", "please", "share", "some", "info", "about", "your", "environment", "OS", "X", "and", "Ruby", "version", "project", "folder", "shared", "with", "Dropbox", "or", "NFS", "Perhaps", "you", "have", "something", "in", "common", "that", "could", "give", "us", "a", "hint", "NUMBER", "It", "would", "be", "interesting", "to", "see", "if", "use", "Pry", "from", "master", "would", "have", "an", "influence", "on", "the", "problem", "the", "latest", "stable", "release", "be", "NUMBER", "months", "old", "by", "add", "this", "to", "your", "Gemfile", "Ruby", "gem", "pry", "github", "pry", "pry", "branch", "master", "netzpirat", "Adding", "that", "like", "to", "my", "Gemfile", "produces", "the", "following", "error", "You", "pass", "github", "as", "an", "option", "for", "gem", "pry", "but", "it", "be", "invalid", "NUMBER", "I", "be", "use", "Bundler", "NUMBER", "OS", "X", "NUMBER", "Ruby", "NUMBER", "Local", "disk", "drive", "no", "Dropbox", "NFS", "Rails", "NUMBER", "Ruby", "NUMBER", "p", "NUMBER", "Bundler", "NUMBER", "OS", "X", "NUMBER", "Rails", "NUMBER", "Local", "disk", "drive", "no", "cloud", "stuff", "NUMBER", "Not", "sure", "pry", "would", "affect", "because", "my", "issue", "be", "roughly", "the", "same", "in", "NUMBER", "x", "as", "it", "be", "in", "NUMBER", "x", "NUMBER", "At", "least", "on", "my", "end", "I", "feel", "like", "I", "m", "get", "a", "memory", "leak", "or", "something", "NUMBER", "It", "s", "really", "weird", "NUMBER", "Same", "as", "Andrew", "NUMBER", "On", "Sun", "Nov", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Andrew", "Burleson", "notifications", "github", "NUMBER", "comwrote", "Ruby", "NUMBER", "p", "NUMBER", "Bundler", "NUMBER", "OS", "X", "NUMBER", "Rails", "NUMBER", "Local", "disk", "drive", "no", "cloud", "stuff", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "If", "you", "ve", "test", "the", "latest", "Pry", "without", "success", "let", "us", "start", "with", "an", "empty", "project", "just", "to", "see", "if", "it", "s", "a", "Guard", "issue", "or", "a", "combination", "of", "plugins", "that", "leads", "to", "the", "problem", "NUMBER", "Please", "create", "an", "empty", "directory", "an", "add", "the", "following", "Gemfile", "Ruby", "source", "rubygems", "gem", "guard", "gem", "rb", "fsevent", "Next", "create", "a", "Guardfile", "without", "ant", "plugin", "dependency", "Ruby", "require", "guard", "guard", "module", "Guard", "class", "InlineGuard", "TAG", "Now", "try", "to", "trigger", "an", "event", "directly", "from", "within", "Guard", "like", "Bash", "NUMBER", "guard", "main", "NUMBER", "touch", "hello", "NUMBER", "guard", "main", "Got", "change", "for", "hello", "If", "this", "doesn", "t", "work", "disable", "the", "notifications", "in", "the", "Guardfile", "by", "add", "Ruby", "notification", "off", "and", "run", "again", "Bash", "bundle", "exec", "guard", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "michi", "Desktop", "test", "NUMBER", "guard", "main", "NUMBER", "touch", "hi", "NUMBER", "guard", "main", "Got", "change", "for", "hi", "If", "that", "doesn", "t", "work", "disable", "the", "interactor", "in", "the", "Guardfile", "by", "add", "Ruby", "interactor", "off", "and", "run", "Guard", "in", "the", "background", "and", "test", "it", "with", "Bash", "bundle", "exec", "guard", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "michi", "Desktop", "test", "touch", "hihi", "Got", "change", "for", "hihi", "kill", "NUMBER", "netzpirat", "Unfortunately", "none", "of", "these", "things", "worked", "NUMBER", "Here", "be", "the", "results", "Initial", "Guard", "File", "Result", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "kfalconer", "workspace", "guard_test", "NUMBER", "guard", "main", "NUMBER", "touch", "hello", "NUMBER", "guard", "main", "exit", "NUMBER", "guard", "main", "exit", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "gems", "listen", "NUMBER", "lib", "listen", "listener", "NUMBER", "rb", "NUMBER", "in", "stop", "undefined", "method", "stop", "for", "nil", "NilClass", "NoMethodError", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "stop", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "rescue", "in", "start", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "bin", "guard", "NUMBER", "in", "TAG", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "bin", "ruby_noexec_wrapper", "NUMBER", "in", "eval", "from", "Users", "kfalconer", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard_test", "bin", "ruby_noexec_wrapper", "NUMBER", "in", "TAG", "With", "notifications", "off", "I", "also", "had", "no", "result", "and", "when", "typing", "exit", "the", "app", "hung", "NUMBER", "Guard", "Background", "Test", "Looks", "like", "Guard", "crashed", "Cardadmins", "MacBook", "Pro", "NUMBER", "guard_test", "kfalconer", "bundle", "exec", "guard", "NUMBER", "NUMBER", "Cardadmins", "MacBook", "Pro", "NUMBER", "guard_test", "kfalconer", "touch", "hihi", "NUMBER", "Stopped", "bundle", "exec", "guard", "Cardadmins", "MacBook", "Pro", "NUMBER", "guard_test", "kfalconer", "kfalconer", "Ok", "thanks", "NUMBER", "I", "see", "two", "interesting", "things", "NUMBER", "First", "you", "re", "use", "rubygems", "bundler", "so", "you", "should", "not", "prefix", "Guard", "with", "bundle", "exec", "NUMBER", "Second", "Guard", "fail", "to", "properly", "exit", "since", "the", "Listen", "gem", "has", "no", "adapter", "find", "listener", "NUMBER", "rb", "NUMBER", "in", "stop", "undefined", "method", "stop", "for", "nil", "NilClass", "NUMBER", "Can", "you", "go", "to", "your", "normal", "project", "start", "Guard", "and", "enter", "the", "following", "into", "the", "Guard", "console", "Ruby", "NUMBER", "guard", "main", "Guard", "NUMBER", "listener", "NUMBER", "adapter", "NUMBER", "class", "Listen", "Adapters", "Darwin", "dfischer", "burlesona", "Do", "you", "guys", "use", "rubygems", "bundler", "netzpirat", "I", "don", "t", "use", "rubygems", "bundler", "NUMBER", "I", "ll", "run", "the", "test", "you", "spelled", "out", "as", "soon", "as", "I", "get", "a", "chance", "NUMBER", "Thanks", "Same", "issue", "here", "NUMBER", "Everything", "worked", "with", "guard", "NUMBER", "but", "after", "upgrading", "to", "NUMBER", "guard", "doesn", "t", "run", "on", "file", "change", "NUMBER", "Guardfile", "gems", "bundle", "version", "etc", "NUMBER", "be", "untouched", "NUMBER", "Even", "saving", "Guardfile", "itself", "doesn", "t", "do", "anything", "NUMBER", "Guard", "NUMBER", "Pry", "NUMBER", "Mac", "OS", "X", "NUMBER", "RVM", "Ruby", "NUMBER", "p", "NUMBER", "Bundler", "NUMBER", "Some", "extra", "information", "I", "be", "not", "use", "rubygems", "bundler", "NUMBER", "I", "be", "run", "guard", "via", "bundle", "exec", "guard", "NUMBER", "When", "I", "type", "exit", "the", "app", "hangs", "NUMBER", "The", "return", "key", "works", "as", "expected", "NUMBER", "I", "have", "the", "same", "issue", "guard", "TAG", "NUMBER", "do", "not", "detect", "file", "change", "NUMBER", "I", "have", "also", "verify", "in", "IRB", "that", "rb", "fsevents", "itself", "do", "see", "the", "change", "NUMBER", "I", "followed", "netzpirat", "testcase", "issuecomment", "NUMBER", "and", "get", "Guard", "to", "respond", "with", "the", "last", "test", "interactor", "off", "NUMBER", "I", "also", "verify", "that", "when", "remove", "notification", "off", "still", "works", "NUMBER", "So", "the", "problem", "seems", "somewhere", "in", "the", "interactor", "thing", "NUMBER", "Ruby", "require", "guard", "guard", "module", "Guard", "class", "InlineGuard", "TAG", "guard", "guard", "branch", "master", "to", "your", "Gemfile", "and", "run", "bundle", "update", "NUMBER", "Now", "start", "Guard", "in", "debug", "mode", "and", "we", "should", "see", "now", "any", "exception", "that", "occur", "in", "the", "Listen", "and", "the", "Interactor", "thread", "NUMBER", "Bash", "bundle", "exec", "guard", "d", "Also", "update", "to", "the", "latest", "Pry", "version", "be", "interesting", "since", "a", "lot", "has", "happend", "on", "Pry", "master", "in", "the", "last", "NUMBER", "months", "Ruby", "gem", "pry", "github", "pry", "pry", "branch", "master", "Thanks", "a", "lot", "NUMBER", "Still", "nothing", "NUMBER", "My", "version", "Bash", "gem", "update", "system", "Latest", "version", "currently", "install", "NUMBER", "Aborting", "NUMBER", "gem", "version", "NUMBER", "gem", "update", "Updating", "install", "gems", "Nothing", "to", "update", "bundle", "show", "Gems", "include", "by", "the", "bundle", "bundler", "NUMBER", "coderay", "NUMBER", "guard", "NUMBER", "NUMBER", "c", "NUMBER", "a", "listen", "NUMBER", "lumberjack", "NUMBER", "method_source", "NUMBER", "pry", "NUMBER", "NUMBER", "e", "rb", "fsevent", "NUMBER", "slop", "NUMBER", "thor", "NUMBER", "I", "run", "guard", "Bash", "bundle", "exec", "guard", "d", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "emacsclient", "eval", "NUMBER", "NUMBER", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "laas", "proged", "guardtest", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "InlineGuard", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "guard", "main", "When", "I", "touch", "a", "file", "in", "another", "terminal", "window", "nothing", "happens", "NUMBER", "The", "same", "thing", "with", "interactor", "off", "in", "Guardfile", "Bash", "bundle", "exec", "guard", "d", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "emacsclient", "eval", "NUMBER", "NUMBER", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "laas", "proged", "guardtest", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "InlineGuard", "But", "when", "I", "touch", "a", "file", "it", "outputs", "Bash", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "InlineGuard", "run_on_modifications", "with", "hello", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_begin", "executed", "for", "Guard", "InlineGuard", "Got", "change", "for", "hello", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_end", "executed", "for", "Guard", "InlineGuard", "Just", "to", "make", "sure", "I", "run", "this", "in", "bundle", "exec", "irb", "Ruby", "require", "listen", "Listen", "NUMBER", "to", "Dir", "NUMBER", "pwd", "do", "args", "puts", "Got", "change", "args", "NUMBER", "inspect", "end", "And", "when", "I", "touched", "a", "file", "it", "outputs", "Got", "change", "Users", "laas", "proged", "guardtest", "hello", "So", "Listen", "gem", "itself", "detects", "change", "NUMBER", "Can", "you", "check", "if", "Listen", "has", "an", "active", "adapter", "Ruby", "NUMBER", "guard", "main", "Guard", "NUMBER", "listener", "NUMBER", "adapter", "Ok", "I", "can", "now", "reproduce", "it", "in", "Ruby", "NUMBER", "p", "NUMBER", "Looks", "like", "the", "interactor", "thread", "blocks", "the", "listener", "thread", "NUMBER", "I", "ll", "keep", "you", "update", "NUMBER", "Can", "you", "please", "add", "Ruby", "gem", "rb", "readline", "to", "your", "Gemfile", "and", "see", "if", "that", "resolve", "the", "issue", "for", "you", "Yay", "Adding", "rb", "readline", "did", "the", "job", "Meanwhile", "I", "write", "myself", "a", "small", "threaded", "guard", "clone", "LINK", "to", "test", "the", "issue", "NUMBER", "If", "I", "use", "the", "MyInteractor", "thread", "everything", "works", "but", "if", "I", "switch", "to", "MyPry", "thread", "it", "blocks", "just", "as", "in", "Guard", "NUMBER", "Confirmed", "that", "add", "rb", "readline", "to", "that", "testcase", "also", "fix", "issue", "there", "NUMBER", "Also", "if", "its", "of", "any", "help", "still", "I", "find", "that", "I", "could", "start", "listener", "from", "Pry", "console", "and", "then", "it", "blocks", "until", "first", "fsevent", "be", "received", "Ruby", "NUMBER", "guard", "main", "Guard", "NUMBER", "listener", "NUMBER", "art", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Stop", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "gfmt", "NUMBER", "cflag", "NUMBER", "b", "NUMBER", "iflag", "NUMBER", "b", "NUMBER", "lflag", "NUMBER", "cf", "oflag", "NUMBER", "discard", "f", "dsusp", "NUMBER", "eof", "NUMBER", "eol", "ff", "eol", "NUMBER", "ff", "erase", "NUMBER", "f", "intr", "NUMBER", "kill", "NUMBER", "lnext", "NUMBER", "min", "NUMBER", "quit", "NUMBER", "c", "reprint", "NUMBER", "start", "NUMBER", "status", "NUMBER", "stop", "NUMBER", "susp", "NUMBER", "a", "time", "NUMBER", "werase", "NUMBER", "ispeed", "NUMBER", "ospeed", "NUMBER", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "InlineGuard", "run_on_modifications", "with", "hello", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_begin", "executed", "for", "Guard", "InlineGuard", "Got", "change", "for", "hello", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_changes_end", "executed", "for", "Guard", "InlineGuard", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "stty", "g", "NUMBER", "dev", "null", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "guard", "main", "Please", "visit", "LINK", "proper", "Readline", "support", "to", "Ruby", "on", "Mac", "OS", "X", "to", "add", "proper", "readline", "support", "to", "Ruby", "on", "OS", "X", "NUMBER", "NUMBER", "rb", "readline", "seems", "to", "have", "fix", "it", "for", "me", "NUMBER", "netzpirat", "When", "I", "tried", "the", "test", "you", "prescribed", "creating", "an", "empty", "project", "guard", "worked", "fine", "NUMBER", "Then", "I", "tried", "add", "rb", "readline", "and", "it", "made", "no", "difference", "in", "my", "app", "NUMBER", "Side", "note", "can", "you", "add", "to", "your", "rb", "readline", "page", "be", "there", "any", "way", "to", "check", "and", "see", "which", "ruby", "build", "you", "have", "ie", "NUMBER", "see", "if", "this", "be", "likely", "the", "issue", "So", "I", "must", "have", "a", "different", "problem", "NUMBER", "To", "recap", "here", "s", "what", "be", "happening", "When", "run", "guard", "in", "my", "app", "the", "first", "spec", "run", "will", "go", "fine", "but", "any", "subsequent", "spec", "runs", "take", "anywhere", "from", "NUMBER", "NUMBER", "minutes", "to", "be", "pick", "up", "NUMBER", "Interestingly", "if", "I", "save", "a", "file", "after", "the", "first", "spec", "run", "while", "it", "be", "waiting", "and", "waiting", "to", "be", "pick", "up", "I", "can", "hit", "enter", "and", "guard", "will", "immediately", "start", "run", "all", "specs", "NUMBER", "Eventually", "sometime", "after", "all", "specs", "have", "run", "the", "file", "I", "saved", "before", "I", "run", "all", "specs", "will", "run", "NUMBER", "Now", "I", "tried", "guard", "NUMBER", "x", "and", "NUMBER", "x", "no", "difference", "NUMBER", "I", "tried", "with", "and", "without", "rb", "readline", "no", "difference", "NUMBER", "I", "was", "thinking", "that", "maybe", "it", "be", "a", "problem", "with", "guard", "spork", "since", "the", "specs", "run", "fine", "manually", "so", "I", "remove", "guard", "spork", "and", "tried", "that", "NUMBER", "No", "difference", "same", "exact", "behavior", "NUMBER", "Just", "to", "double", "check", "I", "run", "spork", "outside", "of", "guard", "and", "with", "spork", "run", "I", "can", "manually", "run", "many", "specs", "in", "a", "row", "back", "to", "back", "no", "perceptible", "delay", "between", "one", "spec", "finishing", "and", "the", "next", "one", "firing", "NUMBER", "So", "that", "doesn", "t", "seem", "to", "be", "it", "NUMBER", "I", "tried", "with", "and", "without", "guard", "pow", "no", "difference", "there", "either", "NUMBER", "I", "tried", "remove", "growl", "NUMBER", "No", "difference", "NUMBER", "I", "did", "all", "of", "the", "above", "test", "with", "rb", "readline", "gem", "and", "it", "had", "no", "effect", "NUMBER", "So", "at", "this", "point", "my", "issue", "be", "something", "different", "NUMBER", "Guard", "runs", "fine", "in", "an", "empty", "project", "NUMBER", "Rspec", "and", "Spork", "run", "fine", "on", "their", "own", "NUMBER", "But", "somehow", "the", "combination", "of", "the", "above", "be", "cause", "guard", "to", "become", "unresponsive", "to", "file", "system", "events", "the", "pry", "console", "be", "still", "responsive", "after", "the", "first", "event", "NUMBER", "_After", "doing", "all", "the", "above", "I", "find", "a", "lead", "_", "NUMBER", "guard", "main", "Guard", "NUMBER", "listener", "NUMBER", "adapter", "This", "responds", "if", "I", "run", "it", "immediately", "after", "run", "guard", "before", "any", "file", "system", "events", "NUMBER", "This", "responds", "if", "I", "run", "it", "after", "_manually_", "trigger", "all", "specs", "run", "hit", "enter", "but", "no", "file", "system", "events", "NUMBER", "This", "_does", "not", "respond_", "if", "I", "run", "it", "after", "a", "file", "system", "event", "it", "just", "hangs", "forever", "NUMBER", "So", "that", "s", "the", "first", "thing", "from", "this", "thread", "I", "ve", "find", "that", "doesn", "t", "do", "what", "it", "be", "supposed", "to", "besides", "taking", "forever", "to", "pick", "up", "file", "system", "change", "NUMBER", "Any", "suggestions", "for", "what", "to", "try", "next", "netzpirat", "thibaudgg", "Should", "I", "open", "a", "new", "issue", "for", "the", "problem", "I", "m", "still", "having", "since", "it", "seems", "different", "from", "what", "worked", "for", "everyone", "else", "on", "this", "thread", "burlesona", "looks", "like", "your", "issue", "be", "different", "since", "this", "one", "be", "about", "the", "listener", "be", "completely", "blocked", "whereas", "your", "issue", "be", "about", "a", "lag", "but", "it", "doesn", "t", "happen", "without", "other", "Guard", "plugins", "NUMBER", "It", "would", "be", "great", "to", "start", "over", "with", "a", "new", "issue", "NUMBER", "You", "can", "use", "the", "test", "case", "from", "borgand", "to", "see", "if", "you", "have", "the", "readline", "issue", "LINK", "In", "your", "case", "I", "would", "upgrade", "to", "the", "latest", "Ruby", "ruby", "NUMBER", "p", "NUMBER", "instead", "of", "ruby", "NUMBER", "p", "NUMBER", "and", "add", "proper", "readline", "support", "to", "it", "see", "LINK", "proper", "Readline", "support", "to", "Ruby", "on", "Mac", "OS", "X", "Also", "upgrade", "to", "Bundle", "NUMBER", "and", "run", "Guard", "from", "the", "master", "branch", "NUMBER", "I", "seem", "to", "have", "a", "little", "glitch", "still", "which", "might", "be", "relate", "to", "the", "readline", "When", "I", "start", "guard", "pry", "prompt", "works", "as", "expected", "I", "can", "hit", "_Enter_", "to", "run", "all", "test", "etc", "NUMBER", "But", "when", "Guard", "detects", "a", "file", "change", "and", "runs", "specific", "task", "for", "it", "then", "from", "that", "moment", "on", "the", "pry", "prompt", "stops", "work", "instead", "of", "submit", "the", "command", "it", "inserts", "M", "characters", "NUMBER", "Listen", "still", "keep", "detecting", "file", "change", "and", "run", "tasks", "but", "I", "can", "t", "run", "all", "tasks", "anymore", "until", "I", "stop", "Guard", "with", "_", "C_", "or", "_", "D_", "NUMBER", "I", "can", "debug", "this", "a", "bit", "later", "but", "maybe", "you", "can", "already", "guide", "me", "in", "some", "direction", "NUMBER", "Installing", "rb", "readline", "resolve", "this", "issue", "for", "me", "NUMBER", "I", "m", "run", "ruby", "NUMBER", "with", "rails", "NUMBER", "and", "guard", "NUMBER", "Adding", "the", "rb", "readline", "gem", "also", "fix", "this", "same", "issue", "for", "me", "guard", "NUMBER", "ruby", "NUMBER", "p", "NUMBER", "rails", "NUMBER", "It", "turned", "out", "that", "rb", "readline", "cause", "the", "M", "characters", "and", "even", "in", "Rails", "Console", "when", "I", "start", "typing", "before", "console", "was", "finished", "loading", "NUMBER", "Only", "difference", "was", "that", "Rails", "Console", "submitted", "the", "lines", "when", "it", "finished", "and", "afterwards", "all", "was", "OK", "NUMBER", "Guard", "only", "submitted", "the", "line", "when", "I", "followed", "it", "up", "with", "D", "which", "then", "run", "the", "command", "e", "NUMBER", "g", "NUMBER", "run", "all", "test", "and", "then", "exited", "the", "Guard", "session", "NUMBER", "I", "was", "able", "to", "fix", "this", "when", "I", "install", "latest", "Ruby", "NUMBER", "with", "native", "readline", "from", "Homebrew", "as", "suggested", "in", "the", "wiki", "page", "NUMBER", "Now", "I", "m", "able", "to", "run", "commands", "from", "Pry", "console", "and", "also", "detect", "file", "change", "NUMBER", "Thanks", "for", "the", "info", "NUMBER", "I", "ll", "update", "the", "wiki", "page", "NUMBER", "I", "love", "the", "way", "the", "diffs", "be", "shaping", "up", "but", "I", "be", "also", "having", "a", "few", "issue", "NUMBER", "I", "have", "one", "Rails", "project", "where", "if", "I", "require", "pry", "binding", "NUMBER", "pry", "at", "some", "point", "in", "test", "execution", "the", "prompt", "comes", "up", "but", "be", "in", "contention", "with", "the", "Guard", "interactor", "Pry", "NUMBER", "That", "same", "project", "do", "similarly", "with", "pry", "rescue", "minitest", "Pries", "NUMBER", "I", "tried", "to", "replicate", "it", "on", "a", "tiny", "project", "but", "it", "doesn", "t", "exhibit", "the", "same", "behavior", "NUMBER", "Do", "you", "see", "it", "on", "your", "end", "or", "should", "I", "bisect", "these", "two", "to", "figure", "out", "what", "triggers", "it", "Sorry", "for", "not", "doing", "it", "right", "away", "be", "at", "work", "and", "will", "be", "busy", "for", "next", "several", "evenings", "NUMBER", "Since", "there", "s", "no", "way", "that", "bindings", "NUMBER", "pry", "would", "stop", "the", "Guard", "Pry", "session", "in", "another", "thread", "the", "idea", "of", "a", "continuously", "run", "Guard", "Pry", "session", "will", "never", "work", "NUMBER", "So", "I", "m", "going", "to", "abandon", "this", "pull", "request", "and", "cherry", "pick", "the", "good", "parts", "NUMBER", "Now", "that", "Pry", "be", "our", "Guard", "interactor", "PR", "NUMBER", "anyone", "who", "has", "followed", "the", "Pry", "wiki", "for", "use", "Pry", "with", "Rails", "without", "altering", "their", "Gemfile", "LINK", "up", "Rails", "or", "Heroku", "to", "use", "Pry", "wiki", "without_gemfile", "will", "see", "Guard", "inexplicably", "die", "immediately", "prior", "to", "loading", "Pry", "NUMBER", "This", "has", "to", "do", "with", "their", "NUMBER", "pryrc", "loading", "the", "Rails", "environment", "NUMBER", "I", "haven", "t", "dug", "too", "deeply", "into", "the", "issue", "but", "ultimately", "we", "don", "t", "want", "the", "Rails", "environment", "to", "be", "loaded", "in", "Guard", "s", "Pry", "session", "NUMBER", "I", "m", "not", "sure", "what", "the", "best", "course", "of", "action", "be", "to", "solve", "this", "NUMBER", "I", "think", "it", "s", "still", "valuable", "to", "be", "able", "to", "load", "Rails", "in", "any", "pry", "session", "without", "an", "initializer", "or", "a", "plugin", "like", "pry", "rails", "consider", "the", "situation", "where", "only", "one", "developer", "on", "a", "team", "wants", "to", "use", "Pry", "so", "I", "don", "t", "think", "don", "t", "do", "that", "be", "a", "sufficient", "answer", "NUMBER", "Fortunately", "if", "anyone", "has", "copied", "and", "pasted", "the", "NUMBER", "pryrc", "snippet", "on", "the", "Pry", "wiki", "exactly", "then", "loading", "Rails", "can", "be", "skipped", "with", "the", "ENV", "SKIP_RAILS", "environment", "variable", "NUMBER", "My", "current", "solution", "be", "to", "add", "ENV", "SKIP_RAILS", "true", "to", "my", "NUMBER", "guard", "NUMBER", "rb", "file", "NUMBER", "If", "that", "s", "the", "best", "solution", "then", "it", "should", "probably", "be", "mention", "somewhere", "in", "Guard", "s", "docs", "NUMBER", "I", "d", "be", "happy", "to", "provide", "any", "additional", "information", "if", "it", "s", "needed", "NUMBER", "Excellent", "I", "think", "that", "makes", "the", "most", "sense", "NUMBER", "Also", "Guard", "has", "completely", "change", "how", "I", "work", "and", "has", "become", "an", "invaluable", "addition", "to", "my", "toolchain", "NUMBER", "I", "can", "t", "thank", "you", "enough", "for", "it", "jimryan", "thanks", "for", "your", "kind", "words", "Hi", "So", "be", "it", "not", "recommended", "to", "load", "rails", "in", "guard", "s", "pry", "console", "If", "yes", "why", "It", "would", "seem", "to", "me", "like", "a", "handy", "quick", "console", "to", "quickly", "investigate", "why", "a", "test", "be", "fail", "for", "example", "NUMBER", "If", "not", "how", "can", "I", "actually", "do", "it", "without", "breaking", "guard", "Thanks", "a", "lot", "and", "congratulations", "for", "guard", "Hi", "So", "be", "it", "not", "recommended", "to", "load", "rails", "in", "guard", "s", "pry", "console", "There", "be", "no", "official", "recommendation", "from", "our", "side", "NUMBER", "I", "usually", "have", "a", "Pry", "session", "and", "a", "Guard", "session", "side", "by", "side", "so", "I", "can", "work", "in", "the", "Pry", "session", "when", "Guard", "be", "run", "some", "test", "or", "similar", "NUMBER", "If", "yes", "why", "It", "would", "seem", "to", "me", "like", "a", "handy", "quick", "console", "to", "quickly", "investigate", "why", "a", "test", "be", "fail", "for", "example", "NUMBER", "Sure", "I", "do", "exactly", "that", "NUMBER", "I", "m", "in", "the", "test", "environment", "in", "the", "Guard", "session", "when", "investigating", "a", "spec", "whereas", "in", "the", "Pry", "session", "I", "m", "in", "the", "development", "environment", "NUMBER", "I", "usually", "work", "by", "triggering", "Pry", "manually", "but", "there", "be", "a", "plugin", "that", "opens", "a", "Pry", "session", "when", "an", "exception", "occur", "LINK", "rescue", "NUMBER", "If", "not", "how", "can", "I", "actually", "do", "it", "without", "breaking", "guard", "I", "m", "not", "aware", "that", "the", "Rails", "env", "would", "break", "guard", "but", "it", "might", "be", "a", "problem", "mixing", "environments", "NUMBER", "Michael", "Michael", "Kessler", "Schulgasse", "NUMBER", "NUMBER", "Bremgarten", "Switzerland", "Mobile", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Phone", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "netzpirat", "Thanks", "Michael", "The", "title", "of", "this", "issue", "made", "me", "think", "that", "loading", "rails", "in", "the", "guard", "console", "would", "break", "guard", "NUMBER", "But", "it", "actually", "seems", "to", "work", "Is", "it", "just", "me", "or", "with", "NUMBER", "the", "interactor", "off", "makes", "Guard", "throw", "a", "Thor", "error", "and", "completely", "ignore", "the", "Guardfile", "NUMBER", "NUMBER", "NUMBER", "ERROR", "Invalid", "Guardfile", "original", "error", "be", "can", "t", "modify", "frozen", "Thor", "CoreExt", "HashWithIndifferentAccess", "NUMBER", "NUMBER", "NUMBER", "ERROR", "No", "guards", "find", "in", "Guardfile", "please", "add", "at", "least", "one", "NUMBER", "That", "was", "fast", "thanks", "a", "lot", "NUMBER", "If", "you", "use", "NUMBER", "and", "do", "at", "the", "prompt", "system", "vim", "Guardfile", "or", "NUMBER", "vim", "Guardfile", "it", "will", "show", "vim", "and", "work", "fine", "until", "the", "moment", "you", "change", "a", "file", "that", "be", "Guarded", "such", "as", "w", "ing", "the", "Guardfile", "NUMBER", "It", "will", "then", "begin", "to", "split", "keystrokes", "between", "Guard", "and", "vim", "NUMBER", "My", "theory", "be", "that", "the", "problem", "be", "Pry", "be", "run", "in", "a", "thread", "NUMBER", "I", "know", "that", "if", "you", "fork", "from", "a", "regular", "Pry", "prompt", "it", "will", "act", "in", "a", "similar", "manner", "NUMBER", "More", "to", "follow", "NUMBER", "So", "guard", "spawns", "a", "new", "pry", "on", "every", "change", "NUMBER", "You", "can", "see", "it", "in", "the", "prompt", "always", "get", "a", "NUMBER", "in", "NUMBER", "guard", "main", "NUMBER", "This", "probably", "shouldn", "t", "be", "the", "case", "but", "I", "can", "see", "how", "it", "came", "from", "the", "previous", "direct", "to", "readline", "interactor", "that", "could", "more", "easily", "work", "with", "it", "NUMBER", "But", "let", "s", "assume", "for", "a", "bit", "that", "it", "be", "right", "to", "stop", "start", "the", "interactor", "so", "much", "NUMBER", "As", "of", "commit", "NUMBER", "a", "NUMBER", "b", "or", "so", "if", "you", "watch", "guard", "d", "it", "will", "bracket", "consistently", "with", "Guard", "UI", "NUMBER", "debug", "Stop", "interactor", "do", "stuff", "Guard", "UI", "NUMBER", "debug", "Start", "interactor", "But", "now", "you", "don", "t", "get", "them", "in", "exact", "pairs", "NUMBER", "Sometimes", "you", "even", "just", "get", "the", "Stop", "and", "sure", "enough", "the", "interactor", "be", "gone", "NUMBER", "I", "m", "not", "sure", "what", "the", "perfect", "solution", "be", "NUMBER", "I", "wonder", "if", "the", "threading", "can", "be", "toned", "down", "a", "good", "bit", "and", "made", "simpler", "NUMBER", "For", "now", "the", "Issue", "can", "be", "worked", "around", "by", "manually", "doing", "Guard", "NUMBER", "pause", "before", "run", "vim", "NUMBER", "Then", "doing", "it", "again", "after", "though", "it", "won", "t", "pick", "up", "on", "intermediate", "change", "in", "between", "NUMBER", "netzpirat", "awesome", "thanks", "Hi", "I", "ve", "get", "guard", "livereload", "work", "perfectly", "on", "a", "Mac", "Lion", "NUMBER", "But", "on", "another", "Snow", "Leopard", "I", "ve", "get", "an", "issue", "NUMBER", "When", "I", "type", "guard", "I", "get", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "Users", "romuald", "Documents", "devserver", "temp", "tgr", "NUMBER", "NUMBER", "NUMBER", "INFO", "LiveReload", "NUMBER", "be", "waiting", "for", "a", "browser", "to", "connect", "NUMBER", "NUMBER", "guard", "main", "NUMBER", "NUMBER", "NUMBER", "INFO", "Browser", "connected", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Browser", "URL", "LINK", "NUMBER", "guard", "main", "NUMBER", "guard", "main", "NUMBER", "NUMBER", "NUMBER", "INFO", "Run", "all", "NUMBER", "guard", "main", "As", "you", "can", "see", "the", "program", "seems", "interrupted", "by", "guard", "main", "and", "be", "waiting", "for", "something", "which", "I", "don", "t", "see", "on", "the", "computer", "the", "one", "where", "it", "works", "NUMBER", "It", "looks", "like", "the", "chrome", "plugin", "livereload", "connects", "successfully", "but", "when", "I", "save", "a", "file", "it", "be", "going", "back", "on", "this", "guard", "main", "line", "and", "the", "browser", "doesn", "t", "reload", "NUMBER", "I", "don", "t", "know", "anything", "about", "ruby", "btw", "NUMBER", "Any", "idea", "My", "version", "of", "ruby", "be", "NUMBER", "Gemfile", "source", "LINK", "group", "development", "do", "gem", "guard", "gem", "guard", "livereload", "gem", "rb", "fsevent", "require", "false", "end", "Guardfile", "guard", "livereload", "apply_js_live", "false", "apply_css_live", "true", "do", "watch", "r", "lab", "NUMBER", "NUMBER", "css", "js", "html", "end", "Thanks", "Romu", "I", "had", "this", "same", "issue", "after", "upgrading", "today", "NUMBER", "It", "seems", "that", "the", "latest", "and", "greatest", "Pry", "interaction", "be", "halting", "Guard", "and", "forcing", "user", "input", "NUMBER", "I", "ve", "fix", "this", "for", "myself", "by", "run", "bundle", "exec", "guard", "start", "i", "Guard", "will", "now", "run", "its", "jobs", "in", "the", "background", "like", "it", "use", "to", "NUMBER", "NUMBER", "shipit", "Currently", "it", "uses", "whatever", "tmux", "s", "default", "foreground", "color", "be", "set", "to", "NUMBER", "For", "someone", "use", "the", "tmux", "solarized", "theme", "this", "be", "orange", "NUMBER", "A", "failure", "background", "of", "bright", "red", "with", "orange", "text", "be", "almost", "impossible", "to", "read", "NUMBER", "I", "ve", "add", "an", "option", "to", "set", "the", "foreground", "color", "defaulting", "it", "to", "white", "NUMBER", "Great", "Thanks", "for", "the", "quick", "merge", "NUMBER", "How", "do", "you", "guys", "decide", "when", "to", "release", "a", "gem", "update", "I", "see", "release", "about", "once", "a", "month", "on", "rubygems", "NUMBER", "Is", "one", "come", "up", "On", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Michael", "Kessler", "notifications", "github", "NUMBER", "com", "write", "Thanks", "for", "the", "pull", "request", "NUMBER", "I", "ve", "change", "it", "to", "support", "a", "different", "foreground", "color", "per", "message", "type", "as", "it", "s", "the", "same", "with", "the", "foreground", "color", "NUMBER", "Also", "the", "miss", "specs", "have", "be", "add", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Interesting", "NUMBER", "I", "shall", "check", "this", "out", "tomorrow", "NUMBER", "On", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Michael", "Kessler", "notifications", "github", "NUMBER", "com", "write", "I", "like", "to", "release", "a", "new", "Guard", "version", "this", "week", "I", "just", "need", "some", "feedback", "on", "NUMBER", "LINK", "as", "it", "seems", "to", "work", "fine", "and", "be", "ready", "to", "merge", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "If", "I", "attempt", "to", "give", "any", "commands", "on", "the", "command", "line", "to", "guard", "I", "get", "the", "error", "stated", "NUMBER", "guard", "start", "requires", "at", "least", "NUMBER", "argument", "guard", "start", "Running", "guard", "as", "just", "guard", "be", "fine", "but", "even", "guard", "help", "returns", "that", "error", "NUMBER", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "linux", "Gems", "GEM", "remote", "LINK", "specs", "addressable", "NUMBER", "chunky_png", "NUMBER", "compass", "NUMBER", "chunky_png", "NUMBER", "fssm", "NUMBER", "sass", "NUMBER", "em", "websocket", "NUMBER", "addressable", "NUMBER", "eventmachine", "NUMBER", "eventmachine", "NUMBER", "ffi", "NUMBER", "fssm", "NUMBER", "guard", "NUMBER", "listen", "NUMBER", "thor", "NUMBER", "guard", "compass", "NUMBER", "compass", "NUMBER", "guard", "NUMBER", "guard", "livereload", "NUMBER", "em", "websocket", "NUMBER", "guard", "NUMBER", "multi_json", "NUMBER", "listen", "NUMBER", "multi_json", "NUMBER", "rb", "inotify", "NUMBER", "ffi", "NUMBER", "sass", "NUMBER", "thor", "NUMBER", "yajl", "ruby", "NUMBER", "PLATFORMS", "ruby", "DEPENDENCIES", "guard", "guard", "compass", "guard", "livereload", "rb", "inotify", "yajl", "ruby", "Sounds", "awesome", "Awesome", "Shouldn", "t", "the", "only", "and", "except", "option", "accept", "a", "string", "symbol", "or", "array", "of", "strings", "symbols", "instead", "of", "a", "regex", "e", "NUMBER", "g", "NUMBER", "only", "rspec", "test", "livereload", "So", "if", "you", "re", "hip", "and", "stuff", "you", "ve", "be", "automatically", "starting", "Pry", "LINK", "within", "the", "context", "of", "any", "fail", "test", "NUMBER", "This", "be", "super", "powerful", "because", "for", "unintentional", "failures", "you", "can", "cd", "ls", "up", "down", "etc", "with", "pry", "stack_explorer", "and", "pry", "debugger", "and", "pry", "syntax_hacks", "for", "extra", "handiness", "NUMBER", "But", "you", "can", "even", "take", "it", "further", "by", "use", "the", "REPL", "to", "sketch", "out", "your", "implementation", "and", "check", "that", "it", "pass", "the", "test", "then", "use", "edit", "method", "or", "even", "the", "upcoming", "save", "source", "to", "make", "your", "REPLd", "code", "permanent", "on", "the", "filesystem", "NUMBER", "The", "downside", "be", "that", "this", "means", "you", "end", "up", "with", "pry", "sessions", "sitting", "around", "be", "dumb", "when", "you", "change", "your", "test", "s", "impl", "s", "externally", "NUMBER", "This", "means", "you", "have", "to", "go", "Ctrl", "d", "them", "a", "lot", "NUMBER", "So", "I", "want", "to", "make", "a", "guard", "plugin", "to", "kill", "them", "off", "according", "to", "the", "same", "rules", "as", "my", "test", "follow", "in", "the", "Guardfile", "NUMBER", "I", "could", "go", "poking", "around", "and", "hack", "something", "together", "but", "I", "d", "like", "your", "input", "first", "NUMBER", "I", "was", "picturing", "a", "thread", "that", "start", "up", "and", "TAG", "then", "killed", "whenever", "one", "of", "the", "watched", "file", "change", "NUMBER", "Any", "ideas", "Thanks", "netzpirat", "Cool", "NUMBER", "Keep", "in", "mind", "that", "prying", "into", "RSpec", "failures", "works", "but", "not", "perfectly", "due", "to", "the", "generate", "AST", "looking", "like", "RSpec", "Core", "ExampleGroup", "Nested_", "NUMBER", "NUMBER", "So", "figuring", "out", "where", "you", "be", "be", "more", "of", "a", "pain", "plus", "edit", "c", "from", "Pry", "will", "in", "fact", "reload", "the", "foo_spec", "NUMBER", "rb", "but", "RSpec", "will", "_not_", "replace", "the", "in", "memory", "spec", "NUMBER", "You", "have", "to", "kill", "everything", "off", "and", "let", "Guard", "pick", "up", "the", "re", "run", "of", "the", "test", "for", "spec", "change", "that", "be", "NUMBER", "Implementations", "reload", "rerun", "just", "fine", "NUMBER", "minitest", "spec", "be", "better", "w", "NUMBER", "r", "NUMBER", "t", "the", "AST", "NUMBER", "It", "makes", "predictable", "methods", "NUMBER", "But", "still", "I", "m", "finding", "that", "for", "live", "code", "you", "want", "just", "Plain", "Old", "Classes", "the", "way", "Test", "Unit", "style", "test", "be", "NUMBER", "E", "NUMBER", "g", "NUMBER", "you", "can", "do", "edit", "c", "fix", "the", "test", "up", "then", "when", "it", "exits", "you", "can", "call", "it", "by", "name", "like", "test_bar", "NUMBER", "Worx", "grate", "NUMBER", "There", "be", "a", "whole", "frontier", "here", "NUMBER", "Let", "s", "blaze", "a", "new", "thing", "NUMBER", "Update", "pry", "rescue", "s", "git", "version", "now", "allows", "ruby", "require", "pry", "rescue", "minitest", "So", "between", "this", "and", "NUMBER", "we", "re", "on", "the", "trail", "NUMBER", "What", "about", "a", "generic", "option", "to", "guard", "that", "makes", "it", "spawn", "a", "thread", "while", "the", "guard", "be", "run", "then", "kills", "off", "that", "process", "if", "one", "of", "the", "guarded", "file", "change", "again", "Would", "close", "this", "issue", "and", "would", "be", "useful", "anyway", "if", "you", "wanted", "a", "workflow", "where", "you", "could", "save", "a", "test", "or", "impl", "file", "and", "cancel", "the", "current", "test", "run", "for", "the", "run", "all", "on", "success", "mode", "let", "the", "individual", "test", "pass", "then", "do", "some", "more", "edits", "and", "save", "to", "kill", "the", "run", "all", "Nice", "idea", "will", "give", "it", "a", "try", "NUMBER", "I", "finally", "get", "around", "to", "LINK", "rescue", "pull", "NUMBER", "Then", "one", "can", "do", "something", "like", "this", "in", "NUMBER", "vim", "ftplugin", "ruby", "NUMBER", "vim", "map", "TAG", "wa", "TAG", "kill", "pry", "rescue", "TAG", "One", "thing", "that", "still", "seems", "to", "need", "fix", "be", "the", "same", "as", "LINK", "issuecomment", "NUMBER", "I", "put", "this", "in", "my", "NUMBER", "guardrc", "to", "fix", "that", "Pry", "NUMBER", "hooks", "NUMBER", "get_hook", "after_eval", "restore_visiblity", "or", "Pry", "NUMBER", "hooks", "NUMBER", "add_hook", "after_eval", "restore_visiblity", "do", "system", "stty", "echo", "end", "The", "get_hook", "check", "could", "be", "remove", "if", "the", "add_hook", "was", "do", "at", "the", "right", "level", "it", "s", "just", "that", "the", "NUMBER", "guardrc", "gets", "re", "sourced", "on", "each", "new", "pry", "instance", "and", "generates", "a", "warning", "NUMBER", "I", "think", "if", "the", "echo", "part", "be", "fix", "this", "Issue", "can", "be", "close", "NUMBER", "I", "was", "use", "the", "tmux", "notifier", "for", "the", "first", "time", "tonight", "and", "was", "surprised", "that", "my", "status", "bar", "wasn", "t", "showing", "the", "correct", "red", "green", "status", "during", "test", "runs", "NUMBER", "Depending", "on", "a", "user", "s", "TMux", "configuration", "certain", "field", "aren", "t", "available", "to", "be", "colored", "NUMBER", "In", "my", "case", "status", "left", "bg", "wasn", "t", "available", "NUMBER", "But", "status", "right", "bg", "was", "NUMBER", "If", "this", "be", "a", "problem", "that", "you", "see", "others", "encountering", "I", "ve", "attached", "a", "new", "option", "to", "the", "tmux", "notifier", "allowing", "that", "field", "to", "be", "change", "if", "desired", "NUMBER", "The", "default", "behavior", "be", "left", "intact", "and", "all", "of", "my", "install", "rubies", "pass", "the", "spec", "portability", "suite", "NUMBER", "Let", "me", "know", "if", "there", "s", "anything", "I", "can", "do", "to", "help", "Later", "Nice", "I", "find", "the", "left", "status", "to", "limited", "that", "s", "why", "I", "add", "the", "display", "message", "option", "NUMBER", "the", "more", "options", "the", "better", "NUMBER", "Signed", "off", "by", "Tomas", "Pokorny", "tnt", "netsafe", "NUMBER", "cz", "Can", "you", "add", "notifier", "to", "terminal", "terminal", "title", "Somethink", "like", "this", "Module", "for", "notifying", "test", "result", "to", "terminal", "title", "module", "Guard", "module", "Notifier", "module", "TerminalTitle", "extend", "self", "Test", "if", "the", "notification", "library", "be", "available", "NUMBER", "param", "Boolean", "silent", "true", "if", "no", "error", "message", "should", "be", "shown", "return", "Boolean", "the", "availability", "status", "def", "available", "silent", "false", "true", "end", "Show", "a", "system", "notification", "NUMBER", "param", "String", "type", "the", "notification", "type", "NUMBER", "Either", "success", "pending", "fail", "or", "notify", "param", "String", "title", "the", "notification", "title", "param", "String", "message", "the", "notification", "message", "body", "param", "String", "image", "the", "path", "to", "the", "notification", "image", "param", "Hash", "options", "additional", "notification", "library", "options", "def", "notify", "type", "title", "message", "image", "options", "set_terminal_title", "title", "message", "end", "def", "set_terminal_title", "text", "text", "NUMBER", "sub", "n", "text", "NUMBER", "sub", "n", "NUMBER", "m", "puts", "e", "NUMBER", "text", "a", "end", "end", "end", "end", "I", "submit", "it", "LINK", "The", "first", "patch", "allows", "general", "overriding", "of", "the", "DEFAULTS", "options", "in", "the", "emacs", "notifier", "NUMBER", "The", "second", "patch", "add", "the", "ability", "to", "override", "options", "that", "don", "t", "exist", "in", "DEFAULTS", "NUMBER", "For", "example", "a", "custom", "color", "can", "be", "set", "for", "pending", "notifications", "instead", "of", "just", "falling", "back", "to", "DEFAULTS", "default", "by", "provide", "a", "pending", "option", "to", "the", "notification", "method", "NUMBER", "This", "allows", "the", "Guardfile", "to", "look", "something", "like", "ruby", "emacs_colors", "success", "Green", "pending", "Yellow", "fail", "Red", "default", "White", "notification", "emacs", "emacs_colors", "Please", "let", "me", "know", "if", "if", "there", "be", "anything", "that", "you", "d", "like", "to", "be", "do", "differently", "NUMBER", "NUMBER", "Thanks", "guard", "NUMBER", "dev", "null", "dev", "null", "NUMBER", "NUMBER", "jobs", "NUMBER", "Running", "guard", "NUMBER", "dev", "null", "dev", "null", "touch", "xxx", "NUMBER", "html", "NUMBER", "Stopped", "guard", "NUMBER", "dev", "null", "dev", "null", "Not", "clear", "why", "it", "stops", "NUMBER", "nohup", "doesn", "t", "help", "for", "some", "reason", "too", "NUMBER", "This", "makes", "guard", "unusable", "as", "a", "background", "process", "NUMBER", "So", "I", "have", "to", "open", "another", "terminal", "just", "for", "guard", "to", "run", "this", "be", "not", "cool", "NUMBER", "Updated", "the", "options", "and", "an", "example", "for", "the", "tmux", "notifier", "The", "current", "tmux", "notifier", "implementation", "was", "too", "limited", "that", "it", "only", "colored", "the", "left", "status", "bar", "NUMBER", "I", "want", "to", "see", "a", "message", "so", "update", "the", "notifier", "to", "also", "use", "display", "message", "when", "configured", "NUMBER", "I", "has", "extend", "configurable", "options", "so", "powerline", "users", "can", "pimp", "there", "message", "Ok", "for", "you", "netzpirat", "I", "don", "t", "know", "use", "tmux", "What", "it", "basically", "do", "easy", "to", "test", "when", "in", "tmux", "tmux", "display", "message", "hello", "world", "This", "will", "show", "for", "a", "short", "period", "of", "time", "configurable", "by", "tmux", "set", "display", "time", "an", "message", "instead", "of", "the", "statusbar", "NUMBER", "after", "the", "period", "the", "statusbar", "returns", "NUMBER", "this", "be", "all", "standard", "tmux", "behaviour", "and", "ideal", "for", "notifications", "such", "as", "those", "of", "Guard", "NUMBER", "The", "user", "can", "get", "the", "message", "history", "by", "use", "Ctrl", "b", "where", "Ctrl", "b", "be", "your", "key", "to", "activate", "tmux", "NUMBER", "I", "think", "a", "quick", "scan", "of", "the", "code", "will", "give", "a", "general", "idea", "what", "it", "do", "NUMBER", "Ah", "I", "m", "afraid", "that", "be", "not", "fully", "correct", "since", "my", "code", "will", "set", "that", "display", "time", "for", "the", "user", "it", "overwrites", "custom", "settings", "NUMBER", "I", "will", "refork", "and", "update", "the", "readme", "in", "a", "pull", "request", "ok", "sorry", "for", "the", "late", "response", "I", "was", "away", "for", "the", "weekend", "Ok", "for", "the", "new", "pull", "request", "NUMBER", "Thanks", "When", "will", "the", "rubygem", "be", "publish", "on", "rubygems", "NUMBER", "org", "hmm", "weird", "rubygems", "be", "still", "listing", "NUMBER", "as", "the", "latest", "version", "LINK", "How", "to", "use", "SASS", "file", "with", "Gurad", "The", "Tmux", "notifier", "change", "the", "background", "color", "of", "the", "Tmux", "window", "status", "bar", "that", "be", "currently", "run", "Guard", "NUMBER", "netzpirat", "you", "be", "the", "notifier", "guy", "Ok", "for", "you", "This", "be", "relate", "to", "LINK", "and", "the", "conclusion", "in", "LINK", "While", "I", "understand", "the", "motivation", "behind", "LINK", "for", "those", "who", "be", "use", "guard", "directly", "and", "be", "not", "aware", "of", "the", "change", "that", "took", "place", "since", "listen", "NUMBER", "x", "this", "poses", "some", "sort", "of", "regression", "it", "be", "strange", "that", "dependencies", "that", "use", "to", "be", "specified", "be", "remove", "with", "the", "user", "shown", "a", "warning", "to", "satisfy", "the", "miss", "dependencies", "if", "possible", "I", "propose", "the", "following", "NUMBER", "update", "README", "NUMBER", "md", "Installation", "section", "to", "account", "for", "the", "listen", "relate", "gems", "with", "special", "care", "not", "to", "confuse", "them", "with", "the", "system", "specific", "gems", "under", "System", "notifications", "section", "NUMBER", "NUMBER", "guard", "init", "could", "possibly", "insert", "the", "relevant", "lines", "into", "Gemfile", "and", "do", "a", "bundle", "update", "Your", "propositions", "sounds", "very", "good", "to", "me", "NUMBER", "What", "do", "you", "thing", "guard", "core", "team", "netzpirat", "That", "sounds", "reasonable", "enough", "if", "the", "installation", "steps", "be", "clear", "about", "the", "dependencies", "and", "the", "user", "just", "has", "to", "go", "through", "them", "once", "and", "never", "has", "to", "deal", "with", "it", "again", "and", "users", "of", "older", "version", "can", "find", "them", "easily", "as", "well", "In", "my", "experience", "I", "never", "had", "a", "problem", "with", "installing", "these", "extra", "dependencies", "on", "each", "of", "the", "three", "OS", "environments", "I", "have", "use", "guard", "on", "so", "probably", "I", "be", "just", "going", "to", "add", "all", "of", "them", "anyway", "NUMBER", "Great", "thanks", "Pry", "RC_FILES", "went", "away", "recently", "in", "this", "commit", "LINK", "The", "hooks", "should", "work", "both", "in", "NUMBER", "and", "HEAD", "pry", "NUMBER", "Also", "gave", "the", "user", "a", "hint", "about", "NUMBER", "guardrc", "because", "it", "change", "the", "interactor", "experience", "quite", "a", "bit", "with", "without", "one", "NUMBER", "It", "seems", "to", "be", "pure", "awesomeness", "I", "ll", "give", "it", "a", "try", "this", "week", "NUMBER", "Thanks", "NUMBER", "Yeah", "rymai", "and", "I", "also", "get", "quite", "frequently", "sadly", "hangs", "of", "the", "interactor", "no", "more", "key", "input", "accepted", "NUMBER", "I", "m", "afraid", "that", "a", "showstopper", "until", "it", "s", "fix", "no", "netzpirat", "great", "enjoy", "your", "holiday", "NUMBER", "Are", "you", "NUMBER", "sure", "you", "get", "hangs", "What", "I", "see", "from", "time", "to", "time", "be", "echo", "be", "off", "NUMBER", "When", "I", "can", "t", "see", "what", "I", "m", "doing", "I", "just", "run", "this", "stty", "echo", "Then", "it", "fix", "it", "NUMBER", "At", "one", "point", "I", "poked", "around", "guard", "s", "stty", "stuff", "not", "sure", "what", "any", "of", "it", "be", "really", "doing", "NUMBER", "It", "seems", "to", "work", "but", "I", "ll", "use", "it", "tomorrow", "all", "day", "to", "be", "sure", "Thanks", "netzpirat", "for", "me", "it", "seems", "to", "works", "perfectly", "NUMBER", "netzpirat", "Yep", "seems", "to", "work", "fine", "Perfect", "NUMBER", "for", "today", "This", "be", "awesome", "guys", "thanks", "for", "the", "work", "NUMBER", "One", "thing", "though", "regard", "the", "upgrade", "experience", "Guard", "now", "spews", "deprecation", "warnings", "about", "usage", "of", "interactor", "notification", "etc", "NUMBER", "for", "configuration", "in", "the", "Guardfile", "point", "users", "toward", "NUMBER", "guardrc", "NUMBER", "Yet", "the", "DSL", "methods", "be", "still", "the", "primary", "thing", "documented", "in", "the", "README", "and", "there", "s", "really", "nothing", "I", "can", "find", "suggesting", "how", "to", "configure", "things", "in", "NUMBER", "guardrc", "examples", "etc", "NUMBER", "The", "DSL", "methods", "don", "t", "work", "there", "NUMBER", "The", "DSL", "methods", "do", "still", "work", "to", "do", "user", "local", "configuration", "in", "NUMBER", "guard", "NUMBER", "rb", "though", "of", "course", "you", "still", "see", "deprecation", "warnings", "NUMBER", "Moving", "this", "stuff", "to", "user", "preferences", "where", "it", "can", "be", "out", "of", "a", "project", "s", "version", "control", "be", "great", "but", "the", "state", "of", "things", "right", "now", "be", "kind", "of", "circular", "and", "confusing", "and", "I", "m", "sure", "NUMBER", "guard", "NUMBER", "rb", "be", "not", "really", "intended", "to", "be", "the", "place", "for", "configuration", "NUMBER", "There", "be", "a", "pointer", "to", "the", "Pry", "docs", "for", "things", "one", "might", "do", "with", "NUMBER", "pryrc", "as", "a", "hint", "for", "NUMBER", "guardrc", "but", "as", "discussed", "in", "the", "thread", "here", "it", "shouldn", "t", "be", "Guard", "s", "interest", "to", "replace", "a", "project", "s", "REPL", "so", "it", "seems", "like", "for", "most", "Guard", "users", "extending", "the", "shell", "isn", "t", "going", "to", "be", "a", "very", "common", "need", "compared", "to", "simple", "configuration", "NUMBER", "So", "I", "think", "the", "problem", "here", "be", "primarily", "just", "one", "of", "update", "the", "blessed", "documentation", "wink", "Or", "maybe", "also", "the", "DSL", "should", "be", "loaded", "when", "evaluating", "NUMBER", "guardrc", "If", "I", "m", "confused", "about", "the", "intent", "please", "point", "me", "toward", "the", "light", "smile", "ches", "As", "developer", "we", "never", "really", "have", "an", "upgrade", "since", "we", "continuously", "move", "forward", "so", "thanks", "for", "your", "feedback", "NUMBER", "There", "be", "no", "deprecation", "message", "for", "the", "notification", "DSL", "method", "so", "I", "m", "wondering", "what", "you", "mean", "with", "this", "NUMBER", "The", "main", "change", "from", "NUMBER", "to", "NUMBER", "was", "the", "removal", "of", "three", "different", "interactors", "that", "have", "be", "replaced", "by", "a", "single", "Pry", "interactor", "thus", "the", "deprecation", "message", "NUMBER", "I", "think", "it", "s", "great", "to", "have", "less", "choice", "NUMBER", "I", "just", "re", "read", "the", "deprecation", "warning", "and", "simplified", "it", "LINK", "because", "it", "was", "not", "quite", "correct", "and", "the", "hint", "for", "the", "Pry", "customization", "be", "just", "not", "necessary", "since", "it", "target", "more", "advance", "use", "of", "Guard", "NUMBER", "In", "fact", "this", "was", "also", "one", "of", "the", "drivers", "for", "the", "change", "people", "wanted", "to", "have", "more", "control", "over", "the", "workflow", "with", "Guard", "and", "a", "programmable", "interactor", "use", "the", "Guard", "API", "makes", "a", "lot", "of", "customization", "possible", "NUMBER", "It", "should", "not", "replace", "your", "main", "REPL", "but", "it", "can", "be", "very", "useful", "for", "improving", "your", "test", "workflow", "for", "example", "NUMBER", "We", "have", "a", "short", "sentence", "in", "the", "README", "about", "the", "NUMBER", "guardrc", "Further", "Guard", "specific", "customizations", "can", "be", "made", "in", "NUMBER", "guardrc", "that", "will", "be", "evaluated", "prior", "the", "Pry", "session", "be", "start", "NUMBER", "pryrc", "be", "ignored", "NUMBER", "This", "allows", "you", "to", "make", "use", "of", "the", "Pry", "plugin", "architecture", "to", "provide", "custom", "commands", "and", "extend", "Guard", "for", "your", "own", "needs", "and", "distribute", "as", "a", "gem", "NUMBER", "Please", "have", "a", "look", "at", "the", "Pry", "Wiki", "LINK", "for", "more", "information", "NUMBER", "If", "it", "s", "not", "clear", "to", "you", "that", "the", "NUMBER", "guardrc", "be", "a", "Guard", "specific", "NUMBER", "pryrc", "to", "customize", "Pry", "and", "you", "can", "write", "Pry", "plugins", "then", "please", "help", "us", "to", "write", "this", "in", "a", "more", "clear", "way", "Guard", "core", "speaks", "French", "German", "and", "Dutch", "NUMBER", "Pull", "request", "for", "better", "word", "fix", "bad", "grammer", "etc", "NUMBER", "be", "_very_", "welcome", "since", "we", "can", "t", "do", "any", "better", "NUMBER", "The", "quote", "from", "the", "README", "has", "also", "a", "link", "to", "the", "Pry", "wiki", "and", "if", "you", "follow", "it", "then", "I", "see", "pages", "about", "LINK", "and", "configuration", "LINK", "system", "LINK", "commands", "LINK", "LINK", "plugins", "and", "they", "contain", "tons", "of", "information", "and", "examples", "and", "there", "be", "even", "a", "lot", "more", "available", "NUMBER", "What", "be", "you", "miss", "netzpirat", "Thanks", "for", "the", "detailed", "reply", "NUMBER", "There", "be", "no", "deprecation", "message", "for", "the", "notification", "DSL", "method", "You", "re", "right", "apologies", "it", "was", "only", "interactor", "NUMBER", "Totally", "agree", "that", "streamlining", "the", "choices", "be", "a", "good", "thing", "plus", "it", "just", "works", "more", "reliably", "I", "think", "NUMBER", "Regarding", "your", "update", "deprecation", "message", "in", "my", "case", "I", "m", "only", "wanting", "to", "set", "a", "history", "file", "location", "ruby", "interactor", "history_file", "my", "preferred", "location", "It", "sounds", "like", "I", "shouldn", "t", "be", "get", "a", "deprecation", "warning", "for", "this", "usage", "at", "all", "Or", "what", "would", "be", "the", "recommended", "way", "place", "to", "configure", "this", "now", "I", "think", "that", "s", "my", "main", "question", "and", "what", "I", "find", "confusing", "circular", "about", "the", "docs", "and", "warning", "NUMBER", "I", "noted", "the", "mention", "of", "the", "Pry", "customization", "in", "the", "README", "NUMBER", "Personally", "I", "m", "a", "Pry", "user", "and", "I", "m", "familiar", "with", "customizing", "and", "extending", "it", "so", "to", "me", "at", "least", "the", "word", "and", "the", "expressed", "intent", "be", "fairly", "clear", "NUMBER", "I", "think", "what", "tripped", "me", "up", "about", "it", "be", "the", "ordering", "of", "the", "information", "that", "mention", "of", "NUMBER", "pryrc", "now", "precedes", "other", "info", "on", "configuring", "Guard", "in", "the", "README", "so", "it", "seems", "to", "imply", "a", "precedence", "of", "what", "be", "now", "preferred", "NUMBER", "As", "you", "say", "this", "be", "probably", "only", "for", "more", "advance", "use", "really", "and", "something", "like", "configuring", "Guard", "notifications", "be", "orthogonal", "to", "customizing", "Guard", "s", "Pry", "instances", "I", "think", "you", "might", "wish", "to", "turn", "the", "interactor", "off", "entirely", "and", "evaluating", "NUMBER", "pryrc", "then", "wouldn", "t", "make", "sense", "NUMBER", "So", "basically", "it", "s", "still", "not", "clear", "to", "me", "where", "one", "should", "set", "global", "configuration", "like", "my", "history", "file", "example", "or", "other", "similar", "things", "where", "options", "shouldn", "t", "be", "forced", "on", "everyone", "on", "a", "project", "through", "the", "Guardfile", "keep", "in", "version", "control", "NUMBER", "Once", "I", "understand", "that", "I", "could", "try", "to", "work", "up", "some", "doc", "tweak", "to", "discuss", "on", "a", "pull", "request", "NUMBER", "So", "in", "conclusion", "maybe", "NUMBER", "guard", "NUMBER", "rb", "really", "_is_", "the", "right", "place", "for", "what", "I", "m", "ask", "but", "I", "think", "it", "s", "hard", "to", "arrive", "at", "that", "from", "the", "current", "docs", "and", "the", "deprecation", "warning", "gave", "a", "further", "feeling", "that", "it", "wasn", "t", "right", "NUMBER", "The", "interactor", "deprecation", "warning", "be", "only", "shown", "when", "you", "pass", "invalid", "argument", "like", "the", "previous", "readline", "and", "coolline", "NUMBER", "You", "can", "either", "place", "it", "on", "a", "per", "project", "basis", "in", "your", "Guardfile", "or", "for", "all", "projects", "in", "NUMBER", "guard", "NUMBER", "rb", "NUMBER", "OS", "X", "NUMBER", "notifications", "support", "a", "subtitle", "in", "addition", "to", "the", "usual", "title", "and", "message", "LINK", "Individual", "guards", "can", "specify", "it", "when", "they", "send", "a", "notification", "but", "you", "can", "t", "rely", "on", "it", "to", "be", "there", "if", "other", "notifiers", "such", "as", "growl", "be", "use", "NUMBER", "So", "that", "means", "you", "can", "t", "put", "important", "information", "in", "there", "NUMBER", "I", "m", "wondering", "if", "the", "Guard", "time", "would", "be", "receptive", "to", "change", "the", "other", "notifiers", "to", "emulate", "support", "for", "the", "subtitle", "by", "prepending", "it", "to", "the", "message", "perhaps", "with", "a", "line", "break", "NUMBER", "If", "there", "be", "a", "cleaner", "way", "to", "do", "this", "let", "me", "know", "NUMBER", "That", "s", "fair", "NUMBER", "I", "m", "not", "sure", "I", "agree", "with", "the", "Terminal", "Notifier", "imposing", "a", "particular", "format", "upon", "notifications", "that", "be", "generate", "NUMBER", "Currently", "it", "puts", "the", "app", "name", "defaulting", "to", "Guard", "then", "the", "type", "then", "the", "title", "into", "the", "notification", "title", "NUMBER", "Why", "not", "just", "accept", "the", "title", "argument", "as", "be", "I", "don", "t", "think", "that", "be", "possible", "with", "Notification", "Center", "NUMBER", "Springest", "be", "I", "right", "Oops", "sorry", "didn", "t", "see", "your", "PR", "NUMBER", "so", "I", "m", "think", "be", "work", "netzpirat", "seems", "good", "to", "you", "netzpirat", "great", "thanks", "You", "re", "welcome", "Everything", "appears", "to", "be", "run", "fine", "but", "I", "be", "get", "an", "annoying", "error", "LINK", "NUMBER", "Any", "ideas", "Guardfile", "be", "this", "LINK", "file_gistfile", "NUMBER", "rb", "Even", "though", "this", "wasn", "t", "anything", "to", "do", "with", "Guard", "I", "want", "to", "let", "you", "know", "I", "very", "much", "appreciate", "your", "explanation", "and", "example", "it", "be", "very", "helpful", "NUMBER", "Thank", "you", "tl", "dr", "I", "d", "like", "to", "add", "a", "custom", "command", "or", "two", "to", "guard", "NUMBER", "Is", "this", "possible", "Is", "it", "desirable", "ww", "tmm", "Wait", "wait", "tell", "me", "more", "I", "m", "work", "on", "some", "new", "to", "me", "REPL", "based", "workflows", "LINK", "de", "in", "particular", "trying", "to", "make", "a", "sweet", "red", "green", "refactor", "loop", "LINK", "de", "wiki", "red", "green", "refactor", "NUMBER", "That", "loop", "be", "currently", "starting", "to", "shape", "up", "with", "pry", "rescue", "automatically", "putting", "me", "into", "the", "REPL", "whenever", "I", "get", "a", "test", "failure", "NUMBER", "However", "I", "m", "write", "to", "talk", "about", "the", "next", "step", "_after_", "each", "succesful", "test", "fail", "test", "pass", "stage", "NUMBER", "There", "be", "basically", "three", "courses", "of", "action", "NUMBER", "Refactor", "what", "you", "did", "NUMBER", "NUMBER", "Start", "over", "again", "write", "another", "fail", "test", "NUMBER", "NUMBER", "Commit", "to", "VCS", "NUMBER", "For", "the", "refactor", "case", "I", "imagine", "a", "guard", "command", "like", "refactor", "and", "would", "run", "VISUAL", "EDITOR", "vim", "git", "status", "porcelain", "cut", "b", "NUMBER", "For", "new", "fail", "test", "perhaps", "it", "would", "be", "a", "command", "that", "would", "open", "to", "the", "spec", "with", "the", "most", "recent", "timestamp", "Maybe", "the", "syntax", "would", "be", "like", "another", "spec", "which", "would", "descend", "through", "spec", "looking", "for", "the", "most", "recent", "file", "NUMBER", "This", "would", "be", "generic", "enough", "that", "you", "could", "use", "it", "for", "editing", "file", "in", "entirely", "different", "workflows", "NUMBER", "For", "the", "commit", "to", "VCS", "it", "could", "maybe", "just", "be", "Z", "and", "do", "some", "git", "commands", "in", "the", "background", "NUMBER", "Not", "sure", "if", "any", "guard", "integration", "would", "be", "useful", "though", "if", "it", "showed", "a", "git", "status", "after", "every", "all", "test", "pass", "it", "might", "be", "useful", "NUMBER", "So", "I", "need", "your", "guidance", "on", "how", "to", "do", "this", "the", "right", "way", "NUMBER", "Is", "there", "any", "kind", "of", "user", "defined", "command", "mechanism", "in", "place", "If", "so", "would", "anyone", "be", "interested", "in", "co", "developing", "this", "small", "piece", "as", "a", "gem", "I", "m", "happy", "to", "do", "most", "of", "the", "work", "but", "if", "I", "had", "other", "input", "I", "could", "do", "it", "with", "more", "clarity", "NUMBER", "Should", "I", "instead", "focus", "on", "the", "RSpec", "runner", "and", "leave", "Guard", "alone", "I", "could", "accomplish", "those", "same", "NUMBER", "NUMBER", "NUMBER", "paths", "mention", "above", "by", "merely", "cause", "RSpec", "to", "do", "more", "than", "say", "NUMBER", "failures", "NUMBER", "Thanks", "Couldn", "t", "agree", "more", "Sounds", "wonderful", "NUMBER", "Let", "me", "know", "if", "you", "want", "to", "have", "me", "monkeying", "around", "trying", "to", "make", "the", "Pull", "Req", "NUMBER", "Please", "refer", "to", "Mon", "Ouie", "coolline", "NUMBER", "for", "more", "information", "NUMBER", "I", "ll", "copy", "some", "of", "it", "over", "to", "her", "NUMBER", "Trying", "to", "use", "coolline", "on", "Mac", "OS", "X", "with", "zsh", "because", "readline", "doesn", "t", "work", "very", "well", "it", "stops", "accepting", "input", "unfortunately", "coolline", "be", "useless", "because", "my", "development", "mode", "looks", "like", "below", "NUMBER", "bash", "app", "views", "lists", "show", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists_show_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "List", "Load", "NUMBER", "ms", "SELECT", "lists", "NUMBER", "FROM", "lists", "WHERE", "lists", "NUMBER", "id", "NUMBER", "LIMIT", "NUMBER", "Called", "from", "app", "models", "workflow", "NUMBER", "rb", "NUMBER", "in", "list_todo_percentage", "app", "views", "lists", "_user_stats", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists__user_stats_html_haml__", "NUMBER", "_", "NUMBER", "app", "views", "lists", "show", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists_show_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Called", "from", "app", "views", "lists", "_user_stats", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists__user_stats_html_haml__", "NUMBER", "_", "NUMBER", "app", "views", "lists", "show", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists_show_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Called", "from", "app", "views", "lists", "_user_stats", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists__user_stats_html_haml__", "NUMBER", "_", "NUMBER", "app", "views", "lists", "show", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists_show_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Called", "from", "app", "views", "lists", "_user_stats", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists__user_stats_html_haml__", "NUMBER", "_", "NUMBER", "app", "views", "lists", "show", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists_show_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Activity", "Load", "NUMBER", "ms", "SELECT", "activities", "NUMBER", "FROM", "activities", "WHERE", "activities", "NUMBER", "workflow_id", "NUMBER", "ORDER", "BY", "activities", "NUMBER", "created_at", "DESC", "LIMIT", "NUMBER", "Called", "from", "app", "views", "lists", "_user_stats", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists__user_stats_html_haml__", "NUMBER", "_", "NUMBER", "app", "views", "lists", "show", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists_show_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Rendered", "lists", "_user_stats", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "ms", "Activity", "Load", "NUMBER", "ms", "SELECT", "activities", "NUMBER", "FROM", "activities", "WHERE", "activities", "NUMBER", "list_id", "NUMBER", "ORDER", "BY", "activities", "NUMBER", "created_at", "DESC", "LIMIT", "NUMBER", "Called", "from", "app", "views", "lists", "show", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_lists_show_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Rendered", "activities", "_activity", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "ms", "Rendered", "lists", "show", "NUMBER", "html", "NUMBER", "haml", "within", "layouts", "application", "NUMBER", "ms", "Workflow", "Load", "NUMBER", "ms", "SELECT", "workflows", "NUMBER", "FROM", "workflows", "WHERE", "workflows", "NUMBER", "user_id", "NUMBER", "AND", "workflows", "NUMBER", "archived", "f", "ORDER", "BY", "workflows", "NUMBER", "position", "ASC", "Called", "from", "app", "views", "application", "_menu", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "block", "in", "_app_views_application__menu_html_haml__", "NUMBER", "_", "NUMBER", "app", "views", "application", "_menu", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_application__menu_html_haml__", "NUMBER", "_", "NUMBER", "app", "views", "layouts", "application", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_layouts_application_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Rendered", "application", "_search_form", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "ms", "Rendered", "application", "_menu", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "ms", "Called", "from", "app", "views", "layouts", "application", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_layouts_application_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Called", "from", "app", "views", "layouts", "application", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_layouts_application_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Called", "from", "app", "views", "layouts", "application", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_layouts_application_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "NUMBER", "ms", "SELECT", "COUNT", "FROM", "announcements", "Called", "from", "app", "views", "layouts", "application", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_layouts_application_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Announcement", "Load", "NUMBER", "ms", "SELECT", "announcements", "NUMBER", "FROM", "announcements", "ORDER", "BY", "announcements", "NUMBER", "id", "DESC", "LIMIT", "NUMBER", "Called", "from", "app", "models", "announcement", "NUMBER", "rb", "NUMBER", "in", "newest", "app", "views", "layouts", "application", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "in", "_app_views_layouts_application_html_haml___", "NUMBER", "_", "NUMBER", "app", "controllers", "lists_controller", "NUMBER", "rb", "NUMBER", "in", "show", "Rendered", "application", "_iphone_footer", "NUMBER", "html", "NUMBER", "haml", "NUMBER", "ms", "Completed", "NUMBER", "OK", "in", "NUMBER", "ms", "Views", "NUMBER", "ms", "ActiveRecord", "NUMBER", "ms", "I", "have", "investigated", "and", "as", "soon", "as", "I", "remove", "the", "colline", "gem", "everything", "be", "back", "to", "normal", "NUMBER", "Mon", "Ouie", "told", "me", "it", "can", "t", "corrupt", "the", "output", "unless", "it", "s", "use", "the", "wrong", "way", "so", "I", "m", "ask", "for", "help", "here", "instead", "NUMBER", "I", "m", "also", "use", "ZSH", "with", "the", "Guard", "Coolline", "interactor", "and", "I", "don", "t", "see", "these", "problem", "NUMBER", "You", "can", "also", "try", "to", "not", "automatically", "require", "the", "gems", "since", "Guard", "requires", "everything", "manually", "so", "when", "you", "have", "a", "Gemfile", "like", "Ruby", "group", "development", "do", "gem", "guard", "require", "false", "gem", "guard", "coffeescript", "require", "false", "gem", "guard", "rspec", "require", "false", "gem", "guard", "livereload", "require", "false", "gem", "rb", "fsevent", "require", "false", "gem", "coolline", "require", "false", "gem", "terminal", "notifier", "guard", "require", "false", "gem", "thin", "require", "false", "end", "then", "these", "dependency", "won", "t", "be", "loaded", "when", "you", "start", "Rails", "but", "they", "will", "be", "loaded", "when", "your", "start", "Guard", "and", "as", "a", "nice", "side", "effect", "Rails", "will", "also", "start", "faster", "NUMBER", "I", "tried", "what", "you", "suggested", "but", "unfortunately", "it", "doesn", "t", "help", "NUMBER", "I", "still", "get", "sh", "Users", "mhenrixon", "Dropbox", "github", "taskk", "app", "helpers", "calendar_helper", "NUMBER", "rb", "NUMBER", "warning", "already", "initialized", "constant", "Calendar", "Started", "GET", "for", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Processing", "by", "WelcomeController", "index", "as", "HTML", "Called", "from", "app", "controllers", "application_controller", "NUMBER", "rb", "NUMBER", "in", "sign_in_from_cookies", "app", "controllers", "application_controller", "NUMBER", "rb", "NUMBER", "in", "current_user", "app", "controllers", "application_controller", "NUMBER", "rb", "NUMBER", "in", "logged_in", "What", "happens", "if", "you", "remove", "Guard", "from", "the", "Gemfile", "but", "keep", "Cooline", "That", "works", "great", "but", "not", "having", "the", "specs", "run", "in", "the", "background", "be", "scary", "To", "clarify", "it", "s", "only", "the", "rails", "server", "output", "that", "gets", "corrupted", "NUMBER", "RSpec", "formats", "nicely", "Yep", "I", "also", "can", "t", "work", "without", "Guard", "in", "the", "background", "NUMBER", "I", "m", "just", "trying", "to", "understand", "what", "s", "happening", "P", "So", "to", "summarize", "Only", "Guard", "works", "fine", "Only", "Coolline", "works", "fine", "Guard", "and", "Coolline", "doesn", "t", "work", "Hmm", "NUMBER", "Just", "notice", "I", "m", "use", "Lumberjack", "LINK", "but", "when", "I", "remove", "it", "everything", "still", "works", "fine", "NUMBER", "Will", "be", "hard", "to", "fix", "when", "I", "can", "t", "reproduce", "it", "Can", "you", "give", "some", "more", "info", "about", "your", "environment", "OS", "version", "Ruby", "version", "with", "patchlevel", "zsh", "version", "NUMBER", "Can", "you", "try", "to", "change", "to", "another", "terminal", "Terminal", "NUMBER", "app", "iTerm", "NUMBER", "What", "makes", "absolutely", "no", "sense", "to", "me", "be", "the", "fact", "that", "when", "you", "do", "not", "automatically", "require", "Guard", "and", "Coolline", "in", "the", "Gemfile", "why", "do", "it", "break", "I", "mean", "both", "gems", "aren", "t", "loaded", "in", "the", "Rails", "server", "process", "so", "they", "can", "t", "interfere", "with", "the", "Rails", "logger", "at", "all", "NUMBER", "Do", "you", "do", "something", "special", "with", "Bundler", "or", "the", "Ruby", "load", "path", "I", "be", "on", "bundler", "NUMBER", "pre", "version", "because", "of", "be", "on", "Heroku", "NUMBER", "Would", "that", "be", "a", "potential", "problem", "Mac", "OSX", "NUMBER", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "Bundler", "version", "NUMBER", "rc", "NUMBER", "ZSH_VERSION", "NUMBER", "I", "tried", "use", "Terminal", "instead", "of", "iTerm", "NUMBER", "but", "with", "the", "same", "result", "NUMBER", "I", "just", "tried", "on", "another", "project", "with", "the", "same", "results", "image", "showing", "how", "things", "be", "logged", "LINK", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "png", "I", "test", "it", "again", "by", "specify", "Guard", "and", "Coolline", "normally", "in", "the", "Gemfile", "Ruby", "group", "development", "do", "gem", "guard", "gem", "coolline", "end", "run", "rails", "s", "with", "the", "exact", "same", "Ruby", "version", "NUMBER", "Works", "fine", "NUMBER", "Then", "I", "notice", "that", "the", "Mountain", "Lion", "upgrade", "has", "reset", "my", "login", "shell", "to", "NUMBER", "Switched", "ZSH", "to", "NUMBER", "Still", "works", "fine", "NUMBER", "Upgraded", "to", "Bundler", "NUMBER", "rc", "NUMBER", "Again", "works", "fine", "NUMBER", "I", "test", "it", "with", "the", "latest", "Rails", "NUMBER", "Is", "the", "log", "also", "like", "this", "in", "the", "development", "NUMBER", "log", "file", "or", "just", "in", "the", "console", "output", "Only", "the", "console", "output", "be", "messed", "up", "NUMBER", "Log", "file", "looks", "great", "as", "always", "NUMBER", "Going", "to", "try", "a", "spanking", "new", "project", "and", "see", "what", "happens", "with", "just", "guard", "and", "coolline", "I", "ve", "use", "iTerm", "NUMBER", "Build", "NUMBER", "with", "UTF", "and", "xterm", "NUMBER", "guard", "core", "team", "anyone", "seen", "this", "behavior", "I", "get", "the", "same", "problem", "with", "a", "WEBrick", "spanking", "new", "rails", "app", "though", "I", "have", "to", "add", "gem", "guard", "rails", "as", "well", "NUMBER", "iTerm", "NUMBER", "Build", "NUMBER", "Yep", "guard", "rails", "was", "the", "miss", "puzzle", "peace", "and", "I", "can", "finally", "reproduce", "the", "issue", "NUMBER", "netzpirat", "that", "s", "such", "a", "relief", "I", "was", "ready", "to", "tear", "my", "new", "Macbook", "Pro", "apart", "NUMBER", "I", "had", "a", "look", "at", "guard", "rails", "and", "the", "runner", "uses", "Kernel", "system", "LINK", "doc", "NUMBER", "org", "core", "NUMBER", "Kernel", "NUMBER", "html", "method", "i", "system", "to", "start", "the", "Rails", "process", "LINK", "rails", "blob", "master", "lib", "guard", "rails", "runner", "NUMBER", "rb", "L", "NUMBER", "in", "a", "subshell", "NUMBER", "A", "subshell", "has", "the", "same", "environment", "as", "the", "process", "that", "spawned", "it", "so", "Coolline", "gets", "loaded", "in", "the", "Rails", "process", "NUMBER", "I", "don", "t", "understand", "too", "much", "about", "the", "underlying", "IO", "and", "why", "this", "all", "be", "happening", "but", "I", "ve", "find", "a", "workaround", "NUMBER", "In", "guard", "rspec", "the", "run_rails_command", "LINK", "rails", "blob", "master", "lib", "guard", "rails", "runner", "NUMBER", "rb", "L", "NUMBER", "can", "be", "replaced", "by", "Ruby", "def", "run_rails_command", "stdin", "stdout", "stderr", "Open", "NUMBER", "popen", "NUMBER", "build_rails_command", "Thread", "NUMBER", "new", "do", "loop", "do", "out", "stdout", "NUMBER", "gets", "print", "r", "e", "NUMBER", "m", "e", "NUMBER", "K", "print", "out", "if", "out", "end", "end", "end", "The", "key", "be", "print", "r", "e", "NUMBER", "m", "e", "NUMBER", "K", "which", "seems", "to", "resets", "the", "line", "This", "be", "taken", "from", "Coolline", "LINK", "Ouie", "coolline", "blob", "master", "lib", "coolline", "coolline", "NUMBER", "rb", "L", "NUMBER", "and", "I", "don", "t", "understand", "why", "this", "works", "NUMBER", "Without", "this", "line", "a", "subsequent", "puts", "never", "goes", "back", "to", "the", "start", "of", "the", "line", "puts", "hi", "puts", "hi", "puts", "hi", "will", "be", "outputted", "as", "hi", "hi", "hi", "Perhaps", "this", "helps", "Mon", "Ouie", "to", "understand", "the", "real", "problem", "NUMBER", "I", "had", "something", "interesting", "happen", "NUMBER", "I", "was", "run", "coolline", "just", "fine", "with", "zsh", "guard", "rspec", "guard", "ctags", "bundler", "NUMBER", "I", "change", "to", "add", "group", "into", "my", "Guardfile", "to", "split", "my", "acceptance", "test", "and", "unit", "test", "NUMBER", "That", "be", "the", "point", "when", "the", "output", "start", "be", "like", "line", "NUMBER", "line", "NUMBER", "line", "NUMBER", "As", "discussed", "on", "the", "other", "issue", "the", "reason", "this", "happens", "be", "something", "gets", "output", "when", "stdin", "be", "in", "raw", "mode", "which", "be", "the", "case", "because", "Coolline", "be", "calling", "getch", "at", "that", "moment", "NUMBER", "To", "fix", "that", "you", "d", "need", "a", "way", "to", "be", "notified", "when", "the", "user", "presses", "a", "key", "without", "having", "to", "turn", "it", "on", "NUMBER", "netzpirat", "s", "workaround", "works", "because", "it", "resets", "the", "cursor", "on", "every", "line", "that", "be", "received", "from", "the", "subprocess", "NUMBER", "Output", "seem", "ok", "for", "me", "but", "sending", "input", "works", "a", "little", "differently", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "fe", "NUMBER", "b", "NUMBER", "into", "NUMBER", "a", "NUMBER", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "bcdc", "NUMBER", "ff", "NUMBER", "into", "NUMBER", "a", "NUMBER", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "bcdc", "NUMBER", "ff", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "on", "clear", "into", "on", "master", "NUMBER", "As", "discussed", "in", "NUMBER", "the", "TerminalNotifier", "for", "native", "OS", "X", "NUMBER", "user", "notifications", "lacked", "support", "for", "different", "icons", "for", "different", "statuses", "NUMBER", "I", "be", "happy", "to", "announce", "the", "terminal", "notifier", "guard", "LINK", "notifier", "guard", "gem", "The", "gem", "has", "NUMBER", "different", "status", "notifiers", "each", "with", "their", "own", "icon", "for", "the", "following", "statuses", "NUMBER", "Pending", "NUMBER", "Failed", "NUMBER", "Success", "NUMBER", "Notify", "I", "update", "the", "TerminalNotifier", "inside", "Guard", "to", "use", "our", "new", "gem", "and", "finally", "have", "our", "beloved", "icons", "back", "NUMBER", "Special", "thanks", "go", "out", "to", "alloy", "for", "make", "the", "initial", "TerminalNotifier", "LINK", "notifier", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "dc", "NUMBER", "a", "into", "c", "NUMBER", "d", "NUMBER", "Works", "great", "NUMBER", "Thanks", "a", "lot", "for", "your", "effort", "NUMBER", "works", "like", "a", "charm", "Glad", "you", "guys", "like", "it", "And", "cool", "to", "see", "it", "release", "so", "soon", "too", "Hi", "NUMBER", "If", "you", "run", "guard", "with", "the", "c", "option", "Guard", "be", "clears", "the", "screen", "before", "run", "new", "test", "NUMBER", "There", "be", "a", "problem", "however", "when", "use", "in", "conjunction", "with", "multiple", "guard", "group", "NUMBER", "See", "the", "following", "example", "of", "a", "scenario", "with", "two", "group", "NUMBER", "File", "modify", "NUMBER", "NUMBER", "Guard", "checks", "Group", "A", "NUMBER", "Clear", "screen", "NUMBER", "NUMBER", "Matching", "rule", "find", "run", "test", "NUMBER", "NUMBER", "Guard", "checks", "Group", "B", "NUMBER", "Clear", "screen", "NUMBER", "NUMBER", "No", "matching", "rule", "find", "do", "nothing", "NUMBER", "Which", "means", "the", "user", "sees", "test", "run", "and", "then", "they", "disappear", "before", "they", "can", "be", "read", "NUMBER", "Extra", "info", "With", "my", "setup", "this", "be", "consistently", "replicatable", "NUMBER", "Given", "the", "Guardfile", "below", "if", "I", "edit", "anything", "under", "lib", "blah", "the", "screen", "gets", "clears", "twice", "NUMBER", "If", "I", "edit", "anything", "under", "test", "unit", "or", "test", "spec", "then", "it", "correctly", "only", "gets", "cleared", "once", "NUMBER", "Guardfile", "simplified", "ruby", "Ignore", "Vim", "swap", "file", "ignore", "ignore", "NUMBER", "NUMBER", "NUMBER", "sw", "p", "z", "group", "unit", "do", "guard", "minitest", "test_folders", "test", "unit", "test_file_patterns", "_test", "NUMBER", "rb", "do", "watch", "r", "lib", "blah", "NUMBER", "NUMBER", "rb", "m", "test", "unit", "m", "NUMBER", "_test", "NUMBER", "rb", "watch", "r", "test", "unit", "NUMBER", "_test", "NUMBER", "rb", "end", "end", "group", "spec", "do", "guard", "rspec", "binstubs", "true", "spec_paths", "test", "spec", "all_on_start", "false", "all_after_pass", "false", "do", "watch", "r", "lib", "blah", "NUMBER", "NUMBER", "rb", "m", "test", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "test", "spec", "NUMBER", "_spec", "NUMBER", "rb", "end", "end", "Sounds", "like", "a", "plan", "NUMBER", "Maybe", "it", "d", "help", "to", "have", "the", "clear", "screen", "code", "could", "be", "in", "it", "s", "own", "class", "that", "then", "gets", "pass", "around", "to", "anyone", "interested", "that", "would", "make", "it", "easy", "for", "it", "to", "maintain", "its", "own", "state", "NUMBER", "Just", "an", "idea", "No", "worries", "mate", "If", "there", "s", "anything", "you", "d", "like", "me", "to", "help", "with", "just", "give", "me", "a", "shout", "Just", "test", "it", "out", "I", "couldn", "t", "reproduce", "the", "problem", "works", "perfectly", "Nice", "work", "mate", "It", "would", "be", "cool", "if", "interactive", "mode", "would", "support", "passing", "argument", "to", "one", "of", "the", "guards", "particularly", "i", "want", "to", "use", "rspec", "s", "e", "to", "run", "specific", "examples", "and", "so", "on", "Ah", "maybe", "I", "should", "probably", "look", "into", "it", "myself", "It", "s", "opensource", "after", "all", "Meanwhile", "those", "who", "need", "this", "too", "may", "use", "rspec", "s", "filters", "As", "request", "in", "NUMBER", "Let", "me", "know", "if", "there", "s", "anything", "miss", "or", "wrong", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "b", "into", "NUMBER", "a", "NUMBER", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "ecdd", "NUMBER", "d", "NUMBER", "into", "NUMBER", "a", "NUMBER", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "eb", "NUMBER", "fdd", "NUMBER", "b", "into", "NUMBER", "a", "NUMBER", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "eb", "NUMBER", "bc", "NUMBER", "into", "NUMBER", "a", "NUMBER", "NUMBER", "Thanks", "for", "the", "feedback", "and", "looking", "into", "it", "NUMBER", "Changing", "the", "image", "be", "harder", "than", "I", "expected", "I", "tried", "symlinking", "the", "icns", "file", "and", "even", "copying", "the", "entire", "NUMBER", "app", "bundle", "but", "the", "icons", "remains", "cached", "in", "OS", "X", "NUMBER", "Which", "means", "that", "the", "icon", "will", "stay", "the", "same", "once", "the", "app", "be", "call", "no", "matter", "what", "you", "do", "All", "I", "can", "think", "of", "be", "ask", "alloy", "whether", "he", "can", "make", "a", "bunch", "of", "clones", "of", "his", "terminal", "notifier", "LINK", "notifier", "for", "each", "status", "success", "error", "pending", "etc", "NUMBER", "and", "each", "with", "an", "icon", "matching", "it", "s", "status", "NUMBER", "I", "would", "do", "it", "myself", "but", "I", "don", "t", "have", "an", "Appl", "developer", "account", "NUMBER", "What", "do", "the", "nsnotify", "gem", "do", "over", "the", "terminal", "notifier", "gem", "LINK", "notifier", "Changing", "the", "image", "be", "harder", "than", "I", "expected", "I", "tried", "symlinking", "the", "icns", "file", "and", "even", "copying", "the", "entire", "NUMBER", "app", "bundle", "but", "the", "icons", "remains", "cached", "in", "OS", "X", "NUMBER", "Which", "means", "that", "the", "icon", "will", "stay", "the", "same", "once", "the", "app", "be", "call", "no", "matter", "what", "you", "do", "All", "I", "can", "think", "of", "be", "ask", "alloy", "whether", "he", "can", "make", "a", "bunch", "of", "clones", "of", "his", "terminal", "notifier", "for", "each", "status", "success", "error", "pending", "etc", "NUMBER", "and", "each", "with", "an", "icon", "matching", "it", "s", "status", "NUMBER", "I", "would", "do", "it", "myself", "but", "I", "don", "t", "have", "an", "Appl", "developer", "account", "NUMBER", "You", "have", "to", "change", "the", "bundle", "identifier", "of", "the", "app", "for", "the", "correct", "not", "cached", "image", "to", "be", "use", "NUMBER", "But", "this", "be", "not", "how", "NotificationCenter", "be", "supposed", "to", "be", "use", "you", "should", "have", "one", "notification", "look", "per", "app", "NUMBER", "For", "that", "reason", "and", "that", "I", "don", "t", "want", "to", "be", "responsible", "for", "build", "of", "every", "version", "for", "everyone", "that", "wants", "a", "custom", "icon", "I", "regret", "to", "say", "that", "I", "won", "t", "do", "this", "NUMBER", "What", "do", "the", "nsnotify", "gem", "do", "over", "the", "terminal", "notifier", "gem", "Why", "nothing", "I", "didn", "t", "know", "about", "your", "gem", "In", "fact", "I", "d", "be", "happy", "to", "change", "the", "pull", "to", "use", "your", "gem", "if", "that", "s", "what", "you", "want", "NUMBER", "For", "that", "reason", "and", "that", "I", "don", "t", "want", "to", "be", "responsible", "for", "build", "of", "every", "version", "for", "everyone", "that", "wants", "a", "custom", "icon", "I", "regret", "to", "say", "that", "I", "won", "t", "do", "this", "NUMBER", "I", "can", "imagine", "that", "NUMBER", "It", "was", "just", "a", "thought", "NUMBER", "What", "do", "the", "nsnotify", "gem", "do", "over", "the", "terminal", "notifier", "gem", "Why", "nothing", "I", "didn", "t", "know", "about", "your", "gem", "In", "fact", "I", "d", "be", "happy", "to", "change", "the", "pull", "to", "use", "your", "gem", "if", "that", "s", "what", "you", "want", "NUMBER", "Ah", "I", "see", "your", "gem", "be", "newer", "than", "mine", "that", "s", "the", "reason", "I", "could", "not", "find", "it", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "ccf", "NUMBER", "into", "NUMBER", "a", "NUMBER", "NUMBER", "Alright", "I", "altered", "the", "implementation", "to", "use", "alloy", "s", "gem", "instead", "of", "mine", "NUMBER", "Thanks", "and", "kudo", "s", "to", "you", "from", "Guard", "and", "of", "course", "Alloy", "for", "make", "the", "app", "and", "the", "gem", "NUMBER", "Awesome", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "ac", "NUMBER", "c", "NUMBER", "a", "into", "NUMBER", "a", "NUMBER", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "ef", "NUMBER", "bf", "NUMBER", "into", "NUMBER", "a", "NUMBER", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "ddc", "NUMBER", "into", "NUMBER", "a", "NUMBER", "NUMBER", "I", "was", "thinking", "of", "add", "another", "feature", "passing", "options", "on_error", "and", "on_success", "to", "execute", "some", "command", "NUMBER", "This", "way", "I", "can", "e", "NUMBER", "g", "NUMBER", "play", "a", "sound", "on", "error", "by", "passing", "options", "in", "my", "Guardfile", "like", "so", "ruby", "notification", "terminal_notifier", "app_name", "MyApp", "on_error", "usr", "bin", "afplay", "System", "Library", "Sounds", "Basso", "NUMBER", "aiff", "activate", "com", "NUMBER", "googlecode", "NUMBER", "iTerm", "NUMBER", "This", "plays", "the", "Basso", "sound", "whenever", "a", "test", "fail", "and", "compensates", "for", "the", "fact", "that", "we", "can", "t", "change", "the", "app", "icon", "imo", "NUMBER", "What", "do", "you", "guys", "think", "BTW", "The", "activate", "option", "make", "sure", "iTerm", "NUMBER", "gets", "focus", "when", "I", "click", "the", "notification", "rather", "than", "the", "default", "Terminal", "app", "NUMBER", "foxycoder", "The", "command", "be", "executed", "when", "you", "click", "the", "notification", "by", "that", "time", "you", "probably", "already", "know", "the", "status", "no", "I", "NUMBER", "e", "NUMBER", "playing", "an", "extra", "sound", "to", "indicate", "the", "status", "might", "not", "be", "that", "useful", "NUMBER", "Anyways", "I", "m", "just", "thinking", "out", "loud", "alloy", "Yeah", "sorry", "I", "was", "not", "clear", "NUMBER", "I", "want", "to", "run", "the", "command", "from", "the", "notify", "method", "in", "Ruby", "rather", "than", "pass", "it", "on", "to", "the", "terminal", "notifier", "app", "for", "the", "reason", "you", "just", "mention", "NUMBER", "This", "be", "great", "I", "just", "returned", "from", "holidays", "and", "want", "to", "get", "start", "with", "this", "and", "boom", "here", "it", "be", "already", "NUMBER", "I", "m", "currently", "update", "my", "hardware", "zoo", "to", "Mountain", "Lion", "and", "will", "merge", "and", "test", "it", "tomorrow", "NUMBER", "Thanks", "a", "lot", "NUMBER", "Yeah", "that", "d", "be", "nice", "NUMBER", "In", "the", "meantime", "I", "get", "my", "hands", "on", "an", "Apple", "dev", "account", "from", "work", "so", "I", "could", "make", "those", "if", "needed", "NUMBER", "Unless", "alloy", "reconsiders", "and", "wants", "to", "do", "it", "himself", "Let", "me", "know", "how", "I", "can", "help", "NUMBER", "Thanks", "a", "lot", "foxycoder", "works", "great", "I", "just", "change", "some", "code", "style", "and", "add", "complete", "YARDOC", "to", "the", "notifier", "so", "that", "all", "notifiers", "looks", "similar", "NUMBER", "We", "should", "make", "new", "pull", "request", "for", "a", "guard", "terminal", "notifier", "gem", "or", "on_error", "or", "on_success", "callbacks", "NUMBER", "Coverage", "Status", "LINK", "LINK", "Changes", "Unknown", "when", "pulling", "NUMBER", "ddc", "NUMBER", "af", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "on", "foxycoder", "nsnotify", "into", "on", "guard", "master", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "f", "NUMBER", "into", "cd", "NUMBER", "e", "NUMBER", "Could", "somebody", "please", "update", "the", "doco", "to", "clarify", "the", "difference", "between", "ignore", "and", "filter", "It", "s", "unclear", "and", "filtering", "out", "and", "ignoring", "sounds", "like", "the", "same", "thing", "to", "me", "NUMBER", "Ahhh", "right", "so", "to", "put", "it", "simply", "ignore", "be", "for", "directories", "and", "filter", "be", "for", "file", "NUMBER", "Is", "that", "right", "The", "ignore", "method", "can", "be", "use", "to", "_exclude_", "a", "file", "or", "a", "directory", "from", "the", "set", "of", "file", "be", "watched", "NUMBER", "Let", "s", "say", "you", "have", "use", "the", "watch", "method", "to", "monitor", "a", "directory", "but", "you", "be", "not", "interested", "in", "change", "happening", "to", "images", "you", "could", "use", "the", "ignore", "method", "to", "exclude", "them", "NUMBER", "The", "filter", "method", "has", "a", "different", "purpose", "NUMBER", "It", "can", "be", "use", "to", "_focus", "on_", "or", "rather", "_filter_", "the", "important", "file", "and", "directories", "without", "having", "to", "specify", "them", "by", "hand", "in", "the", "watch", "method", "NUMBER", "If", "you", "be", "watching", "multiple", "directories", "but", "only", "interested", "in", "change", "to", "the", "ruby", "file", "use", "the", "filter", "method", "NUMBER", "As", "rymai", "said", "above", "both", "of", "them", "can", "be", "use", "for", "file", "and", "directories", "NUMBER", "Yeah", "I", "guess", "that", "should", "be", "do", "to", "stop", "confusing", "more", "people", "NUMBER", "Thanks", "guys", "NUMBER", "ignore", "sounds", "very", "straightforward", "NUMBER", "Let", "me", "just", "clarify", "again", "so", "if", "I", "m", "understanding", "you", "correctly", "then", "when", "watch", "be", "call", "to", "watch", "a", "directory", "with", "no", "filename", "provide", "filter", "specifies", "a", "regex", "that", "all", "file", "in", "that", "directory", "must", "match", "in", "order", "to", "be", "further", "processed", "with", "non", "matching", "file", "be", "ignored", "NUMBER", "Ok", "sweet", "NUMBER", "Thanks", "for", "the", "time", "explaining", "it", "to", "me", "guys", "I", "ll", "leave", "the", "issue", "open", "as", "a", "reminder", "to", "give", "the", "README", "some", "extra", "love", "NUMBER", "Just", "close", "whenever", "don", "t", "mind", "me", "hello", "i", "d", "like", "to", "abuse", "guard", "to", "build", "my", "project", "NUMBER", "normally", "i", "be", "not", "a", "ruby", "guy", "and", "use", "grunt", "NUMBER", "js", "for", "build", "my", "project", "NUMBER", "but", "since", "guard", "be", "much", "better", "as", "watching", "manually", "at", "my", "file", "i", "be", "ask", "myself", "if", "there", "be", "no", "posibility", "to", "run", "guard", "initially", "over", "all", "the", "file", "NUMBER", "so", "i", "d", "like", "to", "init", "my", "project", "with", "compile", "coffee", "haml", "and", "all", "the", "stuff", "NUMBER", "Does", "anybody", "has", "any", "ideas", "how", "to", "do", "it", "thanks", "a", "lot", "A", "simple", "solution", "would", "be", "to", "normally", "define", "a", "Guardfile", "and", "trigger", "all", "plugins", "at", "the", "end", "Ruby", "guard", "coffeescript", "input", "src", "output", "lib", "Guard", "NUMBER", "run_all", "it", "worked", "thanks", "a", "lot", "NUMBER", "the", "other", "posibility", "be", "since", "its", "support", "by", "the", "specific", "module", "use", "the", "following", "option", "thx", "to", "rymai", "all_on_start", "true", "maybe", "you", "can", "put", "it", "in", "the", "docs", "anyway", "NUMBER", "thanks", "a", "lot", "NUMBER", "This", "be", "a", "feature", "request", "to", "have", "a", "command", "like", "run_all", "that", "executes", "the", "previous", "triggered", "test", "set", "again", "preferably", "use", "enter", "as", "well", "with", "a", "separate", "command", "to", "togger", "the", "behavior", "for", "enter", "In", "case", "it", "be", "too", "confusing", "let", "s", "suppose", "the", "switch", "key", "be", "x", "TAG", "NUMBER", "test", "group", "Y", "executed", "x", "toggles", "behavior", "enter", "re", "run", "test", "group", "Y", "enter", "re", "run", "test", "group", "Y", "x", "toggle", "behavior", "enter", "re", "run", "all", "test", "Optional", "while", "in", "run_previous", "mode", "test", "group", "Y", "be", "locked", "but", "will", "not", "be", "modify", "if", "other", "test", "be", "triggered", "by", "file", "change", "NUMBER", "test", "group", "Y", "executed", "x", "toggles", "behavior", "enter", "re", "run", "test", "group", "Y", "NUMBER", "test", "group", "X", "triggered", "by", "file", "change", "enter", "re", "run", "test", "group", "Y", "TAG", "The", "word", "in", "the", "example", "be", "a", "bit", "confusing", "since", "in", "the", "context", "of", "Guard", "a", "group", "be", "a", "group", "of", "Guard", "plugins", "and", "not", "a", "set", "of", "change", "file", "but", "I", "guess", "you", "just", "want", "to", "be", "able", "to", "re", "trigger", "the", "latest", "file", "change", "again", "NUMBER", "I", "do", "not", "really", "understand", "the", "need", "for", "this", "because", "when", "a", "test", "fail", "you", "always", "modify", "either", "the", "code", "or", "the", "test", "and", "thus", "trigger", "the", "file", "change", "with", "your", "modification", "rather", "than", "a", "key", "stroke", "in", "the", "Guard", "interactor", "NUMBER", "When", "the", "test", "pass", "why", "rerun", "it", "Most", "test", "plugins", "like", "guard", "rspec", "guard", "test", "and", "guard", "cucumber", "keep", "the", "last", "fail", "test", "internally", "and", "you", "can", "re", "trigger", "these", "fail", "specs", "with", "the", "change", "command", "without", "any", "file", "supplied", "in", "the", "interactor", "NUMBER", "but", "I", "guess", "you", "just", "want", "to", "be", "able", "to", "re", "trigger", "the", "latest", "file", "change", "again", "Not", "exactly", "the", "focus", "be", "on", "the", "result", "of", "those", "file", "change", "the", "set", "of", "test", "actions", "that", "were", "executed", "by", "plugins", "but", "I", "suppose", "it", "can", "be", "implement", "by", "storing", "the", "file", "change", "to", "be", "re", "invoked", "later", "I", "do", "not", "really", "understand", "the", "need", "for", "this", "Often", "I", "would", "find", "myself", "work", "on", "a", "portion", "of", "the", "code", "like", "a", "new", "method", "in", "application_helper", "NUMBER", "rb", "which", "will", "usually", "cause", "all", "test", "features", "to", "be", "triggered", "and", "that", "be", "undesirable", "against", "a", "set", "of", "test", "file", "that", "would", "not", "belong", "to", "a", "definition", "in", "Guardfile", "NUMBER", "It", "be", "only", "a", "temporary", "stage", "in", "the", "development", "process", "and", "thus", "it", "would", "be", "a", "waste", "of", "time", "to", "define", "the", "regex", "that", "captures", "that", "association", "NUMBER", "In", "other", "words", "I", "be", "looking", "for", "a", "means", "to", "focus", "on", "a", "particular", "test", "group", "that", "has", "be", "previously", "triggered", "by", "some", "predefined", "watch", "expression", "with", "no", "condition", "on", "their", "passing", "failure", "or", "file", "change", "NUMBER", "Enter", "be", "just", "a", "convenient", "hotkey", "on", "top", "of", "its", "default", "function", "since", "I", "do", "not", "need", "run_all", "all", "the", "time", "Most", "test", "plugins", "like", "guard", "rspec", "guard", "test", "and", "guard", "cucumber", "keep", "the", "last", "fail", "test", "internally", "and", "you", "can", "re", "trigger", "these", "fail", "specs", "with", "the", "change", "command", "without", "any", "file", "supplied", "in", "the", "interactor", "NUMBER", "This", "may", "help", "but", "I", "can", "t", "seem", "to", "get", "it", "to", "work", "the", "prompt", "change", "to", "change", "but", "nothing", "happens", "even", "when", "I", "have", "a", "fail", "scenario", "from", "the", "previous", "trigger", "keep_failed", "be", "true", "Not", "exactly", "the", "focus", "be", "on", "the", "result", "of", "those", "file", "change", "the", "set", "of", "test", "actions", "that", "were", "executed", "by", "plugins", "but", "I", "suppose", "it", "can", "be", "implement", "by", "storing", "the", "file", "change", "to", "be", "re", "invoked", "later", "Yes", "it", "must", "be", "implement", "in", "that", "way", "since", "some", "Guard", "plugins", "do", "further", "processing", "of", "the", "paths", "but", "Guard", "itself", "doesn", "t", "know", "about", "this", "NUMBER", "In", "other", "words", "I", "be", "looking", "for", "a", "means", "to", "focus", "on", "a", "particular", "test", "group", "that", "has", "be", "previously", "triggered", "by", "some", "predefined", "watch", "expression", "with", "no", "condition", "on", "their", "passing", "failure", "or", "file", "change", "NUMBER", "Enter", "be", "just", "a", "convenient", "hotkey", "on", "top", "of", "its", "default", "function", "since", "I", "do", "not", "need", "run_all", "all", "the", "time", "Ok", "I", "see", "NUMBER", "I", "think", "focus", "be", "a", "good", "name", "for", "this", "feature", "and", "f", "be", "also", "free", "in", "the", "interactor", "commands", "NUMBER", "So", "let", "me", "summarize", "it", "NUMBER", "Guard", "stores", "the", "latest", "file", "change", "NUMBER", "NUMBER", "The", "user", "presses", "f", "or", "focus", "in", "the", "interactor", "NUMBER", "NUMBER", "The", "interactor", "prompt", "change", "to", "f", "to", "indicate", "that", "Guard", "be", "on", "focus", "mode", "NUMBER", "The", "focus", "mode", "pauses", "the", "file", "listener", "similar", "to", "p", "or", "pause", "but", "when", "the", "user", "presses", "TAG", "the", "latest", "file", "change", "will", "be", "re", "triggered", "instead", "of", "run", "all", "file", "NUMBER", "NUMBER", "Pressing", "f", "or", "focus", "again", "switches", "Guard", "back", "to", "normal", "mode", "NUMBER", "This", "may", "help", "but", "I", "can", "t", "seem", "to", "get", "it", "to", "work", "the", "prompt", "change", "to", "change", "but", "nothing", "happens", "even", "when", "I", "have", "a", "fail", "scenario", "from", "the", "previous", "trigger", "keep_failed", "be", "true", "Strange", "that", "should", "work", "NUMBER", "I", "ll", "have", "a", "look", "when", "implement", "this", "feature", "NUMBER", "netzpirat", "What", "I", "had", "in", "mind", "be", "NUMBER", "Guard", "stores", "the", "latest", "file", "change", "NUMBER", "NUMBER", "The", "user", "presses", "f", "or", "focus", "in", "the", "interactor", "NUMBER", "NUMBER", "The", "interactor", "prompt", "change", "to", "f", "to", "indicate", "that", "Guard", "be", "on", "focus", "mode", "NUMBER", "When", "the", "user", "presses", "TAG", "the", "stored", "file", "change", "will", "be", "re", "triggered", "instead", "of", "run", "all", "file", "NUMBER", "The", "file", "listener", "still", "works", "as", "normal", "if", "other", "file", "change", "take", "place", "in", "the", "middle", "of", "this", "mode", "they", "just", "do", "not", "get", "stored", "NUMBER", "NUMBER", "Pressing", "f", "or", "focus", "again", "switches", "Guard", "back", "to", "normal", "mode", "NUMBER", "But", "either", "way", "should", "be", "fine", "if", "not", "pausing", "the", "file", "listener", "happens", "to", "be", "problematic", "for", "any", "reason", "rymai", "I", "be", "not", "looking", "for", "such", "fine", "grained", "control", "to", "run", "only", "certain", "test", "within", "a", "file", "just", "a", "way", "to", "minimize", "the", "need", "to", "execute", "_all_", "test", "or", "look", "for", "some", "particular", "file", "and", "edit", "it", "in", "order", "to", "trigger", "the", "test", "file", "s", "I", "want", "to", "be", "executed", "and", "only", "those", "NUMBER", "Also", "not", "having", "to", "modify", "the", "test", "file", "for", "this", "purpose", "would", "be", "a", "plus", "NUMBER", "What", "I", "have", "in", "mind", "be", "more", "than", "just", "a", "particular", "spec", "file", "maybe", "it", "would", "help", "if", "I", "give", "an", "example", "of", "the", "watch", "expressions", "I", "be", "use", "LINK", "My", "watch", "expressions", "should", "capture", "most", "of", "the", "normal", "cases", "where", "the", "name", "of", "the", "modify", "file", "can", "be", "properly", "matched", "to", "similarly", "named", "test", "file", "i", "NUMBER", "e", "NUMBER", "something", "foo", "should", "trigger", "all", "the", "_foo_", "features", "specs", "etc", "but", "sometimes", "the", "names", "do", "not", "match", "or", "I", "could", "be", "work", "on", "an", "application", "level", "file", "but", "only", "interested", "in", "the", "impact", "on", "a", "smaller", "group", "of", "file", "NUMBER", "Since", "I", "know", "that", "modifying", "some", "foo", "file", "will", "trigger", "that", "foo", "group", "of", "test", "file", "given", "the", "exist", "watch", "expressions", "why", "not", "make", "use", "of", "this", "property", "and", "save", "myself", "from", "write", "temporary", "watch", "expressions", "and", "switching", "between", "editing", "test", "file", "unrelated", "to", "my", "goal", "and", "risk", "corrupting", "them", "Another", "concern", "be", "that", "I", "try", "to", "avoid", "having", "overly", "specific", "and", "possibly", "convoluted", "watch", "expressions", "so", "that", "the", "configuration", "can", "be", "reused", "across", "multiple", "projects", "NUMBER", "Although", "your", "usecase", "seems", "centerd", "around", "test", "I", "still", "can", "t", "see", "the", "point", "of", "this", "feature", "NUMBER", "Rspec", "already", "gives", "you", "the", "filtering", "posibilities", "rymai", "mention", "above", "NUMBER", "rymai", "I", "be", "not", "looking", "for", "such", "fine", "grained", "control", "to", "run", "only", "certain", "test", "within", "a", "file", "just", "a", "way", "to", "minimize", "the", "need", "to", "execute", "all", "test", "or", "look", "for", "some", "particular", "file", "and", "edit", "it", "in", "order", "to", "trigger", "the", "test", "file", "s", "I", "want", "to", "be", "executed", "and", "only", "those", "NUMBER", "Also", "not", "having", "to", "modify", "the", "test", "file", "for", "this", "purpose", "would", "be", "a", "plus", "NUMBER", "I", "don", "t", "understand", "why", "you", "wouldn", "t", "want", "to", "edit", "the", "specs", "to", "add", "the", "focus", "symbol", "if", "you", "be", "interested", "in", "the", "effect", "a", "change", "will", "have", "on", "a", "different", "part", "of", "your", "spec", "NUMBER", "If", "you", "decouple", "your", "code", "into", "classes", "and", "modules", "and", "test", "them", "separately", "you", "would", "use", "mocks", "and", "stubs", "anyway", "in", "your", "test", "so", "change", "to", "other", "file", "shouldn", "t", "have", "any", "effect", "NUMBER", "Changes", "to", "shared", "code", "like", "the", "one", "in", "application_helper", "NUMBER", "rb", "should", "trigger", "change", "to", "multiple", "spec", "file", "IMHO", "NUMBER", "How", "would", "you", "know", "otherwise", "that", "you", "broke", "something", "with", "your", "change", "Also", "please", "remember", "that", "Guard", "be", "use", "in", "multiple", "contexts", "NUMBER", "The", "usecases", "for", "this", "feature", "seem", "to", "be", "limited", "NUMBER", "If", "you", "still", "think", "that", "this", "feature", "be", "necessarily", "I", "would", "appreciate", "it", "if", "you", "can", "give", "an", "example", "in", "which", "this", "feature", "be", "better", "than", "just", "filtering", "a", "spec", "NUMBER", "run_all", "now", "takes", "over", "NUMBER", "minutes", "for", "a", "real", "project", "I", "be", "trying", "to", "run", "a", "smaller", "set", "of", "spec", "file", "at", "any", "given", "time", "based", "on", "my", "named", "group", "and", "not", "having", "to", "define", "extra", "expressions", "for", "those", "NUMBER", "NUMBER", "cases", "NUMBER", "This", "be", "not", "about", "trying", "to", "run", "one", "test", "in", "the", "middle", "of", "one", "particular", "spec", "file", "NUMBER", "I", "have", "no", "idea", "why", "you", "be", "so", "fixated", "on", "that", "o", "NUMBER", "o", "prusswan", "Ok", "let", "me", "explain", "to", "you", "how", "I", "see", "this", "feature", "work", "NUMBER", "I", "think", "that", "rymai", "has", "a", "good", "description", "of", "a", "simple", "scenario", "NUMBER", "In", "that", "scenario", "Guard", "would", "need", "to", "capture", "the", "last", "change", "step", "NUMBER", "which", "means", "you", "need", "to", "manually", "trigger", "it", "somehow", "NUMBER", "Then", "you", "would", "enter", "the", "focus", "mode", "and", "keep", "on", "_pressing", "Enter_", "as", "needed", "NUMBER", "Doesn", "t", "that", "simply", "translate", "into", "open", "a", "new", "terminal", "or", "tab", "and", "run", "rspec", "SET_OF_SPEC_FILES", "as", "needed", "Guard", "s", "purpose", "be", "to", "run", "a", "command", "automatically", "based", "on", "a", "change", "NUMBER", "You", "want", "Guard", "to", "capture", "a", "change", "and", "then", "trigger", "the", "associated", "command", "manually", "but", "it", "s", "simpler", "to", "run", "the", "command", "yourself", "in", "the", "terminal", "and", "cut", "the", "middleman", "NUMBER", "How", "will", "run", "rspec", "SET_OF_SPEC_FILES", "as", "need", "really", "be", "feasible", "considering", "that", "it", "may", "be", "_any_", "combination", "of", "regex", "group", "and", "or", "named", "group", "already", "defined", "in", "the", "Guardfile", "The", "only", "thing", "that", "_may_", "be", "feasible", "now", "be", "to", "repeatedly", "execute", "change", "on", "the", "specific", "file", "I", "know", "that", "will", "trigger", "the", "desired", "group", "but", "looking", "at", "how", "enter", "already", "works", "for", "run_all", "and", "how", "I", "prefer", "it", "to", "work", "as", "run_some", "in", "certain", "cases", "NUMBER", "it", "should", "not", "be", "too", "hard", "to", "understand", "where", "this", "be", "going", "NUMBER", "Personally", "I", "think", "this", "be", "just", "add", "convenience", "and", "a", "variant", "of", "run_all", "if", "this", "be", "too", "much", "trouble", "I", "will", "just", "fork", "it", "and", "implement", "it", "when", "I", "have", "the", "time", "NUMBER", "Thanks", "for", "your", "attention", "It", "s", "not", "about", "be", "to", "much", "trouble", "for", "us", "it", "s", "about", "convince", "other", "people", "to", "do", "some", "free", "work", "NUMBER", "In", "order", "that", "I", "do", "this", "I", "must", "either", "have", "a", "personal", "use", "of", "the", "feature", "or", "be", "sure", "that", "a", "_lot", "of", "other", "people_", "want", "this", "I", "guess", "other", "core", "member", "have", "similar", "weights", "NUMBER", "Before", "we", "can", "do", "this", "balance", "we", "need", "to", "_fully", "understand_", "the", "feature", "request", "and", "this", "include", "question", "like", "why", "aren", "t", "you", "doing", "it", "in", "that", "way", "NUMBER", "It", "s", "not", "about", "that", "we", "don", "t", "like", "it", "we", "love", "to", "hear", "what", "people", "be", "doing", "with", "our", "product", "and", "we", "want", "to", "make", "our", "product", "better", "for", "everyone", "but", "as", "I", "already", "said", "we", "need", "to", "understand", "the", "request", "feature", "in", "detail", "and", "this", "involves", "ask", "question", "NUMBER", "Do", "not", "take", "this", "personally", "we", "didn", "t", "felt", "the", "same", "pain", "like", "you", "that", "leads", "you", "to", "wish", "to", "have", "this", "feature", "so", "we", "may", "not", "give", "it", "the", "same", "importance", "like", "you", "NUMBER", "If", "you", "plan", "to", "implement", "it", "anyway", "by", "yourself", "we", "re", "still", "here", "to", "support", "you", "when", "you", "have", "question", "NUMBER", "We", "have", "a", "mailing", "list", "be", "often", "hanging", "around", "on", "IRC", "and", "we", "like", "to", "give", "you", "feedback", "on", "your", "development", "when", "you", "open", "a", "pull", "request", "NUMBER", "I", "be", "fine", "with", "the", "feature", "be", "challenged", "but", "it", "seems", "that", "we", "cannot", "agree", "on", "what", "be", "feasible", "and", "what", "be", "not", "NUMBER", "Let", "me", "summarize", "my", "use", "case", "NUMBER", "I", "have", "enough", "test", "in", "total", "such", "that", "run_all", "every", "other", "minute", "be", "no", "longer", "realistic", "NUMBER", "I", "have", "exist", "watch", "expressions", "that", "be", "intelligent", "enough", "to", "run", "just", "the", "right", "number", "of", "test", "for", "NUMBER", "of", "the", "time", "going", "by", "the", "NUMBER", "NUMBER", "principle", "so", "what", "to", "do", "about", "the", "remaining", "NUMBER", "I", "can", "create", "new", "group", "watch", "expressions", "in", "the", "Guardfile", "and", "try", "to", "tune", "it", "such", "that", "it", "will", "match", "correctly", "for", "NUMBER", "of", "the", "time", "but", "that", "kind", "of", "effort", "usually", "be", "not", "transferable", "to", "other", "projects", "so", "I", "want", "to", "avoid", "overtuning", "as", "a", "solution", "NUMBER", "Adding", "focus", "tags", "manually", "to", "a", "handful", "of", "file", "be", "simply", "not", "going", "to", "match", "the", "expressive", "power", "of", "the", "watch", "expressions", "and", "like", "I", "mention", "earlier", "risk", "corrupting", "exist", "specs", "features", "that", "be", "not", "meant", "to", "be", "modify", "NUMBER", "Another", "downside", "be", "that", "it", "be", "not", "feasible", "to", "switch", "quickly", "and", "easily", "among", "regex", "group", "with", "this", "method", "NUMBER", "Basically", "I", "don", "t", "see", "the", "intelligence", "in", "tagging", "the", "spec", "feature", "file", "_at", "all_", "for", "this", "purpose", "I", "might", "as", "well", "just", "go", "ahead", "and", "create", "new", "watch", "expressions", "that", "be", "just", "slight", "variations", "of", "exist", "ones", "and", "will", "be", "commented", "in", "out", "on", "a", "as", "needed", "basis", "cumbersome", "and", "still", "not", "as", "good", "as", "change", "some_file_that_is_known_to_trigger_desired_group", "btw", "NUMBER", "All", "in", "all", "I", "see", "this", "as", "a", "weak", "recommendation", "that", "no", "one", "in", "my", "situation", "will", "take", "even", "change", "some_file", "would", "work", "much", "better", "I", "absolutely", "understand", "your", "needs", "I", "also", "have", "very", "limited", "use", "for", "run_all", "in", "large", "projects", "NUMBER", "I", "currently", "try", "to", "minimize", "the", "pain", "by", "splitting", "different", "parts", "of", "the", "app", "in", "different", "Guard", "group", "and", "run", "them", "in", "separate", "terminal", "windows", "to", "reduce", "the", "amount", "of", "run_all", "NUMBER", "I", "also", "do", "not", "try", "to", "have", "a", "reusable", "Guardfile", "for", "all", "of", "my", "projects", "because", "I", "believe", "in", "the", "gain", "of", "having", "a", "very", "specific", "Guardfile", "for", "each", "project", "for", "an", "optimized", "workflow", "over", "the", "time", "saved", "for", "a", "reusable", "Guardfile", "NUMBER", "But", "I", "m", "still", "here", "and", "take", "part", "of", "the", "discussion", "even", "in", "my", "holidays", "from", "the", "camping", "site", "P", "because", "I", "think", "this", "discussion", "may", "lead", "to", "a", "nice", "new", "feature", "for", "Guard", "NUMBER", "I", "for", "myself", "still", "don", "t", "have", "a", "clear", "idea", "how", "the", "focus", "feature", "should", "work", "so", "we", "really", "need", "a", "clear", "description", "of", "how", "it", "should", "work", "NUMBER", "I", "m", "still", "confused", "by", "your", "use", "of", "the", "word", "group", "in", "conjunction", "with", "the", "watchers", "NUMBER", "Sure", "all", "matching", "file", "by", "a", "watcher", "could", "be", "seen", "as", "a", "group", "but", "I", "don", "t", "see", "how", "Guard", "should", "find", "out", "how", "to", "focus", "on", "a", "given", "group", "and", "what", "it", "triggers", "for", "a", "given", "group", "NUMBER", "Currently", "Guard", "receives", "a", "file", "change", "goes", "through", "all", "watchers", "from", "top", "to", "bottom", "to", "see", "if", "there", "s", "a", "match", "transforms", "the", "file", "if", "a", "block", "exists", "and", "pass", "the", "final", "file", "list", "to", "all", "plugins", "for", "further", "actions", "of", "which", "Guard", "doesn", "t", "now", "anything", "and", "will", "not", "receive", "any", "feedback", "only", "when", "something", "gets", "wrong", "aka", "NUMBER", "task_has_failed", "NUMBER", "So", "let", "me", "describe", "another", "possible", "idea", "I", "have", "for", "the", "focus", "feature", "The", "watchers", "will", "have", "the", "possibility", "to", "give", "a", "watcher", "a", "name", "like", "guard", "rspec", "do", "watch", "r", "app", "models", "NUMBER", "NUMBER", "rb", "name", "models", "end", "Now", "you", "can", "focus", "on", "a", "named", "watcher", "in", "the", "interactor", "focus", "models", "models", "File", "change", "will", "still", "be", "catched", "but", "only", "for", "the", "models", "watcher", "NUMBER", "You", "can", "always", "pause", "and", "unpause", "while", "something", "be", "focused", "NUMBER", "You", "can", "stack", "different", "watchers", "models", "focus", "controllers", "models", "controllers", "focus", "models", "controllers", "Pressing", "enter", "in", "focus", "mode", "will", "find", "all", "the", "project", "file", "that", "matches", "the", "watchers", "in", "the", "focused", "group", "and", "triggers", "a", "run_on_changes", "with", "all", "the", "file", "Note", "that", "this", "behavior", "be", "completely", "different", "than", "run_all", "because", "for", "run_all", "the", "plugin", "decides", "what", "all", "means", "NUMBER", "Please", "let", "us", "focus", "the", "discussion", "on", "the", "possible", "focus", "feature", "and", "not", "on", "if", "it", "s", "useful", "or", "not", "NUMBER", "We", "still", "can", "have", "the", "useful", "discussion", "when", "we", "know", "how", "the", "feature", "will", "work", "NUMBER", "I", "currently", "try", "to", "minimize", "the", "pain", "by", "splitting", "different", "parts", "of", "the", "app", "in", "different", "Guard", "group", "and", "run", "them", "in", "separate", "terminal", "windows", "to", "reduce", "the", "amount", "of", "run_all", "NUMBER", "I", "also", "do", "not", "try", "to", "have", "a", "reusable", "Guardfile", "for", "all", "of", "my", "projects", "because", "I", "believe", "in", "the", "gain", "of", "having", "a", "very", "specific", "Guardfile", "for", "each", "project", "for", "an", "optimized", "workflow", "over", "the", "time", "saved", "for", "a", "reusable", "Guardfile", "NUMBER", "I", "do", "not", "dispute", "that", "at", "all", "and", "I", "do", "have", "some", "matching", "rules", "that", "be", "app", "specific", "either", "the", "source", "and", "test", "file", "be", "named", "in", "a", "very", "different", "manner", "cause", "the", "name", "based", "rules", "to", "fail", "or", "the", "change", "file", "be", "naturally", "associated", "with", "multiple", "functional", "group", "like", "change", "user_steps", "NUMBER", "rb", "be", "associated", "with", "all", "the", "_user_", "test", "and", "signin", "signup", "features", "NUMBER", "As", "long", "as", "the", "matching", "rule", "be", "deemed", "to", "be", "have", "some", "permanent", "value", "I", "don", "t", "see", "why", "it", "should", "not", "be", "defined", "NUMBER", "But", "more", "convenience", "be", "always", "better", "NUMBER", "I", "m", "still", "confused", "by", "your", "use", "of", "the", "word", "group", "in", "conjunction", "with", "the", "watchers", "NUMBER", "Sure", "all", "matching", "file", "by", "a", "watcher", "could", "be", "seen", "as", "a", "group", "but", "I", "don", "t", "see", "how", "Guard", "should", "find", "out", "how", "to", "focus", "on", "a", "given", "group", "and", "what", "it", "triggers", "for", "a", "given", "group", "NUMBER", "Currently", "Guard", "receives", "a", "file", "change", "goes", "through", "all", "watchers", "from", "top", "to", "bottom", "to", "see", "if", "there", "s", "a", "match", "transforms", "the", "file", "if", "a", "block", "exists", "and", "pass", "the", "final", "file", "list", "to", "all", "plugins", "for", "further", "actions", "of", "which", "Guard", "doesn", "t", "now", "anything", "and", "will", "not", "receive", "any", "feedback", "only", "when", "something", "gets", "wrong", "aka", "NUMBER", "task_has_failed", "NUMBER", "By", "group", "I", "be", "specifically", "referring", "to", "the", "group", "of", "specs", "features", "or", "other", "actions", "dependent", "on", "plugin", "behavior", "that", "will", "be", "returned", "for", "a", "change", "file", "given", "a", "particular", "watch", "expression", "I", "be", "aware", "of", "the", "group", "feature", "that", "be", "currently", "present", "for", "guard", "and", "I", "be", "indeed", "use", "it", "to", "separate", "specs", "and", "features", "in", "the", "Guardfile", "I", "be", "link", "to", "NUMBER", "So", "what", "I", "have", "in", "mind", "originally", "be", "really", "just", "to", "take", "advantage", "of", "the", "current", "behavior", "in", "the", "perceived", "simplest", "possible", "manner", "and", "provide", "some", "kind", "of", "shortcut", "for", "change", "foo", "in", "order", "to", "run", "all", "the", "foo", "test", "provide", "the", "watch", "expression", "be", "defined", "in", "such", "a", "manner", "even", "though", "I", "be", "work", "on", "a", "file", "that", "be", "named", "in", "a", "completely", "different", "manner", "and", "do", "not", "want", "to", "define", "a", "matching", "rule", "NUMBER", "Given", "that", "most", "of", "my", "rules", "be", "named", "based", "it", "will", "work", "very", "well", "and", "custom", "rules", "will", "no", "longer", "be", "a", "necessity", "provide", "I", "know", "exactly", "which", "named", "group", "I", "want", "NUMBER", "If", "I", "need", "multiple", "of", "them", "I", "can", "still", "define", "a", "rule", "that", "matches", "a", "particular", "file", "to", "a", "combination", "of", "group", "NUMBER", "But", "I", "acknowledge", "that", "this", "has", "limitations", "because", "one", "change", "file", "can", "only", "be", "matched", "to", "one", "group", "at", "any", "point", "in", "time", "so", "if", "I", "be", "matching", "user", "NUMBER", "rb", "to", "user_spec", "NUMBER", "rb", "signup", "NUMBER", "feature", "I", "cannot", "match", "user", "NUMBER", "rb", "to", "just", "user_spec", "NUMBER", "rb", "NUMBER", "So", "let", "me", "describe", "another", "possible", "idea", "I", "have", "for", "the", "focus", "feature", "The", "watchers", "will", "have", "the", "possibility", "to", "give", "a", "watcher", "a", "name", "like", "File", "change", "will", "still", "be", "catched", "but", "only", "for", "the", "models", "watcher", "NUMBER", "You", "can", "always", "pause", "and", "unpause", "while", "something", "be", "focused", "NUMBER", "You", "can", "stack", "different", "watchers", "Your", "idea", "would", "clearly", "be", "better", "but", "more", "work", "I", "suspect", "since", "you", "be", "allowing", "individual", "watch", "expressions", "to", "be", "targeted", "directly", "rather", "than", "indirectly", "and", "multiple", "of", "them", "to", "be", "stacked", "more", "work", "even", "I", "_might_", "want", "to", "allow", "file", "change", "to", "be", "still", "applied", "to", "all", "watchers", "in", "focus", "mode", "and", "having", "the", "focus", "function", "only", "for", "manual", "triggers", "NUMBER", "This", "be", "just", "down", "to", "personal", "preference", "as", "my", "rules", "be", "such", "that", "change", "a", "test", "file", "itself", "will", "only", "cause", "that", "test", "file", "to", "be", "executed", "so", "there", "be", "no", "reason", "for", "such", "rules", "to", "be", "excluded", "in", "focus", "mode", "they", "be", "probably", "more", "good", "than", "harm", "but", "I", "guess", "I", "can", "still", "use", "them", "as", "named", "watch", "expressions", "s", "if", "there", "s", "an", "option", "to", "define", "watch", "expressions", "that", "be", "enable", "by", "default", "during", "focus", "mode", "NUMBER", "ruby_gtnp", "support", "embedding", "image", "data", "directly", "in", "the", "notification", "allowing", "remote", "notifications", "to", "display", "an", "image", "NUMBER", "In", "practice", "this", "change", "has", "be", "test", "with", "Growl", "for", "Windows", "receiving", "the", "notification", "and", "it", "behaves", "as", "expected", "i", "NUMBER", "e", "NUMBER", "the", "image", "appears", "in", "the", "notification", "NUMBER", "This", "also", "likely", "resolve", "issue", "NUMBER", "as", "that", "involves", "Growl", "for", "OSX", "refusing", "to", "download", "the", "images", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "f", "into", "NUMBER", "ca", "NUMBER", "d", "NUMBER", "NUMBER", "Ha", "NUMBER", "I", "was", "merge", "this", "pull", "request", "for", "local", "test", "at", "the", "same", "moment", "rymai", "was", "merge", "NUMBER", "I", "also", "see", "that", "it", "doesn", "t", "fix", "NUMBER", "and", "I", "guess", "the", "reason", "be", "that", "the", "default", "host", "be", "localhost", "and", "this", "be", "why", "ruby_gntp", "skips", "the", "image", "encoding", "LINK", "_gntp", "blob", "master", "lib", "ruby_gntp", "NUMBER", "rb", "L", "NUMBER", "NUMBER", "I", "will", "play", "a", "bit", "more", "with", "it", "now", "NUMBER", "I", "see", "that", "when", "I", "set", "the", "host", "for", "example", "to", "NUMBER", "then", "ruby_gntp", "properly", "embeds", "the", "image", "in", "the", "protocol", "message", "but", "the", "image", "be", "still", "not", "display", "NUMBER", "So", "let", "s", "wait", "for", "Growl", "NUMBER", "P", "I", "setup", "an", "example", "project", "with", "the", "following", "structure", "Gemfile", "Guardfile", "The", "contents", "of", "these", "file", "be", "Gemfile", "source", "rubygems", "gem", "guard", "gem", "guard", "shell", "and", "Guardfile", "guard", "shell", "do", "watch", "test", "NUMBER", "txt", "m", "echo", "m", "NUMBER", "inspect", "File", "NUMBER", "mtime", "m", "NUMBER", "end", "I", "then", "continue", "to", "run", "guard", "NUMBER", "Whenever", "I", "echo", "something", "into", "that", "file", "guard", "registers", "a", "change", "twice", "NUMBER", "In", "one", "shell", "echo", "blah", "test", "NUMBER", "txt", "In", "the", "shell", "run", "guard", "test", "NUMBER", "txt", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "test", "NUMBER", "txt", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "The", "same", "behaviour", "accounts", "for", "vim", "nano", "etc", "NUMBER", "Interestingly", "when", "I", "just", "run", "echo", "blah", "test", "NUMBER", "txt", "guard", "only", "fires", "once", "NUMBER", "Any", "idea", "how", "I", "can", "prevent", "this", "from", "happening", "or", "whether", "this", "be", "expected", "behaviour", "See", "my", "original", "stackoverflow", "question", "here", "LINK", "executes", "shell", "scripts", "twice", "I", "tried", "open", "the", "issue", "on", "guard", "shell", "s", "github", "page", "but", "it", "seems", "that", "option", "be", "disabled", "NUMBER", "Will", "update", "the", "issue", "with", "debug", "output", "if", "necessary", "don", "t", "have", "access", "to", "it", "right", "now", "unfortunately", "Hi", "jabalsad", "Matt", "Solt", "Christopher", "Powell", "also", "have", "the", "same", "issue", "on", "google", "group", "LINK", "topic", "guard", "dev", "FDi", "NUMBER", "lV", "NUMBER", "EUQ", "NUMBER", "NUMBER", "guard", "core", "team", "do", "you", "have", "an", "idea", "from", "when", "it", "could", "come", "also", "do", "you", "already", "encountered", "that", "issue", "I", "have", "update", "linux", "event", "in", "Listen", "can", "you", "please", "try", "it", "by", "add", "ruby", "gem", "listen", "github", "guard", "listen", "branch", "linux_events", "in", "your", "Gemfile", "NUMBER", "Thanks", "That", "fix", "the", "issue", "much", "appreciated", "This", "also", "fix", "the", "issue", "for", "me", "on", "Ubuntu", "NUMBER", "Thank", "you", "Edit", "Actually", "on", "second", "review", "this", "seems", "to", "_mostly_", "fix", "the", "issue", "NUMBER", "I", "be", "still", "get", "the", "double", "run", "albeit", "less", "frequently", "NUMBER", "Noob", "mistake", "for", "me", "actually", "noob", "just", "start", "with", "ruby", "I", "had", "a", "require", "rubygems", "which", "I", "had", "moved", "from", "the", "top", "of", "my", "spec_helper", "file", "into", "the", "Spork", "NUMBER", "prefork", "block", "and", "this", "was", "cause", "the", "doubling", "up", "for", "me", "NUMBER", "I", "believe", "I", "was", "tricked", "by", "the", "following", "comment", "Loading", "more", "in", "this", "block", "will", "cause", "your", "test", "to", "run", "faster", "NUMBER", "Hopefully", "this", "might", "help", "some", "others", "who", "find", "themselves", "here", "via", "Google", "like", "I", "did", "NUMBER", "Nice", "I", "ll", "release", "a", "new", "release", "of", "Listen", "today", "NUMBER", "Thanks", "Listen", "NUMBER", "release", "I", "have", "update", "Listen", "to", "NUMBER", "but", "be", "also", "experience", "this", "issue", "often", "NUMBER", "Since", "update", "from", "NUMBER", "to", "NUMBER", "the", "guard", "prompt", "be", "often", "rather", "than", "and", "I", "have", "notice", "that", "when", "this", "occur", "my", "guards", "execute", "twice", "NUMBER", "I", "m", "run", "on", "Ubuntu", "NUMBER", "I", "be", "glad", "that", "this", "had", "be", "resolve", "but", "can", "I", "ask", "if", "there", "be", "a", "way", "to", "print", "the", "cause", "such", "as", "the", "list", "of", "modify", "file", "for", "each", "triggered", "run", "prusswan", "you", "can", "use", "the", "debug", "option", "guard", "d", "thibaudgg", "I", "tried", "that", "but", "it", "only", "shows", "the", "features", "that", "will", "be", "executed", "but", "not", "the", "file", "that", "have", "be", "change", "i", "NUMBER", "e", "NUMBER", "model", "controller", "at", "least", "for", "cucumber", "In", "the", "end", "I", "use", "the", "following", "watch", "expression", "which", "works", "on", "ubuntu", "ruby", "watch", "r", "NUMBER", "m", "notify", "send", "m", "NUMBER", "modify", "I", "m", "run", "listen", "NUMBER", "but", "be", "still", "get", "the", "double", "run", "and", "double", "prompt", "problem", "NUMBER", "I", "m", "still", "get", "this", "inconsistently", "with", "listen", "NUMBER", "Save", "a", "file", "once", "with", "vim", "in", "linux", "guard", "runs", "twice", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Stop", "interactor", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "hash", "stty", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "clear", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Trying", "to", "run", "Guard", "RSpec", "run_on_modifications", "with", "test", "spec", "generators", "init_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "run_on_changes_begin", "executed", "for", "Guard", "RSpec", "Running", "test", "spec", "generators", "init_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bin", "rspec", "color", "order", "default", "f", "nested", "r", "home", "golly", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatters", "notification_rspec", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "test", "spec", "generators", "init_spec", "NUMBER", "rb", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "hash", "stty", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Start", "interactor", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Stop", "interactor", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "hash", "stty", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "clear", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Trying", "to", "run", "Guard", "RSpec", "run_on_modifications", "with", "test", "spec", "generators", "init_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "run_on_changes_begin", "executed", "for", "Guard", "RSpec", "Running", "test", "spec", "generators", "init_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bin", "rspec", "color", "order", "default", "f", "nested", "r", "home", "golly", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatters", "notification_rspec", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "test", "spec", "generators", "init_spec", "NUMBER", "rb", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "hash", "stty", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Start", "interactor", "Actually", "just", "a", "thought", "Vim", "on", "any", "platform", "I", "think", "creates", "swap", "file", "while", "the", "editor", "be", "open", "NUMBER", "I", "think", "that", "Vim", "update", "both", "of", "these", "file", "on", "save", "be", "what", "s", "cause", "Guard", "to", "run", "twice", "NUMBER", "Is", "there", "anyway", "to", "tell", "Guard", "to", "ignore", "a", "notification", "if", "it", "matches", "a", "certain", "regex", "This", "should", "match", "Vim", "swap", "file", "NUMBER", "NUMBER", "NUMBER", "sw", "p", "z", "Yes", "that", "could", "be", "the", "a", "cause", "NUMBER", "I", "think", "prior", "to", "the", "Listen", "LINK", "integration", "Vim", "swap", "file", "have", "be", "ignore", "by", "Guard", "but", "I", "see", "that", "this", "isn", "t", "the", "case", "for", "Listen", "anymore", "LINK", "_record", "NUMBER", "rb", "L", "NUMBER", "NUMBER", "NUMBER", "Can", "someone", "with", "this", "problem", "verify", "this", "by", "use", "the", "ignore", "LINK", "_record", "NUMBER", "rb", "L", "NUMBER", "NUMBER", "DSL", "method", "and", "open", "an", "issue", "on", "Listen", "if", "this", "solves", "the", "problem", "Alrighty", "I", "add", "this", "to", "my", "Guardfile", "and", "have", "be", "code", "away", "for", "a", "while", "now", "NUMBER", "Ignore", "Vim", "swap", "file", "ignore", "NUMBER", "NUMBER", "NUMBER", "sw", "p", "z", "Unfortunately", "the", "issue", "be", "still", "occurring", "NUMBER", "The", "good", "news", "be", "that", "after", "add", "the", "ignore", "directive", "I", "ve", "only", "experienced", "the", "problem", "twice", "in", "the", "last", "NUMBER", "hours", "much", "better", "than", "before", "where", "I", "couldn", "t", "go", "NUMBER", "minutes", "without", "the", "problem", "occurring", "NUMBER", "This", "be", "not", "directly", "relate", "but", "I", "notice", "that", "my", "watcher", "for", "showing", "modify", "file", "be", "triggered", "a", "lot", "more", "often", "when", "associated", "with", "guard", "shell", "rather", "than", "guard", "rspec", "or", "guard", "cucumber", "even", "for", "file", "that", "be", "not", "really", "be", "modify", "I", "can", "do", "a", "run_all", "and", "start", "seeing", "notifications", "for", "various", "source", "file", "even", "though", "only", "test", "be", "be", "executed", "NUMBER", "Do", "plugins", "perform", "further", "filtering", "of", "file", "change", "on", "their", "own", "ruby", "watch", "r", "NUMBER", "m", "notify", "send", "m", "NUMBER", "modify", "Thanks", "for", "the", "tip", "prusswan", "NUMBER", "I", "add", "that", "snippet", "and", "find", "that", "Vim", "also", "creates", "an", "intermediary", "file", "and", "deletes", "or", "moves", "it", "nearly", "immediately", "NUMBER", "This", "seems", "to", "be", "work", "better", "so", "far", "ruby", "Ignore", "Vim", "swap", "file", "ignore", "ignore", "NUMBER", "NUMBER", "NUMBER", "sw", "p", "z", "japgolly", "glad", "it", "helped", "NUMBER", "Unfortunately", "I", "can", "t", "ignore", "my", "source", "code", "so", "perhaps", "the", "behavior", "of", "guard", "shell", "as", "oppose", "to", "other", "plugins", "needs", "to", "be", "examined", "Hi", "again", "NUMBER", "Unfortunately", "even", "with", "the", "aforementioned", "charge", "to", "my", "Guardfile", "to", "ignore", "Vim", "swap", "file", "I", "m", "still", "get", "this", "error", "NUMBER", "I", "ve", "keep", "on", "some", "debugging", "info", "and", "it", "turns", "out", "that", "the", "same", "filename", "in", "some", "cases", "be", "simply", "sending", "two", "notifications", "NUMBER", "I", "m", "not", "sure", "why", "NUMBER", "Example", "WATCH", "test", "spec", "res_patch_manager_spec", "NUMBER", "rb", "modify", "NUMBER", "test", "run", "here", "NUMBER", "WATCH", "test", "spec", "res_patch_manager_spec", "NUMBER", "rb", "modify", "NUMBER", "test", "run", "again", "NUMBER", "I", "was", "hoping", "it", "would", "just", "be", "a", "few", "filters", "I", "was", "miss", "but", "I", "think", "the", "fix", "in", "NUMBER", "hasn", "t", "fix", "this", "completely", "NUMBER", "I", "m", "also", "run", "into", "the", "double", "run", "on", "file", "save", "NUMBER", "Running", "with", "bundle", "exec", "guard", "p", "debug", "watch", "r", "NUMBER", "m", "notify", "send", "m", "NUMBER", "modify", "Will", "tell", "me", "that", "spec", "request", "static_pages_spec", "NUMBER", "rb", "has", "be", "modify", "twice", "after", "I", "save", "it", "once", "NUMBER", "Here", "be", "output", "of", "starting", "up", "guard", "and", "saving", "the", "file", "once", "LINK", "I", "m", "use", "force", "polling", "as", "this", "be", "a", "shared", "folder", "in", "a", "virtual", "machine", "I", "only", "get", "notifications", "of", "the", "file", "I", "actual", "saved", "as", "be", "modify", "no", "temp", "swap", "file", "be", "alerted", "thibaudgg", "Here", "be", "the", "output", "for", "the", "listen", "gem", "run", "from", "the", "same", "environment", "as", "my", "normal", "project", "I", "have", "issue", "with", "file", "on", "windows", "shared", "in", "linux", "VM", "LINK", "rschmitty", "so", "the", "specs", "suite", "be", "run", "from", "the", "linux", "VM", "right", "Is", "it", "the", "Listen", "NUMBER", "spec", "suite", "Symlinks", "stuff", "seems", "to", "fail", "badly", "it", "could", "be", "relate", "to", "LINK", "Maher", "NUMBER", "Ever", "do", "you", "have", "any", "thoughts", "Correct", "run", "from", "the", "VM", "run", "linux", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "i", "NUMBER", "linux", "Looks", "like", "NUMBER", "spec", "LINK", "I", "basically", "cloned", "from", "git", "created", "a", "NUMBER", "rvmrc", "and", "then", "run", "bundle", "and", "rspec", "NUMBER", "Let", "me", "know", "if", "I", "can", "provide", "any", "further", "info", "to", "help", "debug", "Thx", "Bump", "I", "m", "get", "this", "issue", "too", "with", "guard", "rspec", "and", "guard", "spork", "on", "Ubuntu", "NUMBER", "I", "m", "also", "get", "this", "issue", "with", "guard", "v", "NUMBER", "guard", "minitest", "and", "guard", "spork", "v", "NUMBER", "on", "Mac", "OS", "X", "Snow", "Leopard", "NUMBER", "A", "save", "to", "any", "test", "file", "triggers", "a", "complete", "double", "run", "of", "test", "NUMBER", "My", "Guardfile", "be", "here", "LINK", "My", "test_helper", "NUMBER", "rb", "be", "here", "LINK", "I", "be", "use", "the", "spork_incompatible_args", "branch", "of", "guard", "minitest", "at", "LINK", "minitest", "NUMBER", "git", "to", "get", "around", "the", "troubling", "passing", "of", "the", "r", "option", "to", "Spork", "NUMBER", "Yeah", "it", "s", "an", "issue", "wit", "Listen", "NUMBER", "LINK", "issuecomment", "NUMBER", "I", "just", "need", "to", "find", "time", "to", "fix", "it", "NUMBER", "NUMBER", "This", "should", "have", "be", "fix", "in", "the", "polling", "double", "LINK", "Listen", "branch", "NUMBER", "Please", "can", "you", "give", "it", "a", "try", "by", "add", "that", "in", "your", "Gemfile", "ruby", "gem", "listen", "github", "guard", "listen", "branch", "polling", "double", "Thanks", "NUMBER", "spec", "drb", "NUMBER", "Gemfile", "NUMBER", "group", "development", "test", "do", "gem", "sqlite", "NUMBER", "gem", "rspec", "rails", "gem", "guard", "rspec", "gem", "listen", "github", "guard", "listen", "branch", "polling", "double", "gem", "guard", "spork", "gem", "spork", "end", "NUMBER", "bundle", "install", "bundle", "exec", "guard", "repo", "example", "bundle", "exec", "guard", "Guard", "uses", "TerminalNotifier", "to", "send", "notifications", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "cczona", "repo", "example", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Running", "all", "specs", "No", "DRb", "server", "be", "run", "NUMBER", "Running", "in", "local", "process", "instead", "NUMBER", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Randomized", "with", "seed", "NUMBER", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Running", "all", "specs", "No", "DRb", "server", "be", "run", "NUMBER", "Running", "in", "local", "process", "instead", "NUMBER", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Randomized", "with", "seed", "NUMBER", "Running", "all", "specs", "twice", "seems", "to", "be", "another", "issue", "have", "you", "try", "without", "the", "drb", "option", "Same", "result", "without", "drb", "including", "No", "DRb", "server", "either", "way", "NUMBER", "Should", "I", "open", "a", "new", "issue", "or", "be", "there", "an", "exist", "one", "you", "d", "prefer", "this", "be", "add", "to", "That", "s", "weird", "but", "editing", "touching", "a", "file", "also", "launch", "the", "spec", "twice", "Can", "you", "please", "give", "your", "Gemfile", "Guardfile", "Yep", "the", "spec", "runs", "twice", "when", "guard", "launches", "then", "twice", "again", "when", "a", "file", "change", "NUMBER", "I", "ve", "gisted", "the", "Gemfile", "Guardfile", "here", "LINK", "cczona", "remove", "the", "guard", "rspec", "version", "NUMBER", "do", "block", "duplication", "and", "it", "will", "be", "good", "NUMBER", "Have", "guard", "rspec", "twice", "in", "your", "Guardfile", "will", "quite", "logically", "execute", "it", "twice", "NUMBER", "Fixed", "in", "Listen", "NUMBER", "I", "m", "having", "this", "exact", "issue", "although", "for", "me", "it", "s", "not", "just", "twice", "but", "occasionally", "three", "repetitions", "NUMBER", "This", "be", "my", "Guardfile", "ruby", "guard", "shell", "do", "watch", "r", "src", "NUMBER", "NUMBER", "hs", "m", "system", "runghc", "spec", "m", "NUMBER", "Spec", "NUMBER", "hs", "watch", "r", "spec", "NUMBER", "m", "system", "runghc", "m", "NUMBER", "end", "I", "currently", "don", "t", "use", "a", "Gemfile", "since", "this", "be", "not", "a", "Ruby", "project", "but", "I", "ve", "only", "get", "version", "higher", "than", "NUMBER", "install", "for", "Listen", "so", "that", "shouldn", "t", "be", "an", "issue", "NUMBER", "I", "m", "use", "Ruby", "NUMBER", "p", "NUMBER", "As", "I", "write", "on", "Stack", "Overflow", "How", "to", "build", "a", "very", "basic", "Guard", "example", "LINK", "to", "build", "a", "very", "basic", "guard", "example", "I", "stumbled", "around", "for", "a", "while", "looking", "for", "an", "example", "of", "how", "to", "write", "my", "own", "guard", "NUMBER", "Would", "you", "all", "be", "open", "to", "link", "to", "LINK", "a", "guard", "From", "the", "README", "I", "think", "that", "would", "help", "people", "like", "me", "trying", "to", "learn", "NUMBER", "Thanks", "for", "the", "excellent", "documentation", "NUMBER", "I", "cannot", "get", "colored", "output", "to", "properly", "show", "from", "my", "guard", "tasks", "NUMBER", "guard", "shell", "cli", "tty", "color", "do", "watch", "NUMBER", "git", "status", "watch", "NUMBER", "git", "refs", "NUMBER", "git", "lola", "end", "I", "be", "not", "run", "this", "as", "part", "of", "a", "rails", "application", "or", "anything", "I", "be", "just", "trying", "to", "use", "guard", "to", "help", "code", "on", "any", "arbitrary", "project", "have", "a", "tmux", "pane", "refreshing", "the", "log", "and", "status", "as", "change", "be", "made", "NUMBER", "I", "be", "executing", "bundle", "exec", "guard", "start", "c", "and", "my", "gemfile", "be", "just", "gem", "quard", "gem", "guard", "shell", "Thank", "you", "for", "any", "help", "edit", "format", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ef", "into", "NUMBER", "e", "NUMBER", "NUMBER", "Looks", "good", "thanks", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "fe", "NUMBER", "into", "NUMBER", "e", "NUMBER", "NUMBER", "Looks", "great", "README", "interactions", "section", "LINK", "interactions", "need", "to", "be", "update", "right", "After", "that", "I", "think", "we", "can", "release", "version", "NUMBER", "correct", "right", "fearful", "NUMBER", "Thanks", "for", "this", "awesome", "PR", "netzpirat", "And", "don", "t", "forget", "the", "CHANGELOG", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "c", "NUMBER", "into", "NUMBER", "e", "NUMBER", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "f", "NUMBER", "f", "NUMBER", "into", "NUMBER", "e", "NUMBER", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "fa", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "into", "NUMBER", "e", "NUMBER", "NUMBER", "netzpirat", "I", "ll", "give", "it", "a", "try", "tomorrow", "thanks", "Seems", "to", "work", "great", "there", "s", "just", "that", "at", "launch", "one", "time", "on", "ten", "the", "doesn", "t", "show", "up", "and", "so", "doesn", "t", "work", "at", "all", "NUMBER", "Maybe", "this", "not", "directly", "relate", "to", "coolline", "NUMBER", "Amazing", "job", "NUMBER", "I", "ll", "try", "this", "and", "get", "back", "to", "you", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "ef", "NUMBER", "ef", "into", "NUMBER", "e", "NUMBER", "NUMBER", "Awesome", "I", "ll", "do", "the", "same", "NUMBER", "Thanks", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "e", "NUMBER", "c", "into", "NUMBER", "e", "NUMBER", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "c", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "b", "into", "NUMBER", "e", "NUMBER", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "ef", "NUMBER", "e", "NUMBER", "into", "NUMBER", "e", "NUMBER", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "e", "NUMBER", "bd", "into", "NUMBER", "e", "NUMBER", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "ee", "NUMBER", "a", "NUMBER", "b", "into", "NUMBER", "e", "NUMBER", "NUMBER", "After", "bundle", "update", "ing", "a", "couple", "of", "my", "repositories", "I", "seem", "to", "have", "TAG", "be", "disabled", "to", "call", "run_all", "What", "should", "I", "be", "checking", "Thanks", "I", "be", "having", "this", "issue", "all", "the", "time", "and", "it", "s", "really", "frustrating", "that", "I", "constantly", "have", "to", "restart", "guard", "because", "Enter", "stops", "be", "captured", "NUMBER", "I", "get", "this", "reload", "M", "the", "M", "be", "what", "enter", "seems", "to", "send", "to", "guard", "NUMBER", "EDIT", "going", "to", "try", "coolline", "instead", "of", "readline", "for", "Mac", "OS", "X", "Why", "did", "you", "implement", "a", "major", "change", "in", "minor", "version", "Why", "did", "you", "remove", "support", "of", "previous", "version", "I", "can", "t", "understand", "this", "NUMBER", "This", "be", "sad", "Thanks", "netzpirat", "for", "clarifying", "things", "NUMBER", "AlexDenisov", "Could", "you", "backup", "your", "assumptions", "Why", "did", "you", "implement", "a", "major", "change", "in", "minor", "version", "The", "list", "of", "change", "be", "here", "LINK", "NUMBER", "NUMBER", "june", "NUMBER", "Why", "did", "you", "remove", "support", "of", "previous", "version", "The", "only", "thing", "that", "we", "remove", "support", "of", "be", "the", "verbose", "option", "but", "it", "was", "actually", "needed", "since", "this", "option", "was", "conflicting", "with", "the", "version", "option", "NUMBER", "netzpirat", "well", "said", "thanks", "Just", "made", "the", "mistake", "of", "update", "my", "gems", "and", "now", "listen", "be", "install", "but", "cannot", "be", "find", "bash", "bundle", "install", "Using", "ffi", "NUMBER", "Using", "rb", "fchange", "NUMBER", "Using", "rb", "fsevent", "NUMBER", "Using", "rb", "inotify", "NUMBER", "Using", "listen", "NUMBER", "Using", "thor", "NUMBER", "Using", "guard", "NUMBER", "Using", "guard", "shell", "NUMBER", "Using", "bundler", "NUMBER", "OS", "X", "NUMBER", "Ruby", "NUMBER", "it", "seems", "to", "have", "an", "issue", "to", "Listen", "NUMBER", "could", "try", "to", "force", "version", "NUMBER", "Maher", "NUMBER", "Ever", "Maybe", "we", "should", "nuke", "NUMBER", "no", "I", "m", "just", "pinning", "Guard", "s", "version", "since", "every", "single", "update", "I", "ve", "ever", "pull", "has", "broken", "it", "completely", "NUMBER", "khiltd", "sorry", "about", "that", "feel", "free", "to", "helping", "us", "Should", "be", "fix", "with", "LIsten", "NUMBER", "can", "you", "try", "it", "please", "rake", "spec", "portability", "Run", "all", "specs", "on", "multiple", "ruby", "version", "requires", "rvm", "guard", "git", "master", "rake", "spec", "home", "matthijs", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "bin", "ruby", "S", "rspec", "NUMBER", "spec", "guard_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactor_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "runner_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "dsl_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifier_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "ui_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "hook_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "guardfile_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "group_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "growl_notify_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "notifysend_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "growl_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "rb_notifu_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "tmux_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "libnotify_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "terminal_notifier_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "emacs_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "gntp_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactors", "helpers", "terminal_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactors", "helpers", "completion_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactors", "readline_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactors", "simple_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactors", "coolline_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "guard_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "watcher_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "dsl_describer_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "cli_spec", "NUMBER", "rb", "home", "matthijs", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "rubygems", "custom_require", "NUMBER", "rb", "NUMBER", "in", "require", "cannot", "load", "such", "file", "listen", "LoadError", "from", "home", "matthijs", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "rubygems", "custom_require", "NUMBER", "rb", "NUMBER", "in", "require", "from", "home", "matthijs", "workspace", "gems", "guard", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "TAG", "from", "home", "matthijs", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "rubygems", "custom_require", "NUMBER", "rb", "NUMBER", "in", "require", "from", "home", "matthijs", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "rubygems", "custom_require", "NUMBER", "rb", "NUMBER", "in", "require", "from", "home", "matthijs", "workspace", "gems", "guard", "spec", "spec_helper", "NUMBER", "rb", "NUMBER", "in", "TAG", "from", "home", "matthijs", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "rubygems", "custom_require", "NUMBER", "rb", "NUMBER", "in", "require", "from", "home", "matthijs", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "rubygems", "custom_require", "NUMBER", "rb", "NUMBER", "in", "require", "from", "home", "matthijs", "workspace", "gems", "guard", "spec", "guard_spec", "NUMBER", "rb", "NUMBER", "in", "TAG", "from", "home", "matthijs", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "configuration", "NUMBER", "rb", "NUMBER", "in", "load", "from", "home", "matthijs", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "configuration", "NUMBER", "rb", "NUMBER", "in", "block", "in", "load_spec_files", "from", "home", "matthijs", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "configuration", "NUMBER", "rb", "NUMBER", "in", "map", "from", "home", "matthijs", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "configuration", "NUMBER", "rb", "NUMBER", "in", "load_spec_files", "from", "home", "matthijs", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "command_line", "NUMBER", "rb", "NUMBER", "in", "run", "from", "home", "matthijs", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "runner", "NUMBER", "rb", "NUMBER", "in", "run", "from", "home", "matthijs", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "in", "autorun", "rake", "abort", "home", "matthijs", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "bin", "ruby", "S", "rspec", "NUMBER", "spec", "guard_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactor_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "runner_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "dsl_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifier_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "ui_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "hook_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "guardfile_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "group_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "growl_notify_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "notifysend_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "growl_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "rb_notifu_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "tmux_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "libnotify_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "terminal_notifier_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "emacs_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "notifiers", "gntp_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactors", "helpers", "terminal_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactors", "helpers", "completion_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactors", "readline_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactors", "simple_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "interactors", "coolline_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "guard_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "watcher_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "dsl_describer_spec", "NUMBER", "rb", "NUMBER", "spec", "guard", "cli_spec", "NUMBER", "rb", "fail", "Tasks", "TOP", "spec", "See", "full", "trace", "by", "run", "task", "with", "trace", "guard", "git", "master", "bundle", "install", "bundle", "exec", "rake", "spec", "portability", "a", "loose", "gem", "install", "listen", "fix", "it", "but", "it", "was", "not", "really", "clear", "that", "had", "to", "be", "do", "gem", "install", "listen", "did", "not", "fix", "this", "problem", "for", "me", "NUMBER", "mkanthan", "with", "bundle", "exec", "NUMBER", "as", "well", "interactor", "should", "have", "a", "way", "of", "listing", "the", "run", "guards", "as", "do", "the", "CLI", "NUMBER", "Perhaps", "it", "could", "also", "show", "stats", "on", "run", "threads", "Sounds", "good", "guard", "core", "team", "what", "do", "you", "think", "I", "think", "that", "s", "an", "excellent", "idea", "let", "s", "start", "with", "show", "as", "I", "don", "t", "think", "the", "list", "command", "be", "very", "useful", "once", "Guard", "be", "start", "since", "it", "Lists", "guards", "that", "can", "be", "use", "with", "the", "init", "command", "NUMBER", "NUMBER", "Great", "new", "I", "have", "a", "project", "that", "s", "mounted", "from", "a", "Windows", "share", "and", "the", "share", "name", "has", "a", "dollar", "sign", "for", "a", "Windows", "hidden", "share", "NUMBER", "On", "my", "Mac", "the", "path", "ends", "up", "as", "Volumes", "e", "If", "I", "fire", "up", "Guard", "in", "this", "directory", "any", "time", "I", "change", "a", "file", "nothing", "happens", "NUMBER", "If", "I", "hit", "the", "Enter", "key", "to", "force", "the", "Guards", "to", "run", "it", "executes", "NUMBER", "If", "I", "map", "to", "a", "resource", "without", "a", "in", "the", "name", "Guard", "behaves", "properly", "NUMBER", "Discovering", "that", "it", "wasn", "t", "a", "network", "share", "that", "was", "cause", "the", "problem", "I", "created", "a", "folder", "call", "test", "on", "my", "mac", "NUMBER", "Guard", "exhibited", "the", "same", "issue", "with", "that", "folder", "NUMBER", "Renaming", "it", "fix", "the", "problem", "NUMBER", "I", "m", "not", "sure", "where", "to", "even", "start", "looking", "to", "fix", "this", "NUMBER", "Is", "this", "something", "in", "the", "notification", "library", "something", "with", "Guard", "or", "something", "else", "entirely", "Yeah", "it", "certainly", "an", "issue", "on", "Listen", "Maher", "NUMBER", "Ever", "do", "you", "have", "an", "idea", "where", "it", "could", "come", "from", "Hum", "that", "s", "interesting", "I", "did", "some", "test", "LINK", "and", "couldn", "t", "find", "any", "issue", "in", "Guard", "or", "in", "Listen", "with", "folder", "containing", "a", "NUMBER", "Could", "you", "give", "us", "more", "details", "about", "your", "configuration", "Guardfile", "and", "terminal", "output", "Thanks", "in", "advance", "NUMBER", "Guardfile", "only", "uses", "guard", "coffeescript", "right", "now", "NUMBER", "I", "tried", "with", "guard", "sass", "with", "the", "same", "results", "NUMBER", "I", "notice", "in", "your", "gist", "that", "your", "OS", "be", "use", "an", "OS", "specific", "notifier", "NUMBER", "With", "mine", "I", "m", "run", "without", "one", "on", "OSX", "NUMBER", "Guard", "could", "not", "detect", "any", "of", "the", "support", "notification", "libraries", "NUMBER", "Guard", "be", "now", "watching", "at", "Volumes", "uwecweb", "NUMBER", "The", "guardfile", "really", "be", "quite", "simple", "guard", "coffeescript", "input", "src", "output", "lib", "I", "ve", "be", "digging", "around", "in", "the", "sass", "and", "coffeescript", "plugins", "to", "see", "if", "I", "could", "figure", "out", "what", "was", "going", "on", "but", "I", "ve", "come", "up", "empty", "they", "both", "resolve", "the", "paths", "and", "execute", "things", "they", "just", "don", "t", "seem", "to", "get", "notified", "NUMBER", "The", "more", "I", "dig", "around", "the", "more", "I", "think", "it", "s", "something", "with", "the", "sass", "and", "coffeescript", "guards", "after", "looking", "at", "your", "gist", "I", "tried", "the", "shell", "guard", "and", "it", "seems", "to", "notify", "just", "fine", "NUMBER", "What", "I", "can", "t", "figure", "out", "be", "why", "sass", "and", "coffeescript", "guards", "work", "when", "I", "force", "them", "to", "run", "but", "they", "don", "t", "work", "when", "file", "change", "NUMBER", "Ok", "I", "think", "I", "m", "going", "to", "close", "this", "because", "I", "can", "work", "around", "the", "problem", "with", "Guard", "coffeescript", "by", "not", "use", "the", "input", "param", "NUMBER", "Specifically", "creating", "my", "watch", "inside", "of", "the", "block", "gets", "around", "the", "problem", "guard", "coffeescript", "output", "lib", "bare", "true", "do", "watch", "r", "src", "NUMBER", "NUMBER", "coffee", "end", "So", "it", "s", "definitely", "something", "with", "how", "the", "coffeescript", "and", "sass", "guards", "create", "the", "watchers", "from", "the", "input", "parameter", "NUMBER", "Thanks", "for", "the", "discussion", "on", "this", "ticket", "folks", "and", "thanks", "for", "Guard", "NUMBER", "Now", "that", "I", "know", "where", "the", "problem", "be", "I", "ll", "start", "digging", "in", "to", "see", "if", "I", "can", "fix", "it", "NUMBER", "On", "OS", "X", "NUMBER", "in", "Terminal", "NUMBER", "NUMBER", "and", "guard", "v", "NUMBER", "Ruby", "NUMBER", "p", "NUMBER", "It", "seems", "that", "interactors", "don", "t", "work", "when", "guard", "first", "starts", "up", "NUMBER", "For", "example", "pressing", "enter", "to", "run", "all", "test", "do", "nothing", "NUMBER", "After", "guard", "catches", "a", "watch", "like", "revaluating", "the", "Guardfile", "or", "some", "other", "watched", "change", "the", "interactors", "work", "normally", "again", "NUMBER", "Setting", "ruby", "interactor", "simple", "do", "not", "work", "NUMBER", "However", "installing", "rb", "readline", "fix", "it", "although", "I", "d", "prefer", "not", "to", "add", "that", "dependency", "NUMBER", "My", "Guardfile", "ruby", "SPEC_FORMAT", "p", "SPEC_PROFILE", "profile", "CUKE_FORMAT", "progress", "guard", "rspec", "version", "NUMBER", "cli", "SPEC_PROFILE", "drb", "format", "SPEC_FORMAT", "wait", "NUMBER", "all_on_start", "false", "all_after_pass", "false", "do", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "end", "guard", "cucumber", "cli", "c", "drb", "format", "CUKE_FORMAT", "no", "profile", "all_on_start", "false", "all_after_pass", "false", "do", "watch", "r", "features", "NUMBER", "NUMBER", "feature", "watch", "r", "features", "support", "NUMBER", "features", "watch", "r", "features", "step_definitions", "NUMBER", "_steps", "NUMBER", "rb", "m", "Dir", "File", "NUMBER", "join", "m", "NUMBER", "NUMBER", "feature", "NUMBER", "features", "end", "Just", "tried", "on", "iTerm", "NUMBER", "v", "NUMBER", "and", "I", "see", "the", "same", "behavior", "NUMBER", "In", "more", "detail", "I", "notice", "that", "the", "enter", "keystrokes", "be", "actually", "all", "queued", "up", "but", "don", "t", "execute", "until", "the", "first", "watch", "catches", "NUMBER", "So", "if", "I", "boot", "guard", "hit", "and", "enter", "three", "times", "nothing", "happens", "until", "a", "watch", "triggers", "NUMBER", "At", "which", "point", "the", "watch", "test", "be", "run", "and", "then", "guard", "runs", "all", "test", "three", "times", "NUMBER", "netzpirat", "Seems", "like", "it", "works", "with", "a", "caveat", "NUMBER", "Pressing", "ENTER", "now", "runs", "all", "test", "right", "away", "guard", "Guard", "could", "not", "detect", "any", "of", "the", "support", "notification", "libraries", "NUMBER", "Please", "add", "rb", "readline", "for", "proper", "Readline", "support", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "scott", "dev", "vblive", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Run", "all", "Running", "all", "specs", "On", "the", "other", "hand", "I", "now", "notice", "that", "my", "commands", "be", "not", "locally", "echoed", "NUMBER", "Typing", "rspec", "works", "but", "produces", "no", "visible", "characters", "on", "the", "screen", "NUMBER", "In", "fact", "after", "I", "quit", "guard", "my", "terminal", "s", "echo", "be", "broken", "and", "I", "have", "to", "do", "a", "reset", "to", "get", "it", "work", "again", "NUMBER", "This", "wasn", "t", "happening", "with", "the", "rb", "readline", "gem", "install", "NUMBER", "Everything", "worked", "fine", "with", "rb", "readline", "NUMBER", "If", "it", "works", "perfectly", "with", "cooline", "I", "can", "even", "imagine", "to", "make", "Guard", "work", "only", "with", "ruby", "NUMBER", "Update", "I", "just", "notice", "that", "the", "simple", "interactor", "do", "work", "properly", "when", "rb", "readline", "be", "in", "my", "bundle", "NUMBER", "I", "can", "t", "figure", "out", "why", "since", "the", "simple", "interactor", "just", "calls", "IO", "gets", "NUMBER", "Removing", "rb", "readline", "from", "my", "bundle", "causes", "the", "simple", "interactor", "to", "go", "back", "to", "sticking", "on", "first", "run", "NUMBER", "I", "still", "have", "this", "issue", "but", "I", "m", "use", "Ruby", "NUMBER", "p", "NUMBER", "Could", "this", "be", "the", "reason", "I", "add", "the", "gem", "but", "my", "prompt", "be", "simply", "a", "flashing", "rectangle", "anyway", "I", "don", "t", "see", "a", "nor", "a", "when", "run", "guard", "NUMBER", "Much", "better", "now", "thank", "you", "Haha", "nice", "I", "just", "find", "pry", "yesterday", "when", "googling", "around", "for", "something", "else", "NUMBER", "Very", "cool", "macbuech", "tttt", "josh", "pry", "NUMBER", "pry", "main", "require", "guard", "true", "NUMBER", "pry", "main", "Guard", "CoollineInteractor", "NUMBER", "available", "NameError", "uninitialized", "constant", "Guard", "CoollineInteractor", "from", "pry", "NUMBER", "in", "TAG", "NUMBER", "pry", "main", "RbConfig", "CONFIG", "RUBY_PROGRAM_VERSION", "NUMBER", "Hmmm", "why", "doesn", "t", "markup", "work", "anymore", "I", "sent", "this", "through", "mail", "and", "code", "be", "not", "marked", "up", "even", "when", "I", "edit", "it", "here", "on", "the", "page", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "funny", "stuff", "NUMBER", "Nope", "macbuech", "tttt", "josh", "pry", "NUMBER", "pry", "main", "require", "guard", "interactor", "true", "NUMBER", "pry", "main", "Guard", "CoollineInteractor", "NUMBER", "available", "NameError", "uninitialized", "constant", "Guard", "CoollineInteractor", "from", "pry", "NUMBER", "in", "TAG", "Strangely", "in", "another", "project", "I", "still", "don", "t", "get", "a", "console", "even", "after", "having", "add", "interactor", "coolline", "to", "Guardfile", "NUMBER", "I", "guess", "I", "will", "have", "to", "clean", "out", "my", "gems", "anyways", "some", "time", "soon", "my", "system", "s", "pretty", "cluttered", "after", "some", "weeks", "of", "fooling", "around", "with", "RVM", "NUMBER", "What", "would", "you", "suggest", "me", "to", "do", "It", "s", "not", "that", "much", "of", "a", "problem", "that", "the", "console", "of", "guard", "doesn", "t", "work", "for", "me", "but", "it", "s", "still", "annoying", "a", "bit", "NUMBER", "I", "tried", "to", "update", "the", "system", "s", "install", "gems", "but", "it", "aborts", "macbuech", "iq", "josh", "sudo", "gem", "update", "system", "Password", "Latest", "version", "currently", "install", "NUMBER", "Aborting", "NUMBER", "macbuech", "iq", "josh", "Is", "this", "normal", "I", "have", "created", "a", "new", "NUMBER", "rvmrc", "file", "within", "the", "project", "and", "call", "bundle", "which", "made", "a", "clean", "new", "install", "of", "the", "gems", "NUMBER", "Still", "Am", "I", "correct", "when", "I", "say", "now", "my", "project", "shouldn", "t", "have", "any", "dependency", "on", "my", "system", "s", "gems", "anymore", "NUMBER", "Right", "But", "still", "NUMBER", "pry", "main", "require", "guard", "interactor", "true", "NUMBER", "pry", "main", "Guard", "CoollineInteractor", "NUMBER", "available", "NameError", "uninitialized", "constant", "Guard", "CoollineInteractor", "from", "pry", "NUMBER", "in", "TAG", "Really", "strange", "that", "it", "works", "in", "one", "project", "and", "not", "in", "the", "other", "with", "pretty", "the", "same", "configuration", "though", "it", "s", "a", "new", "project", "the", "other", "one", "has", "quite", "a", "lot", "other", "stuff", "in", "it", "already", "NUMBER", "bundle", "exec", "pry", "doesn", "t", "make", "any", "difference", "NUMBER", "What", "s", "also", "strange", "though", "be", "that", "on", "the", "other", "project", "I", "get", "the", "following", "deprecation", "warning", "which", "I", "don", "t", "get", "in", "the", "one", "where", "coolline", "doesn", "t", "work", "DEPRECATION", "Starting", "with", "Guard", "v", "NUMBER", "the", "use", "of", "the", "run_on_change", "method", "in", "the", "Guard", "Rails", "guard", "be", "deprecate", "NUMBER", "Please", "consider", "replacing", "that", "method", "call", "with", "run_on_changes", "if", "the", "type", "of", "change", "be", "not", "important", "for", "your", "usecase", "or", "use", "either", "run_on_modifications", "or", "run_on_additions", "based", "on", "the", "type", "of", "the", "change", "you", "want", "to", "handle", "NUMBER", "For", "more", "information", "on", "how", "to", "update", "exist", "guards", "please", "head", "over", "to", "LINK", "guide", "for", "exist", "guards", "to", "Guard", "v", "NUMBER", "Maybe", "this", "gives", "us", "some", "extra", "clue", "NUMBER", "Is", "there", "an", "easy", "way", "to", "compare", "the", "gems", "use", "by", "a", "run", "Rails", "app", "to", "another", "s", "Damn", "it", "now", "it", "isn", "t", "work", "in", "both", "projects", "anymore", "P", "I", "have", "do", "a", "sudo", "gem", "update", "before", "maybe", "that", "s", "the", "reason", "No", "I", "think", "not", "as", "I", "m", "having", "an", "NUMBER", "rvmrc", "file", "in", "both", "projects", "NUMBER", "And", "I", "also", "don", "t", "get", "the", "DEPRECATION", "warning", "anymore", "NUMBER", "Seems", "both", "projects", "use", "the", "same", "gems", "now", "but", "this", "means", "that", "coolline", "also", "doesn", "t", "work", "for", "both", "NUMBER", "On", "monday", "my", "co", "worker", "will", "come", "back", "from", "holidays", "let", "s", "see", "what", "results", "he", "will", "have", "NUMBER", "Anyway", "thanks", "a", "lot", "for", "your", "effort", "I", "really", "appreciate", "it", "NUMBER", "I", "notice", "that", "my", "last", "fail", "specs", "be", "not", "run", "again", "when", "I", "made", "a", "change", "but", "instead", "just", "the", "watched", "file", "NUMBER", "I", "just", "upgrade", "but", "lacking", "proper", "documentation", "I", "just", "left", "my", "Guardfile", "as", "be", "NUMBER", "A", "copy", "paste", "version", "of", "the", "default", "Rspec", "Guardfile", "would", "be", "nice", "in", "the", "upgrade", "wiki", "file", "I", "do", "understand", "now", "how", "NUMBER", "do", "things", "but", "still", "have", "no", "clue", "what", "my", "Guardfile", "should", "exactly", "look", "like", "NUMBER", "Nice", "work", "otherwise", "I", "see", "a", "lot", "of", "possible", "improvement", "for", "my", "guard", "file", "in", "the", "future", "NUMBER", "On", "a", "different", "note", "Consider", "a", "run", "last", "fail", "specs", "shortcut", "as", "well", "NUMBER", "I", "tend", "to", "hit", "enter", "and", "run", "my", "entire", "suite", "by", "mistake", "but", "what", "I", "wanted", "was", "just", "the", "last", "fail", "spec", "NUMBER", "Hi", "I", "think", "this", "be", "a", "guard", "rspec", "LINK", "rspec", "issue", "rather", "than", "a", "guard", "issue", "NUMBER", "Regarding", "the", "Guardfile", "you", "don", "t", "have", "to", "update", "it", "after", "upgrading", "to", "Guard", "NUMBER", "the", "upgrade", "wiki", "page", "be", "meant", "for", "guard", "plugins", "developers", "only", "NUMBER", "Regarding", "the", "run", "last", "fail", "specs", "shortcut", "suggestion", "feel", "free", "to", "file", "a", "specific", "issue", "for", "that", "NUMBER", "First", "reason", "Guard", "before", "NUMBER", "wasn", "t", "always", "great", "on", "picking", "up", "change", "fast", "NUMBER", "Sometimes", "it", "took", "NUMBER", "NUMBER", "seconds", "to", "notice", "a", "change", "sometimes", "it", "didn", "t", "rerun", "on", "change", "at", "all", "NUMBER", "That", "let", "me", "to", "just", "pressing", "enter", "which", "of", "course", "runs", "everything", "NUMBER", "I", "could", "not", "reproduce", "it", "at", "a", "specific", "point", "and", "it", "only", "happens", "with", "hundreds", "of", "specs", "so", "I", "didn", "t", "report", "it", "here", "NUMBER", "Second", "reason", "Not", "NUMBER", "of", "my", "specs", "follow", "the", "watch", "this", "then", "run", "that", "pattern", "NUMBER", "Since", "we", "don", "t", "mock", "we", "often", "pick", "up", "failures", "in", "relate", "specs", "that", "use", "a", "particular", "file", "not", "necessarily", "the", "corresponding", "specs", "NUMBER", "Sometimes", "the", "failure", "doesn", "t", "require", "it", "s", "own", "test", "NUMBER", "So", "we", "just", "fix", "it", "from", "the", "relate", "spec", "NUMBER", "Some", "red", "green", "red", "green", "steps", "in", "and", "we", "usually", "come", "to", "the", "point", "where", "if", "we", "forgot", "to", "set", "a", "focus", "tag", "guard", "runs", "everything", "what", "we", "rather", "want", "be", "to", "run", "the", "last", "fail", "NUMBER", "The", "much", "better", "listener", "might", "fix", "this", "already", "I", "will", "let", "you", "know", "NUMBER", "to", "make", "it", "clear", "we", "want", "red", "green", "red", "green", "all", "we", "often", "get", "red", "all", "red", "green", "all", "Already", "set", "keep_failed", "true", "all_after_pass", "false", "Convention", "suggests", "that", "it", "should", "be", "version", "and", "that", "s", "what", "it", "actually", "be", "but", "docs", "and", "code", "mention", "both", "version", "LINK", "L", "NUMBER", "and", "verbose", "LINK", "L", "NUMBER", "NUMBER", "Sounds", "good", "to", "me", "Absolutely", "that", "s", "a", "total", "mess", "right", "now", "P", "Yes", "go", "for", "it", "NUMBER", "debug", "describes", "the", "purpose", "of", "the", "option", "even", "better", "NUMBER", "This", "be", "fix", "in", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "d", "NUMBER", "afae", "NUMBER", "bbd", "NUMBER", "dfbb", "NUMBER", "c", "NUMBER", "a", "NUMBER", "If", "you", "don", "t", "set", "this", "option", "Gnome", "NUMBER", "will", "keep", "Guard", "notifications", "open", "in", "the", "notification", "bar", "NUMBER", "See", "this", "bug", "for", "more", "info", "LINK", "_bug", "NUMBER", "cgi", "id", "NUMBER", "c", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "e", "NUMBER", "a", "NUMBER", "into", "b", "NUMBER", "d", "NUMBER", "NUMBER", "My", "bad", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "fdcf", "NUMBER", "into", "b", "NUMBER", "d", "NUMBER", "NUMBER", "When", "be", "you", "planning", "to", "release", "it", "in", "stable", "version", "I", "m", "use", "guard", "spin", "to", "run", "spin", "serve", "under", "guard", "NUMBER", "I", "m", "also", "use", "LINK", "instead", "of", "ruby", "debug", "NUMBER", "When", "I", "hit", "a", "breakpoint", "in", "my", "code", "I", "find", "that", "most", "of", "my", "keystrokes", "be", "eaten", "before", "they", "re", "handle", "by", "the", "debugger", "NUMBER", "Running", "guard", "i", "fix", "this", "problem", "but", "be", "undesirable", "because", "I", "use", "guard", "for", "more", "than", "just", "spin", "NUMBER", "I", "would", "have", "file", "this", "with", "guard", "spin", "LINK", "spin", "but", "it", "s", "such", "a", "small", "wrapper", "that", "I", "doubt", "the", "bug", "be", "in", "there", "NUMBER", "I", "think", "I", "m", "going", "to", "add", "coolline", "LINK", "Ouie", "coolline", "support", "on", "the", "EuRuKo", "hackday", "as", "alternative", "to", "Readline", "NUMBER", "Then", "the", "only", "dependency", "be", "Ruby", "NUMBER", "on", "all", "systems", "NUMBER", "Adding", "rb", "readline", "do", "indeed", "change", "things", "NUMBER", "I", "can", "use", "the", "debugger", "with", "both", "guard", "spin", "and", "guard", "rspec", "NUMBER", "However", "they", "both", "now", "have", "additional", "problem", "NUMBER", "When", "use", "the", "debugger", "under", "spin", "guard", "runs", "all", "of", "my", "specs", "when", "I", "hit", "enter", "after", "typing", "a", "debugger", "command", "NUMBER", "The", "debugger", "works", "fine", "under", "rspec", "but", "I", "m", "unable", "to", "run", "any", "guard", "interaction", "commands", "afterwards", "NUMBER", "I", "can", "type", "at", "the", "prompt", "but", "when", "I", "press", "enter", "I", "just", "get", "M", "instead", "NUMBER", "I", "also", "get", "that", "M", "issue", "NUMBER", "My", "project", "be", "a", "Sinatra", "app", "I", "use", "guard", "bundler", "minitest", "rack", "NUMBER", "Sometimes", "things", "work", "fine", "for", "a", "while", "but", "eventually", "it", "starts", "doing", "that", "NUMBER", "yeah", "I", "m", "get", "the", "same", "problem", "with", "the", "prompt", "in", "git", "add", "patch", "so", "it", "looks", "like", "it", "s", "really", "a", "readline", "or", "iTerm", "NUMBER", "issue", "I", "encounter", "this", "bug", "with", "guard", "spin", "when", "use", "binding", "NUMBER", "pry", "in", "the", "code", "to", "start", "a", "debug", "when", "I", "arrive", "in", "pry", "some", "keys", "be", "not", "work", "properly", "so", "I", "can", "t", "use", "it", "for", "debug", "NUMBER", "Will", "try", "something", "with", "pry", "remote", "but", "I", "m", "definitely", "interesting", "in", "solving", "this", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "ce", "NUMBER", "a", "NUMBER", "b", "NUMBER", "into", "cdf", "NUMBER", "cd", "NUMBER", "This", "be", "a", "great", "proposal", "NUMBER", "I", "also", "propose", "that", "we", "contact", "all", "the", "developers", "of", "guards", "to", "ensure", "they", "be", "notified", "about", "the", "change", "NUMBER", "Otherwise", "users", "would", "get", "the", "deprecation", "warnings", "and", "a", "swarm", "of", "issue", "would", "be", "report", "to", "the", "developers", "NUMBER", "It", "might", "be", "better", "to", "change", "the", "propose", "pre", "version", "to", "NUMBER", "alpha", "because", "the", "alpha", "term", "be", "usually", "use", "to", "denote", "a", "developers", "only", "build", "NUMBER", "We", "could", "then", "release", "a", "NUMBER", "beta", "version", "just", "to", "allow", "users", "to", "experiment", "with", "the", "change", "before", "release", "the", "final", "version", "NUMBER", "The", "periods", "between", "the", "release", "don", "t", "have", "to", "be", "long", "of", "course", "NUMBER", "Great", "NUMBER", "Just", "switched", "to", "the", "listen", "branch", "to", "use", "for", "my", "projects", "and", "migration", "of", "my", "Guards", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "bd", "NUMBER", "de", "into", "cdf", "NUMBER", "cd", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "ab", "NUMBER", "fa", "into", "cdf", "NUMBER", "cd", "NUMBER", "Great", "job", "so", "far", "Do", "you", "have", "any", "release", "date", "in", "mind", "for", "the", "alpha", "version", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "into", "cdf", "NUMBER", "cd", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "into", "cdf", "NUMBER", "cd", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "ccd", "NUMBER", "f", "NUMBER", "into", "cdf", "NUMBER", "cd", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "ac", "NUMBER", "fd", "into", "cdf", "NUMBER", "cd", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "into", "cdf", "NUMBER", "cd", "NUMBER", "Congrats", "clap", "clap", "NUMBER", "Now", "we", "can", "begin", "test", "Guard", "and", "Listen", "and", "how", "they", "will", "work", "with", "exist", "guards", "NUMBER", "I", "also", "agree", "that", "we", "should", "keep", "the", "alpha", "version", "for", "the", "core", "team", "usage", "only", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "afd", "NUMBER", "f", "NUMBER", "into", "cdf", "NUMBER", "cd", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "into", "cdf", "NUMBER", "cd", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "fcf", "NUMBER", "into", "cdf", "NUMBER", "cd", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "a", "NUMBER", "into", "b", "NUMBER", "d", "NUMBER", "NUMBER", "Ok", "the", "CHANGELOG", "be", "ready", "LINK", "for", "NUMBER", "Edit", "heart", "Travis", "CI", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "bc", "NUMBER", "into", "b", "NUMBER", "e", "NUMBER", "NUMBER", "This", "pull", "request", "pass", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "into", "b", "NUMBER", "e", "NUMBER", "NUMBER", "Regarding", "the", "things", "left", "to", "do", "do", "Adding", "throw", "stuff", "in", "the", "upgrade", "guide", "wiki", "page", "NUMBER", "be", "still", "to", "do", "or", "not", "anymore", "Yep", "that", "task", "be", "still", "open", "NUMBER", "It", "s", "not", "directly", "relate", "to", "the", "Listen", "integration", "but", "since", "people", "should", "anyway", "update", "their", "Guards", "it", "s", "a", "good", "opportunity", "to", "explain", "again", "how", "to", "throw", "task_has_failed", "NUMBER", "It", "s", "not", "a", "big", "deal", "I", "can", "add", "it", "next", "week", "at", "the", "hack", "day", "before", "we", "release", "NUMBER", "Ok", "nice", "thanks", "Some", "guards", "be", "a", "little", "more", "verbose", "than", "I", "d", "prefer", "but", "they", "do", "appear", "to", "be", "use", "UI", "NUMBER", "info", "to", "output", "NUMBER", "I", "d", "love", "a", "guard", "level", "option", "to", "set", "the", "UI", "logging", "level", "NUMBER", "Looking", "at", "the", "UI", "class", "the", "log", "methods", "available", "be", "info", "warning", "error", "deprecation", "debug", "I", "d", "argue", "that", "you", "could", "order", "those", "like", "so", "info", "debug", "warning", "deprecation", "be", "these", "actually", "equivalent", "error", "So", "I", "d", "allow", "for", "a", "symbol", "to", "be", "pass", "in", "that", "corresponds", "to", "the", "lowest", "level", "you", "would", "like", "display", "NUMBER", "If", "guard", "be", "pass", "info", "which", "would", "be", "the", "default", "then", "all", "logs", "be", "rendered", "NUMBER", "If", "pass", "warning", "then", "only", "warning", "and", "error", "calls", "be", "logged", "NUMBER", "It", "d", "be", "nice", "to", "have", "this", "guard", "wide", "and", "also", "available", "to", "be", "set", "on", "individual", "guards", "I", "may", "want", "info", "from", "one", "guard", "but", "only", "error", "from", "another", "NUMBER", "I", "still", "think", "this", "be", "a", "good", "idea", "for", "a", "feature", "but", "I", "ve", "just", "start", "a", "new", "job", "and", "welcomed", "a", "new", "child", "so", "I", "haven", "t", "had", "much", "time", "for", "anything", "of", "late", "NUMBER", "On", "Tue", "May", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Thibaud", "Guillaume", "Gentil", "TAG", "write", "Warning", "deprecation", "be", "a", "little", "different", "I", "think", "we", "could", "order", "those", "like", "that", "info", "debug", "warning", "deprecation", "error", "I", "agree", "that", "having", "guard", "wide", "option", "available", "would", "be", "nice", "it", "could", "maybe", "be", "do", "with", "caller", "LINK", "the", "caller", "method", "in", "ruby", "ruby", "method", "to", "know", "from", "which", "Guard", "the", "UI", "method", "has", "be", "call", "NUMBER", "So", "we", "would", "have", "a", "Guard", "cli", "option", "guard", "log_level", "info", "or", "guard", "l", "info", "And", "a", "Guard", "dsl", "option", "ruby", "guard", "rspec", "log_level", "info", "do", "NUMBER", "end", "If", "it", "s", "ok", "with", "you", "can", "you", "submit", "a", "pull", "request", "It", "would", "be", "awesome", "thanks", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "derekprior", "no", "problem", "take", "care", "of", "your", "new", "child", "I", "would", "put", "debug", "before", "info", "because", "debug", "be", "something", "that", "you", "should", "activate", "deliberately", "NUMBER", "So", "to", "see", "the", "debug", "outputs", "you", "d", "have", "to", "set", "the", "log", "level", "to", "debug", "NUMBER", "That", "s", "actually", "how", "Ruby", "s", "Logger", "LINK", "docs", "NUMBER", "com", "docs", "ruby_", "NUMBER", "rails_", "NUMBER", "Ruby", "NUMBER", "classes", "Logger", "NUMBER", "html", "work", "NUMBER", "Regarding", "the", "way", "of", "passing", "the", "logger", "level", "we", "could", "probably", "add", "a", "new", "DSL", "method", "to", "allow", "this", "to", "be", "set", "Guard", "wide", "as", "well", "as", "per", "guard", "plugin", "NUMBER", "More", "thoughts", "I", "ve", "attended", "EuRuKo", "NUMBER", "in", "Amsterdam", "last", "week", "and", "had", "the", "chance", "to", "hear", "a", "talk", "by", "Mitchell", "Hashimoto", "speaking", "about", "Building", "a", "Ruby", "Library", "The", "Parts", "No", "One", "Talks", "About", "LINK", "a", "ruby", "library", "the", "parts", "no", "one", "talks", "about", "and", "there", "was", "a", "part", "about", "logging", "LINK", "a", "ruby", "library", "the", "parts", "no", "one", "talks", "about", "slide", "NUMBER", "I", "think", "we", "could", "definitely", "use", "Log", "NUMBER", "r", "LINK", "and", "we", "should", "definitely", "print", "the", "output", "to", "a", "file", "instead", "of", "stdout", "stderr", "Interesting", "NUMBER", "to", "try", "Log", "NUMBER", "r", "NUMBER", "Guard", "also", "should", "allow", "enabling", "timestamps", "on", "log", "message", "by", "configuration", "NUMBER", "For", "example", "if", "you", "don", "t", "want", "to", "see", "INFO", "level", "logging", "like", "this", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "Spork", "has", "just", "be", "fired", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "Minitest", "NUMBER", "be", "run", "with", "Minitest", "Unit", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Running", "all", "test", "Add", "a", "line", "like", "logger", "level", "warn", "to", "your", "Guardfile", "NUMBER", "See", "the", "readme", "LINK", "logger", "for", "details", "NUMBER", "Is", "there", "any", "possible", "reason", "to", "explain", "why", "an", "at_exit", "callback", "be", "not", "executed", "when", "the", "main", "process", "be", "start", "by", "guard", "I", "ve", "file", "an", "issue", "for", "a", "sunspot", "test", "gem", "LINK", "rails", "tester", "issue", "NUMBER", "NUMBER", "This", "gem", "will", "take", "care", "of", "launching", "a", "solr", "server", "instance", "when", "needed", "in", "test", "and", "kills", "it", "when", "the", "process", "be", "ending", "NUMBER", "This", "be", "the", "relevant", "code", "LINK", "rails", "tester", "blob", "master", "lib", "sunspot", "rails", "tester", "NUMBER", "rb", "L", "NUMBER", "However", "when", "I", "run", "my", "specs", "use", "guard", "spork", "after", "I", "stop", "the", "guard", "instance", "the", "solr", "process", "be", "still", "there", "and", "it", "s", "not", "killed", "NUMBER", "With", "plain", "spork", "no", "guard", "everything", "works", "NUMBER", "Gem", "maintainer", "told", "me", "to", "look", "at", "guard", "internals", "since", "he", "do", "a", "simple", "at_exit", "call", "NUMBER", "Is", "it", "possible", "that", "guard", "stops", "in", "some", "way", "the", "callback", "from", "be", "executed", "You", "re", "right", "that", "s", "the", "issue", "I", "ll", "forward", "the", "request", "to", "the", "guard", "spork", "maintainer", "NUMBER", "Guard", "solr", "or", "foreman", "could", "solve", "the", "issue", "in", "a", "more", "elegant", "way", "I", "ll", "look", "in", "those", "options", "too", "NUMBER", "Fix", "for", "NUMBER", "It", "s", "true", "the", "message", "may", "be", "a", "bit", "too", "obvious", "now", "if", "you", "re", "not", "happy", "about", "it", "let", "me", "know", "and", "I", "ll", "see", "what", "I", "can", "do", "to", "edit", "it", "down", "NUMBER", "Whoops", "Sorry", "NUMBER", "I", "should", "know", "better", "than", "to", "not", "run", "the", "test", "NUMBER", "If", "you", "pull", "the", "branch", "again", "I", "ve", "fix", "them", "NUMBER", "Hi", "I", "be", "all", "for", "the", "message", "that", "Guard", "gives", "you", "if", "you", "have", "a", "Gemfile", "but", "aren", "t", "use", "it", "but", "it", "s", "kind", "of", "FUDdy", "NUMBER", "It", "isn", "t", "dangerous", "to", "run", "guard", "without", "Bundler", "and", "it", "s", "not", "safer", "with", "it", "NUMBER", "That", "would", "imply", "that", "Bundler", "be", "an", "antivirus", "program", "which", "it", "s", "not", "NUMBER", "It", "also", "assumes", "that", "the", "user", "knows", "nothing", "about", "Bundler", "which", "be", "probably", "not", "true", "NUMBER", "First", "if", "I", "have", "a", "Gemfile", "I", "probably", "know", "a", "little", "bit", "about", "Bundler", "but", "second", "what", "if", "I", "choose", "not", "to", "use", "Bundler", "because", "I", "m", "run", "test", "and", "I", "don", "t", "want", "to", "wait", "for", "bundle", "exec", "to", "do", "its", "thing", "I", "would", "rather", "see", "a", "message", "like", "this", "FYI", "It", "looks", "like", "your", "project", "has", "a", "Gemfile", "yet", "you", "be", "run", "guard", "outside", "of", "Bundler", "NUMBER", "If", "this", "be", "your", "intent", "feel", "free", "to", "ignore", "this", "message", "NUMBER", "Otherwise", "consider", "run", "bundle", "exec", "guard", "to", "ensure", "your", "dependencies", "be", "loaded", "correctly", "NUMBER", "I", "completely", "agree", "NUMBER", "All", "the", "Guard", "core", "members", "be", "non", "native", "English", "speakers", "so", "it", "s", "likely", "that", "you", "find", "plenty", "of", "clumsy", "phrases", "all", "over", "the", "code", "base", "and", "the", "readme", "and", "we", "really", "appreciate", "any", "feedback", "to", "improve", "the", "situation", "NUMBER", "I", "m", "ok", "with", "change", "the", "phrase", "even", "when", "it", "s", "quite", "lengthy", "NUMBER", "Any", "objections", "thibaudgg", "rymai", "and", "Maher", "NUMBER", "Ever", "Agreed", "No", "objection", "Thanks", "Great", "feedback", "mcmire", "NUMBER", "I", "also", "think", "the", "suggested", "message", "be", "a", "lot", "more", "descriptive", "in", "a", "good", "way", "and", "less", "misleading", "NUMBER", "Ah", "right", "NUMBER", "Setting", "bundle", "exec", "guard", "doesn", "t", "affect", "individual", "guards", "because", "they", "usually", "run", "their", "own", "completely", "separate", "processes", "correct", "So", "actually", "take", "a", "step", "back", "what", "s", "the", "point", "of", "giving", "me", "this", "Bundler", "warning", "After", "all", "run", "guard", "probably", "isn", "t", "going", "to", "load", "the", "app", "or", "library", "I", "be", "work", "on", "the", "guard", "processes", "will", "NUMBER", "So", "connecting", "the", "dots", "run", "bundle", "exec", "guard", "be", "important", "insofar", "that", "it", "guarantees", "that", "all", "of", "the", "guards", "I", "ve", "defined", "in", "my", "Gemfile", "be", "successfully", "loaded", "and", "I", "m", "guessing", "you", "guys", "don", "t", "want", "to", "get", "complaints", "about", "stuff", "not", "be", "loaded", "properly", "from", "people", "who", "don", "t", "know", "the", "first", "thing", "about", "Guard", "or", "Bundler", "for", "that", "matter", "NUMBER", "Was", "that", "the", "use", "case", "for", "this", "Some", "time", "ago", "almost", "every", "second", "issue", "was", "relate", "to", "not", "having", "run", "Guard", "with", "bundle", "exec", "NUMBER", "The", "bundle", "warning", "message", "saves", "hours", "of", "our", "time", "NUMBER", "Remember", "there", "be", "many", "Guards", "that", "be", "useful", "for", "designers", "guard", "sass", "guard", "compass", "guard", "haml", "etc", "NUMBER", "or", "Guards", "for", "people", "not", "use", "Ruby", "as", "their", "language", "guard", "go", "guard", "phpcs", "etc", "NUMBER", "and", "they", "do", "not", "understand", "the", "bundler", "thing", "fully", "NUMBER", "Okay", "NUMBER", "That", "makes", "sense", "and", "I", "see", "why", "you", "phrased", "it", "as", "dangerous", "you", "want", "to", "stress", "that", "it", "s", "important", "that", "unless", "you", "know", "what", "you", "re", "doing", "just", "use", "bundle", "exec", "and", "everything", "will", "be", "peachy", "NUMBER", "I", "m", "considering", "change", "the", "text", "to", "reflect", "this", "urgency", "while", "keep", "the", "friendly", "tone", "NUMBER", "What", "do", "you", "think", "about", "this", "Guard", "here", "This", "project", "uses", "Bundler", "to", "manage", "dependencies", "yet", "you", "be", "run", "guard", "outside", "of", "the", "bundle", "NUMBER", "Unless", "this", "be", "your", "intent", "we", "strongly", "advise", "that", "you", "use", "bundle", "exec", "guard", "as", "this", "will", "ensure", "that", "all", "of", "the", "guards", "in", "your", "Guardfile", "be", "successfully", "loaded", "NUMBER", "To", "hide", "this", "message", "run", "guard", "no", "bundler", "warning", "NUMBER", "You", "might", "want", "to", "also", "mention", "bundle", "exec", "guard", "explicitly", "in", "the", "Readme", "under", "Installation", "LINK", "installation", "NUMBER", "As", "this", "was", "my", "first", "time", "to", "use", "Bundler", "this", "initially", "confused", "me", "NUMBER", "I", "ve", "made", "a", "pull", "request", "with", "this", "copyedit", "You", "might", "also", "want", "to", "mention", "this", "under", "Start", "LINK", "start", "too", "Was", "run", "into", "this", "error", "when", "use", "guard", "programmatically", "usr", "local", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interactor", "NUMBER", "rb", "NUMBER", "command", "not", "find", "usr", "local", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "guard", "NUMBER", "bin", "fsevent_watch_guard", "The", "file", "in", "NUMBER", "bin", "be", "named", "fsevent_watch_guard_guard", "and", "run", "rake", "build_vendor", "would", "modify", "ext", "extconf", "and", "other", "file", "by", "continuously", "appending", "prepending", "values", "NUMBER", "I", "also", "regenerated", "fsevent_watch_guard", "by", "run", "rake", "build_mac_exec", "but", "there", "weren", "t", "any", "change", "NUMBER", "Guard", "will", "be", "get", "rid", "of", "the", "fsevent", "extension", "soon", "as", "it", "ll", "be", "use", "a", "new", "gem", "call", "Listen", "LINK", "NUMBER", "So", "your", "problem", "should", "automatically", "disappear", "when", "the", "transition", "be", "do", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "merge", "NUMBER", "cbec", "NUMBER", "d", "into", "NUMBER", "b", "NUMBER", "NUMBER", "Hello", "everyone", "Guard", "has", "two", "file", "now", "for", "extra", "configurations", "as", "you", "know", "NUMBER", "The", "first", "one", "be", "NUMBER", "Guardfile", "and", "the", "second", "one", "be", "NUMBER", "guard", "NUMBER", "rb", "NUMBER", "Four", "months", "ago", "though", "a", "new", "feature", "LINK", "was", "add", "to", "define", "template", "for", "guard", "s", "implementations", "in", "NUMBER", "guard", "template", "NUMBER", "Since", "Guard", "already", "uses", "the", "NUMBER", "guard", "directory", "I", "think", "it", "would", "be", "better", "to", "move", "all", "user", "configurations", "to", "that", "directory", "NUMBER", "I", "also", "think", "we", "could", "change", "the", "name", "of", "NUMBER", "guard", "NUMBER", "rb", "to", "NUMBER", "guard", "shared", "NUMBER", "rb", "which", "better", "describes", "the", "purpose", "of", "that", "file", "NUMBER", "We", "could", "also", "change", "file", "NUMBER", "Guardfile", "to", "just", "NUMBER", "guard", "Guardfile", "but", "that", "would", "make", "NUMBER", "guard", "unwatchable", "by", "Guard", "Of", "course", "the", "old", "file", "would", "be", "deprecate", "in", "the", "beginning", "until", "they", "get", "remove", "when", "its", "time", "for", "it", "NUMBER", "To", "summarize", "Guard", "already", "reserves", "the", "NUMBER", "guard", "directory", "thus", "we", "could", "store", "all", "configurations", "there", "NUMBER", "Update", "While", "playing", "with", "the", "feature", "of", "defining", "template", "in", "NUMBER", "guard", "template", "I", "find", "out", "that", "the", "Guardfile", "for", "a", "given", "implementation", "must", "use", "the", "name", "of", "the", "implementation", "NUMBER", "So", "to", "define", "a", "template", "for", "rspec", "to", "use", "when", "calling", "guard", "init", "rspec", "one", "should", "create", "a", "file", "NUMBER", "guard", "template", "rspec", "NUMBER", "Also", "if", "guard", "rspec", "be", "already", "install", "it", "wouldn", "t", "be", "use", "NUMBER", "Wouldn", "t", "it", "be", "nicer", "to", "store", "the", "template", "in", "a", "directory", "for", "the", "implementation", "instead", "So", "NUMBER", "guard", "template", "rspec", "would", "become", "NUMBER", "guard", "template", "rspec", "Guardfile", "and", "use", "it", "if", "it", "s", "find", "instead", "of", "the", "default", "one", "that", "comes", "with", "the", "implementation", "That", "way", "one", "could", "define", "the", "template", "one", "time", "there", "and", "never", "have", "to", "change", "it", "again", "NUMBER", "NUMBER", "for", "moving", "all", "the", "configs", "to", "the", "NUMBER", "guard", "directory", "NUMBER", "Great", "Hopefully", "this", "change", "will", "make", "it", "into", "Guard", "NUMBER", "No", "it", "didn", "t", "P", "What", "s", "the", "milestone", "for", "this", "NUMBER", "Yep", "NUMBER", "That", "sounds", "good", "NUMBER", "I", "start", "work", "on", "this", "feature", "at", "the", "HackDay", "but", "I", "didn", "t", "finish", "it", "yet", "NUMBER", "NUMBER", "and", "bump", "Also", "change", "default", "urgency", "for", "libnotify", "to", "normal", "and", "low", "to", "match", "notifysend", "s", "new", "defaults", "NUMBER", "Is", "that", "sufficient", "I", "can", "add", "more", "details", "if", "needed", "NUMBER", "I", "m", "use", "vagrant", "LINK", "on", "Windows", "with", "guard", "run", "on", "an", "Ubuntu", "VM", "NUMBER", "I", "can", "t", "seem", "to", "trigger", "file", "change", "over", "the", "VirtualBox", "shared", "folder", "NUMBER", "If", "I", "touch", "the", "file", "within", "Ubuntu", "it", "pick", "up", "the", "file", "change", "with", "rb", "inotify", "NUMBER", "Touching", "the", "file", "on", "Windows", "doesn", "t", "trigger", "anything", "even", "with", "polling", "NUMBER", "Any", "suggestions", "It", "looks", "like", "this", "be", "a", "VirtualBox", "issue", "NUMBER", "LINK", "Thanks", "for", "the", "info", "NUMBER", "You", "can", "force", "the", "use", "of", "the", "polling", "adapter", "see", "my", "comment", "in", "issue", "NUMBER", "LINK", "issuecomment", "NUMBER", "Hmm", "well", "I", "update", "to", "the", "latest", "VirtualBox", "which", "be", "supposed", "to", "include", "the", "fix", "NUMBER", "I", "ve", "also", "tried", "the", "polling", "method", "you", "mention", "with", "bundle", "exec", "guard", "no", "vendor", "When", "touching", "the", "file", "on", "Windows", "I", "can", "see", "that", "the", "last", "modify", "date", "reflects", "correctly", "but", "guard", "still", "isn", "t", "be", "triggered", "NUMBER", "Any", "suggestions", "Does", "Guard", "show", "the", "message", "Using", "polling", "Please", "help", "us", "to", "support", "your", "system", "better", "than", "that", "NUMBER", "on", "start", "Yep", "here", "be", "the", "full", "output", "bundle", "exec", "guard", "no", "vendor", "Using", "polling", "Please", "help", "us", "to", "support", "your", "system", "better", "than", "that", "NUMBER", "Guard", "could", "not", "detect", "any", "of", "the", "support", "notification", "libraries", "NUMBER", "Guard", "be", "now", "watching", "at", "vagrant", "Starting", "Spork", "for", "RSpec", "Using", "RSpec", "Preloading", "Rails", "environment", "Loading", "Spork", "NUMBER", "prefork", "block", "NUMBER", "Spork", "be", "ready", "and", "listening", "on", "NUMBER", "Spork", "server", "for", "RSpec", "successfully", "start", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "I", "ve", "update", "to", "Guard", "NUMBER", "and", "still", "having", "the", "same", "issue", "NUMBER", "My", "test", "involved", "bundle", "exec", "guard", "and", "then", "initiating", "file", "saves", "on", "a", "few", "_spec", "NUMBER", "rb", "file", "from", "Windows", "NUMBER", "From", "within", "the", "virtual", "machine", "itself", "Ubuntu", "I", "can", "verify", "it", "works", "with", "a", "touch", "_spec", "NUMBER", "rb", "However", "I", "have", "a", "strong", "feeling", "this", "be", "a", "VirtualBox", "issue", "NUMBER", "netzpirat", "What", "would", "you", "recommend", "Been", "doing", "something", "like", "this", "but", "with", "no", "success", "bundle", "exec", "guard", "l", "NUMBER", "netzpirat", "thanks", "for", "the", "Virtualbox", "ticket", "research", "This", "issue", "seems", "to", "have", "be", "fix", "in", "Virtualbox", "release", "NUMBER", "Axsuul", "do", "you", "have", "that", "version", "I", "update", "to", "latest", "virtualbox", "then", "install", "guest", "additions", "and", "then", "run", "guard", "with", "p", "option", "NUMBER", "It", "works", "well", "now", "but", "test", "runs", "twice", "if", "I", "modify", "file", "in", "Windows", "NUMBER", "When", "I", "try", "to", "touch", "test", "NUMBER", "rb", "in", "linux", "it", "runs", "only", "NUMBER", "time", "NUMBER", "Using", "VirtualBox", "NUMBER", "with", "update", "Guest", "Additions", "the", "host", "be", "a", "MacOS", "X", "NUMBER", "and", "the", "guest", "an", "Ubuntu", "NUMBER", "I", "have", "to", "run", "guard", "with", "guard", "p", "l", "NUMBER", "to", "make", "it", "work", "without", "keep", "my", "CPU", "at", "NUMBER", "charge", "NUMBER", "I", "understand", "the", "non", "polling", "approach", "be", "not", "support", "but", "I", "m", "get", "this", "annoying", "double", "trigger", "Vizakenjack", "be", "get", "NUMBER", "Did", "someone", "find", "a", "neat", "solution", "rchampourlier", "have", "you", "the", "last", "version", "of", "Guard", "Listen", "thibaudgg", "Sorry", "I", "did", "specify", "my", "OSes", "version", "and", "I", "forgot", "Guard", "Listen", "NUMBER", "Guard", "be", "NUMBER", "Listen", "be", "NUMBER", "I", "think", "these", "be", "the", "latest", "version", "rchampourlier", "yep", "it", "be", "it", "difficult", "to", "know", "from", "where", "the", "double", "trigger", "be", "come", "have", "you", "try", "with", "another", "editor", "Updated", "Guest", "Additions", "to", "NUMBER", "and", "now", "work", "with", "polling", "although", "ti", "can", "be", "a", "bit", "slow", "NUMBER", "I", "don", "t", "seem", "to", "be", "get", "the", "double", "trigger", "problem", "NUMBER", "Thanks", "for", "the", "help", "guys", "Guard", "be", "launched", "with", "bundle", "exec", "guard", "p", "l", "NUMBER", "touch", "Guardfile", "on", "guest", "NUMBER", "trigger", "touch", "Guardfile", "on", "host", "NUMBER", "trigger", "Editing", "and", "saving", "the", "file", "with", "SublimeText", "NUMBER", "without", "change", "the", "file", "content", "NUMBER", "trigger", "after", "change", "the", "file", "content", "NUMBER", "triggers", "Editing", "and", "saving", "the", "file", "with", "TextMate", "NUMBER", "same", "behavior", "as", "SublimeText", "NUMBER", "thibaudgg", "I", "just", "test", "on", "a", "local", "file", "with", "SublimeText", "and", "TextMate", "NUMBER", "We", "have", "the", "exact", "same", "behavior", "as", "through", "Vagrant", "NUMBER", "When", "the", "file", "be", "change", "we", "have", "a", "double", "trigger", "if", "guard", "be", "run", "with", "p", "I", "test", "with", "p", "l", "NUMBER", "and", "p", "the", "result", "be", "the", "same", "NUMBER", "When", "the", "file", "be", "just", "saved", "we", "have", "a", "single", "trigger", "NUMBER", "I", "m", "also", "hitting", "the", "double", "trigger", "issue", "each", "time", "I", "save", "an", "edit", "in", "Sublime", "on", "Win", "NUMBER", "x", "NUMBER", "I", "run", "bundle", "exec", "guard", "d", "p", "l", "NUMBER", "as", "asked", "and", "I", "copied", "the", "result", "I", "see", "below", "NUMBER", "Note", "that", "at", "NUMBER", "NUMBER", "NUMBER", "the", "interactor", "and", "starts", "and", "stops", "instantly", "bx", "guard", "d", "p", "l", "NUMBER", "Guard", "uses", "GNTP", "to", "send", "notifications", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "chcp", "Guard", "be", "now", "watching", "at", "c", "workspace", "cognate", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "hash", "stty", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Running", "all", "specs", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "exec", "rspec", "help", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "exec", "rspec", "fail", "fast", "f", "progress", "r", "c", "R", "ailsInstaller", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "for", "matters", "notification_rspec", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Randomized", "with", "seed", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "hash", "stty", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Start", "interactor", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Stop", "interactor", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "hash", "stty", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Trying", "to", "run", "Guard", "RSpec", "run_on_modifications", "with", "spec", "models", "n", "ode_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "run_on_changes_begin", "executed", "for", "Guard", "RSpec", "Running", "spec", "models", "node_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "exec", "rspec", "fail", "fast", "f", "progress", "r", "c", "R", "ailsInstaller", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "for", "matters", "notification_rspec", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "models", "node_spec", "NUMBER", "rb", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Randomized", "with", "seed", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "run_on_changes_end", "executed", "for", "Guard", "RSpec", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "hash", "stty", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Start", "interactor", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Stop", "interactor", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "hash", "stty", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Trying", "to", "run", "Guard", "RSpec", "run_on_modifications", "with", "spec", "models", "n", "ode_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "run_on_changes_begin", "executed", "for", "Guard", "RSpec", "Running", "spec", "models", "node_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "exec", "rspec", "fail", "fast", "f", "progress", "r", "c", "R", "ailsInstaller", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "for", "matters", "notification_rspec", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "models", "node_spec", "NUMBER", "rb", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Randomized", "with", "seed", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "run_on_changes_end", "executed", "for", "Guard", "RSpec", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "hash", "stty", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Start", "interactor", "PS", "Separately", "I", "m", "defaulting", "to", "the", "polling", "adapter", "because", "the", "listen", "gem", "doesn", "t", "seem", "to", "notice", "file", "change", "in", "my", "work", "directory", "NUMBER", "I", "ve", "install", "and", "remove", "combinations", "of", "rb", "fsevent", "rb", "notifu", "rb", "fchange", "and", "wdm", "but", "guard", "doesn", "t", "pick", "up", "change", "NUMBER", "But", "polling", "seems", "to", "work", "perfectly", "except", "for", "this", "double", "trigger", "issue", "NUMBER", "Unfortunately", "I", "wasn", "t", "able", "to", "reproduce", "the", "double", "trigger", "issue", "NUMBER", "Does", "anyone", "have", "a", "repeatable", "way", "to", "reproduce", "this", "issue", "preferably", "starting", "with", "a", "clean", "install", "of", "an", "operate", "system", "and", "ruby", "NUMBER", "I", "m", "looking", "into", "a", "reproductible", "way", "NUMBER", "What", "would", "be", "the", "lowest", "requirement", "approach", "to", "test", "Guard", "triggering", "without", "the", "need", "for", "a", "Rails", "Sinatra", "project", "and", "the", "appropriate", "guards", "NUMBER", "Is", "there", "a", "guard", "test", "for", "example", "EDIT", "Just", "created", "a", "new", "guard", "guard", "self_test", "LINK", "self_test", "NUMBER", "Done", "I", "ve", "reproduced", "it", "on", "a", "fresh", "Vagrant", "box", "with", "Lucid", "NUMBER", "and", "rbenv", "install", "of", "Ruby", "NUMBER", "p", "NUMBER", "The", "test", "project", "be", "available", "on", "this", "repo", "LINK", "_reproduce_issue_", "NUMBER", "NUMBER", "I", "ve", "set", "the", "box", "to", "lucid", "NUMBER", "ruby", "NUMBER", "p", "NUMBER", "in", "the", "Vagrantfile", "which", "be", "a", "box", "I", "build", "use", "this", "LINK", "stacks", "but", "you", "can", "use", "lucid", "NUMBER", "instead", "and", "install", "Ruby", "NUMBER", "p", "NUMBER", "yourself", "NUMBER", "The", "test", "log", "be", "in", "this", "gist", "LINK", "NUMBER", "We", "can", "see", "that", "editing", "a", "file", "in", "SublimeText", "causes", "two", "triggers", "when", "all", "other", "cases", "trigger", "only", "once", "NUMBER", "The", "test", "procedure", "be", "touch", "touch", "from", "host", "from", "the", "host", "touch", "touch", "in", "guest", "inside", "the", "guest", "machine", "save", "touch", "in", "sublime", "text", "without", "change", "the", "file", "in", "SublimeText", "edit", "and", "save", "edit", "in", "sublime", "text", "after", "change", "the", "file", "in", "SublimeText", "I", "have", "the", "same", "issue", "with", "sublime", "NUMBER", "Hope", "you", "fix", "it", "soon", "NUMBER", "We", "have", "an", "issue", "opened", "on", "Listen", "about", "this", "issue", "feel", "free", "to", "participate", "NUMBER", "Pull", "request", "be", "welcome", "NUMBER", "LINK", "The", "problem", "be", "that", "the", "refactored", "code", "doesn", "t", "work", "as", "anticipated", "NUMBER", "The", "previous", "code", "registers", "them", "sufficiently", "early", "and", "works", "correctly", "btw", "NUMBER", "The", "fix", "will", "be", "attached", "soon", "NUMBER", "The", "signal", "traps", "be", "attached", "before", "the", "listener", "starts", "and", "since", "the", "signals", "change", "the", "listener", "state", "this", "be", "perfectly", "valid", "NUMBER", "The", "refactoring", "was", "do", "because", "the", "listener", "will", "be", "replaced", "with", "Listen", "LINK", "soon", "and", "I", "didn", "t", "want", "to", "have", "them", "lost", "NUMBER", "You", "current", "Guard", "master", "do", "not", "work", "as", "advertised", "NUMBER", "When", "I", "send", "a", "SIGUSR", "NUMBER", "or", "SIGUSR", "NUMBER", "to", "your", "version", "of", "Guard", "it", "exits", "the", "process", "NUMBER", "In", "addition", "the", "specs", "be", "also", "fail", "bash", "git", "clone", "git", "github", "NUMBER", "com", "steakknife", "guard", "NUMBER", "git", "ruby", "NUMBER", "p", "NUMBER", "Cloning", "into", "guard", "NUMBER", "remote", "Counting", "objects", "NUMBER", "do", "NUMBER", "remote", "Compressing", "objects", "NUMBER", "NUMBER", "NUMBER", "do", "NUMBER", "remote", "Total", "NUMBER", "delta", "NUMBER", "reused", "NUMBER", "delta", "NUMBER", "Receiving", "objects", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "KiB", "NUMBER", "KiB", "s", "do", "NUMBER", "Resolving", "deltas", "NUMBER", "NUMBER", "NUMBER", "do", "NUMBER", "otherland", "cd", "guard", "ruby", "NUMBER", "p", "NUMBER", "otherland", "guard", "bundle", "master", "NUMBER", "c", "NUMBER", "ruby", "NUMBER", "p", "NUMBER", "Fetching", "gem", "metadata", "from", "LINK", "Using", "rake", "NUMBER", "Using", "bundler", "NUMBER", "Using", "coderay", "NUMBER", "Using", "diff", "lcs", "NUMBER", "Using", "ffi", "NUMBER", "Using", "thor", "NUMBER", "Using", "guard", "NUMBER", "from", "source", "at", "Users", "michi", "guard", "Installing", "hpricot", "NUMBER", "with", "native", "extensions", "Installing", "mustache", "NUMBER", "Installing", "rdiscount", "NUMBER", "with", "native", "extensions", "Installing", "ronn", "NUMBER", "Installing", "guard", "ronn", "NUMBER", "Using", "guard", "rspec", "NUMBER", "Using", "method_source", "NUMBER", "Using", "slop", "NUMBER", "Using", "pry", "NUMBER", "Using", "rb", "readline", "NUMBER", "Installing", "redcarpet", "NUMBER", "with", "native", "extensions", "Using", "rspec", "core", "NUMBER", "Using", "rspec", "expectations", "NUMBER", "Using", "rspec", "mocks", "NUMBER", "Using", "rspec", "NUMBER", "Installing", "ruby_gntp", "NUMBER", "Using", "yard", "NUMBER", "Your", "bundle", "be", "complete", "Use", "bundle", "show", "gemname", "to", "see", "where", "a", "bundled", "gem", "be", "install", "NUMBER", "otherland", "guard", "bundle", "exec", "rspec", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "master", "NUMBER", "c", "NUMBER", "ruby", "NUMBER", "p", "NUMBER", "Please", "do", "not", "update", "create", "file", "while", "test", "be", "run", "NUMBER", "Run", "options", "include", "focus", "true", "All", "examples", "were", "filtered", "out", "ignoring", "focus", "true", "FFFFFFFFFFFF", "Failures", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "an", "USR", "NUMBER", "signal", "pause", "once", "Failure", "Error", "guard", "NUMBER", "should_receive", "pause", "NUMBER", "once", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "an", "USR", "NUMBER", "signal", "do", "nothing", "Failure", "Error", "let", "guard", "Guard", "Listener", "NUMBER", "new", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "initialize", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "new", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "duplicate", "USR", "NUMBER", "signals", "pause", "once", "Failure", "Error", "guard", "NUMBER", "should_receive", "pause", "NUMBER", "once", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "duplicate", "USR", "NUMBER", "signals", "do", "nothing", "Failure", "Error", "guard", "NUMBER", "should_not_receive", "pause", "NUMBER", "any_number_of_times", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "an", "USR", "NUMBER", "and", "then", "USR", "NUMBER", "signal", "pause", "and", "then", "run", "Failure", "Error", "Process", "NUMBER", "kill", "USR", "NUMBER", "Process", "NUMBER", "pid", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "exception", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "kill", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "an", "USR", "NUMBER", "and", "then", "USR", "NUMBER", "signal", "run", "once", "Failure", "Error", "Unable", "to", "find", "matching", "line", "from", "backtrace", "SignalException", "SIGUSR", "NUMBER", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "hooks", "NUMBER", "rb", "NUMBER", "in", "exception", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "hooks", "NUMBER", "rb", "NUMBER", "in", "run_in", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "hooks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run_all", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "hooks", "NUMBER", "rb", "NUMBER", "in", "each", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "hooks", "NUMBER", "rb", "NUMBER", "in", "run_all", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "hooks", "NUMBER", "rb", "NUMBER", "in", "run_hook", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run_before_each_hooks", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "each", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "run_before_each_hooks", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example", "NUMBER", "rb", "NUMBER", "in", "run_before_each", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example", "NUMBER", "rb", "NUMBER", "in", "with_around_hooks", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run_examples", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "map", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "run_examples", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "map", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "map", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "example_group", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "command_line", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "command_line", "NUMBER", "rb", "NUMBER", "in", "map", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "command_line", "NUMBER", "rb", "NUMBER", "in", "block", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "reporter", "NUMBER", "rb", "NUMBER", "in", "report", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "command_line", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "runner", "NUMBER", "rb", "NUMBER", "in", "run_in_process", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "runner", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "michi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "runner", "NUMBER", "rb", "NUMBER", "in", "block", "in", "autorun", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "an", "USR", "NUMBER", "signal", "do", "nothing", "Failure", "Error", "before", "Process", "NUMBER", "kill", "USR", "NUMBER", "Process", "NUMBER", "pid", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "kill", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "an", "USR", "NUMBER", "signal", "pause", "once", "Failure", "Error", "before", "Process", "NUMBER", "kill", "USR", "NUMBER", "Process", "NUMBER", "pid", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "kill", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "duplicate", "USR", "NUMBER", "signals", "do", "nothing", "Failure", "Error", "Process", "NUMBER", "kill", "USR", "NUMBER", "Process", "NUMBER", "pid", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "kill", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "duplicate", "USR", "NUMBER", "signals", "run", "once", "Failure", "Error", "Process", "NUMBER", "kill", "USR", "NUMBER", "Process", "NUMBER", "pid", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "kill", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "an", "USR", "NUMBER", "and", "then", "USR", "NUMBER", "signal", "run", "once", "Failure", "Error", "Process", "NUMBER", "kill", "USR", "NUMBER", "Process", "NUMBER", "pid", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "kill", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "an", "USR", "NUMBER", "and", "then", "USR", "NUMBER", "signal", "run", "and", "then", "pause", "Failure", "Error", "Process", "NUMBER", "kill", "USR", "NUMBER", "Process", "NUMBER", "pid", "SignalException", "SIGUSR", "NUMBER", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "kill", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Failed", "examples", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "an", "USR", "NUMBER", "signal", "pause", "once", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "an", "USR", "NUMBER", "signal", "do", "nothing", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "duplicate", "USR", "NUMBER", "signals", "pause", "once", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "duplicate", "USR", "NUMBER", "signals", "do", "nothing", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "an", "USR", "NUMBER", "and", "then", "USR", "NUMBER", "signal", "pause", "and", "then", "run", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "on", "an", "USR", "NUMBER", "and", "then", "USR", "NUMBER", "signal", "run", "once", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "an", "USR", "NUMBER", "signal", "do", "nothing", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "an", "USR", "NUMBER", "signal", "pause", "once", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "duplicate", "USR", "NUMBER", "signals", "do", "nothing", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "duplicate", "USR", "NUMBER", "signals", "run", "once", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "an", "USR", "NUMBER", "and", "then", "USR", "NUMBER", "signal", "run", "once", "rspec", "NUMBER", "spec", "guard", "listeners", "signals_spec", "NUMBER", "rb", "NUMBER", "Guard", "Listener", "when", "initialize", "a", "new", "Listener", "when", "pause", "on", "an", "USR", "NUMBER", "and", "then", "USR", "NUMBER", "signal", "run", "and", "then", "pause", "I", "m", "very", "sorry", "that", "you", "re", "disappointed", "but", "as", "a", "maintainer", "it", "s", "my", "job", "to", "test", "each", "pull", "request", "that", "I", "m", "merge", "and", "make", "sure", "the", "specs", "be", "passing", "and", "the", "change", "works", "NUMBER", "The", "handlers", "be", "not", "install", "for", "several", "seconds", "with", "the", "refactored", "patch", "NUMBER", "If", "a", "USR", "NUMBER", "be", "sent", "before", "the", "handler", "be", "install", "the", "result", "be", "obvious", "NUMBER", "netzpirat", "The", "previous", "code", "works", "with", "s", "self", "NUMBER", "windows", "Listener", "NUMBER", "windows", "NUMBER", "It", "was", "throw", "a", "NoMethod", "error", "that", "was", "not", "visible", "from", "inside", "the", "Thread", "block", "NUMBER", "Also", "the", "signal", "handlers", "be", "not", "add", "for", "over", "NUMBER", "seconds", "consistently", "whereas", "the", "pull", "request", "add", "them", "at", "about", "NUMBER", "ms", "NUMBER", "guard", "example", "master", "guard", "Volumes", "Users", "barry", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard", "example", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "Added", "signal", "handlers", "to", "Guard", "PID", "NUMBER", "Guard", "uses", "GNTP", "to", "send", "notifications", "NUMBER", "Guard", "be", "now", "watching", "at", "Volumes", "Users", "barry", "guard", "example", "Bundle", "already", "up", "to", "date", "Starting", "guard", "rake", "build", "Guard", "Rails", "will", "now", "restart", "your", "app", "on", "port", "NUMBER", "use", "development", "environment", "NUMBER", "Starting", "Rails", "NUMBER", "Booting", "Thin", "Rails", "NUMBER", "application", "starting", "in", "production", "on", "LINK", "Call", "with", "d", "to", "detach", "Ctrl", "C", "to", "shutdown", "server", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Volumes", "Users", "barry", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guard", "example", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "Added", "signal", "handlers", "to", "Guard", "PID", "NUMBER", "Furthermore", "installing", "traps", "on", "windows", "fail", "with", "an", "ArgumentError", "exception", "NUMBER", "So", "the", "issue", "be", "that", "the", "handlers", "get", "attached", "_after_", "Guard", "triggers", "start", "NUMBER", "Why", "not", "just", "move", "it", "I", "have", "test", "the", "Signal", "handlers", "on", "three", "Rubies", "on", "Windows", "NUMBER", "and", "they", "can", "be", "attached", "without", "exception", "NUMBER", "What", "was", "your", "test", "case", "Way", "to", "encourage", "collaboration", "NUMBER", "Good", "luck", "Let", "me", "summarize", "what", "happend", "until", "now", "NUMBER", "You", "send", "us", "pull", "request", "NUMBER", "with", "a", "broken", "implementation", "and", "fail", "specs", "that", "test", "the", "wrong", "stuff", "NUMBER", "NUMBER", "I", "fix", "the", "implementation", "and", "rewrote", "the", "specs", "in", "NUMBER", "for", "you", "and", "I", "gave", "you", "a", "polite", "explanation", "LINK", "issuecomment", "NUMBER", "why", "I", "did", "so", "NUMBER", "NUMBER", "You", "gave", "me", "a", "disparaging", "answer", "LINK", "issuecomment", "NUMBER", "without", "any", "constructive", "feedback", "NUMBER", "NUMBER", "You", "opened", "NUMBER", "with", "again", "a", "disparaging", "description", "and", "no", "constructive", "feedback", "NUMBER", "NUMBER", "I", "gave", "you", "a", "more", "detailed", "explanation", "LINK", "issuecomment", "NUMBER", "why", "I", "change", "some", "code", "from", "your", "pull", "request", "NUMBER", "NUMBER", "You", "opened", "pull", "request", "NUMBER", "without", "a", "meaningful", "title", "and", "description", "NUMBER", "You", "ignoring", "my", "previous", "comment", "why", "I", "moved", "the", "logic", "to", "the", "Guard", "class", "and", "you", "moved", "the", "handlers", "back", "to", "the", "Listener", "class", "NUMBER", "Again", "the", "specs", "be", "fail", "NUMBER", "NUMBER", "I", "gave", "you", "a", "polite", "feedback", "LINK", "issuecomment", "NUMBER", "why", "I", "can", "t", "merge", "the", "pull", "request", "NUMBER", "NUMBER", "I", "decided", "to", "fix", "the", "problem", "for", "you", "in", "efe", "NUMBER", "f", "NUMBER", "NUMBER", "You", "gave", "again", "a", "rude", "answer", "LINK", "without", "any", "constructive", "feedback", "NUMBER", "In", "short", "you", "send", "us", "broken", "code", "I", "fix", "it", "for", "you", "and", "you", "react", "with", "abusive", "behavior", "NUMBER", "You", "be", "resistant", "to", "any", "feedback", "ignoring", "any", "good", "advice", "and", "you", "communicate", "in", "a", "way", "that", "be", "not", "acceptable", "NUMBER", "And", "you", "call", "me", "to", "not", "encourage", "collaboration", "What", "a", "joke", "NUMBER", "What", "did", "you", "expect", "That", "I", "m", "merge", "broken", "code", "and", "fail", "specs", "No", "way", "NUMBER", "It", "was", "never", "my", "intention", "to", "offend", "you", "I", "always", "tried", "to", "support", "you", "to", "get", "the", "feature", "_you_", "want", "into", "Guard", "NUMBER", "And", "instead", "of", "learning", "from", "experienced", "people", "and", "saying", "thanks", "you", "behave", "totally", "strange", "and", "offend", "me", "NUMBER", "You", "have", "a", "serious", "problem", "man", "NUMBER", "I", "suggest", "that", "you", "maintain", "your", "own", "fork", "of", "Guard", "to", "fiddle", "around", "and", "leave", "us", "alone", "NUMBER", "From", "now", "on", "I", "will", "ignore", "you", "and", "immediately", "close", "every", "issue", "and", "pull", "request", "without", "comment", "NUMBER", "This", "be", "not", "professional", "at", "all", "NUMBER", "I", "suggest", "you", "ask", "your", "contributors", "to", "behave", "in", "a", "more", "constructive", "manner", "in", "the", "future", "to", "prevent", "such", "misunderstandings", "NUMBER", "Life", "be", "too", "short", "to", "waste", "on", "such", "foolishness", "NUMBER", "I", "let", "you", "have", "the", "last", "word", "NUMBER", "For", "the", "record", "Windows", "NUMBER", "Server", "RubyInstaller", "NUMBER", "p", "NUMBER", "LINK", "Be", "nice", "it", "s", "contagious", "NUMBER", "cake", "beer", "I", "m", "confused", "by", "the", "use", "of", "the", "term", "guard", "name", "in", "the", "README", "section", "for", "creating", "a", "new", "guard", "NUMBER", "It", "s", "unclear", "whether", "you", "should", "be", "use", "the", "actual", "word", "guard", "or", "the", "name", "of", "your", "Guard", "NUMBER", "Nice", "NUMBER", "Thanks", "smile", "While", "customizing", "my", "guardfile", "it", "would", "be", "helpful", "for", "guard", "to", "output", "which", "watch", "method", "was", "use", "when", "an", "event", "be", "fired", "off", "NUMBER", "be", "there", "a", "way", "to", "do", "this", "There", "be", "no", "way", "to", "doing", "that", "yet", "but", "that", "s", "a", "good", "idea", "NUMBER", "Pull", "request", "be", "welcome", "thanks", "Since", "the", "Guardfile", "be", "plain", "Ruby", "you", "can", "write", "a", "debug", "watch", "method", "that", "outputs", "some", "debug", "info", "ruby", "def", "debug_watch", "regex", "action", "watch", "regex", "do", "match", "puts", "Watcher", "regex", "NUMBER", "inspect", "triggered", "NUMBER", "action", "NUMBER", "call", "match", "end", "end", "guard", "whatever", "do", "debug_watch", "r", "NUMBER", "NUMBER", "test", "end", "Closing", "this", "since", "it", "can", "be", "easily", "solve", "on", "a", "custom", "basis", "in", "your", "Guardfile", "NUMBER", "If", "you", "d", "like", "to", "see", "it", "in", "Guard", "feel", "free", "to", "send", "a", "pull", "request", "NUMBER", "Hey", "guys", "alandipert", "and", "I", "be", "use", "guard", "on", "a", "client", "project", "and", "need", "the", "latest", "fix", "in", "git", "HEAD", "NUMBER", "For", "reasons", "out", "of", "our", "control", "we", "can", "t", "use", "the", "git", "version", "w", "our", "deployment", "model", "NUMBER", "Any", "chance", "you", "could", "push", "a", "RC", "for", "NUMBER", "so", "we", "could", "bind", "to", "a", "recent", "gem", "Thanks", "for", "the", "work", "on", "a", "great", "tool", "NUMBER", "rob", "This", "would", "be", "a", "minor", "documentation", "update", "but", "I", "find", "that", "pause", "be", "useful", "not", "just", "when", "switching", "branch", "but", "also", "when", "doing", "any", "longer", "file", "operations", "which", "do", "not", "involve", "programming", "git", "rebase", "git", "svn", "rebase", "Whitespace", "change", "USR", "NUMBER", "USR", "NUMBER", "signals", "and", "doc", "NUMBER", "Future", "suggestion", "print", "guard", "s", "pid", "when", "be", "verbose", "enable", "to", "help", "users", "identify", "multiple", "guard", "processes", "NUMBER", "Thanks", "steakknife", "can", "you", "please", "add", "some", "specs", "Summary", "Humour", "taken", "seriously", "may", "lead", "to", "awesome", "NUMBER", "Although", "other", "pulls", "have", "test", "signal", "handler", "code", "on", "each", "other", "I", "ll", "see", "what", "s", "possible", "just", "for", "the", "sport", "of", "it", "NUMBER", "Let", "me", "know", "if", "you", "find", "specs", "or", "helpers", "for", "rspec", "rails", "etc", "NUMBER", "that", "check", "signal", "handle", "NUMBER", "You", "can", "simply", "send", "a", "signal", "in", "the", "spec", "with", "Process", "NUMBER", "kill", "LINK", "doc", "NUMBER", "org", "core", "NUMBER", "Process", "NUMBER", "html", "method", "c", "kill", "ruby", "Process", "NUMBER", "kill", "USR", "NUMBER", "Process", "NUMBER", "pid", "This", "be", "probably", "wrong", "in", "NUMBER", "different", "ways", "but", "here", "s", "a", "start", "NUMBER", "Thanks", "for", "add", "the", "specs", "however", "they", "fail", "and", "the", "signal", "handle", "was", "not", "work", "at", "all", "NUMBER", "I", "had", "to", "move", "the", "method", "call", "to", "add_signal_handlers", "outside", "of", "the", "listener", "thread", "to", "make", "it", "work", "NUMBER", "In", "addition", "I", "merge", "your", "separate", "signals_spec", "NUMBER", "rb", "into", "the", "listener_spec", "NUMBER", "rb", "to", "follow", "the", "common", "lib", "spec", "pattern", "and", "slim", "down", "the", "spec", "since", "you", "test", "a", "way", "too", "extensively", "You", "don", "t", "need", "to", "test", "for", "combination", "of", "method", "call", "sequences", "just", "each", "program", "execution", "path", "within", "the", "method", "two", "signals", "two", "conditions", "NUMBER", "The", "internal", "state", "of", "the", "listener", "be", "a", "simple", "pause", "instance", "boolean", "and", "be", "not", "a", "state", "machine", "P", "Thanks", "for", "your", "effort", "NUMBER", "I", "ve", "never", "heard", "a", "complaint", "about", "too", "much", "test", "unless", "test", "time", "slowed", "down", "production", "deployments", "NUMBER", "Often", "the", "problem", "be", "lack", "of", "test", "NUMBER", "Be", "careful", "what", "you", "wish", "for", "NUMBER", "There", "be", "also", "other", "aspects", "about", "test", "They", "have", "to", "be", "maintained", "by", "someone", "and", "they", "have", "to", "test", "the", "right", "thing", "NUMBER", "Your", "add_signal_handlers", "LINK", "L", "NUMBER", "NUMBER", "has", "four", "execution", "paths", "two", "signal", "blocks", "and", "in", "each", "an", "if", "condition", "NUMBER", "This", "should", "result", "in", "four", "contexts", "to", "be", "specified", "but", "your", "signal", "spec", "LINK", "_spec", "NUMBER", "rb", "has", "NUMBER", "different", "contexts", "NUMBER", "So", "you", "re", "test", "three", "times", "to", "much", "as", "necessary", "NUMBER", "When", "focusing", "on", "the", "important", "logic", "of", "the", "method", "I", "actually", "see", "only", "two", "contexts", "because", "the", "purpose", "of", "the", "two", "if", "be", "only", "informational", "NUMBER", "In", "short", "the", "add", "method", "do", "the", "following", "SIGUSR", "NUMBER", "pause", "and", "SIGUSR", "NUMBER", "run", "NUMBER", "As", "I", "mention", "in", "my", "previous", "comment", "you", "re", "test", "different", "sequences", "of", "possible", "method", "calls", "NUMBER", "Why", "do", "you", "want", "to", "ensure", "that", "a", "second", "USR", "NUMBER", "would", "result", "in", "something", "other", "than", "the", "first", "call", "Do", "you", "want", "to", "test", "if", "the", "if", "statement", "really", "behaves", "the", "same", "on", "subsequent", "calls", "The", "signal", "handlers", "be", "idempotent", "you", "do", "not", "have", "to", "test", "the", "Ruby", "language", "constructs", "NUMBER", "I", "really", "don", "t", "understand", "your", "reaction", "NUMBER", "It", "was", "you", "who", "said", "_", "this", "be", "probably", "wrong", "in", "NUMBER", "different", "ways", "_", "and", "when", "I", "give", "you", "a", "honest", "feedback", "you", "want", "to", "teach", "me", "in", "a", "childish", "way", "with", "your", "comment", "here", "and", "in", "NUMBER", "I", "really", "have", "no", "problem", "when", "someone", "teaches", "me", "but", "it", "should", "be", "well", "considered", "and", "constructive", "NUMBER", "I", "also", "had", "the", "choice", "of", "simply", "not", "merge", "you", "change", "because", "it", "doesn", "t", "work", "as", "advertised", "and", "the", "provide", "specs", "be", "fail", "but", "I", "decided", "to", "support", "your", "intention", "to", "add", "signal", "handlers", "even", "though", "I", "don", "t", "need", "them", "for", "my", "personal", "workflow", "NUMBER", "And", "what", "do", "I", "get", "for", "spending", "my", "time", "to", "support", "you", "A", "response", "in", "a", "disparaging", "way", "NUMBER", "So", "long", "and", "thanks", "for", "all", "the", "fish", "NUMBER", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "version", "uninitialized", "constant", "Guard", "VERSION", "NameError", "from", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "bin", "guard", "NUMBER", "in", "load", "from", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "bin", "guard", "NUMBER", "in", "TAG", "Any", "ideas", "what", "I", "m", "doing", "wrong", "I", "ve", "find", "that", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "guard", "NUMBER", "lib", "guard", "version", "NUMBER", "rb", "be", "not", "be", "required", "when", "use", "bundle", "exec", "NUMBER", "It", "be", "include", "when", "_not_", "use", "bundle", "exec", "NUMBER", "Debug", "version", "NUMBER", "rb", "stderr", "NUMBER", "puts", "Guard", "version", "include", "start", "if", "false", "stderr", "NUMBER", "puts", "Terminating", "early", "for", "debug", "purposes", "exit", "NUMBER", "end", "module", "Guard", "unless", "defined", "Guard", "VERSION", "The", "current", "gem", "version", "of", "Guard", "VERSION", "NUMBER", "stderr", "NUMBER", "puts", "Guard", "VERSION", "defined", "as", "Guard", "VERSION", "end", "end", "stderr", "NUMBER", "puts", "Guard", "version", "include", "end", "bundle", "exec", "guard", "version", "LOAD_PATH", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "yard", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "rspec", "mocks", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "rspec", "expectations", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "rspec", "core", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "pry", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "slop", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "method_source", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "guard", "rake", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "guard", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "thor", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "ffi", "NUMBER", "liba", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "ffi", "NUMBER", "ext", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "diff", "lcs", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "coderay", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "awesome_print", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "global", "gems", "rake", "NUMBER", "lib", "home", "user", "ruby", "gemset", "lib", "home", "user", "ruby", "gemset", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "global", "gems", "bundler", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "vendor_ruby", "NUMBER", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "vendor_ruby", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "vendor_ruby", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "guard", "version", "LOAD_PATH", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "thor", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "ffi", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "ffi", "NUMBER", "ext", "home", "user", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gemset", "gems", "guard", "NUMBER", "lib", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "vendor_ruby", "NUMBER", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "vendor_ruby", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "vendor_ruby", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "home", "user", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "I", "ve", "even", "tried", "change", "require", "guard", "version", "to", "puts", "require", "guard", "version", "AND", "putting", "a", "puts", "require", "guard", "version", "in", "Guard", "CLI", "version", "_with", "the", "above", "modify", "version", "NUMBER", "rb_", "which", "prints", "true", "false", "No", "output", "from", "the", "modify", "version", "NUMBER", "rb", "sadly", "NUMBER", "I", "ve", "find", "the", "culprit", "NUMBER", "guard", "rake", "has", "an", "identically", "named", "lib", "guard", "version", "NUMBER", "rb", "I", "ve", "submitted", "a", "patch", "to", "fix", "guard", "rake", "NUMBER", "LINK", "rake", "issue", "NUMBER", "NUMBER", "bundle", "exec", "guard", "works", "again", "NUMBER", "Thanks", "for", "the", "patch", "on", "guard", "rake", "Great", "work", "steakknife", "No", "problem", "NUMBER", "Glad", "to", "help", "NUMBER", "Whenever", "I", "start", "guard", "it", "informs", "me", "that", "it", "s", "watching", "the", "Guardfiles", "home", "directory", "NUMBER", "I", "don", "t", "want", "this", "behavior", "NUMBER", "I", "only", "want", "guard", "to", "watch", "the", "specific", "directories", "I", "have", "defined", "in", "my", "Guardfile", "NUMBER", "This", "be", "cause", "a", "real", "problem", "because", "its", "triggering", "my", "guard", "shell", "function", "recursively", "and", "cause", "it", "to", "crash", "NUMBER", "How", "can", "I", "disable", "this", "default", "behavior", "From", "the", "README", "When", "you", "file", "an", "issue", "please", "try", "to", "follow", "to", "these", "simple", "rules", "if", "applicable", "Make", "sure", "you", "run", "Guard", "with", "bundle", "exec", "first", "NUMBER", "Add", "verbose", "information", "to", "the", "issue", "by", "run", "Guard", "with", "the", "verbose", "option", "NUMBER", "Add", "your", "Guardfile", "and", "Gemfile", "to", "the", "issue", "NUMBER", "Make", "sure", "that", "the", "issue", "be", "reproducible", "with", "your", "description", "NUMBER", "You", "can", "either", "start", "Guard", "with", "the", "w", "option", "to", "watch", "another", "directory", "than", "the", "home", "directory", "but", "in", "general", "you", "want", "to", "filter", "the", "file", "system", "events", "with", "the", "watch", "regular", "expressions", "NUMBER", "No", "response", "for", "NUMBER", "days", "so", "closing", "this", "for", "now", "NUMBER", "I", "NUMBER", "agree", "to", "everything", "propose", "NUMBER", "This", "be", "a", "chance", "to", "have", "the", "most", "use", "Guards", "upgrade", "to", "the", "latest", "Guard", "API", "NUMBER", "We", "could", "write", "a", "migration", "guide", "and", "put", "it", "to", "the", "wiki", "and", "add", "also", "information", "how", "error", "should", "be", "handler", "with", "throw", "and", "give", "examples", "for", "most", "common", "patterns", "NUMBER", "Although", "this", "might", "be", "a", "big", "change", "to", "a", "core", "build", "block", "of", "Guard", "most", "_users_", "won", "t", "notice", "it", "if", "the", "maintainers", "of", "the", "most", "use", "Guard", "release", "new", "version", "after", "this", "change", "NUMBER", "I", "notice", "that", "the", "names", "of", "the", "new", "methods", "use", "the", "singular", "form", "in", "run_on_addition", "run_on_modification", "and", "the", "plural", "form", "in", "run_on_removals", "NUMBER", "I", "think", "that", "use", "the", "plural", "form", "in", "all", "the", "methods", "be", "better", "as", "these", "methods", "get", "call", "with", "an", "array", "of", "file", "NUMBER", "Beside", "from", "that", "small", "observation", "all", "your", "proposals", "be", "great", "NUMBER", "I", "m", "looking", "forward", "to", "use", "the", "new", "Guard", "with", "Listen", "and", "see", "how", "they", "play", "together", "in", "the", "long", "run", "Yeah", "NUMBER", "for", "the", "plural", "form", "run_on_additions", "run_on_modifications", "run_on_removals", "I", "ll", "attack", "that", "on", "the", "listen", "branch", "when", "I", "find", "some", "time", "Ok", "I", "begun", "the", "Listen", "gem", "integration", "on", "the", "listen", "branch", "LINK", "NUMBER", "It", "s", "already", "work", "but", "only", "for", "file", "modification", "I", "ll", "continue", "when", "I", "ll", "have", "some", "free", "time", "and", "not", "super", "tired", "so", "feel", "free", "to", "commit", "on", "that", "branch", "One", "point", "through", "NUMBER", "What", "do", "you", "think", "about", "add", "a", "global", "run_on_changes", "note", "the", "s", "on", "change", "method", "to", "Guard", "to", "remove", "duplication", "on", "guards", "implementation", "NUMBER", "Something", "like", "ruby", "module", "Guard", "class", "Guard", "def", "run_on_changes", "paths", "general", "behavior", "end", "def", "run_on_additions", "paths", "run_on_changes", "path", "end", "def", "run_on_modifications", "paths", "run_on_changes", "path", "end", "def", "run_on_removals", "paths", "run_on_changes", "paths", "end", "end", "end", "So", "a", "guard", "could", "overwrite", "just", "that", "method", "and", "having", "the", "same", "behavior", "across", "all", "change", "NUMBER", "Great", "no", "NUMBER", "to", "add", "run_on_changes", "NUMBER", "From", "your", "example", "it", "seems", "that", "the", "developer", "should", "manually", "call", "it", "in", "the", "code", "but", "wouldn", "t", "it", "be", "nicer", "if", "we", "call", "it", "automatically", "After", "all", "the", "code", "in", "that", "method", "should", "always", "be", "shared", "NUMBER", "If", "I", "see", "it", "correctly", "that", "would", "require", "guards", "to", "call", "super", "in", "all", "the", "three", "method", "right", "I", "was", "thinking", "that", "we", "could", "always", "call", "run_on_changes", "from", "this", "method", "LINK", "L", "NUMBER", "to", "avoid", "the", "super", "call", "NUMBER", "What", "do", "you", "think", "about", "it", "BTW", "I", "m", "work", "on", "the", "specs", "for", "the", "runner", "but", "I", "was", "wondering", "about", "the", "lock", "use", "here", "LINK", "L", "NUMBER", "what", "be", "it", "for", "I", "can", "t", "see", "any", "resource", "be", "shared", "between", "the", "interactors", "and", "the", "runner", "NUMBER", "I", "think", "the", "example", "above", "be", "not", "relevant", "since", "when", "a", "guard", "want", "to", "have", "the", "same", "behavior", "regardless", "of", "the", "change", "type", "addition", "modification", "removel", "it", "ll", "just", "have", "to", "override", "run_on_changes", "and", "not", "the", "others", "NUMBER", "The", "example", "thibaudgg", "gave", "be", "actually", "almost", "the", "default", "implementation", "if", "you", "don", "t", "override", "any", "methods", "NUMBER", "rymai", "Thanks", "for", "point", "that", "out", "NUMBER", "I", "indeed", "based", "my", "question", "on", "the", "example", "above", "which", "lead", "to", "me", "thinking", "about", "guard", "s", "implementations", "NUMBER", "thibaudgg", "I", "see", "now", "why", "the", "lock", "be", "use", "NUMBER", "It", "s", "be", "use", "more", "like", "a", "semaphore", "than", "a", "mutex", "but", "that", "s", "beside", "the", "point", "NUMBER", "Thanks", "for", "clearing", "that", "up", "NUMBER", "The", "listen", "gem", "integration", "process", "seems", "to", "approach", "its", "end", "NUMBER", "Tests", "pass", "on", "almost", "all", "support", "Ruby", "version", "for", "the", "runner", "NUMBER", "Rubinus", "has", "a", "problem", "with", "the", "eql", "operator", "of", "Rspec", "v", "NUMBER", "This", "commit", "LINK", "update", "Rspec", "for", "Guard", "and", "starting", "with", "it", "some", "of", "the", "test", "fail", "NUMBER", "The", "problem", "be", "a", "bit", "tricky", "to", "reproduce", "but", "It", "seems", "that", "Rubinus", "s", "compiler", "can", "t", "find", "RSpec", "Matchers", "BuiltIn", "Eql", "sometimes", "NUMBER", "You", "will", "see", "the", "specs", "fail", "if", "you", "be", "lucky", "the", "first", "time", "or", "you", "could", "try", "the", "following", "command", "rm", "rf", "NUMBER", "rbx", "bundle", "exec", "rspec", "NUMBER", "I", "couldn", "t", "pinpoint", "the", "source", "of", "the", "problem", "to", "be", "able", "to", "report", "it", "but", "for", "our", "specs", "we", "can", "just", "replace", "all", "eql", "calls", "with", "in", "the", "specs", "NUMBER", "thibaudgg", "netzpirat", "rymai", "be", "that", "OK", "with", "you", "NiceW", "I", "suggest", "to", "simply", "replace", "eql", "by", "eq", "Ok", "I", "ve", "push", "a", "few", "improvement", "in", "particular", "I", "ve", "move", "all", "the", "Guardfile", "template", "generation", "methods", "into", "a", "new", "Guard", "Guardfile", "class", "NUMBER", "Also", "we", "ll", "have", "to", "implement", "Guard", "Runner", "NUMBER", "deprecation_warning", "I", "just", "push", "an", "implementation", "of", "the", "deprecation_warning", "for", "the", "runner", "NUMBER", "The", "message", "could", "be", "improved", "be", "add", "a", "link", "to", "the", "wiki", "page", "of", "the", "upgrade", "instructions", "NUMBER", "rymai", "I", "already", "tried", "replacing", "eql", "with", "eq", "but", "rspec", "seems", "to", "also", "have", "a", "problem", "with", "it", "on", "rubinius", "NUMBER", "The", "only", "method", "that", "works", "for", "now", "be", "NUMBER", "Awesome", "deprecation", "notices", "Ok", "for", "the", "eql", "eq", "shit", "let", "s", "use", "instead", "then", "Or", "be", "this", "something", "that", "ll", "be", "fix", "in", "RSpec", "at", "some", "point", "Great", "NUMBER", "I", "m", "sure", "it", "won", "t", "take", "a", "lot", "of", "time", "before", "rspec", "fix", "the", "eql", "problem", "NUMBER", "So", "in", "the", "meantime", "we", "ll", "just", "use", "NUMBER", "Update", "Now", "we", "be", "green", "all", "the", "way", "LINK", "ci", "NUMBER", "org", "guard", "guard", "build", "NUMBER", "Thank", "you", "NUMBER", "About", "the", "wiki", "page", "sure", "thing", "helping", "guards", "developers", "be", "very", "important", "considering", "the", "amount", "of", "guards", "out", "there", "NUMBER", "I", "ll", "see", "what", "I", "can", "come", "up", "with", "I", "ve", "write", "a", "small", "upgrade", "guide", "LINK", "guide", "for", "exist", "guards", "to", "Guard", "v", "NUMBER", "to", "Guard", "v", "NUMBER", "It", "be", "an", "initial", "draft", "so", "feel", "free", "to", "change", "it", "as", "you", "see", "fit", "Wow", "that", "s", "great", "thank", "you", "be", "it", "just", "me", "or", "be", "Maher", "NUMBER", "Ever", "kicking", "some", "ass", "lately", "_", "b", "Thanks", "Maher", "NUMBER", "Ever", "for", "this", "great", "guide", "Glad", "you", "all", "liked", "the", "guide", "NUMBER", "I", "ll", "add", "a", "link", "to", "it", "in", "the", "deprecation", "warning", "NUMBER", "Update", "I", "ll", "wait", "until", "the", "decisions", "be", "made", "about", "the", "other", "things", "that", "should", "be", "deprecate", "NUMBER", "When", "I", "start", "guard", "all", "test", "be", "run", "but", "the", "run_all", "hooks", "don", "t", "get", "triggered", "NUMBER", "Also", "when", "I", "go", "from", "fail", "to", "pass", "guard", "do", "rerun", "all", "test", "but", "again", "the", "run_all", "hooks", "don", "t", "get", "call", "NUMBER", "The", "only", "time", "that", "the", "run_all", "hooks", "get", "executed", "be", "when", "I", "force", "a", "run", "of", "all", "test", "by", "hitting", "Enter", "in", "the", "terminal", "NUMBER", "Here", "s", "what", "I", "have", "in", "my", "NUMBER", "Guardfile", "ruby", "guard", "rspec", "version", "NUMBER", "all_after_pass", "true", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "Rails", "example", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "erb", "NUMBER", "haml", "m", "spec", "m", "NUMBER", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "controllers", "NUMBER", "_", "controller", "NUMBER", "rb", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "m", "NUMBER", "s", "m", "NUMBER", "_", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "Capybara", "request", "specs", "watch", "r", "app", "views", "NUMBER", "NUMBER", "NUMBER", "erb", "haml", "m", "spec", "request", "m", "NUMBER", "_spec", "NUMBER", "rb", "Guard", "start", "runs", "once", "right", "after", "startup", "callback", "start_begin", "coverage", "callback", "start_end", "no_coverage", "Guard", "run_all", "runs", "callback", "run_all_begin", "coverage", "callback", "run_all_end", "no_coverage", "end", "def", "coverage", "touch", "tmp", "coverage", "NUMBER", "txt", "end", "def", "no_coverage", "rm", "tmp", "coverage", "NUMBER", "txt", "end", "Here", "be", "the", "results", "NUMBER", "bash", "bundle", "exec", "guard", "verbose", "Guard", "could", "not", "detect", "any", "of", "the", "support", "notification", "libraries", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "mmaglana", "src", "mign", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "touch", "tmp", "coverage", "NUMBER", "txt", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Running", "all", "specs", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "rspec", "help", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "exec", "rspec", "f", "progress", "r", "Users", "mmaglana", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "mign", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatters", "notification_rspec", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "example", "NUMBER", "failures", "Coverage", "report", "generate", "for", "RSpec", "to", "Users", "mmaglana", "src", "mign", "coverage", "NUMBER", "NUMBER", "NUMBER", "LOC", "NUMBER", "covered", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "rm", "tmp", "coverage", "NUMBER", "txt", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Guard", "RSpec", "run_on_change", "with", "spec", "request", "items_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "run_on_change_begin", "executed", "for", "Guard", "RSpec", "Running", "spec", "request", "items_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "exec", "rspec", "f", "progress", "r", "Users", "mmaglana", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "mign", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatters", "notification_rspec", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "request", "items_spec", "NUMBER", "rb", "F", "Failures", "NUMBER", "Items", "Items", "index", "Failure", "Error", "page", "NUMBER", "should", "have_content", "item", "NUMBER", "subject", "NoMethodError", "undefined", "method", "subject", "for", "nil", "NilClass", "NUMBER", "spec", "request", "items_spec", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "TAG", "Finished", "in", "NUMBER", "seconds", "NUMBER", "example", "NUMBER", "failure", "Failed", "examples", "rspec", "NUMBER", "spec", "request", "items_spec", "NUMBER", "rb", "NUMBER", "Items", "Items", "index", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Guard", "RSpec", "run_on_change", "with", "spec", "request", "items_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "run_on_change_begin", "executed", "for", "Guard", "RSpec", "Running", "spec", "request", "items_spec", "NUMBER", "rb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "exec", "rspec", "f", "progress", "r", "Users", "mmaglana", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "mign", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatters", "notification_rspec", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "request", "items_spec", "NUMBER", "rb", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "example", "NUMBER", "failures", "Running", "all", "specs", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "exec", "rspec", "f", "progress", "r", "Users", "mmaglana", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "mign", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatters", "notification_rspec", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "example", "NUMBER", "failures", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "run_on_change_end", "executed", "for", "Guard", "RSpec", "Sorry", "about", "that", "NUMBER", "Thanks", "guard", "NUMBER", "guard", "shell", "NUMBER", "ruby", "Guardfile", "guard", "shell", "do", "watch", "NUMBER", "do", "p", "self", "end", "end", "guard", "Guard", "could", "not", "detect", "any", "of", "the", "support", "notification", "libraries", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "krainboltgreene", "Repository", "ruby", "gems", "behaviorr", "TAG", "C", "Any", "ideas", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "Bundler", "version", "NUMBER", "rc", "NUMBER", "Darwin", "mini", "NUMBER", "local", "NUMBER", "Darwin", "Kernel", "Version", "NUMBER", "Tue", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PDT", "NUMBER", "root", "xnu", "NUMBER", "NUMBER", "RELEASE_I", "NUMBER", "i", "NUMBER", "Yes", "I", "have", "dropbox", "install", "NUMBER", "Would", "that", "hijack", "the", "fs", "events", "Yep", "it", "was", "freaking", "Dropbox", "NUMBER", "Amazingly", "it", "also", "solve", "my", "Sublime", "Text", "NUMBER", "problem", "NUMBER", "Downloaded", "Dropbox", "install", "waited", "for", "it", "to", "finish", "initializing", "restarted", "everything", "worked", "like", "a", "charm", "NUMBER", "Currently", "JRuby", "build", "be", "disabled", "on", "Travis", "CI", "because", "they", "always", "fail", "because", "of", "an", "environment", "issue", "LINK", "ci", "NUMBER", "org", "guard", "guard", "jobs", "NUMBER", "NUMBER", "This", "need", "further", "investigation", "and", "may", "be", "fix", "on", "the", "Travis", "side", "NUMBER", "When", "use", "RVM", "and", "run", "Guard", "I", "frequently", "see", "this", "sh", "WARNING", "You", "be", "use", "Guard", "outside", "of", "Bundler", "this", "be", "dangerous", "and", "could", "not", "work", "NUMBER", "Using", "bundle", "exec", "guard", "be", "safer", "NUMBER", "I", "don", "t", "think", "this", "be", "necessary", "when", "use", "RVM", "correctly", "NUMBER", "Ideally", "it", "would", "check", "for", "a", "gemset", "instead", "of", "the", "ruby", "version", "but", "I", "don", "t", "see", "a", "way", "to", "detect", "that", "NUMBER", "The", "reason", "for", "this", "warning", "be", "to", "reduce", "the", "constant", "flow", "of", "issue", "from", "novice", "users", "that", "do", "not", "understand", "their", "environment", "and", "I", "really", "like", "to", "keep", "it", "because", "it", "s", "a", "huge", "time", "saver", "for", "the", "Guard", "maintainers", "NUMBER", "What", "we", "really", "need", "be", "some", "kind", "of", "configuration", "like", "a", "NUMBER", "guardrc", "file", "that", "let", "advance", "user", "customize", "Guard", "for", "their", "need", "NUMBER", "This", "would", "enable", "us", "to", "set", "a", "no", "bundler", "warning", "flag", "NUMBER", "FWIW", "I", "d", "appreciate", "a", "no", "bundler", "warning", "NUMBER", "Not", "everyone", "who", "would", "want", "this", "warning", "disabled", "uses", "RVM", "NUMBER", "Maybe", "I", "m", "atypical", "but", "when", "developing", "gems", "I", "only", "use", "a", "Gemfile", "to", "install", "development", "dependencies", "NUMBER", "Typically", "the", "Gemfile", "only", "include", "sources", "and", "gemspecs", "NUMBER", "I", "do", "not", "depend", "on", "Bundler", "to", "manage", "the", "LOAD_PATH", "so", "it", "s", "not", "particularly", "useful", "beyond", "dependency", "installation", "NUMBER", "In", "the", "end", "it", "s", "just", "a", "stupid", "warning", "and", "it", "doesn", "t", "force", "anyone", "to", "use", "bundler", "at", "all", "so", "you", "can", "just", "ignore", "it", "NUMBER", "Don", "t", "forget", "that", "Guard", "has", "a", "wide", "user", "base", "and", "many", "of", "them", "aren", "t", "even", "Ruby", "developers", "they", "use", "Guard", "for", "frontend", "stuff", "guard", "haml", "guard", "sass", "guard", "compass", "guard", "less", "guard", "livereload", "or", "system", "administration", "guard", "chef", "guard", "puppet", "guard", "rsync", "guard", "s", "NUMBER", "just", "to", "name", "a", "few", "NUMBER", "This", "warning", "be", "meant", "for", "people", "who", "do", "not", "even", "know", "what", "LOAD_PATH", "be", "and", "below", "the", "line", "this", "save", "us", "many", "many", "hours", "of", "answering", "support", "question", "NUMBER", "We", "like", "to", "make", "Guard", "as", "flexible", "as", "possible", "so", "we", "definitely", "would", "merge", "a", "pull", "request", "that", "introduces", "a", "no", "bundler", "warning", "flag", "if", "someone", "want", "to", "see", "this", "in", "Guard", "but", "we", "must", "always", "keep", "the", "non", "technical", "users", "in", "mind", "NUMBER", "The", "options", "nil", "parameter", "suggests", "that", "the", "options", "hash", "be", "_optional_", "but", "Guard", "fail", "without", "it", "notify", "src", "tork", "irb", "r", "guard", "listener", "NUMBER", "NUMBER", "AM", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "linux", "Guard", "Listener", "NUMBER", "select_and_init", "NoMethodError", "undefined", "method", "inject", "for", "nil", "NilClass", "from", "home", "sunny", "app", "rubygems", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "initialize", "from", "home", "sunny", "app", "rubygems", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "linux", "NUMBER", "rb", "NUMBER", "in", "initialize", "from", "home", "sunny", "app", "rubygems", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "new", "from", "home", "sunny", "app", "rubygems", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "select_and_init", "from", "irb", "NUMBER", "from", "usr", "bin", "irb", "NUMBER", "in", "TAG", "This", "problem", "has", "existed", "since", "Guard", "v", "NUMBER", "I", "have", "update", "the", "wiki", "LINK", "Cookbook", "accordingly", "NUMBER", "gift", "If", "you", "re", "interested", "in", "the", "FS", "listener", "have", "a", "look", "at", "the", "upcoming", "Listener", "LINK", "NUMBER", "Any", "feedback", "be", "appreciated", "NUMBER", "netzpirat", "The", "API", "looks", "good", "NUMBER", "My", "first", "reaction", "was", "to", "reject", "the", "ignore", "and", "filter", "option", "pass", "into", "Listen", "NUMBER", "to", "I", "say", "just", "give", "the", "user", "the", "raw", "events", "as", "they", "come", "and", "let", "them", "do", "their", "own", "processing", "NUMBER", "But", "later", "when", "I", "saw", "the", "ARel", "style", "chainable", "query", "creation", "the", "ignore", "and", "filter", "modifiers", "seem", "more", "reasonable", "NUMBER", "Definitely", "looking", "forward", "to", "this", "be", "release", "but", "first", "perhaps", "a", "more", "memorable", "non", "generic", "project", "name", "would", "be", "in", "order", "How", "about", "filling", "for", "fil", "e", "system", "li", "steni", "ng", "Ooh", "nice", "I", "m", "going", "to", "use", "it", "instead", "of", "Guard", "Listener", "NUMBER", "Hello", "Guard", "core", "devs", "Today", "I", "have", "spent", "some", "time", "implement", "a", "feature", "request", "LINK", "I", "find", "on", "your", "issue", "tracker", "NUMBER", "As", "a", "consequence", "of", "the", "new", "features", "Guard", "has", "change", "a", "bit", "The", "init", "task", "defaults", "now", "to", "searching", "for", "install", "guards", "and", "add", "them", "to", "the", "new", "Guardfile", "NUMBER", "The", "old", "functionality", "has", "be", "moved", "to", "the", "new", "bare", "or", "b", "option", "for", "the", "init", "task", "NUMBER", "This", "will", "just", "generate", "a", "Guard", "file", "with", "the", "default", "Guard", "template", "NUMBER", "Multiple", "invokes", "of", "the", "init", "task", "with", "the", "bare", "option", "will", "display", "an", "error", "and", "abort", "the", "Guard", "process", "if", "a", "Guardfile", "already", "exists", "just", "like", "it", "use", "to", "do", "NUMBER", "This", "be", "not", "the", "case", "when", "invoking", "the", "init", "task", "with", "or", "w", "o", "a", "guard", "name", "These", "will", "result", "in", "add", "the", "same", "template", "to", "the", "Guardfile", "NUMBER", "The", "new", "features", "has", "be", "documented", "test", "and", "add", "to", "the", "README", "file", "NUMBER", "I", "also", "made", "sure", "that", "all", "test", "pass", "on", "travis", "ci", "LINK", "ci", "NUMBER", "org", "Maher", "NUMBER", "Ever", "guard", "to", "make", "merge", "this", "feature", "easier", "NUMBER", "Cheers", "Woot", "thanks", "a", "lot", "You", "be", "all", "more", "than", "welcome", "keep", "up", "the", "good", "work", "When", "use", "GNTP", "and", "the", "Growl", "NUMBER", "icons", "be", "no", "longer", "display", "on", "OSX", "NUMBER", "Instead", "Growl", "logs", "the", "following", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "Growl", "Not", "downloading", "icon", "for", "notification", "success", "of", "application", "Guard", "It", "appears", "to", "be", "relate", "to", "GNTP", "and", "the", "Growl", "NUMBER", "images", "still", "work", "use", "growl", "growl", "notify", "and", "previous", "version", "of", "Growl", "don", "t", "exhibit", "this", "behavior", "NUMBER", "I", "be", "pretty", "sure", "this", "be", "a", "bug", "with", "Growl", "but", "until", "it", "be", "fix", "it", "should", "be", "noted", "somewhere", "NUMBER", "Thanks", "for", "report", "NUMBER", "I", "ve", "asked", "the", "Growl", "guys", "and", "I", "m", "waiting", "for", "a", "response", "NUMBER", "I", "ll", "update", "the", "status", "here", "when", "I", "have", "new", "information", "about", "it", "NUMBER", "GrowlMac", "confirmed", "that", "they", "know", "the", "issue", "LINK", "NUMBER", "and", "it", "ll", "be", "fix", "with", "Growl", "NUMBER", "It", "actually", "works", "on", "Growl", "NUMBER", "so", "I", "d", "suggest", "not", "upgrading", "until", "NUMBER", "be", "release", "NUMBER", "Any", "way", "to", "revert", "Growl", "to", "NUMBER", "Hate", "this", "new", "icon", "lol", "If", "you", "re", "lucky", "enough", "to", "have", "not", "install", "it", "on", "your", "other", "computer", "you", "can", "just", "copy", "the", "old", "file", "across", "NUMBER", "If", "not", "Time", "Machine", "NUMBER", "Update", "Anyhow", "it", "should", "be", "fix", "in", "NUMBER", "If", "not", "in", "NUMBER", "then", "NUMBER", "The", "reason", "for", "the", "change", "be", "that", "this", "specific", "item", "was", "cause", "NUMBER", "CPU", "for", "a", "lot", "of", "people", "NUMBER", "The", "tradeoff", "was", "worth", "it", "in", "our", "opinion", "so", "that", "people", "wouldn", "t", "run", "into", "that", "NUMBER", "Respectfully", "I", "don", "t", "agree", "NUMBER", "The", "primary", "reason", "I", "use", "Growl", "be", "so", "that", "I", "see", "a", "big", "green", "light", "when", "my", "test", "pass", "and", "a", "big", "red", "light", "when", "my", "test", "fail", "NUMBER", "And", "my", "brain", "be", "trained", "to", "look", "for", "the", "colors", "NUMBER", "I", "honestly", "felt", "confused", "until", "I", "dug", "out", "my", "laptop", "and", "grabbed", "the", "older", "binary", "off", "it", "NUMBER", "it", "s", "only", "URL", "icons", "that", "have", "this", "problem", "NUMBER", "you", "may", "still", "send", "notifications", "to", "growl", "use", "file", "and", "this", "be", "support", "by", "the", "ruby_gntp", "library", "as", "far", "as", "i", "can", "tell", "NUMBER", "it", "s", "surprisingly", "useful", "despite", "be", "untouched", "in", "two", "years", "as", "in", "GNTP", "in", "growl", "for", "mac", "came", "_after_", "development", "on", "ruby_gntp", "halted", "NUMBER", "also", "NUMBER", "be", "currently", "in", "its", "second", "beta", "so", "you", "hopefully", "won", "t", "have", "long", "to", "wait", "for", "it", "NUMBER", "EDIT", "NUMBER", "b", "NUMBER", "doesn", "t", "fix", "this", "issue", "so", "it", "will", "likely", "not", "be", "fix", "in", "NUMBER", "Ya", "NUMBER", "doesn", "t", "fix", "this", "NUMBER", "NUMBER", "will", "NUMBER", "NUMBER", "has", "it", "but", "if", "you", "have", "it", "and", "you", "hit", "NUMBER", "CPU", "that", "s", "not", "cool", "at", "all", "NUMBER", "I", "ve", "just", "install", "Growl", "NUMBER", "from", "the", "Mac", "app", "store", "and", "can", "confirm", "that", "this", "issue", "be", "still", "present", "NUMBER", "Rather", "frustrating", "to", "have", "a", "regression", "persisting", "for", "so", "long", "NUMBER", "Yeah", "too", "bad", "NUMBER", "looking", "forward", "to", "use", "the", "new", "Notification", "Center", "of", "OS", "X", "Mountain", "Lion", "I", "think", "at", "this", "point", "I", "think", "it", "be", "safe", "to", "look", "at", "closing", "this", "as", "the", "NUMBER", "release", "support", "TerminalNotifier", "which", "be", "a", "much", "better", "solution", "than", "Growl", "at", "this", "point", "NUMBER", "Great", "to", "hear", "that", "TerminalNotifier", "works", "great", "and", "replaces", "Growl", "for", "you", "but", "it", "isn", "t", "a", "replacement", "for", "Growl", "by", "no", "means", "NUMBER", "Growl", "works", "cross", "plattform", "and", "even", "cross", "machine", "so", "it", "s", "for", "example", "a", "great", "way", "to", "have", "notifications", "from", "your", "Vagrant", "box", "shown", "on", "the", "Vagrant", "host", "NUMBER", "Also", "customizing", "the", "notifications", "be", "a", "great", "feature", "of", "Growl", "I", "for", "example", "like", "to", "have", "the", "Music", "Video", "display", "style", "for", "Guard", "so", "that", "notifications", "be", "obtrusive", "and", "can", "t", "be", "miss", "NUMBER", "We", "ll", "keep", "the", "Growl", "notifier", "in", "the", "future", "and", "continue", "to", "maintain", "it", "so", "I", "prefer", "to", "keep", "this", "issue", "open", "as", "reminder", "for", "people", "use", "Growl", "and", "come", "to", "Guard", "issue", "because", "of", "the", "miss", "icons", "NUMBER", "Makes", "sense", "NUMBER", "At", "this", "point", "though", "I", "be", "starting", "to", "doubt", "this", "will", "ever", "be", "resolve", "in", "Growl", "for", "OS", "X", "NUMBER", "The", "issue", "has", "be", "open", "for", "NUMBER", "months", "now", "and", "I", "be", "fairly", "confident", "that", "the", "upcoming", "Growl", "NUMBER", "release", "doesn", "t", "resolve", "this", "issue", "NUMBER", "Even", "with", "the", "fix", "for", "NUMBER", "It", "would", "be", "great", "if", "this", "was", "to", "get", "fix", "but", "I", "ve", "given", "up", "hope", "on", "it", "NUMBER", "This", "issue", "only", "affects", "users", "that", "use", "cross", "machine", "notifications", "through", "the", "network", "protocol", "GNTP", "NUMBER", "For", "local", "notifications", "the", "growl", "gem", "works", "just", "fine", "and", "I", "guess", "this", "be", "the", "majority", "of", "the", "users", "NUMBER", "So", "you", "don", "t", "believe", "in", "distributed", "test", "run", "Seems", "like", "everybody", "wants", "this", "issue", "close", "because", "they", "re", "convinced", "that", "the", "way", "they", "use", "Guard", "be", "the", "way", "everyone", "else", "uses", "it", "too", "NUMBER", "On", "Aug", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Michael", "Kessler", "notifications", "github", "NUMBER", "com", "write", "This", "issue", "only", "affects", "users", "that", "use", "cross", "machine", "notifications", "through", "the", "network", "protocol", "GNTP", "NUMBER", "For", "local", "notifications", "the", "growl", "gem", "works", "just", "fine", "and", "I", "guess", "this", "be", "the", "majority", "of", "the", "users", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "Sure", "I", "see", "big", "advantages", "in", "distributed", "test", "run", "and", "also", "of", "Growl", "over", "the", "Mac", "Notification", "Center", "NUMBER", "This", "be", "why", "I", "don", "t", "want", "this", "issue", "to", "be", "close", "NUMBER", "But", "I", "also", "believe", "a", "minority", "of", "the", "Guard", "users", "have", "such", "a", "setup", "and", "a", "real", "need", "for", "GNTP", "I", "mean", "the", "rails", "dev", "box", "was", "release", "NUMBER", "hours", "ago", "NUMBER", "There", "be", "a", "lot", "of", "Guard", "users", "that", "comes", "from", "design", "frontend", "development", "system", "administration", "and", "also", "from", "other", "languages", "than", "Ruby", "with", "a", "simple", "setup", "and", "for", "them", "the", "growl", "gem", "just", "works", "fine", "NUMBER", "Guardfile", "ruby", "guard", "rspec", "version", "NUMBER", "cli", "color", "format", "nested", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "end", "Gemfile", "ruby", "group", "development", "do", "gem", "guard", "gem", "libnotify", "gem", "guard", "rspec", "gem", "rb", "readline", "end", "Environment", "Linux", "NUMBER", "NUMBER", "amd", "NUMBER", "ruby", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "patchlevel", "NUMBER", "Error", "When", "I", "run", "guard", "start", "I", "see", "libnotify", "message", "with", "report", "and", "then", "guard", "crashes", "with", "next", "error", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "watcher", "NUMBER", "rb", "NUMBER", "in", "initialize", "No", "space", "left", "on", "device", "Failed", "to", "watch", "home", "blake", "dev", "my", "project_child", "NUMBER", "git", "objects", "NUMBER", "The", "user", "limit", "on", "the", "total", "number", "of", "inotify", "watches", "was", "reached", "or", "the", "kernel", "fail", "to", "allocate", "a", "needed", "resource", "NUMBER", "Errno", "ENOSPC", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "new", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "linux", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "linux", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "send", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "bin", "guard", "NUMBER", "in", "load", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "bin", "guard", "NUMBER", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "watcher", "NUMBER", "rb", "NUMBER", "in", "initialize", "No", "space", "left", "on", "device", "Failed", "to", "watch", "home", "blake", "dev", "my", "project_child", "NUMBER", "git", "objects", "NUMBER", "The", "user", "limit", "on", "the", "total", "number", "of", "inotify", "watches", "was", "reached", "or", "the", "kernel", "fail", "to", "allocate", "a", "needed", "resource", "NUMBER", "Errno", "ENOSPC", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "new", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "linux", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "linux", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "send", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "bin", "guard", "NUMBER", "in", "load", "from", "home", "blake", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "project", "bin", "guard", "NUMBER", "Does", "it", "try", "to", "watch", "git", "file", "Do", "I", "miss", "something", "I", "ve", "tried", "to", "use", "ignore_paths", "NUMBER", "git", "it", "had", "no", "effect", "NUMBER", "I", "ve", "get", "only", "NUMBER", "file", "in", "the", "project", "find", "NUMBER", "grep", "v", "NUMBER", "git", "wc", "l", "NUMBER", "Just", "FYI", "NUMBER", "git", "be", "already", "ignored", "by", "default", "LINK", "L", "NUMBER", "Nope", "NUMBER", "Gonna", "try", "to", "run", "it", "on", "another", "machine", "NUMBER", "Hm", "NUMBER", "At", "my", "work", "on", "another", "PC", "same", "project", "runs", "well", "with", "guard", "NUMBER", "On", "both", "PCs", "I", "use", "Debian", "Squeeze", "NUMBER", "I", "be", "having", "a", "similar", "problem", "with", "a", "large", "directory", "that", "I", "have", "ignored", "use", "ignore_paths", "NUMBER", "It", "insists", "on", "complaining", "that", "it", "has", "Failed", "to", "Watch", "some", "file", "in", "the", "ignored", "directory", "NUMBER", "There", "doesn", "t", "seem", "to", "be", "any", "way", "to", "selectively", "ignore", "paths", "in", "the", "underlying", "inotify", "interface", "NUMBER", "I", "took", "the", "monster", "directory", "out", "of", "the", "project", "tree", "for", "now", "NUMBER", "Thanks", "for", "trying", "NUMBER", "I", "remove", "NUMBER", "git", "directory", "and", "it", "works", "for", "me", "too", "NUMBER", "But", "there", "might", "be", "something", "better", "Try", "increasing", "the", "max_user_watches", "for", "inotify", "NUMBER", "It", "be", "default", "set", "to", "NUMBER", "I", "bump", "it", "to", "NUMBER", "k", "and", "things", "be", "ok", "NUMBER", "cat", "proc", "sys", "fs", "inotify", "max_user_watches", "echo", "NUMBER", "sudo", "tee", "proc", "sys", "fs", "inotify", "max_user_watches", "To", "increase", "max_user_watches", "at", "boot", "edit", "etc", "sysctl", "NUMBER", "conf", "and", "add", "fs", "NUMBER", "inotify", "NUMBER", "max_user_watches", "NUMBER", "or", "fix", "fs", "NUMBER", "inotify", "NUMBER", "max_user_watches", "to", "NUMBER", "Don", "t", "thank", "me", "thank", "this", "guy", "LINK", "limitation", "thibaudgg", "I", "think", "it", "s", "indeed", "a", "good", "idea", "to", "catch", "this", "exception", "and", "show", "a", "link", "to", "a", "wiki", "page", "or", "something", "on", "the", "Listen", "repo", "to", "help", "users", "NUMBER", "Shall", "we", "add", "the", "first", "wiki", "page", "to", "Listen", "Do", "it", "but", "be", "sure", "to", "credit", "github", "NUMBER", "com", "sorah", "and", "not", "me", "NUMBER", "jhirn", "good", "find", "thibaudgg", "thanks", "for", "the", "support", "NUMBER", "Hi", "there", "I", "followed", "Ryan", "Bates", "rails", "cast", "and", "when", "I", "start", "bundle", "exec", "guard", "I", "have", "this", "message", "Guard", "could", "not", "detect", "any", "of", "the", "support", "notification", "libraries", "NUMBER", "Guard", "be", "now", "watching", "at", "name_of_my_app_folder", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "LiveReload", "NUMBER", "be", "waiting", "for", "a", "browser", "to", "connect", "NUMBER", "Running", "all", "specs", "No", "examples", "find", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "And", "any", "change", "I", "make", "don", "t", "get", "trapped", "by", "guard", "NUMBER", "Any", "idea", "why", "Thx", "Bonjour", "Thibaud", "Les", "voila", "Merci", "beaucoup", "et", "desole", "pour", "le", "derangement", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Can", "you", "give", "your", "Guardfile", "Gemfile", "please", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Voila", "les", "NUMBER", "liens", "GemFile", "LINK", "GuardFile", "LINK", "Merci", "Philipe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Salut", "Philippe", "je", "pense", "que", "les", "pi\u00e8ces", "jointes", "par", "mail", "ne", "marchent", "pas", "sous", "Github", "tu", "pourrais", "faire", "un", "gist", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Pour", "le", "No", "example", "effectivement", "ca", "s", "et", "regle", "des", "que", "j", "ai", "mis", "une", "spec", "par", "contre", "en", "enlevant", "la", "ligne", "fsevent", "ou", "en", "la", "remplacant", "ca", "ne", "change", "rien", "NUMBER", "Est", "ce", "que", "LIvereload", "pourrait", "etre", "le", "probleme", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Le", "No", "examples", "find", "NUMBER", "vient", "du", "faite", "que", "tu", "ne", "dois", "pas", "avoir", "de", "specs", "juste", "Sinon", "pour", "la", "d\u00e9tection", "des", "modifications", "essaye", "d", "effacer", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "ou", "de", "le", "remplacer", "par", "gem", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Oui", "j", "utilise", "Dropbox", "comment", "tu", "le", "sais", "Je", "vais", "essayer", "ca", "NUMBER", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Non", "je", "pense", "pas", "NUMBER", "T", "utilises", "DropBox", "Essaye", "voir", "de", "renommer", "deplacer", "le", "dossier", "de", "l", "application", "et", "peut", "\u00eatre", "un", "restart", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Pour", "le", "No", "example", "effectivement", "ca", "s", "et", "regle", "des", "que", "j", "ai", "mis", "une", "spec", "par", "contre", "en", "enlevant", "la", "ligne", "fsevent", "ou", "en", "la", "remplacant", "ca", "ne", "change", "rien", "NUMBER", "Est", "ce", "que", "LIvereload", "pourrait", "etre", "le", "probleme", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Le", "No", "examples", "find", "NUMBER", "vient", "du", "faite", "que", "tu", "ne", "dois", "pas", "avoir", "de", "specs", "juste", "Sinon", "pour", "la", "d\u00e9tection", "des", "modifications", "essaye", "d", "effacer", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "ou", "de", "le", "remplacer", "par", "gem", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Salut", "Thibaud", "J", "ai", "sorti", "le", "dossier", "de", "la", "DropBox", "et", "maintenant", "ca", "marche", "Penses", "tu", "que", "ce", "conflit", "avec", "DropBox", "va", "pouvoir", "etre", "corrige", "un", "jour", "Est", "ce", "un", "probleme", "avec", "fbsevent", "ou", "guard", "C", "est", "tres", "pratique", "d", "avoir", "les", "applications", "dans", "DropBox", "pour", "plein", "de", "raisons", "possibilite", "de", "partage", "entre", "differents", "ordis", "os", "etc", "NUMBER", "Merci", "beaucoup", "Philippe", "NUMBER", "NUMBER", "NUMBER", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "D\u00e8s", "fois", "il", "y", "a", "des", "conflits", "avec", "Dropbox", "c", "est", "pour", "\u00e7a", "NUMBER", "Si", "ton", "app", "est", "dans", "le", "dossier", "de", "Dropbox", "tu", "peux", "aussi", "essayer", "de", "la", "mettre", "en", "dehors", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Oui", "j", "utilise", "Dropbox", "comment", "tu", "le", "sais", "Je", "vais", "essayer", "ca", "NUMBER", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Non", "je", "pense", "pas", "NUMBER", "T", "utilises", "DropBox", "Essaye", "voir", "de", "renommer", "deplacer", "le", "dossier", "de", "l", "application", "et", "peut", "\u00eatre", "un", "restart", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Pour", "le", "No", "example", "effectivement", "ca", "s", "et", "regle", "des", "que", "j", "ai", "mis", "une", "spec", "par", "contre", "en", "enlevant", "la", "ligne", "fsevent", "ou", "en", "la", "remplacant", "ca", "ne", "change", "rien", "NUMBER", "Est", "ce", "que", "LIvereload", "pourrait", "etre", "le", "probleme", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Le", "No", "examples", "find", "NUMBER", "vient", "du", "faite", "que", "tu", "ne", "dois", "pas", "avoir", "de", "specs", "juste", "Sinon", "pour", "la", "d\u00e9tection", "des", "modifications", "essaye", "d", "effacer", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "ou", "de", "le", "remplacer", "par", "gem", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "J", "ai", "update", "le", "client", "dropbox", "mais", "ca", "a", "pas", "regle", "le", "probleme", "NUMBER", "Je", "vois", "sur", "des", "forums", "que", "pas", "mal", "de", "gens", "ont", "le", "mm", "soucis", "NUMBER", "Je", "vais", "deplacer", "mes", "apps", "en", "attendant", "que", "ca", "soit", "fixe", "Merci", "encore", "en", "tout", "cas", "pour", "Guard", "et", "pour", "tes", "reponses", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "C", "est", "une", "issue", "avec", "rb", "fsevent", "essaye", "de", "mettre", "\u00e0", "jour", "ton", "client", "DropBox", "d\u00e8s", "fois", "cela", "fixe", "le", "probl\u00e8me", "LINK", "Je", "t", "en", "prie", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Salut", "Thibaud", "J", "ai", "sorti", "le", "dossier", "de", "la", "DropBox", "et", "maintenant", "ca", "marche", "Penses", "tu", "que", "ce", "conflit", "avec", "DropBox", "va", "pouvoir", "etre", "corrige", "un", "jour", "Est", "ce", "un", "probleme", "avec", "fbsevent", "ou", "guard", "C", "est", "tres", "pratique", "d", "avoir", "les", "applications", "dans", "DropBox", "pour", "plein", "de", "raisons", "possibilite", "de", "partage", "entre", "differents", "ordis", "os", "etc", "NUMBER", "Merci", "beaucoup", "Philippe", "NUMBER", "NUMBER", "NUMBER", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "D\u00e8s", "fois", "il", "y", "a", "des", "conflits", "avec", "Dropbox", "c", "est", "pour", "\u00e7a", "NUMBER", "Si", "ton", "app", "est", "dans", "le", "dossier", "de", "Dropbox", "tu", "peux", "aussi", "essayer", "de", "la", "mettre", "en", "dehors", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Oui", "j", "utilise", "Dropbox", "comment", "tu", "le", "sais", "Je", "vais", "essayer", "ca", "NUMBER", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Non", "je", "pense", "pas", "NUMBER", "T", "utilises", "DropBox", "Essaye", "voir", "de", "renommer", "deplacer", "le", "dossier", "de", "l", "application", "et", "peut", "\u00eatre", "un", "restart", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "madeinpanto", "write", "Pour", "le", "No", "example", "effectivement", "ca", "s", "et", "regle", "des", "que", "j", "ai", "mis", "une", "spec", "par", "contre", "en", "enlevant", "la", "ligne", "fsevent", "ou", "en", "la", "remplacant", "ca", "ne", "change", "rien", "NUMBER", "Est", "ce", "que", "LIvereload", "pourrait", "etre", "le", "probleme", "Merci", "Philippe", "On", "Sat", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Le", "No", "examples", "find", "NUMBER", "vient", "du", "faite", "que", "tu", "ne", "dois", "pas", "avoir", "de", "specs", "juste", "Sinon", "pour", "la", "d\u00e9tection", "des", "modifications", "essaye", "d", "effacer", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "ou", "de", "le", "remplacer", "par", "gem", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "When", "starting", "a", "new", "project", "I", "ll", "often", "have", "several", "guards", "in", "my", "Gemfile", "and", "it", "sucks", "having", "to", "run", "guard", "init", "for", "each", "one", "NUMBER", "It", "would", "be", "useful", "if", "I", "could", "instead", "initialize", "them", "all", "at", "once", "NUMBER", "I", "suggest", "that", "if", "guard", "init", "be", "not", "pass", "any", "parameters", "then", "If", "no", "guard", "gems", "be", "present", "in", "Gemfile", "generate", "an", "empty", "Guardfile", "If", "guard", "gems", "be", "present", "initialize", "each", "one", "Heya", "I", "spent", "a", "few", "hours", "on", "this", "but", "my", "code", "be", "not", "up", "to", "scratch", "NUMBER", "Essentially", "Guard", "NUMBER", "initialize_template", "will", "need", "to", "use", "Guard", "DslDescriber", "NUMBER", "evaluate_guardfile", "in", "order", "to", "get", "a", "list", "of", "already", "initialised", "gems", "and", "Guard", "NUMBER", "guard_gem_names", "to", "get", "a", "list", "of", "already", "install", "gems", "but", "I", "m", "not", "sure", "how", "to", "go", "about", "manipulating", "the", "output", "of", "these", "methods", "in", "the", "specs", "so", "can", "t", "produce", "anything", "that", "will", "pass", "NUMBER", "Sorry", "my", "test", "skills", "be", "really", "poor", "My", "Guardfile", "LINK", "My", "spec_helper", "LINK", "TAG", "When", "I", "initialize", "guard", "Running", "test", "with", "args", "color", "format", "progress", "format", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "require", "home", "rege", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatters", "notification_rspec", "NUMBER", "rb", "spec", "NUMBER", "How", "to", "diagnose", "where", "be", "the", "problem", "LINK", "libnotify", "stoped", "showing", "rspec", "notifications", "That", "would", "save", "us", "hours", "in", "NUMBER", "Perhaps", "we", "can", "also", "use", "Bundler", "NUMBER", "setup", "if", "not", "run", "with", "Bundler", "NUMBER", "Good", "idea", "but", "not", "sure", "rubygems", "bundler", "be", "a", "problem", "in", "the", "end", "the", "ENV", "BUNDLE_BIN_PATH", "or", "ENV", "BUNDLE_GEMFILE", "be", "set", "if", "Guard", "be", "run", "by", "bundler", "so", "we", "can", "safely", "rely", "on", "the", "presence", "of", "these", "variables", "or", "not", "Just", "did", "a", "quick", "test", "with", "ENV", "BUNDLE_GEMFILE", "and", "it", "works", "fine", "NUMBER", "Do", "we", "wanna", "show", "this", "as", "an", "error", "or", "info", "message", "or", "should", "we", "add", "a", "new", "message", "type", "UI", "warning", "Also", "do", "we", "check", "for", "bundler", "presence", "for", "all", "actions", "or", "only", "when", "actually", "start", "Guard", "Hi", "I", "m", "use", "Isolate", "instead", "of", "Bundler", "and", "still", "see", "this", "warning", "NUMBER", "So", "as", "I", "see", "it", "doesn", "t", "check", "if", "you", "use", "Bundler", "at", "all", "Good", "will", "be", "waiting", "for", "a", "release", "NUMBER", "Yep", "it", "works", "thanks", "Right", "now", "Guard", "be", "currently", "at", "version", "NUMBER", "NUMBER", "I", "assume", "based", "on", "the", "notation", "that", "Guard", "be", "use", "Semantic", "Versioning", "LINK", "which", "be", "great", "With", "that", "said", "I", "d", "like", "to", "point", "out", "a", "few", "things", "from", "Semantic", "Versioning", "NUMBER", "Major", "version", "zero", "NUMBER", "y", "NUMBER", "z", "be", "for", "initial", "development", "NUMBER", "Anything", "may", "change", "at", "any", "time", "NUMBER", "The", "public", "API", "should", "not", "be", "considered", "stable", "NUMBER", "NUMBER", "Version", "NUMBER", "defines", "the", "public", "API", "NUMBER", "The", "way", "in", "which", "the", "version", "number", "be", "incremented", "after", "this", "release", "be", "dependent", "on", "this", "public", "API", "and", "how", "it", "change", "NUMBER", "And", "finally", "How", "do", "I", "know", "when", "to", "release", "NUMBER", "If", "your", "software", "be", "be", "use", "in", "production", "it", "should", "probably", "already", "be", "NUMBER", "If", "you", "have", "a", "stable", "API", "on", "which", "users", "have", "come", "to", "depend", "you", "should", "be", "NUMBER", "If", "you", "re", "worrying", "a", "lot", "about", "backwards", "compatibility", "you", "should", "probably", "already", "be", "NUMBER", "Currently", "there", "be", "NUMBER", "guard", "gems", "based", "on", "the", "guard", "prefix", "naming", "convention", "on", "Rubygems", "NUMBER", "If", "any", "public", "API", "change", "in", "guard", "at", "this", "point", "all", "of", "them", "would", "likely", "break", "NUMBER", "Considering", "the", "amount", "of", "libraries", "depending", "on", "Guard", "s", "current", "public", "API", "the", "number", "of", "forks", "watchers", "and", "downloads", "per", "day", "along", "with", "the", "statistic", "that", "NUMBER", "of", "surveyed", "Gemfile", "s", "have", "guard", "rspec", "LINK", "GemStats", "status", "NUMBER", "I", "believe", "I", "have", "a", "strong", "case", "for", "bumping", "up", "Guard", "s", "version", "number", "to", "NUMBER", "Thoughts", "The", "Guard", "public", "API", "LINK", "has", "be", "quite", "stable", "in", "the", "last", "year", "NUMBER", "The", "addition", "of", "run_on_deletion", "was", "backward", "compatible", "and", "the", "change", "of", "the", "boolean", "return", "value", "to", "throw", "task_has_failed", "made", "the", "API", "usage", "even", "more", "stable", "since", "most", "Guard", "implementation", "haven", "t", "handle", "the", "return", "value", "properly", "NUMBER", "I", "think", "the", "current", "public", "Guard", "API", "be", "feature", "complete", "for", "version", "NUMBER", "NUMBER", "I", "agree", "Perfect", "Sure", "thing", "Sent", "from", "my", "iPhone", "On", "NUMBER", "janv", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Guard", "will", "be", "update", "to", "NUMBER", "once", "these", "issue", "LINK", "NUMBER", "sort", "created", "direction", "desc", "state", "open", "will", "be", "close", "if", "it", "s", "ok", "for", "netzpirat", "and", "rymai", "NUMBER", "But", "I", "think", "we", "will", "propably", "release", "a", "last", "NUMBER", "version", "before", "NUMBER", "Stay", "tuned", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "My", "app", "start", "its", "life", "on", "a", "very", "old", "Rails", "version", "something", "like", "Rails", "NUMBER", "or", "maybe", "earlier", "I", "can", "t", "remember", "NUMBER", "Consequently", "even", "though", "it", "s", "now", "upgrade", "to", "NUMBER", "the", "first", "line", "of", "my", "unit", "functional", "test", "file", "was", "as", "follows", "require", "File", "NUMBER", "dirname", "__FILE__", "NUMBER", "test_helper", "Unfortunately", "that", "do", "not", "work", "with", "guard", "since", "only", "Rails", "NUMBER", "root", "test", "be", "in", "NUMBER", "I", "wonder", "if", "this", "should", "be", "documented", "or", "worked", "around", "in", "some", "way", "I", "wasted", "a", "lot", "of", "time", "trying", "to", "figure", "out", "what", "was", "wrong", "NUMBER", "Done", "LINK", "test", "issue", "NUMBER", "NUMBER", "BTW", "how", "did", "you", "get", "that", "link", "to", "the", "guard", "test", "project", "in", "your", "previous", "comment", "I", "ve", "be", "searching", "the", "GitHub", "Markdown", "syntax", "for", "that", "but", "couldn", "t", "find", "it", "NUMBER", "Yeah", "I", "just", "realised", "that", "about", "two", "seconds", "be", "commenting", "At", "first", "I", "thought", "the", "border", "around", "it", "looked", "different", "to", "a", "normal", "hyperlink", "and", "that", "there", "was", "some", "special", "way", "of", "hyperlinking", "to", "other", "github", "repos", "I", "wish", "there", "was", "for", "github", "users", "too", "Thanks", "a", "lot", "NUMBER", "I", "only", "moved", "the", "dependency", "status", "badge", "down", "to", "the", "development", "section", "since", "it", "s", "not", "something", "that", "be", "under", "direct", "control", "from", "the", "Guard", "devs", "and", "I", "don", "t", "want", "a", "red", "badge", "that", "jumps", "into", "the", "eye", "of", "a", "new", "user", "when", "he", "s", "visiting", "the", "Guard", "README", "NUMBER", "When", "a", "guard", "gem", "has", "a", "version", "NUMBER", "rb", "bundler", "loads", "it", "during", "it", "s", "startup", "process", "NUMBER", "This", "causes", "Guard", "GuardName", "to", "be", "defined", "which", "prevents", "guard", "from", "loading", "the", "main", "gem", "file", "guard", "guardname", "Attempting", "to", "work", "around", "with", "require", "guard", "guardname", "in", "the", "Guardfile", "causes", "superclass", "mismatch", "for", "class", "GuardName", "rocky", "guard", "ruby", "jlove", "gem", "list", "guard", "LOCAL", "GEMS", "guard", "NUMBER", "rocky", "guard", "ruby", "jlove", "head", "n", "NUMBER", "guard", "ruby", "NUMBER", "gemspec", "encoding", "utf", "NUMBER", "NUMBER", "push", "File", "NUMBER", "expand_path", "NUMBER", "lib", "__FILE__", "require", "guard", "ruby", "version", "rocky", "guard", "ruby", "jlove", "cat", "lib", "guard", "ruby", "version", "NUMBER", "rb", "puts", "loading", "guard", "ruby", "version", "module", "Guard", "class", "Ruby", "VERSION", "NUMBER", "end", "end", "rocky", "guard", "ruby", "jlove", "head", "n", "NUMBER", "lib", "guard", "ruby", "NUMBER", "rb", "puts", "loading", "guard", "ruby", "require", "guard", "require", "guard", "guard", "module", "Guard", "class", "Ruby", "TAG", "NUMBER", "guard", "ruby", "rocky", "prototypal", "jlove", "bundle", "exec", "guard", "init", "ruby", "loading", "guard", "ruby", "version", "loading", "guard", "ruby", "version", "Users", "jlove", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "prototypal", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "initialize_template", "undefined", "method", "init", "for", "Guard", "Ruby", "Class", "NoMethodError", "from", "Users", "jlove", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "prototypal", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "init", "NUMBER", "rocky", "prototypal", "jlove", "bundle", "exec", "guard", "loading", "guard", "ruby", "version", "loading", "guard", "ruby", "version", "Guard", "be", "now", "watching", "at", "Users", "jlove", "file", "programming", "ruby", "prototypal", "Users", "jlove", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "prototypal", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "guards", "undefined", "method", "group", "for", "TAG", "NoMethodError", "from", "Users", "jlove", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "prototypal", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "each", "NUMBER", "Only", "occur", "on", "path", "gems", "NUMBER", "I", "presume", "that", "bundler", "only", "loads", "the", "gemspec", "for", "path", "dependencies", "I", "didn", "t", "try", "git", "It", "s", "not", "strictly", "a", "Guard", "bug", "or", "a", "Bundler", "bug", "but", "an", "unfortunate", "interaction", "between", "them", "NUMBER", "The", "practical", "effect", "be", "still", "that", "if", "you", "ever", "want", "to", "path", "a", "guard", "gem", "it", "can", "t", "have", "a", "separate", "version", "file", "NUMBER", "I", "suspect", "most", "libraries", "use", "test", "rather", "than", "cross", "project", "inclusion", "but", "my", "guard", "be", "so", "simple", "I", "d", "mostly", "be", "test", "Guard", "NUMBER", "Perhaps", "I", "should", "use", "plain", "old", "load", "path", "modification", "rather", "than", "Bundler", "NUMBER", "I", "just", "spent", "nearly", "an", "hour", "trying", "to", "debug", "this", "NUMBER", "Thanks", "for", "the", "tip", "JustinLove", "I", "have", "guard", "set", "up", "to", "watch", "a", "directory", "for", "any", "file", "change", "NUMBER", "When", "it", "detects", "change", "I", "d", "like", "it", "to", "copy", "the", "file", "to", "a", "location", "on", "a", "server", "NUMBER", "Or", "remove", "the", "file", "if", "they", "get", "delete", "NUMBER", "The", "copying", "works", "perfectly", "every", "time", "NUMBER", "Deletion", "however", "only", "works", "the", "first", "time", "around", "NUMBER", "After", "one", "deletion", "it", "no", "longer", "seems", "to", "detect", "any", "more", "deletions", "NUMBER", "Even", "though", "change", "through", "saving", "or", "re", "creating", "the", "file", "works", "fine", "NUMBER", "I", "be", "use", "guard", "shell", "to", "copy", "move", "and", "remove", "file", "as", "well", "as", "create", "custom", "notifications", "NUMBER", "It", "s", "probably", "something", "simple", "I", "m", "overlooking", "as", "I", "m", "not", "too", "experienced", "in", "any", "of", "this", "NUMBER", "Any", "help", "would", "be", "appreciated", "NUMBER", "Here", "be", "my", "terminal", "output", "wa", "NUMBER", "ap", "src", "ilan", "NUMBER", "epstein", "bundle", "exec", "guard", "A", "Guard", "uses", "Growl", "to", "send", "notifications", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "ilan", "NUMBER", "epstein", "Desktop", "NGL", "phaseIII", "src", "path", "output", "output_newFile", "File", "update", "Volumes", "wa", "projects", "NGL_USA", "NGL", "NUMBER", "_PhaseIII", "NUMBER", "_Design", "NUMBER", "_Design_Tech", "output", "output_newFile", "path", "output", "output_newFile", "File", "delete", "output", "output_newFile", "path", "output", "output_newFile", "File", "update", "Volumes", "wa", "projects", "NGL_USA", "NGL", "NUMBER", "_PhaseIII", "NUMBER", "_Design", "NUMBER", "_Design_Tech", "output", "output_newFile", "path", "output", "output_newFile", "File", "update", "Volumes", "wa", "projects", "NGL_USA", "NGL", "NUMBER", "_PhaseIII", "NUMBER", "_Design", "NUMBER", "_Design_Tech", "output", "output_newFile", "path", "output", "output_newFile", "File", "update", "Volumes", "wa", "projects", "NGL_USA", "NGL", "NUMBER", "_PhaseIII", "NUMBER", "_Design", "NUMBER", "_Design_Tech", "output", "output_newFile", "And", "here", "be", "my", "Guardfile", "ruby", "More", "info", "at", "LINK", "readme", "code", "to", "run", "bundle", "exec", "guard", "A", "require", "pathname", "require", "growl", "notification", "growl", "server_path", "Volumes", "wa", "projects", "NGL_USA", "project_path", "NGL", "NUMBER", "_PhaseIII", "NUMBER", "_Design", "NUMBER", "_Design_Tech", "guard", "shell", "do", "watch", "output", "NUMBER", "do", "m", "puts", "path", "m", "NUMBER", "serverPath", "Pathname", "NUMBER", "new", "server_path", "localPath", "Pathname", "NUMBER", "new", "m", "NUMBER", "check", "to", "see", "if", "connected", "to", "server", "if", "serverPath", "NUMBER", "exist", "serverPath", "serverPath", "project_path", "m", "NUMBER", "check", "to", "see", "if", "file", "exists", "or", "if", "it", "s", "be", "delete", "if", "localPath", "NUMBER", "exist", "puts", "File", "update", "serverPath", "check", "to", "make", "sure", "the", "directory", "exists", "on", "the", "server", "unless", "serverPath", "NUMBER", "parent", "NUMBER", "exist", "if", "not", "make", "the", "dir", "mkdir", "p", "serverPath", "NUMBER", "parent", "end", "cp", "m", "serverPath", "growlnotify", "i", "pkg", "m", "File", "update", "m", "elsif", "serverPath", "NUMBER", "exist", "file", "has", "be", "delete", "remove", "from", "server", "if", "exists", "there", "if", "serverPath", "NUMBER", "exist", "puts", "File", "delete", "m", "growlnotify", "i", "pkg", "m", "File", "delete", "m", "rm", "serverPath", "end", "else", "puts", "path", "exist", "path", "NUMBER", "exist", "puts", "Not", "connected", "to", "server", "NUMBER", "growlnotify", "s", "i", "pkg", "m", "IMPORTANT", "You", "be", "NOT", "connected", "to", "wa", "projects", "NUMBER", "Please", "reconnect", "and", "resave", "your", "file", "NUMBER", "end", "end", "end", "Thanks", "very", "much", "NUMBER", "I", "appreciate", "any", "help", "as", "my", "experience", "in", "this", "be", "very", "minimal", "I", "m", "primarily", "an", "actionscript", "developer", "NUMBER", "That", "said", "if", "there", "s", "any", "other", "information", "I", "can", "provide", "that", "would", "be", "helpful", "for", "you", "please", "let", "me", "know", "NUMBER", "Thanks", "for", "the", "format", "help", "Also", "just", "to", "add", "a", "little", "more", "explanation", "after", "the", "first", "deletion", "no", "other", "deletions", "on", "any", "file", "be", "detected", "NUMBER", "If", "however", "I", "press", "e", "to", "exit", "the", "guard", "watch", "and", "re", "initiate", "a", "new", "watch", "it", "will", "again", "detect", "the", "first", "file", "deletion", "NUMBER", "After", "that", "back", "to", "no", "more", "deletion", "detections", "NUMBER", "File", "change", "through", "saving", "or", "creating", "new", "file", "always", "works", "as", "expected", "NUMBER", "Thanks", "for", "any", "help", "iLan", "Yep", "thibaudgg", "I", "had", "the", "same", "thought", "when", "I", "saw", "that", "NUMBER", "You", "re", "welcome", "thepuzzlemaster", "for", "the", "format", "Hi", "thepuzzlemaster", "I", "ve", "push", "a", "fix", "for", "this", "yesterday", "can", "you", "give", "it", "a", "try", "by", "use", "Guard", "from", "git", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "and", "let", "us", "know", "if", "the", "issue", "be", "solve", "Thanks", "in", "advance", "This", "may", "very", "well", "be", "an", "error", "on", "my", "part", "but", "I", "be", "get", "an", "error", "when", "attempting", "to", "start", "guard", "NUMBER", "Here", "be", "my", "terminal", "output", "wa", "NUMBER", "ap", "src", "ilan", "NUMBER", "epstein", "bundle", "exec", "guard", "start", "A", "Guard", "uses", "Growl", "to", "send", "notifications", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "ilan", "NUMBER", "epstein", "Desktop", "NGL", "phaseIII", "src", "Users", "ilan", "NUMBER", "epstein", "NUMBER", "bundler", "ruby", "NUMBER", "guard", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "lib", "guard", "interactor", "NUMBER", "rb", "NUMBER", "command", "not", "find", "Users", "ilan", "NUMBER", "epstein", "NUMBER", "bundler", "ruby", "NUMBER", "guard", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "bin", "fsevent_watch_guard", "Users", "ilan", "NUMBER", "epstein", "Desktop", "NGL", "phaseIII", "src", "And", "here", "be", "my", "gemfile", "which", "be", "where", "I", "put", "in", "your", "code", "source", "LINK", "gem", "compass", "gem", "growl", "gem", "growl_notify", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "gem", "guard", "shell", "After", "change", "my", "gemfile", "I", "run", "bundle", "install", "which", "seem", "to", "install", "the", "gems", "correctly", "NUMBER", "Let", "me", "know", "if", "I", "was", "supposed", "to", "do", "this", "differently", "NUMBER", "My", "coworker", "who", "has", "a", "good", "deal", "of", "experience", "use", "ruby", "will", "be", "in", "later", "today", "and", "I", "ll", "ask", "him", "if", "he", "sees", "anything", "I", "did", "incorrectly", "if", "I", "don", "t", "hear", "back", "from", "you", "first", "NUMBER", "Thanks", "iLan", "Hum", "NUMBER", "The", "error", "be", "not", "relate", "to", "my", "commit", "but", "it", "s", "probably", "come", "from", "one", "of", "these", "commit", "LINK", "Update", "come", "soon", "NUMBER", "I", "think", "I", "ve", "get", "things", "figured", "out", "NUMBER", "Ok", "Everything", "appears", "to", "be", "work", "smoothly", "now", "The", "initial", "error", "I", "was", "get", "was", "because", "I", "did", "not", "have", "rb", "fsevent", "in", "my", "gemfile", "NUMBER", "My", "helpful", "coworker", "suggested", "that", "since", "I", "was", "telling", "my", "bundle", "file", "to", "pull", "from", "git", "instead", "of", "the", "compiled", "rubygem", "it", "didn", "t", "know", "rb", "fsevent", "was", "a", "required", "dependency", "NUMBER", "So", "without", "that", "gem", "install", "I", "get", "the", "unknown", "command", "error", "NUMBER", "Once", "I", "get", "that", "add", "to", "my", "gemfile", "I", "get", "past", "that", "error", "NUMBER", "It", "then", "appeared", "that", "use", "your", "fix", "appends", "the", "path", "to", "the", "change", "file", "with", "an", "if", "the", "file", "had", "be", "delete", "NUMBER", "Took", "a", "little", "refactoring", "of", "my", "guardfile", "but", "I", "m", "quite", "happy", "to", "report", "that", "it", "now", "works", "great", "Notices", "every", "file", "deletion", "creation", "change", "I", "throw", "at", "it", "I", "be", "assuming", "this", "will", "be", "a", "permanent", "change", "yes", "the", "addition", "of", "the", "Thanks", "very", "much", "Yes", "since", "you", "re", "doing", "all", "your", "work", "in", "the", "watch", "block", "the", "delete", "file", "appear", "with", "a", "prepended", "it", "was", "already", "the", "case", "in", "fact", "but", "there", "was", "a", "bug", "preventing", "the", "paths", "from", "be", "pass", "at", "all", "NUMBER", "As", "a", "side", "note", "you", "should", "create", "at", "least", "an", "inline", "guard", "and", "use", "the", "run_on_change", "and", "run_on_deletion", "methods", "instead", "in", "that", "case", "the", "aren", "t", "pass", "to", "the", "run_on_deletion", "method", "NUMBER", "See", "the", "Create", "a", "Guard", "LINK", "section", "for", "more", "infos", "Hum", "maybe", "we", "could", "re", "evaluate", "the", "Guardfile", "after", "the", "listener", "be", "resumed", "from", "pause", "only", "if", "the", "currently", "evaluated", "Guardfile", "has", "change", "maybe", "a", "hash", "of", "its", "content", "could", "be", "use", "in", "that", "case", "NUMBER", "I", "m", "thinking", "for", "example", "of", "the", "case", "when", "you", "switch", "from", "on", "branch", "to", "another", "if", "you", "remove", "the", "pause", "in", "the", "new", "branch", "the", "Guardfile", "should", "be", "re", "evaluated", "but", "if", "you", "return", "to", "the", "original", "branch", "without", "remove", "the", "pause", "the", "Guardfile", "should", "not", "be", "re", "evaluated", "NUMBER", "If", "that", "s", "too", "complicated", "I", "agree", "to", "not", "skip", "the", "Guardfile", "re", "evaluation", "as", "it", "be", "now", "NUMBER", "I", "was", "thinking", "of", "the", "case", "where", "you", "switch", "to", "a", "branch", "don", "t", "unpause", "do", "stuff", "get", "back", "to", "the", "first", "branch", "and", "then", "unpause", "there", "would", "be", "no", "reevaluation", "in", "such", "case", "NUMBER", "But", "as", "I", "said", "it", "s", "probably", "too", "complicated", "for", "what", "it", "s", "worth", "so", "the", "current", "behavior", "be", "ok", "for", "me", "Sent", "from", "my", "iPhone", "On", "NUMBER", "janv", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "Thibaud", "Guillaume", "Gentil", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Yes", "my", "case", "was", "precisely", "when", "switching", "from", "a", "branch", "to", "another", "but", "in", "that", "case", "if", "the", "Guardfile", "will", "reevaluated", "anyway", "why", "not", "do", "it", "directly", "without", "waiting", "for", "the", "listener", "un", "pause", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "While", "use", "Guard", "I", "always", "notice", "that", "it", "exits", "with", "status", "code", "NUMBER", "even", "when", "use", "the", "interactor", "to", "stop", "it", "My", "terminal", "shows", "failure", "status", "code", "NUMBER", "It", "would", "be", "nice", "to", "let", "Guard", "exit", "with", "the", "right", "status", "code", "because", "it", "be", "a", "tool", "use", "by", "a", "lot", "of", "developers", "NUMBER", "I", "ve", "change", "the", "way", "Guard", "exits", "in", "this", "commit", "NUMBER", "Guard", "doesn", "t", "exit", "the", "program", "no", "more", "when", "calling", "Guard", "NUMBER", "op", "NUMBER", "This", "has", "the", "advantage", "of", "be", "able", "to", "use", "Guard", "NUMBER", "op", "programmatically", "knowing", "it", "won", "t", "kill", "the", "process", "NUMBER", "I", "felt", "that", "the", "interactor", "should", "be", "the", "one", "to", "exit", "Guard", "s", "process", "so", "now", "it", "will", "call", "Kernel", "exit", "after", "it", "stops", "all", "run", "guards", "NUMBER", "When", "there", "be", "an", "interrupt", "Guard", "will", "still", "stop", "all", "guards", "but", "now", "it", "will", "use", "Kernel", "abort", "to", "return", "a", "failure", "status", "code", "NUMBER", "The", "commit", "will", "apply", "nicely", "and", "the", "specs", "pass", "LINK", "ci", "NUMBER", "org", "Maher", "NUMBER", "Ever", "guard", "Cool", "thanks", "gift", "Yes", "it", "be", "NUMBER", "Just", "merge", "the", "last", "commit", "though", "NUMBER", "the", "rest", "be", "already", "in", "Guard", "s", "master", "branch", "NUMBER", "Hey", "guys", "I", "seem", "to", "be", "having", "a", "very", "strange", "issue", "and", "its", "quite", "possible", "that", "its", "down", "to", "my", "configuration", "however", "this", "be", "a", "reasonably", "new", "install", "and", "can", "t", "think", "of", "much", "that", "would", "conflict", "NUMBER", "I", "be", "use", "rspec", "NUMBER", "guard", "NUMBER", "guard", "rspec", "NUMBER", "and", "growl", "NUMBER", "Now", "when", "I", "start", "guard", "it", "definitely", "detects", "growl", "install", "as", "it", "prints", "Guard", "uses", "growl", "to", "send", "notifications", "to", "the", "terminal", "however", "after", "some", "digging", "and", "debugging", "I", "have", "find", "that", "when", "notify", "be", "call", "from", "the", "spec", "formatter", "include", "in", "guard", "rspec", "then", "the", "array", "of", "notifications", "in", "Guard", "Notifier", "be", "empty", "This", "array", "gets", "populated", "at", "the", "same", "time", "that", "the", "Guard", "uses", "growl", "for", "notifications", "message", "be", "printed", "which", "means", "this", "should", "not", "be", "empty", "and", "it", "appears", "something", "be", "emptying", "it", "in", "between", "start", "up", "and", "notifying", "NUMBER", "A", "way", "around", "this", "that", "I", "have", "find", "be", "to", "add", "auto_detect_notification", "to", "the", "beginning", "of", "the", "notify", "method", "in", "Guard", "Notifier", "to", "force", "this", "array", "to", "be", "repopulated", "before", "it", "try", "to", "send", "through", "the", "notification", "NUMBER", "Cheers", "Nick", "Thankyou", "that", "has", "fix", "it", "NUMBER", "My", "apologies", "for", "not", "trying", "the", "latest", "version", "already", "NUMBER", "I", "had", "delete", "my", "gemset", "and", "run", "a", "fresh", "bundle", "install", "not", "remembering", "that", "my", "lock", "file", "would", "keep", "the", "version", "NUMBER", "Thanks", "again", "and", "keep", "up", "the", "good", "work", "NUMBER", "When", "executing", "bundle", "exec", "guard", "list", "I", "get", "this", "output", "ERROR", "No", "guards", "find", "in", "Guardfile", "please", "add", "at", "least", "one", "NUMBER", "Available", "guards", "rspec", "spork", "See", "also", "LINK", "of", "available", "Guards", "denotes", "ones", "already", "in", "your", "Guardfile", "It", "seems", "to", "detect", "correctly", "my", "guards", "in", "my", "Guardfile", "but", "it", "s", "giving", "that", "error", "NUMBER", "Renaming", "a", "directory", "correctly", "sends", "the", "run_on_deletion", "hooks", "for", "the", "old", "path", "but", "never", "sends", "run_on_change", "for", "the", "new", "paths", "NUMBER", "Using", "guard", "NUMBER", "with", "watch_all_modifications", "true", "run_on_deletion", "be", "get", "paths", "for", "each", "of", "the", "file", "in", "the", "renamed", "directory", "NUMBER", "This", "be", "correct", "behavior", "in", "my", "opinion", "NUMBER", "Why", "would", "it", "be", "expected", "not", "to", "receive", "run_on_change", "for", "renamed", "directories", "but", "it", "be", "fired", "on", "new", "file", "and", "renamed", "file", "I", "think", "run_on_change", "should", "work", "like", "run_on_deletion", "and", "trigger", "with", "paths", "for", "each", "of", "the", "new", "file", "in", "the", "directory", "NUMBER", "dir", "NUMBER", "file", "NUMBER", "txt", "dir", "NUMBER", "file", "NUMBER", "txt", "should", "trigger", "run_on_deletion", "with", "dir", "NUMBER", "file", "NUMBER", "txt", "and", "run_on_change", "with", "dir", "NUMBER", "file", "NUMBER", "txt", "BTW", "rb", "fsevent", "do", "return", "these", "events", "correctly", "and", "in", "the", "right", "order", "NUMBER", "I", "ll", "work", "up", "a", "test", "spec", "NUMBER", "Note", "that", "I", "didn", "t", "know", "what", "I", "was", "doing", "quite", "so", "much", "when", "I", "write", "that", "code", "and", "to", "call", "it", "inefficient", "be", "an", "understatement", "NUMBER", "Also", "modification", "to", "directories", "isn", "t", "caught", "by", "all", "back", "ends", "so", "the", "option", "to", "enable", "them", "be", "deceiving", "NUMBER", "Perhaps", "this", "be", "a", "good", "excuse", "for", "finishing", "some", "refactoring", "NUMBER", "I", "ll", "add", "guard", "committers", "to", "FSSM", "NUMBER", "Sent", "from", "my", "iPhone", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Thibaud", "Guillaume", "Gentilreply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "After", "some", "time", "pass", "to", "study", "this", "issue", "I", "think", "I", "understand", "well", "the", "problem", "and", "watch_all_modifications", "true", "feature", "must", "be", "certainly", "completely", "rewrited", "use", "a", "Tree", "structure", "like", "fssm", "LINK", "to", "keep", "trace", "of", "all", "created", "moved", "delete", "paths", "NUMBER", "ttilley", "maybe", "it", "s", "time", "to", "think", "about", "extracting", "merge", "the", "listening", "stuff", "windows", "support", "checksums_hash", "NUMBER", "of", "Guard", "inside", "fssm", "or", "the", "other", "way", "around", "NUMBER", "There", "s", "certainly", "a", "lot", "of", "overlapping", "here", "NUMBER", "I", "think", "this", "issue", "be", "also", "relate", "with", "NUMBER", "and", "NUMBER", "So", "for", "now", "watch_all_modifications", "option", "be", "not", "to", "be", "considerated", "as", "rock", "solid", "sadly", "NUMBER", "PS", "After", "this", "rewrite", "maybe", "we", "ll", "be", "able", "to", "remove", "this", "option", "and", "watch", "all", "modifications", "all", "the", "time", "that", "would", "be", "great", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "thibaudgg", "I", "forgot", "you", "were", "already", "given", "repo", "access", "to", "FSSM", "NUMBER", "Added", "netzpirat", "and", "rymai", "to", "the", "list", "of", "people", "with", "commit", "rights", "NUMBER", "My", "preference", "be", "to", "integrate", "functionality", "from", "guard", "into", "FSSM", "as", "this", "then", "improves", "multiple", "apps", "and", "libraries", "not", "just", "guard", "compass", "sass", "middleman", "etc", "NUMBER", "What", "I", "meant", "earlier", "by", "inefficient", "be", "that", "to", "get", "a", "list", "of", "change", "it", "ends", "up", "rebuilding", "a", "fairly", "large", "subsection", "of", "the", "tree", "on", "an", "event", "NUMBER", "A", "subsection", "that", "s", "far", "larger", "than", "it", "strictly", "has", "to", "be", "NUMBER", "I", "ve", "had", "a", "TODO", "item", "to", "improve", "that", "for", "some", "time", "now", "but", "until", "you", "reach", "a", "certain", "size", "of", "watched", "content", "it", "really", "doesn", "t", "matter", "much", "unless", "you", "use", "polling", "NUMBER", "Performing", "checksums", "would", "put", "the", "too", "many", "file", "point", "at", "a", "significantly", "lower", "number", "though", "NUMBER", "My", "personal", "priority", "list", "be", "NUMBER", "rewrite", "ttilley", "TSITString", "so", "that", "it", "performs", "exactly", "zero", "Range", "NUMBER", "NUMBER", "insertions", "as", "the", "CFData", "NSData", "APIs", "hide", "the", "fact", "that", "this", "just", "results", "in", "a", "very", "expensive", "memcpy", "rather", "than", "a", "new", "allocation", "and", "subsequent", "management", "of", "non", "contiguous", "memory", "transparent", "handle", "of", "non", "contiguous", "memory", "only", "exists", "in", "lion", "as", "part", "of", "dispatch", "IO", "NUMBER", "The", "canonical", "implementation", "of", "tag", "netstrings", "handles", "this", "by", "write", "to", "memory", "backwards", "then", "flipping", "which", "results", "in", "less", "copying", "around", "memory", "NUMBER", "but", "it", "s", "kinda", "icky", "NUMBER", "I", "m", "going", "to", "use", "a", "singly", "linked", "list", "with", "a", "doubly", "linked", "header", "which", "seems", "wasteful", "for", "some", "of", "the", "sections", "that", "get", "prepended", "appended", "but", "anything", "will", "be", "better", "than", "the", "amount", "of", "copying", "i", "m", "doing", "NUMBER", "ew", "ew", "ew", "LINK", "L", "NUMBER", "NUMBER", "clean", "up", "fsevent_watch", "into", "something", "that", "looks", "more", "like", "a", "reusable", "library", "wrapped", "in", "a", "CLI", "interface", "rather", "than", "the", "monolithic", "mass", "of", "code", "it", "be", "currently", "NUMBER", "add", "the", "ability", "to", "send", "configuration", "directives", "to", "fsevent_watch", "via", "a", "tnetstring", "or", "yaml", "or", "json", "or", "w", "e", "on", "STDIN", "NUMBER", "handle", "CLI", "options", "in", "anything", "approaching", "sanity", "makes", "it", "_really_", "difficult", "to", "handle", "different", "options", "for", "different", "paths", "NUMBER", "I", "really", "don", "t", "feel", "like", "write", "my", "own", "option", "parser", "and", "nothing", "out", "there", "support", "this", "kind", "of", "parsing", "or", "options", "be", "parsed", "as", "unsigned", "long", "long", "without", "major", "refactoring", "NUMBER", "NUMBER", "update", "ruby", "half", "of", "rb", "fsevent", "to", "represent", "the", "functionality", "expose", "by", "fsevent_watch", "NUMBER", "finish", "cleanup", "and", "refactoring", "of", "FSSM", "including", "the", "removal", "of", "previously", "necessary", "hacks", "surrounding", "rb", "fsevent", "now", "that", "it", "support", "what", "FSSM", "needs", "directly", "multi", "path", "support", "on", "the", "ruby", "side", "of", "things", "not", "just", "in", "fsevent_watch", "With", "my", "glacial", "pace", "and", "tendency", "to", "get", "distracted", "by", "shiny", "objects", "a", "timeline", "for", "the", "above", "would", "be", "nothing", "but", "a", "blatant", "lie", "NUMBER", "Let", "me", "know", "if", "I", "should", "flip", "that", "list", "and", "get", "FSSM", "on", "top", "NUMBER", "I", "recently", "did", "some", "backend", "cleanup", "that", "d", "help", "you", "in", "make", "use", "of", "FSSM", "as", "it", "currently", "exists", "if", "that", "s", "your", "desire", "change", "the", "default", "backend", "be", "now", "easy", "and", "you", "can", "add", "your", "own", "backends", "before", "a", "default", "be", "chosen", "NUMBER", "Performance", "might", "not", "be", "where", "you", "want", "for", "mid", "to", "large", "trees", "until", "the", "update", "structure", "be", "rethought", "though", "NUMBER", "I", "m", "sure", "there", "be", "all", "kinds", "of", "ideas", "and", "improvement", "in", "guard", "that", "d", "be", "great", "to", "pull", "in", "above", "and", "beyond", "backend", "support", "NUMBER", "Thanks", "for", "the", "compliment", "NUMBER", "At", "one", "point", "I", "was", "frustrated", "by", "the", "lack", "of", "centralized", "infrastructure", "for", "this", "sort", "of", "thing", "and", "by", "the", "size", "of", "the", "implementations", "on", "offer", "NUMBER", "I", "never", "get", "around", "to", "finishing", "it", "but", "be", "thankful", "that", "my", "initial", "implementation", "be", "useful", "for", "someone", "heart", "thibaudgg", "fire", "up", "a", "new", "repo", "under", "guard", "org", "and", "start", "a", "new", "issue", "there", "NUMBER", "FSSM", "has", "only", "received", "attention", "in", "the", "past", "year", "or", "two", "when", "someone", "file", "an", "issue", "or", "makes", "a", "suggestion", "on", "github", "NUMBER", "Starting", "from", "scratch", "and", "just", "taking", "over", "the", "good", "parts", "might", "be", "a", "good", "idea", "NUMBER", "My", "concern", "be", "of", "course", "the", "gems", "that", "either", "bundle", "or", "depend", "upon", "FSSM", "google", "search", "LINK", "sclient", "psy", "ab", "hl", "en", "site", "source", "hp", "q", "site", "rubygems", "NUMBER", "org", "dependencies", "fssm", "pbx", "NUMBER", "oq", "site", "rubygems", "NUMBER", "org", "dependencies", "fssm", "aq", "f", "aqi", "aql", "gs_sm", "e", "gs_upl", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "l", "NUMBER", "bav", "on", "NUMBER", "or", "NUMBER", "r_gc", "NUMBER", "r_pw", "NUMBER", "r_cp", "NUMBER", "cf", "NUMBER", "osb", "fp", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "biw", "NUMBER", "bih", "NUMBER", "not", "many", "but", "still", "I", "didn", "t", "know", "viglio", "until", "now", "but", "I", "looks", "like", "a", "simple", "and", "straight", "forward", "solution", "NUMBER", "I", "will", "start", "write", "some", "specs", "and", "see", "how", "much", "it", "conforms", "to", "what", "we", "need", "for", "Guard", "NUMBER", "I", "like", "the", "public", "API", "of", "viglio", "but", "we", "can", "also", "add", "a", "compatibility", "layer", "to", "FSSM", "so", "that", "it", "can", "be", "use", "as", "a", "drop", "in", "replacement", "NUMBER", "thibaudgg", "sure", "Fixed", "in", "Guard", "NUMBER", "TAG", "uname", "a", "Darwin", "mobile", "NUMBER", "Darwin", "Kernel", "Version", "NUMBER", "Tue", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PDT", "NUMBER", "root", "xnu", "NUMBER", "NUMBER", "RELEASE_I", "NUMBER", "i", "NUMBER", "Current", "Guard", "gem", "install", "guard", "Fetching", "guard", "NUMBER", "gem", "NUMBER", "Successfully", "install", "guard", "NUMBER", "NUMBER", "gem", "install", "guard", "NUMBER", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "popen", "Bad", "CPU", "type", "in", "executable", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "fsevent_watch_guard", "Errno", "E", "NUMBER", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "pipe", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "stop", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "ensure", "in", "run", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "run", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "darwin", "NUMBER", "rb", "NUMBER", "in", "start", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "file", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "fsevent_watch_guard", "Users", "johannesh", "NUMBER", "rbenv", "version", "NUMBER", "p", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "fsevent_watch_guard", "Mach", "O", "NUMBER", "bit", "executable", "x", "NUMBER", "_", "NUMBER", "Patched", "rake", "install", "guard", "NUMBER", "build", "to", "pkg", "guard", "NUMBER", "gem", "guard", "NUMBER", "install", "guard", "NUMBER", "NUMBER", "scenarios", "NUMBER", "steps", "NUMBER", "m", "NUMBER", "s", "Runs", "just", "fine", "now", "all", "specs", "pass", "Sure", "thanks", "I", "m", "experience", "the", "same", "problem", "with", "Guard", "NUMBER", "Has", "this", "change", "be", "copied", "from", "rb", "fsevent", "into", "this", "release", "I", "m", "struggling", "to", "tell", "work", "out", "whether", "it", "has", "NUMBER", "My", "error", "be", "Users", "andy", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "mfl", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "popen", "Bad", "CPU", "type", "in", "executable", "Users", "andy", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "mfl", "gems", "guard", "NUMBER", "bin", "fsevent_watch_guard", "Errno", "E", "NUMBER", "NUMBER", "do", "guard", "not", "use", "the", "system", "install", "rb", "fsevent", "any", "more", "If", "it", "do", "then", "install", "rb", "fsevent", "pre", "to", "get", "the", "pre", "compiled", "NUMBER", "bit", "NUMBER", "bit", "version", "that", "s", "be", "somewhat", "rewritten", "NUMBER", "If", "it", "doesn", "t", "then", "install", "it", "anyway", "and", "copy", "the", "resulting", "binary", "over", "to", "that", "location", "the", "binary", "defaults", "to", "be", "compatible", "in", "every", "way", "NUMBER", "With", "guard", "at", "master", "bundle", "exec", "guard", "no", "vendor", "works", "although", "it", "doesn", "t", "appear", "then", "to", "be", "use", "rb", "fsevent", "as", "it", "state", "Using", "polling", "Please", "help", "us", "to", "support", "your", "system", "better", "than", "that", "NUMBER", "Is", "that", "just", "a", "warning", "or", "have", "I", "bypassed", "rb", "fsevent", "with", "no", "vendor", "Also", "when", "you", "next", "push", "the", "guard", "gem", "that", "will", "overwrite", "the", "system", "rb", "fsevent", "to", "support", "NUMBER", "bit", "or", "do", "I", "still", "need", "to", "get", "the", "pre", "version", "of", "rb", "fsevent", "Forgive", "me", "for", "my", "lack", "of", "knowledge", "on", "how", "this", "all", "works", "together", "NUMBER", "It", "be", "clearer", "thanks", "NUMBER", "I", "have", "Guard", "at", "master", "from", "git", "and", "be", "run", "bundle", "exec", "guard", "and", "that", "be", "work", "fine", "so", "all", "be", "well", "NUMBER", "Merci", "bien", "pour", "votre", "aide", "NUMBER", "Salut", "I", "be", "experience", "something", "similar", "to", "mrship", "even", "after", "use", "guard", "from", "the", "GitHub", "master", "with", "rb", "fsevent", "NUMBER", "NUMBER", "My", "application", "be", "run", "on", "a", "PowerBook", "G", "NUMBER", "and", "Mac", "OS", "NUMBER", "Running", "either", "bundle", "exec", "guard", "or", "bundle", "exec", "guard", "no", "vendor", "I", "get", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "app", "rails", "NUMBER", "x", "gems", "rb", "fsevent", "NUMBER", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "popen", "Bad", "CPU", "type", "in", "executable", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "app", "rails", "NUMBER", "x", "gems", "rb", "fsevent", "NUMBER", "bin", "fsevent_watch", "Errno", "E", "NUMBER", "Help", "Thanks", "in", "advance", "NUMBER", "You", "people", "still", "exist", "This", "be", "a", "new", "and", "different", "issue", "NUMBER", "Xcode", "NUMBER", "doesn", "t", "even", "provide", "a", "facility", "for", "build", "PPC", "code", "NUMBER", "NUMBER", "be", "the", "oldest", "framework", "available", "NUMBER", "If", "a", "pre", "compiled", "binary", "be", "provide", "so", "that", "a", "full", "xcode", "installation", "isn", "t", "required", "like", "for", "people", "use", "osx", "gcc", "installer", "then", "that", "s", "the", "best", "I", "can", "do", "for", "that", "NUMBER", "However", "it", "wouldn", "t", "be", "completely", "crazy", "to", "detect", "that", "one", "be", "on", "NUMBER", "and", "recompile", "in", "that", "case", "use", "a", "local", "install", "of", "xcode", "NUMBER", "The", "code", "has", "ifdefs", "around", "everything", "NUMBER", "with", "an", "alternative", "provide", "for", "NUMBER", "I", "can", "t", "promise", "that", "this", "will", "always", "be", "the", "case", "but", "it", "be", "right", "now", "NUMBER", "You", "may", "need", "to", "disable", "code", "signing", "to", "get", "the", "build", "to", "succeed", "NUMBER", "I", "don", "t", "have", "a", "PPC", "machine", "anywhere", "to", "properly", "test", "NUMBER", "If", "you", "would", "like", "to", "pursue", "that", "route", "please", "file", "a", "new", "issue", "on", "rb", "fsevent", "NUMBER", "Just", "know", "that", "you", "will", "be", "needed", "to", "sacrifice", "X", "number", "of", "hours", "on", "test", "since", "I", "don", "t", "otherwise", "have", "access", "to", "a", "PPC", "machine", "NUMBER", "NUMBER", "we", "exist", "but", "I", "can", "t", "say", "we", "be", "thriving", "Looks", "like", "I", "m", "stuck", "between", "a", "rock", "and", "a", "hard", "place", "NUMBER", "I", "ll", "follow", "it", "up", "on", "rb", "fsevent", "and", "reference", "this", "issue", "thread", "there", "NUMBER", "Thanks", "Hi", "I", "ve", "just", "install", "guard", "and", "the", "problem", "persists", "on", "my", "machine", "bash", "uname", "a", "Darwin", "madbook", "NUMBER", "local", "NUMBER", "Darwin", "Kernel", "Version", "NUMBER", "Tue", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PDT", "NUMBER", "root", "xnu", "NUMBER", "NUMBER", "RELEASE_I", "NUMBER", "i", "NUMBER", "Guard", "version", "NUMBER", "Am", "I", "miss", "something", "Possibly", "Can", "you", "expand", "a", "bit", "on", "what", "s", "going", "on", "The", "binary", "include", "support", "for", "both", "i", "NUMBER", "and", "x", "NUMBER", "_", "NUMBER", "Ayanami", "ttilley", "file", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "bin", "fsevent_watch", "Users", "ttilley", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "bin", "fsevent_watch", "Mach", "O", "universal", "binary", "with", "NUMBER", "architectures", "Users", "ttilley", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "bin", "fsevent_watch", "for", "architecture", "x", "NUMBER", "_", "NUMBER", "Mach", "O", "NUMBER", "bit", "executable", "x", "NUMBER", "_", "NUMBER", "Users", "ttilley", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "bin", "fsevent_watch", "for", "architecture", "i", "NUMBER", "Mach", "O", "executable", "i", "NUMBER", "Sorry", "for", "the", "previous", "short", "feedback", "This", "be", "the", "output", "when", "I", "execute", "guard", "bash", "guard", "WARNING", "You", "be", "use", "Guard", "outside", "of", "Bundler", "this", "be", "dangerous", "and", "may", "not", "work", "NUMBER", "Using", "bundle", "exec", "guard", "be", "safer", "NUMBER", "Guard", "could", "not", "detect", "any", "of", "the", "support", "notification", "libraries", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "madtrick", "Dropbox", "wsecli", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "popen", "Bad", "CPU", "type", "in", "executable", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "bin", "fsevent_watch_guard", "Errno", "E", "NUMBER", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "pipe", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "stop", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "ensure", "in", "run", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "darwin", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "I", "have", "the", "same", "output", "for", "_fsevent_watch_", "bash", "file", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "bin", "fsevent_watch", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "bin", "fsevent_watch", "Mach", "O", "universal", "binary", "with", "NUMBER", "architectures", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "bin", "fsevent_watch", "for", "architecture", "x", "NUMBER", "_", "NUMBER", "Mach", "O", "NUMBER", "bit", "executable", "x", "NUMBER", "_", "NUMBER", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "darwin", "bin", "fsevent_watch", "for", "architecture", "i", "NUMBER", "Mach", "O", "executable", "i", "NUMBER", "But", "for", "_fsevent_watch_guard_", "which", "seems", "to", "be", "cause", "of", "the", "error", "I", "get", "this", "bash", "file", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "bin", "fsevent_watch_guard", "Users", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "bin", "fsevent_watch_guard", "Mach", "O", "NUMBER", "bit", "executable", "x", "NUMBER", "_", "NUMBER", "ah", "NUMBER", "there", "you", "go", "then", "NUMBER", "that", "s", "a", "bit", "of", "a", "WTF", "moment", "there", "NUMBER", "thibaudgg", "netzpirat", "ping", "non", "universal", "version", "of", "fsevent_watch", "in", "guard", "gem", "NUMBER", "any", "idea", "how", "that", "happened", "Two", "problem", "NUMBER", "I", "don", "t", "have", "fsevent_watch_guard", "I", "have", "fsevent_watch_guard_guard", "NUMBER", "fsevent_watch_guard_guard", "be", "only", "NUMBER", "bit", "as", "for", "madtrick", "this", "be", "with", "master", "for", "guard", "Edit", "Works", "with", "guard", "master", "no", "vendor", "rb", "fsevent", "in", "Gemfile", "OS", "X", "NUMBER", "Gem", "list", "LINK", "Gemfile", "LINK", "Guardfile", "LINK", "Guard", "output", "LINK", "Tried", "without", "rb", "fsevent", "too", "no", "effect", "NUMBER", "XCode", "NUMBER", "I", "ve", "moved", "repository", "to", "another", "directory", "and", "NUMBER", "it", "works", "well", "now", "thanks", "NUMBER", "LINK", "Why", "That", "I", "d", "call", "a", "_real_", "singleton", "NUMBER", "It", "disallows", "two", "different", "Guard", "instances", "with", "different", "notification", "settings", "NUMBER", "I", "for", "myself", "only", "work", "on", "one", "project", "at", "a", "time", "be", "I", "remember", "we", "had", "issue", "where", "people", "exactly", "want", "to", "do", "that", "NUMBER", "I", "think", "I", "was", "wrong", "with", "my", "previous", "statement", "you", "re", "solution", "be", "fine", "NUMBER", "If", "you", "start", "another", "Guard", "from", "another", "shell", "it", "has", "another", "environment", "and", "they", "won", "t", "affect", "each", "other", "NUMBER", "If", "you", "start", "another", "subprocess", "with", "Kernel", "fork", "or", "Kernel", "system", "they", "share", "the", "same", "environment", "and", "thus", "can", "share", "the", "configuration", "NUMBER", "I", "m", "not", "use", "rb", "readline", "because", "it", "doesn", "t", "support", "vi", "key", "bindings", "and", "screws", "up", "my", "irb", "rails", "console", "workflow", "NUMBER", "Before", "typing", "e", "I", "touch", "a", "file", "in", "another", "terminal", "and", "wait", "for", "guard", "to", "run", "the", "spec", "nothing", "happens", "NUMBER", "guard", "Please", "add", "rb", "readline", "for", "proper", "Readline", "support", "NUMBER", "Guard", "uses", "GNTP", "to", "send", "notifications", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "jnimety", "workspace", "control", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Guard", "Compass", "be", "watching", "at", "your", "stylesheets", "NUMBER", "Guard", "JsLintOnRails", "start", "use", "config", "Users", "jnimety", "workspace", "control", "config", "jslint", "NUMBER", "yml", "Guard", "JasmineHeadlessWebkit", "be", "run", "NUMBER", "Guard", "JasmineHeadlessWebkit", "run", "all", "specs", "NUMBER", "Running", "Jasmine", "specs", "NUMBER", "PASS", "NUMBER", "test", "NUMBER", "failures", "NUMBER", "secs", "NUMBER", "Test", "ordering", "seed", "seed", "NUMBER", "touch", "app", "models", "user", "NUMBER", "rb", "in", "another", "terminal", "here", "e", "Bye", "bye", "NUMBER", "Running", "spec", "models", "user_spec", "NUMBER", "rb", "User", "NUMBER", "had", "the", "same", "problem", "today", "NUMBER", "Spent", "NUMBER", "hours", "test", "guard", "rspec", "on", "a", "rails", "project", "you", "must", "uninstall", "guard", "NUMBER", "if", "you", "want", "to", "use", "it", "NUMBER", "If", "guard", "NUMBER", "be", "install", "it", "will", "still", "show", "command", "prompt", "even", "if", "you", "specify", "guard", "NUMBER", "in", "your", "gemfile", "Sure", "a", "readline", "option", "would", "be", "nice", "NUMBER", "But", "why", "not", "simply", "put", "rb", "readline", "in", "separate", "Bundler", "group", "group", "guard", "do", "gem", "rb", "readline", "end", "This", "won", "t", "get", "loaded", "in", "the", "Rails", "environment", "but", "will", "when", "run", "bundle", "exec", "NUMBER", "still", "breaks", "rails", "console", "if", "I", "put", "it", "in", "it", "s", "own", "group", "NUMBER", "Using", "rails", "NUMBER", "You", "can", "create", "bin", "stubs", "without", "the", "guard", "group", "bundle", "install", "without", "guard", "binstubs", "so", "when", "you", "execute", "bin", "irb", "then", "rb", "readline", "be", "not", "part", "of", "the", "load", "path", "NUMBER", "Is", "rb", "readline", "optional", "or", "not", "It", "depends", "on", "the", "platform", "NUMBER", "With", "JRuby", "the", "build", "in", "readline", "support", "works", "fine", "but", "with", "MRI", "on", "OS", "X", "readline", "be", "linked", "against", "libedit", "and", "I", "haven", "t", "had", "much", "success", "with", "it", "so", "then", "rb", "readline", "be", "not", "optional", "currently", "NUMBER", "When", "you", "seldom", "use", "the", "interactor", "you", "can", "turn", "it", "off", "with", "no", "interactions", "and", "readline", "be", "not", "required", "at", "all", "NUMBER", "the", "no", "interactions", "flag", "sounds", "promising", "thanks", "NUMBER", "I", "m", "also", "have", "this", "issue", "NUMBER", "Using", "no", "interactions", "works", "in", "the", "short", "term", "but", "be", "not", "a", "solution", "NUMBER", "The", "reason", "for", "this", "problem", "be", "a", "bug", "in", "Ruby", "LINK", "lang", "NUMBER", "org", "issue", "NUMBER", "on", "OS", "X", "NUMBER", "You", "have", "the", "following", "possibilities", "to", "work", "around", "this", "bug", "Install", "rb", "readline", "Use", "JRuby", "Disable", "the", "interactor", "with", "no", "interactions", "With", "Guard", "NUMBER", "Readline", "support", "be", "off", "on", "environments", "it", "s", "know", "to", "not", "work", "properly", "and", "you", "can", "now", "force", "a", "specific", "implementation", "with", "the", "new", "interactor", "DSL", "method", "NUMBER", "Check", "out", "the", "README", "NUMBER", "Hi", "The", "last", "version", "of", "Guard", "be", "work", "fine", "for", "me", "but", "I", "get", "some", "warnings", "NUMBER", "guard", "Please", "add", "rb", "readline", "for", "proper", "Readline", "support", "NUMBER", "Guard", "uses", "GNTP", "to", "send", "notifications", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "Nerian", "Projects", "shopfrog", "respondify", "Compiling", "rails", "assets", "with", "Guard", "RailsAssets", "RailsRunner", "NUMBER", "Booting", "Rails", "for", "test", "environment", "NUMBER", "Users", "Nerian", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "global", "gems", "rb", "fsevent", "NUMBER", "lib", "rb", "fsevent", "version", "NUMBER", "rb", "NUMBER", "warning", "already", "initialized", "constant", "VERSION", "Users", "Nerian", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "respondify", "gems", "rb", "readline", "NUMBER", "lib", "readline", "NUMBER", "rb", "NUMBER", "warning", "already", "initialized", "constant", "HISTORY", "Users", "Nerian", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "respondify", "gems", "rb", "readline", "NUMBER", "lib", "readline", "NUMBER", "rb", "NUMBER", "warning", "already", "initialized", "constant", "FILENAME_COMPLETION_PROC", "Users", "Nerian", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "respondify", "gems", "rb", "readline", "NUMBER", "lib", "readline", "NUMBER", "rb", "NUMBER", "warning", "already", "initialized", "constant", "USERNAME_COMPLETION_PROC", "Users", "Nerian", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "respondify", "gems", "rb", "readline", "NUMBER", "lib", "readline", "NUMBER", "rb", "NUMBER", "warning", "already", "initialized", "constant", "VERSION", "Gemfile", "group", "test", "do", "gem", "rspec", "gem", "rspec", "rails", "gem", "guard", "rspec", "gem", "rb", "fsevent", "gem", "growl", "gem", "rb", "readline", "gem", "ruby_gntp", "gem", "guard", "spork", "gem", "spork", "NUMBER", "rc", "end", "Notice", "that", "I", "get", "Please", "add", "rb", "readline", "for", "proper", "Readline", "support", "NUMBER", "despite", "the", "fact", "that", "I", "do", "have", "it", "install", "NUMBER", "No", "I", "wasn", "t", "NUMBER", "Launching", "guard", "with", "bundle", "exec", "guard", "solve", "both", "problem", "NUMBER", "clap", "Hi", "I", "ve", "just", "install", "the", "latest", "version", "NUMBER", "of", "the", "guard", "gem", "and", "it", "doesn", "t", "work", "on", "my", "system", "NUMBER", "This", "be", "the", "output", "I", "get", "when", "I", "run", "it", "bash", "Please", "add", "rb", "readline", "for", "proper", "Readline", "support", "NUMBER", "Guard", "could", "not", "detect", "any", "of", "the", "support", "notification", "libraries", "NUMBER", "Guard", "be", "now", "watching", "at", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "watcher", "NUMBER", "rb", "NUMBER", "in", "initialize", "Permission", "denied", "Failed", "to", "watch", "lost", "find", "read", "access", "to", "the", "given", "file", "be", "not", "permitted", "NUMBER", "Errno", "EACCES", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "new", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "block", "in", "watch", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "linux", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "linux", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "home", "madtrick", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "This", "be", "the", "relate", "gems", "I", "have", "install", "guard", "NUMBER", "guard", "shell", "NUMBER", "rb", "inotify", "NUMBER", "rb", "readline", "NUMBER", "My", "Guardfile", "in", "the", "same", "directory", "where", "I", "run", "guard", "be", "this", "ruby", "guard", "shell", "do", "watch", "r", "uploads", "NUMBER", "NUMBER", "zip", "m", "rake", "deploy", "m", "NUMBER", "end", "Are", "you", "run", "Guard", "with", "bundle", "exec", "I", "m", "ask", "this", "because", "I", "see", "Please", "add", "rb", "readline", "for", "proper", "Readline", "support", "NUMBER", "and", "you", "say", "that", "you", "ve", "install", "rb", "readline", "NUMBER", "The", "NUMBER", "Guard", "release", "comes", "with", "vendored", "gems", "for", "the", "the", "file", "system", "libraries", "and", "you", "can", "try", "to", "see", "what", "happens", "when", "you", "disable", "them", "with", "the", "I", "that", "s", "a", "capital", "i", "option", "NUMBER", "Maybe", "joshbuddy", "has", "some", "ideas", "NUMBER", "I", "m", "experience", "similar", "problem", "NUMBER", "Guard", "doesn", "t", "seem", "to", "pick", "up", "any", "change", "with", "or", "without", "rb", "fsevent", "install", "NUMBER", "So", "i", "start", "off", "with", "a", "new", "rails", "project", "for", "test", "purposes", "NUMBER", "I", "add", "gem", "rb", "readline", "gem", "guard", "and", "gem", "guard", "bundler", "to", "my", "fresh", "Gemfile", "in", "this", "order", "NUMBER", "After", "run", "guard", "init", "and", "guard", "init", "bundler", "the", "output", "of", "bundle", "exec", "guard", "start", "looks", "like", "this", "ruby", "Guard", "could", "not", "detect", "any", "of", "the", "support", "notification", "libraries", "NUMBER", "Guard", "be", "now", "watching", "at", "Bundle", "already", "up", "to", "date", "Guard", "doesn", "t", "detect", "a", "notification", "library", "which", "be", "fine", "because", "i", "haven", "t", "install", "one", "NUMBER", "Notice", "that", "Guard", "says", "Guard", "be", "now", "watching", "at", "two", "single", "quotes", "NUMBER", "If", "I", "change", "my", "Gemfile", "eg", "NUMBER", "add", "rspec", "but", "guard", "doesn", "t", "fire", "the", "bundle", "command", "NUMBER", "So", "i", "tried", "to", "run", "bundle", "exec", "guard", "start", "w", "NUMBER", "in", "order", "to", "get", "around", "the", "empty", "work", "directory", "issue", "NUMBER", "Now", "Guard", "seems", "to", "pick", "up", "the", "correct", "directory", "but", "the", "result", "stays", "the", "same", "NUMBER", "any", "thoughts", "_edit_", "My", "Gemversions", "rb", "readline", "NUMBER", "guard", "NUMBER", "guard", "bundler", "NUMBER", "netzpirat", "I", "m", "run", "it", "without", "bundler", "NUMBER", "I", "mean", "I", "install", "all", "the", "gems", "directly", "with", "the", "gem", "command", "NUMBER", "I", "ve", "just", "install", "the", "via", "Gemfile", "vendoring", "the", "gems", "and", "the", "problem", "persists", "NUMBER", "The", "only", "change", "be", "that", "this", "time", "rb", "readline", "seems", "to", "be", "required", "NUMBER", "My", "Gemfile", "ruby", "A", "sample", "Gemfile", "source", "LINK", "gem", "rails", "gem", "rb", "readline", "gem", "guard", "shell", "My", "Gemfile", "NUMBER", "lock", "ruby", "madtrick", "guard", "test", "ruby", "NUMBER", "p", "NUMBER", "cat", "Gemfile", "NUMBER", "lock", "GEM", "remote", "LINK", "specs", "ffi", "NUMBER", "guard", "NUMBER", "ffi", "NUMBER", "thor", "NUMBER", "guard", "shell", "NUMBER", "guard", "NUMBER", "rb", "readline", "NUMBER", "thor", "NUMBER", "PLATFORMS", "ruby", "DEPENDENCIES", "guard", "shell", "rb", "readline", "And", "the", "output", "of", "_bundle", "exec", "guard_", "bash", "madtrick", "guard", "test", "ruby", "NUMBER", "p", "NUMBER", "bundle", "exec", "guard", "Guard", "could", "not", "detect", "any", "of", "the", "support", "notification", "libraries", "NUMBER", "Guard", "be", "now", "watching", "at", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "watcher", "NUMBER", "rb", "NUMBER", "in", "initialize", "Permission", "denied", "Failed", "to", "watch", "lost", "find", "read", "access", "to", "the", "given", "file", "be", "not", "permitted", "NUMBER", "Errno", "EACCES", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "new", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "block", "in", "watch", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "each", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "vendor", "linux", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "linux", "NUMBER", "rb", "NUMBER", "in", "watch", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "linux", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "home", "madtrick", "guard", "test", "vendor", "ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "The", "curious", "thing", "be", "that", "if", "I", "run", "_bundle", "exec", "guard", "list_", "guard", "complains", "that", "I", "have", "no", "guard", "in", "my", "Guardfile", "but", "the", "_shell_", "guard", "has", "an", "after", "it", "which", "denotes", "it", "s", "present", "in", "the", "Guardfile", "My", "Guardfile", "ruby", "madtrick", "guard", "test", "ruby", "NUMBER", "p", "NUMBER", "cat", "Guardfile", "A", "sample", "Guardfile", "More", "info", "at", "LINK", "readme", "Add", "file", "and", "commands", "to", "this", "file", "like", "the", "example", "watch", "r", "file", "path", "command", "s", "guard", "shell", "do", "watch", "NUMBER", "NUMBER", "txt", "m", "tail", "m", "NUMBER", "end", "The", "output", "of", "_bundle", "exec", "guard", "list_", "bash", "madtrick", "guard", "test", "ruby", "NUMBER", "p", "NUMBER", "guard", "list", "ERROR", "No", "guards", "find", "in", "Guardfile", "please", "add", "at", "least", "one", "NUMBER", "Available", "guards", "shell", "See", "also", "LINK", "of", "available", "Guards", "denotes", "ones", "already", "in", "your", "Guardfile", "Hope", "this", "helps", "Thanks", "for", "all", "the", "information", "NUMBER", "I", "understand", "the", "problem", "now", "and", "you", "can", "expect", "a", "bugfix", "release", "soon", "NUMBER", "In", "the", "meanwhile", "you", "can", "either", "explicit", "pass", "a", "directory", "to", "be", "watched", "or", "stick", "with", "guard", "NUMBER", "Thanks", "for", "your", "reply", "NUMBER", "I", "ll", "stay", "with", "NUMBER", "until", "the", "bugfix", "be", "release", "Guard", "NUMBER", "be", "out", "with", "a", "fix", "for", "the", "wrong", "work", "directory", "NUMBER", "Hope", "you", "all", "enjoy", "exploring", "all", "the", "other", "new", "bug", "in", "Guard", "P", "Unfortunately", "I", "still", "experience", "this", "error", "with", "NUMBER", "Yes", "and", "same", "error", "NUMBER", "works", "fine", "NUMBER", "Will", "investigate", "further", "on", "Monday", "NUMBER", "False", "alarm", "NUMBER", "works", "great", "apologies", "NUMBER", "I", "just", "wanted", "an", "opinion", "on", "this", "because", "I", "ve", "be", "wanting", "something", "like", "this", "lately", "NUMBER", "It", "allows", "you", "to", "define", "template", "like", "you", "would", "for", "a", "guard", "plugin", "but", "in", "NUMBER", "guard", "template", "NUMBER", "You", "can", "then", "add", "these", "to", "your", "Guardfile", "use", "guard", "init", "name", "which", "loads", "NUMBER", "guard", "template", "name", "if", "a", "guard", "of", "the", "same", "name", "do", "not", "exist", "NUMBER", "Is", "this", "OK", "Yeah", "looks", "good", "to", "me", "too", "NUMBER", "Thanks", "I", "just", "setup", "a", "new", "project", "with", "guard", "NUMBER", "guard", "rspec", "NUMBER", "spork", "NUMBER", "rc", "NUMBER", "and", "guard", "spork", "NUMBER", "on", "OS", "X", "Lion", "NUMBER", "Everything", "seems", "to", "work", "fine", "except", "guard", "start", "exits", "after", "run", "all", "the", "specs", "NUMBER", "Here", "s", "what", "the", "debug", "output", "looks", "like", "Guard", "be", "now", "watching", "at", "Users", "subelsky", "code", "cardshark", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "Spork", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Killing", "Spork", "servers", "with", "PID", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "Starting", "Spork", "for", "RSpec", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Spawned", "Spork", "server", "NUMBER", "bundle", "exec", "spork", "p", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "Using", "RSpec", "Preloading", "Rails", "environment", "Loading", "Spork", "NUMBER", "prefork", "block", "NUMBER", "Spork", "be", "ready", "and", "listening", "on", "NUMBER", "Spork", "server", "for", "RSpec", "successfully", "start", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "growlnotify", "version", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "Spork", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Running", "all", "specs", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "rspec", "help", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "exec", "rspec", "f", "progress", "r", "Users", "subelsky", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "patched", "global", "gems", "guard", "rspec", "NUMBER", "lib", "guard", "rspec", "formatters", "notification_rspec", "NUMBER", "rb", "f", "Guard", "RSpec", "Formatter", "NotificationRSpec", "out", "dev", "null", "failure", "exit", "code", "NUMBER", "spec", "NUMBER", "NUMBER", "Pending", "add", "a", "card", "as", "a", "sign", "in", "user", "succeeds", "No", "reason", "given", "NUMBER", "spec", "integration", "add_a_card_spec", "NUMBER", "rb", "NUMBER", "add", "a", "card", "as", "a", "sign", "out", "user", "Not", "Yet", "Implemented", "NUMBER", "spec", "integration", "add_a_card_spec", "NUMBER", "rb", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "NUMBER", "pending", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "ruby", "NUMBER", "p", "NUMBER", "cardshark", "code", "cardshark", "My", "Guardfile", "be", "below", "ruby", "guard", "spork", "cucumber", "false", "test_unit", "false", "rspec", "true", "rspec_port", "NUMBER", "do", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "r", "config", "environments", "NUMBER", "NUMBER", "rb", "watch", "r", "config", "initializers", "NUMBER", "NUMBER", "rb", "watch", "Gemfile", "watch", "Gemfile", "NUMBER", "lock", "watch", "spec", "spec_helper", "NUMBER", "rb", "end", "guard", "rspec", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "erb", "NUMBER", "haml", "m", "spec", "m", "NUMBER", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "controllers", "NUMBER", "_", "controller", "NUMBER", "rb", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "m", "NUMBER", "s", "m", "NUMBER", "_", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "Capybara", "request", "specs", "watch", "r", "app", "views", "NUMBER", "NUMBER", "NUMBER", "erb", "haml", "m", "spec", "integration", "m", "NUMBER", "_spec", "NUMBER", "rb", "end", "I", "ve", "be", "googling", "and", "experiment", "for", "awhile", "so", "I", "hope", "I", "didn", "t", "miss", "some", "obvious", "answer", "NUMBER", "pre", "NUMBER", "I", "m", "on", "OS", "X", "Lion", "and", "use", "the", "gcc", "osx", "installer", "instead", "of", "Xcode", "unfortunately", "pre", "NUMBER", "doesn", "t", "work", "with", "Lion", "I", "ve", "get", "the", "same", "problem", "except", "I", "m", "not", "use", "guard", "rspec", "NUMBER", "Mine", "be", "exiting", "after", "run", "any", "guards", "cucumber", "minitest", "etc", "NUMBER", "I", "also", "just", "update", "to", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "If", "I", "uninstall", "rb", "fsevent", "it", "behaves", "correctly", "with", "polling", "NUMBER", "Since", "I", "m", "primarily", "use", "lion", "now", "and", "only", "test", "on", "snow", "leopard", "NUMBER", "via", "an", "old", "NUMBER", "bit", "only", "intel", "imac", "I", "m", "pretty", "sure", "it", "works", "on", "lion", "NUMBER", "There", "be", "mention", "of", "a", "confusing", "EOFError", "that", "I", "haven", "t", "had", "the", "time", "to", "look", "into", "NUMBER", "Perhaps", "this", "be", "relate", "Users", "dev", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "rb", "fsevent", "test", "gems", "guard", "NUMBER", "lib", "guard", "interactor", "NUMBER", "rb", "NUMBER", "warning", "instance", "variable", "thread", "not", "initialized", "Exception", "EOFError", "at", "Users", "dev", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "rb", "fsevent", "test", "gems", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "end", "of", "file", "reached", "Perhaps", "run", "with", "ruby", "s", "debug", "voodoo", "enable", "will", "give", "more", "info", "export", "RUBYOPT", "RUBYOPT", "w", "v", "debug", "Per", "LINK", "fsevent", "issue", "NUMBER", "rb", "fsevent", "NUMBER", "pre", "NUMBER", "be", "dependent", "on", "XCode", "be", "install", "but", "pre", "NUMBER", "be", "not", "NUMBER", "I", "m", "currently", "foregoing", "XCode", "and", "use", "osx", "gcc", "installer", "LINK", "gcc", "installer", "since", "XCode", "NUMBER", "s", "LLVM", "compiler", "breaks", "all", "kinds", "of", "stuff", "NUMBER", "The", "rb", "fsevent", "issue", "linked", "above", "appears", "to", "be", "the", "same", "issue", "as", "what", "we", "re", "now", "discussing", "here", "so", "I", "recommend", "we", "close", "this", "discussion", "and", "just", "continue", "the", "other", "one", "NUMBER", "When", "trying", "to", "run", "guard", "in", "debug", "mode", "the", "debug", "option", "doesn", "t", "work", "NUMBER", "However", "use", "d", "do", "NUMBER", "I", "m", "on", "Debian", "Squeeze", "and", "run", "guard", "v", "NUMBER", "Also", "it", "should", "be", "stated", "that", "this", "doesn", "t", "actually", "provide", "_actual_", "debugging", "as", "one", "would", "expect", "but", "just", "tells", "guard", "to", "do", "debug", "_logging_", "NUMBER", "That", "seems", "to", "be", "a", "Thor", "bug", "renaming", "the", "option", "and", "it", "works", "again", "as", "expected", "NUMBER", "This", "be", "a", "strange", "bug", "that", "I", "ve", "not", "be", "able", "to", "reproduce", "outside", "of", "Guard", "NUMBER", "I", "m", "use", "it", "with", "guard", "rspec", "and", "guard", "spork", "when", "I", "start", "it", "the", "spork", "start", "successfully", "be", "shown", "then", "libnotify", "stop", "work", "NUMBER", "I", "can", "t", "send", "notification", "use", "any", "other", "means", "I", "ve", "tried", "notify", "send", "and", "from", "irb", "use", "the", "libnotify", "directly", "after", "the", "first", "notification", "sent", "by", "guard", "NUMBER", "I", "then", "need", "to", "restart", "Gnome", "to", "make", "it", "work", "again", "NUMBER", "There", "s", "no", "error", "message", "anywhere", "althought", "I", "m", "not", "sure", "where", "to", "look", "NUMBER", "I", "m", "not", "experience", "this", "issue", "with", "other", "application", "use", "libnotify", "NUMBER", "Here", "s", "the", "gems", "I", "m", "use", "libnotify", "NUMBER", "guard", "NUMBER", "guard", "spork", "NUMBER", "guard", "rspec", "NUMBER", "And", "some", "of", "my", "ArchLinux", "system", "information", "libnotify", "NUMBER", "notification", "daemon", "NUMBER", "gtkmm", "NUMBER", "gtk", "NUMBER", "NUMBER", "gnome", "session", "NUMBER", "xmonad", "NUMBER", "I", "ve", "find", "out", "about", "dbus", "monitor", "I", "m", "not", "sure", "if", "it", "could", "help", "you", "but", "here", "s", "some", "of", "it", "s", "output", "NUMBER", "When", "calling", "notify", "send", "there", "s", "this", "method", "call", "that", "be", "monitored", "method", "call", "sender", "NUMBER", "dest", "NUMBER", "serial", "NUMBER", "path", "org", "freedesktop", "Notifications", "interface", "org", "NUMBER", "freedesktop", "NUMBER", "Notifications", "member", "GetServerInformation", "method", "return", "sender", "NUMBER", "dest", "NUMBER", "reply_serial", "NUMBER", "string", "Notification", "Daemon", "string", "GNOME", "string", "NUMBER", "string", "NUMBER", "method", "call", "sender", "NUMBER", "dest", "NUMBER", "serial", "NUMBER", "path", "org", "freedesktop", "Notifications", "interface", "org", "NUMBER", "freedesktop", "NUMBER", "Notifications", "member", "Notify", "string", "notify", "send", "uint", "NUMBER", "NUMBER", "string", "string", "hello", "string", "world", "array", "array", "dict", "entry", "string", "urgency", "variant", "byte", "NUMBER", "int", "NUMBER", "NUMBER", "method", "return", "sender", "NUMBER", "dest", "NUMBER", "reply_serial", "NUMBER", "uint", "NUMBER", "NUMBER", "Then", "when", "I", "start", "Guard", "the", "monitor", "display", "both", "the", "Spork", "call", "and", "the", "Rspec", "one", "method", "call", "sender", "NUMBER", "dest", "NUMBER", "serial", "NUMBER", "path", "org", "freedesktop", "Notifications", "interface", "org", "NUMBER", "freedesktop", "NUMBER", "Notifications", "member", "GetServerInformation", "method", "return", "sender", "NUMBER", "dest", "NUMBER", "reply_serial", "NUMBER", "string", "Notification", "Daemon", "string", "GNOME", "string", "NUMBER", "string", "NUMBER", "method", "call", "sender", "NUMBER", "dest", "NUMBER", "serial", "NUMBER", "path", "org", "freedesktop", "Notifications", "interface", "org", "NUMBER", "freedesktop", "NUMBER", "Notifications", "member", "Notify", "string", "Libnotify", "API", "uint", "NUMBER", "NUMBER", "string", "home", "budu", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "fantasy", "sports", "gems", "guard", "NUMBER", "images", "success", "NUMBER", "png", "string", "Spork", "string", "RSpec", "successfully", "start", "array", "array", "dict", "entry", "string", "urgency", "variant", "byte", "NUMBER", "dict", "entry", "string", "transient", "variant", "uint", "NUMBER", "NUMBER", "int", "NUMBER", "NUMBER", "method", "return", "sender", "NUMBER", "dest", "NUMBER", "reply_serial", "NUMBER", "uint", "NUMBER", "NUMBER", "and", "method", "call", "sender", "NUMBER", "dest", "NUMBER", "serial", "NUMBER", "path", "org", "freedesktop", "Notifications", "interface", "org", "NUMBER", "freedesktop", "NUMBER", "Notifications", "member", "GetServerInformation", "method", "return", "sender", "NUMBER", "dest", "NUMBER", "reply_serial", "NUMBER", "string", "Notification", "Daemon", "string", "GNOME", "string", "NUMBER", "string", "NUMBER", "method", "call", "sender", "NUMBER", "dest", "NUMBER", "serial", "NUMBER", "path", "org", "freedesktop", "Notifications", "interface", "org", "NUMBER", "freedesktop", "NUMBER", "Notifications", "member", "Notify", "string", "Libnotify", "API", "uint", "NUMBER", "NUMBER", "string", "home", "budu", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "fantasy", "sports", "gems", "guard", "NUMBER", "images", "fail", "NUMBER", "png", "string", "RSpec", "results", "string", "NUMBER", "examples", "NUMBER", "failures", "NUMBER", "pending", "in", "NUMBER", "seconds", "array", "array", "dict", "entry", "string", "urgency", "variant", "byte", "NUMBER", "dict", "entry", "string", "transient", "variant", "uint", "NUMBER", "NUMBER", "int", "NUMBER", "NUMBER", "method", "return", "sender", "NUMBER", "dest", "NUMBER", "reply_serial", "NUMBER", "uint", "NUMBER", "NUMBER", "After", "that", "there", "s", "no", "method", "call", "monitored", "at", "all", "no", "matter", "what", "I", "do", "until", "after", "restarting", "the", "gnome", "session", "NUMBER", "I", "m", "get", "close", "to", "solve", "this", "and", "it", "appear", "to", "have", "nothing", "to", "do", "with", "Guard", "in", "the", "end", "it", "happen", "after", "sending", "a", "notification", "with", "the", "transient", "option", "NUMBER", "Just", "to", "wrap", "it", "up", "it", "ended", "up", "be", "a", "problem", "in", "notification", "daemon", "NUMBER", "I", "have", "report", "that", "bug", "to", "the", "Gnome", "project", "bug", "tracker", "and", "while", "waiting", "for", "the", "fix", "I", "ve", "modify", "the", "guard", "code", "for", "the", "notify_linux", "method", "in", "lib", "guard", "notifier", "NUMBER", "rb", "to", "not", "pass", "the", "transient", "option", "NUMBER", "Not", "sure", "how", "to", "debug", "this", "issue", "NUMBER", "No", "file", "change", "be", "be", "caught", "and", "the", "debug", "flag", "do", "nothing", "NUMBER", "How", "do", "I", "fix", "this", "Versions", "guard", "NUMBER", "rb", "fsevent", "NUMBER", "ruby", "NUMBER", "xcode", "NUMBER", "Removing", "rb", "fsevent", "makes", "it", "work", "NUMBER", "Have", "you", "tried", "with", "the", "pre", "release", "of", "rb", "fsevent", "The", "debug", "flag", "be", "now", "verbose", "and", "works", "again", "NUMBER", "Closing", "this", "because", "we", "ve", "not", "received", "any", "reply", "NUMBER", "Feel", "free", "to", "reopen", "if", "still", "an", "issue", "NUMBER", "Until", "the", "next", "Guard", "version", "be", "release", "you", "could", "use", "the", "d", "flag", "instead", "of", "debug", "NUMBER", "Sorry", "I", "ve", "be", "work", "hard", "on", "a", "few", "projects", "NUMBER", "Thanks", "for", "fix", "and", "looking", "into", "this", "NUMBER", "Much", "appreciated", "also", "wanted", "to", "note", "No", "I", "haven", "t", "tried", "a", "pre", "release", "as", "honestly", "Guard", "seems", "to", "be", "work", "perfectly", "without", "the", "rb", "fsevent", "gem", "NUMBER", "This", "will", "vendor", "all", "file", "system", "event", "gems", "which", "will", "work", "in", "a", "cross", "platform", "way", "NUMBER", "NUMBER", "on", "this", "NUMBER", "Our", "team", "has", "MacOS", "and", "Linux", "developers", "and", "we", "re", "having", "problem", "because", "of", "theses", "dependencies", "NUMBER", "Having", "vendored", "defaults", "a", "way", "to", "overwrite", "them", "seems", "to", "be", "a", "really", "good", "solution", "NUMBER", "I", "m", "also", "think", "we", "should", "absolutely", "leave", "the", "possibility", "to", "use", "system", "gems", "NUMBER", "netzpirat", "should", "I", "be", "work", "off", "of", "dev", "instead", "or", "can", "this", "be", "merge", "into", "master", "once", "I", "address", "the", "above", "issue", "I", "just", "merge", "it", "locally", "into", "the", "dev", "branch", "and", "run", "the", "spec", "suite", "with", "rake", "spec", "portability", "NUMBER", "There", "s", "only", "a", "single", "spec", "fail", "on", "Rubinius", "NUMBER", "Guard", "Linux", "isn", "t", "usable", "on", "NUMBER", "Failure", "Error", "described_class", "NUMBER", "should_not", "be_usable", "FFI", "NotFoundError", "Unable", "to", "find", "foreign", "function", "inotify_init", "I", "also", "two", "other", "small", "things", "I", "had", "to", "run", "rake", "build_mac_exec", "before", "the", "spec", "portability", "task", "that", "should", "be", "a", "dependency", "NUMBER", "The", "ignore", "vendor", "option", "be", "not", "documented", "NUMBER", "I", "will", "fix", "the", "documentation", "and", "the", "dependencies", "in", "those", "tasks", "NUMBER", "Re", "inotify", "ffi", "issue", "NUMBER", "I", "m", "not", "really", "sure", "what", "to", "say", "about", "that", "one", "NUMBER", "Perhaps", "we", "need", "to", "lock", "down", "each", "vendored", "dep", "to", "a", "specific", "sha", "and", "update", "those", "shas", "manually", "Thoughts", "Really", "no", "idea", "what", "happens", "NUMBER", "I", "ll", "test", "it", "on", "a", "Linux", "machine", "in", "the", "evening", "to", "see", "if", "it", "s", "only", "a", "problem", "on", "a", "Mac", "NUMBER", "In", "this", "case", "we", "can", "just", "catch", "and", "ignore", "NUMBER", "I", "run", "a", "quick", "test", "on", "linux", "everything", "seem", "to", "work", "well", "NUMBER", "netzpirat", "Do", "you", "have", "the", "stacktrace", "handy", "for", "that", "error", "above", "Happy", "to", "add", "the", "catch", "and", "ignore", "NUMBER", "No", "sorry", "but", "I", "ll", "have", "a", "look", "again", "this", "evening", "NUMBER", "Very", "nice", "the", "error", "has", "gone", "and", "the", "specs", "be", "passing", "LINK", "ci", "NUMBER", "org", "guard", "guard", "so", "I", "merge", "your", "change", "into", "the", "dev", "branch", "NUMBER", "I", "only", "had", "to", "add", "a", "platform", "check", "to", "the", "listener", "because", "for", "example", "rb_fsevent", "loads", "fine", "under", "Linux", "but", "doesn", "t", "work", "NUMBER", "Thank", "you", "for", "all", "your", "work", "NUMBER", "I", "be", "the", "maintainer", "of", "guard", "annotate", "and", "I", "m", "not", "familiar", "enough", "with", "guards", "internals", "to", "solve", "a", "problem", "NUMBER", "Right", "now", "guard", "annotate", "will", "get", "stuck", "in", "an", "endless", "loop", "while", "monitoring", "a", "specific", "file", "config", "routes", "NUMBER", "rb", "in", "a", "rails", "application", "NUMBER", "The", "issue", "be", "that", "we", "be", "watching", "the", "file", "for", "change", "which", "will", "kick", "off", "a", "process", "that", "annotates", "those", "change", "in", "the", "same", "file", "NUMBER", "So", "guard", "notices", "a", "change", "to", "the", "file", "then", "kicks", "off", "a", "shell", "script", "in", "response", "which", "in", "turn", "makes", "more", "change", "to", "that", "same", "file", "which", "guard", "notices", "as", "a", "change", "and", "starts", "the", "process", "again", "continuously", "looping", "NUMBER", "I", "tried", "finding", "a", "way", "by", "looking", "through", "the", "guard", "code", "to", "temporarily", "pause", "monitoring", "of", "file", "to", "prevent", "this", "issue", "but", "haven", "t", "find", "a", "solution", "NUMBER", "My", "last", "attempt", "involved", "wrapping", "my", "shell", "script", "call", "inside", "Guard", "NUMBER", "listener", "NUMBER", "pause", "NUMBER", "shell", "process", "here", "NUMBER", "Guard", "NUMBER", "listener", "NUMBER", "run", "but", "that", "doesnt", "seem", "to", "prevent", "the", "endless", "looping", "either", "NUMBER", "Yes", "you", "re", "right", "netzpirat", "pausing", "the", "listener", "only", "stop", "the", "change", "processing", "NUMBER", "Your", "code", "proposition", "should", "works", "fine", "NUMBER", "I", "m", "closing", "this", "for", "now", "NUMBER", "Feel", "free", "to", "continue", "discussion", "at", "the", "mailing", "list", "NUMBER", "How", "about", "use", "the", "notify", "LINK", "gem", "to", "handle", "notifications", "I", "can", "t", "install", "the", "growl_notify", "gem", "on", "Linux", "because", "it", "depends", "on", "the", "rb", "appscript", "LINK", "appscript", "index", "NUMBER", "html", "gem", "which", "doesn", "t", "compile", "outside", "Mac", "NUMBER", "This", "be", "a", "problem", "because", "we", "put", "our", "Gemfile", "NUMBER", "lock", "file", "under", "version", "control", "NUMBER", "Awesome", "NUMBER", "Thanks", "The", "first", "typo", "be", "obvious", "NUMBER", "I", "also", "believe", "file", "modifications", "be", "not", "correct", "English", "NUMBER", "I", "believe", "modifications", "of", "file", "or", "file", "modifications", "be", "better", "NUMBER", "Currently", "Guard", "do", "not", "support", "Bsd", "based", "OSs", "such", "as", "FreeBSD", "NUMBER", "I", "find", "the", "Cool", "NUMBER", "io", "LINK", "gem", "that", "uses", "libev", "behind", "the", "scenes", "and", "should", "be", "able", "to", "detect", "file", "change", "without", "polling", "NUMBER", "It", "s", "older", "gem", "name", "was", "Rev", "LINK", "that", "was", "rebuilt", "and", "update", "NUMBER", "Hi", "Andrew", "Interesting", "having", "BSD", "listener", "support", "would", "be", "great", "Feel", "free", "to", "submit", "a", "pull", "request", "thanks", "Added", "support", "for", "BSD", "use", "cool", "NUMBER", "io", "gem", "NUMBER", "LINK", "Currently", "it", "do", "not", "find", "new", "file", "and", "the", "test", "fail", "because", "of", "this", "NUMBER", "Made", "an", "update", "that", "allows", "it", "to", "find", "new", "file", "NUMBER", "But", "the", "test", "still", "fail", "for", "some", "reason", "NUMBER", "Are", "you", "sure", "new", "file", "be", "detected", "by", "cool", "NUMBER", "io", "he", "seems", "to", "me", "that", "it", "wasn", "t", "the", "case", "with", "kqueue", "on", "OS", "X", "NUMBER", "netzpirat", "do", "you", "have", "some", "ideas", "about", "why", "theses", "specs", "be", "fail", "Thanks", "Hey", "guys", "thanks", "for", "looking", "into", "it", "NUMBER", "I", "do", "get", "the", "same", "latency", "issue", "but", "not", "always", "NUMBER", "The", "latency", "doesn", "t", "seem", "to", "be", "as", "big", "of", "an", "issue", "if", "I", "ve", "get", "a", "statwatcher", "on", "each", "file", "NUMBER", "But", "it", "doesn", "t", "detect", "new", "file", "NUMBER", "Another", "thing", "that", "I", "notice", "be", "that", "the", "statwatcher", "s", "on_change", "method", "gets", "call", "when", "a", "file", "be", "opened", "and", "write", "NUMBER", "And", "when", "watching", "a", "directory", "it", "doesn", "t", "give", "a", "way", "to", "know", "what", "change", "other", "than", "the", "path", "that", "was", "pass", "to", "the", "statwatcher", "NUMBER", "Which", "requires", "looking", "at", "all", "of", "the", "file", "in", "the", "directory", "looking", "for", "something", "that", "change", "NUMBER", "I", "m", "thinking", "this", "be", "worse", "than", "polling", "NUMBER", "So", "my", "suspicion", "that", "it", "s", "polling", "be", "correct", "NUMBER", "After", "looking", "at", "cool", "NUMBER", "io", "s", "stat", "watcher", "it", "actually", "polls", "at", "the", "file", "system", "level", "for", "change", "which", "explains", "the", "multiple", "second", "delays", "NUMBER", "And", "their", "default", "be", "NUMBER", "seconds", "NUMBER", "If", "the", "latency", "be", "set", "to", "a", "low", "value", "NUMBER", "the", "test", "still", "fail", "NUMBER", "But", "that", "doesn", "t", "really", "matter", "because", "Guard", "already", "has", "polling", "NUMBER", "Or", "be", "the", "way", "polling", "be", "do", "different", "Closing", "this", "issue", "because", "add", "support", "for", "cool", "NUMBER", "io", "at", "this", "time", "do", "not", "improve", "anything", "NUMBER", "If", "anyone", "be", "interested", "in", "this", "be", "further", "developed", "let", "me", "know", "and", "I", "ll", "see", "if", "I", "can", "find", "some", "time", "to", "work", "on", "it", "NUMBER", "Ok", "thanks", "to", "have", "try", "it", "NUMBER", "Linux", "note", "on", "user", "watch", "limits", "great", "thanks", "for", "the", "merge", "netzpirat", "Apologies", "for", "the", "inconvenience", "NUMBER", "I", "ll", "look", "into", "the", "dev", "branch", "NUMBER", "I", "m", "not", "get", "growl", "or", "libnotify", "error", "message", "on", "either", "OS", "X", "or", "Linux", "respectively", "when", "use", "guard", "with", "spork", "NUMBER", "On", "the", "OS", "X", "side", "of", "things", "I", "m", "use", "the", "spork", "testunit", "gem", "guard", "minitest", "guard", "spork", "and", "growl_notify", "I", "had", "tried", "the", "plain", "growl", "gem", "but", "the", "homebrew", "install", "of", "growlnotify", "didn", "t", "even", "work", "standalone", "complaining", "of", "permission", "denied", "NUMBER", "I", "get", "a", "message", "when", "starting", "guard", "which", "reads", "Test", "Unit", "successfully", "start", "but", "then", "I", "get", "no", "message", "after", "that", "NUMBER", "Any", "ideas", "I", "thought", "this", "might", "be", "the", "guard", "minitest", "gem", "s", "fault", "but", "after", "reviewing", "the", "code", "I", "don", "t", "think", "it", "s", "responsible", "for", "notifications", "NUMBER", "There", "was", "a", "previously", "created", "issue", "that", "I", "and", "others", "had", "commented", "on", "LINK", "minitest", "issue", "NUMBER", "If", "you", "remove", "spork", "guard", "spork", "notifications", "work", "Awesome", "thanks", "for", "the", "insight", "I", "ll", "look", "into", "testdrb", "and", "will", "make", "the", "change", "if", "the", "information", "be", "available", "or", "document", "it", "otherwise", "NUMBER", "Cheers", "Hi", "guys", "regard", "guard", "test", "it", "s", "actually", "already", "documented", "The", "Problem", "Currently", "the", "singleton", "method", "Guard", "NUMBER", "get_guard_class", "LINK", "L", "NUMBER", "remove", "dashes", "and", "compares", "all", "constants", "under", "the", "Guard", "module", "to", "the", "given", "guard", "name", "say", "in", "a", "Guardfile", "after", "downcasing", "both", "NUMBER", "Finding", "Guard", "subclasses", "this", "way", "seems", "overly", "restrictive", "NUMBER", "For", "example", "given", "a", "guard", "with", "gem", "name", "guard", "foo_bar_baz", "and", "the", "following", "Guardfile", "ruby", "Guardfile", "guard", "foo_bar_baz", "do", "end", "and", "the", "following", "class", "definition", "ruby", "lib", "guard", "foo_bar_baz", "NUMBER", "rb", "module", "Guard", "class", "FooBarBaz", "TAG", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "and", "let", "us", "know", "if", "the", "issue", "be", "solve", "Thanks", "in", "advance", "Looks", "good", "NUMBER", "Works", "for", "me", "NUMBER", "In", "Guard", "Listener", "the", "initialize", "method", "be", "attempting", "to", "set", "default", "options", "watch_all_modifications", "options", "NUMBER", "fetch", "watch_all_modifications", "false", "The", "options", "hash", "be", "an", "instance", "of", "Thor", "CoreExt", "HashWithIndifferentAccess", "NUMBER", "This", "hash", "extension", "doesn", "t", "seem", "to", "support", "indifferent", "access", "for", "fetch", "NUMBER", "Because", "the", "stored", "key", "be", "actually", "a", "string", "this", "will", "always", "default", "to", "false", "NUMBER", "This", "might", "be", "resolve", "with", "watch_all_modifications", "options", "watch_all_modifications", "false", "Thanks", "could", "you", "add", "a", "fail", "test", "and", "even", "fix", "the", "issue", "and", "submit", "a", "pull", "request", "against", "the", "dev", "branch", "I", "use", "ruby", "growl", "NUMBER", "notifications", "work", "just", "fine", "but", "guard", "always", "says", "Please", "install", "growl_notify", "or", "growl", "gem", "for", "Mac", "OS", "X", "notification", "support", "and", "add", "it", "to", "your", "Gemfile", "NUMBER", "could", "you", "make", "it", "so", "it", "understands", "if", "i", "use", "ruby", "growl", "thanks", "LINK", "_O_me", "here", "be", "my", "gemfile", "and", "guardfile", "NUMBER", "I", "just", "run", "guard", "and", "it", "starts", "spork", "etc", "and", "runs", "normally", "with", "growl", "notifications", "growl_notify", "gives", "me", "error", "like", "that", "The", "process", "has", "forked", "and", "you", "cannot", "use", "this", "CoreFoundation", "functionality", "safely", "NUMBER", "You", "MUST", "exec", "NUMBER", "Break", "on", "THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY___YOU_MUST_EXEC", "to", "debug", "NUMBER", "growl", "be", "work", "fine", "NUMBER", "I", "ll", "use", "that", "NUMBER", "at", "some", "point", "I", "had", "some", "problem", "and", "I", "tried", "ruby", "growl", "but", "growl", "works", "now", "NUMBER", "thanks", "NUMBER", "I", "have", "guard", "install", "for", "use", "with", "rspec", "and", "be", "run", "into", "an", "issue", "where", "it", "be", "fail", "looking", "for", "minitest", "params", "NUMBER", "here", "s", "the", "error", "NUMBER", "uby", "NUMBER", "minitest", "unit", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_args", "invalid", "option", "p", "OptionParser", "InvalidOption", "my", "guardfile", "be", "the", "vanilla", "version", "created", "by", "guard", "rspec", "init", "here", "be", "gems", "group", "development", "test", "do", "gem", "turn", "require", "false", "gem", "shoulda", "gem", "shoulda", "matchers", "gem", "factory_girl_rails", "gem", "guard", "gem", "rb", "fsevent", "gem", "rspec", "rails", "NUMBER", "gem", "cucumber", "rails", "NUMBER", "gem", "webrat", "NUMBER", "gem", "guard", "rspec", "end", "Note", "that", "I", "have", "uninstalled", "both", "the", "guard", "test", "and", "test", "unit", "gems", "NUMBER", "Also", "note", "that", "when", "guard", "test", "and", "test", "unit", "be", "install", "it", "runs", "properly", "NUMBER", "CLARIFICATION", "The", "error", "above", "be", "seen", "when", "exiting", "the", "run", "thin", "server", "NUMBER", "When", "guard", "be", "run", "at", "the", "console", "it", "be", "work", "without", "error", "NUMBER", "Hi", "If", "you", "re", "use", "RSpec", "why", "be", "you", "use", "MiniTest", "or", "even", "test", "unit", "Could", "you", "show", "us", "your", "Guardfile", "even", "if", "it", "s", "the", "vanilla", "version", "Thanks", "i", "brought", "in", "rspec", "after", "i", "had", "already", "install", "guard", "to", "run", "against", "test", "unit", "NUMBER", "So", "once", "i", "moved", "to", "rspec", "i", "brought", "in", "the", "guard", "rspec", "gem", "and", "run", "the", "init", "remove", "the", "guard", "test", "and", "test", "unit", "gems", "NUMBER", "i", "thought", "i", "had", "scrubbed", "everything", "relate", "to", "test", "unit", "NUMBER", "here", "s", "the", "guard", "file", "guard", "rspec", "version", "NUMBER", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "Rails", "example", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "controllers", "NUMBER", "_", "controller", "NUMBER", "rb", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "m", "NUMBER", "s", "m", "NUMBER", "_", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "Capybara", "request", "specs", "watch", "r", "app", "views", "NUMBER", "NUMBER", "NUMBER", "erb", "haml", "m", "spec", "request", "m", "NUMBER", "_spec", "NUMBER", "rb", "end", "Ah", "ok", "thanks", "for", "the", "clarifications", "I", "thought", "you", "were", "actually", "use", "MiniTest", "etc", "NUMBER", "You", "should", "remove", "turn", "from", "your", "Gemfile", "NUMBER", "Could", "you", "show", "us", "your", "spec_helper", "NUMBER", "rb", "too", "Have", "you", "remove", "the", "test", "folder", "entirely", "ok", "so", "i", "be", "run", "guard", "with", "bundle", "exec", "and", "when", "that", "be", "run", "at", "the", "console", "it", "works", "NUMBER", "i", "think", "the", "issue", "i", "be", "seeing", "when", "i", "shut", "down", "the", "thin", "server", "which", "be", "run", "out", "of", "a", "procfile", "be", "that", "i", "be", "also", "run", "resque", "out", "of", "the", "procfile", "and", "when", "i", "shut", "down", "the", "server", "it", "try", "to", "run", "a", "resque", "test", "suite", "which", "be", "odd", "NUMBER", "i", "need", "to", "look", "at", "the", "resque", "doc", "and", "see", "how", "to", "disable", "that", "test", "suite", "NUMBER", "i", "need", "to", "look", "into", "that", "and", "redux", "all", "of", "the", "test", "relate", "gems", "as", "well", "NUMBER", "i", "think", "there", "be", "too", "many", "moving", "parts", "here", "and", "that", "s", "cause", "the", "issue", "NUMBER", "here", "s", "the", "relevant", "part", "of", "the", "server", "shutdown", "NUMBER", "NUMBER", "NUMBER", "system", "sending", "SIGTERM", "to", "all", "processes", "NUMBER", "NUMBER", "NUMBER", "web", "NUMBER", "Stopping", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "web", "NUMBER", "Exiting", "NUMBER", "NUMBER", "NUMBER", "web", "NUMBER", "Users", "tpletcher", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "minitest", "unit", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_args", "invalid", "option", "p", "OptionParser", "InvalidOption", "NUMBER", "NUMBER", "NUMBER", "web", "NUMBER", "from", "Users", "tpletcher", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "minitest", "unit", "NUMBER", "rb", "NUMBER", "in", "new", "NUMBER", "NUMBER", "NUMBER", "web", "NUMBER", "from", "Users", "tpletcher", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "minitest", "unit", "NUMBER", "rb", "NUMBER", "in", "process_args", "NUMBER", "NUMBER", "NUMBER", "web", "NUMBER", "from", "Users", "tpletcher", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "minitest", "unit", "NUMBER", "rb", "NUMBER", "in", "run", "NUMBER", "NUMBER", "NUMBER", "web", "NUMBER", "from", "Users", "tpletcher", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "minitest", "unit", "NUMBER", "rb", "NUMBER", "in", "block", "in", "autorun", "NUMBER", "NUMBER", "NUMBER", "worker", "NUMBER", "Loaded", "suite", "resque", "NUMBER", "Waiting", "for", "NUMBER", "NUMBER", "NUMBER", "worker", "NUMBER", "Started", "NUMBER", "NUMBER", "NUMBER", "worker", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "worker", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "worker", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "worker", "NUMBER", "NUMBER", "test", "NUMBER", "assertions", "NUMBER", "failures", "NUMBER", "error", "NUMBER", "skips", "NUMBER", "NUMBER", "NUMBER", "worker", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "worker", "NUMBER", "Test", "run", "options", "seed", "NUMBER", "ok", "so", "it", "looks", "like", "the", "shoulda", "gems", "be", "the", "issue", "NUMBER", "when", "i", "remove", "them", "from", "bundle", "everything", "be", "good", "to", "go", "NUMBER", "not", "sure", "why", "that", "would", "cause", "the", "resque", "test", "suite", "to", "be", "run", "at", "server", "shutdown", "but", "i", "ll", "look", "into", "that", "later", "NUMBER", "i", "m", "going", "to", "go", "ahead", "and", "close", "this", "issue", "NUMBER", "thanks", "for", "quick", "response", "cheer", "T", "There", "was", "no", "test", "to", "show", "this", "I", "m", "not", "quite", "sure", "how", "to", "test", "it", "though", "NUMBER", "Hi", "thanks", "but", "it", "has", "be", "already", "report", "and", "fix", "in", "NUMBER", "You", "can", "use", "the", "dev", "branch", "until", "the", "next", "release", "NUMBER", "NUMBER", "has", "just", "be", "release", "Grab", "it", "while", "it", "s", "hot", "Oh", "whoops", "sorry", "about", "that", "NUMBER", "Between", "NUMBER", "and", "NUMBER", "the", "file", "that", "calls", "the", "guard", "init", "task", "change", "but", "the", "path", "to", "the", "template", "Guardfile", "was", "not", "adjusted", "accordingly", "NUMBER", "This", "results", "in", "an", "error", "when", "doing", "guard", "init", "use", "version", "NUMBER", "of", "this", "gem", "NUMBER", "This", "pull", "request", "makes", "the", "small", "tweak", "necessary", "to", "point", "to", "the", "correct", "path", "of", "the", "Guardfile", "NUMBER", "Hey", "all", "I", "know", "this", "isn", "t", "the", "most", "pressing", "issue", "but", "I", "be", "still", "having", "trouble", "with", "the", "any_return", "NUMBER", "Looks", "like", "changed_paths", "and", "deleted_paths", "be", "trying", "to", "use", "start_with", "but", "Arrays", "and", "Hashes", "don", "t", "have", "these", "methods", "NUMBER", "I", "was", "wondering", "what", "we", "I", "should", "do", "about", "that", "NUMBER", "bundle", "exec", "guard", "d", "Turn", "off", "AMQP", "RabbitMQ", "support", "NUMBER", "Authenticating", "mongo", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "FtpGuard", "Starting", "FtpGuarding", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "FtpGuard", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "changed_paths", "undefined", "method", "start_with", "for", "TAG", "NoMethodError", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "select", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "changed_paths", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run_on_change_task", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run_on_change", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run_on_guards", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "each", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run_on_guards", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "catch", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run_on_guards", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "each", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run_on_guards", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run_on_change", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "synchronize", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run_on_change", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "start_reactor", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "loop", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "start_reactor", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "initialize", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "new", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "start_reactor", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "initialize", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "darwin", "NUMBER", "rb", "NUMBER", "in", "initialize", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "new", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "listener", "NUMBER", "rb", "NUMBER", "in", "select_and_init", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "setup", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "bin", "guard", "NUMBER", "I", "m", "run", "virtualized", "Ubuntu", "on", "Win", "NUMBER", "host", "the", "work", "directory", "be", "mounted", "with", "vboxsf", "driver", "NUMBER", "If", "I", "edit", "Guardfile", "while", "guard", "be", "run", "it", "prints", "Ignoring", "paths", "public", "Guardfile", "has", "be", "re", "evaluated", "NUMBER", "and", "then", "stops", "run", "the", "current", "guards", "NUMBER", "Commands", "p", "r", "and", "q", "work", "as", "expected", "but", "hitting", "return", "doesn", "t", "do", "anything", "anymore", "neither", "do", "editing", "any", "of", "the", "watched", "file", "NUMBER", "If", "I", "quit", "it", "like", "that", "guard", "spork", "leaves", "the", "spork", "process", "run", "NUMBER", "The", "problem", "could", "be", "on", "its", "side", "but", "the", "relate", "issue", "be", "supposedly", "fix", "NUMBER", "Gemfile", "group", "test", "do", "gem", "spork", "NUMBER", "rc", "gem", "spork", "testunit", "gem", "mocha", "gem", "guard", "spork", "gem", "guard", "test", "end", "Guardfile", "ignore_paths", "public", "guard", "spork", "wait", "NUMBER", "notification", "true", "do", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "config", "routes", "NUMBER", "rb", "watch", "r", "config", "environments", "NUMBER", "NUMBER", "rb", "watch", "r", "config", "initializers", "NUMBER", "NUMBER", "rb", "watch", "Gemfile", "watch", "Gemfile", "NUMBER", "lock", "watch", "test", "test_helper", "NUMBER", "rb", "end", "guard", "test", "drb", "true", "do", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "test", "m", "NUMBER", "m", "NUMBER", "_test", "NUMBER", "rb", "models", "unit", "controllers", "functional", "NUMBER", "each", "do", "cs", "ts", "watch", "r", "app", "cs", "NUMBER", "rb", "m", "test", "ts", "m", "NUMBER", "_test", "NUMBER", "rb", "end", "watch", "r", "test", "NUMBER", "NUMBER", "test_case", "NUMBER", "rb", "m", "test", "m", "NUMBER", "watch", "r", "test", "NUMBER", "test", "NUMBER", "rb", "end", "Please", "can", "you", "try", "to", "launch", "guard", "with", "the", "debug", "option", "bundle", "exec", "guard", "d", "and", "give", "the", "complete", "output", "NUMBER", "Thanks", "Sure", "NUMBER", "bundle", "exec", "guard", "d", "Please", "install", "rb", "inotify", "gem", "for", "Linux", "inotify", "support", "Using", "polling", "Please", "help", "us", "to", "support", "your", "system", "better", "than", "that", "NUMBER", "Please", "install", "libnotify", "gem", "for", "Linux", "notification", "support", "and", "add", "it", "to", "your", "Gemfile", "Ignoring", "paths", "public", "Guard", "be", "now", "watching", "at", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "Spork", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Killing", "Spork", "servers", "with", "PID", "Starting", "Spork", "for", "Test", "Unit", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Spawned", "Spork", "server", "NUMBER", "bundle", "exec", "spork", "testunit", "p", "NUMBER", "Using", "TestUnit", "Preloading", "Rails", "environment", "Loading", "Spork", "NUMBER", "prefork", "block", "NUMBER", "Spork", "be", "ready", "and", "listening", "on", "NUMBER", "Spork", "server", "for", "Test", "Unit", "successfully", "start", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "Spork", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "Test", "Guard", "Test", "NUMBER", "be", "run", "with", "Test", "Unit", "NUMBER", "Running", "all", "test", "Using", "testdrb", "to", "run", "the", "test", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "testdrb", "Itest", "NUMBER", "Running", "test", "with", "args", "Itest", "NUMBER", "NUMBER", "Specify", "ruby", "prof", "as", "application", "s", "dependency", "in", "Gemfile", "to", "run", "benchmarks", "NUMBER", "Loaded", "suite", "NUMBER", "Started", "PP", "Finished", "in", "NUMBER", "seconds", "NUMBER", "NUMBER", "test", "NUMBER", "assertions", "NUMBER", "failures", "NUMBER", "error", "NUMBER", "pendings", "NUMBER", "omissions", "NUMBER", "notifications", "NUMBER", "pass", "NUMBER", "test", "s", "NUMBER", "assertions", "s", "Pending", "Cases", "NUMBER", "Done", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "Test", "Ignoring", "paths", "public", "Guardfile", "has", "be", "re", "evaluated", "NUMBER", "After", "that", "nothing", "NUMBER", "I", "censored", "the", "output", "a", "bit", "since", "I", "don", "t", "think", "the", "repo", "location", "and", "the", "test", "file", "paths", "can", "be", "of", "any", "help", "NUMBER", "Can", "you", "add", "rb", "inotify", "libnotify", "in", "your", "development", "group", "in", "your", "Gemfile", "and", "move", "guard", "spork", "guard", "test", "in", "that", "one", "too", "NUMBER", "Maybe", "it", "s", "an", "issue", "with", "the", "polling", "listener", "but", "that", "s", "weird", "NUMBER", "rb", "inotify", "doesn", "t", "make", "much", "of", "a", "difference", "except", "looks", "like", "it", "s", "ignoring", "the", "ignore_paths", "instruction", "home", "gutov", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "rb", "inotify", "NUMBER", "lib", "rb", "inotify", "watcher", "NUMBER", "rb", "NUMBER", "in", "initialize", "No", "space", "left", "on", "device", "Failed", "to", "watch", "home", "gutov", "docs", "Ruby", "estate", "public", "system", "images", "NUMBER", "NUMBER", "NUMBER", "The", "user", "limit", "on", "the", "total", "number", "of", "inotify", "watches", "was", "reached", "or", "the", "kernel", "fail", "to", "allocate", "a", "needed", "resource", "NUMBER", "Errno", "ENOSPC", "As", "soon", "as", "I", "moved", "the", "public", "system", "directory", "out", "of", "the", "way", "and", "rebooted", "the", "machine", "it", "worked", "just", "like", "before", "with", "the", "same", "problem", "NUMBER", "libnotify", "works", "as", "expected", "it", "s", "just", "more", "or", "less", "useless", "to", "me", "since", "guard", "test", "doesn", "t", "support", "it", "in", "Drb", "mode", "NUMBER", "And", "if", "you", "try", "without", "guard", "spork", "or", "guard", "rspec", "you", "get", "the", "same", "issue", "And", "it", "s", "only", "happens", "when", "you", "edit", "the", "Guardfile", "right", "Otherwise", "it", "works", "fine", "Commented", "them", "out", "tried", "guard", "shell", "with", "ctags", "example", "same", "issue", "NUMBER", "It", "works", "fine", "otherwise", "yes", "NUMBER", "Thanks", "but", "that", "s", "not", "the", "issue", "here", "NUMBER", "I", "be", "having", "this", "same", "problem", "on", "the", "current", "NUMBER", "release", "NUMBER", "I", "wonder", "if", "there", "be", "anyone", "for", "whom", "this", "be", "a", "regression", "if", "so", "git", "bisect", "could", "find", "the", "bug", "NUMBER", "I", "get", "roughly", "the", "same", "output", "as", "dgutov", "NUMBER", "Guard", "be", "now", "watching", "at", "home", "dyfrgi", "work", "tendril", "energize", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "Spork", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Killing", "Spork", "servers", "with", "PID", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "Starting", "Spork", "for", "RSpec", "Cucumber", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Spawned", "Spork", "server", "NUMBER", "bundle", "exec", "spork", "p", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Spawned", "Spork", "server", "NUMBER", "bundle", "exec", "spork", "cu", "p", "NUMBER", "Using", "RSpec", "Preloading", "Rails", "environment", "Using", "Cucumber", "Preloading", "Rails", "environment", "home", "dyfrgi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "energize", "gems", "rack", "NUMBER", "lib", "rack", "backports", "uri", "common_", "NUMBER", "rb", "NUMBER", "warning", "already", "initialized", "constant", "WFKV_", "home", "dyfrgi", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "energize", "gems", "rack", "NUMBER", "lib", "rack", "backports", "uri", "common_", "NUMBER", "rb", "NUMBER", "warning", "already", "initialized", "constant", "WFKV_", "Loading", "Spork", "NUMBER", "prefork", "block", "NUMBER", "Loading", "Spork", "NUMBER", "prefork", "block", "NUMBER", "Spork", "be", "ready", "and", "listening", "on", "NUMBER", "Spork", "be", "ready", "and", "listening", "on", "NUMBER", "Spork", "server", "for", "RSpec", "Cucumber", "successfully", "start", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "Spork", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "Cucumber", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "Cucumber", "Guardfile", "has", "be", "re", "evaluated", "NUMBER", "And", "then", "nothing", "regardless", "of", "input", "NUMBER", "Hey", "guys", "I", "ve", "just", "find", "the", "issue", "NUMBER", "It", "s", "fix", "thanks", "for", "the", "report", "and", "the", "broken", "guard", "script", "dyfrgi", "I", "ll", "push", "and", "release", "a", "new", "version", "once", "all", "be", "green", "NUMBER", "Great", "NUMBER", "Thanks", "for", "fix", "A", "quick", "explanation", "When", "the", "Guardfile", "be", "evaluated", "each", "guard", "be", "given", "the", "group", "in", "which", "it", "be", "defined", "or", "default", "if", "the", "guard", "be", "not", "in", "a", "group", "block", "NUMBER", "Note", "that", "you", "couldn", "t", "see", "the", "issue", "happening", "if", "all", "your", "guards", "were", "declared", "in", "named", "group", "that", "was", "my", "case", "for", "instance", "NUMBER", "On", "Guard", "NUMBER", "setup", "the", "group", "variable", "be", "set", "to", "Group", "NUMBER", "new", "default", "so", "when", "Guard", "run", "the", "reload", "method", "for", "instance", "with", "no", "specific", "group", "given", "to", "run", "the", "task", "it", "be", "taking", "all", "the", "group", "in", "group", "including", "the", "default", "group", "and", "run", "the", "task", "for", "all", "the", "guards", "in", "each", "group", "NUMBER", "But", "when", "the", "Guardfile", "was", "re", "evaluated", "in", "Guard", "Dsl", "NUMBER", "reevaluate_guardfile", "we", "were", "clearing", "the", "group", "variable", "so", "the", "next", "time", "Guard", "was", "run", "reload", "with", "no", "specific", "group", "given", "to", "run", "the", "task", "group", "was", "miss", "the", "default", "group", "so", "it", "was", "run", "the", "task", "only", "for", "the", "named", "group", "the", "one", "declared", "explicitly", "in", "the", "Guardfile", "NUMBER", "Hope", "I", "was", "clear", "enough", "NUMBER", "You", "re", "welcome", "you", "can", "now", "grab", "the", "NUMBER", "LINK", "NUMBER", "Nice", "catch", "and", "fix", "NUMBER", "Thanks", "all", "When", "I", "have", "ruby_gntp", "install", "and", "growl", "and", "growl_notify", "not", "install", "Guard", "produces", "the", "following", "message", "on", "startup", "Please", "install", "growl_notify", "or", "growl", "gem", "for", "Mac", "OS", "X", "notification", "support", "and", "add", "it", "to", "your", "Gemfile", "Looking", "at", "the", "code", "while", "the", "error", "message", "definitely", "needs", "ruby_gntp", "add", "to", "it", "Guard", "do", "appear", "to", "be", "checking", "for", "the", "presence", "of", "ruby_gntp", "but", "not", "finding", "it", "NUMBER", "I", "ve", "already", "run", "bundle", "update", "here", "s", "the", "relevant", "section", "of", "my", "Gemfile", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "gem", "guard", "rspec", "if", "RUBY_PLATFORM", "darwin", "i", "then", "gem", "ruby_gntp", "gem", "rb", "fsevent", "end", "I", "tried", "explicitly", "specify", "the", "git", "version", "of", "guard", "in", "case", "the", "change", "hadn", "t", "made", "it", "to", "the", "gem", "in", "the", "repository", "the", "same", "thing", "happens", "without", "doing", "that", "NUMBER", "Thanks", "Thanks", "bundle", "exec", "guard", "has", "eliminated", "the", "message", "I", "was", "just", "typing", "guard", "NUMBER", "So", "much", "for", "doing", "things", "the", "easy", "way", "Since", "you", "re", "use", "Guard", "from", "the", "master", "GitHub", "you", "have", "to", "launch", "it", "with", "bundle", "exec", "NUMBER", "guardfile", "ruby", "guard", "bundler", "do", "watch", "Gemfile", "end", "guard", "rspec", "all_on_start", "false", "all_after_pass", "false", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "end", "Now", "when", "I", "execute", "guard", "it", "just", "parses", "the", "file", "and", "quits", "bundle", "exec", "guard", "d", "Guard", "be", "now", "watching", "at", "Users", "paul", "code", "IM", "code", "extranet", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "Bundler", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "check", "Bundle", "already", "up", "to", "date", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "growlnotify", "version", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "Bundler", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "I", "m", "use", "JRuby", "NUMBER", "on", "OSX", "NUMBER", "Please", "can", "you", "give", "your", "Gemfile", "content", "too", "NUMBER", "Thanks", "Sure", "thing", "NUMBER", "I", "ll", "try", "to", "highlight", "what", "I", "install", "for", "these", "tool", "ruby", "source", "gemcutter", "source", "LINK", "gem", "rails", "NUMBER", "gem", "erubis", "NUMBER", "gem", "authlogic", "NUMBER", "gem", "chronic", "NUMBER", "gem", "exception_notification", "NUMBER", "gem", "workflow", "NUMBER", "gem", "fastercsv", "NUMBER", "gem", "hpricot", "NUMBER", "gem", "will_paginate", "NUMBER", "gem", "netaddr", "NUMBER", "gem", "json_pure", "NUMBER", "gem", "xml", "simple", "NUMBER", "gem", "database_cleaner", "NUMBER", "gem", "clear_empty_attributes", "NUMBER", "gem", "encryptor", "NUMBER", "gem", "attr_encrypted", "NUMBER", "gem", "collectd", "NUMBER", "gem", "newrelic_rpm", "NUMBER", "require", "false", "gem", "rake", "NUMBER", "gem", "aws", "s", "NUMBER", "NUMBER", "gem", "haml", "NUMBER", "gem", "sass", "NUMBER", "gem", "paperclip", "NUMBER", "gem", "default_value_for", "NUMBER", "gem", "carmen", "NUMBER", "gem", "geokit", "NUMBER", "gem", "geokit", "rails", "NUMBER", "NUMBER", "gem", "acts_as_audited", "NUMBER", "rc", "NUMBER", "platform", "jruby", "do", "gem", "trinidad", "NUMBER", "gem", "jruby", "openssl", "NUMBER", "gem", "activerecord", "jdbc", "adapter", "NUMBER", "gem", "jdbc", "mysql", "NUMBER", "gem", "jmx", "NUMBER", "r", "NUMBER", "gem", "celerity", "NUMBER", "end", "platform", "mri", "do", "gem", "mysql", "NUMBER", "NUMBER", "end", "group", "test", "development", "do", "gem", "rspec", "NUMBER", "gem", "rspec", "rails", "NUMBER", "gem", "cucumber", "NUMBER", "gem", "cucumber", "rails", "NUMBER", "gem", "capybara", "NUMBER", "gem", "capybara", "celerity", "NUMBER", "gem", "vcr", "NUMBER", "gem", "webmock", "NUMBER", "BEGIN", "GUARD", "SUPPORT", "gem", "guard", "bundler", "NUMBER", "gem", "guard", "rspec", "NUMBER", "gem", "rb", "fsevent", "NUMBER", "require", "false", "gem", "rb", "inotify", "NUMBER", "require", "false", "END", "GUARD", "SUPPORT", "end", "Sorry", "I", "had", "already", "uninstalled", "the", "growl", "gem", "when", "I", "pasted", "in", "the", "Gemfile", "I", "was", "just", "trying", "to", "simplify", "it", "as", "much", "as", "possible", "NUMBER", "NUMBER", "I", "ll", "try", "upgrading", "JRuby", "to", "NUMBER", "Upgrading", "to", "JRuby", "NUMBER", "and", "Lion", "NUMBER", "seems", "to", "have", "resolve", "this", "issue", "NUMBER", "Hi", "Guard", "be", "not", "detecting", "any", "file", "modifications", "NUMBER", "My", "watches", "be", "I", "expect", "good", "ex", "guard", "cucumber", "cli", "drb", "no", "profile", "color", "format", "progress", "strict", "do", "watch", "r", "features", "NUMBER", "NUMBER", "feature", "watch", "r", "features", "support", "NUMBER", "features", "watch", "r", "features", "step_definitions", "NUMBER", "_steps", "NUMBER", "rb", "end", "and", "when", "I", "run", "Guard", "with", "out", "A", "n", "f", "the", "test", "be", "executed", "without", "any", "issue", "but", "the", "modifications", "on", "users", "NUMBER", "feature", "for", "exemple", "be", "not", "make", "it", "run", "the", "test", "again", "NUMBER", "Interaction", "like", "reload", "and", "NUMBER", "be", "work", "well", "I", "m", "run", "Linux", "Ubuntu", "on", "a", "VirtualMachine", "VirtualBox", "over", "Windows", "NUMBER", "Everything", "run", "under", "ubundu", "except", "my", "editor", "Rails", "NUMBER", "be", "work", "fine", "use", "WebRick", "I", "m", "use", "guard", "NUMBER", "guard", "cucumber", "NUMBER", "guard", "sprok", "NUMBER", "I", "m", "modifying", "my", "sources", "with", "RubyMine", "ON", "WINDOWS", "which", "be", "probably", "the", "main", "reason", "of", "this", "issue", "NUMBER", "inotify", "be", "not", "triggering", "any", "signal", "under", "linux", "NUMBER", "I", "thought", "however", "that", "the", "polling", "system", "of", "guard", "would", "see", "the", "file", "modifications", "NUMBER", "Any", "idea", "Ok", "thanks", "NUMBER", "You", "re", "right", "remove", "the", "rb", "inotify", "worked", "fine", "use", "the", "polling", "NUMBER", "My", "mistake", "it", "be", "work", "fine", "now", "Sorry", "to", "spam", "again", "NUMBER", "In", "the", "same", "topic", "I", "notice", "that", "when", "I", "modify", "a", "file", "triggering", "Spork", "routes", "NUMBER", "rb", "for", "ex", "or", "Guard", "directly", "Guardfile", "or", "doing", "it", "manually", "use", "reload", "command", "Guard", "be", "not", "work", "anymore", "NUMBER", "It", "doesn", "t", "react", "to", "interaction", "commands", "reload", "NUMBER", "neither", "to", "file", "modifications", "NUMBER", "However", "when", "cucumber", "be", "triggered", "Guard", "be", "still", "work", "until", "I", "trigger", "Spork", "or", "Guard", "NUMBER", "I", "guess", "there", "be", "an", "issue", "with", "the", "relading", "process", "for", "Guard", "and", "Spork", "NUMBER", "I", "haven", "t", "change", "those", "generate", "by", "default", "except", "for", "the", "watches", "of", "Spork", "NUMBER", "I", "tried", "to", "run", "it", "with", "debug", "but", "everything", "looks", "fine", "and", "I", "don", "t", "know", "why", "it", "be", "waiting", "without", "doing", "anything", "NUMBER", "Please", "can", "you", "also", "give", "your", "full", "Guardfile", "Gemfile", "NUMBER", "Thanks", "Sure", "NUMBER", "Here", "be", "my", "file", "LINK", "I", "did", "some", "other", "test", "NUMBER", "When", "Guard", "be", "blocked", "I", "can", "still", "press", "enter", "to", "run", "all", "the", "test", "and", "if", "there", "be", "some", "modifications", "of", "watched", "file", "for", "Guard", "or", "Spork", "then", "it", "reloads", "Guard", "or", "Spork", "What", "I", "guess", "be", "that", "Guard", "be", "waiting", "something", "special", "to", "happend", "that", "be", "triggered", "by", "the", "Enter", "key", "I", "also", "get", "another", "issue", "which", "be", "probably", "linked", "to", "this", "one", "NUMBER", "When", "I", "let", "run", "guard", "for", "a", "little", "time", "NUMBER", "It", "often", "block", "my", "virtual", "machine", "NUMBER", "By", "block", "I", "mean", "I", "can", "t", "run", "any", "process", "anymore", "neither", "send", "a", "signal", "to", "guard", "NUMBER", "Only", "the", "current", "processes", "be", "work", "other", "shells", "be", "able", "to", "use", "shell", "commands", "but", "not", "anymore", "binaries", "NUMBER", "I", "can", "t", "login", "anymore", "too", "So", "my", "guess", "be", "that", "it", "be", "taking", "all", "the", "thread", "or", "another", "ressource", "limit", "for", "itself", "preventing", "any", "other", "process", "to", "run", "NUMBER", "I", "never", "get", "such", "an", "issue", "before", "and", "I", "did", "the", "test", "NUMBER", "times", "it", "be", "only", "happening", "when", "guard", "be", "run", "NUMBER", "I", "ll", "try", "to", "debug", "it", "a", "little", "Please", "can", "you", "try", "to", "launch", "guard", "with", "the", "debug", "option", "bundle", "exec", "guard", "d", "and", "give", "the", "complete", "output", "NUMBER", "Thanks", "I", "did", "NUMBER", "and", "this", "time", "I", "get", "something", "weirder", "NUMBER", "The", "freeze", "appeared", "during", "the", "cucumber", "test", "one", "Ctrl", "C", "interrupt", "the", "process", "and", "then", "freeze", "again", "without", "any", "possibility", "to", "restore", "the", "system", "Here", "be", "the", "log", "bash", "bundle", "exec", "guard", "d", "Please", "install", "rb", "inotify", "gem", "for", "Linux", "inotify", "support", "Using", "polling", "Please", "help", "us", "to", "support", "your", "system", "better", "than", "that", "NUMBER", "Please", "install", "libnotify", "gem", "for", "Linux", "notification", "support", "and", "add", "it", "to", "your", "Gemfile", "Guard", "be", "now", "watching", "at", "media", "sf_Projects", "commemora", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "Spork", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Killing", "Spork", "servers", "with", "PID", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "Starting", "Spork", "for", "Cucumber", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Spawned", "Spork", "server", "NUMBER", "bundle", "exec", "spork", "cu", "p", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "ps", "aux", "awk", "spork", "awk", "print", "NUMBER", "Using", "Cucumber", "Preloading", "Rails", "environment", "Loading", "Spork", "NUMBER", "prefork", "block", "NUMBER", "Spork", "be", "ready", "and", "listening", "on", "NUMBER", "Spork", "server", "for", "Cucumber", "successfully", "start", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "Spork", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_begin", "executed", "for", "Guard", "Cucumber", "Running", "all", "features", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Command", "execution", "bundle", "exec", "cucumber", "drb", "no", "profile", "color", "format", "progress", "strict", "tags", "wip", "require", "home", "crystalin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "commemora", "gems", "guard", "cucumber", "NUMBER", "lib", "guard", "cucumber", "notification_formatter", "NUMBER", "rb", "format", "Guard", "Cucumber", "NotificationFormatter", "out", "dev", "null", "require", "features", "features", "Disabling", "profiles", "NUMBER", "Running", "test", "with", "args", "no", "profile", "color", "format", "progress", "strict", "tags", "wip", "require", "home", "crystalin", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "commemora", "gems", "guard", "cucumber", "NUMBER", "lib", "guard", "cucumber", "notification_formatter", "NUMBER", "rb", "format", "Guard", "Cucumber", "NotificationFormatter", "out", "dev", "null", "require", "features", "features", "NUMBER", "Disabling", "profiles", "NUMBER", "It", "froze", "there", "NUMBER", "Then", "hitting", "Ctrl", "C", "gives", "me", "those", "lines", "more", "bash", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "scenarios", "NUMBER", "pass", "NUMBER", "steps", "NUMBER", "pass", "NUMBER", "m", "NUMBER", "s", "Done", "NUMBER", "DEBUG", "NUMBER", "NUMBER", "NUMBER", "Hook", "start_end", "executed", "for", "Guard", "Cucumber", "nap_time", "NUMBER", "nap_time", "NUMBER", "Now", "it", "be", "completely", "frozen", "NUMBER", "The", "nap_time", "be", "just", "a", "little", "hack", "I", "ve", "do", "to", "see", "when", "guard", "be", "watching", "the", "file", "it", "be", "a", "simple", "put", "in", "the", "polling", "NUMBER", "rb", "Sometimes", "it", "runs", "for", "a", "longer", "time", "NUMBER", "mins", "without", "freezing", "but", "in", "all", "the", "cases", "I", "don", "t", "do", "anything", "NUMBER", "i", "start", "guard", "and", "wait", "without", "modifying", "file", "or", "run", "commands", "on", "the", "VM", "There", "might", "be", "something", "wrong", "in", "my", "guardfile", "too", "NUMBER", "I", "looked", "at", "the", "excetion", "of", "guard", "and", "after", "run", "the", "test", "and", "while", "waiting", "the", "processes", "be", "calling", "stat", "NUMBER", "NUMBER", "on", "all", "the", "file", "of", "my", "projects", "even", "the", "caches", "parts", "tmp", "and", "NUMBER", "without", "stoping", "I", "guess", "the", "polling", "be", "based", "on", "the", "stat", "call", "but", "while", "those", "file", "the", "calls", "be", "in", "a", "loop", "and", "never", "stops", "here", "be", "a", "part", "bash", "stat", "NUMBER", "media", "sf_Projects", "commemora", "NUMBER", "sass", "cache", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "fbf", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "st_mode", "S_IFDIR", "NUMBER", "st_size", "NUMBER", "NUMBER", "NUMBER", "stat", "NUMBER", "media", "sf_Projects", "commemora", "NUMBER", "sass", "cache", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "fbf", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "_color", "NUMBER", "scssc", "st_mode", "S_IFREG", "NUMBER", "st_size", "NUMBER", "NUMBER", "NUMBER", "stat", "NUMBER", "media", "sf_Projects", "commemora", "NUMBER", "sass", "cache", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "fbf", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "_general", "NUMBER", "scssc", "st_mode", "S_IFREG", "NUMBER", "st_size", "NUMBER", "NUMBER", "NUMBER", "stat", "NUMBER", "media", "sf_Projects", "commemora", "NUMBER", "sass", "cache", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "cec", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "st_mode", "S_IFDIR", "NUMBER", "st_size", "NUMBER", "NUMBER", "NUMBER", "stat", "NUMBER", "media", "sf_Projects", "commemora", "NUMBER", "sass", "cache", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "cec", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "NUMBER", "st_mode", "S_IFDIR", "NUMBER", "st_size", "NUMBER", "NUMBER", "NUMBER", "stat", "NUMBER", "media", "sf_Projects", "commemora", "NUMBER", "sass", "cache", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "cec", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "NUMBER", "st_mode", "S_IFDIR", "NUMBER", "st_size", "NUMBER", "NUMBER", "NUMBER", "sched_yield", "I", "did", "another", "test", "I", "remove", "everything", "inside", "my", "Guard", "file", "so", "it", "be", "actually", "empty", "but", "when", "i", "call", "guard", "it", "be", "still", "looking", "for", "every", "file", "inside", "my", "projects", "for", "each", "loop", "So", "it", "be", "normal", "to", "watch", "all", "the", "file", "I", "didn", "t", "know", "that", "what", "be", "the", "purpose", "I", "m", "not", "sure", "I", "understand", "why", "not", "only", "look", "at", "the", "watched", "file", "folders", "I", "delete", "the", "NUMBER", "sass", "cache", "but", "I", "did", "the", "test", "with", "only", "this", "in", "my", "Guardfile", "ignore_paths", "NUMBER", "idea", "and", "it", "be", "ignoring", "that", "path", "As", "I", "m", "the", "only", "one", "who", "seems", "to", "have", "this", "issue", "NUMBER", "I", "suggest", "we", "close", "it", "NUMBER", "It", "be", "probably", "linked", "to", "my", "system", "NUMBER", "I", "ll", "try", "to", "update", "the", "VM", "ubuntu", "and", "see", "if", "the", "issue", "be", "still", "here", "and", "from", "where", "it", "comes", "I", "start", "to", "think", "that", "the", "number", "of", "access", "guard", "be", "make", "to", "the", "file", "from", "the", "shared", "folder", "make", "the", "hdd", "driver", "goes", "crazy", "or", "NUMBER", "dunno", "Hello", "again", "all", "I", "was", "use", "NUMBER", "before", "my", "recent", "pull", "was", "accepted", "NUMBER", "Now", "I", "be", "trying", "to", "use", "NUMBER", "and", "I", "get", "this", "when", "I", "do", "guard", "list", "or", "guard", "T", "NUMBER", "I", "saw", "that", "this", "was", "an", "error", "before", "NUMBER", "I", "wonder", "if", "I", "be", "maybe", "just", "implement", "incorrectly", "NUMBER", "Here", "be", "the", "error", "I", "see", "NUMBER", "ree", "NUMBER", "NUMBER", "KraussMac", "Documents", "git_tygerweb", "tygerweb", "guard", "list", "Turn", "off", "AMQP", "RabbitMQ", "support", "NUMBER", "Authenticating", "mongo", "NUMBER", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "load_missing_constant", "Guard", "be", "not", "miss", "constant", "DslDescriber", "ArgumentError", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "const_missing", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "const_missing", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "list", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "bin", "guard", "NUMBER", "ree", "NUMBER", "NUMBER", "KraussMac", "Documents", "git_tygerweb", "tygerweb", "guard", "T", "Turn", "off", "AMQP", "RabbitMQ", "support", "NUMBER", "Authenticating", "mongo", "NUMBER", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "load_missing_constant", "Guard", "be", "not", "miss", "constant", "DslDescriber", "ArgumentError", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "const_missing", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "const_missing", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "show", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "bin", "guard", "NUMBER", "Guardfile", "rails_rake_task", "true", "require", "config", "boot", "options", "environment", "ENV", "RAILS_ENV", "development", "NUMBER", "dup", "ENV", "RAILS_ENV", "options", "environment", "RAILS_ENV", "NUMBER", "replace", "options", "environment", "if", "defined", "RAILS_ENV", "require", "config", "environment", "require", "util", "guards", "ftp_guard", "group", "ftp", "do", "guard", "ftpguard", "do", "watch", "r", "tmp", "facbingham", "NUMBER", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "facgoodingjms", "NUMBER", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "caiftp", "washington", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "owyheeft", "NUMBER", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "caiftp", "FortHall", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "facbingham", "NUMBER", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "facwhitley", "inbox", "NUMBER", "NUMBER", "csv", "m", "NUMBER", "m", "watch", "r", "tmp", "facordes", "inbox", "NUMBER", "NUMBER", "xml", "m", "NUMBER", "m", "end", "end", "util", "guards", "ftp_guard", "NUMBER", "rb", "require", "guard", "require", "guard", "guard", "require", "mongoid", "require", "sync", "import", "integration", "jms_integration", "module", "Guard", "class", "FtpGuard", "TAG", "fac_id", "file_name", "path", "file_type", "txt", "i_type", "ftp", "mapping", "VendorCai", "TXT_MAP", "jms_procs", "VendorCai", "PARSE_BLOCK", "jms_i", "NUMBER", "save", "jms_i", "NUMBER", "synchronize", "when", "NUMBER", "fork_ftp", "jms_i", "JmsIntegration", "NUMBER", "create", "facility_id", "fac_id", "file_name", "path", "file_type", "csv", "i_type", "ftp", "jms_i", "NUMBER", "synchronize", "when", "NUMBER", "fork_ftp", "jms_i", "JmsIntegration", "NUMBER", "create", "facility_id", "fac_id", "file_name", "path", "file_type", "xml", "i_type", "ftp", "jms_i", "NUMBER", "synchronize", "else", "puts", "Hey", "I", "be", "else", "end", "end", "def", "run_on_change", "paths", "new_paths", "new_paths", "TAG", "paths", "NUMBER", "file_name", "paths", "NUMBER", "vendor", "paths", "NUMBER", "new_paths", "NUMBER", "size", "NUMBER", "choose_fac", "new_paths", "NUMBER", "new_paths", "NUMBER", "each", "do", "np", "choose_fac", "np", "end", "end", "def", "fork_ftp", "fblock", "fork", "do", "yield", "fblock", "end", "end", "end", "end", "Very", "funny", "error", "description", "NUMBER", "Guard", "be", "not", "miss", "constant", "DslDescriber", "Haha", "if", "it", "be", "not", "miss", "then", "what", "be", "the", "problem", "lol", "It", "doesn", "t", "effect", "run", "my", "guards", "as", "before", "but", "I", "just", "cannot", "list", "my", "available", "guards", "which", "be", "somewhat", "annoying", "NUMBER", "Kevin", "have", "you", "tried", "to", "launch", "guard", "with", "bundle", "exec", "bundle", "exec", "guard", "list", "I", "did", "try", "bundle", "exec", "guard", "list", "ree", "NUMBER", "NUMBER", "KraussMac", "Documents", "git_tygerweb", "tygerweb", "bundle", "exec", "guard", "list", "Turn", "off", "AMQP", "RabbitMQ", "support", "NUMBER", "Authenticating", "mongo", "NUMBER", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "load_missing_constant", "Guard", "be", "not", "miss", "constant", "DslDescriber", "ArgumentError", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "const_missing", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "const_missing", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "list", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "bin", "guard", "NUMBER", "I", "then", "tried", "netzpirat", "s", "idea", "but", "use", "gem", "open", "and", "it", "do", "get", "me", "farther", "along", "in", "the", "file", "NUMBER", "ree", "NUMBER", "NUMBER", "KraussMac", "Documents", "git_tygerweb", "tygerweb", "guard", "T", "Turn", "off", "AMQP", "RabbitMQ", "support", "NUMBER", "Authenticating", "mongo", "NUMBER", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "load_missing_constant", "Guard", "be", "not", "miss", "constant", "UI", "ArgumentError", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "const_missing", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "telmate", "Documents", "git_tygerweb", "tygerweb", "help", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "lib", "active_support", "dependencies", "NUMBER", "rb", "NUMBER", "in", "const_missing", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "show", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "each", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "show", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "send", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "telmate", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "bin", "guard", "NUMBER", "Now", "we", "get", "this", "error", "NUMBER", "Guard", "be", "not", "miss", "constant", "UI", "Again", "with", "the", "not", "miss", "hehe", "NUMBER", "So", "finally", "I", "change", "def", "show", "some", "more", "add", "to", "all", "the", "Guard", "constant", "references", "NUMBER", "def", "show", "Guard", "DslDescriber", "NUMBER", "evaluate_guardfile", "options", "Guard", "DslDescriber", "NUMBER", "guardfile_structure", "NUMBER", "each", "do", "group", "unless", "group", "guards", "NUMBER", "empty", "if", "group", "group", "Guard", "UI", "NUMBER", "info", "Group", "group", "group", "else", "Guard", "UI", "NUMBER", "info", "global", "end", "group", "guards", "NUMBER", "each", "do", "guard", "line", "guard", "name", "unless", "guard", "options", "NUMBER", "empty", "line", "guard", "options", "NUMBER", "collect", "k", "v", "k", "v", "NUMBER", "inspect", "NUMBER", "join", "end", "Guard", "UI", "NUMBER", "info", "line", "end", "end", "end", "Guard", "UI", "NUMBER", "info", "end", "And", "then", "no", "error", "with", "listing", "NUMBER", "If", "you", "guys", "want", "I", "can", "commit", "and", "put", "in", "a", "pull", "request", "but", "w", "e", "be", "easiest", "D", "Kevin", "When", "I", "write", "a", "fail", "test", "Guard", "automatically", "runs", "the", "example", "NUMBER", "It", "fail", "saying", "NUMBER", "example", "NUMBER", "failure", "NUMBER", "Then", "I", "have", "to", "go", "to", "the", "terminal", "and", "look", "what", "the", "actual", "error", "be", "NUMBER", "What", "I", "would", "love", "to", "see", "in", "the", "growl", "notification", "be", "ruby", "NUMBER", "SchoolsController", "GET", "new", "assigns", "school", "Failure", "Error", "assigns", "school", "NUMBER", "should", "eq", "school", "expected", "TAG", "get", "nil", "compared", "use", "And", "I", "can", "configure", "it", "to", "be", "sticky", "so", "I", "have", "the", "explanation", "right", "there", "for", "a", "couple", "of", "seconds", "NUMBER", "That", "way", "I", "don", "t", "need", "to", "switch", "context", "NUMBER", "Now", "this", "behaviour", "should", "only", "happen", "when", "there", "be", "just", "one", "fail", "test", "NUMBER", "If", "there", "be", "many", "then", "the", "current", "behaviour", "be", "the", "right", "one", "NUMBER", "What", "do", "you", "think", "Why", "not", "we", "can", "add", "that", "as", "an", "option", "feel", "free", "to", "make", "a", "pull", "request", "on", "guard", "rspec", "NUMBER", "I", "close", "this", "issue", "because", "it", "isn", "t", "in", "the", "scope", "of", "guard", "but", "on", "guard", "rspec", "NUMBER", "I", "see", "NUMBER", "So", "the", "available", "space", "could", "be", "a", "problem", "on", "some", "notifications", "systems", "NUMBER", "I", "use", "growl", "and", "themes", "can", "be", "configured", "on", "a", "per", "application", "basis", "NUMBER", "So", "in", "my", "case", "I", "would", "configure", "growl", "to", "use", "Music", "Video", "for", "Guard", "and", "the", "default", "for", "everything", "else", "NUMBER", "I", "ll", "check", "if", "that", "can", "be", "configured", "programatically", "NUMBER", "I", "will", "check", "guard", "jasmine", "so", "see", "how", "did", "you", "implement", "it", "NUMBER", "Thanks", "You", "be", "right", "bad", "idea", "Just", "so", "people", "get", "efficiency", "out", "of", "the", "box", "NUMBER", "Don", "t", "you", "think", "it", "s", "redundant", "with", "each", "specific", "platform", "section", "And", "what", "about", "the", "notification", "gems", "I", "think", "it", "ll", "be", "confusing", "maybe", "we", "could", "just", "add", "the", "require", "false", "if", "RUBY_PLATFORM", "xxx", "i", "directly", "in", "each", "section", "NUMBER", "In", "my", "view", "the", "notification", "gems", "be", "non", "essential", "NUMBER", "In", "contrast", "these", "FS", "gems", "increase", "efficiency", "and", "performance", "so", "I", "think", "people", "should", "install", "them", "alongside", "guard", "itself", "NUMBER", "Yeah", "but", "I", "think", "it", "s", "more", "complicate", "than", "that", "for", "example", "win", "NUMBER", "console", "be", "needed", "in", "Windows", "too", "NUMBER", "So", "a", "universal", "section", "after", "each", "platform", "section", "would", "be", "better", "with", "gems", "needed", "for", "all", "platforms", "notifications", "gem", "include", "The", "README", "file", "currently", "says", "Install", "the", "win", "NUMBER", "console", "gem", "if", "you", "want", "colors", "in", "your", "terminal", "so", "it", "s", "non", "essential", "IMHO", "NUMBER", "Anyway", "do", "as", "you", "wish", "having", "the", "information", "somewhere", "be", "better", "than", "not", "at", "all", "NUMBER", "I", "think", "there", "be", "maybe", "a", "solution", "I", "ll", "propose", "something", "later", "NUMBER", "In", "the", "meantime", "I", "ve", "add", "a", "sentence", "in", "the", "README", "that", "could", "help", "a", "bit", "LINK", "I", "agree", "the", "required", "false", "approach", "seems", "the", "good", "to", "me", "NUMBER", "We", "should", "split", "the", "current", "installation", "section", "in", "the", "README", "with", "an", "Installation", "section", "that", "include", "directly", "all", "listeners", "gems", "plus", "another", "sub", "section", "for", "the", "notifications", "stuff", "NUMBER", "It", "should", "be", "way", "more", "clear", "NUMBER", "Agreed", "Great", "thanks", "These", "be", "the", "change", "that", "I", "made", "on", "this", "other", "branch", "NUMBER", "Which", "uses", "the", "guard", "options", "to", "allow", "for", "any", "object", "to", "be", "the", "return", "NUMBER", "Ok", "excluding", "my", "last", "comment", "everything", "looks", "good", "to", "me", "Well", "do", "Again", "sorry", "for", "the", "comments", "one", "the", "code", "style", "details", "If", "you", "re", "already", "too", "annoyed", "don", "t", "bother", "and", "we", "ll", "do", "it", "ourselves", "P", "No", "problem", "Rymai", "NUMBER", "Thanks", "for", "helping", "me", "become", "a", "better", "programmer", "D", "Also", "thnx", "to", "netzpirat", "too", "Thanks", "all", "Thanks", "all", "that", "s", "awesome", "Thanks", "all", "D", "Messages", "directed", "at", "the", "user", "should", "be", "printed", "to", "STDERR", "because", "when", "a", "guard", "program", "s", "STDOUT", "be", "connected", "to", "other", "program", "via", "UNIX", "pipes", "user", "message", "interfere", "with", "valid", "guard", "output", "NUMBER", "Play", "nice", "Hi", "thanks", "for", "this", "however", "I", "m", "not", "sure", "I", "understand", "the", "difference", "between", "user", "message", "and", "valid", "guard", "output", "The", "thing", "be", "you", "print", "all", "Guard", "s", "output", "to", "STDERR", "shouldn", "t", "there", "be", "only", "the", "error", "message", "printed", "to", "STDERR", "Maybe", "you", "can", "describe", "a", "bit", "more", "with", "examples", "what", "was", "the", "issue", "and", "how", "this", "pull", "request", "resolve", "it", "Thanks", "NUMBER", "I", "use", "Guard", "s", "directory", "watching", "abilities", "in", "this", "simple", "script", "LINK", "herald", "whose", "STDOUT", "be", "consumed", "by", "a", "different", "program", "further", "downstream", "on", "a", "UNIX", "pipeline", "NUMBER", "The", "problem", "be", "that", "Guard", "be", "emitting", "the", "following", "error", "warning", "message", "to", "STDOUT", "instead", "of", "to", "the", "more", "suitable", "STDERR", "Please", "install", "rb", "inotify", "gem", "for", "Linux", "inotify", "support", "Using", "polling", "Please", "help", "us", "to", "support", "your", "system", "better", "than", "that", "NUMBER", "This", "interferes", "with", "the", "downstream", "processing", "of", "my", "simple", "wrapper", "script", "s", "actual", "output", "NUMBER", "You", "might", "ask", "why", "don", "t", "you", "install", "the", "suggested", "rb", "inotify", "gem", "to", "avoid", "get", "that", "Guard", "warning", "The", "reason", "be", "that", "such", "a", "task", "can", "only", "be", "performed", "by", "the", "end", "user", "who", "uses", "my", "scripts", "I", "have", "no", "control", "over", "their", "machines", "NUMBER", "And", "when", "Guard", "s", "warning", "be", "printed", "to", "STDOUT", "it", "be", "silently", "consumed", "by", "my", "downstream", "script", "and", "the", "end", "user", "never", "sees", "it", "NUMBER", "In", "contrast", "if", "Guard", "printed", "warnings", "to", "STDERR", "the", "end", "user", "_would_", "see", "them", "Ok", "I", "see", "the", "point", "but", "Guard", "doesn", "t", "print", "only", "warnings", "for", "example", "here", "LINK", "L", "NUMBER", "what", "do", "you", "think", "we", "should", "we", "do", "with", "them", "I", "would", "print", "those", "to", "STDERR", "also", "NUMBER", "They", "be", "meant", "for", "the", "user", "not", "program", "consuming", "Guard", "s", "actual", "output", "NUMBER", "Think", "of", "STDERR", "as", "a", "global", "message", "bus", "such", "as", "growl", "notifications", "that", "be", "simultaneously", "available", "to", "all", "program", "in", "a", "UNIX", "pipeline", "NUMBER", "You", "can", "use", "them", "to", "notify", "the", "user", "instantly", "from", "anywhere", "in", "the", "pipeline", "NUMBER", "Also", "because", "it", "be", "global", "you", "should", "prefix", "your", "output", "with", "the", "program", "name", "ruby", "STDERR", "NUMBER", "puts", "guard", "some", "message", "here", "or", "an", "even", "shorter", "way", "to", "do", "it", "warn", "guard", "some", "message", "here", "Well", "said", "NUMBER", "Going", "further", "since", "the", "purpose", "of", "UI", "be", "to", "convey", "Guard", "diagnostics", "perhaps", "a", "Logger", "LINK", "doc", "NUMBER", "org", "stdlib", "libdoc", "logger", "rdoc", "Logger", "NUMBER", "html", "connected", "to", "STDERR", "could", "replace", "UI", "entirely", "ruby", "UI", "Logger", "NUMBER", "new", "STDERR", "Does", "a", "color", "implementation", "really", "belong", "in", "Guard", "I", "would", "use", "a", "different", "library", "LINK", "ansicolor", "doc", "index", "NUMBER", "html", "for", "that", "NUMBER", "True", "that", "can", "be", "disheartening", "NUMBER", "I", "ve", "dealt", "with", "my", "fair", "share", "of", "such", "cases", "and", "in", "the", "end", "learned", "to", "cope", "by", "just", "use", "my", "own", "fork", "as", "the", "official", "repository", "for", "my", "own", "projects", "NUMBER", "In", "this", "case", "flori", "seems", "to", "be", "active", "on", "his", "other", "projects", "so", "there", "s", "a", "good", "chance", "he", "would", "be", "willing", "to", "look", "at", "term", "ansicolor", "s", "pending", "issue", "LINK", "ansicolor", "issue", "NUMBER", "Yeah", "I", "totally", "agree", "on", "what", "netzpirat", "but", "if", "you", "want", "to", "change", "that", "I", "see", "no", "problem", "about", "it", "NUMBER", "Maybe", "we", "can", "use", "LINK", "feel", "free", "to", "send", "another", "pull", "request", "NUMBER", "In", "the", "meantime", "I", "merge", "this", "one", "NUMBER", "Thanks", "It", "s", "possible", "to", "switch", "of", "coloring", "globally", "by", "calling", "Term", "ANSIColor", "coloring", "STDOUT", "NUMBER", "isatty", "at", "the", "beginning", "of", "your", "script", "for", "exactly", "this", "use", "case", "piping", "to", "other", "program", "NUMBER", "Hey", "guys", "sorry", "I", "m", "a", "bit", "late", "but", "I", "don", "t", "feel", "comfortable", "with", "write", "what", "s", "not", "diagnostic", "to", "me", "to", "STDERR", "NUMBER", "Take", "for", "example", "the", "RSpec", "guard", "it", "runs", "specs", "and", "display", "the", "summary", "NUMBER", "I", "agree", "that", "the", "main", "process", "here", "be", "the", "specs", "that", "be", "run", "BUT", "if", "I", "m", "not", "there", "and", "can", "t", "see", "a", "visual", "or", "sound", "or", "whatever", "signal", "that", "my", "senses", "can", "feel", "output", "it", "s", "worthless", "unless", "I", "have", "a", "script", "that", "use", "the", "return", "value", "and", "run", "something", "else", "or", "whatever", "so", "I", "think", "in", "this", "case", "it", "s", "not", "diagnostic", "NUMBER", "The", "problem", "here", "be", "simply", "that", "message", "outputted", "by", "Guard", "itself", "for", "instance", "by", "Guard", "Listener", "Darwin", "should", "be", "only", "warning", "error", "deprecation", "debug", "and", "should", "be", "outputted", "to", "STDERR", "NUMBER", "BUT", "guards", "implementation", "should", "be", "able", "to", "choose", "whether", "they", "want", "to", "output", "warning", "error", "deprecation", "debug", "message", "STDERR", "or", "normal", "info", "actually", "useful", "message", "STDOUT", "NUMBER", "The", "thing", "with", "the", "new", "implementation", "be", "that", "guards", "who", "want", "to", "output", "to", "STDOUT", "will", "use", "puts", "this", "be", "fine", "but", "in", "doing", "so", "they", "now", "bypass", "any", "Guard", "s", "control", "decoration", "whatever", "NUMBER", "We", "re", "losing", "control", "guys", "P", "We", "should", "definitely", "keep", "UI", "NUMBER", "info", "STDOUT", "in", "order", "to", "keep", "guards", "under", "control", "D", "lol", "do", "you", "get", "what", "I", "m", "trying", "to", "say", "Regarding", "the", "color", "issue", "I", "agree", "to", "externalize", "it", "NUMBER", "I", "know", "that", "STDERR", "be", "by", "default", "write", "to", "my", "console", "that", "s", "not", "my", "point", "here", "it", "s", "not", "because", "users", "will", "not", "see", "anything", "change", "that", "it", "s", "the", "right", "decision", "NUMBER", "Regarding", "the", "RSpec", "example", "I", "don", "t", "agree", "because", "if", "it", "s", "diagnostics", "it", "means", "that", "I", "can", "skip", "these", "message", "entirely", "NUMBER", "But", "I", "don", "t", "because", "my", "development", "rely", "on", "this", "even", "if", "no", "other", "program", "be", "use", "this", "output", "NUMBER", "Regarding", "the", "losing", "control", "joke", "in", "the", "first", "place", "what", "I", "meant", "be", "that", "currently", "guards", "be", "advised", "to", "use", "the", "Guard", "UI", "class", "to", "output", "message", "to", "the", "console", "in", "that", "sense", "we", "have", "some", "control", "for", "example", "if", "ENV", "GUARD_ENV", "be", "true", "we", "don", "t", "output", "anything", "and", "yes", "I", "know", "I", "m", "free", "with", "Ruby", "come", "on", "Michael", "Ok", "I", "ll", "discuss", "that", "face", "to", "face", "with", "rymai", "tomorrow", "Thanks", "for", "your", "feedback", "netzpirat", "No", "problem", "Michi", "No", "big", "deal", "really", "It", "s", "just", "that", "it", "seems", "to", "me", "that", "sunaku", "has", "propose", "a", "solution", "that", "fix", "his", "particular", "problem", "that", "s", "fine", "but", "there", "were", "other", "solutions", "to", "it", "that", "could", "maybe", "be", "better", "NUMBER", "We", "ll", "discuss", "that", "tomorrow", "with", "the", "boss", "NUMBER", "P", "In", "my", "project", "I", "m", "use", "guard", "to", "some", "standard", "stuff", "SASS", "Livereload", "etc", "NUMBER", "I", "m", "trying", "to", "capture", "output", "to", "change", "it", "a", "little", "bit", "to", "fit", "my", "project", "NUMBER", "Because", "of", "use", "STDERR", "insted", "of", "stderr", "I", "m", "unable", "to", "capture", "output", "from", "Guard", "NUMBER", "art", "method", "use", "popular", "method", "def", "capture_stderr", "previous_stderr", "stderr", "stderr", "StringIO", "NUMBER", "new", "yield", "stderr", "NUMBER", "ring", "ensure", "stderr", "previous_stderr", "end", "I", "can", "t", "change", "stderr", "to", "STDERR", "in", "this", "method", "because", "STDERR", "be", "a", "constant", "NUMBER", "I", "would", "change", "STDERR", "to", "stderr", "everywhere", "in", "the", "Guard", "NUMBER", "This", "be", "quick", "fix", "NUMBER", "In", "more", "elegant", "way", "would", "be", "nice", "to", "have", "module", "with", "all", "Guard", "message", "and", "overwrite", "it", "in", "my", "own", "project", "NUMBER", "What", "do", "you", "think", "I", "always", "in", "favor", "of", "the", "elegant", "way", "guard", "core", "team", "what", "do", "you", "think", "You", "have", "right", "NUMBER", "But", "I", "think", "this", "be", "rather", "solution", "for", "libraries", "which", "be", "use", "guard", "and", "will", "be", "implement", "own", "solutions", "NUMBER", "However", "in", "future", "major", "version", "guard", "can", "force", "plugins", "to", "implement", "some", "kind", "of", "interface", "or", "abstract", "class", "to", "message", "NUMBER", "If", "you", "know", "better", "solution", "to", "customize", "terminal", "or", "notification", "output", "please", "let", "me", "know", "NUMBER", "Unfortunately", "method", "capture_stderr", "which", "i", "mention", "before", "can", "only", "hide", "output", "NUMBER", "I", "don", "t", "have", "capabilities", "to", "redirect", "and", "change", "it", "NUMBER", "You", "have", "right", "probably", "listen", "will", "be", "better", "for", "my", "project", "NUMBER", "Growl", "NUMBER", "doesn", "t", "include", "currently", "growlnotify", "itself", "and", "though", "growlnotify", "from", "NUMBER", "still", "works", "it", "s", "use", "the", "older", "API", "and", "not", "GNTP", "NUMBER", "GNTP", "would", "allow", "for", "compatibility", "with", "growl", "for", "windows", "and", "linux", "as", "well", "which", "neither", "of", "the", "suggested", "options", "will", "work", "with", "NUMBER", "This", "be", "really", "just", "a", "placemarker", "issue", "ATM", "and", "more", "of", "a", "feature", "request", "and", "note", "to", "self", "than", "a", "bug", "NUMBER", "I", "m", "thinking", "of", "tackling", "this", "one", "myself", "after", "porting", "growltunes", "NUMBER", "Yep", "the", "growl_notify", "gem", "has", "already", "be", "update", "to", "support", "Growl", "NUMBER", "but", "I", "think", "we", "ll", "need", "to", "say", "goodbye", "to", "the", "growl", "gem", "NUMBER", "I", "think", "you", "should", "look", "at", "ruby_gntp", "LINK", "_gntp", "for", "NUMBER", "Ok", "very", "interesting", "so", "because", "of", "different", "LINK", "spork", "issue", "NUMBER", "issue", "LINK", "rspec", "issue", "NUMBER", "issuecomment", "NUMBER", "with", "growl_notify", "we", "could", "replace", "it", "by", "ruby_gntp", "for", "Growl", "NUMBER", "and", "keep", "growl", "gem", "for", "Growl", "NUMBER", "Right", "I", "think", "so", "NUMBER", "Thanks", "all", "NUMBER", "It", "looks", "like", "do", "work", "for", "me", "use", "the", "git", "repo", "NUMBER", "with", "Growl", "NUMBER", "it", "seems", "to", "not", "work", "I", "get", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "gems", "ruby_gntp", "NUMBER", "lib", "ruby_gntp", "NUMBER", "rb", "NUMBER", "in", "initialize", "Connection", "refused", "connect", "NUMBER", "Errno", "ECONNREFUSED", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "gems", "ruby_gntp", "NUMBER", "lib", "ruby_gntp", "NUMBER", "rb", "NUMBER", "in", "open", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "gems", "ruby_gntp", "NUMBER", "lib", "ruby_gntp", "NUMBER", "rb", "NUMBER", "in", "send_and_recieve", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "gems", "ruby_gntp", "NUMBER", "lib", "ruby_gntp", "NUMBER", "rb", "NUMBER", "in", "register", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "bundler", "gems", "guard", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "fc", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "try_ruby_gntp", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "bundler", "gems", "guard", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "fc", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "require_growl", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "bundler", "gems", "guard", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "fc", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "turn_on", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "bundler", "gems", "guard", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "fc", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "setup", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "bundler", "gems", "guard", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "fc", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "bundler", "gems", "guard", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "fc", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "bundler", "gems", "guard", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "fc", "bin", "guard", "NUMBER", "in", "TAG", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "Thibaud", "Codes", "test", "vendor", "ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "netzpirat", "be", "you", "sure", "that", "s", "work", "with", "Growl", "NUMBER", "I", "have", "the", "Listen", "for", "incoming", "notifications", "checked", "and", "I", "have", "an", "open", "port", "bash", "lsof", "i", "grep", "LISTEN", "grep", "i", "growl", "GrowlHelp", "NUMBER", "Thibaud", "NUMBER", "u", "IPv", "NUMBER", "NUMBER", "xffffff", "NUMBER", "d", "NUMBER", "da", "NUMBER", "NUMBER", "t", "NUMBER", "TCP", "NUMBER", "LISTEN", "But", "I", "get", "the", "Connection", "refused", "connect", "NUMBER", "Errno", "ECONNREFUSED", "issue", "Yep", "that", "s", "weird", "NUMBER", "We", "can", "wait", "to", "see", "if", "I", "m", "the", "only", "one", "with", "that", "error", "NUMBER", "Your", "DSL", "sounds", "good", "NUMBER", "Great", "stuff", "NUMBER", "sorry", "guys", "NUMBER", "I", "haven", "t", "be", "paying", "much", "attention", "NUMBER", "I", "really", "should", "have", "mention", "something", "about", "the", "history", "of", "GNTP", "and", "that", "technically", "the", "Growl", "Network", "Transport", "Protocol", "was", "use", "by", "growl", "for", "windows", "long", "before", "it", "was", "solidified", "as", "a", "shared", "protocol", "NUMBER", "Technically", "there", "be", "still", "interoperability", "problem", "with", "forwarding", "from", "growl", "for", "windows", "to", "growl", "for", "mac", "due", "to", "differences", "in", "encryption", "and", "password", "handle", "though", "this", "be", "be", "worked", "on", "and", "forwarding", "the", "other", "way", "works", "fine", "NUMBER", "Due", "to", "not", "having", "be", "update", "for", "so", "long", "I", "wasn", "t", "even", "expecting", "ruby_gntp", "to", "work", "as", "be", "NUMBER", "It", "s", "good", "to", "know", "that", "it", "do", "NUMBER", "I", "m", "a", "big", "fan", "of", "be", "lazy", "NUMBER", "GrowlNotify", "NUMBER", "release", "as", "of", "NUMBER", "minutes", "ago", "LINK", "NUMBER", "zip", "I", "see", "ruby_gntp", "be", "now", "be", "promoted", "as", "an", "option", "in", "the", "README", "but", "it", "s", "not", "triggering", "notifications", "for", "me", "NUMBER", "My", "specs", "OS", "X", "NUMBER", "Ruby", "NUMBER", "p", "NUMBER", "guard", "NUMBER", "guard", "rspec", "NUMBER", "guard", "spork", "NUMBER", "w", "spork", "NUMBER", "rc", "NUMBER", "I", "even", "install", "the", "just", "release", "GrowlNotify", "NUMBER", "but", "I", "m", "still", "not", "get", "notifications", "NUMBER", "Does", "ruby_gntp", "need", "to", "be", "update", "to", "work", "with", "Growl", "NUMBER", "before", "this", "will", "work", "I", "m", "wondering", "if", "I", "was", "just", "mislead", "by", "the", "README", "NUMBER", "so", "NUMBER", "the", "growl", "NUMBER", "SDK", "isn", "t", "quite", "final", "and", "the", "current", "tree", "doesn", "t", "build", "for", "NUMBER", "XPC", "services", "support", "was", "add", "and", "there", "s", "a", "temporary", "weak", "link", "failure", "going", "on", "NUMBER", "However", "once", "that", "be", "resolve", "there", "s", "a", "fairly", "glorious", "new", "feature", "that", "guard", "might", "be", "interested", "in", "taking", "advantage", "of", "mist", "NUMBER", "It", "allows", "for", "basic", "notifications", "to", "just", "work", "regardless", "of", "whether", "or", "not", "growl", "be", "install", "with", "the", "full", "featureset", "available", "via", "growl", "when", "it", "be", "install", "NUMBER", "It", "d", "let", "guard", "have", "notification", "support", "on", "maco", "NUMBER", "period", "always", "NUMBER", "The", "growl", "NUMBER", "SDK", "be", "technically", "available", "in", "binary", "form", "via", "the", "growl", "version", "detective", "now", "but", "the", "goal", "be", "to", "have", "growl", "NUMBER", "out", "before", "the", "end", "of", "the", "month", "NUMBER", "Getting", "GrowlTunes", "XPC", "safe", "and", "ScriptingBridge", "clean", "be", "a", "bit", "more", "of", "a", "task", "than", "I", "originally", "assumed", "but", "I", "d", "like", "to", "write", "an", "extension", "that", "makes", "use", "of", "the", "growl", "framework", "directly", "in", "the", "reasonably", "near", "future", "doesn", "t", "seem", "any", "of", "the", "exist", "libs", "do", "NUMBER", "NUMBER", "NUMBER", "I", "wonder", "how", "painful", "it", "ll", "be", "to", "create", "an", "extension", "for", "macruby", "NUMBER", "and", "NUMBER", "at", "the", "same", "time", "NUMBER", "Or", "use", "FFI", "to", "interface", "with", "ObjC", "code", "which", "_might_", "be", "less", "painful", "NUMBER", "Might", "be", "fun", "NUMBER", "Of", "course", "that", "ll", "make", "guard", "s", "growl", "support", "even", "more", "of", "a", "complicated", "grid", "the", "extension", "would", "be", "mac", "only", "and", "it", "hasn", "t", "be", "write", "yet", "NUMBER", "Hey", "I", "wanted", "to", "do", "something", "like", "this", "ruby", "watch", "r", "tmp", "facbingham", "NUMBER", "NUMBER", "txt", "m", "file_name", "m", "other_param", "CAI", "but", "I", "had", "to", "settle", "for", "ruby", "watch", "r", "tmp", "facbingham", "NUMBER", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "and", "then", "in", "my", "ftp_guard", "NUMBER", "rb", "ruby", "def", "run_on_change", "paths", "new_paths", "new_paths", "TAG", "paths", "NUMBER", "file_name", "paths", "NUMBER", "vendor", "paths", "NUMBER", "end", "and", "still", "you", "can", "only", "return", "strings", "into", "these", "values", "NUMBER", "So", "this", "branch", "you", "can", "return", "anything", "with", "a", "block", "NUMBER", "Maybe", "I", "be", "miss", "something", "NUMBER", "Thanks", "for", "make", "such", "a", "great", "gem", "Hi", "this", "feature", "_could_", "be", "interesting", "but", "I", "m", "not", "sure", "I", "see", "the", "big", "picture", "of", "what", "you", "re", "trying", "to", "achieve", "NUMBER", "Could", "you", "explain", "us", "what", "be", "your", "initial", "goal", "with", "ftp_guard", "NUMBER", "rb", "Regarding", "the", "implementation", "itself", "the", "problem", "be", "that", "you", "remove", "the", "old", "specs", "hence", "remove", "non", "regression", "checks", "In", "fact", "I", "m", "almost", "certain", "that", "your", "change", "will", "break", "many", "projects", "that", "be", "currently", "use", "Guard", "NUMBER", "Rymai", "Thanks", "for", "the", "response", "NUMBER", "ftp_guard", "NUMBER", "rb", "be", "my", "guard", "which", "looks", "at", "my", "ftp", "server", "which", "has", "many", "users", "from", "different", "facilities", "NUMBER", "Each", "facility", "has", "its", "own", "ftp", "user", "account", "w", "home", "folder", "etc", "NUMBER", "I", "monitor", "each", "home", "folder", "for", "new", "file", "that", "the", "users", "can", "dump", "in", "NUMBER", "These", "file", "be", "then", "parsed", "and", "populate", "our", "database", "NUMBER", "I", "would", "like", "to", "send", "more", "information", "with", "each", "file", "path", "NUMBER", "This", "makes", "it", "easier", "for", "the", "next", "script", "to", "have", "the", "correct", "data", "structure", "NUMBER", "For", "clarity", "here", "be", "the", "two", "file", "I", "be", "use", "NUMBER", "ftp_guard", "NUMBER", "rb", "require", "guard", "guard", "require", "mongoid", "require", "sync", "import", "integration", "jms_integration", "module", "Guard", "class", "FtpGuard", "TAG", "fac_id", "file_name", "path", "file_type", "txt", "i_type", "ftp", "mapping", "TXT_MAP", "jms_procs", "PARSE_BLOCK", "jms_i", "NUMBER", "save", "jms_i", "NUMBER", "synchronize", "when", "NUMBER", "fork_ftp", "jms_i", "JmsIntegration", "NUMBER", "create", "facility_id", "fac_id", "file_name", "path", "file_type", "csv", "i_type", "ftp", "jms_i", "NUMBER", "synchronize", "when", "NUMBER", "fork_ftp", "jms_i", "JmsIntegration", "NUMBER", "create", "facility_id", "fac_id", "file_name", "path", "file_type", "xml", "i_type", "ftp", "jms_i", "NUMBER", "synchronize", "else", "puts", "Hey", "I", "be", "else", "end", "end", "def", "run_on_change", "paths", "new_paths", "new_paths", "TAG", "paths", "NUMBER", "file_name", "paths", "NUMBER", "vendor", "paths", "NUMBER", "new_paths", "NUMBER", "size", "NUMBER", "choose_fac", "new_paths", "NUMBER", "new_paths", "NUMBER", "each", "do", "np", "choose_fac", "np", "end", "end", "def", "fork_ftp", "fblock", "fork", "do", "yield", "fblock", "end", "end", "end", "end", "Guardfile", "A", "sample", "Guardfile", "More", "info", "at", "LINK", "readme", "rails_rake_task", "true", "require", "config", "boot", "options", "environment", "ENV", "RAILS_ENV", "development", "NUMBER", "dup", "ENV", "RAILS_ENV", "options", "environment", "RAILS_ENV", "NUMBER", "replace", "options", "environment", "if", "defined", "RAILS_ENV", "require", "config", "environment", "require", "util", "guards", "ftp_guard", "group", "ftp", "do", "guard", "FtpGuard", "do", "watch", "r", "tmp", "facbingham", "NUMBER", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "facgoodingjms", "NUMBER", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "caiftp", "washington", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "owyheeft", "NUMBER", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "caiftp", "FortHall", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "facbingham", "NUMBER", "NUMBER", "txt", "m", "NUMBER", "m", "CAI", "watch", "r", "tmp", "facwhitley", "inbox", "NUMBER", "NUMBER", "csv", "m", "NUMBER", "m", "watch", "r", "tmp", "facordes", "inbox", "NUMBER", "NUMBER", "xml", "m", "NUMBER", "m", "end", "end", "So", "as", "you", "can", "see", "I", "have", "a", "work", "around", "and", "there", "be", "many", "ways", "to", "work", "arounds", "to", "this", "problem", "but", "it", "would", "still", "be", "nice", "to", "allow", "a", "person", "use", "a", "block", "to", "handle", "their", "own", "return", "NUMBER", "I", "would", "be", "more", "than", "happy", "to", "fix", "any", "issue", "with", "the", "spec", "or", "improve", "upon", "this", "exist", "branch", "NUMBER", "This", "how", "I", "would", "like", "to", "use", "watch", "watch", "r", "tmp", "facordes", "inbox", "NUMBER", "NUMBER", "xml", "m", "file_name", "m", "other_param", "CAI", "facility_id", "NUMBER", "some_block", "lambda", "x", "puts", "here", "be", "another", "block", "x", "other_crap", "crap", "But", "the", "possibilities", "be", "endless", "NUMBER", "Thanks", "again", "Hey", "Thank", "you", "for", "point", "these", "issue", "out", "NUMBER", "This", "be", "my", "first", "time", "doing", "a", "pull", "request", "NUMBER", "It", "be", "a", "lot", "of", "fun", "It", "be", "interesting", "how", "tight", "the", "code", "needs", "to", "get", "to", "be", "put", "out", "into", "the", "world", "NUMBER", "Hopefully", "these", "change", "will", "be", "more", "to", "your", "liking", "NUMBER", "It", "should", "allow", "for", "a", "decent", "compromise", "NUMBER", "Hi", "I", "think", "we", "need", "a", "deeper", "reflection", "for", "such", "functionality", "to", "maybe", "provide", "a", "very", "adaptable", "solution", "to", "this", "kind", "of", "problem", "NUMBER", "Because", "currently", "everything", "has", "be", "thought", "with", "the", "fact", "that", "we", "always", "deal", "with", "paths", "NUMBER", "I", "agree", "to", "make", "Guard", "more", "universal", "in", "its", "use", "cases", "but", "we", "will", "need", "a", "more", "global", "thinking", "of", "what", "should", "be", "change", "and", "how", "to", "make", "these", "change", "very", "adaptable", "yet", "backward", "compatibles", "NUMBER", "What", "do", "you", "think", "netzpirat", "thibaudgg", "earlonrails", "And", "I", "agree", "with", "netzpirat", "to", "add", "the", "flag", "to", "the", "guard", "instead", "of", "the", "watcher", "it", "s", "also", "more", "clean", "even", "if", "it", "remove", "some", "flexibility", "but", "I", "think", "it", "s", "better", "to", "not", "have", "guards", "that", "can", "accept", "both", "only", "strings", "and", "any", "objects", "at", "least", "for", "now", "NUMBER", "I", "just", "cleaned", "up", "the", "watcher", "version", "but", "I", "also", "made", "a", "new", "branch", "with", "all", "the", "params", "on", "the", "guard", "instead", "of", "the", "watcher", "NUMBER", "Redid", "part", "of", "the", "spec", "and", "it", "be", "completing", "with", "no", "error", "NUMBER", "Should", "I", "open", "a", "new", "pull", "request", "with", "that", "branch", "or", "how", "should", "I", "do", "this", "LINK", "_on_guard", "Hey", "Thanks", "for", "that", "I", "ve", "made", "two", "comments", "on", "your", "last", "commit", "NUMBER", "And", "yes", "I", "think", "it", "s", "better", "to", "open", "a", "new", "pull", "request", "I", "doubt", "it", "s", "possible", "to", "change", "the", "origin", "branch", "of", "a", "pull", "request", "that", "already", "exists", "and", "we", "ll", "close", "this", "one", "NUMBER", "The", "last", "up", "to", "date", "pull", "request", "be", "at", "NUMBER", "Thanks", "I", "thought", "it", "might", "be", "easier", "to", "use", "a", "Mutex", "for", "the", "locking", "between", "the", "listener", "interactor", "threads", "NUMBER", "Take", "a", "look", "and", "let", "me", "know", "what", "you", "think", "NUMBER", "Thanks", "for", "the", "awesome", "tool", "Brian", "Awesome", "thanks", "Sadly", "it", "seems", "to", "have", "an", "issue", "LINK", "with", "the", "mutex", "way", "NUMBER", "Interactor", "should", "be", "locked", "more", "aggressively", "like", "before", "don", "t", "you", "think", "Good", "catch", "I", "didn", "t", "anticipate", "that", "the", "interactor", "thread", "would", "continue", "to", "capture", "input", "from", "stdin", "but", "it", "looks", "like", "that", "s", "what", "be", "happening", "NUMBER", "I", "ll", "be", "submit", "another", "pull", "request", "for", "you", "momentarily", "NUMBER", "The", "new", "Interactor", "was", "taking", "way", "more", "CPU", "than", "it", "should", "simply", "because", "the", "loop", "in", "the", "thread", "was", "so", "tight", "that", "not", "even", "test", "UIs", "could", "update", "quickly", "the", "very", "very", "slow", "progress", "bar", "while", "use", "Hydra", "was", "my", "hint", "something", "was", "up", "NUMBER", "This", "add", "a", "sleep", "NUMBER", "to", "the", "Interactor", "thread", "the", "same", "sleep", "time", "as", "the", "Listener", "s", "thread", "in", "order", "to", "prevent", "Guard", "itself", "from", "hijacking", "a", "CPU", "to", "itself", "while", "run", "test", "NUMBER", "Hi", "I", "m", "not", "sure", "if", "this", "be", "the", "right", "place", "to", "post", "this", "but", "here", "s", "what", "s", "happening", "I", "m", "run", "Mac", "OS", "X", "Lion", "with", "RVM", "and", "Ruby", "NUMBER", "Rails", "NUMBER", "and", "Guard", "and", "guard", "test", "and", "ruby", "debug", "NUMBER", "NUMBER", "When", "I", "debug", "my", "app", "sometimes", "most", "of", "the", "time", "the", "standard", "input", "becomes", "EXTRAORDINARILY", "slow", "NUMBER", "I", "ll", "type", "something", "into", "the", "debugger", "and", "it", "ll", "miss", "several", "keys", "and", "print", "others", "out", "slowly", "NUMBER", "It", "s", "virtually", "unusable", "NUMBER", "I", "ve", "switched", "to", "Ruby", "NUMBER", "no", "difference", "NUMBER", "When", "I", "simply", "run", "rake", "test", "everything", "appears", "normal", "NUMBER", "Any", "ideas", "There", "was", "a", "pull", "request", "LINK", "that", "fix", "an", "issue", "with", "ruby", "debug", "although", "in", "that", "specific", "case", "all", "input", "was", "eaten", "but", "perhaps", "it", "also", "fix", "your", "issue", "NUMBER", "The", "mention", "fix", "isn", "t", "release", "yet", "so", "can", "you", "please", "give", "Guard", "on", "the", "master", "branch", "a", "try", "by", "use", "it", "directly", "from", "the", "Git", "repo", "from", "your", "Gemfile", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "Okay", "I", "upgrade", "my", "local", "guard", "gem", "to", "NUMBER", "and", "it", "appears", "to", "be", "fix", "NUMBER", "I", "m", "use", "Guard", "Spork", "Rspec", "to", "run", "the", "test", "NUMBER", "When", "I", "insert", "debugger", "instruction", "inside", "my", "rspec", "test", "guard", "NUMBER", "fail", "to", "read", "input", "from", "keyboard", "NUMBER", "Guard", "NUMBER", "still", "reads", "fine", "NUMBER", "I", "m", "run", "MRI", "NUMBER", "p", "NUMBER", "The", "problem", "happen", "with", "both", "Mac", "OSX", "and", "Ubuntu", "NUMBER", "This", "should", "be", "fix", "at", "the", "master", "branch", "NUMBER", "Can", "you", "please", "try", "it", "by", "add", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "to", "your", "Gemfile", "Have", "you", "tried", "use", "Guard", "from", "the", "master", "branch", "The", "problem", "be", "fix", "on", "the", "master", "NUMBER", "When", "will", "you", "release", "it", "into", "next", "version", "I", "think", "last", "time", "I", "didn", "t", "test", "it", "properly", "to", "confirm", "the", "problem", "fix", "since", "I", "could", "have", "both", "gem", "from", "master", "and", "NUMBER", "install", "and", "by", "some", "way", "run", "NUMBER", "guard", "instead", "of", "master", "branch", "one", "Now", "the", "problem", "still", "persist", "on", "NUMBER", "phuong", "nguyen", "and", "phuongnd", "NUMBER", "be", "the", "same", "guy", "Please", "can", "you", "try", "with", "guard", "NUMBER", "to", "see", "if", "you", "still", "get", "this", "problem", "NUMBER", "Thanks", "I", "m", "still", "run", "into", "this", "problem", "with", "NUMBER", "When", "spork", "run", "into", "a", "debugger", "statement", "if", "I", "try", "to", "enter", "NUMBER", "into", "the", "console", "then", "I", "actually", "see", "NUMBER", "Few", "key", "strokes", "be", "miss", "here", "NUMBER", "Out", "of", "curious", "be", "you", "change", "any", "dependency", "between", "NUMBER", "and", "NUMBER", "and", "higher", "that", "may", "cause", "such", "problem", "Since", "it", "s", "kinda", "weird", "NUMBER", "From", "guard", "NUMBER", "we", "have", "introduce", "a", "new", "Interactor", "that", "use", "stdin", "NUMBER", "gets", "LINK", "L", "NUMBER", "maybe", "it", "comes", "from", "here", "NUMBER", "Is", "it", "the", "same", "without", "Spork", "I", "have", "experienced", "such", "problem", "from", "NUMBER", "I", "don", "t", "know", "how", "to", "test", "this", "problem", "without", "spork", "NUMBER", "Comment", "out", "Spork", "and", "all", "drb", "cli", "options", "for", "RSpec", "Cucumber", "in", "your", "Guardfile", "NUMBER", "Maybe", "you", "can", "give", "us", "your", "Guardfile", "Gemfile", "and", "describe", "more", "precisely", "what", "you", "want", "doing", "NUMBER", "Basically", "what", "I", "want", "to", "do", "be", "pretty", "simple", "NUMBER", "It", "just", "spork", "guard", "guard", "spork", "NUMBER", "Here", "s", "my", "Gemfile", "ruby", "source", "LINK", "source", "LINK", "gem", "rails", "NUMBER", "gem", "mysql", "NUMBER", "gem", "devise", "gem", "cancan", "gem", "haml", "gem", "coffee", "filter", "gem", "jquery", "rails", "gem", "airbrake", "gem", "settingslogic", "gem", "kaminari", "group", "assets", "do", "gem", "sass", "rails", "NUMBER", "rc", "gem", "coffee", "rails", "NUMBER", "rc", "gem", "uglifier", "gem", "compass", "NUMBER", "beta", "NUMBER", "gem", "compass", "susy", "plugin", "require", "susy", "gem", "fancy", "buttons", "end", "group", "development", "do", "gem", "haml", "rails", "gem", "hpricot", "require", "false", "gem", "ruby_parser", "require", "false", "gem", "capistrano", "require", "false", "end", "group", "development", "test", "do", "gem", "rspec", "rails", "gem", "ruby", "debug", "NUMBER", "require", "ruby", "debug", "gem", "machinist", "NUMBER", "beta", "NUMBER", "gem", "ruby", "prof", "end", "group", "test", "do", "gem", "capybara", "gem", "shoulda", "NUMBER", "beta", "NUMBER", "gem", "spork", "NUMBER", "rc", "NUMBER", "gem", "database_cleaner", "gem", "rspec", "NUMBER", "rails", "views", "matchers", "end", "group", "guard", "do", "gem", "guard", "NUMBER", "gem", "guard", "spork", "gem", "guard", "shell", "gem", "guard", "rails", "gem", "guard", "bundler", "end", "Here", "my", "Guardfile", "ruby", "group", "drb", "do", "guard", "spork", "cucumber", "false", "rspec_env", "RAILS_ENV", "test", "do", "watch", "config", "application", "NUMBER", "rb", "watch", "Gemfile", "NUMBER", "lock", "watch", "config", "environment", "NUMBER", "rb", "watch", "config", "database", "NUMBER", "yml", "watch", "app", "models", "user", "NUMBER", "rb", "watch", "r", "config", "environments", "NUMBER", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "validator", "NUMBER", "rb", "watch", "r", "config", "locales", "NUMBER", "NUMBER", "yml", "watch", "r", "config", "initializers", "NUMBER", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "end", "end", "When", "I", "run", "spec", "inside", "spork", "sometimes", "I", "just", "want", "to", "put", "a", "debugger", "instruction", "inside", "a", "spec", "to", "see", "what", "happen", "NUMBER", "For", "example", "this", "ruby", "it", "should", "validate", "presence", "of", "display_name", "do", "debugger", "user", "User", "NUMBER", "new", "user", "NUMBER", "valid", "user", "NUMBER", "error", "display_name", "NUMBER", "should", "can", "t", "be", "blank", "end", "What", "I", "expect", "be", "that", "I", "can", "control", "ruby", "debug", "inside", "the", "spork", "console", "NUMBER", "In", "fact", "I", "still", "can", "NUMBER", "But", "for", "every", "NUMBER", "characters", "I", "typed", "into", "the", "console", "only", "NUMBER", "or", "NUMBER", "of", "them", "received", "by", "ruby", "debug", "NUMBER", "The", "problem", "doesn", "t", "happen", "with", "NUMBER", "Just", "to", "rectify", "what", "thibaudgg", "said", "before", "it", "s", "from", "the", "NUMBER", "version", "that", "we", "remove", "the", "signals", "NUMBER", "Is", "everything", "ok", "if", "you", "don", "t", "use", "Spork", "Ok", "I", "think", "I", "have", "understand", "your", "problem", "NUMBER", "Because", "that", "you", "re", "not", "use", "guard", "rspec", "the", "new", "Interactor", "be", "still", "turn", "on", "and", "gets", "stdin", "inputs", "NUMBER", "Please", "try", "with", "guard", "rspec", "it", "ll", "turn", "off", "the", "Interactor", "during", "your", "spec", "execution", "NUMBER", "Are", "you", "saying", "only", "installing", "guard", "rspec", "will", "fix", "my", "problem", "Or", "I", "have", "to", "create", "a", "guard", "for", "that", "Isn", "t", "it", "possible", "for", "me", "to", "turn", "off", "interactor", "with", "something", "like", "Interactor", "NUMBER", "turn_off", "You", "need", "to", "add", "guard", "rspec", "in", "your", "Gemfile", "and", "run", "bundle", "exec", "guard", "init", "rspec", "to", "add", "it", "in", "your", "Guardfile", "NUMBER", "After", "that", "guard", "will", "automatically", "run", "your", "spec", "when", "you", "save", "a", "file", "and", "turn", "off", "the", "Interactor", "when", "specs", "be", "run", "NUMBER", "At", "the", "moment", "there", "s", "no", "way", "to", "turn", "off", "the", "Interactor", "at", "guard", "level", "but", "we", "could", "add", "that", "I", "d", "rather", "not", "doing", "that", "NUMBER", "Running", "rspec", "automatically", "more", "often", "than", "not", "just", "steps", "into", "my", "way", "NUMBER", "Would", "like", "to", "turn", "interactor", "off", "in", "future", "guard", "version", "NUMBER", "Right", "now", "just", "stick", "with", "NUMBER", "Just", "a", "thought", "that", "by", "add", "interactor", "guard", "be", "actually", "compromising", "the", "guarded", "program", "NUMBER", "What", "I", "expect", "be", "guard", "g", "drb", "should", "just", "the", "same", "as", "spork", "except", "guard", "can", "restart", "spork", "when", "file", "be", "change", "or", "created", "or", "delete", "from", "my", "directory", "NUMBER", "It", "s", "never", "too", "often", "to", "run", "your", "specs", "That", "said", "feel", "free", "to", "submit", "a", "pull", "request", "if", "you", "d", "like", "to", "add", "a", "new", "feature", "to", "Guard", "NUMBER", "There", "be", "cases", "when", "it", "not", "convenient", "to", "auto", "run", "your", "spec", "NUMBER", "Given", "I", "have", "method", "A", "that", "be", "involved", "in", "NUMBER", "specs", "located", "in", "the", "same", "spec", "file", "NUMBER", "Suddenly", "A", "turns", "weird", "and", "I", "need", "to", "debug", "A", "when", "condition", "X", "which", "describe", "in", "spec", "at", "line", "NUMBER", "be", "met", "so", "I", "put", "a", "debugger", "into", "A", "NUMBER", "Normally", "I", "would", "run", "that", "single", "spec", "and", "start", "debugging", "my", "code", "right", "away", "NUMBER", "But", "if", "guard", "rspec", "be", "taking", "place", "then", "I", "will", "have", "to", "resume", "the", "spec", "several", "times", "before", "it", "jump", "to", "spec", "at", "line", "NUMBER", "and", "then", "have", "to", "resume", "more", "times", "just", "to", "finish", "the", "test", "run", "NUMBER", "It", "s", "then", "not", "desirable", "NUMBER", "That", "s", "not", "to", "say", "guard", "rspec", "not", "great", "stuff", "it", "just", "doesn", "t", "fit", "into", "my", "way", "NUMBER", "By", "the", "way", "I", "m", "here", "just", "to", "submit", "and", "_talk_", "about", "the", "issue", "NUMBER", "I", "definitely", "want", "to", "improve", "guard", "but", "sometime", "make", "such", "a", "fix", "which", "be", "to", "turn", "off", "a", "new", "feature", "can", "be", "do", "easily", "by", "a", "guy", "who", "understand", "guard", "better", "NUMBER", "And", "I", "m", "happy", "with", "guard", "NUMBER", "any", "way", "NUMBER", "On", "Wed", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Rmy", "Coutable", "TAG", "write", "It", "s", "never", "too", "often", "to", "run", "your", "specs", "That", "said", "feel", "free", "to", "submit", "a", "pull", "request", "if", "you", "d", "like", "to", "add", "a", "new", "feature", "to", "Guard", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "No", "problem", "we", "will", "discuss", "this", "feature", "with", "the", "team", "thanks", "for", "your", "feedback", "By", "the", "way", "do", "you", "know", "that", "you", "can", "filter", "the", "specs", "to", "run", "with", "the", "RSpec", "tag", "s", "feature", "Example", "Add", "the", "following", "to", "your", "spec_helper", "NUMBER", "rb", "ruby", "RSpec", "NUMBER", "configure", "do", "config", "config", "NUMBER", "filter_run", "focus", "true", "config", "NUMBER", "run_all_when_everything_filtered", "true", "config", "NUMBER", "treat_symbols_as_metadata_keys_with_true_values", "true", "end", "and", "you", "can", "then", "filter", "the", "specs", "you", "want", "to", "run", "like", "this", "ruby", "it", "example", "I", "m", "work", "now", "focus", "do", "your", "spec", "end", "Regards", "R\u00e9my", "Full", "doc", "here", "LINK", "core", "docs", "filtering", "inclusion", "filters", "Interesting", "tips", "NUMBER", "Thanks", "NUMBER", "On", "Wed", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Rmy", "Coutable", "TAG", "write", "Full", "doc", "here", "LINK", "core", "docs", "filtering", "inclusion", "filters", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "I", "have", "add", "a", "cli", "option", "LINK", "to", "completely", "turn", "off", "any", "Guard", "Interaction", "NUMBER", "Can", "you", "please", "try", "it", "by", "add", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "to", "your", "Gemfile", "and", "launch", "guard", "with", "bundle", "exec", "guard", "i", "It", "works", "NUMBER", "I", "can", "also", "use", "guard", "spork", "NUMBER", "now", "NUMBER", "Thanks", "NUMBER", "I", "came", "upon", "this", "page", "when", "having", "similar", "problem", "with", "Ruby", "debug", "NUMBER", "Someone", "told", "me", "to", "simply", "use", "the", "Pry", "gem", "instead", "LINK", "and", "it", "s", "really", "awesome", "You", "guys", "should", "check", "it", "out", "NUMBER", "Guard", "close", "when", "there", "be", "a", "syntax", "error", "NUMBER", "Situation", "When", "run", "guard", "guard", "it", "will", "run", "smoothly", "until", "it", "comes", "across", "a", "syntax", "error", "NUMBER", "Which", "causes", "it", "to", "throw", "the", "line", "that", "the", "syntax", "was", "cause", "on", "and", "terminate", "NUMBER", "Terminates", "and", "tells", "me", "this", "LINK", "Workaround", "I", "have", "be", "able", "to", "run", "bundle", "exec", "guard", "and", "it", "seems", "to", "keep", "going", "through", "even", "with", "syntax", "error", "NUMBER", "It", "ll", "complain", "about", "the", "line", "and", "then", "once", "I", "fix", "it", "it", "ll", "go", "back", "to", "be", "awesome", "NUMBER", "The", "problem", "with", "this", "be", "that", "it", "doesn", "t", "notify", "me", "through", "Growl", "or", "rb", "fsevent", "NUMBER", "I", "might", "be", "wrong", "but", "I", "m", "under", "the", "impression", "that", "it", "s", "better", "to", "run", "guard", "because", "it", "serves", "better", "on", "the", "CPU", "and", "ram", "compared", "to", "bundle", "exec", "guard", "NUMBER", "If", "this", "be", "a", "guard", "sass", "issue", "let", "me", "know", "NUMBER", "I", "can", "just", "post", "it", "there", "NUMBER", "Oh", "nope", "NUMBER", "I", "can", "easily", "use", "growl", "and", "rb", "fsevent", "NUMBER", "I", "ll", "just", "use", "bundle", "exec", "guard", "NUMBER", "Thanks", "Hey", "thibaudgg", "here", "s", "my", "work", "on", "watching", "delete", "moved", "file", "NUMBER", "D", "NUMBER", "And", "what", "about", "the", "specs", "So", "I", "ve", "do", "the", "merge", "but", "I", "m", "get", "to", "FAILS", "on", "specs", "see", "the", "following", "gist", "LINK", "all", "specs", "be", "passing", "now", "NUMBER", "I", "ll", "take", "a", "look", "NUMBER", "d", "NUMBER", "On", "Wed", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Thibaud", "Guillaume", "Gentil", "TAG", "write", "It", "seems", "there", "s", "still", "two", "issue", "with", "the", "jruby", "specs", "on", "Travis", "Have", "you", "an", "idea", "why", "LINK", "ci", "NUMBER", "org", "limeyd", "guard", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "darren", "pearce", "interactive", "designer", "o", "NUMBER", "m", "NUMBER", "as", "for", "the", "option", "name", "how", "about", "this", "for", "explict", "watch", "moves", "deletions", "Perfect", "for", "me", "Sent", "from", "my", "iPhone", "On", "NUMBER", "sept", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "Darren", "Pearce", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "as", "for", "the", "option", "name", "how", "about", "this", "for", "explict", "watch", "moves", "deletions", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "That", "would", "be", "for", "sure", "and", "I", "d", "be", "happy", "to", "change", "it", "as", "it", "do", "read", "better", "NUMBER", "d", "NUMBER", "On", "Wed", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Thibaud", "Guillaume", "Gentil", "TAG", "write", "Maybe", "watch", "moves", "and", "deletions", "would", "be", "even", "more", "precise", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "darren", "pearce", "interactive", "designer", "o", "NUMBER", "m", "NUMBER", "How", "about", "watch", "all", "modifications", "and", "then", "use", "A", "or", "M", "as", "w", "be", "use", "for", "watchdir", "thoughts", "NUMBER", "On", "Thu", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Thibaud", "Guillaume", "Gentil", "TAG", "write", "Yep", "I", "think", "we", "can", "go", "for", "watch", "moves", "and", "deletions", "and", "use", "the", "W", "alias", "rather", "than", "D", "to", "not", "be", "focus", "only", "on", "the", "delete", "file", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "darren", "pearce", "interactive", "designer", "o", "NUMBER", "m", "NUMBER", "Yeah", "you", "re", "right", "it", "s", "way", "better", "IMO", "A", "seems", "good", "for", "it", "too", "NUMBER", "Let", "s", "wait", "for", "thibaudgg", "s", "opinion", "do", "and", "do", "and", "all", "code", "be", "merge", "NUMBER", "I", "m", "looking", "as", "it", "s", "passing", "locally", "use", "jruby", "NUMBER", "on", "osx", "lion", "When", "I", "analysed", "the", "Guard", "spec", "suite", "on", "Travis", "for", "JRuby", "I", "spent", "most", "of", "the", "time", "to", "understand", "the", "ctime", "bug", "on", "JRuby", "LINK", "NUMBER", "NUMBER", "All", "other", "specs", "were", "fix", "by", "giving", "more", "time", "before", "evaluate", "the", "result", "Just", "add", "another", "sleep", "or", "increase", "the", "wait", "time", "for", "an", "exisiting", "sleep", "NUMBER", "I", "believe", "that", "Travis", "has", "very", "bad", "file", "IO", "and", "also", "CPU", "be", "not", "that", "fast", "NUMBER", "This", "leads", "to", "exactly", "the", "problem", "that", "the", "specs", "be", "passing", "locally", "and", "fail", "on", "Travis", "NUMBER", "I", "m", "feeling", "a", "bit", "sick", "right", "now", "so", "this", "be", "the", "reason", "why", "I", "try", "to", "avoid", "code", "have", "a", "good", "rest", "and", "become", "healthy", "again", "NUMBER", "When", "I", "feel", "ok", "on", "Monday", "I", "could", "give", "it", "a", "shot", "NUMBER", "I", "tried", "reducing", "the", "sleep", "locally", "and", "it", "did", "raise", "the", "same", "error", "as", "per", "jruby", "on", "travis", "so", "the", "question", "be", "we", "increase", "the", "sleep", "for", "those", "fail", "specs", "I", "just", "refactored", "the", "listener", "spec", "sleep", "time", "to", "be", "configurable", "LINK", "through", "an", "environment", "variable", "and", "set", "it", "to", "NUMBER", "seconds", "on", "Travis", "LINK", "NUMBER", "Can", "you", "please", "merge", "these", "change", "so", "we", "see", "if", "this", "generally", "solves", "some", "timing", "problem", "we", "have", "with", "the", "specs", "on", "Travis", "NUMBER", "Forget", "about", "the", "previous", "comment", "there", "be", "definitely", "something", "wrong", "with", "our", "specs", "After", "I", "increase", "the", "sleep", "time", "on", "Travis", "more", "specs", "have", "fail", "on", "other", "Rubies", "as", "well", "NUMBER", "This", "can", "be", "reproduced", "locally", "by", "setting", "a", "longer", "sleep", "time", "export", "GUARD_SLEEP", "NUMBER", "rake", "spec", "portability", "From", "my", "understanding", "increasing", "the", "sleep", "time", "should", "not", "have", "an", "influence", "on", "the", "outcome", "of", "the", "specs", "but", "it", "do", "NUMBER", "I", "have", "to", "spend", "some", "more", "time", "to", "dig", "into", "the", "code", "to", "better", "understand", "why", "this", "happens", "NUMBER", "But", "this", "be", "not", "_your_", "problem", "it", "s", "a", "problem", "of", "the", "Guard", "specs", "so", "_we_", "should", "take", "care", "of", "it", "NUMBER", "I", "suggest", "that", "you", "just", "update", "your", "branch", "with", "the", "latest", "change", "from", "master", "especially", "the", "YARD", "docs", "so", "please", "think", "about", "it", "if", "something", "special", "should", "be", "documented", "and", "then", "we", "ll", "merge", "you", "branch", "into", "master", "NUMBER", "I", "will", "spend", "some", "time", "next", "week", "on", "the", "spec", "suite", "and", "see", "what", "I", "can", "do", "NUMBER", "Ok", "everything", "be", "merge", "I", "had", "a", "conflict", "with", "run_on_change", "so", "code", "was", "moved", "to", "execute_supervised_task_for_all_guards", "please", "review", "NUMBER", "Looks", "good", "to", "me", "now", "NUMBER", "We", "will", "wait", "for", "the", "specs", "to", "pass", "though", "maybe", "wait", "for", "netzpirat", "see", "if", "he", "has", "any", "idea", "on", "how", "to", "solve", "this", "NUMBER", "I", "ve", "merge", "it", "into", "the", "guard", "run_on_deletion", "LINK", "_on_deletion", "branch", "and", "not", "into", "the", "master", "branch", "as", "GitHub", "wrongly", "report", "here", "NUMBER", "Next", "be", "fix", "the", "specs", "on", "Travis", "before", "merge", "to", "master", "NUMBER", "Interesting", "bug", "P", "Good", "luck", "Michael", "and", "THANK", "YOU", "Wow", "really", "strange", "NUMBER", "I", "mean", "I", "see", "my", "commit", "here", "on", "GitHub", "on", "the", "run_on_deletion", "branch", "and", "not", "in", "master", "NUMBER", "What", "have", "I", "do", "Oh", "I", "see", "I", "branch", "after", "I", "made", "my", "commit", "and", "I", "have", "count", "the", "commit", "wrongly", "when", "reseting", "HEAD", "NUMBER", "How", "stupid", "be", "that", "P", "So", "I", "work", "today", "directly", "on", "master", "to", "fix", "JRuby", "on", "Travis", "NUMBER", "glad", "to", "see", "that", "it", "s", "be", "merge", "ping", "if", "you", "need", "help", "test", "NUMBER", "D", "NUMBER", "darren", "pearce", "TAG", "Ok", "no", "problem", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "The", "suggested", "Mac", "OS", "X", "tool", "growl_notify", "do", "not", "work", "with", "rubinius", "due", "to", "an", "bug", "in", "rb", "appscript", "NUMBER", "Switching", "the", "the", "second", "option", "growlnotify", "cli", "tool", "and", "growl", "gem", "works", "around", "this", "NUMBER", "A", "README", "mention", "may", "or", "may", "not", "be", "necessary", "NUMBER", "I", "just", "figured", "that", "I", "d", "post", "this", "here", "so", "that", "the", "work", "around", "was", "documented", "for", "anyone", "else", "that", "runs", "into", "the", "issue", "Thanks", "there", "s", "now", "a", "page", "in", "the", "wiki", "LINK", "growl_notify", "or", "growl", "gem", "too", "NUMBER", "I", "ve", "had", "trouble", "with", "rb", "appscript", "in", "MRI", "NUMBER", "as", "well", "that", "led", "me", "back", "to", "the", "growl", "gem", "for", "Guard", "here", "s", "hoping", "rb", "appscript", "library", "makes", "the", "jump", "to", "the", "next", "generation", "of", "Rubies", "NUMBER", "I", "just", "install", "the", "growl", "notify", "add", "on", "and", "install", "the", "growl", "gem", "NUMBER", "I", "be", "now", "get", "growl", "notifications", "for", "my", "guard", "pow", "and", "guard", "jasmine", "gems", "but", "I", "be", "still", "get", "the", "please", "install", "growl", "error", "for", "both", "guard", "rspec", "and", "guard", "cucumber", "NUMBER", "So", "it", "seems", "that", "the", "growl", "support", "be", "hit", "or", "miss", "based", "on", "the", "different", "recipes", "It", "feels", "weird", "that", "this", "be", "the", "way", "guard", "works", "if", "it", "actually", "do", "work", "like", "this", "wouldn", "t", "it", "be", "better", "to", "support", "growl", "through", "guard", "and", "not", "have", "submodules", "show", "up", "false", "error", "But", "back", "to", "the", "main", "problem", "How", "do", "I", "solve", "this", "Obviously", "growl", "be", "install", "and", "work", "I", "can", "see", "Guard", "in", "the", "applications", "list", "of", "growl", "and", "jasmine", "be", "outputting", "stuff", "to", "growl", "but", "I", "still", "see", "the", "error", "for", "cucumber", "and", "rspec", "NUMBER", "Thank", "you", "I", "need", "to", "get", "in", "the", "habit", "of", "use", "bundle", "exec", "more", "often", "NUMBER", "It", "works", "now", "NUMBER", "Hi", "I", "m", "not", "sure", "if", "this", "be", "the", "right", "place", "to", "post", "this", "since", "it", "be", "relate", "to", "the", "installation", "of", "growl_notify", "NUMBER", "However", "it", "concerns", "guard", "because", "NUMBER", "Guard", "reccomended", "that", "I", "install", "growl_notify", "NUMBER", "Guard", "stopped", "work", "after", "growl_notify", "was", "install", "NUMBER", "First", "guard", "told", "me", "to", "install", "the", "growl_notify", "gem", "guard", "Please", "install", "growl", "or", "growl_notify", "gem", "for", "Mac", "OS", "X", "notification", "support", "and", "add", "it", "to", "your", "Gemfile", "So", "I", "followed", "its", "instructions", "and", "install", "growl_notify", "gem", "install", "growl_notify", "After", "the", "installation", "guard", "do", "not", "work", "anymore", "guard", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "rb", "appscript", "NUMBER", "lib", "_appscript", "terminology", "NUMBER", "rb", "NUMBER", "in", "rescue", "in", "aetes_for_app", "Can", "t", "get", "terminology", "for", "application", "AEM", "Application", "NUMBER", "by_path", "Library", "PreferencePanes", "Growl", "NUMBER", "prefPane", "Contents", "Resources", "GrowlHelperApp", "NUMBER", "app", "EventError", "RuntimeError", "OSERROR", "NUMBER", "MESSAGE", "Connection", "be", "invalid", "NUMBER", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "rb", "appscript", "NUMBER", "lib", "_appscript", "terminology", "NUMBER", "rb", "NUMBER", "in", "aetes_for_app", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "rb", "appscript", "NUMBER", "lib", "_appscript", "terminology", "NUMBER", "rb", "NUMBER", "in", "tables_for_app", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "rb", "appscript", "NUMBER", "lib", "appscript", "NUMBER", "rb", "NUMBER", "in", "connect", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "rb", "appscript", "NUMBER", "lib", "appscript", "NUMBER", "rb", "NUMBER", "in", "reference_by_name", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "rb", "appscript", "NUMBER", "lib", "appscript", "NUMBER", "rb", "NUMBER", "in", "method_missing", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "growl_notify", "NUMBER", "lib", "growl_notify", "NUMBER", "rb", "NUMBER", "in", "register", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "growl_notify", "NUMBER", "lib", "growl_notify", "NUMBER", "rb", "NUMBER", "in", "config", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "require_growl", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "notifier", "NUMBER", "rb", "NUMBER", "in", "turn_on", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "setup", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "josh", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "I", "have", "temporarily", "fix", "the", "issue", "by", "uninstalling", "growl_notify", "and", "rb", "applescript", "gem", "uninstall", "growl_notify", "gem", "uninstall", "rb", "appscript", "Apologies", "if", "this", "be", "the", "wrong", "place", "to", "post", "this", "issue", "NUMBER", "I", "poked", "around", "a", "bit", "and", "asked", "in", "the", "irc", "channel", "and", "get", "no", "responses", "NUMBER", "Yes", "Josh", "On", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "thibaudgg", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Have", "you", "install", "growl", "LINK", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "I", "tried", "the", "growl", "gem", "and", "nothing", "happened", "but", "guard", "didn", "t", "break", "gem", "install", "growl", "Then", "I", "looked", "into", "the", "docs", "of", "the", "growl", "gem", "and", "it", "looks", "like", "it", "depends", "on", "growlnotify", "NUMBER", "So", "I", "install", "growlnotify", "and", "everything", "seems", "to", "work", "fine", "now", "brew", "install", "growlnotify", "Thanks", "for", "your", "help", "I", "don", "t", "like", "bumping", "old", "tickets", "but", "which", "OS", "version", "was", "this", "edit", "and", "which", "growl", "version", "Mac", "OS", "X", "NUMBER", "Snow", "Leopard", "Growl", "NUMBER", "I", "had", "the", "same", "issue", "but", "it", "turns", "out", "that", "Growl", "wasn", "t", "run", "NUMBER", "A", "trip", "to", "the", "prefPane", "fix", "it", "up", "NUMBER", "Oops", "I", "do", "not", "get", "growl", "notifications", "NUMBER", "When", "i", "put", "growl_notify", "in", "gemfile", "NUMBER", "I", "get", "the", "following", "error", "P", "guard", "NUMBER", "jayparteek", "guard", "Users", "jayparteek", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "head", "guard", "NUMBER", "gems", "rb", "appscript", "NUMBER", "lib", "appscript", "NUMBER", "rb", "NUMBER", "in", "_send_command", "CommandError", "Appscript", "CommandError", "OSERROR", "NUMBER", "MESSAGE", "Apple", "event", "handler", "fail", "NUMBER", "COMMAND", "app", "Library", "PreferencePanes", "Growl", "NUMBER", "prefPane", "Contents", "Resources", "GrowlHelperApp", "NUMBER", "app", "NUMBER", "register", "all_notifications", "success", "pending", "fail", "notify", "as_application", "Guard", "default_notifications", "notify", "from", "Users", "jayparteek", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "head", "guard", "NUMBER", "gems", "rb", "appscript", "NUMBER", "lib", "appscript", "NUMBER", "rb", "NUMBER", "in", "method_missing", "Mac", "OS", "X", "Lion", "NUMBER", "NUMBER", "C", "NUMBER", "Growl", "NUMBER", "Gem", "file", "group", "development", "test", "do", "gem", "rspec", "rails", "gem", "capybara", "git", "git", "github", "NUMBER", "com", "jnicklas", "capybara", "NUMBER", "git", "gem", "launchy", "gem", "database_cleaner", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "gem", "guard", "rspec", "gem", "guard", "livereload", "gem", "growl_notify", "end", "gem", "growl", "group", "test", "do", "gem", "guard", "spork", "end", "Growl_notify", "do", "not", "work", "with", "spork", "Sent", "from", "my", "iPhone", "On", "Dec", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "jaipratikreply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "I", "do", "not", "get", "growl", "notifications", "NUMBER", "When", "i", "put", "growl_notify", "in", "gemfile", "NUMBER", "I", "get", "the", "following", "error", "P", "guard", "NUMBER", "jayparteek", "guard", "Users", "jayparteek", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "head", "guard", "NUMBER", "gems", "rb", "appscript", "NUMBER", "lib", "appscript", "NUMBER", "rb", "NUMBER", "in", "_send_command", "CommandError", "Appscript", "CommandError", "OSERROR", "NUMBER", "MESSAGE", "Apple", "event", "handler", "fail", "NUMBER", "COMMAND", "app", "Library", "PreferencePanes", "Growl", "NUMBER", "prefPane", "Contents", "Resources", "GrowlHelperApp", "NUMBER", "app", "NUMBER", "register", "all_notifications", "success", "pending", "fail", "notify", "as_application", "Guard", "default_notifications", "notify", "from", "Users", "jayparteek", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "head", "guard", "NUMBER", "gems", "rb", "appscript", "NUMBER", "lib", "appscript", "NUMBER", "rb", "NUMBER", "in", "method_missing", "Mac", "OS", "X", "Lion", "NUMBER", "NUMBER", "C", "NUMBER", "Growl", "NUMBER", "Gem", "file", "group", "development", "test", "do", "gem", "rspec", "rails", "gem", "capybara", "git", "git", "github", "NUMBER", "com", "jnicklas", "capybara", "NUMBER", "git", "gem", "launchy", "gem", "database_cleaner", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "gem", "guard", "rspec", "gem", "guard", "livereload", "gem", "growl_notify", "end", "gem", "growl", "group", "test", "do", "gem", "guard", "spork", "end", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "I", "replaced", "gem", "guard", "spork", "with", "growl_notify", "in", "test", "group", "NUMBER", "Getting", "Error", "JP", "guard", "NUMBER", "guard", "ERROR", "Could", "not", "load", "guard", "spork", "or", "find", "class", "Guard", "Spork", "ERROR", "no", "such", "file", "to", "load", "guard", "spork", "ERROR", "Invalid", "Guardfile", "original", "error", "be", "undefined", "method", "new", "for", "nil", "NilClass", "Replace", "growl_notify", "with", "ruby_gntp", "Sent", "from", "my", "iPhone", "On", "Dec", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "jaipratikreply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Should", "I", "replace", "gem", "guard", "spork", "with", "growl_notify", "in", "test", "group", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Nothing", "pops", "up", "JP", "guard", "NUMBER", "jayparteek", "guard", "Guard", "uses", "GNTP", "to", "send", "notifications", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "jayparteek", "projects", "learningrails", "NUMBER", "guard", "NUMBER", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Running", "all", "specs", "Upgrade", "growl", "Sent", "from", "my", "iPhone", "On", "Dec", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "jaipratikreply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Nothing", "pops", "up", "JP", "guard", "NUMBER", "jayparteek", "guard", "Guard", "uses", "GNTP", "to", "send", "notifications", "NUMBER", "Guard", "be", "now", "watching", "at", "Users", "jayparteek", "projects", "learningrails", "NUMBER", "guard", "NUMBER", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Running", "all", "specs", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "No", "its", "NUMBER", "Use", "NUMBER", "Sent", "from", "my", "iPhone", "On", "Dec", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "jaipratikreply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "No", "its", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "I", "be", "now", "use", "NUMBER", "ver", "of", "growl", "NUMBER", "Still", "Nothing", "pops", "up", "NUMBER", "Do", "i", "need", "to", "configure", "any", "specific", "application", "inside", "Growl", "s", "application", "tab", "Ultimately", "it", "worked", "with", "following", "gemfile", "ruby", "gem", "rails", "NUMBER", "gem", "sqlite", "NUMBER", "group", "development", "test", "do", "gem", "rspec", "rails", "gem", "capybara", "git", "git", "github", "NUMBER", "com", "jnicklas", "capybara", "NUMBER", "git", "gem", "launchy", "gem", "database_cleaner", "gem", "rb", "fsevent", "require", "false", "if", "RUBY_PLATFORM", "darwin", "i", "gem", "guard", "rspec", "gem", "guard", "livereload", "end", "group", "test", "do", "gem", "guard", "spork", "gem", "ruby_gntp", "end", "Gems", "use", "only", "for", "assets", "and", "not", "required", "in", "production", "environments", "by", "default", "NUMBER", "group", "assets", "do", "gem", "sass", "rails", "NUMBER", "gem", "coffee", "rails", "NUMBER", "gem", "uglifier", "NUMBER", "end", "gem", "jquery", "rails", "But", "It", "took", "NUMBER", "seconds", "to", "pull", "output", "NUMBER", "How", "can", "i", "make", "it", "fast", "This", "be", "my", "first", "stab", "at", "NUMBER", "It", "was", "pretty", "easy", "to", "bolt", "on", "but", "the", "test", "change", "just", "enough", "that", "I", "wonder", "if", "there", "was", "a", "better", "way", "to", "encapsulate", "it", "NUMBER", "I", "didn", "t", "do", "anything", "fancy", "like", "caching", "it", "in", "memory", "like", "the", "main", "Guardfile", "NUMBER", "Should", "I", "I", "should", "add", "that", "a", "wiki", "page", "be", "forthcoming", "NUMBER", "Tomorrow", "NUMBER", "Oh", "and", "README", "Got", "it", "NUMBER", "README", "was", "pretty", "easy", "NUMBER", "Wiki", "page", "will", "still", "have", "to", "wait", "until", "a", "fresh", "day", "NUMBER", "Let", "me", "start", "with", "my", "concrete", "use", "case", "NUMBER", "I", "like", "Ctags", "LINK", "NUMBER", "And", "I", "mean", "I", "really", "Ctags", "NUMBER", "And", "it", "recently", "occur", "to", "me", "that", "while", "guard", "be", "setting", "there", "run", "my", "test", "and", "bundling", "my", "gems", "it", "would", "be", "super", "easy", "to", "make", "it", "run", "ctags", "automatically", "whenever", "I", "update", "code", "NUMBER", "But", "this", "isn", "t", "something", "that", "belongs", "in", "the", "project", "Ctags", "file", "NUMBER", "Other", "developers", "might", "not", "have", "even", "Ctags", "install", "let", "alone", "want", "it", "to", "run", "under", "my", "weird", "setup", "LINK", "ctags", "with", "git", "NUMBER", "html", "NUMBER", "No", "if", "I", "be", "to", "use", "Ctags", "to", "invoke", "guard", "it", "needs", "to", "sit", "outside", "the", "Guardfile", "NUMBER", "That", "s", "where", "my", "idea", "of", "a", "user", "config", "file", "comes", "in", "NUMBER", "This", "be", "different", "from", "NUMBER", "Guardfile", "which", "be", "use", "by", "default", "if", "no", "Guardfile", "be", "find", "NUMBER", "No", "this", "be", "more", "of", "a", "NUMBER", "guardrc", "NUMBER", "Or", "NUMBER", "guard", "NUMBER", "rb", "if", "you", "want", "to", "be", "nice", "to", "the", "people", "who", "maintain", "syntax", "highlight", "filetype", "mappings", "LINK", "ruby", "vim", "ruby", "blob", "master", "ftdetect", "ruby", "NUMBER", "vim", "NUMBER", "It", "would", "basically", "be", "concatenated", "into", "the", "Guardfile", "when", "loading", "NUMBER", "I", "haven", "t", "taken", "a", "stab", "at", "implement", "this", "though", "a", "quick", "glance", "suggests", "I", "could", "probably", "knock", "it", "out", "pretty", "easily", "NUMBER", "I", "m", "just", "taking", "the", "temperature", "NUMBER", "After", "all", "I", "could", "be", "the", "only", "lone", "nut", "out", "there", "that", "thinks", "this", "be", "a", "good", "idea", "NUMBER", "Closed", "by", "NUMBER", "thanks", "When", "configuring", "notifications", "for", "Guard", "in", "the", "Growl", "preference", "pane", "they", "all", "appear", "in", "the", "notification", "list", "under", "Guard", "or", "command", "line", "notification", "if", "use", "the", "growl", "gem", "rather", "than", "growl_notify", "NUMBER", "This", "makes", "it", "impossible", "to", "assign", "one", "sound", "to", "a", "success", "notification", "and", "a", "different", "sound", "to", "a", "failure", "notification", "NUMBER", "Is", "it", "possible", "to", "separate", "these", "out", "into", "Red", "Yellow", "and", "Green", "when", "use", "growl_notify", "That", "way", "I", "don", "t", "have", "to", "be", "looking", "at", "the", "top", "right", "of", "the", "screen", "or", "even", "at", "the", "screen", "at", "all", "to", "know", "whether", "my", "test", "pass", "NUMBER", "I", "know", "the", "growl", "gem", "doesn", "t", "support", "this", "as", "the", "growlnotify", "command", "doesn", "t", "allow", "passing", "the", "necessary", "option", "but", "growl_notify", "would", "appear", "to", "allow", "it", "by", "setting", "default_notifications", "to", "Red", "Yellow", "Green", "and", "then", "use", "with_name", "to", "pass", "it", "on", "the", "notify", "call", "NUMBER", "This", "should", "also", "be", "possible", "with", "the", "growl", "gem", "by", "setting", "an", "identifier", "LINK", "L", "NUMBER", "NUMBER", "Any", "update", "on", "this", "tinyclanger", "Sorry", "real", "life", "get", "in", "the", "way", "I", "should", "have", "some", "time", "to", "look", "at", "this", "over", "the", "weekend", "though", "NUMBER", "No", "problem", "man", "Guard", "starts", "up", "fine", "and", "says", "it", "be", "doing", "its", "thing", "NUMBER", "but", "it", "doesn", "t", "update", "with", "any", "change", "NUMBER", "Other", "projects", "be", "work", "fine", "NUMBER", "and", "this", "one", "was", "but", "just", "stopped", "NUMBER", "No", "error", "or", "anything", "NUMBER", "I", "know", "this", "isn", "t", "much", "to", "go", "on", "but", "any", "ideas", "why", "it", "would", "just", "stop", "I", "have", "restarted", "etc", "Restarting", "my", "machine", "a", "third", "time", "fix", "it", "NUMBER", "Weird", "huh", "Thanks", "No", "Event", "gets", "fired", "when", "deleting", "or", "moving", "a", "file", "be", "this", "intentional", "or", "be", "I", "miss", "something", "Even", "though", "rb", "fsevent", "fires", "when", "test", "outside", "of", "Guard", "So", "after", "looking", "into", "this", "I", "see", "why", "it", "s", "not", "implement", "NUMBER", "With", "large", "directory", "trees", "it", "could", "be", "get", "really", "memory", "hungry", "NUMBER", "But", "knowing", "this", "it", "could", "still", "be", "an", "optional", "feature", "turned", "on", "through", "options", "include_deletes", "or", "something", "NUMBER", "And", "would", "fire", "a", "new", "callback", "call", "run_on_deleted", "NUMBER", "Anyway", "just", "a", "thought", "NUMBER", "how", "about", "the", "idea", "of", "it", "be", "optional", "I", "have", "be", "playing", "around", "with", "a", "new", "listener", "but", "as", "soon", "as", "I", "add", "more", "than", "one", "to", "lib", "guard", "NUMBER", "rb", "everything", "breaks", "it", "appears", "to", "sending", "nil", "to", "fsevent", "not", "sure", "why", "that", "would", "happen", "NUMBER", "Separately", "they", "work", "just", "fine", "NUMBER", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "rb", "fsevent", "NUMBER", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "can", "t", "convert", "nil", "into", "Array", "TypeError", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "rb", "fsevent", "NUMBER", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "pipe", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "rb", "fsevent", "NUMBER", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "stop", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "darwin", "NUMBER", "rb", "NUMBER", "in", "stop", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "block", "in", "start", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "darwin", "NUMBER", "rb", "NUMBER", "in", "call", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "darwin", "NUMBER", "rb", "NUMBER", "in", "block", "in", "watch", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "rb", "fsevent", "NUMBER", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "call", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "rb", "fsevent", "NUMBER", "lib", "rb", "fsevent", "fsevent", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "guard", "NUMBER", "lib", "guard", "listeners", "darwin", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "bin", "guard", "NUMBER", "in", "load", "from", "Users", "limeyd", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "guardshopify", "bin", "guard", "NUMBER", "in", "TAG", "I", "implement", "another", "idea", "you", "can", "see", "it", "on", "my", "guard", "fork", "LINK", "Take", "a", "look", "and", "let", "me", "know", "your", "thoughts", "Changed", "it", "to", "cache", "a", "directory", "timestamp", "hash", "this", "be", "way", "faster", "and", "covers", "my", "previous", "use", "cases", "NUMBER", "Take", "a", "look", "LINK", "I", "ll", "be", "add", "some", "test", "as", "soon", "as", "I", "can", "to", "verify", "the", "use", "cases", "NUMBER", "It", "would", "be", "pretty", "nice", "to", "have", "this", "as", "optional", "Congrats", "guys", "Hi", "I", "m", "integrating", "Guard", "with", "an", "exist", "application", "and", "would", "like", "to", "silence", "the", "comments", "be", "printed", "to", "the", "terminal", "NUMBER", "Right", "now", "this", "can", "be", "do", "by", "setting", "ENV", "GUARD_ENV", "to", "test", "NUMBER", "I", "d", "love", "to", "get", "a", "more", "generic", "option", "such", "as", "silent", "to", "quiet", "guard", "when", "I", "m", "use", "it", "inside", "my", "app", "NUMBER", "Thanks", "NUMBER", "Any", "update", "on", "this", "tdreyno", "Nope", "NUMBER", "I", "m", "still", "trying", "to", "figure", "out", "if", "the", "latest", "release", "and", "usage", "change", "make", "sense", "embedded", "in", "my", "app", "NUMBER", "Seems", "the", "the", "project", "be", "focused", "on", "be", "a", "command", "line", "tool", "more", "than", "a", "library", "NUMBER", "Ok", "maybe", "we", "could", "close", "the", "issue", "in", "the", "meantime", "Closing", "NUMBER", "Will", "reopen", "with", "pull", "request", "if", "I", "end", "up", "needing", "it", "NUMBER", "The", "polling", "listener", "be", "not", "respecting", "the", "directory", "set", "for", "it", "NUMBER", "It", "was", "hardcoded", "in", "watch_change", "to", "the", "current", "work", "dir", "NUMBER", "This", "add", "a", "list", "command", "that", "shows", "all", "available", "guard", "gems", "NUMBER", "LINK", "How", "be", "that", "It", "was", "the", "only", "logical", "place", "I", "could", "think", "of", "to", "add", "it", "NUMBER", "Ciao", "This", "close", "LINK", "yup", "NUMBER", "I", "close", "it", "NUMBER", "I", "be", "use", "Guard", "on", "OS", "X", "NUMBER", "with", "rb", "fsevent", "NUMBER", "The", "project", "I", "be", "work", "on", "be", "run", "in", "RVM", "on", "REE", "NUMBER", "NUMBER", "When", "guard", "be", "run", "and", "I", "press", "Control", "c", "it", "do", "not", "quit", "immediately", "NUMBER", "I", "press", "Control", "c", "several", "times", "and", "it", "be", "simply", "echoed", "back", "to", "the", "terminal", "until", "I", "go", "to", "my", "project", "and", "change", "one", "of", "the", "watched", "file", "NUMBER", "At", "that", "point", "guard", "quits", "NUMBER", "Guard", "file", "ruby", "Run", "the", "bundle", "install", "command", "when", "the", "bundle", "file", "change", "guard", "bundler", "do", "watch", "Gemfile", "end", "compile", "coffee", "script", "file", "guard", "coffeescript", "input", "public", "coffeescripts", "output", "public", "javascripts", "Spin", "up", "Spork", "guard", "spork", "cucumber_env", "RAILS_ENV", "test", "rspec_env", "RAILS_ENV", "test", "do", "watch", "config", "application", "NUMBER", "rb", "watch", "config", "environment", "NUMBER", "rb", "watch", "r", "config", "environments", "NUMBER", "NUMBER", "rb", "watch", "r", "config", "initializers", "NUMBER", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "end", "Run", "specs", "when", "file", "change", "guard", "rspec", "version", "NUMBER", "cli", "drb", "format", "d", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "controllers", "NUMBER", "_", "controller", "NUMBER", "rb", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "m", "NUMBER", "s", "m", "NUMBER", "_", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "spec", "support", "NUMBER", "NUMBER", "rb", "spec", "watch", "r", "spec", "factories", "NUMBER", "NUMBER", "rb", "spec", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "watch", "r", "app", "views", "NUMBER", "NUMBER", "NUMBER", "erb", "haml", "m", "spec", "request", "m", "NUMBER", "_spec", "NUMBER", "rb", "end", "annotate", "models", "when", "the", "schema", "change", "guard", "annotate", "do", "watch", "db", "schema", "NUMBER", "rb", "end", "Hmm", "me", "too", "NUMBER", "Although", "sometimes", "it", "says", "Bye", "bye", "after", "a", "few", "minutes", "and", "then", "exits", "NUMBER", "I", "m", "on", "OS", "X", "NUMBER", "ruby", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "patchlevel", "NUMBER", "under", "RVM", "use", "guard", "NUMBER", "use", "rb", "fsevent", "NUMBER", "EDIT", "ctrl", "c", "works", "when", "I", "don", "t", "have", "rb", "fsevent", "loaded", "so", "I", "m", "point", "to", "that", "as", "the", "culprit", "NUMBER", "May", "be", "relate", "to", "LINK", "fsevent", "issue", "NUMBER", "I", "tried", "this", "with", "both", "the", "latest", "guard", "release", "and", "guard", "master", "with", "the", "same", "result", "NUMBER", "Same", "here", "NUMBER", "Recompiled", "rb", "fsevent", "just", "to", "be", "sure", "I", "recently", "upgrade", "to", "Lion", "and", "there", "was", "no", "change", "NUMBER", "I", "just", "verify", "that", "I", "get", "exactly", "the", "same", "behavior", "here", "on", "multiple", "variants", "of", "NUMBER", "x", "NUMBER", "Sigh", "NUMBER", "With", "NUMBER", "x", "the", "process", "tree", "looks", "like", "NUMBER", "login", "NUMBER", "threads", "bash", "NUMBER", "thread", "ruby", "NUMBER", "thread", "fsevent_watch", "NUMBER", "threads", "In", "NUMBER", "x", "the", "process", "tree", "looks", "like", "NUMBER", "login", "NUMBER", "threads", "bash", "NUMBER", "thread", "ruby", "NUMBER", "threads", "fsevent_watch", "NUMBER", "threads", "So", "NUMBER", "here", "s", "the", "scenario", "when", "use", "NUMBER", "x", "as", "far", "as", "I", "can", "guesstimate", "NUMBER", "The", "ctrl", "c", "be", "handle", "by", "the", "terminal", "that", "spawned", "the", "login", "session", "sending", "the", "signal", "to", "the", "process", "group", "owned", "by", "bash", "so", "since", "NUMBER", "that", "would", "be", "just", "bash", "and", "ruby", "NUMBER", "Bash", "do", "its", "interactive", "login", "shell", "signal", "handle", "voodoo", "that", "we", "don", "t", "care", "about", "here", "but", "ruby", "be", "blocked", "on", "IO", "since", "it", "only", "has", "one", "thread", "NUMBER", "This", "defers", "handle", "of", "the", "signal", "until", "after", "the", "next", "time", "fsevent_watch", "writes", "to", "the", "pipe", "NUMBER", "As", "you", "can", "see", "above", "ruby", "NUMBER", "x", "performs", "blocking", "IO", "on", "a", "separate", "thread", "and", "just", "works", "NUMBER", "I", "feel", "kinda", "silly", "for", "not", "realizing", "this", "would", "happen", "when", "fix", "LINK", "fsevent", "issue", "NUMBER", "thibaudgg", "have", "I", "mention", "within", "the", "past", "NUMBER", "hours", "my", "distaste", "for", "posix", "signals", "I", "m", "honestly", "not", "sure", "how", "to", "_properly_", "fix", "both", "issue", "while", "rb", "fsevent", "uses", "pipes", "for", "IPC", "NUMBER", "I", "guess", "we", "could", "add", "a", "my", "ruby", "be", "special", "needs", "option", "to", "fsevent_watch", "to", "turn", "off", "the", "behavior", "that", "makes", "it", "detach", "from", "the", "process", "group", "NUMBER", "a", "workaround", "has", "be", "push", "to", "rb", "fsevent", "master", "for", "the", "time", "be", "LINK", "fsevent", "commit", "NUMBER", "be", "NUMBER", "cd", "NUMBER", "bac", "NUMBER", "b", "NUMBER", "bca", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "Note", "that", "this", "still", "means", "SIGQUIT", "nukes", "fsevent_watch", "and", "breaks", "rb", "fsevent", "when", "use", "ruby", "NUMBER", "x", "NUMBER", "I", "d", "rather", "not", "muck", "around", "with", "it", "more", "deeply", "without", "a", "second", "pair", "of", "eyes", "and", "actually", "talking", "it", "out", "NUMBER", "However", "the", "issue", "here", "in", "guard", "could", "probably", "be", "close", "and", "the", "one", "in", "rb", "fsevent", "re", "opened", "NUMBER", "_", "thibaudgg", "as", "much", "as", "I", "bitch", "an", "alternative", "still", "wouldn", "t", "get", "around", "ruby", "NUMBER", "s", "green", "thread", "problem", "NUMBER", "You", "could", "have", "the", "simpler", "respond", "to", "any", "keypress", "UI", "but", "not", "in", "pure", "ruby", "your", "event", "loop", "for", "handle", "UI", "would", "be", "blocking", "once", "entered", "NUMBER", "Also", "signals", "_are_", "the", "standard", "unix", "way", "of", "doing", "things", "NUMBER", "and", "none", "of", "this", "becomes", "a", "real", "headache", "until", "you", "combine", "everything", "else", "with", "the", "limitation", "of", "green", "threads", "NUMBER", "You", "pretty", "much", "end", "up", "_having_", "to", "drop", "to", "C", "or", "make", "use", "of", "something", "else", "that", "drops", "to", "C", "java", "EventMachine", "NUMBER", "To", "provide", "more", "context", "this", "be", "the", "relevant", "section", "of", "io", "NUMBER", "c", "LINK", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "io", "NUMBER", "c", "L", "NUMBER", "fix", "cleanly", "in", "rb", "fsevent", "master", "NUMBER", "apparently", "IO", "select", "in", "ruby", "NUMBER", "be", "magical", "and", "allows", "for", "correct", "signal", "handle", "behavior", "despite", "be", "use", "in", "its", "blocking", "form", "no", "timeout", "NUMBER", "huzzah", "NUMBER", "ctrl", "ctrl", "C", "and", "ctrl", "Z", "works", "with", "rb", "fsevent", "NUMBER", "Nice", "Awesome", "works", "great", "for", "me", "too", "Thanks", "for", "work", "on", "this", "guys", "I", "imagine", "it", "s", "a", "silly", "question", "but", "I", "didn", "t", "find", "how", "I", "change", "the", "default", "path", "where", "Guard", "be", "watching", "at", "NUMBER", "Always", "be", "chained", "to", "the", "Guardfile", "s", "location", "Is", "there", "another", "way", "or", "option", "to", "override", "this", "My", "problem", "be", "to", "call", "Guardfile", "from", "another", "location", "NUMBER", "Is", "it", "possible", "Thanks", "for", "your", "fast", "answer", "Me", "too", "if", "you", "decided", "finally", "choose", "the", "CLI", "option", "and", "I", "ll", "post", "in", "the", "Google", "group", "the", "next", "question", "NUMBER", "Wow", "Yes", "I", "need", "it", "I", "ll", "do", "some", "test", "to", "verify", "that", "all", "works", "fine", "Thanks", "They", "ve", "be", "work", "for", "me", "NUMBER", "I", "haven", "t", "had", "time", "to", "update", "the", "test", "though", "NUMBER", "Hi", "and", "thanks", "heaps", "for", "guard", "One", "of", "my", "projects", "contains", "a", "very", "large", "subdirectory", "with", "lots", "of", "marshalled", "db", "data", "NUMBER", "Because", "of", "this", "and", "this", "code", "LINK", "L", "NUMBER", "NUMBER", "guard", "blocks", "for", "a", "couple", "of", "minutes", "after", "each", "change", "consuming", "NUMBER", "of", "one", "of", "my", "cpu", "threads", "NUMBER", "The", "large", "subtree", "of", "file", "be", "not", "be", "watched", "by", "guard", "NUMBER", "I", "believe", "that", "the", "code", "be", "recursively", "scanning", "the", "entire", "subtree", "of", "the", "directory", "and", "calculating", "a", "hash", "to", "determine", "what", "file", "have", "change", "NUMBER", "I", "m", "not", "exactly", "sure", "as", "the", "this", "code", "be", "not", "covered", "by", "test", "remove", "the", "lines", "above", "do", "not", "cause", "any", "spec", "failures", "NUMBER", "This", "seems", "odd", "as", "fs", "event", "should", "remove", "the", "need", "for", "this", "NUMBER", "I", "d", "like", "to", "be", "able", "to", "turn", "this", "function", "off", "which", "could", "easily", "be", "do", "with", "a", "config", "option", "but", "I", "d", "like", "to", "first", "understand", "what", "the", "problem", "be", "and", "why", "it", "can", "t", "be", "solve", "just", "use", "fs", "event", "NUMBER", "So", "before", "I", "dive", "in", "to", "a", "solution", "for", "my", "problem", "could", "I", "get", "some", "guidance", "on", "what", "problem", "this", "code", "be", "solving", "Thanks", "for", "reading", "Ian", "Hi", "Ian", "Because", "of", "how", "works", "rb", "fsevent", "principally", "because", "of", "Signal", "interruption", "we", "need", "to", "stop", "it", "during", "guard", "runs", "NUMBER", "So", "we", "need", "to", "reparse", "the", "whole", "directory", "after", "each", "run", "to", "see", "if", "there", "was", "file", "modify", "during", "that", "run", "before", "relaunching", "rb", "fsevent", "NUMBER", "Maybe", "an", "option", "to", "exclude", "some", "file", "your", "marshalled", "db", "data", "on", "listener", "LINK", "L", "NUMBER", "would", "fix", "this", "issue", "for", "you", "Thanks", "for", "the", "explanation", "NUMBER", "Yes", "I", "think", "that", "add", "an", "option", "to", "exclude", "file", "from", "the", "rescan", "be", "a", "goer", "NUMBER", "I", "ll", "have", "a", "crack", "at", "that", "NUMBER", "Great", "thanks", "in", "advance", "for", "your", "pull", "request", "Can", "t", "wait", "for", "the", "patch", "it", "s", "rocket", "fast", "now", "thanks", "rymai", "Hi", "rymai", "Thanks", "for", "the", "fix", "unfortunately", "it", "s", "not", "helping", "with", "my", "problem", "but", "all", "it", "will", "take", "be", "for", "me", "to", "expose", "the", "excluded", "folders", "as", "a", "configuration", "option", "NUMBER", "I", "ll", "work", "on", "a", "pull", "request", "today", "NUMBER", "Cheers", "Ian", "Yes", "I", "have", "tried", "it", "NUMBER", "It", "s", "my", "db", "data", "subdir", "with", "in", "insane", "amount", "of", "dirs", "and", "file", "in", "a", "particular", "project", "that", "s", "cause", "the", "trouble", "NUMBER", "ill", "have", "a", "look", "at", "the", "discussion", "rymai", "do", "you", "still", "need", "test", "on", "windows", "My", "team", "now", "has", "ansi", "and", "stuff", "setup", "and", "it", "s", "going", "to", "be", "a", "pain", "to", "try", "to", "undo", "that", "NUMBER", "Sounds", "good", "I", "ll", "create", "an", "issue", "if", "I", "encounter", "any", "difficulties", "ianwhite", "rymai", "Any", "progress", "here", "I", "have", "same", "issue", "Guard", "fail", "with", "exception", "on", "carrierwave", "tmp", "file", "NUMBER", "It", "would", "be", "great", "if", "guard", "will", "have", "dsl", "to", "exclude", "file", "from", "watching", "NUMBER", "Does", "somebody", "work", "on", "this", "issue", "or", "be", "it", "already", "implement", "bash", "home", "anton", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "rb", "inotify", "NUMBER", "lib", "rb", "inotify", "watcher", "NUMBER", "rb", "NUMBER", "in", "initialize", "No", "such", "file", "or", "directory", "Failed", "to", "watch", "home", "anton", "work", "pics", "public", "uploads", "tmp", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Errno", "ENOENT", "ianwhite", "did", "add", "an", "ignore_paths", "LINK", "L", "NUMBER", "DSL", "option", "to", "exclude", "file", "from", "watching", "I", "ll", "see", "if", "I", "can", "merge", "it", "later", "today", "NUMBER", "or", "you", "ianwhite", "could", "do", "a", "pull", "request", "before", "that", "Hi", "guys", "My", "fork", "s", "change", "be", "untested", "and", "my", "first", "attempt", "to", "handle", "arbitrary", "nesting", "doesn", "t", "work", "NUMBER", "It", "do", "work", "for", "ignoring", "top", "level", "paths", "though", "NUMBER", "I", "m", "not", "able", "to", "work", "on", "this", "until", "the", "weekend", "so", "if", "you", "can", "wait", "till", "then", "I", "can", "rustle", "up", "a", "pull", "request", "NUMBER", "Cheers", "Ian", "Thank", "you", "very", "much", "Ian", "no", "problem", "take", "your", "time", "When", "I", "run", "guard", "T", "I", "get", "home", "bronson", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "dsl", "NUMBER", "rb", "NUMBER", "in", "evaluate_guardfile", "undefined", "method", "empty", "for", "nil", "NilClass", "NoMethodError", "from", "home", "bronson", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "show", "from", "home", "bronson", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "home", "bronson", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "home", "bronson", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "home", "bronson", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "home", "bronson", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "home", "bronson", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "home", "bronson", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "Trivial", "fix", "makes", "Guard", "print", "no", "guards", "in", "guardfile", "instead", "of", "crash", "NUMBER", "It", "s", "event", "better", "if", "no", "guards", "in", "guardfile", "isn", "t", "printed", "when", "use", "guars", "show", "Fixed", "here", "LINK", "NUMBER", "growl_notify", "LINK", "_notify", "be", "a", "gem", "that", "uses", "AppleScript", "the", "recommended", "approach", "rather", "than", "the", "growlnotify", "CLI", "app", "which", "be", "what", "the", "growl", "gem", "uses", "to", "make", "Growl", "notifications", "NUMBER", "This", "change", "checks", "for", "growl_notify", "and", "then", "growl", "and", "uses", "the", "first", "one", "find", "NUMBER", "I", "ve", "be", "run", "this", "fork", "for", "a", "few", "days", "with", "no", "problem", "but", "I", "think", "it", "needs", "wider", "test", "since", "growl_notify", "be", "still", "pretty", "new", "NUMBER", "The", "gem", "s", "still", "fairly", "new", "so", "it", "hasn", "t", "be", "too", "widely", "test", "yet", "NUMBER", "I", "ll", "talk", "with", "the", "creator", "today", "and", "see", "if", "we", "can", "figure", "out", "what", "s", "going", "on", "NUMBER", "Are", "notifications", "actually", "reaching", "GrowlNotify", "NUMBER", "send_notification", "on", "your", "setup", "so", "growl_notify", "uses", "the", "apple", "script", "interface", "to", "talk", "to", "growl", "though", "the", "appscript", "gem", "NUMBER", "by", "doing", "this", "it", "requires", "that", "you", "follow", "the", "growl", "pattern", "of", "registering", "one", "application", "name", "per", "Application", "trying", "to", "modify", "the", "application", "name", "after", "it", "has", "be", "registered", "with", "growl", "will", "result", "in", "your", "notification", "to", "not", "be", "sent", "ex", "LINK", "L", "NUMBER", "R", "NUMBER", "Allowing", "people", "to", "define", "a", "custom", "application", "name", "be", "bad", "and", "it", "goes", "against", "the", "growl", "security", "best", "practices", "and", "hence", "will", "not", "work", "if", "you", "try", "to", "change", "the", "application", "name", "NUMBER", "The", "growl", "gem", "gets", "around", "this", "by", "use", "the", "growlnotify", "command", "which", "the", "growl", "team", "specifically", "state", "that", "it", "should", "not", "be", "use", "as", "a", "dependency", "in", "projects", "and", "be", "for", "debugging", "only", "and", "in", "so", "i", "believe", "it", "just", "throw", "the", "application", "name", "away", "since", "in", "the", "growl", "preferences", "it", "be", "registered", "as", "growlnotify", "growl_notify", "gem", "gives", "you", "the", "ability", "to", "have", "your", "application", "show", "up", "as", "a", "registered", "app", "in", "the", "growl", "preferences", "and", "it", "works", "with", "the", "native", "applescript", "driver", "these", "be", "the", "core", "differences", "NUMBER", "If", "growl_notify", "be", "the", "good", "way", "to", "use", "Growl", "what", "do", "you", "think", "of", "completely", "remove", "the", "growl", "gem", "support", "Ideally", "I", "d", "love", "to", "not", "need", "the", "growl", "gem", "NUMBER", "growl_notify", "has", "be", "work", "well", "for", "me", "on", "my", "machine", "and", "I", "d", "like", "to", "get", "a", "little", "more", "real", "world", "test", "on", "the", "combination", "before", "I", "can", "confidently", "say", "Yes", "remove", "growl", "NUMBER", "I", "ll", "play", "with", "it", "this", "week", "on", "a", "few", "other", "various", "Mac", "systems", "and", "see", "the", "results", "NUMBER", "Ok", "perfect", "good", "idea", "NUMBER", "Please", "try", "particularly", "the", "guard", "rspec", "with", "the", "embed", "growl", "formatter", "and", "with", "the", "notify", "false", "guard", "option", "NUMBER", "Thanks", "OK", "I", "just", "took", "this", "for", "a", "spin", "on", "a", "few", "other", "Macs", "I", "had", "available", "and", "growl_notify", "worked", "correctly", "with", "guard", "rspec", "and", "notifications", "didn", "t", "appear", "at", "all", "with", "notify", "false", "NUMBER", "rymai", "can", "you", "try", "out", "the", "latest", "change", "and", "see", "if", "they", "be", "work", "for", "you", "now", "Just", "FYI", "here", "s", "the", "test", "project", "I", "put", "together", "to", "test", "growl_notify", "with", "guard", "rspec", "to", "save", "you", "the", "trouble", "of", "putting", "something", "together", "yourselves", "LINK", "growl_notify", "test", "just", "to", "post", "the", "obvious", "but", "growl_notify", "do", "require", "that", "they", "have", "a", "xcode", "in", "stalled", "incase", "that", "be", "a", "deal", "killer", "jetviper", "NUMBER", "johnbintz", "rymai", "be", "you", "think", "it", "s", "a", "issue", "I", "suppose", "every", "Guard", "mac", "users", "have", "Xcode", "install", "no", "If", "they", "re", "use", "rb", "fsevent", "with", "Guard", "and", "folks", "should", "be", "they", "already", "need", "Xcode", "right", "yeah", "good", "point", "Let", "s", "do", "this", "P", "Works", "for", "me", "it", "s", "be", "solid", "for", "me", "for", "a", "month", "now", "NUMBER", "If", "people", "complain", "we", "can", "switch", "it", "back", "NUMBER", "It", "seems", "that", "in", "some", "cases", "rb", "inotify", "be", "generating", "multiple", "events", "when", "it", "should", "only", "be", "generating", "one", "NUMBER", "My", "specific", "scenario", "I", "m", "use", "the", "sublimetext", "editor", "NUMBER", "When", "saving", "a", "file", "with", "sublimetext", "it", "uses", "one", "fwrite", "operation", "and", "then", "multiple", "writes", "in", "NUMBER", "k", "blocks", "NUMBER", "as", "can", "be", "seen", "here", "LINK", "L", "NUMBER", "Guard", "be", "watching", "for", "close_write", "and", "modify", "events", "NUMBER", "A", "modify", "event", "gets", "triggered", "for", "every", "NUMBER", "k", "block", "write", "by", "the", "editor", "NUMBER", "If", "guard", "just", "listened", "for", "close_write", "it", "would", "only", "trigger", "once", "when", "the", "editor", "has", "close", "the", "file", "handle", "NUMBER", "I", "can", "t", "really", "think", "of", "any", "situation", "where", "modify", "would", "be", "needed", "but", "there", "may", "be", "some", "NUMBER", "From", "the", "inotifywatch", "LINK", "man", "page", "modify", "A", "watched", "file", "or", "a", "file", "within", "a", "watched", "directory", "was", "write", "to", "NUMBER", "close_write", "A", "watched", "file", "or", "a", "file", "within", "a", "watched", "directory", "was", "close", "after", "be", "opened", "in", "writeable", "mode", "NUMBER", "This", "do", "not", "necessarily", "imply", "the", "file", "was", "write", "to", "NUMBER", "So", "when", "the", "editor", "writes", "a", "file", "in", "chunks", "it", "fires", "several", "modify", "and", "a", "single", "close_write", "NUMBER", "So", "from", "my", "understanding", "when", "remove", "modify", "from", "the", "listener", "we", "ll", "catch", "only", "the", "end", "of", "the", "write", "operation", "NUMBER", "However", "there", "may", "be", "other", "editors", "that", "keep", "a", "file", "handle", "open", "and", "thus", "fires", "only", "modify", "events", "NUMBER", "I", "m", "not", "sure", "how", "to", "approach", "this", "since", "it", "may", "break", "another", "editor", "and", "I", "m", "not", "use", "Linux", "on", "my", "development", "machine", "NUMBER", "I", "d", "like", "to", "see", "more", "analysis", "of", "inotify", "events", "for", "other", "popular", "editors", "like", "vim", "nano", "joe", "gedit", "kate", "SciTE", "etc", "NUMBER", "Here", "be", "the", "inotifywatch", "output", "from", "a", "few", "common", "editors", "NUMBER", "I", "opened", "the", "file", "launched", "inotifywatch", "change", "it", "saved", "it", "killed", "inotify", "watch", "Sublime", "Text", "total", "modify", "close_write", "open", "filename", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "coffee", "script", "NUMBER", "coffee", "Vim", "total", "attrib", "move_self", "delete_self", "filename", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "coffee", "script", "NUMBER", "coffee", "Gedit", "total", "access", "attrib", "close_write", "close_nowrite", "open", "delete_self", "filename", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "coffee", "script", "NUMBER", "coffee", "nano", "total", "modify", "close_write", "open", "filename", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "coffee", "script", "NUMBER", "coffee", "joe", "total", "access", "modify", "attrib", "close_write", "close_nowrite", "open", "filename", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "coffee", "script", "NUMBER", "coffee", "jedit", "total", "move_self", "filename", "NUMBER", "NUMBER", "coffee", "script", "NUMBER", "coffee", "scite", "total", "modify", "close_write", "open", "filename", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "coffee", "script", "NUMBER", "coffee", "bluefish", "total", "attrib", "close_write", "open", "filename", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "coffee", "script", "NUMBER", "coffee", "echo", "foo", "coffee", "test", "NUMBER", "txt", "total", "modify", "close_write", "open", "filename", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "coffee", "test", "NUMBER", "txt", "It", "looks", "to", "me", "like", "everything", "has", "a", "close_write", "except", "for", "a", "few", "that", "have", "neither", "close_write", "nor", "modify", "NUMBER", "I", "think", "these", "ones", "write", "to", "a", "tmp", "file", "and", "then", "move", "it", "into", "place", "over", "the", "exist", "file", "NUMBER", "Awesome", "job", "I", "will", "take", "care", "of", "it", "tomorrow", "NUMBER", "Thanks", "a", "lot", "NUMBER", "I", "d", "like", "to", "add", "this", "issue", "which", "be", "now", "close", "to", "this", "thread", "LINK", "rspec", "issue", "NUMBER", "issuecomment", "NUMBER", "Fixed", "in", "this", "commit", "LINK", "It", "would", "be", "nice", "to", "be", "able", "to", "have", "earlier", "guards", "prevent", "later", "ones", "from", "firing", "for", "a", "given", "file", "change", "NUMBER", "For", "example", "if", "a", "Javascript", "file", "doesn", "t", "pass", "JSHint", "I", "don", "t", "want", "my", "asset", "compiler", "to", "run", "NUMBER", "This", "change", "can", "break", "actuals", "guard", "no", "Implement", "it", "before", "a", "version", "NUMBER", "be", "not", "a", "good", "idea", "if", "be", "true", "NUMBER", "If", "you", "test", "if", "return", "value", "be", "false", "and", "not", "just", "evaluate", "has", "false", "result", "be", "probably", "less", "serious", "but", "I", "m", "not", "sure", "be", "a", "good", "idea", "anyway", "NUMBER", "I", "m", "with", "yannlugrin", "NUMBER", "This", "be", "a", "dangerous", "request", "since", "it", "may", "break", "the", "whole", "Guard", "ecosystem", "NUMBER", "Sure", "the", "example", "in", "the", "README", "returned", "always", "true", "from", "the", "various", "guards", "but", "it", "was", "never", "stated", "that", "these", "methods", "should", "return", "a", "boolean", "indicating", "the", "status", "of", "the", "action", "and", "more", "importantly", "the", "return", "value", "was", "never", "evaluated", "NUMBER", "I", "took", "three", "Guards", "guard", "minitest", "guard", "rspec", "and", "guard", "coffeescript", "and", "looked", "at", "the", "main", "Guard", "methods", "if", "they", "return", "a", "boolean", "indication", "the", "action", "success", "NUMBER", "As", "result", "only", "guard", "minitest", "be", "do", "right", "the", "other", "two", "guards", "return", "a", "wrong", "value", "which", "would", "lead", "to", "unexpect", "results", "NUMBER", "So", "be", "prepared", "to", "go", "through", "all", "available", "guards", "and", "fix", "them", "if", "necessary", "or", "the", "joy", "of", "use", "Guard", "will", "be", "lowered", "NUMBER", "I", "find", "this", "issue", "very", "interesting", "since", "it", "would", "enable", "us", "to", "do", "stuff", "we", "discussed", "in", "NUMBER", "My", "concern", "was", "only", "to", "not", "underestimate", "the", "impact", "it", "has", "NUMBER", "From", "the", "semantic", "version", "philosophy", "it", "should", "be", "do", "before", "NUMBER", "but", "it", "should", "be", "carefully", "planned", "NUMBER", "Enhance", "documentation", "and", "make", "it", "clear", "what", "each", "guard", "method", "MUST", "return", "NUMBER", "NUMBER", "Go", "over", "all", "available", "Guards", "and", "check", "if", "it", "conforms", "to", "the", "new", "rules", "NUMBER", "NUMBER", "Implement", "the", "change", "within", "Guard", "I", "totally", "agree", "with", "nearly", "everything", "said", "above", "most", "notably", "the", "most", "_obvious_", "and", "_elegant_", "way", "to", "implement", "it", "would", "be", "to", "have", "returning", "false", "from", "any", "of", "the", "calls", "stop", "the", "chain", "for", "that", "change", "use", "the", "return", "value", "will", "cause", "breakage", "since", "it", "wasn", "t", "the", "documented", "behavior", "Waiting", "until", "v", "NUMBER", "to", "institute", "the", "change", "be", "a", "perfectly", "reasonable", "solution", "particularly", "if", "that", "s", "not", "expected", "to", "be", "that", "far", "off", "NUMBER", "There", "be", "a", "couple", "of", "other", "variations", "that", "would", "work", "as", "well", "but", "aren", "t", "as", "elegant", "have", "guards", "declare", "whether", "returning", "false", "be", "meant", "to", "be", "a", "cancellation", "perhaps", "by", "include", "Guard", "Cancelling", "or", "setting", "a", "false_cancels_chain", "class", "attribute", "to", "true", "NUMBER", "The", "default", "would", "be", "that", "this", "behavior", "be", "_not_", "intended", "at", "least", "until", "v", "NUMBER", "NUMBER", "add", "some", "sort", "of", "change", "object", "as", "an", "optional", "additional", "parameter", "to", "start", "reload", "etc", "NUMBER", "that", "has", "a", "cancel", "method", "that", "Guard", "start", "and", "run_on_change_for_all_guards", "check", "between", "guards", "NUMBER", "Again", "neither", "of", "the", "alternatives", "I", "suggest", "be", "as", "nice", "but", "they", "be", "a", "little", "safer", "NUMBER", "Either", "could", "be", "implement", "in", "a", "minor", "release", "without", "breaking", "any", "exist", "guards", "NUMBER", "This", "would", "be", "a", "perfect", "use", "case", "for", "the", "Google", "group", "NUMBER", "Is", "there", "a", "way", "you", "can", "send", "a", "message", "to", "all", "members", "of", "the", "Guard", "organization", "We", "should", "bring", "all", "Guard", "developers", "onto", "the", "Google", "group", "for", "exactly", "such", "cases", "we", "re", "only", "NUMBER", "members", "for", "now", "Speaking", "of", "group", "it", "might", "be", "worth", "considering", "only", "letting", "a", "Guard", "cancel", "a", "change", "_within", "a", "group_", "NUMBER", "Or", "that", "might", "be", "too", "complex", "NUMBER", "I", "m", "not", "sure", "whether", "it", "muddies", "the", "meaning", "of", "group", "or", "enhances", "it", "NUMBER", "I", "think", "I", "d", "want", "it", "to", "cancel", "within", "a", "group", "but", "I", "need", "to", "think", "about", "it", "more", "NUMBER", "One", "use", "case", "I", "d", "use", "if", "I", "have", "a", "group", "chained", "like", "this", "coffeescript", "compass", "livereload", "I", "wouldn", "t", "want", "to", "trigger", "the", "LiveReload", "if", "either", "of", "the", "prior", "Guards", "fail", "NUMBER", "Same", "if", "I", "chain", "this", "way", "coffeescript", "jasmine", "headless", "webkit", "with", "jasmine", "NUMBER", "yml", "configured", "to", "use", "the", "compiled", "JS", "file", "rather", "than", "raw", "CoffeeScript", "for", "the", "app", "NUMBER", "If", "set", "up", "correctly", "it", "would", "prevent", "some", "redundant", "things", "from", "happening", "browser", "reloading", "a", "broken", "Compass", "stylesheet", "or", "JHW", "and", "CoffeeScript", "complaining", "about", "the", "same", "syntax", "error", "in", "the", "same", "file", "NUMBER", "I", "m", "sure", "there", "be", "disadvantages", "with", "this", "arrangement", "though", "NUMBER", "I", "just", "haven", "t", "pondered", "enough", "to", "know", "them", "NUMBER", "I", "agree", "that", "the", "dependency", "should", "be", "handle", "only", "within", "a", "group", "although", "it", "makes", "the", "change", "more", "complex", "since", "Guard", "doesn", "t", "know", "anything", "about", "group", "at", "runtime", "NUMBER", "Disabled", "group", "be", "just", "not", "evaluated", "when", "the", "DSL", "be", "evaluated", "NUMBER", "Very", "good", "point", "about", "be", "careful", "with", "structure", "modification", "of", "guard", "NUMBER", "Your", "propose", "solution", "be", "thus", "elegant", "and", "has", "the", "advantage", "that", "we", "don", "t", "have", "to", "deal", "with", "inconsistency", "of", "Hash", "ordering", "in", "different", "Ruby", "version", "since", "Array", "have", "always", "be", "ordered", "NUMBER", "Having", "the", "group", "available", "would", "also", "enable", "us", "to", "implement", "issue", "NUMBER", "more", "easily", "NUMBER", "Hi", "guys", "I", "start", "to", "hack", "around", "for", "this", "feature", "I", "ve", "already", "add", "the", "group", "attribute", "here", "LINK", "NUMBER", "I", "think", "we", "need", "a", "new", "option", "for", "the", "Dsl", "NUMBER", "group", "method", "to", "enable", "dependency", "between", "guards", "inside", "a", "group", "since", "sometimes", "group", "be", "not", "necessarily", "composed", "of", "dependent", "guards", "NUMBER", "Such", "option", "could", "be", "ruby", "group", "backend", "halt_on_fail", "true", "do", "guard", "spork", "guard", "rspec", "end", "or", "group", "backend", "chained", "true", "do", "guard", "spork", "guard", "rspec", "end", "_Note", "With", "such", "a", "name", "this", "option", "should", "default", "to", "false", "NUMBER", "_", "Please", "give", "ideas", "for", "an", "appropriate", "name", "for", "this", "option", "PS", "Do", "you", "think", "I", "should", "mail", "the", "Google", "group", "NUMBER", "people", "now", "for", "this", "NUMBER", "for", "halt_on_fail", "NUMBER", "for", "the", "Google", "mailing", "as", "well", "NUMBER", "Will", "this", "still", "be", "managed", "by", "returning", "false", "from", "the", "run_", "methods", "for", "failure", "and", "something", "not", "false", "for", "success", "One", "option", "to", "make", "for", "better", "backwards", "compatibility", "would", "be", "to", "use", "a", "raise", "or", "even", "a", "throw", "instead", "of", "returning", "false", "to", "indicate", "a", "stop", "NUMBER", "I", "personally", "think", "this", "be", "a", "perfect", "place", "to", "use", "throw", "which", "doesn", "t", "see", "a", "lot", "of", "action", "in", "Ruby", "NUMBER", "Hey", "guys", "I", "ve", "just", "push", "a", "first", "implementation", "of", "this", "feature", "in", "the", "new", "guard_dependencies", "branch", "LINK", "_dependencies", "NUMBER", "I", "think", "a", "refactoring", "of", "group", "into", "a", "Guard", "Group", "class", "will", "be", "needed", "next", "NUMBER", "Let", "me", "know", "what", "you", "think", "I", "ve", "use", "your", "suggestion", "jamesarosen", "for", "the", "throw", "very", "cool", "idea", "thanks", "NUMBER", "Very", "well", "do", "R\u00e9my", "thanks", "a", "lot", "NUMBER", "This", "serves", "also", "as", "a", "good", "basis", "for", "other", "ideas", "like", "NUMBER", "So", "then", "I", "need", "to", "upgrade", "my", "Guards", "to", "throw", "task_has_failed", "Next", "we", "need", "to", "document", "this", "for", "Guard", "developers", "and", "I", "d", "like", "to", "take", "the", "opportunity", "to", "add", "full", "YARD", "LINK", "support", "when", "thibaudgg", "and", "rymai", "agrees", "NUMBER", "Hey", "thanks", "Michael", "I", "personally", "totally", "agree", "for", "YARD", "I", "even", "documented", "the", "whole", "project", "some", "months", "ago", "NUMBER", "I", "ll", "see", "if", "it", "still", "up", "to", "date", "and", "push", "it", "to", "a", "branch", "if", "yes", "it", "could", "be", "a", "bootstrap", "NUMBER", "Sent", "from", "my", "iPhone", "On", "NUMBER", "sept", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "Michael", "Kessler", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Very", "well", "do", "R\u00e9my", "thanks", "a", "lot", "NUMBER", "This", "serves", "also", "as", "a", "good", "basis", "for", "other", "ideas", "like", "NUMBER", "So", "then", "I", "need", "to", "upgrade", "my", "Guards", "to", "throw", "task_has_failed", "Next", "we", "need", "to", "document", "this", "for", "Guard", "developers", "and", "I", "d", "like", "to", "take", "the", "opportunity", "to", "add", "full", "YARD", "LINK", "support", "when", "thibaudgg", "and", "rymai", "agrees", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "It", "doesn", "t", "matter", "whether", "your", "Yard", "branch", "be", "up", "to", "date", "or", "not", "NUMBER", "I", "anyway", "would", "go", "through", "Guard", "class", "by", "class", "method", "by", "method", "and", "see", "what", "be", "in", "your", "branch", "transfer", "and", "update", "it", "where", "necessary", "NUMBER", "Ok", "I", "ve", "push", "it", "here", "LINK", "in", "reality", "I", "almost", "only", "documented", "the", "Guard", "Dsl", "class", "NUMBER", "So", "feel", "free", "to", "document", "Guard", "Thanks", "NUMBER", "I", "ve", "already", "annotated", "NUMBER", "with", "yardoc", "and", "push", "it", "to", "master", "NUMBER", "I", "ve", "still", "some", "limited", "knowledge", "in", "some", "areas", "of", "Guard", "so", "I", "d", "be", "happy", "whenever", "you", "touch", "a", "method", "please", "check", "the", "docs", "and", "add", "the", "not", "so", "obvious", "things", "you", "ve", "get", "from", "your", "experience", "with", "Guard", "NUMBER", "This", "then", "makes", "the", "docs", "really", "useful", "NUMBER", "There", "be", "still", "some", "minor", "format", "issue", "that", "I", "ve", "to", "address", "but", "at", "least", "it", "s", "a", "good", "starting", "point", "for", "the", "future", "LINK", "There", "be", "also", "a", "problem", "with", "the", "GitHub", "flavored", "markdown", "that", "be", "not", "support", "on", "rubydoc", "NUMBER", "info", "NUMBER", "I", "ve", "to", "do", "more", "investigation", "on", "that", "but", "in", "the", "worst", "case", "we", "should", "drop", "the", "fancy", "colorization", "in", "the", "readme", "to", "make", "it", "work", "NUMBER", "This", "be", "simply", "plain", "awesomeness", "Thank", "you", "Michael", "I", "ve", "now", "merge", "the", "branch", "into", "master", "NUMBER", "Next", "step", "be", "real", "test", "and", "to", "add", "throw", "task_has_failed", "into", "exist", "Guards", "NUMBER", "Love", "it", "Guard", "needs", "at", "least", "a", "single", "guard", "declaration", "in", "Guardfile", "to", "work", "NUMBER", "It", "should", "just", "work", "with", "a", "single", "generic", "watch", "also", "like", "so", "watch", "NUMBER", "txt", "do", "path", "markdown", "path", "end", "Have", "you", "seen", "guard", "shell", "LINK", "shell", "You", "could", "do", "something", "like", "this", "guard", "shell", "do", "watch", "NUMBER", "txt", "path", "markdown", "path", "end", "I", "would", "not", "make", "the", "Guard", "codebase", "more", "complex", "just", "do", "implement", "something", "that", "can", "already", "be", "do", "in", "a", "slightly", "other", "way", "NUMBER", "For", "more", "complex", "use", "cases", "there", "be", "inline", "guards", "and", "if", "this", "be", "not", "enough", "you", "should", "implement", "a", "specific", "guard", "gem", "NUMBER", "And", "for", "your", "very", "specific", "example", "guard", "markdown", "LINK", "markdown", "would", "be", "the", "best", "solution", "NUMBER", "My", "issue", "wasn", "t", "a", "specific", "one", "It", "felt", "like", "a", "bug", "in", "the", "way", "guard", "parses", "Guardfiles", "NUMBER", "If", "a", "watch", "by", "itself", "works", "with", "another", "guard", "then", "it", "should", "work", "also", "without", "the", "guard", "NUMBER", "Otherwise", "you", "_always_", "need", "a", "guard", "gem", "in", "order", "to", "use", "guard", "which", "I", "feel", "be", "overkill", "NUMBER", "You", "_should_", "be", "able", "to", "use", "guard", "without", "any", "gems", "even", "guard", "shell", "IMHO", "NUMBER", "It", "s", "not", "a", "bug", "it", "s", "the", "design", "of", "the", "Guard", "DSL", "LINK", "NUMBER", "But", "you", "re", "totally", "right", "capotej", "all", "the", "points", "you", "ve", "made", "be", "valid", "and", "worth", "pursuing", "NUMBER", "After", "a", "second", "look", "I", "think", "it", "won", "t", "be", "that", "hard", "to", "implement", "because", "the", "base", "Guard", "LINK", "class", "be", "a", "non", "functional", "Guard", "and", "could", "be", "use", "as", "a", "default", "Guard", "because", "in", "your", "example", "the", "work", "be", "do", "within", "the", "watcher", "NUMBER", "With", "this", "design", "only", "the", "DSL", "has", "to", "be", "change", "a", "bit", "and", "the", "rest", "of", "Guard", "could", "be", "untouched", "NUMBER", "So", "feel", "free", "to", "send", "a", "pull", "request", "NUMBER", "When", "error", "occured", "I", "want", "to", "know", "wheter", "Guardfile", "has", "problem", "or", "not", "NUMBER", "ex", "NUMBER", "guard", "guard", "test", "NUMBER", "So", "it", "be", "usefult", "to", "know", "the", "system", "command", "exactly", "which", "executed", "by", "guard", "NUMBER", "This", "patch", "output", "the", "command", "and", "it", "s", "options", "To", "use", "this", "TAG", "guard", "dry_run", "TAG", "It", "s", "work", "for", "me", "in", "RMI", "NUMBER", "p", "NUMBER", "How", "about", "this", "This", "be", "a", "nice", "idea", "but", "it", "assumes", "that", "every", "guard", "uses", "the", "Kernel", "module", "system", "method", "NUMBER", "So", "this", "be", "a", "bit", "misleading", "because", "you", "could", "also", "execute", "commands", "with", "x", "or", "and", "write", "content", "through", "the", "File", "class", "NUMBER", "I", "m", "fine", "with", "this", "but", "at", "least", "it", "needs", "a", "clear", "statement", "in", "the", "README", "that", "points", "out", "the", "issue", "with", "dry", "run", "NUMBER", "I", "add", "some", "specs", "and", "some", "lines", "in", "README", "CHANGELOG", "NUMBER", "And", "add", "support", "for", "Kernel", "NUMBER", "and", "x", "literal", "NUMBER", "But", "I", "don", "t", "know", "the", "way", "to", "write", "content", "through", "the", "File", "class", "NUMBER", "Can", "you", "show", "me", "an", "example", "or", "reference", "In", "Ruby", "file", "IO", "be", "usually", "do", "through", "the", "File", "LINK", "doc", "NUMBER", "org", "core", "classes", "File", "NUMBER", "html", "class", "File", "NUMBER", "open", "filename", "w", "f", "f", "NUMBER", "write", "content", "But", "the", "open", "method", "yields", "an", "IO", "LINK", "doc", "NUMBER", "org", "core", "classes", "IO", "NUMBER", "html", "instance", "NUMBER", "So", "you", "ll", "fine", "with", "the", "methods", "write", "and", "write_nonblock", "on", "the", "IO", "class", "NUMBER", "Thank", "you", "for", "your", "explanation", "NUMBER", "But", "I", "m", "sorry", "I", "cannot", "understand", "the", "relation", "between", "external", "command", "execution", "and", "File", "IO", "class", "NUMBER", "So", "please", "can", "you", "add", "a", "note", "about", "the", "issue", "in", "README", "NUMBER", "From", "my", "understanding", "a", "dry", "run", "should", "not", "write", "anything", "NUMBER", "Not", "all", "Guards", "uses", "system", "calls", "to", "execute", "an", "external", "command", "some", "Guards", "uses", "normal", "Ruby", "libraries", "like", "guard", "compass", "that", "uses", "Compass", "LINK", "compass", "blob", "master", "lib", "guard", "compass", "NUMBER", "rb", "L", "NUMBER", "which", "writes", "through", "standard", "Ruby", "IO", "to", "a", "file", "LINK", "L", "NUMBER", "hence", "the", "hint", "to", "make", "any", "IO", "write", "operations", "non", "functional", "for", "the", "dry", "run", "NUMBER", "I", "mean", "you", "already", "figured", "out", "how", "to", "redefine", "a", "method", "and", "write", "a", "nice", "spec", "for", "it", "so", "you", "ll", "just", "have", "to", "do", "the", "same", "for", "IO", "s", "write", "methods", "NUMBER", "Then", "you", "have", "a", "NUMBER", "dry", "run", "possibility", "NUMBER", "One", "last", "thing", "I", "notice", "You", "should", "have", "no", "space", "before", "the", "closing", "parenthesis", "so", "instead", "of", "define_method", "system", "please", "write", "define_method", "system", "NUMBER", "In", "addition", "you", "also", "should", "include", "FileUtils", "DryRun", "when", "in", "dry", "run", "mode", "include", "FileUtils", "DryRun", "Then", "you", "re", "at", "NUMBER", "Sadly", "I", "haven", "t", "find", "something", "similar", "for", "File", "or", "IO", "NUMBER", "OK", "You", "be", "right", "NUMBER", "I", "can", "understand", "what", "you", "say", "NUMBER", "I", "thought", "a", "dry", "run", "only", "print", "a", "command", "and", "it", "s", "options", "at", "first", "NUMBER", "But", "now", "I", "think", "a", "dry", "run", "should", "not", "change", "file", "too", "NUMBER", "I", "will", "try", "to", "support", "write", "and", "write_nonblock", "in", "IO", "and", "to", "use", "FileUtils", "DryRun", "NUMBER", "Hi", "I", "tried", "to", "use", "FileUtils", "DryRun", "NUMBER", "But", "I", "realize", "it", "be", "difficult", "for", "me", "NUMBER", "Here", "be", "a", "problem", "NUMBER", "Once", "include", "FileUtils", "DryRun", "in", "global", "cannot", "exclude", "the", "FileUtils", "DryRun", "module", "NUMBER", "So", "I", "cannnot", "execute", "specs", "at", "one", "time", "NUMBER", "Do", "you", "have", "any", "ideas", "Oops", "NUMBER", "Didn", "t", "think", "about", "this", "side", "effect", "NUMBER", "I", "think", "you", "can", "leave", "it", "because", "you", "anyway", "don", "t", "get", "a", "NUMBER", "dry", "run", "for", "sure", "NUMBER", "Just", "add", "some", "information", "what", "dry", "run", "do", "to", "the", "readme", "NUMBER", "I", "m", "leaving", "today", "for", "a", "three", "week", "holiday", "so", "yannlugrin", "rymai", "or", "thibaudgg", "can", "you", "please", "take", "care", "of", "this", "Thanks", "a", "lot", "netzpirat", "Ok", "we", "ll", "take", "care", "of", "it", "NUMBER", "Thanks", "enjoy", "your", "holidays", "Hum", "hum", "we", "did_", "nt_", "take", "care", "of", "this", "sorry", "NUMBER", "netzpirat", "be", "you", "still", "interested", "and", "available", "for", "taking", "care", "of", "this", "I", "just", "merge", "this", "branch", "and", "spent", "some", "time", "playing", "with", "this", "feature", "NUMBER", "To", "be", "honest", "I", "have", "no", "good", "feeling", "with", "it", "NUMBER", "Catching", "IO", "writes", "has", "large", "scale", "change", "in", "the", "whole", "Ruby", "interpreter", "and", "makes", "all", "the", "specs", "brittle", "NUMBER", "I", "know", "this", "was", "something", "I", "suggested", "but", "I", "think", "I", "went", "to", "far", "with", "this", "demand", "and", "I", "was", "misguided", "by", "the", "term", "dry", "run", "NUMBER", "After", "reading", "the", "description", "of", "this", "pull", "request", "again", "I", "came", "to", "the", "conclusion", "that", "dry", "run", "be", "probably", "not", "the", "right", "term", "for", "what", "the", "original", "need", "for", "this", "pull", "request", "was", "_Seeing", "what", "system", "commands", "have", "be", "executed", "NUMBER", "_", "So", "if", "there", "be", "no", "objections", "I", "suggest", "to", "drop", "the", "dry", "run", "option", "completely", "since", "we", "anyway", "cannot", "guarantee", "this", "for", "NUMBER", "and", "just", "output", "a", "hint", "like", "Execute", "command", "command", "args", "before", "any", "system", "call", "be", "executed", "when", "we", "be", "in", "debug", "mode", "NUMBER", "Is", "this", "ok", "for", "you", "I", "TOTALLY", "agree", "and", "I", "must", "confess", "I", "was", "already", "thinking", "of", "it", "NUMBER", "Let", "s", "use", "UI", "NUMBER", "debug", "more", "I", "m", "sorry", "for", "late", "reply", "NUMBER", "Thank", "you", "for", "your", "merge", "my", "pull", "request", "This", "be", "the", "function", "that", "I", "imagined", "first", "time", "NUMBER", "So", "I", "should", "describe", "this", "feature", "as", "debug", "or", "verbose", "option", "instead", "of", "dry", "run", "Ha", "I", "just", "learned", "about", "it", "today", "for", "this", "project", "This", "shows", "the", "backtrace", "when", "there", "be", "a", "problem", "with", "a", "watch", "action", "makes", "for", "easier", "watch", "debugging", "No", "problem", "It", "s", "rather", "un", "UNIXy", "to", "put", "a", "non", "hidden", "config", "file", "in", "the", "home", "directory", "NUMBER", "This", "patch", "makes", "it", "hidden", "NUMBER", "I", "can", "look", "into", "make", "it", "backwards", "compatible", "if", "you", "deem", "it", "appropriate", "but", "I", "ve", "already", "convinced", "the", "original", "contributors", "who", "originally", "add", "the", "home", "config", "file", "so", "I", "don", "t", "think", "it", "s", "a", "big", "deal", "NUMBER", "Would", "much", "prefer", "this", "style", "of", "global", "Guardfile", "NUMBER", "Thanks", "for", "submit", "Whoops", "Fixed", "the", "README", "and", "update", "the", "CHANGELOG", "NUMBER", "It", "s", "certainly", "possible", "to", "support", "both", "file", "names", "but", "like", "any", "feature", "it", "add", "complexity", "NUMBER", "It", "be", "my", "opinion", "that", "very", "few", "would", "actually", "prefer", "a", "file", "named", "Guardfile", "in", "their", "home", "directory", "so", "it", "s", "not", "worth", "add", "such", "complexity", "for", "a", "backwards", "compatibility", "edge", "case", "in", "pre", "NUMBER", "software", "NUMBER", "But", "of", "course", "it", "s", "not", "my", "software", "so", "if", "it", "s", "really", "desired", "I", "ll", "look", "into", "it", "NUMBER", "This", "addition", "add", "a", "new", "CLI", "method", "show", "aliased", "to", "T", "to", "work", "like", "Rake", "Capistrano", "which", "concisely", "lists", "what", "s", "in", "the", "Guardfile", "and", "in", "what", "group", "global", "rspec", "version", "NUMBER", "Group", "exceptional", "breaking", "Group", "rails", "rails", "port", "NUMBER", "timeout", "NUMBER", "daemon", "true", "Group", "doc", "rocco", "dir", "doc", "rocco", "shell", "livereload", "It", "do", "it", "by", "creating", "a", "new", "DSL", "introspection", "class", "based", "on", "Guard", "Dsl", "which", "prepares", "a", "subset", "of", "Guardfile", "structure", "for", "display", "NUMBER", "Individual", "watch", "es", "be", "not", "shown", "since", "showing", "those", "would", "be", "a", "little", "too", "much", "like", "actually", "open", "the", "Guardfile", "NUMBER", "Written", "cause", "I", "was", "get", "lazy", "about", "cracking", "open", "Guardfiles", "on", "all", "my", "projects", "to", "see", "what", "projects", "had", "what", "group", "available", "for", "run", "NUMBER", "Hopefully", "should", "also", "help", "new", "people", "on", "Guard", "use", "projects", "get", "up", "to", "speed", "with", "Guard", "usage", "faster", "NUMBER", "thibaudgg", "what", "tool", "do", "I", "use", "to", "generate", "the", "actual", "man", "page", "so", "I", "know", "I", "m", "doing", "it", "right", "OK", "I", "think", "I", "build", "the", "manpage", "right", "NUMBER", "I", "cleaned", "it", "up", "a", "bit", "more", "and", "add", "a", "few", "of", "the", "other", "commands", "NUMBER", "Test", "it", "again", "more", "carefully", "NUMBER", "Can", "some", "one", "recheck", "pls", "I", "test", "it", "on", "windows", "with", "win", "NUMBER", "console", "and", "without", "NUMBER", "It", "works", "for", "me", "NUMBER", "But", "I", "want", "someone", "else", "to", "test", "it", "NUMBER", "Maybe", "we", "need", "implement", "spec", "for", "this", "case", "NUMBER", "But", "I", "m", "not", "sure", "how", "to", "write", "such", "specs", "NUMBER", "Maybe", "something", "like", "aruba", "LINK", "NUMBER", "Sorry", "for", "the", "delay", "NUMBER", "To", "test", "it", "do", "I", "just", "need", "to", "update", "to", "the", "latest", "guard", "surajreddy", "no", "the", "patch", "isn", "t", "merge", "in", "Guard", "yet", "NUMBER", "You", "can", "try", "it", "by", "use", "the", "stereobooster", "Guard", "fork", "LINK", "in", "your", "Gemfile", "NUMBER", "Thanks", "thibaudgg", "I", "seem", "to", "be", "use", "guard", "rspec", "I", "don", "t", "know", "how", "to", "test", "this", "out", "with", "that", "NUMBER", "Once", "I", "apply", "the", "fix", "in", "the", "issue", "I", "brought", "up", "LINK", "issuecomment", "NUMBER", "colors", "seem", "to", "work", "fine", "NUMBER", "I", "did", "have", "to", "install", "ansi", "NUMBER", "Testcases", "be", "NUMBER", "windows", "without", "ansi", "and", "win", "NUMBER", "console", "all", "message", "in", "console", "without", "colors", "NUMBER", "windows", "with", "ansi", "all", "message", "in", "console", "colored", "NUMBER", "windows", "with", "win", "NUMBER", "console", "all", "message", "in", "console", "colored", "NUMBER", "not", "windows", "all", "message", "in", "console", "colored", "These", "case", "be", "not", "covered", "with", "RSpec", "NUMBER", "I", "test", "it", "myself", "not", "automate", "Hello", "following", "the", "conversation", "from", "the", "other", "issue", "and", "seems", "stereobooster", "implementation", "be", "clear", "NUMBER", "It", "attempts", "to", "use", "ansicon", "first", "checking", "ANSICON", "environment", "variable", "and", "then", "falls", "back", "to", "win", "NUMBER", "console", "gem", "NUMBER", "A", "minor", "nitpick", "I", "will", "suggest", "the", "message", "recommends", "ANSICON", "over", "win", "NUMBER", "console", "specially", "since", "it", "be", "no", "longer", "maintained", "LINK", "all", "love", "colors", "RSpec", "NUMBER", "has", "drop", "support", "on", "win", "NUMBER", "console", "and", "now", "uses", "ANSICON", "only", "NUMBER", "Cheers", "NUMBER", "I", "update", "guard", "from", "NUMBER", "to", "NUMBER", "and", "find", "that", "debugger", "no", "longer", "appeared", "in", "terminal", "when", "I", "run", "Rspec", "or", "Cucumber", "within", "Textmate", "NUMBER", "Note", "that", "debugger", "would", "run", "from", "the", "Guard", "NUMBER", "But", "after", "the", "update", "the", "debugger", "would", "appear", "in", "Terminal", "and", "then", "a", "Terminated", "message", "appeared", "and", "Guard", "quit", "NUMBER", "I", "m", "not", "sure", "I", "actually", "haven", "t", "be", "use", "it", "of", "late", "NUMBER", "If", "I", "use", "it", "again", "I", "ll", "update", "this", "NUMBER", "If", "a", "task", "for", "a", "guard", "throw", "an", "exception", "the", "error", "be", "swallowed", "NUMBER", "This", "be", "fine", "except", "that", "if", "you", "re", "developing", "a", "guard", "all", "you", "get", "be", "an", "error", "message", "without", "an", "idea", "of", "where", "it", "occur", "which", "be", "not", "very", "helpful", "NUMBER", "This", "change", "prints", "the", "exception", "and", "its", "backtrace", "to", "the", "console", "before", "continuing", "NUMBER", "One", "note", "about", "this", "be", "that", "I", "didn", "t", "know", "whether", "to", "print", "to", "stderr", "or", "use", "UI", "NUMBER", "error", "NUMBER", "I", "don", "t", "really", "know", "what", "the", "point", "of", "the", "UI", "module", "be", "since", "it", "resets", "colors", "one", "would", "think", "that", "it", "prints", "colored", "message", "also", "but", "it", "doesn", "t", "do", "that", "so", "I", "don", "t", "exactly", "see", "why", "it", "s", "be", "use", "NUMBER", "Feel", "free", "to", "change", "it", "to", "UI", "NUMBER", "error", "if", "that", "s", "what", "you", "really", "want", "though", "NUMBER", "Hmm", "NUMBER", "Yeah", "UI", "NUMBER", "debug", "might", "make", "more", "sense", "NUMBER", "I", "could", "live", "with", "that", "NUMBER", "From", "time", "to", "time", "guard", "hangs", "under", "linux", "it", "doesn", "t", "see", "any", "file", "change", "and", "the", "C", "and", "Z", "signals", "INTR", "and", "STOP", "IIRC", "be", "not", "caught", "NUMBER", "Inspecting", "the", "run", "process", "with", "strace", "shows", "that", "guard", "be", "hanging", "in", "a", "select", "loop", "with", "rb", "inotify", "enable", "or", "in", "sched_yield", "without", "rb", "inotify", "NUMBER", "I", "can", "only", "get", "guard", "to", "terminate", "with", "a", "SIGKILL", "NUMBER", "This", "happens", "both", "with", "and", "without", "rb", "inotify", "enable", "NUMBER", "Running", "guard", "NUMBER", "under", "ruby", "NUMBER", "p", "NUMBER", "in", "a", "bundle", "environment", "bundler", "NUMBER", "under", "linux", "NUMBER", "Sure", "the", "file", "content", "be", "A", "sample", "Guardfile", "More", "info", "at", "LINK", "readme", "guard", "rspec", "version", "NUMBER", "do", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "Rails", "example", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "watch", "r", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "r", "app", "controllers", "NUMBER", "_", "controller", "NUMBER", "rb", "m", "spec", "routing", "m", "NUMBER", "_routing_spec", "NUMBER", "rb", "spec", "m", "NUMBER", "s", "m", "NUMBER", "_", "m", "NUMBER", "_spec", "NUMBER", "rb", "spec", "acceptance", "m", "NUMBER", "_spec", "NUMBER", "rb", "end", "guard", "bundler", "do", "watch", "Gemfile", "Uncomment", "next", "line", "if", "Gemfile", "contain", "gemspec", "command", "watch", "NUMBER", "NUMBER", "gemspec", "end", "Just", "a", "quick", "followup", "I", "ve", "tried", "revsersing", "the", "sections", "and", "so", "far", "no", "lockups", "happened", "NUMBER", "However", "I", "ve", "be", "work", "on", "a", "different", "project", "for", "the", "past", "NUMBER", "days", "so", "I", "can", "t", "be", "sure", "if", "that", "fix", "it", "or", "not", "NUMBER", "Once", "I", "move", "back", "to", "the", "original", "project", "I", "ll", "give", "you", "an", "update", "if", "I", "still", "get", "lockups", "there", "NUMBER", "It", "turns", "out", "I", "m", "having", "the", "same", "issue", "with", "webbrick", "and", "according", "to", "stackoverflow", "this", "be", "a", "kernel", "issue", "LINK", "ubuntu", "NUMBER", "NUMBER", "i", "cant", "shut", "down", "rails", "server", "use", "ctrl", "c", "NUMBER", "NUMBER", "NUMBER", "So", "guard", "be", "totally", "innocent", "NUMBER", "Ruby", "NUMBER", "pik", "install", "win", "NUMBER", "console", "gem", "NOT", "install", "When", "run", "guard", "init", "TAG", "and", "continuous", "loop", "occur", "where", "line", "NUMBER", "of", "ui", "NUMBER", "rb", "test", "for", "color_enabled", "and", "fail", "NUMBER", "This", "results", "in", "the", "rescue", "on", "line", "NUMBER", "be", "call", "which", "attempts", "to", "display", "an", "info", "message", "and", "then", "returns", "false", "NUMBER", "At", "this", "point", "from", "the", "windows", "command", "line", "the", "error", "message", "be", "not", "display", "and", "the", "code", "continues", "to", "loop", "back", "to", "line", "NUMBER", "and", "then", "NUMBER", "until", "all", "the", "pagefile", "memory", "be", "consumed", "and", "guard", "crashes", "NUMBER", "Once", "win", "NUMBER", "console", "be", "install", "everything", "works", "fine", "NUMBER", "Would", "it", "be", "possible", "to", "completely", "exit", "guard", "and", "display", "the", "gem", "dependency", "error", "message", "Fixed", "multiple", "warnings", "on", "ruby", "head", "looked", "like", "sh", "guard", "spec", "guard", "listener_spec", "NUMBER", "rb", "NUMBER", "Use", "RbConfig", "instead", "of", "obsolete", "and", "deprecate", "Config", "NUMBER", "Tests", "pass", "on", "ruby", "head", "NUMBER", "NUMBER", "Is", "there", "a", "way", "to", "toggle", "guard", "on", "off", "without", "stoping", "and", "restarting", "It", "d", "be", "helpful", "if", "I", "could", "disable", "it", "because", "I", "press", "save", "every", "couple", "seconds", "and", "I", "want", "to", "run", "it", "after", "I", "ve", "saved", "the", "change", "I", "know", "should", "be", "test", "or", "whatever", "NUMBER", "Any", "ideas", "Some", "keyboard", "shortcut", "to", "pause", "then", "another", "to", "resume", "would", "be", "awesome", "NUMBER", "I", "guess", "I", "should", "probably", "do", "that", "but", "sometimes", "when", "I", "m", "saving", "a", "model", "or", "something", "and", "I", "have", "a", "large", "test", "suite", "it", "can", "take", "a", "minute", "or", "so", "to", "run", "so", "if", "I", "save", "again", "within", "that", "minute", "it", "doesn", "t", "work", "right", "NUMBER", "So", "it", "d", "be", "nice", "to", "run", "the", "test", "specifically", "when", "I", "want", "NUMBER", "I", "can", "probably", "do", "that", "by", "more", "finely", "tuning", "the", "guardfile", "NUMBER", "I", "ll", "look", "into", "that", "NUMBER", "Thanks", "NUMBER", "I", "have", "a", "different", "use", "case", "than", "viatropos", "where", "pausing", "would", "come", "in", "handy", "temporarily", "switching", "git", "branch", "NUMBER", "Sometimes", "when", "I", "switch", "back", "to", "master", "I", "d", "rather", "not", "have", "Guard", "restarting", "rails", "run", "specs", "NUMBER", "Currently", "I", "exit", "out", "of", "guard", "NUMBER", "However", "I", "use", "guard", "livereload", "and", "when", "I", "switch", "back", "to", "my", "topic", "branch", "I", "have", "to", "re", "enable", "livereload", "in", "my", "browser", "windows", "NUMBER", "Would", "you", "be", "amendable", "to", "a", "pull", "request", "that", "add", "in", "pausing", "support", "say", "with", "Ctrl", "D", "NUMBER", "to", "have", "some", "way", "to", "pause", "it", "NUMBER", "I", "have", "a", "staging", "script", "that", "switches", "branch", "run", "the", "test", "suite", "and", "bundle", "gems", "etc", "and", "guard", "goes", "crazy", "with", "all", "the", "branch", "switching", "sometimes", "interfering", "with", "the", "process", "NUMBER", "It", "would", "be", "nice", "if", "I", "had", "a", "way", "to", "turn", "guard", "off", "during", "the", "execution", "of", "this", "script", "rather", "than", "having", "to", "remember", "to", "switch", "it", "off", "NUMBER", "Crazy", "idea", "what", "if", "guard", "could", "watch", "only", "when", "we", "re", "inside", "a", "git", "branch", "or", "a", "specific", "set", "of", "git", "branch", "Maybe", "too", "specific", "Anyway", "if", "I", "had", "a", "way", "to", "turn", "guard", "off", "and", "then", "back", "on", "again", "from", "inside", "a", "rake", "task", "use", "ruby", "code", "it", "would", "be", "great", "NUMBER", "Btw", "thanks", "I", "love", "guard", "NUMBER", "Added", "a", "fail", "spec", "for", "the", "case", "of", "file", "named", "NUMBER", "whatever", "NUMBER", "Fails", "with", "NUMBER", "and", "NUMBER", "on", "Mac", "NUMBER", "Not", "yet", "sure", "how", "to", "fix", "this", "NUMBER", "Thought", "I", "d", "submit", "the", "fail", "spec", "to", "verify", "it", "s", "not", "just", "my", "system", "and", "see", "if", "anyone", "else", "has", "an", "idea", "NUMBER", "This", "spec", "doesn", "t", "fail", "with", "Linux", "Listener", "fix", "in", "Polling", "listener", "NUMBER", "d", "NUMBER", "d", "NUMBER", "thibaudgg", "rymai", "please", "checkout", "dot_file_fix", "branch", "to", "fix", "Darwin", "Listener", "NUMBER", "I", "try", "to", "test", "Windows", "soon", "NUMBER", "Mac", "be", "now", "work", "for", "me", "too", "it", "still", "fail", "at", "f", "NUMBER", "ef", "NUMBER", "but", "NUMBER", "d", "NUMBER", "d", "fix", "it", "NUMBER", "I", "did", "mess", "with", "my", "spotlight", "stuff", "a", "while", "ago", "NUMBER", "Thought", "I", "had", "it", "all", "back", "to", "normal", "but", "maybe", "that", "s", "not", "work", "and", "it", "was", "falling", "through", "to", "polling", "Gedit", "saves", "file", "in", "an", "uncommon", "way", "NUMBER", "They", "write", "a", "temporary", "file", "and", "then", "move", "to", "overwrite", "the", "original", "filename", "NUMBER", "Guard", "on", "linux", "right", "now", "be", "only", "watching", "for", "modify", "and", "create", "events", "so", "modifying", "a", "file", "from", "gedit", "be", "never", "detected", "because", "the", "final", "event", "be", "a", "IN_MOVE_TO", "NUMBER", "So", "add", "moved_to", "in", "the", "worker", "NUMBER", "watch", "of", "listener", "linux", "NUMBER", "rb", "NUMBER", "fix", "this", "problem", "NUMBER", "I", "dont", "know", "if", "this", "has", "a", "drawback", "but", "if", "not", "it", "would", "be", "nice", "to", "have", "in", "the", "next", "release", "Thank", "you", "Event", "detected", "by", "guard", "on", "Linux", "be", "probably", "not", "quite", "enough", "If", "you", "send", "a", "pull", "request", "we", "probably", "can", "merge", "it", "but", "test", "your", "patch", "in", "real", "world", "with", "GEdit", "before", "please", "NUMBER", "Thanks", "for", "the", "quick", "reply", "NUMBER", "Rigth", "now", "the", "fix", "as", "expressed", "in", "the", "first", "post", "be", "work", "with", "gedit", "NUMBER", "I", "ll", "be", "forking", "the", "project", "tomorrow", "and", "test", "this", "fix", "severals", "editors", "at", "least", "the", "popular", "ones", "vim", "emacs", "gedit", "somee", "KDE", "s", "editor", "to", "be", "sure", "that", "don", "t", "break", "and", "send", "a", "pull", "request", "if", "all", "be", "goin", "smooth", "NUMBER", "FWIW", "vim", "saves", "file", "in", "the", "same", "way", "write", "to", "temporary", "copy", "on", "top", "of", "old", "if", "set", "backup", "be", "enable", "NUMBER", "I", "just", "notice", "this", "because", "my", "Dropbox", "revision", "history", "had", "a", "series", "of", "delete", "add", "instead", "of", "modify", "NUMBER", "Ok", "first", "problem", "NUMBER", "If", "we", "support", "moved_to", "we", "break", "the", "spec", "not", "catches", "a", "moved", "file", "from", "it_should_behave_like", "a", "listener", "that", "reacts", "to", "on_change", "NUMBER", "I", "ll", "try", "use", "CLOSE_WRITE", "and", "see", "if", "behave", "as", "expected", "at", "least", "with", "GEdit", "works", "file", "and", "File", "NUMBER", "touch", "be", "now", "recognized", "I", "m", "still", "having", "this", "issue", "with", "gedit", "NUMBER", "Specs", "run", "when", "I", "touch", "them", "or", "use", "nano", "to", "edit", "NUMBER", "But", "when", "use", "gedit", "guard", "doesn", "t", "pick", "up", "the", "change", "NUMBER", "Using", "the", "guard", "git", "repo", "in", "my", "gemfile", "so", "latest", "source", "NUMBER", "Have", "you", "tried", "to", "run", "guard", "with", "bundle", "exec", "bundle", "exec", "guard", "When", "I", "run", "it", "with", "that", "I", "think", "spork", "takes", "issue", "with", "it", "NUMBER", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Running", "all", "specs", "RuntimeError", "Called", "id", "for", "nil", "which", "would", "mistakenly", "be", "NUMBER", "if", "you", "really", "wanted", "the", "id", "of", "nil", "use", "object_id", "method_missing", "at", "home", "michael", "NUMBER", "rvm", "rubies", "jruby", "NUMBER", "lib", "ruby", "NUMBER", "drb", "drb", "NUMBER", "rb", "NUMBER", "To", "install", "guard", "from", "source", "you", "can", "follow", "this", "instruction", "git", "clone", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "cd", "guard", "bundle", "install", "gedit", "lib", "guard", "version", "NUMBER", "rb", "replace", "NUMBER", "by", "NUMBER", "rake", "install", "This", "install", "a", "version", "NUMBER", "on", "your", "system", "and", "you", "can", "run", "guard", "without", "bundler", "now", "NUMBER", "Followed", "instructions", "now", "I", "get", "the", "following", "error", "when", "I", "run", "guard", "To", "note", "I", "m", "use", "guard", "with", "spork", "NUMBER", "guard", "g", "rspec", "The", "signal", "QUIT", "be", "in", "use", "by", "the", "JVM", "and", "will", "not", "work", "correctly", "on", "this", "platform", "Guard", "be", "now", "watching", "at", "home", "michael", "dev", "git", "NUMBER", "nfproto", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "Running", "all", "specs", "RuntimeError", "Called", "id", "for", "nil", "which", "would", "mistakenly", "be", "NUMBER", "if", "you", "really", "wanted", "the", "id", "of", "nil", "use", "object_id", "method_missing", "at", "home", "michael", "NUMBER", "rvm", "rubies", "jruby", "NUMBER", "lib", "ruby", "NUMBER", "drb", "drb", "NUMBER", "rb", "NUMBER", "run", "at", "home", "michael", "NUMBER", "rvm", "gems", "jruby", "NUMBER", "railspre", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "drb_command_line", "NUMBER", "rb", "NUMBER", "run_over_drb", "at", "home", "michael", "NUMBER", "rvm", "gems", "jruby", "NUMBER", "railspre", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "runner", "NUMBER", "rb", "NUMBER", "run", "at", "home", "michael", "NUMBER", "rvm", "gems", "jruby", "NUMBER", "railspre", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "runner", "NUMBER", "rb", "NUMBER", "autorun", "at", "home", "michael", "NUMBER", "rvm", "gems", "jruby", "NUMBER", "railspre", "gems", "rspec", "core", "NUMBER", "lib", "rspec", "core", "runner", "NUMBER", "rb", "NUMBER", "call", "at", "org", "jruby", "RubyProc", "NUMBER", "java", "NUMBER", "call", "at", "org", "jruby", "RubyProc", "NUMBER", "java", "NUMBER", "This", "might", "be", "a", "spork", "jruby", "issue", "though", "but", "it", "use", "to", "work", "NUMBER", "Edit", "Looks", "like", "it", "was", "just", "an", "error", "in", "one", "of", "my", "specs", "NUMBER", "Looks", "like", "it", "works", "now", "NUMBER", "Thanks", "NUMBER", "Just", "miss", "the", "link", "at", "the", "end", "of", "file", "NUMBER", "This", "branch", "contains", "various", "small", "tweak", "I", "ve", "do", "to", "Guard", "NUMBER", "The", "most", "important", "be", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "aa", "NUMBER", "aedf", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "db", "NUMBER", "d", "NUMBER", "for", "which", "I", "forgot", "to", "send", "a", "pull", "request", "in", "time", "for", "the", "the", "NUMBER", "release", "NUMBER", "Others", "be", "for", "you", "to", "review", "and", "cherry", "pick", "if", "wanted", "This", "be", "a", "follow", "up", "to", "LINK", "Commenting", "out", "line", "NUMBER", "in", "ui", "NUMBER", "rb", "seems", "to", "fix", "a", "stack", "level", "too", "deep", "error", "on", "Windows", "NUMBER", "I", "think", "it", "s", "my", "fault", "NUMBER", "Temporary", "solution", "can", "be", "info", "You", "must", "gem", "install", "win", "NUMBER", "console", "to", "use", "color", "on", "Windows", "this", "string", "cause", "to", "deep", "stack", "beackause", "info", "use", "color_enabled", "function", "replace", "with", "p", "You", "must", "gem", "install", "win", "NUMBER", "console", "to", "use", "color", "on", "Windows", "I", "have", "no", "possibility", "to", "test", "it", "right", "now", "NUMBER", "According", "to", "someone", "on", "the", "issue", "I", "was", "following", "up", "with", "LINK", "it", "s", "trying", "to", "use", "the", "gem", "to", "tell", "us", "that", "the", "gem", "be", "miss", "NUMBER", "When", "we", "install", "ansicon", "on", "windows", "that", "fix", "the", "color", "issue", "NUMBER", "I", "ll", "try", "to", "see", "if", "installing", "the", "win", "NUMBER", "console", "gem", "fix", "it", "but", "for", "now", "everything", "s", "work", "great", "with", "that", "line", "commented", "out", "NUMBER", "I", "d", "recommend", "ignoring", "my", "pull", "request", "cause", "it", "s", "just", "a", "temp", "fix", "but", "fix", "it", "in", "the", "next", "version", "NUMBER", "Test", "it", "again", "seems", "not", "NUMBER", "See", "LINK", "surajreddy", "can", "you", "check", "it", "stereobooster", "I", "m", "use", "the", "gem", "guard", "rspec", "how", "do", "I", "test", "this", "out", "surajreddy", "Uninstall", "gem", "win", "NUMBER", "console", "remove", "from", "Gemfile", "if", "there", "be", "one", "NUMBER", "Remove", "ansi", "NUMBER", "Run", "guard", "NUMBER", "There", "be", "should", "be", "no", "stack", "level", "too", "deep", "error", "NUMBER", "I", "was", "trying", "to", "figure", "out", "why", "every", "time", "that", "I", "began", "editing", "any", "file", "guard", "would", "be", "triggered", "for", "that", "file", "before", "I", "saved", "the", "file", "NUMBER", "I", "finally", "figured", "out", "that", "it", "was", "because", "editors", "like", "vim", "keep", "a", "NUMBER", "swp", "version", "of", "the", "file", "and", "that", "swp", "file", "be", "modify", "as", "a", "user", "edits", "a", "file", "NUMBER", "Therefore", "if", "you", "add", "a", "to", "the", "end", "of", "those", "regex", "examples", "at", "the", "end", "of", "the", "file", "extension", "this", "clears", "up", "problem", "for", "vim", "users", "and", "other", "editors", "that", "may", "use", "similar", "temporary", "file", "NUMBER", "I", "update", "LINK", "examples", "I", "update", "guard", "cucumber", "also", "NUMBER", "Hey", "guys", "this", "be", "a", "little", "help", "to", "make", "guard", "s", "CHANGELOG", "da", "cleanest", "CHANGELOG", "ever", "NUMBER", "I", "m", "happy", "you", "like", "it", "LINK", "in", "case", "you", "need", "that", "on", "other", "changelogs", "I", "tried", "treating", "Guardfile", "group", "like", "Gemfile", "group", "by", "use", "symbols", "and", "that", "fail", "NUMBER", "This", "patch", "allows", "the", "use", "of", "symbols", "in", "the", "Guardfile", "NUMBER", "Will", "that", "work", "All", "NUMBER", "of", "them", "NUMBER", "Hi", "there", "NUMBER", "I", "m", "write", "a", "custom", "guard", "plugin", "it", "s", "also", "my", "first", "ever", "gem", "so", "I", "m", "a", "proper", "newbie", "and", "I", "m", "having", "real", "problem", "with", "it", "NUMBER", "I", "m", "trying", "to", "write", "a", "guard", "that", "will", "watch", "a", "folder", "for", "markdown", "documents", "and", "then", "use", "kramdown", "to", "convert", "them", "to", "html", "NUMBER", "I", "ve", "followed", "the", "example", "on", "the", "Guard", "home", "page", "for", "write", "my", "own", "guard", "and", "also", "checked", "out", "some", "of", "the", "other", "guards", "listed", "in", "the", "wiki", "NUMBER", "The", "simplest", "one", "there", "seems", "to", "be", "Guard", "Shell", "NUMBER", "i", "can", "t", "for", "the", "life", "of", "me", "see", "what", "I", "ve", "do", "wrong", "and", "I", "m", "at", "the", "point", "where", "I", "m", "thinking", "this", "may", "be", "a", "bug", "in", "the", "examples", "or", "the", "version", "of", "guard", "I", "m", "use", "NUMBER", "which", "be", "why", "I", "m", "posting", "here", "NUMBER", "Please", "excuse", "me", "if", "this", "isn", "t", "a", "bug", "in", "which", "case", "I", "guess", "I", "should", "be", "posting", "on", "SO", "or", "something", "NUMBER", "But", "I", "d", "really", "appreciate", "a", "pointer", "NUMBER", "The", "error", "I", "m", "get", "ERROR", "Could", "not", "find", "load", "find", "gem", "guard", "krammer", "or", "find", "class", "Guard", "krammer", "ERROR", "Invalid", "Guardfile", "original", "error", "be", "undefined", "method", "new", "for", "nil", "NilClass", "My", "project", "repo", "guard", "krammer", "LINK", "Krammer", "Thanks", "I", "ve", "renamed", "the", "repo", "Sorry", "for", "what", "be", "probably", "a", "dumb", "question", "but", "why", "be", "my", "version", "statement", "broken", "I", "ve", "include", "lib", "guard", "krammer", "version", "NUMBER", "rb", "and", "that", "contains", "a", "module", "call", "KrammerVersion", "LINK", "krammer", "blob", "master", "lib", "guard", "krammer", "version", "NUMBER", "rb", "L", "NUMBER", "NUMBER", "which", "be", "what", "I", "ve", "referenced", "in", "the", "gemspec", "NUMBER", "Isn", "t", "that", "right", "Or", "should", "the", "module", "name", "match", "the", "path", "name", "exactly", "or", "something", "I", "was", "able", "to", "run", "your", "Guard", "by", "change", "s", "NUMBER", "require_paths", "lib", "within", "your", "guard", "krammer", "NUMBER", "gemspec", "to", "s", "NUMBER", "require_path", "lib", "I", "also", "would", "remove", "s", "NUMBER", "test_files", "git", "ls", "file", "test", "spec", "features", "NUMBER", "split", "n", "because", "in", "my", "opinion", "I", "would", "try", "to", "keep", "the", "gem", "size", "as", "small", "as", "possible", "and", "people", "who", "like", "to", "use", "the", "test", "should", "anyway", "check", "out", "the", "whole", "project", "from", "Github", "NUMBER", "Also", "the", "line", "s", "NUMBER", "executables", "git", "ls", "file", "bin", "NUMBER", "split", "n", "NUMBER", "map", "f", "File", "NUMBER", "basename", "f", "be", "unnecessary", "since", "Guard", "itself", "has", "the", "binary", "and", "not", "guard", "krammer", "NUMBER", "Why", "did", "you", "name", "your", "Guard", "guard", "krammer", "Because", "you", "re", "use", "kramdown", "I", "would", "have", "choosen", "a", "name", "relate", "to", "the", "syntax", "Markdown", "instead", "of", "one", "relate", "to", "one", "of", "the", "many", "implementations", "kramdown", "itself", "was", "a", "very", "good", "choice", "because", "it", "runs", "on", "C", "Ruby", "and", "JRuby", "NUMBER", "This", "would", "enable", "a", "potential", "user", "of", "your", "guard", "to", "recognize", "what", "it", "s", "relate", "to", "without", "the", "need", "to", "open", "the", "project", "and", "read", "the", "Readme", "because", "the", "list", "of", "available", "guards", "LINK", "of", "available", "Guards", "be", "slim", "and", "has", "not", "additional", "information", "NUMBER", "thibaudgg", "What", "about", "registering", "guard", "dev", "on", "Google", "group", "and", "add", "it", "together", "with", "guard", "on", "irc", "NUMBER", "freenode", "NUMBER", "net", "to", "the", "Readme", "file", "I", "believe", "this", "would", "help", "new", "guard", "developers", "a", "lot", "NUMBER", "Nice", "one", "guys", "guard", "markdown", "it", "be", "Like", "I", "said", "this", "be", "my", "first", "gem", "so", "I", "was", "sticking", "as", "closely", "to", "the", "bundler", "gem", "structure", "as", "possible", "NUMBER", "But", "I", "ll", "Jake", "those", "change", "later", "NUMBER", "Nice", "one", "NUMBER", "The", "run_all", "command", "Ctrl", "don", "t", "work", "well", "on", "non", "US", "keyboard", "layouts", "NUMBER", "I", "can", "t", "even", "trigger", "it", "on", "Swedish", "keyboard", "without", "hacking", "ZSH", "key", "bindings", "which", "itself", "be", "overkill", "for", "most", "potential", "users", "of", "Guard", "I", "believe", "NUMBER", "Could", "we", "add", "a", "better", "keyboard", "alias", "Great", "thanks", "Thanks", "Muscle", "memory", "sometimes", "has", "me", "saving", "file", "that", "I", "haven", "t", "actually", "modify", "NUMBER", "Having", "to", "wait", "for", "guard", "to", "do", "its", "thing", "can", "be", "a", "bit", "annoying", "in", "this", "scenario", "NUMBER", "That", "said", "I", "know", "it", "can", "also", "be", "useful", "to", "force", "certain", "things", "to", "happen", "just", "by", "saving", "a", "file", "NUMBER", "What", "do", "others", "think", "I", "frequently", "use", "this", "feature", "when", "per", "example", "I", "want", "to", "relaunch", "the", "specs", "on", "a", "unchanged", "file", "after", "having", "modify", "a", "other", "file", "NUMBER", "But", "maybe", "we", "can", "provide", "this", "behavior", "via", "an", "option", "NUMBER", "Yep", "that", "s", "a", "good", "point", "I", "assumed", "that", "the", "file", "system", "would", "not", "be", "able", "to", "provide", "this", "information", "NUMBER", "That", "said", "you", "don", "t", "need", "to", "duplicate", "the", "content", "you", "just", "need", "a", "hash", "or", "md", "NUMBER", "sum", "of", "each", "file", "NUMBER", "My", "first", "thought", "would", "be", "to", "have", "a", "Ruby", "hash", "with", "the", "file", "name", "and", "path", "as", "the", "key", "and", "an", "md", "NUMBER", "sum", "as", "the", "value", "NUMBER", "When", "the", "file", "system", "says", "a", "file", "has", "change", "Guard", "would", "recalculate", "the", "md", "NUMBER", "sum", "and", "compare", "it", "to", "the", "previously", "calculated", "value", "NUMBER", "It", "would", "be", "slower", "but", "if", "you", "prevent", "run", "a", "bunch", "of", "specs", "or", "reloading", "spork", "unnecessarily", "then", "you", "ve", "more", "than", "made", "up", "the", "time", "NUMBER", "As", "thibaudgg", "said", "it", "can", "be", "useful", "to", "quickly", "rerun", "a", "spec", "by", "just", "saving", "the", "file", "NUMBER", "If", "this", "feature", "be", "going", "to", "be", "implement", "enabling", "it", "would", "have", "to", "require", "configuration", "NUMBER", "I", "just", "posted", "this", "to", "see", "if", "others", "were", "interested", "enough", "to", "warrant", "me", "work", "on", "it", "NUMBER", "What", "do", "you", "think", "of", "that", "LINK", "Great", "thanks", "NUMBER", "And", "because", "of", "this", "issue", "LINK", "livereload", "issue", "NUMBER", "issuecomment", "NUMBER", "I", "think", "we", "can", "t", "provide", "this", "as", "an", "option", "it", "ll", "be", "the", "default", "and", "not", "be", "disabled", "I", "have", "change", "the", "implementation", "in", "this", "commit", "LINK", "to", "only", "check", "sha", "NUMBER", "checksum", "when", "File", "NUMBER", "mtime", "path", "NUMBER", "to_i", "last_event", "NUMBER", "to_i", "so", "just", "touching", "file", "be", "still", "work", "NUMBER", "After", "trying", "some", "time", "to", "use", "Guard", "without", "the", "touch", "feature", "I", "really", "miss", "it", "NUMBER", "So", "I", "don", "t", "think", "it", "s", "a", "good", "default", "behavior", "NUMBER", "I", "close", "this", "issue", "but", "now", "with", "the", "sha", "NUMBER", "checksum", "It", "s", "really", "easy", "to", "add", "that", "as", "an", "option", "NUMBER", "If", "you", "still", "want", "it", "please", "submit", "a", "pull", "request", "NUMBER", "Thanks", "I", "m", "write", "a", "gem", "call", "guard", "bot", "which", "watched", "incoming", "directories", "for", "new", "NUMBER", "bot", "file", "and", "then", "pass", "the", "file", "to", "a", "Bot", "object", "who", "will", "read", "the", "file", "parse", "it", "for", "commands", "and", "optionally", "write", "out", "a", "results", "file", "NUMBER", "I", "m", "use", "that", "in", "a", "project", "call", "Alfred", "who", "s", "job", "it", "will", "be", "to", "watch", "a", "dropbox", "folder", "for", "incoming", "message", "and", "uses", "those", "message", "to", "move", "file", "from", "a", "large", "back", "end", "library", "to", "a", "folder", "in", "dropbox", "NUMBER", "The", "whole", "idea", "be", "that", "I", "have", "many", "more", "media", "file", "than", "I", "have", "space", "in", "Dropbox", "so", "Alfred", "will", "act", "as", "a", "librarian", "of", "sorts", "and", "provide", "a", "way", "to", "search", "the", "media", "library", "for", "file", "and", "then", "put", "those", "file", "into", "Dropbox", "NUMBER", "So", "the", "next", "time", "I", "m", "out", "of", "town", "and", "want", "to", "watch", "something", "I", "ve", "get", "on", "my", "library", "server", "I", "can", "NUMBER", "But", "it", "seems", "that", "guard", "always", "uses", "a", "relative", "path", "starting", "at", "the", "directory", "the", "Guardfile", "be", "in", "NUMBER", "So", "I", "d", "like", "a", "way", "to", "indicate", "that", "I", "instead", "want", "it", "to", "use", "absolute", "pathnames", "or", "possibly", "set", "a", "PARENTDIR", "folder", "that", "it", "will", "use", "instead", "of", "the", "Guardfile", "path", "when", "setting", "up", "watchers", "NUMBER", "Actually", "as", "I", "dig", "into", "the", "code", "I", "think", "just", "a", "parent", "option", "would", "be", "fine", "NUMBER", "work", "on", "code", "now", "NUMBER", "That", "s", "not", "the", "issue", "NUMBER", "If", "I", "be", "in", "home", "anithri", "workspace", "alfred", "and", "so", "be", "the", "Guardfile", "NUMBER", "And", "I", "define", "a", "watch", "like", "ruby", "guard", "livereload", "do", "watch", "tmp", "output", "NUMBER", "hmtl", "end", "then", "Guard", "sends", "change", "signals", "to", "the", "livereload", "guard", "_only_", "when", "home", "anithri", "workspace", "alfred", "tmp", "output", "NUMBER", "html", "be", "change", "and", "will", "not", "send", "a", "signal", "when", "tmp", "output", "NUMBER", "html", "be", "change", "NUMBER", "This", "be", "because", "Dir", "NUMBER", "pwd", "be", "joined", "to", "the", "file", "given", "to", "the", "watch", "method", "NUMBER", "What", "I", "want", "and", "be", "code", "and", "be", "write", "the", "specs", "for", "be", "the", "ability", "to", "define", "a", "different", "parent", "dir", "from", "Dir", "NUMBER", "pwd", "NUMBER", "NUMBER", "Add", "the", "ability", "to", "pass", "a", "parent", "flag", "to", "the", "guard", "process", "which", "it", "will", "use", "as", "the", "parent", "dir", "optionally", "looking", "for", "the", "Guardfile", "in", "that", "location", "NUMBER", "Add", "the", "ability", "to", "declare", "a", "Guard", "DSL", "method", "may", "not", "fly", "that", "can", "define", "a", "parent", "dir", "at", "the", "File", "or", "Group", "level", "NUMBER", "Add", "the", "ability", "to", "define", "a", "parent", "option", "for", "the", "guard", "command", "NUMBER", "Watches", "declared", "for", "that", "guard", "will", "use", "it", "by", "preference", "I", "don", "t", "know", "if", "all", "of", "that", "can", "be", "accomplished", "without", "really", "complicating", "the", "code", "but", "I", "do", "know", "the", "parent", "flag", "should", "as", "it", "only", "needs", "to", "change", "code", "in", "a", "few", "places", "NUMBER", "A", "different", "solution", "that", "be", "_not_", "behavior", "compatable", "with", "the", "current", "setup", "but", "be", "the", "easiest", "change", "would", "be", "to", "treat", "watches", "that", "start", "with", "a", "and", "a", "for", "convience", "expands", "to", "the", "users", "home", "dir", "as", "not", "needing", "to", "prepend", "the", "Dir", "NUMBER", "pwd", "NUMBER", "But", "that", "would", "potentially", "change", "the", "behavior", "of", "exist", "guards", "that", "already", "use", "leading", "which", "be", "use", "in", "some", "of", "the", "examples", "NUMBER", "I", "think", "this", "be", "a", "very", "useful", "behavior", "to", "add", "as", "it", "allows", "Guard", "to", "start", "to", "do", "things", "that", "be", "not", "test", "or", "project", "centric", "NUMBER", "NUMBER", "Automatically", "file", "things", "placed", "into", "a", "directory", "NUMBER", "NUMBER", "Send", "notify", "growl", "message", "based", "on", "the", "content", "of", "a", "log", "file", "NUMBER", "automatically", "delete", "file", "in", "a", "directory", "after", "some", "number", "of", "hours", "have", "pass", "scratch", "space", "NUMBER", "submit", "data", "to", "process", "database", "NUMBER", "websites", "or", "other", "apis", "based", "on", "the", "name", "or", "contents", "of", "a", "file", "Um", "NUMBER", "I", "unintenionally", "had", "that", "problem", "but", "bypassed", "it", "by", "creating", "a", "symbolic", "link", "in", "my", "project", "folder", "to", "the", "folder", "i", "wanted", "to", "guard", "NUMBER", "Did", "I", "do", "something", "bad", "merge", "How", "be", "this", "to", "be", "use", "listen", "doesn", "t", "seem", "to", "do", "anything", "I", "couldn", "t", "find", "any", "docs", "about", "how", "to", "make", "Guard", "work", "with", "absolute", "paths", "NUMBER", "The", "listen", "hasn", "t", "be", "implement", "that", "s", "why", "My", "merge", "LINK", "issuecomment", "NUMBER", "comment", "must", "be", "a", "mistake", "NUMBER", "netzpirat", "do", "you", "remembers", "what", "could", "have", "be", "merge", "In", "the", "latest", "Railscasts", "episode", "LINK", "guard", "I", "run", "into", "the", "issue", "that", "LiveReload", "LINK", "livereload", "change", "were", "not", "shown", "until", "after", "the", "specs", "run", "NUMBER", "Moving", "them", "first", "helps", "solve", "this", "problem", "but", "if", "you", "re", "make", "change", "quickly", "the", "test", "will", "still", "be", "run", "and", "you", "won", "t", "see", "the", "change", "NUMBER", "I", "would", "love", "it", "if", "there", "was", "some", "way", "to", "specify", "a", "guard", "to", "run", "in", "a", "separate", "thread", "so", "it", "won", "t", "interfere", "with", "other", "guards", "NUMBER", "This", "can", "also", "address", "issue", "NUMBER", "where", "change", "to", "file", "be", "not", "detected", "while", "a", "guard", "be", "run", "NUMBER", "IIRC", "other", "similar", "tool", "such", "as", "autotest", "detect", "change", "while", "the", "test", "be", "run", "why", "can", "t", "guard", "It", "s", "frustrating", "to", "have", "to", "re", "save", "a", "file", "for", "Guard", "to", "pick", "up", "on", "a", "change", "because", "it", "happened", "to", "be", "run", "before", "NUMBER", "Update", "Maybe", "this", "can", "be", "combined", "with", "the", "group", "feature", "issue", "NUMBER", "because", "often", "you", "want", "some", "guards", "to", "run", "in", "sequence", "cucumber", "with", "rspec", "but", "some", "in", "parallel", "NUMBER", "Placing", "guards", "in", "a", "group", "could", "make", "it", "run", "in", "sequence", "NUMBER", "netzpirat", "good", "idea", "NUMBER", "At", "least", "that", "be", "a", "work", "around", "NUMBER", "It", "would", "be", "nice", "if", "we", "didn", "t", "have", "to", "start", "two", "processes", "though", "NUMBER", "There", "s", "still", "the", "other", "problem", "mention", "in", "NUMBER", "where", "file", "saved", "while", "the", "test", "be", "run", "won", "t", "be", "pick", "up", "to", "run", "the", "test", "again", "which", "requires", "me", "to", "save", "the", "file", "again", "for", "it", "to", "notice", "NUMBER", "I", "think", "that", "would", "be", "an", "easy", "feature", "to", "add", "once", "guards", "be", "split", "into", "multiple", "threads", "NUMBER", "The", "longer", "the", "test", "take", "to", "run", "the", "more", "critical", "this", "be", "NUMBER", "I", "love", "Guard", "but", "have", "a", "hard", "time", "use", "it", "on", "those", "kinds", "of", "projects", "NUMBER", "Hi", "netzpirat", "be", "you", "still", "interested", "in", "developing", "this", "feature", "now", "that", "we", "store", "the", "list", "of", "group", "If", "yes", "feel", "free", "to", "assign", "yourself", "to", "the", "issue", "instead", "of", "me", "Not", "yet", "because", "I", "have", "no", "need", "for", "it", "NUMBER", "The", "reason", "why", "I", "wouldn", "t", "use", "it", "currently", "be", "simple", "I", "like", "to", "have", "each", "Guard", "group", "in", "its", "own", "terminal", "window", "because", "I", "don", "t", "want", "to", "have", "my", "RSpec", "results", "mix", "with", "CoffeeScript", "validations", "and", "the", "like", "NUMBER", "For", "this", "reason", "I", "use", "Terminitor", "LINK", "in", "each", "project", "and", "I", "can", "perfectly", "configure", "my", "terminal", "setup", "to", "have", "my", "iTerm", "split", "with", "different", "Guard", "group", "NUMBER", "For", "the", "example", "in", "the", "issue", "description", "this", "issue", "makes", "perfectly", "sense", "but", "I", "don", "t", "have", "the", "problem", "right", "now", "and", "I", "have", "spent", "again", "to", "much", "time", "on", "my", "toolkit", "guard", "jasmine", "lately", "instead", "of", "my", "product", "so", "someone", "who", "will", "profit", "from", "the", "solution", "should", "also", "implement", "it", "But", "this", "may", "change", "in", "the", "future", "NUMBER", "I", "understand", "and", "I", "agree", "ryanb", "be", "you", "still", "interested", "If", "yes", "feel", "free", "to", "make", "a", "pull", "request", "NUMBER", "I", "remember", "that", "we", "discussed", "the", "locking", "issue", "once", "but", "I", "m", "no", "longer", "sure", "what", "thibaudgg", "said", "why", "locking", "be", "needed", "at", "all", "NUMBER", "Could", "it", "be", "an", "issue", "with", "inotify", "In", "this", "case", "I", "could", "simply", "add", "an", "option", "locking", "that", "defaults", "to", "true", "so", "that", "at", "least", "on", "OS", "X", "and", "Windows", "we", "could", "set", "it", "to", "false", "and", "enjoy", "parallel", "Guards", "with", "a", "very", "low", "effort", "I", "think", "the", "way", "to", "do", "this", "be", "to", "use", "or", "at", "least", "copy", "Aruba", "s", "process", "management", "which", "uses", "child", "process", "so", "be", "cross", "platform", "NUMBER", "Anyway", "you", "d", "index", "the", "processes", "use", "the", "shell", "command", "that", "start", "them", "duplicates", "can", "easily", "be", "prevented", "by", "searching", "for", "a", "process", "before", "starting", "NUMBER", "I", "use", "this", "approach", "to", "manage", "SSH", "multiplexing", "connections", "and", "in", "various", "test", "it", "seems", "to", "be", "work", "very", "well", "NUMBER", "The", "addiotnal", "code", "would", "be", "small", "if", "you", "depend", "on", "Aruba", "but", "even", "if", "you", "just", "copy", "Aruba", "s", "Process", "and", "API", "file", "it", "won", "t", "be", "much", "work", "NUMBER", "HTH", "Please", "can", "you", "share", "some", "links", "about", "this", "Aruba", "s", "process", "management", "NUMBER", "Not", "sure", "if", "this", "NUMBER", "suffices", "up", "down", "that", "page", "there", "may", "be", "more", "relevant", "illustrations", "You", "ll", "likely", "need", "a", "get_name", "process", "but", "get_process", "launch_string", "shows", "how", "trivial", "that", "be", "NUMBER", "The", "whole", "API", "isn", "t", "much", "more", "complicated", "nor", "be", "the", "whole", "process", "management", "code", "NUMBER", "HTH", "NUMBER", "LINK", "L", "NUMBER", "NUMBER", "LINK", "Aruba", "s", "process", "management", "seems", "interesting", "sadly", "I", "don", "t", "have", "the", "time", "to", "trying", "to", "add", "it", "on", "Guard", "at", "the", "moment", "NUMBER", "But", "it", "would", "be", "great", "if", "you", "give", "it", "a", "try", "Thanks", "Not", "familiar", "with", "Gaurd", "s", "internals", "so", "to", "flatten", "the", "learning", "curve", "NUMBER", "Can", "to", "suggest", "the", "best", "point", "at", "which", "to", "insert", "such", "a", "launch", "NUMBER", "Can", "you", "suggest", "the", "most", "appropriate", "module", "class", "to", "contain", "such", "a", "launch", "method", "Finally", "configuration", "NUMBER", "How", "to", "indicate", "parallel", "launch", "maybe", "group", "frontend", "parallel", "true", "do", "guard", "coffeescript", "input", "app", "coffeescripts", "output", "public", "javascripts", "compiled", "guard", "livereload", "do", "watch", "r", "app", "NUMBER", "NUMBER", "erb", "haml", "end", "end", "Maybe", "this", "can", "help", "you", "Guards", "be", "all", "start", "regardless", "of", "their", "group", "here", "LINK", "L", "NUMBER", "NUMBER", "so", "you", "should", "probably", "replace", "it", "with", "a", "loop", "on", "the", "group", "like", "here", "LINK", "L", "NUMBER", "NUMBER", "where", "if", "the", "group", "has", "the", "parallel", "option", "you", "would", "start", "a", "process", "with", "launch", "and", "start", "guards", "use", "this", "new", "process", "NUMBER", "I", "think", "you", "could", "add", "the", "launch", "method", "directly", "inside", "LINK", "for", "now", "NUMBER", "Does", "it", "make", "sense", "rymai", "thanks", "for", "that", "I", "ll", "try", "get", "to", "this", "in", "the", "next", "week", "or", "so", "NUMBER", "Am", "I", "right", "in", "understanding", "that", "both", "group", "and", "guard", "should", "accept", "a", "parallel", "option", "Specifically", "if", "guard", "takes", "a", "parallel", "option", "then", "we", "d", "need", "to", "loop", "over", "the", "watch", "ed", "and", "launch", "each", "of", "them", "NUMBER", "That", "was", "poetry", "NUMBER", "cry", "This", "change", "allows", "guard", "plugins", "like", "guard", "rspec", "to", "pass", "options", "like", "priority", "up", "to", "the", "Growl", "notifier", "NUMBER", "With", "this", "change", "things", "like", "indirect", "rspec", "guard", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "bbf", "NUMBER", "be", "possible", "and", "the", "growl", "notification", "colors", "can", "be", "customized", "depending", "on", "the", "outcome", "of", "the", "spec", "run", "NUMBER", "Have", "you", "an", "idea", "about", "a", "possible", "replacement", "for", "TSTP", "signal", "Ctrl", "Z", "to", "handle", "reload", "on", "Windows", "How", "about", "to", "read", "stdin", "in", "main", "thread", "wait", "for", "hotkeys", "like", "Ctrl", "Z", "and", "in", "the", "fork", "watch", "for", "file", "change", "NUMBER", "If", "hotkey", "happens", "just", "send", "notification", "to", "the", "forked", "proccess", "Or", "maybe", "try", "to", "fix", "signals", "LINK", "Do", "you", "think", "it", "s", "easy", "to", "add", "something", "like", "LINK", "instead", "of", "polling", "for", "Windows", "It", "s", "possible", "to", "use", "windows", "native", "function", "to", "watch", "for", "file", "system", "change", "NUMBER", "But", "the", "API", "be", "very", "limited", "it", "only", "can", "tell", "that", "something", "be", "change", "in", "watched", "directory", "but", "not", "exactly", "which", "file", "was", "change", "LINK", "us", "library", "aa", "NUMBER", "VS", "NUMBER", "NUMBER", "aspx", "I", "tryed", "to", "make", "library", "in", "maner", "of", "rb", "inotify", "use", "example", "from", "here", "LINK", "bin", "scat", "NUMBER", "rb", "ruby", "ruby", "talk", "NUMBER", "but", "it", "s", "not", "work", "yet", "Take", "a", "look", "here", "be", "gem", "which", "mimics", "rb", "inotify", "interface", "use", "native", "windows", "function", "LINK", "fchange", "It", "works", "NUMBER", "But", "it", "only", "can", "say", "that", "something", "be", "change", "in", "the", "directory", "it", "can", "t", "say", "exactly", "which", "file", "or", "subfolder", "was", "change", "limitation", "of", "winapi", "NUMBER", "So", "I", "m", "not", "sure", "be", "it", "useful", "or", "not", "NUMBER", "If", "we", "will", "use", "it", "it", "can", "simply", "trigger", "file", "system", "scan", "we", "don", "t", "need", "to", "scan", "it", "all", "time", "poll", "NUMBER", "Can", "you", "tried", "to", "do", "that", "Yes", "spec", "NUMBER", "examples", "NUMBER", "failures", "NUMBER", "LINK", "As", "I", "understand", "LINK", "on", "Windows", "won", "t", "work", "beacause", "there", "be", "no", "some", "function", "in", "msvcrt", "NUMBER", "dll", "like", "sys_sigwait", "Yes", "spec", "NUMBER", "examples", "NUMBER", "failures", "NUMBER", "LINK", "That", "s", "awesome", "can", "you", "submit", "another", "pull", "request", "for", "that", "With", "the", "README", "update", "please", "As", "I", "understand", "LINK", "on", "Windows", "won", "t", "work", "beacause", "there", "be", "no", "some", "function", "in", "msvcrt", "NUMBER", "dll", "like", "sys_sigwait", "If", "syscalls", "don", "t", "work", "on", "Windows", "the", "only", "alternative", "I", "can", "see", "be", "to", "choose", "another", "signal", "for", "the", "reload", "do", "you", "see", "a", "good", "candidate", "Do", "you", "know", "if", "an", "notification", "system", "like", "growl", "exists", "on", "Windows", "It", "would", "the", "last", "thing", "we", "need", "to", "have", "a", "full", "Windows", "compatibility", "If", "syscalls", "don", "t", "work", "on", "Windows", "the", "only", "alternative", "I", "can", "see", "be", "to", "choose", "another", "signal", "for", "the", "reload", "do", "you", "see", "a", "good", "candidate", "No", "NUMBER", "Because", "only", "INT", "generate", "by", "keyboard", "shortcut", "Ctrl", "C", "NUMBER", "And", "actualy", "with", "INT", "sgnal", "not", "all", "that", "simple", "SIGINT", "be", "not", "support", "for", "any", "Win", "NUMBER", "application", "including", "Windows", "NUMBER", "Me", "and", "Windows", "NT", "NUMBER", "XP", "NUMBER", "When", "a", "CTRL", "C", "interrupt", "occur", "Win", "NUMBER", "operate", "systems", "generate", "a", "new", "thread", "to", "specifically", "handle", "that", "interrupt", "NUMBER", "This", "can", "cause", "a", "single", "thread", "application", "such", "as", "UNIX", "to", "become", "multithreaded", "resulting", "in", "unexpect", "behavior", "NUMBER", "source", "LINK", "us", "library", "xdkz", "NUMBER", "x", "NUMBER", "v", "vs", "NUMBER", "NUMBER", "aspx", "Do", "you", "know", "if", "an", "notification", "system", "like", "growl", "exists", "on", "Windows", "There", "be", "two", "systems", "NUMBER", "LINK", "NUMBER", "battle", "of", "the", "windows", "notification", "apps", "growl", "for", "windows", "vs", "snarl", "But", "they", "be", "not", "so", "widely", "spreaded", "NUMBER", "Ok", "thanks", "for", "all", "your", "researchs", "we", "can", "continue", "the", "discussion", "about", "finding", "an", "alternative", "to", "Signal", "trapping", "here", "NUMBER", "I", "add", "the", "ability", "to", "inline", "a", "guard", "class", "in", "the", "guardfile", "itself", "rather", "than", "going", "out", "to", "a", "gem", "for", "everything", "NUMBER", "This", "could", "be", "useful", "when", "there", "be", "complex", "things", "you", "may", "need", "to", "run", "as", "oppose", "to", "the", "guard", "shell", "gem", "which", "only", "lets", "you", "run", "on", "change", "NUMBER", "I", "have", "some", "custom", "things", "I", "would", "like", "to", "guard", "and", "would", "rather", "not", "create", "a", "gem", "for", "it", "NUMBER", "Guard", "will", "attempt", "to", "load", "the", "gem", "as", "before", "and", "then", "look", "for", "a", "class", "NUMBER", "If", "it", "be", "inline", "it", "will", "get", "pick", "up", "NUMBER", "Here", "be", "an", "example", "of", "a", "Guardfile", "with", "what", "I", "be", "describing", "as", "an", "inline", "guard", "class", "require", "guard", "guard", "module", "Guard", "class", "Example", "TAG", "spec", "coffeescripts", "output", "spec", "javascripts", "I", "m", "use", "macosx", "NUMBER", "I", "tried", "v", "NUMBER", "NUMBER", "and", "v", "NUMBER", "both", "with", "rb", "fsevent", "and", "without", "NUMBER", "All", "coffee", "file", "have", "a", "NUMBER", "coffee", "extension", "and", "be", "in", "the", "spec", "coffeescripts", "directory", "NUMBER", "spec", "javascripts", "directory", "exists", "but", "nothing", "appears", "there", "when", "I", "change", "my", "NUMBER", "coffee", "file", "NUMBER", "I", "can", "imagine", "some", "cases", "why", "it", "doesn", "t", "work", "NUMBER", "ExecJS", "cannot", "determine", "the", "runtime", "NUMBER", "First", "install", "the", "ExecJS", "gem", "gem", "install", "execjs", "Then", "check", "it", "with", "an", "irb", "session", "require", "execjs", "true", "ExecJS", "NUMBER", "runtime", "TAG", "ExecJS", "NUMBER", "eval", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "The", "CoffeeScript", "file", "has", "some", "error", "and", "cannot", "be", "converted", "to", "a", "JavaScript", "file", "NUMBER", "This", "be", "usually", "report", "as", "a", "Growl", "message", "when", "Growl", "and", "the", "growl", "gem", "be", "install", "but", "you", "can", "also", "verify", "it", "on", "the", "command", "line", "coffee", "c", "yourfile", "NUMBER", "coffee", "cat", "yourfile", "NUMBER", "js", "NUMBER", "There", "be", "an", "error", "in", "generating", "the", "watcher", "from", "the", "input", "option", "NUMBER", "You", "can", "verify", "it", "by", "add", "a", "watcher", "manually", "guard", "coffeescript", "output", "spec", "javascripts", "do", "watch", "r", "app", "coffeescripts", "NUMBER", "NUMBER", "coffee", "end", "From", "your", "description", "I", "guess", "it", "ll", "be", "number", "NUMBER", "I", "just", "checked", "all", "of", "the", "three", "options", "NUMBER", "NUMBER", "Installed", "ExecJS", "checked", "in", "irb", "output", "was", "the", "same", "as", "yours", "NUMBER", "No", "change", "file", "be", "still", "not", "compiled", "after", "guard", "restart", "NUMBER", "NUMBER", "The", "file", "be", "valid", "NUMBER", "In", "fact", "I", "only", "write", "alert", "hello", "in", "it", "NUMBER", "And", "I", "even", "checked", "that", "with", "the", "command", "you", "suggested", "NUMBER", "It", "s", "valid", "NUMBER", "NUMBER", "Tried", "explicitly", "write", "the", "watcher", "no", "luck", "NUMBER", "Ok", "so", "we", "have", "to", "figure", "out", "if", "the", "problem", "be", "relate", "to", "Guard", "rb", "fsevent", "or", "guard", "coffeescript", "NUMBER", "First", "what", "Ruby", "version", "be", "you", "use", "If", "you", "re", "on", "Ruby", "NUMBER", "you", "have", "to", "install", "the", "json", "or", "json_pure", "gem", "NUMBER", "Second", "what", "happens", "if", "you", "force", "Guard", "to", "run", "all", "watchers", "with", "Ctrl", "I", "m", "on", "NUMBER", "installing", "json_pure", "did", "not", "help", "NUMBER", "Ctrl", "compiled", "the", "file", "so", "we", "re", "get", "somewhere", "NUMBER", "But", "it", "still", "doesn", "t", "happen", "automatically", "NUMBER", "Just", "did", "a", "small", "test", "to", "verify", "that", "it", "works", "on", "my", "machine", "NUMBER", "Here", "s", "the", "shell", "session", "log", "otherland", "mkdir", "test", "otherland", "cd", "test", "otherland", "test", "echo", "source", "rubygems", "ngem", "guard", "ngem", "guard", "coffeescript", "Gemfile", "otherland", "test", "bundle", "Fetching", "source", "index", "for", "LINK", "Using", "coffee", "script", "source", "NUMBER", "Using", "execjs", "NUMBER", "Using", "coffee", "script", "NUMBER", "Using", "thor", "NUMBER", "Installing", "guard", "NUMBER", "Using", "guard", "coffeescript", "NUMBER", "Using", "bundler", "NUMBER", "Your", "bundle", "be", "complete", "Use", "bundle", "show", "gemname", "to", "see", "where", "a", "bundled", "gem", "be", "install", "NUMBER", "otherland", "test", "echo", "guard", "coffeescript", "input", "spec", "coffeescripts", "output", "spec", "javascripts", "Guardfile", "otherland", "test", "guard", "NUMBER", "NUMBER", "otherland", "test", "Guard", "be", "now", "watching", "at", "Users", "michi", "test", "otherland", "test", "mkdir", "p", "spec", "coffeescripts", "otherland", "test", "mkdir", "p", "spec", "javascripts", "otherland", "test", "echo", "alert", "test", "spec", "coffeescripts", "test", "NUMBER", "coffee", "Compile", "spec", "coffeescripts", "test", "NUMBER", "coffee", "otherland", "test", "cat", "spec", "javascripts", "test", "NUMBER", "js", "function", "alert", "test", "NUMBER", "call", "this", "So", "everything", "works", "fine", "here", "NUMBER", "Notice", "that", "I", "had", "a", "small", "typo", "by", "write", "spec", "instead", "of", "specs", "but", "this", "do", "not", "have", "an", "influence", "on", "the", "outcome", "of", "the", "test", "NUMBER", "Are", "you", "sure", "you", "haven", "t", "a", "typo", "in", "the", "path", "of", "the", "input", "and", "output", "options", "I", "be", "sure", "yes", "NUMBER", "I", "copy", "pasted", "them", "NUMBER", "Besides", "if", "I", "had", "a", "typo", "Ctrl", "wouldn", "t", "work", "right", "Yes", "you", "re", "right", "I", "m", "actually", "enjoying", "some", "beer", "and", "it", "has", "the", "desired", "effect", "I", "m", "almost", "at", "my", "wits", "end", "NUMBER", "Can", "you", "please", "verify", "that", "rb", "fsevent", "works", "as", "expected", "by", "test", "it", "with", "the", "script", "from", "the", "readme", "require", "rb", "fsevent", "fsevent", "FSEvent", "NUMBER", "new", "fsevent", "NUMBER", "watch", "Dir", "NUMBER", "pwd", "do", "directories", "puts", "Detected", "change", "inside", "directories", "NUMBER", "inspect", "end", "fsevent", "NUMBER", "run", "Run", "the", "above", "snippet", "and", "touch", "a", "file", "in", "the", "current", "directory", "NUMBER", "And", "what", "happens", "when", "you", "reply", "the", "shell", "session", "transcript", "Ok", "here", "s", "what", "I", "did", "NUMBER", "I", "cd", "ed", "to", "Desktop", "start", "irb", "pasted", "that", "snippet", "NUMBER", "fsevent", "seem", "to", "be", "run", "NUMBER", "I", "touched", "a", "file", "fsevent", "replied", "with", "Detected", "change", "inside", "Users", "roman", "Desktop", "NUMBER", "However", "when", "I", "did", "the", "same", "on", "my", "project", "dir", "it", "didn", "t", "work", "NUMBER", "Beats", "a", "hell", "out", "of", "me", "why", "NUMBER", "Also", "what", "exactly", "do", "you", "mean", "by", "reply", "the", "shell", "session", "transcript", "Reply", "the", "shell", "session", "transcript", "means", "to", "execute", "the", "same", "commands", "as", "I", "did", "in", "my", "previous", "comment", "where", "I", "verify", "that", "it", "works", "on", "my", "machine", "NUMBER", "But", "with", "your", "rb", "fsevent", "test", "you", "nailed", "down", "the", "failure", "For", "some", "reason", "rb", "fsevent", "doesn", "t", "notify", "a", "change", "in", "your", "project", "directory", "NUMBER", "Is", "there", "something", "special", "with", "your", "project", "directory", "Is", "it", "on", "a", "network", "drive", "or", "on", "another", "hard", "drive", "with", "a", "different", "file", "system", "than", "HFS", "Well", "the", "only", "special", "things", "about", "it", "be", "that", "it", "be", "synced", "by", "Dropbox", "and", "that", "there", "s", "a", "git", "repo", "in", "it", "NUMBER", "Now", "that", "I", "think", "about", "it", "could", "be", "Dropbox", "NUMBER", "I", "don", "t", "see", "any", "other", "explanation", "NUMBER", "I", "just", "created", "a", "git", "repo", "in", "my", "Dropbox", "and", "run", "the", "rb", "fsevent", "test", "NUMBER", "All", "change", "were", "detected", "fine", "under", "both", "Ruby", "NUMBER", "and", "Ruby", "NUMBER", "What", "happens", "if", "you", "copy", "your", "project", "onto", "the", "desktop", "and", "remove", "the", "NUMBER", "git", "directory", "Then", "you", "should", "have", "closer", "conditions", "to", "your", "previous", "test", "on", "your", "desktop", "NUMBER", "I", "copied", "the", "dir", "remove", "the", "NUMBER", "git", "dir", "from", "it", "run", "the", "test", "change", "were", "detected", "NUMBER", "However", "they", "be", "also", "detected", "even", "when", "I", "don", "t", "remove", "the", "NUMBER", "git", "dir", "from", "this", "copy", "on", "my", "Desktop", "NUMBER", "Checked", "again", "still", "doesn", "t", "work", "in", "the", "original", "dir", "NUMBER", "I", "still", "think", "it", "may", "be", "some", "weird", "Dropbox", "bug", "that", "appears", "under", "certain", "circumstances", "NUMBER", "Because", "like", "I", "said", "everything", "worked", "smoothly", "just", "yesterday", "NUMBER", "I", "just", "checked", "my", "Dropbox", "version", "and", "mine", "was", "out", "dated", "with", "version", "NUMBER", "I", "re", "run", "the", "test", "within", "the", "Dropbox", "after", "upgrading", "to", "the", "current", "version", "NUMBER", "and", "it", "also", "works", "for", "me", "NUMBER", "What", "s", "your", "Dropbox", "version", "I", "personally", "miss", "an", "upgrade", "notification", "from", "the", "app", "and", "find", "myself", "often", "use", "a", "totally", "out", "dated", "version", "of", "Dropbox", "NUMBER", "My", "version", "of", "Dropbox", "be", "even", "more", "outdate", "it", "s", "NUMBER", "Will", "keep", "you", "update", "if", "I", "find", "the", "true", "reason", "for", "this", "weird", "behavior", "of", "the", "filesystem", "NUMBER", "I", "update", "Dropbox", "to", "the", "latest", "version", "still", "no", "luck", "NUMBER", "I", "guess", "you", "re", "use", "the", "current", "OS", "X", "version", "NUMBER", "Actually", "NUMBER", "I", "ll", "try", "update", "later", "today", "NUMBER", "I", "ve", "also", "tried", "to", "reply", "the", "shell", "session", "transcript", "and", "it", "worked", "on", "my", "Desktop", "and", "in", "Dropbox", "Good", "luck", "guys", "don", "t", "drink", "too", "much", "Netzpirat", "we", "need", "you", "on", "this", "Any", "update", "on", "this", "I", "ve", "update", "MacOSX", "to", "NUMBER", "Still", "no", "luck", "NUMBER", "Not", "the", "answer", "I", "d", "like", "to", "hear", "NUMBER", "I", "m", "sorry", "I", "m", "at", "my", "wits", "end", "and", "cannot", "help", "you", "further", "NUMBER", "I", "suggest", "you", "to", "take", "the", "following", "actions", "There", "be", "a", "nice", "little", "tool", "call", "fseventer", "LINK", "software", "fseventer", "start", "that", "visualizes", "FS", "Events", "NUMBER", "I", "test", "it", "on", "my", "machine", "and", "it", "works", "fine", "on", "the", "latest", "OS", "X", "version", "NUMBER", "Can", "you", "please", "test", "if", "your", "Mac", "OS", "X", "be", "sending", "the", "correct", "FS", "events", "You", "can", "set", "a", "filter", "to", "your", "project", "directory", "to", "narrow", "down", "the", "results", "NUMBER", "When", "OS", "X", "fail", "to", "send", "the", "FS", "Events", "in", "your", "project", "directory", "you", "should", "report", "a", "bug", "to", "Apple", "LINK", "You", "aren", "t", "use", "a", "Hackintosh", "be", "you", "and", "or", "file", "a", "bug", "in", "the", "Dropbox", "Bugs", "Troubleshooting", "forum", "LINK", "NUMBER", "NUMBER", "When", "OS", "X", "successfully", "sends", "the", "FS", "Events", "in", "your", "project", "directory", "you", "should", "open", "an", "Issue", "on", "rb", "fsevent", "LINK", "fsevent", "with", "a", "recap", "of", "this", "thread", "along", "with", "detailed", "description", "of", "your", "OS", "X", "environment", "and", "file", "system", "settings", "format", "journaling", "case", "sensitive", "NUMBER", "thibaudgg", "and", "ttilley", "have", "a", "much", "deeper", "understanding", "of", "this", "gem", "and", "may", "help", "you", "to", "resolve", "the", "issue", "NUMBER", "Thanks", "a", "lot", "you", "ve", "be", "very", "helpful", "anyway", "NUMBER", "I", "ll", "try", "the", "things", "you", "suggested", "in", "the", "last", "message", "maybe", "I", "ll", "discover", "a", "solution", "NUMBER", "You", "re", "welcome", "NUMBER", "I", "really", "like", "to", "hear", "if", "you", "find", "a", "solution", "to", "this", "problem", "NUMBER", "An", "aside", "export", "FWDEBUG", "true", "gem", "install", "rb", "fsevent", "This", "will", "enable", "a", "truly", "obnoxious", "level", "of", "debugging", "output", "when", "the", "bin", "gets", "compiled", "NUMBER", "Ah", "yes", "NUMBER", "There", "IS", "an", "example", "of", "how", "verbose", "debug", "be", "in", "the", "README", "for", "NUMBER", "You", "will", "know", "EVERY", "last", "detail", "of", "what", "happens", "within", "fsevent_watch", "make", "additional", "tool", "hopefully", "unnecessary", "NUMBER", "I", "be", "having", "this", "problem", "on", "OSX", "NUMBER", "when", "I", "remove", "use", "of", "gem", "rb", "fsevent", "NUMBER", "it", "starts", "work", "again", "NUMBER", "LINK", "fsevent", "issue", "NUMBER", "XCode", "Version", "NUMBER", "Build", "NUMBER", "B", "NUMBER", "downloaded", "from", "the", "App", "Store", "on", "a", "new", "Lion", "MacBook", "Pro", "NUMBER", "I", "m", "watching", "change", "on", "Users", "greg", "workspace", "company", "project", "name", "it", "actually", "do", "have", "a", "hyphen", "NUMBER", "It", "seems", "to", "be", "the", "gem", "rb", "fsevent", "NUMBER", "that", "be", "the", "problem", "not", "guard", "NUMBER", "I", "tried", "it", "with", "no", "hyphen", "in", "the", "path", "and", "I", "get", "the", "same", "result", "with", "the", "gem", "rb", "fsevent", "it", "do", "not", "detect", "change", "when", "I", "remove", "that", "and", "instead", "use", "the", "gem", "autotest", "fsevent", "it", "works", "as", "expected", "NUMBER", "there", "be", "an", "issue", "open", "for", "rb", "fsevent", "at", "the", "same", "url", "as", "in", "my", "first", "post", "here", "LINK", "fsevent", "issue", "NUMBER", "gvt", "YES", "another", "test", "subject", "if", "you", "re", "online", "now", "and", "willing", "to", "let", "me", "poke", "around", "i", "m", "on", "AIM", "as", "YourTravis", "and", "IRC", "on", "irc", "NUMBER", "freenode", "NUMBER", "net", "as", "Aphelion", "NUMBER", "If", "you", "ve", "be", "keep", "track", "of", "issue", "NUMBER", "you", "know", "we", "re", "close", "and", "just", "need", "another", "person", "experience", "the", "bug", "to", "test", "some", "theories", "NUMBER", "gvt", "alternatively", "it", "would", "be", "insanely", "useful", "if", "you", "could", "run", "LINK", "fsevents", "bug", "I", "ll", "give", "find", "fsevents", "bug", "a", "try", "when", "I", "can", "and", "get", "back", "to", "ya", "thankyou", "gvt", "I", "also", "just", "push", "a", "pre", "release", "version", "of", "the", "rb", "fsevent", "gem", "that", "uses", "a", "nearly", "completely", "rewritten", "fsevent_watch", "NUMBER", "In", "particular", "the", "path", "resolution", "logic", "be", "different", "and", "may", "_", "crosses", "fingers", "_", "bypass", "the", "issue", "NUMBER", "When", "the", "new", "version", "be", "finished", "for", "real", "I", "think", "it", "s", "a", "significant", "enough", "jump", "to", "qualify", "for", "NUMBER", "On", "Thu", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Thibaud", "Guillaume", "Gentil", "TAG", "write", "ttilley", "NUMBER", "pre", "NUMBER", "that", "s", "a", "big", "jump", "forward", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "I", "just", "worked", "through", "this", "problem", "and", "find", "that", "it", "seems", "there", "be", "an", "issue", "picking", "up", "the", "fs", "events", "when", "use", "a", "case", "insensitive", "filesystem", "and", "the", "real", "path", "from", "which", "you", "be", "listening", "for", "change", "contains", "capital", "characters", "NUMBER", "It", "didn", "t", "work", "when", "the", "real", "path", "to", "my", "project", "was", "Project", "but", "do", "work", "when", "the", "Project", "directory", "be", "moved", "to", "project", "so", "that", "it", "be", "project", "NUMBER", "JamesMaroney", "Yeah", "this", "be", "a", "know", "issue", "LINK", "fsevent", "issue", "NUMBER", "with", "OS", "X", "FSEvents", "NUMBER", "I", "m", "get", "a", "variation", "of", "this", "problem", "on", "Ubuntu", "NUMBER", "with", "rb", "inotify", "NUMBER", "while", "NUMBER", "seems", "to", "be", "okay", "NUMBER", "The", "following", "debug", "trace", "may", "be", "of", "interest", "NUMBER", "NUMBER", "NUMBER", "prusswan", "prusswan", "vm", "billingly", "master", "bundle", "exec", "guard", "d", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "which", "notify", "send", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "emacsclient", "eval", "NUMBER", "NUMBER", "dev", "null", "echo", "N", "A", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "NotifySend", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "uses", "TerminalTitle", "to", "send", "notifications", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Guard", "starts", "all", "plugins", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "RSpec", "be", "run", "with", "RSpec", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "start_end", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "INFO", "Guard", "be", "now", "watching", "at", "home", "prusswan", "Desktop", "billingly", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Stop", "interactor", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "RSpec", "run_on_additions", "with", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "controllers", "application_controller_spec", "NUMBER", "rb", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "controllers", "redemptions_controller_spec", "NUMBER", "rb", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "controllers", "subscriptions_controller_spec", "NUMBER", "rb", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "controllers", "use_cases_controller_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Trying", "to", "run", "Guard", "RSpec", "run_on_changes", "with", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "controllers", "application_controller_spec", "NUMBER", "rb", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "controllers", "redemptions_controller_spec", "NUMBER", "rb", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "controllers", "subscriptions_controller_spec", "NUMBER", "rb", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "dummy", "spec", "controllers", "use_cases_controller_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Hook", "run_on_change_begin", "executed", "for", "Guard", "RSpec", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Command", "execution", "hash", "stty", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "Start", "interactor", "open_gem", "currently", "has", "a", "pretty", "serious", "issue", "with", "it", "that", "I", "ve", "documented", "here", "LINK", "_gem", "issue", "NUMBER", "issuecomment", "NUMBER", "This", "gem", "hasn", "t", "be", "update", "in", "a", "while", "and", "doesn", "t", "seem", "to", "be", "actively", "maintained", "anymore", "NUMBER", "Should", "we", "consider", "use", "a", "replacement", "for", "this", "dependency", "The", "gem", "author", "even", "says", "he", "s", "use", "this", "now", "LINK", "Actually", "we", "don", "t", "depend", "on", "open_gem", "for", "about", "NUMBER", "months", "in", "master", "and", "a", "fews", "days", "since", "the", "NUMBER", "release", "This", "was", "the", "commit", "that", "ended", "the", "dependency", "guard", "guard", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "Is", "there", "any", "interest", "in", "provide", "a", "hook", "or", "callback", "mechanism", "for", "Guard", "For", "example", "if", "I", "wanted", "to", "benchmark", "a", "Guard", "I", "could", "create", "an", "external", "gem", "to", "hook", "into", "various", "internal", "Guard", "events", "NUMBER", "def", "run_on_change", "hook", "run_on_change_start", "other", "code", "hook", "run_on_change_end", "end", "Here", "s", "a", "possible", "implementation", "LINK", "In", "a", "Guard", "definition", "you", "would", "include", "Hook", "and", "add", "the", "available", "hooks", "to", "the", "methods", "of", "interest", "require", "guard", "hook", "module", "Guard", "class", "MyGuard", "TAG", "reload", "run_all", "add", "begin", "and", "end", "hooks", "begin_hook", "greeter", "start", "end_hook", "big_finish", "run_all", "end", "Maybe", "we", "should", "rename", "them", "to", "be", "before_hook", "and", "after_hook", "a", "la", "Rails", "before_filter", "and", "after_filter", "NUMBER", "thibaudgg", "If", "we", "move", "the", "hook", "calls", "to", "Guard", "NUMBER", "supervised_task", "LINK", "def", "supervised_task", "guard", "task_to_supervise", "args", "guard", "NUMBER", "hook", "task_to_supervise", "NUMBER", "to_s", "_begin", "result", "guard", "NUMBER", "send", "task_to_supervise", "args", "guard", "NUMBER", "hook", "task_to_supervise", "NUMBER", "to_s", "_end", "result", "rescue", "Exception", "NUMBER", "we", "can", "have", "begin", "and", "end", "hooks", "for", "all", "of", "the", "Guard", "tasks", "automatically", "NUMBER", "Existing", "Guard", "gems", "wouldn", "t", "have", "to", "change", "their", "code", "NUMBER", "If", "they", "wanted", "to", "add", "other", "special", "hooks", "they", "could", "still", "do", "that", "too", "NUMBER", "Re", "the", "Guardfile", "I", "think", "I", "would", "advocate", "putting", "the", "code", "in", "there", "versus", "creating", "some", "other", "configuration", "file", "like", "NUMBER", "guard", "NUMBER", "Having", "two", "configuration", "file", "would", "be", "a", "little", "inconvenient", "NUMBER", "Of", "course", "a", "plugin", "as", "a", "separate", "gem", "could", "just", "initialize", "itself", "as", "long", "as", "it", "was", "required", "after", "the", "Guard", "gems", "in", "the", "Gemfile", "NUMBER", "Hey", "guys", "I", "ve", "just", "implement", "a", "first", "draft", "version", "of", "the", "new", "callback", "Guardfile", "DSL", "method", "please", "take", "a", "look", "at", "the", "hook", "branch", "LINK", "Blocks", "can", "also", "be", "pass", "like", "for", "the", "watch", "method", "I", "think", "it", "can", "be", "really", "useful", "and", "quick", "to", "add", "a", "callback", "this", "way", "NUMBER", "You", "can", "now", "do", "some", "_silly_", "stuff", "like", "this", "require", "growl", "guard", "rspec", "do", "watch", "NUMBER", "NUMBER", "spec", "callback", "start_end", "say", "RSpec", "guard", "be", "run", "callback", "run_all_begin", "Growl", "NUMBER", "notify", "Running", "all", "specs", "title", "Guard", "RSpec", "name", "Guard", "callback", "MyCustomCallback", "start_begin", "run_all_begin", "MyCustomCallback", "must", "have", "a", "NUMBER", "call", "method", "end", "Let", "me", "know", "what", "do", "you", "think", "of", "this", "I", "ll", "try", "to", "experiment", "some", "callbacks", "to", "see", "how", "it", "could", "be", "improved", "Note", "I", "ve", "add", "this", "hook", "feature", "to", "the", "NUMBER", "milestone", "ok", "all", "I", "wanted", "was", "trying", "this", "new", "GitHub", "s", "feature", "The", "blocks", "be", "nice", "Now", "I", "can", "easily", "have", "Guard", "open", "TextMate", "callback", "start_end", "mate", "NUMBER", "and", "open", "some", "terminal", "windows", "callback", "start_end", "do", "dir", "pwd", "osa", "TAG", "guard", "Volumes", "spinner", "jeffdeville", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "rubygems", "NUMBER", "rb", "NUMBER", "in", "report_activate_error", "Could", "not", "find", "RubyGem", "bundler", "NUMBER", "Gem", "LoadError", "from", "Volumes", "spinner", "jeffdeville", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "rubygems", "NUMBER", "rb", "NUMBER", "in", "activate", "from", "Volumes", "spinner", "jeffdeville", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "site_ruby", "NUMBER", "rubygems", "NUMBER", "rb", "NUMBER", "in", "gem", "from", "Volumes", "spinner", "jeffdeville", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "bin", "bundle", "NUMBER", "in", "TAG", "but", "if", "I", "instead", "use", "rvm", "use", "ree", "guard", "things", "work", "NUMBER", "Is", "this", "a", "know", "compatibility", "issue", "or", "might", "there", "be", "something", "wrong", "w", "my", "NUMBER", "gems", "NUMBER", "be", "definitely", "install", "and", "the", "bin", "be", "evidently", "find", "Yes", "NUMBER", "And", "bundle", "exec", "guard", "didn", "t", "work", "either", "NUMBER", "Any", "update", "on", "this", "Jeff", "Bundler", "be", "only", "a", "development", "dependency", "of", "Guard", "yet", "you", "require", "it", "in", "the", "main", "file", "NUMBER", "This", "means", "Bundler", "would", "not", "get", "install", "while", "installing", "Guard", "and", "be", "probably", "why", "jeff", "gets", "this", "error", "NUMBER", "I", "wonder", "why", "do", "you", "require", "bundler", "in", "the", "first", "place", "I", "tried", "looking", "through", "the", "project", "searching", "for", "something", "that", "might", "require", "bundler", "but", "I", "find", "nothing", "NUMBER", "When", "will", "this", "be", "release", "This", "week", "in", "the", "readme", "Fixes", "an", "invalid", "ANSI", "escape", "code", "in", "UI", "NUMBER", "reset_line", "NUMBER", "I", "assumed", "that", "with", "naming", "the", "method", "reset_line", "an", "actual", "reset", "of", "things", "like", "color", "and", "bold", "be", "meant", "not", "just", "a", "carriage", "return", "NUMBER", "Guard", "UI", "NUMBER", "reset_line", "prints", "an", "ESC", "without", "further", "argument", "e", "which", "be", "afaik", "an", "invalid", "escape", "sequence", "NUMBER", "This", "results", "in", "literals", "ESC", "symbols", "showing", "NUMBER", "B", "when", "use", "Guard", "in", "zsh", "oder", "bash", "under", "Ubuntu", "here", "NUMBER", "I", "m", "not", "sure", "what", "the", "intention", "behind", "e", "be", "so", "I", "m", "not", "sure", "whether", "it", "should", "be", "remove", "or", "replaced", "with", "something", "else", "NUMBER", "Honestly", "I", "don", "t", "remember", "why", "I", "add", "this", "e", "maybe", "the", "r", "be", "enough", "to", "reset", "the", "line", "NUMBER", "I", "will", "try", "on", "my", "Mac", "OS", "X", "bash", "when", "I", "ll", "have", "some", "time", "NUMBER", "Feel", "free", "to", "submit", "a", "pull", "request", "if", "you", "think", "that", "e", "be", "completely", "useless", "thanks", "I", "presume", "with", "reset_line", "be", "also", "meant", "to", "reset", "colors", "bold", "etc", "NUMBER", "not", "just", "a", "carriage", "return", "NUMBER", "For", "that", "I", "sent", "a", "pull", "request", "see", "LINK", "NUMBER", "Issue", "be", "resolve", "NUMBER", "Thanks", "for", "merge", "Hi", "all", "Since", "guard", "needs", "some", "OS", "specific", "gems", "in", "Gemfile", "we", "be", "run", "constantly", "into", "conflict", "between", "developers", "use", "linux", "and", "developers", "use", "Mac", "OS", "NUMBER", "My", "somewath", "naive", "approach", "to", "circumvent", "the", "problem", "was", "add", "this", "to", "the", "Gemfile", "TAG", "group", "development", "test", "do", "NUMBER", "gem", "guard", "rspec", "if", "RUBY_PLATFORM", "darwin", "NUMBER", "gem", "growl", "end", "if", "RUBY_PLATFORM", "linux", "NUMBER", "gem", "libnotify", "end", "TAG", "Sadly", "this", "breaks", "cross", "plattform", "deployment", "since", "growl", "will", "be", "mention", "in", "Gemfile", "NUMBER", "lock", "and", "our", "Servers", "be", "run", "Linux", "NUMBER", "Would", "be", "interesting", "to", "see", "how", "you", "handle", "this", "at", "your", "sites", "Thanks", "Hello", "I", "have", "problem", "to", "run", "guard", "guard", "spork", "and", "guard", "cucumber", "together", "here", "be", "the", "gist", "with", "the", "fail", "message", "more", "information", "LINK", "In", "short", "the", "error", "be", "rb", "inotify", "NUMBER", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "NUMBER", "in", "open", "No", "such", "file", "or", "directory", "home", "calas", "dev", "client", "theproject", "tmp", "cache", "configuration_", "NUMBER", "NUMBER", "NUMBER", "cy", "NUMBER", "l", "NUMBER", "lock", "Errno", "ENOENT", "Hello", "do", "you", "have", "a", "tmp", "cache", "directory", "in", "your", "project", "Yes", "I", "have", "such", "directory", "NUMBER", "Thanks", "for", "your", "time", "Do", "you", "know", "from", "who", "this", "file", "configuration_", "NUMBER", "NUMBER", "NUMBER", "cy", "NUMBER", "l", "NUMBER", "lock", "be", "come", "Not", "so", "sure", "but", "I", "guess", "it", "comes", "from", "configuration", "gem", "The", "dependency", "chain", "be", "like", "guard", "open_gem", "launchy", "configuration", "I", "should", "say", "guard", "spork", "and", "guard", "rspec", "DO", "NOT", "fail", "NUMBER", "Can", "you", "tried", "to", "delete", "this", "configuration", "NUMBER", "lock", "file", "and", "rerun", "guard", "to", "see", "if", "it", "be", "come", "back", "My", "guessing", "be", "that", "file", "be", "quickly", "add", "remove", "and", "so", "rb", "inotify", "fail", "NUMBER", "So", "it", "s", "seems", "to", "be", "more", "a", "rb", "inotify", "issue", "NUMBER", "But", "we", "can", "maybe", "tried", "to", "find", "a", "workaround", "NUMBER", "the", "file", "doesn", "t", "exist", "what", "be", "worst", "I", "doesn", "t", "happen", "on", "other", "projects", "with", "almost", "same", "configuration", "and", "gems", "NUMBER", "I", "m", "trying", "to", "spot", "what", "be", "cause", "the", "problem", "NUMBER", "Will", "go", "back", "to", "it", "on", "the", "weekend", "to", "see", "if", "I", "catch", "something", "more", "NUMBER", "Thanks", "NUMBER", "This", "bug", "be", "affected", "me", "too", "NUMBER", "I", "be", "not", "sure", "weather", "this", "be", "a", "rb", "inotify", "issue", "or", "guard", "itself", "NUMBER", "However", "here", "be", "a", "fork", "of", "rb", "inotify", "which", "has", "a", "fix", "for", "that", "NUMBER", "LINK", "inotify", "It", "will", "be", "cool", "if", "guard", "developers", "can", "take", "a", "look", "at", "it", "to", "realize", "where", "this", "bug", "should", "be", "fix", "NUMBER", "Thank", "you", "NUMBER", "I", "suggest", "to", "rename", "the", "issue", "title", "since", "there", "has", "be", "issue", "NUMBER", "report", "because", "of", "the", "same", "reason", "NUMBER", "The", "failure", "has", "nothing", "to", "do", "with", "with", "cucumber", "at", "all", "it", "s", "because", "Dir", "NUMBER", "entries", "function", "doesn", "t", "handle", "short", "living", "file", "that", "be", "created", "and", "delete", "within", "the", "entries", "call", "very", "well", "NUMBER", "I", "m", "also", "not", "sure", "where", "this", "fix", "belongs", "to", "It", "feels", "like", "a", "problem", "within", "Dir", "NUMBER", "entries", "but", "rb", "inotify", "should", "report", "this", "as", "IN_CREATE", "and", "IN_DELETE", "events", "NUMBER", "I", "ve", "renamed", "the", "issue", "I", "hope", "it", "s", "more", "clear", "now", "NUMBER", "I", "don", "t", "have", "acceptable", "solution", "to", "solve", "this", "problem", "NUMBER", "Catching", "the", "error", "avoids", "guard", "crash", "but", "in", "this", "case", "guard", "don", "t", "process", "all", "notification", "because", "inotify", "stop", "processing", "of", "current", "batch", "of", "file", "NUMBER", "It", "be", "not", "easy", "to", "test", "this", "bug", "reproduction", "be", "a", "little", "difficult", "Yeah", "I", "tried", "to", "reproduce", "this", "very", "difficult", "indeed", "P", "I", "have", "this", "problem", "too", "for", "every", "run", "of", "my", "specs", "NUMBER", "Perhaps", "catching", "the", "error", "even", "if", "it", "means", "losing", "occasional", "events", "be", "better", "than", "guard", "dying", "There", "seems", "to", "be", "a", "misunderstanding", "of", "this", "issue", "I", "was", "also", "get", "it", "wrong", "the", "first", "time", "so", "let", "me", "explain", "it", "in", "more", "detail", "The", "Dir", "NUMBER", "entries", "failure", "The", "error", "comes", "from", "Ruby", "core", "more", "precisely", "from", "Dir", "NUMBER", "entries", "dirname", "LINK", "doc", "NUMBER", "org", "core", "classes", "Dir", "NUMBER", "html", "M", "NUMBER", "NUMBER", "It", "looks", "like", "this", "function", "gets", "a", "list", "of", "all", "file", "in", "this", "directory", "and", "then", "uses", "this", "list", "to", "get", "some", "more", "information", "about", "the", "file", "shortly", "afterwards", "NUMBER", "In", "case", "a", "file", "has", "be", "delete", "in", "between", "these", "two", "calls", "Dir", "NUMBER", "entries", "fail", "with", "a", "No", "such", "file", "or", "directory", "error", "NUMBER", "I", "have", "search", "the", "Ruby", "Bugtracker", "LINK", "lang", "NUMBER", "org", "quickly", "but", "haven", "t", "find", "an", "issue", "relate", "to", "Dir", "NUMBER", "entries", "NUMBER", "I", "suggest", "that", "someone", "who", "can", "reproduce", "this", "error", "file", "a", "new", "bug", "I", "even", "don", "t", "know", "the", "Ruby", "version", "that", "causes", "this", "error", "but", "I", "suggest", "to", "try", "another", "version", "since", "there", "be", "some", "significant", "change", "from", "NUMBER", "LINK", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "dir", "NUMBER", "c", "L", "NUMBER", "to", "NUMBER", "LINK", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "dir", "NUMBER", "c", "L", "NUMBER", "dir_open_dir", "be", "call", "from", "dir_entires", "LINK", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "dir", "NUMBER", "c", "L", "NUMBER", "that", "be", "the", "same", "in", "both", "Ruby", "version", "NUMBER", "Catching", "the", "error", "Catching", "this", "error", "at", "the", "Guard", "level", "will", "not", "solve", "your", "problem", "NUMBER", "In", "fact", "I", "prefer", "Guard", "dying", "instead", "of", "swallow", "the", "exception", "and", "not", "work", "properly", "When", "you", "have", "a", "look", "at", "the", "source", "where", "rb", "inotify", "fail", "LINK", "inotify", "blob", "master", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "L", "NUMBER", "you", "ll", "notice", "that", "the", "error", "occur", "in", "the", "watch", "method", "NUMBER", "Since", "Guard", "calls", "rb", "inotify", "LINK", "L", "NUMBER", "with", "the", "recursive", "flag", "the", "watch", "method", "will", "call", "itself", "recursively", "on", "all", "entires", "of", "Dir", "NUMBER", "entries", "NUMBER", "So", "when", "Dir", "NUMBER", "entries", "raises", "an", "error", "it", "stops", "attaching", "more", "file", "watchers", "NUMBER", "In", "the", "worst", "case", "it", "haven", "t", "attached", "a", "single", "file", "watcher", "when", "the", "error", "occur", "NUMBER", "So", "catching", "this", "error", "will", "not", "make", "rb", "inotify", "work", "and", "it", "doesn", "t", "matter", "whether", "you", "catch", "it", "within", "Guard", "or", "within", "rb", "inotify", "NUMBER", "So", "the", "patch", "LINK", "inotify", "commit", "NUMBER", "fb", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "from", "hron", "will", "not", "fix", "the", "problem", "at", "all", "NUMBER", "How", "to", "fix", "this", "error", "As", "I", "said", "before", "the", "fix", "should", "go", "into", "Ruby", "itself", "NUMBER", "Since", "this", "may", "take", "a", "way", "to", "long", "we", "should", "work", "around", "this", "bug", "NUMBER", "We", "could", "do", "this", "either", "in", "the", "Guard", "linux", "listener", "LINK", "L", "NUMBER", "or", "in", "the", "rb", "inotify", "notifier", "LINK", "inotify", "blob", "master", "lib", "rb", "inotify", "notifier", "NUMBER", "rb", "L", "NUMBER", "but", "I", "believe", "that", "the", "workaround", "must", "go", "into", "rb", "inotify", "so", "that", "other", "projects", "use", "this", "library", "would", "also", "benefit", "NUMBER", "A", "possible", "workaround", "To", "work", "around", "this", "bug", "we", "must", "find", "another", "Ruby", "function", "that", "doesn", "t", "have", "the", "same", "limitations", "as", "Dir", "NUMBER", "entires", "NUMBER", "Since", "I", "don", "t", "know", "the", "internals", "of", "the", "different", "Ruby", "function", "we", "must", "simply", "approach", "this", "with", "trial", "and", "error", "NUMBER", "Below", "you", "ll", "find", "some", "possible", "workarounds", "but", "I", "haven", "t", "test", "them", "NUMBER", "Dir", "NUMBER", "foreach", "The", "C", "implementation", "uses", "dir_open_dir", "so", "I", "expect", "this", "to", "fail", "also", "NUMBER", "But", "it", "s", "worth", "a", "test", "since", "it", "works", "different", "Dir", "NUMBER", "foreach", "path", "do", "d", "next", "if", "d", "NUMBER", "d", "NUMBER", "d", "File", "NUMBER", "join", "path", "d", "watch", "d", "flags", "callback", "if", "RECURSIVE_BLACKLIST", "NUMBER", "include", "d", "File", "NUMBER", "directory", "d", "end", "I", "think", "this", "workaround", "would", "even", "be", "better", "than", "the", "original", "in", "terms", "of", "simplicity", "and", "speed", "an", "iterator", "be", "returned", "instead", "of", "an", "Array", "NUMBER", "Dir", "NUMBER", "glob", "The", "C", "implementation", "of", "Dir", "NUMBER", "glob", "LINK", "_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "dir", "NUMBER", "c", "L", "NUMBER", "looks", "quite", "different", "so", "this", "may", "be", "a", "good", "candidate", "Dir", "NUMBER", "glob", "File", "NUMBER", "join", "path", "NUMBER", "each", "do", "d", "watch", "d", "flags", "callback", "if", "RECURSIVE_BLACKLIST", "NUMBER", "include", "d", "File", "NUMBER", "directory", "d", "end", "The", "implementation", "will", "definitely", "be", "slower", "but", "it", "would", "be", "acceptable", "since", "it", "will", "be", "executed", "only", "once", "when", "the", "notifications", "be", "initialized", "NUMBER", "Pathname", "Pathname", "be", "not", "a", "candidate", "since", "it", "s", "implement", "in", "Ruby", "itself", "and", "uses", "Dir", "for", "get", "the", "file", "NUMBER", "Who", "takes", "care", "As", "yannlugrin", "and", "rymai", "said", "It", "s", "extremely", "difficult", "to", "reproduce", "this", "error", "NUMBER", "So", "best", "would", "be", "if", "calas", "hron", "or", "kevinrutherford", "could", "test", "the", "suggested", "workarounds", "NUMBER", "Please", "also", "submit", "a", "Bug", "report", "to", "the", "Ruby", "core", "bug", "tracker", "and", "send", "a", "pull", "request", "to", "rb", "inotify", "if", "a", "solution", "works", "NUMBER", "Hi", "guys", "I", "can", "reproduce", "the", "error", "in", "my", "environment", "by", "calling", "git", "pull", "rebase", "in", "the", "directory", "that", "guard", "be", "watching", "NUMBER", "Im", "on", "Ubuntu", "NUMBER", "Ruby", "NUMBER", "guard", "NUMBER", "and", "rb", "inotify", "NUMBER", "I", "guess", "it", "s", "because", "git", "creates", "a", "temporary", "file", "NUMBER", "git", "rebase", "apply", "and", "then", "remove", "it", "NUMBER", "I", "can", "confirm", "that", "the", "Dir", "NUMBER", "glob", "solution", "by", "netzpirat", "works", "for", "me", "Great", "looks", "like", "it", "s", "going", "in", "the", "good", "direction", "There", "s", "also", "a", "pull", "request", "here", "LINK", "inotify", "pull", "NUMBER", "Great", "when", "the", "new", "release", "of", "rb", "inotify", "will", "be", "out", "NUMBER", "We", "will", "update", "the", "README", "Gemfile", "of", "guard", "NUMBER", "Thanks", "Getting", "the", "following", "error", "when", "run", "in", "windows", "NUMBER", "mUsing", "polling", "Please", "help", "us", "to", "support", "your", "system", "better", "than", "that", "NUMBER", "NUMBER", "m", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interactor", "NUMBER", "rb", "NUMBER", "in", "trap", "unsupported", "signal", "SIGQUIT", "ArgumentError", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interactor", "NUMBER", "rb", "NUMBER", "in", "init_signal_traps", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "C", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "C", "Ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "C", "Ruby", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "Ok", "Windows", "seems", "to", "not", "knowing", "SIGQUIT", "signal", "do", "you", "know", "a", "list", "of", "available", "signals", "on", "windows", "Issue", "for", "me", "too", "NUMBER", "Windows", "NUMBER", "x", "NUMBER", "NUMBER", "mUsing", "polling", "Please", "help", "us", "to", "support", "your", "system", "better", "than", "that", "NUMBER", "NUMBER", "m", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interactor", "NUMBER", "rb", "NUMBER", "in", "trap", "unsupported", "signal", "SIGQUIT", "ArgumentError", "from", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "interactor", "NUMBER", "rb", "NUMBER", "in", "init_signal_traps", "from", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "NUMBER", "rb", "NUMBER", "in", "start", "from", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "cli", "NUMBER", "rb", "NUMBER", "in", "start", "from", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "task", "NUMBER", "rb", "NUMBER", "in", "run", "from", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "invocation", "NUMBER", "rb", "NUMBER", "in", "invoke_task", "from", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "NUMBER", "rb", "NUMBER", "in", "dispatch", "from", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "thor", "NUMBER", "lib", "thor", "base", "NUMBER", "rb", "NUMBER", "in", "start", "from", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "from", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "bin", "guard", "NUMBER", "in", "load", "from", "D", "tool", "ruby", "NUMBER", "p", "NUMBER", "i", "NUMBER", "mingw", "NUMBER", "lib", "ruby", "gems", "NUMBER", "bin", "guard", "NUMBER", "in", "TAG", "Here", "be", "the", "list", "of", "support", "signals", "on", "my", "machine", "EXIT", "NUMBER", "INT", "NUMBER", "ILL", "NUMBER", "ABRT", "NUMBER", "FPE", "NUMBER", "KILL", "NUMBER", "SEGV", "NUMBER", "TERM", "NUMBER", "I", "ll", "try", "to", "comment", "QUIT", "I", "ve", "verify", "that", "stereobooster", "commit", "fix", "this", "issue", "on", "my", "Win", "NUMBER", "x", "NUMBER", "machine", "NUMBER", "Although", "it", "doesn", "t", "allow", "you", "any", "functionally", "with", "these", "keyboard", "shortcuts", "it", "at", "least", "works", "and", "executes", "NUMBER", "Yes", "trapping", "signals", "on", "Windows", "seems", "impossible", "LINK", "issuecomment", "NUMBER", "NUMBER", "We", "need", "to", "find", "a", "workaround", "NUMBER", "Have", "you", "any", "ideas", "Discussion", "about", "Signals", "trapping", "continues", "here", "LINK", "stereobooster", "s", "commit", "fix", "this", "for", "me", "also", "on", "Windows", "NUMBER", "It", "would", "be", "awesome", "if", "this", "fix", "could", "be", "rolled", "into", "the", "official", "guard", "gem", "release", "NUMBER", "It", "s", "already", "in", "the", "master", "branch", "NUMBER", "You", "can", "use", "it", "right", "now", "with", "bundler", "gem", "guard", "git", "git", "github", "NUMBER", "com", "guard", "guard", "NUMBER", "git", "NUMBER", "A", "new", "gem", "release", "will", "comes", "soon", "NUMBER", "So", "tonight", "I", "was", "run", "some", "test", "and", "wasn", "t", "paying", "attention", "that", "I", "had", "NUMBER", "guard", "s", "run", "same", "dir", "same", "guardfile", "NUMBER", "IMHO", "an", "error", "should", "be", "throw", "if", "it", "detects", "another", "guard", "run", "Maybe", "if", "its", "run", "in", "the", "same", "directory", "or", "the", "same", "Guard", "file", "since", "people", "could", "probably", "have", "different", "projects", "run", "multiple", "guards", "NUMBER", "Discussed", "with", "YannLugrin", "three", "new", "options", "should", "be", "add", "for", "run_all", "reload", "guard", "method", "and", "could", "be", "specify", "per", "guard", "NUMBER", "Options", "be", "each", "NUMBER", "minutes", "run", "the", "method", "each", "X", "minutes", "seconds", "at_start", "true", "false", "run", "the", "method", "when", "starting", "guard", "false", "by", "default", "disabled", "true", "false", "avoid", "to", "run", "the", "method", "when", "signal", "sent", "false", "by", "default", "Example", "guard", "rspec", "run_all", "at_start", "true", "do", "NUMBER", "What", "do", "you", "think", "about", "that", "I", "totally", "agree", "I", "push", "a", "work", "in", "progress", "feature", "branch", "today", "or", "tomorrow", "NUMBER", "These", "options", "seem", "cool", "to", "me", "but", "will", "it", "be", "possible", "for", "guards", "developer", "to", "set", "those", "without", "the", "possibility", "for", "users", "to", "overwrite", "these", "options", "In", "other", "words", "who", "will", "have", "the", "priority", "guards", "developers", "or", "guards", "users", "For", "example", "if", "the", "developer", "of", "a", "guard", "wants", "to", "never", "reload", "or", "run_all", "on", "any", "signals", "the", "user", "should", "not", "be", "able", "to", "specify", "options", "that", "would", "cancel", "this", "behavior", "NUMBER", "If", "a", "developer", "never", "want", "to", "reload", "run_all", "on", "signal", "actually", "the", "only", "way", "to", "call", "these", "methods", "he", "just", "don", "t", "implement", "them", "Guard", "users", "will", "always", "have", "the", "priority", "NUMBER", "Ok", "fair", "enough", "btw", "my", "example", "was", "the", "opposite", "of", "what", "I", "thought", "If", "a", "developer", "wants", "to", "always", "run_all", "reload", "the", "user", "should", "not", "be", "able", "to", "cancel", "this", "behavior", "NUMBER", "Do", "you", "have", "some", "concrete", "examples", "of", "the", "use", "of", "these", "options", "in", "a", "real", "scenario", "In", "my", "opinion", "if", "run_all", "reload", "should", "not", "be", "disabled", "the", "user", "need", "to", "be", "smart", "enough", "to", "not", "doing", "that", "NUMBER", "Real", "scenario", "Examples", "Running", "all", "spesc", "when", "guard", "starts", "Not", "run", "all", "cucumber", "features", "with", "Ctrl", "You", "can", "see", "work", "in", "progress", "branch", "at", "LINK", "_optionnal_actions", "disable", "and", "at_start", "work", "with", "this", "implementation", "you", "can", "control", "this", "in", "each", "guard", "code", "to", "add", "more", "optional", "case", "but", "it", "be", "not", "recommended", "to", "overwrite", "normal", "option", "result", "NUMBER", "I", "like", "the", "new", "options", "and", "I", "d", "like", "to", "see", "even", "more", "of", "these", "it", "would", "be", "nice", "if", "I", "could", "make", "the", "execution", "of", "a", "guard", "dependent", "on", "the", "result", "of", "another", "guard", "NUMBER", "Let", "me", "illustrate", "this", "with", "a", "few", "examples", "guard", "rspec", "do", "NUMBER", "end", "guard", "cucumber", "run_all", "depends", "rspec", "true", "do", "NUMBER", "end", "This", "configuration", "will", "run", "all", "cucumber", "features", "after", "rspec", "has", "run", "all", "specs", "successfully", "NUMBER", "This", "would", "enable", "a", "autotest", "like", "configuration", "for", "guard", "rspec", "and", "guard", "cucumber", "NUMBER", "guard", "coffeescript", "do", "NUMBER", "end", "guard", "jasmine", "run_on_change", "depends", "coffeescript", "do", "NUMBER", "end", "This", "configuration", "would", "run", "jasmine", "test", "for", "a", "change", "file", "after", "be", "has", "be", "successfully", "compiled", "into", "JavaScript", "NUMBER", "The", "Jasmine", "guard", "doesn", "t", "exist", "for", "now", "but", "who", "know", "NUMBER", "If", "there", "be", "multiple", "guards", "of", "the", "same", "type", "configured", "they", "can", "have", "an", "id", "options", "for", "unique", "identification", "guard", "coffeescript", "id", "coffee_app", "do", "NUMBER", "watch", "app", "NUMBER", "end", "guard", "coffeescript", "id", "coffee_tests", "do", "NUMBER", "watch", "test", "NUMBER", "end", "guard", "jasmine", "run_on_change", "depends", "coffee_app", "coffee_tests", "do", "NUMBER", "end", "This", "implies", "a", "change", "that", "each", "plugin", "has", "to", "return", "either", "true", "or", "false", "in", "the", "run_on_change", "and", "run_all", "methods", "NUMBER", "Michael", "Yes", "depends", "option", "be", "a", "good", "idea", "but", "the", "id", "stuff", "be", "maybe", "overkill", "NUMBER", "a", "smart", "convention", "could", "be", "better", "NUMBER", "don", "t", "have", "better", "idea", "at", "the", "moment", "I", "m", "thinking", "about", "another", "option", "something", "like", "non_blocking", "threadable", "true", "that", "will", "make", "run", "the", "guard", "plugin", "without", "having", "to", "wait", "for", "his", "result", "could", "be", "useful", "for", "guard", "passenger", "NUMBER", "Guard", "referencing", "by", "id", "may", "be", "unnecessary", "if", "we", "switch", "to", "a", "notification", "push", "approach", "instead", "of", "a", "pull", "approach", "NUMBER", "Last", "week", "I", "sat", "down", "and", "write", "my", "dream", "Guardfile", "and", "it", "looks", "like", "this", "threads", "NUMBER", "group", "autotest", "do", "guard", "rspec", "version", "NUMBER", "start", "true", "rerun", "true", "success", "all", "cucumber", "do", "watch", "spec", "NUMBER", "_spec", "NUMBER", "rb", "watch", "spec", "spec_helper", "NUMBER", "rb", "spec", "watch", "app", "NUMBER", "NUMBER", "rb", "m", "spec", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "lib", "NUMBER", "NUMBER", "rb", "m", "spec", "lib", "m", "NUMBER", "_spec", "NUMBER", "rb", "watch", "app", "controllers", "application_controller", "NUMBER", "rb", "spec", "controllers", "watch", "config", "routes", "NUMBER", "rb", "spec", "routing", "watch", "spec", "fabricators", "spec", "models", "end", "guard", "cucumber", "rerun", "true", "do", "watch", "features", "NUMBER", "NUMBER", "feature", "watch", "features", "support", "features", "watch", "features", "step_definitions", "features", "end", "end", "group", "frontend", "do", "guard", "compass", "do", "watch", "app", "stylesheets", "NUMBER", "NUMBER", "scss", "end", "guard", "coffeescript", "output", "public", "javascripts", "compiled", "do", "watch", "app", "coffeescripts", "NUMBER", "NUMBER", "coffee", "end", "guard", "coffeescript", "output", "spec", "javascripts", "do", "watch", "spec", "coffeescripts", "NUMBER", "NUMBER", "coffee", "end", "guard", "livereload", "do", "watch", "app", "NUMBER", "NUMBER", "erb", "haml", "watch", "app", "helpers", "NUMBER", "NUMBER", "rb", "watch", "public", "NUMBER", "NUMBER", "css", "js", "html", "watch", "config", "locales", "NUMBER", "NUMBER", "yml", "watch", "spec", "javascripts", "NUMBER", "NUMBER", "js", "end", "end", "Let", "me", "dissect", "the", "above", "Guardfile", "threads", "The", "thread", "keyword", "switches", "the", "Guard", "loop", "to", "a", "non", "blocking", "mode", "where", "the", "fs", "listener", "will", "keep", "listening", "for", "change", "and", "spawns", "the", "Guard", "executions", "to", "the", "maximum", "number", "of", "threads", "defined", "NUMBER", "This", "allows", "to", "choose", "the", "optimal", "setting", "depending", "on", "the", "CPU", "NUMBER", "group", "The", "above", "example", "introduces", "group", "that", "let", "me", "choose", "to", "run", "only", "a", "subset", "of", "the", "guardfile", "guard", "Run", "all", "group", "guard", "autotest", "Run", "only", "the", "autotest", "group", "guard", "frontend", "Run", "only", "the", "frontend", "group", "guard", "autotest", "frontend", "Run", "both", "the", "autotest", "and", "the", "frontend", "group", "So", "when", "I", "be", "focusing", "on", "frontend", "development", "I", "could", "omit", "the", "whole", "backend", "test", "stuff", "NUMBER", "start", "option", "When", "the", "start", "option", "be", "set", "to", "true", "Guard", "will", "trigger", "run_all", "upon", "start", "NUMBER", "It", "defaults", "to", "false", "NUMBER", "rerun", "option", "When", "the", "rerun", "option", "be", "set", "Guard", "will", "trigger", "run_on_change", "with", "all", "the", "fail", "file", "from", "the", "previous", "run", "if", "any", "of", "the", "guarded", "file", "of", "the", "actual", "guard", "be", "change", "NUMBER", "It", "defaults", "to", "false", "NUMBER", "This", "would", "imply", "that", "a", "Guard", "must", "return", "an", "Array", "with", "the", "fail", "file", "after", "a", "run", "method", "has", "be", "triggered", "NUMBER", "If", "everything", "succeed", "returns", "nil", "or", "an", "empty", "Array", "NUMBER", "success", "option", "With", "the", "success", "option", "a", "Guard", "can", "trigger", "other", "Guards", "run", "methods", "after", "it", "run", "successfully", "NUMBER", "The", "success", "option", "takes", "an", "option", "Hash", "with", "two", "possible", "keys", "all", "will", "trigger", "run_all", "whereas", "change", "will", "trigger", "run_on_change", "on", "the", "specified", "Guard", "s", "NUMBER", "The", "value", "be", "either", "a", "single", "symbol", "of", "the", "destination", "Guard", "or", "an", "Array", "with", "multiple", "destination", "Guards", "NUMBER", "What", "do", "you", "guys", "think", "of", "this", "DSL", "extensions", "Do", "you", "see", "any", "problem", "I", "m", "wondering", "especially", "about", "the", "thread", "option", "since", "I", "have", "no", "clue", "why", "it", "was", "decided", "to", "block", "the", "fs", "listener", "on", "guard", "execution", "NUMBER", "The", "start", "rerun", "and", "success", "options", "will", "allow", "us", "to", "build", "more", "complex", "Guard", "configuration", "for", "example", "to", "achieve", "an", "Autotest", "like", "behavior", "NUMBER", "Do", "you", "would", "like", "to", "see", "this", "implement", "or", "do", "you", "think", "this", "be", "to", "heavy", "weight", "for", "Guard", "Thanks", "for", "any", "feedback", "NUMBER", "Here", "some", "remarks", "for", "each", "points", "Threads", "I", "don", "t", "think", "all", "guard", "should", "be", "run", "in", "thread", "for", "example", "guard", "spork", "must", "always", "run", "before", "guard", "rspec", "cucumber", "NUMBER", "So", "there", "be", "some", "real", "dependencies", "between", "some", "guards", "NUMBER", "Maybe", "a", "thread", "true", "option", "be", "enough", "to", "make", "just", "some", "guard", "non", "blocking", "NUMBER", "Setting", "the", "number", "of", "maximum", "threads", "seems", "overkill", "for", "me", "but", "why", "not", "NUMBER", "Groups", "Sound", "like", "a", "great", "feature", "to", "add", "start", "option", "It", "s", "the", "same", "as", "run_all", "at_start", "true", "no", "rerun", "option", "This", "option", "should", "be", "add", "inside", "guard", "rspec", "test", "cucumber", "instead", "of", "Guard", "itself", "don", "t", "you", "think", "success", "option", "I", "think", "use", "run_all", "run_on_change", "directly", "will", "be", "more", "clear", "than", "all", "change", "NUMBER", "It", "ll", "give", "something", "like", "success", "run_all", "cucumber", "NUMBER", "Good", "idea", "NUMBER", "I", "just", "commit", "a", "change", "that", "remove", "the", "blockage", "of", "listeners", "on", "guards", "execution", "so", "a", "thread", "true", "option", "should", "be", "really", "easy", "to", "implement", "now", "NUMBER", "May", "be", "we", "can", "speak", "a", "little", "more", "about", "start", "true", "vs", "run_all", "at_start", "true", "before", "beginning", "any", "implementation", "NUMBER", "After", "that", "any", "pull", "request", "be", "very", "welcome", "as", "my", "hobby", "code", "time", "be", "really", "limited", "NUMBER", "Thanks", "for", "all", "your", "suggestions", "ideas", "NUMBER", "The", "change", "you", "made", "on", "Guard", "to", "not", "block", "the", "listeners", "be", "sufficient", "and", "makes", "the", "threading", "obsolete", "for", "me", "NUMBER", "I", "will", "definitely", "take", "care", "of", "the", "Guard", "Groups", "and", "you", "can", "expect", "a", "pull", "request", "in", "the", "near", "future", "NUMBER", "I", "also", "agree", "that", "the", "rerun", "option", "be", "very", "specific", "and", "should", "be", "handle", "in", "the", "Guard", "implementations", "that", "need", "such", "a", "feature", "NUMBER", "I", "will", "do", "this", "for", "guard", "cucumber", "soon", "NUMBER", "Regarding", "the", "automatic", "start", "of", "a", "Guard", "and", "triggering", "other", "Guards", "after", "completion", "I", "also", "think", "we", "need", "to", "find", "the", "optimal", "DSL", "before", "starting", "the", "implementation", "NUMBER", "But", "since", "yannlugrin", "already", "start", "a", "branch", "with", "run_all", "at_start", "true", "it", "may", "be", "a", "good", "idea", "to", "keep", "the", "syntax", "close", "to", "his", "implementation", "and", "use", "something", "like", "on_success", "run_all", "cucumber", "for", "the", "automatic", "Guard", "triggering", "NUMBER", "Thanks", "for", "the", "feedback", "NUMBER", "I", "think", "this", "be", "going", "to", "end", "up", "just", "a", "NUMBER", "comment", "NUMBER", "But", "I", "m", "happy", "everyone", "be", "thinking", "about", "this", "NUMBER", "Would", "love", "to", "plug", "on_success", "run_all", "cucumber", "run_all", "rspec", "into", "my", "Guardfile", "spork", "config", "and", "have", "it", "automatically", "tell", "me", "what", "the", "hell", "I", "was", "breaking", "when", "I", "last", "shut", "this", "project", "down", "For", "my", "own", "small", "contribution", "I", "m", "finding", "the", "more", "verbose", "syntax", "a", "lot", "clearer", "NUMBER", "Hi", "guys", "The", "group", "option", "has", "be", "implement", "the", "rerun", "option", "should", "be", "implement", "by", "the", "guards", "who", "need", "it", "for", "example", "guard", "rspec", "guard", "guard", "rspec", "f", "NUMBER", "cfb", "NUMBER", "fb", "NUMBER", "a", "NUMBER", "e", "NUMBER", "af", "NUMBER", "d", "NUMBER", "ef", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "so", "all", "be", "left", "to", "do", "for", "the", "moment", "be", "the", "success", "option", "NUMBER", "Could", "we", "discuss", "it", "and", "maybe", "finally", "find", "a", "proper", "DSL", "for", "it", "We", "should", "also", "define", "precisely", "all", "the", "possibility", "of", "this", "option", "NUMBER", "Examples", "ruby", "will", "run", "the", "Guard", "RSpec", "run_all", "and", "Guard", "Cucumber", "run_all", "methods", "NUMBER", "guard", "spork", "on_success", "run_all", "rspec", "cucumber", "will", "run", "the", "Guard", "Cucumber", "run_on_change", "method", "with", "the", "paths", "run", "by", "Guard", "RSpec", "NUMBER", "guard", "rspec", "on_success", "run_on_change", "cucumber", "NUMBER", "for", "the", "latest", "DSL", "proposal", "too", "NUMBER", "We", "can", "make", "it", "usually", "i", "dont", "like", "the", "rerun", "of", "all", "specs", "on", "success", "as", "it", "takes", "a", "long", "time", "and", "stops", "me", "from", "quickly", "add", "a", "new", "test", "and", "seeing", "it", "fail", "NUMBER", "But", "disabling", "it", "completely", "seems", "too", "drastic", "so", "how", "about", "ruby", "guard", "spork", "on_success", "run_all_when_", "NUMBER", "_minutes_idle", "rspec", "cucumber", "guard", "spork", "on_success", "run_all_when_", "NUMBER", "_seconds_idle", "rspec", "NUMBER", "_minutes_idle", "would", "be", "method", "miss", "so", "it", "adjusts", "the", "idle", "time", "based", "on", "the", "method", "name", "Hi", "Personally", "I", "would", "prefer", "something", "like", "this", "ruby", "guard", "spork", "on_success", "run_all", "rspec", "cucumber", "if", "idle_for", "NUMBER", "NUMBER", "It", "s", "maybe", "a", "bit", "too", "verbose", "but", "the", "point", "be", "that", "I", "don", "t", "really", "like", "putting", "argument", "inside", "a", "Hash", "key", "NUMBER", "Also", "note", "that", "we", "probably", "would", "t", "use", "method_missing", "here", "a", "simple", "run_all_when_", "NUMBER", "_seconds_idle", "run_all_when_", "d", "_seconds_idle", "NUMBER", "NUMBER", "to_i", "or", "similar", "would", "suffice", "NUMBER", "Oh", "now", "i", "see", "thanks", "for", "the", "tip", "agreed", "You", "re", "welcome", "NUMBER", "By", "the", "way", "I", "think", "your", "suggestion", "in", "itself", "to", "run", "all", "the", "specs", "only", "when", "Guard", "has", "be", "idle", "for", "a", "certain", "amount", "of", "time", "be", "interesting", "NUMBER", "But", "anyway", "we", "ll", "first", "have", "to", "implement", "the", "basis", "of", "this", "new", "on_success", "option", "before", "thinking", "about", "conditional", "executions", "etc", "NUMBER", "NUMBER", "Sent", "from", "my", "iPhone", "On", "NUMBER", "oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "Michael", "Kessler", "notifications", "github", "NUMBER", "com", "write", "Oh", "my", "dear", "GitHub", "issue", "I", "ve", "looked", "at", "you", "many", "times", "because", "you", "re", "still", "in", "open", "state", "NUMBER", "I", "ve", "also", "read", "your", "completely", "at", "least", "three", "times", "which", "takes", "ages", "NUMBER", "But", "nobody", "cares", "about", "you", "not", "you", "dear", "reader", "and", "recipient", "of", "the", "notification", "not", "the", "creator", "of", "the", "issue", "not", "anyone", "of", "the", "Guard", "maintainers", "just", "nobody", "NUMBER", "There", "s", "no", "discussion", "since", "NUMBER", "months", "and", "nobody", "want", "to", "spend", "some", "time", "for", "you", "NUMBER", "In", "short", "we", "don", "t", "need", "you", "NUMBER", "I", "m", "sorry", "about", "you", "but", "I", "m", "going", "to", "close", "you", "now", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "It", "looks", "like", "your", "fix", "to", "NUMBER", "introduce", "another", "bug", "NUMBER", "After", "a", "day", "or", "two", "of", "leaving", "guard", "run", "it", "exited", "with", "the", "following", "exception", "Users", "stouset", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "patterns", "NUMBER", "bin", "guard", "NUMBER", "stack", "level", "too", "deep", "SystemStackError", "That", "s", "weird", "NUMBER", "Can", "you", "give", "more", "backtrace", "bin", "guard", "NUMBER", "only", "isn", "t", "very", "helpfull", "NUMBER", "Thx", "It", "didn", "t", "give", "me", "one", "NUMBER", "Unfortunately", "it", "will", "probably", "take", "another", "few", "days", "before", "I", "can", "reproduce", "this", "NUMBER", "Ok", "I", "ll", "also", "try", "to", "reproduce", "this", "on", "my", "side", "NUMBER", "I", "test", "this", "case", "on", "linux", "too", "Still", "having", "this", "issue", "I", "haven", "t", "be", "able", "to", "reproduce", "it", "NUMBER", "I", "haven", "t", "notice", "it", "in", "a", "bit", "but", "I", "ve", "be", "away", "at", "RubyConf", "NUMBER", "I", "ll", "let", "you", "know", "if", "I", "see", "it", "in", "the", "next", "day", "or", "two", "NUMBER", "This", "exception", "pops", "up", "when", "I", "change", "a", "lot", "of", "file", "in", "a", "short", "period", "NUMBER", "For", "example", "when", "I", "populate", "sample", "data", "that", "be", "indexed", "with", "thinking", "sphinx", "NUMBER", "I", "can", "reproduce", "the", "problem", "with", "following", "shell", "command", "for", "i", "in", "NUMBER", "do", "touch", "tmp", "dummy", "i", "NUMBER", "txt", "rm", "tmp", "dummy", "i", "NUMBER", "txt", "do", "Ok", "we", "could", "avoid", "that", "by", "add", "an", "option", "to", "exclude", "some", "file", "extensions", "NUMBER", "Sounds", "good", "for", "you", "still", "needed", "with", "NUMBER", "Nope", "NUMBER", "Haven", "t", "seen", "the", "problem", "return", "in", "a", "long", "long", "while", "NUMBER", "I", "m", "get", "this", "error", "on", "a", "windows", "install", "everything", "s", "work", "fine", "on", "our", "mac", "machines", "but", "we", "get", "this", "on", "Windows", "c", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "bin", "guard", "NUMBER", "stack", "level", "too", "deep", "SystemStackError", "On", "a", "different", "app", "I", "get", "these", "error", "recursively", "can", "t", "see", "the", "top", "from", "c", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "ui", "NUMBER", "rb", "NUMBER", "in", "info", "from", "c", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "ui", "NUMBER", "rb", "NUMBER", "in", "rescue", "in", "color_enabled", "from", "c", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "ui", "NUMBER", "rb", "NUMBER", "in", "color_enabled", "from", "c", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "ui", "NUMBER", "rb", "NUMBER", "in", "color", "from", "c", "Ruby", "NUMBER", "lib", "ruby", "gems", "NUMBER", "gems", "guard", "NUMBER", "lib", "guard", "ui", "NUMBER", "rb", "NUMBER", "in", "reset_color", "Commenting", "line", "NUMBER", "in", "ui", "NUMBER", "rb", "seems", "to", "fix", "this", "for", "me", "on", "windows", "puts", "reset_color", "message", "if", "message", "Also", "I", "had", "to", "replace", "interactor", "with", "LINK", "do", "however", "please", "note", "that", "I", "don", "t", "know", "what", "I", "m", "doing", "I", "see", "this", "as", "a", "temp", "fix", "only", "NUMBER", "I", "just", "had", "the", "same", "problem", "but", "I", "was", "able", "to", "fix", "it", "by", "installing", "the", "win", "NUMBER", "console", "gem", "NUMBER", "I", "think", "that", "the", "problem", "be", "that", "if", "this", "gem", "be", "miss", "it", "it", "try", "to", "tell", "you", "that", "it", "s", "miss", "it", "NUMBER", "by", "use", "it", "NUMBER", "color_reset", "NUMBER", "I", "think", "the", "easiest", "fix", "may", "simply", "to", "update", "the", "docs", "on", "how", "to", "get", "guard", "up", "and", "run", "with", "windows", "NUMBER", "You", "may", "want", "to", "suggest", "including", "gem", "rb", "fchange", "gem", "win", "NUMBER", "console", "gem", "rb", "notifu", "into", "windows", "based", "Gemfiles", "NUMBER", "Thanks", "jeff", "We", "ll", "try", "that", "out", "NUMBER", "gem", "install", "win", "NUMBER", "console", "also", "worked", "for", "get", "me", "past", "the", "stack", "level", "too", "deep", "error", "when", "run", "guard"], "text_count": [0, 39453, 9951, 5241, 3679, 279, 4057, 25, 157, 4703, 5127, 10650, 5361, 4299, 4397, 1493, 0, 0, 0, 0, 12630, 3200, 1696, 1636, 2900, 1986, 0, 0, 0, 0, 23766, 14426, 9890, 598, 5152, 1424, 0, 0, 0, 0, 35840, 183, 19611, 16050, 10169, 0, 0, 0, 0, 0, 6972, 2846, 3682, 1804, 2778, 1356, 2740, 0, 0, 0, 25626, 2262, 20834, 1311, 0, 0, 0, 0, 0, 0, 15659, 1558, 11081, 5396, 2165, 0, 0, 0, 0, 0, 36336, 18889, 2536, 11013, 1419, 4324, 0, 0, 0, 0, 1708, 9029, 688, 0, 0, 0, 0, 0, 0, 0, 23846, 5570, 13423, 5959, 0, 0, 0, 0, 0, 0, 46430, 90554, 1454, 3590, 1146, 1523, 0, 0, 0, 0, 139625, 1026, 97912, 2085, 19834, 33911]}]