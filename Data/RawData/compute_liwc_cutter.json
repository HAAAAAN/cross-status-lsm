[{"repo": "cutter", "type": "elite", "title": "", "number of text": 685, "text": "  **Environment information**\r\n* Operating System: Any\r\n* Cutter version: 1.12.0 master ad66718f375b013a3021e531891c71082ee48867\r\n* Obtained from:\r\n  - [x] Built from source\r\n* File format: Any\r\n\r\n**Describe the bug**\r\n\r\nThe \"Parsing\" tab in the hexdump view should be read-only as it only parses the selected bytes into different formats. Currently, the text box is editable and this can be confusing as people might think it can be used to patch bytes.\r\n\r\n**To Reproduce**\r\n\r\nThe following gif demonstrates how to reproduce this issue.\r\n\r\n1. Open a binary in Cutter\r\n2. Open the Hexdump widget\r\n3. Make sure that the sidebar is opened and \"Parsing\" tab is selected\r\n4. Select few bytes in the Hex view\r\n5. Choose the text box in the sidebar and start modifying the content shown\r\n\r\n![Peek 2020-09-26 11-27](https://user-images.githubusercontent.com/20182642/94336345-2fa59680-ffeb-11ea-854f-1491a82dc602.gif)\r\n\r\n**Expected behavior**\r\n\r\nThe text box should be read-only\r\n\r\n  >  I just noticed that only the first value is affected\r\n\r\nGood point in your (2) paragraph. Maybe @karliss or @thestr4ng3r will know better\r\n\r\nFor point (3), it might require solving it in radare2 to add the immediate base. Need to ask in radare2 group and bug tracker. Maybe @karliss and @thestr4ng3r can help with it as well\r\n\r\n(cc @ret2libc for point (3) as well, you might know how to solve this issue that the immediate base isn't available)  Thanks for reporting this issue :)\r\nThe release works on my macos machine, we will investigate what went wrong when running on yours.\r\nThank you again!  Hey @lars18th , come join us on Telegram (https://t.me/r2cutter) or IRC :) We would love to assist in there  Thank you for reporting this issue :) \r\nThis issue is Related / Duplicate of https://github.com/radareorg/cutter/issues/2342  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nConvert annotation offsets to positions Qt text edit. Wrong positions are obvious when using decompiler based highlighting but it also affects context menu interactions.\r\n\r\n\r\n**Test plan (required)**\r\n\r\nBefore:\r\n![Screenshot from 2020-08-31 15-35-18](https://user-images.githubusercontent.com/7101031/91720332-9f1c9780-eb9f-11ea-8e75-c3724e3ff96c.png)\r\nAfter:\r\n![Screenshot from 2020-08-31 14-36-50](https://user-images.githubusercontent.com/7101031/91720190-5e248300-eb9f-11ea-8450-45ced09a38b9.png)\r\n\r\n\r\n**Closing issues**\r\n\r\nCloses #2358\r\n\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n > Does it work with Arabic and Japanese?\r\n\r\nFeel free to try your self. I can't input or evaluated if they handled correctly. Arabic and other RTL scripts might have problems of their own.  Font issues is one more topic.\r\n\r\nAs can be seen in screenshot with emojis those are symbols outside Basic Multilingual Plane >0xffff. Which map to multiple QChars. The last symbol with familiy is made of multiple ones connected using zero width joiner. That covers both ends of Unicode  so there shouldn't be too much issues with anything in the middle, as good as Qt supports it. Wanted to try some of the CJK symbols > 0xffff but I didn't have appropriate fonts setup on my system.\r\n\r\nForgot to mention that when I tried with retdec I couldn't properly test it because json to RAnnotated code conversion isn't merged yet so highlighting wasn't visible. There were also some json decoding isues when using symbols > 0xffff but those were from earlier steps before decompiler widget. \r\n Hebrew: first comment RTL, second is LTR\r\n![image](https://user-images.githubusercontent.com/20182642/91726599-36d2b380-eba9-11ea-9766-83e2c15203b7.png)\r\n\r\nIndeed, I agree that this is another issue out of scope  > I am trying to format/organize the decompiled code to make it easy for others to follow it but the code lines sticking to each other\r\n\r\nCould you provide an image of code lines sticking to each other? Just wanted to verify if it is the expected behavior. @oviche What you are observing is indeed the expected behavior. I'm not sure if it will be possible to improve the decompiler in the way you want anytime soon.\r\n\r\nSecondly, a lot of improvements have been done to the decompiler. The existing decompiler had been refactored to support context-sensitive annotations. As of now, Ghidra plugin supports all the new actions. You can read about all the improvements here: https://cutter.re/improving-decompiler-widget-gsoc\r\n\r\nIn order to use them, you will have to compile the latest master of Cutter and r2ghidra-dec.  See here for Cutter: https://cutter.re/docs/building.html#building-steps\r\nSee here for r2ghidra-dec: https://github.com/radareorg/r2ghidra-dec#building\r\n\r\nI don't know why you want to do this, but if it helps, you can copy-paste the entire code from the new decompiler to an editor to make it more readable. This can be more useful for your second point. But if you want it to get updated when you make changes, this probably is not the solution you want. I understand very good the need you have, I experienced the same frustration and wish to have such features as well.\r\nAs Nirmal said, implementing some of these features wouldn't be easy at all an will require some work > * Firstly, building them from sources will achieve different results than downloading the compiled cutter version from the official site which already contains the r2ghidra plugin by default?\r\n\r\n@oviche Improvements between each release will be merged to master. All of the significant improvements for the decompiler was done on a separate branch named `decompiler-refactoring` in Cutter, r2ghidra-dec, and radare2. This was recently merged with the master branch.  But in order for this to become available in the form of a release, you will have to wait till the next release. This is basically how most projects work.\r\n\r\nThanks for creating the issue:-) @oviche you won't experience meaningful difference in the decompiled code. The major experience you'll feel is working with the now context-sensitive context menu.\r\n\r\n There were some inconsistencies with the copy selected text action in the previous context menu. That's mainly why I mentioned it, so that code can be copied properly.  Nice!! this one indeed bothered me for awhile \ud83d\ude05 I see I wasn't the only one   <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nThis PR implements annotations for the r2dec decompiler. Earlier, we were parsing to RAnnotatedCode from the `pddj` output. Now, a command `pddA` has been implemented by @wargio recently for outputting annotations. The JSON output from `pddA` should ideally give all the information we need to make annotations as we have in r2ghidra-dec. This PR makes JSON parser for `pddA` output to `RAnnotatedCode`.\r\n\r\n~~**Note**\r\nThis branch is created from the branch in PR #2402. Hence to see the changes made for just this PR, select commits from the commit with the message \"output and looping for annotation.\".~~\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n1. Fetch latest r2dec [ `r2pm -ci r2dec` ].\r\n2. Compile this PR and open cutter.\r\n3. You should be able to see the features available to r2dec with context-annotations.\r\n4. Test all the actions (see note below)\r\n\r\n**Note**\r\nThe `pddA` output ~~as noted before,~~ is still not perfect. There were some confusions, and because of that, the address of the references are not correct. Also, r2dec crashes while running `pddA` in some functions. Hopefully, this will get patched soon.\r\n1. So for the function related actions, and targeted show-in, the only reference that will work now is the one for the declaration/definition of the functions. Test this.\r\n2.  As of now, only function variable(arguments and local variables) declarations have annotations, so variable related actions (Rename and Edit) will work only for them.\r\n3. Global variables and constant variables cannot be tested before it gets patched.\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n @NirmalManoj  Please rebase this PR to latest master? Will do that in half an hour @karliss Rebased this. @NirmalManoj What is the status of this PR ?:)  Good work Oriol!  For the tooltip you might try setting it  on the action which has plugin menu as submenu instead of menu itself. Not sure if it will work, but it's worth trying. Yes `setToolTipsVisible` enables tooltips for actions inside menu so you need to set it for `ui->menuWindows` instead of `ui->menuPlugins` since you are hovering mouse over item inside `menuWindows`. Other aspect is that you need to set the tooltip for action which has menuPlugin assigned as submenu not the menu itself. All the items in a menu are actions including ones that have submenu.\r\n\r\nOne more detail is that having windows/plugin menu empty is not the same as having no plugins. One plugin can have multiple dockable windows and the opposite, there can be plugins that don't haven any because they use different kind of UI.  @ITAYC0HEN did you considered this? Of course, as can be seen in my issue title and description (notice the parenthesis):\n\n![Screenshot_20200820-235610.jpg](https://user-images.githubusercontent.com/20182642/90824932-d9d13500-e340-11ea-93ed-73e7fff09cc5.jpg)\n\n\nI noticed that the PR is. only checking if the menu is empty, as it should :)  > Of course, as can be seen in my issue title and description\r\n\r\nI was focusing on the \"Describe the solution you'd like\" which somewhat contradicts the tittle. In the solution part you wrote \"tooltip that says No plugins are installed ...\". Having message that no plugins installed when there are plugins, but no plugins with windows would be misleading. That's why I wanted to clarify it.\r\n\r\n> I noticed that the PR is. only checking if the menu is empty, as it should :)\r\n\r\nNo it is checking if the plugin list is empty not if the menu is empty.\r\n\r\n Sorry, completely my mistakes - twice.\r\n\r\n\r\n1. Yeah, the tooltip should say that no plugin added items to this menu. We can consider also having two variations. If no plugins are installed, write this. And if they do but none were added actions to this menu then mention this.\r\n\r\n2. Need to check if the menu is empty and not the list of installed plugins. Truth is, that if the suggestion above will be accepted, then both things will be checked as there will be two variations of the shown tooltip.\r\n\r\n\r\nwhat do you think of having two variations? Alright @sagcan, then we'll go for the two variations :) \r\nWhat do you think? It will require adding another check and decide which tooltip to show I'd say that it's better not to fight with it too much. From a quick google it doesn't look trivial. Commit the changes without it and we can discuss how to move forward with the tooltip. \"worst\" case scenario we will give up the idea of using tooltip there.\r\n\r\nIf @karliss can fetch and try, maybe he'll find a way Yes it is possible and I confirmed it works the way I described before writing my comment above. Good work @sagcan! \r\nThank you! Let us know of any other things you would like to work on and try \ud83d\ude0a  Will be moved to separate repository.\r\n\r\n<!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nRemove the non code docs and add github action for building and uploading doxygen docs to radareorg/cutter.re\r\n\r\nI have made a repository containing only docs here https://github.com/karliss/cutter-docs . It has the history and tags preserved, and also the changes to build and upload docs to radareorg/cutter.re .\r\n\r\nRemaining work:\r\n* Discuss code documentation placement in cutter.re\r\n* Recreate the cutter-docs repo to include latest documentation changes from cutter master, once rest of the tasks are resolved\r\n* Update the upload paths, currently uploading to test repo to debug the scripts\r\n* Configure the secrets and deploy key for deploy scripts to work (only owners can do this)\r\n\r\n**Test plan (required)**\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\nCloses #2056 \r\n I would like to hear the opinion about folder structure where to place doxygen output. I think it should be done keeping in mind that in future we might want to have multiple copies of it one for latest master and one for tag . Maybe seperate one which includes all the private stuff for Cutter developers and contributors as an alternative approach for exploring the code base. \r\n\r\nBoth due to versioning considerations and simplfying the upload process it would be easier to have it outside the folder uploaded by cutter-docs -> cutter.re/docs folder.  To minimize the existing link breakage I don't think the regular docs should be moved. \r\n\r\nI suggest something like:\r\n* cutter.re/docs -> content doesn't change\r\n* cutter.re/doc/api/latest -> doxygen output, we can later decide what latest means\r\n\r\nThis allows in future adding if necesarry\r\n* cutter.re/doc/[something?]/(version|latest|stable) - versioned main documentation\r\n* cutter.re/doc/api/version - versioned api doc\r\n* cutter.re/doc/(doxygen|code-all)/(latest) - doxygen output from all the code including internal parts\r\n\r\n\r\nAlternative approach might be to upload it to separate folders as suggested above but do some jekyll config magic to ensure that it appears bellow `cutter.re/docs/something` when visiting the side. I don't think that's worth it. \r\n Having both `/docs` and `/doc` is a big no-no. Every UX person will tell you that.\r\nWill attend this issue later on the coming week wit more thoughts.\r\nBut overall, I agree with using versioning and I am fine with splitting things to different tress, although I'd love keeping to only `/docs` and then add folder on top of it.\r\n\r\nAlternatively, we can have `docs.cutter.re` If you are the completely against having docs+doc. Then how about the approach of moving some things to the top level that is cutter.re/api/latest`?\r\n\r\nIf you consider URL an interface then an important property of it that links should remain valid as much as possible.\r\n\r\nWhat problem do you want to solve using subdomain? \r\na) havbe both dos.cutter.re and cutter.re/docs -> same problem as with docs+doc\r\nb) create docs.cutter.re and remove cutter.re/docs -> older links to documentation are broken. If you are fine breaking links we might as well reorganize the structure  bellow cutter.re/docs to support versions and easier uploading. > If you are fine breaking links we might as well reorganize the structure bellow cutter.re/docs to support versions and easier uploading.\r\n\r\nI am fine with breaking docs structure at this point :) Just need to google-search and Github-search properly before\r\n\r\nI am not at all against `https://cutter.re/api/latest`  >  If it is essential, I will add this.\r\n\r\nYes describing how to deal with trickier parts of setup like shiboken python bindings is important. Those are the parts that need documentation the most. Thank you @kohnakagawa! :) Let us know if need any more testing, I'd love to help  If you are doing this you might as well include file with recommended extensions https://code.visualstudio.com/docs/editor/extension-gallery#_workspace-recommended-extensions Looks good :)  as discussed on DM, please re-format and I'll check then :)  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently there is no way to define type for global variables in decompiler widget.\r\n\r\n**Describe the solution you'd like**\r\n\r\nWhen right clicking a global variable or an address used as global variable have an action for defining type. It should use the same shortcut as changing type for local variables and function arguments.\r\n\r\n**Describe alternatives you've considered**\r\n**Additional context**\r\n\r\nConcept for global variable type in r2 currently isn't very clear. There are multiple different mechanism that support part of the functionality. There is `tl`. At least in Cutter it is currently used only for structures but not primitive types or pointers to structures or arrays. There is also `Cd size count` but it only sets type without distinguishing between uint64_t int64_t and double.  There is also concept of flag size.\r\n\r\nImproving it in r2 isn't strictly necesarry but it would be cleaner if r2 had single system for this.\r\n\r\nRegardless of it being improved in r2 the type information synchronization between r2 and ghidra needs to be improved. r2ghidra `R2Scope::registerFlag` currently only handles char* for things define as strings in r2 and comment `// TODO: more types`.   Please don't create multiple create multiple Pull requests for the same issue as you were told once already in #2343 . Just noticed that you now created a branch this time. That slightly complicates things.  This is a known issue. See issue #2119 \r\nAs a temporary solution, you can disable real name(`asm.flags.real`) from the settings shown in the image below.\r\n![Screenshot from 2020-08-09 13-16-57](https://user-images.githubusercontent.com/18501167/89727441-b229c500-da42-11ea-96ae-b2da17d8b63c.png)\r\n  You might have to update this part to fix the broken Linux build\r\n```\r\nR2_INCLUDEPATH = \"$$system(\"pkg-config --variable=includedir r_core\")/libr\"\r\n```\r\n\r\nAs I commented in Telegram Windows Appveyor build failed when building r2ghidra which has it's own r2 lookup code.  hey! you accidently pushed unrelated changes.\r\nYou don't need to create a new branch. \r\n\r\nTo update a pr, all you need to do is to add commits to the same local branch and push them to github, it will automatically update the pr. \r\n\r\nWe can go over the required steps together if you'd like to. Send me a msg on Telegram :)  Closed in favor of #2381 and the contributor was taught how to handle such operations in the future and how to better work with git  @Surendrajat feel free to try this but be aware that most likely it will be a lot more complicated than just enabling just enabling the option. I recommend to setup pair of VMs so that you can locally go through the steps Travis does when preparing a package. One with Ubuntu  16.04 and preferably a second using completely different distro so that you can verify that resulting appimage works.  That's very nice! Thank you :)\r\nI recommend you to config your username and email of git in your machine to be the same as on github. It will make the commit username similar to yours   I have no major objections against extra indicators, but at least partially that seems like a problem of bad color theme.\r\n\r\nHere is how it looks using \"cutter\" color theme. The difference in color is much clearer.\r\n![Screenshot from 2020-08-04 13-59-16](https://user-images.githubusercontent.com/7101031/89286361-be84db00-d65a-11ea-8c7f-99f1dcc96610.png)\r\n![Screenshot from 2020-08-04 13-59-24](https://user-images.githubusercontent.com/7101031/89286365-bf1d7180-d65a-11ea-8760-2fc2ef00d60d.png)\r\nHere with selection and PC overlapping\r\n![Screenshot from 2020-08-04 14-04-37](https://user-images.githubusercontent.com/7101031/89286782-7914dd80-d65b-11ea-9c70-35a7a47a6053.png)\r\n  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nThis PR implements edit variable action and rename variable action for function variables(function parameters and local variables).\r\n\r\nSee GIFs below.\r\n**1. Both actions working for variables that are defined in radare2.**\r\n![Showing Actions in Working](https://user-images.githubusercontent.com/18501167/89101060-43cd7d00-d41a-11ea-8934-25a152e4bcd1.gif)\r\n**2. Disabled actions and tooltips for them.** Actions are disabled when the variable represented by the annotation is not present in radare2. \r\n![Disabled actions with tooltip](https://user-images.githubusercontent.com/18501167/89101077-7d9e8380-d41a-11ea-993f-c3853ba12bbc.gif)\r\n**3. When the rename variable action is triggered by shortcut for a variable that doesn't exist in radare2.**\r\n![Impossible rename triggered](https://user-images.githubusercontent.com/18501167/89101085-9ad35200-d41a-11ea-984c-f968e68d6dad.gif)\r\n**4. When the edit variable action is triggered by shortcut for a variable that doesn't exist in radare2.**\r\n![Impossible edit triggered](https://user-images.githubusercontent.com/18501167/89101090-aaeb3180-d41a-11ea-8e1a-21cc21914b6a.gif)\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n1. Fetch PR radareorg/r2ghidra-dec#128 ~~and checkout commit radareorg/r2ghidra-dec@ac829cb361059e1fb7ab524c99e596abc78bf36c~~. Compile it.\r\n2. Load functions in Cutter and find variables and arguments that are present in the disassembly. See GIF 1.\r\n    1. Check if rename action and edit variable action are working properly in both ways. That is, using the context menu and by using the shortcut.\r\n3. Find variables and arguments in the binary loaded that are not present in the disassembly.\r\n    1. Right-click and in the context menu, make sure these actions are disabled and the tooltips are shown when you hover over the action. Refer to GIF 2.\r\n    2. Click on these variables and try to use action for renaming variable and editing variables using shortcuts. Both should show a dialog. Refer to GIF 3 and 4.\r\n4. Try using the rename action for references and make sure this PR didn't cause any regressions.\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n > Is a popup saying `can't do it` really any better than doing nothing? How about showing this info on the status bar instead? I find it a bit annoying to move the mouse to close it every time I press N by mistake.\r\n\r\nThe idea is to show this warning so that the user will know that it is the expected behavior. Otherwise, I think it might look like a broken feature. How often do people press N by mistake while the cursor is over a variable? Also, in order to close the warning dialog, you can press `Enter` instead of moving the mouse. \r\n\r\nAbout the status bar, I think this is a bit too verbose to be shown in the status bar. As of now, you can see this dialog only if you press `N` or `Y` on keyboard, and it can be closed by `Enter`. These actions are disabled in the context menu and a tooltip is shown instead when the variable doesn't exist in radare2.\r\n\r\n  **Is your feature request related to a problem? Please describe.**\r\n\r\nIt is not obvious that Advanced/Custom analysis mode is on the right side of slider.\r\n\r\n**Describe the solution you'd like**\r\n\r\n![anlysis](https://user-images.githubusercontent.com/7101031/89031336-fa5a3080-d33a-11ea-957f-d7caae29ee11.png)\r\nI don't think the builtin Qt slider has support for attaching labels directly, but the amount of them is small so spacing them out evenly should be good enough.\r\n\r\nIn my opinion \"Custom\" is better name than \"Advanced\" for the last option.\r\n\r\nIf there are very strong objections against aaa and aaaa, labels can also be 0 1 2 custom.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nI understand that there are various ideas for much bigger changes to analysis UI, but this is something that is very easy to do right now until we figure out a better solution.\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n Why not both? Can be called None, Automatic, Experimental, Custom Because it doesn't give any information to the user. As a user I'd choose Automatic or Experimental arbitrarily without having an idea what am I doing and what will I gain or risk with the \"Experimental\". I want to guarantee the best experience to the users and not having a guessing-game.   Why not to install gcc-5 which should be available in Wheezy? https://wiki.debian.org/GCC5 Please don't waste your an everyone else time trying to make Cutter work with GCC 4.7.  Being limited to broken 8 year old compiler increase the burden of development process making Cutter worse for 90% of people.\r\n\r\nIt would be much more useful if you spent your energy improving or at least investigating the remote debugging problems in radare2. Thank you @lars18th :)\r\nAs you understand, the Cutter project aims to focus on modern technologies and as such we don't intend to support old technologies. \r\n\r\nI am sure that if you took the time to open these issues it means that you want to help improve Cutter and these requests are important requests to you personally. Thus, it is not at all a waste of time.\r\n\r\nSadly, we would not be able to provide the help in the way you wish, as we would not support these technologies. That said, we will try our best to improve the remote debugging so you can have a great remote debugging experience when time comes. Until then, keep let us know of issues you encounter on other aspects of Cutter which are not related to support old technologies.\r\n\r\nThank you again, and for your kind words <3  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently xrefs dialog has two sections on the left side xrefs to and xrefs from given address. In some situations it is known that xrefs from section will be empty or not contain any useful information. \r\n\r\nSome examples of such situations are when opening xrefs from function list widget or string list. Strings are unlikely to have xrefs from unless they are instructions misinterpreted as strings. If they are user can still open the address of \"string\" in disassembly view and open xrefs dialog from there. Doing so will also give user information how the \"string\" looks when interpreted as instruction.\r\n\r\nSituation is slightly different when viewing xrefs for function. For function xref dialog will show xrefs from the first instruction in the function (usually function header not referencing any memory adress unles appropriate optimizations are used). Viewing xrefs form first instruction can be  useful if user is actually inspecting the first instruction of function in disassembly view. But it is probably less useful when user clicks a function in function list.\r\n\r\nIn the following image, you can see an example to the X-Ref dialog as it was opened from the Strings widget:\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/89121112-b2ffab80-d4c4-11ea-959d-52039597aa48.png)\r\n\r\nAs strings are not supposed to reference to another addresses or objects, the \"X-Refs from\" section is redundant.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nAdd an option which can be passed when creating xrefs dialog. If it is set to true \"xrefs from\" section in the dialog should be hidden and \"xrefs from\" expanded to use full window height.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nMake a choice of hiding from or to section when it's empty. I don't think this is a good idea. Empty list also serves as confirmation that r2 didn't find any xrefs. In situation where both xrefs types are expected but they are missing due to bad analysis done by r2 hiding one of xref sections might be confusing.\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n Nice idea! I think that I'd be happier to see a list of **all** references **from** a function (`afx`) when opening the x-ref dialog from the Functions widget (_and from the function name at function declaration in disas/graph , although it is now mixed with the first instruction. This can be done later on._)  Showing `afx` in case of function widget wouldn't be bad that can be second part. But as first issue i would recommend to start with just hiding. Hi Radwan.\r\nNo, only one option:\r\n\r\nShow All Xrefs (shortcut X) with optional `bool showXrefFrom` argument which defaults to true.\r\n\r\nWhen this dialog will be executed from the following widgets, the `showXrefFrom` argument will be passed as `false` and you will hide the \"Xrefs from\" view in the dialog:\r\n\r\n- Strings widget\r\n- Functions widget\r\n\r\nYou don't hide the view when 0 results are found for X-Refs in any other place. It is important to see that no x-refs were found.  @karliss Do you have any more suggestions for this PR? Looks good.\r\nWhat about source code references? I think we discussed it sometimes, that x-refs in the decompiler can show references from the decompiler, similar to what you have with IDEs. This is naturally more useful than showing assembly x-refs.\r\n\r\nThis can also be seen in IDA.\r\n\r\nHere is an image describing the x-refs for a local variable:\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/89126012-04bb2c80-d4eb-11ea-9f37-24af8a65225a.png)\r\n\r\nHere is a **global** reference to a struct member, all across the binary:\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/89126033-346a3480-d4eb-11ea-93dd-13b51dc01833.png)\r\n\r\nHere is a **local** x-refs for a struct member, in a function:\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/89126040-4b108b80-d4eb-11ea-9651-a3e46cb1d85d.png)\r\n\r\n\r\n\r\n > Here is a **global** reference to a struct member, all across the binary:\r\n\r\nHow would you imagine it's implementation? @ITAYC0HEN \r\n\r\n> Here is an image describing the x-refs for a local variable:\r\n\r\nAbout function variables, I have said that I will implement it if time permits, after the rest of my work is done. I will create an issue with the screenshots you shared and briefly explaining what I think can be done about this. > x-refs for a local variable\r\n\r\nI have opened an issue explaining how I think this can be implemented. #2361 \r\n\r\n\r\n Thanks :) @karliss Are you waiting for something on this PR?  Does this PR is using functionalities from the decompiler-refactoring? if not, maybe this can be pushed to maste as it is a bug-fix\\improvement which is small and can be enjoyed by our users. What do you think? @ITAYC0HEN Yes, we have improved \"DecompilerWidget\" and this uses some improvements and features in decompiler-refactoring (e.g. `setInfoForBreakpoints()`).  It shouldn't take more than 10-12 days to get `decompiler-refactoring` ready to get merged to master. Thanks! <3  @ITAYC0HEN r2ghidra and r2dec on windows aren't compiled as plugins. They are compiled as static libraries and linked as part of Cutter executable instead of external plugins and they are directly registered as decompilers without going through plugin interface.\r\n\r\nIn case of Linux Appimage r2ghidra is loaded as plugin but r2dec isn't that's why on Linux you can see r2ghidra in the plugin list but not r2dec.  That's enough, thanks! :)  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently Cutter doesn't use annotations for [what's this mode](https://doc.qt.io/archives/qt-4.8/qwhatsthis.html) so there is no point having help button in tittlebar.\r\n![question](https://user-images.githubusercontent.com/7101031/88784363-a0216a00-d198-11ea-8b33-dc4ac5c91543.PNG)\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\n* It should be possible to deal with most cases using Qt::AA_DisableWindowContextHelpButton attribute.\r\n* If solution above doesn't apply to everything set the corresponding dialog attribute\r\n* Remove manual clearing of WindowContextHelpButtonHint flag in cases it became unnecessary due to AA_DisableWindowContextHelpButton . \r\n\r\n\r\n**Describe alternatives you've considered**\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n Hi @shane424 :) \r\nIt was not resolve. Please feel free to work on it and ask any question that might raise during the way. We would love to assist wherever needed :)  Hey Rachel,\r\nLet us know if you need any more guidance or anything else.\r\nThe PR is very close to be finished :)\r\nWe're here for any question you have and would love to help you with your contribution Of course! It goes without saying that no contribution is more important than taking care of your mental health, so take how much time you need. The PR can wait :) \r\n\r\n Thanks! The PR is looking better already :) Will address your other comments in another time, but here's a quick explanation about the shortcut question.\r\n\r\n<kbd>S</kbd> is already bound to the Seek operation (as well as <kbd>G</kbd>). This is a global shortcut and I believe it is the reason you couldn't bind the String operation to this key. \"Seek\" is the common term in radare2 for navigation, and the radare2 command to seek is `s`:\r\n\r\n```\r\n$ r2 -\r\n\r\n[0x00000000]> s 0x100\r\n[0x00000100]> \r\n```\r\n\r\n\r\nI believe that us\u05dfng <kbd>A</kbd> came from IDA, and it makes the transfer form IDA to Cutter easier.\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/90954645-a4cafc80-e47e-11ea-8f6a-4cf4170ae665.png)\r\n haha yeah, it's easy to miss it, but when clicking <kbd>S</kbd> the cursor is moved to focus on the quick navigation textbox at the top of Cutter's interface. Then, one can type address or a flag to easily navigate to the desire location Sent PR to make it a little bit clearer as now it will have visible indication that Omnibar gets the focus :)\r\nhttps://github.com/radareorg/cutter/pull/2403 > My closing thought is that Cutter is built in C++11 mode, but the pointer in EditStringDialog for the UI is a raw pointer: how would you feel about having this converted to std::unique_ptr<> so the destructor and manual memory management went away?\r\n\r\nNo objections against that. Plenty of other ui classes already do that. Just keep in mind that Cutter isn't just C++11 code it also uses Qt so in some cases things that look like raw pointers aren't really a raw points because memory management is handled by Qt (not this case). Note that it is possible to move backwards using shift-tab. Moving address is also fine. Created separate issue for dealing with initial values. #2404   No, so far the the text you are writing doesn't make sense I  can't understand what you want.\r\n\r\n> Option to compile with custom Qt5 library\r\n\r\nYou can already configure build system to use Qt of your choice assuming it compatible with Cutter. If you lack the experience working with build systems Kitware provides training courses where you can improve your skills.\r\n\r\n>  5.5, 5.6 and 5.7 seems to be incompatible with Cutter when compiling with them.\r\n\r\nAll Cutter commits tested using Qt 5.5. IIf Cutter compiles using Qt 5.14 and 5.5 it is unlikely that the versions between (5.6, 5.7) will not work but if you find problems with them you are welcome to send pull requests fixing that.\r\n\r\n> Provide the option to enable the full compilation of the Qt5 with only the required modules/libraries.\r\n\r\n\"full compilation of Qt5\" and  \"only the required modules\" seems contradicting. Either way compilation of Qt is handled by build scripts that are part of Qt. I don't see how it is related to Cutter. If you don't understand how Qt compilation process works you can discuss that with Qt developers.\r\n\r\n>  Then link (optionally) Cutter with it for a new version without the Qt5 dependecy.\r\n\r\nThis sentence doesn't make sense. Cutter is GUI for radare2 made using Qt. 90% of Cutter code interacts with Qt.  Cutter without dependency on Qt5 would be just radare2.\r\n\r\n\r\n\r\n\r\n First one isn't even a qt error that's a C++ error. Providing a script for compiling Qt wouldn't help you with that.\r\n\r\nGCC 4.7 doesn't have proper c++11 support. Trying to compile Cutter using it or maintaining patches to do so is waste of time.\r\n\r\nIf you are not happy with Qt build using build scripts provided by Qt developers that's up to you.\r\n\r\n If you really need Cutter on that system - you can compile it statically\nwithin Alpine Linux container and just copy the binaries. I don't know\nthough if Qt or Cutter support completely static builds though.\n\nOn Mon, Jul 27, 2020, 23:55 karliss <notifications@github.com> wrote:\n\n> Closed #2339 <https://github.com/radareorg/cutter/issues/2339>.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/issues/2339#event-3590527354>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABRT7OB7YZYG775IQ55QVTR5WPN5ANCNFSM4PIXEY3Q>\n> .\n>\n But I recommend to try to do whatever you want with plain radare2 since you\nsucceeded with building it.\n\nOn Tue, Jul 28, 2020, 00:02 XVilka Haos of System <xvilka@gmail.com> wrote:\n\n> If you really need Cutter on that system - you can compile it statically\n> within Alpine Linux container and just copy the binaries. I don't know\n> though if Qt or Cutter support completely static builds though.\n>\n> On Mon, Jul 27, 2020, 23:55 karliss <notifications@github.com> wrote:\n>\n>> Closed #2339 <https://github.com/radareorg/cutter/issues/2339>.\n>>\n>> \u2014\n>> You are receiving this because you are subscribed to this thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/radareorg/cutter/issues/2339#event-3590527354>, or\n>> unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/AABRT7OB7YZYG775IQ55QVTR5WPN5ANCNFSM4PIXEY3Q>\n>> .\n>>\n>\n  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nUse the default paths expected by r2dec build scripts. Use meson directly instead of meson.py which planned to be removed.\r\n\r\n**Test plan (required)**\r\n\r\n* Tests are green\r\n* Inspect Appveyor log and make sure r2dec and r2ghidra were compiled successfully (they are post build steps so doesn't cause build failure)\r\n* Download the build from Appveyor and make sure r2dec and r2ghidra work.\r\n\r\n\r\n**Closing issues**\r\ncloses #2329  Tested the archive uploaded to appveyor on Windows. Reviewer should also test it. I already reported the r2dec crash and it was supposedly fixed. Once all the CI fixes are done I will rebase this branch it will make a new build which should contain r2dec fix. Just tried the latest build. R2dec crashing problem seems to be fixed.  Analysis taking long time and UI freezing are two different things. Changing analysis slider will likely have no effect on the second. And I would large part of issue being about Cutter freezing. Having a note about dealing with large binaries would be good, but current message is wrong. I will try to write down the required adjustments tomorrow. Here is my suggested version for text:\r\n\r\n```\r\nInitial Analysis takes a long time or Cutter UI freezes\r\n-------------------------------------------------------\r\n\r\nCutter and radare2 currently doesn't work very well with large and very large binaries.\r\nExact limits depend on the content of binary, but roughly few MB can be considered large\r\nand may take a few minutes to analyze. More than 100MB is  very large,\r\nanalysis with default settings will likely take a very long time and UI might occasionally\r\nfreeze UI during usage.\r\nIf the analysis takes longer than 5-15 minutes it is recommended to retry it with different\r\nanalysis options. See radare2 documentation about `analysis<https://radare.gitbooks.io/radare2book/content/analysis/intro.html>`_\r\nto learn more about commands and options that can be used to more selectively analyze only\r\nthe relevant parts of code.\r\n``` I think this can be done without waiting for the Loading Options page to be added :)\r\ncan simply be updated later on It's for from being the state of Cutter in 2020. Maybe the one at R2con 2019 but id didn't have a debugger then.\r\nAnyways, we will always stick behind the videos, that's reality - but this one is too old and we should have a Cutter Basics video series.   Please don't merge until the discussion about where to store this is resolved. In some of the cases I don't think moving gif adds any value for document widgets. It only makes it more difficult to inspect it or read the text as things keep moving and you can't even stop it.\r\n\r\nAn overview video would be nice. It also wouldn't be affected by the size discussion problem since it would probably be stored on a video hosting service like Youtube. What, next week arrived so fast? :O Updated the dashboard image and other minor fixes. The graph hex and disas can stay gifs.\r\n\r\nThe UI on my PC for the tree widgets (search, strings, ...) isn't look good as the table look inactive. Please take the screenshots from your machine as it looks better :+1: \r\n\r\n![image](https://user-images.githubusercontent.com/20182642/89714145-59581f00-d9a5-11ea-92c2-da217e9a37ac.png)\r\n I don't consider them a widgets, but dialogs. You can keep it as \"Widgets\".\r\n\r\nWe have dozens of Widgets and views, having them together in one place (like now) is only an initial phase of the docs. At the end they should all have their own detailed page Hey! :) \r\nSo the status is that we're waiting for @karliss to move the docs? or for you to write verbose descriptions? @Surendrajat  \r\n>  The docs moving process will take a while, I assume.\r\n\r\nIt's not looking so bad. I would like to get some feedback on #2399   This is only my opinion and I'd like to hear the input from others as well, don't take it as absolute truth.\r\n\r\nI don't think most of those should be in preferences. R2 options can be roughly split into 3 categories:\r\n* Global settings, things related user's preferred way of displaying things and some behavior\r\n* Project settings things releated to specific session, like current architecture and other executable properties\r\n* Configuration for specific action, options that change how action you are about to make will behave. For each run of the action you might want different values. And many of them could have been an arguments to said action but due to text based nature of r2 interface it would have been cumbersome to specify all of them each time.\r\n\r\nIn my opinion most analysis options except few like verbosity don't belong to settings. \r\n\r\nOne of the approaches that was discussed  using approach more similar to how ghidra interface does it. Have  analysis dialog where you can configure what kind of analaysis to perform. It would be showed in two cases: during initial opening and after the executable has been opened by activating analysis action from menu. At the moment we have a set of similar settings when selecting \"Advanced\" analysis level in the initial options. Having the split of some randomly selected set of analysis options in initial dialog and  similar but slightly different set (without a good reason) in settings doesn't seem like good idea to me.\r\n I discussed this a bit with @ITAYC0HEN and he pointed out a case I didn't think of. Even if we had standalone analysis dialog, there would be use for having some of the analysis options available in settings page. Turns out some of the actions like defining a function which doesn't seem like analysis from UI and workflow perspective is affected by some of the `anal.*` settings. Defining a function also does some control flow analysis which is necesarry for identifying boundaries of the function also it analyzes the local variables.\r\n\r\nI don't think there needs to be analyze button in settings. In future there might be one somewhere in main menu. I assume you added because it wasn't clear what's the use case for analysis settings are and how to trigger it.\r\n\r\nI hope you aren't discouraged by this and will continue helping Cutter. Sometimes seemingly easy tasks turn out more complicated due to need to decide how the program should behave and what actually needs to be changed. I really like this PR, and especially the detailed description that shows that you paid attention to many important things. Very happy that you raised them as I didn't think of these before.\r\n\r\nAfter discussion and clarifications with Karliss - we recommend the following steps:\r\n\r\n1. Having the \"Analyze program\" button with a tooltip \"Analyze the program using radare2's \"aaa\" command.\"\r\n2. Add a menu item  `File -> Analyze program` to do the same. It will have the same tooltip.\r\n3. Remove this log line (loading file) when executing the analysis from these places (keep it when running from Initial Analysis dialog)\r\n![image](https://user-images.githubusercontent.com/20182642/89299680-af5c5800-d66f-11ea-8c41-b35e8dcbbf6f.png)\r\n\r\nThis can be a conditional print for the check that added to the right place, maybe to this `if` which is already existing. Test and let us know.\r\n```\r\nif (!openedFiles.size() && options.filename.length()) {\r\n```\r\n\r\n4. Change the title when using the dialog as \"Initial Analysis\" isn't right for these cases. You can either change it only for these buttons (menu item, and preferences dialog) or finding something generic for all cases such as \"Analyzing program\".\r\n\r\n5. Documentation will be good. It can be very limited currently but can have a dedicated page for Preferences -> Analysis under the user docs\r\n  Another potential reference for UI guidelines is to take a look at macOS, Windows, Gnome, KDE. Each of them should have their user interface guidelines. Here are a few more \r\n* Apple https://developer.apple.com/design/human-interface-guidelines/macos/menus/menu-anatomy/ and  https://help.apple.com/applestyleguide/#/apsg1eef9171\r\n* KDE https://hig.kde.org/style/writing/capitalization.html\r\n* Gnome https://developer.gnome.org/hig/stable/writing-style.html.en and https://developer.gnome.org/hig/stable/  Maybe the documentation could have one more sentence explaining that r2 script is file containing r2 commands or a link to r2 doc showing commands.   Does it have to be PE and does it have to be Project?  Looks like you might be mixing multiple R2 versions. You compiled Cutter with CUTTER_USE_BUNDLED_RADARE2=ON. But r2ghidra during compilation most likely used system r2.\r\n\r\nI don't recommend using CUTTER_USE_BUNDLED_RADARE2=ON for system installation. This option is more aimed at development builds.\r\n\r\n Please do the following steps and confirm if it still crashes:\r\n* clean up all the old installations\r\n* Build and install r2 using r2 source that matches with submodule\r\n* Build cutter with `CUTTER_USE_BUNDLED_RADARE2=OFF`\r\n* Build r2ghidra I still haven't seen you answer of what happens when you run cutter with \"--no-plugins\" flag.\r\n\r\nDoes it actually crashes or does the UI freezes and you kill it either directly or with a popups that shown shows? \r\n\r\nWhat happens if you try running decompiler in the console widget using `pdg` command?\r\n\r\nThe output you posted earlier from gdb doesn't look like crash more like something calling exit. You can try setting a breakpoint in exit method by calling `break exit` in gdb before starting the executable.\r\n\r\nDoes resetting Cutter settings have any effect? Have you tried more than one executable? Does it happens with any function in the executable?\r\n  As can be seen in the stacktrace exit is called from dynamic loader methods. Most likely when the cutter half of r2ghidra plugin tries to access methods from r2 plugin it can't find them doesn't find them. Most likely reasons for this are:\r\n* non matching versions of r2 plugin and cutter plugin\r\n* the r2 plugin isn't loaded\r\n\r\nMaybe one of the plugins was installed wrong directory and isn't loaded at all or it is loading an older one that you had before instead of most recent one you compiled. Thank you for opening this issue. It seems like the version mismatch was responsible for the problem. As the issue is resolved, I will close it, \r\n\r\nIf it wasn't, please feel free to re-open this issue and we would love to help :)  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  **Environment information**\r\n* Operating System: Windows 10\r\n* Cutter version: Cutter 1.11.0-rc1\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: PE\r\n\r\n**Describe the bug**\r\n\r\nDuring debuging it seems that condition for highlighting line with current PC is incorrectly uses current seek offset instead of PC for some of the checks.\r\n\r\n**To Reproduce**\r\n\r\n1. Start debugging and wait for program to stop, it should be one of builtin stopping on entry or something like that. Not tested with breakpoints which would introduce third line highlighting rule.\r\n2. Select line that is few lines bellow the one with current PC\r\n3. scroll up until selected line reaches end, observe that the last line is now highlighted using current PC color instead of selected line color and line with current PC isn't highlighted at all. Since scrolling happens multiple lines at a time the selected line might need some adjustment to allow positioning it at the bottom of screen.\r\n4. scroll further up and observe that no line is highlighted even though line with current PC is still in screen.\r\n\r\n**Expected behavior**\r\n\r\nLine with current PC is correctly highlighted regardless of scroll position.\r\n\r\n\r\n**Screenshots**\r\n\r\nStep 1 - 2. The green line indicates current PC and gray/blue is selected line.\r\n\r\n![f2](https://user-images.githubusercontent.com/7101031/88202586-c6ec1780-cc51-11ea-9e8c-06f1605d99b1.PNG)\r\nStep 3, wrong highlighting\r\n![f3](https://user-images.githubusercontent.com/7101031/88202861-21857380-cc52-11ea-8da1-4c8c667a2cd7.PNG)\r\nStep 4, highlighting disappears completely.\r\n![f4](https://user-images.githubusercontent.com/7101031/88202914-3530da00-cc52-11ea-91ba-0f3d71d6e6b4.png)\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n  Nowadays we check radare2 itself on Debian Jessie, I think it's old enough. https://github.com/radareorg/radare2/runs/891055762?check_suite_focus=true\r\n\r\nThe problem of doing the same with Cutter is tricker since it requires relatively new Qt. I am not 100% sure if that Qt will even compile on that distribution. The oldest distro on which Cutter is regullary compiled is Ubuntu 16.04. It can be compiled there mostly with the packages from official repository. It is already somewhat annoying maintaining compatibility with CMake and Qt that old.\r\n\r\nAs can bee seen in the message error comes from [tree sitter](https://github.com/tree-sitter/tree-sitter) library not from the Cutter or radare2 source code. That is a dependency of a dependency of Cutter, asking about it here isn't the best place.\r\nDebian 7 is not only past EOL, it is also past LTS and even extended LTS.\r\n Anyway, I recommend to open a bug of better a pull request in tree-sitter library.\r\n\r\ncc @ret2libc  Would be nice to cherry-pick it in 4.5.1 then after.\n\nOn Thu, Jul 23, 2020, 16:22 Riccardo Schirone <notifications@github.com>\nwrote:\n\n> Yes, ok that's perfect. I will provide a full patch and after you test it\n> we can include it in r2.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/issues/2316#issuecomment-662880662>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABRT7PIRVDGX2VZB6KWBJDR47XNDANCNFSM4PE3XR7A>\n> .\n>\n As I mentioned before Cutter is being tested against Ubuntu 16.04 with all system packages except meson. It has Qt 5.5.   **Environment information**\r\n* Operating System: Linux, also observed on macOS\r\n* Cutter version: 1.11.0-rc1\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: N/A\r\n\r\n**Describe the bug**\r\n\r\nIt is possible to open multiple copies of setting dialog.\r\n\r\n**To Reproduce**\r\n\r\n* Edit/Preferences\r\n* Edit/Preferences\r\n* Observe that you have two settings dialogs\r\n\r\n**Expected behavior**\r\n\r\nOnly one settings dialog is allowed.\r\n\r\nOne approach is to track if any existing settings dialog is already opened and raise it in case repeatedly selecting menu item.\r\n\r\nAlternative approach would be making it modal and blocking access to main window.  I like the first approach slightly better because it allows to try out the new settings more easily.\r\n\r\n**Screenshots**\r\n\r\n![Screenshot from 2020-07-22 11-39-42](https://user-images.githubusercontent.com/7101031/88155573-e878df00-cc10-11ea-9850-dc455cca2a72.png)\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n  >If I'm a noobie asking about this, then please point me towards how to use Cutter with remote GDB sessions.\r\n\r\nThe question is completely fine. Sorry, it took me a while to get to this issue.\r\n\r\nConnecting to remote gdb only requires setting the IP/port fields in the remote debug dialog. No other actions are required and it seems that you already passed that stage.\r\n\r\n> I feel (I'm not sure) that after connecting to the Remote GDB I need to execute \"MAP FILE\" to load the local copy of the binary.\r\n\r\nShouldn't be necessary.\r\n\r\n\r\nThis seems to be an issue when opening gdbserver from windows, doing the same in Linux works perfectly fine(Once you reach a function that can be decompiled, the entry point also prints . I am currently looking into this to find a solution. > To have good information: You're saying that if I use a \"remote\" Cutter running in Linux connected to a gdbserver running in another Linux box then it will work? \r\n\r\nYep, tested as I wrote and it worked well for main. Didn't look into it further but it didn't have any errors and the text highlight in decompiler view was synced with disassembly. >If I open with the option \"Don't open any file\" to connect only to the GDB server, then in this case the socket connection is not stablished. \r\n\r\nWe don't have an option (yet) to directly connect to `gdb://` in Cutter but it is possible with radare2. This usage is unsupported.\r\n\r\n>It's a requirement to open the binary file first (from a local copy) and after connect to the remote gdbserver ? \r\n\r\nYes\r\n\r\n>When using the AppImage connected the remote GDB server, decompiler don't show good data... even if I try \"r2dec\" or \"Ghidra\": Error: no \"good\" data given (all invalid opcodes). Any idea? Even the Disassembly shows \"invalid\".\r\n\r\nEven when locally opening the binary from the remote session? Didn't try with WSL\r\n\r\n\r\nAlso, we should solve this for windows, it shouldn't be necessary to use WSL or a linux machine. It will just take some time.  It should also mention what software is required for doing that.  Doesn't vaddr and index have the same problem? Thank you for the PR. We haven't forgotten about it. We are currently in the process of preparing new release so it might take a few days until this can be handled.  The problem with megabeets_0x1is that it has a little bit something at low address and most of the code at high address. This results in most of the bar representing empty non-mapped region between. In future p-j should have either an option or always skip non-mapped regions.  Thank you for your time investigating the problem.  Indeed sounds like there might be a UI bug not handling certain kind of ways for changing input fields. Can you clarify exactly which dropdowns are you referring to?\r\n\r\nI am also a bit curios about what you meant by \"Distribution repository\" for Windows 10. I am not quite sure what that means for anything that isn't Linux. Do you mean Windows Store or Winget? Can you show the output of running `e asm.cpu` in console widgets in the bad and good cases? I was able to repeat this and further narrow down the problem. Initially was very confusing because end result of setting architecture through scrolling and opening the context menu was the same.\r\n\r\nTurns out scrolling isn't a problem, scrolling through `8051` is a problem. And 8051 is in the list between auto and arm.\r\n\r\nWhen selecting an architecture Cutter calls `e asm.cpu=?@a:8051` to query what cpus 8051 arch has. In case of 8051 this cause to permanently create some mappings which later cause problems to open the file properly.  Was able to repeat with 1.10.3 works correctly in master. I initially thought that it was fixed by e5d7bd660af558330b98249857e8ea109208cddc which slightly reworked show-in menu due to callgraphs but it also works in previous commit so it was probably fixed by layout managment changes 3545f059f10dc30886b8403b48b51812f65726d5  \r\n<!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\n* Move custom command input to separate input field. It wasn't obvious that you can enter text in combobox and it also didn't allow easily reacting to enter key.\r\n* Refresh graph on index change and enter key.\r\n\r\n\r\n**Test plan (required)**\r\n\r\n![Screenshot from 2020-07-18 18-33-02](https://user-images.githubusercontent.com/7101031/87856116-7315c180-c925-11ea-91c9-1e219dac4fb4.png)\r\n![Screenshot from 2020-07-18 18-34-48](https://user-images.githubusercontent.com/7101031/87856117-7610b200-c925-11ea-8b45-c7c0e83d4cf0.png)\r\n![Screenshot from 2020-07-18 18-34-56](https://user-images.githubusercontent.com/7101031/87856118-77da7580-c925-11ea-913d-2869a4698349.png)\r\n\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n It is still useful to refresh non-global graphs. Since this is more of a fallback widget for graphs not having proper support, I don't want to make any assumptions here about when it would be useful to refresh and connect to seek change or anything similar. Slightly changed the behavior. Now when switching graph type input field is kept visible but in disabled state. I hope that it might give some hints to the user about what should be entered in the input field. ![r2g](https://user-images.githubusercontent.com/7101031/87880634-f30e5b00-c9fb-11ea-9673-c7a3b6beae27.png)\r\n  Correct me if I am wrong, I don't think these changes are necessary or help the local variable reference feature in decompiler widget. \r\n\r\nFrom the implementation perspective variable references in decompiler widget should just use information from annotations.\r\nFrom the UI perspective showing disassembly code isn't that useful and decompiler widget should probably have a dedicate solution. That can be discussed separately.\r\n\r\nThat being said. These are nice changes by themselves. Unless you convince me how these relate to decompiler changes they could go into master. Yes, please change it to master.  Splitting is somewhat problematic due to qt dock widget API not being very robust.  It's easy to produce broken layout that way. So far it looks like there is now way doing this using QDockWidget without huge hacks. This issue will probably have to wait for #1265 or things getting improved in Qt.  I don't think developer documentation should be hidden behind a button in \"Contributing\" page.The contributing page looks more like for new contributors especially with question and buttons. Developer documentation is not only for new contributors but also existing developers. Yes, I would prefer having developer documentation as top level section with link from code contribution page.\r\n\r\nYou could add translations to contribution methods. @ITAYC0HEN Did you saw my comment about adding \"Contributing translations\" page? Most of the developer documentation is still bellow contributing page instead of developer documentation. Please try to avoid using \\`foo<page.html>\\`_ for internal links between pages. Sphinx doesn't check those, but it will show a warning if `:doc:` or `:ref:` target doesn't exist. It will help avoid dead links in future when things get changed. I think that some of the changes broke LGTM javascript analysis.  \r\n<!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nIt seems that github action VMs have cached bad package list. I expected them to fix this sooner but it doesn't seem to be the case.\r\n\r\n**Test plan (required)**\r\n\r\nMake sure Github actions build on Ubuntu 18.04 is green and apt update doesn't take too long.\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Total time for `apt dependencies` step was 20 seconds. That also includes the actual installation of packages not only `apt update`, looks like running it is not a big deal. Green  Why do you think that `CutterBindings` is a thing? The sample python plugin is using `cutter.CutterPlugin` instead of `CutterBindings.CutterPlugin`. Ok, binding generator uses CutterBindings. Seems like a bit of inconsistency Will have to take a look at what actually gets generated and try it to tell you more.  How to pass a command line argument to a GUI .app on macOS is more of a macOS question not a Cutter one and you should ask it in an appropriate macOS forum.\r\n\r\nNext time for questions how to use Cutter (assuming they are not about how to use your operating system) better ask in the Cutter  Telegram group or IRC. The issue tracker isn't the best place for such questions.\r\n\r\nI don't use macOS but quick search indicates that you can probably do it using the `open` program. Don't try to mix the macOS specif open file GUI app  mechanism with the arguments for customizing how the file specified in command line gets opened. Those are two different things.  The renaming functionality is for the purpose of making annotations during reverse-engineering. It can't rename the functions inside the binary itself. If you really want to rename function in a way that that *.so can be loaded and function with new name can be called you need a different tool.  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nIntroduce generic r2 graph widget. User can select one of the r2 graph types in the list or enter a command. Since it executes more or less arbitrary r2 command it needs to be manually refreshed using a button.\r\n\r\nAdd a specialized CallGraphWidget  used for global and single function callgraph. Extra features in the callgraph widget compared to generic one:\r\n* works with callgraph,  agc can't be used in the generic widget because agcj and agCj doesn't have the same structure as rest of ag*j commands\r\n* addressable item context menu when clicking on a block\r\n* seek synchronization\r\n* show in Callgraph and show in Global Callgraph when in addressable item context menu for other widgets\r\n\r\nExpose more graphviz layout engines(sfdp, neato, twopi, circo), might be useful for some of the reference graphs.\r\n\r\nGraphGridLayout bugfix for a case with multiple top level blocks. Almost never happens for CFG but is somewhat common in callgraph and some of other r2 graphs\r\n\r\nFix the false dock showing causing RefreshDeferrer to work poorly. This was probably a regression caused by dock layout switching feature. \r\n\r\nCode refactoring and other changes:\r\n* split some of the MemoryDockWidget into AddressableDockWidget\r\n* Introduce CutterGraphView for some of the common Cutter specific logic like styling, reading config values, and reaction to Config and Core events. GraphView base shouldn't contain any Cutter specific code to make it easier sharing code with x64dbg . Move some of the logic from DisassemblerGraphView to it now that there are other graphs to share it with.\r\n* new class SimpleTextGraphVew for graphs consisting of plaintext label and optionally address associated with each block\r\n\r\n**Test plan (required)**\r\n\r\n![Screenshot from 2020-07-10 14-33-23](https://user-images.githubusercontent.com/7101031/87150648-27c33980-c2bb-11ea-8baa-b5beb9388cfc.png)\r\n![Screenshot from 2020-07-10 14-33-37](https://user-images.githubusercontent.com/7101031/87150658-2bef5700-c2bb-11ea-8e44-d8cf655fa869.png)\r\n![Screenshot from 2020-07-10 14-35-24](https://user-images.githubusercontent.com/7101031/87150691-3ad60980-c2bb-11ea-939d-be4963496d62.png)\r\n![show_in_context_menu](https://user-images.githubusercontent.com/7101031/87150665-301b7480-c2bb-11ea-9e1a-60ec89a51cf0.png)\r\n![Screenshot from 2020-07-10 14-35-44](https://user-images.githubusercontent.com/7101031/87150682-36a9ec00-c2bb-11ea-81d7-a41076e014f7.png)\r\n![Screenshot from 2020-07-10 14-35-03](https://user-images.githubusercontent.com/7101031/87150684-3873af80-c2bb-11ea-8211-1c4c54a5b5aa.png)\r\n\r\nSteps\r\n* Test show in Callgraph: right click in function widget, select show in Callgraph  :heavy_check_mark: \r\n* Test show in Global Callgraph: right click in function widget, select show in Global Callgraph  :heavy_check_mark: \r\n* Callgraph position synchronization:  :heavy_check_mark: \r\n    * Click at different functions in disassembly widget, make sure both callgraphs are updated accordingly  :heavy_check_mark: \r\n    * Disable synchronization and click in disassembly widget make sure callgraphs are not updated  :heavy_check_mark: \r\n* Image export  do the steps for both callgraphs and at least one graph in the generic r2 graph widget :heavy_check_mark:*\r\n    * Direct png export, check the large bitmap warning using one of global graphs\r\n    * Direct svg export\r\n    * Json export\r\n    * graphviz based image export\r\n    * gml export\r\n* Copy text :heavy_check_mark: \r\n* Copy address from callgraph :heavy_check_mark: \r\n* Show xrefs in callgraph  :heavy_check_mark: \r\n* Change layout in all new graphs * \r\n* Test all the new graphviz layouts (using medium size or small graph, some of them are slow) :heavy_check_mark: \r\n\r\n**Closing issues**\r\n\r\nCloses #2178\r\nCloses #406\r\nCloses #1776 Problems found during testing:\r\n* sometimes switching between vertical and horizontal layout in global callgraph  view gets stuck above the content.\r\n* default export names aren't used properly Both fixed. Appveyor should be fixed by meson version PR that was just merged. On Travis the macOS build times out. Recent successful builds take 43-48 minutes which isn't too far from 50 minute limit.  The annoying part is that ~20 minutes out of that is taken by homebrew update which we have to do because Travis isn't updating their macOS images. See https://github.com/radareorg/cutter/pull/2077 .  > The field name of the dropdown menu of the R2 graphs widget is editable\r\n\r\nThat's by design you can enter a plain r2 command there. See description of #2178 . Idea is that even when we have dedicated widgets for all graphs a new r2 version might add new graph types. In such situation you can just type the command of new graph without waiting until new widget gets added to Cutter.\r\n\r\n> There is no space at all between edges so it might generate funny graphs (see picture attached below)\r\n\r\nAs the amount of connected edges increases space is reduced. In my opinion that's better than keeping fixed spacing and having the ends not connect to block and spanning across multiple screens.\r\n\r\n>  agg seems to be useless (and that might be by design as it is named \"custom\") \r\n\r\nThere some use-cases for agg. One is commands like \".axg*\" which store the resulting graph in \"custom graph\". So instead of running axgv and obtaining unreadable graph in console widget you can run \".axg*\" and then opening agg in the r2 graph widget. Other potential usescase is for display graphs generated by user scripts. The same could be done by making a Cutter plugin which reuses some of Cutter graph classes, but the r2 command interface is somewhat simpler than Cutter API and such script could be run either in plain r2 or Cutter.  Related #2152   \"Run Script\" menu is for running r2 scripts. That is files containing list of r2 commands. For example\r\n```\r\n?e hello world\r\n?v 10+5\r\npdf\r\n```  For some of them like renaming things re-running decompiler is unavoidable, but there is room for improvements to try better preserve view position.\r\n\r\nIn case of breakpoints I don't think decompiler needs to be run. Not performing an unnecessary decompilation isn't necessary a hack. It is somewhat expensive operation and performing it when not needed makes the UI less responsive. Even with position restoration working perfectly it would be preferable to do it only when necessary.\r\n\r\nAs for scroll position preserving there two approaches I can think of two approaches that can be explored.\r\nThe first one is to do the obvious thing. To preserve the scroll position - preserve the scroll position. Save it before changing text and load it afterwards. \r\n\r\nOther approach is to try avoiding position reset. When doing basic text modifications cursor position is more or less preserved. Maybe the code can be replaced using text editing API in a way to reduces cursor move. @NirmalManoj Wasn't this fixed already? I guess gitthub automatically closes the issue only when PR gets merged to master. This can probably be closed. I'm closing it.  In general case shifting things in an executable file is very hard problem. It would require perfectly identifying and updating all the cross-references and address calculation. Missing just few of them could easily cause the executable crash. The same applies to resizing .text section increasing it's size would mean moving all the following sections like rodata and change the relative positioning of code and data.\r\n\r\nThe typical approach to deal with this is to insert a jump in the place you are modifying. Jump to modified piece of code, execute the modified piece of code, jump back to original code. Depending on amount of modifications you want to make the gaps between functions or unimportant string literals might have enough space. If you want to add a lot of code a better approach would be modify the executable headers so that it loads additional dynamic library.\r\n\r\nYou might also be interested in dynamic instrumentation tools like Frida, DynamoRIO or intel pin tool.\r\n\r\n\r\n\r\n  Looks like the required python3 symbols weren't  linked.\r\nCan you try if changing `PKGCONFIG += python3` to `PKGCONFIG += python3-embed` helps?  The fragment of output log from your previous issue mentioned loading of plugin. If you have any old plugins compiled against different cutter version those may cause problems. Please try running without any plugins. You can remove the plugin manually or start the Cutter with `--no-plugins` flag.  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nR2 4.5 will be released soon. Update r2 to try catch any problems before that and reduce delay until we can release compatible Cutter release.\r\n\r\n**Test plan (required)**\r\n\r\nCI  is green.\r\nBasic sanity checks that everything isn't completely broken:\r\n* Open executable\r\n* Check that disassembly, graph view and hexwidget look reasonable\r\n* Start debuging, set a breakpoint, make sure it is hit\r\n* Do some single stepping make sure registers are refreshed\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n > ```\r\n> src\\subprojects\\radare2\\test\\unit\\meson.build:53:4: ERROR: Unknown variable \"rpath\".\r\n> ```\r\nYes, I will disable r2 unit tests for now. There is no need for us to build or run them.\r\n Basic stuff works. Restarting debug session doesn't work properly but someone was recently complaining about it in 1.10.3 as well. Would be good to fix though.  Please double check that you have properly checked out git submodules.  Cutter shouldn't crash either way but file you attached isn't an ELF file even though you talked about ELF  in problem description.  What's the strategy for adding the actions to decompiler widget? Old context menu added actions to parent widget. I don't like that as modifying parent from children should be avoided. If the menu  is flat the menu user can easily do `addActions(menu->getActions())` . I don't think it works with nested menus.  > @karliss I'm not sure what you mean by\r\n> ` I don't like that as modifying parent from children should be avoided. If the menu is flat the menu user can easily do addActions(menu->getActions())`. Can you please explain?\r\n> \r\n> Currently, this is how actions are added to the decompiler widget.\r\n> https://github.com/radareorg/cutter/blob/3100872d99f0480538dcecf6d0ee5b305a3410cc/src/widgets/DecompilerWidget.cpp#L89\r\n\r\nDoes it work for actions that are in submenus? > Are all menus other than `mCtxMenu` not submenus?\r\n\r\nYes I was referring to breakpoint menu and debugMenu, everything that isn't the top level decompiler context menu. \r\n\r\n  I would be much happier if documentation was moved to separate repository before adding a bunch of screenshots for all the widgets and dialogs. Those could quickly cause bloat.  **Describe the bug**\r\nIt seems that LGTM currently only checks python code. There are now C++ problems reported. In some views it reports only ~2k lines of code.  Files view shows only header files.  But the Logs page claims that 684.6k lines of C and C++ code were analyzed. Looking at extraction log it seems that the build fails after compiling r2 which is probably excluded.  There isn't much that can be done about resizing without actually subclassing QInputDialog or otherwise creating a modified version of it.  Something might be doable by creating `QInputDialog` directly without using `QInputDialog::getText` but would have to be done in each place it's used.  I don't think it's worth it, it would be better to implement function with similar interface as `gettText`. I guess that's what  you meant with \"in near future\".  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nCould be later moved to separate page since it won't be necessary to change them too often. For now graph page is quite empty so I didn't do it yet.\r\n\r\nThese options will be more useful later once I finish a PR which will remove some of the unintentional spacing.\r\n\r\n**Test plan (required)**\r\n\r\n![Screenshot from 2020-06-12 21-41-27](https://user-images.githubusercontent.com/7101031/84540187-85d12100-acfd-11ea-8432-858622f3c617.png)\r\n\r\n* Change edge spacing observe that graph changes\r\n* Change block spacing observe that graph changes. Horizontal block spacing is a bit tricky since there are many other factors affecting it.\r\n* Switch between all graph layouts including Graphviz make sure nothing is broken\r\n* Increase spacing and restart Cutter, make sure changes were saved\r\n\r\n**Closing issues**\r\nCloses #2247 \r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  I am slightly worried about cluttering the first page with too many rarely used settings. @ITAYC0HEN what do you think?  Regarding \"asm.reloff\" supposedly getting turned off - I added debug code to `updateAsmOptionsFromVars` and it reported that `asm.reloff` is false, but entering `e asm.reloff` in console widget while keeping settings opened reported `true`. There might be problem with reading config options. Looks like `asm.reloff` needs to be added to the `asm.options` list in Configuration.cpp.   The linker error on windows needs to be fixed on r2ghidra side. Marking `r2ghidra_decompile_annotated_code` as R_API should fix it.  An alternative approach to this is #1708. It can probably be the same menu in hex widget and disassembly widget.  Before adding this to the dependency list I would like the need for it to be evaluated. From what I could find curl is only used for downloading capstone when building r2 using .configure/Makefile approach. It can also use wget instead of curl. Meson based r2 build which is also what CUTTER_USE_BUNDLED_RADARE2 seems to use GIT for getting it. It is also possible to build r2 using system capstone which avoids downloading it completely. \r\n\r\nI propose organizing the dependency list into 3 parts:\r\n* Main dependencies - what we currently have\r\n* Optional but potentially difficult to avoid dependencies (curl and python3-setuptools) - things that require compiling in a specific way, understanding the build system or manually preparing the dependencies.\r\n* Optional dependencies for extra features (KSyntaxHighlighter, graphviz) - unless force enabled Cutter should automatically disable the corresponding features when these dependencies are not available\r\n You can call them recommended dependencies if you think that it's less confusing.  My reasoning is that they aren't strictly required and removing them doesn't take away from functionality of Cutter. It just makes a process a bit more complicated and you have to understand what you are doing. Adding an additional separator especially if there is one already for optional dependencies isn't hard. There are different needs for different people. Most end users probably don't care how and what the the build system does. But people preparing a package for distros or just someone trying to do offline do care at least a little bit and probably don't want build system to curl random source code during build.  How about saying \"More than one\" instead of \"Too many\"?  I was thinking about similar thing recently due to a question about pattern matching mode. The idea that I came up with was to also allow choosing the regex mode (none, wildcard, regex). Since there are multiple options to change it should be a menu instead of button for saving space. Menu can be displayed as context menu for input field (opened using right click or keyboard). For better discoverability there should also be visual indicator. Maybe dropdown button or something embeded inside input field. Need to investigate what's available in Qt out of the box.\r\nContent of menu would be:\r\n* toggleable action for case sensetivity\r\n* action group for selecting pattern matching/regex mode. Looks like https://doc.qt.io/qt-5/qlineedit.html#addAction-1 or https://doc.qt.io/qt-5/qlineedit.html#addAction is exactly the thing needed. It allows adding an action within left or right side of line edit. Variation of this approach to use single action which opens a menu. An example of this in QtCreator and Gedit in screenshots bellow. Advantage is that it takes less space. Approach used by VSCode could get crowded if there were more than 3 search options. QtCreator and Gedit have 4 and having more wouldn't be a problem. Downside that it is less discoverable. Gedit one is almost impossible to find, QtCreator at least has the downward triangle indicating that there is a menu.\r\n![search_menu](https://user-images.githubusercontent.com/7101031/87644967-7fe3bb00-c755-11ea-8bfe-3ebcfe7aa9d6.png)\r\n  When you are using system R2 you need to use a matching version. Anything beside the commit indicated by git submodule isn't guaranteed to work. CUTTER_USE_BUNDLED_RADARE2 is more of a option for dev builds so that you can easily run it from build directory, not so much for permanent installation. This might change in future.\r\n\r\nIf you want to install the whole thing somewhere you should:\r\n* checkout a version of r2 that is compatible with cutter version. Easiest way for doing that is by running `git submodule update` in cutter directory.\r\n* Install r2 from radare2 folder using your method of choice\r\n* compile Cutter using CUTTER_USE_BUNDLED_RADARE2=OFF, if you didn't install r2 in standard location you might need to use PKG_CONFIG_PATH so that cutter build can find it\r\n\r\nBefore starting this I recommend you check if you have any other r2 installations from your previous attempts and remove them. Otherwise you may get conflicts unless you know what you are doing.  I assume you are talking about Linux.\r\n\r\nCould you describe your use case in more details? By default searching for libs in /lib and a few other folders is the default behavior of Linux dynamic linker. Most Linux executables behave that way unless they are purpose built for being portable like Appimage or something like that which gets shipped together with libraries. If Cutter project also built some dynamic libraries not only single executable it would be a slightly different story. I would expect CMake to handle that, but I can't be sure without actually testing it.\r\n\r\nYou can probably achieve what you want using CMAKE_INSTALL_RPATH option. Regardless of it helping you or not I would like to hear more about your use case.\r\n  The problems hinted by LDD check, where partially caused by by bad check. There is some room improvements but old APPIMAGE was equally affected by this so it doesn't need to be fixed now. 76->101MB increase in size, need to investigate why. Size difference was caused by debug symbols which are intentionally enabled when crash reporting is enabled. I assume that in the old case they got stripped. Do we care about size increase?\r\nAssuming we do the possible improvements are:\r\n* reduce debug information amount from -g[2] to -g1. From the description in gcc documentation g2 is default level for debuging, but g1 should be enough for backtrace.\r\n* build with -g2 and then split it in separate file as instructed by breakpad documentation. We can upload the debug symbols as second file for release. Strip debug symbols after they have been saved.\r\n\r\nCutter executable size with different settings\r\n* no debug information ~ 4-5 MB\r\n* -g1 ~ 14 MB\r\n* -g[2] 70-80MB  , after compression Appimage size increases only by 25 instead of 65-75MB\r\n Tested the appimage on Ubuntu 16.04 and ArchLinux. Basic plugin, both decompilers and `eco` worked. @ITAYC0HEN I already made draft test deploy-test. I think that's good enough. There were some minor changes docs and formatting,  but that shouldn't affect output.  Tests passed. The remaining question is do we care about 25MB size increase.  @tobigrimm Thank you very much! this was a fantastic PR - well described and on-point. We really appreciate taking the time to write the docs and following the guidelines.\r\n\r\nSo... What's next? :blink: ;)  **Is your feature request related to a problem? Please describe.**\r\n\r\n**Describe the solution you'd like**\r\n\r\nWe currently provide users with the option to create and edit themes in Cutter. But these themes are mostly focusing on the Disassembly and graph views, the colors of instructions and background and nodes in graph, and similar. But we don't provide them with an option to load theirs on CSS\\QSS themes which will modify the Interface Theme.\r\n\r\nIn addition to respecting native theme, we currently provide several default Interface Themes:\r\n- Light\r\n- Dark\r\n- Midnight\r\n\r\nThe feature request is providing an easy way for the users to load new themes, including their icons and resources. This includes\r\n\r\n- Supporting a `./themes/` folder in which users can put their themes (similarly to plugins)\r\n- Dynamically loading themes, in order to skip the need to restart the interface\r\n It is relevant for Linux as well since this is a theme only for Cutter and not for the operating system or for other Qt applications, including Cutter's unique widgets.\r\n\r\nPalletizing the thems is a good idea indeed and supported the idea on #2138. But themes are more than just a bunch of colors. See for example what I did with Light theme which feels nothing like the others, with a lot of CSS magic.\r\n\r\nFor example, here is how IDA allows me to easily load Cutter's Light Theme on Linux.\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/82785699-ca3e6f00-9e6b-11ea-8250-949398d177ae.png)\r\n\r\nUntil recently, IDA wasn't supported user-defined interface theme, and those who wanted to had to use [IDA Skins Plugin](https://github.com/zyantific/IDASkins). Now, IDA supports [CSS-based ](https://www.hex-rays.com/products/ida/support/tutorials/themes/) [[another link](https://www.hex-rays.com/products/ida/news/7_3/)] stying which is very easy to develop themes to.\r\n\r\nBinary Ninja, has a slightly different approach, which gives less power to the user, but it is very easy to create new themes with. But less complex and limited to set of configs.\r\n\r\nhttps://github.com/Vector35/community-themes\r\n\r\n\r\n\r\n\r\n\r\n  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n**Detailed description**\r\n\r\nThis pull request adds two shortcuts to toggle the Console Widget\r\n - <kbd>:</kbd> \r\n - <kbd>Ctrl</kbd>+<kbd>`</kbd> \r\n\r\nIt also tries to add <kbd>Ctrl</kbd>+<kbd>L</kbd> to clear the output window of the console but I failed with it so **I will appreciate** if someone will do some Qt magic to solve this. \r\n\r\n**Test plan (required)**\r\nUse each of the screenshots to toggle the Console widget\r\n  Looks good! :)  I said it before, and I will continue saying this -\r\nThis pull request is amazing. The improvements are very significant.\r\n\r\n\r\nI didn't notice any bugs with the binaries, the symetricity is good, and the spacing is fine. Something It feels too narrow, and sometimes too wide. But I guess having it perfect is hard.\r\n\r\nWill go over the code now, but I don't think I have the qualities to preform decent Code Review here. I asked @xarkes and @thestr4ng3r to do so - they have a better CS background than me with all this algorithms things. <3\r\n\r\ncheers! I was thinking of squashing it.  **Is your feature request related to a problem? Please describe.**\r\nCurrently, if someone wants to open a file in write mode they have to go through the inital options dialog, or manually enable it via the interface. \r\n\r\n**Describe the solution you'd like**\r\nI would like to suggest a `-w` command line flag to enable write mode. This will allow users to open Cutter like this:\r\n```\r\n$ Cutter -w -A 0 /tmp/test.txt \r\n```\r\n\r\n  I assume that by \"BUILD YES/RUN NO\" you mean that you were able to compile but not run without the corresponding system component.\r\n\r\n1. python3-setuptools  - seems plausible. I wonder why I didn't hit that during my test. What meson version did you use and how did you install it?\r\n\r\n2. pkgconfig -  So you were able to confirm my results about pkgconfig not being strictly required. Showing a message that optional component was not found in case of it not being present seems reasonable to me.\r\n\r\n3, 4 I can't imagine how it's possible to compile and link against those libraries without them being present and getting the error only when executing final result. If they are not present Cutter make files should have detected it and automatically disabled the corresponding feature. If it didn't catch it there should have been a linker error  due to undefined symbols. Are you didn't do the build with graphviz installed and then remove it before running? Maybe by accidentally reusing the old build.  Please send the full build log where you were able to build Cutter without grpahviz in a way that requires it at runtime. I'll ask you the third time, please provide full log with commands you run and their outputs.  It has hard for me to help you if you don't provide the information you are asked.  Hey @redmed666 ! Thanks for opening this issue :)\r\nIndded, Qiling looks great and when working with Cutter it will be terrific!\r\nWe tested radare2 with Qiling several times, and sadly there are issues in Qiling side that is blocking this from work. Specifically, it doesn't support some of the XML fields needed for the communciation protocol with gdb. \r\nWe will check better and let the nice folks at Qiling team know about the gaps that needed to be solved.\r\n\r\n\r\nPOC: https://twitter.com/trufae/status/1254320307688611841\r\n\r\n@yossizap will know to tell more about this   Love this in godbolt :)  **Detailed description**\r\n\r\nThis PR will update the radare2 submodule and will help to prevent tests from failing @karliss I think it is a code you introduced:\r\n\r\n```\r\n/home/travis/build/radareorg/cutter/src/core/Cutter.cpp:796:46: error: invalid conversion from \u2018const char*\u2019 to \u2018char*\u2019 [-fpermissive]\r\n\r\n     return fromOwnedCharPtr(r_meta_get_string(core->anal, R_META_TYPE_COMMENT, addr));\r\n\r\n                             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n/home/travis/build/radareorg/cutter/src/core/Cutter.cpp:120:16: note:   initializing argument 1 of \u2018QString fromOwnedCharPtr(char*)\u2019\r\n\r\n static QString fromOwnedCharPtr(char *str) {\r\n\r\n                ^~~~~~~~~~~~~~~~\r\n\r\nCMakeFiles/Cutter.dir/build.make:325: recipe for target 'CMakeFiles/Cutter.dir/core/Cutter.cpp.o' failed\r\n\r\nmake[2]: *** [CMakeFiles/Cutter.dir/core/Cutter.cpp.o] Error 1\r\n\r\nmake[2]: *** Waiting for unfinished jobs....\r\n```  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n\r\n**Detailed description**\r\nThe dynamic implementation of the hashes displayed on dashboard was buggy because the widgets were appended again and again after refreshing. This PR fixes this by removing the previously created widgets.\r\n\r\n**Test plan (required)**\r\n\r\n1. Go to dashboard and see the hashes displayed\r\n2. Click view->refresh contents\r\n3. See that nothing changed and that the hashes are displayed correctly.\r\n\r\n > Confirmed that the data gets refreshed by editing some bytes in cache mode and observing that entropy changes\r\n\r\nExcept entropy, does r2 calculate the hashes without honring the cache? :(  Clicking on \"Reopen in write mode\" should solve your dilemma. once clicked, it will allow you to patch without a problem :)   Related: [Cutter's Deep Graph plugin](https://github.com/JavierYuste/radare2-deep-graph)\r\n Regarding the dedicated widget, not sure how it is worthy in terms of inner implementation. If the data looks the same, they all can share the same widget while the data provided will be different, as well as widget's title.  This happen to me when re-opening after reset settings, without changing OS theme mode (kept dark the entire time)  General notes\r\n - would go for a smaller width function-widget\r\n- I prefer registers to be on top, and stack on the bottom\r\n\r\n\r\nHad time to test 3 test-cases, all passed successfully\r\n\r\n- Clean start without upgrade\r\n- layout upgrade a)\r\n- layout upgrade b) Yes it is like this for months. We never came with the best solution for WHEN to show it and when not This is fantastic work! a big step forward. Much more stable!!  Duplicate of #1830  The code that is there doesn't look bad. But from the usability perspective there is a lot of work remaining.  The most obvious problems I noticed:\r\n* When reaching end of list nothing happens, I would expect looping around\r\n* Currently only works for the tab group containing dashboard. It doesn't work if user closes dashboard or have multiple groups of tabs. It's not immediately obvious for me what the best behavior would be. It would be good to investigate what other tools do. IDEs might not be the best example as they usually have clear separation between document tabs and side widget tabs. In Cutter all docked widgets are more or less equal.\r\n* For previous tab shortcut I will give you a few hints. Does using secondary key sequences work (back, ctrl+{, ctrl+shift+f6 depending on your OS)? Does specifying the Ctrl+Shift+Tab shortcut explicityl work? What key sequences does `QKeySequence::keyBindings(PreviousChild)` return? Since it looks like things are messier than I initially thought here is what I observed on my system. I am using Archlinux+Gnome+qt5ct. Explicitly specifying \"Ctrl+Shift+Tab\" worked, the following test code printed \"Ctrl+Shift+Backtab\", \"Back\". If I changed shortcut profile in qt5ct shortcuts changed accordingly.\r\n```cpp\r\n    auto kb = QKeySequence::keyBindings(QKeySequence::PreviousChild);\r\n    for (auto k : kb) {\r\n        qDebug() << k.toString();\r\n    }\r\n```\r\n\r\n@0x24D @ITAYC0HEN Please try the test code above, and tell what it prints on your systems. @ITAYC0HEN  in your case also try changing the shortcuts in system settings.\r\n\r\nThere is a Qt bugreport about PrevChild not working due to  \"Ctrl+Shift+Backtab\" not being the correct description https://bugreports.qt.io/browse/QTBUG-15746 . But due to other issues discussing in which cases \"Shift+Tab\" should be reported as \"Backtab\" I wouldn't be surprised if there were platforms or configuration on which \"Ctrl+Shift+Backtab\" is the correct way of describing it. \r\n\r\n@0x24D If specifying \"Ctrl+Shift+Tab didn't work on your system. I would be interested to know if \"Ctrl+Backtab\" or \"Ctrl+Shift+Backtab\" work. From what I understand `QKeySequence(Qt::CTRL, Qt::SHIFT, Qt::Key_Tab)` didn't work because you had to write `QKeySequence(Qt::CTRL+Qt::SHIFT+Qt::Key_Tab)`  Modifier keys are stored in the upper bits. Multi argument constructor is probably for cases for shortcut is made from sequence of keys that must be pressed one after another. Something like (Ctrl+K, Ctrl+C) which means press Ctrl+K, release K, press C while still holding Ctrl. Releasing and pressing Ctrl before pressing C is optional but it's easier to type by holding it pressed.\r\n\r\n\r\n > Have we got a plan for what the shortcuts need to be set as, or should I just leave them as NextChild/PreviousChild for now?\r\n\r\n* Some custom handling is necessary due to Ctrl+Shift+Backtab not working on Linux. \r\n* To reduce amount of platform specific code, NextChild PrevChild might be usable on some platforms. \r\n* From the testing done so far it seems that on Linux specifying \"Ctrl+Tab\" and \"Ctrl+PageUp\"  is the best we can do\r\n* macOS and Windows need to be tested in a similar way to what was discussed before. What shorcuts Qt reports and do they actually work? What shortcuts other software use, the default file browser, terminal, IDE (Xcode and Visual Studio), web browser?\r\n\r\n @reu-res Thanks for testing, we are always lacking people using macOS . Can you also confirm which of them actually work and using either Ctrl or Command.  It would be also good to know what the macOS file browser, terminal, safari and XCode use. Hey @0x24D , anything else or is it ready for another round of review? \r\nDid you address the points mentione above?  @radare I just tred setting `e scr.interactive=false` in r2 and it didn't prevent visual panels from opening. Created radareorg/radare2/issues/16689 for the panel mode. Otherwise `scr.interactive=false` seems like reasonable solution. Cutter already uses `scr.interactive=false`. The `V` command gets ignored. So it's only matter of fixing the few cases in r2 that don't handle it and maybe adding error messages.  Caused by `cmd` refactoring. `CutterCore::seek(QString)` uses `cmdRaw`  which doesn't check if seek changed. I can't reproduce this. Step gets called as `asyncCmd(\"ds\")` which has the seek change check. By the way are you missing step out button?  If the PR doesn't actually close the issue don't mention words \"closes #xxx\" in this order. Github isn't that smart to tell the difference between \"closes #xxx\" and \"not closes #xxx\". Both will be close the issue even though one of them have opposite meaning. I looked at the logs of those macOS failures and there were some errors from brew install step. Those could have been the cause. We have two Qt syntax highlighters in Cutter, why would we use Sitter's as well?  I will clarify what I am thinking ->\r\n\r\n1. User clicks the <kbd>Search</kbd> button\r\n2. Change button's text to \"Searching...\"\r\n3. Disable button\r\n4. If needed, force `redraw` of the button\r\n5. Perform search\r\n6. If results found, shown on the table. If results were not found, show the \"No results found\" indicator\r\n7. Return the button's text to \"Search\"\r\n8. Enable the button  **Is your feature request related to a problem? Please describe.**\r\n\r\nBuggy or incompatible plugins may conflict with other plugins, cause Cutter to misbehave or even crash. There needs to be an easy way of disabling or enabling them from user interface just like almost any other program with plugins.\r\n\r\n**Describe the solution you'd like**\r\n\r\n* In the plugin settings page list all plugins including one which are not loaded.\r\n* Allow disabling auto-loading for each plugin from the settings page.\r\n* When starting cutter skip loading of plugins which are marked as disabled. Keep the skipped plugins in a list so that they can be enabled from settings page.\r\n* Can `QPluginLoader::metaData` be used to get basic information about it like name and author with loading any code?\r\n* This issue doesn't require support for dynamic loading and unloading of plugins, that's a job for #1446 . Having to restart Cutter for changes to have effect is acceptable.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n\r\nRelated tasks #1446\r\n Sure. Anything you want to discuss about this task?  \r\n\r\n<!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nC api allows specifying address directly thus avoiding unnecessary reads caused by seek(rb=true).  There is room for further improvements not refreshing comments during cursor blinking and not having cmdRawAt cause 2*4096 byte reads. With these changes the hexwidget is somewhat usable during debugging compared to.\r\n\r\n**Test plan (required)**\r\n\r\nOpen hexwidget during debuging, try selecting a range of bytes. Compare the performance before and after the patch.\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Confirmed register flags are acting weird in Cutter but that's not part of this PR. I remember we noticed something similar without debugging.  Will create separate issue for that. > should we have issue for these?\r\n\r\nCreated issue for seek/4k read thing. Hexwidget querying things too often would be solved by the hexwidget highlighting architecture issue.  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\n* Use qt parent for deleting complete - Manualy deleting causes some UAF due to it being isntalled as event filter. Qt seems to destroy things in correct order. Sanitizer doesn't report completer as being leaked.\r\n* Fix sanitizer problems in HexWidget\r\n  * Initialize size properties to somewhat sane values to avoid unitialized variable use when calculating them first time.\r\n  * Change AbstractData interface. Old one returned pointer to unknwon sized block of data which was difficult to use correctly. Adjust bound checking to avoid out of bounds access when comparing  it with oldData and scrolling.\r\n\r\n**Test plan (required)**\r\n\r\n* run with sanitizer, make sure it doesn't complain about completer getting leaked :heavy_check_mark: \r\n* open disasembly widget next to hexdump, test that changed bytes highlighted still works by noping an instruction :heavy_check_mark: \r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  This should probably done using rarun2/e dbg.profile files. In that case it should be an interface for managing and editing all(except ones that conflict with rest of UI) dbg.profile properties not just environment variables. It should be also possible to select existing handwritten rarun2 file. In case you need a solution that works right now looks like setting `e dbg.profile=/path/to/rarun_profile.rr2` in the console widget works. Didn't test with all the features but at least setting environment variable works.  For 1 the related issues are #1708 and #1709 \r\n\r\n2 is already possible, just separate the instructions using semicolon ';' . It could have a better indicator of how many instructions will be overwritten but it works.\r\n  @Misiur I don't see any problems in the log you attached. Build finishes and cutter fails to open because you don't have any displays available within docker which seems reasonable. What do you mean by worked, did it somehow opened the GUI? Can you demonstrate a full log that demonstrates working the first time and then failing on second time? Or did it worked once and you can't repeat that at all?  Looks like `drj` returns them in expected order but since the json parser puts them in an ordered dictionary they get sorted alphabetically. `drrj` returns an array instead of object/dictionary so it should be usable for getting correct order. It seems to currently include some unexpected terminal escape codes, those would have to be fixed first.  **Is your feature request related to a problem? Please describe.**\r\n\r\nQt stylesheets support using the colors from current QPallete https://doc.qt.io/qt-5/stylesheet-reference.html#paletterole .\r\n\r\nReasons for using color palette and palette roles in the color theme stylesheets\r\n* less places that need to updated when adjusting color\r\n* might allow simplifying the stylesheets in places where the widgets would use those colors from palette by default\r\n* Dark and midnight theme stylesheets are almost identical except colors. With color palette they can probably be deduplicated thus reducing amount of work for fixing stylesheet related layout bugs.\r\n* easier future theme creation by customizing only palette\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\n\r\n* Fully specify the color palettes for the existing cutter themes, currently only text color is set\r\n* Replace use of explicit colors in theme stylesheets with palette roles as much as possible\r\n* try if parts of stylesheet can be simplified due to use of palette color being the default behavior\r\n* evaluate if some of the themes can share stylesheet\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\n**Describe alternatives you've considered**\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n Somewhat related but it could also be done separately is choosing customization friendly base style. From what I understand currently the stylesheet gets applied on top of the native style. It has two problems:\r\n* depending on how much custom stuff is done style engine code suitability for customization varies\r\n* inconsistent base produces inconsistent results\r\n\r\nBy style I mean https://doc.qt.io/qt-5/qstyle.html#details  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nUpdate github checkout action from v1 to v2. Might help with the \"referenfce is not a tree\" error that sometimes happens. https://github.com/actions/checkout/issues?q=is%3Aissue+reference+is+not+a+tree+is%3Aclosed\r\n\r\n**Test plan (required)**\r\n\r\n* Make sure CI builds are green :heavy_check_mark: \r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Appveyor failure was probably caused by github problems yesterday https://www.githubstatus.com/. Although it would be nice if some could restart the appveyor build and confirm it.  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nLatest meson version increased minimum ninja version to 1.7 https://github.com/mesonbuild/meson/commit/be486a2ec84f22052fba5ba16de136de00379966 . \r\n\r\nAlternative solution would be pinning meson version. Since this job is already using newer library versions from cutter-deps I chose updating ninja instead. Such approach would be more suited if all the dependencies were taken from system repository like it's done in Travis Ubuntu 16.04 build job.\r\n\r\n**Test plan (required)**\r\n\r\n*  CI tests are green.\r\n* Log for Ubuntu 16.04 on github actions build indicates that ninja 1.7.1 was installed :heavy_check_mark: \r\n\r\n\r\n\r\n**Closing issues**\r\n  **Environment information**\r\n* Operating System: Arch Linux, Qt 5.14.1 Gnome desktop\r\n* Cutter version:  4f649808344b5e6ffa70d4280997147a5ae880bb  ~ 1.10.2-1.10.3\r\n* Obtained from: Built from source\r\n* File format: Not applicable\r\n\r\n**Describe the bug**\r\n\r\nFont and background settings in light theme make tooltips almost unreadable.\r\n\r\n**To Reproduce**\r\n\r\n1. Open a file in Cutter.\r\n2. Set the interface theme to \"Light\".\r\n3. Hover over \"Execute command\" button in console widget or navbar to trigger the tooltip\r\n\r\n\r\n**Expected behavior**\r\n\r\nTooltip background has contrasting color with the text color.\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n![tooltip](https://user-images.githubusercontent.com/7101031/78245818-cc7df000-74f0-11ea-847d-c3f2a4cce7aa.png)\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n Yes, it probably doesn't have it specified and uses the value from system theme which has varying results.  Cutter currently contains docstring comments both in headers and next to implementation in cpp files. There are more of them in headers 273 compared to 50 in cpp files.\r\n\r\nIt might be better to have them always in header unless the function is visible only within single translation unit and doesn't have a declaration outside cpp file.\r\n\r\nTasks:\r\n* [x] Confirm if the assumption above is correct\r\n    *  [x] Test how docstring in cpp files behaves in different IDEs\r\n    *  [x] Test how doxygen reacts to docstrings in cpp files\r\n*  [ ] Update developer documentation once the best approach is clarified by steps above\r\n*  [ ] Consider cleaning up existing docstrings if one approach has significant benefit over the other\r\n\r\nBenefits of having the docstring in header\r\n* If docstring is in the header QtCreator displays it when autocompleting or hovering over the function call. Need to test if other tools have similar behavior. \r\n\r\nBenefits of having docstring next to implementation\r\n* It is easier to keep the comment up to date when modifying the function\r\n* It is more accessible when reading code because the documentation is in front of you and not in another file Tool behaviour:\r\n* QtCreator - shows the docstring  only from declaration\r\n* Clion - docstring can be either place\r\n* Vscode - docstring can be in either place, requires configuring cmake and compiling for help to start working\r\n* Doxygen - docstring can be in either place\r\n\r\nThe recommendation from Google Coding Style guide seems to match with my initial suggestion of keeping docstring in next to declaration in header. Docstrings describe what the function does, how to use it and such comments belong to declaration.   Please read the release notes. https://github.com/radareorg/cutter/releases/tag/v1.10.2  Seems to be specific to Appimage builds, doesn't happen when I build locally using my system's Qt.\r\n\r\nMy initial guess that the Qt version or it's build on Ci servers is bad but the Appimage from qt 5.14 branch is also bad.\r\n\r\nIt might be useful to do a build locally using qt from cutter-deps. Was able to repeat using local build and Qt from cutter-deps without appimage.\r\n\r\nNext test is building cutter-deps locally using the same scripts as in CI. That should tell if the problem is in build scripts or the CI environment where cutter-deps are compiled. Using locally built QT using the same scripts  (but qt 5.14.2) worked. That leaves 3 theories:\r\n* something in the system headers on CI machines - I really hope that this isn't the case\r\n* difference in qt build configuration variables that were chosen automatically\r\n* something that got fixed between 5.14.1 and 5.14.2 - seems unlikely\r\n\r\nFor the second theory I will compare the build config print by Qt in my local build and CI builds.  I need to update cutter-deps from qt 5.14.1 to 5.14.2 anyway. ```diff\r\n--- <unnamed>\r\n+++ <unnamed>\r\n@@ -1,12 +1,12 @@\r\n-Compiler: gcc 9.3.0\r\n-Configuration: use_gold_linker sse2 aesni sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512bw avx512cd avx512dq avx512er avx512ifma avx512pf avx512vbmi avx512vl ccache compile_examples enable_new_dtags f16c largefile precompile_header rdrnd shani x86SimdAlways shared shared rpath release c++11 c++14 c++1z concurrent dbus reduce_exports reduce_relocations stl\r\n+Compiler: gcc 5.4.0\r\n+Configuration: use_gold_linker sse2 aesni sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512bw avx512cd avx512dq avx512er avx512ifma avx512pf avx512vbmi avx512vl ccache compile_examples enable_new_dtags f16c largefile precompile_header rdrnd shani x86SimdAlways shared shared rpath release c++11 c++14 concurrent dbus reduce_exports reduce_relocations stl\r\n@@ -32,12 +32,12 @@\r\n   Qt Xml ................................. yes\r\n Support enabled for:\r\n   Using pkg-config ....................... yes\r\n-  udev ................................... yes\r\n+  udev ................................... no\r\n   Using system zlib ...................... yes\r\n-  Zstandard support ...................... yes\r\n+  Zstandard support ...................... no\r\n@@ -95,10 +95,10 @@\r\n   Session Management ..................... yes\r\n Features used by QPA backends:\r\n   evdev .................................. yes\r\n-  libinput ............................... yes\r\n+  libinput ............................... no\r\n   INTEGRITY HID .......................... no\r\n-  mtdev .................................. yes\r\n-  tslib .................................. yes\r\n+  mtdev .................................. no\r\n+  tslib .................................. no\r\n   xkbcommon .............................. yes\r\n   X11 specific:\r\n     XLib ................................. yes\r\n@@ -113,7 +113,7 @@\r\n     EGLFS i.Mx6 Wayland .................. no\r\n     EGLFS RCAR ........................... no\r\n     EGLFS EGLDevice ...................... yes\r\n-    EGLFS GBM ............................ yes\r\n+    EGLFS GBM ............................ no\r\n     EGLFS VSP2 ........................... no\r\n     EGLFS Mali ........................... no\r\n     EGLFS Raspberry Pi ................... no\r\n@@ -121,8 +121,8 @@\r\n   LinuxFB ................................ yes\r\n   VNC .................................... yes\r\n   XCB:\r\n-    Using system-provided XCB libraries .. yes\r\n-    XCB XKB .............................. yes\r\n+    Using system-provided XCB libraries .. no\r\n+    XCB XKB .............................. no\r\n     XCB XInput ........................... yes\r\n     Native painting (experimental) ....... no\r\n     GL integrations:\r\n```\r\n\r\nThere were more differences than ones listed above, but those were unlikely to affect keyboard input. Next step is trying to repeat the problem using local qt build by changing the features that differ. And if that works doing the opposite in CI build. As I expected using cutter-deps and qt wayland backend numpad works. Most likely the problem is in \"XCB XKB\" or \"Using system-provided XCB libraries\". I was able to make numpad not work by setting \"-no-xkb\" for local qt build. Will try to enable it in cutter-deps. Qt 5.14 test release has been rebuilt with xkb. Numpad seems to be working. If anyone wants to confirm - it is available [here](https://github.com/radareorg/cutter/releases/tag/deploy-test-qt514),  **Describe the solution you'd like**\r\nCurrently, there is no easy way to find text in the Console widget. The feature I'd like to see is a search widget with the following features:\r\n\r\n - Good and modern UI. For example, a small box poping at the top-right corner of the widget. Check other text editors for example. e.g kconsole, vscode\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/77844017-42a9ec00-71ab-11ea-94e7-ef05e2ad1f55.png)\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/77844046-a7fddd00-71ab-11ea-9936-9f7dc4771da0.png)\r\n\r\n- Count number of results, and show the current index of shown result (5 of 14)\r\n- Regex support\r\n- Toggle: Match Case, Regex\r\n\r\nBonus Feature:\r\n- replace, for editable widgets (e.g types and structs). This can be set to disable by default or to be smart to know if the widget is writeable\r\n\r\n\r\n**Please don't invent the wheel and check Qt based open-source projects for such implementations. For example, qconsole**\r\n\r\n Somewhat related to https://github.com/radareorg/cutter/issues/2230 . If it is the same search bar widget across everything it needs to support different data models since they are completely different for decompiler widget, console widget (rich text box), table widgets and graph widget.  This way of displaying the flag and comment seems very inconvenient to me, but I'd like to hear other opinions. @dhaval0894 , we appreciate the contribution but unfortunately your current implementation provides little improvement over just opening a synchronized disassembly widget next to hexwidget. You can read the ideas for how it could look in #1471. `pxa`  suggested by radare and right side of wxHexEditor screenshot in https://github.com/radareorg/cutter/issues/1945#issuecomment-598116829 are also good ideas.  Looks like the qt changes have been merged in their dev branch but not 5.14 or 5.15. Is it a pure Qt issue or can we overcome this? @yossizap can you have a look?  The possible approaches for fix:\r\n* wait for qt patch to be included in official release - it's in the dev branch and will probably be included in Qt6 which will come out at the end of 2020. Not sure if they will merge it in 5.15 or not.\r\n* ~merge the qt 64bit patch in cutter-deps - the problem will still affect Cutter linked against system Qt and people who compile Cutter themselves~ there were a bunch of changes before in64 patch, the patch can't be applied to qt 5.14 without porting large amount of code\r\n* switching json parser - that's a significant amount of work, especially knowing that upstream Qt has fixed it\r\n* modify r2 to pass 64 bit values as string instead of integer - I have seen this being done for some of r2 json commands. Downside is that it makes the api worse for other use cases like r2pipe+python  which is probably not  be affected by this problem as python has arbitrary size integers. Maybe it could be an r2 option for how the 64 bit integers are printed in json. `:%[0-9]*\"PFMT64[du]` find 104 potential places in r2 that aren't using pj, not all of them are json printers but many are.\r\n* ~workaround the Qt json parser API and obtain the value as string and parse it ourselves - depending on Qt json parser architecture and when it performs number parsing this might be impossible.~ doesn't seem possible For now implemented solution which uses  r2 command that returns values as strings. After thinking this more I noticed that even with different Json parser or the fix in Qt json parser they would unlikely handle >64bit registers.\r\n\r\nRelated but slightly different case is 64 bit numbers everywhere else in r2<-> cutter data exchange. Created a separate issue for that #2142.  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently when opening a context menu using keyboard in disassembly widget or graph widget it opens generic widget context menu as if user right clicked outside any instructions.\r\n\r\n**Describe the solution you'd like**\r\n\r\nOpening context menu using keyboard in those widgets should open the dissaembly context menu for current position in the widget.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n https://en.m.wikipedia.org/wiki/Menu_key  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- ~I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)~\r\n\r\n\r\n**Detailed description**\r\n\r\nDefine dependency between bindings_target and generated sources. It seems that defining outputs works only for QMAKE_EXTRA_COMPILER not QMAKE_EXTRA_TARGET. Looking at qmake source confirms this.\r\n\r\nWithout this there was dependency only between bindings_target and cutter linking step which is too late. Without these changes it could fail in two ways: cpp file including generated headers is compiled before generation, generated source file is compiled before it has been generated.\r\n\r\n**Test plan (required)**\r\n\r\nTest that the bug can be repeated on your system without changes.  To repeat the error with `-j16` I enabled  ccache by adding `QMAKE_CXX = ccache g++` at the top of Cutter.pro.\r\n\r\nOn my system I also had to use python3-embed PKGCONFIG target instead of python3 because python3 was for python plugins and didn't link the python lib.\r\n\r\n* make a build directory\r\n* run qmake `PKG_CONFIG_PATH=~/bin/prefix/radare2/lib/pkgconfig/ qmake ../cutter/src/Cutter.pro CUTTER_ENABLE_PYTHON=true CUTTER_ENABLE_PYTHON_BINDINGS=true CUTTER_USE_BUNDLED_RADARE2=false`\r\n* make with -j16 or higher \r\n\r\n* if error doesn't happen empty the build directory and repeat the build second so that ccache can do it's job\r\n\r\nTest that bug is fixed\r\n* remove build directory\r\n* repeat the same steps as for repeating the bug but with the changes (do both builds)\r\n* verify that make exited with return code 0 after each build\r\n* make sure that no build files were generated in source directory\r\n* inspect the generated Makefile. It should contain rules for generating .h and cpp files which depend on bindings_target\r\n\r\n* try compiling using a build directory at different depth to verify that relatives paths are handled correctly\r\n\r\n**Closing issues**\r\n\r\nCloses #2103 \r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n @anthraxx Could you verify that the patch works on your system.?  Was able to repeat using `make -j16` and ccache. @anthraxx I see that you are one of the Arch Linux package maintainers for Cutter. Note that we are planning of switching from qmake to CMake. There are already few features like ksyntaxhighligthing and graphviz which are only implemented in the cmake build. Previously it didn't have the install target but it was recently added. If it does something badly making you difficult to prepare the package let me know.   That's not how pythonhome configuration works, it shouldn't be pointing to the executable. You should read Pythyon documentation on what pythonhome means. There is a command line argument for pythonhome, but setting python home to /usr/local will not work unless you have the same version of python as one inside Cutter appimage. That would also need  some of the python packages that are inside Appimage. Most importantly the cutter python bindings and correct Qt bindings.\r\n\r\nHere are two approaches that work for me:\r\n* Compiling cutter from source and linking against system Python. Assuming you can get all the dependencies from system package manager this is quite easy.\r\n\r\n* Using Appimage. Install matching python version using pyenv. Currently distributed Cutter contains 3.6. And then doing `~/.pyenv/versions/3.6.x/bin/python3 -m install --user package_name`.  Where `~/.pyenv/versions/3.6.x` is the path pyenv installed requested python version.  I think he meant a line separator. But it might be the user theme that causes it to look like this.\r\nAnyways he probably imagines something like this:\r\n\r\nbefore:\r\n```\r\n1\r\n2\r\n3\r\n```\r\n\r\nafter:\r\n```\r\n1\r\n________\r\n2\r\n________\r\n3\r\n________\r\n``` As for the line separators I already said my opinion - don't touch the default theme \r\naAnd don't widget specific styles-sheet changes.\r\n\r\nI am guessing that the comment by XVilka was at least partially due to having unnecessary style modifications copied from initial page. Just using default look of list widget should be fine. I agree with karliss, don't touch this :) Before making a comment I recommended going through all the changes and asking yourself if you wanted to make them. It helps catching accidental changes and unfinished or testing code you didn't want to commit. New files are usually obvious but unintentional source modifications in the same file you made intentional changes are harder to notice after the fact.\r\n\r\nThere two approaches to this. One is to use `git diff --staged` or it's equivalent in your git gui. Other is to carefully stage changes one by instead of staging everything.\r\n\r\n.gitignore is still useful for avoiding common mistakes and reducing noise while staging. I have more suggestions:\r\n\r\n1. make sure port is valid, allow only digits, and maximum value (of highest port)\r\n2. Don't show the previous connection view if no preview exists, it's confusing. \r\n3. Usually, such widgets are using combo boxes for previous values. I think the history view you created is very nice and I suggest to give it extra spices. I suggest to filter its content based on the text the user types in either IP or Port.  Check the theme color filtering in the theme editor for example. This should be possible and would make it veyr nice. It will be like a quick filter  **Environment information**\r\n* Operating System: Arch Linux\r\n* Cutter version: v1.10.2 (on master)\r\n* Obtained from:\r\n  - [x] Built from source\r\n\r\n* File format: PE64\r\n\r\n**Describe the bug**\r\nWhen opening a file and seeking to a big function, Cutter is slow to respond until the disassembly or Graph widget shows the function.\r\n\r\n\r\n**To Reproduce**\r\n\r\n![cutter_slow_graph](https://user-images.githubusercontent.com/20182642/76707355-30ce4080-66f7-11ea-937f-9eff9790e294.gif)\r\n\r\nSteps to reproduce the behavior:\r\n1. Open the attach binary in Cutter\r\n2. Seek to the function 0x140012D30 in **disassembly view**\r\n3. Change to graph in this function by pressing <kbd>space</kbd> or by right clicking and choosing Open in new graph.\r\n4. See delay in opening\r\n\r\n**Expected behavior**\r\n\r\nThe graph should be shown smoothly\r\n\r\nFile: \r\n[flagcheck.zip](https://github.com/radareorg/cutter/files/4334721/flagcheck.zip)\r\n\r\n What is the recommended analysis level? For `?t agJ` I got 2.8 seconds. Likely the same as  #1974. But in this case there aren't that many local variables so it might be something else causing disassembly  to be slow. > What is the recommended analysis level?\r\n\r\nThe default one. `aaa` Out of those 2.8 seconds 2.1 is spent here https://github.com/radareorg/radare2/blob/778c42cfa7b9783b39aeda52993fa6b4fc7161f1/libr/core/disasm.c#L4123 . Let's not write \"latest from git\" as version. If the the problem doesn't get fixed immediately it gets confusing what the \"latest from git\" after few weeks or months is. > Let's not write \"latest from git\" as version\r\n\r\nagreed :) Will add \"(version x.y.z)\"  There might be some problems due to differences between sets of supported gdb protocol features. But in those cases more specific issue should be opened.  It could contain things like:\r\n* What IDEs work best with Cutter and how to configure them\r\n* Where to get dependencies. Partially overlaps with build instructions.\r\n* Strong sides and weakness that are somewhat specific to working with Cutter\r\n  SPAM. Closing  Please read the issue template carefully. Section closing issues is intended for adding references to issues that this PR closes. Doing so in format requested allows Github to recognize it and automatically close the issue once the PR is merged. It also automatically adds the reference to PR in issue, which would saved you the last comment. Didn't know that `QObject::connect` has overload which accepts signal type as template argument. Looks nicer than static casting the member pointer expression.  Last notes.\r\n\r\nThe format for \"Closing issues\" needs to be followed exactly as demonstrated in the template. Otherwise Github will not recognize it.\r\n\r\nTypically you would name the branch somewhat related to the feature you are working on. It helps tracking what's where when dealing with multiple branches.\r\n\r\nI was going to suggest investigating if it's possible to support the options for graphviz based export modes but those are currently broken on r2 side. So it can done separately once they are fixed. good job guys! great pr and reviews  I don't like being the bad guy who says that everything needs to be redone but this point I a start to agree with others that it's probably best to implement it based on line highlighting functions in r2. Assuming it wasn't renamed ecHi and others.\r\n\r\nThat would mean better synchronization with r2 and automatic support for accessing it from code. That way If someone wrote an automatic analysis script which highlights certain lines it would work equally well in r2, Cutter or opening a project that was started in r2 in Cutter.\r\n\r\nIt might even reduce amount of code in Cutter.  Hi :) Thank you for the feedback. \r\nPlease fill our issue template so we can fully understand the detailed feedback. As of now, this issues doesn't help us solve the problems :)   Hi, thank you for opening an issue :)\r\nSeems like you didn't fill the issue template and thus, your issue is lacking important information we need to know.\r\nPlease fill the issue with al the detailed and relevant information so we will be able to fully help you.\r\nAttach files, screenshots and reproducers if you can.\r\n\r\nThanks! Please make sure to use an IP address (127.0.0.1) and not a string (\"localhost\").\r\n\r\nSince no answer was received from @maskelihileci in the last two weeks, and since crucial information wasn't provided to us and because the Issue template was not filled at all, I am closing this issue.\r\n\r\nWe will be happy to re-open this issue if you'll provide us with more information. Thank you!  Thank you! It looks fantastic :)\r\nGreat work, @dhaval0894 !  \r\n\r\n\r\n**Detailed description**\r\n\r\nThis Pull Request refactors the way hashes are fetches from radare2 and displayed on the dashboard. Now, instead of hard-coding some hashes and have their controls in the UI, the hashes will be automatically fetched from `itj` and displayed based on their name.\r\nNaturally, this PR will fetch any hash and always be up-to-date with radare2. Thus, sha256 is now automatically added to the dashboard for all files.\r\n\r\nSpecial cases are hashes like Authentihash, which only exists in `itj` for signed PE files.\r\nFor example, some binaries have Authentihash in the results of `itj`, this will make sure to display it if available, and any other hash that will be added later.\r\n\r\nBinary without Authentihash:\r\n![image](https://user-images.githubusercontent.com/20182642/75096364-98391a80-55a7-11ea-811e-818b9c7c9693.png)\r\n\r\nBinary with Authentihash:\r\n![image](https://user-images.githubusercontent.com/20182642/75096319-3c6e9180-55a7-11ea-8e69-f288fc920f6c.png)\r\n\r\nFinally, this PR upgrades the radare2 submodule and fixes a regression in which the API responsible for fetching hashes changed.\r\n\r\n**Test plan (required)**\r\n\r\n1. Open any binary before and after the change and see that all the hashes and their values are the same. Minor UI tweaks may be possible.\r\n2. Open a binary with Authentihash and see that it is shown in the dashboard. Example: https://github.com/radareorg/radare2-testbins/blob/master/pe/signature.exe\r\n\r\n\r\n**Closing issues**\r\n\r\ncloses #2064 \r\n macOS failing is not related to the PR Qt is sorting the hashes by itself. There's no standard to guarantee JSON order due to its internal structure as a hash map. Hence, I'd have to do hacky things to decide on the order, which is simply not applicable. The PR aims to be generic enough and trust the `itj` command with its content, whatever it is.  Thus, and although I agree with you that Authentihash is a niche in comparison to the resst, I'd leave it as-is.  **Is your feature request related to a problem? Please describe.**\r\n\r\nFrom now and then, people are struggling with updating the radare2 submodule. \r\n\r\n**Describe the solution you'd like**\r\nI suggest adding this to our dev documentation :)\r\n\r\n Great! Since it is documentation, you can demonstrate several ways to do so.\r\nYou can show how to update ALL submodules, add them and commit the changes. And in addition, you can demonstrate how to specifically update the radare2 submodule which is the more common task.  **Is your feature request related to a problem? Please describe.**\r\n\r\nWe currently have support for an initialization file under the name `.cutterrc`. Users can use this file to execute radare2 commands on the start of every session.\r\n\r\nhttps://github.com/radareorg/cutter/blob/dd7e01be3a4d21d4e788ec534f6ffd125372bdb4/src/core/Cutter.cpp#L228-L242\r\n\r\n**Describe the solution you'd like**\r\n\r\nAdd a section dedicated to `.cutterrc` in the documentation.\r\n\r\n  I totally agree.\r\ncc @thestr4ng3r @karliss   **Environment information**\r\n* Operating System: Any\r\n* Cutter version: Recent from Git\r\n* Obtained from:\r\n  - [x] Built from source\r\n* File format: Any\r\n\r\n**Describe the bug**\r\n\r\nCurrently, when right clicking a non-string instruction, there is the option to remove the definition of the instruction as string while it is actually a code. This shouldn't be available unless it is indeed defined as string/\r\n\r\n**To Reproduce**\r\n\r\nRight click on an instruction and see that \"Set as... -> String... -> Remove\" is available. \r\n![image](https://user-images.githubusercontent.com/20182642/74553964-1458b000-4f61-11ea-9850-303d6814bea0.png)\r\n\r\n\r\n**Expected behavior**\r\n\r\nThe option to remove the definition of a String should only be there when the instruction is defined as string.\r\n\r\n\r\n Yes, for small changes like this and if you already implemented it's better to just create a PR than trying to describe code using text. Situation is a bit different  with larger changes  where doing wrong implementation would waste a lot of time.   Thank you for reporting :)\r\nWe will need to test it further, but for the context, please know that `emu.str` is dependant on `asm.emu`, thus, will enable it when enabled by itself. So when `emu.str` changes from disabled to enabled, it will enable `asm.emu`, and when disabled, it will not disable `asm.emu`  Thank you! I didn't read the issue yet, but can you please share the exact binary file you used? It's better than compiling by ourselves because we would want to have an environment as similar to yours.  Seems like you're looking at the data section that contains the strings, and not at the code section. Use the functions list at the left to navigate between the functions. Otherwise, you can X-Ref the usage of these string by navigating to them and pressing X, either on the list of Strings or on the places you should in your screenshot   **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, the written documentation (features, shortcuts, how to build a plugin,...) is laying inside radareorg/cutter. While currently the documentation is short, we are mature and stable enough to make the first steps toward a more comprehensive documentation, and this is currently work in progress. \r\nThe upcoming documentation will likely contain more pages and text, in addition to dozens of images and screenshots. There is no need that all this data will be on Cutter repository. \r\n\r\n**Describe the solution you'd like**\r\n\r\nMove all the documentation, except the API docs, to radareorg/cutter.re \r\n\r\n Can't it work with rdareorg/cutter.re without a 3rd one? I agree. Documentation and website are two different things. We might decide to redo the website from scratch that shouldn't affect documentation. We might also want to include documentation as part of binary packages in which case it would be generated as part of build process.  Looks very good, well done! :)\r\nthank you <3  Cutter release packages are currently compiled using Qt 5.14 so I assume this problem has been resolved. Reopen this issue if it isn't.  Reproduced! Thank you very much for the report. Highly important to us. Crashes on `MainWindow::getContextMenuExtensions`  Full log from the last problem.\r\nhttps://pastebin.com/QPm6bEQ2 Debian testing has broken pyside2-dev package https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=949846 . This is not a Cutter bug.  `QApplication::instance()` will always return a QCoreApplication wrapper in PySide2.\r\nThis adds `cutter.app()` which gives you a `CutterApplication`.\r\nsee https://forums.autodesk.com/t5/3ds-max-programming/qapplication-instance-returns-qcoreapplication-instance/td-p/9035295  Thanks for the detailed answer @hexagr ! :+1:\r\nWe highly appreciate it, and it confirms our initial assumptions.\r\n\r\nIf so, it seems like our docs are covered :) If you guys feel that there is anything we can add, we'd love to have your PR and add it to the docs.\r\n\r\nThank you very much   after https://github.com/radareorg/radare2/pull/15169  Hi @vincent-gmd, just in case you missed the previous comment. It would be very helpful if you'll be able to reproduce it using radare2. You can even try with the integrated console from Cutter.\r\nThank you!  I am quite sure it is caused by inappropriate data structure use in r2 PDB loader. I looked into it when   I tested PDB auto download. Although once that's fixed it will probably hang on the next thing during analysis.  Can I take up this issue? Asking because I can't see any PRs in the past 1 month. > Can I take up this issue? Asking because I can't see any PRs in the past 1 month.\r\n\r\nAbsolutely :)  I am confirming that I will start working on this issue. Can @ps1337 assign this issue to me? @NirmalManoj So far sounds reasonable. The popup isn't great but I don't see a better option. It could be shown only for formats that support at least one of the options. One more potential improvement is having a don't show this again checkbox which saves in the default graph export options. It would require adding in settings a section with default export options and checkbox selecting if the popup dialog should be shown or the default settings used.\r\n\r\nHaving customized options in the list of formats would be weird.\r\n\r\nThird option would be extending the file save dialog by adding the checkbox and spinbox to it. I prefer use of native file save and open dialogs as much as possible. Native file dialogs provided provided more consistent experience by having the same shortcuts and other navigation controls as rest of the programs, displays bookmarked folders and any other desktop specific functionality.  Unfortunately we currently can't use native file save dialog due to the way format selection works. That seems to be at least Qt limitation by not exposing all the functionality provided by the native dialogs and not the limitation of native file dialogs themselves.\r\n\r\n There is no need to have such detailed description of code changes in Issue. You could have created a PR so that I can look at the code directly. If there are some minor changes left you can create a PR in draft state thus making it clear that isn't finished. The \"Functionality added\" part could have been Detailed description part of PR . \r\n\r\n> Doubt if this is against the standard followed in cutter\r\n\r\nIt's hard to tell without seeing code, better create a draft PR. Take a look at how other non-r2 values are stored in Configuration.cpp.\r\n\r\n>    Making the background for the transparent export as jpg white instead of black.\r\n\r\nInstead of white or black you could ignore the transparency option when not supported by file format thus resulting in background that would have been used if transparency option was disabled.\r\n\r\n> Making the popup dialog\r\n\r\nJust having it in settings might be sufficient. It's not something you would change often.  Thank you very much @ForsakenHarmony!  :smile_cat:  Your time is very precious to us, thank you for trying it again and report back :)\r\n\r\nWe tried to reproduce it on our side, but could not. I don't want to close this issue yet, maybe @romansavrulin has more info?\r\n\r\n  **Environment information**\r\n* Operating System: Any\r\n* Cutter version: Recent from git\r\n* Obtained from: Built from source\r\n* File format: Any\r\n\r\n**Describe the bug**\r\n\r\nWhen a debug session ended, Cutter seeks to offset 0x00000000. This is probably due to the fact that the IP register is changing to 0x00 and the registersChanged even is triggered.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open Cutter and choose a binary you can debug on your computer\r\n2. Start debug, click continue.\r\n3. Stop the debugging session using the stop button\r\n4. See that Cutter seek to 0x00\r\n\r\n**Expected behavior**\r\n\r\nCutter should return to either `main`, `entry0` or the last seek-location before entering debug.\r\n\r\n matching position of what? this also might be a location in other modules or dynamically loaded code. It makes more sense to return to the place before debugging began, as I suggested in the issue  **Environment Info**\r\n**System :** Windows 7 Ultimate x64 SPI \r\n**Cutter version :** Cutter\u2014v1.10. 0-x64 . Windows \r\n**Obtained From:** Downloaded From Release \r\n\r\n\r\n**Issue** \r\nWeired Font Issue Of Decompiler \r\n\r\n**Step To Reproduce .** \r\n1. Choose Any File To Analysis ( I used Default aaa)\r\n2. After Analysis Complete Try To Change Font >:-\r\nEdit > Preferences > Appearance > select font (I used Arial Font With Bold and Size was 14) \r\nEffect To Be Seen: All Font Become Larger In Disassembly and Decompiler \r\n3. Restart Cutter and Analyze Same File with Same Configuration and See The GUI \r\n\r\n**Expected Font Size** \r\nDisassembly: 14\r\nDecompiler: 14 \r\n\r\n**What We get .** \r\nDisassembly:  14\r\nDecompiler: SMALLER THAN WE APPLIED LAST TIME  // ISSUE  **Environment information**\r\n* Operating System: Any\r\n* Cutter version: Latest from git\r\n* Obtained from:\r\n  - [x] Built from source\r\n\r\n* File format: ELF64\r\n\r\n**Describe the bug**\r\n\r\nCutter is freezing when trying to seek to a referenced address using either Disassembly and Graph widgets\r\n\r\n**To Reproduce**\r\n1. Open the attached binary in Cutter\r\n2. Seek to main\r\n3. On the 0x00001157 you'll see the following instruction\r\n```\r\n0x00001157           lea     rdi, [0x0000b004] ; const char *s\r\n```\r\n4. Double-click on the referenced address (0x0000b004) to seek to it. The address contains the string \":(\"\r\n5. Cutter will freeze\r\n6. After few minutes the following messages were printed to the terminal:\r\n\r\n\r\n>Too many references here. Weird behaviour expected.\r\n>QDragManager::drag in possibly invalid state\r\n>QXcbClipboard: SelectionRequest too old\r\n \r\n\r\n\r\n\r\n**Expected behavior**\r\n\r\nCutter should seek to 0x0000b004 flawlessly\r\n\r\n**Attached file:**\r\n\r\n[md15.zip](https://github.com/radareorg/cutter/files/4006965/md15.zip)\r\n\r\n\r\n\r\n > How does cutter ends up there when double-clicking on reference to string?\r\n\r\nGreat question. I think the problem is the output from r2, we probably expect something and got something else. See this error \"Too many references here. Weird behavior expected.\". I remember this part from our code. It assumes that only one reference exists\r\n\r\n> I added some breakpoints and loadCurrent graph seems to be triggered more than once\r\n\r\nweird\r\n  @AxelPotato I want to thank you for the time you take to open issues and report to us the problems you experience. This is highly important for us! \ud83d\ude0a\r\nYour rock!   This will ask our contributor to tell us how they obtained their copy of Cutter Sorry, I think that's too much to ask the users and will make some to skip filling issues. Except few days during after-release period, we don't really have conflicts with different versions. It stabalizes  so (1) should be fixed probably and (2) is fine to keep as is. \r\n\r\n>I think they do\r\n\r\nthat's problematic. I don't understand why. Because it happens a lot that malware is using anti-debug tricks in which they check their memory for CC instructions. So in order to avoid this, analysts usually disable their breakpoints in the ant-debug function and restore them when finish. Keeping the int3 ( CC) instruction on the debugged program is meaningless and miss the point. \r\n\r\nIn x64dbg, iirc you can set \"action\" for the bp and tell it specifically to do-nothing when reaching it, only log, or run command. But when disabled it should be disabled for real  on one hand, I think there is no need for asm.lines since we don't honor them\r\nNot in the disassembly widget and not in the x-refs. On the other hand, just yesterday I wanted to copy pate a bunch of instructions to put in a blog post I write, and disappointed to find that I can't copy the instructions with the jump lines. Thus, my readers can't see them. \r\n Another possibility is that it can be used by the people that use the console widget. We can change the description of the checkbox maybe  Are we waiting for macOS people?  But it's totally planned :) We are working on implementing a loader for shared libraries, similarly to what OllyDbg had in the old days   Does the console widget (or the running terminal) says something?   works here :)   No usage examples in the Help nor in the PR. Expect the user not to understand how to use it  Hi! thanks for the suggestion :) \r\nCan you share more information about how you want it to look? If you'll find some examples and share screenshots from other applications it will be great!  Thank you. This is a nice idea :)\r\nAnd thanks for taking the time to be creatve :P Having a mechanism for visually displaying ranges and reacting to interactions with them would be useful for many features so it would be valuable to create good reusable infrastructure for that. Here is a rough proposal of the code for that could be structured.\r\n\r\n* HexdumpHighlighter - interface for module which can provide the highlighted ranges to hexdump widget and reacts to events\r\n  * method: `getHilightRanges(memoryRange) -> [HighlightRange]` mehtod which returns list of HighlightRanges which intersect with requested memory range. Called by hexdump widget when position changes. Returns info about memoryRange instead of all executable becuse they could be dynamically calculated.\r\n  * signal: `highlightsChanged` indicates when the highlights changed without change in position.\r\n  * method: onRangeClicked(hilightRange, mouseEvent)  called by hexdumpWidget when a hilightRange returned by this  HexdumpHighlighter is clicked. Allows implementing interaction.\r\n  * method: `onRangeContextMenu(highlightRange, contextMenuEvent)` called when a range is right clicked or context menu is triggered using keyboard, similar to onRangeClicked\r\n  * method: `onRangeXXX`  called for other kind of events if necesarry\r\n*  HighlightRange - structure describes single highlight range\r\n   * memoryRange\r\n   * id - can simplify highlighter code for reacting to  onRangeClicked and other events\r\n   * visual style\r\n   * tooltip\r\n\r\nIdeas for highlight style properties\r\n* background color\r\n* font color\r\n* colored underline\r\n* corner marker\r\n\r\nMultiple instances of HexdumpHighlighter could be added to hexdump widget.\r\n\r\nIdeas for uses of this mechanism\r\n* Manual highlighting by user - #1945\r\n* data structure visualization\r\n* Diff visualization #1104\r\n* Click for jumping to address #1411 #1470\r\n* Comment and flag displaying within hexdump widget\r\n* plugins\r\n* stack visualization, marking the address pointed by register  \r\n**Describe the bug**\r\n\r\nDo to the new changes in Debug and the creation of new widgets, some Debug widgets such as processes and threads are opened when not in debug mode. \r\nThis especially happening when using Cutter's version with debug for the first time due to changes in settings. \r\n\r\nAll debug widgets should be disabled and prevented from showing when not in debug mode. \r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Revert to a version without debugging support\r\n2. Open cutter, reset settings, move widgets around and close cutter\r\n3. Build the newest version of cutter\r\n4. Open a binary in Cutter and you might see that some debug widgets are shown. \r\n\r\n**Expected behavior**\r\nAll debug widgets should be disabled and prevented from showing when not in debug mode. \r\n\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n  **Describe the bug**\r\n\r\nIn Cutter this is impossible to patch with multiple instructions even though the preview shows the multiple instructions.\r\n\r\nHere I am trying to patch an address with multiple instructions. This should override the following instructions as well (see `\"wa nop;nop;nop\"`). As you can see, the preview shows the values of multiple instructions\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/70979962-29c57100-20bb-11ea-9d98-d15571ccaedd.png)\r\n\r\nBut in the results, it probably truncates the \";\" from the input and ignores everything after it\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/70979976-2f22bb80-20bb-11ea-8013-0d533a5e78b2.png)\r\n\r\n\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open a binary in write-mode\r\n2. Right click an address and choose Edit -> Instruction\r\n3. Concatenate multiple instructions using `;`\r\n4. See that everything after the first `;` is ignored\r\n\r\n**Expected behavior**\r\n\r\nAll the instructions should be applied and override if needed\r\n\r\n**Additional context**\r\n\r\nWhoever implements this, please pay attention to prevent code injection using `;`  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, there is no easy way to re-analyze a function.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA one-click solution to re-analyze a function. This will basically wrap `af- @ <offset>; aF @ <offset>` or  `af- @ <offset>; af @ <offset>`, or any other suggestion if available.\r\n\r\nThis is very useful API that can be used by different integrations and plugins. For example, this can be used after patching a function\r\next or screenshots about the feature request here. -->  Currently, we have two menus for debug. Should they be merged?\r\n\r\n- Debug windows, under Windows -> Debug... \r\n![image](https://user-images.githubusercontent.com/20182642/70970752-e44b7880-20a7-11ea-9ea2-1ea7144da238.png)\r\n\r\n- Debug operations, under Debug\r\n![image](https://user-images.githubusercontent.com/20182642/70970781-f3cac180-20a7-11ea-8e16-ab18f29c6667.png)\r\n\r\n\r\n\r\nOn one hand, debug windows are related to the Windows menu since they decide which widgets are visible. On the other hand, there's a dedicated main menu for Debug. Intuitively, where will the user search for their desired widget? @karliss @thestr4ng3r @xarkes what do you think? :)  @xarkes Are you against having it in both places?\r\n\r\n\"Windows -> Debug -> ,,,\" as well as \"Debug -> Windows -> ...\"  Retest after radareorg/radare2#17251  Great! thank you :)   I think @xarkes has started something? \r\nhttps://github.com/radareorg/cutter/pull/1905\r\n\r\nIf you will consider your solution a temporarily workaround then fine, but if your think that Antide's solution is better than we should decide how to proceed Okay then, works for me so I'm fine with merging :)\r\n@karliss I think it is good to be merged, let us know if something else is broken after this PR  Great! I am closing the issue then. Please let us know as soon as you find any other problem. :)\r\nThank you!  Same here. F2 was a problem a long ago but now I can't reproduce on Arch64  Works great! Thank you :)  thanks for the quick fix ups! :) Please do not forget the functions documentation  Great. Thanks! :)  Might be fixed during #2084   The code looks good. Will test later, hopefully -- tonight :)  Thank you! I tested and it works great :)\r\nI think that duplicating this code isn't required, instead, I'd be happy if you combine the code from both Graph and Disassembly to the one place it fits the most - DisassemblyContextMenu @v3ctor let us know if further instructions are needed - we will be happy to help :)\r\nAlso, please note the merge conflicts in DisassemblyWidget.h @v3ctor we will release Cutter tomorrow. I really hope to have this feature there, it will be so great!\r\nIf possible, please take the required actions to finish it by then - if no, please let us know :)\r\n  Great PR, thank you!\r\nSince Disassembly and Graph should have the same behavior while pressing <kbd>Enter</kbd>, there is no reason to keep the same code at both places. This is why @xarkes suggested to put it in the same class  Merging this PR, well done @Properrr! Please continue improving the graph navigation with your idea - looking forward to it :)\r\n  CC @trufae before the release  Why?  In case of GHA it will be slower - we have 4-5 parallel builds in Appveyor.\n\nOn Sun, Jul 26, 2020, 17:45 Surendrajat <notifications@github.com> wrote:\n\n> To keep all CI stuff at one place on GitHub actions. No significant gain\n> right now but since actions are deeply integrated(Deploy keys, etc.) within\n> the GitHub ecosystem, I see it as a plus if future CI stuff is contained\n> within actions.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/issues/1906#issuecomment-663966690>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABRT7M6CYA37JWMM3TKTR3R5P3MJANCNFSM4JX6DPGA>\n> .\n>\n  what would you do then?   Whoever merges, this should not be squashed  Finally! I'm really excited! \r\nGood job @yossizap @fcasal! \r\n\r\nI'm merging \r\n:)\r\n@radareorg/cutter please be aware and keep an eye out for bugs in the feature  **Detailed description**\r\n\r\nA fairly simple widget based on ThreadsWidget that shows all child processes with `dp` and switches between them with `dp=` when debugging. This is primarily useful for kernel debugging and following forks. Since it's not really required in most debug sessions, the widget doesn't popup with default settings, you have to toggle it in the debug window menu.\r\n\r\n**Test plan (required)**\r\n\r\n- Attach to WinDbg and switch between processes that are running in the kernel.\r\n- Attach to one of the processes on your system and switch to a child, example program:\r\n\r\n##### Linux:\r\n\r\n```\r\nvoid child_func() {\r\n    while(true) {\r\n        sleep(1);\r\n    }\r\n}\r\n\r\nint main(int argc, char *argv[])\r\n{\r\n    sleep(10); // time to attach\r\n    switch (fork())\r\n    {\r\n        case -1:\r\n            perror(\"fork\");\r\n            exit(1);\r\n        case 0:\r\n            child_func();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    int status;\r\n    wait(&status);\r\n}\r\n```\r\n\r\n##### Windows:\r\n```\r\n#include <Windows.h>\r\nint main(int argc, char *argv[]) {\r\n\twchar_t* wString = new wchar_t[4096];\r\n\tMultiByteToWideChar(CP_ACP, 0, \"C:\\\\Windows\\\\system32\\\\notepad.exe\", -1, wString, 4096); // or the path to your program\r\n\r\n\tPROCESS_INFORMATION ProcessInfo;\r\n\tSTARTUPINFO StartupInfo;\r\n\tZeroMemory(&StartupInfo, sizeof(StartupInfo));\r\n\tStartupInfo.cb = sizeof StartupInfo;\r\n\tif (CreateProcess(wString, NULL,\r\n\t\tNULL, NULL, FALSE, 0, NULL,\r\n\t\tNULL, &StartupInfo, &ProcessInfo))\r\n\t{\r\n\t\tWaitForSingleObject(ProcessInfo.hProcess, INFINITE);\r\n\t\tCloseHandle(ProcessInfo.hThread);\r\n\t\tCloseHandle(ProcessInfo.hProcess);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tprintf(\"process creation failed\\n\");\r\n\t}\r\n        return 0;\r\n}\r\n```\r\n\r\n**Notes**\r\n\r\n~Requires further debugging for these issues, linux only(wip):~\r\n~- Forks don't work with local debug, you'll have to attach to a running process.~ Fixed\r\n~- When working with an attached process the children that you will attach to will also instantly die.~ Fixed\r\n- Windows dp= works but will switch you back to your process after stepping. Working on fixing it but it shouldn't matter on cutter's side.\r\n\r\nOther issues:\r\n- WinDbg disassembly isn't properly loaded without having the kernel binary but you can see the processes and switch between them(See #1886).\r\n\r\n![Untitled](https://user-images.githubusercontent.com/5659696/69903721-33e63080-1395-11ea-94d2-45a124ec8fc7.png)  **Detailed description**\r\n\r\nAdded stdin redirection for locally debugged unix processes using a ComboBox in the console widget that lets you switch between r2 commands and stdin. Had to create a special combobox to prevent the popup from leaving the screen seeing that the console widget is usually at the bottom.\r\nI decided to place it in the console widget instead of a new widget because it already displays the debugee's stdout and stderr.\r\n\r\nWindows console apps already create their own popup console window that shows stdout/err and lets you write into stdin.\r\n\r\n**Test plan (required)**\r\n\r\n- See that the combobox doesn't appear in windows/remote debugging/attaching.\r\n- Test with cat or ls - sending bytes to stdin will work like piping so you can enter a path\r\n\r\n![stdinredirect](https://user-images.githubusercontent.com/5659696/69765015-3a449480-116a-11ea-9665-5a948bd1912c.png)\r\n Using this simple echoing program\r\n\r\n```\r\n#include <iostream>\r\n#include <string>\r\n\r\nint main() {\r\n    for (std::string line; std::getline(std::cin, line);) {\r\n        std::cout << line << std::endl;\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\nSeems like the feature works, sometimes, but not stable. This is probably not related to the feature itself but for the Debug in general. I couldn't enter more than one input while it should be infinite.\r\n\r\nAlso, will be nice to have some indication when the program is waiting for an input. Not sure it is possible though,\r\n\r\n\r\nAnother problem, which is probably not related as well, is that there is no way to provide command line args for the program (originally I wanted to test with `cat -` ) >Also, will be nice to have some indication when the program is waiting for an input. Not sure it is possible though,\r\n\r\nWill require tracing a specific syscall with ptrace, it's possible but it would only be printed to the console.\r\n\r\n>Seems like the feature works, sometimes, but not stable. This is probably not related to the feature itself but for the Debug in general. I couldn't enter more than one input while it should be infinite.\r\n\r\nI'll look into it.\r\n\r\n>Another problem, which is probably not related as well, is that there is no way to prived command line args for the program (originally I wanted to test with cat - )\r\n\r\nIt's a planned feature for a local debug dialog, didn't get to it yet.  Sorry for getting to the issue only now, thank you for your nice words! Appreciate it :)\r\n\r\nCC @thestr4ng3r   > After opening Cutter redo history is not empty, weird\r\n\r\niirc when r2 performs analysis it changes the seek It would be nice to clear the history after the filer is opened and the analysis is done. The radare2 command to do so is `s-*` Overall looks good and works great! What about showing a tool-tip with the keyboard shortcut per each button?\r\n\r\nOnly one thing, disabled entry is almost invisible on Dark theme\r\n![image](https://user-images.githubusercontent.com/20182642/70076739-18cf2700-1608-11ea-89d1-a7c8445cc2d1.png)\r\n  **Is your feature request related to a problem? Please describe.**\r\n\r\nIn 9ae170b I added WinDbg to the remote debug dialog box thinking that it will support all windbg debug modes over pipes with some fixes. After closer inspection, it turned out that R2's WinDbg implementation only supports kernel debugging and adding regular remote windbg won't be trivial. I'll try working on it but it's in a lower priority.\r\n\r\nSince opening this type of remote debugging will just open a completely different binary(windows kernel), I was wondering whether there's a workflow in which people debug window kernel binaries after loading them through ida/r2. \r\nOtherwise, I would just move this debug interface to Cutter's launch dialog for people to directly open windbg for kernel debugging. I wasn't aware of this at the time of writing, but it turns out that the WinDbg implementation supports listing all of the processes currently running in the debugged kernel with `dp` and then attaching to one of them with `dp=`. \r\nWe could use the launch dialog for direct kernel debugging while \"remote connect\" will search `dpj` for our exe's name(fail if's missing) and attach to the specific exe with dp=. A more advanced user could obviously jump between processes but this sort of dictates a more sane workflow that we could also add rebasing to. Also will need some changes/improvements after network KD support is merged https://github.com/radareorg/radare2/pull/17340  Caused by https://github.com/radareorg/radare2/commit/54d503f7c618ad0edddf1ac69e6769b266299531  Thank you! and sorry for taking the time to merge it. This is a fantastic addition :)  Hey, sorry for the delay! Will check it as soon as possible.\r\nMeantime, I find the naming quite confusing. Without looking too deep on the implementation, I think that the \"BB\" in the Instruction Hilighter is redundant, since it is not necessarily part of a basic block.\r\ni would separate BasicBlock highlighter from Instruction Highlighter, even if they will be based on a mutual class (with a more generic name). What do you think?\r\n\r\nAlso, I'd like @optizone & @karliss to look at it as well yeah sounds good :)\n\nOn Sun, Nov 17, 2019, 00:30 Leopold Kozio\u0142 <notifications@github.com> wrote:\n\n> I'm not sure about part with mutual class, but separation of\n> BasicBlockHighlighter and InstructionHighligter sounds good to me. It could\n> hold additional information about size of instruction, this could be handy.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/pull/1879?email_source=notifications&email_token=AEZ7M4XPAEDLQK3EW2RUYATQUAN2FA5CNFSM4JNPLAJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEEHVE6Y#issuecomment-554652283>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AEZ7M4QGUYY465U3DPSTHATQUAN2FANCNFSM4JNPLAJQ>\n> .\n>\n  Thank you for your ideas!\r\nIn the future, please separate the suggestion to different issues. This way we will be able to give better feedback.\r\n\r\n> Please add \"Go to the end of file\" In Disassembly window\r\n\r\nI am not sure it is usable enough to include it as a feature in Cutter. Currently, you can use simply seek to \"$s\" or to \"entry0+$s\" using the visual navigation text box at the top.\r\n\r\n> Also would be great if you implement this idea to \"Set to Data\" itself. \r\n\r\nIn my opinion, this is too risky since we don't have \"undo\". Pressing \"Enter\" will make all the following bytes as data and we don't want to take this risk. I highly appreciate the issue you open and the time you invested in giving these suggestions. \r\nAt this time, I would prefer to close this issue since these suggestions won't be implemented. You can always implement them as [plugins ](https://cutter.re/docs/plugins.html). \r\n\r\nThank you again and please don't hesitate to open new issues with more ideas :)  Your issue is lacking of crucial information. Please fill all the required\ninformation from the template.\nSpecifically, what binary did you use, what steps did you take, where did\nyou begin the emulation, etc\n\nAlso, please notice that the feature you test isn't Debugging, but\nEmulation\n\nOn Tue, Nov 12, 2019, 09:55 Meng-YC <notifications@github.com> wrote:\n\n> [image: \u622a\u5c4f2019-11-12\u4e0a\u53488 51 19]\n> <https://user-images.githubusercontent.com/56018598/68632466-99c76100-0529-11ea-98d0-c2493dd3f44d.png>\n> In this picture, the return of 0x100000f should be returned to main, but\n> returned to 0x00000000\n>\n> [image: \u622a\u5c4f2019-11-12\u4e0a\u53488 54 14]\n> <https://user-images.githubusercontent.com/56018598/68632588-05113300-052a-11ea-83f4-3d1b341f7518.png>\n> How can I fix this?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/issues/1875?email_source=notifications&email_token=AEZ7M4XMGKBLOI3AKHHG4MLQTH5I5A5CNFSM4JL4W3L2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HYR42DQ>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AEZ7M4TTAEMTQMG4PULXWGTQTH5I5ANCNFSM4JL4W3LQ>\n> .\n>\n Sadly, without the relevant information, we can't respond and support this issue. Moreover, as it seems - even if there is an issue, it is related to our parent-project, radare2.\r\n\r\nWe appreciate the time you invested in opening a new issue report this. At this time, I will close this issue. Please don't hesitate to re-open it with more information and open new ones, following our template for issues. \r\n\r\n\r\nThanks!  **Detailed description**\r\n\r\nThis PR adds support for gdbserver and windbg remote debugging. According to [1246](https://github.com/radareorg/radare2/issues/1246) and the wiki the windbg implementation only supports connecting to a path/pipe so only \"WinDbg - Pipe\" is available in the remote connect dialog for now.\r\n\r\n**Test plan (required)**\r\n\r\nFor both - try invalid parameters, they should notify the user that cutter failed to connect or raise an error pointing to an issue in one of the parameters.\r\n\r\nGdbserver:\r\nOpen `gdbserver :1234 /path/to/program` and connect through the remote debugging button. \r\n\r\nNote: There's is an issue with suspending background tasks(looking into it @ [15415](https://github.com/radareorg/radare2/issues/15415) in gdbserver so just step/continue with breakpoints or switch threads to see that it works for now.\r\n\r\nWinDbg:\r\n- Run `.server npipe:pipe=PipeName,IcfEnable` in WinDbg to start a server - this caused some weird behavior in r2, looking into it.\r\n- https://radare.gitbooks.io/radare2book/content/debugger/windbg.html - haven't set up a VM yet, would appreciate it if someone else who already has a debugging setup would try it with r2/cutter and report issues.\r\n > Entering correct address with a port that doesn't have gdbserver caused a connection error as I expected. Entering something that isn't a valid ip address like 1234 with port 1234 causes cutter to hang. If not a validation error I would expect at least a connection error.\r\n\r\nSystem? Rebuilt everything and tested again on linux - 1234:1234 (for some reason 1234 is a valid ip according to Qt, some valid form of IPv6 representation?) shows the failed to connect message, aaaa:1234 shows invalid ip, 127.0.0.1:123456 shows invalid port etc. No hangs, which shouldn't really happen since the connection would fail.\r\n\r\n>Not a priority. After failing to make a connection and doing a refresh disassembly shows 'invalid'.\r\n\r\nManaged to replicate, will look into it.\r\n\r\nAre you sure that you have updated your git subrepos and rebuilt r2? I'll test windows again now to see if this is an OS specific issue.\r\n\r\nEdit: Tested on windows - It does hang for a moment on windows since r2's windows implementation takes more time attempting to connect. The \"connection failed\" window appears after that short period of time though. \r\nI could add some type of progress wheel window to indicate that we are waiting for a connection attempt. Tried a lot of scenarios now and it seems that connecting to an already existing port(22 for example) of a different program or an already connected gdbserver will make cutter hang. I'll look into it on r2's side.\r\nDidn't get any issues with actually invalid input though. Ubuntu 18.04 Qt 5.12.1 here but it shouldn't really be different, probably missing something when attempting to replicate. 0.0.4.210 is a conversion from decimal 1234 to dotted quad format, so that sheds some light on it. Ping in ubuntu doesn't do that, it's probably caused by different networking settings in the distros. No issue with that IP on my side though, immediately disconnects.\r\n\r\nI guess this is a part of fixing gdbr_connect not timing out earlier for unresponsive sockets that I already plan to do for existing sockets. \r\n@GustavoLCR What do you think of the changes?\r\n @GustavoLCR did you have a chance to test with windbg? Need to know whether I should set it up on my own machine Thanks for testing! They are highly likely r2 issues, I'll try to look into this week.\r\n\r\n>cutter will freeze if i try to do anything while it's continuing\r\n\r\nwindbg's continue isn't wrapped with cons sleep probably @karliss can you please test those resolvable addresses again? Should be breakable now with the new debug task dialog. There isn't really a way to automatically detect that the socket isn't valid since gdbr_connect has to wait for the handshake.\r\nI tested with `nc -l -p 12345`.\r\n\r\nI noticed that after a lot of retries gdbr_connect can freeze on r_socket_connect_tcp but at least there's an indication that you're waiting for it to break. I'll look into fixing it on r2's side but it shouldn't block merging this branch.\r\n\r\nAlso, gdbserver breaking for step/continue works now for testing purposes. >There is a second thread for r2task doing connect. \r\n\r\nWhich is stuck on `r_socket_connect_tcp` or somewhere in `gdbr_connect`/`read_packet`?\r\n\r\nTry with `nc -l -p 12345` instead of that odd address. I am not sure why those addresses are resolvable on your system but I am guessing that r2 can't accomplish a tcp handshake with them since there's nothing on the other side.. Hopefully this r2 update will fix it, tcp timeouts didn't actually work so now it should take 1 second for it to break instead of an unspecified time. I don't really have a way to replicate the behavior you are getting so I would appreciate it if you could take another look. \r\nIf this doesn't work I can use Qt's sockets to verify the connection before connecting with r2. Thanks, merging :)  I think this is already implemented\r\nhttps://cutter.re/docs/building.html#cmake-building-options  Need to get it in working state before anything can be merging. Previous attempt wasn't very successful. Anyone is welcome to try. At point it's probably best updating to latest version available as with recent Qt changes there aren't any LTS versions anymore. 5.14 has some HighDPI improvments.  Appimage and windows builds work. I will need help with macOS build. It is available here https://github.com/radareorg/cutter/releases/tag/deploy-test-qt514 Ok, this needs to be merged in proper order starting with cutter-deps-qt. macOS failure was homebrew deciding to take 40 minutes, lets see how it goes for 55d4ee3ce401cc70f550e0d070f2056d012f8548\r\n\r\nDocumentation failure might be related to python rebuild although it wasn't a problem in earlier builds.  Hi @daleaguil! Thank you very much!\r\nI understand the reason for your Pull Request, adding a dot at the end of this sentence looked natural to me as it is for you now.\r\n\r\nBut think about it for a moment, do you really think this dot should be there? That's a very complicated question, I know. So many reasons for-and-against adding this dot. We struggled with this dilemma a few months ago as well. Our dev team discussed this problem on our Annual Punctuation Hackathon in the last August and eventually decided not to add dots anywhere on our code. I bet you can understand why,\r\n\r\nPlease, don't hesitate to send more useful Pull Requests and we will be happy to review them for you.\r\n\r\n**At this time, and due to our discussion about Punctuation rules on Cutter, I will close this Pull Request.**\r\n\r\n_p.s I wish you luck in Hacktoberfest and would be happy to donate T-Shirts if needed._  I am not sure that our disassembled output can be compiled due to the information the compiler and other components modified, added or removed. \r\nFor the meantime, I suggest you dump the program using radare2 commands such as `pd <size> @ <address>`  is this still a draft or we can start checking? :) When pasting the copied information there are no NewLines and no formatting. These should be copied as well  I made some changes to the view, can you check now? @oliv3r   Will check this PR later today on windows and Linux. Will merge if the status is OK. unless someone think otherwise  Worked, very nice :) Of course it's only the start in terms of UI colors, etc. But in general, I liked it very much.\r\nAlso, no need to separate the Continue button from the Suspend. Because these two can't be accessible at the same time so they better be on the same spot and toggled. (show \"suspend\" when program is runnning, show \"Continue\" when program is suspended)  I am also experiencing weird behavior when using [Unicode combining characters](https://en.wikipedia.org/wiki/Combining_character) such as in this:\r\n\r\nC\u0331\u0319\u0333\u0332\u0347\u031a\u0304\u0304\u0349l\u031d\u0329\u0329\u031d\u033a\u035e\u0320a\u031d\u0304\u0349\u0329\u0346\u031fu\u0305\u033b\u0348\u033f\u0318\u031e\u032ad\u0304\u031a\u031d\u0305\u0346i\u031a\u0347\u0319\u030e\u0348o\u030e\u0318\u0304\u031f\u0304\u030e\r\n\r\n Might be a bug in Qt font rendering itself.\n\nOn Fri, Oct 25, 2019, 11:09 AM zckun <notifications@github.com> wrote:\n\n> Couldn't repeat it on my computer. The bug might depend on font,\n> platform(macOS), Qt version.\n> @ZCKun <https://github.com/ZCKun> Did you used the official release? What\n> font did you use? Please test what happens with other fonts and tell us if\n> the result is the same.\n>\n> [image: symbols_fail]\n> <https://user-images.githubusercontent.com/7101031/67423946-dca6b080-f5dd-11e9-80af-f098c010c520.png>\n> I changed the font and it looks pretty good.\n> [image: image]\n> <https://user-images.githubusercontent.com/21230213/67540417-dcaacb80-f717-11e9-9b68-f3bf004e4a67.png>\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/issues/1855?email_source=notifications&email_token=AABRT7ML3WBYVSYH6LRFYDTQQJPODA5CNFSM4JDP3AN2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECHBHYQ#issuecomment-546182114>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABRT7KLIZLJQVKX7TUJ4GLQQJPODANCNFSM4JDP3ANQ>\n> .\n>\n  TODO for next time (open issues after the merge):\r\n- [ ] Visible input validator to notify on bad input (such as garbage offset \"xgdfksak4_SA\"\r\n- [ ] Proper encoding handling\r\n- [ ] More write operations\r\n- [ ] Refactor the whole thing. A lot of code duplication, can be simplified\r\n- [ ] Change `cmdRaw` and make it as good as `cmdRawAt`. Then, use `cmdRaw` in `cmdRawAt` @ITAYC0HEN Did you tested that all string commands still work? Depending on how r2 command parser works there might be some problems. Fixed all the issues, sorry, I blindly moved them to use the `cmd @ addr` format which isn't supported by CmdRaw.\r\nReverted to regulare `cmd(...)` now, but we still have the problems of command injection Add documentation\r\n![image](https://user-images.githubusercontent.com/20182642/77003116-6710f780-6965-11ea-8c0b-95a3217d3a15.png)\r\n  sure! :) don't hesitate to add Cutter and send a pull request to the repository  :)\r\nin addition, you can also put radare2 there   worst care scenario - the PR will be rejected. otherwise, we will get another reference to our project :)\r\n  thank you :)   **Environment information**\r\n* Operating System: Arch Linux\r\n* Cutter version: Recent Debug branch\r\n* File format: Any\r\n\r\n**Describe the bug**\r\n\r\nWhile in debug mode, and clicking the Continue\\Run button. The debugee is being executed and runnning. But the interface of Cutter itself froze and is not responsive.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open the Cutter binary in Cutter. Analyze quickly. you can stop the analysis in the middle\r\n2. Start Debugging\r\n3. Press the Continue button\r\n4. See that the new Cutter (the debuggee) is running, but the interface of the original Cutter (the debugger) is not responsive.\r\n5. Close the debuggee and see that the debugger is now back to be responsive\r\n\r\n**Expected behavior**\r\n\r\nThe interface should keep being responsive\r\n\r\n\r\n**Screenshots**\r\n\r\n\r\n\r\n\r\n CC @yossizap @xarkes   can I feel free to push to this PR if I have time?   Thanks for the PR! :)\r\nI will look at it tomorrow. meantime - can you please re-write the test-case with a specific example? It would be great if you will even attach a binary and write some short steps so we can test it better. \r\n\r\nThanks! > After manually requesting refresh threads appeared\r\n\r\nIn my case the threads were shown immediately.  Tested again. Looks very good to me. I'd be happy to see the column sorting additions and the filters. Other than that, it is good to go :) what do you mean by \"opening outside debug mode\"?\r\nalso, this is a pull request to merge to Debug branch so anyway this is not a user-facing branch. Thus I believe that this state is a good progress anyway so as long as all the issues are documented and on the Debug roadmap, don't see a reason to wait more   > I'm wondering if generally this change shouldn't be done in the cmdRaw API directly\r\n\r\nMaybe even on radare2 side. no?\r\n@xweskingx what do you think? @xweskingx what is your suggestion?   Best page, visually, to describe how to build Cutter is this:\r\nhttps://cutter.re/build/\r\n\r\nThis page is linked from cutter.re and from our README page. So people are more likely to visit it.\r\n\r\nWith all due repsect, our \"/docs\" pages looks awful. Design-wise and in terms of navigation and user friendly. The \"/build\" page is much prettier and with decent regular markdown.\r\n\r\nMake sure to update it accordingly. > I would expect https://cutter.re/build/ to be automatically generated from the .rst file, isn't it the case?\r\n\r\nIt isn't. Moreover, I voted in the past to remove this rst page   that was quick, thanks! can you share a screenshot of the new placement?   **Is your feature request related to a problem? Please describe.**\r\n\r\nThe \"Show bytes\" setting is one of the most useful and popular settings we have, but currently, it is not as visible because it is in the bottom of the Metadata tab on Preferences dialog.\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/66717028-34bf0500-eddd-11e9-94c2-c9e86108e15d.png)\r\n\r\n\r\n**Describe the solution you'd like**\r\n1. Put it in a more visible place as the top of the list or in `Style` tab which is more suitable there\r\n2. Change the label from \"Shwo bytes\" to \"Display the bytes of each instruction\"\r\n\r\n\r\n  **Is your feature request related to a problem? Please describe.**\r\n\r\nNot all of our users are familiar with .cutterrc (and even not with .radare2rc). There is no comfortable way to edit it from inside Cutter. The use of .cutterrc can complete the settings we don't expose in the UI.\r\n\r\n**Describe the solution you'd like**\r\nI suggest exposing a simple text editor widget to edit the .cutterrc file. When opened, the widget will fetch the content of .cutterrc and display it in the text editor. Then, can be updated and saved to the file.\r\n\r\nIt would be nice to have:\r\n1. Syntax highlighting (in case it looks good with r2 commands)\r\n2. Some examples of useful settings that the user can set\r\n For syntax highlighting look for example in hexdump widget right side panel. \r\nIt would be nice to have some kind of path indicator or button to help opening it externally\r\n\r\nNot strictly necessary but some kind of autocomplete for `e` variables would be very cool. There is a r2 command for listing all of their names and descriptions. Indeed I have several points to keep in mind.\r\nIt is not as simple as it looks, you can implement this in parts. Please make sure to create the following widgets flexible so they can be used in other places in Cutter as well. Make sure to create all the helper functions you need globally, as well as proper using of class, subcllassing and inheritence.\r\n\r\n## Order of search\r\nDon't only check for `.cutterrc` in the home folder. In addition, check inside all the standard locations for the files. See how it is implemented in plugins load:\r\n\r\nhttps://github.com/radareorg/cutter/blob/867631d27ad6caf7ab52c8ff1032b8c010bbbcb7/src/plugins/PluginManager.cpp#L92-L98\r\n\r\ne.g it will search in `/home/username/.local/share/RadareOrg/Cutter/plugins`, `/usr/local/share/RadareOrg/Cutter/plugins`, `/usr/share/RadareOrg/Cutter/plugins` ...\r\nThis will help it support multiple locations and OS.\r\n\r\nMultiple initialization files can be loaded.\r\n\r\n## Test on Linux, Windows, and macOS\r\nMake sure to test this feature on multiple OS, ask us for help if you don't have all of them, we can help with executing on our dev machines.\r\n\r\n## Useful Commands\r\n\r\nMake a list of useful eval commands to use. You can discuss it in with the devs and with a community. You can have them all commented or as place holders.\r\n\r\n## Syntax Highlighting\r\nI am not sure how good radare2 handles syntax highlighting, this is not a must since radare2 shell scripts aren't complicated. But it could be nice, we need to test how it looks like.\r\n\r\n## Documentation\r\nMake sure to add it to the user documentation. Document the existence of .cutterrc and the usage of the dialog.\r\n\r\nSee related issue: #2063\r\n\r\n## Editor UI\r\nI suggest to add it to the Preferences widget. I imagine the UI for this feature as similar to IDE's preferences editor. Here is a sketch I made:\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/77188907-6ac88980-6adf-11ea-9f96-6c04818f0467.png)\r\n\r\nAs you can see in this sketch I made, two items were added to the left pane. The first is a visual configuration editor. The second is a subitem of the text editor.\r\n\r\n**Configuration Editor**  \r\nThis will be a configuration editor that is dynamically created from radare2 configuration options. The implementation should understand what type of value each configuration receives and what is the best component to use in it. For example, boolean configuration keys can be with a checkbox (V / X), integer can be spinbox, if it has hardcoded configuration values then combobox is best to be used, and so on. \r\nA search box can be used to quickly search in the config.\r\n\r\nThen, each change to this config can be applied to a cutterrc initialization file.\r\n\r\n**File editor**  \r\nThis is a multi-line text area that users can script their configuration and set it manually.\r\n\r\n\r\n\r\n## Retrieving the config\r\n\r\nTo retrieve the information to display you can simply use the `e?j` command. It will have all the information you need.\r\n\r\n```\r\n[0x00000000]> e?j~{}\r\nDo you want to print 4426 lines? (y/N) y\r\n[\r\n  {\r\n    \"name\": \"anal.a2f\",\r\n    \"value\": false,\r\n    \"type\": \"bool\",\r\n    \"desc\": \"Use the new WIP analysis algorithm (core/p/a2f), anal.depth ignored atm\",\r\n    \"ro\": false\r\n  },\r\n  {\r\n    \"name\": \"anal.arch\",\r\n    \"value\": \"x86\",\r\n    \"type\": \"str\",\r\n    \"desc\": \"Select the architecture to use\",\r\n    \"ro\": false,\r\n    \"options\": [\r\n      \"6502\",\r\n      \"6502.cs\",\r\n      \"8051\",\r\n... [truncated] ...\r\n {\r\n    \"name\": \"anal.armthumb\",\r\n    \"value\": false,\r\n    \"type\": \"bool\",\r\n    \"desc\": \"aae computes arm/thumb changes (lot of false positives ahead)\",\r\n    \"ro\": false\r\n  },\r\n  {\r\n    \"name\": \"anal.autoname\",\r\n    \"value\": false,\r\n    \"type\": \"bool\",\r\n    \"desc\": \"Speculatively set a name for the functions, may result in some false positives\",\r\n    \"ro\": false\r\n  },\r\n  {\r\n    \"name\": \"anal.bb.maxsize\",\r\n    \"value\": \"512K\",\r\n    \"type\": \"str\",\r\n    \"desc\": \"Maximum basic block size\",\r\n    \"ro\": false\r\n  },\r\n  {\r\n    \"name\": \"anal.from\",\r\n    \"value\": -1,\r\n    \"type\": \"addr\",\r\n    \"desc\": \"Lower limit on the address range for analysis\",\r\n    \"ro\": false\r\n  },\r\n  {\r\n    \"name\": \"anal.gp\",\r\n    \"value\": 0,\r\n    \"type\": \"int\",\r\n    \"desc\": \"Set the value of the GP register (MIPS)\",\r\n    \"ro\": false\r\n  },\r\n...\r\n\r\n\r\n``` afair, we don't load it from any other place than home folder.\r\nYou can ignore radare2rc completely, it has nothing practical to do with the feature. We implement cutterrc on our own side, so you don't have to dig into C code.\r\n\r\nCutter is already loading cutterrc, just make sure it searches in more than one place, as I showed in  plugin manager :) The configuration editor part sounds like #1965 . > > Multiple initialization files can be loaded.\r\n> \r\n> @ITAYC0HEN Do you mean we could load all of them and deal with conflicts while initiliazing or do you mean that the we should select the first cutterrc present from the standard locations while checking in order?\r\n\r\nall off them. just tell the user you did it, similar as in plugins. The configuration changes in the editor should be written to such file.\r\n\r\nand about the vscode, yeah absolutely. Check how it is implemented in our theme editor (preferences > appearance > copy theme > edit theme). There's filtering there. But as you said, let's do this one by one. Let's don't overwhelm this task \ud83d\ude05 Just make sure that every step is built in a modular way for next steps. And make the new components and widgets flexible. for example, make a generic text+highlighter, make a common function for search order which will be used both in plugins and in cuterrc search (both are using the same code so better not to duplicate). \r\n\r\nthink of your steps and plane them >\r\nso we have the search order, \r\nwe have the text editor with highlight, \r\nwe have the visual editor,... \r\n\r\nvisual editor has its own issue open. Show us a quick plan and start implementing it one by one. We can merge first steps before the final ones because it works and already helpful :)  sounds good. You can also artificially make sure a specific folder in the list is loaded last, e.g the one in the installation folder  I disagree with storing it in installation folder. In many cases this folder will be read only. Just use `QStandardPaths::writableLocation(AppConfigLocation)` for choosing it. \r\n\r\nIf an installation specific system config gets used it should be with lowest priority so that user can easily override those settings using his config.\r\n\r\nIf the setup you described gets used for managing multiple configs for different use cases using multiple installations seems like a hack and can already by done using \"Run script file\" option when opening a file. Sounds good. Other than that, and after it wil be fixed, I think it is ready to me merged `QStandardPaths::writableLocation(AppConfigLocation)` is in my opinion better. No need to pollute home folder. ![Peek 2020-05-11 13-08](https://user-images.githubusercontent.com/20182642/81550241-a0278000-9388-11ea-985d-462112ae9ecc.gif)\r\n  **Is your feature request related to a problem? Please describe.**\r\n\r\nAdd labels to show the keyboard shortcuts of Redo Seek and Undo Seek in the \u201cEdit\u201d menu.\r\n![image](https://user-images.githubusercontent.com/20182642/66716694-63d37780-edd9-11e9-9d0b-88793b7aa76a.png)\r\n\r\nI want this menu to display the shortcuts to trigger these actions. Similar to what you can find in any context menu. E.g -\r\n![image](https://user-images.githubusercontent.com/20182642/66716743-0986e680-edda-11e9-8aac-d75a7573d5aa.png)\r\n\r\n\r\nCurrently the shortcut for \"Seek backward\" is <kbd>Esc</kbd>\r\nwe don't have a shortcut for \"Seek next\" (Seek forward) and **we need to decide on one**\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nMy feature request has three parts:\r\n1. Decide for a keyboard shortcut for Seek forward\r\n2. Show the labels of the shortcuts in the Edit menu\r\n3. Show tooltip with the keyboard shortcuts when hovering the back\\forward arrows\r\n![image](https://user-images.githubusercontent.com/20182642/66716758-35a26780-edda-11e9-9933-5e77f02d642c.png)\r\n\r\n\r\n\r\n**Additional context**\r\n\r\nIDA uses <kbd>Ctrl</kbd>+<kbd>Enter</kbd> for Seek Froward\r\n  I am afraid I didn't understand the issue. Can you please elaborate more?  good catch! next time you can use [skip-ci] in your commit message to avoid having to wait for builds to finish   Congratulations! This is for you the first merged PR :+1: \r\nHappy to see this :)\r\n\r\n\r\np.s next time write \"closes #xxxx\", and not only \"#xxxx\". This is a very nice feature of Github that let us auto-close an issue when we merge the PR :)  will review tomorrow on Arch. if you have a sample plugin you wrote for testing, please share the code :)  Okay tested it, overall it work good :) Especially simple printings from Python plugins I tested with.\r\n\r\nhere are some feedbacks :)\r\n\r\n\r\n - Empty lines in between should be removed (when not expected)\r\n\r\n```\r\n[x] Analyze all flags starting with sym. and entry0 (aa)\r\n\r\n[x] Analyze function calls (aac)\r\n\r\n[x] Analyze len bytes of instructions for references (aar)\r\n```\r\n\r\n - The output is printed both in the Console widget and the Terminal itself. Is it expected?\r\n - executing `!echo hello` from the console widget will output in the terminal\r\n - > Could make it toggleable with a flag, up to you.\r\n\r\n@karliss @thestr4ng3r what do you think? Should we show it in the console as well? Should we add a command-line flag to toggle it? Will users expect the Terminal to be empty from noise, or would they prefer to have this info twice? What should be the default state?\r\n\r\n> so it gets redirected to the widget + regular console\r\n\r\nIn reality it does not show up in the Console widget\r\n![image](https://user-images.githubusercontent.com/20182642/66649305-7e212000-ec36-11e9-9fb8-958f2ec77ee0.png)\r\n\r\nWhile this shell output does show\r\n\r\n```\r\n[0x0040188a]> !lsfsafsa\r\n\r\nsh: lsfsafsa: command not found\r\n``` ```\r\n!!uname -a\r\n```\r\nwill print only on Console widget and not on Terminal.\r\n\r\nOther than that, look good to me :)  spam  Thank you for your contribution! :)\r\nPlease see my comments in the original issue\r\nhttps://github.com/radareorg/cutter/issues/1810  is this still a wip/draft?   @nullsector we currently trying to solve this back-compatibility problem, meantime - can you try to update your environment and try with newer versions of the tool? Seems like something happened in your last commit and introduced many changes that weren't changed by you. Right? haha yeah it was suspecious. \r\ncan you clean it please and force-push to your branch? \ud83d\ude05 ping @nullsector @nullsector this is still looks wrong  If I understood you correctly, it seems like you are confusing token-highlighting and text selection.\r\nA single click on a token, such as an operator, address or variable, will highlight the selected token as well as any other occurrence of the same token in the disassembly. This DOES NOT selects the text. Thus, CTRL+C would not copy this token for you. \r\n\r\nIf you want to copy a text in the disassembly, select it and press CTRL+C. If you want to copy the address, select it and press CTRL+C. We believe it is useful so we also provided a shortcut to automatically copy the address on which your cursor is currently on, using CTRL+SHIFT+C.\r\nYou can use CTRL+SHIFT+C to copy the address, even if the address part of the disassembly is not the part that is currently highlighted as a token.\r\n\r\n In addition to that. One may clame that it would be nice that <kbd>Ctrl</kbd>+<kbd>C</kbd> will copy the current line, even if no text is selected. This is a behavior common in code editors. You can simply use the shortcut to copy the whole line you're in, without selecting any text.\r\n\r\nI agree with this and I think it can be a feature-request - but the current situation is clearly not a bug.  CC @thestr4ng3r  @thestr4ng3r can you reproduce? No. @doublegrey can you still reproduce this with current master of Cutter, r2 and r2ghidra-dec?  Probably Qt tree-view has this feature somehow, I suggest to read more about the available features.\r\nThe idea is to copy the selected rows\\cells, right?  @ps1337 it would be great if you'll review these suggested changes   \r\n**Detailed description**\r\n\r\nThis PR improves the about dialog by the following things:\r\n1. Add Cutter's powerline (description) under the header\r\n2. Link to cutter.re\r\n3. Don't mention specific people because we're a community. Link to the Contributors page.\r\n\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/20182642/65815907-ce8f8b00-e1fd-11e9-8682-8579a1d7038a.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/20182642/65815898-ae5fcc00-e1fd-11e9-8f07-e393489c6de3.png)\r\n  \r\n**Detailed description**\r\n\r\nOften, the sidebar in the hexdump widget is too big and takes most of the view of the hexdump widget in a way that it even hides the hexdump text itself. \r\n\r\nThis Pull Request does two things:\r\n1. Change the size-policy to set the default proportion of the sidebar to be smaller\r\n2. Applies some heuristics to hide the sidebar on resize events when it will likely to hide the hexdump.\r\n\r\n\r\n**Test plan (required)**\r\n\r\n1. Open hexdump and see that the sidebar is of a reasonable size and proportions\r\n2. Make sure the sidebar is opened and start narrowing it by resizing until it hides the sidebar.\r\n\r\n\r\n it definitely isn't. will check it out later tomorrow\n\nOn Sat, Sep 28, 2019, 21:07 karliss <notifications@github.com> wrote:\n\n> Code looks fine.\n> When I open new hexdump I get this. I wouldn't call it reasonable size and\n> proportions.\n> [image: hexdump screenshot]\n> <https://user-images.githubusercontent.com/7101031/65820591-bfc3cb00-e233-11e9-9f6f-f57a94705334.png>\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/pull/1798?email_source=notifications&email_token=AEZ7M4XF2GCCKV7QMUF4WCDQL6MMJA5CNFSM4I3NTB4KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD727EKI#issuecomment-536212009>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AEZ7M4WEFUWFBTR5I5TTJG3QL6MMJANCNFSM4I3NTB4A>\n> .\n>\n Sorry, I wont have time to continue this for a while since traveling. :( \r\nso this PR will be idle for a while. unless someone wants to quickly push a few changes so indeed seems like I there are no easy shortcuts here so I prefer to merge it as-is for now\r\nand improve it as time pass. The current state of the PR is better than master so I think it is good to go. Don't want to have another idle pr here  it looks good now. Why do you say you're not sure it was worth it? after all, it is confusing to have them shown  in general I accept this pr as well, just want to make sure I understand karliss and that we are walking the right way here Yeha I understand what you're saying but I don't like to see the UI lying to the user. This was the first thing I did when testing the feature on register widget. I automatically pressed the shortcuts and saw it does no good.\r\n\r\nEventually, we will need to re-design our emulation widgets in a way that they will not only look better, but also be without these  Thanks for the clarification! ':)   @c0rund can you make sure it still happens on latest version of Cutter from git and of the decompiler?\r\n\r\nAlso, can you please try it from radare2 master version? (newest release would be okay as well). \r\nWe want to make sure this is solved or not, and if no - we would like to transfer this issue to the radare2 repository\r\n great! so I'll close this issue. thank you for reporting, you helped a lot.\r\nplease don't hesitate to open more issues when you encounter problems with Cutter. :)   yeah seems like it is more than just updating the submodule ;)   finally! I totally agree  ah, didn't check but does it work with (ctrl+wheel)? and with pinching?  conflicts after merging my PR  Overall looks good. I really like the fact that one can use flags and math operations and r2 will calculate the address.\r\n\r\n things I noticed --\r\n\r\n1. Double click on a stack address will first seek to this address, another double click will ener the edit mode. If Cutter is already seek to this address, the first click will enter edit mode.\r\n![Peek 2019-09-21 10-57](https://user-images.githubusercontent.com/20182642/65370170-8b15a980-dc5e-11e9-9ce2-f98ec1b18b25.gif)\r\n\r\n2. Clicking on a cell and start typing will enter edit mode. This without pressing f2 or double clicking.\r\n![Peek 2019-09-21 11-02](https://user-images.githubusercontent.com/20182642/65370246-42122500-dc5f-11e9-9d34-b3538a02c2c8.gif)\r\n\r\n 1. problem is that the user should understand it, otherwise they might get confused why some times it work but sometimes it triggers a seek. Also, it seeks to addresses outside of the mapped binary so this is another problem. if I have a stack value of 0x41 I don't expect cutter to seek there. \r\n\r\n2. only issue is that we don't have \"undo\" so it might be of a problem if someone is accidently rewriting a value. the f2/context menu makes sure that at least the user explicitly asked to change th value. another thing is, that global and local shortcuts (f, x) will trigger the shortcut and will not begin editing. this is again confusing, especially in the long term where we will add more shortcuts.  I think that seeking is the most probable one. at least that what I'd expect. In the near-future, I hope to change the way the stack\\regs widgets look like and make them looks less like a table. Then it would be more clear   sounds good.\r\nI have one thing though, about the seeking in hexdump. \r\nI prefer having it \"smart\" to know if this address contains code or data. and I think in general it is a good way to differ between them. code should be displayed in disassembly while data or allocated memory be in hexdump. \r\n\r\nhaving a generic, smartest, function to have it would be nice. \r\n\r\nit is really an open question, what do you think? \r\n\r\nsee also \r\nhttps://github.com/radareorg/cutter/issues/1736 yeah might be outside the scope rewlly.\r\nstack contains frames and return addresses  You also need to update r2 submodule for it to work. Otherwise we're doomed :) \r\nOther than that, looks very good! Just fix the comment, update the submoudle and it is good to go\r\n\r\nThanks!  Seems good here :)\r\n@xarkes @thestr4ng3r @karliss I'd be happy if any of you will check as well to make sure we are not introducing a bug  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, we can define a string in a given address. Sadly, we can't define its length and radare2 tries to understand it by itself\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/64545600-53873300-d329-11e9-8224-7c63fa06a7e0.png)\r\n \r\n**Describe the solution you'd like**\r\n\r\nWe currently use `Cs @ <addr>`, we can add the option to use `Cs <len> @ <addr>` in addition, to give the user more power\r\n\r\n\r\n CC @pandasauce\r\n Nice! notice the typo in \"Advanced\". Also, if possible, a heuristic to guess the Size will be great Thanks to @Properrr , this feature is now implemented :)\r\nA bit late to close it because we forgot haha\r\n\r\nGood work!  Waiting to see your next ones :)  @coolkingcole I advice you to compile Cutter from source. For Appimage to work on older systems like Ubuntu 16.04 or Debian 9 it needs to be built against older glibc version. We would like to do that but our resources are limited. Hopefully someone will manage time to do that before those versions before end of maintenance for those versions.  for me it stuck more than 15 minutes on radare2.\r\n\r\n```\r\n$ r2 libcrackme.so\r\n\r\n[0x0005e240]> aaa\r\n[x] Analyze all flags starting with sym. and entry0 (aa)\r\n[ ] Analyze function calls (aac)\r\n\r\n\r\n```  8ndeed it is planned and actually have an undetailed open issue -\r\n\r\nhttps://github.com/radareorg/cutter/issues/420\r\n\r\n\r\n\r\n\r\nThe solution will use the new version of r2pm, in GO\r\nhttps://github.com/radareorg/r2pm\r\n\r\nThe idea is to create something similar to IDE's or Binja plugin managers \r\n\r\n\r\n![IMG_20190909_045931_895](https://user-images.githubusercontent.com/20182642/64499056-18044e80-d2c0-11e9-9cd0-f3c50c2b01f1.jpg)  #694 is related  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, when text is selected in the Decompiler widget, the seek is changed as you go with the selection. Example in the attached gif animation.\r\n\r\n![2019-09-07_12-23-06](https://user-images.githubusercontent.com/20182642/64473699-440dbb80-d16a-11e9-8576-88680513da48.gif)\r\n\r\n**Describe the solution you'd like**\r\nSelecting text should not trigger seeks. Seek should be triggered only on the release of the mouse button in a single click, and not as part of text selection.\r\n\r\n\r\n This is a good question - as mentioned in the original post -\r\n> Selecting text should not trigger seeks. Seek should be triggered only on the release of the mouse button in a single click, and not as part of text selection.\r\n\r\nIt means that only a single click should trigger a seek in Cutter. While performing text selection, seek should not be triggered. Not in the beginning (button pressed) nor in the end (button released). The idea is that when the user clicks in the widget, they are trying to seek. And when they selection text, they want to select and not to seek.\r\n\r\n  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, the Decompiler Widget is set to Read-Only which probably disables the option to copy the selected text.\r\n\r\n**Describe the solution you'd like**\r\n\r\nEnable the option to Copy the selected text using Right-click and also using Ctrl+C.\r\n Well, ctrl c didnt work for me. Does it work for you?\n\nOn Fri, Sep 6, 2019, 20:49 karliss <notifications@github.com> wrote:\n\n> If it can be selected it should be copyable even when read only.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/issues/1753?email_source=notifications&email_token=AEZ7M4RC2F3KOXY5SEPIQ2TQIKQ45A5CNFSM4IUKU7C2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD6DXO4Y#issuecomment-528971635>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AEZ7M4SIP26ASHWYP4NE2UTQIKQ45ANCNFSM4IUKU7CQ>\n> .\n>\n Seems like Qt::CustomContextMenu removes the default context menu and thus removes the support for copying text. \r\nShould I manually add a Copy action to copy selected text or there is a way to use custom context menu while preserving the regular context menu (with \"Copy\") I don't think the theories above are correct. Ctrl+C sometimes works but inconsistently.  As has been observed by many people `ctrl+c` often triggers decompilation which causes text to be updated thus interfering with selection and copying.  There might be some conflicting or incorrectly set up shortcuts. Needs to be investigated how exactly it gets triggered. First thing to check is inserting breakpoint in decompilation function and looking at the stacktrace to see what event exactly triggers it. One guess is \"set as code (C)\" action but it doesn't seem to cause a similar problem in disassembly widget so it might be something else. Closed by PR #2391   ah okay, sure! :)  @xarkes can you open an issue in radare2 and close this PR?  \r\n**Detailed description**\r\nThis PR makes sure that the Rename dialogs will open in the center of the screen and not in the corner.\r\nThe solution is based on #1384 by @AntonReborn .\r\n\r\n\r\n**Test plan (required)**\r\nChoose a flag in the disassembly and click <kbd>Shift</kbd>+<kbd>N</kbd> to open rename diaolog.\r\nNotice how it is now opened on the center.\r\n\r\n\r\n\r\n**Closing issues**\r\n\r\ncloses #1735  So should i access the \"main\" variable and set it as parent? I think it's feasible   **Environment information**\r\n* Operating System: Any\r\n* Cutter version: most recent from Master \r\n* File format: Any\r\n\r\n**Describe the bug**\r\n\r\nThe \"Rename \"xyz\" (used here)\" dialog is set to top-most and follows me around to different applications.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open a function\r\n2. Click on some instruction with a used flag, and press Shift+N, or Right Click -> rename...\r\n3. Now switch to different application such as your browser and see that the dialog is still there, top-most.\r\n\r\n**Expected behavior**\r\n\r\nThe dialog should show only in the context of the program\r\n\r\n**Screenshots**\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/64270219-7d141900-cf3b-11e9-8d2c-ccdf9666373b.png)\r\n Fixed via #1743   **Is your feature request related to a problem? Please describe.**\r\n\r\nSome of our widgets do not have keyboard shortcuts. But the other problem is that those who have, do not have it written anywhere in the Interface. \r\n\r\n![image](https://user-images.githubusercontent.com/20182642/64252089-411c8c00-cf1a-11e9-9058-288418c1ec6e.png)\r\n\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nI expect the keyboard shortcuts to be shown next to the widget name in the Windows menu.\r\n\r\n > I wonder if it's due to actions being incorrectly defined\r\n\r\nMaybe, because there was no point when it worked. The shortcuts never showed there   I think (b) is the way to go. ain't it? :)  Thank you!   Everything works as expected, thanks! :)  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, there is no easy way to control the tabs in Cutter from the keyboard\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nI want to apply a set of keyboard shortcuts to manage tabs in Cutter:\r\n\r\n* <kbd>Ctrl</kbd>+<kbd>Tab</kbd> - Jump to the next open tab\r\n* <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Tab</kbd> -J ump to the previous open tab\r\n* <kbd>Ctrl</kbd>+<kbd>W</kbd> - Close the current tab\r\n* <kbd>Ctrl</kbd>+<kbd>T</kbd> - Duplicate current tab\r\n* <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>T</kbd> - Reopen previously closed tabs in the order they were closed\r\n \r\n\r\nMouse shortcut - \r\nMouse middle click on a tab will close it\r\n\r\n\r\n\r\n Sure thing! Go ahead :)\r\nLet us know how you progress and if you have any questions. You can discuss it with us here or on our Telegram or IRC channels. @0x24D Your commits for docker look very good. Please open a separated Pull Request for it.\r\n\r\np.s don't forget to sign up for [Hacktoberfest ](https://hacktoberfest.digitalocean.com)and get a neat T-shirt for your PRs :) Hey @0x24d :)\r\ndo you have any progress yet? want us to have a look?   **Detailed description**\r\n\r\nRename the widget from \"Pseudocode\" to \"Decompiler\" \r\n\r\n![image](https://user-images.githubusercontent.com/20182642/64074969-d3265980-ccba-11e9-913f-d02b1d7ad0dd.png)\r\n\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n I think it does, but isn't it the price we need to pay for it? so, what do you think of the settings update? Any way to overcome this or c'est la vie? @karliss @xarkes please check now after the changes :)   Looks great, an improvement indeed. I think that we still need a simply <kbd>N</kbd> shortcut or <kbd>Shift</kbd>+<kbd>N</kbd> to quickly rename a var (without setting a type). Like, pressing a shortcut, start typing and <kbd>Enter</kbd> and that's it.\r\n\r\n\r\nAnd for the test case:\r\n\r\n> open EditVariableDialog in a function without any stack variables and arguments\r\n\r\nAll combo boxes should probably be disabled with \"N/A\" or something similar. Empty combo boxes are useless, confusing and cause extra meaningless steps by the user. \r\n![image](https://user-images.githubusercontent.com/20182642/64098060-8c923700-cd6e-11e9-9a21-fe78aa6c1273.png)\r\n That sounds goos to me   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n**Detailed description**\r\n\r\nPart 2 for #1700  and #923\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n* Test Resource widget\r\n    * double click seek\r\n    * show in hexwidget\r\n* Test that context menu for one of the previously converted widgets like functions widget still works\r\n* Test string widget\r\n    * context menu shows new entries\r\n    * xref, comment, copy address shortcuts work\r\n    * copy string isn't broken\r\n    * filter isn't broken\r\n    * double click seek\r\n    * show in disassembly or hexdump\r\n* flags widget\r\n     * context menu shows new entries\r\n    * rename and delete isn't broken\r\n    * xref, comment, copy address shortcuts work\r\n    * filter and flagspace isn't broken\r\n    * double click seek\r\n    * show in disassembly or hexdump\r\n* search widget\r\n   * new menu entries\r\n   * copy address\r\n   * search isn't broken\r\n   * xrefs shortcut\r\n* edit comment\r\n    * add a comment in any of lists\r\n   * repeat and observed that edit comment dialog opens\r\n* xrefs\r\n   * code preview not broken\r\n   * clicking on xref changes preview  not broken\r\n   * context menu contains new entries\r\n   * opening xref from xref dialog closes the old one \r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n > Do we need a context menu entry for Ctrl+F if the search bar at the bottom can't be closed?\r\n\r\nWhere, for example?\r\nBecause I don't find it necessary  AS long as the keyboard shortcut of Ctrl+F stays :)  @XVilka Please clarify a few things. Looking at the issues I didn't see anything implemented yet, is that correct?\r\nIs Table API meant to provide a way of describing a visual look of table or just grid of values with different output formatters? I assume that support from cutter would mean parsing one of those formats. Will there be some meta information about column content (is it a string, number, address)?   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\nRestore blinking cursor after making empty selection using mouse. This can easily happen by accident when slightly dragging the mouse when clicking to change cursor position.\r\n\r\n**Test plan (required)**\r\n\r\nIn hexwidget\r\n\r\nfirst case\r\n* press left mouse key\r\n* slightly move cursor, but less than would be required for for selecting a byte\r\n* release left mouse key\r\n* observe if cursor is blinking in the correct position (before the patch cursor should disappear)\r\n\r\nsecond case\r\n* start selecting bytes with mouse\r\n* move the mouse to initial position so that selection is empty  \r\n* observe if cursor is blinking in the correct position\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  How does it deal with recent item history for inputs that are not path to files? There are ioplugins like malloc, null, http, tcp and others for which the string isn't a file path. In theory it could be arbitrary string. #1675 added some functionality which doesn't make sense for non file things. It wasn't a problem at that point because io mode wasn't remembered.  My initial guess was that it might be due to new blocks not being directly reachable. But this wasn't the case as indicated by test bellow.\r\nLooks changing end address works only in one direction. I tried:\r\n* find small function with 3-5 basic blocks\r\n* reduce end address, observe that graph was automatically updated\r\n* try changing end address and observe that removed bb aren't added back\r\n\r\n\r\n>  I do not even know how this is possible at r2 commandline.\r\n\r\n@idandre  Cutter uses `afu <address>` command for changing end address . I would expect this to be repeatable in r2 using afb to check if bb are part of funciton. So is this a bug in r2?  In theory  disassembly output takes into account data type and displays it accordingly, unfortunately analysis isn't good enough. R2 should probably mark non executable sections as data by default.\r\n![a1](https://user-images.githubusercontent.com/7101031/62832918-cf189600-bc3e-11e9-9e45-89017f4a2ec4.png)\r\n![a2](https://user-images.githubusercontent.com/7101031/62832920-d50e7700-bc3e-11e9-9e0b-9b2d92f4df1c.png)\r\n![a3](https://user-images.githubusercontent.com/7101031/62832921-d93a9480-bc3e-11e9-9d18-5c97a8a43ca5.png)\r\n\r\n\r\n\r\n In the examples I above no manual marking was applied. It was automatically detected during analysis. Cutter should probably not display Code for \"X-Refs from\" with type data.\r\n\r\n*update*\r\nI meant in the table on left side where it currently interprets \"dev_ino_pop\" as an instruction. look at the screenshot posted by @elikaski, this is a great example  Things like this is why I suggested https://github.com/radareorg/cutter/issues/694#issuecomment-515673314 instead of handling it it completely separately for each widget.  **Detailed description**\r\n\r\nAdd\r\n\r\n* AddressableItemContextMenu - basic menu that can be used for most places that have something with address. Currently contains \"show in\", \"copy adderess\", \"show X-refs\", add comment. \r\n* AdressableItemModel - Qt Item Model with interface for asking item's address and optionally name. I considered using custom role but chose interface with virtual methods instead as it allows enforcing that interface is implemented at compile time. Manually tracking if all the models use correct role would be more fragile.\r\n* ListDockWidget - CutterDockWidget containing tree view and optionally QuckSearch and statusbar with count. Accepts AddressableItemModel and Automatically adds AdressableItemContextMenu. This one saves a lot of duplicate code and provides more consistent behavior. A specific DockWidget implementation needs to provide model which extends AddressableItemModel if necessary customize tree view widget look and add extra context menu actions specific to this widget.\r\n\r\nConvert following widgets to use ListDockWidget\r\n* CommentsWidget\r\n* ImportsWidget\r\n* RelocsWidget\r\n* SymbolsWidget\r\n* SegmentsWIdget\r\n* SectionsWIdget\r\n* HeadersWIdget\r\n* FunctionWidget\r\n\r\nSome of the provided partial context menu or no context menu. Widget specific context menu entries should be still there.\r\n\r\nBugfixes and existing feature cleanup:\r\n* Escape shortcut for canceling quick filter was broken due to VtablesWidget\r\n* Selecting multiple functions in FunctionWIdget and using \"Undefine\" action undefines all of them\r\n* Horizontal/Vertical mode selection now uses ActionGroup for managing exclusive selection instead of doing it manually.\r\n\r\n**Test plan (required)**\r\n\r\nUsing context menu\r\n* copy address\r\n* show in\r\n* show x-refs\r\n  * make sure name is shown when applicable and address otherwise\r\n* add comment\r\n* any widget specific context menu items\r\n* action shortcuts (with correct target)\r\n* correct target when opening menu using keyboard\r\n\r\nQuick filter\r\n* Ctrl-F focuses on Quick Filter opening it if necesarry\r\n* Quick filter works\r\n* Escape clears the filter\r\n\r\nHorizontal/Vertical mode for Functions and Comment widgets\r\n* Qt displays it using Radio button style instead of checkboxes\r\n* Tree item content switches between tree and table\r\n* In tree mode copying adress takes function address in function widget, function or comment address in comment widget\r\n\r\nTest at least one action in all widgets \r\n* CommentsWidget\r\n* ImportsWidget\r\n* RelocsWidget\r\n* SymbolsWidget\r\n* SegmentsWIdget\r\n* SectionsWIdget\r\n  * graphic bars show up\r\n* HeadersWIdget\r\n* FunctionWidget\r\n\r\nMake sure it is possible to copy any cell in table view by clicking it and pressing Ctrl-C\r\n\r\n** Future work  for part 2**\r\nDeal with rest of of the widgets, probably split ListDockWidget so that TreeView with addressable item model can be used in docks that have more custom gui  like Search. \r\n\r\nUse of AdressableItemContextMenu in places that aren't table row, for example stack widget address and data.\r\n\r\nAdd comment should probably show existing comment for editing instead of silently replacing it. Current behavior is copied either for Comments or Functions widget.\r\n\r\n**Closing issues**\r\n\r\nCovers ~~most~~ ~half of #923 . ~~Need to evaluate once finished.~~ @ITAYC0HEN \r\n1.  I noticed that as well. [Documentation](https://doc.qt.io/qt-5/qt.html#ItemDataRole-enum) suggests that Qt::DisplayRole should return string. Digging in code confirms that copy only  works if QString is  returned https://github.com/qt/qtbase/blob/aca43d29f8a1c90d14069ac602cf0ba7beaba300/src/widgets/itemviews/qabstractitemview.cpp#L2337 Doesn't seem like there is anything better than going through all models and wrapping numbers in `QString::number`. Seems annoying but this PR already modifies many models so I might as well do it for widgets updated in this PR and leave other widget for part 2.\r\n\r\n2. I didn't touch string widget yet.  My personal opinion is that it's not necessary to have it context menu. I wouldn't try to look for it there. So it's main use is discoverability. But supporting Ctrl-F for all the tables and sometimes showing it by default I think is sufficient.\r\n\r\n3. Good catch. I don't have a strong opinion for this. Shortcuts in tables and Disassembly/Graph context menu should probably match as much as possible. Show in works as designed but due to how global seek synchronization works it isn't perfect.\r\n\r\nIf target widget isn't synchronized only target seek will be changed. I changed the default synchronization state to disabled for new widgets to avoid unexpected seek change in current widget. Didn't touch show in existing widget as that can cause unexpected widget desynchronization which can cause different kind of problems.  Was able to repeat it. It's probably a problem with r2. `anj` doesn't detect reference to variable `[{\"type\":\"address\",\"offset\":18446744073709551608}]`  `an` has code for dealing with variables but it doesn't work. In V mode d/v works. The most obvious difference is that `an` calls `r_anal_op` in `R_ANAL_OP_MASK_BASIC` mode but d/v calls it with `R_ANAL_OP_MASK_ALL`.  Expected behavior in issue description is only one of the options. I am fine with preserving r2 behavior if Cutter GUI matches it. Third option is disabling emu.str option in cutter when asm.emu isn't enabled.   Do you have an updated screenshot? Thanks.  There is already a special branch, as stated by karliss comment. It's under the `graphviz` branch.  @Maijin can you share the hack.md here?\r\nProbably @yossizap would want to have a look at it Didn't get to updating it either, I'll get to it once we're in a stable state with the basic features. ahm? (how) should we proceed with this?   Cool, thanks, let's see :)  Before:\r\nCf the linked issue below\r\n\r\nNow:\r\n![image](https://user-images.githubusercontent.com/10772605/61554442-3f2b6600-aa5d-11e9-8994-c63e47b7acb7.png)\r\n\r\nThis is not the intended solution, but I think it's fine as well.\r\n\r\nFixes https://github.com/radareorg/cutter/issues/1642 Sure I just made a quick fix but I can definitely improve it. Thanks for the feedbacks! New display:\r\n![image](https://user-images.githubusercontent.com/10772605/61580602-685afd80-ab14-11e9-8403-e05663f951f5.png)\r\n It'd be great if someone could test it on Windows though. I fixed the variable name for Windows, but I think it's not going to be enough. But in fact my solution is shit, I should use that: https://doc.qt.io/qt-5/qdir.html#homePath Oh yes sorry, I was busy, yep looks good to me.  I will squash if you don't mind ;)  Well, right now I don't propose anything.. Adding the dependencies to the codebase is not a good idea, so let's stick with what we have :)  Thank you :)  Yeah we can refactor later imo.  > The same happens with multiline comments.\r\n\r\nOh yeah, I thought I fixed it but probably not. I can't reproduce it for most pipelines in asm.bb.line but could reproduce in some specific cases like this, where multiple comments and bb.lines are shown in sequence\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/64699846-59f2e780-d4ae-11e9-8e03-2432408b2fca.png)\r\n  We could also add C++ API I think.  fixed in https://github.com/radareorg/cutter/pull/1724  Agreed.  Tested right now, and it looks very nice! :)  You could have pushed in the other branch directly, it would not have been an issue :)  Haha, I don't know how to do this, if that was my PR I would definitely rename `ok` to `parseOk` or `parseSuccess` :stuck_out_tongue:   Looks good to me, plus it seems it's easy to configure the themes if we want to, so nice thank you.\r\nI wonder if that could be more efficient for the disassembly widget rather than doing the html conversion.  If I understood correctly, we should not use any null QString (aka empty string is equivalent to no string), so I think that using isEmpty everywhere is the proper solution?  Works fine, thank you :)  Almost there:\r\n```\r\nProgram radare2 found: YES (C:\\projects\\cutter\\r2_dist_x64\\bin\\radare2.EXE)\r\nmeson.build:31:2: ERROR: C library 'r_core' not found\r\n```  Also to documentation if not already there. Not exactly. It is for the documentation and a meantime solution to add a link to the plugins page  > This change should be in r2 not in cutter. I have been asking to change this 2 weeks ago and got no feedback at all\r\n> [\u2026](#)\r\n> On 30 Jun 2019, at 11:48, Florian M\u00e4rkl ***@***.***> wrote: Merged #1630 into master. \u2014 You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub, or mute the thread.\r\n\r\nThis is not true. I remember at least @condret and me saying it should be removed completely.  @optizone Can you squash your commits so this PR has only 2 commits (one from me, one from you), so I can merge after release?  @trufae >  you want it for the whole application or for a single instruction? Thanks!\r\nOkay then, so this issue is about Visual bit editor - I edited the initial comment to describe it better. A new issue for analysis hints for bit change (e.g ARM Thumb) will be opened separately.\r\n This is the original issue description:\r\n\r\n> To toggle bits like the visual bit editor in r2 (vb1)  Thank you for your suggestion!\r\nWhile it is indeed helpful, we consider this feature as nice-to-have and put it as a low-priority in our prioritization. Thus, it is not likely to be solved soon.\r\n\r\nThat said, we always invite you and the community to send a Pull Request to solve this issue or implement the solution.  Opened a better issue - https://github.com/radareorg/cutter/issues/1887\r\nClosing this.  to be merged when travis is fixed\r\nhttps://travis-ci.community/t/xcode-8-3-homebrew-outdated-error/3798 According to the linked thread, 10.2 fixed it. Is it https://github.com/radareorg/cutter/issues/1440?\r\nIt looks like the bindings cannot compile from the logs.  I don't remember the exact reason for this line and CI is green, so lgtm!  @karliss suggested many good ways, we need to pick one and go for it. I actually like how the assembly-refrence plugin looks like, it is not based on asm.describe though. This is basically the 4th suggestion of @karliss\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/65672372-93e8ef80-e051-11e9-95d1-bcdba4795c6d.png)\r\n > this should be implemented on r2 side and exposed in cutter like suggested\r\n\r\nIn what shape? What changes should take place in r2 in addition to the current asm.descirbe? Cutterref by @yossizap is also neat\r\n\r\nhttps://github.com/yossizap/cutterref\r\n\r\n> At the moment it only supports x86-64, ARM and MIPS 32bit\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/73814201-08dfe900-47eb-11ea-8bcc-bd0d019393d1.png)\r\n Should we do a survey for the best option? or keep it to plugins?  Compilation instructions improved and we moved to CMake as make bulding platform.\r\nThanks! <3  As pointed out in issue description first part is getting the alignment enforcement working correctly.\r\nIf you play with the width setting and move around you can see that start of row is usually aligned to the width of row - if row has 16 bytes last digit for first byte address is 0, if the width is 8 last digit is 0 or 8 and similar for other widths.\r\n\r\nIn the second screenshot you made width is 16 but view offset isn't aligned to 16 bytes. It shouldn't be possible to achieve such state.\r\n\r\nThe second part is introducing mode where when you seek to address using either bar on top, clicking in other widget or using \"show in\" menu the view offset gets set exactly to this position instead of nearest aligned position. Third option might be aligning to word size. Problem with these modes is that current interface Hexwidget uses for reading data only returns pointer to data. There is no way of knowing how much data is available there or requesting specific amount of data. \r\n\r\nThe interface needs to be improved so that Hexwidget can safely read up to 8 bytes at any offset.\r\n\r\n  Very nice, now it really enhances the whole architecture. Great job and thanks for keeping at it for so long!  I think it is. If you navigate in a regular disassembly, it would be nice to see what the current basic block in the graph is.  Closed by #1862  @NirmalManoj My recommendation is not to include generic widget improvements like this in your GSoC proposal. It isn't necessary and doesn't help moving forward with the  diffing mode implementation. I expect there there to be plenty of of work directly related to get actual diffing working. You can still work on it as microtask or to become more familiar with cutter.  @karliss I don't remember seeing horizontal scrollbar for awhile. is this one completed?   I'm closing for now as it is probably overkill and out of our roadmap.  Hi @ps1337, I tried to re enable auto builds on Dockerhub, so if the next build succeeds, you should see one build appear in the build tab.\r\nNote here is the error for the last build:\r\n```\r\ng++ -c -pipe -O2 -std=gnu++11 -Wall -W -D_REENTRANT -fPIC -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS -DQT_NO_DEBUG -DQT_SVG_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -I../src -I. -I../src -I../src/core -I../src/widgets -I../src/dialogs -I../src/common -I../src/plugins -isystem /usr/include/libr -isystem /usr/include/x86_64-linux-gnu/qt5 -isystem /usr/include/x86_64-linux-gnu/qt5/QtSvg -isystem /usr/include/x86_64-linux-gnu/qt5/QtWidgets -isystem /usr/include/x86_64-linux-gnu/qt5/QtGui -isystem /usr/include/x86_64-linux-gnu/qt5/QtNetwork -isystem /usr/include/x86_64-linux-gnu/qt5/QtCore -I. -isystem /usr/include/libdrm -I. -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -o CommentsDialog.o ../src/dialogs/CommentsDialog.cpp\r\n../src/dialogs/AboutDialog.cpp: In constructor 'AboutDialog::AboutDialog(QWidget*)':\r\n../src/dialogs/AboutDialog.cpp:30:46: error: expected ')' before 'CUTTER_VERSION_FULL'\r\n+ tr(\"Version\") + \" \" CUTTER_VERSION_FULL \"<br/>\"\r\n^~~~~~~~~~~~~~~~~~~~\r\n)\r\n../src/dialogs/AboutDialog.cpp:29:24: note: to match this '('\r\nQString aboutString(\"<h1>Cutter</h1>\"\r\n^\r\ng++ -c -pipe -O2 -std=gnu++11 -Wall -W -D_REENTRANT -fPIC -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS -DQT_NO_DEBUG -DQT_SVG_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -I../src -I. -I../src -I../src/core -I../src/widgets -I../src/dialogs -I../src/common -I../src/plugins -isystem /usr/include/libr -isystem /usr/include/x86_64-linux-gnu/qt5 -isystem /usr/include/x86_64-linux-gnu/qt5/QtSvg -isystem /usr/include/x86_64-linux-gnu/qt5/QtWidgets -isystem /usr/include/x86_64-linux-gnu/qt5/QtGui -isystem /usr/include/x86_64-linux-gnu/qt5/QtNetwork -isystem /usr/include/x86_64-linux-gnu/qt5/QtCore -I. -isystem /usr/include/libdrm -I. -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -o EditInstructionDialog.o ../src/dialogs/EditInstructionDialog.cpp\r\ng++ -c -pipe -O2 -std=gnu++11 -Wall -W -D_REENTRANT -fPIC -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS -DQT_NO_DEBUG -DQT_SVG_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -I../src -I. -I../src -I../src/core -I../src/widgets -I../src/dialogs -I../src/common -I../src/plugins -isystem /usr/include/libr -isystem /usr/include/x86_64-linux-gnu/qt5 -isystem /usr/include/x86_64-linux-gnu/qt5/QtSvg -isystem /usr/include/x86_64-linux-gnu/qt5/QtWidgets -isystem /usr/include/x86_64-linux-gnu/qt5/QtGui -isystem /usr/include/x86_64-linux-gnu/qt5/QtNetwork -isystem /usr/include/x86_64-linux-gnu/qt5/QtCore -I. -isystem /usr/include/libdrm -I. -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -o FlagDialog.o ../src/dialogs/FlagDialog.cpp\r\nmake: *** [Makefile:2710: AboutDialog.o] Error 1\r\nmake: *** Waiting for unfinished jobs....\r\nSomething went wrong!\r\nRemoving intermediate container a67d5d480d18\r\nThe command '/bin/sh -c git clone --recurse-submodules https://github.com/radareorg/cutter.git /opt/cutter && cd /opt/cutter && bash build.sh && bash -c 'if [[ ! -x \"/opt/cutter/build/Cutter\" ]]; then exit -1; fi'' returned a non-zero code: 255\r\n```\r\nI have very poor internet connection right now so I cannot build the image myself, but that's probably worth investigating.\r\nThanks! :) I don't understand, builds are triggered each time there is a new commit on master.\r\nPlease find here the full log for the latest build (fc9bbe14) https://pastebin.com/P5sA9QCT When using macros you don't need to put a `+` to concatenate the strings, so in theory the `\" \" CUTTER_VERSION_FULL` should be working.\r\nIf the Alpine image works, then that's awesome and we can definitely ignore this error :)  Any update on this?  I can think of two approaches this could be done.\r\n\r\nOne is to use the mechanism suggested in https://github.com/radareorg/cutter/issues/1945#issuecomment-598440589 . Indicate the position of comment or flag using little marker in the hex section and display the flag name or comment text as tooltip when hovering the marker.\r\n\r\nOther is to add a column and display text there. Here is an example for how the additional column approach could look.\r\n![photo_2020-03-23_15-53-15](https://user-images.githubusercontent.com/7101031/77324055-e19f9580-6d1e-11ea-96e0-1c55ee44dbd4.jpg)\r\n  So should we rename this issue to \"Implement r2 autocompletion in the consol widget?  The pull request https://github.com/radareorg/cutter/pull/1821 is not merged but we still did not solve the issue for python printings  @NirmalManoj see the linked issue #1470 it has two parts: reacting to clicks and highlighting the clickable things.\r\n\r\nAll of this depends on creating good infrastructure in #1945.\r\n  Function relative offsets are useful when comparing the code with other tools printing addresses in such format. Can't remember exactly where but I have seen it getting printed by some tools. It might have been either gdb or a stacktrace printed by android after a crash.  Right, it is a bug in r2: https://github.com/radareorg/radare2/issues/15533\r\nSince we would want our native non-ascii arrows here anyway, after disabling `asm.lines`, this is not a Cutter problem anymore.  It was fixed a while ago e.g. in https://github.com/radareorg/cutter/pull/1560  Removed from Debugger project as it is not important for having a working Debugger.  It is questionable if this is actually necessary. It hasn't been properly tested if  disassembly printing is the problem. I know one case but it that one it should be more appropriate to fix the disassembly printer as cache doesn't help if printing once for generating cache takes unreasonably long time. I was referring to radareorg/radare2#15944 . My suggestion is currently not touching this(#1256) issue.  @ps1337 what is your insights on this one? :)\r\nyou think it is solved? Thanks mate! closing this issue then  Cutter is a GUi application and thus reading and navigating inside a binary is done with the mouse. Spending shortcuts on this will block us from having them in something else  This should honor flag size (usually we use size of 1), but here we can have this info from the length of selected bytes Should it really be the same as in disassembly and graph? If so, all of these should honor multibyte and multiline selcetions for flag size  This would not happen. Our hexdump is very rich already and this feature is part of it :)  Currently, it looks like this:\r\n![image](https://user-images.githubusercontent.com/20182642/71074335-c1de5b80-218a-11ea-9e07-09405a001bd8.png)\r\n\r\n\r\nOur suggestion is to honor the immediate that was clicked by the user. Cutter should detect whether the user click on the first, second, third,  (...) immediate and will change its base upon selection.\r\nWhen right-click was done not on a specific immediate (e.g on the opcode) then Cutter will show the dialog for the last immediate.\r\n\r\nWe can also test whether it will be good to specify the immediate in the context menu item to show which immediate is going to be changed (\"Set 0xaf34 base to...\")\r\n  What do you mean exactly? > Maybe once we have a proper python console?\r\n\r\nyeah, it should be quite a quick implementation, right? ;)  Removed from Debugger project as it is not important for having a working debugger.  Removing from Debugger project as it is only for emulation. I know, but it is not necessary nor important for having a working Debugger. We will implement that when the debugger will actually work. A debugger is actually working now :)  Hey @zoyron , still want to give this one a chance? This is mostly done by now. The important things were implemented..\r\nThank you! Closing  I am thinking of creating AddressableItemContextMenu,  maybe AddressableItemModel and AddressableItemListWidget. Remaining work:\r\n* Decide what to do with keyboard search, see @ITAYC0HEN  comment in #1700 \r\n* Consider if synchronized seek behaviour for \"show in\" menu can be improved\r\n* Add some notes about AddressableItemX in developer documentation\r\n* Test if ListDockWidget can be used from python plugin\r\n* Add or Replace comment -> Add or Edit comment\r\n* Remaining widgets with list\r\n   * Memory map widget\r\n   * Strings\r\n   * Flags\r\n   * RegisterRef\r\n   * ResourceWidget ?\r\n   * Search widget\r\n   * Zignatures ?\r\n   * TODO\r\n* Stack widget\r\n* Xrefs widget\r\n* Registers fixed in #1718  There is already AsyncTaskManager in Cutter, which can do this. But for most things, it's not trivial to implement. For example the quick filter just uses QSortFilterProxyModel and this is simply not designed to work asynchronously.  Yeah because search.in has so many options that aren't really useful for GUI users and it becomes too much. \r\n\r\nI think it is the same for analysis, just need to think about the ones we want to keep   fantastic! thanks @XVilka!   My current plan is:\r\nAs for the actual plan:\r\n1. refactor all the layout state into single structure, making it obvious where it's being operated with.  Change the functions so that the GUI code calls more less only (getLayout(), setLayout(), loadLayouts(), saveLayouts()). Instead of current situation with initLayout, readSettingsOrDefault readDebugeSttings, saveSettings, saveDebugSettings,  resetToDebug, RestoreToDebug, resetToDefault, ......\r\n\r\nAll the layout changes should function more or less the same initializing things more or less from 0.\r\n\r\n2. Allow CutterDock widgets to include part of their configuration as part of layout. As described above.\r\n3. In a separate PR allow saving more layouts. After the previous refactoring this should be relatively easy. Yes, I saw some suspicious code related to resizing and was thinking if size should be part of layout or not. I guess it's less surprising to preserve the current window size instead of restoring whatever was used when layout was created. Will look into how it interacts with dock state restoration and detached docks. It's probably possible to come up with setup where window size is important part of layout but most of the time resize is unexpected. Basic stuff is working. Created the layout saving and switching earlier than expected because it's easier to test it that way. \r\n\r\nI am currently working on window size handling. Looks like not changing it when switching profile doesn't cause problems. \r\n\r\nRest of the remaining work:\r\n* [x] geometry restoration when opening main window\r\n* [x] action checkbox state\r\n* [x] initial tabs\r\n* [x] part sizes after reset\r\n* [x]  new dock widget placement (plugins and changes in Cutter)\r\n* [ ] layout management UI polishing When working with creating the initial dock layout from code it seemed that when using `addDockWidget((left|right|top|bottom), dock)` it produced layout that seemed ok, but behaved buggy when you tried to interact with it. Buggy behavior includes: inability to resize some of the docks in specific directions, slowly changing dock size when moving mouse over the division line, dock disappearing and later popping back when you try to resize other docks. Reproducing the same layout by manually dragging the docks resulted in working layout. Maybe this function and corner config works better in situation where you have a central widget and the placement of 4 sides is clearer.\r\n\r\nSwitched to using only `splitHorizontal` and `splitVertical` which didn't seem to have the same problem.  Hey @jamie-cyc, to be honest I don't really understand your need.\r\nAs capstone and radare2 versions we use are not signed themselves, I don't really understand the purpose of us signing our binaries (apart for OS X issues with debugging, but that's not our issue right now).\r\nYou are talking about \"verifying the integrity\" of the Cutter downloads, so would some hash algorithm like e.g. sha256 that we add to the Release changelog be a solution to you?\r\n[EDIT]\r\nAlso did you consider building Cutter yourself? Could it be an option for you?\r\nThanks :)  I am closing this. There is no need to \"hack through the command lines\". Every sane operating system has display scaling factor configuration and Qt respects that. \r\n\r\nSituation was a bit worse 2 years ago using an older Qt version and older desktop environment versions.  Using latest Qt everything is mostly working. Most of the remaining tasks are linked in high dpi project https://github.com/radareorg/cutter/projects/16 and also my attempt updating Qt #1868 (5.14 has better fractional scaling support on Windows).  Any update @karliss, or link to some notes?  There's already an issue as you can see above, it's referenced as https://github.com/radare/radare2/issues/10722  It should be per basic block, not per function. Inside a big function, history is important. thought about it and tested it actually. found it tiring because I click all over the place when in function, and then esc esc esc esc is tiring.\r\nbut I see your point  Also silent seek would be wrong in any case. If you seek from block A to block B+0 then B+1, then undo seek and redo seek, you want to land at B+1, not B+0 Ah ok if that is the case, it's correct.  @xarkes @karliss @optizone I'm not sure but - is it already implemented after the disassembly refactoring? Or only partially  Any update on this? @yossizap this can be very nice for debug as well. Right click to dump a memory segment  I think this issue should be splitted in two.  Highlighting block is already implemented by @optizone , now highlighting line should be trivial :) Closed in #1879 Line coloring in Cutter isn't going through `ecH`, we implemented our own logic for this to support the widgets we use. We're very close to a solution, there's only this PR that @v3ctor needs to finish :) Or anybody else who is willing to push the last changes. Maybe you, @USSCltd ? How are you using ecHi in Cutter? because as far as I know, we never\nsupported this command since it is a terminal-based command. We in Cutter\ncolor the blocks and lines in the graph view by using our own\nimplementation of coloring. Check the context menu of graph view to see how\nit looks like when coloring blocks.\n\nif you use the \"ec\" commands from the integrated console, we do not support\nit and it somewhat hacky :)\n\n\nOn Tue, Feb 25, 2020, 10:15 USSCltd <notifications@github.com> wrote:\n\n> It seems ecHi works but not good. Are you going to remove this completely?\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/issues/444?email_source=notifications&email_token=AEZ7M4V3AILORZ5DDRMAG6DRETHTTA5CNFSM4E3BNCZ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEM27USY#issuecomment-590740043>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AEZ7M4SHCYHDBIUUOO5ZKJ3RETHTTANCNFSM4E3BNCZQ>\n> .\n>\n Check out this pull request :)\r\nhttps://github.com/radareorg/cutter/pull/1911 Replacing BasicInstructionHighlighter and BasicBlockHighlighter with `ecHi` and `afbc` would be preferrable. Some things that need to be imrpoved in r2 for ecHi to work well in Cutter\r\n* ansi code to html color converting code. Currently it doesn't take html tag nesting limitations into account sometimes resulting in broken look as can bee seen in screenshot above.\r\n* Saved color annotations should be stored using output independent way. Currently it is stored as terminal escape code which results in bad API. It should probably be stored as uint32 instead. First part fixing ansi code to html converter is done https://github.com/radareorg/radare2/commit/adc2fb525d9d93e1738ebe40a0548fd0f99e811f .\r\n  Maybe we should open an issue in radare2 instead?", "text_all_count": 39061, "text_word_token": ["Environment", "information", "Operating", "System", "Any", "Cutter", "version", "NUMBER", "master", "ad", "NUMBER", "f", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ee", "NUMBER", "Obtained", "from", "x", "Built", "from", "source", "File", "format", "Any", "Describe", "the", "bug", "The", "Parsing", "tab", "in", "the", "hexdump", "view", "should", "be", "read", "only", "as", "it", "only", "parses", "the", "selected", "bytes", "into", "different", "formats", "NUMBER", "Currently", "the", "text", "box", "be", "editable", "and", "this", "can", "be", "confusing", "as", "people", "might", "think", "it", "can", "be", "use", "to", "patch", "bytes", "NUMBER", "To", "Reproduce", "The", "following", "gif", "demonstrates", "how", "to", "reproduce", "this", "issue", "NUMBER", "NUMBER", "Open", "a", "binary", "in", "Cutter", "NUMBER", "Open", "the", "Hexdump", "widget", "NUMBER", "Make", "sure", "that", "the", "sidebar", "be", "opened", "and", "Parsing", "tab", "be", "selected", "NUMBER", "Select", "few", "bytes", "in", "the", "Hex", "view", "NUMBER", "Choose", "the", "text", "box", "in", "the", "sidebar", "and", "start", "modifying", "the", "content", "shown", "Peek", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fa", "NUMBER", "ffeb", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "gif", "Expected", "behavior", "The", "text", "box", "should", "be", "read", "only", "I", "just", "notice", "that", "only", "the", "first", "value", "be", "affected", "Good", "point", "in", "your", "NUMBER", "paragraph", "NUMBER", "Maybe", "karliss", "or", "thestr", "NUMBER", "ng", "NUMBER", "r", "will", "know", "better", "For", "point", "NUMBER", "it", "might", "require", "solving", "it", "in", "radare", "NUMBER", "to", "add", "the", "immediate", "base", "NUMBER", "Need", "to", "ask", "in", "radare", "NUMBER", "group", "and", "bug", "tracker", "NUMBER", "Maybe", "karliss", "and", "thestr", "NUMBER", "ng", "NUMBER", "r", "can", "help", "with", "it", "as", "well", "cc", "ret", "NUMBER", "libc", "for", "point", "NUMBER", "as", "well", "you", "might", "know", "how", "to", "solve", "this", "issue", "that", "the", "immediate", "base", "isn", "t", "available", "Thanks", "for", "report", "this", "issue", "The", "release", "works", "on", "my", "maco", "machine", "we", "will", "investigate", "what", "went", "wrong", "when", "run", "on", "yours", "NUMBER", "Thank", "you", "again", "Hey", "lars", "NUMBER", "come", "join", "us", "on", "Telegram", "LINK", "or", "IRC", "We", "would", "love", "to", "assist", "in", "there", "Thank", "you", "for", "report", "this", "issue", "This", "issue", "be", "Related", "Duplicate", "of", "LINK", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Convert", "annotation", "offsets", "to", "positions", "Qt", "text", "edit", "NUMBER", "Wrong", "positions", "be", "obvious", "when", "use", "decompiler", "based", "highlight", "but", "it", "also", "affects", "context", "menu", "interactions", "NUMBER", "Test", "plan", "required", "Before", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "c", "NUMBER", "png", "After", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "NUMBER", "ced", "NUMBER", "a", "NUMBER", "b", "NUMBER", "png", "Closing", "issue", "Closes", "NUMBER", "TAG", "Does", "it", "work", "with", "Arabic", "and", "Japanese", "Feel", "free", "to", "try", "your", "self", "NUMBER", "I", "can", "t", "input", "or", "evaluated", "if", "they", "handle", "correctly", "NUMBER", "Arabic", "and", "other", "RTL", "scripts", "might", "have", "problem", "of", "their", "own", "NUMBER", "Font", "issue", "be", "one", "more", "topic", "NUMBER", "As", "can", "be", "seen", "in", "screenshot", "with", "emojis", "those", "be", "symbols", "outside", "Basic", "Multilingual", "Plane", "NUMBER", "xffff", "NUMBER", "Which", "map", "to", "multiple", "QChars", "NUMBER", "The", "last", "symbol", "with", "familiy", "be", "made", "of", "multiple", "ones", "connected", "use", "zero", "width", "joiner", "NUMBER", "That", "covers", "both", "ends", "of", "Unicode", "so", "there", "shouldn", "t", "be", "too", "much", "issue", "with", "anything", "in", "the", "middle", "as", "good", "as", "Qt", "support", "it", "NUMBER", "Wanted", "to", "try", "some", "of", "the", "CJK", "symbols", "NUMBER", "xffff", "but", "I", "didn", "t", "have", "appropriate", "fonts", "setup", "on", "my", "system", "NUMBER", "Forgot", "to", "mention", "that", "when", "I", "tried", "with", "retdec", "I", "couldn", "t", "properly", "test", "it", "because", "json", "to", "RAnnotated", "code", "conversion", "isn", "t", "merge", "yet", "so", "highlight", "wasn", "t", "visible", "NUMBER", "There", "were", "also", "some", "json", "decoding", "isues", "when", "use", "symbols", "NUMBER", "xffff", "but", "those", "were", "from", "earlier", "steps", "before", "decompiler", "widget", "NUMBER", "Hebrew", "first", "comment", "RTL", "second", "be", "LTR", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "b", "NUMBER", "eba", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "png", "Indeed", "I", "agree", "that", "this", "be", "another", "issue", "out", "of", "scope", "I", "be", "trying", "to", "format", "organize", "the", "decompiled", "code", "to", "make", "it", "easy", "for", "others", "to", "follow", "it", "but", "the", "code", "lines", "sticking", "to", "each", "other", "Could", "you", "provide", "an", "image", "of", "code", "lines", "sticking", "to", "each", "other", "Just", "wanted", "to", "verify", "if", "it", "be", "the", "expected", "behavior", "NUMBER", "oviche", "What", "you", "be", "observing", "be", "indeed", "the", "expected", "behavior", "NUMBER", "I", "m", "not", "sure", "if", "it", "will", "be", "possible", "to", "improve", "the", "decompiler", "in", "the", "way", "you", "want", "anytime", "soon", "NUMBER", "Secondly", "a", "lot", "of", "improvement", "have", "be", "do", "to", "the", "decompiler", "NUMBER", "The", "exist", "decompiler", "had", "be", "refactored", "to", "support", "context", "sensitive", "annotations", "NUMBER", "As", "of", "now", "Ghidra", "plugin", "support", "all", "the", "new", "actions", "NUMBER", "You", "can", "read", "about", "all", "the", "improvement", "here", "LINK", "decompiler", "widget", "gsoc", "In", "order", "to", "use", "them", "you", "will", "have", "to", "compile", "the", "latest", "master", "of", "Cutter", "and", "r", "NUMBER", "ghidra", "dec", "NUMBER", "See", "here", "for", "Cutter", "LINK", "build", "steps", "See", "here", "for", "r", "NUMBER", "ghidra", "dec", "LINK", "dec", "build", "I", "don", "t", "know", "why", "you", "want", "to", "do", "this", "but", "if", "it", "helps", "you", "can", "copy", "paste", "the", "entire", "code", "from", "the", "new", "decompiler", "to", "an", "editor", "to", "make", "it", "more", "readable", "NUMBER", "This", "can", "be", "more", "useful", "for", "your", "second", "point", "NUMBER", "But", "if", "you", "want", "it", "to", "get", "update", "when", "you", "make", "change", "this", "probably", "be", "not", "the", "solution", "you", "want", "NUMBER", "I", "understand", "very", "good", "the", "need", "you", "have", "I", "experienced", "the", "same", "frustration", "and", "wish", "to", "have", "such", "features", "as", "well", "NUMBER", "As", "Nirmal", "said", "implement", "some", "of", "these", "features", "wouldn", "t", "be", "easy", "at", "all", "an", "will", "require", "some", "work", "Firstly", "build", "them", "from", "sources", "will", "achieve", "different", "results", "than", "downloading", "the", "compiled", "cutter", "version", "from", "the", "official", "site", "which", "already", "contains", "the", "r", "NUMBER", "ghidra", "plugin", "by", "default", "oviche", "Improvements", "between", "each", "release", "will", "be", "merge", "to", "master", "NUMBER", "All", "of", "the", "significant", "improvement", "for", "the", "decompiler", "was", "do", "on", "a", "separate", "branch", "named", "decompiler", "refactoring", "in", "Cutter", "r", "NUMBER", "ghidra", "dec", "and", "radare", "NUMBER", "This", "was", "recently", "merge", "with", "the", "master", "branch", "NUMBER", "But", "in", "order", "for", "this", "to", "become", "available", "in", "the", "form", "of", "a", "release", "you", "will", "have", "to", "wait", "till", "the", "next", "release", "NUMBER", "This", "be", "basically", "how", "most", "projects", "work", "NUMBER", "Thanks", "for", "creating", "the", "issue", "oviche", "you", "won", "t", "experience", "meaningful", "difference", "in", "the", "decompiled", "code", "NUMBER", "The", "major", "experience", "you", "ll", "feel", "be", "work", "with", "the", "now", "context", "sensitive", "context", "menu", "NUMBER", "There", "were", "some", "inconsistencies", "with", "the", "copy", "selected", "text", "action", "in", "the", "previous", "context", "menu", "NUMBER", "That", "s", "mainly", "why", "I", "mention", "it", "so", "that", "code", "can", "be", "copied", "properly", "NUMBER", "Nice", "this", "one", "indeed", "bothered", "me", "for", "awhile", "I", "see", "I", "wasn", "t", "the", "only", "one", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "implement", "annotations", "for", "the", "r", "NUMBER", "dec", "decompiler", "NUMBER", "Earlier", "we", "were", "parsing", "to", "RAnnotatedCode", "from", "the", "pddj", "output", "NUMBER", "Now", "a", "command", "pddA", "has", "be", "implement", "by", "wargio", "recently", "for", "outputting", "annotations", "NUMBER", "The", "JSON", "output", "from", "pddA", "should", "ideally", "give", "all", "the", "information", "we", "need", "to", "make", "annotations", "as", "we", "have", "in", "r", "NUMBER", "ghidra", "dec", "NUMBER", "This", "PR", "makes", "JSON", "parser", "for", "pddA", "output", "to", "RAnnotatedCode", "NUMBER", "Note", "This", "branch", "be", "created", "from", "the", "branch", "in", "PR", "NUMBER", "Hence", "to", "see", "the", "change", "made", "for", "just", "this", "PR", "select", "commit", "from", "the", "commit", "with", "the", "message", "output", "and", "looping", "for", "annotation", "NUMBER", "NUMBER", "TAG", "Test", "plan", "required", "NUMBER", "Fetch", "latest", "r", "NUMBER", "dec", "r", "NUMBER", "pm", "ci", "r", "NUMBER", "dec", "NUMBER", "NUMBER", "Compile", "this", "PR", "and", "open", "cutter", "NUMBER", "NUMBER", "You", "should", "be", "able", "to", "see", "the", "features", "available", "to", "r", "NUMBER", "dec", "with", "context", "annotations", "NUMBER", "NUMBER", "Test", "all", "the", "actions", "see", "note", "below", "Note", "The", "pddA", "output", "as", "noted", "before", "be", "still", "not", "perfect", "NUMBER", "There", "were", "some", "confusions", "and", "because", "of", "that", "the", "address", "of", "the", "references", "be", "not", "correct", "NUMBER", "Also", "r", "NUMBER", "dec", "crashes", "while", "run", "pddA", "in", "some", "function", "NUMBER", "Hopefully", "this", "will", "get", "patched", "soon", "NUMBER", "NUMBER", "So", "for", "the", "function", "relate", "actions", "and", "targeted", "show", "in", "the", "only", "reference", "that", "will", "work", "now", "be", "the", "one", "for", "the", "declaration", "definition", "of", "the", "function", "NUMBER", "Test", "this", "NUMBER", "NUMBER", "As", "of", "now", "only", "function", "variable", "argument", "and", "local", "variables", "declarations", "have", "annotations", "so", "variable", "relate", "actions", "Rename", "and", "Edit", "will", "work", "only", "for", "them", "NUMBER", "NUMBER", "Global", "variables", "and", "constant", "variables", "cannot", "be", "test", "before", "it", "gets", "patched", "NUMBER", "TAG", "TAG", "Closing", "issue", "TAG", "NirmalManoj", "Please", "rebase", "this", "PR", "to", "latest", "master", "Will", "do", "that", "in", "half", "an", "hour", "karliss", "Rebased", "this", "NUMBER", "NirmalManoj", "What", "be", "the", "status", "of", "this", "PR", "Good", "work", "Oriol", "For", "the", "tooltip", "you", "might", "try", "setting", "it", "on", "the", "action", "which", "has", "plugin", "menu", "as", "submenu", "instead", "of", "menu", "itself", "NUMBER", "Not", "sure", "if", "it", "will", "work", "but", "it", "s", "worth", "trying", "NUMBER", "Yes", "setToolTipsVisible", "enable", "tooltips", "for", "actions", "inside", "menu", "so", "you", "need", "to", "set", "it", "for", "ui", "menuWindows", "instead", "of", "ui", "menuPlugins", "since", "you", "be", "hovering", "mouse", "over", "item", "inside", "menuWindows", "NUMBER", "Other", "aspect", "be", "that", "you", "need", "to", "set", "the", "tooltip", "for", "action", "which", "has", "menuPlugin", "assigned", "as", "submenu", "not", "the", "menu", "itself", "NUMBER", "All", "the", "items", "in", "a", "menu", "be", "actions", "including", "ones", "that", "have", "submenu", "NUMBER", "One", "more", "detail", "be", "that", "having", "windows", "plugin", "menu", "empty", "be", "not", "the", "same", "as", "having", "no", "plugins", "NUMBER", "One", "plugin", "can", "have", "multiple", "dockable", "windows", "and", "the", "opposite", "there", "can", "be", "plugins", "that", "don", "t", "haven", "any", "because", "they", "use", "different", "kind", "of", "UI", "NUMBER", "ITAYC", "NUMBER", "HEN", "did", "you", "considered", "this", "Of", "course", "as", "can", "be", "seen", "in", "my", "issue", "title", "and", "description", "notice", "the", "parenthesis", "Screenshot_", "NUMBER", "NUMBER", "jpg", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "fff", "NUMBER", "cc", "NUMBER", "jpg", "I", "notice", "that", "the", "PR", "be", "NUMBER", "only", "checking", "if", "the", "menu", "be", "empty", "as", "it", "should", "Of", "course", "as", "can", "be", "seen", "in", "my", "issue", "title", "and", "description", "I", "was", "focusing", "on", "the", "Describe", "the", "solution", "you", "d", "like", "which", "somewhat", "contradicts", "the", "tittle", "NUMBER", "In", "the", "solution", "part", "you", "write", "tooltip", "that", "says", "No", "plugins", "be", "install", "NUMBER", "NUMBER", "Having", "message", "that", "no", "plugins", "install", "when", "there", "be", "plugins", "but", "no", "plugins", "with", "windows", "would", "be", "misleading", "NUMBER", "That", "s", "why", "I", "wanted", "to", "clarify", "it", "NUMBER", "I", "notice", "that", "the", "PR", "be", "NUMBER", "only", "checking", "if", "the", "menu", "be", "empty", "as", "it", "should", "No", "it", "be", "checking", "if", "the", "plugin", "list", "be", "empty", "not", "if", "the", "menu", "be", "empty", "NUMBER", "Sorry", "completely", "my", "mistakes", "twice", "NUMBER", "NUMBER", "Yeah", "the", "tooltip", "should", "say", "that", "no", "plugin", "add", "items", "to", "this", "menu", "NUMBER", "We", "can", "consider", "also", "having", "two", "variations", "NUMBER", "If", "no", "plugins", "be", "install", "write", "this", "NUMBER", "And", "if", "they", "do", "but", "none", "were", "add", "actions", "to", "this", "menu", "then", "mention", "this", "NUMBER", "NUMBER", "Need", "to", "check", "if", "the", "menu", "be", "empty", "and", "not", "the", "list", "of", "install", "plugins", "NUMBER", "Truth", "be", "that", "if", "the", "suggestion", "above", "will", "be", "accepted", "then", "both", "things", "will", "be", "checked", "as", "there", "will", "be", "two", "variations", "of", "the", "shown", "tooltip", "NUMBER", "what", "do", "you", "think", "of", "having", "two", "variations", "Alright", "sagcan", "then", "we", "ll", "go", "for", "the", "two", "variations", "What", "do", "you", "think", "It", "will", "require", "add", "another", "check", "and", "decide", "which", "tooltip", "to", "show", "I", "d", "say", "that", "it", "s", "better", "not", "to", "fight", "with", "it", "too", "much", "NUMBER", "From", "a", "quick", "google", "it", "doesn", "t", "look", "trivial", "NUMBER", "Commit", "the", "change", "without", "it", "and", "we", "can", "discuss", "how", "to", "move", "forward", "with", "the", "tooltip", "NUMBER", "worst", "case", "scenario", "we", "will", "give", "up", "the", "idea", "of", "use", "tooltip", "there", "NUMBER", "If", "karliss", "can", "fetch", "and", "try", "maybe", "he", "ll", "find", "a", "way", "Yes", "it", "be", "possible", "and", "I", "confirmed", "it", "works", "the", "way", "I", "describe", "before", "write", "my", "comment", "above", "NUMBER", "Good", "work", "sagcan", "Thank", "you", "Let", "us", "know", "of", "any", "other", "things", "you", "would", "like", "to", "work", "on", "and", "try", "Will", "be", "moved", "to", "separate", "repository", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Remove", "the", "non", "code", "docs", "and", "add", "github", "action", "for", "build", "and", "uploading", "doxygen", "docs", "to", "radareorg", "cutter", "NUMBER", "re", "I", "have", "made", "a", "repository", "containing", "only", "docs", "here", "LINK", "docs", "NUMBER", "It", "has", "the", "history", "and", "tags", "preserved", "and", "also", "the", "change", "to", "build", "and", "upload", "docs", "to", "radareorg", "cutter", "NUMBER", "re", "NUMBER", "Remaining", "work", "Discuss", "code", "documentation", "placement", "in", "cutter", "NUMBER", "re", "Recreate", "the", "cutter", "docs", "repo", "to", "include", "latest", "documentation", "change", "from", "cutter", "master", "once", "rest", "of", "the", "tasks", "be", "resolve", "Update", "the", "upload", "paths", "currently", "uploading", "to", "test", "repo", "to", "debug", "the", "scripts", "Configure", "the", "secrets", "and", "deploy", "key", "for", "deploy", "scripts", "to", "work", "only", "owners", "can", "do", "this", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "Closes", "NUMBER", "I", "would", "like", "to", "hear", "the", "opinion", "about", "folder", "structure", "where", "to", "place", "doxygen", "output", "NUMBER", "I", "think", "it", "should", "be", "do", "keep", "in", "mind", "that", "in", "future", "we", "might", "want", "to", "have", "multiple", "copies", "of", "it", "one", "for", "latest", "master", "and", "one", "for", "tag", "NUMBER", "Maybe", "seperate", "one", "which", "include", "all", "the", "private", "stuff", "for", "Cutter", "developers", "and", "contributors", "as", "an", "alternative", "approach", "for", "exploring", "the", "code", "base", "NUMBER", "Both", "due", "to", "version", "considerations", "and", "simplfying", "the", "upload", "process", "it", "would", "be", "easier", "to", "have", "it", "outside", "the", "folder", "uploaded", "by", "cutter", "docs", "cutter", "NUMBER", "re", "docs", "folder", "NUMBER", "To", "minimize", "the", "exist", "link", "breakage", "I", "don", "t", "think", "the", "regular", "docs", "should", "be", "moved", "NUMBER", "I", "suggest", "something", "like", "cutter", "NUMBER", "re", "docs", "content", "doesn", "t", "change", "cutter", "NUMBER", "re", "doc", "api", "latest", "doxygen", "output", "we", "can", "later", "decide", "what", "latest", "means", "This", "allows", "in", "future", "add", "if", "necesarry", "cutter", "NUMBER", "re", "doc", "something", "version", "latest", "stable", "version", "main", "documentation", "cutter", "NUMBER", "re", "doc", "api", "version", "version", "api", "doc", "cutter", "NUMBER", "re", "doc", "doxygen", "code", "all", "latest", "doxygen", "output", "from", "all", "the", "code", "including", "internal", "parts", "Alternative", "approach", "might", "be", "to", "upload", "it", "to", "separate", "folders", "as", "suggested", "above", "but", "do", "some", "jekyll", "config", "magic", "to", "ensure", "that", "it", "appears", "bellow", "cutter", "NUMBER", "re", "docs", "something", "when", "visiting", "the", "side", "NUMBER", "I", "don", "t", "think", "that", "s", "worth", "it", "NUMBER", "Having", "both", "docs", "and", "doc", "be", "a", "big", "no", "no", "NUMBER", "Every", "UX", "person", "will", "tell", "you", "that", "NUMBER", "Will", "attend", "this", "issue", "later", "on", "the", "come", "week", "wit", "more", "thoughts", "NUMBER", "But", "overall", "I", "agree", "with", "use", "version", "and", "I", "be", "fine", "with", "splitting", "things", "to", "different", "tress", "although", "I", "d", "love", "keep", "to", "only", "docs", "and", "then", "add", "folder", "on", "top", "of", "it", "NUMBER", "Alternatively", "we", "can", "have", "docs", "NUMBER", "cutter", "NUMBER", "re", "If", "you", "be", "the", "completely", "against", "having", "docs", "doc", "NUMBER", "Then", "how", "about", "the", "approach", "of", "moving", "some", "things", "to", "the", "top", "level", "that", "be", "cutter", "NUMBER", "re", "api", "latest", "If", "you", "consider", "URL", "an", "interface", "then", "an", "important", "property", "of", "it", "that", "links", "should", "remain", "valid", "as", "much", "as", "possible", "NUMBER", "What", "problem", "do", "you", "want", "to", "solve", "use", "subdomain", "a", "havbe", "both", "dos", "NUMBER", "cutter", "NUMBER", "re", "and", "cutter", "NUMBER", "re", "docs", "same", "problem", "as", "with", "docs", "doc", "b", "create", "docs", "NUMBER", "cutter", "NUMBER", "re", "and", "remove", "cutter", "NUMBER", "re", "docs", "older", "links", "to", "documentation", "be", "broken", "NUMBER", "If", "you", "be", "fine", "breaking", "links", "we", "might", "as", "well", "reorganize", "the", "structure", "bellow", "cutter", "NUMBER", "re", "docs", "to", "support", "version", "and", "easier", "uploading", "NUMBER", "If", "you", "be", "fine", "breaking", "links", "we", "might", "as", "well", "reorganize", "the", "structure", "bellow", "cutter", "NUMBER", "re", "docs", "to", "support", "version", "and", "easier", "uploading", "NUMBER", "I", "be", "fine", "with", "breaking", "docs", "structure", "at", "this", "point", "Just", "need", "to", "google", "search", "and", "Github", "search", "properly", "before", "I", "be", "not", "at", "all", "against", "LINK", "If", "it", "be", "essential", "I", "will", "add", "this", "NUMBER", "Yes", "describing", "how", "to", "deal", "with", "trickier", "parts", "of", "setup", "like", "shiboken", "python", "bindings", "be", "important", "NUMBER", "Those", "be", "the", "parts", "that", "need", "documentation", "the", "most", "NUMBER", "Thank", "you", "kohnakagawa", "Let", "us", "know", "if", "need", "any", "more", "test", "I", "d", "love", "to", "help", "If", "you", "be", "doing", "this", "you", "might", "as", "well", "include", "file", "with", "recommended", "extensions", "LINK", "gallery", "_workspace", "recommended", "extensions", "Looks", "good", "as", "discussed", "on", "DM", "please", "re", "format", "and", "I", "ll", "check", "then", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "there", "be", "no", "way", "to", "define", "type", "for", "global", "variables", "in", "decompiler", "widget", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "When", "right", "clicking", "a", "global", "variable", "or", "an", "address", "use", "as", "global", "variable", "have", "an", "action", "for", "defining", "type", "NUMBER", "It", "should", "use", "the", "same", "shortcut", "as", "change", "type", "for", "local", "variables", "and", "function", "argument", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "Additional", "context", "Concept", "for", "global", "variable", "type", "in", "r", "NUMBER", "currently", "isn", "t", "very", "clear", "NUMBER", "There", "be", "multiple", "different", "mechanism", "that", "support", "part", "of", "the", "functionality", "NUMBER", "There", "be", "tl", "NUMBER", "At", "least", "in", "Cutter", "it", "be", "currently", "use", "only", "for", "structures", "but", "not", "primitive", "types", "or", "pointers", "to", "structures", "or", "arrays", "NUMBER", "There", "be", "also", "Cd", "size", "count", "but", "it", "only", "sets", "type", "without", "distinguishing", "between", "uint", "NUMBER", "_t", "int", "NUMBER", "_t", "and", "double", "NUMBER", "There", "be", "also", "concept", "of", "flag", "size", "NUMBER", "Improving", "it", "in", "r", "NUMBER", "isn", "t", "strictly", "necesarry", "but", "it", "would", "be", "cleaner", "if", "r", "NUMBER", "had", "single", "system", "for", "this", "NUMBER", "Regardless", "of", "it", "be", "improved", "in", "r", "NUMBER", "the", "type", "information", "synchronization", "between", "r", "NUMBER", "and", "ghidra", "needs", "to", "be", "improved", "NUMBER", "r", "NUMBER", "ghidra", "R", "NUMBER", "Scope", "registerFlag", "currently", "only", "handles", "char", "for", "things", "define", "as", "strings", "in", "r", "NUMBER", "and", "comment", "TODO", "more", "types", "NUMBER", "Please", "don", "t", "create", "multiple", "create", "multiple", "Pull", "request", "for", "the", "same", "issue", "as", "you", "were", "told", "once", "already", "in", "NUMBER", "NUMBER", "Just", "notice", "that", "you", "now", "created", "a", "branch", "this", "time", "NUMBER", "That", "slightly", "complicates", "things", "NUMBER", "This", "be", "a", "know", "issue", "NUMBER", "See", "issue", "NUMBER", "As", "a", "temporary", "solution", "you", "can", "disable", "real", "name", "asm", "NUMBER", "flags", "NUMBER", "real", "from", "the", "settings", "shown", "in", "the", "image", "below", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "da", "NUMBER", "NUMBER", "ea", "NUMBER", "ae", "b", "NUMBER", "da", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "png", "You", "might", "have", "to", "update", "this", "part", "to", "fix", "the", "broken", "Linux", "build", "R", "NUMBER", "_INCLUDEPATH", "system", "pkg", "config", "variable", "includedir", "r_core", "libr", "As", "I", "commented", "in", "Telegram", "Windows", "Appveyor", "build", "fail", "when", "build", "r", "NUMBER", "ghidra", "which", "has", "it", "s", "own", "r", "NUMBER", "lookup", "code", "NUMBER", "hey", "you", "accidently", "push", "unrelated", "change", "NUMBER", "You", "don", "t", "need", "to", "create", "a", "new", "branch", "NUMBER", "To", "update", "a", "pr", "all", "you", "need", "to", "do", "be", "to", "add", "commit", "to", "the", "same", "local", "branch", "and", "push", "them", "to", "github", "it", "will", "automatically", "update", "the", "pr", "NUMBER", "We", "can", "go", "over", "the", "required", "steps", "together", "if", "you", "d", "like", "to", "NUMBER", "Send", "me", "a", "msg", "on", "Telegram", "Closed", "in", "favor", "of", "NUMBER", "and", "the", "contributor", "was", "taught", "how", "to", "handle", "such", "operations", "in", "the", "future", "and", "how", "to", "better", "work", "with", "git", "Surendrajat", "feel", "free", "to", "try", "this", "but", "be", "aware", "that", "most", "likely", "it", "will", "be", "a", "lot", "more", "complicated", "than", "just", "enabling", "just", "enabling", "the", "option", "NUMBER", "I", "recommend", "to", "setup", "pair", "of", "VMs", "so", "that", "you", "can", "locally", "go", "through", "the", "steps", "Travis", "do", "when", "preparing", "a", "package", "NUMBER", "One", "with", "Ubuntu", "NUMBER", "and", "preferably", "a", "second", "use", "completely", "different", "distro", "so", "that", "you", "can", "verify", "that", "resulting", "appimage", "works", "NUMBER", "That", "s", "very", "nice", "Thank", "you", "I", "recommend", "you", "to", "config", "your", "username", "and", "email", "of", "git", "in", "your", "machine", "to", "be", "the", "same", "as", "on", "github", "NUMBER", "It", "will", "make", "the", "commit", "username", "similar", "to", "yours", "I", "have", "no", "major", "objections", "against", "extra", "indicators", "but", "at", "least", "partially", "that", "seems", "like", "a", "problem", "of", "bad", "color", "theme", "NUMBER", "Here", "be", "how", "it", "looks", "use", "cutter", "color", "theme", "NUMBER", "The", "difference", "in", "color", "be", "much", "clearer", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "be", "NUMBER", "db", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "dcc", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "bf", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "NUMBER", "fc", "NUMBER", "ef", "NUMBER", "d", "NUMBER", "d", "NUMBER", "png", "Here", "with", "selection", "and", "PC", "overlapping", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "png", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "implement", "edit", "variable", "action", "and", "rename", "variable", "action", "for", "function", "variables", "function", "parameters", "and", "local", "variables", "NUMBER", "See", "GIFs", "below", "NUMBER", "NUMBER", "Both", "actions", "work", "for", "variables", "that", "be", "defined", "in", "radare", "NUMBER", "Showing", "Actions", "in", "Working", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "NUMBER", "a", "NUMBER", "e", "NUMBER", "bcd", "NUMBER", "gif", "NUMBER", "Disabled", "actions", "and", "tooltips", "for", "them", "NUMBER", "Actions", "be", "disabled", "when", "the", "variable", "represented", "by", "the", "annotation", "be", "not", "present", "in", "radare", "NUMBER", "Disabled", "actions", "with", "tooltip", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "f", "c", "NUMBER", "ba", "NUMBER", "bbc", "NUMBER", "gif", "NUMBER", "When", "the", "rename", "variable", "action", "be", "triggered", "by", "shortcut", "for", "a", "variable", "that", "doesn", "t", "exist", "in", "radare", "NUMBER", "Impossible", "rename", "triggered", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "c", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "dad", "NUMBER", "gif", "NUMBER", "When", "the", "edit", "variable", "action", "be", "triggered", "by", "shortcut", "for", "a", "variable", "that", "doesn", "t", "exist", "in", "radare", "NUMBER", "Impossible", "edit", "triggered", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "aaeb", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "b", "NUMBER", "a", "NUMBER", "gif", "TAG", "Test", "plan", "required", "NUMBER", "Fetch", "PR", "radareorg", "r", "NUMBER", "ghidra", "dec", "NUMBER", "and", "checkout", "commit", "radareorg", "r", "NUMBER", "ghidra", "dec", "ac", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "fb", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "e", "NUMBER", "abc", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "Compile", "it", "NUMBER", "NUMBER", "Load", "function", "in", "Cutter", "and", "find", "variables", "and", "argument", "that", "be", "present", "in", "the", "disassembly", "NUMBER", "See", "GIF", "NUMBER", "NUMBER", "Check", "if", "rename", "action", "and", "edit", "variable", "action", "be", "work", "properly", "in", "both", "ways", "NUMBER", "That", "be", "use", "the", "context", "menu", "and", "by", "use", "the", "shortcut", "NUMBER", "NUMBER", "Find", "variables", "and", "argument", "in", "the", "binary", "loaded", "that", "be", "not", "present", "in", "the", "disassembly", "NUMBER", "NUMBER", "Right", "click", "and", "in", "the", "context", "menu", "make", "sure", "these", "actions", "be", "disabled", "and", "the", "tooltips", "be", "shown", "when", "you", "hover", "over", "the", "action", "NUMBER", "Refer", "to", "GIF", "NUMBER", "NUMBER", "Click", "on", "these", "variables", "and", "try", "to", "use", "action", "for", "renaming", "variable", "and", "editing", "variables", "use", "shortcuts", "NUMBER", "Both", "should", "show", "a", "dialog", "NUMBER", "Refer", "to", "GIF", "NUMBER", "and", "NUMBER", "NUMBER", "Try", "use", "the", "rename", "action", "for", "references", "and", "make", "sure", "this", "PR", "didn", "t", "cause", "any", "regressions", "NUMBER", "TAG", "TAG", "Closing", "issue", "TAG", "Is", "a", "popup", "saying", "can", "t", "do", "it", "really", "any", "better", "than", "doing", "nothing", "How", "about", "showing", "this", "info", "on", "the", "status", "bar", "instead", "I", "find", "it", "a", "bit", "annoying", "to", "move", "the", "mouse", "to", "close", "it", "every", "time", "I", "press", "N", "by", "mistake", "NUMBER", "The", "idea", "be", "to", "show", "this", "warning", "so", "that", "the", "user", "will", "know", "that", "it", "be", "the", "expected", "behavior", "NUMBER", "Otherwise", "I", "think", "it", "might", "look", "like", "a", "broken", "feature", "NUMBER", "How", "often", "do", "people", "press", "N", "by", "mistake", "while", "the", "cursor", "be", "over", "a", "variable", "Also", "in", "order", "to", "close", "the", "warning", "dialog", "you", "can", "press", "Enter", "instead", "of", "moving", "the", "mouse", "NUMBER", "About", "the", "status", "bar", "I", "think", "this", "be", "a", "bit", "too", "verbose", "to", "be", "shown", "in", "the", "status", "bar", "NUMBER", "As", "of", "now", "you", "can", "see", "this", "dialog", "only", "if", "you", "press", "N", "or", "Y", "on", "keyboard", "and", "it", "can", "be", "close", "by", "Enter", "NUMBER", "These", "actions", "be", "disabled", "in", "the", "context", "menu", "and", "a", "tooltip", "be", "shown", "instead", "when", "the", "variable", "doesn", "t", "exist", "in", "radare", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "It", "be", "not", "obvious", "that", "Advanced", "Custom", "analysis", "mode", "be", "on", "the", "right", "side", "of", "slider", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "anlysis", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "f", "d", "NUMBER", "caae", "NUMBER", "ee", "NUMBER", "png", "I", "don", "t", "think", "the", "builtin", "Qt", "slider", "has", "support", "for", "attaching", "labels", "directly", "but", "the", "amount", "of", "them", "be", "small", "so", "space", "them", "out", "evenly", "should", "be", "good", "enough", "NUMBER", "In", "my", "opinion", "Custom", "be", "better", "name", "than", "Advanced", "for", "the", "last", "option", "NUMBER", "If", "there", "be", "very", "strong", "objections", "against", "aaa", "and", "aaaa", "labels", "can", "also", "be", "NUMBER", "NUMBER", "NUMBER", "custom", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "I", "understand", "that", "there", "be", "various", "ideas", "for", "much", "bigger", "change", "to", "analysis", "UI", "but", "this", "be", "something", "that", "be", "very", "easy", "to", "do", "right", "now", "until", "we", "figure", "out", "a", "better", "solution", "NUMBER", "Additional", "context", "TAG", "Why", "not", "both", "Can", "be", "call", "None", "Automatic", "Experimental", "Custom", "Because", "it", "doesn", "t", "give", "any", "information", "to", "the", "user", "NUMBER", "As", "a", "user", "I", "d", "choose", "Automatic", "or", "Experimental", "arbitrarily", "without", "having", "an", "idea", "what", "be", "I", "doing", "and", "what", "will", "I", "gain", "or", "risk", "with", "the", "Experimental", "NUMBER", "I", "want", "to", "guarantee", "the", "best", "experience", "to", "the", "users", "and", "not", "having", "a", "guessing", "game", "NUMBER", "Why", "not", "to", "install", "gcc", "NUMBER", "which", "should", "be", "available", "in", "Wheezy", "LINK", "Please", "don", "t", "waste", "your", "an", "everyone", "else", "time", "trying", "to", "make", "Cutter", "work", "with", "GCC", "NUMBER", "Being", "limited", "to", "broken", "NUMBER", "year", "old", "compiler", "increase", "the", "burden", "of", "development", "process", "make", "Cutter", "worse", "for", "NUMBER", "of", "people", "NUMBER", "It", "would", "be", "much", "more", "useful", "if", "you", "spent", "your", "energy", "improving", "or", "at", "least", "investigating", "the", "remote", "debugging", "problem", "in", "radare", "NUMBER", "Thank", "you", "lars", "NUMBER", "As", "you", "understand", "the", "Cutter", "project", "aims", "to", "focus", "on", "modern", "technologies", "and", "as", "such", "we", "don", "t", "intend", "to", "support", "old", "technologies", "NUMBER", "I", "be", "sure", "that", "if", "you", "took", "the", "time", "to", "open", "these", "issue", "it", "means", "that", "you", "want", "to", "help", "improve", "Cutter", "and", "these", "request", "be", "important", "request", "to", "you", "personally", "NUMBER", "Thus", "it", "be", "not", "at", "all", "a", "waste", "of", "time", "NUMBER", "Sadly", "we", "would", "not", "be", "able", "to", "provide", "the", "help", "in", "the", "way", "you", "wish", "as", "we", "would", "not", "support", "these", "technologies", "NUMBER", "That", "said", "we", "will", "try", "our", "best", "to", "improve", "the", "remote", "debugging", "so", "you", "can", "have", "a", "great", "remote", "debugging", "experience", "when", "time", "comes", "NUMBER", "Until", "then", "keep", "let", "us", "know", "of", "issue", "you", "encounter", "on", "other", "aspects", "of", "Cutter", "which", "be", "not", "relate", "to", "support", "old", "technologies", "NUMBER", "Thank", "you", "again", "and", "for", "your", "kind", "words", "TAG", "Nice", "idea", "I", "think", "that", "I", "d", "be", "happier", "to", "see", "a", "list", "of", "all", "references", "from", "a", "function", "afx", "when", "open", "the", "x", "ref", "dialog", "from", "the", "Functions", "widget", "_and", "from", "the", "function", "name", "at", "function", "declaration", "in", "disas", "graph", "although", "it", "be", "now", "mix", "with", "the", "first", "instruction", "NUMBER", "This", "can", "be", "do", "later", "on", "NUMBER", "_", "Showing", "afx", "in", "case", "of", "function", "widget", "wouldn", "t", "be", "bad", "that", "can", "be", "second", "part", "NUMBER", "But", "as", "first", "issue", "i", "would", "recommend", "to", "start", "with", "just", "hiding", "NUMBER", "Hi", "Radwan", "NUMBER", "No", "only", "one", "option", "Show", "All", "Xrefs", "shortcut", "X", "with", "optional", "bool", "showXrefFrom", "argument", "which", "defaults", "to", "true", "NUMBER", "When", "this", "dialog", "will", "be", "executed", "from", "the", "following", "widgets", "the", "showXrefFrom", "argument", "will", "be", "pass", "as", "false", "and", "you", "will", "hide", "the", "Xrefs", "from", "view", "in", "the", "dialog", "Strings", "widget", "Functions", "widget", "You", "don", "t", "hide", "the", "view", "when", "NUMBER", "results", "be", "find", "for", "X", "Refs", "in", "any", "other", "place", "NUMBER", "It", "be", "important", "to", "see", "that", "no", "x", "refs", "were", "find", "NUMBER", "karliss", "Do", "you", "have", "any", "more", "suggestions", "for", "this", "PR", "Looks", "good", "NUMBER", "What", "about", "source", "code", "references", "I", "think", "we", "discussed", "it", "sometimes", "that", "x", "refs", "in", "the", "decompiler", "can", "show", "references", "from", "the", "decompiler", "similar", "to", "what", "you", "have", "with", "IDEs", "NUMBER", "This", "be", "naturally", "more", "useful", "than", "showing", "assembly", "x", "refs", "NUMBER", "This", "can", "also", "be", "seen", "in", "IDA", "NUMBER", "Here", "be", "an", "image", "describing", "the", "x", "refs", "for", "a", "local", "variable", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bb", "NUMBER", "c", "NUMBER", "d", "NUMBER", "eb", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "NUMBER", "af", "NUMBER", "a", "NUMBER", "a", "NUMBER", "png", "Here", "be", "a", "global", "reference", "to", "a", "struct", "member", "all", "across", "the", "binary", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "d", "NUMBER", "eb", "NUMBER", "ea", "NUMBER", "dd", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "png", "Here", "be", "a", "local", "x", "refs", "for", "a", "struct", "member", "in", "a", "function", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "eb", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "d", "NUMBER", "d", "NUMBER", "png", "Here", "be", "a", "global", "reference", "to", "a", "struct", "member", "all", "across", "the", "binary", "How", "would", "you", "imagine", "it", "s", "implementation", "ITAYC", "NUMBER", "HEN", "Here", "be", "an", "image", "describing", "the", "x", "refs", "for", "a", "local", "variable", "About", "function", "variables", "I", "have", "said", "that", "I", "will", "implement", "it", "if", "time", "permits", "after", "the", "rest", "of", "my", "work", "be", "do", "NUMBER", "I", "will", "create", "an", "issue", "with", "the", "screenshots", "you", "shared", "and", "briefly", "explaining", "what", "I", "think", "can", "be", "do", "about", "this", "NUMBER", "x", "refs", "for", "a", "local", "variable", "I", "have", "opened", "an", "issue", "explaining", "how", "I", "think", "this", "can", "be", "implement", "NUMBER", "NUMBER", "Thanks", "karliss", "Are", "you", "waiting", "for", "something", "on", "this", "PR", "Does", "this", "PR", "be", "use", "functionalities", "from", "the", "decompiler", "refactoring", "if", "not", "maybe", "this", "can", "be", "push", "to", "maste", "as", "it", "be", "a", "bug", "fix", "improvement", "which", "be", "small", "and", "can", "be", "enjoyed", "by", "our", "users", "NUMBER", "What", "do", "you", "think", "ITAYC", "NUMBER", "HEN", "Yes", "we", "have", "improved", "DecompilerWidget", "and", "this", "uses", "some", "improvement", "and", "features", "in", "decompiler", "refactoring", "e", "NUMBER", "g", "NUMBER", "setInfoForBreakpoints", "NUMBER", "It", "shouldn", "t", "take", "more", "than", "NUMBER", "NUMBER", "days", "to", "get", "decompiler", "refactoring", "ready", "to", "get", "merge", "to", "master", "NUMBER", "Thanks", "TAG", "Additional", "context", "TAG", "Hi", "shane", "NUMBER", "It", "was", "not", "resolve", "NUMBER", "Please", "feel", "free", "to", "work", "on", "it", "and", "ask", "any", "question", "that", "might", "raise", "during", "the", "way", "NUMBER", "We", "would", "love", "to", "assist", "wherever", "needed", "Hey", "Rachel", "Let", "us", "know", "if", "you", "need", "any", "more", "guidance", "or", "anything", "else", "NUMBER", "The", "PR", "be", "very", "close", "to", "be", "finished", "We", "re", "here", "for", "any", "question", "you", "have", "and", "would", "love", "to", "help", "you", "with", "your", "contribution", "Of", "course", "It", "goes", "without", "saying", "that", "no", "contribution", "be", "more", "important", "than", "taking", "care", "of", "your", "mental", "health", "so", "take", "how", "much", "time", "you", "need", "NUMBER", "The", "PR", "can", "wait", "Thanks", "The", "PR", "be", "looking", "better", "already", "Will", "address", "your", "other", "comments", "in", "another", "time", "but", "here", "s", "a", "quick", "explanation", "about", "the", "shortcut", "question", "NUMBER", "TAG", "S", "TAG", "be", "already", "bound", "to", "the", "Seek", "operation", "as", "well", "as", "TAG", "G", "TAG", "NUMBER", "This", "be", "a", "global", "shortcut", "and", "I", "believe", "it", "be", "the", "reason", "you", "couldn", "t", "bind", "the", "String", "operation", "to", "this", "key", "NUMBER", "Seek", "be", "the", "common", "term", "in", "radare", "NUMBER", "for", "navigation", "and", "the", "radare", "NUMBER", "command", "to", "seek", "be", "s", "r", "NUMBER", "NUMBER", "x", "NUMBER", "s", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "I", "believe", "that", "us\u05dfng", "TAG", "A", "TAG", "came", "from", "IDA", "and", "it", "makes", "the", "transfer", "form", "IDA", "to", "Cutter", "easier", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "cafc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "ae", "NUMBER", "png", "haha", "yeah", "it", "s", "easy", "to", "miss", "it", "but", "when", "clicking", "TAG", "S", "TAG", "the", "cursor", "be", "moved", "to", "focus", "on", "the", "quick", "navigation", "textbox", "at", "the", "top", "of", "Cutter", "s", "interface", "NUMBER", "Then", "one", "can", "type", "address", "or", "a", "flag", "to", "easily", "navigate", "to", "the", "desire", "location", "Sent", "PR", "to", "make", "it", "a", "little", "bit", "clearer", "as", "now", "it", "will", "have", "visible", "indication", "that", "Omnibar", "gets", "the", "focus", "LINK", "My", "closing", "thought", "be", "that", "Cutter", "be", "build", "in", "C", "NUMBER", "mode", "but", "the", "pointer", "in", "EditStringDialog", "for", "the", "UI", "be", "a", "raw", "pointer", "how", "would", "you", "feel", "about", "having", "this", "converted", "to", "std", "unique_ptr", "TAG", "so", "the", "destructor", "and", "manual", "memory", "management", "went", "away", "No", "objections", "against", "that", "NUMBER", "Plenty", "of", "other", "ui", "classes", "already", "do", "that", "NUMBER", "Just", "keep", "in", "mind", "that", "Cutter", "isn", "t", "just", "C", "NUMBER", "code", "it", "also", "uses", "Qt", "so", "in", "some", "cases", "things", "that", "look", "like", "raw", "pointers", "aren", "t", "really", "a", "raw", "points", "because", "memory", "management", "be", "handle", "by", "Qt", "not", "this", "case", "NUMBER", "Note", "that", "it", "be", "possible", "to", "move", "backwards", "use", "shift", "tab", "NUMBER", "Moving", "address", "be", "also", "fine", "NUMBER", "Created", "separate", "issue", "for", "dealing", "with", "initial", "values", "NUMBER", "NUMBER", "No", "so", "far", "the", "the", "text", "you", "be", "write", "doesn", "t", "make", "sense", "I", "can", "t", "understand", "what", "you", "want", "NUMBER", "Option", "to", "compile", "with", "custom", "Qt", "NUMBER", "library", "You", "can", "already", "configure", "build", "system", "to", "use", "Qt", "of", "your", "choice", "assuming", "it", "compatible", "with", "Cutter", "NUMBER", "If", "you", "lack", "the", "experience", "work", "with", "build", "systems", "Kitware", "provides", "training", "courses", "where", "you", "can", "improve", "your", "skills", "NUMBER", "NUMBER", "NUMBER", "and", "NUMBER", "seems", "to", "be", "incompatible", "with", "Cutter", "when", "compile", "with", "them", "NUMBER", "All", "Cutter", "commit", "test", "use", "Qt", "NUMBER", "IIf", "Cutter", "compiles", "use", "Qt", "NUMBER", "and", "NUMBER", "it", "be", "unlikely", "that", "the", "version", "between", "NUMBER", "NUMBER", "will", "not", "work", "but", "if", "you", "find", "problem", "with", "them", "you", "be", "welcome", "to", "send", "pull", "request", "fix", "that", "NUMBER", "Provide", "the", "option", "to", "enable", "the", "full", "compilation", "of", "the", "Qt", "NUMBER", "with", "only", "the", "required", "modules", "libraries", "NUMBER", "full", "compilation", "of", "Qt", "NUMBER", "and", "only", "the", "required", "modules", "seems", "contradicting", "NUMBER", "Either", "way", "compilation", "of", "Qt", "be", "handle", "by", "build", "scripts", "that", "be", "part", "of", "Qt", "NUMBER", "I", "don", "t", "see", "how", "it", "be", "relate", "to", "Cutter", "NUMBER", "If", "you", "don", "t", "understand", "how", "Qt", "compilation", "process", "works", "you", "can", "discuss", "that", "with", "Qt", "developers", "NUMBER", "Then", "link", "optionally", "Cutter", "with", "it", "for", "a", "new", "version", "without", "the", "Qt", "NUMBER", "dependecy", "NUMBER", "This", "sentence", "doesn", "t", "make", "sense", "NUMBER", "Cutter", "be", "GUI", "for", "radare", "NUMBER", "made", "use", "Qt", "NUMBER", "NUMBER", "of", "Cutter", "code", "interacts", "with", "Qt", "NUMBER", "Cutter", "without", "dependency", "on", "Qt", "NUMBER", "would", "be", "just", "radare", "NUMBER", "First", "one", "isn", "t", "even", "a", "qt", "error", "that", "s", "a", "C", "error", "NUMBER", "Providing", "a", "script", "for", "compile", "Qt", "wouldn", "t", "help", "you", "with", "that", "NUMBER", "GCC", "NUMBER", "doesn", "t", "have", "proper", "c", "NUMBER", "support", "NUMBER", "Trying", "to", "compile", "Cutter", "use", "it", "or", "maintaining", "patches", "to", "do", "so", "be", "waste", "of", "time", "NUMBER", "If", "you", "be", "not", "happy", "with", "Qt", "build", "use", "build", "scripts", "provide", "by", "Qt", "developers", "that", "s", "up", "to", "you", "NUMBER", "If", "you", "really", "need", "Cutter", "on", "that", "system", "you", "can", "compile", "it", "statically", "within", "Alpine", "Linux", "container", "and", "just", "copy", "the", "binaries", "NUMBER", "I", "don", "t", "know", "though", "if", "Qt", "or", "Cutter", "support", "completely", "static", "build", "though", "NUMBER", "On", "Mon", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "karliss", "TAG", "write", "Closed", "NUMBER", "TAG", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "But", "I", "recommend", "to", "try", "to", "do", "whatever", "you", "want", "with", "plain", "radare", "NUMBER", "since", "you", "succeeded", "with", "build", "it", "NUMBER", "On", "Tue", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "XVilka", "Haos", "of", "System", "TAG", "write", "If", "you", "really", "need", "Cutter", "on", "that", "system", "you", "can", "compile", "it", "statically", "within", "Alpine", "Linux", "container", "and", "just", "copy", "the", "binaries", "NUMBER", "I", "don", "t", "know", "though", "if", "Qt", "or", "Cutter", "support", "completely", "static", "build", "though", "NUMBER", "On", "Mon", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "karliss", "TAG", "write", "Closed", "NUMBER", "TAG", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Use", "the", "default", "paths", "expected", "by", "r", "NUMBER", "dec", "build", "scripts", "NUMBER", "Use", "meson", "directly", "instead", "of", "meson", "NUMBER", "py", "which", "planned", "to", "be", "remove", "NUMBER", "Test", "plan", "required", "Tests", "be", "green", "Inspect", "Appveyor", "log", "and", "make", "sure", "r", "NUMBER", "dec", "and", "r", "NUMBER", "ghidra", "were", "compiled", "successfully", "they", "be", "post", "build", "steps", "so", "doesn", "t", "cause", "build", "failure", "Download", "the", "build", "from", "Appveyor", "and", "make", "sure", "r", "NUMBER", "dec", "and", "r", "NUMBER", "ghidra", "work", "NUMBER", "Closing", "issue", "close", "NUMBER", "Tested", "the", "archive", "uploaded", "to", "appveyor", "on", "Windows", "NUMBER", "Reviewer", "should", "also", "test", "it", "NUMBER", "I", "already", "report", "the", "r", "NUMBER", "dec", "crash", "and", "it", "was", "supposedly", "fix", "NUMBER", "Once", "all", "the", "CI", "fix", "be", "do", "I", "will", "rebase", "this", "branch", "it", "will", "make", "a", "new", "build", "which", "should", "contain", "r", "NUMBER", "dec", "fix", "NUMBER", "Just", "tried", "the", "latest", "build", "NUMBER", "R", "NUMBER", "dec", "crash", "problem", "seems", "to", "be", "fix", "NUMBER", "Analysis", "taking", "long", "time", "and", "UI", "freezing", "be", "two", "different", "things", "NUMBER", "Changing", "analysis", "slider", "will", "likely", "have", "no", "effect", "on", "the", "second", "NUMBER", "And", "I", "would", "large", "part", "of", "issue", "be", "about", "Cutter", "freezing", "NUMBER", "Having", "a", "note", "about", "dealing", "with", "large", "binaries", "would", "be", "good", "but", "current", "message", "be", "wrong", "NUMBER", "I", "will", "try", "to", "write", "down", "the", "required", "adjustments", "tomorrow", "NUMBER", "Here", "be", "my", "suggested", "version", "for", "text", "Initial", "Analysis", "takes", "a", "long", "time", "or", "Cutter", "UI", "freezes", "Cutter", "and", "radare", "NUMBER", "currently", "doesn", "t", "work", "very", "well", "with", "large", "and", "very", "large", "binaries", "NUMBER", "Exact", "limits", "depend", "on", "the", "content", "of", "binary", "but", "roughly", "few", "MB", "can", "be", "considered", "large", "and", "may", "take", "a", "few", "minutes", "to", "analyze", "NUMBER", "More", "than", "NUMBER", "MB", "be", "very", "large", "analysis", "with", "default", "settings", "will", "likely", "take", "a", "very", "long", "time", "and", "UI", "might", "occasionally", "freeze", "UI", "during", "usage", "NUMBER", "If", "the", "analysis", "takes", "longer", "than", "NUMBER", "NUMBER", "minutes", "it", "be", "recommended", "to", "retry", "it", "with", "different", "analysis", "options", "NUMBER", "See", "radare", "NUMBER", "documentation", "about", "analysis", "TAG", "_", "to", "learn", "more", "about", "commands", "and", "options", "that", "can", "be", "use", "to", "more", "selectively", "analyze", "only", "the", "relevant", "parts", "of", "code", "NUMBER", "I", "think", "this", "can", "be", "do", "without", "waiting", "for", "the", "Loading", "Options", "page", "to", "be", "add", "can", "simply", "be", "update", "later", "on", "It", "s", "for", "from", "be", "the", "state", "of", "Cutter", "in", "NUMBER", "Maybe", "the", "one", "at", "R", "NUMBER", "con", "NUMBER", "but", "id", "didn", "t", "have", "a", "debugger", "then", "NUMBER", "Anyways", "we", "will", "always", "stick", "behind", "the", "videos", "that", "s", "reality", "but", "this", "one", "be", "too", "old", "and", "we", "should", "have", "a", "Cutter", "Basics", "video", "series", "NUMBER", "Please", "don", "t", "merge", "until", "the", "discussion", "about", "where", "to", "store", "this", "be", "resolve", "NUMBER", "In", "some", "of", "the", "cases", "I", "don", "t", "think", "moving", "gif", "add", "any", "value", "for", "document", "widgets", "NUMBER", "It", "only", "makes", "it", "more", "difficult", "to", "inspect", "it", "or", "read", "the", "text", "as", "things", "keep", "moving", "and", "you", "can", "t", "even", "stop", "it", "NUMBER", "An", "overview", "video", "would", "be", "nice", "NUMBER", "It", "also", "wouldn", "t", "be", "affected", "by", "the", "size", "discussion", "problem", "since", "it", "would", "probably", "be", "stored", "on", "a", "video", "hosting", "service", "like", "Youtube", "NUMBER", "What", "next", "week", "arrived", "so", "fast", "O", "Updated", "the", "dashboard", "image", "and", "other", "minor", "fix", "NUMBER", "The", "graph", "hex", "and", "disas", "can", "stay", "gifs", "NUMBER", "The", "UI", "on", "my", "PC", "for", "the", "tree", "widgets", "search", "strings", "NUMBER", "isn", "t", "look", "good", "as", "the", "table", "look", "inactive", "NUMBER", "Please", "take", "the", "screenshots", "from", "your", "machine", "as", "it", "looks", "better", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "da", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ac", "NUMBER", "png", "I", "don", "t", "consider", "them", "a", "widgets", "but", "dialogs", "NUMBER", "You", "can", "keep", "it", "as", "Widgets", "NUMBER", "We", "have", "dozens", "of", "Widgets", "and", "views", "having", "them", "together", "in", "one", "place", "like", "now", "be", "only", "an", "initial", "phase", "of", "the", "docs", "NUMBER", "At", "the", "end", "they", "should", "all", "have", "their", "own", "detailed", "page", "Hey", "So", "the", "status", "be", "that", "we", "re", "waiting", "for", "karliss", "to", "move", "the", "docs", "or", "for", "you", "to", "write", "verbose", "descriptions", "Surendrajat", "The", "docs", "moving", "process", "will", "take", "a", "while", "I", "assume", "NUMBER", "It", "s", "not", "looking", "so", "bad", "NUMBER", "I", "would", "like", "to", "get", "some", "feedback", "on", "NUMBER", "This", "be", "only", "my", "opinion", "and", "I", "d", "like", "to", "hear", "the", "input", "from", "others", "as", "well", "don", "t", "take", "it", "as", "absolute", "truth", "NUMBER", "I", "don", "t", "think", "most", "of", "those", "should", "be", "in", "preferences", "NUMBER", "R", "NUMBER", "options", "can", "be", "roughly", "split", "into", "NUMBER", "categories", "Global", "settings", "things", "relate", "user", "s", "preferred", "way", "of", "display", "things", "and", "some", "behavior", "Project", "settings", "things", "releated", "to", "specific", "session", "like", "current", "architecture", "and", "other", "executable", "properties", "Configuration", "for", "specific", "action", "options", "that", "change", "how", "action", "you", "be", "about", "to", "make", "will", "behave", "NUMBER", "For", "each", "run", "of", "the", "action", "you", "might", "want", "different", "values", "NUMBER", "And", "many", "of", "them", "could", "have", "be", "an", "argument", "to", "said", "action", "but", "due", "to", "text", "based", "nature", "of", "r", "NUMBER", "interface", "it", "would", "have", "be", "cumbersome", "to", "specify", "all", "of", "them", "each", "time", "NUMBER", "In", "my", "opinion", "most", "analysis", "options", "except", "few", "like", "verbosity", "don", "t", "belong", "to", "settings", "NUMBER", "One", "of", "the", "approaches", "that", "was", "discussed", "use", "approach", "more", "similar", "to", "how", "ghidra", "interface", "do", "it", "NUMBER", "Have", "analysis", "dialog", "where", "you", "can", "configure", "what", "kind", "of", "analaysis", "to", "perform", "NUMBER", "It", "would", "be", "showed", "in", "two", "cases", "during", "initial", "open", "and", "after", "the", "executable", "has", "be", "opened", "by", "activating", "analysis", "action", "from", "menu", "NUMBER", "At", "the", "moment", "we", "have", "a", "set", "of", "similar", "settings", "when", "selecting", "Advanced", "analysis", "level", "in", "the", "initial", "options", "NUMBER", "Having", "the", "split", "of", "some", "randomly", "selected", "set", "of", "analysis", "options", "in", "initial", "dialog", "and", "similar", "but", "slightly", "different", "set", "without", "a", "good", "reason", "in", "settings", "doesn", "t", "seem", "like", "good", "idea", "to", "me", "NUMBER", "I", "discussed", "this", "a", "bit", "with", "ITAYC", "NUMBER", "HEN", "and", "he", "point", "out", "a", "case", "I", "didn", "t", "think", "of", "NUMBER", "Even", "if", "we", "had", "standalone", "analysis", "dialog", "there", "would", "be", "use", "for", "having", "some", "of", "the", "analysis", "options", "available", "in", "settings", "page", "NUMBER", "Turns", "out", "some", "of", "the", "actions", "like", "defining", "a", "function", "which", "doesn", "t", "seem", "like", "analysis", "from", "UI", "and", "workflow", "perspective", "be", "affected", "by", "some", "of", "the", "anal", "NUMBER", "settings", "NUMBER", "Defining", "a", "function", "also", "do", "some", "control", "flow", "analysis", "which", "be", "necesarry", "for", "identifying", "boundaries", "of", "the", "function", "also", "it", "analyzes", "the", "local", "variables", "NUMBER", "I", "don", "t", "think", "there", "needs", "to", "be", "analyze", "button", "in", "settings", "NUMBER", "In", "future", "there", "might", "be", "one", "somewhere", "in", "main", "menu", "NUMBER", "I", "assume", "you", "add", "because", "it", "wasn", "t", "clear", "what", "s", "the", "use", "case", "for", "analysis", "settings", "be", "and", "how", "to", "trigger", "it", "NUMBER", "I", "hope", "you", "aren", "t", "discouraged", "by", "this", "and", "will", "continue", "helping", "Cutter", "NUMBER", "Sometimes", "seemingly", "easy", "tasks", "turn", "out", "more", "complicated", "due", "to", "need", "to", "decide", "how", "the", "program", "should", "behave", "and", "what", "actually", "needs", "to", "be", "change", "NUMBER", "I", "really", "like", "this", "PR", "and", "especially", "the", "detailed", "description", "that", "shows", "that", "you", "paid", "attention", "to", "many", "important", "things", "NUMBER", "Very", "happy", "that", "you", "raise", "them", "as", "I", "didn", "t", "think", "of", "these", "before", "NUMBER", "After", "discussion", "and", "clarifications", "with", "Karliss", "we", "recommend", "the", "following", "steps", "NUMBER", "Having", "the", "Analyze", "program", "button", "with", "a", "tooltip", "Analyze", "the", "program", "use", "radare", "NUMBER", "s", "aaa", "command", "NUMBER", "NUMBER", "Add", "a", "menu", "item", "File", "Analyze", "program", "to", "do", "the", "same", "NUMBER", "It", "will", "have", "the", "same", "tooltip", "NUMBER", "NUMBER", "Remove", "this", "log", "line", "loading", "file", "when", "executing", "the", "analysis", "from", "these", "places", "keep", "it", "when", "run", "from", "Initial", "Analysis", "dialog", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "af", "NUMBER", "c", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "dcbbf", "NUMBER", "f", "NUMBER", "png", "This", "can", "be", "a", "conditional", "print", "for", "the", "check", "that", "add", "to", "the", "right", "place", "maybe", "to", "this", "if", "which", "be", "already", "exist", "NUMBER", "Test", "and", "let", "us", "know", "NUMBER", "if", "openedFiles", "NUMBER", "size", "options", "NUMBER", "filename", "NUMBER", "length", "NUMBER", "Change", "the", "title", "when", "use", "the", "dialog", "as", "Initial", "Analysis", "isn", "t", "right", "for", "these", "cases", "NUMBER", "You", "can", "either", "change", "it", "only", "for", "these", "buttons", "menu", "item", "and", "preferences", "dialog", "or", "finding", "something", "generic", "for", "all", "cases", "such", "as", "Analyzing", "program", "NUMBER", "NUMBER", "Documentation", "will", "be", "good", "NUMBER", "It", "can", "be", "very", "limited", "currently", "but", "can", "have", "a", "dedicated", "page", "for", "Preferences", "Analysis", "under", "the", "user", "docs", "Another", "potential", "reference", "for", "UI", "guidelines", "be", "to", "take", "a", "look", "at", "macOS", "Windows", "Gnome", "KDE", "NUMBER", "Each", "of", "them", "should", "have", "their", "user", "interface", "guidelines", "NUMBER", "Here", "be", "a", "few", "more", "Apple", "LINK", "interface", "guidelines", "maco", "menus", "menu", "anatomy", "and", "LINK", "apsg", "NUMBER", "eef", "NUMBER", "KDE", "LINK", "Gnome", "LINK", "style", "NUMBER", "html", "NUMBER", "en", "and", "LINK", "Maybe", "the", "documentation", "could", "have", "one", "more", "sentence", "explaining", "that", "r", "NUMBER", "script", "be", "file", "containing", "r", "NUMBER", "commands", "or", "a", "link", "to", "r", "NUMBER", "doc", "showing", "commands", "NUMBER", "Does", "it", "have", "to", "be", "PE", "and", "do", "it", "have", "to", "be", "Project", "Looks", "like", "you", "might", "be", "mixing", "multiple", "R", "NUMBER", "version", "NUMBER", "You", "compiled", "Cutter", "with", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "ON", "NUMBER", "But", "r", "NUMBER", "ghidra", "during", "compilation", "most", "likely", "use", "system", "r", "NUMBER", "I", "don", "t", "recommend", "use", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "ON", "for", "system", "installation", "NUMBER", "This", "option", "be", "more", "aimed", "at", "development", "build", "NUMBER", "Please", "do", "the", "following", "steps", "and", "confirm", "if", "it", "still", "crashes", "clean", "up", "all", "the", "old", "installations", "Build", "and", "install", "r", "NUMBER", "use", "r", "NUMBER", "source", "that", "matches", "with", "submodule", "Build", "cutter", "with", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "OFF", "Build", "r", "NUMBER", "ghidra", "I", "still", "haven", "t", "seen", "you", "answer", "of", "what", "happens", "when", "you", "run", "cutter", "with", "no", "plugins", "flag", "NUMBER", "Does", "it", "actually", "crashes", "or", "do", "the", "UI", "freezes", "and", "you", "kill", "it", "either", "directly", "or", "with", "a", "popups", "that", "shown", "shows", "What", "happens", "if", "you", "try", "run", "decompiler", "in", "the", "console", "widget", "use", "pdg", "command", "The", "output", "you", "posted", "earlier", "from", "gdb", "doesn", "t", "look", "like", "crash", "more", "like", "something", "calling", "exit", "NUMBER", "You", "can", "try", "setting", "a", "breakpoint", "in", "exit", "method", "by", "calling", "break", "exit", "in", "gdb", "before", "starting", "the", "executable", "NUMBER", "Does", "resetting", "Cutter", "settings", "have", "any", "effect", "Have", "you", "tried", "more", "than", "one", "executable", "Does", "it", "happens", "with", "any", "function", "in", "the", "executable", "As", "can", "be", "seen", "in", "the", "stacktrace", "exit", "be", "call", "from", "dynamic", "loader", "methods", "NUMBER", "Most", "likely", "when", "the", "cutter", "half", "of", "r", "NUMBER", "ghidra", "plugin", "try", "to", "access", "methods", "from", "r", "NUMBER", "plugin", "it", "can", "t", "find", "them", "doesn", "t", "find", "them", "NUMBER", "Most", "likely", "reasons", "for", "this", "be", "non", "matching", "version", "of", "r", "NUMBER", "plugin", "and", "cutter", "plugin", "the", "r", "NUMBER", "plugin", "isn", "t", "loaded", "Maybe", "one", "of", "the", "plugins", "was", "install", "wrong", "directory", "and", "isn", "t", "loaded", "at", "all", "or", "it", "be", "loading", "an", "older", "one", "that", "you", "had", "before", "instead", "of", "most", "recent", "one", "you", "compiled", "NUMBER", "Thank", "you", "for", "open", "this", "issue", "NUMBER", "It", "seems", "like", "the", "version", "mismatch", "was", "responsible", "for", "the", "problem", "NUMBER", "As", "the", "issue", "be", "resolve", "I", "will", "close", "it", "If", "it", "wasn", "t", "please", "feel", "free", "to", "re", "open", "this", "issue", "and", "we", "would", "love", "to", "help", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "Environment", "information", "Operating", "System", "Windows", "NUMBER", "Cutter", "version", "Cutter", "NUMBER", "rc", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "PE", "Describe", "the", "bug", "During", "debuging", "it", "seems", "that", "condition", "for", "highlight", "line", "with", "current", "PC", "be", "incorrectly", "uses", "current", "seek", "offset", "instead", "of", "PC", "for", "some", "of", "the", "checks", "NUMBER", "To", "Reproduce", "NUMBER", "Start", "debugging", "and", "wait", "for", "program", "to", "stop", "it", "should", "be", "one", "of", "builtin", "stopping", "on", "entry", "or", "something", "like", "that", "NUMBER", "Not", "test", "with", "breakpoints", "which", "would", "introduce", "third", "line", "highlight", "rule", "NUMBER", "NUMBER", "Select", "line", "that", "be", "few", "lines", "bellow", "the", "one", "with", "current", "PC", "NUMBER", "scroll", "up", "until", "selected", "line", "reaches", "end", "observe", "that", "the", "last", "line", "be", "now", "highlight", "use", "current", "PC", "color", "instead", "of", "selected", "line", "color", "and", "line", "with", "current", "PC", "isn", "t", "highlight", "at", "all", "NUMBER", "Since", "scrolling", "happens", "multiple", "lines", "at", "a", "time", "the", "selected", "line", "might", "need", "some", "adjustment", "to", "allow", "positioning", "it", "at", "the", "bottom", "of", "screen", "NUMBER", "NUMBER", "scroll", "further", "up", "and", "observe", "that", "no", "line", "be", "highlight", "even", "though", "line", "with", "current", "PC", "be", "still", "in", "screen", "NUMBER", "Expected", "behavior", "Line", "with", "current", "PC", "be", "correctly", "highlight", "regardless", "of", "scroll", "position", "NUMBER", "Screenshots", "Step", "NUMBER", "NUMBER", "The", "green", "line", "indicates", "current", "PC", "and", "gray", "blue", "be", "selected", "line", "NUMBER", "f", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "ec", "NUMBER", "cc", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "b", "NUMBER", "PNG", "Step", "NUMBER", "wrong", "highlight", "f", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cc", "NUMBER", "NUMBER", "ea", "NUMBER", "da", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "cd", "NUMBER", "PNG", "Step", "NUMBER", "highlight", "disappears", "completely", "NUMBER", "f", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "da", "NUMBER", "cc", "NUMBER", "NUMBER", "ea", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "png", "Additional", "context", "TAG", "Nowadays", "we", "check", "radare", "NUMBER", "itself", "on", "Debian", "Jessie", "I", "think", "it", "s", "old", "enough", "NUMBER", "LINK", "_suite_focus", "true", "The", "problem", "of", "doing", "the", "same", "with", "Cutter", "be", "tricker", "since", "it", "requires", "relatively", "new", "Qt", "NUMBER", "I", "be", "not", "NUMBER", "sure", "if", "that", "Qt", "will", "even", "compile", "on", "that", "distribution", "NUMBER", "The", "oldest", "distro", "on", "which", "Cutter", "be", "regullary", "compiled", "be", "Ubuntu", "NUMBER", "It", "can", "be", "compiled", "there", "mostly", "with", "the", "package", "from", "official", "repository", "NUMBER", "It", "be", "already", "somewhat", "annoying", "maintaining", "compatibility", "with", "CMake", "and", "Qt", "that", "old", "NUMBER", "As", "can", "bee", "seen", "in", "the", "message", "error", "comes", "from", "tree", "sitter", "LINK", "sitter", "tree", "sitter", "library", "not", "from", "the", "Cutter", "or", "radare", "NUMBER", "source", "code", "NUMBER", "That", "be", "a", "dependency", "of", "a", "dependency", "of", "Cutter", "ask", "about", "it", "here", "isn", "t", "the", "best", "place", "NUMBER", "Debian", "NUMBER", "be", "not", "only", "past", "EOL", "it", "be", "also", "past", "LTS", "and", "even", "extend", "LTS", "NUMBER", "Anyway", "I", "recommend", "to", "open", "a", "bug", "of", "better", "a", "pull", "request", "in", "tree", "sitter", "library", "NUMBER", "cc", "ret", "NUMBER", "libc", "Would", "be", "nice", "to", "cherry", "pick", "it", "in", "NUMBER", "then", "after", "NUMBER", "On", "Thu", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Riccardo", "Schirone", "TAG", "write", "Yes", "ok", "that", "s", "perfect", "NUMBER", "I", "will", "provide", "a", "full", "patch", "and", "after", "you", "test", "it", "we", "can", "include", "it", "in", "r", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "As", "I", "mention", "before", "Cutter", "be", "be", "test", "against", "Ubuntu", "NUMBER", "with", "all", "system", "package", "except", "meson", "NUMBER", "It", "has", "Qt", "NUMBER", "Environment", "information", "Operating", "System", "Linux", "also", "observed", "on", "macOS", "Cutter", "version", "NUMBER", "rc", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "N", "A", "Describe", "the", "bug", "It", "be", "possible", "to", "open", "multiple", "copies", "of", "setting", "dialog", "NUMBER", "To", "Reproduce", "Edit", "Preferences", "Edit", "Preferences", "Observe", "that", "you", "have", "two", "settings", "dialogs", "Expected", "behavior", "Only", "one", "settings", "dialog", "be", "allow", "NUMBER", "One", "approach", "be", "to", "track", "if", "any", "exist", "settings", "dialog", "be", "already", "opened", "and", "raise", "it", "in", "case", "repeatedly", "selecting", "menu", "item", "NUMBER", "Alternative", "approach", "would", "be", "make", "it", "modal", "and", "blocking", "access", "to", "main", "window", "NUMBER", "I", "like", "the", "first", "approach", "slightly", "better", "because", "it", "allows", "to", "try", "out", "the", "new", "settings", "more", "easily", "NUMBER", "Screenshots", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "df", "NUMBER", "cc", "NUMBER", "NUMBER", "ea", "NUMBER", "dc", "NUMBER", "cca", "NUMBER", "a", "NUMBER", "png", "Additional", "context", "TAG", "If", "I", "m", "a", "noobie", "ask", "about", "this", "then", "please", "point", "me", "towards", "how", "to", "use", "Cutter", "with", "remote", "GDB", "sessions", "NUMBER", "The", "question", "be", "completely", "fine", "NUMBER", "Sorry", "it", "took", "me", "a", "while", "to", "get", "to", "this", "issue", "NUMBER", "Connecting", "to", "remote", "gdb", "only", "requires", "setting", "the", "IP", "port", "field", "in", "the", "remote", "debug", "dialog", "NUMBER", "No", "other", "actions", "be", "required", "and", "it", "seems", "that", "you", "already", "pass", "that", "stage", "NUMBER", "I", "feel", "I", "m", "not", "sure", "that", "after", "connecting", "to", "the", "Remote", "GDB", "I", "need", "to", "execute", "MAP", "FILE", "to", "load", "the", "local", "copy", "of", "the", "binary", "NUMBER", "Shouldn", "t", "be", "necessary", "NUMBER", "This", "seems", "to", "be", "an", "issue", "when", "open", "gdbserver", "from", "windows", "doing", "the", "same", "in", "Linux", "works", "perfectly", "fine", "Once", "you", "reach", "a", "function", "that", "can", "be", "decompiled", "the", "entry", "point", "also", "prints", "NUMBER", "I", "be", "currently", "looking", "into", "this", "to", "find", "a", "solution", "NUMBER", "To", "have", "good", "information", "You", "re", "saying", "that", "if", "I", "use", "a", "remote", "Cutter", "run", "in", "Linux", "connected", "to", "a", "gdbserver", "run", "in", "another", "Linux", "box", "then", "it", "will", "work", "Yep", "test", "as", "I", "write", "and", "it", "worked", "well", "for", "main", "NUMBER", "Didn", "t", "look", "into", "it", "further", "but", "it", "didn", "t", "have", "any", "error", "and", "the", "text", "highlight", "in", "decompiler", "view", "was", "synced", "with", "disassembly", "NUMBER", "If", "I", "open", "with", "the", "option", "Don", "t", "open", "any", "file", "to", "connect", "only", "to", "the", "GDB", "server", "then", "in", "this", "case", "the", "socket", "connection", "be", "not", "stablished", "NUMBER", "We", "don", "t", "have", "an", "option", "yet", "to", "directly", "connect", "to", "gdb", "in", "Cutter", "but", "it", "be", "possible", "with", "radare", "NUMBER", "This", "usage", "be", "unsupported", "NUMBER", "It", "s", "a", "requirement", "to", "open", "the", "binary", "file", "first", "from", "a", "local", "copy", "and", "after", "connect", "to", "the", "remote", "gdbserver", "Yes", "When", "use", "the", "AppImage", "connected", "the", "remote", "GDB", "server", "decompiler", "don", "t", "show", "good", "data", "NUMBER", "even", "if", "I", "try", "r", "NUMBER", "dec", "or", "Ghidra", "Error", "no", "good", "data", "given", "all", "invalid", "opcodes", "NUMBER", "Any", "idea", "Even", "the", "Disassembly", "shows", "invalid", "NUMBER", "Even", "when", "locally", "open", "the", "binary", "from", "the", "remote", "session", "Didn", "t", "try", "with", "WSL", "Also", "we", "should", "solve", "this", "for", "windows", "it", "shouldn", "t", "be", "necessary", "to", "use", "WSL", "or", "a", "linux", "machine", "NUMBER", "It", "will", "just", "take", "some", "time", "NUMBER", "It", "should", "also", "mention", "what", "software", "be", "required", "for", "doing", "that", "NUMBER", "Doesn", "t", "vaddr", "and", "index", "have", "the", "same", "problem", "Thank", "you", "for", "the", "PR", "NUMBER", "We", "haven", "t", "forgotten", "about", "it", "NUMBER", "We", "be", "currently", "in", "the", "process", "of", "preparing", "new", "release", "so", "it", "might", "take", "a", "few", "days", "until", "this", "can", "be", "handle", "NUMBER", "The", "problem", "with", "megabeets_", "NUMBER", "x", "NUMBER", "be", "that", "it", "has", "a", "little", "bit", "something", "at", "low", "address", "and", "most", "of", "the", "code", "at", "high", "address", "NUMBER", "This", "results", "in", "most", "of", "the", "bar", "representing", "empty", "non", "mapped", "region", "between", "NUMBER", "In", "future", "p", "j", "should", "have", "either", "an", "option", "or", "always", "skip", "non", "mapped", "regions", "NUMBER", "Thank", "you", "for", "your", "time", "investigating", "the", "problem", "NUMBER", "Indeed", "sounds", "like", "there", "might", "be", "a", "UI", "bug", "not", "handle", "certain", "kind", "of", "ways", "for", "change", "input", "field", "NUMBER", "Can", "you", "clarify", "exactly", "which", "dropdowns", "be", "you", "referring", "to", "I", "be", "also", "a", "bit", "curios", "about", "what", "you", "meant", "by", "Distribution", "repository", "for", "Windows", "NUMBER", "I", "be", "not", "quite", "sure", "what", "that", "means", "for", "anything", "that", "isn", "t", "Linux", "NUMBER", "Do", "you", "mean", "Windows", "Store", "or", "Winget", "Can", "you", "show", "the", "output", "of", "run", "e", "asm", "NUMBER", "cpu", "in", "console", "widgets", "in", "the", "bad", "and", "good", "cases", "I", "was", "able", "to", "repeat", "this", "and", "further", "narrow", "down", "the", "problem", "NUMBER", "Initially", "was", "very", "confusing", "because", "end", "result", "of", "setting", "architecture", "through", "scrolling", "and", "open", "the", "context", "menu", "was", "the", "same", "NUMBER", "Turns", "out", "scrolling", "isn", "t", "a", "problem", "scrolling", "through", "NUMBER", "be", "a", "problem", "NUMBER", "And", "NUMBER", "be", "in", "the", "list", "between", "auto", "and", "arm", "NUMBER", "When", "selecting", "an", "architecture", "Cutter", "calls", "e", "asm", "NUMBER", "cpu", "a", "NUMBER", "to", "query", "what", "cpus", "NUMBER", "arch", "has", "NUMBER", "In", "case", "of", "NUMBER", "this", "cause", "to", "permanently", "create", "some", "mappings", "which", "later", "cause", "problem", "to", "open", "the", "file", "properly", "NUMBER", "Was", "able", "to", "repeat", "with", "NUMBER", "works", "correctly", "in", "master", "NUMBER", "I", "initially", "thought", "that", "it", "was", "fix", "by", "e", "NUMBER", "d", "NUMBER", "bd", "NUMBER", "af", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "cddc", "which", "slightly", "reworked", "show", "in", "menu", "due", "to", "callgraphs", "but", "it", "also", "works", "in", "previous", "commit", "so", "it", "was", "probably", "fix", "by", "layout", "managment", "change", "NUMBER", "f", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Move", "custom", "command", "input", "to", "separate", "input", "field", "NUMBER", "It", "wasn", "t", "obvious", "that", "you", "can", "enter", "text", "in", "combobox", "and", "it", "also", "didn", "t", "allow", "easily", "reacting", "to", "enter", "key", "NUMBER", "Refresh", "graph", "on", "index", "change", "and", "enter", "key", "NUMBER", "Test", "plan", "required", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "dac", "NUMBER", "fb", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "da", "NUMBER", "c", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "a", "NUMBER", "png", "Closing", "issue", "TAG", "It", "be", "still", "useful", "to", "refresh", "non", "global", "graphs", "NUMBER", "Since", "this", "be", "more", "of", "a", "fallback", "widget", "for", "graphs", "not", "having", "proper", "support", "I", "don", "t", "want", "to", "make", "any", "assumptions", "here", "about", "when", "it", "would", "be", "useful", "to", "refresh", "and", "connect", "to", "seek", "change", "or", "anything", "similar", "NUMBER", "Slightly", "change", "the", "behavior", "NUMBER", "Now", "when", "switching", "graph", "type", "input", "field", "be", "keep", "visible", "but", "in", "disabled", "state", "NUMBER", "I", "hope", "that", "it", "might", "give", "some", "hints", "to", "the", "user", "about", "what", "should", "be", "entered", "in", "the", "input", "field", "NUMBER", "r", "NUMBER", "g", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "beae", "NUMBER", "png", "Correct", "me", "if", "I", "be", "wrong", "I", "don", "t", "think", "these", "change", "be", "necessary", "or", "help", "the", "local", "variable", "reference", "feature", "in", "decompiler", "widget", "NUMBER", "From", "the", "implementation", "perspective", "variable", "references", "in", "decompiler", "widget", "should", "just", "use", "information", "from", "annotations", "NUMBER", "From", "the", "UI", "perspective", "showing", "disassembly", "code", "isn", "t", "that", "useful", "and", "decompiler", "widget", "should", "probably", "have", "a", "dedicate", "solution", "NUMBER", "That", "can", "be", "discussed", "separately", "NUMBER", "That", "be", "said", "NUMBER", "These", "be", "nice", "change", "by", "themselves", "NUMBER", "Unless", "you", "convince", "me", "how", "these", "relate", "to", "decompiler", "change", "they", "could", "go", "into", "master", "NUMBER", "Yes", "please", "change", "it", "to", "master", "NUMBER", "Splitting", "be", "somewhat", "problematic", "due", "to", "qt", "dock", "widget", "API", "not", "be", "very", "robust", "NUMBER", "It", "s", "easy", "to", "produce", "broken", "layout", "that", "way", "NUMBER", "So", "far", "it", "looks", "like", "there", "be", "now", "way", "doing", "this", "use", "QDockWidget", "without", "huge", "hacks", "NUMBER", "This", "issue", "will", "probably", "have", "to", "wait", "for", "NUMBER", "or", "things", "get", "improved", "in", "Qt", "NUMBER", "I", "don", "t", "think", "developer", "documentation", "should", "be", "hidden", "behind", "a", "button", "in", "Contributing", "page", "NUMBER", "The", "contribute", "page", "looks", "more", "like", "for", "new", "contributors", "especially", "with", "question", "and", "buttons", "NUMBER", "Developer", "documentation", "be", "not", "only", "for", "new", "contributors", "but", "also", "exist", "developers", "NUMBER", "Yes", "I", "would", "prefer", "having", "developer", "documentation", "as", "top", "level", "section", "with", "link", "from", "code", "contribution", "page", "NUMBER", "You", "could", "add", "translations", "to", "contribution", "methods", "NUMBER", "ITAYC", "NUMBER", "HEN", "Did", "you", "saw", "my", "comment", "about", "add", "Contributing", "translations", "page", "Most", "of", "the", "developer", "documentation", "be", "still", "bellow", "contribute", "page", "instead", "of", "developer", "documentation", "NUMBER", "Please", "try", "to", "avoid", "use", "foo", "TAG", "_", "for", "internal", "links", "between", "pages", "NUMBER", "Sphinx", "doesn", "t", "check", "those", "but", "it", "will", "show", "a", "warning", "if", "doc", "or", "ref", "target", "doesn", "t", "exist", "NUMBER", "It", "will", "help", "avoid", "dead", "links", "in", "future", "when", "things", "get", "change", "NUMBER", "I", "think", "that", "some", "of", "the", "change", "broke", "LGTM", "javascript", "analysis", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "It", "seems", "that", "github", "action", "VMs", "have", "cached", "bad", "package", "list", "NUMBER", "I", "expected", "them", "to", "fix", "this", "sooner", "but", "it", "doesn", "t", "seem", "to", "be", "the", "case", "NUMBER", "Test", "plan", "required", "Make", "sure", "Github", "actions", "build", "on", "Ubuntu", "NUMBER", "be", "green", "and", "apt", "update", "doesn", "t", "take", "too", "long", "NUMBER", "Closing", "issue", "TAG", "Total", "time", "for", "apt", "dependencies", "step", "was", "NUMBER", "seconds", "NUMBER", "That", "also", "include", "the", "actual", "installation", "of", "package", "not", "only", "apt", "update", "looks", "like", "run", "it", "be", "not", "a", "big", "deal", "NUMBER", "Green", "Why", "do", "you", "think", "that", "CutterBindings", "be", "a", "thing", "The", "sample", "python", "plugin", "be", "use", "cutter", "NUMBER", "CutterPlugin", "instead", "of", "CutterBindings", "NUMBER", "CutterPlugin", "NUMBER", "Ok", "binding", "generator", "uses", "CutterBindings", "NUMBER", "Seems", "like", "a", "bit", "of", "inconsistency", "Will", "have", "to", "take", "a", "look", "at", "what", "actually", "gets", "generate", "and", "try", "it", "to", "tell", "you", "more", "NUMBER", "How", "to", "pass", "a", "command", "line", "argument", "to", "a", "GUI", "NUMBER", "app", "on", "macOS", "be", "more", "of", "a", "macOS", "question", "not", "a", "Cutter", "one", "and", "you", "should", "ask", "it", "in", "an", "appropriate", "macOS", "forum", "NUMBER", "Next", "time", "for", "question", "how", "to", "use", "Cutter", "assuming", "they", "be", "not", "about", "how", "to", "use", "your", "operate", "system", "better", "ask", "in", "the", "Cutter", "Telegram", "group", "or", "IRC", "NUMBER", "The", "issue", "tracker", "isn", "t", "the", "best", "place", "for", "such", "question", "NUMBER", "I", "don", "t", "use", "macOS", "but", "quick", "search", "indicates", "that", "you", "can", "probably", "do", "it", "use", "the", "open", "program", "NUMBER", "Don", "t", "try", "to", "mix", "the", "macOS", "specif", "open", "file", "GUI", "app", "mechanism", "with", "the", "argument", "for", "customizing", "how", "the", "file", "specified", "in", "command", "line", "gets", "opened", "NUMBER", "Those", "be", "two", "different", "things", "NUMBER", "The", "renaming", "functionality", "be", "for", "the", "purpose", "of", "make", "annotations", "during", "reverse", "engineering", "NUMBER", "It", "can", "t", "rename", "the", "function", "inside", "the", "binary", "itself", "NUMBER", "If", "you", "really", "want", "to", "rename", "function", "in", "a", "way", "that", "that", "NUMBER", "so", "can", "be", "loaded", "and", "function", "with", "new", "name", "can", "be", "call", "you", "need", "a", "different", "tool", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Introduce", "generic", "r", "NUMBER", "graph", "widget", "NUMBER", "User", "can", "select", "one", "of", "the", "r", "NUMBER", "graph", "types", "in", "the", "list", "or", "enter", "a", "command", "NUMBER", "Since", "it", "executes", "more", "or", "less", "arbitrary", "r", "NUMBER", "command", "it", "needs", "to", "be", "manually", "refreshed", "use", "a", "button", "NUMBER", "Add", "a", "specialized", "CallGraphWidget", "use", "for", "global", "and", "single", "function", "callgraph", "NUMBER", "Extra", "features", "in", "the", "callgraph", "widget", "compared", "to", "generic", "one", "works", "with", "callgraph", "agc", "can", "t", "be", "use", "in", "the", "generic", "widget", "because", "agcj", "and", "agCj", "doesn", "t", "have", "the", "same", "structure", "as", "rest", "of", "ag", "j", "commands", "addressable", "item", "context", "menu", "when", "clicking", "on", "a", "block", "seek", "synchronization", "show", "in", "Callgraph", "and", "show", "in", "Global", "Callgraph", "when", "in", "addressable", "item", "context", "menu", "for", "other", "widgets", "Expose", "more", "graphviz", "layout", "engines", "sfdp", "neato", "twopi", "circo", "might", "be", "useful", "for", "some", "of", "the", "reference", "graphs", "NUMBER", "GraphGridLayout", "bugfix", "for", "a", "case", "with", "multiple", "top", "level", "blocks", "NUMBER", "Almost", "never", "happens", "for", "CFG", "but", "be", "somewhat", "common", "in", "callgraph", "and", "some", "of", "other", "r", "NUMBER", "graphs", "Fix", "the", "false", "dock", "showing", "cause", "RefreshDeferrer", "to", "work", "poorly", "NUMBER", "This", "was", "probably", "a", "regression", "cause", "by", "dock", "layout", "switching", "feature", "NUMBER", "Code", "refactoring", "and", "other", "change", "split", "some", "of", "the", "MemoryDockWidget", "into", "AddressableDockWidget", "Introduce", "CutterGraphView", "for", "some", "of", "the", "common", "Cutter", "specific", "logic", "like", "styling", "reading", "config", "values", "and", "reaction", "to", "Config", "and", "Core", "events", "NUMBER", "GraphView", "base", "shouldn", "t", "contain", "any", "Cutter", "specific", "code", "to", "make", "it", "easier", "sharing", "code", "with", "x", "NUMBER", "dbg", "NUMBER", "Move", "some", "of", "the", "logic", "from", "DisassemblerGraphView", "to", "it", "now", "that", "there", "be", "other", "graphs", "to", "share", "it", "with", "NUMBER", "new", "class", "SimpleTextGraphVew", "for", "graphs", "consisting", "of", "plaintext", "label", "and", "optionally", "address", "associated", "with", "each", "block", "Test", "plan", "required", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "ea", "NUMBER", "baa", "b", "NUMBER", "beb", "NUMBER", "cfc", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bef", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "fa", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ad", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "ea", "NUMBER", "d", "be", "NUMBER", "d", "NUMBER", "png", "show_in_context_menu", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ec", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "ec", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "af", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "ea", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "png", "Steps", "Test", "show", "in", "Callgraph", "right", "click", "in", "function", "widget", "select", "show", "in", "Callgraph", "heavy_check_mark", "Test", "show", "in", "Global", "Callgraph", "right", "click", "in", "function", "widget", "select", "show", "in", "Global", "Callgraph", "heavy_check_mark", "Callgraph", "position", "synchronization", "heavy_check_mark", "Click", "at", "different", "function", "in", "disassembly", "widget", "make", "sure", "both", "callgraphs", "be", "update", "accordingly", "heavy_check_mark", "Disable", "synchronization", "and", "click", "in", "disassembly", "widget", "make", "sure", "callgraphs", "be", "not", "update", "heavy_check_mark", "Image", "export", "do", "the", "steps", "for", "both", "callgraphs", "and", "at", "least", "one", "graph", "in", "the", "generic", "r", "NUMBER", "graph", "widget", "heavy_check_mark", "Direct", "png", "export", "check", "the", "large", "bitmap", "warning", "use", "one", "of", "global", "graphs", "Direct", "svg", "export", "Json", "export", "graphviz", "based", "image", "export", "gml", "export", "Copy", "text", "heavy_check_mark", "Copy", "address", "from", "callgraph", "heavy_check_mark", "Show", "xrefs", "in", "callgraph", "heavy_check_mark", "Change", "layout", "in", "all", "new", "graphs", "Test", "all", "the", "new", "graphviz", "layouts", "use", "medium", "size", "or", "small", "graph", "some", "of", "them", "be", "slow", "heavy_check_mark", "Closing", "issue", "Closes", "NUMBER", "Closes", "NUMBER", "Closes", "NUMBER", "Problems", "find", "during", "test", "sometimes", "switching", "between", "vertical", "and", "horizontal", "layout", "in", "global", "callgraph", "view", "gets", "stuck", "above", "the", "content", "NUMBER", "default", "export", "names", "aren", "t", "use", "properly", "Both", "fix", "NUMBER", "Appveyor", "should", "be", "fix", "by", "meson", "version", "PR", "that", "was", "just", "merge", "NUMBER", "On", "Travis", "the", "macOS", "build", "times", "out", "NUMBER", "Recent", "successful", "build", "take", "NUMBER", "NUMBER", "minutes", "which", "isn", "t", "too", "far", "from", "NUMBER", "minute", "limit", "NUMBER", "The", "annoying", "part", "be", "that", "NUMBER", "minutes", "out", "of", "that", "be", "taken", "by", "homebrew", "update", "which", "we", "have", "to", "do", "because", "Travis", "isn", "t", "update", "their", "macOS", "images", "NUMBER", "See", "LINK", "NUMBER", "The", "field", "name", "of", "the", "dropdown", "menu", "of", "the", "R", "NUMBER", "graphs", "widget", "be", "editable", "That", "s", "by", "design", "you", "can", "enter", "a", "plain", "r", "NUMBER", "command", "there", "NUMBER", "See", "description", "of", "NUMBER", "NUMBER", "Idea", "be", "that", "even", "when", "we", "have", "dedicated", "widgets", "for", "all", "graphs", "a", "new", "r", "NUMBER", "version", "might", "add", "new", "graph", "types", "NUMBER", "In", "such", "situation", "you", "can", "just", "type", "the", "command", "of", "new", "graph", "without", "waiting", "until", "new", "widget", "gets", "add", "to", "Cutter", "NUMBER", "There", "be", "no", "space", "at", "all", "between", "edges", "so", "it", "might", "generate", "funny", "graphs", "see", "picture", "attached", "below", "As", "the", "amount", "of", "connected", "edges", "increases", "space", "be", "reduced", "NUMBER", "In", "my", "opinion", "that", "s", "better", "than", "keep", "fix", "space", "and", "having", "the", "ends", "not", "connect", "to", "block", "and", "spanning", "across", "multiple", "screens", "NUMBER", "agg", "seems", "to", "be", "useless", "and", "that", "might", "be", "by", "design", "as", "it", "be", "named", "custom", "There", "some", "use", "cases", "for", "agg", "NUMBER", "One", "be", "commands", "like", "NUMBER", "axg", "which", "store", "the", "resulting", "graph", "in", "custom", "graph", "NUMBER", "So", "instead", "of", "run", "axgv", "and", "obtaining", "unreadable", "graph", "in", "console", "widget", "you", "can", "run", "NUMBER", "axg", "and", "then", "open", "agg", "in", "the", "r", "NUMBER", "graph", "widget", "NUMBER", "Other", "potential", "usescase", "be", "for", "display", "graphs", "generate", "by", "user", "scripts", "NUMBER", "The", "same", "could", "be", "do", "by", "make", "a", "Cutter", "plugin", "which", "reuses", "some", "of", "Cutter", "graph", "classes", "but", "the", "r", "NUMBER", "command", "interface", "be", "somewhat", "simpler", "than", "Cutter", "API", "and", "such", "script", "could", "be", "run", "either", "in", "plain", "r", "NUMBER", "or", "Cutter", "NUMBER", "Related", "NUMBER", "Run", "Script", "menu", "be", "for", "run", "r", "NUMBER", "scripts", "NUMBER", "That", "be", "file", "containing", "list", "of", "r", "NUMBER", "commands", "NUMBER", "For", "example", "e", "hello", "world", "v", "NUMBER", "NUMBER", "pdf", "For", "some", "of", "them", "like", "renaming", "things", "re", "run", "decompiler", "be", "unavoidable", "but", "there", "be", "room", "for", "improvement", "to", "try", "better", "preserve", "view", "position", "NUMBER", "In", "case", "of", "breakpoints", "I", "don", "t", "think", "decompiler", "needs", "to", "be", "run", "NUMBER", "Not", "performing", "an", "unnecessary", "decompilation", "isn", "t", "necessary", "a", "hack", "NUMBER", "It", "be", "somewhat", "expensive", "operation", "and", "performing", "it", "when", "not", "needed", "makes", "the", "UI", "less", "responsive", "NUMBER", "Even", "with", "position", "restoration", "work", "perfectly", "it", "would", "be", "preferable", "to", "do", "it", "only", "when", "necessary", "NUMBER", "As", "for", "scroll", "position", "preserving", "there", "two", "approaches", "I", "can", "think", "of", "two", "approaches", "that", "can", "be", "explored", "NUMBER", "The", "first", "one", "be", "to", "do", "the", "obvious", "thing", "NUMBER", "To", "preserve", "the", "scroll", "position", "preserve", "the", "scroll", "position", "NUMBER", "Save", "it", "before", "change", "text", "and", "load", "it", "afterwards", "NUMBER", "Other", "approach", "be", "to", "try", "avoiding", "position", "reset", "NUMBER", "When", "doing", "basic", "text", "modifications", "cursor", "position", "be", "more", "or", "less", "preserved", "NUMBER", "Maybe", "the", "code", "can", "be", "replaced", "use", "text", "editing", "API", "in", "a", "way", "to", "reduces", "cursor", "move", "NUMBER", "NirmalManoj", "Wasn", "t", "this", "fix", "already", "I", "guess", "gitthub", "automatically", "close", "the", "issue", "only", "when", "PR", "gets", "merge", "to", "master", "NUMBER", "This", "can", "probably", "be", "close", "NUMBER", "I", "m", "closing", "it", "NUMBER", "In", "general", "case", "shifting", "things", "in", "an", "executable", "file", "be", "very", "hard", "problem", "NUMBER", "It", "would", "require", "perfectly", "identifying", "and", "update", "all", "the", "cross", "references", "and", "address", "calculation", "NUMBER", "Missing", "just", "few", "of", "them", "could", "easily", "cause", "the", "executable", "crash", "NUMBER", "The", "same", "applies", "to", "resizing", "NUMBER", "text", "section", "increasing", "it", "s", "size", "would", "mean", "moving", "all", "the", "following", "sections", "like", "rodata", "and", "change", "the", "relative", "positioning", "of", "code", "and", "data", "NUMBER", "The", "typical", "approach", "to", "deal", "with", "this", "be", "to", "insert", "a", "jump", "in", "the", "place", "you", "be", "modifying", "NUMBER", "Jump", "to", "modify", "piece", "of", "code", "execute", "the", "modify", "piece", "of", "code", "jump", "back", "to", "original", "code", "NUMBER", "Depending", "on", "amount", "of", "modifications", "you", "want", "to", "make", "the", "gaps", "between", "function", "or", "unimportant", "string", "literals", "might", "have", "enough", "space", "NUMBER", "If", "you", "want", "to", "add", "a", "lot", "of", "code", "a", "better", "approach", "would", "be", "modify", "the", "executable", "headers", "so", "that", "it", "loads", "additional", "dynamic", "library", "NUMBER", "You", "might", "also", "be", "interested", "in", "dynamic", "instrumentation", "tool", "like", "Frida", "DynamoRIO", "or", "intel", "pin", "tool", "NUMBER", "Looks", "like", "the", "required", "python", "NUMBER", "symbols", "weren", "t", "linked", "NUMBER", "Can", "you", "try", "if", "change", "PKGCONFIG", "python", "NUMBER", "to", "PKGCONFIG", "python", "NUMBER", "embed", "helps", "The", "fragment", "of", "output", "log", "from", "your", "previous", "issue", "mention", "loading", "of", "plugin", "NUMBER", "If", "you", "have", "any", "old", "plugins", "compiled", "against", "different", "cutter", "version", "those", "may", "cause", "problem", "NUMBER", "Please", "try", "run", "without", "any", "plugins", "NUMBER", "You", "can", "remove", "the", "plugin", "manually", "or", "start", "the", "Cutter", "with", "no", "plugins", "flag", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "R", "NUMBER", "NUMBER", "will", "be", "release", "soon", "NUMBER", "Update", "r", "NUMBER", "to", "try", "catch", "any", "problem", "before", "that", "and", "reduce", "delay", "until", "we", "can", "release", "compatible", "Cutter", "release", "NUMBER", "Test", "plan", "required", "CI", "be", "green", "NUMBER", "Basic", "sanity", "checks", "that", "everything", "isn", "t", "completely", "broken", "Open", "executable", "Check", "that", "disassembly", "graph", "view", "and", "hexwidget", "look", "reasonable", "Start", "debuging", "set", "a", "breakpoint", "make", "sure", "it", "be", "hit", "Do", "some", "single", "stepping", "make", "sure", "registers", "be", "refreshed", "Closing", "issue", "TAG", "src", "subprojects", "radare", "NUMBER", "test", "unit", "meson", "NUMBER", "build", "NUMBER", "NUMBER", "ERROR", "Unknown", "variable", "rpath", "NUMBER", "Yes", "I", "will", "disable", "r", "NUMBER", "unit", "test", "for", "now", "NUMBER", "There", "be", "no", "need", "for", "us", "to", "build", "or", "run", "them", "NUMBER", "Basic", "stuff", "works", "NUMBER", "Restarting", "debug", "session", "doesn", "t", "work", "properly", "but", "someone", "was", "recently", "complaining", "about", "it", "in", "NUMBER", "as", "well", "NUMBER", "Would", "be", "good", "to", "fix", "though", "NUMBER", "Please", "double", "check", "that", "you", "have", "properly", "checked", "out", "git", "submodules", "NUMBER", "Cutter", "shouldn", "t", "crash", "either", "way", "but", "file", "you", "attached", "isn", "t", "an", "ELF", "file", "even", "though", "you", "talked", "about", "ELF", "in", "problem", "description", "NUMBER", "What", "s", "the", "strategy", "for", "add", "the", "actions", "to", "decompiler", "widget", "Old", "context", "menu", "add", "actions", "to", "parent", "widget", "NUMBER", "I", "don", "t", "like", "that", "as", "modifying", "parent", "from", "children", "should", "be", "avoided", "NUMBER", "If", "the", "menu", "be", "flat", "the", "menu", "user", "can", "easily", "do", "addActions", "menu", "getActions", "NUMBER", "I", "don", "t", "think", "it", "works", "with", "nested", "menus", "NUMBER", "karliss", "I", "m", "not", "sure", "what", "you", "mean", "by", "I", "don", "t", "like", "that", "as", "modifying", "parent", "from", "children", "should", "be", "avoided", "NUMBER", "If", "the", "menu", "be", "flat", "the", "menu", "user", "can", "easily", "do", "addActions", "menu", "getActions", "NUMBER", "Can", "you", "please", "explain", "Currently", "this", "be", "how", "actions", "be", "add", "to", "the", "decompiler", "widget", "NUMBER", "LINK", "L", "NUMBER", "Does", "it", "work", "for", "actions", "that", "be", "in", "submenus", "Are", "all", "menus", "other", "than", "mCtxMenu", "not", "submenus", "Yes", "I", "was", "referring", "to", "breakpoint", "menu", "and", "debugMenu", "everything", "that", "isn", "t", "the", "top", "level", "decompiler", "context", "menu", "NUMBER", "I", "would", "be", "much", "happier", "if", "documentation", "was", "moved", "to", "separate", "repository", "before", "add", "a", "bunch", "of", "screenshots", "for", "all", "the", "widgets", "and", "dialogs", "NUMBER", "Those", "could", "quickly", "cause", "bloat", "NUMBER", "Describe", "the", "bug", "It", "seems", "that", "LGTM", "currently", "only", "checks", "python", "code", "NUMBER", "There", "be", "now", "C", "problem", "report", "NUMBER", "In", "some", "views", "it", "report", "only", "NUMBER", "k", "lines", "of", "code", "NUMBER", "Files", "view", "shows", "only", "header", "file", "NUMBER", "But", "the", "Logs", "page", "claims", "that", "NUMBER", "k", "lines", "of", "C", "and", "C", "code", "were", "analyzed", "NUMBER", "Looking", "at", "extraction", "log", "it", "seems", "that", "the", "build", "fail", "after", "compile", "r", "NUMBER", "which", "be", "probably", "excluded", "NUMBER", "There", "isn", "t", "much", "that", "can", "be", "do", "about", "resizing", "without", "actually", "subclassing", "QInputDialog", "or", "otherwise", "creating", "a", "modify", "version", "of", "it", "NUMBER", "Something", "might", "be", "doable", "by", "creating", "QInputDialog", "directly", "without", "use", "QInputDialog", "getText", "but", "would", "have", "to", "be", "do", "in", "each", "place", "it", "s", "use", "NUMBER", "I", "don", "t", "think", "it", "s", "worth", "it", "it", "would", "be", "better", "to", "implement", "function", "with", "similar", "interface", "as", "gettText", "NUMBER", "I", "guess", "that", "s", "what", "you", "meant", "with", "in", "near", "future", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Could", "be", "later", "moved", "to", "separate", "page", "since", "it", "won", "t", "be", "necessary", "to", "change", "them", "too", "often", "NUMBER", "For", "now", "graph", "page", "be", "quite", "empty", "so", "I", "didn", "t", "do", "it", "yet", "NUMBER", "These", "options", "will", "be", "more", "useful", "later", "once", "I", "finish", "a", "PR", "which", "will", "remove", "some", "of", "the", "unintentional", "space", "NUMBER", "Test", "plan", "required", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "acfd", "NUMBER", "ea", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "png", "Change", "edge", "space", "observe", "that", "graph", "change", "Change", "block", "space", "observe", "that", "graph", "change", "NUMBER", "Horizontal", "block", "space", "be", "a", "bit", "tricky", "since", "there", "be", "many", "other", "factors", "affecting", "it", "NUMBER", "Switch", "between", "all", "graph", "layouts", "including", "Graphviz", "make", "sure", "nothing", "be", "broken", "Increase", "space", "and", "restart", "Cutter", "make", "sure", "change", "were", "saved", "Closing", "issue", "Closes", "NUMBER", "TAG", "I", "be", "slightly", "worried", "about", "cluttering", "the", "first", "page", "with", "too", "many", "rarely", "use", "settings", "NUMBER", "ITAYC", "NUMBER", "HEN", "what", "do", "you", "think", "Regarding", "asm", "NUMBER", "reloff", "supposedly", "get", "turned", "off", "I", "add", "debug", "code", "to", "updateAsmOptionsFromVars", "and", "it", "report", "that", "asm", "NUMBER", "reloff", "be", "false", "but", "entering", "e", "asm", "NUMBER", "reloff", "in", "console", "widget", "while", "keep", "settings", "opened", "report", "true", "NUMBER", "There", "might", "be", "problem", "with", "reading", "config", "options", "NUMBER", "Looks", "like", "asm", "NUMBER", "reloff", "needs", "to", "be", "add", "to", "the", "asm", "NUMBER", "options", "list", "in", "Configuration", "NUMBER", "cpp", "NUMBER", "The", "linker", "error", "on", "windows", "needs", "to", "be", "fix", "on", "r", "NUMBER", "ghidra", "side", "NUMBER", "Marking", "r", "NUMBER", "ghidra_decompile_annotated_code", "as", "R_API", "should", "fix", "it", "NUMBER", "An", "alternative", "approach", "to", "this", "be", "NUMBER", "It", "can", "probably", "be", "the", "same", "menu", "in", "hex", "widget", "and", "disassembly", "widget", "NUMBER", "Before", "add", "this", "to", "the", "dependency", "list", "I", "would", "like", "the", "need", "for", "it", "to", "be", "evaluated", "NUMBER", "From", "what", "I", "could", "find", "curl", "be", "only", "use", "for", "downloading", "capstone", "when", "build", "r", "NUMBER", "use", "NUMBER", "configure", "Makefile", "approach", "NUMBER", "It", "can", "also", "use", "wget", "instead", "of", "curl", "NUMBER", "Meson", "based", "r", "NUMBER", "build", "which", "be", "also", "what", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "seems", "to", "use", "GIT", "for", "get", "it", "NUMBER", "It", "be", "also", "possible", "to", "build", "r", "NUMBER", "use", "system", "capstone", "which", "avoids", "downloading", "it", "completely", "NUMBER", "I", "propose", "organizing", "the", "dependency", "list", "into", "NUMBER", "parts", "Main", "dependencies", "what", "we", "currently", "have", "Optional", "but", "potentially", "difficult", "to", "avoid", "dependencies", "curl", "and", "python", "NUMBER", "setuptools", "things", "that", "require", "compile", "in", "a", "specific", "way", "understanding", "the", "build", "system", "or", "manually", "preparing", "the", "dependencies", "NUMBER", "Optional", "dependencies", "for", "extra", "features", "KSyntaxHighlighter", "graphviz", "unless", "force", "enable", "Cutter", "should", "automatically", "disable", "the", "corresponding", "features", "when", "these", "dependencies", "be", "not", "available", "You", "can", "call", "them", "recommended", "dependencies", "if", "you", "think", "that", "it", "s", "less", "confusing", "NUMBER", "My", "reasoning", "be", "that", "they", "aren", "t", "strictly", "required", "and", "remove", "them", "doesn", "t", "take", "away", "from", "functionality", "of", "Cutter", "NUMBER", "It", "just", "makes", "a", "process", "a", "bit", "more", "complicated", "and", "you", "have", "to", "understand", "what", "you", "be", "doing", "NUMBER", "Adding", "an", "additional", "separator", "especially", "if", "there", "be", "one", "already", "for", "optional", "dependencies", "isn", "t", "hard", "NUMBER", "There", "be", "different", "needs", "for", "different", "people", "NUMBER", "Most", "end", "users", "probably", "don", "t", "care", "how", "and", "what", "the", "the", "build", "system", "do", "NUMBER", "But", "people", "preparing", "a", "package", "for", "distros", "or", "just", "someone", "trying", "to", "do", "offline", "do", "care", "at", "least", "a", "little", "bit", "and", "probably", "don", "t", "want", "build", "system", "to", "curl", "random", "source", "code", "during", "build", "NUMBER", "How", "about", "saying", "More", "than", "one", "instead", "of", "Too", "many", "I", "was", "thinking", "about", "similar", "thing", "recently", "due", "to", "a", "question", "about", "pattern", "matching", "mode", "NUMBER", "The", "idea", "that", "I", "came", "up", "with", "was", "to", "also", "allow", "choosing", "the", "regex", "mode", "none", "wildcard", "regex", "NUMBER", "Since", "there", "be", "multiple", "options", "to", "change", "it", "should", "be", "a", "menu", "instead", "of", "button", "for", "saving", "space", "NUMBER", "Menu", "can", "be", "display", "as", "context", "menu", "for", "input", "field", "opened", "use", "right", "click", "or", "keyboard", "NUMBER", "For", "better", "discoverability", "there", "should", "also", "be", "visual", "indicator", "NUMBER", "Maybe", "dropdown", "button", "or", "something", "embeded", "inside", "input", "field", "NUMBER", "Need", "to", "investigate", "what", "s", "available", "in", "Qt", "out", "of", "the", "box", "NUMBER", "Content", "of", "menu", "would", "be", "toggleable", "action", "for", "case", "sensetivity", "action", "group", "for", "selecting", "pattern", "matching", "regex", "mode", "NUMBER", "Looks", "like", "LINK", "NUMBER", "qlineedit", "NUMBER", "html", "addAction", "NUMBER", "or", "LINK", "NUMBER", "qlineedit", "NUMBER", "html", "addAction", "be", "exactly", "the", "thing", "needed", "NUMBER", "It", "allows", "add", "an", "action", "within", "left", "or", "right", "side", "of", "line", "edit", "NUMBER", "Variation", "of", "this", "approach", "to", "use", "single", "action", "which", "opens", "a", "menu", "NUMBER", "An", "example", "of", "this", "in", "QtCreator", "and", "Gedit", "in", "screenshots", "bellow", "NUMBER", "Advantage", "be", "that", "it", "takes", "less", "space", "NUMBER", "Approach", "use", "by", "VSCode", "could", "get", "crowded", "if", "there", "were", "more", "than", "NUMBER", "search", "options", "NUMBER", "QtCreator", "and", "Gedit", "have", "NUMBER", "and", "having", "more", "wouldn", "t", "be", "a", "problem", "NUMBER", "Downside", "that", "it", "be", "less", "discoverable", "NUMBER", "Gedit", "one", "be", "almost", "impossible", "to", "find", "QtCreator", "at", "least", "has", "the", "downward", "triangle", "indicating", "that", "there", "be", "a", "menu", "NUMBER", "search_menu", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fe", "NUMBER", "bb", "NUMBER", "c", "NUMBER", "NUMBER", "ea", "NUMBER", "bfe", "NUMBER", "ebcfe", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "png", "When", "you", "be", "use", "system", "R", "NUMBER", "you", "need", "to", "use", "a", "matching", "version", "NUMBER", "Anything", "beside", "the", "commit", "indicated", "by", "git", "submodule", "isn", "t", "guaranteed", "to", "work", "NUMBER", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "be", "more", "of", "a", "option", "for", "dev", "build", "so", "that", "you", "can", "easily", "run", "it", "from", "build", "directory", "not", "so", "much", "for", "permanent", "installation", "NUMBER", "This", "might", "change", "in", "future", "NUMBER", "If", "you", "want", "to", "install", "the", "whole", "thing", "somewhere", "you", "should", "checkout", "a", "version", "of", "r", "NUMBER", "that", "be", "compatible", "with", "cutter", "version", "NUMBER", "Easiest", "way", "for", "doing", "that", "be", "by", "run", "git", "submodule", "update", "in", "cutter", "directory", "NUMBER", "Install", "r", "NUMBER", "from", "radare", "NUMBER", "folder", "use", "your", "method", "of", "choice", "compile", "Cutter", "use", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "OFF", "if", "you", "didn", "t", "install", "r", "NUMBER", "in", "standard", "location", "you", "might", "need", "to", "use", "PKG_CONFIG_PATH", "so", "that", "cutter", "build", "can", "find", "it", "Before", "starting", "this", "I", "recommend", "you", "check", "if", "you", "have", "any", "other", "r", "NUMBER", "installations", "from", "your", "previous", "attempts", "and", "remove", "them", "NUMBER", "Otherwise", "you", "may", "get", "conflict", "unless", "you", "know", "what", "you", "be", "doing", "NUMBER", "I", "assume", "you", "be", "talking", "about", "Linux", "NUMBER", "Could", "you", "describe", "your", "use", "case", "in", "more", "details", "By", "default", "searching", "for", "libs", "in", "lib", "and", "a", "few", "other", "folders", "be", "the", "default", "behavior", "of", "Linux", "dynamic", "linker", "NUMBER", "Most", "Linux", "executables", "behave", "that", "way", "unless", "they", "be", "purpose", "build", "for", "be", "portable", "like", "Appimage", "or", "something", "like", "that", "which", "gets", "shipped", "together", "with", "libraries", "NUMBER", "If", "Cutter", "project", "also", "build", "some", "dynamic", "libraries", "not", "only", "single", "executable", "it", "would", "be", "a", "slightly", "different", "story", "NUMBER", "I", "would", "expect", "CMake", "to", "handle", "that", "but", "I", "can", "t", "be", "sure", "without", "actually", "test", "it", "NUMBER", "You", "can", "probably", "achieve", "what", "you", "want", "use", "CMAKE_INSTALL_RPATH", "option", "NUMBER", "Regardless", "of", "it", "helping", "you", "or", "not", "I", "would", "like", "to", "hear", "more", "about", "your", "use", "case", "NUMBER", "The", "problem", "hinted", "by", "LDD", "check", "where", "partially", "cause", "by", "by", "bad", "check", "NUMBER", "There", "be", "some", "room", "improvement", "but", "old", "APPIMAGE", "was", "equally", "affected", "by", "this", "so", "it", "doesn", "t", "need", "to", "be", "fix", "now", "NUMBER", "NUMBER", "NUMBER", "MB", "increase", "in", "size", "need", "to", "investigate", "why", "NUMBER", "Size", "difference", "was", "cause", "by", "debug", "symbols", "which", "be", "intentionally", "enable", "when", "crash", "report", "be", "enable", "NUMBER", "I", "assume", "that", "in", "the", "old", "case", "they", "get", "stripped", "NUMBER", "Do", "we", "care", "about", "size", "increase", "Assuming", "we", "do", "the", "possible", "improvement", "be", "reduce", "debug", "information", "amount", "from", "g", "NUMBER", "to", "g", "NUMBER", "From", "the", "description", "in", "gcc", "documentation", "g", "NUMBER", "be", "default", "level", "for", "debuging", "but", "g", "NUMBER", "should", "be", "enough", "for", "backtrace", "NUMBER", "build", "with", "g", "NUMBER", "and", "then", "split", "it", "in", "separate", "file", "as", "instructed", "by", "breakpad", "documentation", "NUMBER", "We", "can", "upload", "the", "debug", "symbols", "as", "second", "file", "for", "release", "NUMBER", "Strip", "debug", "symbols", "after", "they", "have", "be", "saved", "NUMBER", "Cutter", "executable", "size", "with", "different", "settings", "no", "debug", "information", "NUMBER", "NUMBER", "MB", "g", "NUMBER", "NUMBER", "MB", "g", "NUMBER", "NUMBER", "NUMBER", "MB", "after", "compression", "Appimage", "size", "increases", "only", "by", "NUMBER", "instead", "of", "NUMBER", "NUMBER", "MB", "Tested", "the", "appimage", "on", "Ubuntu", "NUMBER", "and", "ArchLinux", "NUMBER", "Basic", "plugin", "both", "decompilers", "and", "eco", "worked", "NUMBER", "ITAYC", "NUMBER", "HEN", "I", "already", "made", "draft", "test", "deploy", "test", "NUMBER", "I", "think", "that", "s", "good", "enough", "NUMBER", "There", "were", "some", "minor", "change", "docs", "and", "format", "but", "that", "shouldn", "t", "affect", "output", "NUMBER", "Tests", "pass", "NUMBER", "The", "remaining", "question", "be", "do", "we", "care", "about", "NUMBER", "MB", "size", "increase", "NUMBER", "tobigrimm", "Thank", "you", "very", "much", "this", "was", "a", "fantastic", "PR", "well", "describe", "and", "on", "point", "NUMBER", "We", "really", "appreciate", "taking", "the", "time", "to", "write", "the", "docs", "and", "following", "the", "guidelines", "NUMBER", "So", "NUMBER", "What", "s", "next", "blink", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "We", "currently", "provide", "users", "with", "the", "option", "to", "create", "and", "edit", "themes", "in", "Cutter", "NUMBER", "But", "these", "themes", "be", "mostly", "focusing", "on", "the", "Disassembly", "and", "graph", "views", "the", "colors", "of", "instructions", "and", "background", "and", "nodes", "in", "graph", "and", "similar", "NUMBER", "But", "we", "don", "t", "provide", "them", "with", "an", "option", "to", "load", "theirs", "on", "CSS", "QSS", "themes", "which", "will", "modify", "the", "Interface", "Theme", "NUMBER", "In", "addition", "to", "respecting", "native", "theme", "we", "currently", "provide", "several", "default", "Interface", "Themes", "Light", "Dark", "Midnight", "The", "feature", "request", "be", "provide", "an", "easy", "way", "for", "the", "users", "to", "load", "new", "themes", "including", "their", "icons", "and", "resources", "NUMBER", "This", "include", "Supporting", "a", "NUMBER", "themes", "folder", "in", "which", "users", "can", "put", "their", "themes", "similarly", "to", "plugins", "Dynamically", "loading", "themes", "in", "order", "to", "skip", "the", "need", "to", "restart", "the", "interface", "It", "be", "relevant", "for", "Linux", "as", "well", "since", "this", "be", "a", "theme", "only", "for", "Cutter", "and", "not", "for", "the", "operate", "system", "or", "for", "other", "Qt", "applications", "including", "Cutter", "s", "unique", "widgets", "NUMBER", "Palletizing", "the", "thems", "be", "a", "good", "idea", "indeed", "and", "support", "the", "idea", "on", "NUMBER", "But", "themes", "be", "more", "than", "just", "a", "bunch", "of", "colors", "NUMBER", "See", "for", "example", "what", "I", "did", "with", "Light", "theme", "which", "feels", "nothing", "like", "the", "others", "with", "a", "lot", "of", "CSS", "magic", "NUMBER", "For", "example", "here", "be", "how", "IDA", "allows", "me", "to", "easily", "load", "Cutter", "s", "Light", "Theme", "on", "Linux", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "png", "Until", "recently", "IDA", "wasn", "t", "support", "user", "defined", "interface", "theme", "and", "those", "who", "wanted", "to", "had", "to", "use", "IDA", "Skins", "Plugin", "LINK", "NUMBER", "Now", "IDA", "support", "CSS", "based", "LINK", "rays", "NUMBER", "com", "products", "ida", "support", "tutorials", "themes", "another", "link", "LINK", "rays", "NUMBER", "com", "products", "ida", "news", "NUMBER", "_", "NUMBER", "stying", "which", "be", "very", "easy", "to", "develop", "themes", "to", "NUMBER", "Binary", "Ninja", "has", "a", "slightly", "different", "approach", "which", "gives", "less", "power", "to", "the", "user", "but", "it", "be", "very", "easy", "to", "create", "new", "themes", "with", "NUMBER", "But", "less", "complex", "and", "limited", "to", "set", "of", "configs", "NUMBER", "LINK", "themes", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "pull", "request", "add", "two", "shortcuts", "to", "toggle", "the", "Console", "Widget", "TAG", "TAG", "TAG", "Ctrl", "TAG", "TAG", "TAG", "It", "also", "try", "to", "add", "TAG", "Ctrl", "TAG", "TAG", "L", "TAG", "to", "clear", "the", "output", "window", "of", "the", "console", "but", "I", "fail", "with", "it", "so", "I", "will", "appreciate", "if", "someone", "will", "do", "some", "Qt", "magic", "to", "solve", "this", "NUMBER", "Test", "plan", "required", "Use", "each", "of", "the", "screenshots", "to", "toggle", "the", "Console", "widget", "Looks", "good", "I", "said", "it", "before", "and", "I", "will", "continue", "saying", "this", "This", "pull", "request", "be", "amazing", "NUMBER", "The", "improvement", "be", "very", "significant", "NUMBER", "I", "didn", "t", "notice", "any", "bug", "with", "the", "binaries", "the", "symetricity", "be", "good", "and", "the", "space", "be", "fine", "NUMBER", "Something", "It", "feels", "too", "narrow", "and", "sometimes", "too", "wide", "NUMBER", "But", "I", "guess", "having", "it", "perfect", "be", "hard", "NUMBER", "Will", "go", "over", "the", "code", "now", "but", "I", "don", "t", "think", "I", "have", "the", "qualities", "to", "preform", "decent", "Code", "Review", "here", "NUMBER", "I", "asked", "xarkes", "and", "thestr", "NUMBER", "ng", "NUMBER", "r", "to", "do", "so", "they", "have", "a", "better", "CS", "background", "than", "me", "with", "all", "this", "algorithms", "things", "NUMBER", "TAG", "anal", "R_META_TYPE_COMMENT", "addr", "home", "travis", "build", "radareorg", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "note", "initializing", "argument", "NUMBER", "of", "QString", "fromOwnedCharPtr", "char", "static", "QString", "fromOwnedCharPtr", "char", "str", "CMakeFiles", "Cutter", "NUMBER", "dir", "build", "NUMBER", "make", "NUMBER", "recipe", "for", "target", "CMakeFiles", "Cutter", "NUMBER", "dir", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "o", "fail", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "o", "Error", "NUMBER", "make", "NUMBER", "Waiting", "for", "unfinished", "jobs", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "Detailed", "description", "The", "dynamic", "implementation", "of", "the", "hashes", "display", "on", "dashboard", "was", "buggy", "because", "the", "widgets", "were", "appended", "again", "and", "again", "after", "refreshing", "NUMBER", "This", "PR", "fix", "this", "by", "remove", "the", "previously", "created", "widgets", "NUMBER", "Test", "plan", "required", "NUMBER", "Go", "to", "dashboard", "and", "see", "the", "hashes", "display", "NUMBER", "Click", "view", "refresh", "contents", "NUMBER", "See", "that", "nothing", "change", "and", "that", "the", "hashes", "be", "display", "correctly", "NUMBER", "Confirmed", "that", "the", "data", "gets", "refreshed", "by", "editing", "some", "bytes", "in", "cache", "mode", "and", "observing", "that", "entropy", "change", "Except", "entropy", "do", "r", "NUMBER", "calculate", "the", "hashes", "without", "honring", "the", "cache", "Clicking", "on", "Reopen", "in", "write", "mode", "should", "solve", "your", "dilemma", "NUMBER", "once", "clicked", "it", "will", "allow", "you", "to", "patch", "without", "a", "problem", "Related", "Cutter", "s", "Deep", "Graph", "plugin", "LINK", "deep", "graph", "Regarding", "the", "dedicated", "widget", "not", "sure", "how", "it", "be", "worthy", "in", "terms", "of", "inner", "implementation", "NUMBER", "If", "the", "data", "looks", "the", "same", "they", "all", "can", "share", "the", "same", "widget", "while", "the", "data", "provide", "will", "be", "different", "as", "well", "as", "widget", "s", "title", "NUMBER", "This", "happen", "to", "me", "when", "re", "open", "after", "reset", "settings", "without", "change", "OS", "theme", "mode", "keep", "dark", "the", "entire", "time", "General", "note", "would", "go", "for", "a", "smaller", "width", "function", "widget", "I", "prefer", "registers", "to", "be", "on", "top", "and", "stack", "on", "the", "bottom", "Had", "time", "to", "test", "NUMBER", "test", "cases", "all", "pass", "successfully", "Clean", "start", "without", "upgrade", "layout", "upgrade", "a", "layout", "upgrade", "b", "Yes", "it", "be", "like", "this", "for", "months", "NUMBER", "We", "never", "came", "with", "the", "best", "solution", "for", "WHEN", "to", "show", "it", "and", "when", "not", "This", "be", "fantastic", "work", "a", "big", "step", "forward", "NUMBER", "Much", "more", "stable", "Duplicate", "of", "NUMBER", "The", "code", "that", "be", "there", "doesn", "t", "look", "bad", "NUMBER", "But", "from", "the", "usability", "perspective", "there", "be", "a", "lot", "of", "work", "remaining", "NUMBER", "The", "most", "obvious", "problem", "I", "notice", "When", "reaching", "end", "of", "list", "nothing", "happens", "I", "would", "expect", "looping", "around", "Currently", "only", "works", "for", "the", "tab", "group", "containing", "dashboard", "NUMBER", "It", "doesn", "t", "work", "if", "user", "close", "dashboard", "or", "have", "multiple", "group", "of", "tabs", "NUMBER", "It", "s", "not", "immediately", "obvious", "for", "me", "what", "the", "best", "behavior", "would", "be", "NUMBER", "It", "would", "be", "good", "to", "investigate", "what", "other", "tool", "do", "NUMBER", "IDEs", "might", "not", "be", "the", "best", "example", "as", "they", "usually", "have", "clear", "separation", "between", "document", "tabs", "and", "side", "widget", "tabs", "NUMBER", "In", "Cutter", "all", "docked", "widgets", "be", "more", "or", "less", "equal", "NUMBER", "For", "previous", "tab", "shortcut", "I", "will", "give", "you", "a", "few", "hints", "NUMBER", "Does", "use", "secondary", "key", "sequences", "work", "back", "ctrl", "ctrl", "shift", "f", "NUMBER", "depending", "on", "your", "OS", "Does", "specify", "the", "Ctrl", "Shift", "Tab", "shortcut", "explicityl", "work", "What", "key", "sequences", "do", "QKeySequence", "keyBindings", "PreviousChild", "return", "Since", "it", "looks", "like", "things", "be", "messier", "than", "I", "initially", "thought", "here", "be", "what", "I", "observed", "on", "my", "system", "NUMBER", "I", "be", "use", "Archlinux", "Gnome", "qt", "NUMBER", "ct", "NUMBER", "Explicitly", "specify", "Ctrl", "Shift", "Tab", "worked", "the", "following", "test", "code", "printed", "Ctrl", "Shift", "Backtab", "Back", "NUMBER", "If", "I", "change", "shortcut", "profile", "in", "qt", "NUMBER", "ct", "shortcuts", "change", "accordingly", "NUMBER", "cpp", "auto", "kb", "QKeySequence", "keyBindings", "QKeySequence", "PreviousChild", "for", "auto", "k", "kb", "qDebug", "TAG", "Have", "we", "get", "a", "plan", "for", "what", "the", "shortcuts", "need", "to", "be", "set", "as", "or", "should", "I", "just", "leave", "them", "as", "NextChild", "PreviousChild", "for", "now", "Some", "custom", "handle", "be", "necessary", "due", "to", "Ctrl", "Shift", "Backtab", "not", "work", "on", "Linux", "NUMBER", "To", "reduce", "amount", "of", "platform", "specific", "code", "NextChild", "PrevChild", "might", "be", "usable", "on", "some", "platforms", "NUMBER", "From", "the", "test", "do", "so", "far", "it", "seems", "that", "on", "Linux", "specify", "Ctrl", "Tab", "and", "Ctrl", "PageUp", "be", "the", "best", "we", "can", "do", "macOS", "and", "Windows", "need", "to", "be", "test", "in", "a", "similar", "way", "to", "what", "was", "discussed", "before", "NUMBER", "What", "shorcuts", "Qt", "report", "and", "do", "they", "actually", "work", "What", "shortcuts", "other", "software", "use", "the", "default", "file", "browser", "terminal", "IDE", "Xcode", "and", "Visual", "Studio", "web", "browser", "reu", "res", "Thanks", "for", "test", "we", "be", "always", "lacking", "people", "use", "macOS", "NUMBER", "Can", "you", "also", "confirm", "which", "of", "them", "actually", "work", "and", "use", "either", "Ctrl", "or", "Command", "NUMBER", "It", "would", "be", "also", "good", "to", "know", "what", "the", "macOS", "file", "browser", "terminal", "safari", "and", "XCode", "use", "NUMBER", "Hey", "NUMBER", "x", "NUMBER", "D", "anything", "else", "or", "be", "it", "ready", "for", "another", "round", "of", "review", "Did", "you", "address", "the", "points", "mentione", "above", "radare", "I", "just", "tred", "setting", "e", "scr", "NUMBER", "interactive", "false", "in", "r", "NUMBER", "and", "it", "didn", "t", "prevent", "visual", "panels", "from", "open", "NUMBER", "Created", "radareorg", "radare", "NUMBER", "issue", "NUMBER", "for", "the", "panel", "mode", "NUMBER", "Otherwise", "scr", "NUMBER", "interactive", "false", "seems", "like", "reasonable", "solution", "NUMBER", "Cutter", "already", "uses", "scr", "NUMBER", "interactive", "false", "NUMBER", "The", "V", "command", "gets", "ignored", "NUMBER", "So", "it", "s", "only", "matter", "of", "fix", "the", "few", "cases", "in", "r", "NUMBER", "that", "don", "t", "handle", "it", "and", "maybe", "add", "error", "message", "NUMBER", "Caused", "by", "cmd", "refactoring", "NUMBER", "CutterCore", "seek", "QString", "uses", "cmdRaw", "which", "doesn", "t", "check", "if", "seek", "change", "NUMBER", "I", "can", "t", "reproduce", "this", "NUMBER", "Step", "gets", "call", "as", "asyncCmd", "ds", "which", "has", "the", "seek", "change", "check", "NUMBER", "By", "the", "way", "be", "you", "miss", "step", "out", "button", "If", "the", "PR", "doesn", "t", "actually", "close", "the", "issue", "don", "t", "mention", "words", "close", "xxx", "in", "this", "order", "NUMBER", "Github", "isn", "t", "that", "smart", "to", "tell", "the", "difference", "between", "close", "xxx", "and", "not", "close", "xxx", "NUMBER", "Both", "will", "be", "close", "the", "issue", "even", "though", "one", "of", "them", "have", "opposite", "meaning", "NUMBER", "I", "looked", "at", "the", "logs", "of", "those", "macOS", "failures", "and", "there", "were", "some", "error", "from", "brew", "install", "step", "NUMBER", "Those", "could", "have", "be", "the", "cause", "NUMBER", "We", "have", "two", "Qt", "syntax", "highlighters", "in", "Cutter", "why", "would", "we", "use", "Sitter", "s", "as", "well", "I", "will", "clarify", "what", "I", "be", "thinking", "NUMBER", "User", "clicks", "the", "TAG", "Search", "TAG", "button", "NUMBER", "Change", "button", "s", "text", "to", "Searching", "NUMBER", "NUMBER", "Disable", "button", "NUMBER", "If", "needed", "force", "redraw", "of", "the", "button", "NUMBER", "Perform", "search", "NUMBER", "If", "results", "find", "shown", "on", "the", "table", "NUMBER", "If", "results", "were", "not", "find", "show", "the", "No", "results", "find", "indicator", "NUMBER", "Return", "the", "button", "s", "text", "to", "Search", "NUMBER", "Enable", "the", "button", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Buggy", "or", "incompatible", "plugins", "may", "conflict", "with", "other", "plugins", "cause", "Cutter", "to", "misbehave", "or", "even", "crash", "NUMBER", "There", "needs", "to", "be", "an", "easy", "way", "of", "disabling", "or", "enabling", "them", "from", "user", "interface", "just", "like", "almost", "any", "other", "program", "with", "plugins", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "In", "the", "plugin", "settings", "page", "list", "all", "plugins", "including", "one", "which", "be", "not", "loaded", "NUMBER", "Allow", "disabling", "auto", "loading", "for", "each", "plugin", "from", "the", "settings", "page", "NUMBER", "When", "starting", "cutter", "skip", "loading", "of", "plugins", "which", "be", "marked", "as", "disabled", "NUMBER", "Keep", "the", "skipped", "plugins", "in", "a", "list", "so", "that", "they", "can", "be", "enable", "from", "settings", "page", "NUMBER", "Can", "QPluginLoader", "metaData", "be", "use", "to", "get", "basic", "information", "about", "it", "like", "name", "and", "author", "with", "loading", "any", "code", "This", "issue", "doesn", "t", "require", "support", "for", "dynamic", "loading", "and", "unloading", "of", "plugins", "that", "s", "a", "job", "for", "NUMBER", "NUMBER", "Having", "to", "restart", "Cutter", "for", "change", "to", "have", "effect", "be", "acceptable", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "TAG", "Additional", "context", "Related", "tasks", "NUMBER", "Sure", "NUMBER", "Anything", "you", "want", "to", "discuss", "about", "this", "task", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "C", "api", "allows", "specify", "address", "directly", "thus", "avoiding", "unnecessary", "reads", "cause", "by", "seek", "rb", "true", "NUMBER", "There", "be", "room", "for", "further", "improvement", "not", "refreshing", "comments", "during", "cursor", "blinking", "and", "not", "having", "cmdRawAt", "cause", "NUMBER", "NUMBER", "byte", "reads", "NUMBER", "With", "these", "change", "the", "hexwidget", "be", "somewhat", "usable", "during", "debugging", "compared", "to", "NUMBER", "Test", "plan", "required", "Open", "hexwidget", "during", "debuging", "try", "selecting", "a", "range", "of", "bytes", "NUMBER", "Compare", "the", "performance", "before", "and", "after", "the", "patch", "NUMBER", "TAG", "Closing", "issue", "TAG", "Confirmed", "register", "flags", "be", "acting", "weird", "in", "Cutter", "but", "that", "s", "not", "part", "of", "this", "PR", "NUMBER", "I", "remember", "we", "notice", "something", "similar", "without", "debugging", "NUMBER", "Will", "create", "separate", "issue", "for", "that", "NUMBER", "should", "we", "have", "issue", "for", "these", "Created", "issue", "for", "seek", "NUMBER", "k", "read", "thing", "NUMBER", "Hexwidget", "querying", "things", "too", "often", "would", "be", "solve", "by", "the", "hexwidget", "highlight", "architecture", "issue", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Use", "qt", "parent", "for", "deleting", "complete", "Manualy", "deleting", "causes", "some", "UAF", "due", "to", "it", "be", "isntalled", "as", "event", "filter", "NUMBER", "Qt", "seems", "to", "destroy", "things", "in", "correct", "order", "NUMBER", "Sanitizer", "doesn", "t", "report", "completer", "as", "be", "leaked", "NUMBER", "Fix", "sanitizer", "problem", "in", "HexWidget", "Initialize", "size", "properties", "to", "somewhat", "sane", "values", "to", "avoid", "unitialized", "variable", "use", "when", "calculating", "them", "first", "time", "NUMBER", "Change", "AbstractData", "interface", "NUMBER", "Old", "one", "returned", "pointer", "to", "unknwon", "sized", "block", "of", "data", "which", "was", "difficult", "to", "use", "correctly", "NUMBER", "Adjust", "bound", "checking", "to", "avoid", "out", "of", "bounds", "access", "when", "comparing", "it", "with", "oldData", "and", "scrolling", "NUMBER", "Test", "plan", "required", "run", "with", "sanitizer", "make", "sure", "it", "doesn", "t", "complain", "about", "completer", "get", "leaked", "heavy_check_mark", "open", "disasembly", "widget", "next", "to", "hexdump", "test", "that", "change", "bytes", "highlight", "still", "works", "by", "noping", "an", "instruction", "heavy_check_mark", "TAG", "Closing", "issue", "TAG", "This", "should", "probably", "do", "use", "rarun", "NUMBER", "e", "dbg", "NUMBER", "profile", "file", "NUMBER", "In", "that", "case", "it", "should", "be", "an", "interface", "for", "managing", "and", "editing", "all", "except", "ones", "that", "conflict", "with", "rest", "of", "UI", "dbg", "NUMBER", "profile", "properties", "not", "just", "environment", "variables", "NUMBER", "It", "should", "be", "also", "possible", "to", "select", "exist", "handwritten", "rarun", "NUMBER", "file", "NUMBER", "In", "case", "you", "need", "a", "solution", "that", "works", "right", "now", "looks", "like", "setting", "e", "dbg", "NUMBER", "profile", "path", "to", "rarun_profile", "NUMBER", "rr", "NUMBER", "in", "the", "console", "widget", "works", "NUMBER", "Didn", "t", "test", "with", "all", "the", "features", "but", "at", "least", "setting", "environment", "variable", "works", "NUMBER", "For", "NUMBER", "the", "relate", "issue", "be", "NUMBER", "and", "NUMBER", "NUMBER", "be", "already", "possible", "just", "separate", "the", "instructions", "use", "semicolon", "NUMBER", "It", "could", "have", "a", "better", "indicator", "of", "how", "many", "instructions", "will", "be", "overwritten", "but", "it", "works", "NUMBER", "Misiur", "I", "don", "t", "see", "any", "problem", "in", "the", "log", "you", "attached", "NUMBER", "Build", "finishes", "and", "cutter", "fail", "to", "open", "because", "you", "don", "t", "have", "any", "displays", "available", "within", "docker", "which", "seems", "reasonable", "NUMBER", "What", "do", "you", "mean", "by", "worked", "did", "it", "somehow", "opened", "the", "GUI", "Can", "you", "demonstrate", "a", "full", "log", "that", "demonstrates", "work", "the", "first", "time", "and", "then", "fail", "on", "second", "time", "Or", "did", "it", "worked", "once", "and", "you", "can", "t", "repeat", "that", "at", "all", "Looks", "like", "drj", "returns", "them", "in", "expected", "order", "but", "since", "the", "json", "parser", "puts", "them", "in", "an", "ordered", "dictionary", "they", "get", "sorted", "alphabetically", "NUMBER", "drrj", "returns", "an", "array", "instead", "of", "object", "dictionary", "so", "it", "should", "be", "usable", "for", "get", "correct", "order", "NUMBER", "It", "seems", "to", "currently", "include", "some", "unexpect", "terminal", "escape", "code", "those", "would", "have", "to", "be", "fix", "first", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Qt", "stylesheets", "support", "use", "the", "colors", "from", "current", "QPallete", "LINK", "NUMBER", "stylesheet", "reference", "NUMBER", "html", "paletterole", "NUMBER", "Reasons", "for", "use", "color", "palette", "and", "palette", "roles", "in", "the", "color", "theme", "stylesheets", "less", "places", "that", "need", "to", "update", "when", "adjusting", "color", "might", "allow", "simplifying", "the", "stylesheets", "in", "places", "where", "the", "widgets", "would", "use", "those", "colors", "from", "palette", "by", "default", "Dark", "and", "midnight", "theme", "stylesheets", "be", "almost", "identical", "except", "colors", "NUMBER", "With", "color", "palette", "they", "can", "probably", "be", "deduplicated", "thus", "reducing", "amount", "of", "work", "for", "fix", "stylesheet", "relate", "layout", "bug", "NUMBER", "easier", "future", "theme", "creation", "by", "customizing", "only", "palette", "TAG", "Describe", "the", "solution", "you", "d", "like", "Fully", "specify", "the", "color", "palettes", "for", "the", "exist", "cutter", "themes", "currently", "only", "text", "color", "be", "set", "Replace", "use", "of", "explicit", "colors", "in", "theme", "stylesheets", "with", "palette", "roles", "as", "much", "as", "possible", "try", "if", "parts", "of", "stylesheet", "can", "be", "simplified", "due", "to", "use", "of", "palette", "color", "be", "the", "default", "behavior", "evaluate", "if", "some", "of", "the", "themes", "can", "share", "stylesheet", "TAG", "Describe", "alternatives", "you", "ve", "considered", "TAG", "Somewhat", "relate", "but", "it", "could", "also", "be", "do", "separately", "be", "choosing", "customization", "friendly", "base", "style", "NUMBER", "From", "what", "I", "understand", "currently", "the", "stylesheet", "gets", "applied", "on", "top", "of", "the", "native", "style", "NUMBER", "It", "has", "two", "problem", "depending", "on", "how", "much", "custom", "stuff", "be", "do", "style", "engine", "code", "suitability", "for", "customization", "varies", "inconsistent", "base", "produces", "inconsistent", "results", "By", "style", "I", "mean", "LINK", "NUMBER", "qstyle", "NUMBER", "html", "details", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Update", "github", "checkout", "action", "from", "v", "NUMBER", "to", "v", "NUMBER", "Might", "help", "with", "the", "referenfce", "be", "not", "a", "tree", "error", "that", "sometimes", "happens", "NUMBER", "LINK", "be", "NUMBER", "Aissue", "reference", "be", "not", "a", "tree", "be", "NUMBER", "Aclosed", "Test", "plan", "required", "Make", "sure", "CI", "build", "be", "green", "heavy_check_mark", "Closing", "issue", "TAG", "Appveyor", "failure", "was", "probably", "cause", "by", "github", "problem", "yesterday", "LINK", "Although", "it", "would", "be", "nice", "if", "some", "could", "restart", "the", "appveyor", "build", "and", "confirm", "it", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Latest", "meson", "version", "increase", "minimum", "ninja", "version", "to", "NUMBER", "LINK", "NUMBER", "Alternative", "solution", "would", "be", "pinning", "meson", "version", "NUMBER", "Since", "this", "job", "be", "already", "use", "newer", "library", "version", "from", "cutter", "deps", "I", "chose", "update", "ninja", "instead", "NUMBER", "Such", "approach", "would", "be", "more", "suited", "if", "all", "the", "dependencies", "were", "taken", "from", "system", "repository", "like", "it", "s", "do", "in", "Travis", "Ubuntu", "NUMBER", "build", "job", "NUMBER", "Test", "plan", "required", "CI", "test", "be", "green", "NUMBER", "Log", "for", "Ubuntu", "NUMBER", "on", "github", "actions", "build", "indicates", "that", "ninja", "NUMBER", "was", "install", "heavy_check_mark", "Closing", "issue", "Environment", "information", "Operating", "System", "Arch", "Linux", "Qt", "NUMBER", "Gnome", "desktop", "Cutter", "version", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "ffa", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "bb", "NUMBER", "NUMBER", "Obtained", "from", "Built", "from", "source", "File", "format", "Not", "applicable", "Describe", "the", "bug", "Font", "and", "background", "settings", "in", "light", "theme", "make", "tooltips", "almost", "unreadable", "NUMBER", "To", "Reproduce", "NUMBER", "Open", "a", "file", "in", "Cutter", "NUMBER", "NUMBER", "Set", "the", "interface", "theme", "to", "Light", "NUMBER", "NUMBER", "Hover", "over", "Execute", "command", "button", "in", "console", "widget", "or", "navbar", "to", "trigger", "the", "tooltip", "Expected", "behavior", "Tooltip", "background", "has", "contrasting", "color", "with", "the", "text", "color", "NUMBER", "Screenshots", "TAG", "tooltip", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cc", "NUMBER", "df", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "cce", "NUMBER", "aa", "NUMBER", "png", "Additional", "context", "TAG", "Yes", "it", "probably", "doesn", "t", "have", "it", "specified", "and", "uses", "the", "value", "from", "system", "theme", "which", "has", "varying", "results", "NUMBER", "Cutter", "currently", "contains", "docstring", "comments", "both", "in", "headers", "and", "next", "to", "implementation", "in", "cpp", "file", "NUMBER", "There", "be", "more", "of", "them", "in", "headers", "NUMBER", "compared", "to", "NUMBER", "in", "cpp", "file", "NUMBER", "It", "might", "be", "better", "to", "have", "them", "always", "in", "header", "unless", "the", "function", "be", "visible", "only", "within", "single", "translation", "unit", "and", "doesn", "t", "have", "a", "declaration", "outside", "cpp", "file", "NUMBER", "Tasks", "x", "Confirm", "if", "the", "assumption", "above", "be", "correct", "x", "Test", "how", "docstring", "in", "cpp", "file", "behaves", "in", "different", "IDEs", "x", "Test", "how", "doxygen", "reacts", "to", "docstrings", "in", "cpp", "file", "Update", "developer", "documentation", "once", "the", "best", "approach", "be", "clarified", "by", "steps", "above", "Consider", "cleaning", "up", "exist", "docstrings", "if", "one", "approach", "has", "significant", "benefit", "over", "the", "other", "Benefits", "of", "having", "the", "docstring", "in", "header", "If", "docstring", "be", "in", "the", "header", "QtCreator", "displays", "it", "when", "autocompleting", "or", "hovering", "over", "the", "function", "call", "NUMBER", "Need", "to", "test", "if", "other", "tool", "have", "similar", "behavior", "NUMBER", "Benefits", "of", "having", "docstring", "next", "to", "implementation", "It", "be", "easier", "to", "keep", "the", "comment", "up", "to", "date", "when", "modifying", "the", "function", "It", "be", "more", "accessible", "when", "reading", "code", "because", "the", "documentation", "be", "in", "front", "of", "you", "and", "not", "in", "another", "file", "Tool", "behaviour", "QtCreator", "shows", "the", "docstring", "only", "from", "declaration", "Clion", "docstring", "can", "be", "either", "place", "Vscode", "docstring", "can", "be", "in", "either", "place", "requires", "configuring", "cmake", "and", "compile", "for", "help", "to", "start", "work", "Doxygen", "docstring", "can", "be", "in", "either", "place", "The", "recommendation", "from", "Google", "Coding", "Style", "guide", "seems", "to", "match", "with", "my", "initial", "suggestion", "of", "keep", "docstring", "in", "next", "to", "declaration", "in", "header", "NUMBER", "Docstrings", "describe", "what", "the", "function", "do", "how", "to", "use", "it", "and", "such", "comments", "belong", "to", "declaration", "NUMBER", "Please", "read", "the", "release", "note", "NUMBER", "LINK", "Seems", "to", "be", "specific", "to", "Appimage", "build", "doesn", "t", "happen", "when", "I", "build", "locally", "use", "my", "system", "s", "Qt", "NUMBER", "My", "initial", "guess", "that", "the", "Qt", "version", "or", "it", "s", "build", "on", "Ci", "servers", "be", "bad", "but", "the", "Appimage", "from", "qt", "NUMBER", "branch", "be", "also", "bad", "NUMBER", "It", "might", "be", "useful", "to", "do", "a", "build", "locally", "use", "qt", "from", "cutter", "deps", "NUMBER", "Was", "able", "to", "repeat", "use", "local", "build", "and", "Qt", "from", "cutter", "deps", "without", "appimage", "NUMBER", "Next", "test", "be", "build", "cutter", "deps", "locally", "use", "the", "same", "scripts", "as", "in", "CI", "NUMBER", "That", "should", "tell", "if", "the", "problem", "be", "in", "build", "scripts", "or", "the", "CI", "environment", "where", "cutter", "deps", "be", "compiled", "NUMBER", "Using", "locally", "build", "QT", "use", "the", "same", "scripts", "but", "qt", "NUMBER", "worked", "NUMBER", "That", "leaves", "NUMBER", "theories", "something", "in", "the", "system", "headers", "on", "CI", "machines", "I", "really", "hope", "that", "this", "isn", "t", "the", "case", "difference", "in", "qt", "build", "configuration", "variables", "that", "were", "chosen", "automatically", "something", "that", "get", "fix", "between", "NUMBER", "and", "NUMBER", "seems", "unlikely", "For", "the", "second", "theory", "I", "will", "compare", "the", "build", "config", "print", "by", "Qt", "in", "my", "local", "build", "and", "CI", "build", "NUMBER", "I", "need", "to", "update", "cutter", "deps", "from", "qt", "NUMBER", "to", "NUMBER", "anyway", "NUMBER", "diff", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Compiler", "gcc", "NUMBER", "Configuration", "use_gold_linker", "sse", "NUMBER", "aesni", "sse", "NUMBER", "ssse", "NUMBER", "sse", "NUMBER", "_", "NUMBER", "sse", "NUMBER", "_", "NUMBER", "avx", "avx", "NUMBER", "avx", "NUMBER", "f", "avx", "NUMBER", "bw", "avx", "NUMBER", "cd", "avx", "NUMBER", "dq", "avx", "NUMBER", "er", "avx", "NUMBER", "ifma", "avx", "NUMBER", "pf", "avx", "NUMBER", "vbmi", "avx", "NUMBER", "vl", "ccache", "compile_examples", "enable_new_dtags", "f", "NUMBER", "c", "largefile", "precompile_header", "rdrnd", "shani", "x", "NUMBER", "SimdAlways", "shared", "shared", "rpath", "release", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "z", "concurrent", "dbus", "reduce_exports", "reduce_relocations", "stl", "Compiler", "gcc", "NUMBER", "Configuration", "use_gold_linker", "sse", "NUMBER", "aesni", "sse", "NUMBER", "ssse", "NUMBER", "sse", "NUMBER", "_", "NUMBER", "sse", "NUMBER", "_", "NUMBER", "avx", "avx", "NUMBER", "avx", "NUMBER", "f", "avx", "NUMBER", "bw", "avx", "NUMBER", "cd", "avx", "NUMBER", "dq", "avx", "NUMBER", "er", "avx", "NUMBER", "ifma", "avx", "NUMBER", "pf", "avx", "NUMBER", "vbmi", "avx", "NUMBER", "vl", "ccache", "compile_examples", "enable_new_dtags", "f", "NUMBER", "c", "largefile", "precompile_header", "rdrnd", "shani", "x", "NUMBER", "SimdAlways", "shared", "shared", "rpath", "release", "c", "NUMBER", "c", "NUMBER", "concurrent", "dbus", "reduce_exports", "reduce_relocations", "stl", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Qt", "Xml", "NUMBER", "yes", "Support", "enable", "for", "Using", "pkg", "config", "NUMBER", "yes", "udev", "NUMBER", "yes", "udev", "NUMBER", "no", "Using", "system", "zlib", "NUMBER", "yes", "Zstandard", "support", "NUMBER", "yes", "Zstandard", "support", "NUMBER", "no", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Session", "Management", "NUMBER", "yes", "Features", "use", "by", "QPA", "backends", "evdev", "NUMBER", "yes", "libinput", "NUMBER", "yes", "libinput", "NUMBER", "no", "INTEGRITY", "HID", "NUMBER", "no", "mtdev", "NUMBER", "yes", "tslib", "NUMBER", "yes", "mtdev", "NUMBER", "no", "tslib", "NUMBER", "no", "xkbcommon", "NUMBER", "yes", "X", "NUMBER", "specific", "XLib", "NUMBER", "yes", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "EGLFS", "i", "NUMBER", "Mx", "NUMBER", "Wayland", "NUMBER", "no", "EGLFS", "RCAR", "NUMBER", "no", "EGLFS", "EGLDevice", "NUMBER", "yes", "EGLFS", "GBM", "NUMBER", "yes", "EGLFS", "GBM", "NUMBER", "no", "EGLFS", "VSP", "NUMBER", "NUMBER", "no", "EGLFS", "Mali", "NUMBER", "no", "EGLFS", "Raspberry", "Pi", "NUMBER", "no", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LinuxFB", "NUMBER", "yes", "VNC", "NUMBER", "yes", "XCB", "Using", "system", "provide", "XCB", "libraries", "NUMBER", "yes", "XCB", "XKB", "NUMBER", "yes", "Using", "system", "provide", "XCB", "libraries", "NUMBER", "no", "XCB", "XKB", "NUMBER", "no", "XCB", "XInput", "NUMBER", "yes", "Native", "painting", "experimental", "NUMBER", "no", "GL", "integrations", "There", "were", "more", "differences", "than", "ones", "listed", "above", "but", "those", "were", "unlikely", "to", "affect", "keyboard", "input", "NUMBER", "Next", "step", "be", "trying", "to", "repeat", "the", "problem", "use", "local", "qt", "build", "by", "change", "the", "features", "that", "differ", "NUMBER", "And", "if", "that", "works", "doing", "the", "opposite", "in", "CI", "build", "NUMBER", "As", "I", "expected", "use", "cutter", "deps", "and", "qt", "wayland", "backend", "numpad", "works", "NUMBER", "Most", "likely", "the", "problem", "be", "in", "XCB", "XKB", "or", "Using", "system", "provide", "XCB", "libraries", "NUMBER", "I", "was", "able", "to", "make", "numpad", "not", "work", "by", "setting", "no", "xkb", "for", "local", "qt", "build", "NUMBER", "Will", "try", "to", "enable", "it", "in", "cutter", "deps", "NUMBER", "Qt", "NUMBER", "test", "release", "has", "be", "rebuilt", "with", "xkb", "NUMBER", "Numpad", "seems", "to", "be", "work", "NUMBER", "If", "anyone", "wants", "to", "confirm", "it", "be", "available", "here", "LINK", "test", "qt", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Currently", "there", "be", "no", "easy", "way", "to", "find", "text", "in", "the", "Console", "widget", "NUMBER", "The", "feature", "I", "d", "like", "to", "see", "be", "a", "search", "widget", "with", "the", "following", "features", "Good", "and", "modern", "UI", "NUMBER", "For", "example", "a", "small", "box", "poping", "at", "the", "top", "right", "corner", "of", "the", "widget", "NUMBER", "Check", "other", "text", "editors", "for", "example", "NUMBER", "e", "NUMBER", "g", "kconsole", "vscode", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "ec", "NUMBER", "NUMBER", "ab", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "fddd", "NUMBER", "NUMBER", "ab", "NUMBER", "ea", "NUMBER", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "da", "NUMBER", "png", "Count", "number", "of", "results", "and", "show", "the", "current", "index", "of", "shown", "result", "NUMBER", "of", "NUMBER", "Regex", "support", "Toggle", "Match", "Case", "Regex", "Bonus", "Feature", "replace", "for", "editable", "widgets", "e", "NUMBER", "g", "types", "and", "structs", "NUMBER", "This", "can", "be", "set", "to", "disable", "by", "default", "or", "to", "be", "smart", "to", "know", "if", "the", "widget", "be", "writeable", "Please", "don", "t", "invent", "the", "wheel", "and", "check", "Qt", "based", "open", "source", "projects", "for", "such", "implementations", "NUMBER", "For", "example", "qconsole", "Somewhat", "relate", "to", "LINK", "NUMBER", "If", "it", "be", "the", "same", "search", "bar", "widget", "across", "everything", "it", "needs", "to", "support", "different", "data", "models", "since", "they", "be", "completely", "different", "for", "decompiler", "widget", "console", "widget", "rich", "text", "box", "table", "widgets", "and", "graph", "widget", "NUMBER", "This", "way", "of", "display", "the", "flag", "and", "comment", "seems", "very", "inconvenient", "to", "me", "but", "I", "d", "like", "to", "hear", "other", "opinions", "NUMBER", "dhaval", "NUMBER", "we", "appreciate", "the", "contribution", "but", "unfortunately", "your", "current", "implementation", "provides", "little", "improvement", "over", "just", "open", "a", "synchronized", "disassembly", "widget", "next", "to", "hexwidget", "NUMBER", "You", "can", "read", "the", "ideas", "for", "how", "it", "could", "look", "in", "NUMBER", "pxa", "suggested", "by", "radare", "and", "right", "side", "of", "wxHexEditor", "screenshot", "in", "LINK", "issuecomment", "NUMBER", "be", "also", "good", "ideas", "NUMBER", "Looks", "like", "the", "qt", "change", "have", "be", "merge", "in", "their", "dev", "branch", "but", "not", "NUMBER", "or", "NUMBER", "Is", "it", "a", "pure", "Qt", "issue", "or", "can", "we", "overcome", "this", "yossizap", "can", "you", "have", "a", "look", "The", "possible", "approaches", "for", "fix", "wait", "for", "qt", "patch", "to", "be", "include", "in", "official", "release", "it", "s", "in", "the", "dev", "branch", "and", "will", "probably", "be", "include", "in", "Qt", "NUMBER", "which", "will", "come", "out", "at", "the", "end", "of", "NUMBER", "Not", "sure", "if", "they", "will", "merge", "it", "in", "NUMBER", "or", "not", "NUMBER", "merge", "the", "qt", "NUMBER", "bit", "patch", "in", "cutter", "deps", "the", "problem", "will", "still", "affect", "Cutter", "linked", "against", "system", "Qt", "and", "people", "who", "compile", "Cutter", "themselves", "there", "were", "a", "bunch", "of", "change", "before", "in", "NUMBER", "patch", "the", "patch", "can", "t", "be", "applied", "to", "qt", "NUMBER", "without", "porting", "large", "amount", "of", "code", "switching", "json", "parser", "that", "s", "a", "significant", "amount", "of", "work", "especially", "knowing", "that", "upstream", "Qt", "has", "fix", "it", "modify", "r", "NUMBER", "to", "pass", "NUMBER", "bit", "values", "as", "string", "instead", "of", "integer", "I", "have", "seen", "this", "be", "do", "for", "some", "of", "r", "NUMBER", "json", "commands", "NUMBER", "Downside", "be", "that", "it", "makes", "the", "api", "worse", "for", "other", "use", "cases", "like", "r", "NUMBER", "pipe", "python", "which", "be", "probably", "not", "be", "affected", "by", "this", "problem", "as", "python", "has", "arbitrary", "size", "integers", "NUMBER", "Maybe", "it", "could", "be", "an", "r", "NUMBER", "option", "for", "how", "the", "NUMBER", "bit", "integers", "be", "printed", "in", "json", "NUMBER", "NUMBER", "NUMBER", "PFMT", "NUMBER", "du", "find", "NUMBER", "potential", "places", "in", "r", "NUMBER", "that", "aren", "t", "use", "pj", "not", "all", "of", "them", "be", "json", "printers", "but", "many", "be", "NUMBER", "workaround", "the", "Qt", "json", "parser", "API", "and", "obtain", "the", "value", "as", "string", "and", "parse", "it", "ourselves", "depending", "on", "Qt", "json", "parser", "architecture", "and", "when", "it", "performs", "number", "parsing", "this", "might", "be", "impossible", "NUMBER", "doesn", "t", "seem", "possible", "For", "now", "implement", "solution", "which", "uses", "r", "NUMBER", "command", "that", "returns", "values", "as", "strings", "NUMBER", "After", "thinking", "this", "more", "I", "notice", "that", "even", "with", "different", "Json", "parser", "or", "the", "fix", "in", "Qt", "json", "parser", "they", "would", "unlikely", "handle", "NUMBER", "bit", "registers", "NUMBER", "Related", "but", "slightly", "different", "case", "be", "NUMBER", "bit", "numbers", "everywhere", "else", "in", "r", "NUMBER", "TAG", "cutter", "data", "exchange", "NUMBER", "Created", "a", "separate", "issue", "for", "that", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "when", "open", "a", "context", "menu", "use", "keyboard", "in", "disassembly", "widget", "or", "graph", "widget", "it", "opens", "generic", "widget", "context", "menu", "as", "if", "user", "right", "clicked", "outside", "any", "instructions", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Opening", "context", "menu", "use", "keyboard", "in", "those", "widgets", "should", "open", "the", "dissaembly", "context", "menu", "for", "current", "position", "in", "the", "widget", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "Additional", "context", "TAG", "LINK", "_key", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Define", "dependency", "between", "bindings_target", "and", "generate", "sources", "NUMBER", "It", "seems", "that", "defining", "outputs", "works", "only", "for", "QMAKE_EXTRA_COMPILER", "not", "QMAKE_EXTRA_TARGET", "NUMBER", "Looking", "at", "qmake", "source", "confirms", "this", "NUMBER", "Without", "this", "there", "was", "dependency", "only", "between", "bindings_target", "and", "cutter", "link", "step", "which", "be", "too", "late", "NUMBER", "Without", "these", "change", "it", "could", "fail", "in", "two", "ways", "cpp", "file", "including", "generate", "headers", "be", "compiled", "before", "generation", "generate", "source", "file", "be", "compiled", "before", "it", "has", "be", "generate", "NUMBER", "Test", "plan", "required", "Test", "that", "the", "bug", "can", "be", "repeated", "on", "your", "system", "without", "change", "NUMBER", "To", "repeat", "the", "error", "with", "j", "NUMBER", "I", "enable", "ccache", "by", "add", "QMAKE_CXX", "ccache", "g", "at", "the", "top", "of", "Cutter", "NUMBER", "pro", "NUMBER", "On", "my", "system", "I", "also", "had", "to", "use", "python", "NUMBER", "embed", "PKGCONFIG", "target", "instead", "of", "python", "NUMBER", "because", "python", "NUMBER", "was", "for", "python", "plugins", "and", "didn", "t", "link", "the", "python", "lib", "NUMBER", "make", "a", "build", "directory", "run", "qmake", "PKG_CONFIG_PATH", "bin", "prefix", "radare", "NUMBER", "lib", "pkgconfig", "qmake", "NUMBER", "cutter", "src", "Cutter", "NUMBER", "pro", "CUTTER_ENABLE_PYTHON", "true", "CUTTER_ENABLE_PYTHON_BINDINGS", "true", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "false", "make", "with", "j", "NUMBER", "or", "higher", "if", "error", "doesn", "t", "happen", "empty", "the", "build", "directory", "and", "repeat", "the", "build", "second", "so", "that", "ccache", "can", "do", "it", "s", "job", "Test", "that", "bug", "be", "fix", "remove", "build", "directory", "repeat", "the", "same", "steps", "as", "for", "repeating", "the", "bug", "but", "with", "the", "change", "do", "both", "build", "verify", "that", "make", "exited", "with", "return", "code", "NUMBER", "after", "each", "build", "make", "sure", "that", "no", "build", "file", "were", "generate", "in", "source", "directory", "inspect", "the", "generate", "Makefile", "NUMBER", "It", "should", "contain", "rules", "for", "generating", "NUMBER", "h", "and", "cpp", "file", "which", "depend", "on", "bindings_target", "try", "compile", "use", "a", "build", "directory", "at", "different", "depth", "to", "verify", "that", "relatives", "paths", "be", "handle", "correctly", "Closing", "issue", "Closes", "NUMBER", "TAG", "anthraxx", "Could", "you", "verify", "that", "the", "patch", "works", "on", "your", "system", "NUMBER", "Was", "able", "to", "repeat", "use", "make", "j", "NUMBER", "and", "ccache", "NUMBER", "anthraxx", "I", "see", "that", "you", "be", "one", "of", "the", "Arch", "Linux", "package", "maintainers", "for", "Cutter", "NUMBER", "Note", "that", "we", "be", "planning", "of", "switching", "from", "qmake", "to", "CMake", "NUMBER", "There", "be", "already", "few", "features", "like", "ksyntaxhighligthing", "and", "graphviz", "which", "be", "only", "implement", "in", "the", "cmake", "build", "NUMBER", "Previously", "it", "didn", "t", "have", "the", "install", "target", "but", "it", "was", "recently", "add", "NUMBER", "If", "it", "do", "something", "badly", "make", "you", "difficult", "to", "prepare", "the", "package", "let", "me", "know", "NUMBER", "That", "s", "not", "how", "pythonhome", "configuration", "works", "it", "shouldn", "t", "be", "point", "to", "the", "executable", "NUMBER", "You", "should", "read", "Pythyon", "documentation", "on", "what", "pythonhome", "means", "NUMBER", "There", "be", "a", "command", "line", "argument", "for", "pythonhome", "but", "setting", "python", "home", "to", "usr", "local", "will", "not", "work", "unless", "you", "have", "the", "same", "version", "of", "python", "as", "one", "inside", "Cutter", "appimage", "NUMBER", "That", "would", "also", "need", "some", "of", "the", "python", "package", "that", "be", "inside", "Appimage", "NUMBER", "Most", "importantly", "the", "cutter", "python", "bindings", "and", "correct", "Qt", "bindings", "NUMBER", "Here", "be", "two", "approaches", "that", "work", "for", "me", "Compiling", "cutter", "from", "source", "and", "link", "against", "system", "Python", "NUMBER", "Assuming", "you", "can", "get", "all", "the", "dependencies", "from", "system", "package", "manager", "this", "be", "quite", "easy", "NUMBER", "Using", "Appimage", "NUMBER", "Install", "matching", "python", "version", "use", "pyenv", "NUMBER", "Currently", "distributed", "Cutter", "contains", "NUMBER", "And", "then", "doing", "NUMBER", "pyenv", "version", "NUMBER", "x", "bin", "python", "NUMBER", "m", "install", "user", "package_name", "NUMBER", "Where", "NUMBER", "pyenv", "version", "NUMBER", "x", "be", "the", "path", "pyenv", "install", "request", "python", "version", "NUMBER", "I", "think", "he", "meant", "a", "line", "separator", "NUMBER", "But", "it", "might", "be", "the", "user", "theme", "that", "causes", "it", "to", "look", "like", "this", "NUMBER", "Anyways", "he", "probably", "imagines", "something", "like", "this", "before", "NUMBER", "NUMBER", "NUMBER", "after", "NUMBER", "________", "NUMBER", "________", "NUMBER", "________", "As", "for", "the", "line", "separators", "I", "already", "said", "my", "opinion", "don", "t", "touch", "the", "default", "theme", "aAnd", "don", "t", "widget", "specific", "styles", "sheet", "change", "NUMBER", "I", "be", "guessing", "that", "the", "comment", "by", "XVilka", "was", "at", "least", "partially", "due", "to", "having", "unnecessary", "style", "modifications", "copied", "from", "initial", "page", "NUMBER", "Just", "use", "default", "look", "of", "list", "widget", "should", "be", "fine", "NUMBER", "I", "agree", "with", "karliss", "don", "t", "touch", "this", "Before", "make", "a", "comment", "I", "recommended", "going", "through", "all", "the", "change", "and", "ask", "yourself", "if", "you", "wanted", "to", "make", "them", "NUMBER", "It", "helps", "catching", "accidental", "change", "and", "unfinished", "or", "test", "code", "you", "didn", "t", "want", "to", "commit", "NUMBER", "New", "file", "be", "usually", "obvious", "but", "unintentional", "source", "modifications", "in", "the", "same", "file", "you", "made", "intentional", "change", "be", "harder", "to", "notice", "after", "the", "fact", "NUMBER", "There", "two", "approaches", "to", "this", "NUMBER", "One", "be", "to", "use", "git", "diff", "staged", "or", "it", "s", "equivalent", "in", "your", "git", "gui", "NUMBER", "Other", "be", "to", "carefully", "stage", "change", "one", "by", "instead", "of", "staging", "everything", "NUMBER", "NUMBER", "gitignore", "be", "still", "useful", "for", "avoiding", "common", "mistakes", "and", "reducing", "noise", "while", "staging", "NUMBER", "I", "have", "more", "suggestions", "NUMBER", "make", "sure", "port", "be", "valid", "allow", "only", "digits", "and", "maximum", "value", "of", "highest", "port", "NUMBER", "Don", "t", "show", "the", "previous", "connection", "view", "if", "no", "preview", "exists", "it", "s", "confusing", "NUMBER", "NUMBER", "Usually", "such", "widgets", "be", "use", "combo", "boxes", "for", "previous", "values", "NUMBER", "I", "think", "the", "history", "view", "you", "created", "be", "very", "nice", "and", "I", "suggest", "to", "give", "it", "extra", "spices", "NUMBER", "I", "suggest", "to", "filter", "its", "content", "based", "on", "the", "text", "the", "user", "types", "in", "either", "IP", "or", "Port", "NUMBER", "Check", "the", "theme", "color", "filtering", "in", "the", "theme", "editor", "for", "example", "NUMBER", "This", "should", "be", "possible", "and", "would", "make", "it", "veyr", "nice", "NUMBER", "It", "will", "be", "like", "a", "quick", "filter", "Environment", "information", "Operating", "System", "Arch", "Linux", "Cutter", "version", "v", "NUMBER", "on", "master", "Obtained", "from", "x", "Built", "from", "source", "File", "format", "PE", "NUMBER", "Describe", "the", "bug", "When", "open", "a", "file", "and", "seeking", "to", "a", "big", "function", "Cutter", "be", "slow", "to", "respond", "until", "the", "disassembly", "or", "Graph", "widget", "shows", "the", "function", "NUMBER", "To", "Reproduce", "cutter_slow_graph", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ce", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "eff", "NUMBER", "e", "NUMBER", "gif", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "the", "attach", "binary", "in", "Cutter", "NUMBER", "Seek", "to", "the", "function", "NUMBER", "x", "NUMBER", "D", "NUMBER", "in", "disassembly", "view", "NUMBER", "Change", "to", "graph", "in", "this", "function", "by", "pressing", "TAG", "space", "TAG", "or", "by", "right", "clicking", "and", "choosing", "Open", "in", "new", "graph", "NUMBER", "NUMBER", "See", "delay", "in", "open", "Expected", "behavior", "The", "graph", "should", "be", "shown", "smoothly", "File", "flagcheck", "NUMBER", "zip", "LINK", "What", "be", "the", "recommended", "analysis", "level", "For", "t", "agJ", "I", "get", "NUMBER", "seconds", "NUMBER", "Likely", "the", "same", "as", "NUMBER", "But", "in", "this", "case", "there", "aren", "t", "that", "many", "local", "variables", "so", "it", "might", "be", "something", "else", "cause", "disassembly", "to", "be", "slow", "NUMBER", "What", "be", "the", "recommended", "analysis", "level", "The", "default", "one", "NUMBER", "aaa", "Out", "of", "those", "NUMBER", "seconds", "NUMBER", "be", "spent", "here", "LINK", "L", "NUMBER", "NUMBER", "Let", "s", "not", "write", "latest", "from", "git", "as", "version", "NUMBER", "If", "the", "the", "problem", "doesn", "t", "get", "fix", "immediately", "it", "gets", "confusing", "what", "the", "latest", "from", "git", "after", "few", "weeks", "or", "months", "be", "NUMBER", "Let", "s", "not", "write", "latest", "from", "git", "as", "version", "agreed", "Will", "add", "version", "x", "NUMBER", "y", "NUMBER", "z", "There", "might", "be", "some", "problem", "due", "to", "differences", "between", "sets", "of", "support", "gdb", "protocol", "features", "NUMBER", "But", "in", "those", "cases", "more", "specific", "issue", "should", "be", "opened", "NUMBER", "It", "could", "contain", "things", "like", "What", "IDEs", "work", "best", "with", "Cutter", "and", "how", "to", "configure", "them", "Where", "to", "get", "dependencies", "NUMBER", "Partially", "overlaps", "with", "build", "instructions", "NUMBER", "Strong", "sides", "and", "weakness", "that", "be", "somewhat", "specific", "to", "work", "with", "Cutter", "SPAM", "NUMBER", "Closing", "Please", "read", "the", "issue", "template", "carefully", "NUMBER", "Section", "closing", "issue", "be", "intended", "for", "add", "references", "to", "issue", "that", "this", "PR", "close", "NUMBER", "Doing", "so", "in", "format", "request", "allows", "Github", "to", "recognize", "it", "and", "automatically", "close", "the", "issue", "once", "the", "PR", "be", "merge", "NUMBER", "It", "also", "automatically", "add", "the", "reference", "to", "PR", "in", "issue", "which", "would", "saved", "you", "the", "last", "comment", "NUMBER", "Didn", "t", "know", "that", "QObject", "connect", "has", "overload", "which", "accepts", "signal", "type", "as", "template", "argument", "NUMBER", "Looks", "nicer", "than", "static", "casting", "the", "member", "pointer", "expression", "NUMBER", "Last", "note", "NUMBER", "The", "format", "for", "Closing", "issue", "needs", "to", "be", "followed", "exactly", "as", "demonstrated", "in", "the", "template", "NUMBER", "Otherwise", "Github", "will", "not", "recognize", "it", "NUMBER", "Typically", "you", "would", "name", "the", "branch", "somewhat", "relate", "to", "the", "feature", "you", "be", "work", "on", "NUMBER", "It", "helps", "track", "what", "s", "where", "when", "dealing", "with", "multiple", "branch", "NUMBER", "I", "was", "going", "to", "suggest", "investigating", "if", "it", "s", "possible", "to", "support", "the", "options", "for", "graphviz", "based", "export", "modes", "but", "those", "be", "currently", "broken", "on", "r", "NUMBER", "side", "NUMBER", "So", "it", "can", "do", "separately", "once", "they", "be", "fix", "NUMBER", "good", "job", "guys", "great", "pr", "and", "reviews", "I", "don", "t", "like", "be", "the", "bad", "guy", "who", "says", "that", "everything", "needs", "to", "be", "redone", "but", "this", "point", "I", "a", "start", "to", "agree", "with", "others", "that", "it", "s", "probably", "best", "to", "implement", "it", "based", "on", "line", "highlight", "function", "in", "r", "NUMBER", "Assuming", "it", "wasn", "t", "renamed", "ecHi", "and", "others", "NUMBER", "That", "would", "mean", "better", "synchronization", "with", "r", "NUMBER", "and", "automatic", "support", "for", "accessing", "it", "from", "code", "NUMBER", "That", "way", "If", "someone", "write", "an", "automatic", "analysis", "script", "which", "highlights", "certain", "lines", "it", "would", "work", "equally", "well", "in", "r", "NUMBER", "Cutter", "or", "open", "a", "project", "that", "was", "start", "in", "r", "NUMBER", "in", "Cutter", "NUMBER", "It", "might", "even", "reduce", "amount", "of", "code", "in", "Cutter", "NUMBER", "Hi", "Thank", "you", "for", "the", "feedback", "NUMBER", "Please", "fill", "our", "issue", "template", "so", "we", "can", "fully", "understand", "the", "detailed", "feedback", "NUMBER", "As", "of", "now", "this", "issue", "doesn", "t", "help", "us", "solve", "the", "problem", "Hi", "thank", "you", "for", "open", "an", "issue", "Seems", "like", "you", "didn", "t", "fill", "the", "issue", "template", "and", "thus", "your", "issue", "be", "lacking", "important", "information", "we", "need", "to", "know", "NUMBER", "Please", "fill", "the", "issue", "with", "al", "the", "detailed", "and", "relevant", "information", "so", "we", "will", "be", "able", "to", "fully", "help", "you", "NUMBER", "Attach", "file", "screenshots", "and", "reproducers", "if", "you", "can", "NUMBER", "Thanks", "Please", "make", "sure", "to", "use", "an", "IP", "address", "NUMBER", "and", "not", "a", "string", "localhost", "NUMBER", "Since", "no", "answer", "was", "received", "from", "maskelihileci", "in", "the", "last", "two", "weeks", "and", "since", "crucial", "information", "wasn", "t", "provide", "to", "us", "and", "because", "the", "Issue", "template", "was", "not", "filled", "at", "all", "I", "be", "closing", "this", "issue", "NUMBER", "We", "will", "be", "happy", "to", "re", "open", "this", "issue", "if", "you", "ll", "provide", "us", "with", "more", "information", "NUMBER", "Thank", "you", "Thank", "you", "It", "looks", "fantastic", "Great", "work", "dhaval", "NUMBER", "Detailed", "description", "This", "Pull", "Request", "refactors", "the", "way", "hashes", "be", "fetches", "from", "radare", "NUMBER", "and", "display", "on", "the", "dashboard", "NUMBER", "Now", "instead", "of", "hard", "code", "some", "hashes", "and", "have", "their", "controls", "in", "the", "UI", "the", "hashes", "will", "be", "automatically", "fetched", "from", "itj", "and", "display", "based", "on", "their", "name", "NUMBER", "Naturally", "this", "PR", "will", "fetch", "any", "hash", "and", "always", "be", "up", "to", "date", "with", "radare", "NUMBER", "Thus", "sha", "NUMBER", "be", "now", "automatically", "add", "to", "the", "dashboard", "for", "all", "file", "NUMBER", "Special", "cases", "be", "hashes", "like", "Authentihash", "which", "only", "exists", "in", "itj", "for", "sign", "PE", "file", "NUMBER", "For", "example", "some", "binaries", "have", "Authentihash", "in", "the", "results", "of", "itj", "this", "will", "make", "sure", "to", "display", "it", "if", "available", "and", "any", "other", "hash", "that", "will", "be", "add", "later", "NUMBER", "Binary", "without", "Authentihash", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "png", "Binary", "with", "Authentihash", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "f", "NUMBER", "fc", "NUMBER", "f", "NUMBER", "c", "NUMBER", "png", "Finally", "this", "PR", "upgrades", "the", "radare", "NUMBER", "submodule", "and", "fix", "a", "regression", "in", "which", "the", "API", "responsible", "for", "fetching", "hashes", "change", "NUMBER", "Test", "plan", "required", "NUMBER", "Open", "any", "binary", "before", "and", "after", "the", "change", "and", "see", "that", "all", "the", "hashes", "and", "their", "values", "be", "the", "same", "NUMBER", "Minor", "UI", "tweak", "may", "be", "possible", "NUMBER", "NUMBER", "Open", "a", "binary", "with", "Authentihash", "and", "see", "that", "it", "be", "shown", "in", "the", "dashboard", "NUMBER", "Example", "LINK", "testbins", "blob", "master", "pe", "signature", "NUMBER", "exe", "Closing", "issue", "close", "NUMBER", "macOS", "fail", "be", "not", "relate", "to", "the", "PR", "Qt", "be", "sorting", "the", "hashes", "by", "itself", "NUMBER", "There", "s", "no", "standard", "to", "guarantee", "JSON", "order", "due", "to", "its", "internal", "structure", "as", "a", "hash", "map", "NUMBER", "Hence", "I", "d", "have", "to", "do", "hacky", "things", "to", "decide", "on", "the", "order", "which", "be", "simply", "not", "applicable", "NUMBER", "The", "PR", "aims", "to", "be", "generic", "enough", "and", "trust", "the", "itj", "command", "with", "its", "content", "whatever", "it", "be", "NUMBER", "Thus", "and", "although", "I", "agree", "with", "you", "that", "Authentihash", "be", "a", "niche", "in", "comparison", "to", "the", "resst", "I", "d", "leave", "it", "as", "be", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "From", "now", "and", "then", "people", "be", "struggling", "with", "update", "the", "radare", "NUMBER", "submodule", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "I", "suggest", "add", "this", "to", "our", "dev", "documentation", "Great", "Since", "it", "be", "documentation", "you", "can", "demonstrate", "several", "ways", "to", "do", "so", "NUMBER", "You", "can", "show", "how", "to", "update", "ALL", "submodules", "add", "them", "and", "commit", "the", "change", "NUMBER", "And", "in", "addition", "you", "can", "demonstrate", "how", "to", "specifically", "update", "the", "radare", "NUMBER", "submodule", "which", "be", "the", "more", "common", "task", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "We", "currently", "have", "support", "for", "an", "initialization", "file", "under", "the", "name", "NUMBER", "cutterrc", "NUMBER", "Users", "can", "use", "this", "file", "to", "execute", "radare", "NUMBER", "commands", "on", "the", "start", "of", "every", "session", "NUMBER", "LINK", "L", "NUMBER", "L", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Add", "a", "section", "dedicated", "to", "NUMBER", "cutterrc", "in", "the", "documentation", "NUMBER", "I", "totally", "agree", "NUMBER", "cc", "thestr", "NUMBER", "ng", "NUMBER", "r", "karliss", "Environment", "information", "Operating", "System", "Any", "Cutter", "version", "Recent", "from", "Git", "Obtained", "from", "x", "Built", "from", "source", "File", "format", "Any", "Describe", "the", "bug", "Currently", "when", "right", "clicking", "a", "non", "string", "instruction", "there", "be", "the", "option", "to", "remove", "the", "definition", "of", "the", "instruction", "as", "string", "while", "it", "be", "actually", "a", "code", "NUMBER", "This", "shouldn", "t", "be", "available", "unless", "it", "be", "indeed", "defined", "as", "string", "To", "Reproduce", "Right", "click", "on", "an", "instruction", "and", "see", "that", "Set", "as", "NUMBER", "String", "NUMBER", "Remove", "be", "available", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "d", "NUMBER", "bea", "NUMBER", "png", "Expected", "behavior", "The", "option", "to", "remove", "the", "definition", "of", "a", "String", "should", "only", "be", "there", "when", "the", "instruction", "be", "defined", "as", "string", "NUMBER", "Yes", "for", "small", "change", "like", "this", "and", "if", "you", "already", "implement", "it", "s", "better", "to", "just", "create", "a", "PR", "than", "trying", "to", "describe", "code", "use", "text", "NUMBER", "Situation", "be", "a", "bit", "different", "with", "larger", "change", "where", "doing", "wrong", "implementation", "would", "waste", "a", "lot", "of", "time", "NUMBER", "Thank", "you", "for", "report", "We", "will", "need", "to", "test", "it", "further", "but", "for", "the", "context", "please", "know", "that", "emu", "NUMBER", "r", "be", "dependant", "on", "asm", "NUMBER", "emu", "thus", "will", "enable", "it", "when", "enable", "by", "itself", "NUMBER", "So", "when", "emu", "NUMBER", "r", "change", "from", "disabled", "to", "enable", "it", "will", "enable", "asm", "NUMBER", "emu", "and", "when", "disabled", "it", "will", "not", "disable", "asm", "NUMBER", "emu", "Thank", "you", "I", "didn", "t", "read", "the", "issue", "yet", "but", "can", "you", "please", "share", "the", "exact", "binary", "file", "you", "use", "It", "s", "better", "than", "compile", "by", "ourselves", "because", "we", "would", "want", "to", "have", "an", "environment", "as", "similar", "to", "yours", "NUMBER", "Seems", "like", "you", "re", "looking", "at", "the", "data", "section", "that", "contains", "the", "strings", "and", "not", "at", "the", "code", "section", "NUMBER", "Use", "the", "function", "list", "at", "the", "left", "to", "navigate", "between", "the", "function", "NUMBER", "Otherwise", "you", "can", "X", "Ref", "the", "usage", "of", "these", "string", "by", "navigating", "to", "them", "and", "pressing", "X", "either", "on", "the", "list", "of", "Strings", "or", "on", "the", "places", "you", "should", "in", "your", "screenshot", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "the", "write", "documentation", "features", "shortcuts", "how", "to", "build", "a", "plugin", "NUMBER", "be", "laying", "inside", "radareorg", "cutter", "NUMBER", "While", "currently", "the", "documentation", "be", "short", "we", "be", "mature", "and", "stable", "enough", "to", "make", "the", "first", "steps", "toward", "a", "more", "comprehensive", "documentation", "and", "this", "be", "currently", "work", "in", "progress", "NUMBER", "The", "upcoming", "documentation", "will", "likely", "contain", "more", "pages", "and", "text", "in", "addition", "to", "dozens", "of", "images", "and", "screenshots", "NUMBER", "There", "be", "no", "need", "that", "all", "this", "data", "will", "be", "on", "Cutter", "repository", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Move", "all", "the", "documentation", "except", "the", "API", "docs", "to", "radareorg", "cutter", "NUMBER", "re", "Can", "t", "it", "work", "with", "rdareorg", "cutter", "NUMBER", "re", "without", "a", "NUMBER", "one", "I", "agree", "NUMBER", "Documentation", "and", "website", "be", "two", "different", "things", "NUMBER", "We", "might", "decide", "to", "redo", "the", "website", "from", "scratch", "that", "shouldn", "t", "affect", "documentation", "NUMBER", "We", "might", "also", "want", "to", "include", "documentation", "as", "part", "of", "binary", "package", "in", "which", "case", "it", "would", "be", "generate", "as", "part", "of", "build", "process", "NUMBER", "Looks", "very", "good", "well", "do", "thank", "you", "TAG", "Can", "I", "take", "up", "this", "issue", "Asking", "because", "I", "can", "t", "see", "any", "PRs", "in", "the", "past", "NUMBER", "month", "NUMBER", "Absolutely", "I", "be", "confirming", "that", "I", "will", "start", "work", "on", "this", "issue", "NUMBER", "Can", "ps", "NUMBER", "assign", "this", "issue", "to", "me", "NirmalManoj", "So", "far", "sounds", "reasonable", "NUMBER", "The", "popup", "isn", "t", "great", "but", "I", "don", "t", "see", "a", "better", "option", "NUMBER", "It", "could", "be", "shown", "only", "for", "formats", "that", "support", "at", "least", "one", "of", "the", "options", "NUMBER", "One", "more", "potential", "improvement", "be", "having", "a", "don", "t", "show", "this", "again", "checkbox", "which", "saves", "in", "the", "default", "graph", "export", "options", "NUMBER", "It", "would", "require", "add", "in", "settings", "a", "section", "with", "default", "export", "options", "and", "checkbox", "selecting", "if", "the", "popup", "dialog", "should", "be", "shown", "or", "the", "default", "settings", "use", "NUMBER", "Having", "customized", "options", "in", "the", "list", "of", "formats", "would", "be", "weird", "NUMBER", "Third", "option", "would", "be", "extending", "the", "file", "save", "dialog", "by", "add", "the", "checkbox", "and", "spinbox", "to", "it", "NUMBER", "I", "prefer", "use", "of", "native", "file", "save", "and", "open", "dialogs", "as", "much", "as", "possible", "NUMBER", "Native", "file", "dialogs", "provide", "provide", "more", "consistent", "experience", "by", "having", "the", "same", "shortcuts", "and", "other", "navigation", "controls", "as", "rest", "of", "the", "program", "displays", "bookmarked", "folders", "and", "any", "other", "desktop", "specific", "functionality", "NUMBER", "Unfortunately", "we", "currently", "can", "t", "use", "native", "file", "save", "dialog", "due", "to", "the", "way", "format", "selection", "works", "NUMBER", "That", "seems", "to", "be", "at", "least", "Qt", "limitation", "by", "not", "exposing", "all", "the", "functionality", "provide", "by", "the", "native", "dialogs", "and", "not", "the", "limitation", "of", "native", "file", "dialogs", "themselves", "NUMBER", "There", "be", "no", "need", "to", "have", "such", "detailed", "description", "of", "code", "change", "in", "Issue", "NUMBER", "You", "could", "have", "created", "a", "PR", "so", "that", "I", "can", "look", "at", "the", "code", "directly", "NUMBER", "If", "there", "be", "some", "minor", "change", "left", "you", "can", "create", "a", "PR", "in", "draft", "state", "thus", "make", "it", "clear", "that", "isn", "t", "finished", "NUMBER", "The", "Functionality", "add", "part", "could", "have", "be", "Detailed", "description", "part", "of", "PR", "NUMBER", "Doubt", "if", "this", "be", "against", "the", "standard", "followed", "in", "cutter", "It", "s", "hard", "to", "tell", "without", "seeing", "code", "better", "create", "a", "draft", "PR", "NUMBER", "Take", "a", "look", "at", "how", "other", "non", "r", "NUMBER", "values", "be", "stored", "in", "Configuration", "NUMBER", "cpp", "NUMBER", "Making", "the", "background", "for", "the", "transparent", "export", "as", "jpg", "white", "instead", "of", "black", "NUMBER", "Instead", "of", "white", "or", "black", "you", "could", "ignore", "the", "transparency", "option", "when", "not", "support", "by", "file", "format", "thus", "resulting", "in", "background", "that", "would", "have", "be", "use", "if", "transparency", "option", "was", "disabled", "NUMBER", "Making", "the", "popup", "dialog", "Just", "having", "it", "in", "settings", "might", "be", "sufficient", "NUMBER", "It", "s", "not", "something", "you", "would", "change", "often", "NUMBER", "Thank", "you", "very", "much", "ForsakenHarmony", "smile_cat", "Your", "time", "be", "very", "precious", "to", "us", "thank", "you", "for", "trying", "it", "again", "and", "report", "back", "We", "tried", "to", "reproduce", "it", "on", "our", "side", "but", "could", "not", "NUMBER", "I", "don", "t", "want", "to", "close", "this", "issue", "yet", "maybe", "romansavrulin", "has", "more", "info", "Environment", "information", "Operating", "System", "Any", "Cutter", "version", "Recent", "from", "git", "Obtained", "from", "Built", "from", "source", "File", "format", "Any", "Describe", "the", "bug", "When", "a", "debug", "session", "ended", "Cutter", "seeks", "to", "offset", "NUMBER", "x", "NUMBER", "This", "be", "probably", "due", "to", "the", "fact", "that", "the", "IP", "register", "be", "change", "to", "NUMBER", "x", "NUMBER", "and", "the", "registersChanged", "even", "be", "triggered", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "Cutter", "and", "choose", "a", "binary", "you", "can", "debug", "on", "your", "computer", "NUMBER", "Start", "debug", "click", "continue", "NUMBER", "NUMBER", "Stop", "the", "debugging", "session", "use", "the", "stop", "button", "NUMBER", "See", "that", "Cutter", "seek", "to", "NUMBER", "x", "NUMBER", "Expected", "behavior", "Cutter", "should", "return", "to", "either", "main", "entry", "NUMBER", "or", "the", "last", "seek", "location", "before", "entering", "debug", "NUMBER", "matching", "position", "of", "what", "this", "also", "might", "be", "a", "location", "in", "other", "modules", "or", "dynamically", "loaded", "code", "NUMBER", "It", "makes", "more", "sense", "to", "return", "to", "the", "place", "before", "debugging", "began", "as", "I", "suggested", "in", "the", "issue", "Environment", "Info", "System", "Windows", "NUMBER", "Ultimate", "x", "NUMBER", "SPI", "Cutter", "version", "Cutter", "v", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "Windows", "Obtained", "From", "Downloaded", "From", "Release", "Issue", "Weired", "Font", "Issue", "Of", "Decompiler", "Step", "To", "Reproduce", "NUMBER", "NUMBER", "Choose", "Any", "File", "To", "Analysis", "I", "use", "Default", "aaa", "NUMBER", "After", "Analysis", "Complete", "Try", "To", "Change", "Font", "Edit", "Preferences", "Appearance", "select", "font", "I", "use", "Arial", "Font", "With", "Bold", "and", "Size", "was", "NUMBER", "Effect", "To", "Be", "Seen", "All", "Font", "Become", "Larger", "In", "Disassembly", "and", "Decompiler", "NUMBER", "Restart", "Cutter", "and", "Analyze", "Same", "File", "with", "Same", "Configuration", "and", "See", "The", "GUI", "Expected", "Font", "Size", "Disassembly", "NUMBER", "Decompiler", "NUMBER", "What", "We", "get", "NUMBER", "Disassembly", "NUMBER", "Decompiler", "SMALLER", "THAN", "WE", "APPLIED", "LAST", "TIME", "ISSUE", "Environment", "information", "Operating", "System", "Any", "Cutter", "version", "Latest", "from", "git", "Obtained", "from", "x", "Built", "from", "source", "File", "format", "ELF", "NUMBER", "Describe", "the", "bug", "Cutter", "be", "freezing", "when", "trying", "to", "seek", "to", "a", "referenced", "address", "use", "either", "Disassembly", "and", "Graph", "widgets", "To", "Reproduce", "NUMBER", "Open", "the", "attached", "binary", "in", "Cutter", "NUMBER", "Seek", "to", "main", "NUMBER", "On", "the", "NUMBER", "x", "NUMBER", "you", "ll", "see", "the", "following", "instruction", "NUMBER", "x", "NUMBER", "lea", "rdi", "NUMBER", "x", "NUMBER", "b", "NUMBER", "const", "char", "s", "NUMBER", "Double", "click", "on", "the", "referenced", "address", "NUMBER", "x", "NUMBER", "b", "NUMBER", "to", "seek", "to", "it", "NUMBER", "The", "address", "contains", "the", "string", "NUMBER", "Cutter", "will", "freeze", "NUMBER", "After", "few", "minutes", "the", "following", "message", "were", "printed", "to", "the", "terminal", "Too", "many", "references", "here", "NUMBER", "Weird", "behaviour", "expected", "NUMBER", "QDragManager", "drag", "in", "possibly", "invalid", "state", "QXcbClipboard", "SelectionRequest", "too", "old", "Expected", "behavior", "Cutter", "should", "seek", "to", "NUMBER", "x", "NUMBER", "b", "NUMBER", "flawlessly", "Attached", "file", "md", "NUMBER", "zip", "LINK", "How", "do", "cutter", "ends", "up", "there", "when", "double", "clicking", "on", "reference", "to", "string", "Great", "question", "NUMBER", "I", "think", "the", "problem", "be", "the", "output", "from", "r", "NUMBER", "we", "probably", "expect", "something", "and", "get", "something", "else", "NUMBER", "See", "this", "error", "Too", "many", "references", "here", "NUMBER", "Weird", "behavior", "expected", "NUMBER", "NUMBER", "I", "remember", "this", "part", "from", "our", "code", "NUMBER", "It", "assumes", "that", "only", "one", "reference", "exists", "I", "add", "some", "breakpoints", "and", "loadCurrent", "graph", "seems", "to", "be", "triggered", "more", "than", "once", "weird", "AxelPotato", "I", "want", "to", "thank", "you", "for", "the", "time", "you", "take", "to", "open", "issue", "and", "report", "to", "us", "the", "problem", "you", "experience", "NUMBER", "This", "be", "highly", "important", "for", "us", "Your", "rock", "This", "will", "ask", "our", "contributor", "to", "tell", "us", "how", "they", "obtained", "their", "copy", "of", "Cutter", "Sorry", "I", "think", "that", "s", "too", "much", "to", "ask", "the", "users", "and", "will", "make", "some", "to", "skip", "filling", "issue", "NUMBER", "Except", "few", "days", "during", "after", "release", "period", "we", "don", "t", "really", "have", "conflict", "with", "different", "version", "NUMBER", "It", "stabalizes", "so", "NUMBER", "should", "be", "fix", "probably", "and", "NUMBER", "be", "fine", "to", "keep", "as", "be", "NUMBER", "I", "think", "they", "do", "that", "s", "problematic", "NUMBER", "I", "don", "t", "understand", "why", "NUMBER", "Because", "it", "happens", "a", "lot", "that", "malware", "be", "use", "anti", "debug", "tricks", "in", "which", "they", "check", "their", "memory", "for", "CC", "instructions", "NUMBER", "So", "in", "order", "to", "avoid", "this", "analysts", "usually", "disable", "their", "breakpoints", "in", "the", "ant", "debug", "function", "and", "restore", "them", "when", "finish", "NUMBER", "Keeping", "the", "int", "NUMBER", "CC", "instruction", "on", "the", "debugged", "program", "be", "meaningless", "and", "miss", "the", "point", "NUMBER", "In", "x", "NUMBER", "dbg", "iirc", "you", "can", "set", "action", "for", "the", "bp", "and", "tell", "it", "specifically", "to", "do", "nothing", "when", "reaching", "it", "only", "log", "or", "run", "command", "NUMBER", "But", "when", "disabled", "it", "should", "be", "disabled", "for", "real", "on", "one", "hand", "I", "think", "there", "be", "no", "need", "for", "asm", "NUMBER", "lines", "since", "we", "don", "t", "honor", "them", "Not", "in", "the", "disassembly", "widget", "and", "not", "in", "the", "x", "refs", "NUMBER", "On", "the", "other", "hand", "just", "yesterday", "I", "wanted", "to", "copy", "pate", "a", "bunch", "of", "instructions", "to", "put", "in", "a", "blog", "post", "I", "write", "and", "disappointed", "to", "find", "that", "I", "can", "t", "copy", "the", "instructions", "with", "the", "jump", "lines", "NUMBER", "Thus", "my", "readers", "can", "t", "see", "them", "NUMBER", "Another", "possibility", "be", "that", "it", "can", "be", "use", "by", "the", "people", "that", "use", "the", "console", "widget", "NUMBER", "We", "can", "change", "the", "description", "of", "the", "checkbox", "maybe", "Are", "we", "waiting", "for", "macOS", "people", "But", "it", "s", "totally", "planned", "We", "be", "work", "on", "implement", "a", "loader", "for", "shared", "libraries", "similarly", "to", "what", "OllyDbg", "had", "in", "the", "old", "days", "Does", "the", "console", "widget", "or", "the", "run", "terminal", "says", "something", "works", "here", "No", "usage", "examples", "in", "the", "Help", "nor", "in", "the", "PR", "NUMBER", "Expect", "the", "user", "not", "to", "understand", "how", "to", "use", "it", "Hi", "thanks", "for", "the", "suggestion", "Can", "you", "share", "more", "information", "about", "how", "you", "want", "it", "to", "look", "If", "you", "ll", "find", "some", "examples", "and", "share", "screenshots", "from", "other", "applications", "it", "will", "be", "great", "Thank", "you", "NUMBER", "This", "be", "a", "nice", "idea", "And", "thanks", "for", "taking", "the", "time", "to", "be", "creatve", "P", "Having", "a", "mechanism", "for", "visually", "display", "ranges", "and", "reacting", "to", "interactions", "with", "them", "would", "be", "useful", "for", "many", "features", "so", "it", "would", "be", "valuable", "to", "create", "good", "reusable", "infrastructure", "for", "that", "NUMBER", "Here", "be", "a", "rough", "proposal", "of", "the", "code", "for", "that", "could", "be", "structured", "NUMBER", "HexdumpHighlighter", "interface", "for", "module", "which", "can", "provide", "the", "highlight", "ranges", "to", "hexdump", "widget", "and", "reacts", "to", "events", "method", "getHilightRanges", "memoryRange", "HighlightRange", "mehtod", "which", "returns", "list", "of", "HighlightRanges", "which", "intersect", "with", "request", "memory", "range", "NUMBER", "Called", "by", "hexdump", "widget", "when", "position", "change", "NUMBER", "Returns", "info", "about", "memoryRange", "instead", "of", "all", "executable", "becuse", "they", "could", "be", "dynamically", "calculated", "NUMBER", "signal", "highlightsChanged", "indicates", "when", "the", "highlights", "change", "without", "change", "in", "position", "NUMBER", "method", "onRangeClicked", "hilightRange", "mouseEvent", "call", "by", "hexdumpWidget", "when", "a", "hilightRange", "returned", "by", "this", "HexdumpHighlighter", "be", "clicked", "NUMBER", "Allows", "implement", "interaction", "NUMBER", "method", "onRangeContextMenu", "highlightRange", "contextMenuEvent", "call", "when", "a", "range", "be", "right", "clicked", "or", "context", "menu", "be", "triggered", "use", "keyboard", "similar", "to", "onRangeClicked", "method", "onRangeXXX", "call", "for", "other", "kind", "of", "events", "if", "necesarry", "HighlightRange", "structure", "describes", "single", "highlight", "range", "memoryRange", "id", "can", "simplify", "highlighter", "code", "for", "reacting", "to", "onRangeClicked", "and", "other", "events", "visual", "style", "tooltip", "Ideas", "for", "highlight", "style", "properties", "background", "color", "font", "color", "colored", "underline", "corner", "marker", "Multiple", "instances", "of", "HexdumpHighlighter", "could", "be", "add", "to", "hexdump", "widget", "NUMBER", "Ideas", "for", "uses", "of", "this", "mechanism", "Manual", "highlight", "by", "user", "NUMBER", "data", "structure", "visualization", "Diff", "visualization", "NUMBER", "Click", "for", "jumping", "to", "address", "NUMBER", "NUMBER", "Comment", "and", "flag", "display", "within", "hexdump", "widget", "plugins", "stack", "visualization", "marking", "the", "address", "point", "by", "register", "Describe", "the", "bug", "Do", "to", "the", "new", "change", "in", "Debug", "and", "the", "creation", "of", "new", "widgets", "some", "Debug", "widgets", "such", "as", "processes", "and", "threads", "be", "opened", "when", "not", "in", "debug", "mode", "NUMBER", "This", "especially", "happening", "when", "use", "Cutter", "s", "version", "with", "debug", "for", "the", "first", "time", "due", "to", "change", "in", "settings", "NUMBER", "All", "debug", "widgets", "should", "be", "disabled", "and", "prevented", "from", "showing", "when", "not", "in", "debug", "mode", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Revert", "to", "a", "version", "without", "debugging", "support", "NUMBER", "Open", "cutter", "reset", "settings", "move", "widgets", "around", "and", "close", "cutter", "NUMBER", "Build", "the", "newest", "version", "of", "cutter", "NUMBER", "Open", "a", "binary", "in", "Cutter", "and", "you", "might", "see", "that", "some", "debug", "widgets", "be", "shown", "NUMBER", "Expected", "behavior", "All", "debug", "widgets", "should", "be", "disabled", "and", "prevented", "from", "showing", "when", "not", "in", "debug", "mode", "NUMBER", "Screenshots", "TAG", "Additional", "context", "TAG", "Describe", "the", "bug", "In", "Cutter", "this", "be", "impossible", "to", "patch", "with", "multiple", "instructions", "even", "though", "the", "preview", "shows", "the", "multiple", "instructions", "NUMBER", "Here", "I", "be", "trying", "to", "patch", "an", "address", "with", "multiple", "instructions", "NUMBER", "This", "should", "override", "the", "following", "instructions", "as", "well", "see", "wa", "nop", "nop", "nop", "NUMBER", "As", "you", "can", "see", "the", "preview", "shows", "the", "values", "of", "multiple", "instructions", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "bb", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ccaedd", "NUMBER", "png", "But", "in", "the", "results", "it", "probably", "truncates", "the", "from", "the", "input", "and", "ignores", "everything", "after", "it", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "bb", "NUMBER", "NUMBER", "bb", "NUMBER", "ea", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "png", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "a", "binary", "in", "write", "mode", "NUMBER", "Right", "click", "an", "address", "and", "choose", "Edit", "Instruction", "NUMBER", "Concatenate", "multiple", "instructions", "use", "NUMBER", "See", "that", "everything", "after", "the", "first", "be", "ignored", "Expected", "behavior", "All", "the", "instructions", "should", "be", "applied", "and", "override", "if", "needed", "Additional", "context", "Whoever", "implement", "this", "please", "pay", "attention", "to", "prevent", "code", "injection", "use", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "there", "be", "no", "easy", "way", "to", "re", "analyze", "a", "function", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "A", "one", "click", "solution", "to", "re", "analyze", "a", "function", "NUMBER", "This", "will", "basically", "wrap", "af", "TAG", "aF", "TAG", "or", "af", "TAG", "af", "TAG", "or", "any", "other", "suggestion", "if", "available", "NUMBER", "This", "be", "very", "useful", "API", "that", "can", "be", "use", "by", "different", "integrations", "and", "plugins", "NUMBER", "For", "example", "this", "can", "be", "use", "after", "patching", "a", "function", "ext", "or", "screenshots", "about", "the", "feature", "request", "here", "NUMBER", "Currently", "we", "have", "two", "menus", "for", "debug", "NUMBER", "Should", "they", "be", "merge", "Debug", "windows", "under", "Windows", "Debug", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "ea", "NUMBER", "ea", "NUMBER", "NUMBER", "ea", "NUMBER", "da", "NUMBER", "png", "Debug", "operations", "under", "Debug", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "f", "NUMBER", "cac", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "c", "NUMBER", "png", "On", "one", "hand", "debug", "windows", "be", "relate", "to", "the", "Windows", "menu", "since", "they", "decide", "which", "widgets", "be", "visible", "NUMBER", "On", "the", "other", "hand", "there", "s", "a", "dedicated", "main", "menu", "for", "Debug", "NUMBER", "Intuitively", "where", "will", "the", "user", "search", "for", "their", "desired", "widget", "karliss", "thestr", "NUMBER", "ng", "NUMBER", "r", "xarkes", "what", "do", "you", "think", "xarkes", "Are", "you", "against", "having", "it", "in", "both", "places", "Windows", "Debug", "as", "well", "as", "Debug", "Windows", "NUMBER", "Retest", "after", "radareorg", "radare", "NUMBER", "NUMBER", "Great", "thank", "you", "I", "think", "xarkes", "has", "start", "something", "LINK", "If", "you", "will", "consider", "your", "solution", "a", "temporarily", "workaround", "then", "fine", "but", "if", "your", "think", "that", "Antide", "s", "solution", "be", "better", "than", "we", "should", "decide", "how", "to", "proceed", "Okay", "then", "works", "for", "me", "so", "I", "m", "fine", "with", "merge", "karliss", "I", "think", "it", "be", "good", "to", "be", "merge", "let", "us", "know", "if", "something", "else", "be", "broken", "after", "this", "PR", "Great", "I", "be", "closing", "the", "issue", "then", "NUMBER", "Please", "let", "us", "know", "as", "soon", "as", "you", "find", "any", "other", "problem", "NUMBER", "Thank", "you", "Same", "here", "NUMBER", "F", "NUMBER", "was", "a", "problem", "a", "long", "ago", "but", "now", "I", "can", "t", "reproduce", "on", "Arch", "NUMBER", "Works", "great", "Thank", "you", "thanks", "for", "the", "quick", "fix", "ups", "Please", "do", "not", "forget", "the", "function", "documentation", "Great", "NUMBER", "Thanks", "Might", "be", "fix", "during", "NUMBER", "The", "code", "looks", "good", "NUMBER", "Will", "test", "later", "hopefully", "tonight", "Thank", "you", "I", "test", "and", "it", "works", "great", "I", "think", "that", "duplicating", "this", "code", "isn", "t", "required", "instead", "I", "d", "be", "happy", "if", "you", "combine", "the", "code", "from", "both", "Graph", "and", "Disassembly", "to", "the", "one", "place", "it", "fits", "the", "most", "DisassemblyContextMenu", "v", "NUMBER", "ctor", "let", "us", "know", "if", "further", "instructions", "be", "needed", "we", "will", "be", "happy", "to", "help", "Also", "please", "note", "the", "merge", "conflict", "in", "DisassemblyWidget", "NUMBER", "h", "v", "NUMBER", "ctor", "we", "will", "release", "Cutter", "tomorrow", "NUMBER", "I", "really", "hope", "to", "have", "this", "feature", "there", "it", "will", "be", "so", "great", "If", "possible", "please", "take", "the", "required", "actions", "to", "finish", "it", "by", "then", "if", "no", "please", "let", "us", "know", "Great", "PR", "thank", "you", "Since", "Disassembly", "and", "Graph", "should", "have", "the", "same", "behavior", "while", "pressing", "TAG", "Enter", "TAG", "there", "be", "no", "reason", "to", "keep", "the", "same", "code", "at", "both", "places", "NUMBER", "This", "be", "why", "xarkes", "suggested", "to", "put", "it", "in", "the", "same", "class", "Merging", "this", "PR", "well", "do", "Properrr", "Please", "continue", "improving", "the", "graph", "navigation", "with", "your", "idea", "looking", "forward", "to", "it", "CC", "trufae", "before", "the", "release", "Why", "In", "case", "of", "GHA", "it", "will", "be", "slower", "we", "have", "NUMBER", "NUMBER", "parallel", "build", "in", "Appveyor", "NUMBER", "On", "Sun", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Surendrajat", "TAG", "write", "To", "keep", "all", "CI", "stuff", "at", "one", "place", "on", "GitHub", "actions", "NUMBER", "No", "significant", "gain", "right", "now", "but", "since", "actions", "be", "deeply", "integrated", "Deploy", "keys", "etc", "NUMBER", "within", "the", "GitHub", "ecosystem", "I", "see", "it", "as", "a", "plus", "if", "future", "CI", "stuff", "be", "contained", "within", "actions", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "what", "would", "you", "do", "then", "Whoever", "merge", "this", "should", "not", "be", "squashed", "Finally", "I", "m", "really", "excited", "Good", "job", "yossizap", "fcasal", "I", "m", "merge", "radareorg", "cutter", "please", "be", "aware", "and", "keep", "an", "eye", "out", "for", "bug", "in", "the", "feature", "Detailed", "description", "A", "fairly", "simple", "widget", "based", "on", "ThreadsWidget", "that", "shows", "all", "child", "processes", "with", "dp", "and", "switches", "between", "them", "with", "dp", "when", "debugging", "NUMBER", "This", "be", "primarily", "useful", "for", "kernel", "debugging", "and", "following", "forks", "NUMBER", "Since", "it", "s", "not", "really", "required", "in", "most", "debug", "sessions", "the", "widget", "doesn", "t", "popup", "with", "default", "settings", "you", "have", "to", "toggle", "it", "in", "the", "debug", "window", "menu", "NUMBER", "Test", "plan", "required", "Attach", "to", "WinDbg", "and", "switch", "between", "processes", "that", "be", "run", "in", "the", "kernel", "NUMBER", "Attach", "to", "one", "of", "the", "processes", "on", "your", "system", "and", "switch", "to", "a", "child", "example", "program", "Linux", "void", "child_func", "while", "true", "sleep", "NUMBER", "int", "main", "int", "argc", "char", "argv", "sleep", "NUMBER", "time", "to", "attach", "switch", "fork", "case", "NUMBER", "perror", "fork", "exit", "NUMBER", "case", "NUMBER", "child_func", "break", "default", "break", "int", "status", "wait", "status", "Windows", "include", "TAG", "int", "main", "int", "argc", "char", "argv", "wchar_t", "wString", "new", "wchar_t", "NUMBER", "MultiByteToWideChar", "CP_ACP", "NUMBER", "C", "Windows", "system", "NUMBER", "notepad", "NUMBER", "exe", "NUMBER", "wString", "NUMBER", "or", "the", "path", "to", "your", "program", "PROCESS_INFORMATION", "ProcessInfo", "STARTUPINFO", "StartupInfo", "ZeroMemory", "StartupInfo", "sizeof", "StartupInfo", "StartupInfo", "NUMBER", "cb", "sizeof", "StartupInfo", "if", "CreateProcess", "wString", "NULL", "NULL", "NULL", "FALSE", "NUMBER", "NULL", "NULL", "StartupInfo", "ProcessInfo", "WaitForSingleObject", "ProcessInfo", "NUMBER", "hProcess", "INFINITE", "CloseHandle", "ProcessInfo", "NUMBER", "hThread", "CloseHandle", "ProcessInfo", "NUMBER", "hProcess", "else", "printf", "process", "creation", "fail", "n", "return", "NUMBER", "Notes", "Requires", "further", "debugging", "for", "these", "issue", "linux", "only", "wip", "Forks", "don", "t", "work", "with", "local", "debug", "you", "ll", "have", "to", "attach", "to", "a", "run", "process", "NUMBER", "Fixed", "When", "work", "with", "an", "attached", "process", "the", "children", "that", "you", "will", "attach", "to", "will", "also", "instantly", "die", "NUMBER", "Fixed", "Windows", "dp", "works", "but", "will", "switch", "you", "back", "to", "your", "process", "after", "stepping", "NUMBER", "Working", "on", "fix", "it", "but", "it", "shouldn", "t", "matter", "on", "cutter", "s", "side", "NUMBER", "Other", "issue", "WinDbg", "disassembly", "isn", "t", "properly", "loaded", "without", "having", "the", "kernel", "binary", "but", "you", "can", "see", "the", "processes", "and", "switch", "between", "them", "See", "NUMBER", "NUMBER", "Untitled", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "NUMBER", "a", "NUMBER", "ec", "NUMBER", "fc", "NUMBER", "png", "Detailed", "description", "Added", "stdin", "redirection", "for", "locally", "debugged", "unix", "processes", "use", "a", "ComboBox", "in", "the", "console", "widget", "that", "lets", "you", "switch", "between", "r", "NUMBER", "commands", "and", "stdin", "NUMBER", "Had", "to", "create", "a", "special", "combobox", "to", "prevent", "the", "popup", "from", "leaving", "the", "screen", "seeing", "that", "the", "console", "widget", "be", "usually", "at", "the", "bottom", "NUMBER", "I", "decided", "to", "place", "it", "in", "the", "console", "widget", "instead", "of", "a", "new", "widget", "because", "it", "already", "displays", "the", "debugee", "s", "stdout", "and", "stderr", "NUMBER", "Windows", "console", "apps", "already", "create", "their", "own", "popup", "console", "window", "that", "shows", "stdout", "err", "and", "lets", "you", "write", "into", "stdin", "NUMBER", "Test", "plan", "required", "See", "that", "the", "combobox", "doesn", "t", "appear", "in", "windows", "remote", "debugging", "attaching", "NUMBER", "Test", "with", "cat", "or", "ls", "sending", "bytes", "to", "stdin", "will", "work", "like", "piping", "so", "you", "can", "enter", "a", "path", "stdinredirect", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "c", "NUMBER", "png", "Using", "this", "simple", "echoing", "program", "include", "TAG", "include", "TAG", "int", "main", "for", "std", "string", "line", "std", "getline", "std", "cin", "line", "std", "cout", "TAG", "Also", "will", "be", "nice", "to", "have", "some", "indication", "when", "the", "program", "be", "waiting", "for", "an", "input", "NUMBER", "Not", "sure", "it", "be", "possible", "though", "Will", "require", "tracing", "a", "specific", "syscall", "with", "ptrace", "it", "s", "possible", "but", "it", "would", "only", "be", "printed", "to", "the", "console", "NUMBER", "Seems", "like", "the", "feature", "works", "sometimes", "but", "not", "stable", "NUMBER", "This", "be", "probably", "not", "relate", "to", "the", "feature", "itself", "but", "for", "the", "Debug", "in", "general", "NUMBER", "I", "couldn", "t", "enter", "more", "than", "one", "input", "while", "it", "should", "be", "infinite", "NUMBER", "I", "ll", "look", "into", "it", "NUMBER", "Another", "problem", "which", "be", "probably", "not", "relate", "as", "well", "be", "that", "there", "be", "no", "way", "to", "prived", "command", "line", "args", "for", "the", "program", "originally", "I", "wanted", "to", "test", "with", "cat", "It", "s", "a", "planned", "feature", "for", "a", "local", "debug", "dialog", "didn", "t", "get", "to", "it", "yet", "NUMBER", "Sorry", "for", "get", "to", "the", "issue", "only", "now", "thank", "you", "for", "your", "nice", "words", "Appreciate", "it", "CC", "thestr", "NUMBER", "ng", "NUMBER", "r", "After", "open", "Cutter", "redo", "history", "be", "not", "empty", "weird", "iirc", "when", "r", "NUMBER", "performs", "analysis", "it", "change", "the", "seek", "It", "would", "be", "nice", "to", "clear", "the", "history", "after", "the", "filer", "be", "opened", "and", "the", "analysis", "be", "do", "NUMBER", "The", "radare", "NUMBER", "command", "to", "do", "so", "be", "s", "Overall", "looks", "good", "and", "works", "great", "What", "about", "showing", "a", "tool", "tip", "with", "the", "keyboard", "shortcut", "per", "each", "button", "Only", "one", "thing", "disabled", "entry", "be", "almost", "invisible", "on", "Dark", "theme", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cf", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "png", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "In", "NUMBER", "ae", "NUMBER", "b", "I", "add", "WinDbg", "to", "the", "remote", "debug", "dialog", "box", "thinking", "that", "it", "will", "support", "all", "windbg", "debug", "modes", "over", "pipes", "with", "some", "fix", "NUMBER", "After", "closer", "inspection", "it", "turned", "out", "that", "R", "NUMBER", "s", "WinDbg", "implementation", "only", "support", "kernel", "debugging", "and", "add", "regular", "remote", "windbg", "won", "t", "be", "trivial", "NUMBER", "I", "ll", "try", "work", "on", "it", "but", "it", "s", "in", "a", "lower", "priority", "NUMBER", "Since", "open", "this", "type", "of", "remote", "debugging", "will", "just", "open", "a", "completely", "different", "binary", "windows", "kernel", "I", "was", "wondering", "whether", "there", "s", "a", "workflow", "in", "which", "people", "debug", "window", "kernel", "binaries", "after", "loading", "them", "through", "ida", "r", "NUMBER", "Otherwise", "I", "would", "just", "move", "this", "debug", "interface", "to", "Cutter", "s", "launch", "dialog", "for", "people", "to", "directly", "open", "windbg", "for", "kernel", "debugging", "NUMBER", "I", "wasn", "t", "aware", "of", "this", "at", "the", "time", "of", "write", "but", "it", "turns", "out", "that", "the", "WinDbg", "implementation", "support", "listing", "all", "of", "the", "processes", "currently", "run", "in", "the", "debugged", "kernel", "with", "dp", "and", "then", "attaching", "to", "one", "of", "them", "with", "dp", "NUMBER", "We", "could", "use", "the", "launch", "dialog", "for", "direct", "kernel", "debugging", "while", "remote", "connect", "will", "search", "dpj", "for", "our", "exe", "s", "name", "fail", "if", "s", "miss", "and", "attach", "to", "the", "specific", "exe", "with", "dp", "NUMBER", "A", "more", "advance", "user", "could", "obviously", "jump", "between", "processes", "but", "this", "sort", "of", "dictates", "a", "more", "sane", "workflow", "that", "we", "could", "also", "add", "rebasing", "to", "NUMBER", "Also", "will", "need", "some", "change", "improvement", "after", "network", "KD", "support", "be", "merge", "LINK", "Caused", "by", "LINK", "Thank", "you", "and", "sorry", "for", "taking", "the", "time", "to", "merge", "it", "NUMBER", "This", "be", "a", "fantastic", "addition", "Hey", "sorry", "for", "the", "delay", "Will", "check", "it", "as", "soon", "as", "possible", "NUMBER", "Meantime", "I", "find", "the", "naming", "quite", "confusing", "NUMBER", "Without", "looking", "too", "deep", "on", "the", "implementation", "I", "think", "that", "the", "BB", "in", "the", "Instruction", "Hilighter", "be", "redundant", "since", "it", "be", "not", "necessarily", "part", "of", "a", "basic", "block", "NUMBER", "i", "would", "separate", "BasicBlock", "highlighter", "from", "Instruction", "Highlighter", "even", "if", "they", "will", "be", "based", "on", "a", "mutual", "class", "with", "a", "more", "generic", "name", "NUMBER", "What", "do", "you", "think", "Also", "I", "d", "like", "optizone", "karliss", "to", "look", "at", "it", "as", "well", "yeah", "sounds", "good", "On", "Sun", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Leopold", "Kozio\u0142", "TAG", "write", "I", "m", "not", "sure", "about", "part", "with", "mutual", "class", "but", "separation", "of", "BasicBlockHighlighter", "and", "InstructionHighligter", "sounds", "good", "to", "me", "NUMBER", "It", "could", "hold", "additional", "information", "about", "size", "of", "instruction", "this", "could", "be", "handy", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "Thank", "you", "for", "your", "ideas", "In", "the", "future", "please", "separate", "the", "suggestion", "to", "different", "issue", "NUMBER", "This", "way", "we", "will", "be", "able", "to", "give", "better", "feedback", "NUMBER", "Please", "add", "Go", "to", "the", "end", "of", "file", "In", "Disassembly", "window", "I", "be", "not", "sure", "it", "be", "usable", "enough", "to", "include", "it", "as", "a", "feature", "in", "Cutter", "NUMBER", "Currently", "you", "can", "use", "simply", "seek", "to", "s", "or", "to", "entry", "NUMBER", "s", "use", "the", "visual", "navigation", "text", "box", "at", "the", "top", "NUMBER", "Also", "would", "be", "great", "if", "you", "implement", "this", "idea", "to", "Set", "to", "Data", "itself", "NUMBER", "In", "my", "opinion", "this", "be", "too", "risky", "since", "we", "don", "t", "have", "undo", "NUMBER", "Pressing", "Enter", "will", "make", "all", "the", "following", "bytes", "as", "data", "and", "we", "don", "t", "want", "to", "take", "this", "risk", "NUMBER", "I", "highly", "appreciate", "the", "issue", "you", "open", "and", "the", "time", "you", "invested", "in", "giving", "these", "suggestions", "NUMBER", "At", "this", "time", "I", "would", "prefer", "to", "close", "this", "issue", "since", "these", "suggestions", "won", "t", "be", "implement", "NUMBER", "You", "can", "always", "implement", "them", "as", "plugins", "LINK", "NUMBER", "Thank", "you", "again", "and", "please", "don", "t", "hesitate", "to", "open", "new", "issue", "with", "more", "ideas", "Your", "issue", "be", "lacking", "of", "crucial", "information", "NUMBER", "Please", "fill", "all", "the", "required", "information", "from", "the", "template", "NUMBER", "Specifically", "what", "binary", "did", "you", "use", "what", "steps", "did", "you", "take", "where", "did", "you", "begin", "the", "emulation", "etc", "Also", "please", "notice", "that", "the", "feature", "you", "test", "isn", "t", "Debugging", "but", "Emulation", "On", "Tue", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Meng", "YC", "TAG", "write", "image", "\u622a\u5c4f", "NUMBER", "NUMBER", "NUMBER", "\u4e0a\u5348", "NUMBER", "NUMBER", "NUMBER", "TAG", "In", "this", "picture", "the", "return", "of", "NUMBER", "x", "NUMBER", "f", "should", "be", "returned", "to", "main", "but", "returned", "to", "NUMBER", "x", "NUMBER", "image", "\u622a\u5c4f", "NUMBER", "NUMBER", "NUMBER", "\u4e0a\u5348", "NUMBER", "NUMBER", "NUMBER", "TAG", "How", "can", "I", "fix", "this", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "Sadly", "without", "the", "relevant", "information", "we", "can", "t", "respond", "and", "support", "this", "issue", "NUMBER", "Moreover", "as", "it", "seems", "even", "if", "there", "be", "an", "issue", "it", "be", "relate", "to", "our", "parent", "project", "radare", "NUMBER", "We", "appreciate", "the", "time", "you", "invested", "in", "open", "a", "new", "issue", "report", "this", "NUMBER", "At", "this", "time", "I", "will", "close", "this", "issue", "NUMBER", "Please", "don", "t", "hesitate", "to", "re", "open", "it", "with", "more", "information", "and", "open", "new", "ones", "following", "our", "template", "for", "issue", "NUMBER", "Thanks", "Detailed", "description", "This", "PR", "add", "support", "for", "gdbserver", "and", "windbg", "remote", "debugging", "NUMBER", "According", "to", "NUMBER", "LINK", "and", "the", "wiki", "the", "windbg", "implementation", "only", "support", "connecting", "to", "a", "path", "pipe", "so", "only", "WinDbg", "Pipe", "be", "available", "in", "the", "remote", "connect", "dialog", "for", "now", "NUMBER", "Test", "plan", "required", "For", "both", "try", "invalid", "parameters", "they", "should", "notify", "the", "user", "that", "cutter", "fail", "to", "connect", "or", "raise", "an", "error", "point", "to", "an", "issue", "in", "one", "of", "the", "parameters", "NUMBER", "Gdbserver", "Open", "gdbserver", "NUMBER", "path", "to", "program", "and", "connect", "through", "the", "remote", "debugging", "button", "NUMBER", "Note", "There", "s", "be", "an", "issue", "with", "suspending", "background", "tasks", "looking", "into", "it", "NUMBER", "LINK", "in", "gdbserver", "so", "just", "step", "continue", "with", "breakpoints", "or", "switch", "threads", "to", "see", "that", "it", "works", "for", "now", "NUMBER", "WinDbg", "Run", "NUMBER", "server", "npipe", "pipe", "PipeName", "IcfEnable", "in", "WinDbg", "to", "start", "a", "server", "this", "cause", "some", "weird", "behavior", "in", "r", "NUMBER", "looking", "into", "it", "NUMBER", "LINK", "haven", "t", "set", "up", "a", "VM", "yet", "would", "appreciate", "it", "if", "someone", "else", "who", "already", "has", "a", "debugging", "setup", "would", "try", "it", "with", "r", "NUMBER", "cutter", "and", "report", "issue", "NUMBER", "Entering", "correct", "address", "with", "a", "port", "that", "doesn", "t", "have", "gdbserver", "cause", "a", "connection", "error", "as", "I", "expected", "NUMBER", "Entering", "something", "that", "isn", "t", "a", "valid", "ip", "address", "like", "NUMBER", "with", "port", "NUMBER", "causes", "cutter", "to", "hang", "NUMBER", "If", "not", "a", "validation", "error", "I", "would", "expect", "at", "least", "a", "connection", "error", "NUMBER", "System", "Rebuilt", "everything", "and", "test", "again", "on", "linux", "NUMBER", "NUMBER", "for", "some", "reason", "NUMBER", "be", "a", "valid", "ip", "according", "to", "Qt", "some", "valid", "form", "of", "IPv", "NUMBER", "representation", "shows", "the", "fail", "to", "connect", "message", "aaaa", "NUMBER", "shows", "invalid", "ip", "NUMBER", "NUMBER", "shows", "invalid", "port", "etc", "NUMBER", "No", "hangs", "which", "shouldn", "t", "really", "happen", "since", "the", "connection", "would", "fail", "NUMBER", "Not", "a", "priority", "NUMBER", "After", "fail", "to", "make", "a", "connection", "and", "doing", "a", "refresh", "disassembly", "shows", "invalid", "NUMBER", "Managed", "to", "replicate", "will", "look", "into", "it", "NUMBER", "Are", "you", "sure", "that", "you", "have", "update", "your", "git", "subrepos", "and", "rebuilt", "r", "NUMBER", "I", "ll", "test", "windows", "again", "now", "to", "see", "if", "this", "be", "an", "OS", "specific", "issue", "NUMBER", "Edit", "Tested", "on", "windows", "It", "do", "hang", "for", "a", "moment", "on", "windows", "since", "r", "NUMBER", "s", "windows", "implementation", "takes", "more", "time", "attempting", "to", "connect", "NUMBER", "The", "connection", "fail", "window", "appears", "after", "that", "short", "period", "of", "time", "though", "NUMBER", "I", "could", "add", "some", "type", "of", "progress", "wheel", "window", "to", "indicate", "that", "we", "be", "waiting", "for", "a", "connection", "attempt", "NUMBER", "Tried", "a", "lot", "of", "scenarios", "now", "and", "it", "seems", "that", "connecting", "to", "an", "already", "exist", "port", "NUMBER", "for", "example", "of", "a", "different", "program", "or", "an", "already", "connected", "gdbserver", "will", "make", "cutter", "hang", "NUMBER", "I", "ll", "look", "into", "it", "on", "r", "NUMBER", "s", "side", "NUMBER", "Didn", "t", "get", "any", "issue", "with", "actually", "invalid", "input", "though", "NUMBER", "Ubuntu", "NUMBER", "Qt", "NUMBER", "here", "but", "it", "shouldn", "t", "really", "be", "different", "probably", "miss", "something", "when", "attempting", "to", "replicate", "NUMBER", "NUMBER", "be", "a", "conversion", "from", "decimal", "NUMBER", "to", "dotted", "quad", "format", "so", "that", "sheds", "some", "light", "on", "it", "NUMBER", "Ping", "in", "ubuntu", "doesn", "t", "do", "that", "it", "s", "probably", "cause", "by", "different", "networking", "settings", "in", "the", "distros", "NUMBER", "No", "issue", "with", "that", "IP", "on", "my", "side", "though", "immediately", "disconnects", "NUMBER", "I", "guess", "this", "be", "a", "part", "of", "fix", "gdbr_connect", "not", "timing", "out", "earlier", "for", "unresponsive", "sockets", "that", "I", "already", "plan", "to", "do", "for", "exist", "sockets", "NUMBER", "GustavoLCR", "What", "do", "you", "think", "of", "the", "change", "GustavoLCR", "did", "you", "have", "a", "chance", "to", "test", "with", "windbg", "Need", "to", "know", "whether", "I", "should", "set", "it", "up", "on", "my", "own", "machine", "Thanks", "for", "test", "They", "be", "highly", "likely", "r", "NUMBER", "issue", "I", "ll", "try", "to", "look", "into", "this", "week", "NUMBER", "cutter", "will", "freeze", "if", "i", "try", "to", "do", "anything", "while", "it", "s", "continuing", "windbg", "s", "continue", "isn", "t", "wrapped", "with", "cons", "sleep", "probably", "karliss", "can", "you", "please", "test", "those", "resolvable", "address", "again", "Should", "be", "breakable", "now", "with", "the", "new", "debug", "task", "dialog", "NUMBER", "There", "isn", "t", "really", "a", "way", "to", "automatically", "detect", "that", "the", "socket", "isn", "t", "valid", "since", "gdbr_connect", "has", "to", "wait", "for", "the", "handshake", "NUMBER", "I", "test", "with", "nc", "l", "p", "NUMBER", "NUMBER", "I", "notice", "that", "after", "a", "lot", "of", "retries", "gdbr_connect", "can", "freeze", "on", "r_socket_connect_tcp", "but", "at", "least", "there", "s", "an", "indication", "that", "you", "re", "waiting", "for", "it", "to", "break", "NUMBER", "I", "ll", "look", "into", "fix", "it", "on", "r", "NUMBER", "s", "side", "but", "it", "shouldn", "t", "block", "merge", "this", "branch", "NUMBER", "Also", "gdbserver", "breaking", "for", "step", "continue", "works", "now", "for", "test", "purposes", "NUMBER", "There", "be", "a", "second", "thread", "for", "r", "NUMBER", "task", "doing", "connect", "NUMBER", "Which", "be", "stuck", "on", "r_socket_connect_tcp", "or", "somewhere", "in", "gdbr_connect", "read_packet", "Try", "with", "nc", "l", "p", "NUMBER", "instead", "of", "that", "odd", "address", "NUMBER", "I", "be", "not", "sure", "why", "those", "address", "be", "resolvable", "on", "your", "system", "but", "I", "be", "guessing", "that", "r", "NUMBER", "can", "t", "accomplish", "a", "tcp", "handshake", "with", "them", "since", "there", "s", "nothing", "on", "the", "other", "side", "NUMBER", "Hopefully", "this", "r", "NUMBER", "update", "will", "fix", "it", "tcp", "timeouts", "didn", "t", "actually", "work", "so", "now", "it", "should", "take", "NUMBER", "second", "for", "it", "to", "break", "instead", "of", "an", "unspecified", "time", "NUMBER", "I", "don", "t", "really", "have", "a", "way", "to", "replicate", "the", "behavior", "you", "be", "get", "so", "I", "would", "appreciate", "it", "if", "you", "could", "take", "another", "look", "NUMBER", "If", "this", "doesn", "t", "work", "I", "can", "use", "Qt", "s", "sockets", "to", "verify", "the", "connection", "before", "connecting", "with", "r", "NUMBER", "Thanks", "merge", "I", "think", "this", "be", "already", "implement", "LINK", "cmake", "build", "options", "Need", "to", "get", "it", "in", "work", "state", "before", "anything", "can", "be", "merge", "NUMBER", "Previous", "attempt", "wasn", "t", "very", "successful", "NUMBER", "Anyone", "be", "welcome", "to", "try", "NUMBER", "At", "point", "it", "s", "probably", "best", "update", "to", "latest", "version", "available", "as", "with", "recent", "Qt", "change", "there", "aren", "t", "any", "LTS", "version", "anymore", "NUMBER", "NUMBER", "has", "some", "HighDPI", "improvments", "NUMBER", "Appimage", "and", "windows", "build", "work", "NUMBER", "I", "will", "need", "help", "with", "macOS", "build", "NUMBER", "It", "be", "available", "here", "LINK", "test", "qt", "NUMBER", "Ok", "this", "needs", "to", "be", "merge", "in", "proper", "order", "starting", "with", "cutter", "deps", "qt", "NUMBER", "macOS", "failure", "was", "homebrew", "deciding", "to", "take", "NUMBER", "minutes", "lets", "see", "how", "it", "goes", "for", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "ce", "NUMBER", "cc", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "Documentation", "failure", "might", "be", "relate", "to", "python", "rebuild", "although", "it", "wasn", "t", "a", "problem", "in", "earlier", "build", "NUMBER", "Hi", "daleaguil", "Thank", "you", "very", "much", "I", "understand", "the", "reason", "for", "your", "Pull", "Request", "add", "a", "dot", "at", "the", "end", "of", "this", "sentence", "looked", "natural", "to", "me", "as", "it", "be", "for", "you", "now", "NUMBER", "But", "think", "about", "it", "for", "a", "moment", "do", "you", "really", "think", "this", "dot", "should", "be", "there", "That", "s", "a", "very", "complicated", "question", "I", "know", "NUMBER", "So", "many", "reasons", "for", "and", "against", "add", "this", "dot", "NUMBER", "We", "struggled", "with", "this", "dilemma", "a", "few", "months", "ago", "as", "well", "NUMBER", "Our", "dev", "team", "discussed", "this", "problem", "on", "our", "Annual", "Punctuation", "Hackathon", "in", "the", "last", "August", "and", "eventually", "decided", "not", "to", "add", "dots", "anywhere", "on", "our", "code", "NUMBER", "I", "bet", "you", "can", "understand", "why", "Please", "don", "t", "hesitate", "to", "send", "more", "useful", "Pull", "Requests", "and", "we", "will", "be", "happy", "to", "review", "them", "for", "you", "NUMBER", "At", "this", "time", "and", "due", "to", "our", "discussion", "about", "Punctuation", "rules", "on", "Cutter", "I", "will", "close", "this", "Pull", "Request", "NUMBER", "_p", "NUMBER", "s", "I", "wish", "you", "luck", "in", "Hacktoberfest", "and", "would", "be", "happy", "to", "donate", "T", "Shirts", "if", "needed", "NUMBER", "_", "I", "be", "not", "sure", "that", "our", "disassembled", "output", "can", "be", "compiled", "due", "to", "the", "information", "the", "compiler", "and", "other", "components", "modify", "add", "or", "remove", "NUMBER", "For", "the", "meantime", "I", "suggest", "you", "dump", "the", "program", "use", "radare", "NUMBER", "commands", "such", "as", "pd", "TAG", "TAG", "be", "this", "still", "a", "draft", "or", "we", "can", "start", "checking", "When", "pasting", "the", "copied", "information", "there", "be", "no", "NewLines", "and", "no", "format", "NUMBER", "These", "should", "be", "copied", "as", "well", "I", "made", "some", "change", "to", "the", "view", "can", "you", "check", "now", "oliv", "NUMBER", "r", "Will", "check", "this", "PR", "later", "today", "on", "windows", "and", "Linux", "NUMBER", "Will", "merge", "if", "the", "status", "be", "OK", "NUMBER", "unless", "someone", "think", "otherwise", "Worked", "very", "nice", "Of", "course", "it", "s", "only", "the", "start", "in", "terms", "of", "UI", "colors", "etc", "NUMBER", "But", "in", "general", "I", "liked", "it", "very", "much", "NUMBER", "Also", "no", "need", "to", "separate", "the", "Continue", "button", "from", "the", "Suspend", "NUMBER", "Because", "these", "two", "can", "t", "be", "accessible", "at", "the", "same", "time", "so", "they", "better", "be", "on", "the", "same", "spot", "and", "toggled", "NUMBER", "show", "suspend", "when", "program", "be", "runnning", "show", "Continue", "when", "program", "be", "suspended", "I", "be", "also", "experience", "weird", "behavior", "when", "use", "Unicode", "combining", "characters", "LINK", "_character", "such", "as", "in", "this", "C", "l", "a", "u", "d", "i", "o", "Might", "be", "a", "bug", "in", "Qt", "font", "rendering", "itself", "NUMBER", "On", "Fri", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "zckun", "TAG", "write", "Couldn", "t", "repeat", "it", "on", "my", "computer", "NUMBER", "The", "bug", "might", "depend", "on", "font", "platform", "macOS", "Qt", "version", "NUMBER", "ZCKun", "TAG", "Did", "you", "use", "the", "official", "release", "What", "font", "did", "you", "use", "Please", "test", "what", "happens", "with", "other", "fonts", "and", "tell", "us", "if", "the", "result", "be", "the", "same", "NUMBER", "image", "symbols_fail", "TAG", "I", "change", "the", "font", "and", "it", "looks", "pretty", "good", "NUMBER", "image", "image", "TAG", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "TODO", "for", "next", "time", "open", "issue", "after", "the", "merge", "Visible", "input", "validator", "to", "notify", "on", "bad", "input", "such", "as", "garbage", "offset", "xgdfksak", "NUMBER", "_SA", "Proper", "encoding", "handle", "More", "write", "operations", "Refactor", "the", "whole", "thing", "NUMBER", "A", "lot", "of", "code", "duplication", "can", "be", "simplified", "Change", "cmdRaw", "and", "make", "it", "as", "good", "as", "cmdRawAt", "NUMBER", "Then", "use", "cmdRaw", "in", "cmdRawAt", "ITAYC", "NUMBER", "HEN", "Did", "you", "test", "that", "all", "string", "commands", "still", "work", "Depending", "on", "how", "r", "NUMBER", "command", "parser", "works", "there", "might", "be", "some", "problem", "NUMBER", "Fixed", "all", "the", "issue", "sorry", "I", "blindly", "moved", "them", "to", "use", "the", "cmd", "addr", "format", "which", "isn", "t", "support", "by", "CmdRaw", "NUMBER", "Reverted", "to", "regulare", "cmd", "NUMBER", "now", "but", "we", "still", "have", "the", "problem", "of", "command", "injection", "Add", "documentation", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "png", "sure", "don", "t", "hesitate", "to", "add", "Cutter", "and", "send", "a", "pull", "request", "to", "the", "repository", "in", "addition", "you", "can", "also", "put", "radare", "NUMBER", "there", "worst", "care", "scenario", "the", "PR", "will", "be", "rejected", "NUMBER", "otherwise", "we", "will", "get", "another", "reference", "to", "our", "project", "thank", "you", "Environment", "information", "Operating", "System", "Arch", "Linux", "Cutter", "version", "Recent", "Debug", "branch", "File", "format", "Any", "Describe", "the", "bug", "While", "in", "debug", "mode", "and", "clicking", "the", "Continue", "Run", "button", "NUMBER", "The", "debugee", "be", "be", "executed", "and", "runnning", "NUMBER", "But", "the", "interface", "of", "Cutter", "itself", "froze", "and", "be", "not", "responsive", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "the", "Cutter", "binary", "in", "Cutter", "NUMBER", "Analyze", "quickly", "NUMBER", "you", "can", "stop", "the", "analysis", "in", "the", "middle", "NUMBER", "Start", "Debugging", "NUMBER", "Press", "the", "Continue", "button", "NUMBER", "See", "that", "the", "new", "Cutter", "the", "debuggee", "be", "run", "but", "the", "interface", "of", "the", "original", "Cutter", "the", "debugger", "be", "not", "responsive", "NUMBER", "NUMBER", "Close", "the", "debuggee", "and", "see", "that", "the", "debugger", "be", "now", "back", "to", "be", "responsive", "Expected", "behavior", "The", "interface", "should", "keep", "be", "responsive", "Screenshots", "CC", "yossizap", "xarkes", "can", "I", "feel", "free", "to", "push", "to", "this", "PR", "if", "I", "have", "time", "Thanks", "for", "the", "PR", "I", "will", "look", "at", "it", "tomorrow", "NUMBER", "meantime", "can", "you", "please", "re", "write", "the", "test", "case", "with", "a", "specific", "example", "It", "would", "be", "great", "if", "you", "will", "even", "attach", "a", "binary", "and", "write", "some", "short", "steps", "so", "we", "can", "test", "it", "better", "NUMBER", "Thanks", "After", "manually", "request", "refresh", "threads", "appeared", "In", "my", "case", "the", "threads", "were", "shown", "immediately", "NUMBER", "Tested", "again", "NUMBER", "Looks", "very", "good", "to", "me", "NUMBER", "I", "d", "be", "happy", "to", "see", "the", "column", "sorting", "additions", "and", "the", "filters", "NUMBER", "Other", "than", "that", "it", "be", "good", "to", "go", "what", "do", "you", "mean", "by", "open", "outside", "debug", "mode", "also", "this", "be", "a", "pull", "request", "to", "merge", "to", "Debug", "branch", "so", "anyway", "this", "be", "not", "a", "user", "facing", "branch", "NUMBER", "Thus", "I", "believe", "that", "this", "state", "be", "a", "good", "progress", "anyway", "so", "as", "long", "as", "all", "the", "issue", "be", "documented", "and", "on", "the", "Debug", "roadmap", "don", "t", "see", "a", "reason", "to", "wait", "more", "I", "m", "wondering", "if", "generally", "this", "change", "shouldn", "t", "be", "do", "in", "the", "cmdRaw", "API", "directly", "Maybe", "even", "on", "radare", "NUMBER", "side", "NUMBER", "no", "xweskingx", "what", "do", "you", "think", "xweskingx", "what", "be", "your", "suggestion", "Best", "page", "visually", "to", "describe", "how", "to", "build", "Cutter", "be", "this", "LINK", "This", "page", "be", "linked", "from", "cutter", "NUMBER", "re", "and", "from", "our", "README", "page", "NUMBER", "So", "people", "be", "more", "likely", "to", "visit", "it", "NUMBER", "With", "all", "due", "repsect", "our", "docs", "pages", "looks", "awful", "NUMBER", "Design", "wise", "and", "in", "terms", "of", "navigation", "and", "user", "friendly", "NUMBER", "The", "build", "page", "be", "much", "prettier", "and", "with", "decent", "regular", "markdown", "NUMBER", "Make", "sure", "to", "update", "it", "accordingly", "NUMBER", "I", "would", "expect", "LINK", "to", "be", "automatically", "generate", "from", "the", "NUMBER", "rst", "file", "isn", "t", "it", "the", "case", "It", "isn", "t", "NUMBER", "Moreover", "I", "voted", "in", "the", "past", "to", "remove", "this", "rst", "page", "that", "was", "quick", "thanks", "can", "you", "share", "a", "screenshot", "of", "the", "new", "placement", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "The", "Show", "bytes", "setting", "be", "one", "of", "the", "most", "useful", "and", "popular", "settings", "we", "have", "but", "currently", "it", "be", "not", "as", "visible", "because", "it", "be", "in", "the", "bottom", "of", "the", "Metadata", "tab", "on", "Preferences", "dialog", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bf", "NUMBER", "eddd", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "png", "Describe", "the", "solution", "you", "d", "like", "NUMBER", "Put", "it", "in", "a", "more", "visible", "place", "as", "the", "top", "of", "the", "list", "or", "in", "Style", "tab", "which", "be", "more", "suitable", "there", "NUMBER", "Change", "the", "label", "from", "Shwo", "bytes", "to", "Display", "the", "bytes", "of", "each", "instruction", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Not", "all", "of", "our", "users", "be", "familiar", "with", "NUMBER", "cutterrc", "and", "even", "not", "with", "NUMBER", "radare", "NUMBER", "rc", "NUMBER", "There", "be", "no", "comfortable", "way", "to", "edit", "it", "from", "inside", "Cutter", "NUMBER", "The", "use", "of", "NUMBER", "cutterrc", "can", "complete", "the", "settings", "we", "don", "t", "expose", "in", "the", "UI", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "I", "suggest", "exposing", "a", "simple", "text", "editor", "widget", "to", "edit", "the", "NUMBER", "cutterrc", "file", "NUMBER", "When", "opened", "the", "widget", "will", "fetch", "the", "content", "of", "NUMBER", "cutterrc", "and", "display", "it", "in", "the", "text", "editor", "NUMBER", "Then", "can", "be", "update", "and", "saved", "to", "the", "file", "NUMBER", "It", "would", "be", "nice", "to", "have", "NUMBER", "Syntax", "highlight", "in", "case", "it", "looks", "good", "with", "r", "NUMBER", "commands", "NUMBER", "Some", "examples", "of", "useful", "settings", "that", "the", "user", "can", "set", "For", "syntax", "highlight", "look", "for", "example", "in", "hexdump", "widget", "right", "side", "panel", "NUMBER", "It", "would", "be", "nice", "to", "have", "some", "kind", "of", "path", "indicator", "or", "button", "to", "help", "open", "it", "externally", "Not", "strictly", "necessary", "but", "some", "kind", "of", "autocomplete", "for", "e", "variables", "would", "be", "very", "cool", "NUMBER", "There", "be", "a", "r", "NUMBER", "command", "for", "listing", "all", "of", "their", "names", "and", "descriptions", "NUMBER", "Indeed", "I", "have", "several", "points", "to", "keep", "in", "mind", "NUMBER", "It", "be", "not", "as", "simple", "as", "it", "looks", "you", "can", "implement", "this", "in", "parts", "NUMBER", "Please", "make", "sure", "to", "create", "the", "following", "widgets", "flexible", "so", "they", "can", "be", "use", "in", "other", "places", "in", "Cutter", "as", "well", "NUMBER", "Make", "sure", "to", "create", "all", "the", "helper", "function", "you", "need", "globally", "as", "well", "as", "proper", "use", "of", "class", "subcllassing", "and", "inheritence", "NUMBER", "Order", "of", "search", "Don", "t", "only", "check", "for", "NUMBER", "cutterrc", "in", "the", "home", "folder", "NUMBER", "In", "addition", "check", "inside", "all", "the", "standard", "locations", "for", "the", "file", "NUMBER", "See", "how", "it", "be", "implement", "in", "plugins", "load", "LINK", "L", "NUMBER", "L", "NUMBER", "e", "NUMBER", "g", "it", "will", "search", "in", "home", "username", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "usr", "local", "share", "RadareOrg", "Cutter", "plugins", "usr", "share", "RadareOrg", "Cutter", "plugins", "NUMBER", "This", "will", "help", "it", "support", "multiple", "locations", "and", "OS", "NUMBER", "Multiple", "initialization", "file", "can", "be", "loaded", "NUMBER", "Test", "on", "Linux", "Windows", "and", "macOS", "Make", "sure", "to", "test", "this", "feature", "on", "multiple", "OS", "ask", "us", "for", "help", "if", "you", "don", "t", "have", "all", "of", "them", "we", "can", "help", "with", "executing", "on", "our", "dev", "machines", "NUMBER", "Useful", "Commands", "Make", "a", "list", "of", "useful", "eval", "commands", "to", "use", "NUMBER", "You", "can", "discuss", "it", "in", "with", "the", "devs", "and", "with", "a", "community", "NUMBER", "You", "can", "have", "them", "all", "commented", "or", "as", "place", "holders", "NUMBER", "Syntax", "Highlighting", "I", "be", "not", "sure", "how", "good", "radare", "NUMBER", "handles", "syntax", "highlight", "this", "be", "not", "a", "must", "since", "radare", "NUMBER", "shell", "scripts", "aren", "t", "complicated", "NUMBER", "But", "it", "could", "be", "nice", "we", "need", "to", "test", "how", "it", "looks", "like", "NUMBER", "Documentation", "Make", "sure", "to", "add", "it", "to", "the", "user", "documentation", "NUMBER", "Document", "the", "existence", "of", "NUMBER", "cutterrc", "and", "the", "usage", "of", "the", "dialog", "NUMBER", "See", "relate", "issue", "NUMBER", "Editor", "UI", "I", "suggest", "to", "add", "it", "to", "the", "Preferences", "widget", "NUMBER", "I", "imagine", "the", "UI", "for", "this", "feature", "as", "similar", "to", "IDE", "s", "preferences", "editor", "NUMBER", "Here", "be", "a", "sketch", "I", "made", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ac", "NUMBER", "NUMBER", "adf", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "NUMBER", "c", "NUMBER", "f", "NUMBER", "png", "As", "you", "can", "see", "in", "this", "sketch", "I", "made", "two", "items", "were", "add", "to", "the", "left", "pane", "NUMBER", "The", "first", "be", "a", "visual", "configuration", "editor", "NUMBER", "The", "second", "be", "a", "subitem", "of", "the", "text", "editor", "NUMBER", "Configuration", "Editor", "This", "will", "be", "a", "configuration", "editor", "that", "be", "dynamically", "created", "from", "radare", "NUMBER", "configuration", "options", "NUMBER", "The", "implementation", "should", "understand", "what", "type", "of", "value", "each", "configuration", "receives", "and", "what", "be", "the", "best", "component", "to", "use", "in", "it", "NUMBER", "For", "example", "boolean", "configuration", "keys", "can", "be", "with", "a", "checkbox", "V", "X", "integer", "can", "be", "spinbox", "if", "it", "has", "hardcoded", "configuration", "values", "then", "combobox", "be", "best", "to", "be", "use", "and", "so", "on", "NUMBER", "A", "search", "box", "can", "be", "use", "to", "quickly", "search", "in", "the", "config", "NUMBER", "Then", "each", "change", "to", "this", "config", "can", "be", "applied", "to", "a", "cutterrc", "initialization", "file", "NUMBER", "File", "editor", "This", "be", "a", "multi", "line", "text", "area", "that", "users", "can", "script", "their", "configuration", "and", "set", "it", "manually", "NUMBER", "Retrieving", "the", "config", "To", "retrieve", "the", "information", "to", "display", "you", "can", "simply", "use", "the", "e", "j", "command", "NUMBER", "It", "will", "have", "all", "the", "information", "you", "need", "NUMBER", "NUMBER", "x", "NUMBER", "e", "j", "Do", "you", "want", "to", "print", "NUMBER", "lines", "y", "N", "y", "name", "anal", "NUMBER", "a", "NUMBER", "f", "value", "false", "type", "bool", "desc", "Use", "the", "new", "WIP", "analysis", "algorithm", "core", "p", "a", "NUMBER", "f", "anal", "NUMBER", "depth", "ignored", "atm", "ro", "false", "name", "anal", "NUMBER", "arch", "value", "x", "NUMBER", "type", "str", "desc", "Select", "the", "architecture", "to", "use", "ro", "false", "options", "NUMBER", "NUMBER", "cs", "NUMBER", "NUMBER", "truncated", "NUMBER", "name", "anal", "NUMBER", "armthumb", "value", "false", "type", "bool", "desc", "aae", "computes", "arm", "thumb", "change", "lot", "of", "false", "positives", "ahead", "ro", "false", "name", "anal", "NUMBER", "autoname", "value", "false", "type", "bool", "desc", "Speculatively", "set", "a", "name", "for", "the", "function", "may", "result", "in", "some", "false", "positives", "ro", "false", "name", "anal", "NUMBER", "bb", "NUMBER", "maxsize", "value", "NUMBER", "K", "type", "str", "desc", "Maximum", "basic", "block", "size", "ro", "false", "name", "anal", "NUMBER", "from", "value", "NUMBER", "type", "addr", "desc", "Lower", "limit", "on", "the", "address", "range", "for", "analysis", "ro", "false", "name", "anal", "NUMBER", "gp", "value", "NUMBER", "type", "int", "desc", "Set", "the", "value", "of", "the", "GP", "register", "MIPS", "ro", "false", "NUMBER", "afair", "we", "don", "t", "load", "it", "from", "any", "other", "place", "than", "home", "folder", "NUMBER", "You", "can", "ignore", "radare", "NUMBER", "rc", "completely", "it", "has", "nothing", "practical", "to", "do", "with", "the", "feature", "NUMBER", "We", "implement", "cutterrc", "on", "our", "own", "side", "so", "you", "don", "t", "have", "to", "dig", "into", "C", "code", "NUMBER", "Cutter", "be", "already", "loading", "cutterrc", "just", "make", "sure", "it", "searches", "in", "more", "than", "one", "place", "as", "I", "showed", "in", "plugin", "manager", "The", "configuration", "editor", "part", "sounds", "like", "NUMBER", "NUMBER", "Multiple", "initialization", "file", "can", "be", "loaded", "NUMBER", "ITAYC", "NUMBER", "HEN", "Do", "you", "mean", "we", "could", "load", "all", "of", "them", "and", "deal", "with", "conflict", "while", "initiliazing", "or", "do", "you", "mean", "that", "the", "we", "should", "select", "the", "first", "cutterrc", "present", "from", "the", "standard", "locations", "while", "checking", "in", "order", "all", "off", "them", "NUMBER", "just", "tell", "the", "user", "you", "did", "it", "similar", "as", "in", "plugins", "NUMBER", "The", "configuration", "change", "in", "the", "editor", "should", "be", "write", "to", "such", "file", "NUMBER", "and", "about", "the", "vscode", "yeah", "absolutely", "NUMBER", "Check", "how", "it", "be", "implement", "in", "our", "theme", "editor", "preferences", "appearance", "copy", "theme", "edit", "theme", "NUMBER", "There", "s", "filtering", "there", "NUMBER", "But", "as", "you", "said", "let", "s", "do", "this", "one", "by", "one", "NUMBER", "Let", "s", "don", "t", "overwhelm", "this", "task", "Just", "make", "sure", "that", "every", "step", "be", "build", "in", "a", "modular", "way", "for", "next", "steps", "NUMBER", "And", "make", "the", "new", "components", "and", "widgets", "flexible", "NUMBER", "for", "example", "make", "a", "generic", "text", "highlighter", "make", "a", "common", "function", "for", "search", "order", "which", "will", "be", "use", "both", "in", "plugins", "and", "in", "cuterrc", "search", "both", "be", "use", "the", "same", "code", "so", "better", "not", "to", "duplicate", "NUMBER", "think", "of", "your", "steps", "and", "plane", "them", "so", "we", "have", "the", "search", "order", "we", "have", "the", "text", "editor", "with", "highlight", "we", "have", "the", "visual", "editor", "NUMBER", "visual", "editor", "has", "its", "own", "issue", "open", "NUMBER", "Show", "us", "a", "quick", "plan", "and", "start", "implement", "it", "one", "by", "one", "NUMBER", "We", "can", "merge", "first", "steps", "before", "the", "final", "ones", "because", "it", "works", "and", "already", "helpful", "sounds", "good", "NUMBER", "You", "can", "also", "artificially", "make", "sure", "a", "specific", "folder", "in", "the", "list", "be", "loaded", "last", "e", "NUMBER", "g", "the", "one", "in", "the", "installation", "folder", "I", "disagree", "with", "storing", "it", "in", "installation", "folder", "NUMBER", "In", "many", "cases", "this", "folder", "will", "be", "read", "only", "NUMBER", "Just", "use", "QStandardPaths", "writableLocation", "AppConfigLocation", "for", "choosing", "it", "NUMBER", "If", "an", "installation", "specific", "system", "config", "gets", "use", "it", "should", "be", "with", "lowest", "priority", "so", "that", "user", "can", "easily", "override", "those", "settings", "use", "his", "config", "NUMBER", "If", "the", "setup", "you", "describe", "gets", "use", "for", "managing", "multiple", "configs", "for", "different", "use", "cases", "use", "multiple", "installations", "seems", "like", "a", "hack", "and", "can", "already", "by", "do", "use", "Run", "script", "file", "option", "when", "open", "a", "file", "NUMBER", "Sounds", "good", "NUMBER", "Other", "than", "that", "and", "after", "it", "wil", "be", "fix", "I", "think", "it", "be", "ready", "to", "me", "merge", "QStandardPaths", "writableLocation", "AppConfigLocation", "be", "in", "my", "opinion", "better", "NUMBER", "No", "need", "to", "pollute", "home", "folder", "NUMBER", "Peek", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "ecc", "NUMBER", "gif", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Add", "labels", "to", "show", "the", "keyboard", "shortcuts", "of", "Redo", "Seek", "and", "Undo", "Seek", "in", "the", "Edit", "menu", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "edd", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "a", "NUMBER", "png", "I", "want", "this", "menu", "to", "display", "the", "shortcuts", "to", "trigger", "these", "actions", "NUMBER", "Similar", "to", "what", "you", "can", "find", "in", "any", "context", "menu", "NUMBER", "E", "NUMBER", "g", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "edda", "NUMBER", "e", "NUMBER", "NUMBER", "aac", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "png", "Currently", "the", "shortcut", "for", "Seek", "backward", "be", "TAG", "Esc", "TAG", "we", "don", "t", "have", "a", "shortcut", "for", "Seek", "next", "Seek", "forward", "and", "we", "need", "to", "decide", "on", "one", "Describe", "the", "solution", "you", "d", "like", "My", "feature", "request", "has", "three", "parts", "NUMBER", "Decide", "for", "a", "keyboard", "shortcut", "for", "Seek", "forward", "NUMBER", "Show", "the", "labels", "of", "the", "shortcuts", "in", "the", "Edit", "menu", "NUMBER", "Show", "tooltip", "with", "the", "keyboard", "shortcuts", "when", "hovering", "the", "back", "forward", "arrows", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "edda", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "NUMBER", "png", "Additional", "context", "IDA", "uses", "TAG", "Ctrl", "TAG", "TAG", "Enter", "TAG", "for", "Seek", "Froward", "I", "be", "afraid", "I", "didn", "t", "understand", "the", "issue", "NUMBER", "Can", "you", "please", "elaborate", "more", "good", "catch", "next", "time", "you", "can", "use", "skip", "ci", "in", "your", "commit", "message", "to", "avoid", "having", "to", "wait", "for", "build", "to", "finish", "Congratulations", "This", "be", "for", "you", "the", "first", "merge", "PR", "NUMBER", "Happy", "to", "see", "this", "p", "NUMBER", "s", "next", "time", "write", "close", "xxxx", "and", "not", "only", "xxxx", "NUMBER", "This", "be", "a", "very", "nice", "feature", "of", "Github", "that", "let", "us", "auto", "close", "an", "issue", "when", "we", "merge", "the", "PR", "will", "review", "tomorrow", "on", "Arch", "NUMBER", "if", "you", "have", "a", "sample", "plugin", "you", "write", "for", "test", "please", "share", "the", "code", "Okay", "test", "it", "overall", "it", "work", "good", "Especially", "simple", "printings", "from", "Python", "plugins", "I", "test", "with", "NUMBER", "here", "be", "some", "feedbacks", "Empty", "lines", "in", "between", "should", "be", "remove", "when", "not", "expected", "x", "Analyze", "all", "flags", "starting", "with", "sym", "NUMBER", "and", "entry", "NUMBER", "aa", "x", "Analyze", "function", "calls", "aac", "x", "Analyze", "len", "bytes", "of", "instructions", "for", "references", "aar", "The", "output", "be", "printed", "both", "in", "the", "Console", "widget", "and", "the", "Terminal", "itself", "NUMBER", "Is", "it", "expected", "executing", "echo", "hello", "from", "the", "console", "widget", "will", "output", "in", "the", "terminal", "Could", "make", "it", "toggleable", "with", "a", "flag", "up", "to", "you", "NUMBER", "karliss", "thestr", "NUMBER", "ng", "NUMBER", "r", "what", "do", "you", "think", "Should", "we", "show", "it", "in", "the", "console", "as", "well", "Should", "we", "add", "a", "command", "line", "flag", "to", "toggle", "it", "Will", "users", "expect", "the", "Terminal", "to", "be", "empty", "from", "noise", "or", "would", "they", "prefer", "to", "have", "this", "info", "twice", "What", "should", "be", "the", "default", "state", "so", "it", "gets", "redirected", "to", "the", "widget", "regular", "console", "In", "reality", "it", "do", "not", "show", "up", "in", "the", "Console", "widget", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "ec", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "fb", "NUMBER", "NUMBER", "f", "NUMBER", "ec", "NUMBER", "ee", "NUMBER", "png", "While", "this", "shell", "output", "do", "show", "NUMBER", "x", "NUMBER", "a", "lsfsafsa", "sh", "lsfsafsa", "command", "not", "find", "uname", "a", "will", "print", "only", "on", "Console", "widget", "and", "not", "on", "Terminal", "NUMBER", "Other", "than", "that", "look", "good", "to", "me", "spam", "Thank", "you", "for", "your", "contribution", "Please", "see", "my", "comments", "in", "the", "original", "issue", "LINK", "be", "this", "still", "a", "wip", "draft", "nullsector", "we", "currently", "trying", "to", "solve", "this", "back", "compatibility", "problem", "meantime", "can", "you", "try", "to", "update", "your", "environment", "and", "try", "with", "newer", "version", "of", "the", "tool", "Seems", "like", "something", "happened", "in", "your", "last", "commit", "and", "introduce", "many", "change", "that", "weren", "t", "change", "by", "you", "NUMBER", "Right", "haha", "yeah", "it", "was", "suspecious", "NUMBER", "can", "you", "clean", "it", "please", "and", "force", "push", "to", "your", "branch", "ping", "nullsector", "nullsector", "this", "be", "still", "looks", "wrong", "If", "I", "understood", "you", "correctly", "it", "seems", "like", "you", "be", "confusing", "token", "highlight", "and", "text", "selection", "NUMBER", "A", "single", "click", "on", "a", "token", "such", "as", "an", "operator", "address", "or", "variable", "will", "highlight", "the", "selected", "token", "as", "well", "as", "any", "other", "occurrence", "of", "the", "same", "token", "in", "the", "disassembly", "NUMBER", "This", "DOES", "NOT", "selects", "the", "text", "NUMBER", "Thus", "CTRL", "C", "would", "not", "copy", "this", "token", "for", "you", "NUMBER", "If", "you", "want", "to", "copy", "a", "text", "in", "the", "disassembly", "select", "it", "and", "press", "CTRL", "C", "NUMBER", "If", "you", "want", "to", "copy", "the", "address", "select", "it", "and", "press", "CTRL", "C", "NUMBER", "We", "believe", "it", "be", "useful", "so", "we", "also", "provide", "a", "shortcut", "to", "automatically", "copy", "the", "address", "on", "which", "your", "cursor", "be", "currently", "on", "use", "CTRL", "SHIFT", "C", "NUMBER", "You", "can", "use", "CTRL", "SHIFT", "C", "to", "copy", "the", "address", "even", "if", "the", "address", "part", "of", "the", "disassembly", "be", "not", "the", "part", "that", "be", "currently", "highlight", "as", "a", "token", "NUMBER", "In", "addition", "to", "that", "NUMBER", "One", "may", "clame", "that", "it", "would", "be", "nice", "that", "TAG", "Ctrl", "TAG", "TAG", "C", "TAG", "will", "copy", "the", "current", "line", "even", "if", "no", "text", "be", "selected", "NUMBER", "This", "be", "a", "behavior", "common", "in", "code", "editors", "NUMBER", "You", "can", "simply", "use", "the", "shortcut", "to", "copy", "the", "whole", "line", "you", "re", "in", "without", "selecting", "any", "text", "NUMBER", "I", "agree", "with", "this", "and", "I", "think", "it", "can", "be", "a", "feature", "request", "but", "the", "current", "situation", "be", "clearly", "not", "a", "bug", "NUMBER", "CC", "thestr", "NUMBER", "ng", "NUMBER", "r", "thestr", "NUMBER", "ng", "NUMBER", "r", "can", "you", "reproduce", "No", "NUMBER", "doublegrey", "can", "you", "still", "reproduce", "this", "with", "current", "master", "of", "Cutter", "r", "NUMBER", "and", "r", "NUMBER", "ghidra", "dec", "Probably", "Qt", "tree", "view", "has", "this", "feature", "somehow", "I", "suggest", "to", "read", "more", "about", "the", "available", "features", "NUMBER", "The", "idea", "be", "to", "copy", "the", "selected", "rows", "cells", "right", "ps", "NUMBER", "it", "would", "be", "great", "if", "you", "ll", "review", "these", "suggested", "change", "Detailed", "description", "This", "PR", "improves", "the", "about", "dialog", "by", "the", "following", "things", "NUMBER", "Add", "Cutter", "s", "powerline", "description", "under", "the", "header", "NUMBER", "Link", "to", "cutter", "NUMBER", "re", "NUMBER", "Don", "t", "mention", "specific", "people", "because", "we", "re", "a", "community", "NUMBER", "Link", "to", "the", "Contributors", "page", "NUMBER", "Before", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "png", "After", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ae", "NUMBER", "fcc", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "de", "NUMBER", "png", "Detailed", "description", "Often", "the", "sidebar", "in", "the", "hexdump", "widget", "be", "too", "big", "and", "takes", "most", "of", "the", "view", "of", "the", "hexdump", "widget", "in", "a", "way", "that", "it", "even", "hides", "the", "hexdump", "text", "itself", "NUMBER", "This", "Pull", "Request", "do", "two", "things", "NUMBER", "Change", "the", "size", "policy", "to", "set", "the", "default", "proportion", "of", "the", "sidebar", "to", "be", "smaller", "NUMBER", "Applies", "some", "heuristics", "to", "hide", "the", "sidebar", "on", "resize", "events", "when", "it", "will", "likely", "to", "hide", "the", "hexdump", "NUMBER", "Test", "plan", "required", "NUMBER", "Open", "hexdump", "and", "see", "that", "the", "sidebar", "be", "of", "a", "reasonable", "size", "and", "proportions", "NUMBER", "Make", "sure", "the", "sidebar", "be", "opened", "and", "start", "narrowing", "it", "by", "resizing", "until", "it", "hides", "the", "sidebar", "NUMBER", "it", "definitely", "isn", "t", "NUMBER", "will", "check", "it", "out", "later", "tomorrow", "On", "Sat", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "karliss", "TAG", "write", "Code", "looks", "fine", "NUMBER", "When", "I", "open", "new", "hexdump", "I", "get", "this", "NUMBER", "I", "wouldn", "t", "call", "it", "reasonable", "size", "and", "proportions", "NUMBER", "image", "hexdump", "screenshot", "TAG", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Sorry", "I", "wont", "have", "time", "to", "continue", "this", "for", "a", "while", "since", "traveling", "NUMBER", "so", "this", "PR", "will", "be", "idle", "for", "a", "while", "NUMBER", "unless", "someone", "wants", "to", "quickly", "push", "a", "few", "change", "so", "indeed", "seems", "like", "I", "there", "be", "no", "easy", "shortcuts", "here", "so", "I", "prefer", "to", "merge", "it", "as", "be", "for", "now", "and", "improve", "it", "as", "time", "pass", "NUMBER", "The", "current", "state", "of", "the", "PR", "be", "better", "than", "master", "so", "I", "think", "it", "be", "good", "to", "go", "NUMBER", "Don", "t", "want", "to", "have", "another", "idle", "pr", "here", "it", "looks", "good", "now", "NUMBER", "Why", "do", "you", "say", "you", "re", "not", "sure", "it", "was", "worth", "it", "after", "all", "it", "be", "confusing", "to", "have", "them", "shown", "in", "general", "I", "accept", "this", "pr", "as", "well", "just", "want", "to", "make", "sure", "I", "understand", "karliss", "and", "that", "we", "be", "walking", "the", "right", "way", "here", "Yeha", "I", "understand", "what", "you", "re", "saying", "but", "I", "don", "t", "like", "to", "see", "the", "UI", "lying", "to", "the", "user", "NUMBER", "This", "was", "the", "first", "thing", "I", "did", "when", "test", "the", "feature", "on", "register", "widget", "NUMBER", "I", "automatically", "pressed", "the", "shortcuts", "and", "saw", "it", "do", "no", "good", "NUMBER", "Eventually", "we", "will", "need", "to", "re", "design", "our", "emulation", "widgets", "in", "a", "way", "that", "they", "will", "not", "only", "look", "better", "but", "also", "be", "without", "these", "Thanks", "for", "the", "clarification", "c", "NUMBER", "rund", "can", "you", "make", "sure", "it", "still", "happens", "on", "latest", "version", "of", "Cutter", "from", "git", "and", "of", "the", "decompiler", "Also", "can", "you", "please", "try", "it", "from", "radare", "NUMBER", "master", "version", "newest", "release", "would", "be", "okay", "as", "well", "NUMBER", "We", "want", "to", "make", "sure", "this", "be", "solve", "or", "not", "and", "if", "no", "we", "would", "like", "to", "transfer", "this", "issue", "to", "the", "radare", "NUMBER", "repository", "great", "so", "I", "ll", "close", "this", "issue", "NUMBER", "thank", "you", "for", "report", "you", "helped", "a", "lot", "NUMBER", "please", "don", "t", "hesitate", "to", "open", "more", "issue", "when", "you", "encounter", "problem", "with", "Cutter", "NUMBER", "yeah", "seems", "like", "it", "be", "more", "than", "just", "update", "the", "submodule", "finally", "I", "totally", "agree", "ah", "didn", "t", "check", "but", "do", "it", "work", "with", "ctrl", "wheel", "and", "with", "pinching", "conflict", "after", "merge", "my", "PR", "Overall", "looks", "good", "NUMBER", "I", "really", "like", "the", "fact", "that", "one", "can", "use", "flags", "and", "math", "operations", "and", "r", "NUMBER", "will", "calculate", "the", "address", "NUMBER", "things", "I", "notice", "NUMBER", "Double", "click", "on", "a", "stack", "address", "will", "first", "seek", "to", "this", "address", "another", "double", "click", "will", "ener", "the", "edit", "mode", "NUMBER", "If", "Cutter", "be", "already", "seek", "to", "this", "address", "the", "first", "click", "will", "enter", "edit", "mode", "NUMBER", "Peek", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "ec", "NUMBER", "b", "NUMBER", "b", "NUMBER", "gif", "NUMBER", "Clicking", "on", "a", "cell", "and", "start", "typing", "will", "enter", "edit", "mode", "NUMBER", "This", "without", "pressing", "f", "NUMBER", "or", "double", "clicking", "NUMBER", "Peek", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dc", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "gif", "NUMBER", "problem", "be", "that", "the", "user", "should", "understand", "it", "otherwise", "they", "might", "get", "confused", "why", "some", "times", "it", "work", "but", "sometimes", "it", "triggers", "a", "seek", "NUMBER", "Also", "it", "seeks", "to", "address", "outside", "of", "the", "mapped", "binary", "so", "this", "be", "another", "problem", "NUMBER", "if", "I", "have", "a", "stack", "value", "of", "NUMBER", "x", "NUMBER", "I", "don", "t", "expect", "cutter", "to", "seek", "there", "NUMBER", "NUMBER", "only", "issue", "be", "that", "we", "don", "t", "have", "undo", "so", "it", "might", "be", "of", "a", "problem", "if", "someone", "be", "accidently", "rewriting", "a", "value", "NUMBER", "the", "f", "NUMBER", "context", "menu", "makes", "sure", "that", "at", "least", "the", "user", "explicitly", "asked", "to", "change", "th", "value", "NUMBER", "another", "thing", "be", "that", "global", "and", "local", "shortcuts", "f", "x", "will", "trigger", "the", "shortcut", "and", "will", "not", "begin", "editing", "NUMBER", "this", "be", "again", "confusing", "especially", "in", "the", "long", "term", "where", "we", "will", "add", "more", "shortcuts", "NUMBER", "I", "think", "that", "seeking", "be", "the", "most", "probable", "one", "NUMBER", "at", "least", "that", "what", "I", "d", "expect", "NUMBER", "In", "the", "near", "future", "I", "hope", "to", "change", "the", "way", "the", "stack", "regs", "widgets", "look", "like", "and", "make", "them", "looks", "less", "like", "a", "table", "NUMBER", "Then", "it", "would", "be", "more", "clear", "sounds", "good", "NUMBER", "I", "have", "one", "thing", "though", "about", "the", "seeking", "in", "hexdump", "NUMBER", "I", "prefer", "having", "it", "smart", "to", "know", "if", "this", "address", "contains", "code", "or", "data", "NUMBER", "and", "I", "think", "in", "general", "it", "be", "a", "good", "way", "to", "differ", "between", "them", "NUMBER", "code", "should", "be", "display", "in", "disassembly", "while", "data", "or", "allocated", "memory", "be", "in", "hexdump", "NUMBER", "having", "a", "generic", "smartest", "function", "to", "have", "it", "would", "be", "nice", "NUMBER", "it", "be", "really", "an", "open", "question", "what", "do", "you", "think", "see", "also", "LINK", "yeah", "might", "be", "outside", "the", "scope", "rewlly", "NUMBER", "stack", "contains", "frames", "and", "return", "address", "You", "also", "need", "to", "update", "r", "NUMBER", "submodule", "for", "it", "to", "work", "NUMBER", "Otherwise", "we", "re", "doomed", "Other", "than", "that", "looks", "very", "good", "Just", "fix", "the", "comment", "update", "the", "submoudle", "and", "it", "be", "good", "to", "go", "Thanks", "Seems", "good", "here", "xarkes", "thestr", "NUMBER", "ng", "NUMBER", "r", "karliss", "I", "d", "be", "happy", "if", "any", "of", "you", "will", "check", "as", "well", "to", "make", "sure", "we", "be", "not", "introduce", "a", "bug", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "we", "can", "define", "a", "string", "in", "a", "given", "address", "NUMBER", "Sadly", "we", "can", "t", "define", "its", "length", "and", "radare", "NUMBER", "try", "to", "understand", "it", "by", "itself", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "e", "NUMBER", "png", "Describe", "the", "solution", "you", "d", "like", "We", "currently", "use", "Cs", "TAG", "we", "can", "add", "the", "option", "to", "use", "Cs", "TAG", "TAG", "in", "addition", "to", "give", "the", "user", "more", "power", "CC", "pandasauce", "Nice", "notice", "the", "typo", "in", "Advanced", "NUMBER", "Also", "if", "possible", "a", "heuristic", "to", "guess", "the", "Size", "will", "be", "great", "Thanks", "to", "Properrr", "this", "feature", "be", "now", "implement", "A", "bit", "late", "to", "close", "it", "because", "we", "forgot", "haha", "Good", "work", "Waiting", "to", "see", "your", "next", "ones", "coolkingcole", "I", "advice", "you", "to", "compile", "Cutter", "from", "source", "NUMBER", "For", "Appimage", "to", "work", "on", "older", "systems", "like", "Ubuntu", "NUMBER", "or", "Debian", "NUMBER", "it", "needs", "to", "be", "build", "against", "older", "glibc", "version", "NUMBER", "We", "would", "like", "to", "do", "that", "but", "our", "resources", "be", "limited", "NUMBER", "Hopefully", "someone", "will", "manage", "time", "to", "do", "that", "before", "those", "version", "before", "end", "of", "maintenance", "for", "those", "version", "NUMBER", "for", "me", "it", "stuck", "more", "than", "NUMBER", "minutes", "on", "radare", "NUMBER", "r", "NUMBER", "libcrackme", "NUMBER", "so", "NUMBER", "x", "NUMBER", "e", "NUMBER", "aaa", "x", "Analyze", "all", "flags", "starting", "with", "sym", "NUMBER", "and", "entry", "NUMBER", "aa", "Analyze", "function", "calls", "aac", "NUMBER", "eed", "it", "be", "planned", "and", "actually", "have", "an", "undetailed", "open", "issue", "LINK", "The", "solution", "will", "use", "the", "new", "version", "of", "r", "NUMBER", "pm", "in", "GO", "LINK", "The", "idea", "be", "to", "create", "something", "similar", "to", "IDE", "s", "or", "Binja", "plugin", "managers", "IMG_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "jpg", "NUMBER", "be", "relate", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "when", "text", "be", "selected", "in", "the", "Decompiler", "widget", "the", "seek", "be", "change", "as", "you", "go", "with", "the", "selection", "NUMBER", "Example", "in", "the", "attached", "gif", "animation", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dbb", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "da", "NUMBER", "gif", "Describe", "the", "solution", "you", "d", "like", "Selecting", "text", "should", "not", "trigger", "seeks", "NUMBER", "Seek", "should", "be", "triggered", "only", "on", "the", "release", "of", "the", "mouse", "button", "in", "a", "single", "click", "and", "not", "as", "part", "of", "text", "selection", "NUMBER", "This", "be", "a", "good", "question", "as", "mention", "in", "the", "original", "post", "Selecting", "text", "should", "not", "trigger", "seeks", "NUMBER", "Seek", "should", "be", "triggered", "only", "on", "the", "release", "of", "the", "mouse", "button", "in", "a", "single", "click", "and", "not", "as", "part", "of", "text", "selection", "NUMBER", "It", "means", "that", "only", "a", "single", "click", "should", "trigger", "a", "seek", "in", "Cutter", "NUMBER", "While", "performing", "text", "selection", "seek", "should", "not", "be", "triggered", "NUMBER", "Not", "in", "the", "beginning", "button", "pressed", "nor", "in", "the", "end", "button", "release", "NUMBER", "The", "idea", "be", "that", "when", "the", "user", "clicks", "in", "the", "widget", "they", "be", "trying", "to", "seek", "NUMBER", "And", "when", "they", "selection", "text", "they", "want", "to", "select", "and", "not", "to", "seek", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "the", "Decompiler", "Widget", "be", "set", "to", "Read", "Only", "which", "probably", "disables", "the", "option", "to", "copy", "the", "selected", "text", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Enable", "the", "option", "to", "Copy", "the", "selected", "text", "use", "Right", "click", "and", "also", "use", "Ctrl", "C", "NUMBER", "Well", "ctrl", "c", "didnt", "work", "for", "me", "NUMBER", "Does", "it", "work", "for", "you", "On", "Fri", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "karliss", "TAG", "write", "If", "it", "can", "be", "selected", "it", "should", "be", "copyable", "even", "when", "read", "only", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Seems", "like", "Qt", "CustomContextMenu", "remove", "the", "default", "context", "menu", "and", "thus", "remove", "the", "support", "for", "copying", "text", "NUMBER", "Should", "I", "manually", "add", "a", "Copy", "action", "to", "copy", "selected", "text", "or", "there", "be", "a", "way", "to", "use", "custom", "context", "menu", "while", "preserving", "the", "regular", "context", "menu", "with", "Copy", "I", "don", "t", "think", "the", "theories", "above", "be", "correct", "NUMBER", "Ctrl", "C", "sometimes", "works", "but", "inconsistently", "NUMBER", "As", "has", "be", "observed", "by", "many", "people", "ctrl", "c", "often", "triggers", "decompilation", "which", "causes", "text", "to", "be", "update", "thus", "interfering", "with", "selection", "and", "copying", "NUMBER", "There", "might", "be", "some", "conflicting", "or", "incorrectly", "set", "up", "shortcuts", "NUMBER", "Needs", "to", "be", "investigated", "how", "exactly", "it", "gets", "triggered", "NUMBER", "First", "thing", "to", "check", "be", "inserting", "breakpoint", "in", "decompilation", "function", "and", "looking", "at", "the", "stacktrace", "to", "see", "what", "event", "exactly", "triggers", "it", "NUMBER", "One", "guess", "be", "set", "as", "code", "C", "action", "but", "it", "doesn", "t", "seem", "to", "cause", "a", "similar", "problem", "in", "disassembly", "widget", "so", "it", "might", "be", "something", "else", "NUMBER", "Closed", "by", "PR", "NUMBER", "ah", "okay", "sure", "xarkes", "can", "you", "open", "an", "issue", "in", "radare", "NUMBER", "and", "close", "this", "PR", "Detailed", "description", "This", "PR", "makes", "sure", "that", "the", "Rename", "dialogs", "will", "open", "in", "the", "center", "of", "the", "screen", "and", "not", "in", "the", "corner", "NUMBER", "The", "solution", "be", "based", "on", "NUMBER", "by", "AntonReborn", "NUMBER", "Test", "plan", "required", "Choose", "a", "flag", "in", "the", "disassembly", "and", "click", "TAG", "Shift", "TAG", "TAG", "N", "TAG", "to", "open", "rename", "diaolog", "NUMBER", "Notice", "how", "it", "be", "now", "opened", "on", "the", "center", "NUMBER", "Closing", "issue", "close", "NUMBER", "So", "should", "i", "access", "the", "main", "variable", "and", "set", "it", "as", "parent", "I", "think", "it", "s", "feasible", "Environment", "information", "Operating", "System", "Any", "Cutter", "version", "most", "recent", "from", "Master", "File", "format", "Any", "Describe", "the", "bug", "The", "Rename", "xyz", "use", "here", "dialog", "be", "set", "to", "top", "most", "and", "follows", "me", "around", "to", "different", "applications", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "a", "function", "NUMBER", "Click", "on", "some", "instruction", "with", "a", "use", "flag", "and", "press", "Shift", "N", "or", "Right", "Click", "rename", "NUMBER", "NUMBER", "Now", "switch", "to", "different", "application", "such", "as", "your", "browser", "and", "see", "that", "the", "dialog", "be", "still", "there", "top", "most", "NUMBER", "Expected", "behavior", "The", "dialog", "should", "show", "only", "in", "the", "context", "of", "the", "program", "Screenshots", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "c", "ccdf", "NUMBER", "b", "NUMBER", "png", "Fixed", "via", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Some", "of", "our", "widgets", "do", "not", "have", "keyboard", "shortcuts", "NUMBER", "But", "the", "other", "problem", "be", "that", "those", "who", "have", "do", "not", "have", "it", "write", "anywhere", "in", "the", "Interface", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cf", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "ec", "NUMBER", "e", "NUMBER", "png", "Describe", "the", "solution", "you", "d", "like", "I", "expect", "the", "keyboard", "shortcuts", "to", "be", "shown", "next", "to", "the", "widget", "name", "in", "the", "Windows", "menu", "NUMBER", "I", "wonder", "if", "it", "s", "due", "to", "actions", "be", "incorrectly", "defined", "Maybe", "because", "there", "was", "no", "point", "when", "it", "worked", "NUMBER", "The", "shortcuts", "never", "showed", "there", "I", "think", "b", "be", "the", "way", "to", "go", "NUMBER", "ain", "t", "it", "Thank", "you", "Everything", "works", "as", "expected", "thanks", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "there", "be", "no", "easy", "way", "to", "control", "the", "tabs", "in", "Cutter", "from", "the", "keyboard", "Describe", "the", "solution", "you", "d", "like", "I", "want", "to", "apply", "a", "set", "of", "keyboard", "shortcuts", "to", "manage", "tabs", "in", "Cutter", "TAG", "Ctrl", "TAG", "TAG", "Tab", "TAG", "Jump", "to", "the", "next", "open", "tab", "TAG", "Ctrl", "TAG", "TAG", "Shift", "TAG", "TAG", "Tab", "TAG", "J", "ump", "to", "the", "previous", "open", "tab", "TAG", "Ctrl", "TAG", "TAG", "W", "TAG", "Close", "the", "current", "tab", "TAG", "Ctrl", "TAG", "TAG", "T", "TAG", "Duplicate", "current", "tab", "TAG", "Ctrl", "TAG", "TAG", "Shift", "TAG", "TAG", "T", "TAG", "Reopen", "previously", "close", "tabs", "in", "the", "order", "they", "were", "close", "Mouse", "shortcut", "Mouse", "middle", "click", "on", "a", "tab", "will", "close", "it", "Sure", "thing", "Go", "ahead", "Let", "us", "know", "how", "you", "progress", "and", "if", "you", "have", "any", "question", "NUMBER", "You", "can", "discuss", "it", "with", "us", "here", "or", "on", "our", "Telegram", "or", "IRC", "channels", "NUMBER", "NUMBER", "x", "NUMBER", "D", "Your", "commit", "for", "docker", "look", "very", "good", "NUMBER", "Please", "open", "a", "separated", "Pull", "Request", "for", "it", "NUMBER", "p", "NUMBER", "s", "don", "t", "forget", "to", "sign", "up", "for", "Hacktoberfest", "LINK", "and", "get", "a", "neat", "T", "shirt", "for", "your", "PRs", "Hey", "NUMBER", "x", "NUMBER", "d", "do", "you", "have", "any", "progress", "yet", "want", "us", "to", "have", "a", "look", "Detailed", "description", "Rename", "the", "widget", "from", "Pseudocode", "to", "Decompiler", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "ccba", "NUMBER", "e", "NUMBER", "NUMBER", "f", "d", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "dd", "NUMBER", "png", "TAG", "I", "think", "it", "do", "but", "isn", "t", "it", "the", "price", "we", "need", "to", "pay", "for", "it", "so", "what", "do", "you", "think", "of", "the", "settings", "update", "Any", "way", "to", "overcome", "this", "or", "c", "est", "la", "vie", "karliss", "xarkes", "please", "check", "now", "after", "the", "change", "Looks", "great", "an", "improvement", "indeed", "NUMBER", "I", "think", "that", "we", "still", "need", "a", "simply", "TAG", "N", "TAG", "shortcut", "or", "TAG", "Shift", "TAG", "TAG", "N", "TAG", "to", "quickly", "rename", "a", "var", "without", "setting", "a", "type", "NUMBER", "Like", "pressing", "a", "shortcut", "start", "typing", "and", "TAG", "Enter", "TAG", "and", "that", "s", "it", "NUMBER", "And", "for", "the", "test", "case", "open", "EditVariableDialog", "in", "a", "function", "without", "any", "stack", "variables", "and", "argument", "All", "combo", "boxes", "should", "probably", "be", "disabled", "with", "N", "A", "or", "something", "similar", "NUMBER", "Empty", "combo", "boxes", "be", "useless", "confusing", "and", "cause", "extra", "meaningless", "steps", "by", "the", "user", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "png", "That", "sounds", "goos", "to", "me", "TAG", "Detailed", "description", "Part", "NUMBER", "for", "NUMBER", "and", "NUMBER", "TAG", "Test", "plan", "required", "Test", "Resource", "widget", "double", "click", "seek", "show", "in", "hexwidget", "Test", "that", "context", "menu", "for", "one", "of", "the", "previously", "converted", "widgets", "like", "function", "widget", "still", "works", "Test", "string", "widget", "context", "menu", "shows", "new", "entries", "xref", "comment", "copy", "address", "shortcuts", "work", "copy", "string", "isn", "t", "broken", "filter", "isn", "t", "broken", "double", "click", "seek", "show", "in", "disassembly", "or", "hexdump", "flags", "widget", "context", "menu", "shows", "new", "entries", "rename", "and", "delete", "isn", "t", "broken", "xref", "comment", "copy", "address", "shortcuts", "work", "filter", "and", "flagspace", "isn", "t", "broken", "double", "click", "seek", "show", "in", "disassembly", "or", "hexdump", "search", "widget", "new", "menu", "entries", "copy", "address", "search", "isn", "t", "broken", "xrefs", "shortcut", "edit", "comment", "add", "a", "comment", "in", "any", "of", "lists", "repeat", "and", "observed", "that", "edit", "comment", "dialog", "opens", "xrefs", "code", "preview", "not", "broken", "clicking", "on", "xref", "change", "preview", "not", "broken", "context", "menu", "contains", "new", "entries", "open", "xref", "from", "xref", "dialog", "close", "the", "old", "one", "Closing", "issue", "TAG", "Do", "we", "need", "a", "context", "menu", "entry", "for", "Ctrl", "F", "if", "the", "search", "bar", "at", "the", "bottom", "can", "t", "be", "close", "Where", "for", "example", "Because", "I", "don", "t", "find", "it", "necessary", "AS", "long", "as", "the", "keyboard", "shortcut", "of", "Ctrl", "F", "stays", "XVilka", "Please", "clarify", "a", "few", "things", "NUMBER", "Looking", "at", "the", "issue", "I", "didn", "t", "see", "anything", "implement", "yet", "be", "that", "correct", "Is", "Table", "API", "meant", "to", "provide", "a", "way", "of", "describing", "a", "visual", "look", "of", "table", "or", "just", "grid", "of", "values", "with", "different", "output", "formatters", "I", "assume", "that", "support", "from", "cutter", "would", "mean", "parsing", "one", "of", "those", "formats", "NUMBER", "Will", "there", "be", "some", "meta", "information", "about", "column", "content", "be", "it", "a", "string", "number", "address", "TAG", "Detailed", "description", "Restore", "blinking", "cursor", "after", "make", "empty", "selection", "use", "mouse", "NUMBER", "This", "can", "easily", "happen", "by", "accident", "when", "slightly", "dragging", "the", "mouse", "when", "clicking", "to", "change", "cursor", "position", "NUMBER", "Test", "plan", "required", "In", "hexwidget", "first", "case", "press", "left", "mouse", "key", "slightly", "move", "cursor", "but", "less", "than", "would", "be", "required", "for", "for", "selecting", "a", "byte", "release", "left", "mouse", "key", "observe", "if", "cursor", "be", "blinking", "in", "the", "correct", "position", "before", "the", "patch", "cursor", "should", "disappear", "second", "case", "start", "selecting", "bytes", "with", "mouse", "move", "the", "mouse", "to", "initial", "position", "so", "that", "selection", "be", "empty", "observe", "if", "cursor", "be", "blinking", "in", "the", "correct", "position", "Closing", "issue", "TAG", "How", "do", "it", "deal", "with", "recent", "item", "history", "for", "inputs", "that", "be", "not", "path", "to", "file", "There", "be", "ioplugins", "like", "malloc", "null", "http", "tcp", "and", "others", "for", "which", "the", "string", "isn", "t", "a", "file", "path", "NUMBER", "In", "theory", "it", "could", "be", "arbitrary", "string", "NUMBER", "NUMBER", "add", "some", "functionality", "which", "doesn", "t", "make", "sense", "for", "non", "file", "things", "NUMBER", "It", "wasn", "t", "a", "problem", "at", "that", "point", "because", "io", "mode", "wasn", "t", "remembered", "NUMBER", "My", "initial", "guess", "was", "that", "it", "might", "be", "due", "to", "new", "blocks", "not", "be", "directly", "reachable", "NUMBER", "But", "this", "wasn", "t", "the", "case", "as", "indicated", "by", "test", "bellow", "NUMBER", "Looks", "change", "end", "address", "works", "only", "in", "one", "direction", "NUMBER", "I", "tried", "find", "small", "function", "with", "NUMBER", "NUMBER", "basic", "blocks", "reduce", "end", "address", "observe", "that", "graph", "was", "automatically", "update", "try", "change", "end", "address", "and", "observe", "that", "remove", "bb", "aren", "t", "add", "back", "I", "do", "not", "even", "know", "how", "this", "be", "possible", "at", "r", "NUMBER", "commandline", "NUMBER", "idandre", "Cutter", "uses", "afu", "TAG", "command", "for", "change", "end", "address", "NUMBER", "I", "would", "expect", "this", "to", "be", "repeatable", "in", "r", "NUMBER", "use", "afb", "to", "check", "if", "bb", "be", "part", "of", "funciton", "NUMBER", "So", "be", "this", "a", "bug", "in", "r", "NUMBER", "In", "theory", "disassembly", "output", "takes", "into", "account", "data", "type", "and", "displays", "it", "accordingly", "unfortunately", "analysis", "isn", "t", "good", "enough", "NUMBER", "R", "NUMBER", "should", "probably", "mark", "non", "executable", "sections", "as", "data", "by", "default", "NUMBER", "a", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cf", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ec", "NUMBER", "png", "a", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "df", "NUMBER", "c", "NUMBER", "png", "a", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "ca", "NUMBER", "png", "In", "the", "examples", "I", "above", "no", "manual", "marking", "was", "applied", "NUMBER", "It", "was", "automatically", "detected", "during", "analysis", "NUMBER", "Cutter", "should", "probably", "not", "display", "Code", "for", "X", "Refs", "from", "with", "type", "data", "NUMBER", "update", "I", "meant", "in", "the", "table", "on", "left", "side", "where", "it", "currently", "interprets", "dev_ino_pop", "as", "an", "instruction", "NUMBER", "look", "at", "the", "screenshot", "posted", "by", "elikaski", "this", "be", "a", "great", "example", "Things", "like", "this", "be", "why", "I", "suggested", "LINK", "issuecomment", "NUMBER", "instead", "of", "handle", "it", "it", "completely", "separately", "for", "each", "widget", "NUMBER", "Detailed", "description", "Add", "AddressableItemContextMenu", "basic", "menu", "that", "can", "be", "use", "for", "most", "places", "that", "have", "something", "with", "address", "NUMBER", "Currently", "contains", "show", "in", "copy", "adderess", "show", "X", "refs", "add", "comment", "NUMBER", "AdressableItemModel", "Qt", "Item", "Model", "with", "interface", "for", "ask", "item", "s", "address", "and", "optionally", "name", "NUMBER", "I", "considered", "use", "custom", "role", "but", "chose", "interface", "with", "virtual", "methods", "instead", "as", "it", "allows", "enforcing", "that", "interface", "be", "implement", "at", "compile", "time", "NUMBER", "Manually", "track", "if", "all", "the", "models", "use", "correct", "role", "would", "be", "more", "fragile", "NUMBER", "ListDockWidget", "CutterDockWidget", "containing", "tree", "view", "and", "optionally", "QuckSearch", "and", "statusbar", "with", "count", "NUMBER", "Accepts", "AddressableItemModel", "and", "Automatically", "add", "AdressableItemContextMenu", "NUMBER", "This", "one", "saves", "a", "lot", "of", "duplicate", "code", "and", "provides", "more", "consistent", "behavior", "NUMBER", "A", "specific", "DockWidget", "implementation", "needs", "to", "provide", "model", "which", "extend", "AddressableItemModel", "if", "necessary", "customize", "tree", "view", "widget", "look", "and", "add", "extra", "context", "menu", "actions", "specific", "to", "this", "widget", "NUMBER", "Convert", "following", "widgets", "to", "use", "ListDockWidget", "CommentsWidget", "ImportsWidget", "RelocsWidget", "SymbolsWidget", "SegmentsWIdget", "SectionsWIdget", "HeadersWIdget", "FunctionWidget", "Some", "of", "the", "provide", "partial", "context", "menu", "or", "no", "context", "menu", "NUMBER", "Widget", "specific", "context", "menu", "entries", "should", "be", "still", "there", "NUMBER", "Bugfixes", "and", "exist", "feature", "cleanup", "Escape", "shortcut", "for", "canceling", "quick", "filter", "was", "broken", "due", "to", "VtablesWidget", "Selecting", "multiple", "function", "in", "FunctionWIdget", "and", "use", "Undefine", "action", "undefines", "all", "of", "them", "Horizontal", "Vertical", "mode", "selection", "now", "uses", "ActionGroup", "for", "managing", "exclusive", "selection", "instead", "of", "doing", "it", "manually", "NUMBER", "Test", "plan", "required", "Using", "context", "menu", "copy", "address", "show", "in", "show", "x", "refs", "make", "sure", "name", "be", "shown", "when", "applicable", "and", "address", "otherwise", "add", "comment", "any", "widget", "specific", "context", "menu", "items", "action", "shortcuts", "with", "correct", "target", "correct", "target", "when", "open", "menu", "use", "keyboard", "Quick", "filter", "Ctrl", "F", "focuses", "on", "Quick", "Filter", "open", "it", "if", "necesarry", "Quick", "filter", "works", "Escape", "clears", "the", "filter", "Horizontal", "Vertical", "mode", "for", "Functions", "and", "Comment", "widgets", "Qt", "displays", "it", "use", "Radio", "button", "style", "instead", "of", "checkboxes", "Tree", "item", "content", "switches", "between", "tree", "and", "table", "In", "tree", "mode", "copying", "adress", "takes", "function", "address", "in", "function", "widget", "function", "or", "comment", "address", "in", "comment", "widget", "Test", "at", "least", "one", "action", "in", "all", "widgets", "CommentsWidget", "ImportsWidget", "RelocsWidget", "SymbolsWidget", "SegmentsWIdget", "SectionsWIdget", "graphic", "bars", "show", "up", "HeadersWIdget", "FunctionWidget", "Make", "sure", "it", "be", "possible", "to", "copy", "any", "cell", "in", "table", "view", "by", "clicking", "it", "and", "pressing", "Ctrl", "C", "Future", "work", "for", "part", "NUMBER", "Deal", "with", "rest", "of", "of", "the", "widgets", "probably", "split", "ListDockWidget", "so", "that", "TreeView", "with", "addressable", "item", "model", "can", "be", "use", "in", "docks", "that", "have", "more", "custom", "gui", "like", "Search", "NUMBER", "Use", "of", "AdressableItemContextMenu", "in", "places", "that", "aren", "t", "table", "row", "for", "example", "stack", "widget", "address", "and", "data", "NUMBER", "Add", "comment", "should", "probably", "show", "exist", "comment", "for", "editing", "instead", "of", "silently", "replacing", "it", "NUMBER", "Current", "behavior", "be", "copied", "either", "for", "Comments", "or", "Functions", "widget", "NUMBER", "Closing", "issue", "Covers", "most", "half", "of", "NUMBER", "NUMBER", "Need", "to", "evaluate", "once", "finished", "NUMBER", "ITAYC", "NUMBER", "HEN", "NUMBER", "I", "notice", "that", "as", "well", "NUMBER", "Documentation", "LINK", "NUMBER", "qt", "NUMBER", "html", "ItemDataRole", "enum", "suggests", "that", "Qt", "DisplayRole", "should", "return", "string", "NUMBER", "Digging", "in", "code", "confirms", "that", "copy", "only", "works", "if", "QString", "be", "returned", "LINK", "L", "NUMBER", "Doesn", "t", "seem", "like", "there", "be", "anything", "better", "than", "going", "through", "all", "models", "and", "wrapping", "numbers", "in", "QString", "number", "NUMBER", "Seems", "annoying", "but", "this", "PR", "already", "modifies", "many", "models", "so", "I", "might", "as", "well", "do", "it", "for", "widgets", "update", "in", "this", "PR", "and", "leave", "other", "widget", "for", "part", "NUMBER", "NUMBER", "I", "didn", "t", "touch", "string", "widget", "yet", "NUMBER", "My", "personal", "opinion", "be", "that", "it", "s", "not", "necessary", "to", "have", "it", "context", "menu", "NUMBER", "I", "wouldn", "t", "try", "to", "look", "for", "it", "there", "NUMBER", "So", "it", "s", "main", "use", "be", "discoverability", "NUMBER", "But", "support", "Ctrl", "F", "for", "all", "the", "tables", "and", "sometimes", "showing", "it", "by", "default", "I", "think", "be", "sufficient", "NUMBER", "NUMBER", "Good", "catch", "NUMBER", "I", "don", "t", "have", "a", "strong", "opinion", "for", "this", "NUMBER", "Shortcuts", "in", "tables", "and", "Disassembly", "Graph", "context", "menu", "should", "probably", "match", "as", "much", "as", "possible", "NUMBER", "Show", "in", "works", "as", "designed", "but", "due", "to", "how", "global", "seek", "synchronization", "works", "it", "isn", "t", "perfect", "NUMBER", "If", "target", "widget", "isn", "t", "synchronized", "only", "target", "seek", "will", "be", "change", "NUMBER", "I", "change", "the", "default", "synchronization", "state", "to", "disabled", "for", "new", "widgets", "to", "avoid", "unexpect", "seek", "change", "in", "current", "widget", "NUMBER", "Didn", "t", "touch", "show", "in", "exist", "widget", "as", "that", "can", "cause", "unexpect", "widget", "desynchronization", "which", "can", "cause", "different", "kind", "of", "problem", "NUMBER", "Was", "able", "to", "repeat", "it", "NUMBER", "It", "s", "probably", "a", "problem", "with", "r", "NUMBER", "anj", "doesn", "t", "detect", "reference", "to", "variable", "type", "address", "offset", "NUMBER", "an", "has", "code", "for", "dealing", "with", "variables", "but", "it", "doesn", "t", "work", "NUMBER", "In", "V", "mode", "d", "v", "works", "NUMBER", "The", "most", "obvious", "difference", "be", "that", "an", "calls", "r_anal_op", "in", "R_ANAL_OP_MASK_BASIC", "mode", "but", "d", "v", "calls", "it", "with", "R_ANAL_OP_MASK_ALL", "NUMBER", "Expected", "behavior", "in", "issue", "description", "be", "only", "one", "of", "the", "options", "NUMBER", "I", "be", "fine", "with", "preserving", "r", "NUMBER", "behavior", "if", "Cutter", "GUI", "matches", "it", "NUMBER", "Third", "option", "be", "disabling", "emu", "NUMBER", "r", "option", "in", "cutter", "when", "asm", "NUMBER", "emu", "isn", "t", "enable", "NUMBER", "Do", "you", "have", "an", "update", "screenshot", "Thanks", "NUMBER", "There", "be", "already", "a", "special", "branch", "as", "stated", "by", "karliss", "comment", "NUMBER", "It", "s", "under", "the", "graphviz", "branch", "NUMBER", "Maijin", "can", "you", "share", "the", "hack", "NUMBER", "md", "here", "Probably", "yossizap", "would", "want", "to", "have", "a", "look", "at", "it", "Didn", "t", "get", "to", "update", "it", "either", "I", "ll", "get", "to", "it", "once", "we", "re", "in", "a", "stable", "state", "with", "the", "basic", "features", "NUMBER", "ahm", "how", "should", "we", "proceed", "with", "this", "Cool", "thanks", "let", "s", "see", "Before", "Cf", "the", "linked", "issue", "below", "Now", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "acb", "NUMBER", "png", "This", "be", "not", "the", "intended", "solution", "but", "I", "think", "it", "s", "fine", "as", "well", "NUMBER", "Fixes", "LINK", "Sure", "I", "just", "made", "a", "quick", "fix", "but", "I", "can", "definitely", "improve", "it", "NUMBER", "Thanks", "for", "the", "feedbacks", "New", "display", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "afd", "NUMBER", "ab", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "png", "It", "d", "be", "great", "if", "someone", "could", "test", "it", "on", "Windows", "though", "NUMBER", "I", "fix", "the", "variable", "name", "for", "Windows", "but", "I", "think", "it", "s", "not", "going", "to", "be", "enough", "NUMBER", "But", "in", "fact", "my", "solution", "be", "shit", "I", "should", "use", "that", "LINK", "NUMBER", "qdir", "NUMBER", "html", "homePath", "Oh", "yes", "sorry", "I", "was", "busy", "yep", "looks", "good", "to", "me", "NUMBER", "I", "will", "squash", "if", "you", "don", "t", "mind", "Well", "right", "now", "I", "don", "t", "propose", "anything", "NUMBER", "Adding", "the", "dependencies", "to", "the", "codebase", "be", "not", "a", "good", "idea", "so", "let", "s", "stick", "with", "what", "we", "have", "Thank", "you", "Yeah", "we", "can", "refactor", "later", "imo", "NUMBER", "The", "same", "happens", "with", "multiline", "comments", "NUMBER", "Oh", "yeah", "I", "thought", "I", "fix", "it", "but", "probably", "not", "NUMBER", "I", "can", "t", "reproduce", "it", "for", "most", "pipelines", "in", "asm", "NUMBER", "bb", "NUMBER", "line", "but", "could", "reproduce", "in", "some", "specific", "cases", "like", "this", "where", "multiple", "comments", "and", "bb", "NUMBER", "lines", "be", "shown", "in", "sequence", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "fca", "NUMBER", "png", "We", "could", "also", "add", "C", "API", "I", "think", "NUMBER", "fix", "in", "LINK", "Agreed", "NUMBER", "Tested", "right", "now", "and", "it", "looks", "very", "nice", "You", "could", "have", "push", "in", "the", "other", "branch", "directly", "it", "would", "not", "have", "be", "an", "issue", "Haha", "I", "don", "t", "know", "how", "to", "do", "this", "if", "that", "was", "my", "PR", "I", "would", "definitely", "rename", "ok", "to", "parseOk", "or", "parseSuccess", "stuck_out_tongue", "Looks", "good", "to", "me", "plus", "it", "seems", "it", "s", "easy", "to", "configure", "the", "themes", "if", "we", "want", "to", "so", "nice", "thank", "you", "NUMBER", "I", "wonder", "if", "that", "could", "be", "more", "efficient", "for", "the", "disassembly", "widget", "rather", "than", "doing", "the", "html", "conversion", "NUMBER", "If", "I", "understood", "correctly", "we", "should", "not", "use", "any", "null", "QString", "aka", "empty", "string", "be", "equivalent", "to", "no", "string", "so", "I", "think", "that", "use", "isEmpty", "everywhere", "be", "the", "proper", "solution", "Works", "fine", "thank", "you", "Almost", "there", "Program", "radare", "NUMBER", "find", "YES", "C", "projects", "cutter", "r", "NUMBER", "_dist_x", "NUMBER", "bin", "radare", "NUMBER", "EXE", "meson", "NUMBER", "build", "NUMBER", "NUMBER", "ERROR", "C", "library", "r_core", "not", "find", "Also", "to", "documentation", "if", "not", "already", "there", "NUMBER", "Not", "exactly", "NUMBER", "It", "be", "for", "the", "documentation", "and", "a", "meantime", "solution", "to", "add", "a", "link", "to", "the", "plugins", "page", "This", "change", "should", "be", "in", "r", "NUMBER", "not", "in", "cutter", "NUMBER", "I", "have", "be", "ask", "to", "change", "this", "NUMBER", "weeks", "ago", "and", "get", "no", "feedback", "at", "all", "On", "NUMBER", "Jun", "NUMBER", "at", "NUMBER", "NUMBER", "Florian", "M\u00e4rkl", "NUMBER", "write", "Merged", "NUMBER", "into", "master", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "This", "be", "not", "true", "NUMBER", "I", "remember", "at", "least", "condret", "and", "me", "saying", "it", "should", "be", "remove", "completely", "NUMBER", "optizone", "Can", "you", "squash", "your", "commit", "so", "this", "PR", "has", "only", "NUMBER", "commit", "one", "from", "me", "one", "from", "you", "so", "I", "can", "merge", "after", "release", "trufae", "you", "want", "it", "for", "the", "whole", "application", "or", "for", "a", "single", "instruction", "Thanks", "Okay", "then", "so", "this", "issue", "be", "about", "Visual", "bit", "editor", "I", "edit", "the", "initial", "comment", "to", "describe", "it", "better", "NUMBER", "A", "new", "issue", "for", "analysis", "hints", "for", "bit", "change", "e", "NUMBER", "g", "ARM", "Thumb", "will", "be", "opened", "separately", "NUMBER", "This", "be", "the", "original", "issue", "description", "To", "toggle", "bits", "like", "the", "visual", "bit", "editor", "in", "r", "NUMBER", "vb", "NUMBER", "Thank", "you", "for", "your", "suggestion", "While", "it", "be", "indeed", "helpful", "we", "consider", "this", "feature", "as", "nice", "to", "have", "and", "put", "it", "as", "a", "low", "priority", "in", "our", "prioritization", "NUMBER", "Thus", "it", "be", "not", "likely", "to", "be", "solve", "soon", "NUMBER", "That", "said", "we", "always", "invite", "you", "and", "the", "community", "to", "send", "a", "Pull", "Request", "to", "solve", "this", "issue", "or", "implement", "the", "solution", "NUMBER", "Opened", "a", "better", "issue", "LINK", "Closing", "this", "NUMBER", "to", "be", "merge", "when", "travis", "be", "fix", "LINK", "ci", "NUMBER", "community", "t", "xcode", "NUMBER", "NUMBER", "homebrew", "outdate", "error", "NUMBER", "According", "to", "the", "linked", "thread", "NUMBER", "fix", "it", "NUMBER", "Is", "it", "LINK", "It", "looks", "like", "the", "bindings", "cannot", "compile", "from", "the", "logs", "NUMBER", "I", "don", "t", "remember", "the", "exact", "reason", "for", "this", "line", "and", "CI", "be", "green", "so", "lgtm", "karliss", "suggested", "many", "good", "ways", "we", "need", "to", "pick", "one", "and", "go", "for", "it", "NUMBER", "I", "actually", "like", "how", "the", "assembly", "refrence", "plugin", "looks", "like", "it", "be", "not", "based", "on", "asm", "NUMBER", "describe", "though", "NUMBER", "This", "be", "basically", "the", "NUMBER", "suggestion", "of", "karliss", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "bcdba", "NUMBER", "c", "NUMBER", "d", "NUMBER", "png", "this", "should", "be", "implement", "on", "r", "NUMBER", "side", "and", "expose", "in", "cutter", "like", "suggested", "In", "what", "shape", "What", "change", "should", "take", "place", "in", "r", "NUMBER", "in", "addition", "to", "the", "current", "asm", "NUMBER", "descirbe", "Cutterref", "by", "yossizap", "be", "also", "neat", "LINK", "At", "the", "moment", "it", "only", "support", "x", "NUMBER", "NUMBER", "ARM", "and", "MIPS", "NUMBER", "bit", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dfe", "NUMBER", "NUMBER", "eb", "NUMBER", "ea", "NUMBER", "bcc", "bd", "NUMBER", "d", "NUMBER", "d", "NUMBER", "png", "Should", "we", "do", "a", "survey", "for", "the", "best", "option", "or", "keep", "it", "to", "plugins", "Compilation", "instructions", "improved", "and", "we", "moved", "to", "CMake", "as", "make", "bulding", "platform", "NUMBER", "Thanks", "TAG", "NUMBER", "src", "dialogs", "AboutDialog", "NUMBER", "cpp", "NUMBER", "NUMBER", "note", "to", "match", "this", "QString", "aboutString", "TAG", "Cutter", "TAG", "g", "c", "pipe", "O", "NUMBER", "std", "gnu", "NUMBER", "Wall", "W", "D_REENTRANT", "fPIC", "D_CRT_NONSTDC_NO_DEPRECATE", "D_CRT_SECURE_NO_WARNINGS", "DQT_NO_DEBUG", "DQT_SVG_LIB", "DQT_WIDGETS_LIB", "DQT_GUI_LIB", "DQT_NETWORK_LIB", "DQT_CORE_LIB", "I", "NUMBER", "src", "I", "NUMBER", "I", "NUMBER", "src", "I", "NUMBER", "src", "core", "I", "NUMBER", "src", "widgets", "I", "NUMBER", "src", "dialogs", "I", "NUMBER", "src", "common", "I", "NUMBER", "src", "plugins", "isystem", "usr", "include", "libr", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtSvg", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtWidgets", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtGui", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtNetwork", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtCore", "I", "NUMBER", "isystem", "usr", "include", "libdrm", "I", "NUMBER", "I", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "mkspecs", "linux", "g", "o", "EditInstructionDialog", "NUMBER", "o", "NUMBER", "src", "dialogs", "EditInstructionDialog", "NUMBER", "cpp", "g", "c", "pipe", "O", "NUMBER", "std", "gnu", "NUMBER", "Wall", "W", "D_REENTRANT", "fPIC", "D_CRT_NONSTDC_NO_DEPRECATE", "D_CRT_SECURE_NO_WARNINGS", "DQT_NO_DEBUG", "DQT_SVG_LIB", "DQT_WIDGETS_LIB", "DQT_GUI_LIB", "DQT_NETWORK_LIB", "DQT_CORE_LIB", "I", "NUMBER", "src", "I", "NUMBER", "I", "NUMBER", "src", "I", "NUMBER", "src", "core", "I", "NUMBER", "src", "widgets", "I", "NUMBER", "src", "dialogs", "I", "NUMBER", "src", "common", "I", "NUMBER", "src", "plugins", "isystem", "usr", "include", "libr", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtSvg", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtWidgets", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtGui", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtNetwork", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtCore", "I", "NUMBER", "isystem", "usr", "include", "libdrm", "I", "NUMBER", "I", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "mkspecs", "linux", "g", "o", "FlagDialog", "NUMBER", "o", "NUMBER", "src", "dialogs", "FlagDialog", "NUMBER", "cpp", "make", "Makefile", "NUMBER", "AboutDialog", "NUMBER", "o", "Error", "NUMBER", "make", "Waiting", "for", "unfinished", "jobs", "NUMBER", "Something", "went", "wrong", "Removing", "intermediate", "container", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "The", "command", "bin", "sh", "c", "git", "clone", "recurse", "submodules", "LINK", "opt", "cutter", "cd", "opt", "cutter", "bash", "build", "NUMBER", "sh", "bash", "c", "if", "x", "opt", "cutter", "build", "Cutter", "then", "exit", "NUMBER", "fi", "returned", "a", "non", "zero", "code", "NUMBER", "I", "have", "very", "poor", "internet", "connection", "right", "now", "so", "I", "cannot", "build", "the", "image", "myself", "but", "that", "s", "probably", "worth", "investigating", "NUMBER", "Thanks", "I", "don", "t", "understand", "build", "be", "triggered", "each", "time", "there", "be", "a", "new", "commit", "on", "master", "NUMBER", "Please", "find", "here", "the", "full", "log", "for", "the", "latest", "build", "fc", "NUMBER", "bbe", "NUMBER", "LINK", "When", "use", "macros", "you", "don", "t", "need", "to", "put", "a", "to", "concatenate", "the", "strings", "so", "in", "theory", "the", "CUTTER_VERSION_FULL", "should", "be", "work", "NUMBER", "If", "the", "Alpine", "image", "works", "then", "that", "s", "awesome", "and", "we", "can", "definitely", "ignore", "this", "error", "Any", "update", "on", "this", "I", "can", "think", "of", "two", "approaches", "this", "could", "be", "do", "NUMBER", "One", "be", "to", "use", "the", "mechanism", "suggested", "in", "LINK", "issuecomment", "NUMBER", "NUMBER", "Indicate", "the", "position", "of", "comment", "or", "flag", "use", "little", "marker", "in", "the", "hex", "section", "and", "display", "the", "flag", "name", "or", "comment", "text", "as", "tooltip", "when", "hovering", "the", "marker", "NUMBER", "Other", "be", "to", "add", "a", "column", "and", "display", "text", "there", "NUMBER", "Here", "be", "an", "example", "for", "how", "the", "additional", "column", "approach", "could", "look", "NUMBER", "photo_", "NUMBER", "NUMBER", "NUMBER", "_", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "ee", "NUMBER", "dbd", "NUMBER", "jpg", "So", "should", "we", "rename", "this", "issue", "to", "Implement", "r", "NUMBER", "autocompletion", "in", "the", "consol", "widget", "The", "pull", "request", "LINK", "be", "not", "merge", "but", "we", "still", "did", "not", "solve", "the", "issue", "for", "python", "printings", "NirmalManoj", "see", "the", "linked", "issue", "NUMBER", "it", "has", "two", "parts", "reacting", "to", "clicks", "and", "highlight", "the", "clickable", "things", "NUMBER", "All", "of", "this", "depends", "on", "creating", "good", "infrastructure", "in", "NUMBER", "Function", "relative", "offsets", "be", "useful", "when", "comparing", "the", "code", "with", "other", "tool", "printing", "address", "in", "such", "format", "NUMBER", "Can", "t", "remember", "exactly", "where", "but", "I", "have", "seen", "it", "get", "printed", "by", "some", "tool", "NUMBER", "It", "might", "have", "be", "either", "gdb", "or", "a", "stacktrace", "printed", "by", "android", "after", "a", "crash", "NUMBER", "Right", "it", "be", "a", "bug", "in", "r", "NUMBER", "LINK", "Since", "we", "would", "want", "our", "native", "non", "ascii", "arrows", "here", "anyway", "after", "disabling", "asm", "NUMBER", "lines", "this", "be", "not", "a", "Cutter", "problem", "anymore", "NUMBER", "It", "was", "fix", "a", "while", "ago", "e", "NUMBER", "g", "NUMBER", "in", "LINK", "Removed", "from", "Debugger", "project", "as", "it", "be", "not", "important", "for", "having", "a", "work", "Debugger", "NUMBER", "It", "be", "questionable", "if", "this", "be", "actually", "necessary", "NUMBER", "It", "hasn", "t", "be", "properly", "test", "if", "disassembly", "printing", "be", "the", "problem", "NUMBER", "I", "know", "one", "case", "but", "it", "that", "one", "it", "should", "be", "more", "appropriate", "to", "fix", "the", "disassembly", "printer", "as", "cache", "doesn", "t", "help", "if", "printing", "once", "for", "generating", "cache", "takes", "unreasonably", "long", "time", "NUMBER", "I", "was", "referring", "to", "radareorg", "radare", "NUMBER", "NUMBER", "NUMBER", "My", "suggestion", "be", "currently", "not", "touching", "this", "NUMBER", "issue", "NUMBER", "ps", "NUMBER", "what", "be", "your", "insights", "on", "this", "one", "you", "think", "it", "be", "solve", "Thanks", "mate", "closing", "this", "issue", "then", "Cutter", "be", "a", "GUi", "application", "and", "thus", "reading", "and", "navigating", "inside", "a", "binary", "be", "do", "with", "the", "mouse", "NUMBER", "Spending", "shortcuts", "on", "this", "will", "block", "us", "from", "having", "them", "in", "something", "else", "This", "should", "honor", "flag", "size", "usually", "we", "use", "size", "of", "NUMBER", "but", "here", "we", "can", "have", "this", "info", "from", "the", "length", "of", "selected", "bytes", "Should", "it", "really", "be", "the", "same", "as", "in", "disassembly", "and", "graph", "If", "so", "all", "of", "these", "should", "honor", "multibyte", "and", "multiline", "selcetions", "for", "flag", "size", "This", "would", "not", "happen", "NUMBER", "Our", "hexdump", "be", "very", "rich", "already", "and", "this", "feature", "be", "part", "of", "it", "Currently", "it", "looks", "like", "this", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "de", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "png", "Our", "suggestion", "be", "to", "honor", "the", "immediate", "that", "was", "clicked", "by", "the", "user", "NUMBER", "Cutter", "should", "detect", "whether", "the", "user", "click", "on", "the", "first", "second", "third", "NUMBER", "immediate", "and", "will", "change", "its", "base", "upon", "selection", "NUMBER", "When", "right", "click", "was", "do", "not", "on", "a", "specific", "immediate", "e", "NUMBER", "g", "on", "the", "opcode", "then", "Cutter", "will", "show", "the", "dialog", "for", "the", "last", "immediate", "NUMBER", "We", "can", "also", "test", "whether", "it", "will", "be", "good", "to", "specify", "the", "immediate", "in", "the", "context", "menu", "item", "to", "show", "which", "immediate", "be", "going", "to", "be", "change", "Set", "NUMBER", "xaf", "NUMBER", "base", "to", "NUMBER", "What", "do", "you", "mean", "exactly", "Maybe", "once", "we", "have", "a", "proper", "python", "console", "yeah", "it", "should", "be", "quite", "a", "quick", "implementation", "right", "Removed", "from", "Debugger", "project", "as", "it", "be", "not", "important", "for", "having", "a", "work", "debugger", "NUMBER", "Removing", "from", "Debugger", "project", "as", "it", "be", "only", "for", "emulation", "NUMBER", "I", "know", "but", "it", "be", "not", "necessary", "nor", "important", "for", "having", "a", "work", "Debugger", "NUMBER", "We", "will", "implement", "that", "when", "the", "debugger", "will", "actually", "work", "NUMBER", "A", "debugger", "be", "actually", "work", "now", "Hey", "zoyron", "still", "want", "to", "give", "this", "one", "a", "chance", "This", "be", "mostly", "do", "by", "now", "NUMBER", "The", "important", "things", "were", "implement", "NUMBER", "Thank", "you", "Closing", "I", "be", "thinking", "of", "creating", "AddressableItemContextMenu", "maybe", "AddressableItemModel", "and", "AddressableItemListWidget", "NUMBER", "Remaining", "work", "Decide", "what", "to", "do", "with", "keyboard", "search", "see", "ITAYC", "NUMBER", "HEN", "comment", "in", "NUMBER", "Consider", "if", "synchronized", "seek", "behaviour", "for", "show", "in", "menu", "can", "be", "improved", "Add", "some", "note", "about", "AddressableItemX", "in", "developer", "documentation", "Test", "if", "ListDockWidget", "can", "be", "use", "from", "python", "plugin", "Add", "or", "Replace", "comment", "Add", "or", "Edit", "comment", "Remaining", "widgets", "with", "list", "Memory", "map", "widget", "Strings", "Flags", "RegisterRef", "ResourceWidget", "Search", "widget", "Zignatures", "TODO", "Stack", "widget", "Xrefs", "widget", "Registers", "fix", "in", "NUMBER", "There", "be", "already", "AsyncTaskManager", "in", "Cutter", "which", "can", "do", "this", "NUMBER", "But", "for", "most", "things", "it", "s", "not", "trivial", "to", "implement", "NUMBER", "For", "example", "the", "quick", "filter", "just", "uses", "QSortFilterProxyModel", "and", "this", "be", "simply", "not", "designed", "to", "work", "asynchronously", "NUMBER", "Yeah", "because", "search", "NUMBER", "in", "has", "so", "many", "options", "that", "aren", "t", "really", "useful", "for", "GUI", "users", "and", "it", "becomes", "too", "much", "NUMBER", "I", "think", "it", "be", "the", "same", "for", "analysis", "just", "need", "to", "think", "about", "the", "ones", "we", "want", "to", "keep", "fantastic", "thanks", "XVilka", "My", "current", "plan", "be", "As", "for", "the", "actual", "plan", "NUMBER", "refactor", "all", "the", "layout", "state", "into", "single", "structure", "make", "it", "obvious", "where", "it", "s", "be", "operated", "with", "NUMBER", "Change", "the", "function", "so", "that", "the", "GUI", "code", "calls", "more", "less", "only", "getLayout", "setLayout", "loadLayouts", "saveLayouts", "NUMBER", "Instead", "of", "current", "situation", "with", "initLayout", "readSettingsOrDefault", "readDebugeSttings", "saveSettings", "saveDebugSettings", "resetToDebug", "RestoreToDebug", "resetToDefault", "NUMBER", "All", "the", "layout", "change", "should", "function", "more", "or", "less", "the", "same", "initializing", "things", "more", "or", "less", "from", "NUMBER", "NUMBER", "Allow", "CutterDock", "widgets", "to", "include", "part", "of", "their", "configuration", "as", "part", "of", "layout", "NUMBER", "As", "describe", "above", "NUMBER", "NUMBER", "In", "a", "separate", "PR", "allow", "saving", "more", "layouts", "NUMBER", "After", "the", "previous", "refactoring", "this", "should", "be", "relatively", "easy", "NUMBER", "Yes", "I", "saw", "some", "suspicious", "code", "relate", "to", "resizing", "and", "was", "thinking", "if", "size", "should", "be", "part", "of", "layout", "or", "not", "NUMBER", "I", "guess", "it", "s", "less", "surprising", "to", "preserve", "the", "current", "window", "size", "instead", "of", "restoring", "whatever", "was", "use", "when", "layout", "was", "created", "NUMBER", "Will", "look", "into", "how", "it", "interacts", "with", "dock", "state", "restoration", "and", "detached", "docks", "NUMBER", "It", "s", "probably", "possible", "to", "come", "up", "with", "setup", "where", "window", "size", "be", "important", "part", "of", "layout", "but", "most", "of", "the", "time", "resize", "be", "unexpect", "NUMBER", "Basic", "stuff", "be", "work", "NUMBER", "Created", "the", "layout", "saving", "and", "switching", "earlier", "than", "expected", "because", "it", "s", "easier", "to", "test", "it", "that", "way", "NUMBER", "I", "be", "currently", "work", "on", "window", "size", "handle", "NUMBER", "Looks", "like", "not", "change", "it", "when", "switching", "profile", "doesn", "t", "cause", "problem", "NUMBER", "Rest", "of", "the", "remaining", "work", "x", "geometry", "restoration", "when", "open", "main", "window", "x", "action", "checkbox", "state", "x", "initial", "tabs", "x", "part", "sizes", "after", "reset", "x", "new", "dock", "widget", "placement", "plugins", "and", "change", "in", "Cutter", "layout", "management", "UI", "polishing", "When", "work", "with", "creating", "the", "initial", "dock", "layout", "from", "code", "it", "seem", "that", "when", "use", "addDockWidget", "left", "right", "top", "bottom", "dock", "it", "produced", "layout", "that", "seem", "ok", "but", "behaved", "buggy", "when", "you", "tried", "to", "interact", "with", "it", "NUMBER", "Buggy", "behavior", "include", "inability", "to", "resize", "some", "of", "the", "docks", "in", "specific", "directions", "slowly", "change", "dock", "size", "when", "moving", "mouse", "over", "the", "division", "line", "dock", "disappearing", "and", "later", "popping", "back", "when", "you", "try", "to", "resize", "other", "docks", "NUMBER", "Reproducing", "the", "same", "layout", "by", "manually", "dragging", "the", "docks", "resulted", "in", "work", "layout", "NUMBER", "Maybe", "this", "function", "and", "corner", "config", "works", "better", "in", "situation", "where", "you", "have", "a", "central", "widget", "and", "the", "placement", "of", "NUMBER", "sides", "be", "clearer", "NUMBER", "Switched", "to", "use", "only", "splitHorizontal", "and", "splitVertical", "which", "didn", "t", "seem", "to", "have", "the", "same", "problem", "NUMBER", "Hey", "jamie", "cyc", "to", "be", "honest", "I", "don", "t", "really", "understand", "your", "need", "NUMBER", "As", "capstone", "and", "radare", "NUMBER", "version", "we", "use", "be", "not", "sign", "themselves", "I", "don", "t", "really", "understand", "the", "purpose", "of", "us", "signing", "our", "binaries", "apart", "for", "OS", "X", "issue", "with", "debugging", "but", "that", "s", "not", "our", "issue", "right", "now", "NUMBER", "You", "be", "talking", "about", "verifying", "the", "integrity", "of", "the", "Cutter", "downloads", "so", "would", "some", "hash", "algorithm", "like", "e", "NUMBER", "g", "NUMBER", "sha", "NUMBER", "that", "we", "add", "to", "the", "Release", "changelog", "be", "a", "solution", "to", "you", "EDIT", "Also", "did", "you", "consider", "build", "Cutter", "yourself", "Could", "it", "be", "an", "option", "for", "you", "Thanks", "I", "be", "closing", "this", "NUMBER", "There", "be", "no", "need", "to", "hack", "through", "the", "command", "lines", "NUMBER", "Every", "sane", "operate", "system", "has", "display", "scaling", "factor", "configuration", "and", "Qt", "respects", "that", "NUMBER", "Situation", "was", "a", "bit", "worse", "NUMBER", "years", "ago", "use", "an", "older", "Qt", "version", "and", "older", "desktop", "environment", "version", "NUMBER", "Using", "latest", "Qt", "everything", "be", "mostly", "work", "NUMBER", "Most", "of", "the", "remaining", "tasks", "be", "linked", "in", "high", "dpi", "project", "LINK", "and", "also", "my", "attempt", "update", "Qt", "NUMBER", "NUMBER", "has", "better", "fractional", "scaling", "support", "on", "Windows", "NUMBER", "Any", "update", "karliss", "or", "link", "to", "some", "note", "There", "s", "already", "an", "issue", "as", "you", "can", "see", "above", "it", "s", "referenced", "as", "LINK", "It", "should", "be", "per", "basic", "block", "not", "per", "function", "NUMBER", "Inside", "a", "big", "function", "history", "be", "important", "NUMBER", "thought", "about", "it", "and", "test", "it", "actually", "NUMBER", "find", "it", "tiring", "because", "I", "click", "all", "over", "the", "place", "when", "in", "function", "and", "then", "esc", "esc", "esc", "esc", "be", "tiring", "NUMBER", "but", "I", "see", "your", "point", "Also", "silent", "seek", "would", "be", "wrong", "in", "any", "case", "NUMBER", "If", "you", "seek", "from", "block", "A", "to", "block", "B", "NUMBER", "then", "B", "NUMBER", "then", "undo", "seek", "and", "redo", "seek", "you", "want", "to", "land", "at", "B", "NUMBER", "not", "B", "NUMBER", "Ah", "ok", "if", "that", "be", "the", "case", "it", "s", "correct", "NUMBER", "xarkes", "karliss", "optizone", "I", "m", "not", "sure", "but", "be", "it", "already", "implement", "after", "the", "disassembly", "refactoring", "Or", "only", "partially", "Any", "update", "on", "this", "yossizap", "this", "can", "be", "very", "nice", "for", "debug", "as", "well", "NUMBER", "Right", "click", "to", "dump", "a", "memory", "segment", "I", "think", "this", "issue", "should", "be", "splitted", "in", "two", "NUMBER", "Highlighting", "block", "be", "already", "implement", "by", "optizone", "now", "highlight", "line", "should", "be", "trivial", "Closed", "in", "NUMBER", "Line", "coloring", "in", "Cutter", "isn", "t", "going", "through", "ecH", "we", "implement", "our", "own", "logic", "for", "this", "to", "support", "the", "widgets", "we", "use", "NUMBER", "We", "re", "very", "close", "to", "a", "solution", "there", "s", "only", "this", "PR", "that", "v", "NUMBER", "ctor", "needs", "to", "finish", "Or", "anybody", "else", "who", "be", "willing", "to", "push", "the", "last", "change", "NUMBER", "Maybe", "you", "USSCltd", "How", "be", "you", "use", "ecHi", "in", "Cutter", "because", "as", "far", "as", "I", "know", "we", "never", "support", "this", "command", "since", "it", "be", "a", "terminal", "based", "command", "NUMBER", "We", "in", "Cutter", "color", "the", "blocks", "and", "lines", "in", "the", "graph", "view", "by", "use", "our", "own", "implementation", "of", "coloring", "NUMBER", "Check", "the", "context", "menu", "of", "graph", "view", "to", "see", "how", "it", "looks", "like", "when", "coloring", "blocks", "NUMBER", "if", "you", "use", "the", "ec", "commands", "from", "the", "integrated", "console", "we", "do", "not", "support", "it", "and", "it", "somewhat", "hacky", "On", "Tue", "Feb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "USSCltd", "TAG", "write", "It", "seems", "ecHi", "works", "but", "not", "good", "NUMBER", "Are", "you", "going", "to", "remove", "this", "completely", "You", "be", "receiving", "this", "because", "you", "modify", "the", "open", "close", "state", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "Check", "out", "this", "pull", "request", "LINK", "Replacing", "BasicInstructionHighlighter", "and", "BasicBlockHighlighter", "with", "ecHi", "and", "afbc", "would", "be", "preferrable", "NUMBER", "Some", "things", "that", "need", "to", "be", "imrpoved", "in", "r", "NUMBER", "for", "ecHi", "to", "work", "well", "in", "Cutter", "ansi", "code", "to", "html", "color", "converting", "code", "NUMBER", "Currently", "it", "doesn", "t", "take", "html", "tag", "nesting", "limitations", "into", "account", "sometimes", "resulting", "in", "broken", "look", "as", "can", "bee", "seen", "in", "screenshot", "above", "NUMBER", "Saved", "color", "annotations", "should", "be", "stored", "use", "output", "independent", "way", "NUMBER", "Currently", "it", "be", "stored", "as", "terminal", "escape", "code", "which", "results", "in", "bad", "API", "NUMBER", "It", "should", "probably", "be", "stored", "as", "uint", "NUMBER", "instead", "NUMBER", "First", "part", "fix", "ansi", "code", "to", "html", "converter", "be", "do", "LINK", "NUMBER", "Maybe", "we", "should", "open", "an", "issue", "in", "radare", "NUMBER", "instead"], "text_count": [0, 16040, 3906, 1891, 898, 206, 1468, 5, 137, 2012, 2017, 4197, 2541, 1616, 1905, 619, 0, 0, 0, 0, 4885, 1560, 934, 608, 1131, 800, 0, 0, 0, 0, 8826, 5609, 3354, 122, 1822, 652, 0, 0, 0, 0, 11936, 77, 5203, 4780, 3351, 0, 0, 0, 0, 0, 2885, 1317, 1537, 832, 1322, 558, 1155, 0, 0, 0, 9443, 853, 7467, 679, 0, 0, 0, 0, 0, 0, 6031, 793, 4164, 1826, 675, 0, 0, 0, 0, 0, 10890, 5609, 1179, 3706, 567, 522, 0, 0, 0, 0, 656, 3366, 400, 0, 0, 0, 0, 0, 0, 0, 8829, 1856, 4965, 2097, 0, 0, 0, 0, 0, 0, 16609, 35380, 703, 1663, 574, 683, 0, 0, 0, 0, 46117, 152, 34954, 539, 7863, 9884]}, {"repo": "cutter", "type": "nonelite", "title": "", "number of text": 1248, "text": "  Looking into this. QT supports read-only features including comboboxes. Will submit a PR when I get a successful build. I've just submitted a PR to make the parsing tab in the hexdump widget read-only.   <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nThis pull request implements issue #2420 \r\nCurrently, the hotkey to toggle the base is set to `h`, however, I see that Cutter tries to mimic some vim key bindings (`j` and `k`) and because of that `h` might not be the best option. I've also considered `b` or maybe even `t` but I would need some feedback on that. \r\n\r\nAs I already mentioned in the comments of #2420:\r\n> the user needs to press the hotkey twice to switch from decimal to hexadecimal base (but only if the value is decimal by default, after the first switch the hotkey works as I expect it to). That is because I'm using `ahj` to get the current immediate base, and it looks like this command specifies it only if it was changed before. If there is no `immbase` in `ahj` output I just assume that the value is hexadecimal, but this is not always true.\r\n\r\nI'm not sure how to fix this yet. \r\n(Also, since I reverted 1473d2 this works in graph view)\r\n\r\nAnother (potential) problem is that this hotkey is not respecting the condition from\r\nhttps://github.com/radareorg/cutter/blob/ad66718f375b013a3021e531891c71082ee48867/src/menus/DisassemblyContextMenu.cpp#L415-L421\r\nI can't just disable it from there, since `aboutToShowSlot` is run only on the context menu trigger. That would mean that the hotkey would be disabled every time a user right-clicks on an address that does not meet this condition and enabled only after the user right-clicks on an address that meets this condition. I thought about adding a method to disable/enable the hotkey that would be called every time DissasemblyWidget/GraphWidget is updated, but I'm not sure if this is the best approach and where exactly such method should be called.\r\n\r\n**Test plan (required)**\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n1. Go to the disassembly/graph tab\r\n2. Find an instruction with a numerical value\r\n3. Press `h` or right-click -> `Toggle Immediate Base (Hex/Dec)`\r\n\r\n![cutter2420](https://user-images.githubusercontent.com/49844988/94033319-220cc880-fdc1-11ea-8dcc-433c7451ee5e.gif)\r\n\r\n**Closing issues**\r\n\r\ncloses #2420\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Thanks for the review!\r\n\r\n1. That's probably related to that check in `DisassemblyContextMenu::aboutToShowSlot`, I'm working on it, and hopefully, I will be able to push relevant changes soon.\r\n2. Sounds really cool! For that, the code would need to know which value will be changed by `ahi`, I just noticed that only the first value is affected (ex. `byte [rax + 1], 0x30 ` - `ahi 16` changes 1 to 0x1, after switching to att syntax: ` movb 0x30, -1(%rcx)` - `ahi 16` affects 0x30. But there could be exceptions from this rule, or maybe I'm just misunderstanding something). Not sure what to do next - the only thing I came up with is parsing the opcode, but that does not sound like a good idea knowing how many different instruction sets/syntaxes radare2 supports.\r\n3. Honestly, I'm out of ideas for this one. I tried reading radare2 source code, and I believe that there is no way to get the default immediate base without reimplementing parts of radare2 (but I could be very wrong). Having the value (with analysis hints applied) that will be affected by `ahi` would be much better since that helps us solve 2. But I'm again not sure how to implement that... That's one of my first more serious contributions (at least more serious than anything before), and I'm not sure if I should ask on IRC or open an issue on radare2 :sweat_smile:\r\n\r\n I think there is no way currently to determine what is the base used for a number when no hint is defined yet. I see https://github.com/radareorg/radare2/blob/master/libr/parse/filter.c#L402 , which seems to mean that whatever is returned by the disassembler is shown to the user. Capstone seems to show the number as \"decimal\" if < 10 (by \"decimal\" i mean that it doesn't show `0x`, but of course numbers < 10 are the same in hex and dec), but you probably can't assume that, as radare2 supports multiple disassemblers.\r\n\r\nWith regards to which number the hint is applied, you could use `ahi1 <base>` (or `ahi2 <base`, etc.) to apply the hint to the second (or third, etc.) number. However, it doesn't work very well as you can't specify the hint for both numbers, just for one at a time.\r\n\r\nI think the best thing would be to open an issue on radare2 repository and discuss it there, but probably r2 should provide an API to get these kind of info, though it could be harder than what we think because, as said above, when no hints are set we just get the disassembler default.  **Environment information**\r\n* Operating System: macOS 10.15.6\r\n* Cutter version: 1.12.0\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded release from Cutter website or GitHub \r\n  - [ ] Distribution repository\r\n* File format:\r\n\r\n**Describe the bug**\r\n\r\nCrashes on startup:\r\n\r\n```\r\nApplication Specific Information:\r\ndyld: launch, loading dependent libraries\r\nDYLD_FRAMEWORK_PATH=/Applications/Cutter.app/Contents/MacOS/../Frameworks\r\nDYLD_LIBRARY_PATH=/Applications/Cutter.app/Contents/MacOS/../Frameworks\r\n\r\nDyld Error Message:\r\n  Library not loaded: /usr/local/opt/gettext/lib/libintl.8.dylib\r\n  Referenced from: /Applications/Cutter.app/Contents/Frameworks/Python.framework/Versions/3.6/Python\r\n  Reason: image not found\r\n```\r\n\r\n**To Reproduce**\r\n\r\nOpen Cutter.\r\n\r\n**Expected behavior**\r\n\r\nContinue to use IDA Pro :)\r\n\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/4348897/92945597-2dc1cc00-f45e-11ea-8dbb-8425c07c04e5.png)\r\n @ITAYC0HEN From the error log it seems that it is trying to load a dynamic library outside the app. I assume that the macOS machine on which you tried it happened to have the same library installed in the same place. Depending on OS libraries might be fine in some cases, but `/usr/local/opt` is probably from homebrew. The .app should be selfcontained and not depend on homebrew libraries being installed to run. Please check installation source. It seems like you have installed Cutter via Homebrew instead of using precompiled release package. However, if you want to use current version please consider following [this](https://stackoverflow.com/a/15983461) dirty hack.\r\nHave a nice day! Downloaded from here: https://github.com/radareorg/cutter/releases/tag/v1.12.0\r\nBinary dmg, if it is not obvious. I tried to reproduce your issue on my macOS Catalina Version 10.15.6 and macOS Mojave 10.14.6\r\nIt seems like described error is related to your system, the release build is fine. As a workaround, please try [building from source](https://cutter.re/docs/building.html)\r\nHave a nice day! The release build contains references to Homebrew `libintl.8.dylib`, which is obviously not supposed to be present on a vanilla system:\r\n\r\n```\r\n$ otool -L Cutter.app/Contents/Frameworks/Python.framework/Versions/3.6/Python\r\nCutter.app/Contents/Frameworks/Python.framework/Versions/3.6/Python:\r\n\t/Users/travis/build/radareorg/cutter-deps/python/Python.framework/Versions/3.6/Python (compatibility version 3.6.0, current version 3.6.0)\r\n\t/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1454.90.0)\r\n\t/usr/local/opt/gettext/lib/libintl.8.dylib (compatibility version 11.0.0, current version 11.0.0)\r\n\t/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.50.4)\r\n```\r\n\r\nThe library is not bundled with the app either (no output other than that):\r\n\r\n```\r\n$ find Cutter.app -name libintl.8.dylib\r\n```\r\n\r\nThis makes it obvious that your assumption about my system being the cause of a problem is not valid, but rather your binaries contain dependencies they are not supposed to have.\r\n\r\nCheck `man install_name_tool` to understand how you can resolve such issues when bundling the applications. I once dealt with a similar problem when bundling the software built with MacPorts and attached a script I wrote for that purpose. Perhaps it can be used as a reference. [deployfix.sh.zip](https://github.com/radareorg/cutter/files/5232007/deployfix.sh.zip)\r\n We are currently using windeployqt, linuxdeployqt and macdeployqt for this purpose. As you observed in configuration it misses some libraries. Cutter is currently lacking macOS developers so @vit9696 if you feel comfortable with this topic pull request would be appreciated. The top level script currently doing packaging can be found here https://github.com/radareorg/cutter/blob/ad66718f375b013a3021e531891c71082ee48867/.travis.yml#L233 .\r\n\r\nDon't know about macdeployqt but at least the corresponding Linux tool can copy all the libraries not only Qt and it's direct dependencies. Might be worth checking if changing the the orde so that macdeployqt gets run after packaging python helps in any way. If not then the python packaging script needs to be modified. MacOS Building error. \r\n\r\n![\u0421\u043d\u0438\u043c\u043e\u043a \u044d\u043a\u0440\u0430\u043d\u0430 2020-09-25 \u0432 14 53 46](https://user-images.githubusercontent.com/45648018/94264219-f7e11500-ff3e-11ea-90aa-77d2af6d0f07.png)\r\n @SteveMoore18 Please do not post unrelated problems to existing issues. Building error and the build not working are two completely different things. Also your issue is most likely due to use of incompatible r2 version. Please use the version specified in submodule which is also what CI build use, anything else is not guaranteed to work. MacPorts user here. I have gettext installed and my libraries are installed in /opt/local/lib instead, so by re-creating the directory as expected and doing a softlink, I can get Cutter to run for now. A temporary workaround I know, but at least it runs :-) \r\n\r\n`sudo mkdir -p /usr/local/opt/gettext/lib`\r\n`sudo ln -s /opt/local/lib/libintl.8.dylib /usr/local/opt/gettext/lib/libintl.8.dylib`  Hi,\r\n\r\nAs the cross-debug functionality with remote GDB is still in development, I'm searching for the best method to decompile a binary that uses shared objects (external libraries).\r\n\r\nAs example assume this use case:\r\n\r\n- You're running Cutter in Windows.\r\n- Your target binary is a Linux ELF64 with some shared object dependency (in example with \"libc.so.6\").\r\n- In this environment then you want to load the binary in Cutter with Windows, and you can see in the Dashboard the Libraries used by it. Futhermore you have the Relocs page with all the functions imported too. However, the question is how you can \"map\" (aka \"load\") the libraries binaries? For sure, you have the binary file of the library in the local filesystem, so the question is how to load it.\r\n\r\nPlease, can you describe how to achieve this?\r\nAnd if this isn't implemented, then you can consider to add support for it, please?\r\nAnd I'm sorry if this is a newbie question.\r\nThank you!\r\n This isn't a bad question and I don't want to discourage you from learning more about Cutter, but please do not use issue tracker for asking questions. Issue tracker is a tool for Cutter developer to track the work, having it littered with questions would add a lot of noise. There are other communication methods for asking questions and learning more about Cutter.\r\nDoes Github has a way for creating issues which skips this page?\r\n![question](https://user-images.githubusercontent.com/7101031/92367404-0639cf00-f0ff-11ea-93a1-f9bee329c04d.png)\r\n Hi @karliss ,\r\n\r\nSorry! I close then this \"issue\" (not a real issue).\r\n\r\nIn any case, I'm reading a lot about Cutter & Radare2 but I don't know how to map \"shared objects\", specifically when loading Linux ELF binaries inside the Windows version of Cutter. Any idea about where to found info, please?\r\n\r\nRegards.\r\n  **Environment information**\r\n* Operating System: Windows 10\r\n* Cutter version: 1.11.1 (when update to 1.12.0)\r\n* File format: ELF64\r\n * Arch: x86_64\r\n * Type: Executable file\r\n\r\n**Bug description**\r\nNothing append when clicking the help / information button of the update downloader popup, but the cursor change to forbidden icon. Another click will restore normal cursor icon.\r\n\r\n**To reproduce**\r\nSteps to reproduce the behavior:\r\n1. Make Cutter have to update\r\n2. Open it and accept the update on update checker popup\r\n3. Click on the \"?\" button of the downloader popup\r\n\r\n**Expected behavior**\r\nGet changelog of the next version ?\r\n\r\n**Screenshots**\r\n![bug](https://user-images.githubusercontent.com/62804686/92308413-a5df4c00-ef9d-11ea-87fb-affcc28eee3e.gif)\r\n\r\n**Additional context**\r\nI was updating Cutter 1.11.1 to Cutter 1.12.0.  Does it work with Arabic and Japanese?\n\nOn Mon, Aug 31, 2020, 20:52 karliss <notifications@github.com> wrote:\n\n> *Your checklist for this pull request*\n>\n>    - I've read the guidelines for contributing\n>    <https://cutter.re/docs/contributing/code/getting-started.html> to\n>    this repository\n>    - I made sure to follow the project's coding style\n>    <https://cutter.re/docs/contributing/code/development-guidelines.html>\n>    - I've updated the documentation\n>    <https://cutter.re/docs/user-docs.html> with the relevant information\n>    (if needed)\n>\n> *Detailed description*\n>\n> Convert annotation offsets to positions Qt text edit. Wrong positions are\n> obvious when using decompiler based highlighting but it also affects\n> context menu interactions.\n>\n> *Test plan (required)*\n>\n> Before:\n> [image: Screenshot from 2020-08-31 15-35-18]\n> <https://user-images.githubusercontent.com/7101031/91720332-9f1c9780-eb9f-11ea-8e75-c3724e3ff96c.png>\n> After:\n> [image: Screenshot from 2020-08-31 14-36-50]\n> <https://user-images.githubusercontent.com/7101031/91720190-5e248300-eb9f-11ea-8450-45ced09a38b9.png>\n>\n> *Closing issues*\n>\n> Closes #2358 <https://github.com/radareorg/cutter/issues/2358>\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/radareorg/cutter/pull/2412\n> Commit Summary\n>\n>    - Handle non ASCII characters in decompiler widget.\n>\n> File Changes\n>\n>    - *M* src/widgets/DecompilerWidget.cpp\n>    <https://github.com/radareorg/cutter/pull/2412/files#diff-1ea0fa78e52fe552a32fe920225681ba>\n>    (44)\n>\n> Patch Links:\n>\n>    - https://github.com/radareorg/cutter/pull/2412.patch\n>    - https://github.com/radareorg/cutter/pull/2412.diff\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/pull/2412>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABRT7KKT7PY3LWO7L3VMS3SDOMHJANCNFSM4QQPNDHA>\n> .\n>\n  **Is your feature request related to a problem? Please describe.**\r\nCurrently, I am trying to format/organize the decompiled code to make it easy for others to follow it but the code lines sticking to each other, not well-structured and I can't organize it within cutter. \r\n\r\n**Describe the solution you'd like**\r\nBy adding an option for the decompiler widget to automatically format the code and allow manual formatting by making the decompiler widget act as the code editor. > > I am trying to format/organize the decompiled code to make it easy for others to follow it but the code lines sticking to each other\r\n> \r\n> Could you provide an image of code lines sticking to each other? Just wanted to verify if it is the expected behavior.\r\n\r\n![Capture](https://user-images.githubusercontent.com/20806107/91714276-a8036e00-eb8b-11ea-8789-666daf4db224.PNG)\r\n\r\n- I am sorry if I didn't make it clear, what I mean about sticking lines of code is something like the **if** condition within the blue rectangle in the attached capture, As it has no empty line before for separation from the lines above it to make code easier to read.\r\n\r\n- Besides that, I wanted to cut the long string within a red rectangle in the attached capture to multi-lines to make it easier to follow.\r\n\r\n- Briefly, I just want to be able to add spaces and newlines as code editor to organize/format the code to make it easier to follow.\r\n @NirmalManoj \r\n- Firstly, building them from sources will achieve different results than downloading the compiled cutter version from the official site which already contains the r2ghidra plugin by default?\r\n- Secondly, I know that's the expected behavior however I just recommended it in order to make the decompiler more user-friendly. Besides achieving the flexibility to do whole tasks within one place (the decompiler itself). I know that feature maybe will not be provided soon as it may not be essential functionality but it will be cool to get achieved.\r\n\r\nThanks in advance :))\r\n\r\n  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\nPreviously the 'Rename Function' dialog would pop-up in the top left\r\ncorner if triggered inside the Disassembly or Decompiler view. This\r\ncommit changes the behaviour so that the Dialog will now be pop-up in\r\nthe center of the MainWindow by simply replacing the 'parent' pointer of\r\nthe QInputDialog object with that of the mainWindow (`QInputDialog::getText(this->mainWindow, ...`).\r\nSee screenshots below\r\n\r\nBefore (AppImage version):\r\n![before](https://user-images.githubusercontent.com/29666622/91565235-2bca1a00-e942-11ea-9dec-789b0ceedd66.png)\r\nAfter:\r\n![after](https://user-images.githubusercontent.com/29666622/91565231-2b318380-e942-11ea-8b4b-757d88ceb0fd.png)\r\n\r\n**Test plan (required)**\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n1. Select a function inside the Disassembly / Decompiler view\r\n2. Press N or Right-Click and choose the \"Rename Function...\" option\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n haha, yeah it was a pet peeve of mine :p    <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nThis MR adds the remaining options to the Analysis Widget that were proposed by @ITAYC0HEN in https://hackmd.io/@Megabeets/H1jBD3Hxv/edit, which are:\r\n\r\n- `anal.in`\r\n- `anal.prelude`\r\n- `anal.ptrdepth`\r\n\r\nFor the `anal.in` option, I selected the following options only:\r\n\r\n- All executable maps (`io.maps.x`)\r\n- All maps (`io.maps`)\r\n- Current map (`io.map`)\r\n- Raw (`raw`)\r\n- Current block (`block`)\r\n- Current mapped section (`bin.section`)\r\n- All mapped sections (`bin.sections`)\r\n\r\nHowever, if you think other options should be there, I can add them too.\r\n\r\n**Test plan (required)**\r\n\r\n1. Open Cutter and go to Edit -> Preferences - > Analysis\r\n2. Select one or more options in the drop-down \"Search boundaries for analysis\" and check with the console that the value of `anal.in` changes accordingly\r\n3. Change the value of the option \"Pointer depth\" and check with the console that the value of `anal.ptrdepth` changes accordingly\r\n4. Change the value of the option \"Prelude\" and check with the console that the value of `anal.prelude` changes accordingly\r\n5. Close and reopen the dialog, and check that the last selected values for these options are maintained\r\n\r\n![anal-options-2](https://user-images.githubusercontent.com/26287552/91216870-eece0f80-e716-11ea-8090-51a521ab8130.gif)\r\n\r\n**Closing issues**\r\n\r\nCloses #875 \r\n  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nThe `Windows -> Plugins` entry is now disabled by default and only enabled if there are plugins available to load from (see this [issue](https://github.com/radareorg/cutter/issues/2318) for more information). Note that I was unable to set a Tooltip, not sure if that's how you do it in QT (being new to it) but here's the code I implemented and then deleted after I had no success with it:\r\n```C++\r\n      ui->menuPlugins->setToolTip(QString(\"tooltip test\"));\r\n      ui->menuPlugins->setToolTipsVisible(true);\r\n```\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\na) Open Cutter __with__ plugins loaded and check if `Windows -> Plugins` is enabled\r\nb) Open Cutter __without__ any plugins loaded and check if `Windows -> Plugins` is disabled\r\n\r\n![before_after](https://user-images.githubusercontent.com/29666622/90797777-619f4b00-e311-11ea-902c-00c75b23df45.png)\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\ncloses #2318 \r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n > For the tooltip you might try setting it on the action which has plugin menu as submenu instead of menu itself. Not sure if it will work, but it's worth trying.\r\n\r\nSorry, I don't quite understand what you mean here, could you elaborate? Anyways I've read a bit of QT documentation and I don't think it's possible to have a tooltip on a QMenu object. `setToolTipsVisible` also only enables tooltips for it's actions (i.e. the plugins; my bad) so unless I've missed something we could do the following instead\r\n* add a dummy entry to the Plugins menu with a title like \"No plugins loaded, see documentation\" or\r\n* change the title of the menu from Plugins to \"No plugins loaded\" (for which I would then revert the changes inside `MainWindow.ui` and just create an if-else statement instead)  @ITAYC0HEN Yup, sounds good to me. I'm just struggling a bit with the tooltip on the QMenu, since it will only show up for it's actions. I've tried implementing @karliss suggestion but that didn't seem to work either and neither did it with `connect`. Are you guys certain that tooltips can be shown on a specific QMenu? Being new to the Qt Framework I, sadly, couldn't find anything. With the help of the people over at the Qt Forums I managed to finally display the tooltips (and kinda fully understood what you meant karliss). Anyways hit me up if any changes are necessary, other than that I think the pull request should be complete?   <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [ ] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nI added the explanation on how to build docs for Cutter to fix #2310.\r\n\r\n**Test plan (required)**\r\n\r\nBuild docs and check outputs.\r\n\r\n**Closing issues**\r\n\r\n\"closes #2310\" I noticed that I did not explain how to build Shiboken properly in this pull request. However, in my environment, this step seems to be unnecessary. If it is essential, I will add this.\r\n\r\n> Add a section for building Cutter using CMake on macOS. Make sure to instruct how to install most of the things using homebrew and make sure to explain how to build Shiboken properly.\r\n >  Those are the parts that need documentation the most.\r\n\r\nSure. I will add setup part of Shiboken in this documentaiton. @ITAYC0HEN @karliss Thank you so much! I fix this according to your reviews.\r\n  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nThis VS Code configuration aims at ease of setup for newcomers.\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n1. Follow the VS Code setup guide and verify if it works.\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [ ] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nsince it is for both contributing to docs and contribute to code i thought it would be better to put it in common file contributing.rst\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\"closes #2383\"\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n > \r\n> \r\n> I am not sure about having the git 101 on Cutter docs, as I prefer to link to the full tutorial. We are considering having it in its dedicated page.\r\n> \r\n> I am sure that prefer it not to be in the main \"cutter.re/docs/contributing\" page as this page should stay clean and without practical instructions\r\n\r\nchanged to another page, to a separate one > as discussed on DM, please re-format and I'll check then :)\n\nReformatted   <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nAdded documentation button on help screen\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/89870235-348ac400-dbbe-11ea-9f71-690d5f9d61c2.png)\r\n\r\n\r\n\r\n**Test plan (required)**\r\n\r\n1. Checkout the pr on your machine and compile it.\r\n2. Open Cutter\r\n3. Go the the \"Help\" menu and click on the \"Documentation\" button\r\n4. Observe that your browser was opened with the user-documentation of Cutter\r\n\r\n\r\n**Closing issues**\r\ncloses #2343\r\n\r\n  **Environment information**\r\n* Operating System: Arch Linux x86_64 5.7.12-zen1-1-zen\r\n* Cutter version: 1.10.3\r\n* Obtained from: \r\n  - [ ] Built from source\r\n  - [ ] Downloaded release from Cutter website or GitHub \r\n  - [x] Distribution repository\r\n\r\n**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nWhen renaming functions, it only shows the renamed function in the comment. Ghidra decompiler was not able to shows the renamed function.\r\n\r\n**To Reproduce**\r\n1. Rename function\r\n2. Refresh decompiler\r\n\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nShows renamed function in decompiler\r\n\r\n ![Peek 2020-08-09 11-56](https://user-images.githubusercontent.com/65988663/89724591-bac8ce00-da37-11ea-8b4f-215c885b9f20.gif)\r\n\r\n[vcsAPIFORWBF.zip](https://github.com/radareorg/cutter/files/5046748/vcsAPIFORWBF.zip)\r\n\r\n\r\nThe gif and the binary I'm working on. Function in graph is sym.vcsAPIFORWBF.dll_vcsDatabaseDeleteUser  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n**Detailed description**\r\n\r\nThe recent SDB header PR [#17249](https://github.com/radareorg/radare2/pull/17249/) requires us to add the sdb header's path separately from the other r2 headers.\r\n\r\n**Test plan (required)**\r\n\r\nBuild Cutter with the updated submodule.  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\nadded documentation button on help screen \r\n**Test plan (required)**\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\"closes #2343\"\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n @7h3qu1rkyb1t Hi. I see you closed a PR and opened a new one so I think you are unaware of force-push to the branch. What it means that you can amend previous commits and clean up the mess in your fork. Please don't close PRs for something so trivial. I suggest you use some git GUI client like [SublimeMerge](https://sublimemerge.com) or GitKraken, which will help easily and intuitively modify commit history and force push etc. Lastly, always create a new branch for a PR(based on upstream master)\r\n Ok got it. I don't know much about git thanks. You mean whenever i create a pull request after merging it i should close that one right? And further request will made by again forking No. I mean create a new branch in your fork every time you start working on something and delete that branch once the PR gets merged. No need to fork again and also leave the fork master as is. Got it like said i created another branch and committed from that branch. what should i do with this?  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nGraphviz is not enabled for AppImage builds. This PR adds `CUTTER_ENABLE_GRAPHVIZ=ON` to cmake options.\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n1. Make sure it builds correctly\r\n2. Check build appimage for the Graphviz\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\nCloses #2365\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x]  I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository]\r\n\r\n- [ ] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\nI wanted to contribute to this project but i didn't had much knowledge so i thought documentation was perfect. its a small change but if these kind of small changes are fine i am happy to do these in future as i am just started using cutter.\r\n\r\n**Test plan (required)**\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n ok  **Is your feature request related to a problem? Please describe.**\r\nBy now, the debug mode is having very hard background color of current instruction that program is running to (i don't know how to call it). Let me explain it (screenshot is bellow):\r\n1. This is color when program hits break point\r\n![Screenshot at 2020-08-04 10-09-41](https://user-images.githubusercontent.com/29118926/89248735-fd397780-d5ff-11ea-8f0f-6e5626bbf127.png)\r\n2. Color after user click on `step`\r\n![Screenshot at 2020-08-04 10-10-24](https://user-images.githubusercontent.com/29118926/89248773-15a99200-d600-11ea-9b81-4c4c049640e5.png)\r\nThe color is pretty dark and similar the background color of current program\r\n3. After i click on different code block (or different instruction)\r\n![Screenshot at 2020-08-04 10-12-09](https://user-images.githubusercontent.com/29118926/89248983-9072ad00-d600-11ea-8304-640c884c3153.png)\r\n\r\n-> So the problem here is current instruction is a \"focused\" instruction so it is using both color of mouse clicking highlight and debug. The final color is mixed from 2 color.\r\n\r\n**Describe the solution you'd like**\r\nAdd something like green dot or green arrow like \r\n`-> mov eax, ebx` or `* move eax, ebx`.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nRemove highlight color? It isn't very nice because user can click on widget anyway.\r\n\r\n**Additional context**\r\n\r\nAfter click `step into`, the color went to same dark color\r\n![Screenshot at 2020-08-04 10-18-17](https://user-images.githubusercontent.com/29118926/89249221-37574900-d601-11ea-93e6-86c5532bc846.png)\r\n\r\n Well i think the problem is both color theme and the overlapping problem. I think add icon or any object to display is more complex than just adjust the theme. Does QT support something like border color so if you get my idea, the color can be overlapped but it still has the different border color which could be easier to see.   Is a popup saying `can't do it` really any better than doing nothing? How about showing this info on the status bar instead? I find it a bit annoying to move the mouse to close it every time I press N by mistake.   -\u05e3\r\nwould have these levels in the slider:\r\n\r\nNone -> Automatic -> Custom \r\n\r\nfor automatic I'd go for \"aaa\" unless you believe that \"aaaa\" is better (but not both)  Hi,\r\n\r\nI know that the GCC 4.7 is quite old, but it's the default compiler with Debian 7 and I'm trying to compile Cutter inside this platform (the radare2 compiles, and I'm using a recent Qt5.7 and all other dependencies). So far, I fixed some of the compiling errors generated by the not fully C+11 conformance of GCC 4.7; but I don't know how to fix this:\r\n\r\n```\r\n[ 13%] Building CXX object CMakeFiles/Cutter.dir/widgets/GraphGridLayout.cpp.o\r\nIn file included from /home/user/cutter/src/widgets/GraphGridLayout.cpp:10:0:\r\n/home/user/cutter/src/common/BinaryTrees.h:115:21: error: \u2018using PointSetSegmentTree<NodeType, FinalType>::BaseType::BaseType\u2019 conflicts with a previous declaration\r\n/home/user/cutter/src/common/BinaryTrees.h:113:58: note: previous declaration \u2018using BaseType = class SegmentTreeBase<NodeType, FinalType>\u2019\r\n/home/user/cutter/src/widgets/GraphGridLayout.cpp: In member function \u2018void GraphGridLayout::calculateEdgeMainColumn(GraphGridLayout::LayoutState&) const\u2019:\r\n/home/user/cutter/src/widgets/GraphGridLayout.cpp:563:57: error: no matching function for call to \u2018PointSetMinTree::PointSetMinTree(size_t, int)\u2019\r\n/home/user/cutter/src/widgets/GraphGridLayout.cpp:563:57: note: candidates are:\r\nIn file included from /home/user/cutter/src/widgets/GraphGridLayout.cpp:10:0:\r\n/home/user/cutter/src/common/BinaryTrees.h:141:7: note: PointSetMinTree::PointSetMinTree(const PointSetMinTree&)\r\n/home/user/cutter/src/common/BinaryTrees.h:141:7: note:   candidate expects 1 argument, 2 provided\r\n/home/user/cutter/src/common/BinaryTrees.h:141:7: note: PointSetMinTree::PointSetMinTree(PointSetMinTree&&)\r\n/home/user/cutter/src/common/BinaryTrees.h:141:7: note:   candidate expects 1 argument, 2 provided\r\n/home/user/cutter/src/widgets/GraphGridLayout.cpp: In function \u2018void optimizeLinearProgramPass(size_t, std::vector<int>, std::vector<std::pair<std::pair<int, int>, int> >, std::vector<std::pair<std::pair<int, int>, int> >, std::vector<int>&, bool)\u2019:\r\n/home/user/cutter/src/widgets/GraphGridLayout.cpp:1339:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\nmake[2]: *** [CMakeFiles/Cutter.dir/widgets/GraphGridLayout.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/Cutter.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\n\r\nThe problem is caused by this code inside `cutter/src/common/BinaryTrees.h`:\r\n```\r\ntemplate<class NodeType, class FinalType>\r\nclass PointSetSegmentTree : public SegmentTreeBase<NodeType, FinalType>\r\n{\r\n    using BaseType = SegmentTreeBase<NodeType, FinalType>;\r\npublic:\r\n    using BaseType::BaseType;\r\n```\r\nThe problem is the second forward alias declaration, as the comiler interprets without using the previous `BaseType` alias.\r\nAny idea to fix this error?\r\n\r\nThank you!\r\n\r\n Hi @XVilka ,\r\n\r\n> Why not to install gcc-5 which should be available in Wheezy? https://wiki.debian.org/GCC5\r\n\r\nI'll try, but I'm not sure if this will work, as I need to recompile *all* with the new GCC5 (including Qt5.7).\r\n\r\n> It would be much more useful if you spent your energy improving or at least investigating the remote debugging problems in radare2.\r\n\r\nPerhaps it isn't a waste of time... when using cross-compiling for embedded systems it's very common that _ancient_ compilers are used. And if we need to execute Cutter on such platforms, then we need to compile with such compilers. That's will be true until _full_ remote debugging will be supported. In any case, I'll try to not consume the time of the great developers of this project. Thank you all for your comments! :wink: \r\n\r\nRegards.\r\n   should we add two new options to the context menu?\r\nShow X-Refs (default with shortcut X)\r\nShow X-Refs To (no shortcut)\r\nShow X-Refs From (no shortcut)\r\nor just hide if the found results is 0 (we will still show that nothing found for the Xrefs from)  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nThis PR implements an X-Refs action for references (function names, global variables, constant variables). See the GIFs\r\n\r\nGlobal variables\r\n![Xrefs-globals](https://user-images.githubusercontent.com/18501167/88966211-95b2bd80-d2c9-11ea-8d1b-d96bf8fb6676.gif)\r\nFunctions\r\n![Xrefs-functions](https://user-images.githubusercontent.com/18501167/88966224-9a777180-d2c9-11ea-9065-177e8751223b.gif)\r\nConstants\r\n![Xrefs-constants](https://user-images.githubusercontent.com/18501167/88966236-9ea38f00-d2c9-11ea-9690-0ba75a1fb8f8.gif)\r\n\r\n\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n1. Open any binary.\r\n2. Select Show X-Refs action after clicking any function name/global variable/constant variable. It should open the X-Refs Dialog. Observe if all X-Refs are shown.\r\n3. To make sure, go to the reference in the disassembly widget and open X-Refs from there. Compare the two dialogs that you got, from the disassembly and from the decompiler, and ensure that they are the same.\r\n4. Check code.\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n**Update**\r\n1. Fetch [PR #17386](https://github.com/radareorg/radare2/pull/17386) before compiling this PR.\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nThe important modifications and additions in this PR are:\r\n1. Saves the previous function's address and if the newly decompiled function is the same as the previous one, the scroll position will remain the same.\r\n2. Modified signal `breakpointsChanged()` to `breakpointsChanged(RVA offset)`. Removed `emit instructionChanged` from all functions that emit `breakpointsChanged`.\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\nDisplay jumps while toggling breakpoint (Before)\r\n![BeforeFixingDisplayJumping](https://user-images.githubusercontent.com/18501167/88939657-68074d80-d2a4-11ea-9c4c-7b5eb64f00bf.gif)\r\nDisplay position doesn't change while toggling breakpoint (After)\r\n![AfterFixingDisplayJumping](https://user-images.githubusercontent.com/18501167/88939698-76ee0000-d2a4-11ea-8b4b-0fbab9300b4d.gif)\r\n\r\nYou can notice the same change in other actions also, e.g. Add/Rename/Remove names, Refresh, Add/Delete/Modify comments, etc.\r\n\r\n**Test plan (required)**\r\n1. Test to make sure that the breakpoints are toggled and highlighted properly in the decompiler and ensure if the display position is getting changed.\r\n2. See if the display position is changing when the view is refreshed using the refresh button.\r\n3. Notice the changes in the display that happens when an instruction is modified. For example, change an if condition from `je address` to `jne address` and see if the display changes in an undesirable way.\r\n4. Open the following three widgets in sync (Decompiler, Disassembly, Graph). Toggle breakpoints and make sure that every single change is reflected properly in all the widgets.\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\ncloses #2270 \r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  **Environment information**\r\n* Operating System: Windows 10\r\n* Cutter version: Cutter-v1.11.0-x64\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded release from Cutter website or GitHub \r\n  - [ ] Distribution repository\r\n* File format:\r\n\r\n**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nI tried install few cutter plugins. I install it to directory from (edit->preferences->plugins). I restarted a cutter, but list of plugins is still empty. \r\n\r\n**Expected behavior**\r\n\r\nList of plugins shouldn't be empty\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n Hey! Thank you for reporting this issue.\r\n\r\nI was able to verify that the list is empty even when the plugins that are shipped by default are installed (r2ghidra, r2dec).\r\n_(The plugins are shipped by default in the following path: `Cutter-v1.11.0-x64.Windows\\lib\\plugins`)_\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/88893777-8858ed00-d24f-11ea-8069-40fde210893c.png)\r\n\r\n\r\nWhat plugins did you try to install? https://github.com/oddcoder/CutterDRcov  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, the Decompiler widget is not shown to the users in the dock in the default layout. Instead, the user need to know that Cutter has a decompiler widget or to look under `Windows` menu to see it.\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/88892191-15e70d80-d24d-11ea-88b8-abb52fb9c940.png)\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nI'd like to see the decompiler widget as part of the dock in the default layout.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nAn alternative is to make a check to make sure to show the widget only if at least one decompiler is installed. I don't like this option as I want users to install decompilers and know about this option. i have just added the decompiler widget to default layout anything else?  Has this been resolved? If not I'd like to take it.  **Your checklist for this pull request**\r\n\r\n- [\ud83d\uddf8] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [\ud83d\uddf8] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [\ud83d\uddf8] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n**Detailed description**\r\n\r\nI'm trying to handle multiple Pascal (8-bit length) strings in a binary m68k dump which, as they are not C-string and have no null termination, the automatic string parsing barfs on.. so, till I can figure out how to write a pascal string parser for Cutter, I have opted to improve the usability of the advanced string definition dialog as it was bad.\r\n\r\nI'm having to convert hundreds of strings by hand, so the workflow of having to open the menu, navigate to the correct submenu, open the string dialog, click into the size field, and then click ok, was starting to mess up my wrist as well as being very error-prone. This converts all these actions to keyboard usage.\r\n\r\nMy original plan was to bind this workflow to the 'S' key (or rebind normal string handling to S and bind this to A for \"Advanced string\", however I could not get this to work.\r\n\r\n**Test plan (required)**\r\n\r\n * Open a binary dump that has a non-C string in it (for example, https://github.com/lethalbit/IBM-9348-002-Microcode/blob/main/bins_modified/88780-12427-U502-5X4-Rev.6.81-board0-PROM.elf)\r\n * Go to the string address (0x104 in the example)\r\n * Use the shortcut Shift + A to open the advanced string dialog\r\n * Enter the length of the string (now the default focused item, 60 characters in my example file)\r\n * Use the Enter key to confirm the entry instead of using the OK button\r\n\r\nIf all is working as it should, you should now see the string properly and have not had to touch the mouse to get to that point.\r\n\r\n**Closing issues**\r\n\r\nNone\r\n I have done the rebase requested. I'll poke the UI files tomorrow I hadn't got back to this yet because of my $dayJob workload and managing my mental health..\r\nI will try to get to this in the next week once I finish melting from this weekend's heatwave.\r\n\r\nThank you for the encouragement and your patience with me. @karliss or @ITAYC0HEN I have now updated my branch and modified the UI file as suggested.\r\n\r\nI'd be interested to hear your thoughts on usability, especially as I find it more usable if the buttons are rebound to S and Shift + S rather than A and Shift + A (S for String..) but I'm having trouble binding the auto string stuff to S.. This does feel much better now though.\r\n\r\nMy closing thought is that Cutter is built in C++11 mode, but the pointer in EditStringDialog for the UI is a raw pointer: how would you feel about having this converted to std::unique_ptr<> so the destructor and manual memory management went away? Ahhhh, that makes a ton of sense.. I couldn't find the binding for S so had assumed it was an unused key but this makes a ton of sense Aye, I'm familiar with using modern C++ with Qt5 having done it on a prior project.\r\n\r\nI have made that change and rebased against master so it cleanly merges again I think I'd want to fix that separately, in part because I'm not sure how the size field of the dialog should really behave and it requires going after all usages of the dialog.\r\n\r\nAs for the tab order, you make an interesting point though I put address before the buttons so that if you want to change the address, you don't have to tab all the way around. Hitting enter in any of the input boxes accepts the dialog after all so being able to tab to the buttons is mostly Qt not allowing me to not do that (I think it is possible, but it makes little sense here) and needing to be able to access the cancel button via keyboard. I think the better way to fix this (and I will update the PR with this if you agree) is to move the address box visually to the logical tab order position so the input fields are the right way around for the tab order. I've squashed out one of the more silly commits, and I've done the re-ordering discussed. I think this is now ready for merge.  Hi,\r\n\r\nFirst of all, I need to describe my _use case_:\r\n\r\n- I need to fix a closed source binary in a Linux embedded system. The AppImage doesn't work as the system libraries are quite old. Then I'm triying to compile Cutter in a _similar_ Linux environment (mainly using the same kernel version) and generate a _solid_ package with all the dependencies (using the good tool Exodus (https://github.com/intoli/exodus). However, the problem is to compile Cutter on ancient environments (and because it can't work in a Client-Server mode as explained in #2311 ).\r\n\r\nFor example, after fixing the radare2 troubles (#2316), I discovered that only with Qt5 v5.5 or up it's possible to compile Cutter. So I need to recompile a full Qt5 library from scratch. And the problem is that versions 5.9 and 5.8 doesn't compile, and 5.5, 5.6 and 5.7 seems to be incompatible with Cutter _when compiling with them_.\r\n\r\nSo here my suggestion: Provide the option to enable the full compilation of the Qt5 with only the required modules/libraries. Then link (optionally) Cutter with it for a new version without the Qt5 dependecy.\r\n\r\nWhat you think about this idea? It has sense?\r\nRegards.\r\n     Hi @karliss ,\r\n\r\nI understand well what you say. Futhermore, I now how to configure/compile Qt; so that's not the question. However:\r\n\r\n- In some non-recent Linux environments is quite complex to compile recent Qt versions.\r\n- Some old GCC versions (4.7 for example) has some \"bugs\" or \"pseudo-bugs\" that make very complex to compile _current_ Cutter code.\r\n- The Qt library is _VERY_ modular. And not all modules/plugins/libraries are necessary to compile Cutter.\r\n\r\nSo, I try to reformulate my request:\r\n\r\n- Can you provide a script for a custom compilation of Qt with _only_ the minimal requirements?\r\n\r\nThis will simplifies the generation of a _local_ qt5 library to support the compilation of the Cutter (using the corresponding `QTDIR` and `PATH` & `LD_LIBRARY_PATH`).\r\n\r\nI hope it's more clear now, right?\r\nRegards.\r\n\r\n Hi @karliss ,\r\n\r\nAs example (current Cutter repo with Qt5.7.0):\r\n```\r\n[ 18%] Building CXX object CMakeFiles/Cutter.dir/dialogs/AboutDialog.cpp.o\r\n/home/user/cutter/src/dialogs/AboutDialog.cpp: In lambda function:\r\n/home/user/cutter/src/dialogs/AboutDialog.cpp:102:55: error: \u2018this\u2019 was not captured for this lambda function\r\n/home/user/cutter/src/dialogs/AboutDialog.cpp:105:71: error: \u2018this\u2019 was not captured for this lambda function\r\n/home/user/cutter/src/dialogs/AboutDialog.cpp:105:100: error: \u2018this\u2019 was not captured for this lambda function\r\nmake[2]: *** [CMakeFiles/Cutter.dir/dialogs/AboutDialog.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/Cutter.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\nAnd this error can be fixed with a simple:\r\n```\r\n    connect(&updateWorker, &UpdateWorker::checkComplete,\r\n-    [&updateWorker](const QVersionNumber & version, const QString & error) {\r\n+    [&updateWorker,this](const QVersionNumber & version, const QString & error) {\r\n        if (!error.isEmpty()) {\r\n            QMessageBox::critical(nullptr, tr(\"Error!\"), error);\r\n```\r\nHowever, other more complex errors still appears:\r\n```\r\n/home/usercutter/src/widgets/DisassemblyWidget.cpp: In member function \u2018virtual void DisassemblyLeftPanel::paintEvent(QPaintEvent*)\u2019:\r\n/home/usercutter/src/widgets/DisassemblyWidget.cpp:857:31: error: \u2018INT32_MAX\u2019 was not declared in this scope\r\nIn file included from /home/usercutter/src/widgets/CutterDockWidget.h:5:0,\r\n                 from /home/usercutter/src/plugins/CutterPlugin.h:8,\r\n                 from /home/usercutter/src/core/Cutter.h:26,\r\n                 from /home/usercutter/src/widgets/DisassemblyWidget.h:4,\r\n                 from /home/usercutter/src/widgets/DisassemblyWidget.cpp:1:\r\n/home/usercutter/src/common/RefreshDeferrer.h: In instantiation of \u2018class ReplacingRefreshDeferrerAccumulator<long long unsigned int>\u2019:\r\n/home/usercutter/src/widgets/CutterDockWidget.h:53:119:   required from \u2018RefreshDeferrer* CutterDockWidget::createReplacingRefreshDeferrer(bool, Func) [with ParamResult = long long unsigned int; Func = DisassemblyWidget::DisassemblyWidget(MainWindow*)::<lambda(const RVA*)>]\u2019\r\n/home/usercutter/src/widgets/DisassemblyWidget.cpp:113:6:   required from here\r\n/home/usercutter/src/common/RefreshDeferrer.h:66:5: error: looser throw specifier for \u2018ReplacingRefreshDeferrerAccumulator<T>::~ReplacingRefreshDeferrerAccumulator() [with T = long long unsigned int]\u2019\r\n/home/usercutter/src/common/RefreshDeferrer.h:21:13: error:   overriding \u2018virtual RefreshDeferrerAccumulator::~RefreshDeferrerAccumulator() noexcept (true)\u2019\r\nIn file included from /usr/local/qt-5.7.0/include/QtWidgets/qwidget.h:44:0,\r\n                 from /usr/local/qt-5.7.0/include/QtWidgets/qmenu.h:43,\r\n                 from /usr/local/qt-5.7.0/include/QtWidgets/QMenu:1,\r\n                 from /home/usercutter/src/core/Cutter.h:9,\r\n                 from /home/usercutter/src/widgets/DisassemblyWidget.h:4,\r\n                 from /home/usercutter/src/widgets/DisassemblyWidget.cpp:1:\r\n/usr/local/qt-5.7.0/include/QtCore/qobject.h: At global scope:\r\n/usr/local/qt-5.7.0/include/QtCore/qobject.h:299:13: error: \u2018static typename QtPrivate::QEnableIf<(QtPrivate::FunctionPointer<Func2>::ArgumentCount == (-1)), QMetaObject::Connection>::Type QObject::connect(const typename QtPrivate::FunctionPointer<Func1>::Object*, Func1, const QObject*, Func2, Qt::ConnectionType) [with Func1 = void (RefreshDeferrer::*)(void*); Func2 = CutterDockWidget::createReplacingRefreshDeferrer(bool, Func) [with ParamResult = long long unsigned int; Func = DisassemblyWidget::DisassemblyWidget(MainWindow*)::<lambda(const RVA*)>]::<lambda(RefreshDeferrerParamsResult)>; typename QtPrivate::QEnableIf<(QtPrivate::FunctionPointer<Func2>::ArgumentCount == (-1)), QMetaObject::Connection>::Type = QMetaObject::Connection; typename QtPrivate::FunctionPointer<Func1>::Object = RefreshDeferrer; QObject = QObject]\u2019, declared using local type \u2018CutterDockWidget::createReplacingRefreshDeferrer(bool, Func) [with ParamResult = long long unsigned int; Func = DisassemblyWidget::DisassemblyWidget(MainWindow*)::<lambda(const RVA*)>]::<lambda(RefreshDeferrerParamsResult)>\u2019, is used but never defined [-fpermissive]\r\nmake[2]: *** [CMakeFiles/Cutter.dir/widgets/DisassemblyWidget.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/Cutter.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\nSo, if you can, try to compile Cutter using the GCC 4.7 version.\r\n\r\nRegards.\r\n Hi @karliss and @XVilka ,\r\n\r\nThank you for your responses. I feel this willl be useful for other users, so for this reason I post some more comments (sorry to continue writing in a closed issue):\r\n\r\n- At time the compilation of the radare2 on ancient platforms is solved.\r\n- A manual compilation of the Qt library is not a problem. The problem is to know the minimal requirements of the configuration of this library when compiling Cutter with it. I really think that it will useful to know the best configuration to achieve that.\r\n- Not all C++ compilers support C11. So in order to support environments _without_ recent GCC versions, I feel it will be useful to provide minimal support.\r\n- As Cutter is a GUI for radare2, and a GUI improves a lot the usability, it will be interesting to run it in the same platforms.\r\n\r\nI understand the effort to support ancient environments. Perhaps much effort for less, but almost it will be profitable to help to users that try to do it.\r\n\r\nFor example: here my current configuration of the Qt5.7 for Debian 7 when compiling it for Cutter:\r\n```\r\n../qt5/configure -prefix /usr/local/qt-5.7.0 \\\r\n-skip serialbus -skip virtualkeyboard \\\r\n-skip qtmultimedia -skip qtquick1 -skip qtquickcontrols -skip qtsensors \\\r\n-qt-zlib -qt-libjpeg -qt-libpng -qt-xcb -qt-freetype -qt-pcre \\\r\n-no-opengl -no-egl -no-dbus -no-eglfs -no-directfb -no-linuxfb \\\r\n-no-accessibility -no-cups -no-feature-accessibility \\\r\n-opensource -nomake examples -nomake tests\r\n```\r\nThis compiles fine with the stock compiler environment. Now I'm trying to fix the C++ erros when compiling Cutter.\r\n\r\nI hope it helps. \ud83d\ude04  Hey Lars! :) Thank you for the detailed explanations and for taking the time to properly describe your requests. \r\n\r\nYour request is legit but isn't a priority of ours and isn't a popular request we get frequently. Moreover, maintaining such list of minimal requirements isn't something we would like to put efforts in. \r\n\r\nThat said, I invite you to send us a pull request to the docs or to the building scripts with the information you would want to see (so others can use it). I can't guarantee we will accept such PR but we will discuss and consider it. Alternatively, you can maintain such list in a separated personal repository.\r\n\r\nThank you again! <3  Tested on a clean Windows 10. Cutter opened correctly and r2ghidra and r2dec are recognized in the Decompiler widget. \r\n\r\n:heavy_check_mark: r2ghidra is working properly.\r\n:x: r2dec crashed for many functions (including `entry0`) but for some it works correctly\r\n\r\n\r\nI tested with the binary: `r_bin.dll` which is shipped with Cutter\r\n![image](https://user-images.githubusercontent.com/20182642/88890998-15e60e00-d24b-11ea-92da-da9e5507eb54.png)\r\n\r\n\r\nThe log from the `pddi` command: [pddi.log](https://github.com/radareorg/cutter/files/4999401/pddi.log)\r\n\r\n\r\nCC @wargio \r\n  <!-- Filling this template is mandatory -->\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nThis PR adds 'Initial Analysis taking a long time due to missing background analysis feature' to user-docs/common-issues.\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\nBuild and run the docs.\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\nRelated #2334 #1856\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n @karliss leaving the related issues aside, is it a good addition to the docs?  > Having a note about dealing with large binaries would be good, but current message is wrong. I will try to write down the required adjustments tomorrow.\r\n\r\nping @karliss  @ITAYC0HEN How about linking [this](https://youtu.be/w8Bl5ZSmmZM?t=292)? :)  <!-- Filling this template is mandatory -->\r\nAdds an introduction page for different Cutter widgets in User Docs. I prefer full video introduction for Cutter but until that's done, we can utilize gifs for this.\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nAdding gif images for the widgets with a little summary. As mentioned in #2259 it adds significant bloat to the repo and can be split in a separate repo as discussed in #2056.\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\nBuild docs and run.\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n @karliss agree. Gifs are a bit awkward but this is what I could do until someone does a good intro video. We can keep this open and replace gifs with ss if that's done. _Ignoring the file sizes and their storage location_\r\n\r\nConceptually I like gifs, but sometimes it's too much and unnecessary. I second Karliss and say that some widgets doesn't need gifs at the moment.\r\n\r\n**Gifs**\r\nGraph,\r\nDisassembly\r\nHexdump\r\n\r\n**No gifs**\r\nDashboard\r\nStrings\r\nSearch\r\n\r\n\r\nNow, in the future I'd like every widget to have its own page. It's not rare that we get questions on our chats asking how to do X and Y while they are hiding in a shortcut, a double click or a right-click. Describing each column, menu item and more is very helpful.\r\nWhen each widget get their own page, I can see how some of the explanations can be joined with a gifs. For example, in the Strings widget page you can imagine a subtitle \"Find references to the string\" which will havea gif to show `Right Click -> Show x-refs` and the menu that will be opened.\r\n\r\nThat said, gifs are harder to maintain and as changes introduce, gifs quickly become outdated (since they show more views than a regular screenshot, e.g context menus)\r\n\r\n\r\n What is the plan then ? :) @ITAYC0HEN I can remove gifs but on my small screen, it's hard to take full ss (the reason why Dashboard widget is a gif). Should we open an issue for this? Because it's a good time to have some visuals(moving, preferably). Catch me next week and I will be able to record some gifs and take screenshots @ITAYC0HEN @ITAYC0HEN what you think of the header `Widgets`? Just thought of changing it to `Views` as it's in user docs. Also, we can accommodate views like `Load Options` in here, which are important part of docs but I not sure if they are widgets(?) @ITAYC0HEN Both. The description I should do this weekend. The docs moving process will take a while, I assume.  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nThis PR adds a new \"Analysis\" section to the Preferences dialog, so that the user can modify some of the `anal.*` options and  reanalyze the file without having to do it through the console.\r\n\r\nFor the sake of completeness, I'm repeating the same considerations I put on #2228 here:\r\n\r\n1. To keep it simple, for now I narrowed down the selected options at https://hackmd.io/@Megabeets/H1jBD3Hxv/edit to only those that have boolean values. When I have some feedback on the current code, I can add the remaining options, in this or subsequent PRs.\r\n2. In general, I tried to keep the code as simple as possible and modify existing files as little as possible. For example, I chose to use the `Core()->getConfigb` method directly instead of `Config()->getConfig` to avoid having to modify this one.\r\n3. Similarly, I decided to use the already existing `AnalTask` to handle the analysis. As a consequence, the title of the async task dialog is \"Initial Analysis\" and you can see the message \"Loading the file...\", which is not quite accurate:\r\n![screenshot](https://user-images.githubusercontent.com/26287552/88467570-8d790d80-ced8-11ea-98c4-cfaff09035db.png)\r\nHowever, I thought it was OK, for now at least.\r\n4. The selected options are **not** maintained between two different sessions. However, if you think it's worth it, I can add it, as well as a \"Restore defaults\" button (just as in the Disassembly section).\r\n5. I chose the icon `cog_light.svg`, since it seemed that a cog is a good representation for \"Analysis\" and it was already there. Let me know if that's OK, or what other icon would you think fits better. Also, I took into account that for the light theme the color of the icon changes, so added the corresponding image too.\r\n\r\nSome other thoughts I had:\r\n\r\n6. Now, the analyze button performs anly automated analysis (`aaa`). Maybe in the future we can add other options, or a slider just as in the initial dialog.\r\n7. I did not add any documentation, as I didn't find anything referring to the Preferences dialog, but I can add it if needed.\r\n\r\n**Test plan (required)**\r\n\r\n1. Open a file without analyzing it\r\n2. Go to Preferences -> Edit -> Analysis. The `anal.jmp.ref` and `anal.jmp.tbl` checkboxes should be the only ones checked.\r\n3. In the console, print the value of some of the `anal.*` options and check they match the checkbox (unchecked-false/checked-true. For instance, `e anal.autoname` should return `false`.\r\n4. Check and uncheck some boxes and verify that the returned value in the console for the corresponding configuration parameter has the correct value.\r\n5. Close the Preferences dialog, reopen it and verify that the Analysis options are the same as before closing it.\r\n6. Click on the analyze button. When the analysis finishes, verify that all the views have refreshed.\r\n7. Change to the light theme and check that the icon of the Analyze section is of the same color than the rest.\r\n![cutter-analysis-dialog](https://user-images.githubusercontent.com/26287552/88467884-4bea6180-cedc-11ea-9f35-cf10d7c999ea.gif)\r\n\r\n**Closing issues**\r\nCloses #2228 \r\n Thanks for your feedback @karliss! That makes sense, if adding a new Analysis dialog was being considered. \r\n\r\nOf course, I can take some of these options from this section. However, I think that having the analysis options in two different places can be little bit confusing for the user. So maybe it would be worth choosing one of the two alternatives (analysis section in preferences dialog vs \"standalone\" analysis dialog) and putting all the options in the same place. What do you think?\r\n\r\nI don't have any strong opinions on this at all, I'm just sharing some thoughts so we can find the best approach :smile:  Hi @karliss, no worries, I am not discouraged at all! Actually it's quite the contrary :wink: I like to discuss the options and in the end what we all want is to find the best one, so I'm all ears!\r\n\r\nAs for the analyze button, I put it because in the list that @ITAYC0HEN shared (https://hackmd.io/@Megabeets/H1jBD3Hxv/edit) there was a line stating _Assuming there will be an \u201cAnalyze\u201d button in this view_, so I thought that it was expected. If it's not, I'll take it out, no problem! Let me know what you think. Thanks for the feedback!\r\n\r\nI have made the suggested modifications. In the following video you can see:\r\n\r\n1. The tooltip of the \"Analyze program\" button\r\n2. The new menu item `File->Analyze Program`, with the tooltip\r\n3. The Analysis dialog without the \"Loading the file\" log\r\n4. The Analysis dialog with the title \"Analyzing Program\" (I do not show it, but the title remains \"Initial Analysis\" when loading a binary and analyzing straight away)\r\n\r\n![cutter-analysis-v2](https://user-images.githubusercontent.com/26287552/89470401-ffc0dc00-d77b-11ea-9036-688a6302f065.gif)\r\n\r\nI moved the contents of the method `AnalOptionsWidget::analyze` to `MainWindow::on_actionAnalyze_triggered` (which was already defined, but it was empty), since it seemed that the TODO indicated it was the right place to put it. Also, then I could use the same code for the new menu item and the widget button.\r\n\r\nI also added some documentation, let me know if that's enough.\r\n Thank you!! :smile:   **Is your request related to a problem? Please describe.**\r\n\r\nThe interface of Cutter is full of mixed types of titles that are not unified. Since we don't have guidelines for these, we need to create ones and make sure that the usage of letter-casing in titles is consistent throughout the interface.\r\n\r\n**Type of casings:**\r\nall capital (AC) - \"RESET SETTINGS\"\r\nmixed case (MC) - \"Export as code\"\r\ntitle case (TC) - \"Save As...\"\r\n\r\nIn the image, an example of an inconsistent menu:\r\n![image](https://user-images.githubusercontent.com/20182642/88454398-0e53ed00-ce78-11ea-9b8d-e54baef42897.png)\r\n\r\n**Describe the solution you'd like**\r\n\r\n1. Decide on a guidelines based on UX best-practices (~~and not personal taste of developers~~)\r\n2. Document the guidelines in the docs for developers\r\n3. Change all the menu items to fit to the chosen decision \r\n\r\n\r\n**Additional context**\r\n\r\nReferences: \r\n- [Why letter casing is important to consider during design decisions](https://uxplanet.org/why-letter-casing-is-important-to-consider-during-design-decisions-50402acd0a4e)\r\n- [Headline Capitalization for UX: Title Case vs. Sentence Case](https://www.herosmyth.com/article/headline-capitalization-ux-title-case-vs-sentence-case)\r\n- [A thorough, detailed, comprehensive, methodical guide to capitalizing strings in our user interface](https://medium.design/a-thorough-detailed-comprehensive-methodical-guide-to-capitalizing-strings-in-our-user-interface-11b39da146f3)\r\n- [Collection of Style guides from big companies and organizations](https://www.uxwritinglibrary.com/inspiration)\r\n\r\n I consulted with UX experts and they all recommended to go for the \"Sentence-style capitalization\" for menu items as in Cutter.\r\nUpdated the issues with another reference that collects style guides of big companies and organizations (e.g [Microsoft's](https://docs.microsoft.com/en-us/style-guide/capitalization))\r\n And more\r\n- elementary OS https://elementary.io/docs/human-interface-guidelines#capitalization  **Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nThis pull request updates a menu item text to make it clearer for the reader\r\n\r\n**Test plan (required)**\r\n\r\nGo to File menu and make sure the action says \"Run radare2 script\" and not \"Run Script\".\r\nMake sure that it works and indeed running a script.\r\nMake sure that the docs are updated correctyl\r\n\r\n**Related issues**\r\n\r\nRelated to #2271\r\n  **Environment information**\r\n* Operating System: ubuntu 18.04\r\n* Cutter version: 1.11.0\r\n* File format: pe\r\n * Arch: x86\r\n * Type: EXEC (Executable file)\r\n\r\n**Describe the bug**\r\nCrash when I try to seek into a function while the decompiler widget is open.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open the Cutter project (x86 pe)\r\n2. Open the Decompiler Widget\r\n3. Click on a function to seek\r\n4. See error\r\n\r\n**Expected behavior**\r\nSeek into the new function.\r\n\r\n**Screenshots**\r\nOpen Cutter:\r\n![Capture du 2020-07-25 01-26-09](https://user-images.githubusercontent.com/23267500/88442765-06fbf780-ce16-11ea-9539-3dc60c62830d.png)\r\n\r\nOpen the Decompiler Widget:\r\n![Capture du 2020-07-25 01-26-41](https://user-images.githubusercontent.com/23267500/88442768-095e5180-ce16-11ea-8e0f-066063cb251c.png)\r\n\r\nSeek into a function:\r\n![Capture du 2020-07-25 01-26-57](https://user-images.githubusercontent.com/23267500/88442771-0b281500-ce16-11ea-8736-fa62885880ba.png)\r\n\r\nCutter crashed:\r\n![Capture du 2020-07-25 01-27-11](https://user-images.githubusercontent.com/23267500/88442775-0ebb9c00-ce16-11ea-8ac4-ab40883827ae.png)\r\n\r\n**Additional context**\r\nAll of this work fine when I open the same binary outside of the project.\r\nIn the project, I have a message from Ghidra decompiler:\r\n\"Ghidra Decompiler Error: No sleigh specification for x86:LE:32:default\"\r\n\r\n**Crash Report**\r\n[Cutter_crash_dump_25.07.20_01.31.13.zip](https://github.com/radareorg/cutter/files/4974597/Cutter_crash_dump_25.07.20_01.31.13.zip)\r\n\r\n I have done some tests, it's not linked with PE but with projects.\r\nWhen I open an x86-64 ELF binary it works fine, but when I save as a project, close Cutter and reopen the project, the bug appear.\r\nAnd I have the same message from Ghidra when I start the project: \"Ghidra Decompiler Error: No sleigh specification for x86:LE:32:default\" Is it the same as my question #2326   cutter version:git latest             (commit:7ca6a1eda0e4eef2371d05a4fc099b0985043772\r\n  cd cutter\uff1b\r\n  `git submodule update --init --recursive`\r\n  so radare2 version: 4.5.0         (commit:9d7eda5ec7367d1682e489e92d1be8e37e459296\r\nr2ghidra-dec version: git latest (commit:17ec3b3041e21f0492878e1d3147cdcd5830ae00\r\n\r\ncutter build command:\r\n`cmake -DCMAKE_INSTALL_PREFIX=/usr -DCUTTER_USE_BUNDLED_RADARE2=ON -DCUTTER_ENABLE_PYTHON=true -DCUTTER_ENABLE_PYTHON_BINDINGS=true   ../src -G Ninja`  and install\r\n\r\nr2ghidra-dec build command:\r\n`cmake -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_CUTTER_PLUGIN=ON -DCUTTER_SOURCE_DIR=/home/ruben/Desktop/cutter -G Ninja ..`  and install\r\n\r\neverthing is ok\uff0cbut if i select Windows->Decompile\uff0ccrash!\r\nAnd then nothing left,Windows suddenly disappear from the desktop.\r\n\r\nI tried to start it with GDB\uff0cand then select Windows->Decompile\r\nThis is GDB's information\r\n![qwe](https://user-images.githubusercontent.com/55597646/88361830-f7949400-cdac-11ea-95aa-cd34ea2a7385.png)\r\n\r\n\r\n Hi, thank you for opening an issue :)\r\nSeems like you didn't fill the issue template and thus, your issue is lacking important information we need to know.\r\n\r\nSpecifically, what is the version of radare2 you have installed? Did you make sure all three. repositories are up to date? What is the output you receive? When you execute Cutter without plugins \"--no-plugins\" the crash still happen? \r\n\r\nPlease fill the issue with all the detailed and relevant information so we will be able to fully help you.\r\nAttach files, screenshots and reproducers if you can.\r\n\r\nThanks! > Looks like you might be mixing multiple R2 versions. You compiled Cutter with CUTTER_USE_BUNDLED_RADARE2=ON. But r2ghidra during compilation most likely used system r2.\r\n> \r\n> I don't recommend using CUTTER_USE_BUNDLED_RADARE2=ON for system installation. This option is more aimed at development builds.\r\n\r\nI install a new OS the same as mine on the other computer.\r\nSo I can guarantee that I only have one version of R2.\r\nRepeat all the steps above.\r\n\r\nCrash! > Please do the following steps and confirm if it still crashes:\r\n> \r\n>     * clean up all the old installations\r\n> \r\n>     * Build and install r2 using r2 source that matches with submodule\r\n> \r\n>     * Build cutter with `CUTTER_USE_BUNDLED_RADARE2=OFF`\r\n> \r\n>     * Build r2ghidra\r\n\r\nI did as you said.  Crash!\r\n\r\ncutter : git latest   \r\nbuild command:`cmake -DCMAKE_INSTALL_PREFIX=/usr -DCUTTER_USE_BUNDLED_RADARE2=OFF -DCUTTER_ENABLE_PYTHON=true -DCUTTER_ENABLE_PYTHON_BINDINGS=true ../src -G Ninja`\r\n\r\nradare2: _commit 9d7eda5ec7367d1682e489e92d1be8e37e459296 (HEAD -> master, tag: 4.5.0)_\r\nbuild&install : `sys/install.sh`\r\n\r\nr2ghidra: git latest\r\nbuild command: `cmake -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_CUTTER_PLUGIN=ON -DCUTTER_SOURCE_DIR=/home/ruben/Desktop/cutter -G Ninja ..`\r\n\r\n > I still haven't seen you answer of what happens when you run cutter with \"--no-plugins\" flag.\r\n> \r\n> Does it actually crashes or does the UI freezes and you kill it either directly or with a popups that shown shows?\r\n> \r\n> What happens if you try running decompiler in the console widget using `pdg` command?\r\n> \r\n> The output you posted earlier from gdb doesn't look like crash more like something calling exit. You can try setting a breakpoint in exit method by calling `break exit` in gdb before starting the executable.\r\n> \r\n> Does resetting Cutter settings have any effect? Have you tried more than one executable? Does it happens with any function in the executable?\r\n\r\n\r\nrun cutter with \"--no-plugins\" everthing  works fine.\r\n\r\nI just select Decompile window, it crash. (The entire window disappears,and cutter is not in the process tree.)\r\n\r\nresetting Cutter settings have no effect, i only start one executable, other functions are normal,except show decompile window.\r\n\r\n`pdg` command work fine.\r\n\r\n\r\n\r\nI rebuild with debug symbol and use gdb set breakpoint `catch syscall exit exit_group` ,by the way `break exit` not working\r\n\r\nThis is crash \r\n![qwe](https://user-images.githubusercontent.com/55597646/88395759-24b86500-cdf4-11ea-8d67-6eefdb1a2334.png)\r\n\r\n![bt](https://user-images.githubusercontent.com/55597646/88396213-cb9d0100-cdf4-11ea-80e1-c20b3d64a4cf.png)\r\n\r\n\r\n\r\n`\r\n\r\n    Hi,\r\n\r\nThe AppImage can't run on ancient Linux environments. So, I'm trying to compile it from scratch inside a Debian 7 x64. I manually compiled/updated/installed cmake, python, git, meson and ninja, so the build system meets the requirements. No problems until I get this error:\r\n```\r\nshlr/libtree_sitter.a(tree-sitter_lib_src_lib.c.o): In function `clock_now':\r\n/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/../../../../radare2/shlr/tree-sitter/lib/src/././clock.h:73: undefined reference to `clock_gettime'\r\ncollect2: error: ld returned 1 exit status\r\n[1126/1507] Generating cc-arm-32.sdb with a meson_exe.py custom command\r\nninja: build stopped: subcommand failed.\r\nmake[2]: *** [Radare2-Bundled-prefix/src/Radare2-Bundled-stamp/Radare2-Bundled-build] Error 1\r\nmake[1]: *** [CMakeFiles/Radare2-Bundled.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\n\r\nThis problems seems to appear in ancient radare2 compilations: https://github.com/radareorg/radare2/issues/1983\r\nHowever, I don't know how to fix it. So, please can you help me?\r\n\r\nFuthermore, I suggest to use a more legacy environment to compile the AppImage, for example a Debian 7 or CentOS 7 almost. Or privide different AppImages based on the major kernel version.\r\n\r\nRegards.\r\n @lars18th could you try this patch on your system? I tried to get a debian:wheezy container to test it but it couldn't even install packages.\r\n\r\n```diff\r\ndiff --git a/libr/core/meson.build b/libr/core/meson.build\r\nindex 55dbc152c..937f9e100 100644\r\n--- a/libr/core/meson.build\r\n+++ b/libr/core/meson.build\r\n@@ -102,6 +102,7 @@ r_core_deps = [\r\n   platform_deps,\r\n   gdb_dep,\r\n   java_dep,\r\n+  cc.find_library('rt', required: true),\r\n   shell_parser_dep\r\n ]\r\n \r\n```\r\nPlease let me know how it goes. > @lars18th could you try this patch on your system? I tried to get a debian:wheezy container to test it but it couldn't even install packages.\r\n> \r\n> Please let me know how it goes.\r\n\r\nHi @ret2libc ,\r\n\r\nThank you! This patch fixes the error pointed. However, another one similar appears:\r\n\r\n```\r\n[1420/1507] Linking target binr/r2r/r2r\r\nFAILED: binr/r2r/r2r\r\ncc  -o binr/r2r/r2r binr/r2r/r2r.p/r2r.c.o binr/r2r/r2r.p/load.c.o binr/r2r/r2r.p/run.c.o -Wl,--as-needed -Wl,--no-undefined -Wl,--whole-archive -Wl,--start-group shlr/libr2sdb.a -Wl,--no-whole-archive libr/util/libr_util.so.4.5.0 shlr/libr2spp.a shlr/libr2zlib.a -ldl -lm -pthread -lutil -Wl,--end-group '-Wl,-rpath,$ORIGIN/../../libr/util:$ORIGIN/../../shlr' -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/util -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/shlr\r\nbinr/r2r/r2r.p/run.c.o: In function `r2r_subprocess_wait':\r\n/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/../../../../radare2/binr/r2r/run.c:640: undefined reference to `clock_gettime'\r\n/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/../../../../radare2/binr/r2r/run.c:678: undefined reference to `clock_gettime'\r\ncollect2: error: ld returned 1 exit status\r\n[1422/1507] Linking target binr/rafind2/rafind2\r\nninja: build stopped: subcommand failed.\r\nmake[2]: *** [Radare2-Bundled-prefix/src/Radare2-Bundled-stamp/Radare2-Bundled-build] Error 1\r\nmake[1]: *** [CMakeFiles/Radare2-Bundled.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\n\r\nPerhaps a similar patch will solve it. Yes, ok that's perfect. I will provide a full patch and after you test it we can include it in r2. @lars18th Please try this:\r\n```diff\r\nFrom 809525685795f110e7c26e284c5a548b35696886 Mon Sep 17 00:00:00 2001\r\nFrom: Riccardo Schirone <sirmy15@gmail.com>\r\nDate: Thu, 23 Jul 2020 10:31:18 +0200\r\nSubject: [PATCH] Make sure to use -lrt when needed to use clock_gettime\r\n ##meson\r\n\r\n---\r\n binr/r2r/meson.build  | 5 +++--\r\n libr/core/meson.build | 1 +\r\n meson.build           | 6 ++++++\r\n 3 files changed, 10 insertions(+), 2 deletions(-)\r\n\r\ndiff --git a/binr/r2r/meson.build b/binr/r2r/meson.build\r\nindex 5112c06da..d385577e4 100644\r\n--- a/binr/r2r/meson.build\r\n+++ b/binr/r2r/meson.build\r\n@@ -3,10 +3,11 @@ if get_option('enable_r2r')\r\n   executable('r2r', ['r2r.c', 'load.c', 'run.c'],\r\n     include_directories: [platform_inc],\r\n     dependencies: [\r\n-      r_util_dep\r\n+      r_util_dep,\r\n+      lrt,\r\n     ],\r\n     install: true,\r\n     install_rpath: rpath,\r\n     implicit_include_directories: false\r\n   )\r\n-endif\r\n\\ No newline at end of file\r\n+endif\r\ndiff --git a/libr/core/meson.build b/libr/core/meson.build\r\nindex 55dbc152c..9427f0927 100644\r\n--- a/libr/core/meson.build\r\n+++ b/libr/core/meson.build\r\n@@ -102,6 +102,7 @@ r_core_deps = [\r\n   platform_deps,\r\n   gdb_dep,\r\n   java_dep,\r\n+  lrt,\r\n   shell_parser_dep\r\n ]\r\n \r\ndiff --git a/meson.build b/meson.build\r\nindex 6d0386c79..c4cbd8604 100644\r\n--- a/meson.build\r\n+++ b/meson.build\r\n@@ -352,6 +352,7 @@ foreach item : [\r\n     ['explicit_bzero', '#include <string.h>'],\r\n     ['explicit_memset', '#include <string.h>'],\r\n     ['clock_nanosleep', '#include <time.h>'],\r\n+    ['clock_gettime', '#include <time.h>'],\r\n     ['sigaction', '#include <signal.h>']\r\n   ]\r\n   func = item[0]\r\n@@ -359,6 +360,11 @@ foreach item : [\r\n   userconf.set10('HAVE_@0@'.format(func.to_upper()), ok)\r\n endforeach\r\n \r\n+lrt = ''\r\n+if userconf.get('HAVE_CLOCK_GETTIME', 0) == 1 and cc.has_header_symbol('features.h', '__GLIBC__')\r\n+  lrt = cc.find_library('rt', required: true)\r\n+endif\r\n+\r\n r_userconf_h = configure_file(\r\n   input: 'libr/include/r_userconf.h.acr',\r\n   output: 'r_userconf.h',\r\n-- \r\n2.26.2\r\n\r\n``` Hi @ret2libc ,\r\n\r\nTesting the new patch, but it generates an error at start of the compilation:\r\n\r\n```\r\nConfiguring libr.pc using configuration\r\nRun-time dependency capstone found: NO (tried pkgconfig and cmake)\r\nMessage: Use bundled capstone\r\nRun-time dependency tree-sitter found: NO (tried pkgconfig and cmake)\r\nMessage: Use bundled tree-sitter\r\nRun-time dependency liblz4 found: NO (tried pkgconfig and cmake)\r\nMessage: Use bundled lz4\r\nRun-time dependency zlib found: YES 1.2.7\r\nMessage: Use bundled zlib\r\nRun-time dependency libzip found: YES 0.10.1\r\nMessage: Use bundled zip\r\nDependency threads found: YES unknown (cached)\r\nMessage: Use bundled magic library\r\n\r\n../../../../radare2/libr/core/meson.build:114:0: ERROR: Argument is of an unacceptable type 'str'.\r\nMust be either an external dependency (returned by find_library() or dependency()) or an internal dependency (returned by declare_dependency()).\r\n\r\nA full log can be found at /home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/meson-logs/meson-log.txt\r\nmake[2]: *** [Radare2-Bundled-prefix/src/Radare2-Bundled-stamp/Radare2-Bundled-configure] Error 1\r\nmake[1]: *** [CMakeFiles/Radare2-Bundled.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\n\r\nYou know where is the problem?\r\n(Note: Every time I delete the build directory and I start the compilation of Cutter from the start).\r\nRegards.\r\n\r\n Hi @ret2libc ,\r\n\r\nI moddified your last patch with this simple hack: replace the two instances of the `lrt,` with the original `cc.find_library('rt', required: true),` and now the compilation continues. So the problem is some syntax error with the test.\r\n\r\nHowerver, a third linking error appears:\r\n```\r\n[1482/1507] Linking target test/unit/test_r2r\r\nFAILED: test/unit/test_r2r\r\ncc  -o test/unit/test_r2r test/unit/test_r2r.p/test_r2r.c.o -Wl,--as-needed -Wl,--no-undefined -Wl,--whole-archive -Wl,--start-group shlr/libr2sdb.a -Wl,--no-whole-archive libr/util/libr_util.so.4.5.0 shlr/libr2spp.a shlr/libr2zlib.a libr/main/libr_main.so.4.5.0 libr/config/libr_config.so.4.5.0 libr/cons/libr_cons.so.4.5.0 libr/io/libr_io.so.4.5.0 libr/flag/libr_flag.so.4.5.0 libr/asm/libr_asm.so.4.5.0 libr/core/libr_core.so.4.5.0 libr/debug/libr_debug.so.4.5.0 libr/hash/libr_hash.so.4.5.0 libr/bin/libr_bin.so.4.5.0 libr/lang/libr_lang.so.4.5.0 libr/anal/libr_anal.so.4.5.0 libr/parse/libr_parse.so.4.5.0 libr/bp/libr_bp.so.4.5.0 libr/egg/libr_egg.so.4.5.0 libr/reg/libr_reg.so.4.5.0 libr/search/libr_search.so.4.5.0 libr/syscall/libr_syscall.so.4.5.0 libr/socket/libr_socket.so.4.5.0 libr/fs/libr_fs.so.4.5.0 libr/magic/libr_magic.so.4.5.0 libr/crypto/libr_crypto.so.4.5.0 -ldl -lm -pthread -lutil -Wl,--end-group '-Wl,-rpath,$ORIGIN/../../libr/util:$ORIGIN/../../shlr:$ORIGIN/../../libr/main:$ORIGIN/../../libr/config:$ORIGIN/../../libr/cons:$ORIGIN/../../libr/io:$ORIGIN/../../libr/socket:$ORIGIN/../../shlr/gdb:$ORIGIN/../../shlr/ptrace-wrap:$ORIGIN/../../libr/flag:$ORIGIN/../../libr/asm:$ORIGIN/../../libr/syscall:$ORIGIN/../../libr/parse:$ORIGIN/../../libr/reg:$ORIGIN/../../libr/lang:$ORIGIN/../../libr/core:$ORIGIN/../../libr/search:$ORIGIN/../../libr/anal:$ORIGIN/../../libr/crypto:$ORIGIN/../../libr/hash:$ORIGIN/../../libr/fs:$ORIGIN/../../libr/magic:$ORIGIN/../../libr/egg:$ORIGIN/../../libr/debug:$ORIGIN/../../libr/bp:$ORIGIN/../../libr/bin' -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/util -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/shlr -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/main -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/config -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/cons -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/io -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/socket -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/shlr/gdb -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/shlr/ptrace-wrap -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/flag -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/asm -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/syscall -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/parse -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/reg -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/lang -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/core -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/search -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/anal -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/crypto -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/hash -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/fs -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/magic -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/egg -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/debug -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/bp -Wl,-rpath-link,/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/libr/bin\r\ntest/unit/test_r2r.p/test_r2r.c.o: In function `r2r_subprocess_wait':\r\n/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/../../../../radare2/test/unit/../../binr/r2r/run.c:640: undefined reference to `clock_gettime'\r\n/home/user/cutter/build/Radare2-Bundled-prefix/src/Radare2-Bundled-build/../../../../radare2/test/unit/../../binr/r2r/run.c:678: undefined reference to `clock_gettime'\r\ncollect2: error: ld returned 1 exit status\r\n[1484/1507] Compiling C object test/unit/test_sparse.p/test_sparse.c.o\r\nninja: build stopped: subcommand failed.\r\nmake[2]: *** [Radare2-Bundled-prefix/src/Radare2-Bundled-stamp/Radare2-Bundled-build] Error 1\r\nmake[1]: *** [CMakeFiles/Radare2-Bundled.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\n @lars18th please paste the full meson output. Hi @ret2libc ,\r\n\r\nThe compilation of the \"radare2\" is finished! Thank you for your contribution. Here the info to create a patch:\r\n- Three different points to include linking with the librt:\r\n  - \"binr/r2r/meson.build\"\r\n  - \"meson.build\"\r\n  - \"test/unit/meson.build\" which requires this change:\r\n```\r\n77c77,78\r\n<         r_magic_dep\r\n---\r\n>         r_magic_dep,\r\n>         cc.find_library('rt', required: true),\r\n```\r\n\r\nRegarding the syntax error of the test to enable the librt, the full meson output doesn't print anything not included in the previous error paste. Sorry! I suspect the problem is because of the lack of parentheses regarding the operator AND. Please, check it.\r\n\r\nAnyway, I need to comment that after the compilation of the \"radare2\" component the process fails regarding the Qt library. I'll try to update the stock version too.\r\n\r\nIn any case, please generate a new patch. I'll try to use it, and when it goes then you can merge it.\r\nThank you for your help! \ud83d\udc4d \r\nRegards.\r\n\r\n > Regarding the syntax error of the test to enable the librt, the full meson output doesn't print anything not included in the previous error paste. Sorry! I suspect the problem is because of the lack of parentheses regarding the operator AND. Please, check it.\r\n\r\nPlease do paste it anyway. I want to see whether it finds RT, __GLIBC__ and clock_gettime. > > Regarding the syntax error of the test to enable the librt, the full meson output doesn't print anything not included in the previous error paste. Sorry! I suspect the problem is because of the lack of parentheses regarding the operator AND. Please, check it.\r\n> \r\n> Please do paste it anyway. I want to see whether it finds RT, **GLIBC** and clock_gettime.\r\n\r\nWith your second patch, with the vanilla version or with my moddified patch?\r\n This one https://github.com/radareorg/cutter/issues/2316#issuecomment-662884824 > This one [#2316 (comment)](https://github.com/radareorg/cutter/issues/2316#issuecomment-662884824)\r\n\r\nHere it is...\r\n\r\n[meson-log.txt](https://github.com/radareorg/cutter/files/4965496/meson-log.txt)\r\n @lars18th please have a look at https://github.com/radareorg/radare2/pull/17345 . I think it fixes the problem for good. I could only test it on CentOS 6, because on debian:wheezy container I could not install any package. Let me know! > @lars18th please have a look at [radareorg/radare2#17345](https://github.com/radareorg/radare2/pull/17345) . I think it fixes the problem for good. I could only test it on CentOS 6, because on debian:wheezy container I could not install any package. Let me know!\r\n\r\nHi @ret2libc ,\r\n\r\nThis PR is working like a charm! The \"radare2\" module now is compiling. So please, merge it.\r\n\r\nAnyway, here some aestetic warnings that perhaps you want to fix:\r\n```\r\nFound ninja-1.10.0 at /usr/local/bin/ninja\r\n[295/1507] Compiling C object libr/util/libr_util.so.4.5.0.p/table.c.o\r\n../../../../radare2/libr/util/table.c: In function \u2018r_table_visual_list\u2019:\r\n../../../../radare2/libr/util/table.c:975:39: warning: universal character names are only valid in C++ and C99 [enabled by default]\r\n[328/1507] Compiling C object libr/util/libr_util.so.4.5.0.p/print.c.o\r\n../../../../radare2/libr/util/print.c: In function \u2018r_print_columns\u2019:\r\n../../../../radare2/libr/util/print.c:76:42: warning: universal character names are only valid in C++ and C99 [enabled by default]\r\n../../../../radare2/libr/util/print.c: In function \u2018r_print_progressbar\u2019:\r\n../../../../radare2/libr/util/print.c:1550:42: warning: universal character names are only valid in C++ and C99 [enabled by default]\r\n../../../../radare2/libr/util/print.c: In function \u2018r_print_rangebar\u2019:\r\n../../../../radare2/libr/util/print.c:1569:42: warning: universal character names are only valid in C++ and C99 [enabled by default]\r\n../../../../radare2/libr/util/print.c: In function \u2018printHistBlock\u2019:\r\n../../../../radare2/libr/util/print.c:1664:42: warning: universal character names are only valid in C++ and C99 [enabled by default]\r\n[1399/1507] Compiling C object test/unit/test_anal_block.p/test_anal_block.c.o\r\n../../../../radare2/test/unit/test_anal_block.c: In function \u2018test_r_anal_block_contains\u2019:\r\n../../../../radare2/test/unit/test_anal_block.c:59:2: warning: missing braces around initializer [-Wmissing-braces]\r\n../../../../radare2/test/unit/test_anal_block.c:59:2: warning: (near initialization for \u2018dummy._rb\u2019) [-Wmissing-braces]\r\n```\r\n\r\nRegards.\r\n Hi @XVilka ,\r\n\r\n> The problem of doing the same with Cutter is tricker since it requires relatively new Qt. I am not 100% sure if that Qt will even compile on that distribution.\r\n\r\nNow, I'm compiling from scratch Qt5 as the stock version is not supported by Cutter. So I need to know the minimal Qt version required by Cutter. Any idea?\r\n\r\nRegards.\r\n\r\nNote: This is the log of the error with the stock Qt v5.3.2: \r\n```\r\n[ 13%] Building CXX object CMakeFiles/Cutter.dir/Main.cpp.o\r\nIn file included from /home/user/cutter/src/core/Cutter.h:4:0,\r\n                 from /home/user/cutter/src/core/MainWindow.h:4,\r\n                 from /home/user/cutter/src/CutterApplication.h:9,\r\n                 from /home/user/cutter/src/Main.cpp:2:\r\n/home/user/cutter/src/core/CutterCommon.h:65:56: error: missing binary operator before token \"(\"\r\n/home/user/cutter/src/core/CutterCommon.h: In function \u2018QString RAddressString(RVA)\u2019:\r\n/home/user/cutter/src/core/CutterCommon.h:45:12: error: \u2018asprintf\u2019 is not a member of \u2018QString\u2019\r\n/home/user/cutter/src/core/CutterCommon.h: In function \u2018QString RSizeString(RVA)\u2019:\r\n/home/user/cutter/src/core/CutterCommon.h:50:12: error: \u2018asprintf\u2019 is not a member of \u2018QString\u2019\r\n/home/user/cutter/src/core/CutterCommon.h: In function \u2018QString RHexString(RVA)\u2019:\r\n/home/user/cutter/src/core/CutterCommon.h:55:12: error: \u2018asprintf\u2019 is not a member of \u2018QString\u2019\r\n/home/user/cutter/src/Main.cpp: In function \u2018int main(int, char**)\u2019:\r\n/home/user/cutter/src/Main.cpp:78:36: error: \u2018AA_ShareOpenGLContexts\u2019 is not a member of \u2018Qt\u2019\r\nmake[2]: *** [CMakeFiles/Cutter.dir/Main.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/Cutter.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\n Thank you @XVilka ! \ud83d\udc4d   I as well prefer the first approach :)\r\n  **Environment information**\r\n\r\n* Local: Cutter 1.10.3 in Windows 10 64bit\r\n* Remote: Linux 3.10 x64 in embbeded platform\r\n\r\n* Remote command: \"gdbserver 0.0.0.0:9000 /root/my_binary my_params\"\r\n* Remote binary: \"my_binary\" is ELF64 with stripped data\r\n\r\n**Describe the bug**\r\n\r\nWhen I **_LOAD_** the binary in the Windows machine I can see the pseudo-code of the decompiled functions.\r\nHowever, when I **_CONNECT_** to the remote gdbserver running the binary, all the decompiled code changes to `// WARNING: Bad instruction - Truncating control flow here`, and all funcitons are empty.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open the ELF binary in the Windows Cutter using the \"file\" option (first copy the file to the client machine).\r\n2. Select the decompiler tab.\r\n3. Start the remote binary with the `gdbserver` tool.\r\n4. Connect to the remote GDB debugger with the `IP:PORT`.\r\n5. See error\r\n\r\n**Expected behavior**\r\n\r\nWhen connecting to a remote GDB server the local information will be preserved.\r\n\r\n\r\nI hope you fix this error soon, as it will improve a lot the remote work.\r\nRegards.\r\n Hi,\r\n\r\nI feel (I'm not sure) that _after_ connecting to the Remote GDB I need to execute \"MAP FILE\" to load the local copy of the binary.\r\n\r\nHowever:\r\n\r\n- If I do this, then the Cutter enters in a infinite loop doing \"decompiling...\" and after some minutes it crashes.\r\n- If this is the expected procedure (connect to the Remote GDB and MAP the file) then I suggest to add the  option for selecting the file in the same window that defines the remote GDB server.\r\n- Anyway I recommend to not _unload_ the local file when connecting to a remote GDB server. That's because if the user has loaded it then it's expected to run the same binary.\r\n\r\nI hope you can fix and improve this.\r\nThank you!\r\n Hi,\r\n\r\nPlease help me to understand the _correct_ behaviour to debug a _REMOTE_ binary:\r\n\r\n- When connecting to the remote GDB server... how I can LOAD the binary file? This question has sense as the Decompiler seems to load from the _local_ memory and not from the _remote_ memory. Or almost, if it reads from the remote, then it doesn't work.\r\n\r\nAny idea?  Hi,\r\n\r\nIf I'm a noobie asking about this, then please point me towards how to use Cutter with remote GDB sessions.\r\nIf not, then please help me to fix this issue.\r\n\r\nThank you!\r\n Hi @yossizap ,\r\n\r\nThank you to review this issue. :smile: \r\n\r\nTo have good information: You're saying that if I use a \"remote\" Cutter running in Linux connected to a `gdbserver` running in another Linux box then it will work? If yes, then I'll check it, as my error is using the Windows Cutter version.\r\n\r\nRegards. Thank you @yossizap !\r\nThen I'll try runing it in WSL... https://discourse.appimage.org/t/run-appimage-on-windows/177\r\n\r\nRegards.\r\n Hi @yossizap ,\r\n\r\nIt seems that Cutter AppImage runs fine inside WSL1. However, I see this:\r\n- If I open with the option \"Don't open any file\" to connect only to the GDB server, then in this case the socket connection is not stablished. It's a requirement to open the binary file first (from a local copy) and after connect to the remote `gdbserver` ? I tested with native Windows version and with the AppImage over WSL and every time I see this error. Futhermore I don't see the option to open directly from start a \"Remote GDB session\".\r\n- When using the AppImage connected the remote GDB server, decompiler don't show good data... even if I try \"r2dec\" or \"Ghidra\": `Error: no \"good\" data given (all invalid opcodes)`. Any idea? Even the Disassembly shows \"invalid\".\r\n\r\nThank you for your time!  **Is your feature request related to a problem? Please describe.**\r\n\r\nThere is no documentation explaining how to build the docs for Cutter\r\n\r\n**Describe the solution you'd like**\r\n\r\nA dedicated page under `docs/contributing/docs/` that will instruct how to build Cutter's docs. Explain the requirements and the different `make` commands such as `make html` and `make quick`.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nTo add it to the `getting-started` document under `docs/contributing/docs`.\r\n This goes under \"explain the requirements\"   <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/contributing/code/getting-started.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/contributing/code/development-guidelines.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\nThis is supposed to be a fix for issue #2272 . The problem was that sorting was done using a \"byte-count\" formatted string which should be only used for displaying (`Qt::DisplayRole`). This fix uses `Qt::EditRole` as the sorting role. `ResourcesModel::data()` returns the correct value depending on the parameter `role`:\r\n\r\n* a byte-count formatted string in case of `Qt::DisplayRole`\r\n* the numerical byte count in case of `Qt::EditRole`\r\n\r\n**Test plan (required)**\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n1. Launch Cutter and load a PE32 file\r\n2. Go to 'Resources' tab\r\n3. Sort by \"Size\"\r\n\r\nSorting is done by numerical order and not string.\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\nCloses #2272 Well, you are right, they do. I'm going to re-work the PR. Thanks for the PR! A few suggestions:\r\n- If you think a PR will close an issue, please add `Closes #ISSUE_NUMBER` at the end of the PR description.\r\n-  Until it's ready, you can convert it to draft too (same as WIP) Good work @polaris! :) Thank you!   **Detailed description**\r\nTo fix this issue I had to add several overloads. And then, temporarily set `bin.sections` for `search.in` via TempConfig.\r\nThis makes Cutter to show data from all relevant addresses and not only current map.\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/87973370-122aec80-cad1-11ea-973a-85f9dec2d099.png)\r\n\r\nThat said, I noticed a strange behavior with `megabeets_0x1` (attached). It shows everything empty\r\n\r\n[megabeets_0x1.zip](https://github.com/radareorg/cutter/files/4949469/megabeets_0x1.zip)\r\n\r\n**Closing issues**\r\n\r\ncloses #2195 \r\n Thanks. Will think about it sometime, see what can be used to make a better UX here. So for now it's all good   **Environment information**\r\n* Operating System: Windows 10 version 2004\r\n* Cutter version: 1.10.3\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: aarch64\r\n\r\n**Describe the bug**\r\nWhen opening files Cutter only analyses correctly about 5% of the time. I'll select a file to open, choose Auto-Analysis, and keep all options at default except Architecture and CPU which I set to arm and v8. Sometimes it works and a long list of functions is displayed. But the vast majority of the time I just see the screenshot below.\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open a file choosing arm as the architecture and v8 as the processor. I managed to replicate this with a bunch of different files, like [this](https://github.com/radareorg/cutter/files/4947834/SecureROM-s5l8960xsi-1704.10-RELEASE.txt) file.\r\n2. Cutter analyses correctly or it doesn't.\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nCutter would open and analyse the file correctly, as it does sometimes.\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n![image](https://user-images.githubusercontent.com/44685118/87940630-d3c20d00-ca91-11ea-9fac-cf387d8225df.png)\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\nWhile trying to take a screenshot of the failed opening, the file actually opened the first time. But then the next time it failed. And then it worked again. And then failed several times. I can't find any consistent behavior, it seems entirely random. Ok, I think I've figured it out, it depends on how the options are selected. If I click the dropdown, then click the option from the list, and then click open, the file is analysed successfully. But if I scroll over the option box to select the option, it doesn't open properly. Clicking elsewhere in the window before opening doesn't help either, the option must be selected with left mouse button. I suppose this would be considered a UI bug? Sorry, I was thinking of the radare2 repository, I got Cutter from the release page. These are the dropdowns I was referring to under \"Advanced Options\".\r\n![image](https://user-images.githubusercontent.com/44685118/87950126-cc553080-ca9e-11ea-8e8e-0c3c613f0d98.png)\r\n `e asm.cpu` gives \"v8\" in both cases, and `e asm.arch` gives \"arm\" in both cases as well.  **Environment information**\r\n* Operating System: Windows 10 version 2004\r\n* Cutter version: 1.10.3\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: aarch64\r\n\r\n**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nWhen right-clicking a function in the function window it is possible to click \"Show in\" and \"Decompiler\". This opens the Decompiler window if it isn't open already, and while the window is open other functions can be shown in the decompiler in the same way, but after closing the decompiler window \"Decompiler\" is no longer an option in the \"Show in\" menu, even if the decompiler window is re-opened from the \"Windows\" tab at the top. Opening functions in the decompiler again requires closing and reloading the project.\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open a file in Cutter.\r\n2. Right-click a function in the function window.\r\n3. Click \"Show in\" and \"Decompiler\".\r\n4. Close decompiler window.\r\n5. Functions cannot be opened in the decompiler.\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nRight-clicking a function and selecting \"Open in\" would show a \"Decompiler\" option. \r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n![image](https://user-images.githubusercontent.com/44685118/87881289-3b278080-c9f0-11ea-97b2-674a3feb0b75.png)\r\n![image](https://user-images.githubusercontent.com/44685118/87881326-6ad68880-c9f0-11ea-93ba-8fcce29d7356.png)\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\nDoes radare2 properly support arm64? The README only says arm, not explicitly arm64, but Cutter seems to work with it, giving arm64 as the call type for all the functions.  Looks much better and works good!\r\nI would hide the Arrow button (execute) when \"User command\" isn't selected Alright, makes sense, then I'd align it to be right beside the combo box and give up the empty space. \"pull-left\".\r\n\r\nAlso, you might want to consider changing the icon to a Refresh icon when it is used with the combo box, and not the text box I don't like change as it's more confusing from the point of UX. It is better not to show any unused element until reaching the \"User command\" item. With this, if it is worrying that the users won't understand what to write there, we can use a more detailed place holder or a tooltip. `\"Enter a graph command such as \"...\" and \"...\" ...\"`\r\n\r\nAlso, something I noticed now is that the weird sequence of letters (which isn't clear to the human kind) is taking priority in the names of the commands in the combo box. Instead, I'd go for:\r\n\r\n```\r\nData reference graph (aga)\r\nGlobal data references graph (agA)\r\nImports graph (agi)\r\nReferences graph (agr)\r\nGlobal references graph (agR)\r\nCross references graph (agx)\r\nCustom graph (agg)\r\n```\r\n\r\n  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nThis PR implements X-refs for [local variables](https://github.com/radareorg/cutter/issues/948) in the widgets for disassembly and graph. \r\n![Xrefs-Quick-Peak](https://user-images.githubusercontent.com/18501167/87854245-38fced80-c92e-11ea-8ba0-81781cc86907.gif)\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n\r\n- [ ] 1. Test if the action is working as intended\r\n- [ ] 2. Notice the texts that are shown for the action and in the dialog and think if we could improve it.\r\n- [ ] 3. Check code.\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\ncloses #948 \r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n These changes are not useful for the Xref for local variables in the decompiler widget(as far as I can see). As you said, it needs a dedicated solution with the help of annotations.\r\n\r\nI included this PR in the \"_Improving Decompiler Widget_\" project because implementing this was a part of my proposal. This can go straight into master if you think that's better.   **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, there is no way to interact with the tabs (e.g close a tab) in the tab bar without switching to it.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI suggest adding a context menu to the tab bar with the following basic interactions:\r\n\r\n- Right Click -> Close tab\r\n- Right Click -> Duplicate Tab\r\n- Right Click -> Undock tab\r\n\r\nBonus actions:\r\n- Right Click -> Split to Right\r\n- Right Click -> Split to Left\r\n- Right Click -> Split to Top\r\n- Right Click -> Split to Bottom\r\n\r\n\r\n  **Detailed description**\r\n\r\nThis *work-in-progress* PR improves the documentation structure and adding few more pages.\r\n\r\n**TODO:**\r\n\r\n- Find a way to make the sidebar showing a content tree because at some point it stops propagating **(HELP)**\r\n- Consider if Plugin development should be under \"Contributing to Cutter\" (**QUESTION**). Currently, it is under Contributing -> Plugins\r\n\r\n<details><summary><b>Images:</b></summary>\r\n<p>\r\n\r\nContributing to Cutter:\r\n![image](https://user-images.githubusercontent.com/20182642/87671974-dfa08d00-c77a-11ea-806b-1a938ecd6e15.png)\r\n\r\nContributing Code:\r\n![image](https://user-images.githubusercontent.com/20182642/87672024-f9da6b00-c77a-11ea-9398-f68cfd0c9d3d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/87672061-05c62d00-c77b-11ea-871c-7f736dac6ca0.png)\r\n\r\n\r\nContributing Docs:\r\n![image](https://user-images.githubusercontent.com/20182642/87672137-2098a180-c77b-11ea-8232-77852df52c1a.png)\r\n\r\n</p>\r\n</details>\r\n\r\n**Test plan (required)**\r\n\r\nMake sure it is easy to navigate\r\nCheck grammar and typos\r\n\r\n\r\n Nope, thanks!\r\n:)  Applied suggestions and rebased thanks, fixed :) Ideally, I'd want to have these on the sidebar, shown when clicking on the contributing to Cutter link\r\n\r\n    Contributing code to Cutter\r\n    Cutter Development Guidelines\r\n    Development environment setup\r\n    Crash Handling System\r\n    Contributing documentation to Cutter\r\n    Getting started with Python Plugins\r\n\r\n\r\nThis is what I asked for help in the description of the PR.\r\n\r\nThen contributors will go via docs->contribute to cutter-> choose whatever they want from the sidebar or click on the buttons\r\n\r\n\r\nAnd let's be honest, people mostly find documentation for what they need from searching on google and from specific links (e.g on Readme).\r\n\r\n\r\nAlso, existing developers rarely come back to the documentation guidelines (not talking about API reference). And when they do, they will be mature enough to not feel like beginners because they see colorful buttons Also, I don't have any problem with adding \"Developers documentation\" button to the main page, in addition to the Contributing to Cutter Ready for another round @karliss @Surendrajat  Sorry @karliss I didn't understand the note about translations until now. Added it, very good idea!\r\n\r\n@Surendrajat great feedbacks <3 I agree about the ordering. But I prefer to keep the titles as-is for now\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/87870234-b10af800-c9ae-11ea-9014-696031dca13c.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/87870243-bf591400-c9ae-11ea-9c08-4530dbdb55b7.png)\r\n /bot automerge when green  Okay then, let's merge once green :-)  **Environment information**\r\n* Operating System: Arch Linux\r\n* Cutter version: 1.10.3\r\n* Obtained from:\r\n  - [x] Built from source\r\n  - [ ] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: Plugin\r\n\r\n**\r\n\r\nI'm working on a python plugin. A part of my code looks like this:\r\n\r\n```\r\nimport cutter\r\nimport CutterBindings\r\nclass MyWrapper:\r\n    def __init__(self):\r\n        self._core = CutterBindings.CutterCore.instance()\r\n        logger.info('self._core: {}'.format(type(self._core)))\r\n        self._config = CutterBindings.Configuration.instance()\r\n        logger.info('self._config: {}'.format(type(self._config)))\r\n\r\n# In another python file, here disassembler is an instance of my wrapper\r\nfor node_address in nodes_addresses:\r\n            logger.debug('Logging CutterBindings {} {} {} {}'\r\n                   .format(disassembler,\r\n                           disassembler[self.lctx],\r\n                           disassembler[self.lctx]._core,\r\n                           disassembler[self.lctx]._core.getBBHighlighter()))\r\n            disassembler[self.lctx]._core.getBBHighlighter().highlight(self.director.coverage.nodes.get(node_address, None), color)\r\n\r\n```\r\n\r\nWhen getting the core and configuration instance it works fine, but when I try to highlight something I get the following error:\r\n\r\n```\r\nINFO: self._core: <class 'CutterBindings.CutterCore'>\r\nINFO: self._config: <class 'CutterBindings.Configuration'>\r\nDEBUG: Exported Cutter core\r\n................\r\nDEBUG: Logging CutterBindings <lighthouse.util.disassembler.cutter_api.CutterCoreAPI object at 0x7fe7552c3400> <lighthouse.util.disassembler.cutter_api.CutterContextAPI object at 0x7fe7550d4d90> <CutterBindings.CutterCore(0x5643b4226ae0) at 0x7fe755259500> <CutterBindings.BasicBlockHighlighter object at 0x7fe74c743dc0>\r\nERROR: Traceback (most recent call last):\r\nERROR:   File \"/usr/lib/python3.8/site-packages/shiboken2/files.dir/shibokensupport/signature/loader.py\", line 105, in seterror_argument\r\nERROR: return errorhandler.seterror_argument(args, func_name)\r\nERROR:   File \"/usr/lib/python3.8/site-packages/shiboken2/files.dir/shibokensupport/signature/errorhandler.py\", line 101, in seterror_argument\r\nERROR: func = eval(func_name, namespace)\r\nERROR:   File \"<string>\", line 1, in <module>\r\nERROR: NameError\r\nERROR: :\r\nERROR: name 'CutterBindings' is not defined\r\n```\r\n**\r\n\r\nThe error is that CutterBindings is available in some contexts but is not available in others.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Clone https://github.com/Emi1305/lighthouse\r\n2. Checkout `cutter_integration` branch\r\n3. Symlink contents of the `plugin` directory to the cutter plugin directory (i.e. `$HOME/.local/share/RadareOrg/Cutter/plugins/python`)\r\n4. Open the testcase file `boombox.exe`\r\n5. Go to `File`>`Lighthouse - Load coverage file...`\r\n6. Load any of the coverage files in the same testcase directory\r\n7. Observe it crashes\r\n8. Log is available at `$HOME/.local/share/RadareOrg/Cutter/lighthouse_logs/lighthouse.<pid>.log`\r\n9. Observe at the end of the log that the logger was able to successfully log the `CutterBindings` settings but crashes right after when attempting to use it\r\n\r\n**Expected behavior**\r\n\r\n`CutterBindings` being available in every context and working  Sorry, I am a newbie, I have carefully browsed the documentation and Issues, but I don\u2019t know how to use `Cutter [options] [<filename>]`  in the terminal.\r\nI use .dmg file to install, do I need to configure environment variables?\r\n\r\nPlease guide me what steps I need to do before I can use Cutter in the terminal,thanks!  Hello Cutter Team,\r\nAfter change function name in *.so file, how to save it to separate binary?\r\n\r\nThansk.  Do you have any idea of what's wrong with Travis and Appveyor? Things noticed while testing:\r\n- The field name of the dropdown menu of the `R2 graphs` widget is editable\r\n- There is no space at all between edges so it might generate funny graphs (see picture attached below)\r\n- `agg` seems to be useless (and that might be by design as it is named \"custom\") but it might be interesting to add more info or a warning or something...\r\n\r\n![image](https://user-images.githubusercontent.com/10772605/87586229-87b54800-c6e0-11ea-9216-d01bd43f1c64.png)\r\n Ok thanks for the details :) LGTM!  **Environment information**\r\n* Operating System: Debian\r\n* Cutter version: v1.10.3\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: PE32\r\n\r\nWhen sorting by \"size\" in resource page, it sorts by string-order and not numerical order.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to 'resources' tab\r\n2. Click on 'size' column\r\n3. See error\r\n\r\n**Expected behavior**\r\n\r\nSort by numerical order and not string.\r\n\r\n**Screenshots**\r\n\r\n![cutter-sort-by-resource-size](https://user-images.githubusercontent.com/6679170/86203101-f5764700-bb18-11ea-9e33-3a295da01395.png)\r\n  **Environment information**\r\n* Operating System: Ubuntu 20.04\r\n* Cutter version: 1.10.3 Appimage\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format:\r\nAny\r\n\r\n**Describe the bug**\r\nI have a script that I want to run within the context of Cutter, however it appears that `import cutter` does not work when running the script from `File -> Run Script`\r\n\r\n**To Reproduce**\r\nStart with the small python script\r\n```python\r\ntry:\r\n    import cutter\r\n    print(\"cutter imported\")\r\nexcept:\r\n    print(\"cutter not found\")\r\n```\r\nSave the script and click on `File` -> `Run Script`\r\n![menu](https://user-images.githubusercontent.com/57954766/86160611-ffc52080-bad9-11ea-9847-d00e7596a83f.png)\r\n\r\nThe following error is produced in the console\r\n```\r\ncutter not found\r\nCannot open ttyname(0) (null)\r\n```\r\n![console](https://user-images.githubusercontent.com/57954766/86160771-40249e80-bada-11ea-9859-41280f9a3b34.png)\r\n\r\nThe script that I'm running doesn't need support for QT widgets or a plugin, is there a recommended way to run a script and `import cutter` correctly?\r\n\r\n**Expected behavior**\r\nScript will `import cutter`\r\n\r\n**Screenshots**\r\nIncluded above \r\n\r\n**Additional context**\r\n I have downloaded the latest version of Cutter `Version 1.11.0` (AppImage) and verified that this bug still exists.\r\n\r\nIs there another recommended way to run a script in cutter? Hey @re-fox, thanks for the follow-up :)\r\nI made a PR (#2330) to make sure it is more clear that this button should be used for executing radare2 scripts and not Cutter python scripts.\r\n\r\nBecause we dropped the built-in support for Jupyter notebook, we currently suffering from a lack of a proper way to execute Python script file or commands (integrated REPL). We hope to make it better in the coming releases.\r\n\r\nThank you! Thank you for the clarification.  I assumed the `Run Script` were for cutter python scripts.  Which was confusing.  I can close this issue as this was user error.  **Environment information**\r\n* Operating System: Ubuntu 20.04\r\n* Cutter version: Latest master\r\n  - [x] Built from source\r\n  - [ ] Downloaded from release\r\n  - [ ] Distribution repository\r\n\r\n**Describe the bug**\r\nToggling a breakpoint(or adding a comment) in the decompiler widget causes the view to jump. This makes it difficult to keep track on the position of code you are looking at. \r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n1. Open a ~2 screens high function and scroll down a bit\r\n2. Select a line somewhere in the middle and add a breakpoint(or comment).\r\n3. Observe that viewing position in the decompiler widget changes\r\n\r\nSee this GIF to see exactly what's happening\r\n![display jumps](https://user-images.githubusercontent.com/18501167/86006167-33993b00-ba33-11ea-8361-6ca8e8d85e2d.gif)\r\n\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nThe view should not move while adding toggling a breakpoint. But the highlighting of the line should change accordingly.\r\n\r\n**Findings so far (for the problem with toggling breakpoints)**\r\nAfter hours of debugging, I found that this view jumping problem happens because the whole code gets decompiled again when a new breakpoint is added. Then the code tries to reset the cursor to the previous location(the line at which the breakpoint was toggled). That's how we at least get to see the line at which the breakpoint was added. But the view doesn't get back to the way it was.\r\n It turns out to be existing for multiple options we have in the context menu of the decompiler. See the GIF below\r\n![View Jumping Common](https://user-images.githubusercontent.com/18501167/86128199-af13ee80-bafe-11ea-825a-d979df9867fb.gif) @karliss Yes, for breakpoints I think we can somehow stop the decompiler from running. In fact, that was the hack that I was thinking about. But ultimately, in order to fix this problem entirely, we have to find a way to reset the view position to exactly where it was before. In case this is not possible in the `QPlainTextEdit`, and since we are planning to use some other advanced text editor like `KTextEditor` in the future, I think it might be possible in it.\r\n\r\nCan you explain a bit on how you think we can try to better preserve view position?  Hi everybody, \r\n\r\nHow can we insert new instructions with Cutter when patching a binary? I don't mean nopping or editing the existing instr/bytes, I mean adding new ones without overwriting, so everything should move the corresponding offsets.\r\n\r\nIn the context menu (Right click - Edit) there's not such option.\r\n![image](https://user-images.githubusercontent.com/41084837/85940337-f5f5be80-b91b-11ea-9640-255b6bd0d1e6.png)\r\n\r\nAlso I thought about increasing the size of .text section so there's room for new instructions, but I don't seem to find the option either. \r\n\r\n![image](https://user-images.githubusercontent.com/41084837/85940595-9dbfbc00-b91d-11ea-8b0d-cc9b19b77084.png)  **Environment information**\r\n* Operating System: macOS 10.15.5\r\n* Cutter version: 1.10.3\r\n* Obtained from:\r\n  - [x] Built from source\r\n  - [ ] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format:\r\n\r\n**Describe the bug**\r\nWhen building with MacPorts installed Python (tried 3.6 to 3.8) and pyside2 and both python feature switches on, I get symbol not found errors:\r\n```\r\n:info:build /Library/Developer/CommandLineTools/usr/bin/clang++ -stdlib=libc++ -rdynamic -headerpad_max_install_names  -arch x86_64 -Wl,-syslibroot,/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -mmacosx-version-min=10.15 -Wl,-rpath,@executable_path/../Frameworks -o Cutter.app/Contents/MacOS/Cutter Main.o Cutter.o EditStringDialog.o WriteCommandsDialogs.o DisassemblerGraphView.o OverviewView.o RichTextPainter.o InitialOptionsDialog.o AboutDialog.o CommentsDialog.o EditInstructionDialog.o FlagDialog.o RenameDialog.o RemoteDebugDialog.o NativeDebugDialog.o XrefsDialog.o MainWindow.o Helpers.o HexAsciiHighlighter.o HexHighlighter.o Highlighter.o MdHighlighter.o DirectionalComboBox.o AsmOptionsWidget.o NewFileDialog.o AnalTask.o CommentsWidget.o ConsoleWidget.o Dashboard.o EntrypointWidget.o ExportsWidget.o FlagsWidget.o FunctionsWidget.o ImportsWidget.o Omnibar.o RelocsWidget.o SectionsWidget.o SegmentsWidget.o StringsWidget.o SymbolsWidget.o DisassemblyContextMenu.o DisassemblyWidget.o HexdumpWidget.o Configuration.o Colors.o SaveProjectDialog.o TempConfig.o SvgIconEngine.o SyntaxHighlighter.o DecompilerWidget.o VisualNavbar.o GraphView.o PreferencesDialog.o AppearanceOptionsWidget.o GraphOptionsWidget.o PreferenceCategory.o QuickFilterView.o ClassesWidget.o ResourcesWidget.o VTablesWidget.o TypesWidget.o HeadersWidget.o SearchWidget.o CutterApplication.o PythonAPI.o R2PluginsDialog.o CutterDockWidget.o CutterTreeWidget.o GraphWidget.o OverviewWidget.o JsonTreeItem.o JsonModel.o VersionInfoDialog.o ZignaturesWidget.o AsyncTask.o AsyncTaskDialog.o StackWidget.o RegistersWidget.o ThreadsWidget.o ProcessesWidget.o BacktraceWidget.o MapFileDialog.o CommandTask.o ProgressIndicator.o R2Task.o R2TaskDialog.o DebugActions.o MemoryMapWidget.o DebugOptionsWidget.o PluginsOptionsWidget.o BreakpointWidget.o BreakpointsDialog.o AttachProcDialog.o RegisterRefsWidget.o SetToDataDialog.o EditVariablesDialog.o EditFunctionDialog.o CutterTreeView.o ComboQuickFilterView.o HexdumpRangeDialog.o QtResImporter.o CutterSeekable.o RefreshDeferrer.o WelcomeDialog.o RunScriptTask.o EditMethodDialog.o TypesInteractionDialog.o SdbWidget.o PythonManager.o PluginManager.o BasicBlockHighlighter.o BasicInstructionHighlighter.o LinkTypeDialog.o ColorPicker.o ColorThemeWorker.o ColorThemeComboBox.o ColorThemeListView.o ColorThemeEditDialog.o UpdateWorker.o MemoryDockWidget.o CrashHandler.o BugReporting.o HighDpiPixmap.o GraphGridLayout.o HexWidget.o SelectionHighlight.o Decompiler.o AddressableItemContextMenu.o AddressableItemModel.o ListDockWidget.o MultitypeFileSaveDialog.o BoolToggleDelegate.o IOModesController.o cutterbindings_module_wrapper.o cuttercore_wrapper.o configuration_wrapper.o mainwindow_wrapper.o basicblockhighlighter_wrapper.o addressableitemcontextmenu_wrapper.o cutterdockwidget_wrapper.o cutterplugin_wrapper.o qrc_resources.o qrc_native.o qrc_dark.o qrc_midnight.o qrc_light.o moc_Cutter.o moc_EditStringDialog.o moc_WriteCommandsDialogs.o moc_DisassemblerGraphView.o moc_OverviewView.o moc_AboutDialog.o moc_AsmOptionsWidget.o moc_CommentsDialog.o moc_EditInstructionDialog.o moc_FlagDialog.o moc_RenameDialog.o moc_RemoteDebugDialog.o moc_NativeDebugDialog.o moc_XrefsDialog.o moc_HexAsciiHighlighter.o moc_HexHighlighter.o moc_MainWindow.o moc_Highlighter.o moc_MdHighlighter.o moc_DirectionalComboBox.o moc_InitialOptionsDialog.o moc_NewFileDialog.o moc_AnalTask.o moc_CommentsWidget.o moc_ConsoleWidget.o moc_Dashboard.o moc_EntrypointWidget.o moc_ExportsWidget.o moc_FlagsWidget.o moc_FunctionsWidget.o moc_ImportsWidget.o moc_Omnibar.o moc_RelocsWidget.o moc_SectionsWidget.o moc_SegmentsWidget.o moc_StringsWidget.o moc_SymbolsWidget.o moc_DisassemblyContextMenu.o moc_DisassemblyWidget.o moc_HexdumpWidget.o moc_Configuration.o moc_SaveProjectDialog.o moc_SyntaxHighlighter.o moc_DecompilerWidget.o moc_VisualNavbar.o moc_GraphView.o moc_PreferencesDialog.o moc_AppearanceOptionsWidget.o moc_GraphOptionsWidget.o moc_QuickFilterView.o moc_ClassesWidget.o moc_ResourcesWidget.o moc_CutterApplication.o moc_VTablesWidget.o moc_TypesWidget.o moc_HeadersWidget.o moc_SearchWidget.o moc_R2PluginsDialog.o moc_CutterDockWidget.o moc_CutterTreeWidget.o moc_GraphWidget.o moc_OverviewWidget.o moc_VersionInfoDialog.o moc_ZignaturesWidget.o moc_AsyncTask.o moc_AsyncTaskDialog.o moc_StackWidget.o moc_RegistersWidget.o moc_ThreadsWidget.o moc_ProcessesWidget.o moc_BacktraceWidget.o moc_MapFileDialog.o moc_StringsTask.o moc_FunctionsTask.o moc_CommandTask.o moc_R2Task.o moc_R2TaskDialog.o moc_DebugActions.o moc_MemoryMapWidget.o moc_DebugOptionsWidget.o moc_PluginsOptionsWidget.o moc_BreakpointWidget.o moc_BreakpointsDialog.o moc_AttachProcDialog.o moc_RegisterRefsWidget.o moc_SetToDataDialog.o moc_EditVariablesDialog.o moc_EditFunctionDialog.o moc_CutterTreeView.o moc_ComboQuickFilterView.o moc_HexdumpRangeDialog.o moc_CutterSeekable.o moc_RefreshDeferrer.o moc_WelcomeDialog.o moc_RunScriptTask.o moc_EditMethodDialog.o moc_TypesInteractionDialog.o moc_SdbWidget.o moc_PythonManager.o moc_PluginManager.o moc_UpdateWorker.o moc_ColorPicker.o moc_ColorThemeWorker.o moc_ColorThemeComboBox.o moc_MemoryDockWidget.o moc_ColorThemeListView.o moc_ColorThemeEditDialog.o moc_LinkTypeDialog.o moc_HexWidget.o moc_Decompiler.o moc_AddressableItemContextMenu.o moc_ListDockWidget.o moc_MultitypeFileSaveDialog.o   -F/opt/local/libexec/qt5/lib -L/usr/local/lib -lr_core -lr_config -lr_cons -lr_io -lr_flag -lr_asm -lr_debug -lr_hash -lr_bin -lr_lang -lr_parse -lr_bp -lr_egg -lr_reg -lr_search -lr_syscall -lr_socket -lr_fs -lr_anal -lr_magic -lr_util -lr_crypto -F/opt/local/Library/Frameworks/Python.framework -framework Python /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/shiboken2/libshiboken2.cpython-38-darwin.5.15.dylib /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/PySide2/libpyside2.cpython-38-darwin.5.15.dylib -framework QtSvg -framework QtWidgets -framework QtGui -framework AppKit -framework Metal -framework QtNetwork -framework QtCore -framework DiskArbitration -framework IOKit -framework OpenGL -framework AGL   \r\n:info:build Undefined symbols for architecture x86_64:\r\n:info:build   \"_PyBytes_AsString\", referenced from:\r\n:info:build       pySideDestructionVisitor(SbkObject*, void*) in PythonManager.o\r\n:info:build   \"_PyModule_Create2\", referenced from:\r\n:info:build       PyInit_api() in PythonAPI.o\r\n:info:build       PyInit_qtres() in QtResImporter.o\r\n:info:build   \"_PyUnicode_AsUTF8String\", referenced from:\r\n:info:build       pySideDestructionVisitor(SbkObject*, void*) in PythonManager.o\r\n:info:build   \"_PyUnicode_FromString\", referenced from:\r\n:info:build       api_version(_object*, _object*) in PythonAPI.o\r\n:info:build       api_cmd(_object*, _object*) in PythonAPI.o\r\n:info:build   \"_Py_DecodeLocale\", referenced from:\r\n:info:build       PythonManager::initPythonHome() in PythonManager.o\r\n:info:build   \"__Py_Dealloc\", referenced from:\r\n:info:build       QtResImport(char const*) in QtResImporter.o\r\n:info:build       PluginManager::loadPythonPlugin(char const*) in PluginManager.o\r\n:info:build       _QMap_QString_QVariant__CppToPython__QMap_QString_QVariant_(void const*) in cutterbindings_module_wrapper.o\r\n:info:build       Shiboken::AutoDecRef::~AutoDecRef() in cutterbindings_module_wrapper.o\r\n:info:build       Shiboken::AutoDecRef::~AutoDecRef() in cuttercore_wrapper.o\r\n:info:build       Sbk_CutterCoreFunc_addTypes(_object*, _object*) in cuttercore_wrapper.o\r\n:info:build       Sbk_CutterCoreFunc_ansiEscapeToHtml(_object*, _object*) in cuttercore_wrapper.o\r\n:info:build       ...\r\n:info:build ld: symbol(s) not found for architecture x86_64\r\n:info:build clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n``` \r\nComplete build log:\r\n[main.log](https://github.com/radareorg/cutter/files/4830747/main.log)\r\n\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Configure with qmake with python and python bindings enabled with paths in appropriate variables (SHIBOKEN_EXECUTABLE etc., full content can be found in the log file)\r\n2. Run the build\r\n3. The build fails after a while\r\n\r\n**Expected behavior**\r\nIt should successfully build\r\n\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n Thanks with some tinkering it now builds (I had to manually provide python library paths), but it doesnt launch:\r\n```\r\n$ /Applications/MacPorts/Cutter.app/Contents/MacOS/Cutter \r\nqt.qpa.fonts: Populating font family aliases took 238 ms. Replace uses of missing font family \"Sans-serif\" with one that exists to avoid this cost. \r\nSetting PYTHONHOME = \"/Applications/MacPorts/Cutter.app/Contents/MacOS\"  for macOS Application Bundle.\r\nPYTHONHOME = \"/Applications/MacPorts/Cutter.app/Contents/MacOS\"\r\nPython path configuration:\r\n  PYTHONHOME = '/Applications/MacPorts/Cutter.app/Contents/MacOS'\r\n  PYTHONPATH = (not set)\r\n  program name = 'python3'\r\n  isolated = 0\r\n  environment = 1\r\n  user site = 1\r\n  import site = 1\r\n  sys._base_executable = '/Applications/MacPorts/Cutter.app/Contents/MacOS/Cutter'\r\n  sys.base_prefix = '/Applications/MacPorts/Cutter.app/Contents/MacOS'\r\n  sys.base_exec_prefix = '/Applications/MacPorts/Cutter.app/Contents/MacOS'\r\n  sys.executable = '/Applications/MacPorts/Cutter.app/Contents/MacOS/Cutter'\r\n  sys.prefix = '/Applications/MacPorts/Cutter.app/Contents/MacOS'\r\n  sys.exec_prefix = '/Applications/MacPorts/Cutter.app/Contents/MacOS'\r\n  sys.path = [\r\n    '/Applications/MacPorts/Cutter.app/Contents/MacOS/lib/python38.zip',\r\n    '/Applications/MacPorts/Cutter.app/Contents/MacOS/lib/python3.8',\r\n    '/Applications/MacPorts/Cutter.app/Contents/MacOS/lib/python3.8/lib-dynload',\r\n  ]\r\nFatal Python error: init_fs_encoding: failed to get the Python codec of the filesystem encoding\r\nPython runtime state: core initialized\r\nModuleNotFoundError: No module named 'encodings'\r\n\r\nCurrent thread 0x0000000117eaedc0 (most recent call first):\r\n<no Python frame>\r\n```\r\nUse --pythonhome to point to MacPorts python does work, but is there a way to make it use that python installation by default? I tried changing the paths in PythonManager.cpp, the path does change but the program still crashes.   **Environment information**\r\n* Operating System: Ubuntu 16.04.6 LTS\r\n* Cutter version: 1.10.3\r\n* Obtained from:\r\n  - [x] Built from source\r\n  - [ ] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: ELF 32-bit LSB executable\r\n\r\n**Describe the bug**\r\n\r\ni have already install Cutter, but when i'm tried to open binary(ELF 32bit) file, Cutter got force close.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to 'Open File'\r\n2. Click on 'Select'\r\n3. Scroll down to 'Binary File ELF 32 bit'\r\n4. Click OK\r\n5. Cutter Force Close\r\n6. Example Binary File: [examplebin1file.zip](https://github.com/radareorg/cutter/files/4825047/examplebin1file.zip) Hello, could you please fill the issue template accordingly?\r\nWe would need a copy of the binary file and a stack trace in order for us to try to reproduce the bug here.\r\nIf you could provide us with such things, it would help us for investigating the issue.\r\nThank you :) > The fragment of output log from your previous issue mentioned loading of plugin. If you have any old plugins compiled against different cutter version those may cause problems. Please try running without any plugins. You can remove the plugin manually or start the Cutter with `--no-plugins` flag.\r\n\r\nThanks, it's work now..  On AppVeyor:\r\n```\r\nsrc\\subprojects\\radare2\\test\\unit\\meson.build:53:4: ERROR: Unknown variable \"rpath\".\r\n```\r\n Did you try Cutter with this version to make sure nothing is broken?\r\nI will try to try that during the weekend.  Hi, i trying to install Cutter in Ubuntu 16.04.6 LTS, i have the latest version of Cutter, but when i try to compile from the sources:\r\n1. mkdir build && cd build\r\n2. cmake -DCUTTER_USE_BUNDLED_RADARE2=ON ../src\r\n3. cmake --build .\r\n\r\nthen i got this error: **r_util/r_annotated_code.h: No such file or directory**\r\n\r\ni didn't solve this problem until now.. :disappointed:  @nauliajati your **radare2** submodule is out of sync. Either you do `git submodule sync --recursive` or just go to **radare2** dir and do `git pull & git checkout e968c94` as a temporary solution. i have already doing that, $ git clone --recurse-submodules https://github.com/radareorg/cutter\r\nfatal: destination path 'cutter' already exists and is not an empty directory. @nauliajati it's telling that you have already cloned cutter. No need to do that again. Just do `cd cutter` and run the above-mentioned command. @nauliajati Hey, you have opened a similar issue 3 weeks ago here: https://github.com/radareorg/r2ghidra-dec/issues/113#issuecomment-638641362. Itay and I had explained the reason for why this is happening there. If you are still facing issues, I would suggest you make a new clone (deleting the old one) and try it now so that it will work for sure. okay, i successfully install Cutter, but when i trying to open ELF 32-bit file, Cutter got force close..\r\n(locked: no new keys can be created (asm.bytespace))\r\nPlugins are loaded from \"~/.local/share/RadareOrg/Cutter/plugins\"\r\nLoaded 1 plugin(s).\r\n[x] Analyze all flags starting with sym. and entry0 (aa)\r\n[x] Analyze function calls (aac)\r\n[x] Analyze len bytes of instructions for references (aar)\r\n[x] Check for objc references\r\n[x] Check for vtables\r\n[x] Type matching analysis for all functions (aaft)\r\n[x] Propagate noreturn information\r\n[x] Use -AA or aaaa to perform additional experimental analysis. Did you update your submodule? Is it possible to share that binary? Of course, i have already update submodule: $ git clone --recurse-submodules https://github.com/radareorg/cutter where can i share binary file? You can share it here. Also, can you try `cd radare2 && git checkout e968c9442 `. Then build cutter. > i have already update submodule: $ git clone --recurse-submodules https://github.com/radareorg/cutter\r\n\r\nJust making sure. So you removed the previous clone and made a new clone, right? > > i have already update submodule: $ git clone --recurse-submodules https://github.com/radareorg/cutter\r\n> \r\n> Just making sure. So you removed the previous clone and made a new clone, right?\r\n\r\nyes, i remove it first, and clone again with --recurse-submodules options.. > You can share it here. Also, can you try `cd radare2 && git checkout e968c9442 `. Then build cutter.\r\n\r\ni'll tried it first.. > i'll tried it first..\r\n\r\nThis is actually a different commit than what surendrajat mentioned. If you made a new clone with `git clone --recurse-submodules https://github.com/radareorg/cutter`, you don't have to try this. > > i'll tried it first..\r\n> \r\n> This is actually a different commit than what surendrajat mentioned. If you made a new clone with `git clone --recurse-submodules https://github.com/radareorg/cutter`, you don't have to try this.\r\n\r\nokay, now i tried installing cutter again.. didn't solve, i have already reinstall Cutter and success, but when i'm tried to open binary file, Cutter got force close..\r\nCutter -v == 1.10.3\r\ni have tried $ Cutter -A 2 <bin_file> or $ Cutter -A 1 <bin_file>, but didn't solve this issue.. @nauliajati You should probably open another issue for the crash. This issue should be closed now. Okay, i already open another issue, Thanks.  **Environment information**\r\n* Operating System: Windows 10 build 19041 and build 17763\r\n* Cutter version: 1.10.3\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [X] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: Tried both a TI C6745 and TI C55x \"Hello World\" ELF file and also flash dump of TI AIS image. I compiled the ELF Hello World files using Code Composer 10.\r\n\r\n**Describe the bug**\r\nAfter selecting binary file and selecting TMS320 as architecture, clicking open results in an immediate crash.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to 'Open File'\r\n2. Click on 'Select'\r\n3. Click on C55x 'hello world' example [c5510_helloworld.zip](https://github.com/radareorg/cutter/files/4819948/c5510_helloworld.zip)\r\n4. Click on 'Open'\r\n5. Click on 'Open'\r\n6. Click on 'Advanced Options'\r\n7. Click on 'Architecture'\r\n8. Scroll down to 'TMS320'\r\n9. Click on 'Ok'\r\n10. See error\r\n\r\n**Expected behavior**\r\nCutter should open and show dissasembly\r\n\r\n**Screenshots**\r\n[cutter_error](https://user-images.githubusercontent.com/7553165/85414816-9756cc00-b53a-11ea-9ee8-681332a55a5b.png)\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n You're correct, the file I attached for the C55x is a COFF. I have the C6745 ELF if it helps? Sorry for the confusion, have been switching between the two today.  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nThis PR implements menus for `Breakpoint` and `Debug`. It is mostly taken from the `DisassemblyContextMenu` we have been using and there are some additional helper functions as discussed in #2256 .\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n\r\n- Make sure code compiles without new warnings (please tell me if there are any).\r\n- Test if breakpoints and debug functionalities are working just like it used to before.\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n @karliss  I'm not sure what you mean by \r\n``` I don't like that as modifying parent from children should be avoided. If the menu is flat the menu user can easily do addActions(menu->getActions())```. Can you please explain?\r\n\r\nCurrently, this is how actions are added to the decompiler widget.\r\nhttps://github.com/radareorg/cutter/blob/3100872d99f0480538dcecf6d0ee5b305a3410cc/src/widgets/DecompilerWidget.cpp#L89 > Does it work for actions that are in submenus?\r\n\r\nAre all menus other than `mCtxMenu` not submenus? I mean, in this PR, `mCtxMenu` is the main menu, `breakpointMenu` and `debugMenu` are sub-menus, right? Or does submenus mean menus inside one of these menus? > > Are all menus other than `mCtxMenu` not submenus?\r\n> \r\n> Yes I was referring to breakpoint menu and debugMenu, everything that isn't the top level decompiler context menu.\r\n\r\nThen yes, it works for actions that are in sub-menus. Actually I haven't made any changes to this line of code.\r\nhttps://github.com/radareorg/cutter/blob/3100872d99f0480538dcecf6d0ee5b305a3410cc/src/widgets/DecompilerWidget.cpp#L89  <!-- Filling this template is mandatory -->\r\nSome updates to the Cutter docs.\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nThis PR has the following:\r\n- Move building errors from common errors to building page and move rest under user-docs/common-issues\r\n- Title capitalization (IDK I'm obsessed with it xD)\r\n- Updated troubleshooting part with git submodule related error\r\n- Apply Grammarly suggestions on all the docs\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\nBuild and run docs.\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\nPartially close$ #744\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n I've added a widget page with few moving screenshots(WIP). Let me know what you think. It can be made a submodule to keep the old structure.\n\nOn Sat, Jun 27, 2020, 21:46 karliss <notifications@github.com> wrote:\n\n> I would be much happier if documentation was moved to separate repository\n> before adding a bunch of screenshots for all the widgets and dialogs. Those\n> could quickly cause bloat.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/pull/2259#issuecomment-650563261>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABRT7MVWMXNXH3J64I7G2DRYXZ2ZANCNFSM4ODUP3LA>\n> .\n>\n I see #2056 open for just this. If it's done I can move things there.\r\nAs for submodule, I think it'll add additional commits to this repo on each update to docs, which will probably be better if avoided. How about splitting API docs and other docs and leave API docs here? You might want to consider adding the `:menuselection:` and `:guilabel:` to the docs as part of this or another PR. @karliss found these features just recently\r\n\r\nhttps://www.sphinx-doc.org/en/master/usage/restructuredtext/roles.html @karliss I've removed the widget intro part and will open another PR to continue work on that until we decide if to split repo or not. is there anything left to do? > is there anything left to do?\r\n\r\nYes. Finishing right away. :P  It is possible to use CodeQL directly from GitHub now, without the LGTM:\r\n- https://help.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/managing-alerts-from-code-scanning\r\n\r\nNote, it is already enabled on the \"radareorg\" account.  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n\r\n**Detailed description**\r\n\r\nCutter had its own class for renaming things, which is unnecessary for most renaming tasks since Qt offers [QInputDialog](https://doc.qt.io/qt-5/qinputdialog.html).\r\n\r\nThis Pull Request removes RenameDialog in favor if the built-in feature. This is another step towards improving the mess we have with renaming.\r\n\r\nIn the near future, I see a possibility to subclass QInputdialog for the improved name+realname renaming dialog.\r\n\r\n\r\n**Please note:** _This pull request has an issue I couldn't solve by my own and I'll be happy for your feedback and help. For some reason `QInputDialog::getText` shown very narrow and its width does not fit the content_\r\n![image](https://user-images.githubusercontent.com/20182642/84589478-5e7e6f00-ae37-11ea-88fe-5c067b50b652.png)\r\n\r\n\r\n**Test plan (required)**\r\n\r\nClasses widget:\r\n - Add new class\r\n - Rename class\r\n\r\nFlags Widget:\r\n - Rename a flag\r\n\r\nFunctions Widget:\r\n - Rename a function\r\n\r\nDisassembly Context Menu:\r\n - Rename flags\r\n - Add flags\r\n - Rename current function\r\n - Rename called functions\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  Blocked by broken decompiler  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nThis PR adds `asm.reloff.flags` checkbox under *Preferences* -> *Disassembly*.\r\n\r\n![asm-reloff-flags](https://user-images.githubusercontent.com/11215000/84417993-1cd1a680-ac34-11ea-9595-8918f1e7402c.gif)\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\nGo to *Preferences* -> *Disassembly* -> check *Show offsets relative to a flag (asm.reloff.flags)*\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n For this specific case it can use different ui components, for example \n\n```\nShow offset as relative to:    [x] Functions [ ] Flags\nShow offset as relative to:    [ ] Functions [x] Flags\nShow offset as relative to:    [x] Functions [x] Flags\nShow offset as relative to:    [ ] Functions [ ] Flags\n```\nOr a combo box maybe (like I did with comments). \n\n\n\nIn general, I was thinking about it as well, and I see couple of ways we can go. Of course, some of them can be combined. \n\n1. First of all, the most complicated one, is refactoring of the whole thing into a modern setting widget (e.g vscode's). I think that Binja has something similar as well. This includes full descriptions, automatically creating the view etc. And of course with a quick filtering and a way to work together with a command pallette in the future.\n\n2. Turn the dialog into a dockable widget. This will allow more space and the items will look less crowded\n\n3. Use group boxes to gather related configurations together in a logical way. This will make it visually easier to navigate in the view.\n\n4. Use more tabs, and group configurations together in a logical way\n\n5. Use sub-items in the side bar to organize configurations in a logical way\n\n6. Use collapsible part at the bottom of the view to hide less-common config  @ITAYC0HEN For this change I like the first idea you suggested. It'll save up space and will be consistent with the current logic of `graph.offset` which won't really fit in the comboBox.\r\nAbout the entire preference view change, yes, I like that idea too but I am not quite ready to pick it yet. If base is set, I can add things to it :) This is how it looks like now:\r\n![update-asm-reloff-flags](https://user-images.githubusercontent.com/11215000/84510402-b2c40a80-ace2-11ea-89ba-26429bd781ce.gif)\r\n I think that \"Show offsets relative to\" can also be grayed out when asm.offset is disabled :) @ITAYC0HEN Cool. It's done now. I've rebased and the build is broken but it should work.  \r\n<!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nThis PR adds `asm.reloff` under *Preferences* -> *Disassembly*.\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n![rel-offset](https://user-images.githubusercontent.com/11215000/84299971-470d6080-ab6f-11ea-9f90-1108848cdcbb.gif)\r\n\r\n**Test plan (required)**\r\nGo to *Preferences* -> *Disassembly* -> check *Show relative offset*\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\nCloses #2242\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n @ITAYC0HEN It does enable/disable `asm.reloff` now but only when the user presses `asm.offset` and does not immediately care about `graph.offset`. I'm still trying to figure that out. @karliss @ITAYC0HEN There is one issue now: `asm.reloff` gets unchecked every time some changes are made in `graph.offset` (ie. checked/unchecked). I thought it was due to `emit asmOptionsChanged()` but it inturn calls `updateAsmOptionsFromVars()` and config values are honored. That means only one thing that `graph.offset` is somehow resetting `asm.reloff`. Thanks, @karliss. Works now. I've pushed the changes.\r\n@ITAYC0HEN Done, I guess :)  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n Please check PR #2227 for details\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Notes**\r\nPlease merge along with [#114](https://github.com/radareorg/r2ghidra-dec/pull/114) in r2ghidra-dec. AppVeyor build is failing because it doesn't have the updated r2ghidra-dec. > The linker error on windows needs to be fixed on r2ghidra side. Marking `r2ghidra_decompile_annotated_code` as R_API should fix it.\r\n\r\nI will send a PR with this change now.  . **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\nThere is no easy way to select multiple instructions in the disassembly view and copy them quickly as a hex-sequence, or Python byte array or c array, etc. \r\n\r\nI think this is very useful when scripting\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\n\r\nAdd a context menu option for the disassembly view in which selected instructions can be copied as special. format (e.g hex) \r\n\r\n**Context**\r\nInspired by a usage of similar feature in IDA plugin that can be seen in this video (minute 14-15)\r\n\r\nhttps://youtu.be/JPvcLLYR0tE Syncing selection range is highly desirable, and in general honoring ranged selection everywhere (disas, graph, hex, decompiler,...).\r\n\r\nI wouldn't say it is an alternative because I don't want the user to open hexdump in order to copy the bytes as hex, python or C. For sure :)   <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nThis PR is to update Cutter docs. Starting with adding missing dependencies to dev docs and will slowly move towards user docs. Relates to #744 \r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\nBuild and run docs.\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n @karliss KSyntaxHighlighter & graphviz seems like a case that may need separate mention but for me difficult to avoid kinda sounds the same as the main dependencies. Usually, all build instruction pages show required and recommended dependencies together for the convenience (of setting up env with one command).\r\nI also think that the wget option is good, and git one(if it can be replaced in all script) is probably better. @karliss @ITAYC0HEN The `git clone...` instructions were only available under the **Building on Linux** section so I've made a common **Getting the Source** section to avoid repetition.  **Detailed description**\r\nMinor fix to a warning that wasn't informative enough\r\n\r\n  **Is your feature request related to a problem? Please describe.**\r\n\r\nThe filters in some widgets are using Case-Sensitive. \r\nFor example - Types widget, Flags widget\r\n\r\n**Describe the solution you'd like**\r\n\r\nEnable case-insensitive search in them all\r\n\r\n**Describe alternatives you've considered**\r\n\r\nBest option will be to set case-insensitive by default and add a little button to toggle the mode. But that is only a nice-to-have\r\n\r\n**Additional context**\r\n\r\nIt will be also nice to make sure that the filters enable [Wildcard Matching](https://doc.qt.io/archives/qt-4.8/qregexp.html#wildcard-matching)\r\n Yes! The `addAction` thingy looks great.\r\n\r\nI was actually thinking of something like shown in the gif below, much more user friendly and allows to play with the different flags >>\r\n\r\n![Peek 2020-06-02 18-58](https://user-images.githubusercontent.com/20182642/83542001-0aa08b80-a503-11ea-8706-9f94593bd69e.gif)\r\n  **Environment information**\r\n* Operating System: Debian GNU/Linux bullseye\r\n* Cutter version: git from master\r\n* Obtained from:\r\n  - [x] Built from source\r\n  - [ ] Downloaded from release\r\n  - [ ] Distribution repository\r\n\r\n\r\n```\r\nrm -r build/\r\nmkdir -p build/\r\ncd build/\r\ncmake -DCUTTER_USE_BUNDLED_RADARE2=OFF ../src/\r\nmake\r\nmake install\r\n\r\n\r\n\r\n-- The C compiler identification is GNU 9.3.0\r\n-- The CXX compiler identification is GNU 9.3.0\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Found PkgConfig: /usr/bin/pkg-config (found version \"0.29.2\") \r\n-- Checking for one of the modules 'r_core'\r\n-- Found Radare2: Radare2::libr  \r\n-- Checking for module 'libgvc'\r\n--   Found libgvc, version 2.43.0\r\n-- Found Graphviz: /usr/include/graphviz  \r\n-- \r\n-- Building Cutter version 1.10.3\r\n-- Options:\r\n-- - Bundled radare2: OFF\r\n-- - Python: OFF\r\n-- - Python Bindings: OFF\r\n-- - Crash Handling: OFF\r\n-- - KSyntaxHighlighting: ON\r\n-- - Graphviz: TRUE\r\n-- \r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /tmp/cutter/build\r\nroot@anonymous:/tmp/cutter/build# make\r\nmake[1]: Entering directory '/tmp/cutter/build'\r\nmake[2]: Entering directory '/tmp/cutter/build'\r\nScanning dependencies of target Cutter_autogen\r\nmake[2]: Leaving directory '/tmp/cutter/build'\r\nmake[2]: Entering directory '/tmp/cutter/build'\r\n[  1%] Automatic MOC and UIC for target Cutter\r\nAutoMoc: /tmp/cutter/src/common/PythonManager.h:0: Note: No relevant classes found. No output generated.\r\nAutoUic: /tmp/cutter/src/core/MainWindow.ui: Warning: action `actionSearch' not declared\r\nmake[2]: Leaving directory '/tmp/cutter/build'\r\n[  1%] Built target Cutter_autogen\r\nmake[2]: Entering directory '/tmp/cutter/build'\r\n[  2%] Automatic RCC for themes/lightstyle/light.qrc\r\n[  2%] Automatic RCC for resources.qrc\r\n[  3%] Automatic RCC for themes/native/native.qrc\r\n[  3%] Automatic RCC for themes/qdarkstyle/dark.qrc\r\n[  4%] Automatic RCC for themes/midnight/midnight.qrc\r\nScanning dependencies of target Cutter\r\nmake[2]: Leaving directory '/tmp/cutter/build'\r\nmake[2]: Entering directory '/tmp/cutter/build'\r\n[  4%] Building CXX object CMakeFiles/Cutter.dir/Cutter_autogen/mocs_compilation.cpp.o\r\n[  5%] Building CXX object CMakeFiles/Cutter.dir/Main.cpp.o\r\n[  6%] Building CXX object CMakeFiles/Cutter.dir/core/Cutter.cpp.o\r\n/tmp/cutter/src/core/Cutter.cpp: In member function \u2018QByteArray CutterCore::assemble(const QString&)\u2019:\r\n/tmp/cutter/src/core/Cutter.cpp:1072:42: error: \u2018RCore\u2019 {aka \u2018struct r_core_t\u2019} has no member named \u2018rasm\u2019\r\n 1072 |     RAsmCode *ac = r_asm_massemble(core->rasm, code.toUtf8().constData());\r\n      |                                          ^~~~\r\n/tmp/cutter/src/core/Cutter.cpp: In member function \u2018QString CutterCore::disassemble(const QByteArray&)\u2019:\r\n/tmp/cutter/src/core/Cutter.cpp:1084:45: error: \u2018RCore\u2019 {aka \u2018struct r_core_t\u2019} has no member named \u2018rasm\u2019\r\n 1084 |     RAsmCode *ac = r_asm_mdisassemble(core->rasm, reinterpret_cast<const ut8 *>(data.constData()), data.length());\r\n      |                                             ^~~~\r\n/tmp/cutter/src/core/Cutter.cpp: In member function \u2018QJsonObject CutterCore::getAddrRefs(RVA, int)\u2019:\r\n/tmp/cutter/src/core/Cutter.cpp:1363:22: error: \u2018RCore\u2019 {aka \u2018struct r_core_t\u2019} has no member named \u2018rasm\u2019\r\n 1363 |     int bits = core->rasm->bits;\r\n      |                      ^~~~\r\n/tmp/cutter/src/core/Cutter.cpp:1427:32: error: \u2018RCore\u2019 {aka \u2018struct r_core_t\u2019} has no member named \u2018rasm\u2019\r\n 1427 |             r_asm_set_pc(core->rasm, addr);\r\n      |                                ^~~~\r\n/tmp/cutter/src/core/Cutter.cpp:1428:37: error: \u2018RCore\u2019 {aka \u2018struct r_core_t\u2019} has no member named \u2018rasm\u2019\r\n 1428 |             r_asm_disassemble(core->rasm, &op, (unsigned char*)buf.data(), buf.size());\r\n      |                                     ^~~~\r\nIn file included from /tmp/cutter/src/common/BasicInstructionHighlighter.h:4,\r\n                 from /tmp/cutter/src/core/Cutter.cpp:14:\r\n/tmp/cutter/src/core/Cutter.cpp: In member function \u2018QStringList CutterCore::getAsmPluginNames()\u2019:\r\n/tmp/cutter/src/core/Cutter.cpp:2383:30: error: \u2018RCore\u2019 {aka \u2018struct r_core_t\u2019} has no member named \u2018rasm\u2019\r\n 2383 |     CutterRListForeach(core->rasm->plugins, it, RAsmPlugin, ap) {\r\n      |                              ^~~~\r\n/tmp/cutter/src/core/CutterCommon.h:19:9: note: in definition of macro \u2018CutterRListForeach\u2019\r\n   19 |     if (list) for (it = list->head; it && ((x=static_cast<type*>(it->data))); it = it->n)\r\n      |         ^~~~\r\n/tmp/cutter/src/core/Cutter.cpp:2383:30: error: \u2018RCore\u2019 {aka \u2018struct r_core_t\u2019} has no member named \u2018rasm\u2019\r\n 2383 |     CutterRListForeach(core->rasm->plugins, it, RAsmPlugin, ap) {\r\n      |                              ^~~~\r\n/tmp/cutter/src/core/CutterCommon.h:19:25: note: in definition of macro \u2018CutterRListForeach\u2019\r\n   19 |     if (list) for (it = list->head; it && ((x=static_cast<type*>(it->data))); it = it->n)\r\n      |                         ^~~~\r\n/tmp/cutter/src/core/Cutter.cpp: In member function \u2018QList<RAsmPluginDescription> CutterCore::getRAsmPluginDescriptions()\u2019:\r\n/tmp/cutter/src/core/Cutter.cpp:2494:30: error: \u2018RCore\u2019 {aka \u2018struct r_core_t\u2019} has no member named \u2018rasm\u2019\r\n 2494 |     CutterRListForeach(core->rasm->plugins, it, RAsmPlugin, ap) {\r\n      |                              ^~~~\r\n/tmp/cutter/src/core/CutterCommon.h:19:9: note: in definition of macro \u2018CutterRListForeach\u2019\r\n   19 |     if (list) for (it = list->head; it && ((x=static_cast<type*>(it->data))); it = it->n)\r\n      |         ^~~~\r\n/tmp/cutter/src/core/Cutter.cpp:2494:30: error: \u2018RCore\u2019 {aka \u2018struct r_core_t\u2019} has no member named \u2018rasm\u2019\r\n 2494 |     CutterRListForeach(core->rasm->plugins, it, RAsmPlugin, ap) {\r\n      |                              ^~~~\r\n/tmp/cutter/src/core/CutterCommon.h:19:25: note: in definition of macro \u2018CutterRListForeach\u2019\r\n   19 |     if (list) for (it = list->head; it && ((x=static_cast<type*>(it->data))); it = it->n)\r\n      |                         ^~~~\r\n/tmp/cutter/src/core/Cutter.cpp: In member function \u2018QList<FunctionDescription> CutterCore::getAllFunctions()\u2019:\r\n/tmp/cutter/src/core/Cutter.cpp:2533:26: error: \u2018r_anal_function_count_edges\u2019 was not declared in this scope; did you mean \u2018r_anal_fcn_count_edges\u2019?\r\n 2533 |         function.edges = r_anal_function_count_edges(fcn, nullptr);\r\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |                          r_anal_fcn_count_edges\r\nmake[2]: *** [CMakeFiles/Cutter.dir/build.make:319: CMakeFiles/Cutter.dir/core/Cutter.cpp.o] Error 1\r\nmake[2]: Leaving directory '/tmp/cutter/build'\r\nmake[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/Cutter.dir/all] Error 2\r\nmake[1]: Leaving directory '/tmp/cutter/build'\r\nmake: *** [Makefile:130: all] Error 2\r\n``` what should I do how edite radare2 build option on ->\r\n\r\ncmake -DCMAKE_INSTALL_PREFIX=/cutter/ -DCMAKE_INSTALL_BINDIR=/bin/  -DCUTTER_USE_BUNDLED_RADARE2=ON ../src/\r\n\r\nbecause DCMAKE_INSTALL_BINDIR is ignored by you BUNDLED_RADARE2\r\n thx @karliss ^^  cutter search lib on /lib/ instead of ../lib/\r\n\r\nwhich means that if Cutter uses a different prefix by (-DCMAKE_INSTALL_PREFIX=), it cannot find the libs  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\n* Use CMake for building APPIMAGE\r\n* Build and install translation files using CMake, simplifies Appimage build, installs translation files during CMake builds for preparing distro specific package\r\n* Refactor some of resource access code. In future other parts of code doing similar things should also be moved there. This will help with accessing resources in Appimage builds, and removes some of the platform specific code for locating translation files by using Qt utilities.\r\n* Fix RUNAPTH for embedded python executable\r\n\r\n**Test plan (required)**\r\n\r\n* Get travis to UPLOAD the APPIMAGE\r\n* test that it runs on fresh Ubuntu 16.04 install\r\n* test that it runs a newer distro\r\n* test sample python plugin\r\n* all included decompilers work\r\n* bundled r2 resource are found using `eco` to list color schemes\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Related issues**\r\n#2098 \r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Remaining work:\r\n* [x] LDD output in Travis differs from what I get locally, need to be invstigated\r\n* [x] test that windows cmake build works, probably will need to update windows install paths it's unclear to. me the test in process. Should we tag it after merge to see if it pushes the release correctly?  alright then, so tests. passed successfully? good to be merged?\n I personally do not, especially when the debug symbols should've been in the appimage from the first place.\r\n\r\nTo make sure, you can poll on cutter-dev  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nAdded the cmdline option to open a file directly in write mode. If an analysis level is selected,the file will be opened directly in cutter without displaying any further settings dialog window.\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n\r\n- Check if old functionality still works:\r\n- -  `Cutter -A 0 TESTFILE ` Open a file directly without the -w parameter on the commandline. Should open the file directly in cutter and ask to enable write mode if trying to modify.\r\n- Check if the write mode parameter is handled correctly:\r\n-- - -  `Cutter -w -A 0 TESTFILE ` Open a file directly in cutter in write mode without any further confirmation when modifying it.\r\n-- - -  `Cutter -w TESTFILE ` Open the Load Options to ask for further settings for opening TESTFILE in cutter, with the \"Load in write mode (-w)\" box already selected:\r\n\r\n![cutter_writemode_Screenshot_2020-05-26_06-53-51](https://user-images.githubusercontent.com/24915377/82861787-1c3fcd00-9f1e-11ea-8d40-052f22068021.png)\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n\r\nThis closes #2202\r\n Changes in the documentation are fine for me, sorry for the delay and thanks for the great feedback :)  I assume this is only necessary for Windows and macOS. On Linux there are plenty of ways for selecting the system qt theme.\r\n\r\nNote that the nice qt themes like breeze or kvantum involve more than just CSS\\QSS, they consist of custom theme engine.\r\n\r\nSome alternative options instead of encouraging more buggy qss theme modifications and other ideas:\r\n* paletize and fix the existing 3 themes, allow user to override the color palette \r\n* consider shipping or figure out if it' possible to set it by users some of the existing good qt theme engines\r\n  Action needs to be added the widget for widget-with-children to work. :mage:   <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\n* Create simple dialog for renaming and deleting layouts\r\n* Use editable combo-box for saving layout - simplifies editing existing layouts and communicates with the user doing that is possible.\r\n\r\n**Test plan (required)**\r\n\r\n![layout_manager](https://user-images.githubusercontent.com/7101031/82730994-83863300-9d0c-11ea-9b75-cce5e2810fd9.png)\r\n![Screenshot from 2020-05-23 14-19-59](https://user-images.githubusercontent.com/7101031/82730996-8719ba00-9d0c-11ea-8901-9bffc171aa1a.png)\r\n![Screenshot from 2020-05-23 15-42-57](https://user-images.githubusercontent.com/7101031/82730998-88e37d80-9d0c-11ea-838d-eed03f17bf4e.png)\r\n\r\n\r\n* Open layout manager when there are no saved layouts\r\n*  save a layout\r\n* rename layout, make sure layout list in main window gets updated\r\n* delete layout, make sure layout manager properly clears the list\r\n* try renaming layout to name used by other layout\r\n* try renaming layout to reserved name\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\nCloses #694  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [ ] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html) **Needs cleanup**\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\nRewrite the edge routing and block placement parts of graph layout. Add documentation for the graph layout algorithm.\r\n\r\n* Take full subtree shape into account when placing them side by side. Prevents the case where 1-2  basic blocks are put very far to the right and then the edge goes back to main part of function.\r\n![long_edges](https://user-images.githubusercontent.com/7101031/82308567-a215c280-99ca-11ea-8bd1-2bc2264c7763.png)\r\n* In the basic true/false branching case horizontal lines are aligned at the same y level\r\n* Heuristics for reducing edge crossing near the basic block\r\n![edge_horizontal_crossing](https://user-images.githubusercontent.com/7101031/82308699-d1c4ca80-99ca-11ea-9bb3-8bcdc82482c1.png)\r\n\r\n* Gets rid of unnecessary big  loops due to large basic block in the same row or column\r\n* In single column case prefer routing false branches on one side and true branches on other side.\r\n![edge_loops_side](https://user-images.githubusercontent.com/7101031/82308725-dbe6c900-99ca-11ea-941d-cee9cb120905.png)\r\n\r\n* Improved worst case CPU and memory usage. Some of the tables in old code could have been O(n^2) in the worst case. This wasn't a big problem with old code, as it was good enough in most cases with typical size functions and querying disassembly data from r2 takes an order of magnitude   longer than graph layout. It could be beneficial in future for drawing other r2 graphs like whole program xref graph.\r\n\r\n**Test plan (required)**\r\n\r\nLook for layout bugs most importantly overlapping blocks or edges\r\n* Sort functions by size and look at biggest ones\r\n* Look at small and medium size functions. \r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Feedback wanted**\r\nI'd like some feedback for default edge and block spacing settings.\r\n\r\nI have noticed that sometimes the layout for the same function gets draw in two different ways. I am not sure if lack of determinism comes from the order of nodes in r2 output or the graph layout process. If anyone can reliably reproduce this let me know.\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n\r\n**Follow up tasks**\r\nExpose some of the layout tweaking settings in Perfrences/Graph\r\n Do you think you can make the commit history a bit nicer for rebase+merge or should we squash it?  Oh, great idea!\r\nI would like to give this a try, currently looking into the InitialOptions handling to understand how to hand the writemode flag over from the Commandline parsing. I'll create a pull request once thats done :)  Debian-based Linux: libkf5syntaxhighlighting-dev pkg-config libgraphviz-dev python3-setuptools Not sure about pkg-config and python3-setuptools, but libkf5syntaxhighlighting libgraphviz are optional dependencies.  pkg-config is probably always required but it should not fail without libgraphviz and libkf5syntaxhighlighting unless you have manually forced use of the specific features. I will retest this. Just tried to do a build with clean, minimal Ubuntu 18.04 install and packages listed in Debian-based Linux list.\r\nlibkf5syntaxhighlighting-dev pkg-config libgraphviz-dev python3-setuptools were not strictly required and I was able to compile Cutter without them using cmake building steps directly bellow requirements. CMake prints the messages that \r\n\r\nR2 required meson >= 0.50.1. Which comes with Ubuntu >= 19.10. Suitable meson version can be installed using pip. Installation of pip also installed a bunch of python dev stuff and  python3-setuptools but after meson was installed for the testing purpose I removed them.\r\n\r\nMy current plan for changes is:\r\n* create list of optional dependencies\r\n* instructions related to meson\r\n* add the second command for distro specific install commands which includes optional dependencies.\r\n* pkg config should probably be included in the primary dependency list even though it isn't strictly required. R2 meson uses it for detecting some extra libraries which serve more functional purpose than syntax highlighter and graphviz in Cutter.\r\n @luonii What debian version are you using? What build command are you using and what errors (please include full output log) do you see? Repeated the test using Debian 9 and had the same observations.  **Describe the solution you'd like**\r\n\r\nI think supporting debugging with Qiling framework would be a pretty cool feature to have. Indeed, Qiling can fill the gap between light emulation (covered by radare2) and complete executable running. \r\n\r\n**Describe alternatives you've considered**\r\n\r\nI tried to connect to Qiling gdb server but it didn't work as expected. I think the particular way to make debugging within radare2 working in this case is the issue. \r\n\r\n**Additional context**\r\n\r\nIn order to debug correctly an executable by connecting to the qiling gdb server:\r\n\r\n1) `r2 -`\r\n2) `doof gdb://<ip>:<port>/0`\r\n\r\nAnalyzing the executable before running `doof` doesn't work (which is weird for me). Hi @ITAYC0HEN!\r\n\r\nThank you for your answer. I hope it will be fixed. heh, i see this post cannot be unseen.\r\n\r\nhow can we fix this and get this moving. @abcSup can also take a look if @yossizap is busy. we just tag 1.1-alpha1, will you guys able to check  it ?\r\n\r\npip3 install qiling --pre \r\n\r\nthis will do > we just tag 1.1-alpha1, will you guys able to check it ?\r\n\r\nI will look into it tonight and thanks for the installation tips. Unfortunately, with the latest version from github, I have this error message:\r\n\r\n```\r\ndebugger> Error: Not able to initialize Debugging Server\r\nTraceback (most recent call last):\r\n  File \"./qltool\", line 261, in <module>\r\n    ql.run(timeout=timeout)\r\n  File \"/root/qiling/qiling/core.py\", line 191, in run\r\n    ql_debugger_init(self)\r\n  File \"/root/qiling/qiling/debugger/debugger.py\", line 78, in ql_debugger_init\r\n    ql_debugger(ql, remotedebugsrv, ip, port)\r\n  File \"/root/qiling/qiling/debugger/debugger.py\", line 47, in ql_debugger\r\n    ql.remote_debug = DEBUGSESSION(ql, conn, exit_point, mappings)\r\n  File \"/root/qiling/qiling/debugger/gdbserver/gdbserver.py\", line 45, in __init__\r\n    self.gdb.initialize(self.ql, exit_point=exit_point, mappings=mappings)\r\n  File \"/root/qiling/qiling/debugger/gdbserver/qldbg.py\", line 27, in initialize\r\n    self.current_address = self.entry_point = self.ql.os.entry_point\r\nAttributeError: 'QlOsWindows' object has no attribute 'entry_point'\r\n``` screw me. i forgotten that fix. can u clone and try dev now?\r\n u r right. i am looking at it. i will fix in dev. for pip need to wait till rc2\r\n > Unfortunately, with the latest version from github, I have this error message:\r\n> \r\n> ```\r\n> debugger> Error: Not able to initialize Debugging Server\r\n> Traceback (most recent call last):\r\n>   File \"./qltool\", line 261, in <module>\r\n>     ql.run(timeout=timeout)\r\n>   File \"/root/qiling/qiling/core.py\", line 191, in run\r\n>     ql_debugger_init(self)\r\n>   File \"/root/qiling/qiling/debugger/debugger.py\", line 78, in ql_debugger_init\r\n>     ql_debugger(ql, remotedebugsrv, ip, port)\r\n>   File \"/root/qiling/qiling/debugger/debugger.py\", line 47, in ql_debugger\r\n>     ql.remote_debug = DEBUGSESSION(ql, conn, exit_point, mappings)\r\n>   File \"/root/qiling/qiling/debugger/gdbserver/gdbserver.py\", line 45, in __init__\r\n>     self.gdb.initialize(self.ql, exit_point=exit_point, mappings=mappings)\r\n>   File \"/root/qiling/qiling/debugger/gdbserver/qldbg.py\", line 27, in initialize\r\n>     self.current_address = self.entry_point = self.ql.os.entry_point\r\n> AttributeError: 'QlOsWindows' object has no attribute 'entry_point'\r\n> ```\r\n\r\nCould you provide me the executable you running? I believe the issue above is related to `qiling`.\r\n\r\nI have installed `qiling 1.1-alpha1` and tried the remote debugging. I can confirm that it works for the example using `qltool` using the latest `r2`:\r\n```\r\n$ ./qltool \r\nqltool for Qiling v1.1-alpha1\r\n\r\nUsage: ./qltool [run|shellcode] OPTIONS\r\n----------snipped----------\r\n$ r2 -v\r\nradare2 4.5.0-git 24812 @ linux-x86-64 git.4.4.0-212-gc9eceab2d\r\ncommit: c9eceab2d653462dd9c1be7a76a83555e7068bde build: 2020-05-25__23:48:27\r\n```\r\n```\r\n$ ./qltool run -f examples/rootfs/x8664_linux/bin/x8664_hello --gdb 127.0.0.1:9999 --rootfs examples/rootfs/x8664_linux\r\ndebugger> Initializing load_address 0x555555554000\r\ndebugger> Listening on 127.0.0.1:9999\r\n```\r\n```\r\n$ r2 -d gdb://localhost:9999\r\n= attach 0 1\r\n= attach 0 0\r\n= attach 0 0\r\n= attach 0 0\r\n -- Try with ASAN, and be amazed\r\n[0x555555554530]> dr\r\nrax = 0x0000001c\r\nrbx = 0x00000000\r\nrcx = 0x00000004\r\nrdx = 0x7ffff7de59a0\r\nrsi = 0x7ffff7ffe700\r\nrdi = 0x00000000\r\nrbp = 0x00000000\r\nrsp = 0x80000000de80\r\nr8 = 0x8000000a\r\nr9 = 0x00000000\r\nr10 = 0x7ffff7ffd9f0\r\nr11 = 0x7ffff7ffe930\r\nr12 = 0x555555554530\r\nr13 = 0x80000000de80\r\nr14 = 0x00000000\r\nr15 = 0x00000000\r\nrip = 0x555555554530\r\norig_rax = 0x00000000\r\nfs_base = 0x00000000\r\ngs_base = 0x00000000\r\nbndcfgu = 0x00000000\r\nbndstatus = 0x00000000\r\n[0x555555554530]> pd 5\r\n            ;-- r12:\r\n            ;-- rip:\r\n            0x555555554530      31ed           xor ebp, ebp\r\n            0x555555554532      4989d1         mov r9, rdx\r\n            0x555555554535      5e             pop rsi\r\n            0x555555554536      4889e2         mov rdx, rsp\r\n            0x555555554539      4883e4f0       and rsp, 0xfffffffffffffff0\r\n[0x555555554530]> \r\n```\r\n\r\nPlease upload the example you are trying to debug, so I can try to reproduce the problem and help you out anytime. you can clone the latest qiling from\r\n```\r\ngit clone git@github.com:qilingframework/qiling.git\r\ncd qiling\r\ngit checkout dev\r\n```\r\n\r\nand run\r\n```\r\n./qltool run -f examples/rootfs/x8664_linux/bin/x8664_hello --gdb 127.0.0.1:9999 --rootfs examples/rootfs/x8664_linux\r\n```\r\n\r\nshould be good now Indeed, this issue is now resolved but I have another one\r\n\r\n```\r\n./qltool run -f ./examples/rootfs/x8664_windows/bin/x8664_hello.exe --rootfs /mnt/hgfs/Downloads/rootfs/ --gdb 0.0.0.0:9998\r\n[+] Initiate stack address at 0x7ffffffde000\r\n[+] Loading ./examples/rootfs/x8664_windows/bin/x8664_hello.exe to 0x400000\r\n[+] PE entry point at 0x4014e0\r\n[+] TEB addr is 0x6030\r\n[+] PEB addr is 0x60b8\r\n[+] Loading /mnt/hgfs/Downloads/rootfs/Windows/System32/kernel32.dll to 0x7ffff0000000\r\n[+] Done with loading /mnt/hgfs/Downloads/rootfs/Windows/System32/kernel32.dll\r\n[+] Loading /mnt/hgfs/Downloads/rootfs/Windows/System32/msvcrt.dll to 0x7ffff00b2000\r\n[+] Done with loading /mnt/hgfs/Downloads/rootfs/Windows/System32/msvcrt.dll\r\ndebugger> Initializing load_address 0x0\r\ndebugger> Listening on 0.0.0.0:9998\r\ngdb> Breakpoint added at: 0x4014e0\r\ngdb> Breakpoint found, stop at address: 0x4014e0\r\ngdb> Xml file not found: /root/qiling/qiling/debugger/gdbserver/xml/x8664/target.xml\r\n```\r\n\r\nwhich is weird because the file exists...\r\n\r\n```\r\nl /root/qiling/qiling/debugger/gdbserver/xml/x8664/target.xml\r\n-rw-r--r-- 1 root root 356 May 10 09:36 /root/qiling/qiling/debugger/gdbserver/xml/x8664/target.xml\r\n```\r\n\r\nThank you for your help and your responses! this is some elf related issue. but this will not effect r2 i guess. \r\n\r\nmaybe is should make a check if this is a *nix. let me try i added a better response msg. It should work now.\r\nWill you be able to try again ? It's indeed clearer like that. Thanks!\r\n\r\nIt's still doesn't work for me. I have a segfault on the radare2 side. Do you have the same thing with a Windows executable? I will try it out, but I have a question about running a Windows executable on `qiling`. Do I need an installation of Windows OS to use it as my `rootfs`? > I will try it out, but I have a question about running a Windows executable on `qiling`. Do I need an installation of Windows OS to use it as my `rootfs`?\r\n\r\nIt is ok. I found the official guide regarding Windows emulation and will try it out now.\r\nhttps://www.qiling.io/install/ I populated my rootfs with the DLLs of my Windows 10 VM. But I think you should be able to run the examples with the DLLs from ReactOS. Here is a folder structure example\r\n\r\n```\r\nl /mnt/hgfs/Downloads/rootfs/Windows\r\ndrwxr-xr-x 1 501 dialout  192 May 26 09:23 .\r\ndrwxr-xr-x 1 501 dialout  160 Mar  4 21:50 ..\r\ndrwxr-xr-x 1 501 dialout  192 Mar  4 21:48 registry\r\ndrwxr-xr-x 1 501 dialout 106K Mar  4 21:24 System32\r\ndrwxr-xr-x 1 501 dialout  73K May 14 13:37 SysWOW64\r\n``` > I populated my rootfs with the DLLs of my Windows 10 VM. But I think you should be able to run the examples with the DLLs from ReactOS. Here is a folder structure example\r\n> \r\n> ```\r\n> l /mnt/hgfs/Downloads/rootfs/Windows\r\n> drwxr-xr-x 1 501 dialout  192 May 26 09:23 .\r\n> drwxr-xr-x 1 501 dialout  160 Mar  4 21:50 ..\r\n> drwxr-xr-x 1 501 dialout  192 Mar  4 21:48 registry\r\n> drwxr-xr-x 1 501 dialout 106K Mar  4 21:24 System32\r\n> drwxr-xr-x 1 501 dialout  73K May 14 13:37 SysWOW64\r\n> ```\r\n\r\nThank you! > It's indeed clearer like that. Thanks!\r\n> \r\n> It's still doesn't work for me. I have a segfault on the radare2 side. Do you have the same thing with a Windows executable?\r\n\r\ni am using x86_helloworld which comes with the example in qiling. u can get it from https://github.com/qilingframework/qiling , give us a star too. on our way to 1,000 start :) > > I populated my rootfs with the DLLs of my Windows 10 VM. But I think you should be able to run the examples with the DLLs from ReactOS. Here is a folder structure example\r\n> > ```\r\n> > l /mnt/hgfs/Downloads/rootfs/Windows\r\n> > drwxr-xr-x 1 501 dialout  192 May 26 09:23 .\r\n> > drwxr-xr-x 1 501 dialout  160 Mar  4 21:50 ..\r\n> > drwxr-xr-x 1 501 dialout  192 Mar  4 21:48 registry\r\n> > drwxr-xr-x 1 501 dialout 106K Mar  4 21:24 System32\r\n> > drwxr-xr-x 1 501 dialout  73K May 14 13:37 SysWOW64\r\n> > ```\r\n> \r\n> Thank you!\r\n\r\nu can raise a issue in qiling. dont pollute r2's github :)\r\n\r\n > > It's indeed clearer like that. Thanks!\r\n> > It's still doesn't work for me. I have a segfault on the radare2 side. Do you have the same thing with a Windows executable?\r\n> \r\n> i am using x86_helloworld which comes with the example in qiling. u can get it from https://github.com/qilingframework/qiling , give us a star too. on our way to 1,000 start :)\r\n\r\nDon't worry, it's already done :D > > > I populated my rootfs with the DLLs of my Windows 10 VM. But I think you should be able to run the examples with the DLLs from ReactOS. Here is a folder structure example\r\n> > > ```\r\n> > > l /mnt/hgfs/Downloads/rootfs/Windows\r\n> > > drwxr-xr-x 1 501 dialout  192 May 26 09:23 .\r\n> > > drwxr-xr-x 1 501 dialout  160 Mar  4 21:50 ..\r\n> > > drwxr-xr-x 1 501 dialout  192 Mar  4 21:48 registry\r\n> > > drwxr-xr-x 1 501 dialout 106K Mar  4 21:24 System32\r\n> > > drwxr-xr-x 1 501 dialout  73K May 14 13:37 SysWOW64\r\n> > > ```\r\n> > \r\n> > \r\n> > Thank you!\r\n> \r\n> u can raise a issue in qiling. dont pollute r2's github :)\r\n\r\nAlright, will do. Thank you for your time and your quick answers! Ok, we manage to fix r2 and cutter is not working with gdb remote debugging. \r\n\r\nI guess we can come back here now. > It's indeed clearer like that. Thanks!\r\n> \r\n> It's still doesn't work for me. I have a segfault on the radare2 side. Do you have the same thing with a Windows executable?\r\n\r\n@redmed666 I am able to reproduce the segfault case when running a windows exe. It seems to be some memory leak issues in `r2`.\r\n\r\n```\r\ngdb> Breakpoint added at: 0x4014e0\r\ngdb> Breakpoint found, stop at address: 0x4014e0\r\ngdb> Platform is not supported by xml or xml file not found: /qiling/debugger/gdbserver/xml/x8664/target.xml\r\n```\r\n> this is some elf related issue. but this will not effect r2 i guess.\r\n\r\n@xwings You are right that it will not effect `r2`. `r2` will use a generic register profile when provided no target.xml. I do believe we should work on a closer integration with r2 and lets not reply on this GDB RSP thingy > I do believe we should work on a closer integration with r2 and lets not reply on this GDB RSP thingy\r\n\r\nI will resolve this issue first. Please open a new PR and discuss about features you wish to integrate with `r2` and we can work from there. Thanks! its more on PR on Qiling. I am not too sure r2 have any r2's protocol or we just need to work it out on rsp\r\n\r\nif r2 already got a remote debugging protocol then it will my  issue on my side. :) `r2` does not have any its own remote debugging protocol\r\n\r\n. I would say using GDB RSP is good for now because we do not have to develop new protocol ourselves, and `r2` and `qiling` are already supporting GDB RSP.  **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\n\r\nAdd a mode where each line  of decompiled code is in different color and matching disassembly lines have the same color, similar to [Godbolt compiler-explorer](https://godbolt.org/).\r\n\r\n**Describe alternatives you've considered**\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n\r\n![Screenshot from 2020-05-11 10-37-59](https://user-images.githubusercontent.com/7101031/81536070-98111580-9373-11ea-916c-bc935d3b4b58.png)\r\n\r\n  I assume that meta refactoring done by @thestr4ng3r changed some of the API. Need to check if it now returns a string owned by meta structure. Checked the new code. Looks type system is working as intended. `r_meta_get_string` doesn't return a copy of string anymore so it can be converted to QString directly and shouldn't be freed that  means removing the `fromOwnedCharPtr` call.\r\n\r\n  Confirmed that the data gets refreshed by editing some bytes in cache mode and observing that entropy changes. Yes only entropy was updated, but that's probably r2 issue.  <img width=\"463\" alt=\"Screen Shot 2020-05-04 at 10 42 26 PM\" src=\"https://user-images.githubusercontent.com/37086776/80978554-cadd7a00-8e58-11ea-850e-3ee3c29de55f.png\">\r\n\r\nHi there, I am new to Assembly and I have not familiarized myself with the language. However, when trying to edit an instruction, this error appears on the program. May I know how I can solve this? I have already tried opening it in Write Mode. Thanks guys!  Please fill out the issue template and include the information requested.\r\n\r\nThe error message says what you need to do. If following the instruction didn't work describe step by step what exactly you did and rest of the information requested in issue template. > Please fill out the issue template and include the information requested.\r\n> \r\n> The error message says what you need to do. If following the instruction didn't work describe step by step what exactly you did and rest of the information requested in issue template.\r\n\r\nMay I know where I can get the issue template? I don't see it anywhere. > Clicking on \"Reopen in write mode\" should solve your dilemma. once clicked, it will allow you to patch without a problem :)\r\n\r\nI'm unable to get it working after clicking the button. It also does not work when I relaunch the program with -w option You can find the template here https://raw.githubusercontent.com/radareorg/cutter/master/.github/ISSUE_TEMPLATE/bug_report.md .  How did you manage to create an issue skipping that?  **Is your feature request related to a problem? Please describe.**\r\n\r\nR2 can generate multiple kinds of graphs Cutter currently only supports function basic block graph.\r\n\r\n**Describe the solution you'd like**\r\n\r\nDedicated widgets instead of some generic widget because that allows implementing content specific features\r\n* Context menu and other interaction with objects represented by nodes.\r\n* Adjusting node and edge style based on data.\r\n* Choosing the most suitable layout algorithm by default. \r\n\r\nEven though issue asks for dedicated widgets large part of code can probably be shared.\r\n\r\nDedicated widget for:\r\n* [ ] data reference graph\r\n* [ ] global data reference graph\r\n* [ ] function callgraph #406\r\n* [ ] global callgraph #1776\r\n* [ ] diff graph\r\n* [ ] imports graph\r\n* [ ] references graph\r\n* [ ] global references graph\r\n* [ ] cross references graph\r\n* [ ] axg find paths to reach a point #1085\r\n\r\n**Describe alternatives you've considered**\r\n**Additional context**\r\n @ITAYC0HEN Deep graph plugin just binds buttons to r2 \"ag*\" commands. It doesn't really help implementing this issue more than writing `ag?` in r2 console.\r\n\r\nAs for sharing the same widget read the issue description \r\n> Even though issue asks for dedicated widgets large part of code can probably be shared.  **Environment information**\r\n* Operating System: ArchLinux (also observed on macOS)\r\n* Cutter version: 1.10.3-pre2  a3661fa2595004bf255726a02a99e5141415bc9b\r\n* Obtained from:\r\n  - [x] Built from source\r\n* File format: N/A\r\n\r\n**Describe the bug**\r\n\r\nWhen lightness/darkness of native theme doesn't match disassembly color theme and settings get opened color theme gets switched.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Make system(not Cutter) theme light. Can be done using qt5ct on Linux or Light/Dark switch on macOS. \r\n2. Open Cutter, select native theme, make sure disassembly color theme is light.\r\n3. Close Cutter\r\n4. Switch system theme to dark\r\n5. Open Cutter observe that disassembly widget is using light color theme\r\n6. Open settings, observe that color theme switches to dark one\r\n\r\n**Expected behavior**\r\n\r\nChanges in native theme lightness is detected when opening Cutter.\r\n\r\nDifferent approach would be not doing automatic color theme change at all.\r\n\r\n**Screenshots**\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n I am not surprised. Explicitly selecting seemed like a more reliable way ensuring that light color theme is selected.  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [x] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n**WARNING** :exclamation: \r\n\r\nThis branch performs one way upgrade of settings and layout. If you have some complex layout that you want to keep using in the old Cutter backup your cutter settings.\r\n\r\n\r\n**Detailed description**\r\n\r\nCan be reviewed. Do not merge into 1.10.3 !\r\n\r\n* Separate all layout state into a structure making it clearer when and where it's saved, loaded, switched.\r\n* As part of layout state introduce dock view properties which is QVariant dictionary that can be used for easily saving single dock config. Makers of new widgets should consider if an option belongs to global settings or the new widget/layout specific properties. The new mechanism is suitable for situations where user might want to open two copies of a  widget with different view settings. For example two hexwidgets one showing memory as hex bytes, other as floating point numbers. To use the new mechanism developer needs to override @CutterDockWidget::serializeViewProperties@ and @CutterDockWidget::deSerializeViewProperties@   methods. \r\n* Allow saving multiple layout profiles in addition to builtin Default and Debug. The logic is that \"Default\" and \"[default]Debug\" always contain the last layout in corresponding mode. When user loads new profile or modifies the current layout it becomes the new \"Default\". Saved layouts are never automatically modified.\r\n* Window size is separated from layout. It is loaded when opening Cutter. Switching layout doesn't touch the window size. It's possible to imagine that for some elaborate layouts window size is important but in most cases changing window size when switching layout would be unexpected. To be safe I kept the the window geometry in layout state but it isn't loaded. It will be easier to ignore or remove it later, than making it out of nothing in case it turns out to be necessary. Most examples show restoring state(dock placement) together with geometry(main window size and placement).\r\n* Remove the custom mechanism for synchronizing widget visibility with action checkboxes in windows menu. Qt has it builtin, no need to reinvent it poorly. The old mechanism tried to deal with multiple widgets of the same kind but it only increased complexity and wasn't actually used.\r\n* Code attempts to put new docks (new extra, plugins, or after Cutter upgrade) in the biggest area with existing disassembly, graph, hex widget. From my observations in https://github.com/radareorg/cutter/issues/694#issuecomment-621345529 and later it seems that any attempts to put something on the side may potentially result in broken layout. \r\n\r\nWhen I started working on this I tried to visualize layout related code structure. \r\nbefore:\r\n![before](https://user-images.githubusercontent.com/7101031/80803229-62716d00-8bba-11ea-9ccc-1cd4da972e57.png)\r\nafter:\r\n![after](https://user-images.githubusercontent.com/7101031/80803239-669d8a80-8bba-11ea-8978-5ae1fc42609e.png)\r\n\r\n\r\n**Test plan (required)**\r\n\r\n* Clean start without upgrade\r\n  * remove cutter config\r\n  * start cutter \r\n  * make sure default layout is reasonable\r\n  * start debuging make sure layout is reasonable\r\n* layout upgrade a)\r\n  * remove cutter config\r\n  * open 1.10.3 cutter\r\n  * make minor modifications to layout\r\n  * close 1.10.3 cutter\r\n  * open new cutter make sure sure layout is reasonable\r\n  * start debugging make sure layout is reasonable\r\n* layout upgrade b)\r\n  * remove cutter config\r\n  * open 1.10.3 cutter\r\n  * start debugging \r\n  * make some modification to layout \r\n  * stop debugging\r\n  * close 1.10.3 cutter\r\n  * open new cutter make sure sure layout is reasonable\r\n  * start debugging make sure layout is reasonable\r\n* saving layout modifications\r\n  * open cutter modify layout\r\n  * restart cutter, make sure layout is preserved\r\n  * start debugging\r\n  * modify debug layout\r\n  * stop debugging\r\n  * start debugging\r\n  * make sure debug layout is preserved\r\n  * restart cutter\r\n  * start debugging \r\n  * make sure debug layout is preserved\r\n  * stop debugging\r\n* resetting layout (do after previous step)\r\n  * be in non debug mode\r\n  * reset layout\r\n  * make sure it matches initial layout\r\n  * start debugging\r\n  * make sure debug layout isn't reset\r\n  * reset layout\r\n  * make sure you see the initial debug layout\r\n  * modify both debug and normal layout again\r\n  * reset settings\r\n  * make sure both layouts were reset\r\n* view property saving\r\n  * Open multiple memory widgets(disassembly, hex or graph). At least two copies for one of them and place them side by side.\r\n  * synchronize some of them, desynchronize others\r\n  * restart cutter\r\n  * make sure all the the memory widgets are opened and synchronization state is correctly restored\r\n\r\n* It would be useful if reviewer and maybe more people tried a bunch of random things to see if some sequence of operations or specific layout can cause layout to break.\r\n \r\n**Closing issues**\r\n\r\nNot closing #694 , that should be done after finishing second part and implementing layout management UI.\r\nCloses #1921\r\nMaybe closes #1737 . Doesn't do exactly what was asked there, but in my opinion solves the problem in a somewhat acceptable way.\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n\r\n**Followup tasks**\r\n* The new mechanism for saving view properties could be used to easily implement  #1704\r\n* Better UI for managing layouts\r\n* view properties could be used for saving some of hex widget config\r\n* update Plugins to use the new API for dock action\r\n* Overview widget showing/hiding. Looks there are some leftover code trying to do more than basic checkbox to show, but it doesn't seem to be working in current master or this PR. #2209 \r\n This pull request **introduces 1 alert** when merging aeae3b17564dc9c905112a0ee8ecc82ed3af9c4c into a3661fa2595004bf255726a02a99e5141415bc9b - [view on LGTM.com](https://lgtm.com/projects/g/radareorg/cutter/rev/pr-f01d2a0707c06f98dcd0495396f63c37035edd0a)\n\n**new alerts:**\n\n* 1 for Unused import Just took a quick look, the refactoring looks very nice, I'll try to test it and make a better review later :) > When clicking \"Reset layout\" ...\r\n\r\nRenamed it.\r\n\r\n>  Should \"Reset layout\" be so separated \r\n\r\nI was thinking about this as well but couldn't come up with good solution.\r\n\r\n>  Plugins: Until now, the widgets ... So this is only a quick note about this change to make sure it is intentional.\r\n\r\nThis is result of trying to place new widgets in somewhat reasonable place.  The old behavior didn't scale when you had more than one new widget. Depending on what was the right most widget previous time it sometimes caused broken layout similar to what you saw during debuging with hexwidget slowly expanding.\r\n\r\n> Debug: When entering debug mode the layout was wrong\r\n\r\nThis might be result of bad layout upgrade. Let me know if you figure out how to reproduce it.\r\n\r\n> Debug: when stepping, weird things happen to my layout when stepping\r\n\r\nMost likely result of broken layout from previous step.\r\n\r\n>   Debug: Why stack are on the upper view and not Registers?\r\n\r\nWeren't registers always at the bottom?\r\n\r\n> Debug: stopping debug kept the layout:\r\n\r\nCan't repeat it.\r\n\r\n> Debug: saved debug layout is available when not in debug\r\n\r\nI couldn't decide if we should artificially limit this. If you create some complicated layout wouldn't it be annoying to create it twice instead of loading a debug layout during normal mode and making minor modifications to it? Haven't done the tests yet.  Did the tests. Hi, thanks again for this awesome PR.\r\nI didn't have the time to test everything, however I noticed the graph overview is not enabled by default anymore, is it intended? I've noticed you wrote that a follow up task would be to improve its behavior but I don't know exactly what you are referring to. @xarkes Overview has been not enabled by default for a while. This PR doesn't change that. To be more precise there is code which is supposed to handle third state for overview  - automatic show/hide depending on there being something to show in overview. I assume this automatic showing was the default mode some time ago but it broke a while ago resulting in overview not shown by default.\r\nI just confirmed it, deleting Cutter settings, opening Cutter 1.10.3 appimage and opening graph also results in overview not being shown. Most likely it was broken a few versions before that.  **Environment information**\r\n* Operating System:\r\n> Ubuntu Mate 18.04\r\nLinux **** 4.15.0-96-generic #97-Ubuntu SMP Wed Apr 1 03:25:46 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n* Cutter version:\r\n> Version 1.10.3\r\nUsing r2-4.4.0\r\nBased on Qt 5.14.2 (GCC 9.3.0, 64 bit)\r\nOptional Features:\r\nPython: ON\r\nPython Bindings: ON\r\n\r\n* Obtained from:\r\n  - [x] Built from source\r\n  - [ ] Downloaded from release\r\n  - [ ] Distribution repository\r\n\r\n* File format: Any\r\n\r\n**Describe the bug**\r\n\r\nMarking text with mouse is not behaving intuitively\r\n\r\n* When clicking and dragging with the mouse in the disassemble window and moving the mouse to the top or bottom of the screen, then the text doesn't scroll as it would in a normal editor\r\n* When left clicking at some point to place the cursor there and then scrolling the text off screen, and then shift + left clicking to mark the whole section, really only the text on screen is marked. Copying with ctrl + c only copies whatever is currently in view, not the whole segment.\r\n\r\nThis is a problem when you want to copy the code because then you have to copy multiple times, which is quite annoying.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open a file for disassembly\r\n2. Open disassembly window\r\n3. Click on some character and hold down the left mouse button\r\n4. Hold the mouse button and drag it to the bottom edge of the screen to select multiple lines\r\n5. Observe that you can't mark more than one page of text, less if you started step 3 in the middle and not at the top.\r\n\r\n**Expected behavior**\r\n\r\nThe view will scroll the text, marking continues and the text that has been scrolled off screen will be kept marked.\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\n**Additional context**\r\n\r\nQT built from source (tag 5.14.2).\r\nPySide built from source (master).\r\nCutter built from source (master @ aa8ecee)  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n**Detailed description**\r\n\r\nShortcuts implemented:\r\n- [x] Jump to the next open tab\r\n- [ ] Jump to the previous open tab\r\n- [x] Close the current tab\r\n- [ ] Duplicate current tab\r\n- [ ] Reopen previously closed tabs in the order they were closed\r\n- [ ] Mouse middle click on a tab will close it\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n\r\nI want to apply a set of keyboard shortcuts to manage tabs in Cutter:\r\n- Ctrl+Tab - Jump to the next open tab\r\n- Ctrl+Shift+Tab -Jump to the previous open tab\r\n- Ctrl+W - Close the current tab\r\n- Ctrl+T - Duplicate current tab\r\n- Ctrl+Shift+T - Reopen previously closed tabs in the order they were closed\r\n\r\nMouse shortcut -\r\n- Mouse middle click on a tab will close it\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\ncloses #1730 \r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). --> > The code that is there doesn't look bad. But from the usability perspective there is a lot of work remaining. The most obvious problems I noticed:\r\n> \r\n> * When reaching end of list nothing happens, I would expect looping around\r\n> * Currently only works for the tab group containing dashboard. It doesn't work if user closes dashboard or have multiple groups of tabs. It's not immediately obvious for me what the best behavior would be. It would be good to investigate what other tools do. IDEs might not be the best example as they usually have clear separation between document tabs and side widget tabs. In Cutter all docked widgets are more or less equal.\r\n> * For previous tab shortcut I will give you a few hints. Does using secondary key sequences work (back, ctrl+{, ctrl+shift+f6 depending on your OS)? Does specifying the Ctrl+Shift+Tab shortcut explicityl work? What key sequences does `QKeySequence::keyBindings(PreviousChild)` return?\r\n\r\n@karliss \r\n\r\n- This can be updated easily, I wasn't sure if it should loop so I didn't implement that until I knew\r\n- From the original issue I assumed that the 'tab management' was only for the docked widgets (Dashboard, ...), and I wasn't too sure how to get a list of those widgets. MainWindow.h does have `QList<QDockWidget *> dockWidgets;` perhaps that could be used instead, if we want to manage all widgets?\r\n- I tried explicitly specifiying Ctrl+Shift+Tab and it still didn't work, I am using Debian + i3wm so I'm unsure what my secondary shortcuts are @karliss \r\nOn my machine that test code returned `\"Ctrl+Shift+Backtab\" \"Back\"`, my host machine is Debian + i3wm but I am building/running cutter in Docker.\r\n\r\nI have managed to get the previous tab shortcut working by specifying `QKeySequence(tr(\"Ctrl+Shift+Tab\"))` or `QKeySequence(tr(\"Ctrl+Backtab\"))`, when it didn't work before I was using `QKeySequence(Qt::CTRL, Qt::SHIFT, Qt::Key_Tab)` Ah right I see, I was just confused by what the docs were saying it seems. Have we got a plan for what the shortcuts need to be set as, or should I just leave them as NextChild/PreviousChild for now? > Please try the test code above, and tell what it prints on your systems, also try changing the shortcuts in system settings.\r\n\r\nWithout changing the settings:\r\n```\r\n\"Ctrl+PgUp\"\r\n\"Ctrl+[\"\r\n```\r\n\r\nAfter changing the settings\r\n```\r\n\"Ctrl+Shift+Tab\"\r\n```\r\n\r\nIt seems like an expected behavior that the alternative shortcut is not shown (and indeed, it immediately disappears when replacing the default shortcut) macOS:\r\n```\r\n\"Ctrl+{\"\r\n\"Ctrl+Shift+Backtab\"\r\n\"Back\"\r\n``` safari, chrome, firefox, iTerm, Sublime Text, Jetbrains IDEs, discord, and maybe others use both options:\r\n```\r\nCtrl+Shift+Backtab\r\nCommand+{\r\n``` > Hey @0x24D , anything else or is it ready for another round of review?\r\n> Did you address the points mentione above?\r\n\r\nHi, I have implemented looping around the beginning/end of the list, and the shortcut alternatives for PreviousChild.\r\n\r\nI have not looked at this since Sunday but I am really unsure about how to capture all docked widgets. I was trying to use `findChildren<QDockWidget *>()` to get a list of all QDockWidgets but I couldn't order them in any meaningful way - I was trying to use the x/y position of the widget. Using the returned list without ordering them also didn't seem to work, so that might not be the way to go.\r\n\r\nI have not yet looked at how to implement the other three shortcuts but any suggestions would be appreciated. Hi @ITAYC0HEN, unfortunately I have no interest in continuing to work on this issue. As such I suggest that this PR is abandoned and the issue is handed-off to someone else. Thank you for all your help <3  **Environment information**\r\n* Operating System: Ubuntu 19.10 x86_64\r\n* Cutter version: 1.10.3\r\n* Obtained from:\r\n  - [] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: .appImage\r\n\r\n**Describe the bug**\r\n\r\nIf you activate the `Console` window (Menu Windows -> Console) on Cutter in order to use the radare commands and mistakenly enter the `v` command, you won't be able to use the console anymore unless you close Cutter and open it again.\r\n\r\n**To Reproduce**\r\n\r\n1. Load any binary file n Cutter\r\n2. Click the `Windows -> Console` menu to activate the console\r\n3. Select a function in your binary in the `Functions` window\r\n4. Type the `v` command and press Enter\r\n5. Notice that you cannot type commands on the console anymore.\r\n\r\n**Expected behavior**\r\n\r\nCutter should either present the user with an error message saying that the `v` command is not supported in the console, or should properly emulate the visual mode in it (possibly makes no sense to do that emulation considering that Cutter is a visual tool already).\r\n\r\n**Screenshots**\r\n\r\nNot applicable\r\n\r\n**Additional context**\r\n\r\nN/A Cutter should hardcode scr.interactive=false to avoid this problem\n\n> On 22 Apr 2020, at 18:43, Henrique M. D. <notifications@github.com> wrote:\n> \n> \ufeff\n> Environment information\n> \n> Operating System: Ubuntu 19.10 x86_64\n> Cutter version: 1.10.3\n> Obtained from:\n> [] Built from source\n>  Downloaded from release\n>  Distribution repository\n> File format: .appImage\n> Describe the bug\n> \n> If you activate the Console window (Menu Windows -> Console) on Cutter in order to use the radare commands and mistakenly enter the v command, you won't be able to use the console anymore unless you close Cutter and open it again.\n> \n> To Reproduce\n> \n> Load any binary file n Cutter\n> Click the Windows -> Console menu to activate the console\n> Select a function in your binary in the Functions window\n> Type the v command and press Enter\n> Notice that you cannot type commands on the console anymore.\n> Expected behavior\n> \n> Cutter should either present the user with an error message saying that the v command is not supported in the console, or should properly emulate the visual mode in it (possibly makes no sense to do that emulation considering that Cutter is a visual tool already).\n> \n> Screenshots\n> \n> Not applicable\n> \n> Additional context\n> \n> N/A\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n Oh its panels issue then. Visual mode should not open with this set\n\n> On 22 Apr 2020, at 19:54, karliss <notifications@github.com> wrote:\n> \n> \ufeff\n> @radare I just tred setting e scr.interactive=false in r2 and it didn't prevent visual panels from opening.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n This is now fixed in radare2 master thanks to Karliss: https://github.com/radareorg/radare2/pull/16701\r\n\r\n  **Environment information**\r\n* Operating System:\r\n* Cutter version:\r\n* Obtained from:\r\n  - [x] Built from source: commit 8957e5eb64eccae1ee4dfa55cab0f217c7d0c667\r\n  - [ ] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format:\r\n\r\n**Describe the bug**\r\nA regression in the debug cause the disassembly not to refresh, unltil a refresh is triggered (e.g clicking on the widget == seeking).\r\n\r\nThe gif shows the faulty behavior:\r\n![cutter_bug_seek](https://user-images.githubusercontent.com/20182642/79688602-f4db4d80-8257-11ea-91e1-80ff7c156f37.gif)\r\n\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open a binary in Cutter\r\n2. start debug\\emulation mode\r\n3. Step using keyboard or buttons\r\n4. See that the IP highlight isn't changed\r\n5. Click on the disas and see that refresh was triggered\r\n\r\n**Expected behavior**\r\n\r\nIP highlight should be shown for every step\r\n\r\n\r\n weird, tried to pull from master again and everything is fixed. Alright then :) Closing Can be reproduced in emulation mode using appimage build.  <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [ ] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\nI have a created new file named `InitializationFileEditor` in `/src/dialogs/preferences/`. This handles most of the logic regarding cutterRC editor. The default location is loaded using a new function in `Cutter.cpp` named `getCutterRCDefaultDirectory()`. Due to the way `.cutterrc` files are loaded, this file will be loaded twice(execute all commands once, and then again) while starting Cutter.\r\n\r\nThe following images shows the editor in working. Initially I had no .cutterrc files in any of the directories from where .cutterrc is loaded. \r\n![Screenshot from 2020-04-19 00-56-45](https://user-images.githubusercontent.com/18501167/79670279-64612680-81df-11ea-9c59-551978d5f4ff.png)\r\n\r\nThis is how the `Initialization File Editor` looks when no file is loaded.\r\n\r\n![Screenshot from 2020-04-19 00-56-54](https://user-images.githubusercontent.com/18501167/79670283-6aef9e00-81df-11ea-9bd2-20875da07968.png)\r\n\r\nNow, solarized theme has been added to the default and the highest priority .cutterrc file (last loaded one) using the editor.\r\n\r\n![Screenshot from 2020-04-19 01-32-10](https://user-images.githubusercontent.com/18501167/79670284-6cb96180-81df-11ea-9807-cfecb64deed6.png)\r\n\r\nAfter closing Cutter, in the next restart, solarized theme is loaded as expected.\r\n\r\n![Screenshot from 2020-04-19 01-32-46](https://user-images.githubusercontent.com/18501167/79670287-6e832500-81df-11ea-964a-e123b9982837.png)\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Test plan (required)**\r\n\r\nWhat steps should the reviewer take to test your pull request? \r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n- [ ] Test if the code creates a new .cutterrc file in case the file is not present in the default location.\r\n- [ ] Test if the code creates directory if the directory of the default location doesn't exist.\r\n- [ ] Test if the updates to the cutterRC from Cutter remains even after closing the preferences window and/or after closing Cutter.\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n\r\nPart B of #1837 will be completed by this.\r\ncloses #2063  I see that this PR passed every other check but Travis CI, what could be the reason for this? The details show that it's failing in macOS.   @karliss Travis CI had failed on macOS, but now it shows passed. I'm a bit surprised, what was the reason? @ITAYC0HEN Thanks for pointing that I uploaded radare2 submodule. That was an accident.\r\n\r\nI will try applying syntax highlighting. About user documentation, I will do that right after this is merged. > About user documentation, I will do that right after this is merged\r\n\r\nPlease do this in the same PR :) In this. I'd like documentation to be added with the feature introducing them. There's a special check-box for it: \"I've updated the documentation with the relevant information (if needed)\" I have final assignments and quizzes lined up this week. So most probably, I won't be able to work on the PR in the next 5 days at least. I'm informing this to let everyone following know that I will be working on this once the hectic academic-related work gets over. Most likely, I will be able to start working on this by 29 April. For syntax highlighting - it can use tree-sitter-based parser by @ret2libc in the \"newshell\" project of the radare2:\r\n- https://github.com/radareorg/radare2/issues/7967\r\n- https://github.com/radareorg/radare2/tree/master/shlr/radare2-shell-parser\r\n- https://tree-sitter.github.io/tree-sitter/syntax-highlighting @ITAYC0HEN because it knows the syntax of all r2 shell commands and always in sync? newshell parser and QtSyntaxHighlighter are not an exclusive choices. Newshell parser can be wrapped in QSyntaxHighlighter interface. QSyntaxHilighter is just an interface receiving as input text and responding with information about which parts need to be in what color. It doesn't even have any standard mechanism for how it does the parsing. So combining that with newshell/tree sitter parser which can decide  what part of text is what but can't communicate it with Qt text widget seems like the right thing to do. But implementing that is out of scope for this issue and later swapping two highlighters using the same interface will not be a problem.\r\n\r\nBy the way it seems that we currently have 5 (including KysntaxHilighter) hilighters for different purposes, 3 of them unused. > What do you think of adding a link to the config file or it's folder similar to how its done with plugin directory? It could also function as way of filling the space next to save button.\r\n\r\n@karliss It looks like this now, does it seem better? \r\n![Screenshot from 2020-05-09 12-52-33](https://user-images.githubusercontent.com/18501167/81467128-2d859b80-91f4-11ea-8ec8-d6f4db596ad7.png)\r\n\r\n This is how it looks now. I haven't tried the syntax highlighting yet. \r\n\r\nInstead of the directory, the path to the file is now shown.\r\n![Screenshot from 2020-05-09 20-10-38](https://user-images.githubusercontent.com/18501167/81477063-2fbb1a80-9233-11ea-98f6-e156997eaff8.png)\r\n Found one bug I made in Cutter.cpp. Will fix it now. > Maybe there needs to be a button for running it manually and try it without restarting Cutter.\r\n\r\n@karliss This can be done if it's necessary. But is it not _initialization_ script? > But is it not _initialization_ script?\r\n\r\nYes that's why it shouldn't be run automatically. I expect the most common use case to be for more obscure settings which aren't exposed in Cutter settings. Having an easy way of running would be safe most of the time would prevent the need to set the setting twice: once in the init script and then in console. > Having an easy way of running would be safe most of the time would prevent the need to set the setting twice: once in the init script and then in console.\r\n\r\nIf the idea is to try a new setting and see what happens, then such a feature is not useful and console would be the best fit for that. This is useful if someone want to make a setting permanent(potentially) and see it in action without restarting Cutter. Having an `Execute` or `Try` button is useful in this case. I agree with you on this and I will see how it can be done. > Having an `Execute` or `Try` button is useful in this case. I agree with you on this and I will see how it can be done.\r\n\r\n@karliss I made an `Execute` button for doing this. I tried using the `eco` command to change color theme. But it's not working. As @ITAYC0HEN  mentioned to me in the telegram chat, I think it might be having this conflict(?) because color theme is already available in preferences. So can you elaborate on the scope of doing this? Can you tell me some obscure settings that can be set with command line and are not available in GUI, so that I can test them. @NirmalManoj You can list all the r2 settings and their description using `e??`. ![Screenshot from 2020-05-13 12-36-56](https://user-images.githubusercontent.com/18501167/81781947-ae0b0b80-9516-11ea-946e-648a52da6b45.png)\r\n![Screenshot from 2020-05-13 12-37-20](https://user-images.githubusercontent.com/18501167/81781956-afd4cf00-9516-11ea-988d-e952a188402d.png)\r\nOn clicking `Execute`\r\n![Screenshot from 2020-05-13 12-37-45](https://user-images.githubusercontent.com/18501167/81781960-b19e9280-9516-11ea-9d5d-bc4144ab63c9.png)\r\n![Screenshot from 2020-05-13 12-37-55](https://user-images.githubusercontent.com/18501167/81781961-b3685600-9516-11ea-878a-0d233cc72af3.png)\r\n\r\nI will be using this as example then. How about `asm.cycles`? It is more visible and doesn't affect any of analysis.  \r\n![Screenshot from 2020-05-13 15-11-42](https://user-images.githubusercontent.com/18501167/81797209-19aba380-952c-11ea-8d62-97e11e18ae8d.png)\r\n\r\n![Screenshot from 2020-05-13 15-09-31](https://user-images.githubusercontent.com/18501167/81797053-e79a4180-952b-11ea-8503-34f76f4bcc74.png)\r\n![Screenshot from 2020-05-13 15-09-46](https://user-images.githubusercontent.com/18501167/81797061-e8cb6e80-952b-11ea-854b-959c2e4b7b56.png)\r\n\r\nThis works?\r\n @ITAYC0HEN Made all suggested changes.  \r\n**Describe the solution you'd like**\r\nWhen searching in huge files, there's is no clear indication that Cutter is searching (except freeze).\r\n\r\nIn addition, when search finishes very fast (say, in tiny binary) and no results found, then there is no indication for this, and it feels like clicking the button does nothing\r\n\r\n![search_no_response](https://user-images.githubusercontent.com/20182642/79644307-cbb3b200-81b0-11ea-8e31-5eb66e8329d5.gif)\r\n\r\n- [ ] Add indication to the Search widget that a search is currently in progress\r\n- [ ] Add an indication that no results were found\r\n\r\n\r\n\r\n @ITAYC0HEN I tried to do it this way:\r\nAppend a `Data` item in `SearchDescription` saying \"Searching\" or \"No result found!\".\r\nWhile the later worked fine, the first one didn't as I added it before `beginResetModel()`. Any suggestions? How about disabling the Search button while it's in progress? I don't this issue can be properly implemented before the big async refactoring. @ITAYC0HEN might have rushed it with marking this as good first issue.  Hi, I would like to work on this.  > Open hexwidget during debuging, try selecting a range of bytes\r\n\r\nworks well :)\r\n\r\n\r\n> There is room for further improvements not refreshing comments during cursor blinking and not having cmdRawAt cause 2*4096 byte reads. With these changes the hexwidget is somewhat usable during debugging compared to.\r\n\r\nshould we have issue for these? For some reason, `rip` flag shown in the hexdump and printed in console is not synced with the value of `rip` register. This does not solved even by refreshing. The seek shown in the hexdump works well. \r\n\r\nThis does not happen in r2  > open disasembly widget next to hexdump, test that changed bytes highlighted still works by noping an instruction\r\n\r\nDidn't run the sanitzier but seems like this works :)  **Is your feature request related to a problem? Please describe.**\r\nYes, it is not possible to set environment variables for a binary to debug.\r\n\r\n**Describe the solution you'd like**\r\nAdd an option in the debug section of preferences to set env variables something like this (taken from codeblocks).\r\n\r\n![image](https://user-images.githubusercontent.com/2763475/79217862-29dd3f80-7e15-11ea-84b2-6dd5aebb2950.png)\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\n\r\n\r\n**Describe alternatives you've considered**\r\nSetting the envvar to the parent process(cutter itself) but it would require to restart cutter each time would like to change the variable for the program to debug.\r\n Good idea! Thank you <3\r\nI agree with Karliss, this can - and maybe should - be part in a bigger solution of modifying `dbg.profile` > This should probably done using rarun2/e dbg.profile files. In that case it should be an interface for managing and editing all(except ones that conflict with rest of UI) dbg.profile properties not just environment variables. It should be also possible to select existing handwritten rarun2 file.\r\n\r\nI would be happy with a small embedded editor for that config file, I only need to switch a specific envvar for testing a binary. Thanks for your soon response. You can unset env vars too with rarun2\n\n> On 14 Apr 2020, at 19:59, karliss <notifications@github.com> wrote:\n> \n> \ufeff\n> In case you need a solution that works right now looks like setting e dbg.profile=/path/to/rarun_profile.rr2 in the console widget works. Didn't test with all the features but at least setting environment variable works.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n  \r\nMy request has 2 parts:\r\n1. The ability to edit several instructions into nop instruction, at once:\r\nSometimes I want to select several instructions and change them all into nops.\r\nCutter allows me to select several instructions, but when I right click and select Edit->Nop Instruction, then only one instruction gets edited into nop.\r\nI would like that all of the selected instructions will be edited into nop.\r\n\r\n2. The ability to edit several instructions into any instruction.\r\nSometimes I want to edit an entire block of instructions, and overwrite them with new instructions of new functionality.\r\nCurrently the only way to do it is go one instruction at a time:\r\nRight click on the current instruction that you want to edit, go to Edit->Instruction, write down your new instruction, click OK. And then go again - right click on the next instruction, go to Edit->Instruction....\r\nThere is a constant switch from keyboard to mouse.\r\n\r\nI would like to be able to edit several instructions without having to right click, Edit->Instruction, after each time.\r\n\r\nA solution could be similar to the way x64dbg works:\r\nInside the \"Edit Instruction\" window (after right click, Edit->Instruction), when I finish typing my current instruction, pressing Enter (/clicking OK) will perform the edit, and the \"Edit Instruction\" window will not close. Instead, it will switch to editing the next instruction.\r\nThis way it is possible to edit several instructions without having to open the right click menu every single time.\r\n\r\n  Win 10 x64\r\n```\r\n[root@LAPTOP-EJ5BH6DJ docker]:~/dev/private/re/cutter/docker (v13.11.0) (master) make LOCAL_DEV=y build\r\nsudo docker build --rm -t radareorg/cutter -f ./Dockerfile-dev ../\r\nSending build context to Docker daemon  49.88MB\r\nStep 1/23 : FROM alpine:latest AS builder\r\n ---> a187dde48cd2\r\nStep 2/23 : LABEL maintainer \"Philipp Schmied <ps1337@mailbox.org>\"\r\n ---> Using cache\r\n ---> ff57996e4ffc\r\nStep 3/23 : ENV DEBIAN_FRONTEND noninteractive\r\n ---> Using cache\r\n ---> f94a050a5379\r\nStep 4/23 : RUN apk add --no-cache         bash         cmake         curl         g++         gcc         git         linux-headers         make         pkgconfig         python3-dev         qt5-qtbase         qt5-qtsvg-dev         qt5-qttools-dev         unzip         wget\r\n ---> Using cache\r\n ---> 74f4a2d383c2\r\nStep 5/23 : COPY docker/build_radare2.sh /opt/cutter/\r\n ---> Using cache\r\n ---> 891515824ac3\r\nStep 6/23 : COPY radare2 /opt/cutter/radare2\r\n ---> Using cache\r\n ---> 0a73295e66e3\r\nStep 7/23 : WORKDIR /opt/cutter\r\n ---> Using cache\r\n ---> bc6f07f4eea3\r\nStep 8/23 : RUN bash build_radare2.sh\r\n ---> Using cache\r\n ---> 030f0cc0ac00\r\nStep 9/23 : COPY docker/build_cutter.sh /opt/cutter/\r\n ---> Using cache\r\n ---> 0cf0a912eefd\r\nStep 10/23 : COPY scripts /opt/cutter/scripts\r\n ---> Using cache\r\n ---> 0819d9a7e647\r\nStep 11/23 : COPY src /opt/cutter/src\r\n ---> Using cache\r\n ---> 3fa6f930843d\r\nStep 12/23 : RUN bash build_cutter.sh &&     bash -c 'if [[ ! -x \"/opt/cutter/build/Cutter\" ]]; then exit -1; fi'\r\n ---> Using cache\r\n ---> e9caad7cffac\r\nStep 13/23 : FROM alpine:latest AS runner\r\n ---> a187dde48cd2\r\nStep 14/23 : ENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\r\n ---> Using cache\r\n ---> cd8baec9c32e\r\nStep 15/23 : RUN apk add --no-cache         bash         libuuid         make         python3         qt5-qtbase         shadow         su-exec\r\n ---> Using cache\r\n ---> fa81ceb72c40\r\nStep 16/23 : RUN useradd r2\r\n ---> Using cache\r\n ---> 054e05960406\r\nStep 17/23 : RUN mkdir /var/sharedFolder &&     mkdir -p /home/r2/.config/radare2 &&     touch /home/r2/.radare2rc &&     chown -R r2:r2 /var/sharedFolder &&     chown -R r2:r2 /home/r2/\r\n ---> Using cache\r\n ---> 83e6d9dc9413\r\nStep 18/23 : COPY ./docker/entrypoint.sh /usr/local/bin/entrypoint.sh\r\n ---> Using cache\r\n ---> 23ea9656d7ad\r\nStep 19/23 : COPY --from=builder /opt/cutter /opt/cutter\r\n ---> Using cache\r\n ---> 0b5dd6f9c639\r\nStep 20/23 : COPY --from=builder /usr/lib /usr/lib\r\n ---> Using cache\r\n ---> f2a4b3ad2ab9\r\nStep 21/23 : COPY --from=builder /usr/share/radare2 /usr/share/radare2\r\n ---> Using cache\r\n ---> 526f34c71656\r\nStep 22/23 : WORKDIR /opt/cutter/radare2/binr\r\n ---> Using cache\r\n ---> 97123760136a\r\nStep 23/23 : RUN make install && make symstall install-symlink\r\n ---> Using cache\r\n ---> 1578b0b6646d\r\nSuccessfully built 1578b0b6646d\r\nSuccessfully tagged radareorg/cutter:latest\r\n[root@LAPTOP-EJ5BH6DJ docker]:~/dev/private/re/cutter/docker (v13.11.0) (master) docker run --rm -it radareorg/cutter\r\nCutter: Starting with UID:GID :\r\nusermod: invalid user ID 'r2'\r\nUsage: usermod [options] LOGIN\r\n\r\nOptions:\r\n  -c, --comment COMMENT         new value of the GECOS field\r\n  -d, --home HOME_DIR           new home directory for the user account\r\n  -e, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE\r\n  -f, --inactive INACTIVE       set password inactive after expiration\r\n                                to INACTIVE\r\n  -g, --gid GROUP               force use GROUP as new primary group\r\n  -G, --groups GROUPS           new list of supplementary GROUPS\r\n  -a, --append                  append the user to the supplemental GROUPS\r\n                                mentioned by the -G option without removing\r\n                                the user from other groups\r\n  -h, --help                    display this help message and exit\r\n  -l, --login NEW_LOGIN         new value of the login name\r\n  -L, --lock                    lock the user account\r\n  -m, --move-home               move contents of the home directory to the\r\n                                new location (use only with -d)\r\n  -o, --non-unique              allow using duplicate (non-unique) UID\r\n  -p, --password PASSWORD       use encrypted password for the new password\r\n  -R, --root CHROOT_DIR         directory to chroot into\r\n  -P, --prefix PREFIX_DIR       prefix directory where are located the /etc/* files\r\n  -s, --shell SHELL             new login shell for the user account\r\n  -u, --uid UID                 new UID for the user account\r\n  -U, --unlock                  unlock the user account\r\n  -v, --add-subuids FIRST-LAST  add range of subordinate uids\r\n  -V, --del-subuids FIRST-LAST  remove range of subordinate uids\r\n  -w, --add-subgids FIRST-LAST  add range of subordinate gids\r\n  -W, --del-subgids FIRST-LAST  remove range of subordinate gids\r\n\r\nqt.qpa.xcb: could not connect to display \r\nqt.qpa.plugin: Could not load the Qt platform plugin \"xcb\" in \"\" even though it was found.\r\nThis application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.\r\n\r\nAvailable platform plugins are: eglfs, linuxfb, minimal, minimalegl, offscreen, vnc, xcb.\r\n\r\n[root@LAPTOP-EJ5BH6DJ docker]:~/dev/private/re/cutter/docker (v13.11.0) (master) \r\n```\r\n cc @ps1337  It worked correctly the first time I run it I'll check it out later and provide feedback \n\n\n\n-----Original Message-----\nFrom: karliss <notifications@github.com>\nTo: radareorg/cutter <cutter@noreply.github.com>\nCc: ps <pschmied@mailbox.org>, Mention <mention@noreply.github.com>\nSent: Sat, 11 Apr 2020 18:20\nSubject: Re: [radareorg/cutter] Cutter build is broken in docker after second run (#2140)\n\nWhat do you mean by worked, did it somehow opened the GUI? Can you demonstrate a full log that demonstrates working the first time and then failing on second time? Or did it worked once and you can't repeat that at all?\n\n-- \nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/radareorg/cutter/issues/2140#issuecomment-612456558 The image build is fine. We usually start the docker container using the Makefile that's present here: https://github.com/radareorg/cutter/blob/master/docker/Makefile\r\n\r\nThe problem is that the container expects some environment variables to be present in order to change the internal container user from `root` to `r2`. Also, the X socket is mounted inside of the container so the GUI can be shown.\r\n\r\nPlease retry by using our Makefile, e.g. like `sudo make run`\r\n\r\nAh and since you're running on windows this might not work out of the box. I haven't tested docker+gui on windows but I think there are ways to:\r\n\r\n- start an xserver on windows\r\n- or to try other mechanisms like [x11docker](https://github.com/mviereck/x11docker)\r\n  **Environment information**\r\n* Operating System: Windows 10 home x64\r\n* Cutter version: v1.10.3x64\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n\r\n![](https://i.imgur.com/MrWAJwv.png)\r\n\r\nOrder of registers is ugly, it should go the normal way starting with `rax` on left column, or add the possibility to reorder them Agree :) Thank you  absolutely agree. Wanted to do this for awhile  appveyor failure isn't related, right?\r\n  fixed Ubuntu :)   Looks good on my Arch with dark themed OS:\r\n![image](https://user-images.githubusercontent.com/20182642/78249234-b115e380-74f6-11ea-8953-526eed1f051d.png)\r\n So we can force background color for tooltips in light theme maybe...  Google Coding Style guide differentiate between declaration and definition comments like this:\r\n>  **Declaration comments** describe use of the function (when it is non-obvious); **comments at the definition** of a function describe operation.\r\n\r\nFrom: [Google's C++ Style Guide#Function Comments](https://google.github.io/styleguide/cppguide.html#Function_Comments):\r\n\r\n## Full explanation:\r\n\r\n----\r\n\r\n### Function Declarations\r\n\r\nAlmost every function declaration should have comments immediately preceding it that describe what the function does and how to use it. These comments may be omitted only if the function is simple and obvious (e.g. simple accessors for obvious properties of the class). These comments should open with descriptive verbs in the indicative mood (\"Opens the file\") rather than verbs in the imperative (\"Open the file\"). The comment describes the function; it does not tell the function what to do. In general, these comments do not describe how the function performs its task. Instead, that should be left to comments in the function definition.\r\n\r\n**Types of things to mention in comments at the function declaration:**\r\n\r\n- What the inputs and outputs are.\r\n- For class member functions: whether the object remembers reference arguments beyond the duration of the method call, and whether it will free them or not.\r\n- If the function allocates memory that the caller must free.\r\n- Whether any of the arguments can be a null pointer.\r\n- If there are any performance implications of how a function is used.\r\n- If the function is re-entrant. What are its synchronization assumptions?\r\n\r\n----\r\n### Function Definitions\r\n\r\nIf there is anything tricky about how a function does its job, the function definition should have an explanatory comment. For example, in the definition comment you might describe any coding tricks you use, give an overview of the steps you go through, or explain why you chose to implement the function in the way you did rather than using a viable alternative. For instance, you might mention why it must acquire a lock for the first half of the function but why it is not needed for the second half.\r\n\r\n**Note** _you should not just repeat the comments given with the function declaration, in the .h file or wherever. It's okay to recapitulate briefly what the function does, but the focus of the comments should be on how it does it._ I agree.\r\n@thestr4ng3r @xarkes if you have nothing against deciding to use docstrings in the header files (declarations), then I think we can set it as an action-item Documentation should be in the header. What is an action-item? https://en.wikipedia.org/wiki/Action_item\r\n\r\nTo remove all the remaining docstrings we have in CPP files to Headers\r\n> There are more of them in headers 273 compared to 50 in cpp files. Yep I agree, although there are few disadvantages in my opinion I think the docstrings belong to the header files.  **Environment information**\r\n* Operating System: Ubuntu 18.04.1, 64bit\r\n* Cutter version: 1.10.2\r\n* Obtained from:\r\n  - [] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: ELF 64bit\r\n\r\n1. After inserting a breakpoint, I click on the debug button. \r\n2. I don't add any command line args\r\n3. The program stops in a different address \r\n4. I push<F5> and it stops at a different address, but not the breakpoint yet\r\n5. I push <F5> again and the program exits with \"Debugged process exited (34827)\"\r\n\r\nSteps to reproduce the behavior:\r\n1. open x5 binary \r\n2. put a breakpoint, doesn't matter where\r\n3. start debugging\r\n4. see error\r\n\r\n**Expected behavior**\r\n\r\nThe program will exit without stopping in the breakpoint.\r\n\r\n**Additional context**\r\nthe file:\r\n[x5.zip](https://github.com/radareorg/cutter/files/4411239/x5.zip)  **Environment information**\r\n* Operating System: Ubuntu 19.10\r\n* Cutter version: 1.10.3 Pre Release\r\n* Obtained from:\r\n  - [X] Downloaded from release\r\n\r\n**Describe the bug**\r\n\r\nNumpad input does not work on any input field of the UI\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to any input field of the UI, for example \"Quick filter\" of functions windows, r2 console input. Or open dialogue for putting a comment or renaming a local var. Any input field I tried has the problem.\r\n2. Try to input numbers (or floating point) from numpad and observe they are not being written.\r\n\r\n**Expected behavior**\r\n\r\nWhen Num lock is enabled on a keyboard with numpad, input fields of the UI should be able to get input from it.\r\n @karliss, Is this a known issue in Qt? I can't reproduce on non-appimage builds so I can verify that what you're describing is true.\r\nAlso. is there a way we can force Qt to handle this? > Qt 5.14 test release has been rebuilt with xkb. Numpad seems to be working. If anyone wants to confirm - it is available [here](https://github.com/radareorg/cutter/releases/tag/deploy-test-qt514),\r\n\r\nWorking fine for me with same config as when described issue.\r\n\r\nThanks for taking a look at it.   <!-- Filling this template is mandatory -->\r\n\r\n**Your checklist for this pull request**\r\n- [x] I've read the [guidelines for contributing](https://cutter.re/docs/developers-docs/first-time.html) to this repository\r\n- [x] I made sure to follow the project's [coding style](https://cutter.re/docs/developers-docs.html)\r\n- [ ] I've updated the [documentation](https://cutter.re/docs/user-docs.html) with the relevant information (if needed)\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. Is a new feature implemented? What existing problem does the pull request solve? How does the pull request solve these issues? Please provide enough information so that others can review your pull request. -->\r\n\r\n**Functional Changes**\r\n- Displays the flags and comments in the Information tab of the hexdump sidebar for the current address.\r\n\r\n**Code Changes**\r\n_HexdumpWidget.ui_:\r\n- Added ui item elements under `hexSideTab_2` for displaying flags and comments.\r\n\r\n_HexdumpWidget.cpp_:\r\n- Set the placeholder text for the flag and comment elements using `setPlaceholderText`.\r\n- Created a new function `showMetaInfo(RVA address)`:\r\n    - Fetched the flags info for the address using `r_flag_get_i (core->flags, address)`\r\n    - Fetched the comments for the address using `Core()->cmd(\"CC.\" + RAddressString(address)`\r\n    - Set the fetched values for the UI elements using `setText`.\r\n- Invoked `showMetaInfo` whenever `positionChanged` signal is emitted.\r\n\r\n**Test plan (required)**\r\n\r\n<!-- What steps should the reviewer take to test your pull request? Demonstrate that the code is solid. Example: The exact actions you made and their outcome. Add screenshots/videos if the pull request changes UI. This is your time to re-check that everything works and that you covered all the edge cases -->\r\n* Both flag and comment are present:\r\n![Case-1](https://user-images.githubusercontent.com/7266024/77314014-2fa79f80-6d05-11ea-81bf-dbebf367b2ef.png)\r\n\r\n* Only the flag is present:\r\n![Case-2](https://user-images.githubusercontent.com/7266024/77314017-30d8cc80-6d05-11ea-967d-ebf843d3aca7.png)\r\n\r\n* Only the Comment is present:\r\n![hexdump-4](https://user-images.githubusercontent.com/7266024/77314591-3da9f000-6d06-11ea-8949-797105186c67.png)\r\n\r\n* Both flag and comment are not present:\r\n![Case-4](https://user-images.githubusercontent.com/7266024/77314016-30d8cc80-6d05-11ea-8eb0-54b10187ba8d.png)\r\n\r\n\r\n\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\nCloses #1471 \r\n<!-- put \"closes #XXXX\" in your comment to auto-close the issue that your PR fixes (if such). -->\r\n @karliss, please review this. see the pxa command\n\nOn Mon, 23 Mar 2020 at 13:07, karliss <notifications@github.com> wrote:\n\n> This way of displaying the flag and comment seems very inconvenient to me,\n> but I'd like to hear other opinions.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/pull/2111#issuecomment-602552114>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAG75FQ2L6JWOW4IOQHG3J3RI5GIXANCNFSM4LR2CZ3Q>\n> .\n>\n\n\n-- \n--pancake\n  **Environment information**\r\n* Operating System:Windows\r\n* Cutter version:1.10.2\r\n* Obtained from:\r\n  - [x] Built from source\r\n* File format:N/A\r\n\r\n**Describe the bug**\r\n\r\nCutter uses drj command to obtain the values of registers, but if the value is larger than 2^52, it becomes broken because it cannot be expressed as a double value. e.g.\r\n\r\n```\r\nmov rax, 0x4141414141414141\r\n```\r\n\r\nThen cutter will show rax = 0x4141414141414000, even though drj shows the correct value.\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open shellcode `48B84141414141414141`\r\n2. Start emulation\r\n3. Step one instruction\r\n4. rax is shown as 0x4141414141414000.\r\n\r\n**Expected behavior**\r\n\r\nrax should be shown as 0x4141414141414141.\r\n\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\n**Additional context**\r\n\r\nI guess this is related with [QTBUG-28560](https://bugreports.qt.io/browse/QTBUG-28560), and it's fixed in Nov 2019, so upgrading the version of Qt might help, but not sure if it's best.\r\n Cutter currently uses Qt's parser(QJsonDocument) to parse JSON values from radare2.\r\nIn Qt, the value is converted to double just after parsing. Perhaps another parser can be used? Happens to me as well with version 1.10.1 while using the lodsq instruction. The value is not fully loaded into the register, i.e: the lower end of the register filled with garbage  When I tried opening a disassembly widget from graph using 'space key', it opened graph widget for current position in disassembly widget. \r\n\r\nHow can I create this problem? Or is it some other shortcut?  I've compiled cutter 30 times in a loop now and worked flawlessly, removed applying the patch and the next build failed again.\r\nlooks good to me :cat:   **Environment information**\r\n* Operating System: Arch Linux\r\n* Cutter version: 1.10.2\r\n* Obtained from:\r\n  - [x] Built from source\r\n\r\n**Describe the bug**\r\n\r\nQMake build system doesn't seem to properly specify target dependencies. When i build on a very beefy machine like a ryzen with 64 concurrency, the compilation aborts (in like ~3 out of 4 cases) with:\r\n```\r\n...\r\ng++ -c -pipe -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -std=gnu++11 -Wall -Wextra -D_REENTRANT -fPIC -DCUTTER_ENABLE_PYTHON -DCUTTER_ENABLE_PYTHON_BINDINGS -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS -DQT_NO_DEBUG -DQT_SVG_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -I../src -I. -I../src -I../src/core -I../src/widgets -I../src/dialogs -I../src/common -I../src/plugins -I../src/menus -I/build/radare2-cutter/src/radare2-cutter/build/bindings/CutterBindings -isystem /usr/include/PySide2 -isystem /usr/include/PySide2/QtCore -isystem /usr/include/PySide2/QtWidgets -isystem /usr/include/PySide2/QtGui -isystem /usr/include/libr -isystem /usr/include/python3.8 -isystem /usr/include/shiboken2 -isystem /usr/include/qt -isystem /usr/include/qt/QtSvg -isystem /usr/include/qt/QtWidgets -isystem /usr/include/qt/QtGui -isystem /usr/include/qt/QtNetwork -isystem /usr/include/qt/QtCore -I. -I. -I/usr/lib/qt/mkspecs/linux-g++ -o BasicBlockHighlighter.o ../src/common/BasicBlockHighlighter.cpp\r\n../src/plugins/PluginManager.cpp:6:10: fatal error: cutterbindings_python.h: No such file or directory\r\n    6 | #include <cutterbindings_python.h>\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~\r\ncompilation terminated.\r\nmake: *** [Makefile:5239: PluginManager.o] Error 1\r\nmake: *** Waiting for unfinished jobs....\r\n```\r\n\r\nI can work around this issue by either limiting the parallel jobs (hence making it more unlikely to out-race the binding generator) or by simply invoking `make bindings_target` myself before the full `make` call.\r\n\r\n**To Reproduce**\r\n\r\n```\r\n  qmake ../src/Cutter.pro \\\r\n    CUTTER_ENABLE_PYTHON=true \\\r\n    CUTTER_ENABLE_PYTHON_BINDINGS=true \\\r\n    CUTTER_USE_BUNDLED_RADARE2=false\r\n  make\r\n```\r\n\r\n**Expected behavior**\r\n\r\nCan compile using qmake on a beefy machine without race conditions. I will be testing this patch during the weekend and also take a dive into replacing qmake with cmake and give feedback on that as well. Thanks for the quick handling and the headsup related to the Arch package. cmake build seems fine, so will switch the Arch package to it with the next update.\r\nThe PR also looks good :)  **Environment information**\r\n* Operating System: ubuntu 19\r\n* Cutter version: \r\n```\r\nVersion 1.10.2\r\nUsing r2-4.3.1\r\nBased on Qt 5.12.1 (GCC 7.4.0, 64 bit)\r\nOptional Features:\r\nPython: ON\r\nPython Bindings: ON\r\n```\r\n\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: appimage\r\n\r\n**Describe the bug**\r\nI installed angr angrdbg using python3, and put angrcutter folder under plugins/python.\r\nCutter tried to load the plugin, but I guess it's using wrong version of python.\r\nBy export PYTHONHOME to `which python3`, the appimage still use it's default python settings.\r\n\r\nAnd, I can't install dependencies under python2.\r\n\r\nHere's the whole log:\r\n\r\n```\r\nmichael@michael-ubuntu:~$ export PYTHONHOME=`which python3`\r\nmichael@michael-ubuntu:~$ cutter \r\nSetting PYTHONHOME = \"/tmp/.mount_cutterGHFyt9/usr\"  for AppImage.\r\nPYTHONHOME = \"/tmp/.mount_cutterGHFyt9/usr\"\r\nSetting r2 prefix = \"/tmp/.mount_cutterGHFyt9/usr\"  for AppImage.\r\nSetting r2 plugins dir = \"/tmp/.mount_cutterGHFyt9/usr/share/radare2/plugins\"\r\nNot loading library because it has already been loaded from somewhere else: '/home/michael/.local/share/radare2/plugins/core_ghidra.so'\r\nModule version mismatch /home/michael/.local/share/radare2/plugins/io_frida.so (4.2.0-git) vs (4.3.1)\r\nModule version mismatch /home/michael/.local/share/radare2/plugins/r2golf.so (4.2.0-git) vs (4.3.1)\r\nPlugins are loaded from \"/home/michael/.local/share/RadareOrg/Cutter/plugins\"\r\nCouldn't load module for plugin: \"angrcutter\"\r\nTraceback (most recent call last):\r\n  File \"/home/michael/.local/share/RadareOrg/Cutter/plugins/python/angrcutter/__init__.py\", line 1, in <module>\r\n    from .plugin_interface import create_cutter_plugin\r\n  File \"/home/michael/.local/share/RadareOrg/Cutter/plugins/python/angrcutter/plugin_interface.py\", line 3, in <module>\r\n    from .plugin import AngrWidget, printMessage, LogLevel\r\n  File \"/home/michael/.local/share/RadareOrg/Cutter/plugins/python/angrcutter/plugin.py\", line 6, in <module>\r\n    from .debugger import cutterDebugger\r\n  File \"/home/michael/.local/share/RadareOrg/Cutter/plugins/python/angrcutter/debugger.py\", line 6, in <module>\r\n    from angrdbg import *\r\nModuleNotFoundError: No module named 'angrdbg'\r\nLoaded 0 plugin(s).\r\nPlugins are loaded from \"/usr/share/ubuntu/RadareOrg/Cutter/plugins\"\r\nPlugins are loaded from \"/usr/local/share/RadareOrg/Cutter/plugins\"\r\nPlugins are loaded from \"/usr/share/RadareOrg/Cutter/plugins\"\r\nPlugins are loaded from \"/var/lib/snapd/desktop/RadareOrg/Cutter/plugins\"\r\nPlugins are loaded from \"/tmp/.mount_cutterGHFyt9/usr/share/RadareOrg/Cutter/plugins\"\r\nLoaded 1 plugin(s).\r\nqt.network.ssl: QSslSocket: cannot resolve CRYPTO_num_locks\r\nqt.network.ssl: QSslSocket: cannot resolve CRYPTO_set_id_callback\r\nqt.network.ssl: QSslSocket: cannot resolve CRYPTO_set_locking_callback\r\nqt.network.ssl: QSslSocket: cannot resolve ERR_free_strings\r\nqt.network.ssl: QSslSocket: cannot resolve EVP_CIPHER_CTX_cleanup\r\nqt.network.ssl: QSslSocket: cannot resolve EVP_CIPHER_CTX_init\r\nqt.network.ssl: QSslSocket: cannot resolve sk_new_null\r\nqt.network.ssl: QSslSocket: cannot resolve sk_push\r\nqt.network.ssl: QSslSocket: cannot resolve sk_free\r\nqt.network.ssl: QSslSocket: cannot resolve sk_num\r\nqt.network.ssl: QSslSocket: cannot resolve sk_pop_free\r\nqt.network.ssl: QSslSocket: cannot resolve sk_value\r\nqt.network.ssl: QSslSocket: cannot resolve SSL_library_init\r\nqt.network.ssl: QSslSocket: cannot resolve SSL_load_error_strings\r\nqt.network.ssl: QSslSocket: cannot resolve SSL_get_ex_new_index\r\nqt.network.ssl: QSslSocket: cannot resolve SSLv3_client_method\r\nqt.network.ssl: QSslSocket: cannot resolve SSLv23_client_method\r\nqt.network.ssl: QSslSocket: cannot resolve SSLv3_server_method\r\nqt.network.ssl: QSslSocket: cannot resolve SSLv23_server_method\r\nqt.network.ssl: QSslSocket: cannot resolve X509_STORE_CTX_get_chain\r\nqt.network.ssl: QSslSocket: cannot resolve OPENSSL_add_all_algorithms_noconf\r\nqt.network.ssl: QSslSocket: cannot resolve OPENSSL_add_all_algorithms_conf\r\nqt.network.ssl: QSslSocket: cannot resolve SSLeay\r\nqt.network.ssl: Incompatible version of OpenSSL\r\nQNetworkReplyHttpImplPrivate::_q_startOperation was called more than once QUrl(\"https://api.github.com/repos/radareorg/cutter/releases/latest\")\r\nqt.network.ssl: QSslSocket::connectToHostEncrypted: TLS initialization failed\r\n\r\n```\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. clone angrcutter, and put angrcutter/angrcutter folder to plugin/python\r\n\r\n**Expected behavior**\r\nShould use user provided python\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n @karliss Hi, also tried `export PYTHONHOME=/usr/local`, not working.\r\nThe console says: `Setting PYTHONHOME = \"/tmp/.mount_cutterKMtoV3/usr\"  for AppImage.\r\n`\r\n\r\nIf you know how to set this, pls write it down. I'm no developper, I just want to use it, and want to use the plugin.\r\n\r\nOr, you got busy, I'll wait for others. thanks @karliss thank you very much, karliss.\r\nI think it may be the angrcutter plugin's improper design. I'll update here after fixed.    <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\nAdds history listing feature in Remote Debug Dialog with some minor enhancements.\r\n* Placeholders\r\n* Remembers the previous connected paths/ips\r\n* Blank IP will be treated as localhost\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\nPlaceholders and history box with previous connected IPs/Paths\r\n![image](https://user-images.githubusercontent.com/30789322/76890679-cb708000-68ad-11ea-8262-009b4a53d6fe.png)\r\n\r\nJust click on any one and it'll automatically fill the details in dialog box\r\n![image](https://user-images.githubusercontent.com/30789322/76890773-fb1f8800-68ad-11ea-9492-b09f0528c08f.png)\r\n\r\n\r\n**Closing issues**\r\ncloses #1994 \r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Is it possible to separate the items from the history list visually? Now it looks a bit weird. Sure. Will make a patch after sometime :) Hey @XVilka, i'm not quite sure what you mean by `separate the items from the history list visually`. Previously i interpreted it as the space between values in history list. It looks something like this now (less space between list values). Can you confirm if this is what you meant? If not, let me know.\r\n\r\n![image](https://user-images.githubusercontent.com/30789322/76955055-7e38f080-6937-11ea-8e4d-a68ac62a75b6.png)\r\n\r\nAlso the right click menu now works.\r\n![image](https://user-images.githubusercontent.com/30789322/76955243-d7a11f80-6937-11ea-95cc-5616fc89848b.png)\r\n\r\n\r\n @ITAYC0HEN I'll push the user-documentation part in some time :) Added line separators\r\n![image](https://user-images.githubusercontent.com/30789322/76984183-80fe0a80-6964-11ea-9aee-a50bcca0b6b9.png)\r\n Due to the recent rename of `windbg://` into `winkd://` and some corresponding refactoring this *might* need an update.  The variable and type analysis code in r2 is the main bottleneck in disasm and analysis right now. There are several other points of interest but i didnt had a chance to investigate yet and disnt had time to improve thst code. But will do at some point. Feel free to run the profiler and share the results\n\n> On 15 Mar 2020, at 20:00, Itay Cohen <notifications@github.com> wrote:\n> \n> \ufeff\n> Let's not write \"latest from git\" as version\n> \n> agreed :) Will add \"(version x.y.z)\"\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n  Desired use case is ability to debug apps running on iOS device. Should be available already since LLDB supports gdb-remote protocol - see [their documentation](https://lldb.llvm.org/use/remote.html)   **Environment information**\r\n* Operating System:\r\n* Cutter version:\r\n* Obtained from:\r\n  - [x] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format:\r\n\r\n**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n**Functionalities added:**\r\n- Edit -> Preferences -> Disassembly-Graph, user can choose if they want the exported bitmap image to be transparent or not. [Checkbox]\r\nAt the same location, there is Double SpinBox using which user can select the scaling factor (>=100% to 30000%). The maximum being 30000% is pure arbitrary choice that I made as a factor even as large as 30000% is not useful for any situations I could think of. This can be increased if needed, but I don't think there is a point.\r\n- Normal export, if the user selects the extensions png/jpg (bitmap), this will export with the given scaling factor. If the option transaparent is selected, png export will be transparent. **Note : jpg doesn't support transparency** So if a user select transparent for a jpg export, by default the background will be the ui background color.\r\n- In a session, if a user selects the scaling factor and transparency for the exported bitmap images once, it will remain so as long they are in the current session. User can change this at any point if they want.\r\n\r\n**Changes made to code and additions.**\r\n\r\n- Defined two **private** variables **_double bitmapGraphExportScale_** and **_bool bitmapGraphExportTransparency_** in _common/Configuration.h_  in _common/Configuration.cpp_.\r\n\r\nThese variables store the details about how much graph should be scaled while exporting and if it should be transparent or not.\r\n\r\n- Made _getter_ and _setter_ functions for _bitmapGraphExportScale_ and _bitmapGraphExportTransparency_ in Configuration.cpp.\r\n\r\n- In _dialogs/preferences/GraphOptionsWidget_ made a checkbox for transparency and double spinbox for scaling factor.\r\n\r\n- When changes are made to the transparency and/or spinbox, call the respective setter function in _Configuration.cpp_ to update the value of transparency and/or spinbox.\r\n\r\n- In _src/widgets/Graphview.cpp,_ changed the function definition of _saveAsBitmap_ from \r\n`void void saveAsBitmap(QString path, const char *format = nullptr)`\r\nto\r\n`void saveAsBitmap(QString path, const char *format = nullptr, double scaler = 1.0, bool transparent = false);`\r\nThe file saved by the _saveAsBitmap_ functions is according to the scaling factor and transparent [or not] option selected by the user.\r\n\r\n- In _src/widgets/DisassemblerGraphView.cpp,_ in function _DisassemblerGraphView::exportGraph_ two variables are assigned the current value of both _bitmapGraphExportScale_ and _bitmapGraphExportTransparency_. These variables are passed arguments if the graph is exported in bitmap format.\r\n\r\n**Test plan (required)**\r\n\r\nThe UI in Edit -> Preferences -> Disassembly-Graph will change from \r\n![GraphOptionsWidgetEarlier](https://user-images.githubusercontent.com/18501167/76172493-ab113900-61bc-11ea-8e1a-b0d4c6aebd0e.png)\r\n     to the following [updated with the changes requested]\r\n![graph-options-updated](https://user-images.githubusercontent.com/18501167/76238061-4229cf80-6255-11ea-844e-0820a633f8f5.png)\r\n\r\n\r\n_**Bitmap exported graphs before and after selecting scaling factor and transparency**_\r\n\r\nNative theme\r\n![5-native-normal](https://user-images.githubusercontent.com/18501167/76172547-4bfff400-61bd-11ea-9d36-771264f5e618.png)\r\nthis has been scaled to 300% and exported selecting transparent background. Result is the following.\r\n![6-native-scaled-trans](https://user-images.githubusercontent.com/18501167/76172562-72be2a80-61bd-11ea-8573-997dc4aa3b3a.png)\r\n\r\nMidnight theme\r\n![3-midnight-normal](https://user-images.githubusercontent.com/18501167/76172575-8cf80880-61bd-11ea-92ec-6fcd3e5c35e7.png)\r\nthis has been exported as transparent with default scaling(100%). Result is the follwing\r\n![4-midnight-normal-trans](https://user-images.githubusercontent.com/18501167/76172594-a4cf8c80-61bd-11ea-93d4-2ca13a97d74f.png)\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\ncloses #1998 \r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Your examples are sharp and crispy, good job.  **Detailed description**\r\nIts in continuation of #1911 as author is not responding. This PR adds the ability to highlight lines/blocks in disassembly/graph view.\r\n\r\n**Test plan (required)**\r\n - Highlighted instructions are properly synchronized between multiple widgets.\r\nCode still has some issues which I wasn't able to resolve. As can be seen [here](https://github.com/nk521/cutter/blob/70c70e60c692b4420f1beda169fbe81517aaca06/src/menus/DisassemblyContextMenu.cpp#L959) I wanted to call `DisassemblyWidget::refreshDisasm` as I believe that this function will fix the stuff by calculating the correct value of `lines`. (I maybe wrong)\r\n\r\n**Closing issues**\r\ncloses #444 \r\n Thank you again for this PR!\r\nAt this time, we'll close this PR since there was suggested a way that will be better to implement this feature in.\r\n  Windows Version : Windows 10 1603\r\nCpu : \u01307 6700k\r\nGpu : Gtx 1070\r\nCutter Version : 1.10.1\r\n\r\nThe Program is very good, but the performance is very bad when it freezes the loading screen would be better if we saw  Hello \r\n\r\nI am trying to connect to vmware I am getting ip not found error\r\n\r\nType : GDB\r\nIP : localhost\r\nPort : 8864\r\n\r\nNote : I can connect with IDA Pro Software 192.168.1.26 \r\n\r\nI tried this again it was not connected\r\n\r\nI can connect with IDA Pro Software Have you tried 127.0.0.1?\r\nMost likely it's radare2 and host/name resolution problem. I bet it's Windows   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\nThis pull request adds the documentation for updating all the submodules or a specific submodule in the repo. \r\n![documentation](https://user-images.githubusercontent.com/7266024/75289635-ffaccf80-581e-11ea-83b3-7d65e5aca026.png)\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\nDev Documentation.\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\nCloses #2066  Thanks a lot for taking the time to review the PR :D. I have added it to the bottom of `code.rst` and also I have addressed the suggested changes. Please have a look.\r\n\r\nI was aware that I had updated the radare2 submodule, but was not sure whether to add it in this PR or not :sweat_smile: Thanks @ITAYC0HEN!:)  What about putting Aithentihash after sha256? It's more niche thing after\nall.\n\nOn Sun, Feb 23, 2020, 02:11 Itay Cohen <notifications@github.com> wrote:\n\n> macOS failing is not realted to the PR\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/pull/2067?email_source=notifications&email_token=AABRT7MFVKL62NQXMYKHJGLREFTGNA5CNFSM4KZTC4W2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEMVG4JA#issuecomment-589983268>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABRT7LEBBOKCYE2NDXXVMDREFTGNANCNFSM4KZTC4WQ>\n> .\n>\n  Hi @ITAYC0HEN, I would like to work on this issue. I just had one question. To update the radare2 submodule, would it be alright if we use:\r\n`git submodule foreach git pull origin master`\r\nwhich would also update the other submodule(**translations**) in the repo or are there any other set of commands that you would like to suggest? Thanks @ITAYC0HEN for your suggestions. I have raised the PR for this. Please review it whenever you get a chance.  I will do this after finishing issue #1837 (Add text editor for .cutterrc)  **Describe the solution you'd like**\r\nFor example, in order to use Ghidra & RetDec plugin with cutter, I must compile these plugin with radare2's & cutter's source code.\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThe convienient way:\r\n  r2pm install ghidra-dec  --with-cutter /path/to/cutter_or_/path/to/cutter/plugin\r\nThen everything is all set.\r\n\r\nI think we should respect experience which IDA did , that is, distribute standalone plugins with binary file, let the community handle the compile thing .... just distrubite binary plugin with r2pm's repository with radare2 and cutter. This is what new [r2pm.go](https://github.com/radareorg/r2pm/) is supposed to solve.  It's written in Go and should be easy to improve, pull requests are welcome.\r\nSee the related issues:\r\n- https://github.com/radareorg/r2pm/issues/7\r\n- https://github.com/radareorg/r2pm/issues/29 I've do some reasearch about r2ghidra-dec's compile procedure with both r2 plugin & cutter plugin.\r\nThe reason why r2ghidra-dec needs source code is mainly because r2ghidra-dec needs `.h` files (and `.so` files maybe).\r\n\r\nSo, this require radare2 separate it's headers files (like relations between linux & linux-headers), otherwise it should depend on entire radare2 projects.  Hi @ITAYC0HEN, I would like to give this a shot. Can you give me a bit of a headstart that how can I approach this? Hi, here is general strategy for approaching your first issues:\r\n\r\n\r\nI don't know your experience level so don't mind if some of the steps seem obvious.\r\n\r\n*  Start by reading this https://cutter.re/docs/code.html\r\n*  See https://github.com/radareorg/cutter/blob/master/docs/source/building.rst for compilation instructions\r\n*  Get the build working\r\n*  Run cutter and get familiar with how the menu behaves currently\r\n*  Find the the source files implementing it, (practice searching code in your editor, this is an important skill)\r\n*  ~~If necessary read https://doc.qt.io/qt-5/model-view-programming.html for basic understanding of how Qt model system works.~~ not required in this issue.\r\n* Check if any of the existing code implements similar behavior in the same widget or similar widgets. If you do copy an existing code consider why it did things the way it did, the same factors might not apply in your case or the old code is simply bad. Still it's  a way of moving forwards if you otherwise wouldn't know how to approach it.\r\n*  Come up with a plan for things that need to be done and discuss it here. Just because something was mentioned in issue description doesn't necessarily means that it is still relevant or good feature. \r\n*  When code changes are done and you are ready for PR, please follow the PR template.\r\n\r\n\"Test plan (required)\" really means that. If those are GUI changes make a screenshot.\r\nMake a basic list of steps for checking that changes are working as expected. This also a good point to consider any potential edge cases or different kind of interesting inputs if you didn't already do it while writing code. Actually perform the steps you described when making the PR even if they seem trivial and you did them during development, it helps catching any makes done during final cleanup and making sure you didn't forget anything.\r\n\r\n Hi, thanks a lot for taking the time to write down these steps. Also, sorry for the delayed response. I had got the build working and had also found the relevant source files. But I was trying to figure out the function that I can use to retrieve information from an `address`.  This is what I had planned:\r\n1) Retrieve the information about the command using the `offset(address)`.\r\n2) Using the command values to differentiate whether the string definition is defined or not and consequently, show/hide the remove option.\r\n\r\nSorry if this isn't right or If I have misunderstood something. Hi @karliss, I have implemented this in the same way `canCopy` is implemented. It toggles the visibility of the remove action depending upon the other actions:\r\n\r\n- For `on_actionSetAsString_triggered()` and `on_actionSetAsStringAdvanced_triggered()`, it would set its visibility to true.\r\n- For `on_actionSetAsStringRemove_triggered()` and `on_actionSetToCode_triggered()`, it would set its visibility to false.\r\n\r\nI'm not sure whether this would be the right way of implementing this. It would be great if you can provide some feedback. I can raise the PR if that makes things more clear\r\n   Hi @karliss, I have raised the PR. Please take a look whenever you get a chance.  **Environment information**\r\n* Operating System: Windows 10\r\n* Cutter version: 1.10.1 x64\r\n* Obtained from:\r\n  - [] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format:\r\n-\r\n**Describe the bug**\r\n\r\nSo i was messing around with cutter and under preferences -> dissasembly -> metadata it came to my attention that when you would klick enable on \"show only strings if any in the asm.emu output (emu.str)\" and disable it that \"Run ESIL emulation analysis\" would be turned on without me enabling it to disable it you would need to enable and disable it by klicking the checkbox and then it would be fixed.\r\n\r\n**To Reproduce**\r\n\r\n1. Open Preferences -> Dissasembly -> Metadata tab\r\n\r\n2. Click on -> \"Show only strings if any in the asm.emu output (emu.str)\"\r\n                        whilst \"Run ESIL emulation analysis  (asm.emu)\" is not enabled.\r\n\r\n3. Disable \"Show only strings if any in the asm.emu output (emu.str)\" and\r\n    you will se that \"Run ESIL emulation analysis  (asm.emu)\" is  enabled.\r\n\r\n4. Enable and Disable \"Run ESIL emulation analysis  (asm.emu)\" to fix the  Problem\r\n\r\n\r\n**Expected behavior**\r\nenable and disable \"Show only strings if any in the asm.emu output (emu.str)\" and\r\n    you will se that \"Run ESIL emulation analysis  (asm.emu)\" is  enabled.\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n Ah okay good to know :)\r\n\r\nAlso thank you for looking into it.\r\n\r\nHave a nice day. Duplicate of #1694   **Environment information**\r\n* Operating System: Microsoft Windows 10 Pro\r\n* Cutter version: 1.10.1\r\n* Obtained from:\r\n  - [] Built from source\r\n  - [x ] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format:\r\nThe file is a .exe file.\r\n**Describe the bug**\r\n\r\nTo put it simple i wrote a simple crack me and cracked it with x64 a couple of hours later i looked into the exe with cutter and cutter did show me instead of the jge , jle , jne that it detected this region of the exe as: \r\n\r\n\" ;-- str.This_is_not_the_right_number:\r\n.string \"\\n This is not the right number \\n\" \r\n\r\n**To Reproduce**\r\n \r\n1. Use this src for the cpp=\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\r\n    int a;\r\n\r\n    int b = 3645;\r\n\r\n    int c = 3452;\r\n\r\n    int d = 3546;\r\n\r\n    // \"right\" number is 10643\r\n\r\ncout << \"please enter a number\";\r\n\r\ncin >> a;\r\n\r\ncout << \"your number is\" << a ;\r\n\r\nif(a > b+c+d)\r\n\t{\r\n\t\tcout<< \"\\n This is not the right number \\n\";\r\n\t}\r\n\r\nif(a < b+c+d)\r\n\t{\r\n\t\tcout<< \"\\n This is not the right number \\n\";\r\n\t}\r\n\r\nif(a == b+c+d)\r\n\t{\r\n\t\tcout<< \"\\n This is not the right number \\n\";\r\n\t}\r\n\r\n}\r\n\r\n2. compile the src with mingw w64:\r\n\r\nhttps://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/installer/mingw-w64-install.exe/download\r\n\r\n3. search for the strings : \r\n\r\nplease enter a number\r\n\r\nyour number is\r\n\r\nThis is not the right number\r\n\r\n**Expected behavior**\r\n\r\nThe expected behavior is that it will output this gibberish:\r\n\r\n;-- section..rdata:\r\n0x00404000      add     byte [rax + 0x6c], dh ; [02] -r-- section size 4096 named .rdata\r\n0x00404001       ;-- str.please_enter_a_number:\r\n0x00404001          .string \"please enter a number\" ; len=22\r\n0x00404017       ;-- str.your_number_is:\r\n0x00404017          .string \"your number is\" ; len=15\r\n0x00404026      add     byte [rax], al\r\n0x00404028       ;-- str.This_is_not_the_right_number:\r\n0x00404028          .string \"\\n This is not the right number \\n\" ; len=33\r\n\r\ninstead of:\r\n\r\nfor example:\r\n\r\n\r\n00000000004015C8 | 39C2 | cmp edx,eax | edx:EntryPoint, eax:EntryPoint\r\n-- | -- | -- | --\r\n00000000004015CA | 7D 13 | jge cuttertest.4015DF | \u00a0\r\n00000000004015CC | 48:8D15 552A0000 | lea rdx,qword ptr ds:[404028] | rdx:EntryPoint, 0000000000404028:\"\\n This is not the right number \\n\"\r\n\r\n\r\n\r\n\r\n**Screenshots**\r\n\r\nboth:\r\n\r\nhttps://imgur.com/a/JvsGQXX\r\n\r\nx64 dbg:\r\n\r\nhttps://imgur.com/ck6hPP4\r\n\r\ncutter:\r\n\r\nhttps://imgur.com/U26IJpi\r\n\r\n\r\n**Additional context**\r\n\r\nHopefully this is not a misunderstanding and i am missing something :) anyway hopefully this cleared up. So i was missing something. Works like a charm now :) maybe you guys could add a tooltip or something for reversing noobs like me.\r\n\r\nAnyway thank you ITAYC0HEN i can now switch from x64 dbg to cutter i am happy now.\r\n\r\nThank you clearing this up and i hope you have a nice week.\r\n\r\nhttps://imgur.com/a/9XTo4tS  What if we make a 3rd repo \"cutter-docs\" that has all the written docs and includes the regular cutter repo as a submodule.\r\nEvery master push to it re-generates the html docs and pushes it to cutter.re.\r\nAnd every push to master on cutter updates the submodule on cutter-docs. It might work too if the sphinx generation process is moved from cutter's ci to cutter.re. However I think it should be possible to generate the documentation locally without cloning the website repo since by itself it has nothing to do with it.  It sets the filename of the desktop file, so it gives a precise info of\r\nwhat desktop entry should be used for this application by the windowing\r\nsystem.\r\n\r\n**Detailed description**\r\nThe problem is that in Wayland (on Fedora 31) for some reasons the Icon of the main window does not work anymore. From reading around, it seems on wayland the app itself is not responsible anymore for setting that, but it is the window manager (or something) that does it. By setting the DesktopFileName you ensure that the window manager does not need to guess the relationship app <-> desktop file and it magically fix the icon issue as well.\r\n\r\n**Test plan (required)**\r\n\r\nI tested this on Fedora 30, both on Gnome on Xorg and Gnome on Wayland. Before the icon was working only on Gnome on Xorg, with this fix it works on Gnome on Wayland as well. I'm not sure of how this behaves on Windows or other systems though.\r\n\r\nBefore:\r\n![before](https://user-images.githubusercontent.com/562321/73854679-2cc71d00-4833-11ea-8c29-298105b71b6b.png)\r\n\r\n\r\nAfter:\r\n![after](https://user-images.githubusercontent.com/562321/73854684-2f297700-4833-11ea-818a-dca3b3bc53f1.png)\r\n\r\n Imho it looks way better without the icon\n\nSent from my iPad\n\n> On 5 Feb 2020, at 16:24, Itay Cohen <notifications@github.com> wrote:\n> \n> \ufeff\n> Looks very good, well done! :)\n> thank you <3\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n > Imho it looks way better without the icon\r\n\r\nThe thing is that the icon is not even displayed while doing alt-tab, which is very annoying. I believe the travis error is just an infrastructure problem. Yeah thats a good reason for the fix, but it looks ugly in the titlebar\n\nSent from my iPad\n\n> On 5 Feb 2020, at 16:59, Riccardo Schirone <notifications@github.com> wrote:\n> \n> \ufeff\n> Imho it looks way better without the icon\n> \n> The thing is that the icon is not even displayed while doing alt-tab, which is very annoying.\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n @radare Could you be more specific about what you consider ugly? The fact icon is displayed in \"title bar\" in general? (I assume you meant the one next to Activities not actual titlebar which is part of window) . Or do you not like how Cutter icon is rendered compared to other title bar icons: size, bad blurry scaling, not using simplified single color icon like other system programs? I am not fully convinced that always setting `setDesktopFileName` regardless of cutter packaging kind is correct thing to do. How does it work with Appimage, do desktop environemnts know how to search for desktop file inside appimage?\r\n\r\nI tried it with regular dev build. Icon didn't show up, not surprising because desktop had no way of knowing anything about Cutter desktop file. There was also a negative effect Cutter name in some parts of desktop showed as org.cutter.Cutter instead of Cutter. After installing additional cutter from my OS repository , icon started to show for the devbuild. That isn't exactly harmful, but can there be some negative sideffects wrong using wrong desktop file? Good points @karliss ! Thanks. Actually, I may be able to solve the issue I have just by changing the name of the desktop file from `org.radare.Cutter.desktop` to `Cutter.desktop`. In this way it seems it automatically detect the right desktop file without having to change the cutter code. I'm going to close this as I found a way to make it work on Wayland as well without the need to change cutter's code. Thanks all. But isn't `org.radare.Cutter.desktop` the 'standard' from freedesktop?\r\nSee https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html \"File naming\" and \"Desktop File ID\". In theory, I would say yes, but I can see on my Fedora system there are more than one application that just use the simple name (e.g. `gnome-search-panel.desktop` instead of `org.gnome.gnome-search-panel.desktop`, etc.). Maybe it's because of this issue with Wayland, I'm not sure. The weird thing is that by using `org.radare.Cutter.desktop` it does work on Xorg, but not on Wayland.  **Environment information**\r\n* Operating System: Linux\r\n* Cutter version: 1.10.0\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: Not applicable - bug is in a core Cutter UI action\r\n\r\nUpstream dependency Qt fixed a bug in `QNetworkReplyHttpImplPrivate::_q_startOperation()` that can be triggered in Cutter.\r\n\r\nIn the Cutter console log, the following debug message is reported:\r\n```\r\nQNetworkReplyHttpImplPrivate::_q_startOperation was called more than once QUrl(\"https://api.github.com/repos/radareorg/cutter/releases/latest\")\r\n```\r\n\r\nUpdating Cutter's Qt dependency to >= 5.12.2 will resolve this.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to 'Help' top-menu item, then click on 'About' sub-menu item\r\n2. Click on 'Check for updates' button in the modal window\r\n4. See error in console log\r\n\r\n**Expected behavior**\r\n\r\nNo debug message issued by Qt dependency.\r\n\r\n\r\n**Screenshots**\r\n\r\nn/a\r\n\r\n\r\n**Additional context**\r\n\r\nSee upstream Qt bug report: https://bugreports.qt.io/browse/QTBUG-72463\r\n Confirmed fixed with [cutter v1.11.0](https://github.com/radareorg/cutter/releases/tag/v1.11.0)  **Environment information**\r\n* Operating System: Windows 10\r\n* Cutter version: 1.10.1\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: None\r\n\r\n**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nCutter 1.10.1 crashes when editing a theme. See crash dump attached.\r\n[Cutter_crash_dump_03.02.20_23.33.51.dmp.zip](https://github.com/radareorg/cutter/files/4150572/Cutter_crash_dump_03.02.20_23.33.51.dmp.zip)\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n\r\n0. Open Cutter (no file required)\r\n1. Go to Edit->Preferences\r\n2. Click on Appearance\r\n3. Select any theme\r\n4. Create a  copy of the theme\r\n5. Edit it\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nTheme edition menu should appear. Works on 1.10.0 from release,  **Environment information**\r\n* Operating System: Parrot OS 4.7\r\n* Cutter version: 1.10.1 (pull from git 02022020)\r\n* Obtained from:\r\n  - [x] Built from source\r\n\r\n* File format:\r\n\r\n**Describe the bug**\r\n\r\nCmake failed to detect valid version of shiboken2 to compile the project. \r\n```\r\nCMake Error at /usr/share/cmake-3.15/Modules/FindPackageHandleStandardArgs.cmake:137 (message):\r\n  Could NOT find Shiboken2 (missing: SHIBOKEN_LIBRARY SHIBOKEN_INCLUDE_DIR\r\n  SHIBOKEN_BINARY) (found suitable version \"5.13.2\", minimum required is\r\n  \"5.12\")\r\n```\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. clone cutter\r\n2. compile with\r\n```\r\ncd cutter/src\r\nmkdir build\r\ncmake -B build -DPYTHON_CONFIG_SUFFIX=\".cpython-38\r\nm-x86_64-linux-gnu\" -DCUTTER_ENABLE_PYTHON=on -DCUTTER_ENABLE_PYTHON_BINDINGS=on\r\ncmake --build build\r\n```\r\n\r\n**Expected behavior**\r\n\r\nCmake should  accept version > 5.12\r\n\r\n\r\n**Screenshots**\r\n\r\n![Screenshot at 2020-02-02 15-14-53](https://user-images.githubusercontent.com/29118926/73605267-c80b8880-45ce-11ea-99d0-f6abb5fb00ec.png)\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n Turned out it was incompatible python version. After changing to python3.7, i'm having this error\r\n```\r\nCMake Error in CMakeLists.txt:\r\n  Imported target \"PySide2::pyside2\" includes non-existent path\r\n\r\n    \"/usr/lib/include/PySide2\"\r\n\r\n  in its INTERFACE_INCLUDE_DIRECTORIES.  Possible reasons include:\r\n\r\n  * The path was deleted, renamed, or moved to another location.\r\n\r\n  * An install or uninstall procedure did not complete successfully.\r\n\r\n  * The installation package was faulty and references files it does not\r\n  provide.\r\n\r\n```\r\nThe actual path of PySide2 is in `/usr/include/PySide2` I had this issue\r\n\r\nMy way to get past this was matching builds of Qt and shiboken2\r\n\r\nI'm on osx 10.15.2. I tried to compile Cutter with Qt 5.14.1 and needed to compile PySide2 5 14.1 on my system first. Then Cutter would build with `python3 setup.py install --qmake=/Users/USER/Qt/5.14.1/clang_64/bin/qmake`  It works, but segfaults on close  **Environment information**\r\n* Operating System:\r\nUbuntu 20.04 GNOME\r\n* Cutter version:\r\n80c21280391dd01a897513b6d2255020884c650e\r\n* Obtained from:\r\n  - [x] Built from source\r\n  - [ ] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format:\r\nexecutable\r\n\r\n**Describe the bug**\r\nWhen executing `./build/Cutter`, an error occurs: ./build/Cutter: error while loading shared libraries: libr_socket.so.4.2.0-git: cannot open shared object file: No such file or directory.\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\nFollow all building instructions.\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nSuccessfully open cutter window.\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n```\r\n$ ldd build/Cutter\r\n\tlinux-vdso.so.1 (0x00007ffe0b0e3000)\r\n\tlibQt5Svg.so.5 => /usr/lib/x86_64-linux-gnu/libQt5Svg.so.5 (0x00007fb05afbe000)\r\n\tlibQt5Network.so.5 => /usr/lib/x86_64-linux-gnu/libQt5Network.so.5 (0x00007fb05adfd000)\r\n\tlibQt5Widgets.so.5 => /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5 (0x00007fb05a764000)\r\n\tlibQt5Gui.so.5 => /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5 (0x00007fb05a17e000)\r\n\tlibQt5Core.so.5 => /usr/lib/x86_64-linux-gnu/libQt5Core.so.5 (0x00007fb059c37000)\r\n\tlibr_core.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_core.so.4.2.0-git (0x00007fb05997b000)\r\n\tlibr_config.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_config.so.4.2.0-git (0x00007fb059970000)\r\n\tlibr_cons.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_cons.so.4.2.0-git (0x00007fb059940000)\r\n\tlibr_io.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_io.so.4.2.0-git (0x00007fb0598b7000)\r\n\tlibr_util.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_util.so.4.2.0-git (0x00007fb0597a0000)\r\n\tlibr_flag.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_flag.so.4.2.0-git (0x00007fb059794000)\r\n\tlibr_asm.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_asm.so.4.2.0-git (0x00007fb058bc1000)\r\n\tlibr_debug.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_debug.so.4.2.0-git (0x00007fb058b67000)\r\n\tlibr_hash.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_hash.so.4.2.0-git (0x00007fb058b58000)\r\n\tlibr_bin.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_bin.so.4.2.0-git (0x00007fb058998000)\r\n\tlibr_anal.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_anal.so.4.2.0-git (0x00007fb058696000)\r\n\tlibr_parse.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_parse.so.4.2.0-git (0x00007fb058627000)\r\n\tlibr_bp.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_bp.so.4.2.0-git (0x00007fb05861f000)\r\n\tlibr_egg.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_egg.so.4.2.0-git (0x00007fb058607000)\r\n\tlibr_reg.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_reg.so.4.2.0-git (0x00007fb0585f9000)\r\n\tlibr_search.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_search.so.4.2.0-git (0x00007fb0585f0000)\r\n\tlibr_syscall.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_syscall.so.4.2.0-git (0x00007fb0585e7000)\r\n\tlibr_fs.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_fs.so.4.2.0-git (0x00007fb0585a1000)\r\n\tlibr_magic.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_magic.so.4.2.0-git (0x00007fb05858b000)\r\n\tlibr_crypto.so.4.2.0-git => /mnt/wdb/github/cutter/src/build/Radare2-prefix/lib/libr_crypto.so.4.2.0-git (0x00007fb05855b000)\r\n\tlibstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007fb05836d000)\r\n\tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fb05821e000)\r\n\tlibgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007fb058204000)\r\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fb058013000)\r\n\tlibz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007fb057ff7000)\r\n\tlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fb057fd2000)\r\n\tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fb057fcc000)\r\n\tlibGL.so.1 => /usr/lib/x86_64-linux-gnu/libGL.so.1 (0x00007fb057f38000)\r\n\tlibpng16.so.16 => /usr/lib/x86_64-linux-gnu/libpng16.so.16 (0x00007fb057f00000)\r\n\tlibharfbuzz.so.0 => /usr/lib/x86_64-linux-gnu/libharfbuzz.so.0 (0x00007fb057e09000)\r\n\tlibicui18n.so.63 => /usr/lib/x86_64-linux-gnu/libicui18n.so.63 (0x00007fb057b2e000)\r\n\tlibicuuc.so.63 => /usr/lib/x86_64-linux-gnu/libicuuc.so.63 (0x00007fb05795c000)\r\n\tlibpcre2-16.so.0 => /usr/lib/x86_64-linux-gnu/libpcre2-16.so.0 (0x00007fb0578e1000)\r\n\tlibdouble-conversion.so.3 => /usr/lib/x86_64-linux-gnu/libdouble-conversion.so.3 (0x00007fb0578cb000)\r\n\tlibglib-2.0.so.0 => /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0 (0x00007fb0577a3000)\r\n\t/lib64/ld-linux-x86-64.so.2 (0x00007fb05b5d4000)\r\n\tlibr_socket.so.4.2.0-git => not found\r\n\tlibr_lang.so.4.2.0-git => not found\r\n\tlibr_socket.so.4.2.0-git => not found\r\n\tlibr_socket.so.4.2.0-git => not found\r\n\tlibGLX.so.0 => /usr/lib/x86_64-linux-gnu/libGLX.so.0 (0x00007fb05776d000)\r\n\tlibGLdispatch.so.0 => /usr/lib/x86_64-linux-gnu/libGLdispatch.so.0 (0x00007fb0576b0000)\r\n\tlibfreetype.so.6 => /usr/lib/x86_64-linux-gnu/libfreetype.so.6 (0x00007fb0575f3000)\r\n\tlibgraphite2.so.3 => /usr/lib/x86_64-linux-gnu/libgraphite2.so.3 (0x00007fb0575c6000)\r\n\tlibicudata.so.63 => /usr/lib/x86_64-linux-gnu/libicudata.so.63 (0x00007fb055bd5000)\r\n\tlibpcre.so.3 => /lib/x86_64-linux-gnu/libpcre.so.3 (0x00007fb055b61000)\r\n\tlibX11.so.6 => /usr/lib/x86_64-linux-gnu/libX11.so.6 (0x00007fb055a23000)\r\n\tlibxcb.so.1 => /usr/lib/x86_64-linux-gnu/libxcb.so.1 (0x00007fb0559f8000)\r\n\tlibXau.so.6 => /usr/lib/x86_64-linux-gnu/libXau.so.6 (0x00007fb0559f2000)\r\n\tlibXdmcp.so.6 => /usr/lib/x86_64-linux-gnu/libXdmcp.so.6 (0x00007fb0559ea000)\r\n\tlibbsd.so.0 => /usr/lib/x86_64-linux-gnu/libbsd.so.0 (0x00007fb0559d0000)\r\n```\r\nI see libr_socket.so.4.2.0-git and libr_lang.so.4.2.0-git pointing to nothing, however there exist those 2 libs in build/Radare2-prefix/lib. So I excute `../radare2/env.sh build/Radare2-prefix`, or simply `export LD_LIBRARY_PATH=build/Radare2-prefix/lib`, then Cutter can be successfully opened. This is a known issue caused by combination of the way r2 build scripts works and default linker flags on latest Ubuntu versions. See the second part under troubleshooting section https://cutter.re/docs/building.html#troubleshooting . @eagleoflqj were you able to solve the issue?  I'm quite new to cmake (and cutter, too), otherwise I'd open a pr ASAP. @eagleoflqj \r\nHi mate, I'm running the latest ubuntu 1910, but can't build from source.\r\n\r\nSometimes it's shiboken version not met, require 5.12, but I don't know where to install 5.12. apt only support 5.11, and pip.\r\n\r\nHow did you managed to build it?\r\n\r\nWould you like to write your history here? @mr-m0nst3r \r\nI used a fresh ubuntu 1910 VM, apt update and upgrade, then exactly followed the instruction. I don't have shiboken installed at all. I've been looking into this and have been able to successfully build Cutter on Ubuntu 20.04 by adding a few additional packages in apt: `sudo apt install build-essential cmake meson libzip-dev zlib1g-dev qt5-default libqt5svg5-dev qttools5-dev qttools5-dev qttools5-dev-tools libmagic-dev libgvc6 libgraphviz-dev libkf5syntaxhighlighting-dev python3-setuptools liblz4-dev libcapstone-dev libssl-dev libxxhash-dev libuv1-dev` \r\n\r\nClone from git and recurse submodules: `git clone --recurse-submodules https://github.com/radareorg/cutter`\r\n\r\nThen as radare2/cutter developers have documented, cd into the cutter directory and: `cmake -S src -B build -DCUTTER_USE_BUNDLED_RADARE2=\"ON\" -DCMAKE_EXE_LINKER_FLAGS=\"-Wl,--disable-new-dtags\"`, and finally, `cmake --build build`\r\n\r\nThen you can run cutter with: `./build/Cutter`  Looks good! Thanks :)\r\n  **Environment information**\r\n* Operating System: ubuntu 19.10\r\n* Cutter version: 1.10.0\r\n* File format: elf64\r\n * Arch: x86\r\n * Type: EXEC (Executable file)\r\n\r\n**Describe the bug**\r\nwhen editing several instructions (ex:pop) using new registers (r8 to r15) give incorrect bytes\r\n\r\n**To Reproduce**\r\n1. open an elf64 file in write mode\r\n2. go to disassembly tab\r\n3. right click an address/instruction\r\n4. click edit > instruction\r\n5. type pop r14\r\n6. window gives \"5f\" actual instruction is \"415e\" \r\n7. if ok is pressed the incorrect bytes are persisted\r\n8. on console type rasm2 -a x86 -b 64 \"pop r14\" for correct bytes\r\n\r\n**Expected behavior**\r\nbytes on edit window mach bytes given by rasm2\r\n\r\n**Screenshots**\r\n![Screenshot from 2020-01-13 17-25-23](https://user-images.githubusercontent.com/42013194/72290105-41950400-362b-11ea-97aa-9bc74f03c31a.png)\r\n![Screenshot from 2020-01-13 17-36-21](https://user-images.githubusercontent.com/42013194/72290113-43f75e00-362b-11ea-8805-a3523d589779.png)\r\n\r\n\r\n**Additional context**\r\nperhaps 32 interpretation is taking precedence over 64 ?\r\nas a workaround you can use rasm2 on console and use edit bytes\r\n affected instructions(will add as i see) :\r\nsub \r\npop\r\ntest found out that you can solve this by setting a diferent assembler like this:\r\ne asm.assembler =x86.as\r\n Thank you for reporting! That's still an issue though. We can't expect the user to change the assembler :)\r\nI'll re-open this  yeah also i found instructons that dont work regadles of asembler such as\r\nmovsx rcx, byte [rbx + rdx]\r\non deafult asembler: 0fbe0b\r\nnasm as and nz report as invalid\r\n\r\nrasm2 gives correct byes\r\n rasm2 -a x86 -b64 \"movsx rcx, byte [rbx + rdx]\"\r\n480fbe0c13\r\n Thank you for these examples!\r\nDo you have experience with radare2? If so, can you try to reproduce each of the behaviors you experience using radare2? When you do, we can transfer this issue to the r2 repository to pass it to the radare2 devs to check. I'm not sure i understand what you mean by reproducing on radare !\r\nusing the integrated console from Cutter and using radare2's asm (aka rasm2) gives correct byes as i described \r\nrasm2 -a x86 -b64 \"movsx rcx, byte [rbx + rdx]\"\r\n480fbe0c13\r\nso as far as I can tell this is a cutter only issue\r\nif you want my take on it what is probably happening is an code completion issue where my input is first passed to an code completion function that does not recognize the new registers and replaces it with what it assumes to be the correct instruction.\r\nsee on the picture how it stops complaining even tough the instruction is not complete\r\n![Screenshot from 2020-03-30 18-05-06](https://user-images.githubusercontent.com/58748067/77962255-af0f1300-72b1-11ea-9d56-6d6868632053.png)\r\n\r\nif i put :\r\n rasm2 -a x86 -b64 \"movsx rcx, byte [r\" \r\non the console i  still get an error :\r\nCannot assemble 'movsx rcx, byte [r' at line 3\r\nbut on the edit window i suddenly receive bytes :0fbeff\r\nif i continue typing to the the end it gives :0fbe0b\r\nwhich equates to :movsx ecx, byte [rbx]\r\nso i believe something is tampering with the string before it gets to rasm2 in cutter i think a quick fix without losing functionality would be to first to send input to rasm2 and only if it complains send to the auto complete module and then back to rasm2 \r\nthis wouldn't fix the problem that autocomplete is out of date/out of sync with rasm2 but at least would keep it from propagating to valid inputs I have no idea what the autocomplete modules or commands from radare2 would be or even if they exist or are cutter only if some one would clue me in i could try to reproduce on radare2  **Environment information**\r\n\r\n* Operating System:\r\nwindows 10\r\n* Cutter version:\r\nthe newest release\r\n* Obtained from:\r\n  - [*] Downloaded from release\r\n* File format:\r\npdb and dll\r\n**Describe the bug**\r\nchrome_child 73 with pdb can not finish analysis\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n![image](https://user-images.githubusercontent.com/5463104/72202258-33fb4500-3498-11ea-86a6-ca138b97374e.png)\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n Most likely a radare2 issue. Could you please try with the plain radare2?  Two options would be nice for the graph bitmap export:\r\n\r\n- Allow users to provide a scaling factor >= 100% that increases the size of the exported image\r\n- Add an option that allows using a transparent background instead of the UI background color\r\n\r\nI'll try to come up with a PR as soon as i have some time for it Sure, I'm quite busy atm unfortunately so if you want to give it a go, please do :) \n\n\n\n-----Original Message-----\nFrom: NIRMAL MANOJ C <notifications@github.com>\nTo: radareorg/cutter <cutter@noreply.github.com>\nCc: ps <pschmied@mailbox.org>, Author <author@noreply.github.com>\nSent: Sat, 29 Feb 2020 18:56\nSubject: Re: [radareorg/cutter] Add graph bitmap export options (#1998)\n\nCan I take up this issue? Asking because I can't see any PRs in the past 1 month.\n\n-- \nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/radareorg/cutter/issues/1998#issuecomment-592974207 I was trying to understand this codebase playing around making minor changes. Now I am going to write a PR. There is one modification that I will be making and I doubt if it would affect any other functionality of the program.\r\n\r\nIn _GraphView::saveAsBitmap(QString path, const char *format)_ in _widgets/GraphView.cpp_, QImage is given the format of '_Format_RGB32_', however from what I have understood from the documentation and various articles, this format does not support transparency. So can I use _Format_ARGB32_ instead?\r\nThe line 403 (current)\r\n`QImage image(width, height, QImage::Format_RGB32);`\r\nwill be changed to \r\n`QImage image(width, height, QImage::Format_ARGB32);` @karliss  I couldn't find any problem caused by making this particular change. But making sure. There are some other modifications also which I think would not matter much like adding two more parameters to the _saveAsBitmap_ function. @karliss  I have finished the parts for adding scaling factor and transparency as arguments to the function. Currently I am thinking about various options to make the dialog.\r\nCan I do the following, or do you want me to make in any particular way?\r\n1. Once user clicks save after selecting the extension as png/jpeg(bitmap), a popup dialog comes.\r\n2. User can select transparency (checkbox) and scaling factor (QDoubleSpinBox) .\r\n3. Then graph gets saved as per the options user selected.\r\n\r\nI am actually confused whether I should make a seperate class to make a custom dialog like this or should I try adding this into the _MultipleFileSaveDialog_ that is being called when the **Export Graph** is clicked.\r\n\r\nEdit:By MultiplyFileSaveDialog, I mean adding a transparent png/jpg to the list. But this will look very weird and I haven't even tried thinking more along this idea. \r\n\r\nI just want to know if making a popup dialog every time the user tries to save a graph bitmap is okay. @karliss I have finished this task almost completely. Following points explain what I did.\r\n\r\n**Functionalities added:**\r\n- Edit -> Preferences -> Disassembly-Graph, user can choose if they want the exported bitmap image to be transparent or not. [Checkbox]\r\nAt the same location, there is Double SpinBox using which user can select the scaling factor (>=100% to 30000%). The maximum being 30000% is pure arbitrary choice that I made as a factor even as large as 30000% is not useful for any situations I could think of. This can be increased if needed, but I don't think there is a point.\r\n- Normal export, if the user selects the extensions png/jpg (bitmap), this will export with the given scaling factor. If the option transaparent is selected, png export will be transparent. **Note : jpg doesn't support transparency** So if a user select transparent for a jpg export, by default the background will be black. \r\n- In a session, if a user selects the scaling factor and transparency for the exported bitmap images once, it will remain so as long they are in the current session. User can change this at any point if they want.\r\n\r\n**Changes made to code and additions.**\r\n\r\n- [ **Doubt if this is against the standard followed in cutter** ] : Defined two variables **_double bitmapGraphExportScale_** and **_bool bitmapGraphExportTransparency_** in _common/Configuration.h_ using the **extern** keyword and initialized this in _common/Configuration.cpp_.\r\n\r\nThese variables store the details about how much graph should be scaled while exporting and if it should be transparent or not.\r\n\r\n- Made _getter_ and _setter_ functions for _bitmapGraphExportScale_ and _bitmapGraphExportTransparency_ in Configuration.cpp.\r\n\r\n- In _dialogs/preferences/GraphOptionsWidget_ made a checkbox for transparency and double spinbox for scaling factor.\r\n\r\n- When changes are made to the transparency and/or spinbox, call the respective setter function in _Configuration.cpp_ to update the value of transparency and/or spinbox.\r\n\r\n- In _src/widgets/Graphview.cpp,_ changed the function definition of _saveAsBitmap_ from \r\n`void void saveAsBitmap(QString path, const char *format = nullptr)`\r\nto\r\n`void saveAsBitmap(QString path, const char *format = nullptr, double scaler = 1.0, bool transparent = false);`\r\nThe file saved by the _saveAsBitmap_ functions is according to the scaling factor and transparent [or not] option selected by the user.\r\n\r\n- In _src/widgets/DisassemblerGraphView.cpp,_ in function _DisassemblerGraphView::exportGraph_ two variables are assigned the current value of both _bitmapGraphExportScale_ and _bitmapGraphExportTransparency_. These variables are passed arguments if the graph is exported in bitmap format.\r\n\r\n**Changes and additions I doubt if I should make**\r\n\r\n1. Making the background for the transparent export as jpg white instead of black.\r\n2. Making the popup dialog to choose scaling factor and transparency after clicking save [ in bitmap format ] everytime, along with don't repeat this dialog option. @karliss \r\nWill definitely create a PR for future issues that I will work on rather than making such a detailed description of code changes in Issue. Thanks for telling me this,\r\n\r\n> Instead of white or black you could ignore the transparency option\r\n\r\nThis was also an option, I will change code for this and then create a PR. Forgot to mention here, I had made a PR https://github.com/radareorg/cutter/pull/2089 a few hours ago.  **Environment information**\r\n* Operating System: Arch Linux\r\n* Cutter version: 1.10\r\n* Obtained from:\r\n  - [ ] Built from source\r\n  - [x] Downloaded from release\r\n  - [ ] Distribution repository\r\n* File format: AppImage\r\n\r\n**Describe the bug**\r\n\r\nWas trying to debug embedded firmware running on an stm32 via st-link.\r\nIt crashed when connecting to the remote gdb server provided by `st-util`.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open binary\r\n2. Connect to remote gdb server provided by `st-util`\r\n3. See error\r\n\r\n**Expected behavior**\r\n\r\nNo crash\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/8845940/71638010-6d3fe380-2c54-11ea-9304-fa3c102f00f0.png)\r\n\r\n**Additional context**\r\n\r\n[dump.zip](https://github.com/radareorg/cutter/files/4013791/dump.zip)\r\n\r\n Thanks for reporting this issue!\r\n\r\nLooking at the crash dump, Cutter attempted to refresh all functions after the firmware image was rebased and crashed in r2 while listing function variables. I couldn't reproduce the issue after connecting to an ARM qemu with a linux kernel image from buildroot, didn't emulate the exact same CPU as STM32 though.\r\n\r\nSome steps that you can take to help us look into this:\r\n* Run gdbserver provided by st-util with `--remote-debug` (if it's available) and send the output - this will print all the remote commands from and to Cutter and will help determine if something is missing on that level\r\n* Share the firmware image or a similar one. Do you think that it will work in qemu-stm32? Last time I checked most peripheries weren't implemented so I am not sure if serial debugging would be exposed but I can try. Can also just run it in a regular qemu-arm with the same architecture and see what happens.\r\n* Try to open the firmware image in radare2, analyze it and then use `e cfg.debug=true; oodf gdb://ip:port` to connect to gdbserver and see if it works.\r\n* Find a way to debug with the gdbserver on your system, maybe something is missing in st-link's implementation I can get a crash with gdb  on desktop using hello world executable:\r\n* `gdbserver :1234 ./a`\r\n* connect to gdbserver using Cutter\r\n* Continue\r\n* Program has exited -> Ok\r\n* Click the red square button -> crash\r\n\r\nCan't repeat it anymore, maybe I did something not included in the steps above. The reported issue mentions instantly crashing after connect and from the stacktrace it seems that the crash is related to the fact that the target is ARM. Should make a separate issue for crashing after stop, can't reproduce either. Hi @ForsakenHarmony :) Thanks for reporting this to us.  If possible, can you please follow the steps suggested by @yossizap so we will be able to troubleshoot it better?\r\nWe would be happy to fix crashes as soon as possible\r\nThank you very much! @ITAYC0HEN I get the same result with debugging armv9 executable on linux with gdb server.\r\n\r\nWill try to give you more info about it Sorry I haven't had time to try again so far Hmm, I can't reproduce it on the machine I'm on right now (different one than where I originally tried it), or it was fixed in 1.10.1  One more option for reasonable behavior is the matching position after rebase. I meant the same position as before debugging ended. It might not work as well as I thought as position is already bad when program exits before you stop debugging.  Probably font propagation again. It would nice to figure out cleaner way of dealing with than making sure we reload fonts after widget gets added to parent or parent font is changed.\r\n\r\nOnly slightly related but we should probably use `QFontDatabase::systemFont(QFontDatabase::FixedFont)` as default fixed size font when Cutter settings are empty.  Some observations\r\n* After waiting a while Cutter ended up in md5_sse_transform function which consists of single gigantic basic block. That could trigger a worst case scenario in an algorithm not expecting blocks that large. Seeking to this function directly was slow, but not as slow, there might  be other parts causing problem.\r\n* Graph navigation using mouse drag in md5_sse_transform is slow, but becomes faster when zooming out and text isn't rendered. Probably need to improve rendering code so that it directly calculates which line is first one inside screen without iterating over all of them. Shouldn't be too difficult.\r\n* How does cutter ends up there when double clicking on reference to string?\r\n* I added some breakpoints and loadCurrent graph seems to be triggered more than once when doing single seek. > How does cutter ends up there when double-clicking on reference to string?\r\n\r\nR2 reports that there are two Data xrefs from 0x1157, this can be easily confirmed using xrefs widget. Second one is to \":(\" string, but first one which is used for double click is to `sym.md5_sse_transform+34551\"=0x00009ea6.\r\n\r\nAt least one of the causes for loadCurrent graph called twice is overview widget. That could be optimized as we are copying a bunch of data from main graph view anyway, might as well reuse more of it. Looks like there are 3 problems:\r\n* Weird xref at 0x1157 reported by r2\r\n* Jumping to function with gigantic basic block is slow\r\n* Some of the work when jumping to function is done multiple times exaggerating previous problem 2x13 s spent updating graph out of which 98% is inside `agJ`. The variable substitution in r_parse_varsub->parse_x86_pseudo.c:varsub builds and iterates over the list of all function variables for each instruction. So the total complexity is at least `number_of_instructions * number_of_function_variables`, possibly worse if some non trivial operation is performed for each of the variables. Instruction analysis already finds what variables are referred in 3 different formats\r\n* src/dest\r\n* opex\r\n* var - looks like it can currently contain reference to single variable, probably can be extended to \r\n\r\nThe most realistic approach for improving performance is to use or extend one of the mechanisms above for creating list of only those variables that are used by each instruction and try to do string replacement only for those. \r\nIn ideal case it would be done directly in assembly printer directly or by having assembly printer generated annotations indicating which range of string refers to what. Doesn't seem like capstone supports that and r2 shouldn't try to implement it's own assembly printer from instruction description.  **Environment information**\r\n* Operating System: Ubuntu 19.04 VM\r\n* Cutter version: 1.10 AppImage\r\n* Obtained from: \r\n  - [x] Downloaded from release\r\n* File format: ELF64\r\n\r\n**Describe the bug**\r\n\r\nI am working on a 10 Mb binary file.\r\nWhen I save the project the newly created rc file is ~36Mb\r\nWhen attempting to open the project again cutter freezes and attempt to force quit due to unresponsiveness.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open a 10Mb ELF64 file\r\n2. Save the project.\r\n3. Attempt to open the saved project.\r\n4. cutter freezes\r\n\r\n**Expected behavior**\r\n\r\nCutter is expected to open the project/\r\n\r\n**Additional context**\r\n\r\nI really like cutter ^^ I find it amazing. I really hope this functionality will work properly.\r\n It is know that current project implementation is quite problematic. New project saving mechanism is currently being written from zero. Gotcha thank you.  `Built from source` should include r2 and cutter git hashes   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n* Convert breakpoint widget to AddressableItemWidget\r\n* When selecting multiple breakpoints and pressing delete key delete all of them\r\n* Allow toggling breakpoint trace and active properties by doublicking them in table\r\n\r\n**Test plan (required)**\r\n\r\n* start debuging\r\n* Create a few breakpoints\r\n* doubleclick a breakpoint in breakpoint widget, make sure seek works\r\n* rightclick an item in breakpoint widget,  it should contain actions from AddResableItem widget, and toggle, delete actions.\r\n   * test at least one AddressableItemWidget action using menu and keyboard shortcut\r\n   * test that toggle using space and menu works\r\n* test that deleting single breakpoint works (using menu, button, keyboard)\r\n* test that deleting multiple selected breakpoints work\r\n\r\nPart2\r\n* start debuging\r\n* create 3 breakpoints\r\n* disable first one by double clicking \"active\" column\r\n* enable trace mode for second breakpoint by double click in trace column\r\n* verify that breakpoint state reported by `dbj` matches previous actions\r\n* resume executable by pressing continue\r\n* make sure debugger stops on third breakpoint and printed trace message for second one\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Observed issues**\r\nChanging trace property for first breakpoint doesn't work. Due to r2 sharing logic for handling address and index argument in db command. Need to create an issue for that.\r\n\r\nWhen breakpoint is disabled it is still triggered and printed in console, but automatically continued. Not sure if this is intended behavior or not. I expected disabled breakpoint not to be triggered at all. What happens when it has command asigned?\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Test plan completed. 1. It is triggering a full reload which causes loss of focus. It shouldn't be difficult to avoid that.\r\n\r\n2.I don't think it's necessary.  x64dbg doesn't ask either.\r\n\r\n> weird. Do you know if the memory is changed to int3`CC`? because if so, it is problematic\r\n\r\nI think they do. All the other mechanisms that I can think of for them being triggered and printed in console would be even worse.\r\n\r\n\r\n\r\n @yossizap Keyboard shortcut ambiguity needs to be fixed. What other widgets did you have opened?\r\n\r\nAs for additional suggestions they are more or less in the spec. >What other widgets did you have opened?\r\n\r\nDefault debug widgets + processes + flags. Seems that closing flags solved the issue.  **Environment information**\r\n* Operating System: Any\r\n* Cutter version: 1.10\r\n* File format: Any\r\n\r\n**Describe the bug**\r\n\r\nSettings currently contains \"Show jump lines (asm.lines)\" option. Since Cutter has it's own mechanism for drawing them this option currently does nothing.\r\n\r\n**Expected behavior**\r\n\r\nOne of the two:\r\n* Show jump lines affects jump lines drawn by Cutter\r\n* Show jump lines option is removed from Cutter settings @karliss what do you think? I suggest to enable it by default (r2 already does it for us) and remove from preferences I am fine with removing the option and leaving it to r2 default value except in widgets where we need to override it.   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n* Make sure graph cache is reenabled\r\n\r\nEnvironments:\r\n* Linux + qt wayland :heavy_check_mark: \r\n* Linux + xcb backend :heavy_check_mark:  slightly blurry, probably qt+xwayland limitation\r\n* Windows  - :heavy_check_mark: \r\n* macOS - :heavy_check_mark: \r\n\r\nThings to test:\r\n* Test with two displays one with scaling factor 1 other 2 or 1.5 if supported by OS. Scaling factor set in OS display configuration for each monitor.\r\n* After dragging to other screen try changing global scaling factor (ctrl++, ctrl+- with focus in disassembly widget)\r\n* In graph right click inside and outside block, context menu content should change\r\n* Zoom using mousewheel, zoom should focus to mouse cursor position\r\n* Text size in context menu and top menu bar should match the scaling in properly scaled system software like file browser\r\n* text size relative to button size shouldn't change when switching between screens\r\n* hexwidget drawing isn't broken\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\nCloses #1825, closes #1959\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n dukeBarman said that on macOS it works. There are some issues with zoom shortcut handling, but that's a separate problem. Yeap, I've created a issue https://github.com/radareorg/cutter/issues/1966  **Environment information**\r\n* Operating System: Win 10\r\n* Cutter version: 1.10.0\r\n* File format: PE\u00a032\r\n\r\nI got the following issue when trying to debug a exe with a space in the folder path \r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n![image](https://user-images.githubusercontent.com/1728186/71309216-a6cb5000-2405-11ea-8acd-bf21fefbe66e.png)\r\n\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. open a file on your desktop having a space in your folder\r\n2. Click on debug\r\n4. See error\r\n\r\n Well even without spaces... an dll the root of the drive c:\u00a0it give the same issue ( without the space naming issue )..\r\n\r\nIt's only a display issue. it's occurs when trying a debug a pe DLL. (bad habit from x86dbg... ) :) \r\n That would be appropriate since dlls can't be executed in Cutter atm  **Environment information**\r\n* Operating System: Windows10 [Version 10.0.18362.535]\r\n* Cutter version: 1.10\r\n* File format: PE/DLL x64\r\n\r\n**Describe the bug**\r\n\r\nRight click options don't produce any results\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Right click Add comment or / set immediate base\r\n\r\n**Expected behavior**\r\n\r\nRight click options works\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/1408600/71306798-5cd27200-23e5-11ea-9cdd-66a49908b104.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1408600/71306799-5f34cc00-23e5-11ea-8ffd-6cc853e0fc15.png)\r\n\r\nand\r\n\r\n![image](https://user-images.githubusercontent.com/1408600/71306802-63f98000-23e5-11ea-8502-101a3cda44d6.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1408600/71306804-66f47080-23e5-11ea-8713-91e0d4cf0239.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1408600/71306811-7c699a80-23e5-11ea-86f3-b05e6e6d39ac.png)\r\n\r\n\r\nvia @Th4nat0s Damn... reopened, cannot reproduce, ill try\r\n Can't reproduce @Th4nat0s did you experience this issue again? I couldn't reproduce Hey @Th4nat0s , I still can't reproduce it. I will close this issue for now, please let us know if it happen again - thank you! :)   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n1. delete Cutter.in\r\n2. open Cutter 1.9\r\n3. open Cutter with fix\r\n4. observe that threads and process widgets are not opened\r\n5. switch to debug mode\r\n6. make sure its possible to open thread and process widgets\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\nCloses #1941\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n @yossizap Did you do the step 1? I you have saved a config with new widgets opened they will not be removed.  **Test plan**\r\nSpecify `-F something` with and without `-A something` and see if the format is used. Help is automatically generated by Qt:\r\n![Bildschirmfoto vom 2019-12-19 09-32-16](https://user-images.githubusercontent.com/1460997/71157547-7e472880-2242-11ea-9c10-ffaf127ca61d.png)\r\n\r\nI think that should generally be enough for users who start Cutter from the command line with extra args.  **Describe the solution you'd like**\r\nAdd the option to color code highlights in the hexdumps (like it is possible to highlight blocks in the graph view).\r\n\r\n**Additional context**\r\nThis is a helpful tool for RE. I'm not the best with UI design but I tried showing what I was thinking about... \r\n\r\nIf you select a portion of the hexdump you can right click and be presented with the color picker. \r\n\r\nThis would set the background of the font in the hexdump to the chosen color.\r\n![image](https://user-images.githubusercontent.com/58829864/71408099-e7f57700-2634-11ea-8ba8-a323166ce4d9.png)\r\n What I think that hexdump should support multilevel/nested highlights. Basically to allow the multiple parts of the hexdump to be highlighted, these areas can overlap and be nested, and the colors should be mixed properly whenever these areas overlap.\r\nLong time ago I was working on the bvi fork called [bvim](https://github.com/XVilka/bvim) with the ability to be scripted with Lua and programmatic highlight/selection creation:\r\n- https://github.com/XVilka/bvim/blob/refactor/scripts/test.lua#L25 \r\n- https://github.com/XVilka/bvim/blob/refactor/bscript.c I think the feature to highlight (an un-highlight) with different colors should be also available from the plugins and Python API.\r\n\r\n![image](https://user-images.githubusercontent.com/203261/76513379-2c085300-6491-11ea-8684-f43cf3866f08.png)\r\n\r\n![image](https://user-images.githubusercontent.com/203261/76513351-23b01800-6491-11ea-903f-69fac1a549f0.png)\r\n  The new docks fall into this category.\r\n\r\nhttps://github.com/radareorg/cutter/blob/78c6e651c825f6625037708299ec9a9aa48fbec4/src/core/MainWindow.cpp#L674-L675\r\n\r\n  Removing `;` will work but I can't say anything about code injection. Can I just convert instructions to opcode first and then use `wx` ? First, try to verify whether command injection is even possible there (usually I add `; ?E hello world` to test if something is printed to the console and means that command injected. If it is not a problem, then everything works :)  Can I work on this issue? I'm thinking of implementing `af- @ <offset>; af @ <offset>` and maybe also a shortcut key for this.  >Intuitively, where will the user search for their desired widget?\r\n\r\nI am used to searching the windows menu for toggleable windows and the debug menu for debug actions that aren't shown in the toolbar. I would prefer having the same menu in both, if that's possible. I don't mind having window toggles in \"Debug\", but I do want to keep every window toggleable from \"Windows\". No objections against having it in both assuming it is as simple as I think it is. I like the way it is currently. Debugging windows are under windows, debugging actions are under debug. It makes sense to me. If it implies code duplication, yes I am against it. It takes 3 lines that I already wrote no code duplication. Should I make PR?  **Environment information**\r\n* Operating System: Linux\r\n* Cutter version: 59af77fb7272765b3d50e0af6067e036e4d4e93b\r\n* File format: ELF\r\n\r\n**Describe the bug**\r\n\r\nTriggering breakpoint with secondary thread causes UI to freeze.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. compile test program `g++ -o a a.cpp -pthread`\r\n2. open test executable\r\n3. start debugging\r\n4. insert breakpoint in thread_func\r\n5. continue\r\n6. observe main thread gets stopped\r\n7. try switching to one of secondary threads - observe that gui freezes\r\n\r\n**Expected behavior**\r\n\r\nGUI doesn't freeze.\r\n\r\nWhen breakpoint gets triggered by a thread cutter switches to thread that triggered it.\r\n\r\n**Additional context**\r\n\r\nTest program\r\n```\r\n#include <thread>\r\n#include <iostream>\r\n\r\nvoid thread_func() {\r\n    int64_t counter = 0;\r\n    while(true) {\r\n        ++counter;\r\n        if (counter%10000000000LL == 0) {\r\n            std::cout << counter << \"\\n\";\r\n        }\r\n    }\r\n}\r\n\r\n int main() {\r\n    std::thread t1(thread_func);\r\n    std::thread t2(thread_func);\r\n    t1.join();\r\n    t2.join();\r\n}\r\n```\r\n\r\n\r\n Looked at the stacktraces. One thread is stuck in linux_select -> linux_stop_thread waiting for thread to stop. Not sure what happens to Qt event loop. My initial guess was one of the GUI updates is waiting for r2 lock which is blocked by task doing waitpid but I didn't saw any threads with Qt event loop in stacktrace. Repeating it second time I saw what I expected GUI trying to refresh information waiting on r2 lock, task thread waiting for debugged thread to stop. Can a thread be stopped if it is already stopped due to other reasons? Small note: tested and this doesn't happen in windows.\r\n\r\nThanks for debugging and trying to reproduce the issue!\r\n\r\n> Can a thread be stopped if it is already stopped due to other reasons?\r\n\r\nYou are supposed to be able to queue multiple signals. You'll have SIGSTOP and SIGTRAP waiting for the debugging process to handle. Not sure why it doesn't receive any one of those..\r\n\r\n>linux_select\r\n\r\nSo it does try to switch to the breakpoint. I remember this working while we were working on the ThreadsWidget so it must be some regression due to attach changes. Yeah, this is probably specific to Linux native debug backend. I just noticed `dbg.threads: Stop all threads when debugger breaks (see dbg.forks)` option which is false by default.\r\nI wonder how can it work reliably without stopping all threads when breakpoint is hit and user/debugger is poking process memory and changing breakpoints while some of the threads are running.  Didn't notice any difference after enabling it but there might be more than one problem. >I wonder how can it work reliably without stopping all threads when breakpoint is hit \r\n\r\nYep, and dbg.threads is only in use in windows debug. Another issue is that unless dbg.trace_clone is enabled the debugger won't even attach after clone and configure a new thread. I started working on a refactor before the release and didn't have time since, should finish it by this weekend.   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n![Screenshot default](https://user-images.githubusercontent.com/7101031/70868239-698b3c00-1f87-11ea-87da-350a57b322b5.png)\r\n![Screenshot resized](https://user-images.githubusercontent.com/7101031/70868245-7019b380-1f87-11ea-9926-da1aa18fe3f4.png)\r\n\r\n**Closing issues**\r\n\r\n\r\nCloses #1922 \r\n\r\n\r\n  **Detailed description**\r\n\r\nThe sizes in formatBytes were wrong which meant that wrong sizes were displayed and it caused a crash when seek was set to UT64_MAX.\r\n\r\n**Test plan (required)**\r\n\r\nSee that Cutter doesn't crash after:\r\n\r\n-Start debuging ls\r\n-Click continue until process exits\r\n-Click \"View/Refresh contents\"\r\n\r\nor do step 3 while continue is still in progress\r\n\r\n**Closing issues**\r\n\r\ncloses #1925  >but if Ubuntu 16.04 won't support it, then I'd rather fix it.\r\n\r\nSounds like we should fix it for now  **Environment information**\r\n* Operating System: Arch Linux\r\n* Cutter version: 59af77fb7272765b3d50e0af6067e036e4d4e93b\r\n* File format: ELF\r\n\r\nI compiled cutter using the [instruction](https://cutter.re/docs/building.html) with cmake.\r\n\r\nI tried to analyze [ret2win 64 bit binary](https://ropemporium.com/challenge/ret2win.html) but it crashes after I try to seek to a function.\r\n\r\nerror:\r\n\r\nqt.qpa.xcb: QXcbConnection: XCB error: 8 (BadMatch), sequence: 4633, resource id: 83886280, major code: 130 (Unknown), minor code: 3\r\n\r\n![cutter-crash](https://user-images.githubusercontent.com/43200867/70854533-0a5cf700-1eb5-11ea-836c-5cb56da60f3f.gif) I tried to recompile cutter with the latest build (using cmake) (64371bb07a250101c829ca590005194db3756449) and now it doesn't crash  **Environment information**\r\n* Operating System: Linux\r\n* Cutter version: 59af77f\r\n* File format: ELF\r\n\r\n**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Start debuging\r\n2. Right click a line and toggle breakpoint using context menu\r\n3. Use arrows or j/k to confirm that disassembly window has keyboard focus\r\n4. Try adding breakpoint using F2 - observe that it doesn't get added\r\n\r\n\r\n**Expected behavior**\r\n\r\nShortcut for toggling breakpoint indicated in context menu works.\r\n\r\n\r\n The same problem affects graph window. Can't reproduce. Works for me in graph and disassembly view, Ubuntu 18.04. I will recheck this later this evening, maybe it requires opening certain set of widgets. Everything is fine. I had pressed f-lock.  **Detailed description**\r\n\r\nPreviously, you could search in boundaries that weren't properly configured in debug mode and freeze Cutter. That also meant previously typed searches(most types) would freeze Cutter when debug started.\r\n\r\n**Test plan (required)**\r\n\r\nSearch in all available categories when in and out of debug mode.\r\n   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n#1771 \r\nImplemented extended menu of strings for the Disassembler widget with:\r\n-Autodetection method\r\n-Remove current defined string\r\n-Define string by address, size, type\r\n\r\nUsed \"ps <addr>\" for the string size prediction.\r\n\r\n**Test plan (required)**\r\n![image](https://user-images.githubusercontent.com/5008234/70783760-09ee2000-1d3e-11ea-9d21-906170d1fdea.png)\r\n![image](https://user-images.githubusercontent.com/5008234/70785018-c9db6d00-1d3e-11ea-9755-f3fd46514d0e.png)\r\n![image](https://user-images.githubusercontent.com/5008234/70785216-04dda080-1d3f-11ea-85a0-de1c465a15e1.png)\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Will it be ready for the upcoming release? It's up to @Properrr, I think there is only a few function to document and that's it :-) @XVilka @xarkes Do I need to add more comments?  **Is your feature request related to a problem? Please describe.**\r\n\r\nBy now, all header files won't be installed into system path (like `/usr/include` for example) so if any plugin has to compile the source code, it needs Cutter source code (the whole project code)\r\n\r\n**Describe the solution you'd like**\r\n\r\nInstall headers in `/usr/include` or whatever system has so plugins can use the headers to compile the source (as same as current radare2 i believe)\r\n**Describe alternatives you've considered**\r\n\r\nDebian packaging should set the `libradare2-cutter-dev` or something like that for the header\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n I also need this to package r2ghidra cutter plugin in Fedora. I may try to fix this issue in the next days. @ret2libc Note that currently there is no proper install target for cmake. So it's a bit more work than adding headers to the list of file that need to be installed.  > I also need this to package r2ghidra cutter plugin in Fedora. I may try to fix this issue in the next days.\r\n\r\nHi ret2libc.By now you can package r2ghidra by copying 5 folders in Cutter source code into r2ghidra and generate building rules. \r\nSource code folders\r\n![Screenshot at 2020-02-08 15-15-09](https://user-images.githubusercontent.com/29118926/74081838-d1d93400-4a85-11ea-9d70-05bdd8b669c3.png)\r\nMy compile flags (i am building for Parrot OS - debian base)\r\n![Screenshot at 2020-02-08 15-16-15](https://user-images.githubusercontent.com/29118926/74081857-fdf4b500-4a85-11ea-99a6-ff2fd26af6bd.png)\r\n  **Detailed description**\r\n\r\nUp until now only a part of the widgets were rebased, primarily by accident because they connected to seekUpdated or refreshCodeView. This change covers all relevant widgets(Tell me if I missed something) except for Search which needs fixing on r2's level and would freeze with this change.\r\n\r\n**Test plan (required)**\r\n\r\n- Start native/remote/attach debug on any PIE binary and check the following for each widget(Functions, Breakpoints, Strings, Flags, Comments, Segments, Sections, Headers, Exports, Imports, VTables, Classes and Relocs):\r\n    - All offsets seem to be correct\r\n    - If the text is selectable see if it sends you to the correct position in the code\r\n    - If you can create it before debug see if it is properly rebased afterwards and between sessions (breakpoints[have to do it manually through the widget if you're not in debug mode but you can check if it works between sessions], comments)\r\n- Try those things across different sessions and see that everything stays the same between/after debug\r\n\r\n**Notes**\r\n\r\n- SearchWidget can't be updated this way without freezing Cutter, shouldn't be critical for this issue. We'll just add it's rebasing once search works in debug.\r\n- Classes widget only rebases the member functions - r2 issue\r\n- ELF header symbols aren't rebased - r2 issue\r\n\r\nIf it's some random info window and it isn't rebased just report it and we'll submit issues in r2 to fix it later, it doesn't really matter since people don't jump to ELF header properties while debugging. The important widgets that must work are Functions, Strings, Breakpoints, Flags and Comments.\r\n\r\n**Related issues**\r\nCloses #1053   **Detailed description**\r\nThis PR resolves #444 by implementing instruction highlighting in disassembly view. Behaviour is the same as in graph view(#1879).\r\n![2019-12-11-02-29-11](https://user-images.githubusercontent.com/8948436/70583688-c9b46380-1bbe-11ea-8d66-b915a571630f.gif)\r\n\r\n**Test plan (required)**\r\n1. Disassembly Widget correctly calculates size of instructions\r\n2. Highlighted instructions are properly synchronized between multiple widgets.\r\n\r\n**Closing issues**\r\ncloses #444\r\n\r\n// Edit\r\nI don't know why #444 was closed, #1879 implemented highlighting in graph view without disassembly. #444 also requested highlighting in disassembly. Very nice.\r\nBut please add supports of highlighting through python script.   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n#1887 \r\nWhen Enter is pressed while the user's cursor is on a potential location (flag, function, address, ...), Cutter will jump to this location. Similarly to what it does with double click.\r\n\r\n\r\n**Test plan (required)**\r\n\r\n![alt text](https://i.makeagif.com/media/12-10-2019/5TE1La.gif)\r\n\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\ncloses #1887 \r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Hello, thanks for the PR!\r\nIt would be great to also implement this for the graph view, maybe it is worth checking the code here https://github.com/radareorg/cutter/blob/master/src/widgets/DisassemblerGraphView.cpp#L1004 and  deduplicate the logic and put it in the `CutterSeekable` class?\r\n @xarkes I think that should be another PR. I have an idea how to implement cool navigation with a keyboard in the GraphWidget.  As you can see, it's been two weeks now that the build is broken.\r\nCheck the build log here: https://pastebin.com/S5mD2uSq\r\n\r\nFrom what I understand, radare2 failed to compile inside Docker because it failed to include this file: `p/native/linux/linux_debug.c:43:10: fatal error: bits/sigcontext.h: No such file or directory\r\n43 | #include <bits/sigcontext.h>`\r\n\r\ncc @ps1337 you might want to take a look at it :) Heyo! I will try to get this fixed until Thursday. \n\nCheers\n\n-----Original Message-----\nFrom: xarkes <notifications@github.com>\nTo: radareorg/cutter <cutter@noreply.github.com>\nCc: ps <pschmied@mailbox.org>, Mention <mention@noreply.github.com>\nSent: Mon, 09 Dec 2019 7:35\nSubject: [radareorg/cutter] Fix DockerHub (#1908)\n\nAs you can see, it's been two weeks now that the build is broken: https://hub.docker.com/repository/docker/radareorg/cutter/builds\n\ncc @ps1337 you might want to take a look at it :)\n\n-- \nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/radareorg/cutter/issues/1908 I've checked this out and it the builds started to break since the r2 submodule has been updated. Building r2 on alpine seems to be broken at the moment (the alpine docker build script of r2 [here](https://github.com/radareorg/radare2/blob/master/sys/docker_build_alpine_image.sh) also doesn't work).\r\n\r\nReplacing `#include <bits/sigcontext.h>` with `#include <signal.h>` in `libr/debug/p/native/linux/linux_debug.c` seems to fix this specific error. However, another one follows:\r\n\r\n```\r\np/native/linux/linux_debug.c:1048:18: error: storage size of 'xstate' isn't known\r\n 1048 |   struct _xstate xstate;\r\n      |                  ^~~~~~\r\np/native/linux/linux_debug.c:1051:24: error: invalid application of 'sizeof' to incomplete type 'struct _xstate'\r\n 1051 |   iov.iov_len = sizeof(struct _xstate);\r\n      |                        ^~~~~~\r\n\r\n```\r\n(I can compile this on arch but not on alpine)\r\n\r\nDoes r2 need a fix here? Hmm probably, @radareorg/r2 might want to check it! This seems to still happen in 4.1.1 release of radare2   Can we remove appveyor from future contributions? To keep all CI stuff at one place on GitHub actions. No significant gain right now but since actions are deeply integrated(Deploy keys, etc.) within the GitHub ecosystem, I see it as a plus if future CI stuff is contained within actions. Okay didn't know about that. I found [an issue](https://github.community/t/performance-on-windows/16984) open for this but no activity. However, I see that current appveyor builds are taking ~27-33 mins, so will the GHA be slower than that? I also see some repos reporting little gains in build time but maybe I'll try it out sometime.  The old function was segfaulting when bytecount was too large,\r\nresulting in accessing out of bound array.\r\nQt 5.10 introduced QLocale::formattedDataSize that will do the\r\nsame job. Ah damn, Ubuntu 16.04 uses Qt 5.5 (https://packages.ubuntu.com/xenial/qt5-default) which doesn't have the `formattedDataSize` function yet. Well I'm not in favor of keeping this function, but if Ubuntu 16.04 won't support it, then I'd rather fix it. Superseded by #1928   **Detailed description**\r\n\r\nPrepare the debug branch for release.\r\n\r\n**Test plan (required)**\r\n\r\nAll of the current features were already tested in their original PRs.\r\n Did you meant \"should not be squashed\"? I think that we'll be ready to merge once #1919 is merged. Might do another PR for small fixes soon but it could also be merged into master.  Should be ok now. You probably stayed at the windbg debug interrupt point so seekUpdated didn't happen when you switched. >I put a breakpoint after the fork, and for some reason the child process is marked as Zombie.\r\n\r\nThe child is really a zombie, check ps. The reason for the child's death is that the breakpoint is left at that address and the child hits it as well, without anyone tracing it to handle the signal. Placing a breakpoint a bit later will work, will try to solve it on r2's side.\r\n\r\n>If I double click on it, it says it's not possible to switch to that process, however the Processes widget is stuck as well as the debug toolbar.\r\n\r\nFixed that in debug dialogs PR, there was a race condition in async tasks that acts the way you described. Try again? Breakpoints immediately after forking should be ok now.  Switched to a named pipe(Can't use a regular pipe in the current architecture), your code sample will work now. Any other usage of stdin should work well since the fifo emulates stdin completely.\r\nstd::getline behaves slightly differently from getline(3) so this went unnoticed. Thanks, looks good to me!  **Environment information**\r\n* Operating System: Arch Linux\r\n* Cutter version: Cutter-v1.9.0-x64.Linux.AppImage\r\n* Dependencies : I removed all radare2 packages from the system, to see how it goes with what's in the appimage\r\n\r\n**Describe the bug**\r\n\r\nWhen saving a project and re-opening it, the ghidra decompiler parser no longer works (\"Failed to parse JSON from r2ghidra\")\r\n\r\n**To Reproduce**\r\n\r\nUse the app image, save a project, reopen it, and try to use the decompiler.\r\n\r\n**What I think the problem is**\r\n\r\nI think I have found a cause for this problem, as well as a functioning workaround until a fixe is made. When saving the project, the rc file has the following line :\r\n\r\n`\"e r2ghidra.sleighhome = /tmp/.mount_CutteryMD9MD/usr/share/radare2/plugins/r2ghidra_sleigh\"`\r\n\r\nGiven that the plugins seem to be temporarily mounted, when restarting cutter the path may have changed, giving my error.\r\n\r\n**Workaround**\r\n\r\nI simply remove that line from the rc project file (`sed -i '/ghidra.*home/d' rc` is enough)\r\n\r\n**Side note**\r\n\r\nI'd like to thank everyone who has been working on this marvelous project, which is now even better now with the implementation of ghidra's algorithms. Many hugs to y'all ! :) I have the same problem on arch linux, but instead of \"Failed to parse JSON from r2ghidra\" I get \"// Ghidra Decompiler Error: No sleigh specification for x86:LE:64:default\".\r\n\r\nThe solution is the same as the one found by @lazytanuki:\r\n\r\n`sed -i '/ghidra.*home/d' rc`\r\n\r\nI tried from cutter version 1.10.1 to 1.10.3 and they have all this problem   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n* Test what happens with large amount of history items\r\n* Make sure that long press and right click opens menu\r\n* Test that jumping > 1 step works\r\n* Test jump target in forward and backward direction matches label\r\n![native](https://user-images.githubusercontent.com/7101031/69677428-9eecea00-10ab-11ea-953c-63b92064db90.png)\r\n\r\n\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n![light](https://user-images.githubusercontent.com/7101031/69677440-a3b19e00-10ab-11ea-9c7b-5cfbfb2c022a.png)\r\n![dark](https://user-images.githubusercontent.com/7101031/69677448-a6ac8e80-10ab-11ea-885d-c123a3898050.png)\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\nCloses #1617\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Minor known issues\r\n* Arrows don't look great in non native theme. Probably the same problem as debug button had. I would be nice to keep square shape.  :heavy_check_mark:  fixed \r\n* R2 entry for current position at the end of history is somewhat inconsistent. Sometime but not always it has address 0x00000000.\r\n* After opening Cutter redo history is not empty, weird.\r\n Some seek history fixes radareorg/radare2#15516 Was able to repeat non-empty redo with plain r2 and `aaa`, will create an issue for that. I don't think it's worth adding a workaround on cutter side now as it doesn't interfere much and most people will not notice it.  With the merge of DbgEng support locally on Windows systems and renaming the URI schemes, please see the [updated WinDbg chapter of Radare2 book](https://book.rada.re/debugger/windbg.html) for the user cases on how to use and how it should look:\r\n- https://github.com/radareorg/radare2/pull/17340\r\n- https://github.com/radareorg/radare2/pull/17491  **Environment information**\r\n* Operating System: Parrot OS 4.7 amd64\r\n* Cutter version: 1.9.0 pulled 23/11/2019\r\n* File format: ELF\r\n\r\n**Describe the bug**\r\nStrings widget shows invalid characters (nothing can be read)\r\n![Screenshot at 2019-11-23 17-26-51](https://user-images.githubusercontent.com/29118926/69477266-ad6ea380-0e16-11ea-9e44-fe3e313c8970.png)\r\n\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open Cutter with auto analysis\r\n2. See the bug in Strings widget\r\n\r\n**Expected behavior**\r\nRegular strings like normal\r\n\r\n\r\n**Additional context**\r\n- R2 output still shows characters / strings correctly\r\n- R2 updated to 23/11/2019\r\n![Screenshot at 2019-11-23 17-28-11](https://user-images.githubusercontent.com/29118926/69477273-bc555600-0e16-11ea-9609-ee3adf9e728f.png)\r\n- Dissasm widget shows text correctly\r\n![Screenshot at 2019-11-23 17-28-11](https://user-images.githubusercontent.com/29118926/69477274-c4ad9100-0e16-11ea-97e7-8e285511eb2b.png)\r\n- Seems like the bug happens after 9/11/2019 (It happened to me from patch 16/11/2019 and 23/11/2019 (latest) )\r\nBuild flags `-DCUTTER_ENABLE_QTWEBENGINE=true -DCUTTER_ENABLE_GRAPHVIZ=true -DCUTTER_ENABLE_KSYNTAXHIGHLIGHTING=on`\r\n   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\nThis is so that it's easier to identify on the hexdump which bytes/values changed after a write if they are in view, especially useful when debugging.\r\n\r\nI had to make some changes so that I could check if the old buffer contains the offset to be compared, so some issues may arise because of that, but in my testing I couldn't find any.\r\n\r\n**Test plan (required)**\r\n - Making sure Hexdump still behaves ok:\r\n    - Scroll between block read aligned boundaries (0x1000)\r\n    - Scroll to the start/end of file, make sure it doesn't crash or wrap around\r\n\r\n - Test highlighting when changes occur:\r\n    - Write to area that hexdump is showing, notice the highlighting\r\n    - Scroll once, the highlight disappears\r\n    - Write to area that hexdump is showing again, only the changed bytes get highlighted\r\n    - Write to area that hexdump is not showing, nothing changes\r\n    - Enter emulation mode (with a binary)\r\n    - Seek to the stack in the hexdump (and unsync it)\r\n    - Step and notice the highlighting when something is written to the stack that is different from the previous value, highlight disappears when scrolled/stepped again\r\n    - Make sure it also works in all formats (float, int, hex, octal)\r\n\r\n  **Detailed description**\r\nAs #444 mentions it would be nice to have instruction highlighting in graph view/disassembly. I have implemented instruction highlighting in graph view. To implement this i have used BasicBlock API.\r\nTwo new entries were added to graph view context menu 'Highlight Instruction' and 'Unhighlight Instruction' whose work analogously to 'Highlight block' and 'Unhighlight block'.\r\nIt's important to note that currently breakpoint color takes priority over manual highlight. I don't know if it's a good choice.\r\nDefault color is set to 'linehl' from radare2 color keys.\r\n![gif](https://user-images.githubusercontent.com/8948436/68881988-85908900-070e-11ea-9c5e-051c8caf9dc6.gif)\r\n\r\n\r\n**Test plan (required)**\r\n1. Set as ... dosen't remove highlight\r\n2. highlight color changes when line is selected\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\nOne step closer to closing #444.\r\n\r\n I'm not sure about part with mutual class, but separation of BasicBlockHighlighter and InstructionHighligter sounds good to me. It could hold additional information about size of instruction, this could be handy. I have added BasicInstructionHighlighter and BasicInstruction, and also updated instruction highlighting with it.  Please add \"Go to the end of file\" In Disassembly window. I think it would be handy, especially when you have to \"Set to Data\" a couple of bytes from defined position to the end of a file. Also would be great if you implement this idea to \"Set to Data\" itself. For instance when user does not set number of items, then it should mean from \"Start address\" to the end of a file or implement a separate radio button for this in \"Set to Data\" window  <img width=\"802\" alt=\"\u622a\u5c4f2019-11-12\u4e0a\u53488 51 19\" src=\"https://user-images.githubusercontent.com/56018598/68632466-99c76100-0529-11ea-98d0-c2493dd3f44d.png\">\r\nIn this picture, the return of 0x100000f1c should be returned to main, but returned to 0x00000000\r\n<img width=\"1351\" alt=\"\u622a\u5c4f2019-11-12\u4e0a\u53488 54 14\" src=\"https://user-images.githubusercontent.com/56018598/68632588-05113300-052a-11ea-83f4-3d1b341f7518.png\">\r\nHow can I fix this? I tried to write the following code in c language.\r\n<img width=\"465\" alt=\"\u622a\u5c4f2019-11-12\u4e0a\u53489 42 42\" src=\"https://user-images.githubusercontent.com/56018598/68634543-cdf25000-0530-11ea-88fc-6285785a1762.png\">\r\nThe above picture is the result of decompilation.\r\nthen I simulated the instruction to 0x100000f47 to jump to the f1 function, which is 0x100000ef0, step by step simulation, reached the \u2018return\u2019 of 0x100000f1c, and then should it return the instruction of 0x100000f4c?\r\n but it jumped to 0x00000000  @GustavoLCR @pelijah @a1ext might help you with WinDbg testing. Double checked commit, submodule updated and did a clean build by deleting build folders as didn't compile otherwise.\r\nSystem - ArchLinux with Qt 5.13.2. Tried running it in a debugger. Looks like it somehow gets resolved as ipv4 address 0.0.4.210. Doing `ping 1234` also tries to ping 0.0.4.210. Entering 0.0.4.210 directly also causes it to get stuck.\r\n![ip_1234](https://user-images.githubusercontent.com/7101031/68331800-45158780-00de-11ea-9364-838e0079c98e.png)\r\n Left it in background and it timed out and got an error after a few minutes. @ITAYC0HEN LGTM. Just need to update r2 submodule again to include a fix for `oj`. > @GustavoLCR did you have a chance to test with windbg? Need to know whether I should set it up on my own machine\r\n\r\nJust tested it. Attaching works, reading regs and mem as well, but cutter will hang if I ask it to single-step, breaking after continuing also doesn't work, and cutter will freeze if i try to do anything while it's continuing. But I think most of it is problems on r2 side. By the way, just for the reference, the issues are marked related to debugging in radare2 are located here:\r\n- [Cutter Debugger Project](https://github.com/radareorg/radare2/projects/18)\r\n- [Debugger Project](https://github.com/radareorg/radare2/projects/4)\r\n- [Record&Replay Project](https://github.com/radareorg/radare2/projects/25) Connect window with cancel button also hangs. Looks like GUI thread gets stuck waiting for r2 lock while updating breakpoints in graphview. \r\n\r\n<details><summary>Stacktrace</summary>\r\n\r\n``` python\r\n1   pthread_cond_wait * *GLIBC_2.3.2                                                                           0x7ffff4c86c45 \r\n2   r_th_cond_wait                                                              thread_cond.c             39   0x7ffff737fec6 \r\n3   task_wakeup                                                                 task.c                    343  0x7ffff7687343 \r\n4   r_core_task_sleep_end                                                       task.c                    504  0x7ffff7687b0d \r\n5   r_core_sleep_end                                                            core.c                    2331 0x7ffff7629cd7 \r\n6   r_cons_sleep_end                                                            cons.c                    427  0x7ffff749430b \r\n7   RCoreLocked::RCoreLocked                                                    Cutter.cpp                114  0x55555575ffca \r\n8   CutterCore::cmdj                                                            Cutter.cpp                374  0x55555576198f \r\n9   CutterCore::getBreakpoints                                                  Cutter.cpp                1554 0x55555576a07f \r\n10  CutterCore::getBreakpointsAddresses                                         Cutter.cpp                1578 0x55555576a411 \r\n11  DisassemblerGraphView::drawBlock                                            DisassemblerGraphView.cpp 424  0x5555557925c8 \r\n12  GraphView::paint                                                            GraphView.cpp             332  0x55555587a444 \r\n13  GraphView::paintGraphCache                                                  GraphView.cpp             302  0x555555879e25 \r\n14  GraphView::paintEvent                                                       GraphView.cpp             207  0x555555879472 \r\n15  DisassemblerGraphView::paintEvent                                           DisassemblerGraphView.cpp 1223 0x555555797691 \r\n16  QWidget::event(QEvent *)                                                                                   0x7ffff790d096 \r\n17  QFrame::event(QEvent *)                                                                                    0x7ffff79be29f \r\n18  QCoreApplicationPrivate::sendThroughObjectEventFilters(QObject *, QEvent *)                                0x7ffff569ea23 \r\n19  QApplicationPrivate::notify_helper(QObject *, QEvent *)                                                    0x7ffff78c94d4 \r\n20  QApplication::notify(QObject *, QEvent *)                                                                  0x7ffff78d2e11 \r\n... <More>                                                                                                                    \r\n```\r\n</details> \r\nThere is a second thread for r2task doing connect. Yes r2task gets stuck in r_socket_connect the same as in screenshot before. When connecting to nc cancel works. @ITAYC0HEN Please resolve the review if you agree with the changes.\r\n@karliss If everything is now fine for your last comment, I think we can proceed to merging this PR. Timeout is now more reasonable. Was also able to connect to actual gdb server. Rebasing wasn't working properly but that's a job for separate issue.     <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\nUpdate Qt in cutter-deps to latest version - 5.14.2.\r\n\r\n**Test plan (required)**\r\nUsing the release packages on all 3 OS test that\r\n- Cutter opens\r\n- Make sure ssl library is correctly included and update check works\r\n- sample python plugin works\r\n\r\nPlatforms tested\r\n- Linux :heavy_check_mark: \r\n- Windows :heavy_check_mark: \r\n- macOS \r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\ncloses #2118  This doesn't work as well. I have one more idea. Isn't better to target [5.13.2](https://wiki.qt.io/New_Features_in_Qt_5.13) release instead? @XVilka No objections from me. This was initially done to attempt fixing travis macOS build problem so bugfix release was chosen hoping that it will avoid any new problems. Both assumption turned out to be false. Since there is less urgency now, there is time for dealing with problems caused by bigger version change. Although qt 5.12 is a LTS version. I'm marking this for next release :) Updating Qt dependency to at least 5.12.2 will also resolve https://github.com/radareorg/cutter/issues/2051 Good time to merge this one? Seems like @a1ext approved it is working on macOS :)   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  **Is your feature request related to a problem? Please describe.**\r\nI have used cutter to annotated a binary dump to learn to understand what is happening. I would like to be able to export this dump so that I can push it in my git repository.\r\n\r\nAdditionally, the dumped assembly should be able to compile again.\r\n\r\nThe disassembly view already yields almost everything that is needed for this, so being able to export this view would be already extremely helpful.\r\n\r\nI guess this is slightly related to https://github.com/radareorg/cutter/issues/1688  Fixes #1807 \r\n\r\nIs there any something i should edit ? anyways, this is my first contributing :smile: Thank you for the PR.\r\nPlease fill out all the fields from PR template and don't erase parts of it. They are there for a reason. Having a proper description and having it consistent makes it easier to reviewer PR and allow developers to give you feedback faster. What's the reason for marking this issue as draft, did you plan any other changes? umm, yes. i plan for other changes, for more stable code :smile: @karliss @ITAYC0HEN Hi! i need help\r\n\r\nMy code looks like this, is this right that you requested more like this ?\r\n\r\n```\r\n    const auto selection = ui->treeView->selectionModel()->selection().indexes();\r\n\r\n    QList<QString> offsets;\r\n    offsets.reserve(selection.size());\r\n    for (const auto &index : selection) {\r\n\r\n        const FunctionDescription &function = functionProxyModel->data(index, FunctionModel::FunctionDescriptionRole).value<FunctionDescription>();\r\n        \r\n        switch (index.column()) {\r\n            case FunctionModel::NameColumn:\r\n                offsets.push_back(function.name);\r\n            case FunctionModel::SizeColumn:\r\n                offsets.push_back(QString::number(function.size));\r\n            case FunctionModel::OffsetColumn:\r\n                offsets.push_back(RAddressString(function.offset));\r\n            case FunctionModel::NargsColumn:\r\n                offsets.push_back(QString::number(function.nargs));\r\n            case FunctionModel::NlocalsColumn:\r\n                offsets.push_back(QString::number(function.nlocals));\r\n            case FunctionModel::NbbsColumn:\r\n                offsets.push_back(QString::number(function.nbbs));\r\n            case FunctionModel::CalltypeColumn:\r\n                offsets.push_back(function.calltype);\r\n            case FunctionModel::EdgesColumn:\r\n                offsets.push_back(QString::number(function.edges));\r\n            case FunctionModel::FrameColumn:\r\n                offsets.push_back(QString::number(function.stackframe));\r\n        }\r\n    }\r\n    QString information = offsets.join(\", \");\r\n    auto clipboard = QApplication::clipboard();\r\n    clipboard->setText(information);\r\n```\r\nbut when copying after `function.name` it doubled copy, what should i do ? Hello @malwareslayer, will you have some time to update your PR?  **Environment information**\r\n* Operating System: Linux\r\n* Cutter version: Cutter-v1.9.0-x64.Linux.AppImage\r\n* File format: arm32 little\r\n\r\n**Describe the bug**\r\nWhen opening the registers view, the values do not fit into the edit box. Worse, when resizing the pane, the edit boxes stay the same size, while the pane grows.\r\n\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/1245341/67371617-f2d05480-f57c-11e9-81fe-d26b690c9223.png) @oliv3r Are you running Cutter on high DPI monitor or otherwise increased scaling factor? Size of some other elements also doesn't look right. Yes and no;\r\nI took this screenshot while I was indeed on a 4k HiDPI 200% scale screen. When I connect my external monitors however, I run at 100% scale, but change the resolution of my laptop screen. Cutter on the normal monitor then looks quite big and has the same problem. I am not restarting the application in between however. ping @oliv3r :)  I can't reproduce after the modifications. I'll close it for now. Feel free to re-open it if you are experiencing it again.\r\n :)  **Detailed description**\r\n\r\nAs #1848 describes, the Cutter interface freezes when executing commands. This happens because those r2 commands are called with cmd() directly instead of the AsyncCommand class. R2 expects the user to send a signal using the keyboard for it to exit *_dbg_wait similarly to gdb so it isn't an issue there. \r\n\r\nThis PR offers a solution that uses the AsyncCommand class, atm there's only support for regular debugging to get your feedback but I plan on adding this feature to emulation as well, can also be handy with other slow commands.\r\nThe commands calling AsyncCmd are responsible of disabling the debug toolbar(and possibly other things as well in the future) and connecting to the finished() event(decided not to go with passing callbacks to AsyncCmd since it's too messy and QSharedPointer take care of setting the asynctask pointer to NULL once all clients are done with their logic).\r\n\r\nThere also needs to be a some kind of \"Suspend\" button that will stop the async task using a new r2 command/signal.\r\n\r\n**Test plan (required)**\r\n\r\nRun \"continue until main\" twice or just \"continue\" without breakpoints to see that all toolbar buttons are disabled except for stop/restart. Running any of the step commands will momentarily disable the buttons so it's harder to see that it's working.\r\n\r\n**Closing issues**\r\n\r\ncloses #1848  See \"Added AsyncCmd for debug commands\", the other commits are waiting for a merge in a different PR/branch. I'll rebase once it's done. This pull request **introduces 1 alert** when merging 4061925d2e3474810fc2a0e1c2e720b5e810a253 into 91dfe09abef87d38771557507d08aba86dce6dfb - [view on LGTM.com](https://lgtm.com/projects/g/radareorg/cutter/rev/pr-105f798a61d0ef0ad1bd3444489779f90bda4fae)\n\n**new alerts:**\n\n* 1 for Missing return statement I was mislead by r2's output when checking &b on debug commands, you can't actually resume. I am looking into the issue on r2's side. \r\n\r\nEverything else is pretty much as I think it should be in it in it's final form apart from other UX elements that indicate debug task progress and looking into if and how to limit thread switching. Will keep this PR as a draft until it's solved, just note that the suspend button won't actually do anything until &b for debug commands is fixed. The latest version should work well on Linux and some r2 bugs were fixed alongside `&` issues, tested with remote and local.\r\n\r\nWindows is also broken and it might take a while since I am less familiar with it. Would appreciate it if you would test this branch on Mac and provide some feedback on the existing solution now that things seem to be fully working. I see the build is errored, restart it to make sure it's fine on OS X. >show \"suspend\" when program is runnning, show \"Continue\" when program is suspended\r\n\r\nIt does look way better, thanks for the suggestion!  **Environment information**\r\n* Operating System:Darwin 2h0n91i2hendeMacBook-Pro.local 17.7.0 Darwin Kernel Version 17.7.0: Thu Jun 21 22:53:14 PDT 2018; root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n* Cutter version: 1.9.0\r\n* File format: arm\r\n\r\n**Describe the bug**\r\n\r\nChinese commant display occlusion.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/21230213/67291436-1d39f780-f514-11e9-9129-44c7981f75b7.png)\r\n\r\n Can you add example comment that can be copy pasted for repeating the bug? > Can you add example comment that can be copy pasted for repeating the bug?\r\n\r\nI don't think it's necessary to add an example, because copying and pasting sees it is complete.\r\nOnly show half of it in the program. @ZCKun Karliss wants a way to reproduce the bug in his Cutter session. If you provide us that text it would be easier for us to just copy paste it and see why there is a bug.\r\nThanks! > @ZCKun Karliss wants a way to reproduce the bug in his Cutter session. If you provide us that text it would be easier for us to just copy paste it and see why there is a bug.\r\n> Thanks!\r\n\r\nok, I found this bug only in the graph window.\r\n![image](https://user-images.githubusercontent.com/21230213/67398880-efb98080-f5dd-11e9-8a05-4cde7be2ca3f.png)\r\nin graph: \r\n![image](https://user-images.githubusercontent.com/21230213/67398953-0eb81280-f5de-11e9-9bfc-a4de5a117c6e.png)\r\nyou need this? comment: \u79fb\u52a8\r\n\r\n Thanks. Disassembly widget is based on qt text widget which handles text displaying but in graph widget we have to position ourselves. It's not surprising that parts that use higher level builtin functionality deals with special cases better. Couldn't repeat it on my computer. The bug might depend on font, platform(macOS), Qt version.\r\n@ZCKun Did you used the official release? What font did you use? Please test what happens with other fonts and tell us if the result is the same.\r\n\r\n![symbols_fail](https://user-images.githubusercontent.com/7101031/67423946-dca6b080-f5dd-11e9-80af-f098c010c520.png)\r\n > Couldn't repeat it on my computer. The bug might depend on font, platform(macOS), Qt version.\r\n> @ZCKun Did you used the official release? What font did you use? Please test what happens with other fonts and tell us if the result is the same.\r\n> \r\n> ![symbols_fail](https://user-images.githubusercontent.com/7101031/67423946-dca6b080-f5dd-11e9-80af-f098c010c520.png)\r\n\r\nmy font\r\n![image](https://user-images.githubusercontent.com/21230213/67540100-c81a0380-f716-11e9-9d5f-fb34932e3bd4.png)\r\n > Couldn't repeat it on my computer. The bug might depend on font, platform(macOS), Qt version.\r\n> @ZCKun Did you used the official release? What font did you use? Please test what happens with other fonts and tell us if the result is the same.\r\n> \r\n> ![symbols_fail](https://user-images.githubusercontent.com/7101031/67423946-dca6b080-f5dd-11e9-80af-f098c010c520.png)\r\nI changed the font and it looks pretty good.\r\n![image](https://user-images.githubusercontent.com/21230213/67540417-dcaacb80-f717-11e9-9b68-f3bf004e4a67.png)\r\n   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\nThis PR is a first step in implementing \"edit features\" in Cutter. Now it only works with context menu.\r\nNext step is to implement on-type edit and undo, redo commands and commiting changes in io.cache mode (last two can be implemented in this PR).\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n1. Open HexWidget\r\n2. Trigger each edit command\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\ncloses #715 \r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  shall we add cutter here? https://github.com/serhii-londar/open-source-mac-os-apps\r\n\r\nit's a fully fledged macOS app, plus this repo has good visibility. I am not sure how fitting r2 would be for the list. It is a opensource macOS apps list not open source apps list. It seems that most of the apps in list are made in swift or objecective-c and probably targeting only macOS. There are few generic cross-platform opensource apps. That's my opinion, but repository author probably has his own opinion what fits the list.  This PR aims at fixing the default item selection when opening the XRef dialog.\r\nNow when the dialog opens, the first item of the list is opened, and the keyboard arrows can be used to travel through the different items.\r\n\r\nFixes https://github.com/radareorg/cutter/issues/1740  The reason is that the r2 continue commands are called with cmd() instead of the async command handler. Radare expects the user to send a signal using the keyboard for it to exit dbg_wait similarly to gdb, we can emulate this behavior with a button that will stop the currently selected thread by sending a signal to the async handler's pid. Some of the UI has to stay frozen though.\r\n\r\nYou can assign me to this issue, was planning on looking into it.  Here is a new theme I am working on. It's not perfect and I'm very bad at CSS but I think it's a nice first step towards a more pleasant documentation.\r\n\r\n![image](https://user-images.githubusercontent.com/10772605/67117325-b4d0da80-f1e2-11e9-8248-8c82cd9a0779.png)\r\n![image](https://user-images.githubusercontent.com/10772605/67117347-c3b78d00-f1e2-11e9-9767-30aad0cb3b46.png)\r\n\r\nIn the end it should close https://github.com/radareorg/cutter/issues/1317 Sure, feel free :)  **Detailed description**\r\n\r\nAdded a widget that shows thread information and allows thread switching. The r2 update also includes a fix to drrj that caused RegistersWidget to print incorrect register values.\r\n\r\nFor some reason the widget shows up when not in debug mode in window, would appreciate it if you could take a look at it. I followed backtracewidget's and stackwidget's behavior so I am not sure why it would happen.\r\n\r\n**Test plan (required)**\r\n\r\nDebug multi-threaded processes, see that all threads show up and attempt to switch threads using the UI.\r\n\r\nTesting points:\r\n- UI shows the correct position in the disassembly window when switching threads\r\n- Newly created threads are added to the UI\r\n- Thread's data is immediately synced(regs, stack, backtrace, position) when switching without having to step\r\n- ThreadsWidget's UI is cleared after restarting the debugging session\r\n\r\nExample binary(play around with the number of threads and thread_func's content as desired):\r\n```\r\n#include <thread>\r\n\r\nvoid thread_func() {\r\n    int64_t counter = 0;\r\n    while(true) {\r\n        ++counter;\r\n    }\r\n}\r\n\r\n int main() {\r\n    std::thread t1(thread_func);\r\n    std::thread t2(thread_func);\r\n    ...\r\n    t1.join();\r\n    t2.join();\r\n    ...\r\n}\r\n```\r\n**Closing issues**\r\n\r\ncloses #1020 \r\ncloses #1019  >can you please re-write the test-case with a specific example? It would be great if you will even attach a binary and write some short steps so we can test it better.\r\n\r\nI'll update it with a more throughout plan but as for the binary all you need is a variation of\r\n\r\n    #include <thread>\r\n\r\n    void thread_func() {\r\n        int64_t counter = 0;\r\n        while(true) {\r\n            ++counter;\r\n        }\r\n    }\r\n\r\n     int main() {\r\n        std::thread t1(thread_func);\r\n        std::thread t2(thread_func);\r\n        ...\r\n        t1.join();\r\n        t2.join();\r\n        ...\r\n    } Not exactly a problem of this issue, but I wasn't able to get the test program to the point of multiple threads.\r\n* start debugging\r\n* \"Refresh contents\" to update addresses in function widget\r\n* set breakpoint in thread_func\r\n* continue -> no threads, the process got killed? Which system? Make sure you have updated the r2 subrepo and rebuilt everything..\r\n\r\nCompiled with `g++ -O3 -std=c++11 -o main test.c -lpthread`, no issues\r\n\r\n![Untitled](https://user-images.githubusercontent.com/5659696/67148179-041f1580-f28c-11e9-937e-aaace80af247.png)\r\n\r\nBreakpoints only stop the thread in the background, this is an r2 issue that I will try to address. Maybe there's an issue with this behavior.\r\nTo test the widget I reached the thread creation in the main thread each time and then manually switched around. Putting a breakpoint between creating threads and join, somewhat helped. After manually requesting refresh threads appeared. At that point I was able to switch between threads. Looks good only remaining problem is opening outside debug mode. I suggest giving it a few more days and if no one (including me) comes up with a fix or time to investigate it merge it in current state. Right, forgot about debug branch. No more complains except failed Ubuntu 16.04 job. Should be easy to fix. Didn't notice I have used newer Qt methods that weren't available in Qt5.3, hopefully this will fix it.\r\n\r\nRegarding the \"opening outside debug mode\", I'll keep looking into it but I am not really sure why it's not working as intended since everything is properly configured in MainWindow. Would appreciate it if you would look into it as well.  **Detailed description**\r\n\r\nWhen submitting the rename command as `afn newName oldName\\` the function `cmdRaw` surrounds the command in escaped double quotes, so the actual string sent to `_core_cmd_str` is `\"afn newName\\\\ oldName\\\\\\\"`, either intentionally or as a result of a bug this command throws the error `Missing \" in (afn newName oldName\\\\\")` which implies that it is not able to handle the consecutive backslashes at the end of the string. Adding a trailing space allows the command to succeed.\r\n\r\n![rename-with-backslash](https://user-images.githubusercontent.com/6268446/66882004-4dcfdd80-efb8-11e9-8eae-15098e2a4e4e.gif)\r\n\r\n\r\n**Test plan (required)**\r\n\r\n*Test Function rename*\r\n1. Rename a function to a name which ends in a backslash.\r\n2. Attempt a second rename of the function to an arbitrary string.\r\n3. Observe that the second rename doesn't result in an error from core and refreshes properly in the view.\r\n\r\n*Test Variable rename*\r\n1. Rename a variable to a name which ends in a backslash.\r\n2. Attempt a second rename of the variable to an arbitrary string.\r\n3. Observe that the second rename doesn't result in an error from core and refreshes properly in the view.\r\n\r\n**Closing issues**\r\n\r\ncloses #1729 I was going to say that actual problem is in incorrect string escaping and better fix would escaping  `\\` which is what @xarkes  probably meant.  Tricky part is that r2 command parser doesn't support escaping the escape symbol. Not sure if this can be done properly without a fix on r2 side. @karliss When the string is passed in from the rename dialog the backslash is escaped. So the command that gets sent to the r2 command parser is actually this `\"afn newName\\\\ oldName\\\\\\\"` which I believe everything is properly escaped there. When the last escaped backslash is separated from the escaped double quote, then r2 is able to properly parse the command and it appears to handle escaped backslash just fine. `\"afn newName\\\\ oldName\\\\ \\\"` \r\n\r\n@ITAYC0HEN I will look into what it would take on the r2 side to address there.  The issue is in radare2 `cmd.c` in `find_eoq`\r\n\r\n```\r\nstatic char *find_eoq(char *p) {\r\n\tfor (; *p; p++) {\r\n\t\tif (*p == '\"') {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif (*p == '\\\\' && p[1] == '\"') {\r\n\t\t\tp++;\r\n\t\t}\r\n\t}\r\n\treturn p;\r\n}\r\n```\r\n\r\nThe function is intended to allow for escaped double quotes in the command such as `\\\"afn function\\\\\\\"2\\\\\\\" function1\\\"`. The only solution I could come up with is to check for end of string when checking for escaped qoute, of course this breaks down when multiple statements are being parsed. \r\n\r\nI have updated the commit to protect against escaping the end quote in `cmdRaw` rather than for specifically `afvn` and `afn`.\r\n\r\n \r\n\r\n @ITAYC0HEN - I think maybe an issue should be filed against radare2 regarding the problem of ending a command with a backslash mentioned above, but I don't know that there is a trivial solution. Do you foresee any issues with this change as a workaround? I think this will be fixed in the future with the new command parser cc @ret2libc just use the base64 arg for afn (451bc69d13d18a3cca6d417fbc4da5e35154d948) for now\n\n> On 19 Nov 2019, at 09:09, xarkes <notifications@github.com> wrote:\n> \n> I think this will be fixed in the future with the new command parser cc @ret2libc <https://github.com/ret2libc>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/radareorg/cutter/pull/1845?email_source=notifications&email_token=AAG75FUSXC3BKVOEZCXNWL3QUONMJA5CNFSM4JBFDGL2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEENHYEI#issuecomment-555383825>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAG75FRZADBAD5JNQ4ISFA3QUONMJANCNFSM4JBFDGLQ>.\n> \n\n Superseded by https://github.com/radareorg/cutter/pull/1899  I rewrote the building instructions.\r\nNow if one follows the building instructions for linux it should just work as expected with no single issue.\r\n\r\nI think it can still be improved but I believe it's a good first step for newcomers. I would expect https://cutter.re/build/ to be automatically generated from the .rst file, isn't it the case? As for the doc being ugly, there are already opened issues about that topic, and I can take a look at it after that PR is merged :)   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\nShould solve the issue:  Move \"Show bytes (asm.bytes)\" setting to a more visisble place #1838\r\nSmall UI change in settings\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Closing issues**\r\ncloses #1838 \r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n ![bytes](https://user-images.githubusercontent.com/7101031/66721706-f55cdc80-ee0d-11e9-9745-83f81a352e58.png)\r\n Thank you for the support, guys! Now it should be ok:\r\n![image](https://user-images.githubusercontent.com/40901856/66743597-997c6d00-ee7a-11e9-9773-62b351d3e4be.png)\r\n  I will handle it  I would like to work on this issue. Is there anything that I should keep in mind apart from what is described? I have a doubt regarding the location of the config file. For .radare2rc in radare2, this file could be in multiple locations (https://radare.gitbooks.io/radare2book/configuration/files.html). \r\n\r\n> radare2 will first try to load /usr/share/radare2/radare2rc\r\n> \r\n> Each user in the system can have its own r2 scripts to run on startup to select the color scheme, and other custom options by having r2 commands in there.\r\n> ~/.radare2rc\r\n> ~/.config/radare2/radare2rc\r\n> ~/.config/radare2/radare2rc.d/\r\n\r\nFor cutter, the .cutterrc is stored in (if it exists), `~/.cutterrc`. If I haven't missed any code related to this, this is the only location where .cutterrc should be stored. Can you please tell me if I missed something? And should I make any change in the location of .cutterrc or can I let the following code be.\r\n```\r\nvoid CutterCore::loadCutterRC()\r\n{\r\n    CORE_LOCK();\r\n    auto home = QDir::home();\r\n    if (!home.exists()) {\r\n        return;\r\n    }\r\n    auto cutterRCFileInfo = QFileInfo(home, \".cutterrc\");\r\n    if (!cutterRCFileInfo.isFile()) {\r\n        return;\r\n    }\r\n    auto path = cutterRCFileInfo.absoluteFilePath();\r\n    qInfo() << \"Loading\" << path;\r\n    r_core_cmd_file(core, path.toUtf8().constData());\r\n}\r\n```\r\nPS : Please assign this issue to me. I am working on this. Wow..this is something very different and more real than what I was thinking. I am amazed to see the amount of customization and features you had in mind related to this configuration editor you envisaged. The profoundness of this work encourages me to learn more and do this. Most surely, I will be doing this in parts. But I will need help along the way. Is .cutterrc searched for in the given standard locations currently? Is it also not something I should do? This the code r2 uses to load radare2rc (if I am not mistaken), in this QStandardPaths are not used. So are we planning to use QStandardPaths now because it's better code? (I'm asking to clarify this for myself).\r\n\r\nhttps://github.com/radareorg/radare2/blob/0968e0f7b52da9d350b068d0284835452963d303/libr/core/cconfig.c#L3677-L3703\r\n\r\n```\r\nR_API void r_core_parse_radare2rc(RCore *r) {\r\n\tbool has_debug = r_sys_getenv_asbool (\"R_DEBUG\");\r\n\tchar *homerc = r_str_home (\".radare2rc\");\r\n\tif (homerc && r_file_is_regular (homerc)) {\r\n\t\tif (has_debug) {\r\n\t\t\teprintf (\"USER CONFIG loaded from %s\\n\", homerc);\r\n\t\t}\r\n\t\tr_core_cmd_file (r, homerc);\r\n\t}\r\n\tfree (homerc);\r\n\thomerc = r_str_home (R2_HOME_RC);\r\n\tif (homerc && r_file_is_regular (homerc)) {\r\n\t\tif (has_debug) {\r\n\t\t\teprintf (\"USER CONFIG loaded from %s\\n\", homerc);\r\n\t\t}\r\n\t\tr_core_cmd_file (r, homerc);\r\n\t}\r\n\tfree (homerc);\r\n\thomerc = r_str_home (R2_HOME_RC_DIR);\r\n\tif (homerc) {\r\n\t\tif (r_file_is_directory (homerc)) {\r\n\t\t\tchar *file;\r\n\t\t\tRListIter *iter;\r\n\t\t\tRList *files = r_sys_dir (homerc);\r\n\t\t\tr_list_foreach (files, iter, file) {\r\n\t\t\t\t\tif (*file != '.') {\r\n\t\t\t\t\t\tchar *path = r_str_newf (\"%s/%s\", homerc, file);\r\n\t\t\t\t\t\tif (r_file_is_regular (path)) {\r\n\t\t\t\t\t\t\tif (has_debug) {\r\n\t\t\t\t\t\t\t\teprintf (\"USER CONFIG loaded from %s\\n\", homerc);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tr_core_cmd_file (r, path);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfree (path);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tr_list_free (files);\r\n\t\t}\r\n\t\tfree (homerc);\r\n\t}\r\n}\r\n``` > Multiple initialization files can be loaded.\r\n\r\n@ITAYC0HEN Do you mean we could load all of them and deal with conflicts while initiliazing or do you mean that the we should select the first cutterrc present from the standard locations while checking in order? This is how the search settings option looks in the vscode settings. I am trying to make it like this. A search option like this where users can search by the config variables as well as their description.\r\n![Screenshot from 2020-03-21 12-54-56](https://user-images.githubusercontent.com/18501167/77221845-8aa98d00-6b73-11ea-949e-8ea5c21a37b3.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n @ITAYC0HEN As we have discussed on telegram, the plan will be the following.\r\n\r\nPart a - Load all files. (Have submitted a pull request, testing for mac/windows is required)\r\nPart b - Add simple text editor to edit data in .cutterrc in a standard location. (we have to decide this standard location, preferably the last loaded one as this will supercede all the previously loaded cutterc.\r\nOptional Part c - Giving syntax highlight feature for this text editor\r\nPart d onwards - I havent' decided the exact plan. I will update after Part b. This will be about making the dynamic configuration editor.\r\n For part b, my plan is to load cutterrc from a single location which will be the last one to get loaded during start of the cutter.\r\nMaking this specific for each instance/installation of Cutter is one way. For this, we should be keeping this location inside the Cutter _installation directory_. This way, if someone have multiple installations of cutter in different directories (for some reason), they can easily handle .cutterrc for each cutter installation. I also don't expect people to have multiple .cutterrc in multiple standard locations. At the same time, in case such of conflicts, having a .cutterrc in the installation directory itself will help users easily supercede all the other files which will be loaded. @ITAYC0HEN I think you can merge the PR now (Haven't tested on Mac). \r\nAs @karliss suggested, we could use `QStandardPaths::writableLocation(AppConfigLocation)` for loading last loaded file. \r\n\r\nBut, if I do that, would this location not be present on the first loaded locations as well? In order to avoid this problem, should I be loading from this location again after loading files from all locations as usual? Or is there a better workaround for this?\r\n\r\nOne idea I can think of is using `QStandardPaths::writableLocation(AppDataLocation)` instead for loading the last loaded .cutterrc. Or this could be some other standard location available which is better for this.\r\nhttps://doc.qt.io/qt-5/qstandardpaths.html#StandardLocation-enum I am going to start building of part B, which is adding a simple text editor to edit data in .cutterrc in a standard location.\r\n\r\nCurrently, I am thinking about using `QPlainTextEdit` and loading .cutterrc from the location with the highest priority (to be decided). After this, it will work pretty much like a normal text editor. But for part C, I will be experimenting with some syntax highlighting features like in hexdump widget right-side panel that @karliss  had pointed out.\r\n\r\n_This multi-line text area for users to script their initializing config would not be having anything to do with the dynamic config editor as per my current idea._ \r\n\r\nI would like to know if I can proceed with this idea. Also, I will be loading .cutterrc from the home location for now. When a better location is decided, I can change this to that.  \r\n![Screenshot from 2020-04-16 00-09-40](https://user-images.githubusercontent.com/18501167/79375680-9facec80-7f76-11ea-9b99-d468cfdc495c.png)\r\n\r\nI have been working on part b when I got time. I would like to know the significance of the _**OK**_ Dialogue button. Is it ever used for saving anything? As far as I could find, when we click it, it closes the preferences window. Just that. So if I add a **_'Save'_** button in it's place, would it be okay?\r\n@ITAYC0HEN  @karliss  our settings dialog indeed saves every change automatically and applies it to the interface. So users can quickly see what changed, without exiting and entering the dialog again and again.\r\n\r\nThis benefit is irrelevant for `.cutterrc` so I think that a `save` button is agood idea. But not a (`save as...`)  The work in part b is almost over. I will probably make a PR tomorrow. I want some help in choosing the location. I have been using `Home` directory to test in my PC. But could this be a read only location in any case? @karliss @ITAYC0HEN  > For syntax highlighting look for example in hexdump widget right side panel.\r\n\r\n@karliss Can you please share a screenshot of hexdump widget right side panel that highlights syntax?\r\nI don't seem to have any syntax highlighting in this panel  There should already be shortcuts in cutter for seeking back and forward based on standard key back and forward. Alt+left and alt+right on non macos and alt+[ on macos.\r\n\r\nThe task itself should be fixed by having the same instance of qaction in menu and toolbar. See #1299   **Is your feature request related to a problem? Please describe.**\r\n\r\nI'm not sure bug or feature this. I've tried to reproduce in emulator debugger my old demo with esil https://asciinema.org/a/42850 After execution needed value kept above stack and I have to click \"Seek to this offset\" and find it in disassm or hexdump view. It will be more comfortable if I can see a value in stack or another window.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAuto resizing stack view.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nSeparate view for \"memory\"\r\n\r\n**Additional context**\r\n\r\nExample with disassm view ![image](https://user-images.githubusercontent.com/1186777/66658709-b16daa00-ec4a-11e9-9830-462549f8ea29.png)\r\n Related to #1018 .\r\n\r\nIt doesn't change the need to improve stack viewing, but I wanted to make sure you know that you can right click on either rsp register in register widget or stack widget line and select show in new or existing hexdump or disassembly. Yeap, I know :)   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Yeah I just forgot about it.  **Detailed description**\r\n\r\nThe first issue is that the disassembly function to rename a \"used\" function was not checking for Flag types.\r\n\r\nThere is a second issue which I am not sure if is a concern or not. The imported functions contain both a \"flag\" and a \"function\" type. Does this mean `functionRenamed()` and `flagRenamed()` should be emitted?\r\n\r\n\r\n**Test plan (required)**\r\n\r\n1. Rename an imported system function, observe that the view is refreshed immediately. \r\n\r\n![test-rename-imported-function](https://user-images.githubusercontent.com/6268446/66442410-2a41eb80-ea2a-11e9-858e-29bb32e64155.gif)\r\n\r\n\r\n**Closing issues**\r\n\r\n#1738\r\n  **Detailed description**\r\n\r\nCurrently, python plugin output printed by print() and radare/cutter output printed into stderr/stdout is only shown in console.\r\nThis branch adds stdout/stderr redirection to the console widget in addition to the regular console.\r\n\r\n**Test plan (required)**\r\n\r\nCreate a plugin that prints a prepared text with the text formatting available in r2 at a very high rate, compare the console widget output to the text file to make sure there weren't any loses and visually go over the output to confirm that the text was formatted correctly.\r\n\r\n**Closing issues**\r\ncloses #1434 \r\ncloses #966  This is WIP as I am still working on the Windows solution but I would like to get your opinion on the direction so far.\r\n\r\nThe main issue here is that radare prints incomplete strings that it updates later with carriage right(For example, \"[ ] analysis..\" -> \"[x] analysis..\" which uses https://github.com/radareorg/radare2/blob/master/libr/util/print.c#L2282). \r\n\r\nMy solution seems to work without \"live\" line updates but I am not sure if it's worth investing time into a more complicated solution that will implement carriage right overwrites using cursors. It wouldn't hurt spliting redirection/tee logic from terminal emulation logic at least at function level. It might help in future replacing the current console widget with embeddable terminal emulator thus eliminating any problems with handling \\r and more. Although doing it fully would require more than just a pipe so some redirection logic modification would still be necessary. Extensively tested on Ubuntu 18.04 and Windows 10, everything seems to work well.\r\n\r\nI think that terminal emulation should be a separate issue since it's far more complicated to implement while this PR could already be merged.\r\n\r\nThe changes in the last commit were the most I could do to merge platform specific code.\r\nI tried using _pipe in windows but the file descriptor doesn't support any of the methods [Qt's Windows event dispatcher](https://github.com/qt/qtbase/blob/5.15/src/corelib/kernel/qeventdispatcher_win.cpp) uses to check before emitting readyRead for it to work in QSocketNotifier or QLocalSocket. Using QLocalServer instead of CreateNamedPipe didn't work with the redirection and made the implementation way more complicated, QFile doesn't have any signals and UDP/TCP sockets or new threads seemed like a less favorable option.  Cutter from Appveyor crashes on my Win10. > Cutter from Appveyor crashes on my Win10.\r\n\r\nYou're right, I am able to reproduce the issue when running the .exe directly, I have only tested in poweshell with\r\n`Start-Process .\\cutter.exe -RedirectStandardError stderr.txt -RedirectStandardO\r\nutput stdout.txt`\r\n\r\nThe crash is caused by [backing up the original stdout and stderr](https://github.com/yossizap/cutter/blob/3ddc0a322f7747049ac4b9897b2d4000e8c2107d/src/widgets/ConsoleWidget.cpp#L362-L363) without the corresponding -Redirect flag for each. After removing both lines and the redirection of stdout to directly print to stdout while redirecting stderr, I discovered that it doesn't work without the -RedirectStandardError flag.\r\n\r\nThis doesn't seem to happen in a small POC Qt console project I have created, is there something in Cutter's windows build configuration that might be related to this issue that doesn't happen in regular console projects? Also seems to be related to not having stdout/stderr in windows console at all.\r\nI tried AttachConsole and AllocConsole but it didn't help and stdout/stderr weren't printed anyways.\r\n\r\nWould appreciate some insight from people who are more familiar with Windows, currently looking into powershell's source code to figure out how those flags influence the program. This took a while and barely had any documentation/reference for some reason but after a lot of attempts things seem to work well without a console/-RedirectStandardX with zero voodoo.\r\nAlso, windows cmd/powershell prints cutter's/r2's output now (with colors+proper formatting).\r\n\r\nI couldn't find a clean way to enable output when running the .exe directly, from my research it seems that the only way to do it is to replace AttachConsole with AllocConsole but that will create a cmd window along with cutter, I am not sure if this is desirable so I didn't go that route. Instead, when running the .exe in windows you get a \"\"Run cutter in a console to enable r2 output redirection into this widget.\" message in the console widget, making it optional for the user.\r\n\r\nOne problem that I did have in windows, which seems to be a Qt bug according to google, is that I am seeing \r\n\r\n    OpenType support missing for \"Segoe UI\", script 66\r\n    OpenType support missing for \"MS Shell Dlg 2\", script 66\r\n    OpenType support missing for \"Arial\", script 66\"\r\n\r\nprints in my console. Those fonts are available and I don't think that this is related to the console but please check if you are getting it with the AppVeyor build. Could add a check in processQueuedOutput to suppress it or just leave it. I had trouble setting up plugins in my build so I just added a timer in ConsoleWidget with random output. >Empty lines in between should be removed (when not expected)\r\n\r\nFixed in the latest commit, misunderstood those as intentional.\r\n\r\n>The output is printed both in the Console widget and the Terminal itself. Is it expected?\r\n\r\nYes, I intentionally kept the interface as it currently is by printing everything to stderr. This also allows redirection to files and lets the user see what happened if cutter crashes. Could make it toggleable with a flag, up to you.\r\n\r\n>executing !echo hello from the console widget will output in the terminal\r\n\r\nR2 prints it so it gets redirected to the widget + regular console along with anything else in stdout/stderr. Is this really an issue? Might be useful when running a command that the console widget can't format properly. Ok ran it a bunch of times and had missing output as well. From the quick flashing of the output before it's removal it seems to be related to the cursor interaction with executeCommand(also calls removeLastLine()).\r\n\r\n![linux](https://user-images.githubusercontent.com/5659696/66650251-acdfcc00-ec1f-11e9-8ddb-b7aaec16be61.png)\r\n\r\nI will look into it.\r\n I think that someone should also try out windows to see if they get the OpenType errors that I mentioned\r\n\r\n    OpenType support missing for \"Segoe UI\", script 66\r\n    OpenType support missing for \"MS Shell Dlg 2\", script 66\r\n    OpenType support missing for \"Arial\", script 66\"\r\n\r\nMight be an unrelated issue though   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  **Closing issues**\r\n\r\n`closes #1810`  @ITAYC0HEN suggested me to implement it in a way, that when Ctrl+C is pressed it will check if there is any text selected. If so, regularly copy it, otherwise, Ctrl+C should copy the highlighted token   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n* Replace hard-coded system plugin directories with use of `QStandardPaths` it should return the same values as what was used before but with less platform specific code in Cutter.\r\n* Potentially simplify support of new platforms supported by QT\r\n* Supports gobal plugin directories on Linux. Locations chosen by Qt with any modifications done by distro maintainers.\r\n* Build option to specify additional plugin directories for more pedantic package maintainers that think that plugins are not data.\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n* Run on Linux, macOS, Windows and verify that printed paths console output indicates attempts to load from correct directories\r\n    * Linux :heavy_check_mark: \r\n    * Windows - :heavy_check_mark:  tested by yossizap\r\n    *  macOS - help wanted\r\n* Run AppImage and test that plugins packed inside AppImage are loaded :heavy_check_mark: \r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n\r\nCloses #1783 I need to test how it interacts with Appimage and if I can remove the special case for that. What are the paths used on linux? @xarkes  See https://doc.qt.io/qt-5/qstandardpaths.html Okay so `~/.local/share/<APPNAME>`. Ping ? :) \"~/.local/share/<APPNAME>\", \"/usr/local/share/<APPNAME>\", \"/usr/share/<APPNAME>\"\r\n\r\nThe first one as user plugin directory, and the rest for system plugins either packed together with cutter or installed through system's package manager. > \"/usr/local/share/\", \"/usr/share/\"\r\n\r\nThis does not look like a sane path to put \"system-wide\" plugins on Linux.\r\n\r\nUsual place for native (*.so) plugins is either `/usr/lib/$APPNAME/` or `/usr/lib64/$APPNAME` (depending on architecture). And for python plugins it is probably `/usr/lib/python$PYTHONVERSION/site-packages/$APPNAME/` (not an expert here, just saw few applications doing this).\r\n\r\nAnd the best way to implement this is to provide some compile-time option to specify these paths. Otherwise package maintainers will really hate you =). I meant `\"~/.local/share/<APPNAME>\", \"/usr/local/share/<APPNAME>\", \"/usr/share/<APPNAME>\"`   github ate the angle brackets.  As explained before those paths are coming from Qt:StandardPaths according to qt configuration. Finally prepared a setup for building appimage. Looks like it doesn't need manual handling as well. Now I have to rebuild it again. Had to leave the special case for APPIMAGE. Qt doesn't handle that. Ran in Windows:\r\n\r\n```\r\nPlugins are loaded from \"C:/Users/User/AppData/Roaming/RadareOrg/Cutter/plugins\"\r\nLoaded 0 plugin(s).\r\nPlugins are loaded from \"C:/ProgramData/RadareOrg/Cutter/plugins\"\r\nPlugins are loaded from \"C:/workspace/cutter/build_x64/cutter/plugins\"\r\nPlugins are loaded from \"C:/workspace/cutter/build_x64/cutter/data/plugins\"\r\nPlugins are loaded from \"C:/workspace/cutter/build_x64/cutter/data/RadareOrg/Cutter/plugins\"\r\n```\r\n\r\nAnything else? macOS:\r\n```\r\nflorian-macbook:~ florian$ /Applications/Cutter.app/Contents/MacOS/Cutter\r\nCutter Launch Script for macOS \ud83e\udd5e\r\nSetting PYTHONHOME = \"/Applications/Cutter.app/Contents/Frameworks/Python.framework/Versions/Current\"  for macOS Application Bundle.\r\nPYTHONHOME = \"/Applications/Cutter.app/Contents/Frameworks/Python.framework/Versions/Current\"\r\nSetting r2 prefix = \"/Applications/Cutter.app/Contents/Resources/r2\"  for macOS Application Bundle.\r\nSetting r2 plugins dir = \"/Applications/Cutter.app/Contents/Resources/r2/share/radare2/plugins\"\r\nNot loading library because it has already been loaded from somewhere else: '/Users/florian/.local/share/radare2/plugins/core_ghidra.dylib'\r\nPlugins are loaded from \"/Users/florian/Library/Application Support/RadareOrg/Cutter/plugins\"\r\nLoad Error for plugin \"libr2ghidra_cutter.dylib\" : \"The plugin '/Users/florian/.local/share/RadareOrg/Cutter/plugins/native/libr2ghidra_cutter.dylib' uses incompatible Qt library. (5.13.0) [release]\"\r\nLoaded 0 plugin(s).\r\nPlugins are loaded from \"/Library/Application Support/RadareOrg/Cutter/plugins\"\r\nPlugins are loaded from \"/Applications/Cutter.app/Contents/Resources/plugins\"\r\nLoaded 1 plugin(s).\r\n``` Alright, let's merge?  Removed whitespace via trimmed() from the QString for StackWidget in order for the copy/paste to operate as intended. \r\n\r\ncloses #1784 @ITAYC0HEN I was able to get a build done. I will have time today to try and resolve the issue. @ITAYC0HEN Ahh yes, the fetch/merge pulled in the changes from b11ba24.  When I click at address in disassembler view, I see an auto highlight on address but couldn't copy it with cmd+C and should press cmd+shift+c or highlight with mouse click and after it press cmd+C\r\n\r\n![image](https://user-images.githubusercontent.com/1186777/66131966-fa937d80-e5fc-11e9-990d-affdfaeb0530.png)\r\n I agree with @ITAYC0HEN  that this isn't a bug. \r\n\r\nIn case of copying with empty selection in Cutter it might copy the highlighted token instead of line.  In code editors copying a line is useful for moving code around. I can't imagine a common use-case for copying single disassembly line. Copying the selected token would be useful not only for address but also various constants from instruction arguments. In code editors word can often be selected using doubleclick but cutter it will trigger change of seek position.\r\n  @karliss yeap, because the token-highlighting without copy functional have confused not only me :) Copy line is worse than this but an empty copy after `cmd+c` in this case is the worst.  **Environment information**\r\n* Operating System: Arch Linux\r\n* Cutter version: Version 1.9.0 (using r2-3.8.0)\r\n* File format: All file formats\r\n\r\n**Describe the bug**\r\nAfter installing r2ghidra-dec, you can't choose r2dec - tooltip is inactive\r\n\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Install r2dec and r2ghidra-dec\r\n2. Open Cutter\r\n3. Ghidra's decompiler open by default, but you can't change it\r\n\r\n\r\n\r\n**Screenshots**\r\n![screenshot](https://user-images.githubusercontent.com/25150523/66062470-2a357d80-e54a-11e9-8360-6564db4e73c5.png)\r\n\r\n\r\n Sorry for late response. I can' reproduce this issue with current Cutter's version.\r\nHave a nice day!  **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\nAs a user I want to be able to copy some functions in the functions panel and paste the information in a document\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\nSelect and copy (including cmd+c) should copy the functions and informations and paste should provide all those information\r\n\r\nReported by @utkonos Thank you kind sir! Is the request here to allow for copying all selected function addresses from the functions panel? Or is the request to copy other details in addition to the address(es) of the selected function(s)? \r\n\r\n All the details that are in the function panel separated by a \\t character from the selected functions. Copy rows yes.  This pull request contains 3 changes:\r\n1. Update Makefile and add Dockerfile-dev to deploy local files rather than pulling from Master branch.\r\n2. Update Dockerfile-dev to compile radare2 before compiling cutter, previously if any file had changed in cutter then radare2 would be recompiled even though nothing had changed. This fixes this problem.\r\n3. Add .dockerignore to only copy required files when deploying to Docker, for both Dockerfile and Dockerfile-dev, size reduced from >150mb to 44mb.\r\n As for the readme, dockerfile and makefile: looks good to me\r\n\r\nRegarding the build scripts: I'm not too involved in the cutter build process but isn't there some build script for r2/cutter that can be re-used for this? Just a suggestion though\r\n @ps1337 There is a *build.sh* script that builds radare2 and cutter in one go, which I have copied to *build-cutter.sh* and moved the relevant radare2 section to *build-radare2.sh* so that it can be ran separately. \r\n\r\nTo do as suggested I could update the *build.sh* script to run as it is currently when no flags are provided and only run the radare2 or non-radare2 sections when a -r or -c flag is provided respectively. Thus removing the need for the extra scripts. Just for information, I think we agreed to remove `build.sh` from Cutter code base, as only a single `cmake` command is sufficient to build Cutter.\r\nSo I would say it's best to add a specific build script to build it for Docker. That sounds good to me, +1\n\n\n\n-----Original Message-----\nFrom: xarkes <notifications@github.com>\nTo: radareorg/cutter <cutter@noreply.github.com>\nCc: ps <pschmied@mailbox.org>, Mention <mention@noreply.github.com>\nSent: Wed, 02 Oct 2019 12:57\nSubject: Re: [radareorg/cutter] Allow local development using Docker (#1806)\n\nJust for information, I think we agreed to remove `build.sh` from Cutter code base, as only a single `cmake` command is sufficient to build Cutter.\nSo I would say it's best to add a specific build script to build it for Docker.\n\n-- \nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/radareorg/cutter/pull/1806#issuecomment-537441383 Okay, so the *build.sh* script should be moved to the *docker* subdirectory and then updated as required to remove the need for the extra *build-\\** scripts? You can remove `build.sh` only if the build process is checked and if the build instructions are updated.\r\nI think it won't fit in that PR, so better not touch it for now I would say.  The Cutter logo doesn't seem to be centered in the screenshot.  Code looks fine.\r\nWhen I open new hexdump I get this. I wouldn't call it reasonable size and proportions.\r\n![hexdump screenshot](https://user-images.githubusercontent.com/7101031/65820591-bfc3cb00-e233-11e9-9f6f-f57a94705334.png)\r\n  **Detailed description**\r\n\r\nUse AddressableItemContextMenu in Registers widgtet. Works when clicking on either label or text input field.\r\n\r\n**Test plan (required)**\r\n\r\n* start emulation\r\n* right click rsp label, check address using xrefs\r\n* right click rsp input field, check address using xrefs\r\n* repeat on rip which should have different address\r\n* open menu using menu key on keyboard\r\n\r\n![screenshot](https://user-images.githubusercontent.com/7101031/65768675-45635000-e13a-11e9-8b08-8feee41965ea.png)\r\n\r\n\r\n**Closing issues**\r\n\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n As discussed I hid the shortcuts. Not sure if it was worth it.\r\n![screenshot](https://user-images.githubusercontent.com/7101031/65820266-796c6d00-e22f-11e9-9ca9-455745ec4120.png)\r\n @ITAYC0HEN I meant  that not having the shortcuts in the menu that has them everywhere means extra code that needs to be maintained. In my opinion having the shortcuts isn't too confusing as it is the same menu as everywhere else. It would be more confusing if this menu was unique to register widget.\r\n\r\nI already removed the shortcut displaying, at this point it would be a bit silly to remove them.\r\n\r\n  **Environment information**\r\n* Operating System: Parrot OS 4.7 x64\r\n* Cutter version: 1.9.0\r\n* File format: ELF\r\n\r\n**Describe the bug**\r\n\r\nWhen i changed variable name (the menu is still buggy, i changed it via retype variable), comment next to the instructor was use old name.\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Open binary file, now our `char * buf` should be defined as `char *s`\r\n2. Comment next to instructor in any code is `s` \r\n3. Right click -> rename variable -> set to other name\r\n4. Comment is still use `s` as variable name while the name in instructor is new name\r\n\r\n\r\n**Expected behavior**\r\n\r\nComment should use new name as well\r\n\r\n\r\n**Screenshots**\r\n1. The name before edit (s2)\r\n![Screenshot at 2019-09-24 23-00-45](https://user-images.githubusercontent.com/29118926/65528843-5126fa80-df1f-11e9-88eb-201d84f8026e.png)\r\n2. Edit s2\r\n![Screenshot at 2019-09-24 23-01-45](https://user-images.githubusercontent.com/29118926/65528845-51bf9100-df1f-11e9-9953-6a604eaeaa45.png)\r\n3. New name is defined, comment still use s2\r\n![Screenshot at 2019-09-24 23-01-52](https://user-images.githubusercontent.com/29118926/65528857-54ba8180-df1f-11e9-8b6c-24e1b7ff9e26.png)\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n Hey! I had a look into this issue and turns out that this is just a simple confusion because of the same names (s1 and s2 in this case). The comments in pink you see are just the prototype names.\r\n\r\n![image](https://user-images.githubusercontent.com/30789322/77112468-107fe800-6a4f-11ea-9d24-9527fd09a435.png)\r\nLook at the synopsis section :)\r\n\r\nLook at the third picture (that you posted), it clearly shows that `New_name` will be treated as `s2` and `string` as `s1` in `char *strcat(char *s1, const char *s2)`.  **Environment information**\r\n* Operating System: Manjaro linux x64 (kernel 5.1.21)\r\n* Cutter version: Cutter 1.9.0 r2-3.8.0\r\n* File format: elf64. Downloaded here: http://csapp.cs.cmu.edu/3e/bomb.tar\r\n**Describe the bug**\r\nFunction : main. In graph view and in decompiler view last instruction in block with code last addres - 0x00400e72 ( call sym.phase_3 ) But it not end of function. Ret in 0x00400ed6.  In Cutter 1.8.3  all work.\r\n\r\n\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\nAuto Analysis :Enabled\r\nLevel: Auto-analysis (aaa)\r\n\r\n**Screenshots**\r\n![07](https://user-images.githubusercontent.com/55733259/65492124-0e323c00-deb9-11e9-97a2-7088da8dc1ef.png)\r\n<!-- If applicable, add screenshots to help explain your problem\r\n It looks like an analysis issue inside radare2. Can't reproduce. \r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/16493991/66707244-080bde80-ed46-11e9-9b00-938ee5e4510b.png)\r\n\r\n\r\n\r\n\r\n But it is one of the latest builds from AppVeyor. In last version from git:\r\nVersion 1.9.0 \r\nUsing r2-3.9.0-137-gf6036ffba \r\nBased on Qt 5.13.1 (GCC 9.2.0, 64 bit))\r\n\r\nAll work correct and problem don't reproduce\r\n   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Ah my bad I missed the submodule update line...  Many people asked me how to zoom in Cutter, and I think the main reason is that we do not follow the standard.\r\nWeb browsers and many apps use `CTRL` with `+`, `-`, or `=`, so I thought it would be better that Cutter does it as well.   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\nUse addressable item context menu in stack widget. Allow acting both on stack position and value pointed by pointer on stack.\r\n\r\nRespect value editing directly in table. Previously it allowed editing the values but changes were ignored.\r\n\r\n**Test plan (required)**\r\n\r\n* Start emulator\r\n* Edit a value using context menu\r\n* Edit a value cell in table (use double click or f2 to enter edit mode), confirm with enter\r\n* Try editing a value in table again, confirm that it is possible to enter edit mode\r\n* Right click on offset cell, click xrefs and confirm that address is correct\r\n* Right click on one of edited values, confirm that address is correct using xrefs\r\n* Open context menu using menu key on keyboard, confirm target address\r\n* Test that shortcuts work by clicking on cell and pressing 'x' for xrefs, try both offset and value column\r\n\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n 1.  Is probably slightly unexpected interaction of reacting to double click and double click being one of indicators for entering edit mode. Result isn't too bad. I could be convinced that it's intentional.\r\n2. Qt allows configuring multiple ways for entering edit mode. By default most of them are enable. I don't see a reason to change it unless it interferes with other functionality or there is high risk of confusion.\r\n\r\n Both arguments sound reasonable. For 1. What's more important seeking or editing? I would expect seeking to return address being a common operation. If you accidentally start editing value esc key works,  still disabled double click and any key edit triggers.\r\n\r\n In general I agree that it would be useful, but I would say it's out of scope for this issue.\r\nAlso in this specific case stack is very unlikely to contain code. So should we merge it?\r\nThe current behavior looks fine to me.  This fixes broken functionality caused by https://github.com/radare/radare2/pull/14966 and closes https://github.com/radareorg/cutter/issues/1774.\r\n\r\nChanges in radare2 are:\r\n- \"aho\" --> \"ahd\"\r\n- \"aht\" --> \"aho\"\r\n- \"ta\" --> \"aht\"\r\n- \"tas\" --> \"ahts\"\r\n- \"aat\" --> \"aafr\"\r\n- \"taa\" --> \"aat\"\r\n\r\nI think they are all covered now in this PR. Anyway, since it's my first contribution to this repo, double-checking by any other core dev would be great.  Ideally should work with current selection in hexdump/disasm without having to supply a size. I started working on the hexdump version, but got stuck building the AppImage to test my changes. Might get another chunk of free time towards the end of this week, no promises though. There is no need to build AppImage for development purpose unless you are testing the Appimage packaging itself. Hello, I implemented the sub-menu for strings.\r\nI will create PR with this feature after cleanup\r\n\r\n![image](https://user-images.githubusercontent.com/5008234/70696105-e52f7500-1c77-11ea-9e6e-4a9ecc485763.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5008234/70695735-312dea00-1c77-11ea-8c20-8c53fb6b31bb.png)\r\n  **Environment information**\r\n* Operating System:\r\n```\r\n$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 16.04.6 LTS\r\nRelease:        16.04\r\nCodename:       xenial\r\n```\r\n* Cutter version: `Cutter-v1.9.0-x64.Linux.appimage`\r\n* File format: AppImage (unless this refers to the file format I am trying to inspect ...;))\r\n\r\n**Describe the bug**\r\n\r\nDynamic linker fails to link some symbol from the AppImage, as it expects GLIBC 2.25:\r\n\r\n```\r\n$ ./Cutter-v1.9.0-x64.Linux.appimage\r\n./Cutter-v1.9.0-x64.Linux.appimage: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.25' not found (required by ./Cutter-v1.9.0-x64.Linux.appimage)\r\n./Cutter-v1.9.0-x64.Linux.appimage: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.25' not found (required by /tmp/.mount_CutterbjnZhc/usr/bin/../lib/libr_util.so)\r\n```\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n0. Run on a Ubuntu 16.04\r\n1. Download the AppImage, e.g.: `wget https://github.com/radareorg/cutter/releases/download/v1.9.0/Cutter-v1.9.0-x64.Linux.appimage`\r\n2. Make AppImage executable, e.g. `chmod +x ./Cutter-v1.9.0-x64.Linux.appimage`\r\n3. Execute it and observe the issue described above, e.g.: `./Cutter-v1.9.0-x64.Linux.appimage`\r\n\r\n**Expected behavior**\r\n\r\nGiven this is an AppImage, I would expect it to run, especially since the kernel version it expects is rather ancient (2.6.18), but the GLIBC version is [rather recent](https://sourceware.org/glibc/wiki/Glibc%20Timeline) (February 2017).\r\n\r\n```\r\n$ file Cutter-v1.9.0-x64.Linux.appimage\r\nCutter-v1.9.0-x64.Linux.appimage: ELF 64-bit LSB executable, x86-64, version 1, dynamically linked, interpreter /lib64/l, for GNU/Linux 2.6.18, stripped\r\n```\r\n\r\nOf course certain optimizations for newer CPUs could still cause an issue, but the symbols should not.\r\n\r\n**Possible mitigation**\r\n\r\nAs I wrote already [on Telegram](https://t.me/r2cutter), the issue can be typically solved (i.e. keep building on a new system, but have that run on older GLIBC versions etc, provided the emitted opcodes are compatible with that older system). No need to revert back to a Xenial-based build, as that will keep the problem and simply shift it down a number of GLIBC versions.\r\n\r\nOne way is to define a macro in your C/C++ headers (e.g. in one included everywhere) like so:\r\n\r\n```\r\n#define GLIBC_COMPAT_SYMBOL(FFF) asm(\".symver \" #FFF \",\" #FFF \"@GLIBC_2.2.5\")\r\n```\r\n\r\nI think the idea may have originated [here](https://web.archive.org/web/20160107032111/http://www.trevorpounds.com/blog/?p=103), but I am not sure. I've been using it for years and it only ever affected a handful of symbols in the software I was maintaining.\r\n\r\nThis will cause the symbol passed as `FFF` (a name, not a string!) to be aliased to a particular version of that symbol.\r\n\r\nIf you have ever built software for a number of platforms and GLIBC versions you may have run into `memcpy@GLIBC_2.14` being required. Taking the above define you can state:\r\n\r\n```\r\nGLIBC_COMPAT_SYMBOL(memcpy);\r\n```\r\n\r\n... and it will be aliased to the \"older\" (but more sane in this case) version of `memcpy`.\r\n\r\n**The downside of this approach** is that this has to be done in every single source file you have. By way of `-include` (when using `gcc`) this can be done.\r\n\r\nThat define provided above is specific to x86-64 ... because different architectures have been supported starting with different library versions, for example, you would have a different \"common denominator\" version. So for PowerPC 64-bit the above should use \"@GLIBC_2.3\" ... for x86-32 I have fared well using \"@GLIBC_2.0\". Other supported architectures may require other \"lowest\" version numbers.\r\n\r\nNote however, that not all symbols are as trivial as `memcpy` (where 2.14 _established_ the undefined behavior in case of overlapping buffers being passed).\r\n\r\nAdditionally you can - and that's generally the favorable method - tell the assembler what mapping to use (in case of the `gcc` driver frontend you'd pass):\r\n\r\n```\r\ngcc ... -Wa,--defsym,memcpy=memcpy@GLIBC_2.2.5 ...\r\n```\r\n\r\n... but this is still only viable if you don't statically link _some_ pre-built component which itself has (newer) symbol requirements \"imbued\".\r\n\r\nIn that last case the only option (that I am aware of) left would be a [linker script](https://sourceware.org/binutils/docs/ld/Scripts.html) (also [here](https://wiki.osdev.org/Linker_Scripts)) containing something using [`PROVIDE`](https://sourceware.org/binutils/docs/ld/PROVIDE.html) to alias one symbol name to another. This can be passed in such a way as to _amend_ the existing implicit linker script or - using `-T` - to replace it. A wrapper like `musl-gcc` together with a customized specs file (see `gcc -dumpspecs`) could be used to automate this as much as possible without having to rely on Magic Sauce\u2122 on the build system itself.\r\n\r\nAnyway, the takeaway should be that the problem can be solved _without_ reverting back to an older build system/compiler toolchain/... Alright, by way of `--appimage-extract` I extracted the squashfs contents.\r\n\r\nThen I made myself a list of all the ELF files:\r\n\r\n```\r\nfind -type f -exec file {} +|grep -P 'ELF \\d{2}-bit'\r\n```\r\n\r\nI also cut myself a list of just the ELF file paths/names:\r\n\r\n```\r\nfind -type f -exec file {} +|grep -P 'ELF \\d{2}-bit'|cut -d : -f 1 > ../elf-names.txt\r\n```\r\n\r\n... and then ran all ELF files through `readelf --dyn-syms` to find any GLIBC requirements for GLIBC 2.10 and newer. For reference, GLIBC 2.10 [was released in May 2009, ten years ago](https://sourceware.org/glibc/wiki/Glibc%20Timeline).\r\n\r\nThe outcome was a list of files I named `recent-syms.txt` (also attached):\r\n\r\n```\r\ncat ../elf-names.txt |while read fname; do echo \"$fname\"; readelf --dyn-syms \"$fname\"|grep -P 'GLIBC_2\\.[12]\\d'; done > ../recent-syms.txt\r\n```\r\n\r\n### The summary is this\r\n\r\n```\r\n$ cat ../elf-names.txt |while read fname; do readelf --dyn-syms \"$fname\"|grep -P 'GLIBC_2\\.[12]\\d'; done|awk '$7 ~ /^UND/ {print $8}'|sort -u\r\naccept4@GLIBC_2.10\r\nclock_getres@GLIBC_2.17\r\nclock_gettime@GLIBC_2.17\r\nclock_nanosleep@GLIBC_2.17\r\nclock_settime@GLIBC_2.17\r\n__explicit_bzero_chk@GLIBC_2.25\r\nexplicit_bzero@GLIBC_2.25\r\n__fdelt_chk@GLIBC_2.15\r\ngetauxval@GLIBC_2.16\r\ngetrandom@GLIBC_2.25\r\n__longjmp_chk@GLIBC_2.11\r\nmemcpy@GLIBC_2.14\r\nmemfd_create@GLIBC_2.27\r\nmkstemps@GLIBC_2.11\r\n__ppoll_chk@GLIBC_2.16\r\nprlimit64@GLIBC_2.13\r\npthread_setname_np@GLIBC_2.12\r\nsecure_getenv@GLIBC_2.17\r\nsetns@GLIBC_2.14\r\n```\r\n\r\nI didn't look any further as of yet. However, `__fdelt_chk` can be disposed of by way of undefining `_FORTIFY_SOURCE` and then defining it as zero:\r\n\r\n```\r\n-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0\r\n```\r\n\r\n... provided you _build_ whatever component requires it (it's likely that the other `*_chk` functions will be gone as well).\r\n\r\n`clock_*` functions could be linked from `librt` instead.\r\n\r\n`memcpy@GLIBC_2.14` can be easily diverted to point to the older (_saner_) version of `memcpy` (see [this ticket](https://bugzilla.redhat.com/show_bug.cgi?id=638477) for an in-depth discussion, in particular [comment 38](https://bugzilla.redhat.com/show_bug.cgi?id=638477#c38)).\r\n\r\nAnyway, that's quite a few functions to take care of. But it only has to be done once per update to a new build system.\r\n\r\n### Attached files\r\n\r\n- [elf-files.txt](https://github.com/radareorg/cutter/files/3590095/elf-files.txt)\r\n- [elf-names.txt](https://github.com/radareorg/cutter/files/3590096/elf-names.txt)\r\n- [recent-syms.txt](https://github.com/radareorg/cutter/files/3590097/recent-syms.txt)\r\n I'll see if I can reproduce the AppImage build locally and thus send a PR or so. Have you made any progress? > Have you made any progress?\r\n\r\n@scorpius Nope, didn't look into this any further. The easiest way, moving forward, would likely be to include the more recent GLIBC in the AppImage. I can't see how that would be more problematic (license-wise) than the aggregate of what's already in there.\r\n\r\nThe only reason why that could fail on older systems would be system calls being used which are not available on older systems. But that's highly unlikely to happen as most of those have very very special use cases and wouldn't apply to something like r2 and Cutter with Python and what not ...\r\n\r\nI am actually looking at techniques like the ones described right now to find if there's a way to recommend a least-intrusive way. So perhaps as a byproduct I may come up with something for here. But I wouldn't hold my breath. It's not one of my top priorities at the moment. I'm also currently having this problem on (4.9.0-12-amd64 #1 SMP Debian 4.9.210-1 (2020-01-20) x86_64 GNU/Linux). Does anyone know a work around to get this working, I tried to ld preload the libraries, but that only solves one of the errors. I can preload radare2/libr/util/libr_util.so and it seems to link fine. I think, btw, the stub is what causes the problem, not so much the contents. I still know too little about AppImage to help out, but if the stub could be replaced with one that statically links musl-libc, for example, this would definitely resolve the issue.  **Environment information**\r\n* Operating System: MacOS Mojave 10.14.6\r\n* Cutter version: Cutter 1.9.0 - Codename \"Trojan Dragon\"\r\n* File format: ELF32\r\n\r\n**Describe the bug**\r\n\r\nLaunch cutter and open the attached so file, and cutter will hang there.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1.  Launch cutter\r\n2. Select the attached so file with default option\r\n3.  Let cutter analyze the file\r\n\r\n**Expected behavior**\r\n\r\nCutter will cost less one minute to complete the anaylsis.\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/12681575/64500423-af34ca80-d2ef-11e9-9da8-8f7423ee0c95.png)\r\n\r\n\r\n\r\n\r\n[libcrackme.so.zip](https://github.com/radareorg/cutter/files/3588480/libcrackme.so.zip)\r\n If it's stuck on analysis, it's more likely a bug from r2. Investigation is needed. Profiler says that r2 spends too much cpu time on this https://github.com/radareorg/radare2/blob/eeaf148bc8cf15e555c038dee06fd8e46c710680/libr/core/cio.c#L350 Huh I tested it with a game installer (namely Valorant) of 64MB (x and I was wondering why it took time\r\n\r\nTested on windows 10 Cutter-v1.10.2-x64.Windows Actually that hang was fixed a long time ago so the issue can be closed.  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently cutter has a static place for plugins (from comment i read in 1 other issue) so i think it should have something like a plugin store in the future.\r\n\r\n**Describe the solution you'd like**\r\n\r\nIt should be like a GUI manager for r2pm. The interface has to easy to use, easy to install plugins, show full information about plugin.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nA list of installed plugins and uninstalled plugins is okay but we should have something `modern`.\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n  **Is your feature request related to a problem? Please describe.**\r\n\r\nLayout upgrade from older versions is somewhat problematic due to Qt returning black box binary blob. \r\n\r\nIf someone has opened an older Cutter version and is now opening the latest Cutter to see if it got any better it likely to result in broken layout which is bad user experience.\r\n\r\nIt would be good to identify when this happens and at least reset the layout. Loosing layout is bad but loosing layout getting broken UI is worse.\r\n\r\nI have tested the procedure bellow with 1.5 and 1.7.4 and it works. There is no need to do anything crazy to break the layout.\r\n\r\n**Overall strategy** \r\n* Identify older versions whose setting file results in broken UI when opening latest cutter. It is possible to download compiled binaries from github release section for all the versions back to 1.0.\r\n* Analyze the changes that are causing problem and how Qt reacts to them\r\n* Create a code that detects problemtic settings and fixes or resets the layout\r\n* Test that upgrade from any all the versions between 1.0 and 1.9 result in non broken UI\r\n\r\nIn ideal case analysis of problematic versions will result in knowledge of what not to do to prevent further breaking changes and a generic mechanism for detecting when the bad changes happened.\r\n\r\n**Testing an upgrade from older version**\r\n* Delete settings file on Linux it is located in `~/.config/RadareOrg/Cutter.ini`\r\n* Open a basic  executable in an older version of Cutter\r\n* [extended testing] open all the widgets and place them reasonably\r\n* Close Cutter\r\n* Open a binary in latest Cutter\r\n* Observe if layout contains any badly placed dock\r\n\r\n**Potential indicators for incompatible layout**\r\n* Settings file version - its safe to reset the layout if the version is really old and it is guaranteed to result in broken layout\r\n* Current settings contain two fields `docks` and `state`. Assuming  both of them use the same or similar names any widget that is not present in the old list will cause a problem. If it's only one or two differences maybe its possible to recreate only those widgets. In my opinion, upgrade should do something else than reset layouts. Let say that i am having my custom layouts and i don't want to change it because it spent 1 hour to make it -> reset layouts makes me crazy. I am packaging cutter and it will be upgraded via apt so reset layouts multiple times will be bad for users.\r\nP/s: i think this issue happens from 1.8 version when overview widget was added. @dmknght No one is suggesting to completely reset layout for active users with each minor version upgrade. Avoiding false positives not breaking setup for active users was first thing considered. Reset is more of worst case fallback action for really old versions that can't be reasonably upgraded due to lack of information or completely different set of widgets that don't exist anymore.  What is the expected location of the seek for a selection, should it be the end position of the selection or the start (anchor)?\r\n\r\nIf the seek should always be at the anchor of a selection, then would it be sufficient to only seek when the anchor (start) of the selection has changed, rather than detecting mouse release event?\r\n\r\n  If it can be selected it should be copyable even when read only. @ITAYC0HEN then don't use custom menu, just add your actions to the widget's actions list The best approach would be to add an option in the right-click contextual menu to:\r\n\r\n```\r\nCopy > Address\r\n     > Copy text\r\n```\r\n\r\nThis way you are still open to add further options in the future. Thanks.  **Environment information**\r\n* Operating System: Ubuntu 18.04 LTS\r\n* Cutter version: 1.9 (Cutter-v1.9.0-x64.Linux.AppImage)\r\n* File format: ELF \r\n* R2 version: radare2 3.8.0 0 @ linux-x86-64 git.3.8.0\r\n\r\n**Describe the bug**\r\nUnable to view decompiled code in cutter when r2ghidra is also installed via r2pm.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install r2ghidra-dec via r2pm -i r2ghidra-dec\r\n2. Open a binary in Cutter 1.9 (Cutter-v1.9.0-x64.Linux.AppImage) in the terminal\r\n3. Seek to a function\r\n4. Open the decompiler widget  \r\n5. Select Ghidra as the decompiler\r\n6. Observe the following error in the widget: `Failed to parse JSON from r2ghidra`\r\n7. Observe in the terminal the following errors: `Cannot find 'x' format.\r\nGhidra Decompiler Error: No print languages registered`\r\n\r\n**Expected behavior**\r\nTo be able to see Ghidra decompiled code in the decompiler widget while having r2ghidra-dec installed via r2pm.\r\n\r\n**Additional context**\r\nI'm currently working around this by simply renaming the `core_ghidra.so` plugin in `/home/<username>/.local/share/radare2/plugins` when using cutter. \r\n It's ok here, this is about plugin loading confirmed on Parrot OS with default build.  Hi everyone. I've packaged cutter for Parrot OS (pulled git version 21 Sep). I am seeing no `Cannot find 'x' format. Ghidra Decompiler Error: No print languages registered` in terminal. However r2ghidra still doesn't load. I copied ghidra stuff from `~/.local/share/radare2/plugins` to `/home/dmknght/.local/share/RadareOrg/Cutter/plugins` but it doesn't work. The installer built with the `rules` from Debian (it was made for old versions):\r\n```\r\n%:\r\n\tdh $@ --buildsystem=cmake --sourcedirectory=src\r\n\r\noverride_dh_auto_configure:\r\n\tdh_auto_configure -- -DCUTTER_ENABLE_QTWEBENGINE=1\r\n```\r\n\r\nDo I need to enable ghidra by adding flags in the build commands? I saw changes in commits but i am not sure about this. I think @dmknght issue is handled in that issue: https://github.com/radareorg/cutter/issues/1783\r\n >  I copied ghidra stuff from ~/.local/share/radare2/plugins to /home/dmknght/.local/share/RadareOrg/Cutter/plugins but it doesn't work.\r\n\r\nI did it wrong because i didn't understand cutter part of r2ghidra-dec so it can be ignored. I thought my flags was wrong in build command.\r\nFor the current topic, there are 2 parts:\r\n- `Cannot find 'x' format`: Last time i compile cutter and r2ghidra-dec, it was fixed. It is still happening in AppImage file so I think maybe you guy want to create a small patch (1.9.1) to make an AppImage file with no error.\r\n- Install r2ghidra-dec using `r2pm` won't install cutter plugin. Not sure if this is related but I can't use either `r2retdec` or `r2ghidra`. I didn't install the plugins via r2pm though and instead compiled from source. I get\r\n\r\n> Failed to parse JSON from r2ghidra/r2retdec\r\n\r\nI also installed cutter from source with the bundled r2 (submodule)\r\n\r\nCutter Info:\r\n\r\n> Version 1.10.3\r\nUsing r2-4.4.0\r\nBased on Qt 5.14.2 (GCC 9.3.0, 64 bit)\r\nOptional Features:\r\nPython: ON\r\nPython Bindings: ON\r\n\r\nVersion Info:\r\n\r\n> 4.4.0 r2\r\n4.4.0 r_anal\r\n4.4.0 r_lib\r\n4.4.0 r_egg\r\n4.4.0 r_asm\r\n4.4.0 r_bin\r\n4.4.0 r_cons\r\n4.4.0 r_flag\r\n4.4.0 r_core\r\n4.4.0 r_crypto\r\n4.4.0 r_bp\r\n4.4.0 r_debug\r\n4.4.0 r_hash\r\n4.4.0 r_fs\r\n4.4.0 r_io\r\n4.4.0 r_magic\r\n4.4.0 r_parse\r\n4.4.0 r_reg\r\n4.4.0 r_sign\r\n4.4.0 r_search\r\n4.4.0 r_syscall\r\n4.4.0 r_util\r\n\r\nI probably installed it wrong but the shared objects are here:\r\n\r\n```\r\n/usr/local/share/RadareOrg/Cutter/plugins/native>ls\r\ntotal 96K\r\ndrwxr-xr-x 2 root root 4,0K Apr 23 02:13 ./\r\ndrwxr-xr-x 3 root root 4,0K Apr 21 20:34 ../\r\n-rw-r--r-- 1 root root  42K Apr 23 00:06 libr2ghidra_cutter.so\r\n-rw-r--r-- 1 root root  41K Apr 23 01:56 libr2retdec_cutter.so\r\n\r\n/usr/local/share/radare2/plugins>ls\r\ntotal 5,8M\r\ndrwxr-xr-x 3 root root 4,0K Apr 23 02:13 ./\r\ndrwxr-xr-x 4 root root 4,0K Apr 22 22:14 ../\r\ndrwxr-xr-x 2 root root  12K Apr 23 00:24 r2ghidra_sleigh/\r\n-rw-r--r-- 1 root root 4,5M Apr 23 00:11 core_ghidra.so\r\n-rw-r--r-- 1 root root 1,3M Apr 23 01:59 core_retdec.so\r\n\r\nls /usr/local/bin/retdec*\r\n-rwxr-xr-x 1 root root  22M Apr 23 01:35 /usr/local/bin/retdec*\r\n-rwxr-xr-x 1 root root 7,3K Feb 17 15:10 /usr/local/bin/retdec-archive-decompiler.py*\r\n-rwxr-xr-x 1 root root 5,9M Apr 23 01:03 /usr/local/bin/retdec-ar-extractor*\r\n-rwxr-xr-x 1 root root  29M Apr 23 01:35 /usr/local/bin/retdec-bin2llvmir*\r\n-rwxr-xr-x 1 root root  11M Apr 23 01:13 /usr/local/bin/retdec-bin2pat*\r\n-rwxr-xr-x 1 root root 977K Apr 23 00:47 /usr/local/bin/retdec-config*\r\n-rwxr-xr-x 1 root root 4,7K Feb 17 15:10 /usr/local/bin/retdec-config.py*\r\n-rwxr-xr-x 1 root root  57K Feb 17 15:10 /usr/local/bin/retdec-decompiler.py*\r\n-rwxr-xr-x 1 root root  12M Apr 23 01:30 /usr/local/bin/retdec-fileinfo*\r\n-rwxr-xr-x 1 root root 2,7K Feb 17 15:10 /usr/local/bin/retdec-fileinfo.py*\r\n-rwxr-xr-x 1 root root 8,1M Apr 23 01:09 /usr/local/bin/retdec-getsig*\r\n-rwxr-xr-x 1 root root 665K Apr 23 00:43 /usr/local/bin/retdec-idr2pat*\r\n-rwxr-xr-x 1 root root  21M Apr 23 01:33 /usr/local/bin/retdec-llvmir2hll*\r\n-rwxr-xr-x 1 root root 5,9M Apr 23 01:05 /usr/local/bin/retdec-macho-extractor*\r\n-rwxr-xr-x 1 root root 2,8M Apr 23 01:10 /usr/local/bin/retdec-pat2yara*\r\n-rwxr-xr-x 1 root root 6,0K Feb 17 15:10 /usr/local/bin/retdec-signature-from-library-creator.py*\r\n-rwxr-xr-x 1 root root  13M Apr 23 01:14 /usr/local/bin/retdec-stacofin*\r\n-rwxr-xr-x 1 root root  11M Apr 23 01:20 /usr/local/bin/retdec-unpacker*\r\n-rwxr-xr-x 1 root root 7,9K Feb 17 15:10 /usr/local/bin/retdec-unpacker.py*\r\n-rwxr-xr-x 1 root root  16K Feb 17 15:10 /usr/local/bin/retdec-utils.py*\r\n-rwxr-xr-x 1 root root 374K Apr 23 00:08 /usr/local/bin/retdec-yarac*\r\n\r\n```\r\n\r\nNot sure if relevant but I also compiled QT and PySide from source.  This PR aims at fixing https://github.com/radareorg/cutter/issues/1749.\r\n\r\nCurrently, the way `asm.ucase` works is that it will set everything uppercase (including stack variable names). I am not sure that this PR is the proper way of fixing it, but it works\u2122. R2 being smarter about what it changes to uppercase would be a nicer fix. It shouldn't touch identifiers. Imagine a situation where names differ only in letter capitalization.\r\n\r\nI would feel less uncomfortable with this as temporary workaround if it was done only when asm.ucase is enabled. It seems the behavior of radare2 is not consistent for everything. I will investigate and fix radare2 instead. Closed in favor of https://github.com/radareorg/radare2/pull/15209  Doesn't this prevent the dialog from always being on top of the MainWindow and making it un-focusable (which would be desired probably)? Wouldn't it be more correct to set the main window as parent for modal dialog?\r\nI guess some of the current weirdness comes from setting a context menu which closes as parent for modal dialog. At least for me it fixed the centering problem and even enabled tracking. Yes, this sounds much better Yes. It's `mainWindow` in the DisassemblyContextMenu class I think.  Properly fixing #1735 will probably fix this as well.  I wonder if it's due to actions being incorrectly defined or the QT show shortcut change.  They recently decided partially reverting that change.  **Environment information**\r\n* Operating System: ArchLinux\r\n* Cutter version: 81f71693795ff97ae32c15635796e26335376349\r\n* File format:\r\n\r\n**Describe the bug**\r\n\r\nSome of the actions in disassembly context menu are hidden when not applicable. This is done by performing the check in aboutToShowSlot. Action stays hidden the next time context menu is opened. Hiding action also disables it making it impossible to call it using shortcut. This means that after right clicking on a place where action isn't applicable shortcut gets disabled even after changing offset to position where action is applicable.\r\n\r\n**To Reproduce**\r\n\r\nIn disassembly widget\r\n\r\n* Right click on function header, observe that menu contains \"Rename funciton fcn.0x123456 N\" action\r\n* Press \"N\" and observe that shortcut works\r\n* Right click second instruction in function, observe that \"Rename function\" action is hidden\r\n* Left click on function header\r\n* Try pressing \"N\" shortcut for renaming function and observe that it doesn't work anymore\r\n\r\n**Expected behavior**\r\n\r\nIn the last step of instructions above \"N\" shortcut works.\r\n\r\nRename function is just an exmaple, there might be other actions in disassembly context menu affected by the same problem.\r\n\r\n\r\n\r\n**Possible solutions**\r\n\r\nA) Update action status in `setOffset` function.  Downside that it causes a bunch of unnecessary r2 queries while navigating disassembly widget. Probably not a problem, at least for small binaries.\r\n\r\nB) \r\n* keep conditional hiding in `aboutToShowSlot`\r\n* in `setOffset` or reenable the actions\r\n* in the action callback check if it is applicable\r\n\r\nSolution b is slightly more efficient but complicated. Step 1 and sometimes 3 are already implemented so it might not be so \r\n\r\n**Additional context**\r\n\r\nThis problem applies only to actions that get conditionally hidden and have keyboard shortcut.  \r\n<!-- Add any other context about the problem here. -->\r\n @karliss @ITAYC0HEN can you please explain solution (B) a little bit?\r\n\r\nI tried to solve this using solution (A) and it works but I am not  sure what is solution B suppose to mean. ._. Set offset can be called quite often as you navigate in disassembly widget by holding a keybord key or quickly scrolling. Fully updating the context menu each time (solution A) would be waste of resource and make the interface less smooth. Instead the context menu could be updated only when it's opened (current approach), but it has problem of leaving the actions disabled and thus keyboard shortcuts not working. Solution b would look something like this:\r\n\r\n```\r\n# this part should be mostly there already, step1\r\nfunction beforeMenuOpened():\r\n    if !action_applicable_at_current_offset:\r\n        action->disable()\r\n    else:\r\n        action->enable()\r\n\r\n# this part is missing,  step 2\r\nfunction menu_closed() or setOffset()\r\n     action->enable() # keep actions enabled so that shortcuts work\r\n\r\nfunction action_callback():\r\n    if !action_applicable_at_current_offset: # this part might be for some of the actions, probably not all. step 3\r\n        return \r\n   do the thing # this part should be there\r\n```\r\nIf that isn't clear enough ask a more specific question. I did something like this in step 2\r\n![image](https://user-images.githubusercontent.com/30789322/71761065-a98d7100-2eec-11ea-8f9e-6f14af69badf.png)\r\n\r\nand it works.. not sure about what you meant in step 3 (are you talking about something similar to [`canCopy`](https://github.com/radareorg/cutter/blob/master/src/menus/DisassemblyContextMenu.cpp#L370)? @nk521 The action should have the same check as what is used for hiding it from menu.   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\nEnsures that newly created hexdump widgets show current offset instead of 0x00000000.\r\n\r\n**Test plan (required)**\r\n\r\n* Open disassembly widget at non zero offset\r\n* Add new hexdump using \"Window/Add Hexdump\"\r\n* observe that newly created hexdump widget shows the same offset as disassembly widget (before fix it showed 0x0)\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\nBefore the changes omnibar changed the global seek.\r\n\r\nAfter the change omnibar changes seek of last active memory widget regardless of it's synchronization state. Any changes in global seek happen indirectly if performing seek in synchronized widget.\r\n\r\n\r\n**Test plan (required)**\r\n\r\n* Open two synchronized memory widgets side by  and perform seek in omnibar, observe that both memory widgets changed the position\r\n* unsync one of the widgets\r\n* click on the synchronized widget\r\n* press g and seek somewhere, observe that unsynchronized widget didn't change\r\n* click on unsynchronized widget\r\n* pres g and seek, observe that only unsynchronized widget changed\r\n* put all memory widgets in one tab group\r\n* switch to search widget\r\n* perform seek and observe that a memory widget gets shown\r\n* close recently viewed memory widgets\r\n* seek and observe that one of remaining memory widgets get shown\r\n* close all memory widgets\r\n* perform seek and observe that a disassembly widget gets created (poor placement of newly created memory widgets is a separate problem)\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  Hello, I would like to pick up this issue if possible. Thanks. Hi, as a part of this issue I have made some [changes](https://github.com/radareorg/cutter/compare/master...0x24D:issue-1730) to make it easier to develop using Docker. Shall I create a new issue for these changes or just create a separate pull request? Just create a separate pull request. I haven't really had much time to work on this after making the Docker changes. Am I correct in thinking it is the [CutterDockWidget](https://github.com/radareorg/cutter/blob/master/src/widgets/CutterDockWidget.h) class where I should be catching the keyPress and mousePress events? > Am I correct in thinking it is the [CutterDockWidget](https://github.com/radareorg/cutter/blob/master/src/widgets/CutterDockWidget.h) class where I should be catching the keyPress and mousePress events?\r\n\r\nFor most of them probably yes. Reopening closed tab would better be done at global level. Okay, great. I was going to do the reopening closed tabs one last as I wasn't sure how it should be done. I have updated CutterDockWidget to catch the QKeyEvent on keyPress and keyRelease but in the respective methods `event` seems to be uninitialised, see: https://github.com/0x24D/cutter/commit/2072fb335b6f0810b162cb8b7847695f0b1688f8#diff-16c4d34007c0d4874105b8a5329706abR96-R97\r\n\r\nAfter building Cutter, whenever I press a key with the dock widget in focus and line 97 uncommented, the program segfaults. I ran the program with Valgrind and it states that event is uninitialised. Any thoughts? Did you checked the callstack? Qt shouldn't be doing that. Maybe one of CutterDockWidget subclasses is calling parent method with incorrect argument.\r\n\r\nEven if it didn't crash I don't think you should be handling keypress events in this situation manually but use QAction or QShortcut instead which already implement the logic for handling multikey shortcuts. Even more - when possible you should use methods that accept [StandardKey](https://doc.qt.io/qt-5/qkeysequence.html#StandardKey-enum) like [void QAction::setShortcuts(QKeySequence::StandardKey key)](https://doc.qt.io/qt-5/qaction.html#setShortcuts-1) instead of specifying keys explicitly. \r\n Hi,\r\n\r\nApologies that this has taken as long as it has done. I have just finished implementing the first three keyboard shortcuts and would like some feedback on what I have done, what could be improved, etc. \r\n\r\nPlease find my changes here: https://github.com/radareorg/cutter/compare/master...0x24D:issue-1730-tab-management. Some of the changes are due to running AStyle.\r\n\r\nI have currently got an issue with the 'jump to previous tab' shortcut, as the QAction shortcut is not being caught when pressed - although the other two shortcuts are fine. HEy 0x24d, thanks for the follow-up! I appreciate it highly.\r\n\r\nWould you mind sending this as a work-in-progress PR? Also, it would be easier for us to reveiew before applying astyle Yes I can do. Do you want me to revert the AStyle commit first? yeah, please, this should be the final commit :)  I haven't tested it yet, but doesn't this require settings upgrade to prevent breaking layout due to name change? Don't we have settings upgrade mechanism already implemented? You shouldnt need to do more than add a function performing x to. X+1 upgrade step and increase the version by one. Rest of work should be handled by existing code. See https://github.com/radareorg/cutter/blob/06aceaf9b10ff466d9bf85ff12c0660e64e39da7/src/Main.cpp#L42 There is probably a reference to dock names in binary window layout data which makes the upgrade step less useful than I thought, sorry about that. There is nothing we can easily and cleanly do about it. > There is probably a reference to dock names in binary window layout data which makes the upgrade step less useful than I thought, sorry about that. There is nothing we can easily and cleanly do about it.\r\n\r\nYes exactly, and this will not be possible to be resolved until implementing the json format proposed by you, so lgtm for now. I wasn't planning to change the way dock layout gets serialized. That's a fairly complex code and it would be good to reuse functionality provided by dock and window management library. It's something to pay attention when evaluating alternatives for qt docking widgets.   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\nSee #1726 for description.\r\n\r\n**Test plan (required)**\r\n\r\n* rename stack variable in function with multiple of them after clicking on it's name in mov instruction\r\n* rename variable after clicking in the block at top of function\r\n* rename register argument in the block at top of function\r\n* rename register argument after clicking the name in function signature\r\n* open EditVariablesDialog with no variable selected , rename after selecting variable from combobox\r\n* open EditVariableDialog in a function without any stack variables and arguments\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\nCloses #1726 @ITAYC0HEN \r\nN - currently doesn't work due to #1698 . As for quickly renaming variable 'y' almost works like that. After opening the dialog it focuses on name field and pressing enter after changing it confirms and closes the dialog. Only problem is with selecting the right token in disassembly, there is currently no consistent way of doing that using only keyboard. As we add more selection based actions to disassembly widget the selection shortcuts should probably be improved.\r\n\r\nWhat do you think of not opening the variable editing dialog if there are no variables unless we add a \"add new variable\" button there?\r\n\r\n @xarkes  I assume you meant the type in list of variables at top of function. That would be better, but I don't think it can be easily done. Having a more structured information about disassembly would be nice for various context sensitive actions. I really don't want to do dirty string matching hacks. The fact that whole function header block is single \"line\" doesn't help.  Do we need a context menu entry for Ctrl+F if the search bar at the bottom can't be closed? See your screenshot. It's in the string widget.  See [#7519 - Generic \"table\" command/api](https://github.com/radare/radare2/issues/7519) radare2 issue by @radare and @deepakchethan\r\n\r\nAlso relevant:\r\n- [#14352 - Support Table API and `scr.utf8=true` in `p-h` command](https://github.com/radare/radare2/issues/14352)\r\n- [#12745 - Generic \"tree\" command/API](https://github.com/radare/radare2/issues/12745)\r\n- [#13763 - Support CSV](https://github.com/radare/radare2/issues/13763)\r\n- [#3222 - Structured Document Helpers](https://github.com/radare/radare2/issues/3222) Yes, for now no need to care about that, unless you want provide suggestions for the implementation. It is work-in-progress feature in radare2, I will ping once it is ready to use. Can you explain how Cutter would benefit from supporting ASCII table or this data structure? \r\nToday we use JSON to parse data and put it in visual GUI table  > Yes, for now no need to care about that\r\n\r\nI would rather not have an opened issue then. The idea is interesting, but I think it's too soon to take care of it. We should reopen that issue once it is integrated into radare2.  Nice! Works  Closes #1681 \r\nOpening a file from the NewFileDialog will remember its IO mode. Whenever a file is selected from the recent files list, the IO mode will change to the one which was used to open the file earlier.\r\n > How does it deal with recent item history for inputs that are not path to files?\r\n\r\n@karliss Can you please elaborate recent items which are not files? Hey @m0nk3ydluffy, would you have some time to rebase your PR and address the above comments? Thank you! Hey @xarkes! Sorry for the long delay! I will address the issues and rebase the PR.  Will you have some time this weekend @m0nk3ydluffy? Were there any updates on this one? Nope, if you want you can just rebase the PR and address the comments! I tried the PR and I think the current implementation is not well integrated into the interface.\r\nAs said by Karliss, if one wants to change the IO mode for a file, or just change the filename, it will automatically update the IO mode, so that's not really a good thing.  **Environment information**\r\n* Operating System: arch \r\n* Cutter version: 1.8.4\r\n* r2 version: 3.7.0\r\n* File format: elf64\r\n * Arch: x86\r\n * Type: EXEC (Executable file)\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to Graph widget\r\n2. RClick a function block\r\n3. LClick on Edit function XYZ\r\n4. Type $((address bigger then Start Address)) in End Address\r\n5. LClick OK\r\n\r\n**Expected behavior**\r\nThe Graph should change accordingly to the newly given End Address. Even after [View => Refresh Contents] nothing happens.\r\n\r\n**Screenshots**\r\n![first](https://user-images.githubusercontent.com/41512496/62897172-fc566880-bd52-11e9-9211-66f239818e3b.png)\r\n![second](https://user-images.githubusercontent.com/41512496/62897174-fe202c00-bd52-11e9-9dd6-0eb2a9c7e26f.png)\r\n![third](https://user-images.githubusercontent.com/41512496/62897330-50f9e380-bd53-11e9-9490-052e114962df.png)\r\n\r\n**Additional context**\r\nSomething wired happens sometimes when another fcn.ABC flag is in between. After changing End Address and lclicking Ok there are two seperate functions which can be viewed in graph view but have a size of approx 10byte). The second behaviour was not reproduceable anymore. I do not even know how this is possible at r2 commandline. I always used Visual mode key combination (d,e) with current seeker pointing to the last instruction of the falsely analysed function (cmd: af @func || keycombo df). radare/radare2#14992  **Is your feature request related to a problem? Please describe.**\r\nUnder X-Refs widget, DATA type reference are displayed in code preview\r\nIt is usually meaningless to interpret data as code, while it is better to show data as Hexdump\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n![image](https://user-images.githubusercontent.com/37732584/62831861-0af72f80-bc2e-11e9-9d02-6882800adadc.png)\r\n\r\n\r\n**Describe the solution you'd like**\r\n1. There should be an option to display in Hexdump preview\r\n2. Cutter will show Hexdump preview for DATA reference by default\r\n\r\n\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\n**Describe alternatives you've considered**\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n Good idea!  In these examples, were you the one who marked these addresses as \"string\", \"qword\", etc?\r\nWell, in general, I think that having a hexdump preview for DATA is something we can decide and do ourselves. With or without radare2 since we have the knowledge that it is DATA ref. If I have an instruction like this `lea ebx [0xadd7e55]`, I would be happy to look at x-refs widget and see that in \"[0xadd7e55]\" there is actually a string that surrounded by more interesting strings Yes, but r2 is supposed to show that @ITAYC0HEN, see below screenshot:\r\n![image](https://user-images.githubusercontent.com/10772605/65635518-c3abdf00-dfe0-11e9-8595-77f44efd1720.png)\r\n  **Environment information**\r\n* Operating System: Any\r\n* Cutter version: latest - master\r\n* File format: Any\r\n\r\n**Describe the bug**\r\n\r\nThere are actually two related bugs:\r\n1. When changing the graph layout to another layout and restarting Cutter. The graph layout is back to its default value. Cutter should preserve the user's preferences.\r\n2. After changing the graph layout and clicking \"Reset Settings\", the layout stays changed until Cutter is re-opened. I'd expect the layout to be reset to its default layout when resetting settings and don't wait for the restart to take effect.\r\n\r\n**To Reproduce**\r\n\r\n**Scenario 1:**\r\n0. Open a binary in Cutter\r\n1. Open the Graph widget\r\n2. Right-click on the graph, and select a layout from the Layout context item. e.g \"Graphviz polyline LR\"\r\n3. Exit Cutter\r\n4. Re-open Cutter and go to the graph widget\r\n5. See that the graph returned to its default layout\r\n\r\n**Scenario 2:**\r\n0. Open a binary in Cutter\r\n1. Open the Graph widget\r\n2. Right-click on the graph, and select a layout from the Layout context item. e.g \"Graphviz polyline LR\"\r\n3. See that the graph layout has changed\r\n4. Now select \"View -> Reset Settings\" from the main toolbar\r\n5. Inspect that the graph did not change to its default layout\r\n6. Restart Cutter and open a binary. See that the layout returned to default\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\n\r\nThe chosen layout should be saved in Settings, preserved in each execute of Cutter, and return to its Default layout when the settings are reset.\r\n So maybe rather than adding a hack it's better to close this issue and take care of #694? Not sure it should be closed. But indeed should be handled with #694   Sweet! I tested the PR and it looks very good, much better than before and finally - a unified solution.\r\nI noticed just a few issues, some are probably not related to your PR but I find it worth mentioning here.\r\n\r\nAlso, I'd love to see it documented in a friendly way, in our documentation, and on API level. Basically, these additions would be used by almost any plugin developer of Cutter (that would probably want to introduce widgets based on these. You already have a nice explanation at the top of this page so it would be mostly copying and pasting I guess :))\r\n\r\n---\r\n\r\n1. I noticed that copying a cell with numbers in its value (and not a string or hex) doesn't work\r\n2. Strings widget have a \"Filter    ctrl+f\" context menu item and other doesn't\r\n - do we want all the list widgets to have it?\r\n - anyway, clicking on this \"Filter\" in Strings' context menu does not put the focus to the Filter widget\r\n3. Seems like the widgets have the [KeyboardSearch](https://doc.qt.io/qt-5/qabstractitemview.html#keyboardSearch) option enabled by default. This has a collision with one-letter shortcuts such as <kbd>s</kbd > for seeking or <kbd>x</kbd> for showing x-refs\r\n\r\n Before merging, what do you think should be done with point 3? Should we disable KeyboardSearch?  **Environment information**\r\n* Operating System: Parrot 4.6\r\n* Cutter version: 1.8.4, git version 01-Aug-2019\r\n* File format: ELF\r\n\r\n**Describe the bug**\r\n\r\nWhen I use right click on variable name to change name of variable, there is `Add flag` menu only.\r\nIf I use `add flag` menu and change value in it, the menu `Rename variable` will show up but it doesn't rename my variable\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to Graph widget\r\n2. Right click on a variable. No `Edit variable name` here (it was there before)\r\n3. Select `Add flag`, set value in this windows and select `Ok`\r\n4. Right click again on variable that we've edited, It will show `Rename $variable_name (used here)`\r\n5. Try edit variable name again, nothing changes in Graph widget\r\n\r\n**Expected behavior**\r\n\r\n- Rename variable menu works\r\n- Maybe split Rename variable and add flag as same as old versions?\r\n\r\n\r\n**Screenshots**\r\n\r\n1. Right click on variable name, only `Add flag` menu shows up\r\n![Screenshot at 2019-08-01 22-00-49](https://user-images.githubusercontent.com/29118926/62304587-73b11000-b4a8-11e9-8e0f-5013fea5f6da.png)\r\n\r\n2. Edit value in `Add flag`\r\n![Screenshot at 2019-08-01 22-08-18](https://user-images.githubusercontent.com/29118926/62304765-e326ff80-b4a8-11e9-8504-6bef5fadb478.png)\r\n3. Edit variable name menu shows up\r\n![Screenshot at 2019-08-01 22-09-36](https://user-images.githubusercontent.com/29118926/62304869-11a4da80-b4a9-11e9-8e19-bb2f2a336426.png)\r\n4. Edit variable name again but nothing work\r\n![Screenshot at 2019-08-01 22-10-15](https://user-images.githubusercontent.com/29118926/62304924-271a0480-b4a9-11e9-93fe-f4b1489db3cf.png)\r\n\r\n\r\n\r\n\r\n**Additional context**\r\nI am playing `random` challenge at `https://pwnable.kr/play.php`\r\n @karliss this bugs seems fixed with Cutter 1.9 and radare2 3.9. However the text on menu is still `Retype function local vars Y`. The function was called work fine (define variable). So i think this bug was fixed from radare2 and it needs a little fix from cutter side (sorry i can't take the screenshot right now. I'll do it as soon as possible. Thank you for your feedback. Everyone in dev team agrees that renaming process should be improved but it is a bit more complicated than that.\r\n\r\nThose are two somewhat different somewhat things.  R2 has separate commands for renaming a specific kind of thing (global flag, rsp based local var, rbp based local bar, ...).  There is also a command for renaming whatever is referenced on current line.  \r\nBefore and after 1.9 cutter exposes two of them. \r\n\r\nRename variable with N shortcut you complained about is based on r2 command for renaming anything on current line. Nothing changed there it is still broken for renaming local variables.\r\n\r\nThe changes in 1.9 in affected second command whose primary purpose is editing local variables (type and name).  Nothing was fixed on cutter or r2 but it became easier to use cutter local variable editing function as alternative way of renaming local variables.\r\n\r\nIn ideal case there would be single action for renaming whatever you clicked on. Problem with making this work nicely is that cutter has no idea what part of disassembly that  you clicked on refers to. It doesn't know the difference between opcode cmp, local variable cmp, comment or string literal containing those letters.  Second problem as pointed out before is that command for renaming anything is broken. @karliss so from what i am understand, the string `Rename local variable` is a fixed text and there would be now `Rename variable X` `Rename variable Y` in the menu like previous versions? So i think this issue can be closed because the rename problem is fixed (look like).\r\nP/s:\r\n1. when i right clicked on the function, there are 2 options: `Rename <name of function>` and `Rename function local vars` (this rename local variable shows nothing in box).\r\n2. When i right clicked on cmp, there are 2 options: `Add flag at <offset>` and `Rename function local vars`. \r\n3. The same: 2 menu when i right clicked on string object\r\n4. Comment seems doesnt work.\r\nSo from what i see, Cutter still detects function name, flag, object some how and variable name is fixed in the menu. I am thinking maybe hide `Rename function local vars` when users right click on `cmp` (for the flag) and `function name` or string could be a template choice before you guys can complete your function. Ofc this is my idea and i have never looked at the part of code so I am just giving i dea :D   **Environment information**\r\n* Operating System: ArchLinux\r\n* Cutter version: 329a9b6da156a44ea21db7b88076ca0edacffc57\r\n* File format: ELF\r\n\r\n**Describe the bug**\r\n\r\nDisabling emu.str keeps asm.emu enabled.\r\n\r\n**To Reproduce**\r\nTest 1\r\n1. open Preferences/DIsassembly/Metadata\r\n2. Enable and then disable \"asm.emu\" option and observe the difference\r\n3. Enable \"emu.str\"\r\n4. Disable \"emu.str\"\r\n5. Observe that asm output looks as if \"asm.emu\" was enabled. **BUG**\r\n6. Toggle \"asmu.emu\" twice to disable it. \r\n\r\nTest 2\r\n1. Open Preferences/DIsassembly/Metadata\r\n2. Make sure \"asm.emu\" is disabled and enable \"emu.str\"\r\n3. Click ok\r\n4. Reopen Preferences/DIsassembly/Metadata\r\n5. Observe that \"asm.emu\" is enabled but \"emu.str\" is disabled. **BUG**\r\n\r\n**Expected behavior**\r\n\r\nAfter disabling \"emu.str\" output returns to previous state.\r\n In r2, when you enable \"emu.str\" it will enable \"asm.emu\" because, iirc, \"emu.str\" can't work when \"asm.emu\" is disabled.\r\n\r\n Should this be handled from r2?\r\n\r\n```\r\n# both variables are set to false\r\n[0x00005ae0]> e asm.emu\r\nfalse\r\n[0x00005ae0]> e emu.str\r\nfalse\r\n\r\n# enable emu.str\r\n[0x00005ae0]> e emu.str=true\r\n[0x00005ae0]> e emu.str\r\ntrue\r\n\r\n# show that asm.emu became true\r\n[0x00005ae0]> e asm.emu\r\ntrue\r\n\r\n# set emu.str to false again\r\n[0x00005ae0]> e emu.str=false\r\n[0x00005ae0]> e emu.str\r\nfalse\r\n\r\n# this does not affect asm.emu that previously became true and still is\r\n[0x00005ae0]> e asm.emu\r\ntrue\r\n```  **Detailed description**\r\n\r\nAdd [Graphviz](https://www.graphviz.org/) based layout. It provides more compact layout with better edge routing.\r\n\r\nAdd menu for selecting graph layout algorithm.\r\n\r\n**Test plan (required)**\r\n\r\n* Open a graph view, try all layouts\r\n![layoutmenu](https://user-images.githubusercontent.com/7101031/61997333-bb9af600-b0a8-11e9-9fc1-1ee44c5ec209.png)\r\n\r\n\r\n\r\n**Closing issues**\r\n\r\nCloses #1684  Build scripts will probably need some more work. I want to try some changes in Graphviz configuration.\r\n\r\nSome observations:\r\n* Graphviz is slower than our current algorithm, and I know a few changes that could make current algorithm even faster.\r\n* Layout is more compact maybe even too compact. There are almost no blocks that are moved far to the side with both parent and children being on the same side.\r\n* Edge routing is mostly better, there are no unnecessary edge loops. Sometimes it's a bit too close to blocks. Didn't saw a setting for this, but maybe it can be improved by playing with scale.\r\n* Graphviz sometimes hits some asserts crashing Cutter :(\r\n* Starting block is sometimes put in the middle of graph even though more top to bottom ordering is possible. `newrank` setting didn't seem to help much. I want to try giving some ranking hints.\r\n* `tailport` and `headport` setting for enforcing edge connection side didn't seem to work with ortho edge mode. Previously there wasn't much new to show beside edges endpoints being properly attached and self loop direction fix.\r\n\r\nNow I implemented a few more configurations for you to try.\r\n\r\nImplemented rank hinting by excluding edges that forms a loop from some Graphviz processing. Graphviz is better at dealing with DAG than arbitrary graphs. Most of the time there is no difference but in some cases without hinting it puts initial block somewhere in the middle or make the layout go sideways. See one of bad examples in screenshot.\r\n\r\nPolyline edge routing and ortho edge routing modes. Ortho mode looks more tidy but sometimes causes crashes (this also happens when exporting graph from r2 directly).\r\nCompared to ortho mode polyline doesn't break from tailport, headport setting but it stacks the endpoints which I don't like.\r\n\r\n* Graphviz ortho -  more or less default configuration with ortho edges\r\n* Graphviz ortho+  - ortho edges with rank hinting\r\n* Graphviz polyline - polyline edges with rank hinting\r\n\r\nDemonstration for case where rank hinting helps. Ortho+ on the right, regular ortho on the left. Function entry marked in green.\r\n![rank-hint](https://user-images.githubusercontent.com/7101031/61978488-1590b280-affa-11e9-8046-02bebc32d174.png)\r\n\r\nOrtho+ on the right, polyline on the left\r\n![polyline](https://user-images.githubusercontent.com/7101031/61978587-51c41300-affa-11e9-8270-6bac6506fb70.png)\r\n\r\n\r\nThis isn't a bad moment to try it out on various functions. If you have any idea for [graphviz setting](https://www.graphviz.org/doc/info/attrs.html) that could improve the look make a comment.\r\n\r\n\r\n\r\n\r\n Examples of using headport and tailport. Sometimes causes edge to go around node in an ugly way,  see 0x02f8 -> 0x92fa.\r\n\r\n![headport2](https://user-images.githubusercontent.com/7101031/61980059-3529da00-affe-11e9-9be2-8f7cd42f1339.png)\r\n![headport1](https://user-images.githubusercontent.com/7101031/61980052-30652600-affe-11e9-9004-a76f42690ca7.png) While \"Graphviz ortho\" is the most efficient in terms of space efficiency (aka, wise layout, almost no space wasted), I really don't like its arrows. Seems like it wasn't designed for CFG so it's something we will need to tweak.\r\nSo basically, in my opinion, the arrows shoul alway start and end at the top-center of a block \r\n\r\nCurrent:\r\n![image](https://user-images.githubusercontent.com/20182642/62022069-1a5c8e80-b1d3-11e9-8c84-090d392649ea.png)\r\n\r\n\r\nOrtho:\r\n![image](https://user-images.githubusercontent.com/20182642/62022024-e8e3c300-b1d2-11e9-9be9-42c976d860be.png)\r\n @ITAYC0HEN I agree that having connections only at top and bottom would be nicer but I don't think there is anything that can be done with options provided by Graphviz. I already described the things I tried above. The point of this PR is getting a relatively good solution (at least in some aspects) with little development resources. And then it's up to user to choose which aspects are more important to them.\r\n Multiple developers (myself included) have expressed thoughts of writing a better specialized solution, but so far no one has found the time and courage to do it.  Don't expect anything from Graphviz developers as they seriously lacking people and their effort would be better spent preventing it from bitrot. \r\nThis doesn't prevent anyone who thinks that they can write a better layout algorithm from doing it.\r\n so you want to have it as one of the layout options but not the default one? Yes, not as default one. It does some things better but it has plenty of drawbacks which were mentioned above. This PR is very good, no reason not to merge.\r\nIn addition to this, I think that what blocking it from being the default layout is that the arrows are not coming in and going out from the bottom\\top center of the blocks. Other than that, it is very nice.\r\n\r\nAlso, need to make it work on Appveyor for Windows builds.  @thestr4ng3r @xarkes if you don't have anything to add, please merge :) Awesome!  Graphviz is one of the best graph drawing libraries that are available. It would be nice to have it as one of the options.\r\n\r\nGot quick proof of concept working.\r\n\r\n![graphviz](https://user-images.githubusercontent.com/7101031/61592308-4166ff00-abda-11e9-8e85-76083e1d0092.png)\r\n![graphviz2](https://user-images.githubusercontent.com/7101031/61592311-45931c80-abda-11e9-9ccb-23d53c6c3992.png)\r\n\r\nRemaining work\r\n\r\n- [x] arrow ends\r\n- [ ] build script (currently works only with CMake, qmake build is probably broken)\r\n- [ ] building on non macOS and Windows\r\n- [x] layout engine selection menu\r\n- [x] optimize graphviz configuration for CFG layout (see what settings radare2 use)\r\n- [x] use attribute handles instead of string for setting node attributes\r\n- [x] code cleanup\r\n- [x] is it possible to set width/height without converting it to string\r\n- [x] dpi conversion Code is in https://github.com/radareorg/cutter/tree/graphviz Wouldn't be better to create PR? I will make a PR once it's closer to being usable. Why not having a special branch so user can test it?  **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\nThe Debugger be pushed in production. \r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\nEssentials features as well as requirements must be defined and tasks created accordingly. The project must be completed with those and the tasks ordered accordingly Ping @Maijn :) I provided to @yossizap the start i had but didn't really had time to work on it at all after that :/ Hackmd is in maintenance mode, will provide link when it's back up We still have to finish it, we are currently at basic functionality. we're quite advanced in the progress of this one. Tracking it in the hack.md and need to finish soon.  Closing as this issue doesn't help with keeping track really.  This fixes #1667 and maybe also the issues mentioned in #1500.\r\n\r\nLet's see if an image will be available at docker hub after merging this :pray:  Worked :) @xarkes   This might be the opposite extreme. When working with multiple variations of the same binary it would be as bad if not worse than  current approach with long names.\r\n\r\nFrom the few programs with similar recent file/project list all of them used following approach - show project name (file name in our case) using contrasting color, show directory or full path on second line with less contrasting color.\r\n\r\n![Screenshot from 2019-07-19 22-07-22](https://user-images.githubusercontent.com/7101031/61559196-cc78b580-aa71-11e9-9bf5-ce3151bec8e4.png)\r\n![Screenshot from 2019-07-19 22-08-10](https://user-images.githubusercontent.com/7101031/61559199-cedb0f80-aa71-11e9-85b8-c773e06d5d2e.png)\r\n![Screenshot from 2019-07-19 22-08-26](https://user-images.githubusercontent.com/7101031/61559203-d13d6980-aa71-11e9-8477-fe93a26d9300.png)\r\n  [VS2019](https://devblogs.microsoft.com/cppblog/wp-content/uploads/sites/9/2019/01/start-window1.jpg) , and [Xcode](http://worldwebscapes.com/wp-content/uploads/2019/01/Step-One-1024x556.png) also do the same.\r\n[CLion](https://www.jetbrains.com/help/img/idea/2019.1/cl_QST_WelcomeScreen.png) I agree with @karliss on this. I prefer seeing the full path than seeing only the filename. Best option, as suggested, would be to show the folder name (short version  ~) an file name with different colors or emphasis. This shouldn't take a lot of space  Windows:\r\n\r\n![Anota\u00e7\u00e3o 2019-07-20 130628](https://user-images.githubusercontent.com/38569298/61581058-4c913080-aaef-11e9-9ada-4dd84d1eda75.jpg)\r\n Apparently the problem was solved. @xarkes are you satisfied with your solution yet?   Yes I do mind. I will squash.   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\nCloses #1305 \r\n > I'm not really found of this approach because the user will have to have exactly the same directory structure and cannot have another name for the pyside folder (e.g. `pyside_v1.xx_win64` or I don't know).\r\n> Thoughts @a1ext?\r\n\r\nHe just refactored the code which we already had before. User had no choice with pyside folder naming before as well. > \r\n> \r\n> I'm not really found of this approach because the user will have to have exactly the same directory structure and cannot have another name for the pyside folder (e.g. `pyside_v1.xx_win64` or I don't know).\r\n\r\nRight, because it is assumed that user download deps from https://github.com/radareorg/cutter-deps. But user still is able to override some paths. \r\nIn general I don't see other way to ease the build. We added these options to provide users a way to build Cutter without extra dependencies. What do you propose? Make these dependency mandatory and add them to the codebase?\r\n\r\n  Override PREFIX= from command 'qmake PREFIX='\r\n\r\n <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  **Detailed description**\r\n\r\nThis pull request is making some changes in the way that advanced analysis options work. Mostly, it removes redundant code and strings and put all the configurable setting in one array of structs.\r\nNow when we would want to add new analysis config to there, or enable\\disable an analysis command by default, we onyl need to change one occurence of it. This is important, because the mess that was there made some analysis options to be visible on UI but not affected the analysis itself. Moreover, some analysis commands were deprecated in some places but did not changed in other places.\r\n\r\nThis PR fixes these problems as well. Also, the PR will dynamically create the checkboxes of the analysis options based on the defined array of options.\r\n\r\nThe following request also removes some visible occurrences of the Analysis abbreviation `anal` in the UI. \r\n\r\nNow, by hovering an analysis options in the UI, the user would see the r2 command that would be executed as can be seen in the following image. This is a compromise between not writing non-sense for non r2 users, but keep the info available for current r2 users.\r\n![image](https://user-images.githubusercontent.com/20182642/62409136-c17a6500-b5db-11e9-95c0-2d2bf3f85252.png)\r\n\r\nInstead of writing the executed commands to the Analysis log window, now the meaningful description would be written:\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/62409158-f5ee2100-b5db-11e9-9b83-baf38dbadc92.png)\r\n\r\n\r\n\r\n**UPDATE**\r\n\r\n**Closing issues**\r\n\r\ncloses #1661 Will take few days and I will push the \"re factored\" version   **Environment information**\r\n* Operating System: ArchLinux\r\n* Cutter version: 736d3e1\r\n\r\n**Describe the bug**\r\nDisassembly arrows are coming from empty line when asm.bb.line is enabled.\r\n\r\n**To Reproduce**\r\n\r\n1. Enable \"Show empty line after every basic block (asm.bb.line)\" in Preferences\r\n2. Check what is happening in disassembly view ;)\r\n\r\n**Screenshots**\r\n\r\n![2019-07-16_10-45](https://user-images.githubusercontent.com/1407751/61280397-12a2f000-a7b8-11e9-8b86-5890dd7a5c84.png)\r\n The same happens with multiline comments. Looks like currently asm.bb.lines is fine but multiline comments are bad. Currently arrow points to last line. \"|\" is above line and multiline comments are bellow so simple logic of selecting first or last line with specific address doesn't work.  To simplify the writing Cutter scripts without diving every time in the documentation it might be possible to adopt Blender approach - once you toggle configuration option \"Python Tooltips\", it shows the Python API required to do the same action, on hovering every button or other UI elements.\r\n\r\nSee the screenshot how it is done:\r\n![image](https://user-images.githubusercontent.com/203261/61275193-06cb2400-a7e0-11e9-8761-6054f26e9ced.png)\r\n\r\nSee also  https://blender.stackexchange.com/questions/18750/how-to-find-the-python-equivalent-operation-for-tools-settings-menu\r\n I think that this can be part of a whole solution in which we organize the actions in Cutter in some kind of a big structure. So if we already write the API for each action, we can also write the description of it and how to trigger it -- this can be used for a command palette \r\nhttps://github.com/radareorg/cutter/issues/1264  **Is your feature request related to a problem? Please describe.**\r\n \r\nTo ensure that the pseudocode is always synchronised with the rest, we need to remove the refresh button.\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\nr2dec to work in task and remove refresh button in pseudocode panel.  With a new DisasmWidget look ;) There might be a few more tweaks to the new widget. Better wait for release to come closer before doing this. This is superseded by #995, right? @xarkes ping? Hey @XVilka, sure we will take care of that soon :) How soon?\r\nSee https://www.wikihow.com/Take-a-Screenshot-in-Linux or ~~https://www.wikihow.com/Take-a-Screenshot-in-Microsoft-Windows~~ (Windows screenshot would be embarassing --thestr4ng3r) See also https://github.com/radareorg/cutter-jupyter/issues/9   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\nChanges in this PR\r\n* Allow seeking without triggering raise memory widget. This was one of the major causes for unexpected changes in focus.\r\n* Raise memory widget mostly moved to main window from core and each widget.\r\n* Last active widget remembered using a pointer instead of memory widget type. Helps when there are multiple widgets with the same type.\r\n* Initial version for \"show in\" context menu. Currently added only to disassembly and graph menus. Left adding it to other menus for separate PR as it would be good to also refactor some of the common actions for list widgets with addressable objects like functions, strings, imports, search results and others.\r\n\r\nI couldn't quite decide if \"show in/new disassembly\" and others should create a new synchronized or unsynchronized memory widget. Currently Cutter is designed more for synchronized mode. In future the menu could also be reused for lines with jumps (show target). That should probably use unsynchronized. \"Show in\" and \"show target\" doesn't necessarily need to behave exactly the same.\r\n\r\n**Parts that could be better**\r\n\r\nName for MainWindow and Core `show(address) ` is open for discussions. \r\n\r\nI am not too happy about using event filter for detecting memory widget activation.\r\n\r\n**Test plan (required)**\r\n\r\n- perform test case described in #1616 \r\n- switching between disassembly and graph using space\r\n  - works in normal case\r\n  - works when either disassembly or graph widget is closed\r\n  - works when disassembly is side by side with graph, test focus by moving up and down\r\n- test rising last active\r\n  - switch to memory widget (repeat with all)\r\n  - switch to overview\r\n  - double click on function\r\n- test ignore empty graph\r\n  - switch to graph\r\n  - switch to symbol list, double click function observe that it switched to graph\r\n  - switch to string list, double click string literal, observe that it switched to memory widget that isn't graph\r\n- test with multiple widgets of the same kind\r\n- disassembly side by side with hex widget, using master it is sometimes impossible to do keyboard navigation in hexwidget because seek moves focus to disassembly\r\n- side by side use case\r\n\r\n![showin3](https://user-images.githubusercontent.com/7101031/61330439-3dc52800-a828-11e9-88fc-214b3d0b78aa.png)\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\nCloses #1616\r\n Just quickly reading through the changes, doesn't look bad already!\r\n\r\nCould you please also move everything MemoryWidget-related except show() and showMemoryWidgetRequested() from CutterCore into MainWindow?\r\nI think having this directly widget-related stuff in CutterCore was a bad decision.  \r\n**Detailed description**\r\nThis Pull Request will update radare2 submodule to its latest version from master This is a requirement for #1626\r\n  requires https://github.com/wargio/r2dec-js/pull/176\r\n\r\n![r2dec](https://user-images.githubusercontent.com/1460997/61076473-a1acb280-a41c-11e9-867f-0d4bef393db9.gif)\r\n - Should we rename PseudocodeWidget to DecompilerWidget?\r\n- I would be happy to see more documentation here for the expected input and description of the structures. This will make the implementation of other decompilers easier Oh and as I wrote 3 times already, this looks amazing! GREAT JOB! Not sure if DecompilerWidget makes more sense. Maybe we can think about it after having integrated an \"actual\" Decompiler.\r\n\r\nOk, I'll add some more docs... This pull request **introduces 1 alert** when merging 049f63fe7a1931263fdffea500d8273346586eec into db3c34a9cdbbeeee589d50219957118fd06b9f88 - [view on LGTM.com](https://lgtm.com/projects/g/radareorg/cutter/rev/pr-424c5424086d5a767e79dca7c7d558f956cd9d12)\n\n**new alerts:**\n\n* 1 for Short global name > This pull request **introduces 1 alert** when merging [049f63f](https://github.com/radareorg/cutter/commit/049f63fe7a1931263fdffea500d8273346586eec) into [db3c34a](https://github.com/radareorg/cutter/commit/db3c34a9cdbbeeee589d50219957118fd06b9f88) - [view on LGTM.com](https://lgtm.com/projects/g/radareorg/cutter/rev/pr-424c5424086d5a767e79dca7c7d558f956cd9d12)\r\n> \r\n> **new alerts:**\r\n> \r\n>     * 1 for Short global name\r\n\r\nI think we should disable this rule, we know better than lgtm what a good name is. This pull request **introduces 1 alert** when merging 8e053571fad02cfffb22a768c8a93fe372c4cb56 into db3c34a9cdbbeeee589d50219957118fd06b9f88 - [view on LGTM.com](https://lgtm.com/projects/g/radareorg/cutter/rev/pr-be656e2650520196097283221313e849ddf9642c)\n\n**new alerts:**\n\n* 1 for Short global name Should take care of the themes issue imo. I cant make a use of it on Light Theme About lgtm, I'll check how to disable it in another pr.\r\nThemes aren't related to this pr as well.  Only supported in CMake for now, set `CUTTER_ENABLE_KSYNTAXHIGHLIGHTING` to `AUTO` (enable if found) or `ON` (required) to use it.\r\n\r\n![Bildschirmfoto vom 2019-07-11 14-13-57](https://user-images.githubusercontent.com/1460997/61050181-a22a5680-a3e6-11e9-8e18-6d38c9c29059.png)\r\n I don't think this would be good for Disassembly. There it would make more sense to skip the html step and convert the ansi codes directly since they are very compact and easy to parse.   Any thoughts about dealing with isNull checks? Most of them can probably replaced with isEmpty. There might be some that need to differentiate between no string and empty string but it's hard to tell. Null and empty strings are definitely different, see https://doc.qt.io/qt-5/qstring.html#isNull (though it says \"for historical reasons\"). The only thing they deprecated is `QString::null`, which was redundant. In general, \"nullish\" strings should be constructed like QString() and if we don't want to differenciate between null and empty (most cases), checked with isEmpty(). IsNull isn't deprecated yet, but its usage is discouraged. I would suggest slowly remove it. As for the cases that need optional string it might be better to use more explicit approach for indicating that. I'm not too sure about that. For instance here, it makes a difference between a string existing and an empty string: https://doc.qt.io/qt-5/qjsonvalue.html#toString. But yeah for our own code, I doubt we will have to use isNull very often. In general, I am also more a fan of separating nullability from the actual type like Swift, Rust, Haskell, std::optional, etc. do.   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n  **Is your feature request related to a problem? Please describe.**\r\nCurrently there are no info about such repository as [cutter-plugins](https://github.com/radareorg/cutter-plugins) on the front page of Cutter repo. \r\nPlus there is no way to go there from Cutter either.\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\nAdd link to plugins repo to readme and add some button like \"get plugins\" to \"plugins\" submenu.\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n Currently put it in https://cutter.re Need to put it in README and Cutter binary  I think the meaning is the same as https://github.com/radareorg/cutter/issues/1763 so I will close that issue. Yes I understood but imo it's not worth it to do a temporary solution as we will focus on the new one asap.  \r\n**Detailed description**\r\n\r\nThis pull request simply disables `asm.movlea` by default. This feature will probably be dropped in the next r2 release so meantime we disable it.\r\n\r\nThe comments can be shown here and looks like \"; MOV <REG> = [VAL]\"\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/60394296-9ad39500-9b2a-11e9-9535-c3acbc03f386.png)\r\n\r\n\r\n**Test plan (required)**\r\n\r\nOpen almost any binary and observe that the comments are now gone. For example\r\n\r\n```\r\n$ r2 /bin/true\r\naa\r\npdf @ main\r\n```\r\n This change should be in r2 not in cutter. I have been asking to change this 2 weeks ago and got no feedback at all\n\n> On 30 Jun 2019, at 11:48, Florian M\u00e4rkl <notifications@github.com> wrote:\n> \n> Merged #1630 into master.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n As written:\r\n\r\n> This feature will probably be dropped in the next r2 release so meantime we disable it.\r\n\r\nWe couldn't allow it to be in Cutter so we disabled it asap. Need to drop this from radare2 entirely  Its not my problem that people ignore mu chat messages. And i agree with condret but i was looking for feedback and real use cases to determine if we are missing any useful case by disabling/removing it\n\n> On 30 Jun 2019, at 16:41, Florian M\u00e4rkl <notifications@github.com> wrote:\n> \n> This change should be in r2 not in cutter. I have been asking to change this 2 weeks ago and got no feedback at all\n> \u2026\n> On 30 Jun 2019, at 11:48, Florian M\u00e4rkl @.***> wrote: Merged #1630 into master. \u2014 You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub, or mute the thread.\n> \n> This is not true. I remember at least @condret and me saying it should be removed completely.\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n  This PR is a work-in-progress by the team. Any of you can push changes to this repo. The goal is to make it stable and trust-worthy as the first part, and then merge. Similarly to what @karliss did with Hex widget. Later, improvements and new features would be added.\r\n\r\n### Requires https://github.com/radare/radare2/pull/14422\r\n\r\n\r\n### Remaining work to do\r\n- [x] Fix arrow positioning\r\n- [x] Fix arrows head\r\n- [x] Improve the algorithm to have something thinner and more good looking\r\n- [x] Fix remaining TODO in the code what do you think about drawing arrows inside of text edit? like this (obviously not in this position, I just didn't finish the code)\r\n![image](https://user-images.githubusercontent.com/42874998/60384099-65736c80-9a82-11e9-920d-dfcedd9b1fda.png)\r\n\r\nDon't know about you, but the fact that arrows are in different widget triggers me. Especially because of this frame around text edit that separates disasm widget and jump arrows\r\n![image](https://user-images.githubusercontent.com/42874998/60384148-e29ee180-9a82-11e9-8df0-6d8bf7b1359f.png)\r\n You can hide border-left if it doesn't feel right to you.\nI'm okay with using a different widget. Also, we wanted to allow the user\nto copy the disassembly without ascii arrows or anything similar.\n\n\n\nOn Sat, Jun 29, 2019, 15:32 optizone <notifications@github.com> wrote:\n\n> what do you think about drawing arrows inside of text edit? like this\n> (obviously not in this position, I just didn't finish the code)\n> [image: image]\n> <https://user-images.githubusercontent.com/42874998/60384099-65736c80-9a82-11e9-920d-dfcedd9b1fda.png>\n>\n> Don't know about you, but the fact that arrows are in different widget\n> triggers me. Especially because of this frame around text edit that\n> separates disasm widget and jump arrows\n> [image: image]\n> <https://user-images.githubusercontent.com/42874998/60384148-e29ee180-9a82-11e9-8df0-6d8bf7b1359f.png>\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/pull/1626?email_source=notifications&email_token=AEZ7M4R2X6ZRFSRCVNUJ57DP45I55A5CNFSM4H3PGETKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODY3X7LA#issuecomment-506953644>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AEZ7M4QDQTTUILFFWOK2E2DP45I55ANCNFSM4H3PGETA>\n> .\n>\n arrows are just drawn on the text editor, user cannot copy them As long as it looks good, we'll written and easy to maintain, I'm in for every idea I'm okay with your suggestion @optizone, but I think we want that the user must be able to resize this \"arrow area\". > I'm okay with your suggestion @optizone, but I think we want that the user must be able to resize this \"arrow area\".\r\n\r\nit is possible too. Just little harder to implement\r\n Well it starts to look good, see the screenshots below:\r\n![image](https://user-images.githubusercontent.com/10772605/60396651-97e59e00-9b44-11e9-8377-25b73d7cf37d.png)\r\n![image](https://user-images.githubusercontent.com/10772605/60396661-b21f7c00-9b44-11e9-82a4-aac3930b08e1.png)\r\n  radare2 has a visual bit editor that allows the user to toggle bits of a certain address. This editor will preview the result of the value with the shifted bits (asm, esil, ...)\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/69497891-6f42b400-0eea-11ea-9c06-332d55a9a8d2.png)\r\n\r\nIt will be fantastic if Cutter will also have it. This can be implemented in right click of a certain instruction (disassembly widget) or value (hex dump).\r\n Isn't it already there?\r\n![Screenshot from 2019-06-25 21-42-25](https://user-images.githubusercontent.com/7101031/60124416-4038e280-9792-11e9-9f56-30e42095d681.png)\r\n but i think having basic typess in the combobox sshould be also available\n\n> On 25 Jun 2019, at 20:43, karliss <notifications@github.com> wrote:\n> \n> Isn't it already there?\n>  <https://user-images.githubusercontent.com/7101031/60124416-4038e280-9792-11e9-9f56-30e42095d681.png>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub <https://github.com/radareorg/cutter/issues/1624?email_source=notifications&email_token=ABRCGG3WQKNY3JJPDNGCOL3P4JRNXA5CNFSM4H3JZZAKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYRGTYI#issuecomment-505571809>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABRCGGYXKYDKMV62DH323EDP4JRNXANCNFSM4H3JZZAA>.\n> \n\n > but i think having basic types in the combobox should be also available\r\n\r\nFor the whole application or for a single instruction? @trufae >  you want it for the whole application or for a single instruction? ping @trufae  it's a hint, hints apply in the current (and following instructions)\n\nchanging the bits (16,32,64) of 1 inistruction doesnt makes much sense to me. because its mainly needed for ranges\n\n> On 24 Nov 2019, at 16:58, Itay Cohen <notifications@github.com> wrote:\n> \n> @trufae <https://github.com/trufae> > you want it for the whole application or for a single instruction?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/radareorg/cutter/issues/1624?email_source=notifications&email_token=ABRCGG5QNRZRKAN6F75R4TLQVKQCVA5CNFSM4H3JZZAKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEFAOQAI#issuecomment-557901825>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABRCGG3VNY5SENELBGLLZ53QVKQCVANCNFSM4H3JZZAA>.\n> \n\n But the visual\nBit editor have nothing to do with this at all\n\n> On 24 Nov 2019, at 17:48, Itay Cohen <notifications@github.com> wrote:\n> \n> \ufeff\n> Thanks!\n> Okay then, so this issue is about Visual bit editor - I edited the initial comment to describe it better. A new issue for analysis hints for bit change (e.g ARM Thumb) will be opened separately.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n  Something like \"sym. bbs>10\" to filter oall the syms with more than 10 basic blocks (name before '<' or '>' must be column names.  will be good to have a way to do that without having to use the mouse, like the nN keys in r2  You mean auto update on single select the function name? Like if single click is supposed to update the disasm view? yes\n\n> On 25 Jun 2019, at 18:02, xarkes <notifications@github.com> wrote:\n> \n> You mean auto update on single select the function name? Like if single click is supposed to update the disasm view?\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub <https://github.com/radareorg/cutter/issues/1619?email_source=notifications&email_token=ABRCGGY3XOGQT2CZULJ6NHLP4I6SNA5CNFSM4H3JYAD2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYQXXXA#issuecomment-505510876>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABRCGGYVRFR2ZXRMWB4FNT3P4I6SNANCNFSM4H3JYADQ>.\n> \n\n I disagree. I dont think this should be the behavior. However, I think that hitting <kbd>Enter</kbd> should trigger a seek, just like double clicking the item Thus, I recommend to close or to modify the requirement to apply Enter  Can we merge now that Travis is green? @xarkes No, It is currently green due to a workaround and this PR removes that workaround. We have to wait until Travis update their VM. Oh ok my bad, for some reason I thought Travis did that already. Supposedly xcode10.2 image contains newer Homebrew. Can we use that? Yes, why not? Feel free to push to this branch. Hmm, it fixes homebrew but causes different problem. The new error could be caused by https://travis-ci.community/t/xcode-headers-not-installed-since-osx-10-14/4286 . Finally green, reduces build time by 10-15 minutes. Nice, thanks a lot!  The correct executable path should be supplied on the command line when\r\nrunning qmake, or it will be discovered by using `pkg-config`.\r\n\r\n**Detailed description**\r\n\r\nWhen qmake is run with Python bindings enabled (`CUTTER_ENABLE_PYTHON=true CUTTER_ENABLE_PYTHON_BINDINGS=true`) the [dependency check for Shiboken2](https://github.com/radareorg/cutter/blob/master/src/Cutter.pro#L131) does not actually happen.\r\n\r\nThis is because the `SHIBOKEN_EXECTUABLE` variable referenced in the outer scope of that dependency check [is always set in that case](https://github.com/radareorg/cutter/blob/master/src/Cutter.pro#L44).\r\n\r\nIt looks like the outer scope was added [when updating to support cutter-deps on Windows](https://github.com/radareorg/cutter/commit/8061120657b7468db5da9b2c00df2e724f7a3642#diff-f50208dc6142b4e093264779d6ca2d98R151). I think the intention was to skip the check on that platform because `pkg-config` is not available.\r\n\r\nIn that case, I think it should work to remove the default value set earlier in the script, and rely on the later check which [assigns a value to the variable with `pkg-config`](https://github.com/radareorg/cutter/blob/master/src/Cutter.pro#L162).\r\n\r\n\r\n**Test plan (required)**\r\n\r\nI tested this locally with my Archlinux setup. The [current Arch package's `PKGBUILD`](https://git.archlinux.org/svntogit/community.git/tree/trunk/PKGBUILD?h=packages/radare2-cutter#n12) does not build Cutter with the Python bindings, and I discovered this issue when building with a customized `PKGBUILD`.\r\n\r\nAccording to my testing, prior to this change if Shiboken2 is not installed and available through `pkg-config` you get a build error stemming from the next check (for PySide2) even when that library is installed. With this change, the correct error relating to a missing Shiboken2 dependency is shown.\r\n\r\n**Note**\r\n\r\nI am not currently in a position to test this build script change on Windows, MacOS, or any other Linux distro.\r\n\r\nI also think that problems with this change wouldn't show up at all in AppVeyor because its build script specifies the value directly. They might in Travis, though. Pinging @thestr4ng3r because they made the commit that is referenced in the above, which added an outer scope to the Shiboken2 package check.  **Is your feature request related to a problem? Please describe.**\r\nNow there are only two ways to check what opcode does: \r\n- google this\r\n- enable `asm.describe`\r\n\r\nThese solutions are not the best (seeing description for every opcode is kinda distracting, you can have no access to the internet + googling takes more time).\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\nTo add \"Show description\" action in context menu.\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n Good idea, and shouldn't be complicated to implement.\r\n\"Show opcode description\"  Context menu is quite crowded already. Here are some alternative ideas to consider.\r\n\r\n### Making it easier to toggle `asm describe`. Submenu under main view menu.\r\n   +no extra UI for displaying description\r\n   +no extra code for querying description string from r2\r\n   -still quite slow as it requires at least two clicks for enabling and two for disabling asm.describe\r\n### Tooltip when hovering instruction\r\n   +no extra steps for triggering\r\n    -bad for long descriptions\r\n    -not sure if cutter has sufficient information about which tokens are opcodes\r\n### Some kind F1 based shortcut, \r\nF1 + subset of modifier keys. For discoverability purpose probably should be also put under the help menu.\r\n    + easy to trigger\r\n    - Managing the state of action under global menu might be a bit messy. Yeah i also think adding to context menu is a bad idea because it's already very crowded there. One more  idea for showing it\r\n### Instruction description widget\r\nWidget which show description for instruction at current seek offset\r\n+After opening the widget easy to see description for multiple instructions by clicking on them\r\n+can support  longer description or formatted text I believe that we already have one, but I can't find it  I have an similar issue so let me know if I should make a separate issue.\r\nI'm working on a project in PowerPC and using the asm.psuedo option but the opcodes (lbz, lbzu), (stw, and stwu) have the same descriptions but the u verison modifies a register. Could there be the ability to see the actual opcode when I hover on the psuedo code version?\r\n\r\nOr adding the ability to set different options for an extra disassembly window? That's unrelated to this issue, please open a new one. > I believe that we already have one, but I can't find it\r\n\r\nSomeone wrote a plugin for it\r\nhttps://github.com/daringjoker/Assembly-refrence So, should we close this? IMHO, this should be implemented on r2 side and exposed in cutter like suggested.\r\n\r\nThe asm.describe databases are very easy for new comers to contribute to and that's why there are so many architecture supported. change in the databases to have more granularity + change in the display of e asm.describe and `?d` IMHO current solution is enough, the changes should be done in radare2 side to integrate more details in `?d` in future but for now having this cutteref offers enough for a temporary fix as a plugin.  Random notes I found while building cutter on mac:\r\n\r\n* brew qt5/qmake packages doesnt seems to work\r\n* the build.sh aims to install a new system wide r2 wtf?\r\n* build.sh seems to fail even by skipping this step\r\n\r\nWorking instructions:\r\n\r\n* Install r2 from git\r\n* Download the qt installer https://www.qt.io/download-qt-installer\r\n\r\n```\r\nexport PATH=~/Qt/*/clang_64/bin:$PATH\r\ncd ~/git/cutter\r\nmkdir build ; cd build\r\nqmake ../src/Cutter.pro\r\nmake -j 4\r\nopen ./Cutter.app\r\n``` See https://cutter.re/docs/building.html#compiling-on-linux-macos  I agree with the fact that `build.sh` should not install a system wide radare2.  **Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently hexdump widget shows memory mostly aligned to column count. But it is possible to achieve unaligned view by sequence of column count and word size changes.\r\n\r\n**Describe the solution you'd like**\r\n\r\n* Improve enforcement of view alignment\r\n* Consider adding option for choosing unaligned view\r\n  *  memory is currently read in blocks, current code will not work when word spans across multiple blocks\r\n I would like to work on this. Can you please elaborate the problem using the following screenshots. What is the change that your are proposing? How should it look if we use the new option?\r\n![Screenshot from 2020-03-14 14-57-27](https://user-images.githubusercontent.com/18501167/76679192-61817d80-6604-11ea-87aa-2ce0c90f8f3e.png)\r\n![Screenshot from 2020-03-14 14-57-54](https://user-images.githubusercontent.com/18501167/76679193-62b2aa80-6604-11ea-8573-2bf43dd755bc.png)\r\n   <!-- Any change needs to be discussed before proceeding. Failure to do so may result in the rejection of the pull request. -->\r\n\r\n\r\n**Detailed description**\r\n\r\n<!-- Explain the **details** for making this change. What existing problem does the pull request solve? Please provide enough information so that others can review your pull request -->\r\n\r\n\r\n**Test plan (required)**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\n<!-- **Code formatting**\r\nMake sure you ran astyle on your code before making the PR. Check our contribution guidelines here: https://cutter.re/docs/code.html -->\r\n\r\n**Closing issues**\r\n\r\n<!-- put `closes #XXXX` in your comment to auto-close the issue that your PR fixes (if such). -->\r\n Briefly. Qt uses object names to save state of mainwindow. Now we use names like \"Disassembly\", \"Graph\" etc. If there are few objects with such names, Qt can not distinguish ones. So some sort of ID is obviously needed. I chose to use \"ClassName ID\" pattern because of more convenient restoring (simply use first word from obj name to find constructor).   \r\n**Describe the bug**\r\n\r\nDisassemblyGraph gets updated on seek even when in background.\r\n\r\n**To Reproduce**\r\n\r\n1. Open executable\r\n2. Open graph view\r\n3. Switch to disassembly or hexdump view, \r\n4. Change seek using navbar\r\n5. Observe that function name in graph tab header changes, most likely the graph gets recalculated as well\r\n\r\n**Expected behavior**\r\n\r\nGraph gets updated only when visible, the same way as other memory widgets.\r\n\r\n**Additional context**\r\n\r\nNeed to decide what to do when graph isn't visible but overview is. In general, I suggest that all widgets won't get updated while not in focus.\r\nIn gein the past, we were talking about making some kind of priority queue for updating the widgets when needed in order to make things faster. @thestr4ng3r maybe you remember? Not a queue, this is what RefreshDeferrer is for. It might have gotten lost for the graph during all the Overview changes. Yes, graph view isn't using RefreshDeferrer. Need to decide how to deal with graph overview. It can be seen while the graph isn't.  Is it worth updating while graph isn't visible?  **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\n\r\nTo improve readability in the sidebar. \r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\nAdd Code highlighting for the selected parsing langauge (python, c, JS, etc)  **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\nTo ease the edition of files using hex panel\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\nCut - (**Only on write\\cache mode**) - copy the selected ASCII\\Bytes to clipboard and remove them I plan to add this possibly as a part of my gsoc proposal for \"Diffing mode\" project as I see this as something that could improve the hexdump diffing features. Can you please point me to some other issues which are related to this? What are the issues/features which should be completed before working on this? This one can be started without pre-requisites Thanks. I guess issue #1524 is also similar. So I will be adding both (most probably) to my proposal.  **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\nAll three columns of hexdump widget should be visible on screen - Offsets, bytes and ASCII. Shrinking won't be possible if it will hide some of these columns. Horizontal scrollbar mustn't appear.\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\nDisable horizontal scrollbar in Hex Panel I see two ways how it can be solved, implementing both would be good.\r\n*  Properly interact with Qt sizing system sizing policy, minimum size, preferred size\r\n* Dynamic resizing mode - select most suitable size based on available space. Would be added as one more choice in list of available widths. @ITAYC0HEN  Both sounds great! Implemented dynamic column selection in #1516 while fixing other problems with column calculations. That leaves implementing correct interaction qt layout system and size reporting. Only half of the proposed solution - dynamic column count selection. With it you won't see horizontal scrollbar unless there isn't space for single column or mode gets changed to fixed column count. \r\n\r\nSize hinting still needs to be implemented.\r\n\r\nI don't think that  disabling horizontal scrollbar directly would be useful as that would only hide the content but desired result is preventing state where scrollbar is necessary.\r\nIt would be good to update issue description and title in case someone decides to do this without reading rest of discussion.\r\n  mj and mlj are now implemented in r2, so it should be enough to have it in cutter too\r\n  This fixes an issue related to #1138 where the image build was not passing. The image now builds and runs for me locally when building without cache.\r\n\r\nPlease note that someone should still re-setup the build pipeline on [Docker Hub](https://hub.docker.com/r/radareorg/cutter/builds) since there's currently no image auto build configured for the cutter repository:\r\n\r\n```\r\nNo autobuilds available\r\nThis repository doesn't have any autobuilds\r\n```\r\n\r\nCheers\r\n\r\n\r\n Alright I'm merging this, I will look into setting up the autobuild on Docker hub!\r\nThanks! Alright, let me know if I can help heyo @xarkes , was there any work regarding the auto build? Docker hub still shows \"No autobuilds available\" :)\r\n\r\nlet me know if I can help :) @ps1337 can you do this? It would be great! sure, i'll do some testing and then i'll get back to you Hey @xarkes \r\n\r\nThere's no image in the build tab yet. I've been able to build the image locally (`make build-nc`) and run a container from it without any problems. It seems that the builder uses an outdated version of cutter since the bug listed above has been fixed quite a while ago :( Ah okay, I didn't know the build was still failing :D\r\n\r\nIt can't build `AboutDialog.cpp`:\r\n\r\n```\r\n./src/dialogs/AboutDialog.cpp: In constructor 'AboutDialog::AboutDialog(QWidget*)':\r\n../src/dialogs/AboutDialog.cpp:30:46: error: expected ')' before 'CUTTER_VERSION_FULL'\r\n+ tr(\"Version\") + \" \" CUTTER_VERSION_FULL \"<br/>\"\r\n^~~~~~~~~~~~~~~~~~~~\r\n)\r\n../src/dialogs/AboutDialog.cpp:29:24: note: to match this '('\r\nQString aboutString(\"<h1>Cutter</h1>\"\r\n^\r\nmake: *** [Makefile:2729: AboutDialog.o] Error 1\r\n```\r\n\r\nWhen looking into `AboutDialog.cpp` you can find:\r\n\r\n```\r\n[...]\r\nQString aboutString(\"<h1>Cutter</h1>\"\r\n                        + tr(\"Version\") + \" \" CUTTER_VERSION_FULL \"<br/>\"\r\n                        + tr(\"Using r2-\") + R2_GITTAP\r\n                        + \"<p><b>\" + tr(\"Optional Features:\") + \"</b><br/>\"\r\n                        +  [...]\r\n```\r\n\r\nIsn't this supposed to be:\r\n\r\n```\r\n \" \" + CUTTER_VERSION_FULL + \"<br/>\"\r\n```\r\n\r\n(2nd line, including the **+** for concatenation) ?\r\n\r\nThe strange this is, when i build the image locally, compiling `AboutDialog.cpp` succeeds:\r\n\r\n```\r\ng++ -c -pipe -O2 -std=gnu++11 -Wall -W -D_REENTRANT -fPIC -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS -DQT_NO_DEBUG -DQT_SVG_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -I../src -I. -I../src -I../src/core -I../src/widgets -I../src/dialogs -I../src/common -I../src/plugins -isystem /usr/include/libr -isystem /usr/include/x86_64-linux-gnu/qt5 -isystem /usr/include/x86_64-linux-gnu/qt5/QtSvg -isystem /usr/include/x86_64-linux-gnu/qt5/QtWidgets -isystem /usr/include/x86_64-linux-gnu/qt5/QtGui -isystem /usr/include/x86_64-linux-gnu/qt5/QtNetwork -isystem /usr/include/x86_64-linux-gnu/qt5/QtCore -I. -isystem /usr/include/libdrm -I. -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -o AboutDialog.o ../src/dialogs/AboutDialog.cpp\r\n```\r\n\r\nAny idea o.O ? I have an alpine image ready that I will push soon, so maybe we can ignore this error...  **Is your feature request related to a problem? Please describe.**\r\n\r\nTo make it easier to locate function/symbol names\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\n**Describe alternatives you've considered**\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\nUsual function in IDA (one color)\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/16493991/56462697-341a5880-63d0-11e9-8f98-7171d3936ab2.png)\r\n\r\nImport thunk function in IDA\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/16493991/56462542-91f97100-63cd-11e9-89c2-3da3d0b98f7d.png)\r\n\r\nImported symbol in IDA\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/16493991/56462985-cb81aa80-63d4-11e9-9a1e-88adb1eef27c.png)\r\n\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/16493991/56462550-aa698b80-63cd-11e9-86ce-58479170a61e.png)\r\n\r\nUsual function in Binja\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/16493991/56462617-07b20c80-63cf-11e9-9454-de1352f727ff.png)\r\n\r\nImport thunk function in Binja\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/16493991/56462637-5bbcf100-63cf-11e9-9fa5-572d2186cb0b.png)\r\n\r\nImported symbol in Binja\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/16493991/56462975-9412fe00-63d4-11e9-8f6b-f005ac8779ec.png)\r\n\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/16493991/56462664-cb32e080-63cf-11e9-9a3f-1b9514681bef.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n Yep agreed! isn't it an issue for r2? because we simply take r2's output > \r\n> \r\n> isn't it an issue for r2? because we simply take r2's output\r\n\r\nThat's why I added the `radare2` label. I think it'd be better to open this issue in r2 side, otherwise it's less\nlikely to get attention from r2 devs\n\nOn Mon, Apr 22, 2019, 23:22 Paul I. <notifications@github.com> wrote:\n\n> isn't it an issue for r2? because we simply take r2's output\n>\n> That's why I added the radare2 label.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/issues/1478#issuecomment-485539313>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AEZ7M4W6PKG4UXDQ5P25ZXLPRYNANANCNFSM4HHKPZ7A>\n> .\n>\n We can have both :) right now 'ec num red' is whats used because colorization happens before the replacing afaik, so changing the address will result in the same color for the flag/func.\r\n\r\ni will add another color . assign me this thing fixed in r2 side honors `ec flag` As for @trufae, this is now merged in r2. @pelijah, Can you check if we can make it work in Cutter now?  Meh\r\n\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/16493991/57196354-d86dd480-6f64-11e9-8063-2051c1602d47.png)\r\n\r\n```\r\n>radare2 -v\r\nradare2 3.5.0-git 22049 @ windows-x86-64 git.3.4.1-327-g26b4bc3da\r\ncommit: 26b4bc3daba5edcfde2d25a52a4eee55485e70de build: 05.05.2019__18:19:13,97\r\n``` Should the theme you use ads this line in order to support the new color eval?\r\n\r\n\r\n@trufae how can we make your PR work here? We nned instructions haha No  **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\nTo ease navigation and provide user with all the information available in the hexdump\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\nMark available flags and available comments in hexdump, this should be optional. Hi, I would like to take this up. Can you please elaborate a bit on what is expected in terms of the design? How it should look like? Thanks, got it. I'll change the design implementation.  A frontend for the '$' command. What would you want to see there? A list of aliases?  yes, being able to click at them to execute (or assign a keybinding to it)\r\n\r\nmany r2pm packages use alias commands to expose their functionality why do GUI users care about CLI aliases? I mean, Cutter users probably won't use their keyboard except renaming, searching, commenting and jumping between widgets. Not for typing commands I would rather integrate the regular r2 autocompletion in the console widget It's there already   **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\nCurrently, when Plugin author uses `print(\"hello, world\")`, the output would be executed on the terminal which was executing Cutter (on windows usually there won't be a terminal for this).\r\n\r\nThis is unexpected behavior since we have a Console Widget\r\n\r\n\r\n**Describe the solution you'd like**\r\nI want STDOUT to be redirected to the Console widget. In general, but specifically here for Python Plugins.\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n\r\nrelated issue: #966  Related: https://github.com/radare/radare2/pull/13622 (to not clutter the output as much) We have `CutterCore::message()`\r\nhttps://github.com/radareorg/cutter/blob/master/src/core/Cutter.cpp#L722 So you can just use `cutter.message()` instead of `print()`. But people use print, which is okay, should be redirected to Cutter.Message And there are more ways to generate output to STDOUT and STDERR in python (and any other thingies), not only prints. Even when python throws exception I'd expect it to be on Console widget and not on the executing Terminal (which not always exists)  Python and plugins are initialized before MainWindow. So we have to change the order. We can have some kind of buffer for output received before the MainWindow has been started. There might be something interesting in it, even without Python Plugins. I agree that this should be the default. Existing interactive disassembler platforms already behave this way, so now all of your users will expect Cutter to behave the same way whether you like it or not \ud83d\ude05\r\n\r\nMight be best not to overthink this. IDA has a pretty straightforward implementation that you can draw from for Cutter. \r\n\r\nThey hook the interpreter's stdout/stderr stream with a simple proxy object:\r\n\r\nhttps://github.com/idapython/src/blob/15b9ab2535222e492cd21b8528c27f763fb799d6/python/init.py#L98-L101\r\n\r\nThe proxy simply passes along any file descriptor writes to `idaapi.msg()`, eg `cutter.message()`:\r\n\r\nhttps://github.com/idapython/src/blob/15b9ab2535222e492cd21b8528c27f763fb799d6/python/init.py#L59-L62\r\n @gaasedelen sounds great! Want to have a look and try solve it?\r\nActually, maybe this can be fixed globally somehow for the whole application https://github.com/radareorg/cutter/issues/966 Yes, this should not be done in python. There are ways to replace/redirect the actual stderr/stdout fds. Working on this issue in PR #1821. If you have any additional suggestions or recommendations based on your experience please add them there.  **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\nTo enhance highlight in hexdump\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\nSequence of bytes which construct addresses would be highlighted in some way which will indicate that they're clickable. I was trying to figure out what exactly this issue aims to solve. There is already some form of highlighting in Disassembly. For example, the corresponding function/instruction is highlighted when the byte is clicked in hexdump and viceversa. Can you please this describe this in more detail?  **Is your feature request related to a problem? Please describe.**\r\n\r\nFor now both radare2 and cutter show every line with an \"absolute\" address. Sometimes it is unnecessary, but at the same time it would be nice to see the address of the function.\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\nI am often using Vim/NeoVim with a switch between absolute line numbering and relative one.\r\nAnd recently saw similar concept in [Verso](https://gitlab.com/p8n/verso) (Electron GUI for Panopticon).\r\n\r\n**Describe alternatives you've considered**\r\n\r\nIt might be useful also to disable addresses at all, keeping only at the basic block beginning or function beginning.\r\n\r\n**Additional context**\r\n[![image](https://user-images.githubusercontent.com/203261/54802600-ff1ec700-4ca6-11e9-926c-07b3050cd561.png)](https://gitlab.com/p8n/verso/raw/master/screenshot.png)\r\n![image](https://user-images.githubusercontent.com/203261/54802705-63418b00-4ca7-11e9-9c5c-8f17b8cb61c3.png)\r\n\r\nRelated issue in radare2: https://github.com/radare/radare2/issues/13458 does r2 provide it through some eval config? As pointed out in the linked r2 issue, there is `asm.reloff`. Improving it's look on the r2 side doesn't need to change the interface for enabling or using it. Partially fixed in #2244 and #2243. Both implements `asm.reloff` but it's not exactly what was asked here which is to show the offsets relative to the current seek. \r\n\r\nI am not completely convinced that it is necessary for Cutter (in CLI it makes navigation easier), but I will leave it open for now.  **Environment information**\r\n* Operating System: Windows 7\r\n* Cutter version: Version 1.8.0 Using r2-3.3.0\r\n* File format: PE\r\n\r\n**Describe the bug**\r\n\r\nXrefs dialog shows broken arrows, probably bug in `pd--` command:\r\n\r\n![image](https://user-images.githubusercontent.com/14978853/54695194-8f8bc900-4b3a-11e9-9677-e2571d2f2f84.png)\r\n\r\nProbably we have to force `e asm.lines=false` while getting disasm preview\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. open any binary\r\n2. find any symbol which 100% has references and select it by mouse (in disasm widget)\r\n3. press X key\r\n4. go through refs list and find any which has an arrows intersecting the reference instruction (should be in the middle), arrows will stop displaying below it\r\n\r\n**Expected behavior**\r\n\r\nThere are two options:\r\n- Arrows have to be shown properly (requires r2 fix)\r\n- disable arrows as suggested above\r\n I vote yes for disabling temporarily \"e asm.lines=false\". This will also remove the whole empty spaces from the left.\r\nI would also suggest disabling `asm.bytes` for the preview.\r\n\r\nThese two together will allow us to narrow the Preview pane and expand the left pane (so users can see the full instruction)  **Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\nString in comments are difficult to perceive when doing analysis.\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen.\r\nFor UI requests, don't hesitate to post some draws. -->\r\n\r\nAbility to use a different and configurable color for strings in comments  For tracing (works in esil and debugger) cutter needs:\r\n\r\n* dt is the command that handles all the traces (add a widget to inspect the linear disasm (dtd)\r\n* delete all the traces dt-*\r\n* traces can be recorded in different tags, see dtt command\r\n* create graph with dtg\r\n* enable/disable tracing is done via the dbg.trace variable\r\n* the graph.trace variable should be honored in the graph to get folded the nodes that hasnt been executed\r\n* Add the ability to change the tracing information on any address  **Is your feature request related to a problem? Please describe.**\r\n\r\nDisassembly and Graph widget can be slow.\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\n\r\nImplement cache usage \r\n CC @xarkes @optizone  @ITAYC0HEN @xarkes I would like to work on this issue. Can you hint me on how I should proceed? From the examples I have tried in my PC, I couldn't manage to see any instance where the graph/disassembly widget is noticeably slow. Can you link me to some example binary files/code which I can use to figure out how it gets slower?\r\nAlso, can you link me to that case where it would be more appropriate to fix the disassembly printer if it is an existing issue?  root1@ubuntu:~$ docker image list\r\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\r\nradareorg/cutter    latest              c00c6a238c81        3 weeks ago         1.41GB\r\n\r\nroot1@ubuntu:~$  docker run -it radareorg/cutter\r\nCutter: Starting with UID:GID :\r\nusermod: invalid user ID 'r2'\r\nUsage: usermod [options] LOGIN\r\n\r\nOptions:\r\n  -c, --comment COMMENT         new value of the GECOS field\r\n  -d, --home HOME_DIR           new home directory for the user account\r\n  -e, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE\r\n  -f, --inactive INACTIVE       set password inactive after expiration\r\n                                to INACTIVE\r\n  -g, --gid GROUP               force use GROUP as new primary group\r\n  -G, --groups GROUPS           new list of supplementary GROUPS\r\n  -a, --append                  append the user to the supplemental GROUPS\r\n                                mentioned by the -G option without removing\r\n                                him/her from other groups\r\n  -h, --help                    display this help message and exit\r\n  -l, --login NEW_LOGIN         new value of the login name\r\n  -L, --lock                    lock the user account\r\n  -m, --move-home               move contents of the home directory to the\r\n                                new location (use only with -d)\r\n  -o, --non-unique              allow using duplicate (non-unique) UID\r\n  -p, --password PASSWORD       use encrypted password for the new password\r\n  -R, --root CHROOT_DIR         directory to chroot into\r\n  -s, --shell SHELL             new login shell for the user account\r\n  -u, --uid UID                 new UID for the user account\r\n  -U, --unlock                  unlock the user account\r\n  -v, --add-subuids FIRST-LAST  add range of subordinate uids\r\n  -V, --del-subuids FIRST-LAST  remove range of subordinate uids\r\n  -w, --add-subgids FIRST-LAST  add range of subordinate gids\r\n  -W, --del-subgids FIRST-LAST  remove range of subordinate gids\r\n  -Z, --selinux-user SEUSER     new SELinux user mapping for the user account\r\n\r\nerror: exec: \"/opt/cutter/build/Cutter\": stat /opt/cutter/build/Cutter: no such file or directory\r\n Yo yo, @ps1337 our Docker guy - can you have a look here? :P\r\nI know nothing about containers :))\r\n Thanks, I'm looking into it @tfrnghub if you want you can try it now by building the image locally using `make build-nc` after pulling my fork and `cd` ing to the `docker` folder. Cheers. FYI, I tried to pull & run from dockerhub today and the old (or broken) build still appears to be up.\r\n\r\n```\r\ndoom@ubuntu:~$ sudo docker images\r\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\r\nradareorg/cutter    latest              c00c6a238c81        3 months ago        1.41GB\r\n\r\ndoom@ubuntu:~$ sudo docker run radareorg/cutter\r\nCutter: Starting with UID:GID :\r\nusermod: invalid user ID 'r2'\r\nUsage: usermod [options] LOGIN\r\n\r\nOptions:\r\n  -c, --comment COMMENT         new value of the GECOS field\r\n  -d, --home HOME_DIR           new home directory for the user account\r\n  -e, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE\r\n  -f, --inactive INACTIVE       set password inactive after expiration\r\n                                to INACTIVE\r\n  -g, --gid GROUP               force use GROUP as new primary group\r\n  -G, --groups GROUPS           new list of supplementary GROUPS\r\n  -a, --append                  append the user to the supplemental GROUPS\r\n                                mentioned by the -G option without removing\r\n                                him/her from other groups\r\n  -h, --help                    display this help message and exit\r\n  -l, --login NEW_LOGIN         new value of the login name\r\n  -L, --lock                    lock the user account\r\n  -m, --move-home               move contents of the home directory to the\r\n                                new location (use only with -d)\r\n  -o, --non-unique              allow using duplicate (non-unique) UID\r\n  -p, --password PASSWORD       use encrypted password for the new password\r\n  -R, --root CHROOT_DIR         directory to chroot into\r\n  -s, --shell SHELL             new login shell for the user account\r\n  -u, --uid UID                 new UID for the user account\r\n  -U, --unlock                  unlock the user account\r\n  -v, --add-subuids FIRST-LAST  add range of subordinate uids\r\n  -V, --del-subuids FIRST-LAST  remove range of subordinate uids\r\n  -w, --add-subgids FIRST-LAST  add range of subordinate gids\r\n  -W, --del-subgids FIRST-LAST  remove range of subordinate gids\r\n  -Z, --selinux-user SEUSER     new SELinux user mapping for the user account\r\n\r\nerror: exec: \"/opt/cutter/build/Cutter\": stat /opt/cutter/build/Cutter: no such file or directory\r\n\r\n```\r\n\r\nThis is on a fresh ubuntu 18.04 desktop VM. docker hub says `This repository doesn't have any autobuilds` o.O\r\n\r\nCan someone with access to the build chain look into this? Oh indeed, here you can see the last log: https://pastebin.com/mDEZrrM4 \n\nHeyo,\n\nyes this is solved since we have a new docker image.\n\nGreetings \n\n-----Original Message-----\nFrom: Itay Cohen <notifications@github.com>\nTo: radareorg/cutter <cutter@noreply.github.com>\nCc: ps <pschmied@mailbox.org>, Mention <mention@noreply.github.com>\nSent: Wed, 11 Sep 2019 15:04\nSubject: Re: [radareorg/cutter] can not run the docker correctly  (#1138)\n\n@ps1337 what is your insights on this one? :)\nyou think it is solved?\n\n-- \nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/radareorg/cutter/issues/1138#issuecomment-530370297    Add flag in Hexdump context menu As suggested by Maijin in #1520 this should probably reuse the same menu as used by disassembly and graph widgets. Related #1708 and #1709   Support hex.compact eval variable in Hexdump Widget  Right now cutter only sets the first imm base of the instruction, but latest r2 (current git) supports ahi0, ahi1, ahi2,... cutter must support this too.\r\n\r\n<img width=\"506\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1408600/71073789-517f0c80-2181-11ea-93bf-4c0ac9e81d79.png\">\r\n  ```\r\ndef mycpu(a):\r\n def assemble(s):\r\n     return [1, 2, 3, 4]\r\n\r\n def disassemble(buf):\r\n     try:\r\n         opcode = get_opcode(buf)\r\n         opstr = optbl[opcode][1]\r\n         return [4, opstr]\r\n     except:\r\n         return [4, \"unknown\"]\r\n\r\nprint(\"Registering MYCPU disasm plugin...\")\r\nprint(r2lang.plugin(\"asm\", mycpu))\r\n``` The example is for r2lang, indeed it would be very useful but I think we need to integrate r2lang first :)\r\nNow we could provide templates for making plugins directly from Cutter, but I'm not sure if that's very relevant. Maybe once we have a proper python console?  Trace calls/syscalls in emulation, debug mode using `dcs*` etc. I don't think that the Debug project contains only things that required for debugger to work, same as issues in X-refs project don't imply that x-ref widget doesn't work  Probably makes sense to make a separate project called \"Debugger\nImprovemeints\", and move them here.\n\nOn Fri, Jul 19, 2019, 4:04 AM Itay Cohen <notifications@github.com> wrote:\n\n> I don't think that the Debug project contains only things that required\n> for debugger to work, same as issues in X-refs project don't imply that\n> x-ref widget doesn't work\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/issues/1023?email_source=notifications&email_token=AABRT7NHRW6XKSM573YJ6Y3QADEFDA5CNFSM4GMEGA62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2JUB7I#issuecomment-512966909>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABRT7KLHRROOQ7BWG5NFG3QADEFDANCNFSM4GMEGA6Q>\n> .\n>\n  Add step back/continue back in emulation mode. @xarkes actually no, it should work for debugging too, it was the idea of the reversible debugger in radare2 - it shares the code between ESIL and native debug  * Add Permissions column (rwx)\r\n* Add context menu to copy name or address / end address into clipboard\r\n* Add column showing md5/sha1/... (configurable see https://github.com/radareorg/cutter/issues/925\r\n* Ordinal\r\n* Add hvaddr? Greetings @ITAYC0HEN,  I would like to work on this issue. Kindly guide me through the process of contributing to this issue. Thank you. Hi, new developers are always welcome.\r\n\r\nI don't know your experience level so don't mind if some of the steps seem obvious.\r\n\r\n* Start by reading this https://cutter.re/docs/code.html\r\n* See https://github.com/radareorg/cutter/blob/master/docs/source/building.rst for compilation instructions\r\n* Get the build working\r\n* Run cutter and get familiar with how the sections widget looks currently\r\n* Find the the source files implementing sections widget\r\n* If necessary read https://doc.qt.io/qt-5/model-view-programming.html for basic understanding of how Qt model system works. It will be necessary for adding more columns.\r\n* Come up with a plan for things that need to be done and discuss it here. Just because something was mentioned in issue description doesn't necessarily means that it is still relevant or  good feature.\r\n* When code changes are done and you are ready for PR, please follow the PR template.\r\n\r\n\"Test plan **(required)**\" really means that.  If those are GUI changes make a screenshot. \r\nMake a basic list of steps for checking that changes are working as expected. This also a good point to consider any potential edge cases or different kind of interesting inputs if you didn't already do it while writing code. Actually perform the steps you described when making the PR even if they seem trivial and you did them during development, it helps catching any makes done during final cleanup and making sure you didn't forget anything.\r\n\r\n\r\nFeel free to ask questions in cutter telegram or IRC to get you started faster although some of the questions specific to this issue might be better discussed here.  Add the following entries:\r\n\r\n* [x] Seek in hexdump\r\n* [x] Seek in disassembly\r\n* [x] Show X-Refs\r\n* [x] Copy address in clipboard\r\n* [x] Copy name to clipboard\r\n* [ ] Toggle Highlight\r\n\r\n I don't see how seek in hexdump and disassembly would work with current UI.\r\n* For synchronized memory widgets it is just seek in all widgets which should be already implemented, no need for \"seek in X\".\r\n* There be multiple copies of unsynchronized hexdump, disasembly widgets. How to display it in usable way?  I think that what it means is to:\r\n\r\n1. Perform a seek to the address\r\n2. Set focus to the opened hexdump\\disas widgets. If none exists, open one and focus to it\r\n\r\nIn IDA, when you open an address in new (hex\\disas\\graph) widget, the new widget it unsynced -- and I like it\r\n\r\n**Jump in new Window**\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/58028129-c3777080-7b22-11e9-93a2-55631c4faf7c.png)\r\n\r\n\r\n\r\n**New window is not synced with current seek, and not changes the current seek for all widgets**\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/58028216-eefa5b00-7b22-11e9-8b83-c8c7c8c4afe6.png)\r\n\r\n\r\n\r\n Seek+focus and new unsynced window both make sense. There are a few remaining tasks:  debug widgets, documentation an testing if it can be used from python.  It makes a lot of people happy. Note for myself: https://cukic.co/files/presentations/2016-09--for-a-brighter-qfuture--ivan-cukic--qtcon.pdf I think we need a better plan here. Someone have examples or ideas how can we achieve this? Users want speed. Multi-threading usually hides underlying performance issues rather than solving them like we discussed on radare2.  **Is your feature request related to a problem? Please describe.**\r\nTo select a particular zone to analyze\r\n\r\n**Describe the solution you'd like**\r\nAdd anal.in selector in advanced analysis (similar to #395, #873) ping @ITAYC0HEN  I think that `anal.in` options can also be added to the Preference widget if users want to modify it after the initial analysis (I wanted to do this now and had to used radare2 commands) I'd like to work on this issue since it is related to the analysis section in the preferences widget (see PR #2332). \r\n\r\nI see that the search widget has a similar option (for `search.in`), but not all of the possible values are included in the selector. Is it for a particular reason? In this case, do you think the values for `anal.in` should be also limited?  Currently there is opened Coverity account for Cutter, but we have to setup periodic builds. ping @XVilka I think you started on ci.rada.re but I don't know the status? @xarkes I uber busy these days, will finish the setup (it is mostly done) as soon as I have some free time. @XVilka any update about this? Yes we are waiting for the new infrastructure. The Coverity itself was having problems until a week ago or so. Now you\nneed to wait a bit since I move CI on a new physical server.\n\nOn Sun, Feb 17, 2019, 6:12 PM xarkes <notifications@github.com wrote:\n\n> Yes we are waiting for the new infrastructure.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/radareorg/cutter/issues/855#issuecomment-464438031>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAMZ_VfhkUGdofJ1zgI1o3JC7YGtkYoaks5vOSsTgaJpZM4XvqEP>\n> .\n>\n See https://community.synopsys.com/s/article/Coverity-Scan-Update This one is better now - you can setup it with GitHub Actions: https://github.com/ruby/actions-coverity-scan/blob/master/.github/workflows/coverity-scan.yml Once we check that radare2 GitHub Actions work, we can copy them to the Cutter: https://github.com/radareorg/radare2/blob/master/.github/workflows/coverity-scan.yml Solved in https://github.com/radareorg/cutter/actions?query=workflow%3Acoverity-scan  The idea is to have some presets layouts (Default, Debug, ...) and have a menu that allows one to switch from one another.\r\nAlso the menu should provide a way for the user to save a layout and reopen it later. @optizone you may want to have a look on this :) Here is my proposal for this.\r\n\r\n* Add `serialize(QJsonObject)` and  `deserialize(QJsonObject)` methods to CutterDockWidget. Different widgets can then store their view related fields in there. For example word width and kind for hexwidget or layout algorithm for graph view. That would allow saving a layout containing multiple widgets in different configurations.\r\n* Move unsync status saving to `serialize(QJsonObject)` for `MemoryDockWidget`.\r\n* Define the layout as structure consisting of\r\n  * list of widgets\r\n  * geometry \r\n  * dictionary with `serialize(QJsonObject)` output for all widgets\r\n* refactor mainWindow to load save layout to this structure instead of bunch qsettings fields\r\n Sounds very good to me! QSettings is actually more powerful than how we currently use it since it has builtin support for arrays and groups, but I find it kind of awkward and json can definitely be more flexible and clean here. Sounds about right. I'd be happy for helper functions for layout authors to basically read the author's mind and sitck the widgets as they plan.  Not sure how much of them helper functions Qt provides by default, I don't find it very nice to design the looks how I want via code.\r\n\r\nAlso, we have some glitches in the layouts sometimes and maybe we should discuss them as part of the PR - for example, the surprising change of Cutter's window size on emulation&debug, the opening of new widgets outside the main dock, etc #694 implements most of the changes. Second part should add layout management UI.\r\n* simple dialog for renaming and deleting layouts\r\n* in the layout save dialog use input combox instead of plain line input to allow more easily update existing layout.  Find a way to sign our release binaries (at least for windows and osx).\r\nThat will be useful for the debugger for OS X. I guess you're meaning a code signing certificate rather than developer GPG signatures? In this case yes, but I think having developer GPG signature is also a good practice. There's a good how-to guide for signing Windows binaries here, but someone's gonna have to pony up $$$ for a certificate https://learn.adafruit.com/how-to-sign-windows-drivers-installer/overview Could we get GPG signatures distributed with the releases first? Authenticode signing feels a bit fluffy. @wst-ci, That's unrelated. The goal of having a code signature is to allow the debugger on Mac OS to work. GPG signature will require radare2, sdb and capstone between many dependancies, to be signed too. > GPG signature will require radare2, sdb and capstone between many dependancies, to be signed too\r\n\r\nWhy will it require this? Just get all the devs to create a detached signature for Cutter.zip, Cutter.dmg and Cutter.AppImage? He means this makes no sense to sign Cutter, while it bundles not signed dependencies. > He means this makes no sense to sign Cutter, while it bundles not signed dependencies.\r\n\r\nThat's what I meant yes. Ah right, so you're saying that the Cutter build process pulls-in various unsigned binaries, so signing the final release doesn't provide full integrity verification? Should we keep this open? Yes because without signed binaries cutter won't be able to debug on OS X > Should we keep this open?\r\n\r\n@ITAYC0HEN Yes please, I'd really like to see a way to verify the integrity of the Cutter downloads, e.g. via detached GPG signatures. For sensitive work, I am unable to use Cutter unless I have assurance of it's integrity. Hi @xarkes, thanks for your response.\r\n\r\nThe fact that some of the included libraries aren't signed/verified could pose an issue for sensitive work, as I'd essentially be running untrusted/unverified code in an environment where integrity is absolutely imperative (e.g. malware analysis work). Is it feasible for the included libraries to be integrity checked too when they're imported, or do the Capstone and R2 projects not make this easy?\r\n\r\nProviding hashes in the releases changelog would help a bit, but as they're distributed using the same method as the binaries themselves (GitHub releases), the assurance is severely degraded (as an attacker who could modify the released binaries could also just edit the hashes).\r\n\r\nInstead, would it be feasible for you add detached GPG signatures to the releases page, a bit like the [KeePassXC](https://github.com/keepassxreboot/keepassxc/releases) project does (as an example).\r\n\r\nThis lack of integrity assurance is currently a bit a barrier to me using Cutter in secure environments / for sensitive work, so I am hoping that we can find a solution. I understand that since Cutter is open source, these sort of requests would normally be opened up to contributors to implement, however since this is related to the actual packaging/release process, I don't think that anybody who isn't already fully on the Cutter team could really help that much.\r\n\r\nIn regards to building Cutter myself, that would perhaps help in some cases, however it doesn't necessarily help in assuring that the source code that I am compiling was actually written by the trusted Cutter developers, unless I were to manually code review every line. [Reproducible builds](https://en.wikipedia.org/wiki/Reproducible_builds) could be a project to look at for the future?\r\n\r\nThanks for your help,\r\nJamie Is there any way to build cutter from sources and auto sign it ? I have been able to follow this procedure for radare2 and debug with it under macOS 10.13. I would be happy to do the same with cutter!\r\nhttps://github.com/radareorg/radare2/blob/master/doc/macos.md\r\n To answer your question, no there is no support implemented as of today :-)  Allow to increase/decrease global font size (not only disasm)  Qt doesn't recommand overwritting default font.\r\nThe best is to use environment variables like `QT_SCALE_FACTOR`.\r\nFeel free to reopen. Reopening because I think it's still useful anyway. People don't have to do hack through the command lines. This would be good for my poor vision (#675). Are you saying that I can 'hack' this manually by setting the QA_SCALE_FACTOR envvar in bash and then opening Cutter? Exactly, or directly in command line:\r\n`QT_SCALE_FACTOR=2.0 ./Cutter` Ah interesting, that might help me. Is there an equivalent for Windows 10?\r\n\r\nIf not, I guess you could just compile Cutter in Cygwin and launch it that way with the scaling. You can do the same in the cmd prompt:\r\n```\r\nset QT_SCALE_FACTOR=2.0\r\nCutter.exe\r\n``` Ah right, that's actually really helped. I guess the default value is 1.0?\r\n\r\nIt's just issue #675 causing issues now.\r\n\r\nThank you.  ### Work environment\r\n\r\n| Questions                                            | Answers\r\n|------------------------------------------------------|--------------------\r\n| OS/arch/bits (mandatory)                             | Windows 10 64-bit\r\n| File format of the file you reverse (mandatory)      | PE\r\n| Architecture/bits of the file (mandatory)            | x86_64\r\n| Cutter and r2 version, See About Cutter (mandatory)  | Version 1.7.1 / Using r2 2.8.0\r\n| Show version information **full output** (See About Cutter) in a pastebin document (mandatory) | https://gist.github.com/jamie-cyc/4b03dfc6d356f718429ec50a1e4e6ec1\r\n\r\n### Expected behavior\r\n\r\nThe Cutter interface should fit cleanly within the Window size, and the cursor should be accurately lined up with the buttons.\r\n\r\n### Actual behavior\r\n\r\nAt the top there is a black gap of around 30 pixels (see screenshots). Cutter also overhangs off the bottom of the screen.\r\n\r\nThis misalignment also causes the cursor to be out of line. I have to click above a button in order to actually click it (see screenshots).\r\n\r\n### Steps to reproduce the behavior \r\n\r\nRun Cutter on Windows 10 with 'Display Scaling' set to a high value.\r\nI personally use 300% scaling as I have poor vision.\r\nI expect that some applications will not work as intended with such large scaling, but most stuff is usable.\r\n\r\n### Additional Logs, screenshots, source-code,  configuration dump, ...\r\n\r\n[cutter-misaligned.zip](https://github.com/radareorg/cutter/files/2353514/cutter-misaligned.zip)\r\n Is there a QT envvar that would allow me to set an over/underscan for the application? That would be a temporary measure at least. What do you think, is this a dupe of #999? @pelijah @karliss @thestr4ng3r  It would be good to have a more systematic approach to this instead of bunch of user reports about it not working in certain configurations. I'll try to write some notes so that we can understand where we are and how much is missing.  I loaded a binary with `-m` and it looks like the strings offsets are wrong (it points to unmapped memory) Plus it doesn't print all strings (when dealing with multiple files) The issue lies in radare2. The matter is that the virtual address is wrong for some sections. Do we have an open issue for this in the radare2 repository? No I don't think so. Should be transferred to radare2, @radare  Tracked in radareorg/radare2#10722  Currently when analyzing a function, I often click on different blocks, which makes the widget change its seeked address.\r\nBut when I want to leave that function with escape (or the back arrow) it goes back to where I clicked until it leaves the function (so it can take a while).\r\nMaybe we should just use `ss` (silent seek) when we are inside a function? Sounds good to me I think it should be optional feature. Should be the default, but with the option to tweak it (Configurable) in IDA it counts something in seek-history only if it is not in the same function **or** it is a double click on an address of the function if it is in a condition.\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/52909959-3dd0f400-3299-11e9-9bfa-f2265ad1975f.png)\r\n\r\n I think silent seek is not the best thing to do. Having some history in `CutterSeekable` class would be probably better. @xarkes so what do you think should be done with this issue? Someone must implement something proper and efficient.\r\nI think what you described above with IDA behaviour is good. R2 pushes item in history before seek or undo not after the seek so ss should result in B+1.  The branch arrows indicate the jump destinations. Most of the time, you follow the arrow from a specific instruction to see where it goes. If you have to scroll to follow it, the arrow disappears. It would be more useful if the arrow from the selected line (and maybe even the ones pointing to that line) would be preserved when scrolling. x64dbg does this, for example.\r\n\r\nRelated feature request when debugger is ready: color the arrow from selected line red, if the jump condition evaluates to true.\r\nThanks for all the hard work and have a good day! Not an easy issue imho. Should be solved when we have a new Disassembly Widget and arrows aren't drawn as text anymore. Oh sorry, I thought it was just to set the current block jump lines dashed so it's easier to see. @xarkes please see this. For the future refactoring of Disassembly widget @xarkes did you respect this in your solution? No it doesn't because currently nothing is cached. Once cache is supported for the disassembly widget, this would be easy to implement. Nope, the disassembly logic is still the same - only the offsets you see are disassembled. Nothing more nothing less.  Add right click dump section on section panel via `iO d/S/.text`. It should save it in raw and ask the user where to put it with a dialog. Requires changes on r2 side.\r\n```\r\n[0x1400355c4]> iO d/S/.text\r\n'rabin2' is not recognized as an internal or external command, operable program or batch file.\r\n``` Huho @trufae   https://github.com/radare/radare2/blob/master/libr/core/cmd_info.c#L460 Yes it's known issue, it has been discussed already on r2core Is there any solution? ping @Maijin \r\nGot any update here? I think we can parse the section size and `wtf` it  using `wtf size @ section_addr` Not so simple because the command you suggest implies we work on no-VA mode which is not case :S \r\n\r\nThis depends from either:\r\n- https://github.com/radare/radare2/pull/9715 \r\nor\r\n- SIOL fix in Rbin \r\n\r\nBoth issues that are long lasting\r\n @radare @Maijin is this feasible now?  Nop issue radare/radare2#9715 is still not fixed and SIOL fix is still not done Ok main blocker has been merged, now we can call rabin2 functionnalities directly from r2 without hacks can you link\\write down an example? Will still have to wait this is refactored on radare2 side you can use wtf, iO or dmd for debugger maps, but for the iO part yes, we need to refactor stuff to provide a clean api to do this, proposals are welcome  Here's an example of a non-symmetric graph. I used the blue arrows to emphasize the issues:\r\n\r\n![image](https://user-images.githubusercontent.com/20182642/39857618-a15af624-543c-11e8-84ed-ab08fc461665.png)\r\n\r\nI'd expect the red arrow at the top to be in the same line of the green one. \r\nI'd expect the bottom block to be centered as the top one.\r\n\r\nHere's how IDA did it:\r\n![image](https://user-images.githubusercontent.com/20182642/39857723-21fda56a-543d-11e8-8bd0-6ba9b7b23c85.png)\r\n\r\nAnother thing is to give the possibility to move and relocate the blocks in order to give the user more flexibility.\r\n\r\nWe can open a Meta issue with Graph related enhancements. Note that I'd like to move those widgets into an external library https://github.com/radareorg/cutter/issues/467\r\nWhich will bring more contributors to it I think.  Hello.\r\nI just want to suggest add opportunity make background-color for instruction in graph view/disassembly (like IDA).\r\nIt will be very fine if you implements this via \"ecHi/ecHw\" radare2 commands.\r\nThis is very need durring visual trace-analysis from another utils.\r\nThank you.\r\n\r\n* [x] Right click color block\r\n* [ ] Right click instruction line. You mean that you need this with a script through the API or you also need to do this manually with a mouse? Mostly it is necessary via r2 API (ecHi/ecHw) Manually tried calling `ecHi` and `ecHw` from console and then View->Refresh Contents, it looks like there is something wrong with disasm parsing. Can you get rgb-code of instruction in cutter? I don't think so but that can be quickly implemented I believe.\r\nYou can get disassembly colors if you use `e scr.html=true` and disassemble an instruction. I have a crash after set \"e scr.html=true\" and View->Refresh Contents. Hello.\r\nAfter last release a color highlighting has worked. But not everywhere...\r\n![temp](https://user-images.githubusercontent.com/22872513/44486002-d597b180-a66b-11e8-983a-cc2d837639c0.png)\r\nI highlighted two instruction through \"ecHi red\" command. probably would be implemented soon by @xarkes :)\r\nRemember this issue when you'll push it My current solution doesn't use radare2 API. The issue says \"like\". It doesn't matter how it's matter what. ecH are simply nice to have, but any solution is good :)  @xarkes is your solution supports highlight a specific instruction? Not it doesn't but it would work quite similarly if anyone wanted to do so. @optizone you may want to look at this one as well. Can be combined with your solution via\r\nRight click (on line, or when multi-lines are selected):\r\n`Highlight -> Line(s) -> Color picker`\r\n\r\nRight Click anywhere in the block:\r\n\r\n`Highlight -> Block -> Color picker`\r\n I wouldn't say trivial since the logic is a bit different :p I can highlight a line with cutter api? reopening. @v3ctor said correctly, this isssue requested highlighting in disas view as well. Implemented in #1911 BTW, what about `ecHi` highlighting? It is more convenient because I can highlight everything with one command in console window withour writing python scripts. For example `ecHi green @@.drcov.log`\r\nNow it works but only if instruction has one color. It seems `ecHi` works but not good. Are you going to remove this completely? Just `ecHi color @offset`.\r\nOk.\r\nI see what you implements `cutter.BasicBlockHighlighter()` for highlighting basic block. But I can see for instruction.\r\n```\r\ndir(cutter)\r\n['BasicBlockHighlighter', 'Configuration', 'CutterCore', 'CutterDockWidget', 'CutterPlugin', 'MainWindow', '__builtins__', '__doc__', '__loader__', '__name__', '__package__', '__spec__', 'cmd', 'cmdj', 'core', 'json', 'message', 'refresh', 'version']\r\n```\r\nIs it implemented in python?  Add -nn in the loading options -nn is a hack.. we should provide a proper way to expose that bininfo with the rbin refactor instead of having an special loading method\n\n> On 11 Feb 2018, at 06:33, Maijin <notifications@github.com> wrote:\n> \n> Add -nn in the loading options\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n> \n Yes indeed. > -nn is a hack.. we should provide a proper way to expose that bininfo with the rbin refactor instead of having an special loading method\r\n\r\n@radare is such way exists now? any idea how to continue with this?", "text_all_count": 87135, "text_word_token": ["Looking", "into", "this", "NUMBER", "QT", "support", "read", "only", "features", "including", "comboboxes", "NUMBER", "Will", "submit", "a", "PR", "when", "I", "get", "a", "successful", "build", "NUMBER", "I", "ve", "just", "submitted", "a", "PR", "to", "make", "the", "parsing", "tab", "in", "the", "hexdump", "widget", "read", "only", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "pull", "request", "implement", "issue", "NUMBER", "Currently", "the", "hotkey", "to", "toggle", "the", "base", "be", "set", "to", "h", "however", "I", "see", "that", "Cutter", "try", "to", "mimic", "some", "vim", "key", "bindings", "j", "and", "k", "and", "because", "of", "that", "h", "might", "not", "be", "the", "best", "option", "NUMBER", "I", "ve", "also", "considered", "b", "or", "maybe", "even", "t", "but", "I", "would", "need", "some", "feedback", "on", "that", "NUMBER", "As", "I", "already", "mention", "in", "the", "comments", "of", "NUMBER", "the", "user", "needs", "to", "press", "the", "hotkey", "twice", "to", "switch", "from", "decimal", "to", "hexadecimal", "base", "but", "only", "if", "the", "value", "be", "decimal", "by", "default", "after", "the", "first", "switch", "the", "hotkey", "works", "as", "I", "expect", "it", "to", "NUMBER", "That", "be", "because", "I", "m", "use", "ahj", "to", "get", "the", "current", "immediate", "base", "and", "it", "looks", "like", "this", "command", "specifies", "it", "only", "if", "it", "was", "change", "before", "NUMBER", "If", "there", "be", "no", "immbase", "in", "ahj", "output", "I", "just", "assume", "that", "the", "value", "be", "hexadecimal", "but", "this", "be", "not", "always", "true", "NUMBER", "I", "m", "not", "sure", "how", "to", "fix", "this", "yet", "NUMBER", "Also", "since", "I", "revert", "NUMBER", "d", "NUMBER", "this", "works", "in", "graph", "view", "Another", "potential", "problem", "be", "that", "this", "hotkey", "be", "not", "respecting", "the", "condition", "from", "LINK", "L", "NUMBER", "L", "NUMBER", "I", "can", "t", "just", "disable", "it", "from", "there", "since", "aboutToShowSlot", "be", "run", "only", "on", "the", "context", "menu", "trigger", "NUMBER", "That", "would", "mean", "that", "the", "hotkey", "would", "be", "disabled", "every", "time", "a", "user", "right", "clicks", "on", "an", "address", "that", "do", "not", "meet", "this", "condition", "and", "enable", "only", "after", "the", "user", "right", "clicks", "on", "an", "address", "that", "meets", "this", "condition", "NUMBER", "I", "thought", "about", "add", "a", "method", "to", "disable", "enable", "the", "hotkey", "that", "would", "be", "call", "every", "time", "DissasemblyWidget", "GraphWidget", "be", "update", "but", "I", "m", "not", "sure", "if", "this", "be", "the", "best", "approach", "and", "where", "exactly", "such", "method", "should", "be", "call", "NUMBER", "Test", "plan", "required", "TAG", "NUMBER", "Go", "to", "the", "disassembly", "graph", "tab", "NUMBER", "Find", "an", "instruction", "with", "a", "numerical", "value", "NUMBER", "Press", "h", "or", "right", "click", "Toggle", "Immediate", "Base", "Hex", "Dec", "cutter", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cc", "NUMBER", "fdc", "NUMBER", "NUMBER", "ea", "NUMBER", "dcc", "NUMBER", "c", "NUMBER", "ee", "NUMBER", "e", "NUMBER", "gif", "Closing", "issue", "close", "NUMBER", "TAG", "Thanks", "for", "the", "review", "NUMBER", "That", "s", "probably", "relate", "to", "that", "check", "in", "DisassemblyContextMenu", "aboutToShowSlot", "I", "m", "work", "on", "it", "and", "hopefully", "I", "will", "be", "able", "to", "push", "relevant", "change", "soon", "NUMBER", "NUMBER", "Sounds", "really", "cool", "For", "that", "the", "code", "would", "need", "to", "know", "which", "value", "will", "be", "change", "by", "ahi", "I", "just", "notice", "that", "only", "the", "first", "value", "be", "affected", "ex", "NUMBER", "byte", "rax", "NUMBER", "NUMBER", "x", "NUMBER", "ahi", "NUMBER", "change", "NUMBER", "to", "NUMBER", "x", "NUMBER", "after", "switching", "to", "att", "syntax", "movb", "NUMBER", "x", "NUMBER", "NUMBER", "rcx", "ahi", "NUMBER", "affects", "NUMBER", "x", "NUMBER", "But", "there", "could", "be", "exception", "from", "this", "rule", "or", "maybe", "I", "m", "just", "misunderstanding", "something", "NUMBER", "Not", "sure", "what", "to", "do", "next", "the", "only", "thing", "I", "came", "up", "with", "be", "parsing", "the", "opcode", "but", "that", "do", "not", "sound", "like", "a", "good", "idea", "knowing", "how", "many", "different", "instruction", "sets", "syntaxes", "radare", "NUMBER", "support", "NUMBER", "NUMBER", "Honestly", "I", "m", "out", "of", "ideas", "for", "this", "one", "NUMBER", "I", "tried", "reading", "radare", "NUMBER", "source", "code", "and", "I", "believe", "that", "there", "be", "no", "way", "to", "get", "the", "default", "immediate", "base", "without", "reimplementing", "parts", "of", "radare", "NUMBER", "but", "I", "could", "be", "very", "wrong", "NUMBER", "Having", "the", "value", "with", "analysis", "hints", "applied", "that", "will", "be", "affected", "by", "ahi", "would", "be", "much", "better", "since", "that", "helps", "us", "solve", "NUMBER", "But", "I", "m", "again", "not", "sure", "how", "to", "implement", "that", "NUMBER", "That", "s", "one", "of", "my", "first", "more", "serious", "contributions", "at", "least", "more", "serious", "than", "anything", "before", "and", "I", "m", "not", "sure", "if", "I", "should", "ask", "on", "IRC", "or", "open", "an", "issue", "on", "radare", "NUMBER", "sweat_smile", "I", "think", "there", "be", "no", "way", "currently", "to", "determine", "what", "be", "the", "base", "use", "for", "a", "number", "when", "no", "hint", "be", "defined", "yet", "NUMBER", "I", "see", "LINK", "L", "NUMBER", "which", "seems", "to", "mean", "that", "whatever", "be", "returned", "by", "the", "disassembler", "be", "shown", "to", "the", "user", "NUMBER", "Capstone", "seems", "to", "show", "the", "number", "as", "decimal", "if", "TAG", "or", "ahi", "NUMBER", "TAG", "write", "Your", "checklist", "for", "this", "pull", "request", "I", "ve", "read", "the", "guidelines", "for", "contribute", "TAG", "to", "this", "repository", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "TAG", "I", "ve", "update", "the", "documentation", "TAG", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Convert", "annotation", "offsets", "to", "positions", "Qt", "text", "edit", "NUMBER", "Wrong", "positions", "be", "obvious", "when", "use", "decompiler", "based", "highlight", "but", "it", "also", "affects", "context", "menu", "interactions", "NUMBER", "Test", "plan", "required", "Before", "image", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "TAG", "After", "image", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "TAG", "Closing", "issue", "Closes", "NUMBER", "TAG", "You", "can", "view", "comment", "on", "or", "merge", "this", "pull", "request", "online", "at", "LINK", "Commit", "Summary", "Handle", "non", "ASCII", "characters", "in", "decompiler", "widget", "NUMBER", "File", "Changes", "M", "src", "widgets", "DecompilerWidget", "NUMBER", "cpp", "TAG", "NUMBER", "Patch", "Links", "LINK", "LINK", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "I", "be", "trying", "to", "format", "organize", "the", "decompiled", "code", "to", "make", "it", "easy", "for", "others", "to", "follow", "it", "but", "the", "code", "lines", "sticking", "to", "each", "other", "not", "well", "structured", "and", "I", "can", "t", "organize", "it", "within", "cutter", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "By", "add", "an", "option", "for", "the", "decompiler", "widget", "to", "automatically", "format", "the", "code", "and", "allow", "manual", "format", "by", "make", "the", "decompiler", "widget", "act", "as", "the", "code", "editor", "NUMBER", "I", "be", "trying", "to", "format", "organize", "the", "decompiled", "code", "to", "make", "it", "easy", "for", "others", "to", "follow", "it", "but", "the", "code", "lines", "sticking", "to", "each", "other", "Could", "you", "provide", "an", "image", "of", "code", "lines", "sticking", "to", "each", "other", "Just", "wanted", "to", "verify", "if", "it", "be", "the", "expected", "behavior", "NUMBER", "Capture", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "NUMBER", "daf", "NUMBER", "db", "NUMBER", "PNG", "I", "be", "sorry", "if", "I", "didn", "t", "make", "it", "clear", "what", "I", "mean", "about", "sticking", "lines", "of", "code", "be", "something", "like", "the", "if", "condition", "within", "the", "blue", "rectangle", "in", "the", "attached", "capture", "As", "it", "has", "no", "empty", "line", "before", "for", "separation", "from", "the", "lines", "above", "it", "to", "make", "code", "easier", "to", "read", "NUMBER", "Besides", "that", "I", "wanted", "to", "cut", "the", "long", "string", "within", "a", "red", "rectangle", "in", "the", "attached", "capture", "to", "multi", "lines", "to", "make", "it", "easier", "to", "follow", "NUMBER", "Briefly", "I", "just", "want", "to", "be", "able", "to", "add", "spaces", "and", "newlines", "as", "code", "editor", "to", "organize", "format", "the", "code", "to", "make", "it", "easier", "to", "follow", "NUMBER", "NirmalManoj", "Firstly", "build", "them", "from", "sources", "will", "achieve", "different", "results", "than", "downloading", "the", "compiled", "cutter", "version", "from", "the", "official", "site", "which", "already", "contains", "the", "r", "NUMBER", "ghidra", "plugin", "by", "default", "Secondly", "I", "know", "that", "s", "the", "expected", "behavior", "however", "I", "just", "recommended", "it", "in", "order", "to", "make", "the", "decompiler", "more", "user", "friendly", "NUMBER", "Besides", "achieving", "the", "flexibility", "to", "do", "whole", "tasks", "within", "one", "place", "the", "decompiler", "itself", "NUMBER", "I", "know", "that", "feature", "maybe", "will", "not", "be", "provide", "soon", "as", "it", "may", "not", "be", "essential", "functionality", "but", "it", "will", "be", "cool", "to", "get", "achieved", "NUMBER", "Thanks", "in", "advance", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "TAG", "Previously", "the", "Rename", "Function", "dialog", "would", "pop", "up", "in", "the", "top", "left", "corner", "if", "triggered", "inside", "the", "Disassembly", "or", "Decompiler", "view", "NUMBER", "This", "commit", "change", "the", "behaviour", "so", "that", "the", "Dialog", "will", "now", "be", "pop", "up", "in", "the", "center", "of", "the", "MainWindow", "by", "simply", "replacing", "the", "parent", "pointer", "of", "the", "QInputDialog", "object", "with", "that", "of", "the", "mainWindow", "QInputDialog", "getText", "this", "mainWindow", "NUMBER", "NUMBER", "See", "screenshots", "below", "Before", "AppImage", "version", "before", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bca", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "dec", "NUMBER", "b", "NUMBER", "ceedd", "NUMBER", "png", "After", "after", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ceb", "NUMBER", "fd", "NUMBER", "png", "Test", "plan", "required", "TAG", "NUMBER", "Select", "a", "function", "inside", "the", "Disassembly", "Decompiler", "view", "NUMBER", "Press", "N", "or", "Right", "Click", "and", "choose", "the", "Rename", "Function", "NUMBER", "option", "TAG", "Closing", "issue", "TAG", "haha", "yeah", "it", "was", "a", "pet", "peeve", "of", "mine", "p", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "MR", "add", "the", "remaining", "options", "to", "the", "Analysis", "Widget", "that", "were", "propose", "by", "ITAYC", "NUMBER", "HEN", "in", "LINK", "Megabeets", "H", "NUMBER", "jBD", "NUMBER", "Hxv", "edit", "which", "be", "anal", "NUMBER", "in", "anal", "NUMBER", "prelude", "anal", "NUMBER", "ptrdepth", "For", "the", "anal", "NUMBER", "in", "option", "I", "selected", "the", "following", "options", "only", "All", "executable", "maps", "io", "NUMBER", "maps", "NUMBER", "x", "All", "maps", "io", "NUMBER", "maps", "Current", "map", "io", "NUMBER", "map", "Raw", "raw", "Current", "block", "block", "Current", "mapped", "section", "bin", "NUMBER", "section", "All", "mapped", "sections", "bin", "NUMBER", "sections", "However", "if", "you", "think", "other", "options", "should", "be", "there", "I", "can", "add", "them", "too", "NUMBER", "Test", "plan", "required", "NUMBER", "Open", "Cutter", "and", "go", "to", "Edit", "Preferences", "Analysis", "NUMBER", "Select", "one", "or", "more", "options", "in", "the", "drop", "down", "Search", "boundaries", "for", "analysis", "and", "check", "with", "the", "console", "that", "the", "value", "of", "anal", "NUMBER", "in", "change", "accordingly", "NUMBER", "Change", "the", "value", "of", "the", "option", "Pointer", "depth", "and", "check", "with", "the", "console", "that", "the", "value", "of", "anal", "NUMBER", "ptrdepth", "change", "accordingly", "NUMBER", "Change", "the", "value", "of", "the", "option", "Prelude", "and", "check", "with", "the", "console", "that", "the", "value", "of", "anal", "NUMBER", "prelude", "change", "accordingly", "NUMBER", "Close", "and", "reopen", "the", "dialog", "and", "check", "that", "the", "last", "selected", "values", "for", "these", "options", "be", "maintained", "anal", "options", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "eece", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "a", "NUMBER", "ab", "NUMBER", "gif", "Closing", "issue", "Closes", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "The", "Windows", "Plugins", "entry", "be", "now", "disabled", "by", "default", "and", "only", "enable", "if", "there", "be", "plugins", "available", "to", "load", "from", "see", "this", "issue", "LINK", "for", "more", "information", "NUMBER", "Note", "that", "I", "was", "unable", "to", "set", "a", "Tooltip", "not", "sure", "if", "that", "s", "how", "you", "do", "it", "in", "QT", "be", "new", "to", "it", "but", "here", "s", "the", "code", "I", "implement", "and", "then", "delete", "after", "I", "had", "no", "success", "with", "it", "C", "ui", "menuPlugins", "setToolTip", "QString", "tooltip", "test", "ui", "menuPlugins", "setToolTipsVisible", "true", "TAG", "Test", "plan", "required", "a", "Open", "Cutter", "__with__", "plugins", "loaded", "and", "check", "if", "Windows", "Plugins", "be", "enable", "b", "Open", "Cutter", "__without__", "any", "plugins", "loaded", "and", "check", "if", "Windows", "Plugins", "be", "disabled", "before_after", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "df", "NUMBER", "png", "TAG", "TAG", "Closing", "issue", "close", "NUMBER", "TAG", "For", "the", "tooltip", "you", "might", "try", "setting", "it", "on", "the", "action", "which", "has", "plugin", "menu", "as", "submenu", "instead", "of", "menu", "itself", "NUMBER", "Not", "sure", "if", "it", "will", "work", "but", "it", "s", "worth", "trying", "NUMBER", "Sorry", "I", "don", "t", "quite", "understand", "what", "you", "mean", "here", "could", "you", "elaborate", "Anyways", "I", "ve", "read", "a", "bit", "of", "QT", "documentation", "and", "I", "don", "t", "think", "it", "s", "possible", "to", "have", "a", "tooltip", "on", "a", "QMenu", "object", "NUMBER", "setToolTipsVisible", "also", "only", "enable", "tooltips", "for", "it", "s", "actions", "i", "NUMBER", "e", "NUMBER", "the", "plugins", "my", "bad", "so", "unless", "I", "ve", "miss", "something", "we", "could", "do", "the", "following", "instead", "add", "a", "dummy", "entry", "to", "the", "Plugins", "menu", "with", "a", "title", "like", "No", "plugins", "loaded", "see", "documentation", "or", "change", "the", "title", "of", "the", "menu", "from", "Plugins", "to", "No", "plugins", "loaded", "for", "which", "I", "would", "then", "revert", "the", "change", "inside", "MainWindow", "NUMBER", "ui", "and", "just", "create", "an", "if", "else", "statement", "instead", "ITAYC", "NUMBER", "HEN", "Yup", "sounds", "good", "to", "me", "NUMBER", "I", "m", "just", "struggling", "a", "bit", "with", "the", "tooltip", "on", "the", "QMenu", "since", "it", "will", "only", "show", "up", "for", "it", "s", "actions", "NUMBER", "I", "ve", "tried", "implement", "karliss", "suggestion", "but", "that", "didn", "t", "seem", "to", "work", "either", "and", "neither", "did", "it", "with", "connect", "NUMBER", "Are", "you", "guys", "certain", "that", "tooltips", "can", "be", "shown", "on", "a", "specific", "QMenu", "Being", "new", "to", "the", "Qt", "Framework", "I", "sadly", "couldn", "t", "find", "anything", "NUMBER", "With", "the", "help", "of", "the", "people", "over", "at", "the", "Qt", "Forums", "I", "managed", "to", "finally", "display", "the", "tooltips", "and", "kinda", "fully", "understood", "what", "you", "meant", "karliss", "NUMBER", "Anyways", "hit", "me", "up", "if", "any", "change", "be", "necessary", "other", "than", "that", "I", "think", "the", "pull", "request", "should", "be", "complete", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "I", "add", "the", "explanation", "on", "how", "to", "build", "docs", "for", "Cutter", "to", "fix", "NUMBER", "Test", "plan", "required", "Build", "docs", "and", "check", "outputs", "NUMBER", "Closing", "issue", "close", "NUMBER", "I", "notice", "that", "I", "did", "not", "explain", "how", "to", "build", "Shiboken", "properly", "in", "this", "pull", "request", "NUMBER", "However", "in", "my", "environment", "this", "step", "seems", "to", "be", "unnecessary", "NUMBER", "If", "it", "be", "essential", "I", "will", "add", "this", "NUMBER", "Add", "a", "section", "for", "build", "Cutter", "use", "CMake", "on", "macOS", "NUMBER", "Make", "sure", "to", "instruct", "how", "to", "install", "most", "of", "the", "things", "use", "homebrew", "and", "make", "sure", "to", "explain", "how", "to", "build", "Shiboken", "properly", "NUMBER", "Those", "be", "the", "parts", "that", "need", "documentation", "the", "most", "NUMBER", "Sure", "NUMBER", "I", "will", "add", "setup", "part", "of", "Shiboken", "in", "this", "documentaiton", "NUMBER", "ITAYC", "NUMBER", "HEN", "karliss", "Thank", "you", "so", "much", "I", "fix", "this", "according", "to", "your", "reviews", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "VS", "Code", "configuration", "aims", "at", "ease", "of", "setup", "for", "newcomers", "NUMBER", "TAG", "Test", "plan", "required", "NUMBER", "Follow", "the", "VS", "Code", "setup", "guide", "and", "verify", "if", "it", "works", "NUMBER", "TAG", "TAG", "Closing", "issue", "TAG", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "since", "it", "be", "for", "both", "contribute", "to", "docs", "and", "contribute", "to", "code", "i", "thought", "it", "would", "be", "better", "to", "put", "it", "in", "common", "file", "contribute", "NUMBER", "rst", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "close", "NUMBER", "TAG", "I", "be", "not", "sure", "about", "having", "the", "git", "NUMBER", "on", "Cutter", "docs", "as", "I", "prefer", "to", "link", "to", "the", "full", "tutorial", "NUMBER", "We", "be", "considering", "having", "it", "in", "its", "dedicated", "page", "NUMBER", "I", "be", "sure", "that", "prefer", "it", "not", "to", "be", "in", "the", "main", "cutter", "NUMBER", "re", "docs", "contribute", "page", "as", "this", "page", "should", "stay", "clean", "and", "without", "practical", "instructions", "change", "to", "another", "page", "to", "a", "separate", "one", "as", "discussed", "on", "DM", "please", "re", "format", "and", "I", "ll", "check", "then", "Reformatted", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Added", "documentation", "button", "on", "help", "screen", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ac", "NUMBER", "dbbe", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "NUMBER", "png", "Test", "plan", "required", "NUMBER", "Checkout", "the", "pr", "on", "your", "machine", "and", "compile", "it", "NUMBER", "NUMBER", "Open", "Cutter", "NUMBER", "Go", "the", "the", "Help", "menu", "and", "click", "on", "the", "Documentation", "button", "NUMBER", "Observe", "that", "your", "browser", "was", "opened", "with", "the", "user", "documentation", "of", "Cutter", "Closing", "issue", "close", "NUMBER", "Environment", "information", "Operating", "System", "Arch", "Linux", "x", "NUMBER", "_", "NUMBER", "NUMBER", "zen", "NUMBER", "NUMBER", "zen", "Cutter", "version", "NUMBER", "Obtained", "from", "Built", "from", "source", "Downloaded", "release", "from", "Cutter", "website", "or", "GitHub", "x", "Distribution", "repository", "Describe", "the", "bug", "TAG", "When", "renaming", "function", "it", "only", "shows", "the", "renamed", "function", "in", "the", "comment", "NUMBER", "Ghidra", "decompiler", "was", "not", "able", "to", "shows", "the", "renamed", "function", "NUMBER", "To", "Reproduce", "NUMBER", "Rename", "function", "NUMBER", "Refresh", "decompiler", "Expected", "behavior", "TAG", "Shows", "renamed", "function", "in", "decompiler", "Peek", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "bac", "NUMBER", "ce", "NUMBER", "da", "NUMBER", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "gif", "vcsAPIFORWBF", "NUMBER", "zip", "LINK", "The", "gif", "and", "the", "binary", "I", "m", "work", "on", "NUMBER", "Function", "in", "graph", "be", "sym", "NUMBER", "vcsAPIFORWBF", "NUMBER", "dll_vcsDatabaseDeleteUser", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "The", "recent", "SDB", "header", "PR", "NUMBER", "LINK", "requires", "us", "to", "add", "the", "sdb", "header", "s", "path", "separately", "from", "the", "other", "r", "NUMBER", "headers", "NUMBER", "Test", "plan", "required", "Build", "Cutter", "with", "the", "update", "submodule", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "TAG", "add", "documentation", "button", "on", "help", "screen", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "close", "NUMBER", "TAG", "NUMBER", "h", "NUMBER", "qu", "NUMBER", "rkyb", "NUMBER", "t", "Hi", "NUMBER", "I", "see", "you", "close", "a", "PR", "and", "opened", "a", "new", "one", "so", "I", "think", "you", "be", "unaware", "of", "force", "push", "to", "the", "branch", "NUMBER", "What", "it", "means", "that", "you", "can", "amend", "previous", "commit", "and", "clean", "up", "the", "mess", "in", "your", "fork", "NUMBER", "Please", "don", "t", "close", "PRs", "for", "something", "so", "trivial", "NUMBER", "I", "suggest", "you", "use", "some", "git", "GUI", "client", "like", "SublimeMerge", "LINK", "or", "GitKraken", "which", "will", "help", "easily", "and", "intuitively", "modify", "commit", "history", "and", "force", "push", "etc", "NUMBER", "Lastly", "always", "create", "a", "new", "branch", "for", "a", "PR", "based", "on", "upstream", "master", "Ok", "get", "it", "NUMBER", "I", "don", "t", "know", "much", "about", "git", "thanks", "NUMBER", "You", "mean", "whenever", "i", "create", "a", "pull", "request", "after", "merge", "it", "i", "should", "close", "that", "one", "right", "And", "further", "request", "will", "made", "by", "again", "forking", "No", "NUMBER", "I", "mean", "create", "a", "new", "branch", "in", "your", "fork", "every", "time", "you", "start", "work", "on", "something", "and", "delete", "that", "branch", "once", "the", "PR", "gets", "merge", "NUMBER", "No", "need", "to", "fork", "again", "and", "also", "leave", "the", "fork", "master", "as", "be", "NUMBER", "Got", "it", "like", "said", "i", "created", "another", "branch", "and", "commit", "from", "that", "branch", "NUMBER", "what", "should", "i", "do", "with", "this", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Graphviz", "be", "not", "enable", "for", "AppImage", "build", "NUMBER", "This", "PR", "add", "CUTTER_ENABLE_GRAPHVIZ", "ON", "to", "cmake", "options", "NUMBER", "TAG", "Test", "plan", "required", "NUMBER", "Make", "sure", "it", "build", "correctly", "NUMBER", "Check", "build", "appimage", "for", "the", "Graphviz", "TAG", "TAG", "Closing", "issue", "Closes", "NUMBER", "TAG", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "TAG", "I", "wanted", "to", "contribute", "to", "this", "project", "but", "i", "didn", "t", "had", "much", "knowledge", "so", "i", "thought", "documentation", "was", "perfect", "NUMBER", "its", "a", "small", "change", "but", "if", "these", "kind", "of", "small", "change", "be", "fine", "i", "be", "happy", "to", "do", "these", "in", "future", "as", "i", "be", "just", "start", "use", "cutter", "NUMBER", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "ok", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "By", "now", "the", "debug", "mode", "be", "having", "very", "hard", "background", "color", "of", "current", "instruction", "that", "program", "be", "run", "to", "i", "don", "t", "know", "how", "to", "call", "it", "NUMBER", "Let", "me", "explain", "it", "screenshot", "be", "bellow", "NUMBER", "This", "be", "color", "when", "program", "hits", "break", "point", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "fd", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bbf", "NUMBER", "png", "NUMBER", "Color", "after", "user", "click", "on", "step", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "png", "The", "color", "be", "pretty", "dark", "and", "similar", "the", "background", "color", "of", "current", "program", "NUMBER", "After", "i", "click", "on", "different", "code", "block", "or", "different", "instruction", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "png", "So", "the", "problem", "here", "be", "current", "instruction", "be", "a", "focused", "instruction", "so", "it", "be", "use", "both", "color", "of", "mouse", "clicking", "highlight", "and", "debug", "NUMBER", "The", "final", "color", "be", "mix", "from", "NUMBER", "color", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Add", "something", "like", "green", "dot", "or", "green", "arrow", "like", "mov", "eax", "ebx", "or", "move", "eax", "ebx", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "Remove", "highlight", "color", "It", "isn", "t", "very", "nice", "because", "user", "can", "click", "on", "widget", "anyway", "NUMBER", "Additional", "context", "After", "click", "step", "into", "the", "color", "went", "to", "same", "dark", "color", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "png", "Well", "i", "think", "the", "problem", "be", "both", "color", "theme", "and", "the", "overlapping", "problem", "NUMBER", "I", "think", "add", "icon", "or", "any", "object", "to", "display", "be", "more", "complex", "than", "just", "adjust", "the", "theme", "NUMBER", "Does", "QT", "support", "something", "like", "border", "color", "so", "if", "you", "get", "my", "idea", "the", "color", "can", "be", "overlapped", "but", "it", "still", "has", "the", "different", "border", "color", "which", "could", "be", "easier", "to", "see", "NUMBER", "Is", "a", "popup", "saying", "can", "t", "do", "it", "really", "any", "better", "than", "doing", "nothing", "How", "about", "showing", "this", "info", "on", "the", "status", "bar", "instead", "I", "find", "it", "a", "bit", "annoying", "to", "move", "the", "mouse", "to", "close", "it", "every", "time", "I", "press", "N", "by", "mistake", "NUMBER", "\u05e3", "would", "have", "these", "levels", "in", "the", "slider", "None", "Automatic", "Custom", "for", "automatic", "I", "d", "go", "for", "aaa", "unless", "you", "believe", "that", "aaaa", "be", "better", "but", "not", "both", "Hi", "I", "know", "that", "the", "GCC", "NUMBER", "be", "quite", "old", "but", "it", "s", "the", "default", "compiler", "with", "Debian", "NUMBER", "and", "I", "m", "trying", "to", "compile", "Cutter", "inside", "this", "platform", "the", "radare", "NUMBER", "compiles", "and", "I", "m", "use", "a", "recent", "Qt", "NUMBER", "and", "all", "other", "dependencies", "NUMBER", "So", "far", "I", "fix", "some", "of", "the", "compile", "error", "generate", "by", "the", "not", "fully", "C", "NUMBER", "conformance", "of", "GCC", "NUMBER", "but", "I", "don", "t", "know", "how", "to", "fix", "this", "NUMBER", "Building", "CXX", "object", "CMakeFiles", "Cutter", "NUMBER", "dir", "widgets", "GraphGridLayout", "NUMBER", "cpp", "NUMBER", "o", "In", "file", "include", "from", "home", "user", "cutter", "src", "widgets", "GraphGridLayout", "NUMBER", "cpp", "NUMBER", "NUMBER", "home", "user", "cutter", "src", "common", "BinaryTrees", "NUMBER", "h", "NUMBER", "NUMBER", "error", "use", "PointSetSegmentTree", "TAG", "BaseType", "BaseType", "conflict", "with", "a", "previous", "declaration", "home", "user", "cutter", "src", "common", "BinaryTrees", "NUMBER", "h", "NUMBER", "NUMBER", "note", "previous", "declaration", "use", "BaseType", "class", "SegmentTreeBase", "TAG", "home", "user", "cutter", "src", "widgets", "GraphGridLayout", "NUMBER", "cpp", "In", "member", "function", "void", "GraphGridLayout", "calculateEdgeMainColumn", "GraphGridLayout", "LayoutState", "const", "home", "user", "cutter", "src", "widgets", "GraphGridLayout", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "no", "matching", "function", "for", "call", "to", "PointSetMinTree", "PointSetMinTree", "size_t", "int", "home", "user", "cutter", "src", "widgets", "GraphGridLayout", "NUMBER", "cpp", "NUMBER", "NUMBER", "note", "candidates", "be", "In", "file", "include", "from", "home", "user", "cutter", "src", "widgets", "GraphGridLayout", "NUMBER", "cpp", "NUMBER", "NUMBER", "home", "user", "cutter", "src", "common", "BinaryTrees", "NUMBER", "h", "NUMBER", "NUMBER", "note", "PointSetMinTree", "PointSetMinTree", "const", "PointSetMinTree", "home", "user", "cutter", "src", "common", "BinaryTrees", "NUMBER", "h", "NUMBER", "NUMBER", "note", "candidate", "expects", "NUMBER", "argument", "NUMBER", "provide", "home", "user", "cutter", "src", "common", "BinaryTrees", "NUMBER", "h", "NUMBER", "NUMBER", "note", "PointSetMinTree", "PointSetMinTree", "PointSetMinTree", "home", "user", "cutter", "src", "common", "BinaryTrees", "NUMBER", "h", "NUMBER", "NUMBER", "note", "candidate", "expects", "NUMBER", "argument", "NUMBER", "provide", "home", "user", "cutter", "src", "widgets", "GraphGridLayout", "NUMBER", "cpp", "In", "function", "void", "optimizeLinearProgramPass", "size_t", "std", "vector", "TAG", "std", "vector", "TAG", "int", "std", "vector", "TAG", "int", "std", "vector", "TAG", "bool", "home", "user", "cutter", "src", "widgets", "GraphGridLayout", "NUMBER", "cpp", "NUMBER", "NUMBER", "warning", "comparison", "between", "sign", "and", "unsigned", "integer", "expressions", "Wsign", "compare", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "widgets", "GraphGridLayout", "NUMBER", "cpp", "NUMBER", "o", "Error", "NUMBER", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "all", "Error", "NUMBER", "make", "all", "Error", "NUMBER", "The", "problem", "be", "cause", "by", "this", "code", "inside", "cutter", "src", "common", "BinaryTrees", "NUMBER", "h", "template", "TAG", "class", "PointSetSegmentTree", "public", "SegmentTreeBase", "TAG", "use", "BaseType", "SegmentTreeBase", "TAG", "public", "use", "BaseType", "BaseType", "The", "problem", "be", "the", "second", "forward", "alias", "declaration", "as", "the", "comiler", "interprets", "without", "use", "the", "previous", "BaseType", "alias", "NUMBER", "Any", "idea", "to", "fix", "this", "error", "Thank", "you", "Hi", "XVilka", "Why", "not", "to", "install", "gcc", "NUMBER", "which", "should", "be", "available", "in", "Wheezy", "LINK", "I", "ll", "try", "but", "I", "m", "not", "sure", "if", "this", "will", "work", "as", "I", "need", "to", "recompile", "all", "with", "the", "new", "GCC", "NUMBER", "including", "Qt", "NUMBER", "NUMBER", "It", "would", "be", "much", "more", "useful", "if", "you", "spent", "your", "energy", "improving", "or", "at", "least", "investigating", "the", "remote", "debugging", "problem", "in", "radare", "NUMBER", "Perhaps", "it", "isn", "t", "a", "waste", "of", "time", "NUMBER", "when", "use", "cross", "compile", "for", "embedded", "systems", "it", "s", "very", "common", "that", "_ancient_", "compilers", "be", "use", "NUMBER", "And", "if", "we", "need", "to", "execute", "Cutter", "on", "such", "platforms", "then", "we", "need", "to", "compile", "with", "such", "compilers", "NUMBER", "That", "s", "will", "be", "true", "until", "_full_", "remote", "debugging", "will", "be", "support", "NUMBER", "In", "any", "case", "I", "ll", "try", "to", "not", "consume", "the", "time", "of", "the", "great", "developers", "of", "this", "project", "NUMBER", "Thank", "you", "all", "for", "your", "comments", "wink", "Regards", "NUMBER", "should", "we", "add", "two", "new", "options", "to", "the", "context", "menu", "Show", "X", "Refs", "default", "with", "shortcut", "X", "Show", "X", "Refs", "To", "no", "shortcut", "Show", "X", "Refs", "From", "no", "shortcut", "or", "just", "hide", "if", "the", "find", "results", "be", "NUMBER", "we", "will", "still", "show", "that", "nothing", "find", "for", "the", "Xrefs", "from", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "implement", "an", "X", "Refs", "action", "for", "references", "function", "names", "global", "variables", "constant", "variables", "NUMBER", "See", "the", "GIFs", "Global", "variables", "Xrefs", "globals", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "b", "d", "NUMBER", "bf", "NUMBER", "fb", "NUMBER", "gif", "Functions", "Xrefs", "function", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "gif", "Constants", "Xrefs", "constants", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "gif", "TAG", "Test", "plan", "required", "NUMBER", "Open", "any", "binary", "NUMBER", "NUMBER", "Select", "Show", "X", "Refs", "action", "after", "clicking", "any", "function", "name", "global", "variable", "constant", "variable", "NUMBER", "It", "should", "open", "the", "X", "Refs", "Dialog", "NUMBER", "Observe", "if", "all", "X", "Refs", "be", "shown", "NUMBER", "NUMBER", "To", "make", "sure", "go", "to", "the", "reference", "in", "the", "disassembly", "widget", "and", "open", "X", "Refs", "from", "there", "NUMBER", "Compare", "the", "two", "dialogs", "that", "you", "get", "from", "the", "disassembly", "and", "from", "the", "decompiler", "and", "ensure", "that", "they", "be", "the", "same", "NUMBER", "NUMBER", "Check", "code", "NUMBER", "TAG", "Update", "NUMBER", "Fetch", "PR", "NUMBER", "LINK", "before", "compile", "this", "PR", "NUMBER", "TAG", "Closing", "issue", "TAG", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "The", "important", "modifications", "and", "additions", "in", "this", "PR", "be", "NUMBER", "Saves", "the", "previous", "function", "s", "address", "and", "if", "the", "newly", "decompiled", "function", "be", "the", "same", "as", "the", "previous", "one", "the", "scroll", "position", "will", "remain", "the", "same", "NUMBER", "NUMBER", "Modified", "signal", "breakpointsChanged", "to", "breakpointsChanged", "RVA", "offset", "NUMBER", "Removed", "emit", "instructionChanged", "from", "all", "function", "that", "emit", "breakpointsChanged", "NUMBER", "TAG", "Display", "jumps", "while", "toggling", "breakpoint", "Before", "BeforeFixingDisplayJumping", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "gif", "Display", "position", "doesn", "t", "change", "while", "toggling", "breakpoint", "After", "AfterFixingDisplayJumping", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ee", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "b", "NUMBER", "fbab", "NUMBER", "b", "NUMBER", "d", "NUMBER", "gif", "You", "can", "notice", "the", "same", "change", "in", "other", "actions", "also", "e", "NUMBER", "g", "NUMBER", "Add", "Rename", "Remove", "names", "Refresh", "Add", "Delete", "Modify", "comments", "etc", "NUMBER", "Test", "plan", "required", "NUMBER", "Test", "to", "make", "sure", "that", "the", "breakpoints", "be", "toggled", "and", "highlight", "properly", "in", "the", "decompiler", "and", "ensure", "if", "the", "display", "position", "be", "get", "change", "NUMBER", "NUMBER", "See", "if", "the", "display", "position", "be", "change", "when", "the", "view", "be", "refreshed", "use", "the", "refresh", "button", "NUMBER", "NUMBER", "Notice", "the", "change", "in", "the", "display", "that", "happens", "when", "an", "instruction", "be", "modify", "NUMBER", "For", "example", "change", "an", "if", "condition", "from", "je", "address", "to", "jne", "address", "and", "see", "if", "the", "display", "change", "in", "an", "undesirable", "way", "NUMBER", "NUMBER", "Open", "the", "following", "three", "widgets", "in", "sync", "Decompiler", "Disassembly", "Graph", "NUMBER", "Toggle", "breakpoints", "and", "make", "sure", "that", "every", "single", "change", "be", "reflected", "properly", "in", "all", "the", "widgets", "NUMBER", "TAG", "TAG", "Closing", "issue", "close", "NUMBER", "TAG", "Environment", "information", "Operating", "System", "Windows", "NUMBER", "Cutter", "version", "Cutter", "v", "NUMBER", "x", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "release", "from", "Cutter", "website", "or", "GitHub", "Distribution", "repository", "File", "format", "Describe", "the", "bug", "TAG", "To", "Reproduce", "I", "tried", "install", "few", "cutter", "plugins", "NUMBER", "I", "install", "it", "to", "directory", "from", "edit", "preferences", "plugins", "NUMBER", "I", "restarted", "a", "cutter", "but", "list", "of", "plugins", "be", "still", "empty", "NUMBER", "Expected", "behavior", "List", "of", "plugins", "shouldn", "t", "be", "empty", "Screenshots", "TAG", "Additional", "context", "TAG", "Hey", "Thank", "you", "for", "report", "this", "issue", "NUMBER", "I", "was", "able", "to", "verify", "that", "the", "list", "be", "empty", "even", "when", "the", "plugins", "that", "be", "shipped", "by", "default", "be", "install", "r", "NUMBER", "ghidra", "r", "NUMBER", "dec", "NUMBER", "_", "The", "plugins", "be", "shipped", "by", "default", "in", "the", "following", "path", "Cutter", "v", "NUMBER", "x", "NUMBER", "Windows", "lib", "plugins", "_", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ed", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "NUMBER", "fde", "NUMBER", "c", "NUMBER", "png", "What", "plugins", "did", "you", "try", "to", "install", "LINK", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "the", "Decompiler", "widget", "be", "not", "shown", "to", "the", "users", "in", "the", "dock", "in", "the", "default", "layout", "NUMBER", "Instead", "the", "user", "need", "to", "know", "that", "Cutter", "has", "a", "decompiler", "widget", "or", "to", "look", "under", "Windows", "menu", "to", "see", "it", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "abb", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "png", "Describe", "the", "solution", "you", "d", "like", "I", "d", "like", "to", "see", "the", "decompiler", "widget", "as", "part", "of", "the", "dock", "in", "the", "default", "layout", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "An", "alternative", "be", "to", "make", "a", "check", "to", "make", "sure", "to", "show", "the", "widget", "only", "if", "at", "least", "one", "decompiler", "be", "install", "NUMBER", "I", "don", "t", "like", "this", "option", "as", "I", "want", "users", "to", "install", "decompilers", "and", "know", "about", "this", "option", "NUMBER", "i", "have", "just", "add", "the", "decompiler", "widget", "to", "default", "layout", "anything", "else", "Has", "this", "be", "resolve", "If", "not", "I", "d", "like", "to", "take", "it", "NUMBER", "Your", "checklist", "for", "this", "pull", "request", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "I", "m", "trying", "to", "handle", "multiple", "Pascal", "NUMBER", "bit", "length", "strings", "in", "a", "binary", "m", "NUMBER", "k", "dump", "which", "as", "they", "be", "not", "C", "string", "and", "have", "no", "null", "termination", "the", "automatic", "string", "parsing", "barfs", "on", "NUMBER", "so", "till", "I", "can", "figure", "out", "how", "to", "write", "a", "pascal", "string", "parser", "for", "Cutter", "I", "have", "opted", "to", "improve", "the", "usability", "of", "the", "advance", "string", "definition", "dialog", "as", "it", "was", "bad", "NUMBER", "I", "m", "having", "to", "convert", "hundreds", "of", "strings", "by", "hand", "so", "the", "workflow", "of", "having", "to", "open", "the", "menu", "navigate", "to", "the", "correct", "submenu", "open", "the", "string", "dialog", "click", "into", "the", "size", "field", "and", "then", "click", "ok", "was", "starting", "to", "mess", "up", "my", "wrist", "as", "well", "as", "be", "very", "error", "prone", "NUMBER", "This", "converts", "all", "these", "actions", "to", "keyboard", "usage", "NUMBER", "My", "original", "plan", "was", "to", "bind", "this", "workflow", "to", "the", "S", "key", "or", "rebind", "normal", "string", "handle", "to", "S", "and", "bind", "this", "to", "A", "for", "Advanced", "string", "however", "I", "could", "not", "get", "this", "to", "work", "NUMBER", "Test", "plan", "required", "Open", "a", "binary", "dump", "that", "has", "a", "non", "C", "string", "in", "it", "for", "example", "LINK", "NUMBER", "NUMBER", "Microcode", "blob", "main", "bins_modified", "NUMBER", "NUMBER", "U", "NUMBER", "NUMBER", "X", "NUMBER", "Rev", "NUMBER", "board", "NUMBER", "PROM", "NUMBER", "elf", "Go", "to", "the", "string", "address", "NUMBER", "x", "NUMBER", "in", "the", "example", "Use", "the", "shortcut", "Shift", "A", "to", "open", "the", "advance", "string", "dialog", "Enter", "the", "length", "of", "the", "string", "now", "the", "default", "focused", "item", "NUMBER", "characters", "in", "my", "example", "file", "Use", "the", "Enter", "key", "to", "confirm", "the", "entry", "instead", "of", "use", "the", "OK", "button", "If", "all", "be", "work", "as", "it", "should", "you", "should", "now", "see", "the", "string", "properly", "and", "have", "not", "had", "to", "touch", "the", "mouse", "to", "get", "to", "that", "point", "NUMBER", "Closing", "issue", "None", "I", "have", "do", "the", "rebase", "request", "NUMBER", "I", "ll", "poke", "the", "UI", "file", "tomorrow", "I", "hadn", "t", "get", "back", "to", "this", "yet", "because", "of", "my", "dayJob", "workload", "and", "managing", "my", "mental", "health", "NUMBER", "I", "will", "try", "to", "get", "to", "this", "in", "the", "next", "week", "once", "I", "finish", "melting", "from", "this", "weekend", "s", "heatwave", "NUMBER", "Thank", "you", "for", "the", "encouragement", "and", "your", "patience", "with", "me", "NUMBER", "karliss", "or", "ITAYC", "NUMBER", "HEN", "I", "have", "now", "update", "my", "branch", "and", "modify", "the", "UI", "file", "as", "suggested", "NUMBER", "I", "d", "be", "interested", "to", "hear", "your", "thoughts", "on", "usability", "especially", "as", "I", "find", "it", "more", "usable", "if", "the", "buttons", "be", "rebound", "to", "S", "and", "Shift", "S", "rather", "than", "A", "and", "Shift", "A", "S", "for", "String", "NUMBER", "but", "I", "m", "having", "trouble", "binding", "the", "auto", "string", "stuff", "to", "S", "NUMBER", "This", "do", "feel", "much", "better", "now", "though", "NUMBER", "My", "closing", "thought", "be", "that", "Cutter", "be", "build", "in", "C", "NUMBER", "mode", "but", "the", "pointer", "in", "EditStringDialog", "for", "the", "UI", "be", "a", "raw", "pointer", "how", "would", "you", "feel", "about", "having", "this", "converted", "to", "std", "unique_ptr", "TAG", "so", "the", "destructor", "and", "manual", "memory", "management", "went", "away", "Ahhhh", "that", "makes", "a", "ton", "of", "sense", "NUMBER", "I", "couldn", "t", "find", "the", "binding", "for", "S", "so", "had", "assumed", "it", "was", "an", "unuse", "key", "but", "this", "makes", "a", "ton", "of", "sense", "Aye", "I", "m", "familiar", "with", "use", "modern", "C", "with", "Qt", "NUMBER", "having", "do", "it", "on", "a", "prior", "project", "NUMBER", "I", "have", "made", "that", "change", "and", "rebased", "against", "master", "so", "it", "cleanly", "merge", "again", "I", "think", "I", "d", "want", "to", "fix", "that", "separately", "in", "part", "because", "I", "m", "not", "sure", "how", "the", "size", "field", "of", "the", "dialog", "should", "really", "behave", "and", "it", "requires", "going", "after", "all", "usages", "of", "the", "dialog", "NUMBER", "As", "for", "the", "tab", "order", "you", "make", "an", "interesting", "point", "though", "I", "put", "address", "before", "the", "buttons", "so", "that", "if", "you", "want", "to", "change", "the", "address", "you", "don", "t", "have", "to", "tab", "all", "the", "way", "around", "NUMBER", "Hitting", "enter", "in", "any", "of", "the", "input", "boxes", "accepts", "the", "dialog", "after", "all", "so", "be", "able", "to", "tab", "to", "the", "buttons", "be", "mostly", "Qt", "not", "allowing", "me", "to", "not", "do", "that", "I", "think", "it", "be", "possible", "but", "it", "makes", "little", "sense", "here", "and", "needing", "to", "be", "able", "to", "access", "the", "cancel", "button", "via", "keyboard", "NUMBER", "I", "think", "the", "better", "way", "to", "fix", "this", "and", "I", "will", "update", "the", "PR", "with", "this", "if", "you", "agree", "be", "to", "move", "the", "address", "box", "visually", "to", "the", "logical", "tab", "order", "position", "so", "the", "input", "field", "be", "the", "right", "way", "around", "for", "the", "tab", "order", "NUMBER", "I", "ve", "squashed", "out", "one", "of", "the", "more", "silly", "commit", "and", "I", "ve", "do", "the", "re", "ordering", "discussed", "NUMBER", "I", "think", "this", "be", "now", "ready", "for", "merge", "NUMBER", "Hi", "First", "of", "all", "I", "need", "to", "describe", "my", "_use", "case_", "I", "need", "to", "fix", "a", "close", "source", "binary", "in", "a", "Linux", "embedded", "system", "NUMBER", "The", "AppImage", "doesn", "t", "work", "as", "the", "system", "libraries", "be", "quite", "old", "NUMBER", "Then", "I", "m", "triying", "to", "compile", "Cutter", "in", "a", "_similar_", "Linux", "environment", "mainly", "use", "the", "same", "kernel", "version", "and", "generate", "a", "_solid_", "package", "with", "all", "the", "dependencies", "use", "the", "good", "tool", "Exodus", "LINK", "NUMBER", "However", "the", "problem", "be", "to", "compile", "Cutter", "on", "ancient", "environments", "and", "because", "it", "can", "t", "work", "in", "a", "Client", "Server", "mode", "as", "explained", "in", "NUMBER", "NUMBER", "For", "example", "after", "fix", "the", "radare", "NUMBER", "troubles", "NUMBER", "I", "discover", "that", "only", "with", "Qt", "NUMBER", "v", "NUMBER", "or", "up", "it", "s", "possible", "to", "compile", "Cutter", "NUMBER", "So", "I", "need", "to", "recompile", "a", "full", "Qt", "NUMBER", "library", "from", "scratch", "NUMBER", "And", "the", "problem", "be", "that", "version", "NUMBER", "and", "NUMBER", "doesn", "t", "compile", "and", "NUMBER", "NUMBER", "and", "NUMBER", "seems", "to", "be", "incompatible", "with", "Cutter", "_when", "compile", "with", "them_", "NUMBER", "So", "here", "my", "suggestion", "Provide", "the", "option", "to", "enable", "the", "full", "compilation", "of", "the", "Qt", "NUMBER", "with", "only", "the", "required", "modules", "libraries", "NUMBER", "Then", "link", "optionally", "Cutter", "with", "it", "for", "a", "new", "version", "without", "the", "Qt", "NUMBER", "dependecy", "NUMBER", "What", "you", "think", "about", "this", "idea", "It", "has", "sense", "Regards", "NUMBER", "Hi", "karliss", "I", "understand", "well", "what", "you", "say", "NUMBER", "Futhermore", "I", "now", "how", "to", "configure", "compile", "Qt", "so", "that", "s", "not", "the", "question", "NUMBER", "However", "In", "some", "non", "recent", "Linux", "environments", "be", "quite", "complex", "to", "compile", "recent", "Qt", "version", "NUMBER", "Some", "old", "GCC", "version", "NUMBER", "for", "example", "has", "some", "bug", "or", "pseudo", "bug", "that", "make", "very", "complex", "to", "compile", "_current_", "Cutter", "code", "NUMBER", "The", "Qt", "library", "be", "_VERY_", "modular", "NUMBER", "And", "not", "all", "modules", "plugins", "libraries", "be", "necessary", "to", "compile", "Cutter", "NUMBER", "So", "I", "try", "to", "reformulate", "my", "request", "Can", "you", "provide", "a", "script", "for", "a", "custom", "compilation", "of", "Qt", "with", "_only_", "the", "minimal", "requirements", "This", "will", "simplifies", "the", "generation", "of", "a", "_local_", "qt", "NUMBER", "library", "to", "support", "the", "compilation", "of", "the", "Cutter", "use", "the", "corresponding", "QTDIR", "and", "PATH", "LD_LIBRARY_PATH", "NUMBER", "I", "hope", "it", "s", "more", "clear", "now", "right", "Regards", "NUMBER", "Hi", "karliss", "As", "example", "current", "Cutter", "repo", "with", "Qt", "NUMBER", "NUMBER", "Building", "CXX", "object", "CMakeFiles", "Cutter", "NUMBER", "dir", "dialogs", "AboutDialog", "NUMBER", "cpp", "NUMBER", "o", "home", "user", "cutter", "src", "dialogs", "AboutDialog", "NUMBER", "cpp", "In", "lambda", "function", "home", "user", "cutter", "src", "dialogs", "AboutDialog", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "this", "was", "not", "captured", "for", "this", "lambda", "function", "home", "user", "cutter", "src", "dialogs", "AboutDialog", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "this", "was", "not", "captured", "for", "this", "lambda", "function", "home", "user", "cutter", "src", "dialogs", "AboutDialog", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "this", "was", "not", "captured", "for", "this", "lambda", "function", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "dialogs", "AboutDialog", "NUMBER", "cpp", "NUMBER", "o", "Error", "NUMBER", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "all", "Error", "NUMBER", "make", "all", "Error", "NUMBER", "And", "this", "error", "can", "be", "fix", "with", "a", "simple", "connect", "updateWorker", "UpdateWorker", "checkComplete", "updateWorker", "const", "QVersionNumber", "version", "const", "QString", "error", "updateWorker", "this", "const", "QVersionNumber", "version", "const", "QString", "error", "if", "error", "NUMBER", "isEmpty", "QMessageBox", "critical", "nullptr", "tr", "Error", "error", "However", "other", "more", "complex", "error", "still", "appears", "home", "usercutter", "src", "widgets", "DisassemblyWidget", "NUMBER", "cpp", "In", "member", "function", "virtual", "void", "DisassemblyLeftPanel", "paintEvent", "QPaintEvent", "home", "usercutter", "src", "widgets", "DisassemblyWidget", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "INT", "NUMBER", "_MAX", "was", "not", "declared", "in", "this", "scope", "In", "file", "include", "from", "home", "usercutter", "src", "widgets", "CutterDockWidget", "NUMBER", "h", "NUMBER", "NUMBER", "from", "home", "usercutter", "src", "plugins", "CutterPlugin", "NUMBER", "h", "NUMBER", "from", "home", "usercutter", "src", "core", "Cutter", "NUMBER", "h", "NUMBER", "from", "home", "usercutter", "src", "widgets", "DisassemblyWidget", "NUMBER", "h", "NUMBER", "from", "home", "usercutter", "src", "widgets", "DisassemblyWidget", "NUMBER", "cpp", "NUMBER", "home", "usercutter", "src", "common", "RefreshDeferrer", "NUMBER", "h", "In", "instantiation", "of", "class", "ReplacingRefreshDeferrerAccumulator", "TAG", "home", "usercutter", "src", "widgets", "CutterDockWidget", "NUMBER", "h", "NUMBER", "NUMBER", "required", "from", "RefreshDeferrer", "CutterDockWidget", "createReplacingRefreshDeferrer", "bool", "Func", "with", "ParamResult", "long", "long", "unsigned", "int", "Func", "DisassemblyWidget", "DisassemblyWidget", "MainWindow", "TAG", "home", "usercutter", "src", "widgets", "DisassemblyWidget", "NUMBER", "cpp", "NUMBER", "NUMBER", "required", "from", "here", "home", "usercutter", "src", "common", "RefreshDeferrer", "NUMBER", "h", "NUMBER", "NUMBER", "error", "looser", "throw", "specifier", "for", "ReplacingRefreshDeferrerAccumulator", "TAG", "ReplacingRefreshDeferrerAccumulator", "with", "T", "long", "long", "unsigned", "int", "home", "usercutter", "src", "common", "RefreshDeferrer", "NUMBER", "h", "NUMBER", "NUMBER", "error", "overriding", "virtual", "RefreshDeferrerAccumulator", "RefreshDeferrerAccumulator", "noexcept", "true", "In", "file", "include", "from", "usr", "local", "qt", "NUMBER", "include", "QtWidgets", "qwidget", "NUMBER", "h", "NUMBER", "NUMBER", "from", "usr", "local", "qt", "NUMBER", "include", "QtWidgets", "qmenu", "NUMBER", "h", "NUMBER", "from", "usr", "local", "qt", "NUMBER", "include", "QtWidgets", "QMenu", "NUMBER", "from", "home", "usercutter", "src", "core", "Cutter", "NUMBER", "h", "NUMBER", "from", "home", "usercutter", "src", "widgets", "DisassemblyWidget", "NUMBER", "h", "NUMBER", "from", "home", "usercutter", "src", "widgets", "DisassemblyWidget", "NUMBER", "cpp", "NUMBER", "usr", "local", "qt", "NUMBER", "include", "QtCore", "qobject", "NUMBER", "h", "At", "global", "scope", "usr", "local", "qt", "NUMBER", "include", "QtCore", "qobject", "NUMBER", "h", "NUMBER", "NUMBER", "error", "static", "typename", "QtPrivate", "QEnableIf", "TAG", "ArgumentCount", "NUMBER", "QMetaObject", "Connection", "Type", "QObject", "connect", "const", "typename", "QtPrivate", "FunctionPointer", "TAG", "Object", "Func", "NUMBER", "const", "QObject", "Func", "NUMBER", "Qt", "ConnectionType", "with", "Func", "NUMBER", "void", "RefreshDeferrer", "void", "Func", "NUMBER", "CutterDockWidget", "createReplacingRefreshDeferrer", "bool", "Func", "with", "ParamResult", "long", "long", "unsigned", "int", "Func", "DisassemblyWidget", "DisassemblyWidget", "MainWindow", "TAG", "TAG", "typename", "QtPrivate", "QEnableIf", "TAG", "ArgumentCount", "NUMBER", "QMetaObject", "Connection", "Type", "QMetaObject", "Connection", "typename", "QtPrivate", "FunctionPointer", "TAG", "Object", "RefreshDeferrer", "QObject", "QObject", "declared", "use", "local", "type", "CutterDockWidget", "createReplacingRefreshDeferrer", "bool", "Func", "with", "ParamResult", "long", "long", "unsigned", "int", "Func", "DisassemblyWidget", "DisassemblyWidget", "MainWindow", "TAG", "TAG", "be", "use", "but", "never", "defined", "fpermissive", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "widgets", "DisassemblyWidget", "NUMBER", "cpp", "NUMBER", "o", "Error", "NUMBER", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "all", "Error", "NUMBER", "make", "all", "Error", "NUMBER", "So", "if", "you", "can", "try", "to", "compile", "Cutter", "use", "the", "GCC", "NUMBER", "version", "NUMBER", "Regards", "NUMBER", "Hi", "karliss", "and", "XVilka", "Thank", "you", "for", "your", "responses", "NUMBER", "I", "feel", "this", "willl", "be", "useful", "for", "other", "users", "so", "for", "this", "reason", "I", "post", "some", "more", "comments", "sorry", "to", "continue", "write", "in", "a", "close", "issue", "At", "time", "the", "compilation", "of", "the", "radare", "NUMBER", "on", "ancient", "platforms", "be", "solve", "NUMBER", "A", "manual", "compilation", "of", "the", "Qt", "library", "be", "not", "a", "problem", "NUMBER", "The", "problem", "be", "to", "know", "the", "minimal", "requirements", "of", "the", "configuration", "of", "this", "library", "when", "compile", "Cutter", "with", "it", "NUMBER", "I", "really", "think", "that", "it", "will", "useful", "to", "know", "the", "best", "configuration", "to", "achieve", "that", "NUMBER", "Not", "all", "C", "compilers", "support", "C", "NUMBER", "So", "in", "order", "to", "support", "environments", "_without_", "recent", "GCC", "version", "I", "feel", "it", "will", "be", "useful", "to", "provide", "minimal", "support", "NUMBER", "As", "Cutter", "be", "a", "GUI", "for", "radare", "NUMBER", "and", "a", "GUI", "improves", "a", "lot", "the", "usability", "it", "will", "be", "interesting", "to", "run", "it", "in", "the", "same", "platforms", "NUMBER", "I", "understand", "the", "effort", "to", "support", "ancient", "environments", "NUMBER", "Perhaps", "much", "effort", "for", "less", "but", "almost", "it", "will", "be", "profitable", "to", "help", "to", "users", "that", "try", "to", "do", "it", "NUMBER", "For", "example", "here", "my", "current", "configuration", "of", "the", "Qt", "NUMBER", "for", "Debian", "NUMBER", "when", "compile", "it", "for", "Cutter", "NUMBER", "qt", "NUMBER", "configure", "prefix", "usr", "local", "qt", "NUMBER", "skip", "serialbus", "skip", "virtualkeyboard", "skip", "qtmultimedia", "skip", "qtquick", "NUMBER", "skip", "qtquickcontrols", "skip", "qtsensors", "qt", "zlib", "qt", "libjpeg", "qt", "libpng", "qt", "xcb", "qt", "freetype", "qt", "pcre", "no", "opengl", "no", "egl", "no", "dbus", "no", "eglfs", "no", "directfb", "no", "linuxfb", "no", "accessibility", "no", "cups", "no", "feature", "accessibility", "opensource", "nomake", "examples", "nomake", "test", "This", "compiles", "fine", "with", "the", "stock", "compiler", "environment", "NUMBER", "Now", "I", "m", "trying", "to", "fix", "the", "C", "erros", "when", "compile", "Cutter", "NUMBER", "I", "hope", "it", "helps", "NUMBER", "Hey", "Lars", "Thank", "you", "for", "the", "detailed", "explanations", "and", "for", "taking", "the", "time", "to", "properly", "describe", "your", "request", "NUMBER", "Your", "request", "be", "legit", "but", "isn", "t", "a", "priority", "of", "ours", "and", "isn", "t", "a", "popular", "request", "we", "get", "frequently", "NUMBER", "Moreover", "maintaining", "such", "list", "of", "minimal", "requirements", "isn", "t", "something", "we", "would", "like", "to", "put", "efforts", "in", "NUMBER", "That", "said", "I", "invite", "you", "to", "send", "us", "a", "pull", "request", "to", "the", "docs", "or", "to", "the", "build", "scripts", "with", "the", "information", "you", "would", "want", "to", "see", "so", "others", "can", "use", "it", "NUMBER", "I", "can", "t", "guarantee", "we", "will", "accept", "such", "PR", "but", "we", "will", "discuss", "and", "consider", "it", "NUMBER", "Alternatively", "you", "can", "maintain", "such", "list", "in", "a", "separated", "personal", "repository", "NUMBER", "Thank", "you", "again", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "add", "Initial", "Analysis", "taking", "a", "long", "time", "due", "to", "miss", "background", "analysis", "feature", "to", "user", "docs", "common", "issue", "NUMBER", "TAG", "Test", "plan", "required", "Build", "and", "run", "the", "docs", "NUMBER", "TAG", "TAG", "Closing", "issue", "Related", "NUMBER", "NUMBER", "TAG", "karliss", "leaving", "the", "relate", "issue", "aside", "be", "it", "a", "good", "addition", "to", "the", "docs", "Having", "a", "note", "about", "dealing", "with", "large", "binaries", "would", "be", "good", "but", "current", "message", "be", "wrong", "NUMBER", "I", "will", "try", "to", "write", "down", "the", "required", "adjustments", "tomorrow", "NUMBER", "ping", "karliss", "ITAYC", "NUMBER", "HEN", "How", "about", "link", "this", "LINK", "NUMBER", "TAG", "Adds", "an", "introduction", "page", "for", "different", "Cutter", "widgets", "in", "User", "Docs", "NUMBER", "I", "prefer", "full", "video", "introduction", "for", "Cutter", "but", "until", "that", "s", "do", "we", "can", "utilize", "gifs", "for", "this", "NUMBER", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Adding", "gif", "images", "for", "the", "widgets", "with", "a", "little", "summary", "NUMBER", "As", "mention", "in", "NUMBER", "it", "add", "significant", "bloat", "to", "the", "repo", "and", "can", "be", "split", "in", "a", "separate", "repo", "as", "discussed", "in", "NUMBER", "TAG", "Test", "plan", "required", "Build", "docs", "and", "run", "NUMBER", "TAG", "TAG", "Closing", "issue", "TAG", "karliss", "agree", "NUMBER", "Gifs", "be", "a", "bit", "awkward", "but", "this", "be", "what", "I", "could", "do", "until", "someone", "do", "a", "good", "intro", "video", "NUMBER", "We", "can", "keep", "this", "open", "and", "replace", "gifs", "with", "ss", "if", "that", "s", "do", "NUMBER", "_Ignoring", "the", "file", "sizes", "and", "their", "storage", "location_", "Conceptually", "I", "like", "gifs", "but", "sometimes", "it", "s", "too", "much", "and", "unnecessary", "NUMBER", "I", "second", "Karliss", "and", "say", "that", "some", "widgets", "doesn", "t", "need", "gifs", "at", "the", "moment", "NUMBER", "Gifs", "Graph", "Disassembly", "Hexdump", "No", "gifs", "Dashboard", "Strings", "Search", "Now", "in", "the", "future", "I", "d", "like", "every", "widget", "to", "have", "its", "own", "page", "NUMBER", "It", "s", "not", "rare", "that", "we", "get", "question", "on", "our", "chats", "ask", "how", "to", "do", "X", "and", "Y", "while", "they", "be", "hiding", "in", "a", "shortcut", "a", "double", "click", "or", "a", "right", "click", "NUMBER", "Describing", "each", "column", "menu", "item", "and", "more", "be", "very", "helpful", "NUMBER", "When", "each", "widget", "get", "their", "own", "page", "I", "can", "see", "how", "some", "of", "the", "explanations", "can", "be", "joined", "with", "a", "gifs", "NUMBER", "For", "example", "in", "the", "Strings", "widget", "page", "you", "can", "imagine", "a", "subtitle", "Find", "references", "to", "the", "string", "which", "will", "havea", "gif", "to", "show", "Right", "Click", "Show", "x", "refs", "and", "the", "menu", "that", "will", "be", "opened", "NUMBER", "That", "said", "gifs", "be", "harder", "to", "maintain", "and", "as", "change", "introduce", "gifs", "quickly", "become", "outdate", "since", "they", "show", "more", "views", "than", "a", "regular", "screenshot", "e", "NUMBER", "g", "context", "menus", "What", "be", "the", "plan", "then", "ITAYC", "NUMBER", "HEN", "I", "can", "remove", "gifs", "but", "on", "my", "small", "screen", "it", "s", "hard", "to", "take", "full", "ss", "the", "reason", "why", "Dashboard", "widget", "be", "a", "gif", "NUMBER", "Should", "we", "open", "an", "issue", "for", "this", "Because", "it", "s", "a", "good", "time", "to", "have", "some", "visuals", "moving", "preferably", "NUMBER", "Catch", "me", "next", "week", "and", "I", "will", "be", "able", "to", "record", "some", "gifs", "and", "take", "screenshots", "ITAYC", "NUMBER", "HEN", "ITAYC", "NUMBER", "HEN", "what", "you", "think", "of", "the", "header", "Widgets", "Just", "thought", "of", "change", "it", "to", "Views", "as", "it", "s", "in", "user", "docs", "NUMBER", "Also", "we", "can", "accommodate", "views", "like", "Load", "Options", "in", "here", "which", "be", "important", "part", "of", "docs", "but", "I", "not", "sure", "if", "they", "be", "widgets", "ITAYC", "NUMBER", "HEN", "Both", "NUMBER", "The", "description", "I", "should", "do", "this", "weekend", "NUMBER", "The", "docs", "moving", "process", "will", "take", "a", "while", "I", "assume", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "add", "a", "new", "Analysis", "section", "to", "the", "Preferences", "dialog", "so", "that", "the", "user", "can", "modify", "some", "of", "the", "anal", "NUMBER", "options", "and", "reanalyze", "the", "file", "without", "having", "to", "do", "it", "through", "the", "console", "NUMBER", "For", "the", "sake", "of", "completeness", "I", "m", "repeating", "the", "same", "considerations", "I", "put", "on", "NUMBER", "here", "NUMBER", "To", "keep", "it", "simple", "for", "now", "I", "narrowed", "down", "the", "selected", "options", "at", "LINK", "Megabeets", "H", "NUMBER", "jBD", "NUMBER", "Hxv", "edit", "to", "only", "those", "that", "have", "boolean", "values", "NUMBER", "When", "I", "have", "some", "feedback", "on", "the", "current", "code", "I", "can", "add", "the", "remaining", "options", "in", "this", "or", "subsequent", "PRs", "NUMBER", "NUMBER", "In", "general", "I", "tried", "to", "keep", "the", "code", "as", "simple", "as", "possible", "and", "modify", "exist", "file", "as", "little", "as", "possible", "NUMBER", "For", "example", "I", "chose", "to", "use", "the", "Core", "getConfigb", "method", "directly", "instead", "of", "Config", "getConfig", "to", "avoid", "having", "to", "modify", "this", "one", "NUMBER", "NUMBER", "Similarly", "I", "decided", "to", "use", "the", "already", "exist", "AnalTask", "to", "handle", "the", "analysis", "NUMBER", "As", "a", "consequence", "the", "title", "of", "the", "async", "task", "dialog", "be", "Initial", "Analysis", "and", "you", "can", "see", "the", "message", "Loading", "the", "file", "NUMBER", "which", "be", "not", "quite", "accurate", "screenshot", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ced", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "cfaff", "NUMBER", "db", "NUMBER", "png", "However", "I", "thought", "it", "was", "OK", "for", "now", "at", "least", "NUMBER", "NUMBER", "The", "selected", "options", "be", "not", "maintained", "between", "two", "different", "sessions", "NUMBER", "However", "if", "you", "think", "it", "s", "worth", "it", "I", "can", "add", "it", "as", "well", "as", "a", "Restore", "defaults", "button", "just", "as", "in", "the", "Disassembly", "section", "NUMBER", "NUMBER", "I", "chose", "the", "icon", "cog_light", "NUMBER", "svg", "since", "it", "seem", "that", "a", "cog", "be", "a", "good", "representation", "for", "Analysis", "and", "it", "was", "already", "there", "NUMBER", "Let", "me", "know", "if", "that", "s", "OK", "or", "what", "other", "icon", "would", "you", "think", "fits", "better", "NUMBER", "Also", "I", "took", "into", "account", "that", "for", "the", "light", "theme", "the", "color", "of", "the", "icon", "change", "so", "add", "the", "corresponding", "image", "too", "NUMBER", "Some", "other", "thoughts", "I", "had", "NUMBER", "Now", "the", "analyze", "button", "performs", "anly", "automate", "analysis", "aaa", "NUMBER", "Maybe", "in", "the", "future", "we", "can", "add", "other", "options", "or", "a", "slider", "just", "as", "in", "the", "initial", "dialog", "NUMBER", "NUMBER", "I", "did", "not", "add", "any", "documentation", "as", "I", "didn", "t", "find", "anything", "referring", "to", "the", "Preferences", "dialog", "but", "I", "can", "add", "it", "if", "needed", "NUMBER", "Test", "plan", "required", "NUMBER", "Open", "a", "file", "without", "analyzing", "it", "NUMBER", "Go", "to", "Preferences", "Edit", "Analysis", "NUMBER", "The", "anal", "NUMBER", "jmp", "NUMBER", "ref", "and", "anal", "NUMBER", "jmp", "NUMBER", "tbl", "checkboxes", "should", "be", "the", "only", "ones", "checked", "NUMBER", "NUMBER", "In", "the", "console", "print", "the", "value", "of", "some", "of", "the", "anal", "NUMBER", "options", "and", "check", "they", "match", "the", "checkbox", "unchecked", "false", "checked", "true", "NUMBER", "For", "instance", "e", "anal", "NUMBER", "autoname", "should", "return", "false", "NUMBER", "NUMBER", "Check", "and", "uncheck", "some", "boxes", "and", "verify", "that", "the", "returned", "value", "in", "the", "console", "for", "the", "corresponding", "configuration", "parameter", "has", "the", "correct", "value", "NUMBER", "NUMBER", "Close", "the", "Preferences", "dialog", "reopen", "it", "and", "verify", "that", "the", "Analysis", "options", "be", "the", "same", "as", "before", "closing", "it", "NUMBER", "NUMBER", "Click", "on", "the", "analyze", "button", "NUMBER", "When", "the", "analysis", "finishes", "verify", "that", "all", "the", "views", "have", "refreshed", "NUMBER", "NUMBER", "Change", "to", "the", "light", "theme", "and", "check", "that", "the", "icon", "of", "the", "Analyze", "section", "be", "of", "the", "same", "color", "than", "the", "rest", "NUMBER", "cutter", "analysis", "dialog", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bea", "NUMBER", "cedc", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "gif", "Closing", "issue", "Closes", "NUMBER", "Thanks", "for", "your", "feedback", "karliss", "That", "makes", "sense", "if", "add", "a", "new", "Analysis", "dialog", "was", "be", "considered", "NUMBER", "Of", "course", "I", "can", "take", "some", "of", "these", "options", "from", "this", "section", "NUMBER", "However", "I", "think", "that", "having", "the", "analysis", "options", "in", "two", "different", "places", "can", "be", "little", "bit", "confusing", "for", "the", "user", "NUMBER", "So", "maybe", "it", "would", "be", "worth", "choosing", "one", "of", "the", "two", "alternatives", "analysis", "section", "in", "preferences", "dialog", "vs", "standalone", "analysis", "dialog", "and", "putting", "all", "the", "options", "in", "the", "same", "place", "NUMBER", "What", "do", "you", "think", "I", "don", "t", "have", "any", "strong", "opinions", "on", "this", "at", "all", "I", "m", "just", "sharing", "some", "thoughts", "so", "we", "can", "find", "the", "best", "approach", "smile", "Hi", "karliss", "no", "worries", "I", "be", "not", "discouraged", "at", "all", "Actually", "it", "s", "quite", "the", "contrary", "wink", "I", "like", "to", "discuss", "the", "options", "and", "in", "the", "end", "what", "we", "all", "want", "be", "to", "find", "the", "best", "one", "so", "I", "m", "all", "ears", "As", "for", "the", "analyze", "button", "I", "put", "it", "because", "in", "the", "list", "that", "ITAYC", "NUMBER", "HEN", "shared", "LINK", "Megabeets", "H", "NUMBER", "jBD", "NUMBER", "Hxv", "edit", "there", "was", "a", "line", "stating", "_Assuming", "there", "will", "be", "an", "Analyze", "button", "in", "this", "view_", "so", "I", "thought", "that", "it", "was", "expected", "NUMBER", "If", "it", "s", "not", "I", "ll", "take", "it", "out", "no", "problem", "Let", "me", "know", "what", "you", "think", "NUMBER", "Thanks", "for", "the", "feedback", "I", "have", "made", "the", "suggested", "modifications", "NUMBER", "In", "the", "following", "video", "you", "can", "see", "NUMBER", "The", "tooltip", "of", "the", "Analyze", "program", "button", "NUMBER", "The", "new", "menu", "item", "File", "Analyze", "Program", "with", "the", "tooltip", "NUMBER", "The", "Analysis", "dialog", "without", "the", "Loading", "the", "file", "log", "NUMBER", "The", "Analysis", "dialog", "with", "the", "title", "Analyzing", "Program", "I", "do", "not", "show", "it", "but", "the", "title", "remains", "Initial", "Analysis", "when", "loading", "a", "binary", "and", "analyzing", "straight", "away", "cutter", "analysis", "v", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ffc", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "gif", "I", "moved", "the", "contents", "of", "the", "method", "AnalOptionsWidget", "analyze", "to", "MainWindow", "on_actionAnalyze_triggered", "which", "was", "already", "defined", "but", "it", "was", "empty", "since", "it", "seem", "that", "the", "TODO", "indicated", "it", "was", "the", "right", "place", "to", "put", "it", "NUMBER", "Also", "then", "I", "could", "use", "the", "same", "code", "for", "the", "new", "menu", "item", "and", "the", "widget", "button", "NUMBER", "I", "also", "add", "some", "documentation", "let", "me", "know", "if", "that", "s", "enough", "NUMBER", "Thank", "you", "smile", "Is", "your", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "The", "interface", "of", "Cutter", "be", "full", "of", "mix", "types", "of", "titles", "that", "be", "not", "unified", "NUMBER", "Since", "we", "don", "t", "have", "guidelines", "for", "these", "we", "need", "to", "create", "ones", "and", "make", "sure", "that", "the", "usage", "of", "letter", "casing", "in", "titles", "be", "consistent", "throughout", "the", "interface", "NUMBER", "Type", "of", "casings", "all", "capital", "AC", "RESET", "SETTINGS", "mix", "case", "MC", "Export", "as", "code", "title", "case", "TC", "Save", "As", "NUMBER", "In", "the", "image", "an", "example", "of", "an", "inconsistent", "menu", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "ce", "NUMBER", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "d", "e", "NUMBER", "baef", "NUMBER", "png", "Describe", "the", "solution", "you", "d", "like", "NUMBER", "Decide", "on", "a", "guidelines", "based", "on", "UX", "best", "practices", "and", "not", "personal", "taste", "of", "developers", "NUMBER", "Document", "the", "guidelines", "in", "the", "docs", "for", "developers", "NUMBER", "Change", "all", "the", "menu", "items", "to", "fit", "to", "the", "chosen", "decision", "Additional", "context", "References", "Why", "letter", "casing", "be", "important", "to", "consider", "during", "design", "decisions", "LINK", "letter", "casing", "be", "important", "to", "consider", "during", "design", "decisions", "NUMBER", "acd", "NUMBER", "a", "NUMBER", "e", "Headline", "Capitalization", "for", "UX", "Title", "Case", "vs", "NUMBER", "Sentence", "Case", "LINK", "capitalization", "ux", "title", "case", "vs", "sentence", "case", "A", "thorough", "detailed", "comprehensive", "methodical", "guide", "to", "capitalizing", "strings", "in", "our", "user", "interface", "LINK", "thorough", "detailed", "comprehensive", "methodical", "guide", "to", "capitalizing", "strings", "in", "our", "user", "interface", "NUMBER", "b", "NUMBER", "da", "NUMBER", "f", "NUMBER", "Collection", "of", "Style", "guide", "from", "big", "companies", "and", "organizations", "LINK", "I", "consulted", "with", "UX", "experts", "and", "they", "all", "recommended", "to", "go", "for", "the", "Sentence", "style", "capitalization", "for", "menu", "items", "as", "in", "Cutter", "NUMBER", "Updated", "the", "issue", "with", "another", "reference", "that", "collects", "style", "guide", "of", "big", "companies", "and", "organizations", "e", "NUMBER", "g", "Microsoft", "s", "LINK", "us", "style", "guide", "capitalization", "And", "more", "elementary", "OS", "LINK", "interface", "guidelines", "capitalization", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "pull", "request", "update", "a", "menu", "item", "text", "to", "make", "it", "clearer", "for", "the", "reader", "Test", "plan", "required", "Go", "to", "File", "menu", "and", "make", "sure", "the", "action", "says", "Run", "radare", "NUMBER", "script", "and", "not", "Run", "Script", "NUMBER", "Make", "sure", "that", "it", "works", "and", "indeed", "run", "a", "script", "NUMBER", "Make", "sure", "that", "the", "docs", "be", "update", "correctyl", "Related", "issue", "Related", "to", "NUMBER", "Environment", "information", "Operating", "System", "ubuntu", "NUMBER", "Cutter", "version", "NUMBER", "File", "format", "pe", "Arch", "x", "NUMBER", "Type", "EXEC", "Executable", "file", "Describe", "the", "bug", "Crash", "when", "I", "try", "to", "seek", "into", "a", "function", "while", "the", "decompiler", "widget", "be", "open", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "the", "Cutter", "project", "x", "NUMBER", "pe", "NUMBER", "Open", "the", "Decompiler", "Widget", "NUMBER", "Click", "on", "a", "function", "to", "seek", "NUMBER", "See", "error", "Expected", "behavior", "Seek", "into", "the", "new", "function", "NUMBER", "Screenshots", "Open", "Cutter", "Capture", "du", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fbf", "NUMBER", "ce", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "d", "NUMBER", "png", "Open", "the", "Decompiler", "Widget", "Capture", "du", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "c", "NUMBER", "png", "Seek", "into", "a", "function", "Capture", "du", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "NUMBER", "ea", "NUMBER", "fa", "NUMBER", "ba", "NUMBER", "png", "Cutter", "crashed", "Capture", "du", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ebb", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "NUMBER", "ea", "NUMBER", "ac", "NUMBER", "ab", "NUMBER", "ae", "NUMBER", "png", "Additional", "context", "All", "of", "this", "work", "fine", "when", "I", "open", "the", "same", "binary", "outside", "of", "the", "project", "NUMBER", "In", "the", "project", "I", "have", "a", "message", "from", "Ghidra", "decompiler", "Ghidra", "Decompiler", "Error", "No", "sleigh", "specification", "for", "x", "NUMBER", "LE", "NUMBER", "default", "Crash", "Report", "Cutter_crash_dump_", "NUMBER", "_", "NUMBER", "zip", "LINK", "_crash_dump_", "NUMBER", "_", "NUMBER", "zip", "I", "have", "do", "some", "test", "it", "s", "not", "linked", "with", "PE", "but", "with", "projects", "NUMBER", "When", "I", "open", "an", "x", "NUMBER", "NUMBER", "ELF", "binary", "it", "works", "fine", "but", "when", "I", "save", "as", "a", "project", "close", "Cutter", "and", "reopen", "the", "project", "the", "bug", "appear", "NUMBER", "And", "I", "have", "the", "same", "message", "from", "Ghidra", "when", "I", "start", "the", "project", "Ghidra", "Decompiler", "Error", "No", "sleigh", "specification", "for", "x", "NUMBER", "LE", "NUMBER", "default", "Is", "it", "the", "same", "as", "my", "question", "NUMBER", "cutter", "version", "git", "latest", "commit", "NUMBER", "ca", "NUMBER", "a", "NUMBER", "eda", "NUMBER", "e", "NUMBER", "eef", "NUMBER", "d", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "cd", "cutter", "git", "submodule", "update", "init", "recursive", "so", "radare", "NUMBER", "version", "NUMBER", "commit", "NUMBER", "d", "NUMBER", "eda", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "NUMBER", "e", "NUMBER", "e", "NUMBER", "r", "NUMBER", "ghidra", "dec", "version", "git", "latest", "commit", "NUMBER", "ec", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cdcd", "NUMBER", "ae", "NUMBER", "cutter", "build", "command", "cmake", "DCMAKE_INSTALL_PREFIX", "usr", "DCUTTER_USE_BUNDLED_RADARE", "NUMBER", "ON", "DCUTTER_ENABLE_PYTHON", "true", "DCUTTER_ENABLE_PYTHON_BINDINGS", "true", "NUMBER", "src", "G", "Ninja", "and", "install", "r", "NUMBER", "ghidra", "dec", "build", "command", "cmake", "DCMAKE_INSTALL_PREFIX", "usr", "DBUILD_CUTTER_PLUGIN", "ON", "DCUTTER_SOURCE_DIR", "home", "ruben", "Desktop", "cutter", "G", "Ninja", "NUMBER", "and", "install", "everthing", "be", "ok", "but", "if", "i", "select", "Windows", "Decompile", "crash", "And", "then", "nothing", "left", "Windows", "suddenly", "disappear", "from", "the", "desktop", "NUMBER", "I", "tried", "to", "start", "it", "with", "GDB", "and", "then", "select", "Windows", "Decompile", "This", "be", "GDB", "s", "information", "qwe", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "f", "NUMBER", "cdac", "NUMBER", "ea", "NUMBER", "aa", "cd", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "png", "Hi", "thank", "you", "for", "open", "an", "issue", "Seems", "like", "you", "didn", "t", "fill", "the", "issue", "template", "and", "thus", "your", "issue", "be", "lacking", "important", "information", "we", "need", "to", "know", "NUMBER", "Specifically", "what", "be", "the", "version", "of", "radare", "NUMBER", "you", "have", "install", "Did", "you", "make", "sure", "all", "three", "NUMBER", "repositories", "be", "up", "to", "date", "What", "be", "the", "output", "you", "receive", "When", "you", "execute", "Cutter", "without", "plugins", "no", "plugins", "the", "crash", "still", "happen", "Please", "fill", "the", "issue", "with", "all", "the", "detailed", "and", "relevant", "information", "so", "we", "will", "be", "able", "to", "fully", "help", "you", "NUMBER", "Attach", "file", "screenshots", "and", "reproducers", "if", "you", "can", "NUMBER", "Thanks", "Looks", "like", "you", "might", "be", "mixing", "multiple", "R", "NUMBER", "version", "NUMBER", "You", "compiled", "Cutter", "with", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "ON", "NUMBER", "But", "r", "NUMBER", "ghidra", "during", "compilation", "most", "likely", "use", "system", "r", "NUMBER", "I", "don", "t", "recommend", "use", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "ON", "for", "system", "installation", "NUMBER", "This", "option", "be", "more", "aimed", "at", "development", "build", "NUMBER", "I", "install", "a", "new", "OS", "the", "same", "as", "mine", "on", "the", "other", "computer", "NUMBER", "So", "I", "can", "guarantee", "that", "I", "only", "have", "one", "version", "of", "R", "NUMBER", "Repeat", "all", "the", "steps", "above", "NUMBER", "Crash", "Please", "do", "the", "following", "steps", "and", "confirm", "if", "it", "still", "crashes", "clean", "up", "all", "the", "old", "installations", "Build", "and", "install", "r", "NUMBER", "use", "r", "NUMBER", "source", "that", "matches", "with", "submodule", "Build", "cutter", "with", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "OFF", "Build", "r", "NUMBER", "ghidra", "I", "did", "as", "you", "said", "NUMBER", "Crash", "cutter", "git", "latest", "build", "command", "cmake", "DCMAKE_INSTALL_PREFIX", "usr", "DCUTTER_USE_BUNDLED_RADARE", "NUMBER", "OFF", "DCUTTER_ENABLE_PYTHON", "true", "DCUTTER_ENABLE_PYTHON_BINDINGS", "true", "NUMBER", "src", "G", "Ninja", "radare", "NUMBER", "_commit", "NUMBER", "d", "NUMBER", "eda", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "NUMBER", "e", "NUMBER", "e", "NUMBER", "HEAD", "master", "tag", "NUMBER", "_", "build", "install", "sys", "install", "NUMBER", "sh", "r", "NUMBER", "ghidra", "git", "latest", "build", "command", "cmake", "DCMAKE_INSTALL_PREFIX", "usr", "DBUILD_CUTTER_PLUGIN", "ON", "DCUTTER_SOURCE_DIR", "home", "ruben", "Desktop", "cutter", "G", "Ninja", "NUMBER", "I", "still", "haven", "t", "seen", "you", "answer", "of", "what", "happens", "when", "you", "run", "cutter", "with", "no", "plugins", "flag", "NUMBER", "Does", "it", "actually", "crashes", "or", "do", "the", "UI", "freezes", "and", "you", "kill", "it", "either", "directly", "or", "with", "a", "popups", "that", "shown", "shows", "What", "happens", "if", "you", "try", "run", "decompiler", "in", "the", "console", "widget", "use", "pdg", "command", "The", "output", "you", "posted", "earlier", "from", "gdb", "doesn", "t", "look", "like", "crash", "more", "like", "something", "calling", "exit", "NUMBER", "You", "can", "try", "setting", "a", "breakpoint", "in", "exit", "method", "by", "calling", "break", "exit", "in", "gdb", "before", "starting", "the", "executable", "NUMBER", "Does", "resetting", "Cutter", "settings", "have", "any", "effect", "Have", "you", "tried", "more", "than", "one", "executable", "Does", "it", "happens", "with", "any", "function", "in", "the", "executable", "run", "cutter", "with", "no", "plugins", "everthing", "works", "fine", "NUMBER", "I", "just", "select", "Decompile", "window", "it", "crash", "NUMBER", "The", "entire", "window", "disappears", "and", "cutter", "be", "not", "in", "the", "process", "tree", "NUMBER", "resetting", "Cutter", "settings", "have", "no", "effect", "i", "only", "start", "one", "executable", "other", "function", "be", "normal", "except", "show", "decompile", "window", "NUMBER", "pdg", "command", "work", "fine", "NUMBER", "I", "rebuild", "with", "debug", "symbol", "and", "use", "gdb", "set", "breakpoint", "catch", "syscall", "exit", "exit_group", "by", "the", "way", "break", "exit", "not", "work", "This", "be", "crash", "qwe", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "cdf", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "NUMBER", "eefdb", "NUMBER", "a", "NUMBER", "png", "bt", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cb", "NUMBER", "d", "NUMBER", "cdf", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "png", "Hi", "The", "AppImage", "can", "t", "run", "on", "ancient", "Linux", "environments", "NUMBER", "So", "I", "m", "trying", "to", "compile", "it", "from", "scratch", "inside", "a", "Debian", "NUMBER", "x", "NUMBER", "I", "manually", "compiled", "update", "install", "cmake", "python", "git", "meson", "and", "ninja", "so", "the", "build", "system", "meets", "the", "requirements", "NUMBER", "No", "problem", "until", "I", "get", "this", "error", "shlr", "libtree_sitter", "NUMBER", "a", "tree", "sitter_lib_src_lib", "NUMBER", "c", "NUMBER", "o", "In", "function", "clock_now", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "shlr", "tree", "sitter", "lib", "src", "NUMBER", "NUMBER", "clock", "NUMBER", "h", "NUMBER", "undefined", "reference", "to", "clock_gettime", "collect", "NUMBER", "error", "ld", "returned", "NUMBER", "exit", "status", "NUMBER", "NUMBER", "Generating", "cc", "arm", "NUMBER", "sdb", "with", "a", "meson_exe", "NUMBER", "py", "custom", "command", "ninja", "build", "stopped", "subcommand", "fail", "NUMBER", "make", "NUMBER", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "stamp", "Radare", "NUMBER", "Bundled", "build", "Error", "NUMBER", "make", "NUMBER", "CMakeFiles", "Radare", "NUMBER", "Bundled", "NUMBER", "dir", "all", "Error", "NUMBER", "make", "all", "Error", "NUMBER", "This", "problem", "seems", "to", "appear", "in", "ancient", "radare", "NUMBER", "compilations", "LINK", "However", "I", "don", "t", "know", "how", "to", "fix", "it", "NUMBER", "So", "please", "can", "you", "help", "me", "Futhermore", "I", "suggest", "to", "use", "a", "more", "legacy", "environment", "to", "compile", "the", "AppImage", "for", "example", "a", "Debian", "NUMBER", "or", "CentOS", "NUMBER", "almost", "NUMBER", "Or", "privide", "different", "AppImages", "based", "on", "the", "major", "kernel", "version", "NUMBER", "Regards", "NUMBER", "lars", "NUMBER", "could", "you", "try", "this", "patch", "on", "your", "system", "I", "tried", "to", "get", "a", "debian", "wheezy", "container", "to", "test", "it", "but", "it", "couldn", "t", "even", "install", "package", "NUMBER", "diff", "diff", "git", "a", "libr", "core", "meson", "NUMBER", "build", "b", "libr", "core", "meson", "NUMBER", "build", "index", "NUMBER", "dbc", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "a", "libr", "core", "meson", "NUMBER", "build", "b", "libr", "core", "meson", "NUMBER", "build", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "r_core_deps", "platform_deps", "gdb_dep", "java_dep", "cc", "NUMBER", "find_library", "rt", "required", "true", "shell_parser_dep", "Please", "let", "me", "know", "how", "it", "goes", "NUMBER", "lars", "NUMBER", "could", "you", "try", "this", "patch", "on", "your", "system", "I", "tried", "to", "get", "a", "debian", "wheezy", "container", "to", "test", "it", "but", "it", "couldn", "t", "even", "install", "package", "NUMBER", "Please", "let", "me", "know", "how", "it", "goes", "NUMBER", "Hi", "ret", "NUMBER", "libc", "Thank", "you", "This", "patch", "fix", "the", "error", "point", "NUMBER", "However", "another", "one", "similar", "appears", "NUMBER", "NUMBER", "Linking", "target", "binr", "r", "NUMBER", "r", "r", "NUMBER", "r", "FAILED", "binr", "r", "NUMBER", "r", "r", "NUMBER", "r", "cc", "o", "binr", "r", "NUMBER", "r", "r", "NUMBER", "r", "binr", "r", "NUMBER", "r", "r", "NUMBER", "r", "NUMBER", "p", "r", "NUMBER", "r", "NUMBER", "c", "NUMBER", "o", "binr", "r", "NUMBER", "r", "r", "NUMBER", "r", "NUMBER", "p", "load", "NUMBER", "c", "NUMBER", "o", "binr", "r", "NUMBER", "r", "r", "NUMBER", "r", "NUMBER", "p", "run", "NUMBER", "c", "NUMBER", "o", "Wl", "as", "needed", "Wl", "no", "undefined", "Wl", "whole", "archive", "Wl", "start", "group", "shlr", "libr", "NUMBER", "sdb", "NUMBER", "a", "Wl", "no", "whole", "archive", "libr", "util", "libr_util", "NUMBER", "so", "NUMBER", "shlr", "libr", "NUMBER", "spp", "NUMBER", "a", "shlr", "libr", "NUMBER", "zlib", "NUMBER", "a", "ldl", "lm", "pthread", "lutil", "Wl", "end", "group", "Wl", "rpath", "ORIGIN", "NUMBER", "NUMBER", "libr", "util", "ORIGIN", "NUMBER", "NUMBER", "shlr", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "util", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "shlr", "binr", "r", "NUMBER", "r", "r", "NUMBER", "r", "NUMBER", "p", "run", "NUMBER", "c", "NUMBER", "o", "In", "function", "r", "NUMBER", "r_subprocess_wait", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "binr", "r", "NUMBER", "r", "run", "NUMBER", "c", "NUMBER", "undefined", "reference", "to", "clock_gettime", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "binr", "r", "NUMBER", "r", "run", "NUMBER", "c", "NUMBER", "undefined", "reference", "to", "clock_gettime", "collect", "NUMBER", "error", "ld", "returned", "NUMBER", "exit", "status", "NUMBER", "NUMBER", "Linking", "target", "binr", "rafind", "NUMBER", "rafind", "NUMBER", "ninja", "build", "stopped", "subcommand", "fail", "NUMBER", "make", "NUMBER", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "stamp", "Radare", "NUMBER", "Bundled", "build", "Error", "NUMBER", "make", "NUMBER", "CMakeFiles", "Radare", "NUMBER", "Bundled", "NUMBER", "dir", "all", "Error", "NUMBER", "make", "all", "Error", "NUMBER", "Perhaps", "a", "similar", "patch", "will", "solve", "it", "NUMBER", "Yes", "ok", "that", "s", "perfect", "NUMBER", "I", "will", "provide", "a", "full", "patch", "and", "after", "you", "test", "it", "we", "can", "include", "it", "in", "r", "NUMBER", "lars", "NUMBER", "Please", "try", "this", "diff", "From", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "Mon", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "From", "Riccardo", "Schirone", "TAG", "Date", "Thu", "NUMBER", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Subject", "PATCH", "Make", "sure", "to", "use", "lrt", "when", "needed", "to", "use", "clock_gettime", "meson", "binr", "r", "NUMBER", "r", "meson", "NUMBER", "build", "NUMBER", "libr", "core", "meson", "NUMBER", "build", "NUMBER", "meson", "NUMBER", "build", "NUMBER", "NUMBER", "file", "change", "NUMBER", "insertions", "NUMBER", "deletions", "diff", "git", "a", "binr", "r", "NUMBER", "r", "meson", "NUMBER", "build", "b", "binr", "r", "NUMBER", "r", "meson", "NUMBER", "build", "index", "NUMBER", "c", "NUMBER", "da", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "a", "binr", "r", "NUMBER", "r", "meson", "NUMBER", "build", "b", "binr", "r", "NUMBER", "r", "meson", "NUMBER", "build", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "if", "get_option", "enable_r", "NUMBER", "r", "executable", "r", "NUMBER", "r", "r", "NUMBER", "r", "NUMBER", "c", "load", "NUMBER", "c", "run", "NUMBER", "c", "include_directories", "platform_inc", "dependencies", "r_util_dep", "r_util_dep", "lrt", "install", "true", "install_rpath", "rpath", "implicit_include_directories", "false", "endif", "No", "newline", "at", "end", "of", "file", "endif", "diff", "git", "a", "libr", "core", "meson", "NUMBER", "build", "b", "libr", "core", "meson", "NUMBER", "build", "index", "NUMBER", "dbc", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "a", "libr", "core", "meson", "NUMBER", "build", "b", "libr", "core", "meson", "NUMBER", "build", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "r_core_deps", "platform_deps", "gdb_dep", "java_dep", "lrt", "shell_parser_dep", "diff", "git", "a", "meson", "NUMBER", "build", "b", "meson", "NUMBER", "build", "index", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cbd", "NUMBER", "NUMBER", "a", "meson", "NUMBER", "build", "b", "meson", "NUMBER", "build", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "foreach", "item", "explicit_bzero", "include", "TAG", "explicit_memset", "include", "TAG", "clock_nanosleep", "include", "TAG", "clock_gettime", "include", "TAG", "sigaction", "include", "TAG", "func", "item", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "foreach", "item", "userconf", "NUMBER", "set", "NUMBER", "HAVE_", "NUMBER", "NUMBER", "format", "func", "NUMBER", "to_upper", "ok", "endforeach", "lrt", "if", "userconf", "NUMBER", "get", "HAVE_CLOCK_GETTIME", "NUMBER", "NUMBER", "and", "cc", "NUMBER", "has_header_symbol", "features", "NUMBER", "h", "__GLIBC__", "lrt", "cc", "NUMBER", "find_library", "rt", "required", "true", "endif", "r_userconf_h", "configure_file", "input", "libr", "include", "r_userconf", "NUMBER", "h", "NUMBER", "acr", "output", "r_userconf", "NUMBER", "h", "NUMBER", "Hi", "ret", "NUMBER", "libc", "Testing", "the", "new", "patch", "but", "it", "generates", "an", "error", "at", "start", "of", "the", "compilation", "Configuring", "libr", "NUMBER", "pc", "use", "configuration", "Run", "time", "dependency", "capstone", "find", "NO", "tried", "pkgconfig", "and", "cmake", "Message", "Use", "bundled", "capstone", "Run", "time", "dependency", "tree", "sitter", "find", "NO", "tried", "pkgconfig", "and", "cmake", "Message", "Use", "bundled", "tree", "sitter", "Run", "time", "dependency", "liblz", "NUMBER", "find", "NO", "tried", "pkgconfig", "and", "cmake", "Message", "Use", "bundled", "lz", "NUMBER", "Run", "time", "dependency", "zlib", "find", "YES", "NUMBER", "Message", "Use", "bundled", "zlib", "Run", "time", "dependency", "libzip", "find", "YES", "NUMBER", "Message", "Use", "bundled", "zip", "Dependency", "threads", "find", "YES", "unknown", "cached", "Message", "Use", "bundled", "magic", "library", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "core", "meson", "NUMBER", "build", "NUMBER", "NUMBER", "ERROR", "Argument", "be", "of", "an", "unacceptable", "type", "str", "NUMBER", "Must", "be", "either", "an", "external", "dependency", "returned", "by", "find_library", "or", "dependency", "or", "an", "internal", "dependency", "returned", "by", "declare_dependency", "NUMBER", "A", "full", "log", "can", "be", "find", "at", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "meson", "logs", "meson", "log", "NUMBER", "txt", "make", "NUMBER", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "stamp", "Radare", "NUMBER", "Bundled", "configure", "Error", "NUMBER", "make", "NUMBER", "CMakeFiles", "Radare", "NUMBER", "Bundled", "NUMBER", "dir", "all", "Error", "NUMBER", "make", "all", "Error", "NUMBER", "You", "know", "where", "be", "the", "problem", "Note", "Every", "time", "I", "delete", "the", "build", "directory", "and", "I", "start", "the", "compilation", "of", "Cutter", "from", "the", "start", "NUMBER", "Regards", "NUMBER", "Hi", "ret", "NUMBER", "libc", "I", "moddified", "your", "last", "patch", "with", "this", "simple", "hack", "replace", "the", "two", "instances", "of", "the", "lrt", "with", "the", "original", "cc", "NUMBER", "find_library", "rt", "required", "true", "and", "now", "the", "compilation", "continues", "NUMBER", "So", "the", "problem", "be", "some", "syntax", "error", "with", "the", "test", "NUMBER", "Howerver", "a", "third", "link", "error", "appears", "NUMBER", "NUMBER", "Linking", "target", "test", "unit", "test_r", "NUMBER", "r", "FAILED", "test", "unit", "test_r", "NUMBER", "r", "cc", "o", "test", "unit", "test_r", "NUMBER", "r", "test", "unit", "test_r", "NUMBER", "r", "NUMBER", "p", "test_r", "NUMBER", "r", "NUMBER", "c", "NUMBER", "o", "Wl", "as", "needed", "Wl", "no", "undefined", "Wl", "whole", "archive", "Wl", "start", "group", "shlr", "libr", "NUMBER", "sdb", "NUMBER", "a", "Wl", "no", "whole", "archive", "libr", "util", "libr_util", "NUMBER", "so", "NUMBER", "shlr", "libr", "NUMBER", "spp", "NUMBER", "a", "shlr", "libr", "NUMBER", "zlib", "NUMBER", "a", "libr", "main", "libr_main", "NUMBER", "so", "NUMBER", "libr", "config", "libr_config", "NUMBER", "so", "NUMBER", "libr", "cons", "libr_cons", "NUMBER", "so", "NUMBER", "libr", "io", "libr_io", "NUMBER", "so", "NUMBER", "libr", "flag", "libr_flag", "NUMBER", "so", "NUMBER", "libr", "asm", "libr_asm", "NUMBER", "so", "NUMBER", "libr", "core", "libr_core", "NUMBER", "so", "NUMBER", "libr", "debug", "libr_debug", "NUMBER", "so", "NUMBER", "libr", "hash", "libr_hash", "NUMBER", "so", "NUMBER", "libr", "bin", "libr_bin", "NUMBER", "so", "NUMBER", "libr", "lang", "libr_lang", "NUMBER", "so", "NUMBER", "libr", "anal", "libr_anal", "NUMBER", "so", "NUMBER", "libr", "parse", "libr_parse", "NUMBER", "so", "NUMBER", "libr", "bp", "libr_bp", "NUMBER", "so", "NUMBER", "libr", "egg", "libr_egg", "NUMBER", "so", "NUMBER", "libr", "reg", "libr_reg", "NUMBER", "so", "NUMBER", "libr", "search", "libr_search", "NUMBER", "so", "NUMBER", "libr", "syscall", "libr_syscall", "NUMBER", "so", "NUMBER", "libr", "socket", "libr_socket", "NUMBER", "so", "NUMBER", "libr", "fs", "libr_fs", "NUMBER", "so", "NUMBER", "libr", "magic", "libr_magic", "NUMBER", "so", "NUMBER", "libr", "crypto", "libr_crypto", "NUMBER", "so", "NUMBER", "ldl", "lm", "pthread", "lutil", "Wl", "end", "group", "Wl", "rpath", "ORIGIN", "NUMBER", "NUMBER", "libr", "util", "ORIGIN", "NUMBER", "NUMBER", "shlr", "ORIGIN", "NUMBER", "NUMBER", "libr", "main", "ORIGIN", "NUMBER", "NUMBER", "libr", "config", "ORIGIN", "NUMBER", "NUMBER", "libr", "cons", "ORIGIN", "NUMBER", "NUMBER", "libr", "io", "ORIGIN", "NUMBER", "NUMBER", "libr", "socket", "ORIGIN", "NUMBER", "NUMBER", "shlr", "gdb", "ORIGIN", "NUMBER", "NUMBER", "shlr", "ptrace", "wrap", "ORIGIN", "NUMBER", "NUMBER", "libr", "flag", "ORIGIN", "NUMBER", "NUMBER", "libr", "asm", "ORIGIN", "NUMBER", "NUMBER", "libr", "syscall", "ORIGIN", "NUMBER", "NUMBER", "libr", "parse", "ORIGIN", "NUMBER", "NUMBER", "libr", "reg", "ORIGIN", "NUMBER", "NUMBER", "libr", "lang", "ORIGIN", "NUMBER", "NUMBER", "libr", "core", "ORIGIN", "NUMBER", "NUMBER", "libr", "search", "ORIGIN", "NUMBER", "NUMBER", "libr", "anal", "ORIGIN", "NUMBER", "NUMBER", "libr", "crypto", "ORIGIN", "NUMBER", "NUMBER", "libr", "hash", "ORIGIN", "NUMBER", "NUMBER", "libr", "fs", "ORIGIN", "NUMBER", "NUMBER", "libr", "magic", "ORIGIN", "NUMBER", "NUMBER", "libr", "egg", "ORIGIN", "NUMBER", "NUMBER", "libr", "debug", "ORIGIN", "NUMBER", "NUMBER", "libr", "bp", "ORIGIN", "NUMBER", "NUMBER", "libr", "bin", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "util", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "shlr", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "main", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "config", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "cons", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "io", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "socket", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "shlr", "gdb", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "shlr", "ptrace", "wrap", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "flag", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "asm", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "syscall", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "parse", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "reg", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "lang", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "core", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "search", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "anal", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "crypto", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "hash", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "fs", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "magic", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "egg", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "debug", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "bp", "Wl", "rpath", "link", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "libr", "bin", "test", "unit", "test_r", "NUMBER", "r", "NUMBER", "p", "test_r", "NUMBER", "r", "NUMBER", "c", "NUMBER", "o", "In", "function", "r", "NUMBER", "r_subprocess_wait", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "test", "unit", "NUMBER", "NUMBER", "binr", "r", "NUMBER", "r", "run", "NUMBER", "c", "NUMBER", "undefined", "reference", "to", "clock_gettime", "home", "user", "cutter", "build", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "build", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "test", "unit", "NUMBER", "NUMBER", "binr", "r", "NUMBER", "r", "run", "NUMBER", "c", "NUMBER", "undefined", "reference", "to", "clock_gettime", "collect", "NUMBER", "error", "ld", "returned", "NUMBER", "exit", "status", "NUMBER", "NUMBER", "Compiling", "C", "object", "test", "unit", "test_sparse", "NUMBER", "p", "test_sparse", "NUMBER", "c", "NUMBER", "o", "ninja", "build", "stopped", "subcommand", "fail", "NUMBER", "make", "NUMBER", "Radare", "NUMBER", "Bundled", "prefix", "src", "Radare", "NUMBER", "Bundled", "stamp", "Radare", "NUMBER", "Bundled", "build", "Error", "NUMBER", "make", "NUMBER", "CMakeFiles", "Radare", "NUMBER", "Bundled", "NUMBER", "dir", "all", "Error", "NUMBER", "make", "all", "Error", "NUMBER", "lars", "NUMBER", "please", "paste", "the", "full", "meson", "output", "NUMBER", "Hi", "ret", "NUMBER", "libc", "The", "compilation", "of", "the", "radare", "NUMBER", "be", "finished", "Thank", "you", "for", "your", "contribution", "NUMBER", "Here", "the", "info", "to", "create", "a", "patch", "Three", "different", "points", "to", "include", "link", "with", "the", "librt", "binr", "r", "NUMBER", "r", "meson", "NUMBER", "build", "meson", "NUMBER", "build", "test", "unit", "meson", "NUMBER", "build", "which", "requires", "this", "change", "NUMBER", "c", "NUMBER", "NUMBER", "TAG", "r_magic_dep", "cc", "NUMBER", "find_library", "rt", "required", "true", "Regarding", "the", "syntax", "error", "of", "the", "test", "to", "enable", "the", "librt", "the", "full", "meson", "output", "doesn", "t", "print", "anything", "not", "include", "in", "the", "previous", "error", "paste", "NUMBER", "Sorry", "I", "suspect", "the", "problem", "be", "because", "of", "the", "lack", "of", "parentheses", "regard", "the", "operator", "AND", "NUMBER", "Please", "check", "it", "NUMBER", "Anyway", "I", "need", "to", "comment", "that", "after", "the", "compilation", "of", "the", "radare", "NUMBER", "component", "the", "process", "fail", "regard", "the", "Qt", "library", "NUMBER", "I", "ll", "try", "to", "update", "the", "stock", "version", "too", "NUMBER", "In", "any", "case", "please", "generate", "a", "new", "patch", "NUMBER", "I", "ll", "try", "to", "use", "it", "and", "when", "it", "goes", "then", "you", "can", "merge", "it", "NUMBER", "Thank", "you", "for", "your", "help", "Regards", "NUMBER", "Regarding", "the", "syntax", "error", "of", "the", "test", "to", "enable", "the", "librt", "the", "full", "meson", "output", "doesn", "t", "print", "anything", "not", "include", "in", "the", "previous", "error", "paste", "NUMBER", "Sorry", "I", "suspect", "the", "problem", "be", "because", "of", "the", "lack", "of", "parentheses", "regard", "the", "operator", "AND", "NUMBER", "Please", "check", "it", "NUMBER", "Please", "do", "paste", "it", "anyway", "NUMBER", "I", "want", "to", "see", "whether", "it", "finds", "RT", "__GLIBC__", "and", "clock_gettime", "NUMBER", "Regarding", "the", "syntax", "error", "of", "the", "test", "to", "enable", "the", "librt", "the", "full", "meson", "output", "doesn", "t", "print", "anything", "not", "include", "in", "the", "previous", "error", "paste", "NUMBER", "Sorry", "I", "suspect", "the", "problem", "be", "because", "of", "the", "lack", "of", "parentheses", "regard", "the", "operator", "AND", "NUMBER", "Please", "check", "it", "NUMBER", "Please", "do", "paste", "it", "anyway", "NUMBER", "I", "want", "to", "see", "whether", "it", "finds", "RT", "GLIBC", "and", "clock_gettime", "NUMBER", "With", "your", "second", "patch", "with", "the", "vanilla", "version", "or", "with", "my", "moddified", "patch", "This", "one", "LINK", "issuecomment", "NUMBER", "This", "one", "NUMBER", "comment", "LINK", "issuecomment", "NUMBER", "Here", "it", "be", "NUMBER", "meson", "log", "NUMBER", "txt", "LINK", "log", "NUMBER", "txt", "lars", "NUMBER", "please", "have", "a", "look", "at", "LINK", "NUMBER", "I", "think", "it", "fix", "the", "problem", "for", "good", "NUMBER", "I", "could", "only", "test", "it", "on", "CentOS", "NUMBER", "because", "on", "debian", "wheezy", "container", "I", "could", "not", "install", "any", "package", "NUMBER", "Let", "me", "know", "lars", "NUMBER", "please", "have", "a", "look", "at", "radareorg", "radare", "NUMBER", "NUMBER", "LINK", "NUMBER", "I", "think", "it", "fix", "the", "problem", "for", "good", "NUMBER", "I", "could", "only", "test", "it", "on", "CentOS", "NUMBER", "because", "on", "debian", "wheezy", "container", "I", "could", "not", "install", "any", "package", "NUMBER", "Let", "me", "know", "Hi", "ret", "NUMBER", "libc", "This", "PR", "be", "work", "like", "a", "charm", "The", "radare", "NUMBER", "module", "now", "be", "compile", "NUMBER", "So", "please", "merge", "it", "NUMBER", "Anyway", "here", "some", "aestetic", "warnings", "that", "perhaps", "you", "want", "to", "fix", "Found", "ninja", "NUMBER", "at", "usr", "local", "bin", "ninja", "NUMBER", "NUMBER", "Compiling", "C", "object", "libr", "util", "libr_util", "NUMBER", "so", "NUMBER", "p", "table", "NUMBER", "c", "NUMBER", "o", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "util", "table", "NUMBER", "c", "In", "function", "r_table_visual_list", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "util", "table", "NUMBER", "c", "NUMBER", "NUMBER", "warning", "universal", "character", "names", "be", "only", "valid", "in", "C", "and", "C", "NUMBER", "enable", "by", "default", "NUMBER", "NUMBER", "Compiling", "C", "object", "libr", "util", "libr_util", "NUMBER", "so", "NUMBER", "p", "print", "NUMBER", "c", "NUMBER", "o", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "util", "print", "NUMBER", "c", "In", "function", "r_print_columns", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "util", "print", "NUMBER", "c", "NUMBER", "NUMBER", "warning", "universal", "character", "names", "be", "only", "valid", "in", "C", "and", "C", "NUMBER", "enable", "by", "default", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "util", "print", "NUMBER", "c", "In", "function", "r_print_progressbar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "util", "print", "NUMBER", "c", "NUMBER", "NUMBER", "warning", "universal", "character", "names", "be", "only", "valid", "in", "C", "and", "C", "NUMBER", "enable", "by", "default", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "util", "print", "NUMBER", "c", "In", "function", "r_print_rangebar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "util", "print", "NUMBER", "c", "NUMBER", "NUMBER", "warning", "universal", "character", "names", "be", "only", "valid", "in", "C", "and", "C", "NUMBER", "enable", "by", "default", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "util", "print", "NUMBER", "c", "In", "function", "printHistBlock", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "libr", "util", "print", "NUMBER", "c", "NUMBER", "NUMBER", "warning", "universal", "character", "names", "be", "only", "valid", "in", "C", "and", "C", "NUMBER", "enable", "by", "default", "NUMBER", "NUMBER", "Compiling", "C", "object", "test", "unit", "test_anal_block", "NUMBER", "p", "test_anal_block", "NUMBER", "c", "NUMBER", "o", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "test", "unit", "test_anal_block", "NUMBER", "c", "In", "function", "test_r_anal_block_contains", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "test", "unit", "test_anal_block", "NUMBER", "c", "NUMBER", "NUMBER", "warning", "miss", "braces", "around", "initializer", "Wmissing", "braces", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "radare", "NUMBER", "test", "unit", "test_anal_block", "NUMBER", "c", "NUMBER", "NUMBER", "warning", "near", "initialization", "for", "dummy", "NUMBER", "_rb", "Wmissing", "braces", "Regards", "NUMBER", "Hi", "XVilka", "The", "problem", "of", "doing", "the", "same", "with", "Cutter", "be", "tricker", "since", "it", "requires", "relatively", "new", "Qt", "NUMBER", "I", "be", "not", "NUMBER", "sure", "if", "that", "Qt", "will", "even", "compile", "on", "that", "distribution", "NUMBER", "Now", "I", "m", "compile", "from", "scratch", "Qt", "NUMBER", "as", "the", "stock", "version", "be", "not", "support", "by", "Cutter", "NUMBER", "So", "I", "need", "to", "know", "the", "minimal", "Qt", "version", "required", "by", "Cutter", "NUMBER", "Any", "idea", "Regards", "NUMBER", "Note", "This", "be", "the", "log", "of", "the", "error", "with", "the", "stock", "Qt", "v", "NUMBER", "NUMBER", "Building", "CXX", "object", "CMakeFiles", "Cutter", "NUMBER", "dir", "Main", "NUMBER", "cpp", "NUMBER", "o", "In", "file", "include", "from", "home", "user", "cutter", "src", "core", "Cutter", "NUMBER", "h", "NUMBER", "NUMBER", "from", "home", "user", "cutter", "src", "core", "MainWindow", "NUMBER", "h", "NUMBER", "from", "home", "user", "cutter", "src", "CutterApplication", "NUMBER", "h", "NUMBER", "from", "home", "user", "cutter", "src", "Main", "NUMBER", "cpp", "NUMBER", "home", "user", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "NUMBER", "NUMBER", "error", "miss", "binary", "operator", "before", "token", "home", "user", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "In", "function", "QString", "RAddressString", "RVA", "home", "user", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "NUMBER", "NUMBER", "error", "asprintf", "be", "not", "a", "member", "of", "QString", "home", "user", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "In", "function", "QString", "RSizeString", "RVA", "home", "user", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "NUMBER", "NUMBER", "error", "asprintf", "be", "not", "a", "member", "of", "QString", "home", "user", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "In", "function", "QString", "RHexString", "RVA", "home", "user", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "NUMBER", "NUMBER", "error", "asprintf", "be", "not", "a", "member", "of", "QString", "home", "user", "cutter", "src", "Main", "NUMBER", "cpp", "In", "function", "int", "main", "int", "char", "home", "user", "cutter", "src", "Main", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "AA_ShareOpenGLContexts", "be", "not", "a", "member", "of", "Qt", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "Main", "NUMBER", "cpp", "NUMBER", "o", "Error", "NUMBER", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "all", "Error", "NUMBER", "make", "all", "Error", "NUMBER", "Thank", "you", "XVilka", "I", "as", "well", "prefer", "the", "first", "approach", "Environment", "information", "Local", "Cutter", "NUMBER", "in", "Windows", "NUMBER", "NUMBER", "bit", "Remote", "Linux", "NUMBER", "x", "NUMBER", "in", "embbeded", "platform", "Remote", "command", "gdbserver", "NUMBER", "NUMBER", "root", "my_binary", "my_params", "Remote", "binary", "my_binary", "be", "ELF", "NUMBER", "with", "stripped", "data", "Describe", "the", "bug", "When", "I", "_LOAD_", "the", "binary", "in", "the", "Windows", "machine", "I", "can", "see", "the", "pseudo", "code", "of", "the", "decompiled", "function", "NUMBER", "However", "when", "I", "_CONNECT_", "to", "the", "remote", "gdbserver", "run", "the", "binary", "all", "the", "decompiled", "code", "change", "to", "WARNING", "Bad", "instruction", "Truncating", "control", "flow", "here", "and", "all", "funcitons", "be", "empty", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "the", "ELF", "binary", "in", "the", "Windows", "Cutter", "use", "the", "file", "option", "first", "copy", "the", "file", "to", "the", "client", "machine", "NUMBER", "NUMBER", "Select", "the", "decompiler", "tab", "NUMBER", "NUMBER", "Start", "the", "remote", "binary", "with", "the", "gdbserver", "tool", "NUMBER", "NUMBER", "Connect", "to", "the", "remote", "GDB", "debugger", "with", "the", "IP", "PORT", "NUMBER", "NUMBER", "See", "error", "Expected", "behavior", "When", "connecting", "to", "a", "remote", "GDB", "server", "the", "local", "information", "will", "be", "preserved", "NUMBER", "I", "hope", "you", "fix", "this", "error", "soon", "as", "it", "will", "improve", "a", "lot", "the", "remote", "work", "NUMBER", "Regards", "NUMBER", "Hi", "I", "feel", "I", "m", "not", "sure", "that", "_after_", "connecting", "to", "the", "Remote", "GDB", "I", "need", "to", "execute", "MAP", "FILE", "to", "load", "the", "local", "copy", "of", "the", "binary", "NUMBER", "However", "If", "I", "do", "this", "then", "the", "Cutter", "enters", "in", "a", "infinite", "loop", "doing", "decompiling", "NUMBER", "and", "after", "some", "minutes", "it", "crashes", "NUMBER", "If", "this", "be", "the", "expected", "procedure", "connect", "to", "the", "Remote", "GDB", "and", "MAP", "the", "file", "then", "I", "suggest", "to", "add", "the", "option", "for", "selecting", "the", "file", "in", "the", "same", "window", "that", "defines", "the", "remote", "GDB", "server", "NUMBER", "Anyway", "I", "recommend", "to", "not", "_unload_", "the", "local", "file", "when", "connecting", "to", "a", "remote", "GDB", "server", "NUMBER", "That", "s", "because", "if", "the", "user", "has", "loaded", "it", "then", "it", "s", "expected", "to", "run", "the", "same", "binary", "NUMBER", "I", "hope", "you", "can", "fix", "and", "improve", "this", "NUMBER", "Thank", "you", "Hi", "Please", "help", "me", "to", "understand", "the", "_correct_", "behaviour", "to", "debug", "a", "_REMOTE_", "binary", "When", "connecting", "to", "the", "remote", "GDB", "server", "NUMBER", "how", "I", "can", "LOAD", "the", "binary", "file", "This", "question", "has", "sense", "as", "the", "Decompiler", "seems", "to", "load", "from", "the", "_local_", "memory", "and", "not", "from", "the", "_remote_", "memory", "NUMBER", "Or", "almost", "if", "it", "reads", "from", "the", "remote", "then", "it", "doesn", "t", "work", "NUMBER", "Any", "idea", "Hi", "If", "I", "m", "a", "noobie", "ask", "about", "this", "then", "please", "point", "me", "towards", "how", "to", "use", "Cutter", "with", "remote", "GDB", "sessions", "NUMBER", "If", "not", "then", "please", "help", "me", "to", "fix", "this", "issue", "NUMBER", "Thank", "you", "Hi", "yossizap", "Thank", "you", "to", "review", "this", "issue", "NUMBER", "smile", "To", "have", "good", "information", "You", "re", "saying", "that", "if", "I", "use", "a", "remote", "Cutter", "run", "in", "Linux", "connected", "to", "a", "gdbserver", "run", "in", "another", "Linux", "box", "then", "it", "will", "work", "If", "yes", "then", "I", "ll", "check", "it", "as", "my", "error", "be", "use", "the", "Windows", "Cutter", "version", "NUMBER", "Regards", "NUMBER", "Thank", "you", "yossizap", "Then", "I", "ll", "try", "runing", "it", "in", "WSL", "NUMBER", "LINK", "appimage", "on", "windows", "NUMBER", "Regards", "NUMBER", "Hi", "yossizap", "It", "seems", "that", "Cutter", "AppImage", "runs", "fine", "inside", "WSL", "NUMBER", "However", "I", "see", "this", "If", "I", "open", "with", "the", "option", "Don", "t", "open", "any", "file", "to", "connect", "only", "to", "the", "GDB", "server", "then", "in", "this", "case", "the", "socket", "connection", "be", "not", "stablished", "NUMBER", "It", "s", "a", "requirement", "to", "open", "the", "binary", "file", "first", "from", "a", "local", "copy", "and", "after", "connect", "to", "the", "remote", "gdbserver", "I", "test", "with", "native", "Windows", "version", "and", "with", "the", "AppImage", "over", "WSL", "and", "every", "time", "I", "see", "this", "error", "NUMBER", "Futhermore", "I", "don", "t", "see", "the", "option", "to", "open", "directly", "from", "start", "a", "Remote", "GDB", "session", "NUMBER", "When", "use", "the", "AppImage", "connected", "the", "remote", "GDB", "server", "decompiler", "don", "t", "show", "good", "data", "NUMBER", "even", "if", "I", "try", "r", "NUMBER", "dec", "or", "Ghidra", "Error", "no", "good", "data", "given", "all", "invalid", "opcodes", "NUMBER", "Any", "idea", "Even", "the", "Disassembly", "shows", "invalid", "NUMBER", "Thank", "you", "for", "your", "time", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "There", "be", "no", "documentation", "explaining", "how", "to", "build", "the", "docs", "for", "Cutter", "Describe", "the", "solution", "you", "d", "like", "A", "dedicated", "page", "under", "docs", "contribute", "docs", "that", "will", "instruct", "how", "to", "build", "Cutter", "s", "docs", "NUMBER", "Explain", "the", "requirements", "and", "the", "different", "make", "commands", "such", "as", "make", "html", "and", "make", "quick", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "To", "add", "it", "to", "the", "get", "start", "document", "under", "docs", "contribute", "docs", "NUMBER", "This", "goes", "under", "explain", "the", "requirements", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "start", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "guidelines", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "TAG", "This", "be", "supposed", "to", "be", "a", "fix", "for", "issue", "NUMBER", "NUMBER", "The", "problem", "was", "that", "sorting", "was", "do", "use", "a", "byte", "count", "formatted", "string", "which", "should", "be", "only", "use", "for", "display", "Qt", "DisplayRole", "NUMBER", "This", "fix", "uses", "Qt", "EditRole", "as", "the", "sorting", "role", "NUMBER", "ResourcesModel", "data", "returns", "the", "correct", "value", "depending", "on", "the", "parameter", "role", "a", "byte", "count", "formatted", "string", "in", "case", "of", "Qt", "DisplayRole", "the", "numerical", "byte", "count", "in", "case", "of", "Qt", "EditRole", "Test", "plan", "required", "TAG", "NUMBER", "Launch", "Cutter", "and", "load", "a", "PE", "NUMBER", "file", "NUMBER", "Go", "to", "Resources", "tab", "NUMBER", "Sort", "by", "Size", "Sorting", "be", "do", "by", "numerical", "order", "and", "not", "string", "NUMBER", "TAG", "Closes", "NUMBER", "Well", "you", "be", "right", "they", "do", "NUMBER", "I", "m", "going", "to", "re", "work", "the", "PR", "NUMBER", "Thanks", "for", "the", "PR", "A", "few", "suggestions", "If", "you", "think", "a", "PR", "will", "close", "an", "issue", "please", "add", "Closes", "ISSUE_NUMBER", "at", "the", "end", "of", "the", "PR", "description", "NUMBER", "Until", "it", "s", "ready", "you", "can", "convert", "it", "to", "draft", "too", "same", "as", "WIP", "Good", "work", "polaris", "Thank", "you", "Detailed", "description", "To", "fix", "this", "issue", "I", "had", "to", "add", "several", "overloads", "NUMBER", "And", "then", "temporarily", "set", "bin", "NUMBER", "sections", "for", "search", "NUMBER", "in", "via", "TempConfig", "NUMBER", "This", "makes", "Cutter", "to", "show", "data", "from", "all", "relevant", "address", "and", "not", "only", "current", "map", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "aec", "NUMBER", "cad", "NUMBER", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "f", "NUMBER", "dec", "NUMBER", "d", "NUMBER", "png", "That", "said", "I", "notice", "a", "strange", "behavior", "with", "megabeets_", "NUMBER", "x", "NUMBER", "attached", "NUMBER", "It", "shows", "everything", "empty", "megabeets_", "NUMBER", "x", "NUMBER", "zip", "LINK", "_", "NUMBER", "x", "NUMBER", "zip", "Closing", "issue", "close", "NUMBER", "Thanks", "NUMBER", "Will", "think", "about", "it", "sometime", "see", "what", "can", "be", "use", "to", "make", "a", "better", "UX", "here", "NUMBER", "So", "for", "now", "it", "s", "all", "good", "Environment", "information", "Operating", "System", "Windows", "NUMBER", "version", "NUMBER", "Cutter", "version", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "aarch", "NUMBER", "Describe", "the", "bug", "When", "open", "file", "Cutter", "only", "analyses", "correctly", "about", "NUMBER", "of", "the", "time", "NUMBER", "I", "ll", "select", "a", "file", "to", "open", "choose", "Auto", "Analysis", "and", "keep", "all", "options", "at", "default", "except", "Architecture", "and", "CPU", "which", "I", "set", "to", "arm", "and", "v", "NUMBER", "Sometimes", "it", "works", "and", "a", "long", "list", "of", "function", "be", "display", "NUMBER", "But", "the", "vast", "majority", "of", "the", "time", "I", "just", "see", "the", "screenshot", "below", "NUMBER", "TAG", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "a", "file", "choosing", "arm", "as", "the", "architecture", "and", "v", "NUMBER", "as", "the", "processor", "NUMBER", "I", "managed", "to", "replicate", "this", "with", "a", "bunch", "of", "different", "file", "like", "this", "LINK", "s", "NUMBER", "l", "NUMBER", "xsi", "NUMBER", "RELEASE", "NUMBER", "txt", "file", "NUMBER", "NUMBER", "Cutter", "analyses", "correctly", "or", "it", "doesn", "t", "NUMBER", "Expected", "behavior", "TAG", "Cutter", "would", "open", "and", "analyse", "the", "file", "correctly", "as", "it", "do", "sometimes", "NUMBER", "Screenshots", "TAG", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "NUMBER", "ea", "NUMBER", "fac", "cf", "NUMBER", "d", "NUMBER", "df", "NUMBER", "png", "Additional", "context", "TAG", "While", "trying", "to", "take", "a", "screenshot", "of", "the", "fail", "open", "the", "file", "actually", "opened", "the", "first", "time", "NUMBER", "But", "then", "the", "next", "time", "it", "fail", "NUMBER", "And", "then", "it", "worked", "again", "NUMBER", "And", "then", "fail", "several", "times", "NUMBER", "I", "can", "t", "find", "any", "consistent", "behavior", "it", "seems", "entirely", "random", "NUMBER", "Ok", "I", "think", "I", "ve", "figured", "it", "out", "it", "depends", "on", "how", "the", "options", "be", "selected", "NUMBER", "If", "I", "click", "the", "dropdown", "then", "click", "the", "option", "from", "the", "list", "and", "then", "click", "open", "the", "file", "be", "analysed", "successfully", "NUMBER", "But", "if", "I", "scroll", "over", "the", "option", "box", "to", "select", "the", "option", "it", "doesn", "t", "open", "properly", "NUMBER", "Clicking", "elsewhere", "in", "the", "window", "before", "open", "doesn", "t", "help", "either", "the", "option", "must", "be", "selected", "with", "left", "mouse", "button", "NUMBER", "I", "suppose", "this", "would", "be", "considered", "a", "UI", "bug", "Sorry", "I", "was", "thinking", "of", "the", "radare", "NUMBER", "repository", "I", "get", "Cutter", "from", "the", "release", "page", "NUMBER", "These", "be", "the", "dropdowns", "I", "was", "referring", "to", "under", "Advanced", "Options", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cc", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "png", "e", "asm", "NUMBER", "cpu", "gives", "v", "NUMBER", "in", "both", "cases", "and", "e", "asm", "NUMBER", "arch", "gives", "arm", "in", "both", "cases", "as", "well", "NUMBER", "Environment", "information", "Operating", "System", "Windows", "NUMBER", "version", "NUMBER", "Cutter", "version", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "aarch", "NUMBER", "Describe", "the", "bug", "TAG", "When", "right", "clicking", "a", "function", "in", "the", "function", "window", "it", "be", "possible", "to", "click", "Show", "in", "and", "Decompiler", "NUMBER", "This", "opens", "the", "Decompiler", "window", "if", "it", "isn", "t", "open", "already", "and", "while", "the", "window", "be", "open", "other", "function", "can", "be", "shown", "in", "the", "decompiler", "in", "the", "same", "way", "but", "after", "closing", "the", "decompiler", "window", "Decompiler", "be", "no", "longer", "an", "option", "in", "the", "Show", "in", "menu", "even", "if", "the", "decompiler", "window", "be", "re", "opened", "from", "the", "Windows", "tab", "at", "the", "top", "NUMBER", "Opening", "function", "in", "the", "decompiler", "again", "requires", "closing", "and", "reloading", "the", "project", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "a", "file", "in", "Cutter", "NUMBER", "NUMBER", "Right", "click", "a", "function", "in", "the", "function", "window", "NUMBER", "NUMBER", "Click", "Show", "in", "and", "Decompiler", "NUMBER", "NUMBER", "Close", "decompiler", "window", "NUMBER", "NUMBER", "Functions", "cannot", "be", "opened", "in", "the", "decompiler", "NUMBER", "Expected", "behavior", "TAG", "Right", "clicking", "a", "function", "and", "selecting", "Open", "in", "would", "show", "a", "Decompiler", "option", "NUMBER", "Screenshots", "TAG", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "feb", "NUMBER", "b", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ad", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "ea", "NUMBER", "ba", "NUMBER", "fcce", "NUMBER", "d", "NUMBER", "png", "Additional", "context", "TAG", "Does", "radare", "NUMBER", "properly", "support", "arm", "NUMBER", "The", "README", "only", "says", "arm", "not", "explicitly", "arm", "NUMBER", "but", "Cutter", "seems", "to", "work", "with", "it", "giving", "arm", "NUMBER", "as", "the", "call", "type", "for", "all", "the", "function", "NUMBER", "Looks", "much", "better", "and", "works", "good", "I", "would", "hide", "the", "Arrow", "button", "execute", "when", "User", "command", "isn", "t", "selected", "Alright", "makes", "sense", "then", "I", "d", "align", "it", "to", "be", "right", "beside", "the", "combo", "box", "and", "give", "up", "the", "empty", "space", "NUMBER", "pull", "left", "NUMBER", "Also", "you", "might", "want", "to", "consider", "change", "the", "icon", "to", "a", "Refresh", "icon", "when", "it", "be", "use", "with", "the", "combo", "box", "and", "not", "the", "text", "box", "I", "don", "t", "like", "change", "as", "it", "s", "more", "confusing", "from", "the", "point", "of", "UX", "NUMBER", "It", "be", "better", "not", "to", "show", "any", "unuse", "element", "until", "reaching", "the", "User", "command", "item", "NUMBER", "With", "this", "if", "it", "be", "worrying", "that", "the", "users", "won", "t", "understand", "what", "to", "write", "there", "we", "can", "use", "a", "more", "detailed", "place", "holder", "or", "a", "tooltip", "NUMBER", "Enter", "a", "graph", "command", "such", "as", "NUMBER", "and", "NUMBER", "NUMBER", "Also", "something", "I", "notice", "now", "be", "that", "the", "weird", "sequence", "of", "letters", "which", "isn", "t", "clear", "to", "the", "human", "kind", "be", "taking", "priority", "in", "the", "names", "of", "the", "commands", "in", "the", "combo", "box", "NUMBER", "Instead", "I", "d", "go", "for", "Data", "reference", "graph", "aga", "Global", "data", "references", "graph", "agA", "Imports", "graph", "agi", "References", "graph", "agr", "Global", "references", "graph", "agR", "Cross", "references", "graph", "agx", "Custom", "graph", "agg", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "implement", "X", "refs", "for", "local", "variables", "LINK", "in", "the", "widgets", "for", "disassembly", "and", "graph", "NUMBER", "Xrefs", "Quick", "Peak", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fced", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "ba", "NUMBER", "NUMBER", "cc", "NUMBER", "gif", "TAG", "Test", "plan", "required", "NUMBER", "Test", "if", "the", "action", "be", "work", "as", "intended", "NUMBER", "Notice", "the", "texts", "that", "be", "shown", "for", "the", "action", "and", "in", "the", "dialog", "and", "think", "if", "we", "could", "improve", "it", "NUMBER", "NUMBER", "Check", "code", "NUMBER", "TAG", "TAG", "Closing", "issue", "close", "NUMBER", "TAG", "These", "change", "be", "not", "useful", "for", "the", "Xref", "for", "local", "variables", "in", "the", "decompiler", "widget", "as", "far", "as", "I", "can", "see", "NUMBER", "As", "you", "said", "it", "needs", "a", "dedicated", "solution", "with", "the", "help", "of", "annotations", "NUMBER", "I", "include", "this", "PR", "in", "the", "_Improving", "Decompiler", "Widget_", "project", "because", "implement", "this", "was", "a", "part", "of", "my", "proposal", "NUMBER", "This", "can", "go", "straight", "into", "master", "if", "you", "think", "that", "s", "better", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "there", "be", "no", "way", "to", "interact", "with", "the", "tabs", "e", "NUMBER", "g", "close", "a", "tab", "in", "the", "tab", "bar", "without", "switching", "to", "it", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "I", "suggest", "add", "a", "context", "menu", "to", "the", "tab", "bar", "with", "the", "following", "basic", "interactions", "Right", "Click", "Close", "tab", "Right", "Click", "Duplicate", "Tab", "Right", "Click", "Undock", "tab", "Bonus", "actions", "Right", "Click", "Split", "to", "Right", "Right", "Click", "Split", "to", "Left", "Right", "Click", "Split", "to", "Top", "Right", "Click", "Split", "to", "Bottom", "Detailed", "description", "This", "work", "in", "progress", "PR", "improves", "the", "documentation", "structure", "and", "add", "few", "more", "pages", "NUMBER", "TODO", "Find", "a", "way", "to", "make", "the", "sidebar", "showing", "a", "content", "tree", "because", "at", "some", "point", "it", "stops", "propagating", "HELP", "Consider", "if", "Plugin", "development", "should", "be", "under", "Contributing", "to", "Cutter", "QUESTION", "NUMBER", "Currently", "it", "be", "under", "Contributing", "Plugins", "TAG", "TAG", "TAG", "Images", "TAG", "TAG", "TAG", "Contributing", "to", "Cutter", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "dfa", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ecd", "NUMBER", "e", "NUMBER", "png", "Contributing", "Code", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "f", "NUMBER", "da", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "cfd", "NUMBER", "c", "NUMBER", "d", "NUMBER", "d", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "f", "NUMBER", "dac", "NUMBER", "ca", "NUMBER", "png", "Contributing", "Docs", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "NUMBER", "df", "NUMBER", "c", "NUMBER", "a", "NUMBER", "png", "TAG", "TAG", "Test", "plan", "required", "Make", "sure", "it", "be", "easy", "to", "navigate", "Check", "grammar", "and", "typo", "Nope", "thanks", "Applied", "suggestions", "and", "rebased", "thanks", "fix", "Ideally", "I", "d", "want", "to", "have", "these", "on", "the", "sidebar", "shown", "when", "clicking", "on", "the", "contribute", "to", "Cutter", "link", "Contributing", "code", "to", "Cutter", "Cutter", "Development", "Guidelines", "Development", "environment", "setup", "Crash", "Handling", "System", "Contributing", "documentation", "to", "Cutter", "Getting", "start", "with", "Python", "Plugins", "This", "be", "what", "I", "asked", "for", "help", "in", "the", "description", "of", "the", "PR", "NUMBER", "Then", "contributors", "will", "go", "via", "docs", "contribute", "to", "cutter", "choose", "whatever", "they", "want", "from", "the", "sidebar", "or", "click", "on", "the", "buttons", "And", "let", "s", "be", "honest", "people", "mostly", "find", "documentation", "for", "what", "they", "need", "from", "searching", "on", "google", "and", "from", "specific", "links", "e", "NUMBER", "g", "on", "Readme", "NUMBER", "Also", "exist", "developers", "rarely", "come", "back", "to", "the", "documentation", "guidelines", "not", "talking", "about", "API", "reference", "NUMBER", "And", "when", "they", "do", "they", "will", "be", "mature", "enough", "to", "not", "feel", "like", "beginners", "because", "they", "see", "colorful", "buttons", "Also", "I", "don", "t", "have", "any", "problem", "with", "add", "Developers", "documentation", "button", "to", "the", "main", "page", "in", "addition", "to", "the", "Contributing", "to", "Cutter", "Ready", "for", "another", "round", "karliss", "Surendrajat", "Sorry", "karliss", "I", "didn", "t", "understand", "the", "note", "about", "translations", "until", "now", "NUMBER", "Added", "it", "very", "good", "idea", "Surendrajat", "great", "feedbacks", "TAG", "INFO", "self", "NUMBER", "_config", "TAG", "DEBUG", "Exported", "Cutter", "core", "NUMBER", "DEBUG", "Logging", "CutterBindings", "TAG", "TAG", "TAG", "TAG", "ERROR", "Traceback", "most", "recent", "call", "last", "ERROR", "File", "usr", "lib", "python", "NUMBER", "site", "package", "shiboken", "NUMBER", "file", "NUMBER", "dir", "shibokensupport", "signature", "loader", "NUMBER", "py", "line", "NUMBER", "in", "seterror_argument", "ERROR", "return", "errorhandler", "NUMBER", "seterror_argument", "args", "func_name", "ERROR", "File", "usr", "lib", "python", "NUMBER", "site", "package", "shiboken", "NUMBER", "file", "NUMBER", "dir", "shibokensupport", "signature", "errorhandler", "NUMBER", "py", "line", "NUMBER", "in", "seterror_argument", "ERROR", "func", "eval", "func_name", "namespace", "ERROR", "File", "TAG", "line", "NUMBER", "in", "TAG", "ERROR", "NameError", "ERROR", "ERROR", "name", "CutterBindings", "be", "not", "defined", "The", "error", "be", "that", "CutterBindings", "be", "available", "in", "some", "contexts", "but", "be", "not", "available", "in", "others", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Clone", "LINK", "NUMBER", "Checkout", "cutter_integration", "branch", "NUMBER", "Symlink", "contents", "of", "the", "plugin", "directory", "to", "the", "cutter", "plugin", "directory", "i", "NUMBER", "e", "NUMBER", "HOME", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "python", "NUMBER", "Open", "the", "testcase", "file", "boombox", "NUMBER", "exe", "NUMBER", "Go", "to", "File", "Lighthouse", "Load", "coverage", "file", "NUMBER", "NUMBER", "Load", "any", "of", "the", "coverage", "file", "in", "the", "same", "testcase", "directory", "NUMBER", "Observe", "it", "crashes", "NUMBER", "Log", "be", "available", "at", "HOME", "NUMBER", "local", "share", "RadareOrg", "Cutter", "lighthouse_logs", "lighthouse", "NUMBER", "TAG", "NUMBER", "log", "NUMBER", "Observe", "at", "the", "end", "of", "the", "log", "that", "the", "logger", "was", "able", "to", "successfully", "log", "the", "CutterBindings", "settings", "but", "crashes", "right", "after", "when", "attempting", "to", "use", "it", "Expected", "behavior", "CutterBindings", "be", "available", "in", "every", "context", "and", "work", "Sorry", "I", "be", "a", "newbie", "I", "have", "carefully", "browsed", "the", "documentation", "and", "Issues", "but", "I", "don", "t", "know", "how", "to", "use", "Cutter", "options", "TAG", "in", "the", "terminal", "NUMBER", "I", "use", "NUMBER", "dmg", "file", "to", "install", "do", "I", "need", "to", "configure", "environment", "variables", "Please", "guide", "me", "what", "steps", "I", "need", "to", "do", "before", "I", "can", "use", "Cutter", "in", "the", "terminal", "thanks", "Hello", "Cutter", "Team", "After", "change", "function", "name", "in", "NUMBER", "so", "file", "how", "to", "save", "it", "to", "separate", "binary", "Thansk", "NUMBER", "Do", "you", "have", "any", "idea", "of", "what", "s", "wrong", "with", "Travis", "and", "Appveyor", "Things", "notice", "while", "test", "The", "field", "name", "of", "the", "dropdown", "menu", "of", "the", "R", "NUMBER", "graphs", "widget", "be", "editable", "There", "be", "no", "space", "at", "all", "between", "edges", "so", "it", "might", "generate", "funny", "graphs", "see", "picture", "attached", "below", "agg", "seems", "to", "be", "useless", "and", "that", "might", "be", "by", "design", "as", "it", "be", "named", "custom", "but", "it", "might", "be", "interesting", "to", "add", "more", "info", "or", "a", "warning", "or", "something", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "c", "NUMBER", "png", "Ok", "thanks", "for", "the", "details", "LGTM", "Environment", "information", "Operating", "System", "Debian", "Cutter", "version", "v", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "PE", "NUMBER", "When", "sorting", "by", "size", "in", "resource", "page", "it", "sorts", "by", "string", "order", "and", "not", "numerical", "order", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "resources", "tab", "NUMBER", "Click", "on", "size", "column", "NUMBER", "See", "error", "Expected", "behavior", "Sort", "by", "numerical", "order", "and", "not", "string", "NUMBER", "Screenshots", "cutter", "sort", "by", "resource", "size", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "f", "NUMBER", "bb", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "da", "NUMBER", "png", "Environment", "information", "Operating", "System", "Ubuntu", "NUMBER", "Cutter", "version", "NUMBER", "Appimage", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "Any", "Describe", "the", "bug", "I", "have", "a", "script", "that", "I", "want", "to", "run", "within", "the", "context", "of", "Cutter", "however", "it", "appears", "that", "import", "cutter", "do", "not", "work", "when", "run", "the", "script", "from", "File", "Run", "Script", "To", "Reproduce", "Start", "with", "the", "small", "python", "script", "python", "try", "import", "cutter", "print", "cutter", "imported", "except", "print", "cutter", "not", "find", "Save", "the", "script", "and", "click", "on", "File", "Run", "Script", "menu", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ffc", "NUMBER", "bad", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "png", "The", "following", "error", "be", "produced", "in", "the", "console", "cutter", "not", "find", "Cannot", "open", "ttyname", "NUMBER", "null", "console", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "bada", "NUMBER", "ea", "NUMBER", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "png", "The", "script", "that", "I", "m", "run", "doesn", "t", "need", "support", "for", "QT", "widgets", "or", "a", "plugin", "be", "there", "a", "recommended", "way", "to", "run", "a", "script", "and", "import", "cutter", "correctly", "Expected", "behavior", "Script", "will", "import", "cutter", "Screenshots", "Included", "above", "Additional", "context", "I", "have", "downloaded", "the", "latest", "version", "of", "Cutter", "Version", "NUMBER", "AppImage", "and", "verify", "that", "this", "bug", "still", "exists", "NUMBER", "Is", "there", "another", "recommended", "way", "to", "run", "a", "script", "in", "cutter", "Hey", "re", "fox", "thanks", "for", "the", "follow", "up", "I", "made", "a", "PR", "NUMBER", "to", "make", "sure", "it", "be", "more", "clear", "that", "this", "button", "should", "be", "use", "for", "executing", "radare", "NUMBER", "scripts", "and", "not", "Cutter", "python", "scripts", "NUMBER", "Because", "we", "drop", "the", "build", "in", "support", "for", "Jupyter", "notebook", "we", "currently", "suffering", "from", "a", "lack", "of", "a", "proper", "way", "to", "execute", "Python", "script", "file", "or", "commands", "integrated", "REPL", "NUMBER", "We", "hope", "to", "make", "it", "better", "in", "the", "come", "release", "NUMBER", "Thank", "you", "Thank", "you", "for", "the", "clarification", "NUMBER", "I", "assumed", "the", "Run", "Script", "were", "for", "cutter", "python", "scripts", "NUMBER", "Which", "was", "confusing", "NUMBER", "I", "can", "close", "this", "issue", "as", "this", "was", "user", "error", "NUMBER", "Environment", "information", "Operating", "System", "Ubuntu", "NUMBER", "Cutter", "version", "Latest", "master", "x", "Built", "from", "source", "Downloaded", "from", "release", "Distribution", "repository", "Describe", "the", "bug", "Toggling", "a", "breakpoint", "or", "add", "a", "comment", "in", "the", "decompiler", "widget", "causes", "the", "view", "to", "jump", "NUMBER", "This", "makes", "it", "difficult", "to", "keep", "track", "on", "the", "position", "of", "code", "you", "be", "looking", "at", "NUMBER", "TAG", "To", "Reproduce", "NUMBER", "Open", "a", "NUMBER", "screens", "high", "function", "and", "scroll", "down", "a", "bit", "NUMBER", "Select", "a", "line", "somewhere", "in", "the", "middle", "and", "add", "a", "breakpoint", "or", "comment", "NUMBER", "NUMBER", "Observe", "that", "viewing", "position", "in", "the", "decompiler", "widget", "change", "See", "this", "GIF", "to", "see", "exactly", "what", "s", "happening", "display", "jumps", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "d", "NUMBER", "gif", "Expected", "behavior", "TAG", "The", "view", "should", "not", "move", "while", "add", "toggling", "a", "breakpoint", "NUMBER", "But", "the", "highlight", "of", "the", "line", "should", "change", "accordingly", "NUMBER", "Findings", "so", "far", "for", "the", "problem", "with", "toggling", "breakpoints", "After", "hours", "of", "debugging", "I", "find", "that", "this", "view", "jumping", "problem", "happens", "because", "the", "whole", "code", "gets", "decompiled", "again", "when", "a", "new", "breakpoint", "be", "add", "NUMBER", "Then", "the", "code", "try", "to", "reset", "the", "cursor", "to", "the", "previous", "location", "the", "line", "at", "which", "the", "breakpoint", "was", "toggled", "NUMBER", "That", "s", "how", "we", "at", "least", "get", "to", "see", "the", "line", "at", "which", "the", "breakpoint", "was", "add", "NUMBER", "But", "the", "view", "doesn", "t", "get", "back", "to", "the", "way", "it", "was", "NUMBER", "It", "turns", "out", "to", "be", "exist", "for", "multiple", "options", "we", "have", "in", "the", "context", "menu", "of", "the", "decompiler", "NUMBER", "See", "the", "GIF", "below", "View", "Jumping", "Common", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "af", "NUMBER", "ee", "NUMBER", "bafe", "NUMBER", "ea", "NUMBER", "a", "d", "NUMBER", "df", "NUMBER", "fb", "NUMBER", "gif", "karliss", "Yes", "for", "breakpoints", "I", "think", "we", "can", "somehow", "stop", "the", "decompiler", "from", "run", "NUMBER", "In", "fact", "that", "was", "the", "hack", "that", "I", "was", "thinking", "about", "NUMBER", "But", "ultimately", "in", "order", "to", "fix", "this", "problem", "entirely", "we", "have", "to", "find", "a", "way", "to", "reset", "the", "view", "position", "to", "exactly", "where", "it", "was", "before", "NUMBER", "In", "case", "this", "be", "not", "possible", "in", "the", "QPlainTextEdit", "and", "since", "we", "be", "planning", "to", "use", "some", "other", "advance", "text", "editor", "like", "KTextEditor", "in", "the", "future", "I", "think", "it", "might", "be", "possible", "in", "it", "NUMBER", "Can", "you", "explain", "a", "bit", "on", "how", "you", "think", "we", "can", "try", "to", "better", "preserve", "view", "position", "Hi", "everybody", "How", "can", "we", "insert", "new", "instructions", "with", "Cutter", "when", "patching", "a", "binary", "I", "don", "t", "mean", "nopping", "or", "editing", "the", "exist", "instr", "bytes", "I", "mean", "add", "new", "ones", "without", "overwriting", "so", "everything", "should", "move", "the", "corresponding", "offsets", "NUMBER", "In", "the", "context", "menu", "Right", "click", "Edit", "there", "s", "not", "such", "option", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "f", "NUMBER", "f", "NUMBER", "be", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "NUMBER", "b", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "e", "NUMBER", "png", "Also", "I", "thought", "about", "increasing", "the", "size", "of", "NUMBER", "text", "section", "so", "there", "s", "room", "for", "new", "instructions", "but", "I", "don", "t", "seem", "to", "find", "the", "option", "either", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dbfbc", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "d", "cc", "NUMBER", "b", "NUMBER", "b", "NUMBER", "png", "Environment", "information", "Operating", "System", "macOS", "NUMBER", "Cutter", "version", "NUMBER", "Obtained", "from", "x", "Built", "from", "source", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "Describe", "the", "bug", "When", "build", "with", "MacPorts", "install", "Python", "tried", "NUMBER", "to", "NUMBER", "and", "pyside", "NUMBER", "and", "both", "python", "feature", "switches", "on", "I", "get", "symbol", "not", "find", "error", "info", "build", "Library", "Developer", "CommandLineTools", "usr", "bin", "clang", "stdlib", "libc", "rdynamic", "headerpad_max_install_names", "arch", "x", "NUMBER", "_", "NUMBER", "Wl", "syslibroot", "Library", "Developer", "CommandLineTools", "SDKs", "MacOSX", "NUMBER", "sdk", "mmacosx", "version", "min", "NUMBER", "Wl", "rpath", "executable_path", "NUMBER", "Frameworks", "o", "Cutter", "NUMBER", "app", "Contents", "MacOS", "Cutter", "Main", "NUMBER", "o", "Cutter", "NUMBER", "o", "EditStringDialog", "NUMBER", "o", "WriteCommandsDialogs", "NUMBER", "o", "DisassemblerGraphView", "NUMBER", "o", "OverviewView", "NUMBER", "o", "RichTextPainter", "NUMBER", "o", "InitialOptionsDialog", "NUMBER", "o", "AboutDialog", "NUMBER", "o", "CommentsDialog", "NUMBER", "o", "EditInstructionDialog", "NUMBER", "o", "FlagDialog", "NUMBER", "o", "RenameDialog", "NUMBER", "o", "RemoteDebugDialog", "NUMBER", "o", "NativeDebugDialog", "NUMBER", "o", "XrefsDialog", "NUMBER", "o", "MainWindow", "NUMBER", "o", "Helpers", "NUMBER", "o", "HexAsciiHighlighter", "NUMBER", "o", "HexHighlighter", "NUMBER", "o", "Highlighter", "NUMBER", "o", "MdHighlighter", "NUMBER", "o", "DirectionalComboBox", "NUMBER", "o", "AsmOptionsWidget", "NUMBER", "o", "NewFileDialog", "NUMBER", "o", "AnalTask", "NUMBER", "o", "CommentsWidget", "NUMBER", "o", "ConsoleWidget", "NUMBER", "o", "Dashboard", "NUMBER", "o", "EntrypointWidget", "NUMBER", "o", "ExportsWidget", "NUMBER", "o", "FlagsWidget", "NUMBER", "o", "FunctionsWidget", "NUMBER", "o", "ImportsWidget", "NUMBER", "o", "Omnibar", "NUMBER", "o", "RelocsWidget", "NUMBER", "o", "SectionsWidget", "NUMBER", "o", "SegmentsWidget", "NUMBER", "o", "StringsWidget", "NUMBER", "o", "SymbolsWidget", "NUMBER", "o", "DisassemblyContextMenu", "NUMBER", "o", "DisassemblyWidget", "NUMBER", "o", "HexdumpWidget", "NUMBER", "o", "Configuration", "NUMBER", "o", "Colors", "NUMBER", "o", "SaveProjectDialog", "NUMBER", "o", "TempConfig", "NUMBER", "o", "SvgIconEngine", "NUMBER", "o", "SyntaxHighlighter", "NUMBER", "o", "DecompilerWidget", "NUMBER", "o", "VisualNavbar", "NUMBER", "o", "GraphView", "NUMBER", "o", "PreferencesDialog", "NUMBER", "o", "AppearanceOptionsWidget", "NUMBER", "o", "GraphOptionsWidget", "NUMBER", "o", "PreferenceCategory", "NUMBER", "o", "QuickFilterView", "NUMBER", "o", "ClassesWidget", "NUMBER", "o", "ResourcesWidget", "NUMBER", "o", "VTablesWidget", "NUMBER", "o", "TypesWidget", "NUMBER", "o", "HeadersWidget", "NUMBER", "o", "SearchWidget", "NUMBER", "o", "CutterApplication", "NUMBER", "o", "PythonAPI", "NUMBER", "o", "R", "NUMBER", "PluginsDialog", "NUMBER", "o", "CutterDockWidget", "NUMBER", "o", "CutterTreeWidget", "NUMBER", "o", "GraphWidget", "NUMBER", "o", "OverviewWidget", "NUMBER", "o", "JsonTreeItem", "NUMBER", "o", "JsonModel", "NUMBER", "o", "VersionInfoDialog", "NUMBER", "o", "ZignaturesWidget", "NUMBER", "o", "AsyncTask", "NUMBER", "o", "AsyncTaskDialog", "NUMBER", "o", "StackWidget", "NUMBER", "o", "RegistersWidget", "NUMBER", "o", "ThreadsWidget", "NUMBER", "o", "ProcessesWidget", "NUMBER", "o", "BacktraceWidget", "NUMBER", "o", "MapFileDialog", "NUMBER", "o", "CommandTask", "NUMBER", "o", "ProgressIndicator", "NUMBER", "o", "R", "NUMBER", "Task", "NUMBER", "o", "R", "NUMBER", "TaskDialog", "NUMBER", "o", "DebugActions", "NUMBER", "o", "MemoryMapWidget", "NUMBER", "o", "DebugOptionsWidget", "NUMBER", "o", "PluginsOptionsWidget", "NUMBER", "o", "BreakpointWidget", "NUMBER", "o", "BreakpointsDialog", "NUMBER", "o", "AttachProcDialog", "NUMBER", "o", "RegisterRefsWidget", "NUMBER", "o", "SetToDataDialog", "NUMBER", "o", "EditVariablesDialog", "NUMBER", "o", "EditFunctionDialog", "NUMBER", "o", "CutterTreeView", "NUMBER", "o", "ComboQuickFilterView", "NUMBER", "o", "HexdumpRangeDialog", "NUMBER", "o", "QtResImporter", "NUMBER", "o", "CutterSeekable", "NUMBER", "o", "RefreshDeferrer", "NUMBER", "o", "WelcomeDialog", "NUMBER", "o", "RunScriptTask", "NUMBER", "o", "EditMethodDialog", "NUMBER", "o", "TypesInteractionDialog", "NUMBER", "o", "SdbWidget", "NUMBER", "o", "PythonManager", "NUMBER", "o", "PluginManager", "NUMBER", "o", "BasicBlockHighlighter", "NUMBER", "o", "BasicInstructionHighlighter", "NUMBER", "o", "LinkTypeDialog", "NUMBER", "o", "ColorPicker", "NUMBER", "o", "ColorThemeWorker", "NUMBER", "o", "ColorThemeComboBox", "NUMBER", "o", "ColorThemeListView", "NUMBER", "o", "ColorThemeEditDialog", "NUMBER", "o", "UpdateWorker", "NUMBER", "o", "MemoryDockWidget", "NUMBER", "o", "CrashHandler", "NUMBER", "o", "BugReporting", "NUMBER", "o", "HighDpiPixmap", "NUMBER", "o", "GraphGridLayout", "NUMBER", "o", "HexWidget", "NUMBER", "o", "SelectionHighlight", "NUMBER", "o", "Decompiler", "NUMBER", "o", "AddressableItemContextMenu", "NUMBER", "o", "AddressableItemModel", "NUMBER", "o", "ListDockWidget", "NUMBER", "o", "MultitypeFileSaveDialog", "NUMBER", "o", "BoolToggleDelegate", "NUMBER", "o", "IOModesController", "NUMBER", "o", "cutterbindings_module_wrapper", "NUMBER", "o", "cuttercore_wrapper", "NUMBER", "o", "configuration_wrapper", "NUMBER", "o", "mainwindow_wrapper", "NUMBER", "o", "basicblockhighlighter_wrapper", "NUMBER", "o", "addressableitemcontextmenu_wrapper", "NUMBER", "o", "cutterdockwidget_wrapper", "NUMBER", "o", "cutterplugin_wrapper", "NUMBER", "o", "qrc_resources", "NUMBER", "o", "qrc_native", "NUMBER", "o", "qrc_dark", "NUMBER", "o", "qrc_midnight", "NUMBER", "o", "qrc_light", "NUMBER", "o", "moc_Cutter", "NUMBER", "o", "moc_EditStringDialog", "NUMBER", "o", "moc_WriteCommandsDialogs", "NUMBER", "o", "moc_DisassemblerGraphView", "NUMBER", "o", "moc_OverviewView", "NUMBER", "o", "moc_AboutDialog", "NUMBER", "o", "moc_AsmOptionsWidget", "NUMBER", "o", "moc_CommentsDialog", "NUMBER", "o", "moc_EditInstructionDialog", "NUMBER", "o", "moc_FlagDialog", "NUMBER", "o", "moc_RenameDialog", "NUMBER", "o", "moc_RemoteDebugDialog", "NUMBER", "o", "moc_NativeDebugDialog", "NUMBER", "o", "moc_XrefsDialog", "NUMBER", "o", "moc_HexAsciiHighlighter", "NUMBER", "o", "moc_HexHighlighter", "NUMBER", "o", "moc_MainWindow", "NUMBER", "o", "moc_Highlighter", "NUMBER", "o", "moc_MdHighlighter", "NUMBER", "o", "moc_DirectionalComboBox", "NUMBER", "o", "moc_InitialOptionsDialog", "NUMBER", "o", "moc_NewFileDialog", "NUMBER", "o", "moc_AnalTask", "NUMBER", "o", "moc_CommentsWidget", "NUMBER", "o", "moc_ConsoleWidget", "NUMBER", "o", "moc_Dashboard", "NUMBER", "o", "moc_EntrypointWidget", "NUMBER", "o", "moc_ExportsWidget", "NUMBER", "o", "moc_FlagsWidget", "NUMBER", "o", "moc_FunctionsWidget", "NUMBER", "o", "moc_ImportsWidget", "NUMBER", "o", "moc_Omnibar", "NUMBER", "o", "moc_RelocsWidget", "NUMBER", "o", "moc_SectionsWidget", "NUMBER", "o", "moc_SegmentsWidget", "NUMBER", "o", "moc_StringsWidget", "NUMBER", "o", "moc_SymbolsWidget", "NUMBER", "o", "moc_DisassemblyContextMenu", "NUMBER", "o", "moc_DisassemblyWidget", "NUMBER", "o", "moc_HexdumpWidget", "NUMBER", "o", "moc_Configuration", "NUMBER", "o", "moc_SaveProjectDialog", "NUMBER", "o", "moc_SyntaxHighlighter", "NUMBER", "o", "moc_DecompilerWidget", "NUMBER", "o", "moc_VisualNavbar", "NUMBER", "o", "moc_GraphView", "NUMBER", "o", "moc_PreferencesDialog", "NUMBER", "o", "moc_AppearanceOptionsWidget", "NUMBER", "o", "moc_GraphOptionsWidget", "NUMBER", "o", "moc_QuickFilterView", "NUMBER", "o", "moc_ClassesWidget", "NUMBER", "o", "moc_ResourcesWidget", "NUMBER", "o", "moc_CutterApplication", "NUMBER", "o", "moc_VTablesWidget", "NUMBER", "o", "moc_TypesWidget", "NUMBER", "o", "moc_HeadersWidget", "NUMBER", "o", "moc_SearchWidget", "NUMBER", "o", "moc_R", "NUMBER", "PluginsDialog", "NUMBER", "o", "moc_CutterDockWidget", "NUMBER", "o", "moc_CutterTreeWidget", "NUMBER", "o", "moc_GraphWidget", "NUMBER", "o", "moc_OverviewWidget", "NUMBER", "o", "moc_VersionInfoDialog", "NUMBER", "o", "moc_ZignaturesWidget", "NUMBER", "o", "moc_AsyncTask", "NUMBER", "o", "moc_AsyncTaskDialog", "NUMBER", "o", "moc_StackWidget", "NUMBER", "o", "moc_RegistersWidget", "NUMBER", "o", "moc_ThreadsWidget", "NUMBER", "o", "moc_ProcessesWidget", "NUMBER", "o", "moc_BacktraceWidget", "NUMBER", "o", "moc_MapFileDialog", "NUMBER", "o", "moc_StringsTask", "NUMBER", "o", "moc_FunctionsTask", "NUMBER", "o", "moc_CommandTask", "NUMBER", "o", "moc_R", "NUMBER", "Task", "NUMBER", "o", "moc_R", "NUMBER", "TaskDialog", "NUMBER", "o", "moc_DebugActions", "NUMBER", "o", "moc_MemoryMapWidget", "NUMBER", "o", "moc_DebugOptionsWidget", "NUMBER", "o", "moc_PluginsOptionsWidget", "NUMBER", "o", "moc_BreakpointWidget", "NUMBER", "o", "moc_BreakpointsDialog", "NUMBER", "o", "moc_AttachProcDialog", "NUMBER", "o", "moc_RegisterRefsWidget", "NUMBER", "o", "moc_SetToDataDialog", "NUMBER", "o", "moc_EditVariablesDialog", "NUMBER", "o", "moc_EditFunctionDialog", "NUMBER", "o", "moc_CutterTreeView", "NUMBER", "o", "moc_ComboQuickFilterView", "NUMBER", "o", "moc_HexdumpRangeDialog", "NUMBER", "o", "moc_CutterSeekable", "NUMBER", "o", "moc_RefreshDeferrer", "NUMBER", "o", "moc_WelcomeDialog", "NUMBER", "o", "moc_RunScriptTask", "NUMBER", "o", "moc_EditMethodDialog", "NUMBER", "o", "moc_TypesInteractionDialog", "NUMBER", "o", "moc_SdbWidget", "NUMBER", "o", "moc_PythonManager", "NUMBER", "o", "moc_PluginManager", "NUMBER", "o", "moc_UpdateWorker", "NUMBER", "o", "moc_ColorPicker", "NUMBER", "o", "moc_ColorThemeWorker", "NUMBER", "o", "moc_ColorThemeComboBox", "NUMBER", "o", "moc_MemoryDockWidget", "NUMBER", "o", "moc_ColorThemeListView", "NUMBER", "o", "moc_ColorThemeEditDialog", "NUMBER", "o", "moc_LinkTypeDialog", "NUMBER", "o", "moc_HexWidget", "NUMBER", "o", "moc_Decompiler", "NUMBER", "o", "moc_AddressableItemContextMenu", "NUMBER", "o", "moc_ListDockWidget", "NUMBER", "o", "moc_MultitypeFileSaveDialog", "NUMBER", "o", "F", "opt", "local", "libexec", "qt", "NUMBER", "lib", "L", "usr", "local", "lib", "lr_core", "lr_config", "lr_cons", "lr_io", "lr_flag", "lr_asm", "lr_debug", "lr_hash", "lr_bin", "lr_lang", "lr_parse", "lr_bp", "lr_egg", "lr_reg", "lr_search", "lr_syscall", "lr_socket", "lr_fs", "lr_anal", "lr_magic", "lr_util", "lr_crypto", "F", "opt", "local", "Library", "Frameworks", "Python", "NUMBER", "framework", "framework", "Python", "opt", "local", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "shiboken", "NUMBER", "libshiboken", "NUMBER", "cpython", "NUMBER", "darwin", "NUMBER", "dylib", "opt", "local", "Library", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "site", "package", "PySide", "NUMBER", "libpyside", "NUMBER", "cpython", "NUMBER", "darwin", "NUMBER", "dylib", "framework", "QtSvg", "framework", "QtWidgets", "framework", "QtGui", "framework", "AppKit", "framework", "Metal", "framework", "QtNetwork", "framework", "QtCore", "framework", "DiskArbitration", "framework", "IOKit", "framework", "OpenGL", "framework", "AGL", "info", "build", "Undefined", "symbols", "for", "architecture", "x", "NUMBER", "_", "NUMBER", "info", "build", "_PyBytes_AsString", "referenced", "from", "info", "build", "pySideDestructionVisitor", "SbkObject", "void", "in", "PythonManager", "NUMBER", "o", "info", "build", "_PyModule_Create", "NUMBER", "referenced", "from", "info", "build", "PyInit_api", "in", "PythonAPI", "NUMBER", "o", "info", "build", "PyInit_qtres", "in", "QtResImporter", "NUMBER", "o", "info", "build", "_PyUnicode_AsUTF", "NUMBER", "String", "referenced", "from", "info", "build", "pySideDestructionVisitor", "SbkObject", "void", "in", "PythonManager", "NUMBER", "o", "info", "build", "_PyUnicode_FromString", "referenced", "from", "info", "build", "api_version", "_object", "_object", "in", "PythonAPI", "NUMBER", "o", "info", "build", "api_cmd", "_object", "_object", "in", "PythonAPI", "NUMBER", "o", "info", "build", "_Py_DecodeLocale", "referenced", "from", "info", "build", "PythonManager", "initPythonHome", "in", "PythonManager", "NUMBER", "o", "info", "build", "__Py_Dealloc", "referenced", "from", "info", "build", "QtResImport", "char", "const", "in", "QtResImporter", "NUMBER", "o", "info", "build", "PluginManager", "loadPythonPlugin", "char", "const", "in", "PluginManager", "NUMBER", "o", "info", "build", "_QMap_QString_QVariant__CppToPython__QMap_QString_QVariant_", "void", "const", "in", "cutterbindings_module_wrapper", "NUMBER", "o", "info", "build", "Shiboken", "AutoDecRef", "AutoDecRef", "in", "cutterbindings_module_wrapper", "NUMBER", "o", "info", "build", "Shiboken", "AutoDecRef", "AutoDecRef", "in", "cuttercore_wrapper", "NUMBER", "o", "info", "build", "Sbk_CutterCoreFunc_addTypes", "_object", "_object", "in", "cuttercore_wrapper", "NUMBER", "o", "info", "build", "Sbk_CutterCoreFunc_ansiEscapeToHtml", "_object", "_object", "in", "cuttercore_wrapper", "NUMBER", "o", "info", "build", "NUMBER", "info", "build", "ld", "symbol", "s", "not", "find", "for", "architecture", "x", "NUMBER", "_", "NUMBER", "info", "build", "clang", "error", "linker", "command", "fail", "with", "exit", "code", "NUMBER", "use", "v", "to", "see", "invocation", "Complete", "build", "log", "main", "NUMBER", "log", "LINK", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Configure", "with", "qmake", "with", "python", "and", "python", "bindings", "enable", "with", "paths", "in", "appropriate", "variables", "SHIBOKEN_EXECUTABLE", "etc", "NUMBER", "full", "content", "can", "be", "find", "in", "the", "log", "file", "NUMBER", "Run", "the", "build", "NUMBER", "The", "build", "fail", "after", "a", "while", "Expected", "behavior", "It", "should", "successfully", "build", "Screenshots", "TAG", "Additional", "context", "TAG", "Thanks", "with", "some", "tinkering", "it", "now", "build", "I", "had", "to", "manually", "provide", "python", "library", "paths", "but", "it", "doesnt", "launch", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "Cutter", "qt", "NUMBER", "qpa", "NUMBER", "fonts", "Populating", "font", "family", "aliases", "took", "NUMBER", "ms", "NUMBER", "Replace", "uses", "of", "miss", "font", "family", "Sans", "serif", "with", "one", "that", "exists", "to", "avoid", "this", "cost", "NUMBER", "Setting", "PYTHONHOME", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "for", "macOS", "Application", "Bundle", "NUMBER", "PYTHONHOME", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "Python", "path", "configuration", "PYTHONHOME", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "PYTHONPATH", "not", "set", "program", "name", "python", "NUMBER", "isolated", "NUMBER", "environment", "NUMBER", "user", "site", "NUMBER", "import", "site", "NUMBER", "sys", "NUMBER", "_base_executable", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "Cutter", "sys", "NUMBER", "base_prefix", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "sys", "NUMBER", "base_exec_prefix", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "sys", "NUMBER", "executable", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "Cutter", "sys", "NUMBER", "prefix", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "sys", "NUMBER", "exec_prefix", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "sys", "NUMBER", "path", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "lib", "python", "NUMBER", "zip", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "lib", "python", "NUMBER", "Applications", "MacPorts", "Cutter", "NUMBER", "app", "Contents", "MacOS", "lib", "python", "NUMBER", "lib", "dynload", "Fatal", "Python", "error", "init_fs_encoding", "fail", "to", "get", "the", "Python", "codec", "of", "the", "filesystem", "encoding", "Python", "runtime", "state", "core", "initialized", "ModuleNotFoundError", "No", "module", "named", "encodings", "Current", "thread", "NUMBER", "x", "NUMBER", "eaedc", "NUMBER", "most", "recent", "call", "first", "TAG", "Use", "pythonhome", "to", "point", "to", "MacPorts", "python", "do", "work", "but", "be", "there", "a", "way", "to", "make", "it", "use", "that", "python", "installation", "by", "default", "I", "tried", "change", "the", "paths", "in", "PythonManager", "NUMBER", "cpp", "the", "path", "do", "change", "but", "the", "program", "still", "crashes", "NUMBER", "Environment", "information", "Operating", "System", "Ubuntu", "NUMBER", "LTS", "Cutter", "version", "NUMBER", "Obtained", "from", "x", "Built", "from", "source", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "ELF", "NUMBER", "bit", "LSB", "executable", "Describe", "the", "bug", "i", "have", "already", "install", "Cutter", "but", "when", "i", "m", "tried", "to", "open", "binary", "ELF", "NUMBER", "bit", "file", "Cutter", "get", "force", "close", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "Open", "File", "NUMBER", "Click", "on", "Select", "NUMBER", "Scroll", "down", "to", "Binary", "File", "ELF", "NUMBER", "bit", "NUMBER", "Click", "OK", "NUMBER", "Cutter", "Force", "Close", "NUMBER", "Example", "Binary", "File", "examplebin", "NUMBER", "file", "NUMBER", "zip", "LINK", "Hello", "could", "you", "please", "fill", "the", "issue", "template", "accordingly", "We", "would", "need", "a", "copy", "of", "the", "binary", "file", "and", "a", "stack", "trace", "in", "order", "for", "us", "to", "try", "to", "reproduce", "the", "bug", "here", "NUMBER", "If", "you", "could", "provide", "us", "with", "such", "things", "it", "would", "help", "us", "for", "investigating", "the", "issue", "NUMBER", "Thank", "you", "The", "fragment", "of", "output", "log", "from", "your", "previous", "issue", "mention", "loading", "of", "plugin", "NUMBER", "If", "you", "have", "any", "old", "plugins", "compiled", "against", "different", "cutter", "version", "those", "may", "cause", "problem", "NUMBER", "Please", "try", "run", "without", "any", "plugins", "NUMBER", "You", "can", "remove", "the", "plugin", "manually", "or", "start", "the", "Cutter", "with", "no", "plugins", "flag", "NUMBER", "Thanks", "it", "s", "work", "now", "NUMBER", "On", "AppVeyor", "src", "subprojects", "radare", "NUMBER", "test", "unit", "meson", "NUMBER", "build", "NUMBER", "NUMBER", "ERROR", "Unknown", "variable", "rpath", "NUMBER", "Did", "you", "try", "Cutter", "with", "this", "version", "to", "make", "sure", "nothing", "be", "broken", "I", "will", "try", "to", "try", "that", "during", "the", "weekend", "NUMBER", "Hi", "i", "trying", "to", "install", "Cutter", "in", "Ubuntu", "NUMBER", "LTS", "i", "have", "the", "latest", "version", "of", "Cutter", "but", "when", "i", "try", "to", "compile", "from", "the", "sources", "NUMBER", "mkdir", "build", "cd", "build", "NUMBER", "cmake", "DCUTTER_USE_BUNDLED_RADARE", "NUMBER", "ON", "NUMBER", "src", "NUMBER", "cmake", "build", "NUMBER", "then", "i", "get", "this", "error", "r_util", "r_annotated_code", "NUMBER", "h", "No", "such", "file", "or", "directory", "i", "didn", "t", "solve", "this", "problem", "until", "now", "NUMBER", "disappointed", "nauliajati", "your", "radare", "NUMBER", "submodule", "be", "out", "of", "sync", "NUMBER", "Either", "you", "do", "git", "submodule", "sync", "recursive", "or", "just", "go", "to", "radare", "NUMBER", "dir", "and", "do", "git", "pull", "git", "checkout", "e", "NUMBER", "c", "NUMBER", "as", "a", "temporary", "solution", "NUMBER", "i", "have", "already", "doing", "that", "git", "clone", "recurse", "submodules", "LINK", "fatal", "destination", "path", "cutter", "already", "exists", "and", "be", "not", "an", "empty", "directory", "NUMBER", "nauliajati", "it", "s", "telling", "that", "you", "have", "already", "cloned", "cutter", "NUMBER", "No", "need", "to", "do", "that", "again", "NUMBER", "Just", "do", "cd", "cutter", "and", "run", "the", "above", "mention", "command", "NUMBER", "nauliajati", "Hey", "you", "have", "opened", "a", "similar", "issue", "NUMBER", "weeks", "ago", "here", "LINK", "dec", "issue", "NUMBER", "issuecomment", "NUMBER", "Itay", "and", "I", "had", "explained", "the", "reason", "for", "why", "this", "be", "happening", "there", "NUMBER", "If", "you", "be", "still", "facing", "issue", "I", "would", "suggest", "you", "make", "a", "new", "clone", "deleting", "the", "old", "one", "and", "try", "it", "now", "so", "that", "it", "will", "work", "for", "sure", "NUMBER", "okay", "i", "successfully", "install", "Cutter", "but", "when", "i", "trying", "to", "open", "ELF", "NUMBER", "bit", "file", "Cutter", "get", "force", "close", "NUMBER", "locked", "no", "new", "keys", "can", "be", "created", "asm", "NUMBER", "bytespace", "Plugins", "be", "loaded", "from", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "Loaded", "NUMBER", "plugin", "s", "NUMBER", "x", "Analyze", "all", "flags", "starting", "with", "sym", "NUMBER", "and", "entry", "NUMBER", "aa", "x", "Analyze", "function", "calls", "aac", "x", "Analyze", "len", "bytes", "of", "instructions", "for", "references", "aar", "x", "Check", "for", "objc", "references", "x", "Check", "for", "vtables", "x", "Type", "matching", "analysis", "for", "all", "function", "aaft", "x", "Propagate", "noreturn", "information", "x", "Use", "AA", "or", "aaaa", "to", "perform", "additional", "experimental", "analysis", "NUMBER", "Did", "you", "update", "your", "submodule", "Is", "it", "possible", "to", "share", "that", "binary", "Of", "course", "i", "have", "already", "update", "submodule", "git", "clone", "recurse", "submodules", "LINK", "where", "can", "i", "share", "binary", "file", "You", "can", "share", "it", "here", "NUMBER", "Also", "can", "you", "try", "cd", "radare", "NUMBER", "git", "checkout", "e", "NUMBER", "c", "NUMBER", "NUMBER", "Then", "build", "cutter", "NUMBER", "i", "have", "already", "update", "submodule", "git", "clone", "recurse", "submodules", "LINK", "Just", "make", "sure", "NUMBER", "So", "you", "remove", "the", "previous", "clone", "and", "made", "a", "new", "clone", "right", "i", "have", "already", "update", "submodule", "git", "clone", "recurse", "submodules", "LINK", "Just", "make", "sure", "NUMBER", "So", "you", "remove", "the", "previous", "clone", "and", "made", "a", "new", "clone", "right", "yes", "i", "remove", "it", "first", "and", "clone", "again", "with", "recurse", "submodules", "options", "NUMBER", "You", "can", "share", "it", "here", "NUMBER", "Also", "can", "you", "try", "cd", "radare", "NUMBER", "git", "checkout", "e", "NUMBER", "c", "NUMBER", "NUMBER", "Then", "build", "cutter", "NUMBER", "i", "ll", "tried", "it", "first", "NUMBER", "i", "ll", "tried", "it", "first", "NUMBER", "This", "be", "actually", "a", "different", "commit", "than", "what", "surendrajat", "mention", "NUMBER", "If", "you", "made", "a", "new", "clone", "with", "git", "clone", "recurse", "submodules", "LINK", "you", "don", "t", "have", "to", "try", "this", "NUMBER", "i", "ll", "tried", "it", "first", "NUMBER", "This", "be", "actually", "a", "different", "commit", "than", "what", "surendrajat", "mention", "NUMBER", "If", "you", "made", "a", "new", "clone", "with", "git", "clone", "recurse", "submodules", "LINK", "you", "don", "t", "have", "to", "try", "this", "NUMBER", "okay", "now", "i", "tried", "installing", "cutter", "again", "NUMBER", "didn", "t", "solve", "i", "have", "already", "reinstall", "Cutter", "and", "success", "but", "when", "i", "m", "tried", "to", "open", "binary", "file", "Cutter", "get", "force", "close", "NUMBER", "Cutter", "v", "NUMBER", "i", "have", "tried", "Cutter", "A", "NUMBER", "TAG", "or", "Cutter", "A", "NUMBER", "TAG", "but", "didn", "t", "solve", "this", "issue", "NUMBER", "nauliajati", "You", "should", "probably", "open", "another", "issue", "for", "the", "crash", "NUMBER", "This", "issue", "should", "be", "close", "now", "NUMBER", "Okay", "i", "already", "open", "another", "issue", "Thanks", "NUMBER", "Environment", "information", "Operating", "System", "Windows", "NUMBER", "build", "NUMBER", "and", "build", "NUMBER", "Cutter", "version", "NUMBER", "Obtained", "from", "Built", "from", "source", "X", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "Tried", "both", "a", "TI", "C", "NUMBER", "and", "TI", "C", "NUMBER", "x", "Hello", "World", "ELF", "file", "and", "also", "flash", "dump", "of", "TI", "AIS", "image", "NUMBER", "I", "compiled", "the", "ELF", "Hello", "World", "file", "use", "Code", "Composer", "NUMBER", "Describe", "the", "bug", "After", "selecting", "binary", "file", "and", "selecting", "TMS", "NUMBER", "as", "architecture", "clicking", "open", "results", "in", "an", "immediate", "crash", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "Open", "File", "NUMBER", "Click", "on", "Select", "NUMBER", "Click", "on", "C", "NUMBER", "x", "hello", "world", "example", "c", "NUMBER", "_helloworld", "NUMBER", "zip", "LINK", "_helloworld", "NUMBER", "zip", "NUMBER", "Click", "on", "Open", "NUMBER", "Click", "on", "Open", "NUMBER", "Click", "on", "Advanced", "Options", "NUMBER", "Click", "on", "Architecture", "NUMBER", "Scroll", "down", "to", "TMS", "NUMBER", "NUMBER", "Click", "on", "Ok", "NUMBER", "See", "error", "Expected", "behavior", "Cutter", "should", "open", "and", "show", "dissasembly", "Screenshots", "cutter_error", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cc", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "ee", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "png", "Additional", "context", "TAG", "You", "re", "correct", "the", "file", "I", "attached", "for", "the", "C", "NUMBER", "x", "be", "a", "COFF", "NUMBER", "I", "have", "the", "C", "NUMBER", "ELF", "if", "it", "helps", "Sorry", "for", "the", "confusion", "have", "be", "switching", "between", "the", "two", "today", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "implement", "menus", "for", "Breakpoint", "and", "Debug", "NUMBER", "It", "be", "mostly", "taken", "from", "the", "DisassemblyContextMenu", "we", "have", "be", "use", "and", "there", "be", "some", "additional", "helper", "function", "as", "discussed", "in", "NUMBER", "NUMBER", "TAG", "Test", "plan", "required", "Make", "sure", "code", "compiles", "without", "new", "warnings", "please", "tell", "me", "if", "there", "be", "any", "NUMBER", "Test", "if", "breakpoints", "and", "debug", "functionalities", "be", "work", "just", "like", "it", "use", "to", "before", "NUMBER", "TAG", "TAG", "Closing", "issue", "TAG", "karliss", "I", "m", "not", "sure", "what", "you", "mean", "by", "I", "don", "t", "like", "that", "as", "modifying", "parent", "from", "children", "should", "be", "avoided", "NUMBER", "If", "the", "menu", "be", "flat", "the", "menu", "user", "can", "easily", "do", "addActions", "menu", "getActions", "NUMBER", "Can", "you", "please", "explain", "Currently", "this", "be", "how", "actions", "be", "add", "to", "the", "decompiler", "widget", "NUMBER", "LINK", "L", "NUMBER", "Does", "it", "work", "for", "actions", "that", "be", "in", "submenus", "Are", "all", "menus", "other", "than", "mCtxMenu", "not", "submenus", "I", "mean", "in", "this", "PR", "mCtxMenu", "be", "the", "main", "menu", "breakpointMenu", "and", "debugMenu", "be", "sub", "menus", "right", "Or", "do", "submenus", "mean", "menus", "inside", "one", "of", "these", "menus", "Are", "all", "menus", "other", "than", "mCtxMenu", "not", "submenus", "Yes", "I", "was", "referring", "to", "breakpoint", "menu", "and", "debugMenu", "everything", "that", "isn", "t", "the", "top", "level", "decompiler", "context", "menu", "NUMBER", "Then", "yes", "it", "works", "for", "actions", "that", "be", "in", "sub", "menus", "NUMBER", "Actually", "I", "haven", "t", "made", "any", "change", "to", "this", "line", "of", "code", "NUMBER", "LINK", "L", "NUMBER", "TAG", "Some", "update", "to", "the", "Cutter", "docs", "NUMBER", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "has", "the", "following", "Move", "build", "error", "from", "common", "error", "to", "build", "page", "and", "move", "rest", "under", "user", "docs", "common", "issue", "Title", "capitalization", "IDK", "I", "m", "obsessed", "with", "it", "xD", "Updated", "troubleshooting", "part", "with", "git", "submodule", "relate", "error", "Apply", "Grammarly", "suggestions", "on", "all", "the", "docs", "TAG", "Test", "plan", "required", "Build", "and", "run", "docs", "NUMBER", "TAG", "TAG", "Closing", "issue", "Partially", "close", "NUMBER", "TAG", "I", "ve", "add", "a", "widget", "page", "with", "few", "moving", "screenshots", "WIP", "NUMBER", "Let", "me", "know", "what", "you", "think", "NUMBER", "It", "can", "be", "made", "a", "submodule", "to", "keep", "the", "old", "structure", "NUMBER", "On", "Sat", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "karliss", "TAG", "write", "I", "would", "be", "much", "happier", "if", "documentation", "was", "moved", "to", "separate", "repository", "before", "add", "a", "bunch", "of", "screenshots", "for", "all", "the", "widgets", "and", "dialogs", "NUMBER", "Those", "could", "quickly", "cause", "bloat", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "I", "see", "NUMBER", "open", "for", "just", "this", "NUMBER", "If", "it", "s", "do", "I", "can", "move", "things", "there", "NUMBER", "As", "for", "submodule", "I", "think", "it", "ll", "add", "additional", "commit", "to", "this", "repo", "on", "each", "update", "to", "docs", "which", "will", "probably", "be", "better", "if", "avoided", "NUMBER", "How", "about", "splitting", "API", "docs", "and", "other", "docs", "and", "leave", "API", "docs", "here", "You", "might", "want", "to", "consider", "add", "the", "menuselection", "and", "guilabel", "to", "the", "docs", "as", "part", "of", "this", "or", "another", "PR", "NUMBER", "karliss", "find", "these", "features", "just", "recently", "LINK", "doc", "NUMBER", "org", "en", "master", "usage", "restructuredtext", "roles", "NUMBER", "html", "karliss", "I", "ve", "remove", "the", "widget", "intro", "part", "and", "will", "open", "another", "PR", "to", "continue", "work", "on", "that", "until", "we", "decide", "if", "to", "split", "repo", "or", "not", "NUMBER", "be", "there", "anything", "left", "to", "do", "be", "there", "anything", "left", "to", "do", "Yes", "NUMBER", "Finishing", "right", "away", "NUMBER", "P", "It", "be", "possible", "to", "use", "CodeQL", "directly", "from", "GitHub", "now", "without", "the", "LGTM", "LINK", "security", "vulnerabilities", "and", "error", "in", "your", "code", "managing", "alerts", "from", "code", "scanning", "Note", "it", "be", "already", "enable", "on", "the", "radareorg", "account", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "Detailed", "description", "Cutter", "had", "its", "own", "class", "for", "renaming", "things", "which", "be", "unnecessary", "for", "most", "renaming", "tasks", "since", "Qt", "offers", "QInputDialog", "LINK", "NUMBER", "qinputdialog", "NUMBER", "html", "NUMBER", "This", "Pull", "Request", "remove", "RenameDialog", "in", "favor", "if", "the", "build", "in", "feature", "NUMBER", "This", "be", "another", "step", "towards", "improving", "the", "mess", "we", "have", "with", "renaming", "NUMBER", "In", "the", "near", "future", "I", "see", "a", "possibility", "to", "subclass", "QInputdialog", "for", "the", "improved", "name", "realname", "renaming", "dialog", "NUMBER", "Please", "note", "_This", "pull", "request", "has", "an", "issue", "I", "couldn", "t", "solve", "by", "my", "own", "and", "I", "ll", "be", "happy", "for", "your", "feedback", "and", "help", "NUMBER", "For", "some", "reason", "QInputDialog", "getText", "shown", "very", "narrow", "and", "its", "width", "do", "not", "fit", "the", "content_", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ae", "NUMBER", "NUMBER", "ea", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "png", "Test", "plan", "required", "Classes", "widget", "Add", "new", "class", "Rename", "class", "Flags", "Widget", "Rename", "a", "flag", "Functions", "Widget", "Rename", "a", "function", "Disassembly", "Context", "Menu", "Rename", "flags", "Add", "flags", "Rename", "current", "function", "Rename", "call", "function", "TAG", "Closing", "issue", "TAG", "Blocked", "by", "broken", "decompiler", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "add", "asm", "NUMBER", "reloff", "NUMBER", "flags", "checkbox", "under", "Preferences", "Disassembly", "NUMBER", "asm", "reloff", "flags", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cd", "NUMBER", "a", "NUMBER", "ac", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "gif", "TAG", "Test", "plan", "required", "Go", "to", "Preferences", "Disassembly", "check", "Show", "offsets", "relative", "to", "a", "flag", "asm", "NUMBER", "reloff", "NUMBER", "flags", "TAG", "TAG", "Closing", "issue", "TAG", "For", "this", "specific", "case", "it", "can", "use", "different", "ui", "components", "for", "example", "Show", "offset", "as", "relative", "to", "x", "Functions", "Flags", "Show", "offset", "as", "relative", "to", "Functions", "x", "Flags", "Show", "offset", "as", "relative", "to", "x", "Functions", "x", "Flags", "Show", "offset", "as", "relative", "to", "Functions", "Flags", "Or", "a", "combo", "box", "maybe", "like", "I", "did", "with", "comments", "NUMBER", "In", "general", "I", "was", "thinking", "about", "it", "as", "well", "and", "I", "see", "couple", "of", "ways", "we", "can", "go", "NUMBER", "Of", "course", "some", "of", "them", "can", "be", "combined", "NUMBER", "NUMBER", "First", "of", "all", "the", "most", "complicated", "one", "be", "refactoring", "of", "the", "whole", "thing", "into", "a", "modern", "setting", "widget", "e", "NUMBER", "g", "vscode", "s", "NUMBER", "I", "think", "that", "Binja", "has", "something", "similar", "as", "well", "NUMBER", "This", "include", "full", "descriptions", "automatically", "creating", "the", "view", "etc", "NUMBER", "And", "of", "course", "with", "a", "quick", "filtering", "and", "a", "way", "to", "work", "together", "with", "a", "command", "pallette", "in", "the", "future", "NUMBER", "NUMBER", "Turn", "the", "dialog", "into", "a", "dockable", "widget", "NUMBER", "This", "will", "allow", "more", "space", "and", "the", "items", "will", "look", "less", "crowded", "NUMBER", "Use", "group", "boxes", "to", "gather", "relate", "configurations", "together", "in", "a", "logical", "way", "NUMBER", "This", "will", "make", "it", "visually", "easier", "to", "navigate", "in", "the", "view", "NUMBER", "NUMBER", "Use", "more", "tabs", "and", "group", "configurations", "together", "in", "a", "logical", "way", "NUMBER", "Use", "sub", "items", "in", "the", "side", "bar", "to", "organize", "configurations", "in", "a", "logical", "way", "NUMBER", "Use", "collapsible", "part", "at", "the", "bottom", "of", "the", "view", "to", "hide", "less", "common", "config", "ITAYC", "NUMBER", "HEN", "For", "this", "change", "I", "like", "the", "first", "idea", "you", "suggested", "NUMBER", "It", "ll", "save", "up", "space", "and", "will", "be", "consistent", "with", "the", "current", "logic", "of", "graph", "NUMBER", "offset", "which", "won", "t", "really", "fit", "in", "the", "comboBox", "NUMBER", "About", "the", "entire", "preference", "view", "change", "yes", "I", "like", "that", "idea", "too", "but", "I", "be", "not", "quite", "ready", "to", "pick", "it", "yet", "NUMBER", "If", "base", "be", "set", "I", "can", "add", "things", "to", "it", "This", "be", "how", "it", "looks", "like", "now", "update", "asm", "reloff", "flags", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ace", "NUMBER", "NUMBER", "ea", "NUMBER", "ba", "NUMBER", "bd", "NUMBER", "ce", "NUMBER", "gif", "I", "think", "that", "Show", "offsets", "relative", "to", "can", "also", "be", "grayed", "out", "when", "asm", "NUMBER", "offset", "be", "disabled", "ITAYC", "NUMBER", "HEN", "Cool", "NUMBER", "It", "s", "do", "now", "NUMBER", "I", "ve", "rebased", "and", "the", "build", "be", "broken", "but", "it", "should", "work", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "add", "asm", "NUMBER", "reloff", "under", "Preferences", "Disassembly", "NUMBER", "TAG", "rel", "offset", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "NUMBER", "cdcbb", "NUMBER", "gif", "Test", "plan", "required", "Go", "to", "Preferences", "Disassembly", "check", "Show", "relative", "offset", "TAG", "TAG", "Closing", "issue", "Closes", "NUMBER", "TAG", "ITAYC", "NUMBER", "HEN", "It", "do", "enable", "disable", "asm", "NUMBER", "reloff", "now", "but", "only", "when", "the", "user", "presses", "asm", "NUMBER", "offset", "and", "do", "not", "immediately", "care", "about", "graph", "NUMBER", "offset", "NUMBER", "I", "m", "still", "trying", "to", "figure", "that", "out", "NUMBER", "karliss", "ITAYC", "NUMBER", "HEN", "There", "be", "one", "issue", "now", "asm", "NUMBER", "reloff", "gets", "unchecked", "every", "time", "some", "change", "be", "made", "in", "graph", "NUMBER", "offset", "ie", "NUMBER", "checked", "unchecked", "NUMBER", "I", "thought", "it", "was", "due", "to", "emit", "asmOptionsChanged", "but", "it", "inturn", "calls", "updateAsmOptionsFromVars", "and", "config", "values", "be", "honored", "NUMBER", "That", "means", "only", "one", "thing", "that", "graph", "NUMBER", "offset", "be", "somehow", "resetting", "asm", "NUMBER", "reloff", "NUMBER", "Thanks", "karliss", "NUMBER", "Works", "now", "NUMBER", "I", "ve", "push", "the", "change", "NUMBER", "ITAYC", "NUMBER", "HEN", "Done", "I", "guess", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Please", "check", "PR", "NUMBER", "for", "details", "TAG", "Notes", "Please", "merge", "along", "with", "NUMBER", "LINK", "dec", "pull", "NUMBER", "in", "r", "NUMBER", "ghidra", "dec", "NUMBER", "AppVeyor", "build", "be", "fail", "because", "it", "doesn", "t", "have", "the", "update", "r", "NUMBER", "ghidra", "dec", "NUMBER", "The", "linker", "error", "on", "windows", "needs", "to", "be", "fix", "on", "r", "NUMBER", "ghidra", "side", "NUMBER", "Marking", "r", "NUMBER", "ghidra_decompile_annotated_code", "as", "R_API", "should", "fix", "it", "NUMBER", "I", "will", "send", "a", "PR", "with", "this", "change", "now", "NUMBER", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "There", "be", "no", "easy", "way", "to", "select", "multiple", "instructions", "in", "the", "disassembly", "view", "and", "copy", "them", "quickly", "as", "a", "hex", "sequence", "or", "Python", "byte", "array", "or", "c", "array", "etc", "NUMBER", "I", "think", "this", "be", "very", "useful", "when", "scripting", "Describe", "the", "solution", "you", "d", "like", "TAG", "Add", "a", "context", "menu", "option", "for", "the", "disassembly", "view", "in", "which", "selected", "instructions", "can", "be", "copied", "as", "special", "NUMBER", "format", "e", "NUMBER", "g", "hex", "Context", "Inspired", "by", "a", "usage", "of", "similar", "feature", "in", "IDA", "plugin", "that", "can", "be", "seen", "in", "this", "video", "minute", "NUMBER", "NUMBER", "LINK", "Syncing", "selection", "range", "be", "highly", "desirable", "and", "in", "general", "honoring", "ranged", "selection", "everywhere", "disas", "graph", "hex", "decompiler", "NUMBER", "NUMBER", "I", "wouldn", "t", "say", "it", "be", "an", "alternative", "because", "I", "don", "t", "want", "the", "user", "to", "open", "hexdump", "in", "order", "to", "copy", "the", "bytes", "as", "hex", "python", "or", "C", "NUMBER", "For", "sure", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "This", "PR", "be", "to", "update", "Cutter", "docs", "NUMBER", "Starting", "with", "add", "miss", "dependencies", "to", "dev", "docs", "and", "will", "slowly", "move", "towards", "user", "docs", "NUMBER", "Relates", "to", "NUMBER", "TAG", "Test", "plan", "required", "Build", "and", "run", "docs", "NUMBER", "TAG", "TAG", "Closing", "issue", "TAG", "karliss", "KSyntaxHighlighter", "graphviz", "seems", "like", "a", "case", "that", "may", "need", "separate", "mention", "but", "for", "me", "difficult", "to", "avoid", "kinda", "sounds", "the", "same", "as", "the", "main", "dependencies", "NUMBER", "Usually", "all", "build", "instruction", "pages", "show", "required", "and", "recommended", "dependencies", "together", "for", "the", "convenience", "of", "setting", "up", "env", "with", "one", "command", "NUMBER", "I", "also", "think", "that", "the", "wget", "option", "be", "good", "and", "git", "one", "if", "it", "can", "be", "replaced", "in", "all", "script", "be", "probably", "better", "NUMBER", "karliss", "ITAYC", "NUMBER", "HEN", "The", "git", "clone", "NUMBER", "instructions", "were", "only", "available", "under", "the", "Building", "on", "Linux", "section", "so", "I", "ve", "made", "a", "common", "Getting", "the", "Source", "section", "to", "avoid", "repetition", "NUMBER", "Detailed", "description", "Minor", "fix", "to", "a", "warning", "that", "wasn", "t", "informative", "enough", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "The", "filters", "in", "some", "widgets", "be", "use", "Case", "Sensitive", "NUMBER", "For", "example", "Types", "widget", "Flags", "widget", "Describe", "the", "solution", "you", "d", "like", "Enable", "case", "insensitive", "search", "in", "them", "all", "Describe", "alternatives", "you", "ve", "considered", "Best", "option", "will", "be", "to", "set", "case", "insensitive", "by", "default", "and", "add", "a", "little", "button", "to", "toggle", "the", "mode", "NUMBER", "But", "that", "be", "only", "a", "nice", "to", "have", "Additional", "context", "It", "will", "be", "also", "nice", "to", "make", "sure", "that", "the", "filters", "enable", "Wildcard", "Matching", "LINK", "NUMBER", "qregexp", "NUMBER", "html", "wildcard", "matching", "Yes", "The", "addAction", "thingy", "looks", "great", "NUMBER", "I", "was", "actually", "thinking", "of", "something", "like", "shown", "in", "the", "gif", "below", "much", "more", "user", "friendly", "and", "allows", "to", "play", "with", "the", "different", "flags", "Peek", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "aa", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "gif", "Environment", "information", "Operating", "System", "Debian", "GNU", "Linux", "bullseye", "Cutter", "version", "git", "from", "master", "Obtained", "from", "x", "Built", "from", "source", "Downloaded", "from", "release", "Distribution", "repository", "rm", "r", "build", "mkdir", "p", "build", "cd", "build", "cmake", "DCUTTER_USE_BUNDLED_RADARE", "NUMBER", "OFF", "NUMBER", "src", "make", "make", "install", "The", "C", "compiler", "identification", "be", "GNU", "NUMBER", "The", "CXX", "compiler", "identification", "be", "GNU", "NUMBER", "Check", "for", "work", "C", "compiler", "usr", "bin", "cc", "Check", "for", "work", "C", "compiler", "usr", "bin", "cc", "works", "Detecting", "C", "compiler", "ABI", "info", "Detecting", "C", "compiler", "ABI", "info", "do", "Detecting", "C", "compile", "features", "Detecting", "C", "compile", "features", "do", "Check", "for", "work", "CXX", "compiler", "usr", "bin", "c", "Check", "for", "work", "CXX", "compiler", "usr", "bin", "c", "works", "Detecting", "CXX", "compiler", "ABI", "info", "Detecting", "CXX", "compiler", "ABI", "info", "do", "Detecting", "CXX", "compile", "features", "Detecting", "CXX", "compile", "features", "do", "Found", "PkgConfig", "usr", "bin", "pkg", "config", "find", "version", "NUMBER", "Checking", "for", "one", "of", "the", "modules", "r_core", "Found", "Radare", "NUMBER", "Radare", "NUMBER", "libr", "Checking", "for", "module", "libgvc", "Found", "libgvc", "version", "NUMBER", "Found", "Graphviz", "usr", "include", "graphviz", "Building", "Cutter", "version", "NUMBER", "Options", "Bundled", "radare", "NUMBER", "OFF", "Python", "OFF", "Python", "Bindings", "OFF", "Crash", "Handling", "OFF", "KSyntaxHighlighting", "ON", "Graphviz", "TRUE", "Configuring", "do", "Generating", "do", "Build", "file", "have", "be", "write", "to", "tmp", "cutter", "build", "root", "anonymous", "tmp", "cutter", "build", "make", "make", "NUMBER", "Entering", "directory", "tmp", "cutter", "build", "make", "NUMBER", "Entering", "directory", "tmp", "cutter", "build", "Scanning", "dependencies", "of", "target", "Cutter_autogen", "make", "NUMBER", "Leaving", "directory", "tmp", "cutter", "build", "make", "NUMBER", "Entering", "directory", "tmp", "cutter", "build", "NUMBER", "Automatic", "MOC", "and", "UIC", "for", "target", "Cutter", "AutoMoc", "tmp", "cutter", "src", "common", "PythonManager", "NUMBER", "h", "NUMBER", "Note", "No", "relevant", "classes", "find", "NUMBER", "No", "output", "generate", "NUMBER", "AutoUic", "tmp", "cutter", "src", "core", "MainWindow", "NUMBER", "ui", "Warning", "action", "actionSearch", "not", "declared", "make", "NUMBER", "Leaving", "directory", "tmp", "cutter", "build", "NUMBER", "Built", "target", "Cutter_autogen", "make", "NUMBER", "Entering", "directory", "tmp", "cutter", "build", "NUMBER", "Automatic", "RCC", "for", "themes", "lightstyle", "light", "NUMBER", "qrc", "NUMBER", "Automatic", "RCC", "for", "resources", "NUMBER", "qrc", "NUMBER", "Automatic", "RCC", "for", "themes", "native", "native", "NUMBER", "qrc", "NUMBER", "Automatic", "RCC", "for", "themes", "qdarkstyle", "dark", "NUMBER", "qrc", "NUMBER", "Automatic", "RCC", "for", "themes", "midnight", "midnight", "NUMBER", "qrc", "Scanning", "dependencies", "of", "target", "Cutter", "make", "NUMBER", "Leaving", "directory", "tmp", "cutter", "build", "make", "NUMBER", "Entering", "directory", "tmp", "cutter", "build", "NUMBER", "Building", "CXX", "object", "CMakeFiles", "Cutter", "NUMBER", "dir", "Cutter_autogen", "mocs_compilation", "NUMBER", "cpp", "NUMBER", "o", "NUMBER", "Building", "CXX", "object", "CMakeFiles", "Cutter", "NUMBER", "dir", "Main", "NUMBER", "cpp", "NUMBER", "o", "NUMBER", "Building", "CXX", "object", "CMakeFiles", "Cutter", "NUMBER", "dir", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "o", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "In", "member", "function", "QByteArray", "CutterCore", "assemble", "const", "QString", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "RCore", "aka", "struct", "r_core_t", "has", "no", "member", "named", "rasm", "NUMBER", "RAsmCode", "ac", "r_asm_massemble", "core", "rasm", "code", "NUMBER", "toUtf", "NUMBER", "NUMBER", "constData", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "In", "member", "function", "QString", "CutterCore", "disassemble", "const", "QByteArray", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "RCore", "aka", "struct", "r_core_t", "has", "no", "member", "named", "rasm", "NUMBER", "RAsmCode", "ac", "r_asm_mdisassemble", "core", "rasm", "reinterpret_cast", "TAG", "data", "NUMBER", "constData", "data", "NUMBER", "length", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "In", "member", "function", "QJsonObject", "CutterCore", "getAddrRefs", "RVA", "int", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "RCore", "aka", "struct", "r_core_t", "has", "no", "member", "named", "rasm", "NUMBER", "int", "bits", "core", "rasm", "bits", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "RCore", "aka", "struct", "r_core_t", "has", "no", "member", "named", "rasm", "NUMBER", "r_asm_set_pc", "core", "rasm", "addr", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "RCore", "aka", "struct", "r_core_t", "has", "no", "member", "named", "rasm", "NUMBER", "r_asm_disassemble", "core", "rasm", "op", "unsigned", "char", "buf", "NUMBER", "data", "buf", "NUMBER", "size", "In", "file", "include", "from", "tmp", "cutter", "src", "common", "BasicInstructionHighlighter", "NUMBER", "h", "NUMBER", "from", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "In", "member", "function", "QStringList", "CutterCore", "getAsmPluginNames", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "RCore", "aka", "struct", "r_core_t", "has", "no", "member", "named", "rasm", "NUMBER", "CutterRListForeach", "core", "rasm", "plugins", "it", "RAsmPlugin", "ap", "tmp", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "NUMBER", "NUMBER", "note", "in", "definition", "of", "macro", "CutterRListForeach", "NUMBER", "if", "list", "for", "it", "list", "head", "it", "x", "static_cast", "TAG", "it", "data", "it", "it", "n", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "RCore", "aka", "struct", "r_core_t", "has", "no", "member", "named", "rasm", "NUMBER", "CutterRListForeach", "core", "rasm", "plugins", "it", "RAsmPlugin", "ap", "tmp", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "NUMBER", "NUMBER", "note", "in", "definition", "of", "macro", "CutterRListForeach", "NUMBER", "if", "list", "for", "it", "list", "head", "it", "x", "static_cast", "TAG", "it", "data", "it", "it", "n", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "In", "member", "function", "QList", "TAG", "CutterCore", "getRAsmPluginDescriptions", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "RCore", "aka", "struct", "r_core_t", "has", "no", "member", "named", "rasm", "NUMBER", "CutterRListForeach", "core", "rasm", "plugins", "it", "RAsmPlugin", "ap", "tmp", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "NUMBER", "NUMBER", "note", "in", "definition", "of", "macro", "CutterRListForeach", "NUMBER", "if", "list", "for", "it", "list", "head", "it", "x", "static_cast", "TAG", "it", "data", "it", "it", "n", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "RCore", "aka", "struct", "r_core_t", "has", "no", "member", "named", "rasm", "NUMBER", "CutterRListForeach", "core", "rasm", "plugins", "it", "RAsmPlugin", "ap", "tmp", "cutter", "src", "core", "CutterCommon", "NUMBER", "h", "NUMBER", "NUMBER", "note", "in", "definition", "of", "macro", "CutterRListForeach", "NUMBER", "if", "list", "for", "it", "list", "head", "it", "x", "static_cast", "TAG", "it", "data", "it", "it", "n", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "In", "member", "function", "QList", "TAG", "CutterCore", "getAllFunctions", "tmp", "cutter", "src", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "r_anal_function_count_edges", "was", "not", "declared", "in", "this", "scope", "did", "you", "mean", "r_anal_fcn_count_edges", "NUMBER", "function", "NUMBER", "edges", "r_anal_function_count_edges", "fcn", "nullptr", "r_anal_fcn_count_edges", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "build", "NUMBER", "make", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "core", "Cutter", "NUMBER", "cpp", "NUMBER", "o", "Error", "NUMBER", "make", "NUMBER", "Leaving", "directory", "tmp", "cutter", "build", "make", "NUMBER", "CMakeFiles", "Makefile", "NUMBER", "NUMBER", "CMakeFiles", "Cutter", "NUMBER", "dir", "all", "Error", "NUMBER", "make", "NUMBER", "Leaving", "directory", "tmp", "cutter", "build", "make", "Makefile", "NUMBER", "all", "Error", "NUMBER", "what", "should", "I", "do", "how", "edite", "radare", "NUMBER", "build", "option", "on", "cmake", "DCMAKE_INSTALL_PREFIX", "cutter", "DCMAKE_INSTALL_BINDIR", "bin", "DCUTTER_USE_BUNDLED_RADARE", "NUMBER", "ON", "NUMBER", "src", "because", "DCMAKE_INSTALL_BINDIR", "be", "ignored", "by", "you", "BUNDLED_RADARE", "NUMBER", "thx", "karliss", "cutter", "search", "lib", "on", "lib", "instead", "of", "NUMBER", "lib", "which", "means", "that", "if", "Cutter", "uses", "a", "different", "prefix", "by", "DCMAKE_INSTALL_PREFIX", "it", "cannot", "find", "the", "libs", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Use", "CMake", "for", "build", "APPIMAGE", "Build", "and", "install", "translation", "file", "use", "CMake", "simplifies", "Appimage", "build", "installs", "translation", "file", "during", "CMake", "build", "for", "preparing", "distro", "specific", "package", "Refactor", "some", "of", "resource", "access", "code", "NUMBER", "In", "future", "other", "parts", "of", "code", "doing", "similar", "things", "should", "also", "be", "moved", "there", "NUMBER", "This", "will", "help", "with", "accessing", "resources", "in", "Appimage", "build", "and", "remove", "some", "of", "the", "platform", "specific", "code", "for", "locating", "translation", "file", "by", "use", "Qt", "utilities", "NUMBER", "Fix", "RUNAPTH", "for", "embedded", "python", "executable", "Test", "plan", "required", "Get", "travis", "to", "UPLOAD", "the", "APPIMAGE", "test", "that", "it", "runs", "on", "fresh", "Ubuntu", "NUMBER", "install", "test", "that", "it", "runs", "a", "newer", "distro", "test", "sample", "python", "plugin", "all", "include", "decompilers", "work", "bundled", "r", "NUMBER", "resource", "be", "find", "use", "eco", "to", "list", "color", "schemes", "TAG", "Related", "issue", "NUMBER", "TAG", "Remaining", "work", "x", "LDD", "output", "in", "Travis", "differs", "from", "what", "I", "get", "locally", "need", "to", "be", "invstigated", "x", "test", "that", "windows", "cmake", "build", "works", "probably", "will", "need", "to", "update", "windows", "install", "paths", "it", "s", "unclear", "to", "NUMBER", "me", "the", "test", "in", "process", "NUMBER", "Should", "we", "tag", "it", "after", "merge", "to", "see", "if", "it", "pushes", "the", "release", "correctly", "alright", "then", "so", "test", "NUMBER", "pass", "successfully", "good", "to", "be", "merge", "I", "personally", "do", "not", "especially", "when", "the", "debug", "symbols", "should", "ve", "be", "in", "the", "appimage", "from", "the", "first", "place", "NUMBER", "To", "make", "sure", "you", "can", "poll", "on", "cutter", "dev", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Added", "the", "cmdline", "option", "to", "open", "a", "file", "directly", "in", "write", "mode", "NUMBER", "If", "an", "analysis", "level", "be", "selected", "the", "file", "will", "be", "opened", "directly", "in", "cutter", "without", "display", "any", "further", "settings", "dialog", "window", "NUMBER", "TAG", "Test", "plan", "required", "Check", "if", "old", "functionality", "still", "works", "Cutter", "A", "NUMBER", "TESTFILE", "Open", "a", "file", "directly", "without", "the", "w", "parameter", "on", "the", "commandline", "NUMBER", "Should", "open", "the", "file", "directly", "in", "cutter", "and", "ask", "to", "enable", "write", "mode", "if", "trying", "to", "modify", "NUMBER", "Check", "if", "the", "write", "mode", "parameter", "be", "handle", "correctly", "Cutter", "w", "A", "NUMBER", "TESTFILE", "Open", "a", "file", "directly", "in", "cutter", "in", "write", "mode", "without", "any", "further", "confirmation", "when", "modifying", "it", "NUMBER", "Cutter", "w", "TESTFILE", "Open", "the", "Load", "Options", "to", "ask", "for", "further", "settings", "for", "open", "TESTFILE", "in", "cutter", "with", "the", "Load", "in", "write", "mode", "w", "box", "already", "selected", "cutter_writemode_Screenshot_", "NUMBER", "NUMBER", "NUMBER", "_", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "fcd", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "png", "TAG", "TAG", "Closing", "issue", "TAG", "This", "close", "NUMBER", "Changes", "in", "the", "documentation", "be", "fine", "for", "me", "sorry", "for", "the", "delay", "and", "thanks", "for", "the", "great", "feedback", "I", "assume", "this", "be", "only", "necessary", "for", "Windows", "and", "macOS", "NUMBER", "On", "Linux", "there", "be", "plenty", "of", "ways", "for", "selecting", "the", "system", "qt", "theme", "NUMBER", "Note", "that", "the", "nice", "qt", "themes", "like", "breeze", "or", "kvantum", "involve", "more", "than", "just", "CSS", "QSS", "they", "consist", "of", "custom", "theme", "engine", "NUMBER", "Some", "alternative", "options", "instead", "of", "encouraging", "more", "buggy", "qss", "theme", "modifications", "and", "other", "ideas", "paletize", "and", "fix", "the", "exist", "NUMBER", "themes", "allow", "user", "to", "override", "the", "color", "palette", "consider", "shipping", "or", "figure", "out", "if", "it", "possible", "to", "set", "it", "by", "users", "some", "of", "the", "exist", "good", "qt", "theme", "engines", "Action", "needs", "to", "be", "add", "the", "widget", "for", "widget", "with", "children", "to", "work", "NUMBER", "mage", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Create", "simple", "dialog", "for", "renaming", "and", "deleting", "layouts", "Use", "editable", "combo", "box", "for", "saving", "layout", "simplifies", "editing", "exist", "layouts", "and", "communicates", "with", "the", "user", "doing", "that", "be", "possible", "NUMBER", "Test", "plan", "required", "layout_manager", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "cce", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ba", "NUMBER", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "NUMBER", "bffc", "NUMBER", "aa", "NUMBER", "a", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "d", "eed", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "e", "NUMBER", "png", "Open", "layout", "manager", "when", "there", "be", "no", "saved", "layouts", "save", "a", "layout", "rename", "layout", "make", "sure", "layout", "list", "in", "main", "window", "gets", "update", "delete", "layout", "make", "sure", "layout", "manager", "properly", "clears", "the", "list", "try", "renaming", "layout", "to", "name", "use", "by", "other", "layout", "try", "renaming", "layout", "to", "reserved", "name", "TAG", "Closing", "issue", "Closes", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "Needs", "cleanup", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Rewrite", "the", "edge", "routing", "and", "block", "placement", "parts", "of", "graph", "layout", "NUMBER", "Add", "documentation", "for", "the", "graph", "layout", "algorithm", "NUMBER", "Take", "full", "subtree", "shape", "into", "account", "when", "placing", "them", "side", "by", "side", "NUMBER", "Prevents", "the", "case", "where", "NUMBER", "NUMBER", "basic", "blocks", "be", "put", "very", "far", "to", "the", "right", "and", "then", "the", "edge", "goes", "back", "to", "main", "part", "of", "function", "NUMBER", "long_edges", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "NUMBER", "ca", "NUMBER", "ea", "NUMBER", "bd", "NUMBER", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "png", "In", "the", "basic", "true", "false", "branch", "case", "horizontal", "lines", "be", "aligned", "at", "the", "same", "y", "level", "Heuristics", "for", "reducing", "edge", "crossing", "near", "the", "basic", "block", "edge_horizontal_crossing", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ca", "NUMBER", "NUMBER", "ca", "NUMBER", "ea", "NUMBER", "bb", "NUMBER", "NUMBER", "bcdc", "NUMBER", "c", "NUMBER", "png", "Gets", "rid", "of", "unnecessary", "big", "loops", "due", "to", "large", "basic", "block", "in", "the", "same", "row", "or", "column", "In", "single", "column", "case", "prefer", "routing", "false", "branch", "on", "one", "side", "and", "true", "branch", "on", "other", "side", "NUMBER", "edge_loops_side", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "dbe", "NUMBER", "c", "NUMBER", "NUMBER", "ca", "NUMBER", "ea", "NUMBER", "d", "cee", "NUMBER", "cb", "NUMBER", "png", "Improved", "worst", "case", "CPU", "and", "memory", "usage", "NUMBER", "Some", "of", "the", "tables", "in", "old", "code", "could", "have", "be", "O", "n", "NUMBER", "in", "the", "worst", "case", "NUMBER", "This", "wasn", "t", "a", "big", "problem", "with", "old", "code", "as", "it", "was", "good", "enough", "in", "most", "cases", "with", "typical", "size", "function", "and", "querying", "disassembly", "data", "from", "r", "NUMBER", "takes", "an", "order", "of", "magnitude", "longer", "than", "graph", "layout", "NUMBER", "It", "could", "be", "beneficial", "in", "future", "for", "drawing", "other", "r", "NUMBER", "graphs", "like", "whole", "program", "xref", "graph", "NUMBER", "Test", "plan", "required", "Look", "for", "layout", "bug", "most", "importantly", "overlapping", "blocks", "or", "edges", "Sort", "function", "by", "size", "and", "look", "at", "biggest", "ones", "Look", "at", "small", "and", "medium", "size", "function", "NUMBER", "TAG", "Feedback", "wanted", "I", "d", "like", "some", "feedback", "for", "default", "edge", "and", "block", "space", "settings", "NUMBER", "I", "have", "notice", "that", "sometimes", "the", "layout", "for", "the", "same", "function", "gets", "draw", "in", "two", "different", "ways", "NUMBER", "I", "be", "not", "sure", "if", "lack", "of", "determinism", "comes", "from", "the", "order", "of", "nodes", "in", "r", "NUMBER", "output", "or", "the", "graph", "layout", "process", "NUMBER", "If", "anyone", "can", "reliably", "reproduce", "this", "let", "me", "know", "NUMBER", "Closing", "issue", "TAG", "Follow", "up", "tasks", "Expose", "some", "of", "the", "layout", "tweaking", "settings", "in", "Perfrences", "Graph", "Do", "you", "think", "you", "can", "make", "the", "commit", "history", "a", "bit", "nicer", "for", "rebase", "merge", "or", "should", "we", "squash", "it", "Oh", "great", "idea", "I", "would", "like", "to", "give", "this", "a", "try", "currently", "looking", "into", "the", "InitialOptions", "handle", "to", "understand", "how", "to", "hand", "the", "writemode", "flag", "over", "from", "the", "Commandline", "parsing", "NUMBER", "I", "ll", "create", "a", "pull", "request", "once", "thats", "do", "Debian", "based", "Linux", "libkf", "NUMBER", "syntaxhighlighting", "dev", "pkg", "config", "libgraphviz", "dev", "python", "NUMBER", "setuptools", "Not", "sure", "about", "pkg", "config", "and", "python", "NUMBER", "setuptools", "but", "libkf", "NUMBER", "syntaxhighlighting", "libgraphviz", "be", "optional", "dependencies", "NUMBER", "pkg", "config", "be", "probably", "always", "required", "but", "it", "should", "not", "fail", "without", "libgraphviz", "and", "libkf", "NUMBER", "syntaxhighlighting", "unless", "you", "have", "manually", "forced", "use", "of", "the", "specific", "features", "NUMBER", "I", "will", "retest", "this", "NUMBER", "Just", "tried", "to", "do", "a", "build", "with", "clean", "minimal", "Ubuntu", "NUMBER", "install", "and", "package", "listed", "in", "Debian", "based", "Linux", "list", "NUMBER", "libkf", "NUMBER", "syntaxhighlighting", "dev", "pkg", "config", "libgraphviz", "dev", "python", "NUMBER", "setuptools", "were", "not", "strictly", "required", "and", "I", "was", "able", "to", "compile", "Cutter", "without", "them", "use", "cmake", "build", "steps", "directly", "bellow", "requirements", "NUMBER", "CMake", "prints", "the", "message", "that", "R", "NUMBER", "required", "meson", "NUMBER", "Which", "comes", "with", "Ubuntu", "NUMBER", "Suitable", "meson", "version", "can", "be", "install", "use", "pip", "NUMBER", "Installation", "of", "pip", "also", "install", "a", "bunch", "of", "python", "dev", "stuff", "and", "python", "NUMBER", "setuptools", "but", "after", "meson", "was", "install", "for", "the", "test", "purpose", "I", "remove", "them", "NUMBER", "My", "current", "plan", "for", "change", "be", "create", "list", "of", "optional", "dependencies", "instructions", "relate", "to", "meson", "add", "the", "second", "command", "for", "distro", "specific", "install", "commands", "which", "include", "optional", "dependencies", "NUMBER", "pkg", "config", "should", "probably", "be", "include", "in", "the", "primary", "dependency", "list", "even", "though", "it", "isn", "t", "strictly", "required", "NUMBER", "R", "NUMBER", "meson", "uses", "it", "for", "detecting", "some", "extra", "libraries", "which", "serve", "more", "functional", "purpose", "than", "syntax", "highlighter", "and", "graphviz", "in", "Cutter", "NUMBER", "luonii", "What", "debian", "version", "be", "you", "use", "What", "build", "command", "be", "you", "use", "and", "what", "error", "please", "include", "full", "output", "log", "do", "you", "see", "Repeated", "the", "test", "use", "Debian", "NUMBER", "and", "had", "the", "same", "observations", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "I", "think", "support", "debugging", "with", "Qiling", "framework", "would", "be", "a", "pretty", "cool", "feature", "to", "have", "NUMBER", "Indeed", "Qiling", "can", "fill", "the", "gap", "between", "light", "emulation", "covered", "by", "radare", "NUMBER", "and", "complete", "executable", "run", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "I", "tried", "to", "connect", "to", "Qiling", "gdb", "server", "but", "it", "didn", "t", "work", "as", "expected", "NUMBER", "I", "think", "the", "particular", "way", "to", "make", "debugging", "within", "radare", "NUMBER", "work", "in", "this", "case", "be", "the", "issue", "NUMBER", "Additional", "context", "In", "order", "to", "debug", "correctly", "an", "executable", "by", "connecting", "to", "the", "qiling", "gdb", "server", "NUMBER", "r", "NUMBER", "NUMBER", "doof", "gdb", "TAG", "TAG", "NUMBER", "Analyzing", "the", "executable", "before", "run", "doof", "doesn", "t", "work", "which", "be", "weird", "for", "me", "NUMBER", "Hi", "ITAYC", "NUMBER", "HEN", "Thank", "you", "for", "your", "answer", "NUMBER", "I", "hope", "it", "will", "be", "fix", "NUMBER", "heh", "i", "see", "this", "post", "cannot", "be", "unseen", "NUMBER", "how", "can", "we", "fix", "this", "and", "get", "this", "moving", "NUMBER", "abcSup", "can", "also", "take", "a", "look", "if", "yossizap", "be", "busy", "NUMBER", "we", "just", "tag", "NUMBER", "alpha", "NUMBER", "will", "you", "guys", "able", "to", "check", "it", "pip", "NUMBER", "install", "qiling", "pre", "this", "will", "do", "we", "just", "tag", "NUMBER", "alpha", "NUMBER", "will", "you", "guys", "able", "to", "check", "it", "I", "will", "look", "into", "it", "tonight", "and", "thanks", "for", "the", "installation", "tips", "NUMBER", "Unfortunately", "with", "the", "latest", "version", "from", "github", "I", "have", "this", "error", "message", "debugger", "Error", "Not", "able", "to", "initialize", "Debugging", "Server", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "qltool", "line", "NUMBER", "in", "TAG", "ql", "NUMBER", "run", "timeout", "timeout", "File", "root", "qiling", "qiling", "core", "NUMBER", "py", "line", "NUMBER", "in", "run", "ql_debugger_init", "self", "File", "root", "qiling", "qiling", "debugger", "debugger", "NUMBER", "py", "line", "NUMBER", "in", "ql_debugger_init", "ql_debugger", "ql", "remotedebugsrv", "ip", "port", "File", "root", "qiling", "qiling", "debugger", "debugger", "NUMBER", "py", "line", "NUMBER", "in", "ql_debugger", "ql", "NUMBER", "remote_debug", "DEBUGSESSION", "ql", "conn", "exit_point", "mappings", "File", "root", "qiling", "qiling", "debugger", "gdbserver", "gdbserver", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "gdb", "NUMBER", "initialize", "self", "NUMBER", "ql", "exit_point", "exit_point", "mappings", "mappings", "File", "root", "qiling", "qiling", "debugger", "gdbserver", "qldbg", "NUMBER", "py", "line", "NUMBER", "in", "initialize", "self", "NUMBER", "current_address", "self", "NUMBER", "entry_point", "self", "NUMBER", "ql", "NUMBER", "os", "NUMBER", "entry_point", "AttributeError", "QlOsWindows", "object", "has", "no", "attribute", "entry_point", "screw", "me", "NUMBER", "i", "forgotten", "that", "fix", "NUMBER", "can", "u", "clone", "and", "try", "dev", "now", "u", "r", "right", "NUMBER", "i", "be", "looking", "at", "it", "NUMBER", "i", "will", "fix", "in", "dev", "NUMBER", "for", "pip", "need", "to", "wait", "till", "rc", "NUMBER", "Unfortunately", "with", "the", "latest", "version", "from", "github", "I", "have", "this", "error", "message", "debugger", "Error", "Not", "able", "to", "initialize", "Debugging", "Server", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "qltool", "line", "NUMBER", "in", "TAG", "ql", "NUMBER", "run", "timeout", "timeout", "File", "root", "qiling", "qiling", "core", "NUMBER", "py", "line", "NUMBER", "in", "run", "ql_debugger_init", "self", "File", "root", "qiling", "qiling", "debugger", "debugger", "NUMBER", "py", "line", "NUMBER", "in", "ql_debugger_init", "ql_debugger", "ql", "remotedebugsrv", "ip", "port", "File", "root", "qiling", "qiling", "debugger", "debugger", "NUMBER", "py", "line", "NUMBER", "in", "ql_debugger", "ql", "NUMBER", "remote_debug", "DEBUGSESSION", "ql", "conn", "exit_point", "mappings", "File", "root", "qiling", "qiling", "debugger", "gdbserver", "gdbserver", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "gdb", "NUMBER", "initialize", "self", "NUMBER", "ql", "exit_point", "exit_point", "mappings", "mappings", "File", "root", "qiling", "qiling", "debugger", "gdbserver", "qldbg", "NUMBER", "py", "line", "NUMBER", "in", "initialize", "self", "NUMBER", "current_address", "self", "NUMBER", "entry_point", "self", "NUMBER", "ql", "NUMBER", "os", "NUMBER", "entry_point", "AttributeError", "QlOsWindows", "object", "has", "no", "attribute", "entry_point", "Could", "you", "provide", "me", "the", "executable", "you", "run", "I", "believe", "the", "issue", "above", "be", "relate", "to", "qiling", "NUMBER", "I", "have", "install", "qiling", "NUMBER", "alpha", "NUMBER", "and", "tried", "the", "remote", "debugging", "NUMBER", "I", "can", "confirm", "that", "it", "works", "for", "the", "example", "use", "qltool", "use", "the", "latest", "r", "NUMBER", "NUMBER", "qltool", "qltool", "for", "Qiling", "v", "NUMBER", "alpha", "NUMBER", "Usage", "NUMBER", "qltool", "run", "shellcode", "OPTIONS", "snipped", "r", "NUMBER", "v", "radare", "NUMBER", "NUMBER", "git", "NUMBER", "linux", "x", "NUMBER", "NUMBER", "git", "NUMBER", "NUMBER", "gc", "NUMBER", "eceab", "NUMBER", "d", "commit", "c", "NUMBER", "eceab", "NUMBER", "d", "NUMBER", "dd", "NUMBER", "c", "NUMBER", "be", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "bde", "build", "NUMBER", "NUMBER", "NUMBER", "__", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "qltool", "run", "f", "examples", "rootfs", "x", "NUMBER", "_linux", "bin", "x", "NUMBER", "_hello", "gdb", "NUMBER", "NUMBER", "rootfs", "examples", "rootfs", "x", "NUMBER", "_linux", "debugger", "Initializing", "load_address", "NUMBER", "x", "NUMBER", "debugger", "Listening", "on", "NUMBER", "NUMBER", "r", "NUMBER", "d", "gdb", "localhost", "NUMBER", "attach", "NUMBER", "NUMBER", "attach", "NUMBER", "NUMBER", "attach", "NUMBER", "NUMBER", "attach", "NUMBER", "NUMBER", "Try", "with", "ASAN", "and", "be", "amazed", "NUMBER", "x", "NUMBER", "dr", "rax", "NUMBER", "x", "NUMBER", "c", "rbx", "NUMBER", "x", "NUMBER", "rcx", "NUMBER", "x", "NUMBER", "rdx", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "de", "NUMBER", "a", "NUMBER", "rsi", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "ffe", "NUMBER", "rdi", "NUMBER", "x", "NUMBER", "rbp", "NUMBER", "x", "NUMBER", "rsp", "NUMBER", "x", "NUMBER", "de", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "a", "r", "NUMBER", "NUMBER", "x", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "ffd", "NUMBER", "f", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "ffe", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "de", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "r", "NUMBER", "NUMBER", "x", "NUMBER", "rip", "NUMBER", "x", "NUMBER", "orig_rax", "NUMBER", "x", "NUMBER", "fs_base", "NUMBER", "x", "NUMBER", "gs_base", "NUMBER", "x", "NUMBER", "bndcfgu", "NUMBER", "x", "NUMBER", "bndstatus", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "pd", "NUMBER", "r", "NUMBER", "rip", "NUMBER", "x", "NUMBER", "NUMBER", "ed", "xor", "ebp", "ebp", "NUMBER", "x", "NUMBER", "NUMBER", "d", "NUMBER", "mov", "r", "NUMBER", "rdx", "NUMBER", "x", "NUMBER", "NUMBER", "e", "pop", "rsi", "NUMBER", "x", "NUMBER", "NUMBER", "e", "NUMBER", "mov", "rdx", "rsp", "NUMBER", "x", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "and", "rsp", "NUMBER", "xfffffffffffffff", "NUMBER", "NUMBER", "x", "NUMBER", "Please", "upload", "the", "example", "you", "be", "trying", "to", "debug", "so", "I", "can", "try", "to", "reproduce", "the", "problem", "and", "help", "you", "out", "anytime", "NUMBER", "you", "can", "clone", "the", "latest", "qiling", "from", "git", "clone", "git", "github", "NUMBER", "com", "qilingframework", "qiling", "NUMBER", "git", "cd", "qiling", "git", "checkout", "dev", "and", "run", "NUMBER", "qltool", "run", "f", "examples", "rootfs", "x", "NUMBER", "_linux", "bin", "x", "NUMBER", "_hello", "gdb", "NUMBER", "NUMBER", "rootfs", "examples", "rootfs", "x", "NUMBER", "_linux", "should", "be", "good", "now", "Indeed", "this", "issue", "be", "now", "resolve", "but", "I", "have", "another", "one", "NUMBER", "qltool", "run", "f", "NUMBER", "examples", "rootfs", "x", "NUMBER", "_windows", "bin", "x", "NUMBER", "_hello", "NUMBER", "exe", "rootfs", "mnt", "hgfs", "Downloads", "rootfs", "gdb", "NUMBER", "NUMBER", "Initiate", "stack", "address", "at", "NUMBER", "x", "NUMBER", "ffffffde", "NUMBER", "Loading", "NUMBER", "examples", "rootfs", "x", "NUMBER", "_windows", "bin", "x", "NUMBER", "_hello", "NUMBER", "exe", "to", "NUMBER", "x", "NUMBER", "PE", "entry", "point", "at", "NUMBER", "x", "NUMBER", "e", "NUMBER", "TEB", "addr", "be", "NUMBER", "x", "NUMBER", "PEB", "addr", "be", "NUMBER", "x", "NUMBER", "b", "NUMBER", "Loading", "mnt", "hgfs", "Downloads", "rootfs", "Windows", "System", "NUMBER", "kernel", "NUMBER", "dll", "to", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "Done", "with", "loading", "mnt", "hgfs", "Downloads", "rootfs", "Windows", "System", "NUMBER", "kernel", "NUMBER", "dll", "Loading", "mnt", "hgfs", "Downloads", "rootfs", "Windows", "System", "NUMBER", "msvcrt", "NUMBER", "dll", "to", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "b", "NUMBER", "Done", "with", "loading", "mnt", "hgfs", "Downloads", "rootfs", "Windows", "System", "NUMBER", "msvcrt", "NUMBER", "dll", "debugger", "Initializing", "load_address", "NUMBER", "x", "NUMBER", "debugger", "Listening", "on", "NUMBER", "NUMBER", "gdb", "Breakpoint", "add", "at", "NUMBER", "x", "NUMBER", "e", "NUMBER", "gdb", "Breakpoint", "find", "stop", "at", "address", "NUMBER", "x", "NUMBER", "e", "NUMBER", "gdb", "Xml", "file", "not", "find", "root", "qiling", "qiling", "debugger", "gdbserver", "xml", "x", "NUMBER", "target", "NUMBER", "xml", "which", "be", "weird", "because", "the", "file", "exists", "NUMBER", "l", "root", "qiling", "qiling", "debugger", "gdbserver", "xml", "x", "NUMBER", "target", "NUMBER", "xml", "rw", "r", "r", "NUMBER", "root", "root", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "root", "qiling", "qiling", "debugger", "gdbserver", "xml", "x", "NUMBER", "target", "NUMBER", "xml", "Thank", "you", "for", "your", "help", "and", "your", "responses", "this", "be", "some", "elf", "relate", "issue", "NUMBER", "but", "this", "will", "not", "effect", "r", "NUMBER", "i", "guess", "NUMBER", "maybe", "be", "should", "make", "a", "check", "if", "this", "be", "a", "nix", "NUMBER", "let", "me", "try", "i", "add", "a", "better", "response", "msg", "NUMBER", "It", "should", "work", "now", "NUMBER", "Will", "you", "be", "able", "to", "try", "again", "It", "s", "indeed", "clearer", "like", "that", "NUMBER", "Thanks", "It", "s", "still", "doesn", "t", "work", "for", "me", "NUMBER", "I", "have", "a", "segfault", "on", "the", "radare", "NUMBER", "side", "NUMBER", "Do", "you", "have", "the", "same", "thing", "with", "a", "Windows", "executable", "I", "will", "try", "it", "out", "but", "I", "have", "a", "question", "about", "run", "a", "Windows", "executable", "on", "qiling", "NUMBER", "Do", "I", "need", "an", "installation", "of", "Windows", "OS", "to", "use", "it", "as", "my", "rootfs", "I", "will", "try", "it", "out", "but", "I", "have", "a", "question", "about", "run", "a", "Windows", "executable", "on", "qiling", "NUMBER", "Do", "I", "need", "an", "installation", "of", "Windows", "OS", "to", "use", "it", "as", "my", "rootfs", "It", "be", "ok", "NUMBER", "I", "find", "the", "official", "guide", "regard", "Windows", "emulation", "and", "will", "try", "it", "out", "now", "NUMBER", "LINK", "I", "populated", "my", "rootfs", "with", "the", "DLLs", "of", "my", "Windows", "NUMBER", "VM", "NUMBER", "But", "I", "think", "you", "should", "be", "able", "to", "run", "the", "examples", "with", "the", "DLLs", "from", "ReactOS", "NUMBER", "Here", "be", "a", "folder", "structure", "example", "l", "mnt", "hgfs", "Downloads", "rootfs", "Windows", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "registry", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "K", "Mar", "NUMBER", "NUMBER", "NUMBER", "System", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "K", "May", "NUMBER", "NUMBER", "NUMBER", "SysWOW", "NUMBER", "I", "populated", "my", "rootfs", "with", "the", "DLLs", "of", "my", "Windows", "NUMBER", "VM", "NUMBER", "But", "I", "think", "you", "should", "be", "able", "to", "run", "the", "examples", "with", "the", "DLLs", "from", "ReactOS", "NUMBER", "Here", "be", "a", "folder", "structure", "example", "l", "mnt", "hgfs", "Downloads", "rootfs", "Windows", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "registry", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "K", "Mar", "NUMBER", "NUMBER", "NUMBER", "System", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "K", "May", "NUMBER", "NUMBER", "NUMBER", "SysWOW", "NUMBER", "Thank", "you", "It", "s", "indeed", "clearer", "like", "that", "NUMBER", "Thanks", "It", "s", "still", "doesn", "t", "work", "for", "me", "NUMBER", "I", "have", "a", "segfault", "on", "the", "radare", "NUMBER", "side", "NUMBER", "Do", "you", "have", "the", "same", "thing", "with", "a", "Windows", "executable", "i", "be", "use", "x", "NUMBER", "_helloworld", "which", "comes", "with", "the", "example", "in", "qiling", "NUMBER", "u", "can", "get", "it", "from", "LINK", "give", "us", "a", "star", "too", "NUMBER", "on", "our", "way", "to", "NUMBER", "NUMBER", "start", "I", "populated", "my", "rootfs", "with", "the", "DLLs", "of", "my", "Windows", "NUMBER", "VM", "NUMBER", "But", "I", "think", "you", "should", "be", "able", "to", "run", "the", "examples", "with", "the", "DLLs", "from", "ReactOS", "NUMBER", "Here", "be", "a", "folder", "structure", "example", "l", "mnt", "hgfs", "Downloads", "rootfs", "Windows", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "registry", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "K", "Mar", "NUMBER", "NUMBER", "NUMBER", "System", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "K", "May", "NUMBER", "NUMBER", "NUMBER", "SysWOW", "NUMBER", "Thank", "you", "u", "can", "raise", "a", "issue", "in", "qiling", "NUMBER", "dont", "pollute", "r", "NUMBER", "s", "github", "It", "s", "indeed", "clearer", "like", "that", "NUMBER", "Thanks", "It", "s", "still", "doesn", "t", "work", "for", "me", "NUMBER", "I", "have", "a", "segfault", "on", "the", "radare", "NUMBER", "side", "NUMBER", "Do", "you", "have", "the", "same", "thing", "with", "a", "Windows", "executable", "i", "be", "use", "x", "NUMBER", "_helloworld", "which", "comes", "with", "the", "example", "in", "qiling", "NUMBER", "u", "can", "get", "it", "from", "LINK", "give", "us", "a", "star", "too", "NUMBER", "on", "our", "way", "to", "NUMBER", "NUMBER", "start", "Don", "t", "worry", "it", "s", "already", "do", "D", "I", "populated", "my", "rootfs", "with", "the", "DLLs", "of", "my", "Windows", "NUMBER", "VM", "NUMBER", "But", "I", "think", "you", "should", "be", "able", "to", "run", "the", "examples", "with", "the", "DLLs", "from", "ReactOS", "NUMBER", "Here", "be", "a", "folder", "structure", "example", "l", "mnt", "hgfs", "Downloads", "rootfs", "Windows", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "registry", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "K", "Mar", "NUMBER", "NUMBER", "NUMBER", "System", "NUMBER", "drwxr", "xr", "x", "NUMBER", "NUMBER", "dialout", "NUMBER", "K", "May", "NUMBER", "NUMBER", "NUMBER", "SysWOW", "NUMBER", "Thank", "you", "u", "can", "raise", "a", "issue", "in", "qiling", "NUMBER", "dont", "pollute", "r", "NUMBER", "s", "github", "Alright", "will", "do", "NUMBER", "Thank", "you", "for", "your", "time", "and", "your", "quick", "answers", "Ok", "we", "manage", "to", "fix", "r", "NUMBER", "and", "cutter", "be", "not", "work", "with", "gdb", "remote", "debugging", "NUMBER", "I", "guess", "we", "can", "come", "back", "here", "now", "NUMBER", "It", "s", "indeed", "clearer", "like", "that", "NUMBER", "Thanks", "It", "s", "still", "doesn", "t", "work", "for", "me", "NUMBER", "I", "have", "a", "segfault", "on", "the", "radare", "NUMBER", "side", "NUMBER", "Do", "you", "have", "the", "same", "thing", "with", "a", "Windows", "executable", "redmed", "NUMBER", "I", "be", "able", "to", "reproduce", "the", "segfault", "case", "when", "run", "a", "windows", "exe", "NUMBER", "It", "seems", "to", "be", "some", "memory", "leak", "issue", "in", "r", "NUMBER", "NUMBER", "gdb", "Breakpoint", "add", "at", "NUMBER", "x", "NUMBER", "e", "NUMBER", "gdb", "Breakpoint", "find", "stop", "at", "address", "NUMBER", "x", "NUMBER", "e", "NUMBER", "gdb", "Platform", "be", "not", "support", "by", "xml", "or", "xml", "file", "not", "find", "qiling", "debugger", "gdbserver", "xml", "x", "NUMBER", "target", "NUMBER", "xml", "this", "be", "some", "elf", "relate", "issue", "NUMBER", "but", "this", "will", "not", "effect", "r", "NUMBER", "i", "guess", "NUMBER", "xwings", "You", "be", "right", "that", "it", "will", "not", "effect", "r", "NUMBER", "NUMBER", "r", "NUMBER", "will", "use", "a", "generic", "register", "profile", "when", "provide", "no", "target", "NUMBER", "xml", "NUMBER", "I", "do", "believe", "we", "should", "work", "on", "a", "closer", "integration", "with", "r", "NUMBER", "and", "lets", "not", "reply", "on", "this", "GDB", "RSP", "thingy", "I", "do", "believe", "we", "should", "work", "on", "a", "closer", "integration", "with", "r", "NUMBER", "and", "lets", "not", "reply", "on", "this", "GDB", "RSP", "thingy", "I", "will", "resolve", "this", "issue", "first", "NUMBER", "Please", "open", "a", "new", "PR", "and", "discuss", "about", "features", "you", "wish", "to", "integrate", "with", "r", "NUMBER", "and", "we", "can", "work", "from", "there", "NUMBER", "Thanks", "its", "more", "on", "PR", "on", "Qiling", "NUMBER", "I", "be", "not", "too", "sure", "r", "NUMBER", "have", "any", "r", "NUMBER", "s", "protocol", "or", "we", "just", "need", "to", "work", "it", "out", "on", "rsp", "if", "r", "NUMBER", "already", "get", "a", "remote", "debugging", "protocol", "then", "it", "will", "my", "issue", "on", "my", "side", "NUMBER", "r", "NUMBER", "do", "not", "have", "any", "its", "own", "remote", "debugging", "protocol", "NUMBER", "I", "would", "say", "use", "GDB", "RSP", "be", "good", "for", "now", "because", "we", "do", "not", "have", "to", "develop", "new", "protocol", "ourselves", "and", "r", "NUMBER", "and", "qiling", "be", "already", "support", "GDB", "RSP", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "Describe", "the", "solution", "you", "d", "like", "Add", "a", "mode", "where", "each", "line", "of", "decompiled", "code", "be", "in", "different", "color", "and", "matching", "disassembly", "lines", "have", "the", "same", "color", "similar", "to", "Godbolt", "compiler", "explorer", "LINK", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "TAG", "Additional", "context", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "bc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "png", "I", "assume", "that", "meta", "refactoring", "do", "by", "thestr", "NUMBER", "ng", "NUMBER", "r", "change", "some", "of", "the", "API", "NUMBER", "Need", "to", "check", "if", "it", "now", "returns", "a", "string", "owned", "by", "meta", "structure", "NUMBER", "Checked", "the", "new", "code", "NUMBER", "Looks", "type", "system", "be", "work", "as", "intended", "NUMBER", "r_meta_get_string", "doesn", "t", "return", "a", "copy", "of", "string", "anymore", "so", "it", "can", "be", "converted", "to", "QString", "directly", "and", "shouldn", "t", "be", "freed", "that", "means", "remove", "the", "fromOwnedCharPtr", "call", "NUMBER", "Confirmed", "that", "the", "data", "gets", "refreshed", "by", "editing", "some", "bytes", "in", "cache", "mode", "and", "observing", "that", "entropy", "change", "NUMBER", "Yes", "only", "entropy", "was", "update", "but", "that", "s", "probably", "r", "NUMBER", "issue", "NUMBER", "TAG", "Hi", "there", "I", "be", "new", "to", "Assembly", "and", "I", "have", "not", "familiarized", "myself", "with", "the", "language", "NUMBER", "However", "when", "trying", "to", "edit", "an", "instruction", "this", "error", "appears", "on", "the", "program", "NUMBER", "May", "I", "know", "how", "I", "can", "solve", "this", "I", "have", "already", "tried", "open", "it", "in", "Write", "Mode", "NUMBER", "Thanks", "guys", "Please", "fill", "out", "the", "issue", "template", "and", "include", "the", "information", "request", "NUMBER", "The", "error", "message", "says", "what", "you", "need", "to", "do", "NUMBER", "If", "following", "the", "instruction", "didn", "t", "work", "describe", "step", "by", "step", "what", "exactly", "you", "did", "and", "rest", "of", "the", "information", "request", "in", "issue", "template", "NUMBER", "Please", "fill", "out", "the", "issue", "template", "and", "include", "the", "information", "request", "NUMBER", "The", "error", "message", "says", "what", "you", "need", "to", "do", "NUMBER", "If", "following", "the", "instruction", "didn", "t", "work", "describe", "step", "by", "step", "what", "exactly", "you", "did", "and", "rest", "of", "the", "information", "request", "in", "issue", "template", "NUMBER", "May", "I", "know", "where", "I", "can", "get", "the", "issue", "template", "I", "don", "t", "see", "it", "anywhere", "NUMBER", "Clicking", "on", "Reopen", "in", "write", "mode", "should", "solve", "your", "dilemma", "NUMBER", "once", "clicked", "it", "will", "allow", "you", "to", "patch", "without", "a", "problem", "I", "m", "unable", "to", "get", "it", "work", "after", "clicking", "the", "button", "NUMBER", "It", "also", "do", "not", "work", "when", "I", "relaunch", "the", "program", "with", "w", "option", "You", "can", "find", "the", "template", "here", "LINK", "_TEMPLATE", "bug_report", "NUMBER", "md", "NUMBER", "How", "did", "you", "manage", "to", "create", "an", "issue", "skipping", "that", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "R", "NUMBER", "can", "generate", "multiple", "kinds", "of", "graphs", "Cutter", "currently", "only", "support", "function", "basic", "block", "graph", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Dedicated", "widgets", "instead", "of", "some", "generic", "widget", "because", "that", "allows", "implement", "content", "specific", "features", "Context", "menu", "and", "other", "interaction", "with", "objects", "represented", "by", "nodes", "NUMBER", "Adjusting", "node", "and", "edge", "style", "based", "on", "data", "NUMBER", "Choosing", "the", "most", "suitable", "layout", "algorithm", "by", "default", "NUMBER", "Even", "though", "issue", "asks", "for", "dedicated", "widgets", "large", "part", "of", "code", "can", "probably", "be", "shared", "NUMBER", "Dedicated", "widget", "for", "data", "reference", "graph", "global", "data", "reference", "graph", "function", "callgraph", "NUMBER", "global", "callgraph", "NUMBER", "diff", "graph", "imports", "graph", "references", "graph", "global", "references", "graph", "cross", "references", "graph", "axg", "find", "paths", "to", "reach", "a", "point", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "Additional", "context", "ITAYC", "NUMBER", "HEN", "Deep", "graph", "plugin", "just", "binds", "buttons", "to", "r", "NUMBER", "ag", "commands", "NUMBER", "It", "doesn", "t", "really", "help", "implement", "this", "issue", "more", "than", "write", "ag", "in", "r", "NUMBER", "console", "NUMBER", "As", "for", "sharing", "the", "same", "widget", "read", "the", "issue", "description", "Even", "though", "issue", "asks", "for", "dedicated", "widgets", "large", "part", "of", "code", "can", "probably", "be", "shared", "NUMBER", "Environment", "information", "Operating", "System", "ArchLinux", "also", "observed", "on", "macOS", "Cutter", "version", "NUMBER", "pre", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "bf", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "b", "Obtained", "from", "x", "Built", "from", "source", "File", "format", "N", "A", "Describe", "the", "bug", "When", "lightness", "darkness", "of", "native", "theme", "doesn", "t", "match", "disassembly", "color", "theme", "and", "settings", "get", "opened", "color", "theme", "gets", "switched", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Make", "system", "not", "Cutter", "theme", "light", "NUMBER", "Can", "be", "do", "use", "qt", "NUMBER", "ct", "on", "Linux", "or", "Light", "Dark", "switch", "on", "macOS", "NUMBER", "NUMBER", "Open", "Cutter", "select", "native", "theme", "make", "sure", "disassembly", "color", "theme", "be", "light", "NUMBER", "NUMBER", "Close", "Cutter", "NUMBER", "Switch", "system", "theme", "to", "dark", "NUMBER", "Open", "Cutter", "observe", "that", "disassembly", "widget", "be", "use", "light", "color", "theme", "NUMBER", "Open", "settings", "observe", "that", "color", "theme", "switches", "to", "dark", "one", "Expected", "behavior", "Changes", "in", "native", "theme", "lightness", "be", "detected", "when", "open", "Cutter", "NUMBER", "Different", "approach", "would", "be", "not", "doing", "automatic", "color", "theme", "change", "at", "all", "NUMBER", "Screenshots", "Additional", "context", "TAG", "I", "be", "not", "surprised", "NUMBER", "Explicitly", "selecting", "seem", "like", "a", "more", "reliable", "way", "ensuring", "that", "light", "color", "theme", "be", "selected", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "x", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "WARNING", "exclamation", "This", "branch", "performs", "one", "way", "upgrade", "of", "settings", "and", "layout", "NUMBER", "If", "you", "have", "some", "complex", "layout", "that", "you", "want", "to", "keep", "use", "in", "the", "old", "Cutter", "backup", "your", "cutter", "settings", "NUMBER", "Detailed", "description", "Can", "be", "review", "NUMBER", "Do", "not", "merge", "into", "NUMBER", "Separate", "all", "layout", "state", "into", "a", "structure", "make", "it", "clearer", "when", "and", "where", "it", "s", "saved", "loaded", "switched", "NUMBER", "As", "part", "of", "layout", "state", "introduce", "dock", "view", "properties", "which", "be", "QVariant", "dictionary", "that", "can", "be", "use", "for", "easily", "saving", "single", "dock", "config", "NUMBER", "Makers", "of", "new", "widgets", "should", "consider", "if", "an", "option", "belongs", "to", "global", "settings", "or", "the", "new", "widget", "layout", "specific", "properties", "NUMBER", "The", "new", "mechanism", "be", "suitable", "for", "situations", "where", "user", "might", "want", "to", "open", "two", "copies", "of", "a", "widget", "with", "different", "view", "settings", "NUMBER", "For", "example", "two", "hexwidgets", "one", "showing", "memory", "as", "hex", "bytes", "other", "as", "floating", "point", "numbers", "NUMBER", "To", "use", "the", "new", "mechanism", "developer", "needs", "to", "override", "CutterDockWidget", "serializeViewProperties", "and", "CutterDockWidget", "deSerializeViewProperties", "methods", "NUMBER", "Allow", "saving", "multiple", "layout", "profiles", "in", "addition", "to", "builtin", "Default", "and", "Debug", "NUMBER", "The", "logic", "be", "that", "Default", "and", "default", "Debug", "always", "contain", "the", "last", "layout", "in", "corresponding", "mode", "NUMBER", "When", "user", "loads", "new", "profile", "or", "modifies", "the", "current", "layout", "it", "becomes", "the", "new", "Default", "NUMBER", "Saved", "layouts", "be", "never", "automatically", "modify", "NUMBER", "Window", "size", "be", "separated", "from", "layout", "NUMBER", "It", "be", "loaded", "when", "open", "Cutter", "NUMBER", "Switching", "layout", "doesn", "t", "touch", "the", "window", "size", "NUMBER", "It", "s", "possible", "to", "imagine", "that", "for", "some", "elaborate", "layouts", "window", "size", "be", "important", "but", "in", "most", "cases", "change", "window", "size", "when", "switching", "layout", "would", "be", "unexpect", "NUMBER", "To", "be", "safe", "I", "keep", "the", "the", "window", "geometry", "in", "layout", "state", "but", "it", "isn", "t", "loaded", "NUMBER", "It", "will", "be", "easier", "to", "ignore", "or", "remove", "it", "later", "than", "make", "it", "out", "of", "nothing", "in", "case", "it", "turns", "out", "to", "be", "necessary", "NUMBER", "Most", "examples", "show", "restoring", "state", "dock", "placement", "together", "with", "geometry", "main", "window", "size", "and", "placement", "NUMBER", "Remove", "the", "custom", "mechanism", "for", "synchronizing", "widget", "visibility", "with", "action", "checkboxes", "in", "windows", "menu", "NUMBER", "Qt", "has", "it", "builtin", "no", "need", "to", "reinvent", "it", "poorly", "NUMBER", "The", "old", "mechanism", "tried", "to", "deal", "with", "multiple", "widgets", "of", "the", "same", "kind", "but", "it", "only", "increase", "complexity", "and", "wasn", "t", "actually", "use", "NUMBER", "Code", "attempts", "to", "put", "new", "docks", "new", "extra", "plugins", "or", "after", "Cutter", "upgrade", "in", "the", "biggest", "area", "with", "exist", "disassembly", "graph", "hex", "widget", "NUMBER", "From", "my", "observations", "in", "LINK", "issuecomment", "NUMBER", "and", "later", "it", "seems", "that", "any", "attempts", "to", "put", "something", "on", "the", "side", "may", "potentially", "result", "in", "broken", "layout", "NUMBER", "When", "I", "start", "work", "on", "this", "I", "tried", "to", "visualize", "layout", "relate", "code", "structure", "NUMBER", "before", "before", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "bba", "NUMBER", "ea", "NUMBER", "ccc", "NUMBER", "cd", "NUMBER", "da", "NUMBER", "e", "NUMBER", "png", "after", "after", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "bba", "NUMBER", "ea", "NUMBER", "NUMBER", "ae", "NUMBER", "fc", "NUMBER", "e", "NUMBER", "png", "Test", "plan", "required", "Clean", "start", "without", "upgrade", "remove", "cutter", "config", "start", "cutter", "make", "sure", "default", "layout", "be", "reasonable", "start", "debuging", "make", "sure", "layout", "be", "reasonable", "layout", "upgrade", "a", "remove", "cutter", "config", "open", "NUMBER", "cutter", "make", "minor", "modifications", "to", "layout", "close", "NUMBER", "cutter", "open", "new", "cutter", "make", "sure", "sure", "layout", "be", "reasonable", "start", "debugging", "make", "sure", "layout", "be", "reasonable", "layout", "upgrade", "b", "remove", "cutter", "config", "open", "NUMBER", "cutter", "start", "debugging", "make", "some", "modification", "to", "layout", "stop", "debugging", "close", "NUMBER", "cutter", "open", "new", "cutter", "make", "sure", "sure", "layout", "be", "reasonable", "start", "debugging", "make", "sure", "layout", "be", "reasonable", "saving", "layout", "modifications", "open", "cutter", "modify", "layout", "restart", "cutter", "make", "sure", "layout", "be", "preserved", "start", "debugging", "modify", "debug", "layout", "stop", "debugging", "start", "debugging", "make", "sure", "debug", "layout", "be", "preserved", "restart", "cutter", "start", "debugging", "make", "sure", "debug", "layout", "be", "preserved", "stop", "debugging", "resetting", "layout", "do", "after", "previous", "step", "be", "in", "non", "debug", "mode", "reset", "layout", "make", "sure", "it", "matches", "initial", "layout", "start", "debugging", "make", "sure", "debug", "layout", "isn", "t", "reset", "reset", "layout", "make", "sure", "you", "see", "the", "initial", "debug", "layout", "modify", "both", "debug", "and", "normal", "layout", "again", "reset", "settings", "make", "sure", "both", "layouts", "were", "reset", "view", "property", "saving", "Open", "multiple", "memory", "widgets", "disassembly", "hex", "or", "graph", "NUMBER", "At", "least", "two", "copies", "for", "one", "of", "them", "and", "place", "them", "side", "by", "side", "NUMBER", "synchronize", "some", "of", "them", "desynchronize", "others", "restart", "cutter", "make", "sure", "all", "the", "the", "memory", "widgets", "be", "opened", "and", "synchronization", "state", "be", "correctly", "restored", "It", "would", "be", "useful", "if", "reviewer", "and", "maybe", "more", "people", "tried", "a", "bunch", "of", "random", "things", "to", "see", "if", "some", "sequence", "of", "operations", "or", "specific", "layout", "can", "cause", "layout", "to", "break", "NUMBER", "Closing", "issue", "Not", "closing", "NUMBER", "that", "should", "be", "do", "after", "finishing", "second", "part", "and", "implement", "layout", "management", "UI", "NUMBER", "Closes", "NUMBER", "Maybe", "close", "NUMBER", "NUMBER", "Doesn", "t", "do", "exactly", "what", "was", "asked", "there", "but", "in", "my", "opinion", "solves", "the", "problem", "in", "a", "somewhat", "acceptable", "way", "NUMBER", "TAG", "Followup", "tasks", "The", "new", "mechanism", "for", "saving", "view", "properties", "could", "be", "use", "to", "easily", "implement", "NUMBER", "Better", "UI", "for", "managing", "layouts", "view", "properties", "could", "be", "use", "for", "saving", "some", "of", "hex", "widget", "config", "update", "Plugins", "to", "use", "the", "new", "API", "for", "dock", "action", "Overview", "widget", "showing", "hiding", "NUMBER", "Looks", "there", "be", "some", "leftover", "code", "trying", "to", "do", "more", "than", "basic", "checkbox", "to", "show", "but", "it", "doesn", "t", "seem", "to", "be", "work", "in", "current", "master", "or", "this", "PR", "NUMBER", "NUMBER", "This", "pull", "request", "introduces", "NUMBER", "alert", "when", "merge", "aeae", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ee", "NUMBER", "ecc", "NUMBER", "ed", "NUMBER", "af", "NUMBER", "c", "NUMBER", "c", "into", "a", "NUMBER", "fa", "NUMBER", "bf", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "b", "view", "on", "LGTM", "NUMBER", "com", "LINK", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "f", "NUMBER", "dcd", "NUMBER", "f", "NUMBER", "c", "NUMBER", "edd", "NUMBER", "a", "new", "alerts", "NUMBER", "for", "Unused", "import", "Just", "took", "a", "quick", "look", "the", "refactoring", "looks", "very", "nice", "I", "ll", "try", "to", "test", "it", "and", "make", "a", "better", "review", "later", "When", "clicking", "Reset", "layout", "NUMBER", "Renamed", "it", "NUMBER", "Should", "Reset", "layout", "be", "so", "separated", "I", "was", "thinking", "about", "this", "as", "well", "but", "couldn", "t", "come", "up", "with", "good", "solution", "NUMBER", "Plugins", "Until", "now", "the", "widgets", "NUMBER", "So", "this", "be", "only", "a", "quick", "note", "about", "this", "change", "to", "make", "sure", "it", "be", "intentional", "NUMBER", "This", "be", "result", "of", "trying", "to", "place", "new", "widgets", "in", "somewhat", "reasonable", "place", "NUMBER", "The", "old", "behavior", "didn", "t", "scale", "when", "you", "had", "more", "than", "one", "new", "widget", "NUMBER", "Depending", "on", "what", "was", "the", "right", "most", "widget", "previous", "time", "it", "sometimes", "cause", "broken", "layout", "similar", "to", "what", "you", "saw", "during", "debuging", "with", "hexwidget", "slowly", "expanding", "NUMBER", "Debug", "When", "entering", "debug", "mode", "the", "layout", "was", "wrong", "This", "might", "be", "result", "of", "bad", "layout", "upgrade", "NUMBER", "Let", "me", "know", "if", "you", "figure", "out", "how", "to", "reproduce", "it", "NUMBER", "Debug", "when", "stepping", "weird", "things", "happen", "to", "my", "layout", "when", "stepping", "Most", "likely", "result", "of", "broken", "layout", "from", "previous", "step", "NUMBER", "Debug", "Why", "stack", "be", "on", "the", "upper", "view", "and", "not", "Registers", "Weren", "t", "registers", "always", "at", "the", "bottom", "Debug", "stopping", "debug", "keep", "the", "layout", "Can", "t", "repeat", "it", "NUMBER", "Debug", "saved", "debug", "layout", "be", "available", "when", "not", "in", "debug", "I", "couldn", "t", "decide", "if", "we", "should", "artificially", "limit", "this", "NUMBER", "If", "you", "create", "some", "complicated", "layout", "wouldn", "t", "it", "be", "annoying", "to", "create", "it", "twice", "instead", "of", "loading", "a", "debug", "layout", "during", "normal", "mode", "and", "make", "minor", "modifications", "to", "it", "Haven", "t", "do", "the", "test", "yet", "NUMBER", "Did", "the", "test", "NUMBER", "Hi", "thanks", "again", "for", "this", "awesome", "PR", "NUMBER", "I", "didn", "t", "have", "the", "time", "to", "test", "everything", "however", "I", "notice", "the", "graph", "overview", "be", "not", "enable", "by", "default", "anymore", "be", "it", "intended", "I", "ve", "notice", "you", "write", "that", "a", "follow", "up", "task", "would", "be", "to", "improve", "its", "behavior", "but", "I", "don", "t", "know", "exactly", "what", "you", "be", "referring", "to", "NUMBER", "xarkes", "Overview", "has", "be", "not", "enable", "by", "default", "for", "a", "while", "NUMBER", "This", "PR", "doesn", "t", "change", "that", "NUMBER", "To", "be", "more", "precise", "there", "be", "code", "which", "be", "supposed", "to", "handle", "third", "state", "for", "overview", "automatic", "show", "hide", "depending", "on", "there", "be", "something", "to", "show", "in", "overview", "NUMBER", "I", "assume", "this", "automatic", "showing", "was", "the", "default", "mode", "some", "time", "ago", "but", "it", "broke", "a", "while", "ago", "resulting", "in", "overview", "not", "shown", "by", "default", "NUMBER", "I", "just", "confirmed", "it", "deleting", "Cutter", "settings", "open", "Cutter", "NUMBER", "appimage", "and", "open", "graph", "also", "results", "in", "overview", "not", "be", "shown", "NUMBER", "Most", "likely", "it", "was", "broken", "a", "few", "version", "before", "that", "NUMBER", "Environment", "information", "Operating", "System", "Ubuntu", "Mate", "NUMBER", "Linux", "NUMBER", "NUMBER", "generic", "NUMBER", "Ubuntu", "SMP", "Wed", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "x", "NUMBER", "_", "NUMBER", "x", "NUMBER", "_", "NUMBER", "x", "NUMBER", "_", "NUMBER", "GNU", "Linux", "Cutter", "version", "Version", "NUMBER", "Using", "r", "NUMBER", "NUMBER", "Based", "on", "Qt", "NUMBER", "GCC", "NUMBER", "NUMBER", "bit", "Optional", "Features", "Python", "ON", "Python", "Bindings", "ON", "Obtained", "from", "x", "Built", "from", "source", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "Any", "Describe", "the", "bug", "Marking", "text", "with", "mouse", "be", "not", "behaving", "intuitively", "When", "clicking", "and", "dragging", "with", "the", "mouse", "in", "the", "disassemble", "window", "and", "moving", "the", "mouse", "to", "the", "top", "or", "bottom", "of", "the", "screen", "then", "the", "text", "doesn", "t", "scroll", "as", "it", "would", "in", "a", "normal", "editor", "When", "left", "clicking", "at", "some", "point", "to", "place", "the", "cursor", "there", "and", "then", "scrolling", "the", "text", "off", "screen", "and", "then", "shift", "left", "clicking", "to", "mark", "the", "whole", "section", "really", "only", "the", "text", "on", "screen", "be", "marked", "NUMBER", "Copying", "with", "ctrl", "c", "only", "copies", "whatever", "be", "currently", "in", "view", "not", "the", "whole", "segment", "NUMBER", "This", "be", "a", "problem", "when", "you", "want", "to", "copy", "the", "code", "because", "then", "you", "have", "to", "copy", "multiple", "times", "which", "be", "quite", "annoying", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "a", "file", "for", "disassembly", "NUMBER", "Open", "disassembly", "window", "NUMBER", "Click", "on", "some", "character", "and", "hold", "down", "the", "left", "mouse", "button", "NUMBER", "Hold", "the", "mouse", "button", "and", "drag", "it", "to", "the", "bottom", "edge", "of", "the", "screen", "to", "select", "multiple", "lines", "NUMBER", "Observe", "that", "you", "can", "t", "mark", "more", "than", "one", "page", "of", "text", "less", "if", "you", "start", "step", "NUMBER", "in", "the", "middle", "and", "not", "at", "the", "top", "NUMBER", "Expected", "behavior", "The", "view", "will", "scroll", "the", "text", "marking", "continues", "and", "the", "text", "that", "has", "be", "scrolled", "off", "screen", "will", "be", "keep", "marked", "NUMBER", "Screenshots", "TAG", "Additional", "context", "QT", "build", "from", "source", "tag", "NUMBER", "NUMBER", "PySide", "build", "from", "source", "master", "NUMBER", "Cutter", "build", "from", "source", "master", "aa", "NUMBER", "ecee", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "Shortcuts", "implement", "x", "Jump", "to", "the", "next", "open", "tab", "Jump", "to", "the", "previous", "open", "tab", "x", "Close", "the", "current", "tab", "Duplicate", "current", "tab", "Reopen", "previously", "close", "tabs", "in", "the", "order", "they", "were", "close", "Mouse", "middle", "click", "on", "a", "tab", "will", "close", "it", "TAG", "Test", "plan", "required", "TAG", "I", "want", "to", "apply", "a", "set", "of", "keyboard", "shortcuts", "to", "manage", "tabs", "in", "Cutter", "Ctrl", "Tab", "Jump", "to", "the", "next", "open", "tab", "Ctrl", "Shift", "Tab", "Jump", "to", "the", "previous", "open", "tab", "Ctrl", "W", "Close", "the", "current", "tab", "Ctrl", "T", "Duplicate", "current", "tab", "Ctrl", "Shift", "T", "Reopen", "previously", "close", "tabs", "in", "the", "order", "they", "were", "close", "Mouse", "shortcut", "Mouse", "middle", "click", "on", "a", "tab", "will", "close", "it", "TAG", "Closing", "issue", "close", "NUMBER", "TAG", "The", "code", "that", "be", "there", "doesn", "t", "look", "bad", "NUMBER", "But", "from", "the", "usability", "perspective", "there", "be", "a", "lot", "of", "work", "remaining", "NUMBER", "The", "most", "obvious", "problem", "I", "notice", "When", "reaching", "end", "of", "list", "nothing", "happens", "I", "would", "expect", "looping", "around", "Currently", "only", "works", "for", "the", "tab", "group", "containing", "dashboard", "NUMBER", "It", "doesn", "t", "work", "if", "user", "close", "dashboard", "or", "have", "multiple", "group", "of", "tabs", "NUMBER", "It", "s", "not", "immediately", "obvious", "for", "me", "what", "the", "best", "behavior", "would", "be", "NUMBER", "It", "would", "be", "good", "to", "investigate", "what", "other", "tool", "do", "NUMBER", "IDEs", "might", "not", "be", "the", "best", "example", "as", "they", "usually", "have", "clear", "separation", "between", "document", "tabs", "and", "side", "widget", "tabs", "NUMBER", "In", "Cutter", "all", "docked", "widgets", "be", "more", "or", "less", "equal", "NUMBER", "For", "previous", "tab", "shortcut", "I", "will", "give", "you", "a", "few", "hints", "NUMBER", "Does", "use", "secondary", "key", "sequences", "work", "back", "ctrl", "ctrl", "shift", "f", "NUMBER", "depending", "on", "your", "OS", "Does", "specify", "the", "Ctrl", "Shift", "Tab", "shortcut", "explicityl", "work", "What", "key", "sequences", "do", "QKeySequence", "keyBindings", "PreviousChild", "return", "karliss", "This", "can", "be", "update", "easily", "I", "wasn", "t", "sure", "if", "it", "should", "loop", "so", "I", "didn", "t", "implement", "that", "until", "I", "knew", "From", "the", "original", "issue", "I", "assumed", "that", "the", "tab", "management", "was", "only", "for", "the", "docked", "widgets", "Dashboard", "NUMBER", "and", "I", "wasn", "t", "too", "sure", "how", "to", "get", "a", "list", "of", "those", "widgets", "NUMBER", "MainWindow", "NUMBER", "h", "do", "have", "QList", "TAG", "dockWidgets", "perhaps", "that", "could", "be", "use", "instead", "if", "we", "want", "to", "manage", "all", "widgets", "I", "tried", "explicitly", "specifiying", "Ctrl", "Shift", "Tab", "and", "it", "still", "didn", "t", "work", "I", "be", "use", "Debian", "i", "NUMBER", "wm", "so", "I", "m", "unsure", "what", "my", "secondary", "shortcuts", "be", "karliss", "On", "my", "machine", "that", "test", "code", "returned", "Ctrl", "Shift", "Backtab", "Back", "my", "host", "machine", "be", "Debian", "i", "NUMBER", "wm", "but", "I", "be", "build", "run", "cutter", "in", "Docker", "NUMBER", "I", "have", "managed", "to", "get", "the", "previous", "tab", "shortcut", "work", "by", "specify", "QKeySequence", "tr", "Ctrl", "Shift", "Tab", "or", "QKeySequence", "tr", "Ctrl", "Backtab", "when", "it", "didn", "t", "work", "before", "I", "was", "use", "QKeySequence", "Qt", "CTRL", "Qt", "SHIFT", "Qt", "Key_Tab", "Ah", "right", "I", "see", "I", "was", "just", "confused", "by", "what", "the", "docs", "were", "saying", "it", "seems", "NUMBER", "Have", "we", "get", "a", "plan", "for", "what", "the", "shortcuts", "need", "to", "be", "set", "as", "or", "should", "I", "just", "leave", "them", "as", "NextChild", "PreviousChild", "for", "now", "Please", "try", "the", "test", "code", "above", "and", "tell", "what", "it", "prints", "on", "your", "systems", "also", "try", "change", "the", "shortcuts", "in", "system", "settings", "NUMBER", "Without", "change", "the", "settings", "Ctrl", "PgUp", "Ctrl", "After", "change", "the", "settings", "Ctrl", "Shift", "Tab", "It", "seems", "like", "an", "expected", "behavior", "that", "the", "alternative", "shortcut", "be", "not", "shown", "and", "indeed", "it", "immediately", "disappears", "when", "replacing", "the", "default", "shortcut", "macOS", "Ctrl", "Ctrl", "Shift", "Backtab", "Back", "safari", "chrome", "firefox", "iTerm", "Sublime", "Text", "Jetbrains", "IDEs", "discord", "and", "maybe", "others", "use", "both", "options", "Ctrl", "Shift", "Backtab", "Command", "Hey", "NUMBER", "x", "NUMBER", "D", "anything", "else", "or", "be", "it", "ready", "for", "another", "round", "of", "review", "Did", "you", "address", "the", "points", "mentione", "above", "Hi", "I", "have", "implement", "looping", "around", "the", "beginning", "end", "of", "the", "list", "and", "the", "shortcut", "alternatives", "for", "PreviousChild", "NUMBER", "I", "have", "not", "looked", "at", "this", "since", "Sunday", "but", "I", "be", "really", "unsure", "about", "how", "to", "capture", "all", "docked", "widgets", "NUMBER", "I", "was", "trying", "to", "use", "findChildren", "TAG", "to", "get", "a", "list", "of", "all", "QDockWidgets", "but", "I", "couldn", "t", "order", "them", "in", "any", "meaningful", "way", "I", "was", "trying", "to", "use", "the", "x", "y", "position", "of", "the", "widget", "NUMBER", "Using", "the", "returned", "list", "without", "ordering", "them", "also", "didn", "t", "seem", "to", "work", "so", "that", "might", "not", "be", "the", "way", "to", "go", "NUMBER", "I", "have", "not", "yet", "looked", "at", "how", "to", "implement", "the", "other", "three", "shortcuts", "but", "any", "suggestions", "would", "be", "appreciated", "NUMBER", "Hi", "ITAYC", "NUMBER", "HEN", "unfortunately", "I", "have", "no", "interest", "in", "continuing", "to", "work", "on", "this", "issue", "NUMBER", "As", "such", "I", "suggest", "that", "this", "PR", "be", "abandoned", "and", "the", "issue", "be", "handed", "off", "to", "someone", "else", "NUMBER", "Thank", "you", "for", "all", "your", "help", "TAG", "Console", "on", "Cutter", "in", "order", "to", "use", "the", "radare", "commands", "and", "mistakenly", "enter", "the", "v", "command", "you", "won", "t", "be", "able", "to", "use", "the", "console", "anymore", "unless", "you", "close", "Cutter", "and", "open", "it", "again", "NUMBER", "To", "Reproduce", "NUMBER", "Load", "any", "binary", "file", "n", "Cutter", "NUMBER", "Click", "the", "Windows", "Console", "menu", "to", "activate", "the", "console", "NUMBER", "Select", "a", "function", "in", "your", "binary", "in", "the", "Functions", "window", "NUMBER", "Type", "the", "v", "command", "and", "press", "Enter", "NUMBER", "Notice", "that", "you", "cannot", "type", "commands", "on", "the", "console", "anymore", "NUMBER", "Expected", "behavior", "Cutter", "should", "either", "present", "the", "user", "with", "an", "error", "message", "saying", "that", "the", "v", "command", "be", "not", "support", "in", "the", "console", "or", "should", "properly", "emulate", "the", "visual", "mode", "in", "it", "possibly", "makes", "no", "sense", "to", "do", "that", "emulation", "considering", "that", "Cutter", "be", "a", "visual", "tool", "already", "NUMBER", "Screenshots", "Not", "applicable", "Additional", "context", "N", "A", "Cutter", "should", "hardcode", "scr", "NUMBER", "interactive", "false", "to", "avoid", "this", "problem", "On", "NUMBER", "Apr", "NUMBER", "at", "NUMBER", "NUMBER", "Henrique", "M", "NUMBER", "D", "NUMBER", "TAG", "write", "Environment", "information", "Operating", "System", "Ubuntu", "NUMBER", "x", "NUMBER", "_", "NUMBER", "Cutter", "version", "NUMBER", "Obtained", "from", "Built", "from", "source", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "NUMBER", "appImage", "Describe", "the", "bug", "If", "you", "activate", "the", "Console", "window", "Menu", "Windows", "Console", "on", "Cutter", "in", "order", "to", "use", "the", "radare", "commands", "and", "mistakenly", "enter", "the", "v", "command", "you", "won", "t", "be", "able", "to", "use", "the", "console", "anymore", "unless", "you", "close", "Cutter", "and", "open", "it", "again", "NUMBER", "To", "Reproduce", "Load", "any", "binary", "file", "n", "Cutter", "Click", "the", "Windows", "Console", "menu", "to", "activate", "the", "console", "Select", "a", "function", "in", "your", "binary", "in", "the", "Functions", "window", "Type", "the", "v", "command", "and", "press", "Enter", "Notice", "that", "you", "cannot", "type", "commands", "on", "the", "console", "anymore", "NUMBER", "Expected", "behavior", "Cutter", "should", "either", "present", "the", "user", "with", "an", "error", "message", "saying", "that", "the", "v", "command", "be", "not", "support", "in", "the", "console", "or", "should", "properly", "emulate", "the", "visual", "mode", "in", "it", "possibly", "makes", "no", "sense", "to", "do", "that", "emulation", "considering", "that", "Cutter", "be", "a", "visual", "tool", "already", "NUMBER", "Screenshots", "Not", "applicable", "Additional", "context", "N", "A", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "unsubscribe", "NUMBER", "Oh", "its", "panels", "issue", "then", "NUMBER", "Visual", "mode", "should", "not", "open", "with", "this", "set", "On", "NUMBER", "Apr", "NUMBER", "at", "NUMBER", "NUMBER", "karliss", "TAG", "write", "radare", "I", "just", "tred", "setting", "e", "scr", "NUMBER", "interactive", "false", "in", "r", "NUMBER", "and", "it", "didn", "t", "prevent", "visual", "panels", "from", "open", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "unsubscribe", "NUMBER", "This", "be", "now", "fix", "in", "radare", "NUMBER", "master", "thanks", "to", "Karliss", "LINK", "Environment", "information", "Operating", "System", "Cutter", "version", "Obtained", "from", "x", "Built", "from", "source", "commit", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "eccae", "NUMBER", "ee", "NUMBER", "dfa", "NUMBER", "cab", "NUMBER", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "Describe", "the", "bug", "A", "regression", "in", "the", "debug", "cause", "the", "disassembly", "not", "to", "refresh", "unltil", "a", "refresh", "be", "triggered", "e", "NUMBER", "g", "clicking", "on", "the", "widget", "seeking", "NUMBER", "The", "gif", "shows", "the", "faulty", "behavior", "cutter_bug_seek", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "f", "NUMBER", "db", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "NUMBER", "ff", "NUMBER", "c", "NUMBER", "f", "NUMBER", "gif", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "a", "binary", "in", "Cutter", "NUMBER", "start", "debug", "emulation", "mode", "NUMBER", "Step", "use", "keyboard", "or", "buttons", "NUMBER", "See", "that", "the", "IP", "highlight", "isn", "t", "change", "NUMBER", "Click", "on", "the", "disas", "and", "see", "that", "refresh", "was", "triggered", "Expected", "behavior", "IP", "highlight", "should", "be", "shown", "for", "every", "step", "weird", "tried", "to", "pull", "from", "master", "again", "and", "everything", "be", "fix", "NUMBER", "Alright", "then", "Closing", "Can", "be", "reproduced", "in", "emulation", "mode", "use", "appimage", "build", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "I", "have", "a", "created", "new", "file", "named", "InitializationFileEditor", "in", "src", "dialogs", "preferences", "NUMBER", "This", "handles", "most", "of", "the", "logic", "regard", "cutterRC", "editor", "NUMBER", "The", "default", "location", "be", "loaded", "use", "a", "new", "function", "in", "Cutter", "NUMBER", "cpp", "named", "getCutterRCDefaultDirectory", "NUMBER", "Due", "to", "the", "way", "NUMBER", "cutterrc", "file", "be", "loaded", "this", "file", "will", "be", "loaded", "twice", "execute", "all", "commands", "once", "and", "then", "again", "while", "starting", "Cutter", "NUMBER", "The", "following", "images", "shows", "the", "editor", "in", "work", "NUMBER", "Initially", "I", "had", "no", "NUMBER", "cutterrc", "file", "in", "any", "of", "the", "directories", "from", "where", "NUMBER", "cutterrc", "be", "loaded", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "df", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "png", "This", "be", "how", "the", "Initialization", "File", "Editor", "looks", "when", "no", "file", "be", "loaded", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "aef", "NUMBER", "e", "NUMBER", "NUMBER", "df", "NUMBER", "ea", "NUMBER", "bd", "NUMBER", "NUMBER", "da", "NUMBER", "png", "Now", "solarized", "theme", "has", "be", "add", "to", "the", "default", "and", "the", "highest", "priority", "NUMBER", "cutterrc", "file", "last", "loaded", "one", "use", "the", "editor", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cb", "NUMBER", "NUMBER", "df", "NUMBER", "ea", "NUMBER", "cfecb", "NUMBER", "deed", "NUMBER", "png", "After", "closing", "Cutter", "in", "the", "next", "restart", "solarized", "theme", "be", "loaded", "as", "expected", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "df", "NUMBER", "ea", "NUMBER", "a", "e", "NUMBER", "b", "NUMBER", "png", "TAG", "Test", "plan", "required", "What", "steps", "should", "the", "reviewer", "take", "to", "test", "your", "pull", "request", "TAG", "Test", "if", "the", "code", "creates", "a", "new", "NUMBER", "cutterrc", "file", "in", "case", "the", "file", "be", "not", "present", "in", "the", "default", "location", "NUMBER", "Test", "if", "the", "code", "creates", "directory", "if", "the", "directory", "of", "the", "default", "location", "doesn", "t", "exist", "NUMBER", "Test", "if", "the", "update", "to", "the", "cutterRC", "from", "Cutter", "remains", "even", "after", "closing", "the", "preferences", "window", "and", "or", "after", "closing", "Cutter", "NUMBER", "TAG", "Closing", "issue", "TAG", "Part", "B", "of", "NUMBER", "will", "be", "completed", "by", "this", "NUMBER", "close", "NUMBER", "I", "see", "that", "this", "PR", "pass", "every", "other", "check", "but", "Travis", "CI", "what", "could", "be", "the", "reason", "for", "this", "The", "details", "show", "that", "it", "s", "fail", "in", "macOS", "NUMBER", "karliss", "Travis", "CI", "had", "fail", "on", "macOS", "but", "now", "it", "shows", "pass", "NUMBER", "I", "m", "a", "bit", "surprised", "what", "was", "the", "reason", "ITAYC", "NUMBER", "HEN", "Thanks", "for", "point", "that", "I", "uploaded", "radare", "NUMBER", "submodule", "NUMBER", "That", "was", "an", "accident", "NUMBER", "I", "will", "try", "applying", "syntax", "highlight", "NUMBER", "About", "user", "documentation", "I", "will", "do", "that", "right", "after", "this", "be", "merge", "NUMBER", "About", "user", "documentation", "I", "will", "do", "that", "right", "after", "this", "be", "merge", "Please", "do", "this", "in", "the", "same", "PR", "In", "this", "NUMBER", "I", "d", "like", "documentation", "to", "be", "add", "with", "the", "feature", "introduce", "them", "NUMBER", "There", "s", "a", "special", "check", "box", "for", "it", "I", "ve", "update", "the", "documentation", "with", "the", "relevant", "information", "if", "needed", "I", "have", "final", "assignments", "and", "quizzes", "lined", "up", "this", "week", "NUMBER", "So", "most", "probably", "I", "won", "t", "be", "able", "to", "work", "on", "the", "PR", "in", "the", "next", "NUMBER", "days", "at", "least", "NUMBER", "I", "m", "informing", "this", "to", "let", "everyone", "following", "know", "that", "I", "will", "be", "work", "on", "this", "once", "the", "hectic", "academic", "relate", "work", "gets", "over", "NUMBER", "Most", "likely", "I", "will", "be", "able", "to", "start", "work", "on", "this", "by", "NUMBER", "April", "NUMBER", "For", "syntax", "highlight", "it", "can", "use", "tree", "sitter", "based", "parser", "by", "ret", "NUMBER", "libc", "in", "the", "newshell", "project", "of", "the", "radare", "NUMBER", "LINK", "LINK", "shell", "parser", "LINK", "sitter", "NUMBER", "github", "NUMBER", "io", "tree", "sitter", "syntax", "highlight", "ITAYC", "NUMBER", "HEN", "because", "it", "knows", "the", "syntax", "of", "all", "r", "NUMBER", "shell", "commands", "and", "always", "in", "sync", "newshell", "parser", "and", "QtSyntaxHighlighter", "be", "not", "an", "exclusive", "choices", "NUMBER", "Newshell", "parser", "can", "be", "wrapped", "in", "QSyntaxHighlighter", "interface", "NUMBER", "QSyntaxHilighter", "be", "just", "an", "interface", "receiving", "as", "input", "text", "and", "responding", "with", "information", "about", "which", "parts", "need", "to", "be", "in", "what", "color", "NUMBER", "It", "doesn", "t", "even", "have", "any", "standard", "mechanism", "for", "how", "it", "do", "the", "parsing", "NUMBER", "So", "combining", "that", "with", "newshell", "tree", "sitter", "parser", "which", "can", "decide", "what", "part", "of", "text", "be", "what", "but", "can", "t", "communicate", "it", "with", "Qt", "text", "widget", "seems", "like", "the", "right", "thing", "to", "do", "NUMBER", "But", "implement", "that", "be", "out", "of", "scope", "for", "this", "issue", "and", "later", "swapping", "two", "highlighters", "use", "the", "same", "interface", "will", "not", "be", "a", "problem", "NUMBER", "By", "the", "way", "it", "seems", "that", "we", "currently", "have", "NUMBER", "including", "KysntaxHilighter", "hilighters", "for", "different", "purposes", "NUMBER", "of", "them", "unuse", "NUMBER", "What", "do", "you", "think", "of", "add", "a", "link", "to", "the", "config", "file", "or", "it", "s", "folder", "similar", "to", "how", "its", "do", "with", "plugin", "directory", "It", "could", "also", "function", "as", "way", "of", "filling", "the", "space", "next", "to", "save", "button", "NUMBER", "karliss", "It", "looks", "like", "this", "now", "do", "it", "seem", "better", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "b", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "ea", "NUMBER", "ec", "NUMBER", "d", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ad", "NUMBER", "png", "This", "be", "how", "it", "looks", "now", "NUMBER", "I", "haven", "t", "tried", "the", "syntax", "highlight", "yet", "NUMBER", "Instead", "of", "the", "directory", "the", "path", "to", "the", "file", "be", "now", "shown", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fbb", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eaff", "NUMBER", "png", "Found", "one", "bug", "I", "made", "in", "Cutter", "NUMBER", "cpp", "NUMBER", "Will", "fix", "it", "now", "NUMBER", "Maybe", "there", "needs", "to", "be", "a", "button", "for", "run", "it", "manually", "and", "try", "it", "without", "restarting", "Cutter", "NUMBER", "karliss", "This", "can", "be", "do", "if", "it", "s", "necessary", "NUMBER", "But", "be", "it", "not", "_initialization_", "script", "But", "be", "it", "not", "_initialization_", "script", "Yes", "that", "s", "why", "it", "shouldn", "t", "be", "run", "automatically", "NUMBER", "I", "expect", "the", "most", "common", "use", "case", "to", "be", "for", "more", "obscure", "settings", "which", "aren", "t", "expose", "in", "Cutter", "settings", "NUMBER", "Having", "an", "easy", "way", "of", "run", "would", "be", "safe", "most", "of", "the", "time", "would", "prevent", "the", "need", "to", "set", "the", "setting", "twice", "once", "in", "the", "init", "script", "and", "then", "in", "console", "NUMBER", "Having", "an", "easy", "way", "of", "run", "would", "be", "safe", "most", "of", "the", "time", "would", "prevent", "the", "need", "to", "set", "the", "setting", "twice", "once", "in", "the", "init", "script", "and", "then", "in", "console", "NUMBER", "If", "the", "idea", "be", "to", "try", "a", "new", "setting", "and", "see", "what", "happens", "then", "such", "a", "feature", "be", "not", "useful", "and", "console", "would", "be", "the", "best", "fit", "for", "that", "NUMBER", "This", "be", "useful", "if", "someone", "want", "to", "make", "a", "setting", "permanent", "potentially", "and", "see", "it", "in", "action", "without", "restarting", "Cutter", "NUMBER", "Having", "an", "Execute", "or", "Try", "button", "be", "useful", "in", "this", "case", "NUMBER", "I", "agree", "with", "you", "on", "this", "and", "I", "will", "see", "how", "it", "can", "be", "do", "NUMBER", "Having", "an", "Execute", "or", "Try", "button", "be", "useful", "in", "this", "case", "NUMBER", "I", "agree", "with", "you", "on", "this", "and", "I", "will", "see", "how", "it", "can", "be", "do", "NUMBER", "karliss", "I", "made", "an", "Execute", "button", "for", "doing", "this", "NUMBER", "I", "tried", "use", "the", "eco", "command", "to", "change", "color", "theme", "NUMBER", "But", "it", "s", "not", "work", "NUMBER", "As", "ITAYC", "NUMBER", "HEN", "mention", "to", "me", "in", "the", "telegram", "chat", "I", "think", "it", "might", "be", "having", "this", "conflict", "because", "color", "theme", "be", "already", "available", "in", "preferences", "NUMBER", "So", "can", "you", "elaborate", "on", "the", "scope", "of", "doing", "this", "Can", "you", "tell", "me", "some", "obscure", "settings", "that", "can", "be", "set", "with", "command", "line", "and", "be", "not", "available", "in", "GUI", "so", "that", "I", "can", "test", "them", "NUMBER", "NirmalManoj", "You", "can", "list", "all", "the", "r", "NUMBER", "settings", "and", "their", "description", "use", "e", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "a", "NUMBER", "da", "NUMBER", "b", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "afd", "NUMBER", "cf", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "png", "On", "clicking", "Execute", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "d", "bc", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "af", "NUMBER", "png", "I", "will", "be", "use", "this", "as", "example", "then", "NUMBER", "How", "about", "asm", "NUMBER", "cycles", "It", "be", "more", "visible", "and", "doesn", "t", "affect", "any", "of", "analysis", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "aba", "NUMBER", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "d", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "NUMBER", "f", "NUMBER", "f", "NUMBER", "bcc", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "png", "This", "works", "ITAYC", "NUMBER", "HEN", "Made", "all", "suggested", "change", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "When", "searching", "in", "huge", "file", "there", "s", "be", "no", "clear", "indication", "that", "Cutter", "be", "searching", "except", "freeze", "NUMBER", "In", "addition", "when", "search", "finishes", "very", "fast", "say", "in", "tiny", "binary", "and", "no", "results", "find", "then", "there", "be", "no", "indication", "for", "this", "and", "it", "feels", "like", "clicking", "the", "button", "do", "nothing", "search_no_response", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cbb", "NUMBER", "b", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "d", "NUMBER", "gif", "Add", "indication", "to", "the", "Search", "widget", "that", "a", "search", "be", "currently", "in", "progress", "Add", "an", "indication", "that", "no", "results", "were", "find", "ITAYC", "NUMBER", "HEN", "I", "tried", "to", "do", "it", "this", "way", "Append", "a", "Data", "item", "in", "SearchDescription", "saying", "Searching", "or", "No", "result", "find", "NUMBER", "While", "the", "later", "worked", "fine", "the", "first", "one", "didn", "t", "as", "I", "add", "it", "before", "beginResetModel", "NUMBER", "Any", "suggestions", "How", "about", "disabling", "the", "Search", "button", "while", "it", "s", "in", "progress", "I", "don", "t", "this", "issue", "can", "be", "properly", "implement", "before", "the", "big", "async", "refactoring", "NUMBER", "ITAYC", "NUMBER", "HEN", "might", "have", "rushed", "it", "with", "marking", "this", "as", "good", "first", "issue", "NUMBER", "Hi", "I", "would", "like", "to", "work", "on", "this", "NUMBER", "Open", "hexwidget", "during", "debuging", "try", "selecting", "a", "range", "of", "bytes", "works", "well", "There", "be", "room", "for", "further", "improvement", "not", "refreshing", "comments", "during", "cursor", "blinking", "and", "not", "having", "cmdRawAt", "cause", "NUMBER", "NUMBER", "byte", "reads", "NUMBER", "With", "these", "change", "the", "hexwidget", "be", "somewhat", "usable", "during", "debugging", "compared", "to", "NUMBER", "should", "we", "have", "issue", "for", "these", "For", "some", "reason", "rip", "flag", "shown", "in", "the", "hexdump", "and", "printed", "in", "console", "be", "not", "synced", "with", "the", "value", "of", "rip", "register", "NUMBER", "This", "do", "not", "solve", "even", "by", "refreshing", "NUMBER", "The", "seek", "shown", "in", "the", "hexdump", "works", "well", "NUMBER", "This", "do", "not", "happen", "in", "r", "NUMBER", "open", "disasembly", "widget", "next", "to", "hexdump", "test", "that", "change", "bytes", "highlight", "still", "works", "by", "noping", "an", "instruction", "Didn", "t", "run", "the", "sanitzier", "but", "seems", "like", "this", "works", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Yes", "it", "be", "not", "possible", "to", "set", "environment", "variables", "for", "a", "binary", "to", "debug", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Add", "an", "option", "in", "the", "debug", "section", "of", "preferences", "to", "set", "env", "variables", "something", "like", "this", "taken", "from", "codeblocks", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dd", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "NUMBER", "dd", "NUMBER", "aebb", "NUMBER", "png", "TAG", "This", "should", "probably", "do", "use", "rarun", "NUMBER", "e", "dbg", "NUMBER", "profile", "file", "NUMBER", "In", "that", "case", "it", "should", "be", "an", "interface", "for", "managing", "and", "editing", "all", "except", "ones", "that", "conflict", "with", "rest", "of", "UI", "dbg", "NUMBER", "profile", "properties", "not", "just", "environment", "variables", "NUMBER", "It", "should", "be", "also", "possible", "to", "select", "exist", "handwritten", "rarun", "NUMBER", "file", "NUMBER", "I", "would", "be", "happy", "with", "a", "small", "embedded", "editor", "for", "that", "config", "file", "I", "only", "need", "to", "switch", "a", "specific", "envvar", "for", "test", "a", "binary", "NUMBER", "Thanks", "for", "your", "soon", "response", "NUMBER", "You", "can", "unset", "env", "vars", "too", "with", "rarun", "NUMBER", "On", "NUMBER", "Apr", "NUMBER", "at", "NUMBER", "NUMBER", "karliss", "TAG", "write", "In", "case", "you", "need", "a", "solution", "that", "works", "right", "now", "looks", "like", "setting", "e", "dbg", "NUMBER", "profile", "path", "to", "rarun_profile", "NUMBER", "rr", "NUMBER", "in", "the", "console", "widget", "works", "NUMBER", "Didn", "t", "test", "with", "all", "the", "features", "but", "at", "least", "setting", "environment", "variable", "works", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "unsubscribe", "NUMBER", "My", "request", "has", "NUMBER", "parts", "NUMBER", "The", "ability", "to", "edit", "several", "instructions", "into", "nop", "instruction", "at", "once", "Sometimes", "I", "want", "to", "select", "several", "instructions", "and", "change", "them", "all", "into", "nops", "NUMBER", "Cutter", "allows", "me", "to", "select", "several", "instructions", "but", "when", "I", "right", "click", "and", "select", "Edit", "Nop", "Instruction", "then", "only", "one", "instruction", "gets", "edit", "into", "nop", "NUMBER", "I", "would", "like", "that", "all", "of", "the", "selected", "instructions", "will", "be", "edit", "into", "nop", "NUMBER", "NUMBER", "The", "ability", "to", "edit", "several", "instructions", "into", "any", "instruction", "NUMBER", "Sometimes", "I", "want", "to", "edit", "an", "entire", "block", "of", "instructions", "and", "overwrite", "them", "with", "new", "instructions", "of", "new", "functionality", "NUMBER", "Currently", "the", "only", "way", "to", "do", "it", "be", "go", "one", "instruction", "at", "a", "time", "Right", "click", "on", "the", "current", "instruction", "that", "you", "want", "to", "edit", "go", "to", "Edit", "Instruction", "write", "down", "your", "new", "instruction", "click", "OK", "NUMBER", "And", "then", "go", "again", "right", "click", "on", "the", "next", "instruction", "go", "to", "Edit", "Instruction", "NUMBER", "There", "be", "a", "constant", "switch", "from", "keyboard", "to", "mouse", "NUMBER", "I", "would", "like", "to", "be", "able", "to", "edit", "several", "instructions", "without", "having", "to", "right", "click", "Edit", "Instruction", "after", "each", "time", "NUMBER", "A", "solution", "could", "be", "similar", "to", "the", "way", "x", "NUMBER", "dbg", "works", "Inside", "the", "Edit", "Instruction", "window", "after", "right", "click", "Edit", "Instruction", "when", "I", "finish", "typing", "my", "current", "instruction", "pressing", "Enter", "clicking", "OK", "will", "perform", "the", "edit", "and", "the", "Edit", "Instruction", "window", "will", "not", "close", "NUMBER", "Instead", "it", "will", "switch", "to", "editing", "the", "next", "instruction", "NUMBER", "This", "way", "it", "be", "possible", "to", "edit", "several", "instructions", "without", "having", "to", "open", "the", "right", "click", "menu", "every", "single", "time", "NUMBER", "Win", "NUMBER", "x", "NUMBER", "root", "LAPTOP", "EJ", "NUMBER", "BH", "NUMBER", "DJ", "docker", "dev", "private", "re", "cutter", "docker", "v", "NUMBER", "master", "make", "LOCAL_DEV", "y", "build", "sudo", "docker", "build", "rm", "t", "radareorg", "cutter", "f", "NUMBER", "Dockerfile", "dev", "NUMBER", "Sending", "build", "context", "to", "Docker", "daemon", "NUMBER", "MB", "Step", "NUMBER", "NUMBER", "FROM", "alpine", "latest", "AS", "builder", "a", "NUMBER", "dde", "NUMBER", "cd", "NUMBER", "Step", "NUMBER", "NUMBER", "LABEL", "maintainer", "Philipp", "Schmied", "TAG", "Using", "cache", "ff", "NUMBER", "e", "NUMBER", "ffc", "Step", "NUMBER", "NUMBER", "ENV", "DEBIAN_FRONTEND", "noninteractive", "Using", "cache", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "Step", "NUMBER", "NUMBER", "RUN", "apk", "add", "no", "cache", "bash", "cmake", "curl", "g", "gcc", "git", "linux", "headers", "make", "pkgconfig", "python", "NUMBER", "dev", "qt", "NUMBER", "qtbase", "qt", "NUMBER", "qtsvg", "dev", "qt", "NUMBER", "qttools", "dev", "unzip", "wget", "Using", "cache", "NUMBER", "f", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "Step", "NUMBER", "NUMBER", "COPY", "docker", "build_radare", "NUMBER", "sh", "opt", "cutter", "Using", "cache", "NUMBER", "ac", "NUMBER", "Step", "NUMBER", "NUMBER", "COPY", "radare", "NUMBER", "opt", "cutter", "radare", "NUMBER", "Using", "cache", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "Step", "NUMBER", "NUMBER", "WORKDIR", "opt", "cutter", "Using", "cache", "bc", "NUMBER", "f", "NUMBER", "f", "NUMBER", "eea", "NUMBER", "Step", "NUMBER", "NUMBER", "RUN", "bash", "build_radare", "NUMBER", "sh", "Using", "cache", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "ac", "NUMBER", "Step", "NUMBER", "NUMBER", "COPY", "docker", "build_cutter", "NUMBER", "sh", "opt", "cutter", "Using", "cache", "NUMBER", "cf", "NUMBER", "a", "NUMBER", "eefd", "Step", "NUMBER", "NUMBER", "COPY", "scripts", "opt", "cutter", "scripts", "Using", "cache", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "Step", "NUMBER", "NUMBER", "COPY", "src", "opt", "cutter", "src", "Using", "cache", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "d", "Step", "NUMBER", "NUMBER", "RUN", "bash", "build_cutter", "NUMBER", "sh", "bash", "c", "if", "x", "opt", "cutter", "build", "Cutter", "then", "exit", "NUMBER", "fi", "Using", "cache", "e", "NUMBER", "caad", "NUMBER", "cffac", "Step", "NUMBER", "NUMBER", "FROM", "alpine", "latest", "AS", "runner", "a", "NUMBER", "dde", "NUMBER", "cd", "NUMBER", "Step", "NUMBER", "NUMBER", "ENTRYPOINT", "usr", "local", "bin", "entrypoint", "NUMBER", "sh", "Using", "cache", "cd", "NUMBER", "baec", "NUMBER", "c", "NUMBER", "e", "Step", "NUMBER", "NUMBER", "RUN", "apk", "add", "no", "cache", "bash", "libuuid", "make", "python", "NUMBER", "qt", "NUMBER", "qtbase", "shadow", "su", "exec", "Using", "cache", "fa", "NUMBER", "ceb", "NUMBER", "c", "NUMBER", "Step", "NUMBER", "NUMBER", "RUN", "useradd", "r", "NUMBER", "Using", "cache", "NUMBER", "e", "NUMBER", "Step", "NUMBER", "NUMBER", "RUN", "mkdir", "var", "sharedFolder", "mkdir", "p", "home", "r", "NUMBER", "NUMBER", "config", "radare", "NUMBER", "touch", "home", "r", "NUMBER", "NUMBER", "radare", "NUMBER", "rc", "chown", "R", "r", "NUMBER", "r", "NUMBER", "var", "sharedFolder", "chown", "R", "r", "NUMBER", "r", "NUMBER", "home", "r", "NUMBER", "Using", "cache", "NUMBER", "e", "NUMBER", "d", "NUMBER", "dc", "NUMBER", "Step", "NUMBER", "NUMBER", "COPY", "NUMBER", "docker", "entrypoint", "NUMBER", "sh", "usr", "local", "bin", "entrypoint", "NUMBER", "sh", "Using", "cache", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "ad", "Step", "NUMBER", "NUMBER", "COPY", "from", "builder", "opt", "cutter", "opt", "cutter", "Using", "cache", "NUMBER", "b", "NUMBER", "dd", "NUMBER", "f", "NUMBER", "c", "NUMBER", "Step", "NUMBER", "NUMBER", "COPY", "from", "builder", "usr", "lib", "usr", "lib", "Using", "cache", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ad", "NUMBER", "ab", "NUMBER", "Step", "NUMBER", "NUMBER", "COPY", "from", "builder", "usr", "share", "radare", "NUMBER", "usr", "share", "radare", "NUMBER", "Using", "cache", "NUMBER", "f", "NUMBER", "c", "NUMBER", "Step", "NUMBER", "NUMBER", "WORKDIR", "opt", "cutter", "radare", "NUMBER", "binr", "Using", "cache", "NUMBER", "a", "Step", "NUMBER", "NUMBER", "RUN", "make", "install", "make", "symstall", "install", "symlink", "Using", "cache", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "Successfully", "build", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "Successfully", "tag", "radareorg", "cutter", "latest", "root", "LAPTOP", "EJ", "NUMBER", "BH", "NUMBER", "DJ", "docker", "dev", "private", "re", "cutter", "docker", "v", "NUMBER", "master", "docker", "run", "rm", "it", "radareorg", "cutter", "Cutter", "Starting", "with", "UID", "GID", "usermod", "invalid", "user", "ID", "r", "NUMBER", "Usage", "usermod", "options", "LOGIN", "Options", "c", "comment", "COMMENT", "new", "value", "of", "the", "GECOS", "field", "d", "home", "HOME_DIR", "new", "home", "directory", "for", "the", "user", "account", "e", "expiredate", "EXPIRE_DATE", "set", "account", "expiration", "date", "to", "EXPIRE_DATE", "f", "inactive", "INACTIVE", "set", "password", "inactive", "after", "expiration", "to", "INACTIVE", "g", "gid", "GROUP", "force", "use", "GROUP", "as", "new", "primary", "group", "G", "group", "GROUPS", "new", "list", "of", "supplementary", "GROUPS", "a", "append", "append", "the", "user", "to", "the", "supplemental", "GROUPS", "mention", "by", "the", "G", "option", "without", "remove", "the", "user", "from", "other", "group", "h", "help", "display", "this", "help", "message", "and", "exit", "l", "login", "NEW_LOGIN", "new", "value", "of", "the", "login", "name", "L", "lock", "lock", "the", "user", "account", "m", "move", "home", "move", "contents", "of", "the", "home", "directory", "to", "the", "new", "location", "use", "only", "with", "d", "o", "non", "unique", "allow", "use", "duplicate", "non", "unique", "UID", "p", "password", "PASSWORD", "use", "encrypted", "password", "for", "the", "new", "password", "R", "root", "CHROOT_DIR", "directory", "to", "chroot", "into", "P", "prefix", "PREFIX_DIR", "prefix", "directory", "where", "be", "located", "the", "etc", "file", "s", "shell", "SHELL", "new", "login", "shell", "for", "the", "user", "account", "u", "uid", "UID", "new", "UID", "for", "the", "user", "account", "U", "unlock", "unlock", "the", "user", "account", "v", "add", "subuids", "FIRST", "LAST", "add", "range", "of", "subordinate", "uids", "V", "del", "subuids", "FIRST", "LAST", "remove", "range", "of", "subordinate", "uids", "w", "add", "subgids", "FIRST", "LAST", "add", "range", "of", "subordinate", "gids", "W", "del", "subgids", "FIRST", "LAST", "remove", "range", "of", "subordinate", "gids", "qt", "NUMBER", "qpa", "NUMBER", "xcb", "could", "not", "connect", "to", "display", "qt", "NUMBER", "qpa", "NUMBER", "plugin", "Could", "not", "load", "the", "Qt", "platform", "plugin", "xcb", "in", "even", "though", "it", "was", "find", "NUMBER", "This", "application", "fail", "to", "start", "because", "no", "Qt", "platform", "plugin", "could", "be", "initialized", "NUMBER", "Reinstalling", "the", "application", "may", "fix", "this", "problem", "NUMBER", "Available", "platform", "plugins", "be", "eglfs", "linuxfb", "minimal", "minimalegl", "offscreen", "vnc", "xcb", "NUMBER", "root", "LAPTOP", "EJ", "NUMBER", "BH", "NUMBER", "DJ", "docker", "dev", "private", "re", "cutter", "docker", "v", "NUMBER", "master", "cc", "ps", "NUMBER", "It", "worked", "correctly", "the", "first", "time", "I", "run", "it", "I", "ll", "check", "it", "out", "later", "and", "provide", "feedback", "Original", "Message", "From", "karliss", "TAG", "To", "radareorg", "cutter", "TAG", "Cc", "ps", "TAG", "Mention", "TAG", "Sent", "Sat", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "Subject", "Re", "radareorg", "cutter", "Cutter", "build", "be", "broken", "in", "docker", "after", "second", "run", "NUMBER", "What", "do", "you", "mean", "by", "worked", "did", "it", "somehow", "opened", "the", "GUI", "Can", "you", "demonstrate", "a", "full", "log", "that", "demonstrates", "work", "the", "first", "time", "and", "then", "fail", "on", "second", "time", "Or", "did", "it", "worked", "once", "and", "you", "can", "t", "repeat", "that", "at", "all", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "The", "image", "build", "be", "fine", "NUMBER", "We", "usually", "start", "the", "docker", "container", "use", "the", "Makefile", "that", "s", "present", "here", "LINK", "The", "problem", "be", "that", "the", "container", "expects", "some", "environment", "variables", "to", "be", "present", "in", "order", "to", "change", "the", "internal", "container", "user", "from", "root", "to", "r", "NUMBER", "NUMBER", "Also", "the", "X", "socket", "be", "mounted", "inside", "of", "the", "container", "so", "the", "GUI", "can", "be", "shown", "NUMBER", "Please", "retry", "by", "use", "our", "Makefile", "e", "NUMBER", "g", "NUMBER", "like", "sudo", "make", "run", "Ah", "and", "since", "you", "re", "run", "on", "windows", "this", "might", "not", "work", "out", "of", "the", "box", "NUMBER", "I", "haven", "t", "test", "docker", "gui", "on", "windows", "but", "I", "think", "there", "be", "ways", "to", "start", "an", "xserver", "on", "windows", "or", "to", "try", "other", "mechanisms", "like", "x", "NUMBER", "docker", "LINK", "Environment", "information", "Operating", "System", "Windows", "NUMBER", "home", "x", "NUMBER", "Cutter", "version", "v", "NUMBER", "x", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "LINK", "Order", "of", "registers", "be", "ugly", "it", "should", "go", "the", "normal", "way", "starting", "with", "rax", "on", "left", "column", "or", "add", "the", "possibility", "to", "reorder", "them", "Agree", "Thank", "you", "absolutely", "agree", "NUMBER", "Wanted", "to", "do", "this", "for", "awhile", "appveyor", "failure", "isn", "t", "relate", "right", "fix", "Ubuntu", "Looks", "good", "on", "my", "Arch", "with", "dark", "themed", "OS", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "eed", "NUMBER", "f", "NUMBER", "d", "NUMBER", "png", "So", "we", "can", "force", "background", "color", "for", "tooltips", "in", "light", "theme", "maybe", "NUMBER", "Google", "Coding", "Style", "guide", "differentiate", "between", "declaration", "and", "definition", "comments", "like", "this", "Declaration", "comments", "describe", "use", "of", "the", "function", "when", "it", "be", "non", "obvious", "comments", "at", "the", "definition", "of", "a", "function", "describe", "operation", "NUMBER", "From", "Google", "s", "C", "Style", "Guide", "Function", "Comments", "LINK", "Function_Comments", "Full", "explanation", "Function", "Declarations", "Almost", "every", "function", "declaration", "should", "have", "comments", "immediately", "preceding", "it", "that", "describe", "what", "the", "function", "do", "and", "how", "to", "use", "it", "NUMBER", "These", "comments", "may", "be", "omitted", "only", "if", "the", "function", "be", "simple", "and", "obvious", "e", "NUMBER", "g", "NUMBER", "simple", "accessors", "for", "obvious", "properties", "of", "the", "class", "NUMBER", "These", "comments", "should", "open", "with", "descriptive", "verb", "in", "the", "indicative", "mood", "Opens", "the", "file", "rather", "than", "verb", "in", "the", "imperative", "Open", "the", "file", "NUMBER", "The", "comment", "describes", "the", "function", "it", "do", "not", "tell", "the", "function", "what", "to", "do", "NUMBER", "In", "general", "these", "comments", "do", "not", "describe", "how", "the", "function", "performs", "its", "task", "NUMBER", "Instead", "that", "should", "be", "left", "to", "comments", "in", "the", "function", "definition", "NUMBER", "Types", "of", "things", "to", "mention", "in", "comments", "at", "the", "function", "declaration", "What", "the", "inputs", "and", "outputs", "be", "NUMBER", "For", "class", "member", "function", "whether", "the", "object", "remembers", "reference", "argument", "beyond", "the", "duration", "of", "the", "method", "call", "and", "whether", "it", "will", "free", "them", "or", "not", "NUMBER", "If", "the", "function", "allocates", "memory", "that", "the", "caller", "must", "free", "NUMBER", "Whether", "any", "of", "the", "argument", "can", "be", "a", "null", "pointer", "NUMBER", "If", "there", "be", "any", "performance", "implications", "of", "how", "a", "function", "be", "use", "NUMBER", "If", "the", "function", "be", "re", "entrant", "NUMBER", "What", "be", "its", "synchronization", "assumptions", "Function", "Definitions", "If", "there", "be", "anything", "tricky", "about", "how", "a", "function", "do", "its", "job", "the", "function", "definition", "should", "have", "an", "explanatory", "comment", "NUMBER", "For", "example", "in", "the", "definition", "comment", "you", "might", "describe", "any", "code", "tricks", "you", "use", "give", "an", "overview", "of", "the", "steps", "you", "go", "through", "or", "explain", "why", "you", "chose", "to", "implement", "the", "function", "in", "the", "way", "you", "did", "rather", "than", "use", "a", "viable", "alternative", "NUMBER", "For", "instance", "you", "might", "mention", "why", "it", "must", "acquire", "a", "lock", "for", "the", "first", "half", "of", "the", "function", "but", "why", "it", "be", "not", "needed", "for", "the", "second", "half", "NUMBER", "Note", "_you", "should", "not", "just", "repeat", "the", "comments", "given", "with", "the", "function", "declaration", "in", "the", "NUMBER", "h", "file", "or", "wherever", "NUMBER", "It", "s", "okay", "to", "recapitulate", "briefly", "what", "the", "function", "do", "but", "the", "focus", "of", "the", "comments", "should", "be", "on", "how", "it", "do", "it", "NUMBER", "_", "I", "agree", "NUMBER", "thestr", "NUMBER", "ng", "NUMBER", "r", "xarkes", "if", "you", "have", "nothing", "against", "deciding", "to", "use", "docstrings", "in", "the", "header", "file", "declarations", "then", "I", "think", "we", "can", "set", "it", "as", "an", "action", "item", "Documentation", "should", "be", "in", "the", "header", "NUMBER", "What", "be", "an", "action", "item", "LINK", "_item", "To", "remove", "all", "the", "remaining", "docstrings", "we", "have", "in", "CPP", "file", "to", "Headers", "There", "be", "more", "of", "them", "in", "headers", "NUMBER", "compared", "to", "NUMBER", "in", "cpp", "file", "NUMBER", "Yep", "I", "agree", "although", "there", "be", "few", "disadvantages", "in", "my", "opinion", "I", "think", "the", "docstrings", "belong", "to", "the", "header", "file", "NUMBER", "Environment", "information", "Operating", "System", "Ubuntu", "NUMBER", "NUMBER", "bit", "Cutter", "version", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "ELF", "NUMBER", "bit", "NUMBER", "After", "inserting", "a", "breakpoint", "I", "click", "on", "the", "debug", "button", "NUMBER", "NUMBER", "I", "don", "t", "add", "any", "command", "line", "args", "NUMBER", "The", "program", "stops", "in", "a", "different", "address", "NUMBER", "I", "push", "TAG", "and", "it", "stops", "at", "a", "different", "address", "but", "not", "the", "breakpoint", "yet", "NUMBER", "I", "push", "TAG", "again", "and", "the", "program", "exits", "with", "Debugged", "process", "exited", "NUMBER", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "open", "x", "NUMBER", "binary", "NUMBER", "put", "a", "breakpoint", "doesn", "t", "matter", "where", "NUMBER", "start", "debugging", "NUMBER", "see", "error", "Expected", "behavior", "The", "program", "will", "exit", "without", "stopping", "in", "the", "breakpoint", "NUMBER", "Additional", "context", "the", "file", "x", "NUMBER", "zip", "LINK", "Environment", "information", "Operating", "System", "Ubuntu", "NUMBER", "Cutter", "version", "NUMBER", "Pre", "Release", "Obtained", "from", "X", "Downloaded", "from", "release", "Describe", "the", "bug", "Numpad", "input", "do", "not", "work", "on", "any", "input", "field", "of", "the", "UI", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "any", "input", "field", "of", "the", "UI", "for", "example", "Quick", "filter", "of", "function", "windows", "r", "NUMBER", "console", "input", "NUMBER", "Or", "open", "dialogue", "for", "putting", "a", "comment", "or", "renaming", "a", "local", "var", "NUMBER", "Any", "input", "field", "I", "tried", "has", "the", "problem", "NUMBER", "NUMBER", "Try", "to", "input", "numbers", "or", "floating", "point", "from", "numpad", "and", "observe", "they", "be", "not", "be", "write", "NUMBER", "Expected", "behavior", "When", "Num", "lock", "be", "enable", "on", "a", "keyboard", "with", "numpad", "input", "field", "of", "the", "UI", "should", "be", "able", "to", "get", "input", "from", "it", "NUMBER", "karliss", "Is", "this", "a", "know", "issue", "in", "Qt", "I", "can", "t", "reproduce", "on", "non", "appimage", "build", "so", "I", "can", "verify", "that", "what", "you", "re", "describing", "be", "true", "NUMBER", "Also", "NUMBER", "be", "there", "a", "way", "we", "can", "force", "Qt", "to", "handle", "this", "Qt", "NUMBER", "test", "release", "has", "be", "rebuilt", "with", "xkb", "NUMBER", "Numpad", "seems", "to", "be", "work", "NUMBER", "If", "anyone", "wants", "to", "confirm", "it", "be", "available", "here", "LINK", "test", "qt", "NUMBER", "Working", "fine", "for", "me", "with", "same", "config", "as", "when", "describe", "issue", "NUMBER", "Thanks", "for", "taking", "a", "look", "at", "it", "NUMBER", "TAG", "Your", "checklist", "for", "this", "pull", "request", "x", "I", "ve", "read", "the", "guidelines", "for", "contribute", "LINK", "docs", "first", "time", "NUMBER", "html", "to", "this", "repository", "x", "I", "made", "sure", "to", "follow", "the", "project", "s", "code", "style", "LINK", "docs", "NUMBER", "html", "I", "ve", "update", "the", "documentation", "LINK", "docs", "NUMBER", "html", "with", "the", "relevant", "information", "if", "needed", "Detailed", "description", "TAG", "Functional", "Changes", "Displays", "the", "flags", "and", "comments", "in", "the", "Information", "tab", "of", "the", "hexdump", "sidebar", "for", "the", "current", "address", "NUMBER", "Code", "Changes", "_HexdumpWidget", "NUMBER", "ui_", "Added", "ui", "item", "elements", "under", "hexSideTab_", "NUMBER", "for", "display", "flags", "and", "comments", "NUMBER", "_HexdumpWidget", "NUMBER", "cpp_", "Set", "the", "placeholder", "text", "for", "the", "flag", "and", "comment", "elements", "use", "setPlaceholderText", "NUMBER", "Created", "a", "new", "function", "showMetaInfo", "RVA", "address", "Fetched", "the", "flags", "info", "for", "the", "address", "use", "r_flag_get_i", "core", "flags", "address", "Fetched", "the", "comments", "for", "the", "address", "use", "Core", "cmd", "CC", "NUMBER", "RAddressString", "address", "Set", "the", "fetched", "values", "for", "the", "UI", "elements", "use", "setText", "NUMBER", "Invoked", "showMetaInfo", "whenever", "positionChanged", "signal", "be", "emitted", "NUMBER", "Test", "plan", "required", "TAG", "Both", "flag", "and", "comment", "be", "present", "Case", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "ea", "NUMBER", "bf", "dbebf", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "png", "Only", "the", "flag", "be", "present", "Case", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "ebf", "NUMBER", "d", "NUMBER", "aca", "NUMBER", "png", "Only", "the", "Comment", "be", "present", "hexdump", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "da", "NUMBER", "f", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "c", "NUMBER", "png", "Both", "flag", "and", "comment", "be", "not", "present", "Case", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "ea", "NUMBER", "eb", "NUMBER", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "d", "NUMBER", "png", "TAG", "Closing", "issue", "Closes", "NUMBER", "TAG", "karliss", "please", "review", "this", "NUMBER", "see", "the", "pxa", "command", "On", "Mon", "NUMBER", "Mar", "NUMBER", "at", "NUMBER", "NUMBER", "karliss", "TAG", "write", "This", "way", "of", "display", "the", "flag", "and", "comment", "seems", "very", "inconvenient", "to", "me", "but", "I", "d", "like", "to", "hear", "other", "opinions", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "pancake", "Environment", "information", "Operating", "System", "Windows", "Cutter", "version", "NUMBER", "Obtained", "from", "x", "Built", "from", "source", "File", "format", "N", "A", "Describe", "the", "bug", "Cutter", "uses", "drj", "command", "to", "obtain", "the", "values", "of", "registers", "but", "if", "the", "value", "be", "larger", "than", "NUMBER", "NUMBER", "it", "becomes", "broken", "because", "it", "cannot", "be", "expressed", "as", "a", "double", "value", "NUMBER", "e", "NUMBER", "g", "NUMBER", "mov", "rax", "NUMBER", "x", "NUMBER", "Then", "cutter", "will", "show", "rax", "NUMBER", "x", "NUMBER", "even", "though", "drj", "shows", "the", "correct", "value", "NUMBER", "TAG", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "shellcode", "NUMBER", "B", "NUMBER", "NUMBER", "Start", "emulation", "NUMBER", "Step", "one", "instruction", "NUMBER", "rax", "be", "shown", "as", "NUMBER", "x", "NUMBER", "Expected", "behavior", "rax", "should", "be", "shown", "as", "NUMBER", "x", "NUMBER", "Screenshots", "TAG", "Additional", "context", "I", "guess", "this", "be", "relate", "with", "QTBUG", "NUMBER", "LINK", "NUMBER", "and", "it", "s", "fix", "in", "Nov", "NUMBER", "so", "upgrading", "the", "version", "of", "Qt", "might", "help", "but", "not", "sure", "if", "it", "s", "best", "NUMBER", "Cutter", "currently", "uses", "Qt", "s", "parser", "QJsonDocument", "to", "parse", "JSON", "values", "from", "radare", "NUMBER", "In", "Qt", "the", "value", "be", "converted", "to", "double", "just", "after", "parsing", "NUMBER", "Perhaps", "another", "parser", "can", "be", "use", "Happens", "to", "me", "as", "well", "with", "version", "NUMBER", "while", "use", "the", "lodsq", "instruction", "NUMBER", "The", "value", "be", "not", "fully", "loaded", "into", "the", "register", "i", "NUMBER", "e", "the", "lower", "end", "of", "the", "register", "filled", "with", "garbage", "When", "I", "tried", "open", "a", "disassembly", "widget", "from", "graph", "use", "space", "key", "it", "opened", "graph", "widget", "for", "current", "position", "in", "disassembly", "widget", "NUMBER", "How", "can", "I", "create", "this", "problem", "Or", "be", "it", "some", "other", "shortcut", "I", "ve", "compiled", "cutter", "NUMBER", "times", "in", "a", "loop", "now", "and", "worked", "flawlessly", "remove", "applying", "the", "patch", "and", "the", "next", "build", "fail", "again", "NUMBER", "looks", "good", "to", "me", "cat", "Environment", "information", "Operating", "System", "Arch", "Linux", "Cutter", "version", "NUMBER", "Obtained", "from", "x", "Built", "from", "source", "Describe", "the", "bug", "QMake", "build", "system", "doesn", "t", "seem", "to", "properly", "specify", "target", "dependencies", "NUMBER", "When", "i", "build", "on", "a", "very", "beefy", "machine", "like", "a", "ryzen", "with", "NUMBER", "concurrency", "the", "compilation", "aborts", "in", "like", "NUMBER", "out", "of", "NUMBER", "cases", "with", "NUMBER", "g", "c", "pipe", "march", "x", "NUMBER", "NUMBER", "mtune", "generic", "O", "NUMBER", "pipe", "fno", "plt", "std", "gnu", "NUMBER", "Wall", "Wextra", "D_REENTRANT", "fPIC", "DCUTTER_ENABLE_PYTHON", "DCUTTER_ENABLE_PYTHON_BINDINGS", "D_CRT_NONSTDC_NO_DEPRECATE", "D_CRT_SECURE_NO_WARNINGS", "DQT_NO_DEBUG", "DQT_SVG_LIB", "DQT_WIDGETS_LIB", "DQT_GUI_LIB", "DQT_NETWORK_LIB", "DQT_CORE_LIB", "I", "NUMBER", "src", "I", "NUMBER", "I", "NUMBER", "src", "I", "NUMBER", "src", "core", "I", "NUMBER", "src", "widgets", "I", "NUMBER", "src", "dialogs", "I", "NUMBER", "src", "common", "I", "NUMBER", "src", "plugins", "I", "NUMBER", "src", "menus", "I", "build", "radare", "NUMBER", "cutter", "src", "radare", "NUMBER", "cutter", "build", "bindings", "CutterBindings", "isystem", "usr", "include", "PySide", "NUMBER", "isystem", "usr", "include", "PySide", "NUMBER", "QtCore", "isystem", "usr", "include", "PySide", "NUMBER", "QtWidgets", "isystem", "usr", "include", "PySide", "NUMBER", "QtGui", "isystem", "usr", "include", "libr", "isystem", "usr", "include", "python", "NUMBER", "isystem", "usr", "include", "shiboken", "NUMBER", "isystem", "usr", "include", "qt", "isystem", "usr", "include", "qt", "QtSvg", "isystem", "usr", "include", "qt", "QtWidgets", "isystem", "usr", "include", "qt", "QtGui", "isystem", "usr", "include", "qt", "QtNetwork", "isystem", "usr", "include", "qt", "QtCore", "I", "NUMBER", "I", "NUMBER", "I", "usr", "lib", "qt", "mkspecs", "linux", "g", "o", "BasicBlockHighlighter", "NUMBER", "o", "NUMBER", "src", "common", "BasicBlockHighlighter", "NUMBER", "cpp", "NUMBER", "src", "plugins", "PluginManager", "NUMBER", "cpp", "NUMBER", "NUMBER", "fatal", "error", "cutterbindings_python", "NUMBER", "h", "No", "such", "file", "or", "directory", "NUMBER", "include", "TAG", "compilation", "terminated", "NUMBER", "make", "Makefile", "NUMBER", "PluginManager", "NUMBER", "o", "Error", "NUMBER", "make", "Waiting", "for", "unfinished", "jobs", "NUMBER", "I", "can", "work", "around", "this", "issue", "by", "either", "limiting", "the", "parallel", "jobs", "hence", "make", "it", "more", "unlikely", "to", "out", "race", "the", "binding", "generator", "or", "by", "simply", "invoking", "make", "bindings_target", "myself", "before", "the", "full", "make", "call", "NUMBER", "To", "Reproduce", "qmake", "NUMBER", "src", "Cutter", "NUMBER", "pro", "CUTTER_ENABLE_PYTHON", "true", "CUTTER_ENABLE_PYTHON_BINDINGS", "true", "CUTTER_USE_BUNDLED_RADARE", "NUMBER", "false", "make", "Expected", "behavior", "Can", "compile", "use", "qmake", "on", "a", "beefy", "machine", "without", "race", "conditions", "NUMBER", "I", "will", "be", "test", "this", "patch", "during", "the", "weekend", "and", "also", "take", "a", "dive", "into", "replacing", "qmake", "with", "cmake", "and", "give", "feedback", "on", "that", "as", "well", "NUMBER", "Thanks", "for", "the", "quick", "handle", "and", "the", "headsup", "relate", "to", "the", "Arch", "package", "NUMBER", "cmake", "build", "seems", "fine", "so", "will", "switch", "the", "Arch", "package", "to", "it", "with", "the", "next", "update", "NUMBER", "The", "PR", "also", "looks", "good", "Environment", "information", "Operating", "System", "ubuntu", "NUMBER", "Cutter", "version", "Version", "NUMBER", "Using", "r", "NUMBER", "NUMBER", "Based", "on", "Qt", "NUMBER", "GCC", "NUMBER", "NUMBER", "bit", "Optional", "Features", "Python", "ON", "Python", "Bindings", "ON", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "appimage", "Describe", "the", "bug", "I", "install", "angr", "angrdbg", "use", "python", "NUMBER", "and", "put", "angrcutter", "folder", "under", "plugins", "python", "NUMBER", "Cutter", "tried", "to", "load", "the", "plugin", "but", "I", "guess", "it", "s", "use", "wrong", "version", "of", "python", "NUMBER", "By", "export", "PYTHONHOME", "to", "which", "python", "NUMBER", "the", "appimage", "still", "use", "it", "s", "default", "python", "settings", "NUMBER", "And", "I", "can", "t", "install", "dependencies", "under", "python", "NUMBER", "Here", "s", "the", "whole", "log", "michael", "michael", "ubuntu", "export", "PYTHONHOME", "which", "python", "NUMBER", "michael", "michael", "ubuntu", "cutter", "Setting", "PYTHONHOME", "tmp", "NUMBER", "mount_cutterGHFyt", "NUMBER", "usr", "for", "AppImage", "NUMBER", "PYTHONHOME", "tmp", "NUMBER", "mount_cutterGHFyt", "NUMBER", "usr", "Setting", "r", "NUMBER", "prefix", "tmp", "NUMBER", "mount_cutterGHFyt", "NUMBER", "usr", "for", "AppImage", "NUMBER", "Setting", "r", "NUMBER", "plugins", "dir", "tmp", "NUMBER", "mount_cutterGHFyt", "NUMBER", "usr", "share", "radare", "NUMBER", "plugins", "Not", "loading", "library", "because", "it", "has", "already", "be", "loaded", "from", "somewhere", "else", "home", "michael", "NUMBER", "local", "share", "radare", "NUMBER", "plugins", "core_ghidra", "NUMBER", "so", "Module", "version", "mismatch", "home", "michael", "NUMBER", "local", "share", "radare", "NUMBER", "plugins", "io_frida", "NUMBER", "so", "NUMBER", "git", "vs", "NUMBER", "Module", "version", "mismatch", "home", "michael", "NUMBER", "local", "share", "radare", "NUMBER", "plugins", "r", "NUMBER", "golf", "NUMBER", "so", "NUMBER", "git", "vs", "NUMBER", "Plugins", "be", "loaded", "from", "home", "michael", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "Couldn", "t", "load", "module", "for", "plugin", "angrcutter", "Traceback", "most", "recent", "call", "last", "File", "home", "michael", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "python", "angrcutter", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "NUMBER", "plugin_interface", "import", "create_cutter_plugin", "File", "home", "michael", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "python", "angrcutter", "plugin_interface", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "NUMBER", "plugin", "import", "AngrWidget", "printMessage", "LogLevel", "File", "home", "michael", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "python", "angrcutter", "plugin", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "NUMBER", "debugger", "import", "cutterDebugger", "File", "home", "michael", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "python", "angrcutter", "debugger", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "angrdbg", "import", "ModuleNotFoundError", "No", "module", "named", "angrdbg", "Loaded", "NUMBER", "plugin", "s", "NUMBER", "Plugins", "be", "loaded", "from", "usr", "share", "ubuntu", "RadareOrg", "Cutter", "plugins", "Plugins", "be", "loaded", "from", "usr", "local", "share", "RadareOrg", "Cutter", "plugins", "Plugins", "be", "loaded", "from", "usr", "share", "RadareOrg", "Cutter", "plugins", "Plugins", "be", "loaded", "from", "var", "lib", "snapd", "desktop", "RadareOrg", "Cutter", "plugins", "Plugins", "be", "loaded", "from", "tmp", "NUMBER", "mount_cutterGHFyt", "NUMBER", "usr", "share", "RadareOrg", "Cutter", "plugins", "Loaded", "NUMBER", "plugin", "s", "NUMBER", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "CRYPTO_num_locks", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "CRYPTO_set_id_callback", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "CRYPTO_set_locking_callback", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "ERR_free_strings", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "EVP_CIPHER_CTX_cleanup", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "EVP_CIPHER_CTX_init", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "sk_new_null", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "sk_push", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "sk_free", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "sk_num", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "sk_pop_free", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "sk_value", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "SSL_library_init", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "SSL_load_error_strings", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "SSL_get_ex_new_index", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "SSLv", "NUMBER", "_client_method", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "SSLv", "NUMBER", "_client_method", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "SSLv", "NUMBER", "_server_method", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "SSLv", "NUMBER", "_server_method", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "X", "NUMBER", "_STORE_CTX_get_chain", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "OPENSSL_add_all_algorithms_noconf", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "OPENSSL_add_all_algorithms_conf", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "cannot", "resolve", "SSLeay", "qt", "NUMBER", "network", "NUMBER", "ssl", "Incompatible", "version", "of", "OpenSSL", "QNetworkReplyHttpImplPrivate", "_q_startOperation", "was", "call", "more", "than", "once", "QUrl", "LINK", "qt", "NUMBER", "network", "NUMBER", "ssl", "QSslSocket", "connectToHostEncrypted", "TLS", "initialization", "fail", "TAG", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "clone", "angrcutter", "and", "put", "angrcutter", "angrcutter", "folder", "to", "plugin", "python", "Expected", "behavior", "Should", "use", "user", "provide", "python", "TAG", "karliss", "Hi", "also", "tried", "export", "PYTHONHOME", "usr", "local", "not", "work", "NUMBER", "The", "console", "says", "Setting", "PYTHONHOME", "tmp", "NUMBER", "mount_cutterKMtoV", "NUMBER", "usr", "for", "AppImage", "NUMBER", "If", "you", "know", "how", "to", "set", "this", "pls", "write", "it", "down", "NUMBER", "I", "m", "no", "developper", "I", "just", "want", "to", "use", "it", "and", "want", "to", "use", "the", "plugin", "NUMBER", "Or", "you", "get", "busy", "I", "ll", "wait", "for", "others", "NUMBER", "thanks", "karliss", "thank", "you", "very", "much", "karliss", "NUMBER", "I", "think", "it", "may", "be", "the", "angrcutter", "plugin", "s", "improper", "design", "NUMBER", "I", "ll", "update", "here", "after", "fix", "NUMBER", "TAG", "Detailed", "description", "TAG", "Adds", "history", "listing", "feature", "in", "Remote", "Debug", "Dialog", "with", "some", "minor", "enhancements", "NUMBER", "Placeholders", "Remembers", "the", "previous", "connected", "paths", "ips", "Blank", "IP", "will", "be", "treated", "as", "localhost", "Test", "plan", "required", "TAG", "Placeholders", "and", "history", "box", "with", "previous", "connected", "IPs", "Paths", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cb", "NUMBER", "NUMBER", "ad", "NUMBER", "ea", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "png", "Just", "click", "on", "any", "one", "and", "it", "ll", "automatically", "fill", "the", "details", "in", "dialog", "box", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "NUMBER", "ad", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "png", "Closing", "issue", "close", "NUMBER", "TAG", "Is", "it", "possible", "to", "separate", "the", "items", "from", "the", "history", "list", "visually", "Now", "it", "looks", "a", "bit", "weird", "NUMBER", "Sure", "NUMBER", "Will", "make", "a", "patch", "after", "sometime", "Hey", "XVilka", "i", "m", "not", "quite", "sure", "what", "you", "mean", "by", "separate", "the", "items", "from", "the", "history", "list", "visually", "NUMBER", "Previously", "i", "interpreted", "it", "as", "the", "space", "between", "values", "in", "history", "list", "NUMBER", "It", "looks", "something", "like", "this", "now", "less", "space", "between", "list", "values", "NUMBER", "Can", "you", "confirm", "if", "this", "be", "what", "you", "meant", "If", "not", "let", "me", "know", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "d", "a", "NUMBER", "ac", "NUMBER", "a", "NUMBER", "b", "NUMBER", "png", "Also", "the", "right", "click", "menu", "now", "works", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "cc", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "png", "ITAYC", "NUMBER", "HEN", "I", "ll", "push", "the", "user", "documentation", "part", "in", "some", "time", "Added", "line", "separators", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fe", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "aee", "a", "NUMBER", "bcca", "NUMBER", "b", "NUMBER", "b", "NUMBER", "png", "Due", "to", "the", "recent", "rename", "of", "windbg", "into", "winkd", "and", "some", "corresponding", "refactoring", "this", "might", "need", "an", "update", "NUMBER", "The", "variable", "and", "type", "analysis", "code", "in", "r", "NUMBER", "be", "the", "main", "bottleneck", "in", "disasm", "and", "analysis", "right", "now", "NUMBER", "There", "be", "several", "other", "points", "of", "interest", "but", "i", "didnt", "had", "a", "chance", "to", "investigate", "yet", "and", "disnt", "had", "time", "to", "improve", "thst", "code", "NUMBER", "But", "will", "do", "at", "some", "point", "NUMBER", "Feel", "free", "to", "run", "the", "profiler", "and", "share", "the", "results", "On", "NUMBER", "Mar", "NUMBER", "at", "NUMBER", "NUMBER", "Itay", "Cohen", "TAG", "write", "Let", "s", "not", "write", "latest", "from", "git", "as", "version", "agreed", "Will", "add", "version", "x", "NUMBER", "y", "NUMBER", "z", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "unsubscribe", "NUMBER", "Desired", "use", "case", "be", "ability", "to", "debug", "apps", "run", "on", "iOS", "device", "NUMBER", "Should", "be", "available", "already", "since", "LLDB", "support", "gdb", "remote", "protocol", "see", "their", "documentation", "LINK", "Environment", "information", "Operating", "System", "Cutter", "version", "Obtained", "from", "x", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "Describe", "the", "bug", "TAG", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "NUMBER", "NUMBER", "Click", "on", "NUMBER", "NUMBER", "Scroll", "down", "to", "NUMBER", "NUMBER", "See", "error", "Expected", "behavior", "TAG", "Screenshots", "TAG", "Additional", "context", "TAG", "TAG", "Detailed", "description", "TAG", "Functionalities", "add", "Edit", "Preferences", "Disassembly", "Graph", "user", "can", "choose", "if", "they", "want", "the", "export", "bitmap", "image", "to", "be", "transparent", "or", "not", "NUMBER", "Checkbox", "At", "the", "same", "location", "there", "be", "Double", "SpinBox", "use", "which", "user", "can", "select", "the", "scaling", "factor", "NUMBER", "to", "NUMBER", "NUMBER", "The", "maximum", "be", "NUMBER", "be", "pure", "arbitrary", "choice", "that", "I", "made", "as", "a", "factor", "even", "as", "large", "as", "NUMBER", "be", "not", "useful", "for", "any", "situations", "I", "could", "think", "of", "NUMBER", "This", "can", "be", "increase", "if", "needed", "but", "I", "don", "t", "think", "there", "be", "a", "point", "NUMBER", "Normal", "export", "if", "the", "user", "selects", "the", "extensions", "png", "jpg", "bitmap", "this", "will", "export", "with", "the", "given", "scaling", "factor", "NUMBER", "If", "the", "option", "transaparent", "be", "selected", "png", "export", "will", "be", "transparent", "NUMBER", "Note", "jpg", "doesn", "t", "support", "transparency", "So", "if", "a", "user", "select", "transparent", "for", "a", "jpg", "export", "by", "default", "the", "background", "will", "be", "the", "ui", "background", "color", "NUMBER", "In", "a", "session", "if", "a", "user", "selects", "the", "scaling", "factor", "and", "transparency", "for", "the", "export", "bitmap", "images", "once", "it", "will", "remain", "so", "as", "long", "they", "be", "in", "the", "current", "session", "NUMBER", "User", "can", "change", "this", "at", "any", "point", "if", "they", "want", "NUMBER", "Changes", "made", "to", "code", "and", "additions", "NUMBER", "Defined", "two", "private", "variables", "_double", "bitmapGraphExportScale_", "and", "_bool", "bitmapGraphExportTransparency_", "in", "_common", "Configuration", "NUMBER", "h_", "in", "_common", "Configuration", "NUMBER", "cpp_", "NUMBER", "These", "variables", "store", "the", "details", "about", "how", "much", "graph", "should", "be", "scaled", "while", "exporting", "and", "if", "it", "should", "be", "transparent", "or", "not", "NUMBER", "Made", "_getter_", "and", "_setter_", "function", "for", "_bitmapGraphExportScale_", "and", "_bitmapGraphExportTransparency_", "in", "Configuration", "NUMBER", "cpp", "NUMBER", "In", "_dialogs", "preferences", "GraphOptionsWidget_", "made", "a", "checkbox", "for", "transparency", "and", "double", "spinbox", "for", "scaling", "factor", "NUMBER", "When", "change", "be", "made", "to", "the", "transparency", "and", "or", "spinbox", "call", "the", "respective", "setter", "function", "in", "_Configuration", "NUMBER", "cpp_", "to", "update", "the", "value", "of", "transparency", "and", "or", "spinbox", "NUMBER", "In", "_src", "widgets", "Graphview", "NUMBER", "cpp", "_", "change", "the", "function", "definition", "of", "_saveAsBitmap_", "from", "void", "void", "saveAsBitmap", "QString", "path", "const", "char", "format", "nullptr", "to", "void", "saveAsBitmap", "QString", "path", "const", "char", "format", "nullptr", "double", "scaler", "NUMBER", "bool", "transparent", "false", "The", "file", "saved", "by", "the", "_saveAsBitmap_", "function", "be", "according", "to", "the", "scaling", "factor", "and", "transparent", "or", "not", "option", "selected", "by", "the", "user", "NUMBER", "In", "_src", "widgets", "DisassemblerGraphView", "NUMBER", "cpp", "_", "in", "function", "_DisassemblerGraphView", "exportGraph_", "two", "variables", "be", "assigned", "the", "current", "value", "of", "both", "_bitmapGraphExportScale_", "and", "_bitmapGraphExportTransparency_", "NUMBER", "These", "variables", "be", "pass", "argument", "if", "the", "graph", "be", "export", "in", "bitmap", "format", "NUMBER", "Test", "plan", "required", "The", "UI", "in", "Edit", "Preferences", "Disassembly", "Graph", "will", "change", "from", "GraphOptionsWidgetEarlier", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ab", "NUMBER", "NUMBER", "bc", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "a", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "aebd", "NUMBER", "e", "NUMBER", "png", "to", "the", "following", "update", "with", "the", "change", "request", "graph", "options", "update", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cf", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "png", "_", "Bitmap", "export", "graphs", "before", "and", "after", "selecting", "scaling", "factor", "and", "transparency", "_", "Native", "theme", "NUMBER", "native", "normal", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bfff", "NUMBER", "NUMBER", "bd", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "png", "this", "has", "be", "scaled", "to", "NUMBER", "and", "export", "selecting", "transparent", "background", "NUMBER", "Result", "be", "the", "following", "NUMBER", "NUMBER", "native", "scaled", "trans", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "be", "NUMBER", "a", "NUMBER", "NUMBER", "bd", "NUMBER", "ea", "NUMBER", "NUMBER", "dc", "NUMBER", "aa", "NUMBER", "b", "NUMBER", "a", "NUMBER", "png", "Midnight", "theme", "NUMBER", "midnight", "normal", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cf", "NUMBER", "NUMBER", "bd", "NUMBER", "ea", "NUMBER", "ec", "NUMBER", "fcd", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "png", "this", "has", "be", "export", "as", "transparent", "with", "default", "scaling", "NUMBER", "NUMBER", "Result", "be", "the", "follwing", "NUMBER", "midnight", "normal", "trans", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "c", "NUMBER", "NUMBER", "bd", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "NUMBER", "ca", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "png", "TAG", "TAG", "Closing", "issue", "close", "NUMBER", "TAG", "Your", "examples", "be", "sharp", "and", "crispy", "good", "job", "NUMBER", "Detailed", "description", "Its", "in", "continuation", "of", "NUMBER", "as", "author", "be", "not", "responding", "NUMBER", "This", "PR", "add", "the", "ability", "to", "highlight", "lines", "blocks", "in", "disassembly", "graph", "view", "NUMBER", "Test", "plan", "required", "Highlighted", "instructions", "be", "properly", "synchronized", "between", "multiple", "widgets", "NUMBER", "Code", "still", "has", "some", "issue", "which", "I", "wasn", "t", "able", "to", "resolve", "NUMBER", "As", "can", "be", "seen", "here", "LINK", "L", "NUMBER", "I", "wanted", "to", "call", "DisassemblyWidget", "refreshDisasm", "as", "I", "believe", "that", "this", "function", "will", "fix", "the", "stuff", "by", "calculating", "the", "correct", "value", "of", "lines", "NUMBER", "I", "maybe", "wrong", "Closing", "issue", "close", "NUMBER", "Thank", "you", "again", "for", "this", "PR", "At", "this", "time", "we", "ll", "close", "this", "PR", "since", "there", "was", "suggested", "a", "way", "that", "will", "be", "better", "to", "implement", "this", "feature", "in", "NUMBER", "Windows", "Version", "Windows", "NUMBER", "NUMBER", "Cpu", "\u0130", "NUMBER", "NUMBER", "k", "Gpu", "Gtx", "NUMBER", "Cutter", "Version", "NUMBER", "The", "Program", "be", "very", "good", "but", "the", "performance", "be", "very", "bad", "when", "it", "freezes", "the", "loading", "screen", "would", "be", "better", "if", "we", "saw", "Hello", "I", "be", "trying", "to", "connect", "to", "vmware", "I", "be", "get", "ip", "not", "find", "error", "Type", "GDB", "IP", "localhost", "Port", "NUMBER", "Note", "I", "can", "connect", "with", "IDA", "Pro", "Software", "NUMBER", "I", "tried", "this", "again", "it", "was", "not", "connected", "I", "can", "connect", "with", "IDA", "Pro", "Software", "Have", "you", "tried", "NUMBER", "Most", "likely", "it", "s", "radare", "NUMBER", "and", "host", "name", "resolution", "problem", "NUMBER", "I", "bet", "it", "s", "Windows", "TAG", "Detailed", "description", "TAG", "This", "pull", "request", "add", "the", "documentation", "for", "update", "all", "the", "submodules", "or", "a", "specific", "submodule", "in", "the", "repo", "NUMBER", "documentation", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ffaccf", "NUMBER", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "aca", "NUMBER", "png", "Test", "plan", "required", "TAG", "TAG", "Dev", "Documentation", "NUMBER", "Closing", "issue", "TAG", "Closes", "NUMBER", "Thanks", "a", "lot", "for", "taking", "the", "time", "to", "review", "the", "PR", "D", "NUMBER", "I", "have", "add", "it", "to", "the", "bottom", "of", "code", "NUMBER", "rst", "and", "also", "I", "have", "address", "the", "suggested", "change", "NUMBER", "Please", "have", "a", "look", "NUMBER", "I", "was", "aware", "that", "I", "had", "update", "the", "radare", "NUMBER", "submodule", "but", "was", "not", "sure", "whether", "to", "add", "it", "in", "this", "PR", "or", "not", "sweat_smile", "Thanks", "ITAYC", "NUMBER", "HEN", "What", "about", "putting", "Aithentihash", "after", "sha", "NUMBER", "It", "s", "more", "niche", "thing", "after", "all", "NUMBER", "On", "Sun", "Feb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Itay", "Cohen", "TAG", "write", "macOS", "fail", "be", "not", "realted", "to", "the", "PR", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "Hi", "ITAYC", "NUMBER", "HEN", "I", "would", "like", "to", "work", "on", "this", "issue", "NUMBER", "I", "just", "had", "one", "question", "NUMBER", "To", "update", "the", "radare", "NUMBER", "submodule", "would", "it", "be", "alright", "if", "we", "use", "git", "submodule", "foreach", "git", "pull", "origin", "master", "which", "would", "also", "update", "the", "other", "submodule", "translations", "in", "the", "repo", "or", "be", "there", "any", "other", "set", "of", "commands", "that", "you", "would", "like", "to", "suggest", "Thanks", "ITAYC", "NUMBER", "HEN", "for", "your", "suggestions", "NUMBER", "I", "have", "raise", "the", "PR", "for", "this", "NUMBER", "Please", "review", "it", "whenever", "you", "get", "a", "chance", "NUMBER", "I", "will", "do", "this", "after", "finishing", "issue", "NUMBER", "Add", "text", "editor", "for", "NUMBER", "cutterrc", "Describe", "the", "solution", "you", "d", "like", "For", "example", "in", "order", "to", "use", "Ghidra", "RetDec", "plugin", "with", "cutter", "I", "must", "compile", "these", "plugin", "with", "radare", "NUMBER", "s", "cutter", "s", "source", "code", "NUMBER", "TAG", "Describe", "alternatives", "you", "ve", "considered", "The", "convienient", "way", "r", "NUMBER", "pm", "install", "ghidra", "dec", "with", "cutter", "path", "to", "cutter_or_", "path", "to", "cutter", "plugin", "Then", "everything", "be", "all", "set", "NUMBER", "I", "think", "we", "should", "respect", "experience", "which", "IDA", "did", "that", "be", "distribute", "standalone", "plugins", "with", "binary", "file", "let", "the", "community", "handle", "the", "compile", "thing", "NUMBER", "just", "distrubite", "binary", "plugin", "with", "r", "NUMBER", "pm", "s", "repository", "with", "radare", "NUMBER", "and", "cutter", "NUMBER", "This", "be", "what", "new", "r", "NUMBER", "pm", "NUMBER", "go", "LINK", "be", "supposed", "to", "solve", "NUMBER", "It", "s", "write", "in", "Go", "and", "should", "be", "easy", "to", "improve", "pull", "request", "be", "welcome", "NUMBER", "See", "the", "relate", "issue", "LINK", "LINK", "I", "ve", "do", "some", "reasearch", "about", "r", "NUMBER", "ghidra", "dec", "s", "compile", "procedure", "with", "both", "r", "NUMBER", "plugin", "cutter", "plugin", "NUMBER", "The", "reason", "why", "r", "NUMBER", "ghidra", "dec", "needs", "source", "code", "be", "mainly", "because", "r", "NUMBER", "ghidra", "dec", "needs", "NUMBER", "h", "file", "and", "NUMBER", "so", "file", "maybe", "NUMBER", "So", "this", "require", "radare", "NUMBER", "separate", "it", "s", "headers", "file", "like", "relations", "between", "linux", "linux", "headers", "otherwise", "it", "should", "depend", "on", "entire", "radare", "NUMBER", "projects", "NUMBER", "Hi", "ITAYC", "NUMBER", "HEN", "I", "would", "like", "to", "give", "this", "a", "shot", "NUMBER", "Can", "you", "give", "me", "a", "bit", "of", "a", "headstart", "that", "how", "can", "I", "approach", "this", "Hi", "here", "be", "general", "strategy", "for", "approaching", "your", "first", "issue", "I", "don", "t", "know", "your", "experience", "level", "so", "don", "t", "mind", "if", "some", "of", "the", "steps", "seem", "obvious", "NUMBER", "Start", "by", "reading", "this", "LINK", "See", "LINK", "for", "compilation", "instructions", "Get", "the", "build", "work", "Run", "cutter", "and", "get", "familiar", "with", "how", "the", "menu", "behaves", "currently", "Find", "the", "the", "source", "file", "implement", "it", "practice", "searching", "code", "in", "your", "editor", "this", "be", "an", "important", "skill", "If", "necessary", "read", "LINK", "NUMBER", "model", "view", "programming", "NUMBER", "html", "for", "basic", "understanding", "of", "how", "Qt", "model", "system", "works", "NUMBER", "not", "required", "in", "this", "issue", "NUMBER", "Check", "if", "any", "of", "the", "exist", "code", "implement", "similar", "behavior", "in", "the", "same", "widget", "or", "similar", "widgets", "NUMBER", "If", "you", "do", "copy", "an", "exist", "code", "consider", "why", "it", "did", "things", "the", "way", "it", "did", "the", "same", "factors", "might", "not", "apply", "in", "your", "case", "or", "the", "old", "code", "be", "simply", "bad", "NUMBER", "Still", "it", "s", "a", "way", "of", "moving", "forwards", "if", "you", "otherwise", "wouldn", "t", "know", "how", "to", "approach", "it", "NUMBER", "Come", "up", "with", "a", "plan", "for", "things", "that", "need", "to", "be", "do", "and", "discuss", "it", "here", "NUMBER", "Just", "because", "something", "was", "mention", "in", "issue", "description", "doesn", "t", "necessarily", "means", "that", "it", "be", "still", "relevant", "or", "good", "feature", "NUMBER", "When", "code", "change", "be", "do", "and", "you", "be", "ready", "for", "PR", "please", "follow", "the", "PR", "template", "NUMBER", "Test", "plan", "required", "really", "means", "that", "NUMBER", "If", "those", "be", "GUI", "change", "make", "a", "screenshot", "NUMBER", "Make", "a", "basic", "list", "of", "steps", "for", "checking", "that", "change", "be", "work", "as", "expected", "NUMBER", "This", "also", "a", "good", "point", "to", "consider", "any", "potential", "edge", "cases", "or", "different", "kind", "of", "interesting", "inputs", "if", "you", "didn", "t", "already", "do", "it", "while", "write", "code", "NUMBER", "Actually", "perform", "the", "steps", "you", "describe", "when", "make", "the", "PR", "even", "if", "they", "seem", "trivial", "and", "you", "did", "them", "during", "development", "it", "helps", "catching", "any", "makes", "do", "during", "final", "cleanup", "and", "make", "sure", "you", "didn", "t", "forget", "anything", "NUMBER", "Hi", "thanks", "a", "lot", "for", "taking", "the", "time", "to", "write", "down", "these", "steps", "NUMBER", "Also", "sorry", "for", "the", "delayed", "response", "NUMBER", "I", "had", "get", "the", "build", "work", "and", "had", "also", "find", "the", "relevant", "source", "file", "NUMBER", "But", "I", "was", "trying", "to", "figure", "out", "the", "function", "that", "I", "can", "use", "to", "retrieve", "information", "from", "an", "address", "NUMBER", "This", "be", "what", "I", "had", "planned", "NUMBER", "Retrieve", "the", "information", "about", "the", "command", "use", "the", "offset", "address", "NUMBER", "NUMBER", "Using", "the", "command", "values", "to", "differentiate", "whether", "the", "string", "definition", "be", "defined", "or", "not", "and", "consequently", "show", "hide", "the", "remove", "option", "NUMBER", "Sorry", "if", "this", "isn", "t", "right", "or", "If", "I", "have", "misunderstood", "something", "NUMBER", "Hi", "karliss", "I", "have", "implement", "this", "in", "the", "same", "way", "canCopy", "be", "implement", "NUMBER", "It", "toggles", "the", "visibility", "of", "the", "remove", "action", "depending", "upon", "the", "other", "actions", "For", "on_actionSetAsString_triggered", "and", "on_actionSetAsStringAdvanced_triggered", "it", "would", "set", "its", "visibility", "to", "true", "NUMBER", "For", "on_actionSetAsStringRemove_triggered", "and", "on_actionSetToCode_triggered", "it", "would", "set", "its", "visibility", "to", "false", "NUMBER", "I", "m", "not", "sure", "whether", "this", "would", "be", "the", "right", "way", "of", "implement", "this", "NUMBER", "It", "would", "be", "great", "if", "you", "can", "provide", "some", "feedback", "NUMBER", "I", "can", "raise", "the", "PR", "if", "that", "makes", "things", "more", "clear", "Hi", "karliss", "I", "have", "raise", "the", "PR", "NUMBER", "Please", "take", "a", "look", "whenever", "you", "get", "a", "chance", "NUMBER", "Environment", "information", "Operating", "System", "Windows", "NUMBER", "Cutter", "version", "NUMBER", "x", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "Describe", "the", "bug", "So", "i", "was", "messing", "around", "with", "cutter", "and", "under", "preferences", "dissasembly", "metadata", "it", "came", "to", "my", "attention", "that", "when", "you", "would", "klick", "enable", "on", "show", "only", "strings", "if", "any", "in", "the", "asm", "NUMBER", "emu", "output", "emu", "NUMBER", "r", "and", "disable", "it", "that", "Run", "ESIL", "emulation", "analysis", "would", "be", "turned", "on", "without", "me", "enabling", "it", "to", "disable", "it", "you", "would", "need", "to", "enable", "and", "disable", "it", "by", "klicking", "the", "checkbox", "and", "then", "it", "would", "be", "fix", "NUMBER", "To", "Reproduce", "NUMBER", "Open", "Preferences", "Dissasembly", "Metadata", "tab", "NUMBER", "Click", "on", "Show", "only", "strings", "if", "any", "in", "the", "asm", "NUMBER", "emu", "output", "emu", "NUMBER", "r", "whilst", "Run", "ESIL", "emulation", "analysis", "asm", "NUMBER", "emu", "be", "not", "enable", "NUMBER", "NUMBER", "Disable", "Show", "only", "strings", "if", "any", "in", "the", "asm", "NUMBER", "emu", "output", "emu", "NUMBER", "r", "and", "you", "will", "se", "that", "Run", "ESIL", "emulation", "analysis", "asm", "NUMBER", "emu", "be", "enable", "NUMBER", "NUMBER", "Enable", "and", "Disable", "Run", "ESIL", "emulation", "analysis", "asm", "NUMBER", "emu", "to", "fix", "the", "Problem", "Expected", "behavior", "enable", "and", "disable", "Show", "only", "strings", "if", "any", "in", "the", "asm", "NUMBER", "emu", "output", "emu", "NUMBER", "r", "and", "you", "will", "se", "that", "Run", "ESIL", "emulation", "analysis", "asm", "NUMBER", "emu", "be", "enable", "NUMBER", "Screenshots", "TAG", "Additional", "context", "TAG", "Ah", "okay", "good", "to", "know", "Also", "thank", "you", "for", "looking", "into", "it", "NUMBER", "Have", "a", "nice", "day", "NUMBER", "Duplicate", "of", "NUMBER", "Environment", "information", "Operating", "System", "Microsoft", "Windows", "NUMBER", "Pro", "Cutter", "version", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "The", "file", "be", "a", "NUMBER", "exe", "file", "NUMBER", "Describe", "the", "bug", "To", "put", "it", "simple", "i", "write", "a", "simple", "crack", "me", "and", "cracked", "it", "with", "x", "NUMBER", "a", "couple", "of", "hours", "later", "i", "looked", "into", "the", "exe", "with", "cutter", "and", "cutter", "did", "show", "me", "instead", "of", "the", "jge", "jle", "jne", "that", "it", "detected", "this", "region", "of", "the", "exe", "as", "str", "NUMBER", "This_is_not_the_right_number", "NUMBER", "ring", "n", "This", "be", "not", "the", "right", "number", "n", "To", "Reproduce", "NUMBER", "Use", "this", "src", "for", "the", "cpp", "include", "TAG", "use", "namespace", "std", "int", "main", "int", "a", "int", "b", "NUMBER", "int", "c", "NUMBER", "int", "d", "NUMBER", "right", "number", "be", "NUMBER", "cout", "TAG", "a", "cout", "TAG", "b", "c", "d", "cout", "TAG", "desktop", "file", "and", "it", "magically", "fix", "the", "icon", "issue", "as", "well", "NUMBER", "Test", "plan", "required", "I", "test", "this", "on", "Fedora", "NUMBER", "both", "on", "Gnome", "on", "Xorg", "and", "Gnome", "on", "Wayland", "NUMBER", "Before", "the", "icon", "was", "work", "only", "on", "Gnome", "on", "Xorg", "with", "this", "fix", "it", "works", "on", "Gnome", "on", "Wayland", "as", "well", "NUMBER", "I", "m", "not", "sure", "of", "how", "this", "behaves", "on", "Windows", "or", "other", "systems", "though", "NUMBER", "Before", "before", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cc", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "png", "After", "after", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "a", "dca", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "png", "Imho", "it", "looks", "way", "better", "without", "the", "icon", "Sent", "from", "my", "iPad", "On", "NUMBER", "Feb", "NUMBER", "at", "NUMBER", "NUMBER", "Itay", "Cohen", "TAG", "write", "Looks", "very", "good", "well", "do", "thank", "you", "TAG", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "unsubscribe", "NUMBER", "Imho", "it", "looks", "way", "better", "without", "the", "icon", "The", "thing", "be", "that", "the", "icon", "be", "not", "even", "display", "while", "doing", "alt", "tab", "which", "be", "very", "annoying", "NUMBER", "I", "believe", "the", "travis", "error", "be", "just", "an", "infrastructure", "problem", "NUMBER", "Yeah", "thats", "a", "good", "reason", "for", "the", "fix", "but", "it", "looks", "ugly", "in", "the", "titlebar", "Sent", "from", "my", "iPad", "On", "NUMBER", "Feb", "NUMBER", "at", "NUMBER", "NUMBER", "Riccardo", "Schirone", "TAG", "write", "Imho", "it", "looks", "way", "better", "without", "the", "icon", "The", "thing", "be", "that", "the", "icon", "be", "not", "even", "display", "while", "doing", "alt", "tab", "which", "be", "very", "annoying", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "unsubscribe", "NUMBER", "radare", "Could", "you", "be", "more", "specific", "about", "what", "you", "consider", "ugly", "The", "fact", "icon", "be", "display", "in", "title", "bar", "in", "general", "I", "assume", "you", "meant", "the", "one", "next", "to", "Activities", "not", "actual", "titlebar", "which", "be", "part", "of", "window", "NUMBER", "Or", "do", "you", "not", "like", "how", "Cutter", "icon", "be", "rendered", "compared", "to", "other", "title", "bar", "icons", "size", "bad", "blurry", "scaling", "not", "use", "simplified", "single", "color", "icon", "like", "other", "system", "program", "I", "be", "not", "fully", "convinced", "that", "always", "setting", "setDesktopFileName", "regardless", "of", "cutter", "packaging", "kind", "be", "correct", "thing", "to", "do", "NUMBER", "How", "do", "it", "work", "with", "Appimage", "do", "desktop", "environemnts", "know", "how", "to", "search", "for", "desktop", "file", "inside", "appimage", "I", "tried", "it", "with", "regular", "dev", "build", "NUMBER", "Icon", "didn", "t", "show", "up", "not", "surprising", "because", "desktop", "had", "no", "way", "of", "knowing", "anything", "about", "Cutter", "desktop", "file", "NUMBER", "There", "was", "also", "a", "negative", "effect", "Cutter", "name", "in", "some", "parts", "of", "desktop", "showed", "as", "org", "NUMBER", "cutter", "NUMBER", "Cutter", "instead", "of", "Cutter", "NUMBER", "After", "installing", "additional", "cutter", "from", "my", "OS", "repository", "icon", "start", "to", "show", "for", "the", "devbuild", "NUMBER", "That", "isn", "t", "exactly", "harmful", "but", "can", "there", "be", "some", "negative", "sideffects", "wrong", "use", "wrong", "desktop", "file", "Good", "points", "karliss", "Thanks", "NUMBER", "Actually", "I", "may", "be", "able", "to", "solve", "the", "issue", "I", "have", "just", "by", "change", "the", "name", "of", "the", "desktop", "file", "from", "org", "NUMBER", "radare", "NUMBER", "Cutter", "NUMBER", "desktop", "to", "Cutter", "NUMBER", "desktop", "NUMBER", "In", "this", "way", "it", "seems", "it", "automatically", "detect", "the", "right", "desktop", "file", "without", "having", "to", "change", "the", "cutter", "code", "NUMBER", "I", "m", "going", "to", "close", "this", "as", "I", "find", "a", "way", "to", "make", "it", "work", "on", "Wayland", "as", "well", "without", "the", "need", "to", "change", "cutter", "s", "code", "NUMBER", "Thanks", "all", "NUMBER", "But", "isn", "t", "org", "NUMBER", "radare", "NUMBER", "Cutter", "NUMBER", "desktop", "the", "standard", "from", "freedesktop", "See", "LINK", "entry", "spec", "desktop", "entry", "spec", "latest", "NUMBER", "html", "File", "naming", "and", "Desktop", "File", "ID", "NUMBER", "In", "theory", "I", "would", "say", "yes", "but", "I", "can", "see", "on", "my", "Fedora", "system", "there", "be", "more", "than", "one", "application", "that", "just", "use", "the", "simple", "name", "e", "NUMBER", "g", "NUMBER", "gnome", "search", "panel", "NUMBER", "desktop", "instead", "of", "org", "NUMBER", "gnome", "NUMBER", "gnome", "search", "panel", "NUMBER", "desktop", "etc", "NUMBER", "NUMBER", "Maybe", "it", "s", "because", "of", "this", "issue", "with", "Wayland", "I", "m", "not", "sure", "NUMBER", "The", "weird", "thing", "be", "that", "by", "use", "org", "NUMBER", "radare", "NUMBER", "Cutter", "NUMBER", "desktop", "it", "do", "work", "on", "Xorg", "but", "not", "on", "Wayland", "NUMBER", "Environment", "information", "Operating", "System", "Linux", "Cutter", "version", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "Not", "applicable", "bug", "be", "in", "a", "core", "Cutter", "UI", "action", "Upstream", "dependency", "Qt", "fix", "a", "bug", "in", "QNetworkReplyHttpImplPrivate", "_q_startOperation", "that", "can", "be", "triggered", "in", "Cutter", "NUMBER", "In", "the", "Cutter", "console", "log", "the", "following", "debug", "message", "be", "report", "QNetworkReplyHttpImplPrivate", "_q_startOperation", "was", "call", "more", "than", "once", "QUrl", "LINK", "Updating", "Cutter", "s", "Qt", "dependency", "to", "NUMBER", "will", "resolve", "this", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "Help", "top", "menu", "item", "then", "click", "on", "About", "sub", "menu", "item", "NUMBER", "Click", "on", "Check", "for", "update", "button", "in", "the", "modal", "window", "NUMBER", "See", "error", "in", "console", "log", "Expected", "behavior", "No", "debug", "message", "issue", "by", "Qt", "dependency", "NUMBER", "Screenshots", "n", "a", "Additional", "context", "See", "upstream", "Qt", "bug", "report", "LINK", "NUMBER", "Confirmed", "fix", "with", "cutter", "v", "NUMBER", "LINK", "Environment", "information", "Operating", "System", "Windows", "NUMBER", "Cutter", "version", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "None", "Describe", "the", "bug", "TAG", "Cutter", "NUMBER", "crashes", "when", "editing", "a", "theme", "NUMBER", "See", "crash", "dump", "attached", "NUMBER", "Cutter_crash_dump_", "NUMBER", "_", "NUMBER", "dmp", "NUMBER", "zip", "LINK", "_crash_dump_", "NUMBER", "_", "NUMBER", "dmp", "NUMBER", "zip", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "Cutter", "no", "file", "required", "NUMBER", "Go", "to", "Edit", "Preferences", "NUMBER", "Click", "on", "Appearance", "NUMBER", "Select", "any", "theme", "NUMBER", "Create", "a", "copy", "of", "the", "theme", "NUMBER", "Edit", "it", "Expected", "behavior", "TAG", "Theme", "edition", "menu", "should", "appear", "NUMBER", "Works", "on", "NUMBER", "from", "release", "Environment", "information", "Operating", "System", "Parrot", "OS", "NUMBER", "Cutter", "version", "NUMBER", "pull", "from", "git", "NUMBER", "Obtained", "from", "x", "Built", "from", "source", "File", "format", "Describe", "the", "bug", "Cmake", "fail", "to", "detect", "valid", "version", "of", "shiboken", "NUMBER", "to", "compile", "the", "project", "NUMBER", "CMake", "Error", "at", "usr", "share", "cmake", "NUMBER", "Modules", "FindPackageHandleStandardArgs", "NUMBER", "cmake", "NUMBER", "message", "Could", "NOT", "find", "Shiboken", "NUMBER", "miss", "SHIBOKEN_LIBRARY", "SHIBOKEN_INCLUDE_DIR", "SHIBOKEN_BINARY", "find", "suitable", "version", "NUMBER", "minimum", "required", "be", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "clone", "cutter", "NUMBER", "compile", "with", "cd", "cutter", "src", "mkdir", "build", "cmake", "B", "build", "DPYTHON_CONFIG_SUFFIX", "NUMBER", "cpython", "NUMBER", "m", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "DCUTTER_ENABLE_PYTHON", "on", "DCUTTER_ENABLE_PYTHON_BINDINGS", "on", "cmake", "build", "build", "Expected", "behavior", "Cmake", "should", "accept", "version", "NUMBER", "Screenshots", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "NUMBER", "ce", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "f", "NUMBER", "abb", "NUMBER", "fb", "NUMBER", "ec", "NUMBER", "png", "Additional", "context", "TAG", "Turned", "out", "it", "was", "incompatible", "python", "version", "NUMBER", "After", "change", "to", "python", "NUMBER", "i", "m", "having", "this", "error", "CMake", "Error", "in", "CMakeLists", "NUMBER", "txt", "Imported", "target", "PySide", "NUMBER", "pyside", "NUMBER", "include", "non", "existent", "path", "usr", "lib", "include", "PySide", "NUMBER", "in", "its", "INTERFACE_INCLUDE_DIRECTORIES", "NUMBER", "Possible", "reasons", "include", "The", "path", "was", "delete", "renamed", "or", "moved", "to", "another", "location", "NUMBER", "An", "install", "or", "uninstall", "procedure", "did", "not", "complete", "successfully", "NUMBER", "The", "installation", "package", "was", "faulty", "and", "references", "file", "it", "do", "not", "provide", "NUMBER", "The", "actual", "path", "of", "PySide", "NUMBER", "be", "in", "usr", "include", "PySide", "NUMBER", "I", "had", "this", "issue", "My", "way", "to", "get", "past", "this", "was", "matching", "build", "of", "Qt", "and", "shiboken", "NUMBER", "I", "m", "on", "osx", "NUMBER", "I", "tried", "to", "compile", "Cutter", "with", "Qt", "NUMBER", "and", "needed", "to", "compile", "PySide", "NUMBER", "NUMBER", "NUMBER", "on", "my", "system", "first", "NUMBER", "Then", "Cutter", "would", "build", "with", "python", "NUMBER", "setup", "NUMBER", "py", "install", "qmake", "Users", "USER", "Qt", "NUMBER", "clang_", "NUMBER", "bin", "qmake", "It", "works", "but", "segfaults", "on", "close", "Environment", "information", "Operating", "System", "Ubuntu", "NUMBER", "GNOME", "Cutter", "version", "NUMBER", "c", "NUMBER", "dd", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "Obtained", "from", "x", "Built", "from", "source", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "executable", "Describe", "the", "bug", "When", "executing", "NUMBER", "build", "Cutter", "an", "error", "occur", "NUMBER", "build", "Cutter", "error", "while", "loading", "shared", "libraries", "libr_socket", "NUMBER", "so", "NUMBER", "git", "cannot", "open", "shared", "object", "file", "No", "such", "file", "or", "directory", "NUMBER", "TAG", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "Follow", "all", "build", "instructions", "NUMBER", "Expected", "behavior", "TAG", "Successfully", "open", "cutter", "window", "NUMBER", "Screenshots", "TAG", "Additional", "context", "TAG", "ldd", "build", "Cutter", "linux", "vdso", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "ffe", "NUMBER", "b", "NUMBER", "e", "NUMBER", "libQt", "NUMBER", "Svg", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libQt", "NUMBER", "Svg", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "afbe", "NUMBER", "libQt", "NUMBER", "Network", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libQt", "NUMBER", "Network", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "adfd", "NUMBER", "libQt", "NUMBER", "Widgets", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libQt", "NUMBER", "Widgets", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "a", "NUMBER", "libQt", "NUMBER", "Gui", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libQt", "NUMBER", "Gui", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "a", "NUMBER", "e", "NUMBER", "libQt", "NUMBER", "Core", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libQt", "NUMBER", "Core", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "libr_core", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_core", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "libr_config", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_config", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "libr_cons", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_cons", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "libr_io", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_io", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "libr_util", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_util", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "a", "NUMBER", "libr_flag", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_flag", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "libr_asm", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_asm", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "bc", "NUMBER", "libr_debug", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_debug", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "libr_hash", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_hash", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "libr_bin", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_bin", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "libr_anal", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_anal", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "libr_parse", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_parse", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "libr_bp", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_bp", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "libr_egg", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_egg", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "libr_reg", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_reg", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "libr_search", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_search", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "libr_syscall", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_syscall", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "libr_fs", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_fs", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "a", "NUMBER", "libr_magic", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_magic", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "libr_crypto", "NUMBER", "so", "NUMBER", "git", "mnt", "wdb", "github", "cutter", "src", "build", "Radare", "NUMBER", "prefix", "lib", "libr_crypto", "NUMBER", "so", "NUMBER", "git", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "libstdc", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libstdc", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "d", "NUMBER", "libm", "NUMBER", "so", "NUMBER", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libm", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "libgcc_s", "NUMBER", "so", "NUMBER", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libgcc_s", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "libc", "NUMBER", "so", "NUMBER", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libc", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "libz", "NUMBER", "so", "NUMBER", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libz", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "ff", "NUMBER", "libpthread", "NUMBER", "so", "NUMBER", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libpthread", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "fd", "NUMBER", "libdl", "NUMBER", "so", "NUMBER", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libdl", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "fcc", "NUMBER", "libGL", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libGL", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "libpng", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libpng", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "libharfbuzz", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libharfbuzz", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "libicui", "NUMBER", "n", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libicui", "NUMBER", "n", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "e", "NUMBER", "libicuuc", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libicuuc", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "libpcre", "NUMBER", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libpcre", "NUMBER", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "e", "NUMBER", "libdouble", "conversion", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libdouble", "conversion", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "cb", "NUMBER", "libglib", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libglib", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "a", "NUMBER", "lib", "NUMBER", "ld", "linux", "x", "NUMBER", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "d", "NUMBER", "libr_socket", "NUMBER", "so", "NUMBER", "git", "not", "find", "libr_lang", "NUMBER", "so", "NUMBER", "git", "not", "find", "libr_socket", "NUMBER", "so", "NUMBER", "git", "not", "find", "libr_socket", "NUMBER", "so", "NUMBER", "git", "not", "find", "libGLX", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libGLX", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "d", "NUMBER", "libGLdispatch", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libGLdispatch", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "libfreetype", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libfreetype", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "libgraphite", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libgraphite", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "libicudata", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libicudata", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "bd", "NUMBER", "libpcre", "NUMBER", "so", "NUMBER", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libpcre", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "libX", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libX", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "a", "NUMBER", "libxcb", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libxcb", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "libXau", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libXau", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "libXdmcp", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libXdmcp", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "ea", "NUMBER", "libbsd", "NUMBER", "so", "NUMBER", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libbsd", "NUMBER", "so", "NUMBER", "NUMBER", "x", "NUMBER", "fb", "NUMBER", "d", "NUMBER", "I", "see", "libr_socket", "NUMBER", "so", "NUMBER", "git", "and", "libr_lang", "NUMBER", "so", "NUMBER", "git", "point", "to", "nothing", "however", "there", "exist", "those", "NUMBER", "libs", "in", "build", "Radare", "NUMBER", "prefix", "lib", "NUMBER", "So", "I", "excute", "NUMBER", "radare", "NUMBER", "env", "NUMBER", "sh", "build", "Radare", "NUMBER", "prefix", "or", "simply", "export", "LD_LIBRARY_PATH", "build", "Radare", "NUMBER", "prefix", "lib", "then", "Cutter", "can", "be", "successfully", "opened", "NUMBER", "This", "be", "a", "know", "issue", "cause", "by", "combination", "of", "the", "way", "r", "NUMBER", "build", "scripts", "works", "and", "default", "linker", "flags", "on", "latest", "Ubuntu", "version", "NUMBER", "See", "the", "second", "part", "under", "troubleshooting", "section", "LINK", "troubleshooting", "NUMBER", "eagleoflqj", "were", "you", "able", "to", "solve", "the", "issue", "I", "m", "quite", "new", "to", "cmake", "and", "cutter", "too", "otherwise", "I", "d", "open", "a", "pr", "ASAP", "NUMBER", "eagleoflqj", "Hi", "mate", "I", "m", "run", "the", "latest", "ubuntu", "NUMBER", "but", "can", "t", "build", "from", "source", "NUMBER", "Sometimes", "it", "s", "shiboken", "version", "not", "met", "require", "NUMBER", "but", "I", "don", "t", "know", "where", "to", "install", "NUMBER", "apt", "only", "support", "NUMBER", "and", "pip", "NUMBER", "How", "did", "you", "managed", "to", "build", "it", "Would", "you", "like", "to", "write", "your", "history", "here", "mr", "m", "NUMBER", "nst", "NUMBER", "r", "I", "use", "a", "fresh", "ubuntu", "NUMBER", "VM", "apt", "update", "and", "upgrade", "then", "exactly", "followed", "the", "instruction", "NUMBER", "I", "don", "t", "have", "shiboken", "install", "at", "all", "NUMBER", "I", "ve", "be", "looking", "into", "this", "and", "have", "be", "able", "to", "successfully", "build", "Cutter", "on", "Ubuntu", "NUMBER", "by", "add", "a", "few", "additional", "package", "in", "apt", "sudo", "apt", "install", "build", "essential", "cmake", "meson", "libzip", "dev", "zlib", "NUMBER", "g", "dev", "qt", "NUMBER", "default", "libqt", "NUMBER", "svg", "NUMBER", "dev", "qttools", "NUMBER", "dev", "qttools", "NUMBER", "dev", "qttools", "NUMBER", "dev", "tool", "libmagic", "dev", "libgvc", "NUMBER", "libgraphviz", "dev", "libkf", "NUMBER", "syntaxhighlighting", "dev", "python", "NUMBER", "setuptools", "liblz", "NUMBER", "dev", "libcapstone", "dev", "libssl", "dev", "libxxhash", "dev", "libuv", "NUMBER", "dev", "Clone", "from", "git", "and", "recurse", "submodules", "git", "clone", "recurse", "submodules", "LINK", "Then", "as", "radare", "NUMBER", "cutter", "developers", "have", "documented", "cd", "into", "the", "cutter", "directory", "and", "cmake", "S", "src", "B", "build", "DCUTTER_USE_BUNDLED_RADARE", "NUMBER", "ON", "DCMAKE_EXE_LINKER_FLAGS", "Wl", "disable", "new", "dtags", "and", "finally", "cmake", "build", "build", "Then", "you", "can", "run", "cutter", "with", "NUMBER", "build", "Cutter", "Looks", "good", "Thanks", "Environment", "information", "Operating", "System", "ubuntu", "NUMBER", "Cutter", "version", "NUMBER", "File", "format", "elf", "NUMBER", "Arch", "x", "NUMBER", "Type", "EXEC", "Executable", "file", "Describe", "the", "bug", "when", "editing", "several", "instructions", "ex", "pop", "use", "new", "registers", "r", "NUMBER", "to", "r", "NUMBER", "give", "incorrect", "bytes", "To", "Reproduce", "NUMBER", "open", "an", "elf", "NUMBER", "file", "in", "write", "mode", "NUMBER", "go", "to", "disassembly", "tab", "NUMBER", "right", "click", "an", "address", "instruction", "NUMBER", "click", "edit", "instruction", "NUMBER", "type", "pop", "r", "NUMBER", "NUMBER", "window", "gives", "NUMBER", "f", "actual", "instruction", "be", "NUMBER", "e", "NUMBER", "if", "ok", "be", "pressed", "the", "incorrect", "bytes", "be", "persisted", "NUMBER", "on", "console", "type", "rasm", "NUMBER", "a", "x", "NUMBER", "b", "NUMBER", "pop", "r", "NUMBER", "for", "correct", "bytes", "Expected", "behavior", "bytes", "on", "edit", "window", "mach", "bytes", "given", "by", "rasm", "NUMBER", "Screenshots", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "aa", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "d", "NUMBER", "png", "Additional", "context", "perhaps", "NUMBER", "interpretation", "be", "taking", "precedence", "over", "NUMBER", "as", "a", "workaround", "you", "can", "use", "rasm", "NUMBER", "on", "console", "and", "use", "edit", "bytes", "affected", "instructions", "will", "add", "as", "i", "see", "sub", "pop", "test", "find", "out", "that", "you", "can", "solve", "this", "by", "setting", "a", "diferent", "assembler", "like", "this", "e", "asm", "NUMBER", "assembler", "x", "NUMBER", "as", "Thank", "you", "for", "report", "That", "s", "still", "an", "issue", "though", "NUMBER", "We", "can", "t", "expect", "the", "user", "to", "change", "the", "assembler", "I", "ll", "re", "open", "this", "yeah", "also", "i", "find", "instructons", "that", "dont", "work", "regadles", "of", "asembler", "such", "as", "movsx", "rcx", "byte", "rbx", "rdx", "on", "deafult", "asembler", "NUMBER", "fbe", "NUMBER", "b", "nasm", "as", "and", "nz", "report", "as", "invalid", "rasm", "NUMBER", "gives", "correct", "byes", "rasm", "NUMBER", "a", "x", "NUMBER", "b", "NUMBER", "movsx", "rcx", "byte", "rbx", "rdx", "NUMBER", "fbe", "NUMBER", "c", "NUMBER", "Thank", "you", "for", "these", "examples", "Do", "you", "have", "experience", "with", "radare", "NUMBER", "If", "so", "can", "you", "try", "to", "reproduce", "each", "of", "the", "behaviors", "you", "experience", "use", "radare", "NUMBER", "When", "you", "do", "we", "can", "transfer", "this", "issue", "to", "the", "r", "NUMBER", "repository", "to", "pass", "it", "to", "the", "radare", "NUMBER", "devs", "to", "check", "NUMBER", "I", "m", "not", "sure", "i", "understand", "what", "you", "mean", "by", "reproducing", "on", "radare", "use", "the", "integrated", "console", "from", "Cutter", "and", "use", "radare", "NUMBER", "s", "asm", "aka", "rasm", "NUMBER", "gives", "correct", "byes", "as", "i", "describe", "rasm", "NUMBER", "a", "x", "NUMBER", "b", "NUMBER", "movsx", "rcx", "byte", "rbx", "rdx", "NUMBER", "fbe", "NUMBER", "c", "NUMBER", "so", "as", "far", "as", "I", "can", "tell", "this", "be", "a", "cutter", "only", "issue", "if", "you", "want", "my", "take", "on", "it", "what", "be", "probably", "happening", "be", "an", "code", "completion", "issue", "where", "my", "input", "be", "first", "pass", "to", "an", "code", "completion", "function", "that", "do", "not", "recognize", "the", "new", "registers", "and", "replaces", "it", "with", "what", "it", "assumes", "to", "be", "the", "correct", "instruction", "NUMBER", "see", "on", "the", "picture", "how", "it", "stops", "complaining", "even", "tough", "the", "instruction", "be", "not", "complete", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "af", "NUMBER", "f", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "png", "if", "i", "put", "rasm", "NUMBER", "a", "x", "NUMBER", "b", "NUMBER", "movsx", "rcx", "byte", "r", "on", "the", "console", "i", "still", "get", "an", "error", "Cannot", "assemble", "movsx", "rcx", "byte", "r", "at", "line", "NUMBER", "but", "on", "the", "edit", "window", "i", "suddenly", "receive", "bytes", "NUMBER", "fbeff", "if", "i", "continue", "typing", "to", "the", "the", "end", "it", "gives", "NUMBER", "fbe", "NUMBER", "b", "which", "equates", "to", "movsx", "ecx", "byte", "rbx", "so", "i", "believe", "something", "be", "tampering", "with", "the", "string", "before", "it", "gets", "to", "rasm", "NUMBER", "in", "cutter", "i", "think", "a", "quick", "fix", "without", "losing", "functionality", "would", "be", "to", "first", "to", "send", "input", "to", "rasm", "NUMBER", "and", "only", "if", "it", "complains", "send", "to", "the", "auto", "complete", "module", "and", "then", "back", "to", "rasm", "NUMBER", "this", "wouldn", "t", "fix", "the", "problem", "that", "autocomplete", "be", "out", "of", "date", "out", "of", "sync", "with", "rasm", "NUMBER", "but", "at", "least", "would", "keep", "it", "from", "propagating", "to", "valid", "inputs", "I", "have", "no", "idea", "what", "the", "autocomplete", "modules", "or", "commands", "from", "radare", "NUMBER", "would", "be", "or", "even", "if", "they", "exist", "or", "be", "cutter", "only", "if", "some", "one", "would", "clue", "me", "in", "i", "could", "try", "to", "reproduce", "on", "radare", "NUMBER", "Environment", "information", "Operating", "System", "windows", "NUMBER", "Cutter", "version", "the", "newest", "release", "Obtained", "from", "Downloaded", "from", "release", "File", "format", "pdb", "and", "dll", "Describe", "the", "bug", "chrome_child", "NUMBER", "with", "pdb", "can", "not", "finish", "analysis", "TAG", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "NUMBER", "NUMBER", "Click", "on", "NUMBER", "NUMBER", "Scroll", "down", "to", "NUMBER", "NUMBER", "See", "error", "Expected", "behavior", "TAG", "Screenshots", "TAG", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fb", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "ca", "NUMBER", "b", "NUMBER", "e", "NUMBER", "png", "Additional", "context", "TAG", "Most", "likely", "a", "radare", "NUMBER", "issue", "NUMBER", "Could", "you", "please", "try", "with", "the", "plain", "radare", "NUMBER", "Two", "options", "would", "be", "nice", "for", "the", "graph", "bitmap", "export", "Allow", "users", "to", "provide", "a", "scaling", "factor", "NUMBER", "that", "increases", "the", "size", "of", "the", "export", "image", "Add", "an", "option", "that", "allows", "use", "a", "transparent", "background", "instead", "of", "the", "UI", "background", "color", "I", "ll", "try", "to", "come", "up", "with", "a", "PR", "as", "soon", "as", "i", "have", "some", "time", "for", "it", "Sure", "I", "m", "quite", "busy", "atm", "unfortunately", "so", "if", "you", "want", "to", "give", "it", "a", "go", "please", "do", "Original", "Message", "From", "NIRMAL", "MANOJ", "C", "TAG", "To", "radareorg", "cutter", "TAG", "Cc", "ps", "TAG", "Author", "TAG", "Sent", "Sat", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "Subject", "Re", "radareorg", "cutter", "Add", "graph", "bitmap", "export", "options", "NUMBER", "Can", "I", "take", "up", "this", "issue", "Asking", "because", "I", "can", "t", "see", "any", "PRs", "in", "the", "past", "NUMBER", "month", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "I", "was", "trying", "to", "understand", "this", "codebase", "playing", "around", "make", "minor", "change", "NUMBER", "Now", "I", "be", "going", "to", "write", "a", "PR", "NUMBER", "There", "be", "one", "modification", "that", "I", "will", "be", "make", "and", "I", "doubt", "if", "it", "would", "affect", "any", "other", "functionality", "of", "the", "program", "NUMBER", "In", "_GraphView", "saveAsBitmap", "QString", "path", "const", "char", "format", "_", "in", "_widgets", "GraphView", "NUMBER", "cpp_", "QImage", "be", "given", "the", "format", "of", "_Format_RGB", "NUMBER", "_", "however", "from", "what", "I", "have", "understood", "from", "the", "documentation", "and", "various", "articles", "this", "format", "do", "not", "support", "transparency", "NUMBER", "So", "can", "I", "use", "_Format_ARGB", "NUMBER", "_", "instead", "The", "line", "NUMBER", "current", "QImage", "image", "width", "height", "QImage", "Format_RGB", "NUMBER", "will", "be", "change", "to", "QImage", "image", "width", "height", "QImage", "Format_ARGB", "NUMBER", "karliss", "I", "couldn", "t", "find", "any", "problem", "cause", "by", "make", "this", "particular", "change", "NUMBER", "But", "make", "sure", "NUMBER", "There", "be", "some", "other", "modifications", "also", "which", "I", "think", "would", "not", "matter", "much", "like", "add", "two", "more", "parameters", "to", "the", "_saveAsBitmap_", "function", "NUMBER", "karliss", "I", "have", "finished", "the", "parts", "for", "add", "scaling", "factor", "and", "transparency", "as", "argument", "to", "the", "function", "NUMBER", "Currently", "I", "be", "thinking", "about", "various", "options", "to", "make", "the", "dialog", "NUMBER", "Can", "I", "do", "the", "following", "or", "do", "you", "want", "me", "to", "make", "in", "any", "particular", "way", "NUMBER", "Once", "user", "clicks", "save", "after", "selecting", "the", "extension", "as", "png", "jpeg", "bitmap", "a", "popup", "dialog", "comes", "NUMBER", "NUMBER", "User", "can", "select", "transparency", "checkbox", "and", "scaling", "factor", "QDoubleSpinBox", "NUMBER", "NUMBER", "Then", "graph", "gets", "saved", "as", "per", "the", "options", "user", "selected", "NUMBER", "I", "be", "actually", "confused", "whether", "I", "should", "make", "a", "seperate", "class", "to", "make", "a", "custom", "dialog", "like", "this", "or", "should", "I", "try", "add", "this", "into", "the", "_MultipleFileSaveDialog_", "that", "be", "be", "call", "when", "the", "Export", "Graph", "be", "clicked", "NUMBER", "Edit", "By", "MultiplyFileSaveDialog", "I", "mean", "add", "a", "transparent", "png", "jpg", "to", "the", "list", "NUMBER", "But", "this", "will", "look", "very", "weird", "and", "I", "haven", "t", "even", "tried", "thinking", "more", "along", "this", "idea", "NUMBER", "I", "just", "want", "to", "know", "if", "make", "a", "popup", "dialog", "every", "time", "the", "user", "try", "to", "save", "a", "graph", "bitmap", "be", "okay", "NUMBER", "karliss", "I", "have", "finished", "this", "task", "almost", "completely", "NUMBER", "Following", "points", "explain", "what", "I", "did", "NUMBER", "Functionalities", "add", "Edit", "Preferences", "Disassembly", "Graph", "user", "can", "choose", "if", "they", "want", "the", "export", "bitmap", "image", "to", "be", "transparent", "or", "not", "NUMBER", "Checkbox", "At", "the", "same", "location", "there", "be", "Double", "SpinBox", "use", "which", "user", "can", "select", "the", "scaling", "factor", "NUMBER", "to", "NUMBER", "NUMBER", "The", "maximum", "be", "NUMBER", "be", "pure", "arbitrary", "choice", "that", "I", "made", "as", "a", "factor", "even", "as", "large", "as", "NUMBER", "be", "not", "useful", "for", "any", "situations", "I", "could", "think", "of", "NUMBER", "This", "can", "be", "increase", "if", "needed", "but", "I", "don", "t", "think", "there", "be", "a", "point", "NUMBER", "Normal", "export", "if", "the", "user", "selects", "the", "extensions", "png", "jpg", "bitmap", "this", "will", "export", "with", "the", "given", "scaling", "factor", "NUMBER", "If", "the", "option", "transaparent", "be", "selected", "png", "export", "will", "be", "transparent", "NUMBER", "Note", "jpg", "doesn", "t", "support", "transparency", "So", "if", "a", "user", "select", "transparent", "for", "a", "jpg", "export", "by", "default", "the", "background", "will", "be", "black", "NUMBER", "In", "a", "session", "if", "a", "user", "selects", "the", "scaling", "factor", "and", "transparency", "for", "the", "export", "bitmap", "images", "once", "it", "will", "remain", "so", "as", "long", "they", "be", "in", "the", "current", "session", "NUMBER", "User", "can", "change", "this", "at", "any", "point", "if", "they", "want", "NUMBER", "Changes", "made", "to", "code", "and", "additions", "NUMBER", "Doubt", "if", "this", "be", "against", "the", "standard", "followed", "in", "cutter", "Defined", "two", "variables", "_double", "bitmapGraphExportScale_", "and", "_bool", "bitmapGraphExportTransparency_", "in", "_common", "Configuration", "NUMBER", "h_", "use", "the", "extern", "keyword", "and", "initialized", "this", "in", "_common", "Configuration", "NUMBER", "cpp_", "NUMBER", "These", "variables", "store", "the", "details", "about", "how", "much", "graph", "should", "be", "scaled", "while", "exporting", "and", "if", "it", "should", "be", "transparent", "or", "not", "NUMBER", "Made", "_getter_", "and", "_setter_", "function", "for", "_bitmapGraphExportScale_", "and", "_bitmapGraphExportTransparency_", "in", "Configuration", "NUMBER", "cpp", "NUMBER", "In", "_dialogs", "preferences", "GraphOptionsWidget_", "made", "a", "checkbox", "for", "transparency", "and", "double", "spinbox", "for", "scaling", "factor", "NUMBER", "When", "change", "be", "made", "to", "the", "transparency", "and", "or", "spinbox", "call", "the", "respective", "setter", "function", "in", "_Configuration", "NUMBER", "cpp_", "to", "update", "the", "value", "of", "transparency", "and", "or", "spinbox", "NUMBER", "In", "_src", "widgets", "Graphview", "NUMBER", "cpp", "_", "change", "the", "function", "definition", "of", "_saveAsBitmap_", "from", "void", "void", "saveAsBitmap", "QString", "path", "const", "char", "format", "nullptr", "to", "void", "saveAsBitmap", "QString", "path", "const", "char", "format", "nullptr", "double", "scaler", "NUMBER", "bool", "transparent", "false", "The", "file", "saved", "by", "the", "_saveAsBitmap_", "function", "be", "according", "to", "the", "scaling", "factor", "and", "transparent", "or", "not", "option", "selected", "by", "the", "user", "NUMBER", "In", "_src", "widgets", "DisassemblerGraphView", "NUMBER", "cpp", "_", "in", "function", "_DisassemblerGraphView", "exportGraph_", "two", "variables", "be", "assigned", "the", "current", "value", "of", "both", "_bitmapGraphExportScale_", "and", "_bitmapGraphExportTransparency_", "NUMBER", "These", "variables", "be", "pass", "argument", "if", "the", "graph", "be", "export", "in", "bitmap", "format", "NUMBER", "Changes", "and", "additions", "I", "doubt", "if", "I", "should", "make", "NUMBER", "Making", "the", "background", "for", "the", "transparent", "export", "as", "jpg", "white", "instead", "of", "black", "NUMBER", "NUMBER", "Making", "the", "popup", "dialog", "to", "choose", "scaling", "factor", "and", "transparency", "after", "clicking", "save", "in", "bitmap", "format", "everytime", "along", "with", "don", "t", "repeat", "this", "dialog", "option", "NUMBER", "karliss", "Will", "definitely", "create", "a", "PR", "for", "future", "issue", "that", "I", "will", "work", "on", "rather", "than", "make", "such", "a", "detailed", "description", "of", "code", "change", "in", "Issue", "NUMBER", "Thanks", "for", "telling", "me", "this", "Instead", "of", "white", "or", "black", "you", "could", "ignore", "the", "transparency", "option", "This", "was", "also", "an", "option", "I", "will", "change", "code", "for", "this", "and", "then", "create", "a", "PR", "NUMBER", "Forgot", "to", "mention", "here", "I", "had", "made", "a", "PR", "LINK", "a", "few", "hours", "ago", "NUMBER", "Environment", "information", "Operating", "System", "Arch", "Linux", "Cutter", "version", "NUMBER", "Obtained", "from", "Built", "from", "source", "x", "Downloaded", "from", "release", "Distribution", "repository", "File", "format", "AppImage", "Describe", "the", "bug", "Was", "trying", "to", "debug", "embedded", "firmware", "run", "on", "an", "stm", "NUMBER", "via", "st", "link", "NUMBER", "It", "crashed", "when", "connecting", "to", "the", "remote", "gdb", "server", "provide", "by", "st", "util", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "binary", "NUMBER", "Connect", "to", "remote", "gdb", "server", "provide", "by", "st", "util", "NUMBER", "See", "error", "Expected", "behavior", "No", "crash", "Screenshots", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "ea", "NUMBER", "fa", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "png", "Additional", "context", "dump", "NUMBER", "zip", "LINK", "Thanks", "for", "report", "this", "issue", "Looking", "at", "the", "crash", "dump", "Cutter", "attempted", "to", "refresh", "all", "function", "after", "the", "firmware", "image", "was", "rebased", "and", "crashed", "in", "r", "NUMBER", "while", "listing", "function", "variables", "NUMBER", "I", "couldn", "t", "reproduce", "the", "issue", "after", "connecting", "to", "an", "ARM", "qemu", "with", "a", "linux", "kernel", "image", "from", "buildroot", "didn", "t", "emulate", "the", "exact", "same", "CPU", "as", "STM", "NUMBER", "though", "NUMBER", "Some", "steps", "that", "you", "can", "take", "to", "help", "us", "look", "into", "this", "Run", "gdbserver", "provide", "by", "st", "util", "with", "remote", "debug", "if", "it", "s", "available", "and", "send", "the", "output", "this", "will", "print", "all", "the", "remote", "commands", "from", "and", "to", "Cutter", "and", "will", "help", "determine", "if", "something", "be", "miss", "on", "that", "level", "Share", "the", "firmware", "image", "or", "a", "similar", "one", "NUMBER", "Do", "you", "think", "that", "it", "will", "work", "in", "qemu", "stm", "NUMBER", "Last", "time", "I", "checked", "most", "peripheries", "weren", "t", "implement", "so", "I", "be", "not", "sure", "if", "serial", "debugging", "would", "be", "expose", "but", "I", "can", "try", "NUMBER", "Can", "also", "just", "run", "it", "in", "a", "regular", "qemu", "arm", "with", "the", "same", "architecture", "and", "see", "what", "happens", "NUMBER", "Try", "to", "open", "the", "firmware", "image", "in", "radare", "NUMBER", "analyze", "it", "and", "then", "use", "e", "cfg", "NUMBER", "debug", "true", "oodf", "gdb", "ip", "port", "to", "connect", "to", "gdbserver", "and", "see", "if", "it", "works", "NUMBER", "Find", "a", "way", "to", "debug", "with", "the", "gdbserver", "on", "your", "system", "maybe", "something", "be", "miss", "in", "st", "link", "s", "implementation", "I", "can", "get", "a", "crash", "with", "gdb", "on", "desktop", "use", "hello", "world", "executable", "gdbserver", "NUMBER", "NUMBER", "a", "connect", "to", "gdbserver", "use", "Cutter", "Continue", "Program", "has", "exited", "Ok", "Click", "the", "red", "square", "button", "crash", "Can", "t", "repeat", "it", "anymore", "maybe", "I", "did", "something", "not", "include", "in", "the", "steps", "above", "NUMBER", "The", "report", "issue", "mentions", "instantly", "crash", "after", "connect", "and", "from", "the", "stacktrace", "it", "seems", "that", "the", "crash", "be", "relate", "to", "the", "fact", "that", "the", "target", "be", "ARM", "NUMBER", "Should", "make", "a", "separate", "issue", "for", "crash", "after", "stop", "can", "t", "reproduce", "either", "NUMBER", "Hi", "ForsakenHarmony", "Thanks", "for", "report", "this", "to", "us", "NUMBER", "If", "possible", "can", "you", "please", "follow", "the", "steps", "suggested", "by", "yossizap", "so", "we", "will", "be", "able", "to", "troubleshoot", "it", "better", "We", "would", "be", "happy", "to", "fix", "crashes", "as", "soon", "as", "possible", "Thank", "you", "very", "much", "ITAYC", "NUMBER", "HEN", "I", "get", "the", "same", "result", "with", "debugging", "armv", "NUMBER", "executable", "on", "linux", "with", "gdb", "server", "NUMBER", "Will", "try", "to", "give", "you", "more", "info", "about", "it", "Sorry", "I", "haven", "t", "had", "time", "to", "try", "again", "so", "far", "Hmm", "I", "can", "t", "reproduce", "it", "on", "the", "machine", "I", "m", "on", "right", "now", "different", "one", "than", "where", "I", "originally", "tried", "it", "or", "it", "was", "fix", "in", "NUMBER", "One", "more", "option", "for", "reasonable", "behavior", "be", "the", "matching", "position", "after", "rebase", "NUMBER", "I", "meant", "the", "same", "position", "as", "before", "debugging", "ended", "NUMBER", "It", "might", "not", "work", "as", "well", "as", "I", "thought", "as", "position", "be", "already", "bad", "when", "program", "exits", "before", "you", "stop", "debugging", "NUMBER", "Probably", "font", "propagation", "again", "NUMBER", "It", "would", "nice", "to", "figure", "out", "cleaner", "way", "of", "dealing", "with", "than", "make", "sure", "we", "reload", "fonts", "after", "widget", "gets", "add", "to", "parent", "or", "parent", "font", "be", "change", "NUMBER", "Only", "slightly", "relate", "but", "we", "should", "probably", "use", "QFontDatabase", "systemFont", "QFontDatabase", "FixedFont", "as", "default", "fix", "size", "font", "when", "Cutter", "settings", "be", "empty", "NUMBER", "Some", "observations", "After", "waiting", "a", "while", "Cutter", "ended", "up", "in", "md", "NUMBER", "_sse_transform", "function", "which", "consists", "of", "single", "gigantic", "basic", "block", "NUMBER", "That", "could", "trigger", "a", "worst", "case", "scenario", "in", "an", "algorithm", "not", "expecting", "blocks", "that", "large", "NUMBER", "Seeking", "to", "this", "function", "directly", "was", "slow", "but", "not", "as", "slow", "there", "might", "be", "other", "parts", "cause", "problem", "NUMBER", "Graph", "navigation", "use", "mouse", "drag", "in", "md", "NUMBER", "_sse_transform", "be", "slow", "but", "becomes", "faster", "when", "zooming", "out", "and", "text", "isn", "t", "rendered", "NUMBER", "Probably", "need", "to", "improve", "rendering", "code", "so", "that", "it", "directly", "calculates", "which", "line", "be", "first", "one", "inside", "screen", "without", "iterating", "over", "all", "of", "them", "NUMBER", "Shouldn", "t", "be", "too", "difficult", "NUMBER", "How", "do", "cutter", "ends", "up", "there", "when", "double", "clicking", "on", "reference", "to", "string", "I", "add", "some", "breakpoints", "and", "loadCurrent", "graph", "seems", "to", "be", "triggered", "more", "than", "once", "when", "doing", "single", "seek", "NUMBER", "How", "do", "cutter", "ends", "up", "there", "when", "double", "clicking", "on", "reference", "to", "string", "R", "NUMBER", "report", "that", "there", "be", "two", "Data", "xrefs", "from", "NUMBER", "x", "NUMBER", "this", "can", "be", "easily", "confirmed", "use", "xrefs", "widget", "NUMBER", "Second", "one", "be", "to", "string", "but", "first", "one", "which", "be", "use", "for", "double", "click", "be", "to", "sym", "NUMBER", "md", "NUMBER", "_sse_transform", "NUMBER", "NUMBER", "x", "NUMBER", "ea", "NUMBER", "At", "least", "one", "of", "the", "causes", "for", "loadCurrent", "graph", "call", "twice", "be", "overview", "widget", "NUMBER", "That", "could", "be", "optimized", "as", "we", "be", "copying", "a", "bunch", "of", "data", "from", "main", "graph", "view", "anyway", "might", "as", "well", "reuse", "more", "of", "it", "NUMBER", "Looks", "like", "there", "be", "NUMBER", "problem", "Weird", "xref", "at", "NUMBER", "x", "NUMBER", "report", "by", "r", "NUMBER", "Jumping", "to", "function", "with", "gigantic", "basic", "block", "be", "slow", "Some", "of", "the", "work", "when", "jumping", "to", "function", "be", "do", "multiple", "times", "exaggerating", "previous", "problem", "NUMBER", "x", "NUMBER", "s", "spent", "update", "graph", "out", "of", "which", "NUMBER", "be", "inside", "agJ", "NUMBER", "The", "variable", "substitution", "in", "r_parse_varsub", "parse_x", "NUMBER", "_pseudo", "NUMBER", "c", "varsub", "build", "and", "iterates", "over", "the", "list", "of", "all", "function", "variables", "for", "each", "instruction", "NUMBER", "So", "the", "total", "complexity", "be", "at", "least", "number_of_instructions", "number_of_function_variables", "possibly", "worse", "if", "some", "non", "trivial", "operation", "be", "performed", "for", "each", "of", "the", "variables", "NUMBER", "Instruction", "analysis", "already", "finds", "what", "variables", "be", "referred", "in", "NUMBER", "different", "formats", "src", "dest", "opex", "var", "looks", "like", "it", "can", "currently", "contain", "reference", "to", "single", "variable", "probably", "can", "be", "extend", "to", "The", "most", "realistic", "approach", "for", "improving", "performance", "be", "to", "use", "or", "extend", "one", "of", "the", "mechanisms", "above", "for", "creating", "list", "of", "only", "those", "variables", "that", "be", "use", "by", "each", "instruction", "and", "try", "to", "do", "string", "replacement", "only", "for", "those", "NUMBER", "In", "ideal", "case", "it", "would", "be", "do", "directly", "in", "assembly", "printer", "directly", "or", "by", "having", "assembly", "printer", "generate", "annotations", "indicating", "which", "range", "of", "string", "refers", "to", "what", "NUMBER", "Doesn", "t", "seem", "like", "capstone", "support", "that", "and", "r", "NUMBER", "shouldn", "t", "try", "to", "implement", "it", "s", "own", "assembly", "printer", "from", "instruction", "description", "NUMBER", "Environment", "information", "Operating", "System", "Ubuntu", "NUMBER", "VM", "Cutter", "version", "NUMBER", "AppImage", "Obtained", "from", "x", "Downloaded", "from", "release", "File", "format", "ELF", "NUMBER", "Describe", "the", "bug", "I", "be", "work", "on", "a", "NUMBER", "Mb", "binary", "file", "NUMBER", "When", "I", "save", "the", "project", "the", "newly", "created", "rc", "file", "be", "NUMBER", "Mb", "When", "attempting", "to", "open", "the", "project", "again", "cutter", "freezes", "and", "attempt", "to", "force", "quit", "due", "to", "unresponsiveness", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "a", "NUMBER", "Mb", "ELF", "NUMBER", "file", "NUMBER", "Save", "the", "project", "NUMBER", "NUMBER", "Attempt", "to", "open", "the", "saved", "project", "NUMBER", "NUMBER", "cutter", "freezes", "Expected", "behavior", "Cutter", "be", "expected", "to", "open", "the", "project", "Additional", "context", "I", "really", "like", "cutter", "I", "find", "it", "amazing", "NUMBER", "I", "really", "hope", "this", "functionality", "will", "work", "properly", "NUMBER", "It", "be", "know", "that", "current", "project", "implementation", "be", "quite", "problematic", "NUMBER", "New", "project", "saving", "mechanism", "be", "currently", "be", "write", "from", "zero", "NUMBER", "Gotcha", "thank", "you", "NUMBER", "Built", "from", "source", "should", "include", "r", "NUMBER", "and", "cutter", "git", "hashes", "TAG", "Detailed", "description", "Convert", "breakpoint", "widget", "to", "AddressableItemWidget", "When", "selecting", "multiple", "breakpoints", "and", "pressing", "delete", "key", "delete", "all", "of", "them", "Allow", "toggling", "breakpoint", "trace", "and", "active", "properties", "by", "doublicking", "them", "in", "table", "Test", "plan", "required", "start", "debuging", "Create", "a", "few", "breakpoints", "doubleclick", "a", "breakpoint", "in", "breakpoint", "widget", "make", "sure", "seek", "works", "rightclick", "an", "item", "in", "breakpoint", "widget", "it", "should", "contain", "actions", "from", "AddResableItem", "widget", "and", "toggle", "delete", "actions", "NUMBER", "test", "at", "least", "one", "AddressableItemWidget", "action", "use", "menu", "and", "keyboard", "shortcut", "test", "that", "toggle", "use", "space", "and", "menu", "works", "test", "that", "deleting", "single", "breakpoint", "works", "use", "menu", "button", "keyboard", "test", "that", "deleting", "multiple", "selected", "breakpoints", "work", "Part", "NUMBER", "start", "debuging", "create", "NUMBER", "breakpoints", "disable", "first", "one", "by", "double", "clicking", "active", "column", "enable", "trace", "mode", "for", "second", "breakpoint", "by", "double", "click", "in", "trace", "column", "verify", "that", "breakpoint", "state", "report", "by", "dbj", "matches", "previous", "actions", "resume", "executable", "by", "pressing", "continue", "make", "sure", "debugger", "stops", "on", "third", "breakpoint", "and", "printed", "trace", "message", "for", "second", "one", "TAG", "Observed", "issue", "Changing", "trace", "property", "for", "first", "breakpoint", "doesn", "t", "work", "NUMBER", "Due", "to", "r", "NUMBER", "sharing", "logic", "for", "handle", "address", "and", "index", "argument", "in", "db", "command", "NUMBER", "Need", "to", "create", "an", "issue", "for", "that", "NUMBER", "When", "breakpoint", "be", "disabled", "it", "be", "still", "triggered", "and", "printed", "in", "console", "but", "automatically", "continued", "NUMBER", "Not", "sure", "if", "this", "be", "intended", "behavior", "or", "not", "NUMBER", "I", "expected", "disabled", "breakpoint", "not", "to", "be", "triggered", "at", "all", "NUMBER", "What", "happens", "when", "it", "has", "command", "asigned", "Closing", "issue", "TAG", "Test", "plan", "completed", "NUMBER", "NUMBER", "It", "be", "triggering", "a", "full", "reload", "which", "causes", "loss", "of", "focus", "NUMBER", "It", "shouldn", "t", "be", "difficult", "to", "avoid", "that", "NUMBER", "NUMBER", "I", "don", "t", "think", "it", "s", "necessary", "NUMBER", "x", "NUMBER", "dbg", "doesn", "t", "ask", "either", "NUMBER", "weird", "NUMBER", "Do", "you", "know", "if", "the", "memory", "be", "change", "to", "int", "NUMBER", "CC", "because", "if", "so", "it", "be", "problematic", "I", "think", "they", "do", "NUMBER", "All", "the", "other", "mechanisms", "that", "I", "can", "think", "of", "for", "them", "be", "triggered", "and", "printed", "in", "console", "would", "be", "even", "worse", "NUMBER", "yossizap", "Keyboard", "shortcut", "ambiguity", "needs", "to", "be", "fix", "NUMBER", "What", "other", "widgets", "did", "you", "have", "opened", "As", "for", "additional", "suggestions", "they", "be", "more", "or", "less", "in", "the", "spec", "NUMBER", "What", "other", "widgets", "did", "you", "have", "opened", "Default", "debug", "widgets", "processes", "flags", "NUMBER", "Seems", "that", "closing", "flags", "solve", "the", "issue", "NUMBER", "Environment", "information", "Operating", "System", "Any", "Cutter", "version", "NUMBER", "File", "format", "Any", "Describe", "the", "bug", "Settings", "currently", "contains", "Show", "jump", "lines", "asm", "NUMBER", "lines", "option", "NUMBER", "Since", "Cutter", "has", "it", "s", "own", "mechanism", "for", "drawing", "them", "this", "option", "currently", "do", "nothing", "NUMBER", "Expected", "behavior", "One", "of", "the", "two", "Show", "jump", "lines", "affects", "jump", "lines", "drawn", "by", "Cutter", "Show", "jump", "lines", "option", "be", "remove", "from", "Cutter", "settings", "karliss", "what", "do", "you", "think", "I", "suggest", "to", "enable", "it", "by", "default", "r", "NUMBER", "already", "do", "it", "for", "us", "and", "remove", "from", "preferences", "I", "be", "fine", "with", "remove", "the", "option", "and", "leaving", "it", "to", "r", "NUMBER", "default", "value", "except", "in", "widgets", "where", "we", "need", "to", "override", "it", "NUMBER", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "Make", "sure", "graph", "cache", "be", "reenabled", "Environments", "Linux", "qt", "wayland", "heavy_check_mark", "Linux", "xcb", "backend", "heavy_check_mark", "slightly", "blurry", "probably", "qt", "xwayland", "limitation", "Windows", "heavy_check_mark", "macOS", "heavy_check_mark", "Things", "to", "test", "Test", "with", "two", "displays", "one", "with", "scaling", "factor", "NUMBER", "other", "NUMBER", "or", "NUMBER", "if", "support", "by", "OS", "NUMBER", "Scaling", "factor", "set", "in", "OS", "display", "configuration", "for", "each", "monitor", "NUMBER", "After", "dragging", "to", "other", "screen", "try", "change", "global", "scaling", "factor", "ctrl", "ctrl", "with", "focus", "in", "disassembly", "widget", "In", "graph", "right", "click", "inside", "and", "outside", "block", "context", "menu", "content", "should", "change", "Zoom", "use", "mousewheel", "zoom", "should", "focus", "to", "mouse", "cursor", "position", "Text", "size", "in", "context", "menu", "and", "top", "menu", "bar", "should", "match", "the", "scaling", "in", "properly", "scaled", "system", "software", "like", "file", "browser", "text", "size", "relative", "to", "button", "size", "shouldn", "t", "change", "when", "switching", "between", "screens", "hexwidget", "drawing", "isn", "t", "broken", "TAG", "Closing", "issue", "Closes", "NUMBER", "close", "NUMBER", "TAG", "dukeBarman", "said", "that", "on", "macOS", "it", "works", "NUMBER", "There", "be", "some", "issue", "with", "zoom", "shortcut", "handle", "but", "that", "s", "a", "separate", "problem", "NUMBER", "Yeap", "I", "ve", "created", "a", "issue", "LINK", "Environment", "information", "Operating", "System", "Win", "NUMBER", "Cutter", "version", "NUMBER", "File", "format", "PE", "NUMBER", "I", "get", "the", "following", "issue", "when", "trying", "to", "debug", "a", "exe", "with", "a", "space", "in", "the", "folder", "path", "TAG", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "cb", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "acd", "bf", "NUMBER", "fefbe", "NUMBER", "e", "NUMBER", "png", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "open", "a", "file", "on", "your", "desktop", "having", "a", "space", "in", "your", "folder", "NUMBER", "Click", "on", "debug", "NUMBER", "See", "error", "Well", "even", "without", "spaces", "NUMBER", "an", "dll", "the", "root", "of", "the", "drive", "c", "it", "give", "the", "same", "issue", "without", "the", "space", "naming", "issue", "NUMBER", "It", "s", "only", "a", "display", "issue", "NUMBER", "it", "s", "occur", "when", "trying", "a", "debug", "a", "pe", "DLL", "NUMBER", "bad", "habit", "from", "x", "NUMBER", "dbg", "NUMBER", "That", "would", "be", "appropriate", "since", "dlls", "can", "t", "be", "executed", "in", "Cutter", "atm", "Environment", "information", "Operating", "System", "Windows", "NUMBER", "Version", "NUMBER", "Cutter", "version", "NUMBER", "File", "format", "PE", "DLL", "x", "NUMBER", "Describe", "the", "bug", "Right", "click", "options", "don", "t", "produce", "any", "results", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Right", "click", "Add", "comment", "or", "set", "immediate", "base", "Expected", "behavior", "Right", "click", "options", "works", "Screenshots", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cd", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "cdd", "NUMBER", "a", "NUMBER", "b", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "ffd", "NUMBER", "cc", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "png", "and", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "a", "NUMBER", "cda", "NUMBER", "d", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "png", "via", "Th", "NUMBER", "nat", "NUMBER", "s", "Damn", "NUMBER", "reopened", "cannot", "reproduce", "ill", "try", "Can", "t", "reproduce", "Th", "NUMBER", "nat", "NUMBER", "s", "did", "you", "experience", "this", "issue", "again", "I", "couldn", "t", "reproduce", "Hey", "Th", "NUMBER", "nat", "NUMBER", "s", "I", "still", "can", "t", "reproduce", "it", "NUMBER", "I", "will", "close", "this", "issue", "for", "now", "please", "let", "us", "know", "if", "it", "happen", "again", "thank", "you", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "NUMBER", "delete", "Cutter", "NUMBER", "in", "NUMBER", "open", "Cutter", "NUMBER", "NUMBER", "open", "Cutter", "with", "fix", "NUMBER", "observe", "that", "threads", "and", "process", "widgets", "be", "not", "opened", "NUMBER", "switch", "to", "debug", "mode", "NUMBER", "make", "sure", "its", "possible", "to", "open", "thread", "and", "process", "widgets", "TAG", "TAG", "Closing", "issue", "Closes", "NUMBER", "TAG", "yossizap", "Did", "you", "do", "the", "step", "NUMBER", "I", "you", "have", "saved", "a", "config", "with", "new", "widgets", "opened", "they", "will", "not", "be", "remove", "NUMBER", "Test", "plan", "Specify", "F", "something", "with", "and", "without", "A", "something", "and", "see", "if", "the", "format", "be", "use", "NUMBER", "Help", "be", "automatically", "generate", "by", "Qt", "Bildschirmfoto", "vom", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "ffaf", "NUMBER", "ca", "NUMBER", "d", "NUMBER", "png", "I", "think", "that", "should", "generally", "be", "enough", "for", "users", "who", "start", "Cutter", "from", "the", "command", "line", "with", "extra", "args", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Add", "the", "option", "to", "color", "code", "highlights", "in", "the", "hexdumps", "like", "it", "be", "possible", "to", "highlight", "blocks", "in", "the", "graph", "view", "NUMBER", "Additional", "context", "This", "be", "a", "helpful", "tool", "for", "RE", "NUMBER", "I", "m", "not", "the", "best", "with", "UI", "design", "but", "I", "tried", "showing", "what", "I", "was", "thinking", "about", "NUMBER", "If", "you", "select", "a", "portion", "of", "the", "hexdump", "you", "can", "right", "click", "and", "be", "presented", "with", "the", "color", "picker", "NUMBER", "This", "would", "set", "the", "background", "of", "the", "font", "in", "the", "hexdump", "to", "the", "chosen", "color", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "d", "NUMBER", "png", "What", "I", "think", "that", "hexdump", "should", "support", "multilevel", "nested", "highlights", "NUMBER", "Basically", "to", "allow", "the", "multiple", "parts", "of", "the", "hexdump", "to", "be", "highlight", "these", "areas", "can", "overlap", "and", "be", "nested", "and", "the", "colors", "should", "be", "mix", "properly", "whenever", "these", "areas", "overlap", "NUMBER", "Long", "time", "ago", "I", "was", "work", "on", "the", "bvi", "fork", "call", "bvim", "LINK", "with", "the", "ability", "to", "be", "scripted", "with", "Lua", "and", "programmatic", "highlight", "selection", "creation", "LINK", "L", "NUMBER", "LINK", "I", "think", "the", "feature", "to", "highlight", "an", "un", "highlight", "with", "different", "colors", "should", "be", "also", "available", "from", "the", "plugins", "and", "Python", "API", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "fac", "NUMBER", "a", "NUMBER", "f", "NUMBER", "png", "The", "new", "docks", "fall", "into", "this", "category", "NUMBER", "LINK", "L", "NUMBER", "L", "NUMBER", "Removing", "will", "work", "but", "I", "can", "t", "say", "anything", "about", "code", "injection", "NUMBER", "Can", "I", "just", "convert", "instructions", "to", "opcode", "first", "and", "then", "use", "wx", "First", "try", "to", "verify", "whether", "command", "injection", "be", "even", "possible", "there", "usually", "I", "add", "E", "hello", "world", "to", "test", "if", "something", "be", "printed", "to", "the", "console", "and", "means", "that", "command", "injected", "NUMBER", "If", "it", "be", "not", "a", "problem", "then", "everything", "works", "Can", "I", "work", "on", "this", "issue", "I", "m", "thinking", "of", "implement", "af", "TAG", "af", "TAG", "and", "maybe", "also", "a", "shortcut", "key", "for", "this", "NUMBER", "Intuitively", "where", "will", "the", "user", "search", "for", "their", "desired", "widget", "I", "be", "use", "to", "searching", "the", "windows", "menu", "for", "toggleable", "windows", "and", "the", "debug", "menu", "for", "debug", "actions", "that", "aren", "t", "shown", "in", "the", "toolbar", "NUMBER", "I", "would", "prefer", "having", "the", "same", "menu", "in", "both", "if", "that", "s", "possible", "NUMBER", "I", "don", "t", "mind", "having", "window", "toggles", "in", "Debug", "but", "I", "do", "want", "to", "keep", "every", "window", "toggleable", "from", "Windows", "NUMBER", "No", "objections", "against", "having", "it", "in", "both", "assuming", "it", "be", "as", "simple", "as", "I", "think", "it", "be", "NUMBER", "I", "like", "the", "way", "it", "be", "currently", "NUMBER", "Debugging", "windows", "be", "under", "windows", "debugging", "actions", "be", "under", "debug", "NUMBER", "It", "makes", "sense", "to", "me", "NUMBER", "If", "it", "implies", "code", "duplication", "yes", "I", "be", "against", "it", "NUMBER", "It", "takes", "NUMBER", "lines", "that", "I", "already", "write", "no", "code", "duplication", "NUMBER", "Should", "I", "make", "PR", "Environment", "information", "Operating", "System", "Linux", "Cutter", "version", "NUMBER", "af", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "af", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "File", "format", "ELF", "Describe", "the", "bug", "Triggering", "breakpoint", "with", "secondary", "thread", "causes", "UI", "to", "freeze", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "compile", "test", "program", "g", "o", "a", "a", "NUMBER", "cpp", "pthread", "NUMBER", "open", "test", "executable", "NUMBER", "start", "debugging", "NUMBER", "insert", "breakpoint", "in", "thread_func", "NUMBER", "continue", "NUMBER", "observe", "main", "thread", "gets", "stopped", "NUMBER", "try", "switching", "to", "one", "of", "secondary", "threads", "observe", "that", "gui", "freezes", "Expected", "behavior", "GUI", "doesn", "t", "freeze", "NUMBER", "When", "breakpoint", "gets", "triggered", "by", "a", "thread", "cutter", "switches", "to", "thread", "that", "triggered", "it", "NUMBER", "Additional", "context", "Test", "program", "include", "TAG", "include", "TAG", "void", "thread_func", "int", "NUMBER", "_t", "counter", "NUMBER", "while", "true", "counter", "if", "counter", "NUMBER", "LL", "NUMBER", "std", "cout", "TAG", "linux_stop_thread", "waiting", "for", "thread", "to", "stop", "NUMBER", "Not", "sure", "what", "happens", "to", "Qt", "event", "loop", "NUMBER", "My", "initial", "guess", "was", "one", "of", "the", "GUI", "update", "be", "waiting", "for", "r", "NUMBER", "lock", "which", "be", "blocked", "by", "task", "doing", "waitpid", "but", "I", "didn", "t", "saw", "any", "threads", "with", "Qt", "event", "loop", "in", "stacktrace", "NUMBER", "Repeating", "it", "second", "time", "I", "saw", "what", "I", "expected", "GUI", "trying", "to", "refresh", "information", "waiting", "on", "r", "NUMBER", "lock", "task", "thread", "waiting", "for", "debugged", "thread", "to", "stop", "NUMBER", "Can", "a", "thread", "be", "stopped", "if", "it", "be", "already", "stopped", "due", "to", "other", "reasons", "Small", "note", "test", "and", "this", "doesn", "t", "happen", "in", "windows", "NUMBER", "Thanks", "for", "debugging", "and", "trying", "to", "reproduce", "the", "issue", "Can", "a", "thread", "be", "stopped", "if", "it", "be", "already", "stopped", "due", "to", "other", "reasons", "You", "be", "supposed", "to", "be", "able", "to", "queue", "multiple", "signals", "NUMBER", "You", "ll", "have", "SIGSTOP", "and", "SIGTRAP", "waiting", "for", "the", "debugging", "process", "to", "handle", "NUMBER", "Not", "sure", "why", "it", "doesn", "t", "receive", "any", "one", "of", "those", "NUMBER", "linux_select", "So", "it", "do", "try", "to", "switch", "to", "the", "breakpoint", "NUMBER", "I", "remember", "this", "work", "while", "we", "were", "work", "on", "the", "ThreadsWidget", "so", "it", "must", "be", "some", "regression", "due", "to", "attach", "change", "NUMBER", "Yeah", "this", "be", "probably", "specific", "to", "Linux", "native", "debug", "backend", "NUMBER", "I", "just", "notice", "dbg", "NUMBER", "reads", "Stop", "all", "threads", "when", "debugger", "breaks", "see", "dbg", "NUMBER", "forks", "option", "which", "be", "false", "by", "default", "NUMBER", "I", "wonder", "how", "can", "it", "work", "reliably", "without", "stopping", "all", "threads", "when", "breakpoint", "be", "hit", "and", "user", "debugger", "be", "poking", "process", "memory", "and", "change", "breakpoints", "while", "some", "of", "the", "threads", "be", "run", "NUMBER", "Didn", "t", "notice", "any", "difference", "after", "enabling", "it", "but", "there", "might", "be", "more", "than", "one", "problem", "NUMBER", "I", "wonder", "how", "can", "it", "work", "reliably", "without", "stopping", "all", "threads", "when", "breakpoint", "be", "hit", "Yep", "and", "dbg", "NUMBER", "reads", "be", "only", "in", "use", "in", "windows", "debug", "NUMBER", "Another", "issue", "be", "that", "unless", "dbg", "NUMBER", "trace_clone", "be", "enable", "the", "debugger", "won", "t", "even", "attach", "after", "clone", "and", "configure", "a", "new", "thread", "NUMBER", "I", "start", "work", "on", "a", "refactor", "before", "the", "release", "and", "didn", "t", "have", "time", "since", "should", "finish", "it", "by", "this", "weekend", "NUMBER", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "Screenshot", "default", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "ea", "NUMBER", "da", "NUMBER", "a", "NUMBER", "b", "NUMBER", "b", "NUMBER", "png", "Screenshot", "resized", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "ea", "NUMBER", "da", "NUMBER", "aa", "NUMBER", "fe", "NUMBER", "f", "NUMBER", "png", "Closing", "issue", "Closes", "NUMBER", "Detailed", "description", "The", "sizes", "in", "formatBytes", "were", "wrong", "which", "meant", "that", "wrong", "sizes", "were", "display", "and", "it", "cause", "a", "crash", "when", "seek", "was", "set", "to", "UT", "NUMBER", "_MAX", "NUMBER", "Test", "plan", "required", "See", "that", "Cutter", "doesn", "t", "crash", "after", "Start", "debuging", "ls", "Click", "continue", "until", "process", "exits", "Click", "View", "Refresh", "contents", "or", "do", "step", "NUMBER", "while", "continue", "be", "still", "in", "progress", "Closing", "issue", "close", "NUMBER", "but", "if", "Ubuntu", "NUMBER", "won", "t", "support", "it", "then", "I", "d", "rather", "fix", "it", "NUMBER", "Sounds", "like", "we", "should", "fix", "it", "for", "now", "Environment", "information", "Operating", "System", "Arch", "Linux", "Cutter", "version", "NUMBER", "af", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "af", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "File", "format", "ELF", "I", "compiled", "cutter", "use", "the", "instruction", "LINK", "with", "cmake", "NUMBER", "I", "tried", "to", "analyze", "ret", "NUMBER", "win", "NUMBER", "bit", "binary", "LINK", "but", "it", "crashes", "after", "I", "try", "to", "seek", "to", "a", "function", "NUMBER", "error", "qt", "NUMBER", "qpa", "NUMBER", "xcb", "QXcbConnection", "XCB", "error", "NUMBER", "BadMatch", "sequence", "NUMBER", "resource", "id", "NUMBER", "major", "code", "NUMBER", "Unknown", "minor", "code", "NUMBER", "cutter", "crash", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "NUMBER", "eb", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "da", "NUMBER", "f", "NUMBER", "f", "NUMBER", "gif", "I", "tried", "to", "recompile", "cutter", "with", "the", "latest", "build", "use", "cmake", "NUMBER", "bb", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ca", "NUMBER", "db", "NUMBER", "and", "now", "it", "doesn", "t", "crash", "Environment", "information", "Operating", "System", "Linux", "Cutter", "version", "NUMBER", "af", "NUMBER", "f", "File", "format", "ELF", "Describe", "the", "bug", "TAG", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Start", "debuging", "NUMBER", "Right", "click", "a", "line", "and", "toggle", "breakpoint", "use", "context", "menu", "NUMBER", "Use", "arrows", "or", "j", "k", "to", "confirm", "that", "disassembly", "window", "has", "keyboard", "focus", "NUMBER", "Try", "add", "breakpoint", "use", "F", "NUMBER", "observe", "that", "it", "doesn", "t", "get", "add", "Expected", "behavior", "Shortcut", "for", "toggling", "breakpoint", "indicated", "in", "context", "menu", "works", "NUMBER", "The", "same", "problem", "affects", "graph", "window", "NUMBER", "Can", "t", "reproduce", "NUMBER", "Works", "for", "me", "in", "graph", "and", "disassembly", "view", "Ubuntu", "NUMBER", "I", "will", "recheck", "this", "later", "this", "evening", "maybe", "it", "requires", "open", "certain", "set", "of", "widgets", "NUMBER", "Everything", "be", "fine", "NUMBER", "I", "had", "pressed", "f", "lock", "NUMBER", "Detailed", "description", "Previously", "you", "could", "search", "in", "boundaries", "that", "weren", "t", "properly", "configured", "in", "debug", "mode", "and", "freeze", "Cutter", "NUMBER", "That", "also", "meant", "previously", "typed", "searches", "most", "types", "would", "freeze", "Cutter", "when", "debug", "start", "NUMBER", "Test", "plan", "required", "Search", "in", "all", "available", "categories", "when", "in", "and", "out", "of", "debug", "mode", "NUMBER", "TAG", "Detailed", "description", "NUMBER", "Implemented", "extend", "menu", "of", "strings", "for", "the", "Disassembler", "widget", "with", "Autodetection", "method", "Remove", "current", "defined", "string", "Define", "string", "by", "address", "size", "type", "Used", "ps", "TAG", "for", "the", "string", "size", "prediction", "NUMBER", "Test", "plan", "required", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ee", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "fdea", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "db", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "fd", "NUMBER", "d", "NUMBER", "e", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dda", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "de", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "png", "TAG", "TAG", "Closing", "issue", "TAG", "Will", "it", "be", "ready", "for", "the", "upcoming", "release", "It", "s", "up", "to", "Properrr", "I", "think", "there", "be", "only", "a", "few", "function", "to", "document", "and", "that", "s", "it", "XVilka", "xarkes", "Do", "I", "need", "to", "add", "more", "comments", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "By", "now", "all", "header", "file", "won", "t", "be", "install", "into", "system", "path", "like", "usr", "include", "for", "example", "so", "if", "any", "plugin", "has", "to", "compile", "the", "source", "code", "it", "needs", "Cutter", "source", "code", "the", "whole", "project", "code", "Describe", "the", "solution", "you", "d", "like", "Install", "headers", "in", "usr", "include", "or", "whatever", "system", "has", "so", "plugins", "can", "use", "the", "headers", "to", "compile", "the", "source", "as", "same", "as", "current", "radare", "NUMBER", "i", "believe", "Describe", "alternatives", "you", "ve", "considered", "Debian", "packaging", "should", "set", "the", "libradare", "NUMBER", "cutter", "dev", "or", "something", "like", "that", "for", "the", "header", "Additional", "context", "TAG", "I", "also", "need", "this", "to", "package", "r", "NUMBER", "ghidra", "cutter", "plugin", "in", "Fedora", "NUMBER", "I", "may", "try", "to", "fix", "this", "issue", "in", "the", "next", "days", "NUMBER", "ret", "NUMBER", "libc", "Note", "that", "currently", "there", "be", "no", "proper", "install", "target", "for", "cmake", "NUMBER", "So", "it", "s", "a", "bit", "more", "work", "than", "add", "headers", "to", "the", "list", "of", "file", "that", "need", "to", "be", "install", "NUMBER", "I", "also", "need", "this", "to", "package", "r", "NUMBER", "ghidra", "cutter", "plugin", "in", "Fedora", "NUMBER", "I", "may", "try", "to", "fix", "this", "issue", "in", "the", "next", "days", "NUMBER", "Hi", "ret", "NUMBER", "libc", "NUMBER", "By", "now", "you", "can", "package", "r", "NUMBER", "ghidra", "by", "copying", "NUMBER", "folders", "in", "Cutter", "source", "code", "into", "r", "NUMBER", "ghidra", "and", "generate", "build", "rules", "NUMBER", "Source", "code", "folders", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "NUMBER", "bdd", "NUMBER", "b", "NUMBER", "c", "NUMBER", "png", "My", "compile", "flags", "i", "be", "build", "for", "Parrot", "OS", "debian", "base", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "fdf", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "fd", "NUMBER", "af", "NUMBER", "bd", "NUMBER", "png", "Detailed", "description", "Up", "until", "now", "only", "a", "part", "of", "the", "widgets", "were", "rebased", "primarily", "by", "accident", "because", "they", "connected", "to", "seekUpdated", "or", "refreshCodeView", "NUMBER", "This", "change", "covers", "all", "relevant", "widgets", "Tell", "me", "if", "I", "miss", "something", "except", "for", "Search", "which", "needs", "fix", "on", "r", "NUMBER", "s", "level", "and", "would", "freeze", "with", "this", "change", "NUMBER", "Test", "plan", "required", "Start", "native", "remote", "attach", "debug", "on", "any", "PIE", "binary", "and", "check", "the", "following", "for", "each", "widget", "Functions", "Breakpoints", "Strings", "Flags", "Comments", "Segments", "Sections", "Headers", "Exports", "Imports", "VTables", "Classes", "and", "Relocs", "All", "offsets", "seem", "to", "be", "correct", "If", "the", "text", "be", "selectable", "see", "if", "it", "sends", "you", "to", "the", "correct", "position", "in", "the", "code", "If", "you", "can", "create", "it", "before", "debug", "see", "if", "it", "be", "properly", "rebased", "afterwards", "and", "between", "sessions", "breakpoints", "have", "to", "do", "it", "manually", "through", "the", "widget", "if", "you", "re", "not", "in", "debug", "mode", "but", "you", "can", "check", "if", "it", "works", "between", "sessions", "comments", "Try", "those", "things", "across", "different", "sessions", "and", "see", "that", "everything", "stays", "the", "same", "between", "after", "debug", "Notes", "SearchWidget", "can", "t", "be", "update", "this", "way", "without", "freezing", "Cutter", "shouldn", "t", "be", "critical", "for", "this", "issue", "NUMBER", "We", "ll", "just", "add", "it", "s", "rebasing", "once", "search", "works", "in", "debug", "NUMBER", "Classes", "widget", "only", "rebases", "the", "member", "function", "r", "NUMBER", "issue", "ELF", "header", "symbols", "aren", "t", "rebased", "r", "NUMBER", "issue", "If", "it", "s", "some", "random", "info", "window", "and", "it", "isn", "t", "rebased", "just", "report", "it", "and", "we", "ll", "submit", "issue", "in", "r", "NUMBER", "to", "fix", "it", "later", "it", "doesn", "t", "really", "matter", "since", "people", "don", "t", "jump", "to", "ELF", "header", "properties", "while", "debugging", "NUMBER", "The", "important", "widgets", "that", "must", "work", "be", "Functions", "Strings", "Breakpoints", "Flags", "and", "Comments", "NUMBER", "Related", "issue", "Closes", "NUMBER", "Detailed", "description", "This", "PR", "resolve", "NUMBER", "by", "implement", "instruction", "highlight", "in", "disassembly", "view", "NUMBER", "Behaviour", "be", "the", "same", "as", "in", "graph", "view", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "NUMBER", "bbe", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "gif", "Test", "plan", "required", "NUMBER", "Disassembly", "Widget", "correctly", "calculates", "size", "of", "instructions", "NUMBER", "Highlighted", "instructions", "be", "properly", "synchronized", "between", "multiple", "widgets", "NUMBER", "Closing", "issue", "close", "NUMBER", "Edit", "I", "don", "t", "know", "why", "NUMBER", "was", "close", "NUMBER", "implement", "highlight", "in", "graph", "view", "without", "disassembly", "NUMBER", "NUMBER", "also", "request", "highlight", "in", "disassembly", "NUMBER", "Very", "nice", "NUMBER", "But", "please", "add", "support", "of", "highlight", "through", "python", "script", "NUMBER", "TAG", "Detailed", "description", "NUMBER", "When", "Enter", "be", "pressed", "while", "the", "user", "s", "cursor", "be", "on", "a", "potential", "location", "flag", "function", "address", "NUMBER", "Cutter", "will", "jump", "to", "this", "location", "NUMBER", "Similarly", "to", "what", "it", "do", "with", "double", "click", "NUMBER", "Test", "plan", "required", "alt", "text", "LINK", "NUMBER", "NUMBER", "NUMBER", "TE", "NUMBER", "La", "NUMBER", "gif", "TAG", "Closing", "issue", "close", "NUMBER", "TAG", "Hello", "thanks", "for", "the", "PR", "It", "would", "be", "great", "to", "also", "implement", "this", "for", "the", "graph", "view", "maybe", "it", "be", "worth", "checking", "the", "code", "here", "LINK", "L", "NUMBER", "and", "deduplicate", "the", "logic", "and", "put", "it", "in", "the", "CutterSeekable", "class", "xarkes", "I", "think", "that", "should", "be", "another", "PR", "NUMBER", "I", "have", "an", "idea", "how", "to", "implement", "cool", "navigation", "with", "a", "keyboard", "in", "the", "GraphWidget", "NUMBER", "As", "you", "can", "see", "it", "s", "be", "two", "weeks", "now", "that", "the", "build", "be", "broken", "NUMBER", "Check", "the", "build", "log", "here", "LINK", "From", "what", "I", "understand", "radare", "NUMBER", "fail", "to", "compile", "inside", "Docker", "because", "it", "fail", "to", "include", "this", "file", "p", "native", "linux", "linux_debug", "NUMBER", "c", "NUMBER", "NUMBER", "fatal", "error", "bits", "sigcontext", "NUMBER", "h", "No", "such", "file", "or", "directory", "NUMBER", "include", "TAG", "cc", "ps", "NUMBER", "you", "might", "want", "to", "take", "a", "look", "at", "it", "Heyo", "I", "will", "try", "to", "get", "this", "fix", "until", "Thursday", "NUMBER", "Cheers", "Original", "Message", "From", "xarkes", "TAG", "To", "radareorg", "cutter", "TAG", "Cc", "ps", "TAG", "Mention", "TAG", "Sent", "Mon", "NUMBER", "Dec", "NUMBER", "NUMBER", "NUMBER", "Subject", "radareorg", "cutter", "Fix", "DockerHub", "NUMBER", "As", "you", "can", "see", "it", "s", "be", "two", "weeks", "now", "that", "the", "build", "be", "broken", "LINK", "cc", "ps", "NUMBER", "you", "might", "want", "to", "take", "a", "look", "at", "it", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "I", "ve", "checked", "this", "out", "and", "it", "the", "build", "start", "to", "break", "since", "the", "r", "NUMBER", "submodule", "has", "be", "update", "NUMBER", "Building", "r", "NUMBER", "on", "alpine", "seems", "to", "be", "broken", "at", "the", "moment", "the", "alpine", "docker", "build", "script", "of", "r", "NUMBER", "here", "LINK", "_build_alpine_image", "NUMBER", "sh", "also", "doesn", "t", "work", "NUMBER", "Replacing", "include", "TAG", "with", "include", "TAG", "in", "libr", "debug", "p", "native", "linux", "linux_debug", "NUMBER", "c", "seems", "to", "fix", "this", "specific", "error", "NUMBER", "However", "another", "one", "follows", "p", "native", "linux", "linux_debug", "NUMBER", "c", "NUMBER", "NUMBER", "error", "storage", "size", "of", "xstate", "isn", "t", "know", "NUMBER", "struct", "_xstate", "xstate", "p", "native", "linux", "linux_debug", "NUMBER", "c", "NUMBER", "NUMBER", "error", "invalid", "application", "of", "sizeof", "to", "incomplete", "type", "struct", "_xstate", "NUMBER", "iov", "NUMBER", "iov_len", "sizeof", "struct", "_xstate", "I", "can", "compile", "this", "on", "arch", "but", "not", "on", "alpine", "Does", "r", "NUMBER", "need", "a", "fix", "here", "Hmm", "probably", "radareorg", "r", "NUMBER", "might", "want", "to", "check", "it", "This", "seems", "to", "still", "happen", "in", "NUMBER", "release", "of", "radare", "NUMBER", "Can", "we", "remove", "appveyor", "from", "future", "contributions", "To", "keep", "all", "CI", "stuff", "at", "one", "place", "on", "GitHub", "actions", "NUMBER", "No", "significant", "gain", "right", "now", "but", "since", "actions", "be", "deeply", "integrated", "Deploy", "keys", "etc", "NUMBER", "within", "the", "GitHub", "ecosystem", "I", "see", "it", "as", "a", "plus", "if", "future", "CI", "stuff", "be", "contained", "within", "actions", "NUMBER", "Okay", "didn", "t", "know", "about", "that", "NUMBER", "I", "find", "an", "issue", "LINK", "on", "windows", "NUMBER", "open", "for", "this", "but", "no", "activity", "NUMBER", "However", "I", "see", "that", "current", "appveyor", "build", "be", "taking", "NUMBER", "NUMBER", "mins", "so", "will", "the", "GHA", "be", "slower", "than", "that", "I", "also", "see", "some", "repos", "report", "little", "gains", "in", "build", "time", "but", "maybe", "I", "ll", "try", "it", "out", "sometime", "NUMBER", "The", "old", "function", "was", "segfaulting", "when", "bytecount", "was", "too", "large", "resulting", "in", "accessing", "out", "of", "bound", "array", "NUMBER", "Qt", "NUMBER", "introduce", "QLocale", "formattedDataSize", "that", "will", "do", "the", "same", "job", "NUMBER", "Ah", "damn", "Ubuntu", "NUMBER", "uses", "Qt", "NUMBER", "LINK", "default", "which", "doesn", "t", "have", "the", "formattedDataSize", "function", "yet", "NUMBER", "Well", "I", "m", "not", "in", "favor", "of", "keep", "this", "function", "but", "if", "Ubuntu", "NUMBER", "won", "t", "support", "it", "then", "I", "d", "rather", "fix", "it", "NUMBER", "Superseded", "by", "NUMBER", "Detailed", "description", "Prepare", "the", "debug", "branch", "for", "release", "NUMBER", "Test", "plan", "required", "All", "of", "the", "current", "features", "were", "already", "test", "in", "their", "original", "PRs", "NUMBER", "Did", "you", "meant", "should", "not", "be", "squashed", "I", "think", "that", "we", "ll", "be", "ready", "to", "merge", "once", "NUMBER", "be", "merge", "NUMBER", "Might", "do", "another", "PR", "for", "small", "fix", "soon", "but", "it", "could", "also", "be", "merge", "into", "master", "NUMBER", "Should", "be", "ok", "now", "NUMBER", "You", "probably", "stayed", "at", "the", "windbg", "debug", "interrupt", "point", "so", "seekUpdated", "didn", "t", "happen", "when", "you", "switched", "NUMBER", "I", "put", "a", "breakpoint", "after", "the", "fork", "and", "for", "some", "reason", "the", "child", "process", "be", "marked", "as", "Zombie", "NUMBER", "The", "child", "be", "really", "a", "zombie", "check", "ps", "NUMBER", "The", "reason", "for", "the", "child", "s", "death", "be", "that", "the", "breakpoint", "be", "left", "at", "that", "address", "and", "the", "child", "hits", "it", "as", "well", "without", "anyone", "tracing", "it", "to", "handle", "the", "signal", "NUMBER", "Placing", "a", "breakpoint", "a", "bit", "later", "will", "work", "will", "try", "to", "solve", "it", "on", "r", "NUMBER", "s", "side", "NUMBER", "If", "I", "double", "click", "on", "it", "it", "says", "it", "s", "not", "possible", "to", "switch", "to", "that", "process", "however", "the", "Processes", "widget", "be", "stuck", "as", "well", "as", "the", "debug", "toolbar", "NUMBER", "Fixed", "that", "in", "debug", "dialogs", "PR", "there", "was", "a", "race", "condition", "in", "async", "tasks", "that", "acts", "the", "way", "you", "describe", "NUMBER", "Try", "again", "Breakpoints", "immediately", "after", "forking", "should", "be", "ok", "now", "NUMBER", "Switched", "to", "a", "named", "pipe", "Can", "t", "use", "a", "regular", "pipe", "in", "the", "current", "architecture", "your", "code", "sample", "will", "work", "now", "NUMBER", "Any", "other", "usage", "of", "stdin", "should", "work", "well", "since", "the", "fifo", "emulates", "stdin", "completely", "NUMBER", "std", "getline", "behaves", "slightly", "differently", "from", "getline", "NUMBER", "so", "this", "went", "unnoticed", "NUMBER", "Thanks", "looks", "good", "to", "me", "Environment", "information", "Operating", "System", "Arch", "Linux", "Cutter", "version", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "AppImage", "Dependencies", "I", "remove", "all", "radare", "NUMBER", "package", "from", "the", "system", "to", "see", "how", "it", "goes", "with", "what", "s", "in", "the", "appimage", "Describe", "the", "bug", "When", "saving", "a", "project", "and", "re", "open", "it", "the", "ghidra", "decompiler", "parser", "no", "longer", "works", "Failed", "to", "parse", "JSON", "from", "r", "NUMBER", "ghidra", "To", "Reproduce", "Use", "the", "app", "image", "save", "a", "project", "reopen", "it", "and", "try", "to", "use", "the", "decompiler", "NUMBER", "What", "I", "think", "the", "problem", "be", "I", "think", "I", "have", "find", "a", "cause", "for", "this", "problem", "as", "well", "as", "a", "function", "workaround", "until", "a", "fixe", "be", "made", "NUMBER", "When", "saving", "the", "project", "the", "rc", "file", "has", "the", "following", "line", "e", "r", "NUMBER", "ghidra", "NUMBER", "sleighhome", "tmp", "NUMBER", "mount_CutteryMD", "NUMBER", "MD", "usr", "share", "radare", "NUMBER", "plugins", "r", "NUMBER", "ghidra_sleigh", "Given", "that", "the", "plugins", "seem", "to", "be", "temporarily", "mounted", "when", "restarting", "cutter", "the", "path", "may", "have", "change", "giving", "my", "error", "NUMBER", "Workaround", "I", "simply", "remove", "that", "line", "from", "the", "rc", "project", "file", "sed", "i", "ghidra", "NUMBER", "home", "d", "rc", "be", "enough", "Side", "note", "I", "d", "like", "to", "thank", "everyone", "who", "has", "be", "work", "on", "this", "marvelous", "project", "which", "be", "now", "even", "better", "now", "with", "the", "implementation", "of", "ghidra", "s", "algorithms", "NUMBER", "Many", "hugs", "to", "y", "all", "I", "have", "the", "same", "problem", "on", "arch", "linux", "but", "instead", "of", "Failed", "to", "parse", "JSON", "from", "r", "NUMBER", "ghidra", "I", "get", "Ghidra", "Decompiler", "Error", "No", "sleigh", "specification", "for", "x", "NUMBER", "LE", "NUMBER", "default", "NUMBER", "The", "solution", "be", "the", "same", "as", "the", "one", "find", "by", "lazytanuki", "sed", "i", "ghidra", "NUMBER", "home", "d", "rc", "I", "tried", "from", "cutter", "version", "NUMBER", "to", "NUMBER", "and", "they", "have", "all", "this", "problem", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "Test", "what", "happens", "with", "large", "amount", "of", "history", "items", "Make", "sure", "that", "long", "press", "and", "right", "click", "opens", "menu", "Test", "that", "jumping", "NUMBER", "step", "works", "Test", "jump", "target", "in", "forward", "and", "backward", "direction", "matches", "label", "native", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "eecea", "NUMBER", "NUMBER", "ab", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "b", "NUMBER", "db", "NUMBER", "png", "TAG", "light", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "ab", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "b", "NUMBER", "cfbfb", "NUMBER", "c", "NUMBER", "a", "NUMBER", "png", "dark", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "NUMBER", "ab", "NUMBER", "ea", "NUMBER", "d", "c", "NUMBER", "a", "NUMBER", "png", "TAG", "Closing", "issue", "Closes", "NUMBER", "TAG", "Minor", "know", "issue", "Arrows", "don", "t", "look", "great", "in", "non", "native", "theme", "NUMBER", "Probably", "the", "same", "problem", "as", "debug", "button", "had", "NUMBER", "I", "would", "be", "nice", "to", "keep", "square", "shape", "NUMBER", "heavy_check_mark", "fix", "R", "NUMBER", "entry", "for", "current", "position", "at", "the", "end", "of", "history", "be", "somewhat", "inconsistent", "NUMBER", "Sometime", "but", "not", "always", "it", "has", "address", "NUMBER", "x", "NUMBER", "After", "open", "Cutter", "redo", "history", "be", "not", "empty", "weird", "NUMBER", "Some", "seek", "history", "fix", "radareorg", "radare", "NUMBER", "NUMBER", "Was", "able", "to", "repeat", "non", "empty", "redo", "with", "plain", "r", "NUMBER", "and", "aaa", "will", "create", "an", "issue", "for", "that", "NUMBER", "I", "don", "t", "think", "it", "s", "worth", "add", "a", "workaround", "on", "cutter", "side", "now", "as", "it", "doesn", "t", "interfere", "much", "and", "most", "people", "will", "not", "notice", "it", "NUMBER", "With", "the", "merge", "of", "DbgEng", "support", "locally", "on", "Windows", "systems", "and", "renaming", "the", "URI", "schemes", "please", "see", "the", "update", "WinDbg", "chapter", "of", "Radare", "NUMBER", "book", "LINK", "for", "the", "user", "cases", "on", "how", "to", "use", "and", "how", "it", "should", "look", "LINK", "LINK", "Environment", "information", "Operating", "System", "Parrot", "OS", "NUMBER", "amd", "NUMBER", "Cutter", "version", "NUMBER", "pull", "NUMBER", "NUMBER", "NUMBER", "File", "format", "ELF", "Describe", "the", "bug", "Strings", "widget", "shows", "invalid", "characters", "nothing", "can", "be", "read", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ad", "NUMBER", "ea", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "e", "NUMBER", "c", "NUMBER", "png", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "Cutter", "with", "auto", "analysis", "NUMBER", "See", "the", "bug", "in", "Strings", "widget", "Expected", "behavior", "Regular", "strings", "like", "normal", "Additional", "context", "R", "NUMBER", "output", "still", "shows", "characters", "strings", "correctly", "R", "NUMBER", "update", "to", "NUMBER", "NUMBER", "NUMBER", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "bc", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "ee", "NUMBER", "adf", "NUMBER", "e", "NUMBER", "f", "NUMBER", "png", "Dissasm", "widget", "shows", "text", "correctly", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "png", "Seems", "like", "the", "bug", "happens", "after", "NUMBER", "NUMBER", "NUMBER", "It", "happened", "to", "me", "from", "patch", "NUMBER", "NUMBER", "NUMBER", "and", "NUMBER", "NUMBER", "NUMBER", "latest", "Build", "flags", "DCUTTER_ENABLE_QTWEBENGINE", "true", "DCUTTER_ENABLE_GRAPHVIZ", "true", "DCUTTER_ENABLE_KSYNTAXHIGHLIGHTING", "on", "TAG", "Detailed", "description", "TAG", "This", "be", "so", "that", "it", "s", "easier", "to", "identify", "on", "the", "hexdump", "which", "bytes", "values", "change", "after", "a", "write", "if", "they", "be", "in", "view", "especially", "useful", "when", "debugging", "NUMBER", "I", "had", "to", "make", "some", "change", "so", "that", "I", "could", "check", "if", "the", "old", "buffer", "contains", "the", "offset", "to", "be", "compared", "so", "some", "issue", "may", "arise", "because", "of", "that", "but", "in", "my", "test", "I", "couldn", "t", "find", "any", "NUMBER", "Test", "plan", "required", "Making", "sure", "Hexdump", "still", "behaves", "ok", "Scroll", "between", "block", "read", "aligned", "boundaries", "NUMBER", "x", "NUMBER", "Scroll", "to", "the", "start", "end", "of", "file", "make", "sure", "it", "doesn", "t", "crash", "or", "wrap", "around", "Test", "highlight", "when", "change", "occur", "Write", "to", "area", "that", "hexdump", "be", "showing", "notice", "the", "highlight", "Scroll", "once", "the", "highlight", "disappears", "Write", "to", "area", "that", "hexdump", "be", "showing", "again", "only", "the", "change", "bytes", "get", "highlight", "Write", "to", "area", "that", "hexdump", "be", "not", "showing", "nothing", "change", "Enter", "emulation", "mode", "with", "a", "binary", "Seek", "to", "the", "stack", "in", "the", "hexdump", "and", "unsync", "it", "Step", "and", "notice", "the", "highlight", "when", "something", "be", "write", "to", "the", "stack", "that", "be", "different", "from", "the", "previous", "value", "highlight", "disappears", "when", "scrolled", "stepped", "again", "Make", "sure", "it", "also", "works", "in", "all", "formats", "float", "int", "hex", "octal", "Detailed", "description", "As", "NUMBER", "mentions", "it", "would", "be", "nice", "to", "have", "instruction", "highlight", "in", "graph", "view", "disassembly", "NUMBER", "I", "have", "implement", "instruction", "highlight", "in", "graph", "view", "NUMBER", "To", "implement", "this", "i", "have", "use", "BasicBlock", "API", "NUMBER", "Two", "new", "entries", "were", "add", "to", "graph", "view", "context", "menu", "Highlight", "Instruction", "and", "Unhighlight", "Instruction", "whose", "work", "analogously", "to", "Highlight", "block", "and", "Unhighlight", "block", "NUMBER", "It", "s", "important", "to", "note", "that", "currently", "breakpoint", "color", "takes", "priority", "over", "manual", "highlight", "NUMBER", "I", "don", "t", "know", "if", "it", "s", "a", "good", "choice", "NUMBER", "Default", "color", "be", "set", "to", "linehl", "from", "radare", "NUMBER", "color", "keys", "NUMBER", "gif", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "caf", "NUMBER", "dc", "NUMBER", "gif", "Test", "plan", "required", "NUMBER", "Set", "as", "NUMBER", "dosen", "t", "remove", "highlight", "NUMBER", "highlight", "color", "change", "when", "line", "be", "selected", "TAG", "TAG", "Closing", "issue", "One", "step", "closer", "to", "closing", "NUMBER", "I", "m", "not", "sure", "about", "part", "with", "mutual", "class", "but", "separation", "of", "BasicBlockHighlighter", "and", "InstructionHighligter", "sounds", "good", "to", "me", "NUMBER", "It", "could", "hold", "additional", "information", "about", "size", "of", "instruction", "this", "could", "be", "handy", "NUMBER", "I", "have", "add", "BasicInstructionHighlighter", "and", "BasicInstruction", "and", "also", "update", "instruction", "highlight", "with", "it", "NUMBER", "Please", "add", "Go", "to", "the", "end", "of", "file", "In", "Disassembly", "window", "NUMBER", "I", "think", "it", "would", "be", "handy", "especially", "when", "you", "have", "to", "Set", "to", "Data", "a", "couple", "of", "bytes", "from", "defined", "position", "to", "the", "end", "of", "a", "file", "NUMBER", "Also", "would", "be", "great", "if", "you", "implement", "this", "idea", "to", "Set", "to", "Data", "itself", "NUMBER", "For", "instance", "when", "user", "do", "not", "set", "number", "of", "items", "then", "it", "should", "mean", "from", "Start", "address", "to", "the", "end", "of", "a", "file", "or", "implement", "a", "separate", "radio", "button", "for", "this", "in", "Set", "to", "Data", "window", "TAG", "In", "this", "picture", "the", "return", "of", "NUMBER", "x", "NUMBER", "f", "NUMBER", "c", "should", "be", "returned", "to", "main", "but", "returned", "to", "NUMBER", "x", "NUMBER", "TAG", "How", "can", "I", "fix", "this", "I", "tried", "to", "write", "the", "following", "code", "in", "c", "language", "NUMBER", "TAG", "The", "above", "picture", "be", "the", "result", "of", "decompilation", "NUMBER", "then", "I", "simulated", "the", "instruction", "to", "NUMBER", "x", "NUMBER", "f", "NUMBER", "to", "jump", "to", "the", "f", "NUMBER", "function", "which", "be", "NUMBER", "x", "NUMBER", "ef", "NUMBER", "step", "by", "step", "simulation", "reached", "the", "return", "of", "NUMBER", "x", "NUMBER", "f", "NUMBER", "c", "and", "then", "should", "it", "return", "the", "instruction", "of", "NUMBER", "x", "NUMBER", "f", "NUMBER", "c", "but", "it", "jumped", "to", "NUMBER", "x", "NUMBER", "GustavoLCR", "pelijah", "a", "NUMBER", "ext", "might", "help", "you", "with", "WinDbg", "test", "NUMBER", "Double", "checked", "commit", "submodule", "update", "and", "did", "a", "clean", "build", "by", "deleting", "build", "folders", "as", "didn", "t", "compile", "otherwise", "NUMBER", "System", "ArchLinux", "with", "Qt", "NUMBER", "Tried", "run", "it", "in", "a", "debugger", "NUMBER", "Looks", "like", "it", "somehow", "gets", "resolve", "as", "ipv", "NUMBER", "address", "NUMBER", "Doing", "ping", "NUMBER", "also", "try", "to", "ping", "NUMBER", "Entering", "NUMBER", "directly", "also", "causes", "it", "to", "get", "stuck", "NUMBER", "ip_", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "de", "NUMBER", "ea", "NUMBER", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "png", "Left", "it", "in", "background", "and", "it", "timed", "out", "and", "get", "an", "error", "after", "a", "few", "minutes", "NUMBER", "ITAYC", "NUMBER", "HEN", "LGTM", "NUMBER", "Just", "need", "to", "update", "r", "NUMBER", "submodule", "again", "to", "include", "a", "fix", "for", "oj", "NUMBER", "GustavoLCR", "did", "you", "have", "a", "chance", "to", "test", "with", "windbg", "Need", "to", "know", "whether", "I", "should", "set", "it", "up", "on", "my", "own", "machine", "Just", "test", "it", "NUMBER", "Attaching", "works", "reading", "regs", "and", "mem", "as", "well", "but", "cutter", "will", "hang", "if", "I", "ask", "it", "to", "single", "step", "breaking", "after", "continuing", "also", "doesn", "t", "work", "and", "cutter", "will", "freeze", "if", "i", "try", "to", "do", "anything", "while", "it", "s", "continuing", "NUMBER", "But", "I", "think", "most", "of", "it", "be", "problem", "on", "r", "NUMBER", "side", "NUMBER", "By", "the", "way", "just", "for", "the", "reference", "the", "issue", "be", "marked", "relate", "to", "debugging", "in", "radare", "NUMBER", "be", "located", "here", "Cutter", "Debugger", "Project", "LINK", "Debugger", "Project", "LINK", "Record", "Replay", "Project", "LINK", "Connect", "window", "with", "cancel", "button", "also", "hangs", "NUMBER", "Looks", "like", "GUI", "thread", "gets", "stuck", "waiting", "for", "r", "NUMBER", "lock", "while", "update", "breakpoints", "in", "graphview", "NUMBER", "TAG", "TAG", "Stacktrace", "TAG", "python", "NUMBER", "pthread_cond_wait", "GLIBC_", "NUMBER", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "c", "NUMBER", "c", "NUMBER", "NUMBER", "r_th_cond_wait", "thread_cond", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "fec", "NUMBER", "NUMBER", "task_wakeup", "task", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "NUMBER", "r_core_task_sleep_end", "task", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "b", "NUMBER", "d", "NUMBER", "r_core_sleep_end", "core", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "cd", "NUMBER", "NUMBER", "r_cons_sleep_end", "cons", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "b", "NUMBER", "RCoreLocked", "RCoreLocked", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "x", "NUMBER", "ffca", "NUMBER", "CutterCore", "cmdj", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "CutterCore", "getBreakpoints", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "f", "NUMBER", "CutterCore", "getBreakpointsAddresses", "Cutter", "NUMBER", "cpp", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "NUMBER", "DisassemblerGraphView", "drawBlock", "DisassemblerGraphView", "NUMBER", "cpp", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "NUMBER", "GraphView", "paint", "GraphView", "NUMBER", "cpp", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "NUMBER", "GraphView", "paintGraphCache", "GraphView", "NUMBER", "cpp", "NUMBER", "NUMBER", "x", "NUMBER", "e", "NUMBER", "NUMBER", "GraphView", "paintEvent", "GraphView", "NUMBER", "cpp", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "DisassemblerGraphView", "paintEvent", "DisassemblerGraphView", "NUMBER", "cpp", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "QWidget", "event", "QEvent", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "d", "NUMBER", "NUMBER", "QFrame", "event", "QEvent", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "be", "NUMBER", "f", "NUMBER", "QCoreApplicationPrivate", "sendThroughObjectEventFilters", "QObject", "QEvent", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "ea", "NUMBER", "NUMBER", "QApplicationPrivate", "notify_helper", "QObject", "QEvent", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "c", "NUMBER", "d", "NUMBER", "NUMBER", "QApplication", "notify", "QObject", "QEvent", "NUMBER", "x", "NUMBER", "ffff", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "TAG", "TAG", "There", "be", "a", "second", "thread", "for", "r", "NUMBER", "task", "doing", "connect", "NUMBER", "Yes", "r", "NUMBER", "task", "gets", "stuck", "in", "r_socket_connect", "the", "same", "as", "in", "screenshot", "before", "NUMBER", "When", "connecting", "to", "nc", "cancel", "works", "NUMBER", "ITAYC", "NUMBER", "HEN", "Please", "resolve", "the", "review", "if", "you", "agree", "with", "the", "change", "NUMBER", "karliss", "If", "everything", "be", "now", "fine", "for", "your", "last", "comment", "I", "think", "we", "can", "proceed", "to", "merge", "this", "PR", "NUMBER", "Timeout", "be", "now", "more", "reasonable", "NUMBER", "Was", "also", "able", "to", "connect", "to", "actual", "gdb", "server", "NUMBER", "Rebasing", "wasn", "t", "work", "properly", "but", "that", "s", "a", "job", "for", "separate", "issue", "NUMBER", "TAG", "Detailed", "description", "Update", "Qt", "in", "cutter", "deps", "to", "latest", "version", "NUMBER", "Test", "plan", "required", "Using", "the", "release", "package", "on", "all", "NUMBER", "OS", "test", "that", "Cutter", "opens", "Make", "sure", "ssl", "library", "be", "correctly", "include", "and", "update", "check", "works", "sample", "python", "plugin", "works", "Platforms", "test", "Linux", "heavy_check_mark", "Windows", "heavy_check_mark", "macOS", "TAG", "TAG", "Closing", "issue", "close", "NUMBER", "This", "doesn", "t", "work", "as", "well", "NUMBER", "I", "have", "one", "more", "idea", "NUMBER", "Isn", "t", "better", "to", "target", "NUMBER", "LINK", "_Features_in_Qt_", "NUMBER", "release", "instead", "XVilka", "No", "objections", "from", "me", "NUMBER", "This", "was", "initially", "do", "to", "attempt", "fix", "travis", "macOS", "build", "problem", "so", "bugfix", "release", "was", "chosen", "hoping", "that", "it", "will", "avoid", "any", "new", "problem", "NUMBER", "Both", "assumption", "turned", "out", "to", "be", "false", "NUMBER", "Since", "there", "be", "less", "urgency", "now", "there", "be", "time", "for", "dealing", "with", "problem", "cause", "by", "bigger", "version", "change", "NUMBER", "Although", "qt", "NUMBER", "be", "a", "LTS", "version", "NUMBER", "I", "m", "marking", "this", "for", "next", "release", "Updating", "Qt", "dependency", "to", "at", "least", "NUMBER", "will", "also", "resolve", "LINK", "Good", "time", "to", "merge", "this", "one", "Seems", "like", "a", "NUMBER", "ext", "approved", "it", "be", "work", "on", "macOS", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "I", "have", "use", "cutter", "to", "annotated", "a", "binary", "dump", "to", "learn", "to", "understand", "what", "be", "happening", "NUMBER", "I", "would", "like", "to", "be", "able", "to", "export", "this", "dump", "so", "that", "I", "can", "push", "it", "in", "my", "git", "repository", "NUMBER", "Additionally", "the", "dumped", "assembly", "should", "be", "able", "to", "compile", "again", "NUMBER", "The", "disassembly", "view", "already", "yields", "almost", "everything", "that", "be", "needed", "for", "this", "so", "be", "able", "to", "export", "this", "view", "would", "be", "already", "extremely", "helpful", "NUMBER", "I", "guess", "this", "be", "slightly", "relate", "to", "LINK", "Fixes", "NUMBER", "Is", "there", "any", "something", "i", "should", "edit", "anyways", "this", "be", "my", "first", "contribute", "smile", "Thank", "you", "for", "the", "PR", "NUMBER", "Please", "fill", "out", "all", "the", "field", "from", "PR", "template", "and", "don", "t", "erase", "parts", "of", "it", "NUMBER", "They", "be", "there", "for", "a", "reason", "NUMBER", "Having", "a", "proper", "description", "and", "having", "it", "consistent", "makes", "it", "easier", "to", "reviewer", "PR", "and", "allow", "developers", "to", "give", "you", "feedback", "faster", "NUMBER", "What", "s", "the", "reason", "for", "marking", "this", "issue", "as", "draft", "did", "you", "plan", "any", "other", "change", "umm", "yes", "NUMBER", "i", "plan", "for", "other", "change", "for", "more", "stable", "code", "smile", "karliss", "ITAYC", "NUMBER", "HEN", "Hi", "i", "need", "help", "My", "code", "looks", "like", "this", "be", "this", "right", "that", "you", "request", "more", "like", "this", "const", "auto", "selection", "ui", "treeView", "selectionModel", "selection", "NUMBER", "indexes", "QList", "TAG", "offsets", "offsets", "NUMBER", "reserve", "selection", "NUMBER", "size", "for", "const", "auto", "index", "selection", "const", "FunctionDescription", "function", "functionProxyModel", "data", "index", "FunctionModel", "FunctionDescriptionRole", "NUMBER", "value", "TAG", "switch", "index", "NUMBER", "column", "case", "FunctionModel", "NameColumn", "offsets", "NUMBER", "push_back", "function", "NUMBER", "name", "case", "FunctionModel", "SizeColumn", "offsets", "NUMBER", "push_back", "QString", "number", "function", "NUMBER", "size", "case", "FunctionModel", "OffsetColumn", "offsets", "NUMBER", "push_back", "RAddressString", "function", "NUMBER", "offset", "case", "FunctionModel", "NargsColumn", "offsets", "NUMBER", "push_back", "QString", "number", "function", "NUMBER", "nargs", "case", "FunctionModel", "NlocalsColumn", "offsets", "NUMBER", "push_back", "QString", "number", "function", "NUMBER", "nlocals", "case", "FunctionModel", "NbbsColumn", "offsets", "NUMBER", "push_back", "QString", "number", "function", "NUMBER", "nbbs", "case", "FunctionModel", "CalltypeColumn", "offsets", "NUMBER", "push_back", "function", "NUMBER", "calltype", "case", "FunctionModel", "EdgesColumn", "offsets", "NUMBER", "push_back", "QString", "number", "function", "NUMBER", "edges", "case", "FunctionModel", "FrameColumn", "offsets", "NUMBER", "push_back", "QString", "number", "function", "NUMBER", "ackframe", "QString", "information", "offsets", "NUMBER", "join", "auto", "clipboard", "QApplication", "clipboard", "clipboard", "setText", "information", "but", "when", "copying", "after", "function", "NUMBER", "name", "it", "doubled", "copy", "what", "should", "i", "do", "Hello", "malwareslayer", "will", "you", "have", "some", "time", "to", "update", "your", "PR", "Environment", "information", "Operating", "System", "Linux", "Cutter", "version", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "AppImage", "File", "format", "arm", "NUMBER", "little", "Describe", "the", "bug", "When", "open", "the", "registers", "view", "the", "values", "do", "not", "fit", "into", "the", "edit", "box", "NUMBER", "Worse", "when", "resizing", "the", "pane", "the", "edit", "boxes", "stay", "the", "same", "size", "while", "the", "pane", "grows", "NUMBER", "Screenshots", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "fe", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "png", "oliv", "NUMBER", "r", "Are", "you", "run", "Cutter", "on", "high", "DPI", "monitor", "or", "otherwise", "increase", "scaling", "factor", "Size", "of", "some", "other", "elements", "also", "doesn", "t", "look", "right", "NUMBER", "Yes", "and", "no", "I", "took", "this", "screenshot", "while", "I", "was", "indeed", "on", "a", "NUMBER", "k", "HiDPI", "NUMBER", "scale", "screen", "NUMBER", "When", "I", "connect", "my", "external", "monitors", "however", "I", "run", "at", "NUMBER", "scale", "but", "change", "the", "resolution", "of", "my", "laptop", "screen", "NUMBER", "Cutter", "on", "the", "normal", "monitor", "then", "looks", "quite", "big", "and", "has", "the", "same", "problem", "NUMBER", "I", "be", "not", "restarting", "the", "application", "in", "between", "however", "NUMBER", "ping", "oliv", "NUMBER", "r", "I", "can", "t", "reproduce", "after", "the", "modifications", "NUMBER", "I", "ll", "close", "it", "for", "now", "NUMBER", "Feel", "free", "to", "re", "open", "it", "if", "you", "be", "experience", "it", "again", "NUMBER", "Detailed", "description", "As", "NUMBER", "describes", "the", "Cutter", "interface", "freezes", "when", "executing", "commands", "NUMBER", "This", "happens", "because", "those", "r", "NUMBER", "commands", "be", "call", "with", "cmd", "directly", "instead", "of", "the", "AsyncCommand", "class", "NUMBER", "R", "NUMBER", "expects", "the", "user", "to", "send", "a", "signal", "use", "the", "keyboard", "for", "it", "to", "exit", "_dbg_wait", "similarly", "to", "gdb", "so", "it", "isn", "t", "an", "issue", "there", "NUMBER", "This", "PR", "offers", "a", "solution", "that", "uses", "the", "AsyncCommand", "class", "atm", "there", "s", "only", "support", "for", "regular", "debugging", "to", "get", "your", "feedback", "but", "I", "plan", "on", "add", "this", "feature", "to", "emulation", "as", "well", "can", "also", "be", "handy", "with", "other", "slow", "commands", "NUMBER", "The", "commands", "calling", "AsyncCmd", "be", "responsible", "of", "disabling", "the", "debug", "toolbar", "and", "possibly", "other", "things", "as", "well", "in", "the", "future", "and", "connecting", "to", "the", "finished", "event", "decided", "not", "to", "go", "with", "passing", "callbacks", "to", "AsyncCmd", "since", "it", "s", "too", "messy", "and", "QSharedPointer", "take", "care", "of", "setting", "the", "asynctask", "pointer", "to", "NULL", "once", "all", "clients", "be", "do", "with", "their", "logic", "NUMBER", "There", "also", "needs", "to", "be", "a", "some", "kind", "of", "Suspend", "button", "that", "will", "stop", "the", "async", "task", "use", "a", "new", "r", "NUMBER", "command", "signal", "NUMBER", "Test", "plan", "required", "Run", "continue", "until", "main", "twice", "or", "just", "continue", "without", "breakpoints", "to", "see", "that", "all", "toolbar", "buttons", "be", "disabled", "except", "for", "stop", "restart", "NUMBER", "Running", "any", "of", "the", "step", "commands", "will", "momentarily", "disable", "the", "buttons", "so", "it", "s", "harder", "to", "see", "that", "it", "s", "work", "NUMBER", "Closing", "issue", "close", "NUMBER", "See", "Added", "AsyncCmd", "for", "debug", "commands", "the", "other", "commit", "be", "waiting", "for", "a", "merge", "in", "a", "different", "PR", "branch", "NUMBER", "I", "ll", "rebase", "once", "it", "s", "do", "NUMBER", "This", "pull", "request", "introduces", "NUMBER", "alert", "when", "merge", "NUMBER", "d", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "into", "NUMBER", "dfe", "NUMBER", "abef", "NUMBER", "d", "NUMBER", "d", "NUMBER", "aba", "NUMBER", "dce", "NUMBER", "dfb", "view", "on", "LGTM", "NUMBER", "com", "LINK", "NUMBER", "f", "NUMBER", "a", "NUMBER", "d", "NUMBER", "ef", "NUMBER", "ad", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "bda", "NUMBER", "fae", "new", "alerts", "NUMBER", "for", "Missing", "return", "statement", "I", "was", "mislead", "by", "r", "NUMBER", "s", "output", "when", "checking", "b", "on", "debug", "commands", "you", "can", "t", "actually", "resume", "NUMBER", "I", "be", "looking", "into", "the", "issue", "on", "r", "NUMBER", "s", "side", "NUMBER", "Everything", "else", "be", "pretty", "much", "as", "I", "think", "it", "should", "be", "in", "it", "in", "it", "s", "final", "form", "apart", "from", "other", "UX", "elements", "that", "indicate", "debug", "task", "progress", "and", "looking", "into", "if", "and", "how", "to", "limit", "thread", "switching", "NUMBER", "Will", "keep", "this", "PR", "as", "a", "draft", "until", "it", "s", "solve", "just", "note", "that", "the", "suspend", "button", "won", "t", "actually", "do", "anything", "until", "b", "for", "debug", "commands", "be", "fix", "NUMBER", "The", "latest", "version", "should", "work", "well", "on", "Linux", "and", "some", "r", "NUMBER", "bug", "were", "fix", "alongside", "issue", "test", "with", "remote", "and", "local", "NUMBER", "Windows", "be", "also", "broken", "and", "it", "might", "take", "a", "while", "since", "I", "be", "less", "familiar", "with", "it", "NUMBER", "Would", "appreciate", "it", "if", "you", "would", "test", "this", "branch", "on", "Mac", "and", "provide", "some", "feedback", "on", "the", "exist", "solution", "now", "that", "things", "seem", "to", "be", "fully", "work", "NUMBER", "I", "see", "the", "build", "be", "error", "restart", "it", "to", "make", "sure", "it", "s", "fine", "on", "OS", "X", "NUMBER", "show", "suspend", "when", "program", "be", "runnning", "show", "Continue", "when", "program", "be", "suspended", "It", "do", "look", "way", "better", "thanks", "for", "the", "suggestion", "Environment", "information", "Operating", "System", "Darwin", "NUMBER", "h", "NUMBER", "n", "NUMBER", "i", "NUMBER", "hendeMacBook", "Pro", "NUMBER", "local", "NUMBER", "Darwin", "Kernel", "Version", "NUMBER", "Thu", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PDT", "NUMBER", "root", "xnu", "NUMBER", "NUMBER", "RELEASE_X", "NUMBER", "_", "NUMBER", "x", "NUMBER", "_", "NUMBER", "Cutter", "version", "NUMBER", "File", "format", "arm", "Describe", "the", "bug", "Chinese", "commant", "display", "occlusion", "NUMBER", "Screenshots", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "png", "Can", "you", "add", "example", "comment", "that", "can", "be", "copy", "pasted", "for", "repeating", "the", "bug", "Can", "you", "add", "example", "comment", "that", "can", "be", "copy", "pasted", "for", "repeating", "the", "bug", "I", "don", "t", "think", "it", "s", "necessary", "to", "add", "an", "example", "because", "copying", "and", "pasting", "sees", "it", "be", "complete", "NUMBER", "Only", "show", "half", "of", "it", "in", "the", "program", "NUMBER", "ZCKun", "Karliss", "wants", "a", "way", "to", "reproduce", "the", "bug", "in", "his", "Cutter", "session", "NUMBER", "If", "you", "provide", "us", "that", "text", "it", "would", "be", "easier", "for", "us", "to", "just", "copy", "paste", "it", "and", "see", "why", "there", "be", "a", "bug", "NUMBER", "Thanks", "ZCKun", "Karliss", "wants", "a", "way", "to", "reproduce", "the", "bug", "in", "his", "Cutter", "session", "NUMBER", "If", "you", "provide", "us", "that", "text", "it", "would", "be", "easier", "for", "us", "to", "just", "copy", "paste", "it", "and", "see", "why", "there", "be", "a", "bug", "NUMBER", "Thanks", "ok", "I", "find", "this", "bug", "only", "in", "the", "graph", "window", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "efb", "NUMBER", "f", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "cde", "NUMBER", "be", "NUMBER", "ca", "NUMBER", "f", "NUMBER", "png", "in", "graph", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "de", "NUMBER", "e", "NUMBER", "NUMBER", "bfc", "a", "NUMBER", "de", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "NUMBER", "png", "you", "need", "this", "comment", "\u79fb\u52a8", "Thanks", "NUMBER", "Disassembly", "widget", "be", "based", "on", "qt", "text", "widget", "which", "handles", "text", "display", "but", "in", "graph", "widget", "we", "have", "to", "position", "ourselves", "NUMBER", "It", "s", "not", "surprising", "that", "parts", "that", "use", "higher", "level", "builtin", "functionality", "deals", "with", "special", "cases", "better", "NUMBER", "Couldn", "t", "repeat", "it", "on", "my", "computer", "NUMBER", "The", "bug", "might", "depend", "on", "font", "platform", "macOS", "Qt", "version", "NUMBER", "ZCKun", "Did", "you", "use", "the", "official", "release", "What", "font", "did", "you", "use", "Please", "test", "what", "happens", "with", "other", "fonts", "and", "tell", "us", "if", "the", "result", "be", "the", "same", "NUMBER", "symbols_fail", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "dca", "NUMBER", "b", "NUMBER", "f", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "NUMBER", "af", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "png", "Couldn", "t", "repeat", "it", "on", "my", "computer", "NUMBER", "The", "bug", "might", "depend", "on", "font", "platform", "macOS", "Qt", "version", "NUMBER", "ZCKun", "Did", "you", "use", "the", "official", "release", "What", "font", "did", "you", "use", "Please", "test", "what", "happens", "with", "other", "fonts", "and", "tell", "us", "if", "the", "result", "be", "the", "same", "NUMBER", "symbols_fail", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "dca", "NUMBER", "b", "NUMBER", "f", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "NUMBER", "af", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "png", "my", "font", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "f", "fb", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "png", "Couldn", "t", "repeat", "it", "on", "my", "computer", "NUMBER", "The", "bug", "might", "depend", "on", "font", "platform", "macOS", "Qt", "version", "NUMBER", "ZCKun", "Did", "you", "use", "the", "official", "release", "What", "font", "did", "you", "use", "Please", "test", "what", "happens", "with", "other", "fonts", "and", "tell", "us", "if", "the", "result", "be", "the", "same", "NUMBER", "symbols_fail", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "dca", "NUMBER", "b", "NUMBER", "f", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "NUMBER", "af", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "png", "I", "change", "the", "font", "and", "it", "looks", "pretty", "good", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "dcaacb", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "f", "NUMBER", "bf", "NUMBER", "e", "NUMBER", "a", "NUMBER", "png", "TAG", "Detailed", "description", "This", "PR", "be", "a", "first", "step", "in", "implement", "edit", "features", "in", "Cutter", "NUMBER", "Now", "it", "only", "works", "with", "context", "menu", "NUMBER", "Next", "step", "be", "to", "implement", "on", "type", "edit", "and", "undo", "redo", "commands", "and", "commit", "change", "in", "io", "NUMBER", "cache", "mode", "last", "two", "can", "be", "implement", "in", "this", "PR", "NUMBER", "TAG", "Test", "plan", "required", "NUMBER", "Open", "HexWidget", "NUMBER", "Trigger", "each", "edit", "command", "TAG", "TAG", "Closing", "issue", "close", "NUMBER", "TAG", "shall", "we", "add", "cutter", "here", "LINK", "londar", "open", "source", "mac", "os", "apps", "it", "s", "a", "fully", "fledged", "macOS", "app", "plus", "this", "repo", "has", "good", "visibility", "NUMBER", "I", "be", "not", "sure", "how", "fitting", "r", "NUMBER", "would", "be", "for", "the", "list", "NUMBER", "It", "be", "a", "opensource", "macOS", "apps", "list", "not", "open", "source", "apps", "list", "NUMBER", "It", "seems", "that", "most", "of", "the", "apps", "in", "list", "be", "made", "in", "swift", "or", "objecective", "c", "and", "probably", "targeting", "only", "macOS", "NUMBER", "There", "be", "few", "generic", "cross", "platform", "opensource", "apps", "NUMBER", "That", "s", "my", "opinion", "but", "repository", "author", "probably", "has", "his", "own", "opinion", "what", "fits", "the", "list", "NUMBER", "This", "PR", "aims", "at", "fix", "the", "default", "item", "selection", "when", "open", "the", "XRef", "dialog", "NUMBER", "Now", "when", "the", "dialog", "opens", "the", "first", "item", "of", "the", "list", "be", "opened", "and", "the", "keyboard", "arrows", "can", "be", "use", "to", "travel", "through", "the", "different", "items", "NUMBER", "Fixes", "LINK", "The", "reason", "be", "that", "the", "r", "NUMBER", "continue", "commands", "be", "call", "with", "cmd", "instead", "of", "the", "async", "command", "handler", "NUMBER", "Radare", "expects", "the", "user", "to", "send", "a", "signal", "use", "the", "keyboard", "for", "it", "to", "exit", "dbg_wait", "similarly", "to", "gdb", "we", "can", "emulate", "this", "behavior", "with", "a", "button", "that", "will", "stop", "the", "currently", "selected", "thread", "by", "sending", "a", "signal", "to", "the", "async", "handler", "s", "pid", "NUMBER", "Some", "of", "the", "UI", "has", "to", "stay", "frozen", "though", "NUMBER", "You", "can", "assign", "me", "to", "this", "issue", "was", "planning", "on", "looking", "into", "it", "NUMBER", "Here", "be", "a", "new", "theme", "I", "be", "work", "on", "NUMBER", "It", "s", "not", "perfect", "and", "I", "m", "very", "bad", "at", "CSS", "but", "I", "think", "it", "s", "a", "nice", "first", "step", "towards", "a", "more", "pleasant", "documentation", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "b", "NUMBER", "d", "NUMBER", "da", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "a", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "aad", "NUMBER", "cb", "NUMBER", "b", "NUMBER", "png", "In", "the", "end", "it", "should", "close", "LINK", "Sure", "feel", "free", "Detailed", "description", "Added", "a", "widget", "that", "shows", "thread", "information", "and", "allows", "thread", "switching", "NUMBER", "The", "r", "NUMBER", "update", "also", "include", "a", "fix", "to", "drrj", "that", "cause", "RegistersWidget", "to", "print", "incorrect", "register", "values", "NUMBER", "For", "some", "reason", "the", "widget", "shows", "up", "when", "not", "in", "debug", "mode", "in", "window", "would", "appreciate", "it", "if", "you", "could", "take", "a", "look", "at", "it", "NUMBER", "I", "followed", "backtracewidget", "s", "and", "stackwidget", "s", "behavior", "so", "I", "be", "not", "sure", "why", "it", "would", "happen", "NUMBER", "Test", "plan", "required", "Debug", "multi", "threaded", "processes", "see", "that", "all", "threads", "show", "up", "and", "attempt", "to", "switch", "threads", "use", "the", "UI", "NUMBER", "Testing", "points", "UI", "shows", "the", "correct", "position", "in", "the", "disassembly", "window", "when", "switching", "threads", "Newly", "created", "threads", "be", "add", "to", "the", "UI", "Thread", "s", "data", "be", "immediately", "synced", "regs", "stack", "backtrace", "position", "when", "switching", "without", "having", "to", "step", "ThreadsWidget", "s", "UI", "be", "cleared", "after", "restarting", "the", "debugging", "session", "Example", "binary", "play", "around", "with", "the", "number", "of", "threads", "and", "thread_func", "s", "content", "as", "desired", "include", "TAG", "void", "thread_func", "int", "NUMBER", "_t", "counter", "NUMBER", "while", "true", "counter", "int", "main", "std", "thread", "t", "NUMBER", "thread_func", "std", "thread", "t", "NUMBER", "thread_func", "NUMBER", "t", "NUMBER", "join", "t", "NUMBER", "join", "NUMBER", "Closing", "issue", "close", "NUMBER", "close", "NUMBER", "can", "you", "please", "re", "write", "the", "test", "case", "with", "a", "specific", "example", "It", "would", "be", "great", "if", "you", "will", "even", "attach", "a", "binary", "and", "write", "some", "short", "steps", "so", "we", "can", "test", "it", "better", "NUMBER", "I", "ll", "update", "it", "with", "a", "more", "throughout", "plan", "but", "as", "for", "the", "binary", "all", "you", "need", "be", "a", "variation", "of", "include", "TAG", "void", "thread_func", "int", "NUMBER", "_t", "counter", "NUMBER", "while", "true", "counter", "int", "main", "std", "thread", "t", "NUMBER", "thread_func", "std", "thread", "t", "NUMBER", "thread_func", "NUMBER", "t", "NUMBER", "join", "t", "NUMBER", "join", "NUMBER", "Not", "exactly", "a", "problem", "of", "this", "issue", "but", "I", "wasn", "t", "able", "to", "get", "the", "test", "program", "to", "the", "point", "of", "multiple", "threads", "NUMBER", "start", "debugging", "Refresh", "contents", "to", "update", "address", "in", "function", "widget", "set", "breakpoint", "in", "thread_func", "continue", "no", "threads", "the", "process", "get", "killed", "Which", "system", "Make", "sure", "you", "have", "update", "the", "r", "NUMBER", "subrepo", "and", "rebuilt", "everything", "NUMBER", "Compiled", "with", "g", "O", "NUMBER", "std", "c", "NUMBER", "o", "main", "test", "NUMBER", "c", "lpthread", "no", "issue", "Untitled", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "e", "aaace", "NUMBER", "af", "NUMBER", "png", "Breakpoints", "only", "stop", "the", "thread", "in", "the", "background", "this", "be", "an", "r", "NUMBER", "issue", "that", "I", "will", "try", "to", "address", "NUMBER", "Maybe", "there", "s", "an", "issue", "with", "this", "behavior", "NUMBER", "To", "test", "the", "widget", "I", "reached", "the", "thread", "creation", "in", "the", "main", "thread", "each", "time", "and", "then", "manually", "switched", "around", "NUMBER", "Putting", "a", "breakpoint", "between", "creating", "threads", "and", "join", "somewhat", "helped", "NUMBER", "After", "manually", "request", "refresh", "threads", "appeared", "NUMBER", "At", "that", "point", "I", "was", "able", "to", "switch", "between", "threads", "NUMBER", "Looks", "good", "only", "remaining", "problem", "be", "open", "outside", "debug", "mode", "NUMBER", "I", "suggest", "giving", "it", "a", "few", "more", "days", "and", "if", "no", "one", "including", "me", "comes", "up", "with", "a", "fix", "or", "time", "to", "investigate", "it", "merge", "it", "in", "current", "state", "NUMBER", "Right", "forgot", "about", "debug", "branch", "NUMBER", "No", "more", "complains", "except", "fail", "Ubuntu", "NUMBER", "job", "NUMBER", "Should", "be", "easy", "to", "fix", "NUMBER", "Didn", "t", "notice", "I", "have", "use", "newer", "Qt", "methods", "that", "weren", "t", "available", "in", "Qt", "NUMBER", "hopefully", "this", "will", "fix", "it", "NUMBER", "Regarding", "the", "open", "outside", "debug", "mode", "I", "ll", "keep", "looking", "into", "it", "but", "I", "be", "not", "really", "sure", "why", "it", "s", "not", "work", "as", "intended", "since", "everything", "be", "properly", "configured", "in", "MainWindow", "NUMBER", "Would", "appreciate", "it", "if", "you", "would", "look", "into", "it", "as", "well", "NUMBER", "Detailed", "description", "When", "submit", "the", "rename", "command", "as", "afn", "newName", "oldName", "the", "function", "cmdRaw", "surrounds", "the", "command", "in", "escaped", "double", "quotes", "so", "the", "actual", "string", "sent", "to", "_core_cmd_str", "be", "afn", "newName", "oldName", "either", "intentionally", "or", "as", "a", "result", "of", "a", "bug", "this", "command", "throw", "the", "error", "Missing", "in", "afn", "newName", "oldName", "which", "implies", "that", "it", "be", "not", "able", "to", "handle", "the", "consecutive", "backslashes", "at", "the", "end", "of", "the", "string", "NUMBER", "Adding", "a", "trail", "space", "allows", "the", "command", "to", "succeed", "NUMBER", "rename", "with", "backslash", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dcfdd", "NUMBER", "efb", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "eae", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "gif", "Test", "plan", "required", "Test", "Function", "rename", "NUMBER", "Rename", "a", "function", "to", "a", "name", "which", "ends", "in", "a", "backslash", "NUMBER", "NUMBER", "Attempt", "a", "second", "rename", "of", "the", "function", "to", "an", "arbitrary", "string", "NUMBER", "NUMBER", "Observe", "that", "the", "second", "rename", "doesn", "t", "result", "in", "an", "error", "from", "core", "and", "refreshes", "properly", "in", "the", "view", "NUMBER", "Test", "Variable", "rename", "NUMBER", "Rename", "a", "variable", "to", "a", "name", "which", "ends", "in", "a", "backslash", "NUMBER", "NUMBER", "Attempt", "a", "second", "rename", "of", "the", "variable", "to", "an", "arbitrary", "string", "NUMBER", "NUMBER", "Observe", "that", "the", "second", "rename", "doesn", "t", "result", "in", "an", "error", "from", "core", "and", "refreshes", "properly", "in", "the", "view", "NUMBER", "Closing", "issue", "close", "NUMBER", "I", "was", "going", "to", "say", "that", "actual", "problem", "be", "in", "incorrect", "string", "escaping", "and", "better", "fix", "would", "escaping", "which", "be", "what", "xarkes", "probably", "meant", "NUMBER", "Tricky", "part", "be", "that", "r", "NUMBER", "command", "parser", "doesn", "t", "support", "escaping", "the", "escape", "symbol", "NUMBER", "Not", "sure", "if", "this", "can", "be", "do", "properly", "without", "a", "fix", "on", "r", "NUMBER", "side", "NUMBER", "karliss", "When", "the", "string", "be", "pass", "in", "from", "the", "rename", "dialog", "the", "backslash", "be", "escaped", "NUMBER", "So", "the", "command", "that", "gets", "sent", "to", "the", "r", "NUMBER", "command", "parser", "be", "actually", "this", "afn", "newName", "oldName", "which", "I", "believe", "everything", "be", "properly", "escaped", "there", "NUMBER", "When", "the", "last", "escaped", "backslash", "be", "separated", "from", "the", "escaped", "double", "quote", "then", "r", "NUMBER", "be", "able", "to", "properly", "parse", "the", "command", "and", "it", "appears", "to", "handle", "escaped", "backslash", "just", "fine", "NUMBER", "afn", "newName", "oldName", "ITAYC", "NUMBER", "HEN", "I", "will", "look", "into", "what", "it", "would", "take", "on", "the", "r", "NUMBER", "side", "to", "address", "there", "NUMBER", "The", "issue", "be", "in", "radare", "NUMBER", "cmd", "NUMBER", "c", "in", "find_eoq", "static", "char", "find_eoq", "char", "p", "for", "p", "p", "if", "p", "break", "if", "p", "p", "NUMBER", "p", "return", "p", "The", "function", "be", "intended", "to", "allow", "for", "escaped", "double", "quotes", "in", "the", "command", "such", "as", "afn", "function", "NUMBER", "function", "NUMBER", "NUMBER", "The", "only", "solution", "I", "could", "come", "up", "with", "be", "to", "check", "for", "end", "of", "string", "when", "checking", "for", "escaped", "qoute", "of", "course", "this", "breaks", "down", "when", "multiple", "statements", "be", "be", "parsed", "NUMBER", "I", "have", "update", "the", "commit", "to", "protect", "against", "escaping", "the", "end", "quote", "in", "cmdRaw", "rather", "than", "for", "specifically", "afvn", "and", "afn", "NUMBER", "ITAYC", "NUMBER", "HEN", "I", "think", "maybe", "an", "issue", "should", "be", "file", "against", "radare", "NUMBER", "regard", "the", "problem", "of", "ending", "a", "command", "with", "a", "backslash", "mention", "above", "but", "I", "don", "t", "know", "that", "there", "be", "a", "trivial", "solution", "NUMBER", "Do", "you", "foresee", "any", "issue", "with", "this", "change", "as", "a", "workaround", "I", "think", "this", "will", "be", "fix", "in", "the", "future", "with", "the", "new", "command", "parser", "cc", "ret", "NUMBER", "libc", "just", "use", "the", "base", "NUMBER", "arg", "for", "afn", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "cca", "NUMBER", "d", "NUMBER", "fbc", "NUMBER", "da", "NUMBER", "e", "NUMBER", "d", "NUMBER", "for", "now", "On", "NUMBER", "Nov", "NUMBER", "at", "NUMBER", "NUMBER", "xarkes", "TAG", "write", "I", "think", "this", "will", "be", "fix", "in", "the", "future", "with", "the", "new", "command", "parser", "cc", "ret", "NUMBER", "libc", "TAG", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "Superseded", "by", "LINK", "I", "rewrote", "the", "build", "instructions", "NUMBER", "Now", "if", "one", "follows", "the", "build", "instructions", "for", "linux", "it", "should", "just", "work", "as", "expected", "with", "no", "single", "issue", "NUMBER", "I", "think", "it", "can", "still", "be", "improved", "but", "I", "believe", "it", "s", "a", "good", "first", "step", "for", "newcomers", "NUMBER", "I", "would", "expect", "LINK", "to", "be", "automatically", "generate", "from", "the", "NUMBER", "rst", "file", "isn", "t", "it", "the", "case", "As", "for", "the", "doc", "be", "ugly", "there", "be", "already", "opened", "issue", "about", "that", "topic", "and", "I", "can", "take", "a", "look", "at", "it", "after", "that", "PR", "be", "merge", "TAG", "Detailed", "description", "Should", "solve", "the", "issue", "Move", "Show", "bytes", "asm", "NUMBER", "bytes", "setting", "to", "a", "more", "visisble", "place", "NUMBER", "Small", "UI", "change", "in", "settings", "TAG", "Closing", "issue", "close", "NUMBER", "TAG", "bytes", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "f", "NUMBER", "cdc", "NUMBER", "ee", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "png", "Thank", "you", "for", "the", "support", "guys", "Now", "it", "should", "be", "ok", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "be", "NUMBER", "png", "I", "will", "handle", "it", "I", "would", "like", "to", "work", "on", "this", "issue", "NUMBER", "Is", "there", "anything", "that", "I", "should", "keep", "in", "mind", "apart", "from", "what", "be", "describe", "I", "have", "a", "doubt", "regard", "the", "location", "of", "the", "config", "file", "NUMBER", "For", "NUMBER", "radare", "NUMBER", "rc", "in", "radare", "NUMBER", "this", "file", "could", "be", "in", "multiple", "locations", "LINK", "NUMBER", "radare", "NUMBER", "will", "first", "try", "to", "load", "usr", "share", "radare", "NUMBER", "radare", "NUMBER", "rc", "Each", "user", "in", "the", "system", "can", "have", "its", "own", "r", "NUMBER", "scripts", "to", "run", "on", "startup", "to", "select", "the", "color", "scheme", "and", "other", "custom", "options", "by", "having", "r", "NUMBER", "commands", "in", "there", "NUMBER", "NUMBER", "radare", "NUMBER", "rc", "NUMBER", "config", "radare", "NUMBER", "radare", "NUMBER", "rc", "NUMBER", "config", "radare", "NUMBER", "radare", "NUMBER", "rc", "NUMBER", "d", "For", "cutter", "the", "NUMBER", "cutterrc", "be", "stored", "in", "if", "it", "exists", "NUMBER", "cutterrc", "NUMBER", "If", "I", "haven", "t", "miss", "any", "code", "relate", "to", "this", "this", "be", "the", "only", "location", "where", "NUMBER", "cutterrc", "should", "be", "stored", "NUMBER", "Can", "you", "please", "tell", "me", "if", "I", "miss", "something", "And", "should", "I", "make", "any", "change", "in", "the", "location", "of", "NUMBER", "cutterrc", "or", "can", "I", "let", "the", "following", "code", "be", "NUMBER", "void", "CutterCore", "loadCutterRC", "CORE_LOCK", "auto", "home", "QDir", "home", "if", "home", "NUMBER", "exists", "return", "auto", "cutterRCFileInfo", "QFileInfo", "home", "NUMBER", "cutterrc", "if", "cutterRCFileInfo", "NUMBER", "isFile", "return", "auto", "path", "cutterRCFileInfo", "NUMBER", "absoluteFilePath", "qInfo", "TAG", "Multiple", "initialization", "file", "can", "be", "loaded", "NUMBER", "ITAYC", "NUMBER", "HEN", "Do", "you", "mean", "we", "could", "load", "all", "of", "them", "and", "deal", "with", "conflict", "while", "initiliazing", "or", "do", "you", "mean", "that", "the", "we", "should", "select", "the", "first", "cutterrc", "present", "from", "the", "standard", "locations", "while", "checking", "in", "order", "This", "be", "how", "the", "search", "settings", "option", "looks", "in", "the", "vscode", "settings", "NUMBER", "I", "be", "trying", "to", "make", "it", "like", "this", "NUMBER", "A", "search", "option", "like", "this", "where", "users", "can", "search", "by", "the", "config", "variables", "as", "well", "as", "their", "description", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "png", "ITAYC", "NUMBER", "HEN", "As", "we", "have", "discussed", "on", "telegram", "the", "plan", "will", "be", "the", "following", "NUMBER", "Part", "a", "Load", "all", "file", "NUMBER", "Have", "submitted", "a", "pull", "request", "test", "for", "mac", "windows", "be", "required", "Part", "b", "Add", "simple", "text", "editor", "to", "edit", "data", "in", "NUMBER", "cutterrc", "in", "a", "standard", "location", "NUMBER", "we", "have", "to", "decide", "this", "standard", "location", "preferably", "the", "last", "loaded", "one", "as", "this", "will", "supercede", "all", "the", "previously", "loaded", "cutterc", "NUMBER", "Optional", "Part", "c", "Giving", "syntax", "highlight", "feature", "for", "this", "text", "editor", "Part", "d", "onwards", "I", "havent", "decided", "the", "exact", "plan", "NUMBER", "I", "will", "update", "after", "Part", "b", "NUMBER", "This", "will", "be", "about", "make", "the", "dynamic", "configuration", "editor", "NUMBER", "For", "part", "b", "my", "plan", "be", "to", "load", "cutterrc", "from", "a", "single", "location", "which", "will", "be", "the", "last", "one", "to", "get", "loaded", "during", "start", "of", "the", "cutter", "NUMBER", "Making", "this", "specific", "for", "each", "instance", "installation", "of", "Cutter", "be", "one", "way", "NUMBER", "For", "this", "we", "should", "be", "keep", "this", "location", "inside", "the", "Cutter", "_installation", "directory_", "NUMBER", "This", "way", "if", "someone", "have", "multiple", "installations", "of", "cutter", "in", "different", "directories", "for", "some", "reason", "they", "can", "easily", "handle", "NUMBER", "cutterrc", "for", "each", "cutter", "installation", "NUMBER", "I", "also", "don", "t", "expect", "people", "to", "have", "multiple", "NUMBER", "cutterrc", "in", "multiple", "standard", "locations", "NUMBER", "At", "the", "same", "time", "in", "case", "such", "of", "conflict", "having", "a", "NUMBER", "cutterrc", "in", "the", "installation", "directory", "itself", "will", "help", "users", "easily", "supercede", "all", "the", "other", "file", "which", "will", "be", "loaded", "NUMBER", "ITAYC", "NUMBER", "HEN", "I", "think", "you", "can", "merge", "the", "PR", "now", "Haven", "t", "test", "on", "Mac", "NUMBER", "As", "karliss", "suggested", "we", "could", "use", "QStandardPaths", "writableLocation", "AppConfigLocation", "for", "loading", "last", "loaded", "file", "NUMBER", "But", "if", "I", "do", "that", "would", "this", "location", "not", "be", "present", "on", "the", "first", "loaded", "locations", "as", "well", "In", "order", "to", "avoid", "this", "problem", "should", "I", "be", "loading", "from", "this", "location", "again", "after", "loading", "file", "from", "all", "locations", "as", "usual", "Or", "be", "there", "a", "better", "workaround", "for", "this", "One", "idea", "I", "can", "think", "of", "be", "use", "QStandardPaths", "writableLocation", "AppDataLocation", "instead", "for", "loading", "the", "last", "loaded", "NUMBER", "cutterrc", "NUMBER", "Or", "this", "could", "be", "some", "other", "standard", "location", "available", "which", "be", "better", "for", "this", "NUMBER", "LINK", "NUMBER", "qstandardpaths", "NUMBER", "html", "StandardLocation", "enum", "I", "be", "going", "to", "start", "build", "of", "part", "B", "which", "be", "add", "a", "simple", "text", "editor", "to", "edit", "data", "in", "NUMBER", "cutterrc", "in", "a", "standard", "location", "NUMBER", "Currently", "I", "be", "thinking", "about", "use", "QPlainTextEdit", "and", "loading", "NUMBER", "cutterrc", "from", "the", "location", "with", "the", "highest", "priority", "to", "be", "decided", "NUMBER", "After", "this", "it", "will", "work", "pretty", "much", "like", "a", "normal", "text", "editor", "NUMBER", "But", "for", "part", "C", "I", "will", "be", "experimenting", "with", "some", "syntax", "highlight", "features", "like", "in", "hexdump", "widget", "right", "side", "panel", "that", "karliss", "had", "point", "out", "NUMBER", "_This", "multi", "line", "text", "area", "for", "users", "to", "script", "their", "initializing", "config", "would", "not", "be", "having", "anything", "to", "do", "with", "the", "dynamic", "config", "editor", "as", "per", "my", "current", "idea", "NUMBER", "_", "I", "would", "like", "to", "know", "if", "I", "can", "proceed", "with", "this", "idea", "NUMBER", "Also", "I", "will", "be", "loading", "NUMBER", "cutterrc", "from", "the", "home", "location", "for", "now", "NUMBER", "When", "a", "better", "location", "be", "decided", "I", "can", "change", "this", "to", "that", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "facec", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "d", "NUMBER", "cfdc", "NUMBER", "c", "NUMBER", "png", "I", "have", "be", "work", "on", "part", "b", "when", "I", "get", "time", "NUMBER", "I", "would", "like", "to", "know", "the", "significance", "of", "the", "_", "OK", "_", "Dialogue", "button", "NUMBER", "Is", "it", "ever", "use", "for", "saving", "anything", "As", "far", "as", "I", "could", "find", "when", "we", "click", "it", "it", "close", "the", "preferences", "window", "NUMBER", "Just", "that", "NUMBER", "So", "if", "I", "add", "a", "_", "Save", "_", "button", "in", "it", "s", "place", "would", "it", "be", "okay", "ITAYC", "NUMBER", "HEN", "karliss", "our", "settings", "dialog", "indeed", "saves", "every", "change", "automatically", "and", "applies", "it", "to", "the", "interface", "NUMBER", "So", "users", "can", "quickly", "see", "what", "change", "without", "exiting", "and", "entering", "the", "dialog", "again", "and", "again", "NUMBER", "This", "benefit", "be", "irrelevant", "for", "NUMBER", "cutterrc", "so", "I", "think", "that", "a", "save", "button", "be", "agood", "idea", "NUMBER", "But", "not", "a", "save", "as", "NUMBER", "The", "work", "in", "part", "b", "be", "almost", "over", "NUMBER", "I", "will", "probably", "make", "a", "PR", "tomorrow", "NUMBER", "I", "want", "some", "help", "in", "choosing", "the", "location", "NUMBER", "I", "have", "be", "use", "Home", "directory", "to", "test", "in", "my", "PC", "NUMBER", "But", "could", "this", "be", "a", "read", "only", "location", "in", "any", "case", "karliss", "ITAYC", "NUMBER", "HEN", "For", "syntax", "highlight", "look", "for", "example", "in", "hexdump", "widget", "right", "side", "panel", "NUMBER", "karliss", "Can", "you", "please", "share", "a", "screenshot", "of", "hexdump", "widget", "right", "side", "panel", "that", "highlights", "syntax", "I", "don", "t", "seem", "to", "have", "any", "syntax", "highlight", "in", "this", "panel", "There", "should", "already", "be", "shortcuts", "in", "cutter", "for", "seeking", "back", "and", "forward", "based", "on", "standard", "key", "back", "and", "forward", "NUMBER", "Alt", "left", "and", "alt", "right", "on", "non", "maco", "and", "alt", "on", "maco", "NUMBER", "The", "task", "itself", "should", "be", "fix", "by", "having", "the", "same", "instance", "of", "qaction", "in", "menu", "and", "toolbar", "NUMBER", "See", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "I", "m", "not", "sure", "bug", "or", "feature", "this", "NUMBER", "I", "ve", "tried", "to", "reproduce", "in", "emulator", "debugger", "my", "old", "demo", "with", "esil", "LINK", "After", "execution", "needed", "value", "keep", "above", "stack", "and", "I", "have", "to", "click", "Seek", "to", "this", "offset", "and", "find", "it", "in", "disassm", "or", "hexdump", "view", "NUMBER", "It", "will", "be", "more", "comfortable", "if", "I", "can", "see", "a", "value", "in", "stack", "or", "another", "window", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Auto", "resizing", "stack", "view", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "Separate", "view", "for", "memory", "Additional", "context", "Example", "with", "disassm", "view", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "b", "NUMBER", "daa", "NUMBER", "ec", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "png", "Related", "to", "NUMBER", "NUMBER", "It", "doesn", "t", "change", "the", "need", "to", "improve", "stack", "viewing", "but", "I", "wanted", "to", "make", "sure", "you", "know", "that", "you", "can", "right", "click", "on", "either", "rsp", "register", "in", "register", "widget", "or", "stack", "widget", "line", "and", "select", "show", "in", "new", "or", "exist", "hexdump", "or", "disassembly", "NUMBER", "Yeap", "I", "know", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "Yeah", "I", "just", "forgot", "about", "it", "NUMBER", "Detailed", "description", "The", "first", "issue", "be", "that", "the", "disassembly", "function", "to", "rename", "a", "use", "function", "was", "not", "checking", "for", "Flag", "types", "NUMBER", "There", "be", "a", "second", "issue", "which", "I", "be", "not", "sure", "if", "be", "a", "concern", "or", "not", "NUMBER", "The", "imported", "function", "contain", "both", "a", "flag", "and", "a", "function", "type", "NUMBER", "Does", "this", "mean", "functionRenamed", "and", "flagRenamed", "should", "be", "emitted", "Test", "plan", "required", "NUMBER", "Rename", "an", "imported", "system", "function", "observe", "that", "the", "view", "be", "refreshed", "immediately", "NUMBER", "test", "rename", "imported", "function", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "e", "NUMBER", "gif", "Closing", "issue", "NUMBER", "Detailed", "description", "Currently", "python", "plugin", "output", "printed", "by", "print", "and", "radare", "cutter", "output", "printed", "into", "stderr", "stdout", "be", "only", "shown", "in", "console", "NUMBER", "This", "branch", "add", "stdout", "stderr", "redirection", "to", "the", "console", "widget", "in", "addition", "to", "the", "regular", "console", "NUMBER", "Test", "plan", "required", "Create", "a", "plugin", "that", "prints", "a", "prepared", "text", "with", "the", "text", "format", "available", "in", "r", "NUMBER", "at", "a", "very", "high", "rate", "compare", "the", "console", "widget", "output", "to", "the", "text", "file", "to", "make", "sure", "there", "weren", "t", "any", "loses", "and", "visually", "go", "over", "the", "output", "to", "confirm", "that", "the", "text", "was", "formatted", "correctly", "NUMBER", "Closing", "issue", "close", "NUMBER", "close", "NUMBER", "This", "be", "WIP", "as", "I", "be", "still", "work", "on", "the", "Windows", "solution", "but", "I", "would", "like", "to", "get", "your", "opinion", "on", "the", "direction", "so", "far", "NUMBER", "The", "main", "issue", "here", "be", "that", "radare", "prints", "incomplete", "strings", "that", "it", "update", "later", "with", "carriage", "right", "For", "example", "analysis", "NUMBER", "x", "analysis", "NUMBER", "which", "uses", "LINK", "L", "NUMBER", "NUMBER", "My", "solution", "seems", "to", "work", "without", "live", "line", "update", "but", "I", "be", "not", "sure", "if", "it", "s", "worth", "investing", "time", "into", "a", "more", "complicated", "solution", "that", "will", "implement", "carriage", "right", "overwrites", "use", "cursors", "NUMBER", "It", "wouldn", "t", "hurt", "spliting", "redirection", "tee", "logic", "from", "terminal", "emulation", "logic", "at", "least", "at", "function", "level", "NUMBER", "It", "might", "help", "in", "future", "replacing", "the", "current", "console", "widget", "with", "embeddable", "terminal", "emulator", "thus", "eliminating", "any", "problem", "with", "handle", "r", "and", "more", "NUMBER", "Although", "doing", "it", "fully", "would", "require", "more", "than", "just", "a", "pipe", "so", "some", "redirection", "logic", "modification", "would", "still", "be", "necessary", "NUMBER", "Extensively", "test", "on", "Ubuntu", "NUMBER", "and", "Windows", "NUMBER", "everything", "seems", "to", "work", "well", "NUMBER", "I", "think", "that", "terminal", "emulation", "should", "be", "a", "separate", "issue", "since", "it", "s", "far", "more", "complicated", "to", "implement", "while", "this", "PR", "could", "already", "be", "merge", "NUMBER", "The", "change", "in", "the", "last", "commit", "were", "the", "most", "I", "could", "do", "to", "merge", "platform", "specific", "code", "NUMBER", "I", "tried", "use", "_pipe", "in", "windows", "but", "the", "file", "descriptor", "doesn", "t", "support", "any", "of", "the", "methods", "Qt", "s", "Windows", "event", "dispatcher", "LINK", "_win", "NUMBER", "cpp", "uses", "to", "check", "before", "emitting", "readyRead", "for", "it", "to", "work", "in", "QSocketNotifier", "or", "QLocalSocket", "NUMBER", "Using", "QLocalServer", "instead", "of", "CreateNamedPipe", "didn", "t", "work", "with", "the", "redirection", "and", "made", "the", "implementation", "way", "more", "complicated", "QFile", "doesn", "t", "have", "any", "signals", "and", "UDP", "TCP", "sockets", "or", "new", "threads", "seem", "like", "a", "less", "favorable", "option", "NUMBER", "Cutter", "from", "Appveyor", "crashes", "on", "my", "Win", "NUMBER", "Cutter", "from", "Appveyor", "crashes", "on", "my", "Win", "NUMBER", "You", "re", "right", "I", "be", "able", "to", "reproduce", "the", "issue", "when", "run", "the", "NUMBER", "exe", "directly", "I", "have", "only", "test", "in", "poweshell", "with", "Start", "Process", "NUMBER", "cutter", "NUMBER", "exe", "RedirectStandardError", "stderr", "NUMBER", "txt", "RedirectStandardO", "utput", "stdout", "NUMBER", "txt", "The", "crash", "be", "cause", "by", "backing", "up", "the", "original", "stdout", "and", "stderr", "LINK", "L", "NUMBER", "L", "NUMBER", "without", "the", "corresponding", "Redirect", "flag", "for", "each", "NUMBER", "After", "remove", "both", "lines", "and", "the", "redirection", "of", "stdout", "to", "directly", "print", "to", "stdout", "while", "redirecting", "stderr", "I", "discover", "that", "it", "doesn", "t", "work", "without", "the", "RedirectStandardError", "flag", "NUMBER", "This", "doesn", "t", "seem", "to", "happen", "in", "a", "small", "POC", "Qt", "console", "project", "I", "have", "created", "be", "there", "something", "in", "Cutter", "s", "windows", "build", "configuration", "that", "might", "be", "relate", "to", "this", "issue", "that", "doesn", "t", "happen", "in", "regular", "console", "projects", "Also", "seems", "to", "be", "relate", "to", "not", "having", "stdout", "stderr", "in", "windows", "console", "at", "all", "NUMBER", "I", "tried", "AttachConsole", "and", "AllocConsole", "but", "it", "didn", "t", "help", "and", "stdout", "stderr", "weren", "t", "printed", "anyways", "NUMBER", "Would", "appreciate", "some", "insight", "from", "people", "who", "be", "more", "familiar", "with", "Windows", "currently", "looking", "into", "powershell", "s", "source", "code", "to", "figure", "out", "how", "those", "flags", "influence", "the", "program", "NUMBER", "This", "took", "a", "while", "and", "barely", "had", "any", "documentation", "reference", "for", "some", "reason", "but", "after", "a", "lot", "of", "attempts", "things", "seem", "to", "work", "well", "without", "a", "console", "RedirectStandardX", "with", "zero", "voodoo", "NUMBER", "Also", "windows", "cmd", "powershell", "prints", "cutter", "s", "r", "NUMBER", "s", "output", "now", "with", "colors", "proper", "format", "NUMBER", "I", "couldn", "t", "find", "a", "clean", "way", "to", "enable", "output", "when", "run", "the", "NUMBER", "exe", "directly", "from", "my", "research", "it", "seems", "that", "the", "only", "way", "to", "do", "it", "be", "to", "replace", "AttachConsole", "with", "AllocConsole", "but", "that", "will", "create", "a", "cmd", "window", "along", "with", "cutter", "I", "be", "not", "sure", "if", "this", "be", "desirable", "so", "I", "didn", "t", "go", "that", "route", "NUMBER", "Instead", "when", "run", "the", "NUMBER", "exe", "in", "windows", "you", "get", "a", "Run", "cutter", "in", "a", "console", "to", "enable", "r", "NUMBER", "output", "redirection", "into", "this", "widget", "NUMBER", "message", "in", "the", "console", "widget", "make", "it", "optional", "for", "the", "user", "NUMBER", "One", "problem", "that", "I", "did", "have", "in", "windows", "which", "seems", "to", "be", "a", "Qt", "bug", "according", "to", "google", "be", "that", "I", "be", "seeing", "OpenType", "support", "miss", "for", "Segoe", "UI", "script", "NUMBER", "OpenType", "support", "miss", "for", "MS", "Shell", "Dlg", "NUMBER", "script", "NUMBER", "OpenType", "support", "miss", "for", "Arial", "script", "NUMBER", "prints", "in", "my", "console", "NUMBER", "Those", "fonts", "be", "available", "and", "I", "don", "t", "think", "that", "this", "be", "relate", "to", "the", "console", "but", "please", "check", "if", "you", "be", "get", "it", "with", "the", "AppVeyor", "build", "NUMBER", "Could", "add", "a", "check", "in", "processQueuedOutput", "to", "suppress", "it", "or", "just", "leave", "it", "NUMBER", "I", "had", "trouble", "setting", "up", "plugins", "in", "my", "build", "so", "I", "just", "add", "a", "timer", "in", "ConsoleWidget", "with", "random", "output", "NUMBER", "Empty", "lines", "in", "between", "should", "be", "remove", "when", "not", "expected", "Fixed", "in", "the", "latest", "commit", "misunderstood", "those", "as", "intentional", "NUMBER", "The", "output", "be", "printed", "both", "in", "the", "Console", "widget", "and", "the", "Terminal", "itself", "NUMBER", "Is", "it", "expected", "Yes", "I", "intentionally", "keep", "the", "interface", "as", "it", "currently", "be", "by", "printing", "everything", "to", "stderr", "NUMBER", "This", "also", "allows", "redirection", "to", "file", "and", "lets", "the", "user", "see", "what", "happened", "if", "cutter", "crashes", "NUMBER", "Could", "make", "it", "toggleable", "with", "a", "flag", "up", "to", "you", "NUMBER", "executing", "echo", "hello", "from", "the", "console", "widget", "will", "output", "in", "the", "terminal", "R", "NUMBER", "prints", "it", "so", "it", "gets", "redirected", "to", "the", "widget", "regular", "console", "along", "with", "anything", "else", "in", "stdout", "stderr", "NUMBER", "Is", "this", "really", "an", "issue", "Might", "be", "useful", "when", "run", "a", "command", "that", "the", "console", "widget", "can", "t", "format", "properly", "NUMBER", "Ok", "run", "it", "a", "bunch", "of", "times", "and", "had", "miss", "output", "as", "well", "NUMBER", "From", "the", "quick", "flashing", "of", "the", "output", "before", "it", "s", "removal", "it", "seems", "to", "be", "relate", "to", "the", "cursor", "interaction", "with", "executeCommand", "also", "calls", "removeLastLine", "NUMBER", "linux", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "acdfcc", "NUMBER", "ec", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "ddb", "b", "NUMBER", "aaec", "NUMBER", "be", "NUMBER", "png", "I", "will", "look", "into", "it", "NUMBER", "I", "think", "that", "someone", "should", "also", "try", "out", "windows", "to", "see", "if", "they", "get", "the", "OpenType", "error", "that", "I", "mention", "OpenType", "support", "miss", "for", "Segoe", "UI", "script", "NUMBER", "OpenType", "support", "miss", "for", "MS", "Shell", "Dlg", "NUMBER", "script", "NUMBER", "OpenType", "support", "miss", "for", "Arial", "script", "NUMBER", "Might", "be", "an", "unrelated", "issue", "though", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "Closing", "issue", "close", "NUMBER", "ITAYC", "NUMBER", "HEN", "suggested", "me", "to", "implement", "it", "in", "a", "way", "that", "when", "Ctrl", "C", "be", "pressed", "it", "will", "check", "if", "there", "be", "any", "text", "selected", "NUMBER", "If", "so", "regularly", "copy", "it", "otherwise", "Ctrl", "C", "should", "copy", "the", "highlight", "token", "TAG", "Detailed", "description", "Replace", "hard", "code", "system", "plugin", "directories", "with", "use", "of", "QStandardPaths", "it", "should", "return", "the", "same", "values", "as", "what", "was", "use", "before", "but", "with", "less", "platform", "specific", "code", "in", "Cutter", "NUMBER", "Potentially", "simplify", "support", "of", "new", "platforms", "support", "by", "QT", "Supports", "gobal", "plugin", "directories", "on", "Linux", "NUMBER", "Locations", "chosen", "by", "Qt", "with", "any", "modifications", "do", "by", "distro", "maintainers", "NUMBER", "Build", "option", "to", "specify", "additional", "plugin", "directories", "for", "more", "pedantic", "package", "maintainers", "that", "think", "that", "plugins", "be", "not", "data", "NUMBER", "Test", "plan", "required", "TAG", "Run", "on", "Linux", "macOS", "Windows", "and", "verify", "that", "printed", "paths", "console", "output", "indicates", "attempts", "to", "load", "from", "correct", "directories", "Linux", "heavy_check_mark", "Windows", "heavy_check_mark", "test", "by", "yossizap", "macOS", "help", "wanted", "Run", "AppImage", "and", "test", "that", "plugins", "packed", "inside", "AppImage", "be", "loaded", "heavy_check_mark", "TAG", "Closing", "issue", "TAG", "Closes", "NUMBER", "I", "need", "to", "test", "how", "it", "interacts", "with", "Appimage", "and", "if", "I", "can", "remove", "the", "special", "case", "for", "that", "NUMBER", "What", "be", "the", "paths", "use", "on", "linux", "xarkes", "See", "LINK", "NUMBER", "qstandardpaths", "NUMBER", "html", "Okay", "so", "NUMBER", "local", "share", "TAG", "NUMBER", "Ping", "NUMBER", "local", "share", "TAG", "usr", "local", "share", "TAG", "usr", "share", "TAG", "The", "first", "one", "as", "user", "plugin", "directory", "and", "the", "rest", "for", "system", "plugins", "either", "packed", "together", "with", "cutter", "or", "install", "through", "system", "s", "package", "manager", "NUMBER", "usr", "local", "share", "usr", "share", "This", "do", "not", "look", "like", "a", "sane", "path", "to", "put", "system", "wide", "plugins", "on", "Linux", "NUMBER", "Usual", "place", "for", "native", "NUMBER", "so", "plugins", "be", "either", "usr", "lib", "APPNAME", "or", "usr", "lib", "NUMBER", "APPNAME", "depending", "on", "architecture", "NUMBER", "And", "for", "python", "plugins", "it", "be", "probably", "usr", "lib", "python", "PYTHONVERSION", "site", "package", "APPNAME", "not", "an", "expert", "here", "just", "saw", "few", "applications", "doing", "this", "NUMBER", "And", "the", "best", "way", "to", "implement", "this", "be", "to", "provide", "some", "compile", "time", "option", "to", "specify", "these", "paths", "NUMBER", "Otherwise", "package", "maintainers", "will", "really", "hate", "you", "NUMBER", "I", "meant", "NUMBER", "local", "share", "TAG", "usr", "local", "share", "TAG", "usr", "share", "TAG", "github", "ate", "the", "angle", "brackets", "NUMBER", "As", "explained", "before", "those", "paths", "be", "come", "from", "Qt", "StandardPaths", "according", "to", "qt", "configuration", "NUMBER", "Finally", "prepared", "a", "setup", "for", "build", "appimage", "NUMBER", "Looks", "like", "it", "doesn", "t", "need", "manual", "handle", "as", "well", "NUMBER", "Now", "I", "have", "to", "rebuild", "it", "again", "NUMBER", "Had", "to", "leave", "the", "special", "case", "for", "APPIMAGE", "NUMBER", "Qt", "doesn", "t", "handle", "that", "NUMBER", "Ran", "in", "Windows", "Plugins", "be", "loaded", "from", "C", "Users", "User", "AppData", "Roaming", "RadareOrg", "Cutter", "plugins", "Loaded", "NUMBER", "plugin", "s", "NUMBER", "Plugins", "be", "loaded", "from", "C", "ProgramData", "RadareOrg", "Cutter", "plugins", "Plugins", "be", "loaded", "from", "C", "workspace", "cutter", "build_x", "NUMBER", "cutter", "plugins", "Plugins", "be", "loaded", "from", "C", "workspace", "cutter", "build_x", "NUMBER", "cutter", "data", "plugins", "Plugins", "be", "loaded", "from", "C", "workspace", "cutter", "build_x", "NUMBER", "cutter", "data", "RadareOrg", "Cutter", "plugins", "Anything", "else", "macOS", "florian", "macbook", "florian", "Applications", "Cutter", "NUMBER", "app", "Contents", "MacOS", "Cutter", "Cutter", "Launch", "Script", "for", "macOS", "Setting", "PYTHONHOME", "Applications", "Cutter", "NUMBER", "app", "Contents", "Frameworks", "Python", "NUMBER", "framework", "Versions", "Current", "for", "macOS", "Application", "Bundle", "NUMBER", "PYTHONHOME", "Applications", "Cutter", "NUMBER", "app", "Contents", "Frameworks", "Python", "NUMBER", "framework", "Versions", "Current", "Setting", "r", "NUMBER", "prefix", "Applications", "Cutter", "NUMBER", "app", "Contents", "Resources", "r", "NUMBER", "for", "macOS", "Application", "Bundle", "NUMBER", "Setting", "r", "NUMBER", "plugins", "dir", "Applications", "Cutter", "NUMBER", "app", "Contents", "Resources", "r", "NUMBER", "share", "radare", "NUMBER", "plugins", "Not", "loading", "library", "because", "it", "has", "already", "be", "loaded", "from", "somewhere", "else", "Users", "florian", "NUMBER", "local", "share", "radare", "NUMBER", "plugins", "core_ghidra", "NUMBER", "dylib", "Plugins", "be", "loaded", "from", "Users", "florian", "Library", "Application", "Support", "RadareOrg", "Cutter", "plugins", "Load", "Error", "for", "plugin", "libr", "NUMBER", "ghidra_cutter", "NUMBER", "dylib", "The", "plugin", "Users", "florian", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "native", "libr", "NUMBER", "ghidra_cutter", "NUMBER", "dylib", "uses", "incompatible", "Qt", "library", "NUMBER", "NUMBER", "release", "Loaded", "NUMBER", "plugin", "s", "NUMBER", "Plugins", "be", "loaded", "from", "Library", "Application", "Support", "RadareOrg", "Cutter", "plugins", "Plugins", "be", "loaded", "from", "Applications", "Cutter", "NUMBER", "app", "Contents", "Resources", "plugins", "Loaded", "NUMBER", "plugin", "s", "NUMBER", "Alright", "let", "s", "merge", "Removed", "whitespace", "via", "trimmed", "from", "the", "QString", "for", "StackWidget", "in", "order", "for", "the", "copy", "paste", "to", "operate", "as", "intended", "NUMBER", "close", "NUMBER", "ITAYC", "NUMBER", "HEN", "I", "was", "able", "to", "get", "a", "build", "do", "NUMBER", "I", "will", "have", "time", "today", "to", "try", "and", "resolve", "the", "issue", "NUMBER", "ITAYC", "NUMBER", "HEN", "Ahh", "yes", "the", "fetch", "merge", "pull", "in", "the", "change", "from", "b", "NUMBER", "ba", "NUMBER", "When", "I", "click", "at", "address", "in", "disassembler", "view", "I", "see", "an", "auto", "highlight", "on", "address", "but", "couldn", "t", "copy", "it", "with", "cmd", "C", "and", "should", "press", "cmd", "shift", "c", "or", "highlight", "with", "mouse", "click", "and", "after", "it", "press", "cmd", "C", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "e", "NUMBER", "NUMBER", "d", "affdfaeb", "NUMBER", "png", "I", "agree", "with", "ITAYC", "NUMBER", "HEN", "that", "this", "isn", "t", "a", "bug", "NUMBER", "In", "case", "of", "copying", "with", "empty", "selection", "in", "Cutter", "it", "might", "copy", "the", "highlight", "token", "instead", "of", "line", "NUMBER", "In", "code", "editors", "copying", "a", "line", "be", "useful", "for", "moving", "code", "around", "NUMBER", "I", "can", "t", "imagine", "a", "common", "use", "case", "for", "copying", "single", "disassembly", "line", "NUMBER", "Copying", "the", "selected", "token", "would", "be", "useful", "not", "only", "for", "address", "but", "also", "various", "constants", "from", "instruction", "argument", "NUMBER", "In", "code", "editors", "word", "can", "often", "be", "selected", "use", "doubleclick", "but", "cutter", "it", "will", "trigger", "change", "of", "seek", "position", "NUMBER", "karliss", "yeap", "because", "the", "token", "highlight", "without", "copy", "functional", "have", "confused", "not", "only", "me", "Copy", "line", "be", "worse", "than", "this", "but", "an", "empty", "copy", "after", "cmd", "c", "in", "this", "case", "be", "the", "worst", "NUMBER", "Environment", "information", "Operating", "System", "Arch", "Linux", "Cutter", "version", "Version", "NUMBER", "use", "r", "NUMBER", "NUMBER", "File", "format", "All", "file", "formats", "Describe", "the", "bug", "After", "installing", "r", "NUMBER", "ghidra", "dec", "you", "can", "t", "choose", "r", "NUMBER", "dec", "tooltip", "be", "inactive", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Install", "r", "NUMBER", "dec", "and", "r", "NUMBER", "ghidra", "dec", "NUMBER", "Open", "Cutter", "NUMBER", "Ghidra", "s", "decompiler", "open", "by", "default", "but", "you", "can", "t", "change", "it", "Screenshots", "screenshot", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "db", "NUMBER", "e", "NUMBER", "c", "NUMBER", "png", "Sorry", "for", "late", "response", "NUMBER", "I", "can", "reproduce", "this", "issue", "with", "current", "Cutter", "s", "version", "NUMBER", "Have", "a", "nice", "day", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "As", "a", "user", "I", "want", "to", "be", "able", "to", "copy", "some", "function", "in", "the", "function", "panel", "and", "paste", "the", "information", "in", "a", "document", "Describe", "the", "solution", "you", "d", "like", "TAG", "Select", "and", "copy", "including", "cmd", "c", "should", "copy", "the", "function", "and", "informations", "and", "paste", "should", "provide", "all", "those", "information", "Reported", "by", "utkonos", "Thank", "you", "kind", "sir", "Is", "the", "request", "here", "to", "allow", "for", "copying", "all", "selected", "function", "address", "from", "the", "function", "panel", "Or", "be", "the", "request", "to", "copy", "other", "details", "in", "addition", "to", "the", "address", "es", "of", "the", "selected", "function", "s", "All", "the", "details", "that", "be", "in", "the", "function", "panel", "separated", "by", "a", "t", "character", "from", "the", "selected", "function", "NUMBER", "Copy", "rows", "yes", "NUMBER", "This", "pull", "request", "contains", "NUMBER", "change", "NUMBER", "Update", "Makefile", "and", "add", "Dockerfile", "dev", "to", "deploy", "local", "file", "rather", "than", "pulling", "from", "Master", "branch", "NUMBER", "NUMBER", "Update", "Dockerfile", "dev", "to", "compile", "radare", "NUMBER", "before", "compile", "cutter", "previously", "if", "any", "file", "had", "change", "in", "cutter", "then", "radare", "NUMBER", "would", "be", "recompiled", "even", "though", "nothing", "had", "change", "NUMBER", "This", "fix", "this", "problem", "NUMBER", "NUMBER", "Add", "NUMBER", "dockerignore", "to", "only", "copy", "required", "file", "when", "deploying", "to", "Docker", "for", "both", "Dockerfile", "and", "Dockerfile", "dev", "size", "reduced", "from", "NUMBER", "mb", "to", "NUMBER", "mb", "NUMBER", "As", "for", "the", "readme", "dockerfile", "and", "makefile", "looks", "good", "to", "me", "Regarding", "the", "build", "scripts", "I", "m", "not", "too", "involved", "in", "the", "cutter", "build", "process", "but", "isn", "t", "there", "some", "build", "script", "for", "r", "NUMBER", "cutter", "that", "can", "be", "re", "use", "for", "this", "Just", "a", "suggestion", "though", "ps", "NUMBER", "There", "be", "a", "build", "NUMBER", "sh", "script", "that", "build", "radare", "NUMBER", "and", "cutter", "in", "one", "go", "which", "I", "have", "copied", "to", "build", "cutter", "NUMBER", "sh", "and", "moved", "the", "relevant", "radare", "NUMBER", "section", "to", "build", "radare", "NUMBER", "sh", "so", "that", "it", "can", "be", "run", "separately", "NUMBER", "To", "do", "as", "suggested", "I", "could", "update", "the", "build", "NUMBER", "sh", "script", "to", "run", "as", "it", "be", "currently", "when", "no", "flags", "be", "provide", "and", "only", "run", "the", "radare", "NUMBER", "or", "non", "radare", "NUMBER", "sections", "when", "a", "r", "or", "c", "flag", "be", "provide", "respectively", "NUMBER", "Thus", "remove", "the", "need", "for", "the", "extra", "scripts", "NUMBER", "Just", "for", "information", "I", "think", "we", "agreed", "to", "remove", "build", "NUMBER", "sh", "from", "Cutter", "code", "base", "as", "only", "a", "single", "cmake", "command", "be", "sufficient", "to", "build", "Cutter", "NUMBER", "So", "I", "would", "say", "it", "s", "best", "to", "add", "a", "specific", "build", "script", "to", "build", "it", "for", "Docker", "NUMBER", "That", "sounds", "good", "to", "me", "NUMBER", "Original", "Message", "From", "xarkes", "TAG", "To", "radareorg", "cutter", "TAG", "Cc", "ps", "TAG", "Mention", "TAG", "Sent", "Wed", "NUMBER", "Oct", "NUMBER", "NUMBER", "NUMBER", "Subject", "Re", "radareorg", "cutter", "Allow", "local", "development", "use", "Docker", "NUMBER", "Just", "for", "information", "I", "think", "we", "agreed", "to", "remove", "build", "NUMBER", "sh", "from", "Cutter", "code", "base", "as", "only", "a", "single", "cmake", "command", "be", "sufficient", "to", "build", "Cutter", "NUMBER", "So", "I", "would", "say", "it", "s", "best", "to", "add", "a", "specific", "build", "script", "to", "build", "it", "for", "Docker", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Okay", "so", "the", "build", "NUMBER", "sh", "script", "should", "be", "moved", "to", "the", "docker", "subdirectory", "and", "then", "update", "as", "required", "to", "remove", "the", "need", "for", "the", "extra", "build", "scripts", "You", "can", "remove", "build", "NUMBER", "sh", "only", "if", "the", "build", "process", "be", "checked", "and", "if", "the", "build", "instructions", "be", "update", "NUMBER", "I", "think", "it", "won", "t", "fit", "in", "that", "PR", "so", "better", "not", "touch", "it", "for", "now", "I", "would", "say", "NUMBER", "The", "Cutter", "logo", "doesn", "t", "seem", "to", "be", "centered", "in", "the", "screenshot", "NUMBER", "Code", "looks", "fine", "NUMBER", "When", "I", "open", "new", "hexdump", "I", "get", "this", "NUMBER", "I", "wouldn", "t", "call", "it", "reasonable", "size", "and", "proportions", "NUMBER", "hexdump", "screenshot", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "bfc", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "f", "f", "NUMBER", "a", "NUMBER", "png", "Detailed", "description", "Use", "AddressableItemContextMenu", "in", "Registers", "widgtet", "NUMBER", "Works", "when", "clicking", "on", "either", "label", "or", "text", "input", "field", "NUMBER", "Test", "plan", "required", "start", "emulation", "right", "click", "rsp", "label", "check", "address", "use", "xrefs", "right", "click", "rsp", "input", "field", "check", "address", "use", "xrefs", "repeat", "on", "rip", "which", "should", "have", "different", "address", "open", "menu", "use", "menu", "key", "on", "keyboard", "screenshot", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "feee", "NUMBER", "ea", "NUMBER", "png", "Closing", "issue", "TAG", "As", "discussed", "I", "hid", "the", "shortcuts", "NUMBER", "Not", "sure", "if", "it", "was", "worth", "it", "NUMBER", "screenshot", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "ca", "NUMBER", "NUMBER", "ec", "NUMBER", "png", "ITAYC", "NUMBER", "HEN", "I", "meant", "that", "not", "having", "the", "shortcuts", "in", "the", "menu", "that", "has", "them", "everywhere", "means", "extra", "code", "that", "needs", "to", "be", "maintained", "NUMBER", "In", "my", "opinion", "having", "the", "shortcuts", "isn", "t", "too", "confusing", "as", "it", "be", "the", "same", "menu", "as", "everywhere", "else", "NUMBER", "It", "would", "be", "more", "confusing", "if", "this", "menu", "was", "unique", "to", "register", "widget", "NUMBER", "I", "already", "remove", "the", "shortcut", "display", "at", "this", "point", "it", "would", "be", "a", "bit", "silly", "to", "remove", "them", "NUMBER", "Environment", "information", "Operating", "System", "Parrot", "OS", "NUMBER", "x", "NUMBER", "Cutter", "version", "NUMBER", "File", "format", "ELF", "Describe", "the", "bug", "When", "i", "change", "variable", "name", "the", "menu", "be", "still", "buggy", "i", "change", "it", "via", "retype", "variable", "comment", "next", "to", "the", "instructor", "was", "use", "old", "name", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Open", "binary", "file", "now", "our", "char", "buf", "should", "be", "defined", "as", "char", "s", "NUMBER", "Comment", "next", "to", "instructor", "in", "any", "code", "be", "s", "NUMBER", "Right", "click", "rename", "variable", "set", "to", "other", "name", "NUMBER", "Comment", "be", "still", "use", "s", "as", "variable", "name", "while", "the", "name", "in", "instructor", "be", "new", "name", "Expected", "behavior", "Comment", "should", "use", "new", "name", "as", "well", "Screenshots", "NUMBER", "The", "name", "before", "edit", "s", "NUMBER", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fa", "NUMBER", "df", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "png", "NUMBER", "Edit", "s", "NUMBER", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bf", "NUMBER", "df", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "eaeaa", "NUMBER", "png", "NUMBER", "New", "name", "be", "defined", "comment", "still", "use", "s", "NUMBER", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ba", "NUMBER", "df", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ff", "NUMBER", "e", "NUMBER", "png", "TAG", "Additional", "context", "TAG", "Hey", "I", "had", "a", "look", "into", "this", "issue", "and", "turns", "out", "that", "this", "be", "just", "a", "simple", "confusion", "because", "of", "the", "same", "names", "s", "NUMBER", "and", "s", "NUMBER", "in", "this", "case", "NUMBER", "The", "comments", "in", "pink", "you", "see", "be", "just", "the", "prototype", "names", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fe", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "NUMBER", "fd", "NUMBER", "a", "NUMBER", "png", "Look", "at", "the", "synopsis", "section", "Look", "at", "the", "third", "picture", "that", "you", "posted", "it", "clearly", "shows", "that", "New_name", "will", "be", "treated", "as", "s", "NUMBER", "and", "string", "as", "s", "NUMBER", "in", "char", "strcat", "char", "s", "NUMBER", "const", "char", "s", "NUMBER", "NUMBER", "Environment", "information", "Operating", "System", "Manjaro", "linux", "x", "NUMBER", "kernel", "NUMBER", "Cutter", "version", "Cutter", "NUMBER", "r", "NUMBER", "NUMBER", "File", "format", "elf", "NUMBER", "Downloaded", "here", "LINK", "Describe", "the", "bug", "Function", "main", "NUMBER", "In", "graph", "view", "and", "in", "decompiler", "view", "last", "instruction", "in", "block", "with", "code", "last", "addres", "NUMBER", "x", "NUMBER", "e", "NUMBER", "call", "sym", "NUMBER", "phase_", "NUMBER", "But", "it", "not", "end", "of", "function", "NUMBER", "Ret", "in", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "In", "Cutter", "NUMBER", "all", "work", "NUMBER", "TAG", "To", "Reproduce", "Auto", "Analysis", "Enabled", "Level", "Auto", "analysis", "aaa", "Screenshots", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "c", "NUMBER", "deb", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "da", "NUMBER", "dc", "NUMBER", "ef", "NUMBER", "png", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "Ah", "my", "bad", "I", "miss", "the", "submodule", "update", "line", "NUMBER", "Many", "people", "asked", "me", "how", "to", "zoom", "in", "Cutter", "and", "I", "think", "the", "main", "reason", "be", "that", "we", "do", "not", "follow", "the", "standard", "NUMBER", "Web", "browsers", "and", "many", "apps", "use", "CTRL", "with", "or", "so", "I", "thought", "it", "would", "be", "better", "that", "Cutter", "do", "it", "as", "well", "NUMBER", "TAG", "Detailed", "description", "Use", "addressable", "item", "context", "menu", "in", "stack", "widget", "NUMBER", "Allow", "acting", "both", "on", "stack", "position", "and", "value", "point", "by", "pointer", "on", "stack", "NUMBER", "Respect", "value", "editing", "directly", "in", "table", "NUMBER", "Previously", "it", "allow", "editing", "the", "values", "but", "change", "were", "ignored", "NUMBER", "Test", "plan", "required", "Start", "emulator", "Edit", "a", "value", "use", "context", "menu", "Edit", "a", "value", "cell", "in", "table", "use", "double", "click", "or", "f", "NUMBER", "to", "enter", "edit", "mode", "confirm", "with", "enter", "Try", "editing", "a", "value", "in", "table", "again", "confirm", "that", "it", "be", "possible", "to", "enter", "edit", "mode", "Right", "click", "on", "offset", "cell", "click", "xrefs", "and", "confirm", "that", "address", "be", "correct", "Right", "click", "on", "one", "of", "edit", "values", "confirm", "that", "address", "be", "correct", "use", "xrefs", "Open", "context", "menu", "use", "menu", "key", "on", "keyboard", "confirm", "target", "address", "Test", "that", "shortcuts", "work", "by", "clicking", "on", "cell", "and", "pressing", "x", "for", "xrefs", "try", "both", "offset", "and", "value", "column", "Closing", "issue", "TAG", "NUMBER", "Is", "probably", "slightly", "unexpect", "interaction", "of", "reacting", "to", "double", "click", "and", "double", "click", "be", "one", "of", "indicators", "for", "entering", "edit", "mode", "NUMBER", "Result", "isn", "t", "too", "bad", "NUMBER", "I", "could", "be", "convinced", "that", "it", "s", "intentional", "NUMBER", "NUMBER", "Qt", "allows", "configuring", "multiple", "ways", "for", "entering", "edit", "mode", "NUMBER", "By", "default", "most", "of", "them", "be", "enable", "NUMBER", "I", "don", "t", "see", "a", "reason", "to", "change", "it", "unless", "it", "interferes", "with", "other", "functionality", "or", "there", "be", "high", "risk", "of", "confusion", "NUMBER", "Both", "argument", "sound", "reasonable", "NUMBER", "For", "NUMBER", "What", "s", "more", "important", "seeking", "or", "editing", "I", "would", "expect", "seeking", "to", "return", "address", "be", "a", "common", "operation", "NUMBER", "If", "you", "accidentally", "start", "editing", "value", "esc", "key", "works", "still", "disabled", "double", "click", "and", "any", "key", "edit", "triggers", "NUMBER", "In", "general", "I", "agree", "that", "it", "would", "be", "useful", "but", "I", "would", "say", "it", "s", "out", "of", "scope", "for", "this", "issue", "NUMBER", "Also", "in", "this", "specific", "case", "stack", "be", "very", "unlikely", "to", "contain", "code", "NUMBER", "So", "should", "we", "merge", "it", "The", "current", "behavior", "looks", "fine", "to", "me", "NUMBER", "This", "fix", "broken", "functionality", "cause", "by", "LINK", "and", "close", "LINK", "Changes", "in", "radare", "NUMBER", "be", "aho", "ahd", "aht", "aho", "ta", "aht", "tas", "ahts", "aat", "aafr", "taa", "aat", "I", "think", "they", "be", "all", "covered", "now", "in", "this", "PR", "NUMBER", "Anyway", "since", "it", "s", "my", "first", "contribution", "to", "this", "repo", "double", "checking", "by", "any", "other", "core", "dev", "would", "be", "great", "NUMBER", "Ideally", "should", "work", "with", "current", "selection", "in", "hexdump", "disasm", "without", "having", "to", "supply", "a", "size", "NUMBER", "I", "start", "work", "on", "the", "hexdump", "version", "but", "get", "stuck", "build", "the", "AppImage", "to", "test", "my", "change", "NUMBER", "Might", "get", "another", "chunk", "of", "free", "time", "towards", "the", "end", "of", "this", "week", "no", "promises", "though", "NUMBER", "There", "be", "no", "need", "to", "build", "AppImage", "for", "development", "purpose", "unless", "you", "be", "test", "the", "Appimage", "packaging", "itself", "NUMBER", "Hello", "I", "implement", "the", "sub", "menu", "for", "strings", "NUMBER", "I", "will", "create", "PR", "with", "this", "feature", "after", "cleanup", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ecc", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dea", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "png", "Environment", "information", "Operating", "System", "lsb_release", "a", "No", "LSB", "modules", "be", "available", "NUMBER", "Distributor", "ID", "Ubuntu", "Description", "Ubuntu", "NUMBER", "LTS", "Release", "NUMBER", "Codename", "xenial", "Cutter", "version", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "appimage", "File", "format", "AppImage", "unless", "this", "refers", "to", "the", "file", "format", "I", "be", "trying", "to", "inspect", "NUMBER", "Describe", "the", "bug", "Dynamic", "linker", "fail", "to", "link", "some", "symbol", "from", "the", "AppImage", "as", "it", "expects", "GLIBC", "NUMBER", "NUMBER", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "appimage", "NUMBER", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "appimage", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libc", "NUMBER", "so", "NUMBER", "version", "GLIBC_", "NUMBER", "not", "find", "required", "by", "NUMBER", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "appimage", "NUMBER", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "appimage", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "libc", "NUMBER", "so", "NUMBER", "version", "GLIBC_", "NUMBER", "not", "find", "required", "by", "tmp", "NUMBER", "mount_CutterbjnZhc", "usr", "bin", "NUMBER", "lib", "libr_util", "NUMBER", "so", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Run", "on", "a", "Ubuntu", "NUMBER", "NUMBER", "Download", "the", "AppImage", "e", "NUMBER", "g", "NUMBER", "wget", "LINK", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "appimage", "NUMBER", "Make", "AppImage", "executable", "e", "NUMBER", "g", "NUMBER", "chmod", "x", "NUMBER", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "appimage", "NUMBER", "Execute", "it", "and", "observe", "the", "issue", "describe", "above", "e", "NUMBER", "g", "NUMBER", "NUMBER", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "appimage", "Expected", "behavior", "Given", "this", "be", "an", "AppImage", "I", "would", "expect", "it", "to", "run", "especially", "since", "the", "kernel", "version", "it", "expects", "be", "rather", "ancient", "NUMBER", "but", "the", "GLIBC", "version", "be", "rather", "recent", "LINK", "NUMBER", "Timeline", "February", "NUMBER", "NUMBER", "file", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "appimage", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "appimage", "ELF", "NUMBER", "bit", "LSB", "executable", "x", "NUMBER", "NUMBER", "version", "NUMBER", "dynamically", "linked", "interpreter", "lib", "NUMBER", "l", "for", "GNU", "Linux", "NUMBER", "stripped", "Of", "course", "certain", "optimizations", "for", "newer", "CPUs", "could", "still", "cause", "an", "issue", "but", "the", "symbols", "should", "not", "NUMBER", "Possible", "mitigation", "As", "I", "write", "already", "on", "Telegram", "LINK", "the", "issue", "can", "be", "typically", "solve", "i", "NUMBER", "e", "NUMBER", "keep", "build", "on", "a", "new", "system", "but", "have", "that", "run", "on", "older", "GLIBC", "version", "etc", "provide", "the", "emitted", "opcodes", "be", "compatible", "with", "that", "older", "system", "NUMBER", "No", "need", "to", "revert", "back", "to", "a", "Xenial", "based", "build", "as", "that", "will", "keep", "the", "problem", "and", "simply", "shift", "it", "down", "a", "number", "of", "GLIBC", "version", "NUMBER", "One", "way", "be", "to", "define", "a", "macro", "in", "your", "C", "C", "headers", "e", "NUMBER", "g", "NUMBER", "in", "one", "include", "everywhere", "like", "so", "define", "GLIBC_COMPAT_SYMBOL", "FFF", "asm", "NUMBER", "symver", "FFF", "FFF", "GLIBC_", "NUMBER", "I", "think", "the", "idea", "may", "have", "originated", "here", "LINK", "NUMBER", "but", "I", "be", "not", "sure", "NUMBER", "I", "ve", "be", "use", "it", "for", "years", "and", "it", "only", "ever", "affected", "a", "handful", "of", "symbols", "in", "the", "software", "I", "was", "maintaining", "NUMBER", "This", "will", "cause", "the", "symbol", "pass", "as", "FFF", "a", "name", "not", "a", "string", "to", "be", "aliased", "to", "a", "particular", "version", "of", "that", "symbol", "NUMBER", "If", "you", "have", "ever", "build", "software", "for", "a", "number", "of", "platforms", "and", "GLIBC", "version", "you", "may", "have", "run", "into", "memcpy", "GLIBC_", "NUMBER", "be", "required", "NUMBER", "Taking", "the", "above", "define", "you", "can", "state", "GLIBC_COMPAT_SYMBOL", "memcpy", "NUMBER", "and", "it", "will", "be", "aliased", "to", "the", "older", "but", "more", "sane", "in", "this", "case", "version", "of", "memcpy", "NUMBER", "The", "downside", "of", "this", "approach", "be", "that", "this", "has", "to", "be", "do", "in", "every", "single", "source", "file", "you", "have", "NUMBER", "By", "way", "of", "include", "when", "use", "gcc", "this", "can", "be", "do", "NUMBER", "That", "define", "provide", "above", "be", "specific", "to", "x", "NUMBER", "NUMBER", "NUMBER", "because", "different", "architectures", "have", "be", "support", "starting", "with", "different", "library", "version", "for", "example", "you", "would", "have", "a", "different", "common", "denominator", "version", "NUMBER", "So", "for", "PowerPC", "NUMBER", "bit", "the", "above", "should", "use", "GLIBC_", "NUMBER", "NUMBER", "for", "x", "NUMBER", "NUMBER", "I", "have", "fared", "well", "use", "GLIBC_", "NUMBER", "NUMBER", "Other", "support", "architectures", "may", "require", "other", "lowest", "version", "numbers", "NUMBER", "Note", "however", "that", "not", "all", "symbols", "be", "as", "trivial", "as", "memcpy", "where", "NUMBER", "_established_", "the", "undefined", "behavior", "in", "case", "of", "overlapping", "buffers", "be", "pass", "NUMBER", "Additionally", "you", "can", "and", "that", "s", "generally", "the", "favorable", "method", "tell", "the", "assembler", "what", "mapping", "to", "use", "in", "case", "of", "the", "gcc", "driver", "frontend", "you", "d", "pass", "gcc", "NUMBER", "Wa", "defsym", "memcpy", "memcpy", "GLIBC_", "NUMBER", "NUMBER", "NUMBER", "but", "this", "be", "still", "only", "viable", "if", "you", "don", "t", "statically", "link", "_some_", "pre", "build", "component", "which", "itself", "has", "newer", "symbol", "requirements", "imbued", "NUMBER", "In", "that", "last", "case", "the", "only", "option", "that", "I", "be", "aware", "of", "left", "would", "be", "a", "linker", "script", "LINK", "also", "here", "LINK", "_Scripts", "containing", "something", "use", "PROVIDE", "LINK", "to", "alias", "one", "symbol", "name", "to", "another", "NUMBER", "This", "can", "be", "pass", "in", "such", "a", "way", "as", "to", "_amend_", "the", "exist", "implicit", "linker", "script", "or", "use", "T", "to", "replace", "it", "NUMBER", "A", "wrapper", "like", "musl", "gcc", "together", "with", "a", "customized", "specs", "file", "see", "gcc", "dumpspecs", "could", "be", "use", "to", "automate", "this", "as", "much", "as", "possible", "without", "having", "to", "rely", "on", "Magic", "Sauce", "on", "the", "build", "system", "itself", "NUMBER", "Anyway", "the", "takeaway", "should", "be", "that", "the", "problem", "can", "be", "solve", "_without_", "revert", "back", "to", "an", "older", "build", "system", "compiler", "toolchain", "NUMBER", "Alright", "by", "way", "of", "appimage", "extract", "I", "extracted", "the", "squashfs", "contents", "NUMBER", "Then", "I", "made", "myself", "a", "list", "of", "all", "the", "ELF", "file", "find", "type", "f", "exec", "file", "grep", "P", "ELF", "d", "NUMBER", "bit", "I", "also", "cut", "myself", "a", "list", "of", "just", "the", "ELF", "file", "paths", "names", "find", "type", "f", "exec", "file", "grep", "P", "ELF", "d", "NUMBER", "bit", "cut", "d", "f", "NUMBER", "NUMBER", "elf", "names", "NUMBER", "txt", "NUMBER", "and", "then", "run", "all", "ELF", "file", "through", "readelf", "dyn", "syms", "to", "find", "any", "GLIBC", "requirements", "for", "GLIBC", "NUMBER", "and", "newer", "NUMBER", "For", "reference", "GLIBC", "NUMBER", "was", "release", "in", "May", "NUMBER", "ten", "years", "ago", "LINK", "NUMBER", "Timeline", "NUMBER", "The", "outcome", "was", "a", "list", "of", "file", "I", "named", "recent", "syms", "NUMBER", "txt", "also", "attached", "cat", "NUMBER", "elf", "names", "NUMBER", "txt", "while", "read", "fname", "do", "echo", "fname", "readelf", "dyn", "syms", "fname", "grep", "P", "GLIBC_", "NUMBER", "NUMBER", "NUMBER", "d", "do", "NUMBER", "recent", "syms", "NUMBER", "txt", "The", "summary", "be", "this", "cat", "NUMBER", "elf", "names", "NUMBER", "txt", "while", "read", "fname", "do", "readelf", "dyn", "syms", "fname", "grep", "P", "GLIBC_", "NUMBER", "NUMBER", "NUMBER", "d", "do", "awk", "NUMBER", "UND", "print", "NUMBER", "sort", "u", "accept", "NUMBER", "GLIBC_", "NUMBER", "clock_getres", "GLIBC_", "NUMBER", "clock_gettime", "GLIBC_", "NUMBER", "clock_nanosleep", "GLIBC_", "NUMBER", "clock_settime", "GLIBC_", "NUMBER", "__explicit_bzero_chk", "GLIBC_", "NUMBER", "explicit_bzero", "GLIBC_", "NUMBER", "__fdelt_chk", "GLIBC_", "NUMBER", "getauxval", "GLIBC_", "NUMBER", "getrandom", "GLIBC_", "NUMBER", "__longjmp_chk", "GLIBC_", "NUMBER", "memcpy", "GLIBC_", "NUMBER", "memfd_create", "GLIBC_", "NUMBER", "mkstemps", "GLIBC_", "NUMBER", "__ppoll_chk", "GLIBC_", "NUMBER", "prlimit", "NUMBER", "GLIBC_", "NUMBER", "pthread_setname_np", "GLIBC_", "NUMBER", "secure_getenv", "GLIBC_", "NUMBER", "setns", "GLIBC_", "NUMBER", "I", "didn", "t", "look", "any", "further", "as", "of", "yet", "NUMBER", "However", "__fdelt_chk", "can", "be", "disposed", "of", "by", "way", "of", "undefining", "_FORTIFY_SOURCE", "and", "then", "defining", "it", "as", "zero", "U_FORTIFY_SOURCE", "D_FORTIFY_SOURCE", "NUMBER", "NUMBER", "provide", "you", "_build_", "whatever", "component", "requires", "it", "it", "s", "likely", "that", "the", "other", "_chk", "function", "will", "be", "gone", "as", "well", "NUMBER", "clock_", "function", "could", "be", "linked", "from", "librt", "instead", "NUMBER", "memcpy", "GLIBC_", "NUMBER", "can", "be", "easily", "diverted", "to", "point", "to", "the", "older", "_saner_", "version", "of", "memcpy", "see", "this", "ticket", "LINK", "_bug", "NUMBER", "cgi", "id", "NUMBER", "for", "an", "in", "depth", "discussion", "in", "particular", "comment", "NUMBER", "LINK", "_bug", "NUMBER", "cgi", "id", "NUMBER", "c", "NUMBER", "NUMBER", "Anyway", "that", "s", "quite", "a", "few", "function", "to", "take", "care", "of", "NUMBER", "But", "it", "only", "has", "to", "be", "do", "once", "per", "update", "to", "a", "new", "build", "system", "NUMBER", "Attached", "file", "elf", "file", "NUMBER", "txt", "LINK", "file", "NUMBER", "txt", "elf", "names", "NUMBER", "txt", "LINK", "names", "NUMBER", "txt", "recent", "syms", "NUMBER", "txt", "LINK", "syms", "NUMBER", "txt", "I", "ll", "see", "if", "I", "can", "reproduce", "the", "AppImage", "build", "locally", "and", "thus", "send", "a", "PR", "or", "so", "NUMBER", "Have", "you", "made", "any", "progress", "Have", "you", "made", "any", "progress", "scorpius", "Nope", "didn", "t", "look", "into", "this", "any", "further", "NUMBER", "The", "easiest", "way", "moving", "forward", "would", "likely", "be", "to", "include", "the", "more", "recent", "GLIBC", "in", "the", "AppImage", "NUMBER", "I", "can", "t", "see", "how", "that", "would", "be", "more", "problematic", "license", "wise", "than", "the", "aggregate", "of", "what", "s", "already", "in", "there", "NUMBER", "The", "only", "reason", "why", "that", "could", "fail", "on", "older", "systems", "would", "be", "system", "calls", "be", "use", "which", "be", "not", "available", "on", "older", "systems", "NUMBER", "But", "that", "s", "highly", "unlikely", "to", "happen", "as", "most", "of", "those", "have", "very", "very", "special", "use", "cases", "and", "wouldn", "t", "apply", "to", "something", "like", "r", "NUMBER", "and", "Cutter", "with", "Python", "and", "what", "not", "NUMBER", "I", "be", "actually", "looking", "at", "techniques", "like", "the", "ones", "describe", "right", "now", "to", "find", "if", "there", "s", "a", "way", "to", "recommend", "a", "least", "intrusive", "way", "NUMBER", "So", "perhaps", "as", "a", "byproduct", "I", "may", "come", "up", "with", "something", "for", "here", "NUMBER", "But", "I", "wouldn", "t", "hold", "my", "breath", "NUMBER", "It", "s", "not", "one", "of", "my", "top", "priorities", "at", "the", "moment", "NUMBER", "I", "m", "also", "currently", "having", "this", "problem", "on", "NUMBER", "NUMBER", "amd", "NUMBER", "NUMBER", "SMP", "Debian", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "x", "NUMBER", "_", "NUMBER", "GNU", "Linux", "NUMBER", "Does", "anyone", "know", "a", "work", "around", "to", "get", "this", "work", "I", "tried", "to", "ld", "preload", "the", "libraries", "but", "that", "only", "solves", "one", "of", "the", "error", "NUMBER", "I", "can", "preload", "radare", "NUMBER", "libr", "util", "libr_util", "NUMBER", "so", "and", "it", "seems", "to", "link", "fine", "NUMBER", "I", "think", "btw", "the", "stub", "be", "what", "causes", "the", "problem", "not", "so", "much", "the", "contents", "NUMBER", "I", "still", "know", "too", "little", "about", "AppImage", "to", "help", "out", "but", "if", "the", "stub", "could", "be", "replaced", "with", "one", "that", "statically", "links", "musl", "libc", "for", "example", "this", "would", "definitely", "resolve", "the", "issue", "NUMBER", "Environment", "information", "Operating", "System", "MacOS", "Mojave", "NUMBER", "Cutter", "version", "Cutter", "NUMBER", "Codename", "Trojan", "Dragon", "File", "format", "ELF", "NUMBER", "Describe", "the", "bug", "Launch", "cutter", "and", "open", "the", "attached", "so", "file", "and", "cutter", "will", "hang", "there", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Launch", "cutter", "NUMBER", "Select", "the", "attached", "so", "file", "with", "default", "option", "NUMBER", "Let", "cutter", "analyze", "the", "file", "Expected", "behavior", "Cutter", "will", "cost", "less", "one", "minute", "to", "complete", "the", "anaylsis", "NUMBER", "Screenshots", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "af", "NUMBER", "ca", "NUMBER", "d", "NUMBER", "ef", "NUMBER", "e", "NUMBER", "NUMBER", "da", "NUMBER", "NUMBER", "f", "NUMBER", "ee", "NUMBER", "c", "NUMBER", "png", "libcrackme", "NUMBER", "so", "NUMBER", "zip", "LINK", "If", "it", "s", "stuck", "on", "analysis", "it", "s", "more", "likely", "a", "bug", "from", "r", "NUMBER", "Investigation", "be", "needed", "NUMBER", "Profiler", "says", "that", "r", "NUMBER", "spends", "too", "much", "cpu", "time", "on", "this", "LINK", "L", "NUMBER", "Huh", "I", "test", "it", "with", "a", "game", "installer", "namely", "Valorant", "of", "NUMBER", "MB", "x", "and", "I", "was", "wondering", "why", "it", "took", "time", "Tested", "on", "windows", "NUMBER", "Cutter", "v", "NUMBER", "x", "NUMBER", "Windows", "Actually", "that", "hang", "was", "fix", "a", "long", "time", "ago", "so", "the", "issue", "can", "be", "close", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "cutter", "has", "a", "static", "place", "for", "plugins", "from", "comment", "i", "read", "in", "NUMBER", "other", "issue", "so", "i", "think", "it", "should", "have", "something", "like", "a", "plugin", "store", "in", "the", "future", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "It", "should", "be", "like", "a", "GUI", "manager", "for", "r", "NUMBER", "pm", "NUMBER", "The", "interface", "has", "to", "easy", "to", "use", "easy", "to", "install", "plugins", "show", "full", "information", "about", "plugin", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "A", "list", "of", "install", "plugins", "and", "uninstalled", "plugins", "be", "okay", "but", "we", "should", "have", "something", "modern", "NUMBER", "Additional", "context", "TAG", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Layout", "upgrade", "from", "older", "version", "be", "somewhat", "problematic", "due", "to", "Qt", "returning", "black", "box", "binary", "blob", "NUMBER", "If", "someone", "has", "opened", "an", "older", "Cutter", "version", "and", "be", "now", "open", "the", "latest", "Cutter", "to", "see", "if", "it", "get", "any", "better", "it", "likely", "to", "result", "in", "broken", "layout", "which", "be", "bad", "user", "experience", "NUMBER", "It", "would", "be", "good", "to", "identify", "when", "this", "happens", "and", "at", "least", "reset", "the", "layout", "NUMBER", "Loosing", "layout", "be", "bad", "but", "loosing", "layout", "get", "broken", "UI", "be", "worse", "NUMBER", "I", "have", "test", "the", "procedure", "bellow", "with", "NUMBER", "and", "NUMBER", "and", "it", "works", "NUMBER", "There", "be", "no", "need", "to", "do", "anything", "crazy", "to", "break", "the", "layout", "NUMBER", "Overall", "strategy", "Identify", "older", "version", "whose", "setting", "file", "results", "in", "broken", "UI", "when", "open", "latest", "cutter", "NUMBER", "It", "be", "possible", "to", "download", "compiled", "binaries", "from", "github", "release", "section", "for", "all", "the", "version", "back", "to", "NUMBER", "Analyze", "the", "change", "that", "be", "cause", "problem", "and", "how", "Qt", "reacts", "to", "them", "Create", "a", "code", "that", "detects", "problemtic", "settings", "and", "fix", "or", "resets", "the", "layout", "Test", "that", "upgrade", "from", "any", "all", "the", "version", "between", "NUMBER", "and", "NUMBER", "result", "in", "non", "broken", "UI", "In", "ideal", "case", "analysis", "of", "problematic", "version", "will", "result", "in", "knowledge", "of", "what", "not", "to", "do", "to", "prevent", "further", "breaking", "change", "and", "a", "generic", "mechanism", "for", "detecting", "when", "the", "bad", "change", "happened", "NUMBER", "Testing", "an", "upgrade", "from", "older", "version", "Delete", "settings", "file", "on", "Linux", "it", "be", "located", "in", "NUMBER", "config", "RadareOrg", "Cutter", "NUMBER", "ini", "Open", "a", "basic", "executable", "in", "an", "older", "version", "of", "Cutter", "extend", "test", "open", "all", "the", "widgets", "and", "place", "them", "reasonably", "Close", "Cutter", "Open", "a", "binary", "in", "latest", "Cutter", "Observe", "if", "layout", "contains", "any", "badly", "placed", "dock", "Potential", "indicators", "for", "incompatible", "layout", "Settings", "file", "version", "its", "safe", "to", "reset", "the", "layout", "if", "the", "version", "be", "really", "old", "and", "it", "be", "guaranteed", "to", "result", "in", "broken", "layout", "Current", "settings", "contain", "two", "field", "docks", "and", "state", "NUMBER", "Assuming", "both", "of", "them", "use", "the", "same", "or", "similar", "names", "any", "widget", "that", "be", "not", "present", "in", "the", "old", "list", "will", "cause", "a", "problem", "NUMBER", "If", "it", "s", "only", "one", "or", "two", "differences", "maybe", "its", "possible", "to", "recreate", "only", "those", "widgets", "NUMBER", "In", "my", "opinion", "upgrade", "should", "do", "something", "else", "than", "reset", "layouts", "NUMBER", "Let", "say", "that", "i", "be", "having", "my", "custom", "layouts", "and", "i", "don", "t", "want", "to", "change", "it", "because", "it", "spent", "NUMBER", "hour", "to", "make", "it", "reset", "layouts", "makes", "me", "crazy", "NUMBER", "I", "be", "packaging", "cutter", "and", "it", "will", "be", "upgrade", "via", "apt", "so", "reset", "layouts", "multiple", "times", "will", "be", "bad", "for", "users", "NUMBER", "P", "s", "i", "think", "this", "issue", "happens", "from", "NUMBER", "version", "when", "overview", "widget", "was", "add", "NUMBER", "dmknght", "No", "one", "be", "suggesting", "to", "completely", "reset", "layout", "for", "active", "users", "with", "each", "minor", "version", "upgrade", "NUMBER", "Avoiding", "false", "positives", "not", "breaking", "setup", "for", "active", "users", "was", "first", "thing", "considered", "NUMBER", "Reset", "be", "more", "of", "worst", "case", "fallback", "action", "for", "really", "old", "version", "that", "can", "t", "be", "reasonably", "upgrade", "due", "to", "lack", "of", "information", "or", "completely", "different", "set", "of", "widgets", "that", "don", "t", "exist", "anymore", "NUMBER", "What", "be", "the", "expected", "location", "of", "the", "seek", "for", "a", "selection", "should", "it", "be", "the", "end", "position", "of", "the", "selection", "or", "the", "start", "anchor", "If", "the", "seek", "should", "always", "be", "at", "the", "anchor", "of", "a", "selection", "then", "would", "it", "be", "sufficient", "to", "only", "seek", "when", "the", "anchor", "start", "of", "the", "selection", "has", "change", "rather", "than", "detecting", "mouse", "release", "event", "If", "it", "can", "be", "selected", "it", "should", "be", "copyable", "even", "when", "read", "only", "NUMBER", "ITAYC", "NUMBER", "HEN", "then", "don", "t", "use", "custom", "menu", "just", "add", "your", "actions", "to", "the", "widget", "s", "actions", "list", "The", "best", "approach", "would", "be", "to", "add", "an", "option", "in", "the", "right", "click", "contextual", "menu", "to", "Copy", "Address", "Copy", "text", "This", "way", "you", "be", "still", "open", "to", "add", "further", "options", "in", "the", "future", "NUMBER", "Thanks", "NUMBER", "Environment", "information", "Operating", "System", "Ubuntu", "NUMBER", "LTS", "Cutter", "version", "NUMBER", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "AppImage", "File", "format", "ELF", "R", "NUMBER", "version", "radare", "NUMBER", "NUMBER", "NUMBER", "linux", "x", "NUMBER", "NUMBER", "git", "NUMBER", "Describe", "the", "bug", "Unable", "to", "view", "decompiled", "code", "in", "cutter", "when", "r", "NUMBER", "ghidra", "be", "also", "install", "via", "r", "NUMBER", "pm", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Install", "r", "NUMBER", "ghidra", "dec", "via", "r", "NUMBER", "pm", "i", "r", "NUMBER", "ghidra", "dec", "NUMBER", "Open", "a", "binary", "in", "Cutter", "NUMBER", "Cutter", "v", "NUMBER", "x", "NUMBER", "Linux", "NUMBER", "AppImage", "in", "the", "terminal", "NUMBER", "Seek", "to", "a", "function", "NUMBER", "Open", "the", "decompiler", "widget", "NUMBER", "Select", "Ghidra", "as", "the", "decompiler", "NUMBER", "Observe", "the", "following", "error", "in", "the", "widget", "Failed", "to", "parse", "JSON", "from", "r", "NUMBER", "ghidra", "NUMBER", "Observe", "in", "the", "terminal", "the", "following", "error", "Cannot", "find", "x", "format", "NUMBER", "Ghidra", "Decompiler", "Error", "No", "print", "languages", "registered", "Expected", "behavior", "To", "be", "able", "to", "see", "Ghidra", "decompiled", "code", "in", "the", "decompiler", "widget", "while", "having", "r", "NUMBER", "ghidra", "dec", "install", "via", "r", "NUMBER", "pm", "NUMBER", "Additional", "context", "I", "m", "currently", "work", "around", "this", "by", "simply", "renaming", "the", "core_ghidra", "NUMBER", "so", "plugin", "in", "home", "TAG", "NUMBER", "local", "share", "radare", "NUMBER", "plugins", "when", "use", "cutter", "NUMBER", "It", "s", "ok", "here", "this", "be", "about", "plugin", "loading", "confirmed", "on", "Parrot", "OS", "with", "default", "build", "NUMBER", "Hi", "everyone", "NUMBER", "I", "ve", "packaged", "cutter", "for", "Parrot", "OS", "pull", "git", "version", "NUMBER", "Sep", "NUMBER", "I", "be", "seeing", "no", "Cannot", "find", "x", "format", "NUMBER", "Ghidra", "Decompiler", "Error", "No", "print", "languages", "registered", "in", "terminal", "NUMBER", "However", "r", "NUMBER", "ghidra", "still", "doesn", "t", "load", "NUMBER", "I", "copied", "ghidra", "stuff", "from", "NUMBER", "local", "share", "radare", "NUMBER", "plugins", "to", "home", "dmknght", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "but", "it", "doesn", "t", "work", "NUMBER", "The", "installer", "build", "with", "the", "rules", "from", "Debian", "it", "was", "made", "for", "old", "version", "dh", "buildsystem", "cmake", "sourcedirectory", "src", "override_dh_auto_configure", "dh_auto_configure", "DCUTTER_ENABLE_QTWEBENGINE", "NUMBER", "Do", "I", "need", "to", "enable", "ghidra", "by", "add", "flags", "in", "the", "build", "commands", "I", "saw", "change", "in", "commit", "but", "i", "be", "not", "sure", "about", "this", "NUMBER", "I", "think", "dmknght", "issue", "be", "handle", "in", "that", "issue", "LINK", "I", "copied", "ghidra", "stuff", "from", "NUMBER", "local", "share", "radare", "NUMBER", "plugins", "to", "home", "dmknght", "NUMBER", "local", "share", "RadareOrg", "Cutter", "plugins", "but", "it", "doesn", "t", "work", "NUMBER", "I", "did", "it", "wrong", "because", "i", "didn", "t", "understand", "cutter", "part", "of", "r", "NUMBER", "ghidra", "dec", "so", "it", "can", "be", "ignored", "NUMBER", "I", "thought", "my", "flags", "was", "wrong", "in", "build", "command", "NUMBER", "For", "the", "current", "topic", "there", "be", "NUMBER", "parts", "Cannot", "find", "x", "format", "Last", "time", "i", "compile", "cutter", "and", "r", "NUMBER", "ghidra", "dec", "it", "was", "fix", "NUMBER", "It", "be", "still", "happening", "in", "AppImage", "file", "so", "I", "think", "maybe", "you", "guy", "want", "to", "create", "a", "small", "patch", "NUMBER", "to", "make", "an", "AppImage", "file", "with", "no", "error", "NUMBER", "Install", "r", "NUMBER", "ghidra", "dec", "use", "r", "NUMBER", "pm", "won", "t", "install", "cutter", "plugin", "NUMBER", "Not", "sure", "if", "this", "be", "relate", "but", "I", "can", "t", "use", "either", "r", "NUMBER", "retdec", "or", "r", "NUMBER", "ghidra", "NUMBER", "I", "didn", "t", "install", "the", "plugins", "via", "r", "NUMBER", "pm", "though", "and", "instead", "compiled", "from", "source", "NUMBER", "I", "get", "Failed", "to", "parse", "JSON", "from", "r", "NUMBER", "ghidra", "r", "NUMBER", "retdec", "I", "also", "install", "cutter", "from", "source", "with", "the", "bundled", "r", "NUMBER", "submodule", "Cutter", "Info", "Version", "NUMBER", "Using", "r", "NUMBER", "NUMBER", "Based", "on", "Qt", "NUMBER", "GCC", "NUMBER", "NUMBER", "bit", "Optional", "Features", "Python", "ON", "Python", "Bindings", "ON", "Version", "Info", "NUMBER", "r", "NUMBER", "NUMBER", "r_anal", "NUMBER", "r_lib", "NUMBER", "r_egg", "NUMBER", "r_asm", "NUMBER", "r_bin", "NUMBER", "r_cons", "NUMBER", "r_flag", "NUMBER", "r_core", "NUMBER", "r_crypto", "NUMBER", "r_bp", "NUMBER", "r_debug", "NUMBER", "r_hash", "NUMBER", "r_fs", "NUMBER", "r_io", "NUMBER", "r_magic", "NUMBER", "r_parse", "NUMBER", "r_reg", "NUMBER", "r_sign", "NUMBER", "r_search", "NUMBER", "r_syscall", "NUMBER", "r_util", "I", "probably", "install", "it", "wrong", "but", "the", "shared", "objects", "be", "here", "usr", "local", "share", "RadareOrg", "Cutter", "plugins", "native", "ls", "total", "NUMBER", "K", "drwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "K", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "K", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "rw", "r", "r", "NUMBER", "root", "root", "NUMBER", "K", "Apr", "NUMBER", "NUMBER", "NUMBER", "libr", "NUMBER", "ghidra_cutter", "NUMBER", "so", "rw", "r", "r", "NUMBER", "root", "root", "NUMBER", "K", "Apr", "NUMBER", "NUMBER", "NUMBER", "libr", "NUMBER", "retdec_cutter", "NUMBER", "so", "usr", "local", "share", "radare", "NUMBER", "plugins", "ls", "total", "NUMBER", "NUMBER", "M", "drwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "K", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "K", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "K", "Apr", "NUMBER", "NUMBER", "NUMBER", "r", "NUMBER", "ghidra_sleigh", "rw", "r", "r", "NUMBER", "root", "root", "NUMBER", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "core_ghidra", "NUMBER", "so", "rw", "r", "r", "NUMBER", "root", "root", "NUMBER", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "core_retdec", "NUMBER", "so", "ls", "usr", "local", "bin", "retdec", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "K", "Feb", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "archive", "decompiler", "NUMBER", "py", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "ar", "extractor", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "bin", "NUMBER", "llvmir", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "bin", "NUMBER", "pat", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "K", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "config", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "K", "Feb", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "config", "NUMBER", "py", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "K", "Feb", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "decompiler", "NUMBER", "py", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "fileinfo", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "K", "Feb", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "fileinfo", "NUMBER", "py", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "getsig", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "K", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "idr", "NUMBER", "pat", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "llvmir", "NUMBER", "hll", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "macho", "extractor", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "pat", "NUMBER", "yara", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "K", "Feb", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "signature", "from", "library", "creator", "NUMBER", "py", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "stacofin", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "M", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "unpacker", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "NUMBER", "K", "Feb", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "unpacker", "NUMBER", "py", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "K", "Feb", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "utils", "NUMBER", "py", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "K", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "bin", "retdec", "yarac", "Not", "sure", "if", "relevant", "but", "I", "also", "compiled", "QT", "and", "PySide", "from", "source", "NUMBER", "This", "PR", "aims", "at", "fix", "LINK", "Currently", "the", "way", "asm", "NUMBER", "ucase", "works", "be", "that", "it", "will", "set", "everything", "uppercase", "including", "stack", "variable", "names", "NUMBER", "I", "be", "not", "sure", "that", "this", "PR", "be", "the", "proper", "way", "of", "fix", "it", "but", "it", "works", "NUMBER", "R", "NUMBER", "be", "smarter", "about", "what", "it", "change", "to", "uppercase", "would", "be", "a", "nicer", "fix", "NUMBER", "It", "shouldn", "t", "touch", "identifiers", "NUMBER", "Imagine", "a", "situation", "where", "names", "differ", "only", "in", "letter", "capitalization", "NUMBER", "I", "would", "feel", "less", "uncomfortable", "with", "this", "as", "temporary", "workaround", "if", "it", "was", "do", "only", "when", "asm", "NUMBER", "ucase", "be", "enable", "NUMBER", "It", "seems", "the", "behavior", "of", "radare", "NUMBER", "be", "not", "consistent", "for", "everything", "NUMBER", "I", "will", "investigate", "and", "fix", "radare", "NUMBER", "instead", "NUMBER", "Closed", "in", "favor", "of", "LINK", "Doesn", "t", "this", "prevent", "the", "dialog", "from", "always", "be", "on", "top", "of", "the", "MainWindow", "and", "make", "it", "un", "focusable", "which", "would", "be", "desired", "probably", "Wouldn", "t", "it", "be", "more", "correct", "to", "set", "the", "main", "window", "as", "parent", "for", "modal", "dialog", "I", "guess", "some", "of", "the", "current", "weirdness", "comes", "from", "setting", "a", "context", "menu", "which", "close", "as", "parent", "for", "modal", "dialog", "NUMBER", "At", "least", "for", "me", "it", "fix", "the", "centering", "problem", "and", "even", "enable", "track", "NUMBER", "Yes", "this", "sounds", "much", "better", "Yes", "NUMBER", "It", "s", "mainWindow", "in", "the", "DisassemblyContextMenu", "class", "I", "think", "NUMBER", "Properly", "fix", "NUMBER", "will", "probably", "fix", "this", "as", "well", "NUMBER", "I", "wonder", "if", "it", "s", "due", "to", "actions", "be", "incorrectly", "defined", "or", "the", "QT", "show", "shortcut", "change", "NUMBER", "They", "recently", "decided", "partially", "revert", "that", "change", "NUMBER", "Environment", "information", "Operating", "System", "ArchLinux", "Cutter", "version", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "e", "NUMBER", "File", "format", "Describe", "the", "bug", "Some", "of", "the", "actions", "in", "disassembly", "context", "menu", "be", "hidden", "when", "not", "applicable", "NUMBER", "This", "be", "do", "by", "performing", "the", "check", "in", "aboutToShowSlot", "NUMBER", "Action", "stays", "hidden", "the", "next", "time", "context", "menu", "be", "opened", "NUMBER", "Hiding", "action", "also", "disables", "it", "make", "it", "impossible", "to", "call", "it", "use", "shortcut", "NUMBER", "This", "means", "that", "after", "right", "clicking", "on", "a", "place", "where", "action", "isn", "t", "applicable", "shortcut", "gets", "disabled", "even", "after", "change", "offset", "to", "position", "where", "action", "be", "applicable", "NUMBER", "To", "Reproduce", "In", "disassembly", "widget", "Right", "click", "on", "function", "header", "observe", "that", "menu", "contains", "Rename", "funciton", "fcn", "NUMBER", "x", "NUMBER", "N", "action", "Press", "N", "and", "observe", "that", "shortcut", "works", "Right", "click", "second", "instruction", "in", "function", "observe", "that", "Rename", "function", "action", "be", "hidden", "Left", "click", "on", "function", "header", "Try", "pressing", "N", "shortcut", "for", "renaming", "function", "and", "observe", "that", "it", "doesn", "t", "work", "anymore", "Expected", "behavior", "In", "the", "last", "step", "of", "instructions", "above", "N", "shortcut", "works", "NUMBER", "Rename", "function", "be", "just", "an", "exmaple", "there", "might", "be", "other", "actions", "in", "disassembly", "context", "menu", "affected", "by", "the", "same", "problem", "NUMBER", "Possible", "solutions", "A", "Update", "action", "status", "in", "setOffset", "function", "NUMBER", "Downside", "that", "it", "causes", "a", "bunch", "of", "unnecessary", "r", "NUMBER", "queries", "while", "navigating", "disassembly", "widget", "NUMBER", "Probably", "not", "a", "problem", "at", "least", "for", "small", "binaries", "NUMBER", "B", "keep", "conditional", "hiding", "in", "aboutToShowSlot", "in", "setOffset", "or", "reenable", "the", "actions", "in", "the", "action", "callback", "check", "if", "it", "be", "applicable", "Solution", "b", "be", "slightly", "more", "efficient", "but", "complicated", "NUMBER", "Step", "NUMBER", "and", "sometimes", "NUMBER", "be", "already", "implement", "so", "it", "might", "not", "be", "so", "Additional", "context", "This", "problem", "applies", "only", "to", "actions", "that", "get", "conditionally", "hidden", "and", "have", "keyboard", "shortcut", "NUMBER", "TAG", "karliss", "ITAYC", "NUMBER", "HEN", "can", "you", "please", "explain", "solution", "B", "a", "little", "bit", "I", "tried", "to", "solve", "this", "use", "solution", "A", "and", "it", "works", "but", "I", "be", "not", "sure", "what", "be", "solution", "B", "suppose", "to", "mean", "NUMBER", "NUMBER", "_", "NUMBER", "Set", "offset", "can", "be", "call", "quite", "often", "as", "you", "navigate", "in", "disassembly", "widget", "by", "holding", "a", "keybord", "key", "or", "quickly", "scrolling", "NUMBER", "Fully", "update", "the", "context", "menu", "each", "time", "solution", "A", "would", "be", "waste", "of", "resource", "and", "make", "the", "interface", "less", "smooth", "NUMBER", "Instead", "the", "context", "menu", "could", "be", "update", "only", "when", "it", "s", "opened", "current", "approach", "but", "it", "has", "problem", "of", "leaving", "the", "actions", "disabled", "and", "thus", "keyboard", "shortcuts", "not", "work", "NUMBER", "Solution", "b", "would", "look", "something", "like", "this", "this", "part", "should", "be", "mostly", "there", "already", "step", "NUMBER", "function", "beforeMenuOpened", "if", "action_applicable_at_current_offset", "action", "disable", "else", "action", "enable", "this", "part", "be", "miss", "step", "NUMBER", "function", "menu_closed", "or", "setOffset", "action", "enable", "keep", "actions", "enable", "so", "that", "shortcuts", "work", "function", "action_callback", "if", "action_applicable_at_current_offset", "this", "part", "might", "be", "for", "some", "of", "the", "actions", "probably", "not", "all", "NUMBER", "step", "NUMBER", "return", "do", "the", "thing", "this", "part", "should", "be", "there", "If", "that", "isn", "t", "clear", "enough", "ask", "a", "more", "specific", "question", "NUMBER", "I", "did", "something", "like", "this", "in", "step", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "eec", "NUMBER", "ea", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "af", "NUMBER", "badf", "NUMBER", "png", "and", "it", "works", "NUMBER", "not", "sure", "about", "what", "you", "meant", "in", "step", "NUMBER", "be", "you", "talking", "about", "something", "similar", "to", "canCopy", "LINK", "L", "NUMBER", "nk", "NUMBER", "The", "action", "should", "have", "the", "same", "check", "as", "what", "be", "use", "for", "hiding", "it", "from", "menu", "NUMBER", "TAG", "Detailed", "description", "Ensures", "that", "newly", "created", "hexdump", "widgets", "show", "current", "offset", "instead", "of", "NUMBER", "x", "NUMBER", "Test", "plan", "required", "Open", "disassembly", "widget", "at", "non", "zero", "offset", "Add", "new", "hexdump", "use", "Window", "Add", "Hexdump", "observe", "that", "newly", "created", "hexdump", "widget", "shows", "the", "same", "offset", "as", "disassembly", "widget", "before", "fix", "it", "showed", "NUMBER", "x", "NUMBER", "Closing", "issue", "TAG", "TAG", "Detailed", "description", "Before", "the", "change", "omnibar", "change", "the", "global", "seek", "NUMBER", "After", "the", "change", "omnibar", "change", "seek", "of", "last", "active", "memory", "widget", "regardless", "of", "it", "s", "synchronization", "state", "NUMBER", "Any", "change", "in", "global", "seek", "happen", "indirectly", "if", "performing", "seek", "in", "synchronized", "widget", "NUMBER", "Test", "plan", "required", "Open", "two", "synchronized", "memory", "widgets", "side", "by", "and", "perform", "seek", "in", "omnibar", "observe", "that", "both", "memory", "widgets", "change", "the", "position", "unsync", "one", "of", "the", "widgets", "click", "on", "the", "synchronized", "widget", "press", "g", "and", "seek", "somewhere", "observe", "that", "unsynchronized", "widget", "didn", "t", "change", "click", "on", "unsynchronized", "widget", "pres", "g", "and", "seek", "observe", "that", "only", "unsynchronized", "widget", "change", "put", "all", "memory", "widgets", "in", "one", "tab", "group", "switch", "to", "search", "widget", "perform", "seek", "and", "observe", "that", "a", "memory", "widget", "gets", "shown", "close", "recently", "viewed", "memory", "widgets", "seek", "and", "observe", "that", "one", "of", "remaining", "memory", "widgets", "get", "shown", "close", "all", "memory", "widgets", "perform", "seek", "and", "observe", "that", "a", "disassembly", "widget", "gets", "created", "poor", "placement", "of", "newly", "created", "memory", "widgets", "be", "a", "separate", "problem", "TAG", "TAG", "Closing", "issue", "TAG", "Hello", "I", "would", "like", "to", "pick", "up", "this", "issue", "if", "possible", "NUMBER", "Thanks", "NUMBER", "Hi", "as", "a", "part", "of", "this", "issue", "I", "have", "made", "some", "change", "LINK", "NUMBER", "to", "make", "it", "easier", "to", "develop", "use", "Docker", "NUMBER", "Shall", "I", "create", "a", "new", "issue", "for", "these", "change", "or", "just", "create", "a", "separate", "pull", "request", "Just", "create", "a", "separate", "pull", "request", "NUMBER", "I", "haven", "t", "really", "had", "much", "time", "to", "work", "on", "this", "after", "make", "the", "Docker", "change", "NUMBER", "Am", "I", "correct", "in", "thinking", "it", "be", "the", "CutterDockWidget", "LINK", "class", "where", "I", "should", "be", "catching", "the", "keyPress", "and", "mousePress", "events", "Am", "I", "correct", "in", "thinking", "it", "be", "the", "CutterDockWidget", "LINK", "class", "where", "I", "should", "be", "catching", "the", "keyPress", "and", "mousePress", "events", "For", "most", "of", "them", "probably", "yes", "NUMBER", "Reopening", "close", "tab", "would", "better", "be", "do", "at", "global", "level", "NUMBER", "Okay", "great", "NUMBER", "I", "was", "going", "to", "do", "the", "reopening", "close", "tabs", "one", "last", "as", "I", "wasn", "t", "sure", "how", "it", "should", "be", "do", "NUMBER", "I", "have", "update", "CutterDockWidget", "to", "catch", "the", "QKeyEvent", "on", "keyPress", "and", "keyRelease", "but", "in", "the", "respective", "methods", "event", "seems", "to", "be", "uninitialised", "see", "LINK", "diff", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "abR", "NUMBER", "R", "NUMBER", "After", "build", "Cutter", "whenever", "I", "press", "a", "key", "with", "the", "dock", "widget", "in", "focus", "and", "line", "NUMBER", "uncommented", "the", "program", "segfaults", "NUMBER", "I", "run", "the", "program", "with", "Valgrind", "and", "it", "state", "that", "event", "be", "uninitialised", "NUMBER", "Any", "thoughts", "Did", "you", "checked", "the", "callstack", "Qt", "shouldn", "t", "be", "doing", "that", "NUMBER", "Maybe", "one", "of", "CutterDockWidget", "subclasses", "be", "calling", "parent", "method", "with", "incorrect", "argument", "NUMBER", "Even", "if", "it", "didn", "t", "crash", "I", "don", "t", "think", "you", "should", "be", "handle", "keypress", "events", "in", "this", "situation", "manually", "but", "use", "QAction", "or", "QShortcut", "instead", "which", "already", "implement", "the", "logic", "for", "handle", "multikey", "shortcuts", "NUMBER", "Even", "more", "when", "possible", "you", "should", "use", "methods", "that", "accept", "StandardKey", "LINK", "NUMBER", "qkeysequence", "NUMBER", "html", "StandardKey", "enum", "like", "void", "QAction", "setShortcuts", "QKeySequence", "StandardKey", "key", "LINK", "NUMBER", "qaction", "NUMBER", "html", "setShortcuts", "NUMBER", "instead", "of", "specify", "keys", "explicitly", "NUMBER", "Hi", "Apologies", "that", "this", "has", "taken", "as", "long", "as", "it", "has", "do", "NUMBER", "I", "have", "just", "finished", "implement", "the", "first", "three", "keyboard", "shortcuts", "and", "would", "like", "some", "feedback", "on", "what", "I", "have", "do", "what", "could", "be", "improved", "etc", "NUMBER", "Please", "find", "my", "change", "here", "LINK", "NUMBER", "tab", "management", "NUMBER", "Some", "of", "the", "change", "be", "due", "to", "run", "AStyle", "NUMBER", "I", "have", "currently", "get", "an", "issue", "with", "the", "jump", "to", "previous", "tab", "shortcut", "as", "the", "QAction", "shortcut", "be", "not", "be", "caught", "when", "pressed", "although", "the", "other", "two", "shortcuts", "be", "fine", "NUMBER", "HEy", "NUMBER", "x", "NUMBER", "d", "thanks", "for", "the", "follow", "up", "I", "appreciate", "it", "highly", "NUMBER", "Would", "you", "mind", "sending", "this", "as", "a", "work", "in", "progress", "PR", "Also", "it", "would", "be", "easier", "for", "us", "to", "reveiew", "before", "applying", "astyle", "Yes", "I", "can", "do", "NUMBER", "Do", "you", "want", "me", "to", "revert", "the", "AStyle", "commit", "first", "yeah", "please", "this", "should", "be", "the", "final", "commit", "I", "haven", "t", "test", "it", "yet", "but", "doesn", "t", "this", "require", "settings", "upgrade", "to", "prevent", "breaking", "layout", "due", "to", "name", "change", "Don", "t", "we", "have", "settings", "upgrade", "mechanism", "already", "implement", "You", "shouldnt", "need", "to", "do", "more", "than", "add", "a", "function", "performing", "x", "to", "NUMBER", "X", "NUMBER", "upgrade", "step", "and", "increase", "the", "version", "by", "one", "NUMBER", "Rest", "of", "work", "should", "be", "handle", "by", "exist", "code", "NUMBER", "See", "LINK", "L", "NUMBER", "There", "be", "probably", "a", "reference", "to", "dock", "names", "in", "binary", "window", "layout", "data", "which", "makes", "the", "upgrade", "step", "less", "useful", "than", "I", "thought", "sorry", "about", "that", "NUMBER", "There", "be", "nothing", "we", "can", "easily", "and", "cleanly", "do", "about", "it", "NUMBER", "There", "be", "probably", "a", "reference", "to", "dock", "names", "in", "binary", "window", "layout", "data", "which", "makes", "the", "upgrade", "step", "less", "useful", "than", "I", "thought", "sorry", "about", "that", "NUMBER", "There", "be", "nothing", "we", "can", "easily", "and", "cleanly", "do", "about", "it", "NUMBER", "Yes", "exactly", "and", "this", "will", "not", "be", "possible", "to", "be", "resolve", "until", "implement", "the", "json", "format", "propose", "by", "you", "so", "lgtm", "for", "now", "NUMBER", "I", "wasn", "t", "planning", "to", "change", "the", "way", "dock", "layout", "gets", "serialized", "NUMBER", "That", "s", "a", "fairly", "complex", "code", "and", "it", "would", "be", "good", "to", "reuse", "functionality", "provide", "by", "dock", "and", "window", "management", "library", "NUMBER", "It", "s", "something", "to", "pay", "attention", "when", "evaluating", "alternatives", "for", "qt", "docking", "widgets", "NUMBER", "TAG", "Detailed", "description", "See", "NUMBER", "for", "description", "NUMBER", "Test", "plan", "required", "rename", "stack", "variable", "in", "function", "with", "multiple", "of", "them", "after", "clicking", "on", "it", "s", "name", "in", "mov", "instruction", "rename", "variable", "after", "clicking", "in", "the", "block", "at", "top", "of", "function", "rename", "register", "argument", "in", "the", "block", "at", "top", "of", "function", "rename", "register", "argument", "after", "clicking", "the", "name", "in", "function", "signature", "open", "EditVariablesDialog", "with", "no", "variable", "selected", "rename", "after", "selecting", "variable", "from", "combobox", "open", "EditVariableDialog", "in", "a", "function", "without", "any", "stack", "variables", "and", "argument", "TAG", "Closing", "issue", "Closes", "NUMBER", "ITAYC", "NUMBER", "HEN", "N", "currently", "doesn", "t", "work", "due", "to", "NUMBER", "NUMBER", "As", "for", "quickly", "renaming", "variable", "y", "almost", "works", "like", "that", "NUMBER", "After", "open", "the", "dialog", "it", "focuses", "on", "name", "field", "and", "pressing", "enter", "after", "change", "it", "confirms", "and", "close", "the", "dialog", "NUMBER", "Only", "problem", "be", "with", "selecting", "the", "right", "token", "in", "disassembly", "there", "be", "currently", "no", "consistent", "way", "of", "doing", "that", "use", "only", "keyboard", "NUMBER", "As", "we", "add", "more", "selection", "based", "actions", "to", "disassembly", "widget", "the", "selection", "shortcuts", "should", "probably", "be", "improved", "NUMBER", "What", "do", "you", "think", "of", "not", "open", "the", "variable", "editing", "dialog", "if", "there", "be", "no", "variables", "unless", "we", "add", "a", "add", "new", "variable", "button", "there", "xarkes", "I", "assume", "you", "meant", "the", "type", "in", "list", "of", "variables", "at", "top", "of", "function", "NUMBER", "That", "would", "be", "better", "but", "I", "don", "t", "think", "it", "can", "be", "easily", "do", "NUMBER", "Having", "a", "more", "structured", "information", "about", "disassembly", "would", "be", "nice", "for", "various", "context", "sensitive", "actions", "NUMBER", "I", "really", "don", "t", "want", "to", "do", "dirty", "string", "matching", "hacks", "NUMBER", "The", "fact", "that", "whole", "function", "header", "block", "be", "single", "line", "doesn", "t", "help", "NUMBER", "Do", "we", "need", "a", "context", "menu", "entry", "for", "Ctrl", "F", "if", "the", "search", "bar", "at", "the", "bottom", "can", "t", "be", "close", "See", "your", "screenshot", "NUMBER", "It", "s", "in", "the", "string", "widget", "NUMBER", "See", "NUMBER", "Generic", "table", "command", "api", "LINK", "radare", "NUMBER", "issue", "by", "radare", "and", "deepakchethan", "Also", "relevant", "NUMBER", "Support", "Table", "API", "and", "scr", "NUMBER", "utf", "NUMBER", "true", "in", "p", "h", "command", "LINK", "NUMBER", "Generic", "tree", "command", "API", "LINK", "NUMBER", "Support", "CSV", "LINK", "NUMBER", "Structured", "Document", "Helpers", "LINK", "Yes", "for", "now", "no", "need", "to", "care", "about", "that", "unless", "you", "want", "provide", "suggestions", "for", "the", "implementation", "NUMBER", "It", "be", "work", "in", "progress", "feature", "in", "radare", "NUMBER", "I", "will", "ping", "once", "it", "be", "ready", "to", "use", "NUMBER", "Can", "you", "explain", "how", "Cutter", "would", "benefit", "from", "support", "ASCII", "table", "or", "this", "data", "structure", "Today", "we", "use", "JSON", "to", "parse", "data", "and", "put", "it", "in", "visual", "GUI", "table", "Yes", "for", "now", "no", "need", "to", "care", "about", "that", "I", "would", "rather", "not", "have", "an", "opened", "issue", "then", "NUMBER", "The", "idea", "be", "interesting", "but", "I", "think", "it", "s", "too", "soon", "to", "take", "care", "of", "it", "NUMBER", "We", "should", "reopen", "that", "issue", "once", "it", "be", "integrated", "into", "radare", "NUMBER", "Nice", "Works", "Closes", "NUMBER", "Opening", "a", "file", "from", "the", "NewFileDialog", "will", "remember", "its", "IO", "mode", "NUMBER", "Whenever", "a", "file", "be", "selected", "from", "the", "recent", "file", "list", "the", "IO", "mode", "will", "change", "to", "the", "one", "which", "was", "use", "to", "open", "the", "file", "earlier", "NUMBER", "How", "do", "it", "deal", "with", "recent", "item", "history", "for", "inputs", "that", "be", "not", "path", "to", "file", "karliss", "Can", "you", "please", "elaborate", "recent", "items", "which", "be", "not", "file", "Hey", "m", "NUMBER", "nk", "NUMBER", "ydluffy", "would", "you", "have", "some", "time", "to", "rebase", "your", "PR", "and", "address", "the", "above", "comments", "Thank", "you", "Hey", "xarkes", "Sorry", "for", "the", "long", "delay", "I", "will", "address", "the", "issue", "and", "rebase", "the", "PR", "NUMBER", "Will", "you", "have", "some", "time", "this", "weekend", "m", "NUMBER", "nk", "NUMBER", "ydluffy", "Were", "there", "any", "update", "on", "this", "one", "Nope", "if", "you", "want", "you", "can", "just", "rebase", "the", "PR", "and", "address", "the", "comments", "I", "tried", "the", "PR", "and", "I", "think", "the", "current", "implementation", "be", "not", "well", "integrated", "into", "the", "interface", "NUMBER", "As", "said", "by", "Karliss", "if", "one", "wants", "to", "change", "the", "IO", "mode", "for", "a", "file", "or", "just", "change", "the", "filename", "it", "will", "automatically", "update", "the", "IO", "mode", "so", "that", "s", "not", "really", "a", "good", "thing", "NUMBER", "Environment", "information", "Operating", "System", "arch", "Cutter", "version", "NUMBER", "r", "NUMBER", "version", "NUMBER", "File", "format", "elf", "NUMBER", "Arch", "x", "NUMBER", "Type", "EXEC", "Executable", "file", "Describe", "the", "bug", "A", "clear", "and", "concise", "description", "of", "what", "the", "bug", "be", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "Graph", "widget", "NUMBER", "RClick", "a", "function", "block", "NUMBER", "LClick", "on", "Edit", "function", "XYZ", "NUMBER", "Type", "address", "bigger", "then", "Start", "Address", "in", "End", "Address", "NUMBER", "LClick", "OK", "Expected", "behavior", "The", "Graph", "should", "change", "accordingly", "to", "the", "newly", "given", "End", "Address", "NUMBER", "Even", "after", "View", "Refresh", "Contents", "nothing", "happens", "NUMBER", "Screenshots", "first", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "fc", "NUMBER", "bd", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "png", "second", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "dd", "NUMBER", "NUMBER", "eb", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "png", "third", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "df", "NUMBER", "png", "Additional", "context", "Something", "wired", "happens", "sometimes", "when", "another", "fcn", "NUMBER", "ABC", "flag", "be", "in", "between", "NUMBER", "After", "change", "End", "Address", "and", "lclicking", "Ok", "there", "be", "two", "seperate", "function", "which", "can", "be", "viewed", "in", "graph", "view", "but", "have", "a", "size", "of", "approx", "NUMBER", "byte", "NUMBER", "The", "second", "behaviour", "was", "not", "reproduceable", "anymore", "NUMBER", "I", "do", "not", "even", "know", "how", "this", "be", "possible", "at", "r", "NUMBER", "commandline", "NUMBER", "I", "always", "use", "Visual", "mode", "key", "combination", "d", "e", "with", "current", "seeker", "point", "to", "the", "last", "instruction", "of", "the", "falsely", "analysed", "function", "cmd", "af", "func", "keycombo", "df", "NUMBER", "radare", "radare", "NUMBER", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Under", "X", "Refs", "widget", "DATA", "type", "reference", "be", "display", "in", "code", "preview", "It", "be", "usually", "meaningless", "to", "interpret", "data", "as", "code", "while", "it", "be", "better", "to", "show", "data", "as", "Hexdump", "TAG", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "af", "NUMBER", "f", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "adadc", "NUMBER", "png", "Describe", "the", "solution", "you", "d", "like", "NUMBER", "There", "should", "be", "an", "option", "to", "display", "in", "Hexdump", "preview", "NUMBER", "Cutter", "will", "show", "Hexdump", "preview", "for", "DATA", "reference", "by", "default", "TAG", "Describe", "alternatives", "you", "ve", "considered", "TAG", "Additional", "context", "TAG", "Good", "idea", "In", "these", "examples", "were", "you", "the", "one", "who", "marked", "these", "address", "as", "string", "qword", "etc", "Well", "in", "general", "I", "think", "that", "having", "a", "hexdump", "preview", "for", "DATA", "be", "something", "we", "can", "decide", "and", "do", "ourselves", "NUMBER", "With", "or", "without", "radare", "NUMBER", "since", "we", "have", "the", "knowledge", "that", "it", "be", "DATA", "ref", "NUMBER", "If", "I", "have", "an", "instruction", "like", "this", "lea", "ebx", "NUMBER", "xadd", "NUMBER", "e", "NUMBER", "I", "would", "be", "happy", "to", "look", "at", "x", "refs", "widget", "and", "see", "that", "in", "NUMBER", "xadd", "NUMBER", "e", "NUMBER", "there", "be", "actually", "a", "string", "that", "surrounded", "by", "more", "interesting", "strings", "Yes", "but", "r", "NUMBER", "be", "supposed", "to", "show", "that", "ITAYC", "NUMBER", "HEN", "see", "below", "screenshot", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "abdf", "NUMBER", "dfe", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "efd", "NUMBER", "png", "Environment", "information", "Operating", "System", "Any", "Cutter", "version", "latest", "master", "File", "format", "Any", "Describe", "the", "bug", "There", "be", "actually", "two", "relate", "bug", "NUMBER", "When", "change", "the", "graph", "layout", "to", "another", "layout", "and", "restarting", "Cutter", "NUMBER", "The", "graph", "layout", "be", "back", "to", "its", "default", "value", "NUMBER", "Cutter", "should", "preserve", "the", "user", "s", "preferences", "NUMBER", "NUMBER", "After", "change", "the", "graph", "layout", "and", "clicking", "Reset", "Settings", "the", "layout", "stays", "change", "until", "Cutter", "be", "re", "opened", "NUMBER", "I", "d", "expect", "the", "layout", "to", "be", "reset", "to", "its", "default", "layout", "when", "resetting", "settings", "and", "don", "t", "wait", "for", "the", "restart", "to", "take", "effect", "NUMBER", "To", "Reproduce", "Scenario", "NUMBER", "NUMBER", "Open", "a", "binary", "in", "Cutter", "NUMBER", "Open", "the", "Graph", "widget", "NUMBER", "Right", "click", "on", "the", "graph", "and", "select", "a", "layout", "from", "the", "Layout", "context", "item", "NUMBER", "e", "NUMBER", "g", "Graphviz", "polyline", "LR", "NUMBER", "Exit", "Cutter", "NUMBER", "Re", "open", "Cutter", "and", "go", "to", "the", "graph", "widget", "NUMBER", "See", "that", "the", "graph", "returned", "to", "its", "default", "layout", "Scenario", "NUMBER", "NUMBER", "Open", "a", "binary", "in", "Cutter", "NUMBER", "Open", "the", "Graph", "widget", "NUMBER", "Right", "click", "on", "the", "graph", "and", "select", "a", "layout", "from", "the", "Layout", "context", "item", "NUMBER", "e", "NUMBER", "g", "Graphviz", "polyline", "LR", "NUMBER", "See", "that", "the", "graph", "layout", "has", "change", "NUMBER", "Now", "select", "View", "Reset", "Settings", "from", "the", "main", "toolbar", "NUMBER", "Inspect", "that", "the", "graph", "did", "not", "change", "to", "its", "default", "layout", "NUMBER", "Restart", "Cutter", "and", "open", "a", "binary", "NUMBER", "See", "that", "the", "layout", "returned", "to", "default", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "NUMBER", "NUMBER", "Click", "on", "NUMBER", "NUMBER", "Scroll", "down", "to", "NUMBER", "NUMBER", "See", "error", "Expected", "behavior", "The", "chosen", "layout", "should", "be", "saved", "in", "Settings", "preserved", "in", "each", "execute", "of", "Cutter", "and", "return", "to", "its", "Default", "layout", "when", "the", "settings", "be", "reset", "NUMBER", "So", "maybe", "rather", "than", "add", "a", "hack", "it", "s", "better", "to", "close", "this", "issue", "and", "take", "care", "of", "NUMBER", "Not", "sure", "it", "should", "be", "close", "NUMBER", "But", "indeed", "should", "be", "handle", "with", "NUMBER", "Sweet", "I", "test", "the", "PR", "and", "it", "looks", "very", "good", "much", "better", "than", "before", "and", "finally", "a", "unified", "solution", "NUMBER", "I", "notice", "just", "a", "few", "issue", "some", "be", "probably", "not", "relate", "to", "your", "PR", "but", "I", "find", "it", "worth", "mentioning", "here", "NUMBER", "Also", "I", "d", "love", "to", "see", "it", "documented", "in", "a", "friendly", "way", "in", "our", "documentation", "and", "on", "API", "level", "NUMBER", "Basically", "these", "additions", "would", "be", "use", "by", "almost", "any", "plugin", "developer", "of", "Cutter", "that", "would", "probably", "want", "to", "introduce", "widgets", "based", "on", "these", "NUMBER", "You", "already", "have", "a", "nice", "explanation", "at", "the", "top", "of", "this", "page", "so", "it", "would", "be", "mostly", "copying", "and", "pasting", "I", "guess", "NUMBER", "I", "notice", "that", "copying", "a", "cell", "with", "numbers", "in", "its", "value", "and", "not", "a", "string", "or", "hex", "doesn", "t", "work", "NUMBER", "Strings", "widget", "have", "a", "Filter", "ctrl", "f", "context", "menu", "item", "and", "other", "doesn", "t", "do", "we", "want", "all", "the", "list", "widgets", "to", "have", "it", "anyway", "clicking", "on", "this", "Filter", "in", "Strings", "context", "menu", "do", "not", "put", "the", "focus", "to", "the", "Filter", "widget", "NUMBER", "Seems", "like", "the", "widgets", "have", "the", "KeyboardSearch", "LINK", "NUMBER", "qabstractitemview", "NUMBER", "html", "keyboardSearch", "option", "enable", "by", "default", "NUMBER", "This", "has", "a", "collision", "with", "one", "letter", "shortcuts", "such", "as", "TAG", "s", "TAG", "for", "seeking", "or", "TAG", "x", "TAG", "for", "showing", "x", "refs", "Before", "merge", "what", "do", "you", "think", "should", "be", "do", "with", "point", "NUMBER", "Should", "we", "disable", "KeyboardSearch", "Environment", "information", "Operating", "System", "Parrot", "NUMBER", "Cutter", "version", "NUMBER", "git", "version", "NUMBER", "Aug", "NUMBER", "File", "format", "ELF", "Describe", "the", "bug", "When", "I", "use", "right", "click", "on", "variable", "name", "to", "change", "name", "of", "variable", "there", "be", "Add", "flag", "menu", "only", "NUMBER", "If", "I", "use", "add", "flag", "menu", "and", "change", "value", "in", "it", "the", "menu", "Rename", "variable", "will", "show", "up", "but", "it", "doesn", "t", "rename", "my", "variable", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "Graph", "widget", "NUMBER", "Right", "click", "on", "a", "variable", "NUMBER", "No", "Edit", "variable", "name", "here", "it", "was", "there", "before", "NUMBER", "Select", "Add", "flag", "set", "value", "in", "this", "windows", "and", "select", "Ok", "NUMBER", "Right", "click", "again", "on", "variable", "that", "we", "ve", "edit", "It", "will", "show", "Rename", "variable_name", "use", "here", "NUMBER", "Try", "edit", "variable", "name", "again", "nothing", "change", "in", "Graph", "widget", "Expected", "behavior", "Rename", "variable", "menu", "works", "Maybe", "split", "Rename", "variable", "and", "add", "flag", "as", "same", "as", "old", "version", "Screenshots", "NUMBER", "Right", "click", "on", "variable", "name", "only", "Add", "flag", "menu", "shows", "up", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "fea", "NUMBER", "f", "NUMBER", "da", "NUMBER", "png", "NUMBER", "Edit", "value", "in", "Add", "flag", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "bef", "NUMBER", "fadb", "NUMBER", "png", "NUMBER", "Edit", "variable", "name", "menu", "shows", "up", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "da", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "f", "NUMBER", "a", "NUMBER", "png", "NUMBER", "Edit", "variable", "name", "again", "but", "nothing", "work", "Screenshot", "at", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "fe", "f", "NUMBER", "b", "NUMBER", "db", "NUMBER", "cf", "NUMBER", "png", "Additional", "context", "I", "be", "playing", "random", "challenge", "at", "LINK", "karliss", "this", "bug", "seems", "fix", "with", "Cutter", "NUMBER", "and", "radare", "NUMBER", "NUMBER", "However", "the", "text", "on", "menu", "be", "still", "Retype", "function", "local", "vars", "Y", "NUMBER", "The", "function", "was", "call", "work", "fine", "define", "variable", "NUMBER", "So", "i", "think", "this", "bug", "was", "fix", "from", "radare", "NUMBER", "and", "it", "needs", "a", "little", "fix", "from", "cutter", "side", "sorry", "i", "can", "t", "take", "the", "screenshot", "right", "now", "NUMBER", "I", "ll", "do", "it", "as", "soon", "as", "possible", "NUMBER", "Thank", "you", "for", "your", "feedback", "NUMBER", "Everyone", "in", "dev", "team", "agrees", "that", "renaming", "process", "should", "be", "improved", "but", "it", "be", "a", "bit", "more", "complicated", "than", "that", "NUMBER", "Those", "be", "two", "somewhat", "different", "somewhat", "things", "NUMBER", "R", "NUMBER", "has", "separate", "commands", "for", "renaming", "a", "specific", "kind", "of", "thing", "global", "flag", "rsp", "based", "local", "var", "rbp", "based", "local", "bar", "NUMBER", "NUMBER", "There", "be", "also", "a", "command", "for", "renaming", "whatever", "be", "referenced", "on", "current", "line", "NUMBER", "Before", "and", "after", "NUMBER", "cutter", "exposes", "two", "of", "them", "NUMBER", "Rename", "variable", "with", "N", "shortcut", "you", "complained", "about", "be", "based", "on", "r", "NUMBER", "command", "for", "renaming", "anything", "on", "current", "line", "NUMBER", "Nothing", "change", "there", "it", "be", "still", "broken", "for", "renaming", "local", "variables", "NUMBER", "The", "change", "in", "NUMBER", "in", "affected", "second", "command", "whose", "primary", "purpose", "be", "editing", "local", "variables", "type", "and", "name", "NUMBER", "Nothing", "was", "fix", "on", "cutter", "or", "r", "NUMBER", "but", "it", "became", "easier", "to", "use", "cutter", "local", "variable", "editing", "function", "as", "alternative", "way", "of", "renaming", "local", "variables", "NUMBER", "In", "ideal", "case", "there", "would", "be", "single", "action", "for", "renaming", "whatever", "you", "clicked", "on", "NUMBER", "Problem", "with", "make", "this", "work", "nicely", "be", "that", "cutter", "has", "no", "idea", "what", "part", "of", "disassembly", "that", "you", "clicked", "on", "refers", "to", "NUMBER", "It", "doesn", "t", "know", "the", "difference", "between", "opcode", "cmp", "local", "variable", "cmp", "comment", "or", "string", "literal", "containing", "those", "letters", "NUMBER", "Second", "problem", "as", "point", "out", "before", "be", "that", "command", "for", "renaming", "anything", "be", "broken", "NUMBER", "karliss", "so", "from", "what", "i", "be", "understand", "the", "string", "Rename", "local", "variable", "be", "a", "fix", "text", "and", "there", "would", "be", "now", "Rename", "variable", "X", "Rename", "variable", "Y", "in", "the", "menu", "like", "previous", "version", "So", "i", "think", "this", "issue", "can", "be", "close", "because", "the", "rename", "problem", "be", "fix", "look", "like", "NUMBER", "P", "s", "NUMBER", "when", "i", "right", "clicked", "on", "the", "function", "there", "be", "NUMBER", "options", "Rename", "TAG", "and", "Rename", "function", "local", "vars", "this", "rename", "local", "variable", "shows", "nothing", "in", "box", "NUMBER", "NUMBER", "When", "i", "right", "clicked", "on", "cmp", "there", "be", "NUMBER", "options", "Add", "flag", "at", "TAG", "and", "Rename", "function", "local", "vars", "NUMBER", "NUMBER", "The", "same", "NUMBER", "menu", "when", "i", "right", "clicked", "on", "string", "object", "NUMBER", "Comment", "seems", "doesnt", "work", "NUMBER", "So", "from", "what", "i", "see", "Cutter", "still", "detects", "function", "name", "flag", "object", "some", "how", "and", "variable", "name", "be", "fix", "in", "the", "menu", "NUMBER", "I", "be", "thinking", "maybe", "hide", "Rename", "function", "local", "vars", "when", "users", "right", "click", "on", "cmp", "for", "the", "flag", "and", "function", "name", "or", "string", "could", "be", "a", "template", "choice", "before", "you", "guys", "can", "complete", "your", "function", "NUMBER", "Ofc", "this", "be", "my", "idea", "and", "i", "have", "never", "looked", "at", "the", "part", "of", "code", "so", "I", "be", "just", "giving", "i", "dea", "D", "Environment", "information", "Operating", "System", "ArchLinux", "Cutter", "version", "NUMBER", "a", "NUMBER", "b", "NUMBER", "da", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "db", "NUMBER", "b", "NUMBER", "ca", "NUMBER", "edacffc", "NUMBER", "File", "format", "ELF", "Describe", "the", "bug", "Disabling", "emu", "NUMBER", "r", "keep", "asm", "NUMBER", "emu", "enable", "NUMBER", "To", "Reproduce", "Test", "NUMBER", "NUMBER", "open", "Preferences", "DIsassembly", "Metadata", "NUMBER", "Enable", "and", "then", "disable", "asm", "NUMBER", "emu", "option", "and", "observe", "the", "difference", "NUMBER", "Enable", "emu", "NUMBER", "r", "NUMBER", "Disable", "emu", "NUMBER", "r", "NUMBER", "Observe", "that", "asm", "output", "looks", "as", "if", "asm", "NUMBER", "emu", "was", "enable", "NUMBER", "BUG", "NUMBER", "Toggle", "asmu", "NUMBER", "emu", "twice", "to", "disable", "it", "NUMBER", "Test", "NUMBER", "NUMBER", "Open", "Preferences", "DIsassembly", "Metadata", "NUMBER", "Make", "sure", "asm", "NUMBER", "emu", "be", "disabled", "and", "enable", "emu", "NUMBER", "r", "NUMBER", "Click", "ok", "NUMBER", "Reopen", "Preferences", "DIsassembly", "Metadata", "NUMBER", "Observe", "that", "asm", "NUMBER", "emu", "be", "enable", "but", "emu", "NUMBER", "r", "be", "disabled", "NUMBER", "BUG", "Expected", "behavior", "After", "disabling", "emu", "NUMBER", "r", "output", "returns", "to", "previous", "state", "NUMBER", "In", "r", "NUMBER", "when", "you", "enable", "emu", "NUMBER", "r", "it", "will", "enable", "asm", "NUMBER", "emu", "because", "iirc", "emu", "NUMBER", "r", "can", "t", "work", "when", "asm", "NUMBER", "emu", "be", "disabled", "NUMBER", "Should", "this", "be", "handle", "from", "r", "NUMBER", "both", "variables", "be", "set", "to", "false", "NUMBER", "x", "NUMBER", "ae", "NUMBER", "e", "asm", "NUMBER", "emu", "false", "NUMBER", "x", "NUMBER", "ae", "NUMBER", "e", "emu", "NUMBER", "r", "false", "enable", "emu", "NUMBER", "r", "NUMBER", "x", "NUMBER", "ae", "NUMBER", "e", "emu", "NUMBER", "r", "true", "NUMBER", "x", "NUMBER", "ae", "NUMBER", "e", "emu", "NUMBER", "r", "true", "show", "that", "asm", "NUMBER", "emu", "became", "true", "NUMBER", "x", "NUMBER", "ae", "NUMBER", "e", "asm", "NUMBER", "emu", "true", "set", "emu", "NUMBER", "r", "to", "false", "again", "NUMBER", "x", "NUMBER", "ae", "NUMBER", "e", "emu", "NUMBER", "r", "false", "NUMBER", "x", "NUMBER", "ae", "NUMBER", "e", "emu", "NUMBER", "r", "false", "this", "do", "not", "affect", "asm", "NUMBER", "emu", "that", "previously", "became", "true", "and", "still", "be", "NUMBER", "x", "NUMBER", "ae", "NUMBER", "e", "asm", "NUMBER", "emu", "true", "Detailed", "description", "Add", "Graphviz", "LINK", "based", "layout", "NUMBER", "It", "provides", "more", "compact", "layout", "with", "better", "edge", "routing", "NUMBER", "Add", "menu", "for", "selecting", "graph", "layout", "algorithm", "NUMBER", "Test", "plan", "required", "Open", "a", "graph", "view", "try", "all", "layouts", "layoutmenu", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "bb", "NUMBER", "af", "NUMBER", "b", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "fc", "NUMBER", "NUMBER", "ee", "NUMBER", "c", "NUMBER", "ec", "NUMBER", "png", "Closing", "issue", "Closes", "NUMBER", "Build", "scripts", "will", "probably", "need", "some", "more", "work", "NUMBER", "I", "want", "to", "try", "some", "change", "in", "Graphviz", "configuration", "NUMBER", "Some", "observations", "Graphviz", "be", "slower", "than", "our", "current", "algorithm", "and", "I", "know", "a", "few", "change", "that", "could", "make", "current", "algorithm", "even", "faster", "NUMBER", "Layout", "be", "more", "compact", "maybe", "even", "too", "compact", "NUMBER", "There", "be", "almost", "no", "blocks", "that", "be", "moved", "far", "to", "the", "side", "with", "both", "parent", "and", "children", "be", "on", "the", "same", "side", "NUMBER", "Edge", "routing", "be", "mostly", "better", "there", "be", "no", "unnecessary", "edge", "loops", "NUMBER", "Sometimes", "it", "s", "a", "bit", "too", "close", "to", "blocks", "NUMBER", "Didn", "t", "saw", "a", "setting", "for", "this", "but", "maybe", "it", "can", "be", "improved", "by", "playing", "with", "scale", "NUMBER", "Graphviz", "sometimes", "hits", "some", "asserts", "crash", "Cutter", "Starting", "block", "be", "sometimes", "put", "in", "the", "middle", "of", "graph", "even", "though", "more", "top", "to", "bottom", "ordering", "be", "possible", "NUMBER", "newrank", "setting", "didn", "t", "seem", "to", "help", "much", "NUMBER", "I", "want", "to", "try", "giving", "some", "ranking", "hints", "NUMBER", "tailport", "and", "headport", "setting", "for", "enforcing", "edge", "connection", "side", "didn", "t", "seem", "to", "work", "with", "ortho", "edge", "mode", "NUMBER", "Previously", "there", "wasn", "t", "much", "new", "to", "show", "beside", "edges", "endpoints", "be", "properly", "attached", "and", "self", "loop", "direction", "fix", "NUMBER", "Now", "I", "implement", "a", "few", "more", "configurations", "for", "you", "to", "try", "NUMBER", "Implemented", "rank", "hinting", "by", "excluding", "edges", "that", "form", "a", "loop", "from", "some", "Graphviz", "processing", "NUMBER", "Graphviz", "be", "better", "at", "dealing", "with", "DAG", "than", "arbitrary", "graphs", "NUMBER", "Most", "of", "the", "time", "there", "be", "no", "difference", "but", "in", "some", "cases", "without", "hinting", "it", "puts", "initial", "block", "somewhere", "in", "the", "middle", "or", "make", "the", "layout", "go", "sideways", "NUMBER", "See", "one", "of", "bad", "examples", "in", "screenshot", "NUMBER", "Polyline", "edge", "routing", "and", "ortho", "edge", "routing", "modes", "NUMBER", "Ortho", "mode", "looks", "more", "tidy", "but", "sometimes", "causes", "crashes", "this", "also", "happens", "when", "exporting", "graph", "from", "r", "NUMBER", "directly", "NUMBER", "Compared", "to", "ortho", "mode", "polyline", "doesn", "t", "break", "from", "tailport", "headport", "setting", "but", "it", "stacks", "the", "endpoints", "which", "I", "don", "t", "like", "NUMBER", "Graphviz", "ortho", "more", "or", "less", "default", "configuration", "with", "ortho", "edges", "Graphviz", "ortho", "ortho", "edges", "with", "rank", "hinting", "Graphviz", "polyline", "polyline", "edges", "with", "rank", "hinting", "Demonstration", "for", "case", "where", "rank", "hinting", "helps", "NUMBER", "Ortho", "on", "the", "right", "regular", "ortho", "on", "the", "left", "NUMBER", "Function", "entry", "marked", "in", "green", "NUMBER", "rank", "hint", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "affa", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "bebc", "NUMBER", "d", "NUMBER", "png", "Ortho", "on", "the", "right", "polyline", "on", "the", "left", "polyline", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "affa", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "bac", "NUMBER", "fb", "NUMBER", "png", "This", "isn", "t", "a", "bad", "moment", "to", "try", "it", "out", "on", "various", "function", "NUMBER", "If", "you", "have", "any", "idea", "for", "graphviz", "setting", "LINK", "that", "could", "improve", "the", "look", "make", "a", "comment", "NUMBER", "Examples", "of", "use", "headport", "and", "tailport", "NUMBER", "Sometimes", "causes", "edge", "to", "go", "around", "node", "in", "an", "ugly", "way", "see", "NUMBER", "x", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "fa", "NUMBER", "headport", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "da", "NUMBER", "affe", "NUMBER", "e", "NUMBER", "NUMBER", "be", "NUMBER", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "png", "headport", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "affe", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "png", "While", "Graphviz", "ortho", "be", "the", "most", "efficient", "in", "terms", "of", "space", "efficiency", "aka", "wise", "layout", "almost", "no", "space", "wasted", "I", "really", "don", "t", "like", "its", "arrows", "NUMBER", "Seems", "like", "it", "wasn", "t", "designed", "for", "CFG", "so", "it", "s", "something", "we", "will", "need", "to", "tweak", "NUMBER", "So", "basically", "in", "my", "opinion", "the", "arrows", "shoul", "alway", "start", "and", "end", "at", "the", "top", "center", "of", "a", "block", "Current", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "png", "Ortho", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "be", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "be", "NUMBER", "png", "ITAYC", "NUMBER", "HEN", "I", "agree", "that", "having", "connections", "only", "at", "top", "and", "bottom", "would", "be", "nicer", "but", "I", "don", "t", "think", "there", "be", "anything", "that", "can", "be", "do", "with", "options", "provide", "by", "Graphviz", "NUMBER", "I", "already", "describe", "the", "things", "I", "tried", "above", "NUMBER", "The", "point", "of", "this", "PR", "be", "get", "a", "relatively", "good", "solution", "at", "least", "in", "some", "aspects", "with", "little", "development", "resources", "NUMBER", "And", "then", "it", "s", "up", "to", "user", "to", "choose", "which", "aspects", "be", "more", "important", "to", "them", "NUMBER", "Multiple", "developers", "myself", "include", "have", "expressed", "thoughts", "of", "write", "a", "better", "specialized", "solution", "but", "so", "far", "no", "one", "has", "find", "the", "time", "and", "courage", "to", "do", "it", "NUMBER", "Don", "t", "expect", "anything", "from", "Graphviz", "developers", "as", "they", "seriously", "lacking", "people", "and", "their", "effort", "would", "be", "better", "spent", "preventing", "it", "from", "bitrot", "NUMBER", "This", "doesn", "t", "prevent", "anyone", "who", "thinks", "that", "they", "can", "write", "a", "better", "layout", "algorithm", "from", "doing", "it", "NUMBER", "so", "you", "want", "to", "have", "it", "as", "one", "of", "the", "layout", "options", "but", "not", "the", "default", "one", "Yes", "not", "as", "default", "one", "NUMBER", "It", "do", "some", "things", "better", "but", "it", "has", "plenty", "of", "drawbacks", "which", "were", "mention", "above", "NUMBER", "This", "PR", "be", "very", "good", "no", "reason", "not", "to", "merge", "NUMBER", "In", "addition", "to", "this", "I", "think", "that", "what", "blocking", "it", "from", "be", "the", "default", "layout", "be", "that", "the", "arrows", "be", "not", "come", "in", "and", "going", "out", "from", "the", "bottom", "top", "center", "of", "the", "blocks", "NUMBER", "Other", "than", "that", "it", "be", "very", "nice", "NUMBER", "Also", "need", "to", "make", "it", "work", "on", "Appveyor", "for", "Windows", "build", "NUMBER", "thestr", "NUMBER", "ng", "NUMBER", "r", "xarkes", "if", "you", "don", "t", "have", "anything", "to", "add", "please", "merge", "Awesome", "Graphviz", "be", "one", "of", "the", "best", "graph", "drawing", "libraries", "that", "be", "available", "NUMBER", "It", "would", "be", "nice", "to", "have", "it", "as", "one", "of", "the", "options", "NUMBER", "Got", "quick", "proof", "of", "concept", "work", "NUMBER", "graphviz", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ff", "NUMBER", "abda", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "png", "graphviz", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "abda", "NUMBER", "e", "NUMBER", "NUMBER", "ccb", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "png", "Remaining", "work", "x", "arrow", "ends", "build", "script", "currently", "works", "only", "with", "CMake", "qmake", "build", "be", "probably", "broken", "build", "on", "non", "macOS", "and", "Windows", "x", "layout", "engine", "selection", "menu", "x", "optimize", "graphviz", "configuration", "for", "CFG", "layout", "see", "what", "settings", "radare", "NUMBER", "use", "x", "use", "attribute", "handles", "instead", "of", "string", "for", "setting", "node", "attributes", "x", "code", "cleanup", "x", "be", "it", "possible", "to", "set", "width", "height", "without", "converting", "it", "to", "string", "x", "dpi", "conversion", "Code", "be", "in", "LINK", "Wouldn", "t", "be", "better", "to", "create", "PR", "I", "will", "make", "a", "PR", "once", "it", "s", "closer", "to", "be", "usable", "NUMBER", "Why", "not", "having", "a", "special", "branch", "so", "user", "can", "test", "it", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "The", "Debugger", "be", "push", "in", "production", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "TAG", "Essentials", "features", "as", "well", "as", "requirements", "must", "be", "defined", "and", "tasks", "created", "accordingly", "NUMBER", "The", "project", "must", "be", "completed", "with", "those", "and", "the", "tasks", "ordered", "accordingly", "Ping", "Maijn", "I", "provide", "to", "yossizap", "the", "start", "i", "had", "but", "didn", "t", "really", "had", "time", "to", "work", "on", "it", "at", "all", "after", "that", "Hackmd", "be", "in", "maintenance", "mode", "will", "provide", "link", "when", "it", "s", "back", "up", "We", "still", "have", "to", "finish", "it", "we", "be", "currently", "at", "basic", "functionality", "NUMBER", "we", "re", "quite", "advance", "in", "the", "progress", "of", "this", "one", "NUMBER", "Tracking", "it", "in", "the", "hack", "NUMBER", "md", "and", "need", "to", "finish", "soon", "NUMBER", "Closing", "as", "this", "issue", "doesn", "t", "help", "with", "keep", "track", "really", "NUMBER", "This", "fix", "NUMBER", "and", "maybe", "also", "the", "issue", "mention", "in", "NUMBER", "Let", "s", "see", "if", "an", "image", "will", "be", "available", "at", "docker", "hub", "after", "merge", "this", "pray", "Worked", "xarkes", "This", "might", "be", "the", "opposite", "extreme", "NUMBER", "When", "work", "with", "multiple", "variations", "of", "the", "same", "binary", "it", "would", "be", "as", "bad", "if", "not", "worse", "than", "current", "approach", "with", "long", "names", "NUMBER", "From", "the", "few", "program", "with", "similar", "recent", "file", "project", "list", "all", "of", "them", "use", "following", "approach", "show", "project", "name", "file", "name", "in", "our", "case", "use", "contrasting", "color", "show", "directory", "or", "full", "path", "on", "second", "line", "with", "less", "contrasting", "color", "NUMBER", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cc", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "bf", "NUMBER", "ce", "NUMBER", "bec", "NUMBER", "e", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cedb", "NUMBER", "f", "NUMBER", "aa", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "fe", "NUMBER", "a", "NUMBER", "d", "NUMBER", "png", "VS", "NUMBER", "LINK", "content", "uploads", "sites", "NUMBER", "NUMBER", "NUMBER", "start", "window", "NUMBER", "jpg", "and", "Xcode", "LINK", "content", "uploads", "NUMBER", "NUMBER", "Step", "One", "NUMBER", "x", "NUMBER", "png", "also", "do", "the", "same", "NUMBER", "CLion", "LINK", "_QST_WelcomeScreen", "NUMBER", "png", "I", "agree", "with", "karliss", "on", "this", "NUMBER", "I", "prefer", "seeing", "the", "full", "path", "than", "seeing", "only", "the", "filename", "NUMBER", "Best", "option", "as", "suggested", "would", "be", "to", "show", "the", "folder", "name", "short", "version", "an", "file", "name", "with", "different", "colors", "or", "emphasis", "NUMBER", "This", "shouldn", "t", "take", "a", "lot", "of", "space", "Windows", "Anota\u00e7\u00e3o", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "aaef", "NUMBER", "e", "NUMBER", "NUMBER", "ada", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "eda", "NUMBER", "jpg", "Apparently", "the", "problem", "was", "solve", "NUMBER", "xarkes", "be", "you", "satisfied", "with", "your", "solution", "yet", "Yes", "I", "do", "mind", "NUMBER", "I", "will", "squash", "NUMBER", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "Closes", "NUMBER", "I", "m", "not", "really", "find", "of", "this", "approach", "because", "the", "user", "will", "have", "to", "have", "exactly", "the", "same", "directory", "structure", "and", "cannot", "have", "another", "name", "for", "the", "pyside", "folder", "e", "NUMBER", "g", "NUMBER", "pyside_v", "NUMBER", "xx_win", "NUMBER", "or", "I", "don", "t", "know", "NUMBER", "Thoughts", "a", "NUMBER", "ext", "He", "just", "refactored", "the", "code", "which", "we", "already", "had", "before", "NUMBER", "User", "had", "no", "choice", "with", "pyside", "folder", "naming", "before", "as", "well", "NUMBER", "I", "m", "not", "really", "find", "of", "this", "approach", "because", "the", "user", "will", "have", "to", "have", "exactly", "the", "same", "directory", "structure", "and", "cannot", "have", "another", "name", "for", "the", "pyside", "folder", "e", "NUMBER", "g", "NUMBER", "pyside_v", "NUMBER", "xx_win", "NUMBER", "or", "I", "don", "t", "know", "NUMBER", "Right", "because", "it", "be", "assumed", "that", "user", "download", "deps", "from", "LINK", "deps", "NUMBER", "But", "user", "still", "be", "able", "to", "override", "some", "paths", "NUMBER", "In", "general", "I", "don", "t", "see", "other", "way", "to", "ease", "the", "build", "NUMBER", "We", "add", "these", "options", "to", "provide", "users", "a", "way", "to", "build", "Cutter", "without", "extra", "dependencies", "NUMBER", "What", "do", "you", "propose", "Make", "these", "dependency", "mandatory", "and", "add", "them", "to", "the", "codebase", "Override", "PREFIX", "from", "command", "qmake", "PREFIX", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "Detailed", "description", "This", "pull", "request", "be", "make", "some", "change", "in", "the", "way", "that", "advance", "analysis", "options", "work", "NUMBER", "Mostly", "it", "remove", "redundant", "code", "and", "strings", "and", "put", "all", "the", "configurable", "setting", "in", "one", "array", "of", "structs", "NUMBER", "Now", "when", "we", "would", "want", "to", "add", "new", "analysis", "config", "to", "there", "or", "enable", "disable", "an", "analysis", "command", "by", "default", "we", "onyl", "need", "to", "change", "one", "occurence", "of", "it", "NUMBER", "This", "be", "important", "because", "the", "mess", "that", "was", "there", "made", "some", "analysis", "options", "to", "be", "visible", "on", "UI", "but", "not", "affected", "the", "analysis", "itself", "NUMBER", "Moreover", "some", "analysis", "commands", "were", "deprecate", "in", "some", "places", "but", "did", "not", "change", "in", "other", "places", "NUMBER", "This", "PR", "fix", "these", "problem", "as", "well", "NUMBER", "Also", "the", "PR", "will", "dynamically", "create", "the", "checkboxes", "of", "the", "analysis", "options", "based", "on", "the", "defined", "array", "of", "options", "NUMBER", "The", "following", "request", "also", "remove", "some", "visible", "occurrences", "of", "the", "Analysis", "abbreviation", "anal", "in", "the", "UI", "NUMBER", "Now", "by", "hovering", "an", "analysis", "options", "in", "the", "UI", "the", "user", "would", "see", "the", "r", "NUMBER", "command", "that", "would", "be", "executed", "as", "can", "be", "seen", "in", "the", "following", "image", "NUMBER", "This", "be", "a", "compromise", "between", "not", "write", "non", "sense", "for", "non", "r", "NUMBER", "users", "but", "keep", "the", "info", "available", "for", "current", "r", "NUMBER", "users", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "db", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "f", "NUMBER", "png", "Instead", "of", "write", "the", "executed", "commands", "to", "the", "Analysis", "log", "window", "now", "the", "meaningful", "description", "would", "be", "write", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "f", "NUMBER", "ee", "NUMBER", "b", "NUMBER", "db", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "baf", "NUMBER", "dbadc", "NUMBER", "png", "UPDATE", "Closing", "issue", "close", "NUMBER", "Will", "take", "few", "days", "and", "I", "will", "push", "the", "re", "factored", "version", "Environment", "information", "Operating", "System", "ArchLinux", "Cutter", "version", "NUMBER", "d", "NUMBER", "e", "NUMBER", "Describe", "the", "bug", "Disassembly", "arrows", "be", "come", "from", "empty", "line", "when", "asm", "NUMBER", "bb", "NUMBER", "line", "be", "enable", "NUMBER", "To", "Reproduce", "NUMBER", "Enable", "Show", "empty", "line", "after", "every", "basic", "block", "asm", "NUMBER", "bb", "NUMBER", "line", "in", "Preferences", "NUMBER", "Check", "what", "be", "happening", "in", "disassembly", "view", "Screenshots", "NUMBER", "NUMBER", "NUMBER", "_", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "dd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "png", "The", "same", "happens", "with", "multiline", "comments", "NUMBER", "Looks", "like", "currently", "asm", "NUMBER", "bb", "NUMBER", "lines", "be", "fine", "but", "multiline", "comments", "be", "bad", "NUMBER", "Currently", "arrow", "points", "to", "last", "line", "NUMBER", "be", "above", "line", "and", "multiline", "comments", "be", "bellow", "so", "simple", "logic", "of", "selecting", "first", "or", "last", "line", "with", "specific", "address", "doesn", "t", "work", "NUMBER", "To", "simplify", "the", "write", "Cutter", "scripts", "without", "diving", "every", "time", "in", "the", "documentation", "it", "might", "be", "possible", "to", "adopt", "Blender", "approach", "once", "you", "toggle", "configuration", "option", "Python", "Tooltips", "it", "shows", "the", "Python", "API", "required", "to", "do", "the", "same", "action", "on", "hovering", "every", "button", "or", "other", "UI", "elements", "NUMBER", "See", "the", "screenshot", "how", "it", "be", "do", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cb", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ced", "NUMBER", "png", "See", "also", "LINK", "to", "find", "the", "python", "equivalent", "operation", "for", "tool", "settings", "menu", "I", "think", "that", "this", "can", "be", "part", "of", "a", "whole", "solution", "in", "which", "we", "organize", "the", "actions", "in", "Cutter", "in", "some", "kind", "of", "a", "big", "structure", "NUMBER", "So", "if", "we", "already", "write", "the", "API", "for", "each", "action", "we", "can", "also", "write", "the", "description", "of", "it", "and", "how", "to", "trigger", "it", "this", "can", "be", "use", "for", "a", "command", "palette", "LINK", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "To", "ensure", "that", "the", "pseudocode", "be", "always", "synchronised", "with", "the", "rest", "we", "need", "to", "remove", "the", "refresh", "button", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "TAG", "r", "NUMBER", "dec", "to", "work", "in", "task", "and", "remove", "refresh", "button", "in", "pseudocode", "panel", "NUMBER", "With", "a", "new", "DisasmWidget", "look", "There", "might", "be", "a", "few", "more", "tweak", "to", "the", "new", "widget", "NUMBER", "Better", "wait", "for", "release", "to", "come", "closer", "before", "doing", "this", "NUMBER", "This", "be", "superseded", "by", "NUMBER", "right", "xarkes", "ping", "Hey", "XVilka", "sure", "we", "will", "take", "care", "of", "that", "soon", "How", "soon", "See", "LINK", "a", "Screenshot", "in", "Linux", "or", "LINK", "a", "Screenshot", "in", "Microsoft", "Windows", "Windows", "screenshot", "would", "be", "embarassing", "thestr", "NUMBER", "ng", "NUMBER", "r", "See", "also", "LINK", "jupyter", "issue", "NUMBER", "TAG", "Detailed", "description", "TAG", "Changes", "in", "this", "PR", "Allow", "seeking", "without", "triggering", "raise", "memory", "widget", "NUMBER", "This", "was", "one", "of", "the", "major", "causes", "for", "unexpect", "change", "in", "focus", "NUMBER", "Raise", "memory", "widget", "mostly", "moved", "to", "main", "window", "from", "core", "and", "each", "widget", "NUMBER", "Last", "active", "widget", "remembered", "use", "a", "pointer", "instead", "of", "memory", "widget", "type", "NUMBER", "Helps", "when", "there", "be", "multiple", "widgets", "with", "the", "same", "type", "NUMBER", "Initial", "version", "for", "show", "in", "context", "menu", "NUMBER", "Currently", "add", "only", "to", "disassembly", "and", "graph", "menus", "NUMBER", "Left", "add", "it", "to", "other", "menus", "for", "separate", "PR", "as", "it", "would", "be", "good", "to", "also", "refactor", "some", "of", "the", "common", "actions", "for", "list", "widgets", "with", "addressable", "objects", "like", "function", "strings", "imports", "search", "results", "and", "others", "NUMBER", "I", "couldn", "t", "quite", "decide", "if", "show", "in", "new", "disassembly", "and", "others", "should", "create", "a", "new", "synchronized", "or", "unsynchronized", "memory", "widget", "NUMBER", "Currently", "Cutter", "be", "designed", "more", "for", "synchronized", "mode", "NUMBER", "In", "future", "the", "menu", "could", "also", "be", "reused", "for", "lines", "with", "jumps", "show", "target", "NUMBER", "That", "should", "probably", "use", "unsynchronized", "NUMBER", "Show", "in", "and", "show", "target", "doesn", "t", "necessarily", "need", "to", "behave", "exactly", "the", "same", "NUMBER", "Parts", "that", "could", "be", "better", "Name", "for", "MainWindow", "and", "Core", "show", "address", "be", "open", "for", "discussions", "NUMBER", "I", "be", "not", "too", "happy", "about", "use", "event", "filter", "for", "detecting", "memory", "widget", "activation", "NUMBER", "Test", "plan", "required", "perform", "test", "case", "describe", "in", "NUMBER", "switching", "between", "disassembly", "and", "graph", "use", "space", "works", "in", "normal", "case", "works", "when", "either", "disassembly", "or", "graph", "widget", "be", "close", "works", "when", "disassembly", "be", "side", "by", "side", "with", "graph", "test", "focus", "by", "moving", "up", "and", "down", "test", "rising", "last", "active", "switch", "to", "memory", "widget", "repeat", "with", "all", "switch", "to", "overview", "double", "click", "on", "function", "test", "ignore", "empty", "graph", "switch", "to", "graph", "switch", "to", "symbol", "list", "double", "click", "function", "observe", "that", "it", "switched", "to", "graph", "switch", "to", "string", "list", "double", "click", "string", "literal", "observe", "that", "it", "switched", "to", "memory", "widget", "that", "isn", "t", "graph", "test", "with", "multiple", "widgets", "of", "the", "same", "kind", "disassembly", "side", "by", "side", "with", "hex", "widget", "use", "master", "it", "be", "sometimes", "impossible", "to", "do", "keyboard", "navigation", "in", "hexwidget", "because", "seek", "moves", "focus", "to", "disassembly", "side", "by", "side", "use", "case", "showin", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dc", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "png", "TAG", "Closing", "issue", "Closes", "NUMBER", "Just", "quickly", "reading", "through", "the", "change", "doesn", "t", "look", "bad", "already", "Could", "you", "please", "also", "move", "everything", "MemoryWidget", "relate", "except", "show", "and", "showMemoryWidgetRequested", "from", "CutterCore", "into", "MainWindow", "I", "think", "having", "this", "directly", "widget", "relate", "stuff", "in", "CutterCore", "was", "a", "bad", "decision", "NUMBER", "Detailed", "description", "This", "Pull", "Request", "will", "update", "radare", "NUMBER", "submodule", "to", "its", "latest", "version", "from", "master", "This", "be", "a", "requirement", "for", "NUMBER", "requires", "LINK", "js", "pull", "NUMBER", "r", "NUMBER", "dec", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "acb", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "bef", "NUMBER", "db", "NUMBER", "gif", "Should", "we", "rename", "PseudocodeWidget", "to", "DecompilerWidget", "I", "would", "be", "happy", "to", "see", "more", "documentation", "here", "for", "the", "expected", "input", "and", "description", "of", "the", "structures", "NUMBER", "This", "will", "make", "the", "implementation", "of", "other", "decompilers", "easier", "Oh", "and", "as", "I", "write", "NUMBER", "times", "already", "this", "looks", "amazing", "GREAT", "JOB", "Not", "sure", "if", "DecompilerWidget", "makes", "more", "sense", "NUMBER", "Maybe", "we", "can", "think", "about", "it", "after", "having", "integrated", "an", "actual", "Decompiler", "NUMBER", "Ok", "I", "ll", "add", "some", "more", "docs", "NUMBER", "This", "pull", "request", "introduces", "NUMBER", "alert", "when", "merge", "NUMBER", "f", "NUMBER", "fe", "NUMBER", "a", "NUMBER", "fdffea", "NUMBER", "d", "NUMBER", "eec", "into", "db", "NUMBER", "c", "NUMBER", "a", "NUMBER", "cdbbeeee", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "f", "NUMBER", "view", "on", "LGTM", "NUMBER", "com", "LINK", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "dca", "NUMBER", "c", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "new", "alerts", "NUMBER", "for", "Short", "global", "name", "This", "pull", "request", "introduces", "NUMBER", "alert", "when", "merge", "NUMBER", "f", "NUMBER", "f", "LINK", "into", "db", "NUMBER", "c", "NUMBER", "a", "LINK", "view", "on", "LGTM", "NUMBER", "com", "LINK", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "dca", "NUMBER", "c", "NUMBER", "d", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "new", "alerts", "NUMBER", "for", "Short", "global", "name", "I", "think", "we", "should", "disable", "this", "rule", "we", "know", "better", "than", "lgtm", "what", "a", "good", "name", "be", "NUMBER", "This", "pull", "request", "introduces", "NUMBER", "alert", "when", "merge", "NUMBER", "e", "NUMBER", "fad", "NUMBER", "cfffb", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "into", "db", "NUMBER", "c", "NUMBER", "a", "NUMBER", "cdbbeeee", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "f", "NUMBER", "view", "on", "LGTM", "NUMBER", "com", "LINK", "be", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ddf", "NUMBER", "c", "new", "alerts", "NUMBER", "for", "Short", "global", "name", "Should", "take", "care", "of", "the", "themes", "issue", "imo", "NUMBER", "I", "cant", "make", "a", "use", "of", "it", "on", "Light", "Theme", "About", "lgtm", "I", "ll", "check", "how", "to", "disable", "it", "in", "another", "pr", "NUMBER", "Themes", "aren", "t", "relate", "to", "this", "pr", "as", "well", "NUMBER", "Only", "support", "in", "CMake", "for", "now", "set", "CUTTER_ENABLE_KSYNTAXHIGHLIGHTING", "to", "AUTO", "enable", "if", "find", "or", "ON", "required", "to", "use", "it", "NUMBER", "Bildschirmfoto", "vom", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "png", "I", "don", "t", "think", "this", "would", "be", "good", "for", "Disassembly", "NUMBER", "There", "it", "would", "make", "more", "sense", "to", "skip", "the", "html", "step", "and", "convert", "the", "ansi", "code", "directly", "since", "they", "be", "very", "compact", "and", "easy", "to", "parse", "NUMBER", "Any", "thoughts", "about", "dealing", "with", "isNull", "checks", "Most", "of", "them", "can", "probably", "replaced", "with", "isEmpty", "NUMBER", "There", "might", "be", "some", "that", "need", "to", "differentiate", "between", "no", "string", "and", "empty", "string", "but", "it", "s", "hard", "to", "tell", "NUMBER", "Null", "and", "empty", "strings", "be", "definitely", "different", "see", "LINK", "NUMBER", "qstring", "NUMBER", "html", "isNull", "though", "it", "says", "for", "historical", "reasons", "NUMBER", "The", "only", "thing", "they", "deprecate", "be", "QString", "null", "which", "was", "redundant", "NUMBER", "In", "general", "nullish", "strings", "should", "be", "constructed", "like", "QString", "and", "if", "we", "don", "t", "want", "to", "differenciate", "between", "null", "and", "empty", "most", "cases", "checked", "with", "isEmpty", "NUMBER", "IsNull", "isn", "t", "deprecate", "yet", "but", "its", "usage", "be", "discouraged", "NUMBER", "I", "would", "suggest", "slowly", "remove", "it", "NUMBER", "As", "for", "the", "cases", "that", "need", "optional", "string", "it", "might", "be", "better", "to", "use", "more", "explicit", "approach", "for", "indicating", "that", "NUMBER", "I", "m", "not", "too", "sure", "about", "that", "NUMBER", "For", "instance", "here", "it", "makes", "a", "difference", "between", "a", "string", "exist", "and", "an", "empty", "string", "LINK", "NUMBER", "qjsonvalue", "NUMBER", "html", "toString", "NUMBER", "But", "yeah", "for", "our", "own", "code", "I", "doubt", "we", "will", "have", "to", "use", "isNull", "very", "often", "NUMBER", "In", "general", "I", "be", "also", "more", "a", "fan", "of", "separating", "nullability", "from", "the", "actual", "type", "like", "Swift", "Rust", "Haskell", "std", "optional", "etc", "NUMBER", "do", "NUMBER", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "there", "be", "no", "info", "about", "such", "repository", "as", "cutter", "plugins", "LINK", "plugins", "on", "the", "front", "page", "of", "Cutter", "repo", "NUMBER", "Plus", "there", "be", "no", "way", "to", "go", "there", "from", "Cutter", "either", "NUMBER", "TAG", "Describe", "the", "solution", "you", "d", "like", "Add", "link", "to", "plugins", "repo", "to", "readme", "and", "add", "some", "button", "like", "get", "plugins", "to", "plugins", "submenu", "NUMBER", "TAG", "TAG", "TAG", "Currently", "put", "it", "in", "LINK", "Need", "to", "put", "it", "in", "README", "and", "Cutter", "binary", "I", "think", "the", "meaning", "be", "the", "same", "as", "LINK", "so", "I", "will", "close", "that", "issue", "NUMBER", "Yes", "I", "understood", "but", "imo", "it", "s", "not", "worth", "it", "to", "do", "a", "temporary", "solution", "as", "we", "will", "focus", "on", "the", "new", "one", "asap", "NUMBER", "Detailed", "description", "This", "pull", "request", "simply", "disables", "asm", "NUMBER", "movlea", "by", "default", "NUMBER", "This", "feature", "will", "probably", "be", "drop", "in", "the", "next", "r", "NUMBER", "release", "so", "meantime", "we", "disable", "it", "NUMBER", "The", "comments", "can", "be", "shown", "here", "and", "looks", "like", "MOV", "TAG", "VAL", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ad", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "acbc", "NUMBER", "f", "NUMBER", "png", "Test", "plan", "required", "Open", "almost", "any", "binary", "and", "observe", "that", "the", "comments", "be", "now", "gone", "NUMBER", "For", "example", "r", "NUMBER", "bin", "true", "aa", "pdf", "main", "This", "change", "should", "be", "in", "r", "NUMBER", "not", "in", "cutter", "NUMBER", "I", "have", "be", "ask", "to", "change", "this", "NUMBER", "weeks", "ago", "and", "get", "no", "feedback", "at", "all", "On", "NUMBER", "Jun", "NUMBER", "at", "NUMBER", "NUMBER", "Florian", "M\u00e4rkl", "TAG", "write", "Merged", "NUMBER", "into", "master", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "As", "write", "This", "feature", "will", "probably", "be", "drop", "in", "the", "next", "r", "NUMBER", "release", "so", "meantime", "we", "disable", "it", "NUMBER", "We", "couldn", "t", "allow", "it", "to", "be", "in", "Cutter", "so", "we", "disabled", "it", "asap", "NUMBER", "Need", "to", "drop", "this", "from", "radare", "NUMBER", "entirely", "Its", "not", "my", "problem", "that", "people", "ignore", "mu", "chat", "message", "NUMBER", "And", "i", "agree", "with", "condret", "but", "i", "was", "looking", "for", "feedback", "and", "real", "use", "cases", "to", "determine", "if", "we", "be", "miss", "any", "useful", "case", "by", "disabling", "remove", "it", "On", "NUMBER", "Jun", "NUMBER", "at", "NUMBER", "NUMBER", "Florian", "M\u00e4rkl", "TAG", "write", "This", "change", "should", "be", "in", "r", "NUMBER", "not", "in", "cutter", "NUMBER", "I", "have", "be", "ask", "to", "change", "this", "NUMBER", "weeks", "ago", "and", "get", "no", "feedback", "at", "all", "On", "NUMBER", "Jun", "NUMBER", "at", "NUMBER", "NUMBER", "Florian", "M\u00e4rkl", "NUMBER", "write", "Merged", "NUMBER", "into", "master", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "This", "be", "not", "true", "NUMBER", "I", "remember", "at", "least", "condret", "and", "me", "saying", "it", "should", "be", "remove", "completely", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "This", "PR", "be", "a", "work", "in", "progress", "by", "the", "team", "NUMBER", "Any", "of", "you", "can", "push", "change", "to", "this", "repo", "NUMBER", "The", "goal", "be", "to", "make", "it", "stable", "and", "trust", "worthy", "as", "the", "first", "part", "and", "then", "merge", "NUMBER", "Similarly", "to", "what", "karliss", "did", "with", "Hex", "widget", "NUMBER", "Later", "improvement", "and", "new", "features", "would", "be", "add", "NUMBER", "Requires", "LINK", "Remaining", "work", "to", "do", "x", "Fix", "arrow", "positioning", "x", "Fix", "arrows", "head", "x", "Improve", "the", "algorithm", "to", "have", "something", "thinner", "and", "more", "good", "looking", "x", "Fix", "remaining", "TODO", "in", "the", "code", "what", "do", "you", "think", "about", "drawing", "arrows", "inside", "of", "text", "edit", "like", "this", "obviously", "not", "in", "this", "position", "I", "just", "didn", "t", "finish", "the", "code", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "dfcedd", "NUMBER", "b", "NUMBER", "fda", "NUMBER", "png", "Don", "t", "know", "about", "you", "but", "the", "fact", "that", "arrows", "be", "in", "different", "widget", "triggers", "me", "NUMBER", "Especially", "because", "of", "this", "frame", "around", "text", "edit", "that", "separates", "disasm", "widget", "and", "jump", "arrows", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "df", "NUMBER", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "b", "NUMBER", "f", "NUMBER", "png", "You", "can", "hide", "border", "left", "if", "it", "doesn", "t", "feel", "right", "to", "you", "NUMBER", "I", "m", "okay", "with", "use", "a", "different", "widget", "NUMBER", "Also", "we", "wanted", "to", "allow", "the", "user", "to", "copy", "the", "disassembly", "without", "ascii", "arrows", "or", "anything", "similar", "NUMBER", "On", "Sat", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "optizone", "TAG", "write", "what", "do", "you", "think", "about", "drawing", "arrows", "inside", "of", "text", "edit", "like", "this", "obviously", "not", "in", "this", "position", "I", "just", "didn", "t", "finish", "the", "code", "image", "image", "TAG", "Don", "t", "know", "about", "you", "but", "the", "fact", "that", "arrows", "be", "in", "different", "widget", "triggers", "me", "NUMBER", "Especially", "because", "of", "this", "frame", "around", "text", "edit", "that", "separates", "disasm", "widget", "and", "jump", "arrows", "image", "image", "TAG", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "arrows", "be", "just", "drawn", "on", "the", "text", "editor", "user", "cannot", "copy", "them", "As", "long", "as", "it", "looks", "good", "we", "ll", "write", "and", "easy", "to", "maintain", "I", "m", "in", "for", "every", "idea", "I", "m", "okay", "with", "your", "suggestion", "optizone", "but", "I", "think", "we", "want", "that", "the", "user", "must", "be", "able", "to", "resize", "this", "arrow", "area", "NUMBER", "I", "m", "okay", "with", "your", "suggestion", "optizone", "but", "I", "think", "we", "want", "that", "the", "user", "must", "be", "able", "to", "resize", "this", "arrow", "area", "NUMBER", "it", "be", "possible", "too", "NUMBER", "Just", "little", "harder", "to", "implement", "Well", "it", "starts", "to", "look", "good", "see", "the", "screenshots", "below", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "d", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "aac", "NUMBER", "b", "NUMBER", "e", "NUMBER", "png", "radare", "NUMBER", "has", "a", "visual", "bit", "editor", "that", "allows", "the", "user", "to", "toggle", "bits", "of", "a", "certain", "address", "NUMBER", "This", "editor", "will", "preview", "the", "result", "of", "the", "value", "with", "the", "shifted", "bits", "asm", "esil", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "eea", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "NUMBER", "png", "It", "will", "be", "fantastic", "if", "Cutter", "will", "also", "have", "it", "NUMBER", "This", "can", "be", "implement", "in", "right", "click", "of", "a", "certain", "instruction", "disassembly", "widget", "or", "value", "hex", "dump", "NUMBER", "Isn", "t", "it", "already", "there", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "png", "but", "i", "think", "having", "basic", "typess", "in", "the", "combobox", "sshould", "be", "also", "available", "On", "NUMBER", "Jun", "NUMBER", "at", "NUMBER", "NUMBER", "karliss", "TAG", "write", "Isn", "t", "it", "already", "there", "TAG", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "but", "i", "think", "having", "basic", "types", "in", "the", "combobox", "should", "be", "also", "available", "For", "the", "whole", "application", "or", "for", "a", "single", "instruction", "trufae", "you", "want", "it", "for", "the", "whole", "application", "or", "for", "a", "single", "instruction", "ping", "trufae", "it", "s", "a", "hint", "hints", "apply", "in", "the", "current", "and", "following", "instructions", "change", "the", "bits", "NUMBER", "NUMBER", "NUMBER", "of", "NUMBER", "inistruction", "doesnt", "makes", "much", "sense", "to", "me", "NUMBER", "because", "its", "mainly", "needed", "for", "ranges", "On", "NUMBER", "Nov", "NUMBER", "at", "NUMBER", "NUMBER", "Itay", "Cohen", "TAG", "write", "trufae", "TAG", "you", "want", "it", "for", "the", "whole", "application", "or", "for", "a", "single", "instruction", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "unsubscribe", "TAG", "NUMBER", "But", "the", "visual", "Bit", "editor", "have", "nothing", "to", "do", "with", "this", "at", "all", "On", "NUMBER", "Nov", "NUMBER", "at", "NUMBER", "NUMBER", "Itay", "Cohen", "TAG", "write", "Thanks", "Okay", "then", "so", "this", "issue", "be", "about", "Visual", "bit", "editor", "I", "edit", "the", "initial", "comment", "to", "describe", "it", "better", "NUMBER", "A", "new", "issue", "for", "analysis", "hints", "for", "bit", "change", "e", "NUMBER", "g", "ARM", "Thumb", "will", "be", "opened", "separately", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "unsubscribe", "NUMBER", "Something", "like", "sym", "NUMBER", "bbs", "NUMBER", "to", "filter", "oall", "the", "syms", "with", "more", "than", "NUMBER", "basic", "blocks", "name", "before", "TAG", "must", "be", "column", "names", "NUMBER", "will", "be", "good", "to", "have", "a", "way", "to", "do", "that", "without", "having", "to", "use", "the", "mouse", "like", "the", "nN", "keys", "in", "r", "NUMBER", "You", "mean", "auto", "update", "on", "single", "select", "the", "function", "name", "Like", "if", "single", "click", "be", "supposed", "to", "update", "the", "disasm", "view", "yes", "On", "NUMBER", "Jun", "NUMBER", "at", "NUMBER", "NUMBER", "xarkes", "TAG", "write", "You", "mean", "auto", "update", "on", "single", "select", "the", "function", "name", "Like", "if", "single", "click", "be", "supposed", "to", "update", "the", "disasm", "view", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "disagree", "NUMBER", "I", "dont", "think", "this", "should", "be", "the", "behavior", "NUMBER", "However", "I", "think", "that", "hitting", "TAG", "Enter", "TAG", "should", "trigger", "a", "seek", "just", "like", "double", "clicking", "the", "item", "Thus", "I", "recommend", "to", "close", "or", "to", "modify", "the", "requirement", "to", "apply", "Enter", "Can", "we", "merge", "now", "that", "Travis", "be", "green", "xarkes", "No", "It", "be", "currently", "green", "due", "to", "a", "workaround", "and", "this", "PR", "remove", "that", "workaround", "NUMBER", "We", "have", "to", "wait", "until", "Travis", "update", "their", "VM", "NUMBER", "Oh", "ok", "my", "bad", "for", "some", "reason", "I", "thought", "Travis", "did", "that", "already", "NUMBER", "Supposedly", "xcode", "NUMBER", "image", "contains", "newer", "Homebrew", "NUMBER", "Can", "we", "use", "that", "Yes", "why", "not", "Feel", "free", "to", "push", "to", "this", "branch", "NUMBER", "Hmm", "it", "fix", "homebrew", "but", "causes", "different", "problem", "NUMBER", "The", "new", "error", "could", "be", "cause", "by", "LINK", "ci", "NUMBER", "community", "t", "xcode", "headers", "not", "install", "since", "osx", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Finally", "green", "reduces", "build", "time", "by", "NUMBER", "NUMBER", "minutes", "NUMBER", "Nice", "thanks", "a", "lot", "The", "correct", "executable", "path", "should", "be", "supplied", "on", "the", "command", "line", "when", "run", "qmake", "or", "it", "will", "be", "discover", "by", "use", "pkg", "config", "NUMBER", "Detailed", "description", "When", "qmake", "be", "run", "with", "Python", "bindings", "enable", "CUTTER_ENABLE_PYTHON", "true", "CUTTER_ENABLE_PYTHON_BINDINGS", "true", "the", "dependency", "check", "for", "Shiboken", "NUMBER", "LINK", "L", "NUMBER", "do", "not", "actually", "happen", "NUMBER", "This", "be", "because", "the", "SHIBOKEN_EXECTUABLE", "variable", "referenced", "in", "the", "outer", "scope", "of", "that", "dependency", "check", "be", "always", "set", "in", "that", "case", "LINK", "L", "NUMBER", "NUMBER", "It", "looks", "like", "the", "outer", "scope", "was", "add", "when", "update", "to", "support", "cutter", "deps", "on", "Windows", "LINK", "diff", "f", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "d", "NUMBER", "R", "NUMBER", "NUMBER", "I", "think", "the", "intention", "was", "to", "skip", "the", "check", "on", "that", "platform", "because", "pkg", "config", "be", "not", "available", "NUMBER", "In", "that", "case", "I", "think", "it", "should", "work", "to", "remove", "the", "default", "value", "set", "earlier", "in", "the", "script", "and", "rely", "on", "the", "later", "check", "which", "assigns", "a", "value", "to", "the", "variable", "with", "pkg", "config", "LINK", "L", "NUMBER", "NUMBER", "Test", "plan", "required", "I", "test", "this", "locally", "with", "my", "Archlinux", "setup", "NUMBER", "The", "current", "Arch", "package", "s", "PKGBUILD", "LINK", "package", "radare", "NUMBER", "cutter", "n", "NUMBER", "do", "not", "build", "Cutter", "with", "the", "Python", "bindings", "and", "I", "discover", "this", "issue", "when", "build", "with", "a", "customized", "PKGBUILD", "NUMBER", "According", "to", "my", "test", "prior", "to", "this", "change", "if", "Shiboken", "NUMBER", "be", "not", "install", "and", "available", "through", "pkg", "config", "you", "get", "a", "build", "error", "stemming", "from", "the", "next", "check", "for", "PySide", "NUMBER", "even", "when", "that", "library", "be", "install", "NUMBER", "With", "this", "change", "the", "correct", "error", "relating", "to", "a", "miss", "Shiboken", "NUMBER", "dependency", "be", "shown", "NUMBER", "Note", "I", "be", "not", "currently", "in", "a", "position", "to", "test", "this", "build", "script", "change", "on", "Windows", "MacOS", "or", "any", "other", "Linux", "distro", "NUMBER", "I", "also", "think", "that", "problem", "with", "this", "change", "wouldn", "t", "show", "up", "at", "all", "in", "AppVeyor", "because", "its", "build", "script", "specifies", "the", "value", "directly", "NUMBER", "They", "might", "in", "Travis", "though", "NUMBER", "Pinging", "thestr", "NUMBER", "ng", "NUMBER", "r", "because", "they", "made", "the", "commit", "that", "be", "referenced", "in", "the", "above", "which", "add", "an", "outer", "scope", "to", "the", "Shiboken", "NUMBER", "package", "check", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Now", "there", "be", "only", "two", "ways", "to", "check", "what", "opcode", "do", "google", "this", "enable", "asm", "NUMBER", "describe", "These", "solutions", "be", "not", "the", "best", "seeing", "description", "for", "every", "opcode", "be", "kinda", "distracting", "you", "can", "have", "no", "access", "to", "the", "internet", "googling", "takes", "more", "time", "NUMBER", "TAG", "Describe", "the", "solution", "you", "d", "like", "To", "add", "Show", "description", "action", "in", "context", "menu", "NUMBER", "TAG", "TAG", "TAG", "Good", "idea", "and", "shouldn", "t", "be", "complicated", "to", "implement", "NUMBER", "Show", "opcode", "description", "Context", "menu", "be", "quite", "crowded", "already", "NUMBER", "Here", "be", "some", "alternative", "ideas", "to", "consider", "NUMBER", "Making", "it", "easier", "to", "toggle", "asm", "describe", "NUMBER", "Submenu", "under", "main", "view", "menu", "NUMBER", "no", "extra", "UI", "for", "display", "description", "no", "extra", "code", "for", "querying", "description", "string", "from", "r", "NUMBER", "still", "quite", "slow", "as", "it", "requires", "at", "least", "two", "clicks", "for", "enabling", "and", "two", "for", "disabling", "asm", "NUMBER", "describe", "Tooltip", "when", "hovering", "instruction", "no", "extra", "steps", "for", "triggering", "bad", "for", "long", "descriptions", "not", "sure", "if", "cutter", "has", "sufficient", "information", "about", "which", "tokens", "be", "opcodes", "Some", "kind", "F", "NUMBER", "based", "shortcut", "F", "NUMBER", "subset", "of", "modifier", "keys", "NUMBER", "For", "discoverability", "purpose", "probably", "should", "be", "also", "put", "under", "the", "help", "menu", "NUMBER", "easy", "to", "trigger", "Managing", "the", "state", "of", "action", "under", "global", "menu", "might", "be", "a", "bit", "messy", "NUMBER", "Yeah", "i", "also", "think", "add", "to", "context", "menu", "be", "a", "bad", "idea", "because", "it", "s", "already", "very", "crowded", "there", "NUMBER", "One", "more", "idea", "for", "showing", "it", "Instruction", "description", "widget", "Widget", "which", "show", "description", "for", "instruction", "at", "current", "seek", "offset", "After", "open", "the", "widget", "easy", "to", "see", "description", "for", "multiple", "instructions", "by", "clicking", "on", "them", "can", "support", "longer", "description", "or", "formatted", "text", "I", "believe", "that", "we", "already", "have", "one", "but", "I", "can", "t", "find", "it", "I", "have", "an", "similar", "issue", "so", "let", "me", "know", "if", "I", "should", "make", "a", "separate", "issue", "NUMBER", "I", "m", "work", "on", "a", "project", "in", "PowerPC", "and", "use", "the", "asm", "NUMBER", "psuedo", "option", "but", "the", "opcodes", "lbz", "lbzu", "stw", "and", "stwu", "have", "the", "same", "descriptions", "but", "the", "u", "verison", "modifies", "a", "register", "NUMBER", "Could", "there", "be", "the", "ability", "to", "see", "the", "actual", "opcode", "when", "I", "hover", "on", "the", "psuedo", "code", "version", "Or", "add", "the", "ability", "to", "set", "different", "options", "for", "an", "extra", "disassembly", "window", "That", "s", "unrelated", "to", "this", "issue", "please", "open", "a", "new", "one", "NUMBER", "I", "believe", "that", "we", "already", "have", "one", "but", "I", "can", "t", "find", "it", "Someone", "write", "a", "plugin", "for", "it", "LINK", "refrence", "So", "should", "we", "close", "this", "IMHO", "this", "should", "be", "implement", "on", "r", "NUMBER", "side", "and", "expose", "in", "cutter", "like", "suggested", "NUMBER", "The", "asm", "NUMBER", "describe", "databases", "be", "very", "easy", "for", "new", "comers", "to", "contribute", "to", "and", "that", "s", "why", "there", "be", "so", "many", "architecture", "support", "NUMBER", "change", "in", "the", "databases", "to", "have", "more", "granularity", "change", "in", "the", "display", "of", "e", "asm", "NUMBER", "describe", "and", "d", "IMHO", "current", "solution", "be", "enough", "the", "change", "should", "be", "do", "in", "radare", "NUMBER", "side", "to", "integrate", "more", "details", "in", "d", "in", "future", "but", "for", "now", "having", "this", "cutteref", "offers", "enough", "for", "a", "temporary", "fix", "as", "a", "plugin", "NUMBER", "Random", "note", "I", "find", "while", "build", "cutter", "on", "mac", "brew", "qt", "NUMBER", "qmake", "package", "doesnt", "seems", "to", "work", "the", "build", "NUMBER", "sh", "aims", "to", "install", "a", "new", "system", "wide", "r", "NUMBER", "wtf", "build", "NUMBER", "sh", "seems", "to", "fail", "even", "by", "skipping", "this", "step", "Working", "instructions", "Install", "r", "NUMBER", "from", "git", "Download", "the", "qt", "installer", "LINK", "qt", "installer", "export", "PATH", "Qt", "clang_", "NUMBER", "bin", "PATH", "cd", "git", "cutter", "mkdir", "build", "cd", "build", "qmake", "NUMBER", "src", "Cutter", "NUMBER", "pro", "make", "j", "NUMBER", "open", "NUMBER", "Cutter", "NUMBER", "app", "See", "LINK", "compile", "on", "linux", "maco", "I", "agree", "with", "the", "fact", "that", "build", "NUMBER", "sh", "should", "not", "install", "a", "system", "wide", "radare", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Currently", "hexdump", "widget", "shows", "memory", "mostly", "aligned", "to", "column", "count", "NUMBER", "But", "it", "be", "possible", "to", "achieve", "unaligned", "view", "by", "sequence", "of", "column", "count", "and", "word", "size", "change", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "Improve", "enforcement", "of", "view", "alignment", "Consider", "add", "option", "for", "choosing", "unaligned", "view", "memory", "be", "currently", "read", "in", "blocks", "current", "code", "will", "not", "work", "when", "word", "spans", "across", "multiple", "blocks", "I", "would", "like", "to", "work", "on", "this", "NUMBER", "Can", "you", "please", "elaborate", "the", "problem", "use", "the", "following", "screenshots", "NUMBER", "What", "be", "the", "change", "that", "your", "be", "proposing", "How", "should", "it", "look", "if", "we", "use", "the", "new", "option", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "aa", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "NUMBER", "png", "Screenshot", "from", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "bf", "NUMBER", "dd", "NUMBER", "bc", "NUMBER", "png", "TAG", "Detailed", "description", "TAG", "Test", "plan", "required", "TAG", "TAG", "Closing", "issue", "TAG", "Briefly", "NUMBER", "Qt", "uses", "object", "names", "to", "save", "state", "of", "mainwindow", "NUMBER", "Now", "we", "use", "names", "like", "Disassembly", "Graph", "etc", "NUMBER", "If", "there", "be", "few", "objects", "with", "such", "names", "Qt", "can", "not", "distinguish", "ones", "NUMBER", "So", "some", "sort", "of", "ID", "be", "obviously", "needed", "NUMBER", "I", "chose", "to", "use", "ClassName", "ID", "pattern", "because", "of", "more", "convenient", "restoring", "simply", "use", "first", "word", "from", "obj", "name", "to", "find", "constructor", "NUMBER", "Describe", "the", "bug", "DisassemblyGraph", "gets", "update", "on", "seek", "even", "when", "in", "background", "NUMBER", "To", "Reproduce", "NUMBER", "Open", "executable", "NUMBER", "Open", "graph", "view", "NUMBER", "Switch", "to", "disassembly", "or", "hexdump", "view", "NUMBER", "Change", "seek", "use", "navbar", "NUMBER", "Observe", "that", "function", "name", "in", "graph", "tab", "header", "change", "most", "likely", "the", "graph", "gets", "recalculated", "as", "well", "Expected", "behavior", "Graph", "gets", "update", "only", "when", "visible", "the", "same", "way", "as", "other", "memory", "widgets", "NUMBER", "Additional", "context", "Need", "to", "decide", "what", "to", "do", "when", "graph", "isn", "t", "visible", "but", "overview", "be", "NUMBER", "In", "general", "I", "suggest", "that", "all", "widgets", "won", "t", "get", "update", "while", "not", "in", "focus", "NUMBER", "In", "gein", "the", "past", "we", "were", "talking", "about", "make", "some", "kind", "of", "priority", "queue", "for", "update", "the", "widgets", "when", "needed", "in", "order", "to", "make", "things", "faster", "NUMBER", "thestr", "NUMBER", "ng", "NUMBER", "r", "maybe", "you", "remember", "Not", "a", "queue", "this", "be", "what", "RefreshDeferrer", "be", "for", "NUMBER", "It", "might", "have", "gotten", "lost", "for", "the", "graph", "during", "all", "the", "Overview", "change", "NUMBER", "Yes", "graph", "view", "isn", "t", "use", "RefreshDeferrer", "NUMBER", "Need", "to", "decide", "how", "to", "deal", "with", "graph", "overview", "NUMBER", "It", "can", "be", "seen", "while", "the", "graph", "isn", "t", "NUMBER", "Is", "it", "worth", "update", "while", "graph", "isn", "t", "visible", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "Describe", "the", "solution", "you", "d", "like", "To", "improve", "readability", "in", "the", "sidebar", "NUMBER", "TAG", "Add", "Code", "highlight", "for", "the", "selected", "parsing", "langauge", "python", "c", "JS", "etc", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "To", "ease", "the", "edition", "of", "file", "use", "hex", "panel", "Describe", "the", "solution", "you", "d", "like", "TAG", "Cut", "Only", "on", "write", "cache", "mode", "copy", "the", "selected", "ASCII", "Bytes", "to", "clipboard", "and", "remove", "them", "I", "plan", "to", "add", "this", "possibly", "as", "a", "part", "of", "my", "gsoc", "proposal", "for", "Diffing", "mode", "project", "as", "I", "see", "this", "as", "something", "that", "could", "improve", "the", "hexdump", "diffing", "features", "NUMBER", "Can", "you", "please", "point", "me", "to", "some", "other", "issue", "which", "be", "relate", "to", "this", "What", "be", "the", "issue", "features", "which", "should", "be", "completed", "before", "work", "on", "this", "This", "one", "can", "be", "start", "without", "pre", "requisites", "Thanks", "NUMBER", "I", "guess", "issue", "NUMBER", "be", "also", "similar", "NUMBER", "So", "I", "will", "be", "add", "both", "most", "probably", "to", "my", "proposal", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "All", "three", "columns", "of", "hexdump", "widget", "should", "be", "visible", "on", "screen", "Offsets", "bytes", "and", "ASCII", "NUMBER", "Shrinking", "won", "t", "be", "possible", "if", "it", "will", "hide", "some", "of", "these", "columns", "NUMBER", "Horizontal", "scrollbar", "mustn", "t", "appear", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "TAG", "Disable", "horizontal", "scrollbar", "in", "Hex", "Panel", "I", "see", "two", "ways", "how", "it", "can", "be", "solve", "implement", "both", "would", "be", "good", "NUMBER", "Properly", "interact", "with", "Qt", "sizing", "system", "sizing", "policy", "minimum", "size", "preferred", "size", "Dynamic", "resizing", "mode", "select", "most", "suitable", "size", "based", "on", "available", "space", "NUMBER", "Would", "be", "add", "as", "one", "more", "choice", "in", "list", "of", "available", "widths", "NUMBER", "ITAYC", "NUMBER", "HEN", "Both", "sounds", "great", "Implemented", "dynamic", "column", "selection", "in", "NUMBER", "while", "fix", "other", "problem", "with", "column", "calculations", "NUMBER", "That", "leaves", "implement", "correct", "interaction", "qt", "layout", "system", "and", "size", "report", "NUMBER", "Only", "half", "of", "the", "propose", "solution", "dynamic", "column", "count", "selection", "NUMBER", "With", "it", "you", "won", "t", "see", "horizontal", "scrollbar", "unless", "there", "isn", "t", "space", "for", "single", "column", "or", "mode", "gets", "change", "to", "fix", "column", "count", "NUMBER", "Size", "hinting", "still", "needs", "to", "be", "implement", "NUMBER", "I", "don", "t", "think", "that", "disabling", "horizontal", "scrollbar", "directly", "would", "be", "useful", "as", "that", "would", "only", "hide", "the", "content", "but", "desired", "result", "be", "preventing", "state", "where", "scrollbar", "be", "necessary", "NUMBER", "It", "would", "be", "good", "to", "update", "issue", "description", "and", "title", "in", "case", "someone", "decides", "to", "do", "this", "without", "reading", "rest", "of", "discussion", "NUMBER", "mj", "and", "mlj", "be", "now", "implement", "in", "r", "NUMBER", "so", "it", "should", "be", "enough", "to", "have", "it", "in", "cutter", "too", "This", "fix", "an", "issue", "relate", "to", "NUMBER", "where", "the", "image", "build", "was", "not", "passing", "NUMBER", "The", "image", "now", "build", "and", "runs", "for", "me", "locally", "when", "build", "without", "cache", "NUMBER", "Please", "note", "that", "someone", "should", "still", "re", "setup", "the", "build", "pipeline", "on", "Docker", "Hub", "LINK", "since", "there", "s", "currently", "no", "image", "auto", "build", "configured", "for", "the", "cutter", "repository", "No", "autobuilds", "available", "This", "repository", "doesn", "t", "have", "any", "autobuilds", "Cheers", "Alright", "I", "m", "merge", "this", "I", "will", "look", "into", "setting", "up", "the", "autobuild", "on", "Docker", "hub", "Thanks", "Alright", "let", "me", "know", "if", "I", "can", "help", "heyo", "xarkes", "was", "there", "any", "work", "regard", "the", "auto", "build", "Docker", "hub", "still", "shows", "No", "autobuilds", "available", "let", "me", "know", "if", "I", "can", "help", "ps", "NUMBER", "can", "you", "do", "this", "It", "would", "be", "great", "sure", "i", "ll", "do", "some", "test", "and", "then", "i", "ll", "get", "back", "to", "you", "Hey", "xarkes", "There", "s", "no", "image", "in", "the", "build", "tab", "yet", "NUMBER", "I", "ve", "be", "able", "to", "build", "the", "image", "locally", "make", "build", "nc", "and", "run", "a", "container", "from", "it", "without", "any", "problem", "NUMBER", "It", "seems", "that", "the", "builder", "uses", "an", "outdate", "version", "of", "cutter", "since", "the", "bug", "listed", "above", "has", "be", "fix", "quite", "a", "while", "ago", "Ah", "okay", "I", "didn", "t", "know", "the", "build", "was", "still", "fail", "D", "It", "can", "t", "build", "AboutDialog", "NUMBER", "cpp", "NUMBER", "src", "dialogs", "AboutDialog", "NUMBER", "cpp", "In", "constructor", "AboutDialog", "AboutDialog", "QWidget", "NUMBER", "src", "dialogs", "AboutDialog", "NUMBER", "cpp", "NUMBER", "NUMBER", "error", "expected", "before", "CUTTER_VERSION_FULL", "tr", "Version", "CUTTER_VERSION_FULL", "TAG", "NUMBER", "src", "dialogs", "AboutDialog", "NUMBER", "cpp", "NUMBER", "NUMBER", "note", "to", "match", "this", "QString", "aboutString", "TAG", "Cutter", "TAG", "make", "Makefile", "NUMBER", "AboutDialog", "NUMBER", "o", "Error", "NUMBER", "When", "looking", "into", "AboutDialog", "NUMBER", "cpp", "you", "can", "find", "NUMBER", "QString", "aboutString", "TAG", "Cutter", "TAG", "tr", "Version", "CUTTER_VERSION_FULL", "TAG", "tr", "Using", "r", "NUMBER", "R", "NUMBER", "_GITTAP", "TAG", "TAG", "tr", "Optional", "Features", "TAG", "TAG", "NUMBER", "Isn", "t", "this", "supposed", "to", "be", "CUTTER_VERSION_FULL", "TAG", "NUMBER", "line", "including", "the", "for", "concatenation", "The", "strange", "this", "be", "when", "i", "build", "the", "image", "locally", "compile", "AboutDialog", "NUMBER", "cpp", "succeeds", "g", "c", "pipe", "O", "NUMBER", "std", "gnu", "NUMBER", "Wall", "W", "D_REENTRANT", "fPIC", "D_CRT_NONSTDC_NO_DEPRECATE", "D_CRT_SECURE_NO_WARNINGS", "DQT_NO_DEBUG", "DQT_SVG_LIB", "DQT_WIDGETS_LIB", "DQT_GUI_LIB", "DQT_NETWORK_LIB", "DQT_CORE_LIB", "I", "NUMBER", "src", "I", "NUMBER", "I", "NUMBER", "src", "I", "NUMBER", "src", "core", "I", "NUMBER", "src", "widgets", "I", "NUMBER", "src", "dialogs", "I", "NUMBER", "src", "common", "I", "NUMBER", "src", "plugins", "isystem", "usr", "include", "libr", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtSvg", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtWidgets", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtGui", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtNetwork", "isystem", "usr", "include", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "QtCore", "I", "NUMBER", "isystem", "usr", "include", "libdrm", "I", "NUMBER", "I", "usr", "lib", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "qt", "NUMBER", "mkspecs", "linux", "g", "o", "AboutDialog", "NUMBER", "o", "NUMBER", "src", "dialogs", "AboutDialog", "NUMBER", "cpp", "Any", "idea", "o", "NUMBER", "O", "I", "have", "an", "alpine", "image", "ready", "that", "I", "will", "push", "soon", "so", "maybe", "we", "can", "ignore", "this", "error", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "To", "make", "it", "easier", "to", "locate", "function", "symbol", "names", "Describe", "the", "solution", "you", "d", "like", "TAG", "Describe", "alternatives", "you", "ve", "considered", "TAG", "Additional", "context", "TAG", "Usual", "function", "in", "IDA", "one", "color", "\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "png", "Import", "thunk", "function", "in", "IDA", "\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "cd", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "da", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "png", "Imported", "symbol", "in", "IDA", "\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cb", "NUMBER", "aa", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "e", "NUMBER", "adb", "NUMBER", "eef", "NUMBER", "c", "NUMBER", "png", "\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "aa", "NUMBER", "b", "NUMBER", "NUMBER", "cd", "NUMBER", "e", "NUMBER", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "e", "NUMBER", "png", "Usual", "function", "in", "Binja", "\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "NUMBER", "de", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "png", "Import", "thunk", "function", "in", "Binja", "\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bbcf", "NUMBER", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "NUMBER", "fa", "NUMBER", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "b", "NUMBER", "png", "Imported", "symbol", "in", "Binja", "\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fe", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "b", "f", "NUMBER", "ac", "NUMBER", "ec", "NUMBER", "png", "\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "bef", "NUMBER", "png", "Yep", "agreed", "isn", "t", "it", "an", "issue", "for", "r", "NUMBER", "because", "we", "simply", "take", "r", "NUMBER", "s", "output", "isn", "t", "it", "an", "issue", "for", "r", "NUMBER", "because", "we", "simply", "take", "r", "NUMBER", "s", "output", "That", "s", "why", "I", "add", "the", "radare", "NUMBER", "label", "NUMBER", "I", "think", "it", "d", "be", "better", "to", "open", "this", "issue", "in", "r", "NUMBER", "side", "otherwise", "it", "s", "less", "likely", "to", "get", "attention", "from", "r", "NUMBER", "devs", "On", "Mon", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Paul", "I", "NUMBER", "TAG", "write", "isn", "t", "it", "an", "issue", "for", "r", "NUMBER", "because", "we", "simply", "take", "r", "NUMBER", "s", "output", "That", "s", "why", "I", "add", "the", "radare", "NUMBER", "label", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "We", "can", "have", "both", "right", "now", "ec", "num", "red", "be", "whats", "use", "because", "colorization", "happens", "before", "the", "replacing", "afaik", "so", "change", "the", "address", "will", "result", "in", "the", "same", "color", "for", "the", "flag", "func", "NUMBER", "i", "will", "add", "another", "color", "NUMBER", "assign", "me", "this", "thing", "fix", "in", "r", "NUMBER", "side", "honors", "ec", "flag", "As", "for", "trufae", "this", "be", "now", "merge", "in", "r", "NUMBER", "pelijah", "Can", "you", "check", "if", "we", "can", "make", "it", "work", "in", "Cutter", "now", "Meh", "\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "dd", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "png", "radare", "NUMBER", "v", "radare", "NUMBER", "NUMBER", "git", "NUMBER", "windows", "x", "NUMBER", "NUMBER", "git", "NUMBER", "NUMBER", "g", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "da", "commit", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "daba", "NUMBER", "edcfde", "NUMBER", "d", "NUMBER", "a", "NUMBER", "a", "NUMBER", "eee", "NUMBER", "e", "NUMBER", "de", "build", "NUMBER", "__", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Should", "the", "theme", "you", "use", "ads", "this", "line", "in", "order", "to", "support", "the", "new", "color", "eval", "trufae", "how", "can", "we", "make", "your", "PR", "work", "here", "We", "nned", "instructions", "haha", "No", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "To", "ease", "navigation", "and", "provide", "user", "with", "all", "the", "information", "available", "in", "the", "hexdump", "Describe", "the", "solution", "you", "d", "like", "TAG", "Mark", "available", "flags", "and", "available", "comments", "in", "hexdump", "this", "should", "be", "optional", "NUMBER", "Hi", "I", "would", "like", "to", "take", "this", "up", "NUMBER", "Can", "you", "please", "elaborate", "a", "bit", "on", "what", "be", "expected", "in", "terms", "of", "the", "design", "How", "it", "should", "look", "like", "Thanks", "get", "it", "NUMBER", "I", "ll", "change", "the", "design", "implementation", "NUMBER", "A", "frontend", "for", "the", "command", "NUMBER", "What", "would", "you", "want", "to", "see", "there", "A", "list", "of", "aliases", "yes", "be", "able", "to", "click", "at", "them", "to", "execute", "or", "assign", "a", "keybinding", "to", "it", "many", "r", "NUMBER", "pm", "package", "use", "alias", "commands", "to", "expose", "their", "functionality", "why", "do", "GUI", "users", "care", "about", "CLI", "aliases", "I", "mean", "Cutter", "users", "probably", "won", "t", "use", "their", "keyboard", "except", "renaming", "searching", "commenting", "and", "jumping", "between", "widgets", "NUMBER", "Not", "for", "typing", "commands", "I", "would", "rather", "integrate", "the", "regular", "r", "NUMBER", "autocompletion", "in", "the", "console", "widget", "It", "s", "there", "already", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "Currently", "when", "Plugin", "author", "uses", "print", "hello", "world", "the", "output", "would", "be", "executed", "on", "the", "terminal", "which", "was", "executing", "Cutter", "on", "windows", "usually", "there", "won", "t", "be", "a", "terminal", "for", "this", "NUMBER", "This", "be", "unexpect", "behavior", "since", "we", "have", "a", "Console", "Widget", "Describe", "the", "solution", "you", "d", "like", "I", "want", "STDOUT", "to", "be", "redirected", "to", "the", "Console", "widget", "NUMBER", "In", "general", "but", "specifically", "here", "for", "Python", "Plugins", "NUMBER", "TAG", "Additional", "context", "TAG", "relate", "issue", "NUMBER", "Related", "LINK", "to", "not", "clutter", "the", "output", "as", "much", "We", "have", "CutterCore", "message", "LINK", "L", "NUMBER", "So", "you", "can", "just", "use", "cutter", "NUMBER", "message", "instead", "of", "print", "NUMBER", "But", "people", "use", "print", "which", "be", "okay", "should", "be", "redirected", "to", "Cutter", "NUMBER", "Message", "And", "there", "be", "more", "ways", "to", "generate", "output", "to", "STDOUT", "and", "STDERR", "in", "python", "and", "any", "other", "thingies", "not", "only", "prints", "NUMBER", "Even", "when", "python", "throw", "exception", "I", "d", "expect", "it", "to", "be", "on", "Console", "widget", "and", "not", "on", "the", "executing", "Terminal", "which", "not", "always", "exists", "Python", "and", "plugins", "be", "initialized", "before", "MainWindow", "NUMBER", "So", "we", "have", "to", "change", "the", "order", "NUMBER", "We", "can", "have", "some", "kind", "of", "buffer", "for", "output", "received", "before", "the", "MainWindow", "has", "be", "start", "NUMBER", "There", "might", "be", "something", "interesting", "in", "it", "even", "without", "Python", "Plugins", "NUMBER", "I", "agree", "that", "this", "should", "be", "the", "default", "NUMBER", "Existing", "interactive", "disassembler", "platforms", "already", "behave", "this", "way", "so", "now", "all", "of", "your", "users", "will", "expect", "Cutter", "to", "behave", "the", "same", "way", "whether", "you", "like", "it", "or", "not", "Might", "be", "best", "not", "to", "overthink", "this", "NUMBER", "IDA", "has", "a", "pretty", "straightforward", "implementation", "that", "you", "can", "draw", "from", "for", "Cutter", "NUMBER", "They", "hook", "the", "interpreter", "s", "stdout", "stderr", "stream", "with", "a", "simple", "proxy", "object", "LINK", "L", "NUMBER", "L", "NUMBER", "The", "proxy", "simply", "pass", "along", "any", "file", "descriptor", "writes", "to", "idaapi", "NUMBER", "msg", "eg", "cutter", "NUMBER", "message", "LINK", "L", "NUMBER", "L", "NUMBER", "gaasedelen", "sounds", "great", "Want", "to", "have", "a", "look", "and", "try", "solve", "it", "Actually", "maybe", "this", "can", "be", "fix", "globally", "somehow", "for", "the", "whole", "application", "LINK", "Yes", "this", "should", "not", "be", "do", "in", "python", "NUMBER", "There", "be", "ways", "to", "replace", "redirect", "the", "actual", "stderr", "stdout", "fds", "NUMBER", "Working", "on", "this", "issue", "in", "PR", "NUMBER", "If", "you", "have", "any", "additional", "suggestions", "or", "recommendations", "based", "on", "your", "experience", "please", "add", "them", "there", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "To", "enhance", "highlight", "in", "hexdump", "Describe", "the", "solution", "you", "d", "like", "TAG", "Sequence", "of", "bytes", "which", "construct", "address", "would", "be", "highlight", "in", "some", "way", "which", "will", "indicate", "that", "they", "re", "clickable", "NUMBER", "I", "was", "trying", "to", "figure", "out", "what", "exactly", "this", "issue", "aims", "to", "solve", "NUMBER", "There", "be", "already", "some", "form", "of", "highlight", "in", "Disassembly", "NUMBER", "For", "example", "the", "corresponding", "function", "instruction", "be", "highlight", "when", "the", "byte", "be", "clicked", "in", "hexdump", "and", "viceversa", "NUMBER", "Can", "you", "please", "this", "describe", "this", "in", "more", "detail", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "For", "now", "both", "radare", "NUMBER", "and", "cutter", "show", "every", "line", "with", "an", "absolute", "address", "NUMBER", "Sometimes", "it", "be", "unnecessary", "but", "at", "the", "same", "time", "it", "would", "be", "nice", "to", "see", "the", "address", "of", "the", "function", "NUMBER", "TAG", "Describe", "the", "solution", "you", "d", "like", "I", "be", "often", "use", "Vim", "NeoVim", "with", "a", "switch", "between", "absolute", "line", "numbering", "and", "relative", "one", "NUMBER", "And", "recently", "saw", "similar", "concept", "in", "Verso", "LINK", "Electron", "GUI", "for", "Panopticon", "NUMBER", "Describe", "alternatives", "you", "ve", "considered", "It", "might", "be", "useful", "also", "to", "disable", "address", "at", "all", "keep", "only", "at", "the", "basic", "block", "beginning", "or", "function", "beginning", "NUMBER", "Additional", "context", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ff", "NUMBER", "ec", "NUMBER", "NUMBER", "ca", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "cd", "NUMBER", "png", "LINK", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "ca", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "cb", "NUMBER", "c", "NUMBER", "png", "Related", "issue", "in", "radare", "NUMBER", "LINK", "do", "r", "NUMBER", "provide", "it", "through", "some", "eval", "config", "As", "point", "out", "in", "the", "linked", "r", "NUMBER", "issue", "there", "be", "asm", "NUMBER", "reloff", "NUMBER", "Improving", "it", "s", "look", "on", "the", "r", "NUMBER", "side", "doesn", "t", "need", "to", "change", "the", "interface", "for", "enabling", "or", "use", "it", "NUMBER", "Partially", "fix", "in", "NUMBER", "and", "NUMBER", "Both", "implement", "asm", "NUMBER", "reloff", "but", "it", "s", "not", "exactly", "what", "was", "asked", "here", "which", "be", "to", "show", "the", "offsets", "relative", "to", "the", "current", "seek", "NUMBER", "I", "be", "not", "completely", "convinced", "that", "it", "be", "necessary", "for", "Cutter", "in", "CLI", "it", "makes", "navigation", "easier", "but", "I", "will", "leave", "it", "open", "for", "now", "NUMBER", "Environment", "information", "Operating", "System", "Windows", "NUMBER", "Cutter", "version", "Version", "NUMBER", "Using", "r", "NUMBER", "NUMBER", "File", "format", "PE", "Describe", "the", "bug", "Xrefs", "dialog", "shows", "broken", "arrows", "probably", "bug", "in", "pd", "command", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "bc", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "f", "NUMBER", "png", "Probably", "we", "have", "to", "force", "e", "asm", "NUMBER", "lines", "false", "while", "get", "disasm", "preview", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "open", "any", "binary", "NUMBER", "find", "any", "symbol", "which", "NUMBER", "has", "references", "and", "select", "it", "by", "mouse", "in", "disasm", "widget", "NUMBER", "press", "X", "key", "NUMBER", "go", "through", "refs", "list", "and", "find", "any", "which", "has", "an", "arrows", "intersecting", "the", "reference", "instruction", "should", "be", "in", "the", "middle", "arrows", "will", "stop", "display", "below", "it", "Expected", "behavior", "There", "be", "two", "options", "Arrows", "have", "to", "be", "shown", "properly", "requires", "r", "NUMBER", "fix", "disable", "arrows", "as", "suggested", "above", "I", "vote", "yes", "for", "disabling", "temporarily", "e", "asm", "NUMBER", "lines", "false", "NUMBER", "This", "will", "also", "remove", "the", "whole", "empty", "spaces", "from", "the", "left", "NUMBER", "I", "would", "also", "suggest", "disabling", "asm", "NUMBER", "bytes", "for", "the", "preview", "NUMBER", "These", "two", "together", "will", "allow", "us", "to", "narrow", "the", "Preview", "pane", "and", "expand", "the", "left", "pane", "so", "users", "can", "see", "the", "full", "instruction", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "TAG", "String", "in", "comments", "be", "difficult", "to", "perceive", "when", "doing", "analysis", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "TAG", "Ability", "to", "use", "a", "different", "and", "configurable", "color", "for", "strings", "in", "comments", "For", "tracing", "works", "in", "esil", "and", "debugger", "cutter", "needs", "dt", "be", "the", "command", "that", "handles", "all", "the", "traces", "add", "a", "widget", "to", "inspect", "the", "linear", "disasm", "dtd", "delete", "all", "the", "traces", "dt", "traces", "can", "be", "recorded", "in", "different", "tags", "see", "dtt", "command", "create", "graph", "with", "dtg", "enable", "disable", "tracing", "be", "do", "via", "the", "dbg", "NUMBER", "trace", "variable", "the", "graph", "NUMBER", "trace", "variable", "should", "be", "honored", "in", "the", "graph", "to", "get", "folded", "the", "nodes", "that", "hasnt", "be", "executed", "Add", "the", "ability", "to", "change", "the", "tracing", "information", "on", "any", "address", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Disassembly", "and", "Graph", "widget", "can", "be", "slow", "NUMBER", "TAG", "Describe", "the", "solution", "you", "d", "like", "Implement", "cache", "usage", "CC", "xarkes", "optizone", "ITAYC", "NUMBER", "HEN", "xarkes", "I", "would", "like", "to", "work", "on", "this", "issue", "NUMBER", "Can", "you", "hint", "me", "on", "how", "I", "should", "proceed", "From", "the", "examples", "I", "have", "tried", "in", "my", "PC", "I", "couldn", "t", "manage", "to", "see", "any", "instance", "where", "the", "graph", "disassembly", "widget", "be", "noticeably", "slow", "NUMBER", "Can", "you", "link", "me", "to", "some", "example", "binary", "file", "code", "which", "I", "can", "use", "to", "figure", "out", "how", "it", "gets", "slower", "Also", "can", "you", "link", "me", "to", "that", "case", "where", "it", "would", "be", "more", "appropriate", "to", "fix", "the", "disassembly", "printer", "if", "it", "be", "an", "exist", "issue", "root", "NUMBER", "ubuntu", "docker", "image", "list", "REPOSITORY", "TAG", "IMAGE", "ID", "CREATED", "SIZE", "radareorg", "cutter", "latest", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "NUMBER", "weeks", "ago", "NUMBER", "GB", "root", "NUMBER", "ubuntu", "docker", "run", "it", "radareorg", "cutter", "Cutter", "Starting", "with", "UID", "GID", "usermod", "invalid", "user", "ID", "r", "NUMBER", "Usage", "usermod", "options", "LOGIN", "Options", "c", "comment", "COMMENT", "new", "value", "of", "the", "GECOS", "field", "d", "home", "HOME_DIR", "new", "home", "directory", "for", "the", "user", "account", "e", "expiredate", "EXPIRE_DATE", "set", "account", "expiration", "date", "to", "EXPIRE_DATE", "f", "inactive", "INACTIVE", "set", "password", "inactive", "after", "expiration", "to", "INACTIVE", "g", "gid", "GROUP", "force", "use", "GROUP", "as", "new", "primary", "group", "G", "group", "GROUPS", "new", "list", "of", "supplementary", "GROUPS", "a", "append", "append", "the", "user", "to", "the", "supplemental", "GROUPS", "mention", "by", "the", "G", "option", "without", "remove", "him", "her", "from", "other", "group", "h", "help", "display", "this", "help", "message", "and", "exit", "l", "login", "NEW_LOGIN", "new", "value", "of", "the", "login", "name", "L", "lock", "lock", "the", "user", "account", "m", "move", "home", "move", "contents", "of", "the", "home", "directory", "to", "the", "new", "location", "use", "only", "with", "d", "o", "non", "unique", "allow", "use", "duplicate", "non", "unique", "UID", "p", "password", "PASSWORD", "use", "encrypted", "password", "for", "the", "new", "password", "R", "root", "CHROOT_DIR", "directory", "to", "chroot", "into", "s", "shell", "SHELL", "new", "login", "shell", "for", "the", "user", "account", "u", "uid", "UID", "new", "UID", "for", "the", "user", "account", "U", "unlock", "unlock", "the", "user", "account", "v", "add", "subuids", "FIRST", "LAST", "add", "range", "of", "subordinate", "uids", "V", "del", "subuids", "FIRST", "LAST", "remove", "range", "of", "subordinate", "uids", "w", "add", "subgids", "FIRST", "LAST", "add", "range", "of", "subordinate", "gids", "W", "del", "subgids", "FIRST", "LAST", "remove", "range", "of", "subordinate", "gids", "Z", "selinux", "user", "SEUSER", "new", "SELinux", "user", "mapping", "for", "the", "user", "account", "error", "exec", "opt", "cutter", "build", "Cutter", "stat", "opt", "cutter", "build", "Cutter", "no", "such", "file", "or", "directory", "Yo", "yo", "ps", "NUMBER", "our", "Docker", "guy", "can", "you", "have", "a", "look", "here", "P", "I", "know", "nothing", "about", "container", "Thanks", "I", "m", "looking", "into", "it", "tfrnghub", "if", "you", "want", "you", "can", "try", "it", "now", "by", "build", "the", "image", "locally", "use", "make", "build", "nc", "after", "pulling", "my", "fork", "and", "cd", "ing", "to", "the", "docker", "folder", "NUMBER", "Cheers", "NUMBER", "FYI", "I", "tried", "to", "pull", "run", "from", "dockerhub", "today", "and", "the", "old", "or", "broken", "build", "still", "appears", "to", "be", "up", "NUMBER", "doom", "ubuntu", "sudo", "docker", "images", "REPOSITORY", "TAG", "IMAGE", "ID", "CREATED", "SIZE", "radareorg", "cutter", "latest", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "NUMBER", "months", "ago", "NUMBER", "GB", "doom", "ubuntu", "sudo", "docker", "run", "radareorg", "cutter", "Cutter", "Starting", "with", "UID", "GID", "usermod", "invalid", "user", "ID", "r", "NUMBER", "Usage", "usermod", "options", "LOGIN", "Options", "c", "comment", "COMMENT", "new", "value", "of", "the", "GECOS", "field", "d", "home", "HOME_DIR", "new", "home", "directory", "for", "the", "user", "account", "e", "expiredate", "EXPIRE_DATE", "set", "account", "expiration", "date", "to", "EXPIRE_DATE", "f", "inactive", "INACTIVE", "set", "password", "inactive", "after", "expiration", "to", "INACTIVE", "g", "gid", "GROUP", "force", "use", "GROUP", "as", "new", "primary", "group", "G", "group", "GROUPS", "new", "list", "of", "supplementary", "GROUPS", "a", "append", "append", "the", "user", "to", "the", "supplemental", "GROUPS", "mention", "by", "the", "G", "option", "without", "remove", "him", "her", "from", "other", "group", "h", "help", "display", "this", "help", "message", "and", "exit", "l", "login", "NEW_LOGIN", "new", "value", "of", "the", "login", "name", "L", "lock", "lock", "the", "user", "account", "m", "move", "home", "move", "contents", "of", "the", "home", "directory", "to", "the", "new", "location", "use", "only", "with", "d", "o", "non", "unique", "allow", "use", "duplicate", "non", "unique", "UID", "p", "password", "PASSWORD", "use", "encrypted", "password", "for", "the", "new", "password", "R", "root", "CHROOT_DIR", "directory", "to", "chroot", "into", "s", "shell", "SHELL", "new", "login", "shell", "for", "the", "user", "account", "u", "uid", "UID", "new", "UID", "for", "the", "user", "account", "U", "unlock", "unlock", "the", "user", "account", "v", "add", "subuids", "FIRST", "LAST", "add", "range", "of", "subordinate", "uids", "V", "del", "subuids", "FIRST", "LAST", "remove", "range", "of", "subordinate", "uids", "w", "add", "subgids", "FIRST", "LAST", "add", "range", "of", "subordinate", "gids", "W", "del", "subgids", "FIRST", "LAST", "remove", "range", "of", "subordinate", "gids", "Z", "selinux", "user", "SEUSER", "new", "SELinux", "user", "mapping", "for", "the", "user", "account", "error", "exec", "opt", "cutter", "build", "Cutter", "stat", "opt", "cutter", "build", "Cutter", "no", "such", "file", "or", "directory", "This", "be", "on", "a", "fresh", "ubuntu", "NUMBER", "desktop", "VM", "NUMBER", "docker", "hub", "says", "This", "repository", "doesn", "t", "have", "any", "autobuilds", "o", "NUMBER", "O", "Can", "someone", "with", "access", "to", "the", "build", "chain", "look", "into", "this", "Oh", "indeed", "here", "you", "can", "see", "the", "last", "log", "LINK", "Heyo", "yes", "this", "be", "solve", "since", "we", "have", "a", "new", "docker", "image", "NUMBER", "Greetings", "Original", "Message", "From", "Itay", "Cohen", "TAG", "To", "radareorg", "cutter", "TAG", "Cc", "ps", "TAG", "Mention", "TAG", "Sent", "Wed", "NUMBER", "Sep", "NUMBER", "NUMBER", "NUMBER", "Subject", "Re", "radareorg", "cutter", "can", "not", "run", "the", "docker", "correctly", "NUMBER", "ps", "NUMBER", "what", "be", "your", "insights", "on", "this", "one", "you", "think", "it", "be", "solve", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Add", "flag", "in", "Hexdump", "context", "menu", "As", "suggested", "by", "Maijin", "in", "NUMBER", "this", "should", "probably", "reuse", "the", "same", "menu", "as", "use", "by", "disassembly", "and", "graph", "widgets", "NUMBER", "Related", "NUMBER", "and", "NUMBER", "Support", "hex", "NUMBER", "compact", "eval", "variable", "in", "Hexdump", "Widget", "Right", "now", "cutter", "only", "sets", "the", "first", "imm", "base", "of", "the", "instruction", "but", "latest", "r", "NUMBER", "current", "git", "support", "ahi", "NUMBER", "ahi", "NUMBER", "ahi", "NUMBER", "NUMBER", "cutter", "must", "support", "this", "too", "NUMBER", "TAG", "def", "mycpu", "a", "def", "assemble", "s", "return", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "def", "disassemble", "buf", "try", "opcode", "get_opcode", "buf", "opstr", "optbl", "opcode", "NUMBER", "return", "NUMBER", "opstr", "except", "return", "NUMBER", "unknown", "print", "Registering", "MYCPU", "disasm", "plugin", "NUMBER", "print", "r", "NUMBER", "lang", "NUMBER", "plugin", "asm", "mycpu", "The", "example", "be", "for", "r", "NUMBER", "lang", "indeed", "it", "would", "be", "very", "useful", "but", "I", "think", "we", "need", "to", "integrate", "r", "NUMBER", "lang", "first", "Now", "we", "could", "provide", "template", "for", "make", "plugins", "directly", "from", "Cutter", "but", "I", "m", "not", "sure", "if", "that", "s", "very", "relevant", "NUMBER", "Maybe", "once", "we", "have", "a", "proper", "python", "console", "Trace", "calls", "syscalls", "in", "emulation", "debug", "mode", "use", "dcs", "etc", "NUMBER", "I", "don", "t", "think", "that", "the", "Debug", "project", "contains", "only", "things", "that", "required", "for", "debugger", "to", "work", "same", "as", "issue", "in", "X", "refs", "project", "don", "t", "imply", "that", "x", "ref", "widget", "doesn", "t", "work", "Probably", "makes", "sense", "to", "make", "a", "separate", "project", "call", "Debugger", "Improvemeints", "and", "move", "them", "here", "NUMBER", "On", "Fri", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "Itay", "Cohen", "TAG", "write", "I", "don", "t", "think", "that", "the", "Debug", "project", "contains", "only", "things", "that", "required", "for", "debugger", "to", "work", "same", "as", "issue", "in", "X", "refs", "project", "don", "t", "imply", "that", "x", "ref", "widget", "doesn", "t", "work", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Add", "step", "back", "continue", "back", "in", "emulation", "mode", "NUMBER", "xarkes", "actually", "no", "it", "should", "work", "for", "debugging", "too", "it", "was", "the", "idea", "of", "the", "reversible", "debugger", "in", "radare", "NUMBER", "it", "shares", "the", "code", "between", "ESIL", "and", "native", "debug", "Add", "Permissions", "column", "rwx", "Add", "context", "menu", "to", "copy", "name", "or", "address", "end", "address", "into", "clipboard", "Add", "column", "showing", "md", "NUMBER", "sha", "NUMBER", "NUMBER", "configurable", "see", "LINK", "Ordinal", "Add", "hvaddr", "Greetings", "ITAYC", "NUMBER", "HEN", "I", "would", "like", "to", "work", "on", "this", "issue", "NUMBER", "Kindly", "guide", "me", "through", "the", "process", "of", "contribute", "to", "this", "issue", "NUMBER", "Thank", "you", "NUMBER", "Hi", "new", "developers", "be", "always", "welcome", "NUMBER", "I", "don", "t", "know", "your", "experience", "level", "so", "don", "t", "mind", "if", "some", "of", "the", "steps", "seem", "obvious", "NUMBER", "Start", "by", "reading", "this", "LINK", "See", "LINK", "for", "compilation", "instructions", "Get", "the", "build", "work", "Run", "cutter", "and", "get", "familiar", "with", "how", "the", "sections", "widget", "looks", "currently", "Find", "the", "the", "source", "file", "implement", "sections", "widget", "If", "necessary", "read", "LINK", "NUMBER", "model", "view", "programming", "NUMBER", "html", "for", "basic", "understanding", "of", "how", "Qt", "model", "system", "works", "NUMBER", "It", "will", "be", "necessary", "for", "add", "more", "columns", "NUMBER", "Come", "up", "with", "a", "plan", "for", "things", "that", "need", "to", "be", "do", "and", "discuss", "it", "here", "NUMBER", "Just", "because", "something", "was", "mention", "in", "issue", "description", "doesn", "t", "necessarily", "means", "that", "it", "be", "still", "relevant", "or", "good", "feature", "NUMBER", "When", "code", "change", "be", "do", "and", "you", "be", "ready", "for", "PR", "please", "follow", "the", "PR", "template", "NUMBER", "Test", "plan", "required", "really", "means", "that", "NUMBER", "If", "those", "be", "GUI", "change", "make", "a", "screenshot", "NUMBER", "Make", "a", "basic", "list", "of", "steps", "for", "checking", "that", "change", "be", "work", "as", "expected", "NUMBER", "This", "also", "a", "good", "point", "to", "consider", "any", "potential", "edge", "cases", "or", "different", "kind", "of", "interesting", "inputs", "if", "you", "didn", "t", "already", "do", "it", "while", "write", "code", "NUMBER", "Actually", "perform", "the", "steps", "you", "describe", "when", "make", "the", "PR", "even", "if", "they", "seem", "trivial", "and", "you", "did", "them", "during", "development", "it", "helps", "catching", "any", "makes", "do", "during", "final", "cleanup", "and", "make", "sure", "you", "didn", "t", "forget", "anything", "NUMBER", "Feel", "free", "to", "ask", "question", "in", "cutter", "telegram", "or", "IRC", "to", "get", "you", "start", "faster", "although", "some", "of", "the", "question", "specific", "to", "this", "issue", "might", "be", "better", "discussed", "here", "NUMBER", "Add", "the", "following", "entries", "x", "Seek", "in", "hexdump", "x", "Seek", "in", "disassembly", "x", "Show", "X", "Refs", "x", "Copy", "address", "in", "clipboard", "x", "Copy", "name", "to", "clipboard", "Toggle", "Highlight", "I", "don", "t", "see", "how", "seek", "in", "hexdump", "and", "disassembly", "would", "work", "with", "current", "UI", "NUMBER", "For", "synchronized", "memory", "widgets", "it", "be", "just", "seek", "in", "all", "widgets", "which", "should", "be", "already", "implement", "no", "need", "for", "seek", "in", "X", "NUMBER", "There", "be", "multiple", "copies", "of", "unsynchronized", "hexdump", "disasembly", "widgets", "NUMBER", "How", "to", "display", "it", "in", "usable", "way", "I", "think", "that", "what", "it", "means", "be", "to", "NUMBER", "Perform", "a", "seek", "to", "the", "address", "NUMBER", "Set", "focus", "to", "the", "opened", "hexdump", "disas", "widgets", "NUMBER", "If", "none", "exists", "open", "one", "and", "focus", "to", "it", "In", "IDA", "when", "you", "open", "an", "address", "in", "new", "hex", "disas", "graph", "widget", "the", "new", "widget", "it", "unsynced", "and", "I", "like", "it", "Jump", "in", "new", "Window", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "c", "NUMBER", "faf", "NUMBER", "c", "NUMBER", "png", "New", "window", "be", "not", "synced", "with", "current", "seek", "and", "not", "change", "the", "current", "seek", "for", "all", "widgets", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "eefa", "NUMBER", "b", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "afe", "NUMBER", "png", "Seek", "focus", "and", "new", "unsynced", "window", "both", "make", "sense", "NUMBER", "There", "be", "a", "few", "remaining", "tasks", "debug", "widgets", "documentation", "an", "test", "if", "it", "can", "be", "use", "from", "python", "NUMBER", "It", "makes", "a", "lot", "of", "people", "happy", "NUMBER", "Note", "for", "myself", "LINK", "NUMBER", "for", "a", "brighter", "qfuture", "ivan", "cukic", "qtcon", "NUMBER", "pdf", "I", "think", "we", "need", "a", "better", "plan", "here", "NUMBER", "Someone", "have", "examples", "or", "ideas", "how", "can", "we", "achieve", "this", "Users", "want", "speed", "NUMBER", "Multi", "threading", "usually", "hides", "underlying", "performance", "issue", "rather", "than", "solving", "them", "like", "we", "discussed", "on", "radare", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "To", "select", "a", "particular", "zone", "to", "analyze", "Describe", "the", "solution", "you", "d", "like", "Add", "anal", "NUMBER", "in", "selector", "in", "advance", "analysis", "similar", "to", "NUMBER", "NUMBER", "ping", "ITAYC", "NUMBER", "HEN", "I", "think", "that", "anal", "NUMBER", "in", "options", "can", "also", "be", "add", "to", "the", "Preference", "widget", "if", "users", "want", "to", "modify", "it", "after", "the", "initial", "analysis", "I", "wanted", "to", "do", "this", "now", "and", "had", "to", "use", "radare", "NUMBER", "commands", "I", "d", "like", "to", "work", "on", "this", "issue", "since", "it", "be", "relate", "to", "the", "analysis", "section", "in", "the", "preferences", "widget", "see", "PR", "NUMBER", "NUMBER", "I", "see", "that", "the", "search", "widget", "has", "a", "similar", "option", "for", "search", "NUMBER", "in", "but", "not", "all", "of", "the", "possible", "values", "be", "include", "in", "the", "selector", "NUMBER", "Is", "it", "for", "a", "particular", "reason", "In", "this", "case", "do", "you", "think", "the", "values", "for", "anal", "NUMBER", "in", "should", "be", "also", "limited", "Currently", "there", "be", "opened", "Coverity", "account", "for", "Cutter", "but", "we", "have", "to", "setup", "periodic", "build", "NUMBER", "ping", "XVilka", "I", "think", "you", "start", "on", "ci", "NUMBER", "rada", "NUMBER", "re", "but", "I", "don", "t", "know", "the", "status", "xarkes", "I", "uber", "busy", "these", "days", "will", "finish", "the", "setup", "it", "be", "mostly", "do", "as", "soon", "as", "I", "have", "some", "free", "time", "NUMBER", "XVilka", "any", "update", "about", "this", "Yes", "we", "be", "waiting", "for", "the", "new", "infrastructure", "NUMBER", "The", "Coverity", "itself", "was", "having", "problem", "until", "a", "week", "ago", "or", "so", "NUMBER", "Now", "you", "need", "to", "wait", "a", "bit", "since", "I", "move", "CI", "on", "a", "new", "physical", "server", "NUMBER", "On", "Sun", "Feb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "xarkes", "TAG", "Yes", "we", "be", "waiting", "for", "the", "new", "infrastructure", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "See", "LINK", "Scan", "Update", "This", "one", "be", "better", "now", "you", "can", "setup", "it", "with", "GitHub", "Actions", "LINK", "coverity", "scan", "blob", "master", "NUMBER", "github", "workflows", "coverity", "scan", "NUMBER", "yml", "Once", "we", "check", "that", "radare", "NUMBER", "GitHub", "Actions", "work", "we", "can", "copy", "them", "to", "the", "Cutter", "LINK", "scan", "NUMBER", "yml", "Solved", "in", "LINK", "workflow", "NUMBER", "Acoverity", "scan", "The", "idea", "be", "to", "have", "some", "presets", "layouts", "Default", "Debug", "NUMBER", "and", "have", "a", "menu", "that", "allows", "one", "to", "switch", "from", "one", "another", "NUMBER", "Also", "the", "menu", "should", "provide", "a", "way", "for", "the", "user", "to", "save", "a", "layout", "and", "reopen", "it", "later", "NUMBER", "optizone", "you", "may", "want", "to", "have", "a", "look", "on", "this", "Here", "be", "my", "proposal", "for", "this", "NUMBER", "Add", "serialize", "QJsonObject", "and", "deserialize", "QJsonObject", "methods", "to", "CutterDockWidget", "NUMBER", "Different", "widgets", "can", "then", "store", "their", "view", "relate", "field", "in", "there", "NUMBER", "For", "example", "word", "width", "and", "kind", "for", "hexwidget", "or", "layout", "algorithm", "for", "graph", "view", "NUMBER", "That", "would", "allow", "saving", "a", "layout", "containing", "multiple", "widgets", "in", "different", "configurations", "NUMBER", "Move", "unsync", "status", "saving", "to", "serialize", "QJsonObject", "for", "MemoryDockWidget", "NUMBER", "Define", "the", "layout", "as", "structure", "consisting", "of", "list", "of", "widgets", "geometry", "dictionary", "with", "serialize", "QJsonObject", "output", "for", "all", "widgets", "refactor", "mainWindow", "to", "load", "save", "layout", "to", "this", "structure", "instead", "of", "bunch", "qsettings", "field", "Sounds", "very", "good", "to", "me", "QSettings", "be", "actually", "more", "powerful", "than", "how", "we", "currently", "use", "it", "since", "it", "has", "builtin", "support", "for", "arrays", "and", "group", "but", "I", "find", "it", "kind", "of", "awkward", "and", "json", "can", "definitely", "be", "more", "flexible", "and", "clean", "here", "NUMBER", "Sounds", "about", "right", "NUMBER", "I", "d", "be", "happy", "for", "helper", "function", "for", "layout", "authors", "to", "basically", "read", "the", "author", "s", "mind", "and", "sitck", "the", "widgets", "as", "they", "plan", "NUMBER", "Not", "sure", "how", "much", "of", "them", "helper", "function", "Qt", "provides", "by", "default", "I", "don", "t", "find", "it", "very", "nice", "to", "design", "the", "looks", "how", "I", "want", "via", "code", "NUMBER", "Also", "we", "have", "some", "glitches", "in", "the", "layouts", "sometimes", "and", "maybe", "we", "should", "discuss", "them", "as", "part", "of", "the", "PR", "for", "example", "the", "surprising", "change", "of", "Cutter", "s", "window", "size", "on", "emulation", "debug", "the", "open", "of", "new", "widgets", "outside", "the", "main", "dock", "etc", "NUMBER", "implement", "most", "of", "the", "change", "NUMBER", "Second", "part", "should", "add", "layout", "management", "UI", "NUMBER", "simple", "dialog", "for", "renaming", "and", "deleting", "layouts", "in", "the", "layout", "save", "dialog", "use", "input", "combox", "instead", "of", "plain", "line", "input", "to", "allow", "more", "easily", "update", "exist", "layout", "NUMBER", "Find", "a", "way", "to", "sign", "our", "release", "binaries", "at", "least", "for", "windows", "and", "osx", "NUMBER", "That", "will", "be", "useful", "for", "the", "debugger", "for", "OS", "X", "NUMBER", "I", "guess", "you", "re", "meaning", "a", "code", "signing", "certificate", "rather", "than", "developer", "GPG", "signatures", "In", "this", "case", "yes", "but", "I", "think", "having", "developer", "GPG", "signature", "be", "also", "a", "good", "practice", "NUMBER", "There", "s", "a", "good", "how", "to", "guide", "for", "signing", "Windows", "binaries", "here", "but", "someone", "s", "gonna", "have", "to", "pony", "up", "for", "a", "certificate", "LINK", "to", "sign", "windows", "drivers", "installer", "overview", "Could", "we", "get", "GPG", "signatures", "distributed", "with", "the", "release", "first", "Authenticode", "signing", "feels", "a", "bit", "fluffy", "NUMBER", "wst", "ci", "That", "s", "unrelated", "NUMBER", "The", "goal", "of", "having", "a", "code", "signature", "be", "to", "allow", "the", "debugger", "on", "Mac", "OS", "to", "work", "NUMBER", "GPG", "signature", "will", "require", "radare", "NUMBER", "sdb", "and", "capstone", "between", "many", "dependancies", "to", "be", "sign", "too", "NUMBER", "GPG", "signature", "will", "require", "radare", "NUMBER", "sdb", "and", "capstone", "between", "many", "dependancies", "to", "be", "sign", "too", "Why", "will", "it", "require", "this", "Just", "get", "all", "the", "devs", "to", "create", "a", "detached", "signature", "for", "Cutter", "NUMBER", "zip", "Cutter", "NUMBER", "dmg", "and", "Cutter", "NUMBER", "AppImage", "He", "means", "this", "makes", "no", "sense", "to", "sign", "Cutter", "while", "it", "bundle", "not", "sign", "dependencies", "NUMBER", "He", "means", "this", "makes", "no", "sense", "to", "sign", "Cutter", "while", "it", "bundle", "not", "sign", "dependencies", "NUMBER", "That", "s", "what", "I", "meant", "yes", "NUMBER", "Ah", "right", "so", "you", "re", "saying", "that", "the", "Cutter", "build", "process", "pulls", "in", "various", "unsigned", "binaries", "so", "signing", "the", "final", "release", "doesn", "t", "provide", "full", "integrity", "verification", "Should", "we", "keep", "this", "open", "Yes", "because", "without", "sign", "binaries", "cutter", "won", "t", "be", "able", "to", "debug", "on", "OS", "X", "Should", "we", "keep", "this", "open", "ITAYC", "NUMBER", "HEN", "Yes", "please", "I", "d", "really", "like", "to", "see", "a", "way", "to", "verify", "the", "integrity", "of", "the", "Cutter", "downloads", "e", "NUMBER", "g", "NUMBER", "via", "detached", "GPG", "signatures", "NUMBER", "For", "sensitive", "work", "I", "be", "unable", "to", "use", "Cutter", "unless", "I", "have", "assurance", "of", "it", "s", "integrity", "NUMBER", "Hi", "xarkes", "thanks", "for", "your", "response", "NUMBER", "The", "fact", "that", "some", "of", "the", "include", "libraries", "aren", "t", "sign", "verify", "could", "pose", "an", "issue", "for", "sensitive", "work", "as", "I", "d", "essentially", "be", "run", "untrusted", "unverified", "code", "in", "an", "environment", "where", "integrity", "be", "absolutely", "imperative", "e", "NUMBER", "g", "NUMBER", "malware", "analysis", "work", "NUMBER", "Is", "it", "feasible", "for", "the", "include", "libraries", "to", "be", "integrity", "checked", "too", "when", "they", "re", "imported", "or", "do", "the", "Capstone", "and", "R", "NUMBER", "projects", "not", "make", "this", "easy", "Providing", "hashes", "in", "the", "release", "changelog", "would", "help", "a", "bit", "but", "as", "they", "re", "distributed", "use", "the", "same", "method", "as", "the", "binaries", "themselves", "GitHub", "release", "the", "assurance", "be", "severely", "degraded", "as", "an", "attacker", "who", "could", "modify", "the", "release", "binaries", "could", "also", "just", "edit", "the", "hashes", "NUMBER", "Instead", "would", "it", "be", "feasible", "for", "you", "add", "detached", "GPG", "signatures", "to", "the", "release", "page", "a", "bit", "like", "the", "KeePassXC", "LINK", "project", "do", "as", "an", "example", "NUMBER", "This", "lack", "of", "integrity", "assurance", "be", "currently", "a", "bit", "a", "barrier", "to", "me", "use", "Cutter", "in", "secure", "environments", "for", "sensitive", "work", "so", "I", "be", "hoping", "that", "we", "can", "find", "a", "solution", "NUMBER", "I", "understand", "that", "since", "Cutter", "be", "open", "source", "these", "sort", "of", "request", "would", "normally", "be", "opened", "up", "to", "contributors", "to", "implement", "however", "since", "this", "be", "relate", "to", "the", "actual", "packaging", "release", "process", "I", "don", "t", "think", "that", "anybody", "who", "isn", "t", "already", "fully", "on", "the", "Cutter", "team", "could", "really", "help", "that", "much", "NUMBER", "In", "regards", "to", "build", "Cutter", "myself", "that", "would", "perhaps", "help", "in", "some", "cases", "however", "it", "doesn", "t", "necessarily", "help", "in", "assuring", "that", "the", "source", "code", "that", "I", "be", "compile", "was", "actually", "write", "by", "the", "trusted", "Cutter", "developers", "unless", "I", "were", "to", "manually", "code", "review", "every", "line", "NUMBER", "Reproducible", "build", "LINK", "_builds", "could", "be", "a", "project", "to", "look", "at", "for", "the", "future", "Thanks", "for", "your", "help", "Jamie", "Is", "there", "any", "way", "to", "build", "cutter", "from", "sources", "and", "auto", "sign", "it", "I", "have", "be", "able", "to", "follow", "this", "procedure", "for", "radare", "NUMBER", "and", "debug", "with", "it", "under", "macOS", "NUMBER", "I", "would", "be", "happy", "to", "do", "the", "same", "with", "cutter", "LINK", "To", "answer", "your", "question", "no", "there", "be", "no", "support", "implement", "as", "of", "today", "Allow", "to", "increase", "decrease", "global", "font", "size", "not", "only", "disasm", "Qt", "doesn", "t", "recommand", "overwritting", "default", "font", "NUMBER", "The", "best", "be", "to", "use", "environment", "variables", "like", "QT_SCALE_FACTOR", "NUMBER", "Feel", "free", "to", "reopen", "NUMBER", "Reopening", "because", "I", "think", "it", "s", "still", "useful", "anyway", "NUMBER", "People", "don", "t", "have", "to", "do", "hack", "through", "the", "command", "lines", "NUMBER", "This", "would", "be", "good", "for", "my", "poor", "vision", "NUMBER", "NUMBER", "Are", "you", "saying", "that", "I", "can", "hack", "this", "manually", "by", "setting", "the", "QA_SCALE_FACTOR", "envvar", "in", "bash", "and", "then", "open", "Cutter", "Exactly", "or", "directly", "in", "command", "line", "QT_SCALE_FACTOR", "NUMBER", "NUMBER", "Cutter", "Ah", "interesting", "that", "might", "help", "me", "NUMBER", "Is", "there", "an", "equivalent", "for", "Windows", "NUMBER", "If", "not", "I", "guess", "you", "could", "just", "compile", "Cutter", "in", "Cygwin", "and", "launch", "it", "that", "way", "with", "the", "scaling", "NUMBER", "You", "can", "do", "the", "same", "in", "the", "cmd", "prompt", "set", "QT_SCALE_FACTOR", "NUMBER", "Cutter", "NUMBER", "exe", "Ah", "right", "that", "s", "actually", "really", "helped", "NUMBER", "I", "guess", "the", "default", "value", "be", "NUMBER", "It", "s", "just", "issue", "NUMBER", "cause", "issue", "now", "NUMBER", "Thank", "you", "NUMBER", "Work", "environment", "Questions", "Answers", "OS", "arch", "bits", "mandatory", "Windows", "NUMBER", "NUMBER", "bit", "File", "format", "of", "the", "file", "you", "reverse", "mandatory", "PE", "Architecture", "bits", "of", "the", "file", "mandatory", "x", "NUMBER", "_", "NUMBER", "Cutter", "and", "r", "NUMBER", "version", "See", "About", "Cutter", "mandatory", "Version", "NUMBER", "Using", "r", "NUMBER", "NUMBER", "Show", "version", "information", "full", "output", "See", "About", "Cutter", "in", "a", "pastebin", "document", "mandatory", "LINK", "cyc", "NUMBER", "b", "NUMBER", "dfc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ec", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ec", "NUMBER", "Expected", "behavior", "The", "Cutter", "interface", "should", "fit", "cleanly", "within", "the", "Window", "size", "and", "the", "cursor", "should", "be", "accurately", "lined", "up", "with", "the", "buttons", "NUMBER", "Actual", "behavior", "At", "the", "top", "there", "be", "a", "black", "gap", "of", "around", "NUMBER", "pixels", "see", "screenshots", "NUMBER", "Cutter", "also", "overhangs", "off", "the", "bottom", "of", "the", "screen", "NUMBER", "This", "misalignment", "also", "causes", "the", "cursor", "to", "be", "out", "of", "line", "NUMBER", "I", "have", "to", "click", "above", "a", "button", "in", "order", "to", "actually", "click", "it", "see", "screenshots", "NUMBER", "Steps", "to", "reproduce", "the", "behavior", "Run", "Cutter", "on", "Windows", "NUMBER", "with", "Display", "Scaling", "set", "to", "a", "high", "value", "NUMBER", "I", "personally", "use", "NUMBER", "scaling", "as", "I", "have", "poor", "vision", "NUMBER", "I", "expect", "that", "some", "applications", "will", "not", "work", "as", "intended", "with", "such", "large", "scaling", "but", "most", "stuff", "be", "usable", "NUMBER", "Additional", "Logs", "screenshots", "source", "code", "configuration", "dump", "NUMBER", "cutter", "misaligned", "NUMBER", "zip", "LINK", "misaligned", "NUMBER", "zip", "Is", "there", "a", "QT", "envvar", "that", "would", "allow", "me", "to", "set", "an", "over", "underscan", "for", "the", "application", "That", "would", "be", "a", "temporary", "measure", "at", "least", "NUMBER", "What", "do", "you", "think", "be", "this", "a", "dupe", "of", "NUMBER", "pelijah", "karliss", "thestr", "NUMBER", "ng", "NUMBER", "r", "It", "would", "be", "good", "to", "have", "a", "more", "systematic", "approach", "to", "this", "instead", "of", "bunch", "of", "user", "report", "about", "it", "not", "work", "in", "certain", "configurations", "NUMBER", "I", "ll", "try", "to", "write", "some", "note", "so", "that", "we", "can", "understand", "where", "we", "be", "and", "how", "much", "be", "miss", "NUMBER", "I", "loaded", "a", "binary", "with", "m", "and", "it", "looks", "like", "the", "strings", "offsets", "be", "wrong", "it", "points", "to", "unmapped", "memory", "Plus", "it", "doesn", "t", "print", "all", "strings", "when", "dealing", "with", "multiple", "file", "The", "issue", "lies", "in", "radare", "NUMBER", "The", "matter", "be", "that", "the", "virtual", "address", "be", "wrong", "for", "some", "sections", "NUMBER", "Do", "we", "have", "an", "open", "issue", "for", "this", "in", "the", "radare", "NUMBER", "repository", "No", "I", "don", "t", "think", "so", "NUMBER", "Should", "be", "transferred", "to", "radare", "NUMBER", "radare", "Tracked", "in", "radareorg", "radare", "NUMBER", "NUMBER", "Currently", "when", "analyzing", "a", "function", "I", "often", "click", "on", "different", "blocks", "which", "makes", "the", "widget", "change", "its", "seeked", "address", "NUMBER", "But", "when", "I", "want", "to", "leave", "that", "function", "with", "escape", "or", "the", "back", "arrow", "it", "goes", "back", "to", "where", "I", "clicked", "until", "it", "leaves", "the", "function", "so", "it", "can", "take", "a", "while", "NUMBER", "Maybe", "we", "should", "just", "use", "ss", "silent", "seek", "when", "we", "be", "inside", "a", "function", "Sounds", "good", "to", "me", "I", "think", "it", "should", "be", "optional", "feature", "NUMBER", "Should", "be", "the", "default", "but", "with", "the", "option", "to", "tweak", "it", "Configurable", "in", "IDA", "it", "counts", "something", "in", "seek", "history", "only", "if", "it", "be", "not", "in", "the", "same", "function", "or", "it", "be", "a", "double", "click", "on", "an", "address", "of", "the", "function", "if", "it", "be", "in", "a", "condition", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dd", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "bfa", "f", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "png", "I", "think", "silent", "seek", "be", "not", "the", "best", "thing", "to", "do", "NUMBER", "Having", "some", "history", "in", "CutterSeekable", "class", "would", "be", "probably", "better", "NUMBER", "xarkes", "so", "what", "do", "you", "think", "should", "be", "do", "with", "this", "issue", "Someone", "must", "implement", "something", "proper", "and", "efficient", "NUMBER", "I", "think", "what", "you", "describe", "above", "with", "IDA", "behaviour", "be", "good", "NUMBER", "R", "NUMBER", "pushes", "item", "in", "history", "before", "seek", "or", "undo", "not", "after", "the", "seek", "so", "ss", "should", "result", "in", "B", "NUMBER", "The", "branch", "arrows", "indicate", "the", "jump", "destinations", "NUMBER", "Most", "of", "the", "time", "you", "follow", "the", "arrow", "from", "a", "specific", "instruction", "to", "see", "where", "it", "goes", "NUMBER", "If", "you", "have", "to", "scroll", "to", "follow", "it", "the", "arrow", "disappears", "NUMBER", "It", "would", "be", "more", "useful", "if", "the", "arrow", "from", "the", "selected", "line", "and", "maybe", "even", "the", "ones", "point", "to", "that", "line", "would", "be", "preserved", "when", "scrolling", "NUMBER", "x", "NUMBER", "dbg", "do", "this", "for", "example", "NUMBER", "Related", "feature", "request", "when", "debugger", "be", "ready", "color", "the", "arrow", "from", "selected", "line", "red", "if", "the", "jump", "condition", "evaluates", "to", "true", "NUMBER", "Thanks", "for", "all", "the", "hard", "work", "and", "have", "a", "good", "day", "Not", "an", "easy", "issue", "imho", "NUMBER", "Should", "be", "solve", "when", "we", "have", "a", "new", "Disassembly", "Widget", "and", "arrows", "aren", "t", "drawn", "as", "text", "anymore", "NUMBER", "Oh", "sorry", "I", "thought", "it", "was", "just", "to", "set", "the", "current", "block", "jump", "lines", "dashed", "so", "it", "s", "easier", "to", "see", "NUMBER", "xarkes", "please", "see", "this", "NUMBER", "For", "the", "future", "refactoring", "of", "Disassembly", "widget", "xarkes", "did", "you", "respect", "this", "in", "your", "solution", "No", "it", "doesn", "t", "because", "currently", "nothing", "be", "cached", "NUMBER", "Once", "cache", "be", "support", "for", "the", "disassembly", "widget", "this", "would", "be", "easy", "to", "implement", "NUMBER", "Nope", "the", "disassembly", "logic", "be", "still", "the", "same", "only", "the", "offsets", "you", "see", "be", "disassembled", "NUMBER", "Nothing", "more", "nothing", "less", "NUMBER", "Add", "right", "click", "dump", "section", "on", "section", "panel", "via", "iO", "d", "S", "NUMBER", "text", "NUMBER", "It", "should", "save", "it", "in", "raw", "and", "ask", "the", "user", "where", "to", "put", "it", "with", "a", "dialog", "NUMBER", "Requires", "change", "on", "r", "NUMBER", "side", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "iO", "d", "S", "NUMBER", "text", "rabin", "NUMBER", "be", "not", "recognized", "as", "an", "internal", "or", "external", "command", "operable", "program", "or", "batch", "file", "NUMBER", "Huho", "trufae", "LINK", "_info", "NUMBER", "c", "L", "NUMBER", "Yes", "it", "s", "know", "issue", "it", "has", "be", "discussed", "already", "on", "r", "NUMBER", "core", "Is", "there", "any", "solution", "ping", "Maijin", "Got", "any", "update", "here", "I", "think", "we", "can", "parse", "the", "section", "size", "and", "wtf", "it", "use", "wtf", "size", "section_addr", "Not", "so", "simple", "because", "the", "command", "you", "suggest", "implies", "we", "work", "on", "no", "VA", "mode", "which", "be", "not", "case", "S", "This", "depends", "from", "either", "LINK", "or", "SIOL", "fix", "in", "Rbin", "Both", "issue", "that", "be", "long", "lasting", "radare", "Maijin", "be", "this", "feasible", "now", "Nop", "issue", "radare", "radare", "NUMBER", "NUMBER", "be", "still", "not", "fix", "and", "SIOL", "fix", "be", "still", "not", "do", "Ok", "main", "blocker", "has", "be", "merge", "now", "we", "can", "call", "rabin", "NUMBER", "functionnalities", "directly", "from", "r", "NUMBER", "without", "hacks", "can", "you", "link", "write", "down", "an", "example", "Will", "still", "have", "to", "wait", "this", "be", "refactored", "on", "radare", "NUMBER", "side", "you", "can", "use", "wtf", "iO", "or", "dmd", "for", "debugger", "maps", "but", "for", "the", "iO", "part", "yes", "we", "need", "to", "refactor", "stuff", "to", "provide", "a", "clean", "api", "to", "do", "this", "proposals", "be", "welcome", "Here", "s", "an", "example", "of", "a", "non", "symmetric", "graph", "NUMBER", "I", "use", "the", "blue", "arrows", "to", "emphasize", "the", "issue", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "af", "NUMBER", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "ed", "ab", "NUMBER", "fc", "NUMBER", "png", "I", "d", "expect", "the", "red", "arrow", "at", "the", "top", "to", "be", "in", "the", "same", "line", "of", "the", "green", "one", "NUMBER", "I", "d", "expect", "the", "bottom", "block", "to", "be", "centered", "as", "the", "top", "one", "NUMBER", "Here", "s", "how", "IDA", "did", "it", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fda", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "NUMBER", "bd", "NUMBER", "NUMBER", "ba", "NUMBER", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "png", "Another", "thing", "be", "to", "give", "the", "possibility", "to", "move", "and", "relocate", "the", "blocks", "in", "order", "to", "give", "the", "user", "more", "flexibility", "NUMBER", "We", "can", "open", "a", "Meta", "issue", "with", "Graph", "relate", "enhancements", "NUMBER", "Note", "that", "I", "d", "like", "to", "move", "those", "widgets", "into", "an", "external", "library", "LINK", "Which", "will", "bring", "more", "contributors", "to", "it", "I", "think", "NUMBER", "Hello", "NUMBER", "I", "just", "want", "to", "suggest", "add", "opportunity", "make", "background", "color", "for", "instruction", "in", "graph", "view", "disassembly", "like", "IDA", "NUMBER", "It", "will", "be", "very", "fine", "if", "you", "implement", "this", "via", "ecHi", "ecHw", "radare", "NUMBER", "commands", "NUMBER", "This", "be", "very", "need", "durring", "visual", "trace", "analysis", "from", "another", "utils", "NUMBER", "Thank", "you", "NUMBER", "x", "Right", "click", "color", "block", "Right", "click", "instruction", "line", "NUMBER", "You", "mean", "that", "you", "need", "this", "with", "a", "script", "through", "the", "API", "or", "you", "also", "need", "to", "do", "this", "manually", "with", "a", "mouse", "Mostly", "it", "be", "necessary", "via", "r", "NUMBER", "API", "ecHi", "ecHw", "Manually", "tried", "calling", "ecHi", "and", "ecHw", "from", "console", "and", "then", "View", "Refresh", "Contents", "it", "looks", "like", "there", "be", "something", "wrong", "with", "disasm", "parsing", "NUMBER", "Can", "you", "get", "rgb", "code", "of", "instruction", "in", "cutter", "I", "don", "t", "think", "so", "but", "that", "can", "be", "quickly", "implement", "I", "believe", "NUMBER", "You", "can", "get", "disassembly", "colors", "if", "you", "use", "e", "scr", "NUMBER", "html", "true", "and", "disassemble", "an", "instruction", "NUMBER", "I", "have", "a", "crash", "after", "set", "e", "scr", "NUMBER", "html", "true", "and", "View", "Refresh", "Contents", "NUMBER", "Hello", "NUMBER", "After", "last", "release", "a", "color", "highlight", "has", "worked", "NUMBER", "But", "not", "everywhere", "NUMBER", "temp", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "a", "cc", "NUMBER", "d", "NUMBER", "c", "NUMBER", "png", "I", "highlight", "two", "instruction", "through", "ecHi", "red", "command", "NUMBER", "probably", "would", "be", "implement", "soon", "by", "xarkes", "Remember", "this", "issue", "when", "you", "ll", "push", "it", "My", "current", "solution", "doesn", "t", "use", "radare", "NUMBER", "API", "NUMBER", "The", "issue", "says", "like", "NUMBER", "It", "doesn", "t", "matter", "how", "it", "s", "matter", "what", "NUMBER", "ecH", "be", "simply", "nice", "to", "have", "but", "any", "solution", "be", "good", "xarkes", "be", "your", "solution", "support", "highlight", "a", "specific", "instruction", "Not", "it", "doesn", "t", "but", "it", "would", "work", "quite", "similarly", "if", "anyone", "wanted", "to", "do", "so", "NUMBER", "optizone", "you", "may", "want", "to", "look", "at", "this", "one", "as", "well", "NUMBER", "Can", "be", "combined", "with", "your", "solution", "via", "Right", "click", "on", "line", "or", "when", "multi", "lines", "be", "selected", "Highlight", "Line", "s", "Color", "picker", "Right", "Click", "anywhere", "in", "the", "block", "Highlight", "Block", "Color", "picker", "I", "wouldn", "t", "say", "trivial", "since", "the", "logic", "be", "a", "bit", "different", "p", "I", "can", "highlight", "a", "line", "with", "cutter", "api", "reopening", "NUMBER", "v", "NUMBER", "ctor", "said", "correctly", "this", "isssue", "request", "highlight", "in", "disas", "view", "as", "well", "NUMBER", "Implemented", "in", "NUMBER", "BTW", "what", "about", "ecHi", "highlight", "It", "be", "more", "convenient", "because", "I", "can", "highlight", "everything", "with", "one", "command", "in", "console", "window", "withour", "write", "python", "scripts", "NUMBER", "For", "example", "ecHi", "green", "NUMBER", "drcov", "NUMBER", "log", "Now", "it", "works", "but", "only", "if", "instruction", "has", "one", "color", "NUMBER", "It", "seems", "ecHi", "works", "but", "not", "good", "NUMBER", "Are", "you", "going", "to", "remove", "this", "completely", "Just", "ecHi", "color", "offset", "NUMBER", "Ok", "NUMBER", "I", "see", "what", "you", "implement", "cutter", "NUMBER", "BasicBlockHighlighter", "for", "highlight", "basic", "block", "NUMBER", "But", "I", "can", "see", "for", "instruction", "NUMBER", "dir", "cutter", "BasicBlockHighlighter", "Configuration", "CutterCore", "CutterDockWidget", "CutterPlugin", "MainWindow", "__builtins__", "__doc__", "__loader__", "__name__", "__package__", "__spec__", "cmd", "cmdj", "core", "json", "message", "refresh", "version", "Is", "it", "implement", "in", "python", "Add", "nn", "in", "the", "loading", "options", "nn", "be", "a", "hack", "NUMBER", "we", "should", "provide", "a", "proper", "way", "to", "expose", "that", "bininfo", "with", "the", "rbin", "refactor", "instead", "of", "having", "an", "special", "loading", "method", "On", "NUMBER", "Feb", "NUMBER", "at", "NUMBER", "NUMBER", "Maijin", "TAG", "write", "Add", "nn", "in", "the", "loading", "options", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "Yes", "indeed", "NUMBER", "nn", "be", "a", "hack", "NUMBER", "we", "should", "provide", "a", "proper", "way", "to", "expose", "that", "bininfo", "with", "the", "rbin", "refactor", "instead", "of", "having", "an", "special", "loading", "method", "radare", "be", "such", "way", "exists", "now", "any", "idea", "how", "to", "continue", "with", "this"], "text_count": [0, 32009, 7981, 4035, 2431, 272, 3278, 7, 157, 3941, 4488, 8247, 4450, 3179, 3752, 1452, 0, 0, 0, 0, 9470, 2856, 1569, 1147, 2094, 1454, 0, 0, 0, 0, 19182, 11658, 7817, 330, 4177, 1517, 0, 0, 0, 0, 25193, 153, 11229, 10208, 6962, 0, 0, 0, 0, 0, 6240, 3047, 3528, 1678, 2394, 1220, 2262, 0, 0, 0, 20829, 1775, 16543, 1359, 0, 0, 0, 0, 0, 0, 12928, 1422, 9168, 3985, 1520, 0, 0, 0, 0, 0, 23867, 12034, 2647, 8510, 1020, 1281, 0, 0, 0, 0, 1441, 6357, 702, 0, 0, 0, 0, 0, 0, 0, 19709, 4269, 11019, 4686, 0, 0, 0, 0, 0, 0, 38339, 78627, 1498, 3798, 1230, 1471, 0, 0, 0, 0, 103984, 340, 76772, 1081, 16679, 24357]}]