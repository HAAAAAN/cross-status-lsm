[{"repo": "formtastic", "type": "elite", "title": "", "number of text": 387, "text": "  There's nothing in Formtastic specifically (and I'm not sure I want to add any more magic right now), but this should work:\n\n```\n<%= f.input :role, :as => :select, :collection => User.validators_on(:role).map { |v| v.options[:in] }.flatten.compact %>\n```\n\nClosing for now!\n  Would love to see a pull request for this!\n  This is most likely the same problem as #824 that you mention above, so can we please consolidate our efforts there instead? Thanks for documenting the interim work-around. Closing.\n  Assuming you have the latest stable version:\n\n```\n<%= f.actions do %>\n  <%= f.action :submit, :as => :button %>\n  <%= f.action :reset, :as => :link %>\n <% end %>\n```\n\nhttp://rdoc.info/github/justinfrench/formtastic/Formtastic/Helpers/ActionsHelper\nhttp://rdoc.info/github/justinfrench/formtastic/Formtastic/Helpers/ActionHelper\n  @TiagoCardoso1983 This was not a deliberate regression, although Formtastic has never intentionally supported or documented strings instead of symbols. What previous version of Formtastic did this work for you? This will help me narrow down the change and understand it.\n  @conradwt There's no upgrade documentation as such, but there is the following:\n- a [CHANGELOG](https://github.com/justinfrench/formtastic/blob/master/CHANGELOG) which notes the deprecation (and what replaced it) and the removal in a more recent version\n- [documentation](http://rdoc.info/github/justinfrench/formtastic), although the documentation for the actions DSL seems to be hidden right now (bug), but it can be viewed [in the source for ActionsHelper](https://github.com/justinfrench/formtastic/blob/master/lib/formtastic/helpers/actions_helper.rb) and [ActionHelper](https://github.com/justinfrench/formtastic/blob/master/lib/formtastic/helpers/action_helper.rb)\n\nI'll leave this open until I resolve why those are missing from the generated documentation. Feel free to create a wiki page for the upgrades you need to do.\n Documentation is fixed in master:\n\nhttp://rdoc.info/github/justinfrench/formtastic/master/Formtastic/Helpers/ActionsHelper\nhttp://rdoc.info/github/justinfrench/formtastic/master/Formtastic/Helpers/ActionHelper\n\n@budu you should have seen warnings in your tests and in your server logs if you were running the version(s?) that included the deprecation. If you want to bundle in that specific version and confirm, happy for you to re-open this ticket and I'll look deeper, but the deprecation stuff is straight out of Rails and well tested elsewhere.\n\nClosing for now!\n  Did you try it? It should work, if it doesn't that's a bug, and I'd love to see a patch/pull request.\n `formtastic:form Post--copy --template-engine haml` is the correct syntax, and I've just committed code to correct the docs and coverage for this in the future\n  Hi, thanks for filing this, it will be helpful to others. I think I'd prefer to err on the side of requiring things to be marked as html_safe (like you did) than to assume something is safe.\n  @michelson there's nothing in default formtastic, looks good!\n @michelson I don't think so either, but it's great that others will be able to find it here\n  @ollym I think this is too details for an issuem can you try the google group or perhaps stack overflow? I think it'd be helpful if you could provide minimal details of each model, and a wireframe of the form you're after. Closing for now.\n  @KeysetTS surely this is an issue with [formtastic-bootstrap](https://github.com/mjbellantoni/formtastic-bootstrap), not formtastic, as we don't offer any support for bootstrap yet. Closing.\n  Many thanks!\n  @corny Thank you, have been meaning to do that forever :)\n  @ollym if only I had endless time or corporate sponsorship ;)\n @ollym it _might_ be a much better default in general, but again, there would be a LOT of work involved in supporting it, not to mention it's a non-trivial change that would be backwards incompatible.\n @ollym I think you're optimistic :)\n  ```\n:as => :date_picker\n:as => :time_picker\n:as => :datetime_picker\n:as => :datetime_picker, :local => false\n```\n\nDoes not include any extra CSS or JS for rendering non-native calendar widgets (and won't!). Some browsers already have support, others can be polyfilled with the UI and JS libraries of your choice.\n @sobrinho take a look?\n @sobrinho  I have a separate pull which renames date to date_select and leaves date as an alias/subclass. These ones are date_picker etc, so theres no compatibility issue or naming clash. In a major version bump we could alter Date to alias DatePicker instead of DateSelect, and I guess we could offer a confiuration right now to prefer the picker inputs over the select inputs out of the box for date database columns, etc. is that what you had in mind?\n  - :as => :date becomes :as => :date_select\n- :as => :time becomes :as => :time_select\n- :as => :datetime becomes :as => :datetime_select\n- newly named inputs have a different css class on the wrapper (li.date_select, etc)\n- existing :date, :time, :datetime still work (with original css wrapper class)\n- deprecated existing inputs with warning\n- :date, :time and :datetime database columns now map to these new selects\n- CHANGELOG\n\nThis paves the way for a DatePickerInput (etc) to be introduced with less confusion, and potentially defaulting DateInput, TimeInput and DatetimeInput to the HTML5 date picker versions in a future release.\n @sobrinho @yabawock @haines @twalpole care to take a look?\n  Hi,\n\nCould you check if this same error occurs with ActiveRecord, or if it's isolated to Mongoid or something else in your model\n\nJustin\n\nOn 18/03/2012, at 3:03 AM, Jason Waldrip wrote:\n\n> I have two models as follows:\n> \n> ``` ruby\n> class User\n>  include Mongoid::Document\n> \n>  has_one :contact, autosave: true\n> \n>  ...\n> end\n> \n> class Contact\n>  include Mongoid::Document\n> \n>  belongs_to :user # contact information for user\n> \n>  ...\n> end\n> ```\n> \n> In my form I have the following code.\n> \n> ``` haml\n> = semantic_form_for @user, html: { class: \"form-horizontal\"} do |f|\n>   = f.input :contact, as: :select\n> ```\n> \n> It is giving me an error of:\n> \n> ```\n> undefined method `user_id' for #<User:0x007f81cac2ee00>\n> ```\n> \n> Is there something special I need to be doing here?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/824\n @jwaldrip Thanks, looking into it.\n @jwaldrip There's no test coverage in `select_input_spec.rb` and no mention of `has_one` in the documentation for `SelectInput`, so I'm not sure this was ever supported. Looks like the code is recognising that `:contact` is an association (hence not just rendering a string), but not that it's a `has_one` association which needs to be handled different.\n\nThere's work to be done here, can you help out?\n @jwaldrip I added a quick test for has_one support of select input and pushed up a branch `has_one_select` with commit 9c20e67fec9edb96e6e1d50119cc43ee9c4525ae which I was expecting to fail based on your issue, but passes... suggest this would be a good talking point for what's different about your situation. I may have got the mocking wrong, etc.\n Pushing this out to the next milestone as it's in an unknown state.\n @jwaldrip @simonc just checking \u2014 are you both using ActiveRecord, or Mongoid like @ronhose?\n @jwaldrip @simonc @ronhose \n\nI think I've found the issue (still don't understand why I can't get a spec that raises that error, but I digress). The issue is that the association reflection has a primary_key of `user_id`, which we're using. I can detect the `has_one` association and skip that key, but this results in `undefined method contact_id`, which is right as well. I'm pretty sure anything to do with a foreign key is wrong here.\n\nSo this leads me to ask: What should the attribute be called? The form is for a User, so all params are posted in a user hash, and the keys of that hash are the attribute names from the form. What are you expecting?\n- `user[contact_id]`? (would require you to set an `attr_accessor`\n- `user[contact]`? (not consistent with what we do in `belongs_to` associations\n- `user[contact][id]`? (not sure if this would work, might require `accepts_nested_attributes`\n\nOver to you guys to figure out what the params hash _should_ look like, then I'll figure out _how_ :)\n @simonc ok, reopening ;)\n  I'm confused can you lease show me actual and expected markup output examples?\n @xdmx @lejoko if you want to change the textual representation of each choice in a select, radio or check box set, the correct way to do so is with the :member_label option, as @lejoko has just mentioned. It's not a work-around, it's what you do ;) another option is to define to_label on the model, mapping it to to_s or anything else. This is all in the documentation, so I'm closing this issue until I have further detail from OP. \n  @xdmx have updated the title to be more specific about the brokenness :)\n @xdmx I think this (has to be) a non-issue. Here's the HTML output:\n\n```\n<option value=\"Pacific Time (US &amp; Canada)\">(GMT-08:00) Pacific Time (US &amp; Canada)</option>\n```\n1. We _must_ use a HTML entity to represent an ampersand in both the `<option>` tag's contents and it's value attribute (right?)\n2. Rails' own `time_zone_select` helper produces the same results (and we rely on this helper under the hood, in which case it would be a Rails issue\n\nSo, unless you're seeing a double-escaped ampersand in your HTML output that I'm unable to reproduce (`&amp;amp;`), I think you're going to have to tackle this from another angle. Perhaps `CGI.unescapeHTML(\"...\")` will help. I'm kind of surprised that this hasn't been solved elsewhere!\n\nClosing for now, please re-open if I've got it all wrong :)\n  @twalpole usable as-is, pulling in now, thanks\n @twalpole \n\nTravis CI is failing under 1.8.7, REE and 1.9.2 (so only 1.9.3 is passing).\n\nhttp://travis-ci.org/#!/justinfrench/formtastic/jobs/817527\nhttp://travis-ci.org/#!/justinfrench/formtastic/jobs/817526\nhttp://travis-ci.org/#!/justinfrench/formtastic/jobs/817525\n\nI can certainly repeat the last two failures (BasicObject) under 1.8.7 on my local machine, haven't looked into the 1.9.2 issue.\n\nI think the primary cause is that Rails 4 is dropping 1.8.7/REE, so the current build matrix where all 4 versions of Rails are running in all 4 ruby versions is flawed. Given this, I created a `rails4` branch off master@e4f3b04 (with your stuff still in it) and reverted the changes in master.\n\nWe'll have to figure out a better build matrix with environment variables etc, so this work can be done in the rails4 branch and merged in when we're green and happy.\n\nIf you're interested in carrying the Rails 4 torch, I can add you as a contributor to get this branch rocking and keep an eye out for issues against Rails edge.\n @twalpole done\n  @wejrowski I have some apps still using 1.2.x and haven't had any problems. Here's what I'd like to know:\n1. Is Formtastic adding a required CSS class to the input as well as adding the required string to each input's label, or is this isolated to just labels?\n2. What's in your configuration file for `Formtastic::FormBuilder.required_string` and `Formtastic::FormBuilder.optional_string`?\n3. Are you doing any i18n translations at all (either related or unrelated to Formtastic)\n4. Has this always been a bug (in a long standing project), or did it just start happening in an upgrade, or is this a new project?\n Closing due to lack of activity.\n  Hi,\n\nThose date inputs are very specific to the way ActiveRecord will parse a params hash and coerce the params into objects as part of mass assignment. As you can see, the date and date are broken into multiple fragments (2i, etc), which ActiveRecord glues back together and coerced into a date or time.\n\nMy guess is that Mongoid does not do this, so you'll either need to do this work yourself in the model, do iit in the controller, or pick another type of input (like a StringInput) with a jQuery calendar widget attached, which will be the default soon anyway.\u00a0\n\nWould be AWESOME if you could submit a documentation patch for the date/time inputs so others don't struggle here!\n  @rchampourlier @nashby @jan0sch This was indeed a bug in 2.1.0, and has been fixed in master (see 4d5254d and 99193e0, merged in pull #805). I've also pushed 2.1.1 gem and merge master into 2.1-stable. Closing!\n  Here's a quote from the [documentation for SelectInput](http://rdoc.info/github/justinfrench/formtastic/Formtastic/Inputs/SelectInput), which I assume you haven't read (but please help me clarify the docs if it simply didn't make sense to you):\n\n> The way on which Formtastic renders the `value` attribute and content of each `<option>` tag is customisable through the `:member_label` and `:member_value` options. When not provided, we fall back to a list of methods to try on each object such as `:to_label`, `:name` and `:to_s`, which are defined in the configurations `collection_label_methods` and `collection_value_methods` (see examples below).\n  At the moment there's no supported way, but you could monkey patch anything you like in a file in `config/initializers/whatever.rb`.\n  Yes, in theory. If you make an engine gem that has formtastic as a dependency, you'll be able to have an app/inputs/ directory inside the gem. In theory, that will work, but I've never tried it.\n  This is an unfortunate side-effect of require_tree, and there's no way we can avoid it that I know of. Instead, require the specific style sheets you want specifically. I rarely want \"everything\". \n @onemanarmy Okay, have re-opened this so that I can explore for myself before deciding what's appropriate.\n @onemanarmy a doc patch would be great please!\n Merged in #830, closing.\n  Awesome!\n  Can we see a full stack trace? Did this exact code work on another ruby version?\n I can't really see how this was working under 1.8.7 with Formtastic 2.0.2 \u2014 have you upgraded Formtastic from 1.x at the same time? Either way, here's the steps I'd take to narrow this down:\n1. Formtastic is expecting the custom input classes to be defined without a module, so that would be a first step.\n2. I typically place them in one file per input, e.g. `app/inputs/wysiwyg_input.rb`, `app/datepicker_input.rb`, etc\n3. You seem to have old style (e.g. `def programme_select_input`) and new style (e.g. `class ProgrammeSelectInput`) side-by-side. Delete the old style, keep the new. The old ones will not work with Formtastic 2.x.\n\nLet me know how you go, closing for now.\n  `text_field_tag` is not comparable to anything in Formtastic. A better comparison is `f.text_field`, which is the form builder version, which means it's bound to the form object. Formtastic is a FormBuilder, thus bound to an object. Incidentally, you can still use both `text_field_tag` and `f.text_field` within the Formtastic DSL, but to answer your question...\n\nIf you really want no name attribute:\n1. I think `:html_input` should be `:input_html` in your example, but if that's just a typo...\n2. I thought your sample would have worked, but if it doesn't (sounds like we're merging options somewhere a little too aggressively)...\n3. Perhaps a blank string would work (`:name => \"\")`, or else\n4. Please send a patch :)\n  `actions` is only available in Formtastic 2.1.x which is currently at 2.1.0.rc, so you'll need to bundle in that specific gem version.\n\nhttps://rubygems.org/gems/formtastic/versions/2.1.0.rc\n  @astockwell is this still an issue for you? Closing for now since this is over a month old, but please re-open if it's still an issue for you. Formtastic version would be helpful too!\n  Weird! Either operator should be safe. Have you got any idea where the root cause is? Happy to merge this in, but would also love to plug the real cause and add spec coverage against a regression.\n Merged in, thanks.\n @flexoid Looks like this failed the build under 1.8.7 and ree. Can you take a look for any 1.9-specific code, check out the fail and submit a patch please? http://travis-ci.org/#!/justinfrench/formtastic/builds/730924\n Looks like some 1.9-only hash syntax.\n  Hi, this is a _lot_ o code to grok. Since your main issue seems to be with ActiveAdmin (a library I'm not familiar with), could you please start with them and perhaps work on a smaller code example and test case that exposes your problem? Closing this.\n  Hi, you would need Javascript for this. \n\nJustin\n\nOn 17/02/2012, at 1:23 AM, Fielouxreply@reply.github.com wrote:\n\n> Hello,\n> \n> I am using your range field, but i want to display the value on an other input/div and change the value when we slide. How can i do that? \n> \n> Thank you.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/803\n @Ditchou what have you tried? Come on, I'm not here to hold your hand with everything!\n\n```\nf.input :foo, :as => :bah, :hint => \"<span>Hello</span>\".html_safe\n```\n\nThat should work. For general questions, please use the Google group or Stack Overflow. Closing this one for now!\n @Ditchou did you try it with the `.html_safe` on the end? That really should work. Can you show your code please so I don't have to keep guessing?\n  Shouldn't the hidden tag come before the select?\n\n```\nif html_options[:multiple]\n  create_hidden_field_for_multiple_select(input_name) << select_html\nend\n```\n\n?\n The approach we've taken elsewhere in the code is to put them first, so I'd like to see this switched around and tested pretty please :)\n merged in, thanks!\n  Thanks, all green :)\nhttp://travis-ci.org/#!/justinfrench/formtastic/builds/679584\n\n2.1.0.rc going out in the next 24hrs I hope!\n  I think we're at the point where this and #802 are duplicates. Since #802 has tests, let's close this and pick it up there. I've posed one question already.\n  Awesome work, and a nice solution I hadn't thought of! So by the looks of it, this is backwards compatible (you can ignore/omit the `index` from the block), and better/more flexible. We should probably deprecate the other method, but that can be a separate problem. \n\n@sobrinho @haines @yabawock can you see any reason not to pull in?\n @mhuggins Boo build fail! http://travis-ci.org/#!/justinfrench/formtastic/builds/678637 Looks like REE and 1.8.7, can you have a quick look if there's any 1.9-isms that snuck in, or anything else you can do to help resolve?\n @mhuggins I don't want to change the APIs on a point release, so we can either revert, or try your work-around. Let's go with the latter!\n  @thbar did you find a work-around? I think Rails dropped TMail over Mail, so feel like something that doesn't need to be \"fixed\" going forward. Closing for now, but please reopen if you'd still like to see something change in Formtastic.\n Thanks @thbar \n  What kind of text? How much? Where?\n\nJustin\n\nOn 08/02/2012, at 10:31 PM, Fielouxreply@reply.github.com wrote:\n\n> Hello,\n> \n> I want to write some text in the middle of my form, how can i do that?  My form looks like : \n> \n>    form :html => { :enctype => \"multipart/form-data\" } do |f|\n>      f.inputs \"Details\" do\n>        f.input :civility\n>        f.input :society\n>        f.input :last_name\n>        f.input :address\n>        f.input :postal_code\n>        f.input :country, :as => :string\n>        f.input :email\n>        f.input :reduction_code\n>        f.input :message\n>        f.input :total\n>        f.input :city\n>      end\n>      f.buttons\n>    end\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/795\n @Ditchou that didn't answer any of my questions :)\n There's a few options: \n1. If the text is semantically unrelated to either the email or reduction code inputs, you can break the feildset into two fieldset by ending the first inputs block after email, and starting another before reduction code. This would make it valid to use a DIV (or anything else) in this place, because you've broken up the list. Since you seem to be using ActiveAdmin, you might need to make this a partial with ERB instead (so that you can make a DIV), or maybe some of the Rails HTML helpers will work, Iike content_tag or f.template.content_tag. \n2. If the text is related to the email input, perhaps you can use the existing :hint option which adds a paragraph of text to the bottom of the input. \n3. If the text is related to the reduction code, maybe you could use the legend of the fieldset (assuming you've done step one) like you have with \"Details\" above), but I doubt it.\n4. If you want to keep the single fieldset and the text is related to either the email or reduction input, consider subclassing the closest relevant input and just putting the text in there as part of a custom input. Then you can use :as => :email_with_blah_text for example, and have the text be automatically included. \n\nThose are about all the options that will work and give you valid HTML. I'm sketchy on the ActiveAdmin details, but they can help you with that once you know how you're going to approach this. If you can show me a mockup or the actual text, I'd love to learn more about the use case, because I have some ideas for making this easier in future versions with new features. \n\nClosing for now. \n  @eswat2 nice!\n Closing this as a duplicate of #795\n  This definitely looks like a bug or an odd behaviour, but it's not an issue with Formtastic, as `stylesheet_link_tag` is vanilla Rails and not touched by Formtastic. Looks to me like `stylesheet_link_tag` is outputting two link tags for you \u2014 `formtastic_ie6.css` and `ie6.css`. I don't know why though sorry. If you find the answer, please report back so we can improve the docs.\n Thanks.\n  @SaschaKonietzke can you provide me with any more detail about the model, the type of collection, the options you're using on the input method, etc so that I can try to narrow this down and make a test? Also, I assume this is with 2.1.0.beta or master?\n Okay thanks, closing for now, but if there's a change that we need to make or something we can improve, would love to hear about it.\n  I don't think that was ever a feature. What's your use case?\n Wondering if there shouldn't just _be_ a unique id on each field set, rather than you having to do this. Either way, I'd accept a patch if you're interested. Unique _classes_ seems a bit, errr, strange, but ids make sense.\n @mhuggins agree, your patch solves this great, closing.\n  Merged, thanks!\n  @eLod sure, create away!\n  @SaschaKonietzke looks good, let's merge into master, meaning it'll be in 2.2 or 3.0 and @sobrinho can figure out how we do less :)\n  @SaschaKonietzke I think I must have closed instead of merging. Certainly meant to merge. Have re-opened, but the merge button has vanished, so I'll do it the hard way later. Sorry!\n @SaschaKonietzke merged in!\n  Seems good. @justinfrench ?\n  Seems nice!\n  Agree! :heart:\n   Ruby-wise this is fully backwards compatible. As far as the naming scheme goes, I did think about Numberish but ended up going for Numeric simply because it sounded more natural to me. If you would rather be consistent, I don't mind.\n @yabawock yep, so it does\n  Thanks for reporting - it's a duplicate of #758 so I'm closing this one.\n  @justinfrench I wanted to check this before it goes in, because I've deleted a reference to the `grouped_value_method` option, which, unlike `grouped_label_method`, doesn't seem to have been deprecated (454dd44c00c512509ce6b9b09ad19e72e620af34). Removing it could theoretically break backwards compatibility, but it seems to be undocumented so I would expect that it's unlikely anyone is relying on it. Thoughts?\n  Since we have an engine for the asset pipeline on 3.1, we don't need a separate railtie. I've moved the initialization code into the engine and dropped the railtie. (It still works on 3.0)\n  The label element created in the timeish inputs' legend is always `<label for=\"..._1i\">` (i.e. pointing to the year input), which is no good for time-only inputs or when other date orders are used (e.g when using d-m-y order, clicking on the label sets the focus to the third input in the list, which is disconcerting).\n  As discussed on #727\n @justinfrench yeah, I'd love to, thanks!\n  In fact, do we even need to be calculating this limit? As far as I can see, the only use of `column_limit` is to choose a `maxlength` for a stringish input. However, [`maxlength` is not a valid attribute for `input[type=number]`](http://dev.w3.org/html5/spec/states-of-the-type-attribute.html#number-state-type-number), so maybe we should get rid of it?\n I had a bit more of a look through the HTML5 spec and the `size` attribute (which is also set in `Stringish#input_html_options`) is not allowed for these inputs either (there's a [good table showing which inputs accept which attributes](http://dev.w3.org/html5/spec/the-input-element.html)). So, semantically, I think numeric inputs have diverged from stringish ones enough to consider them separate entities, and it'd be best to refactor `NumberInput` and `RangeInput` to inherit from `Numeric` rather than `Stringish`.\n\nI'll knock something up.\n  The hidden field is there because browsers won't post an empty collection of checkboxes... this causes problems when editing the object and unchecking all the boxes and is a pretty standard Rails and web application practice so that the controller and/or model know explicitly that all checkboxes were unchecked.\n\nThis is explained somewhat in the Rails check_box documentation \"gotcha\".\n\nI encourage you to fully understand this before disabling it, but the way to do so is to pass in the option `:hidden_fields => false`. I'll eave this issue open to ensure that there's documentation for this.\n Cheers... and `:hidden_fields` _is_ in the documentation, so I'm closing this.\n  Hi, so far, we've refrained from adding locales directly into the core Formtastic code, following Rails' lead of only including English directly. I feel adding other locales will cause too many support issues for me, so the solution so far has been to include them in the [wiki](https://github.com/justinfrench/formtastic/wiki/Translations), which currently include Japanese and Dutch. I'd love you to add this in too!\n\nThanks!\n  @kchien it hasn't yet, would accept a pull-request if you have the time to help us on this.\n  Hi, Formtastic makes a guess based on the association type. You can override this guess using the `:multiple` option, as documented here http://rubydoc.info/gems/formtastic/2.0.2/Formtastic/Inputs/SelectInput:\n\n```\nOverride Formtastic's assumption on when you need a multi select\n<%= f.input :authors, :as => :select, :input_html => { :multiple => true } %>\n<%= f.input :authors, :as => :select, :input_html => { :multiple => false } %>\n```\n\nClosing.\n Ok, I'll re-open and check that we have test coverage. What kind of association is `:pages`?\n  If you're rendering a lot of inputs for associations (has_many, belongs_to), then Formtastic may be querying the DB quite a lot. For example, if you don't provide a `:collection` of your own, it will use `Category.all`. This is compounded when the associations themselves contain lots of items (meaning many small fragments of HTML need to be rendered (if you have 1000 categories, that's 1000 checkboxes or options that need to be rendered).\n\nYou can help in the following ways:\n- try to reduce and isolate the problem (to one type of input) then give us details about the form code, the models, the associations, the number of records in the association, etc\n- verify that the same slowness exists with ERB\n- look at your logs after rendering the page, look at how many database calls are being made per request\n\nThere has also been some changes in master that are unreleased which memoize/cache some of the heavy lifting we're doing (I think it was for has_many associations), so after the above fact-finding, you may want to try bundling from master temporarily and seeing if there's any improvement.\n Closing, as @SaschaKonietzke's changes have been merged into master 2.1-stable, and will be in 2.1.0.rc shortly. If there's anything further, let's re-open or create specific issues for what you/we find. Thanks for everyone's work on this!\n  Merged in, with thanks.\n  @mibock if you override the `checked?` method to use `builder.object` instead of just `object` does it work?\n @mibock can I see your form code?\n @mibock I've noticed you're using  `semantic_form_for :transfer` where `:transfer` is a symbol, rather than `@transfer` (an instance of a Transfer model) \u2013 we need an instance of a model that has some state persisted in it in order to check the checkbox, reflect on the database columns, etc. Any reason you're knot using `@transfer` and instantiating an instance of a `Transfer`?\n\nClosing for now as I'm confident this is the issue, feel free to re-open.\n  On 04/11/2011, at 10:54 AM, Estanislao Vizcarra wrote:\n\n>    f.has_many :assets do |p|\n>      p.input :asset, :as => :file, :input_html => { :multiple => true }, :label => \"Image\", :hint => p.object.asset.nil? ? p.template.content_tag(:span, \"No Image Yet\") : p.template.image_tag(p.object.asset.url(:thumb))\n>      p.input :_destroy, :as=>:boolean, :required => false, :label=>'Remove'\n>    end\n\nI don't recognise the code `f.has_many :assets` -- is that vanilla Rails, or something provided by a ActiveAdmin, or\u2026?\n\nYour form code looks nothing like well-formed ERB or haml, so I have no idea where to start helping you :)\n\nJustin\n  Thanks! This is out of my depth a bit, can we get a +1 from someone?\n @sobrinho, I think it needs to be +1, because it should be the maximum length of a valid string that can be entered. \n @sobrino happy for you to merge this in when you're happy\n  I've tracked this down. The problem is that [`label_and_value_method`](https://github.com/justinfrench/formtastic/blob/master/lib/formtastic/inputs/base/collections.rb#L14) is not memoized; it's requesting the first element of the collection repeatedly. Apparently, unlike ActiveRecord, Mongoid doesn't cache that element, and will generate a query every time.\n\nAlthough, arguably, Mongoid probably shouldn't do the query every time, it's a moot point because Formtastic definitely shouldn't ask for it more than once. I'll work up a fix.\n  Thanks for the kind words.\n\nI believe this is a duplicate of #697, for which there are two related pull requests #702 and #705, all of which are under debate, so I'm going to close this down, feel free to chime in on #697 or the pulls.\n  Makes sense for me. @justinfrench?\n I think we should not set \"default values\".\n\nLet think about optional date time field.\n\nIf user want to keep this field blank, they should change the value because the form render the current time by default.\n\nI guess if developer want to set the current time as default, he should do something like that on controller:\n\n``` ruby\n@account = Account.new\n@account.create_at = Time.current\n```\n\nThat's the default behavior of rails, I guess.\n  Pulled, thanks!\n  @haines so this patch means that the blank option will always be included in the options, sounds exactly like I'd expect it to behave. I'd expect the same for prompt too. \n @sobrinho, yep, that's what it does.\n\n@justinfrench, I think that the only point in having both options is to have a difference between creation and editing. If you remove that distinction then `:prompt` and `:include_blank` would be completely equivalent.\n Sweet, had a go at the docs, see what you think!\n @justinfrench Do you get the same result when you only run select_input_spec? I haven't been able to reproduce on 1.9.2 or 1.8.7; So far I've run it with everything except the generator specs (which seem to take ages) and haven't gotten it to fail yet.\n @justinfrench Ok, managed to get my computer to stop choking on the generator specs and everything works. Then, just in case it was some oddity of my environment, I tested a fresh install by doing\n\n```\ngit clone git@github.com:justinfrench/formtastic\ncd formtastic\nrvm use --create 1.9.2@formtastic\ngem install bundler\nbundle install\nbundle exec rake\n```\n\n(and similarly for 1.8.7)\n\nStill, every spec passes.\n Ok things get even more curious, not only is that a different example failing, but I tried on 1.9.3 and still get all passes!\n\n[Here's my Gemfile.lock](https://gist.github.com/1501177), and there are no other gems installed (except bundler 1.0.21).\n @justinfrench according to Yehuda Katz [it's not generally recommended to check in your Gemfile.lock](http://yehudakatz.com/2010/12/16/clarifying-the-roles-of-the-gemspec-and-gemfile/) because \"it enforces precision that does not exist in the `gem` command, which is used to install gems in practice\".\n\nI'll downgrade to ActionPack 3.1.0 and see if I can get it working.\n Ok, turns out there are a couple of issues at play here, and the spec _should_ fail.\n\nIt should pass for select inputs; Rails' `FormBuilder#select` delegates to `FormOptionsHelper#select`, which allows a string for `:include_blank` ([here](https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/form_options_helper.rb#L616)).\n\nIt should fail for timeish inputs; Rails' `DateTimeSelector#select_day` etc generate select tags manually, and so only handle `:include_blank` as a boolean value ([here](https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/date_helper.rb#L890))\n\nThe problem is that the `include_blank` spec doesn't test the different input types independently. I've made a pull request (#762) to address this. The inconsistencies we've seen between rubies is because only the first input type tested determines a pass/fail, and the ordering of a hash is not guaranteed.\n\nThe question is, then, should we continue to follow Rails, and maintain an inconsistency between the behaviour of `include_blank` for timeish and select inputs (in which case I need to remove the failing specs)? Or should we patch it?\n\nIndeed, do you think should I open an issue on Rails for this? I think it's quite surprising that `include_blank` doesn't do the same thing in these two cases; I would view a time input as a special case of a select input.\n @justinfrench Cheers! I agree regarding Timeish, I'm not using it myself (which is why I didn't notice the problem sooner). I'll put together another pull request to document the inconsistent behaviour, and remove the failing specs from include_blank_spec.rb\n  Seems great for me.\n\nPersonally, I prefer something like that:\n\n``` ruby\ndef intense_calculation\n  @intense_calculation ||= make_intense_calculation\nend\n\nprotected\n\ndef make_intense_calculation\n  # code goes here\nend\n```\n  Ok, I have made a (passing) test case in 1bc9fabe3daac87dad16d277eeb4fbbc003fc76f, so I'm really not sure why you're not getting errors in your case. I'll keep trying to reproduce, but it would be good if either of you could help narrow this down on your end.\n1. does the appropriate error class get added (i.e. does Formtastic se that there are errors, ut fail to list them)?\n2. does it work without i18n on the error messages (just using default Rails errors)?\n3. does it work with a vanilla config file?\n4. does it work in your app with other nested attribute stuff?\n\nSorry that this isn't a quick fix, but like I said, there's a basic passing test, so it's hard to know where to look next.\n  @calvinl is this for one specific input, or for all inputs? I'm afraid there's no quick way that I can think of, but there's certainly at least one slow way. Can you tell me why you want to change the order? If I can empathise with the reasons, I've got an idea how we might be able to make this a little easier.\n @calvini for a one-off, this is perfect for custom inputs in Formtastic 2.x, no monkey patching required, just a subclass of StringInput (or whatever input you want to use as a base):\n\n```\n# app/inputs/whatever_input.rb\nclass WhateverInput < Formtastic::Inputs::StringInput\n  # override whatever you want here, probably input_html\nend\n```\n\nYou can go as far as adding a new option (like `:intro`), or just inject some extra HTML in wherever you want. If you need further help, I think the google group would be easier, but it's up to you.\n To switch across the board would probably require subclassing all the inputs you're using. What I'd love to do is improve Formtastic so that there's hints (after) and something else before (`:prelim`, `:intro`, ...), but I haven't done this yet. We could also provide some hooks for switching these around and that would have made the modification you're looking for much easier to change centrally.\n\nI don't suppose you work for a large enterprise that would love to sponsor such a feature? ;)\n @damncabbage ping see previous comment, forgot to mention you in it.\n @damncabbage looked into this a bit more this evening. The place to monkey patch this is in `lib/formtastic/inputs/base/wrapping.rb`. I was able to inject `intro_html` in before the label easy enough (see below), but in your case, you want the hint in between the label and the input, which will definitely require you to subclass each input type you're using, or in the case of email/string/password/url/phone and other inputs that use `Stringish`, monkey patching that may be easier.\n\n```\n        # Override this method if you want to change the display order (for example, rendering the\n        # errors before the body of the input).\n        def input_wrapping(&block)\n          template.content_tag(:li, \n            [intro_html, template.capture(&block), error_html, hint_html].join(\"\\n\").html_safe, \n            wrapper_html_options\n          )\n        end\n```\n\nI've pushed up my hacking tonight in the `intros` branch, but if we really want to cater for your use case, I think input_wrapping() would need a lot more hooks, which will take more than an hour or two of hacking. With the `intros` branch, plus some CSS fiddling you could get the order of the intro and label visually flipped around, but the source order would still be a bit backwards.\n\nSorry I can't offer any instant fixes \u2014 start monkey patching Stringish and see how you go!\n  Thanks @dim!\n  It's ok, thanks!\n I reverted this pull request because broken another spec.\n\nCould you check this @dim?\n\nhttp://travis-ci.org/#!/justinfrench/formtastic/builds/208253\n  Closing this since #705 includes this.\n  So the proposal is to enhance `:hidden_field => false` to include not rendering the `_none`? I'm okay with this in theory (from a DSL/API perspective), but would be great to see some +1s from others to support the change. A pull request would also be great!\n  Thanks, this is awesome!\n  I'll think about this... the API looks pretty solid, but I'm wondering if this would be better served with a custom input (`:as => :page_select` or similar). Certainly this would be the path forward right now if you're looking for this feature fast!\n I'm going to push back on this. There are two support methods to get this done already, and I'm not inclined to add a third:\n1. subclass SelectInput as PageSelectInput and make the small changes/patches required\n2. pass a pre-built HTML string of option tags (including data attributes) into `:collection` instead of Page.all or any other enumerable\n  Hi, can you please rebase this against master (perhaps by creating a new branch and cherry-picking in just the one commit?) It won't automatically merge, and it's hard to consider the diff with lots of irrelevant commits, etc.\n  @michaelkoper thanks for this\n  closing, as this has been merged in\n  @twalpole Thanks, was pretty sure we supported both, but was in a bit of a hurry and didn't properly check the docs. On it.\n Have pushed a change to master and 2-0-stable, but I didn't have to change any specs, which is a concern. Needs more work, leaving open.\n @tuxwerk can you tell me more about your use case? there's plenty of test coverage for `:multiple => true` in various situations, but maybe not yours. Is it for a db column (what kind?), or for an association (what kind?)? Anything else you can tell me to narrow this down would be great.\n @tuxwerk I think I've exposed the bug with a spec and patched it to allow `:multiple => true` in your situation, please bundle from master and confirm that `:multiple => true` and `:input_html => { :multiple => true }` work with your code.\n\n@twalpole can you also please bundle from master and confirm?\n\nI'll merge these into 2-0-stable and do a point release after I hear back\n re-opening until I've heard back\n  Right. ActionPack or Railties is fine I guess. ActionPack is closer to the truth (we leverage ActionPack's helpers a _lot_). @alsemyonov can you update this pull request?\n Thanks @alsemyonov!\n  There's definitely options.\n\nWhat are you doing so far in the view?\nWhat version of Formtastic?\n The code in 1.2.x is daunting, for sure. If you're okay with upgrading to the latest 2.0.0.rc5 or 2-0-stable or master, you get the fruits of a _lot_ of work. Namely class-based inputs which can be customised. Check out http://justinfrench.com/notebook/formtastic-2-preview-custom-inputs if you haven't already.\n\nHere's something quick, totally untested, but pretty awesome:\n\n``` ruby\n# app/inputs/date_picker_input.html.erb\nclass DatePickerInput < Formtastic::Inputs::StringInput\n\n  def input_html_options\n    super.merge(:value => object.born_at.strftime(\"%d/%m/%Y\"))\n  end\n\n  def wrapper_html_options\n    super.merge(:class => \"date\")\n  end\n\nend\n```\n\nUse like this:\n\n```\n<%= f.input :born_at, :as => :date_picker, :label => \"Date of Birth\" %>\n```\n\nThere's a tip jar somewhere around here :)\n Oh, and 2.0 will require Rails 3 or 3.1, just in case you're stuck in Rails 2.x.\n Closing for now, let me know how it goes and feel free to re-open.\n Awesome!\n  @reidab, please do send a patch for the upcoming 2.1.\n  Hi,\n\nThis seems to be a patch against the code we had in 1.2.x. Master has moved on quite a bit from this humble start with class based input declarations, inheritance, etc. Closing.\n  Would you want to customise this on a per-input basis, or app-wide?\n Rails already provides configuration for this through the i18n API, so we don't have to provide this in Formtastic. Rails looks in the `support.array.words_connector`, `support.array.two_words_connector` and `support.array.last_word_connector` keys. Closing!\n  @hypomodern Thanks for this!\n\nI don't use Mongo*, so I rely 100% on patches from the community, like this one :) Looks like these tests/mocks were added in a452caf3faff9c51da949137dece92f0462a1c5e by @ijonas, so would be great to hear from him before merging in, just in case this is an additional case, etc.\n\nI agree on the mocking, but at this point, it's a lot of work across all the tests to correct this path, for a pay-off on very occasional regressions. Perhaps someone with a bit more time than I will be motivated though!\n  Hi, what version of Formtastic and Rails? Have you recently upgraded either? Rails 3 => 3.1 changed a LOT of this stuff under the hood on us, but it _should_ be resolved with 3.1 and Formtastic master or recent RCs.\n Thanks, closing.\n  Could you send a pull request with a failing spec?\n Out of curiosity, why would you want it to be `nil` anyway?\n And yes, upgrading sounds like the win here.\n  Can we see a full stack trace?\n Hmmm, doesn't help much, but we'll see! What version of Formtastic? Rails? Mongo Mapper? Mongo?\n  My head hurts. Is there a +1 on this diff? Can anyone be bothered with a nice clean commit? :)\n Also see my comment on #675\n Er, #674\n I've pulled in the other request, closing for now. \n  Hi,\n\nIf you're currently using master (bundling from git), could you please try bundling one of the previous RC gems (e.g. 2.0.0.rc4 and/or rc3)? There have been some changes on master since rc5 shipped very much related to this part of the system, and it'd be helpful to narrow it down.\n Sure! How about a patch too :) I have an extra busy week, so any help I can get hunting this down would be great.\n @thiel, it's your bug report, and I've got a massive week at work, so if you're up for it, I'd like to defer it to you to tell me what to merge in and when. \"many thanks\" (or \"no problem\") in advance :)\n @cthiel #673's reference to check boxes input was a mistake... he meant hidden inputs. We're also not planning to merge that stuff in 'till after 2.0 most likely, so whatever is up with check boxes is new\u2026 what's the deal?\n Sorry, big week. If this request is fine to merge, I'll do it straight away.\n No, Thank you!\n  Hi James, looks good, although rather epic :)\n\nI'll be cutting a 2-0-stable branch as soon as I ship 2.0, after which we can look at merging this into master, assuming you're happy to keep polishing and rebasing here for a bit.\n\nThe only commit I think should be kept very separate or perhaps reverted entirely is the shifting of all spec paths \u2014 it's the sort of patch that needs everyone on the same page and all major branches merged in order to ease the pain. It already doesn't cleanly apply :) Is there a reason other than convention to do it?\n\nIn regards to the stuff in checkboxes, not sure exactly which TODO you mean... Which file/line?\n\nI might have to give you commit rights after this monster :D\n Re-opened, so someone gets a reminder to do some cherry-picking :)\n @fbuenemann if you're keen to get these split up and ready for pulling in, i'm keen, bu I think this one needs to be closed off\n  Since there's no tests for this (or any of our other generators), can I ask the obvious question to save myself from having to do it\u2026 have you confirmed that this runs as intended in a Rails app?\n  Please work on a patch, would love to see this in 2.1\n @sobrinho yes, as previously discussed, shifting the :input_html hash up into the top options name space works for me, as long as it's backwards compatible for a bit, which is where things get tricky :) In the meantime, there's plenty of places where we check both namespaces, so this :data sugar could be added along side the hacks we have for things like :min and :max\n  Hi, happy to see this change made for 2.0 (the class didn't exist at all in 1.2.x) if you get in quick, or in 2.1 otherwise. I would lean to making it easier to monkey-patch the method right now, because there's less chance of introducing a regression or an inconsistency (there are other places where using :class _adds_ a class rather than _replaces_ the class(es).\n  I guess you mean:\n\n``` erb\n<%= f.input :body %>\n<%= f.input :body %>\n<%= f.input :body %>\n```\n\nIn this case you should specify the ids manually like:\n\n``` erb\n<%= f.input :body, :input_html => { :id => \"post_body_using_textile\" } %>\n<%= f.input :body, :input_html => { :id => \"post_body_using_markdown\" } %>\n<%= f.input :body, :input_html => { :id => \"post_body_using_html\" } %>\n```\n\nIf its the case, this the default behavior because the id is generated based on model name and attribute name.\n You are inside a loop on `@area_maps.each`.\n\nYou can use a unique id like you used on class_name ;)\n  We need specs to not break again in future ;)\n Pulled, thanks!\n  did you updated the formtastic.css?\n I will look here but did you tried the rc4 version?\n @eetteri the issue is related to rc1. rc4 works fine ;)\n  I agree.\n\nSafari, Chrome and Firefox does not validate right yet.\n\nI'm disabling the html5 validations on every project.\n  Could you post de full backtrace?\n Fix was sent in #665, closing.\n  release placeholder... means? :)\n Done :)\n  Pulled, thanks!\n I'm working on this.\n Done: c64f967b6a2759b6177fb9b17047b36a67b403c4\n  Cold you check with 3.1.0.rc6?\n Could you check with master branch of formtastic too?\n  @mtobias the issue is that the plugin has not been updated to be compatible with Formtastic 2.x, please raise it with them, or fork the plugin and get to work :)\n  Seems good for me.\n\nWhat happens in modern browsers when step is set to any?\n According to W3C, this is the specification.\n\nThanks for submitting.\n  @EppO did you make progress on this?\n  Pulled, thans!\n  I don't remember which version we found an issue on that.\n\nCould you check with formtastic 2.0.0.rc3?\n  Could you add a test case too?\n Pulled, thanks!\n\nWhat you mean with 'each fragment'?\n\nCurrently fields are displayed like this:\n\n```\nPublished at      [year] [month] [day]\n```\n\nPassing false to label option you will get something like this:\n\n```\n                  [year] [month] [day]\n```\n\nMaybe I misunderstood the question.\n  You should implement some modules from `ActiveModel` on `ActiveMerchant::Billing::CreditCard` class to work with rails helpers ;)\n\n`model_name` came from `ActiveModel::Naming`.\n\nTake a look on documentation to get more details.\n @troessner, you can reopen the class and do something like that:\n\n``` ruby\nclass ActiveMerchant::Billing::CreditCard\n  extend ActiveModel::Naming\nend\n```\n\nThis should work if you put into an initializer ;)\n  What issue are you having?\n\nOn 27/07/2011, at 17:06, betelgeusereply@reply.github.com wrote:\n\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/pull/638\n Pulled, thanks!\n  Could you provide a fix?\n \"Save Post\" is the right label in this case.\n\nI didn't find a quickly fix here.\n\n@justinfrench, do you know something about that?\n  This is great for now, keep only relevant parts ;)\n Thanks for fixing\n  Could you submit a pull request fixing that?\n Instead of email_address you can use avatar as example\n  That's right due the HTML behavior.\n\nWhen you submit the search comments empty, a blank array will be sent instead of nothing.\n @nickurban you should use something like `array.reject(&:blank?)` in your case.\n\nBut, activerecord will do it automatically on associations.\n\nI don't remember if it can be disabled on rails helpers or formtastic.\n\nMaybe @justinfrench know :)\n  Could you remove the notification email and update the pull request?\n  It depends what you consider \"easy\" :)\n\nThere's a method called input_wrapping defined in the Html module. If you monkey patch that (or override it in a specific input by subclassing).\n\nIs that enough for you to get started, or do you need more help?\n\nJustin\n\nOn 06/04/2012, at 8:28 PM, chrisval wrote:\n\n> Hi,\n> I read a lot that there was to be a built-in wrapper customization (i.e. use td instead of li) in further versions of Formtastic, but this was months ago. Is there any easy solution out yet?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/625#issuecomment-4993440\n Hi,\n\nDo you want to do this for every input, everywhere in the app, or just for one in particular?\n\nFor monkey patching everything app-wide, you want an initializer in config/initializers/formtastic_patches.rb (remember to restart your app for the changes to take affect) with something like this:\n\n# config/initializers/formtastic_patches.rb:\n\nmodule Formtastic\n  module Inputs\n    module Base\n      module Wrapping\n        def input_wrapping(&block)\n          template.content_tag(:li, \n            [template.capture(&block), error_html, hint_html].join(\"\\n\").html_safe, \n            wrapper_html_options\n          )\n        end\n      end\n    end\n  end\nend\n\nThat's a copy-paste of the existing code, you'll want to switch the :li for a :td, and who knows what else.\n\nFor modification of an existing input (say just all :string inputs, or a special case instance of a string input, you need to put a file in app/inputs/ which subclasses and modifies an existing input. Examples:\n\n# app/inputs/string_input.rb\n\n# use with :as => :string\n\nclass StringInput < Formtastic::Inputs::StringInput\n  def input_wrapping(&block)\n    template.content_tag(:td, \n      [template.capture(&block), error_html, hint_html].join(\"\\n\").html_safe, \n      wrapper_html_options\n    )\n  end\nend\n\n# app/inputs/my_special_string_input.rb\n\n# use with :as => :my_special_string\n\nclass MySpecialStringInput < Formtastic::Inputs::StringInput\n  def input_wrapping(&block)\n    template.content_tag(:td, \n      [template.capture(&block), error_html, hint_html].join(\"\\n\").html_safe, \n      wrapper_html_options\n    )\n  end\nend\n\nThat's a quick intro to both monkey patching, customised and custom formtastic inputs. The specifics will depend on what you want to do, so you'll need to explore the code you're trying to customise.\n\nJustin\n\nOn 06/04/2012, at 9:12 PM, chrisval wrote:\n\n> Thanks for the fast answer Justin.\n> \n> Yes, monkey patching is surely what I'm looking for. But I must admit that I have no idea how to achieve that. Could you advise any document that explains that procedure?\n> Thanks in advance\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/625#issuecomment-4993796\n >  I could  use the wrapper_html => { :class => 'large' }, right?\n\nI could answer that, but I won't ;)\n\nJustin\n  @crystalin, this is your real form?\n\n``` haml\n= semantic_form_for @paint do |form|\n..\n=form.input :name\n..\n=semantic_fields_for :user do |user_form|\n...\n=user_form.input :name\n```\n\nIf yes, semantic_fields_for is wrong and should be something like:\n\n``` haml\n= semantic_form_for @paint do |form|\n..\n=form.input :name\n..\n=form.semantic_fields_for :user do |user_form|\n...\n=user_form.input :name\n```\n\nCould you post your locale file too?\n I see.\n\nCould you submit a test case?\n\nIf changing `SCOPES` and nothing breaks, that's ok.\n I will take a look tonight ;)\n @justinfrench @crystalin I can't reproduce the issue.\n\nI've changed the spec to this case but it's working fine here.\n @justinfrench your spec will fail because is wrong.\n\nThe issue is related to using semantic_fields_for inside a semantic_form_for without builder.\n\n@crystalin could you submit a test case or a fresh app having this issue?\n bumped out to 2.1 for now\n  Hi, given you're the first one to report this since the first release, can you give me an insight into why the space is causing you trouble? For most, a space between them both is fine. The same exists in 2.0, so keen to hear more about why this is causing you pain.\n @sncf Thanks\n@colinross, agreed\n  Yes buttons are awesome, no we don't have an API for them yet, yes I want one (I bumped it out to 2.1 so that we'd be ready for Rails 3.1). There's a separate issue for this, so I'll close this.\n\nIn short, you have three choices right now:\n1. monkey patch / fork formtastic to change what `f.commit_button` does under the hood\n2. use regular ERB, Rails helpers and translations to achieve the same thing yourself\n3. use what we have so far\n  Awesome work! Which open issues (if any) does this resolve? #609 seems likely based on your comments.\n  Cases are being reported where a field is not required in 1.2.x but is required in 2.0.0.x. Looks like we're falling back to all_fields_required_by_default config (true by default) in cases where we didn't before.\n  Hmmm, multiple people verified this patch before 1.2.4 was released. Can you please advise your Rails version, confirm you're using Rails 1.2.4 and confirm that you restarted your server and all those basic things after upgrading to 1.2.4?\n  If you'd like to try to patch it, I would take a look at `Formtastic::Inputs::Base::Validations#validation_max` (and min), and take a look at this line:\n\n```\nreturn (validation.options[:less_than] - 1) if validation.options[:less_than]\n```\n\nThis line is assuming that `:less_than` is a number, not a `Proc`. The code needs to be changed to something like this, which detects and calls the `Proc`.\n\n```\nif validation.options[:less_than]\n  return (...) if validation.options[:less_than].kind_of?(Proc)\n  return (validation.options[:less_than] - 1)\nend\n```\n\nThe `(...)` obviously needs filling in :)\n\nI was about to suggest another work-around may be to try `:less_than_or_equal_to`, but I think this would avoid the `- 1` error, but still result in a `Proc` rather than a useful number in the `min` and `max`.\n\nIf you wish to bypass this logic completely until it's sorted out, a custom version of `NumberInput` in `app/inputs/number_input.rb` should help:\n\n```\n class NumberInput < Formtastic::Inputs::NumberInput\n   def step_option\n     return options[:step] if options.key?(:step)\n     1\n   end\n\n   def min_option\n     return options[:min] if options.key?(:min)\n   end\n\n   def max_option\n     return options[:max] if options.key?(:max)\n   end\n end\n```\n\nBasically, it will only use min/max/step from the options, not from validations, etc.\n Yes, they're the right places to add coverage, but it could be a lot of data to set-up, so a quick hack around with `bundle open formtastic` within your app might ensure we're on the right path to start with.\n  This one seems to cause the most angst when ugly browsers to ugly things... at the moment you have to monkey patch `input_html_options` to delete the `:required` key. Maybe a config, maybe just a simpler method to money patch.\n  Hi,\n\nI think you mean Formtastic 2.0.0.rc2, right?  Rails 2.x is _not supported_ by Formtastic 2.x, and shouldn't work due to gem dependencies requiring Rails 3 or greater. Can you confirm all versions before we move on to the issue at hand?\n  @ijonas, very keen to get this in for 2.0 final, would be great if you could add some coverage to get this over the line.\n Awesome, thanks!\n  CSS bug, will look into it ASAP.\n I can't repeat this. With a plain vanilla form and nearly identical ERB (I used `[\"One\", \"Two\"]`, not `{\"One\", \"Two\"}`), with a layout that does't include any other CSS other than formtastic.css through the asset pipeline, everything JustWorks\u2122. Could you provide me with a stripped-back HTML-only test case that I can wire-up to formtastic.css to repeat?\n Also, which browser(s)?\n Ok, looks like it's a `.label` class on `.choice label` causing grief. Looking into it now. \n Please bundle from master to confirm the fix, then I'll push another rc\n  Good question! We _used to_ only work with `validates_presence_of`, but there were some issues where we had to expand to other validations, but I don't recall the specifics. My knee-jerk-haven't-thought-it-through-completely reaction is that the above validation alone should not result in a required input, but if a `:minimum` were required greater than zero, then it _would_ trigger `required?`. So, I don't think it's as simple as \"only use presence validations\", but this should be addressed.\n\nFeel like working up a patch? The specs might be a bit laborious, but the code should be a breeze after that.\n @wejrowski certainly isn't! Can you please open a new issue since this is ~8 months old? Would be good to know what version you're running and a bit about the model, etc.\n  Fun! I know you're subclassing TextInput to have your own CkEditorInput or whatever, so you could consider overriding the `:required?` method in that input so that you don't have to remember this step in the form DSL each time. I'll close this, but thanks for adding it here for people searching.\n  The extra bits are from nested models, but you would have this same problem with Rails' built-in `form_for`.  The thing you _can_ do in both cases is specify a url/route with `:url => folio_portfolio_portfolio_items` instead of relying on Rails to guess it based on the models provided.\n  The gem is simply called formtastic \u2014 the justinfrench prefix and gems,github.com server hasn't been used in years. \n  So just to clarify here... The problem is that we do provide a way for you to pass in this :default => true option, but you'd like not to have to do this on every form, so some way to set default options for semantic_form_for is desired?\n\nI can see the appeal for you, but I'm not convinced that this feature will benefit 80% of our users. Let me think about it for a bit, but in the meantime, I think you have options:\n1. Monkey patch semantic_form_for\n2. Make your own validated_form_for helper that wraps around semantic_form_for\n  Hi, just like Rails 3's `form_for` http://api.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-form_for, you actually need that `=` now. Perhaps you're on Rails 2, in which case your'e right, but the README is kept up-to-date with the rest of the code in master, and we've dropped Rails 2 support for the forthcoming Formtastic 2.0.\n\nThere's a 1.2-stable branch which would have the older README.\n  What version of Formtastic are you using?\n  Ugh, that's a bug. Fixing...\n  Awesome!\n  I noticed similar stuff when trying to upgrade Formtastic's tests to work with 3.1. Upon looking at your example, it almost feels like we've got a bug. Here's the scopes from Formtastic::I18n:\n\n```\n SCOPES = [\n    '%{model}.%{nested_model}.%{action}.%{attribute}',\n    '%{model}.%{action}.%{attribute}',\n    '%{model}.%{nested_model}.%{attribute}',\n    '%{model}.%{attribute}',\n    '%{nested_model}.%{attribute}',\n    '%{attribute}'\n  ]\n```\n\nSo I think what's happening is that the label for the :author input is trying `en.formtastic.labels.post.new.author`, falling back to `en.formtastic.labels.post.author`, and then finally `en.formtastic.labels.author`. I'm a little bit puzzled why the labels part of the scope, but we can come back to that.\n\nThe key here is that for a label, `author` is an attribute, so the problem with the above scoping is that you're also specifying `author` as a model with attributes (hence the hash).\n\nI'm wondering if you could try adding a `labels` scope to see if that clears up the problem:\n\n```\nen:\n  formtastic:\n    labels:\n      author: Author's Name\n    author:\n      name: Author's Name\n```\n\nPerhaps we can also catch this error (was it raised in Formtastic or in i18n?) and handle it better. I can't see any specific changes in i18n 0.6.0 to cause this, but I'm not an expert.\n  Hi, could you try bundling directly from master on github with the `:git` option to try out the work we've done towards Formtastic 2? The README is being prepared for the 2.0 release, but I thought it would all apply to the 1.2.3 gem as well.\n\nIf you could also provide an example from your app so I know exactly what to test for and try to expose as a bug?\n @sobrinho, I had a lot of trouble getting the i18n specs passing with symbols rather than associations on Rails 3.1, so I'm not sure where to go from here:\n- current examples (real associations) are buggy\n- previous examples (symbols naming associations) are buggy\n\nPersonally, I feel like both should work. Sounds like we need to define what we want, then figure out the path forward. If you agree both should be supported, then lets start improving the i18n specs. They're a mess.\n Ok, looks like I was wrong. I changed the i18n specs back to prove a point and they proved nothing, so I reverted the doc commit. It'd be nice if these associations _did_ work. Can someone make an issue or a pull?\n @gucki I think it was a non-issue, non-bug or red herring. If you're seeing related problems, please file a new issue.\n  You're right about the comment. Rails 2 is YAGNI, and we _do_ fallback to `all_fields_required_by_default` in `Base::Validations`, but I think switching to false by default would be a surprising change in behaviour for those few that are falling back to this case.\n\nWhat's you're motivation for false by default? What pain were you hitting?\n Formtastic 1.2.x has `all_fields_required_by_default = true`, and Formtastic 2.x should be the same. If we've introduced a bug (or feature) that's causing more forms and fields to appear \"required\", then we can look into those as a separate issue, but I'm not going to switch it over without good reason.\n\nI originally made the choice of `true` because in most cases, the owner of the website would prefer if all fields are filled in (otherwise they wouldn't be on the form).\n\nNot everyone has to agree, but that's why it's a config :) I think it's a bad idea to change the behaviour of something like this.\n\n@etehtsea, perhaps you have an old config file (with `false` which is not being picked up?) I _thought_ everything was backwards compatible, but perhaps it isn't. Would like to get the bottom of why your forms changed so much.\n I've fixed the config template in order to get a RC out soon, so I'll close this issue. Definitely keen to open new issues when you can pinpoint them @etehsea\n  Is merging this going to add boatloads of noise to my commit history? :)\n  You could validate the presence of the association instead (what I do), or, I guess we need some more code to go look at an association input's foriegn key and check for validations there too. Are you keen to work up a patch?\n Someone has patched to remove that comment about Rails 3 in #581. I agree that booleans should not be required by default. Since there's a pull request #580 open with the patches, I'll close this issue and we can continue any discussion there.\n  This is \"by design\" (the behaviour you're describing is as it's documented and tested to work). It's purpose is _mainly_ to render errors on `:base` out of the box:\n\n```\n# Renders errors on :base\n<%= f.semantic_errors %>\n```\n\nIn addition, you can optionally pass in other attributes you want to also render errors for. The use case was (if I recall correctly) that Attachment Fu or Paperclip had file upload errors on other attributes that weren't represented by form inputs.\n\n```\n# Renders errors on :base *and* on :something special\n<%= f.semantic_errors :something_special %>\n```\n\nSo, you're example above is, not surprisingly, rendering the errors on `:base` twice.\n\nThis causes me to wonder:\n1. were you getting different results in Rails 3.0, or is this a fresh app?\n2. what were you expecting semantic_errors to do differently?\n\nThe only code change I can think of is to drop :base from the list if it's been passed in as an arg like the example above, removing the duplication. I'll work on that, please get back to me on the rest @tanman726.\n  `region.inputs ...` should be `region.input...`\n  Should be easy to modify CountryInput to look for `localized_country_select` as well as just `country_select`, assuming they both have the same or similar params and options.\n @t0ben does the plugin you're suggesting still \"work\" with Rails 3.1 and all the new toys? If so this is an easy addition. If not, well, there's no point :)\n  Formtastic is opinionated about it's markup choices. There's no _easy_ or _configurable_ way to change the mark-up, but since you're using master, it is now much easier than it used to be. You don't need to rewrite the whole of `check_boxes_input.rb`, but you will need to create a custom input which subclasses `CheckBoxesInput` and override a few methods that generate the mark-up.\n\nFor starters, read my blog post that gives a quick overview of the custom inputs framework we now have in place:\nhttp://justinfrench.com/notebook/formtastic-2-preview-custom-inputs\n\nNext, look at `check_boxes_input.rb` `#to_html` and you'll see that there's a few methods there that are doing most of the lifting, like `choices_wrapping` (the `<fieldset>`), `choices_group_wrapping` (the `<ol>`). Both of these are in `Base::Choices`. There are some other methods you'll need to override for labelling, etc, but this is the only way to do this stuff in Formtastic.\n\nWhilst it's _possible_, I'd like to point out that this is edge software and you're basically redefining methods and APIs that may change (I haven't figured out what's public and private yet), so it might be a bumpy road before 2.0 ships.\n\nUltimately, this is your call. if it's worth changing the mark-up, there's a way. For me, I find `<fieldset>` and `<legend>` a much better semantic fit, and ultimately, all this stuff is just block elements that can be styled however you like. The mark-up just isn't that important, as long as there's enough styling hooks.\n\nI'm closing this issue because \"simple, configurable mark-up choices\" really isn't on the radar now. Custom inputs and simple, well-structured methods that can be overridden is where we're at.\n  Hi, I've been working on this. Are you using master or 1.2.3? Was this a working screen before you upgraded?\n\nYou can try this short-term:\n\n```\n<%= f.fields_for @user, :builder => YOUR_BUILDER do |user_fields| %>\n```\n\nWhere `YOUR_BUILDER` is probably `Formtastic::SemanticFormBuilder` (1.2.3) or `Formtastic::FormBuilder` (edge).\n\nPlease get back to me with version details, etc.\n I filed this as a Rails issue in the old Rails Lighthouse tracker just before it got closed down. I grabbed @josevalim on chat last night, and he's re-opened the issue:\n\nhttps://github.com/rails/rails/issues/1045\n\nI don't know what the outcome will be, but ideally, this is a Rails issue. Both Simple Form and Formtastic will have this same issue since we wrap fields_for in a similar way.\n So I've been thinking about this. We can detect Rails 3.1 and wrap everything differently. Anyone keen? How about a patch for Rails? @sobrinho @josevalim\n @sobrinho, which specs are failing for you? I've been trying to look into this this morning with Rails 3.1.0.rc4 and Rails 3.1.0.rc1, and actually couldn't find a failing spec. I have an idea what to hack in to make it work though!\n Ok, I think I've got half of a crazy-ass Frankenstien patch in progress. In Formtastic::Helpers::FormHelper detect which version of Rails it is and use class_eval (or something nicer perhaps) to dynamically define a method that fits the method signature of that Rails version (3 vs 3.1).\n\nSame thing will have to happen in tests, to test using the right sig.\n\nThis allows `semantic_fields_for` to have the same API as `fields_for` in whatever version of Rails you're using. \n\n@sobrinho is this worth me going forward and trying to work up a patch?\n Yup, I'm working on the first version, will see how I go. Didn't think about RDoc/Yard but I'll see what happens.\n  Master or 1.2.3? Someone spotted that regression straight away, so it should have been sorted.\n Re-opening, would like to ensure this is fixed in 2.0.\n @mehigh the value of the checkbox input should be \"1\", but if your model has a value of \"0\" on the attribute, then yes, that should not be checked. The trouble is I haven't been able to reproduce this test case in the specs, so any info you can provide would be great.\n\nIf you have RVM, could you try switching to 1.8.7?\n\nFinally, Formtastic 1.2.3 (the latest stable gem) is a long way from master, so you could also try bundling directly from git on the master branch with the `:git` option to see if the bug still exists in master.\n @mehigh Just re-read your comments. You're using the gem (1.2.3), so it'd be great if you could try 1.2.4.beta2 (which I want to release a final for in the next 24hrs). 1.2.4.beta2 contains a2d6a09 \"Use check_box_checked? from Rails for boolean inputs\", which I believe fixes the bug you're experiencing.\n\nShifting this issue into 1.2.4 milestone and closing. Please feel free to re-open if the beta or 1.2.4 final doesn't help you.\n Awesome!\n   @colinross, yeah, this was a memory-jogger for me. We're \"compatible\" already. What we can do, however, is shift the generator template into public so that the asset pipeline picks them up and effectively deprecate the generator that copies stuff into the app's public dir. That's the first win, although I want to make sure people can easily opt-out of formtastic.css before committing. Just need to look into sprockets a bit more.\n\nShifting to SASS would be a separate issue (we can take advantage of variables mostly), but there really isn't a massive win with SASS with the direction I'm trying to push the CSS (simple class selectors with very little scoping/nesting).\n  Hi Trevor, this is great work, but I'm not sure I want to open this can of worms. I think this is something a developer would add to their own app if necessary, rather than us committing to maintaining translations for N languages ourselves. Rails doesn't ship with multiple translations out-of-the-box, right?\n\nAnyone with a differing opinion before I close this?\n How about a wiki page that links to (or even embeds?) bunch of gists? I'm going to close this for now, but please do find room on the wiki!\n  Nice.\n- Should we support this in SelectInput as well? (do we already?)\n- Should `choice_options` be renamed to `choice_html_options` for consistency?\n- Can we make it clearer what `choice_options` is doing?\n\nPerhaps the following?\n\n```\ndef choice_html_options(choice)\n  custom_choice_html_options(choice).merge(default_choice_html_options(choice))\nend\n\ndef default_choice_html_options(choice)\n  { :id => choice_input_dom_id(choice) }\nend\n\ndef custom_choice_html_options(choice)\n  (choice.is_a?(Array) && choice.size > 2) ? choice.last : {}\nend\n```\n\nWould also like to see some documentation. Awesome awesome start, thanks for pitching in, can you drag it over the line please?\n Awesome, let me know when it's ready to roll.\n Found some time on the train, did it myself :)\n\nFeel free to chip in with the TODOs, etc as separate pulls, but thanks for your help so far!\n  Looks great! It'd be good to get a +1 on the JS because I'm not a JS geek. Is it worth us considering leaning on (or recommending, or vendoring) a polyfill like https://github.com/amiel/html5support instead of building up a bunch of JS we need to maintain?\n For the record, _if_ it's appropriate for us to provide JS libraries, I'm totally in favour of betting the farm on jQuery:\n- Rails 3.1 sends a clear signal, which was based on developer/community sentiment\n- We're only providing fallbacks at this stage which you can choose to use\n- You are in control of your own app \u2014 you don't have to include the JS supplied by Formtastic\n\nIn the spirit of this, jQuery is fine with me, but let's not build stuff that _requires_ our specific scripts to work. We should be a good app citizen. There's no way we'll be shipping multiple libraries to support multiple JS frameworks, and I'm not scared of having an opinion, as long as we don't force everyone to drink the koolaid.\n\nI know @sobrinho has some ideas with regards to JS too. If there's a way we can modify this pull to exclude the JS component for now, I'll happily accept the rest of this and let the JS nerds get together and come up with a strategy.\n\n@benschwarz Yes, there's plenty of other 'new form' features we can support, many of which are logged as issues for the 2.0 release. Feel free to review, add to them, etc. We want them all, @trimentor wanted this one, so it's awesome he was motivated to make a patch. Feel free to make the ones you think are top priority :D\n Is there another Rails plugin/engine that has already considered some of this stuff that we can learn from?\n @jackdempsey thanks for the insight on what's working for you\n I did it myself :)\n  Pretty sure this is covered now, closing.\n  The li elements SHOULD be enclosed in uls, so what situation were you in that this wasn't true? Can I see an example form or HTML markup?\n  Hi this looks good, thanks for getting your hands dirty and figuring it out. Happy to pull it in as soon as there's some spec coverage so that we ensure this continues to work in the future. Bonus points for documentation (or at least checking if any is required)!\n Any progress?\n  I've recently made the change to hidden in master too.  Closing, thanks. \n  Yes, we try various other methods first, like to_label. You can also specify the method per input with the :lable_method option (which also does some other cool stuff). Check the README or docs for further info:\n\n```\nf.input :foos, :as => :select, :label_method => :name\n```\n\nIf you're bundling from master (rather than the gem) we've renamed and deprecated :label_method to :member_label.\n @baash05 `:label_method` was renamed to `:member_label`. See the `input` documentation: http://rdoc.info/github/justinfrench/formtastic/Formtastic/Helpers/InputHelper#input-instance_method\n  ## LinkedIn\n\nEu gostaria de adicion\u00e1-lo \u00e0 minha rede profissional no LinkedIn.\n-Gabriel\n\n## Gabriel Sobrinho\n\nBrasil\n\nConfirme que voc\u00ea conhece Gabriel Sobrinho\nhttps://www.linkedin.com/e/xmmgo-gqgok27p-59/isd/3630201372/qh0-THOO/\n\n## \n\n(c) 2011, LinkedIn Corporation\n  I know that there's some really lazy \"mock the whole word\" stuff in here, and I know we're doing a lot of rendering, but if someone with some experience in profiling ruby can figure out where the biggest bottlenecks are and find some quick wins to speed things up, that'd be fantastic.\n\nMaybe it's a performance issue in the code, but I suspect it's more likely an issue in the mocking and stubbing that takes place before each spec. They never used to be this slow, and I find it surprising given there's no database or filesystem calls.\n @jwinter this is awesome! So, is there a way to manage GC better ourselves in MRI187? Perhaps something like http://makandra.com/notes/950-speed-up-rspec-by-deferring-garbage-collection\n\nStubbing doesn't surprise me (every model for every scenario is stubbed), so I should have a look at how much stuff we stub on every scenario (then evaluate), and how much is just done at the start of the suite (and if it can be done better).\n Wow, just applied the DeferredGarbageCollector patch above:\n\n```\n# before\nFinished in 178.55 seconds\n1148 examples, 0 failures\n\n#after\nFinished in 66.23 seconds\n1148 examples, 0 failures\n```\n\nThat's a start!\n Looking into stubs and mocks, there doesn't seem to be a \"faster\" way in rspec. There are ways to stub more than one method on an object at a time, but under the hood, those methods simply call the singular stub method, so I can't see how there's much if any to gain.\n\nThe win is probably much harder...\n1. more mock objects set up once properly for re-use in different scenarios without re-stubbing the same stuff over and over again\n2. moving some of the things we repeatedly stub up into the base objects (Post, Author) as real instance and class methods\n\nBoth doable, but I'm not sure if it's worth the pain.\n `Object#localized_string` has me baffled. We have a method name `#localized_string` (and I'd bet good money it's very slow), but I can't see where it would be included in `Object`. It's included in a few other classes, so perhaps these are aggregated together as one item in the PDF?\n I find things are mostly fast enough for 2.0 good to keep bringing it down, but no urgency.\n  Pretty sure radio inputs accept an array of true/false:\n\n```\n<% f.input :include_cover, :as => :radio, :collection => [true, false], :label => \"Cover?\" %>\n```\n\nYou'll need a :cover column (or virtual attribute) on the model to make that work.\n\nClosing for now, feel free to re-open.\n  Merged in, closing.\n  What version of Formtastic? 1.2.3? master?\n You can test with master rather than 1.2.3 by changing your Gemfile to bundle direct from master with the :git option.\n\nFormtastic definitely expects you to be using the association name (:scale, rather than :scale_id). You could change your test as follows:\n\n```\ndef test_should_be_valid\n  attributes = {}\n  attributes[:name] = \"must_be_set\"\n  attributes[:scale] = Scale.first # or some other persisited Scale object\n  assert Modificator.new(attributes).valid?\nend\n```\n\nAnd obviously change/add your validation on :scale as well.\n\nClosing for now, please feel free to re-open.\n  Could you submit a pull request?\n\nSwitching to gemspec generated by bundler would be great :)\n Happy to have the test suite included if it's usefull (it was excluded because I couldn't see any reason to include it), but I'm not going to do the work any time soon . Will happily accept a pull request, closing for now.\n  Pulled, thanks!\n  Doing this now. Also renaming :group_value_method to just :group_value, although I'm thinking about deprecating that bad boy.\n  I'm lost on this one now after such a break... the work I have so far is in the range-input branch. Is your patch against that branch, or is it a patch against whatever is in your own fork (which I think would have diverged a lot)? If possible, a clean patch against range-input (if it isn't already) would be great. I'll grab it and merge the branch into master for any final tweaks.\n Also realised I have a \"WIP\" commit locally that I haven't pushed to the remote. I'll just paste it here rather than pushing up something half complete:\n\n```\ncommit fe430920eb4ab0820319c43c85181c923f84baf4\nAuthor: Justin French <justin@indent.com.au>\nDate:   Sun Apr 10 20:41:26 2011 +1000\n\n    WIP\n\ndiff --git a/spec/inputs/number_input_spec.rb b/spec/inputs/number_input_spec.rb\nindex cac3911..ae12a2e 100644\n--- a/spec/inputs/number_input_spec.rb\n+++ b/spec/inputs/number_input_spec.rb\n@@ -68,19 +68,35 @@ describe 'number input' do\n       ])\n     end\n\n-    it \"should add a max attribute to the input one greater than the validation\" do\n-      concat(semantic_form_for(@new_post) do |builder|\n-        builder.input(:title, :as => :number)\n-      end)\n-      output_buffer.should have_tag('input[@min=\"3\"]')\n-    end\n-    \n-    it \"should allow :input_html to override :min\" do\n+    it \"should allow :input_html to override :min from validation\" do\n       concat(semantic_form_for(@new_post) do |builder|\n         builder.input(:title, :as => :number, :input_html => { :min => 102 })\n       end)\n       output_buffer.should have_tag('input[@min=\"102\"]')\n     end\n+    \n+    describe \"and the column is an integer\" do\n+      before do\n+        @new_post.stub!(:column_for_attribute).with(:title).and_return(mock('column', :type\n+      end\n+      \n+      it \"should add a max attribute to the input one greater than the validation\" do\n+        concat(semantic_form_for(@new_post) do |builder|\n+          builder.input(:title, :as => :number)\n+        end)\n+        output_buffer.should have_tag('input[@min=\"3\"]')\n+      end\n+    end\n+    \n+    describe \"and the column is a float\" do\n+    end\n+    \n+    describe \"and the column is a big decimal\" do\n+    end\n+    \n+    describe \"and there is no column\" do\n+    end\n+    \n   end\n\n   describe \"when validations require a minimum value (:greater_than_or_equal_to)\" do\n```\n Ok, I'm trying to finish this off today.\n I have a working NumberInput spec, haven't looked at RangeInput yet. The major change is to raise `IndeterminableMinimumAttributeError` if the validation is a `:(less|greater)_than` and there's a DB column and the column is a `:float` or `:decimal`.\n\nThis means that a form with no object (`semantic_form_for :post`) won't raise, nor will a form for an object without a database column, nor will a NumberInput for a `:string` DB column, etc.\n\nIn other words, I'm trying to target a very specific problem of :(less|greater)_than`with a ':decimal' or`:float`.\n\nMore news as it comes to hand!\n It makes sense for a RangeInput to have a min of 1, max of 100, step of 1. Does it make sense for a NumberInput to have defaults similar to this? I don't think so, but I'm asking any way.\n I've deleted the range-input branch. Any further changes can be done in master with new issues/pulls.\n  @tenaciousflea Any progress? Were you able to resolve this bug?\n Awesome, closing!\n  Ok, looks like there's still no fix (and not much noise about this) online. Was able to repeat the issue in FF4, and was able to resolve the issue by changing the overflow hack to `overflow:hidden`, which seems to be acceptable according to [this article on Quirks Mode](http://www.quirksmode.org/css/clearing.html).\n  @phurni the refactor is merged into master and pretty stable... any chance you can help with a fork and sending a clean pull request?\n Actually, `form_for :booking, @booking` is deprecated in Rails 3.1, so I'm not sure it's worth the effort. This is what I saw when I tried to create a test case:\n\n```\nUsing form_for(:name, @resource) is deprecated\n```\n\nSo I think we should just close this and move on. Feel free to re-open if you disagree.\n  ## LinkedIn\n\nEu gostaria de adicion\u00e1-lo \u00e0 minha rede profissional no LinkedIn.\n-Gabriel\n\n## Gabriel Sobrinho\n\nBrasil\n\nConfirme que voc\u00ea conhece Gabriel Sobrinho\nhttps://www.linkedin.com/e/-2nt2pf-gqgok462-20/isd/3630201629/J5HP7SeL/\n\n## \n\n(c) 2011, LinkedIn Corporation\n  @justinfrench take a look if your i18n gem have the same version in all cases.\n\nI will take a look on this but seems like a different version of i18n gem across cases.\n I haven't looked at this since your last comment. Please have a look if/when you have time.\n For the record, I think I just encountered this bug in a Rails 3.0.7 project with Formtastic 1.2.3.\n Hmmm. In 3fc58a4 (1.2-stable) we changed to depend on i18n ~> 0.4. Since stable is \"ok\" and 1.2.3 is \"broken\", I've pushed up 1.2.4.beta2 gem with this i18n change and some other stuff. @mogelbrod, could you please bundle this gem version and confirm this corrects your issue? I'll close and push the final gem if I haven't heard anything in a week or so.\n Closing due to inactivity.\n  Okay, I've got a failing spec. Going hunting.\n This was a massive massive rabbit hole of fail. I've got a commit that I'm about to push up with a fix. Would love some help testing it, because the code was so horribly wrong and the tests so lacking that I have no idea how it ever worked (or what I've broken).\n\nI'll leave it open until you've had a chance to test.\n Hah! Actually, I'm closing this... the original bug report is covered in tests. Re-open if needed!\n  So, the biggest question I have is how to cater for this in the DSL? Until we have this defined, I'm going to bump it out to a future release. Since `:label` is taken to mean \"the thing on the left, which might be a label or a legend, except for boolean/checkbox inputs\", it might be pretty hard :)\n @sobrinho I've seen a few examples on my current project where I want this. One that comes to mind is terms:\n\n```\nEmail:  [_______]\nTerms:  [_] I accept your draconian terms of service and privacy policy\n```\n\nThe client thought the layout of the form was a bit off balance and that the boolean input got a bit lost without the label on the left as well.\n\nI'm pretty convinced there's a need, I just don't know how to provide it with the API.\n\nDefinitely no hurry now that @tomsquest could make a custom subclass of BooleanInput, which is why I bumped out to 2.1.\n Closing due to lack of activity.\n  Forget what I said... This is not the best way to work with this situation.\n\nI think we need to skip the polymorphic associations on quick forms and raise a exception short hand and block forms.\n  Rails 3.1 actually takes care of this for us. Closing.\n  I'm trying to figure out when this is a real use case. Why _isn't_ `genres` an association? How is this persisted the the database? I feel like there's a bad smell here, or perhaps I'm missing something about the bigger picture.\n People still serialize things? ;)\n Good news! Should be easy to re-fork, add tests for coverage, then tweak the code so that both cases work. I'll close this pull-request for now because it won't apply cleanly. Free free to re-open if you disagree.\n  Closing this because I can't see any issues right now. Specific bugs would be better.\n  This should be fixed by #545, closing, please re-open if not correct.\n  @gabeodess I believe this issue was around `:boolean`, not `:check_boxes`, but the other answer is \"you're missing the documentation\" :) The docs for CheckBoxesInput (whilst it could be better) shows that `:disabled` is a top-level option, rather than an `:input_html` option. It's a little confusing, but I think this was because you can pass in an array of options to be disabled. http://rdoc.info/github/justinfrench/formtastic/Formtastic/Inputs/CheckBoxesInput\n\n> :disabled can be used to disable any checkboxes with a value found in the given Array\n> <%= f.input :categories, :as => :check_boxes, :collection => [\"a\", \"b\"], :disabled => [\"a\"] %>\n  @dmitry any chance you want to work this up as a patch? I'm not particularly motivated with everything else I'm trying to do, but I don't want to leave this issue open on the vine forever. A pull request against master would be awesome. Closing for now, please feel free to re-open or send a pull-request.\n  Having thought about this for a while, I'm not inclined to add more features and support here, given there are already two support approaches in Formtastic that can work-around this:\n1. subclass SelectInput as AuthorInput or BookAuthorInput and add in the relevant changes or patches\n2. pre-build a HTML string of option tags with the title attributes added, and pass that into :collection as a string instead of an enumerable\n  Sorry for the lag on this, but given you're outputting a grid of checkboxes, there's probably no room for labels (as already stated), but also no room for error messages, or hints, or any of the other stuff that formtastic requires. So it begs the question...\n\nWhy don't you use a regular Rails check box helper for this part of the form?\n\nClosing for now, please feel free to open if I've missed something.\n  Closing due to a lack of response from the original poster.\n  I've added documentation as suggested. We're toying with the idea of moving all the input_html / button_html options up to the same namespace as the options, which would ultimately result in the same API as what your patch was aiming for.\n  Yup, happy to remove if we take the simple form approach. Who has time to do this for 2.0?\n  Ok, Rails 3.1 will have the asset pipeline, so I'm inclined to suggest this is a short term problem. There'll be an upgrade doc/post for 1.x => 2.x, Rails 3.1 is a RC this week, and this stuff will be a thing of the past very soon.\n  All done, closing!\n  Am going to bump this out of 2.0. Custom inputs would allow ultra-keen people to make their own, and it means we won't have to dig into javascript. Long term, ideally we just provide the mark-up and someone else provides the polyfill (or writes their own). This feature of HTML5 has ultra low browser support, so not in any hurry. \n I agree, we should pump out mark-up, browsers will do what they do, developers can pollyfill the gaps. I was originally keen on a bunch of out-of-the-box JS and UI, but see my most recent comment above.\n  I'm currently taking the approach that we provide great markup and developers can pick their own pollyfills and scripts to fill in the blanks, but there's bound to be a few areas where we want to provide JS eventually.\n I'm cooking up something here. Will report back after a few commutes worth of hacking :)\n Actually, there's a bit of work and testing to do this right, with the right attributes, etc for browsers that actually render `<input type=\"date\"> etc. Bumping out to 2.1 so I can do it right. There's easy work-arounds for now.\n @ddosen sobrinho's example above using a string input with a jQuery date picker is a perfect example. \n I still have a branch with this and a plan. I'm not satisfied with the current date & time inputs in Formtastic, so the plan is to rename them, add new ones which are more HTML5-like and easier for people to enhance with jQuery or whatever JS tool they like, but not actually add the JS support ourselves. One day!\n @SNlsn the plan is just to render the appropriate HTML (like `<input type=\"date\">`) and then let the designer/developer apply jQuery or whatever else for a fallback in browsers that don't do anything special. We won't be implementing our own calendar widgets, our own JS, and more complicated CSS \u2014 it's too hard to support, and the opinions vary too widely. Hope this doesn't damped your expectation too much :)\n These have been implemented in master, closing.\n  Closing. I'm not motivated to do it, if someone is, they'll do it regardless of this issue being open for ~6 months.\n  @warden I don't understand your issue. `semantic_fields_for` is a dumb wrapper around `fields_for`, and your first example (`@task.task_details.each`) is in line with the Rails documentation for `fields_for` (ie, `fields_for` doesn't iterate over the members of the association collection for you).\n\nI _think_ this issue was correcting an issue in the Formtastic-only DSL `f.inputs :for => :task_details`, which _does_ iterate over the members of the association.\n\nI'd like to leave this issue closed, but please re-open if I've missed something. If you have a new issue to raise, please do so in a new ticket. Many thanks.\n @warden which Rails version? Which Formtastic version? Can you please provide two code snippets that illustrate the differences between `semantic_fields_for` and `fields_for`? Will happily re-open or create a new issue with this information.\n :)\n  @ryanchuleff can you try bundling from master? If it's still a problem, please file a new issue. There was a related issue raised on 2.0.2 which I believe is resolved in master.\n  Still not in the foreseeable future :) The only way this will happen is if we become fully markup agnostic (I made some strides towards this in 2.0's CSS and code) \u2014 I'm not going to _change_ the markup between releases any more than I have to. \n  @jibiel:\n1. it does support i18n, and has done so as long as we've had i18n (before 1.0), and [the documentation for comit_button](http://rdoc.info/github/justinfrench/formtastic/Formtastic/Helpers/ButtonsHelper#commit_button-instance_method) documents that you can pass in a key (symbol) instead of a string to the :label option\n2. it doesn't use the standard Rails i18n keys (can't remember the reason why), and I know we're a bit light on documentation, but there's the same `:update`, `:create` and generic `:submit` keys (and a few more), within a different scope (`formtastic.actions`), all of which is documented in the README\n\nPlease start a new issue if you're still having problems, rather than hijacking this mostly unrelated thread.\n  I've made some changes in formtastic.css to style these by class name rather than by the tag, and the code for rendering a specfic tag is now well abstracted to a simple method `Formtastic::Inputs::Base::Errors#error_html` which will allow people to make a simple monkey patch (or even do some sub-classing with custom inputs) to change from a `<p>` to a label or whatever else, but I think I'm going to pass on changing the actual tag itself in 2.0. Bumping to 2.1 for now.\n  @colinross a while back I fleshed out a DSL for many types of buttons other than just the current commit button (which uses a submit input under the hood). a full button DSL should allow `input`, `button` and `a` markup for different tasks, allow for other actions (cancel, reset, commit, even save_and_continue_editing), and provide enough mark-up hooks for \"pretty buttons\"-style CSS visuals.\n\nI actually had a fully working version from an epic hack session at RailsCamp in a branch, but wasn't 100% happy. I either need to bring that branch up to scratch, or start-over.\n\n   f.button :commit, :as => :input\n   f.button :commit, :as => :button\n   f.button :commit, :as => :link\n   f.button :cancel, :as => :link\n   f.button :reset,  :as => :button\n\nEtc :)\n Formtastic 2.1 I hope. I bumped it out of 2.0 because I wanted to be ready and stable for Rails 3.1.\n\nRails has button helpers and of course you can make your own with raw HTML. Formtastic doesn't provide a DSL for it however.\n", "text_all_count": 15565, "text_word_token": ["There", "s", "nothing", "in", "Formtastic", "specifically", "and", "I", "m", "not", "sure", "I", "want", "to", "add", "any", "more", "magic", "right", "now", "but", "this", "should", "work", "TAG", "select", "collection", "User", "NUMBER", "validators_on", "role", "NUMBER", "map", "v", "v", "NUMBER", "options", "in", "NUMBER", "flatten", "NUMBER", "compact", "Closing", "for", "now", "Would", "love", "to", "see", "a", "pull", "request", "for", "this", "This", "be", "most", "likely", "the", "same", "problem", "as", "NUMBER", "that", "you", "mention", "above", "so", "can", "we", "please", "consolidate", "our", "efforts", "there", "instead", "Thanks", "for", "documenting", "the", "interim", "work", "around", "NUMBER", "Closing", "NUMBER", "Assuming", "you", "have", "the", "latest", "stable", "version", "TAG", "TAG", "button", "TAG", "link", "TAG", "LINK", "LINK", "TiagoCardoso", "NUMBER", "This", "was", "not", "a", "deliberate", "regression", "although", "Formtastic", "has", "never", "intentionally", "support", "or", "documented", "strings", "instead", "of", "symbols", "NUMBER", "What", "previous", "version", "of", "Formtastic", "did", "this", "work", "for", "you", "This", "will", "help", "me", "narrow", "down", "the", "change", "and", "understand", "it", "NUMBER", "conradwt", "There", "s", "no", "upgrade", "documentation", "as", "such", "but", "there", "be", "the", "following", "a", "CHANGELOG", "LINK", "which", "note", "the", "deprecation", "and", "what", "replaced", "it", "and", "the", "removal", "in", "a", "more", "recent", "version", "documentation", "LINK", "although", "the", "documentation", "for", "the", "actions", "DSL", "seems", "to", "be", "hidden", "right", "now", "bug", "but", "it", "can", "be", "viewed", "in", "the", "source", "for", "ActionsHelper", "LINK", "_helper", "NUMBER", "rb", "and", "ActionHelper", "LINK", "_helper", "NUMBER", "rb", "I", "ll", "leave", "this", "open", "until", "I", "resolve", "why", "those", "be", "miss", "from", "the", "generate", "documentation", "NUMBER", "Feel", "free", "to", "create", "a", "wiki", "page", "for", "the", "upgrades", "you", "need", "to", "do", "NUMBER", "Documentation", "be", "fix", "in", "master", "LINK", "LINK", "budu", "you", "should", "have", "seen", "warnings", "in", "your", "test", "and", "in", "your", "server", "logs", "if", "you", "were", "run", "the", "version", "s", "that", "include", "the", "deprecation", "NUMBER", "If", "you", "want", "to", "bundle", "in", "that", "specific", "version", "and", "confirm", "happy", "for", "you", "to", "re", "open", "this", "ticket", "and", "I", "ll", "look", "deeper", "but", "the", "deprecation", "stuff", "be", "straight", "out", "of", "Rails", "and", "well", "test", "elsewhere", "NUMBER", "Closing", "for", "now", "Did", "you", "try", "it", "It", "should", "work", "if", "it", "doesn", "t", "that", "s", "a", "bug", "and", "I", "d", "love", "to", "see", "a", "patch", "pull", "request", "NUMBER", "formtastic", "form", "Post", "copy", "template", "engine", "haml", "be", "the", "correct", "syntax", "and", "I", "ve", "just", "commit", "code", "to", "correct", "the", "docs", "and", "coverage", "for", "this", "in", "the", "future", "Hi", "thanks", "for", "file", "this", "it", "will", "be", "helpful", "to", "others", "NUMBER", "I", "think", "I", "d", "prefer", "to", "err", "on", "the", "side", "of", "requiring", "things", "to", "be", "marked", "as", "html_safe", "like", "you", "did", "than", "to", "assume", "something", "be", "safe", "NUMBER", "michelson", "there", "s", "nothing", "in", "default", "formtastic", "looks", "good", "michelson", "I", "don", "t", "think", "so", "either", "but", "it", "s", "great", "that", "others", "will", "be", "able", "to", "find", "it", "here", "ollym", "I", "think", "this", "be", "too", "details", "for", "an", "issuem", "can", "you", "try", "the", "google", "group", "or", "perhaps", "stack", "overflow", "I", "think", "it", "d", "be", "helpful", "if", "you", "could", "provide", "minimal", "details", "of", "each", "model", "and", "a", "wireframe", "of", "the", "form", "you", "re", "after", "NUMBER", "Closing", "for", "now", "NUMBER", "KeysetTS", "surely", "this", "be", "an", "issue", "with", "formtastic", "bootstrap", "LINK", "bootstrap", "not", "formtastic", "as", "we", "don", "t", "offer", "any", "support", "for", "bootstrap", "yet", "NUMBER", "Closing", "NUMBER", "Many", "thanks", "corny", "Thank", "you", "have", "be", "meaning", "to", "do", "that", "forever", "ollym", "if", "only", "I", "had", "endless", "time", "or", "corporate", "sponsorship", "ollym", "it", "_might_", "be", "a", "much", "better", "default", "in", "general", "but", "again", "there", "would", "be", "a", "LOT", "of", "work", "involved", "in", "support", "it", "not", "to", "mention", "it", "s", "a", "non", "trivial", "change", "that", "would", "be", "backwards", "incompatible", "NUMBER", "ollym", "I", "think", "you", "re", "optimistic", "as", "date_picker", "as", "time_picker", "as", "datetime_picker", "as", "datetime_picker", "local", "false", "Does", "not", "include", "any", "extra", "CSS", "or", "JS", "for", "rendering", "non", "native", "calendar", "widgets", "and", "won", "t", "NUMBER", "Some", "browsers", "already", "have", "support", "others", "can", "be", "polyfilled", "with", "the", "UI", "and", "JS", "libraries", "of", "your", "choice", "NUMBER", "sobrinho", "take", "a", "look", "sobrinho", "I", "have", "a", "separate", "pull", "which", "renames", "date", "to", "date_select", "and", "leaves", "date", "as", "an", "alias", "subclass", "NUMBER", "These", "ones", "be", "date_picker", "etc", "so", "theres", "no", "compatibility", "issue", "or", "naming", "clash", "NUMBER", "In", "a", "major", "version", "bump", "we", "could", "alter", "Date", "to", "alias", "DatePicker", "instead", "of", "DateSelect", "and", "I", "guess", "we", "could", "offer", "a", "confiuration", "right", "now", "to", "prefer", "the", "picker", "inputs", "over", "the", "select", "inputs", "out", "of", "the", "box", "for", "date", "database", "columns", "etc", "NUMBER", "be", "that", "what", "you", "had", "in", "mind", "as", "date", "becomes", "as", "date_select", "as", "time", "becomes", "as", "time_select", "as", "datetime", "becomes", "as", "datetime_select", "newly", "named", "inputs", "have", "a", "different", "css", "class", "on", "the", "wrapper", "li", "NUMBER", "date_select", "etc", "exist", "date", "time", "datetime", "still", "work", "with", "original", "css", "wrapper", "class", "deprecate", "exist", "inputs", "with", "warning", "date", "time", "and", "datetime", "database", "columns", "now", "map", "to", "these", "new", "selects", "CHANGELOG", "This", "paves", "the", "way", "for", "a", "DatePickerInput", "etc", "to", "be", "introduce", "with", "less", "confusion", "and", "potentially", "defaulting", "DateInput", "TimeInput", "and", "DatetimeInput", "to", "the", "HTML", "NUMBER", "date", "picker", "version", "in", "a", "future", "release", "NUMBER", "sobrinho", "yabawock", "haines", "twalpole", "care", "to", "take", "a", "look", "Hi", "Could", "you", "check", "if", "this", "same", "error", "occur", "with", "ActiveRecord", "or", "if", "it", "s", "isolated", "to", "Mongoid", "or", "something", "else", "in", "your", "model", "Justin", "On", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Jason", "Waldrip", "write", "I", "have", "two", "models", "as", "follows", "ruby", "class", "User", "include", "Mongoid", "Document", "has_one", "contact", "autosave", "true", "NUMBER", "end", "class", "Contact", "include", "Mongoid", "Document", "belongs_to", "user", "contact", "information", "for", "user", "NUMBER", "end", "In", "my", "form", "I", "have", "the", "following", "code", "NUMBER", "haml", "semantic_form_for", "user", "html", "class", "form", "horizontal", "do", "f", "f", "NUMBER", "input", "contact", "as", "select", "It", "be", "giving", "me", "an", "error", "of", "undefined", "method", "user_id", "for", "TAG", "Is", "there", "something", "special", "I", "need", "to", "be", "doing", "here", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "jwaldrip", "Thanks", "looking", "into", "it", "NUMBER", "jwaldrip", "There", "s", "no", "test", "coverage", "in", "select_input_spec", "NUMBER", "rb", "and", "no", "mention", "of", "has_one", "in", "the", "documentation", "for", "SelectInput", "so", "I", "m", "not", "sure", "this", "was", "ever", "support", "NUMBER", "Looks", "like", "the", "code", "be", "recognising", "that", "contact", "be", "an", "association", "hence", "not", "just", "rendering", "a", "string", "but", "not", "that", "it", "s", "a", "has_one", "association", "which", "needs", "to", "be", "handle", "different", "NUMBER", "There", "s", "work", "to", "be", "do", "here", "can", "you", "help", "out", "jwaldrip", "I", "add", "a", "quick", "test", "for", "has_one", "support", "of", "select", "input", "and", "push", "up", "a", "branch", "has_one_select", "with", "commit", "NUMBER", "c", "NUMBER", "e", "NUMBER", "fec", "NUMBER", "edb", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "ee", "NUMBER", "c", "NUMBER", "ae", "which", "I", "was", "expecting", "to", "fail", "based", "on", "your", "issue", "but", "pass", "NUMBER", "suggest", "this", "would", "be", "a", "good", "talking", "point", "for", "what", "s", "different", "about", "your", "situation", "NUMBER", "I", "may", "have", "get", "the", "mocking", "wrong", "etc", "NUMBER", "Pushing", "this", "out", "to", "the", "next", "milestone", "as", "it", "s", "in", "an", "unknown", "state", "NUMBER", "jwaldrip", "simonc", "just", "checking", "be", "you", "both", "use", "ActiveRecord", "or", "Mongoid", "like", "ronhose", "jwaldrip", "simonc", "ronhose", "I", "think", "I", "ve", "find", "the", "issue", "still", "don", "t", "understand", "why", "I", "can", "t", "get", "a", "spec", "that", "raises", "that", "error", "but", "I", "digress", "NUMBER", "The", "issue", "be", "that", "the", "association", "reflection", "has", "a", "primary_key", "of", "user_id", "which", "we", "re", "use", "NUMBER", "I", "can", "detect", "the", "has_one", "association", "and", "skip", "that", "key", "but", "this", "results", "in", "undefined", "method", "contact_id", "which", "be", "right", "as", "well", "NUMBER", "I", "m", "pretty", "sure", "anything", "to", "do", "with", "a", "foreign", "key", "be", "wrong", "here", "NUMBER", "So", "this", "leads", "me", "to", "ask", "What", "should", "the", "attribute", "be", "call", "The", "form", "be", "for", "a", "User", "so", "all", "params", "be", "posted", "in", "a", "user", "hash", "and", "the", "keys", "of", "that", "hash", "be", "the", "attribute", "names", "from", "the", "form", "NUMBER", "What", "be", "you", "expecting", "user", "contact_id", "would", "require", "you", "to", "set", "an", "attr_accessor", "user", "contact", "not", "consistent", "with", "what", "we", "do", "in", "belongs_to", "associations", "user", "contact", "id", "not", "sure", "if", "this", "would", "work", "might", "require", "accepts_nested_attributes", "Over", "to", "you", "guys", "to", "figure", "out", "what", "the", "params", "hash", "_should_", "look", "like", "then", "I", "ll", "figure", "out", "_how_", "simonc", "ok", "reopening", "I", "m", "confused", "can", "you", "lease", "show", "me", "actual", "and", "expected", "markup", "output", "examples", "xdmx", "lejoko", "if", "you", "want", "to", "change", "the", "textual", "representation", "of", "each", "choice", "in", "a", "select", "radio", "or", "check", "box", "set", "the", "correct", "way", "to", "do", "so", "be", "with", "the", "member_label", "option", "as", "lejoko", "has", "just", "mention", "NUMBER", "It", "s", "not", "a", "work", "around", "it", "s", "what", "you", "do", "another", "option", "be", "to", "define", "to_label", "on", "the", "model", "mapping", "it", "to", "to_s", "or", "anything", "else", "NUMBER", "This", "be", "all", "in", "the", "documentation", "so", "I", "m", "closing", "this", "issue", "until", "I", "have", "further", "detail", "from", "OP", "NUMBER", "xdmx", "have", "update", "the", "title", "to", "be", "more", "specific", "about", "the", "brokenness", "xdmx", "I", "think", "this", "has", "to", "be", "a", "non", "issue", "NUMBER", "Here", "s", "the", "HTML", "output", "TAG", "GMT", "NUMBER", "NUMBER", "Pacific", "Time", "US", "amp", "Canada", "TAG", "NUMBER", "We", "_must_", "use", "a", "HTML", "entity", "to", "represent", "an", "ampersand", "in", "both", "the", "TAG", "tag", "s", "contents", "and", "it", "s", "value", "attribute", "right", "NUMBER", "Rails", "own", "time_zone_select", "helper", "produces", "the", "same", "results", "and", "we", "rely", "on", "this", "helper", "under", "the", "hood", "in", "which", "case", "it", "would", "be", "a", "Rails", "issue", "So", "unless", "you", "re", "seeing", "a", "double", "escaped", "ampersand", "in", "your", "HTML", "output", "that", "I", "m", "unable", "to", "reproduce", "amp", "amp", "I", "think", "you", "re", "going", "to", "have", "to", "tackle", "this", "from", "another", "angle", "NUMBER", "Perhaps", "CGI", "NUMBER", "unescapeHTML", "NUMBER", "will", "help", "NUMBER", "I", "m", "kind", "of", "surprised", "that", "this", "hasn", "t", "be", "solve", "elsewhere", "Closing", "for", "now", "please", "re", "open", "if", "I", "ve", "get", "it", "all", "wrong", "twalpole", "usable", "as", "be", "pulling", "in", "now", "thanks", "twalpole", "Travis", "CI", "be", "fail", "under", "NUMBER", "REE", "and", "NUMBER", "so", "only", "NUMBER", "be", "passing", "NUMBER", "LINK", "ci", "NUMBER", "org", "justinfrench", "formtastic", "jobs", "NUMBER", "LINK", "ci", "NUMBER", "org", "justinfrench", "formtastic", "jobs", "NUMBER", "LINK", "ci", "NUMBER", "org", "justinfrench", "formtastic", "jobs", "NUMBER", "I", "can", "certainly", "repeat", "the", "last", "two", "failures", "BasicObject", "under", "NUMBER", "on", "my", "local", "machine", "haven", "t", "looked", "into", "the", "NUMBER", "issue", "NUMBER", "I", "think", "the", "primary", "cause", "be", "that", "Rails", "NUMBER", "be", "dropping", "NUMBER", "REE", "so", "the", "current", "build", "matrix", "where", "all", "NUMBER", "version", "of", "Rails", "be", "run", "in", "all", "NUMBER", "ruby", "version", "be", "flawed", "NUMBER", "Given", "this", "I", "created", "a", "rails", "NUMBER", "branch", "off", "master", "e", "NUMBER", "f", "NUMBER", "b", "NUMBER", "with", "your", "stuff", "still", "in", "it", "and", "revert", "the", "change", "in", "master", "NUMBER", "We", "ll", "have", "to", "figure", "out", "a", "better", "build", "matrix", "with", "environment", "variables", "etc", "so", "this", "work", "can", "be", "do", "in", "the", "rails", "NUMBER", "branch", "and", "merge", "in", "when", "we", "re", "green", "and", "happy", "NUMBER", "If", "you", "re", "interested", "in", "carrying", "the", "Rails", "NUMBER", "torch", "I", "can", "add", "you", "as", "a", "contributor", "to", "get", "this", "branch", "rocking", "and", "keep", "an", "eye", "out", "for", "issue", "against", "Rails", "edge", "NUMBER", "twalpole", "do", "wejrowski", "I", "have", "some", "apps", "still", "use", "NUMBER", "x", "and", "haven", "t", "had", "any", "problem", "NUMBER", "Here", "s", "what", "I", "d", "like", "to", "know", "NUMBER", "Is", "Formtastic", "add", "a", "required", "CSS", "class", "to", "the", "input", "as", "well", "as", "add", "the", "required", "string", "to", "each", "input", "s", "label", "or", "be", "this", "isolated", "to", "just", "labels", "NUMBER", "What", "s", "in", "your", "configuration", "file", "for", "Formtastic", "FormBuilder", "NUMBER", "required_string", "and", "Formtastic", "FormBuilder", "NUMBER", "optional_string", "NUMBER", "Are", "you", "doing", "any", "i", "NUMBER", "n", "translations", "at", "all", "either", "relate", "or", "unrelated", "to", "Formtastic", "NUMBER", "Has", "this", "always", "be", "a", "bug", "in", "a", "long", "standing", "project", "or", "did", "it", "just", "start", "happening", "in", "an", "upgrade", "or", "be", "this", "a", "new", "project", "Closing", "due", "to", "lack", "of", "activity", "NUMBER", "Hi", "Those", "date", "inputs", "be", "very", "specific", "to", "the", "way", "ActiveRecord", "will", "parse", "a", "params", "hash", "and", "coerce", "the", "params", "into", "objects", "as", "part", "of", "mass", "assignment", "NUMBER", "As", "you", "can", "see", "the", "date", "and", "date", "be", "broken", "into", "multiple", "fragment", "NUMBER", "i", "etc", "which", "ActiveRecord", "glues", "back", "together", "and", "coerced", "into", "a", "date", "or", "time", "NUMBER", "My", "guess", "be", "that", "Mongoid", "do", "not", "do", "this", "so", "you", "ll", "either", "need", "to", "do", "this", "work", "yourself", "in", "the", "model", "do", "iit", "in", "the", "controller", "or", "pick", "another", "type", "of", "input", "like", "a", "StringInput", "with", "a", "jQuery", "calendar", "widget", "attached", "which", "will", "be", "the", "default", "soon", "anyway", "NUMBER", "Would", "be", "AWESOME", "if", "you", "could", "submit", "a", "documentation", "patch", "for", "the", "date", "time", "inputs", "so", "others", "don", "t", "struggle", "here", "rchampourlier", "nashby", "jan", "NUMBER", "sch", "This", "was", "indeed", "a", "bug", "in", "NUMBER", "and", "has", "be", "fix", "in", "master", "see", "NUMBER", "d", "NUMBER", "d", "and", "NUMBER", "e", "NUMBER", "merge", "in", "pull", "NUMBER", "NUMBER", "I", "ve", "also", "push", "NUMBER", "gem", "and", "merge", "master", "into", "NUMBER", "stable", "NUMBER", "Closing", "Here", "s", "a", "quote", "from", "the", "documentation", "for", "SelectInput", "LINK", "which", "I", "assume", "you", "haven", "t", "read", "but", "please", "help", "me", "clarify", "the", "docs", "if", "it", "simply", "didn", "t", "make", "sense", "to", "you", "The", "way", "on", "which", "Formtastic", "renders", "the", "value", "attribute", "and", "content", "of", "each", "TAG", "tag", "be", "customisable", "through", "the", "member_label", "and", "member_value", "options", "NUMBER", "When", "not", "provide", "we", "fall", "back", "to", "a", "list", "of", "methods", "to", "try", "on", "each", "object", "such", "as", "to_label", "name", "and", "to_s", "which", "be", "defined", "in", "the", "configurations", "collection_label_methods", "and", "collection_value_methods", "see", "examples", "below", "NUMBER", "At", "the", "moment", "there", "s", "no", "support", "way", "but", "you", "could", "monkey", "patch", "anything", "you", "like", "in", "a", "file", "in", "config", "initializers", "whatever", "NUMBER", "rb", "NUMBER", "Yes", "in", "theory", "NUMBER", "If", "you", "make", "an", "engine", "gem", "that", "has", "formtastic", "as", "a", "dependency", "you", "ll", "be", "able", "to", "have", "an", "app", "inputs", "directory", "inside", "the", "gem", "NUMBER", "In", "theory", "that", "will", "work", "but", "I", "ve", "never", "tried", "it", "NUMBER", "This", "be", "an", "unfortunate", "side", "effect", "of", "require_tree", "and", "there", "s", "no", "way", "we", "can", "avoid", "it", "that", "I", "know", "of", "NUMBER", "Instead", "require", "the", "specific", "style", "sheets", "you", "want", "specifically", "NUMBER", "I", "rarely", "want", "everything", "NUMBER", "onemanarmy", "Okay", "have", "re", "opened", "this", "so", "that", "I", "can", "explore", "for", "myself", "before", "deciding", "what", "s", "appropriate", "NUMBER", "onemanarmy", "a", "doc", "patch", "would", "be", "great", "please", "Merged", "in", "NUMBER", "closing", "NUMBER", "Awesome", "Can", "we", "see", "a", "full", "stack", "trace", "Did", "this", "exact", "code", "work", "on", "another", "ruby", "version", "I", "can", "t", "really", "see", "how", "this", "was", "work", "under", "NUMBER", "with", "Formtastic", "NUMBER", "have", "you", "upgrade", "Formtastic", "from", "NUMBER", "x", "at", "the", "same", "time", "Either", "way", "here", "s", "the", "steps", "I", "d", "take", "to", "narrow", "this", "down", "NUMBER", "Formtastic", "be", "expecting", "the", "custom", "input", "classes", "to", "be", "defined", "without", "a", "module", "so", "that", "would", "be", "a", "first", "step", "NUMBER", "NUMBER", "I", "typically", "place", "them", "in", "one", "file", "per", "input", "e", "NUMBER", "g", "NUMBER", "app", "inputs", "wysiwyg_input", "NUMBER", "rb", "app", "datepicker_input", "NUMBER", "rb", "etc", "NUMBER", "You", "seem", "to", "have", "old", "style", "e", "NUMBER", "g", "NUMBER", "def", "programme_select_input", "and", "new", "style", "e", "NUMBER", "g", "NUMBER", "class", "ProgrammeSelectInput", "side", "by", "side", "NUMBER", "Delete", "the", "old", "style", "keep", "the", "new", "NUMBER", "The", "old", "ones", "will", "not", "work", "with", "Formtastic", "NUMBER", "x", "NUMBER", "Let", "me", "know", "how", "you", "go", "closing", "for", "now", "NUMBER", "text_field_tag", "be", "not", "comparable", "to", "anything", "in", "Formtastic", "NUMBER", "A", "better", "comparison", "be", "f", "NUMBER", "text_field", "which", "be", "the", "form", "builder", "version", "which", "means", "it", "s", "bound", "to", "the", "form", "object", "NUMBER", "Formtastic", "be", "a", "FormBuilder", "thus", "bound", "to", "an", "object", "NUMBER", "Incidentally", "you", "can", "still", "use", "both", "text_field_tag", "and", "f", "NUMBER", "text_field", "within", "the", "Formtastic", "DSL", "but", "to", "answer", "your", "question", "NUMBER", "If", "you", "really", "want", "no", "name", "attribute", "NUMBER", "I", "think", "html_input", "should", "be", "input_html", "in", "your", "example", "but", "if", "that", "s", "just", "a", "typo", "NUMBER", "NUMBER", "I", "thought", "your", "sample", "would", "have", "worked", "but", "if", "it", "doesn", "t", "sounds", "like", "we", "re", "merge", "options", "somewhere", "a", "little", "too", "aggressively", "NUMBER", "NUMBER", "Perhaps", "a", "blank", "string", "would", "work", "name", "or", "else", "NUMBER", "Please", "send", "a", "patch", "actions", "be", "only", "available", "in", "Formtastic", "NUMBER", "x", "which", "be", "currently", "at", "NUMBER", "rc", "so", "you", "ll", "need", "to", "bundle", "in", "that", "specific", "gem", "version", "NUMBER", "LINK", "astockwell", "be", "this", "still", "an", "issue", "for", "you", "Closing", "for", "now", "since", "this", "be", "over", "a", "month", "old", "but", "please", "re", "open", "if", "it", "s", "still", "an", "issue", "for", "you", "NUMBER", "Formtastic", "version", "would", "be", "helpful", "too", "Weird", "Either", "operator", "should", "be", "safe", "NUMBER", "Have", "you", "get", "any", "idea", "where", "the", "root", "cause", "be", "Happy", "to", "merge", "this", "in", "but", "would", "also", "love", "to", "plug", "the", "real", "cause", "and", "add", "spec", "coverage", "against", "a", "regression", "NUMBER", "Merged", "in", "thanks", "NUMBER", "flexoid", "Looks", "like", "this", "fail", "the", "build", "under", "NUMBER", "and", "ree", "NUMBER", "Can", "you", "take", "a", "look", "for", "any", "NUMBER", "specific", "code", "check", "out", "the", "fail", "and", "submit", "a", "patch", "please", "LINK", "ci", "NUMBER", "org", "justinfrench", "formtastic", "build", "NUMBER", "Looks", "like", "some", "NUMBER", "only", "hash", "syntax", "NUMBER", "Hi", "this", "be", "a", "_lot_", "o", "code", "to", "grok", "NUMBER", "Since", "your", "main", "issue", "seems", "to", "be", "with", "ActiveAdmin", "a", "library", "I", "m", "not", "familiar", "with", "could", "you", "please", "start", "with", "them", "and", "perhaps", "work", "on", "a", "smaller", "code", "example", "and", "test", "case", "that", "exposes", "your", "problem", "Closing", "this", "NUMBER", "Hi", "you", "would", "need", "Javascript", "for", "this", "NUMBER", "Justin", "On", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Fielouxreply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Hello", "I", "be", "use", "your", "range", "field", "but", "i", "want", "to", "display", "the", "value", "on", "an", "other", "input", "div", "and", "change", "the", "value", "when", "we", "slide", "NUMBER", "How", "can", "i", "do", "that", "Thank", "you", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "Ditchou", "what", "have", "you", "tried", "Come", "on", "I", "m", "not", "here", "to", "hold", "your", "hand", "with", "everything", "f", "NUMBER", "input", "foo", "as", "bah", "hint", "TAG", "Hello", "TAG", "NUMBER", "html_safe", "That", "should", "work", "NUMBER", "For", "general", "question", "please", "use", "the", "Google", "group", "or", "Stack", "Overflow", "NUMBER", "Closing", "this", "one", "for", "now", "Ditchou", "did", "you", "try", "it", "with", "the", "NUMBER", "html_safe", "on", "the", "end", "That", "really", "should", "work", "NUMBER", "Can", "you", "show", "your", "code", "please", "so", "I", "don", "t", "have", "to", "keep", "guessing", "Shouldn", "t", "the", "hidden", "tag", "come", "before", "the", "select", "if", "html_options", "multiple", "create_hidden_field_for_multiple_select", "input_name", "TAG", "Hello", "I", "want", "to", "write", "some", "text", "in", "the", "middle", "of", "my", "form", "how", "can", "i", "do", "that", "My", "form", "looks", "like", "form", "html", "enctype", "multipart", "form", "data", "do", "f", "f", "NUMBER", "inputs", "Details", "do", "f", "NUMBER", "input", "civility", "f", "NUMBER", "input", "society", "f", "NUMBER", "input", "last_name", "f", "NUMBER", "input", "address", "f", "NUMBER", "input", "postal_code", "f", "NUMBER", "input", "country", "as", "string", "f", "NUMBER", "input", "email", "f", "NUMBER", "input", "reduction_code", "f", "NUMBER", "input", "message", "f", "NUMBER", "input", "total", "f", "NUMBER", "input", "city", "end", "f", "NUMBER", "buttons", "end", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "Ditchou", "that", "didn", "t", "answer", "any", "of", "my", "question", "There", "s", "a", "few", "options", "NUMBER", "If", "the", "text", "be", "semantically", "unrelated", "to", "either", "the", "email", "or", "reduction", "code", "inputs", "you", "can", "break", "the", "feildset", "into", "two", "fieldset", "by", "ending", "the", "first", "inputs", "block", "after", "email", "and", "starting", "another", "before", "reduction", "code", "NUMBER", "This", "would", "make", "it", "valid", "to", "use", "a", "DIV", "or", "anything", "else", "in", "this", "place", "because", "you", "ve", "broken", "up", "the", "list", "NUMBER", "Since", "you", "seem", "to", "be", "use", "ActiveAdmin", "you", "might", "need", "to", "make", "this", "a", "partial", "with", "ERB", "instead", "so", "that", "you", "can", "make", "a", "DIV", "or", "maybe", "some", "of", "the", "Rails", "HTML", "helpers", "will", "work", "Iike", "content_tag", "or", "f", "NUMBER", "template", "NUMBER", "content_tag", "NUMBER", "NUMBER", "If", "the", "text", "be", "relate", "to", "the", "email", "input", "perhaps", "you", "can", "use", "the", "exist", "hint", "option", "which", "add", "a", "paragraph", "of", "text", "to", "the", "bottom", "of", "the", "input", "NUMBER", "NUMBER", "If", "the", "text", "be", "relate", "to", "the", "reduction", "code", "maybe", "you", "could", "use", "the", "legend", "of", "the", "fieldset", "assuming", "you", "ve", "do", "step", "one", "like", "you", "have", "with", "Details", "above", "but", "I", "doubt", "it", "NUMBER", "NUMBER", "If", "you", "want", "to", "keep", "the", "single", "fieldset", "and", "the", "text", "be", "relate", "to", "either", "the", "email", "or", "reduction", "input", "consider", "subclassing", "the", "closest", "relevant", "input", "and", "just", "putting", "the", "text", "in", "there", "as", "part", "of", "a", "custom", "input", "NUMBER", "Then", "you", "can", "use", "as", "email_with_blah_text", "for", "example", "and", "have", "the", "text", "be", "automatically", "include", "NUMBER", "Those", "be", "about", "all", "the", "options", "that", "will", "work", "and", "give", "you", "valid", "HTML", "NUMBER", "I", "m", "sketchy", "on", "the", "ActiveAdmin", "details", "but", "they", "can", "help", "you", "with", "that", "once", "you", "know", "how", "you", "re", "going", "to", "approach", "this", "NUMBER", "If", "you", "can", "show", "me", "a", "mockup", "or", "the", "actual", "text", "I", "d", "love", "to", "learn", "more", "about", "the", "use", "case", "because", "I", "have", "some", "ideas", "for", "make", "this", "easier", "in", "future", "version", "with", "new", "features", "NUMBER", "Closing", "for", "now", "NUMBER", "eswat", "NUMBER", "nice", "Closing", "this", "as", "a", "duplicate", "of", "NUMBER", "This", "definitely", "looks", "like", "a", "bug", "or", "an", "odd", "behaviour", "but", "it", "s", "not", "an", "issue", "with", "Formtastic", "as", "stylesheet_link_tag", "be", "vanilla", "Rails", "and", "not", "touched", "by", "Formtastic", "NUMBER", "Looks", "to", "me", "like", "stylesheet_link_tag", "be", "outputting", "two", "link", "tags", "for", "you", "formtastic_ie", "NUMBER", "css", "and", "ie", "NUMBER", "css", "NUMBER", "I", "don", "t", "know", "why", "though", "sorry", "NUMBER", "If", "you", "find", "the", "answer", "please", "report", "back", "so", "we", "can", "improve", "the", "docs", "NUMBER", "Thanks", "NUMBER", "SaschaKonietzke", "can", "you", "provide", "me", "with", "any", "more", "detail", "about", "the", "model", "the", "type", "of", "collection", "the", "options", "you", "re", "use", "on", "the", "input", "method", "etc", "so", "that", "I", "can", "try", "to", "narrow", "this", "down", "and", "make", "a", "test", "Also", "I", "assume", "this", "be", "with", "NUMBER", "beta", "or", "master", "Okay", "thanks", "closing", "for", "now", "but", "if", "there", "s", "a", "change", "that", "we", "need", "to", "make", "or", "something", "we", "can", "improve", "would", "love", "to", "hear", "about", "it", "NUMBER", "I", "don", "t", "think", "that", "was", "ever", "a", "feature", "NUMBER", "What", "s", "your", "use", "case", "Wondering", "if", "there", "shouldn", "t", "just", "_be_", "a", "unique", "id", "on", "each", "field", "set", "rather", "than", "you", "having", "to", "do", "this", "NUMBER", "Either", "way", "I", "d", "accept", "a", "patch", "if", "you", "re", "interested", "NUMBER", "Unique", "_classes_", "seems", "a", "bit", "errr", "strange", "but", "ids", "make", "sense", "NUMBER", "mhuggins", "agree", "your", "patch", "solves", "this", "great", "closing", "NUMBER", "Merged", "thanks", "eLod", "sure", "create", "away", "SaschaKonietzke", "looks", "good", "let", "s", "merge", "into", "master", "meaning", "it", "ll", "be", "in", "NUMBER", "or", "NUMBER", "and", "sobrinho", "can", "figure", "out", "how", "we", "do", "less", "SaschaKonietzke", "I", "think", "I", "must", "have", "close", "instead", "of", "merge", "NUMBER", "Certainly", "meant", "to", "merge", "NUMBER", "Have", "re", "opened", "but", "the", "merge", "button", "has", "vanished", "so", "I", "ll", "do", "it", "the", "hard", "way", "later", "NUMBER", "Sorry", "SaschaKonietzke", "merge", "in", "Seems", "good", "NUMBER", "justinfrench", "Seems", "nice", "Agree", "heart", "Ruby", "wise", "this", "be", "fully", "backwards", "compatible", "NUMBER", "As", "far", "as", "the", "naming", "scheme", "goes", "I", "did", "think", "about", "Numberish", "but", "ended", "up", "going", "for", "Numeric", "simply", "because", "it", "sounded", "more", "natural", "to", "me", "NUMBER", "If", "you", "would", "rather", "be", "consistent", "I", "don", "t", "mind", "NUMBER", "yabawock", "yep", "so", "it", "do", "Thanks", "for", "report", "it", "s", "a", "duplicate", "of", "NUMBER", "so", "I", "m", "closing", "this", "one", "NUMBER", "justinfrench", "I", "wanted", "to", "check", "this", "before", "it", "goes", "in", "because", "I", "ve", "delete", "a", "reference", "to", "the", "grouped_value_method", "option", "which", "unlike", "grouped_label_method", "doesn", "t", "seem", "to", "have", "be", "deprecate", "NUMBER", "dd", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "e", "NUMBER", "af", "NUMBER", "NUMBER", "Removing", "it", "could", "theoretically", "break", "backwards", "compatibility", "but", "it", "seems", "to", "be", "undocumented", "so", "I", "would", "expect", "that", "it", "s", "unlikely", "anyone", "be", "relying", "on", "it", "NUMBER", "Thoughts", "Since", "we", "have", "an", "engine", "for", "the", "asset", "pipeline", "on", "NUMBER", "we", "don", "t", "need", "a", "separate", "railtie", "NUMBER", "I", "ve", "moved", "the", "initialization", "code", "into", "the", "engine", "and", "drop", "the", "railtie", "NUMBER", "It", "still", "works", "on", "NUMBER", "The", "label", "element", "created", "in", "the", "timeish", "inputs", "legend", "be", "always", "TAG", "i", "NUMBER", "e", "NUMBER", "point", "to", "the", "year", "input", "which", "be", "no", "good", "for", "time", "only", "inputs", "or", "when", "other", "date", "orders", "be", "use", "e", "NUMBER", "g", "when", "use", "d", "m", "y", "order", "clicking", "on", "the", "label", "sets", "the", "focus", "to", "the", "third", "input", "in", "the", "list", "which", "be", "disconcerting", "NUMBER", "As", "discussed", "on", "NUMBER", "justinfrench", "yeah", "I", "d", "love", "to", "thanks", "In", "fact", "do", "we", "even", "need", "to", "be", "calculating", "this", "limit", "As", "far", "as", "I", "can", "see", "the", "only", "use", "of", "column_limit", "be", "to", "choose", "a", "maxlength", "for", "a", "stringish", "input", "NUMBER", "However", "maxlength", "be", "not", "a", "valid", "attribute", "for", "input", "type", "number", "LINK", "of", "the", "type", "attribute", "NUMBER", "html", "number", "state", "type", "number", "so", "maybe", "we", "should", "get", "rid", "of", "it", "I", "had", "a", "bit", "more", "of", "a", "look", "through", "the", "HTML", "NUMBER", "spec", "and", "the", "size", "attribute", "which", "be", "also", "set", "in", "Stringish", "input_html_options", "be", "not", "allow", "for", "these", "inputs", "either", "there", "s", "a", "good", "table", "showing", "which", "inputs", "accept", "which", "attributes", "LINK", "input", "element", "NUMBER", "html", "NUMBER", "So", "semantically", "I", "think", "numeric", "inputs", "have", "diverged", "from", "stringish", "ones", "enough", "to", "consider", "them", "separate", "entities", "and", "it", "d", "be", "best", "to", "refactor", "NumberInput", "and", "RangeInput", "to", "inherit", "from", "Numeric", "rather", "than", "Stringish", "NUMBER", "I", "ll", "knock", "something", "up", "NUMBER", "The", "hidden", "field", "be", "there", "because", "browsers", "won", "t", "post", "an", "empty", "collection", "of", "checkboxes", "NUMBER", "this", "causes", "problem", "when", "editing", "the", "object", "and", "unchecking", "all", "the", "boxes", "and", "be", "a", "pretty", "standard", "Rails", "and", "web", "application", "practice", "so", "that", "the", "controller", "and", "or", "model", "know", "explicitly", "that", "all", "checkboxes", "were", "unchecked", "NUMBER", "This", "be", "explained", "somewhat", "in", "the", "Rails", "check_box", "documentation", "gotcha", "NUMBER", "I", "encourage", "you", "to", "fully", "understand", "this", "before", "disabling", "it", "but", "the", "way", "to", "do", "so", "be", "to", "pass", "in", "the", "option", "hidden_fields", "false", "NUMBER", "I", "ll", "eave", "this", "issue", "open", "to", "ensure", "that", "there", "s", "documentation", "for", "this", "NUMBER", "Cheers", "NUMBER", "and", "hidden_fields", "_is_", "in", "the", "documentation", "so", "I", "m", "closing", "this", "NUMBER", "Hi", "so", "far", "we", "ve", "refrained", "from", "add", "locales", "directly", "into", "the", "core", "Formtastic", "code", "following", "Rails", "lead", "of", "only", "including", "English", "directly", "NUMBER", "I", "feel", "add", "other", "locales", "will", "cause", "too", "many", "support", "issue", "for", "me", "so", "the", "solution", "so", "far", "has", "be", "to", "include", "them", "in", "the", "wiki", "LINK", "which", "currently", "include", "Japanese", "and", "Dutch", "NUMBER", "I", "d", "love", "you", "to", "add", "this", "in", "too", "Thanks", "kchien", "it", "hasn", "t", "yet", "would", "accept", "a", "pull", "request", "if", "you", "have", "the", "time", "to", "help", "us", "on", "this", "NUMBER", "Hi", "Formtastic", "makes", "a", "guess", "based", "on", "the", "association", "type", "NUMBER", "You", "can", "override", "this", "guess", "use", "the", "multiple", "option", "as", "documented", "here", "LINK", "Override", "Formtastic", "s", "assumption", "on", "when", "you", "need", "a", "multi", "select", "TAG", "select", "input_html", "multiple", "true", "TAG", "select", "input_html", "multiple", "false", "Closing", "NUMBER", "Ok", "I", "ll", "re", "open", "and", "check", "that", "we", "have", "test", "coverage", "NUMBER", "What", "kind", "of", "association", "be", "pages", "If", "you", "re", "rendering", "a", "lot", "of", "inputs", "for", "associations", "has_many", "belongs_to", "then", "Formtastic", "may", "be", "querying", "the", "DB", "quite", "a", "lot", "NUMBER", "For", "example", "if", "you", "don", "t", "provide", "a", "collection", "of", "your", "own", "it", "will", "use", "Category", "NUMBER", "all", "NUMBER", "This", "be", "compounded", "when", "the", "associations", "themselves", "contain", "lots", "of", "items", "meaning", "many", "small", "fragment", "of", "HTML", "need", "to", "be", "rendered", "if", "you", "have", "NUMBER", "categories", "that", "s", "NUMBER", "checkboxes", "or", "options", "that", "need", "to", "be", "rendered", "NUMBER", "You", "can", "help", "in", "the", "following", "ways", "try", "to", "reduce", "and", "isolate", "the", "problem", "to", "one", "type", "of", "input", "then", "give", "us", "details", "about", "the", "form", "code", "the", "models", "the", "associations", "the", "number", "of", "records", "in", "the", "association", "etc", "verify", "that", "the", "same", "slowness", "exists", "with", "ERB", "look", "at", "your", "logs", "after", "rendering", "the", "page", "look", "at", "how", "many", "database", "calls", "be", "be", "made", "per", "request", "There", "has", "also", "be", "some", "change", "in", "master", "that", "be", "unreleased", "which", "memoize", "cache", "some", "of", "the", "heavy", "lifting", "we", "re", "doing", "I", "think", "it", "was", "for", "has_many", "associations", "so", "after", "the", "above", "fact", "finding", "you", "may", "want", "to", "try", "bundling", "from", "master", "temporarily", "and", "seeing", "if", "there", "s", "any", "improvement", "NUMBER", "Closing", "as", "SaschaKonietzke", "s", "change", "have", "be", "merge", "into", "master", "NUMBER", "stable", "and", "will", "be", "in", "NUMBER", "rc", "shortly", "NUMBER", "If", "there", "s", "anything", "further", "let", "s", "re", "open", "or", "create", "specific", "issue", "for", "what", "you", "we", "find", "NUMBER", "Thanks", "for", "everyone", "s", "work", "on", "this", "Merged", "in", "with", "thanks", "NUMBER", "mibock", "if", "you", "override", "the", "checked", "method", "to", "use", "builder", "NUMBER", "object", "instead", "of", "just", "object", "do", "it", "work", "mibock", "can", "I", "see", "your", "form", "code", "mibock", "I", "ve", "notice", "you", "re", "use", "semantic_form_for", "transfer", "where", "transfer", "be", "a", "symbol", "rather", "than", "transfer", "an", "instance", "of", "a", "Transfer", "model", "we", "need", "an", "instance", "of", "a", "model", "that", "has", "some", "state", "persisted", "in", "it", "in", "order", "to", "check", "the", "checkbox", "reflect", "on", "the", "database", "columns", "etc", "NUMBER", "Any", "reason", "you", "re", "knot", "use", "transfer", "and", "instantiating", "an", "instance", "of", "a", "Transfer", "Closing", "for", "now", "as", "I", "m", "confident", "this", "be", "the", "issue", "feel", "free", "to", "re", "open", "NUMBER", "On", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Estanislao", "Vizcarra", "write", "f", "NUMBER", "has_many", "assets", "do", "p", "p", "NUMBER", "input", "asset", "as", "file", "input_html", "multiple", "true", "label", "Image", "hint", "p", "NUMBER", "object", "NUMBER", "asset", "NUMBER", "nil", "p", "NUMBER", "template", "NUMBER", "content_tag", "span", "No", "Image", "Yet", "p", "NUMBER", "template", "NUMBER", "image_tag", "p", "NUMBER", "object", "NUMBER", "asset", "NUMBER", "url", "thumb", "p", "NUMBER", "input", "_destroy", "as", "boolean", "required", "false", "label", "Remove", "end", "I", "don", "t", "recognise", "the", "code", "f", "NUMBER", "has_many", "assets", "be", "that", "vanilla", "Rails", "or", "something", "provide", "by", "a", "ActiveAdmin", "or", "Your", "form", "code", "looks", "nothing", "like", "well", "formed", "ERB", "or", "haml", "so", "I", "have", "no", "idea", "where", "to", "start", "helping", "you", "Justin", "Thanks", "This", "be", "out", "of", "my", "depth", "a", "bit", "can", "we", "get", "a", "NUMBER", "from", "someone", "sobrinho", "I", "think", "it", "needs", "to", "be", "NUMBER", "because", "it", "should", "be", "the", "maximum", "length", "of", "a", "valid", "string", "that", "can", "be", "entered", "NUMBER", "sobrino", "happy", "for", "you", "to", "merge", "this", "in", "when", "you", "re", "happy", "I", "ve", "tracked", "this", "down", "NUMBER", "The", "problem", "be", "that", "label_and_value_method", "LINK", "L", "NUMBER", "be", "not", "memoized", "it", "s", "request", "the", "first", "element", "of", "the", "collection", "repeatedly", "NUMBER", "Apparently", "unlike", "ActiveRecord", "Mongoid", "doesn", "t", "cache", "that", "element", "and", "will", "generate", "a", "query", "every", "time", "NUMBER", "Although", "arguably", "Mongoid", "probably", "shouldn", "t", "do", "the", "query", "every", "time", "it", "s", "a", "moot", "point", "because", "Formtastic", "definitely", "shouldn", "t", "ask", "for", "it", "more", "than", "once", "NUMBER", "I", "ll", "work", "up", "a", "fix", "NUMBER", "Thanks", "for", "the", "kind", "words", "NUMBER", "I", "believe", "this", "be", "a", "duplicate", "of", "NUMBER", "for", "which", "there", "be", "two", "relate", "pull", "request", "NUMBER", "and", "NUMBER", "all", "of", "which", "be", "under", "debate", "so", "I", "m", "going", "to", "close", "this", "down", "feel", "free", "to", "chime", "in", "on", "NUMBER", "or", "the", "pulls", "NUMBER", "Makes", "sense", "for", "me", "NUMBER", "justinfrench", "I", "think", "we", "should", "not", "set", "default", "values", "NUMBER", "Let", "think", "about", "optional", "date", "time", "field", "NUMBER", "If", "user", "want", "to", "keep", "this", "field", "blank", "they", "should", "change", "the", "value", "because", "the", "form", "render", "the", "current", "time", "by", "default", "NUMBER", "I", "guess", "if", "developer", "want", "to", "set", "the", "current", "time", "as", "default", "he", "should", "do", "something", "like", "that", "on", "controller", "ruby", "account", "Account", "NUMBER", "new", "account", "NUMBER", "create_at", "Time", "NUMBER", "current", "That", "s", "the", "default", "behavior", "of", "rails", "I", "guess", "NUMBER", "Pulled", "thanks", "haines", "so", "this", "patch", "means", "that", "the", "blank", "option", "will", "always", "be", "include", "in", "the", "options", "sounds", "exactly", "like", "I", "d", "expect", "it", "to", "behave", "NUMBER", "I", "d", "expect", "the", "same", "for", "prompt", "too", "NUMBER", "sobrinho", "yep", "that", "s", "what", "it", "do", "NUMBER", "justinfrench", "I", "think", "that", "the", "only", "point", "in", "having", "both", "options", "be", "to", "have", "a", "difference", "between", "creation", "and", "editing", "NUMBER", "If", "you", "remove", "that", "distinction", "then", "prompt", "and", "include_blank", "would", "be", "completely", "equivalent", "NUMBER", "Sweet", "had", "a", "go", "at", "the", "docs", "see", "what", "you", "think", "justinfrench", "Do", "you", "get", "the", "same", "result", "when", "you", "only", "run", "select_input_spec", "I", "haven", "t", "be", "able", "to", "reproduce", "on", "NUMBER", "or", "NUMBER", "So", "far", "I", "ve", "run", "it", "with", "everything", "except", "the", "generator", "specs", "which", "seem", "to", "take", "ages", "and", "haven", "t", "gotten", "it", "to", "fail", "yet", "NUMBER", "justinfrench", "Ok", "managed", "to", "get", "my", "computer", "to", "stop", "choking", "on", "the", "generator", "specs", "and", "everything", "works", "NUMBER", "Then", "just", "in", "case", "it", "was", "some", "oddity", "of", "my", "environment", "I", "test", "a", "fresh", "install", "by", "doing", "git", "clone", "git", "github", "NUMBER", "com", "justinfrench", "formtastic", "cd", "formtastic", "rvm", "use", "create", "NUMBER", "formtastic", "gem", "install", "bundler", "bundle", "install", "bundle", "exec", "rake", "and", "similarly", "for", "NUMBER", "Still", "every", "spec", "pass", "NUMBER", "Ok", "things", "get", "even", "more", "curious", "not", "only", "be", "that", "a", "different", "example", "fail", "but", "I", "tried", "on", "NUMBER", "and", "still", "get", "all", "pass", "Here", "s", "my", "Gemfile", "NUMBER", "lock", "LINK", "and", "there", "be", "no", "other", "gems", "install", "except", "bundler", "NUMBER", "NUMBER", "justinfrench", "according", "to", "Yehuda", "Katz", "it", "s", "not", "generally", "recommended", "to", "check", "in", "your", "Gemfile", "NUMBER", "lock", "LINK", "the", "roles", "of", "the", "gemspec", "and", "gemfile", "because", "it", "enforces", "precision", "that", "do", "not", "exist", "in", "the", "gem", "command", "which", "be", "use", "to", "install", "gems", "in", "practice", "NUMBER", "I", "ll", "downgrade", "to", "ActionPack", "NUMBER", "and", "see", "if", "I", "can", "get", "it", "work", "NUMBER", "Ok", "turns", "out", "there", "be", "a", "couple", "of", "issue", "at", "play", "here", "and", "the", "spec", "_should_", "fail", "NUMBER", "It", "should", "pass", "for", "select", "inputs", "Rails", "FormBuilder", "select", "delegates", "to", "FormOptionsHelper", "select", "which", "allows", "a", "string", "for", "include_blank", "here", "LINK", "_view", "helpers", "form_options_helper", "NUMBER", "rb", "L", "NUMBER", "NUMBER", "It", "should", "fail", "for", "timeish", "inputs", "Rails", "DateTimeSelector", "select_day", "etc", "generate", "select", "tags", "manually", "and", "so", "only", "handle", "include_blank", "as", "a", "boolean", "value", "here", "LINK", "_view", "helpers", "date_helper", "NUMBER", "rb", "L", "NUMBER", "The", "problem", "be", "that", "the", "include_blank", "spec", "doesn", "t", "test", "the", "different", "input", "types", "independently", "NUMBER", "I", "ve", "made", "a", "pull", "request", "NUMBER", "to", "address", "this", "NUMBER", "The", "inconsistencies", "we", "ve", "seen", "between", "rubies", "be", "because", "only", "the", "first", "input", "type", "test", "determines", "a", "pass", "fail", "and", "the", "ordering", "of", "a", "hash", "be", "not", "guaranteed", "NUMBER", "The", "question", "be", "then", "should", "we", "continue", "to", "follow", "Rails", "and", "maintain", "an", "inconsistency", "between", "the", "behaviour", "of", "include_blank", "for", "timeish", "and", "select", "inputs", "in", "which", "case", "I", "need", "to", "remove", "the", "fail", "specs", "Or", "should", "we", "patch", "it", "Indeed", "do", "you", "think", "should", "I", "open", "an", "issue", "on", "Rails", "for", "this", "I", "think", "it", "s", "quite", "surprising", "that", "include_blank", "doesn", "t", "do", "the", "same", "thing", "in", "these", "two", "cases", "I", "would", "view", "a", "time", "input", "as", "a", "special", "case", "of", "a", "select", "input", "NUMBER", "justinfrench", "Cheers", "I", "agree", "regard", "Timeish", "I", "m", "not", "use", "it", "myself", "which", "be", "why", "I", "didn", "t", "notice", "the", "problem", "sooner", "NUMBER", "I", "ll", "put", "together", "another", "pull", "request", "to", "document", "the", "inconsistent", "behaviour", "and", "remove", "the", "fail", "specs", "from", "include_blank_spec", "NUMBER", "rb", "Seems", "great", "for", "me", "NUMBER", "Personally", "I", "prefer", "something", "like", "that", "ruby", "def", "intense_calculation", "intense_calculation", "make_intense_calculation", "end", "protected", "def", "make_intense_calculation", "code", "goes", "here", "end", "Ok", "I", "have", "made", "a", "passing", "test", "case", "in", "NUMBER", "bc", "NUMBER", "fabe", "NUMBER", "daac", "NUMBER", "dad", "NUMBER", "d", "NUMBER", "eeb", "NUMBER", "fbbc", "NUMBER", "fc", "NUMBER", "f", "so", "I", "m", "really", "not", "sure", "why", "you", "re", "not", "get", "error", "in", "your", "case", "NUMBER", "I", "ll", "keep", "trying", "to", "reproduce", "but", "it", "would", "be", "good", "if", "either", "of", "you", "could", "help", "narrow", "this", "down", "on", "your", "end", "NUMBER", "NUMBER", "do", "the", "appropriate", "error", "class", "get", "add", "i", "NUMBER", "e", "NUMBER", "do", "Formtastic", "se", "that", "there", "be", "error", "ut", "fail", "to", "list", "them", "NUMBER", "do", "it", "work", "without", "i", "NUMBER", "n", "on", "the", "error", "message", "just", "use", "default", "Rails", "error", "NUMBER", "do", "it", "work", "with", "a", "vanilla", "config", "file", "NUMBER", "do", "it", "work", "in", "your", "app", "with", "other", "nested", "attribute", "stuff", "Sorry", "that", "this", "isn", "t", "a", "quick", "fix", "but", "like", "I", "said", "there", "s", "a", "basic", "passing", "test", "so", "it", "s", "hard", "to", "know", "where", "to", "look", "next", "NUMBER", "calvinl", "be", "this", "for", "one", "specific", "input", "or", "for", "all", "inputs", "I", "m", "afraid", "there", "s", "no", "quick", "way", "that", "I", "can", "think", "of", "but", "there", "s", "certainly", "at", "least", "one", "slow", "way", "NUMBER", "Can", "you", "tell", "me", "why", "you", "want", "to", "change", "the", "order", "If", "I", "can", "empathise", "with", "the", "reasons", "I", "ve", "get", "an", "idea", "how", "we", "might", "be", "able", "to", "make", "this", "a", "little", "easier", "NUMBER", "calvini", "for", "a", "one", "off", "this", "be", "perfect", "for", "custom", "inputs", "in", "Formtastic", "NUMBER", "x", "no", "monkey", "patching", "required", "just", "a", "subclass", "of", "StringInput", "or", "whatever", "input", "you", "want", "to", "use", "as", "a", "base", "app", "inputs", "whatever_input", "NUMBER", "rb", "class", "WhateverInput", "TAG", "false", "to", "include", "not", "rendering", "the", "_none", "I", "m", "okay", "with", "this", "in", "theory", "from", "a", "DSL", "API", "perspective", "but", "would", "be", "great", "to", "see", "some", "NUMBER", "s", "from", "others", "to", "support", "the", "change", "NUMBER", "A", "pull", "request", "would", "also", "be", "great", "Thanks", "this", "be", "awesome", "I", "ll", "think", "about", "this", "NUMBER", "the", "API", "looks", "pretty", "solid", "but", "I", "m", "wondering", "if", "this", "would", "be", "better", "served", "with", "a", "custom", "input", "as", "page_select", "or", "similar", "NUMBER", "Certainly", "this", "would", "be", "the", "path", "forward", "right", "now", "if", "you", "re", "looking", "for", "this", "feature", "fast", "I", "m", "going", "to", "push", "back", "on", "this", "NUMBER", "There", "be", "two", "support", "methods", "to", "get", "this", "do", "already", "and", "I", "m", "not", "inclined", "to", "add", "a", "third", "NUMBER", "subclass", "SelectInput", "as", "PageSelectInput", "and", "make", "the", "small", "change", "patches", "required", "NUMBER", "pass", "a", "pre", "build", "HTML", "string", "of", "option", "tags", "including", "data", "attributes", "into", "collection", "instead", "of", "Page", "NUMBER", "all", "or", "any", "other", "enumerable", "Hi", "can", "you", "please", "rebase", "this", "against", "master", "perhaps", "by", "creating", "a", "new", "branch", "and", "cherry", "picking", "in", "just", "the", "one", "commit", "It", "won", "t", "automatically", "merge", "and", "it", "s", "hard", "to", "consider", "the", "diff", "with", "lots", "of", "irrelevant", "commit", "etc", "NUMBER", "michaelkoper", "thanks", "for", "this", "closing", "as", "this", "has", "be", "merge", "in", "twalpole", "Thanks", "was", "pretty", "sure", "we", "support", "both", "but", "was", "in", "a", "bit", "of", "a", "hurry", "and", "didn", "t", "properly", "check", "the", "docs", "NUMBER", "On", "it", "NUMBER", "Have", "push", "a", "change", "to", "master", "and", "NUMBER", "NUMBER", "stable", "but", "I", "didn", "t", "have", "to", "change", "any", "specs", "which", "be", "a", "concern", "NUMBER", "Needs", "more", "work", "leaving", "open", "NUMBER", "tuxwerk", "can", "you", "tell", "me", "more", "about", "your", "use", "case", "there", "s", "plenty", "of", "test", "coverage", "for", "multiple", "true", "in", "various", "situations", "but", "maybe", "not", "yours", "NUMBER", "Is", "it", "for", "a", "db", "column", "what", "kind", "or", "for", "an", "association", "what", "kind", "Anything", "else", "you", "can", "tell", "me", "to", "narrow", "this", "down", "would", "be", "great", "NUMBER", "tuxwerk", "I", "think", "I", "ve", "expose", "the", "bug", "with", "a", "spec", "and", "patched", "it", "to", "allow", "multiple", "true", "in", "your", "situation", "please", "bundle", "from", "master", "and", "confirm", "that", "multiple", "true", "and", "input_html", "multiple", "true", "work", "with", "your", "code", "NUMBER", "twalpole", "can", "you", "also", "please", "bundle", "from", "master", "and", "confirm", "I", "ll", "merge", "these", "into", "NUMBER", "NUMBER", "stable", "and", "do", "a", "point", "release", "after", "I", "hear", "back", "re", "open", "until", "I", "ve", "heard", "back", "Right", "NUMBER", "ActionPack", "or", "Railties", "be", "fine", "I", "guess", "NUMBER", "ActionPack", "be", "closer", "to", "the", "truth", "we", "leverage", "ActionPack", "s", "helpers", "a", "_lot_", "NUMBER", "alsemyonov", "can", "you", "update", "this", "pull", "request", "Thanks", "alsemyonov", "There", "s", "definitely", "options", "NUMBER", "What", "be", "you", "doing", "so", "far", "in", "the", "view", "What", "version", "of", "Formtastic", "The", "code", "in", "NUMBER", "x", "be", "daunting", "for", "sure", "NUMBER", "If", "you", "re", "okay", "with", "upgrading", "to", "the", "latest", "NUMBER", "rc", "NUMBER", "or", "NUMBER", "NUMBER", "stable", "or", "master", "you", "get", "the", "fruits", "of", "a", "_lot_", "of", "work", "NUMBER", "Namely", "class", "based", "inputs", "which", "can", "be", "customised", "NUMBER", "Check", "out", "LINK", "NUMBER", "preview", "custom", "inputs", "if", "you", "haven", "t", "already", "NUMBER", "Here", "s", "something", "quick", "totally", "untested", "but", "pretty", "awesome", "ruby", "app", "inputs", "date_picker_input", "NUMBER", "html", "NUMBER", "erb", "class", "DatePickerInput", "TAG", "object", "NUMBER", "born_at", "NUMBER", "rftime", "d", "m", "Y", "end", "def", "wrapper_html_options", "super", "NUMBER", "merge", "class", "date", "end", "end", "Use", "like", "this", "TAG", "date_picker", "label", "Date", "of", "Birth", "There", "s", "a", "tip", "jar", "somewhere", "around", "here", "Oh", "and", "NUMBER", "will", "require", "Rails", "NUMBER", "or", "NUMBER", "just", "in", "case", "you", "re", "stuck", "in", "Rails", "NUMBER", "x", "NUMBER", "Closing", "for", "now", "let", "me", "know", "how", "it", "goes", "and", "feel", "free", "to", "re", "open", "NUMBER", "Awesome", "reidab", "please", "do", "send", "a", "patch", "for", "the", "upcoming", "NUMBER", "Hi", "This", "seems", "to", "be", "a", "patch", "against", "the", "code", "we", "had", "in", "NUMBER", "x", "NUMBER", "Master", "has", "moved", "on", "quite", "a", "bit", "from", "this", "humble", "start", "with", "class", "based", "input", "declarations", "inheritance", "etc", "NUMBER", "Closing", "NUMBER", "Would", "you", "want", "to", "customise", "this", "on", "a", "per", "input", "basis", "or", "app", "wide", "Rails", "already", "provides", "configuration", "for", "this", "through", "the", "i", "NUMBER", "n", "API", "so", "we", "don", "t", "have", "to", "provide", "this", "in", "Formtastic", "NUMBER", "Rails", "looks", "in", "the", "support", "NUMBER", "array", "NUMBER", "words_connector", "support", "NUMBER", "array", "NUMBER", "two_words_connector", "and", "support", "NUMBER", "array", "NUMBER", "last_word_connector", "keys", "NUMBER", "Closing", "hypomodern", "Thanks", "for", "this", "I", "don", "t", "use", "Mongo", "so", "I", "rely", "NUMBER", "on", "patches", "from", "the", "community", "like", "this", "one", "Looks", "like", "these", "test", "mocks", "were", "add", "in", "a", "NUMBER", "caf", "NUMBER", "faff", "NUMBER", "c", "NUMBER", "da", "NUMBER", "dece", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "by", "ijonas", "so", "would", "be", "great", "to", "hear", "from", "him", "before", "merge", "in", "just", "in", "case", "this", "be", "an", "additional", "case", "etc", "NUMBER", "I", "agree", "on", "the", "mocking", "but", "at", "this", "point", "it", "s", "a", "lot", "of", "work", "across", "all", "the", "test", "to", "correct", "this", "path", "for", "a", "pay", "off", "on", "very", "occasional", "regressions", "NUMBER", "Perhaps", "someone", "with", "a", "bit", "more", "time", "than", "I", "will", "be", "motivated", "though", "Hi", "what", "version", "of", "Formtastic", "and", "Rails", "Have", "you", "recently", "upgrade", "either", "Rails", "NUMBER", "NUMBER", "change", "a", "LOT", "of", "this", "stuff", "under", "the", "hood", "on", "us", "but", "it", "_should_", "be", "resolve", "with", "NUMBER", "and", "Formtastic", "master", "or", "recent", "RCs", "NUMBER", "Thanks", "closing", "NUMBER", "Could", "you", "send", "a", "pull", "request", "with", "a", "fail", "spec", "Out", "of", "curiosity", "why", "would", "you", "want", "it", "to", "be", "nil", "anyway", "And", "yes", "upgrading", "sounds", "like", "the", "win", "here", "NUMBER", "Can", "we", "see", "a", "full", "stack", "trace", "Hmmm", "doesn", "t", "help", "much", "but", "we", "ll", "see", "What", "version", "of", "Formtastic", "Rails", "Mongo", "Mapper", "Mongo", "My", "head", "hurts", "NUMBER", "Is", "there", "a", "NUMBER", "on", "this", "diff", "Can", "anyone", "be", "bothered", "with", "a", "nice", "clean", "commit", "Also", "see", "my", "comment", "on", "NUMBER", "Er", "NUMBER", "I", "ve", "pull", "in", "the", "other", "request", "closing", "for", "now", "NUMBER", "Hi", "If", "you", "re", "currently", "use", "master", "bundling", "from", "git", "could", "you", "please", "try", "bundling", "one", "of", "the", "previous", "RC", "gems", "e", "NUMBER", "g", "NUMBER", "NUMBER", "rc", "NUMBER", "and", "or", "rc", "NUMBER", "There", "have", "be", "some", "change", "on", "master", "since", "rc", "NUMBER", "shipped", "very", "much", "relate", "to", "this", "part", "of", "the", "system", "and", "it", "d", "be", "helpful", "to", "narrow", "it", "down", "NUMBER", "Sure", "How", "about", "a", "patch", "too", "I", "have", "an", "extra", "busy", "week", "so", "any", "help", "I", "can", "get", "hunting", "this", "down", "would", "be", "great", "NUMBER", "thiel", "it", "s", "your", "bug", "report", "and", "I", "ve", "get", "a", "massive", "week", "at", "work", "so", "if", "you", "re", "up", "for", "it", "I", "d", "like", "to", "defer", "it", "to", "you", "to", "tell", "me", "what", "to", "merge", "in", "and", "when", "NUMBER", "many", "thanks", "or", "no", "problem", "in", "advance", "cthiel", "NUMBER", "s", "reference", "to", "check", "boxes", "input", "was", "a", "mistake", "NUMBER", "he", "meant", "hidden", "inputs", "NUMBER", "We", "re", "also", "not", "planning", "to", "merge", "that", "stuff", "in", "till", "after", "NUMBER", "most", "likely", "so", "whatever", "be", "up", "with", "check", "boxes", "be", "new", "what", "s", "the", "deal", "Sorry", "big", "week", "NUMBER", "If", "this", "request", "be", "fine", "to", "merge", "I", "ll", "do", "it", "straight", "away", "NUMBER", "No", "Thank", "you", "Hi", "James", "looks", "good", "although", "rather", "epic", "I", "ll", "be", "cutting", "a", "NUMBER", "NUMBER", "stable", "branch", "as", "soon", "as", "I", "ship", "NUMBER", "after", "which", "we", "can", "look", "at", "merge", "this", "into", "master", "assuming", "you", "re", "happy", "to", "keep", "polishing", "and", "rebasing", "here", "for", "a", "bit", "NUMBER", "The", "only", "commit", "I", "think", "should", "be", "keep", "very", "separate", "or", "perhaps", "revert", "entirely", "be", "the", "shifting", "of", "all", "spec", "paths", "it", "s", "the", "sort", "of", "patch", "that", "needs", "everyone", "on", "the", "same", "page", "and", "all", "major", "branch", "merge", "in", "order", "to", "ease", "the", "pain", "NUMBER", "It", "already", "doesn", "t", "cleanly", "apply", "Is", "there", "a", "reason", "other", "than", "convention", "to", "do", "it", "In", "regards", "to", "the", "stuff", "in", "checkboxes", "not", "sure", "exactly", "which", "TODO", "you", "mean", "NUMBER", "Which", "file", "line", "I", "might", "have", "to", "give", "you", "commit", "rights", "after", "this", "monster", "D", "Re", "opened", "so", "someone", "gets", "a", "reminder", "to", "do", "some", "cherry", "picking", "fbuenemann", "if", "you", "re", "keen", "to", "get", "these", "split", "up", "and", "ready", "for", "pulling", "in", "i", "m", "keen", "bu", "I", "think", "this", "one", "needs", "to", "be", "close", "off", "Since", "there", "s", "no", "test", "for", "this", "or", "any", "of", "our", "other", "generators", "can", "I", "ask", "the", "obvious", "question", "to", "save", "myself", "from", "having", "to", "do", "it", "have", "you", "confirmed", "that", "this", "runs", "as", "intended", "in", "a", "Rails", "app", "Please", "work", "on", "a", "patch", "would", "love", "to", "see", "this", "in", "NUMBER", "sobrinho", "yes", "as", "previously", "discussed", "shifting", "the", "input_html", "hash", "up", "into", "the", "top", "options", "name", "space", "works", "for", "me", "as", "long", "as", "it", "s", "backwards", "compatible", "for", "a", "bit", "which", "be", "where", "things", "get", "tricky", "In", "the", "meantime", "there", "s", "plenty", "of", "places", "where", "we", "check", "both", "namespaces", "so", "this", "data", "sugar", "could", "be", "add", "along", "side", "the", "hacks", "we", "have", "for", "things", "like", "min", "and", "max", "Hi", "happy", "to", "see", "this", "change", "made", "for", "NUMBER", "the", "class", "didn", "t", "exist", "at", "all", "in", "NUMBER", "x", "if", "you", "get", "in", "quick", "or", "in", "NUMBER", "otherwise", "NUMBER", "I", "would", "lean", "to", "make", "it", "easier", "to", "monkey", "patch", "the", "method", "right", "now", "because", "there", "s", "less", "chance", "of", "introduce", "a", "regression", "or", "an", "inconsistency", "there", "be", "other", "places", "where", "use", "class", "_adds_", "a", "class", "rather", "than", "_replaces_", "the", "class", "es", "NUMBER", "I", "guess", "you", "mean", "erb", "TAG", "TAG", "TAG", "In", "this", "case", "you", "should", "specify", "the", "ids", "manually", "like", "erb", "TAG", "id", "post_body_using_textile", "TAG", "id", "post_body_using_markdown", "TAG", "id", "post_body_using_html", "If", "its", "the", "case", "this", "the", "default", "behavior", "because", "the", "id", "be", "generate", "based", "on", "model", "name", "and", "attribute", "name", "NUMBER", "You", "be", "inside", "a", "loop", "on", "area_maps", "NUMBER", "each", "NUMBER", "You", "can", "use", "a", "unique", "id", "like", "you", "use", "on", "class_name", "We", "need", "specs", "to", "not", "break", "again", "in", "future", "Pulled", "thanks", "did", "you", "update", "the", "formtastic", "NUMBER", "css", "I", "will", "look", "here", "but", "did", "you", "tried", "the", "rc", "NUMBER", "version", "eetteri", "the", "issue", "be", "relate", "to", "rc", "NUMBER", "rc", "NUMBER", "works", "fine", "I", "agree", "NUMBER", "Safari", "Chrome", "and", "Firefox", "do", "not", "validate", "right", "yet", "NUMBER", "I", "m", "disabling", "the", "html", "NUMBER", "validations", "on", "every", "project", "NUMBER", "Could", "you", "post", "de", "full", "backtrace", "Fix", "was", "sent", "in", "NUMBER", "closing", "NUMBER", "release", "placeholder", "NUMBER", "means", "Done", "Pulled", "thanks", "I", "m", "work", "on", "this", "NUMBER", "Done", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "a", "NUMBER", "b", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "Cold", "you", "check", "with", "NUMBER", "rc", "NUMBER", "Could", "you", "check", "with", "master", "branch", "of", "formtastic", "too", "mtobias", "the", "issue", "be", "that", "the", "plugin", "has", "not", "be", "update", "to", "be", "compatible", "with", "Formtastic", "NUMBER", "x", "please", "raise", "it", "with", "them", "or", "fork", "the", "plugin", "and", "get", "to", "work", "Seems", "good", "for", "me", "NUMBER", "What", "happens", "in", "modern", "browsers", "when", "step", "be", "set", "to", "any", "According", "to", "W", "NUMBER", "C", "this", "be", "the", "specification", "NUMBER", "Thanks", "for", "submit", "NUMBER", "EppO", "did", "you", "make", "progress", "on", "this", "Pulled", "thans", "I", "don", "t", "remember", "which", "version", "we", "find", "an", "issue", "on", "that", "NUMBER", "Could", "you", "check", "with", "formtastic", "NUMBER", "rc", "NUMBER", "Could", "you", "add", "a", "test", "case", "too", "Pulled", "thanks", "What", "you", "mean", "with", "each", "fragment", "Currently", "field", "be", "display", "like", "this", "Published", "at", "year", "month", "day", "Passing", "false", "to", "label", "option", "you", "will", "get", "something", "like", "this", "year", "month", "day", "Maybe", "I", "misunderstood", "the", "question", "NUMBER", "You", "should", "implement", "some", "modules", "from", "ActiveModel", "on", "ActiveMerchant", "Billing", "CreditCard", "class", "to", "work", "with", "rails", "helpers", "model_name", "came", "from", "ActiveModel", "Naming", "NUMBER", "Take", "a", "look", "on", "documentation", "to", "get", "more", "details", "NUMBER", "troessner", "you", "can", "reopen", "the", "class", "and", "do", "something", "like", "that", "ruby", "class", "ActiveMerchant", "Billing", "CreditCard", "extend", "ActiveModel", "Naming", "end", "This", "should", "work", "if", "you", "put", "into", "an", "initializer", "What", "issue", "be", "you", "having", "On", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "betelgeusereply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "Pulled", "thanks", "Could", "you", "provide", "a", "fix", "Save", "Post", "be", "the", "right", "label", "in", "this", "case", "NUMBER", "I", "didn", "t", "find", "a", "quickly", "fix", "here", "NUMBER", "justinfrench", "do", "you", "know", "something", "about", "that", "This", "be", "great", "for", "now", "keep", "only", "relevant", "parts", "Thanks", "for", "fix", "Could", "you", "submit", "a", "pull", "request", "fix", "that", "Instead", "of", "email_address", "you", "can", "use", "avatar", "as", "example", "That", "s", "right", "due", "the", "HTML", "behavior", "NUMBER", "When", "you", "submit", "the", "search", "comments", "empty", "a", "blank", "array", "will", "be", "sent", "instead", "of", "nothing", "NUMBER", "nickurban", "you", "should", "use", "something", "like", "array", "NUMBER", "reject", "blank", "in", "your", "case", "NUMBER", "But", "activerecord", "will", "do", "it", "automatically", "on", "associations", "NUMBER", "I", "don", "t", "remember", "if", "it", "can", "be", "disabled", "on", "rails", "helpers", "or", "formtastic", "NUMBER", "Maybe", "justinfrench", "know", "Could", "you", "remove", "the", "notification", "email", "and", "update", "the", "pull", "request", "It", "depends", "what", "you", "consider", "easy", "There", "s", "a", "method", "call", "input_wrapping", "defined", "in", "the", "Html", "module", "NUMBER", "If", "you", "monkey", "patch", "that", "or", "override", "it", "in", "a", "specific", "input", "by", "subclassing", "NUMBER", "Is", "that", "enough", "for", "you", "to", "get", "start", "or", "do", "you", "need", "more", "help", "Justin", "On", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "chrisval", "write", "Hi", "I", "read", "a", "lot", "that", "there", "was", "to", "be", "a", "build", "in", "wrapper", "customization", "i", "NUMBER", "e", "NUMBER", "use", "td", "instead", "of", "li", "in", "further", "version", "of", "Formtastic", "but", "this", "was", "months", "ago", "NUMBER", "Is", "there", "any", "easy", "solution", "out", "yet", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Hi", "Do", "you", "want", "to", "do", "this", "for", "every", "input", "everywhere", "in", "the", "app", "or", "just", "for", "one", "in", "particular", "For", "monkey", "patching", "everything", "app", "wide", "you", "want", "an", "initializer", "in", "config", "initializers", "formtastic_patches", "NUMBER", "rb", "remember", "to", "restart", "your", "app", "for", "the", "change", "to", "take", "affect", "with", "something", "like", "this", "config", "initializers", "formtastic_patches", "NUMBER", "rb", "module", "Formtastic", "module", "Inputs", "module", "Base", "module", "Wrapping", "def", "input_wrapping", "block", "template", "NUMBER", "content_tag", "li", "template", "NUMBER", "capture", "block", "error_html", "hint_html", "NUMBER", "join", "n", "NUMBER", "html_safe", "wrapper_html_options", "end", "end", "end", "end", "end", "That", "s", "a", "copy", "paste", "of", "the", "exist", "code", "you", "ll", "want", "to", "switch", "the", "li", "for", "a", "td", "and", "who", "knows", "what", "else", "NUMBER", "For", "modification", "of", "an", "exist", "input", "say", "just", "all", "string", "inputs", "or", "a", "special", "case", "instance", "of", "a", "string", "input", "you", "need", "to", "put", "a", "file", "in", "app", "inputs", "which", "subclasses", "and", "modifies", "an", "exist", "input", "NUMBER", "Examples", "app", "inputs", "string_input", "NUMBER", "rb", "use", "with", "as", "string", "class", "StringInput", "TAG", "my_special_string", "class", "MySpecialStringInput", "TAG", "Thanks", "for", "the", "fast", "answer", "Justin", "NUMBER", "Yes", "monkey", "patching", "be", "surely", "what", "I", "m", "looking", "for", "NUMBER", "But", "I", "must", "admit", "that", "I", "have", "no", "idea", "how", "to", "achieve", "that", "NUMBER", "Could", "you", "advise", "any", "document", "that", "explains", "that", "procedure", "Thanks", "in", "advance", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "I", "could", "use", "the", "wrapper_html", "class", "large", "right", "I", "could", "answer", "that", "but", "I", "won", "t", "Justin", "crystalin", "this", "be", "your", "real", "form", "haml", "semantic_form_for", "paint", "do", "form", "NUMBER", "form", "NUMBER", "input", "name", "NUMBER", "semantic_fields_for", "user", "do", "user_form", "NUMBER", "user_form", "NUMBER", "input", "name", "If", "yes", "semantic_fields_for", "be", "wrong", "and", "should", "be", "something", "like", "haml", "semantic_form_for", "paint", "do", "form", "NUMBER", "form", "NUMBER", "input", "name", "NUMBER", "form", "NUMBER", "semantic_fields_for", "user", "do", "user_form", "NUMBER", "user_form", "NUMBER", "input", "name", "Could", "you", "post", "your", "locale", "file", "too", "I", "see", "NUMBER", "Could", "you", "submit", "a", "test", "case", "If", "change", "SCOPES", "and", "nothing", "breaks", "that", "s", "ok", "NUMBER", "I", "will", "take", "a", "look", "tonight", "justinfrench", "crystalin", "I", "can", "t", "reproduce", "the", "issue", "NUMBER", "I", "ve", "change", "the", "spec", "to", "this", "case", "but", "it", "s", "work", "fine", "here", "NUMBER", "justinfrench", "your", "spec", "will", "fail", "because", "be", "wrong", "NUMBER", "The", "issue", "be", "relate", "to", "use", "semantic_fields_for", "inside", "a", "semantic_form_for", "without", "builder", "NUMBER", "crystalin", "could", "you", "submit", "a", "test", "case", "or", "a", "fresh", "app", "having", "this", "issue", "bump", "out", "to", "NUMBER", "for", "now", "Hi", "given", "you", "re", "the", "first", "one", "to", "report", "this", "since", "the", "first", "release", "can", "you", "give", "me", "an", "insight", "into", "why", "the", "space", "be", "cause", "you", "trouble", "For", "most", "a", "space", "between", "them", "both", "be", "fine", "NUMBER", "The", "same", "exists", "in", "NUMBER", "so", "keen", "to", "hear", "more", "about", "why", "this", "be", "cause", "you", "pain", "NUMBER", "sncf", "Thanks", "colinross", "agreed", "Yes", "buttons", "be", "awesome", "no", "we", "don", "t", "have", "an", "API", "for", "them", "yet", "yes", "I", "want", "one", "I", "bump", "it", "out", "to", "NUMBER", "so", "that", "we", "d", "be", "ready", "for", "Rails", "NUMBER", "NUMBER", "There", "s", "a", "separate", "issue", "for", "this", "so", "I", "ll", "close", "this", "NUMBER", "In", "short", "you", "have", "three", "choices", "right", "now", "NUMBER", "monkey", "patch", "fork", "formtastic", "to", "change", "what", "f", "NUMBER", "commit_button", "do", "under", "the", "hood", "NUMBER", "use", "regular", "ERB", "Rails", "helpers", "and", "translations", "to", "achieve", "the", "same", "thing", "yourself", "NUMBER", "use", "what", "we", "have", "so", "far", "Awesome", "work", "Which", "open", "issue", "if", "any", "do", "this", "resolve", "NUMBER", "seems", "likely", "based", "on", "your", "comments", "NUMBER", "Cases", "be", "be", "report", "where", "a", "field", "be", "not", "required", "in", "NUMBER", "x", "but", "be", "required", "in", "NUMBER", "x", "NUMBER", "Looks", "like", "we", "re", "falling", "back", "to", "all_fields_required_by_default", "config", "true", "by", "default", "in", "cases", "where", "we", "didn", "t", "before", "NUMBER", "Hmmm", "multiple", "people", "verify", "this", "patch", "before", "NUMBER", "was", "release", "NUMBER", "Can", "you", "please", "advise", "your", "Rails", "version", "confirm", "you", "re", "use", "Rails", "NUMBER", "and", "confirm", "that", "you", "restarted", "your", "server", "and", "all", "those", "basic", "things", "after", "upgrading", "to", "NUMBER", "If", "you", "d", "like", "to", "try", "to", "patch", "it", "I", "would", "take", "a", "look", "at", "Formtastic", "Inputs", "Base", "Validations", "validation_max", "and", "min", "and", "take", "a", "look", "at", "this", "line", "return", "validation", "NUMBER", "options", "less_than", "NUMBER", "if", "validation", "NUMBER", "options", "less_than", "This", "line", "be", "assuming", "that", "less_than", "be", "a", "number", "not", "a", "Proc", "NUMBER", "The", "code", "needs", "to", "be", "change", "to", "something", "like", "this", "which", "detects", "and", "calls", "the", "Proc", "NUMBER", "if", "validation", "NUMBER", "options", "less_than", "return", "NUMBER", "if", "validation", "NUMBER", "options", "less_than", "NUMBER", "kind_of", "Proc", "return", "validation", "NUMBER", "options", "less_than", "NUMBER", "end", "The", "NUMBER", "obviously", "needs", "filling", "in", "I", "was", "about", "to", "suggest", "another", "work", "around", "may", "be", "to", "try", "less_than_or_equal_to", "but", "I", "think", "this", "would", "avoid", "the", "NUMBER", "error", "but", "still", "result", "in", "a", "Proc", "rather", "than", "a", "useful", "number", "in", "the", "min", "and", "max", "NUMBER", "If", "you", "wish", "to", "bypass", "this", "logic", "completely", "until", "it", "s", "sorted", "out", "a", "custom", "version", "of", "NumberInput", "in", "app", "inputs", "number_input", "NUMBER", "rb", "should", "help", "class", "NumberInput", "TAG", "folio_portfolio_portfolio_items", "instead", "of", "relying", "on", "Rails", "to", "guess", "it", "based", "on", "the", "models", "provide", "NUMBER", "The", "gem", "be", "simply", "call", "formtastic", "the", "justinfrench", "prefix", "and", "gems", "github", "NUMBER", "com", "server", "hasn", "t", "be", "use", "in", "years", "NUMBER", "So", "just", "to", "clarify", "here", "NUMBER", "The", "problem", "be", "that", "we", "do", "provide", "a", "way", "for", "you", "to", "pass", "in", "this", "default", "true", "option", "but", "you", "d", "like", "not", "to", "have", "to", "do", "this", "on", "every", "form", "so", "some", "way", "to", "set", "default", "options", "for", "semantic_form_for", "be", "desired", "I", "can", "see", "the", "appeal", "for", "you", "but", "I", "m", "not", "convinced", "that", "this", "feature", "will", "benefit", "NUMBER", "of", "our", "users", "NUMBER", "Let", "me", "think", "about", "it", "for", "a", "bit", "but", "in", "the", "meantime", "I", "think", "you", "have", "options", "NUMBER", "Monkey", "patch", "semantic_form_for", "NUMBER", "Make", "your", "own", "validated_form_for", "helper", "that", "wraps", "around", "semantic_form_for", "Hi", "just", "like", "Rails", "NUMBER", "s", "form_for", "LINK", "method", "i", "form_for", "you", "actually", "need", "that", "now", "NUMBER", "Perhaps", "you", "re", "on", "Rails", "NUMBER", "in", "which", "case", "your", "e", "right", "but", "the", "README", "be", "keep", "up", "to", "date", "with", "the", "rest", "of", "the", "code", "in", "master", "and", "we", "ve", "drop", "Rails", "NUMBER", "support", "for", "the", "forthcoming", "Formtastic", "NUMBER", "There", "s", "a", "NUMBER", "stable", "branch", "which", "would", "have", "the", "older", "README", "NUMBER", "What", "version", "of", "Formtastic", "be", "you", "use", "Ugh", "that", "s", "a", "bug", "NUMBER", "Fixing", "NUMBER", "Awesome", "I", "notice", "similar", "stuff", "when", "trying", "to", "upgrade", "Formtastic", "s", "test", "to", "work", "with", "NUMBER", "Upon", "looking", "at", "your", "example", "it", "almost", "feels", "like", "we", "ve", "get", "a", "bug", "NUMBER", "Here", "s", "the", "scopes", "from", "Formtastic", "I", "NUMBER", "n", "SCOPES", "model", "NUMBER", "nested_model", "NUMBER", "action", "NUMBER", "attribute", "model", "NUMBER", "action", "NUMBER", "attribute", "model", "NUMBER", "nested_model", "NUMBER", "attribute", "model", "NUMBER", "attribute", "nested_model", "NUMBER", "attribute", "attribute", "So", "I", "think", "what", "s", "happening", "be", "that", "the", "label", "for", "the", "author", "input", "be", "trying", "en", "NUMBER", "formtastic", "NUMBER", "labels", "NUMBER", "post", "NUMBER", "new", "NUMBER", "author", "falling", "back", "to", "en", "NUMBER", "formtastic", "NUMBER", "labels", "NUMBER", "post", "NUMBER", "author", "and", "then", "finally", "en", "NUMBER", "formtastic", "NUMBER", "labels", "NUMBER", "author", "NUMBER", "I", "m", "a", "little", "bit", "puzzled", "why", "the", "labels", "part", "of", "the", "scope", "but", "we", "can", "come", "back", "to", "that", "NUMBER", "The", "key", "here", "be", "that", "for", "a", "label", "author", "be", "an", "attribute", "so", "the", "problem", "with", "the", "above", "scoping", "be", "that", "you", "re", "also", "specify", "author", "as", "a", "model", "with", "attributes", "hence", "the", "hash", "NUMBER", "I", "m", "wondering", "if", "you", "could", "try", "add", "a", "labels", "scope", "to", "see", "if", "that", "clears", "up", "the", "problem", "en", "formtastic", "labels", "author", "Author", "s", "Name", "author", "name", "Author", "s", "Name", "Perhaps", "we", "can", "also", "catch", "this", "error", "was", "it", "raise", "in", "Formtastic", "or", "in", "i", "NUMBER", "n", "and", "handle", "it", "better", "NUMBER", "I", "can", "t", "see", "any", "specific", "change", "in", "i", "NUMBER", "n", "NUMBER", "to", "cause", "this", "but", "I", "m", "not", "an", "expert", "NUMBER", "Hi", "could", "you", "try", "bundling", "directly", "from", "master", "on", "github", "with", "the", "git", "option", "to", "try", "out", "the", "work", "we", "ve", "do", "towards", "Formtastic", "NUMBER", "The", "README", "be", "be", "prepared", "for", "the", "NUMBER", "release", "but", "I", "thought", "it", "would", "all", "apply", "to", "the", "NUMBER", "gem", "as", "well", "NUMBER", "If", "you", "could", "also", "provide", "an", "example", "from", "your", "app", "so", "I", "know", "exactly", "what", "to", "test", "for", "and", "try", "to", "expose", "as", "a", "bug", "sobrinho", "I", "had", "a", "lot", "of", "trouble", "get", "the", "i", "NUMBER", "n", "specs", "passing", "with", "symbols", "rather", "than", "associations", "on", "Rails", "NUMBER", "so", "I", "m", "not", "sure", "where", "to", "go", "from", "here", "current", "examples", "real", "associations", "be", "buggy", "previous", "examples", "symbols", "naming", "associations", "be", "buggy", "Personally", "I", "feel", "like", "both", "should", "work", "NUMBER", "Sounds", "like", "we", "need", "to", "define", "what", "we", "want", "then", "figure", "out", "the", "path", "forward", "NUMBER", "If", "you", "agree", "both", "should", "be", "support", "then", "lets", "start", "improving", "the", "i", "NUMBER", "n", "specs", "NUMBER", "They", "re", "a", "mess", "NUMBER", "Ok", "looks", "like", "I", "was", "wrong", "NUMBER", "I", "change", "the", "i", "NUMBER", "n", "specs", "back", "to", "prove", "a", "point", "and", "they", "proved", "nothing", "so", "I", "revert", "the", "doc", "commit", "NUMBER", "It", "d", "be", "nice", "if", "these", "associations", "_did_", "work", "NUMBER", "Can", "someone", "make", "an", "issue", "or", "a", "pull", "gucki", "I", "think", "it", "was", "a", "non", "issue", "non", "bug", "or", "red", "herring", "NUMBER", "If", "you", "re", "seeing", "relate", "problem", "please", "file", "a", "new", "issue", "NUMBER", "You", "re", "right", "about", "the", "comment", "NUMBER", "Rails", "NUMBER", "be", "YAGNI", "and", "we", "_do_", "fallback", "to", "all_fields_required_by_default", "in", "Base", "Validations", "but", "I", "think", "switching", "to", "false", "by", "default", "would", "be", "a", "surprising", "change", "in", "behaviour", "for", "those", "few", "that", "be", "falling", "back", "to", "this", "case", "NUMBER", "What", "s", "you", "re", "motivation", "for", "false", "by", "default", "What", "pain", "were", "you", "hitting", "Formtastic", "NUMBER", "x", "has", "all_fields_required_by_default", "true", "and", "Formtastic", "NUMBER", "x", "should", "be", "the", "same", "NUMBER", "If", "we", "ve", "introduce", "a", "bug", "or", "feature", "that", "s", "cause", "more", "form", "and", "field", "to", "appear", "required", "then", "we", "can", "look", "into", "those", "as", "a", "separate", "issue", "but", "I", "m", "not", "going", "to", "switch", "it", "over", "without", "good", "reason", "NUMBER", "I", "originally", "made", "the", "choice", "of", "true", "because", "in", "most", "cases", "the", "owner", "of", "the", "website", "would", "prefer", "if", "all", "field", "be", "filled", "in", "otherwise", "they", "wouldn", "t", "be", "on", "the", "form", "NUMBER", "Not", "everyone", "has", "to", "agree", "but", "that", "s", "why", "it", "s", "a", "config", "I", "think", "it", "s", "a", "bad", "idea", "to", "change", "the", "behaviour", "of", "something", "like", "this", "NUMBER", "etehtsea", "perhaps", "you", "have", "an", "old", "config", "file", "with", "false", "which", "be", "not", "be", "pick", "up", "I", "_thought_", "everything", "was", "backwards", "compatible", "but", "perhaps", "it", "isn", "t", "NUMBER", "Would", "like", "to", "get", "the", "bottom", "of", "why", "your", "form", "change", "so", "much", "NUMBER", "I", "ve", "fix", "the", "config", "template", "in", "order", "to", "get", "a", "RC", "out", "soon", "so", "I", "ll", "close", "this", "issue", "NUMBER", "Definitely", "keen", "to", "open", "new", "issue", "when", "you", "can", "pinpoint", "them", "etehsea", "Is", "merge", "this", "going", "to", "add", "boatloads", "of", "noise", "to", "my", "commit", "history", "You", "could", "validate", "the", "presence", "of", "the", "association", "instead", "what", "I", "do", "or", "I", "guess", "we", "need", "some", "more", "code", "to", "go", "look", "at", "an", "association", "input", "s", "foriegn", "key", "and", "check", "for", "validations", "there", "too", "NUMBER", "Are", "you", "keen", "to", "work", "up", "a", "patch", "Someone", "has", "patched", "to", "remove", "that", "comment", "about", "Rails", "NUMBER", "in", "NUMBER", "I", "agree", "that", "booleans", "should", "not", "be", "required", "by", "default", "NUMBER", "Since", "there", "s", "a", "pull", "request", "NUMBER", "open", "with", "the", "patches", "I", "ll", "close", "this", "issue", "and", "we", "can", "continue", "any", "discussion", "there", "NUMBER", "This", "be", "by", "design", "the", "behaviour", "you", "re", "describing", "be", "as", "it", "s", "documented", "and", "test", "to", "work", "NUMBER", "It", "s", "purpose", "be", "_mainly_", "to", "render", "error", "on", "base", "out", "of", "the", "box", "Renders", "error", "on", "base", "TAG", "In", "addition", "you", "can", "optionally", "pass", "in", "other", "attributes", "you", "want", "to", "also", "render", "error", "for", "NUMBER", "The", "use", "case", "was", "if", "I", "recall", "correctly", "that", "Attachment", "Fu", "or", "Paperclip", "had", "file", "upload", "error", "on", "other", "attributes", "that", "weren", "t", "represented", "by", "form", "inputs", "NUMBER", "Renders", "error", "on", "base", "and", "on", "something", "special", "TAG", "So", "you", "re", "example", "above", "be", "not", "surprisingly", "rendering", "the", "error", "on", "base", "twice", "NUMBER", "This", "causes", "me", "to", "wonder", "NUMBER", "were", "you", "get", "different", "results", "in", "Rails", "NUMBER", "or", "be", "this", "a", "fresh", "app", "NUMBER", "what", "were", "you", "expecting", "semantic_errors", "to", "do", "differently", "The", "only", "code", "change", "I", "can", "think", "of", "be", "to", "drop", "base", "from", "the", "list", "if", "it", "s", "be", "pass", "in", "as", "an", "arg", "like", "the", "example", "above", "remove", "the", "duplication", "NUMBER", "I", "ll", "work", "on", "that", "please", "get", "back", "to", "me", "on", "the", "rest", "tanman", "NUMBER", "region", "NUMBER", "inputs", "NUMBER", "should", "be", "region", "NUMBER", "input", "NUMBER", "Should", "be", "easy", "to", "modify", "CountryInput", "to", "look", "for", "localized_country_select", "as", "well", "as", "just", "country_select", "assuming", "they", "both", "have", "the", "same", "or", "similar", "params", "and", "options", "NUMBER", "t", "NUMBER", "ben", "do", "the", "plugin", "you", "re", "suggesting", "still", "work", "with", "Rails", "NUMBER", "and", "all", "the", "new", "toys", "If", "so", "this", "be", "an", "easy", "addition", "NUMBER", "If", "not", "well", "there", "s", "no", "point", "Formtastic", "be", "opinionated", "about", "it", "s", "markup", "choices", "NUMBER", "There", "s", "no", "_easy_", "or", "_configurable_", "way", "to", "change", "the", "mark", "up", "but", "since", "you", "re", "use", "master", "it", "be", "now", "much", "easier", "than", "it", "use", "to", "be", "NUMBER", "You", "don", "t", "need", "to", "rewrite", "the", "whole", "of", "check_boxes_input", "NUMBER", "rb", "but", "you", "will", "need", "to", "create", "a", "custom", "input", "which", "subclasses", "CheckBoxesInput", "and", "override", "a", "few", "methods", "that", "generate", "the", "mark", "up", "NUMBER", "For", "starters", "read", "my", "blog", "post", "that", "gives", "a", "quick", "overview", "of", "the", "custom", "inputs", "framework", "we", "now", "have", "in", "place", "LINK", "NUMBER", "preview", "custom", "inputs", "Next", "look", "at", "check_boxes_input", "NUMBER", "rb", "to_html", "and", "you", "ll", "see", "that", "there", "s", "a", "few", "methods", "there", "that", "be", "doing", "most", "of", "the", "lifting", "like", "choices_wrapping", "the", "TAG", "choices_group_wrapping", "the", "TAG", "NUMBER", "Both", "of", "these", "be", "in", "Base", "Choices", "NUMBER", "There", "be", "some", "other", "methods", "you", "ll", "need", "to", "override", "for", "labelling", "etc", "but", "this", "be", "the", "only", "way", "to", "do", "this", "stuff", "in", "Formtastic", "NUMBER", "Whilst", "it", "s", "_possible_", "I", "d", "like", "to", "point", "out", "that", "this", "be", "edge", "software", "and", "you", "re", "basically", "redefining", "methods", "and", "APIs", "that", "may", "change", "I", "haven", "t", "figured", "out", "what", "s", "public", "and", "private", "yet", "so", "it", "might", "be", "a", "bumpy", "road", "before", "NUMBER", "ships", "NUMBER", "Ultimately", "this", "be", "your", "call", "NUMBER", "if", "it", "s", "worth", "change", "the", "mark", "up", "there", "s", "a", "way", "NUMBER", "For", "me", "I", "find", "TAG", "and", "TAG", "a", "much", "better", "semantic", "fit", "and", "ultimately", "all", "this", "stuff", "be", "just", "block", "elements", "that", "can", "be", "styled", "however", "you", "like", "NUMBER", "The", "mark", "up", "just", "isn", "t", "that", "important", "as", "long", "as", "there", "s", "enough", "styling", "hooks", "NUMBER", "I", "m", "closing", "this", "issue", "because", "simple", "configurable", "mark", "up", "choices", "really", "isn", "t", "on", "the", "radar", "now", "NUMBER", "Custom", "inputs", "and", "simple", "well", "structured", "methods", "that", "can", "be", "overridden", "be", "where", "we", "re", "at", "NUMBER", "Hi", "I", "ve", "be", "work", "on", "this", "NUMBER", "Are", "you", "use", "master", "or", "NUMBER", "Was", "this", "a", "work", "screen", "before", "you", "upgrade", "You", "can", "try", "this", "short", "term", "TAG", "YOUR_BUILDER", "do", "user_fields", "Where", "YOUR_BUILDER", "be", "probably", "Formtastic", "SemanticFormBuilder", "NUMBER", "or", "Formtastic", "FormBuilder", "edge", "NUMBER", "Please", "get", "back", "to", "me", "with", "version", "details", "etc", "NUMBER", "I", "file", "this", "as", "a", "Rails", "issue", "in", "the", "old", "Rails", "Lighthouse", "tracker", "just", "before", "it", "get", "close", "down", "NUMBER", "I", "grabbed", "josevalim", "on", "chat", "last", "night", "and", "he", "s", "re", "opened", "the", "issue", "LINK", "I", "don", "t", "know", "what", "the", "outcome", "will", "be", "but", "ideally", "this", "be", "a", "Rails", "issue", "NUMBER", "Both", "Simple", "Form", "and", "Formtastic", "will", "have", "this", "same", "issue", "since", "we", "wrap", "fields_for", "in", "a", "similar", "way", "NUMBER", "So", "I", "ve", "be", "thinking", "about", "this", "NUMBER", "We", "can", "detect", "Rails", "NUMBER", "and", "wrap", "everything", "differently", "NUMBER", "Anyone", "keen", "How", "about", "a", "patch", "for", "Rails", "sobrinho", "josevalim", "sobrinho", "which", "specs", "be", "fail", "for", "you", "I", "ve", "be", "trying", "to", "look", "into", "this", "this", "morning", "with", "Rails", "NUMBER", "rc", "NUMBER", "and", "Rails", "NUMBER", "rc", "NUMBER", "and", "actually", "couldn", "t", "find", "a", "fail", "spec", "NUMBER", "I", "have", "an", "idea", "what", "to", "hack", "in", "to", "make", "it", "work", "though", "Ok", "I", "think", "I", "ve", "get", "half", "of", "a", "crazy", "ass", "Frankenstien", "patch", "in", "progress", "NUMBER", "In", "Formtastic", "Helpers", "FormHelper", "detect", "which", "version", "of", "Rails", "it", "be", "and", "use", "class_eval", "or", "something", "nicer", "perhaps", "to", "dynamically", "define", "a", "method", "that", "fits", "the", "method", "signature", "of", "that", "Rails", "version", "NUMBER", "vs", "NUMBER", "NUMBER", "Same", "thing", "will", "have", "to", "happen", "in", "test", "to", "test", "use", "the", "right", "sig", "NUMBER", "This", "allows", "semantic_fields_for", "to", "have", "the", "same", "API", "as", "fields_for", "in", "whatever", "version", "of", "Rails", "you", "re", "use", "NUMBER", "sobrinho", "be", "this", "worth", "me", "going", "forward", "and", "trying", "to", "work", "up", "a", "patch", "Yup", "I", "m", "work", "on", "the", "first", "version", "will", "see", "how", "I", "go", "NUMBER", "Didn", "t", "think", "about", "RDoc", "Yard", "but", "I", "ll", "see", "what", "happens", "NUMBER", "Master", "or", "NUMBER", "Someone", "spotted", "that", "regression", "straight", "away", "so", "it", "should", "have", "be", "sorted", "NUMBER", "Re", "open", "would", "like", "to", "ensure", "this", "be", "fix", "in", "NUMBER", "mehigh", "the", "value", "of", "the", "checkbox", "input", "should", "be", "NUMBER", "but", "if", "your", "model", "has", "a", "value", "of", "NUMBER", "on", "the", "attribute", "then", "yes", "that", "should", "not", "be", "checked", "NUMBER", "The", "trouble", "be", "I", "haven", "t", "be", "able", "to", "reproduce", "this", "test", "case", "in", "the", "specs", "so", "any", "info", "you", "can", "provide", "would", "be", "great", "NUMBER", "If", "you", "have", "RVM", "could", "you", "try", "switching", "to", "NUMBER", "Finally", "Formtastic", "NUMBER", "the", "latest", "stable", "gem", "be", "a", "long", "way", "from", "master", "so", "you", "could", "also", "try", "bundling", "directly", "from", "git", "on", "the", "master", "branch", "with", "the", "git", "option", "to", "see", "if", "the", "bug", "still", "exists", "in", "master", "NUMBER", "mehigh", "Just", "re", "read", "your", "comments", "NUMBER", "You", "re", "use", "the", "gem", "NUMBER", "so", "it", "d", "be", "great", "if", "you", "could", "try", "NUMBER", "beta", "NUMBER", "which", "I", "want", "to", "release", "a", "final", "for", "in", "the", "next", "NUMBER", "hrs", "NUMBER", "NUMBER", "beta", "NUMBER", "contains", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "Use", "check_box_checked", "from", "Rails", "for", "boolean", "inputs", "which", "I", "believe", "fix", "the", "bug", "you", "re", "experience", "NUMBER", "Shifting", "this", "issue", "into", "NUMBER", "milestone", "and", "closing", "NUMBER", "Please", "feel", "free", "to", "re", "open", "if", "the", "beta", "or", "NUMBER", "final", "doesn", "t", "help", "you", "NUMBER", "Awesome", "colinross", "yeah", "this", "was", "a", "memory", "jogger", "for", "me", "NUMBER", "We", "re", "compatible", "already", "NUMBER", "What", "we", "can", "do", "however", "be", "shift", "the", "generator", "template", "into", "public", "so", "that", "the", "asset", "pipeline", "pick", "them", "up", "and", "effectively", "deprecate", "the", "generator", "that", "copies", "stuff", "into", "the", "app", "s", "public", "dir", "NUMBER", "That", "s", "the", "first", "win", "although", "I", "want", "to", "make", "sure", "people", "can", "easily", "opt", "out", "of", "formtastic", "NUMBER", "css", "before", "committing", "NUMBER", "Just", "need", "to", "look", "into", "sprockets", "a", "bit", "more", "NUMBER", "Shifting", "to", "SASS", "would", "be", "a", "separate", "issue", "we", "can", "take", "advantage", "of", "variables", "mostly", "but", "there", "really", "isn", "t", "a", "massive", "win", "with", "SASS", "with", "the", "direction", "I", "m", "trying", "to", "push", "the", "CSS", "simple", "class", "selectors", "with", "very", "little", "scoping", "nesting", "NUMBER", "Hi", "Trevor", "this", "be", "great", "work", "but", "I", "m", "not", "sure", "I", "want", "to", "open", "this", "can", "of", "worms", "NUMBER", "I", "think", "this", "be", "something", "a", "developer", "would", "add", "to", "their", "own", "app", "if", "necessary", "rather", "than", "us", "committing", "to", "maintaining", "translations", "for", "N", "languages", "ourselves", "NUMBER", "Rails", "doesn", "t", "ship", "with", "multiple", "translations", "out", "of", "the", "box", "right", "Anyone", "with", "a", "differing", "opinion", "before", "I", "close", "this", "How", "about", "a", "wiki", "page", "that", "links", "to", "or", "even", "embeds", "bunch", "of", "gists", "I", "m", "going", "to", "close", "this", "for", "now", "but", "please", "do", "find", "room", "on", "the", "wiki", "Nice", "NUMBER", "Should", "we", "support", "this", "in", "SelectInput", "as", "well", "do", "we", "already", "Should", "choice_options", "be", "renamed", "to", "choice_html_options", "for", "consistency", "Can", "we", "make", "it", "clearer", "what", "choice_options", "be", "doing", "Perhaps", "the", "following", "def", "choice_html_options", "choice", "custom_choice_html_options", "choice", "NUMBER", "merge", "default_choice_html_options", "choice", "end", "def", "default_choice_html_options", "choice", "id", "choice_input_dom_id", "choice", "end", "def", "custom_choice_html_options", "choice", "choice", "NUMBER", "is_a", "Array", "choice", "NUMBER", "size", "NUMBER", "choice", "NUMBER", "last", "end", "Would", "also", "like", "to", "see", "some", "documentation", "NUMBER", "Awesome", "awesome", "start", "thanks", "for", "pitching", "in", "can", "you", "drag", "it", "over", "the", "line", "please", "Awesome", "let", "me", "know", "when", "it", "s", "ready", "to", "roll", "NUMBER", "Found", "some", "time", "on", "the", "train", "did", "it", "myself", "Feel", "free", "to", "chip", "in", "with", "the", "TODOs", "etc", "as", "separate", "pulls", "but", "thanks", "for", "your", "help", "so", "far", "Looks", "great", "It", "d", "be", "good", "to", "get", "a", "NUMBER", "on", "the", "JS", "because", "I", "m", "not", "a", "JS", "geek", "NUMBER", "Is", "it", "worth", "us", "considering", "leaning", "on", "or", "recommending", "or", "vendoring", "a", "polyfill", "like", "LINK", "instead", "of", "build", "up", "a", "bunch", "of", "JS", "we", "need", "to", "maintain", "For", "the", "record", "_if_", "it", "s", "appropriate", "for", "us", "to", "provide", "JS", "libraries", "I", "m", "totally", "in", "favour", "of", "betting", "the", "farm", "on", "jQuery", "Rails", "NUMBER", "sends", "a", "clear", "signal", "which", "was", "based", "on", "developer", "community", "sentiment", "We", "re", "only", "provide", "fallbacks", "at", "this", "stage", "which", "you", "can", "choose", "to", "use", "You", "be", "in", "control", "of", "your", "own", "app", "you", "don", "t", "have", "to", "include", "the", "JS", "supplied", "by", "Formtastic", "In", "the", "spirit", "of", "this", "jQuery", "be", "fine", "with", "me", "but", "let", "s", "not", "build", "stuff", "that", "_requires_", "our", "specific", "scripts", "to", "work", "NUMBER", "We", "should", "be", "a", "good", "app", "citizen", "NUMBER", "There", "s", "no", "way", "we", "ll", "be", "shipping", "multiple", "libraries", "to", "support", "multiple", "JS", "frameworks", "and", "I", "m", "not", "scared", "of", "having", "an", "opinion", "as", "long", "as", "we", "don", "t", "force", "everyone", "to", "drink", "the", "koolaid", "NUMBER", "I", "know", "sobrinho", "has", "some", "ideas", "with", "regards", "to", "JS", "too", "NUMBER", "If", "there", "s", "a", "way", "we", "can", "modify", "this", "pull", "to", "exclude", "the", "JS", "component", "for", "now", "I", "ll", "happily", "accept", "the", "rest", "of", "this", "and", "let", "the", "JS", "nerds", "get", "together", "and", "come", "up", "with", "a", "strategy", "NUMBER", "benschwarz", "Yes", "there", "s", "plenty", "of", "other", "new", "form", "features", "we", "can", "support", "many", "of", "which", "be", "logged", "as", "issue", "for", "the", "NUMBER", "release", "NUMBER", "Feel", "free", "to", "review", "add", "to", "them", "etc", "NUMBER", "We", "want", "them", "all", "trimentor", "wanted", "this", "one", "so", "it", "s", "awesome", "he", "was", "motivated", "to", "make", "a", "patch", "NUMBER", "Feel", "free", "to", "make", "the", "ones", "you", "think", "be", "top", "priority", "D", "Is", "there", "another", "Rails", "plugin", "engine", "that", "has", "already", "considered", "some", "of", "this", "stuff", "that", "we", "can", "learn", "from", "jackdempsey", "thanks", "for", "the", "insight", "on", "what", "s", "work", "for", "you", "I", "did", "it", "myself", "Pretty", "sure", "this", "be", "covered", "now", "closing", "NUMBER", "The", "li", "elements", "SHOULD", "be", "enclosed", "in", "uls", "so", "what", "situation", "were", "you", "in", "that", "this", "wasn", "t", "true", "Can", "I", "see", "an", "example", "form", "or", "HTML", "markup", "Hi", "this", "looks", "good", "thanks", "for", "get", "your", "hands", "dirty", "and", "figuring", "it", "out", "NUMBER", "Happy", "to", "pull", "it", "in", "as", "soon", "as", "there", "s", "some", "spec", "coverage", "so", "that", "we", "ensure", "this", "continues", "to", "work", "in", "the", "future", "NUMBER", "Bonus", "points", "for", "documentation", "or", "at", "least", "checking", "if", "any", "be", "required", "Any", "progress", "I", "ve", "recently", "made", "the", "change", "to", "hidden", "in", "master", "too", "NUMBER", "Closing", "thanks", "NUMBER", "Yes", "we", "try", "various", "other", "methods", "first", "like", "to_label", "NUMBER", "You", "can", "also", "specify", "the", "method", "per", "input", "with", "the", "lable_method", "option", "which", "also", "do", "some", "other", "cool", "stuff", "NUMBER", "Check", "the", "README", "or", "docs", "for", "further", "info", "f", "NUMBER", "input", "foos", "as", "select", "label_method", "name", "If", "you", "re", "bundling", "from", "master", "rather", "than", "the", "gem", "we", "ve", "renamed", "and", "deprecate", "label_method", "to", "member_label", "NUMBER", "baash", "NUMBER", "label_method", "was", "renamed", "to", "member_label", "NUMBER", "See", "the", "input", "documentation", "LINK", "input", "instance_method", "LinkedIn", "Eu", "gostaria", "de", "adicion\u00e1", "lo", "\u00e0", "minha", "rede", "profissional", "no", "LinkedIn", "NUMBER", "Gabriel", "Gabriel", "Sobrinho", "Brasil", "Confirme", "que", "voc\u00ea", "conhece", "Gabriel", "Sobrinho", "LINK", "gqgok", "NUMBER", "p", "NUMBER", "isd", "NUMBER", "qh", "NUMBER", "THOO", "c", "NUMBER", "LinkedIn", "Corporation", "I", "know", "that", "there", "s", "some", "really", "lazy", "mock", "the", "whole", "word", "stuff", "in", "here", "and", "I", "know", "we", "re", "doing", "a", "lot", "of", "rendering", "but", "if", "someone", "with", "some", "experience", "in", "profiling", "ruby", "can", "figure", "out", "where", "the", "biggest", "bottlenecks", "be", "and", "find", "some", "quick", "wins", "to", "speed", "things", "up", "that", "d", "be", "fantastic", "NUMBER", "Maybe", "it", "s", "a", "performance", "issue", "in", "the", "code", "but", "I", "suspect", "it", "s", "more", "likely", "an", "issue", "in", "the", "mocking", "and", "stubbing", "that", "takes", "place", "before", "each", "spec", "NUMBER", "They", "never", "use", "to", "be", "this", "slow", "and", "I", "find", "it", "surprising", "given", "there", "s", "no", "database", "or", "filesystem", "calls", "NUMBER", "jwinter", "this", "be", "awesome", "So", "be", "there", "a", "way", "to", "manage", "GC", "better", "ourselves", "in", "MRI", "NUMBER", "Perhaps", "something", "like", "LINK", "speed", "up", "rspec", "by", "deferring", "garbage", "collection", "Stubbing", "doesn", "t", "surprise", "me", "every", "model", "for", "every", "scenario", "be", "stubbed", "so", "I", "should", "have", "a", "look", "at", "how", "much", "stuff", "we", "stub", "on", "every", "scenario", "then", "evaluate", "and", "how", "much", "be", "just", "do", "at", "the", "start", "of", "the", "suite", "and", "if", "it", "can", "be", "do", "better", "NUMBER", "Wow", "just", "applied", "the", "DeferredGarbageCollector", "patch", "above", "before", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "after", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "That", "s", "a", "start", "Looking", "into", "stubs", "and", "mocks", "there", "doesn", "t", "seem", "to", "be", "a", "faster", "way", "in", "rspec", "NUMBER", "There", "be", "ways", "to", "stub", "more", "than", "one", "method", "on", "an", "object", "at", "a", "time", "but", "under", "the", "hood", "those", "methods", "simply", "call", "the", "singular", "stub", "method", "so", "I", "can", "t", "see", "how", "there", "s", "much", "if", "any", "to", "gain", "NUMBER", "The", "win", "be", "probably", "much", "harder", "NUMBER", "NUMBER", "more", "mock", "objects", "set", "up", "once", "properly", "for", "re", "use", "in", "different", "scenarios", "without", "re", "stubbing", "the", "same", "stuff", "over", "and", "over", "again", "NUMBER", "moving", "some", "of", "the", "things", "we", "repeatedly", "stub", "up", "into", "the", "base", "objects", "Post", "Author", "as", "real", "instance", "and", "class", "methods", "Both", "doable", "but", "I", "m", "not", "sure", "if", "it", "s", "worth", "the", "pain", "NUMBER", "Object", "localized_string", "has", "me", "baffled", "NUMBER", "We", "have", "a", "method", "name", "localized_string", "and", "I", "d", "bet", "good", "money", "it", "s", "very", "slow", "but", "I", "can", "t", "see", "where", "it", "would", "be", "include", "in", "Object", "NUMBER", "It", "s", "include", "in", "a", "few", "other", "classes", "so", "perhaps", "these", "be", "aggregated", "together", "as", "one", "item", "in", "the", "PDF", "I", "find", "things", "be", "mostly", "fast", "enough", "for", "NUMBER", "good", "to", "keep", "bringing", "it", "down", "but", "no", "urgency", "NUMBER", "Pretty", "sure", "radio", "inputs", "accept", "an", "array", "of", "true", "false", "TAG", "radio", "collection", "true", "false", "label", "Cover", "You", "ll", "need", "a", "cover", "column", "or", "virtual", "attribute", "on", "the", "model", "to", "make", "that", "work", "NUMBER", "Closing", "for", "now", "feel", "free", "to", "re", "open", "NUMBER", "Merged", "in", "closing", "NUMBER", "What", "version", "of", "Formtastic", "NUMBER", "master", "You", "can", "test", "with", "master", "rather", "than", "NUMBER", "by", "change", "your", "Gemfile", "to", "bundle", "direct", "from", "master", "with", "the", "git", "option", "NUMBER", "Formtastic", "definitely", "expects", "you", "to", "be", "use", "the", "association", "name", "scale", "rather", "than", "scale_id", "NUMBER", "You", "could", "change", "your", "test", "as", "follows", "def", "test_should_be_valid", "attributes", "attributes", "name", "must_be_set", "attributes", "scale", "Scale", "NUMBER", "first", "or", "some", "other", "persisited", "Scale", "object", "assert", "Modificator", "NUMBER", "new", "attributes", "NUMBER", "valid", "end", "And", "obviously", "change", "add", "your", "validation", "on", "scale", "as", "well", "NUMBER", "Closing", "for", "now", "please", "feel", "free", "to", "re", "open", "NUMBER", "Could", "you", "submit", "a", "pull", "request", "Switching", "to", "gemspec", "generate", "by", "bundler", "would", "be", "great", "Happy", "to", "have", "the", "test", "suite", "include", "if", "it", "s", "usefull", "it", "was", "excluded", "because", "I", "couldn", "t", "see", "any", "reason", "to", "include", "it", "but", "I", "m", "not", "going", "to", "do", "the", "work", "any", "time", "soon", "NUMBER", "Will", "happily", "accept", "a", "pull", "request", "closing", "for", "now", "NUMBER", "Pulled", "thanks", "Doing", "this", "now", "NUMBER", "Also", "renaming", "group_value_method", "to", "just", "group_value", "although", "I", "m", "thinking", "about", "deprecating", "that", "bad", "boy", "NUMBER", "I", "m", "lost", "on", "this", "one", "now", "after", "such", "a", "break", "NUMBER", "the", "work", "I", "have", "so", "far", "be", "in", "the", "range", "input", "branch", "NUMBER", "Is", "your", "patch", "against", "that", "branch", "or", "be", "it", "a", "patch", "against", "whatever", "be", "in", "your", "own", "fork", "which", "I", "think", "would", "have", "diverged", "a", "lot", "If", "possible", "a", "clean", "patch", "against", "range", "input", "if", "it", "isn", "t", "already", "would", "be", "great", "NUMBER", "I", "ll", "grab", "it", "and", "merge", "the", "branch", "into", "master", "for", "any", "final", "tweak", "NUMBER", "Also", "realised", "I", "have", "a", "WIP", "commit", "locally", "that", "I", "haven", "t", "push", "to", "the", "remote", "NUMBER", "I", "ll", "just", "paste", "it", "here", "rather", "than", "push", "up", "something", "half", "complete", "commit", "fe", "NUMBER", "eb", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "baf", "NUMBER", "Author", "Justin", "French", "TAG", "Date", "Sun", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "WIP", "diff", "git", "a", "spec", "inputs", "number_input_spec", "NUMBER", "rb", "b", "spec", "inputs", "number_input_spec", "NUMBER", "rb", "index", "cac", "NUMBER", "ae", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "spec", "inputs", "number_input_spec", "NUMBER", "rb", "b", "spec", "inputs", "number_input_spec", "NUMBER", "rb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "describe", "number", "input", "do", "end", "it", "should", "add", "a", "max", "attribute", "to", "the", "input", "one", "greater", "than", "the", "validation", "do", "concat", "semantic_form_for", "new_post", "do", "builder", "builder", "NUMBER", "input", "title", "as", "number", "end", "output_buffer", "NUMBER", "should", "have_tag", "input", "min", "NUMBER", "end", "it", "should", "allow", "input_html", "to", "override", "min", "do", "it", "should", "allow", "input_html", "to", "override", "min", "from", "validation", "do", "concat", "semantic_form_for", "new_post", "do", "builder", "builder", "NUMBER", "input", "title", "as", "number", "input_html", "min", "NUMBER", "end", "output_buffer", "NUMBER", "should", "have_tag", "input", "min", "NUMBER", "end", "describe", "and", "the", "column", "be", "an", "integer", "do", "before", "do", "new_post", "NUMBER", "ub", "column_for_attribute", "NUMBER", "with", "title", "NUMBER", "and_return", "mock", "column", "type", "end", "it", "should", "add", "a", "max", "attribute", "to", "the", "input", "one", "greater", "than", "the", "validation", "do", "concat", "semantic_form_for", "new_post", "do", "builder", "builder", "NUMBER", "input", "title", "as", "number", "end", "output_buffer", "NUMBER", "should", "have_tag", "input", "min", "NUMBER", "end", "end", "describe", "and", "the", "column", "be", "a", "float", "do", "end", "describe", "and", "the", "column", "be", "a", "big", "decimal", "do", "end", "describe", "and", "there", "be", "no", "column", "do", "end", "end", "describe", "when", "validations", "require", "a", "minimum", "value", "greater_than_or_equal_to", "do", "Ok", "I", "m", "trying", "to", "finish", "this", "off", "today", "NUMBER", "I", "have", "a", "work", "NumberInput", "spec", "haven", "t", "looked", "at", "RangeInput", "yet", "NUMBER", "The", "major", "change", "be", "to", "raise", "IndeterminableMinimumAttributeError", "if", "the", "validation", "be", "a", "less", "greater", "_than", "and", "there", "s", "a", "DB", "column", "and", "the", "column", "be", "a", "float", "or", "decimal", "NUMBER", "This", "means", "that", "a", "form", "with", "no", "object", "semantic_form_for", "post", "won", "t", "raise", "nor", "will", "a", "form", "for", "an", "object", "without", "a", "database", "column", "nor", "will", "a", "NumberInput", "for", "a", "string", "DB", "column", "etc", "NUMBER", "In", "other", "words", "I", "m", "trying", "to", "target", "a", "very", "specific", "problem", "of", "less", "greater", "_than", "with", "a", "decimal", "or", "float", "NUMBER", "More", "news", "as", "it", "comes", "to", "hand", "It", "makes", "sense", "for", "a", "RangeInput", "to", "have", "a", "min", "of", "NUMBER", "max", "of", "NUMBER", "step", "of", "NUMBER", "Does", "it", "make", "sense", "for", "a", "NumberInput", "to", "have", "defaults", "similar", "to", "this", "I", "don", "t", "think", "so", "but", "I", "m", "ask", "any", "way", "NUMBER", "I", "ve", "delete", "the", "range", "input", "branch", "NUMBER", "Any", "further", "change", "can", "be", "do", "in", "master", "with", "new", "issue", "pulls", "NUMBER", "tenaciousflea", "Any", "progress", "Were", "you", "able", "to", "resolve", "this", "bug", "Awesome", "closing", "Ok", "looks", "like", "there", "s", "still", "no", "fix", "and", "not", "much", "noise", "about", "this", "online", "NUMBER", "Was", "able", "to", "repeat", "the", "issue", "in", "FF", "NUMBER", "and", "was", "able", "to", "resolve", "the", "issue", "by", "change", "the", "overflow", "hack", "to", "overflow", "hidden", "which", "seems", "to", "be", "acceptable", "according", "to", "this", "article", "on", "Quirks", "Mode", "LINK", "NUMBER", "phurni", "the", "refactor", "be", "merge", "into", "master", "and", "pretty", "stable", "NUMBER", "any", "chance", "you", "can", "help", "with", "a", "fork", "and", "sending", "a", "clean", "pull", "request", "Actually", "form_for", "booking", "booking", "be", "deprecate", "in", "Rails", "NUMBER", "so", "I", "m", "not", "sure", "it", "s", "worth", "the", "effort", "NUMBER", "This", "be", "what", "I", "saw", "when", "I", "tried", "to", "create", "a", "test", "case", "Using", "form_for", "name", "resource", "be", "deprecate", "So", "I", "think", "we", "should", "just", "close", "this", "and", "move", "on", "NUMBER", "Feel", "free", "to", "re", "open", "if", "you", "disagree", "NUMBER", "LinkedIn", "Eu", "gostaria", "de", "adicion\u00e1", "lo", "\u00e0", "minha", "rede", "profissional", "no", "LinkedIn", "NUMBER", "Gabriel", "Gabriel", "Sobrinho", "Brasil", "Confirme", "que", "voc\u00ea", "conhece", "Gabriel", "Sobrinho", "LINK", "NUMBER", "nt", "NUMBER", "pf", "gqgok", "NUMBER", "NUMBER", "isd", "NUMBER", "J", "NUMBER", "HP", "NUMBER", "SeL", "c", "NUMBER", "LinkedIn", "Corporation", "justinfrench", "take", "a", "look", "if", "your", "i", "NUMBER", "n", "gem", "have", "the", "same", "version", "in", "all", "cases", "NUMBER", "I", "will", "take", "a", "look", "on", "this", "but", "seems", "like", "a", "different", "version", "of", "i", "NUMBER", "n", "gem", "across", "cases", "NUMBER", "I", "haven", "t", "looked", "at", "this", "since", "your", "last", "comment", "NUMBER", "Please", "have", "a", "look", "if", "when", "you", "have", "time", "NUMBER", "For", "the", "record", "I", "think", "I", "just", "encountered", "this", "bug", "in", "a", "Rails", "NUMBER", "project", "with", "Formtastic", "NUMBER", "Hmmm", "NUMBER", "In", "NUMBER", "fc", "NUMBER", "a", "NUMBER", "NUMBER", "stable", "we", "change", "to", "depend", "on", "i", "NUMBER", "n", "NUMBER", "Since", "stable", "be", "ok", "and", "NUMBER", "be", "broken", "I", "ve", "push", "up", "NUMBER", "beta", "NUMBER", "gem", "with", "this", "i", "NUMBER", "n", "change", "and", "some", "other", "stuff", "NUMBER", "mogelbrod", "could", "you", "please", "bundle", "this", "gem", "version", "and", "confirm", "this", "corrects", "your", "issue", "I", "ll", "close", "and", "push", "the", "final", "gem", "if", "I", "haven", "t", "heard", "anything", "in", "a", "week", "or", "so", "NUMBER", "Closing", "due", "to", "inactivity", "NUMBER", "Okay", "I", "ve", "get", "a", "fail", "spec", "NUMBER", "Going", "hunting", "NUMBER", "This", "was", "a", "massive", "massive", "rabbit", "hole", "of", "fail", "NUMBER", "I", "ve", "get", "a", "commit", "that", "I", "m", "about", "to", "push", "up", "with", "a", "fix", "NUMBER", "Would", "love", "some", "help", "test", "it", "because", "the", "code", "was", "so", "horribly", "wrong", "and", "the", "test", "so", "lacking", "that", "I", "have", "no", "idea", "how", "it", "ever", "worked", "or", "what", "I", "ve", "broken", "NUMBER", "I", "ll", "leave", "it", "open", "until", "you", "ve", "had", "a", "chance", "to", "test", "NUMBER", "Hah", "Actually", "I", "m", "closing", "this", "NUMBER", "the", "original", "bug", "report", "be", "covered", "in", "test", "NUMBER", "Re", "open", "if", "needed", "So", "the", "biggest", "question", "I", "have", "be", "how", "to", "cater", "for", "this", "in", "the", "DSL", "Until", "we", "have", "this", "defined", "I", "m", "going", "to", "bump", "it", "out", "to", "a", "future", "release", "NUMBER", "Since", "label", "be", "taken", "to", "mean", "the", "thing", "on", "the", "left", "which", "might", "be", "a", "label", "or", "a", "legend", "except", "for", "boolean", "checkbox", "inputs", "it", "might", "be", "pretty", "hard", "sobrinho", "I", "ve", "seen", "a", "few", "examples", "on", "my", "current", "project", "where", "I", "want", "this", "NUMBER", "One", "that", "comes", "to", "mind", "be", "terms", "Email", "_______", "Terms", "_", "I", "accept", "your", "draconian", "terms", "of", "service", "and", "privacy", "policy", "The", "client", "thought", "the", "layout", "of", "the", "form", "was", "a", "bit", "off", "balance", "and", "that", "the", "boolean", "input", "get", "a", "bit", "lost", "without", "the", "label", "on", "the", "left", "as", "well", "NUMBER", "I", "m", "pretty", "convinced", "there", "s", "a", "need", "I", "just", "don", "t", "know", "how", "to", "provide", "it", "with", "the", "API", "NUMBER", "Definitely", "no", "hurry", "now", "that", "tomsquest", "could", "make", "a", "custom", "subclass", "of", "BooleanInput", "which", "be", "why", "I", "bump", "out", "to", "NUMBER", "Closing", "due", "to", "lack", "of", "activity", "NUMBER", "Forget", "what", "I", "said", "NUMBER", "This", "be", "not", "the", "best", "way", "to", "work", "with", "this", "situation", "NUMBER", "I", "think", "we", "need", "to", "skip", "the", "polymorphic", "associations", "on", "quick", "form", "and", "raise", "a", "exception", "short", "hand", "and", "block", "form", "NUMBER", "Rails", "NUMBER", "actually", "takes", "care", "of", "this", "for", "us", "NUMBER", "Closing", "NUMBER", "I", "m", "trying", "to", "figure", "out", "when", "this", "be", "a", "real", "use", "case", "NUMBER", "Why", "_isn", "t_", "genres", "an", "association", "How", "be", "this", "persisted", "the", "the", "database", "I", "feel", "like", "there", "s", "a", "bad", "smell", "here", "or", "perhaps", "I", "m", "miss", "something", "about", "the", "bigger", "picture", "NUMBER", "People", "still", "serialize", "things", "Good", "news", "Should", "be", "easy", "to", "re", "fork", "add", "test", "for", "coverage", "then", "tweak", "the", "code", "so", "that", "both", "cases", "work", "NUMBER", "I", "ll", "close", "this", "pull", "request", "for", "now", "because", "it", "won", "t", "apply", "cleanly", "NUMBER", "Free", "free", "to", "re", "open", "if", "you", "disagree", "NUMBER", "Closing", "this", "because", "I", "can", "t", "see", "any", "issue", "right", "now", "NUMBER", "Specific", "bug", "would", "be", "better", "NUMBER", "This", "should", "be", "fix", "by", "NUMBER", "closing", "please", "re", "open", "if", "not", "correct", "NUMBER", "gabeodess", "I", "believe", "this", "issue", "was", "around", "boolean", "not", "check_boxes", "but", "the", "other", "answer", "be", "you", "re", "miss", "the", "documentation", "The", "docs", "for", "CheckBoxesInput", "whilst", "it", "could", "be", "better", "shows", "that", "disabled", "be", "a", "top", "level", "option", "rather", "than", "an", "input_html", "option", "NUMBER", "It", "s", "a", "little", "confusing", "but", "I", "think", "this", "was", "because", "you", "can", "pass", "in", "an", "array", "of", "options", "to", "be", "disabled", "NUMBER", "LINK", "disabled", "can", "be", "use", "to", "disable", "any", "checkboxes", "with", "a", "value", "find", "in", "the", "given", "Array", "TAG", "check_boxes", "collection", "a", "b", "disabled", "a", "dmitry", "any", "chance", "you", "want", "to", "work", "this", "up", "as", "a", "patch", "I", "m", "not", "particularly", "motivated", "with", "everything", "else", "I", "m", "trying", "to", "do", "but", "I", "don", "t", "want", "to", "leave", "this", "issue", "open", "on", "the", "vine", "forever", "NUMBER", "A", "pull", "request", "against", "master", "would", "be", "awesome", "NUMBER", "Closing", "for", "now", "please", "feel", "free", "to", "re", "open", "or", "send", "a", "pull", "request", "NUMBER", "Having", "thought", "about", "this", "for", "a", "while", "I", "m", "not", "inclined", "to", "add", "more", "features", "and", "support", "here", "given", "there", "be", "already", "two", "support", "approaches", "in", "Formtastic", "that", "can", "work", "around", "this", "NUMBER", "subclass", "SelectInput", "as", "AuthorInput", "or", "BookAuthorInput", "and", "add", "in", "the", "relevant", "change", "or", "patches", "NUMBER", "pre", "build", "a", "HTML", "string", "of", "option", "tags", "with", "the", "title", "attributes", "add", "and", "pass", "that", "into", "collection", "as", "a", "string", "instead", "of", "an", "enumerable", "Sorry", "for", "the", "lag", "on", "this", "but", "given", "you", "re", "outputting", "a", "grid", "of", "checkboxes", "there", "s", "probably", "no", "room", "for", "labels", "as", "already", "stated", "but", "also", "no", "room", "for", "error", "message", "or", "hints", "or", "any", "of", "the", "other", "stuff", "that", "formtastic", "requires", "NUMBER", "So", "it", "begs", "the", "question", "NUMBER", "Why", "don", "t", "you", "use", "a", "regular", "Rails", "check", "box", "helper", "for", "this", "part", "of", "the", "form", "Closing", "for", "now", "please", "feel", "free", "to", "open", "if", "I", "ve", "miss", "something", "NUMBER", "Closing", "due", "to", "a", "lack", "of", "response", "from", "the", "original", "poster", "NUMBER", "I", "ve", "add", "documentation", "as", "suggested", "NUMBER", "We", "re", "toying", "with", "the", "idea", "of", "moving", "all", "the", "input_html", "button_html", "options", "up", "to", "the", "same", "namespace", "as", "the", "options", "which", "would", "ultimately", "result", "in", "the", "same", "API", "as", "what", "your", "patch", "was", "aiming", "for", "NUMBER", "Yup", "happy", "to", "remove", "if", "we", "take", "the", "simple", "form", "approach", "NUMBER", "Who", "has", "time", "to", "do", "this", "for", "NUMBER", "Ok", "Rails", "NUMBER", "will", "have", "the", "asset", "pipeline", "so", "I", "m", "inclined", "to", "suggest", "this", "be", "a", "short", "term", "problem", "NUMBER", "There", "ll", "be", "an", "upgrade", "doc", "post", "for", "NUMBER", "x", "NUMBER", "x", "Rails", "NUMBER", "be", "a", "RC", "this", "week", "and", "this", "stuff", "will", "be", "a", "thing", "of", "the", "past", "very", "soon", "NUMBER", "All", "do", "closing", "Am", "going", "to", "bump", "this", "out", "of", "NUMBER", "Custom", "inputs", "would", "allow", "ultra", "keen", "people", "to", "make", "their", "own", "and", "it", "means", "we", "won", "t", "have", "to", "dig", "into", "javascript", "NUMBER", "Long", "term", "ideally", "we", "just", "provide", "the", "mark", "up", "and", "someone", "else", "provides", "the", "polyfill", "or", "writes", "their", "own", "NUMBER", "This", "feature", "of", "HTML", "NUMBER", "has", "ultra", "low", "browser", "support", "so", "not", "in", "any", "hurry", "NUMBER", "I", "agree", "we", "should", "pump", "out", "mark", "up", "browsers", "will", "do", "what", "they", "do", "developers", "can", "pollyfill", "the", "gaps", "NUMBER", "I", "was", "originally", "keen", "on", "a", "bunch", "of", "out", "of", "the", "box", "JS", "and", "UI", "but", "see", "my", "most", "recent", "comment", "above", "NUMBER", "I", "m", "currently", "taking", "the", "approach", "that", "we", "provide", "great", "markup", "and", "developers", "can", "pick", "their", "own", "pollyfills", "and", "scripts", "to", "fill", "in", "the", "blanks", "but", "there", "s", "bound", "to", "be", "a", "few", "areas", "where", "we", "want", "to", "provide", "JS", "eventually", "NUMBER", "I", "m", "cooking", "up", "something", "here", "NUMBER", "Will", "report", "back", "after", "a", "few", "commutes", "worth", "of", "hacking", "Actually", "there", "s", "a", "bit", "of", "work", "and", "test", "to", "do", "this", "right", "with", "the", "right", "attributes", "etc", "for", "browsers", "that", "actually", "render", "TAG", "etc", "NUMBER", "Bumping", "out", "to", "NUMBER", "so", "I", "can", "do", "it", "right", "NUMBER", "There", "s", "easy", "work", "arounds", "for", "now", "NUMBER", "ddosen", "sobrinho", "s", "example", "above", "use", "a", "string", "input", "with", "a", "jQuery", "date", "picker", "be", "a", "perfect", "example", "NUMBER", "I", "still", "have", "a", "branch", "with", "this", "and", "a", "plan", "NUMBER", "I", "m", "not", "satisfied", "with", "the", "current", "date", "time", "inputs", "in", "Formtastic", "so", "the", "plan", "be", "to", "rename", "them", "add", "new", "ones", "which", "be", "more", "HTML", "NUMBER", "like", "and", "easier", "for", "people", "to", "enhance", "with", "jQuery", "or", "whatever", "JS", "tool", "they", "like", "but", "not", "actually", "add", "the", "JS", "support", "ourselves", "NUMBER", "One", "day", "SNlsn", "the", "plan", "be", "just", "to", "render", "the", "appropriate", "HTML", "like", "TAG", "and", "then", "let", "the", "designer", "developer", "apply", "jQuery", "or", "whatever", "else", "for", "a", "fallback", "in", "browsers", "that", "don", "t", "do", "anything", "special", "NUMBER", "We", "won", "t", "be", "implement", "our", "own", "calendar", "widgets", "our", "own", "JS", "and", "more", "complicated", "CSS", "it", "s", "too", "hard", "to", "support", "and", "the", "opinions", "vary", "too", "widely", "NUMBER", "Hope", "this", "doesn", "t", "damped", "your", "expectation", "too", "much", "These", "have", "be", "implement", "in", "master", "closing", "NUMBER", "Closing", "NUMBER", "I", "m", "not", "motivated", "to", "do", "it", "if", "someone", "be", "they", "ll", "do", "it", "regardless", "of", "this", "issue", "be", "open", "for", "NUMBER", "months", "NUMBER", "warden", "I", "don", "t", "understand", "your", "issue", "NUMBER", "semantic_fields_for", "be", "a", "dumb", "wrapper", "around", "fields_for", "and", "your", "first", "example", "task", "NUMBER", "task_details", "NUMBER", "each", "be", "in", "line", "with", "the", "Rails", "documentation", "for", "fields_for", "ie", "fields_for", "doesn", "t", "iterate", "over", "the", "members", "of", "the", "association", "collection", "for", "you", "NUMBER", "I", "_think_", "this", "issue", "was", "correcting", "an", "issue", "in", "the", "Formtastic", "only", "DSL", "f", "NUMBER", "inputs", "for", "task_details", "which", "_does_", "iterate", "over", "the", "members", "of", "the", "association", "NUMBER", "I", "d", "like", "to", "leave", "this", "issue", "close", "but", "please", "re", "open", "if", "I", "ve", "miss", "something", "NUMBER", "If", "you", "have", "a", "new", "issue", "to", "raise", "please", "do", "so", "in", "a", "new", "ticket", "NUMBER", "Many", "thanks", "NUMBER", "warden", "which", "Rails", "version", "Which", "Formtastic", "version", "Can", "you", "please", "provide", "two", "code", "snippets", "that", "illustrate", "the", "differences", "between", "semantic_fields_for", "and", "fields_for", "Will", "happily", "re", "open", "or", "create", "a", "new", "issue", "with", "this", "information", "NUMBER", "ryanchuleff", "can", "you", "try", "bundling", "from", "master", "If", "it", "s", "still", "a", "problem", "please", "file", "a", "new", "issue", "NUMBER", "There", "was", "a", "relate", "issue", "raise", "on", "NUMBER", "which", "I", "believe", "be", "resolve", "in", "master", "NUMBER", "Still", "not", "in", "the", "foreseeable", "future", "The", "only", "way", "this", "will", "happen", "be", "if", "we", "become", "fully", "markup", "agnostic", "I", "made", "some", "strides", "towards", "this", "in", "NUMBER", "s", "CSS", "and", "code", "I", "m", "not", "going", "to", "_change_", "the", "markup", "between", "release", "any", "more", "than", "I", "have", "to", "NUMBER", "jibiel", "NUMBER", "it", "do", "support", "i", "NUMBER", "n", "and", "has", "do", "so", "as", "long", "as", "we", "ve", "had", "i", "NUMBER", "n", "before", "NUMBER", "and", "the", "documentation", "for", "comit_button", "LINK", "commit_button", "instance_method", "documents", "that", "you", "can", "pass", "in", "a", "key", "symbol", "instead", "of", "a", "string", "to", "the", "label", "option", "NUMBER", "it", "doesn", "t", "use", "the", "standard", "Rails", "i", "NUMBER", "n", "keys", "can", "t", "remember", "the", "reason", "why", "and", "I", "know", "we", "re", "a", "bit", "light", "on", "documentation", "but", "there", "s", "the", "same", "update", "create", "and", "generic", "submit", "keys", "and", "a", "few", "more", "within", "a", "different", "scope", "formtastic", "NUMBER", "actions", "all", "of", "which", "be", "documented", "in", "the", "README", "Please", "start", "a", "new", "issue", "if", "you", "re", "still", "having", "problem", "rather", "than", "hijacking", "this", "mostly", "unrelated", "thread", "NUMBER", "I", "ve", "made", "some", "change", "in", "formtastic", "NUMBER", "css", "to", "style", "these", "by", "class", "name", "rather", "than", "by", "the", "tag", "and", "the", "code", "for", "rendering", "a", "specfic", "tag", "be", "now", "well", "abstracted", "to", "a", "simple", "method", "Formtastic", "Inputs", "Base", "Errors", "error_html", "which", "will", "allow", "people", "to", "make", "a", "simple", "monkey", "patch", "or", "even", "do", "some", "sub", "classing", "with", "custom", "inputs", "to", "change", "from", "a", "TAG", "to", "a", "label", "or", "whatever", "else", "but", "I", "think", "I", "m", "going", "to", "pass", "on", "change", "the", "actual", "tag", "itself", "in", "NUMBER", "Bumping", "to", "NUMBER", "for", "now", "NUMBER", "colinross", "a", "while", "back", "I", "fleshed", "out", "a", "DSL", "for", "many", "types", "of", "buttons", "other", "than", "just", "the", "current", "commit", "button", "which", "uses", "a", "submit", "input", "under", "the", "hood", "NUMBER", "a", "full", "button", "DSL", "should", "allow", "input", "button", "and", "a", "markup", "for", "different", "tasks", "allow", "for", "other", "actions", "cancel", "reset", "commit", "even", "save_and_continue_editing", "and", "provide", "enough", "mark", "up", "hooks", "for", "pretty", "buttons", "style", "CSS", "visuals", "NUMBER", "I", "actually", "had", "a", "fully", "work", "version", "from", "an", "epic", "hack", "session", "at", "RailsCamp", "in", "a", "branch", "but", "wasn", "t", "NUMBER", "happy", "NUMBER", "I", "either", "need", "to", "bring", "that", "branch", "up", "to", "scratch", "or", "start", "over", "NUMBER", "f", "NUMBER", "button", "commit", "as", "input", "f", "NUMBER", "button", "commit", "as", "button", "f", "NUMBER", "button", "commit", "as", "link", "f", "NUMBER", "button", "cancel", "as", "link", "f", "NUMBER", "button", "reset", "as", "button", "Etc", "Formtastic", "NUMBER", "I", "hope", "NUMBER", "I", "bump", "it", "out", "of", "NUMBER", "because", "I", "wanted", "to", "be", "ready", "and", "stable", "for", "Rails", "NUMBER", "Rails", "has", "button", "helpers", "and", "of", "course", "you", "can", "make", "your", "own", "with", "raw", "HTML", "NUMBER", "Formtastic", "doesn", "t", "provide", "a", "DSL", "for", "it", "however", "NUMBER"], "text_count": [0, 7351, 1896, 889, 370, 117, 671, 5, 28, 1005, 1026, 1933, 1033, 725, 888, 176, 0, 0, 0, 0, 2053, 713, 415, 273, 349, 348, 0, 0, 0, 0, 4128, 2428, 1744, 51, 809, 350, 0, 0, 0, 0, 4384, 29, 1496, 1445, 1216, 0, 0, 0, 0, 0, 1340, 567, 565, 382, 663, 249, 598, 0, 0, 0, 3191, 247, 2511, 192, 0, 0, 0, 0, 0, 0, 2786, 291, 1994, 908, 354, 0, 0, 0, 0, 0, 3952, 1801, 463, 1509, 240, 220, 0, 0, 0, 0, 270, 1544, 127, 0, 0, 0, 0, 0, 0, 0, 3996, 924, 2270, 851, 0, 0, 0, 0, 0, 0, 6532, 13419, 270, 658, 195, 218, 0, 0, 0, 0, 17746, 94, 13456, 160, 3376, 3776]}, {"repo": "formtastic", "type": "nonelite", "title": "", "number of text": 839, "text": "  I have the following in my model:\n\n``` ruby\nvalidates :role, inclusion: ['First Chair','Second Chair']\n```\n\nIs there a way to reflect on the inclusion options and use them as the collection for the select input?\n I found a complex way of doing it. Is their an easier way?\n\n``` ruby\nirb > JSON.parse(MatterClient.validators_on(:role).select{ |v| v.class == ActiveModel::Validations::InclusionValidator }.first.to_json)['options']['in']\n=> [\"First Chair\", \"Second Chair\"]\n```\n I also made a method of it:\n\n``` ruby\nclass MatterClient\n  ...\n  def self.options_for(field)\n    options = Array.new\n    inclusion_validators = self.validators_on(field).select{ |v| v.class == ActiveModel::Validations::InclusionValidator }\n    inclusion_validators.each do |inclusion_validator|\n      options += JSON.parse(inclusion_validator.to_json)['options']['in']\n    end\n    options\n  end\n  ...\nend\n```\n  In a form it's quite likely that there will be multiple labels for different fields of the same object. So it would make sense to use the i18n gem's ability to perform bulk lookups.\n\nHere a lookup for a single attribute of the User class, which causes a lookup to the memcache store i'm using:\n\n```\n1.8.7 :006 > I18n.t \"activerecord.attributes.user.firstname\"\n2012-04-25T13:21:50+02:00 [DEBUG] 27943 : Cache read: i18n//en/2330158/2269918\n2012-04-25T13:21:50+02:00 [DEBUG] 27943 : Cache write: i18n//en/2330158/2269918\n => \"Firstname\" \n```\n\nIf the user form has 10 fields that means 10 queries to the underlying storage, which may be reasonably fast if it's an in-process memory cache but incurs unnecessary latency if it's a memcache on the different host (even if it's on the same server rack).\n\nInstead the following can be used and cached in the form-builder:\n\n```\n1.8.7 :005 > I18n.t \"activerecord.attributes.user\"\n2012-04-25T13:21:31+02:00 [DEBUG] 27943 : Cache read: i18n//en/2330078/2269918\n2012-04-25T13:21:31+02:00 [DEBUG] 27943 : Cache write: i18n//en/2330078/2269918\n => {:salutation=>\"Salutation\", :updated_at=>\"Updated at\", :birth_name=>\"Birth name\", :fullname=>\"Name\", :name_affix=>\"Name affix\",  :title=>\"Title\", :timezone=>\"Timezone\", :name_prefix=>\"Name prefix\", :lastname=>\"Lastname\", :direct_permissions=>\"direct permissions\", :telephone=>\"Telephone\", :password=>\"Password\", :firstname=>\"Firstname\", :email=>\"EMail\", :created_at=>\"Created at\", :fax=>\"Fax\", :groups=>\"Groups\"} \n```\n\nThat way only one lookup per scope and class is needed when a form is built. This behavior probably should be optional as not all i18n stores might support bulk lookups.\n  With the following code:\n\n``` ruby\n# app/models/user.rb\nclass User < ActiveRecord::Base\n  has_one :profile\nend\n\n# app/models/profile.rb\nclass Profile < ActiveRecord::Base\n  belongs_to :user\nend\n```\n\nAnd here is the form I'm trying to use:\n\n``` haml\n= semantic_form_for @user do |f|\n  = f.inputs \"Profile\", :for => :profile do |profile_f|\n    = profile_f.input :some_field\n```\n\nWhen I call this code I get the same error as in issue #824, `profile_id does not exist`.\n\nThe workaround is to call the following code but I find it pretty ugly :/\n\n``` haml\n= semantic_form_for @user do |f|\n  = f.inputs \"Profile\", :for => [:profile, f.object.profile || Profile.new] do |profile_f|\n    = profile_f.input :some_field\n```\n  how can I make reset button for form.\n  Hi,\n\nI'm not very fond of the first argument of the input function called on the builder being mandatorily a symbol. Now, let's say, I have a string array of attributes from the form object, and i want to generate an input field for them, I have to make them a symbol first, otherwise the label translation will not be loaded. This represents a breach of logic from the previous version and the rails formtag helpers, which still accept the method as being a string. Why can't we defined the optional label as an option sent in the options hash of the call, as we used to do in the rails 2 version (I guess that works still)? \n\nSo, the exact problem is, when I call:\n\n<pre>\n<code>\nf.input \"pron\", :as => :select, :collection ....\n</code>\n</pre>\n\n\nthe label from the element will be \"pron\", and not \"Prontastic\", which is the translation I have for it under formtastic.labels.pron. I've changed it since then to a symbol and the translation is correctly loaded.\n Hey justinfrench,\n\nThe version where that was working was the 1.2.4 .\n  The commit button has been removed.  Thus, where can I find documentation which outlines how to upgrade to the latest version of Formtastic?\n I'd add that the buttons helper deprecation came has a total surprise to me, didn't see any deprecation warning anywhere!\n  is it possible to generate form into clipboard with --copy key in haml format?\n nice! it works ) small correction `Post--copy` has to be `Post --copy`\n  Using `gem 'formtastic', '2.2.0.rc'`\n\nSay I set this in my `config/initalizers/formtastic.rb` to:\n\n```\nFormtastic::FormBuilder.required_string = '<strong>Foo</strong>'\n```\n\nNow I do the following form:\n\n```\n= semantic_form_for @redirect do |f|\n  = f.error_messages\n  = f.inputs do\n    = f.input :source, :label => 'Source Path'\n    = f.input :destination\n  = f.actions do\n    = f.submit\n```\n\nPretty basic right?\n\nThe output is a bit strange though.\n\nThe label for :source is this:\n\n```\nSource Path<strong>Foo</strong>\n```\n\n(HTML is converted to entities and displayed on the screen).\n\nThe label for :destination is this:\nDestinationFoo\n(Foo is of course bold).\n\nI am not sure which output is correct but when the label string was guessed by formtastic it considers Formtastic::FormBuilder.required_string to be html_safe however when I manual set :label => 'Something' it does not consider it to be html_safe. \n\nChanging the initializer to `Formtastic::FormBuilder.required_string = '<strong>Foo</strong>'.html_safe` works as expected so the fix is simple but I figured I would report this issue as it could indicate an a missing or extra html_safe call. I will leave it up to you to decide which of the two behaviors should be considered correct.\n\nDavid\np.s even though the default value is `<abbr title=\"required\">*</abbr>` according to the documentation it acts like its html_safe.\n  Hi,\n\n i've made a custom input for check_boxes with nested set (awesome_nested_set), because i could not found a way to display the nested set with check_boxes input\n\nhttps://gist.github.com/2314495\n\nthere is a way to do this in default formtastic lib ?\n\nregards\n Hi Justin, \n\nif you need this in the core i can apply a pull request, but i really dont knnow if this is neccesary to be in core of formtastic\n\nregards\n  Basically I have a tiered payment system setup for the buying of attraction or event tickets. So an order can have 1x Family Pass, or 2x Child and 2x Adult. Type thing. Family Pass, Child and Adult are all Prices in the below structure:\n\nR1: Event [has_many] Orders\nR2: Event [has_many] Prices\nR3: Order [has_many] Prices [through: TicketPrice]\n\nEvent(name:string, description:text)\nPrice(name:string, price:float, description:text)\nOrder(contact_name:string, contact_email:string)\nTicketPrice(quantity:integer, price_id:integer, order_id:integer)\n\nI essentially want a form where by the ticket details are entered such as Payment Details, Email etc. And then each ticket price for that event is listed with a field for quantity next to each one. i.e. an input ability for the R3 relation.\n  See http://twitter.github.com/bootstrap/base-css.html#forms\n\nThis would be desired behavior but I do not see it implemented. Is it or am I just missing something?\n  Addresses [#811](https://github.com/justinfrench/formtastic/issues/811)\n  A helpful exception message speeds up development.\n  while using 2.1-stable and having one of my fields being 'time' data-type.\n The same is true for type 'date' except it can't find `text_field_date`\n\nI'm using Rails 3.2.2 btw\n Sorry this appears to be an issue with the twitter-bootstrap form builder rather than formtastic.\nSuch a shame you don't bundle a native builder for twitter bootstrap. Would certainly make life easier!\n As in it would be a much better default, instead of having to write all the styles yourself. Twitter Bootstrap has had an incredibly wide adoption, i'd be surprised if anyone was against it.\n @justinfrench true, but most of the work has been done for you already:\nhttps://github.com/cgunther/formtastic-bootstrap/tree/bootstrap2-rails3-2-formtastic-2-1\n  Seems great too.\n\nI'm worried about backwards compatibility on cases like custom methods using `:as => :date`.\n\nAre you planning a major release for this?\n @justinfrench my bad.\n\nI was thinking you are changing the default behavior, but you are not.\n\nIn this case, it's fine :)\n  @justinfrench Getting on a plane right now,  i can take a look tonight/tomorrow\n :+1:\n +1 \nLooks great - only issue I see is with the commit message which states \n:as => :datetime becomes :as => :time_select  when its actually renamed to :datetime_select\n  I have two models as follows:\n\n``` ruby\nclass User\n  include Mongoid::Document\n\n  has_one :contact, autosave: true\n\n  ...\nend\n\nclass Contact\n  include Mongoid::Document\n\n  belongs_to :user # contact information for user\n\n  ...\nend\n```\n\nIn my form I have the following code.\n\n``` haml\n= semantic_form_for @user, html: { class: \"form-horizontal\"} do |f|\n   = f.input :contact, as: :select\n```\n\nIt is giving me an error of:\n\n```\nundefined method `user_id' for #<User:0x007f81cac2ee00>\n```\n\nIs there something special I need to be doing here?\n The only way it works is if I reverse it. meaning if I do:\n\n``` ruby\nclass User\nbelongs_to :contact\n\n...\n\nclass Contact\nhas_one :user\n```\n Confirmed this is happening in both active recored and in mongoid.\n\nModels:\n\n``` ruby\nclass User < ActiveRecord::Base\n\n  has_one :contact\n\nend\n\n\nclass Contact < ActiveRecord::Base\n\n  belongs_to :user\n\nend\n\n```\n\nView:\n\n``` haml\n\n= semantic_form_for @user do |f|\n  = f.input :contact\n\n```\n\nError:\n\n```\n\nNoMethodError in Users#new\n\nShowing /Volumes/Terra-Nova/jwaldrip/Sites/formtastic_test/app/views/users/new.html.haml where line #2 raised:\n\nundefined method `user_id' for #<User:0x007f966b091740>\n\n```\n I can certainly do my best. ;-)\n Thanks justin. I will do some testing and dig into the code when I have time. Sorry for the late response.\n Justin, Jason - I wanted to provide another data point and let you know I am running into a similar issue w Mongoid:\n\nclass User\n  include Mongoid::Document\n  has_one  :profile,       class_name: \"Profile\",  inverse_of: nil\nend\n\nin my form:\n\nf.input :profile, :as => :select, :collection => Profile.order_by([[:created_at, :desc]]).limit(5)\n\nresult:\n\nundefined method `user_id' for #User:0x007fa3b14de958\n ActiveRecord\n I am using mongoid but tested and confirmed the same issue with AR.\n\nSent from my iPhone\n\nOn Apr 23, 2012, at 4:02 PM, Simon COURTOISreply@reply.github.com wrote:\n\n> ActiveRecord\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/824#issuecomment-5293048\n @justinfrench That's why I opened #843 because it was not related to the selection of the contact but only fields for it ;)\n\nI would go for `user[contact][id]`, the `accepts_nested_attributes` seems legit.\n I think that may be the best posible solution. I am going to look into how a standard form handles this as well.\n  I've a method which returns: @objects.map! { |p| [p.full_info, p.id] }, passing that method to :collection on a select field, it doesn't set the name on the select, but just the ids. It seems that you consider only :name attributes, not others\n Same or very similar issue here. \n\nWe're in a form for a `User` thas `has_many :mailing_lists, :through => :mailing_list_memberships`. The `User`, `MailingList`, and `MailingListMembership` objects, already exist in the db (i.e. they are not `new_record?`) \n\nIn this case:\n\n``` ruby\nform.input :mailing_lists, :as => :check_boxes, :collection => MailingList.order(:name)\n```\n\nthe right check_boxes are selected, but the label of each check box is the `name` attribute/method (we'd like it to be `to_s`)\n\nIn this case:\n\n``` ruby\nform.input :mailing_lists, :as => :check_boxes, :collection => MailingList.order(:name).collect{|m| [m.to_s, m.id]}\n```\n\nthe labels are ok but no check boxes are selected\n As a workaround (or even a better solution), this works as expected:\n\n``` ruby\nform.input :mailing_lists, :as => :check_boxes, :collection => MailingList.order(:name), :member_label => :to_s\n```\n  When using the time_zone input the result is like: <option value=\"Mountain Time (US &amp; Canada)\">(GMT-07:00) Mountain Time (US &amp; Canada)</option>\nputs the value should be \"Mountain Time (US & Canada)\", otherwise saving it in rails it won't understand it and throw an error for an undefined time zone when it's loaded\n  Tests updated to all pass when using rails edge.  Biggest change was allowing [] stubs for errors object to match on either string or symbol since the tags in rails edge store the method name as strings now and index into the errors object using strings.  The errors object calls #to_sym on any index though so @object.errors[:abc] is equivalent to @object.errors[\"abc\"]\n @justinfrench hmm - not sure what happened with my update to have it reference rails on github instead of the local path, it seems to have merged in with pull request #818 or something.   Let me know if its usable as is, or whether I need to fix something up.\n @justinfrench sounds good to me\n  I'm using:  formtastic (1.2.4). I have fields required in the model, but in my form all of the fields are showing as required without me specifying anything..\n\nMy model basically looks like this:\n\n```\nclass Speakerform < ActiveRecord::Base\n\n  validates_presence_of :interested, :dates, :first_name, :email\n\n  def interested_label; \"Who are you interested in?\"; end;\n  #... a bunch of other label fields here.. BTW I sort of makeshift made an easy way to create labels here.. is there an easier way that's integrated into formtastic from the model standpoint or something? (I'm using it on the model so I can use the same labels in an email)\nend\n```\n\nThen in my form I don't have anything particularly special either:\n\n```\n<% semantic_form_for @speaker_form, :url => \"/speakers/hire\", :method => \"post\" do |f| %>\n  <% f.inputs :name => \"Event details\" do %>\n    <%= f.input :interested, :label => f.object.interested_label, :as => :select, :collection => Page.speakers.all.map(&:title)+[\"I'm not sure!\"], :selected => params[:speaker] %>\n    ..more similar fields\n  <% end %>\n  <% f.inputs :name => \"Your info\", :class => \"your-info\" do %>\n    <%= f.input :first_name, :label => f.object.first_name_label %>\n    ..more fields here..\n  <% end %>\n  <%= submit_tag \"Submit\" %>\n<% end %>\n```\n\nI had to manually set :required => false/true...  no biggie.. but sounds like that shouldn't happen..\n\nAlso.. btw I created a mailer that sends out all my questions(or labels..)/answers on the form and I did something like this.. Could be cool to incorporate something similar for labels? Like if field_label is defined in the model, use that?..\n\n```\n<% cols = Speakerform.columns.map(&:name)-[\"id\", \"updated_at\", \"created_at\"]\ncols.each do |c| %>\n\n<b><%= ((@form.send(\"#{c}_label\").humanize if @form.respond_to?(\"#{c}_label\"))) %></b>\n<%= @form[c.to_sym] %>\n```\n Have you checked the \"all_fields_required_by_default\" setting in your formtastic initializer?\n\n``` ruby\n# Should all fields be considered \"required\" by default?\n# Rails 2 only, ignored by Rails 3 because it will never fall back to this default.\n# Defaults to true.\n# Formtastic::SemanticFormBuilder.all_fields_required_by_default = true\n```\n  I have a date field as the following:\n\n``` ruby\n= f.input :birthday, as: :date, end_year: Time.now.year - 100, start_year: Time.now.year , input_html: { class: \"input-medium chzn-select-deselect\" }\n\n```\n\nWhen the record is saved I get the following instead of the :birthday field being filled.\n\n```\n#<Contact _id: 4f4fd18dbe5a2c07110000c5, _type: nil, firm_id: \"test2\", user_id: nil, party_id: nil, relationship_ids: [BSON::ObjectId('4f4fd31bbe5a2c07110000d0')], first_name: \"Kris\", last_name: \"Waldrip\", birthday: nil, birthday(1i): \"1989\", birthday(2i): \"10\", birthday(3i): \"24\">\n```\n\nIs there something I have to do special in my model or controller?\n\nI did look in the docs this time justin ;-)\n  Hi,\n\nI just created a new rails app (3.2.1) and are using formtastic 2.10 (for the first time. before I was using 2.0.x).\nMy forms are rendered correctly so far but if I hit the reload button in the browser or submit the form with errors the required markers in the required fields are printed more than once. In fact they increase upon every reload.\n\nI have to logout, restart my rails app and log back in to get rid of them.\n\nExample Form:\n\n```\nTitle* : input\n```\n\nHit Reload\n\n```\nTitle** : input\n```\n\nSubmit form without title\n\n```\nTitle*** : input\n```\n\nSwitch to another page and click upon \"new foo\" which brings up the new form\n\n```\nTitle*** : input\n```\n\nAny ideas?\n I just ran into the exact same issue running a project on Rails 3.0.11, formtastic 2.1.0. I'm reverting to 2.0.2 until the issue is corrected.\n @jan0sch can you provide an application that reproduces the issue? Because I can't reproduce it :(\n The app is a company app therefore I can't share it. I just created a new app and there the error does not show up. I'll try to investigate this more next week. Hopefully I can reproduce it or find the cause.\n Thanks for the fast update!\n  I am trying to generate a list of contacts and I want the input to display a value of contact.first_name + \" \" + contact.last_name. When I use the following code I get the value of each contact as an object_id.\n\n```\n= f.input :contacts, as: :select_inline, label: false, input_html: { class: \"inline chzn-select\", :'data-placeholder' => \"Choose a Contact\" }\n```\n Note: select_inline is a custom input nearly identical to the orignal select input.\n My mistake. I was looking in the wiki and should have pulled the rdoc.\n\nSent from my iPhone\n\nOn Feb 29, 2012, at 9:24 PM, Justin Frenchreply@reply.github.com wrote:\n\n> Here's a quote from the [documentation for SelectInput](http://rdoc.info/github/justinfrench/formtastic/Formtastic/Inputs/SelectInput), which I assume you haven't read (but please help me clarify the docs if it simply didn't make sense to you):\n> \n> > The way on which Formtastic renders the `value` attribute and content of each `<option>` tag is customisable through the `:member_label` and `:member_value` options. When not provided, we fall back to a list of methods to try on each object such as `:to_label`, `:name` and `:to_s`, which are defined in the configurations `collection_label_methods` and `collection_value_methods` (see examples below).\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/814#issuecomment-4252256\n  Is there a way to override certain parts of the base modules such as base/wrapper.rb? I would assume this would be similar to overriding inputs but I am not sure that the gem looks for them in app/inputs.\n  Would it be possible to author a gem that just included overrides the original input types but still relies on the original formtastic gem or any of its variants?\n  Rails 3.2.1 / Formtastic 2.1.0.rc\n\nFollowing the instructions on **\"Stylesheet usage in Rails >= 3.1\"** results in the Internet Explorer stylesheets always being included and rendered, regardless of browser:\n\n``` ruby\n# app/assets/stylesheets/application.css\n/*\n * This is a manifest file that'll be compiled into application.css, which will include all the files\n * listed below.\n *\n * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,\n * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.\n *\n * You're free to add application-wide styles to this file and they'll appear at the top of the\n * compiled file, but it's generally better to create a new file per style scope.\n *\n *= require_self\n *= require_tree .\n *\n *= require formtastic\n*/\n\n```\n\n``` ruby\n# app/assets/stylesheets/ie6.css\n/*= require formtastic_ie6 */\n```\n\n``` ruby\n# app/assets/stylesheets/ie7.css\n/*= require formtastic_ie7 */\n```\n\nHTML Output:\n\n``` html\n<link href=\"/assets/application.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"/assets/formtastic_ie6.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"/assets/ie6.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"/assets/formtastic_ie7.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"/assets/ie7.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"/assets/formtastic.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n    <!--[if IE 6]><link href=\"/assets/formtastic_ie6.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"/assets/ie6.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" /><![endif]-->\n    <!--[if IE 7]><link href=\"/assets/formtastic_ie7.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"/assets/ie7.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" /><![endif]-->  \n```\n Thank you, Justin.  \n\nI removed `require tree .` to get the desired behaviour in development, but in production (on Heroku anyway) I received this error message:\n\n `Sprockets::Helpers::RailsHelper::AssetPaths::AssetNotPrecompiledError: ie6.css isn't precompiled`.  I had to add the following to `config/production.rb`:\n\n``` ruby\n  # Precompile additional assets (application.js, application.css, and all non-JS/CSS are already added)\n  config.assets.precompile += %w( ie6.css ie7.css )\n```\n\nIf you think this is not an isolated issue and may help others, I could add some concise content to the README under the _Stylesheet usage in Rails >= 3.1_ section (for my first ever open source contribution!).\n   seems great, @justinfrench ?\n :+1:\n  I have some custom inputs which stop working when updating the app to ruby 1.9.3:\n\n```\nFormtastic::UnknownInputError\n```\n\nAl the app's specs pass.  On the surface it looks like they are not loading.\n Yes, it worked fine on 1.8.7. Here is the stack trace:\n\n(It is the custom wysiwyg that is causing the error)\n\nActionView::Template::Error (Formtastic::UnknownInputError):\n    1: <%= form.inputs :class => 'group' do -%>\n    2:   <%= form.input :name %>\n    3:   <%= form.input :contacts, {:as => :wysiwyg} %>\n    4:   <%= form.input :notes, {:as => :wysiwyg} %>\n    5: <%- end -%>\n  formtastic (2.0.2) lib/formtastic/helpers/input_helper.rb:353:in `rescue in input_class'\n  formtastic (2.0.2) lib/formtastic/helpers/input_helper.rb:345:in`input_class'\n  formtastic (2.0.2) lib/formtastic/helpers/input_helper.rb:265:in `input'\n  app/views/people/_form.html.erb:2:in`block in _app_views_people__form_html_erb___2877491542180097044_70235883284760'\n  actionpack (3.2.1) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\n  actionpack (3.2.1) lib/action_view/helpers/capture_helper.rb:187:in`with_output_buffer'\n  actionpack (3.2.1) lib/action_view/helpers/capture_helper.rb:40:in `capture'\n  formtastic (2.0.2) lib/formtastic/helpers/fieldset_wrapper.rb:36:in`field_set_and_list_wrapping'\n  formtastic (2.0.2) lib/formtastic/helpers/inputs_helper.rb:292:in `inputs'\n  app/views/people/_form.html.erb:1:in`_app_views_people__form_html_erb___2877491542180097044_70235883284760'\n  actionpack (3.2.1) lib/action_view/template.rb:143:in `block in render'\n  activesupport (3.2.1) lib/active_support/notifications.rb:125:in`instrument'\n  actionpack (3.2.1) lib/action_view/template.rb:141:in `render'\n  actionpack (3.2.1) lib/action_view/renderer/partial_renderer.rb:257:in`render_partial'\n  actionpack (3.2.1) lib/action_view/renderer/partial_renderer.rb:230:in `block in render'\n  actionpack (3.2.1) lib/action_view/renderer/abstract_renderer.rb:38:in`block in instrument'\n  activesupport (3.2.1) lib/active_support/notifications.rb:123:in `block in instrument'\n  activesupport (3.2.1) lib/active_support/notifications/instrumenter.rb:20:in`instrument'\n  activesupport (3.2.1) lib/active_support/notifications.rb:123:in `instrument'\n  actionpack (3.2.1) lib/action_view/renderer/abstract_renderer.rb:38:in`instrument'\n  actionpack (3.2.1) lib/action_view/renderer/partial_renderer.rb:229:in `render'\n  actionpack (3.2.1) lib/action_view/renderer/renderer.rb:41:in`render_partial'\n  actionpack (3.2.1) lib/action_view/helpers/rendering_helper.rb:27:in `render'\n  app/views/people/new.html.erb:3:in`block in _app_views_people_new_html_erb___3090460013784159554_70235902641000'\n  actionpack (3.2.1) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\n  actionpack (3.2.1) lib/action_view/helpers/capture_helper.rb:187:in`with_output_buffer'\n  actionpack (3.2.1) lib/action_view/helpers/capture_helper.rb:40:in `capture'\n  actionpack (3.2.1) lib/action_view/helpers/form_helper.rb:606:in`fields_for'\n  actionpack (3.2.1) lib/action_view/helpers/form_helper.rb:377:in `form_for'\n  formtastic (2.0.2) lib/formtastic/helpers/form_helper.rb:161:in`block in semantic_form_for'\n  formtastic (2.0.2) lib/formtastic/helpers/form_helper.rb:192:in `with_custom_field_error_proc'\n  formtastic (2.0.2) lib/formtastic/helpers/form_helper.rb:160:in`semantic_form_for'\n  app/views/people/new.html.erb:3:in `_app_views_people_new_html_erb___3090460013784159554_70235902641000'\n  actionpack (3.2.1) lib/action_view/template.rb:143:in`block in render'\n  activesupport (3.2.1) lib/active_support/notifications.rb:125:in `instrument'\n  actionpack (3.2.1) lib/action_view/template.rb:141:in`render'\n  actionpack (3.2.1) lib/action_view/renderer/template_renderer.rb:41:in `block (2 levels) in render_template'\n  actionpack (3.2.1) lib/action_view/renderer/abstract_renderer.rb:38:in`block in instrument'\n  activesupport (3.2.1) lib/active_support/notifications.rb:123:in `block in instrument'\n  activesupport (3.2.1) lib/active_support/notifications/instrumenter.rb:20:in`instrument'\n  activesupport (3.2.1) lib/active_support/notifications.rb:123:in `instrument'\n  actionpack (3.2.1) lib/action_view/renderer/abstract_renderer.rb:38:in`instrument'\n  actionpack (3.2.1) lib/action_view/renderer/template_renderer.rb:40:in `block in render_template'\n  actionpack (3.2.1) lib/action_view/renderer/template_renderer.rb:48:in`render_with_layout'\n  actionpack (3.2.1) lib/action_view/renderer/template_renderer.rb:39:in `render_template'\n  actionpack (3.2.1) lib/action_view/renderer/template_renderer.rb:12:in`render'\n  actionpack (3.2.1) lib/action_view/renderer/renderer.rb:36:in `render_template'\n  actionpack (3.2.1) lib/action_view/renderer/renderer.rb:17:in`render'\n  actionpack (3.2.1) lib/abstract_controller/rendering.rb:109:in `_render_template'\n  actionpack (3.2.1) lib/action_controller/metal/streaming.rb:225:in`_render_template'\n  actionpack (3.2.1) lib/abstract_controller/rendering.rb:103:in `render_to_body'\n  actionpack (3.2.1) lib/action_controller/metal/renderers.rb:28:in`render_to_body'\n  actionpack (3.2.1) lib/action_controller/metal/compatibility.rb:50:in `render_to_body'\n  actionpack (3.2.1) lib/abstract_controller/rendering.rb:88:in`render'\n  actionpack (3.2.1) lib/action_controller/metal/rendering.rb:16:in `render'\n  actionpack (3.2.1) lib/action_controller/metal/instrumentation.rb:40:in`block (2 levels) in render'\n  activesupport (3.2.1) lib/active_support/core_ext/benchmark.rb:5:in `block in ms'\n  /Users/rhulse/.rvm/rubies/ruby-1.9.3-preview1/lib/ruby/1.9.1/benchmark.rb:295:in`realtime'\n  activesupport (3.2.1) lib/active_support/core_ext/benchmark.rb:5:in `ms'\n  actionpack (3.2.1) lib/action_controller/metal/instrumentation.rb:40:in`block in render'\n  actionpack (3.2.1) lib/action_controller/metal/instrumentation.rb:83:in `cleanup_view_runtime'\n  activerecord (3.2.1) lib/active_record/railties/controller_runtime.rb:24:in`cleanup_view_runtime'\n  sunspot_rails (1.3.0) lib/sunspot/rails/railties/controller_runtime.rb:15:in `cleanup_view_runtime'\n  actionpack (3.2.1) lib/action_controller/metal/instrumentation.rb:39:in`render'\n  actionpack (3.2.1) lib/action_controller/metal/implicit_render.rb:10:in `default_render'\n  actionpack (3.2.1) lib/action_controller/metal/mime_responds.rb:268:in`block in retrieve_response_from_mimes'\n  actionpack (3.2.1) lib/action_controller/metal/mime_responds.rb:195:in `call'\n  actionpack (3.2.1) lib/action_controller/metal/mime_responds.rb:195:in`respond_to'\n  app/controllers/people_controller.rb:45:in `new'\n  actionpack (3.2.1) lib/action_controller/metal/implicit_render.rb:4:in`send_action'\n  actionpack (3.2.1) lib/abstract_controller/base.rb:167:in `process_action'\n  actionpack (3.2.1) lib/action_controller/metal/rendering.rb:10:in`process_action'\n  actionpack (3.2.1) lib/abstract_controller/callbacks.rb:18:in `block in process_action'\n  activesupport (3.2.1) lib/active_support/callbacks.rb:491:in`_run__3639096229169453998__process_action__3069518532180131002__callbacks'\n  activesupport (3.2.1) lib/active_support/callbacks.rb:405:in `__run_callback'\n  activesupport (3.2.1) lib/active_support/callbacks.rb:385:in`_run_process_action_callbacks'\n  activesupport (3.2.1) lib/active_support/callbacks.rb:81:in `run_callbacks'\n  actionpack (3.2.1) lib/abstract_controller/callbacks.rb:17:in`process_action'\n  actionpack (3.2.1) lib/action_controller/metal/rescue.rb:29:in `process_action'\n  actionpack (3.2.1) lib/action_controller/metal/instrumentation.rb:30:in`block in process_action'\n  activesupport (3.2.1) lib/active_support/notifications.rb:123:in `block in instrument'\n  activesupport (3.2.1) lib/active_support/notifications/instrumenter.rb:20:in`instrument'\n  activesupport (3.2.1) lib/active_support/notifications.rb:123:in `instrument'\n  actionpack (3.2.1) lib/action_controller/metal/instrumentation.rb:29:in`process_action'\n  actionpack (3.2.1) lib/action_controller/metal/params_wrapper.rb:205:in `process_action'\n  activerecord (3.2.1) lib/active_record/railties/controller_runtime.rb:18:in`process_action'\n  actionpack (3.2.1) lib/abstract_controller/base.rb:121:in `process'\n  actionpack (3.2.1) lib/abstract_controller/rendering.rb:45:in`process'\n  actionpack (3.2.1) lib/action_controller/metal.rb:203:in `dispatch'\n  actionpack (3.2.1) lib/action_controller/metal/rack_delegation.rb:14:in`dispatch'\n  actionpack (3.2.1) lib/action_controller/metal.rb:246:in `block in action'\n  actionpack (3.2.1) lib/action_dispatch/routing/route_set.rb:66:in`call'\n  actionpack (3.2.1) lib/action_dispatch/routing/route_set.rb:66:in `dispatch'\n  actionpack (3.2.1) lib/action_dispatch/routing/route_set.rb:30:in`call'\n  journey (1.0.1) lib/journey/router.rb:68:in `block in call'\n  journey (1.0.1) lib/journey/router.rb:56:in`each'\n  journey (1.0.1) lib/journey/router.rb:56:in `call'\n  actionpack (3.2.1) lib/action_dispatch/routing/route_set.rb:589:in`call'\n  hoptoad_notifier (2.4.11) lib/hoptoad_notifier/rack.rb:27:in `call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/best_standards_support.rb:17:in`call'\n  rack (1.4.1) lib/rack/etag.rb:23:in `call'\n  rack (1.4.1) lib/rack/conditionalget.rb:25:in`call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/head.rb:14:in `call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/params_parser.rb:21:in`call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/flash.rb:242:in `call'\n  rack (1.4.1) lib/rack/session/abstract/id.rb:205:in`context'\n  rack (1.4.1) lib/rack/session/abstract/id.rb:200:in `call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/cookies.rb:338:in`call'\n  ckeditor (3.5.4) lib/ckeditor/middleware.rb:15:in `call'\n  activerecord (3.2.1) lib/active_record/query_cache.rb:64:in`call'\n  activerecord (3.2.1) lib/active_record/connection_adapters/abstract/connection_pool.rb:443:in `call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/callbacks.rb:28:in`block in call'\n  activesupport (3.2.1) lib/active_support/callbacks.rb:405:in `_run__1932999954533059250__call__1309779107945614448__callbacks'\n  activesupport (3.2.1) lib/active_support/callbacks.rb:405:in`__run_callback'\n  activesupport (3.2.1) lib/active_support/callbacks.rb:385:in `_run_call_callbacks'\n  activesupport (3.2.1) lib/active_support/callbacks.rb:81:in`run_callbacks'\n  actionpack (3.2.1) lib/action_dispatch/middleware/callbacks.rb:27:in `call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/reloader.rb:65:in`call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/remote_ip.rb:31:in `call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:16:in`call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/show_exceptions.rb:56:in `call'\n  railties (3.2.1) lib/rails/rack/logger.rb:26:in`call_app'\n  railties (3.2.1) lib/rails/rack/logger.rb:16:in `call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/request_id.rb:22:in`call'\n  rack (1.4.1) lib/rack/methodoverride.rb:21:in `call'\n  rack (1.4.1) lib/rack/runtime.rb:17:in`call'\n  activesupport (3.2.1) lib/active_support/cache/strategy/local_cache.rb:72:in `call'\n  rack (1.4.1) lib/rack/lock.rb:15:in`call'\n  actionpack (3.2.1) lib/action_dispatch/middleware/static.rb:53:in `call'\n  hoptoad_notifier (2.4.11) lib/hoptoad_notifier/user_informer.rb:12:in`call'\n  railties (3.2.1) lib/rails/engine.rb:479:in `call'\n  railties (3.2.1) lib/rails/application.rb:220:in`call'\n  rack (1.4.1) lib/rack/content_length.rb:14:in `call'\n  railties (3.2.1) lib/rails/rack/log_tailer.rb:14:in`call'\n  rack (1.4.1) lib/rack/handler/webrick.rb:59:in `service'\n  /Users/rhulse/.rvm/rubies/ruby-1.9.3-preview1/lib/ruby/1.9.1/webrick/httpserver.rb:138:in`service'\n  /Users/rhulse/.rvm/rubies/ruby-1.9.3-preview1/lib/ruby/1.9.1/webrick/httpserver.rb:94:in `run'\n  /Users/rhulse/.rvm/rubies/ruby-1.9.3-preview1/lib/ruby/1.9.1/webrick/server.rb:191:in`block in start_thread'\n\n  Rendered /Users/rhulse/.rvm/gems/ruby-1.9.3-preview1/gems/actionpack-3.2.1/lib/action_dispatch/middleware/templates/rescues/_trace.erb (4.1ms)\n  Rendered /Users/rhulse/.rvm/gems/ruby-1.9.3-preview1/gems/actionpack-3.2.1/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.7ms)\n  Rendered /Users/rhulse/.rvm/gems/ruby-1.9.3-preview1/gems/actionpack-3.2.1/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (6.4ms)\n And here is the code for the extenstion: https://gist.github.com/1030551\n This was a new(ish) app that has had formtastic added to it.\n\nI removed the module wrapping the extensions and it now works.  \n\nOdd that it should work with the module in Ruby 1.8.7.\n\nThe old style was in there as I copied this code from another app and had not deleted it yet after the conversion.\n That was due to 1.9.3 - if you wrap a class in a module the autoloader expects the directory structure to match. So Mymodule::CustomInput needs to be in app/inputs/mymodule/custom_input.rb \n\n1.8.7 and 1.9.2 didn't care as much and happily loaded app/inputs/custom_input.rb\n Thanks!\n  When using a faux model, I should be able to create an input element that does not have a `name` attribute.  In plain old Rails, I can do this via:\n\n```\ntext_field_tag(:username, nil, :name => nil)\n# <input id=\"username\" type=\"text\"/>\n```\n\nUnfortunately, this `nil` value seems to be getting overridden when trying to accomplish the same with Formtastic:\n\n```\n<%= f.input :username, :as => :string, :html_input => {:id => 'username', :name => nil} %>\n# <input id=\"username\" name=\"user[username]\" type=\"text\">\n```\n\nAm I missing something, or is there some `options.merge` happening somewhere that is overwriting (or not assigning) my value of `nil`?  (I also tried using `false` with no luck.)\n That was just a typo, sorry. ;)  I gave empty string a try, and that is good enough for my needs as a workaround, even though it still generates the `name=\"\"` in the HTML.  Thanks!\n Also, after digging into it. `f.text_field` has the same behavior as Formtastic in this regards, so I guess it's not a Formtastic issue, sorry! :)\n <3\n Fixed in rails. :heart:\n  I'm trying to create a custom submit button with custom text. On the documentation it says do:\n\n```\n  = f.actions do\n    = f.action :submit, :as => :button\n    = f.action :cancel, :as => :link\n```\n\n(haml)\n\n..but I get undefined method error. I tried substituting actions for buttons and no luck.. only thing that works is f.buttons.. but I can't customize that.. or can I?\n  Hi there, somewhat new to Rails 3.x, and couldn't find an issue similar to this one (although a similar StackOverflow was asked [here](http://stackoverflow.com/questions/5890889/default-not-getting-selected-in-formtastic-form)) -\n\nI'm running through the RailsCast [formtastic vet application tutorials](http://railscasts.com/episodes/185-formtastic-part-2), and have a form which populates checkboxes (**f.input :problems, :as => :check_boxes**) based on a many-to-many relationship:\n\n**animal.rb:**\n\n```\nclass Animal < ActiveRecord::Base\nhas_many :symptoms\nhas_many :problems, :through => :symptoms\n```\n\n**animals_form.html.erb:**\n\n```\n<%= semantic_form_for @animal do |f| %>\n<%= f.inputs do %>\n  <%= f.input :name, :hint => \"Use the owner's name if none is provided\" %>\n  <%= f.input :female, :as => :radio, :label => \"Gender\", :collection => [[\"Male\", false], [\"Female\", true]] %>\n  <%= f.input :problems, :as => :check_boxes %>\n\n<% end %>\n<%= f.actions %>\n<% end %>\n```\n\nThis works flawlessly, but when I change it to **\"f.input :problems, :as => :radio\"**, it creates the radio inputs properly, and seems to save my selections properly upon database inspection, but when I return to edit an animal, my prior selection is not displayed (in fact no radio button is shown as selected). If I make a new selection, it will be saved, but if I make no selection, it retains my last saved choice. Not sure if I'm missing something with a :collection here, or where to go from here.\n  Required for localizer caching.\nUsing << instead of + causes \"required_string\" merge with string in cache every request and we have labels like \"Title******************\" after several requests.\n The problem is because `<<` changes the object on its left hand side. And string from the `localized_label` is the same object that stored in the cache. So, using `<<` we change value in the cache every time we execute\n `((localized_label || humanized_method_name) << requirement_text).html_safe`, what means every request to the page with this label.\n`+` solves this problem because it leaves `localized_label` and, respectively, value in cache, unchanged.\n Sorry, just forgot about compatibility. Thanks for fix.\n  This has_many method activeadmin is using which is in ...\nclass FormBuilder < ::Formtastic::FormBuilder\n\nit's pretty awsome and solves the nested models in the Ryan Bates told in his cast No. [196](http://railscasts.com/episodes/196-nested-model-form-part-1) and [197](http://railscasts.com/episodes/197-nested-model-form-part-2). But I can use this method only in ActiveAdmin class but not in a HAML view. It would be so great if it can be a part of formtastic instead or any way to achieve it in a HAML view. Any Suggestions? Below is the code ActiveAdmin is using for this method.\n\n``` ruby\n    def has_many(association, options = {}, &block)\n      options = { :for => association }.merge(options)\n      options[:class] ||= \"\"\n      options[:class] << \"inputs has_many_fields\"\n\n      # Add Delete Links\n      form_block = proc do |has_many_form|\n        block.call(has_many_form) + if has_many_form.object.new_record?\n                                      template.content_tag :li do\n                                        template.link_to I18n.t('active_admin.has_many_delete'), \"#\", :onclick => \"$(this).closest('.has_many_fields').remove(); return false;\", :class => \"button\"\n                                      end\n                                    else\n                                    end\n      end\n\n      content = with_new_form_buffer do\n        template.content_tag :div, :class => \"has_many #{association}\" do\n          form_buffers.last << template.content_tag(:h3, association.to_s.titlecase)\n          inputs options, &form_block\n\n          # Capture the ADD JS\n          js = with_new_form_buffer do\n            inputs_for_nested_attributes  :for => [association, object.class.reflect_on_association(association).klass.new],\n                                          :class => \"inputs has_many_fields\",\n                                          :for_options => {\n                                            :child_index => \"NEW_RECORD\"\n                                          }, &form_block\n          end\n\n          js = template.escape_javascript(js)\n          js = template.link_to I18n.t('active_admin.has_many_new', :model => association.to_s.singularize.titlecase), \"#\", :onclick => \"$(this).before('#{js}'.replace(/NEW_RECORD/g, new Date().getTime())); return false;\", :class => \"button\"\n\n          form_buffers.last << js.html_safe\n        end\n      end\n      form_buffers.last << content.html_safe\n    end\n```\n  Hello,\n\nI am using your range field, but i want to display the value on an other input/div and change the value when we slide. How can i do that? \n\nThank you.\n Ok, and how can i put html in the :hint attribute?\n I tried that, but my html was escaped. Thank you for help !\n  This incorporates the code from @fbuenemann; I simply wrote a spec to check for the new hidden input.  \n\nMy 'hidden_input' branch is based off of 1.2-stable and I rebased @fbuenemann's branch on top of mine.\n @justinfrench given that the code worked fine for me in production, I don't think that it matters.\n I too, thought that the hidden tag should appear before the select, but I just tried it and it worked for me as well.\n @kchien you can merge/cherry-pick a096d4b from my branch. This puts the input after the label, but before the select.\n @fbuenemann - Thanks; I cherry-picked that commit , and edited my spec by making the check more specific.\n@justinfrench - Please take a look at the modifications and let us know what you think. Thank you!\n  This should fix the build error from my last pull request!\n Awesome, thanks for your help! :D\n  This approach is similar to what's needed to clear multiple checkboxes.\n If someone can get the 1.2 specs to run it would be great to verify this doesn't break anything. Also it would be good to extend the spec to check for the hidden field.\n FYI the error I'm getting on about 95% of the specs:\n```Failure/Error: form = semantic_form_for(@fred) do |builder|\n     wrong number of arguments (1 for 0)\n\n```\n\nI don' really have an idea why. Maybe because of the way the method is build through module_eval in lib/formtastic.rb:1923\n\nI tried running the specs with both ruby-1.8.7 and 1.9.2.\n```\n @fbuenemann - thanks to @justinfrench, I made sure I was using Rails 2.3.x, and all of the specs pass.\nDid you try with Rails 3 or 2.3.x?\n Bundler picked up Rails 3.1.3.\nUpdate: OK, specs work and are all passing when using ruby-1.8.7 and `export RAILS_2=1`\n agree.\n  This is to fix issue #771. I previously submitted pull request #773, which had failing tests for older Rails versions.  This not only addresses that, but is also a better solution I believe.\n\nNow, when calling `inputs` on a form builder when passing a block, the second argument provided is the nested attribute index.  e.g.:\n\n```\n<%= form.inputs :for => :tags do |tag, index| %>\n  <%= tag.input :label => \"Tag #{index}\" %>\n<% end %>\n```\n\nSee the updated README in this pull request for another (better) example.\n Thanks!  And yes, it should be backwards compatible since it's simply adding a parameter that can be ignored (assuming there wasn't a different second parameter in the past that this would clash with).\n\nThe only reason I didn't try to deprecate the other method is because `inputs` doesn't always accept a block, meaning there is no way to utilize the `index` argument being passed to the block.  For example, consider the following:\n\n```\n<%= f.inputs :name => 'Category #%i', :for => :categories %>\n```\n Shoot...I was updating my fork's branch to match what's currently on your master branch, and it ended up adding [another commit](https://github.com/mhuggins/formtastic/commit/d5aa7fbe63742958b9d843a7a0169a9e251bda47).  I don't think that should break anything since it's in master already, but if somehow does, let me know, and I'll see that it's undone.\n @justinfrench @mhuggins Looks great - no objections to merging this in asap from my side.\n @mhuggins nice job!\n\n@justinfrench no objections too :)\n Shoot.  The tests are failing on REE & 1.8.7 wherever that second parameter is not included in the block.  It looks like with the way I implemented this change, 1.8.x requires both parameters to be defined in the block, e.g.:\n\n```\nform.inputs do |builder, index|  # this is okay\n    builder.input ...\nend\n\nform.inputs do |builder|  # this throws an error\n    builder.input ...\nend\n```\n\nI might not be skilled enough with Ruby to see a way around it other than explicitly looking into the number of args the proc expects, e.g.:\n\n```\n# change this in InputsHelper.inputs_for_nested_attributes...\nindex = parent_child_index(options[:parent]) if options[:parent]\nblock.call(f, index)\n\n# to this...\nif block.arity == 1\n  block.call(f)\nelse\n  index = parent_child_index(options[:parent]) if options[:parent]\n  block.call(f, index)\nend\n```\n\nWould that be acceptable, or does anyone have a better suggestion?  Alternatively, is it acceptable to assume that nested attribute blocks should _always_ accept two parameters from now on (if using 1.8.x), and should I just update the tests to account for the extra parameter?  Thanks man!\n Alright, I started coding on the bus ride home, but my laptop died...will finish and test as soon as I'm home. :)\n Alright, check out pull request #800.\n  TMail unfortunately defines a top-level StringInput class; this chokes with the input builder detection mechanism.\n\nI know TMail is getting less and less used but in case someone else wonders, I left the issue here.\n\nI don't know if it requires fixing or not - I will try to work-around that (using ActiveAdmin here).\n\nHere's how to detect that (with REE 1.8.7 here):\n\n``` ruby\n> StringInput.method(:new).__file__\n\"/Users/thbar/.rvm/gems/ree-1.8.7-2011.03@app/gems/tmail-1.2.7.1/lib/tmail/stringio.rb\"\n``\n```\n @justinfrench my client was using TMail for email receiving processing despite being in a Rails 3 app (for historical reasons).\n\nIn the end the work-around was this:\n\n``` ruby\ngem \"tmail\", \"1.2.7.1\", :require => false\n```\n\nthen require only from the daemon that does the job.\n\nApart from a quick warning on the README or in the dependencies checker maybe, I don't think much change is needed in Formtastic!\n  Hello,\n\nI want to write some text in the middle of my form, how can i do that?  My form looks like : \n\n```\nform :html => { :enctype => \"multipart/form-data\" } do |f|\n  f.inputs \"Details\" do\n    f.input :civility\n    f.input :society\n    f.input :last_name\n    f.input :address\n    f.input :postal_code\n    f.input :country, :as => :string\n    f.input :email\n    f.input :reduction_code\n    f.input :message\n    f.input :total\n    f.input :city\n  end\n  f.buttons\nend\n```\n Just a div with some text inside.\n I want to put a div with text (300 characters) between :email and :reduction_code.\n just posted another option here -- https://github.com/justinfrench/formtastic/issues/794\n  Hello,\n\nI want to write some text in the middle of my form, how can i do that?  My form looks like : \n\n```\nform :html => { :enctype => \"multipart/form-data\" } do |f|\n  f.inputs \"Details\" do\n    f.input :civility\n    f.input :society\n    f.input :last_name\n    f.input :address\n    f.input :postal_code\n    f.input :country, :as => :string\n    f.input :email\n    f.input :reduction_code\n    f.input :message\n    f.input :total\n    f.input :city\n  end\n  f.buttons\nend\n```\n you can try this;\n\n``` ruby\nform :html => { :enctype => \"multipart/form-data\" } do |f|\n  f.inputs \"Details\" do\n    f.input :civility\n    f.input :society\n    f.input :last_name\n    f.input :address\n    f.input :postal_code\n    \"<li>Hello</li>\".html_safe <<\n    f.input :country, :as => :string\n    f.input :email\n    f.input :reduction_code\n    f.input :message\n    f.input :total\n    f.input :city\n  end\n  f.buttons\nend\n```\n\ni used this same mechanism to add a floating div menu mechanism to a custom edit form we needed...\n Ditchou,\n\nlet me know if you have any questions about this, just email me...\n\n*\\* the menu thing i was talking about had a floating div holding a table with checkbox inputs in the rows (each row was built on the fly from a set of keys contained in the object being edited).  Used this to provide a \"check/uncheck all\" mechanism for properties setup to use input=checkbox.\n forgot to mention that this was done for an ActiveAdmin project...\n here's a pic -- http://cl.ly/2s1K0w442P13013R2D2q\n actually, this little trick only appears to work if you inject the html into the top of the form.  You get all sorts of nasty errors trying to do in between two f.input's.  After a messing with this a bit more, we decided to remove the \"extra\" html from the form definition completely and instead we're now injecting the extra elements using jQuery (ie. prepend).  In our case, we're creating a div that floats to the right side of the screen (across from each of the f.input labels).\n\nSorry if i confused you with my post...\n\n*\\* again, email me if you have any questions and i'll try to explain what we're doing in more detail.\n I send you an email.\n  After a fresh installation, the output of stylesheet_link_tag for IE seems buggy:\n\n``` HTML\n<link href=\"/assets/application.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n  <!--[if IE 6]><link href=\"/assets/formtastic_ie6.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"/assets/ie6.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" /><![endif]-->\n  <!--[if IE 7]><link href=\"/assets/formtastic_ie7.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n<link href=\"/assets/ie7.css?body=1\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" /><![endif]-->\n```\n\n``` ERB\n  <%= stylesheet_link_tag \"application\" %>\n  <!--[if IE 6]><%= stylesheet_link_tag 'ie6' %><![endif]-->\n  <!--[if IE 7]><%= stylesheet_link_tag 'ie7' %><![endif]-->\n```\n\nAnd ie6/7.css\n\n``` CSS\n/*\n *= require formtastic_ie6\n */\n```\n\n`/assets/ie6.css` return style correctly, but why `/assets/formtastic_ie6.css` is linked too ?\n\nRunning on rails 3.2 & formtastic 2.0.2 (same on 2.1-stable)\n After some tries, that happens with `config.assets.debug = true` and has no effect in production\n\nso it's just a \"visual\" issue in development \n  Somehow the make_selected_values and checked?/disabled? methods in Formtastic::Inputs::CheckBoxesInput don't play together anymore. The form element renders, but the previously selected options are no longer selected.\n I managed to get this to work. This happened with a MongoMapper model and an embedded to-many-association on the master branch.\n\nIt didn't work when I used IDs and a custom collection:\n\n  f.input :role_ids, :as => :check_boxes, :collection => [ {'Role Name 1' => BSON::ObjectId('123'} ]\n\nWhen changing to the association with real objects it is working again:\n\n  f.input :roles, :as => :check_boxes, :collection => @available_role_objects\n    <%= semantic_form_for @post do |f| %>\n    <%= f.inputs %>\n    <%= f.inputs :class => 'Category #%i', :for => :categories %>\n    <%= f.actions %>\n  <% end %>\n\nThat isn't supposed work?\n It's common to give the listed element unique IDs for javascript manipulation.\n\nFormtastic uses fieldsets inside a wrapper li.input for nested records:\n\n``` html\n<li class=\"inputs\">\n  <fieldset>...</fieldset>\n  <fieldset>...</fieldset>\n  <fieldset>...</fieldset>\n</li>\n```\n\nI can't add unique classes to those fieldsets so I can't do much with them in javascript unless I go in and search for a unique id then back out and grab the fieldset that way. Not super efficient.\n\n``` ruby\n= f.inputs :class=>\"ticket_type type_%i\", :name => 'Category_%i', :for => :ticket_types do |tt|\n```\n\nIt would be cool if you could do something like the above or below:\n\n``` ruby\n= f.inputs :wrapper_html=>{:class=>\"ticket_type type_%i\", :for => :ticket_types do |tt|\n```\n\nThe output might be:\n\n``` html\n<li class=\"inputs\">\n  <fieldset class=\"ticket_type type_1\">...</fieldset>\n  <fieldset class=\"ticket_type type_2\">...</fieldset>\n  <fieldset class=\"ticket_type type_3\">...</fieldset>\n</li>\n```\n\nOr if both options worked:\n\n``` ruby\n= f.inputs :class=\"ticket_type type_%i\", :wrapper_html=>{:class=>\"ticket_types\", :for => :ticket_types do |tt|\n```\n\n``` html\n<li class=\"inputs ticket_types\">\n  <fieldset class=\"ticket_type type_1\">...</fieldset>\n  <fieldset class=\"ticket_type type_2\">...</fieldset>\n  <fieldset class=\"ticket_type type_3\">...</fieldset>\n</li>\n```\n\nSomething like that anyway.\n\nThanks for your response,\nRyan\n I got around it by using some longer JQuery selectors but I think this would be an awesome feature. Got the OK to work on it at work next time I need it though!\n @ryanisinallofus - Looks like this is a duplicate of #771.  I submitted pull request #798, which provides a solution for accessing the current nested attribute index, assuming it is pulled in. :)\n  The official rails country_select plugin https://github.com/rails/iso-3166-country-select is no longer maintained and has not been updated since 2008. There is now a country-select gem which works better at https://github.com/jamesds/country-select. I have updated the inline documentation as well as the error message to reflect this fact.\n  `inputs_for_nested_attributes` does a `fields_for_args = [options.delete(:for), options.delete(:for_options) || {}].flatten` (i'm using 1.x but 2.x is the same), which will swallow an empty array. so if i do `inputs :for => [:association, []]` (meaning i want to have an empty list not the current association list, but still have the 'bindings' for inputs and labels) the `flatten` will simply swallow the empty array. the solution would be to use `flatten(1)`. my goal is to create a `has_many` list (input) that the user can only use to add new items (e.g. the associated objects would be further processed upon submit, so though i need to have/process the associated objects i don't want to show/list them to the user afterwards), not sure if i overlooked something.\n So this is effectively what the current code does:\n\n```\nruby-1.8.7-p249 :005 > [[:association, []],{}].flatten\n => []\n```\n\nWhich would be applied something like this:\n\n```\nfields_for(:association, {})\n```\n\nAnd you'd like to see this instead:\n\n```\nruby-1.8.7-p249 :006 > [[:association, []],{}].flatten(1)\n => [:association, [], {}]\n```\n\nApplied like this:\n\n```\nfields_for(:association, [], {})\n```\n\nI can't find anything in the Rails docs that explicitly says this works, but it seems like it should based on the examples provided. As long as someone is certain this works, that's cool with me!\n\nThe last final check is if the more common case still works as expected, and it does:\n\n```\n> [:association,{ :hi => :there}].flatten(1)\n => [:association, {:hi=>:there}]\n```\n\nSounds good, have you got time for a pull request? Would love to get this in the 2.1 RC ASAP.\n well [`fields_for_nested_model`](http://apidock.com/rails/ActionView/Helpers/FormBuilder/fields_for_nested_model) (which is called from [`fields_for`](http://apidock.com/rails/ActionView/Helpers/FormBuilder/fields_for)) will act as if the association would be an empty list (because if `association` argument is an empty array: [`convert_to_model`](http://apidock.com/rails/ActionView/Helpers/FormBuilder/convert_to_model) does nothing and an empty array does not respond to `:presisted?` but responds to `:to_ary`) but it is not documented.\n\nif you are okay with that i can create a pull request.\n\np.s. the first code fragment in your comment is wrong, the return value should be `[:association, {}]`, though you are using that in the next fragment so i guess it's just a typo\n\np.s.2 [flatten](http://ruby-doc.org/core-1.8.7/Array.html#method-i-flatten) will only touch arrays (e.g, will call flatten only on its array children), so it wont touch the options hash\n  Cache I18n lookups to improve performance. Enabled by configuration setting.\n\nNo specs yet, as I was unsure what the best way to spec this is. How would you go about this?\n Looks good! Wondering if the `def i18n_cache_lookups` extraction is a bit over the top, but actually, I'm wondering if we need a configuration at all (\"always cache\", or \"perhaps, always cache in production\").\n\nAs far as testing goes, there's an rspec helper I made called `with_config :foo do..end` to let you safely and explicitly set-up the configuration for each test:\n\n```\nit 'should blah when i18n caching is on' do\n  with_config :i18n_cache_lookups, true do \n    #...\n  end\nend\n\nit 'should blah when i18n caching is off' do\n  with_config :i18n_cache_lookups, false do \n    #...\n  end\nend\n```\n\nI guess to prove that caching is in effect as far as a test goes, you've already proven that all existing tests pass (I hope!), so the remaining test is perhaps to try altering the i18n translations _after_ they've been cached. We do `::I18n.backend.store_translations :en, :formtastic => { ... }` in a few specs, maybe that's what you need?\n Makes sense. I was wondering if you would want this to be tested in all specs relying on I18n. \n\nI will add a couple specs in one place and test the caching.\n @justinfrench: What do you think about those specs?\n  When finding the input class check with const_defined? if a class exists instead of raising exceptions in production environments.\n\nWhat would be the best way to create a spec for this?\n @SaschaKonietzke I agree this is hard to test, but I'm a bit confused by the diff -- seems there should be at least one line of red for this to alter the behaviour of any existing code, right?\n My apologies, I forgot to remove the old input_class method and was just overwriting it.\n @justinfrench I just updated my app to your master branch again and saw this pull request isn't included. On purpose? This really helped to cut down the time to render a large form (https://github.com/justinfrench/formtastic/issues/744).\n @justinfrench Thanks, highly appreciated!\n  closes #780\n @sobrinho @nashby I don't think I agree with this. I agree the current implementation is awkward, but so is this. If I fail validations twice, I'll _still_ end up on an edit page instead of the \"intended page\" (whatever that means).\n\nIndex (intended page in this example)\nEdit\nFail validations\nCancel\nIndex (history -2 works)\n\nIndex\nEdit first time\nFail validations\nEdit second time\nFail validations\nCancel\nBack at \"Edit second time\" (history -2 fails here)\n\nI'll post some further thoughts on #780, but I don't think we should pull this in sorry.\n Yeah, I agree with @justinfrench. I think the best solution here is to use `:url` option if you want this functionality and we should add some information to README about using `:back` option on forms with validations.\n  First project from Railscamp Adelaide is ready for peer review!\n Ah, it still needs some CSS love, and updates to the samples/*.html\n Might also benefit from some documentation around custom actions that inherit from these (e.g. a pretty button).\n  Fixes #747\n  Looks good! One concern I have is that we don't change any method names if possible, in order to provide as much backwards compatibility as possible for those that have subclassed NumberInput in their apps. I've had a quick eyeball, but if there's anything you can think of we need to review, that'd be great.\n\nSimilarly, removing the stringish class from the wrapper, while logical, creates a backwards compatibility issue for those that have styled against that class. From a ruby point of view, it's no longer Stringish, but from a CSS perspective, I think it is, so we should keep it (I'm okay with adding additional classes).\n\nAlso wondering if we should continue the ish naming scheme. Timeish, Stringish, Numberish?\n +1 from me. Should close #728 as well if I'm right\n  rails 3.1.3\npg 0.12.0\nformtastic master branch\n\nEvery form with integer fields throw this exception:\n\n> You have a nil object when you didn't expect it!\n> You might have expected an instance of Array.\n> The error occurred while evaluating nil.*\n> \n> 14:       = f.input :age\n\nThese forms works well using formtastic 2.0.2 or master and mysql2 adapter.\n  @haines +1000 for an internal pull request \u2014 I'm going to try getting in the habit of this too, rather than just committing to master all the time. \n  Pulled, thanks!\n  So it now defaults to the first fragment? Outstanding!\n  Awesome work!\n Travis build is now only failing on previous i18n-related stuff, so great work sorting this out!\n @haines Interested in being added as a collaborator?\n @haines Done!\n  I've run into a problem trying to upgrade to 2.0.1 running with a postgres database using the pg 0.12.0 adapter (though earlier versions have the same problem).  I've tracked this down to the inputs/base/validations.rb file where we have\n\n```\n       def column_limit\n          if column? && column.respond_to?(:limit)\n            case column.type\n            when :integer\n              (2 ** (column.limit * 8)).to_s.length + 1\n            else\n              column.limit\n            end\n          end\n        end\n```\n\ncolumn.limit is returning null for integer values, and this is breaking formtastic.  I've put a nasty hack in my copy to set a default (col = column.limit || 4). A better solution would be to address this inside the postgres adapter, but I'm reporting here in case others need a quick fix, or someone can come up with a better idea.\n @rubythings is there any significance to the \"4\", or did you just pick that as a number that suited in your case? Let's assume that a `nil` limit is valid and could be returned by any DB adaptor (Mongo?), then I wonder if we can also do some work in Formtastic to make this better/safer.\n On 18/12/11 06:38, Justin French wrote:\n\n> @rubythings is there any significance to the \"4\", or did you just pick that as a number that suited in your case? Let's assume that a `nil` limit is valid and could be returned by any DB adaptor (Mongo?), then I wonder if we can also do some work in Formtastic to make this better/safer.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/758#issuecomment-3193478\n> I picked that number because it suited by case - it's the size in bytes \n> for an integer in postgres, and mine are all stored as int rather than \n> big int.\n @haines great point. `NumberInput` includes `Stringish`, which defines `input_html_options`, which calls `limit` in the `maxlength` attribute, which calls `column_limit`.\n\nThere seems to be a few places we can hook in and remove this `maxlength` attribute, but I think we need to extract the maxlength logic out of `Stringish#input_html_options` into something like `Stringish#maxlength`, which would allow `NumberInput` to redefine this as `nil`.\n\nThoughts?\n  Using the ':as => checkboxes' option for collection select inputs results in a hidden input field with the same name as the check boxes. This prevents a simple create or update statement on a link table. If there is a reason for the hidden field please explain and also how do I get round the problem when updating or creating\n On 28/11/2011 06:40, Justin French wrote:\n\n> The hidden field is there because browsers won't post an empty collection of checkboxes... this causes problems when editing the object and unchecking all the boxes and is a pretty standard Rails and web application practice so that the controller and/or model know explicitly that all checkboxes were unchecked.\n> \n> This is explained somewhat in the Rails check_box documentation \"gotcha\".\n> \n> I encourage you to fully understand this before disabling it, but the way to do so is to pass in the option `:hidden_fields =>  false`. I'll eave this issue open to ensure that there's documentation for this.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/749#issuecomment-2893519\n> \n> Thanks for that explanation Justin,  I had completely forgotten about \n> that issue. I was using a HABTM association and Rails provides an easy \n> way to update the join table. Ryan Bates did a Railscast on this issue \n> way way back in episode 17 \n> http://railscasts.com/episodes/17-habtm-checkboxes . I have now fixed \n> my problem by rejecting the empty string(s) from the params array before \n> creating/updating. Everything seems to work fine now.\n\nRegards\n\nBrian\n  Added a simple translation for the spanish language\n All right! I added a reference to the spanish yml file in the wiki. Cheers!\n  I'm using formtastic via active_admin but I think this issue lies within formtastic.\n\nI can't get a multiselect to clear on save. It seems it doesn't POST anything at all when there's nothing selected so Rails does nothing to update the records. I believe it should POST the appropriate key with a blank value. If I change the field to use checkboxes, it works because a blank value is posted though properly within the hash. My code is:\n\n```\nActiveAdmin.register Organization do\n  form do |f|\n    f.inputs \"Details\" do\n      f.input :name\n      f.input :provinces, :as => :check_boxes  # multi-select, can be cleared\n      f.input :provinces                       # select, cannot be cleared\n    end\n  end\nend\n```\n\nI couldn't find anything in the docs so sorry if I'm just missing something obvious and this isn't an issue at all.\n @TimFletcher Sounds like you need a hidden input of the same name before the multi-select. This will ensure that something is posted. If that works, please let me know, so we can consider making the same change in Formtastic core so this works out-of-the-box.\n @TimFletcher any update on this? Closing until I hear more.\n Hey, sorry for my lack of responsiveness on this. I worked around it for now but I'll hopefully get time to dig into this over Christmas. Appreciate your attention.\n @TimFletcher did you work-around it with my suggestion, or something else?\n Can we re-open this issue? There definitly needs to be an hidden input inserted before multiple selects, just like for checkboxes.\n This can't be cleared:\n```<select name=\"vendor[user_ids][]\" multiple=\"multiple\">\n  <option value=\"1\">A</option>\n  <option value=\"2\">B</option>\n</select>\n\n``````\n\nThis can be cleared:\n```<input type=\"hidden\" name=\"vendor[user_ids][]\" value=\"\">\n<select name=\"vendor[user_ids][]\" multiple=\"multiple\">\n  <option value=\"1\">A</option>\n  <option value=\"2\">B</option>\n</select>\n``````\n @fbuenemann Re-opened, how about working up a pull request? :)\n I can do that, might start with 1.2.x though and then port over to 2.x, because formtastic 2.x html5 number inputs are causing quite some trouble on the localized decimal fields in my current app. (I'm skipping a rant on how broken the current browsers' implementations of number inputs are.)\n +1\n\nmultiple-select element behaves similar to checkboxes in the sense that it is considered \"not successful\" by the html forms spec and thus doesn't get sent at all and needs a hidden input as default element.\n\nCurrently i'm working around this by using:\n\n```\n= f.inputs do\n  = f.input \"myfield[]\", :as => :hidden, :value => \"\"\n  = f.input :myfield, :as => :select, :multiple => true\n```\n\nThis actually leads to inconsistent input name attributes but rails seems to parse the params properly anyway.\n @justinfrench I've already implemented a fix for the 1.2-stable branch, however the specs aren't working even without my changed, 826 of 886 tests are failing, using either 1.8.7-head, 1.9.2-p290 or 1.9.2-head.\n\nAnything besides bundler and rake spec I need to do? The 2.x specs are working fine.\n\nError on pretty much all the specs: `semantic_form_for(@fred) do |builder|\n     wrong number of arguments (1 for 0)`\n @fbuenemann I haven't ventured into 1.2-stable in a long time! All I can suggest off the top of my head is a clear gem environment (i.e., RVM), 1.8.7 (I wasn't testing 1.9 back then) and a bundle install. If you've tried all that, let me know and I'll see what I can do. Pushing up the code change regardless of failing specs might help us to look at the changes needed for master either way, and help others stuck on 1.2.x.\n oh, it's already pushed, only haven't made it into a pull request yet: f2d44a96bfd6d92aa293fb6b3f993c36456fb1fe\n Just wondering, did this make it into 1.2-stable? \n @kchien My code is ready to be pulled for 1.2, but I can't get the rspec tests to run.\n\nI've created a pull request GH #799 for this.\n @fbuenemann  I'm going to attempt to work on this today. So far, I too, can not get the specs to pass. @justinfrench  -- do the specs pass for you?  If so, would you mind posting your Gemfile.lock?\n  I have\n```<%= f.input :pages, :as => :select, :collection => pages.flatten %>\n\n```\nand formtastic forces a multi select. How do I stop that?\n```\n that didn't work\n\n```<%= f.input :pages, :as => :select, :input_html => { :multiple => false }, :collection => pages.flatten %>\n\n```\nstill gives me a multi select.\n```\n has_and_belongs_to_many\n Ok, have reproduced this bug with a test. Looking into it, sorry for the lag in responding.\n Actually, I have a test that \"proves\" it should work:\n\n```\n  describe 'for a has_and_belongs_to_many association' do\n    it 'should allow non-multi select with the :input_html option' do\n      output_buffer.replace ''\n      concat(semantic_form_for(@freds_post) do |builder|\n        concat(builder.input(:authors, :as => :select, :input_html => { :multiple => false }))\n      end)\n      output_buffer.should_not have_tag('form li select[@multiple=\"multiple\"]')\n    end\n  end\n```\n\nThe logic was a bit smelly, and there weren't any tests for this case:\n\n```\n<%= f.input :pages, :as => :select, :multiple => false, :collection => pages.flatten %>\n```\n\n... so I've added two tests and some code changes to hopefully resolve this. I've committed them in a branch \"GH-745\", so please bundle in Formtastic from master with the `:git` option and use the branch name as the `:ref` option.\n\n@cgunnels Please report back and confirm that this has resolved your problem, then I'll merge it into master.\n This worked:\n\n```\n<%= f.input :pages, :as => :select, :input_html => { :size => 1 }, :multiple => false, :collection => pages.flatten %>\n```\n\nI didn't merge in your changes, I am using version 1.2.4\n Ok, closing then.\n  I'm using formtastic 2.0.2 in my rails 3.0.10 app on ruby 1.8.7. I've noticed that calls to formtastic take a long time, making pages contain big forms very slow.\n\nFor example, `= f.input :title` within my haml template takes about 6ms for this particular line of code. The app is running in production mode, the page has been reloaded a few times. Forms containing a few dozens of input elements easily sum up to 400-800 ms per request only spent in the view.\n\nEven worse, a page containing a partial rendered multiple times would even take 70ms for the first invocation of that code, no matter if the page had been generated just seconds ago.\n\nOn the other hand, haml templates that do not contain formtastic code are much faster than that. How could I find out what's wrong?\n I created a very simple rails 3.0.10 test app which demonstrates the problem. Please see https://github.com/datenimperator/formtastic_test It's all scaffold and simple, using formtastic as the only runtime dependency.\n\nThe app contains just one model `Book` which has two properties `title` and `content`. There are two form partials in app/views/books, one called `_formtastic.html.erb` the other `_vanilla.html.erb`. By appending `?form=vanilla` to the new/edit request, you can switch between the two, having formtastic as the default.\n\nInteresting: On my machine, formtastic takes 6-7ms for each invocation of `f.input`. Try and duplicate the title a few times, the time to build the form will go up significantly.\n\n There's also a performance test to give you some numbers:\n\n```\nLoaded suite /Users/c.aust/.rvm/gems/ruby-1.8.7-p352-perf@mhmr/gems/rake-0.9.2.2/lib/rake/rake_test_loader\nStarted\nBooksTest#test_books_edit_formtastic (40 ms warmup)\n           wall_time: 13 ms\n              memory: 1527.82 KB\n             objects: 23392\n             gc_runs: 0\n             gc_time: 7.00 ms\n.BooksTest#test_books_edit_vanilla (9 ms warmup)\n           wall_time: 6 ms\n              memory: 592.64 KB\n             objects: 11409\n             gc_runs: 0\n             gc_time: 0.00 ms\n.\nFinished in 0.758593 seconds.\n\n10 tests, 0 assertions, 0 failures, 0 errors\n```\n Added a variant to the repo to demonstrate formtastic taking more time the more input elements you'd use.\n\n```\nStarted\nBooksTest#test_books_edit_formtastic (38 ms warmup)\n           wall_time: 13 ms\n              memory: 1527.71 KB\n             objects: 23388\n             gc_runs: 0\n             gc_time: 9.00 ms\n.BooksTest#test_books_edit_formtastic_4_title_inputs (26 ms warmup)\n           wall_time: 32 ms\n              memory: 2715.52 KB\n             objects: 42760\n             gc_runs: 0\n             gc_time: 17.00 ms\n.BooksTest#test_books_edit_formtastic_8_title_inputs (42 ms warmup)\n           wall_time: 52 ms\n              memory: 4292.55 KB\n             objects: 68384\n             gc_runs: 0\n             gc_time: 17.00 ms\n.BooksTest#test_books_edit_vanilla (9 ms warmup)\n           wall_time: 7 ms\n              memory: 592.53 KB\n             objects: 11405\n             gc_runs: 0\n             gc_time: 0.00 ms\n.BooksTest#test_books_edit_vanilla_4_title_inputs (10 ms warmup)\n           wall_time: 8 ms\n              memory: 756.69 KB\n             objects: 14768\n             gc_runs: 0\n             gc_time: 10.00 ms\n.BooksTest#test_books_edit_vanilla_8_title_inputs (13 ms warmup)\n           wall_time: 11 ms\n              memory: 974.95 KB\n             objects: 19248\n             gc_runs: 0\n             gc_time: 0.00 ms\n.\nFinished in 4.024018 seconds.\n\n30 tests, 0 assertions, 0 failures, 0 errors\n\n```\n I just stumbled across this issue in my own app. For one larger formtastic form with many inputs takes about 3 seconds to generate the view, and there aren't any slow database calls in between.\n\nDid you find any solution for this problem already or have an idea why this is happening?\n I believe it's got to do with i18n, looking at the profiler results shows me massive amounts of objects created somewhat related to it.\n\nNeed to add though that it was the first time I had to work with the ruby profiler. YMMV.\n I'm currently playing around with this and was able to greatly reduce the time to render the formtastic form by changing the GC settings and caching i18n calls (https://gist.github.com/1397497).\n Good approach, it cuts my benchmarks run time by more than 50%. Looking at it further, I see a lot of time is spent in Kernel#raise, where also an awful lot of objects is created. I've read somewhere that Exceptions are particularly slow in Ruby, while is raise called so often in the context of i18n?\n\nps: Changing GC params might help, but is not feasible in my current situation since I can't choose a different Ruby interpreter...\n I did some more investigations. There have been updates to the I18n module recently, so it doesn't raise that many exceptions anymore. Check that you have version 0.6.0.\n\nI used this to find out which other exceptions get thrown:\n\n```\nmodule Kernel\n alias _raise raise\n\n def raise(*a)\n   puts \"== Raising: #{a}\"\n   _raise(*a)\n end\nend\n```\n\nOne big problem seemed to be that the test environment, which rake test:benchmark uses, has whiny_nils = true set by default. Formtastic raises and catches many such whiny_nil exceptions, if you set it to false a lot less exceptions get created.\n\nFormtastic also threw many exception in my large form because it was checking for many user-defined input classes. I updated the monkeypatch (https://gist.github.com/1397497) to use const_defined? instead of catching NameErrors, which further increased the speed.\n\nI also updated the cached i18n lookups to include some more details in the cache key, as I encountered some problems with different translations for the same attribute in different actions.\n\n@justinfrench: What do you think of those changes? If you like the idea of including this in master I can create a fork with a pull request.\n @SaschaKonietzke I think the `const_defined?` patch will create problems with autoloading... that is, I think that not all input classes will be defined the first time they're requested. This would need some testing in both production, test and development environments before we apply it to master, but I'm open to the idea.\n\nShould we be requiring i18n >= 0.60?\n\nWould love to see a pull request with the localisation caching in place.\n\nSeparate, smaller pull requests would be awesome if possible, and if there's any changes (as opposed to improvements), please note so that I can consider them when numbering the next version.\n I also found out that const_defined? didn't work in development mode with auto-loading enabled, that's why I check if Rails.application.config.cache_classes is true. I don't like the two code paths, but don't know if there is a better way to do it that always works :/. Do you have an idea? Should we just check for Rails.application.config.cache_classes?\n\nThe latest Rails already requires i18n >= 0.6, so requiring it in Formtastic is probably not necessary? It is \"only\" a performance improvement and anybody could force the version themselves when using an older version of Rails?\n\nI'll create separate pull requests for you, but will wait until we know what to do with auto-loading.\n @SaschaKonietzke sounds like you've got a plan with autoloading etc, please send some pull requests!\n @SaschaKonietzke any update? looking to push a 2.1.beta soon!\n @justinfrench Sorry, I didn't get to it yet. I saw that there were some larger changes to Formtastic, which require some more modifications. The earliest I can implement this is probably February :/.\n @justinfrench Please take a look at the two pull requests I sent you.\n  This [pull request](https://github.com/justinfrench/formtastic/pull/545) was ostensibly to fix the `NoMethodError` problem with Mongoid relations.\n\nHowever, it's still raising `NoMethodError` with select fields in 2.0.2 (a `Mongoid` `belongs_to` in my case).  `if reflection.options` should (I think) read `if reflection.respond_to(:options)` in each case.  However, this just masks a further problem - on Mongoid, if you use `.scoped(:conditions => nil)` or `.scoped(:conditions => {})`, the query will always return no results, meaning a blank select box.  Looks like we need to conditionally omit the `scoped(:conditions => ...)` hash.\n\nThe workaround - for `undefined method 'options' for #<Mongoid::Relations::Metadata>` is to supply the collection to the input explicitly, e.g. `= input :category, :collection => Category.all` \n\n(pull request inbound shortly)\n  Hi\n\nI have the exact same issue as https://github.com/justinfrench/formtastic/issues/443\n\nIm on Ruby 1.8.7 Rails 3.1.1 and Formtastic 2.0.2\nfields are :boolean in MySQL but are always shown unchecked.\n\nAlso formtastic does not seem to recognise the :boolean fields for a start - it renders them as StringInput if you dont specify the :as => :boolean\n\nThanks\n\nMichael\n I have tried to further debug this and it seems that the variable \"object\" is nil and so the checked? method always returns false.\nI found this by subclasing BooleanInput  (class MyCheckboxInput < Formtastic::Inputs::BooleanInput) and investigating the variable available in the checked? method.\n\nBut I cant figure out why the object variable is nil ??\n\nThanks for any help\n\nMichael\n No - same thing - builder.object is also nil.\nI tried to overwrite the Initialize method also - there the object\nparameter coming in is also nil (same with builder.object). Dont know\nif that helps you.\n\nOn Tue, Nov 8, 2011 at 8:26 PM, Justin French\nreply@reply.github.com\nwrote:\n\n> @mibock if you override the `checked?` method to use `builder.object` instead of just `object` does it work?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/737#issuecomment-2672239\n\n## \n\nMichael Bock\nRapidiOnline\nTel: +33 468 206 200\n For some reason this did not get in the other day, but here it is again:\n\n```\n= semantic_form_for :transfer, :url => service_transfer_path(@service,\n@transfer), :html => {:method => :put, :autocomplete => \"off\"} do |f|\n = f.inputs do\n   = f.input :code\n   = f.input :enabled\n   = f.input :performupdate, :as =>  :my_checkbox, :label => 'Update'\n = f.buttons\n```\n\nboth `:enabled` and `:perform update` are boolean. Both are true/1 in the\ndatabase. enabled is shown as text field and the code for `MyCheckbox`\nis here:\n\n```\nclass MyCheckboxInput < Formtastic::Inputs::BooleanInput\n def checked?\n   p builder.object\n   true\n end\nend\n```\n Hi Justin\nThat was it !  A lot of trouble for a little detail.\nI was experimenting with a presenter and mixing in some details from\nit into the form - I guess that got me confused.\nThanks a lot for spotting this and helping out (and for all your work\non Formtastic - makes forms look a lot better !)\nMichael\n\nOn Tue, Nov 15, 2011 at 7:37 AM, Justin French\nreply@reply.github.com\nwrote:\n\n> @mibock I've noticed you're using \u00a0`semantic_form_for :transfer` where `:transfer` is a symbol, rather than `@transfer` (an instance of a Transfer model) \u2013 we need an instance of a model that has some state persisted in it in order to check the checkbox, reflect on the database columns, etc. Any reason you're knot using `@transfer` and instantiating an instance of a `Transfer`?\n> \n> Closing for now as I'm confident this is the issue, feel free to re-open.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/737#issuecomment-2741512\n\n## \n\nMichael Bock\nRapidiOnline\nTel: +33 468 206 200\n  Hi, \n\ni used Active Admin and see they use Formtastic for the form code, i try to implement paperclip but i don't have luck, my form code are:\n\nform :html => { :multipart => true } do |f|\n  f.inputs \"Details\" do\n    f.input :name\n    f.input :created_at, :label => \"Publish Product at\"\n    f.input :category\n  end\n\n  f.inputs \"Images\" do\n    f.has_many :assets do |p|\n      p.input :asset, :as => :file, :input_html => { :multiple => true }, :label => \"Image\", :hint => p.object.asset.nil? ? p.template.content_tag(:span, \"No Image Yet\") : p.template.image_tag(p.object.asset.url(:thumb))\n      p.input :_destroy, :as=>:boolean, :required => false, :label=>'Remove'\n    end\n  end\n\n  f.inputs \"Content\" do\n    f.input :description\n  end\n  f.buttons\nend\n\nMy asset model is this:\n\nclass Asset < ActiveRecord::Base\n  belongs_to :product\n  has_attached_file :asset, :styles => { :large => \"340x330#\", :medium => \"140x80#\", :thumb => \"70x70#\" },\n    :url => \"/products/:id/:style/:basename.:extension\",  \n    :path => \":rails_root/public/products/:id/:style/:basename.:extension\"\n\n  validates_attachment_presence :asset\n\nend\n\nWhen i try to upload a new one, automatic load a missing.png and i search the image with the \"choose File\" button and when save, a \"Can't Be Empty\" message appears down my choose file button.\n\nAre you see any error o problem with my code, thanks for the time.\n Justin i put my solution here...\n\nhttps://github.com/gregbell/active_admin/issues/719\n  see discussion in issue #728\n Note we have an \"issue\" with signed columns.\n\nIf the column is unsigned with 8 bytes, the formula matches:\n\n``` ruby\n2 ** ( 8 * 8 )\n#=> 18446744073709551616\n```\n\nBut if the column is signed, this will be wrong because the value minimum value will be `-9223372036854775808` and maximum value will be `9223372036854775808`.\n\nThe only issue in this case is that, the size attribute will be 21 instead of 20 but I guess it's not a real problem.\n\nAnother question is this `+ 1`.\n\nThe size attribute should not be the real size of string?\n\n``` ruby\n( 2 ** ( 2 * 8 ) )\n#=> 65536\n( 2 ** ( 2 * 8 ) ).to_s.length\n#=> 5\n( 2 ** ( 2 * 8 ) ).to_s.length + 1\n#=> 6\n```\n ok, the unsigned will not be a problem because user may want to type `-300` on field.\n\nthe only question is the `+ 1` now :)\n @justinfrench, note that:\n\n``` ruby\n2 ** ( 2 * 8 )\n#=> 65536\n```\n\nA column using limit 2, the max value will be `65536`.\n\nThe string limit will be 5 but this formula returns 6:\n\n``` ruby\n( 2 ** ( 2 * 8 ) ).to_s.length + 1\n#=> 6\n```\n\nThat allows user to type `965536` for example :)\n We need to keep in mind that imposing a character limit is imperfect anyway. The max value for a signed integer column is 2147483647 (10 characters) and the min value is -2147483648 (11 characters), see http://dev.mysql.com/doc/refman/5.0/en/numeric-types.html.  The max and min values are not 9999999999 and -9999999999, and both of these would pass the maxlength character limit restriction.\n\nPerhaps setting max/min instead of maxlength is more appropriate for numeric inputs, but I don't know if it has sufficient browser or standards support. http://www.w3schools.com/html5/att_input_max.asp\n @jnimety you're right.\n\n@justinfrench it's ok for me!\n  So I have a Rails 3.1 app with the latest version of Mongoid:\n\n``` ruby\nclass Category\n  include Mongoid::Document\n  field :name, :type => String\nend\n```\n\nWhen I render an input, it queries the database for each entry (e.g. that's 100 queries for 100 categories)!\n\n``` erb\n<%= semantic_form_for MyObject.new do |f| %>\n  <%= f.input :category, :as => :select, :collection => Category.all %>\n<% end %>\n```\n\n``` log\nMONGODB bb_development['categories'].find({}).limit(-1).sort([[:_id, :asc]])\nMONGODB bb_development['categories'].find({}).limit(-1).sort([[:_id, :asc]])\nMONGODB bb_development['categories'].find({}).limit(-1).sort([[:_id, :asc]])\nMONGODB bb_development['categories'].find({}).limit(-1).sort([[:_id, :asc]])\nMONGODB bb_development['categories'].find({}).limit(-1).sort([[:_id, :asc]])\nMONGODB bb_development['categories'].find({}).limit(-1).sort([[:_id, :asc]])\n... many, many more times\n```\n\nIt gets worse if it's combined with a default_scope\n\n``` ruby\ndefault_scope asc(:name)\n```\n\n``` log\nMONGODB bb_development['categories'].find({:deleted_at=>nil}).sort([[:name, :asc]])\nMONGODB bb_development['categories'].find({:deleted_at=>nil}).limit(-1).sort([[:name, :asc], [:_id, :asc]])\nMONGODB bb_development['categories'].find({:deleted_at=>nil}).limit(-1).sort([[:name, :asc], [:_id, :asc], [:_id, :asc]])\nMONGODB bb_development['categories'].find({:deleted_at=>nil}).limit(-1).sort([[:name, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc]])\nMONGODB bb_development['categories'].find({:deleted_at=>nil}).limit(-1).sort([[:name, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc]])\nMONGODB bb_development['categories'].find({:deleted_at=>nil}).limit(-1).sort([[:name, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc]])\nMONGODB bb_development['categories'].find({:deleted_at=>nil}).limit(-1).sort([[:name, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc]])\nMONGODB bb_development['categories'].find({:deleted_at=>nil}).limit(-1).sort([[:name, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc]])\nMONGODB bb_development['categories'].find({:deleted_at=>nil}).limit(-1).sort([[:name, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc]])\nMONGODB bb_development['categories'].find({:deleted_at=>nil}).limit(-1).sort([[:name, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc], [:_id, :asc]])\n```\n\nThe only way I know how to prevent it is to pass in the collection with to_a\n\n``` ruby\nCategory.all.to_a\n```\n\nThoughts?\n  Here's my input code:\n\n= f.input :report_columns, :label => \"Columns\", :as => :check_boxes, :collection => [\"One\", \"Two\", \"Three\"]\n\nIf I check just \"Three\" and submit, the value I get for report columns is:\n\n\"report_columns\"=>[\"\", \"Three\"]\n\nThanks. I heart formtastic.\n\nDave\n  Before this change, it wasn't possible to create an input of type 'time'\nthat didn't default to the current date. This made it impossible to\ndifferentiate between a form submission wherein the user hadn't picked a\ndate, and one in which they'd picked midnight UTC.\n Does this change default behaviour from \"if there's no time on the model, make it 'now'\" to \"if there's no time on the model, show nothing\"? I'm not necessarily against that change, but we should be conscious of it.\n The way I would put the current behavior is \"if no time is entered in a formtastic time input, save 2000-01-01 00:00 UTC to the database\". This change results in that scenario leaving the field nil, which is desirable if you ever want a time field to be optional. \n \"save \u2026 to the database\" is too implementation specific, so let's stick to what the user sees on the form \u2014 if there's no time present on the attribute, what did the user see, what will the see going forward?\n You're asking about an edit form, right? Going forward, the user sees blank values for the time dropdowns when the field is nil, same as they would for a new object\n @sobrinho, totally agree, but anything that changes the default behaviour of Formtastic should be at least well documented in the release notes, so I'm trying to figure out what the user-facing change is. \n Sounds like we're basically on the same page, then.\n\nThe release notes could read something like \"Changed time input so that blank values aren't persisted as midnight\" \n\nWould it also make sense to point out that this change makes the formtastic behavior consistent with ActionView's time_select with include_blank? Eg.\n\n```\ntime_select foo, bar, :include_blank => true\n```\n  The syntax introduced in 253dc6d559b610f04fab1bc43209d6caa0603d30, eg.\n\n  concat(builder.fields_for :author, :index => 3 do |author|\n\nwas producing these errors:\n\n  syntax error, unexpected keyword_do_block, expecting ')' (SyntaxError)\n  Rails' FormBuilder allows `:include_blank => 'string value'` for selects, producing `<option value=\"\">string value</option>`. This is different to using `:prompt => 'string value'` in that the blank value is included even if an option is already selected.\n @justinfrench Thoughts? At the moment the select input doesn't allow the user to set a field back to nil, since the blank option is suppressed if the field already has a value.\n Yep, that's what the patch does. However, I don't think prompt should behave in the same way (otherwise aren't include_blank and prompt are doing exactly the same thing?).\n\nIMO the difference should be that include_blank is used when blank is a sensible choice in the select box (i.e. for making optional fields nullable, `:include_blank => 'None'`), whereas prompt should be used when selecting the blank option would be invalid (i.e. only as a hint for required fields, `:prompt => 'Please select:'`). In the latter case since it doesn't make sense to revert a previously-filled field to a blank value, the prompt shouldn't be included if a value is present.\n @haines Thinking out loud...\n- `:include_blank => true` and `:include_blank => false` are both pretty obvious\n- `:include_blank => \"Some String\"` is pretty obvious\n- `:include_blank => true` with `:prompt => \"Some String\"` is pretty obvious\n- `:prompt => \"Some String\"` alone should imply/force `:include_blank => true`\n\nIn my humble opinion, I don't think we should be specialising the behaviour based on if the object is being created or edited, or if there's an existing value present. If the form author wants to do this, they can do so in the form partial be checking the state of the object or the `params[:action]`.\n\nGiven the above...\n1. how do you feel about the rules above?\n2. how do they compare to current formtastic behaviour?\n3. how do they compare to what's in your patch?\n\n@sobrinho what do you think?\n I guess we should follow exactly what rails documentation says:\n\n:include_blank - set to true or a prompt string if the first option element of the select element is a blank. Useful if there is not a default value required for the select element.\n\n:prompt - set to true or a prompt string. When the select element doesn\u2019t have a value yet, this prepends an option with a generic prompt \u2013 \u201cPlease select\u201d \u2013 or the given prompt string.\n\nThis means, if using `:include_blank`, the option will be there always.\n\nIf using `:prompt`, the option will be there only if value is not set on database.\n\nSeems like both options accepts boolean and string values.\n\nThat's what your patch do, @haines ?\n Ok, if this patch brings us in line with Rails, perfect, let's just make the documentation is up to date too. Any more to do before this goes in?\n @haines many thanks, have merged in\n @haines There is a spec fail related to your work. Can you please run the full suite on master and see if you can hunt this down ASAP? Would rather not revert the merge if it's easily solved!\n\n```\nselect: options[:include_blank] when :include_blank is set to a string should have a select option with blank value but that string as text\n\nFailure/Error: output_buffer.should have_tag(\"form li select option[@value='']\", \"string\")\nExpected [...] to have an element matching \"form li select option[@value='']\" with inner text \"string\", but found 0\n```\n @haines I'm just running `bundle exec rake`\n @haines I get a pass under 1.9.2 and a fail under 1.8.7. Curious.\n Running `bundle exec rake`:\n\n```\n  1) select input explicit values using a nil name should have an input named post[title]\n     Failure/Error: output_buffer.should have_tag(\"form li select[@name=\\\"#{name}\\\"]\")\n       expected\n       <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n       <html><body><form accept-charset=\"UTF-8\" action=\"/posts\" class=\"xyz post\" id=\"new_post\" method=\"post\" novalidate=\"novalidate\">\n       <div style=\"margin:0;padding:0;display:inline\"><input name=\"utf8\" type=\"hidden\" value=\"\u2713\"></div>\n       <li class=\"select input required\" id=\"post_title_input\">\n       <label class=\" label\" for=\"post_title\">Title<abbr title=\"required\">*</abbr></label><select id=\"post_title\" name=\"post[title][]\"><option value=\"\"></option></select>\n       </li>\n       </form></body></html>\n\n       to have an element matching \"form li select[@name=\\\"post[title]\\\"]\", but did not\n     # ./spec/support/custom_macros.rb:91:in `block in it_should_have_select_with_name'\n```\n\nruby 1.9.3p0\n _Sigh_\n- My fail is also [repeated on Travis CI under 1.8.7](http://travis-ci.org/#!/justinfrench/formtastic/jobs/424860), and [ree](http://travis-ci.org/#!/justinfrench/formtastic/jobs/424861) along with some i18n ones that have been bugging me for a few weeks.\n- Under [1.9.2](http://travis-ci.org/#!/justinfrench/formtastic/jobs/424862) and [1.9.3](http://travis-ci.org/#!/justinfrench/formtastic/jobs/424863) on Travis, there's the 18n stuff only\n\nThe first failed build for the i18n stuff was a README change, so sounds like it's environmental (different versions of i18n gem, for example), so I'll look there.\n\nIn regards to the select fails under 187 and ree, and the varied results on each of our systems, I'd say there's something environmental going on here too.\n\nWill compare our Gemfile.lock files next...\n\n@sobrinho @haines @yabawock \n @haines okay, diff'd our two gem files, I would suspect the root cause is you have action pack and railties 3.1.1, I have  3.1.0. I ran `bundle update` (which bumped me up to 3.1.3), followed by `bundle exec rake`, and the full suite was green under 1.8.7. Spoke with the Travis-CI guys, and they suggested we check-in the Gemfile.lock (Why didn't I think of that? Why was it ignored?).\n\nWaiting for the `cifix` branch to build!\n @haines seriously great work. I'll merge in your fix, and it's probably worth a patch to Rails, but often we've just patched around Rails' inconsistencies, so would happily accept any patch that makes Formtastic more consistent regardless of Rails. Having said that, I'm pretty bummed out on Timeish and think the future is in date pickers, so I personally wouldnt invest heavily in Timeish beyond documenting the inconsistencies. If you're motivated, I'll definitely accept the patch though!\n\nIn regards the lock file, that was just a whim to narrow things down, wasn't intending that as a permanent solution. \n\nThanks once again!\n @justinfrench I've had some good experience using [appraisal](https://github.com/thoughtbot/appraisal) as an enhancement to test suites. It makes testing against different combinations of gems very easy without getting in your way in regard to handling Gemfile or Gemfile.lock. Also it would enable to test against 3.0, 3.1 and 3.2 in one sweet setup - making certain it works on all supported versions.\n\nI'd offer to integrate it into the current testsuite if there's interest.\n @yabawock Yes please!\n  As far as i can tell we can memoize the selected_values output so we're not recalculating for each member of the collection.  This is my first time looking into the Formtastic source, so please let me know if there's a use case this would break.\n I also want to mention that this brings significant speed improvements on large sets of checkboxes.\n Hi, looks great! Is the speed improvement / reason for this because `selected_values` was being called multiple times in Formtastic's code, or because you rendered the same set of checkboxes multiple times in a single request?\n multiple times in formtastic for a single collection of checkboxes\n Merged, with thanks!\n  I'm having trouble getting inline errors to show up for nested fields with Formtastic. My models are set to go with `accepts_nested_attributes_for` and I have a `validates_associated` call as well. The errors hash, if I check it manually, spits out the `associated_model_name.attribute_name` key referencing the error message as a value, so the validation is working, but it doesn't look like Formtastic is paying it any attention. I tried digging into the Base::Errors module, but I'm wicked lost on what's happening (esp. with `error_keys`). \n\nI've put the relevant pieces of code in a Gist. This is obviously drastically simplified in terms of the number of attributes/validations/hooks, but it should give an idea of how I have this setup: https://gist.github.com/1276547\n\nUsing Rails 3.0.10 and Formtastic 2.0.2 with Ruby 1.9.2.\n +1 - corey, any update on this, experiencing the same issue. haven't had a chance to dig into it yet, but wanted to check with you first before I went down the rabbit hole\n Hey Jeffrey, no update from me \u2014\u00a0I'm able to sidestep the issue for now by not nesting the form that was nested, but that isn't usually an option for people. Hopefully Justin can take a look and see what's up soon, but I suspect that this just isn't supported.\n Still looking at this, want to get a fix in for 2.0.3.\n Since I've split up my application to not nest this form, I don't have the breaking practical anymore. I created a Rails 3.1 app from scratch with Formtastic 2.0.2 and it is not exhibiting the same problem with the Formtastic configuration shared in the Gist. I'm wondering what the incompatibility is; the application in question was originally developed by another developer in Rails 2.3.8 and I took over and upgraded it to Rails 3.0 and then Rails 3.1. It's very possible there is something in all of that which caused this behavior.\n\nJeffrey, are you able to provide any of the information Justin is looking for?\n Hey Corey, no I haven't, been swamped with work. Let me see if I can take a look at it this afternoon and get Justin the info he asked for. Sorry for dropping the ball on this.\n Hi Guys! Some months ago I had an issue with validations on nested forms with activeadmin (which uses formtastic) that might be related to this.. https://github.com/gregbell/active_admin/issues/550\n @jeffreyiacono any update on this?\n let me bump my gems and give it a whirl. will ping you back later today on this\n @justinfrench had a chance to kick the tires on this a bit more. I threw together a quick sample app (https://github.com/jeffreyiacono/formtastic-nested-errror-issue) and found that if you use formtastic (and Rails) as it's meant to be used, it actually works properly :) that is to say: the problem existed between keyboard and chair.\n\nIn the sample app, I have a Conversation model that has many (embeds many in this case) Messages. I was instantiating a new Conversation object in ConversationsController#new, but then stupidly building the associated Message instance in the view's form via:\n`form.semantic_fields_for :messages, @conversation.messages.build`\n\nSo when validations failed and the new view was re-rendered, a new message instance was being created and the errors were not being displayed on this item, which is to be expected.\n\nGive my analysis / app a quick overview and if you you're happy with it, feel free to close this issue out.\n\nOne thing to note: the error message on the associated object seems to be getting set twice. If you view the screenshot on the sample apps landing page, you'll see :messages => [\"is invalid\", \"is invalid\"] within the @messages hash.\n @jeffreyiacono thanks for updating this issue with your findings, will really help others with similar problems\nclosing.\n @justinfrench sure thing, thanks.\n  \\gems\\formtastic-2.0.2\\lib\\formtastic\\inputs\\base\\wrapping.rb\n\nwritten in line 11\n[template.capture(&block), error_html, hint_html].join(\"\\n\").html_safe\n\nmaybe better\n[template.capture(&block), hint_html, error_html].join(\"\\n\").html_safe\n\nand following code does not work\nFormtastic::SemanticFormBuilder.inline_order = [:input, :hints, :errors]\nFormtastic::SemanticFormBuilder.custom_inline_order[:checkbox] = [:errors, :hints, :input]\nFormtastic::SemanticFormBuilder.custom_inline_order[:select] = [:hints, :input, :errors]\n Hi, `inline_order` & `custom_inline_order` were dropped from 2.0 because implementing it was complicated and the code overall has been vastly simplified, allowing for easy monkey patching or overriding. The current ordering `[template.capture(&block), error_html, hint_html].join(\"\\n\").html_safe` is reflective of the default `inline_order` configuration that 1.2.x shipped with.\n\nI'll accept pull requests to improve or bring back the effect of these configurables, but I'm not really motivated to do so myself. Closing for now.\n How would I monkey-patch/override the default ordering in Formtastic 2.0?\n @justinfrench I'm looking to do this for a single input. I wanted to put a custom element inline next to one of my input fields, but I couldn't find a way to do this other than using the <code>:hint</code> option. That messes up my layout when errors are displayed, however. \n\nI was able to override the <code>Formtastic::Inputs::Base::Wrapping.input_wrapping</code> method to display hints first, but then that overrides it for all inputs. \n\nIf there's some way to just add some custom html inline next to an input, I'd be all for that. Thanks a bunch for replying!\n Awesome. Thanks @justinfrench, I'll give this a try!\n I'm looking to switch `:input` with `:hints` across the board, to get form fields similar in structure to this:\n\n```\n<li>\n  <label>Full Name</label>\n  <p class=\"inline-hints\">When you win, this is the name we use to make you famous.</p>\n  <input type=\"text\" />\n</li>\n```\n\nAt the moment it looks like I need to override most of the input types to make this happen. This ordering is cosmetic, but hints-above works better with some form styles, eg. http://events.smash.org.au/register/gundam\n\n(That example is not using formtastic, but I'm building something using the same appearance for a different mini-site.)\n No dice with sponsoring this, sorry; our IT budget consists of bailing wire, two sticks of bubblegum and a private GitHub account. :)\n\nThanks for the effort; I'll have a crack at the Stringish approach over the weekend and see how I go.\n  Originally: https://github.com/justinfrench/formtastic/pull/708\n  https://github.com/justinfrench/formtastic/issues/706\n This looks good to me. @sobrinho ?\n @dim have you got time to see this through?\n @dim, apologies, just saw the other one had been sent and pulled in. Thanks!\n  See #697.\n\nI did not use `hidden_fields?` as I it doesn't work exactly as I expect.\nFirst of all, \"?\" method should return boolean, but it just returns the value from `options` which often is `nil`.\n\nConverting it to `!!options[:hidden_fields]` will do the job but it won't be correct as in this case:\n- `:hidden_fields => false` will return `false`\n- `:hidden_fields => true` will return `true`\n- `:hidden_fields => nil` will return `false` (when it is `nil` it should probably be `true` - render hidden by default).\n See my [comment](https://github.com/justinfrench/formtastic/issues/697#issuecomment-2255929) in #697 - I'm against this patch in it's current form. It changes default behaviour and breaks clearing \"simple\" has_many associations\n\nIf there's the need for a third state of the hidden_fields option we should try to keep it backwards compatible and add some more intelligence to parsing the hidden_fields option value\n\nSo we could do something along the lines of:\n\n`:hidden_fields => true` will render collection and per checkbox hidden inputs\n`:hidden_fields => :enabled` will render collection and per checkbox hidden inputs\n\n`:hidden_fields => nil` will render collection hidden input but not the per checkbox hidden inputs\n`:hidden_fields => false` will render collection hidden input but not the per checkbox hidden inputs\n`:hidden_fields => :disabled` will render collection hidden input but not the per checkbox hidden inputs\n\n`:hidden_fields => :never` will not render either collection or checkbox hidden inputs\n I don't see it breaking anything. All the checkbox_input specs are still passing.\nBut using a symbol for hidden_fields would be a good idea as we could precisely define what we want to render.\n Does this make more sense? The only change is the new option `:never`. It should never render any hidden inputs.\nOtherwise it should work as previously with `false`, `true` and `nil`.\n  When `:as => :chck_boxes, :hidden_fields => false,` the hidden \"_none\" field is still rendered.\n\nPROBLEM: _fantom_, _fake_ entry in the resulting array.\n\nLet me better give an example:\n\n``` HAML\n= semantic_form_for @property_search do |f|\n  = f.inputs do\n    = f.input :bedrooms, :as => :check_boxes, :hidden_fields => false, :collection => {0 => \"Studio\", 1 => \"1 Bedder\", 2 => \"2 Beds\"}\n  f.buttons\n```\n\nThis renders (stripped to bare):\n\n``` HTML\n<input id=\"property_search_bedrooms_none\" name=\"property_search[bedrooms][]\" type=\"hidden\" value=\"\">\n<input id=\"property_search_bedrooms_0\" name=\"property_search[bedrooms][]\" type=\"checkbox\" value=\"0\">\n<input id=\"property_search_bedrooms_1\" name=\"property_search[bedrooms][]\" type=\"checkbox\" value=\"1\">\n<input id=\"property_search_bedrooms_2\" name=\"property_search[bedrooms][]\" type=\"checkbox\" value=\"2\">\n```\n\nThe data that gets into into `params[:property_search]` depending on what's checked:\n- Nothing checked: `{\"bedrooms\"=>[\"\"]}`\n- 1 item is checked: `{\"bedrooms\"=>[\"\", \"0\"]}`\n- 2 items are checked: `{\"bedrooms\"=>[\"\", \"0\", \"1\"]}` etc\n\nSo my suggestion is NOT to render any hidden fields when the option is specified to avoid a _fake_ empty element in the array.\n If such a fake field isn't rendere it isn't possible to deselect all checkboxes. \n\nHTML Browser don't send the input field value \"property_search[bedrooms][]\" unless at least 1 checkbox has been ticket. To enable an application to recognize that no checkbox is ticked this \"fake\" value is needed.\n No, the browser does send the fake field even if nothing is selected. That fake field has nothing to do at all with the rest of the checkboxes from HTML perspective (its type is hidden).\n\nBut I'm not sure what you mean saying \"deselect all checkboxes\" and what deselecting has to do with the hidden input.\n The hidden field ensures that the browser always sends \"something\" for the :as => :checkboxes parameter\n\nLike you have shown in your example, when no checkbox is selected you get an \"empty\" value. This enables the controller to react to the fact that the user hasn't ticked any checkbox. If you leave out the hidden field, don't tick any checkbox and submit the form the browser doesn't transmit anything for that attribute. So you wouldn't be able to update/clear for example a has many association.\n The controller can't react correctly when an _empty string is a valid value_ (Is it empty string or nothing selected then?).\n\nAlso when nothing is selected, the result should be an empty array or nil. But definitely not an array with one item in it.\n\nWhat you are saying is kind of inconsistent with the normal understanding of _what empty means_. _Array with one item is not empty_. It has _one_ item.\n\nAdditionally, that one single fake item needs special treatment all the time. It is not necessary as in most cases you already check for nil and/or empty arrays.\n\nI'm still not convinced that we need that fake item. ESPECIALLY, when explicitly asked not to render the hidden fields.\n Let's say it this way: There is no way to transmit an empty array in a HTML form, so you need to resort to such things as zero length strings. Rails performs some \"magic\" in the background when updating associations and treats the single zero length string as a hint to clear the association. \n\nSo it might not be needed in your use case, but it is in most other use cases. I wouldn't consider this a bug.\n Yeah, I understand that you can't transfer an empty array via HTTP for Rails.\nBut that is not the point. `:hidden_fields => false` should not use any hidden fields. That will cover that small percentage of use-cases you are talking about.\nOtherwise what's the point of `:hidden_fields` option.\n Exactly what it states in the documentations:\n\n`:hidden_fields` can be used to skip Rails' rendering of a hidden field before every checkbox\n\nIf you do not set this flag rails will, by default, render a hidden field for each checkbox in the collection so that you can detect the checked/unchecked state for every single checkbox, even if you have a dynamic collection where you do not know which or how many checkboxes will be displayed.\n `hidden_fields` does affect hidden inputs _only_ near every checkbox.\nBut it should also affect the single \"_none\" hidden field that doesn't belong to either of the checkboxes.\nThis way `nil` will be used when nothing is selected instead of an array with a single item.\n\nCurrently the \"_none\" hidden field is explicitly rendered when `:hidden_field => false`:\nhttps://github.com/justinfrench/formtastic/blob/master/lib/formtastic/inputs/check_boxes_input.rb#L112\n\nThere must be a reason for doing this. But there should be an option of removing that field as well.\n The patch is in #702\n I'm not really convinced - see the lengthy discussions in #246 and #322 for the original intention of the field.Plus the patch in #702 changes default behaviour and is bound to break existing applications working with associations.\n It should not break existing behaviour. All the specs are passing for the checkbox_input.\nAnd it will ONLY apply when you set :hidden_fields to false (you don't usually do it for associations, right?).\n This is whacking me in the face recently as well. I'm using a check_boxes input to pass back IDs, and the phantom empty string gets translated to 0 and raises an exception when the record can't be found. I love Formtastic, but this behavior doesn't happen when using the Rails checkbox input, so I'm torn.\n @cmaggard you can always customise that input in Formtastic to suit your tastes in the meantime. Basically, the community is divided on how this should be approached, and I don't have time to make sense of it all.\n  Made the documentation for custom inputs more idiot-proof (after being an idiot myself)\n Thanks!\n\nPulled more fast than last time :P\n Glad to help! Thanks for the great library. :)\n  I'd like to be able to add attributes to each `<option>` tag in a `:select` input.\n\nSince the `:input_html` option only seems to add attributes to the `<select>` tag, I have to manually build the option tags and pass them thru as the `:collection` option. A `:member_html` option that works similar to `:member_label` and `:member_value` would be convenient for cases like this.\n\n``` erb\n<%= f.input :parent,\n            :collection => Page.all,\n            :member_html => proc { |page| { 'data-uri' => page.uri } },\n            :member_label => :name %>\n```\n  I made support for state_machine fields and for example\n\n```\nclass User\n  GENDERS = %w{male female}\nend\n```\n\n field `gender` will be select input\n done\n Sorry it took so long to review, this is great! There's a small typo in the inputs helper comment patch (\"``\")' and it'd be great if you could add a few lines of documentation to SelectInput to complete the patch. \n It also appears we need a rebate or merge with master as this will not cleanly apply now. \n made other pull request https://github.com/justinfrench/formtastic/pull/756\n  Fixed placeholder tests for all input types (not just string). Added placeholders for textareas.\n Instead of this block:\n\n``` ruby\nbefore do\n  @text_or_textarea = type == :text ? 'textarea' : 'input'\nend\n```\n\nYou could use type directly on specs.\n\nChange this and I will accept the pull request :)\n You mean like this?\n Seems fine, thanks!\n  I18n placeholders dont work for textareas\n\nhtml5 placeholders work fine for text elements but they dont work in textareas.\n 8b72c05ac7cea20cc878e6546997a869840df475\n I made a pull request, I fixed also the placeholder spec. It did a loop to all kind of inputs (password, string, email etc..) but it didnt include that in the specs. \n  For me, manually marking a select field as multiple select doesn't work anymore, because the name of the field does not get [] appended. (formtastic 2.0)\n\nAnd I think I found the problem: As in formatstic 2.0 the option to mark the field as multiple_select is\n:input_html => {:multiple => true }, lines 196 to 198 of ib/formtastic/inputs/select_input.rb should look like\n\n``` ruby\ndef multiple_by_options?\n  options[:input_html] && options[:input_html][:multiple]\nend\n```\n\ninstead of\n\n``` ruby\ndef multiple_by_options?\n  options[:multiple] \nend\n```\n @justinfrench  :  From input_helper.rb \n\n```\n  # @example Specifying if a `:select` should allow multiple selections:\n  #   <%= f.input :cateogies, :as => :select, :multiple => true %>\n  #   <%= f.input :cateogies, :as => :select, :multiple => false %>\n```\n\nThis change breaks this (and along with it a bunch of my forms )  - maybe it should be \n    options[:multiple] || (options[:input_html] && options[:input_html][:multiple] )\n strange, in my app (ruby 1.9.2 / rails 3.1.0 / formastic 2.0-master just checked out ) \n`:multiple => true`\ndoes not do anything.\n @justinfrench - All my test cases pass -- thanks\n Sorry for answering late.\n\nThe bug happens when I use formtastic for a search form in combination with meta_search. So the multi-select field is neither for a db-collumn nor for an association, but for a parameter for meta_search.\n\nAnd in this situation, the bug persists even with a fresh bundle from master.\n I'm currently experiencing the same bug in my application. I am using rails 3.1 and formtastic gem 2.0.0.\n\nIn the view using: `:multiple => true` does nothing and using the input_html method it renders a multi select form but does only pass the last selected attribute back to the controller/modell as a string instead of an array holding all the selected values. :-(\n\nIn the modell the field is an integer field for mapping multiple string values from an array.\n`<%= f.input :sections, :as => :select, :include_blank => false, :collection => Tutor::SECTIONS, :multiple => true %>`\n @jan0sch can you try bundling direct from master and confirm if your case is resolved on master?\n If I use\n`gem 'formtastic', :git => 'git://github.com/justinfrench/formtastic.git', :branch => 'master'`\nthe problem disappears. :-) Time for a new release, maybe?\n\nBTW: I just love formtastic, awesome work.\n Okay, sounds like we've got it \"better\" for most people in that one bug has been solved, but one bug with @tuxwerk still exists which I'm struggling to reproduce. I'm going to get these patches into 2-0-stable and push out 2.0.1 so that people can use them, rather than sit on it.\n I've just pushed 2.0.1. @tuxwerx would be great if you can double check with that release... if there's still a bug, I'll have to dig deeper :)\n I've created a separate issue #704 for the meta search specific stuff, closing.\n 2.0.1 works for me with both \n`input_html => {:multiple => true}`\nand\n`:multiple => true`\n\nyou're great. thanks\n  Fix automatic dependency on ActiveRecord whether application uses it or another ORM/ODM.\n I guess we should depend only on actionpack because action view.\n\nAlso I guess we not having nothing specific to others gems.\n\n@justinfrench, could you confirm that?\n Thanks @alsemyonov, pulled!\n  Potentially silly question:\n\nI deal with lots of dates in my application which are in dd/mm/yy and as strings (using jquery's datepicker) - is there a prebuilt way in formtastic to format all of these fields for me?\n\nI know this is something I could do at model level but thought maybe there's something I can do in the forms and dry it all up a bit.\n\nCheers!\n At the moment I was just looking at an ugly:\n\n`<%= f.input :born_at, :as => :string, :label => \"Date of Birth\", :input_html => { :value => f.object.born_at.strftime(\"%d/%m/%Y\") }, :wrapper_html => { :class => \"date\" } %>`\n\nI'm all up for other options of course (and versions of formtastic).\nI'm currently on 1.2.4\n\nI thought about creating another input type to do what I'm after but I found the code a little over whelming, oops.\n Finally had a chance to implement this, worked perfectly, cheers!\n  The commit_button helper used to generate HTML for an input element with an ID like model_submit. Now, the generated input element has no ID. This makes my tests sad. \n\nI can look at patching this, but I wanted to make sure that it wasn't an intentional change before I dove in.\n That is a change on rails 3.\n\nI'm confortable to formtastic generate this id like on rails 2.\n\nCould you submit a pull request?\n @reidab, could you submit the patch? :)\n this patch will only work if there is one save button on the form.  for a very long form with multiple save buttons, the ids would need a way to be unique.\n @kclair you could overwrite the id attribute, no?\n  Outputs a select input for columns of type 'enum'. Collection for the dropdown options is taken as column.limit. This is used with plugins like enum_column.\n  errors_helper.rb line 46\n\nInline errors are concatenated with the to_sentence option of rails. If we have for example two errors\non the same field it could get a bit messy. Let's say a field has a \"Can't be blank.\" and a \"Must be a color.\"\nerror messages. \nIf the field is left empty and submitted we will see the following: \"Can't be blank. and Must be a color.\"\n\nIs it possible to include options to the to_sentence method? Using :word_connector, :two_words_connector and\n:last_word_connector hash it could be possible to customize the concatenation of the two error messages.\n Well, having both would be great. I was thinking of giving formtastic an app-wide attribute hash in the \nlocales.yml. With the option to override it per-input basis, also in the locales.\n  In MongoMapper, despite what the comment says, you cannot call `.associations(method)`. Associations is an accessor to a hash, so I've updated it to access hash properties.\n\nI think this got missed because of the extensive stubbing and mocking going on. I humbly suggest that y'all reconsider stubbing out that much of the API of something you're trying to integrate pretty closely with.\n\nAlso: all the tests pass just fine in ruby 1.9, so you can probably ditch the warning about things not working.\n  http://stackoverflow.com/questions/7382642/nested-form-not-working-with-has-many\n\nI've got a model Order\n\n```\nclass Order < ActiveRecord::Base\n  has_many :order_details, :class_name => \"OrderDetail\"\n  accepts_nested_attributes_for :order_details\nend\n```\n\nWhen in my view I try to build a nested form\n\n```\n<%= semantic_form_for @order do |f| %>\n  <%= f.inputs :name => \"Detail\", :for => :order_detail do |od| %>\n    <%= od.input :shoe_id, :collection => Shoe.all.map{|s|[s.article_number,s.id]}  %>\n    <%= od.input :size_id, :collection => Size.all.map{|s|[s.number,s.id]} %>\n    <%= od.input :color_id, :collection => Color.all.map{|c|[c.name,c.id]} %>\n    <%= od.input :quantity %>\n  <%- end -%>\n<%- end -%>\n```\n\nIt works. But using\n\n:for => :order_details\ndoes not. It renders nothing.\n I found the problem!\n\nThis is a form for creating the Order. so @order has no order_details.\nIf in controller I put:\n\n```\n@order.order_details.build\n```\n\nthen formtastic renders correctly the nested form\n  ```\n= semantic_form_for @user do |f|\n  = f.inputs do\n    = f.input :status, :as => :select, :collection => User.statuses, :input_html => {:name => @custom_name ? @custom_name : nil }\n```\n\nIn 1.2.4, when I passed nil as the name of the input, I got the default value (\"user[status]\"), but in 2.0.0rc5 I get \"user[status][]\", which breaks the form. User.status in this case is a boolean, but behavior is the same with a string.\n\nRuby 1.8.7, Rails 3.0.9. Let me know if there's anything I can do to help narrow it down, and thanks for the excellent gem.\n I made the spec, but I didn't send a push request because it passes (https://github.com/taavo/formtastic/commit/8ab6b3f26b8cedce774a4470bccb127f055d4e02). My live code, unfortunately, continues to fail.\n\nFor the record, I get the same behavior when the code is simplified to the following (and it behaves the same whether user.status is a string or a boolean):\n\n```\n= semantic_form_for @user do |f|\n  = f.input :status, :as => :select, :collection => [], :input_html => {:name => nil}\n```\n\nI just created a fresh-out-of-the-box 3.0.9 project for testing, and got the same behavior. 3.0.10 and 3.1.0? Works correctly...\n\nSeems like it could be easier to update to 3.0.10 than troubleshoot this.\n I just sent the pull request, in case you wanted to protect against that bug even though it doesn't occur on the latest rails.\n\nI'm using nil because I've got a form which sometimes needs to change the name of a field, and sometimes needs to use the default. I can calculate the default myself, but it seems safer to have Formtastic do the work for me. \n\n(It's a mailing address form: I have both a state select and a state text input. If the address is in a country I know the states for, then the state select has the default name, and the state text input has a name which will keep it out of trouble. Otherwise the opposite is true. My country select javascript just toggles the names and visibilities of those two fields depending on whether a selected item has states I know or not.)\n\nI've left the issue open so you can make the call on whether you want to deal with this or not. I'll be upgrading to 3.0.10.\n (Upon further reflection I'm trying to reinvent the \"disabled\" attribute. Thanks for your time. And I noticed that my pull request created its own issue, so we don't need this one any more. Closing now.)\n  Sorry for cross-posting but I did post something about this problem on stackoverflow but it probably would have been better to raise it here (http://stackoverflow.com/questions/7339360/1-for-0-arguments-errors-formtastic-mongomapper-and-rails-3-1)\n\nI realise that formtastic is activerecord centric so I was just wondering if what I'm seeing below is just an incompatibility issue or something else (me  doing something stupid)\n\nUsing rails 3.1, ruby 1.9.2, mongo_mapper 0.9.2 and formtastic 2.0.0.rc4 \nI have the following simple model \n\nclass Product\n   include MongoMapper::Document\n\n   key :name, String\nend\n\nand this is the corresponding form \n\n<%= semantic_form_for @product do |form| %>\n   <%= form.inputs :name %>\n   <%= form.buttons %>\n<% end %>\n\nThe form.inputs line is producing the wrong number of arguments (1 for 0)\n Is this okay?\n\nRendered products/_form.html.erb (134.5ms)\nRendered products/new.html.erb within layouts/application (165.5ms)\nCompleted 500 Internal Server Error in 203ms\n\nActionView::Template::Error (wrong number of arguments (1 for 0)):\n    1: <% semantic_form_for @product do |form| %>\n    2:   <%= form.inputs :name%>\n    3:   <%= form.buttons %>\n    4: <% end %>\n  app/views/products/_form.html.erb:2:in `block in _app_views_products__form_html_erb__3887175011396400432_2168709960'\n  app/views/products/_form.html.erb:1:in`_app_views_products__form_html_erb__3887175011396400432_2168709960'\n  app/views/products/new.html.erb:3:in `_app_views_products_new_html_erb___1803141953067348327_2168978440'\n  app/controllers/products_controller.rb:29:in`new'\n Thanks for looking at this \n\nrails 3.1, ruby 1.9.2, mongo_mapper 0.9.2 and formtastic 2.0.0.rc4, mongo 1.8.1 \n\nI put  some code that recreates the problem  up here \n\nhttps://github.com/ConorNugent/test_app\n sorry I was being extra stupid before\n\nhere is the full stacktrace \n\nmongo_mapper (0.9.2) lib/mongo_mapper/plugins/associations.rb:25:in `associations'\nformtastic (2.0.0.rc4) lib/formtastic/helpers/inputs_helper.rb:324:in`block in fieldset_contents_from_column_list'\nformtastic (2.0.0.rc4) lib/formtastic/helpers/inputs_helper.rb:317:in `collect'\nformtastic (2.0.0.rc4) lib/formtastic/helpers/inputs_helper.rb:317:in`fieldset_contents_from_column_list'\nformtastic (2.0.0.rc4) lib/formtastic/helpers/inputs_helper.rb:296:in `inputs'\napp/views/products/_form.html.erb:2:in`block in _app_views_products__form_html_erb__1207413163842076673_2155285080'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:187:in`with_output_buffer'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:40:in `capture'\nactionpack (3.1.0) lib/action_view/helpers/form_helper.rb:590:in`fields_for'\nactionpack (3.1.0) lib/action_view/helpers/form_helper.rb:373:in `form_for'\nformtastic (2.0.0.rc4) lib/formtastic/helpers/form_helper.rb:161:in`block in semantic_form_for'\nformtastic (2.0.0.rc4) lib/formtastic/helpers/form_helper.rb:192:in `with_custom_field_error_proc'\nformtastic (2.0.0.rc4) lib/formtastic/helpers/form_helper.rb:160:in`semantic_form_for'\napp/views/products/_form.html.erb:1:in `_app_views_products__form_html_erb__1207413163842076673_2155285080'\nactionpack (3.1.0) lib/action_view/template.rb:144:in`block in render'\nactivesupport (3.1.0) lib/active_support/notifications.rb:55:in `instrument'\nactionpack (3.1.0) lib/action_view/template.rb:142:in`render'\nactionpack (3.1.0) lib/action_view/renderer/partial_renderer.rb:256:in `render_partial'\nactionpack (3.1.0) lib/action_view/renderer/partial_renderer.rb:228:in`block (2 levels) in render'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:33:in `block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in`block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in`instrument'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:33:in `instrument'\nactionpack (3.1.0) lib/action_view/renderer/partial_renderer.rb:227:in`block in render'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:22:in `wrap_formats'\nactionpack (3.1.0) lib/action_view/renderer/partial_renderer.rb:219:in`render'\nactionpack (3.1.0) lib/action_view/renderer/renderer.rb:41:in `render_partial'\nactionpack (3.1.0) lib/action_view/helpers/rendering_helper.rb:27:in`render'\napp/views/products/new.html.erb:3:in `_app_views_products_new_html_erb__2226006290892127549_2156034620'\nactionpack (3.1.0) lib/action_view/template.rb:144:in`block in render'\nactivesupport (3.1.0) lib/active_support/notifications.rb:55:in `instrument'\nactionpack (3.1.0) lib/action_view/template.rb:142:in`render'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:40:in `block (2 levels) in render_template'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:33:in`block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in `block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications/instrumenter.rb:21:in`instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in `instrument'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:33:in`instrument'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:39:in `block in render_template'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:47:in`render_with_layout'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:38:in `render_template'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:12:in`block in render'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:22:in `wrap_formats'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:9:in`render'\nactionpack (3.1.0) lib/action_view/renderer/renderer.rb:36:in `render_template'\nactionpack (3.1.0) lib/action_view/renderer/renderer.rb:17:in`render'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:120:in `_render_template'\nactionpack (3.1.0) lib/action_controller/metal/streaming.rb:250:in`_render_template'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:114:in `render_to_body'\nactionpack (3.1.0) lib/action_controller/metal/renderers.rb:30:in`render_to_body'\nactionpack (3.1.0) lib/action_controller/metal/compatibility.rb:43:in `render_to_body'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:99:in`render'\nactionpack (3.1.0) lib/action_controller/metal/rendering.rb:16:in `render'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:40:in`block (2 levels) in render'\nactivesupport (3.1.0) lib/active_support/core_ext/benchmark.rb:5:in `block in ms'\n/Users/conor/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/benchmark.rb:310:in`realtime'\nactivesupport (3.1.0) lib/active_support/core_ext/benchmark.rb:5:in `ms'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:40:in`block in render'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:78:in `cleanup_view_runtime'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:39:in`render'\nactionpack (3.1.0) lib/action_controller/metal/implicit_render.rb:10:in `default_render'\nactionpack (3.1.0) lib/action_controller/metal/mime_responds.rb:268:in`block in retrieve_response_from_mimes'\nactionpack (3.1.0) lib/action_controller/metal/mime_responds.rb:195:in `call'\nactionpack (3.1.0) lib/action_controller/metal/mime_responds.rb:195:in`respond_to'\napp/controllers/products_controller.rb:29:in `new'\nactionpack (3.1.0) lib/action_controller/metal/implicit_render.rb:4:in`send_action'\nactionpack (3.1.0) lib/abstract_controller/base.rb:167:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/rendering.rb:10:in`process_action'\nactionpack (3.1.0) lib/abstract_controller/callbacks.rb:18:in `block in process_action'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:416:in`_run__4197874060031701149__process_action__909353690257669025__callbacks'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:386:in `_run_process_action_callbacks'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:81:in`run_callbacks'\nactionpack (3.1.0) lib/abstract_controller/callbacks.rb:17:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/rescue.rb:17:in`process_action'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:30:in `block in process_action'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in`block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in`instrument'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:29:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/params_wrapper.rb:201:in`process_action'\nactionpack (3.1.0) lib/abstract_controller/base.rb:121:in `process'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:45:in`process'\nactionpack (3.1.0) lib/action_controller/metal.rb:193:in `dispatch'\nactionpack (3.1.0) lib/action_controller/metal/rack_delegation.rb:14:in`dispatch'\nactionpack (3.1.0) lib/action_controller/metal.rb:236:in `block in action'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:65:in`call'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:65:in `dispatch'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:29:in`call'\nrack-mount (0.8.3) lib/rack/mount/route_set.rb:152:in `block in call'\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:96:in`block in recognize'\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:82:in `optimized_each'\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:95:in`recognize'\nrack-mount (0.8.3) lib/rack/mount/route_set.rb:141:in `call'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:531:in`call'\nmongo_mapper (0.9.2) lib/mongo_mapper/middleware/identity_map.rb:10:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/best_standards_support.rb:17:in`call'\nrack (1.3.2) lib/rack/etag.rb:23:in `call'\nrack (1.3.2) lib/rack/conditionalget.rb:25:in`call'\nactionpack (3.1.0) lib/action_dispatch/middleware/head.rb:14:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/params_parser.rb:21:in`call'\nactionpack (3.1.0) lib/action_dispatch/middleware/flash.rb:243:in `call'\nrack (1.3.2) lib/rack/session/abstract/id.rb:195:in`context'\nrack (1.3.2) lib/rack/session/abstract/id.rb:190:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/cookies.rb:326:in`call'\nactionpack (3.1.0) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:392:in`_run_call_callbacks'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:81:in `run_callbacks'\nactionpack (3.1.0) lib/action_dispatch/middleware/callbacks.rb:28:in`call'\nactionpack (3.1.0) lib/action_dispatch/middleware/reloader.rb:68:in `call'\nrack (1.3.2) lib/rack/sendfile.rb:101:in`call'\nactionpack (3.1.0) lib/action_dispatch/middleware/remote_ip.rb:48:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/show_exceptions.rb:47:in`call'\nrailties (3.1.0) lib/rails/rack/logger.rb:13:in `call'\nrack (1.3.2) lib/rack/methodoverride.rb:24:in`call'\nrack (1.3.2) lib/rack/runtime.rb:17:in `call'\nactivesupport (3.1.0) lib/active_support/cache/strategy/local_cache.rb:72:in`call'\nrack (1.3.2) lib/rack/lock.rb:15:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/static.rb:53:in`call'\nrailties (3.1.0) lib/rails/engine.rb:455:in `call'\nrailties (3.1.0) lib/rails/rack/content_length.rb:16:in`call'\nrailties (3.1.0) lib/rails/rack/log_tailer.rb:14:in `call'\nrack (1.3.2) lib/rack/handler/webrick.rb:59:in`service'\n/Users/conor/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/webrick/httpserver.rb:111:in `service'\n/Users/conor/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/webrick/httpserver.rb:70:in`run'\n/Users/conor/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/webrick/server.rb:183:in `block in start_thread'\n I'm having the same issue.\n\nThis happened after a gem update from Formtastic 1.2.4 to 2.0.0\n\nGem Versions:\n\n```\nformtastic (2.0.0)\nmongo_mapper (0.9.2)\nrails (3.1.0)\n```\n\nStack Trace:\n\n```\nmongo_mapper (0.9.2) lib/mongo_mapper/plugins/associations.rb:25:in `associations'\nformtastic (2.0.0) lib/formtastic/helpers/reflection.rb:11:in `reflection_for'\nformtastic (2.0.0) lib/formtastic/helpers/reflection.rb:21:in `association_primary_key_for_method'\nformtastic (2.0.0) lib/formtastic/inputs/base/associations.rb:25:in `association_primary_key'\nformtastic (2.0.0) lib/formtastic/inputs/base/naming.rb:36:in `input_name'\nformtastic (2.0.0) lib/formtastic/inputs/base/labelling.rb:9:in `label_html'\nformtastic (2.0.0) lib/formtastic/inputs/number_input.rb:76:in `block in to_html'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:187:in `with_output_buffer'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:40:in `capture'\nformtastic (2.0.0) lib/formtastic/inputs/base/wrapping.rb:11:in `input_wrapping'\nformtastic (2.0.0) lib/formtastic/inputs/number_input.rb:75:in `to_html'\nformtastic (2.0.0) lib/formtastic/helpers/input_helper.rb:267:in `input'\napp/views/games/_form.html.erb:4:in `block (2 levels) in _app_views_games__form_html_erb__3053778876654314195_2155452400'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:187:in `with_output_buffer'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:40:in `capture'\nformtastic (2.0.0) lib/formtastic/helpers/fieldset_wrapper.rb:36:in `field_set_and_list_wrapping'\nformtastic (2.0.0) lib/formtastic/helpers/inputs_helper.rb:292:in `inputs'\napp/views/games/_form.html.erb:2:in `block in _app_views_games__form_html_erb__3053778876654314195_2155452400'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:187:in `with_output_buffer'\nactionpack (3.1.0) lib/action_view/helpers/capture_helper.rb:40:in `capture'\nactionpack (3.1.0) lib/action_view/helpers/form_helper.rb:590:in `fields_for'\nactionpack (3.1.0) lib/action_view/helpers/form_helper.rb:373:in `form_for'\nformtastic (2.0.0) lib/formtastic/helpers/form_helper.rb:161:in `block in semantic_form_for'\nformtastic (2.0.0) lib/formtastic/helpers/form_helper.rb:192:in `with_custom_field_error_proc'\nformtastic (2.0.0) lib/formtastic/helpers/form_helper.rb:160:in `semantic_form_for'\napp/views/games/_form.html.erb:1:in `_app_views_games__form_html_erb__3053778876654314195_2155452400'\nactionpack (3.1.0) lib/action_view/template.rb:144:in `block in render'\nactivesupport (3.1.0) lib/active_support/notifications.rb:55:in `instrument'\nactionpack (3.1.0) lib/action_view/template.rb:142:in `render'\nactionpack (3.1.0) lib/action_view/renderer/partial_renderer.rb:256:in `render_partial'\nactionpack (3.1.0) lib/action_view/renderer/partial_renderer.rb:228:in `block (2 levels) in render'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:33:in `block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in `block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in `instrument'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:33:in `instrument'\nactionpack (3.1.0) lib/action_view/renderer/partial_renderer.rb:227:in `block in render'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:22:in `wrap_formats'\nactionpack (3.1.0) lib/action_view/renderer/partial_renderer.rb:219:in `render'\nactionpack (3.1.0) lib/action_view/renderer/renderer.rb:41:in `render_partial'\nactionpack (3.1.0) lib/action_view/helpers/rendering_helper.rb:27:in `render'\napp/views/application/new.html.erb:3:in `_app_views_application_new_html_erb__96147585199548038_2170866080'\nactionpack (3.1.0) lib/action_view/template.rb:144:in `block in render'\nactivesupport (3.1.0) lib/active_support/notifications.rb:55:in `instrument'\nactionpack (3.1.0) lib/action_view/template.rb:142:in `render'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:40:in `block (2 levels) in render_template'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:33:in `block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in `block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in `instrument'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:33:in `instrument'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:39:in `block in render_template'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:47:in `render_with_layout'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:38:in `render_template'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:12:in `block in render'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:22:in `wrap_formats'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:9:in `render'\nactionpack (3.1.0) lib/action_view/renderer/renderer.rb:36:in `render_template'\nactionpack (3.1.0) lib/action_view/renderer/renderer.rb:17:in `render'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:120:in `_render_template'\nactionpack (3.1.0) lib/action_controller/metal/streaming.rb:250:in `_render_template'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:114:in `render_to_body'\nactionpack (3.1.0) lib/action_controller/metal/renderers.rb:30:in `render_to_body'\nactionpack (3.1.0) lib/action_controller/metal/compatibility.rb:43:in `render_to_body'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:99:in `render'\nactionpack (3.1.0) lib/action_controller/metal/rendering.rb:16:in `render'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:40:in `block (2 levels) in render'\nactivesupport (3.1.0) lib/active_support/core_ext/benchmark.rb:5:in `block in ms'\n/Users/gate/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/benchmark.rb:309:in `realtime'\nactivesupport (3.1.0) lib/active_support/core_ext/benchmark.rb:5:in `ms'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:40:in `block in render'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:78:in `cleanup_view_runtime'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:39:in `render'\nactionpack (3.1.0) lib/action_controller/metal/implicit_render.rb:10:in `default_render'\nactionpack (3.1.0) lib/action_controller/metal/mime_responds.rb:268:in `block in retrieve_response_from_mimes'\nactionpack (3.1.0) lib/action_controller/metal/responder.rb:231:in `call'\nactionpack (3.1.0) lib/action_controller/metal/responder.rb:231:in `default_render'\nactionpack (3.1.0) lib/action_controller/metal/responder.rb:160:in `to_html'\nresponders (0.6.4) lib/responders/flash_responder.rb:93:in `to_html'\nactionpack (3.1.0) lib/action_controller/metal/responder.rb:153:in `respond'\nactionpack (3.1.0) lib/action_controller/metal/responder.rb:146:in `call'\nactionpack (3.1.0) lib/action_controller/metal/mime_responds.rb:238:in `respond_with'\ninherited_resources (1.3.0) lib/inherited_resources/actions.rb:19:in `new'\nactionpack (3.1.0) lib/action_controller/metal/implicit_render.rb:4:in `send_action'\nactionpack (3.1.0) lib/abstract_controller/base.rb:167:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/rendering.rb:10:in `process_action'\nactionpack (3.1.0) lib/abstract_controller/callbacks.rb:18:in `block in process_action'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:425:in `_run__2672912064050079862__process_action__3122877842774114630__callbacks'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:386:in `_run_process_action_callbacks'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:81:in `run_callbacks'\nactionpack (3.1.0) lib/abstract_controller/callbacks.rb:17:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/rescue.rb:17:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:30:in `block in process_action'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in `block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in `instrument'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:29:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/params_wrapper.rb:201:in `process_action'\nactionpack (3.1.0) lib/abstract_controller/base.rb:121:in `process'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:45:in `process'\nactionpack (3.1.0) lib/action_controller/metal.rb:193:in `dispatch'\nactionpack (3.1.0) lib/action_controller/metal/rack_delegation.rb:14:in `dispatch'\nactionpack (3.1.0) lib/action_controller/metal.rb:236:in `block in action'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:65:in `call'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:65:in `dispatch'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:29:in `call'\nrack-mount (0.8.3) lib/rack/mount/route_set.rb:152:in `block in call'\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:96:in `block in recognize'\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:96:in `optimized_each'\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:95:in `recognize'\nrack-mount (0.8.3) lib/rack/mount/route_set.rb:141:in `call'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:531:in `call'\nmongo_mapper (0.9.2) lib/mongo_mapper/middleware/identity_map.rb:10:in `call'\nwarden (1.0.5) lib/warden/manager.rb:35:in `block in call'\nwarden (1.0.5) lib/warden/manager.rb:34:in `catch'\nwarden (1.0.5) lib/warden/manager.rb:34:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/best_standards_support.rb:17:in `call'\nrack (1.3.3) lib/rack/etag.rb:23:in `call'\nrack (1.3.3) lib/rack/conditionalget.rb:25:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/head.rb:14:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/params_parser.rb:21:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/flash.rb:243:in `call'\nrack (1.3.3) lib/rack/session/abstract/id.rb:195:in `context'\nrack (1.3.3) lib/rack/session/abstract/id.rb:190:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/cookies.rb:326:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:392:in `_run_call_callbacks'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:81:in `run_callbacks'\nactionpack (3.1.0) lib/action_dispatch/middleware/callbacks.rb:28:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/reloader.rb:68:in `call'\nrack (1.3.3) lib/rack/sendfile.rb:101:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/remote_ip.rb:48:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/show_exceptions.rb:47:in `call'\nrailties (3.1.0) lib/rails/rack/logger.rb:13:in `call'\nrack (1.3.3) lib/rack/methodoverride.rb:24:in `call'\nrack (1.3.3) lib/rack/runtime.rb:17:in `call'\nactivesupport (3.1.0) lib/active_support/cache/strategy/local_cache.rb:72:in `call'\nrack (1.3.3) lib/rack/lock.rb:15:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/static.rb:53:in `call'\nrailties (3.1.0) lib/rails/engine.rb:455:in `call'\nrailties (3.1.0) lib/rails/rack/content_length.rb:16:in `call'\nrailties (3.1.0) lib/rails/rack/log_tailer.rb:14:in `call'\nrack (1.3.3) lib/rack/handler/webrick.rb:59:in `service'\n/Users/gate/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/httpserver.rb:111:in `service'\n/Users/gate/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/httpserver.rb:70:in `run'\n/Users/gate/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/server.rb:183:in `block in start_thread'\n```\n Also having this issue, stack trace:\n\nhttps://gist.github.com/1263741\n\nruby 1.9.2p290\nformtastic (2.0.0)\nmongo_mapper (0.9.2)\nrails (3.1.0)\n Random guesswork because I don't use MongoDB or MongoMapper:\n\nCan someone try changing line 11 of lib/formtastic/helpers/reflection.rb from `@object.class.associations[method]` to `@object.class.associations(method)`, restart your server and see if it helps or hinders?\n\nAlternatively, that's the line that's failing, help me figure out what MongoMapper is expecting! \n\n@inzycle @ConorNugent @inzycle @danielevans\n I am also having this issue, but with formtastic 2.0.1\n\nruby 1.9.2p290\nformtastic (2.0.0)\nmongo_mapper (0.9.2)\nrails (3.1.0)\n\nI went to look at line 11 of lib/formtastic/helpers/reflection.rb and it was `@object.class.associations(method)`. I changed it to `@object.class.associations[method]` because associations returns a hash\n\nIt seemed to fix the error\n just to confirm I am using formtastic 2.0.1, not 2.0.0 as I put in the list\n Same here, changed to <code>@object.class.associations[method]</code>, its fixed now.\n I also just tried using the edge version in my Gemfile\n\n```\ngem \"formtastic\",  :git => \"git://github.com/justinfrench/formtastic.git\"\n```\n\nand that works fine too\n @benaldred @inzycle I'm really confused. Line 11 in master https://github.com/justinfrench/formtastic/blob/master/lib/formtastic/helpers/reflection.rb#L11 has square brackets:\n\n``` ruby\n@object.class.associations[method]\n```\n\nMy suggestion was to change it to round brackets:\n\n``` ruby\n@object.class.associations(method)\n```\n\nYou guys seem to be suggesting that you did the reverse (and that it fixed the issue), which leaves me\u2026 epically confused.\n Ok, I've figured it out. This was resolved in 86cb1ed on master, but wasn't cherry-picked over to 2-0-stable, so it didn't go out in 2.0.1. I've done this now. If you bundle from 2-0-stable with the `:git` option (and restart your server), everything should be resolved. If a few of you could verify 2-0-stable resolves this issue fully, I'll ship 2.0.2.\n\nWould like to do that in the next few hours if possible.\n\n@inzycle @ConorNugent @inzycle @danielevans @benaldred\n I can verify that using\n\n```\ngem \"formtastic\", :git => \"git://github.com/justinfrench/formtastic.git\", :branch => \"2-0-stable\"\n```\n\nin my Gemfile resolves the issue\n Awesome, pushing 2.0.2...\n\nPushed!\n\nClosing.\n  Hi! I rewrote my previous code and now it is works perfectly!\n Note, your commit includes a bogus file: spec/inputs/.#check_boxes_input_spec.rb\n Oh my unconfigured emacs...\n  I'm running into an issue where all check_boxes are being checked no mather what the object actually is.\n\nThe bug seems to be due to https://github.com/justinfrench/formtastic/blob/master/lib/formtastic/inputs/check_boxes_input.rb#L156\nwhich only tries to set selected_items if collection is not given or is not an array.\n\nI have something like this for my users, which used to work before:\n\n```\n<%= f.input :roles, :as => :check_boxes, :collection => User::ROLES.collect {|r| [r.humanize, r]} %>\n```\n\nNow `@user.roles` could be `[\"admin\"]` and  `User::ROLES.collect {|r| [r.humanize, r]}` is\n`[[\"Admin\", \"admin\"], [\"User\", \"user\"]]` -- still both check_boxes are checked.\n\nI'm running the latests formtastic from master on Rails 3.1, Ruby 1.8.7.\n It's broken in 2.0.0.rc5 and working as expected in 2.0.0.rc4. Want me to git bisect to find the commit that broke it?\n OK, I'll look into it tomorrow :)\n commit 65a1916b212f677a9b659136b8c263c1c3e3bde8 introduced this issue.\n @TimothyKlim made more changes to that code. Maybe he can explain what https://github.com/justinfrench/formtastic/blob/master/lib/formtastic/inputs/check_boxes_input.rb#L156 is about?\n Check out my proposed fix. Unfortunately the specs for check_boxes are all failing (also before changing this), so I can hardly verify the fix with them.\n\nI have tested this in my app, where it is working fine now!\n Hi! Check this https://github.com/justinfrench/formtastic/pull/675\n Well, it's up to Justin now to decide on which pull request to take ;)\n IMO, it would be best to back this up with specs, but that requires getting all the checkboxes specs to pass first.\n Well, I have tested both pull requests (#675 and this one) and both fix the issue I reported. Let's defer merging for a bit until specs are fixed up for check_boxes. I saw references to that in #673.\n\nP.S.: you wanted to say \"@cthiel\" in your last comment :)\n My first fix wasn't correct, that's why other tests were failing. I now pulled in the fix from @TimothyKlim and also added a spec for this issue. Should be ready to merge now.\n So? How do we proceed with this?\n IMO it's ready.\n Many thanks!\n  This is a reasonably large pull request that adds the ability to use\u2026\n\n``` haml\n= f.input :name, data: {foo: 'bar'}\n```\n\n\u2026rather than\u2026\n\n``` haml\n= f.input :name input_html: {data: {foo: 'bar'}}\n```\n\n(Currently with the exception of with checkboxes, more on that below)\n\nThe reason it is large is because in the process of making this change I've also done the following.\n- Added RSpec profiling to make it easier to spot slow specs\n- Added Guard RSpec to support TDD\n- Moved Formtastic specs in to `spec/formtastic` to follow RSpec convention\n- Fixed `bundle console` by adding `require 'active_support'` to `lib/formtastic.rb`\n- Changed an I18n spec that I believe was testing something different to what was described\n- Removed some trailing whitespace in `lib/formtastic/inputs/base.rb`\n\nAll the changes are as atomic as I could make them. Naturally the small change I made to pass the `:data` straight through to Rails is somewhat dependent on the new location of the spec files.\n\nThere is one failing spec because of checkboxes and the non-standard approach to generating `input_html_options`. I plan to fix this but wanted to discuss the approach before proceeding as from the TODO I'm guessing you might already have thoughts on how you want to do this.\n\nI noticed the issue you created regarding speeding up tests and decided to not use `mock_everything` in the `data_attributes_spec`. The reason being `mock_everything` does a lot of work that isn't required in the new specs and creating less mocks and stubs should help speed things up.\n\nLet me know if you want this pull request broken up. I'm happy to rebase away commits and push new branches.\n\nRegards,\n\nJames\n Hi Justin,\n\nI'm happy to rebase this every so often to keep it up-to-date. Not sure why it doesn't apply cleanly at the moment though. Perhaps there was a commit made after I forked from master. I'm sure it won't be a problem to resolve though.\n\nThe failing test is due to the inconsistent behaviour used when generating [`input_html_options`](https://github.com/justinfrench/formtastic/blob/master/lib/formtastic/inputs/hidden_input.rb#L39) for a _hidden input_. Sorry about that, it's nothing to do with checkboxes. It should be easy enough to fix but it was midnight when I came across it and had to call it a night.\n\nPlugins and libraries like Guard::Rspec and Rake.vim expect spec files to mirror lib files in gems, which is why I moved the specs.\n\nA small change to the Guardfile would fix this but something like Rake.vim can not, as far as I'm aware, look anywhere but in a mirrored location. I'm not sure how other editors that have a jump to spec feature (TextMate, Sublime Text etc.) behave. Perhaps they have a more forgiving lookup path and instead of moving the specs I can ask @tpope to change Rake.vim to look in more than one place.\n\nI can remove the spec move commit if you'd prefer. It will cause issues for anyone with a long running feature branch when they come to rebase or merge.\n @jcf it already looks 4 places: `test/`, `spec/`, `test/unit/`, and `spec/unit/`. I looked at a couple of dozen gems gems when I first wrote rake.vim and those were the recurring structures.  The rest were all over the map.  Point me at 3 unrelated gems that use the same pattern and I'll add support for it.\n\nAnd I agree with @justinfrench that a massive rearrange doesn't belong in the middle of an unrelated pull request. :)\n But I would add that a rename on `master` shouldn't be the end of the world. Git supports merge through rename.\n I've removed the spec move from this pull request for now.\n\n@tpope Thanks for responding. I think there are two common patterns used in Ruby gems with RSpec. For a Ruby file in `lib/a/b/implementation.rb` there are two typical locations of a spec.\n1. `spec/a/b/implementation_spec.rb`\n2. `spec/b/implementation_spec.rb`\n\nThe latter is used in WebMock, Formtastic, Sunspot, and I'm sure a fair few other gems. It's not the convention but it is out there. I don't think I've ever seen `spec/unit used.\n I'm keen to pull most of this in, but it needs a rebase, and I'd really prefer some smaller pull requests or commits. At the very least, can I convince you to rebase? :)\n I've rebased and fixed a couple of failing tests.\n\nIf you want me to break this pull request up I'm happy to do so. Maybe you could list the commits you want and the ones you don't and I'll get rid of the ones you don't.\n- I've fixed the `FormtasticInputs` helper I added. Essentially I've made it stricter in order to prevent testing objects that aren't inputs.\n- I've removed a couple of autoloads in `Formtastic::Inputs` as it appears the constants have gone. They were `Basic` and `NumericInput`. If this is wrong please let me know and I'll rip the commit out of this pull request.\n\nRegards.\n @jcf Thanks! \n\nI've made a comment on 9ad8699f3cabb22a62135730bb8eaa8f687a84db, so there's that. There's a few comments of your own that you might want to review before this stuff is in master (?).\n\nUltimately, all this stuff is probably a separate request, but perhaps the simplest thing is to just make sure you're happy with your work, and then pull it all in.\n Hi @justinfrench,\n\nSorry it's taken me such a long time to sort out this PR. I've rebased master and resolved the outstanding issues (brought back the `#warn_and_correct_option!` method as you asked, and replaced a `def` with `let` in the test suite).\n\nPlease let me know if there's anything else you'd like changed and I'll hopefully be able to do it this evening.\n\nAll the best,\n\nJames\n @jcf it won't apply cleanly right now, but yeah, keen to get this into master now that we have a stable branch for 2.1\n Hmm, it seems to me, you didn't properly rebase your feature branch, because the pull request is referencing a lot of foreign commits.\n\nAlso I would advise you to split all of the bullet points you listed at the top into separate pull requests, unless there is a hard dependency between them, that you can't break by rebasing.\n\nThat way it will be much easier to discuss and merge the separate changes.\n I used `git rebase master`, resolved conflicts as they arose, and `git rebase --continue`d all the way to my final commit.\n\nI don't have time to work on this PR at the moment, so will close it. If anyone wants to cherry-pick the commits, I'll keep my fork around.\n I've cleanly rebased in https://github.com/fbuenemann/formtastic/tree/temp/jcf-data-attributes-pick-base and also squashed some fixups to make the diffs more readable. But I still feel this needs some splitting of existing commits and cherry piccking onto several branches to separate the changes.\n\nAlso I feel that some of the changes are questionable, eg. the addition of guard support and dependence on osx only gems. Because guard is a standalone binary it doesn't really need to be in the Gemfile.\n @justinfrench I'm rather busy atm. I think the data attributes sugar is nice, so I'll take a look at it someday.\n  It's the same syntax as the haml template, for those of us using [Slim](http://slim-lang.com/)\n Yes, I used this in a rails 3.1 app last night, and it works as intended when scaffolding.\n  Hi all,\n\nRails 3.1 has a bit of syntactic sugar to make data attributes nicer to work with (http://guides.rubyonrails.org/3_1_release_notes.html#action-view), but to use it with formtastic you have to stick the data hash in the `input_html` hash. Not so sugar-y.\n\nSo in Rails 3.1 you can use\u2026\n\n``` haml\n= f.text_field :name, data: {some_attribute: \"Lovely Rails 3.1\"}\n```\n\nBut with Formtastic you have to use\u2026\n\n``` haml\n= f.input :name, input_html: {data: {some_attribute: \"Lovely Rails 3.1\"}}\n```\n\nI'm guessing this change will be a case of whitelisting the data option for pass through to the Rails form helpers.\n\nThoughts? Shall I put a quick patch together?\n I'm thinking about deleting formtastic options from \"options\" of input and sending it as html.\n\nSomething like:\n\n``` ruby\nf.input :name, as: 'text', id: 'foo'\n```\n\nAll we need is to know every option which formtastic uses and delete from options hash using `Hash#extract` method.\n\nWe need to do something like this:\n\n``` ruby\ndef input_html_options\n  options\nend\n\ndef input_options\n  options.slice!(:as, :collection)\nend\n```\n @justinfrench surely!\n See #673 for the pull request.\n  Just upgraded my app to 2.0.0.rc4 and have noticed that Formtastic now adds a .button class to the wrapper LI on commit buttons. I already have a general .button class that is trying to style the LI and is resulting in unwanted behaviour. Although I could fix this by changing my app's styles, it seems wrong just to make the latest Formtastic work.\n\nI think I understand why you've done this, but I would like to suggest that we make it easy to override these classes so that Formtastic is a bit more flexible for other use cases.\n\nThe two ways I can think of are: \n\n**Be able to completely override the default wrapper_html classes by passing in your own wrapper_html classes**\n\n```\n:wrapper_html => { :class => \"my_sweet_class\" }\n```\n\nwould override\n\n```\nwrapper_html_class = ['commit', 'button']\n```\n\n_or_\n\n**Break out wrapper_html_class variable into a separate method that can be easily overwritten**\n\n```\nwrapper_html_class = ['commit', 'button']\n```\n\nto\n\n```\ndef wrapper_html_class\n  ['commit', 'button']\nend\n```\n\nThoughts?\n\nMatt\n\nP.S.\n\nI'll be happy to make this change, I just wanted to see what you think the best option is.\n Cool, that was what I was thinking as well. Should be done today\n Oops didn't mean to close this yet\n  When generating multiple elements meant to be able to the same field, each element has the same id.\n Example please \n Here's the partial for the form I'm rendering:\nhttps://gist.github.com/1182536\n\nand here's the output from that:\nhttps://gist.github.com/1184099\n\nI'm going to try the fix suggested by sobrinho ( or a variation ) - might take me a little while though\n Just letting you know that using :input_html in my .each to fix the formatting for the ID works great. Thanks guys!\n  Hi! fix for https://github.com/justinfrench/formtastic/issues/660\n\nAll tests passed.\n ok, I'm sure I'll write them in the morning(for my timezone).\n  On a plain vanilla formtastic installation without any modifications to stylesheets etc., input type choice ':check_boxes'  causes the  check boxes to collapse onto each other and they are almost completely invisible on the form. Eg. on the form below the check boxes are not visible but the following text field type input is.\n\n<%= semantic_form_for(@user) do |f| %>\n    <%= f.inputs do %>\n        <%= f.input :name, :as => :check_boxes %>\n        <%= f.input :name %>\n    <% end %>\n    <%= f.buttons %>\n<% end %>\n\nThe change to formtastic 1.2.3 gem resolves the issue.\n I did fresh new vanilla rails test app with formtastic gem 2.0.0.rc1 and ran the formtastic:install generator\n Yes, my bad, didn't check what was the latest rc available. rc4 seems to still have small styling glitch as it seems to me that the check box field set is offset  about -6px to the left. On my simple test app, the check box label is missing part of the first letter and having overriding css for 6px for the '.formtastic .choices' selector made it ok.\n @eetteri can you send me screen shots to justin at indent dot com dot au and open a fresh issue for whatever you're still seeing wrong in the latest rc? thanks.\n  Seems to be the root of a bit of confusion and support right now, maybe consider defaulting to off in the config for 2.0 for a slower ramp-up. Still thinking about it.\n I agree. Removes a dependency on a working html5 implementation for formtastic. \n  Hi! I used lastest formtastic and got error: undefined method `last' for #Soundtrack:0x00000101c5e4f8\n\n``` ruby\nlabel Soundtracks:\n= semantic_form_for @product, url: line_items_path, method: 'post' do |f|\n  = f.input :soundtracks, :as => :check_boxes, :collection => @product.soundtracks.map { |item| [item.title, item.guid] }, label: false\n\n  = f.submit 'Buy'\n```\n\nbut in 1.\\* version is works fine.\n\nGemfile:\n\n``` ruby\ngem 'rails', '~> 3.1.0.rc'\ngem 'formtastic', git: 'git://github.com/justinfrench/formtastic.git'\n```\n\nRuby:  ruby 1.9.3dev (2011-07-31 revision 32789) [x86_64-darwin10.8.0]\n\nThanks for project!\n ``` ruby\n# db/schema.rb\n# ...\ncreate_table \"soundtracks\", :force => true do |t|\n  t.string   \"title\"\n  t.string   \"guid\"\n  # ...\nend\n```\n or if I use this:\n\n``` ruby\n  = f.input :soundtracks, :as => :check_boxes\n```\n\nthen I have no error, but I got all of soundtracks(Sountrack.all) instead @product.soundtracks.\n Hi! yep\n\n```\nactivemodel (3.1.0.rc6) lib/active_model/attribute_methods.rb:385:in `method_missing'\nactiverecord (3.1.0.rc6) lib/active_record/attribute_methods.rb:60:in `method_missing'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/base/collections.rb:87:in `send_or_call'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/base/collections.rb:95:in `send_or_call_or_object'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:157:in `block in selected_values'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:157:in `map'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:157:in `selected_values'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:147:in `checked?'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:141:in `check_box_without_hidden_input'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:105:in `choice_html'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:93:in `block (5 levels) in to_html'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:187:in `with_output_buffer'\nhaml (3.1.2) lib/haml/helpers/xss_mods.rb:109:in `with_output_buffer_with_haml_xss'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:40:in `capture'\nhaml (3.1.2) lib/haml/helpers/action_view_mods.rb:104:in `capture_with_haml'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/base/choices.rb:30:in `choice_wrapping'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:92:in `block (4 levels) in to_html'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:91:in `map'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:91:in `block (3 levels) in to_html'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:187:in `with_output_buffer'\nhaml (3.1.2) lib/haml/helpers/xss_mods.rb:109:in `with_output_buffer_with_haml_xss'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:40:in `capture'\nhaml (3.1.2) lib/haml/helpers/action_view_mods.rb:104:in `capture_with_haml'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/base/choices.rb:19:in `choices_group_wrapping'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:90:in `block (2 levels) in to_html'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:187:in `with_output_buffer'\nhaml (3.1.2) lib/haml/helpers/xss_mods.rb:109:in `with_output_buffer_with_haml_xss'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:40:in `capture'\nhaml (3.1.2) lib/haml/helpers/action_view_mods.rb:104:in `capture_with_haml'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/base/choices.rb:8:in `choices_wrapping'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:87:in `block in to_html'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:187:in `with_output_buffer'\nhaml (3.1.2) lib/haml/helpers/xss_mods.rb:109:in `with_output_buffer_with_haml_xss'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:40:in `capture'\nhaml (3.1.2) lib/haml/helpers/action_view_mods.rb:104:in `capture_with_haml'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/base/wrapping.rb:11:in `input_wrapping'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/inputs/check_boxes_input.rb:86:in `to_html'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/helpers/input_helper.rb:265:in `input'\napp/views/albums/_album.html.slim:19:in `block in _app_views_albums__album_html_slim___4102609391774070795_2162760800'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:40:in `block in capture'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:187:in `with_output_buffer'\nhaml (3.1.2) lib/haml/helpers/xss_mods.rb:109:in `with_output_buffer_with_haml_xss'\nactionpack (3.1.0.rc6) lib/action_view/helpers/capture_helper.rb:40:in `capture'\nhaml (3.1.2) lib/haml/helpers/action_view_mods.rb:104:in `capture_with_haml'\nactionpack (3.1.0.rc6) lib/action_view/helpers/form_helper.rb:590:in `fields_for'\nactionpack (3.1.0.rc6) lib/action_view/helpers/form_helper.rb:373:in `form_for'\nhaml (3.1.2) lib/haml/helpers/action_view_mods.rb:181:in `form_for_with_haml'\nhaml (3.1.2) lib/haml/helpers/xss_mods.rb:132:in `form_for_with_haml_xss'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/helpers/form_helper.rb:161:in `block in semantic_form_for'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/helpers/form_helper.rb:192:in `with_custom_field_error_proc'\n/Users/timothyklim/.rvm/gems/ruby-1.9.3-preview1/bundler/gems/formtastic-a95479e0078d/lib/formtastic/helpers/form_helper.rb:160:in `semantic_form_for'\napp/views/albums/_album.html.slim:15:in `_app_views_albums__album_html_slim___4102609391774070795_2162760800'\nactionpack (3.1.0.rc6) lib/action_view/template.rb:144:in `block in render'\nactivesupport (3.1.0.rc6) lib/active_support/notifications.rb:55:in `instrument'\nactionpack (3.1.0.rc6) lib/action_view/template.rb:142:in `render'\nactionpack (3.1.0.rc6) lib/action_view/renderer/partial_renderer.rb:256:in `render_partial'\nactionpack (3.1.0.rc6) lib/action_view/renderer/partial_renderer.rb:228:in `block (2 levels) in render'\nactionpack (3.1.0.rc6) lib/action_view/renderer/abstract_renderer.rb:33:in `block in instrument'\nactivesupport (3.1.0.rc6) lib/active_support/notifications.rb:53:in `block in instrument'\nactivesupport (3.1.0.rc6) lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nactivesupport (3.1.0.rc6) lib/active_support/notifications.rb:53:in `instrument'\nactionpack (3.1.0.rc6) lib/action_view/renderer/abstract_renderer.rb:33:in `instrument'\nactionpack (3.1.0.rc6) lib/action_view/renderer/partial_renderer.rb:227:in `block in render'\nactionpack (3.1.0.rc6) lib/action_view/renderer/abstract_renderer.rb:22:in `wrap_formats'\nactionpack (3.1.0.rc6) lib/action_view/renderer/partial_renderer.rb:219:in `render'\nactionpack (3.1.0.rc6) lib/action_view/renderer/renderer.rb:41:in `render_partial'\nactionpack (3.1.0.rc6) lib/action_view/helpers/rendering_helper.rb:27:in `render'\nhaml (3.1.2) lib/haml/helpers/action_view_mods.rb:13:in `render_with_haml'\napp/views/products/show.html.slim:1:in `_app_views_products_show_html_slim__2843369224793766788_2175615380'\nactionpack (3.1.0.rc6) lib/action_view/template.rb:144:in `block in render'\nactivesupport (3.1.0.rc6) lib/active_support/notifications.rb:55:in `instrument'\nactionpack (3.1.0.rc6) lib/action_view/template.rb:142:in `render'\nactionpack (3.1.0.rc6) lib/action_view/renderer/template_renderer.rb:40:in `block (2 levels) in render_template'\nactionpack (3.1.0.rc6) lib/action_view/renderer/abstract_renderer.rb:33:in `block in instrument'\nactivesupport (3.1.0.rc6) lib/active_support/notifications.rb:53:in `block in instrument'\nactivesupport (3.1.0.rc6) lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nactivesupport (3.1.0.rc6) lib/active_support/notifications.rb:53:in `instrument'\nactionpack (3.1.0.rc6) lib/action_view/renderer/abstract_renderer.rb:33:in `instrument'\nactionpack (3.1.0.rc6) lib/action_view/renderer/template_renderer.rb:39:in `block in render_template'\nactionpack (3.1.0.rc6) lib/action_view/renderer/template_renderer.rb:47:in `render_with_layout'\nactionpack (3.1.0.rc6) lib/action_view/renderer/template_renderer.rb:38:in `render_template'\nactionpack (3.1.0.rc6) lib/action_view/renderer/template_renderer.rb:12:in `block in render'\nactionpack (3.1.0.rc6) lib/action_view/renderer/abstract_renderer.rb:22:in `wrap_formats'\nactionpack (3.1.0.rc6) lib/action_view/renderer/template_renderer.rb:9:in `render'\nactionpack (3.1.0.rc6) lib/action_view/renderer/renderer.rb:36:in `render_template'\nactionpack (3.1.0.rc6) lib/action_view/renderer/renderer.rb:17:in `render'\nactionpack (3.1.0.rc6) lib/abstract_controller/rendering.rb:120:in `_render_template'\nactionpack (3.1.0.rc6) lib/action_controller/metal/streaming.rb:250:in `_render_template'\nactionpack (3.1.0.rc6) lib/abstract_controller/rendering.rb:114:in `render_to_body'\nactionpack (3.1.0.rc6) lib/action_controller/metal/renderers.rb:30:in `render_to_body'\nactionpack (3.1.0.rc6) lib/action_controller/metal/compatibility.rb:43:in `render_to_body'\nactionpack (3.1.0.rc6) lib/abstract_controller/rendering.rb:99:in `render'\nactionpack (3.1.0.rc6) lib/action_controller/metal/rendering.rb:16:in `render'\nactionpack (3.1.0.rc6) lib/action_controller/metal/instrumentation.rb:40:in `block (2 levels) in render'\nactivesupport (3.1.0.rc6) lib/active_support/core_ext/benchmark.rb:5:in `block in ms'\n/Users/timothyklim/.rvm/rubies/ruby-1.9.3-preview1/lib/ruby/1.9.1/benchmark.rb:295:in `realtime'\nactivesupport (3.1.0.rc6) lib/active_support/core_ext/benchmark.rb:5:in `ms'\nactionpack (3.1.0.rc6) lib/action_controller/metal/instrumentation.rb:40:in `block in render'\nactionpack (3.1.0.rc6) lib/action_controller/metal/instrumentation.rb:78:in `cleanup_view_runtime'\nactiverecord (3.1.0.rc6) lib/active_record/railties/controller_runtime.rb:24:in `cleanup_view_runtime'\nactionpack (3.1.0.rc6) lib/action_controller/metal/instrumentation.rb:39:in `render'\nactionpack (3.1.0.rc6) lib/action_controller/metal/implicit_render.rb:10:in `default_render'\nactionpack (3.1.0.rc6) lib/action_controller/metal/implicit_render.rb:5:in `send_action'\nactionpack (3.1.0.rc6) lib/abstract_controller/base.rb:167:in `process_action'\nactionpack (3.1.0.rc6) lib/action_controller/metal/rendering.rb:10:in `process_action'\nactionpack (3.1.0.rc6) lib/abstract_controller/callbacks.rb:18:in `block in process_action'\nactivesupport (3.1.0.rc6) lib/active_support/callbacks.rb:416:in `_run__2588875315221258788__process_action__3183525345477550736__callbacks'\nactivesupport (3.1.0.rc6) lib/active_support/callbacks.rb:386:in `_run_process_action_callbacks'\nactivesupport (3.1.0.rc6) lib/active_support/callbacks.rb:81:in `run_callbacks'\nactionpack (3.1.0.rc6) lib/abstract_controller/callbacks.rb:17:in `process_action'\nactionpack (3.1.0.rc6) lib/action_controller/metal/rescue.rb:17:in `process_action'\nactionpack (3.1.0.rc6) lib/action_controller/metal/instrumentation.rb:30:in `block in process_action'\nactivesupport (3.1.0.rc6) lib/active_support/notifications.rb:53:in `block in instrument'\nactivesupport (3.1.0.rc6) lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nactivesupport (3.1.0.rc6) lib/active_support/notifications.rb:53:in `instrument'\nactionpack (3.1.0.rc6) lib/action_controller/metal/instrumentation.rb:29:in `process_action'\nactionpack (3.1.0.rc6) lib/action_controller/metal/params_wrapper.rb:202:in `process_action'\nactiverecord (3.1.0.rc6) lib/active_record/railties/controller_runtime.rb:18:in `process_action'\nactionpack (3.1.0.rc6) lib/abstract_controller/base.rb:121:in `process'\nactionpack (3.1.0.rc6) lib/abstract_controller/rendering.rb:45:in `process'\nactionpack (3.1.0.rc6) lib/action_controller/metal.rb:193:in `dispatch'\nactionpack (3.1.0.rc6) lib/action_controller/metal/rack_delegation.rb:14:in `dispatch'\nactionpack (3.1.0.rc6) lib/action_controller/metal.rb:236:in `block in action'\nactionpack (3.1.0.rc6) lib/action_dispatch/routing/route_set.rb:65:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/routing/route_set.rb:65:in `dispatch'\nactionpack (3.1.0.rc6) lib/action_dispatch/routing/route_set.rb:29:in `call'\nrack-mount (0.8.2) lib/rack/mount/route_set.rb:152:in `block in call'\nrack-mount (0.8.2) lib/rack/mount/code_generation.rb:96:in `block in recognize'\nrack-mount (0.8.2) lib/rack/mount/code_generation.rb:110:in `optimized_each'\nrack-mount (0.8.2) lib/rack/mount/code_generation.rb:95:in `recognize'\nrack-mount (0.8.2) lib/rack/mount/route_set.rb:141:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/routing/route_set.rb:531:in `call'\nsass (3.1.7) lib/sass/plugin/rack.rb:54:in `call'\nlib/suggests_proxy.rb:21:in `call'\nwarden (1.0.5) lib/warden/manager.rb:35:in `block in call'\nwarden (1.0.5) lib/warden/manager.rb:34:in `catch'\nwarden (1.0.5) lib/warden/manager.rb:34:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/best_standards_support.rb:17:in `call'\nrack (1.3.2) lib/rack/etag.rb:23:in `call'\nrack (1.3.2) lib/rack/conditionalget.rb:25:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/head.rb:14:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/params_parser.rb:21:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/flash.rb:243:in `call'\nrack (1.3.2) lib/rack/session/abstract/id.rb:195:in `context'\nrack (1.3.2) lib/rack/session/abstract/id.rb:190:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/cookies.rb:326:in `call'\nactiverecord (3.1.0.rc6) lib/active_record/query_cache.rb:62:in `call'\nactiverecord (3.1.0.rc6) lib/active_record/connection_adapters/abstract/connection_pool.rb:477:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'\nactivesupport (3.1.0.rc6) lib/active_support/callbacks.rb:401:in `_run_call_callbacks'\nactivesupport (3.1.0.rc6) lib/active_support/callbacks.rb:81:in `run_callbacks'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/callbacks.rb:28:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/reloader.rb:68:in `call'\nrack (1.3.2) lib/rack/sendfile.rb:101:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/remote_ip.rb:48:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/show_exceptions.rb:47:in `call'\nrailties (3.1.0.rc6) lib/rails/rack/logger.rb:13:in `call'\nrack (1.3.2) lib/rack/methodoverride.rb:24:in `call'\nrack (1.3.2) lib/rack/runtime.rb:17:in `call'\nactivesupport (3.1.0.rc6) lib/active_support/cache/strategy/local_cache.rb:72:in `call'\nrack (1.3.2) lib/rack/lock.rb:15:in `call'\nactionpack (3.1.0.rc6) lib/action_dispatch/middleware/static.rb:53:in `call'\nrailties (3.1.0.rc6) lib/rails/engine.rb:455:in `call'\nrailties (3.1.0.rc6) lib/rails/railtie/configurable.rb:30:in `method_missing'\n/Users/timothyklim/Library/Application Support/Pow/Versions/0.3.2/node_modules/nack/lib/nack/server.rb:146:in `handle'\n/Users/timothyklim/Library/Application Support/Pow/Versions/0.3.2/node_modules/nack/lib/nack/server.rb:99:in `rescue in block (2 levels) in start'\n/Users/timothyklim/Library/Application Support/Pow/Versions/0.3.2/node_modules/nack/lib/nack/server.rb:96:in `block (2 levels) in start'\n/Users/timothyklim/Library/Application Support/Pow/Versions/0.3.2/node_modules/nack/lib/nack/server.rb:86:in `each'\n/Users/timothyklim/Library/Application Support/Pow/Versions/0.3.2/node_modules/nack/lib/nack/server.rb:86:in `block in start'\n/Users/timothyklim/Library/Application Support/Pow/Versions/0.3.2/node_modules/nack/lib/nack/server.rb:66:in `loop'\n/Users/timothyklim/Library/Application Support/Pow/Versions/0.3.2/node_modules/nack/lib/nack/server.rb:66:in `start'\n/Users/timothyklim/Library/Application Support/Pow/Versions/0.3.2/node_modules/nack/lib/nack/server.rb:13:in `run'\n/Users/timothyklim/Library/Application Support/Pow/Versions/0.3.2/node_modules/nack/bin/nack_worker:4:in `<main>'\n```\n Can you please re-bundle from master to ensure you have the very latest Formtastic code? This should help ensure you ahv the latest ref:\n\n```\ngem 'formtastic', git: 'git://github.com/justinfrench/formtastic.git', :ref => 'c64f967'\n```\n\nThere was some work done around send_or_call in between rc3 and rc4 of Formtastic, so knowing that you have the latest code will help narrow down if this is \"fixed\" or a new regression.\n\nAlso wouldn't hurt to grab the latest Rails rc6, but I don't believe it's the cause.\n Yep, I'm use the latest code from master branch and the error still exists.\n\n```\n$ bundle show|pbcopy\n\nGems included by the bundle:\n  * actionmailer (3.1.0.rc6)\n  * actionpack (3.1.0.rc6)\n  * activemodel (3.1.0.rc6)\n  * activerecord (3.1.0.rc6)\n  * activeresource (3.1.0.rc6)\n  * activesupport (3.1.0.rc6)\n  * addressable (2.2.6)\n  * ansi (1.3.0)\n  * arel (2.2.1)\n  * bcrypt-ruby (2.1.4)\n  * builder (3.0.0)\n  * bundler (1.1.pre.5)\n  * capybara (1.0.1)\n  * capybara-firebug (0.0.9 5fda4e2)\n  * carrierwave (0.5.7)\n  * childprocess (0.2.1)\n  * chunky_png (1.2.1)\n  * ckeditor (3.6.0)\n  * coffee-rails (3.1.0.rc.6)\n  * coffee-script (2.2.0)\n  * coffee-script-source (1.1.2)\n  * compass (0.11.5)\n  * configuration (1.3.1)\n  * cucumber (1.0.2)\n  * cucumber-rails (1.0.2)\n  * database_cleaner (0.6.7)\n  * devise (1.4.2)\n  * diff-lcs (1.1.2)\n  * em-dir-watcher (0.9.4)\n  * em-websocket (0.3.1)\n  * erubis (2.7.0)\n  * eventmachine (0.12.10)\n  * execjs (1.2.4)\n  * fabrication (1.0.1)\n  * ffaker (1.8.0)\n  * ffi (1.0.9)\n  * formtastic (2.0.0.rc4 c64f967)\n  * fssm (0.2.7)\n  * gherkin (2.4.11)\n  * growl (1.0.3)\n  * guard (0.6.2)\n  * guard-bundler (0.1.3)\n  * guard-cucumber (0.6.1)\n  * guard-livereload (0.3.0)\n  * guard-pow (0.1.0)\n  * guard-rspec (0.4.2)\n  * guid (0.1.1)\n  * haml (3.1.2)\n  * hike (1.2.1)\n  * i18n (0.6.0)\n  * jquery-rails (1.0.13)\n  * json (1.5.3)\n  * json_pure (1.5.3)\n  * kaminari (0.12.4)\n  * kgio (2.6.0)\n  * launchy (0.4.0)\n  * libv8 (3.3.10.2)\n  * livereload (1.6)\n  * mail (2.3.0)\n  * mechanize (2.0.1)\n  * mime-types (1.16)\n  * multi_json (1.0.3)\n  * net-http-digest_auth (1.1.1)\n  * net-http-persistent (1.8.1)\n  * nokogiri (1.5.0)\n  * orm_adapter (0.0.5)\n  * pg (0.11.0)\n  * polyglot (0.3.2)\n  * populator (1.0.0 cd1373d)\n  * rack (1.3.2)\n  * rack-cache (1.0.2)\n  * rack-mount (0.8.2)\n  * rack-ssl (1.3.2)\n  * rack-test (0.6.1)\n  * rails (3.1.0.rc6)\n  * rails_admin (0.0.1 f02f7c7)\n  * railties (3.1.0.rc6)\n  * raindrops (0.7.0)\n  * rake (0.9.2)\n  * rb-fsevent (0.4.3.1)\n  * rdoc (3.9.2)\n  * rmagick (2.13.1)\n  * rspec (2.6.0)\n  * rspec-core (2.6.4)\n  * rspec-expectations (2.6.0)\n  * rspec-mocks (2.6.0)\n  * rspec-rails (2.6.1)\n  * ruby-json (1.1.2)\n  * rubyzip (0.9.4)\n  * sass (3.1.7)\n  * sass-rails (3.1.0.rc.6)\n  * selenium-webdriver (2.4.0)\n  * slim (1.0.1)\n  * sprockets (2.0.0.beta.13)\n  * temple (0.3.2)\n  * term-ansicolor (1.0.6)\n  * therubyracer (0.9.3)\n  * thor (0.14.6)\n  * tilt (1.3.2)\n  * treetop (1.4.10)\n  * turn (0.8.2)\n  * tzinfo (0.3.29)\n  * uglifier (1.0.1)\n  * unicorn (4.0.1)\n  * warden (1.0.5)\n  * webrobots (0.0.11)\n  * xpath (0.1.4)\n```\n So I'm wondering if my work in 7afcf0f affected this (it was done after 2.0.0.rc3). I've pushed a new branch GH660 with this patch reverted. If you could bundle this branch, restart, and try again, that'd help a lot in narrowing this down:\n\n```\ngem 'formtastic', git: 'git://github.com/justinfrench/formtastic.git', :branch => '7afcf0f'\n```\n It could also be 1.9.3-related. Any chance you can spin up an RVM with REE or 187 temporarily to try and narrow this down?\n\nHas Formtastic 2 worked for you at all (did 2.0.0.rc3 work for you) or...?\n yep, bug still exists.\nI created repo with same bug: https://github.com/TimothyKlim/formtastic_test_for\n Ok, no idea why that's failing yet, but I think `albums/index.html.erb` can safely be changed to this, to meet the same requirements and functionality:\n\n```\n<%= f.input :soundtracks, :as => :check_boxes, :collection => @album.soundtracks, :label_method => :title %>\n```\n\nDoes this help in your full app? Will still hunt for the root cause and leave this open for a bit.\n Yep, this is works perfectly.\nBut, when I used formtastic 1.4, this code(issue) is worked too.\n\nThanks!\n The root of this seems to be that `:collection` is an Array of Arrays of Strings (`[[label, value], [label, value]]`), yet `@product.soundtracks` returns an array of Soundtrack objects. Formtastic is trying to call last on a Soundtrack because it's trying to compare it to an Array `[label, value]`. `last` is being called because of the arrays present in `:collection`.\n\nNot really sure how to code around this (I'm sure it can be done if it was somehow supported in 1.x), or even if I should. It feels more like a case where an exception should be raised that the collection needs to be an array of objects when the method is an AR association. In other words, the format of the collection is not appropriate for the input and it's association.\n\nThoughts?\n  ... to avoid closing the milestone off :)\n @sobrino mostly means GH used to automatically close off milestones that had no open issues :)\n  Please check: I'm not really sure wether to use `@@builder` or `options[:builder]` in this place.\n Could you please follow this up with a test case so that we don't re-introduce a regression? At the very least a comment above the line. I still don't understand why this patch helped, and under what circumstances. Then again, it is 7am :)\n @justinfrench It seems there's a scoping/ context issue when using `builder`. When using navigasmic, `builder` is a reference to `Navigasmic::HtmlNavigationBuilder:Class` instead of `Formtastic::FormBuilder`. I'm not really sure why, because I don't know how exactly the `mattr_accessor` works. I thought it doesn't create instance accessors - as in many places `@@builder` instead of the accessor `builder` is used - and so I simply adjusted this call too. I'll investigate further and try to add a test case.\n Thanks!\n  rc3 works, with rc4 I get \n\n```\nundefined method `perform_browser_validations'\n```\n\nat \n\n```\nformtastic (2.0.0.rc4) lib/formtastic/helpers/form_helper.rb:146:in `semantic_form_for'\n```\n Same with 3.1.0.rc6 for me..\n There are no commits since 2.0.0.rc4? \nhttps://github.com/justinfrench/formtastic/compare/2.0.0.rc4...master\n Ok, I just found out the exception is only thrown when also using the \"navigasmic\" gem. So I'm not sure if this is bug in navigasmic or formtastic..? https://github.com/jejacks0n/navigasmic\n @sobrinho: fix is here https://github.com/justinfrench/formtastic/pull/658 :)\n  when trying:\n= f.input :description, :as => :ckeditor\n\nI receive:\n\nFormtastic::UnknownInputError\n\n10x\n We don't support `:as => :ckeditor` \u2014 where in the documentation is it suggested we do? Closing for now. My guess is you have built a custom input in Formtastic 1.2.x, which will need to be migrated to the new custom inputs. Can provide more detail after you do :)\n The support is added by ckeditor gem. It works with formtastic 1.2.4\nI thought you have an idea why it stopped working with the new formtastic version :)\n This is the place for ckeditor hook:\nhttps://github.com/galetahub/ckeditor/blob/master/lib/ckeditor/hooks/formtastic.rb\n We changed the API for custom inputs for 2.0 in a backwards incompatible way. I can see what's possible at our end, but the issue needs to be raised with them. \n 10X\n I'm getting that same error with 2.0.2. Any update?\n  Right now the _step_ attribute for `number_input` defaults to '1' when cannot be inferred from validations and is not either supplied in the options.\n\nIt is ok for integer values, but when you have a float field in the database, an `input type=\"number\"` is also rendered with `step=\"1\"` and the browser doesn't submit the form when you enter a non-integer value. I think in this case it should use `step=\"any\"`\n\nSee http://www.w3.org/TR/html-markup/input.number.html\n\nThis patch makes the _step_ attribute defaults to `\"any\"` instead of `\"1\"`.\n If you use `step=\"any\"` modern browsers let you send _float_ values. If you don't use it and use `step=\"1\"` instead, modern browsers let you send only integer values.\n\nI have to say that I only tested that with Chrome 13.\n  Could be useful for wrapping up Money and composed_of stuff. See #645.\n I am currently implementing a CurrencyInput to manage this use case, I am struggling with the spec because I started with NumberInput. Do you think all options of NumberInput are required for this new input ? like min, max, in..range ?\nI will send a pull request as soon as I clean up my mess.\n @EppO I haven't given this much thought yet, but maybe it's helpful to first think about what the _differences_ are between what you get with a number input, and what you'd like to see in a money input.\n IMHO, Currency is a more specific that numbers, it's a float with only 2 digits after decimal point, and with a symbol outside the input (more likely in a span surrounding the input). What do you think ?\n @EppO have a look at the number_to_currency helper in Rails... I think there's a bit more to it than that. Different precisions, different separators for the decimal and the thousands, and the currency symbol can be at the start ($) or end (\u20ac), for example.\n\nA lot of the formatting rules (e.g. precision) aren't catered for in HTML5 client-side (and we don't do any JS yet), so perhaps as a starting point, all we're talking about is a numeric input that can somehow include a currency symbols relevant to a locale?\n\nNext, an option to present the value stored in the database (usually in cents) as money (usually divide by 100, etc), and a way of detecting and doing this automatically by detecting the presence of the Money gem, or other common traits.\n\nSounds like three incremental steps. I have some ideas around the markup and currency symbol side of this, but would be great if you're motivated to look into the other (harder) bits.\n You want to put separators in the input when typing the amount ? or allowing the user to put separators in the input ? That would be harder to parse as it won't be anymore a number...\n\nIn my branch, I handled the symbol before/after the input but I don't really like how I did it (in to_html method), so I don't mind at all if you manage that part. I would be really please to help you for the other parts if I can.\n @EppO As a designer and user, seeing large numbers with 1000's separators is convenient for accuracy, but not _crucial_. Being able to copy-paste numbers with separators (and even currency symbols) into a form field and it Just Works\u2122 _is_ crucial. It's the app's responsibility to handle many varied types of input, not the user's.\n\nHowever, in the spirit of incremental improvement, let's just get _something_ ready to merge :)\n Sorry, not much. I've been quite busy, didn't look at the code for a while. \nI will try to get something that you can merge.\n  'novalidate' attribute should be added when this option is set to 'false'\ninstead of 'true'.\n\nRelated to #626.\n Man, that's embarrassing.\n  Apologies if this is my mistake somehow.  I have a boolean field in my model called \"top.\"\n\nMerely rendering:\n\n`= form.input :top`\n\nCorrectly generates a checkbox, but its state (checked vs unchecked) does not seem to reflect the object I'm editing / creating.  In order to do this, I had to do the following:\n\n`= form.input :top, :as => :boolean, :input_html => { :checked => (@metric.top ? 'checked' : nil) }`\n\nThis behaves as expected (i.e. if @metric.top is true, the box is checked).  It seems kludgy to have to specify this.  Am I missing something?\n\nThank you for your time.\n\nI am using Formtastic 1.2.4, Rails 3.0.8 and Ruby 1.9.2.\n Formtastic 2.0.0.rc3 indeed resolves the issue for me.  I was doing some custom wizardry to allow a date-picker field type, which does not work \"out of the box\" with 2.0.0.rc3, so I'll have to tackle that before upgrading.\n\nThank you for the quick response and resolution (and for working on such a useful library)!\n @agraves if I work up a patch for 1.2.4, would you be willing to test it for a 1.2.5 patch release? Not going to bother if there's no one willing to verify it, but happy otherwise :)\n Hey Justin,\n\nI'd be happy to verify the issue for you.  Just let me know when you have something ready and I'll test it right away.\n\nThanks!\n  ``` ruby\n= input.input :start_time, :label => false\n```\n\nwould render non html_safe string\n\nUsed technique used on stringish labels\n\n``` ruby\n# labelling.rb:8\ndef label_html\n  render_label? ? builder.label(input_name, label_text, label_html_options) : \"\".html_safe\nend\n```\n Sure.\n I'm guessing eventually there'll be a feature request for each of the fragment labels to be removable. Passing label => false only removes the label off the full fragment set.\n\nFor now, that's a feature not a bug - right?\n @sobrinho the year, month and day (fragments) have their own labels, which formtastic.css hides.\n\n@nathanscott correct, feature request, not a bug. Thanks for this patch.\n  I can do something like this\n\n``` ruby\n@visa = ActiveMerchant::Billing::CreditCard.new(:type => \"visa\")\n```\n\nin my controller and then use it like this\n\n``` ruby\n= semantic_form_for @visa, :as => 'visa', :url => root_path do |visa_form|\n  = visa_form.inputs\n```\n\nin my form.\n\nWithout the\n\n``` ruby\n:as => 'visa'\n```\n\nthis would fail with\n\n> > undefined method `model_name' for ActiveMerchant::Billing::CreditCard:Class\n\nsince \"@ visa\" is not an AR model instance.\n\nHowever, I can't use this with semantic_fields_for a la:\n\n``` ruby\n= semantic_form_for :payment, :url => root_path do |payment_form|\n  = payment_form.semantic_fields_for @visa, :as => 'visa' do |visa_form|\n    = visa_form.inputs\n  = payment_form.semantic_fields_for @mastercard, :as => 'master_card' do |mastercard_form|\n    = mastercard_form.inputs\n```\n\nbecause then I get:\n\n> > undefined method `model_name' for ActiveMerchant::Billing::CreditCard:Class\n\nIs there any way around this? \nI need a pseudo nested form like above containing form fields for non AR models and I don't want to dispense with formtastic goodies like showing validation errors where they belong to and preserve previously given form values in case validation goes wrong.....\n @sobrinho I see. Actually, that was the answer I had dreaded - I was hoping for a quicker solution.\n Is this a problem in rails' fields_for, or just in semantic_fields_for? If it's only a problem with the latter, I'd be interested in finding a way for us to not require this if possible. If it's a problem in standard rails as well, then I'd focus there. \n @justinfrench I just double checked - it's a problem with rails fields_for. Others would probably call this a feature instead...:-)\n@sobrinho Right now I did it without extending AM, but thanks for the suggestion, maybe I'll look into that at a later point in time.\n   The CarrierWave support would probably be better if we looked at the class of the attribute instead of relying on responding to certain methods.\n formtastic created a text input for my uploader\n  ```\nbetelgeuse@pena /mnt/checkouts/formtastic $ bundle exec rake\n(in /mnt/checkouts/formtastic)\n/usr/bin/ruby18 -S bundle exec rcov -Ispec:lib --exclude gems/*,spec/*,.bundle/*, --aggregate coverage.data spec/i18n_spec.rb spec/inputs/datetime_input_spec.rb spec/inputs/include_blank_spec.rb spec/inputs/string_input_spec.rb spec/inputs/range_input_spec.rb spec/inputs/radio_input_spec.rb spec/inputs/numeric_input_spec.rb spec/inputs/text_input_spec.rb spec/inputs/number_input_spec.rb spec/inputs/custom_input_spec.rb spec/inputs/label_spec.rb spec/inputs/placeholder_spec.rb spec/inputs/search_input_spec.rb spec/inputs/boolean_input_spec.rb spec/inputs/check_boxes_input_spec.rb spec/inputs/phone_input_spec.rb spec/inputs/select_input_spec.rb spec/inputs/password_input_spec.rb spec/inputs/time_input_spec.rb spec/inputs/hidden_input_spec.rb spec/inputs/country_input_spec.rb spec/inputs/file_input_spec.rb spec/inputs/email_input_spec.rb spec/inputs/time_zone_input_spec.rb spec/inputs/url_input_spec.rb spec/inputs/date_input_spec.rb spec/helpers/buttons_helper_spec.rb spec/helpers/input_helper_spec.rb spec/helpers/commit_button_helper_spec.rb spec/helpers/form_helper_spec.rb spec/helpers/reflection_helper_spec.rb spec/helpers/semantic_errors_helper_spec.rb spec/helpers/inputs_helper_spec.rb spec/builder/semantic_fields_for_spec.rb spec/builder/custom_builder_spec.rb spec/builder/error_proc_spec.rb spec/builder/errors_spec.rb\n.............................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................F..................................................................................................................                                                                                                                                    \n\nFailures:\n\n  1) Formtastic::FormBuilder#commit_button label when used on an existing record when no explicit label is provided when no I18n-localized label is provided should render an input with default I18n-localized label (fallback)\n     Failure/Error: output_buffer.should have_tag('li.commit input[@value=\"Save Post\"][@class~=\"update\"]')\n       expected\n       <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n       <html><body><form accept-charset=\"UTF-8\" action=\"/posts/1\" class=\"formtastic post\" id=\"edit_post\" method=\"post\" novalidate=\"novalidate\">\n       <div style=\"margin:0;padding:0;display:inline\">\n       <input name=\"utf8\" type=\"hidden\" value=\"&#10003;\"><input name=\"_method\" type=\"hidden\" value=\"put\">\n       </div>\n       <li class=\"commit button\"><input class=\"update\" id=\"post_submit\" name=\"commit\" type=\"submit\" value=\"Update Post\"></li>\n       </form></body></html>\n\n       to have an element matching \"li.commit input[@value=\\\"Save Post\\\"][@class~=\\\"update\\\"]\", but did not\n     # ./spec/helpers/commit_button_helper_spec.rb:348\n\nFinished in 78.87 seconds\n1200 examples, 1 failure\n\nFailed examples:\n\nrspec ./spec/helpers/commit_button_helper_spec.rb:344 # Formtastic::FormBuilder#commit_button label when used on an existing record when no explicit label is provided when no I18n-localized label is provided should render an input with default I18n-localized label (fallback)                                                                                                                                                                         \nrake aborted!\nruby -S bundle exec rcov -Ispec:lib --exclude gems/*,spec/*,.bundle/*, --aggregate coverage.data spec/i18n_spec.rb spec/inputs/datetime_input_spec.rb spec/inputs/include_blank_spec.rb spec/inputs/string_input_spec.rb spec/inputs/range_input_spec.rb spec/inputs/radio_input_spec.rb spec/inputs/numeric_input_spec.rb spec/inputs/text_input_spec.rb spec/inputs/number_input_spec.rb spec/inputs/custom_input_spec.rb spec/inputs/label_spec.rb spec/inputs/placeholder_spec.rb spec/inputs/search_input_spec.rb spec/inputs/boolean_input_spec.rb spec/inputs/check_boxes_input_spec.rb spec/inputs/phone_input_spec.rb spec/inputs/select_input_spec.rb spec/inputs/password_input_spec.rb spec/inputs/time_input_spec.rb spec/inputs/hidden_input_spec.rb spec/inputs/country_input_spec.rb spec/inputs/file_input_spec.rb spec/inputs/email_input_spec.rb spec/inputs/time_zone_input_spec.rb spec/inputs/url_input_spec.rb spec/inputs/date_input_spec.rb spec/helpers/buttons_helper_spec.rb spec/helpers/input_helper_spec.rb spec/helpers/commit_button_helper_spec.rb spec/helpers/form_helper_spec.rb spec/helpers/reflection_helper_spec.rb spec/helpers/semantic_errors_helper_spec.rb spec/helpers/inputs_helper_spec.rb spec/builder/semantic_fields_for_spec.rb spec/builder/custom_builder_spec.rb spec/builder/error_proc_spec.rb spec/builder/errors_spec.rb failed\n\n(See full trace by running task with --trace)\n```\n The output says \"Update Post\" and the test expects \"Save Post\". I didn't look into which one is correct and don't have time for in the near future.\n @betelgeuse, what version of Ruby are you using?\nIt's works for me with:\n- 1.9.2-p180\n- 1.8.7-p334\n- ree-1.8.7-2011.03\n @nashby ruby 1.8.7 (2011-02-18 patchlevel 334) [i686-linux]\n There's a different but related failing spec on Travis CI, so clearly something isnt 100% solid. My first guess is doffing i18n versions. \n @justinfrench I used bundle exec rake so the version locked by Gemfile.lock should get used. i18n seems to be currently at 0.5.0\n Travis is green for 1.8.7 now so it's only you sorry @betelgeuse, not sure what else I can do to help. Closing for now, but will happily accept a patch, of course! http://travis-ci.org/#!/justinfrench/formtastic/builds/80889\n  Closes GH-635\n\nI didn't touch the markup. In reality the generated markup is noisier. Do you want it to reflect reality or to have just the relevant parts?\n  lib/formtastic/inputs/file_input.rb\n\nThe example code should probably have file type inputs instead of email.\n I can try to come up with something but I am not really sure what would be most useful to people using formtastic.\n  When generating \n\n```\nform.input :comments, :as => 'check_boxes', :selected => @comments, :required => false\n```\n\nI get this extra field:\n\n```\n<input id=\"comments_none\" name=\"search[comments][]\" type=\"hidden\" value=\"\">\n```\n Yes but in all other cases I end up with an unexpected empty element in my array. It's annoying, but all multi-select type form elements need to be handled specially. Following the principle of least surprise, would be better to leave it alone?\n @nickurban, @sobrinho This is not an issue with Rails helpers because Rails doesn't have a helper for rendering a group of checkboxes. I don't believe there's an option in Formtastic either.\n\nIf I remember correctly...\n\nThis feature was added in 7b5ed06b6207439fe6e3a23ae36b6af2dcaca3b0, the reason for it (I think) is that if you were to uncheck all checkboxes for the `categories` association when editing a `Book`, the browser would not submit any params relating to `categories`. The result was that the existing category associations would not be removed from the `Book` when saved.\n\nThis is _also_ very \"surprising\" for developers and users.\n\nThe common work-around (at least at the time when this feature was introduced) was to place a hidden input in there first. This patch/feature removed that step for developers.\n\nThe key thing for me is that you'll have to do some work, somewhere if you want this stuff to really work. The current behaviour was thought be be the simplest strategy at the time. There may be better strategies, there may be a regression, but it's not as simple as \"you have a blank option there, please remove\".\n\nLong answer, but I hope it helps :)\n I understand why you did it now, and that it's not an error. \n\nIt sucks when you get bit by the disappearing box group issue, but that's generally something that comes up the first time you write a web app that uses grouped check boxes (or a multi-select). Once you've used them once, you're aware of the issue. This, in contrast, is surprising to people who are already familiar with multi-select type inputs. Given that, I would probably lean towards surprising-in-the-same-way-as-normal. \n\nMaybe rails should include this kind of functionality and automatically delete the param, but that would probably raise other issues...\n Yeah, I'm not 100% sold either way, but I would say that I'm not inclined to change until the next major release at the very earliest, given we're well into RCs for 2.0. Happy for you to re-open and rally some support for reverting the change in 2.1 or 3.0 (not as far away as it sounds).\n\nThanks for the feedback either way.\n  Build cancan over 5 rubies on Travis CI with a simple config file and post-commit hook.\n  Hi, I don't know it is already possible, but maybe it would be useful if one can change the tag wrapping the input (which now defaults to li tag), so that one can have input elements wrapped with div instead.\n Hi, this is \"on the list\", but not in the immediate future.\n I would love to be able to do that too.\n In the meantime, we've made it much easier to make or modify inputs to suit your own preferences. http://justinfrench.com/notebook/formtastic-2-preview-custom-inputs\n Thanks.\n\nAll the lis stuff comes from the method _input_wrapping_ right?\n Right.\n I can't find where this method is defined.\nMay I override this method without forking your project?\n\nThank you.\n @OyoKooN I'm pretty sure you know how to grep or ack in a project:\n\n```\n$ ack 'def input_wrapping'\nlib/formtastic/inputs/base/wrapping.rb\n9:        def input_wrapping(&block)\n```\n\nIf you want to change this across all inputs, you would want to monkey patch that method in the `Wrapping` module directly via an initialiser. If you just wanted to change it for a handful of inputs, something like this:\n\n``` ruby\n# app/inputs/string_input.rb\nclass StringInput < Formtastic::Inputs::StringInput\n  def input_wrapping(&block)\n    #...\n  end\nend\n```\n\nOr, you could just realise that an `<li>` is just another block element with some special semantics and style it like you would style the `<div>` ;)\n @justinfrench Thank you for your help. I did not known ack, thank you for\nthe introduction :)\n if i got it right one of the reason is to get simple_form started was the inability to change the html output of formtastic. But is should be so simple to change, if submit i patch, will you accept it? I hardly can believe nobody has done it..\nformtastic2 is very nice code by the way..\n @aka47 patches welcome, but I'll be fussy, so maybe start with something small that we can discuss, or post to the ruby group, or gist something... :)\n hey, nice\n\ni thought about adding a form-builder helper for the input wrapper tags, that way one could customize them even for each form via a form-builder, like one can do now with text-fields and other basic elements. \n\nI just created a very simple first example how the implementation could look like, maybe you can have a look and give me feedback what you think about this approach..\n\nyou can view it here..\nhttps://github.com/aka47/formtastic/compare/master\n Hi,\nI read a lot that there was to be a built-in wrapper customization (i.e. use td instead of li) in further versions of Formtastic, but this was months ago. Is there any easy solution out yet?\n Thanks for the fast answer Justin.\n\nYes, monkey patching is surely what I'm looking for. But I must admit that I have no idea how to achieve that. Could you advise any document that explains that procedure?\nThanks in advance\n\nPS: what do you mean by '(or override it in a specific input by subclassing).' ?\n Wow, thanks for the extensive answer. \n\nI do need to wrap each input by a td, thus obtaining the following structure:\n<%= f.inputs 'Whatever' do %>\n  < table > \n    < tr >\n      < td ><%= f.input :blahblah%>< /td >\n      < td ><%= f.input :blah%>< /td >\n    < /tr >\n    < tr >\n      < td ><%= f.input :blah3%>< /td >\n      < td ><%= f.input :blah4%>< /td >\n    < /tr >\n  < /table >\n<% end %>\n\nBut I want a certain control over the classes applied to my td, certain should have a 'small' class, others should have 'large'. I could  use the wrapper_html => { :class => 'large' }, right?\n\nI'm going to try with the examples you provided, and will come back to you if I encounter problems.\nThanks again!\n ;)\n\nEverything works for me. Thanks again for your help Justin!\n  I didn't see any other issue about this specific problem:\n\nHere is my form:\n\n= semantic_form_for @paint do |form|\n  ..\n  =form.input :name\n  ..\n  =semantic_fields_for :user do |user_form|\n    ...\n    =user_form.input :name\n\nThe label/hint/... for the first input \"name\" is correct (formtastic.labels.paint....)\nbut the second input \"name\" is incorrect. It is using the same as the first one instead of formtastic.labels.user\n\nOther fields inside the semantic_fields_for are treated correctly. Only duplicated ones have issues\n which version of rails, the i18n gem and formtastic are you running with?\n Sorry I forgot to specify:\nRails 3.1.0rc4\nRuby 1.9.2 (Linux)\nFormtastic 2.0.0rc3\n @crystalin can you please re-test with formtastic master and rails 3-1-stable? There's been some fixes in both Rails and Formtastic to do with `fields_for` and `semantic_fields_for` which may or may not have been related. Also, if it still fails, could you let me know which i18n version you have?\n I tried again and I still get the same behavior. The i18n I'm using is 0.6.0\nHowever I think the issue is coming from the scopes inside the i18n.rb\n\nIt is actually defined like this:\n\nSCOPES = [\n        '%{model}.%{nested_model}.%{action}.%{attribute}',\n        '%{model}.%{action}.%{attribute}',\n        '%{model}.%{nested_model}.%{attribute}',\n        '%{model}.%{attribute}',\n        '%{nested_model}.%{attribute}',\n        '%{attribute}'\n      ]\n\nI didn't look deep in the code but I guess the order of the scope array define which translation is used.\nIn the previous one, the \n'%{model}.%{attribute}',\nis used before the \n'%{nested_model}.%{attribute}',\n\nBut the good behavior is to take the nested_model before the model if there is one.\nTell me if you think it is logic for you.\n Hi, I think I agree with that change \u2014 to try the nested model before the model \u2014 but I don't heavily use i18n, so I may be missing something. If someone like @sobrinho could chime in and +1 the change, it should be pretty easy to work up the patch. Start lobbying :)\n This is not my real form but the use of semantic_fields_for is the same.\nWhen I remove the \"form.\" before the semantic_fields_for the behavior is correct (the user model attributes are taken instead of the paint model attributes as it was before).\n\nI did form.semantic_fields_for because it was used like this in the example on the formtastic github page. I guess the form.semantic_fields_for is only for nested models... and semantic_fields_for is for independant models.\n\nin my locale file:\n\n```\nformtastic:\n  labels:\n    user:\n      name: \"Your name\"\n    paint:\n      name: \"Painting\"\n```\n I've had a go at switching this around, but either I'm missing something obvious, or...? I've published to GH-613 branch. If anyone else would care to check my work and offer suggestions or a fix, that'd be great. @sobrinho @crystalin\n Bumping this out to 2.1 since it's a change instead of a concrete bug, and also because I really want to push out a final RC if possible :)\n @sobrinho \u2014 did you?\n Sorry for the delay... I changed the scope order, please check if it is correct\n @crystalin, this spec coverage the changed order?\n Not sure what you mean but the test is not working if the order is changed\n @crystalin that's question. thanks!\n Fixed on pull request #685\n  The space inserted between create_check_boxes() and escape_html_entities() in line 1180 of formtastic.rb is unnecessary and results in a too large gap between a checkbox and its label. Please fix it in 2.0 as well if needed (didn't check myself yet).\n Well, the space is interpreted by the browser as part of the label and is displayed, therefore the gap is too big. You can see it in this base64-encoded PNG screenshot:\n\niVBORw0KGgoAAAANSUhEUgAAAEoAAAA3CAMAAACcsixcAAAAAXNSR0IArs4c6QAAAGBQTFRFAAEA\nKXi4Gn27Hn69L3y8MoC6OoXASorAT5DGU5XEWZrKZ6DLmJqXbqfRirjYmMHcp8fktNDoy87Kvtbo\nyt7rz+Pv4eTg5efk6Orn5e327O7r7vDt6PH57/X39vz+/v/8MJxmMwAAAAFiS0dEAIgFHUgAAAAJ\ncEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfbBh4LNBO4as6IAAAAGXRFWHRDb21tZW50AENyZWF0\nZWQgd2l0aCBHSU1QV4EOFwAAAWlJREFUWMPt1n+TQzAQBmA7BEX8uBwtJfn+37K7EaR3DIY/7jp2\nphld8UgzZV5HnVbOn6W+rDpKJWMdp57PpmkeWCdQveScQBlppCT4OWOF6jhjcUsdEbpukElgKQtK\nlfoQCFVHbljSHE/PMZSjJec+rAqg+AZfcSgExNRgUPd9IeCGBx2ejYGOYyhLPWegHC1VEyXxg4DE\nhVAjAp/nHfUleCpngGddnKRwxHJHihySLEq9U1KkIS4BexKvY9COFNPjRPVr+kVxEAVw02sR1T8w\nwssFri/CMaRNKL3Yoh5a+knRtvOOGlkAXiiwl3q07R7PWFDfzLa7UW1TWqrW/gx0i5MenDVqR51I\n/c/31UVd1EVd1EV9dhZNDlLT1+PUlEWPU0Y6gRokm9qQPuepXrpb1Ib0OUsZqbKoDelzjhokm9qQ\nPhcpnUXftn0tfS5RfRadqA3pc4EyWTTZk/N2Pjj7qMSuY9RHv69eSCu+b0joQRUAAAAASUVORK5C\nYII=\n While the fix may seem simple, I would highly suggest it to be part of a major version change so people updating their gems for security/minor versions don't get irritated by the lack of space their layouts depend on.\n\nMaybe along with removing the space we can update the formtastic css to have a default margin between the 2, using ems to mimic a space.\n I forgot to mention that I'm using a custom CSS, not the original formtastic one.\n @sncf This space doesn't exist in master (aka 2.0), so I'm closing this issue. As above, I'm inclined not to backport this to 1.2.x because it could cause problems for those either expecting the space, or compensating for it in their CSS. \n Fix in 2.0 is fine for me as I'm planning to migrate soon. Thanks!\n  Is there a hook of some sort, where I could persuade the buttons helper to produce &lt;button type=\"submit\">#{value}&lt;/button> instead of &lt;input type=\"submit\" value=\"#{value}\"/>? And I would want to use the generated text as I use generic forms for both creating and editing.\n Why `<button>text</button>`?\n @sobrinho \u2014 Check out [this article](http://particletree.com/features/rediscovering-the-button-element/).  Long story short: you can add content/HTML inside of them, and they don't use Safari's default Aqua styling, making them easier to style.\n\nOh, and regarding the actual issue: +1.\n Interesting, I didn't know that.\n\nActually we don't have api for that and maybe is that what @justinfrench want to say with \"pretty buttons\".\n\nMaybe is time to do that.\n\n@justinfrench, is that?\n  Current validation checks some aspects of ActiveRecord validations, but it does it too well, marking optional fields required (and, in theory, the other way around, making `:presence => { :allow_blank => true }` possible).\n\nMy patch has a bit stricter required checks for presence, inclusion, and length AR validators:\n- presence has no options (eg. it should not allow :allow_blank => true)\n- inclusion accepts :allow_blank\n- length accepts :allow_blank, but it does accept :minimum and :within too. When any of the latter two starts at zero, the field should not be required.\n\nSpecs attached.\n I think multiple issues can be involved. I'd ask case requestors to re-test their problem on the patched version, or at least they should write a failing test.\n  Interesting. Have not seen this myself, and I have RC 4 running in production, so I would expect someone to moan about this sooner or later. :-)\n I noticed the same symptoms, but for me it never fell back. However, handling of :presence, :inclusion, and :length validations is a bit rough. I have an implementation (WFM), but I couldn't work on the failing tests yet.\n Pull #610 looks to address this. Closing.\n  After failing validation, a checkbox is always presented as checked. \n\nThis should be fixed according to http://stackoverflow.com/q/6101697/809043 but I'm not sure if v. 1.2.4 fixes the problem.\n\nThis is the code used for presenting the checkbox\n<%= f.input :accepted_terms_at, :as => :boolean, :required => false %>\n Yes, I have restarted server etc, the problem is still there.\n\nI'm using rails 3.0.3 and formtastic 1.2.4\n @leiou:\n1. what sort of database column is backing the `:accepted_terms_at` attribute? I'm guessing it's a `:date_time` based on the naming convention.\n2. I'm also assuming it's `ActiveRecord`, but please confirm.\n3. When you first load a new form (before submitting and validating), is the checkbox is checked by default?\n4. I'm assuming that you load the form, it's unchecked, you submit the form, something else fails validation, then the checkbox is checked, but please confirm.\n @leiou, would love to close this off before the next RC if possible!\n Sorry for my late response, it all work now and I can't make the issue reoccur. I'm sorry for starting this issue.\n  I have this numericality validation in my model and now it seems like formtastic chokes on it somehow when trying to follow the Proc.\n\n``` ruby\nvalidates_numericality_of :min_sphere, \n  less_than: Proc.new { |frame| frame.max_sphere }, \n  greater_than_or_equal_to: -60, \n  only_integer: false \n\nvalidates_numericality_of :max_sphere,\n  less_than_or_equal_to: 60,\n  greater_than: Proc.new { |frame| frame.min_sphere },\n  only_integer: false \n```\n\nError message:  \n\n```\nundefined method `-' for #<Proc:0x000001049e6c68>\nformtastic (2.0.0.rc3) lib/formtastic/inputs/base/validations.rb:88:in `validation_max'\n```\n\nView code:\n\n```\n=f.input :min_sphere\n```\n Spot on suggesting me to patch it. I am a ruby n00b still but thanks to your detailed description of the problem I think I'll manage to solve this one. Give me a day or so to do this and I'll send you a pull request.\n\nIf I wanted to write tests for this I suppose that I'd add this for both range_input_specs, number_input_specs?\n Ok so I fixed the issue but I have to spend some time with the specs before I can add that. A LOT!! of setting up done in the spec_helper :)\n @mhenrixon, how's the specs going? Would love to get a new RC out this week!\n Sorry about that, I completely forgot about it. Will try and create something tonight.\n  just for you @nzkoz\n Cool, next up let us turn off the rest of the html5 stuff ;)  url, etc.\n @NZKoz No. I mean.... why? How has it negatively affected your project?\n Mostly in the same way that required does.  Chrome does crazy un-interruptable things which just aren't all that helpful.\n\n![Crazy Chrome](https://img.skitch.com/20110705-caxdfrcf2jtigbjf11sj8wch98.jpg)\n\nNice in theory, painful in practise.\n Don't hate the player; Hate the game!\n\nUnless you want to live in the past for the rest of your career\u2026 You _have_ to log this as a use case to the [whatwg](http://www.whatwg.org/specs/web-apps/current-work/multipage/).\n\nI'm not sure why the commas are present? What is that? \n\n/cc @Hixie @paulirish \n @NZKoz, that's a really interesting case. What you have looks like a number (\"we should use a number input\"), but it's actually some kind of foreign key, and doesn't make sense for the commas etc to be there.\n\nIn the mean time...\n\n``` ruby\nclass NumberInput < Formtastic::Inputs::NumberInput\n  def to_html\n    input_wrapping do\n      label_html <<\n      builder.text_field(method, input_html_options)\n    end\n  end\nend\n```\n\nI can add configurations to let you force a number input to actually use `type=\"string\"`, and I'll consider that. The gripe I have here is that `number` is an appropriate type of input for this problem, but the browser possibly isn't giving you enough control over what that should mean in presentation (aka \"it's helping too much\").\n\nI get grumpy when I have to send less-than-ideal mark-up, and equally grumpy when I have to add configurations and choose the default. You've found all three :)\n  Rails 2, formtastic 2.0.2\n\nWhen an attribute has no validators,  Validations.validations? return false, so that some global config (Formtastic::FormBuilder.all_fields_required_by_default) is used. This is set to true by default and so the attribute is marked as required.\n\nI find actually the opposite should happen. Attribute without validators is not required to be present.\nThe configured default should only be used, when it is not possible to determine validators (eg. another model object).\nCurrently there is no distinction between errors when checking for validators and simply empty validator list for an attribute.\n Yes it's about 2.0.0.rc2 and Rails 3, sorry for mistake.\n @iscra can you work up a patch? I'm about to merge in #610, so you should base your work on that. At the very least, could you have a quick dig through the code and suggest where the error is? I'm pretty sure I understand your issue, but want to be sure. Would really like to push another RC this week if you can help out.\n  Hi,\n\nI ran into a small issue wrt. to using formtastic 2.0.0rc2 ontop of MongoMapper.\n\nMongoMapper doesn't respond to reflect_on_association(), but associations() instead, as documented in this post http://anlek.com/2010/06/mongomapper-undefined-method-reflect_on_association/.\n\nOther than that have not run in any other issues re MongoMapper - in fact formastic 2.0 works a lot better on top of MongoMapper.\n\nHope you could include it into the master branch. Thanks!\n Could you provide a test case too? We don't want to break this in the future :)\n yep will get this done in the next 24hrs. Been looking at the existing rspec code, all very understandable. Will follow similar line.\n\nI noticed I need to sweep up other instances of reflect_on_association, so yes coverage is definetly needed (my bad :-) )\n That's the specs added for the polymorphic associations on MongoMapper.\n\nI also found Formtastic::Helpers::Reflection helper needed tweaking for MongoMapper and I've create a new spec file for that module.\n\nI hope it meets with your coding standards etc.\n  When creating a set of radio buttons, they collapses together when the default CSS is used:\n\n``` ruby\nform.input :title, :as => :radio, :collection => {\"One\", \"Two\"} \n```\n\nI suspect this is something to do with floats, but working on the other issue at the moment! :-)\n\nThe old CSS applied to the page renders fine.\n Here is the generated minimal html:\n\nhttps://gist.github.com/cedb5ed4e41bada82fe2 \n\n(just add the formtastic CSS to the directory)\n\nAnd the erb that generates it:\n\nhttps://gist.github.com/7f164d29916e443481c9\n\nThe custom input is here (at line 71):\n\nhttps://gist.github.com/1030551 \n\nFirefox 4, Safari, Chrome 12\n Yep, that's fixed it. :-)\n  In my model I have:\n\n``` ruby\n  validates_length_of :body, :maximum => 5000\n```\n\nBut not validates_presence_of :body\n\nShould the behavior be changed to only required fields when validates_presence_of is used?\n\nThis would be consistent with Rails which allows you to validate the length but the field can be empty.\n I think consistency with Rails is the best option - people would expect Formtastic to just work. If the validation requires some sort of input (present, min, whatever) then the field should be required. Otherwise not.\n\nIn our case we had a summary and body. If a boolean is set the body is not shown on the site, but if it is used it must be less than 5000.\n\nBit of a busy schedule over the next few days, but I'll have a look and see how far I can get.\n Yeah I just came across this one, came here to flag it as an issue - you can have a non-required field, but often with a maximum length limit on it, and now they're all getting marked as required. Would be nice to see it fixed :)\n @rhulse @karpah I think pull request #610 resolves this. Closing, please re-test in >= RC4 (or master if I haven't shipped RC4 yet)\n Looks good to me. Thanks!\n All of my fields are showing required, when I have only a few in validates_presence_of... that supposed to happen?\n Will do.. thanks for the quick reply!!\n  When attaching CK Editor to a text field the new form will not submit if the field is required.\n\nIt is possible to edit existing content with the same form. \n\nFor anyone else running into this problem it is NOT a bug in Formtastic. \n\nCK Editor does not put any of the entered text into the text area it replaces, so (as a required field) this will fail. Because CK Editor hides the text area you cannot see the warning about the missing required data.\n\nA work around is to mark the field as :required => false and rely on the server-side validation to display the error to the user.\n For anyone searching you add this to your input class:\n\n``` ruby\ndef required?\n  false\nend\n```\n  I have a Folio::Portfolio that (using mongoid) embeds_many Folio::PortfolioItems,\n\n```\n<%= semantic_form_for [@portfolio, @portfolio_item] do |form| %>\n```\n\ncomplains about \n\n```\nundefined method `hash_for_folio_portfolio_folio_portfolio_items_path' for #<Module:0x00000003dcdf68>\n```\n\nThe is a route for what he is looking, I think... (same for POST)\n\n```\nfolio_portfolio_portfolio_items GET    /folio/portfolios/:portfolio_id/portfolio_items(.:format) {:action=>\"index\", :controller=>\"folio/portfolio_items\"}\n```\n\nbut they are slightly different (=> see the second _folio_?), which to my eyes must be causing the error\n\n_Can I fine tune this at the formtastic side?_ Or any other good ideas?\n\nStack\n\n```\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/routing/polymorphic_routes.rb:133:in `polymorphic_url'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/routing/polymorphic_routes.rb:140:in `polymorphic_path'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/helpers/form_helper.rb:391:in `apply_form_for_options!'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/helpers/form_helper.rb:364:in `form_for'\nfolio/ruby/1.9.1/gems/formtastic-2.0.0.rc2/lib/formtastic/helpers/form_helper.rb:175:in `block in form_helper_wrapper'\nfolio/ruby/1.9.1/gems/formtastic-2.0.0.rc2/lib/formtastic/helpers/form_helper.rb:190:in `with_custom_field_error_proc'\nfolio/ruby/1.9.1/gems/formtastic-2.0.0.rc2/lib/formtastic/helpers/form_helper.rb:174:in `form_helper_wrapper'\nfolio/ruby/1.9.1/gems/formtastic-2.0.0.rc2/lib/formtastic/helpers/form_helper.rb:143:in `semantic_form_for'\n/home/jan/Projects/folio/app/views/folio/portfolio_items/_form.html.erb:4:in `__home_jan__rojects_folio_app_views_folio_portfolio_items__form_html_erb___3314434236101415375_39715520'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/template.rb:144:in `block in render'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications.rb:57:in `instrument'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/template.rb:142:in `render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/partial_renderer.rb:265:in `render_partial'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/partial_renderer.rb:237:in `block (2 levels) in render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/abstract_renderer.rb:33:in `block in instrument'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications.rb:55:in `block in instrument'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications.rb:55:in `instrument'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/abstract_renderer.rb:33:in `instrument'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/partial_renderer.rb:236:in `block in render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/abstract_renderer.rb:22:in `wrap_formats'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/partial_renderer.rb:228:in `render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/renderer.rb:41:in `render_partial'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/helpers/rendering_helper.rb:27:in `render'\n/home/jan/Projects/folio/app/views/folio/portfolio_items/new.html.erb:3:in `__home_jan__rojects_folio_app_views_folio_portfolio_items_new_html_erb__4465155328648683976_39208040'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/template.rb:144:in `block in render'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications.rb:57:in `instrument'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/template.rb:142:in `render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/template_renderer.rb:40:in `block (2 levels) in render_template'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/abstract_renderer.rb:33:in `block in instrument'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications.rb:55:in `block in instrument'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications.rb:55:in `instrument'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/abstract_renderer.rb:33:in `instrument'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/template_renderer.rb:39:in `block in render_template'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/template_renderer.rb:47:in `render_with_layout'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/template_renderer.rb:38:in `render_template'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/template_renderer.rb:12:in `block in render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/abstract_renderer.rb:22:in `wrap_formats'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/template_renderer.rb:9:in `render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/renderer.rb:36:in `render_template'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_view/renderer/renderer.rb:17:in `render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/abstract_controller/rendering.rb:120:in `_render_template'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/streaming.rb:258:in `_render_template'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/abstract_controller/rendering.rb:114:in `render_to_body'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/renderers.rb:30:in `render_to_body'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/compatibility.rb:43:in `render_to_body'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/abstract_controller/rendering.rb:99:in `render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/rendering.rb:16:in `render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/instrumentation.rb:40:in `block (2 levels) in render'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/core_ext/benchmark.rb:5:in `block in ms'\n/home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/benchmark.rb:309:in `realtime'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/core_ext/benchmark.rb:5:in `ms'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/instrumentation.rb:40:in `block in render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/instrumentation.rb:78:in `cleanup_view_runtime'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/instrumentation.rb:39:in `render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/implicit_render.rb:10:in `default_render'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/implicit_render.rb:5:in `send_action'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/abstract_controller/base.rb:167:in `process_action'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/rendering.rb:10:in `process_action'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/abstract_controller/callbacks.rb:18:in `block in process_action'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/callbacks.rb:416:in `_run__1080047447304514410__process_action__2884677852872626407__callbacks'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/callbacks.rb:386:in `_run_process_action_callbacks'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/callbacks.rb:81:in `run_callbacks'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/abstract_controller/callbacks.rb:17:in `process_action'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/instrumentation.rb:30:in `block in process_action'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications.rb:55:in `block in instrument'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/notifications.rb:55:in `instrument'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/instrumentation.rb:29:in `process_action'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/params_wrapper.rb:202:in `process_action'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/rescue.rb:17:in `process_action'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/abstract_controller/base.rb:121:in `process'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/abstract_controller/rendering.rb:45:in `process'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal.rb:193:in `dispatch'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal/rack_delegation.rb:14:in `dispatch'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_controller/metal.rb:236:in `block in action'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/routing/route_set.rb:65:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/routing/route_set.rb:65:in `dispatch'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/routing/route_set.rb:29:in `call'\nfolio/ruby/1.9.1/gems/rack-mount-0.8.1/lib/rack/mount/route_set.rb:152:in `block in call'\nfolio/ruby/1.9.1/gems/rack-mount-0.8.1/lib/rack/mount/code_generation.rb:93:in `block in recognize'\nfolio/ruby/1.9.1/gems/rack-mount-0.8.1/lib/rack/mount/code_generation.rb:117:in `optimized_each'\nfolio/ruby/1.9.1/gems/rack-mount-0.8.1/lib/rack/mount/code_generation.rb:92:in `recognize'\nfolio/ruby/1.9.1/gems/rack-mount-0.8.1/lib/rack/mount/route_set.rb:141:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/routing/route_set.rb:531:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/best_standards_support.rb:17:in `call'\nfolio/ruby/1.9.1/gems/rack-1.3.0/lib/rack/etag.rb:23:in `call'\nfolio/ruby/1.9.1/gems/rack-1.3.0/lib/rack/conditionalget.rb:25:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/head.rb:14:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/params_parser.rb:21:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/flash.rb:243:in `call'\nfolio/ruby/1.9.1/gems/rack-1.3.0/lib/rack/session/abstract/id.rb:195:in `context'\nfolio/ruby/1.9.1/gems/rack-1.3.0/lib/rack/session/abstract/id.rb:190:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/cookies.rb:321:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/callbacks.rb:392:in `_run_call_callbacks'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/callbacks.rb:81:in `run_callbacks'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/callbacks.rb:28:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/reloader.rb:68:in `call'\nfolio/ruby/1.9.1/gems/rack-1.3.0/lib/rack/sendfile.rb:102:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/remote_ip.rb:48:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/show_exceptions.rb:47:in `call'\nfolio/ruby/1.9.1/gems/railties-3.1.0.rc1/lib/rails/rack/logger.rb:13:in `call'\nfolio/ruby/1.9.1/gems/rack-1.3.0/lib/rack/methodoverride.rb:24:in `call'\nfolio/ruby/1.9.1/gems/rack-1.3.0/lib/rack/runtime.rb:17:in `call'\nfolio/ruby/1.9.1/gems/activesupport-3.1.0.rc1/lib/active_support/cache/strategy/local_cache.rb:72:in `call'\nfolio/ruby/1.9.1/gems/rack-1.3.0/lib/rack/lock.rb:34:in `call'\nfolio/ruby/1.9.1/gems/actionpack-3.1.0.rc1/lib/action_dispatch/middleware/static.rb:53:in `call'\nfolio/ruby/1.9.1/gems/railties-3.1.0.rc1/lib/rails/rack/content_length.rb:16:in `call'\nfolio/ruby/1.9.1/gems/railties-3.1.0.rc1/lib/rails/engine.rb:438:in `call'\nfolio/ruby/1.9.1/gems/railties-3.1.0.rc1/lib/rails/rack/log_tailer.rb:14:in `call'\nfolio/ruby/1.9.1/gems/rack-1.3.0/lib/rack/handler/webrick.rb:59:in `service'\n/home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/httpserver.rb:111:in `service'\n/home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/httpserver.rb:70:in `run'\n/home/jan/.rvm/rubies/ruby-1.9.2-p180/lib/ruby/1.9.1/webrick/server.rb:183:in `block in start_thread'\n```\n <%= semantic_form_for [@portfolio, @portfolio_item], :url => folio_portfolio_portfolio_items_path do |form| %>\ndid it\n You can override model name by defining `model_name` class method. I wrote a short article regarding this http://rocketrails.wordpress.com/2011/12/29/urls-for-namespaced-models/\nIt's for ActiveRecord but perhaps Mongoid has a similar interface.\n  hi Justin, \n\nI am really very interested in having the style of your forms. But when ever I try installing it in my university, I get this error message. \nshwfgf17:plab Aks$ sudo rake gems:install\nPassword:\n(in /Users/Aks/Ruby/project/plab)\ngem install justinfrench-formtastic --source http://gems.github.com\nERROR:  http://gems.github.com/ does not appear to be a repository\nERROR:  could not find gem justinfrench-formtastic locally or in a repository \n\nPlease could you help me. I am having a deadline and I have not yet started with my project. \n\nThank you very much\n Use 'formtastic' gem, not 'justinfrench-formtastic' :)\n\ngithub gems was deprecated or disabled, I don't know.\n\nOn Jun 16, 2011, at 8:14 AM, a1aks wrote:\n\n> hi Justin, \n> \n> I am really very interested in having the style of your forms. But when ever I try installing it in my university, I get this error message. \n> shwfgf17:plab Aks$ sudo rake gems:install\n> Password:\n> (in /Users/Aks/Ruby/project/plab)\n> gem install justinfrench-formtastic --source http://gems.github.com\n> ERROR:  http://gems.github.com/ does not appear to be a repository\n> ERROR:  could not find gem justinfrench-formtastic locally or in a repository \n> \n> Please could you help me. I am having a deadline and I have not yet started with my project. \n> \n> Thank you very much\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/595\n\nCheers,\n\nGabriel Sobrinho\n  When using `validation_reflection` and `client_side_reflections` gems, I need to set `:validate => true` in order to get the desired validations. I want this in all my forms, so I have to manually add it to each. The request is:\n\nChange `SemanticFormHelper` (maybe an `mattr_accessor`) to allow for merging with explicitly set attributes so that:\n\n```\nsemantic_form_for @foo do\n```\n\nwould set `:validate => true` in the `form_for` options\n\nyet\n\n```\nsemantic_form_for @foo, :validate => false\n```\n\nThis, of course, extends to any other random attribute someone wants to set a reasonable default for.\n This validate option came from where?\n\nclient_side_validations?\n I guess this is a default option that should be present on client_side_validations, not formtastic.\n\nMaybe, something like:\n\n```\nClientSideValidations.default_validate = true\n```\n Closing, I agree this should be the other plugins domain to solve, and also there's been no further input from the OP.\n  Minor issue in README.textile:\n\n<%= semantic_form_for @post do |form| %> should be changed to <% semantic_form_for @post do |form| %> (Remove the = at the beginning).\n\nThanks for this great gem and all the best,\nTobias\n Yeah, that\u00b4s indeed the case. I\u00b4m still on Rails 2.3.11. Sorry for\nthis one, I was a little bit confused\nThanks again, Tobias\n\n# \n\n2011/6/15 justinfrench\nreply@reply.github.com:\n\n> Hi, just like Rails 3's `form_for` http://api.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-form_for, you actually need that `=` now. Perhaps you're on Rails 2, in which case your'e right, but the README is kept up-to-date with the rest of the code in master, and we've dropped Rails 2 support for the forthcoming Formtastic 2.0.\n> \n> There's a 1.2-stable branch which would have the older README.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/593#issuecomment-1372561\n  Hi,\n\nGetting to grips with Rails 3.1, and currently trying to utilise the formtastic stylesheets. I have followed the instructions, and thus have an application.css file that has the following:\n\n```\n *= require_self\n *= require_tree .\n *= require formtastic\n```\n\nHowever, this does not appear to be working, giving the following error:\n\n```\nError compiling asset application.css:\nSprockets::FileNotFound: couldn't find file 'formtastic'\n```\n\nI am assuming that I have missed a step somewhere - perhaps doing a `require_tree` on the formtastic folder or something similar?\n\nAny advice would be appreciated. Thanks!\n Excellent question - turns out I was using 1.2, not realising 2.x was required for Rails 3.1 [facepalms].\n\nEverything now working with 2.0.0.rc2.\n\nThanks for your assistance!\n  Formtastic::Inputs::BooleanInput docs say the generated html looks like this:\n\n```\n    <li>\n      <input type=\"hidden\">\n      <label>\n        <input type=\"checkbox\">\n        label\n      </label>\n    </li>\n```\n\nHowever, since ae34be15d4ae00a3559f32ef392be01478cf799f, label generations went to `label_with_nested_checkbox`, which does the other way around, label text first, then checkbox input.\n\nPersonally I liked checkbox on the left, but please fix it either in docs or in implementation.\n  Attempting to solve the problem of i18n key clashing with i18n subtree. Fixes #584\n  My form has a belongs_to collection dropdown.\n\n``` ruby\n    class Author < AR::Base\n      has_many :posts\n    end\n    class Post < AR::Base\n      belongs_to :author\n    end\n\n    <%= form_for(@post) do |f| %>\n      <%= f.input(:author, :collection => Author.all) %>\n    <% end %>\n```\n\nI expect the label to come out to be `Author`.\n\nMy config/en/locale.yml looks like this\n\n``` yaml\n    en:\n      formtastic:\n        author:\n          name: Author's Name\n```\n\nThis is the error received:\n`undefined method `<<' for {:name=>\"Author Name\"}:Hash`\n\nI think the problem is in how i18n does the lookups in the locale file and what keys we provide for lookup. \n\nThe call to I18n.translate ends up being:\n\n`::I18n.translate(\"post.new.author\",{:default=>[:\"post.author\", :author, \"\"], :scope=>[:formtastic, :labels]})`\nThe above returns `{:name=>\"Author Name\"}`, a hash which is NOT nil and unsuitable for string concat later in Formtastic.\n\nIt would be normal in my opinion to have a key for \"author\" in the locale file as it is a proper model. We're also using the model as a belongs_to relationship in Post. Should this be raised in i18n? I'm using version 0.5.0 of the i18n gem.\n\nUsing formtastic from git master on Rails 3.0.7\n The workaround is to explicitly put the author : Author key-value pair under post in the locale file.\n And I saw the same problem in i18n 0.6.0 as well, so the problem would persist on Rails 3.1.0 as well.\n I think i made a mistake in posting the fragment from my locale file. I DO indeed have the :labels scope throughout. \nI need to override attributes from `author` but not really from `post`. \n\nWhen I did NOT have the `post` keys, i got an error as specified in the title.\n\n``` yaml\nen:\n  formtastic:\n    labels:\n      author:\n        name: Author Name\n      post:\n        author: Author # Forced to add this to prevent i18n lookup falling back on author above\n```\n\nThe problem was raised within formtastic in labelling.rb when concatenating the label with required label. label returns a hash and required returns a string but they cant be joined. Method `label_text`\n\nI think in `localized_string` we're checking for return value being blank?, but I think we should consider it \"not fetched\" if we get anything but a \"non-blank string\" from i18n. \n\nI spoke to @svenfuchs about i18n returning hashes and he schooled me that it was indeed a functionality of the i18n gem to return subtrees if so fetched. This helps in saving N+1 queries when you do indeed need to get all keys/values from the locale file. So, i18n is behaving itself as specified.\n Somewhat similar problem seems to have been raised here #293 (https://github.com/justinfrench/formtastic/issues/293) , but the solution in my mind could have been better.\n  Using real objects instead of symbols in semantic_fields_for as advertised here (https://github.com/justinfrench/formtastic/commit/a3713e84e122187e10de28d11ed1bb1679e9f5f4) does not work for me for has_many associations. Only the inputs for the first associated record are displayed, not all (it seems not to loop). Using rails3.1rc and formtastic 1.2.3.\n I've tested on rails 3.1.0.rc1 with formtastic from master branch.\n\nI didn't write a test case but in a application I have the following scenario:\n\n``` ruby\nclass Person < ActiveRecord::Base\n  has_many :identities\nend\n```\n\n``` ruby\nclass PeopleController < ApplicationController\n  def new\n    @person = Person.new\n    3.times { @person.identities.build }\n  end\nend\n```\n\n``` erb\n<%= semantic_form_for @person do |f| %>\n  <%= f.inputs do %>\n    <%= f.inputs :for => @person.identities do |i| %>\n      <%= i.input :number %>\n    <% end %>\n  <% end %>\n<% end %>\n```\n\nUsing object only the first object is displayed.\n\nBut, same happens with rails helpers:\n\n``` erb\n<%= form_for @person do |f| %>\n  <%= f.fields_for @person.identities do |i| %>\n    <%= i.text_field :number %>\n  <% end %>\n<% end %>\n```\n\nSo, I guess the commit a3713e84e122187e10de should be reversed?\n I don't remember, usage of symbols on nested was deprecated by rails? Why the usage of real objects instead of symbols?\n Sorry if I didn't fully understand, but is this a rails bug (file burg/pull there) or an issue of formtastic now? :)\n  I deleted perplexing comment, especially that rails2 support was dropped in 2.0 version. And I think that most of formastic users used to requiring fields depends on validation in models so I changed to false. Hope that you'll agree with me.\n I agree that changing the default maybe surprising. \n\nBut my 2 cents is that requiring all fields by default should be a form level setting. Some forms require all fields to be filled while others dont. \n It was a little bit confusing to me after rails3.1 and formtastic-master migration that all of my forms marked as required (not sure where this change was introduced), so, maybe I misunderstood something, but I thought that `all_fields_required_by_default-fix = false` was  a default in rails3.0 and formtastic ~> 1.2.0.\n\nSecond thing is that how often you all your fields in form to be required? I think if most of people use `false` it should be set by default. Please correct me, if I'm wrong.\n I'll try to investigate this further ASAP.\n  Forcing Boolean fields to be selected does not seem polite or sane even if all fields required by default attribute is switched on.\n Ignore the longish history. The actual diff is fairly small.\n Sent pull #582. Closing this.\n  I have a form for a model which has a belongs_to association with another model and I validate for presence on the association_id attribute_id. (i'm using Formtastic from the master branch).\n\n``` ruby\nclass Post < AR::Base\n  belongs_to :author\n  validates :author_id, :presence => true\nend\n```\n\nAccording to the readme, I input on the association name `author` in the form.\n\n``` ruby\n<%= form_for(@author) do |f| %>\n  <%= f.input :author, :collection => Author.all %>\n<% end %>\n```\n\nI expect this field to be marked required. But that's not what i'm seeing. Reading the code, it seems we're looking for `validations_on(:author)` which i obviously dont. I have it on `:author_id` which is how we usually do this type of validation.\n\nHelp me find out where i'm going wrong.\n Will patch after sleep.\n Actually, no. I'm going to take the opportunity to smarten up and fix my models to check on associations themselves and not rely on presence of ids. I cant recall why I assumed that validation should be done on _id fields.\n\nBut this leads to another question and possible another bug.\n1. I thought the comment said that in Rails 3, ``all_fields_required_by_default` config attribute would never be applicable. It does kick-in in Rails 3. Have I misread it?\n2. Since the above kicks-in in Rails 3, `required=required` HTML attribute gets applied to boolean fields also. This effectively forces the user to select `true` on a checkbox. I don't think `all_fields_required_by_default` should be applicable on boolean fields unless explicitly specified. What do you think @justinfrench?\n  ``` ruby\nerrors.add :base, \"An error message\"\n```\n\nin the model and\n\n``` ruby\nform.semantic_errors :base\n```\n\nin the view yields\n\n``` html\n<ul class=\"errors\"><li>Base An error message</li><li>An error message</li></ul>\n```\n  hi, when i tried to create a nested select, this show me a input\nhere's the code\n\n```\nsemantic_form_for @usuario do |form|\n    form.inputs do\n        form.input :nombres\n        form.input :apellidos\n        form.input :edad\n        form.input :fecha_nacimiento, :as => :date, :start_year =>1930\n        form.input :biografia\n        form.semantic_fields_for :region do |region|\n            region.inputs :id, :collection => @regiones, :as => :select\n        end\n        form.buttons :commit\n    end\nend\n```\n thx!\n  Please support also localized_country_select so a full I18n support is available. \nAlso this module is quite more up to date an fetches the offcial ISO Codes.\n( https://github.com/karmi/localized_country_select )\n\nThank You !\n localized_country_select didn't receive an update since August 04, 2010.\n\nStill working?\n\nI never used a country input on my applications.\n\nWhich is the most used these days?\n\nThey respond to country_select?\n I'm closing this issue - it's been dormant for 4 months now, the reference to a maintained version of country_select has been updated a few days ago. \n\nIf there's the need for a country_select plugins that translated the country names there are maintained gems like [carmen](https://github.com/jim/carmen) that are compatible to the original country_select implementation and can be used with formtastic.\n https://github.com/onomojo/i18n_country_select\n  Hi.\n\nI've read many articles around semantic forms.\nI've always been \"annoyed\" by using fieldset as radio or checkboxes wrapper.\n\neg:\n\n```\n<fieldset>\n  <legend>Categories</legend>\n  <ol>\n    <li>\n      <!-- input + label -->\n    </li>\n  </ol>\n</fieldset> \n```\n\nI found one solution, wich fit better for my tastes and is to use dl instead of fieldset, dt instead of legend and dd\n\n```\n<dl>\n  <dt>Categories</dt>\n  <dd>\n    <ul>\n      <li> <!-- input + label --></li>\n    </ul>\n  </dd>\n</dl> \n```\n\nI didn't found a proper way to change this behavior without rewriting check_boxes.rb / radio.rb\n\nThanks for advance.\n  After upgrading to Rails 3.1.rc1 all my usage of semantic_fields_for raises the following error when trying to call input on the block argument:\n\n```\nundefined method `input' for #<ActionView::Helpers::FormBuilder:0x00000105dd9068>\n```\n\nExample:\n\n```\n<%= semantic_fields_for @user do |user_fields| %>\n  <%= user_fields.input :name %>\n<% end %>\n```\n I'm on 1.2.3.\n\nYes everything worked before and the only change was upgrading to the rails release candidate.\n\nThanks for the hack. Looks like it's working. Though I'm still calling semantic_fields_for and not f.fields_for. Actually running f.semantic_fields_for (given you have a previous semantic_form_for you want to build on) works without the hack as well.\n I can confirm this. It seems the header of `fields_for` is changed is Rails 3.1rc: \n\nRuby on Rails latest stable (v3.0.7):\n\n```\n fields_for(record_or_name_or_array, *args, &block)\n```\n\nRuby on Rails (v3.1rc):\n\n```\n fields_for(record_name, record_object = nil, options = {}, &block)\n```\n\nSupplying `name` to `semantic_fields_for` works fine at first glance, but I don't know any background - why the new parameter is there and what it should really be:\n\n```\n<%= semantic_fields_for @user, :user do |user_fields| %>\n  <%= user_fields.input :name %>\n<% end %>\n```\n I will try something here\n specs still failing on 3.1\n\nhave you some news from @josevalim?\n @justinfrench, specs fail when I change the code to use the new method signature for fields_for.\n\nI didn't pushed because of that.\n @justinfrench, I did it:\n\n``` ruby\nif Rails::VERSION::STRING >= '3.1.0'\n  def semantic_fields_for(...)\n  end\nelse\n  def semantic_fields_for(...)\n  end\nend\n```\n\nBut I don't know what will happen with rdoc in this case.\n\nThis will create a small duplication on methods too, but if we don't want it, we can try something like that (ugly?):\n\n``` ruby\n# documentation\n# method with rails 3.1 signature\ndef semantic_fields_for(...)\n  # default implementation\nend\n\nif Rails::VERSION::STRING < '3.1.0'\n  def semantic_fields_for(...) # :nodoc:\n    # do something with arguments first\n    super(arguments)\n  end\nend\n```\n\nI tried the first version but didn't worked for rails 3.0.0 and I didn't find the reason.\n\nCould you try the first version? (less uglier)\n Is there a patch/workaround for the current implementation?\n @tobsch the workaround is to use `fields_for` rather than `semantic_fields_for` and pass in your own `:builder => Formtastic::FormBuilder` as noted above. The patch is still in progress, just fixing a failing build from recent merges first :/\n Setting\n`ActionView::Base.default_form_builder = Formtastic::FormBuilder`\n\nis another option to fix it globally without actually changing your code.\n\nThanks, justin!\n Had a look into how the simple_form guys solved it, and it looks like they've got it sorted out... just trying to get some coverage for it. Way less complicated than the road we were headed down :)\n @dbackeus @tobsch @sobrinho @tom-kuca I've just pushed a bunch of commits related to this. If you could bundle from master, test your apps without the work-arounds and then get back to me with the results, that'd be great. Specs pass under 3.1.0.rc4 and 3.0.9, so if you're still having issues with this, a failing spec patch or at least a detailed example to reproduce would help me reproduce and fix this.\n Hi guys, I've pushed a commit that fixes an issue with this code on SimpleForm. See more: https://github.com/plataformatec/simple_form/commit/14b6263ee270af4ac972703f78cb5a2b4586033c\n\nIt's still broken with Rails 3.1.0.rc4 but fine with master\n @rafaelfranca thanks heaps for both the initial fix and this one!\n  This is a come-back of the following issue (which has been fixed in the past, but showed up again - this commit broke it again: https://github.com/justinfrench/formtastic/commit/77dfed3b8eeca241db1264cc08ce16af265d9700).\nhttps://github.com/justinfrench/formtastic/issues/443\n\nBasically the model has the value setup to \"0\" to a particular item, but the checkbox comes up with a value of \"1\" and checked.\n\nWhen using :as => :boolean, I get\n< input type=\"checkbox\" value=\"1\" name=\"comment[secret]\" id=\"comment_secret\" checked=\"checked\" >\n\nWhen using :as => :string, I get\n< input type=\"text\" value=\"0\" name=\"comment[secret]\" maxlength=\"4\" id=\"comment_secret\" >\n Hello Justin,\n\nI'm running the \"default\" branch, on Rails 3 and Ruby 1.9.2. (I guess that is the one that is received when doing gem install formtastic, right? Maybe I should've tried the stable branch instead.)\nI've resorted to the built-in rails check_box helper for that specific form to get across the problem. If I can provide you with any more details that would help you do let me know and I'll get it to you.\n\nSince I found a work-around (using check_box), I consider this issue closed.\n OK, I'll provide you with the data you need tomorrow to help you debug this (currently on the road). I'll also do another test with a secondary model to see if only a specific setup makes this bug show up. Thank you very much.\n Hi Justin,\nI've just installed 1.2.4.beta2 and I can confirm that indeed it fixes this issue (Rails 3 / Ruby 1.9.2).\nHave a great day!\n  Are you are referring to the changes from the epic [Gemfile commit](http://github.com/rails/rails/commit/9f09aeb8273177fc2d09ebdafcc76ee8eb56fe33) ?\n  I'm pretty sure that **compatibility**-wise, you don't have to do anything.  I'll admit it was a bit hard to read through the barrage of comments on that commit, but from what I could gleen from the level-headed posts, the only thing that \"changes\" is **additional** lookups in the app/assets folder to pick up scripts and stylesheets from there.\n\nIf this is less about compatibility and more about leveraging the newly standardized and default frameworks of coffescript and sass ( flameproof suit ON) then...\n\nWould be nice to utilize sass's dynamic parts to rework how the current formtastic.css/formtastic_changes.css works though-- not sure how the implimentation would look though. It was, and continues to be an elegant solution, but surely serving a single stylesheet for an application would be better than even an elegant serving of multiple style sheets that override each other.\n  Hello,\n\nI have added a Japanese locale to Formtastic. Your i18n tests seem to account for non-english locales. I hope you find this useful!\n\nYours,\nTrevor\n I think your argument makes sense, but is there some place out there I could post my translations that is persistant, so the formtastic community can use them? It seems that it might be a handy thing to have.\n Good plan. I added to the wiki at https://github.com/justinfrench/formtastic/wiki/Translations, and added a link on the main wiki page to the Translations page.\n  Allow a radio field to have specific options set on each button through the collection similar to options_for_select\n Sure thing.  This is my first bit of code on this project, so was trying to minimize the footprint, but I like your suggestions.\n Awesome, sorry to drop this.  My MBP crashed on my over the weekend.\n  HTML5 autofocus support with JavaScript fallback (jQuery) for non-HTML5 compliant browsers.\n I think this is an interesting patch, for a number of reasons. \n- Prototype (while not to my taste) is the default for Rails. Not jQuery.\n- Autofocus is a strange feature to support over other 'new form' features.\n- Modernizr can do feature detection in a holistic sense.\n\nAs Justin pointed out, you're inheriting this script, which is a decision to not be taken lightly.  \n\nPersonally, I think that the type of scripting that is being used here is 'project based', and should be left out\u2026 but I'm sure there are some interesting perspectives to weigh up here. \n @benschwarz, I know this is only one of your points, but jQuery will soon be the Rails default: http://www.rubyinside.com/rails-3-1-adopts-coffeescript-jquery-sass-and-controversy-4669.html\n @drewda, I know\u2026 which will make supporting rails 3.X a pain in the ass for formtastic\u2026 and a point of contention. \nOn Wednesday, 11 May 2011 at 3:34 PM, drewda wrote:\n@benschwarz, I know this is only one of your points, but jQuery will soon be the Rails default: http://www.rubyinside.com/rails-3-1-adopts-coffeescript-jquery-sass-and-controversy-4669.html\n\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/pull/555#issuecomment-1143479\n @benschwarz, Yeah, I've seen how the question of JS libraries has become\nquite an issue on other projects. I'm no whiz at architecting libraries, but\ncould a solution be to have a formtastic-jquery-addons gem that would break\nout these sort of fancy interactive dressings? Or would you worry that that\nwould lead to the prototype version, the jquery version, and so on, with\neverything being half baked?\n\nOn Wed, May 11, 2011 at 3:43 PM, benschwarz <\nreply@reply.github.com>wrote:\n\n> @drewda, I know which will make supporting rails 3.X a pain in the ass for\n> formtastic and a point of contention.\n> On Wednesday, 11 May 2011 at 3:34 PM, drewda wrote:\n> @benschwarz, I know this is only one of your points, but jQuery will soon\n> be the Rails default:\n> http://www.rubyinside.com/rails-3-1-adopts-coffeescript-jquery-sass-and-controversy-4669.html\n> \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/justinfrench/formtastic/pull/555#issuecomment-1143479\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/pull/555#issuecomment-1143510\n FWIW I've recently been designing something like this for simple_form. I'm using Modernizr and yepnope to decide when some js is needed, and then delegating over to H5F https://github.com/ryanseddon/H5F to provide the polyfill support. \n I'm not confortable with supporting autofocus **in** formtastic.js\n\nI guess we should support another features like date picker, autocomplete, etc and not missing features on browsers like IE but it's not a no.\n\nRemove the javascript piece and this will be a good patch :)\n @drewda Thanks for sharing the link!\n\n@jackdempsey Modernizr is indeed a good library for future detection and at first sight H5F looks neat too.\n\n@justinfrench I totally agree on your three remarks concerning the use of jQuery and providing fallbacks. I also prefer to not have other dependencies because it may lead to too many problems in the future. I call it \"dependency hell\" :).\n (pushed the wrong button...)\n  The nested fields are not covered by css, e.g. normal input boxes have 72% width set, whereas the nested ones do not have that style applied.\n  <li> elements are not enclosed by a <ul> element, so we need to apply list-style:none on them directly.   \n Sure. Here is the HTML:\n\nhttp://cl.ly/6dUs\n\nand this is the haml code:\n\n=semantic_form_for :paypal, :url=>\"/checkout/review\" do |f|\n    =f.input :name, :input_html=>{:value=>\"xxxx\"}\n    =f.input :amount, :input_html=>{:value=>\"xxx\"}\n    =f.input :buyer, :input_html=>{:value=>\"xxx\"}\n    =f.input :shop_owner, :input_html=>{:value=>\"xxx\"}\n    =f.input :website_owner, :input_html=>{:value=>\"xxxx\"},:hint=>\"gets 3%\" \n    =f.commit_button \"checkout\"\n oh i see. If I wrap them in f.inputs then this takes care of itself. I didn't realize that line was a requirement. I usually just skip it and go directly to the individual inputs.\n  Hey Justin -\n\nI spent all night trying to figure this out, and I finally got it.\n\nI have a form in which I display check_boxes for a has_many_through relationship.  I have custom validation on that field that requires the user to select at least one of the possible values (i.e.: the parent model can't have zero associations on its related model).  My validation appears as follows:\n\n```\nhas_many :ailments\nhas_many :diagnoses, :through => :ailments\nattr_accessible :diagnoses_ids\nvalidates :diagnoses_ids, :relationship => {:minimum => 1}\n```\n\nThe `:relationship => {:minimum => 1}` is a custom validation that I created, which you can see here at StackOverflow:\n\nhttp://stackoverflow.com/questions/5932509/rails-validating-at-least-one-habtm-relationship\n\nAnyway, the validation was working correctly in that the `diagnoses_ids` was having an error added to it, as expected.  However, formtastic was not displaying the errors despite the form properly containing a set of `diagnoses_ids` check_boxes.\n\nThe reason is that formtastic was only attempting to display errors generated via validations on belongs_to associations, and not has_many associations.  This fixes that.  Hope you'll accept it into the codebase!\n I'm new to spec coverage, but I'll absolutely look into figuring it out tonight, I'd like to see this change implemented into the core plugin code for sure.  I'll submit another pull request once I do. I'm sure I'll be able to learn pretty quickly from the other examples in this plugin. :)  Thanks for getting back to me!\n I spent a couple hours trying to figure it out, but I got sidetracked by work and other projects unfortunately. I still intend on getting this together though, I just have had a lack of time. :)\n Opening new pull request with spec definition\n  I have a date field on my model, which I'm rendering via semantic_form_for's input method.\n\nIn Chrome, a single vertical scrollbar appears besides the date input.  This is happening from the declaration of `form.formtastic fieldset` in which `overflow:auto` is set.  If I change this value to `overflow:hidden`, the scrollbar disappears, and everything appears to render properly.\n\nIn Firefox, 3 distinct horizontal scrollbars appear below each of the 3 select boxes (year, month, day).  This is happening from the declaration of `form.formtastic fieldset > ol > li` in which `overflow:auto` is set.  Similar to the Chrome issue, if I change this value to `overflow:hidden`, the scrollbars disappear, and everything appears to render properly.\n\nChrome version = 11.0.696.65\nFirefox version = 4.0\n  Hey There!\n\nI'm using formstatic, I'd like to know if is possible use another method instead of to_s in select input.\n\ntks!\n works!\n:)\n  @sobrinho suggested to use (or switch to?) bundler but I'm submitting a minimal patch for now :)\n Switch. Submit the patch and I will accept.\n\nOn Fri, May 6, 2011 at 3:24 AM, ueno <\nreply@reply.github.com>wrote:\n\n> @sobrinho suggested to use (or switch to?) bundler but I'm submitting a\n> minimal patch for now :)\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/pull/548\n\n## \n\nCheers,\n\nGabriel Sobrinho\n  I ran perftools.rb against rake spec and it looks like a lot of time is being spent in garbage collection. I switched from MRI 1.8.7-p249 to ree-1.8.7.2011.03 and that cut spec runs in half: https://gist.github.com/1001677\n\nI'm still learning to read the output of perftools, but here's two graphs, one from MRI (http://dl.dropbox.com/u/217539/formtastic_mri_perf.pdf) and one from REE (http://dl.dropbox.com/u/217539/formtastic_ree_perf.pdf). Apart from garbage collection, it looks like a substantial amount of time is being spent in stubbing methods, plus some time in Object#localized_string.\n I will take a look into spec tonight to find what is happenning.\n\nMaybe creating models with database instead of mocking will be more faster.\n !!! \n\nFinished in 870.17 seconds\n1149 examples, 0 failures\nCoverage: 95.77% (threshold: 95%)\n  Hello everyone,\n\nI'm kinda new in rails development, that's why I'm having some problems. Well let's get to the point.\n\nI have 2 models:\n:admin_albums (has_many :admin_album_images)\n- t.string :title\n\n:admin_album_images (belongs_to :admin_album)\n- t.references :album\n- t.boolean :is_cover\n\nI've made a builder to assemble 10 images for each album, and when creating an album I have 10 file fields (paperclip)\n\nThese fields are declared in the albums_controller like this:\n\n<pre>\ndef new\n    @admin_album = Admin::Album.new\n    10.times { @admin_album.album_images.build }\n\n    respond_to do |format|\n        format.html # new.html.erb\n        format.xml  { render :xml => @admin_album }\n    end\nend\n</pre>\n\n\nin the semantic form when you create a new album you also select the images:\n\n<%= f.fields_for :album_images do |builder| %>\n    <%= image_tag builder.object.image.url(:thumb) %>\n    <%= builder.file_field :image %>\n<% end %>\n\nWhat I'm trying to do:\n\nInclude a radio button asking \"Cover?\" for each file field, where only one may be selected and this one will be \"true\" the unselected \"false\" (1 or 0)\n\nI've tried a lot of things, but couldn't find a way to select only ONE radio button AND save the data.\n\nAm I walking the wrong path? I'm thinking in creating another model called :admin_cover (belongs_to :admin_album) e declarar que :admin_album has_one :cover\n\nAny better ideas?\n  specifying the :label option on fields declared :as=>:date is ignored on the current master branch\n Submitted pull request that fixes this\n  Hi,\n\nI'm trying to use the `validates_presence_of` operator to mark field within my forms as required.\nBut whenever I try to use them on models with relations (`belongs_to` in this case) I run into the following issue:\n\nThe model:\n\n```\n    class Modificator < ActiveRecord::Base\n      attr_accessible :name, :description, :scale_id\n      belongs_to :scale\n      validates_presence_of :name\n      validates_uniqueness_of :name\n      validates_presence_of :scale_id\n    end\n```\n\nThe form:\n\n```\n<%= semantic_form_for @modificator do |f| %>\n  <%= f.inputs do %>\n    <%= f.input :name %>\n    <%= f.input :description %>\n    <%= f.input :scale %>\n  <% end %>\n  <%= f.buttons %>\n<% end %>\n```\n\nThe field is not marked as required in the browser. If I change the code in the model to `validates_presence_of :scale` the field in the browser is marked as required but my unit tests break. :-|\n\nThe test:\n\n```\ndef test_should_be_valid\n    attributes = {}\n    attributes[:name] = \"must_be_set\"\n    attributes[:scale_id] = 1\n    assert Modificator.new(attributes).valid?\n  end\n```\n\nThe error:\n\n```\n1) Failure:\ntest_should_be_valid(ModificatorTest) [test/unit/modificator_test.rb:8]:\n<false> is not true.\n```\n\nIs it possible to mark fields required the way I intend?\n\nBTW: Great piece of code. It is awesome. :-)\n\nRegards,\n\nJens\n I'm using version 1.2.3.\nBTW: How do I upgrade the gem to test with master?\n I adjusted the test exactly as you wrote but I still get the same error.\nAn inspection showed that the attributes hash hold the right parameters. Any ideas?\n Ah, I forgot to change attr_accessible :scale_id to :scale. Now it works. Thanks for your help.\n  Sorry if this is intentional, the current gem seems not to contain files under spec/*:\n\n$ gem unpack formtastic-1.2.3.gem\n$ du -a formtastic-1.2.3 | grep spec\nzsh: done       du -a formtastic-1.2.3 | \nzsh: exit 1     grep --color=auto spec\n\nI recently packaged the gem for Fedora, where every rubygem\\* package is recommended to run test suite when building,\nIt would be nice if the test suite is included.\n  When an association doesn't exist, the name attribute that is generated ends up blank. For example\n\n> f.input(:state, :collection => State.all)\n> => <select name=\"author[]\">\n\nThis branch fixes the issue by ensuring that the method is returned when the association is missing.\n  They're no longer just dealing with methods (procs, helper methods, methods on objects), and I feel like :label can be confused with the other :label.\n\nHow about :member_\\* (as in member of the collection)?\n- :member_label\n- :member_value\n- :member_title (separate issue)\n- etc\n\nObviously need to allow backwards compatibility for a while.\n  We cannot allow column types of :float to use macros: :greater_than and :less_than, because we add/subtract one in those cases, which is wrong.\n _subscribing, that's for me_\n So the question is what to do when a `:float` column has this type of validation and a `:min`/`:max` hasn't been supplied in the form DSL...\n\nFor a `:number`...\na) Ignore it and go with a default?\nb) Raise an error asking for the :min`and`:max`(or an`_or_equal_to` validation)\n\nFor a `:range`...\nc) Ignore it and go with a default?\nd) Raise an error asking for the :min`and`:max`(or an`_or_equal_to` validation)\n\nI'm leaning towards :b and :d, but @farnoy originally went with a and c I think, so best to discuss before coding.\n\n(the work is in the 'range-input' branch for those interested)\n i've replied to mail, cant paste it here cuz im on mobile. \n\nb and d are my answers \n I've done a [fix](https://github.com/okonski/formtastic/commit/8ad59be229f0338a7a50b01aab69c9e7fd408fe5) for that. Should I do something more or send a pull request?\n I just started looking at this. @farnoy do you have a spec for this?\n I'm pretty sure my fix is working as expected (tested on simple rails app).\n\n@saturnflyer, I had some tests written, but I got lost with my branches and they were very basic anyways, so could you write some? That would be a few for ValidationsHelper and a few for Range and Number (numeric) inputs.\n\n@justinfrench, I think we did this feature very well, with specs done we could merge it all to refactor branch and close this.\n I don't think it makes sense, when we are handling `:integer`s, there are no validations by default (we can only set default step to 1), but when range and step is not defined when handling `:float`s, we need to throw an exception, that's correct.\n  When I try to upload a file via AJAX, I am getting this error message:\n\nTypeError (expected Array (got Hash) for param `listing'):\n\nBacktrace:\nhttps://gist.github.com/909411\n Curious! Is there any chance you could make a small-as-possible test case app that exposes this bug? Is the only difference that you switched from Formtastic 1.2.3 gem to master git branch? Or are there other changing factors (Rails upgrade, custom inputs, new gems...)\n I did create a custom input to try it out, but I'm not using that at the moment. No other changes except for gem update. \n\nSure I can make a test app.\n It appears to be working now. (Tried it with master branch from github\nrepo.)\n\nOn Wed, May 4, 2011 at 6:20 PM, justinfrench <\nreply@reply.github.com>wrote:\n\n> @tenaciousflea Any progress? Were you able to resolve this bug?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/528#comment_1102599\n  Going to post this on Bugzilla but:\n\nWith the introduction of the new Firefox 4 release, it induces an odd behavior, giving focus to `li` elements of a `ol` with `overflow: auto;`\n\n`form.formtastic fieldset > ol > li { overflow:auto; } /* clearing contained floats */`\n\nRegards\n Oh fun! Will investigate. Off the top of my head, it's only necessary to clear the floats if you're styling the containing element that has the `overflow:auto;` hack. You could try replacing overriding that with `overflow:visible;`.\n\nIf you find an acceptable work-around, PLEASE update this issue to save me some work :)\n Busy consulting right now, I'll fork a fix and update you tonight if you don't beat me to the punch\n  When using form_for with an object_name and an object like:\n    semantic_form_for :booking, @booking do |f|\n      ...\n    end\n\nThe I18n code will look at the model_name of `@booking` for the scope, which if the `@booking` is a `DbBooking` will take this for the \"title\" field:\n    en:\n      formtastic:\n        labels:\n          db_booking:\n            title: \"A good title, please\"\n\nI think formtastic should instead take it from the passed object_name like:\n    en:\n      formtastic:\n        labels:\n          booking:\n            title: \"A good title, please\"\n\nThis sounds better because passing an object_name in the form builder is here to abstract the form handling (controller) and also issues like this, the I18n of the forms.\n Could you submit a failure spec or the fix?\n Sounds reasonable. Would rather park this until we're closer with 2.0 (at least to the point where refactor branch is merged into master). I'm inclined not to fix this in the 1.2-stable branch because it's not a critical issue.\n Okay, I'll keep my quick and dirty fix on my working copy.\nThanx to both of you for your prompt answers.\n @justinfrench I'll try to do that during the next week.\n  The Readme says to install version 2.0.0 in the Gemfile (gem 'formtastic', '~> 2.0.0')\n\nBut the most recent gem on rubygems.org is 1.2.4 (http://rubygems.org/gems/formtastic).  Is this just a situation where the Readme is incorrect or am I missing something?\n\nCheers!\n The README is wrong because the version 2.0.0 wasn't released yet.\n\nCan you fix and submit a pull request?\n\nOn Tue, Mar 15, 2011 at 3:42 PM, spagalloco <\nreply@reply.github.com>wrote:\n\n> The Readme says to install version 2.0.0 in the Gemfile (gem 'formtastic',\n> '~> 2.0.0')\n> \n> But the most recent gem on rubygems.org is 1.2.4 (\n> http://rubygems.org/gems/formtastic).  Is this just a situation where the\n> Readme is incorrect or am I missing something?\n> \n> Cheers!\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/justinfrench/formtastic/issues/521\n\n## \n\nCheers,\n\nGabriel Sobrinho\n Bah, that's my screw-up. Will fix.\n Fixed in ca118c1, closing.\n  I18n definitions for buttons (create/update) should be in formtastic.actions according to the README, but they only seems to be applied when placing the definitions of create and update directly under formtastic. This applies to formtastic gem version 1.2.3.\n Need to check spec coverage and either change the docs or patch the code.\n Ok, so the `README` is suggesting:\n\n```\nen.formtastic.actions.create\n```\n\nThere's test coverage in `commit_button_spec.rb` for the following scenarios:\n\n```\nen.formtastic.actions.submit\nen.formtastic.actions.model_name.submit\nen.formtastic.actions.create\nen.formtastic.actions.model_name.create\nen.formtastic.actions.update\nen.formtastic.actions.model_name.update\n```\n\nThis seems to be consistent with the `README`, so this is indeed what we should be aiming for.\n\nNext, I tried to repeat your experience (\"`formtastic.create` works, `formtastic.actions.create` doesn't\") in a real Rails 3 app with various Formtastic version:\n- with the 1.2.3 gem, I _can_ repeat the error\n- with the 1.2.2 gem, same\n- with the 1.2 gem, same\n- with the 1.1 gem, same \n- with the 1.2-stable branch bundled, same\n  with the master branch bundled in I _can't_ repeat the error\n\nSo the good news is it looks like this is \"fixed\" on master, but it's been a long-standing bug back through a lot of gems. The puzzling thing is that we really haven't changed any of this stuff in master. I'll do some diffs and try to figure it out.\n\n@sobrinho, any ideas on why/how this was introduced?\n I didn't checked yet. Any news?\n  I have three new Address records that belong_to the form object. Only the first fieldset gets a legend with \"Address 1\", the rest don't get legends at all. I'm using the following syntax:\n\n```\n<%= form.inputs(:name => \"Address %i\", :for => :addresses) %>\n```\n\nIs there something I'm doing wrong?\n\nUsing formtastic 1.2.3\n I really thought we patched this but can't find anything in the git log or issues. Just had a quick look in the specs and there's no coverage. I guess the work-around in the meantime is to iterate over the association yourself.\n\n<%= @user.addresses.each do |address| %>\n  <%= form.inputs :for => address, :title => \"Address #{address.id}\" %>\n<% end %>\n\nUntested, but it's something like that. Maybe it's `:for => [@your_form_object, address]`.\n\nLet me know how you go, leaving this open until this is resolved with coverage, or until the documentation is improved.\n Thanks. I realised I needed to update the particular markup with JavaScript, so ended up using Mustache anyway. Would be good to see this fixed, though.\n Good news! Thanks for this.\n That comment made me laugh out loud. I'll look after I've got through this massive rabbit hole of work.\n  New feature (v2) to add another label to a checkbox.\n\nCurrently, a boolean field is rendered as a checkbox with the label displayed at the right.\nThe idea is to add another label at the left in order to fill the blank space where the other fields' labels are positionned.\n\nThis would give something like :\n\n<pre>\nText field     [..........]\nAnother Label  [x] Standard label\n</pre>\n\n\nOriginal discussion and answers from Justin French : \nhttps://groups.google.com/d/topic/formtastic/R6s08RBaqXo/discussion\n It will be simple 2.0 overriding the BooleanInput class.\n\nIt's a common thing?\n\nThink about published flag.\n\n```\nName  [..........]\n      [x] Published\n```\n\nYou may want to write `Status` on left but in this case, makes more sense the usage of a status column with collection.\n\nCould you give me a real case? :)\n @justinfrench, you convinced me with this example.\n\nI will try something later.\n  I'm trying to get a basic form up for a simple polymorphic association:\n\n```\nclass Approval < ActiveRecord::Base\n  belongs_to :approvable, :polymorphic => true\nend\n```\n\nwith this form:\n\n```\n<% semantic_form_for @approval do |form| %>\n  <%= form.inputs %>\n  <%= form.buttons %>\n<% end %>\n```\n\nWithout formtastic rails figures out the associated object correctly. With formtastic I get this error:\n    Mysql::Error: Table 'foo.approvables' doesn't exist: SELECT \\* FROM `approvables` \n\nThere is no such table... the approval table simply has approvable_id and approvable_type.\n\nEverything works in console as far as far as the associations are concerned. Seems like formtastic doesn't notice that this is a polymorphic relationship. Any clues?\n Hi, this is a known issue, but I can't find the duplicate, so leaving open for now. In short, we drop the ball a bit on automatically figuring out what to do with polymorphic associations with the quick form syntax above. We need to either be more awesome, or drop the ball in a less craptastic way.\n\nThe only workaround I know if is to break out into the block syntax and describe each input you want.\n\nLeaving this open just in case the dup has vanished.\n Thanks for the quick response.\n\nActually, the initial error is:\n    uninitialized constant Approval::Approvable\n\nI created an empty model class Approvable to see if that would make this error go away, and then I got the following error:\n    Mysql::Error: Table 'foo.approvables' doesn't exist: SELECT \\* FROM `approvables` \n I am experiencing the same problem.\n\nCould you please explain what you mean by \"break out into the block syntax\"?\n\nThank you.\n This is what I can the \"quick form\":\n\n```\n<% semantic_form_for @approval do |form| %>\n  <%= form.inputs %>\n  <%= form.buttons %>\n<% end %>\n```\n\nThere's also the \"short hand\" form:\n\n```\n<% semantic_form_for @approval do |form| %>\n  <%= form.inputs :foo, :bah, :bing %>\n  <%= form.buttons %>\n<% end %>\n```\n\nAnd the block form, which is recommended for production apps, so that you always get exactly what you want:\n\n```\n<% semantic_form_for @approval do |form| %>\n  <%= form.inputs do %>\n    <%= form.input :foo, :as => :whatever %>\n    <%= form.input :bah, :as => :whatever %>\n    ...\n  <% end %>\n  <%= form.buttons %>\n<% end %>\n```\n\nThere's an issue with polymorphic associations in either the quick or shorthand formats which can be worked around my using the block format, which is far more specific about what you want (thus less guesswork by Formtastic).\n The problem with polymorphic associations is we don't know what you want to show since this can be any model.\n\nDid you tried to specify the :collection option?\n\n<pre><% semantic_form_for @approval do |form| %>\n  <%= form.inputs do %>\n    <%= form.input :approvable, :collection => Comment.all %>\n  <% end %>\n  <%= form.buttons %>\n<% end %></pre>\n\n\nThe exception can be handled skipping the polymorphic associations from f.inputs method.\n\nWhat you think justin?\n Ok, so there's three use cases?\n1. in \"quick forms\" (`<% f.inputs %>`) \u2014 :collection can't be provided or guessed\n2. in \"short hand forms\" (`<% f.inputs :foo, :bah, :bing %>`) \u2014 :collection can't be provided or guessed\n3. in \"block forms\" (`<% f.inputs do %><% f.input :foo %><% end %>`) where :collection hasn't been provided and can't be guessed\n\nIs that about right?\n\nHere's my proposed solution for each:\n1. skip over the input and warn/log that an input can't be automatically generated for polymorphic associations\n2. raise an error that inputs for polymorphic associations can't be rendered in short hand forms because a :collection can't be specified or guessed\n3. raise an error that a :collection must be provided for an input on a polymorphic association\n Sounds like the work-around right now is \"use the block inputs() syntax and specify a :collection\".\n I think a nice syntax would be something like `<%= form.input :commentable, :polymorphic => true, :collections => {FooClass, BarClass, BazClass} %>`. A form section with two inputs, one to select the class of the commentable object (e.g. `commentable_type` and the other to select the actual object.\n\nTo handle that without Javascript it would be necessary to load all of the objects from FooClass, BarClass, and BazClass... ugly. With a sprinkling of asynchronous javascript though ...\n Seems interesting for me...\n\nBut you should provide collection like that:\n\n<pre>f.input :commentable, :collection => [Post.first, Category.first]</pre>\n\n\nThe polymorphic option is not needed because we can reflect on association.\n\nWhat you think @justinfrench?\n @sbwoodside @sobrinho, I'm confused. I _thought_ this issue was that we didn't know what to do with polymorphic association inputs that didn't have a collection option. Right?\n\nPersonally, I think the polymorphic object (eg `commentable_type`) is not something a user should have to select.\n I've committed some fixes for this in master. Would love someone to test them in a real world app. Please re-open if you find any issues.\n  Would be great if we can detect a missing call to `accepts_nested_attributes_for` in the model and warn/raise/something to avoid those WTF moments. This is the most common problem with nested forms I've seen on the google group. We should be able to make it go away.\n Can we raise a exception?\n Raising an exception makes sense for ActiveRecord, but not sure about other ActiveModel instances, and it definitely wouldn't be appropriate for non-model stuff. Would need some thought.\n\nSimilarly, I think we could ensure that :whatever_attributes accessor is writable (not protected), which came up in the google group today.\n Looking on ActiveRecord we need to look the :whatever_attributes= method.\n\nI guess we can raise a exception for now and wait devs to report about the others orms but I think mongoid, mongomapper, datamapper, etc use the same name to be compatible with rails helpers.\n\nI'm checking that.\n  I'm trying to make a collection of check boxes checked using a non-association attribute on my model. It goes kinda like this:\n\nIn the model:\n\n```\n class Author < ...\n     def genres\n         [:fiction, :biography]\n     end\n end\n```\n\nAnd in the view:\n\n```\n <%= semantic_form_for @author ... do |f| %>\n      <%= f.input :genres, :as => :check_boxes, :collection => [:fiction, :non_fiction, :biography] %>\n <% end %>\n```\n\nFormtastic outputs the check boxes, but none of them are checked. However, if I change the input type to select (:as => :select, :multiple => true), the options are selected correctly.\n\nAttached is a pull request with a failing spec.\n For instance when `genres` is a `serialized` attribute :-)\n Yup - everything isn't NoSQL just yet ;-)\n\nFunctionality is even being added with the new formatting options in Rails3.1 (http://edgerails.info/articles/what-s-new-in-edge-rails/2011/03/09/custom-activerecord-attribute-serialization/index.html)\n\nI had a quick shot implementing this myself before I opened this pull request, but couldn't quite figure out where to add this. This was on the 'old' master, before the big refactoring, so I'll see if I can squeeze in some time to implement this if you find it appropriate.\n Okay, had a quick look. Apparently non-association collections works fine on master, as long as the `:collection` option is an array of strings and not symbols. The example given a couple of posts above will fail, while `:collection => ['fiction', 'non_fiction', 'biography']` will pass.\n    The reflection is never used, and the default is always returned as it's missing a return.\n Also, but not really related, it would be nice if the validation reflection code looked at the foreign key to see if it's required, as I usually do\n\n```\nvalidates_presence_of :foo_id\nvalidates_associated :foo, :allow_nil => true\n```\n\nand\n\n```\n= f.input :foo\n```\n\nand it does not get the fact that foo is required. Something like mixing error_keys into method_required? would do the trick I guess.\n Thanks! Can you write (or help write) a test case to expose that bug so that we don't regress again?\n Well, in my case, the association foreign_key is `:id_foo` so, I'd say add a model with that kind of association, and check that calling `association_primary_key` with `:foo` gets you back `:id_foo` and not `:foo_id`.\n\nI can't promise having time to search where the tests should go and write them.\n Might be worth reading : http://groups.google.com/group/rubyonrails-core/browse_thread/thread/6d168ad6dd061574#\n @paneq Yeah, I don't think we should be looking at the raw key column (we should be looking at the association), although in practice, this would probably lead to lots of \"WTF\" moments from apps that are assuming the key.\n\nWould love someone to get this all the way to a patch with specs and anything else we need to be solid.\n edited the title to include \"polymorphic\" to aid finding it\n  The hidden field created alongside a checkbox isn't disabled when the main one is disabled using :disabled => true. This means that rather than no value being submitted for that field, the \"negative\" value is submitted instead.\n Can you provide a patch or a test case?\n https://gist.github.com/806227\n Can you submit as pull request? I will apply the spec and fix the issue.\n Submitted. Thanks :)\n Looks like this was resolved in 91d5292, closing.\n Doesn't appear to be fixed. The test still fails on 1.2-stable and master.\n _Right._ Re-opening.\n Ok, this is tricky. I made the test pass locally, but the test is invalid. There's one hidden input for one or more checkboxes. Disabling the hidden input as per the test (which has two checkbox choices, one of which is disabled) would cancel out the whole purpose of the hidden input (when trying to uncheck all choices).\n\nThe only case where this test is correct is when all checkbox choices are also disabled. I can probably write code for that, but I'm not convinced that it's a likely use case.\n\nMaybe I'm missing something?\n\nLeaving the test broken for now, have pushed to branch GH-498.\n My use case is this:\n\nAn admin wants to manage users, including himself. However, the admin shouldn't be able to remove himself from the admin list, and that is managed by a single checkbox. Disabling this lets him visually see that he is an admin, but then a submit actually removes him from the list because of the hidden field.\n For cases like that with just one choice, I would use a :boolean input, not a :checkboxes input. This may not map perfectly to your model, but it makes sense in terms of form and params structure.\n\n```\n<%= f.input :admin, :as => :boolean %>\n```\n\nUnder the hood, you may need to create some accessors on the model to accept this attribute, and a before_save hook in the model to translate this simple accessor into what your model expects (complex associations maybe?).\n\nLet me know how you go, will close this in a week or so if I haven't heard back.\n It already is a boolean field, and maps correctly. The issue still persists though, and the usecase is as described above. The db field is a boolean too.\n Ok, my response was based on the tests that were added to the checkboxes input specs. Now that we have that cleared up I can shift the test over to the boolean input and make it pass pretty easily. Thanks.\n Damn! I put it in the wrong place? Sorry! It did cross my mind after your last comment though.\n Fixed in 7c4c4f3 on refactor branch, will be in 2.0. Looking now at how hard it will be to backport into 1.2-stable.\n Awesome, was easy to add into 1.2-stable (17cc8c2), will be in next 1.2.x release. Closing.\n Hmmm, I'm using ActiveAdmin with Formtastic 2.1.1 and check_boxes don't seem to be getting my disabled setting.\n\nexample:\n\n``` ruby\n# this is not disabled\nf.input :shares, input_html:{disabled:true}, as: :check_boxes, collection:f.object.shares \n\n# this is disabled\nf.input :shares, input_html:{disabled:true}, as: :select, multiple:true, collection:f.object.shares \n\n#this is disabled\nf.input :notes, input_html:{disabled:true}, as: :boolean \n```\n\nAm I missing something here or is there a bug in Formtastic?\n Excellent!  Took a little finagling, but finally got it to work:\n\n``` ruby\nf.input :shares, disabled:f.object.shares.map(&:id), as: :check_boxes, collection:f.object.shares\n```\n  I don't know why current behaviour of the semantic_errors is:\n\n```\n    attribute = localized_string(method, method.to_sym, :label) || humanized_attribute_name(method)\n    errors = Array(@object.errors[method.to_sym]).to_sentence\n    errors.present? ? array << [attribute, errors].join(\" \") : array ||= []\n```\n\nFor myself I see it's incompatipable with i18n at all, because sometimes you set errors.format, and in the result you have half-correct error strings in output.\n\nMy implementation of semantic_errors method:\n\n```\nmodule Formtastic\n  class SemanticFormBuilder < ActionView::Helpers::FormBuilder\n    def semantic_errors(*args)\n      html_options = args.extract_options!\n      full_messages = ActiveSupport::OrderedHash.new\n      errors = []\n      klass = @object.class\n\n      @object.errors.each do |attribute, messages|\n        messages = Array.wrap(messages)\n        next if messages.empty?\n\n        attr_name = attribute.to_s.gsub('.', '_').humanize\n        attr_name = klass.human_attribute_name(attribute, :default => attr_name)\n        options = { :default => \"%{attribute} %{message}\", :attribute => attr_name }\n\n        full_messages[attribute] = []\n\n        messages.each do |m|\n          full_messages[attribute] << I18n.t(:\"errors.format\", options.merge(:message => m))\n        end\n      end\n\n      full_messages.each do |attribute, messages|\n        errors << messages if args.include?(attribute)\n      end\n      errors << full_messages[:base]\n      errors.flatten!\n\n      return nil if errors.blank?\n\n      html_options[:class] ||= \"errors\"\n\n      template.content_tag(:ul, html_options) do\n        Formtastic::Util.html_safe(errors.map { |error| template.content_tag(:li, Formtastic::Util.html_safe(error)) }.join)\n      end\n    end\n  end\nend\n```\n It's early in the morning and my eyes are glazing over at the code. What's the difference in behaviour before and after?\n Heh, my fault, will edit it right now to work fine, thought `errors` work the same as `errors.full_messages`, but it's not.\n\nThe difference, for example: some locales could have errors.format set to `%{message}`, and in current version it will print out `Name Name is blank.`. So it's not correct. Or you want to have `%{attribute}: %{name}`, right now it's impossible without monkey patching the `SemanticFormBuilder` or creating own Builder.\n\nMay be I'm wrong... but right now I miss some features like: https://rails.lighthouseapp.com/projects/8994/tickets/3768-patch-add-full_message-option-to-validations but those features it totally related to active_model.\n Ok, if this is a backwards compatible change, a patch with tests would be great. I'd recommend working off the v2 branch instead of master.\n  It'd be nice to have something similar to :value_method to add a title attribute \nto a option tag? E.g. \n\n```\nclass Book < AR:B \n  # == Schema Information \n  # \n  # Table name: books \n  # \n  #  id         :integer(4)      not null, primary key \n  #  author_id   :integer(4)      not null \n  #  description :string      not null \n  #  created_at :datetime \n  #  updated_at :datetime \n  # \n  belongs_to :author \nend \n\nsemantic_form_for @book do |f| \n   f.input :author, :title_method => :description \n\n<label for=\"book_author_id\">Author</label> \n  <select id=\"book_author_id\" name=\"book[author_id]\"> \n    <option value=\"\"></option> \n    <option value=\"1\", title=\"A book by Justin French\">Justin French</option> \n    <option value=\"2\", title=\"A book by Jane Doe\">Jane Doe</option> \n  </select> \n```\n\nSee https://groups.google.com/group/formtastic/browse_thread/thread/d36d7f078e10ef25?hl=en\n That'd be an acceptable short-term fix, but long term, I'm wondering if the input method couldn't accept a block for this collection/association based stuff instead? Totally scribbling psuedo code:\n\n```\n<%= f.input :author, :as => :select do |select, object| %>\n    <%= select.label = object.first_and_last_name %>\n    <%= select.value = object.id %>\n    <%= select.title = \"A book by #{object.first_and_last_name}\" %>\n<% end %>\n```\n\nSimilarly, I've actually been thinking about pulling all strings (labels, hints, values, etc) out of the DSL, relying solely on i18n. It's really the path forward, so by default, Formtastic could look to translation keys for the value, the label and even the title (etc).\n\nGiven the above ideas there's not likely to be an instant patch for this, but the wheels are definitely in motion.\n Justin, thanks for the reply :) Personally i'd totally prefer the block style syntax to set attributes on the element...\n Oh, and +1 for the I18n support\n This would be great.\n  Attempted to set label to false on a boolean input type and found the checkbox no longer shows up.  This is due to the checkbox being rendered inside the label tag so the element can sit to the left of the text.  Is this intentional and is there any reason why the checkbox can't be moved outside of the label tag?  \n\nI know there are some pretty simple work arounds and this really doesn't get in the way much. Just seems inconsistent with the way setting label to false works with the rest of the input types.\n What's the use case for a checkbox without a label? Either way, probably doable in 2.0 (where I'm more happy to break backwards compatibility in the markup). \n I'm currently outputting checkboxes in a grid format for a setting hours open for a restaurant.  the x-axis is for days and the y-axis is for time in increments of 15 minutes. So the checkbox is for an attribute named is_open.  Checking a box for a particular day and time means that restaurant is open for that time slot. With the field type being a boolean and the two x/y describing the checkbox there is really no need for a label. Of this is a has_many relationship and  these are nested attributes.  Can't really see this applying any other way. \n  taken from examples in readme:\n\n```\n<%= form.inputs :first_name, :last_name, :for => :author, :name => \"Author\" %>\n```\n\nresults in \n\n```\nActiveRecord::UnknownAttributeError (unknown attribute: first_name):\n```\n\nbut if I try the \"rails way\"\n\n```\n<% form.semantic_fields_for :author do |author| %>\n  <%= author.inputs :first_name, :last_name, :name => \"Author\" %>\n<% end %>\n```\n\neverything is fine.\n\nbtw: in my special case, I used a polymorphic has_one relationship, don't know if this matters.\n\nanyway, thanks for this great gem!\n Can you do a quick experiment and see if a similar error happens on non polymorphic association as well?\n Would like some help clarifying this please!\n That one-liner works for me on a simple belongs_to association (non-polymorphic)\n Ok, I think this is related to some other issues with polymorphic. The workaround (from memory) is to use the block version of `inputs()` rather than the short-hand one-liner, and specifying the right options to get what you need. Please confirm.\n\nIf a patch can't be figured out, we obviously need to fail a bit more gracefully on this to assist people.\n @farnoy, can you confirm that you were able to get this to work with the block form (`inputs :for => :author do ... end`)? This will help narrow down a test case to find this bug. If I haven't heard anything in a week or so I'll close this given it's now 2\u20133 months old.\n @farnoy I've also recently committed some changes to master in issue #511 which may or may not help. If you have time, bundling from master with the `:git` option might help clarify. \n  Rails supports :disable_with => \"Text to display on button while submitting...\" as an option to the form.submit and submit_tag methods.\n\nThis implementation is the same as is used in Rails 3 and hooks in to the rails.js stuff just fine.\n\nProbably not compatible with old school non unobtrusive Rails 2 stuff though.\n I'm going to sit on this until we drop 2.x support (which is actually really soon).\n Closing.\n\nCurrently this works on input_html:\n\n<pre>f.commit_button :button_html => { :disable_with => 'Aguarde...' }</pre>\n Ok that's cool. A statement about it in the docs would help though as this is quite obscure.\n @dbackeus :button_html is briefly mentioned in the README and well documented in the refactor I'm doing (see Formtastic::Helpers::ButtonsHelper and #commit_button in master). If you think anything further will be needed, would love a patch or even specific suggestions in this thread will do. Documentation is a big deal to me in v2.\n Well, optimally I would still implement the :disable_with option and just provide an example with that in the README. Keeping in mind the \"principle of least surprise\" design we're used to in Ruby. If it works in Rails I hope it to work the same way in Formtastic.\n\nEspecially given that going the route of :button_html => { :data-disable-with => \"xxx\" } requires knowledge about the implementation details of what Rails actually does when using the disable_with option. \n\nBut if you keep it that way adding that option to your existing commit_button example in the README would probably suffice. Allowing people to find it through cmd+f with \"disable\" in their browser / text-editor (which is how I usually go about finding this kind of stuff).\n Re-opening until this can be made clear.\n I believe the example in the documentation is incorrect. The class should be data-disable-with and not disable_with.\n\nThus also remaining incompatible with the Rails api even if you flatten out the namespacing (which doesn't sound like a bad idea to me btw).\n  Hi,\n\nI've created a Rails ticket about implementing a custom form generator into the scaffold generator. I hope to end up with code something like this:\n\nconfig.generators do |g|\n  g.form_framework :formtastic\nend\n\nhttps://rails.lighthouseapp.com/projects/8994/tickets/6082-generator-allowing-for-a-custom-form-framework-eg-formtastic\n\nWe could then implement the current Formtastic generator as one of the invoked generators. Anyone have any feedback / would like to help me out?\n\nJack\n I'll support anything I need to on the Formtastic side to make this happen, but I don't have time to also work on the Rails side. Would be a great addition.\n Just read Jos\u00e9's update on the Rails ticket. Looks like it's just a patch or two on our side to do what simple form does.\n I'd no idea simple_form could do that. Definitely worth implementing. Unrelated but do you think it's possible that Jos\u00e9 Valim is in fact an army of coders?\n @justinfrench, what you think about removing formtastic:form generator?\n\nUsing the same strategy of simple form, the scaffold generator will use formtastic.\n I'm working on it right now\n  This is the first release where we've made some critical changes to the CSS files, and I'm wondering how (other than with documentation) we can warn people that they need to upgrade. In this case, upgrading means re-running the generator and committing/merging the changes.\n\nI was thinking maybe we can puts a message as the Rails server boots up, warning if our CSS file and the one stored in public don't match.\n\nThoughts? Patches?\n I think this warning should be on gem install like on RSpec because some people (including me) changes the formtastic stylesheet and this warning will be shown on everytime I start my server.\n\nWhat you think?\n You're not using formtastic.css in a supported way :)\n My formtastic styles behaves in a totally different way than original style due to my application css framework.\n\nI can change the name of my stylesheet but this is not the best solution.\n\nAnother issue can occur for users which convert the style to sass/scss (including me).\n\nI like the way of RSpec showed the upgrade notice from 1.x to 2.x\n Yeah, renaming formtastic.css to forms.css or similar would be ideal here, since you're effectively forking, but this doesn't need to be a big deal (the changes to assets in Rails 3.1 will probably negate this).\n\nSo, an upgrade notice would work for me also.\n Nice, I will patch this.\n This is the only item left for 1.2. We can bump it out, or we can wait, I'm flexible.\n Please, do the patch and release. I'm out of time :/\n Bumping out to 2.0, we'll find out what happens with the new assets stuff. I can't find anything in the gemspec documentation, and I just don't care enough!\n  It'd be nice to add this, probably with JS fallback support.\n  Browers don't support it, but maybe there's an opportunity to do some fallback to JS, but I'm not keen to jump into JS just yet.\n Are you thinking to add the javascript to gem or just support this input type to _user_ add the support?\n I've been thinking about some JS in 2.0, so if that happens, then we're open to the possibility of adding stuff like this in. HTML5 forms work best with fallbacks.\n Nice. I can help with some javascript stuff ;)\n How is this any different from implementing a textarea with a drop in JS editor or any other standard element that is popularly re-rendered with javascript?   IMHO, formtastic should just output what is the accepted html markup for the field, and leave it to the browser to render it, or the end developer to choose how to render it.\n\nExample:\n  &lt;input name=\"color_hex\" type=\"color\" /&gt; \n  No rush on this because browser support is sparse, but for completeness, feels like we should explore what this looks like. Off the top of my head, something like this...\n\n```\nf.input :when, :as => :date\n```\n\n... could be brought up to date with a configuration preference to support either HTML5 input, Formtastic's classic (although over-engineered) solution, or Rails' awful built-in one that everyone seems to love.\n\nMore thought needs to be put into how we support every HTML5 date picker format (date, month, week, time, datetime, datetime-local), all the attributes, etc.\n (sorry for spam - don't know how else to subscribe for updates to an issue)\n Would be great to have support for 12-hour (AM/PM) datetime input as well.\n @justinfrench, are we starting to use javascript on 2.1?\n I'm using like that:\n\n``` erb\n<%= f.input :date, as: :string %>\n\n<script>\n  $('#object_date').datepicker();\n</script>\n```\n\nIt works fine for me. What have you in your mind?\n Can you give some advice on what those easy work arounds are for rails 3.1?\n\nThanks in advance...\n I'm guessing about not do that recently.\n\nSome people uses prototype, others query, others exotic frameworks (exotic only for small apps) like YUI and ExtJS.\n\nWe can make a wiki page telling how to use custom date pickers like my first suggestion (for jQuery UI).\n The jQueryUI datepicker controls (and jquery-ui-timepicker-addon) work fine (at least in Rails 3.1) with formtastic.  I've also been doing a bit with jquery-mulitpleselect and it's working fine with formatastic as well.\n\nAll said, it would be nice to see sexy date time controls built into formtastic.\n Please, please! I'd be so excited to have a simple-to-summon widget like Basecamp uses (GUI calendar for date, plus integrated 12-hour drop downs for hour/minute/am-pm). I don't care much for the slider time-select attempts I've seen while searching for my idea of a perfect datetimeselect widget\n Thanks, Justin. I understand and respect your philosophy. I got carried away for a moment there with optimism that my narrow needs were going to be answered by what I realize is intended to be a broad and unconstrained foundation. I really do love what you are doing with Formtastic so I'll accept it for what it is and continue to work toward my idea of the ideal datetime input widget. I appreciate that you took the time to reply.\nSteve\n  I didn't this before but I know this is possible\n I don't care enough about this, so if you want it, go for it, otherwise we should just close it up :)\n I will check that this weekend\n Bumped to 2.0\n\nKeep open to remember ;)\n I changed the generator today and I have to test with a running application to be sure that's ok.\n\nI will do this before releasing 2.0\n  There was a bug I ran into where \"`inputs_for_nested_attributes`\" was exiting out of the block if the associated model had more then one record associated with it.\n\nThis was due to it using a proc and calling \"`return`\" inside the `proc`.\n\nI have a fix up in [my fork](http://github.com/brianjlandau/formtastic), on both my \"`master`\" branch and my \"`bug-fix-for-inputs_for_nested_attributes`\" branch\n There are also tests associated with this patch.\n Looks good, tagged with 'bug', '1.0' and 'needs review' . Anyone else want to chime in?\n +1 for merging. Good fix for recursivly calling inputs_for_nested_attributes.\n pulled in\n I would reopen that. I have the same behavior, and I had to do:\n\n```\n<% @task.task_details.each do |task_detail| %>\n  <%= f.semantic_fields_for :task_details, task_detail do |td| %>\n    <%= td.input :abstract, :label => \"xxx\" %>\n  <% end %>\n<% end %>   \n```\n\ninstead of:\n\n```\n  <%= f.semantic_fields_for :task_details do |td| %>\n    <%= td.input :abstract, :label => \"xxx\" %>\n  <% end %>\n```\n\nThe latter is showing ONLY ONE record from child collection.... :(\n I just ran into @warden's issue today, and would like to ask if this can be re-opened. \n\n`field_for` in Rails _does_ iterate over members of association. `semantic_fields_for` should mirror `fields_for` behavior.\n Formtastic works fine. While I was working on the test case for this, I found bug in my own code.\n\nSorry for the noise and thanks for great response.\n  why does formtastic enter the size of the input feld?\n the column length or the default config\n is there a setting to disable that?\n doesn't make sense but you can do this:\n\n<pre>&lt;%= f.input :field, :input_html => { :maxlength => nil } %></pre>\n The reason I did it was because I found that text fields fell into one of two categories in my own designs:\n1. they had a short size/limit (eg 4), for something like a zip code, so should be presented as such\n2. they had a long limit (eg 255, the Rails default), and should be presented \"big\" in the form. 255 isn't an appropriate size, so we cap those at 50 or something.\n\nThe width of inputs should be done with CSS (it's a presentation thing), and CSS will override these attribute values. They're simply there to provide some kind of presentation that makes sense when the form is presented unstyled.\n\nAre they causing you problems? If so, please go into detail.  Closing this ticket for now.\n Justin, to your point #1, zip codes are have a length of 5 in the US.  When I upgraded to 2.0.2, it has started restricting me to a max length of 4.  I can't seem to get past this other than to hardcode the :maxlength into the tag which seems silly.\n\nI wasn't having this problem in v1.2.3.\n  It would be great if formtastic could generate dt + label, with the dd in place of a usual li.\n There's a fork out there that allows alternate rendering engines to be put in place, and one way or another, Formtastic will be made less opinionated about markup sometime between 1.0 and 2.0. I'm going to close this specific issue however, because it's not in the forseeable future.\n I wonder if this might be worth considering again at this point now that 2.0.0.rc2 is out?\n\nI would also agree that definition lists (hashes) are more semantic than ordered lists (arrays) to define labels and their values. See e.g. this discussion here: http://stackoverflow.com/questions/519234/why-use-definition-lists-dl-dd-dt-tags-for-html-forms-instead-of-tables\n  I like how the commit_button automatically displays \"create\" or \"update\" depending on the state of the model it is attached to.  However, I generally only want the button to display \"create\" or \"update\" as opposed to \"create some_really_ugly_class_name\" or \"update some_really_ugly_class_name.\"  I can't seem to find any options for keeping the \"create | update\" but not including the model name (if there is already a way to do this, my apologies).\n\nI think it would be nice if an option could be passed in so the model name was not displayed on the button.\n\nI've been using this slight alteration of commit_button: http://pastie.org/817718\n Never mind my last comment... doesn't make sense if your sharing a partial between states... you could use i18n which would solve the problem.\n The preferred way to do this is with i18n.  An alternative is to specify the label in the view:\n\n```\nf.commit_button :label => (params[:action] == \"new\" ? \"Create\" : \"Update\")\n```\n\nModifying the code is also a perfectly good solution :)\n\nI'm not inclined to add any more features to the buttons until the existing work is complete, closing this issue for now.\n So `commit_button` still doesn't care 'bout I18n. I have these lines in my locale (in Russian, this is just an example).\n\n``` yml\n  helpers:\n    # Default translation keys for submit FormHelper\n    submit:\n      create: 'Create %{model}'\n      update: 'Update %{model}'\n      submit: 'Save %{model}'\n```\n\nBut nothing happens. It feels wrong because locales are there for it.\nWhy do we need redundant logic in the views to fill labels?\n\nGuess I should use good-old-plain `f.submit`\n  As you may know, screen readers don't read any non form-related tags when in forms mode. That means both inline hints and inline errors will be ignored by screen readers, since they're inside paragraph tags.\n\nThe solution would be to put them inside labels. I guess there are at least two choices.\n\nWrapping them inside the element's label:\n    <label for=\"input\">My label <span class=\"inline-errors>My error</span></label>\n\nThis one makes both markup and CSS quite complicated.\n\nThe other one would be to use another label:\n    <label for=\"input\">My label</label><input id=\"input\" /><label for=\"input\" class=\"inline-errors\">My error</label>\n\nI've found an article about [multiple labels, errors and screen readers](http://www.456bereastreet.com/archive/200809/multiple_form_labels_and_screen_readers/). I'm not sure if the screen reader support it mentions still applies (it's a year and a half old after all).\n\nThanks.\n Still valid for recent screen readers?\n I don't know any screen readers or which is the most used.\n   (not for 1.0)\n I've made a new \"buttons\" branch with my efforts from RailsCamp#6, updated to work with master and Rails 3 while at RailsCamp#8. Still not convinced that I've got it all right, but it's mergable into master at least.\n What's left? How can I help?\n I don't like the solution or the API yet... this was an excersize in bringing the branch up to master. what I'm trying to say is that I don't think I found the right balance in the DSL and the presentation, and I plan to revisit this a lot, but I'm always keen for feedback before I go and hack up massive chunks of code.\n What exactly do you mean by \"pretty buttons\"?  Are you talking about the styling of &lt;button&gt; elements?\n Any progress on this? Is there any way to create `<button \u2026 >` tags rather than `<input type=\"submit\" \u2026 >`?\n Hey Justin, \n\nThe activo theme will greatly benefit from this feature, as it uses the Button element. The output use case would be: \n\n> button class=\"button\" type=\"submit\">\n>  img src=\"stylesheets/themes/activo/images/icons/tick.png\" alt=\"Save\"> Save\n> /button>\n\nSo maybe the ability to pass a block or something that can override the inner content? \n \\o/\n See #779 for a partial implementation, closing.\n", "text_all_count": 49649, "text_word_token": ["I", "have", "the", "following", "in", "my", "model", "ruby", "validates", "role", "inclusion", "First", "Chair", "Second", "Chair", "Is", "there", "a", "way", "to", "reflect", "on", "the", "inclusion", "options", "and", "use", "them", "as", "the", "collection", "for", "the", "select", "input", "I", "find", "a", "complex", "way", "of", "doing", "it", "NUMBER", "Is", "their", "an", "easier", "way", "ruby", "irb", "JSON", "NUMBER", "parse", "MatterClient", "NUMBER", "validators_on", "role", "NUMBER", "select", "v", "v", "NUMBER", "class", "ActiveModel", "Validations", "InclusionValidator", "NUMBER", "first", "NUMBER", "to_json", "options", "in", "First", "Chair", "Second", "Chair", "I", "also", "made", "a", "method", "of", "it", "ruby", "class", "MatterClient", "NUMBER", "def", "self", "NUMBER", "options_for", "field", "options", "Array", "NUMBER", "new", "inclusion_validators", "self", "NUMBER", "validators_on", "field", "NUMBER", "select", "v", "v", "NUMBER", "class", "ActiveModel", "Validations", "InclusionValidator", "inclusion_validators", "NUMBER", "each", "do", "inclusion_validator", "options", "JSON", "NUMBER", "parse", "inclusion_validator", "NUMBER", "to_json", "options", "in", "end", "options", "end", "NUMBER", "end", "In", "a", "form", "it", "s", "quite", "likely", "that", "there", "will", "be", "multiple", "labels", "for", "different", "field", "of", "the", "same", "object", "NUMBER", "So", "it", "would", "make", "sense", "to", "use", "the", "i", "NUMBER", "n", "gem", "s", "ability", "to", "perform", "bulk", "lookups", "NUMBER", "Here", "a", "lookup", "for", "a", "single", "attribute", "of", "the", "User", "class", "which", "causes", "a", "lookup", "to", "the", "memcache", "store", "i", "m", "use", "NUMBER", "NUMBER", "I", "NUMBER", "n", "NUMBER", "t", "activerecord", "NUMBER", "attributes", "NUMBER", "user", "NUMBER", "firstname", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "NUMBER", "Cache", "read", "i", "NUMBER", "n", "en", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "NUMBER", "Cache", "write", "i", "NUMBER", "n", "en", "NUMBER", "NUMBER", "Firstname", "If", "the", "user", "form", "has", "NUMBER", "field", "that", "means", "NUMBER", "queries", "to", "the", "underlying", "storage", "which", "may", "be", "reasonably", "fast", "if", "it", "s", "an", "in", "process", "memory", "cache", "but", "incurs", "unnecessary", "latency", "if", "it", "s", "a", "memcache", "on", "the", "different", "host", "even", "if", "it", "s", "on", "the", "same", "server", "rack", "NUMBER", "Instead", "the", "following", "can", "be", "use", "and", "cached", "in", "the", "form", "builder", "NUMBER", "NUMBER", "I", "NUMBER", "n", "NUMBER", "t", "activerecord", "NUMBER", "attributes", "NUMBER", "user", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "NUMBER", "Cache", "read", "i", "NUMBER", "n", "en", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "DEBUG", "NUMBER", "Cache", "write", "i", "NUMBER", "n", "en", "NUMBER", "NUMBER", "salutation", "Salutation", "updated_at", "Updated", "at", "birth_name", "Birth", "name", "fullname", "Name", "name_affix", "Name", "affix", "title", "Title", "timezone", "Timezone", "name_prefix", "Name", "prefix", "lastname", "Lastname", "direct_permissions", "direct", "permissions", "telephone", "Telephone", "password", "Password", "firstname", "Firstname", "email", "EMail", "created_at", "Created", "at", "fax", "Fax", "group", "Groups", "That", "way", "only", "one", "lookup", "per", "scope", "and", "class", "be", "needed", "when", "a", "form", "be", "build", "NUMBER", "This", "behavior", "probably", "should", "be", "optional", "as", "not", "all", "i", "NUMBER", "n", "stores", "might", "support", "bulk", "lookups", "NUMBER", "With", "the", "following", "code", "ruby", "app", "models", "user", "NUMBER", "rb", "class", "User", "TAG", "profile", "do", "profile_f", "profile_f", "NUMBER", "input", "some_field", "When", "I", "call", "this", "code", "I", "get", "the", "same", "error", "as", "in", "issue", "NUMBER", "profile_id", "do", "not", "exist", "NUMBER", "The", "workaround", "be", "to", "call", "the", "following", "code", "but", "I", "find", "it", "pretty", "ugly", "haml", "semantic_form_for", "user", "do", "f", "f", "NUMBER", "inputs", "Profile", "for", "profile", "f", "NUMBER", "object", "NUMBER", "profile", "Profile", "NUMBER", "new", "do", "profile_f", "profile_f", "NUMBER", "input", "some_field", "how", "can", "I", "make", "reset", "button", "for", "form", "NUMBER", "Hi", "I", "m", "not", "very", "fond", "of", "the", "first", "argument", "of", "the", "input", "function", "call", "on", "the", "builder", "be", "mandatorily", "a", "symbol", "NUMBER", "Now", "let", "s", "say", "I", "have", "a", "string", "array", "of", "attributes", "from", "the", "form", "object", "and", "i", "want", "to", "generate", "an", "input", "field", "for", "them", "I", "have", "to", "make", "them", "a", "symbol", "first", "otherwise", "the", "label", "translation", "will", "not", "be", "loaded", "NUMBER", "This", "represents", "a", "breach", "of", "logic", "from", "the", "previous", "version", "and", "the", "rails", "formtag", "helpers", "which", "still", "accept", "the", "method", "as", "be", "a", "string", "NUMBER", "Why", "can", "t", "we", "defined", "the", "optional", "label", "as", "an", "option", "sent", "in", "the", "options", "hash", "of", "the", "call", "as", "we", "use", "to", "do", "in", "the", "rails", "NUMBER", "version", "I", "guess", "that", "works", "still", "So", "the", "exact", "problem", "be", "when", "I", "call", "TAG", "TAG", "f", "NUMBER", "input", "pron", "as", "select", "collection", "NUMBER", "TAG", "TAG", "the", "label", "from", "the", "element", "will", "be", "pron", "and", "not", "Prontastic", "which", "be", "the", "translation", "I", "have", "for", "it", "under", "formtastic", "NUMBER", "labels", "NUMBER", "pron", "NUMBER", "I", "ve", "change", "it", "since", "then", "to", "a", "symbol", "and", "the", "translation", "be", "correctly", "loaded", "NUMBER", "Hey", "justinfrench", "The", "version", "where", "that", "was", "work", "was", "the", "NUMBER", "NUMBER", "The", "commit", "button", "has", "be", "remove", "NUMBER", "Thus", "where", "can", "I", "find", "documentation", "which", "outlines", "how", "to", "upgrade", "to", "the", "latest", "version", "of", "Formtastic", "I", "d", "add", "that", "the", "buttons", "helper", "deprecation", "came", "has", "a", "total", "surprise", "to", "me", "didn", "t", "see", "any", "deprecation", "warning", "anywhere", "be", "it", "possible", "to", "generate", "form", "into", "clipboard", "with", "copy", "key", "in", "haml", "format", "nice", "it", "works", "small", "correction", "Post", "copy", "has", "to", "be", "Post", "copy", "Using", "gem", "formtastic", "NUMBER", "rc", "Say", "I", "set", "this", "in", "my", "config", "initalizers", "formtastic", "NUMBER", "rb", "to", "Formtastic", "FormBuilder", "NUMBER", "required_string", "TAG", "Foo", "TAG", "Now", "I", "do", "the", "following", "form", "semantic_form_for", "redirect", "do", "f", "f", "NUMBER", "error_messages", "f", "NUMBER", "inputs", "do", "f", "NUMBER", "input", "source", "label", "Source", "Path", "f", "NUMBER", "input", "destination", "f", "NUMBER", "actions", "do", "f", "NUMBER", "submit", "Pretty", "basic", "right", "The", "output", "be", "a", "bit", "strange", "though", "NUMBER", "The", "label", "for", "source", "be", "this", "Source", "Path", "TAG", "Foo", "TAG", "HTML", "be", "converted", "to", "entities", "and", "display", "on", "the", "screen", "NUMBER", "The", "label", "for", "destination", "be", "this", "DestinationFoo", "Foo", "be", "of", "course", "bold", "NUMBER", "I", "be", "not", "sure", "which", "output", "be", "correct", "but", "when", "the", "label", "string", "was", "guessed", "by", "formtastic", "it", "considers", "Formtastic", "FormBuilder", "NUMBER", "required_string", "to", "be", "html_safe", "however", "when", "I", "manual", "set", "label", "Something", "it", "do", "not", "consider", "it", "to", "be", "html_safe", "NUMBER", "Changing", "the", "initializer", "to", "Formtastic", "FormBuilder", "NUMBER", "required_string", "TAG", "Foo", "TAG", "NUMBER", "html_safe", "works", "as", "expected", "so", "the", "fix", "be", "simple", "but", "I", "figured", "I", "would", "report", "this", "issue", "as", "it", "could", "indicate", "an", "a", "miss", "or", "extra", "html_safe", "call", "NUMBER", "I", "will", "leave", "it", "up", "to", "you", "to", "decide", "which", "of", "the", "two", "behaviors", "should", "be", "considered", "correct", "NUMBER", "David", "p", "NUMBER", "s", "even", "though", "the", "default", "value", "be", "TAG", "TAG", "according", "to", "the", "documentation", "it", "acts", "like", "its", "html_safe", "NUMBER", "Hi", "i", "ve", "made", "a", "custom", "input", "for", "check_boxes", "with", "nested", "set", "awesome_nested_set", "because", "i", "could", "not", "find", "a", "way", "to", "display", "the", "nested", "set", "with", "check_boxes", "input", "LINK", "there", "be", "a", "way", "to", "do", "this", "in", "default", "formtastic", "lib", "regards", "Hi", "Justin", "if", "you", "need", "this", "in", "the", "core", "i", "can", "apply", "a", "pull", "request", "but", "i", "really", "dont", "knnow", "if", "this", "be", "neccesary", "to", "be", "in", "core", "of", "formtastic", "regards", "Basically", "I", "have", "a", "tiered", "payment", "system", "setup", "for", "the", "buying", "of", "attraction", "or", "event", "tickets", "NUMBER", "So", "an", "order", "can", "have", "NUMBER", "x", "Family", "Pass", "or", "NUMBER", "x", "Child", "and", "NUMBER", "x", "Adult", "NUMBER", "Type", "thing", "NUMBER", "Family", "Pass", "Child", "and", "Adult", "be", "all", "Prices", "in", "the", "below", "structure", "R", "NUMBER", "Event", "has_many", "Orders", "R", "NUMBER", "Event", "has_many", "Prices", "R", "NUMBER", "Order", "has_many", "Prices", "through", "TicketPrice", "Event", "name", "string", "description", "text", "Price", "name", "string", "price", "float", "description", "text", "Order", "contact_name", "string", "contact_email", "string", "TicketPrice", "quantity", "integer", "price_id", "integer", "order_id", "integer", "I", "essentially", "want", "a", "form", "where", "by", "the", "ticket", "details", "be", "entered", "such", "as", "Payment", "Details", "Email", "etc", "NUMBER", "And", "then", "each", "ticket", "price", "for", "that", "event", "be", "listed", "with", "a", "field", "for", "quantity", "next", "to", "each", "one", "NUMBER", "i", "NUMBER", "e", "NUMBER", "an", "input", "ability", "for", "the", "R", "NUMBER", "relation", "NUMBER", "See", "LINK", "css", "NUMBER", "html", "form", "This", "would", "be", "desired", "behavior", "but", "I", "do", "not", "see", "it", "implement", "NUMBER", "Is", "it", "or", "be", "I", "just", "miss", "something", "Addresses", "NUMBER", "LINK", "A", "helpful", "exception", "message", "speeds", "up", "development", "NUMBER", "while", "use", "NUMBER", "stable", "and", "having", "one", "of", "my", "field", "be", "time", "data", "type", "NUMBER", "The", "same", "be", "true", "for", "type", "date", "except", "it", "can", "t", "find", "text_field_date", "I", "m", "use", "Rails", "NUMBER", "btw", "Sorry", "this", "appears", "to", "be", "an", "issue", "with", "the", "twitter", "bootstrap", "form", "builder", "rather", "than", "formtastic", "NUMBER", "Such", "a", "shame", "you", "don", "t", "bundle", "a", "native", "builder", "for", "twitter", "bootstrap", "NUMBER", "Would", "certainly", "make", "life", "easier", "As", "in", "it", "would", "be", "a", "much", "better", "default", "instead", "of", "having", "to", "write", "all", "the", "styles", "yourself", "NUMBER", "Twitter", "Bootstrap", "has", "had", "an", "incredibly", "wide", "adoption", "i", "d", "be", "surprised", "if", "anyone", "was", "against", "it", "NUMBER", "justinfrench", "true", "but", "most", "of", "the", "work", "has", "be", "do", "for", "you", "already", "LINK", "bootstrap", "tree", "bootstrap", "NUMBER", "rails", "NUMBER", "NUMBER", "formtastic", "NUMBER", "NUMBER", "Seems", "great", "too", "NUMBER", "I", "m", "worried", "about", "backwards", "compatibility", "on", "cases", "like", "custom", "methods", "use", "as", "date", "NUMBER", "Are", "you", "planning", "a", "major", "release", "for", "this", "justinfrench", "my", "bad", "NUMBER", "I", "was", "thinking", "you", "be", "change", "the", "default", "behavior", "but", "you", "be", "not", "NUMBER", "In", "this", "case", "it", "s", "fine", "justinfrench", "Getting", "on", "a", "plane", "right", "now", "i", "can", "take", "a", "look", "tonight", "tomorrow", "NUMBER", "NUMBER", "Looks", "great", "only", "issue", "I", "see", "be", "with", "the", "commit", "message", "which", "state", "as", "datetime", "becomes", "as", "time_select", "when", "its", "actually", "renamed", "to", "datetime_select", "I", "have", "two", "models", "as", "follows", "ruby", "class", "User", "include", "Mongoid", "Document", "has_one", "contact", "autosave", "true", "NUMBER", "end", "class", "Contact", "include", "Mongoid", "Document", "belongs_to", "user", "contact", "information", "for", "user", "NUMBER", "end", "In", "my", "form", "I", "have", "the", "following", "code", "NUMBER", "haml", "semantic_form_for", "user", "html", "class", "form", "horizontal", "do", "f", "f", "NUMBER", "input", "contact", "as", "select", "It", "be", "giving", "me", "an", "error", "of", "undefined", "method", "user_id", "for", "TAG", "Is", "there", "something", "special", "I", "need", "to", "be", "doing", "here", "The", "only", "way", "it", "works", "be", "if", "I", "reverse", "it", "NUMBER", "meaning", "if", "I", "do", "ruby", "class", "User", "belongs_to", "contact", "NUMBER", "class", "Contact", "has_one", "user", "Confirmed", "this", "be", "happening", "in", "both", "active", "recored", "and", "in", "mongoid", "NUMBER", "Models", "ruby", "class", "User", "TAG", "I", "can", "certainly", "do", "my", "best", "NUMBER", "Thanks", "justin", "NUMBER", "I", "will", "do", "some", "test", "and", "dig", "into", "the", "code", "when", "I", "have", "time", "NUMBER", "Sorry", "for", "the", "late", "response", "NUMBER", "Justin", "Jason", "I", "wanted", "to", "provide", "another", "data", "point", "and", "let", "you", "know", "I", "be", "run", "into", "a", "similar", "issue", "w", "Mongoid", "class", "User", "include", "Mongoid", "Document", "has_one", "profile", "class_name", "Profile", "inverse_of", "nil", "end", "in", "my", "form", "f", "NUMBER", "input", "profile", "as", "select", "collection", "Profile", "NUMBER", "order_by", "created_at", "desc", "NUMBER", "limit", "NUMBER", "result", "undefined", "method", "user_id", "for", "User", "NUMBER", "x", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "de", "NUMBER", "ActiveRecord", "I", "be", "use", "mongoid", "but", "test", "and", "confirmed", "the", "same", "issue", "with", "AR", "NUMBER", "Sent", "from", "my", "iPhone", "On", "Apr", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Simon", "COURTOISreply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "ActiveRecord", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "justinfrench", "That", "s", "why", "I", "opened", "NUMBER", "because", "it", "was", "not", "relate", "to", "the", "selection", "of", "the", "contact", "but", "only", "field", "for", "it", "I", "would", "go", "for", "user", "contact", "id", "the", "accepts_nested_attributes", "seems", "legit", "NUMBER", "I", "think", "that", "may", "be", "the", "best", "posible", "solution", "NUMBER", "I", "be", "going", "to", "look", "into", "how", "a", "standard", "form", "handles", "this", "as", "well", "NUMBER", "I", "ve", "a", "method", "which", "returns", "objects", "NUMBER", "map", "p", "p", "NUMBER", "full_info", "p", "NUMBER", "id", "passing", "that", "method", "to", "collection", "on", "a", "select", "field", "it", "doesn", "t", "set", "the", "name", "on", "the", "select", "but", "just", "the", "ids", "NUMBER", "It", "seems", "that", "you", "consider", "only", "name", "attributes", "not", "others", "Same", "or", "very", "similar", "issue", "here", "NUMBER", "We", "re", "in", "a", "form", "for", "a", "User", "thas", "has_many", "mailing_lists", "through", "mailing_list_memberships", "NUMBER", "The", "User", "MailingList", "and", "MailingListMembership", "objects", "already", "exist", "in", "the", "db", "i", "NUMBER", "e", "NUMBER", "they", "be", "not", "new_record", "In", "this", "case", "ruby", "form", "NUMBER", "input", "mailing_lists", "as", "check_boxes", "collection", "MailingList", "NUMBER", "order", "name", "the", "right", "check_boxes", "be", "selected", "but", "the", "label", "of", "each", "check", "box", "be", "the", "name", "attribute", "method", "we", "d", "like", "it", "to", "be", "to_s", "In", "this", "case", "ruby", "form", "NUMBER", "input", "mailing_lists", "as", "check_boxes", "collection", "MailingList", "NUMBER", "order", "name", "NUMBER", "collect", "m", "m", "NUMBER", "to_s", "m", "NUMBER", "id", "the", "labels", "be", "ok", "but", "no", "check", "boxes", "be", "selected", "As", "a", "workaround", "or", "even", "a", "better", "solution", "this", "works", "as", "expected", "ruby", "form", "NUMBER", "input", "mailing_lists", "as", "check_boxes", "collection", "MailingList", "NUMBER", "order", "name", "member_label", "to_s", "When", "use", "the", "time_zone", "input", "the", "result", "be", "like", "TAG", "GMT", "NUMBER", "NUMBER", "Mountain", "Time", "US", "amp", "Canada", "TAG", "puts", "the", "value", "should", "be", "Mountain", "Time", "US", "Canada", "otherwise", "saving", "it", "in", "rails", "it", "won", "t", "understand", "it", "and", "throw", "an", "error", "for", "an", "undefined", "time", "zone", "when", "it", "s", "loaded", "Tests", "update", "to", "all", "pass", "when", "use", "rails", "edge", "NUMBER", "Biggest", "change", "was", "allowing", "stubs", "for", "error", "object", "to", "match", "on", "either", "string", "or", "symbol", "since", "the", "tags", "in", "rails", "edge", "store", "the", "method", "name", "as", "strings", "now", "and", "index", "into", "the", "error", "object", "use", "strings", "NUMBER", "The", "error", "object", "calls", "to_sym", "on", "any", "index", "though", "so", "object", "NUMBER", "error", "abc", "be", "equivalent", "to", "object", "NUMBER", "error", "abc", "justinfrench", "hmm", "not", "sure", "what", "happened", "with", "my", "update", "to", "have", "it", "reference", "rails", "on", "github", "instead", "of", "the", "local", "path", "it", "seems", "to", "have", "merge", "in", "with", "pull", "request", "NUMBER", "or", "something", "NUMBER", "Let", "me", "know", "if", "its", "usable", "as", "be", "or", "whether", "I", "need", "to", "fix", "something", "up", "NUMBER", "justinfrench", "sounds", "good", "to", "me", "I", "m", "use", "formtastic", "NUMBER", "NUMBER", "I", "have", "field", "required", "in", "the", "model", "but", "in", "my", "form", "all", "of", "the", "field", "be", "showing", "as", "required", "without", "me", "specify", "anything", "NUMBER", "My", "model", "basically", "looks", "like", "this", "class", "Speakerform", "TAG", "speakers", "hire", "method", "post", "do", "f", "TAG", "Event", "details", "do", "TAG", "f", "NUMBER", "object", "NUMBER", "interested_label", "as", "select", "collection", "Page", "NUMBER", "speakers", "NUMBER", "all", "NUMBER", "map", "title", "I", "m", "not", "sure", "selected", "params", "speaker", "NUMBER", "more", "similar", "field", "TAG", "TAG", "Your", "info", "class", "your", "info", "do", "TAG", "f", "NUMBER", "object", "NUMBER", "first_name_label", "NUMBER", "more", "field", "here", "NUMBER", "TAG", "TAG", "TAG", "I", "had", "to", "manually", "set", "required", "false", "true", "NUMBER", "no", "biggie", "NUMBER", "but", "sounds", "like", "that", "shouldn", "t", "happen", "NUMBER", "Also", "NUMBER", "btw", "I", "created", "a", "mailer", "that", "sends", "out", "all", "my", "question", "or", "labels", "NUMBER", "answers", "on", "the", "form", "and", "I", "did", "something", "like", "this", "NUMBER", "Could", "be", "cool", "to", "incorporate", "something", "similar", "for", "labels", "Like", "if", "field_label", "be", "defined", "in", "the", "model", "use", "that", "NUMBER", "TAG", "TAG", "TAG", "TAG", "TAG", "Have", "you", "checked", "the", "all_fields_required_by_default", "setting", "in", "your", "formtastic", "initializer", "ruby", "Should", "all", "field", "be", "considered", "required", "by", "default", "Rails", "NUMBER", "only", "ignored", "by", "Rails", "NUMBER", "because", "it", "will", "never", "fall", "back", "to", "this", "default", "NUMBER", "Defaults", "to", "true", "NUMBER", "Formtastic", "SemanticFormBuilder", "NUMBER", "all_fields_required_by_default", "true", "I", "have", "a", "date", "field", "as", "the", "following", "ruby", "f", "NUMBER", "input", "birthday", "as", "date", "end_year", "Time", "NUMBER", "now", "NUMBER", "year", "NUMBER", "start_year", "Time", "NUMBER", "now", "NUMBER", "year", "input_html", "class", "input", "medium", "chzn", "select", "deselect", "When", "the", "record", "be", "saved", "I", "get", "the", "following", "instead", "of", "the", "birthday", "field", "be", "filled", "NUMBER", "TAG", "Is", "there", "something", "I", "have", "to", "do", "special", "in", "my", "model", "or", "controller", "I", "did", "look", "in", "the", "docs", "this", "time", "justin", "Hi", "I", "just", "created", "a", "new", "rails", "app", "NUMBER", "and", "be", "use", "formtastic", "NUMBER", "for", "the", "first", "time", "NUMBER", "before", "I", "was", "use", "NUMBER", "x", "NUMBER", "My", "form", "be", "rendered", "correctly", "so", "far", "but", "if", "I", "hit", "the", "reload", "button", "in", "the", "browser", "or", "submit", "the", "form", "with", "error", "the", "required", "markers", "in", "the", "required", "field", "be", "printed", "more", "than", "once", "NUMBER", "In", "fact", "they", "increase", "upon", "every", "reload", "NUMBER", "I", "have", "to", "logout", "restart", "my", "rails", "app", "and", "log", "back", "in", "to", "get", "rid", "of", "them", "NUMBER", "Example", "Form", "Title", "input", "Hit", "Reload", "Title", "input", "Submit", "form", "without", "title", "Title", "input", "Switch", "to", "another", "page", "and", "click", "upon", "new", "foo", "which", "brings", "up", "the", "new", "form", "Title", "input", "Any", "ideas", "I", "just", "run", "into", "the", "exact", "same", "issue", "run", "a", "project", "on", "Rails", "NUMBER", "formtastic", "NUMBER", "I", "m", "revert", "to", "NUMBER", "until", "the", "issue", "be", "correct", "NUMBER", "jan", "NUMBER", "sch", "can", "you", "provide", "an", "application", "that", "reproduces", "the", "issue", "Because", "I", "can", "t", "reproduce", "it", "The", "app", "be", "a", "company", "app", "therefore", "I", "can", "t", "share", "it", "NUMBER", "I", "just", "created", "a", "new", "app", "and", "there", "the", "error", "do", "not", "show", "up", "NUMBER", "I", "ll", "try", "to", "investigate", "this", "more", "next", "week", "NUMBER", "Hopefully", "I", "can", "reproduce", "it", "or", "find", "the", "cause", "NUMBER", "Thanks", "for", "the", "fast", "update", "I", "be", "trying", "to", "generate", "a", "list", "of", "contacts", "and", "I", "want", "the", "input", "to", "display", "a", "value", "of", "contact", "NUMBER", "first_name", "contact", "NUMBER", "last_name", "NUMBER", "When", "I", "use", "the", "following", "code", "I", "get", "the", "value", "of", "each", "contact", "as", "an", "object_id", "NUMBER", "f", "NUMBER", "input", "contacts", "as", "select_inline", "label", "false", "input_html", "class", "inline", "chzn", "select", "data", "placeholder", "Choose", "a", "Contact", "Note", "select_inline", "be", "a", "custom", "input", "nearly", "identical", "to", "the", "orignal", "select", "input", "NUMBER", "My", "mistake", "NUMBER", "I", "was", "looking", "in", "the", "wiki", "and", "should", "have", "pull", "the", "rdoc", "NUMBER", "Sent", "from", "my", "iPhone", "On", "Feb", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Justin", "Frenchreply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Here", "s", "a", "quote", "from", "the", "documentation", "for", "SelectInput", "LINK", "which", "I", "assume", "you", "haven", "t", "read", "but", "please", "help", "me", "clarify", "the", "docs", "if", "it", "simply", "didn", "t", "make", "sense", "to", "you", "The", "way", "on", "which", "Formtastic", "renders", "the", "value", "attribute", "and", "content", "of", "each", "TAG", "tag", "be", "customisable", "through", "the", "member_label", "and", "member_value", "options", "NUMBER", "When", "not", "provide", "we", "fall", "back", "to", "a", "list", "of", "methods", "to", "try", "on", "each", "object", "such", "as", "to_label", "name", "and", "to_s", "which", "be", "defined", "in", "the", "configurations", "collection_label_methods", "and", "collection_value_methods", "see", "examples", "below", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Is", "there", "a", "way", "to", "override", "certain", "parts", "of", "the", "base", "modules", "such", "as", "base", "wrapper", "NUMBER", "rb", "I", "would", "assume", "this", "would", "be", "similar", "to", "overriding", "inputs", "but", "I", "be", "not", "sure", "that", "the", "gem", "looks", "for", "them", "in", "app", "inputs", "NUMBER", "Would", "it", "be", "possible", "to", "author", "a", "gem", "that", "just", "include", "overrides", "the", "original", "input", "types", "but", "still", "relies", "on", "the", "original", "formtastic", "gem", "or", "any", "of", "its", "variants", "Rails", "NUMBER", "Formtastic", "NUMBER", "rc", "Following", "the", "instructions", "on", "Stylesheet", "usage", "in", "Rails", "NUMBER", "results", "in", "the", "Internet", "Explorer", "stylesheets", "always", "be", "include", "and", "rendered", "regardless", "of", "browser", "ruby", "app", "assets", "stylesheets", "application", "NUMBER", "css", "This", "be", "a", "manifest", "file", "that", "ll", "be", "compiled", "into", "application", "NUMBER", "css", "which", "will", "include", "all", "the", "file", "listed", "below", "NUMBER", "Any", "CSS", "and", "SCSS", "file", "within", "this", "directory", "lib", "assets", "stylesheets", "vendor", "assets", "stylesheets", "or", "vendor", "assets", "stylesheets", "of", "plugins", "if", "any", "can", "be", "referenced", "here", "use", "a", "relative", "path", "NUMBER", "You", "re", "free", "to", "add", "application", "wide", "styles", "to", "this", "file", "and", "they", "ll", "appear", "at", "the", "top", "of", "the", "compiled", "file", "but", "it", "s", "generally", "better", "to", "create", "a", "new", "file", "per", "style", "scope", "NUMBER", "require_self", "require_tree", "NUMBER", "require", "formtastic", "ruby", "app", "assets", "stylesheets", "ie", "NUMBER", "css", "require", "formtastic_ie", "NUMBER", "ruby", "app", "assets", "stylesheets", "ie", "NUMBER", "css", "require", "formtastic_ie", "NUMBER", "HTML", "Output", "html", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "Thank", "you", "Justin", "NUMBER", "I", "remove", "require", "tree", "NUMBER", "to", "get", "the", "desired", "behaviour", "in", "development", "but", "in", "production", "on", "Heroku", "anyway", "I", "received", "this", "error", "message", "Sprockets", "Helpers", "RailsHelper", "AssetPaths", "AssetNotPrecompiledError", "ie", "NUMBER", "css", "isn", "t", "precompiled", "NUMBER", "I", "had", "to", "add", "the", "following", "to", "config", "production", "NUMBER", "rb", "ruby", "Precompile", "additional", "assets", "application", "NUMBER", "js", "application", "NUMBER", "css", "and", "all", "non", "JS", "CSS", "be", "already", "add", "config", "NUMBER", "assets", "NUMBER", "precompile", "w", "ie", "NUMBER", "css", "ie", "NUMBER", "css", "If", "you", "think", "this", "be", "not", "an", "isolated", "issue", "and", "may", "help", "others", "I", "could", "add", "some", "concise", "content", "to", "the", "README", "under", "the", "_Stylesheet", "usage", "in", "Rails", "NUMBER", "_", "section", "for", "my", "first", "ever", "open", "source", "contribution", "NUMBER", "seems", "great", "justinfrench", "NUMBER", "I", "have", "some", "custom", "inputs", "which", "stop", "work", "when", "update", "the", "app", "to", "ruby", "NUMBER", "Formtastic", "UnknownInputError", "Al", "the", "app", "s", "specs", "pass", "NUMBER", "On", "the", "surface", "it", "looks", "like", "they", "be", "not", "loading", "NUMBER", "Yes", "it", "worked", "fine", "on", "NUMBER", "Here", "be", "the", "stack", "trace", "It", "be", "the", "custom", "wysiwyg", "that", "be", "cause", "the", "error", "ActionView", "Template", "Error", "Formtastic", "UnknownInputError", "NUMBER", "TAG", "group", "do", "NUMBER", "TAG", "NUMBER", "TAG", "wysiwyg", "NUMBER", "TAG", "wysiwyg", "NUMBER", "TAG", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "input_helper", "NUMBER", "rb", "NUMBER", "in", "rescue", "in", "input_class", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "input_helper", "NUMBER", "rb", "NUMBER", "in", "input_class", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "input_helper", "NUMBER", "rb", "NUMBER", "in", "input", "app", "views", "people", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "block", "in", "_app_views_people__form_html_erb___", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "fieldset_wrapper", "NUMBER", "rb", "NUMBER", "in", "field_set_and_list_wrapping", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "inputs_helper", "NUMBER", "rb", "NUMBER", "in", "inputs", "app", "views", "people", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "_app_views_people__form_html_erb___", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "render_partial", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render_partial", "actionpack", "NUMBER", "lib", "action_view", "helpers", "rendering_helper", "NUMBER", "rb", "NUMBER", "in", "render", "app", "views", "people", "new", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "block", "in", "_app_views_people_new_html_erb___", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "actionpack", "NUMBER", "lib", "action_view", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "fields_for", "actionpack", "NUMBER", "lib", "action_view", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "form_for", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "semantic_form_for", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "with_custom_field_error_proc", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "semantic_form_for", "app", "views", "people", "new", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "_app_views_people_new_html_erb___", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render_with_layout", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "_render_template", "actionpack", "NUMBER", "lib", "action_controller", "metal", "streaming", "NUMBER", "rb", "NUMBER", "in", "_render_template", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "lib", "action_controller", "metal", "renderers", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "lib", "action_controller", "metal", "compatibility", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rendering", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render", "activesupport", "NUMBER", "lib", "active_support", "core_ext", "benchmark", "NUMBER", "rb", "NUMBER", "in", "block", "in", "ms", "Users", "rhulse", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "preview", "NUMBER", "lib", "ruby", "NUMBER", "benchmark", "NUMBER", "rb", "NUMBER", "in", "realtime", "activesupport", "NUMBER", "lib", "active_support", "core_ext", "benchmark", "NUMBER", "rb", "NUMBER", "in", "ms", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "cleanup_view_runtime", "activerecord", "NUMBER", "lib", "active_record", "railties", "controller_runtime", "NUMBER", "rb", "NUMBER", "in", "cleanup_view_runtime", "sunspot_rails", "NUMBER", "lib", "sunspot", "rails", "railties", "controller_runtime", "NUMBER", "rb", "NUMBER", "in", "cleanup_view_runtime", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "implicit_render", "NUMBER", "rb", "NUMBER", "in", "default_render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "mime_responds", "NUMBER", "rb", "NUMBER", "in", "block", "in", "retrieve_response_from_mimes", "actionpack", "NUMBER", "lib", "action_controller", "metal", "mime_responds", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_controller", "metal", "mime_responds", "NUMBER", "rb", "NUMBER", "in", "respond_to", "app", "controllers", "people_controller", "NUMBER", "rb", "NUMBER", "in", "new", "actionpack", "NUMBER", "lib", "action_controller", "metal", "implicit_render", "NUMBER", "rb", "NUMBER", "in", "send_action", "actionpack", "NUMBER", "lib", "abstract_controller", "base", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rendering", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "abstract_controller", "callbacks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_action", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run__", "NUMBER", "__process_action__", "NUMBER", "__callbacks", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "__run_callback", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run_process_action_callbacks", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "run_callbacks", "actionpack", "NUMBER", "lib", "abstract_controller", "callbacks", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rescue", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_action", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "params_wrapper", "NUMBER", "rb", "NUMBER", "in", "process_action", "activerecord", "NUMBER", "lib", "active_record", "railties", "controller_runtime", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "abstract_controller", "base", "NUMBER", "rb", "NUMBER", "in", "process", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "process", "actionpack", "NUMBER", "lib", "action_controller", "metal", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rack_delegation", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "lib", "action_controller", "metal", "NUMBER", "rb", "NUMBER", "in", "block", "in", "action", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "journey", "NUMBER", "lib", "journey", "router", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "journey", "NUMBER", "lib", "journey", "router", "NUMBER", "rb", "NUMBER", "in", "each", "journey", "NUMBER", "lib", "journey", "router", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "hoptoad_notifier", "NUMBER", "lib", "hoptoad_notifier", "rack", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "best_standards_support", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "etag", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "conditionalget", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "head", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "params_parser", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "flash", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "session", "abstract", "id", "NUMBER", "rb", "NUMBER", "in", "context", "rack", "NUMBER", "lib", "rack", "session", "abstract", "id", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "cookies", "NUMBER", "rb", "NUMBER", "in", "call", "ckeditor", "NUMBER", "lib", "ckeditor", "middleware", "NUMBER", "rb", "NUMBER", "in", "call", "activerecord", "NUMBER", "lib", "active_record", "query_cache", "NUMBER", "rb", "NUMBER", "in", "call", "activerecord", "NUMBER", "lib", "active_record", "connection_adapters", "abstract", "connection_pool", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "callbacks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run__", "NUMBER", "__call__", "NUMBER", "__callbacks", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "__run_callback", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run_call_callbacks", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "run_callbacks", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "callbacks", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "reloader", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "remote_ip", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "debug_exceptions", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "show_exceptions", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "rack", "logger", "NUMBER", "rb", "NUMBER", "in", "call_app", "railties", "NUMBER", "lib", "rails", "rack", "logger", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "request_id", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "methodoverride", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "runtime", "NUMBER", "rb", "NUMBER", "in", "call", "activesupport", "NUMBER", "lib", "active_support", "cache", "strategy", "local_cache", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "lock", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "static", "NUMBER", "rb", "NUMBER", "in", "call", "hoptoad_notifier", "NUMBER", "lib", "hoptoad_notifier", "user_informer", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "engine", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "application", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "content_length", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "rack", "log_tailer", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "handler", "webrick", "NUMBER", "rb", "NUMBER", "in", "service", "Users", "rhulse", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "preview", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "httpserver", "NUMBER", "rb", "NUMBER", "in", "service", "Users", "rhulse", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "preview", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "httpserver", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "rhulse", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "preview", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "server", "NUMBER", "rb", "NUMBER", "in", "block", "in", "start_thread", "Rendered", "Users", "rhulse", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "gems", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "template", "rescues", "_trace", "NUMBER", "erb", "NUMBER", "ms", "Rendered", "Users", "rhulse", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "gems", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "template", "rescues", "_request_and_response", "NUMBER", "erb", "NUMBER", "ms", "Rendered", "Users", "rhulse", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "gems", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "template", "rescues", "template_error", "NUMBER", "erb", "within", "rescues", "layout", "NUMBER", "ms", "And", "here", "be", "the", "code", "for", "the", "extenstion", "LINK", "This", "was", "a", "new", "ish", "app", "that", "has", "had", "formtastic", "add", "to", "it", "NUMBER", "I", "remove", "the", "module", "wrapping", "the", "extensions", "and", "it", "now", "works", "NUMBER", "Odd", "that", "it", "should", "work", "with", "the", "module", "in", "Ruby", "NUMBER", "The", "old", "style", "was", "in", "there", "as", "I", "copied", "this", "code", "from", "another", "app", "and", "had", "not", "delete", "it", "yet", "after", "the", "conversion", "NUMBER", "That", "was", "due", "to", "NUMBER", "if", "you", "wrap", "a", "class", "in", "a", "module", "the", "autoloader", "expects", "the", "directory", "structure", "to", "match", "NUMBER", "So", "Mymodule", "CustomInput", "needs", "to", "be", "in", "app", "inputs", "mymodule", "custom_input", "NUMBER", "rb", "NUMBER", "and", "NUMBER", "didn", "t", "care", "as", "much", "and", "happily", "loaded", "app", "inputs", "custom_input", "NUMBER", "rb", "Thanks", "When", "use", "a", "faux", "model", "I", "should", "be", "able", "to", "create", "an", "input", "element", "that", "do", "not", "have", "a", "name", "attribute", "NUMBER", "In", "plain", "old", "Rails", "I", "can", "do", "this", "via", "text_field_tag", "username", "nil", "name", "nil", "TAG", "Unfortunately", "this", "nil", "value", "seems", "to", "be", "get", "overridden", "when", "trying", "to", "accomplish", "the", "same", "with", "Formtastic", "TAG", "string", "html_input", "id", "username", "name", "nil", "TAG", "Am", "I", "miss", "something", "or", "be", "there", "some", "options", "NUMBER", "merge", "happening", "somewhere", "that", "be", "overwriting", "or", "not", "assigning", "my", "value", "of", "nil", "I", "also", "tried", "use", "false", "with", "no", "luck", "NUMBER", "That", "was", "just", "a", "typo", "sorry", "NUMBER", "I", "gave", "empty", "string", "a", "try", "and", "that", "be", "good", "enough", "for", "my", "needs", "as", "a", "workaround", "even", "though", "it", "still", "generates", "the", "name", "in", "the", "HTML", "NUMBER", "Thanks", "Also", "after", "digging", "into", "it", "NUMBER", "f", "NUMBER", "text_field", "has", "the", "same", "behavior", "as", "Formtastic", "in", "this", "regards", "so", "I", "guess", "it", "s", "not", "a", "Formtastic", "issue", "sorry", "TAG", "button", "f", "NUMBER", "action", "cancel", "as", "link", "haml", "NUMBER", "but", "I", "get", "undefined", "method", "error", "NUMBER", "I", "tried", "substituting", "actions", "for", "buttons", "and", "no", "luck", "NUMBER", "only", "thing", "that", "works", "be", "f", "NUMBER", "buttons", "NUMBER", "but", "I", "can", "t", "customize", "that", "NUMBER", "or", "can", "I", "Hi", "there", "somewhat", "new", "to", "Rails", "NUMBER", "x", "and", "couldn", "t", "find", "an", "issue", "similar", "to", "this", "one", "although", "a", "similar", "StackOverflow", "was", "asked", "here", "LINK", "not", "get", "selected", "in", "formtastic", "form", "I", "m", "run", "through", "the", "RailsCast", "formtastic", "vet", "application", "tutorials", "LINK", "formtastic", "part", "NUMBER", "and", "have", "a", "form", "which", "populates", "checkboxes", "f", "NUMBER", "input", "problem", "as", "check_boxes", "based", "on", "a", "many", "to", "many", "relationship", "animal", "NUMBER", "rb", "class", "Animal", "TAG", "symptoms", "animals_form", "NUMBER", "html", "NUMBER", "erb", "TAG", "TAG", "TAG", "Use", "the", "owner", "s", "name", "if", "none", "be", "provide", "TAG", "radio", "label", "Gender", "collection", "Male", "false", "Female", "true", "TAG", "check_boxes", "TAG", "TAG", "TAG", "This", "works", "flawlessly", "but", "when", "I", "change", "it", "to", "f", "NUMBER", "input", "problem", "as", "radio", "it", "creates", "the", "radio", "inputs", "properly", "and", "seems", "to", "save", "my", "selections", "properly", "upon", "database", "inspection", "but", "when", "I", "return", "to", "edit", "an", "animal", "my", "prior", "selection", "be", "not", "display", "in", "fact", "no", "radio", "button", "be", "shown", "as", "selected", "NUMBER", "If", "I", "make", "a", "new", "selection", "it", "will", "be", "saved", "but", "if", "I", "make", "no", "selection", "it", "retains", "my", "last", "saved", "choice", "NUMBER", "Not", "sure", "if", "I", "m", "miss", "something", "with", "a", "collection", "here", "or", "where", "to", "go", "from", "here", "NUMBER", "Required", "for", "localizer", "caching", "NUMBER", "Using", "TAG", "association", "NUMBER", "merge", "options", "options", "class", "options", "class", "TAG", "this", "NUMBER", "closest", "NUMBER", "has_many_fields", "NUMBER", "remove", "return", "false", "class", "button", "end", "else", "end", "end", "content", "with_new_form_buffer", "do", "template", "NUMBER", "content_tag", "div", "class", "has_many", "association", "do", "form_buffers", "NUMBER", "last", "TAG", "association", "object", "NUMBER", "class", "NUMBER", "reflect_on_association", "association", "NUMBER", "klass", "NUMBER", "new", "class", "inputs", "has_many_fields", "for_options", "child_index", "NEW_RECORD", "form_block", "end", "js", "template", "NUMBER", "escape_javascript", "js", "js", "template", "NUMBER", "link_to", "I", "NUMBER", "n", "NUMBER", "t", "active_admin", "NUMBER", "has_many_new", "model", "association", "NUMBER", "to_s", "NUMBER", "singularize", "NUMBER", "titlecase", "onclick", "this", "NUMBER", "before", "js", "NUMBER", "replace", "NEW_RECORD", "g", "new", "Date", "NUMBER", "getTime", "return", "false", "class", "button", "form_buffers", "NUMBER", "last", "TAG", "tags", "do", "tag", "index", "TAG", "Tag", "index", "TAG", "See", "the", "update", "README", "in", "this", "pull", "request", "for", "another", "better", "example", "NUMBER", "Thanks", "And", "yes", "it", "should", "be", "backwards", "compatible", "since", "it", "s", "simply", "add", "a", "parameter", "that", "can", "be", "ignored", "assuming", "there", "wasn", "t", "a", "different", "second", "parameter", "in", "the", "past", "that", "this", "would", "clash", "with", "NUMBER", "The", "only", "reason", "I", "didn", "t", "try", "to", "deprecate", "the", "other", "method", "be", "because", "inputs", "doesn", "t", "always", "accept", "a", "block", "meaning", "there", "be", "no", "way", "to", "utilize", "the", "index", "argument", "be", "pass", "to", "the", "block", "NUMBER", "For", "example", "consider", "the", "following", "TAG", "Category", "i", "for", "categories", "Shoot", "NUMBER", "I", "was", "update", "my", "fork", "s", "branch", "to", "match", "what", "s", "currently", "on", "your", "master", "branch", "and", "it", "ended", "up", "add", "another", "commit", "LINK", "NUMBER", "I", "don", "t", "think", "that", "should", "break", "anything", "since", "it", "s", "in", "master", "already", "but", "if", "somehow", "do", "let", "me", "know", "and", "I", "ll", "see", "that", "it", "s", "undone", "NUMBER", "justinfrench", "mhuggins", "Looks", "great", "no", "objections", "to", "merge", "this", "in", "asap", "from", "my", "side", "NUMBER", "mhuggins", "nice", "job", "justinfrench", "no", "objections", "too", "Shoot", "NUMBER", "The", "test", "be", "fail", "on", "REE", "NUMBER", "wherever", "that", "second", "parameter", "be", "not", "include", "in", "the", "block", "NUMBER", "It", "looks", "like", "with", "the", "way", "I", "implement", "this", "change", "NUMBER", "x", "requires", "both", "parameters", "to", "be", "defined", "in", "the", "block", "e", "NUMBER", "g", "NUMBER", "form", "NUMBER", "inputs", "do", "builder", "index", "this", "be", "okay", "builder", "NUMBER", "input", "NUMBER", "end", "form", "NUMBER", "inputs", "do", "builder", "this", "throw", "an", "error", "builder", "NUMBER", "input", "NUMBER", "end", "I", "might", "not", "be", "skilled", "enough", "with", "Ruby", "to", "see", "a", "way", "around", "it", "other", "than", "explicitly", "looking", "into", "the", "number", "of", "args", "the", "proc", "expects", "e", "NUMBER", "g", "NUMBER", "change", "this", "in", "InputsHelper", "NUMBER", "inputs_for_nested_attributes", "NUMBER", "index", "parent_child_index", "options", "parent", "if", "options", "parent", "block", "NUMBER", "call", "f", "index", "to", "this", "NUMBER", "if", "block", "NUMBER", "arity", "NUMBER", "block", "NUMBER", "call", "f", "else", "index", "parent_child_index", "options", "parent", "if", "options", "parent", "block", "NUMBER", "call", "f", "index", "end", "Would", "that", "be", "acceptable", "or", "do", "anyone", "have", "a", "better", "suggestion", "Alternatively", "be", "it", "acceptable", "to", "assume", "that", "nested", "attribute", "blocks", "should", "_always_", "accept", "two", "parameters", "from", "now", "on", "if", "use", "NUMBER", "x", "and", "should", "I", "just", "update", "the", "test", "to", "account", "for", "the", "extra", "parameter", "Thanks", "man", "Alright", "I", "start", "code", "on", "the", "bus", "ride", "home", "but", "my", "laptop", "died", "NUMBER", "will", "finish", "and", "test", "as", "soon", "as", "I", "m", "home", "NUMBER", "Alright", "check", "out", "pull", "request", "NUMBER", "TMail", "unfortunately", "defines", "a", "top", "level", "StringInput", "class", "this", "chokes", "with", "the", "input", "builder", "detection", "mechanism", "NUMBER", "I", "know", "TMail", "be", "get", "less", "and", "less", "use", "but", "in", "case", "someone", "else", "wonders", "I", "left", "the", "issue", "here", "NUMBER", "I", "don", "t", "know", "if", "it", "requires", "fix", "or", "not", "I", "will", "try", "to", "work", "around", "that", "use", "ActiveAdmin", "here", "NUMBER", "Here", "s", "how", "to", "detect", "that", "with", "REE", "NUMBER", "here", "ruby", "StringInput", "NUMBER", "method", "new", "NUMBER", "__file__", "Users", "thbar", "NUMBER", "rvm", "gems", "ree", "NUMBER", "NUMBER", "app", "gems", "tmail", "NUMBER", "lib", "tmail", "stringio", "NUMBER", "rb", "justinfrench", "my", "client", "was", "use", "TMail", "for", "email", "receiving", "processing", "despite", "be", "in", "a", "Rails", "NUMBER", "app", "for", "historical", "reasons", "NUMBER", "In", "the", "end", "the", "work", "around", "was", "this", "ruby", "gem", "tmail", "NUMBER", "require", "false", "then", "require", "only", "from", "the", "daemon", "that", "do", "the", "job", "NUMBER", "Apart", "from", "a", "quick", "warning", "on", "the", "README", "or", "in", "the", "dependencies", "checker", "maybe", "I", "don", "t", "think", "much", "change", "be", "needed", "in", "Formtastic", "Hello", "I", "want", "to", "write", "some", "text", "in", "the", "middle", "of", "my", "form", "how", "can", "i", "do", "that", "My", "form", "looks", "like", "form", "html", "enctype", "multipart", "form", "data", "do", "f", "f", "NUMBER", "inputs", "Details", "do", "f", "NUMBER", "input", "civility", "f", "NUMBER", "input", "society", "f", "NUMBER", "input", "last_name", "f", "NUMBER", "input", "address", "f", "NUMBER", "input", "postal_code", "f", "NUMBER", "input", "country", "as", "string", "f", "NUMBER", "input", "email", "f", "NUMBER", "input", "reduction_code", "f", "NUMBER", "input", "message", "f", "NUMBER", "input", "total", "f", "NUMBER", "input", "city", "end", "f", "NUMBER", "buttons", "end", "Just", "a", "div", "with", "some", "text", "inside", "NUMBER", "I", "want", "to", "put", "a", "div", "with", "text", "NUMBER", "characters", "between", "email", "and", "reduction_code", "NUMBER", "just", "posted", "another", "option", "here", "LINK", "Hello", "I", "want", "to", "write", "some", "text", "in", "the", "middle", "of", "my", "form", "how", "can", "i", "do", "that", "My", "form", "looks", "like", "form", "html", "enctype", "multipart", "form", "data", "do", "f", "f", "NUMBER", "inputs", "Details", "do", "f", "NUMBER", "input", "civility", "f", "NUMBER", "input", "society", "f", "NUMBER", "input", "last_name", "f", "NUMBER", "input", "address", "f", "NUMBER", "input", "postal_code", "f", "NUMBER", "input", "country", "as", "string", "f", "NUMBER", "input", "email", "f", "NUMBER", "input", "reduction_code", "f", "NUMBER", "input", "message", "f", "NUMBER", "input", "total", "f", "NUMBER", "input", "city", "end", "f", "NUMBER", "buttons", "end", "you", "can", "try", "this", "ruby", "form", "html", "enctype", "multipart", "form", "data", "do", "f", "f", "NUMBER", "inputs", "Details", "do", "f", "NUMBER", "input", "civility", "f", "NUMBER", "input", "society", "f", "NUMBER", "input", "last_name", "f", "NUMBER", "input", "address", "f", "NUMBER", "input", "postal_code", "TAG", "Hello", "TAG", "NUMBER", "html_safe", "TAG", "string", "f", "NUMBER", "input", "email", "f", "NUMBER", "input", "reduction_code", "f", "NUMBER", "input", "message", "f", "NUMBER", "input", "total", "f", "NUMBER", "input", "city", "end", "f", "NUMBER", "buttons", "end", "i", "use", "this", "same", "mechanism", "to", "add", "a", "floating", "div", "menu", "mechanism", "to", "a", "custom", "edit", "form", "we", "needed", "NUMBER", "Ditchou", "let", "me", "know", "if", "you", "have", "any", "question", "about", "this", "just", "email", "me", "NUMBER", "the", "menu", "thing", "i", "was", "talking", "about", "had", "a", "floating", "div", "holding", "a", "table", "with", "checkbox", "inputs", "in", "the", "rows", "each", "row", "was", "build", "on", "the", "fly", "from", "a", "set", "of", "keys", "contained", "in", "the", "object", "be", "edit", "NUMBER", "Used", "this", "to", "provide", "a", "check", "uncheck", "all", "mechanism", "for", "properties", "setup", "to", "use", "input", "checkbox", "NUMBER", "forgot", "to", "mention", "that", "this", "was", "do", "for", "an", "ActiveAdmin", "project", "NUMBER", "here", "s", "a", "pic", "LINK", "actually", "this", "little", "trick", "only", "appears", "to", "work", "if", "you", "inject", "the", "html", "into", "the", "top", "of", "the", "form", "NUMBER", "You", "get", "all", "sorts", "of", "nasty", "error", "trying", "to", "do", "in", "between", "two", "f", "NUMBER", "input", "s", "NUMBER", "After", "a", "messing", "with", "this", "a", "bit", "more", "we", "decided", "to", "remove", "the", "extra", "html", "from", "the", "form", "definition", "completely", "and", "instead", "we", "re", "now", "injecting", "the", "extra", "elements", "use", "jQuery", "ie", "NUMBER", "prepend", "NUMBER", "In", "our", "case", "we", "re", "creating", "a", "div", "that", "floats", "to", "the", "right", "side", "of", "the", "screen", "across", "from", "each", "of", "the", "f", "NUMBER", "input", "labels", "NUMBER", "Sorry", "if", "i", "confused", "you", "with", "my", "post", "NUMBER", "again", "email", "me", "if", "you", "have", "any", "question", "and", "i", "ll", "try", "to", "explain", "what", "we", "re", "doing", "in", "more", "detail", "NUMBER", "I", "send", "you", "an", "email", "NUMBER", "After", "a", "fresh", "installation", "the", "output", "of", "stylesheet_link_tag", "for", "IE", "seems", "buggy", "HTML", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "ERB", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "And", "ie", "NUMBER", "NUMBER", "css", "CSS", "require", "formtastic_ie", "NUMBER", "assets", "ie", "NUMBER", "css", "return", "style", "correctly", "but", "why", "assets", "formtastic_ie", "NUMBER", "css", "be", "linked", "too", "Running", "on", "rails", "NUMBER", "formtastic", "NUMBER", "same", "on", "NUMBER", "stable", "After", "some", "try", "that", "happens", "with", "config", "NUMBER", "assets", "NUMBER", "debug", "true", "and", "has", "no", "effect", "in", "production", "so", "it", "s", "just", "a", "visual", "issue", "in", "development", "Somehow", "the", "make_selected_values", "and", "checked", "disabled", "methods", "in", "Formtastic", "Inputs", "CheckBoxesInput", "don", "t", "play", "together", "anymore", "NUMBER", "The", "form", "element", "renders", "but", "the", "previously", "selected", "options", "be", "no", "longer", "selected", "NUMBER", "I", "managed", "to", "get", "this", "to", "work", "NUMBER", "This", "happened", "with", "a", "MongoMapper", "model", "and", "an", "embedded", "to", "many", "association", "on", "the", "master", "branch", "NUMBER", "It", "didn", "t", "work", "when", "I", "use", "IDs", "and", "a", "custom", "collection", "f", "NUMBER", "input", "role_ids", "as", "check_boxes", "collection", "Role", "Name", "NUMBER", "BSON", "ObjectId", "NUMBER", "When", "change", "to", "the", "association", "with", "real", "objects", "it", "be", "work", "again", "f", "NUMBER", "input", "roles", "as", "check_boxes", "collection", "available_role_objects", "TAG", "TAG", "TAG", "Category", "i", "for", "categories", "TAG", "TAG", "That", "isn", "t", "supposed", "work", "It", "s", "common", "to", "give", "the", "listed", "element", "unique", "IDs", "for", "javascript", "manipulation", "NUMBER", "Formtastic", "uses", "fieldsets", "inside", "a", "wrapper", "li", "NUMBER", "input", "for", "nested", "records", "html", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "I", "can", "t", "add", "unique", "classes", "to", "those", "fieldsets", "so", "I", "can", "t", "do", "much", "with", "them", "in", "javascript", "unless", "I", "go", "in", "and", "search", "for", "a", "unique", "id", "then", "back", "out", "and", "grab", "the", "fieldset", "that", "way", "NUMBER", "Not", "super", "efficient", "NUMBER", "ruby", "f", "NUMBER", "inputs", "class", "ticket_type", "type_", "i", "name", "Category_", "i", "for", "ticket_types", "do", "tt", "It", "would", "be", "cool", "if", "you", "could", "do", "something", "like", "the", "above", "or", "below", "ruby", "f", "NUMBER", "inputs", "wrapper_html", "class", "ticket_type", "type_", "i", "for", "ticket_types", "do", "tt", "The", "output", "might", "be", "html", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "Or", "if", "both", "options", "worked", "ruby", "f", "NUMBER", "inputs", "class", "ticket_type", "type_", "i", "wrapper_html", "class", "ticket_types", "for", "ticket_types", "do", "tt", "html", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "Something", "like", "that", "anyway", "NUMBER", "Thanks", "for", "your", "response", "Ryan", "I", "get", "around", "it", "by", "use", "some", "longer", "JQuery", "selectors", "but", "I", "think", "this", "would", "be", "an", "awesome", "feature", "NUMBER", "Got", "the", "OK", "to", "work", "on", "it", "at", "work", "next", "time", "I", "need", "it", "though", "ryanisinallofus", "Looks", "like", "this", "be", "a", "duplicate", "of", "NUMBER", "I", "submitted", "pull", "request", "NUMBER", "which", "provides", "a", "solution", "for", "accessing", "the", "current", "nested", "attribute", "index", "assuming", "it", "be", "pull", "in", "NUMBER", "The", "official", "rails", "country_select", "plugin", "LINK", "NUMBER", "country", "select", "be", "no", "longer", "maintained", "and", "has", "not", "be", "update", "since", "NUMBER", "There", "be", "now", "a", "country", "select", "gem", "which", "works", "better", "at", "LINK", "select", "NUMBER", "I", "have", "update", "the", "inline", "documentation", "as", "well", "as", "the", "error", "message", "to", "reflect", "this", "fact", "NUMBER", "inputs_for_nested_attributes", "do", "a", "fields_for_args", "options", "NUMBER", "delete", "for", "options", "NUMBER", "delete", "for_options", "NUMBER", "flatten", "i", "m", "use", "NUMBER", "x", "but", "NUMBER", "x", "be", "the", "same", "which", "will", "swallow", "an", "empty", "array", "NUMBER", "so", "if", "i", "do", "inputs", "for", "association", "meaning", "i", "want", "to", "have", "an", "empty", "list", "not", "the", "current", "association", "list", "but", "still", "have", "the", "bindings", "for", "inputs", "and", "labels", "the", "flatten", "will", "simply", "swallow", "the", "empty", "array", "NUMBER", "the", "solution", "would", "be", "to", "use", "flatten", "NUMBER", "NUMBER", "my", "goal", "be", "to", "create", "a", "has_many", "list", "input", "that", "the", "user", "can", "only", "use", "to", "add", "new", "items", "e", "NUMBER", "g", "NUMBER", "the", "associated", "objects", "would", "be", "further", "processed", "upon", "submit", "so", "though", "i", "need", "to", "have", "process", "the", "associated", "objects", "i", "don", "t", "want", "to", "show", "list", "them", "to", "the", "user", "afterwards", "not", "sure", "if", "i", "overlooked", "something", "NUMBER", "So", "this", "be", "effectively", "what", "the", "current", "code", "do", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "association", "NUMBER", "flatten", "Which", "would", "be", "applied", "something", "like", "this", "fields_for", "association", "And", "you", "d", "like", "to", "see", "this", "instead", "ruby", "NUMBER", "p", "NUMBER", "NUMBER", "association", "NUMBER", "flatten", "NUMBER", "association", "Applied", "like", "this", "fields_for", "association", "I", "can", "t", "find", "anything", "in", "the", "Rails", "docs", "that", "explicitly", "says", "this", "works", "but", "it", "seems", "like", "it", "should", "based", "on", "the", "examples", "provide", "NUMBER", "As", "long", "as", "someone", "be", "certain", "this", "works", "that", "s", "cool", "with", "me", "The", "last", "final", "check", "be", "if", "the", "more", "common", "case", "still", "works", "as", "expected", "and", "it", "do", "association", "hi", "there", "NUMBER", "flatten", "NUMBER", "association", "hi", "there", "Sounds", "good", "have", "you", "get", "time", "for", "a", "pull", "request", "Would", "love", "to", "get", "this", "in", "the", "NUMBER", "RC", "ASAP", "NUMBER", "well", "fields_for_nested_model", "LINK", "_for_nested_model", "which", "be", "call", "from", "fields_for", "LINK", "_for", "will", "act", "as", "if", "the", "association", "would", "be", "an", "empty", "list", "because", "if", "association", "argument", "be", "an", "empty", "array", "convert_to_model", "LINK", "_to_model", "do", "nothing", "and", "an", "empty", "array", "do", "not", "respond", "to", "presisted", "but", "responds", "to", "to_ary", "but", "it", "be", "not", "documented", "NUMBER", "if", "you", "be", "okay", "with", "that", "i", "can", "create", "a", "pull", "request", "NUMBER", "p", "NUMBER", "s", "NUMBER", "the", "first", "code", "fragment", "in", "your", "comment", "be", "wrong", "the", "return", "value", "should", "be", "association", "though", "you", "be", "use", "that", "in", "the", "next", "fragment", "so", "i", "guess", "it", "s", "just", "a", "typo", "p", "NUMBER", "s", "NUMBER", "flatten", "LINK", "doc", "NUMBER", "org", "core", "NUMBER", "Array", "NUMBER", "html", "method", "i", "flatten", "will", "only", "touch", "arrays", "e", "NUMBER", "g", "will", "call", "flatten", "only", "on", "its", "array", "children", "so", "it", "wont", "touch", "the", "options", "hash", "Cache", "I", "NUMBER", "n", "lookups", "to", "improve", "performance", "NUMBER", "Enabled", "by", "configuration", "setting", "NUMBER", "No", "specs", "yet", "as", "I", "was", "unsure", "what", "the", "best", "way", "to", "spec", "this", "be", "NUMBER", "How", "would", "you", "go", "about", "this", "Looks", "good", "Wondering", "if", "the", "def", "i", "NUMBER", "n_cache_lookups", "extraction", "be", "a", "bit", "over", "the", "top", "but", "actually", "I", "m", "wondering", "if", "we", "need", "a", "configuration", "at", "all", "always", "cache", "or", "perhaps", "always", "cache", "in", "production", "NUMBER", "As", "far", "as", "test", "goes", "there", "s", "an", "rspec", "helper", "I", "made", "call", "with_config", "foo", "do", "NUMBER", "end", "to", "let", "you", "safely", "and", "explicitly", "set", "up", "the", "configuration", "for", "each", "test", "it", "should", "blah", "when", "i", "NUMBER", "n", "caching", "be", "on", "do", "with_config", "i", "NUMBER", "n_cache_lookups", "true", "do", "NUMBER", "end", "end", "it", "should", "blah", "when", "i", "NUMBER", "n", "caching", "be", "off", "do", "with_config", "i", "NUMBER", "n_cache_lookups", "false", "do", "NUMBER", "end", "end", "I", "guess", "to", "prove", "that", "caching", "be", "in", "effect", "as", "far", "as", "a", "test", "goes", "you", "ve", "already", "proven", "that", "all", "exist", "test", "pass", "I", "hope", "so", "the", "remaining", "test", "be", "perhaps", "to", "try", "altering", "the", "i", "NUMBER", "n", "translations", "_after_", "they", "ve", "be", "cached", "NUMBER", "We", "do", "I", "NUMBER", "n", "NUMBER", "backend", "NUMBER", "ore_translations", "en", "formtastic", "NUMBER", "in", "a", "few", "specs", "maybe", "that", "s", "what", "you", "need", "Makes", "sense", "NUMBER", "I", "was", "wondering", "if", "you", "would", "want", "this", "to", "be", "test", "in", "all", "specs", "relying", "on", "I", "NUMBER", "n", "NUMBER", "I", "will", "add", "a", "couple", "specs", "in", "one", "place", "and", "test", "the", "caching", "NUMBER", "justinfrench", "What", "do", "you", "think", "about", "those", "specs", "When", "finding", "the", "input", "class", "check", "with", "const_defined", "if", "a", "class", "exists", "instead", "of", "raising", "exception", "in", "production", "environments", "NUMBER", "What", "would", "be", "the", "best", "way", "to", "create", "a", "spec", "for", "this", "SaschaKonietzke", "I", "agree", "this", "be", "hard", "to", "test", "but", "I", "m", "a", "bit", "confused", "by", "the", "diff", "seems", "there", "should", "be", "at", "least", "one", "line", "of", "red", "for", "this", "to", "alter", "the", "behaviour", "of", "any", "exist", "code", "right", "My", "apologies", "I", "forgot", "to", "remove", "the", "old", "input_class", "method", "and", "was", "just", "overwriting", "it", "NUMBER", "justinfrench", "I", "just", "update", "my", "app", "to", "your", "master", "branch", "again", "and", "saw", "this", "pull", "request", "isn", "t", "include", "NUMBER", "On", "purpose", "This", "really", "helped", "to", "cut", "down", "the", "time", "to", "render", "a", "large", "form", "LINK", "NUMBER", "justinfrench", "Thanks", "highly", "appreciated", "close", "NUMBER", "sobrinho", "nashby", "I", "don", "t", "think", "I", "agree", "with", "this", "NUMBER", "I", "agree", "the", "current", "implementation", "be", "awkward", "but", "so", "be", "this", "NUMBER", "If", "I", "fail", "validations", "twice", "I", "ll", "_still_", "end", "up", "on", "an", "edit", "page", "instead", "of", "the", "intended", "page", "whatever", "that", "means", "NUMBER", "Index", "intended", "page", "in", "this", "example", "Edit", "Fail", "validations", "Cancel", "Index", "history", "NUMBER", "works", "Index", "Edit", "first", "time", "Fail", "validations", "Edit", "second", "time", "Fail", "validations", "Cancel", "Back", "at", "Edit", "second", "time", "history", "NUMBER", "fail", "here", "I", "ll", "post", "some", "further", "thoughts", "on", "NUMBER", "but", "I", "don", "t", "think", "we", "should", "pull", "this", "in", "sorry", "NUMBER", "Yeah", "I", "agree", "with", "justinfrench", "NUMBER", "I", "think", "the", "best", "solution", "here", "be", "to", "use", "url", "option", "if", "you", "want", "this", "functionality", "and", "we", "should", "add", "some", "information", "to", "README", "about", "use", "back", "option", "on", "form", "with", "validations", "NUMBER", "First", "project", "from", "Railscamp", "Adelaide", "be", "ready", "for", "peer", "review", "Ah", "it", "still", "needs", "some", "CSS", "love", "and", "update", "to", "the", "samples", "NUMBER", "html", "Might", "also", "benefit", "from", "some", "documentation", "around", "custom", "actions", "that", "inherit", "from", "these", "e", "NUMBER", "g", "NUMBER", "a", "pretty", "button", "NUMBER", "Fixes", "NUMBER", "Looks", "good", "One", "concern", "I", "have", "be", "that", "we", "don", "t", "change", "any", "method", "names", "if", "possible", "in", "order", "to", "provide", "as", "much", "backwards", "compatibility", "as", "possible", "for", "those", "that", "have", "subclassed", "NumberInput", "in", "their", "apps", "NUMBER", "I", "ve", "had", "a", "quick", "eyeball", "but", "if", "there", "s", "anything", "you", "can", "think", "of", "we", "need", "to", "review", "that", "d", "be", "great", "NUMBER", "Similarly", "remove", "the", "stringish", "class", "from", "the", "wrapper", "while", "logical", "creates", "a", "backwards", "compatibility", "issue", "for", "those", "that", "have", "styled", "against", "that", "class", "NUMBER", "From", "a", "ruby", "point", "of", "view", "it", "s", "no", "longer", "Stringish", "but", "from", "a", "CSS", "perspective", "I", "think", "it", "be", "so", "we", "should", "keep", "it", "I", "m", "okay", "with", "add", "additional", "classes", "NUMBER", "Also", "wondering", "if", "we", "should", "continue", "the", "ish", "naming", "scheme", "NUMBER", "Timeish", "Stringish", "Numberish", "NUMBER", "from", "me", "NUMBER", "Should", "close", "NUMBER", "as", "well", "if", "I", "m", "right", "rails", "NUMBER", "pg", "NUMBER", "formtastic", "master", "branch", "Every", "form", "with", "integer", "field", "throw", "this", "exception", "You", "have", "a", "nil", "object", "when", "you", "didn", "t", "expect", "it", "You", "might", "have", "expected", "an", "instance", "of", "Array", "NUMBER", "The", "error", "occur", "while", "evaluating", "nil", "NUMBER", "NUMBER", "f", "NUMBER", "input", "age", "These", "form", "works", "well", "use", "formtastic", "NUMBER", "or", "master", "and", "mysql", "NUMBER", "adapter", "NUMBER", "haines", "NUMBER", "for", "an", "internal", "pull", "request", "I", "m", "going", "to", "try", "get", "in", "the", "habit", "of", "this", "too", "rather", "than", "just", "committing", "to", "master", "all", "the", "time", "NUMBER", "Pulled", "thanks", "So", "it", "now", "defaults", "to", "the", "first", "fragment", "Outstanding", "Awesome", "work", "Travis", "build", "be", "now", "only", "fail", "on", "previous", "i", "NUMBER", "n", "relate", "stuff", "so", "great", "work", "sorting", "this", "out", "haines", "Interested", "in", "be", "add", "as", "a", "collaborator", "haines", "Done", "I", "ve", "run", "into", "a", "problem", "trying", "to", "upgrade", "to", "NUMBER", "run", "with", "a", "postgres", "database", "use", "the", "pg", "NUMBER", "adapter", "though", "earlier", "version", "have", "the", "same", "problem", "NUMBER", "I", "ve", "tracked", "this", "down", "to", "the", "inputs", "base", "validations", "NUMBER", "rb", "file", "where", "we", "have", "def", "column_limit", "if", "column", "column", "NUMBER", "respond_to", "limit", "case", "column", "NUMBER", "type", "when", "integer", "NUMBER", "column", "NUMBER", "limit", "NUMBER", "NUMBER", "to_s", "NUMBER", "length", "NUMBER", "else", "column", "NUMBER", "limit", "end", "end", "end", "column", "NUMBER", "limit", "be", "returning", "null", "for", "integer", "values", "and", "this", "be", "breaking", "formtastic", "NUMBER", "I", "ve", "put", "a", "nasty", "hack", "in", "my", "copy", "to", "set", "a", "default", "col", "column", "NUMBER", "limit", "NUMBER", "NUMBER", "A", "better", "solution", "would", "be", "to", "address", "this", "inside", "the", "postgres", "adapter", "but", "I", "m", "report", "here", "in", "case", "others", "need", "a", "quick", "fix", "or", "someone", "can", "come", "up", "with", "a", "better", "idea", "NUMBER", "rubythings", "be", "there", "any", "significance", "to", "the", "NUMBER", "or", "did", "you", "just", "pick", "that", "as", "a", "number", "that", "suited", "in", "your", "case", "Let", "s", "assume", "that", "a", "nil", "limit", "be", "valid", "and", "could", "be", "returned", "by", "any", "DB", "adaptor", "Mongo", "then", "I", "wonder", "if", "we", "can", "also", "do", "some", "work", "in", "Formtastic", "to", "make", "this", "better", "safer", "NUMBER", "On", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Justin", "French", "write", "rubythings", "be", "there", "any", "significance", "to", "the", "NUMBER", "or", "did", "you", "just", "pick", "that", "as", "a", "number", "that", "suited", "in", "your", "case", "Let", "s", "assume", "that", "a", "nil", "limit", "be", "valid", "and", "could", "be", "returned", "by", "any", "DB", "adaptor", "Mongo", "then", "I", "wonder", "if", "we", "can", "also", "do", "some", "work", "in", "Formtastic", "to", "make", "this", "better", "safer", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "I", "pick", "that", "number", "because", "it", "suited", "by", "case", "it", "s", "the", "size", "in", "bytes", "for", "an", "integer", "in", "postgres", "and", "mine", "be", "all", "stored", "as", "int", "rather", "than", "big", "int", "NUMBER", "haines", "great", "point", "NUMBER", "NumberInput", "include", "Stringish", "which", "defines", "input_html_options", "which", "calls", "limit", "in", "the", "maxlength", "attribute", "which", "calls", "column_limit", "NUMBER", "There", "seems", "to", "be", "a", "few", "places", "we", "can", "hook", "in", "and", "remove", "this", "maxlength", "attribute", "but", "I", "think", "we", "need", "to", "extract", "the", "maxlength", "logic", "out", "of", "Stringish", "input_html_options", "into", "something", "like", "Stringish", "maxlength", "which", "would", "allow", "NumberInput", "to", "redefine", "this", "as", "nil", "NUMBER", "Thoughts", "Using", "the", "as", "checkboxes", "option", "for", "collection", "select", "inputs", "results", "in", "a", "hidden", "input", "field", "with", "the", "same", "name", "as", "the", "check", "boxes", "NUMBER", "This", "prevents", "a", "simple", "create", "or", "update", "statement", "on", "a", "link", "table", "NUMBER", "If", "there", "be", "a", "reason", "for", "the", "hidden", "field", "please", "explain", "and", "also", "how", "do", "I", "get", "round", "the", "problem", "when", "update", "or", "creating", "On", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Justin", "French", "write", "The", "hidden", "field", "be", "there", "because", "browsers", "won", "t", "post", "an", "empty", "collection", "of", "checkboxes", "NUMBER", "this", "causes", "problem", "when", "editing", "the", "object", "and", "unchecking", "all", "the", "boxes", "and", "be", "a", "pretty", "standard", "Rails", "and", "web", "application", "practice", "so", "that", "the", "controller", "and", "or", "model", "know", "explicitly", "that", "all", "checkboxes", "were", "unchecked", "NUMBER", "This", "be", "explained", "somewhat", "in", "the", "Rails", "check_box", "documentation", "gotcha", "NUMBER", "I", "encourage", "you", "to", "fully", "understand", "this", "before", "disabling", "it", "but", "the", "way", "to", "do", "so", "be", "to", "pass", "in", "the", "option", "hidden_fields", "false", "NUMBER", "I", "ll", "eave", "this", "issue", "open", "to", "ensure", "that", "there", "s", "documentation", "for", "this", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Thanks", "for", "that", "explanation", "Justin", "I", "had", "completely", "forgotten", "about", "that", "issue", "NUMBER", "I", "was", "use", "a", "HABTM", "association", "and", "Rails", "provides", "an", "easy", "way", "to", "update", "the", "join", "table", "NUMBER", "Ryan", "Bates", "did", "a", "Railscast", "on", "this", "issue", "way", "way", "back", "in", "episode", "NUMBER", "LINK", "habtm", "checkboxes", "NUMBER", "I", "have", "now", "fix", "my", "problem", "by", "rejecting", "the", "empty", "string", "s", "from", "the", "params", "array", "before", "creating", "update", "NUMBER", "Everything", "seems", "to", "work", "fine", "now", "NUMBER", "Regards", "Brian", "Added", "a", "simple", "translation", "for", "the", "spanish", "language", "All", "right", "I", "add", "a", "reference", "to", "the", "spanish", "yml", "file", "in", "the", "wiki", "NUMBER", "Cheers", "I", "m", "use", "formtastic", "via", "active_admin", "but", "I", "think", "this", "issue", "lies", "within", "formtastic", "NUMBER", "I", "can", "t", "get", "a", "multiselect", "to", "clear", "on", "save", "NUMBER", "It", "seems", "it", "doesn", "t", "POST", "anything", "at", "all", "when", "there", "s", "nothing", "selected", "so", "Rails", "do", "nothing", "to", "update", "the", "records", "NUMBER", "I", "believe", "it", "should", "POST", "the", "appropriate", "key", "with", "a", "blank", "value", "NUMBER", "If", "I", "change", "the", "field", "to", "use", "checkboxes", "it", "works", "because", "a", "blank", "value", "be", "posted", "though", "properly", "within", "the", "hash", "NUMBER", "My", "code", "be", "ActiveAdmin", "NUMBER", "register", "Organization", "do", "form", "do", "f", "f", "NUMBER", "inputs", "Details", "do", "f", "NUMBER", "input", "name", "f", "NUMBER", "input", "provinces", "as", "check_boxes", "multi", "select", "can", "be", "cleared", "f", "NUMBER", "input", "provinces", "select", "cannot", "be", "cleared", "end", "end", "end", "I", "couldn", "t", "find", "anything", "in", "the", "docs", "so", "sorry", "if", "I", "m", "just", "miss", "something", "obvious", "and", "this", "isn", "t", "an", "issue", "at", "all", "NUMBER", "TimFletcher", "Sounds", "like", "you", "need", "a", "hidden", "input", "of", "the", "same", "name", "before", "the", "multi", "select", "NUMBER", "This", "will", "ensure", "that", "something", "be", "posted", "NUMBER", "If", "that", "works", "please", "let", "me", "know", "so", "we", "can", "consider", "make", "the", "same", "change", "in", "Formtastic", "core", "so", "this", "works", "out", "of", "the", "box", "NUMBER", "TimFletcher", "any", "update", "on", "this", "Closing", "until", "I", "hear", "more", "NUMBER", "Hey", "sorry", "for", "my", "lack", "of", "responsiveness", "on", "this", "NUMBER", "I", "worked", "around", "it", "for", "now", "but", "I", "ll", "hopefully", "get", "time", "to", "dig", "into", "this", "over", "Christmas", "NUMBER", "Appreciate", "your", "attention", "NUMBER", "TimFletcher", "did", "you", "work", "around", "it", "with", "my", "suggestion", "or", "something", "else", "Can", "we", "re", "open", "this", "issue", "There", "definitly", "needs", "to", "be", "an", "hidden", "input", "inserted", "before", "multiple", "selects", "just", "like", "for", "checkboxes", "NUMBER", "This", "can", "t", "be", "cleared", "TAG", "TAG", "A", "TAG", "TAG", "B", "TAG", "TAG", "This", "can", "be", "cleared", "TAG", "TAG", "TAG", "A", "TAG", "TAG", "B", "TAG", "TAG", "fbuenemann", "Re", "opened", "how", "about", "work", "up", "a", "pull", "request", "I", "can", "do", "that", "might", "start", "with", "NUMBER", "x", "though", "and", "then", "port", "over", "to", "NUMBER", "x", "because", "formtastic", "NUMBER", "x", "html", "NUMBER", "number", "inputs", "be", "cause", "quite", "some", "trouble", "on", "the", "localized", "decimal", "field", "in", "my", "current", "app", "NUMBER", "I", "m", "skipping", "a", "rant", "on", "how", "broken", "the", "current", "browsers", "implementations", "of", "number", "inputs", "be", "NUMBER", "NUMBER", "multiple", "select", "element", "behaves", "similar", "to", "checkboxes", "in", "the", "sense", "that", "it", "be", "considered", "not", "successful", "by", "the", "html", "form", "spec", "and", "thus", "doesn", "t", "get", "sent", "at", "all", "and", "needs", "a", "hidden", "input", "as", "default", "element", "NUMBER", "Currently", "i", "m", "work", "around", "this", "by", "use", "f", "NUMBER", "inputs", "do", "f", "NUMBER", "input", "myfield", "as", "hidden", "value", "f", "NUMBER", "input", "myfield", "as", "select", "multiple", "true", "This", "actually", "leads", "to", "inconsistent", "input", "name", "attributes", "but", "rails", "seems", "to", "parse", "the", "params", "properly", "anyway", "NUMBER", "justinfrench", "I", "ve", "already", "implement", "a", "fix", "for", "the", "NUMBER", "stable", "branch", "however", "the", "specs", "aren", "t", "work", "even", "without", "my", "change", "NUMBER", "of", "NUMBER", "test", "be", "fail", "use", "either", "NUMBER", "head", "NUMBER", "p", "NUMBER", "or", "NUMBER", "head", "NUMBER", "Anything", "besides", "bundler", "and", "rake", "spec", "I", "need", "to", "do", "The", "NUMBER", "x", "specs", "be", "work", "fine", "NUMBER", "Error", "on", "pretty", "much", "all", "the", "specs", "semantic_form_for", "fred", "do", "builder", "wrong", "number", "of", "argument", "NUMBER", "for", "NUMBER", "fbuenemann", "I", "haven", "t", "ventured", "into", "NUMBER", "stable", "in", "a", "long", "time", "All", "I", "can", "suggest", "off", "the", "top", "of", "my", "head", "be", "a", "clear", "gem", "environment", "i", "NUMBER", "e", "NUMBER", "RVM", "NUMBER", "I", "wasn", "t", "test", "NUMBER", "back", "then", "and", "a", "bundle", "install", "NUMBER", "If", "you", "ve", "tried", "all", "that", "let", "me", "know", "and", "I", "ll", "see", "what", "I", "can", "do", "NUMBER", "Pushing", "up", "the", "code", "change", "regardless", "of", "fail", "specs", "might", "help", "us", "to", "look", "at", "the", "change", "needed", "for", "master", "either", "way", "and", "help", "others", "stuck", "on", "NUMBER", "x", "NUMBER", "oh", "it", "s", "already", "push", "only", "haven", "t", "made", "it", "into", "a", "pull", "request", "yet", "f", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bfd", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "fe", "Just", "wondering", "did", "this", "make", "it", "into", "NUMBER", "stable", "kchien", "My", "code", "be", "ready", "to", "be", "pull", "for", "NUMBER", "but", "I", "can", "t", "get", "the", "rspec", "test", "to", "run", "NUMBER", "I", "ve", "created", "a", "pull", "request", "GH", "NUMBER", "for", "this", "NUMBER", "fbuenemann", "I", "m", "going", "to", "attempt", "to", "work", "on", "this", "today", "NUMBER", "So", "far", "I", "too", "can", "not", "get", "the", "specs", "to", "pass", "NUMBER", "justinfrench", "do", "the", "specs", "pass", "for", "you", "If", "so", "would", "you", "mind", "posting", "your", "Gemfile", "NUMBER", "lock", "I", "have", "TAG", "select", "collection", "pages", "NUMBER", "flatten", "and", "formtastic", "forces", "a", "multi", "select", "NUMBER", "How", "do", "I", "stop", "that", "that", "didn", "t", "work", "TAG", "select", "input_html", "multiple", "false", "collection", "pages", "NUMBER", "flatten", "still", "gives", "me", "a", "multi", "select", "NUMBER", "has_and_belongs_to_many", "Ok", "have", "reproduced", "this", "bug", "with", "a", "test", "NUMBER", "Looking", "into", "it", "sorry", "for", "the", "lag", "in", "responding", "NUMBER", "Actually", "I", "have", "a", "test", "that", "proves", "it", "should", "work", "describe", "for", "a", "has_and_belongs_to_many", "association", "do", "it", "should", "allow", "non", "multi", "select", "with", "the", "input_html", "option", "do", "output_buffer", "NUMBER", "replace", "concat", "semantic_form_for", "freds_post", "do", "builder", "concat", "builder", "NUMBER", "input", "authors", "as", "select", "input_html", "multiple", "false", "end", "output_buffer", "NUMBER", "should_not", "have_tag", "form", "li", "select", "multiple", "multiple", "end", "end", "The", "logic", "was", "a", "bit", "smelly", "and", "there", "weren", "t", "any", "test", "for", "this", "case", "TAG", "select", "multiple", "false", "collection", "pages", "NUMBER", "flatten", "NUMBER", "so", "I", "ve", "add", "two", "test", "and", "some", "code", "change", "to", "hopefully", "resolve", "this", "NUMBER", "I", "ve", "commit", "them", "in", "a", "branch", "GH", "NUMBER", "so", "please", "bundle", "in", "Formtastic", "from", "master", "with", "the", "git", "option", "and", "use", "the", "branch", "name", "as", "the", "ref", "option", "NUMBER", "cgunnels", "Please", "report", "back", "and", "confirm", "that", "this", "has", "resolve", "your", "problem", "then", "I", "ll", "merge", "it", "into", "master", "NUMBER", "This", "worked", "TAG", "select", "input_html", "size", "NUMBER", "multiple", "false", "collection", "pages", "NUMBER", "flatten", "I", "didn", "t", "merge", "in", "your", "change", "I", "be", "use", "version", "NUMBER", "Ok", "closing", "then", "NUMBER", "I", "m", "use", "formtastic", "NUMBER", "in", "my", "rails", "NUMBER", "app", "on", "ruby", "NUMBER", "I", "ve", "notice", "that", "calls", "to", "formtastic", "take", "a", "long", "time", "make", "pages", "contain", "big", "form", "very", "slow", "NUMBER", "For", "example", "f", "NUMBER", "input", "title", "within", "my", "haml", "template", "takes", "about", "NUMBER", "ms", "for", "this", "particular", "line", "of", "code", "NUMBER", "The", "app", "be", "run", "in", "production", "mode", "the", "page", "has", "be", "reloaded", "a", "few", "times", "NUMBER", "Forms", "containing", "a", "few", "dozens", "of", "input", "elements", "easily", "sum", "up", "to", "NUMBER", "NUMBER", "ms", "per", "request", "only", "spent", "in", "the", "view", "NUMBER", "Even", "worse", "a", "page", "containing", "a", "partial", "rendered", "multiple", "times", "would", "even", "take", "NUMBER", "ms", "for", "the", "first", "invocation", "of", "that", "code", "no", "matter", "if", "the", "page", "had", "be", "generate", "just", "seconds", "ago", "NUMBER", "On", "the", "other", "hand", "haml", "template", "that", "do", "not", "contain", "formtastic", "code", "be", "much", "faster", "than", "that", "NUMBER", "How", "could", "I", "find", "out", "what", "s", "wrong", "I", "created", "a", "very", "simple", "rails", "NUMBER", "test", "app", "which", "demonstrates", "the", "problem", "NUMBER", "Please", "see", "LINK", "_test", "It", "s", "all", "scaffold", "and", "simple", "use", "formtastic", "as", "the", "only", "runtime", "dependency", "NUMBER", "The", "app", "contains", "just", "one", "model", "Book", "which", "has", "two", "properties", "title", "and", "content", "NUMBER", "There", "be", "two", "form", "partials", "in", "app", "views", "books", "one", "call", "_formtastic", "NUMBER", "html", "NUMBER", "erb", "the", "other", "_vanilla", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "By", "appending", "form", "vanilla", "to", "the", "new", "edit", "request", "you", "can", "switch", "between", "the", "two", "having", "formtastic", "as", "the", "default", "NUMBER", "Interesting", "On", "my", "machine", "formtastic", "takes", "NUMBER", "NUMBER", "ms", "for", "each", "invocation", "of", "f", "NUMBER", "input", "NUMBER", "Try", "and", "duplicate", "the", "title", "a", "few", "times", "the", "time", "to", "build", "the", "form", "will", "go", "up", "significantly", "NUMBER", "There", "s", "also", "a", "performance", "test", "to", "give", "you", "some", "numbers", "Loaded", "suite", "Users", "c", "NUMBER", "aust", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "p", "NUMBER", "perf", "mhmr", "gems", "rake", "NUMBER", "lib", "rake", "rake_test_loader", "Started", "BooksTest", "test_books_edit_formtastic", "NUMBER", "ms", "warmup", "wall_time", "NUMBER", "ms", "memory", "NUMBER", "KB", "objects", "NUMBER", "gc_runs", "NUMBER", "gc_time", "NUMBER", "ms", "NUMBER", "BooksTest", "test_books_edit_vanilla", "NUMBER", "ms", "warmup", "wall_time", "NUMBER", "ms", "memory", "NUMBER", "KB", "objects", "NUMBER", "gc_runs", "NUMBER", "gc_time", "NUMBER", "ms", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "NUMBER", "test", "NUMBER", "assertions", "NUMBER", "failures", "NUMBER", "error", "Added", "a", "variant", "to", "the", "repo", "to", "demonstrate", "formtastic", "taking", "more", "time", "the", "more", "input", "elements", "you", "d", "use", "NUMBER", "Started", "BooksTest", "test_books_edit_formtastic", "NUMBER", "ms", "warmup", "wall_time", "NUMBER", "ms", "memory", "NUMBER", "KB", "objects", "NUMBER", "gc_runs", "NUMBER", "gc_time", "NUMBER", "ms", "NUMBER", "BooksTest", "test_books_edit_formtastic_", "NUMBER", "_title_inputs", "NUMBER", "ms", "warmup", "wall_time", "NUMBER", "ms", "memory", "NUMBER", "KB", "objects", "NUMBER", "gc_runs", "NUMBER", "gc_time", "NUMBER", "ms", "NUMBER", "BooksTest", "test_books_edit_formtastic_", "NUMBER", "_title_inputs", "NUMBER", "ms", "warmup", "wall_time", "NUMBER", "ms", "memory", "NUMBER", "KB", "objects", "NUMBER", "gc_runs", "NUMBER", "gc_time", "NUMBER", "ms", "NUMBER", "BooksTest", "test_books_edit_vanilla", "NUMBER", "ms", "warmup", "wall_time", "NUMBER", "ms", "memory", "NUMBER", "KB", "objects", "NUMBER", "gc_runs", "NUMBER", "gc_time", "NUMBER", "ms", "NUMBER", "BooksTest", "test_books_edit_vanilla_", "NUMBER", "_title_inputs", "NUMBER", "ms", "warmup", "wall_time", "NUMBER", "ms", "memory", "NUMBER", "KB", "objects", "NUMBER", "gc_runs", "NUMBER", "gc_time", "NUMBER", "ms", "NUMBER", "BooksTest", "test_books_edit_vanilla_", "NUMBER", "_title_inputs", "NUMBER", "ms", "warmup", "wall_time", "NUMBER", "ms", "memory", "NUMBER", "KB", "objects", "NUMBER", "gc_runs", "NUMBER", "gc_time", "NUMBER", "ms", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "NUMBER", "test", "NUMBER", "assertions", "NUMBER", "failures", "NUMBER", "error", "I", "just", "stumbled", "across", "this", "issue", "in", "my", "own", "app", "NUMBER", "For", "one", "larger", "formtastic", "form", "with", "many", "inputs", "takes", "about", "NUMBER", "seconds", "to", "generate", "the", "view", "and", "there", "aren", "t", "any", "slow", "database", "calls", "in", "between", "NUMBER", "Did", "you", "find", "any", "solution", "for", "this", "problem", "already", "or", "have", "an", "idea", "why", "this", "be", "happening", "I", "believe", "it", "s", "get", "to", "do", "with", "i", "NUMBER", "n", "looking", "at", "the", "profiler", "results", "shows", "me", "massive", "amounts", "of", "objects", "created", "somewhat", "relate", "to", "it", "NUMBER", "Need", "to", "add", "though", "that", "it", "was", "the", "first", "time", "I", "had", "to", "work", "with", "the", "ruby", "profiler", "NUMBER", "YMMV", "NUMBER", "I", "m", "currently", "playing", "around", "with", "this", "and", "was", "able", "to", "greatly", "reduce", "the", "time", "to", "render", "the", "formtastic", "form", "by", "change", "the", "GC", "settings", "and", "caching", "i", "NUMBER", "n", "calls", "LINK", "NUMBER", "Good", "approach", "it", "cuts", "my", "benchmarks", "run", "time", "by", "more", "than", "NUMBER", "NUMBER", "Looking", "at", "it", "further", "I", "see", "a", "lot", "of", "time", "be", "spent", "in", "Kernel", "raise", "where", "also", "an", "awful", "lot", "of", "objects", "be", "created", "NUMBER", "I", "ve", "read", "somewhere", "that", "Exceptions", "be", "particularly", "slow", "in", "Ruby", "while", "be", "raise", "call", "so", "often", "in", "the", "context", "of", "i", "NUMBER", "n", "ps", "Changing", "GC", "params", "might", "help", "but", "be", "not", "feasible", "in", "my", "current", "situation", "since", "I", "can", "t", "choose", "a", "different", "Ruby", "interpreter", "NUMBER", "I", "did", "some", "more", "investigations", "NUMBER", "There", "have", "be", "update", "to", "the", "I", "NUMBER", "n", "module", "recently", "so", "it", "doesn", "t", "raise", "that", "many", "exception", "anymore", "NUMBER", "Check", "that", "you", "have", "version", "NUMBER", "I", "use", "this", "to", "find", "out", "which", "other", "exception", "get", "throw", "module", "Kernel", "alias", "_raise", "raise", "def", "raise", "a", "puts", "Raising", "a", "_raise", "a", "end", "end", "One", "big", "problem", "seem", "to", "be", "that", "the", "test", "environment", "which", "rake", "test", "benchmark", "uses", "has", "whiny_nils", "true", "set", "by", "default", "NUMBER", "Formtastic", "raises", "and", "catches", "many", "such", "whiny_nil", "exception", "if", "you", "set", "it", "to", "false", "a", "lot", "less", "exception", "get", "created", "NUMBER", "Formtastic", "also", "throw", "many", "exception", "in", "my", "large", "form", "because", "it", "was", "checking", "for", "many", "user", "defined", "input", "classes", "NUMBER", "I", "update", "the", "monkeypatch", "LINK", "to", "use", "const_defined", "instead", "of", "catching", "NameErrors", "which", "further", "increase", "the", "speed", "NUMBER", "I", "also", "update", "the", "cached", "i", "NUMBER", "n", "lookups", "to", "include", "some", "more", "details", "in", "the", "cache", "key", "as", "I", "encountered", "some", "problem", "with", "different", "translations", "for", "the", "same", "attribute", "in", "different", "actions", "NUMBER", "justinfrench", "What", "do", "you", "think", "of", "those", "change", "If", "you", "like", "the", "idea", "of", "including", "this", "in", "master", "I", "can", "create", "a", "fork", "with", "a", "pull", "request", "NUMBER", "SaschaKonietzke", "I", "think", "the", "const_defined", "patch", "will", "create", "problem", "with", "autoloading", "NUMBER", "that", "be", "I", "think", "that", "not", "all", "input", "classes", "will", "be", "defined", "the", "first", "time", "they", "re", "request", "NUMBER", "This", "would", "need", "some", "test", "in", "both", "production", "test", "and", "development", "environments", "before", "we", "apply", "it", "to", "master", "but", "I", "m", "open", "to", "the", "idea", "NUMBER", "Should", "we", "be", "requiring", "i", "NUMBER", "n", "NUMBER", "Would", "love", "to", "see", "a", "pull", "request", "with", "the", "localisation", "caching", "in", "place", "NUMBER", "Separate", "smaller", "pull", "request", "would", "be", "awesome", "if", "possible", "and", "if", "there", "s", "any", "change", "as", "oppose", "to", "improvement", "please", "note", "so", "that", "I", "can", "consider", "them", "when", "numbering", "the", "next", "version", "NUMBER", "I", "also", "find", "out", "that", "const_defined", "didn", "t", "work", "in", "development", "mode", "with", "auto", "loading", "enable", "that", "s", "why", "I", "check", "if", "Rails", "NUMBER", "application", "NUMBER", "config", "NUMBER", "cache_classes", "be", "true", "NUMBER", "I", "don", "t", "like", "the", "two", "code", "paths", "but", "don", "t", "know", "if", "there", "be", "a", "better", "way", "to", "do", "it", "that", "always", "works", "NUMBER", "Do", "you", "have", "an", "idea", "Should", "we", "just", "check", "for", "Rails", "NUMBER", "application", "NUMBER", "config", "NUMBER", "cache_classes", "The", "latest", "Rails", "already", "requires", "i", "NUMBER", "n", "NUMBER", "so", "requiring", "it", "in", "Formtastic", "be", "probably", "not", "necessary", "It", "be", "only", "a", "performance", "improvement", "and", "anybody", "could", "force", "the", "version", "themselves", "when", "use", "an", "older", "version", "of", "Rails", "I", "ll", "create", "separate", "pull", "request", "for", "you", "but", "will", "wait", "until", "we", "know", "what", "to", "do", "with", "auto", "loading", "NUMBER", "SaschaKonietzke", "sounds", "like", "you", "ve", "get", "a", "plan", "with", "autoloading", "etc", "please", "send", "some", "pull", "request", "SaschaKonietzke", "any", "update", "looking", "to", "push", "a", "NUMBER", "beta", "soon", "justinfrench", "Sorry", "I", "didn", "t", "get", "to", "it", "yet", "NUMBER", "I", "saw", "that", "there", "were", "some", "larger", "change", "to", "Formtastic", "which", "require", "some", "more", "modifications", "NUMBER", "The", "earliest", "I", "can", "implement", "this", "be", "probably", "February", "NUMBER", "justinfrench", "Please", "take", "a", "look", "at", "the", "two", "pull", "request", "I", "sent", "you", "NUMBER", "This", "pull", "request", "LINK", "was", "ostensibly", "to", "fix", "the", "NoMethodError", "problem", "with", "Mongoid", "relations", "NUMBER", "However", "it", "s", "still", "raising", "NoMethodError", "with", "select", "field", "in", "NUMBER", "a", "Mongoid", "belongs_to", "in", "my", "case", "NUMBER", "if", "reflection", "NUMBER", "options", "should", "I", "think", "read", "if", "reflection", "NUMBER", "respond_to", "options", "in", "each", "case", "NUMBER", "However", "this", "just", "masks", "a", "further", "problem", "on", "Mongoid", "if", "you", "use", "NUMBER", "scoped", "conditions", "nil", "or", "NUMBER", "scoped", "conditions", "the", "query", "will", "always", "return", "no", "results", "meaning", "a", "blank", "select", "box", "NUMBER", "Looks", "like", "we", "need", "to", "conditionally", "omit", "the", "scoped", "conditions", "NUMBER", "hash", "NUMBER", "The", "workaround", "for", "undefined", "method", "options", "for", "TAG", "be", "to", "supply", "the", "collection", "to", "the", "input", "explicitly", "e", "NUMBER", "g", "NUMBER", "input", "category", "collection", "Category", "NUMBER", "all", "pull", "request", "inbound", "shortly", "Hi", "I", "have", "the", "exact", "same", "issue", "as", "LINK", "Im", "on", "Ruby", "NUMBER", "Rails", "NUMBER", "and", "Formtastic", "NUMBER", "field", "be", "boolean", "in", "MySQL", "but", "be", "always", "shown", "unchecked", "NUMBER", "Also", "formtastic", "do", "not", "seem", "to", "recognise", "the", "boolean", "field", "for", "a", "start", "it", "renders", "them", "as", "StringInput", "if", "you", "dont", "specify", "the", "as", "boolean", "Thanks", "Michael", "I", "have", "tried", "to", "further", "debug", "this", "and", "it", "seems", "that", "the", "variable", "object", "be", "nil", "and", "so", "the", "checked", "method", "always", "returns", "false", "NUMBER", "I", "find", "this", "by", "subclasing", "BooleanInput", "class", "MyCheckboxInput", "TAG", "mibock", "if", "you", "override", "the", "checked", "method", "to", "use", "builder", "NUMBER", "object", "instead", "of", "just", "object", "do", "it", "work", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Michael", "Bock", "RapidiOnline", "Tel", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "For", "some", "reason", "this", "did", "not", "get", "in", "the", "other", "day", "but", "here", "it", "be", "again", "semantic_form_for", "transfer", "url", "service_transfer_path", "service", "transfer", "html", "method", "put", "autocomplete", "off", "do", "f", "f", "NUMBER", "inputs", "do", "f", "NUMBER", "input", "code", "f", "NUMBER", "input", "enable", "f", "NUMBER", "input", "performupdate", "as", "my_checkbox", "label", "Update", "f", "NUMBER", "buttons", "both", "enable", "and", "perform", "update", "be", "boolean", "NUMBER", "Both", "be", "true", "NUMBER", "in", "the", "database", "NUMBER", "enable", "be", "shown", "as", "text", "field", "and", "the", "code", "for", "MyCheckbox", "be", "here", "class", "MyCheckboxInput", "TAG", "mibock", "I", "ve", "notice", "you", "re", "use", "semantic_form_for", "transfer", "where", "transfer", "be", "a", "symbol", "rather", "than", "transfer", "an", "instance", "of", "a", "Transfer", "model", "we", "need", "an", "instance", "of", "a", "model", "that", "has", "some", "state", "persisted", "in", "it", "in", "order", "to", "check", "the", "checkbox", "reflect", "on", "the", "database", "columns", "etc", "NUMBER", "Any", "reason", "you", "re", "knot", "use", "transfer", "and", "instantiating", "an", "instance", "of", "a", "Transfer", "Closing", "for", "now", "as", "I", "m", "confident", "this", "be", "the", "issue", "feel", "free", "to", "re", "open", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Michael", "Bock", "RapidiOnline", "Tel", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Hi", "i", "use", "Active", "Admin", "and", "see", "they", "use", "Formtastic", "for", "the", "form", "code", "i", "try", "to", "implement", "paperclip", "but", "i", "don", "t", "have", "luck", "my", "form", "code", "be", "form", "html", "multipart", "true", "do", "f", "f", "NUMBER", "inputs", "Details", "do", "f", "NUMBER", "input", "name", "f", "NUMBER", "input", "created_at", "label", "Publish", "Product", "at", "f", "NUMBER", "input", "category", "end", "f", "NUMBER", "inputs", "Images", "do", "f", "NUMBER", "has_many", "assets", "do", "p", "p", "NUMBER", "input", "asset", "as", "file", "input_html", "multiple", "true", "label", "Image", "hint", "p", "NUMBER", "object", "NUMBER", "asset", "NUMBER", "nil", "p", "NUMBER", "template", "NUMBER", "content_tag", "span", "No", "Image", "Yet", "p", "NUMBER", "template", "NUMBER", "image_tag", "p", "NUMBER", "object", "NUMBER", "asset", "NUMBER", "url", "thumb", "p", "NUMBER", "input", "_destroy", "as", "boolean", "required", "false", "label", "Remove", "end", "end", "f", "NUMBER", "inputs", "Content", "do", "f", "NUMBER", "input", "description", "end", "f", "NUMBER", "buttons", "end", "My", "asset", "model", "be", "this", "class", "Asset", "TAG", "large", "NUMBER", "x", "NUMBER", "medium", "NUMBER", "x", "NUMBER", "thumb", "NUMBER", "x", "NUMBER", "url", "products", "id", "style", "basename", "NUMBER", "extension", "path", "rails_root", "public", "products", "id", "style", "basename", "NUMBER", "extension", "validates_attachment_presence", "asset", "end", "When", "i", "try", "to", "upload", "a", "new", "one", "automatic", "load", "a", "miss", "NUMBER", "png", "and", "i", "search", "the", "image", "with", "the", "choose", "File", "button", "and", "when", "save", "a", "Can", "t", "Be", "Empty", "message", "appears", "down", "my", "choose", "file", "button", "NUMBER", "Are", "you", "see", "any", "error", "o", "problem", "with", "my", "code", "thanks", "for", "the", "time", "NUMBER", "Justin", "i", "put", "my", "solution", "here", "NUMBER", "LINK", "_admin", "issue", "NUMBER", "see", "discussion", "in", "issue", "NUMBER", "Note", "we", "have", "an", "issue", "with", "sign", "columns", "NUMBER", "If", "the", "column", "be", "unsigned", "with", "NUMBER", "bytes", "the", "formula", "matches", "ruby", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "But", "if", "the", "column", "be", "sign", "this", "will", "be", "wrong", "because", "the", "value", "minimum", "value", "will", "be", "NUMBER", "and", "maximum", "value", "will", "be", "NUMBER", "NUMBER", "The", "only", "issue", "in", "this", "case", "be", "that", "the", "size", "attribute", "will", "be", "NUMBER", "instead", "of", "NUMBER", "but", "I", "guess", "it", "s", "not", "a", "real", "problem", "NUMBER", "Another", "question", "be", "this", "NUMBER", "NUMBER", "The", "size", "attribute", "should", "not", "be", "the", "real", "size", "of", "string", "ruby", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "to_s", "NUMBER", "length", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "to_s", "NUMBER", "length", "NUMBER", "NUMBER", "ok", "the", "unsigned", "will", "not", "be", "a", "problem", "because", "user", "may", "want", "to", "type", "NUMBER", "on", "field", "NUMBER", "the", "only", "question", "be", "the", "NUMBER", "now", "justinfrench", "note", "that", "ruby", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "A", "column", "use", "limit", "NUMBER", "the", "max", "value", "will", "be", "NUMBER", "NUMBER", "The", "string", "limit", "will", "be", "NUMBER", "but", "this", "formula", "returns", "NUMBER", "ruby", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "to_s", "NUMBER", "length", "NUMBER", "NUMBER", "That", "allows", "user", "to", "type", "NUMBER", "for", "example", "We", "need", "to", "keep", "in", "mind", "that", "imposing", "a", "character", "limit", "be", "imperfect", "anyway", "NUMBER", "The", "max", "value", "for", "a", "sign", "integer", "column", "be", "NUMBER", "NUMBER", "characters", "and", "the", "min", "value", "be", "NUMBER", "NUMBER", "characters", "see", "LINK", "types", "NUMBER", "html", "NUMBER", "The", "max", "and", "min", "values", "be", "not", "NUMBER", "and", "NUMBER", "and", "both", "of", "these", "would", "pass", "the", "maxlength", "character", "limit", "restriction", "NUMBER", "Perhaps", "setting", "max", "min", "instead", "of", "maxlength", "be", "more", "appropriate", "for", "numeric", "inputs", "but", "I", "don", "t", "know", "if", "it", "has", "sufficient", "browser", "or", "standards", "support", "NUMBER", "LINK", "_input_max", "NUMBER", "asp", "jnimety", "you", "re", "right", "NUMBER", "justinfrench", "it", "s", "ok", "for", "me", "So", "I", "have", "a", "Rails", "NUMBER", "app", "with", "the", "latest", "version", "of", "Mongoid", "ruby", "class", "Category", "include", "Mongoid", "Document", "field", "name", "type", "String", "end", "When", "I", "render", "an", "input", "it", "queries", "the", "database", "for", "each", "entry", "e", "NUMBER", "g", "NUMBER", "that", "s", "NUMBER", "queries", "for", "NUMBER", "categories", "erb", "TAG", "TAG", "select", "collection", "Category", "NUMBER", "all", "TAG", "log", "MONGODB", "bb_development", "categories", "NUMBER", "find", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "_id", "asc", "NUMBER", "many", "many", "more", "times", "It", "gets", "worse", "if", "it", "s", "combined", "with", "a", "default_scope", "ruby", "default_scope", "asc", "name", "log", "MONGODB", "bb_development", "categories", "NUMBER", "find", "deleted_at", "nil", "NUMBER", "sort", "name", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "deleted_at", "nil", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "name", "asc", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "deleted_at", "nil", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "name", "asc", "_id", "asc", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "deleted_at", "nil", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "name", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "deleted_at", "nil", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "name", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "deleted_at", "nil", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "name", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "deleted_at", "nil", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "name", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "deleted_at", "nil", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "name", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "deleted_at", "nil", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "name", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "MONGODB", "bb_development", "categories", "NUMBER", "find", "deleted_at", "nil", "NUMBER", "limit", "NUMBER", "NUMBER", "sort", "name", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "_id", "asc", "The", "only", "way", "I", "know", "how", "to", "prevent", "it", "be", "to", "pass", "in", "the", "collection", "with", "to_a", "ruby", "Category", "NUMBER", "all", "NUMBER", "to_a", "Thoughts", "Here", "s", "my", "input", "code", "f", "NUMBER", "input", "report_columns", "label", "Columns", "as", "check_boxes", "collection", "One", "Two", "Three", "If", "I", "check", "just", "Three", "and", "submit", "the", "value", "I", "get", "for", "report", "columns", "be", "report_columns", "Three", "Thanks", "NUMBER", "I", "heart", "formtastic", "NUMBER", "Dave", "Before", "this", "change", "it", "wasn", "t", "possible", "to", "create", "an", "input", "of", "type", "time", "that", "didn", "t", "default", "to", "the", "current", "date", "NUMBER", "This", "made", "it", "impossible", "to", "differentiate", "between", "a", "form", "submission", "wherein", "the", "user", "hadn", "t", "pick", "a", "date", "and", "one", "in", "which", "they", "d", "pick", "midnight", "UTC", "NUMBER", "Does", "this", "change", "default", "behaviour", "from", "if", "there", "s", "no", "time", "on", "the", "model", "make", "it", "now", "to", "if", "there", "s", "no", "time", "on", "the", "model", "show", "nothing", "I", "m", "not", "necessarily", "against", "that", "change", "but", "we", "should", "be", "conscious", "of", "it", "NUMBER", "The", "way", "I", "would", "put", "the", "current", "behavior", "be", "if", "no", "time", "be", "entered", "in", "a", "formtastic", "time", "input", "save", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "to", "the", "database", "NUMBER", "This", "change", "results", "in", "that", "scenario", "leaving", "the", "field", "nil", "which", "be", "desirable", "if", "you", "ever", "want", "a", "time", "field", "to", "be", "optional", "NUMBER", "save", "to", "the", "database", "be", "too", "implementation", "specific", "so", "let", "s", "stick", "to", "what", "the", "user", "sees", "on", "the", "form", "if", "there", "s", "no", "time", "present", "on", "the", "attribute", "what", "did", "the", "user", "see", "what", "will", "the", "see", "going", "forward", "You", "re", "ask", "about", "an", "edit", "form", "right", "Going", "forward", "the", "user", "sees", "blank", "values", "for", "the", "time", "dropdowns", "when", "the", "field", "be", "nil", "same", "as", "they", "would", "for", "a", "new", "object", "sobrinho", "totally", "agree", "but", "anything", "that", "change", "the", "default", "behaviour", "of", "Formtastic", "should", "be", "at", "least", "well", "documented", "in", "the", "release", "note", "so", "I", "m", "trying", "to", "figure", "out", "what", "the", "user", "facing", "change", "be", "NUMBER", "Sounds", "like", "we", "re", "basically", "on", "the", "same", "page", "then", "NUMBER", "The", "release", "note", "could", "read", "something", "like", "Changed", "time", "input", "so", "that", "blank", "values", "aren", "t", "persisted", "as", "midnight", "Would", "it", "also", "make", "sense", "to", "point", "out", "that", "this", "change", "makes", "the", "formtastic", "behavior", "consistent", "with", "ActionView", "s", "time_select", "with", "include_blank", "Eg", "NUMBER", "time_select", "foo", "bar", "include_blank", "true", "The", "syntax", "introduce", "in", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fab", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "caa", "NUMBER", "d", "NUMBER", "eg", "NUMBER", "concat", "builder", "NUMBER", "fields_for", "author", "index", "NUMBER", "do", "author", "was", "producing", "these", "error", "syntax", "error", "unexpect", "keyword_do_block", "expecting", "SyntaxError", "Rails", "FormBuilder", "allows", "include_blank", "string", "value", "for", "selects", "producing", "TAG", "string", "value", "TAG", "NUMBER", "This", "be", "different", "to", "use", "prompt", "string", "value", "in", "that", "the", "blank", "value", "be", "include", "even", "if", "an", "option", "be", "already", "selected", "NUMBER", "justinfrench", "Thoughts", "At", "the", "moment", "the", "select", "input", "doesn", "t", "allow", "the", "user", "to", "set", "a", "field", "back", "to", "nil", "since", "the", "blank", "option", "be", "suppressed", "if", "the", "field", "already", "has", "a", "value", "NUMBER", "Yep", "that", "s", "what", "the", "patch", "do", "NUMBER", "However", "I", "don", "t", "think", "prompt", "should", "behave", "in", "the", "same", "way", "otherwise", "aren", "t", "include_blank", "and", "prompt", "be", "doing", "exactly", "the", "same", "thing", "NUMBER", "IMO", "the", "difference", "should", "be", "that", "include_blank", "be", "use", "when", "blank", "be", "a", "sensible", "choice", "in", "the", "select", "box", "i", "NUMBER", "e", "NUMBER", "for", "make", "optional", "field", "nullable", "include_blank", "None", "whereas", "prompt", "should", "be", "use", "when", "selecting", "the", "blank", "option", "would", "be", "invalid", "i", "NUMBER", "e", "NUMBER", "only", "as", "a", "hint", "for", "required", "field", "prompt", "Please", "select", "NUMBER", "In", "the", "latter", "case", "since", "it", "doesn", "t", "make", "sense", "to", "revert", "a", "previously", "filled", "field", "to", "a", "blank", "value", "the", "prompt", "shouldn", "t", "be", "include", "if", "a", "value", "be", "present", "NUMBER", "haines", "Thinking", "out", "loud", "NUMBER", "include_blank", "true", "and", "include_blank", "false", "be", "both", "pretty", "obvious", "include_blank", "Some", "String", "be", "pretty", "obvious", "include_blank", "true", "with", "prompt", "Some", "String", "be", "pretty", "obvious", "prompt", "Some", "String", "alone", "should", "imply", "force", "include_blank", "true", "In", "my", "humble", "opinion", "I", "don", "t", "think", "we", "should", "be", "specialising", "the", "behaviour", "based", "on", "if", "the", "object", "be", "be", "created", "or", "edit", "or", "if", "there", "s", "an", "exist", "value", "present", "NUMBER", "If", "the", "form", "author", "wants", "to", "do", "this", "they", "can", "do", "so", "in", "the", "form", "partial", "be", "checking", "the", "state", "of", "the", "object", "or", "the", "params", "action", "NUMBER", "Given", "the", "above", "NUMBER", "NUMBER", "how", "do", "you", "feel", "about", "the", "rules", "above", "NUMBER", "how", "do", "they", "compare", "to", "current", "formtastic", "behaviour", "NUMBER", "how", "do", "they", "compare", "to", "what", "s", "in", "your", "patch", "sobrinho", "what", "do", "you", "think", "I", "guess", "we", "should", "follow", "exactly", "what", "rails", "documentation", "says", "include_blank", "set", "to", "true", "or", "a", "prompt", "string", "if", "the", "first", "option", "element", "of", "the", "select", "element", "be", "a", "blank", "NUMBER", "Useful", "if", "there", "be", "not", "a", "default", "value", "required", "for", "the", "select", "element", "NUMBER", "prompt", "set", "to", "true", "or", "a", "prompt", "string", "NUMBER", "When", "the", "select", "element", "doesn", "t", "have", "a", "value", "yet", "this", "prepends", "an", "option", "with", "a", "generic", "prompt", "Please", "select", "or", "the", "given", "prompt", "string", "NUMBER", "This", "means", "if", "use", "include_blank", "the", "option", "will", "be", "there", "always", "NUMBER", "If", "use", "prompt", "the", "option", "will", "be", "there", "only", "if", "value", "be", "not", "set", "on", "database", "NUMBER", "Seems", "like", "both", "options", "accepts", "boolean", "and", "string", "values", "NUMBER", "That", "s", "what", "your", "patch", "do", "haines", "Ok", "if", "this", "patch", "brings", "us", "in", "line", "with", "Rails", "perfect", "let", "s", "just", "make", "the", "documentation", "be", "up", "to", "date", "too", "NUMBER", "Any", "more", "to", "do", "before", "this", "goes", "in", "haines", "many", "thanks", "have", "merge", "in", "haines", "There", "be", "a", "spec", "fail", "relate", "to", "your", "work", "NUMBER", "Can", "you", "please", "run", "the", "full", "suite", "on", "master", "and", "see", "if", "you", "can", "hunt", "this", "down", "ASAP", "Would", "rather", "not", "revert", "the", "merge", "if", "it", "s", "easily", "solve", "select", "options", "include_blank", "when", "include_blank", "be", "set", "to", "a", "string", "should", "have", "a", "select", "option", "with", "blank", "value", "but", "that", "string", "as", "text", "Failure", "Error", "output_buffer", "NUMBER", "should", "have_tag", "form", "li", "select", "option", "value", "string", "Expected", "NUMBER", "to", "have", "an", "element", "matching", "form", "li", "select", "option", "value", "with", "inner", "text", "string", "but", "find", "NUMBER", "haines", "I", "m", "just", "run", "bundle", "exec", "rake", "haines", "I", "get", "a", "pass", "under", "NUMBER", "and", "a", "fail", "under", "NUMBER", "Curious", "NUMBER", "Running", "bundle", "exec", "rake", "NUMBER", "select", "input", "explicit", "values", "use", "a", "nil", "name", "should", "have", "an", "input", "named", "post", "title", "Failure", "Error", "output_buffer", "NUMBER", "should", "have_tag", "form", "li", "select", "name", "name", "expected", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "Title", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "to", "have", "an", "element", "matching", "form", "li", "select", "name", "post", "title", "but", "did", "not", "NUMBER", "spec", "support", "custom_macros", "NUMBER", "rb", "NUMBER", "in", "block", "in", "it_should_have_select_with_name", "ruby", "NUMBER", "p", "NUMBER", "_Sigh_", "My", "fail", "be", "also", "repeated", "on", "Travis", "CI", "under", "NUMBER", "LINK", "ci", "NUMBER", "org", "justinfrench", "formtastic", "jobs", "NUMBER", "and", "ree", "LINK", "ci", "NUMBER", "org", "justinfrench", "formtastic", "jobs", "NUMBER", "along", "with", "some", "i", "NUMBER", "n", "ones", "that", "have", "be", "bugging", "me", "for", "a", "few", "weeks", "NUMBER", "Under", "NUMBER", "LINK", "ci", "NUMBER", "org", "justinfrench", "formtastic", "jobs", "NUMBER", "and", "NUMBER", "LINK", "ci", "NUMBER", "org", "justinfrench", "formtastic", "jobs", "NUMBER", "on", "Travis", "there", "s", "the", "NUMBER", "n", "stuff", "only", "The", "first", "fail", "build", "for", "the", "i", "NUMBER", "n", "stuff", "was", "a", "README", "change", "so", "sounds", "like", "it", "s", "environmental", "different", "version", "of", "i", "NUMBER", "n", "gem", "for", "example", "so", "I", "ll", "look", "there", "NUMBER", "In", "regards", "to", "the", "select", "fail", "under", "NUMBER", "and", "ree", "and", "the", "varied", "results", "on", "each", "of", "our", "systems", "I", "d", "say", "there", "s", "something", "environmental", "going", "on", "here", "too", "NUMBER", "Will", "compare", "our", "Gemfile", "NUMBER", "lock", "file", "next", "NUMBER", "sobrinho", "haines", "yabawock", "haines", "okay", "diff", "d", "our", "two", "gem", "file", "I", "would", "suspect", "the", "root", "cause", "be", "you", "have", "action", "pack", "and", "railties", "NUMBER", "I", "have", "NUMBER", "I", "run", "bundle", "update", "which", "bump", "me", "up", "to", "NUMBER", "followed", "by", "bundle", "exec", "rake", "and", "the", "full", "suite", "was", "green", "under", "NUMBER", "Spoke", "with", "the", "Travis", "CI", "guys", "and", "they", "suggested", "we", "check", "in", "the", "Gemfile", "NUMBER", "lock", "Why", "didn", "t", "I", "think", "of", "that", "Why", "was", "it", "ignored", "NUMBER", "Waiting", "for", "the", "cifix", "branch", "to", "build", "haines", "seriously", "great", "work", "NUMBER", "I", "ll", "merge", "in", "your", "fix", "and", "it", "s", "probably", "worth", "a", "patch", "to", "Rails", "but", "often", "we", "ve", "just", "patched", "around", "Rails", "inconsistencies", "so", "would", "happily", "accept", "any", "patch", "that", "makes", "Formtastic", "more", "consistent", "regardless", "of", "Rails", "NUMBER", "Having", "said", "that", "I", "m", "pretty", "bummed", "out", "on", "Timeish", "and", "think", "the", "future", "be", "in", "date", "pickers", "so", "I", "personally", "wouldnt", "invest", "heavily", "in", "Timeish", "beyond", "documenting", "the", "inconsistencies", "NUMBER", "If", "you", "re", "motivated", "I", "ll", "definitely", "accept", "the", "patch", "though", "In", "regards", "the", "lock", "file", "that", "was", "just", "a", "whim", "to", "narrow", "things", "down", "wasn", "t", "intending", "that", "as", "a", "permanent", "solution", "NUMBER", "Thanks", "once", "again", "justinfrench", "I", "ve", "had", "some", "good", "experience", "use", "appraisal", "LINK", "as", "an", "enhancement", "to", "test", "suite", "NUMBER", "It", "makes", "test", "against", "different", "combinations", "of", "gems", "very", "easy", "without", "get", "in", "your", "way", "in", "regard", "to", "handle", "Gemfile", "or", "Gemfile", "NUMBER", "lock", "NUMBER", "Also", "it", "would", "enable", "to", "test", "against", "NUMBER", "NUMBER", "and", "NUMBER", "in", "one", "sweet", "setup", "make", "certain", "it", "works", "on", "all", "support", "version", "NUMBER", "I", "d", "offer", "to", "integrate", "it", "into", "the", "current", "testsuite", "if", "there", "s", "interest", "NUMBER", "yabawock", "Yes", "please", "As", "far", "as", "i", "can", "tell", "we", "can", "memoize", "the", "selected_values", "output", "so", "we", "re", "not", "recalculating", "for", "each", "member", "of", "the", "collection", "NUMBER", "This", "be", "my", "first", "time", "looking", "into", "the", "Formtastic", "source", "so", "please", "let", "me", "know", "if", "there", "s", "a", "use", "case", "this", "would", "break", "NUMBER", "I", "also", "want", "to", "mention", "that", "this", "brings", "significant", "speed", "improvement", "on", "large", "sets", "of", "checkboxes", "NUMBER", "Hi", "looks", "great", "Is", "the", "speed", "improvement", "reason", "for", "this", "because", "selected_values", "was", "be", "call", "multiple", "times", "in", "Formtastic", "s", "code", "or", "because", "you", "rendered", "the", "same", "set", "of", "checkboxes", "multiple", "times", "in", "a", "single", "request", "multiple", "times", "in", "formtastic", "for", "a", "single", "collection", "of", "checkboxes", "Merged", "with", "thanks", "I", "m", "having", "trouble", "get", "inline", "error", "to", "show", "up", "for", "nested", "field", "with", "Formtastic", "NUMBER", "My", "models", "be", "set", "to", "go", "with", "accepts_nested_attributes_for", "and", "I", "have", "a", "validates_associated", "call", "as", "well", "NUMBER", "The", "error", "hash", "if", "I", "check", "it", "manually", "spits", "out", "the", "associated_model_name", "NUMBER", "attribute_name", "key", "referencing", "the", "error", "message", "as", "a", "value", "so", "the", "validation", "be", "work", "but", "it", "doesn", "t", "look", "like", "Formtastic", "be", "paying", "it", "any", "attention", "NUMBER", "I", "tried", "digging", "into", "the", "Base", "Errors", "module", "but", "I", "m", "wicked", "lost", "on", "what", "s", "happening", "esp", "NUMBER", "with", "error_keys", "NUMBER", "I", "ve", "put", "the", "relevant", "pieces", "of", "code", "in", "a", "Gist", "NUMBER", "This", "be", "obviously", "drastically", "simplified", "in", "terms", "of", "the", "number", "of", "attributes", "validations", "hooks", "but", "it", "should", "give", "an", "idea", "of", "how", "I", "have", "this", "setup", "LINK", "Using", "Rails", "NUMBER", "and", "Formtastic", "NUMBER", "with", "Ruby", "NUMBER", "NUMBER", "corey", "any", "update", "on", "this", "experience", "the", "same", "issue", "NUMBER", "haven", "t", "had", "a", "chance", "to", "dig", "into", "it", "yet", "but", "wanted", "to", "check", "with", "you", "first", "before", "I", "went", "down", "the", "rabbit", "hole", "Hey", "Jeffrey", "no", "update", "from", "me", "I", "m", "able", "to", "sidestep", "the", "issue", "for", "now", "by", "not", "nesting", "the", "form", "that", "was", "nested", "but", "that", "isn", "t", "usually", "an", "option", "for", "people", "NUMBER", "Hopefully", "Justin", "can", "take", "a", "look", "and", "see", "what", "s", "up", "soon", "but", "I", "suspect", "that", "this", "just", "isn", "t", "support", "NUMBER", "Still", "looking", "at", "this", "want", "to", "get", "a", "fix", "in", "for", "NUMBER", "Since", "I", "ve", "split", "up", "my", "application", "to", "not", "nest", "this", "form", "I", "don", "t", "have", "the", "breaking", "practical", "anymore", "NUMBER", "I", "created", "a", "Rails", "NUMBER", "app", "from", "scratch", "with", "Formtastic", "NUMBER", "and", "it", "be", "not", "exhibiting", "the", "same", "problem", "with", "the", "Formtastic", "configuration", "shared", "in", "the", "Gist", "NUMBER", "I", "m", "wondering", "what", "the", "incompatibility", "be", "the", "application", "in", "question", "was", "originally", "developed", "by", "another", "developer", "in", "Rails", "NUMBER", "and", "I", "took", "over", "and", "upgrade", "it", "to", "Rails", "NUMBER", "and", "then", "Rails", "NUMBER", "It", "s", "very", "possible", "there", "be", "something", "in", "all", "of", "that", "which", "cause", "this", "behavior", "NUMBER", "Jeffrey", "be", "you", "able", "to", "provide", "any", "of", "the", "information", "Justin", "be", "looking", "for", "Hey", "Corey", "no", "I", "haven", "t", "be", "swamped", "with", "work", "NUMBER", "Let", "me", "see", "if", "I", "can", "take", "a", "look", "at", "it", "this", "afternoon", "and", "get", "Justin", "the", "info", "he", "asked", "for", "NUMBER", "Sorry", "for", "dropping", "the", "ball", "on", "this", "NUMBER", "Hi", "Guys", "Some", "months", "ago", "I", "had", "an", "issue", "with", "validations", "on", "nested", "form", "with", "activeadmin", "which", "uses", "formtastic", "that", "might", "be", "relate", "to", "this", "NUMBER", "LINK", "_admin", "issue", "NUMBER", "jeffreyiacono", "any", "update", "on", "this", "let", "me", "bump", "my", "gems", "and", "give", "it", "a", "whirl", "NUMBER", "will", "ping", "you", "back", "later", "today", "on", "this", "justinfrench", "had", "a", "chance", "to", "kick", "the", "tires", "on", "this", "a", "bit", "more", "NUMBER", "I", "throw", "together", "a", "quick", "sample", "app", "LINK", "nested", "errror", "issue", "and", "find", "that", "if", "you", "use", "formtastic", "and", "Rails", "as", "it", "s", "meant", "to", "be", "use", "it", "actually", "works", "properly", "that", "be", "to", "say", "the", "problem", "existed", "between", "keyboard", "and", "chair", "NUMBER", "In", "the", "sample", "app", "I", "have", "a", "Conversation", "model", "that", "has", "many", "embeds", "many", "in", "this", "case", "Messages", "NUMBER", "I", "was", "instantiating", "a", "new", "Conversation", "object", "in", "ConversationsController", "new", "but", "then", "stupidly", "build", "the", "associated", "Message", "instance", "in", "the", "view", "s", "form", "via", "form", "NUMBER", "semantic_fields_for", "message", "conversation", "NUMBER", "message", "NUMBER", "build", "So", "when", "validations", "fail", "and", "the", "new", "view", "was", "re", "rendered", "a", "new", "message", "instance", "was", "be", "created", "and", "the", "error", "were", "not", "be", "display", "on", "this", "item", "which", "be", "to", "be", "expected", "NUMBER", "Give", "my", "analysis", "app", "a", "quick", "overview", "and", "if", "you", "you", "re", "happy", "with", "it", "feel", "free", "to", "close", "this", "issue", "out", "NUMBER", "One", "thing", "to", "note", "the", "error", "message", "on", "the", "associated", "object", "seems", "to", "be", "get", "set", "twice", "NUMBER", "If", "you", "view", "the", "screenshot", "on", "the", "sample", "apps", "landing", "page", "you", "ll", "see", "message", "be", "invalid", "be", "invalid", "within", "the", "message", "hash", "NUMBER", "jeffreyiacono", "thanks", "for", "update", "this", "issue", "with", "your", "findings", "will", "really", "help", "others", "with", "similar", "problem", "closing", "NUMBER", "justinfrench", "sure", "thing", "thanks", "NUMBER", "gems", "formtastic", "NUMBER", "lib", "formtastic", "inputs", "base", "wrapping", "NUMBER", "rb", "write", "in", "line", "NUMBER", "template", "NUMBER", "capture", "block", "error_html", "hint_html", "NUMBER", "join", "n", "NUMBER", "html_safe", "maybe", "better", "template", "NUMBER", "capture", "block", "hint_html", "error_html", "NUMBER", "join", "n", "NUMBER", "html_safe", "and", "following", "code", "do", "not", "work", "Formtastic", "SemanticFormBuilder", "NUMBER", "inline_order", "input", "hints", "error", "Formtastic", "SemanticFormBuilder", "NUMBER", "custom_inline_order", "checkbox", "error", "hints", "input", "Formtastic", "SemanticFormBuilder", "NUMBER", "custom_inline_order", "select", "hints", "input", "error", "Hi", "inline_order", "custom_inline_order", "were", "drop", "from", "NUMBER", "because", "implement", "it", "was", "complicated", "and", "the", "code", "overall", "has", "be", "vastly", "simplified", "allowing", "for", "easy", "monkey", "patching", "or", "overriding", "NUMBER", "The", "current", "ordering", "template", "NUMBER", "capture", "block", "error_html", "hint_html", "NUMBER", "join", "n", "NUMBER", "html_safe", "be", "reflective", "of", "the", "default", "inline_order", "configuration", "that", "NUMBER", "x", "shipped", "with", "NUMBER", "I", "ll", "accept", "pull", "request", "to", "improve", "or", "bring", "back", "the", "effect", "of", "these", "configurables", "but", "I", "m", "not", "really", "motivated", "to", "do", "so", "myself", "NUMBER", "Closing", "for", "now", "NUMBER", "How", "would", "I", "monkey", "patch", "override", "the", "default", "ordering", "in", "Formtastic", "NUMBER", "justinfrench", "I", "m", "looking", "to", "do", "this", "for", "a", "single", "input", "NUMBER", "I", "wanted", "to", "put", "a", "custom", "element", "inline", "next", "to", "one", "of", "my", "input", "field", "but", "I", "couldn", "t", "find", "a", "way", "to", "do", "this", "other", "than", "use", "the", "TAG", "hint", "TAG", "option", "NUMBER", "That", "messes", "up", "my", "layout", "when", "error", "be", "display", "however", "NUMBER", "I", "was", "able", "to", "override", "the", "TAG", "Formtastic", "Inputs", "Base", "Wrapping", "NUMBER", "input_wrapping", "TAG", "method", "to", "display", "hints", "first", "but", "then", "that", "overrides", "it", "for", "all", "inputs", "NUMBER", "If", "there", "s", "some", "way", "to", "just", "add", "some", "custom", "html", "inline", "next", "to", "an", "input", "I", "d", "be", "all", "for", "that", "NUMBER", "Thanks", "a", "bunch", "for", "replying", "Awesome", "NUMBER", "Thanks", "justinfrench", "I", "ll", "give", "this", "a", "try", "I", "m", "looking", "to", "switch", "input", "with", "hints", "across", "the", "board", "to", "get", "form", "field", "similar", "in", "structure", "to", "this", "TAG", "TAG", "Full", "Name", "TAG", "TAG", "When", "you", "win", "this", "be", "the", "name", "we", "use", "to", "make", "you", "famous", "NUMBER", "TAG", "TAG", "TAG", "At", "the", "moment", "it", "looks", "like", "I", "need", "to", "override", "most", "of", "the", "input", "types", "to", "make", "this", "happen", "NUMBER", "This", "ordering", "be", "cosmetic", "but", "hints", "above", "works", "better", "with", "some", "form", "styles", "eg", "NUMBER", "LINK", "That", "example", "be", "not", "use", "formtastic", "but", "I", "m", "build", "something", "use", "the", "same", "appearance", "for", "a", "different", "mini", "site", "NUMBER", "No", "dice", "with", "sponsoring", "this", "sorry", "our", "IT", "budget", "consists", "of", "bailing", "wire", "two", "sticks", "of", "bubblegum", "and", "a", "private", "GitHub", "account", "NUMBER", "Thanks", "for", "the", "effort", "I", "ll", "have", "a", "crack", "at", "the", "Stringish", "approach", "over", "the", "weekend", "and", "see", "how", "I", "go", "NUMBER", "Originally", "LINK", "LINK", "This", "looks", "good", "to", "me", "NUMBER", "sobrinho", "dim", "have", "you", "get", "time", "to", "see", "this", "through", "dim", "apologies", "just", "saw", "the", "other", "one", "had", "be", "sent", "and", "pull", "in", "NUMBER", "Thanks", "See", "NUMBER", "I", "did", "not", "use", "hidden_fields", "as", "I", "it", "doesn", "t", "work", "exactly", "as", "I", "expect", "NUMBER", "First", "of", "all", "method", "should", "return", "boolean", "but", "it", "just", "returns", "the", "value", "from", "options", "which", "often", "be", "nil", "NUMBER", "Converting", "it", "to", "options", "hidden_fields", "will", "do", "the", "job", "but", "it", "won", "t", "be", "correct", "as", "in", "this", "case", "hidden_fields", "false", "will", "return", "false", "hidden_fields", "true", "will", "return", "true", "hidden_fields", "nil", "will", "return", "false", "when", "it", "be", "nil", "it", "should", "probably", "be", "true", "render", "hidden", "by", "default", "NUMBER", "See", "my", "comment", "LINK", "issuecomment", "NUMBER", "in", "NUMBER", "I", "m", "against", "this", "patch", "in", "it", "s", "current", "form", "NUMBER", "It", "change", "default", "behaviour", "and", "breaks", "clearing", "simple", "has_many", "associations", "If", "there", "s", "the", "need", "for", "a", "third", "state", "of", "the", "hidden_fields", "option", "we", "should", "try", "to", "keep", "it", "backwards", "compatible", "and", "add", "some", "more", "intelligence", "to", "parsing", "the", "hidden_fields", "option", "value", "So", "we", "could", "do", "something", "along", "the", "lines", "of", "hidden_fields", "true", "will", "render", "collection", "and", "per", "checkbox", "hidden", "inputs", "hidden_fields", "enable", "will", "render", "collection", "and", "per", "checkbox", "hidden", "inputs", "hidden_fields", "nil", "will", "render", "collection", "hidden", "input", "but", "not", "the", "per", "checkbox", "hidden", "inputs", "hidden_fields", "false", "will", "render", "collection", "hidden", "input", "but", "not", "the", "per", "checkbox", "hidden", "inputs", "hidden_fields", "disabled", "will", "render", "collection", "hidden", "input", "but", "not", "the", "per", "checkbox", "hidden", "inputs", "hidden_fields", "never", "will", "not", "render", "either", "collection", "or", "checkbox", "hidden", "inputs", "I", "don", "t", "see", "it", "breaking", "anything", "NUMBER", "All", "the", "checkbox_input", "specs", "be", "still", "passing", "NUMBER", "But", "use", "a", "symbol", "for", "hidden_fields", "would", "be", "a", "good", "idea", "as", "we", "could", "precisely", "define", "what", "we", "want", "to", "render", "NUMBER", "Does", "this", "make", "more", "sense", "The", "only", "change", "be", "the", "new", "option", "never", "NUMBER", "It", "should", "never", "render", "any", "hidden", "inputs", "NUMBER", "Otherwise", "it", "should", "work", "as", "previously", "with", "false", "true", "and", "nil", "NUMBER", "When", "as", "chck_boxes", "hidden_fields", "false", "the", "hidden", "_none", "field", "be", "still", "rendered", "NUMBER", "PROBLEM", "_fantom_", "_fake_", "entry", "in", "the", "resulting", "array", "NUMBER", "Let", "me", "better", "give", "an", "example", "HAML", "semantic_form_for", "property_search", "do", "f", "f", "NUMBER", "inputs", "do", "f", "NUMBER", "input", "bedrooms", "as", "check_boxes", "hidden_fields", "false", "collection", "NUMBER", "Studio", "NUMBER", "NUMBER", "Bedder", "NUMBER", "NUMBER", "Beds", "f", "NUMBER", "buttons", "This", "renders", "stripped", "to", "bare", "HTML", "TAG", "TAG", "TAG", "TAG", "The", "data", "that", "gets", "into", "into", "params", "property_search", "depending", "on", "what", "s", "checked", "Nothing", "checked", "bedrooms", "NUMBER", "item", "be", "checked", "bedrooms", "NUMBER", "NUMBER", "items", "be", "checked", "bedrooms", "NUMBER", "NUMBER", "etc", "So", "my", "suggestion", "be", "NOT", "to", "render", "any", "hidden", "field", "when", "the", "option", "be", "specified", "to", "avoid", "a", "_fake_", "empty", "element", "in", "the", "array", "NUMBER", "If", "such", "a", "fake", "field", "isn", "t", "rendere", "it", "isn", "t", "possible", "to", "deselect", "all", "checkboxes", "NUMBER", "HTML", "Browser", "don", "t", "send", "the", "input", "field", "value", "property_search", "bedrooms", "unless", "at", "least", "NUMBER", "checkbox", "has", "be", "ticket", "NUMBER", "To", "enable", "an", "application", "to", "recognize", "that", "no", "checkbox", "be", "ticked", "this", "fake", "value", "be", "needed", "NUMBER", "No", "the", "browser", "do", "send", "the", "fake", "field", "even", "if", "nothing", "be", "selected", "NUMBER", "That", "fake", "field", "has", "nothing", "to", "do", "at", "all", "with", "the", "rest", "of", "the", "checkboxes", "from", "HTML", "perspective", "its", "type", "be", "hidden", "NUMBER", "But", "I", "m", "not", "sure", "what", "you", "mean", "saying", "deselect", "all", "checkboxes", "and", "what", "deselecting", "has", "to", "do", "with", "the", "hidden", "input", "NUMBER", "The", "hidden", "field", "ensures", "that", "the", "browser", "always", "sends", "something", "for", "the", "as", "checkboxes", "parameter", "Like", "you", "have", "shown", "in", "your", "example", "when", "no", "checkbox", "be", "selected", "you", "get", "an", "empty", "value", "NUMBER", "This", "enable", "the", "controller", "to", "react", "to", "the", "fact", "that", "the", "user", "hasn", "t", "ticked", "any", "checkbox", "NUMBER", "If", "you", "leave", "out", "the", "hidden", "field", "don", "t", "tick", "any", "checkbox", "and", "submit", "the", "form", "the", "browser", "doesn", "t", "transmit", "anything", "for", "that", "attribute", "NUMBER", "So", "you", "wouldn", "t", "be", "able", "to", "update", "clear", "for", "example", "a", "has", "many", "association", "NUMBER", "The", "controller", "can", "t", "react", "correctly", "when", "an", "_empty", "string", "be", "a", "valid", "value_", "Is", "it", "empty", "string", "or", "nothing", "selected", "then", "NUMBER", "Also", "when", "nothing", "be", "selected", "the", "result", "should", "be", "an", "empty", "array", "or", "nil", "NUMBER", "But", "definitely", "not", "an", "array", "with", "one", "item", "in", "it", "NUMBER", "What", "you", "be", "saying", "be", "kind", "of", "inconsistent", "with", "the", "normal", "understanding", "of", "_what", "empty", "means_", "NUMBER", "_Array", "with", "one", "item", "be", "not", "empty_", "NUMBER", "It", "has", "_one_", "item", "NUMBER", "Additionally", "that", "one", "single", "fake", "item", "needs", "special", "treatment", "all", "the", "time", "NUMBER", "It", "be", "not", "necessary", "as", "in", "most", "cases", "you", "already", "check", "for", "nil", "and", "or", "empty", "arrays", "NUMBER", "I", "m", "still", "not", "convinced", "that", "we", "need", "that", "fake", "item", "NUMBER", "ESPECIALLY", "when", "explicitly", "asked", "not", "to", "render", "the", "hidden", "field", "NUMBER", "Let", "s", "say", "it", "this", "way", "There", "be", "no", "way", "to", "transmit", "an", "empty", "array", "in", "a", "HTML", "form", "so", "you", "need", "to", "resort", "to", "such", "things", "as", "zero", "length", "strings", "NUMBER", "Rails", "performs", "some", "magic", "in", "the", "background", "when", "update", "associations", "and", "treats", "the", "single", "zero", "length", "string", "as", "a", "hint", "to", "clear", "the", "association", "NUMBER", "So", "it", "might", "not", "be", "needed", "in", "your", "use", "case", "but", "it", "be", "in", "most", "other", "use", "cases", "NUMBER", "I", "wouldn", "t", "consider", "this", "a", "bug", "NUMBER", "Yeah", "I", "understand", "that", "you", "can", "t", "transfer", "an", "empty", "array", "via", "HTTP", "for", "Rails", "NUMBER", "But", "that", "be", "not", "the", "point", "NUMBER", "hidden_fields", "false", "should", "not", "use", "any", "hidden", "field", "NUMBER", "That", "will", "cover", "that", "small", "percentage", "of", "use", "cases", "you", "be", "talking", "about", "NUMBER", "Otherwise", "what", "s", "the", "point", "of", "hidden_fields", "option", "NUMBER", "Exactly", "what", "it", "state", "in", "the", "documentations", "hidden_fields", "can", "be", "use", "to", "skip", "Rails", "rendering", "of", "a", "hidden", "field", "before", "every", "checkbox", "If", "you", "do", "not", "set", "this", "flag", "rails", "will", "by", "default", "render", "a", "hidden", "field", "for", "each", "checkbox", "in", "the", "collection", "so", "that", "you", "can", "detect", "the", "checked", "unchecked", "state", "for", "every", "single", "checkbox", "even", "if", "you", "have", "a", "dynamic", "collection", "where", "you", "do", "not", "know", "which", "or", "how", "many", "checkboxes", "will", "be", "display", "NUMBER", "hidden_fields", "do", "affect", "hidden", "inputs", "_only_", "near", "every", "checkbox", "NUMBER", "But", "it", "should", "also", "affect", "the", "single", "_none", "hidden", "field", "that", "doesn", "t", "belong", "to", "either", "of", "the", "checkboxes", "NUMBER", "This", "way", "nil", "will", "be", "use", "when", "nothing", "be", "selected", "instead", "of", "an", "array", "with", "a", "single", "item", "NUMBER", "Currently", "the", "_none", "hidden", "field", "be", "explicitly", "rendered", "when", "hidden_field", "false", "LINK", "_boxes_input", "NUMBER", "rb", "L", "NUMBER", "There", "must", "be", "a", "reason", "for", "doing", "this", "NUMBER", "But", "there", "should", "be", "an", "option", "of", "remove", "that", "field", "as", "well", "NUMBER", "The", "patch", "be", "in", "NUMBER", "I", "m", "not", "really", "convinced", "see", "the", "lengthy", "discussions", "in", "NUMBER", "and", "NUMBER", "for", "the", "original", "intention", "of", "the", "field", "NUMBER", "Plus", "the", "patch", "in", "NUMBER", "change", "default", "behaviour", "and", "be", "bound", "to", "break", "exist", "applications", "work", "with", "associations", "NUMBER", "It", "should", "not", "break", "exist", "behaviour", "NUMBER", "All", "the", "specs", "be", "passing", "for", "the", "checkbox_input", "NUMBER", "And", "it", "will", "ONLY", "apply", "when", "you", "set", "hidden_fields", "to", "false", "you", "don", "t", "usually", "do", "it", "for", "associations", "right", "NUMBER", "This", "be", "whacking", "me", "in", "the", "face", "recently", "as", "well", "NUMBER", "I", "m", "use", "a", "check_boxes", "input", "to", "pass", "back", "IDs", "and", "the", "phantom", "empty", "string", "gets", "translated", "to", "NUMBER", "and", "raises", "an", "exception", "when", "the", "record", "can", "t", "be", "find", "NUMBER", "I", "love", "Formtastic", "but", "this", "behavior", "doesn", "t", "happen", "when", "use", "the", "Rails", "checkbox", "input", "so", "I", "m", "torn", "NUMBER", "cmaggard", "you", "can", "always", "customise", "that", "input", "in", "Formtastic", "to", "suit", "your", "tastes", "in", "the", "meantime", "NUMBER", "Basically", "the", "community", "be", "divided", "on", "how", "this", "should", "be", "approached", "and", "I", "don", "t", "have", "time", "to", "make", "sense", "of", "it", "all", "NUMBER", "Made", "the", "documentation", "for", "custom", "inputs", "more", "idiot", "proof", "after", "be", "an", "idiot", "myself", "Thanks", "Pulled", "more", "fast", "than", "last", "time", "P", "Glad", "to", "help", "Thanks", "for", "the", "great", "library", "NUMBER", "I", "d", "like", "to", "be", "able", "to", "add", "attributes", "to", "each", "TAG", "tag", "in", "a", "select", "input", "NUMBER", "Since", "the", "input_html", "option", "only", "seems", "to", "add", "attributes", "to", "the", "TAG", "tag", "I", "have", "to", "manually", "build", "the", "option", "tags", "and", "pass", "them", "thru", "as", "the", "collection", "option", "NUMBER", "A", "member_html", "option", "that", "works", "similar", "to", "member_label", "and", "member_value", "would", "be", "convenient", "for", "cases", "like", "this", "NUMBER", "erb", "TAG", "Page", "NUMBER", "all", "member_html", "proc", "page", "data", "uri", "page", "NUMBER", "uri", "member_label", "name", "I", "made", "support", "for", "state_machine", "field", "and", "for", "example", "class", "User", "GENDERS", "w", "male", "female", "end", "field", "gender", "will", "be", "select", "input", "do", "Sorry", "it", "took", "so", "long", "to", "review", "this", "be", "great", "There", "s", "a", "small", "typo", "in", "the", "inputs", "helper", "comment", "patch", "and", "it", "d", "be", "great", "if", "you", "could", "add", "a", "few", "lines", "of", "documentation", "to", "SelectInput", "to", "complete", "the", "patch", "NUMBER", "It", "also", "appears", "we", "need", "a", "rebate", "or", "merge", "with", "master", "as", "this", "will", "not", "cleanly", "apply", "now", "NUMBER", "made", "other", "pull", "request", "LINK", "Fixed", "placeholder", "test", "for", "all", "input", "types", "not", "just", "string", "NUMBER", "Added", "placeholders", "for", "textareas", "NUMBER", "Instead", "of", "this", "block", "ruby", "before", "do", "text_or_textarea", "type", "text", "textarea", "input", "end", "You", "could", "use", "type", "directly", "on", "specs", "NUMBER", "Change", "this", "and", "I", "will", "accept", "the", "pull", "request", "You", "mean", "like", "this", "Seems", "fine", "thanks", "I", "NUMBER", "n", "placeholders", "dont", "work", "for", "textareas", "html", "NUMBER", "placeholders", "work", "fine", "for", "text", "elements", "but", "they", "dont", "work", "in", "textareas", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "cea", "NUMBER", "cc", "NUMBER", "e", "NUMBER", "a", "NUMBER", "df", "NUMBER", "I", "made", "a", "pull", "request", "I", "fix", "also", "the", "placeholder", "spec", "NUMBER", "It", "did", "a", "loop", "to", "all", "kind", "of", "inputs", "password", "string", "email", "etc", "NUMBER", "but", "it", "didnt", "include", "that", "in", "the", "specs", "NUMBER", "For", "me", "manually", "marking", "a", "select", "field", "as", "multiple", "select", "doesn", "t", "work", "anymore", "because", "the", "name", "of", "the", "field", "do", "not", "get", "appended", "NUMBER", "formtastic", "NUMBER", "And", "I", "think", "I", "find", "the", "problem", "As", "in", "formatstic", "NUMBER", "the", "option", "to", "mark", "the", "field", "as", "multiple_select", "be", "input_html", "multiple", "true", "lines", "NUMBER", "to", "NUMBER", "of", "ib", "formtastic", "inputs", "select_input", "NUMBER", "rb", "should", "look", "like", "ruby", "def", "multiple_by_options", "options", "input_html", "options", "input_html", "multiple", "end", "instead", "of", "ruby", "def", "multiple_by_options", "options", "multiple", "end", "justinfrench", "From", "input_helper", "NUMBER", "rb", "example", "Specifying", "if", "a", "select", "should", "allow", "multiple", "selections", "TAG", "select", "multiple", "true", "TAG", "select", "multiple", "false", "This", "change", "breaks", "this", "and", "along", "with", "it", "a", "bunch", "of", "my", "form", "maybe", "it", "should", "be", "options", "multiple", "options", "input_html", "options", "input_html", "multiple", "strange", "in", "my", "app", "ruby", "NUMBER", "rails", "NUMBER", "formastic", "NUMBER", "master", "just", "checked", "out", "multiple", "true", "do", "not", "do", "anything", "NUMBER", "justinfrench", "All", "my", "test", "cases", "pass", "thanks", "Sorry", "for", "answering", "late", "NUMBER", "The", "bug", "happens", "when", "I", "use", "formtastic", "for", "a", "search", "form", "in", "combination", "with", "meta_search", "NUMBER", "So", "the", "multi", "select", "field", "be", "neither", "for", "a", "db", "collumn", "nor", "for", "an", "association", "but", "for", "a", "parameter", "for", "meta_search", "NUMBER", "And", "in", "this", "situation", "the", "bug", "persists", "even", "with", "a", "fresh", "bundle", "from", "master", "NUMBER", "I", "m", "currently", "experience", "the", "same", "bug", "in", "my", "application", "NUMBER", "I", "be", "use", "rails", "NUMBER", "and", "formtastic", "gem", "NUMBER", "In", "the", "view", "use", "multiple", "true", "do", "nothing", "and", "use", "the", "input_html", "method", "it", "renders", "a", "multi", "select", "form", "but", "do", "only", "pass", "the", "last", "selected", "attribute", "back", "to", "the", "controller", "modell", "as", "a", "string", "instead", "of", "an", "array", "holding", "all", "the", "selected", "values", "NUMBER", "In", "the", "modell", "the", "field", "be", "an", "integer", "field", "for", "mapping", "multiple", "string", "values", "from", "an", "array", "NUMBER", "TAG", "select", "include_blank", "false", "collection", "Tutor", "SECTIONS", "multiple", "true", "jan", "NUMBER", "sch", "can", "you", "try", "bundling", "direct", "from", "master", "and", "confirm", "if", "your", "case", "be", "resolve", "on", "master", "If", "I", "use", "gem", "formtastic", "git", "git", "github", "NUMBER", "com", "justinfrench", "formtastic", "NUMBER", "git", "branch", "master", "the", "problem", "disappears", "NUMBER", "Time", "for", "a", "new", "release", "maybe", "BTW", "I", "just", "love", "formtastic", "awesome", "work", "NUMBER", "Okay", "sounds", "like", "we", "ve", "get", "it", "better", "for", "most", "people", "in", "that", "one", "bug", "has", "be", "solve", "but", "one", "bug", "with", "tuxwerk", "still", "exists", "which", "I", "m", "struggling", "to", "reproduce", "NUMBER", "I", "m", "going", "to", "get", "these", "patches", "into", "NUMBER", "NUMBER", "stable", "and", "push", "out", "NUMBER", "so", "that", "people", "can", "use", "them", "rather", "than", "sit", "on", "it", "NUMBER", "I", "ve", "just", "push", "NUMBER", "tuxwerx", "would", "be", "great", "if", "you", "can", "double", "check", "with", "that", "release", "NUMBER", "if", "there", "s", "still", "a", "bug", "I", "ll", "have", "to", "dig", "deeper", "I", "ve", "created", "a", "separate", "issue", "NUMBER", "for", "the", "meta", "search", "specific", "stuff", "closing", "NUMBER", "NUMBER", "works", "for", "me", "with", "both", "input_html", "multiple", "true", "and", "multiple", "true", "you", "re", "great", "NUMBER", "thanks", "Fix", "automatic", "dependency", "on", "ActiveRecord", "whether", "application", "uses", "it", "or", "another", "ORM", "ODM", "NUMBER", "I", "guess", "we", "should", "depend", "only", "on", "actionpack", "because", "action", "view", "NUMBER", "Also", "I", "guess", "we", "not", "having", "nothing", "specific", "to", "others", "gems", "NUMBER", "justinfrench", "could", "you", "confirm", "that", "Thanks", "alsemyonov", "pull", "Potentially", "silly", "question", "I", "deal", "with", "lots", "of", "dates", "in", "my", "application", "which", "be", "in", "dd", "mm", "yy", "and", "as", "strings", "use", "jquery", "s", "datepicker", "be", "there", "a", "prebuilt", "way", "in", "formtastic", "to", "format", "all", "of", "these", "field", "for", "me", "I", "know", "this", "be", "something", "I", "could", "do", "at", "model", "level", "but", "thought", "maybe", "there", "s", "something", "I", "can", "do", "in", "the", "form", "and", "dry", "it", "all", "up", "a", "bit", "NUMBER", "Cheers", "At", "the", "moment", "I", "was", "just", "looking", "at", "an", "ugly", "TAG", "string", "label", "Date", "of", "Birth", "input_html", "value", "f", "NUMBER", "object", "NUMBER", "born_at", "NUMBER", "rftime", "d", "m", "Y", "wrapper_html", "class", "date", "I", "m", "all", "up", "for", "other", "options", "of", "course", "and", "version", "of", "formtastic", "NUMBER", "I", "m", "currently", "on", "NUMBER", "I", "thought", "about", "creating", "another", "input", "type", "to", "do", "what", "I", "m", "after", "but", "I", "find", "the", "code", "a", "little", "over", "whelming", "oops", "NUMBER", "Finally", "had", "a", "chance", "to", "implement", "this", "worked", "perfectly", "cheer", "The", "commit_button", "helper", "use", "to", "generate", "HTML", "for", "an", "input", "element", "with", "an", "ID", "like", "model_submit", "NUMBER", "Now", "the", "generate", "input", "element", "has", "no", "ID", "NUMBER", "This", "makes", "my", "test", "sad", "NUMBER", "I", "can", "look", "at", "patching", "this", "but", "I", "wanted", "to", "make", "sure", "that", "it", "wasn", "t", "an", "intentional", "change", "before", "I", "dove", "in", "NUMBER", "That", "be", "a", "change", "on", "rails", "NUMBER", "I", "m", "confortable", "to", "formtastic", "generate", "this", "id", "like", "on", "rails", "NUMBER", "Could", "you", "submit", "a", "pull", "request", "reidab", "could", "you", "submit", "the", "patch", "this", "patch", "will", "only", "work", "if", "there", "be", "one", "save", "button", "on", "the", "form", "NUMBER", "for", "a", "very", "long", "form", "with", "multiple", "save", "buttons", "the", "ids", "would", "need", "a", "way", "to", "be", "unique", "NUMBER", "kclair", "you", "could", "overwrite", "the", "id", "attribute", "no", "Outputs", "a", "select", "input", "for", "columns", "of", "type", "enum", "NUMBER", "Collection", "for", "the", "dropdown", "options", "be", "taken", "as", "column", "NUMBER", "limit", "NUMBER", "This", "be", "use", "with", "plugins", "like", "enum_column", "NUMBER", "errors_helper", "NUMBER", "rb", "line", "NUMBER", "Inline", "error", "be", "concatenated", "with", "the", "to_sentence", "option", "of", "rails", "NUMBER", "If", "we", "have", "for", "example", "two", "error", "on", "the", "same", "field", "it", "could", "get", "a", "bit", "messy", "NUMBER", "Let", "s", "say", "a", "field", "has", "a", "Can", "t", "be", "blank", "NUMBER", "and", "a", "Must", "be", "a", "color", "NUMBER", "error", "message", "NUMBER", "If", "the", "field", "be", "left", "empty", "and", "submitted", "we", "will", "see", "the", "following", "Can", "t", "be", "blank", "NUMBER", "and", "Must", "be", "a", "color", "NUMBER", "Is", "it", "possible", "to", "include", "options", "to", "the", "to_sentence", "method", "Using", "word_connector", "two_words_connector", "and", "last_word_connector", "hash", "it", "could", "be", "possible", "to", "customize", "the", "concatenation", "of", "the", "two", "error", "message", "NUMBER", "Well", "having", "both", "would", "be", "great", "NUMBER", "I", "was", "thinking", "of", "giving", "formtastic", "an", "app", "wide", "attribute", "hash", "in", "the", "locales", "NUMBER", "yml", "NUMBER", "With", "the", "option", "to", "override", "it", "per", "input", "basis", "also", "in", "the", "locales", "NUMBER", "In", "MongoMapper", "despite", "what", "the", "comment", "says", "you", "cannot", "call", "NUMBER", "associations", "method", "NUMBER", "Associations", "be", "an", "accessor", "to", "a", "hash", "so", "I", "ve", "update", "it", "to", "access", "hash", "properties", "NUMBER", "I", "think", "this", "get", "miss", "because", "of", "the", "extensive", "stubbing", "and", "mocking", "going", "on", "NUMBER", "I", "humbly", "suggest", "that", "y", "all", "reconsider", "stubbing", "out", "that", "much", "of", "the", "API", "of", "something", "you", "re", "trying", "to", "integrate", "pretty", "closely", "with", "NUMBER", "Also", "all", "the", "test", "pass", "just", "fine", "in", "ruby", "NUMBER", "so", "you", "can", "probably", "ditch", "the", "warning", "about", "things", "not", "work", "NUMBER", "LINK", "form", "not", "work", "with", "has", "many", "I", "ve", "get", "a", "model", "Order", "class", "Order", "TAG", "OrderDetail", "accepts_nested_attributes_for", "order_details", "end", "When", "in", "my", "view", "I", "try", "to", "build", "a", "nested", "form", "TAG", "TAG", "Detail", "for", "order_detail", "do", "od", "TAG", "Shoe", "NUMBER", "all", "NUMBER", "map", "s", "s", "NUMBER", "article_number", "s", "NUMBER", "id", "TAG", "Size", "NUMBER", "all", "NUMBER", "map", "s", "s", "NUMBER", "number", "s", "NUMBER", "id", "TAG", "Color", "NUMBER", "all", "NUMBER", "map", "c", "c", "NUMBER", "name", "c", "NUMBER", "id", "TAG", "TAG", "TAG", "It", "works", "NUMBER", "But", "use", "for", "order_details", "do", "not", "NUMBER", "It", "renders", "nothing", "NUMBER", "I", "find", "the", "problem", "This", "be", "a", "form", "for", "creating", "the", "Order", "NUMBER", "so", "order", "has", "no", "order_details", "NUMBER", "If", "in", "controller", "I", "put", "order", "NUMBER", "order_details", "NUMBER", "build", "then", "formtastic", "renders", "correctly", "the", "nested", "form", "semantic_form_for", "user", "do", "f", "f", "NUMBER", "inputs", "do", "f", "NUMBER", "input", "status", "as", "select", "collection", "User", "NUMBER", "atuses", "input_html", "name", "custom_name", "custom_name", "nil", "In", "NUMBER", "when", "I", "pass", "nil", "as", "the", "name", "of", "the", "input", "I", "get", "the", "default", "value", "user", "status", "but", "in", "NUMBER", "rc", "NUMBER", "I", "get", "user", "status", "which", "breaks", "the", "form", "NUMBER", "User", "NUMBER", "atus", "in", "this", "case", "be", "a", "boolean", "but", "behavior", "be", "the", "same", "with", "a", "string", "NUMBER", "Ruby", "NUMBER", "Rails", "NUMBER", "Let", "me", "know", "if", "there", "s", "anything", "I", "can", "do", "to", "help", "narrow", "it", "down", "and", "thanks", "for", "the", "excellent", "gem", "NUMBER", "I", "made", "the", "spec", "but", "I", "didn", "t", "send", "a", "push", "request", "because", "it", "pass", "LINK", "NUMBER", "My", "live", "code", "unfortunately", "continues", "to", "fail", "NUMBER", "For", "the", "record", "I", "get", "the", "same", "behavior", "when", "the", "code", "be", "simplified", "to", "the", "following", "and", "it", "behaves", "the", "same", "whether", "user", "NUMBER", "atus", "be", "a", "string", "or", "a", "boolean", "semantic_form_for", "user", "do", "f", "f", "NUMBER", "input", "status", "as", "select", "collection", "input_html", "name", "nil", "I", "just", "created", "a", "fresh", "out", "of", "the", "box", "NUMBER", "project", "for", "test", "and", "get", "the", "same", "behavior", "NUMBER", "NUMBER", "and", "NUMBER", "Works", "correctly", "NUMBER", "Seems", "like", "it", "could", "be", "easier", "to", "update", "to", "NUMBER", "than", "troubleshoot", "this", "NUMBER", "I", "just", "sent", "the", "pull", "request", "in", "case", "you", "wanted", "to", "protect", "against", "that", "bug", "even", "though", "it", "doesn", "t", "occur", "on", "the", "latest", "rails", "NUMBER", "I", "m", "use", "nil", "because", "I", "ve", "get", "a", "form", "which", "sometimes", "needs", "to", "change", "the", "name", "of", "a", "field", "and", "sometimes", "needs", "to", "use", "the", "default", "NUMBER", "I", "can", "calculate", "the", "default", "myself", "but", "it", "seems", "safer", "to", "have", "Formtastic", "do", "the", "work", "for", "me", "NUMBER", "It", "s", "a", "mailing", "address", "form", "I", "have", "both", "a", "state", "select", "and", "a", "state", "text", "input", "NUMBER", "If", "the", "address", "be", "in", "a", "country", "I", "know", "the", "state", "for", "then", "the", "state", "select", "has", "the", "default", "name", "and", "the", "state", "text", "input", "has", "a", "name", "which", "will", "keep", "it", "out", "of", "trouble", "NUMBER", "Otherwise", "the", "opposite", "be", "true", "NUMBER", "My", "country", "select", "javascript", "just", "toggles", "the", "names", "and", "visibilities", "of", "those", "two", "field", "depending", "on", "whether", "a", "selected", "item", "has", "state", "I", "know", "or", "not", "NUMBER", "I", "ve", "left", "the", "issue", "open", "so", "you", "can", "make", "the", "call", "on", "whether", "you", "want", "to", "deal", "with", "this", "or", "not", "NUMBER", "I", "ll", "be", "upgrading", "to", "NUMBER", "Upon", "further", "reflection", "I", "m", "trying", "to", "reinvent", "the", "disabled", "attribute", "NUMBER", "Thanks", "for", "your", "time", "NUMBER", "And", "I", "notice", "that", "my", "pull", "request", "created", "its", "own", "issue", "so", "we", "don", "t", "need", "this", "one", "any", "more", "NUMBER", "Closing", "now", "NUMBER", "Sorry", "for", "cross", "posting", "but", "I", "did", "post", "something", "about", "this", "problem", "on", "stackoverflow", "but", "it", "probably", "would", "have", "be", "better", "to", "raise", "it", "here", "LINK", "for", "NUMBER", "argument", "error", "formtastic", "mongomapper", "and", "rails", "NUMBER", "NUMBER", "I", "realise", "that", "formtastic", "be", "activerecord", "centric", "so", "I", "was", "just", "wondering", "if", "what", "I", "m", "seeing", "below", "be", "just", "an", "incompatibility", "issue", "or", "something", "else", "me", "doing", "something", "stupid", "Using", "rails", "NUMBER", "ruby", "NUMBER", "mongo_mapper", "NUMBER", "and", "formtastic", "NUMBER", "rc", "NUMBER", "I", "have", "the", "following", "simple", "model", "class", "Product", "include", "MongoMapper", "Document", "key", "name", "String", "end", "and", "this", "be", "the", "corresponding", "form", "TAG", "TAG", "TAG", "TAG", "The", "form", "NUMBER", "inputs", "line", "be", "producing", "the", "wrong", "number", "of", "argument", "NUMBER", "for", "NUMBER", "Is", "this", "okay", "Rendered", "products", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "ms", "Rendered", "products", "new", "NUMBER", "html", "NUMBER", "erb", "within", "layouts", "application", "NUMBER", "ms", "Completed", "NUMBER", "Internal", "Server", "Error", "in", "NUMBER", "ms", "ActionView", "Template", "Error", "wrong", "number", "of", "argument", "NUMBER", "for", "NUMBER", "NUMBER", "TAG", "NUMBER", "TAG", "NUMBER", "TAG", "NUMBER", "TAG", "app", "views", "products", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "block", "in", "_app_views_products__form_html_erb__", "NUMBER", "_", "NUMBER", "app", "views", "products", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "_app_views_products__form_html_erb__", "NUMBER", "_", "NUMBER", "app", "views", "products", "new", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "_app_views_products_new_html_erb___", "NUMBER", "_", "NUMBER", "app", "controllers", "products_controller", "NUMBER", "rb", "NUMBER", "in", "new", "Thanks", "for", "looking", "at", "this", "rails", "NUMBER", "ruby", "NUMBER", "mongo_mapper", "NUMBER", "and", "formtastic", "NUMBER", "rc", "NUMBER", "mongo", "NUMBER", "I", "put", "some", "code", "that", "recreates", "the", "problem", "up", "here", "LINK", "_app", "sorry", "I", "was", "be", "extra", "stupid", "before", "here", "be", "the", "full", "stacktrace", "mongo_mapper", "NUMBER", "lib", "mongo_mapper", "plugins", "associations", "NUMBER", "rb", "NUMBER", "in", "associations", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "inputs_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "fieldset_contents_from_column_list", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "inputs_helper", "NUMBER", "rb", "NUMBER", "in", "collect", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "inputs_helper", "NUMBER", "rb", "NUMBER", "in", "fieldset_contents_from_column_list", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "inputs_helper", "NUMBER", "rb", "NUMBER", "in", "inputs", "app", "views", "products", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "block", "in", "_app_views_products__form_html_erb__", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "actionpack", "NUMBER", "lib", "action_view", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "fields_for", "actionpack", "NUMBER", "lib", "action_view", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "form_for", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "semantic_form_for", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "with_custom_field_error_proc", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "semantic_form_for", "app", "views", "products", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "_app_views_products__form_html_erb__", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "render_partial", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "wrap_formats", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render_partial", "actionpack", "NUMBER", "lib", "action_view", "helpers", "rendering_helper", "NUMBER", "rb", "NUMBER", "in", "render", "app", "views", "products", "new", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "_app_views_products_new_html_erb__", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render_with_layout", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "wrap_formats", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "_render_template", "actionpack", "NUMBER", "lib", "action_controller", "metal", "streaming", "NUMBER", "rb", "NUMBER", "in", "_render_template", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "lib", "action_controller", "metal", "renderers", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "lib", "action_controller", "metal", "compatibility", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rendering", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render", "activesupport", "NUMBER", "lib", "active_support", "core_ext", "benchmark", "NUMBER", "rb", "NUMBER", "in", "block", "in", "ms", "Users", "conor", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "benchmark", "NUMBER", "rb", "NUMBER", "in", "realtime", "activesupport", "NUMBER", "lib", "active_support", "core_ext", "benchmark", "NUMBER", "rb", "NUMBER", "in", "ms", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "cleanup_view_runtime", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "implicit_render", "NUMBER", "rb", "NUMBER", "in", "default_render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "mime_responds", "NUMBER", "rb", "NUMBER", "in", "block", "in", "retrieve_response_from_mimes", "actionpack", "NUMBER", "lib", "action_controller", "metal", "mime_responds", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_controller", "metal", "mime_responds", "NUMBER", "rb", "NUMBER", "in", "respond_to", "app", "controllers", "products_controller", "NUMBER", "rb", "NUMBER", "in", "new", "actionpack", "NUMBER", "lib", "action_controller", "metal", "implicit_render", "NUMBER", "rb", "NUMBER", "in", "send_action", "actionpack", "NUMBER", "lib", "abstract_controller", "base", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rendering", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "abstract_controller", "callbacks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_action", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run__", "NUMBER", "__process_action__", "NUMBER", "__callbacks", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run_process_action_callbacks", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "run_callbacks", "actionpack", "NUMBER", "lib", "abstract_controller", "callbacks", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rescue", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_action", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "params_wrapper", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "abstract_controller", "base", "NUMBER", "rb", "NUMBER", "in", "process", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "process", "actionpack", "NUMBER", "lib", "action_controller", "metal", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rack_delegation", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "lib", "action_controller", "metal", "NUMBER", "rb", "NUMBER", "in", "block", "in", "action", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "mount", "NUMBER", "lib", "rack", "mount", "route_set", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "recognize", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "optimized_each", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "recognize", "rack", "mount", "NUMBER", "lib", "rack", "mount", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "mongo_mapper", "NUMBER", "lib", "mongo_mapper", "middleware", "identity_map", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "best_standards_support", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "etag", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "conditionalget", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "head", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "params_parser", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "flash", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "session", "abstract", "id", "NUMBER", "rb", "NUMBER", "in", "context", "rack", "NUMBER", "lib", "rack", "session", "abstract", "id", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "cookies", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "callbacks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run_call_callbacks", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "run_callbacks", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "callbacks", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "reloader", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "sendfile", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "remote_ip", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "show_exceptions", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "rack", "logger", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "methodoverride", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "runtime", "NUMBER", "rb", "NUMBER", "in", "call", "activesupport", "NUMBER", "lib", "active_support", "cache", "strategy", "local_cache", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "lock", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "static", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "engine", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "rack", "content_length", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "rack", "log_tailer", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "handler", "webrick", "NUMBER", "rb", "NUMBER", "in", "service", "Users", "conor", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "httpserver", "NUMBER", "rb", "NUMBER", "in", "service", "Users", "conor", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "httpserver", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "conor", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "server", "NUMBER", "rb", "NUMBER", "in", "block", "in", "start_thread", "I", "m", "having", "the", "same", "issue", "NUMBER", "This", "happened", "after", "a", "gem", "update", "from", "Formtastic", "NUMBER", "to", "NUMBER", "Gem", "Versions", "formtastic", "NUMBER", "mongo_mapper", "NUMBER", "rails", "NUMBER", "Stack", "Trace", "mongo_mapper", "NUMBER", "lib", "mongo_mapper", "plugins", "associations", "NUMBER", "rb", "NUMBER", "in", "associations", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "reflection", "NUMBER", "rb", "NUMBER", "in", "reflection_for", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "reflection", "NUMBER", "rb", "NUMBER", "in", "association_primary_key_for_method", "formtastic", "NUMBER", "lib", "formtastic", "inputs", "base", "associations", "NUMBER", "rb", "NUMBER", "in", "association_primary_key", "formtastic", "NUMBER", "lib", "formtastic", "inputs", "base", "naming", "NUMBER", "rb", "NUMBER", "in", "input_name", "formtastic", "NUMBER", "lib", "formtastic", "inputs", "base", "labelling", "NUMBER", "rb", "NUMBER", "in", "label_html", "formtastic", "NUMBER", "lib", "formtastic", "inputs", "number_input", "NUMBER", "rb", "NUMBER", "in", "block", "in", "to_html", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "formtastic", "NUMBER", "lib", "formtastic", "inputs", "base", "wrapping", "NUMBER", "rb", "NUMBER", "in", "input_wrapping", "formtastic", "NUMBER", "lib", "formtastic", "inputs", "number_input", "NUMBER", "rb", "NUMBER", "in", "to_html", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "input_helper", "NUMBER", "rb", "NUMBER", "in", "input", "app", "views", "games", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "_app_views_games__form_html_erb__", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "fieldset_wrapper", "NUMBER", "rb", "NUMBER", "in", "field_set_and_list_wrapping", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "inputs_helper", "NUMBER", "rb", "NUMBER", "in", "inputs", "app", "views", "games", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "block", "in", "_app_views_games__form_html_erb__", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "actionpack", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "actionpack", "NUMBER", "lib", "action_view", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "fields_for", "actionpack", "NUMBER", "lib", "action_view", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "form_for", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "semantic_form_for", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "with_custom_field_error_proc", "formtastic", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "semantic_form_for", "app", "views", "games", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "_app_views_games__form_html_erb__", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "render_partial", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "wrap_formats", "actionpack", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render_partial", "actionpack", "NUMBER", "lib", "action_view", "helpers", "rendering_helper", "NUMBER", "rb", "NUMBER", "in", "render", "app", "views", "application", "new", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "_app_views_application_new_html_erb__", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render_with_layout", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "wrap_formats", "actionpack", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render_template", "actionpack", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "_render_template", "actionpack", "NUMBER", "lib", "action_controller", "metal", "streaming", "NUMBER", "rb", "NUMBER", "in", "_render_template", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "lib", "action_controller", "metal", "renderers", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "lib", "action_controller", "metal", "compatibility", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rendering", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render", "activesupport", "NUMBER", "lib", "active_support", "core_ext", "benchmark", "NUMBER", "rb", "NUMBER", "in", "block", "in", "ms", "Users", "gate", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "benchmark", "NUMBER", "rb", "NUMBER", "in", "realtime", "activesupport", "NUMBER", "lib", "active_support", "core_ext", "benchmark", "NUMBER", "rb", "NUMBER", "in", "ms", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "cleanup_view_runtime", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "implicit_render", "NUMBER", "rb", "NUMBER", "in", "default_render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "mime_responds", "NUMBER", "rb", "NUMBER", "in", "block", "in", "retrieve_response_from_mimes", "actionpack", "NUMBER", "lib", "action_controller", "metal", "responder", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_controller", "metal", "responder", "NUMBER", "rb", "NUMBER", "in", "default_render", "actionpack", "NUMBER", "lib", "action_controller", "metal", "responder", "NUMBER", "rb", "NUMBER", "in", "to_html", "responders", "NUMBER", "lib", "responders", "flash_responder", "NUMBER", "rb", "NUMBER", "in", "to_html", "actionpack", "NUMBER", "lib", "action_controller", "metal", "responder", "NUMBER", "rb", "NUMBER", "in", "respond", "actionpack", "NUMBER", "lib", "action_controller", "metal", "responder", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_controller", "metal", "mime_responds", "NUMBER", "rb", "NUMBER", "in", "respond_with", "inherited_resources", "NUMBER", "lib", "inherited_resources", "actions", "NUMBER", "rb", "NUMBER", "in", "new", "actionpack", "NUMBER", "lib", "action_controller", "metal", "implicit_render", "NUMBER", "rb", "NUMBER", "in", "send_action", "actionpack", "NUMBER", "lib", "abstract_controller", "base", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rendering", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "abstract_controller", "callbacks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_action", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run__", "NUMBER", "__process_action__", "NUMBER", "__callbacks", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run_process_action_callbacks", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "run_callbacks", "actionpack", "NUMBER", "lib", "abstract_controller", "callbacks", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rescue", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_action", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "action_controller", "metal", "params_wrapper", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "lib", "abstract_controller", "base", "NUMBER", "rb", "NUMBER", "in", "process", "actionpack", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "process", "actionpack", "NUMBER", "lib", "action_controller", "metal", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "lib", "action_controller", "metal", "rack_delegation", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "lib", "action_controller", "metal", "NUMBER", "rb", "NUMBER", "in", "block", "in", "action", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "mount", "NUMBER", "lib", "rack", "mount", "route_set", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "recognize", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "optimized_each", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "recognize", "rack", "mount", "NUMBER", "lib", "rack", "mount", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "mongo_mapper", "NUMBER", "lib", "mongo_mapper", "middleware", "identity_map", "NUMBER", "rb", "NUMBER", "in", "call", "warden", "NUMBER", "lib", "warden", "manager", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "warden", "NUMBER", "lib", "warden", "manager", "NUMBER", "rb", "NUMBER", "in", "catch", "warden", "NUMBER", "lib", "warden", "manager", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "best_standards_support", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "etag", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "conditionalget", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "head", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "params_parser", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "flash", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "session", "abstract", "id", "NUMBER", "rb", "NUMBER", "in", "context", "rack", "NUMBER", "lib", "rack", "session", "abstract", "id", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "cookies", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "callbacks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run_call_callbacks", "activesupport", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "run_callbacks", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "callbacks", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "reloader", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "sendfile", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "remote_ip", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "show_exceptions", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "rack", "logger", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "methodoverride", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "runtime", "NUMBER", "rb", "NUMBER", "in", "call", "activesupport", "NUMBER", "lib", "active_support", "cache", "strategy", "local_cache", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "lock", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "lib", "action_dispatch", "middleware", "static", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "engine", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "rack", "content_length", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "lib", "rails", "rack", "log_tailer", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "handler", "webrick", "NUMBER", "rb", "NUMBER", "in", "service", "Users", "gate", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "httpserver", "NUMBER", "rb", "NUMBER", "in", "service", "Users", "gate", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "httpserver", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "gate", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "server", "NUMBER", "rb", "NUMBER", "in", "block", "in", "start_thread", "Also", "having", "this", "issue", "stack", "trace", "LINK", "ruby", "NUMBER", "p", "NUMBER", "formtastic", "NUMBER", "mongo_mapper", "NUMBER", "rails", "NUMBER", "Random", "guesswork", "because", "I", "don", "t", "use", "MongoDB", "or", "MongoMapper", "Can", "someone", "try", "change", "line", "NUMBER", "of", "lib", "formtastic", "helpers", "reflection", "NUMBER", "rb", "from", "object", "NUMBER", "class", "NUMBER", "associations", "method", "to", "object", "NUMBER", "class", "NUMBER", "associations", "method", "restart", "your", "server", "and", "see", "if", "it", "helps", "or", "hinders", "Alternatively", "that", "s", "the", "line", "that", "s", "fail", "help", "me", "figure", "out", "what", "MongoMapper", "be", "expecting", "inzycle", "ConorNugent", "inzycle", "danielevans", "I", "be", "also", "having", "this", "issue", "but", "with", "formtastic", "NUMBER", "ruby", "NUMBER", "p", "NUMBER", "formtastic", "NUMBER", "mongo_mapper", "NUMBER", "rails", "NUMBER", "I", "went", "to", "look", "at", "line", "NUMBER", "of", "lib", "formtastic", "helpers", "reflection", "NUMBER", "rb", "and", "it", "was", "object", "NUMBER", "class", "NUMBER", "associations", "method", "NUMBER", "I", "change", "it", "to", "object", "NUMBER", "class", "NUMBER", "associations", "method", "because", "associations", "returns", "a", "hash", "It", "seem", "to", "fix", "the", "error", "just", "to", "confirm", "I", "be", "use", "formtastic", "NUMBER", "not", "NUMBER", "as", "I", "put", "in", "the", "list", "Same", "here", "change", "to", "TAG", "object", "NUMBER", "class", "NUMBER", "associations", "method", "TAG", "its", "fix", "now", "NUMBER", "I", "also", "just", "tried", "use", "the", "edge", "version", "in", "my", "Gemfile", "gem", "formtastic", "git", "git", "github", "NUMBER", "com", "justinfrench", "formtastic", "NUMBER", "git", "and", "that", "works", "fine", "too", "benaldred", "inzycle", "I", "m", "really", "confused", "NUMBER", "Line", "NUMBER", "in", "master", "LINK", "L", "NUMBER", "has", "square", "brackets", "ruby", "object", "NUMBER", "class", "NUMBER", "associations", "method", "My", "suggestion", "was", "to", "change", "it", "to", "round", "brackets", "ruby", "object", "NUMBER", "class", "NUMBER", "associations", "method", "You", "guys", "seem", "to", "be", "suggesting", "that", "you", "did", "the", "reverse", "and", "that", "it", "fix", "the", "issue", "which", "leaves", "me", "epically", "confused", "NUMBER", "Ok", "I", "ve", "figured", "it", "out", "NUMBER", "This", "was", "resolve", "in", "NUMBER", "cb", "NUMBER", "ed", "on", "master", "but", "wasn", "t", "cherry", "pick", "over", "to", "NUMBER", "NUMBER", "stable", "so", "it", "didn", "t", "go", "out", "in", "NUMBER", "I", "ve", "do", "this", "now", "NUMBER", "If", "you", "bundle", "from", "NUMBER", "NUMBER", "stable", "with", "the", "git", "option", "and", "restart", "your", "server", "everything", "should", "be", "resolve", "NUMBER", "If", "a", "few", "of", "you", "could", "verify", "NUMBER", "NUMBER", "stable", "resolve", "this", "issue", "fully", "I", "ll", "ship", "NUMBER", "Would", "like", "to", "do", "that", "in", "the", "next", "few", "hours", "if", "possible", "NUMBER", "inzycle", "ConorNugent", "inzycle", "danielevans", "benaldred", "I", "can", "verify", "that", "use", "gem", "formtastic", "git", "git", "github", "NUMBER", "com", "justinfrench", "formtastic", "NUMBER", "git", "branch", "NUMBER", "NUMBER", "stable", "in", "my", "Gemfile", "resolve", "the", "issue", "Awesome", "push", "NUMBER", "Pushed", "Closing", "NUMBER", "Hi", "I", "rewrote", "my", "previous", "code", "and", "now", "it", "be", "works", "perfectly", "Note", "your", "commit", "include", "a", "bogus", "file", "spec", "inputs", "NUMBER", "check_boxes_input_spec", "NUMBER", "rb", "Oh", "my", "unconfigured", "emacs", "NUMBER", "I", "m", "run", "into", "an", "issue", "where", "all", "check_boxes", "be", "be", "checked", "no", "mather", "what", "the", "object", "actually", "be", "NUMBER", "The", "bug", "seems", "to", "be", "due", "to", "LINK", "_boxes_input", "NUMBER", "rb", "L", "NUMBER", "which", "only", "try", "to", "set", "selected_items", "if", "collection", "be", "not", "given", "or", "be", "not", "an", "array", "NUMBER", "I", "have", "something", "like", "this", "for", "my", "users", "which", "use", "to", "work", "before", "TAG", "check_boxes", "collection", "User", "ROLES", "NUMBER", "collect", "r", "r", "NUMBER", "humanize", "r", "Now", "user", "NUMBER", "roles", "could", "be", "admin", "and", "User", "ROLES", "NUMBER", "collect", "r", "r", "NUMBER", "humanize", "r", "be", "Admin", "admin", "User", "user", "still", "both", "check_boxes", "be", "checked", "NUMBER", "I", "m", "run", "the", "latests", "formtastic", "from", "master", "on", "Rails", "NUMBER", "Ruby", "NUMBER", "It", "s", "broken", "in", "NUMBER", "rc", "NUMBER", "and", "work", "as", "expected", "in", "NUMBER", "rc", "NUMBER", "Want", "me", "to", "git", "bisect", "to", "find", "the", "commit", "that", "broke", "it", "OK", "I", "ll", "look", "into", "it", "tomorrow", "commit", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "bde", "NUMBER", "introduce", "this", "issue", "NUMBER", "TimothyKlim", "made", "more", "change", "to", "that", "code", "NUMBER", "Maybe", "he", "can", "explain", "what", "LINK", "_boxes_input", "NUMBER", "rb", "L", "NUMBER", "be", "about", "Check", "out", "my", "propose", "fix", "NUMBER", "Unfortunately", "the", "specs", "for", "check_boxes", "be", "all", "fail", "also", "before", "change", "this", "so", "I", "can", "hardly", "verify", "the", "fix", "with", "them", "NUMBER", "I", "have", "test", "this", "in", "my", "app", "where", "it", "be", "work", "fine", "now", "Hi", "Check", "this", "LINK", "Well", "it", "s", "up", "to", "Justin", "now", "to", "decide", "on", "which", "pull", "request", "to", "take", "IMO", "it", "would", "be", "best", "to", "back", "this", "up", "with", "specs", "but", "that", "requires", "get", "all", "the", "checkboxes", "specs", "to", "pass", "first", "NUMBER", "Well", "I", "have", "test", "both", "pull", "request", "NUMBER", "and", "this", "one", "and", "both", "fix", "the", "issue", "I", "report", "NUMBER", "Let", "s", "defer", "merge", "for", "a", "bit", "until", "specs", "be", "fix", "up", "for", "check_boxes", "NUMBER", "I", "saw", "references", "to", "that", "in", "NUMBER", "P", "NUMBER", "S", "NUMBER", "you", "wanted", "to", "say", "cthiel", "in", "your", "last", "comment", "My", "first", "fix", "wasn", "t", "correct", "that", "s", "why", "other", "test", "were", "fail", "NUMBER", "I", "now", "pull", "in", "the", "fix", "from", "TimothyKlim", "and", "also", "add", "a", "spec", "for", "this", "issue", "NUMBER", "Should", "be", "ready", "to", "merge", "now", "NUMBER", "So", "How", "do", "we", "proceed", "with", "this", "IMO", "it", "s", "ready", "NUMBER", "Many", "thanks", "This", "be", "a", "reasonably", "large", "pull", "request", "that", "add", "the", "ability", "to", "use", "haml", "f", "NUMBER", "input", "name", "data", "foo", "bar", "rather", "than", "haml", "f", "NUMBER", "input", "name", "input_html", "data", "foo", "bar", "Currently", "with", "the", "exception", "of", "with", "checkboxes", "more", "on", "that", "below", "The", "reason", "it", "be", "large", "be", "because", "in", "the", "process", "of", "make", "this", "change", "I", "ve", "also", "do", "the", "following", "NUMBER", "Added", "RSpec", "profiling", "to", "make", "it", "easier", "to", "spot", "slow", "specs", "Added", "Guard", "RSpec", "to", "support", "TDD", "Moved", "Formtastic", "specs", "in", "to", "spec", "formtastic", "to", "follow", "RSpec", "convention", "Fixed", "bundle", "console", "by", "add", "require", "active_support", "to", "lib", "formtastic", "NUMBER", "rb", "Changed", "an", "I", "NUMBER", "n", "spec", "that", "I", "believe", "was", "test", "something", "different", "to", "what", "was", "describe", "Removed", "some", "trail", "whitespace", "in", "lib", "formtastic", "inputs", "base", "NUMBER", "rb", "All", "the", "change", "be", "as", "atomic", "as", "I", "could", "make", "them", "NUMBER", "Naturally", "the", "small", "change", "I", "made", "to", "pass", "the", "data", "straight", "through", "to", "Rails", "be", "somewhat", "dependent", "on", "the", "new", "location", "of", "the", "spec", "file", "NUMBER", "There", "be", "one", "fail", "spec", "because", "of", "checkboxes", "and", "the", "non", "standard", "approach", "to", "generating", "input_html_options", "NUMBER", "I", "plan", "to", "fix", "this", "but", "wanted", "to", "discuss", "the", "approach", "before", "proceeding", "as", "from", "the", "TODO", "I", "m", "guessing", "you", "might", "already", "have", "thoughts", "on", "how", "you", "want", "to", "do", "this", "NUMBER", "I", "notice", "the", "issue", "you", "created", "regard", "speeding", "up", "test", "and", "decided", "to", "not", "use", "mock_everything", "in", "the", "data_attributes_spec", "NUMBER", "The", "reason", "be", "mock_everything", "do", "a", "lot", "of", "work", "that", "isn", "t", "required", "in", "the", "new", "specs", "and", "creating", "less", "mocks", "and", "stubs", "should", "help", "speed", "things", "up", "NUMBER", "Let", "me", "know", "if", "you", "want", "this", "pull", "request", "broken", "up", "NUMBER", "I", "m", "happy", "to", "rebase", "away", "commit", "and", "push", "new", "branch", "NUMBER", "Regards", "James", "Hi", "Justin", "I", "m", "happy", "to", "rebase", "this", "every", "so", "often", "to", "keep", "it", "up", "to", "date", "NUMBER", "Not", "sure", "why", "it", "doesn", "t", "apply", "cleanly", "at", "the", "moment", "though", "NUMBER", "Perhaps", "there", "was", "a", "commit", "made", "after", "I", "forked", "from", "master", "NUMBER", "I", "m", "sure", "it", "won", "t", "be", "a", "problem", "to", "resolve", "though", "NUMBER", "The", "fail", "test", "be", "due", "to", "the", "inconsistent", "behaviour", "use", "when", "generating", "input_html_options", "LINK", "_input", "NUMBER", "rb", "L", "NUMBER", "for", "a", "_hidden", "input_", "NUMBER", "Sorry", "about", "that", "it", "s", "nothing", "to", "do", "with", "checkboxes", "NUMBER", "It", "should", "be", "easy", "enough", "to", "fix", "but", "it", "was", "midnight", "when", "I", "came", "across", "it", "and", "had", "to", "call", "it", "a", "night", "NUMBER", "Plugins", "and", "libraries", "like", "Guard", "Rspec", "and", "Rake", "NUMBER", "vim", "expect", "spec", "file", "to", "mirror", "lib", "file", "in", "gems", "which", "be", "why", "I", "moved", "the", "specs", "NUMBER", "A", "small", "change", "to", "the", "Guardfile", "would", "fix", "this", "but", "something", "like", "Rake", "NUMBER", "vim", "can", "not", "as", "far", "as", "I", "m", "aware", "look", "anywhere", "but", "in", "a", "mirrored", "location", "NUMBER", "I", "m", "not", "sure", "how", "other", "editors", "that", "have", "a", "jump", "to", "spec", "feature", "TextMate", "Sublime", "Text", "etc", "NUMBER", "behave", "NUMBER", "Perhaps", "they", "have", "a", "more", "forgiving", "lookup", "path", "and", "instead", "of", "moving", "the", "specs", "I", "can", "ask", "tpope", "to", "change", "Rake", "NUMBER", "vim", "to", "look", "in", "more", "than", "one", "place", "NUMBER", "I", "can", "remove", "the", "spec", "move", "commit", "if", "you", "d", "prefer", "NUMBER", "It", "will", "cause", "issue", "for", "anyone", "with", "a", "long", "run", "feature", "branch", "when", "they", "come", "to", "rebase", "or", "merge", "NUMBER", "jcf", "it", "already", "looks", "NUMBER", "places", "test", "spec", "test", "unit", "and", "spec", "unit", "NUMBER", "I", "looked", "at", "a", "couple", "of", "dozen", "gems", "gems", "when", "I", "first", "write", "rake", "NUMBER", "vim", "and", "those", "were", "the", "recurring", "structures", "NUMBER", "The", "rest", "were", "all", "over", "the", "map", "NUMBER", "Point", "me", "at", "NUMBER", "unrelated", "gems", "that", "use", "the", "same", "pattern", "and", "I", "ll", "add", "support", "for", "it", "NUMBER", "And", "I", "agree", "with", "justinfrench", "that", "a", "massive", "rearrange", "doesn", "t", "belong", "in", "the", "middle", "of", "an", "unrelated", "pull", "request", "NUMBER", "But", "I", "would", "add", "that", "a", "rename", "on", "master", "shouldn", "t", "be", "the", "end", "of", "the", "world", "NUMBER", "Git", "support", "merge", "through", "rename", "NUMBER", "I", "ve", "remove", "the", "spec", "move", "from", "this", "pull", "request", "for", "now", "NUMBER", "tpope", "Thanks", "for", "responding", "NUMBER", "I", "think", "there", "be", "two", "common", "patterns", "use", "in", "Ruby", "gems", "with", "RSpec", "NUMBER", "For", "a", "Ruby", "file", "in", "lib", "a", "b", "implementation", "NUMBER", "rb", "there", "be", "two", "typical", "locations", "of", "a", "spec", "NUMBER", "NUMBER", "spec", "a", "b", "implementation_spec", "NUMBER", "rb", "NUMBER", "spec", "b", "implementation_spec", "NUMBER", "rb", "The", "latter", "be", "use", "in", "WebMock", "Formtastic", "Sunspot", "and", "I", "m", "sure", "a", "fair", "few", "other", "gems", "NUMBER", "It", "s", "not", "the", "convention", "but", "it", "be", "out", "there", "NUMBER", "I", "don", "t", "think", "I", "ve", "ever", "seen", "spec", "unit", "use", "NUMBER", "I", "m", "keen", "to", "pull", "most", "of", "this", "in", "but", "it", "needs", "a", "rebase", "and", "I", "d", "really", "prefer", "some", "smaller", "pull", "request", "or", "commit", "NUMBER", "At", "the", "very", "least", "can", "I", "convince", "you", "to", "rebase", "I", "ve", "rebased", "and", "fix", "a", "couple", "of", "fail", "test", "NUMBER", "If", "you", "want", "me", "to", "break", "this", "pull", "request", "up", "I", "m", "happy", "to", "do", "so", "NUMBER", "Maybe", "you", "could", "list", "the", "commit", "you", "want", "and", "the", "ones", "you", "don", "t", "and", "I", "ll", "get", "rid", "of", "the", "ones", "you", "don", "t", "NUMBER", "I", "ve", "fix", "the", "FormtasticInputs", "helper", "I", "add", "NUMBER", "Essentially", "I", "ve", "made", "it", "stricter", "in", "order", "to", "prevent", "test", "objects", "that", "aren", "t", "inputs", "NUMBER", "I", "ve", "remove", "a", "couple", "of", "autoloads", "in", "Formtastic", "Inputs", "as", "it", "appears", "the", "constants", "have", "gone", "NUMBER", "They", "were", "Basic", "and", "NumericInput", "NUMBER", "If", "this", "be", "wrong", "please", "let", "me", "know", "and", "I", "ll", "rip", "the", "commit", "out", "of", "this", "pull", "request", "NUMBER", "Regards", "NUMBER", "jcf", "Thanks", "I", "ve", "made", "a", "comment", "on", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "cabb", "NUMBER", "a", "NUMBER", "bb", "NUMBER", "eaa", "NUMBER", "f", "NUMBER", "a", "NUMBER", "db", "so", "there", "s", "that", "NUMBER", "There", "s", "a", "few", "comments", "of", "your", "own", "that", "you", "might", "want", "to", "review", "before", "this", "stuff", "be", "in", "master", "NUMBER", "Ultimately", "all", "this", "stuff", "be", "probably", "a", "separate", "request", "but", "perhaps", "the", "simplest", "thing", "be", "to", "just", "make", "sure", "you", "re", "happy", "with", "your", "work", "and", "then", "pull", "it", "all", "in", "NUMBER", "Hi", "justinfrench", "Sorry", "it", "s", "taken", "me", "such", "a", "long", "time", "to", "sort", "out", "this", "PR", "NUMBER", "I", "ve", "rebased", "master", "and", "resolve", "the", "outstanding", "issue", "brought", "back", "the", "warn_and_correct_option", "method", "as", "you", "asked", "and", "replaced", "a", "def", "with", "let", "in", "the", "test", "suite", "NUMBER", "Please", "let", "me", "know", "if", "there", "s", "anything", "else", "you", "d", "like", "change", "and", "I", "ll", "hopefully", "be", "able", "to", "do", "it", "this", "evening", "NUMBER", "All", "the", "best", "James", "jcf", "it", "won", "t", "apply", "cleanly", "right", "now", "but", "yeah", "keen", "to", "get", "this", "into", "master", "now", "that", "we", "have", "a", "stable", "branch", "for", "NUMBER", "Hmm", "it", "seems", "to", "me", "you", "didn", "t", "properly", "rebase", "your", "feature", "branch", "because", "the", "pull", "request", "be", "referencing", "a", "lot", "of", "foreign", "commit", "NUMBER", "Also", "I", "would", "advise", "you", "to", "split", "all", "of", "the", "bullet", "points", "you", "listed", "at", "the", "top", "into", "separate", "pull", "request", "unless", "there", "be", "a", "hard", "dependency", "between", "them", "that", "you", "can", "t", "break", "by", "rebasing", "NUMBER", "That", "way", "it", "will", "be", "much", "easier", "to", "discuss", "and", "merge", "the", "separate", "change", "NUMBER", "I", "use", "git", "rebase", "master", "resolve", "conflict", "as", "they", "arose", "and", "git", "rebase", "continue", "d", "all", "the", "way", "to", "my", "final", "commit", "NUMBER", "I", "don", "t", "have", "time", "to", "work", "on", "this", "PR", "at", "the", "moment", "so", "will", "close", "it", "NUMBER", "If", "anyone", "wants", "to", "cherry", "pick", "the", "commit", "I", "ll", "keep", "my", "fork", "around", "NUMBER", "I", "ve", "cleanly", "rebased", "in", "LINK", "data", "attributes", "pick", "base", "and", "also", "squashed", "some", "fixups", "to", "make", "the", "diffs", "more", "readable", "NUMBER", "But", "I", "still", "feel", "this", "needs", "some", "splitting", "of", "exist", "commit", "and", "cherry", "piccking", "onto", "several", "branch", "to", "separate", "the", "change", "NUMBER", "Also", "I", "feel", "that", "some", "of", "the", "change", "be", "questionable", "eg", "NUMBER", "the", "addition", "of", "guard", "support", "and", "dependence", "on", "osx", "only", "gems", "NUMBER", "Because", "guard", "be", "a", "standalone", "binary", "it", "doesn", "t", "really", "need", "to", "be", "in", "the", "Gemfile", "NUMBER", "justinfrench", "I", "m", "rather", "busy", "atm", "NUMBER", "I", "think", "the", "data", "attributes", "sugar", "be", "nice", "so", "I", "ll", "take", "a", "look", "at", "it", "someday", "NUMBER", "It", "s", "the", "same", "syntax", "as", "the", "haml", "template", "for", "those", "of", "us", "use", "Slim", "LINK", "lang", "NUMBER", "com", "Yes", "I", "use", "this", "in", "a", "rails", "NUMBER", "app", "last", "night", "and", "it", "works", "as", "intended", "when", "scaffolding", "NUMBER", "Hi", "all", "Rails", "NUMBER", "has", "a", "bit", "of", "syntactic", "sugar", "to", "make", "data", "attributes", "nicer", "to", "work", "with", "LINK", "_", "NUMBER", "_release_notes", "NUMBER", "html", "action", "view", "but", "to", "use", "it", "with", "formtastic", "you", "have", "to", "stick", "the", "data", "hash", "in", "the", "input_html", "hash", "NUMBER", "Not", "so", "sugar", "y", "NUMBER", "So", "in", "Rails", "NUMBER", "you", "can", "use", "haml", "f", "NUMBER", "text_field", "name", "data", "some_attribute", "Lovely", "Rails", "NUMBER", "But", "with", "Formtastic", "you", "have", "to", "use", "haml", "f", "NUMBER", "input", "name", "input_html", "data", "some_attribute", "Lovely", "Rails", "NUMBER", "I", "m", "guessing", "this", "change", "will", "be", "a", "case", "of", "whitelisting", "the", "data", "option", "for", "pass", "through", "to", "the", "Rails", "form", "helpers", "NUMBER", "Thoughts", "Shall", "I", "put", "a", "quick", "patch", "together", "I", "m", "thinking", "about", "deleting", "formtastic", "options", "from", "options", "of", "input", "and", "sending", "it", "as", "html", "NUMBER", "Something", "like", "ruby", "f", "NUMBER", "input", "name", "as", "text", "id", "foo", "All", "we", "need", "be", "to", "know", "every", "option", "which", "formtastic", "uses", "and", "delete", "from", "options", "hash", "use", "Hash", "extract", "method", "NUMBER", "We", "need", "to", "do", "something", "like", "this", "ruby", "def", "input_html_options", "options", "end", "def", "input_options", "options", "NUMBER", "slice", "as", "collection", "end", "justinfrench", "surely", "See", "NUMBER", "for", "the", "pull", "request", "NUMBER", "Just", "upgrade", "my", "app", "to", "NUMBER", "rc", "NUMBER", "and", "have", "notice", "that", "Formtastic", "now", "add", "a", "NUMBER", "button", "class", "to", "the", "wrapper", "LI", "on", "commit", "buttons", "NUMBER", "I", "already", "have", "a", "general", "NUMBER", "button", "class", "that", "be", "trying", "to", "style", "the", "LI", "and", "be", "resulting", "in", "unwanted", "behaviour", "NUMBER", "Although", "I", "could", "fix", "this", "by", "change", "my", "app", "s", "styles", "it", "seems", "wrong", "just", "to", "make", "the", "latest", "Formtastic", "work", "NUMBER", "I", "think", "I", "understand", "why", "you", "ve", "do", "this", "but", "I", "would", "like", "to", "suggest", "that", "we", "make", "it", "easy", "to", "override", "these", "classes", "so", "that", "Formtastic", "be", "a", "bit", "more", "flexible", "for", "other", "use", "cases", "NUMBER", "The", "two", "ways", "I", "can", "think", "of", "be", "Be", "able", "to", "completely", "override", "the", "default", "wrapper_html", "classes", "by", "passing", "in", "your", "own", "wrapper_html", "classes", "wrapper_html", "class", "my_sweet_class", "would", "override", "wrapper_html_class", "commit", "button", "_or_", "Break", "out", "wrapper_html_class", "variable", "into", "a", "separate", "method", "that", "can", "be", "easily", "overwritten", "wrapper_html_class", "commit", "button", "to", "def", "wrapper_html_class", "commit", "button", "end", "Thoughts", "Matt", "P", "NUMBER", "S", "NUMBER", "I", "ll", "be", "happy", "to", "make", "this", "change", "I", "just", "wanted", "to", "see", "what", "you", "think", "the", "best", "option", "be", "NUMBER", "Cool", "that", "was", "what", "I", "was", "thinking", "as", "well", "NUMBER", "Should", "be", "do", "today", "Oops", "didn", "t", "mean", "to", "close", "this", "yet", "When", "generating", "multiple", "elements", "meant", "to", "be", "able", "to", "the", "same", "field", "each", "element", "has", "the", "same", "id", "NUMBER", "Example", "please", "Here", "s", "the", "partial", "for", "the", "form", "I", "m", "rendering", "LINK", "and", "here", "s", "the", "output", "from", "that", "LINK", "I", "m", "going", "to", "try", "the", "fix", "suggested", "by", "sobrinho", "or", "a", "variation", "might", "take", "me", "a", "little", "while", "though", "Just", "letting", "you", "know", "that", "use", "input_html", "in", "my", "NUMBER", "each", "to", "fix", "the", "format", "for", "the", "ID", "works", "great", "NUMBER", "Thanks", "guys", "Hi", "fix", "for", "LINK", "All", "test", "pass", "NUMBER", "ok", "I", "m", "sure", "I", "ll", "write", "them", "in", "the", "morning", "for", "my", "timezone", "NUMBER", "On", "a", "plain", "vanilla", "formtastic", "installation", "without", "any", "modifications", "to", "stylesheets", "etc", "NUMBER", "input", "type", "choice", "check_boxes", "causes", "the", "check", "boxes", "to", "collapse", "onto", "each", "other", "and", "they", "be", "almost", "completely", "invisible", "on", "the", "form", "NUMBER", "Eg", "NUMBER", "on", "the", "form", "below", "the", "check", "boxes", "be", "not", "visible", "but", "the", "following", "text", "field", "type", "input", "be", "NUMBER", "TAG", "TAG", "TAG", "check_boxes", "TAG", "TAG", "TAG", "TAG", "The", "change", "to", "formtastic", "NUMBER", "gem", "resolve", "the", "issue", "NUMBER", "I", "did", "fresh", "new", "vanilla", "rails", "test", "app", "with", "formtastic", "gem", "NUMBER", "rc", "NUMBER", "and", "run", "the", "formtastic", "install", "generator", "Yes", "my", "bad", "didn", "t", "check", "what", "was", "the", "latest", "rc", "available", "NUMBER", "rc", "NUMBER", "seems", "to", "still", "have", "small", "styling", "glitch", "as", "it", "seems", "to", "me", "that", "the", "check", "box", "field", "set", "be", "offset", "about", "NUMBER", "px", "to", "the", "left", "NUMBER", "On", "my", "simple", "test", "app", "the", "check", "box", "label", "be", "miss", "part", "of", "the", "first", "letter", "and", "having", "overriding", "css", "for", "NUMBER", "px", "for", "the", "NUMBER", "formtastic", "NUMBER", "choices", "selector", "made", "it", "ok", "NUMBER", "eetteri", "can", "you", "send", "me", "screen", "shots", "to", "justin", "at", "indent", "dot", "com", "dot", "au", "and", "open", "a", "fresh", "issue", "for", "whatever", "you", "re", "still", "seeing", "wrong", "in", "the", "latest", "rc", "thanks", "NUMBER", "Seems", "to", "be", "the", "root", "of", "a", "bit", "of", "confusion", "and", "support", "right", "now", "maybe", "consider", "defaulting", "to", "off", "in", "the", "config", "for", "NUMBER", "for", "a", "slower", "ramp", "up", "NUMBER", "Still", "thinking", "about", "it", "NUMBER", "I", "agree", "NUMBER", "Removes", "a", "dependency", "on", "a", "work", "html", "NUMBER", "implementation", "for", "formtastic", "NUMBER", "Hi", "I", "use", "lastest", "formtastic", "and", "get", "error", "undefined", "method", "last", "for", "Soundtrack", "NUMBER", "x", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ruby", "label", "Soundtracks", "semantic_form_for", "product", "url", "line_items_path", "method", "post", "do", "f", "f", "NUMBER", "input", "soundtracks", "as", "check_boxes", "collection", "product", "NUMBER", "soundtracks", "NUMBER", "map", "item", "item", "NUMBER", "title", "item", "NUMBER", "guid", "label", "false", "f", "NUMBER", "submit", "Buy", "but", "in", "NUMBER", "version", "be", "works", "fine", "NUMBER", "Gemfile", "ruby", "gem", "rails", "NUMBER", "rc", "gem", "formtastic", "git", "git", "github", "NUMBER", "com", "justinfrench", "formtastic", "NUMBER", "git", "Ruby", "ruby", "NUMBER", "dev", "NUMBER", "NUMBER", "NUMBER", "revision", "NUMBER", "x", "NUMBER", "_", "NUMBER", "darwin", "NUMBER", "Thanks", "for", "project", "ruby", "db", "schema", "NUMBER", "rb", "NUMBER", "create_table", "soundtracks", "force", "true", "do", "t", "t", "NUMBER", "ring", "title", "t", "NUMBER", "ring", "guid", "NUMBER", "end", "or", "if", "I", "use", "this", "ruby", "f", "NUMBER", "input", "soundtracks", "as", "check_boxes", "then", "I", "have", "no", "error", "but", "I", "get", "all", "of", "soundtracks", "Sountrack", "NUMBER", "all", "instead", "product", "NUMBER", "soundtracks", "NUMBER", "Hi", "yep", "activemodel", "NUMBER", "rc", "NUMBER", "lib", "active_model", "attribute_methods", "NUMBER", "rb", "NUMBER", "in", "method_missing", "activerecord", "NUMBER", "rc", "NUMBER", "lib", "active_record", "attribute_methods", "NUMBER", "rb", "NUMBER", "in", "method_missing", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "base", "collections", "NUMBER", "rb", "NUMBER", "in", "send_or_call", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "base", "collections", "NUMBER", "rb", "NUMBER", "in", "send_or_call_or_object", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "block", "in", "selected_values", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "map", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "selected_values", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "checked", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "check_box_without_hidden_input", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "choice_html", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "to_html", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "haml", "NUMBER", "lib", "haml", "helpers", "xss_mods", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer_with_haml_xss", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "haml", "NUMBER", "lib", "haml", "helpers", "action_view_mods", "NUMBER", "rb", "NUMBER", "in", "capture_with_haml", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "base", "choices", "NUMBER", "rb", "NUMBER", "in", "choice_wrapping", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "to_html", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "map", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "to_html", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "haml", "NUMBER", "lib", "haml", "helpers", "xss_mods", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer_with_haml_xss", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "haml", "NUMBER", "lib", "haml", "helpers", "action_view_mods", "NUMBER", "rb", "NUMBER", "in", "capture_with_haml", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "base", "choices", "NUMBER", "rb", "NUMBER", "in", "choices_group_wrapping", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "to_html", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "haml", "NUMBER", "lib", "haml", "helpers", "xss_mods", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer_with_haml_xss", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "haml", "NUMBER", "lib", "haml", "helpers", "action_view_mods", "NUMBER", "rb", "NUMBER", "in", "capture_with_haml", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "base", "choices", "NUMBER", "rb", "NUMBER", "in", "choices_wrapping", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "block", "in", "to_html", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "haml", "NUMBER", "lib", "haml", "helpers", "xss_mods", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer_with_haml_xss", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "haml", "NUMBER", "lib", "haml", "helpers", "action_view_mods", "NUMBER", "rb", "NUMBER", "in", "capture_with_haml", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "base", "wrapping", "NUMBER", "rb", "NUMBER", "in", "input_wrapping", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "inputs", "check_boxes_input", "NUMBER", "rb", "NUMBER", "in", "to_html", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "helpers", "input_helper", "NUMBER", "rb", "NUMBER", "in", "input", "app", "views", "albums", "_album", "NUMBER", "html", "NUMBER", "slim", "NUMBER", "in", "block", "in", "_app_views_albums__album_html_slim___", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "capture", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer", "haml", "NUMBER", "lib", "haml", "helpers", "xss_mods", "NUMBER", "rb", "NUMBER", "in", "with_output_buffer_with_haml_xss", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "capture_helper", "NUMBER", "rb", "NUMBER", "in", "capture", "haml", "NUMBER", "lib", "haml", "helpers", "action_view_mods", "NUMBER", "rb", "NUMBER", "in", "capture_with_haml", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "fields_for", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "form_for", "haml", "NUMBER", "lib", "haml", "helpers", "action_view_mods", "NUMBER", "rb", "NUMBER", "in", "form_for_with_haml", "haml", "NUMBER", "lib", "haml", "helpers", "xss_mods", "NUMBER", "rb", "NUMBER", "in", "form_for_with_haml_xss", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "semantic_form_for", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "with_custom_field_error_proc", "Users", "timothyklim", "NUMBER", "rvm", "gems", "ruby", "NUMBER", "preview", "NUMBER", "bundler", "gems", "formtastic", "a", "NUMBER", "e", "NUMBER", "d", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "semantic_form_for", "app", "views", "albums", "_album", "NUMBER", "html", "NUMBER", "slim", "NUMBER", "in", "_app_views_albums__album_html_slim___", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "render_partial", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "wrap_formats", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render_partial", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "rendering_helper", "NUMBER", "rb", "NUMBER", "in", "render", "haml", "NUMBER", "lib", "haml", "helpers", "action_view_mods", "NUMBER", "rb", "NUMBER", "in", "render_with_haml", "app", "views", "products", "show", "NUMBER", "html", "NUMBER", "slim", "NUMBER", "in", "_app_views_products_show_html_slim__", "NUMBER", "_", "NUMBER", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render_template", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render_template", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render_with_layout", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render_template", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "wrap_formats", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render_template", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "_render_template", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "streaming", "NUMBER", "rb", "NUMBER", "in", "_render_template", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "renderers", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "compatibility", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "rendering", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "core_ext", "benchmark", "NUMBER", "rb", "NUMBER", "in", "block", "in", "ms", "Users", "timothyklim", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "preview", "NUMBER", "lib", "ruby", "NUMBER", "benchmark", "NUMBER", "rb", "NUMBER", "in", "realtime", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "core_ext", "benchmark", "NUMBER", "rb", "NUMBER", "in", "ms", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "cleanup_view_runtime", "activerecord", "NUMBER", "rc", "NUMBER", "lib", "active_record", "railties", "controller_runtime", "NUMBER", "rb", "NUMBER", "in", "cleanup_view_runtime", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "implicit_render", "NUMBER", "rb", "NUMBER", "in", "default_render", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "implicit_render", "NUMBER", "rb", "NUMBER", "in", "send_action", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "base", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "rendering", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "callbacks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_action", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run__", "NUMBER", "__process_action__", "NUMBER", "__callbacks", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run_process_action_callbacks", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "run_callbacks", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "callbacks", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "rescue", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_action", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "params_wrapper", "NUMBER", "rb", "NUMBER", "in", "process_action", "activerecord", "NUMBER", "rc", "NUMBER", "lib", "active_record", "railties", "controller_runtime", "NUMBER", "rb", "NUMBER", "in", "process_action", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "base", "NUMBER", "rb", "NUMBER", "in", "process", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "process", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "rack_delegation", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "NUMBER", "rb", "NUMBER", "in", "block", "in", "action", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "dispatch", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "mount", "NUMBER", "lib", "rack", "mount", "route_set", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "recognize", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "optimized_each", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "recognize", "rack", "mount", "NUMBER", "lib", "rack", "mount", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "sass", "NUMBER", "lib", "sass", "plugin", "rack", "NUMBER", "rb", "NUMBER", "in", "call", "lib", "suggests_proxy", "NUMBER", "rb", "NUMBER", "in", "call", "warden", "NUMBER", "lib", "warden", "manager", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "warden", "NUMBER", "lib", "warden", "manager", "NUMBER", "rb", "NUMBER", "in", "catch", "warden", "NUMBER", "lib", "warden", "manager", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "best_standards_support", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "etag", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "conditionalget", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "head", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "params_parser", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "flash", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "session", "abstract", "id", "NUMBER", "rb", "NUMBER", "in", "context", "rack", "NUMBER", "lib", "rack", "session", "abstract", "id", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "cookies", "NUMBER", "rb", "NUMBER", "in", "call", "activerecord", "NUMBER", "rc", "NUMBER", "lib", "active_record", "query_cache", "NUMBER", "rb", "NUMBER", "in", "call", "activerecord", "NUMBER", "rc", "NUMBER", "lib", "active_record", "connection_adapters", "abstract", "connection_pool", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "callbacks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run_call_callbacks", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "run_callbacks", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "callbacks", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "reloader", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "sendfile", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "remote_ip", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "show_exceptions", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "rc", "NUMBER", "lib", "rails", "rack", "logger", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "methodoverride", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "runtime", "NUMBER", "rb", "NUMBER", "in", "call", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "cache", "strategy", "local_cache", "NUMBER", "rb", "NUMBER", "in", "call", "rack", "NUMBER", "lib", "rack", "lock", "NUMBER", "rb", "NUMBER", "in", "call", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "static", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "rc", "NUMBER", "lib", "rails", "engine", "NUMBER", "rb", "NUMBER", "in", "call", "railties", "NUMBER", "rc", "NUMBER", "lib", "rails", "railtie", "configurable", "NUMBER", "rb", "NUMBER", "in", "method_missing", "Users", "timothyklim", "Library", "Application", "Support", "Pow", "Versions", "NUMBER", "node_modules", "nack", "lib", "nack", "server", "NUMBER", "rb", "NUMBER", "in", "handle", "Users", "timothyklim", "Library", "Application", "Support", "Pow", "Versions", "NUMBER", "node_modules", "nack", "lib", "nack", "server", "NUMBER", "rb", "NUMBER", "in", "rescue", "in", "block", "NUMBER", "levels", "in", "start", "Users", "timothyklim", "Library", "Application", "Support", "Pow", "Versions", "NUMBER", "node_modules", "nack", "lib", "nack", "server", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "start", "Users", "timothyklim", "Library", "Application", "Support", "Pow", "Versions", "NUMBER", "node_modules", "nack", "lib", "nack", "server", "NUMBER", "rb", "NUMBER", "in", "each", "Users", "timothyklim", "Library", "Application", "Support", "Pow", "Versions", "NUMBER", "node_modules", "nack", "lib", "nack", "server", "NUMBER", "rb", "NUMBER", "in", "block", "in", "start", "Users", "timothyklim", "Library", "Application", "Support", "Pow", "Versions", "NUMBER", "node_modules", "nack", "lib", "nack", "server", "NUMBER", "rb", "NUMBER", "in", "loop", "Users", "timothyklim", "Library", "Application", "Support", "Pow", "Versions", "NUMBER", "node_modules", "nack", "lib", "nack", "server", "NUMBER", "rb", "NUMBER", "in", "start", "Users", "timothyklim", "Library", "Application", "Support", "Pow", "Versions", "NUMBER", "node_modules", "nack", "lib", "nack", "server", "NUMBER", "rb", "NUMBER", "in", "run", "Users", "timothyklim", "Library", "Application", "Support", "Pow", "Versions", "NUMBER", "node_modules", "nack", "bin", "nack_worker", "NUMBER", "in", "TAG", "Can", "you", "please", "re", "bundle", "from", "master", "to", "ensure", "you", "have", "the", "very", "latest", "Formtastic", "code", "This", "should", "help", "ensure", "you", "ahv", "the", "latest", "ref", "gem", "formtastic", "git", "git", "github", "NUMBER", "com", "justinfrench", "formtastic", "NUMBER", "git", "ref", "c", "NUMBER", "f", "NUMBER", "There", "was", "some", "work", "do", "around", "send_or_call", "in", "between", "rc", "NUMBER", "and", "rc", "NUMBER", "of", "Formtastic", "so", "knowing", "that", "you", "have", "the", "latest", "code", "will", "help", "narrow", "down", "if", "this", "be", "fix", "or", "a", "new", "regression", "NUMBER", "Also", "wouldn", "t", "hurt", "to", "grab", "the", "latest", "Rails", "rc", "NUMBER", "but", "I", "don", "t", "believe", "it", "s", "the", "cause", "NUMBER", "Yep", "I", "m", "use", "the", "latest", "code", "from", "master", "branch", "and", "the", "error", "still", "exists", "NUMBER", "bundle", "show", "pbcopy", "Gems", "include", "by", "the", "bundle", "actionmailer", "NUMBER", "rc", "NUMBER", "actionpack", "NUMBER", "rc", "NUMBER", "activemodel", "NUMBER", "rc", "NUMBER", "activerecord", "NUMBER", "rc", "NUMBER", "activeresource", "NUMBER", "rc", "NUMBER", "activesupport", "NUMBER", "rc", "NUMBER", "addressable", "NUMBER", "ansi", "NUMBER", "arel", "NUMBER", "bcrypt", "ruby", "NUMBER", "builder", "NUMBER", "bundler", "NUMBER", "pre", "NUMBER", "capybara", "NUMBER", "capybara", "firebug", "NUMBER", "NUMBER", "fda", "NUMBER", "e", "NUMBER", "carrierwave", "NUMBER", "childprocess", "NUMBER", "chunky_png", "NUMBER", "ckeditor", "NUMBER", "coffee", "rails", "NUMBER", "rc", "NUMBER", "coffee", "script", "NUMBER", "coffee", "script", "source", "NUMBER", "compass", "NUMBER", "configuration", "NUMBER", "cucumber", "NUMBER", "cucumber", "rails", "NUMBER", "database_cleaner", "NUMBER", "devise", "NUMBER", "diff", "lcs", "NUMBER", "em", "dir", "watcher", "NUMBER", "em", "websocket", "NUMBER", "erubis", "NUMBER", "eventmachine", "NUMBER", "execjs", "NUMBER", "fabrication", "NUMBER", "ffaker", "NUMBER", "ffi", "NUMBER", "formtastic", "NUMBER", "rc", "NUMBER", "c", "NUMBER", "f", "NUMBER", "fssm", "NUMBER", "gherkin", "NUMBER", "growl", "NUMBER", "guard", "NUMBER", "guard", "bundler", "NUMBER", "guard", "cucumber", "NUMBER", "guard", "livereload", "NUMBER", "guard", "pow", "NUMBER", "guard", "rspec", "NUMBER", "guid", "NUMBER", "haml", "NUMBER", "hike", "NUMBER", "i", "NUMBER", "n", "NUMBER", "jquery", "rails", "NUMBER", "json", "NUMBER", "json_pure", "NUMBER", "kaminari", "NUMBER", "kgio", "NUMBER", "launchy", "NUMBER", "libv", "NUMBER", "NUMBER", "livereload", "NUMBER", "mail", "NUMBER", "mechanize", "NUMBER", "mime", "types", "NUMBER", "multi_json", "NUMBER", "net", "http", "digest_auth", "NUMBER", "net", "http", "persistent", "NUMBER", "nokogiri", "NUMBER", "orm_adapter", "NUMBER", "pg", "NUMBER", "polyglot", "NUMBER", "populator", "NUMBER", "cd", "NUMBER", "d", "rack", "NUMBER", "rack", "cache", "NUMBER", "rack", "mount", "NUMBER", "rack", "ssl", "NUMBER", "rack", "test", "NUMBER", "rails", "NUMBER", "rc", "NUMBER", "rails_admin", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "railties", "NUMBER", "rc", "NUMBER", "raindrops", "NUMBER", "rake", "NUMBER", "rb", "fsevent", "NUMBER", "rdoc", "NUMBER", "rmagick", "NUMBER", "rspec", "NUMBER", "rspec", "core", "NUMBER", "rspec", "expectations", "NUMBER", "rspec", "mocks", "NUMBER", "rspec", "rails", "NUMBER", "ruby", "json", "NUMBER", "rubyzip", "NUMBER", "sass", "NUMBER", "sass", "rails", "NUMBER", "rc", "NUMBER", "selenium", "webdriver", "NUMBER", "slim", "NUMBER", "sprockets", "NUMBER", "beta", "NUMBER", "temple", "NUMBER", "term", "ansicolor", "NUMBER", "therubyracer", "NUMBER", "thor", "NUMBER", "tilt", "NUMBER", "treetop", "NUMBER", "turn", "NUMBER", "tzinfo", "NUMBER", "uglifier", "NUMBER", "unicorn", "NUMBER", "warden", "NUMBER", "webrobots", "NUMBER", "xpath", "NUMBER", "So", "I", "m", "wondering", "if", "my", "work", "in", "NUMBER", "afcf", "NUMBER", "f", "affected", "this", "it", "was", "do", "after", "NUMBER", "rc", "NUMBER", "NUMBER", "I", "ve", "push", "a", "new", "branch", "GH", "NUMBER", "with", "this", "patch", "revert", "NUMBER", "If", "you", "could", "bundle", "this", "branch", "restart", "and", "try", "again", "that", "d", "help", "a", "lot", "in", "narrowing", "this", "down", "gem", "formtastic", "git", "git", "github", "NUMBER", "com", "justinfrench", "formtastic", "NUMBER", "git", "branch", "NUMBER", "afcf", "NUMBER", "f", "It", "could", "also", "be", "NUMBER", "relate", "NUMBER", "Any", "chance", "you", "can", "spin", "up", "an", "RVM", "with", "REE", "or", "NUMBER", "temporarily", "to", "try", "and", "narrow", "this", "down", "Has", "Formtastic", "NUMBER", "worked", "for", "you", "at", "all", "did", "NUMBER", "rc", "NUMBER", "work", "for", "you", "or", "NUMBER", "yep", "bug", "still", "exists", "NUMBER", "I", "created", "repo", "with", "same", "bug", "LINK", "_test_for", "Ok", "no", "idea", "why", "that", "s", "fail", "yet", "but", "I", "think", "albums", "index", "NUMBER", "html", "NUMBER", "erb", "can", "safely", "be", "change", "to", "this", "to", "meet", "the", "same", "requirements", "and", "functionality", "TAG", "check_boxes", "collection", "album", "NUMBER", "soundtracks", "label_method", "title", "Does", "this", "help", "in", "your", "full", "app", "Will", "still", "hunt", "for", "the", "root", "cause", "and", "leave", "this", "open", "for", "a", "bit", "NUMBER", "Yep", "this", "be", "works", "perfectly", "NUMBER", "But", "when", "I", "use", "formtastic", "NUMBER", "this", "code", "issue", "be", "worked", "too", "NUMBER", "Thanks", "The", "root", "of", "this", "seems", "to", "be", "that", "collection", "be", "an", "Array", "of", "Arrays", "of", "Strings", "label", "value", "label", "value", "yet", "product", "NUMBER", "soundtracks", "returns", "an", "array", "of", "Soundtrack", "objects", "NUMBER", "Formtastic", "be", "trying", "to", "call", "last", "on", "a", "Soundtrack", "because", "it", "s", "trying", "to", "compare", "it", "to", "an", "Array", "label", "value", "NUMBER", "last", "be", "be", "call", "because", "of", "the", "arrays", "present", "in", "collection", "NUMBER", "Not", "really", "sure", "how", "to", "code", "around", "this", "I", "m", "sure", "it", "can", "be", "do", "if", "it", "was", "somehow", "support", "in", "NUMBER", "x", "or", "even", "if", "I", "should", "NUMBER", "It", "feels", "more", "like", "a", "case", "where", "an", "exception", "should", "be", "raise", "that", "the", "collection", "needs", "to", "be", "an", "array", "of", "objects", "when", "the", "method", "be", "an", "AR", "association", "NUMBER", "In", "other", "words", "the", "format", "of", "the", "collection", "be", "not", "appropriate", "for", "the", "input", "and", "it", "s", "association", "NUMBER", "Thoughts", "NUMBER", "to", "avoid", "closing", "the", "milestone", "off", "sobrino", "mostly", "means", "GH", "use", "to", "automatically", "close", "off", "milestones", "that", "had", "no", "open", "issue", "Please", "check", "I", "m", "not", "really", "sure", "wether", "to", "use", "builder", "or", "options", "builder", "in", "this", "place", "NUMBER", "Could", "you", "please", "follow", "this", "up", "with", "a", "test", "case", "so", "that", "we", "don", "t", "re", "introduce", "a", "regression", "At", "the", "very", "least", "a", "comment", "above", "the", "line", "NUMBER", "I", "still", "don", "t", "understand", "why", "this", "patch", "helped", "and", "under", "what", "circumstances", "NUMBER", "Then", "again", "it", "be", "NUMBER", "be", "justinfrench", "It", "seems", "there", "s", "a", "scoping", "context", "issue", "when", "use", "builder", "NUMBER", "When", "use", "navigasmic", "builder", "be", "a", "reference", "to", "Navigasmic", "HtmlNavigationBuilder", "Class", "instead", "of", "Formtastic", "FormBuilder", "NUMBER", "I", "m", "not", "really", "sure", "why", "because", "I", "don", "t", "know", "how", "exactly", "the", "mattr_accessor", "works", "NUMBER", "I", "thought", "it", "doesn", "t", "create", "instance", "accessors", "as", "in", "many", "places", "builder", "instead", "of", "the", "accessor", "builder", "be", "use", "and", "so", "I", "simply", "adjusted", "this", "call", "too", "NUMBER", "I", "ll", "investigate", "further", "and", "try", "to", "add", "a", "test", "case", "NUMBER", "Thanks", "rc", "NUMBER", "works", "with", "rc", "NUMBER", "I", "get", "undefined", "method", "perform_browser_validations", "at", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "semantic_form_for", "Same", "with", "NUMBER", "rc", "NUMBER", "for", "me", "NUMBER", "There", "be", "no", "commit", "since", "NUMBER", "rc", "NUMBER", "LINK", "Ok", "I", "just", "find", "out", "the", "exception", "be", "only", "throw", "when", "also", "use", "the", "navigasmic", "gem", "NUMBER", "So", "I", "m", "not", "sure", "if", "this", "be", "bug", "in", "navigasmic", "or", "formtastic", "NUMBER", "LINK", "sobrinho", "fix", "be", "here", "LINK", "when", "trying", "f", "NUMBER", "input", "description", "as", "ckeditor", "I", "receive", "Formtastic", "UnknownInputError", "NUMBER", "x", "We", "don", "t", "support", "as", "ckeditor", "where", "in", "the", "documentation", "be", "it", "suggested", "we", "do", "Closing", "for", "now", "NUMBER", "My", "guess", "be", "you", "have", "build", "a", "custom", "input", "in", "Formtastic", "NUMBER", "x", "which", "will", "need", "to", "be", "migrated", "to", "the", "new", "custom", "inputs", "NUMBER", "Can", "provide", "more", "detail", "after", "you", "do", "The", "support", "be", "add", "by", "ckeditor", "gem", "NUMBER", "It", "works", "with", "formtastic", "NUMBER", "I", "thought", "you", "have", "an", "idea", "why", "it", "stopped", "work", "with", "the", "new", "formtastic", "version", "This", "be", "the", "place", "for", "ckeditor", "hook", "LINK", "We", "change", "the", "API", "for", "custom", "inputs", "for", "NUMBER", "in", "a", "backwards", "incompatible", "way", "NUMBER", "I", "can", "see", "what", "s", "possible", "at", "our", "end", "but", "the", "issue", "needs", "to", "be", "raise", "with", "them", "NUMBER", "NUMBER", "X", "I", "m", "get", "that", "same", "error", "with", "NUMBER", "Any", "update", "Right", "now", "the", "_step_", "attribute", "for", "number_input", "defaults", "to", "NUMBER", "when", "cannot", "be", "inferred", "from", "validations", "and", "be", "not", "either", "supplied", "in", "the", "options", "NUMBER", "It", "be", "ok", "for", "integer", "values", "but", "when", "you", "have", "a", "float", "field", "in", "the", "database", "an", "input", "type", "number", "be", "also", "rendered", "with", "step", "NUMBER", "and", "the", "browser", "doesn", "t", "submit", "the", "form", "when", "you", "enter", "a", "non", "integer", "value", "NUMBER", "I", "think", "in", "this", "case", "it", "should", "use", "step", "any", "See", "LINK", "markup", "input", "NUMBER", "number", "NUMBER", "html", "This", "patch", "makes", "the", "_step_", "attribute", "defaults", "to", "any", "instead", "of", "NUMBER", "NUMBER", "If", "you", "use", "step", "any", "modern", "browsers", "let", "you", "send", "_float_", "values", "NUMBER", "If", "you", "don", "t", "use", "it", "and", "use", "step", "NUMBER", "instead", "modern", "browsers", "let", "you", "send", "only", "integer", "values", "NUMBER", "I", "have", "to", "say", "that", "I", "only", "test", "that", "with", "Chrome", "NUMBER", "Could", "be", "useful", "for", "wrapping", "up", "Money", "and", "composed_of", "stuff", "NUMBER", "See", "NUMBER", "I", "be", "currently", "implement", "a", "CurrencyInput", "to", "manage", "this", "use", "case", "I", "be", "struggling", "with", "the", "spec", "because", "I", "start", "with", "NumberInput", "NUMBER", "Do", "you", "think", "all", "options", "of", "NumberInput", "be", "required", "for", "this", "new", "input", "like", "min", "max", "in", "NUMBER", "range", "I", "will", "send", "a", "pull", "request", "as", "soon", "as", "I", "clean", "up", "my", "mess", "NUMBER", "EppO", "I", "haven", "t", "given", "this", "much", "thought", "yet", "but", "maybe", "it", "s", "helpful", "to", "first", "think", "about", "what", "the", "_differences_", "be", "between", "what", "you", "get", "with", "a", "number", "input", "and", "what", "you", "d", "like", "to", "see", "in", "a", "money", "input", "NUMBER", "IMHO", "Currency", "be", "a", "more", "specific", "that", "numbers", "it", "s", "a", "float", "with", "only", "NUMBER", "digits", "after", "decimal", "point", "and", "with", "a", "symbol", "outside", "the", "input", "more", "likely", "in", "a", "span", "surrounding", "the", "input", "NUMBER", "What", "do", "you", "think", "EppO", "have", "a", "look", "at", "the", "number_to_currency", "helper", "in", "Rails", "NUMBER", "I", "think", "there", "s", "a", "bit", "more", "to", "it", "than", "that", "NUMBER", "Different", "precisions", "different", "separators", "for", "the", "decimal", "and", "the", "thousands", "and", "the", "currency", "symbol", "can", "be", "at", "the", "start", "or", "end", "for", "example", "NUMBER", "A", "lot", "of", "the", "format", "rules", "e", "NUMBER", "g", "NUMBER", "precision", "aren", "t", "catered", "for", "in", "HTML", "NUMBER", "client", "side", "and", "we", "don", "t", "do", "any", "JS", "yet", "so", "perhaps", "as", "a", "starting", "point", "all", "we", "re", "talking", "about", "be", "a", "numeric", "input", "that", "can", "somehow", "include", "a", "currency", "symbols", "relevant", "to", "a", "locale", "Next", "an", "option", "to", "present", "the", "value", "stored", "in", "the", "database", "usually", "in", "cents", "as", "money", "usually", "divide", "by", "NUMBER", "etc", "and", "a", "way", "of", "detecting", "and", "doing", "this", "automatically", "by", "detecting", "the", "presence", "of", "the", "Money", "gem", "or", "other", "common", "traits", "NUMBER", "Sounds", "like", "three", "incremental", "steps", "NUMBER", "I", "have", "some", "ideas", "around", "the", "markup", "and", "currency", "symbol", "side", "of", "this", "but", "would", "be", "great", "if", "you", "re", "motivated", "to", "look", "into", "the", "other", "harder", "bits", "NUMBER", "You", "want", "to", "put", "separators", "in", "the", "input", "when", "typing", "the", "amount", "or", "allowing", "the", "user", "to", "put", "separators", "in", "the", "input", "That", "would", "be", "harder", "to", "parse", "as", "it", "won", "t", "be", "anymore", "a", "number", "NUMBER", "In", "my", "branch", "I", "handle", "the", "symbol", "before", "after", "the", "input", "but", "I", "don", "t", "really", "like", "how", "I", "did", "it", "in", "to_html", "method", "so", "I", "don", "t", "mind", "at", "all", "if", "you", "manage", "that", "part", "NUMBER", "I", "would", "be", "really", "please", "to", "help", "you", "for", "the", "other", "parts", "if", "I", "can", "NUMBER", "EppO", "As", "a", "designer", "and", "user", "seeing", "large", "numbers", "with", "NUMBER", "s", "separators", "be", "convenient", "for", "accuracy", "but", "not", "_crucial_", "NUMBER", "Being", "able", "to", "copy", "paste", "numbers", "with", "separators", "and", "even", "currency", "symbols", "into", "a", "form", "field", "and", "it", "Just", "Works", "_is_", "crucial", "NUMBER", "It", "s", "the", "app", "s", "responsibility", "to", "handle", "many", "varied", "types", "of", "input", "not", "the", "user", "s", "NUMBER", "However", "in", "the", "spirit", "of", "incremental", "improvement", "let", "s", "just", "get", "_something_", "ready", "to", "merge", "Sorry", "not", "much", "NUMBER", "I", "ve", "be", "quite", "busy", "didn", "t", "look", "at", "the", "code", "for", "a", "while", "NUMBER", "I", "will", "try", "to", "get", "something", "that", "you", "can", "merge", "NUMBER", "novalidate", "attribute", "should", "be", "add", "when", "this", "option", "be", "set", "to", "false", "instead", "of", "true", "NUMBER", "Related", "to", "NUMBER", "Man", "that", "s", "embarrassing", "NUMBER", "Apologies", "if", "this", "be", "my", "mistake", "somehow", "NUMBER", "I", "have", "a", "boolean", "field", "in", "my", "model", "call", "top", "NUMBER", "Merely", "rendering", "form", "NUMBER", "input", "top", "Correctly", "generates", "a", "checkbox", "but", "its", "state", "checked", "vs", "unchecked", "do", "not", "seem", "to", "reflect", "the", "object", "I", "m", "editing", "creating", "NUMBER", "In", "order", "to", "do", "this", "I", "had", "to", "do", "the", "following", "form", "NUMBER", "input", "top", "as", "boolean", "input_html", "checked", "metric", "NUMBER", "top", "checked", "nil", "This", "behaves", "as", "expected", "i", "NUMBER", "e", "NUMBER", "if", "metric", "NUMBER", "top", "be", "true", "the", "box", "be", "checked", "NUMBER", "It", "seems", "kludgy", "to", "have", "to", "specify", "this", "NUMBER", "Am", "I", "miss", "something", "Thank", "you", "for", "your", "time", "NUMBER", "I", "be", "use", "Formtastic", "NUMBER", "Rails", "NUMBER", "and", "Ruby", "NUMBER", "Formtastic", "NUMBER", "rc", "NUMBER", "indeed", "resolve", "the", "issue", "for", "me", "NUMBER", "I", "was", "doing", "some", "custom", "wizardry", "to", "allow", "a", "date", "picker", "field", "type", "which", "do", "not", "work", "out", "of", "the", "box", "with", "NUMBER", "rc", "NUMBER", "so", "I", "ll", "have", "to", "tackle", "that", "before", "upgrading", "NUMBER", "Thank", "you", "for", "the", "quick", "response", "and", "resolution", "and", "for", "work", "on", "such", "a", "useful", "library", "agraves", "if", "I", "work", "up", "a", "patch", "for", "NUMBER", "would", "you", "be", "willing", "to", "test", "it", "for", "a", "NUMBER", "patch", "release", "Not", "going", "to", "bother", "if", "there", "s", "no", "one", "willing", "to", "verify", "it", "but", "happy", "otherwise", "Hey", "Justin", "I", "d", "be", "happy", "to", "verify", "the", "issue", "for", "you", "NUMBER", "Just", "let", "me", "know", "when", "you", "have", "something", "ready", "and", "I", "ll", "test", "it", "right", "away", "NUMBER", "Thanks", "ruby", "input", "NUMBER", "input", "start_time", "label", "false", "would", "render", "non", "html_safe", "string", "Used", "technique", "use", "on", "stringish", "labels", "ruby", "labelling", "NUMBER", "rb", "NUMBER", "def", "label_html", "render_label", "builder", "NUMBER", "label", "input_name", "label_text", "label_html_options", "NUMBER", "html_safe", "end", "Sure", "NUMBER", "I", "m", "guessing", "eventually", "there", "ll", "be", "a", "feature", "request", "for", "each", "of", "the", "fragment", "labels", "to", "be", "removable", "NUMBER", "Passing", "label", "false", "only", "remove", "the", "label", "off", "the", "full", "fragment", "set", "NUMBER", "For", "now", "that", "s", "a", "feature", "not", "a", "bug", "right", "sobrinho", "the", "year", "month", "and", "day", "fragment", "have", "their", "own", "labels", "which", "formtastic", "NUMBER", "css", "hides", "NUMBER", "nathanscott", "correct", "feature", "request", "not", "a", "bug", "NUMBER", "Thanks", "for", "this", "patch", "NUMBER", "I", "can", "do", "something", "like", "this", "ruby", "visa", "ActiveMerchant", "Billing", "CreditCard", "NUMBER", "new", "type", "visa", "in", "my", "controller", "and", "then", "use", "it", "like", "this", "ruby", "semantic_form_for", "visa", "as", "visa", "url", "root_path", "do", "visa_form", "visa_form", "NUMBER", "inputs", "in", "my", "form", "NUMBER", "Without", "the", "ruby", "as", "visa", "this", "would", "fail", "with", "undefined", "method", "model_name", "for", "ActiveMerchant", "Billing", "CreditCard", "Class", "since", "visa", "be", "not", "an", "AR", "model", "instance", "NUMBER", "However", "I", "can", "t", "use", "this", "with", "semantic_fields_for", "a", "la", "ruby", "semantic_form_for", "payment", "url", "root_path", "do", "payment_form", "payment_form", "NUMBER", "semantic_fields_for", "visa", "as", "visa", "do", "visa_form", "visa_form", "NUMBER", "inputs", "payment_form", "NUMBER", "semantic_fields_for", "mastercard", "as", "master_card", "do", "mastercard_form", "mastercard_form", "NUMBER", "inputs", "because", "then", "I", "get", "undefined", "method", "model_name", "for", "ActiveMerchant", "Billing", "CreditCard", "Class", "Is", "there", "any", "way", "around", "this", "I", "need", "a", "pseudo", "nested", "form", "like", "above", "containing", "form", "field", "for", "non", "AR", "models", "and", "I", "don", "t", "want", "to", "dispense", "with", "formtastic", "goodies", "like", "showing", "validation", "error", "where", "they", "belong", "to", "and", "preserve", "previously", "given", "form", "values", "in", "case", "validation", "goes", "wrong", "NUMBER", "sobrinho", "I", "see", "NUMBER", "Actually", "that", "was", "the", "answer", "I", "had", "dreaded", "I", "was", "hoping", "for", "a", "quicker", "solution", "NUMBER", "Is", "this", "a", "problem", "in", "rails", "fields_for", "or", "just", "in", "semantic_fields_for", "If", "it", "s", "only", "a", "problem", "with", "the", "latter", "I", "d", "be", "interested", "in", "finding", "a", "way", "for", "us", "to", "not", "require", "this", "if", "possible", "NUMBER", "If", "it", "s", "a", "problem", "in", "standard", "rails", "as", "well", "then", "I", "d", "focus", "there", "NUMBER", "justinfrench", "I", "just", "double", "checked", "it", "s", "a", "problem", "with", "rails", "fields_for", "NUMBER", "Others", "would", "probably", "call", "this", "a", "feature", "instead", "NUMBER", "sobrinho", "Right", "now", "I", "did", "it", "without", "extending", "AM", "but", "thanks", "for", "the", "suggestion", "maybe", "I", "ll", "look", "into", "that", "at", "a", "later", "point", "in", "time", "NUMBER", "The", "CarrierWave", "support", "would", "probably", "be", "better", "if", "we", "looked", "at", "the", "class", "of", "the", "attribute", "instead", "of", "relying", "on", "responding", "to", "certain", "methods", "NUMBER", "formtastic", "created", "a", "text", "input", "for", "my", "uploader", "betelgeuse", "pena", "mnt", "checkouts", "formtastic", "bundle", "exec", "rake", "in", "mnt", "checkouts", "formtastic", "usr", "bin", "ruby", "NUMBER", "S", "bundle", "exec", "rcov", "Ispec", "lib", "exclude", "gems", "spec", "NUMBER", "bundle", "aggregate", "coverage", "NUMBER", "data", "spec", "i", "NUMBER", "n_spec", "NUMBER", "rb", "spec", "inputs", "datetime_input_spec", "NUMBER", "rb", "spec", "inputs", "include_blank_spec", "NUMBER", "rb", "spec", "inputs", "string_input_spec", "NUMBER", "rb", "spec", "inputs", "range_input_spec", "NUMBER", "rb", "spec", "inputs", "radio_input_spec", "NUMBER", "rb", "spec", "inputs", "numeric_input_spec", "NUMBER", "rb", "spec", "inputs", "text_input_spec", "NUMBER", "rb", "spec", "inputs", "number_input_spec", "NUMBER", "rb", "spec", "inputs", "custom_input_spec", "NUMBER", "rb", "spec", "inputs", "label_spec", "NUMBER", "rb", "spec", "inputs", "placeholder_spec", "NUMBER", "rb", "spec", "inputs", "search_input_spec", "NUMBER", "rb", "spec", "inputs", "boolean_input_spec", "NUMBER", "rb", "spec", "inputs", "check_boxes_input_spec", "NUMBER", "rb", "spec", "inputs", "phone_input_spec", "NUMBER", "rb", "spec", "inputs", "select_input_spec", "NUMBER", "rb", "spec", "inputs", "password_input_spec", "NUMBER", "rb", "spec", "inputs", "time_input_spec", "NUMBER", "rb", "spec", "inputs", "hidden_input_spec", "NUMBER", "rb", "spec", "inputs", "country_input_spec", "NUMBER", "rb", "spec", "inputs", "file_input_spec", "NUMBER", "rb", "spec", "inputs", "email_input_spec", "NUMBER", "rb", "spec", "inputs", "time_zone_input_spec", "NUMBER", "rb", "spec", "inputs", "url_input_spec", "NUMBER", "rb", "spec", "inputs", "date_input_spec", "NUMBER", "rb", "spec", "helpers", "buttons_helper_spec", "NUMBER", "rb", "spec", "helpers", "input_helper_spec", "NUMBER", "rb", "spec", "helpers", "commit_button_helper_spec", "NUMBER", "rb", "spec", "helpers", "form_helper_spec", "NUMBER", "rb", "spec", "helpers", "reflection_helper_spec", "NUMBER", "rb", "spec", "helpers", "semantic_errors_helper_spec", "NUMBER", "rb", "spec", "helpers", "inputs_helper_spec", "NUMBER", "rb", "spec", "builder", "semantic_fields_for_spec", "NUMBER", "rb", "spec", "builder", "custom_builder_spec", "NUMBER", "rb", "spec", "builder", "error_proc_spec", "NUMBER", "rb", "spec", "builder", "errors_spec", "NUMBER", "rb", "NUMBER", "F", "NUMBER", "Failures", "NUMBER", "Formtastic", "FormBuilder", "commit_button", "label", "when", "use", "on", "an", "exist", "record", "when", "no", "explicit", "label", "be", "provide", "when", "no", "I", "NUMBER", "n", "localized", "label", "be", "provide", "should", "render", "an", "input", "with", "default", "I", "NUMBER", "n", "localized", "label", "fallback", "Failure", "Error", "output_buffer", "NUMBER", "should", "have_tag", "li", "NUMBER", "commit", "input", "value", "Save", "Post", "class", "update", "expected", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "to", "have", "an", "element", "matching", "li", "NUMBER", "commit", "input", "value", "Save", "Post", "class", "update", "but", "did", "not", "NUMBER", "spec", "helpers", "commit_button_helper_spec", "NUMBER", "rb", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failure", "Failed", "examples", "rspec", "NUMBER", "spec", "helpers", "commit_button_helper_spec", "NUMBER", "rb", "NUMBER", "Formtastic", "FormBuilder", "commit_button", "label", "when", "use", "on", "an", "exist", "record", "when", "no", "explicit", "label", "be", "provide", "when", "no", "I", "NUMBER", "n", "localized", "label", "be", "provide", "should", "render", "an", "input", "with", "default", "I", "NUMBER", "n", "localized", "label", "fallback", "rake", "abort", "ruby", "S", "bundle", "exec", "rcov", "Ispec", "lib", "exclude", "gems", "spec", "NUMBER", "bundle", "aggregate", "coverage", "NUMBER", "data", "spec", "i", "NUMBER", "n_spec", "NUMBER", "rb", "spec", "inputs", "datetime_input_spec", "NUMBER", "rb", "spec", "inputs", "include_blank_spec", "NUMBER", "rb", "spec", "inputs", "string_input_spec", "NUMBER", "rb", "spec", "inputs", "range_input_spec", "NUMBER", "rb", "spec", "inputs", "radio_input_spec", "NUMBER", "rb", "spec", "inputs", "numeric_input_spec", "NUMBER", "rb", "spec", "inputs", "text_input_spec", "NUMBER", "rb", "spec", "inputs", "number_input_spec", "NUMBER", "rb", "spec", "inputs", "custom_input_spec", "NUMBER", "rb", "spec", "inputs", "label_spec", "NUMBER", "rb", "spec", "inputs", "placeholder_spec", "NUMBER", "rb", "spec", "inputs", "search_input_spec", "NUMBER", "rb", "spec", "inputs", "boolean_input_spec", "NUMBER", "rb", "spec", "inputs", "check_boxes_input_spec", "NUMBER", "rb", "spec", "inputs", "phone_input_spec", "NUMBER", "rb", "spec", "inputs", "select_input_spec", "NUMBER", "rb", "spec", "inputs", "password_input_spec", "NUMBER", "rb", "spec", "inputs", "time_input_spec", "NUMBER", "rb", "spec", "inputs", "hidden_input_spec", "NUMBER", "rb", "spec", "inputs", "country_input_spec", "NUMBER", "rb", "spec", "inputs", "file_input_spec", "NUMBER", "rb", "spec", "inputs", "email_input_spec", "NUMBER", "rb", "spec", "inputs", "time_zone_input_spec", "NUMBER", "rb", "spec", "inputs", "url_input_spec", "NUMBER", "rb", "spec", "inputs", "date_input_spec", "NUMBER", "rb", "spec", "helpers", "buttons_helper_spec", "NUMBER", "rb", "spec", "helpers", "input_helper_spec", "NUMBER", "rb", "spec", "helpers", "commit_button_helper_spec", "NUMBER", "rb", "spec", "helpers", "form_helper_spec", "NUMBER", "rb", "spec", "helpers", "reflection_helper_spec", "NUMBER", "rb", "spec", "helpers", "semantic_errors_helper_spec", "NUMBER", "rb", "spec", "helpers", "inputs_helper_spec", "NUMBER", "rb", "spec", "builder", "semantic_fields_for_spec", "NUMBER", "rb", "spec", "builder", "custom_builder_spec", "NUMBER", "rb", "spec", "builder", "error_proc_spec", "NUMBER", "rb", "spec", "builder", "errors_spec", "NUMBER", "rb", "fail", "See", "full", "trace", "by", "run", "task", "with", "trace", "The", "output", "says", "Update", "Post", "and", "the", "test", "expects", "Save", "Post", "NUMBER", "I", "didn", "t", "look", "into", "which", "one", "be", "correct", "and", "don", "t", "have", "time", "for", "in", "the", "near", "future", "NUMBER", "betelgeuse", "what", "version", "of", "Ruby", "be", "you", "use", "It", "s", "works", "for", "me", "with", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "ree", "NUMBER", "NUMBER", "nashby", "ruby", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "patchlevel", "NUMBER", "i", "NUMBER", "linux", "There", "s", "a", "different", "but", "relate", "fail", "spec", "on", "Travis", "CI", "so", "clearly", "something", "isnt", "NUMBER", "solid", "NUMBER", "My", "first", "guess", "be", "doffing", "i", "NUMBER", "n", "version", "NUMBER", "justinfrench", "I", "use", "bundle", "exec", "rake", "so", "the", "version", "locked", "by", "Gemfile", "NUMBER", "lock", "should", "get", "use", "NUMBER", "i", "NUMBER", "n", "seems", "to", "be", "currently", "at", "NUMBER", "Travis", "be", "green", "for", "NUMBER", "now", "so", "it", "s", "only", "you", "sorry", "betelgeuse", "not", "sure", "what", "else", "I", "can", "do", "to", "help", "NUMBER", "Closing", "for", "now", "but", "will", "happily", "accept", "a", "patch", "of", "course", "LINK", "ci", "NUMBER", "org", "justinfrench", "formtastic", "build", "NUMBER", "Closes", "GH", "NUMBER", "I", "didn", "t", "touch", "the", "markup", "NUMBER", "In", "reality", "the", "generate", "markup", "be", "noisier", "NUMBER", "Do", "you", "want", "it", "to", "reflect", "reality", "or", "to", "have", "just", "the", "relevant", "parts", "lib", "formtastic", "inputs", "file_input", "NUMBER", "rb", "The", "example", "code", "should", "probably", "have", "file", "type", "inputs", "instead", "of", "email", "NUMBER", "I", "can", "try", "to", "come", "up", "with", "something", "but", "I", "be", "not", "really", "sure", "what", "would", "be", "most", "useful", "to", "people", "use", "formtastic", "NUMBER", "When", "generating", "form", "NUMBER", "input", "comments", "as", "check_boxes", "selected", "comments", "required", "false", "I", "get", "this", "extra", "field", "TAG", "Yes", "but", "in", "all", "other", "cases", "I", "end", "up", "with", "an", "unexpect", "empty", "element", "in", "my", "array", "NUMBER", "It", "s", "annoying", "but", "all", "multi", "select", "type", "form", "elements", "need", "to", "be", "handle", "specially", "NUMBER", "Following", "the", "principle", "of", "least", "surprise", "would", "be", "better", "to", "leave", "it", "alone", "nickurban", "sobrinho", "This", "be", "not", "an", "issue", "with", "Rails", "helpers", "because", "Rails", "doesn", "t", "have", "a", "helper", "for", "rendering", "a", "group", "of", "checkboxes", "NUMBER", "I", "don", "t", "believe", "there", "s", "an", "option", "in", "Formtastic", "either", "NUMBER", "If", "I", "remember", "correctly", "NUMBER", "This", "feature", "was", "add", "in", "NUMBER", "b", "NUMBER", "ed", "NUMBER", "b", "NUMBER", "fe", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "af", "NUMBER", "dcaca", "NUMBER", "b", "NUMBER", "the", "reason", "for", "it", "I", "think", "be", "that", "if", "you", "were", "to", "uncheck", "all", "checkboxes", "for", "the", "categories", "association", "when", "editing", "a", "Book", "the", "browser", "would", "not", "submit", "any", "params", "relating", "to", "categories", "NUMBER", "The", "result", "was", "that", "the", "exist", "category", "associations", "would", "not", "be", "remove", "from", "the", "Book", "when", "saved", "NUMBER", "This", "be", "_also_", "very", "surprising", "for", "developers", "and", "users", "NUMBER", "The", "common", "work", "around", "at", "least", "at", "the", "time", "when", "this", "feature", "was", "introduce", "was", "to", "place", "a", "hidden", "input", "in", "there", "first", "NUMBER", "This", "patch", "feature", "remove", "that", "step", "for", "developers", "NUMBER", "The", "key", "thing", "for", "me", "be", "that", "you", "ll", "have", "to", "do", "some", "work", "somewhere", "if", "you", "want", "this", "stuff", "to", "really", "work", "NUMBER", "The", "current", "behaviour", "was", "thought", "be", "be", "the", "simplest", "strategy", "at", "the", "time", "NUMBER", "There", "may", "be", "better", "strategies", "there", "may", "be", "a", "regression", "but", "it", "s", "not", "as", "simple", "as", "you", "have", "a", "blank", "option", "there", "please", "remove", "NUMBER", "Long", "answer", "but", "I", "hope", "it", "helps", "I", "understand", "why", "you", "did", "it", "now", "and", "that", "it", "s", "not", "an", "error", "NUMBER", "It", "sucks", "when", "you", "get", "bit", "by", "the", "disappearing", "box", "group", "issue", "but", "that", "s", "generally", "something", "that", "comes", "up", "the", "first", "time", "you", "write", "a", "web", "app", "that", "uses", "grouped", "check", "boxes", "or", "a", "multi", "select", "NUMBER", "Once", "you", "ve", "use", "them", "once", "you", "re", "aware", "of", "the", "issue", "NUMBER", "This", "in", "contrast", "be", "surprising", "to", "people", "who", "be", "already", "familiar", "with", "multi", "select", "type", "inputs", "NUMBER", "Given", "that", "I", "would", "probably", "lean", "towards", "surprising", "in", "the", "same", "way", "as", "normal", "NUMBER", "Maybe", "rails", "should", "include", "this", "kind", "of", "functionality", "and", "automatically", "delete", "the", "param", "but", "that", "would", "probably", "raise", "other", "issue", "NUMBER", "Yeah", "I", "m", "not", "NUMBER", "sold", "either", "way", "but", "I", "would", "say", "that", "I", "m", "not", "inclined", "to", "change", "until", "the", "next", "major", "release", "at", "the", "very", "earliest", "given", "we", "re", "well", "into", "RCs", "for", "NUMBER", "Happy", "for", "you", "to", "re", "open", "and", "rally", "some", "support", "for", "revert", "the", "change", "in", "NUMBER", "or", "NUMBER", "not", "as", "far", "away", "as", "it", "sounds", "NUMBER", "Thanks", "for", "the", "feedback", "either", "way", "NUMBER", "Build", "cancan", "over", "NUMBER", "rubies", "on", "Travis", "CI", "with", "a", "simple", "config", "file", "and", "post", "commit", "hook", "NUMBER", "Hi", "I", "don", "t", "know", "it", "be", "already", "possible", "but", "maybe", "it", "would", "be", "useful", "if", "one", "can", "change", "the", "tag", "wrapping", "the", "input", "which", "now", "defaults", "to", "li", "tag", "so", "that", "one", "can", "have", "input", "elements", "wrapped", "with", "div", "instead", "NUMBER", "Hi", "this", "be", "on", "the", "list", "but", "not", "in", "the", "immediate", "future", "NUMBER", "I", "would", "love", "to", "be", "able", "to", "do", "that", "too", "NUMBER", "In", "the", "meantime", "we", "ve", "made", "it", "much", "easier", "to", "make", "or", "modify", "inputs", "to", "suit", "your", "own", "preferences", "NUMBER", "LINK", "NUMBER", "preview", "custom", "inputs", "Thanks", "NUMBER", "All", "the", "lis", "stuff", "comes", "from", "the", "method", "_input_wrapping_", "right", "Right", "NUMBER", "I", "can", "t", "find", "where", "this", "method", "be", "defined", "NUMBER", "May", "I", "override", "this", "method", "without", "forking", "your", "project", "Thank", "you", "NUMBER", "OyoKooN", "I", "m", "pretty", "sure", "you", "know", "how", "to", "grep", "or", "ack", "in", "a", "project", "ack", "def", "input_wrapping", "lib", "formtastic", "inputs", "base", "wrapping", "NUMBER", "rb", "NUMBER", "def", "input_wrapping", "block", "If", "you", "want", "to", "change", "this", "across", "all", "inputs", "you", "would", "want", "to", "monkey", "patch", "that", "method", "in", "the", "Wrapping", "module", "directly", "via", "an", "initialiser", "NUMBER", "If", "you", "just", "wanted", "to", "change", "it", "for", "a", "handful", "of", "inputs", "something", "like", "this", "ruby", "app", "inputs", "string_input", "NUMBER", "rb", "class", "StringInput", "TAG", "be", "just", "another", "block", "element", "with", "some", "special", "semantics", "and", "style", "it", "like", "you", "would", "style", "the", "TAG", "justinfrench", "Thank", "you", "for", "your", "help", "NUMBER", "I", "did", "not", "know", "ack", "thank", "you", "for", "the", "introduction", "if", "i", "get", "it", "right", "one", "of", "the", "reason", "be", "to", "get", "simple_form", "start", "was", "the", "inability", "to", "change", "the", "html", "output", "of", "formtastic", "NUMBER", "But", "be", "should", "be", "so", "simple", "to", "change", "if", "submit", "i", "patch", "will", "you", "accept", "it", "I", "hardly", "can", "believe", "nobody", "has", "do", "it", "NUMBER", "formtastic", "NUMBER", "be", "very", "nice", "code", "by", "the", "way", "NUMBER", "aka", "NUMBER", "patches", "welcome", "but", "I", "ll", "be", "fussy", "so", "maybe", "start", "with", "something", "small", "that", "we", "can", "discuss", "or", "post", "to", "the", "ruby", "group", "or", "gist", "something", "NUMBER", "hey", "nice", "i", "thought", "about", "add", "a", "form", "builder", "helper", "for", "the", "input", "wrapper", "tags", "that", "way", "one", "could", "customize", "them", "even", "for", "each", "form", "via", "a", "form", "builder", "like", "one", "can", "do", "now", "with", "text", "field", "and", "other", "basic", "elements", "NUMBER", "I", "just", "created", "a", "very", "simple", "first", "example", "how", "the", "implementation", "could", "look", "like", "maybe", "you", "can", "have", "a", "look", "and", "give", "me", "feedback", "what", "you", "think", "about", "this", "approach", "NUMBER", "you", "can", "view", "it", "here", "NUMBER", "LINK", "Hi", "I", "read", "a", "lot", "that", "there", "was", "to", "be", "a", "build", "in", "wrapper", "customization", "i", "NUMBER", "e", "NUMBER", "use", "td", "instead", "of", "li", "in", "further", "version", "of", "Formtastic", "but", "this", "was", "months", "ago", "NUMBER", "Is", "there", "any", "easy", "solution", "out", "yet", "Thanks", "for", "the", "fast", "answer", "Justin", "NUMBER", "Yes", "monkey", "patching", "be", "surely", "what", "I", "m", "looking", "for", "NUMBER", "But", "I", "must", "admit", "that", "I", "have", "no", "idea", "how", "to", "achieve", "that", "NUMBER", "Could", "you", "advise", "any", "document", "that", "explains", "that", "procedure", "Thanks", "in", "advance", "PS", "what", "do", "you", "mean", "by", "or", "override", "it", "in", "a", "specific", "input", "by", "subclassing", "NUMBER", "Wow", "thanks", "for", "the", "extensive", "answer", "NUMBER", "I", "do", "need", "to", "wrap", "each", "input", "by", "a", "td", "thus", "obtaining", "the", "following", "structure", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "But", "I", "want", "a", "certain", "control", "over", "the", "classes", "applied", "to", "my", "td", "certain", "should", "have", "a", "small", "class", "others", "should", "have", "large", "NUMBER", "I", "could", "use", "the", "wrapper_html", "class", "large", "right", "I", "m", "going", "to", "try", "with", "the", "examples", "you", "provide", "and", "will", "come", "back", "to", "you", "if", "I", "encounter", "problem", "NUMBER", "Thanks", "again", "Everything", "works", "for", "me", "NUMBER", "Thanks", "again", "for", "your", "help", "Justin", "I", "didn", "t", "see", "any", "other", "issue", "about", "this", "specific", "problem", "Here", "be", "my", "form", "semantic_form_for", "paint", "do", "form", "NUMBER", "form", "NUMBER", "input", "name", "NUMBER", "semantic_fields_for", "user", "do", "user_form", "NUMBER", "user_form", "NUMBER", "input", "name", "The", "label", "hint", "NUMBER", "for", "the", "first", "input", "name", "be", "correct", "formtastic", "NUMBER", "labels", "NUMBER", "paint", "NUMBER", "but", "the", "second", "input", "name", "be", "incorrect", "NUMBER", "It", "be", "use", "the", "same", "as", "the", "first", "one", "instead", "of", "formtastic", "NUMBER", "labels", "NUMBER", "user", "Other", "field", "inside", "the", "semantic_fields_for", "be", "treated", "correctly", "NUMBER", "Only", "duplicate", "ones", "have", "issue", "which", "version", "of", "rails", "the", "i", "NUMBER", "n", "gem", "and", "formtastic", "be", "you", "run", "with", "Sorry", "I", "forgot", "to", "specify", "Rails", "NUMBER", "rc", "NUMBER", "Ruby", "NUMBER", "Linux", "Formtastic", "NUMBER", "rc", "NUMBER", "crystalin", "can", "you", "please", "re", "test", "with", "formtastic", "master", "and", "rails", "NUMBER", "NUMBER", "stable", "There", "s", "be", "some", "fix", "in", "both", "Rails", "and", "Formtastic", "to", "do", "with", "fields_for", "and", "semantic_fields_for", "which", "may", "or", "may", "not", "have", "be", "relate", "NUMBER", "Also", "if", "it", "still", "fail", "could", "you", "let", "me", "know", "which", "i", "NUMBER", "n", "version", "you", "have", "I", "tried", "again", "and", "I", "still", "get", "the", "same", "behavior", "NUMBER", "The", "i", "NUMBER", "n", "I", "m", "use", "be", "NUMBER", "However", "I", "think", "the", "issue", "be", "come", "from", "the", "scopes", "inside", "the", "i", "NUMBER", "n", "NUMBER", "rb", "It", "be", "actually", "defined", "like", "this", "SCOPES", "model", "NUMBER", "nested_model", "NUMBER", "action", "NUMBER", "attribute", "model", "NUMBER", "action", "NUMBER", "attribute", "model", "NUMBER", "nested_model", "NUMBER", "attribute", "model", "NUMBER", "attribute", "nested_model", "NUMBER", "attribute", "attribute", "I", "didn", "t", "look", "deep", "in", "the", "code", "but", "I", "guess", "the", "order", "of", "the", "scope", "array", "define", "which", "translation", "be", "use", "NUMBER", "In", "the", "previous", "one", "the", "model", "NUMBER", "attribute", "be", "use", "before", "the", "nested_model", "NUMBER", "attribute", "But", "the", "good", "behavior", "be", "to", "take", "the", "nested_model", "before", "the", "model", "if", "there", "be", "one", "NUMBER", "Tell", "me", "if", "you", "think", "it", "be", "logic", "for", "you", "NUMBER", "Hi", "I", "think", "I", "agree", "with", "that", "change", "to", "try", "the", "nested", "model", "before", "the", "model", "but", "I", "don", "t", "heavily", "use", "i", "NUMBER", "n", "so", "I", "may", "be", "miss", "something", "NUMBER", "If", "someone", "like", "sobrinho", "could", "chime", "in", "and", "NUMBER", "the", "change", "it", "should", "be", "pretty", "easy", "to", "work", "up", "the", "patch", "NUMBER", "Start", "lobbying", "This", "be", "not", "my", "real", "form", "but", "the", "use", "of", "semantic_fields_for", "be", "the", "same", "NUMBER", "When", "I", "remove", "the", "form", "NUMBER", "before", "the", "semantic_fields_for", "the", "behavior", "be", "correct", "the", "user", "model", "attributes", "be", "taken", "instead", "of", "the", "paint", "model", "attributes", "as", "it", "was", "before", "NUMBER", "I", "did", "form", "NUMBER", "semantic_fields_for", "because", "it", "was", "use", "like", "this", "in", "the", "example", "on", "the", "formtastic", "github", "page", "NUMBER", "I", "guess", "the", "form", "NUMBER", "semantic_fields_for", "be", "only", "for", "nested", "models", "NUMBER", "and", "semantic_fields_for", "be", "for", "independant", "models", "NUMBER", "in", "my", "locale", "file", "formtastic", "labels", "user", "name", "Your", "name", "paint", "name", "Painting", "I", "ve", "had", "a", "go", "at", "switching", "this", "around", "but", "either", "I", "m", "miss", "something", "obvious", "or", "NUMBER", "I", "ve", "publish", "to", "GH", "NUMBER", "branch", "NUMBER", "If", "anyone", "else", "would", "care", "to", "check", "my", "work", "and", "offer", "suggestions", "or", "a", "fix", "that", "d", "be", "great", "NUMBER", "sobrinho", "crystalin", "Bumping", "this", "out", "to", "NUMBER", "since", "it", "s", "a", "change", "instead", "of", "a", "concrete", "bug", "and", "also", "because", "I", "really", "want", "to", "push", "out", "a", "final", "RC", "if", "possible", "sobrinho", "did", "you", "Sorry", "for", "the", "delay", "NUMBER", "I", "change", "the", "scope", "order", "please", "check", "if", "it", "be", "correct", "crystalin", "this", "spec", "coverage", "the", "change", "order", "Not", "sure", "what", "you", "mean", "but", "the", "test", "be", "not", "work", "if", "the", "order", "be", "change", "crystalin", "that", "s", "question", "NUMBER", "thanks", "Fixed", "on", "pull", "request", "NUMBER", "The", "space", "inserted", "between", "create_check_boxes", "and", "escape_html_entities", "in", "line", "NUMBER", "of", "formtastic", "NUMBER", "rb", "be", "unnecessary", "and", "results", "in", "a", "too", "large", "gap", "between", "a", "checkbox", "and", "its", "label", "NUMBER", "Please", "fix", "it", "in", "NUMBER", "as", "well", "if", "needed", "didn", "t", "check", "myself", "yet", "NUMBER", "Well", "the", "space", "be", "interpreted", "by", "the", "browser", "as", "part", "of", "the", "label", "and", "be", "display", "therefore", "the", "gap", "be", "too", "big", "NUMBER", "You", "can", "see", "it", "in", "this", "base", "NUMBER", "encoded", "PNG", "screenshot", "iVBORw", "NUMBER", "KGgoAAAANSUhEUgAAAEoAAAA", "NUMBER", "CAMAAACcsixcAAAAAXNSR", "NUMBER", "IArs", "NUMBER", "c", "NUMBER", "QAAAGBQTFRFAAEA", "KXi", "NUMBER", "Gn", "NUMBER", "Hn", "NUMBER", "L", "NUMBER", "y", "NUMBER", "MoC", "NUMBER", "OoXASorAT", "NUMBER", "DGU", "NUMBER", "XEWZrKZ", "NUMBER", "DLmJqXbqfRirjYmMHcp", "NUMBER", "fktNDoy", "NUMBER", "Kvtbo", "yt", "NUMBER", "rz", "Pv", "NUMBER", "eTg", "NUMBER", "efk", "NUMBER", "Orn", "NUMBER", "e", "NUMBER", "O", "NUMBER", "r", "NUMBER", "vDt", "NUMBER", "PH", "NUMBER", "X", "NUMBER", "vz", "v", "NUMBER", "MJxmMwAAAAFiS", "NUMBER", "dEAIgFHUgAAAAJ", "cEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfbBh", "NUMBER", "LNBO", "NUMBER", "as", "NUMBER", "IAAAAGXRFWHRDb", "NUMBER", "tZW", "NUMBER", "AENyZWF", "NUMBER", "ZWQgd", "NUMBER", "l", "NUMBER", "aCBHSU", "NUMBER", "QV", "NUMBER", "EOFwAAAWlJREFUWMPt", "NUMBER", "n", "TQzAQBmA", "NUMBER", "BEX", "NUMBER", "uBwtJfn", "NUMBER", "K", "NUMBER", "EaR", "NUMBER", "DIY", "NUMBER", "jp", "NUMBER", "phld", "NUMBER", "UgzZV", "NUMBER", "HnVbOn", "NUMBER", "W", "rDpKJWMdp", "NUMBER", "PpmkeWCdQveScQBlppCT", "NUMBER", "OWOF", "NUMBER", "jhjcUsdEbpukElgKQtK", "lfoQCFVHbljSHE", "PMZSjJec", "rAqg", "AZfcSgExNRgUPd", "NUMBER", "IeCGBx", "NUMBER", "ejYGOYyhLPWegHC", "NUMBER", "VEyXxg", "NUMBER", "DE", "hVAjAp", "nHfUleCpngGddnKRwxHJHihySLEq", "NUMBER", "U", "NUMBER", "KkIS", "NUMBER", "BexKvY", "NUMBER", "COFNPjRPVr", "kVxEAVw", "NUMBER", "sR", "NUMBER", "T", "NUMBER", "w", "wssFri", "CMaRNKL", "NUMBER", "Yoh", "NUMBER", "a", "knRtvOOGlkAXiiwl", "NUMBER", "q", "NUMBER", "R", "NUMBER", "PWFDfzLa", "NUMBER", "UW", "NUMBER", "TWqrW", "gx", "NUMBER", "i", "NUMBER", "MenDVqR", "NUMBER", "I", "c", "NUMBER", "UVd", "NUMBER", "EVd", "NUMBER", "EV", "NUMBER", "dhZNDlLT", "NUMBER", "PUlEWPU", "NUMBER", "Y", "NUMBER", "gRokm", "NUMBER", "qQPuepXrpb", "NUMBER", "Ib", "NUMBER", "OUsZqbKoDelzjhokm", "NUMBER", "qQ", "PhcpnUXftn", "NUMBER", "tfS", "NUMBER", "RfRadqA", "NUMBER", "pc", "NUMBER", "EyWTTZk", "N", "NUMBER", "Pjj", "NUMBER", "qMSuY", "NUMBER", "RHv", "NUMBER", "eSCu", "b", "NUMBER", "joQRUAAAAASUVORK", "NUMBER", "C", "YII", "While", "the", "fix", "may", "seem", "simple", "I", "would", "highly", "suggest", "it", "to", "be", "part", "of", "a", "major", "version", "change", "so", "people", "update", "their", "gems", "for", "security", "minor", "version", "don", "t", "get", "irritated", "by", "the", "lack", "of", "space", "their", "layouts", "depend", "on", "NUMBER", "Maybe", "along", "with", "remove", "the", "space", "we", "can", "update", "the", "formtastic", "css", "to", "have", "a", "default", "margin", "between", "the", "NUMBER", "use", "ems", "to", "mimic", "a", "space", "NUMBER", "I", "forgot", "to", "mention", "that", "I", "m", "use", "a", "custom", "CSS", "not", "the", "original", "formtastic", "one", "NUMBER", "sncf", "This", "space", "doesn", "t", "exist", "in", "master", "aka", "NUMBER", "so", "I", "m", "closing", "this", "issue", "NUMBER", "As", "above", "I", "m", "inclined", "not", "to", "backport", "this", "to", "NUMBER", "x", "because", "it", "could", "cause", "problem", "for", "those", "either", "expecting", "the", "space", "or", "compensating", "for", "it", "in", "their", "CSS", "NUMBER", "Fix", "in", "NUMBER", "be", "fine", "for", "me", "as", "I", "m", "planning", "to", "migrate", "soon", "NUMBER", "Thanks", "Is", "there", "a", "hook", "of", "some", "sort", "where", "I", "could", "persuade", "the", "buttons", "helper", "to", "produce", "lt", "button", "type", "submit", "value", "lt", "button", "instead", "of", "lt", "input", "type", "submit", "value", "value", "And", "I", "would", "want", "to", "use", "the", "generate", "text", "as", "I", "use", "generic", "form", "for", "both", "creating", "and", "editing", "NUMBER", "Why", "TAG", "text", "TAG", "sobrinho", "Check", "out", "this", "article", "LINK", "the", "button", "element", "NUMBER", "Long", "story", "short", "you", "can", "add", "content", "HTML", "inside", "of", "them", "and", "they", "don", "t", "use", "Safari", "s", "default", "Aqua", "styling", "make", "them", "easier", "to", "style", "NUMBER", "Oh", "and", "regard", "the", "actual", "issue", "NUMBER", "Interesting", "I", "didn", "t", "know", "that", "NUMBER", "Actually", "we", "don", "t", "have", "api", "for", "that", "and", "maybe", "be", "that", "what", "justinfrench", "want", "to", "say", "with", "pretty", "buttons", "NUMBER", "Maybe", "be", "time", "to", "do", "that", "NUMBER", "justinfrench", "be", "that", "Current", "validation", "checks", "some", "aspects", "of", "ActiveRecord", "validations", "but", "it", "do", "it", "too", "well", "marking", "optional", "field", "required", "and", "in", "theory", "the", "other", "way", "around", "make", "presence", "allow_blank", "true", "possible", "NUMBER", "My", "patch", "has", "a", "bit", "stricter", "required", "checks", "for", "presence", "inclusion", "and", "length", "AR", "validators", "presence", "has", "no", "options", "eg", "NUMBER", "it", "should", "not", "allow", "allow_blank", "true", "inclusion", "accepts", "allow_blank", "length", "accepts", "allow_blank", "but", "it", "do", "accept", "minimum", "and", "within", "too", "NUMBER", "When", "any", "of", "the", "latter", "two", "starts", "at", "zero", "the", "field", "should", "not", "be", "required", "NUMBER", "Specs", "attached", "NUMBER", "I", "think", "multiple", "issue", "can", "be", "involved", "NUMBER", "I", "d", "ask", "case", "requestors", "to", "re", "test", "their", "problem", "on", "the", "patched", "version", "or", "at", "least", "they", "should", "write", "a", "fail", "test", "NUMBER", "Interesting", "NUMBER", "Have", "not", "seen", "this", "myself", "and", "I", "have", "RC", "NUMBER", "run", "in", "production", "so", "I", "would", "expect", "someone", "to", "moan", "about", "this", "sooner", "or", "later", "NUMBER", "I", "notice", "the", "same", "symptoms", "but", "for", "me", "it", "never", "fell", "back", "NUMBER", "However", "handle", "of", "presence", "inclusion", "and", "length", "validations", "be", "a", "bit", "rough", "NUMBER", "I", "have", "an", "implementation", "WFM", "but", "I", "couldn", "t", "work", "on", "the", "fail", "test", "yet", "NUMBER", "Pull", "NUMBER", "looks", "to", "address", "this", "NUMBER", "Closing", "NUMBER", "After", "fail", "validation", "a", "checkbox", "be", "always", "presented", "as", "checked", "NUMBER", "This", "should", "be", "fix", "according", "to", "LINK", "but", "I", "m", "not", "sure", "if", "v", "NUMBER", "NUMBER", "fix", "the", "problem", "NUMBER", "This", "be", "the", "code", "use", "for", "presenting", "the", "checkbox", "TAG", "boolean", "required", "false", "Yes", "I", "have", "restarted", "server", "etc", "the", "problem", "be", "still", "there", "NUMBER", "I", "m", "use", "rails", "NUMBER", "and", "formtastic", "NUMBER", "leiou", "NUMBER", "what", "sort", "of", "database", "column", "be", "backing", "the", "accepted_terms_at", "attribute", "I", "m", "guessing", "it", "s", "a", "date_time", "based", "on", "the", "naming", "convention", "NUMBER", "NUMBER", "I", "m", "also", "assuming", "it", "s", "ActiveRecord", "but", "please", "confirm", "NUMBER", "NUMBER", "When", "you", "first", "load", "a", "new", "form", "before", "submit", "and", "validating", "be", "the", "checkbox", "be", "checked", "by", "default", "NUMBER", "I", "m", "assuming", "that", "you", "load", "the", "form", "it", "s", "unchecked", "you", "submit", "the", "form", "something", "else", "fail", "validation", "then", "the", "checkbox", "be", "checked", "but", "please", "confirm", "NUMBER", "leiou", "would", "love", "to", "close", "this", "off", "before", "the", "next", "RC", "if", "possible", "Sorry", "for", "my", "late", "response", "it", "all", "work", "now", "and", "I", "can", "t", "make", "the", "issue", "reoccur", "NUMBER", "I", "m", "sorry", "for", "starting", "this", "issue", "NUMBER", "I", "have", "this", "numericality", "validation", "in", "my", "model", "and", "now", "it", "seems", "like", "formtastic", "chokes", "on", "it", "somehow", "when", "trying", "to", "follow", "the", "Proc", "NUMBER", "ruby", "validates_numericality_of", "min_sphere", "less_than", "Proc", "NUMBER", "new", "frame", "frame", "NUMBER", "max_sphere", "greater_than_or_equal_to", "NUMBER", "only_integer", "false", "validates_numericality_of", "max_sphere", "less_than_or_equal_to", "NUMBER", "greater_than", "Proc", "NUMBER", "new", "frame", "frame", "NUMBER", "min_sphere", "only_integer", "false", "Error", "message", "undefined", "method", "for", "TAG", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "inputs", "base", "validations", "NUMBER", "rb", "NUMBER", "in", "validation_max", "View", "code", "f", "NUMBER", "input", "min_sphere", "Spot", "on", "suggesting", "me", "to", "patch", "it", "NUMBER", "I", "be", "a", "ruby", "n", "NUMBER", "b", "still", "but", "thanks", "to", "your", "detailed", "description", "of", "the", "problem", "I", "think", "I", "ll", "manage", "to", "solve", "this", "one", "NUMBER", "Give", "me", "a", "day", "or", "so", "to", "do", "this", "and", "I", "ll", "send", "you", "a", "pull", "request", "NUMBER", "If", "I", "wanted", "to", "write", "test", "for", "this", "I", "suppose", "that", "I", "d", "add", "this", "for", "both", "range_input_specs", "number_input_specs", "Ok", "so", "I", "fix", "the", "issue", "but", "I", "have", "to", "spend", "some", "time", "with", "the", "specs", "before", "I", "can", "add", "that", "NUMBER", "A", "LOT", "of", "setting", "up", "do", "in", "the", "spec_helper", "mhenrixon", "how", "s", "the", "specs", "going", "Would", "love", "to", "get", "a", "new", "RC", "out", "this", "week", "Sorry", "about", "that", "I", "completely", "forgot", "about", "it", "NUMBER", "Will", "try", "and", "create", "something", "tonight", "NUMBER", "just", "for", "you", "nzkoz", "Cool", "next", "up", "let", "us", "turn", "off", "the", "rest", "of", "the", "html", "NUMBER", "stuff", "url", "etc", "NUMBER", "NZKoz", "No", "NUMBER", "I", "mean", "NUMBER", "why", "How", "has", "it", "negatively", "affected", "your", "project", "Mostly", "in", "the", "same", "way", "that", "required", "do", "NUMBER", "Chrome", "do", "crazy", "un", "interruptable", "things", "which", "just", "aren", "t", "all", "that", "helpful", "NUMBER", "Crazy", "Chrome", "LINK", "caxdfrcf", "NUMBER", "jtigbjf", "NUMBER", "sj", "NUMBER", "wch", "NUMBER", "jpg", "Nice", "in", "theory", "painful", "in", "practise", "NUMBER", "Don", "t", "hate", "the", "player", "Hate", "the", "game", "Unless", "you", "want", "to", "live", "in", "the", "past", "for", "the", "rest", "of", "your", "career", "You", "_have_", "to", "log", "this", "as", "a", "use", "case", "to", "the", "whatwg", "LINK", "apps", "current", "work", "multipage", "NUMBER", "I", "m", "not", "sure", "why", "the", "commas", "be", "present", "What", "be", "that", "cc", "Hixie", "paulirish", "NZKoz", "that", "s", "a", "really", "interesting", "case", "NUMBER", "What", "you", "have", "looks", "like", "a", "number", "we", "should", "use", "a", "number", "input", "but", "it", "s", "actually", "some", "kind", "of", "foreign", "key", "and", "doesn", "t", "make", "sense", "for", "the", "commas", "etc", "to", "be", "there", "NUMBER", "In", "the", "mean", "time", "NUMBER", "ruby", "class", "NumberInput", "TAG", "radio", "collection", "One", "Two", "I", "suspect", "this", "be", "something", "to", "do", "with", "floats", "but", "work", "on", "the", "other", "issue", "at", "the", "moment", "The", "old", "CSS", "applied", "to", "the", "page", "renders", "fine", "NUMBER", "Here", "be", "the", "generate", "minimal", "html", "LINK", "just", "add", "the", "formtastic", "CSS", "to", "the", "directory", "And", "the", "erb", "that", "generates", "it", "LINK", "The", "custom", "input", "be", "here", "at", "line", "NUMBER", "LINK", "Firefox", "NUMBER", "Safari", "Chrome", "NUMBER", "Yep", "that", "s", "fix", "it", "NUMBER", "In", "my", "model", "I", "have", "ruby", "validates_length_of", "body", "maximum", "NUMBER", "But", "not", "validates_presence_of", "body", "Should", "the", "behavior", "be", "change", "to", "only", "required", "field", "when", "validates_presence_of", "be", "use", "This", "would", "be", "consistent", "with", "Rails", "which", "allows", "you", "to", "validate", "the", "length", "but", "the", "field", "can", "be", "empty", "NUMBER", "I", "think", "consistency", "with", "Rails", "be", "the", "best", "option", "people", "would", "expect", "Formtastic", "to", "just", "work", "NUMBER", "If", "the", "validation", "requires", "some", "sort", "of", "input", "present", "min", "whatever", "then", "the", "field", "should", "be", "required", "NUMBER", "Otherwise", "not", "NUMBER", "In", "our", "case", "we", "had", "a", "summary", "and", "body", "NUMBER", "If", "a", "boolean", "be", "set", "the", "body", "be", "not", "shown", "on", "the", "site", "but", "if", "it", "be", "use", "it", "must", "be", "less", "than", "NUMBER", "Bit", "of", "a", "busy", "schedule", "over", "the", "next", "few", "days", "but", "I", "ll", "have", "a", "look", "and", "see", "how", "far", "I", "can", "get", "NUMBER", "Yeah", "I", "just", "came", "across", "this", "one", "came", "here", "to", "flag", "it", "as", "an", "issue", "you", "can", "have", "a", "non", "required", "field", "but", "often", "with", "a", "maximum", "length", "limit", "on", "it", "and", "now", "they", "re", "all", "get", "marked", "as", "required", "NUMBER", "Would", "be", "nice", "to", "see", "it", "fix", "rhulse", "karpah", "I", "think", "pull", "request", "NUMBER", "resolve", "this", "NUMBER", "Closing", "please", "re", "test", "in", "RC", "NUMBER", "or", "master", "if", "I", "haven", "t", "shipped", "RC", "NUMBER", "yet", "Looks", "good", "to", "me", "NUMBER", "Thanks", "All", "of", "my", "field", "be", "showing", "required", "when", "I", "have", "only", "a", "few", "in", "validates_presence_of", "NUMBER", "that", "supposed", "to", "happen", "Will", "do", "NUMBER", "thanks", "for", "the", "quick", "reply", "When", "attaching", "CK", "Editor", "to", "a", "text", "field", "the", "new", "form", "will", "not", "submit", "if", "the", "field", "be", "required", "NUMBER", "It", "be", "possible", "to", "edit", "exist", "content", "with", "the", "same", "form", "NUMBER", "For", "anyone", "else", "run", "into", "this", "problem", "it", "be", "NOT", "a", "bug", "in", "Formtastic", "NUMBER", "CK", "Editor", "do", "not", "put", "any", "of", "the", "entered", "text", "into", "the", "text", "area", "it", "replaces", "so", "as", "a", "required", "field", "this", "will", "fail", "NUMBER", "Because", "CK", "Editor", "hides", "the", "text", "area", "you", "cannot", "see", "the", "warning", "about", "the", "miss", "required", "data", "NUMBER", "A", "work", "around", "be", "to", "mark", "the", "field", "as", "required", "false", "and", "rely", "on", "the", "server", "side", "validation", "to", "display", "the", "error", "to", "the", "user", "NUMBER", "For", "anyone", "searching", "you", "add", "this", "to", "your", "input", "class", "ruby", "def", "required", "false", "end", "I", "have", "a", "Folio", "Portfolio", "that", "use", "mongoid", "embeds_many", "Folio", "PortfolioItems", "TAG", "complains", "about", "undefined", "method", "hash_for_folio_portfolio_folio_portfolio_items_path", "for", "TAG", "The", "be", "a", "route", "for", "what", "he", "be", "looking", "I", "think", "NUMBER", "same", "for", "POST", "folio_portfolio_portfolio_items", "GET", "folio", "portfolios", "portfolio_id", "portfolio_items", "NUMBER", "format", "action", "index", "controller", "folio", "portfolio_items", "but", "they", "be", "slightly", "different", "see", "the", "second", "_folio_", "which", "to", "my", "eyes", "must", "be", "cause", "the", "error", "_Can", "I", "fine", "tune", "this", "at", "the", "formtastic", "side", "_", "Or", "any", "other", "good", "ideas", "Stack", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "routing", "polymorphic_routes", "NUMBER", "rb", "NUMBER", "in", "polymorphic_url", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "routing", "polymorphic_routes", "NUMBER", "rb", "NUMBER", "in", "polymorphic_path", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "apply_form_for_options", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "form_for", "folio", "ruby", "NUMBER", "gems", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "block", "in", "form_helper_wrapper", "folio", "ruby", "NUMBER", "gems", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "with_custom_field_error_proc", "folio", "ruby", "NUMBER", "gems", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "form_helper_wrapper", "folio", "ruby", "NUMBER", "gems", "formtastic", "NUMBER", "rc", "NUMBER", "lib", "formtastic", "helpers", "form_helper", "NUMBER", "rb", "NUMBER", "in", "semantic_form_for", "home", "jan", "Projects", "folio", "app", "views", "folio", "portfolio_items", "_form", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "__home_jan__rojects_folio_app_views_folio_portfolio_items__form_html_erb___", "NUMBER", "_", "NUMBER", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "render_partial", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "wrap_formats", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "partial_renderer", "NUMBER", "rb", "NUMBER", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render_partial", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "helpers", "rendering_helper", "NUMBER", "rb", "NUMBER", "in", "render", "home", "jan", "Projects", "folio", "app", "views", "folio", "portfolio_items", "new", "NUMBER", "html", "NUMBER", "erb", "NUMBER", "in", "__home_jan__rojects_folio_app_views_folio_portfolio_items_new_html_erb__", "NUMBER", "_", "NUMBER", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "template", "NUMBER", "rb", "NUMBER", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render_template", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render_template", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render_with_layout", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render_template", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "abstract_renderer", "NUMBER", "rb", "NUMBER", "in", "wrap_formats", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "template_renderer", "NUMBER", "rb", "NUMBER", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render_template", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_view", "renderer", "renderer", "NUMBER", "rb", "NUMBER", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "_render_template", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "streaming", "NUMBER", "rb", "NUMBER", "in", "_render_template", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "renderers", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "compatibility", "NUMBER", "rb", "NUMBER", "in", "render_to_body", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "rendering", "NUMBER", "rb", "NUMBER", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "NUMBER", "levels", "in", "render", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "core_ext", "benchmark", "NUMBER", "rb", "NUMBER", "in", "block", "in", "ms", "home", "jan", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "benchmark", "NUMBER", "rb", "NUMBER", "in", "realtime", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "core_ext", "benchmark", "NUMBER", "rb", "NUMBER", "in", "ms", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "cleanup_view_runtime", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "implicit_render", "NUMBER", "rb", "NUMBER", "in", "default_render", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "implicit_render", "NUMBER", "rb", "NUMBER", "in", "send_action", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "base", "NUMBER", "rb", "NUMBER", "in", "process_action", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "rendering", "NUMBER", "rb", "NUMBER", "in", "process_action", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "callbacks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_action", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run__", "NUMBER", "__process_action__", "NUMBER", "__callbacks", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run_process_action_callbacks", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "run_callbacks", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "callbacks", "NUMBER", "rb", "NUMBER", "in", "process_action", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "process_action", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "block", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "instrumenter", "NUMBER", "rb", "NUMBER", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "notifications", "NUMBER", "rb", "NUMBER", "in", "instrument", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "instrumentation", "NUMBER", "rb", "NUMBER", "in", "process_action", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "params_wrapper", "NUMBER", "rb", "NUMBER", "in", "process_action", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "rescue", "NUMBER", "rb", "NUMBER", "in", "process_action", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "base", "NUMBER", "rb", "NUMBER", "in", "process", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "abstract_controller", "rendering", "NUMBER", "rb", "NUMBER", "in", "process", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "NUMBER", "rb", "NUMBER", "in", "dispatch", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "rack_delegation", "NUMBER", "rb", "NUMBER", "in", "dispatch", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_controller", "metal", "NUMBER", "rb", "NUMBER", "in", "block", "in", "action", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "dispatch", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "rack", "mount", "NUMBER", "lib", "rack", "mount", "route_set", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "folio", "ruby", "NUMBER", "gems", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "block", "in", "recognize", "folio", "ruby", "NUMBER", "gems", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "optimized_each", "folio", "ruby", "NUMBER", "gems", "rack", "mount", "NUMBER", "lib", "rack", "mount", "code_generation", "NUMBER", "rb", "NUMBER", "in", "recognize", "folio", "ruby", "NUMBER", "gems", "rack", "mount", "NUMBER", "lib", "rack", "mount", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "routing", "route_set", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "best_standards_support", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "rack", "NUMBER", "lib", "rack", "etag", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "rack", "NUMBER", "lib", "rack", "conditionalget", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "head", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "params_parser", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "flash", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "rack", "NUMBER", "lib", "rack", "session", "abstract", "id", "NUMBER", "rb", "NUMBER", "in", "context", "folio", "ruby", "NUMBER", "gems", "rack", "NUMBER", "lib", "rack", "session", "abstract", "id", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "cookies", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "callbacks", "NUMBER", "rb", "NUMBER", "in", "block", "in", "call", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "_run_call_callbacks", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "callbacks", "NUMBER", "rb", "NUMBER", "in", "run_callbacks", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "callbacks", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "reloader", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "rack", "NUMBER", "lib", "rack", "sendfile", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "remote_ip", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "show_exceptions", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "railties", "NUMBER", "rc", "NUMBER", "lib", "rails", "rack", "logger", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "rack", "NUMBER", "lib", "rack", "methodoverride", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "rack", "NUMBER", "lib", "rack", "runtime", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "activesupport", "NUMBER", "rc", "NUMBER", "lib", "active_support", "cache", "strategy", "local_cache", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "rack", "NUMBER", "lib", "rack", "lock", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "actionpack", "NUMBER", "rc", "NUMBER", "lib", "action_dispatch", "middleware", "static", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "railties", "NUMBER", "rc", "NUMBER", "lib", "rails", "rack", "content_length", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "railties", "NUMBER", "rc", "NUMBER", "lib", "rails", "engine", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "railties", "NUMBER", "rc", "NUMBER", "lib", "rails", "rack", "log_tailer", "NUMBER", "rb", "NUMBER", "in", "call", "folio", "ruby", "NUMBER", "gems", "rack", "NUMBER", "lib", "rack", "handler", "webrick", "NUMBER", "rb", "NUMBER", "in", "service", "home", "jan", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "httpserver", "NUMBER", "rb", "NUMBER", "in", "service", "home", "jan", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "httpserver", "NUMBER", "rb", "NUMBER", "in", "run", "home", "jan", "NUMBER", "rvm", "rubies", "ruby", "NUMBER", "p", "NUMBER", "lib", "ruby", "NUMBER", "webrick", "server", "NUMBER", "rb", "NUMBER", "in", "block", "in", "start_thread", "TAG", "folio_portfolio_portfolio_items_path", "do", "form", "did", "it", "You", "can", "override", "model", "name", "by", "defining", "model_name", "class", "method", "NUMBER", "I", "write", "a", "short", "article", "regard", "this", "LINK", "for", "namespaced", "models", "It", "s", "for", "ActiveRecord", "but", "perhaps", "Mongoid", "has", "a", "similar", "interface", "NUMBER", "hi", "Justin", "I", "be", "really", "very", "interested", "in", "having", "the", "style", "of", "your", "form", "NUMBER", "But", "when", "ever", "I", "try", "installing", "it", "in", "my", "university", "I", "get", "this", "error", "message", "NUMBER", "shwfgf", "NUMBER", "plab", "Aks", "sudo", "rake", "gems", "install", "Password", "in", "Users", "Aks", "Ruby", "project", "plab", "gem", "install", "justinfrench", "formtastic", "source", "LINK", "ERROR", "LINK", "do", "not", "appear", "to", "be", "a", "repository", "ERROR", "could", "not", "find", "gem", "justinfrench", "formtastic", "locally", "or", "in", "a", "repository", "Please", "could", "you", "help", "me", "NUMBER", "I", "be", "having", "a", "deadline", "and", "I", "have", "not", "yet", "start", "with", "my", "project", "NUMBER", "Thank", "you", "very", "much", "Use", "formtastic", "gem", "not", "justinfrench", "formtastic", "github", "gems", "was", "deprecate", "or", "disabled", "I", "don", "t", "know", "NUMBER", "On", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "a", "NUMBER", "aks", "write", "hi", "Justin", "I", "be", "really", "very", "interested", "in", "having", "the", "style", "of", "your", "form", "NUMBER", "But", "when", "ever", "I", "try", "installing", "it", "in", "my", "university", "I", "get", "this", "error", "message", "NUMBER", "shwfgf", "NUMBER", "plab", "Aks", "sudo", "rake", "gems", "install", "Password", "in", "Users", "Aks", "Ruby", "project", "plab", "gem", "install", "justinfrench", "formtastic", "source", "LINK", "ERROR", "LINK", "do", "not", "appear", "to", "be", "a", "repository", "ERROR", "could", "not", "find", "gem", "justinfrench", "formtastic", "locally", "or", "in", "a", "repository", "Please", "could", "you", "help", "me", "NUMBER", "I", "be", "having", "a", "deadline", "and", "I", "have", "not", "yet", "start", "with", "my", "project", "NUMBER", "Thank", "you", "very", "much", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "Cheers", "Gabriel", "Sobrinho", "When", "use", "validation_reflection", "and", "client_side_reflections", "gems", "I", "need", "to", "set", "validate", "true", "in", "order", "to", "get", "the", "desired", "validations", "NUMBER", "I", "want", "this", "in", "all", "my", "form", "so", "I", "have", "to", "manually", "add", "it", "to", "each", "NUMBER", "The", "request", "be", "Change", "SemanticFormHelper", "maybe", "an", "mattr_accessor", "to", "allow", "for", "merge", "with", "explicitly", "set", "attributes", "so", "that", "semantic_form_for", "foo", "do", "would", "set", "validate", "true", "in", "the", "form_for", "options", "yet", "semantic_form_for", "foo", "validate", "false", "This", "of", "course", "extend", "to", "any", "other", "random", "attribute", "someone", "wants", "to", "set", "a", "reasonable", "default", "for", "NUMBER", "This", "validate", "option", "came", "from", "where", "client_side_validations", "I", "guess", "this", "be", "a", "default", "option", "that", "should", "be", "present", "on", "client_side_validations", "not", "formtastic", "NUMBER", "Maybe", "something", "like", "ClientSideValidations", "NUMBER", "default_validate", "true", "Closing", "I", "agree", "this", "should", "be", "the", "other", "plugins", "domain", "to", "solve", "and", "also", "there", "s", "be", "no", "further", "input", "from", "the", "OP", "NUMBER", "Minor", "issue", "in", "README", "NUMBER", "textile", "TAG", "should", "be", "change", "to", "TAG", "Remove", "the", "at", "the", "beginning", "NUMBER", "Thanks", "for", "this", "great", "gem", "and", "all", "the", "best", "Tobias", "Yeah", "that", "s", "indeed", "the", "case", "NUMBER", "I", "m", "still", "on", "Rails", "NUMBER", "Sorry", "for", "this", "one", "I", "was", "a", "little", "bit", "confused", "Thanks", "again", "Tobias", "NUMBER", "NUMBER", "NUMBER", "justinfrench", "reply", "reply", "NUMBER", "github", "NUMBER", "com", "Hi", "just", "like", "Rails", "NUMBER", "s", "form_for", "LINK", "method", "i", "form_for", "you", "actually", "need", "that", "now", "NUMBER", "Perhaps", "you", "re", "on", "Rails", "NUMBER", "in", "which", "case", "your", "e", "right", "but", "the", "README", "be", "keep", "up", "to", "date", "with", "the", "rest", "of", "the", "code", "in", "master", "and", "we", "ve", "drop", "Rails", "NUMBER", "support", "for", "the", "forthcoming", "Formtastic", "NUMBER", "There", "s", "a", "NUMBER", "stable", "branch", "which", "would", "have", "the", "older", "README", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Hi", "Getting", "to", "grips", "with", "Rails", "NUMBER", "and", "currently", "trying", "to", "utilise", "the", "formtastic", "stylesheets", "NUMBER", "I", "have", "followed", "the", "instructions", "and", "thus", "have", "an", "application", "NUMBER", "css", "file", "that", "has", "the", "following", "require_self", "require_tree", "NUMBER", "require", "formtastic", "However", "this", "do", "not", "appear", "to", "be", "work", "giving", "the", "following", "error", "Error", "compile", "asset", "application", "NUMBER", "css", "Sprockets", "FileNotFound", "couldn", "t", "find", "file", "formtastic", "I", "be", "assuming", "that", "I", "have", "miss", "a", "step", "somewhere", "perhaps", "doing", "a", "require_tree", "on", "the", "formtastic", "folder", "or", "something", "similar", "Any", "advice", "would", "be", "appreciated", "NUMBER", "Thanks", "Excellent", "question", "turns", "out", "I", "was", "use", "NUMBER", "not", "realising", "NUMBER", "x", "was", "required", "for", "Rails", "NUMBER", "facepalms", "NUMBER", "Everything", "now", "work", "with", "NUMBER", "rc", "NUMBER", "Thanks", "for", "your", "assistance", "Formtastic", "Inputs", "BooleanInput", "docs", "say", "the", "generate", "html", "looks", "like", "this", "TAG", "TAG", "TAG", "TAG", "label", "TAG", "TAG", "However", "since", "ae", "NUMBER", "be", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "a", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "be", "NUMBER", "cf", "NUMBER", "f", "label", "generations", "went", "to", "label_with_nested_checkbox", "which", "do", "the", "other", "way", "around", "label", "text", "first", "then", "checkbox", "input", "NUMBER", "Personally", "I", "liked", "checkbox", "on", "the", "left", "but", "please", "fix", "it", "either", "in", "docs", "or", "in", "implementation", "NUMBER", "Attempting", "to", "solve", "the", "problem", "of", "i", "NUMBER", "n", "key", "clashing", "with", "i", "NUMBER", "n", "subtree", "NUMBER", "Fixes", "NUMBER", "My", "form", "has", "a", "belongs_to", "collection", "dropdown", "NUMBER", "ruby", "class", "Author", "TAG", "TAG", "Author", "NUMBER", "all", "TAG", "I", "expect", "the", "label", "to", "come", "out", "to", "be", "Author", "NUMBER", "My", "config", "en", "locale", "NUMBER", "yml", "looks", "like", "this", "yaml", "en", "formtastic", "author", "name", "Author", "s", "Name", "This", "be", "the", "error", "received", "undefined", "method", "TAG", "Author", "Name", "Hash", "I", "think", "the", "problem", "be", "in", "how", "i", "NUMBER", "n", "do", "the", "lookups", "in", "the", "locale", "file", "and", "what", "keys", "we", "provide", "for", "lookup", "NUMBER", "The", "call", "to", "I", "NUMBER", "n", "NUMBER", "translate", "ends", "up", "be", "I", "NUMBER", "n", "NUMBER", "translate", "post", "NUMBER", "new", "NUMBER", "author", "default", "post", "NUMBER", "author", "author", "scope", "formtastic", "labels", "The", "above", "returns", "name", "Author", "Name", "a", "hash", "which", "be", "NOT", "nil", "and", "unsuitable", "for", "string", "concat", "later", "in", "Formtastic", "NUMBER", "It", "would", "be", "normal", "in", "my", "opinion", "to", "have", "a", "key", "for", "author", "in", "the", "locale", "file", "as", "it", "be", "a", "proper", "model", "NUMBER", "We", "re", "also", "use", "the", "model", "as", "a", "belongs_to", "relationship", "in", "Post", "NUMBER", "Should", "this", "be", "raise", "in", "i", "NUMBER", "n", "I", "m", "use", "version", "NUMBER", "of", "the", "i", "NUMBER", "n", "gem", "NUMBER", "Using", "formtastic", "from", "git", "master", "on", "Rails", "NUMBER", "The", "workaround", "be", "to", "explicitly", "put", "the", "author", "Author", "key", "value", "pair", "under", "post", "in", "the", "locale", "file", "NUMBER", "And", "I", "saw", "the", "same", "problem", "in", "i", "NUMBER", "n", "NUMBER", "as", "well", "so", "the", "problem", "would", "persist", "on", "Rails", "NUMBER", "as", "well", "NUMBER", "I", "think", "i", "made", "a", "mistake", "in", "posting", "the", "fragment", "from", "my", "locale", "file", "NUMBER", "I", "DO", "indeed", "have", "the", "labels", "scope", "throughout", "NUMBER", "I", "need", "to", "override", "attributes", "from", "author", "but", "not", "really", "from", "post", "NUMBER", "When", "I", "did", "NOT", "have", "the", "post", "keys", "i", "get", "an", "error", "as", "specified", "in", "the", "title", "NUMBER", "yaml", "en", "formtastic", "labels", "author", "name", "Author", "Name", "post", "author", "Author", "Forced", "to", "add", "this", "to", "prevent", "i", "NUMBER", "n", "lookup", "falling", "back", "on", "author", "above", "The", "problem", "was", "raise", "within", "formtastic", "in", "labelling", "NUMBER", "rb", "when", "concatenating", "the", "label", "with", "required", "label", "NUMBER", "label", "returns", "a", "hash", "and", "required", "returns", "a", "string", "but", "they", "cant", "be", "joined", "NUMBER", "Method", "label_text", "I", "think", "in", "localized_string", "we", "re", "checking", "for", "return", "value", "be", "blank", "but", "I", "think", "we", "should", "consider", "it", "not", "fetched", "if", "we", "get", "anything", "but", "a", "non", "blank", "string", "from", "i", "NUMBER", "n", "NUMBER", "I", "spoke", "to", "svenfuchs", "about", "i", "NUMBER", "n", "returning", "hashes", "and", "he", "schooled", "me", "that", "it", "was", "indeed", "a", "functionality", "of", "the", "i", "NUMBER", "n", "gem", "to", "return", "subtrees", "if", "so", "fetched", "NUMBER", "This", "helps", "in", "saving", "N", "NUMBER", "queries", "when", "you", "do", "indeed", "need", "to", "get", "all", "keys", "values", "from", "the", "locale", "file", "NUMBER", "So", "i", "NUMBER", "n", "be", "behaving", "itself", "as", "specified", "NUMBER", "Somewhat", "similar", "problem", "seems", "to", "have", "be", "raise", "here", "NUMBER", "LINK", "but", "the", "solution", "in", "my", "mind", "could", "have", "be", "better", "NUMBER", "Using", "real", "objects", "instead", "of", "symbols", "in", "semantic_fields_for", "as", "advertised", "here", "LINK", "do", "not", "work", "for", "me", "for", "has_many", "associations", "NUMBER", "Only", "the", "inputs", "for", "the", "first", "associated", "record", "be", "display", "not", "all", "it", "seems", "not", "to", "loop", "NUMBER", "Using", "rails", "NUMBER", "rc", "and", "formtastic", "NUMBER", "I", "ve", "test", "on", "rails", "NUMBER", "rc", "NUMBER", "with", "formtastic", "from", "master", "branch", "NUMBER", "I", "didn", "t", "write", "a", "test", "case", "but", "in", "a", "application", "I", "have", "the", "following", "scenario", "ruby", "class", "Person", "TAG", "TAG", "TAG", "person", "NUMBER", "identities", "do", "i", "TAG", "TAG", "TAG", "TAG", "Using", "object", "only", "the", "first", "object", "be", "display", "NUMBER", "But", "same", "happens", "with", "rails", "helpers", "erb", "TAG", "TAG", "TAG", "TAG", "TAG", "So", "I", "guess", "the", "commit", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "de", "should", "be", "reversed", "I", "don", "t", "remember", "usage", "of", "symbols", "on", "nested", "was", "deprecate", "by", "rails", "Why", "the", "usage", "of", "real", "objects", "instead", "of", "symbols", "Sorry", "if", "I", "didn", "t", "fully", "understand", "but", "be", "this", "a", "rails", "bug", "file", "burg", "pull", "there", "or", "an", "issue", "of", "formtastic", "now", "I", "delete", "perplexing", "comment", "especially", "that", "rails", "NUMBER", "support", "was", "drop", "in", "NUMBER", "version", "NUMBER", "And", "I", "think", "that", "most", "of", "formastic", "users", "use", "to", "requiring", "field", "depends", "on", "validation", "in", "models", "so", "I", "change", "to", "false", "NUMBER", "Hope", "that", "you", "ll", "agree", "with", "me", "NUMBER", "I", "agree", "that", "change", "the", "default", "maybe", "surprising", "NUMBER", "But", "my", "NUMBER", "cents", "be", "that", "requiring", "all", "field", "by", "default", "should", "be", "a", "form", "level", "setting", "NUMBER", "Some", "form", "require", "all", "field", "to", "be", "filled", "while", "others", "dont", "NUMBER", "It", "was", "a", "little", "bit", "confusing", "to", "me", "after", "rails", "NUMBER", "and", "formtastic", "master", "migration", "that", "all", "of", "my", "form", "marked", "as", "required", "not", "sure", "where", "this", "change", "was", "introduce", "so", "maybe", "I", "misunderstood", "something", "but", "I", "thought", "that", "all_fields_required_by_default", "fix", "false", "was", "a", "default", "in", "rails", "NUMBER", "and", "formtastic", "NUMBER", "Second", "thing", "be", "that", "how", "often", "you", "all", "your", "field", "in", "form", "to", "be", "required", "I", "think", "if", "most", "of", "people", "use", "false", "it", "should", "be", "set", "by", "default", "NUMBER", "Please", "correct", "me", "if", "I", "m", "wrong", "NUMBER", "I", "ll", "try", "to", "investigate", "this", "further", "ASAP", "NUMBER", "Forcing", "Boolean", "field", "to", "be", "selected", "do", "not", "seem", "polite", "or", "sane", "even", "if", "all", "field", "required", "by", "default", "attribute", "be", "switched", "on", "NUMBER", "Ignore", "the", "longish", "history", "NUMBER", "The", "actual", "diff", "be", "fairly", "small", "NUMBER", "Sent", "pull", "NUMBER", "Closing", "this", "NUMBER", "I", "have", "a", "form", "for", "a", "model", "which", "has", "a", "belongs_to", "association", "with", "another", "model", "and", "I", "validate", "for", "presence", "on", "the", "association_id", "attribute_id", "NUMBER", "i", "m", "use", "Formtastic", "from", "the", "master", "branch", "NUMBER", "ruby", "class", "Post", "TAG", "true", "end", "According", "to", "the", "readme", "I", "input", "on", "the", "association", "name", "author", "in", "the", "form", "NUMBER", "ruby", "TAG", "TAG", "Author", "NUMBER", "all", "TAG", "I", "expect", "this", "field", "to", "be", "marked", "required", "NUMBER", "But", "that", "s", "not", "what", "i", "m", "seeing", "NUMBER", "Reading", "the", "code", "it", "seems", "we", "re", "looking", "for", "validations_on", "author", "which", "i", "obviously", "dont", "NUMBER", "I", "have", "it", "on", "author_id", "which", "be", "how", "we", "usually", "do", "this", "type", "of", "validation", "NUMBER", "Help", "me", "find", "out", "where", "i", "m", "going", "wrong", "NUMBER", "Will", "patch", "after", "sleep", "NUMBER", "Actually", "no", "NUMBER", "I", "m", "going", "to", "take", "the", "opportunity", "to", "smarten", "up", "and", "fix", "my", "models", "to", "check", "on", "associations", "themselves", "and", "not", "rely", "on", "presence", "of", "ids", "NUMBER", "I", "cant", "recall", "why", "I", "assumed", "that", "validation", "should", "be", "do", "on", "_id", "field", "NUMBER", "But", "this", "leads", "to", "another", "question", "and", "possible", "another", "bug", "NUMBER", "NUMBER", "I", "thought", "the", "comment", "said", "that", "in", "Rails", "NUMBER", "all_fields_required_by_default", "config", "attribute", "would", "never", "be", "applicable", "NUMBER", "It", "do", "kick", "in", "in", "Rails", "NUMBER", "Have", "I", "misread", "it", "NUMBER", "Since", "the", "above", "kicks", "in", "in", "Rails", "NUMBER", "required", "required", "HTML", "attribute", "gets", "applied", "to", "boolean", "field", "also", "NUMBER", "This", "effectively", "forces", "the", "user", "to", "select", "true", "on", "a", "checkbox", "NUMBER", "I", "don", "t", "think", "all_fields_required_by_default", "should", "be", "applicable", "on", "boolean", "field", "unless", "explicitly", "specified", "NUMBER", "What", "do", "you", "think", "justinfrench", "ruby", "error", "NUMBER", "add", "base", "An", "error", "message", "in", "the", "model", "and", "ruby", "form", "NUMBER", "semantic_errors", "base", "in", "the", "view", "yields", "html", "TAG", "TAG", "Base", "An", "error", "message", "TAG", "TAG", "An", "error", "message", "TAG", "TAG", "hi", "when", "i", "tried", "to", "create", "a", "nested", "select", "this", "show", "me", "a", "input", "here", "s", "the", "code", "semantic_form_for", "usuario", "do", "form", "form", "NUMBER", "inputs", "do", "form", "NUMBER", "input", "nombres", "form", "NUMBER", "input", "apellidos", "form", "NUMBER", "input", "edad", "form", "NUMBER", "input", "fecha_nacimiento", "as", "date", "start_year", "NUMBER", "form", "NUMBER", "input", "biografia", "form", "NUMBER", "semantic_fields_for", "region", "do", "region", "region", "NUMBER", "inputs", "id", "collection", "regiones", "as", "select", "end", "form", "NUMBER", "buttons", "commit", "end", "end", "thx", "Please", "support", "also", "localized_country_select", "so", "a", "full", "I", "NUMBER", "n", "support", "be", "available", "NUMBER", "Also", "this", "module", "be", "quite", "more", "up", "to", "date", "an", "fetches", "the", "offcial", "ISO", "Codes", "NUMBER", "LINK", "_country_select", "Thank", "You", "localized_country_select", "didn", "t", "receive", "an", "update", "since", "August", "NUMBER", "NUMBER", "Still", "work", "I", "never", "use", "a", "country", "input", "on", "my", "applications", "NUMBER", "Which", "be", "the", "most", "use", "these", "days", "They", "respond", "to", "country_select", "I", "m", "closing", "this", "issue", "it", "s", "be", "dormant", "for", "NUMBER", "months", "now", "the", "reference", "to", "a", "maintained", "version", "of", "country_select", "has", "be", "update", "a", "few", "days", "ago", "NUMBER", "If", "there", "s", "the", "need", "for", "a", "country_select", "plugins", "that", "translated", "the", "country", "names", "there", "be", "maintained", "gems", "like", "carmen", "LINK", "that", "be", "compatible", "to", "the", "original", "country_select", "implementation", "and", "can", "be", "use", "with", "formtastic", "NUMBER", "LINK", "_country_select", "Hi", "NUMBER", "I", "ve", "read", "many", "articles", "around", "semantic", "form", "NUMBER", "I", "ve", "always", "be", "annoyed", "by", "use", "fieldset", "as", "radio", "or", "checkboxes", "wrapper", "NUMBER", "eg", "TAG", "TAG", "Categories", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "I", "find", "one", "solution", "wich", "fit", "better", "for", "my", "tastes", "and", "be", "to", "use", "dl", "instead", "of", "fieldset", "dt", "instead", "of", "legend", "and", "dd", "TAG", "TAG", "Categories", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "I", "didn", "t", "find", "a", "proper", "way", "to", "change", "this", "behavior", "without", "rewriting", "check_boxes", "NUMBER", "rb", "radio", "NUMBER", "rb", "Thanks", "for", "advance", "NUMBER", "After", "upgrading", "to", "Rails", "NUMBER", "rc", "NUMBER", "all", "my", "usage", "of", "semantic_fields_for", "raises", "the", "following", "error", "when", "trying", "to", "call", "input", "on", "the", "block", "argument", "undefined", "method", "input", "for", "TAG", "Example", "TAG", "TAG", "TAG", "I", "m", "on", "NUMBER", "Yes", "everything", "worked", "before", "and", "the", "only", "change", "was", "upgrading", "to", "the", "rails", "release", "candidate", "NUMBER", "Thanks", "for", "the", "hack", "NUMBER", "Looks", "like", "it", "s", "work", "NUMBER", "Though", "I", "m", "still", "calling", "semantic_fields_for", "and", "not", "f", "NUMBER", "fields_for", "NUMBER", "Actually", "run", "f", "NUMBER", "semantic_fields_for", "given", "you", "have", "a", "previous", "semantic_form_for", "you", "want", "to", "build", "on", "works", "without", "the", "hack", "as", "well", "NUMBER", "I", "can", "confirm", "this", "NUMBER", "It", "seems", "the", "header", "of", "fields_for", "be", "change", "be", "Rails", "NUMBER", "rc", "Ruby", "on", "Rails", "latest", "stable", "v", "NUMBER", "fields_for", "record_or_name_or_array", "args", "block", "Ruby", "on", "Rails", "v", "NUMBER", "rc", "fields_for", "record_name", "record_object", "nil", "options", "block", "Supplying", "name", "to", "semantic_fields_for", "works", "fine", "at", "first", "glance", "but", "I", "don", "t", "know", "any", "background", "why", "the", "new", "parameter", "be", "there", "and", "what", "it", "should", "really", "be", "TAG", "TAG", "TAG", "I", "will", "try", "something", "here", "specs", "still", "fail", "on", "NUMBER", "have", "you", "some", "news", "from", "josevalim", "justinfrench", "specs", "fail", "when", "I", "change", "the", "code", "to", "use", "the", "new", "method", "signature", "for", "fields_for", "NUMBER", "I", "didn", "t", "push", "because", "of", "that", "NUMBER", "justinfrench", "I", "did", "it", "ruby", "if", "Rails", "VERSION", "STRING", "NUMBER", "def", "semantic_fields_for", "NUMBER", "end", "else", "def", "semantic_fields_for", "NUMBER", "end", "end", "But", "I", "don", "t", "know", "what", "will", "happen", "with", "rdoc", "in", "this", "case", "NUMBER", "This", "will", "create", "a", "small", "duplication", "on", "methods", "too", "but", "if", "we", "don", "t", "want", "it", "we", "can", "try", "something", "like", "that", "ugly", "ruby", "documentation", "method", "with", "rails", "NUMBER", "signature", "def", "semantic_fields_for", "NUMBER", "default", "implementation", "end", "if", "Rails", "VERSION", "STRING", "TAG", "Formtastic", "FormBuilder", "as", "noted", "above", "NUMBER", "The", "patch", "be", "still", "in", "progress", "just", "fix", "a", "fail", "build", "from", "recent", "merge", "first", "Setting", "ActionView", "Base", "NUMBER", "default_form_builder", "Formtastic", "FormBuilder", "be", "another", "option", "to", "fix", "it", "globally", "without", "actually", "change", "your", "code", "NUMBER", "Thanks", "justin", "Had", "a", "look", "into", "how", "the", "simple_form", "guys", "solve", "it", "and", "it", "looks", "like", "they", "ve", "get", "it", "sorted", "out", "NUMBER", "just", "trying", "to", "get", "some", "coverage", "for", "it", "NUMBER", "Way", "less", "complicated", "than", "the", "road", "we", "were", "headed", "down", "dbackeus", "tobsch", "sobrinho", "tom", "kuca", "I", "ve", "just", "push", "a", "bunch", "of", "commit", "relate", "to", "this", "NUMBER", "If", "you", "could", "bundle", "from", "master", "test", "your", "apps", "without", "the", "work", "arounds", "and", "then", "get", "back", "to", "me", "with", "the", "results", "that", "d", "be", "great", "NUMBER", "Specs", "pass", "under", "NUMBER", "rc", "NUMBER", "and", "NUMBER", "so", "if", "you", "re", "still", "having", "issue", "with", "this", "a", "fail", "spec", "patch", "or", "at", "least", "a", "detailed", "example", "to", "reproduce", "would", "help", "me", "reproduce", "and", "fix", "this", "NUMBER", "Hi", "guys", "I", "ve", "push", "a", "commit", "that", "fix", "an", "issue", "with", "this", "code", "on", "SimpleForm", "NUMBER", "See", "more", "LINK", "_form", "commit", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "af", "NUMBER", "ac", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "It", "s", "still", "broken", "with", "Rails", "NUMBER", "rc", "NUMBER", "but", "fine", "with", "master", "rafaelfranca", "thanks", "heaps", "for", "both", "the", "initial", "fix", "and", "this", "one", "This", "be", "a", "come", "back", "of", "the", "following", "issue", "which", "has", "be", "fix", "in", "the", "past", "but", "showed", "up", "again", "this", "commit", "broke", "it", "again", "LINK", "NUMBER", "LINK", "Basically", "the", "model", "has", "the", "value", "setup", "to", "NUMBER", "to", "a", "particular", "item", "but", "the", "checkbox", "comes", "up", "with", "a", "value", "of", "NUMBER", "and", "checked", "NUMBER", "When", "use", "as", "boolean", "I", "get", "TAG", "When", "use", "as", "string", "I", "get", "TAG", "Hello", "Justin", "I", "m", "run", "the", "default", "branch", "on", "Rails", "NUMBER", "and", "Ruby", "NUMBER", "I", "guess", "that", "be", "the", "one", "that", "be", "received", "when", "doing", "gem", "install", "formtastic", "right", "Maybe", "I", "should", "ve", "tried", "the", "stable", "branch", "instead", "NUMBER", "I", "ve", "resorted", "to", "the", "build", "in", "rails", "check_box", "helper", "for", "that", "specific", "form", "to", "get", "across", "the", "problem", "NUMBER", "If", "I", "can", "provide", "you", "with", "any", "more", "details", "that", "would", "help", "you", "do", "let", "me", "know", "and", "I", "ll", "get", "it", "to", "you", "NUMBER", "Since", "I", "find", "a", "work", "around", "use", "check_box", "I", "consider", "this", "issue", "close", "NUMBER", "OK", "I", "ll", "provide", "you", "with", "the", "data", "you", "need", "tomorrow", "to", "help", "you", "debug", "this", "currently", "on", "the", "road", "NUMBER", "I", "ll", "also", "do", "another", "test", "with", "a", "secondary", "model", "to", "see", "if", "only", "a", "specific", "setup", "makes", "this", "bug", "show", "up", "NUMBER", "Thank", "you", "very", "much", "NUMBER", "Hi", "Justin", "I", "ve", "just", "install", "NUMBER", "beta", "NUMBER", "and", "I", "can", "confirm", "that", "indeed", "it", "fix", "this", "issue", "Rails", "NUMBER", "Ruby", "NUMBER", "NUMBER", "Have", "a", "great", "day", "Are", "you", "be", "referring", "to", "the", "change", "from", "the", "epic", "Gemfile", "commit", "LINK", "I", "m", "pretty", "sure", "that", "compatibility", "wise", "you", "don", "t", "have", "to", "do", "anything", "NUMBER", "I", "ll", "admit", "it", "was", "a", "bit", "hard", "to", "read", "through", "the", "barrage", "of", "comments", "on", "that", "commit", "but", "from", "what", "I", "could", "gleen", "from", "the", "level", "headed", "posts", "the", "only", "thing", "that", "change", "be", "additional", "lookups", "in", "the", "app", "assets", "folder", "to", "pick", "up", "scripts", "and", "stylesheets", "from", "there", "NUMBER", "If", "this", "be", "less", "about", "compatibility", "and", "more", "about", "leveraging", "the", "newly", "standardized", "and", "default", "frameworks", "of", "coffescript", "and", "sass", "flameproof", "suit", "ON", "then", "NUMBER", "Would", "be", "nice", "to", "utilize", "sass", "s", "dynamic", "parts", "to", "rework", "how", "the", "current", "formtastic", "NUMBER", "css", "formtastic_changes", "NUMBER", "css", "works", "though", "not", "sure", "how", "the", "implimentation", "would", "look", "though", "NUMBER", "It", "was", "and", "continues", "to", "be", "an", "elegant", "solution", "but", "surely", "serving", "a", "single", "stylesheet", "for", "an", "application", "would", "be", "better", "than", "even", "an", "elegant", "serving", "of", "multiple", "style", "sheets", "that", "override", "each", "other", "NUMBER", "Hello", "I", "have", "add", "a", "Japanese", "locale", "to", "Formtastic", "NUMBER", "Your", "i", "NUMBER", "n", "test", "seem", "to", "account", "for", "non", "english", "locales", "NUMBER", "I", "hope", "you", "find", "this", "useful", "Yours", "Trevor", "I", "think", "your", "argument", "makes", "sense", "but", "be", "there", "some", "place", "out", "there", "I", "could", "post", "my", "translations", "that", "be", "persistant", "so", "the", "formtastic", "community", "can", "use", "them", "It", "seems", "that", "it", "might", "be", "a", "handy", "thing", "to", "have", "NUMBER", "Good", "plan", "NUMBER", "I", "add", "to", "the", "wiki", "at", "LINK", "and", "add", "a", "link", "on", "the", "main", "wiki", "page", "to", "the", "Translations", "page", "NUMBER", "Allow", "a", "radio", "field", "to", "have", "specific", "options", "set", "on", "each", "button", "through", "the", "collection", "similar", "to", "options_for_select", "Sure", "thing", "NUMBER", "This", "be", "my", "first", "bit", "of", "code", "on", "this", "project", "so", "was", "trying", "to", "minimize", "the", "footprint", "but", "I", "like", "your", "suggestions", "NUMBER", "Awesome", "sorry", "to", "drop", "this", "NUMBER", "My", "MBP", "crashed", "on", "my", "over", "the", "weekend", "NUMBER", "HTML", "NUMBER", "autofocus", "support", "with", "JavaScript", "fallback", "jQuery", "for", "non", "HTML", "NUMBER", "compliant", "browsers", "NUMBER", "I", "think", "this", "be", "an", "interesting", "patch", "for", "a", "number", "of", "reasons", "NUMBER", "Prototype", "while", "not", "to", "my", "taste", "be", "the", "default", "for", "Rails", "NUMBER", "Not", "jQuery", "NUMBER", "Autofocus", "be", "a", "strange", "feature", "to", "support", "over", "other", "new", "form", "features", "NUMBER", "Modernizr", "can", "do", "feature", "detection", "in", "a", "holistic", "sense", "NUMBER", "As", "Justin", "point", "out", "you", "re", "inheriting", "this", "script", "which", "be", "a", "decision", "to", "not", "be", "taken", "lightly", "NUMBER", "Personally", "I", "think", "that", "the", "type", "of", "scripting", "that", "be", "be", "use", "here", "be", "project", "based", "and", "should", "be", "left", "out", "but", "I", "m", "sure", "there", "be", "some", "interesting", "perspectives", "to", "weigh", "up", "here", "NUMBER", "benschwarz", "I", "know", "this", "be", "only", "one", "of", "your", "points", "but", "jQuery", "will", "soon", "be", "the", "Rails", "default", "LINK", "NUMBER", "NUMBER", "adopts", "coffeescript", "jquery", "sass", "and", "controversy", "NUMBER", "html", "drewda", "I", "know", "which", "will", "make", "support", "rails", "NUMBER", "X", "a", "pain", "in", "the", "ass", "for", "formtastic", "and", "a", "point", "of", "contention", "NUMBER", "On", "Wednesday", "NUMBER", "May", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "drewda", "write", "benschwarz", "I", "know", "this", "be", "only", "one", "of", "your", "points", "but", "jQuery", "will", "soon", "be", "the", "Rails", "default", "LINK", "NUMBER", "NUMBER", "adopts", "coffeescript", "jquery", "sass", "and", "controversy", "NUMBER", "html", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "benschwarz", "Yeah", "I", "ve", "seen", "how", "the", "question", "of", "JS", "libraries", "has", "become", "quite", "an", "issue", "on", "other", "projects", "NUMBER", "I", "m", "no", "whiz", "at", "architecting", "libraries", "but", "could", "a", "solution", "be", "to", "have", "a", "formtastic", "jquery", "addons", "gem", "that", "would", "break", "out", "these", "sort", "of", "fancy", "interactive", "dressings", "Or", "would", "you", "worry", "that", "that", "would", "lead", "to", "the", "prototype", "version", "the", "jquery", "version", "and", "so", "on", "with", "everything", "be", "half", "baked", "On", "Wed", "May", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "benschwarz", "TAG", "write", "drewda", "I", "know", "which", "will", "make", "support", "rails", "NUMBER", "X", "a", "pain", "in", "the", "ass", "for", "formtastic", "and", "a", "point", "of", "contention", "NUMBER", "On", "Wednesday", "NUMBER", "May", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "drewda", "write", "benschwarz", "I", "know", "this", "be", "only", "one", "of", "your", "points", "but", "jQuery", "will", "soon", "be", "the", "Rails", "default", "LINK", "NUMBER", "NUMBER", "adopts", "coffeescript", "jquery", "sass", "and", "controversy", "NUMBER", "html", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "FWIW", "I", "ve", "recently", "be", "designing", "something", "like", "this", "for", "simple_form", "NUMBER", "I", "m", "use", "Modernizr", "and", "yepnope", "to", "decide", "when", "some", "js", "be", "needed", "and", "then", "delegating", "over", "to", "H", "NUMBER", "F", "LINK", "to", "provide", "the", "polyfill", "support", "NUMBER", "I", "m", "not", "confortable", "with", "support", "autofocus", "in", "formtastic", "NUMBER", "js", "I", "guess", "we", "should", "support", "another", "features", "like", "date", "picker", "autocomplete", "etc", "and", "not", "miss", "features", "on", "browsers", "like", "IE", "but", "it", "s", "not", "a", "no", "NUMBER", "Remove", "the", "javascript", "piece", "and", "this", "will", "be", "a", "good", "patch", "drewda", "Thanks", "for", "sharing", "the", "link", "jackdempsey", "Modernizr", "be", "indeed", "a", "good", "library", "for", "future", "detection", "and", "at", "first", "sight", "H", "NUMBER", "F", "looks", "neat", "too", "NUMBER", "justinfrench", "I", "totally", "agree", "on", "your", "three", "remarks", "concerning", "the", "use", "of", "jQuery", "and", "provide", "fallbacks", "NUMBER", "I", "also", "prefer", "to", "not", "have", "other", "dependencies", "because", "it", "may", "lead", "to", "too", "many", "problem", "in", "the", "future", "NUMBER", "I", "call", "it", "dependency", "hell", "NUMBER", "push", "the", "wrong", "button", "NUMBER", "The", "nested", "field", "be", "not", "covered", "by", "css", "e", "NUMBER", "g", "NUMBER", "normal", "input", "boxes", "have", "NUMBER", "width", "set", "whereas", "the", "nested", "ones", "do", "not", "have", "that", "style", "applied", "NUMBER", "TAG", "elements", "be", "not", "enclosed", "by", "a", "TAG", "element", "so", "we", "need", "to", "apply", "list", "style", "none", "on", "them", "directly", "NUMBER", "Sure", "NUMBER", "Here", "be", "the", "HTML", "LINK", "and", "this", "be", "the", "haml", "code", "semantic_form_for", "paypal", "url", "checkout", "review", "do", "f", "f", "NUMBER", "input", "name", "input_html", "value", "xxxx", "f", "NUMBER", "input", "amount", "input_html", "value", "xxx", "f", "NUMBER", "input", "buyer", "input_html", "value", "xxx", "f", "NUMBER", "input", "shop_owner", "input_html", "value", "xxx", "f", "NUMBER", "input", "website_owner", "input_html", "value", "xxxx", "hint", "gets", "NUMBER", "f", "NUMBER", "commit_button", "checkout", "oh", "i", "see", "NUMBER", "If", "I", "wrap", "them", "in", "f", "NUMBER", "inputs", "then", "this", "takes", "care", "of", "itself", "NUMBER", "I", "didn", "t", "realize", "that", "line", "was", "a", "requirement", "NUMBER", "I", "usually", "just", "skip", "it", "and", "go", "directly", "to", "the", "individual", "inputs", "NUMBER", "Hey", "Justin", "I", "spent", "all", "night", "trying", "to", "figure", "this", "out", "and", "I", "finally", "get", "it", "NUMBER", "I", "have", "a", "form", "in", "which", "I", "display", "check_boxes", "for", "a", "has_many_through", "relationship", "NUMBER", "I", "have", "custom", "validation", "on", "that", "field", "that", "requires", "the", "user", "to", "select", "at", "least", "one", "of", "the", "possible", "values", "i", "NUMBER", "e", "NUMBER", "the", "parent", "model", "can", "t", "have", "zero", "associations", "on", "its", "relate", "model", "NUMBER", "My", "validation", "appears", "as", "follows", "has_many", "ailments", "has_many", "diagnoses", "through", "ailments", "attr_accessible", "diagnoses_ids", "validates", "diagnoses_ids", "relationship", "minimum", "NUMBER", "The", "relationship", "minimum", "NUMBER", "be", "a", "custom", "validation", "that", "I", "created", "which", "you", "can", "see", "here", "at", "StackOverflow", "LINK", "validating", "at", "least", "one", "habtm", "relationship", "Anyway", "the", "validation", "was", "work", "correctly", "in", "that", "the", "diagnoses_ids", "was", "having", "an", "error", "add", "to", "it", "as", "expected", "NUMBER", "However", "formtastic", "was", "not", "display", "the", "error", "despite", "the", "form", "properly", "containing", "a", "set", "of", "diagnoses_ids", "check_boxes", "NUMBER", "The", "reason", "be", "that", "formtastic", "was", "only", "attempting", "to", "display", "error", "generate", "via", "validations", "on", "belongs_to", "associations", "and", "not", "has_many", "associations", "NUMBER", "This", "fix", "that", "NUMBER", "Hope", "you", "ll", "accept", "it", "into", "the", "codebase", "I", "m", "new", "to", "spec", "coverage", "but", "I", "ll", "absolutely", "look", "into", "figuring", "it", "out", "tonight", "I", "d", "like", "to", "see", "this", "change", "implement", "into", "the", "core", "plugin", "code", "for", "sure", "NUMBER", "I", "ll", "submit", "another", "pull", "request", "once", "I", "do", "NUMBER", "I", "m", "sure", "I", "ll", "be", "able", "to", "learn", "pretty", "quickly", "from", "the", "other", "examples", "in", "this", "plugin", "NUMBER", "Thanks", "for", "get", "back", "to", "me", "I", "spent", "a", "couple", "hours", "trying", "to", "figure", "it", "out", "but", "I", "get", "sidetracked", "by", "work", "and", "other", "projects", "unfortunately", "NUMBER", "I", "still", "intend", "on", "get", "this", "together", "though", "I", "just", "have", "had", "a", "lack", "of", "time", "NUMBER", "Opening", "new", "pull", "request", "with", "spec", "definition", "I", "have", "a", "date", "field", "on", "my", "model", "which", "I", "m", "rendering", "via", "semantic_form_for", "s", "input", "method", "NUMBER", "In", "Chrome", "a", "single", "vertical", "scrollbar", "appears", "besides", "the", "date", "input", "NUMBER", "This", "be", "happening", "from", "the", "declaration", "of", "form", "NUMBER", "formtastic", "fieldset", "in", "which", "overflow", "auto", "be", "set", "NUMBER", "If", "I", "change", "this", "value", "to", "overflow", "hidden", "the", "scrollbar", "disappears", "and", "everything", "appears", "to", "render", "properly", "NUMBER", "In", "Firefox", "NUMBER", "distinct", "horizontal", "scrollbars", "appear", "below", "each", "of", "the", "NUMBER", "select", "boxes", "year", "month", "day", "NUMBER", "This", "be", "happening", "from", "the", "declaration", "of", "form", "NUMBER", "formtastic", "fieldset", "ol", "li", "in", "which", "overflow", "auto", "be", "set", "NUMBER", "Similar", "to", "the", "Chrome", "issue", "if", "I", "change", "this", "value", "to", "overflow", "hidden", "the", "scrollbars", "disappear", "and", "everything", "appears", "to", "render", "properly", "NUMBER", "Chrome", "version", "NUMBER", "Firefox", "version", "NUMBER", "Hey", "There", "I", "m", "use", "formstatic", "I", "d", "like", "to", "know", "if", "be", "possible", "use", "another", "method", "instead", "of", "to_s", "in", "select", "input", "NUMBER", "tks", "works", "sobrinho", "suggested", "to", "use", "or", "switch", "to", "bundler", "but", "I", "m", "submit", "a", "minimal", "patch", "for", "now", "Switch", "NUMBER", "Submit", "the", "patch", "and", "I", "will", "accept", "NUMBER", "On", "Fri", "May", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "ueno", "TAG", "write", "sobrinho", "suggested", "to", "use", "or", "switch", "to", "bundler", "but", "I", "m", "submit", "a", "minimal", "patch", "for", "now", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "Cheers", "Gabriel", "Sobrinho", "I", "run", "perftools", "NUMBER", "rb", "against", "rake", "spec", "and", "it", "looks", "like", "a", "lot", "of", "time", "be", "be", "spent", "in", "garbage", "collection", "NUMBER", "I", "switched", "from", "MRI", "NUMBER", "p", "NUMBER", "to", "ree", "NUMBER", "and", "that", "cut", "spec", "runs", "in", "half", "LINK", "I", "m", "still", "learning", "to", "read", "the", "output", "of", "perftools", "but", "here", "s", "two", "graphs", "one", "from", "MRI", "LINK", "_mri_perf", "NUMBER", "pdf", "and", "one", "from", "REE", "LINK", "_ree_perf", "NUMBER", "pdf", "NUMBER", "Apart", "from", "garbage", "collection", "it", "looks", "like", "a", "substantial", "amount", "of", "time", "be", "be", "spent", "in", "stubbing", "methods", "plus", "some", "time", "in", "Object", "localized_string", "NUMBER", "I", "will", "take", "a", "look", "into", "spec", "tonight", "to", "find", "what", "be", "happenning", "NUMBER", "Maybe", "creating", "models", "with", "database", "instead", "of", "mocking", "will", "be", "more", "faster", "NUMBER", "Finished", "in", "NUMBER", "seconds", "NUMBER", "examples", "NUMBER", "failures", "Coverage", "NUMBER", "threshold", "NUMBER", "Hello", "everyone", "I", "m", "kinda", "new", "in", "rails", "development", "that", "s", "why", "I", "m", "having", "some", "problem", "NUMBER", "Well", "let", "s", "get", "to", "the", "point", "NUMBER", "I", "have", "NUMBER", "models", "admin_albums", "has_many", "admin_album_images", "t", "NUMBER", "ring", "title", "admin_album_images", "belongs_to", "admin_album", "t", "NUMBER", "references", "album", "t", "NUMBER", "boolean", "is_cover", "I", "ve", "made", "a", "builder", "to", "assemble", "NUMBER", "images", "for", "each", "album", "and", "when", "creating", "an", "album", "I", "have", "NUMBER", "file", "field", "paperclip", "These", "field", "be", "declared", "in", "the", "albums_controller", "like", "this", "TAG", "def", "new", "admin_album", "Admin", "Album", "NUMBER", "new", "NUMBER", "times", "admin_album", "NUMBER", "album_images", "NUMBER", "build", "respond_to", "do", "format", "format", "NUMBER", "html", "new", "NUMBER", "html", "NUMBER", "erb", "format", "NUMBER", "xml", "render", "xml", "admin_album", "end", "end", "TAG", "in", "the", "semantic", "form", "when", "you", "create", "a", "new", "album", "you", "also", "select", "the", "images", "TAG", "TAG", "TAG", "TAG", "What", "I", "m", "trying", "to", "do", "Include", "a", "radio", "button", "ask", "Cover", "for", "each", "file", "field", "where", "only", "one", "may", "be", "selected", "and", "this", "one", "will", "be", "true", "the", "unselected", "false", "NUMBER", "or", "NUMBER", "I", "ve", "tried", "a", "lot", "of", "things", "but", "couldn", "t", "find", "a", "way", "to", "select", "only", "ONE", "radio", "button", "AND", "save", "the", "data", "NUMBER", "Am", "I", "walking", "the", "wrong", "path", "I", "m", "thinking", "in", "creating", "another", "model", "call", "admin_cover", "belongs_to", "admin_album", "e", "declarar", "que", "admin_album", "has_one", "cover", "Any", "better", "ideas", "specify", "the", "label", "option", "on", "field", "declared", "as", "date", "be", "ignored", "on", "the", "current", "master", "branch", "Submitted", "pull", "request", "that", "fix", "this", "Hi", "I", "m", "trying", "to", "use", "the", "validates_presence_of", "operator", "to", "mark", "field", "within", "my", "form", "as", "required", "NUMBER", "But", "whenever", "I", "try", "to", "use", "them", "on", "models", "with", "relations", "belongs_to", "in", "this", "case", "I", "run", "into", "the", "following", "issue", "The", "model", "class", "Modificator", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "The", "field", "be", "not", "marked", "as", "required", "in", "the", "browser", "NUMBER", "If", "I", "change", "the", "code", "in", "the", "model", "to", "validates_presence_of", "scale", "the", "field", "in", "the", "browser", "be", "marked", "as", "required", "but", "my", "unit", "test", "break", "NUMBER", "The", "test", "def", "test_should_be_valid", "attributes", "attributes", "name", "must_be_set", "attributes", "scale_id", "NUMBER", "assert", "Modificator", "NUMBER", "new", "attributes", "NUMBER", "valid", "end", "The", "error", "NUMBER", "Failure", "test_should_be_valid", "ModificatorTest", "test", "unit", "modificator_test", "NUMBER", "rb", "NUMBER", "TAG", "be", "not", "true", "NUMBER", "Is", "it", "possible", "to", "mark", "field", "required", "the", "way", "I", "intend", "BTW", "Great", "piece", "of", "code", "NUMBER", "It", "be", "awesome", "NUMBER", "Regards", "Jens", "I", "m", "use", "version", "NUMBER", "BTW", "How", "do", "I", "upgrade", "the", "gem", "to", "test", "with", "master", "I", "adjusted", "the", "test", "exactly", "as", "you", "write", "but", "I", "still", "get", "the", "same", "error", "NUMBER", "An", "inspection", "showed", "that", "the", "attributes", "hash", "hold", "the", "right", "parameters", "NUMBER", "Any", "ideas", "Ah", "I", "forgot", "to", "change", "attr_accessible", "scale_id", "to", "scale", "NUMBER", "Now", "it", "works", "NUMBER", "Thanks", "for", "your", "help", "NUMBER", "Sorry", "if", "this", "be", "intentional", "the", "current", "gem", "seems", "not", "to", "contain", "file", "under", "spec", "gem", "unpack", "formtastic", "NUMBER", "gem", "du", "a", "formtastic", "NUMBER", "grep", "spec", "zsh", "do", "du", "a", "formtastic", "NUMBER", "zsh", "exit", "NUMBER", "grep", "color", "auto", "spec", "I", "recently", "packaged", "the", "gem", "for", "Fedora", "where", "every", "rubygem", "package", "be", "recommended", "to", "run", "test", "suite", "when", "build", "It", "would", "be", "nice", "if", "the", "test", "suite", "be", "include", "NUMBER", "When", "an", "association", "doesn", "t", "exist", "the", "name", "attribute", "that", "be", "generate", "ends", "up", "blank", "NUMBER", "For", "example", "f", "NUMBER", "input", "state", "collection", "State", "NUMBER", "all", "TAG", "This", "branch", "fix", "the", "issue", "by", "ensuring", "that", "the", "method", "be", "returned", "when", "the", "association", "be", "miss", "NUMBER", "They", "re", "no", "longer", "just", "dealing", "with", "methods", "procs", "helper", "methods", "methods", "on", "objects", "and", "I", "feel", "like", "label", "can", "be", "confused", "with", "the", "other", "label", "NUMBER", "How", "about", "member_", "as", "in", "member", "of", "the", "collection", "member_label", "member_value", "member_title", "separate", "issue", "etc", "Obviously", "need", "to", "allow", "backwards", "compatibility", "for", "a", "while", "NUMBER", "We", "cannot", "allow", "column", "types", "of", "float", "to", "use", "macros", "greater_than", "and", "less_than", "because", "we", "add", "subtract", "one", "in", "those", "cases", "which", "be", "wrong", "NUMBER", "_subscribing", "that", "s", "for", "me_", "So", "the", "question", "be", "what", "to", "do", "when", "a", "float", "column", "has", "this", "type", "of", "validation", "and", "a", "min", "max", "hasn", "t", "be", "supplied", "in", "the", "form", "DSL", "NUMBER", "For", "a", "number", "NUMBER", "a", "Ignore", "it", "and", "go", "with", "a", "default", "b", "Raise", "an", "error", "ask", "for", "the", "min", "and", "max", "or", "an", "_or_equal_to", "validation", "For", "a", "range", "NUMBER", "c", "Ignore", "it", "and", "go", "with", "a", "default", "d", "Raise", "an", "error", "ask", "for", "the", "min", "and", "max", "or", "an", "_or_equal_to", "validation", "I", "m", "leaning", "towards", "b", "and", "d", "but", "farnoy", "originally", "went", "with", "a", "and", "c", "I", "think", "so", "best", "to", "discuss", "before", "code", "NUMBER", "the", "work", "be", "in", "the", "range", "input", "branch", "for", "those", "interested", "i", "ve", "replied", "to", "mail", "cant", "paste", "it", "here", "cuz", "im", "on", "mobile", "NUMBER", "b", "and", "d", "be", "my", "answers", "I", "ve", "do", "a", "fix", "LINK", "for", "that", "NUMBER", "Should", "I", "do", "something", "more", "or", "send", "a", "pull", "request", "I", "just", "start", "looking", "at", "this", "NUMBER", "farnoy", "do", "you", "have", "a", "spec", "for", "this", "I", "m", "pretty", "sure", "my", "fix", "be", "work", "as", "expected", "test", "on", "simple", "rails", "app", "NUMBER", "saturnflyer", "I", "had", "some", "test", "write", "but", "I", "get", "lost", "with", "my", "branch", "and", "they", "were", "very", "basic", "anyways", "so", "could", "you", "write", "some", "That", "would", "be", "a", "few", "for", "ValidationsHelper", "and", "a", "few", "for", "Range", "and", "Number", "numeric", "inputs", "NUMBER", "justinfrench", "I", "think", "we", "did", "this", "feature", "very", "well", "with", "specs", "do", "we", "could", "merge", "it", "all", "to", "refactor", "branch", "and", "close", "this", "NUMBER", "I", "don", "t", "think", "it", "makes", "sense", "when", "we", "be", "handle", "integer", "s", "there", "be", "no", "validations", "by", "default", "we", "can", "only", "set", "default", "step", "to", "NUMBER", "but", "when", "range", "and", "step", "be", "not", "defined", "when", "handle", "float", "s", "we", "need", "to", "throw", "an", "exception", "that", "s", "correct", "NUMBER", "When", "I", "try", "to", "upload", "a", "file", "via", "AJAX", "I", "be", "get", "this", "error", "message", "TypeError", "expected", "Array", "get", "Hash", "for", "param", "listing", "Backtrace", "LINK", "Curious", "Is", "there", "any", "chance", "you", "could", "make", "a", "small", "as", "possible", "test", "case", "app", "that", "exposes", "this", "bug", "Is", "the", "only", "difference", "that", "you", "switched", "from", "Formtastic", "NUMBER", "gem", "to", "master", "git", "branch", "Or", "be", "there", "other", "change", "factors", "Rails", "upgrade", "custom", "inputs", "new", "gems", "NUMBER", "I", "did", "create", "a", "custom", "input", "to", "try", "it", "out", "but", "I", "m", "not", "use", "that", "at", "the", "moment", "NUMBER", "No", "other", "change", "except", "for", "gem", "update", "NUMBER", "Sure", "I", "can", "make", "a", "test", "app", "NUMBER", "It", "appears", "to", "be", "work", "now", "NUMBER", "Tried", "it", "with", "master", "branch", "from", "github", "repo", "NUMBER", "On", "Wed", "May", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "justinfrench", "TAG", "write", "tenaciousflea", "Any", "progress", "Were", "you", "able", "to", "resolve", "this", "bug", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "comment_", "NUMBER", "Going", "to", "post", "this", "on", "Bugzilla", "but", "With", "the", "introduction", "of", "the", "new", "Firefox", "NUMBER", "release", "it", "induces", "an", "odd", "behavior", "giving", "focus", "to", "li", "elements", "of", "a", "ol", "with", "overflow", "auto", "form", "NUMBER", "formtastic", "fieldset", "ol", "li", "overflow", "auto", "clearing", "contained", "floats", "Regards", "Oh", "fun", "Will", "investigate", "NUMBER", "Off", "the", "top", "of", "my", "head", "it", "s", "only", "necessary", "to", "clear", "the", "floats", "if", "you", "re", "styling", "the", "containing", "element", "that", "has", "the", "overflow", "auto", "hack", "NUMBER", "You", "could", "try", "replacing", "overriding", "that", "with", "overflow", "visible", "NUMBER", "If", "you", "find", "an", "acceptable", "work", "around", "PLEASE", "update", "this", "issue", "to", "save", "me", "some", "work", "Busy", "consulting", "right", "now", "I", "ll", "fork", "a", "fix", "and", "update", "you", "tonight", "if", "you", "don", "t", "beat", "me", "to", "the", "punch", "When", "use", "form_for", "with", "an", "object_name", "and", "an", "object", "like", "semantic_form_for", "booking", "booking", "do", "f", "NUMBER", "end", "The", "I", "NUMBER", "n", "code", "will", "look", "at", "the", "model_name", "of", "booking", "for", "the", "scope", "which", "if", "the", "booking", "be", "a", "DbBooking", "will", "take", "this", "for", "the", "title", "field", "en", "formtastic", "labels", "db_booking", "title", "A", "good", "title", "please", "I", "think", "formtastic", "should", "instead", "take", "it", "from", "the", "pass", "object_name", "like", "en", "formtastic", "labels", "booking", "title", "A", "good", "title", "please", "This", "sounds", "better", "because", "passing", "an", "object_name", "in", "the", "form", "builder", "be", "here", "to", "abstract", "the", "form", "handle", "controller", "and", "also", "issue", "like", "this", "the", "I", "NUMBER", "n", "of", "the", "form", "NUMBER", "Could", "you", "submit", "a", "failure", "spec", "or", "the", "fix", "Sounds", "reasonable", "NUMBER", "Would", "rather", "park", "this", "until", "we", "re", "closer", "with", "NUMBER", "at", "least", "to", "the", "point", "where", "refactor", "branch", "be", "merge", "into", "master", "NUMBER", "I", "m", "inclined", "not", "to", "fix", "this", "in", "the", "NUMBER", "stable", "branch", "because", "it", "s", "not", "a", "critical", "issue", "NUMBER", "Okay", "I", "ll", "keep", "my", "quick", "and", "dirty", "fix", "on", "my", "work", "copy", "NUMBER", "Thanx", "to", "both", "of", "you", "for", "your", "prompt", "answers", "NUMBER", "justinfrench", "I", "ll", "try", "to", "do", "that", "during", "the", "next", "week", "NUMBER", "The", "Readme", "says", "to", "install", "version", "NUMBER", "in", "the", "Gemfile", "gem", "formtastic", "NUMBER", "But", "the", "most", "recent", "gem", "on", "rubygems", "NUMBER", "org", "be", "NUMBER", "LINK", "NUMBER", "Is", "this", "just", "a", "situation", "where", "the", "Readme", "be", "incorrect", "or", "be", "I", "miss", "something", "Cheers", "The", "README", "be", "wrong", "because", "the", "version", "NUMBER", "wasn", "t", "release", "yet", "NUMBER", "Can", "you", "fix", "and", "submit", "a", "pull", "request", "On", "Tue", "Mar", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "spagalloco", "TAG", "write", "The", "Readme", "says", "to", "install", "version", "NUMBER", "in", "the", "Gemfile", "gem", "formtastic", "NUMBER", "But", "the", "most", "recent", "gem", "on", "rubygems", "NUMBER", "org", "be", "NUMBER", "LINK", "NUMBER", "Is", "this", "just", "a", "situation", "where", "the", "Readme", "be", "incorrect", "or", "be", "I", "miss", "something", "Cheers", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "Cheers", "Gabriel", "Sobrinho", "Bah", "that", "s", "my", "screw", "up", "NUMBER", "Will", "fix", "NUMBER", "Fixed", "in", "ca", "NUMBER", "c", "NUMBER", "closing", "NUMBER", "I", "NUMBER", "n", "definitions", "for", "buttons", "create", "update", "should", "be", "in", "formtastic", "NUMBER", "actions", "according", "to", "the", "README", "but", "they", "only", "seems", "to", "be", "applied", "when", "placing", "the", "definitions", "of", "create", "and", "update", "directly", "under", "formtastic", "NUMBER", "This", "applies", "to", "formtastic", "gem", "version", "NUMBER", "Need", "to", "check", "spec", "coverage", "and", "either", "change", "the", "docs", "or", "patch", "the", "code", "NUMBER", "Ok", "so", "the", "README", "be", "suggesting", "en", "NUMBER", "formtastic", "NUMBER", "actions", "NUMBER", "create", "There", "s", "test", "coverage", "in", "commit_button_spec", "NUMBER", "rb", "for", "the", "following", "scenarios", "en", "NUMBER", "formtastic", "NUMBER", "actions", "NUMBER", "submit", "en", "NUMBER", "formtastic", "NUMBER", "actions", "NUMBER", "model_name", "NUMBER", "submit", "en", "NUMBER", "formtastic", "NUMBER", "actions", "NUMBER", "create", "en", "NUMBER", "formtastic", "NUMBER", "actions", "NUMBER", "model_name", "NUMBER", "create", "en", "NUMBER", "formtastic", "NUMBER", "actions", "NUMBER", "update", "en", "NUMBER", "formtastic", "NUMBER", "actions", "NUMBER", "model_name", "NUMBER", "update", "This", "seems", "to", "be", "consistent", "with", "the", "README", "so", "this", "be", "indeed", "what", "we", "should", "be", "aiming", "for", "NUMBER", "Next", "I", "tried", "to", "repeat", "your", "experience", "formtastic", "NUMBER", "create", "works", "formtastic", "NUMBER", "actions", "NUMBER", "create", "doesn", "t", "in", "a", "real", "Rails", "NUMBER", "app", "with", "various", "Formtastic", "version", "with", "the", "NUMBER", "gem", "I", "_can_", "repeat", "the", "error", "with", "the", "NUMBER", "gem", "same", "with", "the", "NUMBER", "gem", "same", "with", "the", "NUMBER", "gem", "same", "with", "the", "NUMBER", "stable", "branch", "bundled", "same", "with", "the", "master", "branch", "bundled", "in", "I", "_can", "t_", "repeat", "the", "error", "So", "the", "good", "news", "be", "it", "looks", "like", "this", "be", "fix", "on", "master", "but", "it", "s", "be", "a", "long", "standing", "bug", "back", "through", "a", "lot", "of", "gems", "NUMBER", "The", "puzzling", "thing", "be", "that", "we", "really", "haven", "t", "change", "any", "of", "this", "stuff", "in", "master", "NUMBER", "I", "ll", "do", "some", "diffs", "and", "try", "to", "figure", "it", "out", "NUMBER", "sobrinho", "any", "ideas", "on", "why", "how", "this", "was", "introduce", "I", "didn", "t", "checked", "yet", "NUMBER", "Any", "news", "I", "have", "three", "new", "Address", "records", "that", "belong_to", "the", "form", "object", "NUMBER", "Only", "the", "first", "fieldset", "gets", "a", "legend", "with", "Address", "NUMBER", "the", "rest", "don", "t", "get", "legends", "at", "all", "NUMBER", "I", "m", "use", "the", "following", "syntax", "TAG", "Address", "i", "for", "address", "Is", "there", "something", "I", "m", "doing", "wrong", "Using", "formtastic", "NUMBER", "I", "really", "thought", "we", "patched", "this", "but", "can", "t", "find", "anything", "in", "the", "git", "log", "or", "issue", "NUMBER", "Just", "had", "a", "quick", "look", "in", "the", "specs", "and", "there", "s", "no", "coverage", "NUMBER", "I", "guess", "the", "work", "around", "in", "the", "meantime", "be", "to", "iterate", "over", "the", "association", "yourself", "NUMBER", "TAG", "TAG", "address", "title", "Address", "address", "NUMBER", "id", "TAG", "Untested", "but", "it", "s", "something", "like", "that", "NUMBER", "Maybe", "it", "s", "for", "your_form_object", "address", "NUMBER", "Let", "me", "know", "how", "you", "go", "leaving", "this", "open", "until", "this", "be", "resolve", "with", "coverage", "or", "until", "the", "documentation", "be", "improved", "NUMBER", "Thanks", "NUMBER", "I", "realised", "I", "needed", "to", "update", "the", "particular", "markup", "with", "JavaScript", "so", "ended", "up", "use", "Mustache", "anyway", "NUMBER", "Would", "be", "good", "to", "see", "this", "fix", "though", "NUMBER", "Good", "news", "Thanks", "for", "this", "NUMBER", "That", "comment", "made", "me", "laugh", "out", "loud", "NUMBER", "I", "ll", "look", "after", "I", "ve", "get", "through", "this", "massive", "rabbit", "hole", "of", "work", "NUMBER", "New", "feature", "v", "NUMBER", "to", "add", "another", "label", "to", "a", "checkbox", "NUMBER", "Currently", "a", "boolean", "field", "be", "rendered", "as", "a", "checkbox", "with", "the", "label", "display", "at", "the", "right", "NUMBER", "The", "idea", "be", "to", "add", "another", "label", "at", "the", "left", "in", "order", "to", "fill", "the", "blank", "space", "where", "the", "other", "field", "labels", "be", "positionned", "NUMBER", "This", "would", "give", "something", "like", "TAG", "Text", "field", "NUMBER", "Another", "Label", "x", "Standard", "label", "TAG", "Original", "discussion", "and", "answers", "from", "Justin", "French", "LINK", "It", "will", "be", "simple", "NUMBER", "overriding", "the", "BooleanInput", "class", "NUMBER", "It", "s", "a", "common", "thing", "Think", "about", "publish", "flag", "NUMBER", "Name", "NUMBER", "x", "Published", "You", "may", "want", "to", "write", "Status", "on", "left", "but", "in", "this", "case", "makes", "more", "sense", "the", "usage", "of", "a", "status", "column", "with", "collection", "NUMBER", "Could", "you", "give", "me", "a", "real", "case", "justinfrench", "you", "convinced", "me", "with", "this", "example", "NUMBER", "I", "will", "try", "something", "later", "NUMBER", "I", "m", "trying", "to", "get", "a", "basic", "form", "up", "for", "a", "simple", "polymorphic", "association", "class", "Approval", "TAG", "true", "end", "with", "this", "form", "TAG", "TAG", "TAG", "TAG", "Without", "formtastic", "rails", "figures", "out", "the", "associated", "object", "correctly", "NUMBER", "With", "formtastic", "I", "get", "this", "error", "Mysql", "Error", "Table", "foo", "NUMBER", "approvables", "doesn", "t", "exist", "SELECT", "FROM", "approvables", "There", "be", "no", "such", "table", "NUMBER", "the", "approval", "table", "simply", "has", "approvable_id", "and", "approvable_type", "NUMBER", "Everything", "works", "in", "console", "as", "far", "as", "far", "as", "the", "associations", "be", "concerned", "NUMBER", "Seems", "like", "formtastic", "doesn", "t", "notice", "that", "this", "be", "a", "polymorphic", "relationship", "NUMBER", "Any", "clues", "Hi", "this", "be", "a", "know", "issue", "but", "I", "can", "t", "find", "the", "duplicate", "so", "leaving", "open", "for", "now", "NUMBER", "In", "short", "we", "drop", "the", "ball", "a", "bit", "on", "automatically", "figuring", "out", "what", "to", "do", "with", "polymorphic", "associations", "with", "the", "quick", "form", "syntax", "above", "NUMBER", "We", "need", "to", "either", "be", "more", "awesome", "or", "drop", "the", "ball", "in", "a", "less", "craptastic", "way", "NUMBER", "The", "only", "workaround", "I", "know", "if", "be", "to", "break", "out", "into", "the", "block", "syntax", "and", "describe", "each", "input", "you", "want", "NUMBER", "Leaving", "this", "open", "just", "in", "case", "the", "dup", "has", "vanished", "NUMBER", "Thanks", "for", "the", "quick", "response", "NUMBER", "Actually", "the", "initial", "error", "be", "uninitialized", "constant", "Approval", "Approvable", "I", "created", "an", "empty", "model", "class", "Approvable", "to", "see", "if", "that", "would", "make", "this", "error", "go", "away", "and", "then", "I", "get", "the", "following", "error", "Mysql", "Error", "Table", "foo", "NUMBER", "approvables", "doesn", "t", "exist", "SELECT", "FROM", "approvables", "I", "be", "experience", "the", "same", "problem", "NUMBER", "Could", "you", "please", "explain", "what", "you", "mean", "by", "break", "out", "into", "the", "block", "syntax", "Thank", "you", "NUMBER", "This", "be", "what", "I", "can", "the", "quick", "form", "TAG", "TAG", "TAG", "TAG", "There", "s", "also", "the", "short", "hand", "form", "TAG", "TAG", "TAG", "TAG", "And", "the", "block", "form", "which", "be", "recommended", "for", "production", "apps", "so", "that", "you", "always", "get", "exactly", "what", "you", "want", "TAG", "TAG", "TAG", "whatever", "TAG", "whatever", "NUMBER", "TAG", "TAG", "TAG", "There", "s", "an", "issue", "with", "polymorphic", "associations", "in", "either", "the", "quick", "or", "shorthand", "formats", "which", "can", "be", "worked", "around", "my", "use", "the", "block", "format", "which", "be", "far", "more", "specific", "about", "what", "you", "want", "thus", "less", "guesswork", "by", "Formtastic", "NUMBER", "The", "problem", "with", "polymorphic", "associations", "be", "we", "don", "t", "know", "what", "you", "want", "to", "show", "since", "this", "can", "be", "any", "model", "NUMBER", "Did", "you", "tried", "to", "specify", "the", "collection", "option", "TAG", "TAG", "TAG", "TAG", "Comment", "NUMBER", "all", "TAG", "TAG", "TAG", "TAG", "The", "exception", "can", "be", "handle", "skipping", "the", "polymorphic", "associations", "from", "f", "NUMBER", "inputs", "method", "NUMBER", "What", "you", "think", "justin", "Ok", "so", "there", "s", "three", "use", "cases", "NUMBER", "in", "quick", "form", "TAG", "collection", "can", "t", "be", "provide", "or", "guessed", "NUMBER", "in", "short", "hand", "form", "TAG", "collection", "can", "t", "be", "provide", "or", "guessed", "NUMBER", "in", "block", "form", "TAG", "TAG", "TAG", "where", "collection", "hasn", "t", "be", "provide", "and", "can", "t", "be", "guessed", "Is", "that", "about", "right", "Here", "s", "my", "propose", "solution", "for", "each", "NUMBER", "skip", "over", "the", "input", "and", "warn", "log", "that", "an", "input", "can", "t", "be", "automatically", "generate", "for", "polymorphic", "associations", "NUMBER", "raise", "an", "error", "that", "inputs", "for", "polymorphic", "associations", "can", "t", "be", "rendered", "in", "short", "hand", "form", "because", "a", "collection", "can", "t", "be", "specified", "or", "guessed", "NUMBER", "raise", "an", "error", "that", "a", "collection", "must", "be", "provide", "for", "an", "input", "on", "a", "polymorphic", "association", "Sounds", "like", "the", "work", "around", "right", "now", "be", "use", "the", "block", "inputs", "syntax", "and", "specify", "a", "collection", "NUMBER", "I", "think", "a", "nice", "syntax", "would", "be", "something", "like", "TAG", "true", "collections", "FooClass", "BarClass", "BazClass", "NUMBER", "A", "form", "section", "with", "two", "inputs", "one", "to", "select", "the", "class", "of", "the", "commentable", "object", "e", "NUMBER", "g", "NUMBER", "commentable_type", "and", "the", "other", "to", "select", "the", "actual", "object", "NUMBER", "To", "handle", "that", "without", "Javascript", "it", "would", "be", "necessary", "to", "load", "all", "of", "the", "objects", "from", "FooClass", "BarClass", "and", "BazClass", "NUMBER", "ugly", "NUMBER", "With", "a", "sprinkling", "of", "asynchronous", "javascript", "though", "NUMBER", "Seems", "interesting", "for", "me", "NUMBER", "But", "you", "should", "provide", "collection", "like", "that", "TAG", "f", "NUMBER", "input", "commentable", "collection", "Post", "NUMBER", "first", "Category", "NUMBER", "first", "TAG", "The", "polymorphic", "option", "be", "not", "needed", "because", "we", "can", "reflect", "on", "association", "NUMBER", "What", "you", "think", "justinfrench", "sbwoodside", "sobrinho", "I", "m", "confused", "NUMBER", "I", "_thought_", "this", "issue", "was", "that", "we", "didn", "t", "know", "what", "to", "do", "with", "polymorphic", "association", "inputs", "that", "didn", "t", "have", "a", "collection", "option", "NUMBER", "Right", "Personally", "I", "think", "the", "polymorphic", "object", "eg", "commentable_type", "be", "not", "something", "a", "user", "should", "have", "to", "select", "NUMBER", "I", "ve", "commit", "some", "fix", "for", "this", "in", "master", "NUMBER", "Would", "love", "someone", "to", "test", "them", "in", "a", "real", "world", "app", "NUMBER", "Please", "re", "open", "if", "you", "find", "any", "issue", "NUMBER", "Would", "be", "great", "if", "we", "can", "detect", "a", "miss", "call", "to", "accepts_nested_attributes_for", "in", "the", "model", "and", "warn", "raise", "something", "to", "avoid", "those", "WTF", "moments", "NUMBER", "This", "be", "the", "most", "common", "problem", "with", "nested", "form", "I", "ve", "seen", "on", "the", "google", "group", "NUMBER", "We", "should", "be", "able", "to", "make", "it", "go", "away", "NUMBER", "Can", "we", "raise", "a", "exception", "Raising", "an", "exception", "makes", "sense", "for", "ActiveRecord", "but", "not", "sure", "about", "other", "ActiveModel", "instances", "and", "it", "definitely", "wouldn", "t", "be", "appropriate", "for", "non", "model", "stuff", "NUMBER", "Would", "need", "some", "thought", "NUMBER", "Similarly", "I", "think", "we", "could", "ensure", "that", "whatever_attributes", "accessor", "be", "writable", "not", "protected", "which", "came", "up", "in", "the", "google", "group", "today", "NUMBER", "Looking", "on", "ActiveRecord", "we", "need", "to", "look", "the", "whatever_attributes", "method", "NUMBER", "I", "guess", "we", "can", "raise", "a", "exception", "for", "now", "and", "wait", "devs", "to", "report", "about", "the", "others", "orms", "but", "I", "think", "mongoid", "mongomapper", "datamapper", "etc", "use", "the", "same", "name", "to", "be", "compatible", "with", "rails", "helpers", "NUMBER", "I", "m", "checking", "that", "NUMBER", "I", "m", "trying", "to", "make", "a", "collection", "of", "check", "boxes", "checked", "use", "a", "non", "association", "attribute", "on", "my", "model", "NUMBER", "It", "goes", "kinda", "like", "this", "In", "the", "model", "class", "Author", "TAG", "TAG", "check_boxes", "collection", "fiction", "non_fiction", "biography", "TAG", "Formtastic", "outputs", "the", "check", "boxes", "but", "none", "of", "them", "be", "checked", "NUMBER", "However", "if", "I", "change", "the", "input", "type", "to", "select", "as", "select", "multiple", "true", "the", "options", "be", "selected", "correctly", "NUMBER", "Attached", "be", "a", "pull", "request", "with", "a", "fail", "spec", "NUMBER", "For", "instance", "when", "genres", "be", "a", "serialized", "attribute", "Yup", "everything", "isn", "t", "NoSQL", "just", "yet", "Functionality", "be", "even", "be", "add", "with", "the", "new", "format", "options", "in", "Rails", "NUMBER", "LINK", "s", "new", "in", "edge", "rails", "NUMBER", "NUMBER", "NUMBER", "custom", "activerecord", "attribute", "serialization", "index", "NUMBER", "html", "I", "had", "a", "quick", "shot", "implement", "this", "myself", "before", "I", "opened", "this", "pull", "request", "but", "couldn", "t", "quite", "figure", "out", "where", "to", "add", "this", "NUMBER", "This", "was", "on", "the", "old", "master", "before", "the", "big", "refactoring", "so", "I", "ll", "see", "if", "I", "can", "squeeze", "in", "some", "time", "to", "implement", "this", "if", "you", "find", "it", "appropriate", "NUMBER", "Okay", "had", "a", "quick", "look", "NUMBER", "Apparently", "non", "association", "collections", "works", "fine", "on", "master", "as", "long", "as", "the", "collection", "option", "be", "an", "array", "of", "strings", "and", "not", "symbols", "NUMBER", "The", "example", "given", "a", "couple", "of", "posts", "above", "will", "fail", "while", "collection", "fiction", "non_fiction", "biography", "will", "pass", "NUMBER", "The", "reflection", "be", "never", "use", "and", "the", "default", "be", "always", "returned", "as", "it", "s", "miss", "a", "return", "NUMBER", "Also", "but", "not", "really", "relate", "it", "would", "be", "nice", "if", "the", "validation", "reflection", "code", "looked", "at", "the", "foreign", "key", "to", "see", "if", "it", "s", "required", "as", "I", "usually", "do", "validates_presence_of", "foo_id", "validates_associated", "foo", "allow_nil", "true", "and", "f", "NUMBER", "input", "foo", "and", "it", "do", "not", "get", "the", "fact", "that", "foo", "be", "required", "NUMBER", "Something", "like", "mixing", "error_keys", "into", "method_required", "would", "do", "the", "trick", "I", "guess", "NUMBER", "Thanks", "Can", "you", "write", "or", "help", "write", "a", "test", "case", "to", "expose", "that", "bug", "so", "that", "we", "don", "t", "regress", "again", "Well", "in", "my", "case", "the", "association", "foreign_key", "be", "id_foo", "so", "I", "d", "say", "add", "a", "model", "with", "that", "kind", "of", "association", "and", "check", "that", "calling", "association_primary_key", "with", "foo", "gets", "you", "back", "id_foo", "and", "not", "foo_id", "NUMBER", "I", "can", "t", "promise", "having", "time", "to", "search", "where", "the", "test", "should", "go", "and", "write", "them", "NUMBER", "Might", "be", "worth", "reading", "LINK", "core", "browse_thread", "thread", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "dd", "NUMBER", "paneq", "Yeah", "I", "don", "t", "think", "we", "should", "be", "looking", "at", "the", "raw", "key", "column", "we", "should", "be", "looking", "at", "the", "association", "although", "in", "practice", "this", "would", "probably", "lead", "to", "lots", "of", "WTF", "moments", "from", "apps", "that", "be", "assuming", "the", "key", "NUMBER", "Would", "love", "someone", "to", "get", "this", "all", "the", "way", "to", "a", "patch", "with", "specs", "and", "anything", "else", "we", "need", "to", "be", "solid", "NUMBER", "edit", "the", "title", "to", "include", "polymorphic", "to", "aid", "finding", "it", "The", "hidden", "field", "created", "alongside", "a", "checkbox", "isn", "t", "disabled", "when", "the", "main", "one", "be", "disabled", "use", "disabled", "true", "NUMBER", "This", "means", "that", "rather", "than", "no", "value", "be", "submitted", "for", "that", "field", "the", "negative", "value", "be", "submitted", "instead", "NUMBER", "Can", "you", "provide", "a", "patch", "or", "a", "test", "case", "LINK", "Can", "you", "submit", "as", "pull", "request", "I", "will", "apply", "the", "spec", "and", "fix", "the", "issue", "NUMBER", "Submitted", "NUMBER", "Thanks", "Looks", "like", "this", "was", "resolve", "in", "NUMBER", "d", "NUMBER", "closing", "NUMBER", "Doesn", "t", "appear", "to", "be", "fix", "NUMBER", "The", "test", "still", "fail", "on", "NUMBER", "stable", "and", "master", "NUMBER", "_Right", "NUMBER", "_", "Re", "open", "NUMBER", "Ok", "this", "be", "tricky", "NUMBER", "I", "made", "the", "test", "pass", "locally", "but", "the", "test", "be", "invalid", "NUMBER", "There", "s", "one", "hidden", "input", "for", "one", "or", "more", "checkboxes", "NUMBER", "Disabling", "the", "hidden", "input", "as", "per", "the", "test", "which", "has", "two", "checkbox", "choices", "one", "of", "which", "be", "disabled", "would", "cancel", "out", "the", "whole", "purpose", "of", "the", "hidden", "input", "when", "trying", "to", "uncheck", "all", "choices", "NUMBER", "The", "only", "case", "where", "this", "test", "be", "correct", "be", "when", "all", "checkbox", "choices", "be", "also", "disabled", "NUMBER", "I", "can", "probably", "write", "code", "for", "that", "but", "I", "m", "not", "convinced", "that", "it", "s", "a", "likely", "use", "case", "NUMBER", "Maybe", "I", "m", "miss", "something", "Leaving", "the", "test", "broken", "for", "now", "have", "push", "to", "branch", "GH", "NUMBER", "My", "use", "case", "be", "this", "An", "admin", "wants", "to", "manage", "users", "including", "himself", "NUMBER", "However", "the", "admin", "shouldn", "t", "be", "able", "to", "remove", "himself", "from", "the", "admin", "list", "and", "that", "be", "managed", "by", "a", "single", "checkbox", "NUMBER", "Disabling", "this", "lets", "him", "visually", "see", "that", "he", "be", "an", "admin", "but", "then", "a", "submit", "actually", "remove", "him", "from", "the", "list", "because", "of", "the", "hidden", "field", "NUMBER", "For", "cases", "like", "that", "with", "just", "one", "choice", "I", "would", "use", "a", "boolean", "input", "not", "a", "checkboxes", "input", "NUMBER", "This", "may", "not", "map", "perfectly", "to", "your", "model", "but", "it", "makes", "sense", "in", "terms", "of", "form", "and", "params", "structure", "NUMBER", "TAG", "boolean", "Under", "the", "hood", "you", "may", "need", "to", "create", "some", "accessors", "on", "the", "model", "to", "accept", "this", "attribute", "and", "a", "before_save", "hook", "in", "the", "model", "to", "translate", "this", "simple", "accessor", "into", "what", "your", "model", "expects", "complex", "associations", "maybe", "NUMBER", "Let", "me", "know", "how", "you", "go", "will", "close", "this", "in", "a", "week", "or", "so", "if", "I", "haven", "t", "heard", "back", "NUMBER", "It", "already", "be", "a", "boolean", "field", "and", "maps", "correctly", "NUMBER", "The", "issue", "still", "persists", "though", "and", "the", "usecase", "be", "as", "describe", "above", "NUMBER", "The", "db", "field", "be", "a", "boolean", "too", "NUMBER", "Ok", "my", "response", "was", "based", "on", "the", "test", "that", "were", "add", "to", "the", "checkboxes", "input", "specs", "NUMBER", "Now", "that", "we", "have", "that", "cleared", "up", "I", "can", "shift", "the", "test", "over", "to", "the", "boolean", "input", "and", "make", "it", "pass", "pretty", "easily", "NUMBER", "Thanks", "NUMBER", "Damn", "I", "put", "it", "in", "the", "wrong", "place", "Sorry", "It", "did", "cross", "my", "mind", "after", "your", "last", "comment", "though", "NUMBER", "Fixed", "in", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "on", "refactor", "branch", "will", "be", "in", "NUMBER", "Looking", "now", "at", "how", "hard", "it", "will", "be", "to", "backport", "into", "NUMBER", "stable", "NUMBER", "Awesome", "was", "easy", "to", "add", "into", "NUMBER", "stable", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "will", "be", "in", "next", "NUMBER", "x", "release", "NUMBER", "Closing", "NUMBER", "Hmmm", "I", "m", "use", "ActiveAdmin", "with", "Formtastic", "NUMBER", "and", "check_boxes", "don", "t", "seem", "to", "be", "get", "my", "disabled", "setting", "NUMBER", "example", "ruby", "this", "be", "not", "disabled", "f", "NUMBER", "input", "shares", "input_html", "disabled", "true", "as", "check_boxes", "collection", "f", "NUMBER", "object", "NUMBER", "shares", "this", "be", "disabled", "f", "NUMBER", "input", "shares", "input_html", "disabled", "true", "as", "select", "multiple", "true", "collection", "f", "NUMBER", "object", "NUMBER", "shares", "this", "be", "disabled", "f", "NUMBER", "input", "note", "input_html", "disabled", "true", "as", "boolean", "Am", "I", "miss", "something", "here", "or", "be", "there", "a", "bug", "in", "Formtastic", "Excellent", "Took", "a", "little", "finagling", "but", "finally", "get", "it", "to", "work", "ruby", "f", "NUMBER", "input", "shares", "disabled", "f", "NUMBER", "object", "NUMBER", "shares", "NUMBER", "map", "id", "as", "check_boxes", "collection", "f", "NUMBER", "object", "NUMBER", "shares", "I", "don", "t", "know", "why", "current", "behaviour", "of", "the", "semantic_errors", "be", "attribute", "localized_string", "method", "method", "NUMBER", "to_sym", "label", "humanized_attribute_name", "method", "error", "Array", "object", "NUMBER", "error", "method", "NUMBER", "to_sym", "NUMBER", "to_sentence", "error", "NUMBER", "present", "array", "TAG", "attr_name", "options", "default", "attribute", "message", "attribute", "attr_name", "full_messages", "attribute", "message", "NUMBER", "each", "do", "m", "full_messages", "attribute", "TAG", "m", "end", "end", "full_messages", "NUMBER", "each", "do", "attribute", "message", "error", "TAG", "description", "TAG", "Author", "TAG", "TAG", "TAG", "TAG", "TAG", "Justin", "French", "TAG", "TAG", "Jane", "Doe", "TAG", "TAG", "See", "LINK", "_thread", "thread", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "hl", "en", "That", "d", "be", "an", "acceptable", "short", "term", "fix", "but", "long", "term", "I", "m", "wondering", "if", "the", "input", "method", "couldn", "t", "accept", "a", "block", "for", "this", "collection", "association", "based", "stuff", "instead", "Totally", "scribbling", "psuedo", "code", "TAG", "select", "do", "select", "object", "TAG", "TAG", "TAG", "TAG", "Similarly", "I", "ve", "actually", "be", "thinking", "about", "pulling", "all", "strings", "labels", "hints", "values", "etc", "out", "of", "the", "DSL", "relying", "solely", "on", "i", "NUMBER", "n", "NUMBER", "It", "s", "really", "the", "path", "forward", "so", "by", "default", "Formtastic", "could", "look", "to", "translation", "keys", "for", "the", "value", "the", "label", "and", "even", "the", "title", "etc", "NUMBER", "Given", "the", "above", "ideas", "there", "s", "not", "likely", "to", "be", "an", "instant", "patch", "for", "this", "but", "the", "wheels", "be", "definitely", "in", "motion", "NUMBER", "Justin", "thanks", "for", "the", "reply", "Personally", "i", "d", "totally", "prefer", "the", "block", "style", "syntax", "to", "set", "attributes", "on", "the", "element", "NUMBER", "Oh", "and", "NUMBER", "for", "the", "I", "NUMBER", "n", "support", "This", "would", "be", "great", "NUMBER", "Attempted", "to", "set", "label", "to", "false", "on", "a", "boolean", "input", "type", "and", "find", "the", "checkbox", "no", "longer", "shows", "up", "NUMBER", "This", "be", "due", "to", "the", "checkbox", "be", "rendered", "inside", "the", "label", "tag", "so", "the", "element", "can", "sit", "to", "the", "left", "of", "the", "text", "NUMBER", "Is", "this", "intentional", "and", "be", "there", "any", "reason", "why", "the", "checkbox", "can", "t", "be", "moved", "outside", "of", "the", "label", "tag", "I", "know", "there", "be", "some", "pretty", "simple", "work", "arounds", "and", "this", "really", "doesn", "t", "get", "in", "the", "way", "much", "NUMBER", "Just", "seems", "inconsistent", "with", "the", "way", "setting", "label", "to", "false", "works", "with", "the", "rest", "of", "the", "input", "types", "NUMBER", "What", "s", "the", "use", "case", "for", "a", "checkbox", "without", "a", "label", "Either", "way", "probably", "doable", "in", "NUMBER", "where", "I", "m", "more", "happy", "to", "break", "backwards", "compatibility", "in", "the", "markup", "NUMBER", "I", "m", "currently", "outputting", "checkboxes", "in", "a", "grid", "format", "for", "a", "setting", "hours", "open", "for", "a", "restaurant", "NUMBER", "the", "x", "axis", "be", "for", "days", "and", "the", "y", "axis", "be", "for", "time", "in", "increments", "of", "NUMBER", "minutes", "NUMBER", "So", "the", "checkbox", "be", "for", "an", "attribute", "named", "is_open", "NUMBER", "Checking", "a", "box", "for", "a", "particular", "day", "and", "time", "means", "that", "restaurant", "be", "open", "for", "that", "time", "slot", "NUMBER", "With", "the", "field", "type", "be", "a", "boolean", "and", "the", "two", "x", "y", "describing", "the", "checkbox", "there", "be", "really", "no", "need", "for", "a", "label", "NUMBER", "Of", "this", "be", "a", "has_many", "relationship", "and", "these", "be", "nested", "attributes", "NUMBER", "Can", "t", "really", "see", "this", "applying", "any", "other", "way", "NUMBER", "taken", "from", "examples", "in", "readme", "TAG", "author", "name", "Author", "results", "in", "ActiveRecord", "UnknownAttributeError", "unknown", "attribute", "first_name", "but", "if", "I", "try", "the", "rails", "way", "TAG", "TAG", "Author", "TAG", "everything", "be", "fine", "NUMBER", "btw", "in", "my", "special", "case", "I", "use", "a", "polymorphic", "has_one", "relationship", "don", "t", "know", "if", "this", "matters", "NUMBER", "anyway", "thanks", "for", "this", "great", "gem", "Can", "you", "do", "a", "quick", "experiment", "and", "see", "if", "a", "similar", "error", "happens", "on", "non", "polymorphic", "association", "as", "well", "Would", "like", "some", "help", "clarifying", "this", "please", "That", "one", "liner", "works", "for", "me", "on", "a", "simple", "belongs_to", "association", "non", "polymorphic", "Ok", "I", "think", "this", "be", "relate", "to", "some", "other", "issue", "with", "polymorphic", "NUMBER", "The", "workaround", "from", "memory", "be", "to", "use", "the", "block", "version", "of", "inputs", "rather", "than", "the", "short", "hand", "one", "liner", "and", "specify", "the", "right", "options", "to", "get", "what", "you", "need", "NUMBER", "Please", "confirm", "NUMBER", "If", "a", "patch", "can", "t", "be", "figured", "out", "we", "obviously", "need", "to", "fail", "a", "bit", "more", "gracefully", "on", "this", "to", "assist", "people", "NUMBER", "farnoy", "can", "you", "confirm", "that", "you", "were", "able", "to", "get", "this", "to", "work", "with", "the", "block", "form", "inputs", "for", "author", "do", "NUMBER", "end", "This", "will", "help", "narrow", "down", "a", "test", "case", "to", "find", "this", "bug", "NUMBER", "If", "I", "haven", "t", "heard", "anything", "in", "a", "week", "or", "so", "I", "ll", "close", "this", "given", "it", "s", "now", "NUMBER", "NUMBER", "months", "old", "NUMBER", "farnoy", "I", "ve", "also", "recently", "commit", "some", "change", "to", "master", "in", "issue", "NUMBER", "which", "may", "or", "may", "not", "help", "NUMBER", "If", "you", "have", "time", "bundling", "from", "master", "with", "the", "git", "option", "might", "help", "clarify", "NUMBER", "Rails", "support", "disable_with", "Text", "to", "display", "on", "button", "while", "submit", "NUMBER", "as", "an", "option", "to", "the", "form", "NUMBER", "submit", "and", "submit_tag", "methods", "NUMBER", "This", "implementation", "be", "the", "same", "as", "be", "use", "in", "Rails", "NUMBER", "and", "hooks", "in", "to", "the", "rails", "NUMBER", "js", "stuff", "just", "fine", "NUMBER", "Probably", "not", "compatible", "with", "old", "school", "non", "unobtrusive", "Rails", "NUMBER", "stuff", "though", "NUMBER", "I", "m", "going", "to", "sit", "on", "this", "until", "we", "drop", "NUMBER", "x", "support", "which", "be", "actually", "really", "soon", "NUMBER", "Closing", "NUMBER", "Currently", "this", "works", "on", "input_html", "TAG", "f", "NUMBER", "commit_button", "button_html", "disable_with", "Aguarde", "NUMBER", "TAG", "Ok", "that", "s", "cool", "NUMBER", "A", "statement", "about", "it", "in", "the", "docs", "would", "help", "though", "as", "this", "be", "quite", "obscure", "NUMBER", "dbackeus", "button_html", "be", "briefly", "mention", "in", "the", "README", "and", "well", "documented", "in", "the", "refactor", "I", "m", "doing", "see", "Formtastic", "Helpers", "ButtonsHelper", "and", "commit_button", "in", "master", "NUMBER", "If", "you", "think", "anything", "further", "will", "be", "needed", "would", "love", "a", "patch", "or", "even", "specific", "suggestions", "in", "this", "thread", "will", "do", "NUMBER", "Documentation", "be", "a", "big", "deal", "to", "me", "in", "v", "NUMBER", "Well", "optimally", "I", "would", "still", "implement", "the", "disable_with", "option", "and", "just", "provide", "an", "example", "with", "that", "in", "the", "README", "NUMBER", "Keeping", "in", "mind", "the", "principle", "of", "least", "surprise", "design", "we", "re", "use", "to", "in", "Ruby", "NUMBER", "If", "it", "works", "in", "Rails", "I", "hope", "it", "to", "work", "the", "same", "way", "in", "Formtastic", "NUMBER", "Especially", "given", "that", "going", "the", "route", "of", "button_html", "data", "disable", "with", "xxx", "requires", "knowledge", "about", "the", "implementation", "details", "of", "what", "Rails", "actually", "do", "when", "use", "the", "disable_with", "option", "NUMBER", "But", "if", "you", "keep", "it", "that", "way", "add", "that", "option", "to", "your", "exist", "commit_button", "example", "in", "the", "README", "would", "probably", "suffice", "NUMBER", "Allowing", "people", "to", "find", "it", "through", "cmd", "f", "with", "disable", "in", "their", "browser", "text", "editor", "which", "be", "how", "I", "usually", "go", "about", "finding", "this", "kind", "of", "stuff", "NUMBER", "Re", "open", "until", "this", "can", "be", "made", "clear", "NUMBER", "I", "believe", "the", "example", "in", "the", "documentation", "be", "incorrect", "NUMBER", "The", "class", "should", "be", "data", "disable", "with", "and", "not", "disable_with", "NUMBER", "Thus", "also", "remaining", "incompatible", "with", "the", "Rails", "api", "even", "if", "you", "flatten", "out", "the", "namespacing", "which", "doesn", "t", "sound", "like", "a", "bad", "idea", "to", "me", "btw", "NUMBER", "Hi", "I", "ve", "created", "a", "Rails", "ticket", "about", "implement", "a", "custom", "form", "generator", "into", "the", "scaffold", "generator", "NUMBER", "I", "hope", "to", "end", "up", "with", "code", "something", "like", "this", "config", "NUMBER", "generators", "do", "g", "g", "NUMBER", "form_framework", "formtastic", "end", "LINK", "generator", "allowing", "for", "a", "custom", "form", "framework", "eg", "formtastic", "We", "could", "then", "implement", "the", "current", "Formtastic", "generator", "as", "one", "of", "the", "invoked", "generators", "NUMBER", "Anyone", "have", "any", "feedback", "would", "like", "to", "help", "me", "out", "Jack", "I", "ll", "support", "anything", "I", "need", "to", "on", "the", "Formtastic", "side", "to", "make", "this", "happen", "but", "I", "don", "t", "have", "time", "to", "also", "work", "on", "the", "Rails", "side", "NUMBER", "Would", "be", "a", "great", "addition", "NUMBER", "Just", "read", "Jos\u00e9", "s", "update", "on", "the", "Rails", "ticket", "NUMBER", "Looks", "like", "it", "s", "just", "a", "patch", "or", "two", "on", "our", "side", "to", "do", "what", "simple", "form", "do", "NUMBER", "I", "d", "no", "idea", "simple_form", "could", "do", "that", "NUMBER", "Definitely", "worth", "implement", "NUMBER", "Unrelated", "but", "do", "you", "think", "it", "s", "possible", "that", "Jos\u00e9", "Valim", "be", "in", "fact", "an", "army", "of", "coders", "justinfrench", "what", "you", "think", "about", "remove", "formtastic", "form", "generator", "Using", "the", "same", "strategy", "of", "simple", "form", "the", "scaffold", "generator", "will", "use", "formtastic", "NUMBER", "I", "m", "work", "on", "it", "right", "now", "This", "be", "the", "first", "release", "where", "we", "ve", "made", "some", "critical", "change", "to", "the", "CSS", "file", "and", "I", "m", "wondering", "how", "other", "than", "with", "documentation", "we", "can", "warn", "people", "that", "they", "need", "to", "upgrade", "NUMBER", "In", "this", "case", "upgrading", "means", "re", "run", "the", "generator", "and", "committing", "merge", "the", "change", "NUMBER", "I", "was", "thinking", "maybe", "we", "can", "puts", "a", "message", "as", "the", "Rails", "server", "boots", "up", "warning", "if", "our", "CSS", "file", "and", "the", "one", "stored", "in", "public", "don", "t", "match", "NUMBER", "Thoughts", "Patches", "I", "think", "this", "warning", "should", "be", "on", "gem", "install", "like", "on", "RSpec", "because", "some", "people", "including", "me", "change", "the", "formtastic", "stylesheet", "and", "this", "warning", "will", "be", "shown", "on", "everytime", "I", "start", "my", "server", "NUMBER", "What", "you", "think", "You", "re", "not", "use", "formtastic", "NUMBER", "css", "in", "a", "support", "way", "My", "formtastic", "styles", "behaves", "in", "a", "totally", "different", "way", "than", "original", "style", "due", "to", "my", "application", "css", "framework", "NUMBER", "I", "can", "change", "the", "name", "of", "my", "stylesheet", "but", "this", "be", "not", "the", "best", "solution", "NUMBER", "Another", "issue", "can", "occur", "for", "users", "which", "convert", "the", "style", "to", "sass", "scss", "including", "me", "NUMBER", "I", "like", "the", "way", "of", "RSpec", "showed", "the", "upgrade", "notice", "from", "NUMBER", "x", "to", "NUMBER", "x", "Yeah", "renaming", "formtastic", "NUMBER", "css", "to", "form", "NUMBER", "css", "or", "similar", "would", "be", "ideal", "here", "since", "you", "re", "effectively", "forking", "but", "this", "doesn", "t", "need", "to", "be", "a", "big", "deal", "the", "change", "to", "assets", "in", "Rails", "NUMBER", "will", "probably", "negate", "this", "NUMBER", "So", "an", "upgrade", "notice", "would", "work", "for", "me", "also", "NUMBER", "Nice", "I", "will", "patch", "this", "NUMBER", "This", "be", "the", "only", "item", "left", "for", "NUMBER", "We", "can", "bump", "it", "out", "or", "we", "can", "wait", "I", "m", "flexible", "NUMBER", "Please", "do", "the", "patch", "and", "release", "NUMBER", "I", "m", "out", "of", "time", "Bumping", "out", "to", "NUMBER", "we", "ll", "find", "out", "what", "happens", "with", "the", "new", "assets", "stuff", "NUMBER", "I", "can", "t", "find", "anything", "in", "the", "gemspec", "documentation", "and", "I", "just", "don", "t", "care", "enough", "It", "d", "be", "nice", "to", "add", "this", "probably", "with", "JS", "fallback", "support", "NUMBER", "Browers", "don", "t", "support", "it", "but", "maybe", "there", "s", "an", "opportunity", "to", "do", "some", "fallback", "to", "JS", "but", "I", "m", "not", "keen", "to", "jump", "into", "JS", "just", "yet", "NUMBER", "Are", "you", "thinking", "to", "add", "the", "javascript", "to", "gem", "or", "just", "support", "this", "input", "type", "to", "_user_", "add", "the", "support", "I", "ve", "be", "thinking", "about", "some", "JS", "in", "NUMBER", "so", "if", "that", "happens", "then", "we", "re", "open", "to", "the", "possibility", "of", "add", "stuff", "like", "this", "in", "NUMBER", "HTML", "NUMBER", "form", "work", "best", "with", "fallbacks", "NUMBER", "Nice", "NUMBER", "I", "can", "help", "with", "some", "javascript", "stuff", "How", "be", "this", "any", "different", "from", "implement", "a", "textarea", "with", "a", "drop", "in", "JS", "editor", "or", "any", "other", "standard", "element", "that", "be", "popularly", "re", "rendered", "with", "javascript", "IMHO", "formtastic", "should", "just", "output", "what", "be", "the", "accepted", "html", "markup", "for", "the", "field", "and", "leave", "it", "to", "the", "browser", "to", "render", "it", "or", "the", "end", "developer", "to", "choose", "how", "to", "render", "it", "NUMBER", "Example", "lt", "input", "name", "color_hex", "type", "color", "gt", "No", "rush", "on", "this", "because", "browser", "support", "be", "sparse", "but", "for", "completeness", "feels", "like", "we", "should", "explore", "what", "this", "looks", "like", "NUMBER", "Off", "the", "top", "of", "my", "head", "something", "like", "this", "NUMBER", "f", "NUMBER", "input", "when", "as", "date", "NUMBER", "could", "be", "brought", "up", "to", "date", "with", "a", "configuration", "preference", "to", "support", "either", "HTML", "NUMBER", "input", "Formtastic", "s", "classic", "although", "over", "engineered", "solution", "or", "Rails", "awful", "build", "in", "one", "that", "everyone", "seems", "to", "love", "NUMBER", "More", "thought", "needs", "to", "be", "put", "into", "how", "we", "support", "every", "HTML", "NUMBER", "date", "picker", "format", "date", "month", "week", "time", "datetime", "datetime", "local", "all", "the", "attributes", "etc", "NUMBER", "sorry", "for", "spam", "don", "t", "know", "how", "else", "to", "subscribe", "for", "update", "to", "an", "issue", "Would", "be", "great", "to", "have", "support", "for", "NUMBER", "hour", "AM", "PM", "datetime", "input", "as", "well", "NUMBER", "justinfrench", "be", "we", "starting", "to", "use", "javascript", "on", "NUMBER", "I", "m", "use", "like", "that", "erb", "TAG", "TAG", "object_date", "NUMBER", "datepicker", "TAG", "It", "works", "fine", "for", "me", "NUMBER", "What", "have", "you", "in", "your", "mind", "Can", "you", "give", "some", "advice", "on", "what", "those", "easy", "work", "arounds", "be", "for", "rails", "NUMBER", "Thanks", "in", "advance", "NUMBER", "I", "m", "guessing", "about", "not", "do", "that", "recently", "NUMBER", "Some", "people", "uses", "prototype", "others", "query", "others", "exotic", "frameworks", "exotic", "only", "for", "small", "apps", "like", "YUI", "and", "ExtJS", "NUMBER", "We", "can", "make", "a", "wiki", "page", "telling", "how", "to", "use", "custom", "date", "pickers", "like", "my", "first", "suggestion", "for", "jQuery", "UI", "NUMBER", "The", "jQueryUI", "datepicker", "controls", "and", "jquery", "ui", "timepicker", "addon", "work", "fine", "at", "least", "in", "Rails", "NUMBER", "with", "formtastic", "NUMBER", "I", "ve", "also", "be", "doing", "a", "bit", "with", "jquery", "mulitpleselect", "and", "it", "s", "work", "fine", "with", "formatastic", "as", "well", "NUMBER", "All", "said", "it", "would", "be", "nice", "to", "see", "sexy", "date", "time", "controls", "build", "into", "formtastic", "NUMBER", "Please", "please", "I", "d", "be", "so", "excited", "to", "have", "a", "simple", "to", "summon", "widget", "like", "Basecamp", "uses", "GUI", "calendar", "for", "date", "plus", "integrated", "NUMBER", "hour", "drop", "downs", "for", "hour", "minute", "be", "pm", "NUMBER", "I", "don", "t", "care", "much", "for", "the", "slider", "time", "select", "attempts", "I", "ve", "seen", "while", "searching", "for", "my", "idea", "of", "a", "perfect", "datetimeselect", "widget", "Thanks", "Justin", "NUMBER", "I", "understand", "and", "respect", "your", "philosophy", "NUMBER", "I", "get", "carried", "away", "for", "a", "moment", "there", "with", "optimism", "that", "my", "narrow", "needs", "were", "going", "to", "be", "answered", "by", "what", "I", "realize", "be", "intended", "to", "be", "a", "broad", "and", "unconstrained", "foundation", "NUMBER", "I", "really", "do", "love", "what", "you", "be", "doing", "with", "Formtastic", "so", "I", "ll", "accept", "it", "for", "what", "it", "be", "and", "continue", "to", "work", "toward", "my", "idea", "of", "the", "ideal", "datetime", "input", "widget", "NUMBER", "I", "appreciate", "that", "you", "took", "the", "time", "to", "reply", "NUMBER", "Steve", "I", "didn", "t", "this", "before", "but", "I", "know", "this", "be", "possible", "I", "don", "t", "care", "enough", "about", "this", "so", "if", "you", "want", "it", "go", "for", "it", "otherwise", "we", "should", "just", "close", "it", "up", "I", "will", "check", "that", "this", "weekend", "Bumped", "to", "NUMBER", "Keep", "open", "to", "remember", "I", "change", "the", "generator", "today", "and", "I", "have", "to", "test", "with", "a", "run", "application", "to", "be", "sure", "that", "s", "ok", "NUMBER", "I", "will", "do", "this", "before", "release", "NUMBER", "There", "was", "a", "bug", "I", "run", "into", "where", "inputs_for_nested_attributes", "was", "exiting", "out", "of", "the", "block", "if", "the", "associated", "model", "had", "more", "then", "one", "record", "associated", "with", "it", "NUMBER", "This", "was", "due", "to", "it", "use", "a", "proc", "and", "calling", "return", "inside", "the", "proc", "NUMBER", "I", "have", "a", "fix", "up", "in", "my", "fork", "LINK", "on", "both", "my", "master", "branch", "and", "my", "bug", "fix", "for", "inputs_for_nested_attributes", "branch", "There", "be", "also", "test", "associated", "with", "this", "patch", "NUMBER", "Looks", "good", "tag", "with", "bug", "NUMBER", "and", "needs", "review", "NUMBER", "Anyone", "else", "want", "to", "chime", "in", "NUMBER", "for", "merge", "NUMBER", "Good", "fix", "for", "recursivly", "calling", "inputs_for_nested_attributes", "NUMBER", "pull", "in", "I", "would", "reopen", "that", "NUMBER", "I", "have", "the", "same", "behavior", "and", "I", "had", "to", "do", "TAG", "TAG", "TAG", "xxx", "TAG", "TAG", "instead", "of", "TAG", "TAG", "xxx", "TAG", "The", "latter", "be", "showing", "ONLY", "ONE", "record", "from", "child", "collection", "NUMBER", "I", "just", "run", "into", "warden", "s", "issue", "today", "and", "would", "like", "to", "ask", "if", "this", "can", "be", "re", "opened", "NUMBER", "field_for", "in", "Rails", "_does_", "iterate", "over", "members", "of", "association", "NUMBER", "semantic_fields_for", "should", "mirror", "fields_for", "behavior", "NUMBER", "Formtastic", "works", "fine", "NUMBER", "While", "I", "was", "work", "on", "the", "test", "case", "for", "this", "I", "find", "bug", "in", "my", "own", "code", "NUMBER", "Sorry", "for", "the", "noise", "and", "thanks", "for", "great", "response", "NUMBER", "why", "do", "formtastic", "enter", "the", "size", "of", "the", "input", "feld", "the", "column", "length", "or", "the", "default", "config", "be", "there", "a", "setting", "to", "disable", "that", "doesn", "t", "make", "sense", "but", "you", "can", "do", "this", "TAG", "lt", "f", "NUMBER", "input", "field", "input_html", "maxlength", "nil", "TAG", "The", "reason", "I", "did", "it", "was", "because", "I", "find", "that", "text", "field", "fell", "into", "one", "of", "two", "categories", "in", "my", "own", "designs", "NUMBER", "they", "had", "a", "short", "size", "limit", "eg", "NUMBER", "for", "something", "like", "a", "zip", "code", "so", "should", "be", "presented", "as", "such", "NUMBER", "they", "had", "a", "long", "limit", "eg", "NUMBER", "the", "Rails", "default", "and", "should", "be", "presented", "big", "in", "the", "form", "NUMBER", "NUMBER", "isn", "t", "an", "appropriate", "size", "so", "we", "cap", "those", "at", "NUMBER", "or", "something", "NUMBER", "The", "width", "of", "inputs", "should", "be", "do", "with", "CSS", "it", "s", "a", "presentation", "thing", "and", "CSS", "will", "override", "these", "attribute", "values", "NUMBER", "They", "re", "simply", "there", "to", "provide", "some", "kind", "of", "presentation", "that", "makes", "sense", "when", "the", "form", "be", "presented", "unstyled", "NUMBER", "Are", "they", "cause", "you", "problem", "If", "so", "please", "go", "into", "detail", "NUMBER", "Closing", "this", "ticket", "for", "now", "NUMBER", "Justin", "to", "your", "point", "NUMBER", "zip", "code", "be", "have", "a", "length", "of", "NUMBER", "in", "the", "US", "NUMBER", "When", "I", "upgrade", "to", "NUMBER", "it", "has", "start", "restricting", "me", "to", "a", "max", "length", "of", "NUMBER", "I", "can", "t", "seem", "to", "get", "past", "this", "other", "than", "to", "hardcode", "the", "maxlength", "into", "the", "tag", "which", "seems", "silly", "NUMBER", "I", "wasn", "t", "having", "this", "problem", "in", "v", "NUMBER", "It", "would", "be", "great", "if", "formtastic", "could", "generate", "dt", "label", "with", "the", "dd", "in", "place", "of", "a", "usual", "li", "NUMBER", "There", "s", "a", "fork", "out", "there", "that", "allows", "alternate", "rendering", "engines", "to", "be", "put", "in", "place", "and", "one", "way", "or", "another", "Formtastic", "will", "be", "made", "less", "opinionated", "about", "markup", "sometime", "between", "NUMBER", "and", "NUMBER", "I", "m", "going", "to", "close", "this", "specific", "issue", "however", "because", "it", "s", "not", "in", "the", "forseeable", "future", "NUMBER", "I", "wonder", "if", "this", "might", "be", "worth", "considering", "again", "at", "this", "point", "now", "that", "NUMBER", "rc", "NUMBER", "be", "out", "I", "would", "also", "agree", "that", "definition", "lists", "hashes", "be", "more", "semantic", "than", "ordered", "lists", "arrays", "to", "define", "labels", "and", "their", "values", "NUMBER", "See", "e", "NUMBER", "g", "NUMBER", "this", "discussion", "here", "LINK", "use", "definition", "lists", "dl", "dd", "dt", "tags", "for", "html", "form", "instead", "of", "tables", "I", "like", "how", "the", "commit_button", "automatically", "displays", "create", "or", "update", "depending", "on", "the", "state", "of", "the", "model", "it", "be", "attached", "to", "NUMBER", "However", "I", "generally", "only", "want", "the", "button", "to", "display", "create", "or", "update", "as", "oppose", "to", "create", "some_really_ugly_class_name", "or", "update", "some_really_ugly_class_name", "NUMBER", "I", "can", "t", "seem", "to", "find", "any", "options", "for", "keep", "the", "create", "update", "but", "not", "including", "the", "model", "name", "if", "there", "be", "already", "a", "way", "to", "do", "this", "my", "apologies", "NUMBER", "I", "think", "it", "would", "be", "nice", "if", "an", "option", "could", "be", "pass", "in", "so", "the", "model", "name", "was", "not", "display", "on", "the", "button", "NUMBER", "I", "ve", "be", "use", "this", "slight", "alteration", "of", "commit_button", "LINK", "Never", "mind", "my", "last", "comment", "NUMBER", "doesn", "t", "make", "sense", "if", "your", "sharing", "a", "partial", "between", "state", "NUMBER", "you", "could", "use", "i", "NUMBER", "n", "which", "would", "solve", "the", "problem", "NUMBER", "The", "preferred", "way", "to", "do", "this", "be", "with", "i", "NUMBER", "n", "NUMBER", "An", "alternative", "be", "to", "specify", "the", "label", "in", "the", "view", "f", "NUMBER", "commit_button", "label", "params", "action", "new", "Create", "Update", "Modifying", "the", "code", "be", "also", "a", "perfectly", "good", "solution", "I", "m", "not", "inclined", "to", "add", "any", "more", "features", "to", "the", "buttons", "until", "the", "exist", "work", "be", "complete", "closing", "this", "issue", "for", "now", "NUMBER", "So", "commit_button", "still", "doesn", "t", "care", "bout", "I", "NUMBER", "n", "NUMBER", "I", "have", "these", "lines", "in", "my", "locale", "in", "Russian", "this", "be", "just", "an", "example", "NUMBER", "yml", "helpers", "Default", "translation", "keys", "for", "submit", "FormHelper", "submit", "create", "Create", "model", "update", "Update", "model", "submit", "Save", "model", "But", "nothing", "happens", "NUMBER", "It", "feels", "wrong", "because", "locales", "be", "there", "for", "it", "NUMBER", "Why", "do", "we", "need", "redundant", "logic", "in", "the", "views", "to", "fill", "labels", "Guess", "I", "should", "use", "good", "old", "plain", "f", "NUMBER", "submit", "As", "you", "may", "know", "screen", "readers", "don", "t", "read", "any", "non", "form", "relate", "tags", "when", "in", "form", "mode", "NUMBER", "That", "means", "both", "inline", "hints", "and", "inline", "error", "will", "be", "ignored", "by", "screen", "readers", "since", "they", "re", "inside", "paragraph", "tags", "NUMBER", "The", "solution", "would", "be", "to", "put", "them", "inside", "labels", "NUMBER", "I", "guess", "there", "be", "at", "least", "two", "choices", "NUMBER", "Wrapping", "them", "inside", "the", "element", "s", "label", "TAG", "My", "label", "TAG", "My", "error", "TAG", "TAG", "This", "one", "makes", "both", "markup", "and", "CSS", "quite", "complicated", "NUMBER", "The", "other", "one", "would", "be", "to", "use", "another", "label", "TAG", "My", "label", "TAG", "TAG", "TAG", "My", "error", "TAG", "I", "ve", "find", "an", "article", "about", "multiple", "labels", "error", "and", "screen", "readers", "LINK", "_form_labels_and_screen_readers", "NUMBER", "I", "m", "not", "sure", "if", "the", "screen", "reader", "support", "it", "mentions", "still", "applies", "it", "s", "a", "year", "and", "a", "half", "old", "after", "all", "NUMBER", "Thanks", "NUMBER", "Still", "valid", "for", "recent", "screen", "readers", "I", "don", "t", "know", "any", "screen", "readers", "or", "which", "be", "the", "most", "use", "NUMBER", "not", "for", "NUMBER", "I", "ve", "made", "a", "new", "buttons", "branch", "with", "my", "efforts", "from", "RailsCamp", "NUMBER", "update", "to", "work", "with", "master", "and", "Rails", "NUMBER", "while", "at", "RailsCamp", "NUMBER", "Still", "not", "convinced", "that", "I", "ve", "get", "it", "all", "right", "but", "it", "s", "mergable", "into", "master", "at", "least", "NUMBER", "What", "s", "left", "How", "can", "I", "help", "I", "don", "t", "like", "the", "solution", "or", "the", "API", "yet", "NUMBER", "this", "was", "an", "excersize", "in", "bringing", "the", "branch", "up", "to", "master", "NUMBER", "what", "I", "m", "trying", "to", "say", "be", "that", "I", "don", "t", "think", "I", "find", "the", "right", "balance", "in", "the", "DSL", "and", "the", "presentation", "and", "I", "plan", "to", "revisit", "this", "a", "lot", "but", "I", "m", "always", "keen", "for", "feedback", "before", "I", "go", "and", "hack", "up", "massive", "chunks", "of", "code", "NUMBER", "What", "exactly", "do", "you", "mean", "by", "pretty", "buttons", "Are", "you", "talking", "about", "the", "styling", "of", "lt", "button", "gt", "elements", "Any", "progress", "on", "this", "Is", "there", "any", "way", "to", "create", "TAG", "tags", "rather", "than", "TAG", "Hey", "Justin", "The", "activo", "theme", "will", "greatly", "benefit", "from", "this", "feature", "as", "it", "uses", "the", "Button", "element", "NUMBER", "The", "output", "use", "case", "would", "be", "button", "class", "button", "type", "submit", "img", "src", "stylesheets", "themes", "activo", "images", "icons", "tick", "NUMBER", "png", "alt", "Save", "Save", "button", "So", "maybe", "the", "ability", "to", "pass", "a", "block", "or", "something", "that", "can", "override", "the", "inner", "content", "o", "See", "NUMBER", "for", "a", "partial", "implementation", "closing", "NUMBER"], "text_count": [0, 17523, 4094, 1997, 1313, 138, 1399, 10, 74, 2093, 2466, 5089, 2515, 1613, 1977, 625, 0, 0, 0, 0, 5016, 1570, 867, 639, 884, 754, 0, 0, 0, 0, 11525, 6443, 5182, 92, 2863, 620, 0, 0, 0, 0, 12996, 61, 4046, 3817, 3616, 0, 0, 0, 0, 0, 3397, 1391, 1802, 814, 1401, 613, 1230, 0, 0, 0, 9535, 648, 7842, 548, 0, 0, 0, 0, 0, 0, 8228, 966, 5691, 2987, 1032, 0, 0, 0, 0, 0, 11108, 4711, 1022, 4852, 521, 505, 0, 0, 0, 0, 772, 3335, 277, 0, 0, 0, 0, 0, 0, 0, 11910, 2745, 6865, 2371, 0, 0, 0, 0, 0, 0, 23873, 43736, 1002, 2620, 485, 502, 0, 0, 0, 0, 55693, 232, 39981, 381, 8754, 13999]}]