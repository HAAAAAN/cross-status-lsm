[{"repo": "FlameGraph", "type": "elite", "title": "", "number of text": 25, "text": "  Excellent, thanks Adrien!\n\nI like how the ancestor frames are faded, which I think can indicate that only partial widths are visible. The top most frame (the one clicked on) I think shouldn't be faded, since that's showing the full width, for consistency. It's minor, and can be fixed later.\n  This is awesome Saruspete, thanks!\n\nSomething minor to do later: when zoomed, I'd still like to see the lower ancestry frames.\n  thanks!\n  thanks!\n  great, thanks!\n  Yes, thanks, this allows a different class of issues to be solved easily that the origin flame graph doesn't do, as per your examples. I've already been using this type, but I've been contemplating how best to visualize it. I'll merge this commit (thanks), and then try to add an additional option to invert the flame graph so that it appears as icicles, for use with stack-reversed, which would preserve the top-down order as with the normal flame graph.\n  Thanks. For many applications, the output will be dominated by the pool of blocked worker threads -- which may not be very interesting in most cases. The use case that comes to mind is actually when gdb is all I've got, and I do want to do CPU profiling, and achieve this by filtering the blocked threads manually (grep -v), just like I do with kernel profiling and removing cpu_idle threads.\n  thanks!\n  Wow, the palette-example-broken.svg example really works, and an efficient way to do it - switching to a different --colors palette for the differences. I'll be trying this out myself for similar debugging cases. Thanks!\n  thanks!\n  thanks!\n  Thanks; yes, we can drop floating point if it is a problem.\n  Thanks! Yes, this had been a problem with some flame graphs.\n  thanks!\n  Thanks. Now I'm really learning Perl!\n  ok, I think I figured out a use case: I could micro-benchmark over a fixed time interval, say for non-regression testing, and then show each flame graph over the same time range to match the interval (with the missing samples due to off-CPU blocking).\n  got it, thanks!\n  thanks!\n  excellent, thanks! building a linkable flame graph to functions in a source browser should be fun\n  impressive, thanks!\n  thanks!\n  The first bullet was cut off - but sounded interesting so far. :) The diffs have looked good so far, and have kept the program short which is great.\n Sounds great! I just tried NYTProf on a small sample Perl program, and it worked great, but I can see that once the program gets large a Flame Graph may really help wade through all the data. Should identify inclusive/exclusive time visually too, which should be neat.\n  thanks!\n  thanks!\n", "text_all_count": 474, "text_word_token": ["Excellent", "thanks", "Adrien", "I", "like", "how", "the", "ancestor", "frames", "be", "faded", "which", "I", "think", "can", "indicate", "that", "only", "partial", "widths", "be", "visible", "NUMBER", "The", "top", "most", "frame", "the", "one", "clicked", "on", "I", "think", "shouldn", "t", "be", "faded", "since", "that", "s", "showing", "the", "full", "width", "for", "consistency", "NUMBER", "It", "s", "minor", "and", "can", "be", "fix", "later", "NUMBER", "This", "be", "awesome", "Saruspete", "thanks", "Something", "minor", "to", "do", "later", "when", "zoomed", "I", "d", "still", "like", "to", "see", "the", "lower", "ancestry", "frames", "NUMBER", "thanks", "thanks", "great", "thanks", "Yes", "thanks", "this", "allows", "a", "different", "class", "of", "issue", "to", "be", "solve", "easily", "that", "the", "origin", "flame", "graph", "doesn", "t", "do", "as", "per", "your", "examples", "NUMBER", "I", "ve", "already", "be", "use", "this", "type", "but", "I", "ve", "be", "contemplating", "how", "best", "to", "visualize", "it", "NUMBER", "I", "ll", "merge", "this", "commit", "thanks", "and", "then", "try", "to", "add", "an", "additional", "option", "to", "invert", "the", "flame", "graph", "so", "that", "it", "appears", "as", "icicles", "for", "use", "with", "stack", "reversed", "which", "would", "preserve", "the", "top", "down", "order", "as", "with", "the", "normal", "flame", "graph", "NUMBER", "Thanks", "NUMBER", "For", "many", "applications", "the", "output", "will", "be", "dominated", "by", "the", "pool", "of", "blocked", "worker", "threads", "which", "may", "not", "be", "very", "interesting", "in", "most", "cases", "NUMBER", "The", "use", "case", "that", "comes", "to", "mind", "be", "actually", "when", "gdb", "be", "all", "I", "ve", "get", "and", "I", "do", "want", "to", "do", "CPU", "profiling", "and", "achieve", "this", "by", "filtering", "the", "blocked", "threads", "manually", "grep", "v", "just", "like", "I", "do", "with", "kernel", "profiling", "and", "remove", "cpu_idle", "threads", "NUMBER", "thanks", "Wow", "the", "palette", "example", "broken", "NUMBER", "svg", "example", "really", "works", "and", "an", "efficient", "way", "to", "do", "it", "switching", "to", "a", "different", "colors", "palette", "for", "the", "differences", "NUMBER", "I", "ll", "be", "trying", "this", "out", "myself", "for", "similar", "debugging", "cases", "NUMBER", "Thanks", "thanks", "thanks", "Thanks", "yes", "we", "can", "drop", "floating", "point", "if", "it", "be", "a", "problem", "NUMBER", "Thanks", "Yes", "this", "had", "be", "a", "problem", "with", "some", "flame", "graphs", "NUMBER", "thanks", "Thanks", "NUMBER", "Now", "I", "m", "really", "learning", "Perl", "ok", "I", "think", "I", "figured", "out", "a", "use", "case", "I", "could", "micro", "benchmark", "over", "a", "fix", "time", "interval", "say", "for", "non", "regression", "test", "and", "then", "show", "each", "flame", "graph", "over", "the", "same", "time", "range", "to", "match", "the", "interval", "with", "the", "miss", "samples", "due", "to", "off", "CPU", "blocking", "NUMBER", "get", "it", "thanks", "thanks", "excellent", "thanks", "build", "a", "linkable", "flame", "graph", "to", "function", "in", "a", "source", "browser", "should", "be", "fun", "impressive", "thanks", "thanks", "The", "first", "bullet", "was", "cut", "off", "but", "sounded", "interesting", "so", "far", "NUMBER", "The", "diffs", "have", "looked", "good", "so", "far", "and", "have", "keep", "the", "program", "short", "which", "be", "great", "NUMBER", "Sounds", "great", "I", "just", "tried", "NYTProf", "on", "a", "small", "sample", "Perl", "program", "and", "it", "worked", "great", "but", "I", "can", "see", "that", "once", "the", "program", "gets", "large", "a", "Flame", "Graph", "may", "really", "help", "wade", "through", "all", "the", "data", "NUMBER", "Should", "identify", "inclusive", "exclusive", "time", "visually", "too", "which", "should", "be", "neat", "NUMBER", "thanks", "thanks"], "text_count": [0, 193, 39, 12, 9, 1, 10, 0, 0, 27, 31, 46, 39, 20, 27, 3, 0, 0, 0, 0, 89, 33, 19, 11, 15, 10, 0, 0, 0, 0, 140, 88, 53, 3, 37, 7, 0, 0, 0, 0, 119, 6, 51, 67, 35, 0, 0, 0, 0, 0, 30, 11, 11, 9, 13, 3, 12, 0, 0, 0, 119, 9, 80, 18, 0, 0, 0, 0, 0, 0, 74, 9, 44, 25, 11, 0, 0, 0, 0, 0, 157, 57, 18, 77, 15, 5, 0, 0, 0, 0, 13, 62, 5, 0, 0, 0, 0, 0, 0, 0, 135, 23, 86, 27, 0, 0, 0, 0, 0, 0, 193, 363, 5, 20, 5, 3, 0, 0, 0, 0, 581, 2, 462, 8, 117, 107]}, {"repo": "FlameGraph", "type": "nonelite", "title": "", "number of text": 39, "text": "  Hello,\n\nHere are the features added : \n- requested on pull request #35 display ancestors\n- Keeps the padding\n- optimization when using eavy stacks. currently, 75% of time is taken by update_text()::getSubStringLength.\n\nAdrien. \n  This extends svg script to zoom/unzoom.\nThis was only tested under chromium, but should not break from standard svg.\n\nYou may consider moving the \"Reset Zoom\" button to a more \"clean\" position.\n zoom / unzoom seems to work fine on Firefox too.\n\nHowever I noticed that if you click on an empty box, because it is too narrow, then the zoomed view is empty too. Could this limitation be fixed ? It would be very useful to drill down complex flame graphs.\n\nI uploaded an example of a such flame graph [here](http://cdn.unportant.info/flamegraph35.svg). You can easily reproduce the issue by clicking on one of the left boxes.\n Thanks for testing cykl. Do you mean the zoomed boxes doesn't have the text inside ? \nI tried to implement that, but I don't know how to get the \"text\" box, generated by the \"title\" to be re-calculated by the renderer.\n\nI'll try to implemented that. I found it also limitating :(\n I just read flamegraph.pl source code. Basically the clipping is done in the Perl script and not in the browser. The only way to achieve what we want is to always put the full string in the text element and find a way to let the browser do the clipping.\n\nUnfortunately, it seems that most browsers do not support the CSS3/SVG2 `text-overflow` property and SVG 1 does not provide an easy way to automatically manage the overflow. I believe that a rect clipMask could be used but then zoom_child and zoom_reset must be updated to update the mask too ... I can give it a try if you want, but I am definitively not fluent in SVG. \n Sorry, I'm late\nIndeed, I saw the \"text\" was generated by flamegraph itself. As I don't want to break compatibility, I'll do it in javascript. Should be only a few lines more without need of css3 or svg2.\n Yup JavaScript does the job. I quickly wrote [a proof of concept](http://cdn.unportant.info/flamegraph35.diff.txt)\n\nThe initial clipping should still be done by flamegraph.pl. Otherwise it would break png creation (`convert out.svg out.png`). I can polish up the patch if needed. \n Ok, I added some fixes and parts of your diff without touching a lot to the standard structure.\nAlso, I'm using the \"title\" instead of adding another attribute to keep small size when a lot of attributes are generated. \n\nIt's still working correctly with convert. Can you test it with firefox ? \n Tested with Chromium 38 and Firefox 24.1.1 on Windows, also working.\n I can see three issues:\n- Using the title to fill the `<text>` fine, and it avoids to weight down the SVG file. However it is perfectly valid for `$func` to contain spaces. You cannot split on the first space. It should be fine to split on the first `(` starting from the right.\n- \"..\" is sometimes displayed in narrow cells. I believe that it's better to leave these cells blank. It does not convey any useful information but clutter up the graph\n- In complex flame graphs, when zoomed in, the text is quite often [misaligned](http://cdn.unportant.info/Screenshot_2014-10-13_22:01:00.png).\n Thanks for pointing them :)\n- Should be fixed with  `var txt = e.childNodes[1].textContent.replace(/\\([^(]*\\)/,\"\");`.\n- Should be fixed also in next commit. There is still some chars that will dissapear when zooming then reset. This is because of the width calculated is using the 2 last chars, which are often bigger than \"..\".  To fix it, I can pre-calculate the width of \"..\" and use this value (instead of using the size of the 2 last chars that will be replaced by \"..\").  Do you think it is worth it ?\n- I'm trying to fix the misalignment. It's bacause of the 3px added on the `text`. this small space takes a huge size when the ratio is high.  I'm testing it and try to commit it tonight.\n Maybe because of the rouding or float calculation, I wasn't able to fix properly the \"+3\" pixels. So I aligned the \"x\" with the parent rect.\n\nMaybe there is too many index relations between the DOM Nodes (2 is rect, 4 is text, etc...). Maybe replacing these numbers with a function may be cleaner, but it'll also add complexity.\n @cykl can you provide me a heavy stack (like the one used to generate flamegraph35.svg) ? I'd like to test what a search function for a tagname will imply as performance hit, versus direct index.\n @Saruspete If you want a beta tester or sharing ideas, feel free to contact me via email to stop polluting brendan's inbox :) \n\nThe stack straces I use in my unit tests for hprof2flamegraph are quite heavy, you can use them:\n\n```\ngit clone https://github.com/cykl/hprof2flamegraph.git\ncd hprof2flamegraph/\n./hprof2flamegraph.py tests/ref/cpu\\=samples\\,depth\\=100\\,interval\\=10\\,lineno\\=y\\,thread\\=y.hprof.txt \n```\n  OK, this is really minor but it still bugs me :)\n  ...tom names\n\nIn one of my applications which uses prctl() to set readable thread names,\nI have perf script output that looks like:\n\nfoobar [worker] 21332 cycles:\n                  67e2f0 my_func\n                  64138b my_other_func\n                  ...\n\nThis confused stackcollapse-perf because there weren't two ':' in the summary\nline. This patch changes the regex to just look for lines ending in ':' as\nsummaries.\n  Example usage:\n    pmcstat -S unhalted-cycles -O pmc.out\n    pmcstat -R pmc.out -z16 -G pmc.stacks\n    stackcollapse-pmc.pl pmc.stacks > pmc.folded\n  Some thoughts on the FlameGraph (Take nginx process with ngx_lua module as an example):\n\nFlame Graph shows the bottom of the stack trace clearly, which are usually \u201c_start\u201d, \u201cmain\u201d, but we seldom care about these functions. We care about how much time spent on the top of the stack, but these functions are hard to see because these functions  may have some different calling path. And that causes the same function to be split in different part of the graph. The top of the stack trace is the part where CPU is spending time on, but sometimes it\u2019s hard to see the top of the stack trace on FlameGraph, because the top is usually very narrow. \n\nIf we reverse the stack trace, it will be better to focus on the functions which are costing CPU time. And it will show how much time is spent on each function itself (not including the time it calls other functions), thus it\u2019s very clear to see which function are costing more CPU time.\n\nCompare there two Flame Graphs:\n\nThis is an origin Flame Graph https://www.evernote.com/shard/s46/sh/fd0b5012-cb87-41d3-97ed-6a328653628a/965c688b95924610d1992beffc662b62, we can see that deflating cost a lot of CPU time. But other hot spots are not clear to see.\n\nThis is an stack-reversed Flame Graph generated using the same stack trace as the previous one. https://www.evernote.com/shard/s46/sh/51604b00-1484-4f27-93f7-fb4726c61657/fab39d4b1453135639b2207f32a1e89e. Since it is stack reversed, so the top is caller, and the bottom is callee. We can see except system call \u201caccept4\u201d, \u201cepoll_wait\u201d and \u201cwritev\u201d, \u201cdeflate_slow\u201d, \u201clongest_match\u201d, \u201ccompress_block\u201d and \u201cbuild_tree\u201d cost about 15% of CPU time. And they belongs to deflating. This hot spot is already shown on origin Flame Graph. And besides that,  we can also see \u201clj_str_new\u201d costs about 4.15% of CPU time, which is totally hidden in the origin Flame Graph. And some small hot spots like \u201cngx_http_email_parse_email\u201d can also be found in stack-reversed Flame Graph.\n  For some reason (?) perf could not generate backtraces for my application so I used the poor man's profiler instead.\n Indeed. I was using this in an application which was not supposed to be idle.\n\nI guess it should be possible to write a gdb script to do more complex sampling (\"sample the stack each time you enter into function X and argument Y=y\") which is not possible with perf AFAIK.\n  The SVG output did not take an encoding attribute which could\nmake the displayer fail to load the XML file when the input\nbacktrace data contains special byte sequences.\n  Hello Brendan!\n\nFirst of all, I was at LISA13, attended both of your talks; loved them. I have been using flamegraph quite a bit since then, thank you for creating this tool!\n\nThe feature I added creates a palette file so the colors will be consistent. I know you have the --hash option; but that is not quite what I was looking for (also the hash option colors (for what I'm doing) are very close together so It's hard to tell anything apart). \n\nThis lets me have a baseline color map, and on the second flamegraph I set a different $colors and it makes the differences really stand out. If you take a look at the example svgs I have put in the demos dir, you will see what I mean (updated documentation with more details).\n\nAlso, this lets you manually edit the colors so you can set some key functions to hot pink or whatever to make them stand out like a sore thumb. I imagine building up a very large palette file over time with many custom colors for particular symbols. \n\nLastly if you don't think this is a good fit, no worries. \n\nHave a good day.\n\n-Shawn\n\nNote1: My perl is rusty (switched to python) and the perl mafia may kill me for not using Storable to write the hash to disk, but I was following your lead of not using any additional modules. :)\n\nNote2: From the looks of it you are using 8 column width tab tabs, and Tim Bunce is using space tabs. I tried to make it all tab tabs but fear I may have screwed up the spacing. I use 4 column space tabs so I'm a stranger in a strange land here :) . I added a vim modeline at the bottom of what it appears you are using. If you let me know your actual settings I'll fix the tabs/spacing and do another pull request. \n\nNote3: I couldn't think of a better option/name for \"--cp\" happy to call it something else if you think of something better.\n  This fixes handling of function names with '::' involved, which\nshow up in C++ if you pass the perf script output through\ndemangling prior to stackcollapse-perf.\n\nAlso disables the skipping of non-kernel code -- perf is equally\nuseful for profiling user applications.\n  Overlay '..' instead of appending, so width calculation stays valid.\nMake font N-width factor an option instead of hardcoded.\nUse a better default N-width factor now that '..' isn't appended.\nUse $info as title text for hover.\n\nThe overall visual effect is that more of the boxes have writing, and there's more text in each as it more closely fits the width of the box.\n  The flamegraph processing requires the addition of many values.\nUsing floating-point values causes cumulative errors. These are\nmost noticable when --total is used because otherwise the graph\nself-scales to the width.\n\nThis patch adds a --factor option that scales the presented values.\nSo instead of providing floating point values in the data, the data can\nbe provided as integers and the result scaled to suit using --factor.\n\np.s The problem with floats in severe enough that I'd recommend removing\nsupport for them. Just change the regex back to \\d+.\n  This avoids empty whitespace (sometimes lots) above the flames that's\ncaused by deep stacks that are too narrow to be seen.\n\nRequires scanning the nodes twice, but that's offset by optimizations,\nespecially deleting the nodes that aren't going to be shown.\n  We know \";\" is safe because it's the primary input delimiter.\n    This simply makes the \"all\" line at the bottom of the flame graph wider.\n  Sorry. Only just noticed this regression.\n  \"be generous in what you accept\"\n\nOn some platforms the timing data from NYTProf is in tenths of a microsecond.\n  Place each rect and text pair into a g block.\nReplace the duplicated rect and text onmouseover with a single g onmouseover.\nThis reduces the size of the SVG file. It also fixes the loss of the black border when mousing over the text.\n\nAn external file can be used to specify attributes for individual functions. So, for example, functions can now be given links.\n\n(They can't be given specific colors via this mechanism, at least not currently, because the colour of the <g> is overridden by the colour of the <rect>. YAGNI applies for now.)\n  Optimizations to speed processing of large files and/or slow machines.\n  Per issue #8 I'm working on integrating flame graphs into Perl's Devel::NYTProf profiler.\n\nI've implemented a few features that would help people typing to do similar integrations.\n  Hello Brendan.\n\nI'm working on integrating flame graphs into Perl's Devel::NYTProf profiler.\nI'd like to suggest a few features that would help me with that integration.\n- Add option(s) to make the svg areas be links. Something like --linkfmt \"../foo/%s/src\" where the %s gets replaced with the function name. So when \n- Options to change the wordings: the title, \"Function\", \"sample\" etc. For my use \"Function\" would be \"Subroutine\" and \"samples\" would be \"microseconds\".\n- Add separators into the count, so 18459905 would be shown as 18,459,905.\n\nIf you like the ideas I'll develop them and send you pull requests.\n I don't know what I meant to say with that first bullet, but the way I've implemented the linking seems much better anyway.\n\nI think I'm done now, baring any problems I find in actual usage.\n\nThe Flame Graph will be the headline feature of the NYTProf v5 release. Thanks!\n I think we can call this [done](http://blog.timbunce.org/2013/04/08/nytprof-v5-flaming-precision/) now :)\nMany thanks Brendan!\n    ", "text_all_count": 2549, "text_word_token": ["Hello", "Here", "be", "the", "features", "add", "request", "on", "pull", "request", "NUMBER", "display", "ancestors", "Keeps", "the", "padding", "optimization", "when", "use", "eavy", "stacks", "NUMBER", "currently", "NUMBER", "of", "time", "be", "taken", "by", "update_text", "getSubStringLength", "NUMBER", "Adrien", "NUMBER", "This", "extend", "svg", "script", "to", "zoom", "unzoom", "NUMBER", "This", "was", "only", "test", "under", "chromium", "but", "should", "not", "break", "from", "standard", "svg", "NUMBER", "You", "may", "consider", "moving", "the", "Reset", "Zoom", "button", "to", "a", "more", "clean", "position", "NUMBER", "zoom", "unzoom", "seems", "to", "work", "fine", "on", "Firefox", "too", "NUMBER", "However", "I", "notice", "that", "if", "you", "click", "on", "an", "empty", "box", "because", "it", "be", "too", "narrow", "then", "the", "zoomed", "view", "be", "empty", "too", "NUMBER", "Could", "this", "limitation", "be", "fix", "It", "would", "be", "very", "useful", "to", "drill", "down", "complex", "flame", "graphs", "NUMBER", "I", "uploaded", "an", "example", "of", "a", "such", "flame", "graph", "here", "LINK", "NUMBER", "You", "can", "easily", "reproduce", "the", "issue", "by", "clicking", "on", "one", "of", "the", "left", "boxes", "NUMBER", "Thanks", "for", "test", "cykl", "NUMBER", "Do", "you", "mean", "the", "zoomed", "boxes", "doesn", "t", "have", "the", "text", "inside", "I", "tried", "to", "implement", "that", "but", "I", "don", "t", "know", "how", "to", "get", "the", "text", "box", "generate", "by", "the", "title", "to", "be", "re", "calculated", "by", "the", "renderer", "NUMBER", "I", "ll", "try", "to", "implement", "that", "NUMBER", "I", "find", "it", "also", "limitating", "I", "just", "read", "flamegraph", "NUMBER", "pl", "source", "code", "NUMBER", "Basically", "the", "clipping", "be", "do", "in", "the", "Perl", "script", "and", "not", "in", "the", "browser", "NUMBER", "The", "only", "way", "to", "achieve", "what", "we", "want", "be", "to", "always", "put", "the", "full", "string", "in", "the", "text", "element", "and", "find", "a", "way", "to", "let", "the", "browser", "do", "the", "clipping", "NUMBER", "Unfortunately", "it", "seems", "that", "most", "browsers", "do", "not", "support", "the", "CSS", "NUMBER", "SVG", "NUMBER", "text", "overflow", "property", "and", "SVG", "NUMBER", "do", "not", "provide", "an", "easy", "way", "to", "automatically", "manage", "the", "overflow", "NUMBER", "I", "believe", "that", "a", "rect", "clipMask", "could", "be", "use", "but", "then", "zoom_child", "and", "zoom_reset", "must", "be", "update", "to", "update", "the", "mask", "too", "NUMBER", "I", "can", "give", "it", "a", "try", "if", "you", "want", "but", "I", "be", "definitively", "not", "fluent", "in", "SVG", "NUMBER", "Sorry", "I", "m", "late", "Indeed", "I", "saw", "the", "text", "was", "generate", "by", "flamegraph", "itself", "NUMBER", "As", "I", "don", "t", "want", "to", "break", "compatibility", "I", "ll", "do", "it", "in", "javascript", "NUMBER", "Should", "be", "only", "a", "few", "lines", "more", "without", "need", "of", "css", "NUMBER", "or", "svg", "NUMBER", "Yup", "JavaScript", "do", "the", "job", "NUMBER", "I", "quickly", "write", "a", "proof", "of", "concept", "LINK", "The", "initial", "clipping", "should", "still", "be", "do", "by", "flamegraph", "NUMBER", "pl", "NUMBER", "Otherwise", "it", "would", "break", "png", "creation", "convert", "out", "NUMBER", "svg", "out", "NUMBER", "png", "NUMBER", "I", "can", "polish", "up", "the", "patch", "if", "needed", "NUMBER", "Ok", "I", "add", "some", "fix", "and", "parts", "of", "your", "diff", "without", "touching", "a", "lot", "to", "the", "standard", "structure", "NUMBER", "Also", "I", "m", "use", "the", "title", "instead", "of", "add", "another", "attribute", "to", "keep", "small", "size", "when", "a", "lot", "of", "attributes", "be", "generate", "NUMBER", "It", "s", "still", "work", "correctly", "with", "convert", "NUMBER", "Can", "you", "test", "it", "with", "firefox", "Tested", "with", "Chromium", "NUMBER", "and", "Firefox", "NUMBER", "on", "Windows", "also", "work", "NUMBER", "I", "can", "see", "three", "issue", "Using", "the", "title", "to", "fill", "the", "TAG", "fine", "and", "it", "avoids", "to", "weight", "down", "the", "SVG", "file", "NUMBER", "However", "it", "be", "perfectly", "valid", "for", "func", "to", "contain", "spaces", "NUMBER", "You", "cannot", "split", "on", "the", "first", "space", "NUMBER", "It", "should", "be", "fine", "to", "split", "on", "the", "first", "starting", "from", "the", "right", "NUMBER", "NUMBER", "be", "sometimes", "display", "in", "narrow", "cells", "NUMBER", "I", "believe", "that", "it", "s", "better", "to", "leave", "these", "cells", "blank", "NUMBER", "It", "do", "not", "convey", "any", "useful", "information", "but", "clutter", "up", "the", "graph", "In", "complex", "flame", "graphs", "when", "zoomed", "in", "the", "text", "be", "quite", "often", "misaligned", "LINK", "_", "NUMBER", "NUMBER", "NUMBER", "_", "NUMBER", "NUMBER", "NUMBER", "png", "NUMBER", "Thanks", "for", "point", "them", "Should", "be", "fix", "with", "var", "txt", "e", "NUMBER", "childNodes", "NUMBER", "NUMBER", "textContent", "NUMBER", "replace", "NUMBER", "Should", "be", "fix", "also", "in", "next", "commit", "NUMBER", "There", "be", "still", "some", "chars", "that", "will", "dissapear", "when", "zooming", "then", "reset", "NUMBER", "This", "be", "because", "of", "the", "width", "calculated", "be", "use", "the", "NUMBER", "last", "chars", "which", "be", "often", "bigger", "than", "NUMBER", "NUMBER", "To", "fix", "it", "I", "can", "pre", "calculate", "the", "width", "of", "NUMBER", "and", "use", "this", "value", "instead", "of", "use", "the", "size", "of", "the", "NUMBER", "last", "chars", "that", "will", "be", "replaced", "by", "NUMBER", "NUMBER", "Do", "you", "think", "it", "be", "worth", "it", "I", "m", "trying", "to", "fix", "the", "misalignment", "NUMBER", "It", "s", "bacause", "of", "the", "NUMBER", "px", "add", "on", "the", "text", "NUMBER", "this", "small", "space", "takes", "a", "huge", "size", "when", "the", "ratio", "be", "high", "NUMBER", "I", "m", "test", "it", "and", "try", "to", "commit", "it", "tonight", "NUMBER", "Maybe", "because", "of", "the", "rouding", "or", "float", "calculation", "I", "wasn", "t", "able", "to", "fix", "properly", "the", "NUMBER", "pixels", "NUMBER", "So", "I", "aligned", "the", "x", "with", "the", "parent", "rect", "NUMBER", "Maybe", "there", "be", "too", "many", "index", "relations", "between", "the", "DOM", "Nodes", "NUMBER", "be", "rect", "NUMBER", "be", "text", "etc", "NUMBER", "NUMBER", "Maybe", "replacing", "these", "numbers", "with", "a", "function", "may", "be", "cleaner", "but", "it", "ll", "also", "add", "complexity", "NUMBER", "cykl", "can", "you", "provide", "me", "a", "heavy", "stack", "like", "the", "one", "use", "to", "generate", "flamegraph", "NUMBER", "svg", "I", "d", "like", "to", "test", "what", "a", "search", "function", "for", "a", "tagname", "will", "imply", "as", "performance", "hit", "versus", "direct", "index", "NUMBER", "Saruspete", "If", "you", "want", "a", "beta", "tester", "or", "sharing", "ideas", "feel", "free", "to", "contact", "me", "via", "email", "to", "stop", "polluting", "brendan", "s", "inbox", "The", "stack", "straces", "I", "use", "in", "my", "unit", "test", "for", "hprof", "NUMBER", "flamegraph", "be", "quite", "heavy", "you", "can", "use", "them", "git", "clone", "LINK", "cd", "hprof", "NUMBER", "flamegraph", "NUMBER", "hprof", "NUMBER", "flamegraph", "NUMBER", "py", "test", "ref", "cpu", "samples", "depth", "NUMBER", "interval", "NUMBER", "lineno", "y", "thread", "y", "NUMBER", "hprof", "NUMBER", "txt", "OK", "this", "be", "really", "minor", "but", "it", "still", "bug", "me", "NUMBER", "tom", "names", "In", "one", "of", "my", "applications", "which", "uses", "prctl", "to", "set", "readable", "thread", "names", "I", "have", "perf", "script", "output", "that", "looks", "like", "foobar", "worker", "NUMBER", "cycles", "NUMBER", "e", "NUMBER", "f", "NUMBER", "my_func", "NUMBER", "b", "my_other_func", "NUMBER", "This", "confused", "stackcollapse", "perf", "because", "there", "weren", "t", "two", "in", "the", "summary", "line", "NUMBER", "This", "patch", "change", "the", "regex", "to", "just", "look", "for", "lines", "ending", "in", "as", "summaries", "NUMBER", "Example", "usage", "pmcstat", "S", "unhalted", "cycles", "O", "pmc", "NUMBER", "out", "pmcstat", "R", "pmc", "NUMBER", "out", "z", "NUMBER", "G", "pmc", "NUMBER", "acks", "stackcollapse", "pmc", "NUMBER", "pl", "pmc", "NUMBER", "acks", "pmc", "NUMBER", "folded", "Some", "thoughts", "on", "the", "FlameGraph", "Take", "nginx", "process", "with", "ngx_lua", "module", "as", "an", "example", "Flame", "Graph", "shows", "the", "bottom", "of", "the", "stack", "trace", "clearly", "which", "be", "usually", "_start", "main", "but", "we", "seldom", "care", "about", "these", "function", "NUMBER", "We", "care", "about", "how", "much", "time", "spent", "on", "the", "top", "of", "the", "stack", "but", "these", "function", "be", "hard", "to", "see", "because", "these", "function", "may", "have", "some", "different", "calling", "path", "NUMBER", "And", "that", "causes", "the", "same", "function", "to", "be", "split", "in", "different", "part", "of", "the", "graph", "NUMBER", "The", "top", "of", "the", "stack", "trace", "be", "the", "part", "where", "CPU", "be", "spending", "time", "on", "but", "sometimes", "it", "s", "hard", "to", "see", "the", "top", "of", "the", "stack", "trace", "on", "FlameGraph", "because", "the", "top", "be", "usually", "very", "narrow", "NUMBER", "If", "we", "reverse", "the", "stack", "trace", "it", "will", "be", "better", "to", "focus", "on", "the", "function", "which", "be", "costing", "CPU", "time", "NUMBER", "And", "it", "will", "show", "how", "much", "time", "be", "spent", "on", "each", "function", "itself", "not", "including", "the", "time", "it", "calls", "other", "function", "thus", "it", "s", "very", "clear", "to", "see", "which", "function", "be", "costing", "more", "CPU", "time", "NUMBER", "Compare", "there", "two", "Flame", "Graphs", "This", "be", "an", "origin", "Flame", "Graph", "LINK", "cb", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "beffc", "NUMBER", "b", "NUMBER", "we", "can", "see", "that", "deflating", "cost", "a", "lot", "of", "CPU", "time", "NUMBER", "But", "other", "hot", "spots", "be", "not", "clear", "to", "see", "NUMBER", "This", "be", "an", "stack", "reversed", "Flame", "Graph", "generate", "use", "the", "same", "stack", "trace", "as", "the", "previous", "one", "NUMBER", "LINK", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "fb", "NUMBER", "c", "NUMBER", "fab", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "Since", "it", "be", "stack", "reversed", "so", "the", "top", "be", "caller", "and", "the", "bottom", "be", "callee", "NUMBER", "We", "can", "see", "except", "system", "call", "accept", "NUMBER", "epoll_wait", "and", "writev", "deflate_slow", "longest_match", "compress_block", "and", "build_tree", "cost", "about", "NUMBER", "of", "CPU", "time", "NUMBER", "And", "they", "belongs", "to", "deflating", "NUMBER", "This", "hot", "spot", "be", "already", "shown", "on", "origin", "Flame", "Graph", "NUMBER", "And", "besides", "that", "we", "can", "also", "see", "lj_str_new", "costs", "about", "NUMBER", "of", "CPU", "time", "which", "be", "totally", "hidden", "in", "the", "origin", "Flame", "Graph", "NUMBER", "And", "some", "small", "hot", "spots", "like", "ngx_http_email_parse_email", "can", "also", "be", "find", "in", "stack", "reversed", "Flame", "Graph", "NUMBER", "For", "some", "reason", "perf", "could", "not", "generate", "backtraces", "for", "my", "application", "so", "I", "use", "the", "poor", "man", "s", "profiler", "instead", "NUMBER", "Indeed", "NUMBER", "I", "was", "use", "this", "in", "an", "application", "which", "was", "not", "supposed", "to", "be", "idle", "NUMBER", "I", "guess", "it", "should", "be", "possible", "to", "write", "a", "gdb", "script", "to", "do", "more", "complex", "sampling", "sample", "the", "stack", "each", "time", "you", "enter", "into", "function", "X", "and", "argument", "Y", "y", "which", "be", "not", "possible", "with", "perf", "AFAIK", "NUMBER", "The", "SVG", "output", "did", "not", "take", "an", "encoding", "attribute", "which", "could", "make", "the", "displayer", "fail", "to", "load", "the", "XML", "file", "when", "the", "input", "backtrace", "data", "contains", "special", "byte", "sequences", "NUMBER", "Hello", "Brendan", "First", "of", "all", "I", "was", "at", "LISA", "NUMBER", "attended", "both", "of", "your", "talks", "loved", "them", "NUMBER", "I", "have", "be", "use", "flamegraph", "quite", "a", "bit", "since", "then", "thank", "you", "for", "creating", "this", "tool", "The", "feature", "I", "add", "creates", "a", "palette", "file", "so", "the", "colors", "will", "be", "consistent", "NUMBER", "I", "know", "you", "have", "the", "hash", "option", "but", "that", "be", "not", "quite", "what", "I", "was", "looking", "for", "also", "the", "hash", "option", "colors", "for", "what", "I", "m", "doing", "be", "very", "close", "together", "so", "It", "s", "hard", "to", "tell", "anything", "apart", "NUMBER", "This", "lets", "me", "have", "a", "baseline", "color", "map", "and", "on", "the", "second", "flamegraph", "I", "set", "a", "different", "colors", "and", "it", "makes", "the", "differences", "really", "stand", "out", "NUMBER", "If", "you", "take", "a", "look", "at", "the", "example", "svgs", "I", "have", "put", "in", "the", "demos", "dir", "you", "will", "see", "what", "I", "mean", "update", "documentation", "with", "more", "details", "NUMBER", "Also", "this", "lets", "you", "manually", "edit", "the", "colors", "so", "you", "can", "set", "some", "key", "function", "to", "hot", "pink", "or", "whatever", "to", "make", "them", "stand", "out", "like", "a", "sore", "thumb", "NUMBER", "I", "imagine", "build", "up", "a", "very", "large", "palette", "file", "over", "time", "with", "many", "custom", "colors", "for", "particular", "symbols", "NUMBER", "Lastly", "if", "you", "don", "t", "think", "this", "be", "a", "good", "fit", "no", "worries", "NUMBER", "Have", "a", "good", "day", "NUMBER", "Shawn", "Note", "NUMBER", "My", "perl", "be", "rusty", "switched", "to", "python", "and", "the", "perl", "mafia", "may", "kill", "me", "for", "not", "use", "Storable", "to", "write", "the", "hash", "to", "disk", "but", "I", "was", "following", "your", "lead", "of", "not", "use", "any", "additional", "modules", "NUMBER", "Note", "NUMBER", "From", "the", "looks", "of", "it", "you", "be", "use", "NUMBER", "column", "width", "tab", "tabs", "and", "Tim", "Bunce", "be", "use", "space", "tabs", "NUMBER", "I", "tried", "to", "make", "it", "all", "tab", "tabs", "but", "fear", "I", "may", "have", "screwed", "up", "the", "space", "NUMBER", "I", "use", "NUMBER", "column", "space", "tabs", "so", "I", "m", "a", "stranger", "in", "a", "strange", "land", "here", "NUMBER", "I", "add", "a", "vim", "modeline", "at", "the", "bottom", "of", "what", "it", "appears", "you", "be", "use", "NUMBER", "If", "you", "let", "me", "know", "your", "actual", "settings", "I", "ll", "fix", "the", "tabs", "space", "and", "do", "another", "pull", "request", "NUMBER", "Note", "NUMBER", "I", "couldn", "t", "think", "of", "a", "better", "option", "name", "for", "cp", "happy", "to", "call", "it", "something", "else", "if", "you", "think", "of", "something", "better", "NUMBER", "This", "fix", "handle", "of", "function", "names", "with", "involved", "which", "show", "up", "in", "C", "if", "you", "pass", "the", "perf", "script", "output", "through", "demangling", "prior", "to", "stackcollapse", "perf", "NUMBER", "Also", "disables", "the", "skipping", "of", "non", "kernel", "code", "perf", "be", "equally", "useful", "for", "profiling", "user", "applications", "NUMBER", "Overlay", "NUMBER", "instead", "of", "appending", "so", "width", "calculation", "stays", "valid", "NUMBER", "Make", "font", "N", "width", "factor", "an", "option", "instead", "of", "hardcoded", "NUMBER", "Use", "a", "better", "default", "N", "width", "factor", "now", "that", "NUMBER", "isn", "t", "appended", "NUMBER", "Use", "info", "as", "title", "text", "for", "hover", "NUMBER", "The", "overall", "visual", "effect", "be", "that", "more", "of", "the", "boxes", "have", "write", "and", "there", "s", "more", "text", "in", "each", "as", "it", "more", "closely", "fits", "the", "width", "of", "the", "box", "NUMBER", "The", "flamegraph", "processing", "requires", "the", "addition", "of", "many", "values", "NUMBER", "Using", "floating", "point", "values", "causes", "cumulative", "error", "NUMBER", "These", "be", "most", "noticable", "when", "total", "be", "use", "because", "otherwise", "the", "graph", "self", "scales", "to", "the", "width", "NUMBER", "This", "patch", "add", "a", "factor", "option", "that", "scales", "the", "presented", "values", "NUMBER", "So", "instead", "of", "provide", "floating", "point", "values", "in", "the", "data", "the", "data", "can", "be", "provide", "as", "integers", "and", "the", "result", "scaled", "to", "suit", "use", "factor", "NUMBER", "p", "NUMBER", "s", "The", "problem", "with", "floats", "in", "severe", "enough", "that", "I", "d", "recommend", "remove", "support", "for", "them", "NUMBER", "Just", "change", "the", "regex", "back", "to", "d", "NUMBER", "This", "avoids", "empty", "whitespace", "sometimes", "lots", "above", "the", "flames", "that", "s", "cause", "by", "deep", "stacks", "that", "be", "too", "narrow", "to", "be", "seen", "NUMBER", "Requires", "scanning", "the", "nodes", "twice", "but", "that", "s", "offset", "by", "optimizations", "especially", "deleting", "the", "nodes", "that", "aren", "t", "going", "to", "be", "shown", "NUMBER", "We", "know", "be", "safe", "because", "it", "s", "the", "primary", "input", "delimiter", "NUMBER", "This", "simply", "makes", "the", "all", "line", "at", "the", "bottom", "of", "the", "flame", "graph", "wider", "NUMBER", "Sorry", "NUMBER", "Only", "just", "notice", "this", "regression", "NUMBER", "be", "generous", "in", "what", "you", "accept", "On", "some", "platforms", "the", "timing", "data", "from", "NYTProf", "be", "in", "tenths", "of", "a", "microsecond", "NUMBER", "Place", "each", "rect", "and", "text", "pair", "into", "a", "g", "block", "NUMBER", "Replace", "the", "duplicate", "rect", "and", "text", "onmouseover", "with", "a", "single", "g", "onmouseover", "NUMBER", "This", "reduces", "the", "size", "of", "the", "SVG", "file", "NUMBER", "It", "also", "fix", "the", "loss", "of", "the", "black", "border", "when", "mousing", "over", "the", "text", "NUMBER", "An", "external", "file", "can", "be", "use", "to", "specify", "attributes", "for", "individual", "function", "NUMBER", "So", "for", "example", "function", "can", "now", "be", "given", "links", "NUMBER", "They", "can", "t", "be", "given", "specific", "colors", "via", "this", "mechanism", "at", "least", "not", "currently", "because", "the", "colour", "of", "the", "TAG", "be", "overridden", "by", "the", "colour", "of", "the", "TAG", "NUMBER", "YAGNI", "applies", "for", "now", "NUMBER", "Optimizations", "to", "speed", "processing", "of", "large", "file", "and", "or", "slow", "machines", "NUMBER", "Per", "issue", "NUMBER", "I", "m", "work", "on", "integrating", "flame", "graphs", "into", "Perl", "s", "Devel", "NYTProf", "profiler", "NUMBER", "I", "ve", "implement", "a", "few", "features", "that", "would", "help", "people", "typing", "to", "do", "similar", "integrations", "NUMBER", "Hello", "Brendan", "NUMBER", "I", "m", "work", "on", "integrating", "flame", "graphs", "into", "Perl", "s", "Devel", "NYTProf", "profiler", "NUMBER", "I", "d", "like", "to", "suggest", "a", "few", "features", "that", "would", "help", "me", "with", "that", "integration", "NUMBER", "Add", "option", "s", "to", "make", "the", "svg", "areas", "be", "links", "NUMBER", "Something", "like", "linkfmt", "NUMBER", "foo", "s", "src", "where", "the", "s", "gets", "replaced", "with", "the", "function", "name", "NUMBER", "So", "when", "Options", "to", "change", "the", "wordings", "the", "title", "Function", "sample", "etc", "NUMBER", "For", "my", "use", "Function", "would", "be", "Subroutine", "and", "samples", "would", "be", "microseconds", "NUMBER", "Add", "separators", "into", "the", "count", "so", "NUMBER", "would", "be", "shown", "as", "NUMBER", "NUMBER", "NUMBER", "If", "you", "like", "the", "ideas", "I", "ll", "develop", "them", "and", "send", "you", "pull", "request", "NUMBER", "I", "don", "t", "know", "what", "I", "meant", "to", "say", "with", "that", "first", "bullet", "but", "the", "way", "I", "ve", "implement", "the", "link", "seems", "much", "better", "anyway", "NUMBER", "I", "think", "I", "m", "do", "now", "baring", "any", "problem", "I", "find", "in", "actual", "usage", "NUMBER", "The", "Flame", "Graph", "will", "be", "the", "headline", "feature", "of", "the", "NYTProf", "v", "NUMBER", "release", "NUMBER", "Thanks", "I", "think", "we", "can", "call", "this", "do", "LINK", "v", "NUMBER", "flaming", "precision", "now", "Many", "thanks", "Brendan"], "text_count": [0, 993, 203, 93, 49, 8, 67, 0, 7, 110, 178, 258, 164, 98, 110, 33, 0, 0, 0, 0, 332, 110, 56, 51, 56, 63, 0, 0, 0, 0, 588, 365, 228, 13, 136, 30, 0, 0, 0, 0, 641, 6, 211, 224, 215, 0, 0, 0, 0, 0, 204, 77, 106, 33, 75, 23, 69, 0, 0, 0, 498, 52, 341, 74, 0, 0, 0, 0, 0, 0, 389, 32, 253, 131, 58, 0, 0, 0, 0, 0, 653, 256, 67, 319, 36, 15, 0, 0, 0, 0, 47, 217, 19, 0, 0, 0, 0, 0, 0, 0, 545, 86, 349, 118, 0, 0, 0, 0, 0, 0, 1077, 1956, 30, 97, 34, 16, 0, 0, 0, 0, 2554, 6, 2022, 12, 497, 469]}]