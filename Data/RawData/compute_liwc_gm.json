[{"repo": "gm", "type": "elite", "title": "", "number of text": 214, "text": "  gm v1.3.18 supports `-auto-orient`, so we can remove our own preprocessing in favor of the native version. however, most repositories including `apt` do not yet publish this version, so we don't want to support it yet.\n\nthis breaks backwards compatibility and requires 1.3.18. feature checking the system's `gm` is out of the scope of this project.\n\nwe can also remove the preprocessing and bufferStream elements of this repo when we support `-auto-orient` as they are only used for auto orientation. you should honestly never buffer streams.\n\nsee: https://github.com/aheckmann/gm/tree/auto-orient\n  you can submit a pull request. easiest way is just to edit the docs in github.\n  How are you retrieving the resulting image? Do you have more code? \n Dude if you're writing to disk, just use .write() instead of .stream(). The way you do is inefficient as you unnecessarily pass the image through node. Try changing that and tell me if it works.\n Personally, I would just stream directly, but you have to buffer the entire image in memory :/\n if i had to guess, you are setting an incorrect content length header to s3. \n  Don't know what you mean. Code?\n Oh. Does it work correctly when you remove orig.jpg from the constructor?\n Yup. You should've just submitted a pull request. Ill look at it when I get home.\n should be fixed in https://github.com/aheckmann/gm/commit/0d7f7d8e0b2a04371834fa3866e5b82b546b4c8f and 1.9.2. let me know if it's still an issue.\n  it's a node bug. you have to downgrade to 0.10.6 :(\n they already fixed it in master (supposedly), they just haven't released a new version with the fix yet.\n There are a lot. Just search for the beginning of the error you got.\n  if graphicsmagick or imagemagick isn't installed, an error will be thrown. not sure what you're asking for exactly.\n if you execute a command like `gm().write()`, it will throw an error if imagemagick or graphicsmagick is not installed. it should \"throw\" as it's a developer error, not an application error. \n\nhonestly, i'm not sure whether this library should support systems without imagemagick or graphicsmagick installed. you can always check whether the system has imagemagick or graphicsmagick installed by doing `convert -version` or `gm -version` using `child_process.exec` (http://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback). i would advise you do this when your app starts up instead of catching errors during runtime.\n okay. i'm not going to rip it out yet, but i created a wiki with a project scope: https://github.com/aheckmann/gm/wiki/Project-Scope\n  any more details?\n closing. reopen if you have any more details.\n  any more details?\n closing. reopen if you have any more details.\n  @plasmoit is this done? \n\n@aheckmann do you have an opinion as to whether to add this API?\n i have no opinion as long as it works as intended. \n  for the output, `.stream('png')` should work.\n\nfor the input, i'm guessing the input is always `-` for you?\n honestly, at your point, you might as well not even use this lib and just call `spawn` natively.\n\nbut yeah, i think if the source string ends with a `:-` we can just use it as the `stdin` parameter.\n closing for now until we get more specifics. i'll keep the branch open.\n  right now, they are pretty different; gh-pages are missing some docs in the readme.md and vice versa. we can:\n- just use readme.md and make gh-pages a formatted version\n- move all API docs to gh-pages and make readme.md short and more technical\n- use the wiki instead of gh-pages or have gh-pages be derived from the wiki\n  You have some typos. Imagemagik\n It should be fine from a glance, but you gotta get the tests to pass!\n for the test, you want to check the height too. that is, you don't want `resize(x)` to be acting like `resizing(x, x)` since that's what the source code you linked is saying.\n\nalso, comments on size dimensions before and after resizing would be nice so we know what's going on.\n Wait yeah you're right. Should maintain aspect ratio.\n\nAlso, did you test if this fails currently?\n Ok. Sounds good. Ill merge this when I get home.\n  ``` js\ngm('/Users/user/Desktop/image.jpg')\n        .resize('100', '100', '^')\n        .gravity(\"Center\")\n        .extent('100', '100')\n        .write('/Users/user/Desktop/ImageTest.jpg', function (err) {\n            if (!err) console.log('done');\n          });\n```\n\ndid you read the docs? http://aheckmann.github.io/gm/docs.html is this what you were asking or something else?\n oh. i just wasn't sure what you were asking. yes, read the docs :P\n ah ok. docs need to be more specific. should be more like\n\n`gm('img.png').resize(width [, height [, options]])`\n\nalso, second one should be `resize('', '640')` i believe off the top of my head. \n 4d7e938fa254b967419d5634e1cab2981ab23429\n  if you want to use imagemagick, you have to set it: http://aheckmann.github.io/gm/docs.html#imagemagick\n\nit uses graphicsmagick by default.\n\nif this isn't the problem, please show us some code!\n no problem. those docs need an update!\n  I'm assuming you have libwebp installed?\n\nWhat platform are you on? What version imagemagick?\n\nAlso, I need code to work with.\n\nThere aren't any webp tests currently.\n i think you mean `webp` instead of `png`.\n\ni don't know how to use that code. are you using it in the CLI?\n interesting. it works when i use `gm().write()` but not `gm().stream()`\n i'm getting a \n\n``` bash\nError: Command failed: identify: no decode delegate for this image format `/var/tmp/magick-90761ywdsdK02rFUe' @ error/constitute.c/ReadImage/550.\n```\n\nerror only when I stream\n i think this may be an imagemagick issue. `convert xjMUoOa.jpg webp:- > xjMUoOa.webp` does the same thing.\n do\n\n`identify -list format`. do you see webp there?\n i got it on my side. i had to install imagemagick explicitly with webp\n\n``` bash\nbrew install imagemagick --with-webp\n```\n\nthen it works. i'm guessing you didn't do that either. bad side is that there is no such option using ubuntu's apt\n gonna leave this open because we should add it to the docs.\n 912974bd4b65c2b5463bcee8b9415c7180aa484d\n  it's still in 1.8.2 land right now, needs updating.\n  this is really just for convenience since everybody despises callbacks. if you don't want it, then it's alright with me. i'm not sure if you wanted this lib more barebone/efficient or more convenience. instead of:\n\n``` js\ngm().stream(function (err, stdout) {\n  stdout.pipe(res)\n})\n```\n\nit would be nice to just do\n\n``` js\ngm().stream().pipe(res)\n\n// with error handling\ngm().stream().on('error', function (err) {\n  res.status = 400\n  res.end()\n}).pipe(res) // Only emits data if an error did not occur\n```\n\nwe can do this by returning a https://github.com/dominictarr/through stream immediately, then piping stdout to it when its ready or emitting an `error` if one occurred.\n if we're going for convenience, we can also add a `gm().toBuffer(function (err, buffer) {})` convenience method since we're internally buffer the stream already. it would just be refactoring. i remember someone a while ago asked for this.\n done, just need docs now #26\n  Mac OS X\ngm 1.3.18\nim 6.8.0-10\nAll tests pass\n\nUbuntu Server 12.04.2\ngm 1.3.12\nim 6.6.9-7\nissues noted in: https://github.com/aheckmann/gm/commit/65673f887abd11405e5bfc9a451ea5fc5b6999ff\n let's move this to a wiki page: https://github.com/aheckmann/gm/wiki/GraphicsMagick-and-ImageMagick-versions\n\nreadme has been updated to point to this page.\n  linux/travis yields different values for `identify` than what we expect (on our mac dev machines). this may be due to only older imagemagick/graphicsmagick versions being available through Ubuntu's apt-get. obviously, this is not ideal.\n\nright now, we just relaxed the requirements in which linux/travis fails: https://github.com/aheckmann/gm/commit/65673f887abd11405e5bfc9a451ea5fc5b6999ff\n don't think we should actually investigate, just document: https://github.com/aheckmann/gm/wiki/GraphicsMagick-and-ImageMagick-versions\n  since we're running two of each test, the same file will be written to at the same exact time. this really only affects slower computers like travis. i'm on an SSD, so I only see this issue in VMs. output should be something of the form `image.im.png` and `image.gm.png`.\n\ncurrently, we get around this by running all the GM tests first, then all the IM tests. however, this isn't guaranteed to work 100% of the time. plus, tests would run faster if we didn't queue.\n  either way, i think it should be a separate library/fork. since gm supports imagemagick as well, you might run into differences in imagemagick++ and graphicsmagick++ apis, and the main reason i use this library is because it supports gm and im. binding to two C++ APIs sounds like a nightmare to me.\n i'm not sure that would be a problem though since we would include the source code and compile it ourselves, no? i think that's how other libraries like mongodb-native w/ bson and bcrypt works.\n going to close this because i'm pretty sure it's not going to happen in this lib. \n\n@jschall if you do end up doing this, let us know! https://github.com/mash/node-imagemagick-native i believe they use imagemagick's magick++ bindings, maybe you can use it as inspiration for gm.\n maybe if you're going this route, we can just refactor `gm`.\n\nthe outer later will remain `gm`, but it will just be syntax sugar layer. \n\nyou can then use different \"engines\". for example, right now we're using child processes which supports both imagemagick and graphicsmagick, but then give users the option to use imagemagick or graphicsmagick c++ bindings instead.\n\nusers can also use the engines themselves if they'd like, basically just `in()`, `out()`, and `command()` with `stream()` and `write()`.\n\nwhat do you think? \n more prior art: https://github.com/LearnBoost/node-graphicsmagick\n  every single test passes now. do you want the next release to be v2?\n\nalso, i'm pretty sure this breaks `autoOrient` when using streams because i removed a `bufferStream` option. there's no test for it though.\n  Tests are absolutely not working for me, so I'm trying to fix them. Let me know if you have any issues/suggestions/etc.\n- [x] Morph - Seems to assume temporary files are made, which is not the case I've seen. Simplified so that the morph test passes.\n- [x] getterIdentify - photo.JPG tests have incorrect attributes tested for. \n- [x] `lost.png` does not exist. @aheckmann is this image meant to be lost?\n\nThere are still 12 pending tests, so there may more that I need to fix.\n going to push for now. there seems to be an issue with getters and bufferStream \n  messing up my tests, so i comment it out. i have no idea what it means.\n\n``` js\nnpm test\n\nAssertionError: global leaks detected: DTRACE_NET_SERVER_CONNECTION,DTRACE_NET_STREAM_END,DTRACE_NET_SOCKET_READ,DTRACE_NET_SOCKET_WRITE,DTRACE_HTTP_SERVER_REQUEST,DTRACE_HTTP_SERVER_RESPONSE,DTRACE_HTTP_CLIENT_REQUEST,DTRACE_HTTP_CLIENT_RESPONSE,setImmediate,clearImmediate\n```\n i have no idea what dtrace is. i installed graphicsmagick and imagemagick using `brew`. i installed node 0.10.3 through the official binary.\n i'm on osx\n  assuming quality is always an integer, which I believe is true\n cool, thanks.\n  Post code, man!\n https://github.com/aheckmann/gm/issues/141#issuecomment-16025683\n\ntell me if doing that fixes it. seems like streams2 being wonky. there's a test for this that fails already.\n interesting.\n\nalthough this is a bug, you should just do `identify` and `stream` in parallel since they are independent of each other (at least in this case). it should be faster as well both in terms of memory management and computation time.\n\nif you do need identify before streaming, consider storing the image as a buffer instead of reusing the stream (this is what I do, and this is basically what `gm` tries to do). \n er yeah, was editing my comment above during your reply:\n\n> if you do need identify before streaming, consider storing the image as a buffer instead of reusing the stream (this is what I do, and this is basically what `gm` tries to do). \n Simple way:\n\n``` js\nhttp.get('image.jpg', function (resp) {\n  var buffers = []\n\n  resp.on('data', function (chunk) {\n    buffers.push(chunk)\n  })\n\n  resp.on('end', function () {\n    var buffer = Buffer.concat(buffers)\n\n    gm(buffer).identify(function (err, info) {\n      // stuff\n\n      gm(buffer).resize().stream(function (err, stdout) {\n        // stuff\n\n        stdout.pipe(res)\n      })\n    })\n  })\n})\n```\n\nMore convoluted, but faster:\n\n``` js\nhttp.get('image.jpg', function (resp) {\n  var buffers = []\n\n  resp.on('data', function (chunk) {\n    buffers.push(chunk)\n  })\n\n  gm(resp).identify(function (err, info) {\n    // stuff\n\n    gm(Buffer.concat(buffers)).resize().stream(function (err, stdout) {\n      // stuff\n\n      stdout.pipe(res)\n    })\n  })\n})\n```\n yeah. the whole `bufferStream` thing is a hack. we should get rid of it or basically do above in the background. right now it reuses the same stream without caring about its state, which matters for streams2\n @aheckmann how do you feel about removing the `bufferStream` option and telling users to do what I stated for v2? would fix some issues and teach people how to properly use streams :P\n #142 \n  @aheckmann can we make `.subCommand()` public as well? any reason it's called `subCommand` vs. just `command`? `command` would make more sense to me.\n 1a2757949ad3b6a0370e3c3bd98e372b63d89a9e\n  can you explain a bit or post an example of use that this fixes?\n please reopen with a test. we don't know what this is doing.\n  this is a question better suited to stackoverflow. let us know if you find a bug though.\n  glad its working out for you so well!\n  does `gm().font(..).label(text).stream(..)` work for you?\n Is there ever a case you'd want `\"-label\" \"\\\"Offline\\\"\"` or someting like that? otherwise we can change how label works.\n i'm not sure what the easiest way to solve this is. personally, i'd rather just make `gm().out()` public with a better name like `gm().addOption('label:' + text)`.\n can't really think of better names for both `in()` and `out()` off the top of my head\n `in()` and `out()` docs added in da63b87f4fed6440016b5ef8c1c7307f91293ffb\n  Not sure. I'm really not an expert with graphicsmagick. maybe try [this](https://lists.sourceforge.net/lists/listinfo/graphicsmagick-help)?\n  what happens when you do the second one?\n does the response end or does it just hang?\n no issues with gm. created a test for you: https://github.com/aheckmann/gm/blob/master/test/newImage.js. let us know if you can find a reproducible case.\n\nno idea what could be going wrong with yoru code, maybe something like content type header.\n  merged. Thanks!\n  yeah, ignore what i sent. i read your question wrong and promptly deleted it. \n  because you haven't resized it yet. what you want is:\n\n``` js\ngm(part).resize(128, 128).setFormat('jpeg').stream(function (err, stdout) {\n  gm(stdout).filesize(function (err, filesize) {\n     console.log(filesize)\n  })\n})\n```\n I would say they are the \"arguments\" and nothing is executed until \"stream\" or \"write\"\n  https://github.com/aheckmann/gm/wiki/Project-Scope\n  588b5e3d92095e4c1eb7ae3671a15f7065708807\n  http://www.imagemagick.org/script/command-line-processing.php#geometry\n\nthat's not even an option\n regardless, you can do `.resize(100, null, 'x')` or `.resize('100x')`\n It's not an option specified by the docs. Not saying its invalid, but without the x is the documented and expected way and should remain default since we have to choose. It's not that hard to add an x.\n It's ambiguous whereas imagemagicks docs are not. For now you can add the x parameter, but if you find unambiguous docs we can add the x parameter by default if you're using gm\n Okay. Can you give us a case where it would give unexpected results? This way we can change it with tests.\n ugh i keep pressing close/reopen & comment on my phone. but yeah, i don't think we should change anything unless we put tests, and that shouldn't be difficult since you said it gives unexpected results. also just to be clear, we would only add the `x` if the user is using graphicsmagick.\n Well that sucks. Do you have a source? \n 3750d5d331464fdcbd5fc00360e28564cbc43228\n added docs too: 4d7e938fa254b967419d5634e1cab2981ab23429\n  any follow ups? i'm closing, reopen if you have more info please.\n  #142 \n  not sure what you mean. can you clarify using code? reopen when you do.\n\n`gm` assumes you have gm/imagemagick installed globally, if that's what you mean.\n  which version of gm?\n @shargors not sure. Does using graphicsmagick directly cause the same issue? If not we should confirm we pass the correct args. Maybe checkout what the graphicsmagick docs say about it.\n fix is in 1.8.1\n @shargors as I previously mentioned, please investigate with graphicsmagick directly as all we do is pass arguments to the gm binary. Please post your findings.\n  img.thumbnail(width, height) was contributed recently, haven't tried it myself.\n\nit doesn't matter is its one fn btw since nothing executes until you write() or stream() etc. you can always [extend gm](https://github.com/aheckmann/gm/wiki/Extending-gm) to fit your needs too.\n  use `gmobj.in('-density', 400)` to add args to the internal `_in` array.\n\nIt's hard tell from the docs if `-density` is always used before input. If it is I'll change it to use `.in()`.\n\n_really need to change this api in 2.0 to better support arg ordering._\n  just released 1.8.0 with a fix\n  this is awesome. i merged it locally. will publish in a day or two. \n\n:+1: \n released in 1.8.0\n  just plain javascript will help you:\n\n``` js\nvar img = gm(imgPath);\nvar filter = clean(userDefinedFilter);\nvar args = clean(userDefinedArgs);\nimg[filter](args).write(..)\n```\n\n`clean` being a made up method you defined\n  thanks! looks pretty good. left a few comments. \n\nthis project really needs better tests to validate stuff like this. i was looking at https://github.com/HumbleSoftware/js-imagediff which might help. would you be open to giving it a shot for this test? if its successful we can start rolling it out to the stream tests too.\n yeah long term I plan on switching to mocha.\n\nOn Thu, Dec 6, 2012 at 1:52 PM, Dan Milon notifications@github.com wrote:\n\n> I think that HumbleSoftware/js-imagediffhttps://github.com/HumbleSoftware/js-imagediffwould be a great tool for testing, but I would also prefer a BDD style\n> testing framework. (mocha https://github.com/visionmedia/mocha?) It\n> took me a while to figure out that custom testing. Unfortunately I've got\n> limited time, so no promise, but I might give this a try, sometime.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aheckmann/gm/pull/106#issuecomment-11106904.\n\n## \n\nAaron\n@aaronheckmann https://twitter.com/#!/aaronheckmann\n merged! thanks man\n  Thanks for opening this. I think there's a better solution out there yet but haven't had time to look into it myself. The reason I'm -1 on this is b/c this will cause weird side affects later on that never used to occur.\n after some research I've come to the same conclusion. merge in. thanks!\n  not today. \n\nyes node provides `child_process` timeouts for the `exec` and `execFile` methods but we're using `spawn` to support Streams and Buffers so some plumbing is required. \n\nI'll accept a pull request for this.\n  fixed in 1.8.0\n  if gm/imagemagick return a weird value, please use `identify()` first and read the value afterward.\n\nsee https://github.com/aheckmann/gm/commit/8fcf3f8f84a02cc2001da874cbebb89bf7084409\n  density() is just a wrapper around .out() but there is also .in() which you can use to directly pass your args.\n\n```\ngm(..).in('-density', '150x150').resize(..)\n```\n  Not sure, both [thumb](https://github.com/aheckmann/gm/blob/master/lib/convenience/thumb.js) and [autoOrient](https://github.com/aheckmann/gm/blob/master/lib/convenience/autoOrient.js) are sugar and involve several calls to graphicsmagick which may not play perfectly well together. It should be easy to track down what this issue is by just executing the code inline and playing with the options that are used. \n\nIf `thumb` doesn't work right without `autoOrient` that could be related to changes made in 1.6 and how `size` is calculated: https://github.com/aheckmann/gm/blob/master/lib/convenience/thumb.js#L21\n\nLet me know what you find out.\n fix is in 1.8.1\n  which version: https://github.com/aheckmann/gm/issues/90\n closing, no response. please reopen if the bug still exists in the latest release.\n  merged! thanks\n  1) we should really pass the error to all the queued callbacks instead https://github.com/aheckmann/gm/blob/master/lib/getters.js#L146\n\n2) is this the same issue as #33 ? if not we should track the cause separately and get it fixed.\n yeah should just be like:\n\n``` js\nwhile (idx--) {\n   self._iq[idx].call(self, err, self.data);\n}\n```\n merged! thanks\n  yeah looks good. I merged the addition. \n\nwe still need to document their differences and that graphicsmagick doesn't support this method. its would be great if you could write up something quick. all the docs are in the gh-pages branch.\n\nthanks again!\n oh nice! thanks again.\n  hard to tell from the example. hopefully theres a pull request in the works from the community for accepting Buffers which may be the solution here.\n https://github.com/aheckmann/gm/issues/19#issuecomment-10166500\n  can you provide the img in question so I can take a look when i get a chance? just post a link to it or smth.\n fixed in #108\n  thanks for reporting\n just wondering why you'd want to rotate 0? wouldn't that be a no-op?\n yeah got it, thanks\n  nice! yeah we can rename. i don't have any time to work on gm ATM. if you'd like to fix it I'll merge.\n  probably not since orientation detection requires the -verbose flag to work\nproperly.\n\nOn Sat, Nov 10, 2012 at 10:16 AM, Lance Fisher notifications@github.comwrote:\n\n> Cool! Thanks for fixing this! It should make autoOrient() faster too,\n> right?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aheckmann/gm/issues/83#issuecomment-10257976.\n\n## \n\nAaron\n@aaronheckmann https://twitter.com/#!/aaronheckmann\n  try out release 1.6.0 which optimizes several getter methods performance. impacted methods are `format()`, `depth()`, `size()`, `color()`, `filesize()`\n\nsee https://github.com/aheckmann/gm/commit/8fcf3f8f84a02cc2001da874cbebb89bf7084409 for more details.\n  honestly i haven't used it either, was a community contribution. its just switching out `convert` for whatever you pass.\n\nhttps://github.com/aheckmann/gm/pull/67\n  merged. thanks!\n  commented on the Obvious/gm commit\n\nOn Fri, Aug 3, 2012 at 9:40 AM, Daniel Pupius <\nreply@reply.github.com\n\n> wrote:\n> \n> I'm using gm to downsample and crop images and am seeing this error fairly\n> regularly, about 1% of requests.  Making the same call a second time works\n> just fine so it doesn't appear to be a problem with the inputs.\n> \n> I realize it's internal to graphicsmagick but was hoping you might have\n> some insight into what might be causing the issue and ways to alleviate the\n> problem.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/aheckmann/gm/issues/72\n\n## \n\nAaron\n@aaronheckmann https://twitter.com/#!/aaronheckmann\n  i think #67 should help. will merge soonish\n going to close now that #67 is merged\n  so the behavior from node 0.6x is different than 0.8x? I'll look into it when I get time\n i still cannot reproduce. if you can track it down further somehow please reopen.\n  not sure if graphicsmagick supports that. gm _should_ work if it does.\n neat\n  can you provide a test case. want to make sure it's fixed properly\n tracked it down. the callback to `gm(resp, 'logo3w.png').stream(function (err, stdout, stderr) {` is already called by the time the error occurs on the internal child process `stdin` stream so its too late to pass the err to the callback. instead, to detect this case you can test the output of stderr for \"execvp(): No such file or directory\"\n  yeah i don't really think gm can do anything for this case.\n closing since this isn't really a gm issue\n  This is great. Can you add some tests and update the README to show support for these methods? We also have the gh-pages branch docs that should be updated.\n I merged it. We just need to add docs. Had to rename the size() method b/c we already had that. renamed to rawSize.\n  does the file exist? is graphicsmagick installed?\n `npm install gm` does not install graphicsmagick. visit http://www.graphicsmagick.org for download / installation instructions.\n :D\n  good idea\n  excellent. thanks!\n  merged, thanks!\n  can you post a full example?\n  Did you first try installing GraphicsMagick on windows?\n\nOn Apr 10, 2012, at 6:29 PM, limitflyreply@reply.github.com wrote:\n\n> I install gm on windows with npm.\n> When I run the 'thumb' example,I got the 'Error: Command failed: CreateProcessW: xxxxx' and 'code: 127, signal: null'\n> Dose gm support in windows?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/aheckmann/gm/issues/57\n  some of these methods were added by others. can you create a clean branch off of master and create a new pull with your additions?\n  LGTM. Im traveling this week but I'll merge it in soon. \n\nThanks!\n merged. thanks!\n  merged. Thanks!\n  LGTM. I'm traveling this week but I'll merge it in soon.\n\nThanks!\n merged. thanks!\n  thanks\n  merged. thanks!\n  released 1.2.0 with @jwarchol pull request.\n  I'd say you're on the right track.\n gonna close this, no change.\n  (hopefully) fixed in master\n  make test is it. can you post the error?\n ah thanks\n  thanks. can you post the error `make test` is returning?\n  are you running these all in parallel? you may be hitting the file handle limit.\n\ntry `$ sudo ulimit -n 4096`\n graphicsmagick is pretty hungry i guess.\n i was able to run a few hundred before running out.\n graphicsmagick is hungry. theres nothing gm can do about that\n  thanks!\n  a lot of good stuff here but it still doesn't merge. trying adding this repo as a remote and then pulling from it:\n\n```\ngit remote add gm git://github.com/aheckmann/gm.git\ngit pull gm master\ngit push origin master\n```\n no response. closing\n  Excellent! I saw this in production but didn't have the image that caused it. I'll take a look soon.\n\nBTW, which version? I made a change in 1.0.3 in an attempt to handle these errors gracefully for now.\n\nOn Jan 29, 2012, at 4:42 AM, Felix Chanreply@reply.github.com wrote:\n\n> Hi, \n> \n> I saved this file to my hard drive: http://www.prguitarman.com/comics/poptart1red1.gif\n> When I run this code:\n> \n> ```\n> gm(tmp_path).identify(function(err, data){\n>                console.log(data);\n> });\n> ```\n> \n> I get this error?\n> \n> ```\n> [TypeError: Cannot set property 'Image' of undefined]\n> TypeError: Cannot set property 'Image' of undefined\n>    at ChildProcess.<anonymous> (/home/user/abc/src/node_modules/gm/lib/getters.js:121:18)\n>    at ChildProcess.<anonymous> (/home/user/abc/src/node_modules/gm/lib/command.js:208:18)\n>    at ChildProcess.emit (events.js:70:17)\n>    at maybeExit (child_process.js:361:16)\n>    at Process.onexit (child_process.js:397:5)\n> ```\n> \n> thanks!\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/aheckmann/gm/issues/34\n fyi https://github.com/aheckmann/gm/issues/33\n  does the first image always have the correct data size or is that just sort of random with the one you have? if the first frame is the \"frame of record\" then yeah, a pull request to change that would be great.\n we should probably have identify return all the data and have size, format, depth, etc getters return data from the first image only.\n someone else tried to do a pull request of this but explained absolutely nothing. does it mess the sizes for other types of images? does the space only affect gifs?\n @simong i added that fix with a test\n  aaaah node v0.6x probably. I'll fix asap\n ok i just published 1.0.1 - let me know\n  should we close this?\n  released in 1.0.0 - there is now an imageMagick option.\n\nyou can either subclass gm with the option which returns a new constructor with the imageMagick option set:\n\n``` js\nvar imageMagick = gm.subclass({ imageMagick: true })\n// imageMagick is now a subclass of gm and will apply the imageMagick\n// option for every operation\n\nimageMagick(someImg).autoOrient().write(...)\n```\n\nor you can use imageMagick as a one-off:\n\n``` js\ngm(someImg).autoOrient().options({ imageMagick: true}).write(...)\n```\n  done\n  what did you specifically mean by this? i can add docs\n tried to look at your gh-pages branch... it hurts my eyes =_=. i'm just going to update the readme. markdown is so much easier!\n closing this over https://github.com/aheckmann/gm/issues/165 \n  should we close this or are you still working on it?\n  merged! thanks man\n  @dmmalam can you try out whats in master? Should be working now. When you confirm I'll tag it and publish to npm. Thanks!\n  yeah seems like we should accept a `Buffer`. PR would be great! :)\n  excellent thanks!\n  :D\n  Thanks!\n", "text_all_count": 5155, "text_word_token": ["gm", "v", "NUMBER", "support", "auto", "orient", "so", "we", "can", "remove", "our", "own", "preprocessing", "in", "favor", "of", "the", "native", "version", "NUMBER", "however", "most", "repositories", "including", "apt", "do", "not", "yet", "publish", "this", "version", "so", "we", "don", "t", "want", "to", "support", "it", "yet", "NUMBER", "this", "breaks", "backwards", "compatibility", "and", "requires", "NUMBER", "feature", "checking", "the", "system", "s", "gm", "be", "out", "of", "the", "scope", "of", "this", "project", "NUMBER", "we", "can", "also", "remove", "the", "preprocessing", "and", "bufferStream", "elements", "of", "this", "repo", "when", "we", "support", "auto", "orient", "as", "they", "be", "only", "use", "for", "auto", "orientation", "NUMBER", "you", "should", "honestly", "never", "buffer", "streams", "NUMBER", "see", "LINK", "orient", "you", "can", "submit", "a", "pull", "request", "NUMBER", "easiest", "way", "be", "just", "to", "edit", "the", "docs", "in", "github", "NUMBER", "How", "be", "you", "retrieving", "the", "resulting", "image", "Do", "you", "have", "more", "code", "Dude", "if", "you", "re", "write", "to", "disk", "just", "use", "NUMBER", "write", "instead", "of", "NUMBER", "ream", "NUMBER", "The", "way", "you", "do", "be", "inefficient", "as", "you", "unnecessarily", "pass", "the", "image", "through", "node", "NUMBER", "Try", "change", "that", "and", "tell", "me", "if", "it", "works", "NUMBER", "Personally", "I", "would", "just", "stream", "directly", "but", "you", "have", "to", "buffer", "the", "entire", "image", "in", "memory", "if", "i", "had", "to", "guess", "you", "be", "setting", "an", "incorrect", "content", "length", "header", "to", "s", "NUMBER", "Don", "t", "know", "what", "you", "mean", "NUMBER", "Code", "Oh", "NUMBER", "Does", "it", "work", "correctly", "when", "you", "remove", "orig", "NUMBER", "jpg", "from", "the", "constructor", "Yup", "NUMBER", "You", "should", "ve", "just", "submitted", "a", "pull", "request", "NUMBER", "Ill", "look", "at", "it", "when", "I", "get", "home", "NUMBER", "should", "be", "fix", "in", "LINK", "and", "NUMBER", "let", "me", "know", "if", "it", "s", "still", "an", "issue", "NUMBER", "it", "s", "a", "node", "bug", "NUMBER", "you", "have", "to", "downgrade", "to", "NUMBER", "they", "already", "fix", "it", "in", "master", "supposedly", "they", "just", "haven", "t", "release", "a", "new", "version", "with", "the", "fix", "yet", "NUMBER", "There", "be", "a", "lot", "NUMBER", "Just", "search", "for", "the", "beginning", "of", "the", "error", "you", "get", "NUMBER", "if", "graphicsmagick", "or", "imagemagick", "isn", "t", "install", "an", "error", "will", "be", "throw", "NUMBER", "not", "sure", "what", "you", "re", "ask", "for", "exactly", "NUMBER", "if", "you", "execute", "a", "command", "like", "gm", "NUMBER", "write", "it", "will", "throw", "an", "error", "if", "imagemagick", "or", "graphicsmagick", "be", "not", "install", "NUMBER", "it", "should", "throw", "as", "it", "s", "a", "developer", "error", "not", "an", "application", "error", "NUMBER", "honestly", "i", "m", "not", "sure", "whether", "this", "library", "should", "support", "systems", "without", "imagemagick", "or", "graphicsmagick", "install", "NUMBER", "you", "can", "always", "check", "whether", "the", "system", "has", "imagemagick", "or", "graphicsmagick", "install", "by", "doing", "convert", "version", "or", "gm", "version", "use", "child_process", "NUMBER", "exec", "LINK", "_process", "NUMBER", "html", "child_process_child_process_exec_command_options_callback", "NUMBER", "i", "would", "advise", "you", "do", "this", "when", "your", "app", "starts", "up", "instead", "of", "catching", "error", "during", "runtime", "NUMBER", "okay", "NUMBER", "i", "m", "not", "going", "to", "rip", "it", "out", "yet", "but", "i", "created", "a", "wiki", "with", "a", "project", "scope", "LINK", "Scope", "any", "more", "details", "closing", "NUMBER", "reopen", "if", "you", "have", "any", "more", "details", "NUMBER", "any", "more", "details", "closing", "NUMBER", "reopen", "if", "you", "have", "any", "more", "details", "NUMBER", "plasmoit", "be", "this", "do", "aheckmann", "do", "you", "have", "an", "opinion", "as", "to", "whether", "to", "add", "this", "API", "i", "have", "no", "opinion", "as", "long", "as", "it", "works", "as", "intended", "NUMBER", "for", "the", "output", "NUMBER", "ream", "png", "should", "work", "NUMBER", "for", "the", "input", "i", "m", "guessing", "the", "input", "be", "always", "for", "you", "honestly", "at", "your", "point", "you", "might", "as", "well", "not", "even", "use", "this", "lib", "and", "just", "call", "spawn", "natively", "NUMBER", "but", "yeah", "i", "think", "if", "the", "source", "string", "ends", "with", "a", "we", "can", "just", "use", "it", "as", "the", "stdin", "parameter", "NUMBER", "closing", "for", "now", "until", "we", "get", "more", "specifics", "NUMBER", "i", "ll", "keep", "the", "branch", "open", "NUMBER", "right", "now", "they", "be", "pretty", "different", "gh", "pages", "be", "miss", "some", "docs", "in", "the", "readme", "NUMBER", "md", "and", "vice", "versa", "NUMBER", "we", "can", "just", "use", "readme", "NUMBER", "md", "and", "make", "gh", "pages", "a", "formatted", "version", "move", "all", "API", "docs", "to", "gh", "pages", "and", "make", "readme", "NUMBER", "md", "short", "and", "more", "technical", "use", "the", "wiki", "instead", "of", "gh", "pages", "or", "have", "gh", "pages", "be", "derived", "from", "the", "wiki", "You", "have", "some", "typo", "NUMBER", "Imagemagik", "It", "should", "be", "fine", "from", "a", "glance", "but", "you", "gotta", "get", "the", "test", "to", "pass", "for", "the", "test", "you", "want", "to", "check", "the", "height", "too", "NUMBER", "that", "be", "you", "don", "t", "want", "resize", "x", "to", "be", "acting", "like", "resizing", "x", "x", "since", "that", "s", "what", "the", "source", "code", "you", "linked", "be", "saying", "NUMBER", "also", "comments", "on", "size", "dimensions", "before", "and", "after", "resizing", "would", "be", "nice", "so", "we", "know", "what", "s", "going", "on", "NUMBER", "Wait", "yeah", "you", "re", "right", "NUMBER", "Should", "maintain", "aspect", "ratio", "NUMBER", "Also", "did", "you", "test", "if", "this", "fail", "currently", "Ok", "NUMBER", "Sounds", "good", "NUMBER", "Ill", "merge", "this", "when", "I", "get", "home", "NUMBER", "js", "gm", "Users", "user", "Desktop", "image", "NUMBER", "jpg", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "gravity", "Center", "NUMBER", "extent", "NUMBER", "NUMBER", "NUMBER", "write", "Users", "user", "Desktop", "ImageTest", "NUMBER", "jpg", "function", "err", "if", "err", "console", "NUMBER", "log", "do", "did", "you", "read", "the", "docs", "LINK", "be", "this", "what", "you", "were", "ask", "or", "something", "else", "oh", "NUMBER", "i", "just", "wasn", "t", "sure", "what", "you", "were", "ask", "NUMBER", "yes", "read", "the", "docs", "P", "ah", "ok", "NUMBER", "docs", "need", "to", "be", "more", "specific", "NUMBER", "should", "be", "more", "like", "gm", "img", "NUMBER", "png", "NUMBER", "resize", "width", "height", "options", "also", "second", "one", "should", "be", "resize", "NUMBER", "i", "believe", "off", "the", "top", "of", "my", "head", "NUMBER", "NUMBER", "d", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "cab", "NUMBER", "ab", "NUMBER", "if", "you", "want", "to", "use", "imagemagick", "you", "have", "to", "set", "it", "LINK", "imagemagick", "it", "uses", "graphicsmagick", "by", "default", "NUMBER", "if", "this", "isn", "t", "the", "problem", "please", "show", "us", "some", "code", "no", "problem", "NUMBER", "those", "docs", "need", "an", "update", "I", "m", "assuming", "you", "have", "libwebp", "install", "What", "platform", "be", "you", "on", "What", "version", "imagemagick", "Also", "I", "need", "code", "to", "work", "with", "NUMBER", "There", "aren", "t", "any", "webp", "test", "currently", "NUMBER", "i", "think", "you", "mean", "webp", "instead", "of", "png", "NUMBER", "i", "don", "t", "know", "how", "to", "use", "that", "code", "NUMBER", "be", "you", "use", "it", "in", "the", "CLI", "interesting", "NUMBER", "it", "works", "when", "i", "use", "gm", "NUMBER", "write", "but", "not", "gm", "NUMBER", "ream", "i", "m", "get", "a", "bash", "Error", "Command", "fail", "identify", "no", "decode", "delegate", "for", "this", "image", "format", "var", "tmp", "magick", "NUMBER", "ywdsdK", "NUMBER", "rFUe", "error", "constitute", "NUMBER", "c", "ReadImage", "NUMBER", "error", "only", "when", "I", "stream", "i", "think", "this", "may", "be", "an", "imagemagick", "issue", "NUMBER", "convert", "xjMUoOa", "NUMBER", "jpg", "webp", "xjMUoOa", "NUMBER", "webp", "do", "the", "same", "thing", "NUMBER", "do", "identify", "list", "format", "NUMBER", "do", "you", "see", "webp", "there", "i", "get", "it", "on", "my", "side", "NUMBER", "i", "had", "to", "install", "imagemagick", "explicitly", "with", "webp", "bash", "brew", "install", "imagemagick", "with", "webp", "then", "it", "works", "NUMBER", "i", "m", "guessing", "you", "didn", "t", "do", "that", "either", "NUMBER", "bad", "side", "be", "that", "there", "be", "no", "such", "option", "use", "ubuntu", "s", "apt", "gonna", "leave", "this", "open", "because", "we", "should", "add", "it", "to", "the", "docs", "NUMBER", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bcee", "NUMBER", "b", "NUMBER", "c", "NUMBER", "aa", "NUMBER", "d", "it", "s", "still", "in", "NUMBER", "land", "right", "now", "needs", "update", "NUMBER", "this", "be", "really", "just", "for", "convenience", "since", "everybody", "despises", "callbacks", "NUMBER", "if", "you", "don", "t", "want", "it", "then", "it", "s", "alright", "with", "me", "NUMBER", "i", "m", "not", "sure", "if", "you", "wanted", "this", "lib", "more", "barebone", "efficient", "or", "more", "convenience", "NUMBER", "instead", "of", "js", "gm", "NUMBER", "ream", "function", "err", "stdout", "stdout", "NUMBER", "pipe", "res", "it", "would", "be", "nice", "to", "just", "do", "js", "gm", "NUMBER", "ream", "NUMBER", "pipe", "res", "with", "error", "handle", "gm", "NUMBER", "ream", "NUMBER", "on", "error", "function", "err", "res", "NUMBER", "atus", "NUMBER", "res", "NUMBER", "end", "NUMBER", "pipe", "res", "Only", "emits", "data", "if", "an", "error", "did", "not", "occur", "we", "can", "do", "this", "by", "returning", "a", "LINK", "stream", "immediately", "then", "piping", "stdout", "to", "it", "when", "its", "ready", "or", "emitting", "an", "error", "if", "one", "occur", "NUMBER", "if", "we", "re", "going", "for", "convenience", "we", "can", "also", "add", "a", "gm", "NUMBER", "toBuffer", "function", "err", "buffer", "convenience", "method", "since", "we", "re", "internally", "buffer", "the", "stream", "already", "NUMBER", "it", "would", "just", "be", "refactoring", "NUMBER", "i", "remember", "someone", "a", "while", "ago", "asked", "for", "this", "NUMBER", "do", "just", "need", "docs", "now", "NUMBER", "Mac", "OS", "X", "gm", "NUMBER", "im", "NUMBER", "NUMBER", "All", "test", "pass", "Ubuntu", "Server", "NUMBER", "gm", "NUMBER", "im", "NUMBER", "NUMBER", "issue", "noted", "in", "LINK", "let", "s", "move", "this", "to", "a", "wiki", "page", "LINK", "and", "ImageMagick", "version", "readme", "has", "be", "update", "to", "point", "to", "this", "page", "NUMBER", "linux", "travis", "yields", "different", "values", "for", "identify", "than", "what", "we", "expect", "on", "our", "mac", "dev", "machines", "NUMBER", "this", "may", "be", "due", "to", "only", "older", "imagemagick", "graphicsmagick", "version", "be", "available", "through", "Ubuntu", "s", "apt", "get", "NUMBER", "obviously", "this", "be", "not", "ideal", "NUMBER", "right", "now", "we", "just", "relaxed", "the", "requirements", "in", "which", "linux", "travis", "fail", "LINK", "don", "t", "think", "we", "should", "actually", "investigate", "just", "document", "LINK", "and", "ImageMagick", "version", "since", "we", "re", "run", "two", "of", "each", "test", "the", "same", "file", "will", "be", "write", "to", "at", "the", "same", "exact", "time", "NUMBER", "this", "really", "only", "affects", "slower", "computers", "like", "travis", "NUMBER", "i", "m", "on", "an", "SSD", "so", "I", "only", "see", "this", "issue", "in", "VMs", "NUMBER", "output", "should", "be", "something", "of", "the", "form", "image", "NUMBER", "im", "NUMBER", "png", "and", "image", "NUMBER", "gm", "NUMBER", "png", "NUMBER", "currently", "we", "get", "around", "this", "by", "run", "all", "the", "GM", "test", "first", "then", "all", "the", "IM", "test", "NUMBER", "however", "this", "isn", "t", "guaranteed", "to", "work", "NUMBER", "of", "the", "time", "NUMBER", "plus", "test", "would", "run", "faster", "if", "we", "didn", "t", "queue", "NUMBER", "either", "way", "i", "think", "it", "should", "be", "a", "separate", "library", "fork", "NUMBER", "since", "gm", "support", "imagemagick", "as", "well", "you", "might", "run", "into", "differences", "in", "imagemagick", "and", "graphicsmagick", "apis", "and", "the", "main", "reason", "i", "use", "this", "library", "be", "because", "it", "support", "gm", "and", "im", "NUMBER", "binding", "to", "two", "C", "APIs", "sounds", "like", "a", "nightmare", "to", "me", "NUMBER", "i", "m", "not", "sure", "that", "would", "be", "a", "problem", "though", "since", "we", "would", "include", "the", "source", "code", "and", "compile", "it", "ourselves", "no", "i", "think", "that", "s", "how", "other", "libraries", "like", "mongodb", "native", "w", "bson", "and", "bcrypt", "works", "NUMBER", "going", "to", "close", "this", "because", "i", "m", "pretty", "sure", "it", "s", "not", "going", "to", "happen", "in", "this", "lib", "NUMBER", "jschall", "if", "you", "do", "end", "up", "doing", "this", "let", "us", "know", "LINK", "imagemagick", "native", "i", "believe", "they", "use", "imagemagick", "s", "magick", "bindings", "maybe", "you", "can", "use", "it", "as", "inspiration", "for", "gm", "NUMBER", "maybe", "if", "you", "re", "going", "this", "route", "we", "can", "just", "refactor", "gm", "NUMBER", "the", "outer", "later", "will", "remain", "gm", "but", "it", "will", "just", "be", "syntax", "sugar", "layer", "NUMBER", "you", "can", "then", "use", "different", "engines", "NUMBER", "for", "example", "right", "now", "we", "re", "use", "child", "processes", "which", "support", "both", "imagemagick", "and", "graphicsmagick", "but", "then", "give", "users", "the", "option", "to", "use", "imagemagick", "or", "graphicsmagick", "c", "bindings", "instead", "NUMBER", "users", "can", "also", "use", "the", "engines", "themselves", "if", "they", "d", "like", "basically", "just", "in", "out", "and", "command", "with", "stream", "and", "write", "NUMBER", "what", "do", "you", "think", "more", "prior", "art", "LINK", "graphicsmagick", "every", "single", "test", "pass", "now", "NUMBER", "do", "you", "want", "the", "next", "release", "to", "be", "v", "NUMBER", "also", "i", "m", "pretty", "sure", "this", "breaks", "autoOrient", "when", "use", "streams", "because", "i", "remove", "a", "bufferStream", "option", "NUMBER", "there", "s", "no", "test", "for", "it", "though", "NUMBER", "Tests", "be", "absolutely", "not", "work", "for", "me", "so", "I", "m", "trying", "to", "fix", "them", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "issue", "suggestions", "etc", "NUMBER", "x", "Morph", "Seems", "to", "assume", "temporary", "file", "be", "made", "which", "be", "not", "the", "case", "I", "ve", "seen", "NUMBER", "Simplified", "so", "that", "the", "morph", "test", "pass", "NUMBER", "x", "getterIdentify", "photo", "NUMBER", "JPG", "test", "have", "incorrect", "attributes", "test", "for", "NUMBER", "x", "lost", "NUMBER", "png", "do", "not", "exist", "NUMBER", "aheckmann", "be", "this", "image", "meant", "to", "be", "lost", "There", "be", "still", "NUMBER", "pending", "test", "so", "there", "may", "more", "that", "I", "need", "to", "fix", "NUMBER", "going", "to", "push", "for", "now", "NUMBER", "there", "seems", "to", "be", "an", "issue", "with", "getters", "and", "bufferStream", "messing", "up", "my", "test", "so", "i", "comment", "it", "out", "NUMBER", "i", "have", "no", "idea", "what", "it", "means", "NUMBER", "js", "npm", "test", "AssertionError", "global", "leaks", "detected", "DTRACE_NET_SERVER_CONNECTION", "DTRACE_NET_STREAM_END", "DTRACE_NET_SOCKET_READ", "DTRACE_NET_SOCKET_WRITE", "DTRACE_HTTP_SERVER_REQUEST", "DTRACE_HTTP_SERVER_RESPONSE", "DTRACE_HTTP_CLIENT_REQUEST", "DTRACE_HTTP_CLIENT_RESPONSE", "setImmediate", "clearImmediate", "i", "have", "no", "idea", "what", "dtrace", "be", "NUMBER", "i", "install", "graphicsmagick", "and", "imagemagick", "use", "brew", "NUMBER", "i", "install", "node", "NUMBER", "through", "the", "official", "binary", "NUMBER", "i", "m", "on", "osx", "assuming", "quality", "be", "always", "an", "integer", "which", "I", "believe", "be", "true", "cool", "thanks", "NUMBER", "Post", "code", "man", "LINK", "issuecomment", "NUMBER", "tell", "me", "if", "doing", "that", "fix", "it", "NUMBER", "seems", "like", "streams", "NUMBER", "be", "wonky", "NUMBER", "there", "s", "a", "test", "for", "this", "that", "fail", "already", "NUMBER", "interesting", "NUMBER", "although", "this", "be", "a", "bug", "you", "should", "just", "do", "identify", "and", "stream", "in", "parallel", "since", "they", "be", "independent", "of", "each", "other", "at", "least", "in", "this", "case", "NUMBER", "it", "should", "be", "faster", "as", "well", "both", "in", "terms", "of", "memory", "management", "and", "computation", "time", "NUMBER", "if", "you", "do", "need", "identify", "before", "streaming", "consider", "storing", "the", "image", "as", "a", "buffer", "instead", "of", "reusing", "the", "stream", "this", "be", "what", "I", "do", "and", "this", "be", "basically", "what", "gm", "try", "to", "do", "NUMBER", "er", "yeah", "was", "editing", "my", "comment", "above", "during", "your", "reply", "if", "you", "do", "need", "identify", "before", "streaming", "consider", "storing", "the", "image", "as", "a", "buffer", "instead", "of", "reusing", "the", "stream", "this", "be", "what", "I", "do", "and", "this", "be", "basically", "what", "gm", "try", "to", "do", "NUMBER", "Simple", "way", "js", "http", "NUMBER", "get", "image", "NUMBER", "jpg", "function", "resp", "var", "buffers", "resp", "NUMBER", "on", "data", "function", "chunk", "buffers", "NUMBER", "push", "chunk", "resp", "NUMBER", "on", "end", "function", "var", "buffer", "Buffer", "NUMBER", "concat", "buffers", "gm", "buffer", "NUMBER", "identify", "function", "err", "info", "stuff", "gm", "buffer", "NUMBER", "resize", "NUMBER", "ream", "function", "err", "stdout", "stuff", "stdout", "NUMBER", "pipe", "res", "More", "convoluted", "but", "faster", "js", "http", "NUMBER", "get", "image", "NUMBER", "jpg", "function", "resp", "var", "buffers", "resp", "NUMBER", "on", "data", "function", "chunk", "buffers", "NUMBER", "push", "chunk", "gm", "resp", "NUMBER", "identify", "function", "err", "info", "stuff", "gm", "Buffer", "NUMBER", "concat", "buffers", "NUMBER", "resize", "NUMBER", "ream", "function", "err", "stdout", "stuff", "stdout", "NUMBER", "pipe", "res", "yeah", "NUMBER", "the", "whole", "bufferStream", "thing", "be", "a", "hack", "NUMBER", "we", "should", "get", "rid", "of", "it", "or", "basically", "do", "above", "in", "the", "background", "NUMBER", "right", "now", "it", "reuses", "the", "same", "stream", "without", "caring", "about", "its", "state", "which", "matters", "for", "streams", "NUMBER", "aheckmann", "how", "do", "you", "feel", "about", "remove", "the", "bufferStream", "option", "and", "telling", "users", "to", "do", "what", "I", "stated", "for", "v", "NUMBER", "would", "fix", "some", "issue", "and", "teach", "people", "how", "to", "properly", "use", "streams", "P", "NUMBER", "aheckmann", "can", "we", "make", "NUMBER", "subCommand", "public", "as", "well", "any", "reason", "it", "s", "call", "subCommand", "vs", "NUMBER", "just", "command", "command", "would", "make", "more", "sense", "to", "me", "NUMBER", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "b", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "can", "you", "explain", "a", "bit", "or", "post", "an", "example", "of", "use", "that", "this", "fix", "please", "reopen", "with", "a", "test", "NUMBER", "we", "don", "t", "know", "what", "this", "be", "doing", "NUMBER", "this", "be", "a", "question", "better", "suited", "to", "stackoverflow", "NUMBER", "let", "us", "know", "if", "you", "find", "a", "bug", "though", "NUMBER", "glad", "its", "work", "out", "for", "you", "so", "well", "do", "gm", "NUMBER", "font", "NUMBER", "NUMBER", "label", "text", "NUMBER", "ream", "NUMBER", "work", "for", "you", "Is", "there", "ever", "a", "case", "you", "d", "want", "label", "Offline", "or", "someting", "like", "that", "otherwise", "we", "can", "change", "how", "label", "works", "NUMBER", "i", "m", "not", "sure", "what", "the", "easiest", "way", "to", "solve", "this", "be", "NUMBER", "personally", "i", "d", "rather", "just", "make", "gm", "NUMBER", "out", "public", "with", "a", "better", "name", "like", "gm", "NUMBER", "addOption", "label", "text", "NUMBER", "can", "t", "really", "think", "of", "better", "names", "for", "both", "in", "and", "out", "off", "the", "top", "of", "my", "head", "in", "and", "out", "docs", "add", "in", "da", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fed", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ffb", "Not", "sure", "NUMBER", "I", "m", "really", "not", "an", "expert", "with", "graphicsmagick", "NUMBER", "maybe", "try", "this", "LINK", "help", "what", "happens", "when", "you", "do", "the", "second", "one", "do", "the", "response", "end", "or", "do", "it", "just", "hang", "no", "issue", "with", "gm", "NUMBER", "created", "a", "test", "for", "you", "LINK", "let", "us", "know", "if", "you", "can", "find", "a", "reproducible", "case", "NUMBER", "no", "idea", "what", "could", "be", "going", "wrong", "with", "yoru", "code", "maybe", "something", "like", "content", "type", "header", "NUMBER", "merge", "NUMBER", "Thanks", "yeah", "ignore", "what", "i", "sent", "NUMBER", "i", "read", "your", "question", "wrong", "and", "promptly", "delete", "it", "NUMBER", "because", "you", "haven", "t", "resized", "it", "yet", "NUMBER", "what", "you", "want", "be", "js", "gm", "part", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "setFormat", "jpeg", "NUMBER", "ream", "function", "err", "stdout", "gm", "stdout", "NUMBER", "filesize", "function", "err", "filesize", "console", "NUMBER", "log", "filesize", "I", "would", "say", "they", "be", "the", "argument", "and", "nothing", "be", "executed", "until", "stream", "or", "write", "LINK", "Scope", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "ae", "NUMBER", "a", "NUMBER", "f", "NUMBER", "LINK", "line", "processing", "NUMBER", "php", "geometry", "that", "s", "not", "even", "an", "option", "regardless", "you", "can", "do", "NUMBER", "resize", "NUMBER", "null", "x", "or", "NUMBER", "resize", "NUMBER", "x", "It", "s", "not", "an", "option", "specified", "by", "the", "docs", "NUMBER", "Not", "saying", "its", "invalid", "but", "without", "the", "x", "be", "the", "documented", "and", "expected", "way", "and", "should", "remain", "default", "since", "we", "have", "to", "choose", "NUMBER", "It", "s", "not", "that", "hard", "to", "add", "an", "x", "NUMBER", "It", "s", "ambiguous", "whereas", "imagemagicks", "docs", "be", "not", "NUMBER", "For", "now", "you", "can", "add", "the", "x", "parameter", "but", "if", "you", "find", "unambiguous", "docs", "we", "can", "add", "the", "x", "parameter", "by", "default", "if", "you", "re", "use", "gm", "Okay", "NUMBER", "Can", "you", "give", "us", "a", "case", "where", "it", "would", "give", "unexpect", "results", "This", "way", "we", "can", "change", "it", "with", "test", "NUMBER", "ugh", "i", "keep", "pressing", "close", "reopen", "comment", "on", "my", "phone", "NUMBER", "but", "yeah", "i", "don", "t", "think", "we", "should", "change", "anything", "unless", "we", "put", "test", "and", "that", "shouldn", "t", "be", "difficult", "since", "you", "said", "it", "gives", "unexpect", "results", "NUMBER", "also", "just", "to", "be", "clear", "we", "would", "only", "add", "the", "x", "if", "the", "user", "be", "use", "graphicsmagick", "NUMBER", "Well", "that", "sucks", "NUMBER", "Do", "you", "have", "a", "source", "NUMBER", "d", "NUMBER", "d", "NUMBER", "fdcbd", "NUMBER", "fc", "NUMBER", "e", "NUMBER", "cbc", "NUMBER", "add", "docs", "too", "NUMBER", "d", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "cab", "NUMBER", "ab", "NUMBER", "any", "follow", "ups", "i", "m", "closing", "reopen", "if", "you", "have", "more", "info", "please", "NUMBER", "NUMBER", "not", "sure", "what", "you", "mean", "NUMBER", "can", "you", "clarify", "use", "code", "reopen", "when", "you", "do", "NUMBER", "gm", "assumes", "you", "have", "gm", "imagemagick", "install", "globally", "if", "that", "s", "what", "you", "mean", "NUMBER", "which", "version", "of", "gm", "shargors", "not", "sure", "NUMBER", "Does", "use", "graphicsmagick", "directly", "cause", "the", "same", "issue", "If", "not", "we", "should", "confirm", "we", "pass", "the", "correct", "args", "NUMBER", "Maybe", "checkout", "what", "the", "graphicsmagick", "docs", "say", "about", "it", "NUMBER", "fix", "be", "in", "NUMBER", "shargors", "as", "I", "previously", "mention", "please", "investigate", "with", "graphicsmagick", "directly", "as", "all", "we", "do", "be", "pass", "argument", "to", "the", "gm", "binary", "NUMBER", "Please", "post", "your", "findings", "NUMBER", "img", "NUMBER", "umbnail", "width", "height", "was", "contributed", "recently", "haven", "t", "tried", "it", "myself", "NUMBER", "it", "doesn", "t", "matter", "be", "its", "one", "fn", "btw", "since", "nothing", "executes", "until", "you", "write", "or", "stream", "etc", "NUMBER", "you", "can", "always", "extend", "gm", "LINK", "gm", "to", "fit", "your", "needs", "too", "NUMBER", "use", "gmobj", "NUMBER", "in", "density", "NUMBER", "to", "add", "args", "to", "the", "internal", "_in", "array", "NUMBER", "It", "s", "hard", "tell", "from", "the", "docs", "if", "density", "be", "always", "use", "before", "input", "NUMBER", "If", "it", "be", "I", "ll", "change", "it", "to", "use", "NUMBER", "in", "NUMBER", "_really", "need", "to", "change", "this", "api", "in", "NUMBER", "to", "better", "support", "arg", "ordering", "NUMBER", "_", "just", "release", "NUMBER", "with", "a", "fix", "this", "be", "awesome", "NUMBER", "i", "merge", "it", "locally", "NUMBER", "will", "publish", "in", "a", "day", "or", "two", "NUMBER", "NUMBER", "release", "in", "NUMBER", "just", "plain", "javascript", "will", "help", "you", "js", "var", "img", "gm", "imgPath", "var", "filter", "clean", "userDefinedFilter", "var", "args", "clean", "userDefinedArgs", "img", "filter", "args", "NUMBER", "write", "NUMBER", "clean", "be", "a", "made", "up", "method", "you", "defined", "thanks", "looks", "pretty", "good", "NUMBER", "left", "a", "few", "comments", "NUMBER", "this", "project", "really", "needs", "better", "test", "to", "validate", "stuff", "like", "this", "NUMBER", "i", "was", "looking", "at", "LINK", "imagediff", "which", "might", "help", "NUMBER", "would", "you", "be", "open", "to", "giving", "it", "a", "shot", "for", "this", "test", "if", "its", "successful", "we", "can", "start", "rolling", "it", "out", "to", "the", "stream", "test", "too", "NUMBER", "yeah", "long", "term", "I", "plan", "on", "switching", "to", "mocha", "NUMBER", "On", "Thu", "Dec", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Dan", "Milon", "notifications", "github", "NUMBER", "com", "write", "I", "think", "that", "HumbleSoftware", "js", "imagediff", "LINK", "imagediffwould", "be", "a", "great", "tool", "for", "test", "but", "I", "would", "also", "prefer", "a", "BDD", "style", "test", "framework", "NUMBER", "mocha", "LINK", "It", "took", "me", "a", "while", "to", "figure", "out", "that", "custom", "test", "NUMBER", "Unfortunately", "I", "ve", "get", "limited", "time", "so", "no", "promise", "but", "I", "might", "give", "this", "a", "try", "sometime", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Aaron", "aaronheckmann", "LINK", "aaronheckmann", "merge", "thanks", "man", "Thanks", "for", "open", "this", "NUMBER", "I", "think", "there", "s", "a", "better", "solution", "out", "there", "yet", "but", "haven", "t", "had", "time", "to", "look", "into", "it", "myself", "NUMBER", "The", "reason", "I", "m", "NUMBER", "on", "this", "be", "b", "c", "this", "will", "cause", "weird", "side", "affects", "later", "on", "that", "never", "use", "to", "occur", "NUMBER", "after", "some", "research", "I", "ve", "come", "to", "the", "same", "conclusion", "NUMBER", "merge", "in", "NUMBER", "thanks", "not", "today", "NUMBER", "yes", "node", "provides", "child_process", "timeouts", "for", "the", "exec", "and", "execFile", "methods", "but", "we", "re", "use", "spawn", "to", "support", "Streams", "and", "Buffers", "so", "some", "plumbing", "be", "required", "NUMBER", "I", "ll", "accept", "a", "pull", "request", "for", "this", "NUMBER", "fix", "in", "NUMBER", "if", "gm", "imagemagick", "return", "a", "weird", "value", "please", "use", "identify", "first", "and", "read", "the", "value", "afterward", "NUMBER", "see", "LINK", "density", "be", "just", "a", "wrapper", "around", "NUMBER", "out", "but", "there", "be", "also", "NUMBER", "in", "which", "you", "can", "use", "to", "directly", "pass", "your", "args", "NUMBER", "gm", "NUMBER", "NUMBER", "in", "density", "NUMBER", "x", "NUMBER", "NUMBER", "resize", "NUMBER", "Not", "sure", "both", "thumb", "LINK", "and", "autoOrient", "LINK", "be", "sugar", "and", "involve", "several", "calls", "to", "graphicsmagick", "which", "may", "not", "play", "perfectly", "well", "together", "NUMBER", "It", "should", "be", "easy", "to", "track", "down", "what", "this", "issue", "be", "by", "just", "executing", "the", "code", "inline", "and", "playing", "with", "the", "options", "that", "be", "use", "NUMBER", "If", "thumb", "doesn", "t", "work", "right", "without", "autoOrient", "that", "could", "be", "relate", "to", "change", "made", "in", "NUMBER", "and", "how", "size", "be", "calculated", "LINK", "L", "NUMBER", "Let", "me", "know", "what", "you", "find", "out", "NUMBER", "fix", "be", "in", "NUMBER", "which", "version", "LINK", "closing", "no", "response", "NUMBER", "please", "reopen", "if", "the", "bug", "still", "exists", "in", "the", "latest", "release", "NUMBER", "merge", "thanks", "NUMBER", "we", "should", "really", "pass", "the", "error", "to", "all", "the", "queued", "callbacks", "instead", "LINK", "L", "NUMBER", "NUMBER", "be", "this", "the", "same", "issue", "as", "NUMBER", "if", "not", "we", "should", "track", "the", "cause", "separately", "and", "get", "it", "fix", "NUMBER", "yeah", "should", "just", "be", "like", "js", "while", "idx", "self", "NUMBER", "_iq", "idx", "NUMBER", "call", "self", "err", "self", "NUMBER", "data", "merge", "thanks", "yeah", "looks", "good", "NUMBER", "I", "merge", "the", "addition", "NUMBER", "we", "still", "need", "to", "document", "their", "differences", "and", "that", "graphicsmagick", "doesn", "t", "support", "this", "method", "NUMBER", "its", "would", "be", "great", "if", "you", "could", "write", "up", "something", "quick", "NUMBER", "all", "the", "docs", "be", "in", "the", "gh", "pages", "branch", "NUMBER", "thanks", "again", "oh", "nice", "thanks", "again", "NUMBER", "hard", "to", "tell", "from", "the", "example", "NUMBER", "hopefully", "theres", "a", "pull", "request", "in", "the", "works", "from", "the", "community", "for", "accepting", "Buffers", "which", "may", "be", "the", "solution", "here", "NUMBER", "LINK", "issuecomment", "NUMBER", "can", "you", "provide", "the", "img", "in", "question", "so", "I", "can", "take", "a", "look", "when", "i", "get", "a", "chance", "just", "post", "a", "link", "to", "it", "or", "smth", "NUMBER", "fix", "in", "NUMBER", "thanks", "for", "report", "just", "wondering", "why", "you", "d", "want", "to", "rotate", "NUMBER", "wouldn", "t", "that", "be", "a", "no", "op", "yeah", "get", "it", "thanks", "nice", "yeah", "we", "can", "rename", "NUMBER", "i", "don", "t", "have", "any", "time", "to", "work", "on", "gm", "ATM", "NUMBER", "if", "you", "d", "like", "to", "fix", "it", "I", "ll", "merge", "NUMBER", "probably", "not", "since", "orientation", "detection", "requires", "the", "verbose", "flag", "to", "work", "properly", "NUMBER", "On", "Sat", "Nov", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Lance", "Fisher", "notifications", "github", "NUMBER", "comwrote", "Cool", "Thanks", "for", "fix", "this", "It", "should", "make", "autoOrient", "faster", "too", "right", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "Aaron", "aaronheckmann", "LINK", "aaronheckmann", "try", "out", "release", "NUMBER", "which", "optimizes", "several", "getter", "methods", "performance", "NUMBER", "impacted", "methods", "be", "format", "depth", "size", "color", "filesize", "see", "LINK", "for", "more", "details", "NUMBER", "honestly", "i", "haven", "t", "use", "it", "either", "was", "a", "community", "contribution", "NUMBER", "its", "just", "switching", "out", "convert", "for", "whatever", "you", "pass", "NUMBER", "LINK", "merge", "NUMBER", "thanks", "commented", "on", "the", "Obvious", "gm", "commit", "On", "Fri", "Aug", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Daniel", "Pupius", "TAG", "write", "I", "m", "use", "gm", "to", "downsample", "and", "crop", "images", "and", "be", "seeing", "this", "error", "fairly", "regularly", "about", "NUMBER", "of", "request", "NUMBER", "Making", "the", "same", "call", "a", "second", "time", "works", "just", "fine", "so", "it", "doesn", "t", "appear", "to", "be", "a", "problem", "with", "the", "inputs", "NUMBER", "I", "realize", "it", "s", "internal", "to", "graphicsmagick", "but", "was", "hoping", "you", "might", "have", "some", "insight", "into", "what", "might", "be", "cause", "the", "issue", "and", "ways", "to", "alleviate", "the", "problem", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "Aaron", "aaronheckmann", "LINK", "aaronheckmann", "i", "think", "NUMBER", "should", "help", "NUMBER", "will", "merge", "soonish", "going", "to", "close", "now", "that", "NUMBER", "be", "merge", "so", "the", "behavior", "from", "node", "NUMBER", "x", "be", "different", "than", "NUMBER", "x", "I", "ll", "look", "into", "it", "when", "I", "get", "time", "i", "still", "cannot", "reproduce", "NUMBER", "if", "you", "can", "track", "it", "down", "further", "somehow", "please", "reopen", "NUMBER", "not", "sure", "if", "graphicsmagick", "support", "that", "NUMBER", "gm", "_should_", "work", "if", "it", "do", "NUMBER", "neat", "can", "you", "provide", "a", "test", "case", "NUMBER", "want", "to", "make", "sure", "it", "s", "fix", "properly", "tracked", "it", "down", "NUMBER", "the", "callback", "to", "gm", "resp", "logo", "NUMBER", "w", "NUMBER", "png", "NUMBER", "ream", "function", "err", "stdout", "stderr", "be", "already", "call", "by", "the", "time", "the", "error", "occur", "on", "the", "internal", "child", "process", "stdin", "stream", "so", "its", "too", "late", "to", "pass", "the", "err", "to", "the", "callback", "NUMBER", "instead", "to", "detect", "this", "case", "you", "can", "test", "the", "output", "of", "stderr", "for", "execvp", "No", "such", "file", "or", "directory", "yeah", "i", "don", "t", "really", "think", "gm", "can", "do", "anything", "for", "this", "case", "NUMBER", "closing", "since", "this", "isn", "t", "really", "a", "gm", "issue", "This", "be", "great", "NUMBER", "Can", "you", "add", "some", "test", "and", "update", "the", "README", "to", "show", "support", "for", "these", "methods", "We", "also", "have", "the", "gh", "pages", "branch", "docs", "that", "should", "be", "update", "NUMBER", "I", "merge", "it", "NUMBER", "We", "just", "need", "to", "add", "docs", "NUMBER", "Had", "to", "rename", "the", "size", "method", "b", "c", "we", "already", "had", "that", "NUMBER", "renamed", "to", "rawSize", "NUMBER", "do", "the", "file", "exist", "be", "graphicsmagick", "install", "npm", "install", "gm", "do", "not", "install", "graphicsmagick", "NUMBER", "visit", "LINK", "for", "download", "installation", "instructions", "NUMBER", "D", "good", "idea", "excellent", "NUMBER", "thanks", "merge", "thanks", "can", "you", "post", "a", "full", "example", "Did", "you", "first", "try", "installing", "GraphicsMagick", "on", "windows", "On", "Apr", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "limitflyreply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "I", "install", "gm", "on", "windows", "with", "npm", "NUMBER", "When", "I", "run", "the", "thumb", "example", "I", "get", "the", "Error", "Command", "fail", "CreateProcessW", "xxxxx", "and", "code", "NUMBER", "signal", "null", "Dose", "gm", "support", "in", "windows", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "some", "of", "these", "methods", "were", "add", "by", "others", "NUMBER", "can", "you", "create", "a", "clean", "branch", "off", "of", "master", "and", "create", "a", "new", "pull", "with", "your", "additions", "LGTM", "NUMBER", "Im", "traveling", "this", "week", "but", "I", "ll", "merge", "it", "in", "soon", "NUMBER", "Thanks", "merge", "NUMBER", "thanks", "merge", "NUMBER", "Thanks", "LGTM", "NUMBER", "I", "m", "traveling", "this", "week", "but", "I", "ll", "merge", "it", "in", "soon", "NUMBER", "Thanks", "merge", "NUMBER", "thanks", "thanks", "merge", "NUMBER", "thanks", "release", "NUMBER", "with", "jwarchol", "pull", "request", "NUMBER", "I", "d", "say", "you", "re", "on", "the", "right", "track", "NUMBER", "gonna", "close", "this", "no", "change", "NUMBER", "hopefully", "fix", "in", "master", "make", "test", "be", "it", "NUMBER", "can", "you", "post", "the", "error", "ah", "thanks", "thanks", "NUMBER", "can", "you", "post", "the", "error", "make", "test", "be", "returning", "be", "you", "run", "these", "all", "in", "parallel", "you", "may", "be", "hitting", "the", "file", "handle", "limit", "NUMBER", "try", "sudo", "ulimit", "n", "NUMBER", "graphicsmagick", "be", "pretty", "hungry", "i", "guess", "NUMBER", "i", "was", "able", "to", "run", "a", "few", "hundred", "before", "run", "out", "NUMBER", "graphicsmagick", "be", "hungry", "NUMBER", "theres", "nothing", "gm", "can", "do", "about", "that", "thanks", "a", "lot", "of", "good", "stuff", "here", "but", "it", "still", "doesn", "t", "merge", "NUMBER", "trying", "add", "this", "repo", "as", "a", "remote", "and", "then", "pulling", "from", "it", "git", "remote", "add", "gm", "git", "github", "NUMBER", "com", "aheckmann", "gm", "NUMBER", "git", "git", "pull", "gm", "master", "git", "push", "origin", "master", "no", "response", "NUMBER", "closing", "Excellent", "I", "saw", "this", "in", "production", "but", "didn", "t", "have", "the", "image", "that", "cause", "it", "NUMBER", "I", "ll", "take", "a", "look", "soon", "NUMBER", "BTW", "which", "version", "I", "made", "a", "change", "in", "NUMBER", "in", "an", "attempt", "to", "handle", "these", "error", "gracefully", "for", "now", "NUMBER", "On", "Jan", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Felix", "Chanreply", "reply", "NUMBER", "github", "NUMBER", "com", "write", "Hi", "I", "saved", "this", "file", "to", "my", "hard", "drive", "LINK", "When", "I", "run", "this", "code", "gm", "tmp_path", "NUMBER", "identify", "function", "err", "data", "console", "NUMBER", "log", "data", "I", "get", "this", "error", "TypeError", "Cannot", "set", "property", "Image", "of", "undefined", "TypeError", "Cannot", "set", "property", "Image", "of", "undefined", "at", "ChildProcess", "NUMBER", "TAG", "home", "user", "abc", "src", "node_modules", "gm", "lib", "getters", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "TAG", "home", "user", "abc", "src", "node_modules", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "emit", "events", "NUMBER", "js", "NUMBER", "NUMBER", "at", "maybeExit", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Process", "NUMBER", "onexit", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "thanks", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "fyi", "LINK", "do", "the", "first", "image", "always", "have", "the", "correct", "data", "size", "or", "be", "that", "just", "sort", "of", "random", "with", "the", "one", "you", "have", "if", "the", "first", "frame", "be", "the", "frame", "of", "record", "then", "yeah", "a", "pull", "request", "to", "change", "that", "would", "be", "great", "NUMBER", "we", "should", "probably", "have", "identify", "return", "all", "the", "data", "and", "have", "size", "format", "depth", "etc", "getters", "return", "data", "from", "the", "first", "image", "only", "NUMBER", "someone", "else", "tried", "to", "do", "a", "pull", "request", "of", "this", "but", "explained", "absolutely", "nothing", "NUMBER", "do", "it", "mess", "the", "sizes", "for", "other", "types", "of", "images", "do", "the", "space", "only", "affect", "gifs", "simong", "i", "add", "that", "fix", "with", "a", "test", "aaaah", "node", "v", "NUMBER", "x", "probably", "NUMBER", "I", "ll", "fix", "asap", "ok", "i", "just", "publish", "NUMBER", "let", "me", "know", "should", "we", "close", "this", "release", "in", "NUMBER", "there", "be", "now", "an", "imageMagick", "option", "NUMBER", "you", "can", "either", "subclass", "gm", "with", "the", "option", "which", "returns", "a", "new", "constructor", "with", "the", "imageMagick", "option", "set", "js", "var", "imageMagick", "gm", "NUMBER", "subclass", "imageMagick", "true", "imageMagick", "be", "now", "a", "subclass", "of", "gm", "and", "will", "apply", "the", "imageMagick", "option", "for", "every", "operation", "imageMagick", "someImg", "NUMBER", "autoOrient", "NUMBER", "write", "NUMBER", "or", "you", "can", "use", "imageMagick", "as", "a", "one", "off", "js", "gm", "someImg", "NUMBER", "autoOrient", "NUMBER", "options", "imageMagick", "true", "NUMBER", "write", "NUMBER", "do", "what", "did", "you", "specifically", "mean", "by", "this", "i", "can", "add", "docs", "tried", "to", "look", "at", "your", "gh", "pages", "branch", "NUMBER", "it", "hurts", "my", "eyes", "_", "NUMBER", "i", "m", "just", "going", "to", "update", "the", "readme", "NUMBER", "markdown", "be", "so", "much", "easier", "closing", "this", "over", "LINK", "should", "we", "close", "this", "or", "be", "you", "still", "work", "on", "it", "merge", "thanks", "man", "dmmalam", "can", "you", "try", "out", "whats", "in", "master", "Should", "be", "work", "now", "NUMBER", "When", "you", "confirm", "I", "ll", "tag", "it", "and", "publish", "to", "npm", "NUMBER", "Thanks", "yeah", "seems", "like", "we", "should", "accept", "a", "Buffer", "NUMBER", "PR", "would", "be", "great", "excellent", "thanks", "D", "Thanks"], "text_count": [0, 2170, 643, 340, 153, 54, 193, 0, 11, 303, 228, 438, 347, 282, 260, 66, 0, 0, 0, 0, 725, 167, 103, 111, 138, 87, 0, 0, 0, 0, 1005, 641, 365, 4, 203, 83, 0, 0, 0, 0, 1550, 0, 766, 710, 315, 0, 0, 0, 0, 0, 377, 133, 189, 140, 194, 85, 193, 0, 0, 0, 995, 132, 756, 72, 0, 0, 0, 0, 0, 0, 750, 82, 546, 315, 54, 0, 0, 0, 0, 0, 1420, 837, 126, 409, 73, 49, 0, 0, 0, 0, 76, 530, 55, 0, 0, 0, 0, 0, 0, 0, 1187, 282, 646, 270, 0, 0, 0, 0, 0, 0, 1897, 3913, 57, 140, 103, 52, 0, 0, 0, 0, 5519, 17, 4251, 116, 1088, 1067]}, {"repo": "gm", "type": "nonelite", "title": "", "number of text": 303, "text": "  moving to wiki\n  In http://aheckmann.github.io/gm/docs.html#append\n\ngm(\"img.png\").append(\"another.jpg\").append(\"third.gif)\n\nLast call to append is missing a closing quote.\n  Was hoping someone could shed some light on what causes the gray colour on this image included below.\n\nThis image was processed as a stream from s3 and passed through a simple resize filter and streamed to disk.\n\ngm(stream).resize(null, 400).noProfile().stream ...\n\nThe image was processed on an EC2 c1.medium so that could have been an issue. This is not something I have seen ever when processing on my local dev machine (MBP).\n\nthanks\n\n![2c51a38b-8405-4dff-b7e5-2d98ee771a4c_ar_h400](https://f.cloud.github.com/assets/447507/665885/f9187a22-d7ae-11e2-9437-269143d4ac26.jpg)\n So the image goes to disk, then in onClose I run an fs.stat to get the size before I stream it back to s3 (using Knox). \n\n``` coffee\ngm(stream)\n  .resize(null, 400)\n  .noProfile()\n  .stream (err, stdout, stderr) ->\n    ws = fs.createWriteStream '/tmp/img.png'\n    ws.on 'close', onClose\n    stdout.pipe(ws)\n```\n\nAs I said my MBP (with SSD) has never shown this kind of issue before. I am thinking that the write performance of the EC2 instance could be at fault here.\n OK, good point. That code was a hangover from originally attempting to simply stream directly back S3. Will get back to you with the results.\n\nAppreciate the quick response.\n That was my thought too, especially as it avoid the pains of dealing with the inconsistencies of writing to EBS. Will try both options.\n You are dead-on, it was the file size being set incorrectly. Not really sure why I hadnt seen that earlier. Thanks again for your help. It is a great library, am enjoying using it a lot.\n  .stream('png') results in a JPEG file being generated instead of PNG.\n\nProblem is that in command.js the 'png' is assigned to variable \"callback\".\n\nWorkaround: use  .stream('png', 1) instead.\n\nExample code\n\nvar gm = require('gm');\nvar fs = require('fs');\n\nvar ins = fs.createReadStream('orig.jpg');\nvar outs = fs.createWriteStream('thumb.png');\n\ngm(ins, 'orig.jpg')\n        .resize(200, 140, '^')\n        .gravity('Center')\n        .crop(200, 140, 0, 0)\n        .stream('png')\n        .pipe(outs);\n\nThe resulting output file is a JPEG file, not PNG.\n Updated the description.. \n Don't know. But this is the problem:\n\n  proto.stream = function stream (format, callback) {\n    if (!callback) callback = format, format = null;\n\nIf no callback supplied -> format is assumed to be the callback. \nThis line should be \n\nif (!callback && typeof format === 'function') ...\n  If I feed the gm constructor a buffer created with `new Buffer(str, [encoding])`, I get the following error:\n\n```\nAssertion failed: (!uv__io_active(&stream->io_watcher, UV__POLLOUT) || !ngx_queue_empty(&stream->write_completed_queue) || !ngx_queue_empty(&stream->write_queue) || stream->shutdown_req != NULL || stream->connect_req != NULL), function uv_read_stop, file ../deps/uv/src/unix/stream.c, line 1329.\n```\n\nI'm using node 0.10.10.\n\nI create the buffer from a base64 string I receive from a POST request (via https://postmarkapp.com/ Inbound service).\n\nI can save a file from that string using `fs.writeFile` with no issues.\nAnd if I feed gm a buffer from that same file using `fs.readFile` it works.\n\nIn both cases, I have checked what I feed gm is actually a buffer via `Buffer.isBuffer(obj)`.\n\nThe error looks like a node bug but I'm posting here first\u2026\n\n/\n\nTo make my script work in practice I'm saving the file to a temp folder and then doing gm(filepath). But I would be nice to skip this extra step.\n @jonathanong thank you for the feedback. Downgraded.\n\nCan you please post any references to this bug so I know when it gets fixed?\n  Is there a graceful way to check if gm can execute graphicsmagick commands? For example if it's not installed?\n\nThanks, Awesome Lib!\n\nDonovan\n Is there a specific place in the chain I should be catching the error? Seems like when I do it in the write callback, it still crashes. Wasn't sure if the error thrown internally do to gm not being present was happening before the write function can return the error in the callback.\n\nThanks again,\nDonovan\n\nOn Jun 1, 2013, at 9:17 PM, Jonathan Ong notifications@github.com wrote:\n\n> if graphicsmagick or imagemagick isn't installed, an error will be thrown. not sure what you're asking for exactly.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n Yeah I agree. We should rip out the lib detection.\n\nOn Sunday, June 2, 2013, Jonathan Ong wrote:\n\n> if you execute a command like gm().write(), it will throw an error if\n> imagemagick or graphicsmagick is not installed. it should \"throw\" as it's a\n> developer error, not an application error.\n> \n> honestly, i'm not sure whether this library should support systems without\n> imagemagick or graphicsmagick installed. you can always check whether the\n> system has imagemagick or graphicsmagick installed by doing convert\n> -version or gm -version using child_process.exec (\n> http://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback\n> ).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aheckmann/gm/issues/178#issuecomment-18818673\n> .\n\n## \n\nAaron\n@aaronheckmann https://twitter.com/#!/aaronheckmann\n Thanks for the info. Works great!\n  ```\ngm(src)\n.resize(size, size)\n.crop(size, size, size / 2, size / 2)\n.write(dst, function(err) {\n// \n});\n```\n\nThis resizes my pic it but don't crop it :/\n\nThanks\n Try doing `DEBUG=gm` node myscript.js to see what command is actually being executed.\n  I am in a cloud9 environment on c9.io and I have successfully installed graphicsmagick and the node.js gm module. I have been successful in calling a number of methods however I am having an issue with \"colors\" for color reduction.\n\nHave you successfully been able to call colors and get it to reduce the colors in the source image? The documentation states the usage is: gm(\"img.png\").colors(int) but I can't seem to get it to work and was wondering if its just soothing I'm missing.\n\nI have provided a reduced code block to give an idea as to how I'm using it in hopes that you may see what I am perhaps doing wrong. In the data event handler, I still have way more colors being shown in the passed \"chunk\" param then my reduced amount of 8 in this case.\n\nThanks!\n\n```\nvar img = gm(sourceFilename),\ntmpFilename = temp.path({ suffix: '.miff' });\n\nreturn img.noProfile().bitdepth(8).colors(8).scale(Math.ceil(wh.height / ratio), MAX_W).write('histogram:' + tmpFilename, function (err) {\n   var histogram, rs;\n   histogram = '';\n   rs = fs.createReadStream(tmpFilename, {encoding: 'utf8'});\n\n   rs.addListener('data', function (chunk) {\n      console.log(\"Data: \", chunk);\n   });\n});\n```\n Don't understand why this happens.  Been workin on this for days and I post here and then I seem to see what the problem is. There is something wrong with scale.  I also used resize and saw the same thing.  When I removed scale I am getting the color reduced image returned.  \n You might want to look into using `gm().stream()` instead of writing a file and then reading it (unless that's what you want). \n\nTry doing `DEBUG=gm node myscript.js` to see what command is actually being executed. \n  ...rectangles in one call.\n you need a test\n Ok, i'll add that later.\n are you using tabs? 2 spaces per indentation\n I will keep that in mind.\nThanks for the hints.\n @jonathanong Yes, i think so. But i thought of adding the functionality for round rectangles. That's just 2 more parameters so drawRectangleMulti() behaves like the original drawRectangle(). At the moment drawRectangleMulti() only ues the coordinates. What do you think about it?\n Ok, i think i'm done now.\nIf there's nothing more from your side i would be happy if you merge it to the project.\n -1 for me. It's not really adding any new functionality. I'm not stating it wouldn't be useful so how about publishing as a separate module and adding it to our [wiki](https://github.com/aheckmann/gm/wiki)?\n  Due to some GraphicsMagick weirdness, this doesn't work for me:\n\n```\n    gm(buf)\n        .colors(PNG_PALETTE_SIZE)\n        .resize('50%')\n        .stream()\n        .pipe(out);\n```\n\nBut something like this would:\n\n```\n    gm(buf, 'PNG32:-')\n        .colors(PNG_PALETTE_SIZE)\n        .resize('50%')\n        .stream('PNG:-')\n        .pipe(out);\n```\n\n(I'm trying to convert from PNG32 to an indexed, semi-transparent PNG. You can verify the same GraphicsMagick bug on the commandline.)\n\nIn other words, I'd like to generate this command:\n\n```\ngm convert PNG32:- -colors 128 -resize 50% PNG:-\n```\n\nThere should be a way to override the `-` that gm supplies by default. In my case, I need `PNG32:-` on the input and `PNG:-` on the output.\n Yup\n\nMy workaround, unfortunately, is to use spawn() directly.\n You got an image we can use? Better yet, can you submit a pr for a test?\n It might be a few days ... as I said, I've developed my workaround. Any work I do on this bug will be on my own time, which is scant this season.\n no problem dude. i would fix this, i just don't know where i'd get a png32 \n It's just a PNG with transparency. Your avatar on https://github.com/aheckmann/gm/issues/166#issuecomment-17307177 is a PNG32. (Actually, it's a good candidate for conversion to PNG8....)\n oh what! interesting. thanks!\n i have a branch with this feature: https://github.com/aheckmann/gm/tree/stdin-custom\n\nlet me know how it works out for you. however, i'm not even seeing this issue on my comptuer, so i don't know if this is necessary. what kind of error do you get it? does it propagate to `gm` at all or does it die silently?\n\nalso, does this happen only if you use stdout vs. writing to a file?\n   If only the width is specified for a resize operation,\nGraphicsMagick requires the format `-resize 10x`\nwhile ImageMagick requires the format `-resize 10`\n I see that this requires modifications to a couple of other tests as well. I'll update those if you agree on the solution.\n Ah, good catch on the typo. I've updated the remaining tests now.\n Is that really necessary? The resized image is portrait-format, so as long as the `!` flag isn't given and the width is correct, the height should also be correct. `resize(x, x)` would result in a width < x, which is tested for.\n\nThe reason I left it out is that I don't think it is required in this case, and I was worried it could be prone to rounding errors since the calculated height won't be a discrete number.\n Yes, it fails without the patch applied to args.js\n I haven't tested with ImageMagick though, but the behavior shouldn't be changed for that.\n Great! Thanks for the feedback.\n This causes a regression when used in the following way:\n\n```\n.resize(this.width, this.height, (!this.height) ? 'x' : '')\n```\n\nSorry I don't have time to create a test case at the moment\n\nEdit: This is occuring when using GraphicsMagick '1.3.18'\n Is this a common use case? `x` isn't a valid option according to either of ImageMagick/GraphicsMagick or node-gm's documentations, and to me it seems like a hack to work around the bug that this commit fixes.\n\nhttp://aheckmann.github.io/gm/docs.html#resize\n yeah, you shouldn't be setting any options. gm does the `x` option automatically, though it's not really an option, more like a delimiter.\n  ![Original](http://img213.imageshack.us/img213/4549/originaled.jpg)\n# In command line\n\n`convert image.jpg -resize 100x100^ -gravity center -extent 100x100 image.jpg`\n\n![Result](http://img444.imageshack.us/img444/6271/imagetestc.jpg)\n# In Node:\n\n```\ngm('/Users/user/Desktop/image.jpg')\n        .resize('100x100^')\n        .gravity(\"center\")\n        .extent('100x100')\n        .write('/Users/user/Desktop/ImageTest.jpg', function (err) {\n            if (!err) console.log('done');\n          });\n```\n\n![Result](http://img18.imageshack.us/img18/3236/nodeu.jpg)\n# Versions\n\n`ImageMagick 6.8.0-7 2013-04-19`\n`gm 1.9.0`\n`node v0.8.23`\n\nAny ideas of how to get the command line version using gm?\n apologies @jonathanong \n -resize 640x or -resize x640 doesn't seem to be explicitly compatible with the docs\n\n`gm(\"img.png\").resize(width, height [, options])`\n\n`resize('640x')` works when I tried it though.\n`resize('x640')` prob works too  \n\nJust assumed and failed :)  Thanks for the quick response.\n  whatever example or test I try to run on my x86 machine than gm spits out an uncatched ENONENT error, imagemagick is installed.\n\nIf I install graphicsmagick then the error goes away.\nI'm using 1.9.0\n I've had already opened and read that page, but completely missed the important part: time to get some holiday.\n\nsorry for the noise.\n  When trying to stream images using the webp format with ImageMagick's native support, gm ends the stream without sending any data.\n\nInstead, the (valid webp) image is written in a file named `WEBP/-`, in the current working directory.\n\nThe script works perfectly with common formats such as PNG or JPG.\n I'm on a Mac (10.8.3). libwebp is installed, version 0.3.0, and imagemagick is 6.8.0-10. Calling from the shell `convert kitty.png kitty.webp` works perfectly.\nHere's a (very) minimal slice of code that demonstrates the issue:\n\n``` javascript\nvar gm = require('gm').subClass({ imageMagick: true });\nvar handle = gm(process.stdin);\nprocess.stdin.resume();\nhandle.stream('webp', function streamOut(err, stdout, stderr) {\n  if (err) return process.exit(1);\n  stderr.pipe(process.stderr);\n  stdout\n    .on('end', function () {\n      process.exit();\n    })\n    .pipe(process.stdout);\n});\n```\n\nSimply used as: `cat kitty.jpg | node gm_webp.js > kitty.webp`\n My mistake, I updated my previous post.\n You're right, got it fixed, too. Thanks for the hint!\n  done\n  +1\n  Add to the readme/installation section the version's we tested successfully.\n\nsee #149\n  i think thats the right move. i don't want to get in the business of testing the correctness of graphicsmagick itself.\n  it works fine right now\n  Wouldn't this be better written as a binding for Magick++?\n\nhttp://www.graphicsmagick.org/Magick++/\n I debated this early in the project but never made time. Its not clear to me if it would indeed be better: the advantage now is the work is done in a separate process so the event loop stays happy. What does \"better\" mean?\n By \"better\" I mean:\nBetter error handling (parsing stderr sucks)\nMore robust (i.e., no more issue #148, no more bugs like the gif thing I recently made a pull request on)\n\nIt could still spawn a separate thread or process if necessary, of course. It would be that or be able to work on smaller chunks of data. Definitely don't want to do it synchronously. But it would still hopefully accomplish the two above goals.\n\nI'm interested in possibly working on this down the line - I'd like your thoughts though.\n more robust is debatable. with new code comes new bugs.\n\nI'm not against this at all, just not convinced yet that a rewrite with Magick++ is a clear win. I'm interested but partly just due to learning more C++ which really shouldn't have a vote in this :)\n @jonathanong I was just about to say the same thing. Heroku for example only supports IM.\n i'll probably start a branch for this and see what happens. i'd like to learn some c++ anyway.\n branch name is `binding`. we'll see what happens. feel free to hack on it.\n yeah thats the idea. a couple bindings (or whatever makes sense). \n\nevery binding method is async with a `<method>Sync` counterpart for good measure.\n\nmaybe:\n\n``` js\nassert.equal(img, img.resize(40, 50)) // chains\nvar buffer = img.resizeSync(40, 50)\nimg.resize(40, 50, function (err, buffer) {})\nvar stream = img.resize(40, 50).stream()\n```\n\nI don't know how this will turn out but its worth exploring.\n @aheckmann if you are interested, I've written a very nice graphicsmagick buildpack for Heroku. https://github.com/mcollina/heroku-buildpack-graphicsmagick\n @mcollina nice\n Could you list it in the README in a FAQ?\nCould I send you a pull-request for that?\n you can add it to the wiki. no pull request required. we can add links to the wiki in the readme.\n  Yes for v2 but we should fix autoOrient.\n  I just added lost.png.\n  probably need to bump gleak and it looks like maybe you compiled with dtrace?\n hmm weird. is this osx or smartos or ?\n oh ok - yeah those trace globals show up for me too now on 0.10. \n updated gleak fixes this\n  I've been too busy lately to give this project the care it needs so I've given you commit access to make any changes you see fit. A test case would be really wonderful.\n  I was mostly wondering if anyone had had success working with gm and node 0.10.  In particular our app is using `image.stream()` and am having a hard time getting any data out of the result.  Has anyone else had problems?\n I ran the tests on my MacBook Air today which seemed mostly ok, one test spit an error from GraphicsMagick that doesn't occur on 0.8x. Otherwise it might just be the API changes to Node streams - you may need to resume the stream or something? If you track anything down I gave you commit access to this project to make any changes you find necessary.\n ok, thanks.  I'll keep digging.  Will close this issue for now until I have anything more concrete.\n It looks like this issue is related to image.identify and image.stream, the response stream is empty.  Everything else works as expected.  I'm going to continue digging, but if anyone more familiar with the internals of the library has ideas that'd be much appreciated.  I'm working from head as of this morning.\n Will try and create a cut-down test case.  But we're doing a bunch of transformations then pipe the image stream into a HTTP response.\n\nWhat's interesting is, if I add an `on('data')` listener to stdout and stderr it sometimes works, presumably forcing into old style streams, but will still occasionally fail with `gm convert: Empty input file (/var/folders/xd/919j9tfn7_q4t3d02581rf980000gn/T/gmhFhPCU)`.\n Here's a simple test case, will try your patch.\n\n```\n\nvar http = require('http')\nvar gm = require('gm')\nvar util = require('util')\n\nhttp.createServer(function (req, res) {\n\n  http.get('http://distilleryimage0.s3.amazonaws.com/ac60b1589f0b11e292c422000a1fbe6b_7.jpg', function (imageResponse) {\n\n    var image = gm(imageResponse, 'monkey.jpg')\n\n    // Succeeds:\n    //streamImage(image); return\n\n    image.identify({bufferStream: true}, function (err, info) {\n      if (err) return writeError('gm.identify failed', err)\n\n      // Fails:\n      streamImage(image)\n    })\n  }).on('error', function (err) {\n    writeError('Failed to load image', err)\n  })\n\n  function streamImage(image) {\n    image.stream(function (err, stdout, stderr) {\n      if (err) return writeError('gm.stream failed', err)\n      res.writeHead(200, {'Content-Type': 'image/jpeg'})\n      stdout.pipe(res)\n    })\n  }\n\n  function writeError(message, err) {\n    console.log(message, err)\n    res.writeHead(200, {'Content-Type': 'text/plain'})\n    res.end(message + '\\n\\n' + util.inspect(err))\n  }\n\n}).listen(3100, '127.0.0.1')\n\n```\n The suggestion in #141 doesn't appear to work on its own, the pipe from `stdout` doesn't get any data.\n\nI thought streams2 was meant to make things better :-/ \n In the real code we use the result of identify to determine resize/crop\noperations.  Unfortunately...\n\n-- Dan\n\nOn Mon, Apr 8, 2013 at 12:55 PM, Jonathan Ong notifications@github.comwrote:\n\n> interesting.\n> \n> although this is a bug, you should just do identify and stream in\n> parallel since they are independent of each other. it should be faster as\n> well both in terms of memory management and computation time.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aheckmann/gm/issues/135#issuecomment-16077845\n> .\n Cool, let me give that a try.\n\n-- Dan\n\nOn Mon, Apr 8, 2013 at 1:11 PM, Jonathan Ong notifications@github.comwrote:\n\n> Simple way:\n> \n> http.get('image.jpg', function (resp) {\n>   var buffers = []\n> \n>   resp.on('data', function (chunk) {\n>     buffers.push(chunk)\n>   })\n> \n>   resp.on('end', function () {\n>     var buffer = Buffer.concat(buffers)\n> \n> ```\n> gm(buffer).identify(function (err, info) {\n>   // stuff\n> \n>   gm(buffer).resize().stream(function (err, stdout) {\n>     // stuff\n> \n>     stdout.pipe(res)\n>   })\n> })\n> ```\n> \n>   })})\n> \n> More convoluted, but faster:\n> \n> http.get('image.jpg', function (resp) {\n>   var buffers = []\n> \n>   resp.on('data', function (chunk) {\n>     buffers.push(chunk)\n>   })\n> \n>   gm(resp).identify(function (err, info) {\n>     // stuff\n> \n> ```\n> gm(Buffer.concat(buffers)).resize().stream(function (err, stdout) {\n>   // stuff\n> \n>   stdout.pipe(res)\n> })\n> ```\n> \n>   })})\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aheckmann/gm/issues/135#issuecomment-16078968\n> .\n Ok, that work around works.  Thanks.  Do you want to keep this bug open for tracking?  I assume this should work, but to be honest the streams2 changes confuse me.\n @jonathanong good idea. if folks realize they need to pass `bufferStream` they probably already get what is going on and how to fit it anyway (as in your example).\n  GM has a very useful command for adding watermarks:\n\ngm composite -gravity center -dissolve 15 watermark.png base.jpg output.jpg\n\nI am struggling to find its equivalent in this node gm module. Can you please add the composite command or point me in the right direction with some existing alternatives?\n I was able to use the sub command:\n\nimageMagick()\n .subCommand('composite')\n .in('-compose', 'Over', '.watermark.png', 'base.png')\n .write('output.png', \n    function(err){ console.log('done', err); });\n @jonathanong sounds good to me on both.\n   gm outputs a size for each frame. Previously, they would be concatenated together like:\n42x4242x4242x4242x42\nso size() would output 42 width and 4242 height, when height is actually 42\n  How would I implement something like (http://stackoverflow.com/questions/12231624/imagemagick-text-into-rectangle/12232292#12232292):\n\n```\nconvert                  \\\n  -background '#0008'    \\\n  -gravity center        \\\n  -fill white            \\\n  -size ${width}x100     \\\n   caption:\"This is a sample text to test \\\nthe automatic sizing of fonts by ImageMagick.\" \\\n   target_image.png \\\n +swap                   \\\n -gravity north          \\\n -composite              \\\n  output1.png\n```\n\nI'm trying to automatically annotate an image with the annotation contained in a background rectangle - this seems the best way of handling it.  I'd automatically resize the background rectangle based on the image dimensions and text length.\n\nOpen to alternative suggestions.  I've tried using the .drawText method but the issues are 1. trying to dimension and draw the background box and 2. modifying the font size to fit.\n\nFirst attempt, works ok but is ugly (run in the examples directory)\n\n``` javascript\nvar gm = require('../')\n  , dir = __dirname + '/imgs'\n\ntext='testing 123'\n\nim = gm.subClass({ imageMagick: true });\n\nim()\n  .background('#0008')\n  .fill('white')\n  .out('-size',text.length*10+'x25','caption:' + text,dir+'/photo.jpg')\n  .out('+swap')\n  .out('-geometry','+100+100')\n  //.gravity('North')\n  .out('-composite')\n\n  .write(dir + '/caption.png', function(err){\n    if (err) return console.dir(arguments)\n    console.log(this.outname + ' created  :: ' + arguments[3])\n  }\n) \n```\n  My workload holds doing an order of 100 parallel calls for cropping.\n\nFrom my testing, it looks that as the level of parallelism grows, using `imagemagick` and ImageMagick gives out results in the range of seconds. I was getting 3400ms, 4000ms, 6700ms as additional calls stacked on top of the current queue and are made.\nThis is very strange since forks on Unix should be cheap, and I don't see how cropping a 400x400 image can be in the order of seconds. I figured this is some kind of bug.\n\nFrom previous experience I know GraphicsMagick was faster than ImageMagick but for this specific project I was avoiding premature optimization and preferred the comfort of using existing ImageMagick based module (I started this project 2 years ago when `gm` wasn't fitting my needs for some forgettable reason).\n\nSwitching to `gm` and GraphicsMagick I'm now seeing an order of 10ms calls. this is **2 orders of magnitude** faster.\n\nThis is an epic win, thanks!\n  How would I run a command similar to this through this module:\n\n```\ngm convert -font Arial.ttf label:\"Hello World\" test.png\n```\n\nNote that the font need to go **before** the label, otherwise it doesn't work as expected. My first attempt was this:\n\n``` javascript\nfunction renderText(text, res) {\n    gm('label:' + text)\n        .font('Arial.ttf')\n        .stream('output.png', function (err, stdout, stderr)  {\n            // TODO: Proper error handling\n            if (err) {\n                throw err;\n            }\n\n            stdout.pipe(res);\n        });\n}\n```\n\nBut that puts the font parameter after the label:, not before it.\n Okay I got it working like the following:\n\n``` javascript\n    gm()\n        .font('Arial.ttf')\n        .out('label:' + text)\n        .stream('output.png', function (err, stdout, stderr)  {\n            // ...\n```\n\nIs this the best approach or should I be doing it differently?\n No, that produces no output. Doing it like that produces this command:\n\n```\ngm \"convert\" \"-font\" \"/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf\" \"-label\" \"\\\"Offline\\\"\" \"PNG:-\"\n```\n\nBut this is needed:\n\n```\ngm \"convert\" \"-font\" \"/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf\" \"label:Offline\" \"PNG:-\"\n```\n I think that syntax (`-label ...`) is for when you start with an existing image and want to label it (ie. for adding captions). In my case, I want to just render text with a transparent background, and hence don't have an initial image.\n @jonathanong `out()` and `in()` should be public, just a docs failure. sometimes the order of the command line options matters, which is why there are two methods. I'm open to renaming before we document them if it helps any.\n  Any idea why watermark would not be working, my guess is that's an issue with my compiled version of gm.\n\nSample\n\n```\nvar fs = require('fs')\n  , gm = require('gm');\n\ngm('img.jpg')\n.watermark(1,1)\n.write('img_marked.jpg', function (err) {\n  if (err){\n    console.error(err);\n  }\n})\n```\n\ngm version\n\n```\ngm version\nGraphicsMagick 1.3.16 2012-06-23 Q8 http://www.GraphicsMagick.org/\nCopyright (C) 2002-2012 GraphicsMagick Group.\nAdditional copyrights and licenses apply to this software.\nSee http://www.GraphicsMagick.org/www/Copyright.html for details.\n\nFeature Support:\n  Thread Safe              yes\n  Large Files (> 32 bit)   yes\n  Large Memory (> 32 bit)  yes\n  BZIP                     yes\n  DPS                      no\n  FlashPix                 no\n  FreeType                 yes\n  Ghostscript (Library)    no\n  JBIG                     yes\n  JPEG-2000                yes\n  JPEG                     yes\n  Little CMS               yes\n  Loadable Modules         yes\n  OpenMP                   yes (201107)\n  PNG                      yes\n  TIFF                     yes\n  TRIO                     no\n  UMEM                     no\n  WMF                      yes\n  X11                      yes\n  XML                      yes\n  ZLIB                     yes\n\nHost type: x86_64-pc-linux-gnu\n\nConfigured using the command:\n  ./configure  '--build' 'x86_64-linux-gnu' '--enable-shared' '--enable-static' '--enable-libtool-verbose' '--prefix=/usr' '--mandir=${prefix}/share/man' '--infodir=${prefix}/share/info' '--docdir=${prefix}/share/doc/graphicsmagick' '--with-gs-font-dir=/usr/share/fonts/type1/gsfonts' '--with-x' '--x-includes=/usr/include/X11' '--x-libraries=/usr/lib/X11' '--without-dps' '--without-modules' '--without-frozenpaths' '--with-perl' '--with-perl-options=INSTALLDIRS=vendor' 'build_alias=x86_64-linux-gnu' 'CFLAGS=-Wall -g -fno-strict-aliasing  -fPIE  -fstack-protector --param ssp-buffer-size=4  -D_FORTIFY_SOURCE=2  -Wformat -Wformat-security -Werror=format-security  -O2' 'LDFLAGS=  -fPIE -pie  -Wl,-z,relro  -Wl,-z,now ' 'CXXFLAGS=-Wall -g -fno-strict-aliasing  -fPIE  -fstack-protector --param ssp-buffer-size=4  -D_FORTIFY_SOURCE=2  -Wformat -Wformat-security -Werror=format-security  -O2'\n\nFinal Build Parameters:\n  CC       = gcc -std=gnu99\n  CFLAGS   = -fopenmp -Wall -g -fno-strict-aliasing -fPIE -fstack-protector --param ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security -O2 -Wall -pthread\n  CPPFLAGS = -I/usr/include/X11 -I/usr/include/freetype2 -I/usr/include/libxml2\n  CXX      = g++\n  CXXFLAGS = -Wall -g -fno-strict-aliasing -fPIE -fstack-protector --param ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security -O2 -pthread\n  LDFLAGS  = -fPIE -pie -Wl,-z,relro -Wl,-z,now -L/usr/lib/X11 -L/usr/lib -L/usr/lib\n  LIBS     = -ljbig -llcms -ltiff -lfreetype -ljasper -ljpeg -lpng12 -lwmflite -lXext -lSM -lICE -lX11 -lbz2 -lxml2 -lz -lm -lgomp -lpthread\n\n```\n Before I dig into this, has watermark command worked before in your library. Are you running test against it, when I briefly looked through the test dir I couldn't find reference for watermark?\n  I want to use gm to create a captcha and directly output to browser , that means, do not use \"write\" to output to disk. I tryed this(used gm buffer plugin , express):\n\n``` javascript\ngm(opts.width || 70, opts.height || 30, '#000')\n    .font(\"arial\", 20)\n    .stroke(\"#fff\", 2)\n    .fill(\"#888\")\n    .drawText(10, 22, text)\n    .buffer(function(err,buf){\n      res.send(buf);\n    });\n```\n\nbut buf.length is 0.\nAny suggest?\n If `res` is input stream, this may suite you better\n\n``` javascript\ngm(opts.width || 70, opts.height || 30, '#000')\n    .font(\"arial\", 20)\n    .stroke(\"#fff\", 2)\n    .fill(\"#888\")\n    .drawText(10, 22, text)\n    .stream(function(err,stdout){\n      stdout.pipe(res)\n    });\n```\n @duyleekun \n\nThis is ok\uff1a\n\n``` javascript\ngm('./public/static/img/image.png')\n      .font(\"arial\", 20)\n      .stroke(\"#fff\", 2)\n      .fill(\"#888\")\n      .drawText(10, 22, 'test')\n      .stream(function(err,stdout){\n        stdout.pipe(res);\n      });\n```\n\nBut this does not work:\n\n``` javascript\ngm(opts.width || 70, opts.height || 30, '#000')\n    .font(\"arial\", 20)\n    .stroke(\"#fff\", 2)\n    .fill(\"#888\")\n    .drawText(10, 22, text)\n    .stream(function(err,stdout){\n      stdout.pipe(res)\n    });\n```\n\nI tried to use gm create a new image and use \"write\" to save image to disk and this is ok.\nIs there a bug in \"gm\" create a new image and output by stream?\n @jonathanong nothing happened.no error occured and no image outputed.Like steam is empty.\n @jonathanong response is end,and nothing output to browser.\n  also attach the path of the identified file to returned data for identifying the logical location in the callback method\n  How do I do a command like the following?\n\n```\ngm composite -compose atop image1.png image2.png output.png\n```\n Theres no helper yet but the following will work.\n\n``` js\ngm()\n.subCommand('composite')\n.in('-compose', 'atop', 'image1.png', 'image2.png')\n.write('output.png', callback)\n```\n Is there a way to pass streams?\ngm()\n.subCommand('composite')\n.in('-compose', 'atop', stream1, stream2)\n.write('output.png', callback)\n Thanks for the reply! I do have the streams ready to pass to .in() but not\nquite sure how to do it as the reference you sent me does not seem to have\nany examples in there. Thank you!\n  That seems fairly counter intuitive...\n\n```\ngm(part).resize(128, 128).setFormat('jpeg').filesize({ bufferStream: true }, function (error, filesize) {\n  // filesize is equal to the size of the original file, before resizing and changing formats\n});\n```\n I see.  I think that makes sense.  If I understand you correctly, `setFormat` and `resize` are only finalized after calling `stream`.  Thanks for the help!\n  `.stream()` bypasses the \"Have you installed graphicsmagick or imageMagick\" check.\n\nDifferently from `.write()`, `.stream()` calls `_spawn()` with `bufferOutput = false`. The callback function gets the stdin and stderr streams, but not the `proc` so it could listen to the return code of end/close event.\n\nThis can be tested in a non-installed GM/IM machine with:\n\n``` javascript\ngm(\"logo:\").stream(\"png\", cb);\n```\n\nvs.\n\n``` javascript\ngm(\"logo:\").write(\"/tmp/test.png\", cb);\n```\n i can confirm this.. took several hours to figure out why i was getting 0 byte images with no complaints.\n  Here's an example:\n\n``` javascript\ngm('/path/to/an/animated.gif').format(function(err, type){\n    // output: GIFGIFGIFGIFGIFGIFGIF...\n    console.log(type);\n});\n```\n\nI guess, format appends the type of every frame to the result.\n  This line seems a bit strange to me:\nhttps://github.com/aheckmann/gm/blob/master/lib/args.js#L684\n\nIf I want to resize the image by specifying the width (eg: 100) and leaving the height as is I have to pass `\"x\"` as `options` parameter so I get: `-resize 100x`. There's no other way right now.\n\nI think that calling `.resize(100)` should result in `-resize 100x`\n What do you mean by \"that's not an option\"? Resize 100x is valid \n You're right. Strange. I remember getting two different results when using once with and once without th`x`. Maybe I just dreamt it...\n I disagree, as per the documentation that @jonathanong quoted https://github.com/aheckmann/gm/issues/118#issuecomment-16089711 the option does in fact exist:\n\n```\nwidth           Width given, height automagically selected to preserve aspect ratio.\n```\n Yep, but you don't need to specify `100x`. `100` is enough. \n My GraphicsMagick installations seem to require the `100x` format. If only `100` is specified, it is actually treated as the height. Tested versions 1.3.16 on FreeBSD and 1.3.17 on Windows.\n\nhttp://www.graphicsmagick.org/GraphicsMagick.html#details-geometry\n\nThe way I interpret the GM docs, the x should always be present:\n`-geometry <width>x<height>{+-}<x>{+-}<y>{%}{@}{!}{^}{<}{>}`\n The GM docs state that _In this document, angle brackets (\"<>\") enclose variables and curly brackets (\"{}\") enclose optional parameters._ The _x_ is not marked as optional.\n\nIf you compare the syntax for `gaussian` and `geometry`, it seems clear to me that the _x_ is required:\n`-gaussian <radius>{x<sigma>}`\n`-geometry <width>x<height>{+-}<x>{+-}<y>{%}{@}{!}{^}{<}{>}`\n\nThis is also emphasized by the fact that supplying a number without the _x_ gives unexpected results.\n It turns out that GraphicsMagick treats a single number `100` as `100x100`, so the unexpected behavior was only seen on portrait-format images.\n\nI made a pull request with a proposed solution, a test for the specific case, and modifications to the existing resize tests. Let me know what you think!\n I haven't found any documentation of that behavior, but it seems to be happening here:\nhttp://sourceforge.net/p/graphicsmagick/code/ci/tip/tree/magick/utility.c#l1712\n  I'm using de below command to get an image and draw some text. The image is saved without the text.\n\ngm('public/images/daprafazer.jpg').stroke(\"#000000\").fontSize(20).drawText(20, 20, \"GMagick!\").write('public/images/meme2.jpg', funcion(){\n...\n});\n Other functions like drawLine work.\n Working for me. Maybe a bad / missing font? Do you get an error in the callback?\n In linux?\nI have met this.May be your server didn't install ghostscript.\n also in windows,you may appoint a font-type,or it will throw \"can not find n019003l.pfb ...\" \n.font('arial',20)\n  I've been trying to figure htis out for the past few hours. Basically when I `identify({bufferStream: true}) an image then`stream`it, it loses the`interlace` options. Test case:\n\n```\nvar fs = require('fs')\nvar assert = require('assert')\n\nvar gm = require('gm').subClass({\n  imageMagick: true\n})\n\ngm('taylor-swift.jpg')\n.interlace('Plane')\n.stream(function (err, stream) {\n  assert.ifError(err)\n\n  gm(stream).identify({\n    bufferStream: true\n  }, function (err, identity) {\n    assert.ifError(err)\n\n    console.log('interlace after identify: ' + identity.Interlace)\n\n    this.stream(function (err, stdout) {\n      assert.ifError(err)\n\n      gm(stdout).identify(function (err, identity) {\n        assert.ifError(err)\n\n        console.log('interlace after stream then identify: ' + identity.Interlace)\n      })\n    })\n  })\n})\n```\n\nWhy!? right now i'm just running `identify` and `stream` in parallel.\n  Can't configuration path GraphicsMagick in gm if install to home dir \n  Hi,\nI'm trying to manipulate and resize and image.\n\nIf I prev load the image in a buffer (self.decodedFile)\n\n``` javascript\ngm(this.decodedFile).\nautoOrient().\nresize(50, 50, \"%\").\nwrite('resize.png', function(err) {\n  console.log('err: ', err);\n});\n```\n\nThe same doesnt' work even if I specify the filename as in the doc and examples:\n\n``` javascript\ngm(this.decodedFile, this.fileName).\nautoOrient().\nresize(50, 50, \"%\").\nwrite('resize.png', function(err) {\n  console.log('err: ', err);\n});\n```\n\nthe resulting image is not scaled, and is identical to the loaded one\n\nIf I start giving the image file name everything works fine.\n\n``` javascript\ngm(\"orig.jpeg\").\nresize(50, 50, '%').\nwrite('resize_2.jpg', function(err) {\n  console.log(\"err: \", err);\n});\n```\n\nI think Im missing something here, any suggestion?\n gm v: 1.8.0\nGraphicsMagick: 1.3.17\n I tried manually pulling the 1.8.1-pre but nothing changes :)\n Same here.  Resizing of file images works.  But does not work for buffers.\n\nIf a file image is resized to a smaller size and is written to a file, why is that file bigger than the original one?\n Aaron,\n\nThank you for fixing this issue so quickly.\u00a0 I have question related to that fix.\u00a0 I have an image of size 760x1140 and the file is about 33K.\u00a0 But when I resize the image to size 320x480, the files gets to be about 36K.\u00a0 What gives?\n\nThank you!\n\n---\n\n From: Aaron Heckmann notifications@github.com\nTo: aheckmann/gm gm@noreply.github.com \nCc: shargors shargors@yahoo.com \nSent: Friday, December 21, 2012 5:40 PM\nSubject: Re: [gm] Resizing does not work on buffers (#113)\n\nfix is in 1.8.1\n\u2014\nReply to this email directly or view it on GitHub.\n Never mind.\u00a0 My graphics file was invalid.\n\nThanks for you reply.\n\n---\n\n From: Aaron Heckmann notifications@github.com\nTo: aheckmann/gm gm@noreply.github.com \nCc: shargors shargors@yahoo.com \nSent: Friday, December 21, 2012 11:40 PM\nSubject: Re: [gm] Resizing does not work on buffers (#113)\n\n@shargors as I previously mentioned, please investigate with graphicsmagick directly as all we do is pass arguments to the gm binary. Please post your findings.\n\u2014\nReply to this email directly or view it on GitHub.\n  Is there a one function way to create a square thumbnail (by resizing and cropping)? Seems like thumb keeps the same aspect ratio.\n  When convert from pdf , density(400,400) - param ignored, it must been before input\nmust do direct injections.. like\n\n> > gmobj._in.push('-density')\n> > gmobj._in.push('400')\n  My Code:\n\n```\nvar gm = require('gm').subClass({\n  imageMagick: true\n})\n\nvar image = __dirname + '/taylor-swift.jpg'\n\nrequire('fs').readFile(image, function (err, buffer) {\n  gm(buffer).identify(function (err, identity) {\n    // Unhandled error is thrown here\n  })\n})\n```\n\nThe error I get:\n\n```\nevents.js:71\n        throw arguments[1]; // Unhandled 'error' event\n                       ^\nError: write EPIPE\n    at errnoException (net.js:769:11)\n    at Object.afterWrite (net.js:593:19)\n```\n i can replicate this issue... any idea as to what causes it?\n  The autoOrient function was throwing errors when used with graphicsmagick because graphicsmagick does not support the -transpose and the -transverse options. Also, graphicsmagick uses -flip and -flop instead of -flip vertical and -flip horizontal.\n\nThe previous tests only covered one case for auto orientation and that case did not reach the -transpose and -transverse portion of the code so no errors were thrown. \n\nThere are many more possible cases. I added a test suite that tests all 16 possible cases, inspired by the information in the following resources:\n- http://recursive-design.com/blog/2012/07/28/exif-orientation-handling-is-a-ghetto/\n- http://www.80sidea.com/archives/2316\n- http://www.impulseadventure.com/photo/exif-orientation.html\n- http://www.exif.org/Exif2-2.PDF\n  For example:\n\ngm(staticImgPath).resize(width, height).quality(100).sepia().write()\n\nIf I want it to apply a filter based on what the user asks for, can I pass in some sort of param and have gm automatically call the correct filter?\n\nsuch as if user says 'filter=sepia', then have gm call gm.sepia();\n  Picking up from #19, #92.\n\nAdded support for `Buffer` as source. No extra methods, see `examples/fromBuffer.js` for an example. Unfortunately, due to the ugly setup for testing, I could not write a good test case for this, but I'm open to suggestions.\n\nLet me know if the changes are ok, and I'll push docs.\n Squashing all into one commit.\n I think that [HumbleSoftware/js-imagediff](https://github.com/HumbleSoftware/js-imagediff) would be a great tool for testing, but I would also prefer a BDD style testing framework. ([mocha](https://github.com/visionmedia/mocha)?) It took me a while to figure out that custom testing. Unfortunately I've got limited time, so no promise, but I might give this a try, sometime.\n  When we exec identify, we don't want to lose the options set for the other commands that will come after identify.\n\nThis should fix autoOrient (calls orientation, which in turn execs identify) acting up as in #99\n Yeah, nb. This was just a bit of shotgun surgery to get around the immediate problem of autoOrient breaking my proof-of-concept.\n\nA bit less intrusive fix I could think of yesterday was to clone the gm-object in autoOrient and run orientation() on that clone, but I didn't have the time to try it out yet.\n  Is there any way to specify a timeout duration for GM operations? AFAIK Node supports that natively in child process module.\n\nThing is, I perform on demand image resizing with GM, sometimes, people upload 20MB GIF files, or highly compressed small / high resolution files. GM uses a lot of resources while working on them. I'd like to have an option to say \"if this takes more than a second, just kill it and return an error\".\n  the extent method is calling `this.in('-size', geometry)` which is causing the outcome to be different than expected.\n\ni have an image of 200x100 and I want to extend it to 200x200 adding white background.\n\nin the command line, \n\n```\n$ gm convert source.jpg -extent 200x200+0-50 target.jpg\n```\n\ndoes the trick \n\nHowever, when using `img.extent(200, 200, '+0-50')` it's running \n\n```\n$ gm convert -size 200x200+0-50 source.jpg -extent 200x200+0-50 target.jpg\n```\n\nwhich produces a completely different outcome. \n\nI can work around it by calling:\n\n``` javascript\ngm('source.jpg').extent(200, 200, '+0-50').in('-size', '200x100').write(...)\n```\n  runnign the `size()` command with an animated gif returns a weird `size.height`. it seems to add 3 more digits to the end of the correct height. `{ width: 400, height: 252399 }`. tested with the size example and this image: http://1.bp.blogspot.com/-LMyKAgTVIHI/UK-dLRk5cTI/AAAAAAAAM0g/eDrHUdS0xg0/s1600/tumblr_mcu1n6NVbI1qb72tfo1_400.gif\n\n`identify()` on the same image returns correct size.\n  Hello, \n\nI was trying to run a command like this:\n\n``` bash\ngm convert -density 150x150 file.pdf -resize 1200x900 file.jpg\n```\n\nUsing the following javascript:\n\n``` javascript\nvar img = gm(\"file.pdf\")\n        .resize(1200,900)\n        .density(150,150);\n        console.log(img);               \n        img.write(\"file.jpg\", function(err){\n                console.log(err);\n        });\n```\n\nHowever, this ends up running:\n\n``` bash\ngm convert file.pdf -resize 1200x900 -density 150x150 file.jpg\n```\n\nBecause the density comes after the input file, the output in file.jpg is full of artifacts. \nIs there a way to change the order of arguments so that the density argument comes before the input file?\n\nThanks!\n  I need to create thumbnails of images that may be EXIF-rotated.  I tried sticking an .autoOrient() before the .thumb() call like this:\n\n```\nimageMagick('public/images/'+originalImage)\n  .autoOrient()\n  .thumb(size, size, 'public/images/'+thumbImage, quality, 'center', function(err) {\n```\n\nWhen I do that, the output image re-orients correctly, but now the thumbnail is squashed-to-square instead of cropped-to-square.  Is this a bug or am I missing something?\n autoOrient doesn't play well with resize(), either. To get it to do both, I have to do an orient, and then a write, like this: (coffeescript)\n\n``` coffeescript\nimg = im(path).autoOrient().write path, (err) ->\n    if err\n        return console.log err\n    img = im(path)\n    img.resize(200, 200).write newPath, (err) ->\n        if err\n            return console.log err\n        # success code\n```\n\nI wonder if this is only an issue because both me and OP are using the ImageMagick subClass...?\n The problem appears to be that autoOrient() somehow clears out the options set by thumb().  If I run thumb() alone, then this is the arguments that get used:\n\n\"-quality\" \"80\" \"public/images/7b96fdc5f296fedecdb1bdb9c191bb25/image.jpg\" \"-scale\" \"133x100\" \"-crop\" \"100x100+16.5+0\" \"+profile\" \"\\\"*\\\"\" \"public/images/7b96fdc5f296fedecdb1bdb9c191bb25/image_100x100.jpeg\"\n\nHowever, if I chain in an autoOrient().thumb(), and then hold my phone in such a way that no rotation is necessary, then these arguments get used:\n\nconvert \"public/images/a7728a4ca56ad238721459961fc36f45/image.jpg\" \"public/images/a7728a4ca56ad238721459961fc36f45/image_100x100.jpeg\"\n\nIf I chain autoOrient().thumb(), and hold my phone at a 90 degree angle, these arguments get used:\n\n\"public/images/2c263cc7fc55edee15e7e3ae2e66649c/image.jpg\" \"-rotate\" \"90\" \"-page\" \"+0+0\" \"+profile\" \"\\\"*\\\"\" \"public/images/2c263cc7fc55edee15e7e3ae2e66649c/image_100x100.jpeg\"\n\nAgain, these arguments are ones set by autoOrient(), with none of the options set by thumb() making it through to the end.\n this is still an issue for me.  i'm on 1.8.1 and the arguments are no longer being lost the but the final generated command does not produce the intended result.\n\ni have some coffescript that does this:\n\n```\ngm(filePath).\n  autoOrient().\n  setFormat('jpeg').\n  gravity('Center').\n  thumb width, height, outPath, quality, (err) => next err, outPath\n```\n\nwith a portrait image and `width` and `height` both equal to 213, this command is generated:\n\n```\ngm \"convert\" \"-quality\" \"90\" \"-size\" \"285x213\" \"/tmp/foo.jpg\" \"-rotate\" \"90\" \"-page\" \"+0+0\" \"+profile\" \"\\\"*\\\"\" \"-gravity\" \"Center\" \"-scale\" \"285x213\" \"-crop\" \"213x213+0+0\" \"+profile\" \"\\\"*\\\"\" \"/tmp/foo-thumb.jpg\"\n```\n\nthe final image is not cropped, however.  removing the \"-scale\" option fixes the issue.  this command produces the proper thumb:\n\n```\ngm \"convert\" \"-quality\" \"90\" \"-size\" \"285x213\" \"/tmp/foo.jpg\" \"-rotate\" \"90\" \"-page\" \"+0+0\" \"+profile\" \"\\\"*\\\"\" \"-gravity\" \"Center\" \"-crop\" \"213x213+0+0\" \"+profile\" \"\\\"*\\\"\" \"/tmp/foo-thumb.jpg\"\n```\n\ni'm not sure why the \"-scale\" option is only an issue when auto-orienting but that's the behavior i'm observing.\n  ```\ngm(\"path/to/file.jpg\").rotate(\"white\", 0);\n```\n\nTrying to rotate by ZERO (0) degrees yields a command like this: \n\n```\ngm \"convert\" \"/path/to/file.jpg\" \"-background\" \"white\" \"-rotate\" \"\n```\n\nThis then returns the following error: \n\n```\nCommand failed: gm convert: Option '-rotate' requires an argument or argument is malformed.\n```\n  - bonus - fixed trailing spaces\n\nPlease don't forget to publish the module after merge :)\n  ...an kill the process entirely since context is lost. This is bad for my use case, in which many images are coming through the server as part of other docs, and we need the process to finish in order to have the docs continue through the entire pipeline. This may not be good for other use cases, so I understand if there is no merge.\n Ah, I totally agree with you. Not sure if this is the same as #33, but I feel like it could be. Worth looking in to! Do you have any particular way you'd like to send that error to those callbacks? I could make another pull request if you'd like, but if you have an idea I'll just code that up rather than my own.\n Well would require putting that while loop inside of the catch block. I'll just save the err in the catch block to a variable, then do that^^^.\n  Currently the helper `.thumb` first performs a `.size`, computes crop dimensions, and then crops and resizes the image.\n\nI want to generate thumbnails but tried to avoid this two-pass method. I bumped into a [superuser question](http://superuser.com/questions/275476/square-thumbnails-with-imagemagick-convert) which uses the `-thumbnail` option, but this is not available in gm.\n\nThis pull requests extends args with support for thumbnail, includes a simple test, and an example. I reckon thumbnail might conflict with thumb in a naming sense, but its the official name.\n Actually [it does](http://www.graphicsmagick.org/GraphicsMagick.html#details-thumbnail). Yup, I'll send another PR soon with the docs.\n  I have a node.js server that receives a ?String in base64 format of an image from a client. I would like to perform some operation with gm on this image. The problem is that gm only accepts as input a filename or a ReadableStream, so since I don't want to save the image on the server and pass the name to gm (I'm seeking performance) I created a subclass of Stream with the .readable property set to true and I overridden the .resume method to send my data as well as the method .setEncoding. \n\nApparently the library doesn't complain when I pass the input but after performing the operation, the .stream() function doesn't really stream anything out. Printing the stderr variable leads to this:\n\n{ _handle: \n   { writeQueueSize: 0,\n     owner: [Circular],\n     onread: [Function: onread] },\n  _pendingWriteReqs: 0,\n  _flags: 0,\n  _connectQueueSize: 0,\n  destroyed: false,\n  errorEmitted: false,\n  bytesRead: 0,\n  _bytesDispatched: 0,\n  allowHalfOpen: undefined,\n  writable: false,\n  readable: true,\n  _paused: false,\n  _events: { close: [Function] } }\n\nWhich I don't really understand. \n\nI'm pretty sure my implementation is somehow correct; the problem is that by default the Stream I pass is paused and need to be resumed through .resume(); thus is not really working with your implementation.\n\nIs there a way in which I can modify your library to make it call .resume() somewhere and have a working streaming? Otherwise, do you see a way in which I can achieve what I'm trying to do (besides my Stream subclass)?\n  When processing images taken with an iPhone in portrait orientation (home button to the bottom), the Profile-EXIF.Orientation is correctly marked as 6, but the image and thumbnails produced from it show the image incorrectly rotated 90deg counterclockwise in landscape.\n\nI tried using autoOrient, but it apparently considers the EXIF Orientation and rotates an additional 90deg, thus displaying thumbnails incorrectly rotated 180deg clockwise in landscape.\n\nAm I missing something? Or is autoOrient rotating too much?\n  If you rotate(\"any color\", 0), the 0 does not go through onto the gm command line. You can workaround this by passing 360 to the rotate command.\n I am writing some text vertically on a photo. So read the Exif data compute\nthe rotation write the text then rotate back in a single command. So 0 is\npassed as a variable. The problem is that it writes the rotate but not the\n0 so the gm command gets a syntax error.\n\nMake more sense?\nOn Nov 8, 2012 9:40 PM, \"Aaron Heckmann\" notifications@github.com wrote:\n\n> just wondering why you'd want to rotate 0? wouldn't that be a no-op?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aheckmann/gm/issues/90#issuecomment-10206140.\n  What is the best way to get the stdout stream AND calculate the content length?\n\nSeems not to be very easy.\n\nThanks.\n found the answer in #35 ... but it doesn't looks nice :(\n probably some higher level method could round up this.\n this is seems like a general nodejs issue as opposed to gm\n how that, one can't calculate the length of data if its not fully loaded, last example from #35 has worked well for me. Why not to implement this:\n\n```\ngm.crop(...).buffer(function(err, buffer) {\n     buffer instanceof Buffer;\n\n     client.putBuffer(buffer ...)\n\n})\n```\n just seems like more of a buffered streams problem vs gm. helper libs probably already exist, tho i haven't checked\n do you see any reasons not to implement it in gm?\n this is actually everything what I need and probably every one who is using S3 and don't want to write files to the disk before uploading them:\n\n```\nproto.buffer = function(callback) {\n    this.stream(function(err, stdout) {\n        if (err) return callback(err);\n\n        var buf = '';\n        stdout\n            .on('data', function(data) {\n                buf += data.toString('binary');\n            })\n            .on('end', function() {\n                callback(null, new Buffer(buf, 'binary'));\n            });\n    });\n};\n```\n this is really not solving a gm issue but one with node streams in general. while the solution is great, i'm not going to put it into gm.\n\na good alternative is publishing your own module as a plugin that [extends gm](https://github.com/aheckmann/gm/wiki/Extending-gm).\n all right, will publish a plugin.\n excellent, maybe add it to the wiki or smth when complete.\n Plugin done, added to the wiki page, prbobably better to add it to the readme.md\n\nhttps://github.com/aheckmann/gm/wiki\n This is a problem of writing extensions directly on the main prototype, just found that proto.buffer is used in proto._spawn.\n\nAny chance to rename \"buffer\" to \"_buffer\" as it seems to be an internal property ?\n ok.\n  `gm identify -verbose` can be extremely slow when dealing with large files. It should not be added as an option when not required (size(), etc.)\n\nExample from a 3MB image:\n\n```\n$ time gm identify -verbose /tmp/x\n...\nreal    0m3.313s\nuser    0m3.220s\nsys 0m0.048s\n\n$ time gm identify /tmp/x\n/tmp/x JPEG 2752x4896+0+0 DirectClass 8-bit 4.2M 0.000u 0:01\n\nreal    0m0.006s\nuser    0m0.000s\nsys 0m0.004s\n```\n pull request? should be an easy one.\n Cool! Thanks for fixing this! It should make autoOrient() faster too, right?\n Bummer. Oh well.\n  the format method is taking 2-3 seconds for larger images.  \n\nIs there anyway to speed this up ?  Or is the code taking extra time to validate the image format ?\n\nMy app supports only gifs, jpegs and pngs, but I know from experience users will sometimes just rename files to another extension and upload again and or upload garbage or malicious data.  \n\nJust curious to know if this amount of time is expected.  The image is 3000x4000 jpeg approx 2mb.\n\nFurther info - it does not seem to matter even if extension is on the file.  Previously there was no extension and I thought perhaps the code might use extension as a clue to try and check that format first...\n i found the same behavior when running graphicsmagick directly. i don't know of any way to speed that up\n  It looks as if this is how one would use the utilities such as: compose, montage, etc. \n\nI cannot find any examples and it wast't quite obvious from your documentation.\n Thanks for linking the pull request. It was helpful!\n\nPlease excuse my brevity; message sent from a mobile device. \n\nOn Aug 28, 2012, at 22:04, Aaron Heckmann notifications@github.com wrote:\n\n> honestly i haven't used it either, was a community contribution. its just switching out convert for whatever you pass.\n> \n> https://github.com/aheckmann/gm/pull/67\n> \n> \u0081\\\n> Reply to this email directly or view it on GitHub.\n  This is a really simple cosmetic change that causes gm to ask \"Have you installed imageMagick?\" instead of \"have you installed graphicsmagick?\" when you get an error in imageMagick mode.  Doing it this way will save developers time debugging their team's apps that use gm for imagemagick, not for graphicsmagick.\n This pull request [fails](http://travis-ci.org/aheckmann/gm/builds/2135939) (merged 82443b61 into 3125026f).\n  I'm using gm to downsample and crop images and am seeing this error fairly regularly, about 1% of requests.  Making the same call a second time works just fine so it doesn't appear to be a problem with the inputs.\n\nI realize it's internal to graphicsmagick but was hoping you might have some insight into what might be causing the issue and ways to alleviate the problem.\n Think we tracked down the issue.  From someone more knowledgable than I:\n\n> One of the steps required to daemonify a process is to disassociate it from its controlling terminal. To do this, FDs 0 (stdin), 1 (stdout) and 2 (stderr) are all closed. Output file descriptors may then be reopened to write to log files and stdin is usually reopened to /dev/null. This has an unfortunate side effect with node 0.6, which is that node will attempt to read from stdin. This read will receive EOF and in responde node will close stdin. Attempting to fork with stdin closed behaves badly, as described in issue https://github.com/joyent/node/issues/861. Similar behaviors have been observed if any of stdout or stderr are closed at the time fork is called.\n> \n> This patch ensures that all of FD 0, 1 and 2 are occupied by open file handles immediately before calling fork so the assumptions fork relies on are true.\n\nWe're trying a patch in a fork.  Would you accept a PR?  I'd understand if you'd rather not since it's fixed in node v0.8.\n closing, node issue\n  I'm trying to scale an image in place. Is there any way to do something equivalent to:\n\n```\ngm mogrify -size 120x120 my-image.jpg -resize 120x120\n```\n  I am not sure what happens here but really weird. \n\nNode v0.8.2 on Mac (unfortunately can not determine if I run GraphicsMagick or ImageMagick)\n## Code\n\nvar gm = require('gm');\ngm( __dirname + '/data/img/icons/favicon.png').size(function(err, size) {\n        console.log(size);\n        });\n\ngm( __dirname + '/data/img/icons/favicon.png').size(function(err, size) {\n        console.log(size);\n});\n\ngm( __dirname + '/data/img/loading.gif').size(function(err, size) {\n        console.log(size);\n        });\n\ngm( __dirname + '/data/img/loading.gif').size(function(err, size) {\n        console.log(size);\n});\n## Images can be found here\n\nhttps://github.com/vanng822/jcash/blob/master/tests/data/img/icons/favicon.png\nhttps://github.com/vanng822/jcash/blob/master/tests/data/img/loading.gif\n## Output\n\n-----node test.js,  good output\n{ width: 16, height: 16 }\n{ width: 16, height: 16 }\n{ width: 35, height: 35 }\n{ width: 35, height: 35 }\n-----node test.js \n{ width: 16, height: 16 }\nundefined\n{ width: 35, height: 35 }\n{ width: 35, height: 35 }\n------ node test.js \n{ width: 16, height: 16 }\nundefined\n{ width: 35, height: 35 }\n{ width: 35, height: 35 }\n------node test.js \n{ width: 16, height: 16 }\nundefined\n{ width: 35, height: 35 }\n{ width: 1, height: 1 }\n When I ran the tests (not this simple one) in node v0.6\\* all were passed but now they are randomly failed :-(\n Yes, I just ran on Ubuntu server (since my mac didn't keep the old node version)\nTo make it more extrem I ran a loop, 10 times, on the given code\nv0.6.12 succeded all of them\nv0.8.1 wrong most of them (undefined or sometimes wrong dimension)\n Look like that it is something wrong with the file descriptor 1, for stdout of child process, in spawn. If share with parent's, ie process.stdout it works fine but output a lot of thing on the parent's stdout :-D\n\nIf you use exec it works fine but I guess that you can not pipe to sourceStream :-/\n\n[edit] no, share of parent's stdout is not working\n thanks, look like that the problem disappeared in Mac node v0.8.4 (upgraded since last time) & GraphicsMagick 1.3.14\nI still have the same problem in ubuntu node v0.8.7 (just upgraded from v0.8.1) & GraphicsMagick 1.3.12\n\nHowever, the module I wrote only use size() so I decided to remove gm-dependency and run the command for those value instead.\n  Hi,\nIs there any way to convert svg files into other formats (ex. png, jpg) using gm ?\n\nAny help would be greatly appreciated.\nThanks\n Thanks, it works for me.\n How did you solved this?\nI'm trying using the code below, but seems to need the size of svg:\n\n``` javascript\ngm = require('gm');\ngm('fontawesome-webfont.svg').write('fontawesome-webfont.png', function(err){\n  if (!err) console.log('image converted.');\n});\n```\n @rodrigopandini You need to specify the size in the svg tag such as:\n`<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><svg width=\"840\" height=\"430\"  xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">`\n  Currently `gm.stream` will hang and the following error is reported:\n\n```\n  Error: write EPIPE\n     at errnoException (net.js:646:11)\n     at Object.afterWrite [as oncomplete] (net.js:480:18)\n```\n\nIt would be nice if the error is detected and an informative error returned to any callbacks.\n Sure thing.  Given the following code:\n\n```\nvar url = require('url')\nvar http = require('http')\nvar gm = require('gm')\n\nhttp.get(url.parse('http://www.google.com/images/srpr/logo3w.png'), function (resp) {\n  gm(resp, 'logo3w.png').stream(function (err, stdout, stderr) {\n    if (err) {\n      console.error('Error processing image', err)\n    } else {\n      stdout.on('data', function (chunk) {\n        console.log('Chunk recieved', chunk.length)\n      })\n      stdout.on('end', function () {\n        console.log('Stream ended')\n      })\n    }\n  })\n})\n.on('error', function (err) {\n  console.error('Error fetching image', err)\n})\n```\n\nWith graphicsmagick installed:\n\n```\n$ node gm-test.js \nChunk recieved 7078\nStream ended\n```\n\nIf gm is not installed I would expect:\n\n```\n$ node gm-test.js \nError processing image, Error: graphicsmagick not available.\n    at [some nice stack trace]\n```\n\nWhat actually happens if gm is not installed:\n\n```\nnode.js:201\n        throw e; // process.nextTick error, or 'error' event on first tick\n              ^\nError: write EPIPE\n    at errnoException (net.js:670:11)\n    at Object.afterWrite [as oncomplete] (net.js:503:19)\n```\n\nNote, none of the error callbacks are called.\n\nThanks for looking.\n  If I have a stream that is paused, pass it to `gm`, then resume it, `stream` gives an error:\n\n``` js\nvar gm = require(\"gm\");\nvar fs = require(\"fs\");\nvar pause = require(\"connect\").utils.pause;\n\nvar source = fs.createReadStream(\"img.png\");\nvar pauser = pause(source);\n\nsetTimeout(function () {\n    gm(source, \"img.png\")\n        .resize(200, 200)\n        .stream(\"png\", function (err, stdout, stderr) {\n            if (err) {\n                console.log(\"err\", err);\n                process.exit(1);\n            } else {\n                stdout.pipe(process.stdout);\n                stderr.pipe(process.stderr);\n            }\n        });\n\n    pauser.resume();\n}, 100);\n```\n\n``` bash\n$ node test.js\nerr [Error: gm().stream() or gm().write() with a non-readable stream. Pass \"{bufferStream: true}\" to identify() or getter (size, format, etc...)]\n```\n\nThe problem is that the stream does indeed have `readable: false` since it's already emitted all its events, which are caught by connect and stored in the `_events` property to be re-emitted later, when I call `pauser.resume()`.\n\nSo I guess it's partially connect's fault, since usually you can assume that non-readable streams will not emit any more events. But, a solution is kind of necessary, since there's otherwise no way to defer streaming image processing until after an asynchronous event (e.g. user authorization) has occurred. Note that the native stream's `pause` method [does not work](http://nodejs.org/docs/v0.7.12/api/stream.html#stream_stream_pause) on HTTP streams; `data` events get dropped, necessitating something like connect's custom `pause` function.\n\nNot sure what a good solution is here. For now I've hacked around it by inserting `source.readable = true` before calling `gm`.\n\n/cc @visionmedia for any connect-related advice, @isaacs since this is an interesting case of [\"unfuck HTTP\"](https://twitter.com/izs/status/215909578368487424)\n I think req.pause() actually works now, I'd like to remove that pause util \n req.pause() definitely doesn't work; it still drops data events. Making it work is on the table for 0.9 though, I'm told.\n oh.. \n  Add methods.\n ok. As soon as I have time, I will add some tests, update the README and the branch docs.\n  Hi, \n\nI tried to resize image with gm but I got this error\n\n[2012-06-05 03:02:58.648] [INFO] console - Error: Command failed: CreateProcessW: The system cannot find the file specified.\n\n```\nat ChildProcess.<anonymous> (C:\\Users\\user00492\\workspace\\inbrush\\node_modules\\gm\\lib\\command.js:203:17)\nat ChildProcess.emit (events.js:70:17)\nat maybeExit (child_process.js:362:16)\nat Socket.<anonymous> (child_process.js:467:7)\nat Socket.emit (events.js:67:17)\nat Array.1 (net.js:335:10)\nat EventEmitter._tickCallback (node.js:192:40)\n```\n\nI am using node v0.6.17 on windows 7, and this is my code\n\nvar gm = require('gm');\ngm('C:/Users/user00492/default.jpg')\n.resize(40, 40)\n.noProfile()\n.write(\n    'C:/Users/user00492/resized.jpg', function(err) {\n        if (!err)\n            console.log('done');\n        else\n            console.log(err)\n});\n\nCould anyone help me to fix this problem?\n\nThanks.\n the file exists and I use \"npm install gm\" to install graphicsmagick \n I have the same problem running gm on Windows 7.. not sure why.. I also tried all the sample code in Readme.\n it works now, this is really wonderful to me, thank you so much :D\n  Hi,\n\nI think the gm module should throw an error if graphicmagick is not installed on the system. It should atleast say that \"Install graphicmagick or switch to Imagemagick\". \n\nRight now it just throws a cryptic error with a error code which on Googling translates into \"Command not found\".\n\nThanks\n  I added a align variable to the thumb function. You can now say center or topleft. Topleft is the standard with 0/0 offset.\n\nAlso I made the images of same height & width crop correctly.\n    `Error: Command failed: gm convert: Unable to open file (1) [No such file or directory].`\n\nIt looks like the factor is getting passed in as a filename or something.\n `gm('mycoolfile.jpg').minify().write(function(err,p){ });`\n Thanks!\n  I install gm on windows with npm.\nWhen I run the 'thumb' example,I got the 'Error: Command failed: CreateProcessW: xxxxx' and 'code: 127, signal: null'\nDose gm support in windows?\n Yes,I has install.\nIs there another configuration?\n Great,This is my carelessness caused,sorry.\nFirst,I forgot install GraphicsMagick on windows;\nSecond,I don't update executable search path when finished install.\nNow,it work good,thanks!\n  -> Update \"strip\" method (graphicMagick support).\n-> Add \"background\", \"foreground\", \"flatten\", \"compose\", \"filter\", \"gravity\" and \"extent\" methods.\n-> Add \"nice\" and \"ionice\" support. \n  An image seems to mess up the stdout parsing of **gm**. The offending line is `:??`.\n\n[Here's a copy of the image and test](http://dropbox.com/sh/5g0qpwc2d6nzbyz/oZD4MJZvRE/gm_crash_test.zip), and here's a snippet from the trace:\n\n```\nTypeError: Cannot set property '' of undefined\n\n  Identify stdout:\n  Image: /Users/chris/img.jpg\n  Format: JPEG (Joint Photographic Experts Group JFIF format)\n...\n  0x00000000: 1800                                          -\n    unknown:\n  :??\n  Profile-EXIF: 11310 bytes\n    Make: Canon\n    Model: Canon EOS 1000D\n...\n  Tainted: False\n  User Time: 0.010u\n  Elapsed Time: 0:01\n  Pixels Per Second: 30.5M\n    at ChildProcess.<anonymous> (/Users/chris/node_modules/gm/lib/getters.js:124:20)\n    at ChildProcess.<anonymous> (/Users/chris/node_modules/gm/lib/command.js:207:18)\n    at ChildProcess.emit (events.js:70:17)\n    at maybeExit (child_process.js:360:16)\n    at Process.onexit (child_process.js:396:5)\n```\n Great, thanks\n  Adds a background() method to work with related operations such as extent and rotate.  Helps on issue #30\n  Includes a layered PSD, example and test. Should help issue #52\n I wasn't sure if you'd dig having the PSD in the repo or not. I'm not sure what else -flatten is good for. I imagine there are a few image formats that have layers it can smush. \n\nSafe travels. Looks like you ran into my friend and former co-worker Steve Agalloco (@anno) down in Charlotte. Small world\n This is actually exactly what I'm looking for with my prior issue. Thanks so much.\n  I'm trying to run a command equivalent to:\n\nconvert Foo.psd -flatten Foo.jpg\n\nIs there any way as of right now to get this -flatten working? If not, where can I start poking around to add it?\n @aheckmann this issue can be closed now.\n  This should be approximately good enough to merge in. It follows the pattern of the recent additions and the existing resize function. Please let me know what you think.\n  Is it possible to pad out the thumbnail? Like shown here:\nhttp://www.imagemagick.org/Usage/thumbnails/#pad\n I've created a pull request with the functions needed to do this added ( #51). Just need @aheckmann to take a look and merge if appropriate. Not sure about the background part, but these are enough to do the padding and centering.\n That's awesome!\n  Please don't merge this yet, it's a starting point, not the final pull req. \n\nIn relation to issue #30 , I have a need for compositing in node with GM. Specifically I need to underlay a white background on transparent images and to composite some other images together to make graphics. I've got ruby code using IM that does this, but we're porting the work to a new system in node and GM, so we've got this itch to scratch.\n\nI want to ultimately write a full featured composite command that takes all the args and options GM provides ( http://www.graphicsmagick.org/composite.html ). But before I get to the details, I need to make sure I'm even on the right track with how i've done this. Please have a look and provide feedback so I can continue or change course.\n\nThank you for publishing this awesome library Aaron!\n  The getterIdentify.js test is failing for me on line 15 due to what is perhaps a floating point rounding difference. Here is the output:\n\n```\n\nJubilee:gm[master]$ make test\nThe \"sys\" module is now called \"util\". It should have a similar interface.\n\nnode.js:201\n        throw e; // process.nextTick error, or 'error' event on first tick\n              ^\nAssertionError: \"71.71 (0.2812)\" == \"71.70 (0.2812)\"\n    at gm.<anonymous> (/Users/joshua/Working/libraries/gm/test/getterIdentify.js:15:12)\n    at ChildProcess.<anonymous> (/Users/joshua/Working/libraries/gm/lib/getters.js:142:23)\n    at ChildProcess.<anonymous> (/Users/joshua/Working/libraries/gm/lib/command.js:207:18)\n    at ChildProcess.emit (events.js:70:17)\n    at maybeExit (child_process.js:360:16)\n    at Socket.<anonymous> (child_process.js:457:7)\n    at Socket.emit (events.js:67:17)\n    at Array.16 (net.js:335:10)\n    at EventEmitter._tickCallback (node.js:192:40)\nmake: *** [test] Error 1\n\n\nThis is on Node v0.6.14. Is anyone else having issues like this with the test suite? \n```\n  As a new contributor, I couldn't figure out how to run the tests:\n\nnpm test\n\nor \n\nmake test\n\nfailed. I'm not sure if it's because the tests themselves are not passing or if there is an extra step needed to get the test suite running that I did not complete. It would be nice to document that on the README so that new contributors can run the test suite.\n Here is the error. I'm running node version 0.6.11 on Mac OS X Lion.\n\nnode.js:201\n        throw e; // process.nextTick error, or 'error' event on first tick\n              ^\nError: spawn EMFILE\n    at errnoException (child_process.js:482:11)\n    at ChildProcess.spawn (child_process.js:445:11)\n    at child_process.js:343:9\n    at gm._spawn (/Users/luc/code/workspace/gm/lib/command.js:156:16)\n    at /Users/luc/code/workspace/gm/lib/command.js:62:12\n    at gm._preprocess (/Users/luc/code/workspace/gm/lib/command.js:100:44)\n    at gm.write (/Users/luc/code/workspace/gm/lib/command.js:60:10)\n    at /Users/luc/code/workspace/gm/test/lower.js:8:4\n    at /Users/luc/code/workspace/gm/test/index.js:56:19\n    at Array.forEach (native)\nmake: **\\* [test] Error 1\n Turns out it was a ulimit issue and I fixed it by setting ulimit -n 1024.\n  In GraphicsMagic, when using resize, we can pass only a width or only a height. From their documentation:\n\nIf only the width is specified, the width assumes the value and the height is chosen to maintain the aspect ratio of the image. Similarly, if only the height is specified (e.g., -geometry x256), the width is chosen to maintain the aspect ratio.\n\nI modified the code to accept only a width or only a height on a resize. I've tested manually but could not figure out how to run your test suite so I did not add a test for it. 'make test' was failing for me before I made my change.\n It was the same ulimit error from the issue we discussed yesterday.\n This could be added to the documentation as I couldn't find anything about maintaining \"aspect ratio\" or only passing width/height into resize.\n Also, it'd be helpful to add a note that if you want to resize an image so it's width is always 500px, do something like: `.resize(500, 100000000, '>')`\n  Error: spawn EMFILE\n    at errnoException (child_process.js:481:11)\n    at ChildProcess.spawn (child_process.js:444:11)\n    at child_process.js:342:9\n    at gm._spawn (/Users/myusername/node_modules/gm/lib/command.js:156:16)\n    at gm._exec (/Users/myusername/node_modules/gm/lib/command.js:137:17)\n    at gm.identify (/Users/myusername/node_modules/gm/lib/getters.js:74:10)\n    at gm.size (/Users/myusername/node_modules/gm/lib/getters.js:33:12)\n\n.. attempted **to walk a directory**, getting image sizes for each image encountered.\n\nNode: 0.6.12\nOS: mac osx 10.6.8\n\nI tried directly `calling gm(<filename>).size(function(e, v){ ... });` on the last file in the list before the error, and it worked fine.\n\nI created an array literal containing the 81 image filenames logged to the console leading up to the error and iterating over just them. Same result. But as soon as I removed _any one_ of them from the array, everything was ok.\n They are in parallel. Is there a `gm(<filename>).sizeSync()` function I could use instead?\n\nAfter a tiny bit of research, I found something like that also (try increasing the filehandle limit). It didn't make any difference.\n\nI was just about to post a followup to my issue report.\n\nI ended up 'chunking' the result set so that gm/javascript/filesystem had time to release the handles.\n\n```\n// assume an array of filenames, `fileList`\nvar chunkSize = 50; // 100 was too many. Choked every time at 80 or 81.\n(function loop(i){\n\n  var filename = fileList[i];\n  //console.log('processing... ', filename);\n\n  gm(filename).size(function(err, value){\n    // note : value may be undefined\n    if(value){\n      console.log(value, filename);\n    } else {\n      console.log('(error)', err);\n    }\n  });\n\n  i++;\n  if(i == fileList.length) return; // we're done.\n  if(i%chunksize == 0){\n    setTimeout(function(){ loop(i); }, 50);\n  } else {\n    loop(i);\n  }\n})(0);\n```\n We shouldn't have to chunk .. I still consider this an issue\n  I needed these functions and they seem like pretty simple things to add to gm since they're already there in GraphicsMagick.\n\nLet me know if I'm missing something.\n\nTravis\n   it doesn't merge :( Can you merge the latest in master? That should do the trick.\n Did it works now? I'm new to git...\n  Hi, \n\nI saved this file to my hard drive: http://www.prguitarman.com/comics/poptart1red1.gif\nWhen I run this code:\n\n```\ngm(tmp_path).identify(function(err, data){\n                console.log(data);\n});\n```\n\nI get this error?\n\n```\n[TypeError: Cannot set property 'Image' of undefined]\nTypeError: Cannot set property 'Image' of undefined\n    at ChildProcess.<anonymous> (/home/user/abc/src/node_modules/gm/lib/getters.js:121:18)\n    at ChildProcess.<anonymous> (/home/user/abc/src/node_modules/gm/lib/command.js:208:18)\n    at ChildProcess.emit (events.js:70:17)\n    at maybeExit (child_process.js:361:16)\n    at Process.onexit (child_process.js:397:5)\n```\n\nI just want to determine if a file is animated gif or not, I don't necessarily need to perform any operations on that image.\n\nthanks!\n Actually, I updated to 1.0.3, and everything seems fine :)\n\nBefore I was at 1.0.1\n  The parser for the identify output in getters.js gathers all the key=value pairs after the Image: header, but does not handle gathering the output for multiple images.\n\nI've patched on my branch to make this return the output from the first image, because the first image in the series contains the correct canvas size.\n\nI can either issue a pull request for this work-around, or I can make the parser gather the output for multiple images, or something else.\n\nthoughts?\n Yeah that makes the most sense. I haven't had a chance to dig through the internet to find how one would expect to do this, but anecdotally it makes sense that the first frame (at least) should have the keyframe-type information. Subsequent frames can certainly be diffs.\n\nMy patch (09ffa67abb1dba3ffee82666bdf38603696c775b) is so-far trivial and not really in the style of the lib. I can try to tackle the more in depth one if I have time.\n FWIW,\n\nA quick fix for the `size` method could be to append an extra `x` in the format, since the `Geometry` helper splits on `x` and takes the first 2 items in the array.\nThat would at least fix an annoying bug we're seeing now.\nSituation:\nA gif of 493x231\nDoing `gm().size()` returns\nwidth: 493\nheight: 231493\n\nas the width for the next frame is appended to the height.\n\nCommand line:\n\n```\n$ gm identify -format \"%wx%h\" -verbose image.gif\n493x231493x231493x231493x231493x231493x231493x231\n$ gm identify -format \"%wx%hx\" -verbose image.gif\n493x231x493x231x493x231x493x231x493x231x493x231x493x231x\n$ gm identify -format \"%wx%h \" -verbose image.gif\n493x231 493x231 493x231 493x231 493x231 493x231 493x231 \n```\n Sweet, thanks!\n closing as it's better just to use https://github.com/aheckmann/gm#custom-identify-format-string (1.11.0) for images with layers. \n  Hi\n\nI have got this error on gm@1.0.0:\n\n```\n    ./node_modules/gm/index.js:59\n    var super = gm;\n\n    SyntaxError: <unknown message reserved_word>\n```\n\nNode version 0.6.7\n Yes, it is :)\nThnx\n Fixed\n  please add \"gm composite\" commond and \u201c-background <color>\u201d params \uff0cthank you!\nI want composite two pictures,so ...\n I need this as well and am preparing to work on it so I can send @aheckmann a pull request. It's a bit daunting since it's not a simple additional arg on convert. Any advice would be MOST welcome. I'm reviewing all the previous issues to see if there is anything I can glean from them.\n Thank you very much!\n That pull request is just a start of what needs to be implemented. Please feel free to have a look and contribute to it, but by all that is good in the world, don't use it in production yet! :-)\n  This is what I ended up doing and it is working well. If you have a better idea of how it should be configureable let me know.\n\nRelated to #23\n  better validation of outcomes\n   yeah just never added this to http://aheckmann.github.io/gm/docs.html\n yep its ooold\n  Is there an option to use the ImageMagick binary instead of GraphicsMagick since the APIs are interchangeable?\n not right now.\n I am using heroku to host my app and they don't have GraphicsMagick. They have suggested including the GraphicsMagick binary in my project or switching to ImageMagick. Any suggestions?\n if it works ok, i'd accept a patch for that. i think the only two places to alter are lib/getters.js and lib/commands.js.\n just need to make it configurable somehow\n Just switching in ImageMagick works pretty well. It fixes the drawText errors I was getting in the tests. There are problems with both dither and morph though.\n  Hy\n\nAs the title suggests I ask if you / one could implement imagemagick's \"-auto-orient\" .\n\nMotivation:\nThe \"-auto-orient\" rotates an image according the EXIF data. As this is very difficult to achieve in the browser (reading the EXIF, rotating, ...), and as ImageMagick already provides this, it would make your library even more awesome and practical for serving images to a web client.\n\nInfo:\nThe description of \"-auto-orient\" is over there: http://www.imagemagick.org/script/command-line-options.php#auto-orient\n\nCheers\nChris\n good idea!\n I'm very open to pull requests if this is something you'd like to help out on too.\n I'm pretty sure \"-auto-orient\" is only available with ImageMagick. I can't find a reference to it anywhere in the GraphicsMagick documentation, and the command line is returning an error:\n\n```\ngm convert: Unrecognized option (-auto-orient).\n```\n Well, that is bad news I guess.\n I've put together a pretty good solution in one of my branches that mimics ImageMagick's -auto-orient, but it's based on the Streams branch that @aheckmann is getting ready to merge in.\n\nAs soon as that's merged, I'll submit another pull request for the AutoOrient feature.\n streams have been merged but there is an intermittent bug yet. still need to track that down before releasing.\n @aheckmann this is my first attempt at faking ImageMagick's -auto-orient option. Since we have to get the orientation using `-identify`, and it really should be as simple as chaining the `.autoOrient()` convenience method, we have to be able wrap any future arguments inside of autoOrient's callback. To do this cleanly, I added \"preprocessors\" that are simply called in series before the final `stream()` or `write()`. This functionality can be used for other convenience/helper methods in the future.\n\nI realize this isn't ideal, but it solves a common problem, and is something I need personally. This is the branch I've actually been running off of recently and it seems to work great. If you have any other ideas on how to solve this, let me know.\n\nUPDATE: I just rebased on your latest commit when probably I should've merged, so beware if you already pulled in those commits. Sorry.\n Cool, thanks a lot! ~Chris\n  Hey,\n\ngraphicsmagik returns IPTC data such as caption, GPS etc on the command line\n\n> gm identify -ping -verbose image.jpg\n\nHowever the node gm identify wrapper only returns a subset of this data, even thought it uses the same command as above.\n\nI believe only few changes will be needed to the parser that transforms stdout to JSON.\n i'll take a look when i get a chance, unless you'd like to take a stab at it first?\n awesome, I don't have access to my dev machine this weekend, but i'll test it out first thing monday!\n Hey, just had a play with master.\n\nIt seems to be mostly working, but I think the IPTC tags not getting parsed.\nSpecifically it is the 'Profile-iptc' section. Everything in the 'Profile-EXIF' section is correctly parsed into the result.\n\nBelow I have the output from an image with IPTC and EXIF data from both the command line, and the node wrapper.\n\nThe node wrapper.\n\n```\n> gm('Arequipe37.jpg').identify(cb);\n{ _options: {},\n  data: {},\n  _in: [],\n  _out: [],\n  source: 'Arequipe37.jpg',\n  bufferStream: false,\n  _iq: [ [Function] ],\n  _identifying: true }\n> null\n{ Format: 'JPEG (Joint Photographic Experts Group JFIF format)',\n  format: 'JPEG',\n  Geometry: '1280x850',\n  size: { width: 1280, height: 850 },\n  Class: 'DirectClass',\n  Type: 'true color',\n  Depth: '8 bits-per-pixel component',\n  depth: 8,\n  'Channel Depths': { Red: '8 bits', Green: '8 bits', Blue: '8 bits' },\n  'Channel Statistics': \n   { Red: \n      { Minimum: '0.00 (0.0000)',\n        Maximum: '255.00 (1.0000)',\n        Mean: '140.13 (0.5495)',\n        'Standard Deviation': '80.72 (0.3166)' },\n     Green: \n      { Minimum: '0.00 (0.0000)',\n        Maximum: '255.00 (1.0000)',\n        Mean: '102.10 (0.4004)',\n        'Standard Deviation': '66.30 (0.2600)' },\n     Blue: \n      { Minimum: '0.00 (0.0000)',\n        Maximum: '255.00 (1.0000)',\n        Mean: '77.24 (0.3029)',\n        'Standard Deviation': '58.75 (0.2304)' } },\n  Resolution: '72x72 pixels/inch',\n  Filesize: '446.4K',\n  Interlace: 'No',\n  Orientation: 'TopLeft',\n  'Background Color': 'white',\n  'Border Color': '#DFDFDF',\n  'Matte Color': '#BDBDBD',\n  Compose: 'Over',\n  Dispose: 'Undefined',\n  Iterations: '0',\n  Compression: 'JPEG',\n  'JPEG-Quality': '93',\n  'JPEG-Colorspace': '2',\n  'JPEG-Colorspace-Name': 'RGB',\n  'JPEG-Sampling-factors': '2x2,1x1,1x1',\n  Signature: 'a7944a5ce711564bb2c7e40d9c6e66d594e97e07b865fe70d116464da32262be',\n  'Profile-color': '3144 bytes',\n  'Profile-iptc': {},\n  '0x00000000': {},\n  'Profile-EXIF': \n   { Make: 'NIKON CORPORATION',\n     Model: 'NIKON D90',\n     Orientation: '1',\n     'X Resolution': '72/1',\n     'Y Resolution': '72/1',\n     'Resolution Unit': '2',\n     Software: 'Aperture 3.2',\n     'Date Time': '2010:09:08 20:43:42',\n     'Exif Offset': '212',\n     'Exposure Time': '1/100',\n     'F Number': '5/1',\n     'Exposure Program': '2',\n     'ISO Speed Ratings': '200',\n     'Exif Version': '0221',\n     'Date Time Original': '2010:09:08 20:43:42',\n     'Date Time Digitized': '2010:09:08 20:43:42',\n     'Components Configuration': '\\\\000\\\\000\\\\000\\\\001',\n     'Compressed Bits Per Pixel': '4/1',\n     'Exposure Bias Value': '-2/3',\n     'Max Aperture Value': '21/5',\n     'Metering Mode': '5',\n     'Light Source': '0',\n     Flash: '0',\n     'Focal Length': '38/1',\n     'User Comment': 'ASCII\\\\000\\\\000\\\\000',\n     'Sub Sec Time': '00',\n     'Sub Sec Time Original': '00',\n     'Sub Sec Time Digitized': '00',\n     'Flash Pix Version': '0100',\n     'Color Space': '1',\n     'Exif Image Width': '1280',\n     'Exif Image Length': '850',\n     'Sensing Method': '2',\n     'Custom Rendered': '0',\n     'Exposure Mode': '0',\n     'White Balance': '0',\n     'Digital Zoom Ratio': '1/1',\n     'Focal Length In35mm Film': '57',\n     'Scene Capture Type': '0',\n     'Gain Control': '0',\n     Contrast: '0',\n     Saturation: '0',\n     Sharpness: '0',\n     'Subject Distance Range': '0',\n     'GPS Info': '778',\n     'GPS Latitude Ref': 'S',\n     'GPS Latitude': '16/1,2393/100,0/1',\n     'GPS Longitude Ref': 'W',\n     'GPS Longitude': '71/1,3221/100,0/1' },\n  'Profile-APP1': '1709 bytes',\n  Tainted: 'False',\n  'User Time': '0.050u',\n  'Elapsed Time': '0:01',\n  'Pixels Per Second': '20.8M' }\n\n```\n\nAnd heres the output from the command line\n\n```\n~  gm identify -verbose Arequipe37.jpg \nImage: Arequipe37.jpg\n  Format: JPEG (Joint Photographic Experts Group JFIF format)\n  Geometry: 1280x850\n  Class: DirectClass\n  Type: true color\n  Depth: 8 bits-per-pixel component\n  Channel Depths:\n    Red:      8 bits\n    Green:    8 bits\n    Blue:     8 bits\n  Channel Statistics:\n    Red:\n      Minimum:                     0.00 (0.0000)\n      Maximum:                   255.00 (1.0000)\n      Mean:                      140.13 (0.5495)\n      Standard Deviation:         80.72 (0.3166)\n    Green:\n      Minimum:                     0.00 (0.0000)\n      Maximum:                   255.00 (1.0000)\n      Mean:                      102.10 (0.4004)\n      Standard Deviation:         66.30 (0.2600)\n    Blue:\n      Minimum:                     0.00 (0.0000)\n      Maximum:                   255.00 (1.0000)\n      Mean:                       77.24 (0.3029)\n      Standard Deviation:         58.75 (0.2304)\n  Resolution: 72x72 pixels/inch\n  Filesize: 446.4K\n  Interlace: No\n  Orientation: TopLeft\n  Background Color: white\n  Border Color: #DFDFDF\n  Matte Color: #BDBDBD\n  Compose: Over\n  Dispose: Undefined\n  Iterations: 0\n  Compression: JPEG\n  JPEG-Quality: 93\n  JPEG-Colorspace: 2\n  JPEG-Colorspace-Name: RGB\n  JPEG-Sampling-factors: 2x2,1x1,1x1\n  Signature: a7944a5ce711564bb2c7e40d9c6e66d594e97e07b865fe70d116464da32262be\n  Profile-color: 3144 bytes\n  Profile-iptc: 104 bytes\n    City:\n  0x00000000: 254700                                        -%\n    unknown:\n\n    Copyright String:\n  D MALAM\n    Byline:\n  Dharmesh Malam\n    Image Name:\n  Color Shadow\n  Profile-EXIF: 886 bytes\n    Make: NIKON CORPORATION\n    Model: NIKON D90\n    Orientation: 1\n    X Resolution: 72/1\n    Y Resolution: 72/1\n    Resolution Unit: 2\n    Software: Aperture 3.2\n    Date Time: 2010:09:08 20:43:42\n    Exif Offset: 212\n    Exposure Time: 1/100\n    F Number: 5/1\n    Exposure Program: 2\n    ISO Speed Ratings: 200\n    Exif Version: 0221\n    Date Time Original: 2010:09:08 20:43:42\n    Date Time Digitized: 2010:09:08 20:43:42\n    Components Configuration: \\000\\000\\000\\001\n    Compressed Bits Per Pixel: 4/1\n    Exposure Bias Value: -2/3\n    Max Aperture Value: 21/5\n    Metering Mode: 5\n    Light Source: 0\n    Flash: 0\n    Focal Length: 38/1\n    User Comment: ASCII\\000\\000\\000                                    \n    Sub Sec Time: 00\n    Sub Sec Time Original: 00\n    Sub Sec Time Digitized: 00\n    Flash Pix Version: 0100\n    Color Space: 1\n    Exif Image Width: 1280\n    Exif Image Length: 850\n    Sensing Method: 2\n    Custom Rendered: 0\n    Exposure Mode: 0\n    White Balance: 0\n    Digital Zoom Ratio: 1/1\n    Focal Length In35mm Film: 57\n    Scene Capture Type: 0\n    Gain Control: 0\n    Contrast: 0\n    Saturation: 0\n    Sharpness: 0\n    Subject Distance Range: 0\n    GPS Info: 778\n    GPS Latitude Ref: S\n    GPS Latitude: 16/1,2393/100,0/1\n    GPS Longitude Ref: W\n    GPS Longitude: 71/1,3221/100,0/1\n  Profile-APP1: 1709 bytes\n  Tainted: False\n  User Time: 0.050u\n  Elapsed Time: 0:01\n  Pixels Per Second: 20.8M\n```\n  Would it be possible to add buffer as one of the options for gm?  Reason I ask is because I'm reading a stream for a base64 encoded image and I create a new buffer from it, but since gm only accepts a string I have to write it to file first and then read the file instead of being able to go straight to gm with the buffer.\n\nThanks!  ^^\n this module is simply passing the args down to a child_process where the actual graphicsmagick command is executed. none of the img manipulatation is done within node so Buffer support isn't really applicable.\n I've bumped into this. I need to generate multiple thumbnails (different dimensions) of the same original image. Being able to read the file from disk once, and feed the buffer to gm multiple times is better than having gm read the file from disk multiple times.\n\n@aheckmann Do you think this makes sense? I could probably work out a PR if you'd like.\n      Thanks!\n", "text_all_count": 15106, "text_word_token": ["moving", "to", "wiki", "In", "LINK", "append", "gm", "img", "NUMBER", "png", "NUMBER", "append", "another", "NUMBER", "jpg", "NUMBER", "append", "third", "NUMBER", "gif", "Last", "call", "to", "append", "be", "miss", "a", "closing", "quote", "NUMBER", "Was", "hoping", "someone", "could", "shed", "some", "light", "on", "what", "causes", "the", "gray", "colour", "on", "this", "image", "include", "below", "NUMBER", "This", "image", "was", "processed", "as", "a", "stream", "from", "s", "NUMBER", "and", "pass", "through", "a", "simple", "resize", "filter", "and", "streamed", "to", "disk", "NUMBER", "gm", "stream", "NUMBER", "resize", "null", "NUMBER", "NUMBER", "noProfile", "NUMBER", "ream", "NUMBER", "The", "image", "was", "processed", "on", "an", "EC", "NUMBER", "c", "NUMBER", "medium", "so", "that", "could", "have", "be", "an", "issue", "NUMBER", "This", "be", "not", "something", "I", "have", "seen", "ever", "when", "processing", "on", "my", "local", "dev", "machine", "MBP", "NUMBER", "thanks", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "NUMBER", "dff", "b", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "a", "NUMBER", "c_ar_h", "NUMBER", "LINK", "d", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "jpg", "So", "the", "image", "goes", "to", "disk", "then", "in", "onClose", "I", "run", "an", "fs", "NUMBER", "at", "to", "get", "the", "size", "before", "I", "stream", "it", "back", "to", "s", "NUMBER", "use", "Knox", "NUMBER", "coffee", "gm", "stream", "NUMBER", "resize", "null", "NUMBER", "NUMBER", "noProfile", "NUMBER", "ream", "err", "stdout", "stderr", "ws", "fs", "NUMBER", "createWriteStream", "tmp", "img", "NUMBER", "png", "ws", "NUMBER", "on", "close", "onClose", "stdout", "NUMBER", "pipe", "ws", "As", "I", "said", "my", "MBP", "with", "SSD", "has", "never", "shown", "this", "kind", "of", "issue", "before", "NUMBER", "I", "be", "thinking", "that", "the", "write", "performance", "of", "the", "EC", "NUMBER", "instance", "could", "be", "at", "fault", "here", "NUMBER", "OK", "good", "point", "NUMBER", "That", "code", "was", "a", "hangover", "from", "originally", "attempting", "to", "simply", "stream", "directly", "back", "S", "NUMBER", "Will", "get", "back", "to", "you", "with", "the", "results", "NUMBER", "Appreciate", "the", "quick", "response", "NUMBER", "That", "was", "my", "thought", "too", "especially", "as", "it", "avoid", "the", "pains", "of", "dealing", "with", "the", "inconsistencies", "of", "write", "to", "EBS", "NUMBER", "Will", "try", "both", "options", "NUMBER", "You", "be", "dead", "on", "it", "was", "the", "file", "size", "be", "set", "incorrectly", "NUMBER", "Not", "really", "sure", "why", "I", "hadnt", "seen", "that", "earlier", "NUMBER", "Thanks", "again", "for", "your", "help", "NUMBER", "It", "be", "a", "great", "library", "be", "enjoying", "use", "it", "a", "lot", "NUMBER", "NUMBER", "ream", "png", "results", "in", "a", "JPEG", "file", "be", "generate", "instead", "of", "PNG", "NUMBER", "Problem", "be", "that", "in", "command", "NUMBER", "js", "the", "png", "be", "assigned", "to", "variable", "callback", "NUMBER", "Workaround", "use", "NUMBER", "ream", "png", "NUMBER", "instead", "NUMBER", "Example", "code", "var", "gm", "require", "gm", "var", "fs", "require", "fs", "var", "ins", "fs", "NUMBER", "createReadStream", "orig", "NUMBER", "jpg", "var", "outs", "fs", "NUMBER", "createWriteStream", "thumb", "NUMBER", "png", "gm", "ins", "orig", "NUMBER", "jpg", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "gravity", "Center", "NUMBER", "crop", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ream", "png", "NUMBER", "pipe", "outs", "The", "resulting", "output", "file", "be", "a", "JPEG", "file", "not", "PNG", "NUMBER", "Updated", "the", "description", "NUMBER", "Don", "t", "know", "NUMBER", "But", "this", "be", "the", "problem", "proto", "NUMBER", "ream", "function", "stream", "format", "callback", "if", "callback", "callback", "format", "format", "null", "If", "no", "callback", "supplied", "format", "be", "assumed", "to", "be", "the", "callback", "NUMBER", "This", "line", "should", "be", "if", "callback", "typeof", "format", "function", "NUMBER", "If", "I", "feed", "the", "gm", "constructor", "a", "buffer", "created", "with", "new", "Buffer", "str", "encoding", "I", "get", "the", "following", "error", "Assertion", "fail", "uv__io_active", "stream", "io_watcher", "UV__POLLOUT", "ngx_queue_empty", "stream", "write_completed_queue", "ngx_queue_empty", "stream", "write_queue", "stream", "shutdown_req", "NULL", "stream", "connect_req", "NULL", "function", "uv_read_stop", "file", "NUMBER", "deps", "uv", "src", "unix", "stream", "NUMBER", "c", "line", "NUMBER", "I", "m", "use", "node", "NUMBER", "I", "create", "the", "buffer", "from", "a", "base", "NUMBER", "string", "I", "receive", "from", "a", "POST", "request", "via", "LINK", "Inbound", "service", "NUMBER", "I", "can", "save", "a", "file", "from", "that", "string", "use", "fs", "NUMBER", "writeFile", "with", "no", "issue", "NUMBER", "And", "if", "I", "feed", "gm", "a", "buffer", "from", "that", "same", "file", "use", "fs", "NUMBER", "readFile", "it", "works", "NUMBER", "In", "both", "cases", "I", "have", "checked", "what", "I", "feed", "gm", "be", "actually", "a", "buffer", "via", "Buffer", "NUMBER", "isBuffer", "obj", "NUMBER", "The", "error", "looks", "like", "a", "node", "bug", "but", "I", "m", "posting", "here", "first", "To", "make", "my", "script", "work", "in", "practice", "I", "m", "saving", "the", "file", "to", "a", "temp", "folder", "and", "then", "doing", "gm", "filepath", "NUMBER", "But", "I", "would", "be", "nice", "to", "skip", "this", "extra", "step", "NUMBER", "jonathanong", "thank", "you", "for", "the", "feedback", "NUMBER", "Downgraded", "NUMBER", "Can", "you", "please", "post", "any", "references", "to", "this", "bug", "so", "I", "know", "when", "it", "gets", "fix", "Is", "there", "a", "graceful", "way", "to", "check", "if", "gm", "can", "execute", "graphicsmagick", "commands", "For", "example", "if", "it", "s", "not", "install", "Thanks", "Awesome", "Lib", "Donovan", "Is", "there", "a", "specific", "place", "in", "the", "chain", "I", "should", "be", "catching", "the", "error", "Seems", "like", "when", "I", "do", "it", "in", "the", "write", "callback", "it", "still", "crashes", "NUMBER", "Wasn", "t", "sure", "if", "the", "error", "throw", "internally", "do", "to", "gm", "not", "be", "present", "was", "happening", "before", "the", "write", "function", "can", "return", "the", "error", "in", "the", "callback", "NUMBER", "Thanks", "again", "Donovan", "On", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Jonathan", "Ong", "notifications", "github", "NUMBER", "com", "write", "if", "graphicsmagick", "or", "imagemagick", "isn", "t", "install", "an", "error", "will", "be", "throw", "NUMBER", "not", "sure", "what", "you", "re", "ask", "for", "exactly", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "Yeah", "I", "agree", "NUMBER", "We", "should", "rip", "out", "the", "lib", "detection", "NUMBER", "On", "Sunday", "June", "NUMBER", "NUMBER", "Jonathan", "Ong", "write", "if", "you", "execute", "a", "command", "like", "gm", "NUMBER", "write", "it", "will", "throw", "an", "error", "if", "imagemagick", "or", "graphicsmagick", "be", "not", "install", "NUMBER", "it", "should", "throw", "as", "it", "s", "a", "developer", "error", "not", "an", "application", "error", "NUMBER", "honestly", "i", "m", "not", "sure", "whether", "this", "library", "should", "support", "systems", "without", "imagemagick", "or", "graphicsmagick", "install", "NUMBER", "you", "can", "always", "check", "whether", "the", "system", "has", "imagemagick", "or", "graphicsmagick", "install", "by", "doing", "convert", "version", "or", "gm", "version", "use", "child_process", "NUMBER", "exec", "LINK", "_process", "NUMBER", "html", "child_process_child_process_exec_command_options_callback", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "NUMBER", "Aaron", "aaronheckmann", "LINK", "aaronheckmann", "Thanks", "for", "the", "info", "NUMBER", "Works", "great", "gm", "src", "NUMBER", "resize", "size", "size", "NUMBER", "crop", "size", "size", "size", "NUMBER", "size", "NUMBER", "NUMBER", "write", "dst", "function", "err", "This", "resizes", "my", "pic", "it", "but", "don", "t", "crop", "it", "Thanks", "Try", "doing", "DEBUG", "gm", "node", "myscript", "NUMBER", "js", "to", "see", "what", "command", "be", "actually", "be", "executed", "NUMBER", "I", "be", "in", "a", "cloud", "NUMBER", "environment", "on", "c", "NUMBER", "io", "and", "I", "have", "successfully", "install", "graphicsmagick", "and", "the", "node", "NUMBER", "js", "gm", "module", "NUMBER", "I", "have", "be", "successful", "in", "calling", "a", "number", "of", "methods", "however", "I", "be", "having", "an", "issue", "with", "colors", "for", "color", "reduction", "NUMBER", "Have", "you", "successfully", "be", "able", "to", "call", "colors", "and", "get", "it", "to", "reduce", "the", "colors", "in", "the", "source", "image", "The", "documentation", "state", "the", "usage", "be", "gm", "img", "NUMBER", "png", "NUMBER", "colors", "int", "but", "I", "can", "t", "seem", "to", "get", "it", "to", "work", "and", "was", "wondering", "if", "its", "just", "soothing", "I", "m", "miss", "NUMBER", "I", "have", "provide", "a", "reduced", "code", "block", "to", "give", "an", "idea", "as", "to", "how", "I", "m", "use", "it", "in", "hopes", "that", "you", "may", "see", "what", "I", "be", "perhaps", "doing", "wrong", "NUMBER", "In", "the", "data", "event", "handler", "I", "still", "have", "way", "more", "colors", "be", "shown", "in", "the", "pass", "chunk", "param", "then", "my", "reduced", "amount", "of", "NUMBER", "in", "this", "case", "NUMBER", "Thanks", "var", "img", "gm", "sourceFilename", "tmpFilename", "temp", "NUMBER", "path", "suffix", "NUMBER", "miff", "return", "img", "NUMBER", "noProfile", "NUMBER", "bitdepth", "NUMBER", "NUMBER", "colors", "NUMBER", "NUMBER", "scale", "Math", "NUMBER", "ceil", "wh", "NUMBER", "height", "ratio", "MAX_W", "NUMBER", "write", "histogram", "tmpFilename", "function", "err", "var", "histogram", "rs", "histogram", "rs", "fs", "NUMBER", "createReadStream", "tmpFilename", "encoding", "utf", "NUMBER", "rs", "NUMBER", "addListener", "data", "function", "chunk", "console", "NUMBER", "log", "Data", "chunk", "Don", "t", "understand", "why", "this", "happens", "NUMBER", "Been", "workin", "on", "this", "for", "days", "and", "I", "post", "here", "and", "then", "I", "seem", "to", "see", "what", "the", "problem", "be", "NUMBER", "There", "be", "something", "wrong", "with", "scale", "NUMBER", "I", "also", "use", "resize", "and", "saw", "the", "same", "thing", "NUMBER", "When", "I", "remove", "scale", "I", "be", "get", "the", "color", "reduced", "image", "returned", "NUMBER", "You", "might", "want", "to", "look", "into", "use", "gm", "NUMBER", "ream", "instead", "of", "write", "a", "file", "and", "then", "reading", "it", "unless", "that", "s", "what", "you", "want", "NUMBER", "Try", "doing", "DEBUG", "gm", "node", "myscript", "NUMBER", "js", "to", "see", "what", "command", "be", "actually", "be", "executed", "NUMBER", "NUMBER", "rectangles", "in", "one", "call", "NUMBER", "you", "need", "a", "test", "Ok", "i", "ll", "add", "that", "later", "NUMBER", "be", "you", "use", "tabs", "NUMBER", "spaces", "per", "indentation", "I", "will", "keep", "that", "in", "mind", "NUMBER", "Thanks", "for", "the", "hints", "NUMBER", "jonathanong", "Yes", "i", "think", "so", "NUMBER", "But", "i", "thought", "of", "add", "the", "functionality", "for", "round", "rectangles", "NUMBER", "That", "s", "just", "NUMBER", "more", "parameters", "so", "drawRectangleMulti", "behaves", "like", "the", "original", "drawRectangle", "NUMBER", "At", "the", "moment", "drawRectangleMulti", "only", "ues", "the", "coordinates", "NUMBER", "What", "do", "you", "think", "about", "it", "Ok", "i", "think", "i", "m", "do", "now", "NUMBER", "If", "there", "s", "nothing", "more", "from", "your", "side", "i", "would", "be", "happy", "if", "you", "merge", "it", "to", "the", "project", "NUMBER", "NUMBER", "for", "me", "NUMBER", "It", "s", "not", "really", "add", "any", "new", "functionality", "NUMBER", "I", "m", "not", "stating", "it", "wouldn", "t", "be", "useful", "so", "how", "about", "publishing", "as", "a", "separate", "module", "and", "add", "it", "to", "our", "wiki", "LINK", "Due", "to", "some", "GraphicsMagick", "weirdness", "this", "doesn", "t", "work", "for", "me", "gm", "buf", "NUMBER", "colors", "PNG_PALETTE_SIZE", "NUMBER", "resize", "NUMBER", "NUMBER", "ream", "NUMBER", "pipe", "out", "But", "something", "like", "this", "would", "gm", "buf", "PNG", "NUMBER", "NUMBER", "colors", "PNG_PALETTE_SIZE", "NUMBER", "resize", "NUMBER", "NUMBER", "ream", "PNG", "NUMBER", "pipe", "out", "I", "m", "trying", "to", "convert", "from", "PNG", "NUMBER", "to", "an", "indexed", "semi", "transparent", "PNG", "NUMBER", "You", "can", "verify", "the", "same", "GraphicsMagick", "bug", "on", "the", "commandline", "NUMBER", "In", "other", "words", "I", "d", "like", "to", "generate", "this", "command", "gm", "convert", "PNG", "NUMBER", "colors", "NUMBER", "resize", "NUMBER", "PNG", "There", "should", "be", "a", "way", "to", "override", "the", "that", "gm", "supplies", "by", "default", "NUMBER", "In", "my", "case", "I", "need", "PNG", "NUMBER", "on", "the", "input", "and", "PNG", "on", "the", "output", "NUMBER", "Yup", "My", "workaround", "unfortunately", "be", "to", "use", "spawn", "directly", "NUMBER", "You", "get", "an", "image", "we", "can", "use", "Better", "yet", "can", "you", "submit", "a", "pr", "for", "a", "test", "It", "might", "be", "a", "few", "days", "NUMBER", "as", "I", "said", "I", "ve", "developed", "my", "workaround", "NUMBER", "Any", "work", "I", "do", "on", "this", "bug", "will", "be", "on", "my", "own", "time", "which", "be", "scant", "this", "season", "NUMBER", "no", "problem", "dude", "NUMBER", "i", "would", "fix", "this", "i", "just", "don", "t", "know", "where", "i", "d", "get", "a", "png", "NUMBER", "It", "s", "just", "a", "PNG", "with", "transparency", "NUMBER", "Your", "avatar", "on", "LINK", "issuecomment", "NUMBER", "be", "a", "PNG", "NUMBER", "Actually", "it", "s", "a", "good", "candidate", "for", "conversion", "to", "PNG", "NUMBER", "oh", "what", "interesting", "NUMBER", "thanks", "i", "have", "a", "branch", "with", "this", "feature", "LINK", "custom", "let", "me", "know", "how", "it", "works", "out", "for", "you", "NUMBER", "however", "i", "m", "not", "even", "seeing", "this", "issue", "on", "my", "comptuer", "so", "i", "don", "t", "know", "if", "this", "be", "necessary", "NUMBER", "what", "kind", "of", "error", "do", "you", "get", "it", "do", "it", "propagate", "to", "gm", "at", "all", "or", "do", "it", "die", "silently", "also", "do", "this", "happen", "only", "if", "you", "use", "stdout", "vs", "NUMBER", "write", "to", "a", "file", "If", "only", "the", "width", "be", "specified", "for", "a", "resize", "operation", "GraphicsMagick", "requires", "the", "format", "resize", "NUMBER", "x", "while", "ImageMagick", "requires", "the", "format", "resize", "NUMBER", "I", "see", "that", "this", "requires", "modifications", "to", "a", "couple", "of", "other", "test", "as", "well", "NUMBER", "I", "ll", "update", "those", "if", "you", "agree", "on", "the", "solution", "NUMBER", "Ah", "good", "catch", "on", "the", "typo", "NUMBER", "I", "ve", "update", "the", "remaining", "test", "now", "NUMBER", "Is", "that", "really", "necessary", "The", "resized", "image", "be", "portrait", "format", "so", "as", "long", "as", "the", "flag", "isn", "t", "given", "and", "the", "width", "be", "correct", "the", "height", "should", "also", "be", "correct", "NUMBER", "resize", "x", "x", "would", "result", "in", "a", "width", "TAG", "kitty", "NUMBER", "webp", "My", "mistake", "I", "update", "my", "previous", "post", "NUMBER", "You", "re", "right", "get", "it", "fix", "too", "NUMBER", "Thanks", "for", "the", "hint", "do", "NUMBER", "Add", "to", "the", "readme", "installation", "section", "the", "version", "s", "we", "test", "successfully", "NUMBER", "see", "NUMBER", "i", "think", "thats", "the", "right", "move", "NUMBER", "i", "don", "t", "want", "to", "get", "in", "the", "business", "of", "test", "the", "correctness", "of", "graphicsmagick", "itself", "NUMBER", "it", "works", "fine", "right", "now", "Wouldn", "t", "this", "be", "better", "write", "as", "a", "binding", "for", "Magick", "LINK", "I", "debated", "this", "early", "in", "the", "project", "but", "never", "made", "time", "NUMBER", "Its", "not", "clear", "to", "me", "if", "it", "would", "indeed", "be", "better", "the", "advantage", "now", "be", "the", "work", "be", "do", "in", "a", "separate", "process", "so", "the", "event", "loop", "stays", "happy", "NUMBER", "What", "do", "better", "mean", "By", "better", "I", "mean", "Better", "error", "handle", "parsing", "stderr", "sucks", "More", "robust", "i", "NUMBER", "e", "NUMBER", "no", "more", "issue", "NUMBER", "no", "more", "bug", "like", "the", "gif", "thing", "I", "recently", "made", "a", "pull", "request", "on", "It", "could", "still", "spawn", "a", "separate", "thread", "or", "process", "if", "necessary", "of", "course", "NUMBER", "It", "would", "be", "that", "or", "be", "able", "to", "work", "on", "smaller", "chunks", "of", "data", "NUMBER", "Definitely", "don", "t", "want", "to", "do", "it", "synchronously", "NUMBER", "But", "it", "would", "still", "hopefully", "accomplish", "the", "two", "above", "goal", "NUMBER", "I", "m", "interested", "in", "possibly", "work", "on", "this", "down", "the", "line", "I", "d", "like", "your", "thoughts", "though", "NUMBER", "more", "robust", "be", "debatable", "NUMBER", "with", "new", "code", "comes", "new", "bug", "NUMBER", "I", "m", "not", "against", "this", "at", "all", "just", "not", "convinced", "yet", "that", "a", "rewrite", "with", "Magick", "be", "a", "clear", "win", "NUMBER", "I", "m", "interested", "but", "partly", "just", "due", "to", "learning", "more", "C", "which", "really", "shouldn", "t", "have", "a", "vote", "in", "this", "jonathanong", "I", "was", "just", "about", "to", "say", "the", "same", "thing", "NUMBER", "Heroku", "for", "example", "only", "support", "IM", "NUMBER", "i", "ll", "probably", "start", "a", "branch", "for", "this", "and", "see", "what", "happens", "NUMBER", "i", "d", "like", "to", "learn", "some", "c", "anyway", "NUMBER", "branch", "name", "be", "binding", "NUMBER", "we", "ll", "see", "what", "happens", "NUMBER", "feel", "free", "to", "hack", "on", "it", "NUMBER", "yeah", "thats", "the", "idea", "NUMBER", "a", "couple", "bindings", "or", "whatever", "makes", "sense", "NUMBER", "every", "binding", "method", "be", "async", "with", "a", "TAG", "Sync", "counterpart", "for", "good", "measure", "NUMBER", "maybe", "js", "assert", "NUMBER", "equal", "img", "img", "NUMBER", "resize", "NUMBER", "NUMBER", "chains", "var", "buffer", "img", "NUMBER", "resizeSync", "NUMBER", "NUMBER", "img", "NUMBER", "resize", "NUMBER", "NUMBER", "function", "err", "buffer", "var", "stream", "img", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "ream", "I", "don", "t", "know", "how", "this", "will", "turn", "out", "but", "its", "worth", "exploring", "NUMBER", "aheckmann", "if", "you", "be", "interested", "I", "ve", "write", "a", "very", "nice", "graphicsmagick", "buildpack", "for", "Heroku", "NUMBER", "LINK", "buildpack", "graphicsmagick", "mcollina", "nice", "Could", "you", "list", "it", "in", "the", "README", "in", "a", "FAQ", "Could", "I", "send", "you", "a", "pull", "request", "for", "that", "you", "can", "add", "it", "to", "the", "wiki", "NUMBER", "no", "pull", "request", "required", "NUMBER", "we", "can", "add", "links", "to", "the", "wiki", "in", "the", "readme", "NUMBER", "Yes", "for", "v", "NUMBER", "but", "we", "should", "fix", "autoOrient", "NUMBER", "I", "just", "add", "lost", "NUMBER", "png", "NUMBER", "probably", "need", "to", "bump", "gleak", "and", "it", "looks", "like", "maybe", "you", "compiled", "with", "dtrace", "hmm", "weird", "NUMBER", "be", "this", "osx", "or", "smartos", "or", "oh", "ok", "yeah", "those", "trace", "globals", "show", "up", "for", "me", "too", "now", "on", "NUMBER", "update", "gleak", "fix", "this", "I", "ve", "be", "too", "busy", "lately", "to", "give", "this", "project", "the", "care", "it", "needs", "so", "I", "ve", "given", "you", "commit", "access", "to", "make", "any", "change", "you", "see", "fit", "NUMBER", "A", "test", "case", "would", "be", "really", "wonderful", "NUMBER", "I", "was", "mostly", "wondering", "if", "anyone", "had", "had", "success", "work", "with", "gm", "and", "node", "NUMBER", "In", "particular", "our", "app", "be", "use", "image", "NUMBER", "ream", "and", "be", "having", "a", "hard", "time", "get", "any", "data", "out", "of", "the", "result", "NUMBER", "Has", "anyone", "else", "had", "problem", "I", "run", "the", "test", "on", "my", "MacBook", "Air", "today", "which", "seem", "mostly", "ok", "one", "test", "spit", "an", "error", "from", "GraphicsMagick", "that", "doesn", "t", "occur", "on", "NUMBER", "x", "NUMBER", "Otherwise", "it", "might", "just", "be", "the", "API", "change", "to", "Node", "streams", "you", "may", "need", "to", "resume", "the", "stream", "or", "something", "If", "you", "track", "anything", "down", "I", "gave", "you", "commit", "access", "to", "this", "project", "to", "make", "any", "change", "you", "find", "necessary", "NUMBER", "ok", "thanks", "NUMBER", "I", "ll", "keep", "digging", "NUMBER", "Will", "close", "this", "issue", "for", "now", "until", "I", "have", "anything", "more", "concrete", "NUMBER", "It", "looks", "like", "this", "issue", "be", "relate", "to", "image", "NUMBER", "identify", "and", "image", "NUMBER", "ream", "the", "response", "stream", "be", "empty", "NUMBER", "Everything", "else", "works", "as", "expected", "NUMBER", "I", "m", "going", "to", "continue", "digging", "but", "if", "anyone", "more", "familiar", "with", "the", "internals", "of", "the", "library", "has", "ideas", "that", "d", "be", "much", "appreciated", "NUMBER", "I", "m", "work", "from", "head", "as", "of", "this", "morning", "NUMBER", "Will", "try", "and", "create", "a", "cut", "down", "test", "case", "NUMBER", "But", "we", "re", "doing", "a", "bunch", "of", "transformations", "then", "pipe", "the", "image", "stream", "into", "a", "HTTP", "response", "NUMBER", "What", "s", "interesting", "be", "if", "I", "add", "an", "on", "data", "listener", "to", "stdout", "and", "stderr", "it", "sometimes", "works", "presumably", "forcing", "into", "old", "style", "streams", "but", "will", "still", "occasionally", "fail", "with", "gm", "convert", "Empty", "input", "file", "var", "folders", "xd", "NUMBER", "j", "NUMBER", "tfn", "NUMBER", "_q", "NUMBER", "t", "NUMBER", "d", "NUMBER", "rf", "NUMBER", "gn", "T", "gmhFhPCU", "NUMBER", "Here", "s", "a", "simple", "test", "case", "will", "try", "your", "patch", "NUMBER", "var", "http", "require", "http", "var", "gm", "require", "gm", "var", "util", "require", "util", "http", "NUMBER", "createServer", "function", "req", "res", "http", "NUMBER", "get", "LINK", "_", "NUMBER", "jpg", "function", "imageResponse", "var", "image", "gm", "imageResponse", "monkey", "NUMBER", "jpg", "Succeeds", "streamImage", "image", "return", "image", "NUMBER", "identify", "bufferStream", "true", "function", "err", "info", "if", "err", "return", "writeError", "gm", "NUMBER", "identify", "fail", "err", "Fails", "streamImage", "image", "NUMBER", "on", "error", "function", "err", "writeError", "Failed", "to", "load", "image", "err", "function", "streamImage", "image", "image", "NUMBER", "ream", "function", "err", "stdout", "stderr", "if", "err", "return", "writeError", "gm", "NUMBER", "ream", "fail", "err", "res", "NUMBER", "writeHead", "NUMBER", "Content", "Type", "image", "jpeg", "stdout", "NUMBER", "pipe", "res", "function", "writeError", "message", "err", "console", "NUMBER", "log", "message", "err", "res", "NUMBER", "writeHead", "NUMBER", "Content", "Type", "text", "plain", "res", "NUMBER", "end", "message", "n", "n", "util", "NUMBER", "inspect", "err", "NUMBER", "listen", "NUMBER", "NUMBER", "The", "suggestion", "in", "NUMBER", "doesn", "t", "appear", "to", "work", "on", "its", "own", "the", "pipe", "from", "stdout", "doesn", "t", "get", "any", "data", "NUMBER", "I", "thought", "streams", "NUMBER", "was", "meant", "to", "make", "things", "better", "In", "the", "real", "code", "we", "use", "the", "result", "of", "identify", "to", "determine", "resize", "crop", "operations", "NUMBER", "Unfortunately", "NUMBER", "Dan", "On", "Mon", "Apr", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Jonathan", "Ong", "notifications", "github", "NUMBER", "comwrote", "interesting", "NUMBER", "although", "this", "be", "a", "bug", "you", "should", "just", "do", "identify", "and", "stream", "in", "parallel", "since", "they", "be", "independent", "of", "each", "other", "NUMBER", "it", "should", "be", "faster", "as", "well", "both", "in", "terms", "of", "memory", "management", "and", "computation", "time", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "NUMBER", "Cool", "let", "me", "give", "that", "a", "try", "NUMBER", "Dan", "On", "Mon", "Apr", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Jonathan", "Ong", "notifications", "github", "NUMBER", "comwrote", "Simple", "way", "http", "NUMBER", "get", "image", "NUMBER", "jpg", "function", "resp", "var", "buffers", "resp", "NUMBER", "on", "data", "function", "chunk", "buffers", "NUMBER", "push", "chunk", "resp", "NUMBER", "on", "end", "function", "var", "buffer", "Buffer", "NUMBER", "concat", "buffers", "gm", "buffer", "NUMBER", "identify", "function", "err", "info", "stuff", "gm", "buffer", "NUMBER", "resize", "NUMBER", "ream", "function", "err", "stdout", "stuff", "stdout", "NUMBER", "pipe", "res", "More", "convoluted", "but", "faster", "http", "NUMBER", "get", "image", "NUMBER", "jpg", "function", "resp", "var", "buffers", "resp", "NUMBER", "on", "data", "function", "chunk", "buffers", "NUMBER", "push", "chunk", "gm", "resp", "NUMBER", "identify", "function", "err", "info", "stuff", "gm", "Buffer", "NUMBER", "concat", "buffers", "NUMBER", "resize", "NUMBER", "ream", "function", "err", "stdout", "stuff", "stdout", "NUMBER", "pipe", "res", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "NUMBER", "Ok", "that", "work", "around", "works", "NUMBER", "Thanks", "NUMBER", "Do", "you", "want", "to", "keep", "this", "bug", "open", "for", "track", "I", "assume", "this", "should", "work", "but", "to", "be", "honest", "the", "streams", "NUMBER", "change", "confuse", "me", "NUMBER", "jonathanong", "good", "idea", "NUMBER", "if", "folks", "realize", "they", "need", "to", "pass", "bufferStream", "they", "probably", "already", "get", "what", "be", "going", "on", "and", "how", "to", "fit", "it", "anyway", "as", "in", "your", "example", "NUMBER", "GM", "has", "a", "very", "useful", "command", "for", "add", "watermarks", "gm", "composite", "gravity", "center", "dissolve", "NUMBER", "watermark", "NUMBER", "png", "base", "NUMBER", "jpg", "output", "NUMBER", "jpg", "I", "be", "struggling", "to", "find", "its", "equivalent", "in", "this", "node", "gm", "module", "NUMBER", "Can", "you", "please", "add", "the", "composite", "command", "or", "point", "me", "in", "the", "right", "direction", "with", "some", "exist", "alternatives", "I", "was", "able", "to", "use", "the", "sub", "command", "imageMagick", "NUMBER", "subCommand", "composite", "NUMBER", "in", "compose", "Over", "NUMBER", "watermark", "NUMBER", "png", "base", "NUMBER", "png", "NUMBER", "write", "output", "NUMBER", "png", "function", "err", "console", "NUMBER", "log", "do", "err", "jonathanong", "sounds", "good", "to", "me", "on", "both", "NUMBER", "gm", "outputs", "a", "size", "for", "each", "frame", "NUMBER", "Previously", "they", "would", "be", "concatenated", "together", "like", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "so", "size", "would", "output", "NUMBER", "width", "and", "NUMBER", "height", "when", "height", "be", "actually", "NUMBER", "How", "would", "I", "implement", "something", "like", "LINK", "text", "into", "rectangle", "NUMBER", "NUMBER", "convert", "background", "NUMBER", "gravity", "center", "fill", "white", "size", "width", "x", "NUMBER", "caption", "This", "be", "a", "sample", "text", "to", "test", "the", "automatic", "sizing", "of", "fonts", "by", "ImageMagick", "NUMBER", "target_image", "NUMBER", "png", "swap", "gravity", "north", "composite", "output", "NUMBER", "png", "I", "m", "trying", "to", "automatically", "annotate", "an", "image", "with", "the", "annotation", "contained", "in", "a", "background", "rectangle", "this", "seems", "the", "best", "way", "of", "handle", "it", "NUMBER", "I", "d", "automatically", "resize", "the", "background", "rectangle", "based", "on", "the", "image", "dimensions", "and", "text", "length", "NUMBER", "Open", "to", "alternative", "suggestions", "NUMBER", "I", "ve", "tried", "use", "the", "NUMBER", "drawText", "method", "but", "the", "issue", "be", "NUMBER", "trying", "to", "dimension", "and", "draw", "the", "background", "box", "and", "NUMBER", "modifying", "the", "font", "size", "to", "fit", "NUMBER", "First", "attempt", "works", "ok", "but", "be", "ugly", "run", "in", "the", "examples", "directory", "javascript", "var", "gm", "require", "NUMBER", "dir", "__dirname", "imgs", "text", "test", "NUMBER", "im", "gm", "NUMBER", "subClass", "imageMagick", "true", "im", "NUMBER", "background", "NUMBER", "NUMBER", "fill", "white", "NUMBER", "out", "size", "text", "NUMBER", "length", "NUMBER", "x", "NUMBER", "caption", "text", "dir", "photo", "NUMBER", "jpg", "NUMBER", "out", "swap", "NUMBER", "out", "geometry", "NUMBER", "NUMBER", "NUMBER", "gravity", "North", "NUMBER", "out", "composite", "NUMBER", "write", "dir", "caption", "NUMBER", "png", "function", "err", "if", "err", "return", "console", "NUMBER", "dir", "argument", "console", "NUMBER", "log", "this", "NUMBER", "outname", "created", "argument", "NUMBER", "My", "workload", "holds", "doing", "an", "order", "of", "NUMBER", "parallel", "calls", "for", "cropping", "NUMBER", "From", "my", "test", "it", "looks", "that", "as", "the", "level", "of", "parallelism", "grows", "use", "imagemagick", "and", "ImageMagick", "gives", "out", "results", "in", "the", "range", "of", "seconds", "NUMBER", "I", "was", "get", "NUMBER", "ms", "NUMBER", "ms", "NUMBER", "ms", "as", "additional", "calls", "stacked", "on", "top", "of", "the", "current", "queue", "and", "be", "made", "NUMBER", "This", "be", "very", "strange", "since", "forks", "on", "Unix", "should", "be", "cheap", "and", "I", "don", "t", "see", "how", "cropping", "a", "NUMBER", "x", "NUMBER", "image", "can", "be", "in", "the", "order", "of", "seconds", "NUMBER", "I", "figured", "this", "be", "some", "kind", "of", "bug", "NUMBER", "From", "previous", "experience", "I", "know", "GraphicsMagick", "was", "faster", "than", "ImageMagick", "but", "for", "this", "specific", "project", "I", "was", "avoiding", "premature", "optimization", "and", "preferred", "the", "comfort", "of", "use", "exist", "ImageMagick", "based", "module", "I", "start", "this", "project", "NUMBER", "years", "ago", "when", "gm", "wasn", "t", "fitting", "my", "needs", "for", "some", "forgettable", "reason", "NUMBER", "Switching", "to", "gm", "and", "GraphicsMagick", "I", "m", "now", "seeing", "an", "order", "of", "NUMBER", "ms", "calls", "NUMBER", "this", "be", "NUMBER", "orders", "of", "magnitude", "faster", "NUMBER", "This", "be", "an", "epic", "win", "thanks", "How", "would", "I", "run", "a", "command", "similar", "to", "this", "through", "this", "module", "gm", "convert", "font", "Arial", "NUMBER", "ttf", "label", "Hello", "World", "test", "NUMBER", "png", "Note", "that", "the", "font", "need", "to", "go", "before", "the", "label", "otherwise", "it", "doesn", "t", "work", "as", "expected", "NUMBER", "My", "first", "attempt", "was", "this", "javascript", "function", "renderText", "text", "res", "gm", "label", "text", "NUMBER", "font", "Arial", "NUMBER", "ttf", "NUMBER", "ream", "output", "NUMBER", "png", "function", "err", "stdout", "stderr", "TODO", "Proper", "error", "handle", "if", "err", "throw", "err", "stdout", "NUMBER", "pipe", "res", "But", "that", "puts", "the", "font", "parameter", "after", "the", "label", "not", "before", "it", "NUMBER", "Okay", "I", "get", "it", "work", "like", "the", "following", "javascript", "gm", "NUMBER", "font", "Arial", "NUMBER", "ttf", "NUMBER", "out", "label", "text", "NUMBER", "ream", "output", "NUMBER", "png", "function", "err", "stdout", "stderr", "NUMBER", "Is", "this", "the", "best", "approach", "or", "should", "I", "be", "doing", "it", "differently", "No", "that", "produces", "no", "output", "NUMBER", "Doing", "it", "like", "that", "produces", "this", "command", "gm", "convert", "font", "usr", "share", "fonts", "truetype", "msttcorefonts", "Verdana", "NUMBER", "ttf", "label", "Offline", "PNG", "But", "this", "be", "needed", "gm", "convert", "font", "usr", "share", "fonts", "truetype", "msttcorefonts", "Verdana", "NUMBER", "ttf", "label", "Offline", "PNG", "I", "think", "that", "syntax", "label", "NUMBER", "be", "for", "when", "you", "start", "with", "an", "exist", "image", "and", "want", "to", "label", "it", "ie", "NUMBER", "for", "add", "captions", "NUMBER", "In", "my", "case", "I", "want", "to", "just", "render", "text", "with", "a", "transparent", "background", "and", "hence", "don", "t", "have", "an", "initial", "image", "NUMBER", "jonathanong", "out", "and", "in", "should", "be", "public", "just", "a", "docs", "failure", "NUMBER", "sometimes", "the", "order", "of", "the", "command", "line", "options", "matters", "which", "be", "why", "there", "be", "two", "methods", "NUMBER", "I", "m", "open", "to", "renaming", "before", "we", "document", "them", "if", "it", "helps", "any", "NUMBER", "Any", "idea", "why", "watermark", "would", "not", "be", "work", "my", "guess", "be", "that", "s", "an", "issue", "with", "my", "compiled", "version", "of", "gm", "NUMBER", "Sample", "var", "fs", "require", "fs", "gm", "require", "gm", "gm", "img", "NUMBER", "jpg", "NUMBER", "watermark", "NUMBER", "NUMBER", "NUMBER", "write", "img_marked", "NUMBER", "jpg", "function", "err", "if", "err", "console", "NUMBER", "error", "err", "gm", "version", "gm", "version", "GraphicsMagick", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Q", "NUMBER", "LINK", "Copyright", "C", "NUMBER", "NUMBER", "GraphicsMagick", "Group", "NUMBER", "Additional", "copyrights", "and", "licenses", "apply", "to", "this", "software", "NUMBER", "See", "LINK", "for", "details", "NUMBER", "Feature", "Support", "Thread", "Safe", "yes", "Large", "Files", "NUMBER", "bit", "yes", "Large", "Memory", "NUMBER", "bit", "yes", "BZIP", "yes", "DPS", "no", "FlashPix", "no", "FreeType", "yes", "Ghostscript", "Library", "no", "JBIG", "yes", "JPEG", "NUMBER", "yes", "JPEG", "yes", "Little", "CMS", "yes", "Loadable", "Modules", "yes", "OpenMP", "yes", "NUMBER", "PNG", "yes", "TIFF", "yes", "TRIO", "no", "UMEM", "no", "WMF", "yes", "X", "NUMBER", "yes", "XML", "yes", "ZLIB", "yes", "Host", "type", "x", "NUMBER", "_", "NUMBER", "pc", "linux", "gnu", "Configured", "use", "the", "command", "NUMBER", "configure", "build", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "enable", "shared", "enable", "static", "enable", "libtool", "verbose", "prefix", "usr", "mandir", "prefix", "share", "man", "infodir", "prefix", "share", "info", "docdir", "prefix", "share", "doc", "graphicsmagick", "with", "gs", "font", "dir", "usr", "share", "fonts", "type", "NUMBER", "gsfonts", "with", "x", "x", "include", "usr", "include", "X", "NUMBER", "x", "libraries", "usr", "lib", "X", "NUMBER", "without", "dps", "without", "modules", "without", "frozenpaths", "with", "perl", "with", "perl", "options", "INSTALLDIRS", "vendor", "build_alias", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "CFLAGS", "Wall", "g", "fno", "strict", "aliasing", "fPIE", "fstack", "protector", "param", "ssp", "buffer", "size", "NUMBER", "D_FORTIFY_SOURCE", "NUMBER", "Wformat", "Wformat", "security", "Werror", "format", "security", "O", "NUMBER", "LDFLAGS", "fPIE", "pie", "Wl", "z", "relro", "Wl", "z", "now", "CXXFLAGS", "Wall", "g", "fno", "strict", "aliasing", "fPIE", "fstack", "protector", "param", "ssp", "buffer", "size", "NUMBER", "D_FORTIFY_SOURCE", "NUMBER", "Wformat", "Wformat", "security", "Werror", "format", "security", "O", "NUMBER", "Final", "Build", "Parameters", "CC", "gcc", "std", "gnu", "NUMBER", "CFLAGS", "fopenmp", "Wall", "g", "fno", "strict", "aliasing", "fPIE", "fstack", "protector", "param", "ssp", "buffer", "size", "NUMBER", "D_FORTIFY_SOURCE", "NUMBER", "Wformat", "Wformat", "security", "Werror", "format", "security", "O", "NUMBER", "Wall", "pthread", "CPPFLAGS", "I", "usr", "include", "X", "NUMBER", "I", "usr", "include", "freetype", "NUMBER", "I", "usr", "include", "libxml", "NUMBER", "CXX", "g", "CXXFLAGS", "Wall", "g", "fno", "strict", "aliasing", "fPIE", "fstack", "protector", "param", "ssp", "buffer", "size", "NUMBER", "D_FORTIFY_SOURCE", "NUMBER", "Wformat", "Wformat", "security", "Werror", "format", "security", "O", "NUMBER", "pthread", "LDFLAGS", "fPIE", "pie", "Wl", "z", "relro", "Wl", "z", "now", "L", "usr", "lib", "X", "NUMBER", "L", "usr", "lib", "L", "usr", "lib", "LIBS", "ljbig", "llcms", "ltiff", "lfreetype", "ljasper", "ljpeg", "lpng", "NUMBER", "lwmflite", "lXext", "lSM", "lICE", "lX", "NUMBER", "lbz", "NUMBER", "lxml", "NUMBER", "lz", "lm", "lgomp", "lpthread", "Before", "I", "dig", "into", "this", "has", "watermark", "command", "worked", "before", "in", "your", "library", "NUMBER", "Are", "you", "run", "test", "against", "it", "when", "I", "briefly", "looked", "through", "the", "test", "dir", "I", "couldn", "t", "find", "reference", "for", "watermark", "I", "want", "to", "use", "gm", "to", "create", "a", "captcha", "and", "directly", "output", "to", "browser", "that", "means", "do", "not", "use", "write", "to", "output", "to", "disk", "NUMBER", "I", "tryed", "this", "use", "gm", "buffer", "plugin", "express", "javascript", "gm", "opts", "NUMBER", "width", "NUMBER", "opts", "NUMBER", "height", "NUMBER", "NUMBER", "NUMBER", "font", "arial", "NUMBER", "NUMBER", "roke", "fff", "NUMBER", "NUMBER", "fill", "NUMBER", "NUMBER", "drawText", "NUMBER", "NUMBER", "text", "NUMBER", "buffer", "function", "err", "buf", "res", "NUMBER", "send", "buf", "but", "buf", "NUMBER", "length", "be", "NUMBER", "Any", "suggest", "If", "res", "be", "input", "stream", "this", "may", "suite", "you", "better", "javascript", "gm", "opts", "NUMBER", "width", "NUMBER", "opts", "NUMBER", "height", "NUMBER", "NUMBER", "NUMBER", "font", "arial", "NUMBER", "NUMBER", "roke", "fff", "NUMBER", "NUMBER", "fill", "NUMBER", "NUMBER", "drawText", "NUMBER", "NUMBER", "text", "NUMBER", "ream", "function", "err", "stdout", "stdout", "NUMBER", "pipe", "res", "duyleekun", "This", "be", "ok", "javascript", "gm", "NUMBER", "public", "static", "img", "image", "NUMBER", "png", "NUMBER", "font", "arial", "NUMBER", "NUMBER", "roke", "fff", "NUMBER", "NUMBER", "fill", "NUMBER", "NUMBER", "drawText", "NUMBER", "NUMBER", "test", "NUMBER", "ream", "function", "err", "stdout", "stdout", "NUMBER", "pipe", "res", "But", "this", "do", "not", "work", "javascript", "gm", "opts", "NUMBER", "width", "NUMBER", "opts", "NUMBER", "height", "NUMBER", "NUMBER", "NUMBER", "font", "arial", "NUMBER", "NUMBER", "roke", "fff", "NUMBER", "NUMBER", "fill", "NUMBER", "NUMBER", "drawText", "NUMBER", "NUMBER", "text", "NUMBER", "ream", "function", "err", "stdout", "stdout", "NUMBER", "pipe", "res", "I", "tried", "to", "use", "gm", "create", "a", "new", "image", "and", "use", "write", "to", "save", "image", "to", "disk", "and", "this", "be", "ok", "NUMBER", "Is", "there", "a", "bug", "in", "gm", "create", "a", "new", "image", "and", "output", "by", "stream", "jonathanong", "nothing", "happened", "NUMBER", "no", "error", "occured", "and", "no", "image", "outputed", "NUMBER", "Like", "steam", "be", "empty", "NUMBER", "jonathanong", "response", "be", "end", "and", "nothing", "output", "to", "browser", "NUMBER", "also", "attach", "the", "path", "of", "the", "identified", "file", "to", "returned", "data", "for", "identifying", "the", "logical", "location", "in", "the", "callback", "method", "How", "do", "I", "do", "a", "command", "like", "the", "following", "gm", "composite", "compose", "atop", "image", "NUMBER", "png", "image", "NUMBER", "png", "output", "NUMBER", "png", "Theres", "no", "helper", "yet", "but", "the", "following", "will", "work", "NUMBER", "js", "gm", "NUMBER", "subCommand", "composite", "NUMBER", "in", "compose", "atop", "image", "NUMBER", "png", "image", "NUMBER", "png", "NUMBER", "write", "output", "NUMBER", "png", "callback", "Is", "there", "a", "way", "to", "pass", "streams", "gm", "NUMBER", "subCommand", "composite", "NUMBER", "in", "compose", "atop", "stream", "NUMBER", "stream", "NUMBER", "NUMBER", "write", "output", "NUMBER", "png", "callback", "Thanks", "for", "the", "reply", "I", "do", "have", "the", "streams", "ready", "to", "pass", "to", "NUMBER", "in", "but", "not", "quite", "sure", "how", "to", "do", "it", "as", "the", "reference", "you", "sent", "me", "do", "not", "seem", "to", "have", "any", "examples", "in", "there", "NUMBER", "Thank", "you", "That", "seems", "fairly", "counter", "intuitive", "NUMBER", "gm", "part", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "setFormat", "jpeg", "NUMBER", "filesize", "bufferStream", "true", "function", "error", "filesize", "filesize", "be", "equal", "to", "the", "size", "of", "the", "original", "file", "before", "resizing", "and", "change", "formats", "I", "see", "NUMBER", "I", "think", "that", "makes", "sense", "NUMBER", "If", "I", "understand", "you", "correctly", "setFormat", "and", "resize", "be", "only", "finalized", "after", "calling", "stream", "NUMBER", "Thanks", "for", "the", "help", "NUMBER", "ream", "bypasses", "the", "Have", "you", "install", "graphicsmagick", "or", "imageMagick", "check", "NUMBER", "Differently", "from", "NUMBER", "write", "NUMBER", "ream", "calls", "_spawn", "with", "bufferOutput", "false", "NUMBER", "The", "callback", "function", "gets", "the", "stdin", "and", "stderr", "streams", "but", "not", "the", "proc", "so", "it", "could", "listen", "to", "the", "return", "code", "of", "end", "close", "event", "NUMBER", "This", "can", "be", "test", "in", "a", "non", "install", "GM", "IM", "machine", "with", "javascript", "gm", "logo", "NUMBER", "ream", "png", "cb", "vs", "NUMBER", "javascript", "gm", "logo", "NUMBER", "write", "tmp", "test", "NUMBER", "png", "cb", "i", "can", "confirm", "this", "NUMBER", "took", "several", "hours", "to", "figure", "out", "why", "i", "was", "get", "NUMBER", "byte", "images", "with", "no", "complaints", "NUMBER", "Here", "s", "an", "example", "javascript", "gm", "path", "to", "an", "animated", "NUMBER", "gif", "NUMBER", "format", "function", "err", "type", "output", "GIFGIFGIFGIFGIFGIFGIF", "NUMBER", "console", "NUMBER", "log", "type", "I", "guess", "format", "appends", "the", "type", "of", "every", "frame", "to", "the", "result", "NUMBER", "This", "line", "seems", "a", "bit", "strange", "to", "me", "LINK", "L", "NUMBER", "If", "I", "want", "to", "resize", "the", "image", "by", "specify", "the", "width", "eg", "NUMBER", "and", "leaving", "the", "height", "as", "be", "I", "have", "to", "pass", "x", "as", "options", "parameter", "so", "I", "get", "resize", "NUMBER", "x", "NUMBER", "There", "s", "no", "other", "way", "right", "now", "NUMBER", "I", "think", "that", "calling", "NUMBER", "resize", "NUMBER", "should", "result", "in", "resize", "NUMBER", "x", "What", "do", "you", "mean", "by", "that", "s", "not", "an", "option", "Resize", "NUMBER", "x", "be", "valid", "You", "re", "right", "NUMBER", "Strange", "NUMBER", "I", "remember", "get", "two", "different", "results", "when", "use", "once", "with", "and", "once", "without", "th", "x", "NUMBER", "Maybe", "I", "just", "dreamt", "it", "NUMBER", "I", "disagree", "as", "per", "the", "documentation", "that", "jonathanong", "quoted", "LINK", "issuecomment", "NUMBER", "the", "option", "do", "in", "fact", "exist", "width", "Width", "given", "height", "automagically", "selected", "to", "preserve", "aspect", "ratio", "NUMBER", "Yep", "but", "you", "don", "t", "need", "to", "specify", "NUMBER", "x", "NUMBER", "NUMBER", "be", "enough", "NUMBER", "My", "GraphicsMagick", "installations", "seem", "to", "require", "the", "NUMBER", "x", "format", "NUMBER", "If", "only", "NUMBER", "be", "specified", "it", "be", "actually", "treated", "as", "the", "height", "NUMBER", "Tested", "version", "NUMBER", "on", "FreeBSD", "and", "NUMBER", "on", "Windows", "NUMBER", "LINK", "details", "geometry", "The", "way", "I", "interpret", "the", "GM", "docs", "the", "x", "should", "always", "be", "present", "geometry", "TAG", "x", "TAG", "TAG", "TAG", "TAG", "The", "GM", "docs", "state", "that", "_In", "this", "document", "angle", "brackets", "TAG", "enclose", "variables", "and", "curly", "brackets", "enclose", "optional", "parameters", "NUMBER", "_", "The", "_x_", "be", "not", "marked", "as", "optional", "NUMBER", "If", "you", "compare", "the", "syntax", "for", "gaussian", "and", "geometry", "it", "seems", "clear", "to", "me", "that", "the", "_x_", "be", "required", "gaussian", "TAG", "x", "TAG", "geometry", "TAG", "x", "TAG", "TAG", "TAG", "TAG", "This", "be", "also", "emphasized", "by", "the", "fact", "that", "supplying", "a", "number", "without", "the", "_x_", "gives", "unexpect", "results", "NUMBER", "It", "turns", "out", "that", "GraphicsMagick", "treats", "a", "single", "number", "NUMBER", "as", "NUMBER", "x", "NUMBER", "so", "the", "unexpect", "behavior", "was", "only", "seen", "on", "portrait", "format", "images", "NUMBER", "I", "made", "a", "pull", "request", "with", "a", "propose", "solution", "a", "test", "for", "the", "specific", "case", "and", "modifications", "to", "the", "exist", "resize", "test", "NUMBER", "Let", "me", "know", "what", "you", "think", "I", "haven", "t", "find", "any", "documentation", "of", "that", "behavior", "but", "it", "seems", "to", "be", "happening", "here", "LINK", "l", "NUMBER", "I", "m", "use", "de", "below", "command", "to", "get", "an", "image", "and", "draw", "some", "text", "NUMBER", "The", "image", "be", "saved", "without", "the", "text", "NUMBER", "gm", "public", "images", "daprafazer", "NUMBER", "jpg", "NUMBER", "roke", "NUMBER", "NUMBER", "fontSize", "NUMBER", "NUMBER", "drawText", "NUMBER", "NUMBER", "GMagick", "NUMBER", "write", "public", "images", "meme", "NUMBER", "jpg", "funcion", "NUMBER", "Other", "function", "like", "drawLine", "work", "NUMBER", "Working", "for", "me", "NUMBER", "Maybe", "a", "bad", "miss", "font", "Do", "you", "get", "an", "error", "in", "the", "callback", "In", "linux", "I", "have", "met", "this", "NUMBER", "May", "be", "your", "server", "didn", "t", "install", "ghostscript", "NUMBER", "also", "in", "windows", "you", "may", "appoint", "a", "font", "type", "or", "it", "will", "throw", "can", "not", "find", "n", "NUMBER", "l", "NUMBER", "pfb", "NUMBER", "NUMBER", "font", "arial", "NUMBER", "I", "ve", "be", "trying", "to", "figure", "htis", "out", "for", "the", "past", "few", "hours", "NUMBER", "Basically", "when", "I", "identify", "bufferStream", "true", "an", "image", "then", "stream", "it", "it", "loses", "the", "interlace", "options", "NUMBER", "Test", "case", "var", "fs", "require", "fs", "var", "assert", "require", "assert", "var", "gm", "require", "gm", "NUMBER", "subClass", "imageMagick", "true", "gm", "taylor", "swift", "NUMBER", "jpg", "NUMBER", "interlace", "Plane", "NUMBER", "ream", "function", "err", "stream", "assert", "NUMBER", "ifError", "err", "gm", "stream", "NUMBER", "identify", "bufferStream", "true", "function", "err", "identity", "assert", "NUMBER", "ifError", "err", "console", "NUMBER", "log", "interlace", "after", "identify", "identity", "NUMBER", "Interlace", "this", "NUMBER", "ream", "function", "err", "stdout", "assert", "NUMBER", "ifError", "err", "gm", "stdout", "NUMBER", "identify", "function", "err", "identity", "assert", "NUMBER", "ifError", "err", "console", "NUMBER", "log", "interlace", "after", "stream", "then", "identify", "identity", "NUMBER", "Interlace", "Why", "right", "now", "i", "m", "just", "run", "identify", "and", "stream", "in", "parallel", "NUMBER", "Can", "t", "configuration", "path", "GraphicsMagick", "in", "gm", "if", "install", "to", "home", "dir", "Hi", "I", "m", "trying", "to", "manipulate", "and", "resize", "and", "image", "NUMBER", "If", "I", "prev", "load", "the", "image", "in", "a", "buffer", "self", "NUMBER", "decodedFile", "javascript", "gm", "this", "NUMBER", "decodedFile", "NUMBER", "autoOrient", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "write", "resize", "NUMBER", "png", "function", "err", "console", "NUMBER", "log", "err", "err", "The", "same", "doesnt", "work", "even", "if", "I", "specify", "the", "filename", "as", "in", "the", "doc", "and", "examples", "javascript", "gm", "this", "NUMBER", "decodedFile", "this", "NUMBER", "fileName", "NUMBER", "autoOrient", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "write", "resize", "NUMBER", "png", "function", "err", "console", "NUMBER", "log", "err", "err", "the", "resulting", "image", "be", "not", "scaled", "and", "be", "identical", "to", "the", "loaded", "one", "If", "I", "start", "giving", "the", "image", "file", "name", "everything", "works", "fine", "NUMBER", "javascript", "gm", "orig", "NUMBER", "jpeg", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "write", "resize_", "NUMBER", "jpg", "function", "err", "console", "NUMBER", "log", "err", "err", "I", "think", "Im", "miss", "something", "here", "any", "suggestion", "gm", "v", "NUMBER", "GraphicsMagick", "NUMBER", "I", "tried", "manually", "pulling", "the", "NUMBER", "pre", "but", "nothing", "change", "Same", "here", "NUMBER", "Resizing", "of", "file", "images", "works", "NUMBER", "But", "do", "not", "work", "for", "buffers", "NUMBER", "If", "a", "file", "image", "be", "resized", "to", "a", "smaller", "size", "and", "be", "write", "to", "a", "file", "why", "be", "that", "file", "bigger", "than", "the", "original", "one", "Aaron", "Thank", "you", "for", "fix", "this", "issue", "so", "quickly", "NUMBER", "I", "have", "question", "relate", "to", "that", "fix", "NUMBER", "I", "have", "an", "image", "of", "size", "NUMBER", "x", "NUMBER", "and", "the", "file", "be", "about", "NUMBER", "K", "NUMBER", "But", "when", "I", "resize", "the", "image", "to", "size", "NUMBER", "x", "NUMBER", "the", "file", "gets", "to", "be", "about", "NUMBER", "K", "NUMBER", "What", "gives", "Thank", "you", "From", "Aaron", "Heckmann", "notifications", "github", "NUMBER", "com", "To", "aheckmann", "gm", "gm", "noreply", "NUMBER", "github", "NUMBER", "com", "Cc", "shargors", "shargors", "yahoo", "NUMBER", "com", "Sent", "Friday", "December", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Subject", "Re", "gm", "Resizing", "do", "not", "work", "on", "buffers", "NUMBER", "fix", "be", "in", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "Never", "mind", "NUMBER", "My", "graphics", "file", "was", "invalid", "NUMBER", "Thanks", "for", "you", "reply", "NUMBER", "From", "Aaron", "Heckmann", "notifications", "github", "NUMBER", "com", "To", "aheckmann", "gm", "gm", "noreply", "NUMBER", "github", "NUMBER", "com", "Cc", "shargors", "shargors", "yahoo", "NUMBER", "com", "Sent", "Friday", "December", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Subject", "Re", "gm", "Resizing", "do", "not", "work", "on", "buffers", "NUMBER", "shargors", "as", "I", "previously", "mention", "please", "investigate", "with", "graphicsmagick", "directly", "as", "all", "we", "do", "be", "pass", "argument", "to", "the", "gm", "binary", "NUMBER", "Please", "post", "your", "findings", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "Is", "there", "a", "one", "function", "way", "to", "create", "a", "square", "thumbnail", "by", "resizing", "and", "cropping", "Seems", "like", "thumb", "keep", "the", "same", "aspect", "ratio", "NUMBER", "When", "convert", "from", "pdf", "density", "NUMBER", "NUMBER", "param", "ignored", "it", "must", "be", "before", "input", "must", "do", "direct", "injections", "NUMBER", "like", "gmobj", "NUMBER", "_in", "NUMBER", "push", "density", "gmobj", "NUMBER", "_in", "NUMBER", "push", "NUMBER", "My", "Code", "var", "gm", "require", "gm", "NUMBER", "subClass", "imageMagick", "true", "var", "image", "__dirname", "taylor", "swift", "NUMBER", "jpg", "require", "fs", "NUMBER", "readFile", "image", "function", "err", "buffer", "gm", "buffer", "NUMBER", "identify", "function", "err", "identity", "Unhandled", "error", "be", "throw", "here", "The", "error", "I", "get", "events", "NUMBER", "js", "NUMBER", "throw", "argument", "NUMBER", "Unhandled", "error", "event", "Error", "write", "EPIPE", "at", "errnoException", "net", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Object", "NUMBER", "afterWrite", "net", "NUMBER", "js", "NUMBER", "NUMBER", "i", "can", "replicate", "this", "issue", "NUMBER", "any", "idea", "as", "to", "what", "causes", "it", "The", "autoOrient", "function", "was", "throw", "error", "when", "use", "with", "graphicsmagick", "because", "graphicsmagick", "do", "not", "support", "the", "transpose", "and", "the", "transverse", "options", "NUMBER", "Also", "graphicsmagick", "uses", "flip", "and", "flop", "instead", "of", "flip", "vertical", "and", "flip", "horizontal", "NUMBER", "The", "previous", "test", "only", "covered", "one", "case", "for", "auto", "orientation", "and", "that", "case", "did", "not", "reach", "the", "transpose", "and", "transverse", "portion", "of", "the", "code", "so", "no", "error", "were", "throw", "NUMBER", "There", "be", "many", "more", "possible", "cases", "NUMBER", "I", "add", "a", "test", "suite", "that", "test", "all", "NUMBER", "possible", "cases", "inspired", "by", "the", "information", "in", "the", "following", "resources", "LINK", "design", "NUMBER", "com", "blog", "NUMBER", "NUMBER", "NUMBER", "exif", "orientation", "handle", "be", "a", "ghetto", "LINK", "LINK", "orientation", "NUMBER", "html", "LINK", "NUMBER", "PDF", "For", "example", "gm", "staticImgPath", "NUMBER", "resize", "width", "height", "NUMBER", "quality", "NUMBER", "NUMBER", "sepia", "NUMBER", "write", "If", "I", "want", "it", "to", "apply", "a", "filter", "based", "on", "what", "the", "user", "asks", "for", "can", "I", "pass", "in", "some", "sort", "of", "param", "and", "have", "gm", "automatically", "call", "the", "correct", "filter", "such", "as", "if", "user", "says", "filter", "sepia", "then", "have", "gm", "call", "gm", "NUMBER", "sepia", "Picking", "up", "from", "NUMBER", "NUMBER", "Added", "support", "for", "Buffer", "as", "source", "NUMBER", "No", "extra", "methods", "see", "examples", "fromBuffer", "NUMBER", "js", "for", "an", "example", "NUMBER", "Unfortunately", "due", "to", "the", "ugly", "setup", "for", "test", "I", "could", "not", "write", "a", "good", "test", "case", "for", "this", "but", "I", "m", "open", "to", "suggestions", "NUMBER", "Let", "me", "know", "if", "the", "change", "be", "ok", "and", "I", "ll", "push", "docs", "NUMBER", "Squashing", "all", "into", "one", "commit", "NUMBER", "I", "think", "that", "HumbleSoftware", "js", "imagediff", "LINK", "imagediff", "would", "be", "a", "great", "tool", "for", "test", "but", "I", "would", "also", "prefer", "a", "BDD", "style", "test", "framework", "NUMBER", "mocha", "LINK", "It", "took", "me", "a", "while", "to", "figure", "out", "that", "custom", "test", "NUMBER", "Unfortunately", "I", "ve", "get", "limited", "time", "so", "no", "promise", "but", "I", "might", "give", "this", "a", "try", "sometime", "NUMBER", "When", "we", "exec", "identify", "we", "don", "t", "want", "to", "lose", "the", "options", "set", "for", "the", "other", "commands", "that", "will", "come", "after", "identify", "NUMBER", "This", "should", "fix", "autoOrient", "calls", "orientation", "which", "in", "turn", "execs", "identify", "acting", "up", "as", "in", "NUMBER", "Yeah", "nb", "NUMBER", "This", "was", "just", "a", "bit", "of", "shotgun", "surgery", "to", "get", "around", "the", "immediate", "problem", "of", "autoOrient", "breaking", "my", "proof", "of", "concept", "NUMBER", "A", "bit", "less", "intrusive", "fix", "I", "could", "think", "of", "yesterday", "was", "to", "clone", "the", "gm", "object", "in", "autoOrient", "and", "run", "orientation", "on", "that", "clone", "but", "I", "didn", "t", "have", "the", "time", "to", "try", "it", "out", "yet", "NUMBER", "Is", "there", "any", "way", "to", "specify", "a", "timeout", "duration", "for", "GM", "operations", "AFAIK", "Node", "support", "that", "natively", "in", "child", "process", "module", "NUMBER", "Thing", "be", "I", "perform", "on", "demand", "image", "resizing", "with", "GM", "sometimes", "people", "upload", "NUMBER", "MB", "GIF", "file", "or", "highly", "compressed", "small", "high", "resolution", "file", "NUMBER", "GM", "uses", "a", "lot", "of", "resources", "while", "work", "on", "them", "NUMBER", "I", "d", "like", "to", "have", "an", "option", "to", "say", "if", "this", "takes", "more", "than", "a", "second", "just", "kill", "it", "and", "return", "an", "error", "NUMBER", "the", "extent", "method", "be", "calling", "this", "NUMBER", "in", "size", "geometry", "which", "be", "cause", "the", "outcome", "to", "be", "different", "than", "expected", "NUMBER", "i", "have", "an", "image", "of", "NUMBER", "x", "NUMBER", "and", "I", "want", "to", "extend", "it", "to", "NUMBER", "x", "NUMBER", "add", "white", "background", "NUMBER", "in", "the", "command", "line", "gm", "convert", "source", "NUMBER", "jpg", "extent", "NUMBER", "x", "NUMBER", "NUMBER", "NUMBER", "target", "NUMBER", "jpg", "do", "the", "trick", "However", "when", "use", "img", "NUMBER", "extent", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "it", "s", "run", "gm", "convert", "size", "NUMBER", "x", "NUMBER", "NUMBER", "NUMBER", "source", "NUMBER", "jpg", "extent", "NUMBER", "x", "NUMBER", "NUMBER", "NUMBER", "target", "NUMBER", "jpg", "which", "produces", "a", "completely", "different", "outcome", "NUMBER", "I", "can", "work", "around", "it", "by", "calling", "javascript", "gm", "source", "NUMBER", "jpg", "NUMBER", "extent", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "in", "size", "NUMBER", "x", "NUMBER", "NUMBER", "write", "NUMBER", "runnign", "the", "size", "command", "with", "an", "animated", "gif", "returns", "a", "weird", "size", "NUMBER", "height", "NUMBER", "it", "seems", "to", "add", "NUMBER", "more", "digits", "to", "the", "end", "of", "the", "correct", "height", "NUMBER", "width", "NUMBER", "height", "NUMBER", "NUMBER", "test", "with", "the", "size", "example", "and", "this", "image", "LINK", "LMyKAgTVIHI", "UK", "dLRk", "NUMBER", "cTI", "AAAAAAAAM", "NUMBER", "g", "eDrHUdS", "NUMBER", "xg", "NUMBER", "s", "NUMBER", "tumblr_mcu", "NUMBER", "n", "NUMBER", "NVbI", "NUMBER", "qb", "NUMBER", "tfo", "NUMBER", "_", "NUMBER", "gif", "identify", "on", "the", "same", "image", "returns", "correct", "size", "NUMBER", "Hello", "I", "was", "trying", "to", "run", "a", "command", "like", "this", "bash", "gm", "convert", "density", "NUMBER", "x", "NUMBER", "file", "NUMBER", "pdf", "resize", "NUMBER", "x", "NUMBER", "file", "NUMBER", "jpg", "Using", "the", "following", "javascript", "javascript", "var", "img", "gm", "file", "NUMBER", "pdf", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "density", "NUMBER", "NUMBER", "console", "NUMBER", "log", "img", "img", "NUMBER", "write", "file", "NUMBER", "jpg", "function", "err", "console", "NUMBER", "log", "err", "However", "this", "ends", "up", "run", "bash", "gm", "convert", "file", "NUMBER", "pdf", "resize", "NUMBER", "x", "NUMBER", "density", "NUMBER", "x", "NUMBER", "file", "NUMBER", "jpg", "Because", "the", "density", "comes", "after", "the", "input", "file", "the", "output", "in", "file", "NUMBER", "jpg", "be", "full", "of", "artifacts", "NUMBER", "Is", "there", "a", "way", "to", "change", "the", "order", "of", "argument", "so", "that", "the", "density", "argument", "comes", "before", "the", "input", "file", "Thanks", "I", "need", "to", "create", "thumbnails", "of", "images", "that", "may", "be", "EXIF", "rotated", "NUMBER", "I", "tried", "sticking", "an", "NUMBER", "autoOrient", "before", "the", "NUMBER", "umb", "call", "like", "this", "imageMagick", "public", "images", "originalImage", "NUMBER", "autoOrient", "NUMBER", "umb", "size", "size", "public", "images", "thumbImage", "quality", "center", "function", "err", "When", "I", "do", "that", "the", "output", "image", "re", "orients", "correctly", "but", "now", "the", "thumbnail", "be", "squashed", "to", "square", "instead", "of", "cropped", "to", "square", "NUMBER", "Is", "this", "a", "bug", "or", "be", "I", "miss", "something", "autoOrient", "doesn", "t", "play", "well", "with", "resize", "either", "NUMBER", "To", "get", "it", "to", "do", "both", "I", "have", "to", "do", "an", "orient", "and", "then", "a", "write", "like", "this", "coffeescript", "coffeescript", "img", "im", "path", "NUMBER", "autoOrient", "NUMBER", "write", "path", "err", "if", "err", "return", "console", "NUMBER", "log", "err", "img", "im", "path", "img", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "write", "newPath", "err", "if", "err", "return", "console", "NUMBER", "log", "err", "success", "code", "I", "wonder", "if", "this", "be", "only", "an", "issue", "because", "both", "me", "and", "OP", "be", "use", "the", "ImageMagick", "subClass", "NUMBER", "The", "problem", "appears", "to", "be", "that", "autoOrient", "somehow", "clears", "out", "the", "options", "set", "by", "thumb", "NUMBER", "If", "I", "run", "thumb", "alone", "then", "this", "be", "the", "argument", "that", "get", "use", "quality", "NUMBER", "public", "images", "NUMBER", "b", "NUMBER", "fdc", "NUMBER", "f", "NUMBER", "fedecdb", "NUMBER", "bdb", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "image", "NUMBER", "jpg", "scale", "NUMBER", "x", "NUMBER", "crop", "NUMBER", "x", "NUMBER", "NUMBER", "NUMBER", "profile", "public", "images", "NUMBER", "b", "NUMBER", "fdc", "NUMBER", "f", "NUMBER", "fedecdb", "NUMBER", "bdb", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "image_", "NUMBER", "x", "NUMBER", "jpeg", "However", "if", "I", "chain", "in", "an", "autoOrient", "NUMBER", "umb", "and", "then", "hold", "my", "phone", "in", "such", "a", "way", "that", "no", "rotation", "be", "necessary", "then", "these", "argument", "get", "use", "convert", "public", "images", "a", "NUMBER", "a", "NUMBER", "ca", "NUMBER", "ad", "NUMBER", "fc", "NUMBER", "f", "NUMBER", "image", "NUMBER", "jpg", "public", "images", "a", "NUMBER", "a", "NUMBER", "ca", "NUMBER", "ad", "NUMBER", "fc", "NUMBER", "f", "NUMBER", "image_", "NUMBER", "x", "NUMBER", "jpeg", "If", "I", "chain", "autoOrient", "NUMBER", "umb", "and", "hold", "my", "phone", "at", "a", "NUMBER", "degree", "angle", "these", "argument", "get", "use", "public", "images", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "fc", "NUMBER", "edee", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "c", "image", "NUMBER", "jpg", "rotate", "NUMBER", "page", "NUMBER", "NUMBER", "profile", "public", "images", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "fc", "NUMBER", "edee", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "e", "NUMBER", "c", "image_", "NUMBER", "x", "NUMBER", "jpeg", "Again", "these", "argument", "be", "ones", "set", "by", "autoOrient", "with", "none", "of", "the", "options", "set", "by", "thumb", "make", "it", "through", "to", "the", "end", "NUMBER", "this", "be", "still", "an", "issue", "for", "me", "NUMBER", "i", "m", "on", "NUMBER", "and", "the", "argument", "be", "no", "longer", "be", "lost", "the", "but", "the", "final", "generate", "command", "do", "not", "produce", "the", "intended", "result", "NUMBER", "i", "have", "some", "coffescript", "that", "do", "this", "gm", "filePath", "NUMBER", "autoOrient", "NUMBER", "setFormat", "jpeg", "NUMBER", "gravity", "Center", "NUMBER", "thumb", "width", "height", "outPath", "quality", "err", "next", "err", "outPath", "with", "a", "portrait", "image", "and", "width", "and", "height", "both", "equal", "to", "NUMBER", "this", "command", "be", "generate", "gm", "convert", "quality", "NUMBER", "size", "NUMBER", "x", "NUMBER", "tmp", "foo", "NUMBER", "jpg", "rotate", "NUMBER", "page", "NUMBER", "NUMBER", "profile", "gravity", "Center", "scale", "NUMBER", "x", "NUMBER", "crop", "NUMBER", "x", "NUMBER", "NUMBER", "NUMBER", "profile", "tmp", "foo", "thumb", "NUMBER", "jpg", "the", "final", "image", "be", "not", "cropped", "however", "NUMBER", "remove", "the", "scale", "option", "fix", "the", "issue", "NUMBER", "this", "command", "produces", "the", "proper", "thumb", "gm", "convert", "quality", "NUMBER", "size", "NUMBER", "x", "NUMBER", "tmp", "foo", "NUMBER", "jpg", "rotate", "NUMBER", "page", "NUMBER", "NUMBER", "profile", "gravity", "Center", "crop", "NUMBER", "x", "NUMBER", "NUMBER", "NUMBER", "profile", "tmp", "foo", "thumb", "NUMBER", "jpg", "i", "m", "not", "sure", "why", "the", "scale", "option", "be", "only", "an", "issue", "when", "auto", "orienting", "but", "that", "s", "the", "behavior", "i", "m", "observing", "NUMBER", "gm", "path", "to", "file", "NUMBER", "jpg", "NUMBER", "rotate", "white", "NUMBER", "Trying", "to", "rotate", "by", "ZERO", "NUMBER", "degrees", "yields", "a", "command", "like", "this", "gm", "convert", "path", "to", "file", "NUMBER", "jpg", "background", "white", "rotate", "This", "then", "returns", "the", "following", "error", "Command", "fail", "gm", "convert", "Option", "rotate", "requires", "an", "argument", "or", "argument", "be", "malformed", "NUMBER", "bonus", "fix", "trail", "spaces", "Please", "don", "t", "forget", "to", "publish", "the", "module", "after", "merge", "NUMBER", "an", "kill", "the", "process", "entirely", "since", "context", "be", "lost", "NUMBER", "This", "be", "bad", "for", "my", "use", "case", "in", "which", "many", "images", "be", "come", "through", "the", "server", "as", "part", "of", "other", "docs", "and", "we", "need", "the", "process", "to", "finish", "in", "order", "to", "have", "the", "docs", "continue", "through", "the", "entire", "pipeline", "NUMBER", "This", "may", "not", "be", "good", "for", "other", "use", "cases", "so", "I", "understand", "if", "there", "be", "no", "merge", "NUMBER", "Ah", "I", "totally", "agree", "with", "you", "NUMBER", "Not", "sure", "if", "this", "be", "the", "same", "as", "NUMBER", "but", "I", "feel", "like", "it", "could", "be", "NUMBER", "Worth", "looking", "in", "to", "Do", "you", "have", "any", "particular", "way", "you", "d", "like", "to", "send", "that", "error", "to", "those", "callbacks", "I", "could", "make", "another", "pull", "request", "if", "you", "d", "like", "but", "if", "you", "have", "an", "idea", "I", "ll", "just", "code", "that", "up", "rather", "than", "my", "own", "NUMBER", "Well", "would", "require", "putting", "that", "while", "loop", "inside", "of", "the", "catch", "block", "NUMBER", "I", "ll", "just", "save", "the", "err", "in", "the", "catch", "block", "to", "a", "variable", "then", "do", "that", "NUMBER", "Currently", "the", "helper", "NUMBER", "umb", "first", "performs", "a", "NUMBER", "size", "computes", "crop", "dimensions", "and", "then", "crops", "and", "resizes", "the", "image", "NUMBER", "I", "want", "to", "generate", "thumbnails", "but", "tried", "to", "avoid", "this", "two", "pass", "method", "NUMBER", "I", "bump", "into", "a", "superuser", "question", "LINK", "thumbnails", "with", "imagemagick", "convert", "which", "uses", "the", "thumbnail", "option", "but", "this", "be", "not", "available", "in", "gm", "NUMBER", "This", "pull", "request", "extend", "args", "with", "support", "for", "thumbnail", "include", "a", "simple", "test", "and", "an", "example", "NUMBER", "I", "reckon", "thumbnail", "might", "conflict", "with", "thumb", "in", "a", "naming", "sense", "but", "its", "the", "official", "name", "NUMBER", "Actually", "it", "do", "LINK", "details", "thumbnail", "NUMBER", "Yup", "I", "ll", "send", "another", "PR", "soon", "with", "the", "docs", "NUMBER", "I", "have", "a", "node", "NUMBER", "js", "server", "that", "receives", "a", "String", "in", "base", "NUMBER", "format", "of", "an", "image", "from", "a", "client", "NUMBER", "I", "would", "like", "to", "perform", "some", "operation", "with", "gm", "on", "this", "image", "NUMBER", "The", "problem", "be", "that", "gm", "only", "accepts", "as", "input", "a", "filename", "or", "a", "ReadableStream", "so", "since", "I", "don", "t", "want", "to", "save", "the", "image", "on", "the", "server", "and", "pass", "the", "name", "to", "gm", "I", "m", "seeking", "performance", "I", "created", "a", "subclass", "of", "Stream", "with", "the", "NUMBER", "readable", "property", "set", "to", "true", "and", "I", "overridden", "the", "NUMBER", "resume", "method", "to", "send", "my", "data", "as", "well", "as", "the", "method", "NUMBER", "setEncoding", "NUMBER", "Apparently", "the", "library", "doesn", "t", "complain", "when", "I", "pass", "the", "input", "but", "after", "performing", "the", "operation", "the", "NUMBER", "ream", "function", "doesn", "t", "really", "stream", "anything", "out", "NUMBER", "Printing", "the", "stderr", "variable", "leads", "to", "this", "_handle", "writeQueueSize", "NUMBER", "owner", "Circular", "onread", "Function", "onread", "_pendingWriteReqs", "NUMBER", "_flags", "NUMBER", "_connectQueueSize", "NUMBER", "destroyed", "false", "errorEmitted", "false", "bytesRead", "NUMBER", "_bytesDispatched", "NUMBER", "allowHalfOpen", "undefined", "writable", "false", "readable", "true", "_paused", "false", "_events", "close", "Function", "Which", "I", "don", "t", "really", "understand", "NUMBER", "I", "m", "pretty", "sure", "my", "implementation", "be", "somehow", "correct", "the", "problem", "be", "that", "by", "default", "the", "Stream", "I", "pass", "be", "paused", "and", "need", "to", "be", "resumed", "through", "NUMBER", "resume", "thus", "be", "not", "really", "work", "with", "your", "implementation", "NUMBER", "Is", "there", "a", "way", "in", "which", "I", "can", "modify", "your", "library", "to", "make", "it", "call", "NUMBER", "resume", "somewhere", "and", "have", "a", "work", "streaming", "Otherwise", "do", "you", "see", "a", "way", "in", "which", "I", "can", "achieve", "what", "I", "m", "trying", "to", "do", "besides", "my", "Stream", "subclass", "When", "processing", "images", "taken", "with", "an", "iPhone", "in", "portrait", "orientation", "home", "button", "to", "the", "bottom", "the", "Profile", "EXIF", "NUMBER", "Orientation", "be", "correctly", "marked", "as", "NUMBER", "but", "the", "image", "and", "thumbnails", "produced", "from", "it", "show", "the", "image", "incorrectly", "rotated", "NUMBER", "deg", "counterclockwise", "in", "landscape", "NUMBER", "I", "tried", "use", "autoOrient", "but", "it", "apparently", "considers", "the", "EXIF", "Orientation", "and", "rotates", "an", "additional", "NUMBER", "deg", "thus", "display", "thumbnails", "incorrectly", "rotated", "NUMBER", "deg", "clockwise", "in", "landscape", "NUMBER", "Am", "I", "miss", "something", "Or", "be", "autoOrient", "rotating", "too", "much", "If", "you", "rotate", "any", "color", "NUMBER", "the", "NUMBER", "do", "not", "go", "through", "onto", "the", "gm", "command", "line", "NUMBER", "You", "can", "workaround", "this", "by", "passing", "NUMBER", "to", "the", "rotate", "command", "NUMBER", "I", "be", "write", "some", "text", "vertically", "on", "a", "photo", "NUMBER", "So", "read", "the", "Exif", "data", "compute", "the", "rotation", "write", "the", "text", "then", "rotate", "back", "in", "a", "single", "command", "NUMBER", "So", "NUMBER", "be", "pass", "as", "a", "variable", "NUMBER", "The", "problem", "be", "that", "it", "writes", "the", "rotate", "but", "not", "the", "NUMBER", "so", "the", "gm", "command", "gets", "a", "syntax", "error", "NUMBER", "Make", "more", "sense", "On", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Aaron", "Heckmann", "notifications", "github", "NUMBER", "com", "write", "just", "wondering", "why", "you", "d", "want", "to", "rotate", "NUMBER", "wouldn", "t", "that", "be", "a", "no", "op", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "What", "be", "the", "best", "way", "to", "get", "the", "stdout", "stream", "AND", "calculate", "the", "content", "length", "Seems", "not", "to", "be", "very", "easy", "NUMBER", "Thanks", "NUMBER", "find", "the", "answer", "in", "NUMBER", "NUMBER", "but", "it", "doesn", "t", "looks", "nice", "probably", "some", "higher", "level", "method", "could", "round", "up", "this", "NUMBER", "this", "be", "seems", "like", "a", "general", "nodejs", "issue", "as", "oppose", "to", "gm", "how", "that", "one", "can", "t", "calculate", "the", "length", "of", "data", "if", "its", "not", "fully", "loaded", "last", "example", "from", "NUMBER", "has", "worked", "well", "for", "me", "NUMBER", "Why", "not", "to", "implement", "this", "gm", "NUMBER", "crop", "NUMBER", "NUMBER", "buffer", "function", "err", "buffer", "buffer", "instanceof", "Buffer", "client", "NUMBER", "putBuffer", "buffer", "NUMBER", "just", "seems", "like", "more", "of", "a", "buffered", "streams", "problem", "vs", "gm", "NUMBER", "helper", "libs", "probably", "already", "exist", "tho", "i", "haven", "t", "checked", "do", "you", "see", "any", "reasons", "not", "to", "implement", "it", "in", "gm", "this", "be", "actually", "everything", "what", "I", "need", "and", "probably", "every", "one", "who", "be", "use", "S", "NUMBER", "and", "don", "t", "want", "to", "write", "file", "to", "the", "disk", "before", "uploading", "them", "proto", "NUMBER", "buffer", "function", "callback", "this", "NUMBER", "ream", "function", "err", "stdout", "if", "err", "return", "callback", "err", "var", "buf", "stdout", "NUMBER", "on", "data", "function", "data", "buf", "data", "NUMBER", "toString", "binary", "NUMBER", "on", "end", "function", "callback", "null", "new", "Buffer", "buf", "binary", "this", "be", "really", "not", "solving", "a", "gm", "issue", "but", "one", "with", "node", "streams", "in", "general", "NUMBER", "while", "the", "solution", "be", "great", "i", "m", "not", "going", "to", "put", "it", "into", "gm", "NUMBER", "a", "good", "alternative", "be", "publishing", "your", "own", "module", "as", "a", "plugin", "that", "extend", "gm", "LINK", "gm", "NUMBER", "all", "right", "will", "publish", "a", "plugin", "NUMBER", "excellent", "maybe", "add", "it", "to", "the", "wiki", "or", "smth", "when", "complete", "NUMBER", "Plugin", "do", "add", "to", "the", "wiki", "page", "prbobably", "better", "to", "add", "it", "to", "the", "readme", "NUMBER", "md", "LINK", "This", "be", "a", "problem", "of", "write", "extensions", "directly", "on", "the", "main", "prototype", "just", "find", "that", "proto", "NUMBER", "buffer", "be", "use", "in", "proto", "NUMBER", "_spawn", "NUMBER", "Any", "chance", "to", "rename", "buffer", "to", "_buffer", "as", "it", "seems", "to", "be", "an", "internal", "property", "ok", "NUMBER", "gm", "identify", "verbose", "can", "be", "extremely", "slow", "when", "dealing", "with", "large", "file", "NUMBER", "It", "should", "not", "be", "add", "as", "an", "option", "when", "not", "required", "size", "etc", "NUMBER", "Example", "from", "a", "NUMBER", "MB", "image", "time", "gm", "identify", "verbose", "tmp", "x", "NUMBER", "real", "NUMBER", "m", "NUMBER", "s", "user", "NUMBER", "m", "NUMBER", "s", "sys", "NUMBER", "m", "NUMBER", "s", "time", "gm", "identify", "tmp", "x", "tmp", "x", "JPEG", "NUMBER", "x", "NUMBER", "NUMBER", "NUMBER", "DirectClass", "NUMBER", "bit", "NUMBER", "M", "NUMBER", "u", "NUMBER", "NUMBER", "real", "NUMBER", "m", "NUMBER", "s", "user", "NUMBER", "m", "NUMBER", "s", "sys", "NUMBER", "m", "NUMBER", "s", "pull", "request", "should", "be", "an", "easy", "one", "NUMBER", "Cool", "Thanks", "for", "fix", "this", "It", "should", "make", "autoOrient", "faster", "too", "right", "Bummer", "NUMBER", "Oh", "well", "NUMBER", "the", "format", "method", "be", "taking", "NUMBER", "NUMBER", "seconds", "for", "larger", "images", "NUMBER", "Is", "there", "anyway", "to", "speed", "this", "up", "Or", "be", "the", "code", "taking", "extra", "time", "to", "validate", "the", "image", "format", "My", "app", "support", "only", "gifs", "jpegs", "and", "pngs", "but", "I", "know", "from", "experience", "users", "will", "sometimes", "just", "rename", "file", "to", "another", "extension", "and", "upload", "again", "and", "or", "upload", "garbage", "or", "malicious", "data", "NUMBER", "Just", "curious", "to", "know", "if", "this", "amount", "of", "time", "be", "expected", "NUMBER", "The", "image", "be", "NUMBER", "x", "NUMBER", "jpeg", "approx", "NUMBER", "mb", "NUMBER", "Further", "info", "it", "do", "not", "seem", "to", "matter", "even", "if", "extension", "be", "on", "the", "file", "NUMBER", "Previously", "there", "was", "no", "extension", "and", "I", "thought", "perhaps", "the", "code", "might", "use", "extension", "as", "a", "clue", "to", "try", "and", "check", "that", "format", "first", "NUMBER", "i", "find", "the", "same", "behavior", "when", "run", "graphicsmagick", "directly", "NUMBER", "i", "don", "t", "know", "of", "any", "way", "to", "speed", "that", "up", "It", "looks", "as", "if", "this", "be", "how", "one", "would", "use", "the", "utilities", "such", "as", "compose", "montage", "etc", "NUMBER", "I", "cannot", "find", "any", "examples", "and", "it", "wast", "t", "quite", "obvious", "from", "your", "documentation", "NUMBER", "Thanks", "for", "link", "the", "pull", "request", "NUMBER", "It", "was", "helpful", "Please", "excuse", "my", "brevity", "message", "sent", "from", "a", "mobile", "device", "NUMBER", "On", "Aug", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "Aaron", "Heckmann", "notifications", "github", "NUMBER", "com", "write", "honestly", "i", "haven", "t", "use", "it", "either", "was", "a", "community", "contribution", "NUMBER", "its", "just", "switching", "out", "convert", "for", "whatever", "you", "pass", "NUMBER", "LINK", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "NUMBER", "This", "be", "a", "really", "simple", "cosmetic", "change", "that", "causes", "gm", "to", "ask", "Have", "you", "install", "imageMagick", "instead", "of", "have", "you", "install", "graphicsmagick", "when", "you", "get", "an", "error", "in", "imageMagick", "mode", "NUMBER", "Doing", "it", "this", "way", "will", "save", "developers", "time", "debugging", "their", "team", "s", "apps", "that", "use", "gm", "for", "imagemagick", "not", "for", "graphicsmagick", "NUMBER", "This", "pull", "request", "fail", "LINK", "ci", "NUMBER", "org", "aheckmann", "gm", "build", "NUMBER", "merge", "NUMBER", "b", "NUMBER", "into", "NUMBER", "f", "NUMBER", "I", "m", "use", "gm", "to", "downsample", "and", "crop", "images", "and", "be", "seeing", "this", "error", "fairly", "regularly", "about", "NUMBER", "of", "request", "NUMBER", "Making", "the", "same", "call", "a", "second", "time", "works", "just", "fine", "so", "it", "doesn", "t", "appear", "to", "be", "a", "problem", "with", "the", "inputs", "NUMBER", "I", "realize", "it", "s", "internal", "to", "graphicsmagick", "but", "was", "hoping", "you", "might", "have", "some", "insight", "into", "what", "might", "be", "cause", "the", "issue", "and", "ways", "to", "alleviate", "the", "problem", "NUMBER", "Think", "we", "tracked", "down", "the", "issue", "NUMBER", "From", "someone", "more", "knowledgable", "than", "I", "One", "of", "the", "steps", "required", "to", "daemonify", "a", "process", "be", "to", "disassociate", "it", "from", "its", "controlling", "terminal", "NUMBER", "To", "do", "this", "FDs", "NUMBER", "stdin", "NUMBER", "stdout", "and", "NUMBER", "stderr", "be", "all", "close", "NUMBER", "Output", "file", "descriptors", "may", "then", "be", "reopened", "to", "write", "to", "log", "file", "and", "stdin", "be", "usually", "reopened", "to", "dev", "null", "NUMBER", "This", "has", "an", "unfortunate", "side", "effect", "with", "node", "NUMBER", "which", "be", "that", "node", "will", "attempt", "to", "read", "from", "stdin", "NUMBER", "This", "read", "will", "receive", "EOF", "and", "in", "responde", "node", "will", "close", "stdin", "NUMBER", "Attempting", "to", "fork", "with", "stdin", "close", "behaves", "badly", "as", "describe", "in", "issue", "LINK", "Similar", "behaviors", "have", "be", "observed", "if", "any", "of", "stdout", "or", "stderr", "be", "close", "at", "the", "time", "fork", "be", "call", "NUMBER", "This", "patch", "ensures", "that", "all", "of", "FD", "NUMBER", "NUMBER", "and", "NUMBER", "be", "occupied", "by", "open", "file", "handles", "immediately", "before", "calling", "fork", "so", "the", "assumptions", "fork", "relies", "on", "be", "true", "NUMBER", "We", "re", "trying", "a", "patch", "in", "a", "fork", "NUMBER", "Would", "you", "accept", "a", "PR", "I", "d", "understand", "if", "you", "d", "rather", "not", "since", "it", "s", "fix", "in", "node", "v", "NUMBER", "closing", "node", "issue", "I", "m", "trying", "to", "scale", "an", "image", "in", "place", "NUMBER", "Is", "there", "any", "way", "to", "do", "something", "equivalent", "to", "gm", "mogrify", "size", "NUMBER", "x", "NUMBER", "my", "image", "NUMBER", "jpg", "resize", "NUMBER", "x", "NUMBER", "I", "be", "not", "sure", "what", "happens", "here", "but", "really", "weird", "NUMBER", "Node", "v", "NUMBER", "on", "Mac", "unfortunately", "can", "not", "determine", "if", "I", "run", "GraphicsMagick", "or", "ImageMagick", "Code", "var", "gm", "require", "gm", "gm", "__dirname", "data", "img", "icons", "favicon", "NUMBER", "png", "NUMBER", "size", "function", "err", "size", "console", "NUMBER", "log", "size", "gm", "__dirname", "data", "img", "icons", "favicon", "NUMBER", "png", "NUMBER", "size", "function", "err", "size", "console", "NUMBER", "log", "size", "gm", "__dirname", "data", "img", "loading", "NUMBER", "gif", "NUMBER", "size", "function", "err", "size", "console", "NUMBER", "log", "size", "gm", "__dirname", "data", "img", "loading", "NUMBER", "gif", "NUMBER", "size", "function", "err", "size", "console", "NUMBER", "log", "size", "Images", "can", "be", "find", "here", "LINK", "LINK", "Output", "node", "test", "NUMBER", "js", "good", "output", "width", "NUMBER", "height", "NUMBER", "width", "NUMBER", "height", "NUMBER", "width", "NUMBER", "height", "NUMBER", "width", "NUMBER", "height", "NUMBER", "node", "test", "NUMBER", "js", "width", "NUMBER", "height", "NUMBER", "undefined", "width", "NUMBER", "height", "NUMBER", "width", "NUMBER", "height", "NUMBER", "node", "test", "NUMBER", "js", "width", "NUMBER", "height", "NUMBER", "undefined", "width", "NUMBER", "height", "NUMBER", "width", "NUMBER", "height", "NUMBER", "node", "test", "NUMBER", "js", "width", "NUMBER", "height", "NUMBER", "undefined", "width", "NUMBER", "height", "NUMBER", "width", "NUMBER", "height", "NUMBER", "When", "I", "run", "the", "test", "not", "this", "simple", "one", "in", "node", "v", "NUMBER", "all", "were", "pass", "but", "now", "they", "be", "randomly", "fail", "Yes", "I", "just", "run", "on", "Ubuntu", "server", "since", "my", "mac", "didn", "t", "keep", "the", "old", "node", "version", "To", "make", "it", "more", "extrem", "I", "run", "a", "loop", "NUMBER", "times", "on", "the", "given", "code", "v", "NUMBER", "succeded", "all", "of", "them", "v", "NUMBER", "wrong", "most", "of", "them", "undefined", "or", "sometimes", "wrong", "dimension", "Look", "like", "that", "it", "be", "something", "wrong", "with", "the", "file", "descriptor", "NUMBER", "for", "stdout", "of", "child", "process", "in", "spawn", "NUMBER", "If", "share", "with", "parent", "s", "ie", "process", "NUMBER", "dout", "it", "works", "fine", "but", "output", "a", "lot", "of", "thing", "on", "the", "parent", "s", "stdout", "D", "If", "you", "use", "exec", "it", "works", "fine", "but", "I", "guess", "that", "you", "can", "not", "pipe", "to", "sourceStream", "edit", "no", "share", "of", "parent", "s", "stdout", "be", "not", "work", "thanks", "look", "like", "that", "the", "problem", "disappeared", "in", "Mac", "node", "v", "NUMBER", "upgrade", "since", "last", "time", "GraphicsMagick", "NUMBER", "I", "still", "have", "the", "same", "problem", "in", "ubuntu", "node", "v", "NUMBER", "just", "upgrade", "from", "v", "NUMBER", "GraphicsMagick", "NUMBER", "However", "the", "module", "I", "write", "only", "use", "size", "so", "I", "decided", "to", "remove", "gm", "dependency", "and", "run", "the", "command", "for", "those", "value", "instead", "NUMBER", "Hi", "Is", "there", "any", "way", "to", "convert", "svg", "file", "into", "other", "formats", "ex", "NUMBER", "png", "jpg", "use", "gm", "Any", "help", "would", "be", "greatly", "appreciated", "NUMBER", "Thanks", "Thanks", "it", "works", "for", "me", "NUMBER", "How", "did", "you", "solve", "this", "I", "m", "trying", "use", "the", "code", "below", "but", "seems", "to", "need", "the", "size", "of", "svg", "javascript", "gm", "require", "gm", "gm", "fontawesome", "webfont", "NUMBER", "svg", "NUMBER", "write", "fontawesome", "webfont", "NUMBER", "png", "function", "err", "if", "err", "console", "NUMBER", "log", "image", "converted", "NUMBER", "rodrigopandini", "You", "need", "to", "specify", "the", "size", "in", "the", "svg", "tag", "such", "as", "TAG", "TAG", "Currently", "gm", "NUMBER", "ream", "will", "hang", "and", "the", "following", "error", "be", "report", "Error", "write", "EPIPE", "at", "errnoException", "net", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Object", "NUMBER", "afterWrite", "as", "oncomplete", "net", "NUMBER", "js", "NUMBER", "NUMBER", "It", "would", "be", "nice", "if", "the", "error", "be", "detected", "and", "an", "informative", "error", "returned", "to", "any", "callbacks", "NUMBER", "Sure", "thing", "NUMBER", "Given", "the", "following", "code", "var", "url", "require", "url", "var", "http", "require", "http", "var", "gm", "require", "gm", "http", "NUMBER", "get", "url", "NUMBER", "parse", "LINK", "function", "resp", "gm", "resp", "logo", "NUMBER", "w", "NUMBER", "png", "NUMBER", "ream", "function", "err", "stdout", "stderr", "if", "err", "console", "NUMBER", "error", "Error", "processing", "image", "err", "else", "stdout", "NUMBER", "on", "data", "function", "chunk", "console", "NUMBER", "log", "Chunk", "recieved", "chunk", "NUMBER", "length", "stdout", "NUMBER", "on", "end", "function", "console", "NUMBER", "log", "Stream", "ended", "NUMBER", "on", "error", "function", "err", "console", "NUMBER", "error", "Error", "fetching", "image", "err", "With", "graphicsmagick", "install", "node", "gm", "test", "NUMBER", "js", "Chunk", "recieved", "NUMBER", "Stream", "ended", "If", "gm", "be", "not", "install", "I", "would", "expect", "node", "gm", "test", "NUMBER", "js", "Error", "processing", "image", "Error", "graphicsmagick", "not", "available", "NUMBER", "at", "some", "nice", "stack", "trace", "What", "actually", "happens", "if", "gm", "be", "not", "install", "node", "NUMBER", "js", "NUMBER", "throw", "e", "process", "NUMBER", "nextTick", "error", "or", "error", "event", "on", "first", "tick", "Error", "write", "EPIPE", "at", "errnoException", "net", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Object", "NUMBER", "afterWrite", "as", "oncomplete", "net", "NUMBER", "js", "NUMBER", "NUMBER", "Note", "none", "of", "the", "error", "callbacks", "be", "call", "NUMBER", "Thanks", "for", "looking", "NUMBER", "If", "I", "have", "a", "stream", "that", "be", "paused", "pass", "it", "to", "gm", "then", "resume", "it", "stream", "gives", "an", "error", "js", "var", "gm", "require", "gm", "var", "fs", "require", "fs", "var", "pause", "require", "connect", "NUMBER", "utils", "NUMBER", "pause", "var", "source", "fs", "NUMBER", "createReadStream", "img", "NUMBER", "png", "var", "pauser", "pause", "source", "setTimeout", "function", "gm", "source", "img", "NUMBER", "png", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "ream", "png", "function", "err", "stdout", "stderr", "if", "err", "console", "NUMBER", "log", "err", "err", "process", "NUMBER", "exit", "NUMBER", "else", "stdout", "NUMBER", "pipe", "process", "NUMBER", "dout", "stderr", "NUMBER", "pipe", "process", "NUMBER", "derr", "pauser", "NUMBER", "resume", "NUMBER", "bash", "node", "test", "NUMBER", "js", "err", "Error", "gm", "NUMBER", "ream", "or", "gm", "NUMBER", "write", "with", "a", "non", "readable", "stream", "NUMBER", "Pass", "bufferStream", "true", "to", "identify", "or", "getter", "size", "format", "etc", "NUMBER", "The", "problem", "be", "that", "the", "stream", "do", "indeed", "have", "readable", "false", "since", "it", "s", "already", "emitted", "all", "its", "events", "which", "be", "caught", "by", "connect", "and", "stored", "in", "the", "_events", "property", "to", "be", "re", "emitted", "later", "when", "I", "call", "pauser", "NUMBER", "resume", "NUMBER", "So", "I", "guess", "it", "s", "partially", "connect", "s", "fault", "since", "usually", "you", "can", "assume", "that", "non", "readable", "streams", "will", "not", "emit", "any", "more", "events", "NUMBER", "But", "a", "solution", "be", "kind", "of", "necessary", "since", "there", "s", "otherwise", "no", "way", "to", "defer", "streaming", "image", "processing", "until", "after", "an", "asynchronous", "event", "e", "NUMBER", "g", "NUMBER", "user", "authorization", "has", "occur", "NUMBER", "Note", "that", "the", "native", "stream", "s", "pause", "method", "do", "not", "work", "LINK", "stream_stream_pause", "on", "HTTP", "streams", "data", "events", "get", "drop", "necessitating", "something", "like", "connect", "s", "custom", "pause", "function", "NUMBER", "Not", "sure", "what", "a", "good", "solution", "be", "here", "NUMBER", "For", "now", "I", "ve", "hacked", "around", "it", "by", "inserting", "source", "NUMBER", "readable", "true", "before", "calling", "gm", "NUMBER", "cc", "visionmedia", "for", "any", "connect", "relate", "advice", "isaacs", "since", "this", "be", "an", "interesting", "case", "of", "unfuck", "HTTP", "LINK", "I", "think", "req", "NUMBER", "pause", "actually", "works", "now", "I", "d", "like", "to", "remove", "that", "pause", "util", "req", "NUMBER", "pause", "definitely", "doesn", "t", "work", "it", "still", "drops", "data", "events", "NUMBER", "Making", "it", "work", "be", "on", "the", "table", "for", "NUMBER", "though", "I", "m", "told", "NUMBER", "oh", "NUMBER", "Add", "methods", "NUMBER", "ok", "NUMBER", "As", "soon", "as", "I", "have", "time", "I", "will", "add", "some", "test", "update", "the", "README", "and", "the", "branch", "docs", "NUMBER", "Hi", "I", "tried", "to", "resize", "image", "with", "gm", "but", "I", "get", "this", "error", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "INFO", "console", "Error", "Command", "fail", "CreateProcessW", "The", "system", "cannot", "find", "the", "file", "specified", "NUMBER", "at", "ChildProcess", "NUMBER", "TAG", "C", "Users", "user", "NUMBER", "workspace", "inbrush", "node_modules", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "emit", "events", "NUMBER", "js", "NUMBER", "NUMBER", "at", "maybeExit", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Socket", "NUMBER", "TAG", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Socket", "NUMBER", "emit", "events", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Array", "NUMBER", "net", "NUMBER", "js", "NUMBER", "NUMBER", "at", "EventEmitter", "NUMBER", "_tickCallback", "node", "NUMBER", "js", "NUMBER", "NUMBER", "I", "be", "use", "node", "v", "NUMBER", "on", "windows", "NUMBER", "and", "this", "be", "my", "code", "var", "gm", "require", "gm", "gm", "C", "Users", "user", "NUMBER", "default", "NUMBER", "jpg", "NUMBER", "resize", "NUMBER", "NUMBER", "NUMBER", "noProfile", "NUMBER", "write", "C", "Users", "user", "NUMBER", "resized", "NUMBER", "jpg", "function", "err", "if", "err", "console", "NUMBER", "log", "do", "else", "console", "NUMBER", "log", "err", "Could", "anyone", "help", "me", "to", "fix", "this", "problem", "Thanks", "NUMBER", "the", "file", "exists", "and", "I", "use", "npm", "install", "gm", "to", "install", "graphicsmagick", "I", "have", "the", "same", "problem", "run", "gm", "on", "Windows", "NUMBER", "not", "sure", "why", "NUMBER", "I", "also", "tried", "all", "the", "sample", "code", "in", "Readme", "NUMBER", "it", "works", "now", "this", "be", "really", "wonderful", "to", "me", "thank", "you", "so", "much", "D", "Hi", "I", "think", "the", "gm", "module", "should", "throw", "an", "error", "if", "graphicmagick", "be", "not", "install", "on", "the", "system", "NUMBER", "It", "should", "atleast", "say", "that", "Install", "graphicmagick", "or", "switch", "to", "Imagemagick", "NUMBER", "Right", "now", "it", "just", "throw", "a", "cryptic", "error", "with", "a", "error", "code", "which", "on", "Googling", "translates", "into", "Command", "not", "find", "NUMBER", "Thanks", "I", "add", "a", "align", "variable", "to", "the", "thumb", "function", "NUMBER", "You", "can", "now", "say", "center", "or", "topleft", "NUMBER", "Topleft", "be", "the", "standard", "with", "NUMBER", "NUMBER", "offset", "NUMBER", "Also", "I", "made", "the", "images", "of", "same", "height", "width", "crop", "correctly", "NUMBER", "Error", "Command", "fail", "gm", "convert", "Unable", "to", "open", "file", "NUMBER", "No", "such", "file", "or", "directory", "NUMBER", "It", "looks", "like", "the", "factor", "be", "get", "pass", "in", "as", "a", "filename", "or", "something", "NUMBER", "gm", "mycoolfile", "NUMBER", "jpg", "NUMBER", "minify", "NUMBER", "write", "function", "err", "p", "Thanks", "I", "install", "gm", "on", "windows", "with", "npm", "NUMBER", "When", "I", "run", "the", "thumb", "example", "I", "get", "the", "Error", "Command", "fail", "CreateProcessW", "xxxxx", "and", "code", "NUMBER", "signal", "null", "Dose", "gm", "support", "in", "windows", "Yes", "I", "has", "install", "NUMBER", "Is", "there", "another", "configuration", "Great", "This", "be", "my", "carelessness", "cause", "sorry", "NUMBER", "First", "I", "forgot", "install", "GraphicsMagick", "on", "windows", "Second", "I", "don", "t", "update", "executable", "search", "path", "when", "finished", "install", "NUMBER", "Now", "it", "work", "good", "thanks", "Update", "strip", "method", "graphicMagick", "support", "NUMBER", "Add", "background", "foreground", "flatten", "compose", "filter", "gravity", "and", "extent", "methods", "NUMBER", "Add", "nice", "and", "ionice", "support", "NUMBER", "An", "image", "seems", "to", "mess", "up", "the", "stdout", "parsing", "of", "gm", "NUMBER", "The", "offending", "line", "be", "NUMBER", "Here", "s", "a", "copy", "of", "the", "image", "and", "test", "LINK", "_crash_test", "NUMBER", "zip", "and", "here", "s", "a", "snippet", "from", "the", "trace", "TypeError", "Cannot", "set", "property", "of", "undefined", "Identify", "stdout", "Image", "Users", "chris", "img", "NUMBER", "jpg", "Format", "JPEG", "Joint", "Photographic", "Experts", "Group", "JFIF", "format", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "unknown", "Profile", "EXIF", "NUMBER", "bytes", "Make", "Canon", "Model", "Canon", "EOS", "NUMBER", "D", "NUMBER", "Tainted", "False", "User", "Time", "NUMBER", "u", "Elapsed", "Time", "NUMBER", "NUMBER", "Pixels", "Per", "Second", "NUMBER", "M", "at", "ChildProcess", "NUMBER", "TAG", "Users", "chris", "node_modules", "gm", "lib", "getters", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "TAG", "Users", "chris", "node_modules", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "emit", "events", "NUMBER", "js", "NUMBER", "NUMBER", "at", "maybeExit", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Process", "NUMBER", "onexit", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "Great", "thanks", "Adds", "a", "background", "method", "to", "work", "with", "relate", "operations", "such", "as", "extent", "and", "rotate", "NUMBER", "Helps", "on", "issue", "NUMBER", "Includes", "a", "layered", "PSD", "example", "and", "test", "NUMBER", "Should", "help", "issue", "NUMBER", "I", "wasn", "t", "sure", "if", "you", "d", "dig", "having", "the", "PSD", "in", "the", "repo", "or", "not", "NUMBER", "I", "m", "not", "sure", "what", "else", "flatten", "be", "good", "for", "NUMBER", "I", "imagine", "there", "be", "a", "few", "image", "formats", "that", "have", "layers", "it", "can", "smush", "NUMBER", "Safe", "travels", "NUMBER", "Looks", "like", "you", "run", "into", "my", "friend", "and", "former", "co", "worker", "Steve", "Agalloco", "anno", "down", "in", "Charlotte", "NUMBER", "Small", "world", "This", "be", "actually", "exactly", "what", "I", "m", "looking", "for", "with", "my", "prior", "issue", "NUMBER", "Thanks", "so", "much", "NUMBER", "I", "m", "trying", "to", "run", "a", "command", "equivalent", "to", "convert", "Foo", "NUMBER", "psd", "flatten", "Foo", "NUMBER", "jpg", "Is", "there", "any", "way", "as", "of", "right", "now", "to", "get", "this", "flatten", "work", "If", "not", "where", "can", "I", "start", "poking", "around", "to", "add", "it", "aheckmann", "this", "issue", "can", "be", "close", "now", "NUMBER", "This", "should", "be", "approximately", "good", "enough", "to", "merge", "in", "NUMBER", "It", "follows", "the", "pattern", "of", "the", "recent", "additions", "and", "the", "exist", "resize", "function", "NUMBER", "Please", "let", "me", "know", "what", "you", "think", "NUMBER", "Is", "it", "possible", "to", "pad", "out", "the", "thumbnail", "Like", "shown", "here", "LINK", "pad", "I", "ve", "created", "a", "pull", "request", "with", "the", "function", "needed", "to", "do", "this", "add", "NUMBER", "NUMBER", "Just", "need", "aheckmann", "to", "take", "a", "look", "and", "merge", "if", "appropriate", "NUMBER", "Not", "sure", "about", "the", "background", "part", "but", "these", "be", "enough", "to", "do", "the", "padding", "and", "centering", "NUMBER", "That", "s", "awesome", "Please", "don", "t", "merge", "this", "yet", "it", "s", "a", "starting", "point", "not", "the", "final", "pull", "req", "NUMBER", "In", "relation", "to", "issue", "NUMBER", "I", "have", "a", "need", "for", "compositing", "in", "node", "with", "GM", "NUMBER", "Specifically", "I", "need", "to", "underlay", "a", "white", "background", "on", "transparent", "images", "and", "to", "composite", "some", "other", "images", "together", "to", "make", "graphics", "NUMBER", "I", "ve", "get", "ruby", "code", "use", "IM", "that", "do", "this", "but", "we", "re", "porting", "the", "work", "to", "a", "new", "system", "in", "node", "and", "GM", "so", "we", "ve", "get", "this", "itch", "to", "scratch", "NUMBER", "I", "want", "to", "ultimately", "write", "a", "full", "featured", "composite", "command", "that", "takes", "all", "the", "args", "and", "options", "GM", "provides", "LINK", "NUMBER", "But", "before", "I", "get", "to", "the", "details", "I", "need", "to", "make", "sure", "I", "m", "even", "on", "the", "right", "track", "with", "how", "i", "ve", "do", "this", "NUMBER", "Please", "have", "a", "look", "and", "provide", "feedback", "so", "I", "can", "continue", "or", "change", "course", "NUMBER", "Thank", "you", "for", "publishing", "this", "awesome", "library", "Aaron", "The", "getterIdentify", "NUMBER", "js", "test", "be", "fail", "for", "me", "on", "line", "NUMBER", "due", "to", "what", "be", "perhaps", "a", "floating", "point", "rounding", "difference", "NUMBER", "Here", "be", "the", "output", "Jubilee", "gm", "master", "make", "test", "The", "sys", "module", "be", "now", "call", "util", "NUMBER", "It", "should", "have", "a", "similar", "interface", "NUMBER", "node", "NUMBER", "js", "NUMBER", "throw", "e", "process", "NUMBER", "nextTick", "error", "or", "error", "event", "on", "first", "tick", "AssertionError", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "at", "gm", "NUMBER", "TAG", "Users", "joshua", "Working", "libraries", "gm", "test", "getterIdentify", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "TAG", "Users", "joshua", "Working", "libraries", "gm", "lib", "getters", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "TAG", "Users", "joshua", "Working", "libraries", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "emit", "events", "NUMBER", "js", "NUMBER", "NUMBER", "at", "maybeExit", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Socket", "NUMBER", "TAG", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Socket", "NUMBER", "emit", "events", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Array", "NUMBER", "net", "NUMBER", "js", "NUMBER", "NUMBER", "at", "EventEmitter", "NUMBER", "_tickCallback", "node", "NUMBER", "js", "NUMBER", "NUMBER", "make", "test", "Error", "NUMBER", "This", "be", "on", "Node", "v", "NUMBER", "Is", "anyone", "else", "having", "issue", "like", "this", "with", "the", "test", "suite", "As", "a", "new", "contributor", "I", "couldn", "t", "figure", "out", "how", "to", "run", "the", "test", "npm", "test", "or", "make", "test", "fail", "NUMBER", "I", "m", "not", "sure", "if", "it", "s", "because", "the", "test", "themselves", "be", "not", "passing", "or", "if", "there", "be", "an", "extra", "step", "needed", "to", "get", "the", "test", "suite", "run", "that", "I", "did", "not", "complete", "NUMBER", "It", "would", "be", "nice", "to", "document", "that", "on", "the", "README", "so", "that", "new", "contributors", "can", "run", "the", "test", "suite", "NUMBER", "Here", "be", "the", "error", "NUMBER", "I", "m", "run", "node", "version", "NUMBER", "on", "Mac", "OS", "X", "Lion", "NUMBER", "node", "NUMBER", "js", "NUMBER", "throw", "e", "process", "NUMBER", "nextTick", "error", "or", "error", "event", "on", "first", "tick", "Error", "spawn", "EMFILE", "at", "errnoException", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "spawn", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "gm", "NUMBER", "_spawn", "Users", "luc", "code", "workspace", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Users", "luc", "code", "workspace", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "gm", "NUMBER", "_preprocess", "Users", "luc", "code", "workspace", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "gm", "NUMBER", "write", "Users", "luc", "code", "workspace", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Users", "luc", "code", "workspace", "gm", "test", "lower", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Users", "luc", "code", "workspace", "gm", "test", "index", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Array", "NUMBER", "forEach", "native", "make", "test", "Error", "NUMBER", "Turns", "out", "it", "was", "a", "ulimit", "issue", "and", "I", "fix", "it", "by", "setting", "ulimit", "n", "NUMBER", "In", "GraphicsMagic", "when", "use", "resize", "we", "can", "pass", "only", "a", "width", "or", "only", "a", "height", "NUMBER", "From", "their", "documentation", "If", "only", "the", "width", "be", "specified", "the", "width", "assumes", "the", "value", "and", "the", "height", "be", "chosen", "to", "maintain", "the", "aspect", "ratio", "of", "the", "image", "NUMBER", "Similarly", "if", "only", "the", "height", "be", "specified", "e", "NUMBER", "g", "NUMBER", "geometry", "x", "NUMBER", "the", "width", "be", "chosen", "to", "maintain", "the", "aspect", "ratio", "NUMBER", "I", "modify", "the", "code", "to", "accept", "only", "a", "width", "or", "only", "a", "height", "on", "a", "resize", "NUMBER", "I", "ve", "test", "manually", "but", "could", "not", "figure", "out", "how", "to", "run", "your", "test", "suite", "so", "I", "did", "not", "add", "a", "test", "for", "it", "NUMBER", "make", "test", "was", "fail", "for", "me", "before", "I", "made", "my", "change", "NUMBER", "It", "was", "the", "same", "ulimit", "error", "from", "the", "issue", "we", "discussed", "yesterday", "NUMBER", "This", "could", "be", "add", "to", "the", "documentation", "as", "I", "couldn", "t", "find", "anything", "about", "maintaining", "aspect", "ratio", "or", "only", "passing", "width", "height", "into", "resize", "NUMBER", "Also", "it", "d", "be", "helpful", "to", "add", "a", "note", "that", "if", "you", "want", "to", "resize", "an", "image", "so", "it", "s", "width", "be", "always", "NUMBER", "px", "do", "something", "like", "NUMBER", "resize", "NUMBER", "NUMBER", "Error", "spawn", "EMFILE", "at", "errnoException", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "spawn", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "gm", "NUMBER", "_spawn", "Users", "myusername", "node_modules", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "gm", "NUMBER", "_exec", "Users", "myusername", "node_modules", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "gm", "NUMBER", "identify", "Users", "myusername", "node_modules", "gm", "lib", "getters", "NUMBER", "js", "NUMBER", "NUMBER", "at", "gm", "NUMBER", "size", "Users", "myusername", "node_modules", "gm", "lib", "getters", "NUMBER", "js", "NUMBER", "NUMBER", "NUMBER", "attempted", "to", "walk", "a", "directory", "get", "image", "sizes", "for", "each", "image", "encountered", "NUMBER", "Node", "NUMBER", "OS", "mac", "osx", "NUMBER", "I", "tried", "directly", "calling", "gm", "TAG", "NUMBER", "size", "function", "e", "v", "NUMBER", "on", "the", "last", "file", "in", "the", "list", "before", "the", "error", "and", "it", "worked", "fine", "NUMBER", "I", "created", "an", "array", "literal", "containing", "the", "NUMBER", "image", "filenames", "logged", "to", "the", "console", "leading", "up", "to", "the", "error", "and", "iterating", "over", "just", "them", "NUMBER", "Same", "result", "NUMBER", "But", "as", "soon", "as", "I", "remove", "_any", "one_", "of", "them", "from", "the", "array", "everything", "was", "ok", "NUMBER", "They", "be", "in", "parallel", "NUMBER", "Is", "there", "a", "gm", "TAG", "NUMBER", "sizeSync", "function", "I", "could", "use", "instead", "After", "a", "tiny", "bit", "of", "research", "I", "find", "something", "like", "that", "also", "try", "increasing", "the", "filehandle", "limit", "NUMBER", "It", "didn", "t", "make", "any", "difference", "NUMBER", "I", "was", "just", "about", "to", "post", "a", "followup", "to", "my", "issue", "report", "NUMBER", "I", "ended", "up", "chunking", "the", "result", "set", "so", "that", "gm", "javascript", "filesystem", "had", "time", "to", "release", "the", "handles", "NUMBER", "assume", "an", "array", "of", "filenames", "fileList", "var", "chunkSize", "NUMBER", "NUMBER", "was", "too", "many", "NUMBER", "Choked", "every", "time", "at", "NUMBER", "or", "NUMBER", "function", "loop", "i", "var", "filename", "fileList", "i", "console", "NUMBER", "log", "processing", "NUMBER", "filename", "gm", "filename", "NUMBER", "size", "function", "err", "value", "note", "value", "may", "be", "undefined", "if", "value", "console", "NUMBER", "log", "value", "filename", "else", "console", "NUMBER", "log", "error", "err", "i", "if", "i", "fileList", "NUMBER", "length", "return", "we", "re", "do", "NUMBER", "if", "i", "chunksize", "NUMBER", "setTimeout", "function", "loop", "i", "NUMBER", "else", "loop", "i", "NUMBER", "We", "shouldn", "t", "have", "to", "chunk", "NUMBER", "I", "still", "consider", "this", "an", "issue", "I", "needed", "these", "function", "and", "they", "seem", "like", "pretty", "simple", "things", "to", "add", "to", "gm", "since", "they", "re", "already", "there", "in", "GraphicsMagick", "NUMBER", "Let", "me", "know", "if", "I", "m", "miss", "something", "NUMBER", "Travis", "it", "doesn", "t", "merge", "Can", "you", "merge", "the", "latest", "in", "master", "That", "should", "do", "the", "trick", "NUMBER", "Did", "it", "works", "now", "I", "m", "new", "to", "git", "NUMBER", "Hi", "I", "saved", "this", "file", "to", "my", "hard", "drive", "LINK", "When", "I", "run", "this", "code", "gm", "tmp_path", "NUMBER", "identify", "function", "err", "data", "console", "NUMBER", "log", "data", "I", "get", "this", "error", "TypeError", "Cannot", "set", "property", "Image", "of", "undefined", "TypeError", "Cannot", "set", "property", "Image", "of", "undefined", "at", "ChildProcess", "NUMBER", "TAG", "home", "user", "abc", "src", "node_modules", "gm", "lib", "getters", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "TAG", "home", "user", "abc", "src", "node_modules", "gm", "lib", "command", "NUMBER", "js", "NUMBER", "NUMBER", "at", "ChildProcess", "NUMBER", "emit", "events", "NUMBER", "js", "NUMBER", "NUMBER", "at", "maybeExit", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "at", "Process", "NUMBER", "onexit", "child_process", "NUMBER", "js", "NUMBER", "NUMBER", "I", "just", "want", "to", "determine", "if", "a", "file", "be", "animated", "gif", "or", "not", "I", "don", "t", "necessarily", "need", "to", "perform", "any", "operations", "on", "that", "image", "NUMBER", "thanks", "Actually", "I", "update", "to", "NUMBER", "and", "everything", "seems", "fine", "Before", "I", "was", "at", "NUMBER", "The", "parser", "for", "the", "identify", "output", "in", "getters", "NUMBER", "js", "gathers", "all", "the", "key", "value", "pairs", "after", "the", "Image", "header", "but", "do", "not", "handle", "gathering", "the", "output", "for", "multiple", "images", "NUMBER", "I", "ve", "patched", "on", "my", "branch", "to", "make", "this", "return", "the", "output", "from", "the", "first", "image", "because", "the", "first", "image", "in", "the", "series", "contains", "the", "correct", "canvas", "size", "NUMBER", "I", "can", "either", "issue", "a", "pull", "request", "for", "this", "work", "around", "or", "I", "can", "make", "the", "parser", "gather", "the", "output", "for", "multiple", "images", "or", "something", "else", "NUMBER", "thoughts", "Yeah", "that", "makes", "the", "most", "sense", "NUMBER", "I", "haven", "t", "had", "a", "chance", "to", "dig", "through", "the", "internet", "to", "find", "how", "one", "would", "expect", "to", "do", "this", "but", "anecdotally", "it", "makes", "sense", "that", "the", "first", "frame", "at", "least", "should", "have", "the", "keyframe", "type", "information", "NUMBER", "Subsequent", "frames", "can", "certainly", "be", "diffs", "NUMBER", "My", "patch", "NUMBER", "ffa", "NUMBER", "abb", "NUMBER", "dba", "NUMBER", "ffee", "NUMBER", "bdf", "NUMBER", "c", "NUMBER", "b", "be", "so", "far", "trivial", "and", "not", "really", "in", "the", "style", "of", "the", "lib", "NUMBER", "I", "can", "try", "to", "tackle", "the", "more", "in", "depth", "one", "if", "I", "have", "time", "NUMBER", "FWIW", "A", "quick", "fix", "for", "the", "size", "method", "could", "be", "to", "append", "an", "extra", "x", "in", "the", "format", "since", "the", "Geometry", "helper", "splits", "on", "x", "and", "takes", "the", "first", "NUMBER", "items", "in", "the", "array", "NUMBER", "That", "would", "at", "least", "fix", "an", "annoying", "bug", "we", "re", "seeing", "now", "NUMBER", "Situation", "A", "gif", "of", "NUMBER", "x", "NUMBER", "Doing", "gm", "NUMBER", "size", "returns", "width", "NUMBER", "height", "NUMBER", "as", "the", "width", "for", "the", "next", "frame", "be", "appended", "to", "the", "height", "NUMBER", "Command", "line", "gm", "identify", "format", "wx", "h", "verbose", "image", "NUMBER", "gif", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "gm", "identify", "format", "wx", "hx", "verbose", "image", "NUMBER", "gif", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "gm", "identify", "format", "wx", "h", "verbose", "image", "NUMBER", "gif", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "Sweet", "thanks", "closing", "as", "it", "s", "better", "just", "to", "use", "LINK", "custom", "identify", "format", "string", "NUMBER", "for", "images", "with", "layers", "NUMBER", "Hi", "I", "have", "get", "this", "error", "on", "gm", "NUMBER", "NUMBER", "node_modules", "gm", "index", "NUMBER", "js", "NUMBER", "var", "super", "gm", "SyntaxError", "TAG", "Node", "version", "NUMBER", "Yes", "it", "be", "Thnx", "Fixed", "please", "add", "gm", "composite", "commond", "and", "background", "TAG", "params", "thank", "you", "I", "want", "composite", "two", "pictures", "so", "NUMBER", "I", "need", "this", "as", "well", "and", "be", "preparing", "to", "work", "on", "it", "so", "I", "can", "send", "aheckmann", "a", "pull", "request", "NUMBER", "It", "s", "a", "bit", "daunting", "since", "it", "s", "not", "a", "simple", "additional", "arg", "on", "convert", "NUMBER", "Any", "advice", "would", "be", "MOST", "welcome", "NUMBER", "I", "m", "reviewing", "all", "the", "previous", "issue", "to", "see", "if", "there", "be", "anything", "I", "can", "glean", "from", "them", "NUMBER", "Thank", "you", "very", "much", "That", "pull", "request", "be", "just", "a", "start", "of", "what", "needs", "to", "be", "implement", "NUMBER", "Please", "feel", "free", "to", "have", "a", "look", "and", "contribute", "to", "it", "but", "by", "all", "that", "be", "good", "in", "the", "world", "don", "t", "use", "it", "in", "production", "yet", "This", "be", "what", "I", "ended", "up", "doing", "and", "it", "be", "work", "well", "NUMBER", "If", "you", "have", "a", "better", "idea", "of", "how", "it", "should", "be", "configureable", "let", "me", "know", "NUMBER", "Related", "to", "NUMBER", "better", "validation", "of", "outcomes", "yeah", "just", "never", "add", "this", "to", "LINK", "yep", "its", "ooold", "Is", "there", "an", "option", "to", "use", "the", "ImageMagick", "binary", "instead", "of", "GraphicsMagick", "since", "the", "APIs", "be", "interchangeable", "not", "right", "now", "NUMBER", "I", "be", "use", "heroku", "to", "host", "my", "app", "and", "they", "don", "t", "have", "GraphicsMagick", "NUMBER", "They", "have", "suggested", "including", "the", "GraphicsMagick", "binary", "in", "my", "project", "or", "switching", "to", "ImageMagick", "NUMBER", "Any", "suggestions", "if", "it", "works", "ok", "i", "d", "accept", "a", "patch", "for", "that", "NUMBER", "i", "think", "the", "only", "two", "places", "to", "alter", "be", "lib", "getters", "NUMBER", "js", "and", "lib", "commands", "NUMBER", "js", "NUMBER", "just", "need", "to", "make", "it", "configurable", "somehow", "Just", "switching", "in", "ImageMagick", "works", "pretty", "well", "NUMBER", "It", "fix", "the", "drawText", "error", "I", "was", "get", "in", "the", "test", "NUMBER", "There", "be", "problem", "with", "both", "dither", "and", "morph", "though", "NUMBER", "Hy", "As", "the", "title", "suggests", "I", "ask", "if", "you", "one", "could", "implement", "imagemagick", "s", "auto", "orient", "NUMBER", "Motivation", "The", "auto", "orient", "rotates", "an", "image", "according", "the", "EXIF", "data", "NUMBER", "As", "this", "be", "very", "difficult", "to", "achieve", "in", "the", "browser", "reading", "the", "EXIF", "rotating", "NUMBER", "and", "as", "ImageMagick", "already", "provides", "this", "it", "would", "make", "your", "library", "even", "more", "awesome", "and", "practical", "for", "serving", "images", "to", "a", "web", "client", "NUMBER", "Info", "The", "description", "of", "auto", "orient", "be", "over", "there", "LINK", "line", "options", "NUMBER", "php", "auto", "orient", "Cheers", "Chris", "good", "idea", "I", "m", "very", "open", "to", "pull", "request", "if", "this", "be", "something", "you", "d", "like", "to", "help", "out", "on", "too", "NUMBER", "I", "m", "pretty", "sure", "auto", "orient", "be", "only", "available", "with", "ImageMagick", "NUMBER", "I", "can", "t", "find", "a", "reference", "to", "it", "anywhere", "in", "the", "GraphicsMagick", "documentation", "and", "the", "command", "line", "be", "returning", "an", "error", "gm", "convert", "Unrecognized", "option", "auto", "orient", "NUMBER", "Well", "that", "be", "bad", "news", "I", "guess", "NUMBER", "I", "ve", "put", "together", "a", "pretty", "good", "solution", "in", "one", "of", "my", "branch", "that", "mimics", "ImageMagick", "s", "auto", "orient", "but", "it", "s", "based", "on", "the", "Streams", "branch", "that", "aheckmann", "be", "get", "ready", "to", "merge", "in", "NUMBER", "As", "soon", "as", "that", "s", "merge", "I", "ll", "submit", "another", "pull", "request", "for", "the", "AutoOrient", "feature", "NUMBER", "streams", "have", "be", "merge", "but", "there", "be", "an", "intermittent", "bug", "yet", "NUMBER", "still", "need", "to", "track", "that", "down", "before", "release", "NUMBER", "aheckmann", "this", "be", "my", "first", "attempt", "at", "faking", "ImageMagick", "s", "auto", "orient", "option", "NUMBER", "Since", "we", "have", "to", "get", "the", "orientation", "use", "identify", "and", "it", "really", "should", "be", "as", "simple", "as", "chaining", "the", "NUMBER", "autoOrient", "convenience", "method", "we", "have", "to", "be", "able", "wrap", "any", "future", "argument", "inside", "of", "autoOrient", "s", "callback", "NUMBER", "To", "do", "this", "cleanly", "I", "add", "preprocessors", "that", "be", "simply", "call", "in", "series", "before", "the", "final", "stream", "or", "write", "NUMBER", "This", "functionality", "can", "be", "use", "for", "other", "convenience", "helper", "methods", "in", "the", "future", "NUMBER", "I", "realize", "this", "isn", "t", "ideal", "but", "it", "solves", "a", "common", "problem", "and", "be", "something", "I", "need", "personally", "NUMBER", "This", "be", "the", "branch", "I", "ve", "actually", "be", "run", "off", "of", "recently", "and", "it", "seems", "to", "work", "great", "NUMBER", "If", "you", "have", "any", "other", "ideas", "on", "how", "to", "solve", "this", "let", "me", "know", "NUMBER", "UPDATE", "I", "just", "rebased", "on", "your", "latest", "commit", "when", "probably", "I", "should", "ve", "merge", "so", "beware", "if", "you", "already", "pull", "in", "those", "commit", "NUMBER", "Sorry", "NUMBER", "Cool", "thanks", "a", "lot", "Chris", "Hey", "graphicsmagik", "returns", "IPTC", "data", "such", "as", "caption", "GPS", "etc", "on", "the", "command", "line", "gm", "identify", "ping", "verbose", "image", "NUMBER", "jpg", "However", "the", "node", "gm", "identify", "wrapper", "only", "returns", "a", "subset", "of", "this", "data", "even", "thought", "it", "uses", "the", "same", "command", "as", "above", "NUMBER", "I", "believe", "only", "few", "change", "will", "be", "needed", "to", "the", "parser", "that", "transforms", "stdout", "to", "JSON", "NUMBER", "i", "ll", "take", "a", "look", "when", "i", "get", "a", "chance", "unless", "you", "d", "like", "to", "take", "a", "stab", "at", "it", "first", "awesome", "I", "don", "t", "have", "access", "to", "my", "dev", "machine", "this", "weekend", "but", "i", "ll", "test", "it", "out", "first", "thing", "monday", "Hey", "just", "had", "a", "play", "with", "master", "NUMBER", "It", "seems", "to", "be", "mostly", "work", "but", "I", "think", "the", "IPTC", "tags", "not", "get", "parsed", "NUMBER", "Specifically", "it", "be", "the", "Profile", "iptc", "section", "NUMBER", "Everything", "in", "the", "Profile", "EXIF", "section", "be", "correctly", "parsed", "into", "the", "result", "NUMBER", "Below", "I", "have", "the", "output", "from", "an", "image", "with", "IPTC", "and", "EXIF", "data", "from", "both", "the", "command", "line", "and", "the", "node", "wrapper", "NUMBER", "The", "node", "wrapper", "NUMBER", "gm", "Arequipe", "NUMBER", "jpg", "NUMBER", "identify", "cb", "_options", "data", "_in", "_out", "source", "Arequipe", "NUMBER", "jpg", "bufferStream", "false", "_iq", "Function", "_identifying", "true", "null", "Format", "JPEG", "Joint", "Photographic", "Experts", "Group", "JFIF", "format", "format", "JPEG", "Geometry", "NUMBER", "x", "NUMBER", "size", "width", "NUMBER", "height", "NUMBER", "Class", "DirectClass", "Type", "true", "color", "Depth", "NUMBER", "bits", "per", "pixel", "component", "depth", "NUMBER", "Channel", "Depths", "Red", "NUMBER", "bits", "Green", "NUMBER", "bits", "Blue", "NUMBER", "bits", "Channel", "Statistics", "Red", "Minimum", "NUMBER", "NUMBER", "Maximum", "NUMBER", "NUMBER", "Mean", "NUMBER", "NUMBER", "Standard", "Deviation", "NUMBER", "NUMBER", "Green", "Minimum", "NUMBER", "NUMBER", "Maximum", "NUMBER", "NUMBER", "Mean", "NUMBER", "NUMBER", "Standard", "Deviation", "NUMBER", "NUMBER", "Blue", "Minimum", "NUMBER", "NUMBER", "Maximum", "NUMBER", "NUMBER", "Mean", "NUMBER", "NUMBER", "Standard", "Deviation", "NUMBER", "NUMBER", "Resolution", "NUMBER", "x", "NUMBER", "pixels", "inch", "Filesize", "NUMBER", "K", "Interlace", "No", "Orientation", "TopLeft", "Background", "Color", "white", "Border", "Color", "DFDFDF", "Matte", "Color", "BDBDBD", "Compose", "Over", "Dispose", "Undefined", "Iterations", "NUMBER", "Compression", "JPEG", "JPEG", "Quality", "NUMBER", "JPEG", "Colorspace", "NUMBER", "JPEG", "Colorspace", "Name", "RGB", "JPEG", "Sampling", "factors", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "Signature", "a", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "bb", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "da", "NUMBER", "be", "Profile", "color", "NUMBER", "bytes", "Profile", "iptc", "NUMBER", "x", "NUMBER", "Profile", "EXIF", "Make", "NIKON", "CORPORATION", "Model", "NIKON", "D", "NUMBER", "Orientation", "NUMBER", "X", "Resolution", "NUMBER", "NUMBER", "Y", "Resolution", "NUMBER", "NUMBER", "Resolution", "Unit", "NUMBER", "Software", "Aperture", "NUMBER", "Date", "Time", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Exif", "Offset", "NUMBER", "Exposure", "Time", "NUMBER", "NUMBER", "F", "Number", "NUMBER", "NUMBER", "Exposure", "Program", "NUMBER", "ISO", "Speed", "Ratings", "NUMBER", "Exif", "Version", "NUMBER", "Date", "Time", "Original", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Date", "Time", "Digitized", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Components", "Configuration", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Compressed", "Bits", "Per", "Pixel", "NUMBER", "NUMBER", "Exposure", "Bias", "Value", "NUMBER", "NUMBER", "Max", "Aperture", "Value", "NUMBER", "NUMBER", "Metering", "Mode", "NUMBER", "Light", "Source", "NUMBER", "Flash", "NUMBER", "Focal", "Length", "NUMBER", "NUMBER", "User", "Comment", "ASCII", "NUMBER", "NUMBER", "NUMBER", "Sub", "Sec", "Time", "NUMBER", "Sub", "Sec", "Time", "Original", "NUMBER", "Sub", "Sec", "Time", "Digitized", "NUMBER", "Flash", "Pix", "Version", "NUMBER", "Color", "Space", "NUMBER", "Exif", "Image", "Width", "NUMBER", "Exif", "Image", "Length", "NUMBER", "Sensing", "Method", "NUMBER", "Custom", "Rendered", "NUMBER", "Exposure", "Mode", "NUMBER", "White", "Balance", "NUMBER", "Digital", "Zoom", "Ratio", "NUMBER", "NUMBER", "Focal", "Length", "In", "NUMBER", "mm", "Film", "NUMBER", "Scene", "Capture", "Type", "NUMBER", "Gain", "Control", "NUMBER", "Contrast", "NUMBER", "Saturation", "NUMBER", "Sharpness", "NUMBER", "Subject", "Distance", "Range", "NUMBER", "GPS", "Info", "NUMBER", "GPS", "Latitude", "Ref", "S", "GPS", "Latitude", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GPS", "Longitude", "Ref", "W", "GPS", "Longitude", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Profile", "APP", "NUMBER", "NUMBER", "bytes", "Tainted", "False", "User", "Time", "NUMBER", "u", "Elapsed", "Time", "NUMBER", "NUMBER", "Pixels", "Per", "Second", "NUMBER", "M", "And", "heres", "the", "output", "from", "the", "command", "line", "gm", "identify", "verbose", "Arequipe", "NUMBER", "jpg", "Image", "Arequipe", "NUMBER", "jpg", "Format", "JPEG", "Joint", "Photographic", "Experts", "Group", "JFIF", "format", "Geometry", "NUMBER", "x", "NUMBER", "Class", "DirectClass", "Type", "true", "color", "Depth", "NUMBER", "bits", "per", "pixel", "component", "Channel", "Depths", "Red", "NUMBER", "bits", "Green", "NUMBER", "bits", "Blue", "NUMBER", "bits", "Channel", "Statistics", "Red", "Minimum", "NUMBER", "NUMBER", "Maximum", "NUMBER", "NUMBER", "Mean", "NUMBER", "NUMBER", "Standard", "Deviation", "NUMBER", "NUMBER", "Green", "Minimum", "NUMBER", "NUMBER", "Maximum", "NUMBER", "NUMBER", "Mean", "NUMBER", "NUMBER", "Standard", "Deviation", "NUMBER", "NUMBER", "Blue", "Minimum", "NUMBER", "NUMBER", "Maximum", "NUMBER", "NUMBER", "Mean", "NUMBER", "NUMBER", "Standard", "Deviation", "NUMBER", "NUMBER", "Resolution", "NUMBER", "x", "NUMBER", "pixels", "inch", "Filesize", "NUMBER", "K", "Interlace", "No", "Orientation", "TopLeft", "Background", "Color", "white", "Border", "Color", "DFDFDF", "Matte", "Color", "BDBDBD", "Compose", "Over", "Dispose", "Undefined", "Iterations", "NUMBER", "Compression", "JPEG", "JPEG", "Quality", "NUMBER", "JPEG", "Colorspace", "NUMBER", "JPEG", "Colorspace", "Name", "RGB", "JPEG", "Sampling", "factors", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "Signature", "a", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "bb", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "da", "NUMBER", "be", "Profile", "color", "NUMBER", "bytes", "Profile", "iptc", "NUMBER", "bytes", "City", "NUMBER", "x", "NUMBER", "NUMBER", "unknown", "Copyright", "String", "D", "MALAM", "Byline", "Dharmesh", "Malam", "Image", "Name", "Color", "Shadow", "Profile", "EXIF", "NUMBER", "bytes", "Make", "NIKON", "CORPORATION", "Model", "NIKON", "D", "NUMBER", "Orientation", "NUMBER", "X", "Resolution", "NUMBER", "NUMBER", "Y", "Resolution", "NUMBER", "NUMBER", "Resolution", "Unit", "NUMBER", "Software", "Aperture", "NUMBER", "Date", "Time", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Exif", "Offset", "NUMBER", "Exposure", "Time", "NUMBER", "NUMBER", "F", "Number", "NUMBER", "NUMBER", "Exposure", "Program", "NUMBER", "ISO", "Speed", "Ratings", "NUMBER", "Exif", "Version", "NUMBER", "Date", "Time", "Original", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Date", "Time", "Digitized", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Components", "Configuration", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Compressed", "Bits", "Per", "Pixel", "NUMBER", "NUMBER", "Exposure", "Bias", "Value", "NUMBER", "NUMBER", "Max", "Aperture", "Value", "NUMBER", "NUMBER", "Metering", "Mode", "NUMBER", "Light", "Source", "NUMBER", "Flash", "NUMBER", "Focal", "Length", "NUMBER", "NUMBER", "User", "Comment", "ASCII", "NUMBER", "NUMBER", "NUMBER", "Sub", "Sec", "Time", "NUMBER", "Sub", "Sec", "Time", "Original", "NUMBER", "Sub", "Sec", "Time", "Digitized", "NUMBER", "Flash", "Pix", "Version", "NUMBER", "Color", "Space", "NUMBER", "Exif", "Image", "Width", "NUMBER", "Exif", "Image", "Length", "NUMBER", "Sensing", "Method", "NUMBER", "Custom", "Rendered", "NUMBER", "Exposure", "Mode", "NUMBER", "White", "Balance", "NUMBER", "Digital", "Zoom", "Ratio", "NUMBER", "NUMBER", "Focal", "Length", "In", "NUMBER", "mm", "Film", "NUMBER", "Scene", "Capture", "Type", "NUMBER", "Gain", "Control", "NUMBER", "Contrast", "NUMBER", "Saturation", "NUMBER", "Sharpness", "NUMBER", "Subject", "Distance", "Range", "NUMBER", "GPS", "Info", "NUMBER", "GPS", "Latitude", "Ref", "S", "GPS", "Latitude", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GPS", "Longitude", "Ref", "W", "GPS", "Longitude", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Profile", "APP", "NUMBER", "NUMBER", "bytes", "Tainted", "False", "User", "Time", "NUMBER", "u", "Elapsed", "Time", "NUMBER", "NUMBER", "Pixels", "Per", "Second", "NUMBER", "M", "Would", "it", "be", "possible", "to", "add", "buffer", "as", "one", "of", "the", "options", "for", "gm", "Reason", "I", "ask", "be", "because", "I", "m", "reading", "a", "stream", "for", "a", "base", "NUMBER", "encoded", "image", "and", "I", "create", "a", "new", "buffer", "from", "it", "but", "since", "gm", "only", "accepts", "a", "string", "I", "have", "to", "write", "it", "to", "file", "first", "and", "then", "read", "the", "file", "instead", "of", "be", "able", "to", "go", "straight", "to", "gm", "with", "the", "buffer", "NUMBER", "Thanks", "this", "module", "be", "simply", "passing", "the", "args", "down", "to", "a", "child_process", "where", "the", "actual", "graphicsmagick", "command", "be", "executed", "NUMBER", "none", "of", "the", "img", "manipulatation", "be", "do", "within", "node", "so", "Buffer", "support", "isn", "t", "really", "applicable", "NUMBER", "I", "ve", "bump", "into", "this", "NUMBER", "I", "need", "to", "generate", "multiple", "thumbnails", "different", "dimensions", "of", "the", "same", "original", "image", "NUMBER", "Being", "able", "to", "read", "the", "file", "from", "disk", "once", "and", "feed", "the", "buffer", "to", "gm", "multiple", "times", "be", "better", "than", "having", "gm", "read", "the", "file", "from", "disk", "multiple", "times", "NUMBER", "aheckmann", "Do", "you", "think", "this", "makes", "sense", "I", "could", "probably", "work", "out", "a", "PR", "if", "you", "d", "like", "NUMBER", "Thanks"], "text_count": [0, 5003, 1170, 565, 398, 26, 400, 0, 19, 604, 754, 1269, 679, 523, 586, 232, 0, 0, 0, 0, 1572, 411, 251, 169, 441, 233, 0, 0, 0, 0, 2942, 1745, 1179, 31, 690, 224, 0, 0, 0, 0, 3991, 23, 2066, 1965, 910, 0, 0, 0, 0, 0, 902, 380, 425, 255, 445, 174, 402, 0, 0, 0, 2725, 356, 2078, 186, 0, 0, 0, 0, 0, 0, 1932, 159, 1457, 735, 155, 0, 0, 0, 0, 0, 3987, 2206, 347, 1299, 208, 125, 0, 0, 0, 0, 231, 1059, 80, 0, 0, 0, 0, 0, 0, 0, 2975, 663, 1807, 616, 0, 0, 0, 0, 0, 0, 5658, 10998, 91, 425, 312, 174, 0, 0, 0, 0, 15469, 40, 11359, 265, 2738, 3470]}]